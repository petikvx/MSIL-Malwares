// Decompiled with JetBrains decompiler
// Type: ManagerMarket.AddKH
// Assembly: cDisplayClass310, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8C7A4461-A171-4409-B75B-AB5BE5ABB986
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.04-msil\Backdoor.Win32.Blakken.vor-a227cf3f5fb90a859db6b3a95e95ead7b01dc01615de5433710205c6cd58ec78.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace ManagerMarket
{
  [DesignerGenerated]
  public class AddKH : Form
  {
    private IContainer components;
    private DataBaseAccess dataaccess;

    public AddKH()
    {
      this.Load += new EventHandler(this.AddKH_Load);
      this.dataaccess = new DataBaseAccess();
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      this.Label1 = new Label();
      this.Label2 = new Label();
      this.Label3 = new Label();
      this.Label4 = new Label();
      this.txtMakh = new TextBox();
      this.txtTenkh = new TextBox();
      this.txtDiachi = new TextBox();
      this.txtSDT = new TextBox();
      this.btnDone = new Button();
      this.btnGetout = new Button();
      this.SuspendLayout();
      this.Label1.AutoSize = true;
      this.Label1.Location = new Point(12, 35);
      this.Label1.Name = "Label1";
      this.Label1.Size = new Size(40, 13);
      this.Label1.TabIndex = 0;
      this.Label1.Text = "Ma KH";
      this.Label2.AutoSize = true;
      this.Label2.Location = new Point(12, 66);
      this.Label2.Name = "Label2";
      this.Label2.Size = new Size(44, 13);
      this.Label2.TabIndex = 1;
      this.Label2.Text = "Ten KH";
      this.Label3.AutoSize = true;
      this.Label3.Location = new Point(12, 99);
      this.Label3.Name = "Label3";
      this.Label3.Size = new Size(41, 13);
      this.Label3.TabIndex = 2;
      this.Label3.Text = "Dia Chi";
      this.Label4.AutoSize = true;
      this.Label4.Location = new Point(12, 133);
      this.Label4.Name = "Label4";
      this.Label4.Size = new Size(29, 13);
      this.Label4.TabIndex = 3;
      this.Label4.Text = "SDT";
      this.txtMakh.Location = new Point(77, 32);
      this.txtMakh.Name = "txtMakh";
      this.txtMakh.Size = new Size(174, 20);
      this.txtMakh.TabIndex = 4;
      this.txtTenkh.Location = new Point(77, 63);
      this.txtTenkh.Name = "txtTenkh";
      this.txtTenkh.Size = new Size(174, 20);
      this.txtTenkh.TabIndex = 5;
      this.txtDiachi.Location = new Point(77, 96);
      this.txtDiachi.Name = "txtDiachi";
      this.txtDiachi.Size = new Size(174, 20);
      this.txtDiachi.TabIndex = 6;
      this.txtSDT.Location = new Point(77, 133);
      this.txtSDT.Name = "txtSDT";
      this.txtSDT.Size = new Size(174, 20);
      this.txtSDT.TabIndex = 7;
      this.btnDone.Location = new Point(35, 181);
      this.btnDone.Name = "btnDone";
      this.btnDone.Size = new Size(75, 23);
      this.btnDone.TabIndex = 8;
      this.btnDone.Text = "Done";
      this.btnDone.UseVisualStyleBackColor = true;
      this.btnGetout.Location = new Point(176, 181);
      this.btnGetout.Name = "btnGetout";
      this.btnGetout.Size = new Size(75, 23);
      this.btnGetout.TabIndex = 9;
      this.btnGetout.Text = "Get out";
      this.btnGetout.UseVisualStyleBackColor = true;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(284, 262);
      this.Controls.Add((Control) this.btnGetout);
      this.Controls.Add((Control) this.btnDone);
      this.Controls.Add((Control) this.txtSDT);
      this.Controls.Add((Control) this.txtDiachi);
      this.Controls.Add((Control) this.txtTenkh);
      this.Controls.Add((Control) this.txtMakh);
      this.Controls.Add((Control) this.Label4);
      this.Controls.Add((Control) this.Label3);
      this.Controls.Add((Control) this.Label2);
      this.Controls.Add((Control) this.Label1);
      this.Name = nameof (AddKH);
      this.Text = nameof (AddKH);
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    [field: AccessedThroughProperty("Label1")]
    internal virtual Label Label1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("Label2")]
    internal virtual Label Label2 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("Label3")]
    internal virtual Label Label3 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("Label4")]
    internal virtual Label Label4 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("txtMakh")]
    internal virtual TextBox txtMakh { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("txtTenkh")]
    internal virtual TextBox txtTenkh { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("txtDiachi")]
    internal virtual TextBox txtDiachi { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("txtSDT")]
    internal virtual TextBox txtSDT { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual Button btnDone
    {
      get => this._btnDone;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.btnDone_Click);
        Button btnDone1 = this._btnDone;
        if (btnDone1 != null)
          btnDone1.Click -= eventHandler;
        this._btnDone = value;
        Button btnDone2 = this._btnDone;
        if (btnDone2 == null)
          return;
        btnDone2.Click += eventHandler;
      }
    }

    internal virtual Button btnGetout
    {
      get => this._btnGetout;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.btnGetout_Click);
        Button btnGetout1 = this._btnGetout;
        if (btnGetout1 != null)
          btnGetout1.Click -= eventHandler;
        this._btnGetout = value;
        Button btnGetout2 = this._btnGetout;
        if (btnGetout2 == null)
          return;
        btnGetout2.Click += eventHandler;
      }
    }

    private bool AddStudent() => this.dataaccess.ExecuteNoneQuery("INSERT INTO KhachHang (MaKH,TenKH,Diachi,SoDT)" + string.Format("VALUES ('{0}','{1}','{2}','{3}')", (object) this.txtMakh.Text, (object) this.txtTenkh.Text, (object) this.txtDiachi.Text, (object) this.txtSDT.Text));

    private bool IsEmpty() => string.IsNullOrEmpty(this.txtMakh.Text) || string.IsNullOrEmpty(this.txtTenkh.Text) || string.IsNullOrEmpty(this.txtDiachi.Text) || string.IsNullOrEmpty(this.txtSDT.Text);

    private bool UpdateKH() => this.dataaccess.ExecuteNoneQuery(string.Format("UPDATE KhachHang SET TenKH = '{0}', Diachi = '{1}', SoDT = '{2}' WHERE MaKH = '{3}'", (object) this.txtTenkh.Text, (object) this.txtDiachi.Text, (object) this.txtSDT.Text, (object) this.txtMakh.Text));

    private void btnDone_Click(object sender, EventArgs e)
    {
      if (this.IsEmpty())
      {
        int num1 = (int) MessageBox.Show("Chua nhap gia tri", "Error", MessageBoxButtons.OK);
      }
      else
      {
        if (this.AddStudent())
        {
          int num2 = (int) MessageBox.Show("Them thanh cong", "Success", MessageBoxButtons.OK);
          this.DialogResult = DialogResult.OK;
        }
        else
        {
          int num3 = (int) MessageBox.Show("Them that bai", "Error", MessageBoxButtons.OK);
          this.DialogResult = DialogResult.No;
        }
        this.Close();
      }
    }

    private void btnGetout_Click(object sender, EventArgs e) => this.Close();

    private void AddKH_Load(object sender, EventArgs e)
    {
    }
  }
}
