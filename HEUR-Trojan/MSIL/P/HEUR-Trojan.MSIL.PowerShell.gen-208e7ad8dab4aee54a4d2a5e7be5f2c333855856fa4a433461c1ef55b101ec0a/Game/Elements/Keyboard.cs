// Decompiled with JetBrains decompiler
// Type: Game.Elements.Keyboard
// Assembly: SHA384Mana, Version=2.1.4.10, Culture=neutral, PublicKeyToken=null
// MVID: B6D2A9B2-9B43-4C18-A521-64033E474772
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.PowerShell.gen-208e7ad8dab4aee54a4d2a5e7be5f2c333855856fa4a433461c1ef55b101ec0a.exe

using System.Windows.Forms;

namespace Game.Elements
{
  public class Keyboard
  {
    public bool Left { get; private set; }

    public bool Right { get; private set; }

    public bool Up { get; private set; }

    public bool Down { get; private set; }

    public bool Space { get; private set; }

    public void SetKey(Keys key)
    {
      bool flag1 = key == Keys.Left;
label_1:
      int num1 = 437821124;
      bool flag2;
      bool flag3;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 54556277)) % 15U)
        {
          case 0:
            this.Left = true;
            num1 = (int) num2 * 922408501 ^ 310901276;
            continue;
          case 1:
            num1 = (int) num2 * 1177407490 ^ 1074607178;
            continue;
          case 2:
            int num3;
            num1 = num3 = key != Keys.Down ? 1762514944 : (num3 = 1875647372);
            continue;
          case 3:
            this.Space = true;
            num1 = (int) num2 * -713262951 ^ -542778824;
            continue;
          case 4:
            goto label_3;
          case 5:
            int num4 = !flag3 ? -681375205 : (num4 = -1919056555);
            num1 = num4 ^ (int) num2 * -1198786822;
            continue;
          case 6:
            this.Down = true;
            num1 = (int) num2 * -992575787 ^ 1746130477;
            continue;
          case 7:
            int num5 = flag2 ? 1754548233 : (num5 = 1400352116);
            num1 = num5 ^ (int) num2 * 672074650;
            continue;
          case 8:
            this.Up = true;
            num1 = (int) num2 * 77574558 ^ 1416752463;
            continue;
          case 9:
            flag2 = key == Keys.Space;
            num1 = 1754949980;
            continue;
          case 10:
            flag3 = key == Keys.Up;
            num1 = 1587202291;
            continue;
          case 11:
            goto label_1;
          case 12:
            int num6 = !flag1 ? 1854330198 : (num6 = 1868700341);
            num1 = num6 ^ (int) num2 * -1428439990;
            continue;
          case 13:
            int num7;
            num1 = num7 = key != Keys.Right ? 1214570357 : (num7 = 1328351982);
            continue;
          case 14:
            this.Right = true;
            num1 = (int) num2 * -1988343866 ^ -2143976553;
            continue;
          default:
            goto label_17;
        }
      }
label_3:
      return;
label_17:;
    }

    public void Clear()
    {
label_1:
      int num1 = -571078532;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1698724343)) % 10U)
        {
          case 0:
            this.Up = false;
            num1 = (int) num2 * -1733599017 ^ 1675328503;
            continue;
          case 1:
            num1 = (int) num2 * -1612595223 ^ -700308082;
            continue;
          case 2:
            goto label_3;
          case 3:
            this.Left = false;
            num1 = (int) num2 * -294063795 ^ -364973997;
            continue;
          case 4:
            this.Space = false;
            num1 = (int) num2 * -1636643359 ^ -1585569225;
            continue;
          case 5:
            this.Down = false;
            num1 = (int) num2 * -1824841626 ^ -638828625;
            continue;
          case 6:
            this.Right = false;
            num1 = (int) num2 * -1869550363 ^ 1064877158;
            continue;
          case 7:
            goto label_1;
          case 8:
            num1 = (int) num2 * -750896588 ^ -1313604922;
            continue;
          case 9:
            num1 = (int) num2 * -1091600063 ^ -608981580;
            continue;
          default:
            goto label_12;
        }
      }
label_3:
      return;
label_12:;
    }

    public Keyboard()
    {
label_1:
      int num1 = 1061899168;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 612745681)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * -125981282 ^ -1041186063;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }
  }
}
