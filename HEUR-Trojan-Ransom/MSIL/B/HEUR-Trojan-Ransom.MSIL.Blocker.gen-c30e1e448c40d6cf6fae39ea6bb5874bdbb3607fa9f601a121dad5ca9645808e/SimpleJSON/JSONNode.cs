// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: SingleArrayTypeIn, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 96646636-5181-465D-A45F-CFFED007E535
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-c30e1e448c40d6cf6fae39ea6bb5874bdbb3607fa9f601a121dad5ca9645808e.exe

using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) null;
label_1:
        int num1 = 125978189;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1768360481)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 1635617037 ^ -701662244;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -676498952;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1377965219)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 1588096640 ^ 1353295266;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual string Value
    {
      get
      {
        string str = "";
label_1:
        int num1 = 808085384;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 806429065)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -1743536592 ^ -1082166275;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return str;
      }
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
label_1:
        int num1 = -1605006927;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2038632368)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 925840235 ^ 1774339335;
              continue;
            case 1:
              count = 0;
              num1 = (int) num2 * 834502547 ^ 1518787199;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem) => this.Add("", aItem);

    public virtual JSONNode Remove(string aKey)
    {
      JSONNode jsonNode = (JSONNode) null;
label_1:
      int num1 = -1607022343;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -365562113)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 411745510 ^ 93017640;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(int aIndex) => (JSONNode) null;

    public virtual JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = 978838793;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 665199324)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -1592045807 ^ -851912970;
            continue;
          case 1:
            jsonNode = aNode;
            num1 = (int) num2 * 1568540589 ^ -1081391663;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONNode.\u003Cget_Childs\u003Ed__17 getChildsD17 = new JSONNode.\u003Cget_Childs\u003Ed__17(-2);
label_1:
        int num1 = -2124131372;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -683241461)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              childs = (IEnumerable<JSONNode>) getChildsD17;
              num1 = (int) num2 * -1766303339 ^ 2069058992;
              continue;
            case 3:
              getChildsD17.\u003C\u003E4__this = this;
              num1 = (int) num2 * -1788838696 ^ 1099022465;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return childs;
      }
    }

    public IEnumerable<JSONNode> DeepChilds
    {
      get
      {
        JSONNode.\u003Cget_DeepChilds\u003Ed__19 deepChilds = new JSONNode.\u003Cget_DeepChilds\u003Ed__19(-2);
label_1:
        int num1 = 379192344;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1442204343)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              deepChilds.\u003C\u003E4__this = this;
              num1 = (int) num2 * 1813353652 ^ 960145049;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return (IEnumerable<JSONNode>) deepChilds;
      }
    }

    public override string ToString()
    {
      string str = nameof (JSONNode);
label_1:
      int num1 = 1981311957;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1975343244)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * 1902429827 ^ -1295232313;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual string ToString(string aPrefix) => nameof (JSONNode);

    public virtual int AsInt
    {
      get
      {
label_1:
        int num1 = -525886962;
        bool flag;
        int result;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1254214993)) % 8U)
          {
            case 0:
              goto label_1;
            case 1:
              result = 0;
              num1 = (int) num2 * -1138937112 ^ 1356303659;
              continue;
            case 2:
              asInt = result;
              num1 = (int) num2 * -1587187519 ^ -276299429;
              continue;
            case 3:
              int num3 = !flag ? -272113183 : (num3 = -1089194740);
              num1 = num3 ^ (int) num2 * -540797597;
              continue;
            case 4:
              flag = int.TryParse(this.Value, out result);
              num1 = (int) num2 * 1961488687 ^ 1391007832;
              continue;
            case 6:
              num1 = (int) num2 * 189431235 ^ -1501937744;
              continue;
            case 7:
              asInt = 0;
              num1 = -1143443926;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asInt;
      }
      set
      {
        this.Value = value.ToString();
label_1:
        int num1 = -947402309;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -728044826)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              num1 = (int) num2 * 1871699306 ^ -2122232717;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual float AsFloat
    {
      get
      {
label_1:
        int num1 = -1811660711;
        float asFloat;
        float result;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -356454040)) % 9U)
          {
            case 0:
              asFloat = result;
              num1 = (int) num2 * 1411411720 ^ -1749194893;
              continue;
            case 1:
              num1 = (int) num2 * -1490968023 ^ 891871784;
              continue;
            case 2:
              flag = float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u202B‬‭‪‎⁭‬‍⁭⁯⁯⁬‏⁮‏‌‭‭‍‪‬⁭‬⁫‫⁫‫‫⁪⁫‬⁭⁫‫‭‍‮‏‮⁭‮(), out result);
              num1 = (int) num2 * -261258091 ^ 2065201411;
              continue;
            case 3:
              num1 = (int) num2 * -1265335391 ^ 419600783;
              continue;
            case 4:
              asFloat = 0.0f;
              num1 = -310602284;
              continue;
            case 5:
              result = 0.0f;
              num1 = (int) num2 * 1791861571 ^ 1175094034;
              continue;
            case 6:
              goto label_1;
            case 7:
              int num3 = !flag ? 983959538 : (num3 = 1725373789);
              num1 = num3 ^ (int) num2 * 279687179;
              continue;
            default:
              goto label_10;
          }
        }
label_10:
        return asFloat;
      }
      set
      {
label_1:
        int num1 = 908204911;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 20823464)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Value = value.ToString();
              num1 = (int) num2 * -1854724854 ^ 448229480;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual double AsDouble
    {
      get
      {
label_1:
        int num1 = -2119035429;
        double result;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -325206863)) % 7U)
          {
            case 1:
              num1 = (int) num2 * 521841967 ^ -600463710;
              continue;
            case 2:
              asDouble = 0.0;
              num1 = -369817668;
              continue;
            case 3:
              asDouble = result;
              num1 = (int) num2 * 1423378255 ^ -1286478985;
              continue;
            case 4:
              goto label_1;
            case 5:
              result = 0.0;
              num1 = (int) num2 * -1956419220 ^ 504141922;
              continue;
            case 6:
              int num3 = double.TryParse(this.Value, out result) ? 1387085708 : (num3 = 820247844);
              num1 = num3 ^ (int) num2 * -637741371;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asDouble;
      }
      set => this.Value = value.ToString();
    }

    public virtual bool AsBool
    {
      get
      {
label_1:
        int num1 = -1473474316;
        bool result;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -209670218)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              asBool = result;
              num1 = (int) num2 * 1001185908 ^ -1605433674;
              continue;
            case 2:
              result = false;
              int num3 = !bool.TryParse(this.Value, out result) ? 1835498467 : (num3 = 910181185);
              num1 = num3 ^ (int) num2 * -105500967;
              continue;
            case 3:
              num1 = (int) num2 * -921026909 ^ 306567025;
              continue;
            case 5:
              asBool = !JSONNode.\u202A‌‫‬‭‬⁯‍⁯‬⁫‫‌⁮⁯​⁫⁪⁬⁯⁬⁭⁯⁮‪‬⁮‬⁭‮‏‫​‌‫⁮‎‫⁭‌‮(this.Value);
              num1 = -1238379497;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asBool;
      }
      set
      {
        this.Value = value ? "true" : "false";
label_1:
        int num1 = -206496286;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -427626547)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 1441822403 ^ 521185821;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual JSONArray AsArray => this as JSONArray;

    public virtual JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = 953638634;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 478932573)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 970403876 ^ 1910042992;
              continue;
            case 2:
              goto label_1;
            case 3:
              asObject = this as JSONClass;
              num1 = (int) num2 * -515939810 ^ 137201047;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s)
    {
label_1:
      int num1 = 120401923;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 867374462)) % 4U)
        {
          case 1:
            jsonNode = (JSONNode) new JSONData(s);
            num1 = (int) num2 * 1230040168 ^ -1427053192;
            continue;
          case 2:
            num1 = (int) num2 * 1496575244 ^ -134098786;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public static implicit operator string(JSONNode d)
    {
label_1:
      int num1 = 540942684;
      string str1;
      while (true)
      {
        uint num2;
        string str2;
        switch ((num2 = (uint) (num1 ^ 1357854601)) % 5U)
        {
          case 0:
            str2 = d.Value;
            break;
          case 1:
            if (!(d == (object) null))
            {
              num1 = (int) num2 * 455431622 ^ 827555108;
              continue;
            }
            str2 = (string) null;
            break;
          case 2:
            goto label_1;
          case 4:
            num1 = (int) num2 * 426902140 ^ 82767087;
            continue;
          default:
            goto label_9;
        }
        str1 = str2;
        num1 = 393395665;
      }
label_9:
      return str1;
    }

    public static bool operator ==(JSONNode a, object b)
    {
      if (b != null)
        goto label_4;
label_1:
      int num1 = -61340854;
label_2:
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1710181968)) % 6U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 2023408215 ^ 1381310606;
            continue;
          case 2:
            goto label_3;
          case 3:
            flag = true;
            num1 = (int) num2 * -348455895 ^ -104248438;
            continue;
          case 4:
            flag = (object) a == b;
            num1 = -1475665577;
            continue;
          default:
            goto label_9;
        }
      }
label_3:
      int num3 = a is JSONLazyCreator ? 1 : 0;
      goto label_5;
label_9:
      return flag;
label_4:
      num3 = 0;
label_5:
      num1 = num3 != 0 ? -2852387 : (num1 = -270438456);
      goto label_2;
    }

    public static bool operator !=(JSONNode a, object b)
    {
label_1:
      int num1 = 394026708;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 862510378)) % 4U)
        {
          case 1:
            num1 = (int) num2 * -1718529974 ^ 2124582440;
            continue;
          case 2:
            flag = !(a == b);
            num1 = (int) num2 * 468158206 ^ 499246483;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = -1752453672;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2144519503)) % 4U)
        {
          case 1:
            flag = (object) this == obj;
            num1 = (int) num2 * 121464898 ^ 1766127513;
            continue;
          case 2:
            num1 = (int) num2 * 661237152 ^ -1146528607;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override int GetHashCode()
    {
label_1:
      int num1 = 481927379;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1566449046)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            hashCode = this.\u206F‪‎⁬‬⁮‬⁭‪‭‬⁬‫⁪⁫​​‪​‬‬⁮​‫‎‮​​‏​‎​⁪‎‭​⁯‎‏‪‮();
            num1 = (int) num2 * -956837294 ^ 45957653;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return hashCode;
    }

    internal static string Escape(string aText)
    {
label_1:
      int num1 = -36821003;
      string str1;
      int num2;
      char ch1;
      string str2;
      char ch2;
      string str3;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -496671592)) % 30U)
        {
          case 0:
            num1 = (int) num3 * -1721249520 ^ 33460504;
            continue;
          case 1:
            num1 = (int) num3 * -1949036236 ^ -1137546652;
            continue;
          case 2:
            num1 = (int) num3 * -1203230569 ^ 317985676;
            continue;
          case 3:
            str2 = "";
            num1 = (int) num3 * -600022394 ^ 1922446104;
            continue;
          case 4:
            num1 = (int) num3 * 76681504 ^ 371336276;
            continue;
          case 5:
            num1 = (int) num3 * 1336264794 ^ 1054598174;
            continue;
          case 6:
            ++num2;
            num1 = -742263129;
            continue;
          case 7:
label_13:
            str2 = JSONNode.\u200B‍⁪⁭‫⁪‎‌‪⁫⁬‏‭‫⁬⁯⁭‫⁪⁯⁮‬‬⁭‏⁮​⁪‮‮‫‌⁮‮‭​‭‍‏⁬‮(str2, "\\r");
            num1 = -55809657;
            continue;
          case 8:
label_11:
            str2 = JSONNode.\u200B‍⁪⁭‫⁪‎‌‪⁫⁬‏‭‫⁬⁯⁭‫⁪⁯⁮‬‬⁭‏⁮​⁪‮‮‫‌⁮‮‭​‭‍‏⁬‮(str2, ch1.ToString());
            num1 = -734908168;
            continue;
          case 9:
            int num4;
            num1 = num4 = ch2 == '"' ? -1977869428 : (num4 = -218151278);
            continue;
          case 10:
            switch (ch2)
            {
              case '\b':
                goto label_15;
              case '\t':
                goto label_18;
              case '\n':
                goto label_6;
              case '\v':
                goto label_11;
              case '\f':
                goto label_22;
              case '\r':
                goto label_13;
              default:
                num1 = (int) num3 * -854309380 ^ -762961627;
                continue;
            }
          case 11:
            num1 = (int) num3 * -1977824215 ^ -968619284;
            continue;
          case 12:
            str2 = JSONNode.\u200B‍⁪⁭‫⁪‎‌‪⁫⁬‏‭‫⁬⁯⁭‫⁪⁯⁮‬‬⁭‏⁮​⁪‮‮‫‌⁮‮‭​‭‍‏⁬‮(str2, "\\\"");
            num1 = -1348963237;
            continue;
          case 13:
label_15:
            str2 = JSONNode.\u200B‍⁪⁭‫⁪‎‌‪⁫⁬‏‭‫⁬⁯⁭‫⁪⁯⁮‬‬⁭‏⁮​⁪‮‮‫‌⁮‮‭​‭‍‏⁬‮(str2, "\\b");
            num1 = -332929882;
            continue;
          case 14:
            str1 = aText;
            num2 = 0;
            num1 = (int) num3 * 748195577 ^ -1257445703;
            continue;
          case 15:
            num1 = (int) num3 * -585741702 ^ -1078410050;
            continue;
          case 16:
            str3 = str2;
            num1 = (int) num3 * -1665822155 ^ 1116844103;
            continue;
          case 17:
            int num5;
            num1 = num5 = num2 < JSONNode.\u200B‎⁫⁬‮‭⁭⁯‮​‭‭‫⁪⁬⁮‫⁫‮‬‪‌‏​‎‎‬⁪⁭⁫‍‌‬‭‬‭‪‪‮⁫‮(str1) ? -370291935 : (num5 = -1164486520);
            continue;
          case 18:
            num1 = (int) num3 * -76735532 ^ -417099426;
            continue;
          case 19:
label_6:
            str2 = JSONNode.\u200B‍⁪⁭‫⁪‎‌‪⁫⁬‏‭‫⁬⁯⁭‫⁪⁯⁮‬‬⁭‏⁮​⁪‮‮‫‌⁮‮‭​‭‍‏⁬‮(str2, "\\n");
            num1 = -1003375033;
            continue;
          case 21:
            num1 = (int) num3 * -185948404 ^ -1946452236;
            continue;
          case 22:
            int num6;
            num1 = num6 = ch2 != '\\' ? -1080329370 : (num6 = -588014152);
            continue;
          case 23:
            goto label_1;
          case 24:
label_18:
            str2 = JSONNode.\u200B‍⁪⁭‫⁪‎‌‪⁫⁬‏‭‫⁬⁯⁭‫⁪⁯⁮‬‬⁭‏⁮​⁪‮‮‫‌⁮‮‭​‭‍‏⁬‮(str2, "\\t");
            num1 = -734908168;
            continue;
          case 25:
label_22:
            str2 = JSONNode.\u200B‍⁪⁭‫⁪‎‌‪⁫⁬‏‭‫⁬⁯⁭‫⁪⁯⁮‬‬⁭‏⁮​⁪‮‮‫‌⁮‮‭​‭‍‏⁬‮(str2, "\\f");
            num1 = -73123879;
            continue;
          case 26:
            ch2 = ch1;
            num1 = (int) num3 * 1482041348 ^ 1079800458;
            continue;
          case 27:
            ch1 = JSONNode.\u202A‎‏⁬‮⁭‍​‍‮​⁫‮‬‫‍‪⁫​⁮‮⁫‍⁮‪‪‪‍‏‏‌‮‏‬‏‪‍‍‍⁭‮(str1, num2);
            num1 = -1254888658;
            continue;
          case 28:
            str2 = JSONNode.\u200B‍⁪⁭‫⁪‎‌‪⁫⁬‏‭‫⁬⁯⁭‫⁪⁯⁮‬‬⁭‏⁮​⁪‮‮‫‌⁮‮‭​‭‍‏⁬‮(str2, "\\\\");
            num1 = -734908168;
            continue;
          case 29:
            num1 = (int) num3 * 1226401055 ^ 1605904219;
            continue;
          default:
            goto label_32;
        }
      }
label_32:
      return str3;
    }

    public static JSONNode Parse(string aJSON)
    {
      Stack<JSONNode> jsonNodeStack = new Stack<JSONNode>();
label_1:
      int num1 = 686288748;
      bool flag1;
      char ch1;
      string aItem;
      int num2;
      char ch2;
      bool flag2;
      bool flag3;
      string aKey;
      bool flag4;
      JSONNode jsonNode1;
      bool flag5;
      bool flag6;
      bool flag7;
      bool flag8;
      bool flag9;
      bool flag10;
      bool flag11;
      char ch3;
      bool flag12;
      bool flag13;
      bool flag14;
      bool flag15;
      char ch4;
      bool flag16;
      bool flag17;
      bool flag18;
      char ch5;
      bool flag19;
      JSONNode jsonNode2;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 2017182372)) % 156U)
        {
          case 0:
            num1 = (int) num3 * 1538093055 ^ -2010445507;
            continue;
          case 1:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -890667139 ^ -1438019185;
            continue;
          case 2:
            num1 = (int) num3 * 2135389253 ^ 596459260;
            continue;
          case 3:
            num1 = (int) num3 * -968204899 ^ 12175884;
            continue;
          case 4:
label_95:
            string str1 = aItem;
            ch2 = JSONNode.\u202A‎‏⁬‮⁭‍​‍‮​⁫‮‬‫‍‪⁫​⁮‮⁫‍⁮‪‪‪‍‏‏‌‮‏‬‏‪‍‍‍⁭‮(aJSON, num2);
            string str2 = ch2.ToString();
            aItem = JSONNode.\u200B‍⁪⁭‫⁪‎‌‪⁫⁬‏‭‫⁬⁯⁭‫⁪⁯⁮‬‬⁭‏⁮​⁪‮‮‫‌⁮‮‭​‭‍‏⁬‮(str1, str2);
            num1 = 704472546;
            continue;
          case 5:
            num1 = 1798827906;
            continue;
          case 6:
            num1 = (int) num3 * 1492997724 ^ 2120750314;
            continue;
          case 7:
            num1 = (int) num3 * 763722315 ^ -1600870448;
            continue;
          case 8:
            goto label_49;
          case 9:
            flag4 = JSONNode.\u202B⁯‪‏⁯‫⁪‮‍⁭⁭‪‪‌‬‫⁪⁫‬‫‎⁪⁯⁯‏‭⁪⁪⁭‪‍‍‍⁯⁪‌‏⁯‬‮‮(aKey, "");
            num1 = 307720648;
            continue;
          case 10:
            flag15 = JSONNode.\u202B⁯‪‏⁯‫⁪‮‍⁭⁭‪‪‌‬‫⁪⁫‬‫‎⁪⁯⁯‏‭⁪⁪⁭‪‍‍‍⁯⁪‌‏⁯‬‮‮(aKey, "");
            num1 = 1806370046;
            continue;
          case 11:
            flag8 = flag2;
            num1 = (int) num3 * 1416032741 ^ -1636041784;
            continue;
          case 12:
            aKey = "";
            aItem = "";
            num1 = 45485058;
            continue;
          case 13:
            ch3 = ch5;
            int num4 = ch3 <= 'f' ? 157374169 : (num4 = 526603452);
            num1 = num4 ^ (int) num3 * -1855414531;
            continue;
          case 14:
            aKey = JSONNode.\u202E‌⁯⁮⁮‫⁫⁯⁪⁫‏⁮‏‏‎‍‫‬‬⁮⁮‮‭‮‍‮‪⁬⁫‏‏‭‫‬‪‫‭⁮‎⁬‮(aKey);
            num1 = (int) num3 * -939306036 ^ 1072796255;
            continue;
          case 15:
            num1 = (int) num3 * 1818843467 ^ 965966179;
            continue;
          case 16:
            int num5 = flag18 ? 1457607452 : (num5 = 26948342);
            num1 = num5 ^ (int) num3 * -1190492374;
            continue;
          case 17:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 296584577 ^ 778377809;
            continue;
          case 18:
            num1 = 708238052;
            continue;
          case 19:
            flag9 = jsonNodeStack.Count == 0;
            num1 = 1356183133;
            continue;
          case 20:
            int num6 = !flag14 ? -1640999806 : (num6 = -896345847);
            num1 = num6 ^ (int) num3 * -1495956212;
            continue;
          case 21:
            int num7;
            num1 = num7 = ch1 <= ']' ? 150738127 : (num7 = 9963955);
            continue;
          case 22:
            int num8 = flag15 ? 1948407068 : (num8 = 286640866);
            num1 = num8 ^ (int) num3 * -1366258799;
            continue;
          case 23:
            flag6 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -270768567 ^ 999677113;
            continue;
          case 24:
            ch1 = JSONNode.\u202A‎‏⁬‮⁭‍​‍‮​⁫‮‬‫‍‪⁫​⁮‮⁫‍⁮‪‪‪‍‏‏‌‮‏‬‏‪‍‍‍⁭‮(aJSON, num2);
            int num9 = ch1 <= ',' ? 1782986796 : (num9 = 1094787769);
            num1 = num9 ^ (int) num3 * 231561316;
            continue;
          case 25:
label_39:
            aItem = JSONNode.\u200B‍⁪⁭‫⁪‎‌‪⁫⁬‏‭‫⁬⁯⁭‫⁪⁯⁮‬‬⁭‏⁮​⁪‮‮‫‌⁮‮‭​‭‍‏⁬‮(aItem, "\t");
            num1 = 1326708453;
            continue;
          case 26:
            ch5 = ch4;
            num1 = (int) num3 * 211545020 ^ 404563205;
            continue;
          case 27:
            num1 = (int) num3 * -130207702 ^ -1747163817;
            continue;
          case 28:
            aKey = "";
            num1 = 1158888649;
            continue;
          case 29:
            num1 = (int) num3 * 1738274973 ^ 553054463;
            continue;
          case 30:
          case 51:
          case 134:
          case 142:
          case 154:
label_46:
            ++num2;
            num1 = 1371452136;
            continue;
          case 31:
            aKey = "";
            aItem = "";
            num1 = 1034539861;
            continue;
          case 32:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num3 * -51831981 ^ -568158268;
            continue;
          case 33:
label_118:
            int num10;
            num1 = num10 = !flag2 ? 51248030 : (num10 = 1456984254);
            continue;
          case 34:
            num1 = (int) num3 * -937854876 ^ 264833944;
            continue;
          case 35:
            int num11 = !flag17 ? 1417334132 : (num11 = 2100287244);
            num1 = num11 ^ (int) num3 * 1544602643;
            continue;
          case 36:
            int num12 = !flag19 ? 246025280 : (num12 = 1492303234);
            num1 = num12 ^ (int) num3 * -1923266407;
            continue;
          case 37:
            int num13 = flag10 ? 1169380763 : (num13 = 526376330);
            num1 = num13 ^ (int) num3 * 1401151170;
            continue;
          case 38:
            num1 = (int) num3 * -1114090747 ^ -1752224204;
            continue;
          case 39:
            num1 = (int) num3 * -2146065216 ^ 285512104;
            continue;
          case 40:
            num2 = 0;
            num1 = (int) num3 * 1962100131 ^ -470493924;
            continue;
          case 41:
            aItem = "";
            num1 = (int) num3 * 1479555440 ^ 878192600;
            continue;
          case 42:
            aItem = JSONNode.\u200B‍⁪⁭‫⁪‎‌‪⁫⁬‏‭‫⁬⁯⁭‫⁪⁯⁮‬‬⁭‏⁮​⁪‮‮‫‌⁮‮‭​‭‍‏⁬‮(aItem, "\b");
            num1 = 397350689;
            continue;
          case 43:
            string str3 = aItem;
            ch2 = JSONNode.\u202A‎‏⁬‮⁭‍​‍‮​⁫‮‬‫‍‪⁫​⁮‮⁫‍⁮‪‪‪‍‏‏‌‮‏‬‏‪‍‍‍⁭‮(aJSON, num2);
            string str4 = ch2.ToString();
            aItem = JSONNode.\u200B‍⁪⁭‫⁪‎‌‪⁫⁬‏‭‫⁬⁯⁭‫⁪⁯⁮‬‬⁭‏⁮​⁪‮‮‫‌⁮‮‭​‭‍‏⁬‮(str3, str4);
            num1 = (int) num3 * -484700326 ^ 558644780;
            continue;
          case 44:
            flag10 = JSONNode.\u202B⁯‪‏⁯‫⁪‮‍⁭⁭‪‪‌‬‫⁪⁫‬‫‎⁪⁯⁯‏‭⁪⁪⁭‪‍‍‍⁯⁪‌‏⁯‬‮‮(aItem, "");
            num1 = 1868093685;
            continue;
          case 45:
            int num14;
            num1 = num14 = ch1 == '}' ? 916261607 : (num14 = 297572146);
            continue;
          case 46:
            ch4 = JSONNode.\u202A‎‏⁬‮⁭‍​‍‮​⁫‮‬‫‍‪⁫​⁮‮⁫‍⁮‪‪‪‍‏‏‌‮‏‬‏‪‍‍‍⁭‮(aJSON, num2);
            num1 = (int) num3 * 1652958939 ^ -1148342808;
            continue;
          case 47:
            int num15 = flag13 ? 435695594 : (num15 = 333738855);
            num1 = num15 ^ (int) num3 * -1897493259;
            continue;
          case 48:
            num1 = 2063659752;
            continue;
          case 49:
            num1 = (int) num3 * 1696092976 ^ 1062846258;
            continue;
          case 50:
            int num16 = !flag6 ? -651082231 : (num16 = -2099633313);
            num1 = num16 ^ (int) num3 * -2115077746;
            continue;
          case 52:
            int num17 = flag5 ? 787097303 : (num17 = 715643199);
            num1 = num17 ^ (int) num3 * -245007505;
            continue;
          case 53:
            int num18 = !flag7 ? 615208970 : (num18 = 693588453);
            num1 = num18 ^ (int) num3 * -733573494;
            continue;
          case 54:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * 2096637410 ^ -1482287266;
            continue;
          case 55:
            num1 = (int) num3 * 997056451 ^ -2073938423;
            continue;
          case 56:
            int num19 = flag12 ? 688514765 : (num19 = 239348556);
            num1 = num19 ^ (int) num3 * -275289527;
            continue;
          case 57:
            int num20;
            num1 = num20 = ch3 != 'n' ? 1441654275 : (num20 = 131654485);
            continue;
          case 58:
            num1 = (int) num3 * -256504924 ^ -1214144729;
            continue;
          case 59:
            flag14 = JSONNode.\u202B⁯‪‏⁯‫⁪‮‍⁭⁭‪‪‌‬‫⁪⁫‬‫‎⁪⁯⁯‏‭⁪⁪⁭‪‍‍‍⁯⁪‌‏⁯‬‮‮(aKey, "");
            num1 = 1411159464;
            continue;
          case 60:
            flag11 = jsonNodeStack.Count > 0;
            num1 = (int) num3 * -964322259 ^ 733042517;
            continue;
          case 61:
            flag17 = jsonNode1 != (object) null;
            num1 = (int) num3 * -1162721960 ^ -1366389357;
            continue;
          case 62:
            num1 = (int) num3 * 839233507 ^ -940517201;
            continue;
          case 63:
            flag13 = JSONNode.\u202B⁯‪‏⁯‫⁪‮‍⁭⁭‪‪‌‬‫⁪⁫‬‫‎⁪⁯⁯‏‭⁪⁪⁭‪‍‍‍⁯⁪‌‏⁯‬‮‮(aItem, "");
            num1 = (int) num3 * -1367731108 ^ -1321574029;
            continue;
          case 64:
            int num21 = flag1 ? 788482990 : (num21 = 89395758);
            num1 = num21 ^ (int) num3 * -2117179135;
            continue;
          case 65:
            int num22 = jsonNode1 is JSONArray ? -1848229921 : (num22 = -1787888460);
            num1 = num22 ^ (int) num3 * -1609172734;
            continue;
          case 66:
            num1 = (int) num3 * 560237701 ^ 1601707259;
            continue;
          case 67:
            aItem = "";
            num1 = (int) num3 * -1369197808 ^ -1367490382;
            continue;
          case 68:
            num1 = (int) num3 * 684624303 ^ 2133879880;
            continue;
          case 69:
            int num23 = flag11 ? -2060717217 : (num23 = -503863385);
            num1 = num23 ^ (int) num3 * -1418014651;
            continue;
          case 70:
            int num24;
            num1 = num24 = ch3 != 'f' ? 1956015608 : (num24 = 555786907);
            continue;
          case 71:
            string s = JSONNode.\u200D‎‬‏⁪‫‎‫​‮‏⁭⁬‌‎⁬‎⁫‬‬‮‍⁭⁪​‌‍‫‬‭‮⁭‫‪​‮‍‍​‫‮(aJSON, num2 + 1, 4);
            string str5 = aItem;
            ch2 = (char) int.Parse(s, NumberStyles.AllowHexSpecifier);
            string str6 = ch2.ToString();
            aItem = JSONNode.\u200B‍⁪⁭‫⁪‎‌‪⁫⁬‏‭‫⁬⁯⁭‫⁪⁯⁮‬‬⁭‏⁮​⁪‮‮‫‌⁮‮‭​‭‍‏⁬‮(str5, str6);
            num2 += 4;
            num1 = (int) num3 * 1405529350 ^ -1040372769;
            continue;
          case 72:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            num1 = 1784617987;
            continue;
          case 73:
            int num25;
            num1 = num25 = ch1 == ',' ? 1125401051 : (num25 = 201549452);
            continue;
          case 74:
            num1 = 1042681423;
            continue;
          case 75:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 17117459 ^ 296473000;
            continue;
          case 76:
            flag18 = flag2;
            num1 = (int) num3 * 1457991706 ^ -976119972;
            continue;
          case 77:
            num1 = (int) num3 * 1428069159 ^ -1919250523;
            continue;
          case 78:
            string str7 = aItem;
            ch2 = JSONNode.\u202A‎‏⁬‮⁭‍​‍‮​⁫‮‬‫‍‪⁫​⁮‮⁫‍⁮‪‪‪‍‏‏‌‮‏‬‏‪‍‍‍⁭‮(aJSON, num2);
            string str8 = ch2.ToString();
            aItem = JSONNode.\u200B‍⁪⁭‫⁪‎‌‪⁫⁬‏‭‫⁬⁯⁭‫⁪⁯⁮‬‬⁭‏⁮​⁪‮‮‫‌⁮‮‭​‭‍‏⁬‮(str7, str8);
            num1 = (int) num3 * 1824599641 ^ 281023540;
            continue;
          case 79:
            num1 = (int) num3 * -507135364 ^ 1999366660;
            continue;
          case 80:
            flag19 = num2 < JSONNode.\u200B‎⁫⁬‮‭⁭⁯‮​‭‭‫⁪⁬⁮‫⁫‮‬‪‌‏​‎‎‬⁪⁭⁫‍‌‬‭‬‭‪‪‮⁫‮(aJSON);
            num1 = 119168648;
            continue;
          case 81:
            flag2 = !flag2;
            num1 = 1442239602;
            continue;
          case 82:
            flag1 = flag2;
            num1 = 1058107664;
            continue;
          case 83:
            aItem = JSONNode.\u200B‍⁪⁭‫⁪‎‌‪⁫⁬‏‭‫⁬⁯⁭‫⁪⁯⁮‬‬⁭‏⁮​⁪‮‮‫‌⁮‮‭​‭‍‏⁬‮(aItem, "\f");
            num1 = 397350689;
            continue;
          case 84:
            num1 = (int) num3 * 1433650854 ^ 1968978842;
            continue;
          case 85:
            aItem = JSONNode.\u200B‍⁪⁭‫⁪‎‌‪⁫⁬‏‭‫⁬⁯⁭‫⁪⁯⁮‬‬⁭‏⁮​⁪‮‮‫‌⁮‮‭​‭‍‏⁬‮(aItem, "\n");
            num1 = 307782464;
            continue;
          case 86:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 916156455 ^ 1480757168;
            continue;
          case 87:
            int num26 = flag16 ? 679574217 : (num26 = 635268814);
            num1 = num26 ^ (int) num3 * -1704859878;
            continue;
          case 88:
            goto label_113;
          case 89:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -1071007689 ^ 806880777;
            continue;
          case 90:
            num1 = (int) num3 * -1066713774 ^ -217493906;
            continue;
          case 91:
            num1 = (int) num3 * 1450696868 ^ -1095069074;
            continue;
          case 92:
            num1 = (int) num3 * 1672176222 ^ -849348374;
            continue;
          case 93:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 1875651996 ^ -1242423032;
            continue;
          case 94:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 1697747210 ^ 1940148876;
            continue;
          case 95:
            string str9 = aItem;
            ch2 = JSONNode.\u202A‎‏⁬‮⁭‍​‍‮​⁫‮‬‫‍‪⁫​⁮‮⁫‍⁮‪‪‪‍‏‏‌‮‏‬‏‪‍‍‍⁭‮(aJSON, num2);
            string str10 = ch2.ToString();
            aItem = JSONNode.\u200B‍⁪⁭‫⁪‎‌‪⁫⁬‏‭‫⁬⁯⁭‫⁪⁯⁮‬‬⁭‏⁮​⁪‮‮‫‌⁮‮‭​‭‍‏⁬‮(str9, str10);
            num1 = (int) num3 * 16387424 ^ 1780401974;
            continue;
          case 96:
            switch (ch3)
            {
              case 'r':
                goto label_114;
              case 's':
                goto label_123;
              case 't':
                goto label_39;
              case 'u':
                goto label_58;
              default:
                num1 = 925251042;
                continue;
            }
          case 97:
            int num27 = !flag9 ? -1886781470 : (num27 = -540013208);
            num1 = num27 ^ (int) num3 * 2091312420;
            continue;
          case 98:
label_8:
            flag3 = flag2;
            num1 = 1022650698;
            continue;
          case 99:
            num1 = (int) num3 * 740442261 ^ -1253706761;
            continue;
          case 100:
            aKey = JSONNode.\u202E‌⁯⁮⁮‫⁫⁯⁪⁫‏⁮‏‏‎‍‫‬‬⁮⁮‮‭‮‍‮‪⁬⁫‏‏‭‫‬‪‫‭⁮‎⁬‮(aKey);
            int num28 = !(jsonNode1 is JSONArray) ? 1599918439 : (num28 = 1586145857);
            num1 = num28 ^ (int) num3 * 930433194;
            continue;
          case 101:
            num1 = (int) num3 * 1587922194 ^ 1484789545;
            continue;
          case 102:
            int num29;
            num1 = num29 = ch1 == ' ' ? 1593292785 : (num29 = 880928578);
            continue;
          case 103:
label_43:
            flag5 = flag2;
            num1 = 844115636;
            continue;
          case 104:
            int num30 = ch3 == 'b' ? 906947978 : (num30 = 1434776929);
            num1 = num30 ^ (int) num3 * 804830312;
            continue;
          case 105:
label_99:
            ++num2;
            num1 = 1629267755;
            continue;
          case 106:
            jsonNode2 = jsonNode1;
            num1 = 666974501;
            continue;
          case 107:
            string str11 = aItem;
            ch2 = JSONNode.\u202A‎‏⁬‮⁭‍​‍‮​⁫‮‬‫‍‪⁫​⁮‮⁫‍⁮‪‪‪‍‏‏‌‮‏‬‏‪‍‍‍⁭‮(aJSON, num2);
            string str12 = ch2.ToString();
            aItem = JSONNode.\u200B‍⁪⁭‫⁪‎‌‪⁫⁬‏‭‫⁬⁯⁭‫⁪⁯⁮‬‬⁭‏⁮​⁪‮‮‫‌⁮‮‭​‭‍‏⁬‮(str11, str12);
            num1 = (int) num3 * 599389516 ^ 1860804278;
            continue;
          case 108:
            int num31 = flag4 ? -1480514311 : (num31 = -1276787149);
            num1 = num31 ^ (int) num3 * 1881527134;
            continue;
          case 109:
            num1 = (int) num3 * -157558346 ^ 959934129;
            continue;
          case 110:
            string str13 = aItem;
            ch2 = JSONNode.\u202A‎‏⁬‮⁭‍​‍‮​⁫‮‬‫‍‪⁫​⁮‮⁫‍⁮‪‪‪‍‏‏‌‮‏‬‏‪‍‍‍⁭‮(aJSON, num2);
            string str14 = ch2.ToString();
            aItem = JSONNode.\u200B‍⁪⁭‫⁪‎‌‪⁫⁬‏‭‫⁬⁯⁭‫⁪⁯⁮‬‬⁭‏⁮​⁪‮‮‫‌⁮‮‭​‭‍‏⁬‮(str13, str14);
            num1 = (int) num3 * 43923179 ^ 1033888320;
            continue;
          case 111:
            num1 = (int) num3 * 1948300000 ^ -801614102;
            continue;
          case 112:
            aItem = "";
            aKey = "";
            flag2 = false;
            num1 = (int) num3 * 1047102219 ^ -667788916;
            continue;
          case 113:
            num1 = (int) num3 * -1294240053 ^ -1016941283;
            continue;
          case 114:
label_123:
            aItem = JSONNode.\u200B‍⁪⁭‫⁪‎‌‪⁫⁬‏‭‫⁬⁯⁭‫⁪⁯⁮‬‬⁭‏⁮​⁪‮‮‫‌⁮‮‭​‭‍‏⁬‮(aItem, ch4.ToString());
            num1 = 1124020424;
            continue;
          case 115:
            flag7 = flag2;
            num1 = 26155985;
            continue;
          case 116:
            int num32 = ch1 > ' ' ? -1975908612 : (num32 = -1011793955);
            num1 = num32 ^ (int) num3 * -1791956725;
            continue;
          case 117:
            switch (ch1)
            {
              case '\t':
                goto label_118;
              case '\n':
              case '\r':
                goto label_46;
              case '\v':
              case '\f':
                goto label_95;
              default:
                num1 = (int) num3 * -1130397654 ^ 1946934357;
                continue;
            }
          case 118:
            num1 = (int) num3 * 1710032429 ^ -1763526546;
            continue;
          case 119:
            int num33;
            num1 = num33 = ch1 == '{' ? 1579452363 : (num33 = 75693910);
            continue;
          case 120:
            aItem = "";
            num1 = (int) num3 * 589079432 ^ -681584715;
            continue;
          case 121:
label_114:
            aItem = JSONNode.\u200B‍⁪⁭‫⁪‎‌‪⁫⁬‏‭‫⁬⁯⁭‫⁪⁯⁮‬‬⁭‏⁮​⁪‮‮‫‌⁮‮‭​‭‍‏⁬‮(aItem, "\r");
            num1 = 179439934;
            continue;
          case 122:
            num1 = (int) num3 * -2014638171 ^ 562433658;
            continue;
          case 123:
            aKey = JSONNode.\u202E‌⁯⁮⁮‫⁫⁯⁪⁫‏⁮‏‏‎‍‫‬‬⁮⁮‮‭‮‍‮‪⁬⁫‏‏‭‫‬‪‫‭⁮‎⁬‮(aKey);
            int num34 = jsonNode1 is JSONArray ? -966980958 : (num34 = -540242840);
            num1 = num34 ^ (int) num3 * 2120235056;
            continue;
          case 124:
            num1 = (int) num3 * -1184862796 ^ 899512529;
            continue;
          case 125:
            num1 = (int) num3 * 1220023691 ^ -858464662;
            continue;
          case 126:
            int num35 = flag3 ? 2092855149 : (num35 = 1160288309);
            num1 = num35 ^ (int) num3 * 302237581;
            continue;
          case (uint) sbyte.MaxValue:
label_58:
            num1 = 588040571;
            continue;
          case 128:
            num1 = (int) num3 * 1360747479 ^ -1140922104;
            continue;
          case 129:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 2092400145 ^ 1010953638;
            continue;
          case 130:
            num1 = (int) num3 * -1022970319 ^ -602890736;
            continue;
          case 131:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num1 = 1950199897;
            continue;
          case 132:
            int num36;
            num1 = num36 = ch1 != '"' ? 1225002847 : (num36 = 866269785);
            continue;
          case 133:
            aKey = "";
            num1 = 1066881732;
            continue;
          case 135:
            flag16 = flag2;
            num1 = 2143850595;
            continue;
          case 136:
            num1 = (int) num3 * 1891752303 ^ -1833590696;
            continue;
          case 137:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 1617057120 ^ -914753669;
            continue;
          case 139:
            int num37 = flag8 ? -96803894 : (num37 = -1806017321);
            num1 = num37 ^ (int) num3 * -124638653;
            continue;
          case 140:
            int num38 = !(jsonNode1 != (object) null) ? 262829215 : (num38 = 1307609259);
            num1 = num38 ^ (int) num3 * -1986612484;
            continue;
          case 141:
            switch (ch1)
            {
              case '[':
                goto label_8;
              case '\\':
                goto label_99;
              case ']':
                goto label_43;
              default:
                num1 = 820806044;
                continue;
            }
          case 143:
            goto label_1;
          case 144:
            flag12 = JSONNode.\u202B⁯‪‏⁯‫⁪‮‍⁭⁭‪‪‌‬‫⁪⁫‬‫‎⁪⁯⁯‏‭⁪⁪⁭‪‍‍‍⁯⁪‌‏⁯‬‮‮(aKey, "");
            num1 = 406398588;
            continue;
          case 145:
            string str15 = aItem;
            ch2 = JSONNode.\u202A‎‏⁬‮⁭‍​‍‮​⁫‮‬‫‍‪⁫​⁮‮⁫‍⁮‪‪‪‍‏‏‌‮‏‬‏‪‍‍‍⁭‮(aJSON, num2);
            string str16 = ch2.ToString();
            aItem = JSONNode.\u200B‍⁪⁭‫⁪‎‌‪⁫⁬‏‭‫⁬⁯⁭‫⁪⁯⁮‬‬⁭‏⁮​⁪‮‮‫‌⁮‮‭​‭‍‏⁬‮(str15, str16);
            num1 = (int) num3 * 810458379 ^ 1757497586;
            continue;
          case 146:
            jsonNodeStack.Pop();
            num1 = 1010626211;
            continue;
          case 147:
            num1 = (int) num3 * 1910625260 ^ 1343977969;
            continue;
          case 148:
            num1 = (int) num3 * -1725274112 ^ -1469167016;
            continue;
          case 149:
            num1 = (int) num3 * 1454569886 ^ 1199205951;
            continue;
          case 150:
            aKey = aItem;
            num1 = 529285663;
            continue;
          case 151:
            num1 = 616605448;
            continue;
          case 152:
            num1 = 962870825;
            continue;
          case 153:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -557753749 ^ 2130475901;
            continue;
          case 155:
            int num39 = ch1 == ':' ? -1100341053 : (num39 = -733267034);
            num1 = num39 ^ (int) num3 * -1863681193;
            continue;
          default:
            goto label_156;
        }
      }
label_49:
      throw JSONNode.\u200D‎‭⁬‍‍‮‬‍‏‫⁯⁬⁬‬⁫‪⁬‫‪‌⁯⁯‎⁫‍⁬‮⁪‍‫​‎‮‫⁫‪‍‏‍‮("JSON Parse: Too many closing brackets");
label_113:
      throw JSONNode.\u200D‎‭⁬‍‍‮‬‍‏‫⁯⁬⁬‬⁫‪⁬‫‪‌⁯⁯‎⁫‍⁬‮⁪‍‫​‎‮‫⁫‪‍‏‍‮("JSON Parse: Quotation marks seems to be messed up.");
label_156:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
label_1:
      int num1 = 192872986;
      BinaryWriter aWriter;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1064285851)) % 4U)
        {
          case 0:
            this.Serialize(aWriter);
            num1 = (int) num2 * -1926770771 ^ 236691820;
            continue;
          case 1:
            aWriter = JSONNode.\u206D‫‎‎⁪⁯⁭‎⁫‍‍⁭⁪⁭‪⁫‌‬⁬‬​‎‪‮⁭‎‫⁬‍⁮​⁪‌‮⁬‍‮‮⁮‬‮(aData);
            num1 = (int) num2 * 216520552 ^ 1641559571;
            continue;
          case 2:
            goto label_1;
          case 3:
            goto label_3;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u200D‎‭⁬‍‍‮‬‍‏‫⁯⁬⁬‬⁫‪⁬‫‪‌⁯⁯‎⁫‍⁬‮⁪‍‫​‎‮‫⁫‪‍‏‍‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u200D‎‭⁬‍‍‮‬‍‏‫⁯⁬⁬‬⁫‪⁬‫‪‌⁯⁯‎⁫‍⁬‮⁪‍‫​‎‮‫⁫‪‍‏‍‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u200D‎‭⁬‍‍‮‬‍‏‫⁯⁬⁬‬⁫‪⁬‫‪‌⁯⁯‎⁫‍⁬‮⁪‍‫​‎‮‫⁫‪‍‏‍‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
      JSONNode.\u202A⁯‍‬‮⁬‍‏⁬‬⁪‍‏‎⁯‌‌‍​‮⁭‮⁬​‪‌‏⁬‮‮‬⁭‫⁮‮⁭⁭‭‏‮‮(JSONNode.\u200F‭‫‌‏‎⁭‪⁬⁪⁫⁬​‭‌‫‭‍‪‭‏⁪‮⁯⁫‪⁭⁬⁪‍⁮‎‏⁭‮‬⁫‮⁭‬‮((FileSystemInfo) JSONNode.\u200B⁫⁮⁫‍⁪​‌​‫‬‌​‮​‌‬‪​‏‭‫‮‏⁪‏‎‭‌‫⁫⁮⁭‫‌⁪‍⁯‪⁬‮(JSONNode.\u206D⁮‏​‫‫⁫⁯‌⁮‬⁬⁫⁬⁬‬‪⁫⁬‏‬‎‭‎⁮⁭‎‬‭‫⁭‫‮‌⁬​‬‌‍‮‮(aFileName))));
      FileStream aData = JSONNode.\u200C⁫⁬‭‭⁮⁫⁪​⁮⁪‎‪‪⁮‮‪⁫‫⁮⁬‏⁮‭⁬‍⁫‌⁮‪‌‏‫‏‪⁯⁬‏‫‎‮(aFileName);
      try
      {
label_2:
        int num1 = 633846411;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 270431309)) % 4U)
          {
            case 0:
              goto label_2;
            case 1:
              goto label_10;
            case 2:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * -899329237 ^ 1851481732;
              continue;
            case 3:
              num1 = (int) num2 * 367536268 ^ 2005068992;
              continue;
            default:
              goto label_6;
          }
        }
label_10:
        return;
label_6:;
      }
      finally
      {
        if (aData != null)
        {
label_8:
          int num3 = 455488040;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 270431309)) % 4U)
            {
              case 0:
                num3 = (int) num4 * 1508166152 ^ -1373916189;
                continue;
              case 1:
                JSONNode.\u200C‎⁮‫‪‌​‬⁯⁪‫‭⁯‪‪⁮​⁮⁭‬‍‮⁮⁭‮‫​​‫‮‎​‌‮⁬‪​⁯‬‮‮((IDisposable) aData);
                num3 = (int) num4 * -759813833 ^ 1554284002;
                continue;
              case 3:
                goto label_8;
              default:
                goto label_13;
            }
          }
        }
label_13:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u206E‪‫‎‪⁫⁬‌‮⁪⁮⁪‎‬⁯⁪​‭‍‫‪⁯⁪⁫‍⁯‏⁮‎‏‫​‫‭⁭⁮‪⁬‭‪‮();
      string base64;
      try
      {
        this.SaveToStream((Stream) aData);
label_2:
        int num1 = -1035288620;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -195240619)) % 4U)
          {
            case 0:
              base64 = JSONNode.\u200E‏‭​‎⁮‪‎‏‪‫‫‍‫⁬⁭⁫⁯‭⁯‬‬⁫⁭⁮⁪⁮⁬‌​⁭‬⁬‪‫​⁮‭⁬‮(JSONNode.\u200F⁫‍‮‪‏⁭⁪⁮⁬‎‬⁪⁭‬​⁬‍‭‮‬‍‎‏‬‬‫‏‪‭‫⁭⁬‮‫⁯⁪‪⁫‏‮(aData));
              num1 = (int) num2 * 1064517185 ^ 1028557538;
              continue;
            case 1:
              JSONNode.\u200D‭‌​⁯⁮⁪⁪⁭‪⁮‪‍​‌‫⁭‭‭‎⁯⁪‮‎‬‍‪⁮⁪‍⁮⁬⁫‭‍‮‭‍‬⁮‮((Stream) aData, 0L);
              num1 = (int) num2 * 2070299181 ^ 1086032096;
              continue;
            case 2:
              goto label_2;
            default:
              goto label_12;
          }
        }
      }
      finally
      {
        if (aData != null)
        {
label_7:
          int num3 = -754212540;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -195240619)) % 4U)
            {
              case 0:
                goto label_7;
              case 1:
                JSONNode.\u200C‎⁮‫‪‌​‬⁯⁪‫‭⁯‪‪⁮​⁮⁭‬‍‮⁮⁭‮‫​​‫‮‎​‌‮⁬‪​⁯‬‮‮((IDisposable) aData);
                num3 = (int) num4 * -178381250 ^ 2108811949;
                continue;
              case 2:
                num3 = (int) num4 * -1419171462 ^ 409549490;
                continue;
              default:
                goto label_11;
            }
          }
        }
label_11:;
      }
label_12:
      return base64;
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
      JSONBinaryTag jsonBinaryTag1 = (JSONBinaryTag) JSONNode.\u206F​‏‮⁫‫⁯‫⁯‍‪‎‬⁬⁮‪⁮⁯⁬⁯⁬⁬‏‫⁮‮⁭​‏⁯⁭⁭‬⁯‬⁫⁯​⁮‏‮(aReader);
label_1:
      int num1 = 16415056;
      JSONBinaryTag jsonBinaryTag2;
      JSONBinaryTag jsonBinaryTag3;
      int num2;
      int num3;
      int num4;
      JSONClass jsonClass;
      int num5;
      JSONArray jsonArray;
      JSONNode jsonNode;
      bool flag1;
      string aKey;
      bool flag2;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ 1273634617)) % 39U)
        {
          case 0:
label_17:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200E​‭‪⁮⁮‪⁪⁪⁯⁬‭⁯‭⁫​⁫‏⁫‮‬⁮⁫‎⁭⁪‏​‫⁮⁭⁮⁭​‫⁬⁪‪‪‏‮(aReader));
            num1 = 417231782;
            continue;
          case 1:
            ++num2;
            num1 = (int) num6 * -72394886 ^ 348327836;
            continue;
          case 2:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206A‎‫⁪⁪⁯‎‏⁬‪‫⁮‫⁬⁫‪‎‏‎​​‬​‭‪⁪⁮‪⁬​​‍‮‮⁫⁯‌‌‮‌‮(aReader));
            num1 = (int) num6 * 1415180240 ^ 452255000;
            continue;
          case 3:
            JSONNode aItem = JSONNode.Deserialize(aReader);
            jsonClass.Add(aKey, aItem);
            num1 = (int) num6 * 1668187393 ^ -624302368;
            continue;
          case 4:
            num1 = (int) num6 * -1249877442 ^ -1452730375;
            continue;
          case 5:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * 1750886453 ^ -1286467086;
            continue;
          case 6:
            jsonBinaryTag3 = jsonBinaryTag2;
            num1 = (int) num6 * 1275707320 ^ 566089204;
            continue;
          case 7:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200B‬‪⁮‏⁬‫‫‭‌⁬​‌⁬⁫‍‏⁯⁬⁪‬⁭⁫⁬⁬⁫⁭⁭⁯⁭‌‭⁬⁮⁯‏⁫‮‮‫‮(aReader));
            num1 = (int) num6 * 881965106 ^ -281523381;
            continue;
          case 8:
            flag2 = num2 < num4;
            num1 = 74258754;
            continue;
          case 9:
            num1 = (int) num6 * -328217297 ^ 1318983086;
            continue;
          case 10:
label_13:
            num5 = JSONNode.\u202D⁪​‮⁬⁭⁭⁫⁮⁮​‪‎‮⁫‭‍‏‬‍⁪⁭‍⁯​⁪‌‌‍⁬‌⁮⁫​‍‫‌​‮⁯‮(aReader);
            jsonArray = new JSONArray();
            num1 = 2138810636;
            continue;
          case 11:
            switch (jsonBinaryTag3)
            {
              case JSONBinaryTag.Array:
                goto label_13;
              case JSONBinaryTag.Class:
                goto label_11;
              case JSONBinaryTag.Value:
                goto label_14;
              case JSONBinaryTag.IntValue:
                goto label_30;
              case JSONBinaryTag.DoubleValue:
                goto label_18;
              case JSONBinaryTag.BoolValue:
                goto label_16;
              case JSONBinaryTag.FloatValue:
                goto label_17;
              default:
                num1 = (int) num6 * -2056585854 ^ 1278122885;
                continue;
            }
          case 12:
            num1 = (int) num6 * 1482979142 ^ -1080492602;
            continue;
          case 13:
            num1 = 659484200;
            continue;
          case 14:
label_18:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206C‭⁪⁫​⁬⁫⁬⁮⁮‬‫‪‫‏‭‮⁪‭⁯⁬‭⁯⁯​‌⁬‬‬‌‪‏⁫‪‪​‎⁮⁭‬‮(aReader));
            num1 = 1736888730;
            continue;
          case 15:
            num1 = 416081920;
            continue;
          case 16:
label_14:
            num1 = 1719731662;
            continue;
          case 17:
            aKey = JSONNode.\u206A‎‫⁪⁪⁯‎‏⁬‪‫⁮‫⁬⁫‪‎‏‎​​‬​‭‪⁪⁮‪⁬​​‍‮‮⁫⁯‌‌‮‌‮(aReader);
            num1 = (int) num6 * 695420872 ^ -1839944367;
            continue;
          case 18:
            num1 = (int) num6 * 834098579 ^ 609418199;
            continue;
          case 19:
            ++num3;
            num1 = (int) num6 * -941656118 ^ 1961914544;
            continue;
          case 20:
            goto label_40;
          case 21:
            num1 = (int) num6 * 1669483063 ^ -1537362511;
            continue;
          case 22:
            int num7 = !flag1 ? -562176600 : (num7 = -1423177841);
            num1 = num7 ^ (int) num6 * 1766820984;
            continue;
          case 23:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            num1 = 1696444283;
            continue;
          case 24:
            num2 = 0;
            num1 = (int) num6 * -1781142943 ^ 36751407;
            continue;
          case 25:
            flag1 = num3 < num5;
            num1 = 76607174;
            continue;
          case 26:
            num1 = (int) num6 * 900235400 ^ 1636480146;
            continue;
          case 27:
label_11:
            num4 = JSONNode.\u202D⁪​‮⁬⁭⁭⁫⁮⁮​‪‎‮⁫‭‍‏‬‍⁪⁭‍⁯​⁪‌‌‍⁬‌⁮⁫​‍‫‌​‮⁯‮(aReader);
            jsonClass = new JSONClass();
            num1 = 635539462;
            continue;
          case 28:
            jsonBinaryTag2 = jsonBinaryTag1;
            num1 = (int) num6 * 814482733 ^ 1572711750;
            continue;
          case 29:
label_16:
            num1 = 1778065112;
            continue;
          case 30:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202D⁪​‮⁬⁭⁭⁫⁮⁮​‪‎‮⁫‭‍‏‬‍⁪⁭‍⁯​⁪‌‌‍⁬‌⁮⁫​‍‫‌​‮⁯‮(aReader));
            num1 = (int) num6 * 694583901 ^ 622895665;
            continue;
          case 31:
label_30:
            num1 = 1179280030;
            continue;
          case 33:
            num3 = 0;
            num1 = (int) num6 * 205375392 ^ 2137335818;
            continue;
          case 34:
            goto label_1;
          case 35:
            num1 = (int) num6 * 1594674329 ^ -1466502118;
            continue;
          case 36:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * -877478619 ^ 927656967;
            continue;
          case 37:
            int num8 = flag2 ? 1361373345 : (num8 = 946858302);
            num1 = num8 ^ (int) num6 * 1761744191;
            continue;
          case 38:
            num1 = (int) num6 * 1848624209 ^ 649213739;
            continue;
          default:
            goto label_41;
        }
      }
label_40:
      throw JSONNode.\u200D‎‭⁬‍‍‮‬‍‏‫⁯⁬⁬‬⁫‪⁬‫‪‌⁯⁯‎⁫‍⁬‮⁪‍‫​‎‮‫⁫‪‍‏‍‮(JSONNode.\u200B‍⁪⁭‫⁪‎‌‪⁫⁬‏‭‫⁬⁯⁭‫⁪⁯⁮‬‬⁭‏⁮​⁪‮‮‫‌⁮‮‭​‭‍‏⁬‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag1.ToString()));
label_41:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u200D‎‭⁬‍‍‮‬‍‏‫⁯⁬⁬‬⁫‪⁬‫‪‌⁯⁯‎⁫‍⁬‮⁪‍‫​‎‮‫⁫‪‍‏‍‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u200D‎‭⁬‍‍‮‬‍‏‫⁯⁬⁬‬⁫‪⁬‫‪‌⁯⁯‎⁫‍⁬‮⁪‍‫​‎‮‫⁫‪‍‏‍‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u200D‎‭⁬‍‍‮‬‍‏‫⁯⁬⁬‬⁫‪⁬‫‪‌⁯⁯‎⁫‍⁬‮⁪‍‫​‎‮‫⁫‪‍‏‍‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u206E‭⁫⁬‭​‮‮‭⁬‮‭‪⁫⁮‎⁫​‬⁬‫⁭⁭⁪​‌‍‎⁯⁬‬⁪⁫‭​‏⁭​⁫⁬‮(aData);
      try
      {
        return JSONNode.Deserialize(aReader);
      }
      finally
      {
        if (aReader != null)
        {
label_3:
          int num1 = -2093768882;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ -75060809)) % 3U)
            {
              case 0:
                goto label_3;
              case 1:
                JSONNode.\u200C‎⁮‫‪‌​‬⁯⁪‫‭⁯‪‪⁮​⁮⁭‬‍‮⁮⁭‮‫​​‫‮‎​‌‮⁬‪​⁯‬‮‮((IDisposable) aReader);
                num1 = (int) num2 * 57773390 ^ 1976663251;
                continue;
              default:
                goto label_6;
            }
          }
        }
label_6:;
      }
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u206E⁪‫​‌‪‬⁬‍‏‬‌‏⁪‏⁫‏‏⁯⁬⁯⁪⁯‬⁬‍⁬‭‪⁫‮⁬​‎⁯‮‮‬‫‌‮(aFileName);
      try
      {
        return JSONNode.LoadFromStream((Stream) aData);
      }
      finally
      {
        if (aData != null)
        {
label_3:
          int num1 = -1380502142;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ -1654373325)) % 4U)
            {
              case 0:
                num1 = (int) num2 * 651712702 ^ -174511332;
                continue;
              case 1:
                JSONNode.\u200C‎⁮‫‪‌​‬⁯⁪‫‭⁯‪‪⁮​⁮⁭‬‍‮⁮⁭‮‫​​‫‮‎​‌‮⁬‪​⁯‬‮‮((IDisposable) aData);
                num1 = (int) num2 * 1054663738 ^ 182979685;
                continue;
              case 2:
                goto label_3;
              default:
                goto label_7;
            }
          }
        }
label_7:;
      }
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
label_1:
      int num1 = 1945416335;
      MemoryStream aData;
      JSONNode jsonNode;
      byte[] numArray;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1867194651)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            aData = JSONNode.\u200C‏⁭‌‮‮⁪‏‪⁯‪⁬⁯‫⁪⁫‪‬‮‍‏‫‫‮​‫⁬⁯⁫‭‬‬⁪⁬⁮‪‬‌⁮‏‮(numArray);
            num1 = (int) num2 * 2002210255 ^ 524907398;
            continue;
          case 2:
            JSONNode.\u200D‭‌​⁯⁮⁪⁪⁭‪⁮‪‍​‌‫⁭‭‭‎⁯⁪‮‎‬‍‪⁮⁪‍⁮⁬⁫‭‍‮‭‍‬⁮‮((Stream) aData, 0L);
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * -630152400 ^ 2077942954;
            continue;
          case 4:
            numArray = JSONNode.\u202A⁮‏‪‎‭‭‌‌‌⁯‌⁯⁬⁭⁯‬‬‪‌‏‍​⁮‮‏⁮‫‪​​⁪‭⁫⁮‭‍‪‏‮(aBase64);
            num1 = (int) num2 * 1234626140 ^ 1592819591;
            continue;
          default:
            goto label_6;
        }
      }
label_6:
      return jsonNode;
    }

    static CultureInfo \u202B‬‭‪‎⁭‬‍⁭⁯⁯⁬‏⁮‏‌‭‭‍‪‬⁭‬⁫‫⁫‫‫⁪⁫‬⁭⁫‫‭‍‮‏‮⁭‮() => CultureInfo.InvariantCulture;

    static bool \u202A‌‫‬‭‬⁯‍⁯‬⁫‫‌⁮⁯​⁫⁪⁬⁯⁬⁭⁯⁮‪‬⁮‬⁭‮‏‫​‌‫⁮‎‫⁭‌‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u206F‪‎⁬‬⁮‬⁭‪‭‬⁬‫⁪⁫​​‪​‬‬⁮​‫‎‮​​‏​‎​⁪‎‭​⁯‎‏‪‮() => base.GetHashCode();

    static char \u202A‎‏⁬‮⁭‍​‍‮​⁫‮‬‫‍‪⁫​⁮‮⁫‍⁮‪‪‪‍‏‏‌‮‏‬‏‪‍‍‍⁭‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u200B‍⁪⁭‫⁪‎‌‪⁫⁬‏‭‫⁬⁯⁭‫⁪⁯⁮‬‬⁭‏⁮​⁪‮‮‫‌⁮‮‭​‭‍‏⁬‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u200B‎⁫⁬‮‭⁭⁯‮​‭‭‫⁪⁬⁮‫⁫‮‬‪‌‏​‎‎‬⁪⁭⁫‍‌‬‭‬‭‪‪‮⁫‮([In] string obj0) => obj0.Length;

    static string \u202E‌⁯⁮⁮‫⁫⁯⁪⁫‏⁮‏‏‎‍‫‬‬⁮⁮‮‭‮‍‮‪⁬⁫‏‏‭‫‬‪‫‭⁮‎⁬‮([In] string obj0) => obj0.Trim();

    static bool \u202B⁯‪‏⁯‫⁪‮‍⁭⁭‪‪‌‬‫⁪⁫‬‫‎⁪⁯⁯‏‭⁪⁪⁭‪‍‍‍⁯⁪‌‏⁯‬‮‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u200D‎‭⁬‍‍‮‬‍‏‫⁯⁬⁬‬⁫‪⁬‫‪‌⁯⁯‎⁫‍⁬‮⁪‍‫​‎‮‫⁫‪‍‏‍‮([In] string obj0) => new Exception(obj0);

    static string \u200D‎‬‏⁪‫‎‫​‮‏⁭⁬‌‎⁬‎⁫‬‬‮‍⁭⁪​‌‍‫‬‭‮⁭‫‪​‮‍‍​‫‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u206D‫‎‎⁪⁯⁭‎⁫‍‍⁭⁪⁭‪⁫‌‬⁬‬​‎‪‮⁭‎‫⁬‍⁮​⁪‌‮⁬‍‮‮⁮‬‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u206D⁮‏​‫‫⁫⁯‌⁮‬⁬⁫⁬⁬‬‪⁫⁬‏‬‎‭‎⁮⁭‎‬‭‫⁭‫‮‌⁬​‬‌‍‮‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u200B⁫⁮⁫‍⁪​‌​‫‬‌​‮​‌‬‪​‏‭‫‮‏⁪‏‎‭‌‫⁫⁮⁭‫‌⁪‍⁯‪⁬‮([In] FileInfo obj0) => obj0.Directory;

    static string \u200F‭‫‌‏‎⁭‪⁬⁪⁫⁬​‭‌‫‭‍‪‭‏⁪‮⁯⁫‪⁭⁬⁪‍⁮‎‏⁭‮‬⁫‮⁭‬‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u202A⁯‍‬‮⁬‍‏⁬‬⁪‍‏‎⁯‌‌‍​‮⁭‮⁬​‪‌‏⁬‮‮‬⁭‫⁮‮⁭⁭‭‏‮‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u200C⁫⁬‭‭⁮⁫⁪​⁮⁪‎‪‪⁮‮‪⁫‫⁮⁬‏⁮‭⁬‍⁫‌⁮‪‌‏‫‏‪⁯⁬‏‫‎‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u200C‎⁮‫‪‌​‬⁯⁪‫‭⁯‪‪⁮​⁮⁭‬‍‮⁮⁭‮‫​​‫‮‎​‌‮⁬‪​⁯‬‮‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u206E‪‫‎‪⁫⁬‌‮⁪⁮⁪‎‬⁯⁪​‭‍‫‪⁯⁪⁫‍⁯‏⁮‎‏‫​‫‭⁭⁮‪⁬‭‪‮() => new MemoryStream();

    static void \u200D‭‌​⁯⁮⁪⁪⁭‪⁮‪‍​‌‫⁭‭‭‎⁯⁪‮‎‬‍‪⁮⁪‍⁮⁬⁫‭‍‮‭‍‬⁮‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u200F⁫‍‮‪‏⁭⁪⁮⁬‎‬⁪⁭‬​⁬‍‭‮‬‍‎‏‬‬‫‏‪‭‫⁭⁬‮‫⁯⁪‪⁫‏‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u200E‏‭​‎⁮‪‎‏‪‫‫‍‫⁬⁭⁫⁯‭⁯‬‬⁫⁭⁮⁪⁮⁬‌​⁭‬⁬‪‫​⁮‭⁬‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u206F​‏‮⁫‫⁯‫⁯‍‪‎‬⁬⁮‪⁮⁯⁬⁯⁬⁬‏‫⁮‮⁭​‏⁯⁭⁭‬⁯‬⁫⁯​⁮‏‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u202D⁪​‮⁬⁭⁭⁫⁮⁮​‪‎‮⁫‭‍‏‬‍⁪⁭‍⁯​⁪‌‌‍⁬‌⁮⁫​‍‫‌​‮⁯‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u206A‎‫⁪⁪⁯‎‏⁬‪‫⁮‫⁬⁫‪‎‏‎​​‬​‭‪⁪⁮‪⁬​​‍‮‮⁫⁯‌‌‮‌‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u206C‭⁪⁫​⁬⁫⁬⁮⁮‬‫‪‫‏‭‮⁪‭⁯⁬‭⁯⁯​‌⁬‬‬‌‪‏⁫‪‪​‎⁮⁭‬‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u200B‬‪⁮‏⁬‫‫‭‌⁬​‌⁬⁫‍‏⁯⁬⁪‬⁭⁫⁬⁬⁫⁭⁭⁯⁭‌‭⁬⁮⁯‏⁫‮‮‫‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u200E​‭‪⁮⁮‪⁪⁪⁯⁬‭⁯‭⁫​⁫‏⁫‮‬⁮⁫‎⁭⁪‏​‫⁮⁭⁮⁭​‫⁬⁪‪‪‏‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u206E‭⁫⁬‭​‮‮‭⁬‮‭‪⁫⁮‎⁫​‬⁬‫⁭⁭⁪​‌‍‎⁯⁬‬⁪⁫‭​‏⁭​⁫⁬‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u206E⁪‫​‌‪‬⁬‍‏‬‌‏⁪‏⁫‏‏⁯⁬⁯⁪⁯‬⁬‍⁬‭‪⁫‮⁬​‎⁯‮‮‬‫‌‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u202A⁮‏‪‎‭‭‌‌‌⁯‌⁯⁬⁭⁯‬‬‪‌‏‍​⁮‮‏⁮‫‪​​⁪‭⁫⁮‭‍‪‏‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u200C‏⁭‌‮‮⁪‏‪⁯‪⁬⁯‫⁪⁫‪‬‮‍‏‫‫‮​‫⁬⁯⁫‭‬‬⁪⁬⁮‪‬‌⁮‏‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
