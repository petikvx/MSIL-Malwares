// Decompiled with JetBrains decompiler
// Type: .
// Assembly: 1m, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 9A9758D8-D673-4760-AFDD-69A3D20C59FF
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00100-msil\Trojan-Ransom.Win32.Blocker.krdt-d2cd288694c5883ae6364f17a60ae3fe9619748d94946bbd3e1ff8ba566b1e0f.exe

using \u0001;
using \u0007;
using \u000E;
using \u0020;
using System;
using System.Runtime.CompilerServices;

namespace \u0006
{
  internal class \u0001
  {
    public static int \u0001;
    public static int \u0001;
    public static int \u0002;
    public static int \u0003;
    public static int \u0004;
    private static int \u0005;
    private static int \u0006;
    private static int \u0007;
    private static int \u0008;
    private static int \u0002;
    private static int \u0003;
    private static int \u0004;
    private static int \u0005;
    private static int \u0006;
    private static int \u0007;
    private int \u0008;
    private bool \u0001;
    private int \u000E;
    private int \u000F;
    private \u0003 \u0001;
    private \u000E.\u0001 \u0001;
    [NonSerialized]
    internal static \u0013 \u001B;

    public \u0001()
      : this(\u0006.\u0001.\u0002, false)
    {
    }

    public \u0001(int _param1)
      : this(_param1, false)
    {
    }

    public \u0001(int _param1, bool _param2)
    {
      if (_param1 == \u0006.\u0001.\u0002)
        _param1 = 6;
      else if (_param1 < \u0006.\u0001.\u0003 || _param1 > \u0006.\u0001.\u0001)
        throw new ArgumentOutOfRangeException(\u0005.\u0001(213263150, 1739981344, 1782412580));
      this.\u0001 = new \u0003();
      this.\u0001 = new \u000E.\u0001(this.\u0001);
      this.\u0001 = _param2;
      this.\u0001(\u0026.\u0001);
      this.\u0001(_param1);
      this.\u0001();
    }

    static \u0001()
    {
      \u0003.\u0001(typeof (\u0006.\u0001));
      \u0006.\u0001.\u0001 = 9;
      \u0006.\u0001.\u0001 = 1;
      \u0006.\u0001.\u0002 = -1;
      \u0006.\u0001.\u0003 = 0;
      \u0006.\u0001.\u0004 = 8;
      \u0006.\u0001.\u0005 = 1;
      \u0006.\u0001.\u0006 = 4;
      \u0006.\u0001.\u0007 = 8;
      \u0006.\u0001.\u0008 = 0;
      \u0006.\u0001.\u0002 = 1;
      \u0006.\u0001.\u0003 = 16;
      \u0006.\u0001.\u0004 = 20;
      \u0006.\u0001.\u0005 = 28;
      \u0006.\u0001.\u0006 = 30;
      \u0006.\u0001.\u0007 = (int) sbyte.MaxValue;
    }

    public void \u0001()
    {
      this.\u000E = this.\u0001 ? \u0006.\u0001.\u0003 : \u0006.\u0001.\u0008;
      this.\u000F = 0;
      this.\u0001.\u0001();
      this.\u0001.\u0001();
    }

    [SpecialName]
    public int \u0001() => this.\u0001.\u0002();

    [SpecialName]
    public int \u0002() => this.\u0001.\u0003();

    [SpecialName]
    public int \u0003() => this.\u000F;

    public void \u0004() => this.\u000E |= \u0006.\u0001.\u0006;

    public void \u0005() => this.\u000E |= \u0006.\u0001.\u0006 | \u0006.\u0001.\u0007;

    [SpecialName]
    public bool \u0006() => this.\u000E == \u0006.\u0001.\u0006 && this.\u0001.\u0003();

    [SpecialName]
    public bool \u0007() => this.\u0001.\u0001();

    public void \u0001(byte[] _param1) => this.\u0001(_param1, 0, _param1.Length);

    public void \u0001(byte[] _param1, int _param2, int _param3)
    {
      if ((this.\u000E & \u0006.\u0001.\u0007) != 0)
        throw new InvalidOperationException(\u0005.\u0001(885493726, 1739981438, 1782412568));
      this.\u0001.\u0001(_param1, _param2, _param3);
    }

    public void \u0001(int _param1)
    {
      if (_param1 == \u0006.\u0001.\u0002)
        _param1 = 6;
      else if (_param1 < \u0006.\u0001.\u0003 || _param1 > \u0006.\u0001.\u0001)
        throw new ArgumentOutOfRangeException(\u0005.\u0001(776695964, 1739981380, 1782412580));
      if (this.\u0008 == _param1)
        return;
      this.\u0008 = _param1;
      this.\u0001.\u0001(_param1);
    }

    public void \u0001(\u0026 _param1) => this.\u0001.\u0001(_param1);

    public int \u0001(byte[] _param1) => this.\u0001(_param1, 0, _param1.Length);

    public int \u0001(byte[] _param1, int _param2, int _param3)
    {
      int num1 = _param3;
      if (this.\u000E == \u0006.\u0001.\u0007)
        throw new InvalidOperationException(\u0005.\u0001(608021332, 1739981374, 1782412604));
      if (this.\u000E < \u0006.\u0001.\u0003)
      {
        int num2 = \u0006.\u0001.\u0004 + 112 << 8;
        int num3 = this.\u0008 - 1 >> 1;
        if (num3 < 0 || num3 > 3)
          num3 = 3;
        int num4 = num2 | num3 << 6;
        if ((this.\u000E & \u0006.\u0001.\u0005) != 0)
          num4 |= 32;
        this.\u0001.\u0003(num4 + (31 - num4 % 31));
        if ((this.\u000E & \u0006.\u0001.\u0005) != 0)
        {
          int num5 = this.\u0001.\u0002();
          this.\u0001.\u0001();
          this.\u0001.\u0003(num5 >> 16);
          this.\u0001.\u0003(num5 & (int) ushort.MaxValue);
        }
        this.\u000E = \u0006.\u0001.\u0003 | this.\u000E & (\u0006.\u0001.\u0006 | \u0006.\u0001.\u0007);
      }
      while (true)
      {
        do
        {
          do
          {
            int num6 = this.\u0001.\u0001(_param1, _param2, _param3);
            _param2 += num6;
            this.\u000F += num6;
            _param3 -= num6;
            if (_param3 == 0 || this.\u000E == \u0006.\u0001.\u0006)
              goto label_24;
          }
          while (this.\u0001.\u0003((this.\u000E & \u0006.\u0001.\u0006) != 0, (this.\u000E & \u0006.\u0001.\u0007) != 0));
          if (this.\u000E == \u0006.\u0001.\u0003)
            return num1 - _param3;
          if (this.\u000E == \u0006.\u0001.\u0004)
          {
            if (this.\u0008 != \u0006.\u0001.\u0003)
            {
              for (int index = 8 + (-this.\u0001.\u0001() & 7); index > 0; index -= 10)
                this.\u0001.\u0001(2, 10);
            }
            this.\u000E = \u0006.\u0001.\u0003;
          }
        }
        while (this.\u000E != \u0006.\u0001.\u0005);
        this.\u0001.\u0002();
        if (!this.\u0001)
        {
          int num7 = this.\u0001.\u0002();
          this.\u0001.\u0003(num7 >> 16);
          this.\u0001.\u0003(num7 & (int) ushort.MaxValue);
        }
        this.\u000E = \u0006.\u0001.\u0006;
      }
label_24:
      return num1 - _param3;
    }

    public void \u0002(byte[] _param1) => this.\u0002(_param1, 0, _param1.Length);

    public void \u0002(byte[] _param1, int _param2, int _param3)
    {
      this.\u000E = this.\u000E == \u0006.\u0001.\u0008 ? \u0006.\u0001.\u0002 : throw new InvalidOperationException();
      this.\u0001.\u0001(_param1, _param2, _param3);
    }
  }
}
