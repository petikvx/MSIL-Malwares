// Decompiled with JetBrains decompiler
// Type: ProjNet.Templates.ListenerTemplate
// Assembly: IRefl, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A29A65F6-B7ED-422C-83D4-B9EFD61E5F13
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-8e89881e34371e10b7f9cb943183a061aab9b22853cb7192e1ac09401f4cc545.exe

using IRefl.Composer;
using IRefl.Managers;
using IRefl.Pools;
using IRefl.Producers;
using IRefl.Wrappers;
using ProjNet.Candidates;
using ProjNet.Common;
using ProjNet.Maps;
using ProjNet.Services;
using ProjNet.States;
using ProjNet.Structs;
using System;
using System.Collections.Generic;
using System.Globalization;
using System.Runtime.CompilerServices;
using System.Text;

namespace ProjNet.Templates
{
  public class ListenerTemplate : Collection, CreatorMerchantCandidate, Reg, CodeObjectProducer
  {
    private Initializer _Ref;
    private TagStatusService m_Global;
    private DispatcherValueManager interceptor;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal ListenerTemplate(
      Initializer ident,
      TagStatusService ivk,
      DispatcherValueManager role,
      List<Strategy> visitor2,
      string map3,
      string caller4,
      long ord5ID,
      string init6,
      string param7,
      string ivk8)
    {
      PageAdvisorStructBuilder.PrepareCreator();
      // ISSUE: explicit constructor call
      base.\u002Ector(map3, caller4, ord5ID, init6, ivk8, param7);
      this._Ref = ident;
      this.m_Global = ivk;
      this.interceptor = role;
      if (visitor2.Count != 3)
        throw new ArgumentException("Axis info should contain three axes for geocentric coordinate systems");
      this.CallProcess(visitor2);
    }

    public static CreatorMerchantCandidate WGS84
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => new Serializer().InstantiateProcess("WGS84 Geocentric", (Initializer) Token.WGS84, AdvisorStatusMap.ViewRegistry(), (DispatcherValueManager) HelperValueManager.Greenwich);
    }

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public Initializer ValidateItem() => this._Ref;

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public void AwakeItem(Initializer first) => this._Ref = first;

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public TagStatusService CalculateItem() => this.m_Global;

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public void ExcludeItem(TagStatusService def) => this.m_Global = def;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public override Candidate WriteItem(int instancesize) => (Candidate) this.m_Global;

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public DispatcherValueManager MoveItem() => this.interceptor;

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public void CustomizeItem(DispatcherValueManager item) => this.interceptor = item;

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public override string RevertStatus()
    {
      int num1 = 1;
      string str;
      while (true)
      {
        int num2 = num1;
        bool flag;
        StringBuilder stringBuilder;
        while (true)
        {
          int num3;
          switch (num2)
          {
            case 0:
              stringBuilder.AppendFormat("GEOCCS[\"{0}\", {1}, {2}, {3}", (object) this.Name, (object) this.ValidateItem().RevertStatus(), (object) this.MoveItem().RevertStatus(), (object) this.CalculateItem().RevertStatus());
              if (this.ForgotProcess().Count != 3 || this.ForgotProcess()[0].Name != "X" || this.ForgotProcess()[0].DisableProcess() != ElementNameStyle.Other)
                break;
              goto label_3;
            case 1:
label_9:
              stringBuilder = new StringBuilder();
              num2 = 0;
              continue;
            case 2:
            case 5:
            case 7:
              goto label_1;
            case 3:
            case 6:
              if (flag)
                goto label_10;
              else
                goto label_16;
            case 4:
              if (!(this.ForgotProcess()[1].Name != "Y") && this.ForgotProcess()[1].DisableProcess() == ElementNameStyle.East && !(this.ForgotProcess()[2].Name != "Z"))
              {
                num3 = this.ForgotProcess()[2].DisableProcess() != ElementNameStyle.North ? 1 : 0;
                goto label_7;
              }
              else
                break;
            case 8:
              goto label_11;
            case 9:
              goto label_20;
            default:
              goto label_14;
          }
          num3 = 1;
label_7:
          if (num3 != 0)
          {
            if (ListenerTemplate.DestroyList())
            {
              num2 = 8;
              continue;
            }
            goto label_9;
          }
label_16:
          if (!string.IsNullOrEmpty(this.CountItem()) && this.SelectItem() > 0L)
            stringBuilder.AppendFormat(", AUTHORITY[\"{0}\", \"{1}\"]", (object) this.CountItem(), (object) this.SelectItem());
          stringBuilder.Append("]");
          str = stringBuilder.ToString();
          if (ListenerTemplate.DestroyList())
            num2 = 9;
          else
            goto label_20;
        }
label_1:
        int asset_length;
        flag = asset_length < this.ForgotProcess().Count;
        num1 = 3;
        continue;
label_3:
        num1 = 4;
        continue;
label_10:
        stringBuilder.AppendFormat(", {0}", (object) this.ChangeItem(asset_length).OrderProcess());
        ++asset_length;
        num1 = 7;
        continue;
label_11:
        asset_length = 0;
        goto label_1;
label_14:
        num1 = 2;
      }
label_20:
      return str;
    }

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public override string AssetItem()
    {
      int num1 = 5;
      if (true)
        goto label_12;
label_1:
      StringBuilder stringBuilder = new StringBuilder();
      num1 = 0;
label_12:
      List<Strategy>.Enumerator enumerator;
      string str;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 1:
            stringBuilder.AppendFormat((IFormatProvider) CultureInfo.InvariantCulture.NumberFormat, "<CS_CoordinateSystem Dimension=\"{0}\"><CS_GeocentricCoordinateSystem>{1}", new object[2]
            {
              (object) this.InsertItem(),
              (object) this.ListRegistry()
            });
            int num2 = 2;
            num1 = ListenerTemplate.PostList() ? num2 : num2;
            continue;
          case 2:
            enumerator = this.ForgotProcess().GetEnumerator();
            goto case 3;
          case 3:
          case 4:
            try
            {
label_8:
              while (enumerator.MoveNext())
              {
                Strategy current = enumerator.Current;
                int num3 = 2;
                while (true)
                {
                  switch (num3)
                  {
                    case 0:
                    case 2:
                      goto label_5;
                    case 1:
                    case 3:
                      goto label_8;
                    default:
                      num3 = 3;
                      continue;
                  }
                }
label_5:
                stringBuilder.Append(current.EnableProcess());
              }
            }
            finally
            {
              enumerator.Dispose();
            }
            stringBuilder.AppendFormat("{0}{1}{2}</CS_GeocentricCoordinateSystem></CS_CoordinateSystem>", (object) this.ValidateItem().AssetItem(), (object) this.CalculateItem().AssetItem(), (object) this.MoveItem().AssetItem());
            str = stringBuilder.ToString();
            num1 = 6;
            continue;
          case 5:
            goto label_1;
          case 6:
            goto label_14;
          default:
            if (!ListenerTemplate.PostList())
            {
              num1 = 4;
              continue;
            }
            goto label_14;
        }
      }
label_14:
      return str;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public override bool InvokeItem(object info)
    {
      int num1 = 3;
      ListenerTemplate listenerTemplate;
      bool flag1;
      while (true)
      {
        int num2 = num1;
        bool flag2;
        while (true)
        {
          switch (num2)
          {
            case 0:
              if (listenerTemplate.ValidateItem().InvokeItem((object) this.ValidateItem()) && listenerTemplate.CalculateItem().InvokeItem((object) this.CalculateItem()))
              {
                int num3 = 6;
                num2 = ListenerTemplate.PostList() ? num3 : num3;
                continue;
              }
              goto label_11;
            case 1:
            case 5:
              if (!flag2)
              {
                listenerTemplate = info as ListenerTemplate;
                goto case 0;
              }
              else
                goto label_9;
            case 2:
            case 4:
              goto label_13;
            case 3:
              goto label_5;
            case 6:
              goto label_10;
            default:
              goto label_4;
          }
        }
label_4:
        num1 = 0;
        continue;
label_5:
        flag2 = !(info is ListenerTemplate);
        num1 = 5;
        continue;
label_9:
        flag1 = false;
        num1 = 4;
      }
label_10:
      int num4 = listenerTemplate.MoveItem().InvokeItem((object) this.MoveItem()) ? 1 : 0;
      goto label_12;
label_11:
      num4 = 0;
label_12:
      flag1 = num4 != 0;
label_13:
      return flag1;
    }

    internal static bool DestroyList() => true;

    internal static bool PostList() => false;
  }
}
