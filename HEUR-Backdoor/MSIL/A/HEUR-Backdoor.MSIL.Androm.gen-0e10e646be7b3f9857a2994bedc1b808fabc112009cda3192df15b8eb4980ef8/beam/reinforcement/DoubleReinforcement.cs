// Decompiled with JetBrains decompiler
// Type: beam.reinforcement.DoubleReinforcement
// Assembly: MuiResourceTypeIdIntEn, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 2C7C9528-88C0-45FF-AB6A-2AC0C29EABCB
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.07\HEUR-Backdoor.MSIL.Androm.gen-0e10e646be7b3f9857a2994bedc1b808fabc112009cda3192df15b8eb4980ef8.exe

using System;

namespace beam.reinforcement
{
  public class DoubleReinforcement : Reinforcement
  {
    private double As;
    private double Aas;

    public DoubleReinforcement(double r, int n, double ra, int na)
    {
      if (r <= 0.0)
        throw new ArgumentException("r can't be < = 0 ");
      if (n <= 0)
        throw new ArgumentException("n of rebar can't be <=0");
      if (ra <= 0.0)
        throw new ArgumentException("ra can't be < = 0 ");
      if (na <= 0)
        throw new ArgumentException("na of rebar can't be <=0");
      this.As = this.calcAs(r, n);
      this.Aas = this.calcAs(ra, na);
    }

    public double spaceTensileReinforcement() => this.As;

    public double spaceCompressionReinforcement() => this.Aas;

    private double calcAs(double r, int number) => (double) number * Math.PI * Math.Pow(r / 2.0, 2.0);
  }
}
