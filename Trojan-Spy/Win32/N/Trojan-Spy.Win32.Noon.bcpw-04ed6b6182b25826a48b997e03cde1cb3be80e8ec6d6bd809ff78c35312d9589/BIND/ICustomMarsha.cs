// Decompiled with JetBrains decompiler
// Type: BIND.ICustomMarsha
// Assembly: RSACspObj, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 4F5485A2-22DD-4A3A-83EE-265873F291A8
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan-Spy.Win32.Noon.bcpw-04ed6b6182b25826a48b997e03cde1cb3be80e8ec6d6bd809ff78c35312d9589.exe

using DateTimeTypeI;
using Resource;
using System.Collections.Generic;

namespace BIND
{
  public class ICustomMarsha : EventCacheEn
  {
    public int Bet { get; set; }

    public int Insurance { get; set; }

    internal List<IPropertyVa> Hand1 { get; set; }

    internal List<IPropertyVa> Hand2 { get; set; }

    public bool Hand1Flipped { get; set; }

    public bool Hand2Flipped { get; set; }

    public ICustomMarsha()
    {
    }

    public ICustomMarsha(
      string id,
      string UserName,
      int Balance,
      int WinStreak,
      int WinCount,
      int LoseCount,
      int Games,
      int Owing,
      double AvgBet,
      int MaxBet,
      int MinBet,
      string LastPlay,
      int CurrentStreak)
      : base(id, UserName, Balance, WinStreak, WinCount, LoseCount, Games, Owing, AvgBet, MaxBet, MinBet, LastPlay, CurrentStreak)
    {
      this.Bet = 0;
      this.Insurance = 0;
      this.Hand1 = new List<IPropertyVa>();
      this.Hand2 = new List<IPropertyVa>();
      this.Hand1Flipped = false;
      this.Hand2Flipped = false;
    }

    internal void AddHand1(IPropertyVa Card)
    {
label_1:
      int num1 = -34334831;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -147248316)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            this.Hand1.Add(Card);
            num1 = (int) num2 * 2059025401 ^ 794560325;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    internal void AddHand2(IPropertyVa Card)
    {
label_1:
      int num1 = 792246754;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1838239702)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            this.Hand2.Add(Card);
            num1 = (int) num2 * 1832505122 ^ 1187583603;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }
  }
}
