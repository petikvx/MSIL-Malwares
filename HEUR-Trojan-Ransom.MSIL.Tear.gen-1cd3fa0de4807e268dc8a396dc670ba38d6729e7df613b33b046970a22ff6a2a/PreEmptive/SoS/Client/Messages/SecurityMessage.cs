// Decompiled with JetBrains decompiler
// Type: PreEmptive.SoS.Client.Messages.SecurityMessage
// Assembly: EncoderCSL, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8BC70EB6-E222-4E38-9ED5-32744A85C676
// Assembly location: C:\Users\Administrateur\Downloads\toto\HEUR-Trojan-Ransom.MSIL.Tear.gen-1cd3fa0de4807e268dc8a396dc670ba38d6729e7df613b33b046970a22ff6a2a.exe

using PreEmptive.Analytics.Common;
using PreEmptive.Analytics.Common.Utilities;
using PreEmptive.SoS.Client.Cache;
using PreEmptive.SoS.Client.MessageProxies;
using System;

namespace PreEmptive.SoS.Client.Messages
{
  public class SecurityMessage : Message
  {
    public override void Send(CacheService cache, PlatformClient paclient)
    {
      int A_1 = 11;
      int num1 = 0;
      switch (num1)
      {
        default:
          BinaryInfo binary;
          ExtendedKeys keys;
          int num2;
          switch (0)
          {
            case 0:
label_3:
              binary = Message.ConvertBinaryInfo(this.Binary);
              keys = Message.ConvertExtendedKeys(this.GetExtendedKeys());
              break;
            default:
label_2:
              string code;
              while (true)
              {
                switch (num1)
                {
                  case 0:
                    goto label_15;
                  case 1:
                    if (this.Event.PrivacySetting != PrivacySettings.AlwaysSend)
                    {
                      num2 = 5;
                      num1 = num2;
                      continue;
                    }
                    num2 = 4;
                    num1 = num2;
                    continue;
                  case 2:
                    num2 = 11642;
                    int num3 = num2;
                    num2 = 11642;
                    int num4 = num2;
                    switch (num3 == num4 ? 1 : 0)
                    {
                      case 0:
                      case 2:
                        goto label_4;
                      default:
                        num2 = 0;
                        if (num2 == 0)
                          ;
                        num2 = 3;
                        num1 = num2;
                        continue;
                    }
                  case 3:
                    if (!(code == Utils.a("\uECBE꓀ꃂ냄뗆ꃈ뿊듌\uE1CE飐뷒ꇔ닖뻘\uA9DA드ꯞ飠췢ꇤ苦诨黪諬裮飰鷲鋴", A_1)))
                    {
                      num2 = 7;
                      num1 = num2;
                      continue;
                    }
                    paclient.ReportDebugging(true, keys, new Guid?(), binary);
                    num2 = 0;
                    num1 = num2;
                    continue;
                  case 4:
                    if ((code = this.Event.Code) != null)
                    {
                      num2 = 8;
                      num1 = num2;
                      continue;
                    }
                    goto label_18;
                  case 5:
                    goto label_7;
                  case 6:
                    if (!(code == Utils.a("\uECBE꓀ꃂ냄뗆ꃈ뿊듌\uE1CE飐뷒ꇔ닖뻘\uA9DA드ꯞ飠췢뇤蛦蓨鯪裬鷮飰鷲鋴", A_1)))
                    {
                      num2 = 2;
                      num1 = num2;
                      continue;
                    }
                    goto label_19;
                  case 7:
                    goto label_11;
                  case 8:
                    num2 = 6;
                    num1 = num2;
                    continue;
                  default:
                    goto label_3;
                }
              }
label_15:
              return;
label_7:
              return;
label_11:
              num2 = 1;
              if (num2 == 0)
                ;
              return;
label_18:
              return;
label_19:
              paclient.ReportTamper(keys, new Guid?(), binary);
              return;
          }
label_4:
          num2 = 1;
          num1 = num2;
          goto label_2;
      }
    }
  }
}
