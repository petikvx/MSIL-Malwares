// Decompiled with JetBrains decompiler
// Type: .
// Assembly: C, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: F25E1EAB-EB04-4ECD-A70E-0143E63DFF03
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan.Win32.Refroso.hrpz-e40496d5f84ff83ebc4a14536714c2842f292149aa58d7861f48ee8d2476be88.exe

using \u0005;
using \u0006;
using Microsoft.Win32;
using System;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace \u0006
{
  internal sealed class \u0001 : \u0004
  {
    internal static readonly string \u0001;
    internal static readonly string \u0002;
    private static bool? \u0001;

    public static void \u0003([In] uint obj0)
    {
      \u0001 obj1;
      try
      {
        obj1 = new \u0001();
        obj1.\u0002(obj0);
      }
      catch (Exception ex)
      {
        \u0001 obj2 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<uint> local = (ValueType) obj0;
        \u0008.\u0005.\u0002(ex, (object) obj2, (object) local);
        throw;
      }
    }

    public static void \u0003([In] string obj0)
    {
      \u0001 obj1;
      try
      {
        obj1 = new \u0001();
        obj1.\u0002(obj0);
      }
      catch (Exception ex)
      {
        \u0001 obj2 = obj1;
        string str = obj0;
        \u0008.\u0005.\u0002(ex, (object) obj2, (object) str);
        throw;
      }
    }

    protected override void \u0002([In] \u0005.\u0005 obj0)
    {
      try
      {
        obj0.\u0003();
      }
      catch (Exception ex)
      {
        \u0005.\u0005 obj = obj0;
        \u0008.\u0005.\u0002(ex, (object) this, (object) obj);
        throw;
      }
    }

    protected override bool \u0002()
    {
      try
      {
        return \u0001.\u0003();
      }
      catch (Exception ex)
      {
        \u0008.\u0005.\u0002(ex, (object) this);
        throw;
      }
    }

    private static bool \u0003()
    {
      try
      {
        if (!\u0001.\u0001.HasValue)
          goto label_2;
label_1:
        return \u0001.\u0001.Value;
label_2:
        \u0001.\u0003();
        goto label_1;
      }
      catch (Exception ex)
      {
        \u0008.\u0005.\u0002(ex);
        throw;
      }
    }

    private static void \u0003()
    {
      object obj1;
      RegistryKey registryKey1;
      bool flag;
      string subkey;
      try
      {
        registryKey1 = (RegistryKey) null;
        try
        {
          subkey = "Software\\" + \u0001.\u0002 + "\\" + \u0001.\u0001;
          do
          {
            registryKey1 = Registry.CurrentUser.CreateSubKey(subkey);
          }
          while (false);
          obj1 = registryKey1.GetValue("SmartAssemblyReportUsage");
          if (obj1 == null)
          {
            if (false)
              return;
            \u001B\u0005.\u007E\u008F\u0006((object) registryKey1, "SmartAssemblyReportUsage", (object) bool.FalseString);
            flag = \u0001.\u0004();
            \u001C\u0005.\u007E\u0090\u0006((object) registryKey1, "SmartAssemblyReportUsage", (object) flag.ToString(), RegistryValueKind.String);
            \u0001.\u0001 = new bool?(flag);
          }
          else
            \u0001.\u0001 = new bool?(\u0016\u0003.\u001B\u0003(obj1));
        }
        catch
        {
          \u0001.\u0001 = new bool?(false);
        }
        finally
        {
          if (registryKey1 != null)
            \u0014\u0003.\u007E\u008A\u0006((object) registryKey1);
        }
      }
      catch (Exception ex)
      {
        RegistryKey registryKey2 = registryKey1;
        string str = subkey;
        object obj2 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<bool> local = (ValueType) flag;
        \u0008.\u0005.\u0002(ex, (object) registryKey2, (object) str, obj2, (object) local);
        throw;
      }
    }

    private static bool \u0004()
    {
      \u0007 obj1;
      bool flag;
      try
      {
        obj1 = new \u0007();
        try
        {
          if (true)
            goto label_3;
label_2:
          flag = obj1.DialogResult == DialogResult.Yes;
          goto label_7;
label_3:
          int num = (int) obj1.ShowDialog();
          goto label_2;
        }
        finally
        {
          if (obj1 != null)
            \u0014\u0003.\u007E\u0008\u0002((object) obj1);
        }
label_7:
        return flag;
      }
      catch (Exception ex)
      {
        \u0007 obj2 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<bool> local = (ValueType) flag;
        \u0008.\u0005.\u0002(ex, (object) obj2, (object) local);
        throw;
      }
    }

    public \u0001()
    {
      try
      {
      }
      catch (Exception ex)
      {
        \u0008.\u0005.\u0002(ex, (object) this);
        throw;
      }
    }

    static \u0001()
    {
      try
      {
        \u0001.\u0001 = "Crypted";
        \u0001.\u0002 = "[Unknown company]";
      }
      catch (Exception ex)
      {
        \u0008.\u0005.\u0002(ex);
        throw;
      }
    }
  }
}
