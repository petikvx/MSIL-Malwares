// Decompiled with JetBrains decompiler
// Type: MaterialSurface.Dialog
// Assembly: Func, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: EFD38B4B-EBC7-4ADC-A92E-3AF74F6197CA
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.07\HEUR-Backdoor.MSIL.Androm.gen-0b4d55da62340d71ea45226007214ecfa33b00b09e9cbd48736eaaf51cfd8125.exe

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.Drawing.Drawing2D;
using System.Windows.Forms;

namespace MaterialSurface
{
  public class Dialog : Form
  {
    private Size DEFAULT_BUTTON_SIZE = new Size(75, 35);
    private readonly int INIT_BUTTON_POSITION = 60;
    private readonly int DEFAULT_SPACE = 8;
    private float MAX_WIDTH = 650f;
    private static readonly Dictionary<string, string> buttonText = new Dictionary<string, string>()
    {
      {
        "Ok",
        "OK"
      },
      {
        "Abort",
        "Abort"
      },
      {
        "Retry",
        "Retry"
      },
      {
        "Inorge",
        "Inorge"
      },
      {
        "Cancel",
        "Cancel"
      },
      {
        "Yes",
        "Yes"
      },
      {
        "No",
        "No"
      }
    };
    private static Color primaryColor = Color.BlueViolet;
    private static DialogResult dialogResult = DialogResult.None;
    private static Dialog _this;
    private static bool darkTheme = false;
    private Buttons buttons;
    private string strMessage = string.Empty;
    private string strHeader = string.Empty;
    private Form mainParent;
    private readonly StringFormat textAlignment = new StringFormat()
    {
      Alignment = StringAlignment.Near,
      LineAlignment = StringAlignment.Near
    };
    private Rectangle messageArea;
    private Rectangle headerArea;
    private readonly Font messageFont = new Font("Segoe UI", 12f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
    private ComboBox comboBox1;
    private readonly Font headerFont = new Font("Segoe UI", 14f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);

    public static string ButtonOkText
    {
      get => Dialog.buttonText["Ok"];
      set => Dialog.buttonText["Ok"] = value;
    }

    public static string ButtonAbortText
    {
      get => Dialog.buttonText["Abort"];
      set => Dialog.buttonText["Abort"] = value;
    }

    public static string ButtonRetryText
    {
      get => Dialog.buttonText["Retry"];
      set => Dialog.buttonText["Retry"] = value;
    }

    public static string ButtonInorgeText
    {
      get => Dialog.buttonText["Inorge"];
      set => Dialog.buttonText["Inorge"] = value;
    }

    public static string ButtonCancelText
    {
      get => Dialog.buttonText["Cancel"];
      set => Dialog.buttonText["Cancel"] = value;
    }

    public static string ButtonYesText
    {
      get => Dialog.buttonText["Yes"];
      set => Dialog.buttonText["Yes"] = value;
    }

    public static string ButtonNoText
    {
      get => Dialog.buttonText["No"];
      set => Dialog.buttonText["No"] = value;
    }

    public static Color PrimaryColor
    {
      get => Dialog.primaryColor;
      set => Dialog.primaryColor = value;
    }

    public static bool DarkTheme
    {
      get => Dialog.darkTheme;
      set => Dialog.darkTheme = value;
    }

    private void InitButton(Buttons type)
    {
      int num1 = 0;
      switch (type)
      {
        case Buttons.AbortRetryInorge:
          TextButton textButton1 = new TextButton();
          textButton1.Anchor = AnchorStyles.Bottom | AnchorStyles.Right;
          textButton1.ForeColor = Dialog.primaryColor;
          textButton1.EffectType = ET.Custom;
          textButton1.Text = Dialog.buttonText["Abort"];
          textButton1.Size = this.DEFAULT_BUTTON_SIZE;
          textButton1.Location = new Point(this.INIT_BUTTON_POSITION + (this.DEFAULT_BUTTON_SIZE.Width + this.DEFAULT_SPACE) * num1, 85);
          textButton1.DialogResult = DialogResult.Abort;
          TextButton textButton2 = textButton1;
          textButton2.Click += new EventHandler(this.ButtonClick);
          int num2 = num1 + 1;
          TextButton textButton3 = new TextButton();
          textButton3.Anchor = AnchorStyles.Bottom | AnchorStyles.Right;
          textButton3.ForeColor = Dialog.primaryColor;
          textButton3.EffectType = ET.Custom;
          textButton3.Text = Dialog.buttonText["Retry"];
          textButton3.Size = this.DEFAULT_BUTTON_SIZE;
          textButton3.Location = new Point(this.INIT_BUTTON_POSITION + (this.DEFAULT_BUTTON_SIZE.Width + this.DEFAULT_SPACE) * num2, 85);
          textButton3.DialogResult = DialogResult.Retry;
          TextButton textButton4 = textButton3;
          textButton4.Click += new EventHandler(this.ButtonClick);
          int num3 = num2 + 1;
          TextButton textButton5 = new TextButton();
          textButton5.Anchor = AnchorStyles.Bottom | AnchorStyles.Right;
          textButton5.ForeColor = Dialog.primaryColor;
          textButton5.EffectType = ET.Custom;
          textButton5.Text = Dialog.buttonText["Inorge"];
          textButton5.Size = this.DEFAULT_BUTTON_SIZE;
          textButton5.Location = new Point(this.INIT_BUTTON_POSITION + (this.DEFAULT_BUTTON_SIZE.Width + this.DEFAULT_SPACE) * num3, 85);
          textButton5.DialogResult = DialogResult.Ignore;
          TextButton textButton6 = textButton5;
          textButton6.Click += new EventHandler(this.ButtonClick);
          this.Controls.Add((Control) textButton2);
          this.Controls.Add((Control) textButton4);
          this.Controls.Add((Control) textButton6);
          break;
        case Buttons.Ok:
          TextButton textButton7 = new TextButton();
          textButton7.Anchor = AnchorStyles.Bottom | AnchorStyles.Right;
          textButton7.ForeColor = Dialog.primaryColor;
          textButton7.EffectType = ET.Custom;
          textButton7.Text = Dialog.buttonText["Ok"];
          textButton7.Size = this.DEFAULT_BUTTON_SIZE;
          textButton7.Location = new Point(this.INIT_BUTTON_POSITION + (this.DEFAULT_BUTTON_SIZE.Width + this.DEFAULT_SPACE) * 2 - 40, 85);
          textButton7.DialogResult = DialogResult.OK;
          TextButton textButton8 = textButton7;
          textButton8.Click += new EventHandler(this.ButtonClick);
          this.Controls.Add((Control) textButton8);
          break;
        case Buttons.OkCancel:
          int num4 = 1;
          TextButton textButton9 = new TextButton();
          textButton9.Anchor = AnchorStyles.Bottom | AnchorStyles.Right;
          textButton9.ForeColor = Dialog.primaryColor;
          textButton9.EffectType = ET.Custom;
          textButton9.Text = Dialog.buttonText["Cancel"];
          textButton9.Size = this.DEFAULT_BUTTON_SIZE;
          textButton9.Location = new Point(this.INIT_BUTTON_POSITION + (this.DEFAULT_BUTTON_SIZE.Width + this.DEFAULT_SPACE) * num4, 85);
          textButton9.DialogResult = DialogResult.Cancel;
          TextButton textButton10 = textButton9;
          textButton10.Click += new EventHandler(this.ButtonClick);
          int num5 = num4 + 1;
          TextButton textButton11 = new TextButton();
          textButton11.Anchor = AnchorStyles.Bottom | AnchorStyles.Right;
          textButton11.ForeColor = Dialog.primaryColor;
          textButton11.EffectType = ET.Custom;
          textButton11.Text = Dialog.buttonText["Ok"];
          textButton11.Size = this.DEFAULT_BUTTON_SIZE;
          textButton11.Location = new Point(this.INIT_BUTTON_POSITION + (this.DEFAULT_BUTTON_SIZE.Width + this.DEFAULT_SPACE) * num5, 85);
          textButton11.DialogResult = DialogResult.OK;
          TextButton textButton12 = textButton11;
          textButton12.Click += new EventHandler(this.ButtonClick);
          this.Controls.Add((Control) textButton12);
          this.Controls.Add((Control) textButton10);
          break;
        case Buttons.RetryCancel:
          int num6 = 1;
          TextButton textButton13 = new TextButton();
          textButton13.Anchor = AnchorStyles.Bottom | AnchorStyles.Right;
          textButton13.ForeColor = Dialog.primaryColor;
          textButton13.EffectType = ET.Custom;
          textButton13.Text = Dialog.buttonText["Retry"];
          textButton13.Size = this.DEFAULT_BUTTON_SIZE;
          textButton13.Location = new Point(140, 85);
          textButton13.DialogResult = DialogResult.Retry;
          TextButton textButton14 = textButton13;
          textButton14.Click += new EventHandler(this.ButtonClick);
          int num7 = num6 + 1;
          TextButton textButton15 = new TextButton();
          textButton15.Anchor = AnchorStyles.Bottom | AnchorStyles.Right;
          textButton15.ForeColor = Dialog.primaryColor;
          textButton15.EffectType = ET.Custom;
          textButton15.Text = Dialog.buttonText["Cancel"];
          textButton15.Size = this.DEFAULT_BUTTON_SIZE;
          textButton15.Location = new Point(this.INIT_BUTTON_POSITION + (this.DEFAULT_BUTTON_SIZE.Width + this.DEFAULT_SPACE) * num7, 85);
          textButton15.DialogResult = DialogResult.Cancel;
          TextButton textButton16 = textButton15;
          textButton16.Click += new EventHandler(this.ButtonClick);
          this.Controls.Add((Control) textButton14);
          this.Controls.Add((Control) textButton16);
          break;
        case Buttons.YesNo:
          int num8 = 1;
          TextButton textButton17 = new TextButton();
          textButton17.Anchor = AnchorStyles.Bottom | AnchorStyles.Right;
          textButton17.ForeColor = Dialog.primaryColor;
          textButton17.EffectType = ET.Custom;
          textButton17.Text = Dialog.buttonText["Yes"];
          textButton17.Size = this.DEFAULT_BUTTON_SIZE;
          textButton17.Location = new Point(this.INIT_BUTTON_POSITION + (this.DEFAULT_BUTTON_SIZE.Width + this.DEFAULT_SPACE) * num8, 85);
          textButton17.DialogResult = DialogResult.Yes;
          TextButton textButton18 = textButton17;
          textButton18.Click += new EventHandler(this.ButtonClick);
          int num9 = num8 + 1;
          TextButton textButton19 = new TextButton();
          textButton19.Anchor = AnchorStyles.Bottom | AnchorStyles.Right;
          textButton19.ForeColor = Dialog.primaryColor;
          textButton19.EffectType = ET.Custom;
          textButton19.Text = Dialog.buttonText["No"];
          textButton19.Size = this.DEFAULT_BUTTON_SIZE;
          textButton19.Location = new Point(this.INIT_BUTTON_POSITION + (this.DEFAULT_BUTTON_SIZE.Width + this.DEFAULT_SPACE) * num9, 85);
          textButton19.DialogResult = DialogResult.No;
          TextButton textButton20 = textButton19;
          textButton20.Click += new EventHandler(this.ButtonClick);
          this.Controls.Add((Control) textButton18);
          this.Controls.Add((Control) textButton20);
          break;
        case Buttons.YesNoCancel:
          TextButton textButton21 = new TextButton();
          textButton21.Anchor = AnchorStyles.Bottom | AnchorStyles.Right;
          textButton21.ForeColor = Dialog.primaryColor;
          textButton21.EffectType = ET.Custom;
          textButton21.Text = Dialog.buttonText["Yes"];
          textButton21.Size = this.DEFAULT_BUTTON_SIZE;
          textButton21.Location = new Point(this.INIT_BUTTON_POSITION + (this.DEFAULT_BUTTON_SIZE.Width + this.DEFAULT_SPACE) * num1, 85);
          textButton21.DialogResult = DialogResult.Yes;
          TextButton textButton22 = textButton21;
          textButton22.Click += new EventHandler(this.ButtonClick);
          int num10 = num1 + 1;
          TextButton textButton23 = new TextButton();
          textButton23.Anchor = AnchorStyles.Bottom | AnchorStyles.Right;
          textButton23.ForeColor = Dialog.primaryColor;
          textButton23.EffectType = ET.Custom;
          textButton23.Text = Dialog.buttonText["No"];
          textButton23.Size = this.DEFAULT_BUTTON_SIZE;
          textButton23.Location = new Point(this.INIT_BUTTON_POSITION + (this.DEFAULT_BUTTON_SIZE.Width + this.DEFAULT_SPACE) * num10, 85);
          textButton23.DialogResult = DialogResult.No;
          TextButton textButton24 = textButton23;
          textButton24.Click += new EventHandler(this.ButtonClick);
          int num11 = num10 + 1;
          TextButton textButton25 = new TextButton();
          textButton25.Anchor = AnchorStyles.Bottom | AnchorStyles.Right;
          textButton25.ForeColor = Dialog.primaryColor;
          textButton25.EffectType = ET.Custom;
          textButton25.Text = Dialog.buttonText["Cancel"];
          textButton25.Size = this.DEFAULT_BUTTON_SIZE;
          textButton25.Location = new Point(this.INIT_BUTTON_POSITION + (this.DEFAULT_BUTTON_SIZE.Width + this.DEFAULT_SPACE) * num11, 85);
          textButton25.DialogResult = DialogResult.Cancel;
          TextButton textButton26 = textButton25;
          textButton26.Click += new EventHandler(this.ButtonClick);
          this.Controls.Add((Control) textButton22);
          this.Controls.Add((Control) textButton24);
          this.Controls.Add((Control) textButton26);
          break;
      }
    }

    private void ButtonClick(object sender, EventArgs e) => Dialog.dialogResult = (sender as Button).DialogResult;

    public Dialog()
    {
      this.SetStyle(ControlStyles.UserPaint | ControlStyles.ResizeRedraw | ControlStyles.SupportsTransparentBackColor | ControlStyles.AllPaintingInWmPaint | ControlStyles.OptimizedDoubleBuffer, true);
      this.DoubleBuffered = true;
      this.Size = new Size(325, 130);
      this.messageArea = new Rectangle(30, 40, 290, 45);
      this.headerArea = new Rectangle(30, 14, 290, 28);
      this.FormBorderStyle = FormBorderStyle.None;
      this.BackColor = Color.WhiteSmoke;
      this.StartPosition = FormStartPosition.Manual;
    }

    protected override void OnLoad(EventArgs e)
    {
      base.OnLoad(e);
      this.InitButton(this.buttons);
      this.SizingDialog(this.strMessage);
      if (Dialog.darkTheme)
        this.BackColor = ColorConstant.DarkThemeBackgroundColor;
      else
        this.BackColor = Color.WhiteSmoke;
      if (string.IsNullOrEmpty(this.strHeader))
      {
        Dialog._this.Height -= 15;
        Dialog._this.messageArea.Y -= 25;
      }
      else
        this.headerArea.Width = this.Width - 60;
    }

    public static void Show(Form parent, string message, string tittle = "", bool dimScreen = true)
    {
      Dialog._this = new Dialog()
      {
        buttons = Buttons.Ok,
        strMessage = message,
        strHeader = tittle,
        mainParent = parent
      };
      OverlayForm overlayForm = new OverlayForm(parent, (Form) Dialog._this, blackOut: dimScreen);
      int num = (int) Dialog._this.ShowDialog();
    }

    public static DialogResult Show(
      Form parent,
      string message,
      string tittle,
      Buttons _buttons,
      bool dimScreen = true)
    {
      Dialog.dialogResult = DialogResult.None;
      Dialog._this = new Dialog()
      {
        buttons = _buttons,
        strMessage = message,
        strHeader = tittle,
        mainParent = parent
      };
      OverlayForm overlayForm = new OverlayForm(parent, (Form) Dialog._this, blackOut: dimScreen);
      int num = (int) Dialog._this.ShowDialog();
      return Dialog.dialogResult;
    }

    protected override CreateParams CreateParams
    {
      get
      {
        CreateParams createParams = base.CreateParams;
        createParams.ClassStyle |= 131072;
        return createParams;
      }
    }

    protected override void OnPaint(PaintEventArgs e)
    {
      base.OnPaint(e);
      e.Graphics.SmoothingMode = SmoothingMode.HighQuality;
      e.Graphics.DrawRectangle(new Pen(Brushes.Black), 0, 0, this.Width - 1, this.Height - 1);
      e.Graphics.DrawString(this.strMessage, this.messageFont, Dialog.darkTheme ? Brushes.Gainsboro : Brushes.DimGray, (RectangleF) this.messageArea, this.textAlignment);
      if (string.IsNullOrEmpty(this.strHeader))
        return;
      e.Graphics.DrawString(this.strHeader, this.headerFont, Dialog.darkTheme ? Brushes.WhiteSmoke : Brushes.Black, (RectangleF) this.headerArea, this.textAlignment);
    }

    private void InitializeComponent()
    {
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (Dialog));
      this.comboBox1 = new ComboBox();
      this.SuspendLayout();
      this.comboBox1.FormattingEnabled = true;
      this.comboBox1.Location = new Point(212, 101);
      this.comboBox1.Name = "comboBox1";
      this.comboBox1.Size = new Size(121, 21);
      this.comboBox1.TabIndex = 0;
      this.ClientSize = new Size(284, 261);
      this.Controls.Add((Control) this.comboBox1);
      this.Icon = (Icon) componentResourceManager.GetObject("$this.Icon");
      this.Name = nameof (Dialog);
      this.ResumeLayout(false);
    }

    private void SizingDialog(string message)
    {
      Graphics graphics = this.CreateGraphics();
      this.MAX_WIDTH = (float) this.mainParent.Size.Width / 1.6f;
      SizeF sizeF = graphics.MeasureString(message, this.messageFont);
      if ((double) sizeF.Width > (double) this.MAX_WIDTH)
      {
        int int32 = Convert.ToInt32(sizeF.Width / this.MAX_WIDTH);
        this.Size = new Size(Convert.ToInt32(this.MAX_WIDTH), this.Height + Convert.ToInt32(sizeF.Height) * int32);
        this.messageArea.Height += Convert.ToInt32(sizeF.Height) * int32;
        this.messageArea.Width = this.Width - 45;
      }
      else if ((double) sizeF.Width > 290.0)
      {
        this.Size = new Size(Convert.ToInt32(sizeF.Width) + 45, this.Height);
        this.messageArea.Width = this.Width - 45;
      }
      this.Centerlize();
    }

    private void Centerlize()
    {
      Point location = this.mainParent.Location;
      int x = location.X + this.mainParent.Width / 2 - this.Width / 2;
      location = this.mainParent.Location;
      int y = location.Y + this.mainParent.Height / 2 - this.Height / 2;
      this.Location = new Point(x, y);
    }
  }
}
