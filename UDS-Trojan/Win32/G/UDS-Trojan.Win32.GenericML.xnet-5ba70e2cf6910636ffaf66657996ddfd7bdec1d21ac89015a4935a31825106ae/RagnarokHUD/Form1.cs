// Decompiled with JetBrains decompiler
// Type: RagnarokHUD.Form1
// Assembly: BinaryAssem, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: C3D41CFC-8277-4BEE-9AD4-AC67F2756AFC
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.07\UDS-Trojan.Win32.GenericML.xnet-5ba70e2cf6910636ffaf66657996ddfd7bdec1d21ac89015a4935a31825106ae.exe

using System;
using System.ComponentModel;
using System.Drawing;
using System.IO;
using System.Windows.Forms;

namespace RagnarokHUD
{
  public class Form1 : Form
  {
    private IContainer components = (IContainer) null;
    private OpenFileDialog openFileDialog1;
    private Button button1;

    public Form1() => this.InitializeComponent();

    private void button1_Click(object sender, EventArgs e)
    {
      DialogResult dialogResult = this.openFileDialog1.ShowDialog();
      Console.WriteLine("Hello");
      if (dialogResult == DialogResult.OK)
      {
        string fileName = this.openFileDialog1.FileName;
        Console.WriteLine("file: {0}", (object) fileName);
        try
        {
          FileDir fileDir1 = (FileDir) null;
          int num1 = 0;
          int num2 = 0;
          int num3 = 0;
          int num4 = 0;
          string[,] strArray1 = (string[,]) null;
          foreach (string readAllLine in File.ReadAllLines(fileName))
          {
            char[] chArray = new char[1]{ ';' };
            string[] strArray2 = readAllLine.Split(chArray);
            if (strArray2.Length > 3)
            {
              FileDir fileDir2 = new FileDir(strArray2[11], strArray2[5], strArray2[18], strArray2[28]);
              if (fileDir1 == null)
              {
                ++num3;
                ++num1;
                fileDir1 = fileDir2;
                Console.WriteLine("{0} as head", (object) fileDir2.getDir());
              }
              else
              {
                for (FileDir fileDir3 = fileDir1; fileDir3 != null; fileDir3 = fileDir3.getNext())
                {
                  if (fileDir2.compareTo(fileDir3) == 0)
                  {
                    ++num4;
                    fileDir3.addShortName(fileDir2.getShortName());
                    ++num3;
                    ++num2;
                    Console.WriteLine("{0} as match", (object) fileDir2.getDir());
                    break;
                  }
                  ++num4;
                  if (fileDir3 == fileDir1 && fileDir2.compareTo(fileDir3) < 0)
                  {
                    ++num3;
                    ++num1;
                    fileDir3.setPrev(fileDir2);
                    fileDir2.setNext(fileDir3);
                    fileDir1 = fileDir2;
                    Console.WriteLine("{0} as new head before {1}", (object) fileDir2.getDir(), (object) fileDir3.getDir());
                    break;
                  }
                  if (fileDir3.getNext() == null)
                  {
                    ++num3;
                    ++num1;
                    fileDir3.setNext(fileDir2);
                    fileDir2.setPrev(fileDir3);
                    Console.WriteLine("{0} as end after {1}", (object) fileDir2.getDir(), (object) fileDir3.getDir());
                    break;
                  }
                  if (fileDir2.compareTo(fileDir3) < 0 && fileDir2.compareTo(fileDir3.getNext()) < 0)
                  {
                    ++num3;
                    ++num1;
                    fileDir2.setNext(fileDir3);
                    fileDir2.setPrev(fileDir3.getPrev());
                    fileDir3.getPrev().setNext(fileDir2);
                    fileDir3.setPrev(fileDir2);
                    Console.WriteLine("{0} between {1} and {2}", (object) fileDir2.getDir(), (object) fileDir2.getPrev().getDir(), (object) fileDir2.getNext().getDir());
                    break;
                  }
                }
              }
            }
            else if (strArray2.Length == 3)
            {
              int int32 = Convert.ToInt32(strArray2[1]);
              Convert.ToInt32(strArray2[0]);
              strArray1 = new string[int32, 30];
            }
          }
          FileDir fileDir4 = fileDir1;
          int num5 = 0;
          while (fileDir4 != null)
          {
            Console.WriteLine("{0}", (object) fileDir4);
            fileDir4 = fileDir4.getNext();
            ++num5;
          }
          Console.WriteLine("Done Unique: {0}  Repeats: {1} total Processed: {2}  j: {3}", new object[4]
          {
            (object) num1,
            (object) num2,
            (object) num3,
            (object) num5
          });
        }
        catch (IOException ex)
        {
        }
      }
      Console.WriteLine((object) dialogResult);
    }

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(disposing);
    }

    private void InitializeComponent()
    {
      this.openFileDialog1 = new OpenFileDialog();
      this.button1 = new Button();
      this.SuspendLayout();
      this.openFileDialog1.FileName = "openFileDialog1";
      this.button1.Location = new Point(61, 48);
      this.button1.Name = "button1";
      this.button1.Size = new Size(75, 23);
      this.button1.TabIndex = 0;
      this.button1.Text = "Pick File";
      this.button1.UseVisualStyleBackColor = true;
      this.button1.Click += new EventHandler(this.button1_Click);
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(589, 509);
      this.Controls.Add((Control) this.button1);
      this.Name = nameof (Form1);
      this.Text = nameof (Form1);
      this.ResumeLayout(false);
    }
  }
}
