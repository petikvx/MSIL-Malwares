// Decompiled with JetBrains decompiler
// Type: C3904355907.C1304234792
// Assembly: Google Software Update, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 1ECCB2B4-E3D0-48EA-84ED-06938D43796B
// Assembly location: C:\Users\Administrateur\Downloads\toto\HEUR-Trojan.MSIL.DelShad.gen-b37761715d5a2405a3fa75abccaf6bb15b7298673aaad91a158725be3c518a87.exe

using \u003Cdion2ntty2ic0uyoe\u003E\u007B43570453\u002D3AD8\u002D4A5B\u002DB273\u002D83DF8156D820\u007D;
using System;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography;

namespace C3904355907
{
  public static class C1304234792
  {
    private static bool? C3554254475;
    private static bool? C3904355907;

    [SpecialName]
    public static bool C3554254475()
    {
      if (C1304234792.C3554254475.HasValue)
        return C1304234792.C3554254475.Value;
      bool condition = false;
      try
      {
        Random random = C2746444292.C112844655();
        byte[] numArray1 = new byte[137];
        random.NextBytes(numArray1);
        byte[] numArray2 = new byte[41];
        random.NextBytes(numArray2);
        byte[] encryptedData = ProtectedData.Protect(numArray1, numArray2, DataProtectionScope.CurrentUser);
        if (encryptedData != null && !C3554254475.C2137352139.C3554254475(encryptedData, numArray1))
        {
          byte[] numArray3 = ProtectedData.Unprotect(encryptedData, numArray2, DataProtectionScope.CurrentUser);
          if (numArray3 != null && C3554254475.C2137352139.C3554254475(numArray3, numArray1))
            condition = true;
        }
      }
      catch (Exception ex)
      {
        Debug.Assert(false);
      }
      Debug.Assert(condition);
      C1304234792.C3554254475 = new bool?(condition);
      return condition;
    }

    public static byte[] C3554254475([In] byte[] obj0) => obj0 != null ? C1304234792.C3554254475(obj0, 0, obj0.Length) : throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C2238339752());

    public static byte[] C3554254475([In] byte[] obj0, [In] int obj1, [In] int obj2)
    {
      byte[] destinationArray = obj0 != null ? new byte[obj0.Length] : throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C2238339752());
      Array.Copy((Array) obj0, (Array) destinationArray, obj0.Length);
      byte[] hash;
      using (SHA256Managed shA256Managed = new SHA256Managed())
        hash = shA256Managed.ComputeHash(obj0, obj1, obj2);
      Debug.Assert(C3554254475.C2137352139.C3554254475(obj0, destinationArray));
      Debug.Assert(hash != null && hash.Length == 32);
      byte[] numArray = new byte[32];
      Debug.Assert(!C3554254475.C2137352139.C3554254475(hash, numArray));
      return hash;
    }

    internal static byte[] C3554254475([In] string obj0)
    {
      byte[] numArray = (byte[]) null;
      using (FileStream inputStream = new FileStream(obj0, FileMode.Open, FileAccess.Read, FileShare.Read))
      {
        using (SHA256Managed shA256Managed = new SHA256Managed())
          numArray = shA256Managed.ComputeHash((Stream) inputStream);
      }
      return numArray;
    }

    public static byte[] C3554254475([In] byte[] obj0, [In] int obj1, [In] int obj2, [In] int obj3)
    {
      if (obj0 == null)
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.cb());
      if (obj3 < 0)
        throw new ArgumentOutOfRangeException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.cC());
      if (obj3 == 0)
        return C3554254475.C2137352139.C3554254475;
      byte[] numArray1;
      if (obj3 <= 32)
      {
        numArray1 = C1304234792.C3554254475(obj0, obj1, obj2);
      }
      else
      {
        using (SHA512Managed shA512Managed = new SHA512Managed())
          numArray1 = shA512Managed.ComputeHash(obj0, obj1, obj2);
      }
      if (obj3 == numArray1.Length)
        return numArray1;
      byte[] destinationArray = new byte[obj3];
      if (obj3 < numArray1.Length)
      {
        Array.Copy((Array) numArray1, (Array) destinationArray, obj3);
      }
      else
      {
        int destinationIndex = 0;
        ulong num = 0;
        while (destinationIndex < obj3)
        {
          Debug.Assert(numArray1.Length == 64);
          using (HMACSHA256 hmacshA256 = new HMACSHA256(numArray1))
          {
            byte[] buffer = C3554254475.C2137352139.C3554254475(num);
            byte[] hash = hmacshA256.ComputeHash(buffer);
            int length = Math.Min(obj3 - destinationIndex, hash.Length);
            Debug.Assert(length > 0);
            Array.Copy((Array) hash, 0, (Array) destinationArray, destinationIndex, length);
            destinationIndex += length;
            ++num;
            C3554254475.C2137352139.C3904355907(hash);
          }
        }
        Debug.Assert(destinationIndex == obj3);
      }
      byte[] numArray2 = new byte[numArray1.Length];
      Debug.Assert(!C3554254475.C2137352139.C3554254475(numArray1, numArray2));
      C3554254475.C2137352139.C3904355907(numArray1);
      return destinationArray;
    }

    internal static SymmetricAlgorithm C3904355907()
    {
      if (C1304234792.C3904355907.HasValue)
        return C1304234792.C3904355907.Value ? C1304234792.C1255198513() : (SymmetricAlgorithm) new RijndaelManaged();
      SymmetricAlgorithm symmetricAlgorithm = C1304234792.C1255198513();
      C1304234792.C3904355907 = new bool?(symmetricAlgorithm != null);
      return symmetricAlgorithm ?? (SymmetricAlgorithm) new RijndaelManaged();
    }

    private static SymmetricAlgorithm C1255198513()
    {
      try
      {
        if (!C3554254475.C1812594589.C1908338681())
          return (SymmetricAlgorithm) null;
        Type type = Type.GetType(Assembly.CreateQualifiedName(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.cc(), DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.cD()));
        return type == (Type) null ? (SymmetricAlgorithm) null : Activator.CreateInstance(type) as SymmetricAlgorithm;
      }
      catch (Exception ex)
      {
        Debug.Assert(false);
      }
      return (SymmetricAlgorithm) null;
    }

    public static byte[] C3554254475([In] byte[] obj0, [In] byte[] obj1, [In] DataProtectionScope obj2) => C1304234792.C3554254475(obj0, true, obj1, obj2);

    public static byte[] C3904355907([In] byte[] obj0, [In] byte[] obj1, [In] DataProtectionScope obj2) => C1304234792.C3554254475(obj0, false, obj1, obj2);

    private static byte[] C3554254475(
      [In] byte[] obj0,
      [In] bool obj1,
      [In] byte[] obj2,
      [In] DataProtectionScope obj3)
    {
      if (obj0 == null)
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C878818188());
      if (obj2 != null && obj2.Length == 0)
        obj2 = (byte[]) null;
      if (C1304234792.C3554254475())
        return obj1 ? ProtectedData.Protect(obj0, obj2, obj3) : ProtectedData.Unprotect(obj0, obj2, obj3);
      Debug.Assert(false);
      byte[] destinationArray = new byte[obj0.Length];
      Array.Copy((Array) obj0, (Array) destinationArray, obj0.Length);
      return destinationArray;
    }
  }
}
