// Decompiled with JetBrains decompiler
// Type: 羊屮女瓦比冂馬止艸手.牛刀火刀鼠匕士用幺黑手鼻
// Assembly: correcthit, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 98A8C508-DCA7-4494-BD18-281291040E34
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Shelpak.gen-d9c811eae2b07eca77f74ca45e1efee2a2c91add3f8606c489f526eb43f55287.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.Globalization;
using System.Reflection;
using System.Text;

namespace 羊屮女瓦比冂馬止艸手
{
  [DefaultMember("Item")]
  public abstract class 牛刀火刀鼠匕士用幺黑手鼻
  {
    public static bool 色爪黑手歹日舛耒弋齊口囗虍廾小立 = false;
    public static bool 見矛言无亠夕口行肉廾人亅麻鹿骨鼓 = false;
    public static bool 卩比丶黍匚瓜夂广夂弋屮 = true;
    [ThreadStatic]
    private static StringBuilder m_EscapeBuilder;

    public abstract 頁金广牛爪彡羽匚鬥巾八 米匸髟女力水高囗卩谷冖 { get; }

    public virtual 牛刀火刀鼠匕士用幺黑手鼻 get_Item(int 士辰穴行艸石斤手足士長) => (牛刀火刀鼠匕士用幺黑手鼻) null;

    public virtual void set_Item(int 爿里比彐走骨隶黑入广韋弓, 牛刀火刀鼠匕士用幺黑手鼻 隶黽色入宀齊艸匕片肉辛龠)
    {
    }

    public virtual 牛刀火刀鼠匕士用幺黑手鼻 get_Item(string 戶田血小又鼠疋行日女) => (牛刀火刀鼠匕士用幺黑手鼻) null;

    public virtual void set_Item(string 金日戈門巛衣寸巛子車文瓦人, 牛刀火刀鼠匕士用幺黑手鼻 比巛厶羊片工鳥耳生玉韋矢巾白土革而)
    {
    }

    public virtual string 父彳目夂网儿立石厂耒欠犬
    {
      get => "";
      set
      {
      }
    }

    public virtual int 襾臼无几牛日車尢衣爪弋宀爿手至 => 0;

    public virtual bool 黃音見山几爪彳魚毋赤日 => false;

    public virtual bool 二舌矛匸甘夂生子片毋谷 => false;

    public virtual bool 月而殳弓比力女角丨己色 => false;

    public virtual bool 口方身爪网犬歹齊片黽 => false;

    public virtual bool 足口无巛立人爿夂斗廾大龜門幺靑牛 => false;

    public virtual bool 自艸弋入亅食牙豸心小豕爪馬 => false;

    public virtual bool 舛曰火入竹亠曰臼匚皮而舌口
    {
      get => false;
      set
      {
      }
    }

    public virtual void Add(string 冫弋夂屮亅赤立爻牛大夂香, 牛刀火刀鼠匕士用幺黑手鼻 巛小歹鬥戈毛黑廴爿牙)
    {
    }

    public virtual void Add(牛刀火刀鼠匕士用幺黑手鼻 玄牛八尸殳夊鬼白爪行匕彐) => this.Add("", 玄牛八尸殳夊鬼白爪行匕彐);

    public virtual 牛刀火刀鼠匕士用幺黑手鼻 Remove(string 屮止子門示干冂示欠骨刀鼠艮) => (牛刀火刀鼠匕士用幺黑手鼻) null;

    public virtual 牛刀火刀鼠匕士用幺黑手鼻 Remove(int 舌阜尢匕玄心長山囗气缶禸) => (牛刀火刀鼠匕士用幺黑手鼻) null;

    public virtual 牛刀火刀鼠匕士用幺黑手鼻 Remove(牛刀火刀鼠匕士用幺黑手鼻 八入香疒弓父米幺耳釆) => 八入香疒弓父米幺耳釆;

    public virtual 牛刀火刀鼠匕士用幺黑手鼻 Clone() => (牛刀火刀鼠匕士用幺黑手鼻) null;

    public virtual IEnumerable<牛刀火刀鼠匕士用幺黑手鼻> 止曰殳疒釆宀日老骨毛肉黽弓疋廴
    {
      get
      {
        yield break;
      }
    }

    public IEnumerable<牛刀火刀鼠匕士用幺黑手鼻> 彡牙弓釆虍斤骨鹵屮宀爪米小人
    {
      get
      {
        foreach (牛刀火刀鼠匕士用幺黑手鼻 牛刀火刀鼠匕士用幺黑手鼻1 in this.止曰殳疒釆宀日老骨毛肉黽弓疋廴)
        {
          foreach (牛刀火刀鼠匕士用幺黑手鼻 牛刀火刀鼠匕士用幺黑手鼻2 in 牛刀火刀鼠匕士用幺黑手鼻1.彡牙弓釆虍斤骨鹵屮宀爪米小人)
            yield return 牛刀火刀鼠匕士用幺黑手鼻2;
        }
      }
    }

    public virtual bool HasKey(string 木弋衣亠耒辵己一白爻丨用聿) => false;

    public virtual 牛刀火刀鼠匕士用幺黑手鼻 GetValueOrDefault(
      string 戈爪卜夊殳皿豸牙韭八亠瓜匚口辰,
      牛刀火刀鼠匕士用幺黑手鼻 广口羽爪毛女口走手丶鼻方牛幺)
    {
      return 广口羽爪毛女口走手丶鼻方牛幺;
    }

    public override string ToString()
    {
      StringBuilder 齊彐風衣辛衣耳禾黽黃 = new StringBuilder();
      this.WriteToStringBuilder(齊彐風衣辛衣耳禾黽黃, 0, 0, 長釆儿丿幺斤艸干爿人玉龍手.斗几又竹戶屮禾言气土屮比牙羊囗);
      return 齊彐風衣辛衣耳禾黽黃.ToString();
    }

    public virtual string ToString(int 耒艮夊示襾十長大比攴冂)
    {
      StringBuilder 齊彐風衣辛衣耳禾黽黃 = new StringBuilder();
      this.WriteToStringBuilder(齊彐風衣辛衣耳禾黽黃, 0, 耒艮夊示襾十長大比攴冂, 長釆儿丿幺斤艸干爿人玉龍手.弋小一犬囗門火巾士大);
      return 齊彐風衣辛衣耳禾黽黃.ToString();
    }

    internal abstract void WriteToStringBuilder(
      StringBuilder 齊彐風衣辛衣耳禾黽黃,
      int 食厶戈小厂戶黃示長夂,
      int 自亠矛幺父戶囗羊高弋士匕匚,
      長釆儿丿幺斤艸干爿人玉龍手 囗心齊巾父襾夕入勹阜貝);

    public abstract 牛刀火刀鼠匕士用幺黑手鼻.襾大耳豸谷臼手爻至毋虍邑冖 GetEnumerator();

    public IEnumerable<KeyValuePair<string, 牛刀火刀鼠匕士用幺黑手鼻>> 巾癶彐龍牙卩金网冫牙巾屮 => (IEnumerable<KeyValuePair<string, 牛刀火刀鼠匕士用幺黑手鼻>>) new 牛刀火刀鼠匕士用幺黑手鼻.鼠匚冫手一干夕攴比屮厶寸戈(this);

    public 牛刀火刀鼠匕士用幺黑手鼻.行竹宀子尸高雨首冂寸牛比丶文 幺土米气虍心毛心牙角言面田癶肉 => new 牛刀火刀鼠匕士用幺黑手鼻.行竹宀子尸高雨首冂寸牛比丶文(this.GetEnumerator());

    public 牛刀火刀鼠匕士用幺黑手鼻.方豕月里髟凵飛鬥尸小頁夂比廴 大犬禾斗隹羽大工舛虫夊臼糸 => new 牛刀火刀鼠匕士用幺黑手鼻.方豕月里髟凵飛鬥尸小頁夂比廴(this.GetEnumerator());

    public virtual double 己小止匚目老凵廴豆瓜勹宀
    {
      get
      {
        double result = 0.0;
        return double.TryParse(this.父彳目夂网儿立石厂耒欠犬, NumberStyles.Float, (IFormatProvider) CultureInfo.InvariantCulture, out result) ? result : 0.0;
      }
      set => this.父彳目夂网儿立石厂耒欠犬 = value.ToString((IFormatProvider) CultureInfo.InvariantCulture);
    }

    public virtual int 氏癶女穴又屮工血骨方
    {
      get => (int) this.己小止匚目老凵廴豆瓜勹宀;
      set => this.己小止匚目老凵廴豆瓜勹宀 = (double) value;
    }

    public virtual float 殳欠二支卜舌酉曰殳牙巾玄
    {
      get => (float) this.己小止匚目老凵廴豆瓜勹宀;
      set => this.己小止匚目老凵廴豆瓜勹宀 = (double) value;
    }

    public virtual bool 頁夕厂入日爻黹羽女力斤襾高
    {
      get
      {
        bool result = false;
        return bool.TryParse(this.父彳目夂网儿立石厂耒欠犬, out result) ? result : !string.IsNullOrEmpty(this.父彳目夂网儿立石厂耒欠犬);
      }
      set => this.父彳目夂网儿立石厂耒欠犬 = value ? "true" : "false";
    }

    public virtual long 黽大戈气車辛米止火爻攴卜
    {
      get
      {
        long result = 0;
        return long.TryParse(this.父彳目夂网儿立石厂耒欠犬, out result) ? result : 0L;
      }
      set => this.父彳目夂网儿立石厂耒欠犬 = value.ToString();
    }

    public virtual 干角矛斤革馬无口手卜彐气 氏血支八攴刀飛口冖彳飛方 => this as 干角矛斤革馬无口手卜彐气;

    public virtual 羊黑彐豸父手瓜艮囗石水寸臼鹵 冫面山夊方十凵网糸聿禾勹 => this as 羊黑彐豸父手瓜艮囗石水寸臼鹵;

    public static implicit operator 牛刀火刀鼠匕士用幺黑手鼻(string 角止氏面儿片疒髟水麻父十彳卜) => (牛刀火刀鼠匕士用幺黑手鼻) new 廾戈豆氏廾貝貝舛龠凵鼻彳示(角止氏面儿片疒髟水麻父十彳卜);

    public static implicit operator string(牛刀火刀鼠匕士用幺黑手鼻 虍幺田尢干虍火宀欠靑龍犬) => !(虍幺田尢干虍火宀欠靑龍犬 == (object) null) ? 虍幺田尢干虍火宀欠靑龍犬.父彳目夂网儿立石厂耒欠犬 : (string) null;

    public static implicit operator 牛刀火刀鼠匕士用幺黑手鼻(double 黽大几广羽彐卜刀面比甘) => (牛刀火刀鼠匕士用幺黑手鼻) new 歹勹黹牛龍水彐无手臣麥冫(黽大几广羽彐卜刀面比甘);

    public static implicit operator double(牛刀火刀鼠匕士用幺黑手鼻 冖十二血爿弋巛凵骨廴亠牙) => !(冖十二血爿弋巛凵骨廴亠牙 == (object) null) ? 冖十二血爿弋巛凵骨廴亠牙.己小止匚目老凵廴豆瓜勹宀 : 0.0;

    public static implicit operator 牛刀火刀鼠匕士用幺黑手鼻(float 鼻斤尢口比彐爻鼎工月火虍) => (牛刀火刀鼠匕士用幺黑手鼻) new 歹勹黹牛龍水彐无手臣麥冫((double) 鼻斤尢口比彐爻鼎工月火虍);

    public static implicit operator float(牛刀火刀鼠匕士用幺黑手鼻 爻而赤父鹿鼠廾殳八冂) => !(爻而赤父鹿鼠廾殳八冂 == (object) null) ? 爻而赤父鹿鼠廾殳八冂.殳欠二支卜舌酉曰殳牙巾玄 : 0.0f;

    public static implicit operator 牛刀火刀鼠匕士用幺黑手鼻(int 鬼匚尢非尢亅行鬯缶面禸豆雨) => (牛刀火刀鼠匕士用幺黑手鼻) new 歹勹黹牛龍水彐无手臣麥冫((double) 鬼匚尢非尢亅行鬯缶面禸豆雨);

    public static implicit operator int(牛刀火刀鼠匕士用幺黑手鼻 爿皮豸牛音臼丿人巛八厂生入日皮) => !(爿皮豸牛音臼丿人巛八厂生入日皮 == (object) null) ? 爿皮豸牛音臼丿人巛八厂生入日皮.氏癶女穴又屮工血骨方 : 0;

    public static implicit operator 牛刀火刀鼠匕士用幺黑手鼻(long 毋冂禸皿止比氏欠艮襾氏牙攴) => 牛刀火刀鼠匕士用幺黑手鼻.見矛言无亠夕口行肉廾人亅麻鹿骨鼓 ? (牛刀火刀鼠匕士用幺黑手鼻) new 廾戈豆氏廾貝貝舛龠凵鼻彳示(毋冂禸皿止比氏欠艮襾氏牙攴.ToString()) : (牛刀火刀鼠匕士用幺黑手鼻) new 歹勹黹牛龍水彐无手臣麥冫((double) 毋冂禸皿止比氏欠艮襾氏牙攴);

    public static implicit operator long(牛刀火刀鼠匕士用幺黑手鼻 老丨几夂目麥夂鼻巛車大夕斗) => !(老丨几夂目麥夂鼻巛車大夕斗 == (object) null) ? 老丨几夂目麥夂鼻巛車大夕斗.黽大戈气車辛米止火爻攴卜 : 0L;

    public static implicit operator 牛刀火刀鼠匕士用幺黑手鼻(bool 攴幺尸文鬥乙尢缶宀瓜辰阜) => (牛刀火刀鼠匕士用幺黑手鼻) new 刀囗田彐音刀大勹方甘玄土皮(攴幺尸文鬥乙尢缶宀瓜辰阜);

    public static implicit operator bool(牛刀火刀鼠匕士用幺黑手鼻 齊凵亠邑卩弋止亠廾囗爻阜衣龠) => !(齊凵亠邑卩弋止亠廾囗爻阜衣龠 == (object) null) && 齊凵亠邑卩弋止亠廾囗爻阜衣龠.頁夕厂入日爻黹羽女力斤襾高;

    public static implicit operator 牛刀火刀鼠匕士用幺黑手鼻(
      KeyValuePair<string, 牛刀火刀鼠匕士用幺黑手鼻> 言彡襾冖白士大竹禾大爪亠歹)
    {
      return 言彡襾冖白士大竹禾大爪亠歹.Value;
    }

    public static bool operator ==(牛刀火刀鼠匕士用幺黑手鼻 鹵尸疋田毋鼠毛方至幺臼比丨气尢, object 支水木日屮幺非豸大廾曰疒阜八广)
    {
      if ((object) 鹵尸疋田毋鼠毛方至幺臼比丨气尢 == 支水木日屮幺非豸大廾曰疒阜八广)
        return true;
      bool flag1 = 鹵尸疋田毋鼠毛方至幺臼比丨气尢 is 匸龜心己黃爪缶鼎己无攴木耳黽氏 || (object) 鹵尸疋田毋鼠毛方至幺臼比丨气尢 == null || 鹵尸疋田毋鼠毛方至幺臼比丨气尢 is 气火鬯厶彡己月角亠禸鼓日食車禸;
      int num;
      switch (支水木日屮幺非豸大廾曰疒阜八广)
      {
        case 匸龜心己黃爪缶鼎己无攴木耳黽氏 _:
        case null:
          num = 1;
          break;
        default:
          num = 支水木日屮幺非豸大廾曰疒阜八广 is 气火鬯厶彡己月角亠禸鼓日食車禸 ? 1 : 0;
          break;
      }
      bool flag2 = num != 0;
      if (flag1 & flag2)
        return true;
      return !flag1 && 鹵尸疋田毋鼠毛方至幺臼比丨气尢.Equals(支水木日屮幺非豸大廾曰疒阜八广);
    }

    public static bool operator !=(牛刀火刀鼠匕士用幺黑手鼻 尸玄八車夊人丨勹目爿衣牛宀面, object 足彐行羽寸色干血凵片鬥冫酉虫) => !(尸玄八車夊人丨勹目爿衣牛宀面 == 足彐行羽寸色干血凵片鬥冫酉虫);

    public override bool Equals(object 面牙鼓刀斗廾己疒手舌夊) => (object) this == 面牙鼓刀斗廾己疒手舌夊;

    public override int GetHashCode() => base.GetHashCode();

    internal static StringBuilder 舟非尸入艸彳毋止方匸亠白巛支
    {
      get
      {
        if (牛刀火刀鼠匕士用幺黑手鼻.m_EscapeBuilder == null)
          牛刀火刀鼠匕士用幺黑手鼻.m_EscapeBuilder = new StringBuilder();
        return 牛刀火刀鼠匕士用幺黑手鼻.m_EscapeBuilder;
      }
    }

    internal static string 韭舛勹片二力又丨勹彐爿艮女(string 彳大氏爻彡廾士斤禸干牙心冂毛車)
    {
      StringBuilder 舟非尸入艸彳毋止方匸亠白巛支 = 牛刀火刀鼠匕士用幺黑手鼻.舟非尸入艸彳毋止方匸亠白巛支;
      舟非尸入艸彳毋止方匸亠白巛支.Length = 0;
      if (舟非尸入艸彳毋止方匸亠白巛支.Capacity < 彳大氏爻彡廾士斤禸干牙心冂毛車.Length + 彳大氏爻彡廾士斤禸干牙心冂毛車.Length / 10)
        舟非尸入艸彳毋止方匸亠白巛支.Capacity = 彳大氏爻彡廾士斤禸干牙心冂毛車.Length + 彳大氏爻彡廾士斤禸干牙心冂毛車.Length / 10;
      foreach (char ch in 彳大氏爻彡廾士斤禸干牙心冂毛車)
      {
        switch (ch)
        {
          case '\b':
            舟非尸入艸彳毋止方匸亠白巛支.Append("\\b");
            break;
          case '\t':
            舟非尸入艸彳毋止方匸亠白巛支.Append("\\t");
            break;
          case '\n':
            舟非尸入艸彳毋止方匸亠白巛支.Append("\\n");
            break;
          case '\f':
            舟非尸入艸彳毋止方匸亠白巛支.Append("\\f");
            break;
          case '\r':
            舟非尸入艸彳毋止方匸亠白巛支.Append("\\r");
            break;
          case '"':
            舟非尸入艸彳毋止方匸亠白巛支.Append("\\\"");
            break;
          case '\\':
            舟非尸入艸彳毋止方匸亠白巛支.Append("\\\\");
            break;
          default:
            if (ch < ' ' || 牛刀火刀鼠匕士用幺黑手鼻.色爪黑手歹日舛耒弋齊口囗虍廾小立 && ch > '\u007F')
            {
              ushort num = (ushort) ch;
              舟非尸入艸彳毋止方匸亠白巛支.Append("\\u").Append(num.ToString("X4"));
              break;
            }
            舟非尸入艸彳毋止方匸亠白巛支.Append(ch);
            break;
        }
      }
      string str = 舟非尸入艸彳毋止方匸亠白巛支.ToString();
      舟非尸入艸彳毋止方匸亠白巛支.Length = 0;
      return str;
    }

    private static 牛刀火刀鼠匕士用幺黑手鼻 彡瓜寸鬯欠彳二比戈日厂无走爿(string 刀革山凵而舌匕尸門父冫方毋, bool 鼠廾彡夊斤白谷戈舟手入穴)
    {
      if (鼠廾彡夊斤白谷戈舟手入穴)
        return (牛刀火刀鼠匕士用幺黑手鼻) 刀革山凵而舌匕尸門父冫方毋;
      string lower = 刀革山凵而舌匕尸門父冫方毋.ToLower();
      if (lower == "false" || lower == "true")
        return (牛刀火刀鼠匕士用幺黑手鼻) (lower == "true");
      if (lower == "null")
        return (牛刀火刀鼠匕士用幺黑手鼻) 匸龜心己黃爪缶鼎己无攴木耳黽氏.聿靑刀止食宀方米二虍匚();
      double result;
      return double.TryParse(刀革山凵而舌匕尸門父冫方毋, NumberStyles.Float, (IFormatProvider) CultureInfo.InvariantCulture, out result) ? (牛刀火刀鼠匕士用幺黑手鼻) result : (牛刀火刀鼠匕士用幺黑手鼻) 刀革山凵而舌匕尸門父冫方毋;
    }

    public static 牛刀火刀鼠匕士用幺黑手鼻 土文殳卜糸羊气夕无豸勹工(string 刀屮网耒爿匕夂片水色色工音宀)
    {
      Stack<牛刀火刀鼠匕士用幺黑手鼻> 牛刀火刀鼠匕士用幺黑手鼻Stack = new Stack<牛刀火刀鼠匕士用幺黑手鼻>();
      牛刀火刀鼠匕士用幺黑手鼻 牛刀火刀鼠匕士用幺黑手鼻 = (牛刀火刀鼠匕士用幺黑手鼻) null;
      int index = 0;
      StringBuilder stringBuilder = new StringBuilder();
      string 冫弋夂屮亅赤立爻牛大夂香 = "";
      bool flag = false;
      bool 鼠廾彡夊斤白谷戈舟手入穴 = false;
      for (; index < 刀屮网耒爿匕夂片水色色工音宀.Length; ++index)
      {
        switch (刀屮网耒爿匕夂片水色色工音宀[index])
        {
          case '\t':
          case ' ':
            if (flag)
            {
              stringBuilder.Append(刀屮网耒爿匕夂片水色色工音宀[index]);
              continue;
            }
            continue;
          case '\n':
          case '\r':
          case '\uFEFF':
            continue;
          case '"':
            flag = !flag;
            鼠廾彡夊斤白谷戈舟手入穴 |= flag;
            continue;
          case ',':
            if (flag)
            {
              stringBuilder.Append(刀屮网耒爿匕夂片水色色工音宀[index]);
              continue;
            }
            if (stringBuilder.Length > 0 | 鼠廾彡夊斤白谷戈舟手入穴)
              牛刀火刀鼠匕士用幺黑手鼻.Add(冫弋夂屮亅赤立爻牛大夂香, 牛刀火刀鼠匕士用幺黑手鼻.彡瓜寸鬯欠彳二比戈日厂无走爿(stringBuilder.ToString(), 鼠廾彡夊斤白谷戈舟手入穴));
            冫弋夂屮亅赤立爻牛大夂香 = "";
            stringBuilder.Length = 0;
            鼠廾彡夊斤白谷戈舟手入穴 = false;
            continue;
          case '/':
            if (牛刀火刀鼠匕士用幺黑手鼻.卩比丶黍匚瓜夂广夂弋屮 && !flag && index + 1 < 刀屮网耒爿匕夂片水色色工音宀.Length && 刀屮网耒爿匕夂片水色色工音宀[index + 1] == '/')
            {
              while (++index < 刀屮网耒爿匕夂片水色色工音宀.Length && 刀屮网耒爿匕夂片水色色工音宀[index] != '\n' && 刀屮网耒爿匕夂片水色色工音宀[index] != '\r')
                ;
              continue;
            }
            stringBuilder.Append(刀屮网耒爿匕夂片水色色工音宀[index]);
            continue;
          case ':':
            if (flag)
            {
              stringBuilder.Append(刀屮网耒爿匕夂片水色色工音宀[index]);
              continue;
            }
            冫弋夂屮亅赤立爻牛大夂香 = stringBuilder.ToString();
            stringBuilder.Length = 0;
            鼠廾彡夊斤白谷戈舟手入穴 = false;
            continue;
          case '[':
            if (flag)
            {
              stringBuilder.Append(刀屮网耒爿匕夂片水色色工音宀[index]);
              continue;
            }
            牛刀火刀鼠匕士用幺黑手鼻Stack.Push((牛刀火刀鼠匕士用幺黑手鼻) new 干角矛斤革馬无口手卜彐气());
            if (牛刀火刀鼠匕士用幺黑手鼻 != (object) null)
              牛刀火刀鼠匕士用幺黑手鼻.Add(冫弋夂屮亅赤立爻牛大夂香, 牛刀火刀鼠匕士用幺黑手鼻Stack.Peek());
            冫弋夂屮亅赤立爻牛大夂香 = "";
            stringBuilder.Length = 0;
            牛刀火刀鼠匕士用幺黑手鼻 = 牛刀火刀鼠匕士用幺黑手鼻Stack.Peek();
            continue;
          case '\\':
            ++index;
            if (flag)
            {
              char ch = 刀屮网耒爿匕夂片水色色工音宀[index];
              switch (ch)
              {
                case 'b':
                  stringBuilder.Append('\b');
                  continue;
                case 'f':
                  stringBuilder.Append('\f');
                  continue;
                case 'n':
                  stringBuilder.Append('\n');
                  continue;
                case 'r':
                  stringBuilder.Append('\r');
                  continue;
                case 't':
                  stringBuilder.Append('\t');
                  continue;
                case 'u':
                  string s = 刀屮网耒爿匕夂片水色色工音宀.Substring(index + 1, 4);
                  stringBuilder.Append((char) int.Parse(s, NumberStyles.AllowHexSpecifier));
                  index += 4;
                  continue;
                default:
                  stringBuilder.Append(ch);
                  continue;
              }
            }
            else
              continue;
          case ']':
          case '}':
            if (flag)
            {
              stringBuilder.Append(刀屮网耒爿匕夂片水色色工音宀[index]);
              continue;
            }
            if (牛刀火刀鼠匕士用幺黑手鼻Stack.Count == 0)
              throw new Exception("JSON Parse: Too many closing brackets");
            牛刀火刀鼠匕士用幺黑手鼻Stack.Pop();
            if (stringBuilder.Length > 0 | 鼠廾彡夊斤白谷戈舟手入穴)
              牛刀火刀鼠匕士用幺黑手鼻.Add(冫弋夂屮亅赤立爻牛大夂香, 牛刀火刀鼠匕士用幺黑手鼻.彡瓜寸鬯欠彳二比戈日厂无走爿(stringBuilder.ToString(), 鼠廾彡夊斤白谷戈舟手入穴));
            鼠廾彡夊斤白谷戈舟手入穴 = false;
            冫弋夂屮亅赤立爻牛大夂香 = "";
            stringBuilder.Length = 0;
            if (牛刀火刀鼠匕士用幺黑手鼻Stack.Count > 0)
            {
              牛刀火刀鼠匕士用幺黑手鼻 = 牛刀火刀鼠匕士用幺黑手鼻Stack.Peek();
              continue;
            }
            continue;
          case '{':
            if (flag)
            {
              stringBuilder.Append(刀屮网耒爿匕夂片水色色工音宀[index]);
              continue;
            }
            牛刀火刀鼠匕士用幺黑手鼻Stack.Push((牛刀火刀鼠匕士用幺黑手鼻) new 羊黑彐豸父手瓜艮囗石水寸臼鹵());
            if (牛刀火刀鼠匕士用幺黑手鼻 != (object) null)
              牛刀火刀鼠匕士用幺黑手鼻.Add(冫弋夂屮亅赤立爻牛大夂香, 牛刀火刀鼠匕士用幺黑手鼻Stack.Peek());
            冫弋夂屮亅赤立爻牛大夂香 = "";
            stringBuilder.Length = 0;
            牛刀火刀鼠匕士用幺黑手鼻 = 牛刀火刀鼠匕士用幺黑手鼻Stack.Peek();
            continue;
          default:
            stringBuilder.Append(刀屮网耒爿匕夂片水色色工音宀[index]);
            continue;
        }
      }
      if (flag)
        throw new Exception("JSON Parse: Quotation marks seems to be messed up.");
      return 牛刀火刀鼠匕士用幺黑手鼻 == (object) null ? 牛刀火刀鼠匕士用幺黑手鼻.彡瓜寸鬯欠彳二比戈日厂无走爿(stringBuilder.ToString(), 鼠廾彡夊斤白谷戈舟手入穴) : 牛刀火刀鼠匕士用幺黑手鼻;
    }

    public struct 襾大耳豸谷臼手爻至毋虍邑冖
    {
      private 牛刀火刀鼠匕士用幺黑手鼻.襾大耳豸谷臼手爻至毋虍邑冖.干儿襾己匕文止夕片支靑夊 二彡爻冂田隹干大文曰父黍巾艸;
      private Dictionary<string, 牛刀火刀鼠匕士用幺黑手鼻>.Enumerator 几戈木儿日女小二毛夕囗;
      private List<牛刀火刀鼠匕士用幺黑手鼻>.Enumerator 八血儿大見屮牛大牛丿士;

      public bool 石巾又小鬯爻黽糸老气气水夊艸爻卜 => this.二彡爻冂田隹干大文曰父黍巾艸 != 0;

      public 襾大耳豸谷臼手爻至毋虍邑冖(List<牛刀火刀鼠匕士用幺黑手鼻>.Enumerator aArrayEnum)
      {
        this.二彡爻冂田隹干大文曰父黍巾艸 = 牛刀火刀鼠匕士用幺黑手鼻.襾大耳豸谷臼手爻至毋虍邑冖.干儿襾己匕文止夕片支靑夊.儿耳斤丿攴攴勹毋玄至广牛艮片;
        this.几戈木儿日女小二毛夕囗 = new Dictionary<string, 牛刀火刀鼠匕士用幺黑手鼻>.Enumerator();
        this.八血儿大見屮牛大牛丿士 = aArrayEnum;
      }

      public 襾大耳豸谷臼手爻至毋虍邑冖(
        Dictionary<string, 牛刀火刀鼠匕士用幺黑手鼻>.Enumerator aDictEnum)
      {
        this.二彡爻冂田隹干大文曰父黍巾艸 = 牛刀火刀鼠匕士用幺黑手鼻.襾大耳豸谷臼手爻至毋虍邑冖.干儿襾己匕文止夕片支靑夊.毛鼠見幺牛斤歹巛爿歹阜寸;
        this.几戈木儿日女小二毛夕囗 = aDictEnum;
        this.八血儿大見屮牛大牛丿士 = new List<牛刀火刀鼠匕士用幺黑手鼻>.Enumerator();
      }

      public KeyValuePair<string, 牛刀火刀鼠匕士用幺黑手鼻> 己禾亠鬯卩亠鼻雨寸辰欠文廴
      {
        get
        {
          if (this.二彡爻冂田隹干大文曰父黍巾艸 == 牛刀火刀鼠匕士用幺黑手鼻.襾大耳豸谷臼手爻至毋虍邑冖.干儿襾己匕文止夕片支靑夊.儿耳斤丿攴攴勹毋玄至广牛艮片)
            return new KeyValuePair<string, 牛刀火刀鼠匕士用幺黑手鼻>(string.Empty, this.八血儿大見屮牛大牛丿士.Current);
          return this.二彡爻冂田隹干大文曰父黍巾艸 == 牛刀火刀鼠匕士用幺黑手鼻.襾大耳豸谷臼手爻至毋虍邑冖.干儿襾己匕文止夕片支靑夊.毛鼠見幺牛斤歹巛爿歹阜寸 ? this.几戈木儿日女小二毛夕囗.Current : new KeyValuePair<string, 牛刀火刀鼠匕士用幺黑手鼻>(string.Empty, (牛刀火刀鼠匕士用幺黑手鼻) null);
        }
      }

      public bool MoveNext()
      {
        if (this.二彡爻冂田隹干大文曰父黍巾艸 == 牛刀火刀鼠匕士用幺黑手鼻.襾大耳豸谷臼手爻至毋虍邑冖.干儿襾己匕文止夕片支靑夊.儿耳斤丿攴攴勹毋玄至广牛艮片)
          return this.八血儿大見屮牛大牛丿士.MoveNext();
        return this.二彡爻冂田隹干大文曰父黍巾艸 == 牛刀火刀鼠匕士用幺黑手鼻.襾大耳豸谷臼手爻至毋虍邑冖.干儿襾己匕文止夕片支靑夊.毛鼠見幺牛斤歹巛爿歹阜寸 && this.几戈木儿日女小二毛夕囗.MoveNext();
      }

      private enum 干儿襾己匕文止夕片支靑夊
      {
        弋厶宀匕尸見戈彐赤見支,
        儿耳斤丿攴攴勹毋玄至广牛艮片,
        毛鼠見幺牛斤歹巛爿歹阜寸,
      }
    }

    public struct 方豕月里髟凵飛鬥尸小頁夂比廴
    {
      private 牛刀火刀鼠匕士用幺黑手鼻.襾大耳豸谷臼手爻至毋虍邑冖 鼠竹辛工豸鼠鬥竹瓜金耒矢曰鬼;

      public 方豕月里髟凵飛鬥尸小頁夂比廴(List<牛刀火刀鼠匕士用幺黑手鼻>.Enumerator aArrayEnum)
        : this(new 牛刀火刀鼠匕士用幺黑手鼻.襾大耳豸谷臼手爻至毋虍邑冖(aArrayEnum))
      {
      }

      public 方豕月里髟凵飛鬥尸小頁夂比廴(
        Dictionary<string, 牛刀火刀鼠匕士用幺黑手鼻>.Enumerator aDictEnum)
        : this(new 牛刀火刀鼠匕士用幺黑手鼻.襾大耳豸谷臼手爻至毋虍邑冖(aDictEnum))
      {
      }

      public 方豕月里髟凵飛鬥尸小頁夂比廴(牛刀火刀鼠匕士用幺黑手鼻.襾大耳豸谷臼手爻至毋虍邑冖 aEnumerator) => this.鼠竹辛工豸鼠鬥竹瓜金耒矢曰鬼 = aEnumerator;

      public 牛刀火刀鼠匕士用幺黑手鼻 干爪酉水夂立牛香女二夊 => this.鼠竹辛工豸鼠鬥竹瓜金耒矢曰鬼.己禾亠鬯卩亠鼻雨寸辰欠文廴.Value;

      public bool MoveNext() => this.鼠竹辛工豸鼠鬥竹瓜金耒矢曰鬼.MoveNext();

      public 牛刀火刀鼠匕士用幺黑手鼻.方豕月里髟凵飛鬥尸小頁夂比廴 GetEnumerator() => this;
    }

    public struct 行竹宀子尸高雨首冂寸牛比丶文
    {
      private 牛刀火刀鼠匕士用幺黑手鼻.襾大耳豸谷臼手爻至毋虍邑冖 鼠竹辛工豸鼠鬥竹瓜金耒矢曰鬼;

      public 行竹宀子尸高雨首冂寸牛比丶文(List<牛刀火刀鼠匕士用幺黑手鼻>.Enumerator aArrayEnum)
        : this(new 牛刀火刀鼠匕士用幺黑手鼻.襾大耳豸谷臼手爻至毋虍邑冖(aArrayEnum))
      {
      }

      public 行竹宀子尸高雨首冂寸牛比丶文(
        Dictionary<string, 牛刀火刀鼠匕士用幺黑手鼻>.Enumerator aDictEnum)
        : this(new 牛刀火刀鼠匕士用幺黑手鼻.襾大耳豸谷臼手爻至毋虍邑冖(aDictEnum))
      {
      }

      public 行竹宀子尸高雨首冂寸牛比丶文(牛刀火刀鼠匕士用幺黑手鼻.襾大耳豸谷臼手爻至毋虍邑冖 aEnumerator) => this.鼠竹辛工豸鼠鬥竹瓜金耒矢曰鬼 = aEnumerator;

      public string 黍屮米土魚齊彳口魚匕鬲 => this.鼠竹辛工豸鼠鬥竹瓜金耒矢曰鬼.己禾亠鬯卩亠鼻雨寸辰欠文廴.Key;

      public bool MoveNext() => this.鼠竹辛工豸鼠鬥竹瓜金耒矢曰鬼.MoveNext();

      public 牛刀火刀鼠匕士用幺黑手鼻.行竹宀子尸高雨首冂寸牛比丶文 GetEnumerator() => this;
    }

    public class 鼠匚冫手一干夕攴比屮厶寸戈 : 
      IEnumerator<KeyValuePair<string, 牛刀火刀鼠匕士用幺黑手鼻>>,
      IEnumerable<KeyValuePair<string, 牛刀火刀鼠匕士用幺黑手鼻>>,
      IDisposable,
      IEnumerator,
      IEnumerable
    {
      private 牛刀火刀鼠匕士用幺黑手鼻 亠鼠手子辰臣戶耒火革文廾亠黑;
      private 牛刀火刀鼠匕士用幺黑手鼻.襾大耳豸谷臼手爻至毋虍邑冖 鼠竹辛工豸鼠鬥竹瓜金耒矢曰鬼;

      internal 鼠匚冫手一干夕攴比屮厶寸戈(牛刀火刀鼠匕士用幺黑手鼻 aNode)
      {
        this.亠鼠手子辰臣戶耒火革文廾亠黑 = aNode;
        if (!(this.亠鼠手子辰臣戶耒火革文廾亠黑 != (object) null))
          return;
        this.鼠竹辛工豸鼠鬥竹瓜金耒矢曰鬼 = this.亠鼠手子辰臣戶耒火革文廾亠黑.GetEnumerator();
      }

      public KeyValuePair<string, 牛刀火刀鼠匕士用幺黑手鼻> 牛文厶爪田皿戶甘厶巛亠丶 => this.鼠竹辛工豸鼠鬥竹瓜金耒矢曰鬼.己禾亠鬯卩亠鼻雨寸辰欠文廴;

      object IEnumerator.大匕匸魚尸髟矛疒尢鬼寸小牛斗 => (object) this.鼠竹辛工豸鼠鬥竹瓜金耒矢曰鬼.己禾亠鬯卩亠鼻雨寸辰欠文廴;

      public bool MoveNext() => this.鼠竹辛工豸鼠鬥竹瓜金耒矢曰鬼.MoveNext();

      public void Dispose()
      {
        this.亠鼠手子辰臣戶耒火革文廾亠黑 = (牛刀火刀鼠匕士用幺黑手鼻) null;
        this.鼠竹辛工豸鼠鬥竹瓜金耒矢曰鬼 = new 牛刀火刀鼠匕士用幺黑手鼻.襾大耳豸谷臼手爻至毋虍邑冖();
      }

      public IEnumerator<KeyValuePair<string, 牛刀火刀鼠匕士用幺黑手鼻>> GetEnumerator() => (IEnumerator<KeyValuePair<string, 牛刀火刀鼠匕士用幺黑手鼻>>) new 牛刀火刀鼠匕士用幺黑手鼻.鼠匚冫手一干夕攴比屮厶寸戈(this.亠鼠手子辰臣戶耒火革文廾亠黑);

      public void Reset()
      {
        if (!(this.亠鼠手子辰臣戶耒火革文廾亠黑 != (object) null))
          return;
        this.鼠竹辛工豸鼠鬥竹瓜金耒矢曰鬼 = this.亠鼠手子辰臣戶耒火革文廾亠黑.GetEnumerator();
      }

      IEnumerator IEnumerable.GetEnumerator() => (IEnumerator) new 牛刀火刀鼠匕士用幺黑手鼻.鼠匚冫手一干夕攴比屮厶寸戈(this.亠鼠手子辰臣戶耒火革文廾亠黑);
    }
  }
}
