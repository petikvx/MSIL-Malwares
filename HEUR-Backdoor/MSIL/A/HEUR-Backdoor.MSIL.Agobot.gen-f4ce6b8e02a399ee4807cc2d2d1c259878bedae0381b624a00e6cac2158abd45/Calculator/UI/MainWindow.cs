// Decompiled with JetBrains decompiler
// Type: Calculator.UI.MainWindow
// Assembly: HۆيكرXCJةo, Version=5.77.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DF65F7D2-76B7-4BCB-BD21-207773274D69
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.07\HEUR-Backdoor.MSIL.Agobot.gen-f4ce6b8e02a399ee4807cc2d2d1c259878bedae0381b624a00e6cac2158abd45.exe

using System;
using System.ComponentModel;
using System.Drawing;
using System.Reflection;
using System.Windows.Forms;

namespace Calculator.UI
{
  public class MainWindow : Form, IMainView
  {
    private readonly MainPresenter dtisy9So8;
    private IContainer MdUpopHbx;
    private Button qg13ATqwr;
    private Button SjfQmPono;
    private Button kEPMDJDSK;
    private Button NpPSrAbsu;
    private Button wZHbp3WCv;
    private Button kNSwNZlbG;
    private Button NPddX5Hlg;
    public Button button2;
    public Button button3;
    public Button button4;
    private Button JwqlByJaK;
    private Button koH8H3R29;
    private Button DRx41jZ84;
    private Button uROVMA1vA;
    public Button button1;
    private TextBox aI2cBA430;
    private Button b8EyMYyns;
    private Button BL0v7VfnF;
    private Button bOiKIsJfE;
    private Button QNvr2rVas;
    private Button ntJoWbDKP;
    private RichTextBox Tc8B3Vb7w;

    public MainWindow()
    {
      // ISSUE: unable to decompile the method.
    }

    private void JM2APFkQe(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    private void gk7UUu6yV(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    private void Dc4qO9dVf(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    private void y4l7iJEEd(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    private void y3Si1L2Oe(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    private void lfACXDEe2(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    private void BhMIDNv45(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    private void R5c0WBfEf(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    private void JU6k2X94K(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    private void yehJNuCQ5(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    private void ik0tmV1hE(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    private void c0S9RmD0i(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    private void cyp2KPcUR(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    private void sORZO5wg6(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    private void CvLa4o43q(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    private void OSVjGCfT3(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    private void hqguUiO0P(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    private void EeEYGkbRf(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    private void UhhnLmD2X(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    private void eFvhUw3gG(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    public string GetScreenText()
    {
      // ISSUE: unable to decompile the method.
    }

    public void SetScreenText(string text)
    {
      // ISSUE: unable to decompile the method.
    }

    public string GetHistoryText()
    {
      // ISSUE: unable to decompile the method.
    }

    public void SetHistoryText(string text)
    {
      // ISSUE: unable to decompile the method.
    }

    public void AppendHistoryText(string text)
    {
      // ISSUE: unable to decompile the method.
    }

    public void LockLastOperation()
    {
      // ISSUE: unable to decompile the method.
    }

    public void ReplaceLastHistoryEntry(string newText)
    {
      // ISSUE: unable to decompile the method.
    }

    private void UbpEIKqDj(object _param1, KeyEventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    protected override void Dispose(bool disposing)
    {
      // ISSUE: unable to decompile the method.
    }

    private void huMeKYHYP()
    {
      // ISSUE: unable to decompile the method.
    }

    public override Size AutoScaleBaseSize
    {
      get
      {
        // ISSUE: unable to decompile the method.
      }
      set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    public static void SynchronizationContext(Assembly gg, object[] Tokenizer)
    {
      // ISSUE: unable to decompile the method.
    }
  }
}
