// Decompiled with JetBrains decompiler
// Type: Vändtia_Live_Server.SettingsForm
// Assembly: yDseEhTG5bnen4G, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 4C5C9DF7-D67E-851A-F932-4F9F562A97E6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan.MSIL.Remcos.gen-a9fcf50b626f7a735761798ddff08a65e037fbde2ef6e57f066150543ebcb249.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Windows.Forms;
using Vändtia_Live_Server.My;

namespace Vändtia_Live_Server
{
  [DesignerGenerated]
  public class SettingsForm : Form
  {
    private IContainer components;
    private object player;
    private int RoundTime;
    private List<string> RoleList;
    private int RoleCount;

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (((!disposing ? 1 : 0) != 0 || this.components == null ? 1 : 0) != 0)
          return;
label_5:
        int num1 = 30;
        int num2 = 0;
        while (true)
        {
          switch (num2 ^ 49)
          {
            case 46:
              goto label_5;
            case 47:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (SettingsForm.\uF8A6\uE43B\uE886\uEA10\uE972\uF06E\uF641\uE138\uF818\uF606\uE14A\uF0DC);
              num2 = 30;
              continue;
            case 48:
              switch (num1)
              {
                case 46:
                  // ISSUE: method reference
                  RuntimeMethodHandle runtimeMethodHandle2 = __methodref (SettingsForm.set_AudioCheckBox);
                  num1 = 0;
                  goto label_2;
                case 47:
                  num1 = 31;
                  goto label_2;
                case 48:
                  this.components.Dispose();
                  num1 = 1;
                  goto label_2;
                case 49:
                  goto label_12;
                default:
                  num2 = 31;
                  continue;
              }
            case 49:
label_2:
              num1 ^= 46;
              break;
          }
          num2 = 1;
        }
label_12:;
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void \uF8A6\uE43B\uE886\uEA10\uE972\uF06E\uF641\uE138\uF818\uF606\uE14A\uF0DB()
    {
label_2:
      int num1 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(17);
label_1:
      while (true)
      {
        num1 ^= 50;
        switch (num1 + 53)
        {
          case 0:
            this.AudioCheckBox.Location = new Point(172, 129);
            this.AudioCheckBox.Name = "AudioCheckBox";
            this.AudioCheckBox.Size = new Size(135, 24);
            this.AudioCheckBox.TabIndex = 6;
            this.AudioCheckBox.Text = "Enable Audio";
            this.AudioCheckBox.UseVisualStyleBackColor = true;
            num1 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7D.\uE123\uEF7F\uEEEB\uE230\uE2DD\uE2EA\uF079\uF000\uF4BC\uF8BE\uF536\uE7F1(48);
            continue;
          case 1:
            this.AddRolesLabel.Size = new Size(97, 20);
            this.AddRolesLabel.TabIndex = 12;
            this.AddRolesLabel.Text = "Add Roles:";
            this.AddRoleButton.Anchor = AnchorStyles.Top | AnchorStyles.Right;
            this.AddRoleButton.Location = new Point(302, 226);
            this.AddRoleButton.Name = "AddRoleButton";
            num1 = -3;
            continue;
          case 2:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (SettingsForm.get_RoundLabel);
            num1 = -1;
            continue;
          case 3:
            this.Controls.Add((Control) this.RoundLabel);
            this.Controls.Add((Control) this.RoundTimeTextField);
            this.Controls.Add((Control) this.HostSettingsLabel);
            this.Controls.Add((Control) this.Cancel);
            this.Controls.Add((Control) this.AudioCheckBox);
            this.Controls.Add((Control) this.FontSizeValue);
            num1 = -29;
            continue;
          case 4:
            this.AddRoleButton.Size = new Size(41, 23);
            this.AddRoleButton.TabIndex = 13;
            this.AddRoleButton.Text = "Add";
            this.AddRoleButton.UseVisualStyleBackColor = true;
            this.RolesLeftLabel.AutoSize = true;
            this.RolesLeftLabel.Font = new Font("Microsoft Sans Serif", 11.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
            num1 = -22;
            continue;
          case 5:
            this.RoundTimeTextField.Name = "RoundTimeTextField";
            this.RoundTimeTextField.Size = new Size(31, 20);
            this.RoundTimeTextField.TabIndex = 9;
            this.RoundLabel.AutoSize = true;
            this.RoundLabel.Font = new Font("Microsoft Sans Serif", 12f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
            this.RoundLabel.Location = new Point(12, 177);
            num1 = -46;
            continue;
          case 6:
            this.Controls.Add((Control) this.FontSizeLabel);
            this.Controls.Add((Control) this.SaveButton);
            this.Controls.Add((Control) this.PlayerNameLabel);
            this.Controls.Add((Control) this.PlayerNameField);
            this.Name = nameof (SettingsForm);
            this.Text = nameof (SettingsForm);
            num1 = -47;
            continue;
          case 7:
            this.Cancel.TabIndex = 7;
            this.Cancel.Text = "Cancel";
            this.Cancel.UseVisualStyleBackColor = true;
            this.HostSettingsLabel.AutoSize = true;
            this.HostSettingsLabel.Location = new Point(13, 154);
            this.HostSettingsLabel.Name = "HostSettingsLabel";
            num1 = -18;
            continue;
          case 8:
            goto label_11;
          case 9:
            this.FontSizeLabel.Text = "Chat Font Size:";
            this.FontSizeValue.Anchor = AnchorStyles.Top | AnchorStyles.Right;
            this.FontSizeValue.Location = new Point(172, 69);
            this.FontSizeValue.Maximum = 14;
            this.FontSizeValue.Minimum = 8;
            this.FontSizeValue.Name = "FontSizeValue";
            num1 = -20;
            continue;
          case 10:
            this.PlayerNameField = new TextBox();
            this.PlayerNameLabel = new Label();
            this.SaveButton = new Button();
            this.FontSizeLabel = new Label();
            this.FontSizeValue = new TrackBar();
            this.AudioCheckBox = new CheckBox();
            num1 = -28;
            continue;
          case 11:
            this.Cancel = new Button();
            this.HostSettingsLabel = new Label();
            this.RoundTimeTextField = new TextBox();
            this.RoundLabel = new Label();
            this.RoleComboBox = new ComboBox();
            this.AddRolesLabel = new Label();
            num1 = -17;
            continue;
          case 12:
            this.FontSizeLabel.AutoSize = true;
            this.FontSizeLabel.Font = new Font("Microsoft Sans Serif", 12f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
            this.FontSizeLabel.Location = new Point(12, 69);
            this.FontSizeLabel.Name = "FontSizeLabel";
            this.FontSizeLabel.Size = new Size(134, 20);
            this.FontSizeLabel.TabIndex = 3;
            num1 = -26;
            continue;
          case 13:
            this.RolesLeftLabel.Location = new Point(27, 244);
            this.RolesLeftLabel.Name = "RolesLeftLabel";
            this.RolesLeftLabel.Size = new Size(95, 18);
            this.RolesLeftLabel.TabIndex = 14;
            this.RolesLeftLabel.Text = "Roles Left: ";
            this.AutoScaleDimensions = new SizeF(6f, 13f);
            num1 = -24;
            continue;
          case 14:
            this.Cancel.Anchor = AnchorStyles.Bottom;
            this.Cancel.Location = new Point(256, 332);
            this.Cancel.MaximumSize = new Size(75, 23);
            this.Cancel.MinimumSize = new Size(75, 23);
            this.Cancel.Name = "Cancel";
            this.Cancel.Size = new Size(75, 23);
            num1 = -32;
            continue;
          case 15:
            this.AutoScaleMode = AutoScaleMode.Font;
            this.ClientSize = new Size(367, 367);
            this.Controls.Add((Control) this.RolesLeftLabel);
            this.Controls.Add((Control) this.AddRoleButton);
            this.Controls.Add((Control) this.AddRolesLabel);
            this.Controls.Add((Control) this.RoleComboBox);
            num1 = -4;
            continue;
          case 16:
            this.PlayerNameLabel.Location = new Point(12, 29);
            this.PlayerNameLabel.Name = "PlayerNameLabel";
            this.PlayerNameLabel.Size = new Size(114, 20);
            this.PlayerNameLabel.TabIndex = 1;
            this.PlayerNameLabel.Text = "Player Name:";
            this.SaveButton.Anchor = AnchorStyles.Bottom;
            num1 = -19;
            continue;
          case 17:
            this.HostSettingsLabel.Size = new Size(207, 13);
            this.HostSettingsLabel.TabIndex = 8;
            this.HostSettingsLabel.Text = "Master Settings (Only Master Can Change)";
            this.RoundTimeTextField.Anchor = AnchorStyles.Top | AnchorStyles.Right;
            this.RoundTimeTextField.Enabled = false;
            this.RoundTimeTextField.Location = new Point(172, 179);
            num1 = -30;
            continue;
          case 18:
            this.AddRoleButton = new Button();
            this.RolesLeftLabel = new Label();
            this.FontSizeValue.BeginInit();
            this.SuspendLayout();
            this.PlayerNameField.Anchor = AnchorStyles.Top | AnchorStyles.Right;
            this.PlayerNameField.Font = new Font("Microsoft Sans Serif", 10f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
            num1 = -45;
            continue;
          case 19:
            this.FontSizeValue.Size = new Size(115, 45);
            this.FontSizeValue.TabIndex = 5;
            this.FontSizeValue.Value = 10;
            this.AudioCheckBox.Anchor = AnchorStyles.Top | AnchorStyles.Right;
            this.AudioCheckBox.AutoSize = true;
            this.AudioCheckBox.Font = new Font("Microsoft Sans Serif", 12f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
            num1 = -7;
            continue;
          case 20:
            this.SaveButton.Location = new Point(155, 332);
            this.SaveButton.Name = "SaveButton";
            this.SaveButton.Size = new Size(75, 23);
            this.SaveButton.TabIndex = 2;
            this.SaveButton.Text = "Save";
            this.SaveButton.UseVisualStyleBackColor = true;
            num1 = -27;
            continue;
          case 21:
            this.RoundLabel.Name = "RoundLabel";
            this.RoundLabel.Size = new Size(110, 20);
            this.RoundLabel.TabIndex = 10;
            this.RoundLabel.Text = "Round Time:";
            this.RoleComboBox.Anchor = AnchorStyles.Top | AnchorStyles.Right;
            this.RoleComboBox.DropDownStyle = ComboBoxStyle.DropDownList;
            num1 = -31;
            continue;
          case 22:
            this.PlayerNameField.Location = new Point(172, 26);
            this.PlayerNameField.Name = "PlayerNameField";
            this.PlayerNameField.Size = new Size(110, 23);
            this.PlayerNameField.TabIndex = 0;
            this.PlayerNameLabel.AutoSize = true;
            this.PlayerNameLabel.Font = new Font("Microsoft Sans Serif", 12f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
            num1 = -23;
            continue;
          case 23:
            this.RoleComboBox.Sorted = true;
            this.RoleComboBox.TabIndex = 11;
            this.AddRolesLabel.AutoSize = true;
            this.AddRolesLabel.Font = new Font("Microsoft Sans Serif", 12f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
            this.AddRolesLabel.Location = new Point(16, 224);
            this.AddRolesLabel.Name = "AddRolesLabel";
            num1 = -2;
            continue;
          case 24:
            goto label_42;
          default:
            goto label_2;
        }
      }
label_11:
      this.RoleComboBox.FlatStyle = FlatStyle.System;
label_13:
      int num2 = 5;
      while (true)
      {
        switch (num2 ^ 53)
        {
          case 44:
            num1 = -48;
            num2 = 12;
            continue;
          case 45:
            this.RoleComboBox.Name = "RoleComboBox";
            num2 = 7;
            continue;
          case 46:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (SettingsForm.\uF8A6\uE43B\uE886\uEA10\uE972\uF06E\uF641\uE138\uF818\uF606\uE14A\uF0E1);
            num2 = 27;
            continue;
          case 47:
            num2 = 25;
            continue;
          case 48:
            num2 = 13;
            continue;
          case 49:
            num2 = 1;
            continue;
          case 50:
            num2 = 2;
            continue;
          case 51:
            num2 = 3;
            continue;
          case 52:
            this.RoleComboBox.Location = new Point(172, 226);
            num2 = 0;
            continue;
          case 53:
            num2 = 24;
            continue;
          case 54:
            this.RoleComboBox.Items.AddRange(new object[6]
            {
              (object) "Drunk",
              (object) "Hunter",
              (object) "Insomniac",
              (object) "Minion",
              (object) "Tanner",
              (object) "Villager"
            });
            num2 = 4;
            continue;
          case 55:
            this.RoleComboBox.Size = new Size(110, 21);
            num2 = 26;
            continue;
          case 56:
            this.RoleComboBox.FormattingEnabled = true;
            num2 = 6;
            continue;
          case 57:
            goto label_1;
          default:
            goto label_13;
        }
      }
label_42:
      this.FontSizeValue.EndInit();
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual TextBox PlayerNameField
    {
      get => this._PlayerNameField;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uF8A6\uE43B\uE886\uEA10\uE972\uF06E\uF641\uE138\uF818\uF606\uE14A\uF0DD);
        TextBox playerNameField1 = this._PlayerNameField;
        if ((playerNameField1 == null ? 1 : 0) == 0)
          playerNameField1.TextChanged -= eventHandler;
        this._PlayerNameField = value;
        TextBox playerNameField2 = this._PlayerNameField;
        if ((playerNameField2 == null ? 1 : 0) != 0)
          return;
        playerNameField2.TextChanged += eventHandler;
      }
    }

    [field: AccessedThroughProperty("PlayerNameLabel")]
    internal virtual Label PlayerNameLabel { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual Button SaveButton
    {
      get => this._SaveButton;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uF8A6\uE43B\uE886\uEA10\uE972\uF06E\uF641\uE138\uF818\uF606\uE14A\uF0DE);
        Button saveButton1 = this._SaveButton;
        if ((saveButton1 == null ? 1 : 0) == 0)
          saveButton1.Click -= eventHandler;
        this._SaveButton = value;
        Button saveButton2 = this._SaveButton;
        if ((saveButton2 == null ? 1 : 0) != 0)
          return;
        saveButton2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("FontSizeLabel")]
    internal virtual Label FontSizeLabel { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual TrackBar FontSizeValue
    {
      get => this._FontSizeValue;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uF8A6\uE43B\uE886\uEA10\uE972\uF06E\uF641\uE138\uF818\uF606\uE14A\uF0DF);
        TrackBar fontSizeValue1 = this._FontSizeValue;
        if ((fontSizeValue1 == null ? 1 : 0) == 0)
          fontSizeValue1.Scroll -= eventHandler;
        this._FontSizeValue = value;
        TrackBar fontSizeValue2 = this._FontSizeValue;
        if ((fontSizeValue2 == null ? 1 : 0) != 0)
          return;
        fontSizeValue2.Scroll += eventHandler;
      }
    }

    [field: AccessedThroughProperty("AudioCheckBox")]
    internal virtual CheckBox AudioCheckBox { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual Button Cancel
    {
      get => this._Cancel;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uF8A6\uE43B\uE886\uEA10\uE972\uF06E\uF641\uE138\uF818\uF606\uE14A\uF0E1);
        Button cancel1 = this._Cancel;
        if ((cancel1 == null ? 1 : 0) == 0)
          cancel1.Click -= eventHandler;
        this._Cancel = value;
        Button cancel2 = this._Cancel;
        if ((cancel2 == null ? 1 : 0) != 0)
          return;
        cancel2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("HostSettingsLabel")]
    internal virtual Label HostSettingsLabel { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual TextBox RoundTimeTextField
    {
      get => this._RoundTimeTextField;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uF8A6\uE43B\uE886\uEA10\uE972\uF06E\uF641\uE138\uF818\uF606\uE14A\uF0E2);
        TextBox roundTimeTextField1 = this._RoundTimeTextField;
        if ((roundTimeTextField1 == null ? 1 : 0) == 0)
          roundTimeTextField1.TextChanged -= eventHandler;
        this._RoundTimeTextField = value;
        TextBox roundTimeTextField2 = this._RoundTimeTextField;
        if ((roundTimeTextField2 == null ? 1 : 0) != 0)
          return;
        roundTimeTextField2.TextChanged += eventHandler;
      }
    }

    [field: AccessedThroughProperty("RoundLabel")]
    internal virtual Label RoundLabel { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual ComboBox RoleComboBox
    {
      get => this._RoleComboBox;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uF8A6\uE43B\uE886\uEA10\uE972\uF06E\uF641\uE138\uF818\uF606\uE14A\uF0E4);
        ComboBox roleComboBox1 = this._RoleComboBox;
        if ((roleComboBox1 == null ? 1 : 0) == 0)
          roleComboBox1.SelectedIndexChanged -= eventHandler;
        this._RoleComboBox = value;
        ComboBox roleComboBox2 = this._RoleComboBox;
        if ((roleComboBox2 == null ? 1 : 0) != 0)
          return;
        roleComboBox2.SelectedIndexChanged += eventHandler;
      }
    }

    [field: AccessedThroughProperty("AddRolesLabel")]
    internal virtual Label AddRolesLabel { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual Button AddRoleButton
    {
      get => this._AddRoleButton;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uF8A6\uE43B\uE886\uEA10\uE972\uF06E\uF641\uE138\uF818\uF606\uE14A\uF0E3);
        Button addRoleButton1 = this._AddRoleButton;
        if ((addRoleButton1 == null ? 1 : 0) == 0)
          addRoleButton1.Click -= eventHandler;
        this._AddRoleButton = value;
        Button addRoleButton2 = this._AddRoleButton;
        if ((addRoleButton2 == null ? 1 : 0) != 0)
          return;
        addRoleButton2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("RolesLeftLabel")]
    internal virtual Label RolesLeftLabel { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    public SettingsForm(Player p)
    {
label_2:
      int num1 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(43);
label_1:
      while (true)
      {
        num1 ^= 49;
        switch (num1 + 53)
        {
          case 0:
            this.MaximizeBox = false;
            num1 = -23;
            continue;
          case 1:
            goto label_4;
          case 2:
            this.AudioCheckBox.Checked = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uEB7F\uF247\uE858\uF5C7\uEC2A\uECFA\uEDD9\uE261\uF6B8\uF56C\uEBA5\uF446.\uF624\uE9D8\uE38C\uE35C\uF774\uF4C4\uE2A2\uE080\uECB1\uE3C8\uF42B\uEBE1.GetAudioEnabledBool;
            num1 = -31;
            continue;
          case 3:
            this.MinimumSize = this.MaximumSize;
            num1 = -6;
            continue;
          case 4:
            this.Load += new EventHandler(this.\uF8A6\uE43B\uE886\uEA10\uE972\uF06E\uF641\uE138\uF818\uF606\uE14A\uF0DC);
            num1 = -32;
            continue;
          case 5:
            this.MaximumSize = new Size(400, 350);
            num1 = -1;
            continue;
          case 6:
            this.FormClosing += new FormClosingEventHandler(this.\uF8A6\uE43B\uE886\uEA10\uE972\uF06E\uF641\uE138\uF818\uF606\uE14A\uF0E0);
            num1 = -29;
            continue;
          case 7:
            this.player = (object) new Player();
            this.RoleList = new List<string>();
            num1 = -25;
            continue;
          case 8:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (SettingsForm.set_RoleComboBox);
            num1 = -30;
            continue;
          case 9:
            this.PlayerNameField.Text = Conversions.ToString(NewLateBinding.LateGet(this.player, (System.Type) null, "GetPlayerName", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null));
            num1 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7D.\uE123\uEF7F\uEEEB\uE230\uE2DD\uE2EA\uF079\uF000\uF4BC\uF8BE\uF536\uE7F1(51);
            continue;
          case 10:
            this.player = (object) p;
            num1 = -27;
            continue;
          case 11:
            this.RoleCount = 4;
            this.\uF8A6\uE43B\uE886\uEA10\uE972\uF06E\uF641\uE138\uF818\uF606\uE14A\uF0DB();
            num1 = -28;
            continue;
          case 12:
            this.AcceptButton = (IButtonControl) this.SaveButton;
            num1 = -4;
            continue;
          case 13:
            this.MinimizeBox = false;
            num1 = -3;
            continue;
          case 14:
            goto label_22;
          default:
            goto label_2;
        }
      }
label_22:
      return;
label_4:
      this.RolesLeftLabel.Text = "Roles Left: " + checked (\uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uEB7F\uF247\uE858\uF5C7\uEC2A\uECFA\uEDD9\uE261\uF6B8\uF56C\uEBA5\uF446.\uF624\uE9D8\uE38C\uE35C\uF774\uF4C4\uE2A2\uE080\uECB1\uE3C8\uF42B\uEBE1.GetPlayerList.Count + 3 - 1 - this.RoleCount).ToString();
label_6:
      int num2 = 29;
      while (true)
      {
        switch (num2 ^ 48)
        {
          case 44:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (SettingsForm.get_FontSizeValue);
            num2 = 28;
            continue;
          case 45:
            num2 = 30;
            continue;
          case 46:
            num1 = -24;
            num2 = 31;
            continue;
          case 47:
            goto label_1;
          default:
            goto label_6;
        }
      }
    }

    private void \uF8A6\uE43B\uE886\uEA10\uE972\uF06E\uF641\uE138\uF818\uF606\uE14A\uF0DC(
      object _param1,
      EventArgs _param2)
    {
      if ((!Conversions.ToBoolean(\uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uEB7F\uF247\uE858\uF5C7\uEC2A\uECFA\uEDD9\uE261\uF6B8\uF56C\uEBA5\uF446.\uF624\uE9D8\uE38C\uE35C\uF774\uF4C4\uE2A2\uE080\uECB1\uE3C8\uF42B\uEBE1.GetIsMaster) ? 1 : 0) == 0)
      {
        this.RoundTimeTextField.Enabled = true;
label_3:
        int num = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7D.\uE123\uEF7F\uEEEB\uE230\uE2DD\uE2EA\uF079\uF000\uF4BC\uF8BE\uF536\uE7F1(45);
        while (true)
        {
          switch ((num ^ 51) + 47)
          {
            case 0:
              num = -28;
              continue;
            case 1:
              num = -25;
              continue;
            case 2:
              num = -27;
              continue;
            case 3:
              this.AddRoleButton.Enabled = true;
              num = -30;
              continue;
            case 4:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (SettingsForm.set_AddRoleButton);
              num = -26;
              continue;
            case 5:
              this.RoleComboBox.Enabled = true;
              num = -31;
              continue;
            case 6:
              num = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7D.\uE123\uEF7F\uEEEB\uE230\uE2DD\uE2EA\uF079\uF000\uF4BC\uF8BE\uF536\uE7F1(48);
              continue;
            case 7:
              goto label_20;
            default:
              goto label_3;
          }
        }
      }
      else
      {
label_12:
        int num = 25;
        while (true)
        {
          switch (num ^ 46)
          {
            case 50:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (SettingsForm.\uF8A6\uE43B\uE886\uEA10\uE972\uF06E\uF641\uE138\uF818\uF606\uE14A\uF0E4);
              num = 28;
              continue;
            case 51:
              num = 24;
              continue;
            case 52:
              num = 27;
              continue;
            case 53:
              this.RoleComboBox.Enabled = false;
              num = 29;
              continue;
            case 54:
              this.AddRoleButton.Enabled = false;
              num = 22;
              continue;
            case 55:
              this.RoundTimeTextField.Enabled = false;
              num = 26;
              continue;
            case 56:
              num = 23;
              continue;
            case 57:
              goto label_20;
            default:
              goto label_12;
          }
        }
      }
label_20:
      this.RoundTimeTextField.Text = Conversions.ToString(\uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uEB7F\uF247\uE858\uF5C7\uEC2A\uECFA\uEDD9\uE261\uF6B8\uF56C\uEBA5\uF446.\uF624\uE9D8\uE38C\uE35C\uF774\uF4C4\uE2A2\uE080\uECB1\uE3C8\uF42B\uEBE1.GetRoundTime);
    }

    private void \uF8A6\uE43B\uE886\uEA10\uE972\uF06E\uF641\uE138\uF818\uF606\uE14A\uF0DD(
      object _param1,
      EventArgs _param2)
    {
    }

    private void \uF8A6\uE43B\uE886\uEA10\uE972\uF06E\uF641\uE138\uF818\uF606\uE14A\uF0DE(
      object _param1,
      EventArgs _param2)
    {
      object[] objArray;
      bool[] flagArray;
      if ((this.PlayerNameField.Text.Length >= 20 ? 1 : 0) == 0)
      {
        TextBox playerNameField;
        NewLateBinding.LateCall(this.player, (System.Type) null, "SetPlayerName", objArray = new object[1]
        {
          (object) (playerNameField = this.PlayerNameField).Text
        }, (string[]) null, (System.Type[]) null, flagArray = new bool[1]
        {
          true
        }, true);
        if ((!flagArray[0] ? 0 : 1) != 0)
          playerNameField.Text = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray[0]), typeof (string));
      }
      else
      {
        int num1 = (int) Interaction.MsgBox((object) "Name Not Saved, please make name less than 20 characteres", MsgBoxStyle.Critical, (object) "Error - Name Not Saved");
      }
      if ((NewLateBinding.LateGet(this.player, (System.Type) null, "GetPlayername", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null).Equals((object) this.PlayerNameField.Text) ? 1 : 0) == 0)
        \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uEB7F\uF247\uE858\uF5C7\uEC2A\uECFA\uEDD9\uE261\uF6B8\uF56C\uEBA5\uF446.\uF624\uE9D8\uE38C\uE35C\uF774\uF4C4\uE2A2\uE080\uECB1\uE3C8\uF42B\uEBE1.NameChanged();
label_7:
      int num2 = 3;
      TrackBar fontSizeValue;
      while (true)
      {
        switch (num2 ^ 53)
        {
          case 50:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (SettingsForm.get_AddRolesLabel);
            num2 = 7;
            continue;
          case 51:
            if (flagArray[0])
            {
              num2 = 2;
              continue;
            }
            goto label_15;
          case 52:
            NewLateBinding.LateCall(this.player, (System.Type) null, "SetFontSize", objArray = new object[1]
            {
              (object) (fontSizeValue = this.FontSizeValue).Value
            }, (string[]) null, (System.Type[]) null, flagArray = new bool[1]
            {
              true
            }, true);
            num2 = 6;
            continue;
          case 53:
            num2 = 1;
            continue;
          case 54:
            \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uEB7F\uF247\uE858\uF5C7\uEC2A\uECFA\uEDD9\uE261\uF6B8\uF56C\uEBA5\uF446.\uF624\uE9D8\uE38C\uE35C\uF774\uF4C4\uE2A2\uE080\uECB1\uE3C8\uF42B\uEBE1.NameChanged();
            num2 = 0;
            continue;
          case 55:
            goto label_14;
          default:
            goto label_7;
        }
      }
label_14:
      int num3 = 1;
      goto label_16;
label_15:
      num3 = 0;
label_16:
      if (num3 != 0)
        fontSizeValue.Value = (int) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray[0]), typeof (int));
      \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uEB7F\uF247\uE858\uF5C7\uEC2A\uECFA\uEDD9\uE261\uF6B8\uF56C\uEBA5\uF446.\uF624\uE9D8\uE38C\uE35C\uF774\uF4C4\uE2A2\uE080\uECB1\uE3C8\uF42B\uEBE1.UpdateSettings(this.AudioCheckBox.Checked);
label_20:
      int num4 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7D.\uE123\uEF7F\uEEEB\uE230\uE2DD\uE2EA\uF079\uF000\uF4BC\uF8BE\uF536\uE7F1(48);
      bool flag;
      while (true)
      {
        switch ((num4 ^ 51) + 44)
        {
          case 0:
            \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uEB7F\uF247\uE858\uF5C7\uEC2A\uECFA\uEDD9\uE261\uF6B8\uF56C\uEBA5\uF446.\uF624\uE9D8\uE38C\uE35C\uF774\uF4C4\uE2A2\uE080\uECB1\uE3C8\uF42B\uEBE1.EnableSettingsButton();
            num4 = -26;
            continue;
          case 1:
            num4 = -22;
            continue;
          case 2:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (SettingsForm.\uF8A6\uE43B\uE886\uEA10\uE972\uF06E\uF641\uE138\uF818\uF606\uE14A\uF0DF);
            num4 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(23);
            continue;
          case 3:
            if (flag)
            {
              num4 = -23;
              continue;
            }
            goto label_29;
          case 4:
            num4 = -25;
            continue;
          case 5:
            flag = this.RoundLabel.Text != null & int.TryParse(this.RoundTimeTextField.Text, out this.RoundTime) & this.RoundTime > 0;
            num4 = -28;
            continue;
          case 6:
            goto label_28;
          default:
            goto label_20;
        }
      }
label_28:
      int num5 = 0;
      goto label_30;
label_29:
      num5 = 1;
label_30:
      if (num5 == 0)
      {
        if ((!Conversions.ToBoolean(\uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uEB7F\uF247\uE858\uF5C7\uEC2A\uECFA\uEDD9\uE261\uF6B8\uF56C\uEBA5\uF446.\uF624\uE9D8\uE38C\uE35C\uF774\uF4C4\uE2A2\uE080\uECB1\uE3C8\uF42B\uEBE1.GetIsMaster) ? 1 : 0) == 0)
          \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uEB7F\uF247\uE858\uF5C7\uEC2A\uECFA\uEDD9\uE261\uF6B8\uF56C\uEBA5\uF446.\uF624\uE9D8\uE38C\uE35C\uF774\uF4C4\uE2A2\uE080\uECB1\uE3C8\uF42B\uEBE1.SetRoundTime(this.RoundTimeTextField.Text);
        this.Hide();
      }
      else
      {
        int num6 = (int) Interaction.MsgBox((object) "Please insert a time greater than 0.", MsgBoxStyle.Critical, (object) "Input Error");
      }
    }

    private void \uF8A6\uE43B\uE886\uEA10\uE972\uF06E\uF641\uE138\uF818\uF606\uE14A\uF0DF(
      object _param1,
      EventArgs _param2)
    {
      TrackBar fontSizeValue;
      object[] objArray;
      bool[] flagArray;
      NewLateBinding.LateCall(this.player, (System.Type) null, "SetFontSize", objArray = new object[1]
      {
        (object) (fontSizeValue = this.FontSizeValue).Value
      }, (string[]) null, (System.Type[]) null, flagArray = new bool[1]
      {
        true
      }, true);
      if ((!flagArray[0] ? 0 : 1) != 0)
        fontSizeValue.Value = (int) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray[0]), typeof (int));
      \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uEB7F\uF247\uE858\uF5C7\uEC2A\uECFA\uEDD9\uE261\uF6B8\uF56C\uEBA5\uF446.\uF624\uE9D8\uE38C\uE35C\uF774\uF4C4\uE2A2\uE080\uECB1\uE3C8\uF42B\uEBE1.UpdateSettings(this.AudioCheckBox.Checked);
    }

    private void \uF8A6\uE43B\uE886\uEA10\uE972\uF06E\uF641\uE138\uF818\uF606\uE14A\uF0E0(
      object _param1,
      FormClosingEventArgs _param2)
    {
      \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uEB7F\uF247\uE858\uF5C7\uEC2A\uECFA\uEDD9\uE261\uF6B8\uF56C\uEBA5\uF446.\uF624\uE9D8\uE38C\uE35C\uF774\uF4C4\uE2A2\uE080\uECB1\uE3C8\uF42B\uEBE1.EnableSettingsButton();
    }

    private void \uF8A6\uE43B\uE886\uEA10\uE972\uF06E\uF641\uE138\uF818\uF606\uE14A\uF0E1(
      object _param1,
      EventArgs _param2)
    {
label_4:
      int num1 = 13;
      int num2 = -28;
      while (true)
      {
        switch ((num2 ^ 51) + 44)
        {
          case 0:
            goto label_4;
          case 1:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (SettingsForm.get_PlayerNameField);
            num2 = -26;
            continue;
          case 2:
            switch (num1)
            {
              case 52:
                this.Close();
                num1 = 0;
                goto label_1;
              case 53:
                num1 = 12;
                goto label_1;
              case 54:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (SettingsForm.get_AudioCheckBox);
                num1 = 3;
                goto label_1;
              case 55:
                num1 = 1;
                goto label_1;
              case 56:
                \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uEB7F\uF247\uE858\uF5C7\uEC2A\uECFA\uEDD9\uE261\uF6B8\uF56C\uEBA5\uF446.\uF624\uE9D8\uE38C\uE35C\uF774\uF4C4\uE2A2\uE080\uECB1\uE3C8\uF42B\uEBE1.EnableSettingsButton();
                num1 = 2;
                goto label_1;
              case 57:
                goto label_11;
              default:
                num2 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(17);
                continue;
            }
          case 3:
label_1:
            num1 ^= 53;
            break;
        }
        num2 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(23);
      }
label_11:;
    }

    private void \uF8A6\uE43B\uE886\uEA10\uE972\uF06E\uF641\uE138\uF818\uF606\uE14A\uF0E2(
      object _param1,
      EventArgs _param2)
    {
    }

    private void \uF8A6\uE43B\uE886\uEA10\uE972\uF06E\uF641\uE138\uF818\uF606\uE14A\uF0E3(
      object _param1,
      EventArgs _param2)
    {
      if ((this.RoleCount >= checked (\uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uEB7F\uF247\uE858\uF5C7\uEC2A\uECFA\uEDD9\uE261\uF6B8\uF56C\uEBA5\uF446.\uF624\uE9D8\uE38C\uE35C\uF774\uF4C4\uE2A2\uE080\uECB1\uE3C8\uF42B\uEBE1.GetPlayerList.Count + 3 - 1) ? 1 : 0) == 0)
      {
        if ((this.RoleComboBox.SelectedItem.ToString().Equals("") ? 1 : 0) == 0)
        {
          \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uEB7F\uF247\uE858\uF5C7\uEC2A\uECFA\uEDD9\uE261\uF6B8\uF56C\uEBA5\uF446.\uF624\uE9D8\uE38C\uE35C\uF774\uF4C4\uE2A2\uE080\uECB1\uE3C8\uF42B\uEBE1.UpdateCharacterList(this.RoleComboBox.SelectedItem.ToString());
label_6:
          int num1 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(14);
          int num2 = 7;
          while (true)
          {
            switch (num2 ^ 48)
            {
              case 52:
                goto label_6;
              case 53:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (SettingsForm.get_SaveButton);
                num2 = 5;
                continue;
              case 54:
                switch (num1 + 47)
                {
                  case 0:
                    num1 = -26;
                    goto label_3;
                  case 1:
                    // ISSUE: method reference
                    RuntimeMethodHandle runtimeMethodHandle2 = __methodref (SettingsForm.set_RolesLeftLabel);
                    num1 = -25;
                    goto label_3;
                  case 2:
                    checked { ++this.RoleCount; }
                    num1 = -31;
                    goto label_3;
                  case 3:
                    this.RolesLeftLabel.Text = "Roles Left: " + checked (\uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uEB7F\uF247\uE858\uF5C7\uEC2A\uECFA\uEDD9\uE261\uF6B8\uF56C\uEBA5\uF446.\uF624\uE9D8\uE38C\uE35C\uF774\uF4C4\uE2A2\uE080\uECB1\uE3C8\uF42B\uEBE1.GetPlayerList.Count + 3 - 1 - this.RoleCount).ToString();
                    num1 = -29;
                    goto label_3;
                  case 4:
                    num1 = -30;
                    goto label_3;
                  case 5:
                    num1 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7D.\uE123\uEF7F\uEEEB\uE230\uE2DD\uE2EA\uF079\uF000\uF4BC\uF8BE\uF536\uE7F1(45);
                    goto label_3;
                  case 6:
                    goto label_16;
                  default:
                    num2 = 4;
                    continue;
                }
              case 55:
label_3:
                num1 ^= 53;
                break;
            }
            num2 = 6;
          }
label_16:;
        }
        else
        {
          int num3 = (int) Interaction.MsgBox((object) "Please pick a role from the list to add.", MsgBoxStyle.Critical, (object) "Error - Role Not Selected");
        }
      }
      else
      {
        int num4 = (int) Interaction.MsgBox((object) "Can't add any more, not enough player to add roles.", MsgBoxStyle.Critical, (object) "Error - Not Enough Players");
      }
    }

    private void \uF8A6\uE43B\uE886\uEA10\uE972\uF06E\uF641\uE138\uF818\uF606\uE14A\uF0E4(
      object _param1,
      EventArgs _param2)
    {
    }
  }
}
