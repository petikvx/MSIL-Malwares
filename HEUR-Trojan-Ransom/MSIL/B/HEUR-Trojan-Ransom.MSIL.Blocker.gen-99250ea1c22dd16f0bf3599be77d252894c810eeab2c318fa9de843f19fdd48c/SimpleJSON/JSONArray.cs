// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONArray
// Assembly: IClientChannelSinkSta, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: C2D4B9C8-45F5-4E7C-86BD-063D9CE5A365
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-99250ea1c22dd16f0bf3599be77d252894c810eeab2c318fa9de843f19fdd48c.exe

using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONArray : JSONNode, IEnumerable
  {
    private List<JSONNode> m_List = new List<JSONNode>();

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = -1793446913;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ -1681454660)) % 8U)
          {
            case 0:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * 408858478 ^ 336636136;
              continue;
            case 2:
              int num4 = !flag ? -186508667 : (num4 = -220098654);
              num1 = num4 ^ (int) num2 * -520373709;
              continue;
            case 3:
              if (aIndex < 0)
              {
                num3 = 1;
                break;
              }
              num1 = (int) num2 * 710373107 ^ 2030399555;
              continue;
            case 4:
              num1 = (int) num2 * -65237675 ^ -373753751;
              continue;
            case 5:
              goto label_1;
            case 6:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            case 7:
              jsonNode = this.m_List[aIndex];
              num1 = -378860915;
              continue;
            default:
              goto label_12;
          }
          flag = num3 != 0;
          num1 = -1974974506;
        }
label_12:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 470967098;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ 127105756)) % 10U)
          {
            case 0:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            case 1:
              num1 = (int) num2 * -1678928277 ^ -679901094;
              continue;
            case 2:
              goto label_3;
            case 3:
              int num4 = !flag ? -672529286 : (num4 = -1393773620);
              num1 = num4 ^ (int) num2 * -1771176960;
              continue;
            case 4:
              this.m_List.Add(value);
              num1 = (int) num2 * -1103968980 ^ 786908929;
              continue;
            case 5:
              num1 = (int) num2 * 1591102444 ^ 306475784;
              continue;
            case 6:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * 1883751372 ^ 210378626;
                continue;
              }
              num3 = 1;
              break;
            case 7:
              goto label_1;
            case 8:
              this.m_List[aIndex] = value;
              num1 = 1773300651;
              continue;
            case 9:
              num1 = (int) num2 * 563961300 ^ 2109468296;
              continue;
            default:
              goto label_15;
          }
          flag = num3 != 0;
          num1 = 477046043;
        }
label_3:
        return;
label_15:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 2144853877;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 596814428)) % 3U)
          {
            case 1:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * -1272178398 ^ 511172086;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set => this.m_List.Add(value);
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = -581595889;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1037108618)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              count = this.m_List.Count;
              num1 = (int) num2 * -1484142654 ^ 208243000;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = -1098360740;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2082782935)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            this.m_List.Add(aItem);
            num1 = (int) num2 * 878103055 ^ -213855843;
            continue;
          case 2:
            goto label_3;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = -1160842826;
      JSONNode jsonNode1;
      while (true)
      {
        uint num2;
        JSONNode jsonNode2;
        int num3;
        switch ((num2 = (uint) (num1 ^ -490255863)) % 9U)
        {
          case 0:
            num3 = aIndex >= this.m_List.Count ? 1 : 0;
            break;
          case 1:
            if (aIndex >= 0)
            {
              num1 = (int) num2 * -1743656265 ^ 831273131;
              continue;
            }
            num3 = 1;
            break;
          case 3:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num2 * 1154189050 ^ -974679883;
            continue;
          case 4:
            num1 = (int) num2 * -316095524 ^ 355044167;
            continue;
          case 5:
            jsonNode1 = jsonNode2;
            num1 = (int) num2 * 1124269616 ^ 1060298303;
            continue;
          case 6:
            jsonNode2 = this.m_List[aIndex];
            num1 = -2115863886;
            continue;
          case 7:
            goto label_1;
          case 8:
            this.m_List.RemoveAt(aIndex);
            num1 = (int) num2 * 1797676115 ^ 601869895;
            continue;
          default:
            goto label_13;
        }
        int num4;
        num1 = num4 = num3 == 0 ? -841461661 : (num4 = -1337241352);
      }
label_13:
      return jsonNode1;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      this.m_List.Remove(aNode);
label_1:
      int num1 = 1598305449;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1444893776)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -670802424 ^ 706254902;
            continue;
          case 1:
            jsonNode = aNode;
            num1 = (int) num2 * -1321603055 ^ 175625485;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs => (IEnumerable<JSONNode>) new JSONArray.\u003Cget_Childs\u003Ed__13(-2)
    {
      \u003C\u003E4__this = this
    };

    public IEnumerator GetEnumerator()
    {
      // ISSUE: fault handler
      try
      {
        // ISSUE: reference to a compiler-generated field
        int num1 = this.\u003C\u003E1__state;
        if (num1 == 0)
          goto label_15;
label_1:
        int num2 = -54278495;
label_2:
        List<JSONNode>.Enumerator enumerator;
        JSONNode N;
        while (true)
        {
          uint num3;
          switch ((num3 = (uint) (num2 ^ -1638869669)) % 21U)
          {
            case 0:
              int num4;
              num2 = num4 = num1 == 1 ? -113630997 : (num4 = -148410618);
              continue;
            case 1:
            case 14:
              goto label_15;
            case 2:
              N = enumerator.Current;
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E2__current = (object) N;
              num2 = -1754631065;
              continue;
            case 3:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = 1;
              num2 = (int) num3 * 287917783 ^ 225985052;
              continue;
            case 4:
              num2 = (int) num3 * -938783781 ^ 1678526077;
              continue;
            case 5:
              enumerator = this.m_List.GetEnumerator();
              num2 = (int) num3 * -665227048 ^ -2004777963;
              continue;
            case 6:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = (int) num3 * -953036179 ^ -655390860;
              continue;
            case 7:
              enumerator = new List<JSONNode>.Enumerator();
              num2 = (int) num3 * -1806375491 ^ -1743137677;
              continue;
            case 8:
              N = (JSONNode) null;
              num2 = (int) num3 * -875801673 ^ 160183919;
              continue;
            case 9:
              num2 = (int) num3 * -471439134 ^ -504442215;
              continue;
            case 10:
              goto label_1;
            case 11:
              num2 = (int) num3 * -1377285376 ^ 163015209;
              continue;
            case 13:
              // ISSUE: reference to a compiler-generated method
              this.\u003C\u003Em__Finally1();
              num2 = (int) num3 * -1903250822 ^ 1158924212;
              continue;
            case 15:
            case 17:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = -1575767449;
              continue;
            case 16:
              goto label_10;
            case 18:
              goto label_18;
            case 19:
              num2 = (int) num3 * -1695862271 ^ 1125247772;
              continue;
            case 20:
              int num5;
              num2 = num5 = enumerator.MoveNext() ? -677039427 : (num5 = -1554551);
              continue;
            default:
              goto label_20;
          }
        }
label_10:
        return false;
label_18:
        return true;
label_20:
        return false;
label_15:
        // ISSUE: reference to a compiler-generated field
        this.\u003C\u003E1__state = -1;
        num2 = -459747412;
        goto label_2;
      }
      __fault
      {
        // ISSUE: reference to a compiler-generated method
        this.System\u002EIDisposable\u002EDispose();
      }
    }

    public override string ToString()
    {
      string str1 = "[ ";
      List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator();
      try
      {
label_5:
        int num1 = enumerator.MoveNext() ? -802909956 : (num1 = -1904772189);
        JSONNode current;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1332317990)) % 9U)
          {
            case 0:
              goto label_5;
            case 1:
              str1 = JSONArray.\u202D⁭⁪‮‪‬‏‮​⁭‪‏‭⁬‮‏​⁪‭​⁫‮⁯⁮​⁮⁬‌⁭⁬‮‍⁫‬‌‮‮​⁭‭‮(str1, ", ");
              num1 = (int) num2 * 1627717718 ^ -1570883809;
              continue;
            case 3:
              int num3 = flag ? 723580178 : (num3 = 600024597);
              num1 = num3 ^ (int) num2 * -1120909633;
              continue;
            case 4:
              str1 = JSONArray.\u202D⁭⁪‮‪‬‏‮​⁭‪‏‭⁬‮‏​⁪‭​⁫‮⁯⁮​⁮⁬‌⁭⁬‮‍⁫‬‌‮‮​⁭‭‮(str1, JSONArray.\u202D⁯​⁫⁯‍‏​‌‮‮‬‍⁮⁪⁭‫‪⁮⁭⁭⁯‮‍‍​⁭⁫​⁭⁮⁪⁫⁪‫‭‮​⁭⁮‮((object) current));
              num1 = -1740259080;
              continue;
            case 5:
              num1 = (int) num2 * -552474677 ^ 1758142338;
              continue;
            case 6:
              flag = JSONArray.\u202B‬‬​​‮‌‭⁫⁪⁪‬‫‬⁫⁫‏⁪⁮‮‪⁯⁪‏⁫⁮‪⁭‎‌‪‭⁯⁮‎⁬⁬⁫⁬‭‮(str1) > 2;
              num1 = (int) num2 * 910696098 ^ -507951260;
              continue;
            case 7:
              num1 = -802909956;
              continue;
            case 8:
              current = enumerator.Current;
              num1 = -79693540;
              continue;
            default:
              goto label_16;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_12:
        int num4 = -699498785;
        while (true)
        {
          uint num5;
          switch ((num5 = (uint) (num4 ^ -1332317990)) % 3U)
          {
            case 0:
              goto label_12;
            case 1:
              num4 = (int) num5 * 1429789503 ^ 746281665;
              continue;
            default:
              goto label_15;
          }
        }
label_15:;
      }
label_16:
      string str2 = JSONArray.\u202D⁭⁪‮‪‬‏‮​⁭‪‏‭⁬‮‏​⁪‭​⁫‮⁯⁮​⁮⁬‌⁭⁬‮‍⁫‬‌‮‮​⁭‭‮(str1, " ]");
label_17:
      int num6 = -413434195;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ -1332317990)) % 3U)
        {
          case 0:
            goto label_17;
          case 2:
            num6 = (int) num7 * -1618006392 ^ -895055934;
            continue;
          default:
            goto label_20;
        }
      }
label_20:
      return str2;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = -1712236062;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2044509232)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 929493699 ^ 58902996;
            continue;
          case 2:
            str1 = "[ ";
            num1 = (int) num2 * -1789012765 ^ 1547580559;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_11:
        int num3 = enumerator.MoveNext() ? -718412022 : (num3 = -1714504839);
        bool flag;
        JSONNode current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -2044509232)) % 9U)
          {
            case 0:
              num3 = (int) num4 * -2116179646 ^ 2035344233;
              continue;
            case 1:
              int num5 = !flag ? 1707415912 : (num5 = 469602007);
              num3 = num5 ^ (int) num4 * 752566767;
              continue;
            case 2:
              current = enumerator.Current;
              flag = JSONArray.\u202B‬‬​​‮‌‭⁫⁪⁪‬‫‬⁫⁫‏⁪⁮‮‪⁯⁪‏⁫⁮‪⁭‎‌‪‭⁯⁮‎⁬⁬⁫⁬‭‮(str1) > 3;
              num3 = -54058144;
              continue;
            case 3:
              num3 = -718412022;
              continue;
            case 4:
              str1 = JSONArray.\u202D⁭⁪‮‪‬‏‮​⁭‪‏‭⁬‮‏​⁪‭​⁫‮⁯⁮​⁮⁬‌⁭⁬‮‍⁫‬‌‮‮​⁭‭‮(str1, current.ToString(JSONArray.\u202D⁭⁪‮‪‬‏‮​⁭‪‏‭⁬‮‏​⁪‭​⁫‮⁯⁮​⁮⁬‌⁭⁬‮‍⁫‬‌‮‮​⁭‭‮(aPrefix, "   ")));
              num3 = (int) num4 * 302834783 ^ -1187461304;
              continue;
            case 5:
              str1 = JSONArray.\u202D⁭⁪‮‪‬‏‮​⁭‪‏‭⁬‮‏​⁪‭​⁫‮⁯⁮​⁮⁬‌⁭⁬‮‍⁫‬‌‮‮​⁭‭‮(str1, ", ");
              num3 = (int) num4 * -950656273 ^ 1750530817;
              continue;
            case 6:
              str1 = JSONArray.\u200B⁫‌‭⁪‭⁬‫⁯⁪​‏‬⁬‭⁫‍​‬​‎⁪⁫‮‍‏⁭⁭‭⁫‎⁫⁬⁯⁭‪⁪​‏‌‮(str1, "\n", aPrefix, "   ");
              num3 = -352955968;
              continue;
            case 8:
              goto label_11;
            default:
              goto label_17;
          }
        }
      }
label_17:
      string str2 = JSONArray.\u200B⁫‌‭⁪‭⁬‫⁯⁪​‏‬⁬‭⁫‍​‬​‎⁪⁫‮‍‏⁭⁭‭⁫‎⁫⁬⁯⁭‪⁪​‏‌‮(str1, "\n", aPrefix, "]");
label_18:
      int num6 = -1162539298;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ -2044509232)) % 3U)
        {
          case 0:
            goto label_18;
          case 1:
            num6 = (int) num7 * -63658304 ^ -1576921565;
            continue;
          default:
            goto label_21;
        }
      }
label_21:
      return str2;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = 1000325929;
      int index;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1056125462)) % 11U)
        {
          case 0:
            this.m_List[index].Serialize(aWriter);
            num1 = 947499111;
            continue;
          case 1:
            JSONArray.\u202B‎‪‭​‌‬‪⁪‍‎⁪‫‬⁭​‍‪⁯⁫‮‎‎‎‭⁪‌‌⁪‎‮⁪‌‭‬⁬⁭‭⁬‏‮(aWriter, (byte) 1);
            num1 = (int) num2 * -1499746906 ^ 1179497888;
            continue;
          case 2:
            JSONArray.\u200F⁬‮‎‫⁬⁪‫‮‫​‫‮⁭‍​⁫⁪⁮⁬⁭​⁬‪⁮‬‍‎‪‭‬‌⁫⁬⁭⁪‎‎⁯⁫‮(aWriter, this.m_List.Count);
            num1 = (int) num2 * 582920361 ^ -471002601;
            continue;
          case 3:
            num1 = (int) num2 * -767476248 ^ 1265905245;
            continue;
          case 4:
            num1 = (int) num2 * -1932817681 ^ 959949930;
            continue;
          case 5:
            ++index;
            num1 = (int) num2 * 790163263 ^ -263214720;
            continue;
          case 6:
            goto label_3;
          case 7:
            int num3;
            num1 = num3 = index < this.m_List.Count ? 155471970 : (num3 = 1238176314);
            continue;
          case 8:
            goto label_1;
          case 9:
            num1 = (int) num2 * 82235711 ^ -238908232;
            continue;
          case 10:
            index = 0;
            num1 = (int) num2 * 1938201965 ^ -819252123;
            continue;
          default:
            goto label_13;
        }
      }
label_3:
      return;
label_13:;
    }

    public JSONArray()
    {
label_1:
      int num1 = -76695059;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -283118366)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * -1245050644 ^ 1611974891;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static int \u202B‬‬​​‮‌‭⁫⁪⁪‬‫‬⁫⁫‏⁪⁮‮‪⁯⁪‏⁫⁮‪⁭‎‌‪‭⁯⁮‎⁬⁬⁫⁬‭‮([In] string obj0) => obj0.Length;

    static string \u202D⁭⁪‮‪‬‏‮​⁭‪‏‭⁬‮‏​⁪‭​⁫‮⁯⁮​⁮⁬‌⁭⁬‮‍⁫‬‌‮‮​⁭‭‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u202D⁯​⁫⁯‍‏​‌‮‮‬‍⁮⁪⁭‫‪⁮⁭⁭⁯‮‍‍​⁭⁫​⁭⁮⁪⁫⁪‫‭‮​⁭⁮‮([In] object obj0) => obj0.ToString();

    static string \u200B⁫‌‭⁪‭⁬‫⁯⁪​‏‬⁬‭⁫‍​‬​‎⁪⁫‮‍‏⁭⁭‭⁫‎⁫⁬⁯⁭‪⁪​‏‌‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u202B‎‪‭​‌‬‪⁪‍‎⁪‫‬⁭​‍‪⁯⁫‮‎‎‎‭⁪‌‌⁪‎‮⁪‌‭‬⁬⁭‭⁬‏‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u200F⁬‮‎‫⁬⁪‫‮‫​‫‮⁭‍​⁫⁪⁮⁬⁭​⁬‪⁮‬‍‎‪‭‬‌⁫⁬⁭⁪‎‎⁯⁫‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);
  }
}
