// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONLazyCreator
// Assembly: DESCUNI, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: AF116ADB-6018-4560-80A5-0C66813DC3F1
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-4f6383c6ae7c88ff6ab189dc208b3f159d87b824011a697f438a218fc07fa3bb.exe

namespace SimpleJSON
{
  internal class JSONLazyCreator : JSONNode
  {
    private JSONNode m_Node = (JSONNode) null;
    private string m_Key = (string) null;

    public JSONLazyCreator(JSONNode aNode)
    {
label_1:
      int num1 = -403171086;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1994410900)) % 5U)
        {
          case 0:
            this.m_Node = aNode;
            num1 = (int) num2 * 2114469148 ^ -175165067;
            continue;
          case 1:
            num1 = (int) num2 * 1152121747 ^ -1042155991;
            continue;
          case 3:
            num1 = (int) num2 * 377120641 ^ -1010214242;
            continue;
          case 4:
            goto label_1;
          default:
            goto label_6;
        }
      }
label_6:
      this.m_Key = (string) null;
    }

    public JSONLazyCreator(JSONNode aNode, string aKey)
    {
      this.m_Node = aNode;
      this.m_Key = aKey;
    }

    private void Set(JSONNode aVal)
    {
label_1:
      int num1 = -1506866504;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1270481452)) % 9U)
        {
          case 0:
            num1 = (int) num2 * -434537644 ^ 188644292;
            continue;
          case 1:
            this.m_Node.Add(aVal);
            num1 = (int) num2 * 1983830333 ^ -1100729125;
            continue;
          case 2:
            int num3 = this.m_Key == null ? 1359571612 : (num3 = 692855881);
            num1 = num3 ^ (int) num2 * 1636002262;
            continue;
          case 3:
            goto label_1;
          case 4:
            num1 = -282468236;
            continue;
          case 5:
            num1 = (int) num2 * 458315969 ^ 416988901;
            continue;
          case 6:
            num1 = (int) num2 * 2144147200 ^ -753955815;
            continue;
          case 7:
            this.m_Node.Add(this.m_Key, aVal);
            num1 = (int) num2 * -1995895510 ^ -1554311826;
            continue;
          default:
            goto label_10;
        }
      }
label_10:
      this.m_Node = (JSONNode) null;
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = -1381909325;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1783020697)) % 3U)
          {
            case 1:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * 23983135 ^ -289136259;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 1607583124;
        JSONArray aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1764815900)) % 6U)
          {
            case 0:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 701685883 ^ -597982275;
              continue;
            case 1:
              aVal.Add(value);
              num1 = (int) num2 * -1630541319 ^ 611569562;
              continue;
            case 2:
              aVal = new JSONArray();
              num1 = (int) num2 * 458548675 ^ -2113541879;
              continue;
            case 3:
              num1 = (int) num2 * 1097105983 ^ -619403783;
              continue;
            case 4:
              goto label_1;
            case 5:
              goto label_3;
            default:
              goto label_8;
          }
        }
label_3:
        return;
label_8:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 1651053222;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 800614664)) % 3U)
          {
            case 1:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = (int) num2 * -2048685015 ^ 71793118;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
        JSONClass aVal = new JSONClass();
        aVal.Add(aKey, value);
        this.Set((JSONNode) aVal);
label_1:
        int num1 = 135529504;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1602311050)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -268047759 ^ 1915893622;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override void Add(JSONNode aItem)
    {
      JSONArray aVal = new JSONArray();
      aVal.Add(aItem);
label_1:
      int num1 = 1855513261;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1968755165)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * 2110225402 ^ 1587705353;
            continue;
          case 2:
            goto label_3;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = -1415529982;
      JSONClass aVal;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1749611240)) % 4U)
        {
          case 1:
            num1 = (int) num2 * -1846961100 ^ -1712482268;
            continue;
          case 2:
            aVal = new JSONClass();
            aVal.Add(aKey, aItem);
            num1 = (int) num2 * 420467242 ^ 1938096113;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      this.Set((JSONNode) aVal);
    }

    public static bool operator ==(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = -762955075;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1323800968)) % 6U)
        {
          case 1:
            int num3 = flag2 ? -934208925 : (num3 = -1087164412);
            num1 = num3 ^ (int) num2 * -1435485783;
            continue;
          case 2:
            flag1 = true;
            num1 = (int) num2 * -1267616321 ^ -205687592;
            continue;
          case 3:
            flag2 = b == null;
            num1 = (int) num2 * -610570036 ^ -725546443;
            continue;
          case 4:
            goto label_1;
          case 5:
            flag1 = (object) a == b;
            num1 = -2142519962;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      return flag1;
    }

    public static bool operator !=(JSONLazyCreator a, object b)
    {
      bool flag = !(a == b);
label_1:
      int num1 = -405057957;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -673054382)) % 3U)
        {
          case 1:
            num1 = (int) num2 * -1730948954 ^ -1083052483;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override bool Equals(object obj)
    {
      if (obj != null)
        goto label_3;
label_1:
      int num1 = -967697678;
label_2:
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2077945858)) % 6U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * 1675888588 ^ 1598516158;
            continue;
          case 2:
            flag = true;
            num1 = (int) num2 * -243525393 ^ 799037763;
            continue;
          case 3:
            goto label_1;
          case 5:
            num1 = (int) num2 * 1608503810 ^ -44842848;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      return flag;
label_3:
      flag = (object) this == obj;
      num1 = -361763481;
      goto label_2;
    }

    public override int GetHashCode()
    {
label_1:
      int num1 = 690095737;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1152145786)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -1569602269 ^ 573161683;
            continue;
          case 2:
            goto label_1;
          case 3:
            hashCode = base.GetHashCode();
            num1 = (int) num2 * 1591064034 ^ -1562155212;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return hashCode;
    }

    public override string ToString()
    {
label_1:
      int num1 = -228002709;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1969388174)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            str = "";
            num1 = (int) num2 * -265989532 ^ 284112785;
            continue;
          case 3:
            num1 = (int) num2 * -751937676 ^ -659145448;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public override string ToString(string aPrefix)
    {
      string str = "";
label_1:
      int num1 = -1742376971;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1014307913)) % 3U)
        {
          case 1:
            num1 = (int) num2 * -1702412914 ^ -650777;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override int AsInt
    {
      get
      {
label_1:
        int num1 = -1040961571;
        int asInt;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -44825964)) % 6U)
          {
            case 0:
              num1 = (int) num2 * 555465225 ^ 262524811;
              continue;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1174678346 ^ 1144935958;
              continue;
            case 2:
              asInt = 0;
              num1 = (int) num2 * 881685153 ^ -464510758;
              continue;
            case 4:
              goto label_1;
            case 5:
              aVal = new JSONData(0);
              num1 = (int) num2 * 837378258 ^ 349142395;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asInt;
      }
      set
      {
label_1:
        int num1 = -1547813025;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -594504566)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 1696610 ^ 2111176276;
              continue;
            case 1:
              this.Set((JSONNode) new JSONData(value));
              num1 = (int) num2 * 133682732 ^ -389224654;
              continue;
            case 2:
              goto label_3;
            case 3:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override float AsFloat
    {
      get
      {
label_1:
        int num1 = -898701608;
        JSONData aVal;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -366998860)) % 6U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * 1870165294 ^ -13021173;
              continue;
            case 3:
              asFloat = 0.0f;
              num1 = (int) num2 * -1139512958 ^ 927812338;
              continue;
            case 4:
              aVal = new JSONData(0.0f);
              num1 = (int) num2 * -1963197063 ^ -1931732575;
              continue;
            case 5:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 599716226 ^ -1117274409;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asFloat;
      }
      set
      {
        JSONData aVal = new JSONData(value);
label_1:
        int num1 = 1486698156;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 285777265)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 2086643113 ^ -763230057;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override double AsDouble
    {
      get
      {
label_1:
        int num1 = -850987345;
        double asDouble;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1692281910)) % 6U)
          {
            case 1:
              num1 = (int) num2 * 1057070667 ^ 1313452413;
              continue;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -234134542 ^ 48700402;
              continue;
            case 3:
              aVal = new JSONData(0.0);
              num1 = (int) num2 * 125345757 ^ 1830522333;
              continue;
            case 4:
              asDouble = 0.0;
              num1 = (int) num2 * -191491640 ^ 1368822559;
              continue;
            case 5:
              goto label_1;
            default:
              goto label_7;
          }
        }
label_7:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = 1321018401;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 677254696)) % 5U)
          {
            case 0:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 2091412230 ^ 1757663349;
              continue;
            case 1:
              goto label_3;
            case 2:
              goto label_1;
            case 3:
              aVal = new JSONData(value);
              num1 = (int) num2 * -1076903779 ^ -418201672;
              continue;
            case 4:
              num1 = (int) num2 * 2045898670 ^ 1225929361;
              continue;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
    }

    public override bool AsBool
    {
      get
      {
label_1:
        int num1 = 879179389;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 893187643)) % 5U)
          {
            case 0:
              goto label_1;
            case 2:
              asBool = false;
              num1 = (int) num2 * -2010333903 ^ 2104709418;
              continue;
            case 3:
              num1 = (int) num2 * -327447920 ^ -249184360;
              continue;
            case 4:
              this.Set((JSONNode) new JSONData(false));
              num1 = (int) num2 * -1114654118 ^ 2061857638;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asBool;
      }
      set
      {
label_1:
        int num1 = 1897343044;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 743222032)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -1041491842 ^ -1602040533;
              continue;
            case 2:
              goto label_3;
            case 3:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -965513541 ^ 206982883;
              continue;
            case 4:
              aVal = new JSONData(value);
              num1 = (int) num2 * 413507395 ^ -1208721923;
              continue;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
    }

    public override JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = -136883653;
        JSONArray aVal;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2016503702)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 1512672735 ^ -2037857110;
              continue;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 698075023 ^ 1303240289;
              continue;
            case 3:
              aVal = new JSONArray();
              num1 = (int) num2 * -844667120 ^ -611329608;
              continue;
            case 5:
              asArray = aVal;
              num1 = (int) num2 * -1190917637 ^ 1166991873;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asArray;
      }
    }

    public override JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = 710853334;
        JSONClass aVal;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 825349075)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              aVal = new JSONClass();
              num1 = (int) num2 * -357984538 ^ -2143516056;
              continue;
            case 2:
              num1 = (int) num2 * 1459789572 ^ 123332841;
              continue;
            case 4:
              asObject = aVal;
              num1 = (int) num2 * -455675298 ^ 2057610838;
              continue;
            case 5:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1838174859 ^ 1519334168;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asObject;
      }
    }
  }
}
