// Decompiled with JetBrains decompiler
// Type: 
// Assembly: AudioHD, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: C44212F0-6FD7-4886-BEB4-F43F84F3B277
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Backdoor.Win32.DarkKomet.hzfh-26a1c6d83f8e03a282b89acec8aef19eabb2f72745381a243a94811e2d7d3cb6.exe

using System;
using System.Runtime.InteropServices;

internal static class \u000F
{
  [DllImport("user32.dll", SetLastError = true)]
  public static extern IntPtr FindWindowEx(
    IntPtr _param0,
    IntPtr _param1,
    string _param2,
    string _param3);

  [DllImport("user32.dll")]
  public static extern IntPtr GetDlgItem(IntPtr _param0, int _param1);

  [DllImport("user32.dll")]
  public static extern bool EnableWindow(IntPtr _param0, bool _param1);

  [DllImport("user32.dll")]
  public static extern IntPtr GetMenu(IntPtr _param0);

  [DllImport("user32.dll", CharSet = CharSet.Ansi, SetLastError = true)]
  public static extern IntPtr GetSubMenu(IntPtr _param0, int _param1);

  [DllImport("user32.dll")]
  public static extern uint GetMenuItemID(IntPtr _param0, int _param1);

  [DllImport("user32.dll")]
  public static extern bool EnableMenuItem(IntPtr _param0, uint _param1, uint _param2);

  [DllImport("user32.dll")]
  public static extern bool RemoveMenu(IntPtr _param0, uint _param1, uint _param2);

  [DllImport("user32.dll", CharSet = CharSet.Auto)]
  public static extern IntPtr SendMessage(
    IntPtr _param0,
    uint _param1,
    IntPtr _param2,
    IntPtr _param3);

  [DllImport("user32.dll", CharSet = CharSet.Auto)]
  public static extern IntPtr SendMessage(
    IntPtr _param0,
    uint _param1,
    IntPtr _param2,
    string _param3);

  [DllImport("user32.dll", CharSet = CharSet.Auto)]
  public static extern IntPtr SendMessage(
    IntPtr _param0,
    [MarshalAs(UnmanagedType.U4)] int _param1,
    IntPtr _param2,
    ref \u000F.\u0003 _param3);

  [DllImport("user32.dll")]
  public static extern int SendMessage(IntPtr _param0, int _param1, uint _param2, IntPtr _param3);

  [DllImport("user32.dll")]
  public static extern bool LockWindowUpdate(IntPtr _param0);

  [DllImport("user32.dll")]
  public static extern bool ShowWindowAsync(IntPtr _param0, int _param1);

  [DllImport("user32.dll")]
  [return: MarshalAs(UnmanagedType.Bool)]
  public static extern bool GetWindowPlacement(IntPtr _param0, ref \u000F.\u0006 _param1);

  [DllImport("kernel32.dll")]
  public static extern IntPtr OpenProcess(uint _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, int _param2);

  [DllImport("kernel32.dll")]
  public static extern bool CloseHandle(IntPtr _param0);

  [DllImport("kernel32.dll", SetLastError = true)]
  public static extern IntPtr VirtualAllocEx(
    IntPtr _param0,
    IntPtr _param1,
    uint _param2,
    uint _param3,
    uint _param4);

  [DllImport("kernel32.dll", SetLastError = true)]
  public static extern bool VirtualFreeEx(
    IntPtr _param0,
    IntPtr _param1,
    int _param2,
    uint _param3);

  [DllImport("kernel32.dll")]
  public static extern bool ReadProcessMemory(
    IntPtr _param0,
    IntPtr _param1,
    byte[] _param2,
    int _param3,
    out int _param4);

  [DllImport("kernel32.dll")]
  public static extern bool ReadProcessMemory(
    IntPtr _param0,
    IntPtr _param1,
    IntPtr _param2,
    int _param3,
    int _param4);

  [DllImport("kernel32.dll")]
  public static extern bool WriteProcessMemory(
    IntPtr _param0,
    IntPtr _param1,
    ref \u000F.\u0003 _param2,
    int _param3,
    IntPtr _param4);

  [DllImport("kernel32.dll", SetLastError = true)]
  public static extern bool WriteProcessMemory(
    IntPtr _param0,
    IntPtr _param1,
    byte[] _param2,
    uint _param3,
    out int _param4);

  [DllImport("kernel32.dll")]
  public static extern bool WriteProcessMemory(
    IntPtr _param0,
    IntPtr _param1,
    ref \u000F.\u0002 _param2,
    int _param3,
    int _param4);

  [DllImport("kernel32.dll")]
  public static extern bool ReadProcessMemory(
    IntPtr _param0,
    IntPtr _param1,
    IntPtr _param2,
    int _param3,
    IntPtr _param4);

  [DllImport("user32.dll", SetLastError = true)]
  public static extern uint GetWindowThreadProcessId(IntPtr _param0, out uint _param1);

  [DllImport("user32.dll")]
  public static extern IntPtr GetWindowThreadProcessId(IntPtr _param0, out int _param1);

  public struct \u0002
  {
    public uint \u0002;
    public int \u0003;
    public int \u0005;
    public uint \u0008;
    public uint \u0006;
    public IntPtr \u000E;
    public int \u000F;
    public int \u0002\u2000;
  }

  public struct \u0003
  {
    public int \u0002;
    public IntPtr \u0003;
    public int \u0005;
    public int \u0008;
    public IntPtr \u0006;
    public int \u000E;
    public int \u000F;
    public int \u0002\u2000;
    public int \u0003\u2000;
    public IntPtr \u0005\u2000;
    public int \u0008\u2000;
  }

  public struct \u0005
  {
    private int \u0002;
    private int \u0003;
    private int \u0005;
    private int \u0008;
  }

  public struct \u0006
  {
    public int \u0002;
    public int \u0003;
    public int \u0005;
    public \u000F.\u0008 \u0008;
    public \u000F.\u0008 \u0006;
    public \u000F.\u0005 \u000E;
  }

  public struct \u0008
  {
    private int \u0002;
    private int \u0003;
  }
}
