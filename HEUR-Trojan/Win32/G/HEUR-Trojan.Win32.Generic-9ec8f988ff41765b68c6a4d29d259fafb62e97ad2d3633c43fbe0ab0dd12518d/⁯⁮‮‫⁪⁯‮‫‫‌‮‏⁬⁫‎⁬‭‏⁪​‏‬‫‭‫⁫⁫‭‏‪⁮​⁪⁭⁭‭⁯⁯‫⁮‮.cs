// Decompiled with JetBrains decompiler
// Type: ⁯⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using System;
using System.Collections;
using System.IO;
using System.Net.Sockets;

public abstract class \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮
{
  public static readonly byte[] \u202B⁫‌⁮⁫‎‬‮⁭‪⁬⁭‌⁯‏‬‮​‪‎⁫‍⁪‭‫​‌⁫⁫⁯‏⁫⁫⁭‌‫⁫‫‪‎‮ = new byte[0];
  public static readonly short[] \u206D‍‬‍⁫⁬⁮‭⁫​‌‭‮⁮‭⁮⁪⁪⁭⁪‍‪​‬‪‬​‍‎⁭⁬‫⁮‬⁯⁭‪‌‮‍‮ = new short[0];
  public static readonly int[] \u200C‬‫‪‫‌‎‏⁯⁯‭‫‌‍⁮‪⁬‎⁮‌⁪⁫⁪⁯‎‏‪‬‭‍‬‫‏‫⁫‎⁪⁫‍‫‮ = new int[0];
  public static readonly long[] \u202D‎‮‫‮‎‮⁬⁭​‫‬‍‍‏⁫⁯‎‫‎⁭⁪‭​⁪⁪‫‎‏⁪⁬⁯⁮⁬⁭⁪‎‌⁯⁬‮ = new long[0];
  internal static readonly byte[] \u206B⁭‭‏‫‏‫‎⁫‎⁯‏‎‮‪‏‌⁫⁪⁮‏‪‮⁬⁯‭‏⁭‭‏⁯‎⁯⁫‮⁪⁫‬⁯⁯‮ = new byte[4]
  {
    (byte) 67,
    (byte) 76,
    (byte) 78,
    (byte) 84
  };
  internal static readonly byte[] \u200E‭⁭‫⁪⁪​‪⁪⁪‏​⁭⁫​‏⁭⁫‌⁪‌‎⁫⁪‫‭‌‫‮⁯‎‎‬⁪⁫‏​⁬‫⁭‮ = new byte[4]
  {
    (byte) 83,
    (byte) 82,
    (byte) 86,
    (byte) 82
  };
  internal static readonly byte[][] \u206A⁫‍​⁭‪‫‍⁮⁭⁫‍‎‬‏‎⁮‏⁪⁬‭‮‏‬‭⁬‬⁭‎⁬⁮⁯‌‪⁫‏‎‭⁮‍‮ = \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202B‪‬⁫‏‮‫⁯‭⁮‍‭⁯‍‫‎⁫​‮‎‬‮‫⁬⁬‫‮‍​‮⁫⁭⁯⁬⁮‬⁬‮‮‍‮();

  public static void \u202B⁬⁭⁯⁪‍‫‪⁪⁯⁭‎⁮‪​‭‪​‍‬⁯​⁮‪‌⁮⁫‫‭⁬‭⁪‍⁪⁬⁬⁭‮⁮‪‮(int _param0)
  {
    if (!\u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u200B​​‌‏⁪​‭⁪‬‫‭‬⁪⁬⁯‭‍‎‭‮⁫⁪‫⁬‌⁮‪‮​⁭​‎‮‮‮‬‬‍‪‮(_param0))
      throw new \u206B‌⁭⁭⁭⁯​⁪‭‍⁮‭⁪‍‏‌⁬‫⁯‫‫‬‎⁭⁫‎⁪‌‏⁫⁮‪‬‮‬‏‎‏⁮‪‮((byte) 80);
  }

  public static void \u202B⁬⁭⁯⁪‍‫‪⁪⁯⁭‎⁮‪​‭‪​‍‬⁯​⁮‪‌⁮⁫‫‭⁬‭⁪‍⁪⁬⁬⁭‮⁮‪‮(long _param0)
  {
    if (!\u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u200B​​‌‏⁪​‭⁪‬‫‭‬⁪⁬⁯‭‍‎‭‮⁫⁪‫⁬‌⁮‪‮​⁭​‎‮‮‮‬‬‍‪‮(_param0))
      throw new \u206B‌⁭⁭⁭⁯​⁪‭‍⁮‭⁪‍‏‌⁬‫⁯‫‫‬‎⁭⁫‎⁪‌‏⁫⁮‪‬‮‬‏‎‏⁮‪‮((byte) 80);
  }

  public static void \u200F⁪‬‏‍⁭‬‫‬⁯‬‎‪⁪‮‫⁬‍‬⁪⁮‍‍‮‎‍⁬‮‪‏‭‬⁫‎‭‬‌‌​‭‮(int _param0)
  {
    if (!\u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202C⁪⁭‏‬‍‭​⁬‫‭⁮‫‪⁭‏‭‌‍⁬‎⁪⁬‍⁬⁪‫‍⁫‫‬‪⁪‌‮⁫‏‍⁭⁬‮(_param0))
      throw new \u206B‌⁭⁭⁭⁯​⁪‭‍⁮‭⁪‍‏‌⁬‫⁯‫‫‬‎⁭⁫‎⁪‌‏⁫⁮‪‬‮‬‏‎‏⁮‪‮((byte) 80);
  }

  public static void \u200F⁪‬‏‍⁭‬‫‬⁯‬‎‪⁪‮‫⁬‍‬⁪⁮‍‍‮‎‍⁬‮‪‏‭‬⁫‎‭‬‌‌​‭‮(long _param0)
  {
    if (!\u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202C⁪⁭‏‬‍‭​⁬‫‭⁮‫‪⁭‏‭‌‍⁬‎⁪⁬‍⁬⁪‫‍⁫‫‬‪⁪‌‮⁫‏‍⁭⁬‮(_param0))
      throw new \u206B‌⁭⁭⁭⁯​⁪‭‍⁮‭⁪‍‏‌⁬‫⁯‫‫‬‎⁭⁫‎⁪‌‏⁫⁮‪‬‮‬‏‎‏⁮‪‮((byte) 80);
  }

  public static void \u200B⁫⁫⁫‍⁬‍⁪‪‌‮‌‮‪‍‫‏‍⁬‏⁮‮‌‍‭‪‮‫⁫‍‎‍‎‮‎‮⁪‏⁬⁭‮(int _param0)
  {
    if (!\u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206B‌‪‪⁫⁭‪‪⁭⁬‭‌⁯⁭⁫‮‏⁭⁭‌​​‫‌⁪‭‭​⁮‫⁬⁮⁫⁯​⁫​⁫‌‍‮(_param0))
      throw new \u206B‌⁭⁭⁭⁯​⁪‭‍⁮‭⁪‍‏‌⁬‫⁯‫‫‬‎⁭⁫‎⁪‌‏⁫⁮‪‬‮‬‏‎‏⁮‪‮((byte) 80);
  }

  public static void \u200B⁫⁫⁫‍⁬‍⁪‪‌‮‌‮‪‍‫‏‍⁬‏⁮‮‌‍‭‪‮‫⁫‍‎‍‎‮‎‮⁪‏⁬⁭‮(long _param0)
  {
    if (!\u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206B‌‪‪⁫⁭‪‪⁭⁬‭‌⁯⁭⁫‮‏⁭⁭‌​​‫‌⁪‭‭​⁮‫⁬⁮⁫⁯​⁫​⁫‌‍‮(_param0))
      throw new \u206B‌⁭⁭⁭⁯​⁪‭‍⁮‭⁪‍‏‌⁬‫⁯‫‫‬‎⁭⁫‎⁪‌‏⁫⁮‪‬‮‬‏‎‏⁮‪‮((byte) 80);
  }

  public static void \u206C‌‌‌​⁫‭⁪⁮‌‪‪⁯‌‎⁬‪⁫⁬‮‭⁭‎⁪⁫⁯‪⁬‍⁮‬⁭⁯⁮‭‍‪⁪‮‬‮(long _param0)
  {
    if (!\u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u200B‪‫⁫‎⁭‌​‮‍‬‫⁭⁯⁬⁪⁮‏‌​‎‫‎‭⁯‭‏⁯⁬‍⁬‌‎‫‌‫‮‫‌⁪‮(_param0))
      throw new \u206B‌⁭⁭⁭⁯​⁪‭‍⁮‭⁪‍‏‌⁬‫⁯‫‫‬‎⁭⁫‎⁪‌‏⁫⁮‪‬‮‬‏‎‏⁮‪‮((byte) 80);
  }

  public static void \u200B‌‭‬‮‪‌​​⁫‏⁪⁯⁯‏‫⁬⁬‏​⁫‎‌‏‏‮‪‭‏‍‏⁬‫‭‍‭​‬‏⁯‮(long _param0)
  {
    if (!\u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206F‌‫‬⁯⁭‍‪‌⁪⁯‪‬‭⁬‭​⁯⁯⁮‏⁪‮⁫⁯⁬⁪⁭‮‍⁬​‌‍‪‍⁯‮‪‎‮(_param0))
      throw new \u206B‌⁭⁭⁭⁯​⁪‭‍⁮‭⁪‍‏‌⁬‫⁯‫‫‬‎⁭⁫‎⁪‌‏⁫⁮‪‬‮‬‏‎‏⁮‪‮((byte) 80);
  }

  public static void \u206F‏‮‪⁭‮‍⁭⁪‫‎‭​⁪‍‎‍‪‎⁮⁮​⁫‎⁭‮‍‭⁪‎‌‍‌‫‬‎⁬‮‌⁪‮(long _param0)
  {
    if (!\u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u200B‪⁬‎‏⁮‌‌‎⁯⁭​‏‪⁭‎‏‬‮⁬⁯‍‪⁮‪⁫​⁫‏‮⁪‎⁫⁭​‏⁭​‮⁯‮(_param0))
      throw new \u206B‌⁭⁭⁭⁯​⁪‭‍⁮‭⁪‍‏‌⁬‫⁯‫‫‬‎⁭⁫‎⁪‌‏⁫⁮‪‬‮‬‏‎‏⁮‪‮((byte) 80);
  }

  public static bool \u200B​​‌‏⁪​‭⁪‬‫‭‬⁪⁬⁯‭‍‎‭‮⁫⁪‫⁬‌⁮‪‮​⁭​‎‮‮‮‬‬‍‪‮(int _param0) => (_param0 & (int) byte.MaxValue) == _param0;

  public static bool \u200B​​‌‏⁪​‭⁪‬‫‭‬⁪⁬⁯‭‍‎‭‮⁫⁪‫⁬‌⁮‪‮​⁭​‎‮‮‮‬‬‍‪‮(long _param0) => (_param0 & (long) byte.MaxValue) == _param0;

  public static bool \u202C⁪⁭‏‬‍‭​⁬‫‭⁮‫‪⁭‏‭‌‍⁬‎⁪⁬‍⁬⁪‫‍⁫‫‬‪⁪‌‮⁫‏‍⁭⁬‮(int _param0) => (_param0 & (int) ushort.MaxValue) == _param0;

  public static bool \u202C⁪⁭‏‬‍‭​⁬‫‭⁮‫‪⁭‏‭‌‍⁬‎⁪⁬‍⁬⁪‫‍⁫‫‬‪⁪‌‮⁫‏‍⁭⁬‮(long _param0) => (_param0 & (long) ushort.MaxValue) == _param0;

  public static bool \u206B‌‪‪⁫⁭‪‪⁭⁬‭‌⁯⁭⁫‮‏⁭⁭‌​​‫‌⁪‭‭​⁮‫⁬⁮⁫⁯​⁫​⁫‌‍‮(int _param0) => (_param0 & 16777215) == _param0;

  public static bool \u206B‌‪‪⁫⁭‪‪⁭⁬‭‌⁯⁭⁫‮‏⁭⁭‌​​‫‌⁪‭‭​⁮‫⁬⁮⁫⁯​⁫​⁫‌‍‮(long _param0) => (_param0 & 16777215L) == _param0;

  public static bool \u200B‪‫⁫‎⁭‌​‮‍‬‫⁭⁯⁬⁪⁮‏‌​‎‫‎‭⁯‭‏⁯⁬‍⁬‌‎‫‌‫‮‫‌⁪‮(long _param0) => (_param0 & (long) uint.MaxValue) == _param0;

  public static bool \u206F‌‫‬⁯⁭‍‪‌⁪⁯‪‬‭⁬‭​⁯⁯⁮‏⁪‮⁫⁯⁬⁪⁭‮‍⁬​‌‍‪‍⁯‮‪‎‮(long _param0) => (_param0 & 281474976710655L) == _param0;

  public static bool \u200B‪⁬‎‏⁮‌‌‎⁯⁭​‏‪⁭‎‏‬‮⁬⁯‍‪⁮‪⁫​⁫‏‮⁪‎⁫⁭​‏⁭​‮⁯‮(long _param0) => true;

  public static bool \u200E⁯‮‍​⁪⁬‫‫‏⁯⁪‍‬⁬⁮‭‬‏‍‍‫⁫⁪⁭⁯‬‭‪⁮⁯‌‮‌‍‎⁫‫‌‭‮(
    \u200B⁮‫‎‪‍⁬‍‎‪‫‎‭⁪⁪⁬‫⁬‍⁭‎‎⁯⁫​⁫‫⁯⁯​⁪⁯‫⁮‏⁯⁪⁮⁬‫‮ _param0)
  {
    return _param0.\u200D⁯⁬​‬⁬⁮⁭⁭‎‏‮‭⁭‏​⁯‪⁭⁮⁭‪⁭⁭⁮​‍‪‬⁪⁭⁪⁫‬‬‏⁫⁪‏⁭‮.\u200E⁯‮‍​⁪⁬‫‫‏⁯⁪‍‬⁬⁮‭‬‏‍‍‫⁫⁪⁭⁯‬‭‪⁮⁯‌‮‌‍‎⁫‫‌‭‮;
  }

  public static bool \u206E‬‎‪​‭⁯⁫‎‮​‍‎⁪‎‏⁯‏⁬‪⁯⁫‎‭‬‍⁮⁭‍‭​‬‬⁬⁭‫⁮⁭‏⁭‮(
    \u206F⁯‮‏‮‫‪‮⁬‬⁪‭‏‪‪‭⁫‌‫⁫‪​‮⁭‮‬⁮⁯‫‌‫‌⁯⁬⁬⁯⁪⁭⁭‪‮ _param0)
  {
    return \u206F⁯‮‏‮‫‪‮⁬‬⁪‭‏‪‪‭⁫‌‫⁫‪​‮⁭‮‬⁮⁯‫‌‫‌⁯⁬⁬⁯⁪⁭⁭‪‮.\u200C​⁯⁫‭⁯⁬⁯​‫‍‬⁮‬‍‎‫‬⁮‬⁭⁬​⁭‌‌⁬⁭⁫⁬‭⁪‬​⁭‫​‌‎‌‮.\u200C‪‮‏​⁪‭‏⁪‫⁯‪‫‭⁫‪⁫⁮‎​⁫⁯‬‮‮⁫‬⁮‍⁯‮‍‭‌⁭⁭‍‌‬⁬‮(_param0.\u206B‍‌⁬‏‎‏‫‭‍​​‭⁬‮⁮‌⁯‌‫‬‬‭‎​‏⁭⁬​⁫‍‌‫⁪‪⁪‪‍‭‪‮());
  }

  public static bool \u206E‬‎‪​‭⁯⁫‎‮​‍‎⁪‎‏⁯‏⁬‪⁯⁫‎‭‬‍⁮⁭‍‭​‬‬⁬⁭‫⁮⁭‏⁭‮(
    \u200B⁮‫‎‪‍⁬‍‎‪‫‎‭⁪⁪⁬‫⁬‍⁭‎‎⁯⁫​⁫‫⁯⁯​⁪⁯‫⁮‏⁯⁪⁮⁬‫‮ _param0)
  {
    return \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206E‬‎‪​‭⁯⁫‎‮​‍‎⁪‎‏⁯‏⁬‪⁯⁫‎‭‬‍⁮⁭‍‭​‬‬⁬⁭‫⁮⁭‏⁭‮(_param0.\u200D⁯⁬​‬⁬⁮⁭⁭‎‏‮‭⁭‏​⁯‪⁭⁮⁭‪⁭⁭⁮​‍‪‬⁪⁭⁪⁫‬‬‏⁫⁪‏⁭‮);
  }

  public static bool \u202C‮​‍‏‍⁭‭‭‎‮‌‮‏⁭⁫⁫⁮⁬⁮‏‌​‍‫⁬⁪⁪⁬‭‍⁪⁬​‪⁭‫⁫​⁫‮(
    \u206F⁯‮‏‮‫‪‮⁬‬⁪‭‏‪‪‭⁫‌‫⁫‪​‮⁭‮‬⁮⁯‫‌‫‌⁯⁬⁬⁯⁪⁭⁭‪‮ _param0)
  {
    return \u206F⁯‮‏‮‫‪‮⁬‬⁪‭‏‪‪‭⁫‌‫⁫‪​‮⁭‮‬⁮⁯‫‌‫‌⁯⁬⁬⁯⁪⁭⁭‪‮.\u202A‌‬‬‮‌⁬‍‎⁭⁬‏⁫‎​‪‮​​‫⁬⁮​⁭‏⁮‮‬⁮‮⁮‬‎‏⁪​⁪‏‎⁭‮.\u200C‪‮‏​⁪‭‏⁪‫⁯‪‫‭⁫‪⁫⁮‎​⁫⁯‬‮‮⁫‬⁮‍⁯‮‍‭‌⁭⁭‍‌‬⁬‮(_param0.\u206B‍‌⁬‏‎‏‫‭‍​​‭⁬‮⁮‌⁯‌‫‬‬‭‎​‏⁭⁬​⁫‍‌‫⁪‪⁪‪‍‭‪‮());
  }

  public static bool \u202C‮​‍‏‍⁭‭‭‎‮‌‮‏⁭⁫⁫⁮⁬⁮‏‌​‍‫⁬⁪⁪⁬‭‍⁪⁬​‪⁭‫⁫​⁫‮(
    \u200B⁮‫‎‪‍⁬‍‎‪‫‎‭⁪⁪⁬‫⁬‍⁭‎‎⁯⁫​⁫‫⁯⁯​⁪⁯‫⁮‏⁯⁪⁮⁬‫‮ _param0)
  {
    return \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202C‮​‍‏‍⁭‭‭‎‮‌‮‏⁭⁫⁫⁮⁬⁮‏‌​‍‫⁬⁪⁪⁬‭‍⁪⁬​‪⁭‫⁫​⁫‮(_param0.\u200D⁯⁬​‬⁬⁮⁭⁭‎‏‮‭⁭‏​⁯‪⁭⁮⁭‪⁭⁭⁮​‍‪‬⁪⁭⁪⁫‬‬‏⁫⁪‏⁭‮);
  }

  public static void \u200C‭‬⁬⁭‮​⁫‏‬⁫‪‪‫‌‎⁫⁯⁯‫​⁫‍‮‪‏‬‎‍⁮‮‪⁪⁪​⁬‮⁪‮‫‮(byte _param0, Stream _param1) => _param1.WriteByte(_param0);

  public static void \u200C‭‬⁬⁭‮​⁫‏‬⁫‪‪‫‌‎⁫⁯⁯‫​⁫‍‮‪‏‬‎‍⁮‮‪⁪⁪​⁬‮⁪‮‫‮(
    byte _param0,
    byte[] _param1,
    int _param2)
  {
    _param1[_param2] = _param0;
  }

  public static void \u200D‫‫‏​​⁮‏‪⁫​⁫⁪⁯⁭‏‏⁫‭⁮⁮⁬‮‮⁪‭‭‪⁭‬‎‫‬‎‎⁪‫‫⁯‫‮(int _param0, Stream _param1)
  {
    _param1.WriteByte((byte) (_param0 >> 8));
    _param1.WriteByte((byte) _param0);
  }

  public static void \u200D‫‫‏​​⁮‏‪⁫​⁫⁪⁯⁭‏‏⁫‭⁮⁮⁬‮‮⁪‭‭‪⁭‬‎‫‬‎‎⁪‫‫⁯‫‮(
    int _param0,
    byte[] _param1,
    int _param2)
  {
    _param1[_param2] = (byte) (_param0 >> 8);
    _param1[_param2 + 1] = (byte) _param0;
  }

  public static void \u202C⁭‏‏‬‍⁪‏⁭⁬‬‍‎‫⁫‎⁪⁮⁪⁫‪‭⁯‌‌‫‌⁫⁯‬⁭⁭‭⁬⁪⁫‮‏‏‬‮(int _param0, Stream _param1)
  {
    _param1.WriteByte((byte) (_param0 >> 16));
    _param1.WriteByte((byte) (_param0 >> 8));
    _param1.WriteByte((byte) _param0);
  }

  public static void \u202C⁭‏‏‬‍⁪‏⁭⁬‬‍‎‫⁫‎⁪⁮⁪⁫‪‭⁯‌‌‫‌⁫⁯‬⁭⁭‭⁬⁪⁫‮‏‏‬‮(
    int _param0,
    byte[] _param1,
    int _param2)
  {
    _param1[_param2] = (byte) (_param0 >> 16);
    _param1[_param2 + 1] = (byte) (_param0 >> 8);
    _param1[_param2 + 2] = (byte) _param0;
  }

  public static void \u206B⁪‬‌‮‪‭⁮‌⁫‬‫‏​⁬‌‫⁪‍‪⁪⁮⁪⁪‏⁭‌‪‪‍‌‪‭​‏‎⁪‍‏⁬‮(long _param0, Stream _param1)
  {
    _param1.WriteByte((byte) (_param0 >> 24));
    _param1.WriteByte((byte) (_param0 >> 16));
    _param1.WriteByte((byte) (_param0 >> 8));
    _param1.WriteByte((byte) _param0);
  }

  public static void \u206B⁪‬‌‮‪‭⁮‌⁫‬‫‏​⁬‌‫⁪‍‪⁪⁮⁪⁪‏⁭‌‪‪‍‌‪‭​‏‎⁪‍‏⁬‮(
    long _param0,
    byte[] _param1,
    int _param2)
  {
    _param1[_param2] = (byte) (_param0 >> 24);
    _param1[_param2 + 1] = (byte) (_param0 >> 16);
    _param1[_param2 + 2] = (byte) (_param0 >> 8);
    _param1[_param2 + 3] = (byte) _param0;
  }

  public static void \u206B‮‪‫‫⁮‫​‌⁭‭⁫⁭‎‌‎‍‮‌‪‫‬‏‌‫⁪⁫‌‭⁮‬⁫‏‫⁬‪‬‮⁪‭‮(long _param0, Stream _param1)
  {
    _param1.WriteByte((byte) (_param0 >> 40));
    _param1.WriteByte((byte) (_param0 >> 32));
    _param1.WriteByte((byte) (_param0 >> 24));
    _param1.WriteByte((byte) (_param0 >> 16));
    _param1.WriteByte((byte) (_param0 >> 8));
    _param1.WriteByte((byte) _param0);
  }

  public static void \u206B‮‪‫‫⁮‫​‌⁭‭⁫⁭‎‌‎‍‮‌‪‫‬‏‌‫⁪⁫‌‭⁮‬⁫‏‫⁬‪‬‮⁪‭‮(
    long _param0,
    byte[] _param1,
    int _param2)
  {
    _param1[_param2] = (byte) (_param0 >> 40);
    _param1[_param2 + 1] = (byte) (_param0 >> 32);
    _param1[_param2 + 2] = (byte) (_param0 >> 24);
    _param1[_param2 + 3] = (byte) (_param0 >> 16);
    _param1[_param2 + 4] = (byte) (_param0 >> 8);
    _param1[_param2 + 5] = (byte) _param0;
  }

  public static void \u200F⁪⁮‏‮‬‪‮‏⁭⁯‏‍‎⁮‫‏‪‭‌‌‪⁯‭⁪⁭⁪​‎‌‏‮‌‏‫​⁬‮⁮‍‮(long _param0, Stream _param1)
  {
    _param1.WriteByte((byte) (_param0 >> 56));
    _param1.WriteByte((byte) (_param0 >> 48));
    _param1.WriteByte((byte) (_param0 >> 40));
    _param1.WriteByte((byte) (_param0 >> 32));
    _param1.WriteByte((byte) (_param0 >> 24));
    _param1.WriteByte((byte) (_param0 >> 16));
    _param1.WriteByte((byte) (_param0 >> 8));
    _param1.WriteByte((byte) _param0);
  }

  public static void \u200F⁪⁮‏‮‬‪‮‏⁭⁯‏‍‎⁮‫‏‪‭‌‌‪⁯‭⁪⁭⁪​‎‌‏‮‌‏‫​⁬‮⁮‍‮(
    long _param0,
    byte[] _param1,
    int _param2)
  {
    _param1[_param2] = (byte) (_param0 >> 56);
    _param1[_param2 + 1] = (byte) (_param0 >> 48);
    _param1[_param2 + 2] = (byte) (_param0 >> 40);
    _param1[_param2 + 3] = (byte) (_param0 >> 32);
    _param1[_param2 + 4] = (byte) (_param0 >> 24);
    _param1[_param2 + 5] = (byte) (_param0 >> 16);
    _param1[_param2 + 6] = (byte) (_param0 >> 8);
    _param1[_param2 + 7] = (byte) _param0;
  }

  public static void \u200E⁯‭‎‌⁯⁮⁫‮⁬‪⁬⁮‪⁬‌⁪‎⁬⁫‍‬‭⁬‏‮⁮⁭⁮⁪‬‌‌⁯‎​‌‬‬‍‮(byte[] _param0, Stream _param1)
  {
    \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u200C‭‬⁬⁭‮​⁫‏‬⁫‪‪‫‌‎⁫⁯⁯‫​⁫‍‮‪‏‬‎‍⁮‮‪⁪⁪​⁬‮⁪‮‫‮((byte) _param0.Length, _param1);
    _param1.Write(_param0, 0, _param0.Length);
  }

  public static void \u202B‪⁮‪⁮‌​‎⁫‍⁯‬​⁪⁮‮‬‭​‌‮⁮​⁮‏‮⁭‮⁫⁮⁭‎‪‎‏‪⁭‌‌‮‮(byte[] _param0, Stream _param1)
  {
    \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u200D‫‫‏​​⁮‏‪⁫​⁫⁪⁯⁭‏‏⁫‭⁮⁮⁬‮‮⁪‭‭‪⁭‬‎‫‬‎‎⁪‫‫⁯‫‮(_param0.Length, _param1);
    _param1.Write(_param0, 0, _param0.Length);
  }

  public static void \u200C⁮‪⁫‬‌⁮‎‏‫‍‌‏‮⁭‪‫‫​⁫⁭⁯⁯⁪‌⁭‬⁪‎‍‬‬⁬⁮‏​⁭​⁪‮(byte[] _param0, Stream _param1)
  {
    \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202C⁭‏‏‬‍⁪‏⁭⁬‬‍‎‫⁫‎⁪⁮⁪⁫‪‭⁯‌‌‫‌⁫⁯‬⁭⁭‭⁬⁪⁫‮‏‏‬‮(_param0.Length, _param1);
    _param1.Write(_param0, 0, _param0.Length);
  }

  public static void \u206D‍‎‎⁯‫⁯⁭‭​‏‍‫⁬⁪‎⁮‍‫​‮‌‪⁯​⁬‏‬​⁯​⁫⁯​‫​‫‌‌⁫‮(byte[] _param0, Stream _param1) => _param1.Write(_param0, 0, _param0.Length);

  public static void \u206D‍‎‎⁯‫⁯⁭‭​‏‍‫⁬⁪‎⁮‍‫​‮‌‪⁯​⁬‏‬​⁯​⁫⁯​‫​‫‌‌⁫‮(
    byte[] _param0,
    byte[] _param1,
    int _param2)
  {
    for (int index = 0; index < _param0.Length; ++index)
    {
      \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u200C‭‬⁬⁭‮​⁫‏‬⁫‪‪‫‌‎⁫⁯⁯‫​⁫‍‮‪‏‬‎‍⁮‮‪⁪⁪​⁬‮⁪‮‫‮(_param0[index], _param1, _param2);
      ++_param2;
    }
  }

  public static void \u202C‫‫⁭‏⁬‌⁬⁬‎⁮⁯‬‪‬‮‏‮​‬‭​‭⁪⁭⁮​⁫⁭‎⁪‭‫‫‏‍⁬‍‎‍‮(byte[] _param0, Stream _param1)
  {
    \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202B⁬⁭⁯⁪‍‫‪⁪⁯⁭‎⁮‪​‭‪​‍‬⁯​⁮‪‌⁮⁫‫‭⁬‭⁪‍⁪⁬⁬⁭‮⁮‪‮(_param0.Length);
    \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u200C‭‬⁬⁭‮​⁫‏‬⁫‪‪‫‌‎⁫⁯⁯‫​⁫‍‮‪‏‬‎‍⁮‮‪⁪⁪​⁬‮⁪‮‫‮((byte) _param0.Length, _param1);
    \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206D‍‎‎⁯‫⁯⁭‭​‏‍‫⁬⁪‎⁮‍‫​‮‌‪⁯​⁬‏‬​⁯​⁫⁯​‫​‫‌‌⁫‮(_param0, _param1);
  }

  public static void \u202C‫‫⁭‏⁬‌⁬⁬‎⁮⁯‬‪‬‮‏‮​‬‭​‭⁪⁭⁮​⁫⁭‎⁪‭‫‫‏‍⁬‍‎‍‮(
    byte[] _param0,
    byte[] _param1,
    int _param2)
  {
    \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202B⁬⁭⁯⁪‍‫‪⁪⁯⁭‎⁮‪​‭‪​‍‬⁯​⁮‪‌⁮⁫‫‭⁬‭⁪‍⁪⁬⁬⁭‮⁮‪‮(_param0.Length);
    \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u200C‭‬⁬⁭‮​⁫‏‬⁫‪‪‫‌‎⁫⁯⁯‫​⁫‍‮‪‏‬‎‍⁮‮‪⁪⁪​⁬‮⁪‮‫‮((byte) _param0.Length, _param1, _param2);
    \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206D‍‎‎⁯‫⁯⁭‭​‏‍‫⁬⁪‎⁮‍‫​‮‌‪⁯​⁬‏‬​⁯​⁫⁯​‫​‫‌‌⁫‮(_param0, _param1, _param2 + 1);
  }

  public static void \u202A⁫‮‬⁮⁪⁬‮‌‬⁫‪​⁯⁪⁯‌‫‭‫‪‎‎‎⁪⁯⁮⁪‌⁬‪‪‌⁪‪‏‎‭⁯⁬‮(int[] _param0, Stream _param1)
  {
    for (int index = 0; index < _param0.Length; ++index)
      \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u200D‫‫‏​​⁮‏‪⁫​⁫⁪⁯⁭‏‏⁫‭⁮⁮⁬‮‮⁪‭‭‪⁭‬‎‫‬‎‎⁪‫‫⁯‫‮(_param0[index], _param1);
  }

  public static void \u202A⁫‮‬⁮⁪⁬‮‌‬⁫‪​⁯⁪⁯‌‫‭‫‪‎‎‎⁪⁯⁮⁪‌⁬‪‪‌⁪‪‏‎‭⁯⁬‮(
    int[] _param0,
    byte[] _param1,
    int _param2)
  {
    for (int index = 0; index < _param0.Length; ++index)
    {
      \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u200D‫‫‏​​⁮‏‪⁫​⁫⁪⁯⁭‏‏⁫‭⁮⁮⁬‮‮⁪‭‭‪⁭‬‎‫‬‎‎⁪‫‫⁯‫‮(_param0[index], _param1, _param2);
      _param2 += 2;
    }
  }

  public static void \u206E‬⁮‍‪‬⁭⁪​⁫​‬‬⁪‏‏‭⁭⁪‍‬‫⁭‫⁯‎‪​‎‏⁮⁫‬​‏‏‪‪‮‬‮(int[] _param0, Stream _param1)
  {
    int num = 2 * _param0.Length;
    \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u200F⁪‬‏‍⁭‬‫‬⁯‬‎‪⁪‮‫⁬‍‬⁪⁮‍‍‮‎‍⁬‮‪‏‭‬⁫‎‭‬‌‌​‭‮(num);
    \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u200D‫‫‏​​⁮‏‪⁫​⁫⁪⁯⁭‏‏⁫‭⁮⁮⁬‮‮⁪‭‭‪⁭‬‎‫‬‎‎⁪‫‫⁯‫‮(num, _param1);
    \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202A⁫‮‬⁮⁪⁬‮‌‬⁫‪​⁯⁪⁯‌‫‭‫‪‎‎‎⁪⁯⁮⁪‌⁬‪‪‌⁪‪‏‎‭⁯⁬‮(_param0, _param1);
  }

  public static void \u206E‬⁮‍‪‬⁭⁪​⁫​‬‬⁪‏‏‭⁭⁪‍‬‫⁭‫⁯‎‪​‎‏⁮⁫‬​‏‏‪‪‮‬‮(
    int[] _param0,
    byte[] _param1,
    int _param2)
  {
    int num = 2 * _param0.Length;
    \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u200F⁪‬‏‍⁭‬‫‬⁯‬‎‪⁪‮‫⁬‍‬⁪⁮‍‍‮‎‍⁬‮‪‏‭‬⁫‎‭‬‌‌​‭‮(num);
    \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u200D‫‫‏​​⁮‏‪⁫​⁫⁪⁯⁭‏‏⁫‭⁮⁮⁬‮‮⁪‭‭‪⁭‬‎‫‬‎‎⁪‫‫⁯‫‮(num, _param1, _param2);
    \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202A⁫‮‬⁮⁪⁬‮‌‬⁫‪​⁯⁪⁯‌‫‭‫‪‎‎‎⁪⁯⁮⁪‌⁬‪‪‌⁪‪‏‎‭⁯⁬‮(_param0, _param1, _param2 + 2);
  }

  public static byte \u202C⁪⁪​⁬‌⁪‮‬​‫⁯⁫⁬⁪‭‭‭⁭⁪⁫‭⁭‎‪⁬‬⁯‬‌⁫‏‎⁪⁭‌‪​‮‪‮(byte[] _param0)
  {
    if (_param0 == null)
      throw new ArgumentNullException("buf");
    return _param0.Length == 1 ? \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206D​‭‎‪‌⁯‬‬⁪‍‬‎⁬⁯‭‏⁮‭⁪⁯⁫⁪‬‬⁭‫⁭​​‬‬⁭‭⁫‍‬‎⁭⁫‮(_param0, 0) : throw new \u206B‌⁭⁭⁭⁯​⁪‭‍⁮‭⁪‍‏‌⁬‫⁯‫‫‬‎⁭⁫‎⁪‌‏⁫⁮‪‬‮‬‏‎‏⁮‪‮((byte) 50);
  }

  public static byte[] \u202E‬⁮‬⁯‌⁯⁪‌⁫‪‪‮‌⁭​‪⁮‪⁪‍⁬‏⁪‎‏‬⁮‏⁬⁬​‎‏⁮‌‫⁮‌‫‮(byte[] _param0)
  {
    int length = _param0 != null ? (int) \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206D​‭‎‪‌⁯‬‬⁪‍‬‎⁬⁯‭‏⁮‭⁪⁯⁫⁪‬‬⁭‫⁭​​‬‬⁭‭⁫‍‬‎⁭⁫‮(_param0, 0) : throw new ArgumentNullException("buf");
    if (_param0.Length != length + 1)
      throw new \u206B‌⁭⁭⁭⁯​⁪‭‍⁮‭⁪‍‏‌⁬‫⁯‫‫‬‎⁭⁫‎⁪‌‏⁫⁮‪‬‮‬‏‎‏⁮‪‮((byte) 50);
    byte[] numArray = new byte[length];
    for (int index = 0; index < length; ++index)
      numArray[index] = \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206D​‭‎‪‌⁯‬‬⁪‍‬‎⁬⁯‭‏⁮‭⁪⁯⁫⁪‬‬⁭‫⁭​​‬‬⁭‭⁫‍‬‎⁭⁫‮(_param0, index + 1);
    return numArray;
  }

  public static byte[] \u206B⁮‭⁭‏‏‌‏‮⁬‪⁮⁯⁪‬⁭⁫‍‌‏‪⁪⁬⁭‭​‌⁯‌‎⁪⁮‭⁮‫⁭‬‎‮⁭‮(byte[] _param0)
  {
    \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202B⁬⁭⁯⁪‍‫‪⁪⁯⁭‎⁮‪​‭‪​‍‬⁯​⁮‪‌⁮⁫‫‭⁬‭⁪‍⁪⁬⁬⁭‮⁮‪‮(_param0.Length);
    return \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u206E⁪⁪‬⁮‭⁮‫‭⁫⁮⁮‫​⁮‫‫‮‬‎⁬‪​​​‏⁪‮‫⁫⁫‎‌‪⁭‪‎⁬⁭‭‮(_param0, (byte) _param0.Length);
  }

  public static byte[] \u206B‮⁭⁪‪‍‮‬‎⁪​‎‏‬⁮⁫⁯⁭⁬‬⁯⁬⁮‬⁮‌⁫⁮⁬‍‮‫‍​‮‍‪‭⁫‏‮(byte _param0)
  {
    \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202B⁬⁭⁯⁪‍‫‪⁪⁯⁭‎⁮‪​‭‪​‍‬⁯​⁮‪‌⁮⁫‫‭⁬‭⁪‍⁪⁬⁬⁭‮⁮‪‮((int) _param0);
    byte[] numArray = new byte[1];
    \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u200C‭‬⁬⁭‮​⁫‏‬⁫‪‪‫‌‎⁫⁯⁯‫​⁫‍‮‪‏‬‎‍⁮‮‪⁪⁪​⁬‮⁪‮‫‮(_param0, numArray, 0);
    return numArray;
  }

  public static byte[] \u202D‍‪‏⁪‫‎‪‪‪⁭⁮⁯⁭‭⁪‫⁬‮‭‏⁯‎‌‌⁯‌⁫‫⁮‪‌‎‪⁮⁪‮‮‍⁪‮(byte[] _param0)
  {
    byte[] numArray = new byte[1 + _param0.Length];
    \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202C‫‫⁭‏⁬‌⁬⁬‎⁮⁯‬‪‬‮‏‮​‬‭​‭⁪⁭⁮​⁫⁭‎⁪‭‫‫‏‍⁬‍‎‍‮(_param0, numArray, 0);
    return numArray;
  }

  public static byte[] \u206B‮‌‪‏‪‭‪‪‫‫‫‏‎⁫‍⁬‬⁮‬⁭‍‬⁫‮‮‪⁪‮⁫‎⁭‌‏‮⁫⁫‫‮⁯‮(int[] _param0)
  {
    byte[] numArray = new byte[2 + 2 * _param0.Length];
    \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206E‬⁮‍‪‬⁭⁪​⁫​‬‬⁪‏‏‭⁭⁪‍‬‫⁭‫⁯‎‪​‎‏⁮⁫‬​‏‏‪‪‮‬‮(_param0, numArray, 0);
    return numArray;
  }

  public static byte \u206D​‭‎‪‌⁯‬‬⁪‍‬‎⁬⁯‭‏⁮‭⁪⁯⁫⁪‬‬⁭‫⁭​​‬‬⁭‭⁫‍‬‎⁭⁫‮(Stream _param0)
  {
    int num = _param0.ReadByte();
    return num >= 0 ? (byte) num : throw new EndOfStreamException();
  }

  public static byte \u206D​‭‎‪‌⁯‬‬⁪‍‬‎⁬⁯‭‏⁮‭⁪⁯⁫⁪‬‬⁭‫⁭​​‬‬⁭‭⁫‍‬‎⁭⁫‮(byte[] _param0, int _param1) => _param0[_param1];

  public static int \u206F⁯‌⁯⁬​‭​‭⁮‭⁮‭‬‍⁭‍‎​⁯⁫​‮⁯‏‌⁪⁯​‭⁪⁬⁪‪⁫​‌⁫‎⁮‮(Stream _param0)
  {
    int num1 = _param0.ReadByte();
    int num2 = _param0.ReadByte();
    if (num2 < 0)
      throw new EndOfStreamException();
    return num1 << 8 | num2;
  }

  public static int \u206F⁯‌⁯⁬​‭​‭⁮‭⁮‭‬‍⁭‍‎​⁯⁫​‮⁯‏‌⁪⁯​‭⁪⁬⁪‪⁫​‌⁫‎⁮‮(byte[] _param0, int _param1) => (int) _param0[_param1] << 8 | (int) _param0[++_param1];

  public static int \u206A‎⁬‎‮‍‍⁭‎⁫⁯‮‌‌‌‪‫⁮⁬‎‮‫⁯⁪‭‬​⁭‮‏⁮‮‌‏‌⁭‮‭‫‌‮(Stream _param0)
  {
    int num1 = _param0.ReadByte();
    int num2 = _param0.ReadByte();
    int num3 = _param0.ReadByte();
    if (num3 < 0)
      throw new EndOfStreamException();
    return num1 << 16 | num2 << 8 | num3;
  }

  public static int \u206A‎⁬‎‮‍‍⁭‎⁫⁯‮‌‌‌‪‫⁮⁬‎‮‫⁯⁪‭‬​⁭‮‏⁮‮‌‏‌⁭‮‭‫‌‮(byte[] _param0, int _param1) => (int) _param0[_param1] << 16 | (int) _param0[++_param1] << 8 | (int) _param0[++_param1];

  public static long \u200E‍⁬⁭‎‍‭‬‌‏‮‏‪‍‪⁭‎‪‍⁪⁮‮‭‭⁫⁮​​‍‪⁫‏⁭‫⁭‏​⁯‭‍‮(Stream _param0)
  {
    int num1 = _param0.ReadByte();
    int num2 = _param0.ReadByte();
    int num3 = _param0.ReadByte();
    int num4 = _param0.ReadByte();
    if (num4 < 0)
      throw new EndOfStreamException();
    return (long) (uint) (num1 << 24 | num2 << 16 | num3 << 8 | num4);
  }

  public static long \u200E‍⁬⁭‎‍‭‬‌‏‮‏‪‍‪⁭‎‪‍⁪⁮‮‭‭⁫⁮​​‍‪⁫‏⁭‫⁭‏​⁯‭‍‮(byte[] _param0, int _param1) => (long) ((uint) ((int) _param0[_param1] << 24 | (int) _param0[++_param1] << 16 | (int) _param0[++_param1] << 8) | (uint) _param0[++_param1]);

  public static long \u206E‮⁯‬‏‮‍‎⁬⁬⁭⁪‬‪​‭‍‭‮​⁭‌⁬⁪‪‮⁫‮⁬‬‌‮⁬‏⁯‎‍⁮‮‪‮(Stream _param0) => ((long) \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206A‎⁬‎‮‍‍⁭‎⁫⁯‮‌‌‌‪‫⁮⁬‎‮‫⁯⁪‭‬​⁭‮‏⁮‮‌‏‌⁭‮‭‫‌‮(_param0) & (long) uint.MaxValue) << 24 | (long) \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206A‎⁬‎‮‍‍⁭‎⁫⁯‮‌‌‌‪‫⁮⁬‎‮‫⁯⁪‭‬​⁭‮‏⁮‮‌‏‌⁭‮‭‫‌‮(_param0) & (long) uint.MaxValue;

  public static long \u206E‮⁯‬‏‮‍‎⁬⁬⁭⁪‬‪​‭‍‭‮​⁭‌⁬⁪‪‮⁫‮⁬‬‌‮⁬‏⁯‎‍⁮‮‪‮(byte[] _param0, int _param1) => ((long) \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206A‎⁬‎‮‍‍⁭‎⁫⁯‮‌‌‌‪‫⁮⁬‎‮‫⁯⁪‭‬​⁭‮‏⁮‮‌‏‌⁭‮‭‫‌‮(_param0, _param1) & (long) uint.MaxValue) << 24 | (long) \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206A‎⁬‎‮‍‍⁭‎⁫⁯‮‌‌‌‪‫⁮⁬‎‮‫⁯⁪‭‬​⁭‮‏⁮‮‌‏‌⁭‮‭‫‌‮(_param0, _param1 + 3) & (long) uint.MaxValue;

  public static byte[] \u206C‮‫​⁭‭⁮⁯‍⁭‍⁯‌⁯‬‍‫‏‌⁭⁬‮⁮⁭⁫⁬⁮‏⁮⁪⁯‭⁪‪⁪⁮​‬‬⁬‮(int _param0, Stream _param1)
  {
    if (_param0 < 1)
      return \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202B⁫‌⁮⁫‎‬‮⁭‪⁬⁭‌⁯‏‬‮​‪‎⁫‍⁪‭‫​‌⁫⁫⁯‏⁫⁫⁭‌‫⁫‫‪‎‮;
    byte[] numArray = new byte[_param0];
    int num = \u202A‪​‏‌‫‫‎‏⁬⁫⁬‫⁮‌‬‬‮‎⁫‎‍⁮⁪‮‫⁬⁭‬‪‫‮‮‪‮‌‮‫‭‏‮.\u206A⁫⁯⁯⁫‫⁬‬​‬‪‫‮⁯‎‌‭‫‏‭‭‍‍⁭‭⁪‌‭⁬‮‬‮‭‫‍‪​⁪​⁯‮(_param1, numArray);
    if (num == 0)
      return (byte[]) null;
    if (num != _param0)
      throw new EndOfStreamException();
    return numArray;
  }

  public static byte[] \u206A⁫⁯⁯⁫‫⁬‬​‬‪‫‮⁯‎‌‭‫‏‭‭‍‍⁭‭⁪‌‭⁬‮‬‮‭‫‍‪​⁪​⁯‮(int _param0, Stream _param1)
  {
    if (_param0 < 1)
      return \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202B⁫‌⁮⁫‎‬‮⁭‪⁬⁭‌⁯‏‬‮​‪‎⁫‍⁪‭‫​‌⁫⁫⁯‏⁫⁫⁭‌‫⁫‫‪‎‮;
    byte[] numArray = new byte[_param0];
    if (_param0 != \u202A‪​‏‌‫‫‎‏⁬⁫⁬‫⁮‌‬‬‮‎⁫‎‍⁮⁪‮‫⁬⁭‬‪‫‮‮‪‮‌‮‫‭‏‮.\u206A⁫⁯⁯⁫‫⁬‬​‬‪‫‮⁯‎‌‭‫‏‭‭‍‍⁭‭⁪‌‭⁬‮‬‮‭‫‍‪​⁪​⁯‮(_param1, numArray))
      throw new EndOfStreamException();
    return numArray;
  }

  public static void \u206A⁫⁯⁯⁫‫⁬‬​‬‪‫‮⁯‎‌‭‫‏‭‭‍‍⁭‭⁪‌‭⁬‮‬‮‭‫‍‪​⁪​⁯‮(byte[] _param0, Stream _param1)
  {
    if (\u202A‪​‏‌‫‫‎‏⁬⁫⁬‫⁮‌‬‬‮‎⁫‎‍⁮⁪‮‫⁬⁭‬‪‫‮‮‪‮‌‮‫‭‏‮.\u206A⁫⁯⁯⁫‫⁬‬​‬‪‫‮⁯‎‌‭‫‏‭‭‍‍⁭‭⁪‌‭⁬‮‬‮‭‫‍‪​⁪​⁯‮(_param1, _param0, 0, _param0.Length) < _param0.Length)
      throw new EndOfStreamException();
  }

  public static byte[] \u202C‪​⁬⁫‭‏⁫‫‬‪‎⁮⁯‌‍‫⁬​‎‪‭⁮‫‮‏‎‏⁮⁯⁭​⁬‮‪​⁯‮⁬‏‮(Stream _param0)
  {
    byte[] numArray = new byte[(int) \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206D​‭‎‪‌⁯‬‬⁪‍‬‎⁬⁯‭‏⁮‭⁪⁯⁫⁪‬‬⁭‫⁭​​‬‬⁭‭⁫‍‬‎⁭⁫‮(_param0)];
    \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206A⁫⁯⁯⁫‫⁬‬​‬‪‫‮⁯‎‌‭‫‏‭‭‍‍⁭‭⁪‌‭⁬‮‬‮‭‫‍‪​⁪​⁯‮(numArray, _param0);
    return numArray;
  }

  public static byte[] \u202E‌‬⁭‮⁮‏‬‏⁭‭‫⁬‏​⁯‍‭‫‬⁬‏‮⁪⁯‫⁬⁮⁮⁬​⁬‏​‮⁬‫⁬‬⁪‮(Stream _param0)
  {
    byte[] numArray = new byte[\u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206F⁯‌⁯⁬​‭​‭⁮‭⁮‭‬‍⁭‍‎​⁯⁫​‮⁯‏‌⁪⁯​‭⁪⁬⁪‪⁫​‌⁫‎⁮‮(_param0)];
    \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206A⁫⁯⁯⁫‫⁬‬​‬‪‫‮⁯‎‌‭‫‏‭‭‍‍⁭‭⁪‌‭⁬‮‬‮‭‫‍‪​⁪​⁯‮(numArray, _param0);
    return numArray;
  }

  public static byte[] \u202D‭‌⁬⁫​‌‎⁪⁮⁬‎‌⁬‍‮⁯‭‏⁪‬‫‬⁯‎⁬‬‌‮‬‪‭‫⁫‏⁬⁯‍‭‎‮(Stream _param0) => \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206A⁫⁯⁯⁫‫⁬‬​‬‪‫‮⁯‎‌‭‫‏‭‭‍‍⁭‭⁪‌‭⁬‮‬‮‭‫‍‪​⁪​⁯‮(\u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206A‎⁬‎‮‍‍⁭‎⁫⁯‮‌‌‌‪‫⁮⁬‎‮‫⁯⁪‭‬​⁭‮‏⁮‮‌‏‌⁭‮‭‫‌‮(_param0), _param0);

  public static byte[] \u200C⁯⁬‎‎‍‍⁭‎⁮‌⁬‭​‎​⁫‭​⁬‎⁯⁮⁯‭‪‬⁬‎‭⁬‍⁭⁭‬‌⁪‏⁮‍‮(int _param0, Stream _param1)
  {
    byte[] numArray = new byte[_param0];
    for (int index = 0; index < _param0; ++index)
      numArray[index] = \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206D​‭‎‪‌⁯‬‬⁪‍‬‎⁬⁯‭‏⁮‭⁪⁯⁫⁪‬‬⁭‫⁭​​‬‬⁭‭⁫‍‬‎⁭⁫‮(_param1);
    return numArray;
  }

  public static int[] \u206C‬‬‬‬⁭⁯‪‎‬‎‍⁪‍⁬⁫‮​‭⁫‮‏‏‏‪‫‏⁭⁭‫‬⁭‪‎⁭⁬⁯‭‮‬‮(int _param0, Stream _param1)
  {
    int[] numArray = new int[_param0];
    for (int index = 0; index < _param0; ++index)
      numArray[index] = \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206F⁯‌⁯⁬​‭​‭⁮‭⁮‭‬‍⁭‍‎​⁯⁫​‮⁯‏‌⁪⁯​‭⁪⁬⁪‪⁫​‌⁫‎⁮‮(_param1);
    return numArray;
  }

  public static \u206F⁯‮‏‮‫‪‮⁬‬⁪‭‏‪‪‭⁫‌‫⁫‪​‮⁭‮‬⁮⁯‫‌‫‌⁯⁬⁬⁯⁪⁭⁭‪‮ \u206D⁫‏‪‫⁬⁬‬‮​‍‎‭‎​‪⁭‍‬‬‏⁮‎⁬‮​‫‫⁬⁭‌⁪‏‫⁭‍‏⁭‮‪‮(
    byte[] _param0,
    int _param1)
  {
    return \u206F⁯‮‏‮‫‪‮⁬‬⁪‭‏‪‪‭⁫‌‫⁫‪​‮⁭‮‬⁮⁯‫‌‫‌⁯⁬⁬⁯⁪⁭⁭‪‮.\u206D‏‭‬⁪⁫‮‫‫‭⁪⁮⁯‍‭‎‪⁪‍‪‌‎‍‌‬⁬‭⁯⁪‏‪‬‪⁪‌⁮‮‫‏⁪‮((int) _param0[_param1], (int) _param0[_param1 + 1]);
  }

  public static \u206F⁯‮‏‮‫‪‮⁬‬⁪‭‏‪‪‭⁫‌‫⁫‪​‮⁭‮‬⁮⁯‫‌‫‌⁯⁬⁬⁯⁪⁭⁭‪‮ \u206D⁫‏‪‫⁬⁬‬‮​‍‎‭‎​‪⁭‍‬‬‏⁮‎⁬‮​‫‫⁬⁭‌⁪‏‫⁭‍‏⁭‮‪‮(
    Stream _param0)
  {
    int num1 = _param0.ReadByte();
    int num2 = _param0.ReadByte();
    int num3 = num2 >= 0 ? num2 : throw new EndOfStreamException();
    return \u206F⁯‮‏‮‫‪‮⁬‬⁪‭‏‪‪‭⁫‌‫⁫‪​‮⁭‮‬⁮⁯‫‌‫‌⁯⁬⁬⁯⁪⁭⁭‪‮.\u206D‏‭‬⁪⁫‮‫‫‭⁪⁮⁯‍‭‎‪⁪‍‪‌‎‍‌‬⁬‭⁯⁪‏‪‬‪⁪‌⁮‮‫‏⁪‮(num1, num3);
  }

  public static int \u202B⁮⁬‬⁫‏‪⁬‮‍‫​⁬‌⁬‮‭⁯⁬‍‏⁫‬‮‭‮‎⁯⁭‬⁫​‬‭‌‍⁮⁮‏⁯‮(byte[] _param0, int _param1) => (int) _param0[_param1] << 8 | (int) _param0[_param1 + 1];

  public static int \u202B⁮⁬‬⁫‏‪⁬‮‍‫​⁬‌⁬‮‭⁯⁬‍‏⁫‬‮‭‮‎⁯⁭‬⁫​‬‭‌‍⁮⁮‏⁯‮(Stream _param0)
  {
    int num1 = _param0.ReadByte();
    int num2 = _param0.ReadByte();
    if (num2 < 0)
      throw new EndOfStreamException();
    return num1 << 8 | num2;
  }

  public static \u206C‭‍⁮‪‮⁭‫⁮‮‬‎​‌‮‎‍⁬​⁪‫⁫‪‭‌‌‪⁭⁭⁪‍‮⁯⁭‍‎⁪‬⁬‍‮ \u202D​‪⁪‪‭​‫‌‌​⁪⁪‏‫⁬⁬‎⁯‬‫‍‌‪‮⁯⁮‏⁮‪‎‪⁬⁭⁬‬⁮‪⁫‪‮(
    byte[] _param0)
  {
    MemoryStream memoryStream = new MemoryStream(_param0, false);
    \u206C‭‍⁮‪‮⁭‫⁮‮‬‎​‌‮‎‍⁬​⁪‫⁫‪‭‌‌‪⁭⁭⁪‍‮⁯⁭‍‎⁪‬⁬‍‮ obj = new \u202B⁪‬‏‎‌⁮‮​⁮⁫‪⁮⁯‎⁭‎‏⁪‪‏‫‍‍‎​‌‏‌‎⁮​‭‪‌⁮‌⁮‫‪‮((Stream) memoryStream, _param0.Length).\u200B​‏⁮⁭‬‪‏‌‏‮⁫⁬‎‌⁫‮⁬‪⁬‎‬⁬​‪‏⁫​‭‌⁪‏‭‎⁯⁯⁮‌‌‬‮();
    if (obj == null)
      throw new \u206B‌⁭⁭⁭⁯​⁪‭‍⁮‭⁪‍‏‌⁬‫⁯‫‫‬‎⁭⁫‎⁪‌‏⁫⁮‪‬‮‬‏‎‏⁮‪‮((byte) 50);
    if (memoryStream.Position != memoryStream.Length)
      throw new \u206B‌⁭⁭⁭⁯​⁪‭‍⁮‭⁪‍‏‌⁬‫⁯‫‫‬‎⁭⁫‎⁪‌‏⁫⁮‪‬‮‬‏‎‏⁮‪‮((byte) 50);
    return obj;
  }

  public static \u206C‭‍⁮‪‮⁭‫⁮‮‬‎​‌‮‎‍⁬​⁪‫⁫‪‭‌‌‪⁭⁭⁪‍‮⁯⁭‍‎⁪‬⁬‍‮ \u202B⁫‭‪‭⁫‍⁫⁪⁮⁫‎‌‫‭⁮‍⁫‍⁭‮‌‎‌⁬‎⁬‭⁫‬⁪‮‌‪‮⁪⁬‏‎⁮‮(
    byte[] _param0)
  {
    \u206C‭‍⁮‪‮⁭‫⁮‮‬‎​‌‮‎‍⁬​⁪‫⁫‪‭‌‌‪⁭⁭⁪‍‮⁯⁭‍‎⁪‬⁬‍‮ obj = \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202D​‪⁪‪‭​‫‌‌​⁪⁪‏‫⁬⁬‎⁯‬‫‍‌‪‮⁯⁮‏⁮‪‎‪⁬⁭⁬‬⁮‪⁫‪‮(_param0);
    return \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u200D‮‫‏⁮‮‪‎⁬‪‌⁮‏⁬⁫⁪‮‎⁪‫‬⁫‌‎​‏⁪⁫‎‎‫⁬‌⁭‫⁯⁭‪⁫‏‮(obj.GetEncoded("DER"), _param0) ? obj : throw new \u206B‌⁭⁭⁭⁯​⁪‭‍⁮‭⁪‍‏‌⁬‫⁯‫‫‬‎⁭⁫‎⁪‌‏⁫⁮‪‬‮‬‏‎‏⁮‪‮((byte) 50);
  }

  public static void \u200B‎‫‌​‏⁫⁮‫⁫‬‭‌⁬‍‌‌‍‫‪‌⁪‬⁪⁮⁯⁬‭‫‏‪⁮‬‎⁯‍‫‮‍‭‮(byte[] _param0, int _param1)
  {
    int num = (int) (\u206A⁯⁫‏⁫‪​⁪‎‎⁮⁮⁬⁬⁪⁯​‌‪​‮‬‍⁯​‫‮⁯‮‬‫‪⁮‬‏⁪⁯‮‫⁭‮.\u206D‎‍‌‍⁮‏‪⁪‪⁯⁫⁬​​‌​‌‪‭‌‭‮⁯⁭‍⁮⁪⁯‪‮⁮‫‮‍‏​⁪⁬‬‮() / 1000L);
    _param0[_param1] = (byte) (num >> 24);
    _param0[_param1 + 1] = (byte) (num >> 16);
    _param0[_param1 + 2] = (byte) (num >> 8);
    _param0[_param1 + 3] = (byte) num;
  }

  public static void \u200F​‎‏⁮‎⁫‬⁪⁪⁫⁭⁭⁪‌⁫⁭‭​⁪‬‬⁪⁪⁪‪⁭⁬⁫⁬‎‭‭‏‬⁬‫⁪​‬‮(
    \u206F⁯‮‏‮‫‪‮⁬‬⁪‭‏‪‪‭⁫‌‫⁫‪​‮⁭‮‬⁮⁯‫‌‫‌⁯⁬⁬⁯⁪⁭⁭‪‮ _param0,
    Stream _param1)
  {
    _param1.WriteByte((byte) _param0.\u206B‏⁭‫‭‫⁬⁭‬‮⁮​⁮‭⁪‭‎​⁪⁯‌⁪‬‮‫⁮⁮‪‮‌⁪‪‮⁫‎​⁫‮⁭⁭‮);
    _param1.WriteByte((byte) _param0.\u202E‍⁬‪‪⁬⁭⁫⁫⁫‬‭⁭‎‬​⁮​‮‪​‎‎‪⁫‎‌⁪⁫‮​‏⁭⁯‫⁬⁭​⁪‫‮);
  }

  public static void \u200F​‎‏⁮‎⁫‬⁪⁪⁫⁭⁭⁪‌⁫⁭‭​⁪‬‬⁪⁪⁪‪⁭⁬⁫⁬‎‭‭‏‬⁬‫⁪​‬‮(
    \u206F⁯‮‏‮‫‪‮⁬‬⁪‭‏‪‪‭⁫‌‫⁫‪​‮⁭‮‬⁮⁯‫‌‫‌⁯⁬⁬⁯⁪⁭⁭‪‮ _param0,
    byte[] _param1,
    int _param2)
  {
    _param1[_param2] = (byte) _param0.\u206B‏⁭‫‭‫⁬⁭‬‮⁮​⁮‭⁪‭‎​⁪⁯‌⁪‬‮‫⁮⁮‪‮‌⁪‪‮⁫‎​⁫‮⁭⁭‮;
    _param1[_param2 + 1] = (byte) _param0.\u202E‍⁬‪‪⁬⁭⁫⁫⁫‬‭⁭‎‬​⁮​‮‪​‎‎‪⁫‎‌⁪⁫‮​‏⁭⁯‫⁬⁭​⁪‫‮;
  }

  public static IList \u202E‮⁯⁫‪⁭⁫⁫‬‮‪‮‌‎‬⁬‍⁭⁪⁫‬⁭⁬⁫⁪⁯​‌‪‪⁫‏⁮⁬⁫⁭‫⁬‎⁪‮()
  {
    IList list = \u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u200C⁮‬‎⁪‌⁮‬​⁬⁭​‏⁮​‍‌⁮‮⁪⁪⁫‪‫‎⁮‎⁬​​‏⁪‪‍‬‪⁬⁫⁪‏‮(4);
    list.Add((object) (byte) 0);
    list.Add((object) (byte) 1);
    list.Add((object) (byte) 2);
    list.Add((object) (byte) 3);
    return list;
  }

  public static IList \u200B⁬⁬‌‬⁫⁮⁫⁭‏‏⁫‪‌‏‮‌‎⁮‎​​​‪‏⁮‮‌⁬‏​​⁮‍⁪⁭⁬‎‬⁫‮() => \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206D⁭⁭‌⁪⁫⁮‏​‭⁮‪‭‫⁪‭​‌‫⁫‎⁪‬⁫⁬‬‌‏‍‪‍⁫⁭‎⁫‮‎‏⁮‮‮((object) new \u200D⁮‌‫⁯⁬‫‍‪‫‬‌‫‭‎‭⁬⁬‬‪‬⁯‍⁮‪‪‮⁪‪‬⁬⁪⁯​‬‍‍‍‌‎‮((byte) 2, (byte) 2));

  public static IList \u202A‭⁫‎‌⁭‪‫‬‌‎‫‬‪​‫⁮⁫‮‮‮‍‬⁮‮⁫‮‫⁯⁯⁪‫⁫‍‭⁭‬‌⁫⁫‮() => \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206D⁭⁭‌⁪⁫⁮‏​‭⁮‪‭‫⁪‭​‌‫⁫‎⁪‬⁫⁬‬‌‏‍‪‍⁫⁭‎⁫‮‎‏⁮‮‮((object) new \u200D⁮‌‫⁯⁬‫‍‪‫‬‌‫‭‎‭⁬⁬‬‪‬⁯‍⁮‪‪‮⁪‪‬⁬⁪⁯​‬‍‍‍‌‎‮((byte) 2, (byte) 3));

  public static IList \u202C‮‫‮‮⁯​⁯⁬‬‫‭⁯‬‏⁮⁬‬​⁯‭‍⁯‫⁯‎⁫‍‪‍‏‫⁮‭⁪‪‮⁫‭⁯‮() => \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206D⁭⁭‌⁪⁫⁮‏​‭⁮‪‭‫⁪‭​‌‫⁫‎⁪‬⁫⁬‬‌‏‍‪‍⁫⁭‎⁫‮‎‏⁮‮‮((object) new \u200D⁮‌‫⁯⁬‫‍‪‫‬‌‫‭‎‭⁬⁬‬‪‬⁯‍⁮‪‪‮⁪‪‬⁬⁪⁯​‬‍‍‍‌‎‮((byte) 2, (byte) 1));

  public static byte[] \u202E⁪⁮‭⁫‭⁯‭⁬⁯⁬‍‪⁪⁯‎‎⁯‪‌‮⁫‎‫⁭‫⁮⁮‪‫⁬⁬⁮⁬‌‎‪⁮‏‏‮(
    IDictionary _param0,
    int _param1)
  {
    return _param0 != null ? (byte[]) _param0[(object) _param1] : (byte[]) null;
  }

  public static IList \u206C​‎‪⁬‮‌‌‭⁬‭‭‫‍‌⁭⁭‭⁭‫‫‍‮⁪​‭⁮‫⁯⁬‪‎‎‎‬⁬⁯⁭⁫⁭‮()
  {
    byte[] numArray1 = new byte[5]
    {
      (byte) 2,
      (byte) 3,
      (byte) 4,
      (byte) 5,
      (byte) 6
    };
    byte[] numArray2 = new byte[3]
    {
      (byte) 1,
      (byte) 2,
      (byte) 3
    };
    IList list = \u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u200C⁮‬‎⁪‌⁮‬​⁬⁭​‏⁮​‍‌⁮‮⁪⁪⁫‪‫‎⁮‎⁬​​‏⁪‪‍‬‪⁬⁫⁪‏‮();
    for (int index1 = 0; index1 < numArray2.Length; ++index1)
    {
      for (int index2 = 0; index2 < numArray1.Length; ++index2)
        list.Add((object) new \u200D⁮‌‫⁯⁬‫‍‪‫‬‌‫‭‎‭⁬⁬‬‪‬⁯‍⁮‪‪‮⁪‪‬⁬⁪⁯​‬‍‍‍‌‎‮(numArray1[index2], numArray2[index1]));
    }
    return list;
  }

  public static \u200D⁮‌‫⁯⁬‫‍‪‫‬‌‫‭‎‭⁬⁬‬‪‬⁯‍⁮‪‪‮⁪‪‬⁬⁪⁯​‬‍‍‍‌‎‮ \u200F‎⁬⁭‬‪⁬⁫‌​‭‏‫‏‪⁭⁭⁮⁬‌‍‬⁪⁭‍‌‮‭⁫‎‬⁯​‪⁭⁫‬⁮‮‍‮(
    \u200B⁮‫‎‪‍⁬‍‎‪‫‎‭⁪⁪⁬‫⁬‍⁭‎‎⁯⁫​⁫‫⁯⁯​⁪⁯‫⁮‏⁯⁪⁮⁬‫‮ _param0,
    \u200C⁬‍‏⁮‭⁭‭‬‏⁭‍‬‭‮‏​‌⁯⁮‪‬⁯‌‪⁭‏⁫‫⁮‏‎‏‌⁭⁭‎‏⁯‮‮ _param1)
  {
    \u200D⁮‌‫⁯⁬‫‍‪‫‬‌‫‭‎‭⁬⁬‬‪‬⁯‍⁮‪‪‮⁪‪‬⁬⁪⁯​‬‍‍‍‌‎‮ obj = (\u200D⁮‌‫⁯⁬‫‍‪‫‬‌‫‭‎‭⁬⁬‬‪‬⁯‍⁮‪‪‮⁪‪‬⁬⁪⁯​‬‍‍‍‌‎‮) null;
    if (\u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202C‮​‍‏‍⁭‭‭‎‮‌‮‏⁭⁫⁫⁮⁬⁮‏‌​‍‫⁬⁪⁪⁬‭‍⁪⁬​‪⁭‫⁫​⁫‮(_param0))
    {
      obj = _param1.\u202D⁮⁪‌‌‫⁭⁭‎‏⁫‎‪⁯⁮⁪‬‍‬​‏‫⁮‍‍‮⁯‭‏‬‬‏‎⁬‍⁯​‭‎‮;
      if (obj == null)
        throw new \u206B‌⁭⁭⁭⁯​⁪‭‍⁮‭⁪‍‏‌⁬‫⁯‫‫‬‎⁭⁫‎⁪‌‏⁫⁮‪‬‮‬‏‎‏⁮‪‮((byte) 80);
    }
    return obj;
  }

  public static bool \u206C⁮‎⁬⁭⁫⁫‏⁫⁮⁬⁪⁮​‫⁫⁭⁯‎‎⁬‮‬​‪‏‫⁮⁭​‫‎⁯‌⁫‬‪‎‌‪‮(
    IDictionary _param0,
    int _param1,
    byte _param2)
  {
    byte[] numArray = \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202E⁪⁮‭⁫‭⁯‭⁬⁯⁬‍‪⁪⁯‎‎⁯‪‌‮⁫‎‫⁭‫⁮⁮‪‫⁬⁬⁮⁬‌‎‪⁮‏‏‮(_param0, _param1);
    if (numArray == null)
      return false;
    if (numArray.Length != 0)
      throw new \u206B‌⁭⁭⁭⁯​⁪‭‍⁮‭⁪‍‏‌⁬‫⁯‫‫‬‎⁭⁫‎⁪‌‏⁫⁮‪‬‮‬‏‎‏⁮‪‮(_param2);
    return true;
  }

  public static \u206B⁪‭‮‎‬⁮​​⁪⁮⁪⁮⁫⁭⁭⁬‌⁭‬‎‪‏⁪‫‫‏⁮⁯⁯⁪⁯​‮‎​⁫‍‫‮ \u206A⁬‎‫⁯‏‫⁭‎‭‌⁯⁭‮⁫‮‍​‭‎⁪⁫‬⁪‭⁭⁫⁫‫‌‬⁭⁯​⁯⁭⁯​⁮‭‮(
    byte[] _param0,
    \u200E⁪‬‌⁮‮‏‮‬‫‍‮⁭⁫‪⁬⁫⁪‮‪​‍‬‌‪‪⁪⁪‮‌⁫‏‭⁮‏‏​‎‎‪‮ _param1)
  {
    return (\u206B⁪‭‮‎‬⁮​​⁪⁮⁪⁮⁫⁭⁭⁬‌⁭‬‎‪‏⁪‫‫‏⁮⁯⁯⁪⁯​‮‎​⁫‍‫‮) new \u206F⁪⁭‫⁫‪⁬​⁬‬‭‫‌‫⁭​‌‮‍⁮⁫‎‎⁫​‍‍‏‌‍⁯‫‮‌‎‌⁭‫‌‍‮(_param0, _param1);
  }

  public static bool \u202D​⁮‭‬‮‮⁯‎⁮‍⁪‎⁪⁭‎⁭‪‍‍‎⁮⁮‎‍‌‬‏‪‫‫‪‏‪‭‏‬‬‮‮(
    \u206F⁯‮‏‮‫‪‮⁬‬⁪‭‏‪‪‭⁫‌‫⁫‪​‮⁭‮‬⁮⁯‫‌‫‌⁯⁬⁬⁯⁪⁭⁭‪‮ _param0)
  {
    return \u206F⁯‮‏‮‫‪‮⁬‬⁪‭‏‪‪‭⁫‌‫⁫‪​‮⁭‮‬⁮⁯‫‌‫‌⁯⁬⁬⁯⁪⁭⁭‪‮.\u202A‌‬‬‮‌⁬‍‎⁭⁬‏⁫‎​‪‮​​‫⁬⁮​⁭‏⁮‮‬⁮‮⁮‬‎‏⁪​⁪‏‎⁭‮.\u200C‪‮‏​⁪‭‏⁪‫⁯‪‫‭⁫‪⁫⁮‎​⁫⁯‬‮‮⁫‬⁮‍⁯‮‍‭‌⁭⁭‍‌‬⁬‮(_param0.\u206B‍‌⁬‏‎‏‫‭‍​​‭⁬‮⁮‌⁯‌‫‬‬‭‎​‏⁭⁬​⁫‍‌‫⁪‪⁪‪‍‭‪‮());
  }

  public static void \u202E⁯⁫⁪‮​‎‪⁭‎⁬⁫‎‮‬‫‏‬‍⁬​⁬​⁬⁬⁪⁯⁫‌⁯⁫‭‫‍‫‬‪⁪⁭‬‮(
    IDictionary _param0,
    IList _param1)
  {
    _param0[(object) 13] = (object) \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202D​⁪​‍⁬⁬‭⁮⁪‌‍‭‬‬​‍​​‎‌⁮‫‏⁭⁭‏‏‮⁯⁭‬‎⁫⁪⁭⁯⁫​‭‮(_param1);
  }

  public static IList \u202E⁮⁪⁮‍‎‌‎⁬⁭⁯‎‬⁭‏‭‎⁯⁯⁭‌‪‍‮⁯⁮‫⁫‏⁫‪⁪⁫‬‮⁯‫‫⁬‎‮(IDictionary _param0)
  {
    byte[] numArray = \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202E⁪⁮‭⁫‭⁯‭⁬⁯⁬‍‪⁪⁯‎‎⁯‪‌‮⁫‎‫⁭‫⁮⁮‪‫⁬⁬⁮⁬‌‎‪⁮‏‏‮(_param0, 13);
    return numArray != null ? \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206E‌‮⁪‬​‍‫‮​‭​⁬⁫​⁬‎⁮‪‭⁪‍⁮‬‪⁫​⁬‬⁪⁫⁮‌‪⁬⁫​⁮‎‌‮(numArray) : (IList) null;
  }

  public static byte[] \u202D​⁪​‍⁬⁬‭⁮⁪‌‍‭‬‬​‍​​‎‌⁮‫‏⁭⁭‏‏‮⁯⁭‬‎⁫⁪⁭⁯⁫​‭‮(IList _param0)
  {
    MemoryStream memoryStream = new MemoryStream();
    \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206F‫​‏‍‭‫‌‏‌​⁮​‮‮⁪​‬‭⁬‎‏⁫‌‬⁬‪⁪⁭‌‫‪‬⁫⁭⁯‮⁯⁬‮(_param0, false, (Stream) memoryStream);
    return memoryStream.ToArray();
  }

  public static IList \u206E‌‮⁪‬​‍‫‮​‭​⁬⁫​⁬‎⁮‪‭⁪‍⁮‬‪⁫​⁬‬⁪⁫⁮‌‪⁬⁫​⁮‎‌‮(byte[] _param0)
  {
    MemoryStream memoryStream = _param0 != null ? new MemoryStream(_param0, false) : throw new ArgumentNullException("extensionData");
    IList list = \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202A⁪‏‌‏‬‫‬‮‫⁫‫‪⁯‍⁬‮‫‭‌​⁪⁪⁯‮‫⁫‫⁯⁮‫‭⁬⁬⁯​‬⁫‫‮(false, (Stream) memoryStream);
    \u200E⁬‫‎⁫‪‭⁫‌‭‌⁭‏⁯‮‪‭⁪‬‎⁭‬‬⁪‌⁫⁮‮⁬⁪⁮⁮‎‪⁮⁪⁮⁮⁯⁬‮.\u206B⁯‭‫‎‏‏⁪‬‌⁬⁯⁫‭‍⁫‬‏⁮‭‎‮‏⁪‬‏‌‬‍‪‌⁪‍‭‎‍⁪‍‫‭‮(memoryStream);
    return list;
  }

  public static void \u206F‫​‏‍‭‫‌‏‌​⁮​‮‮⁪​‬‭⁬‎‏⁫‌‬⁬‪⁪⁭‌‫‪‬⁫⁭⁯‮⁯⁬‮(
    IList _param0,
    bool _param1,
    Stream _param2)
  {
    if (_param0 == null)
      throw new ArgumentNullException("supportedSignatureAlgorithms");
    if (_param0.Count < 1 || _param0.Count >= 32768)
      throw new ArgumentException("must have length from 1 to (2^15 - 1)", "supportedSignatureAlgorithms");
    int num = 2 * _param0.Count;
    \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u200F⁪‬‏‍⁭‬‫‬⁯‬‎‪⁪‮‫⁬‍‬⁪⁮‍‍‮‎‍⁬‮‪‏‭‬⁫‎‭‬‌‌​‭‮(num);
    \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u200D‫‫‏​​⁮‏‪⁫​⁫⁪⁯⁭‏‏⁫‭⁮⁮⁬‮‮⁪‭‭‪⁭‬‎‫‬‎‎⁪‫‫⁯‫‮(num, _param2);
    foreach (\u200D⁮‌‫⁯⁬‫‍‪‫‬‌‫‭‎‭⁬⁬‬‪‬⁯‍⁮‪‪‮⁪‪‬⁬⁪⁯​‬‍‍‍‌‎‮ obj in (IEnumerable) _param0)
    {
      if (!_param1 && obj.\u200B‭‭⁮⁬​⁫⁬‫‏‎​‮‌‌‌‭‏‪‍‌‬‬‫⁭‏⁫⁮⁮​⁯⁬‎‬‮​‭‏‫‎‮ == (byte) 0)
        throw new ArgumentException("SignatureAlgorithm.anonymous MUST NOT appear in the signature_algorithms extension");
      obj.\u206C‮⁯‌⁯‌⁭⁫‪‭​‪‫⁫⁪⁯⁭⁫‎⁬‫‫⁮‎‮⁬⁪‮‎‫‭⁪⁭⁫⁪‪⁪⁬‭‫‮(_param2);
    }
  }

  public static IList \u202A⁪‏‌‏‬‫‬‮‫⁫‫‪⁯‍⁬‮‫‭‌​⁪⁪⁯‮‫⁫‫⁯⁮‫‭⁬⁬⁯​‬⁫‫‮(
    bool _param0,
    Stream _param1)
  {
    int num1 = \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206F⁯‌⁯⁬​‭​‭⁮‭⁮‭‬‍⁭‍‎​⁯⁫​‮⁯‏‌⁪⁯​‭⁪⁬⁪‪⁫​‌⁫‎⁮‮(_param1);
    if (num1 < 2 || (num1 & 1) != 0)
      throw new \u206B‌⁭⁭⁭⁯​⁪‭‍⁮‭⁪‍‏‌⁬‫⁯‫‫‬‎⁭⁫‎⁪‌‏⁫⁮‪‬‮‬‏‎‏⁮‪‮((byte) 50);
    int num2 = num1 / 2;
    IList list = \u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u200C⁮‬‎⁪‌⁮‬​⁬⁭​‏⁮​‍‌⁮‮⁪⁪⁫‪‫‎⁮‎⁬​​‏⁪‪‍‬‪⁬⁫⁪‏‮(num2);
    for (int index = 0; index < num2; ++index)
    {
      \u200D⁮‌‫⁯⁬‫‍‪‫‬‌‫‭‎‭⁬⁬‬‪‬⁯‍⁮‪‪‮⁪‪‬⁬⁪⁯​‬‍‍‍‌‎‮ obj = \u200D⁮‌‫⁯⁬‫‍‪‫‬‌‫‭‎‭⁬⁬‬‪‬⁯‍⁮‪‪‮⁪‪‬⁬⁪⁯​‬‍‍‍‌‎‮.\u202B‪​⁪‍⁫‮‏‪‎‏‫⁮‫⁬‬⁭‏⁯⁭‮⁪‏‮⁯‪‏⁪‪‌‭⁭‪‮‏‭⁭‍‪⁪‮(_param1);
      if (!_param0 && obj.\u200B‭‭⁮⁬​⁫⁬‫‏‎​‮‌‌‌‭‏‪‍‌‬‬‫⁭‏⁫⁮⁮​⁯⁬‎‬‮​‭‏‫‎‮ == (byte) 0)
        throw new \u206B‌⁭⁭⁭⁯​⁪‭‍⁮‭⁪‍‏‌⁬‫⁯‫‫‬‎⁭⁫‎⁪‌‏⁫⁮‪‬‮‬‏‎‏⁮‪‮((byte) 47);
      list.Add((object) obj);
    }
    return list;
  }

  public static void \u206A‭‮‫⁯⁮⁯⁯​‏‪⁯‬‌⁭‏‫‏​⁪‪‏‎⁪​‭‬⁯‪‬​⁪⁯⁬⁮‭⁬‍⁫‮(
    IList _param0,
    \u200D⁮‌‫⁯⁬‫‍‪‫‬‌‫‭‎‭⁬⁬‬‪‬⁯‍⁮‪‪‮⁪‪‬⁬⁪⁯​‬‍‍‍‌‎‮ _param1)
  {
    if (_param0 == null)
      throw new ArgumentNullException("supportedSignatureAlgorithms");
    if (_param0.Count < 1 || _param0.Count >= 32768)
      throw new ArgumentException("must have length from 1 to (2^15 - 1)", "supportedSignatureAlgorithms");
    if (_param1 == null)
      throw new ArgumentNullException("signatureAlgorithm");
    if (_param1.\u200B‭‭⁮⁬​⁫⁬‫‏‎​‮‌‌‌‭‏‪‍‌‬‬‫⁭‏⁫⁮⁮​⁯⁬‎‬‮​‭‏‫‎‮ != (byte) 0)
    {
      foreach (\u200D⁮‌‫⁯⁬‫‍‪‫‬‌‫‭‎‭⁬⁬‬‪‬⁯‍⁮‪‪‮⁪‪‬⁬⁪⁯​‬‍‍‍‌‎‮ obj in (IEnumerable) _param0)
      {
        if ((int) obj.\u202C‭​‬‬⁭​‮‭​⁬⁫‬‏⁬‬⁭‏‏‍‏‮‌⁪‫‮‮⁪⁫‍‍⁫⁫⁪⁪⁬‌⁬⁬‮‮ == (int) _param1.\u202C‭​‬‬⁭​‮‭​⁬⁫‬‏⁬‬⁭‏‏‍‏‮‌⁪‫‮‮⁪⁫‍‍⁫⁫⁪⁪⁬‌⁬⁬‮‮ && (int) obj.\u200B‭‭⁮⁬​⁫⁬‫‏‎​‮‌‌‌‭‏‪‍‌‬‬‫⁭‏⁫⁮⁮​⁯⁬‎‬‮​‭‏‫‎‮ == (int) _param1.\u200B‭‭⁮⁬​⁫⁬‫‏‎​‮‌‌‌‭‏‪‍‌‬‬‫⁭‏⁫⁮⁮​⁯⁬‎‬‮​‭‏‫‎‮)
          return;
      }
    }
    throw new \u206B‌⁭⁭⁭⁯​⁪‭‍⁮‭⁪‍‏‌⁬‫⁯‫‫‬‎⁭⁫‎⁪‌‏⁫⁮‪‬‮‬‏‎‏⁮‪‮((byte) 47);
  }

  public static byte[] \u206C‫‌​‪​‪‍‫‏‭⁯‌‍​‮‮‎‌⁪‮‭⁫‌‌‪‮‏⁮‫⁫⁬‌‪‫​‮‏‏⁬‮(
    \u200B⁮‫‎‪‍⁬‍‎‪‫‎‭⁪⁪⁬‫⁬‍⁭‎‎⁯⁫​⁫‫⁯⁯​⁪⁯‫⁮‏⁯⁪⁮⁬‫‮ _param0,
    byte[] _param1,
    string _param2,
    byte[] _param3,
    int _param4)
  {
    if (_param0.\u200D⁯⁬​‬⁬⁮⁭⁭‎‏‮‭⁭‏​⁯‪⁭⁮⁭‪⁭⁭⁮​‍‪‬⁪⁭⁪⁫‬‬‏⁫⁪‏⁭‮.\u200E⁯‮‍​⁪⁬‫‫‏⁯⁪‍‬⁬⁮‭‬‏‍‍‫⁫⁪⁭⁯‬‭‪⁮⁯‌‮‌‍‎⁫‫‌‭‮)
      throw new InvalidOperationException("No PRF available for SSLv3 session");
    byte[] numArray1 = \u200C‍‌‪⁯⁫⁬⁭‏‫‍⁮‭‬‏‬⁬⁬⁪⁮⁬⁯⁫⁫‫‎‭​‬‭‏‭⁬⁮‫⁯⁭⁪‭‫‮.\u202E‫‪⁭‍​‌‬⁯⁬‏‪⁪⁯‭⁭​‍⁮‎‬‌‏⁭⁯‌⁬‮​‭‭⁮‫‫⁮‍‭⁮⁬⁬‮(_param2);
    byte[] numArray2 = \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202A‫⁭⁪⁮⁫‌⁮‮⁮‏‭⁮‭⁬‎‎‬‬⁬‪‍‎⁬​‍⁫‌‍⁫‪⁪⁬⁫‎⁫⁮‍‎‬‮(numArray1, _param3);
    int num = _param0.\u206B‮‍⁯⁬‪⁭‬‏​‍⁯⁪‌‬​⁮‬⁪⁬‌‬​‮‫⁭⁫‎⁪‪⁭‏‬⁪‍⁬‪⁬‮⁮‮.\u200E‬⁮‍⁮​‏​⁬‭‏‮‎⁯‭‎‫‬⁫⁮⁫⁫⁯​⁮‫⁬⁬⁮‌⁯⁪‎⁭⁬⁪‎⁭‌⁫‮;
    if (num == 0)
      return \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202A‬‍‍‫⁬⁯⁬‎‫​⁮⁭⁮‬⁮⁯‬⁪‬⁬​⁭⁪⁬⁬‎‎‏⁬⁪⁭‌​⁬‪‌‪⁯‭‮(_param1, numArray1, numArray2, _param4);
    \u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮ obj = \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u200E‪‏⁭‏‏⁬‍⁪⁬‫‫‮⁪‍⁪⁫‬‍⁮​⁪‮‭‍‭⁭‮‬‍‪‎⁭‫⁭⁪‬‍‮‮‮(num);
    byte[] numArray3 = new byte[_param4];
    byte[] numArray4 = _param1;
    byte[] numArray5 = numArray2;
    byte[] numArray6 = numArray3;
    \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206B‭‏⁪⁮‫​⁭​‬‫⁫‮⁪‏⁫⁭‮‭‮⁯‫⁯⁪​‌​‍‏‏‏‮‎‮​‮‬⁯‮‮‮(obj, numArray4, numArray5, numArray6);
    return numArray3;
  }

  public static byte[] \u202A‬‍‍‫⁬⁯⁬‎‫​⁮⁭⁮‬⁮⁯‬⁪‬⁬​⁭⁪⁬⁬‎‎‏⁬⁪⁭‌​⁬‪‌‪⁯‭‮(
    byte[] _param0,
    string _param1,
    byte[] _param2,
    int _param3)
  {
    byte[] numArray1 = \u200C‍‌‪⁯⁫⁬⁭‏‫‍⁮‭‬‏‬⁬⁬⁪⁮⁬⁯⁫⁫‫‎‭​‬‭‏‭⁬⁮‫⁯⁭⁪‭‫‮.\u202E‫‪⁭‍​‌‬⁯⁬‏‪⁪⁯‭⁭​‍⁮‎‬‌‏⁭⁯‌⁬‮​‭‭⁮‫‫⁮‍‭⁮⁬⁬‮(_param1);
    byte[] numArray2 = \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202A‫⁭⁪⁮⁫‌⁮‮⁮‏‭⁮‭⁬‎‎‬‬⁬‪‍‎⁬​‍⁫‌‍⁫‪⁪⁬⁫‎⁫⁮‍‎‬‮(numArray1, _param2);
    return \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202A‬‍‍‫⁬⁯⁬‎‫​⁮⁭⁮‬⁮⁯‬⁪‬⁬​⁭⁪⁬⁬‎‎‏⁬⁪⁭‌​⁬‪‌‪⁯‭‮(_param0, numArray1, numArray2, _param3);
  }

  internal static byte[] \u202A‬‍‍‫⁬⁯⁬‎‫​⁮⁭⁮‬⁮⁯‬⁪‬⁬​⁭⁪⁬⁬‎‎‏⁬⁪⁭‌​⁬‪‌‪⁯‭‮(
    byte[] _param0,
    byte[] _param1,
    byte[] _param2,
    int _param3)
  {
    int length = (_param0.Length + 1) / 2;
    byte[] destinationArray1 = new byte[length];
    byte[] destinationArray2 = new byte[length];
    Array.Copy((Array) _param0, 0, (Array) destinationArray1, 0, length);
    Array.Copy((Array) _param0, _param0.Length - length, (Array) destinationArray2, 0, length);
    byte[] numArray1 = new byte[_param3];
    byte[] numArray2 = new byte[_param3];
    \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206B‭‏⁪⁮‫​⁭​‬‫⁫‮⁪‏⁫⁭‮‭‮⁯‫⁯⁪​‌​‍‏‏‏‮‎‮​‮‬⁯‮‮‮(\u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202A⁬⁫‭⁮⁯⁯⁯‫‌⁮⁮‫‬​‍⁯⁯‮‬⁫‪‎‌‪‍⁭​‮‮⁭‬‏​‪⁪⁮⁭‬⁫‮((byte) 1), destinationArray1, _param2, numArray1);
    \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206B‭‏⁪⁮‫​⁭​‬‫⁫‮⁪‏⁫⁭‮‭‮⁯‫⁯⁪​‌​‍‏‏‏‮‎‮​‮‬⁯‮‮‮(\u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202A⁬⁫‭⁮⁯⁯⁯‫‌⁮⁮‫‬​‍⁯⁯‮‬⁫‪‎‌‪‍⁭​‮‮⁭‬‏​‪⁪⁮⁭‬⁫‮((byte) 2), destinationArray2, _param2, numArray2);
    for (int index = 0; index < _param3; ++index)
      numArray1[index] ^= numArray2[index];
    return numArray1;
  }

  internal static byte[] \u202A‫⁭⁪⁮⁫‌⁮‮⁮‏‭⁮‭⁬‎‎‬‬⁬‪‍‎⁬​‍⁫‌‍⁫‪⁪⁬⁫‎⁫⁮‍‎‬‮(
    byte[] _param0,
    byte[] _param1)
  {
    byte[] destinationArray = new byte[_param0.Length + _param1.Length];
    Array.Copy((Array) _param0, 0, (Array) destinationArray, 0, _param0.Length);
    Array.Copy((Array) _param1, 0, (Array) destinationArray, _param0.Length, _param1.Length);
    return destinationArray;
  }

  internal static void \u206B‭‏⁪⁮‫​⁭​‬‫⁫‮⁪‏⁫⁭‮‭‮⁯‫⁯⁪​‌​‍‏‏‏‮‎‮​‮‬⁯‮‮‮(
    \u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮ _param0,
    byte[] _param1,
    byte[] _param2,
    byte[] _param3)
  {
    \u206F⁫‫‭‮⁬⁫‫‫⁬‮​‏‍‏⁬‍⁮‏‭‫‏​‏⁬‮‌⁪⁬‎⁮‬⁮‎⁫‎⁮​‭⁫‮ obj = new \u206F⁫‫‭‮⁬⁫‫‫⁬‮​‏‍‏⁬‍⁮‏‭‫‏​‏⁬‮‌⁪⁬‎⁮‬⁮‎⁫‎⁮​‭⁫‮(_param0);
    obj.\u206A⁭⁫‪‫‬⁪‎​⁯‎‪⁬⁭​‍⁪⁫‌⁪‫⁯​⁪⁫⁫‪‬⁬‏‫‮⁬‬⁭⁬⁫‍⁮‮((\u202B⁭⁮‬‎⁪‬⁪‬⁮⁪‮‬‍‎⁮‎⁫‎​‌⁫⁪‭‬‮‏‮​⁮‌‌‬‌⁯‮⁫‮‬⁫‮) new \u200C⁭‎‪‬⁪⁭⁮‌​⁯‫⁪⁭⁬⁭‌‎⁮⁮⁯⁯​‏‎⁮‌‬⁪⁭⁬​⁯‏⁪‌‮‍⁮‮(_param1));
    byte[] numArray1 = _param2;
    int val1 = _param0.\u202D‏‬‪⁬‪‌⁭‌​‪‍‭‮‪‫‌⁫‌​⁭‫⁭‫‍⁫⁪⁪‫‮‌⁮⁭⁪‭​‫‍‌‭‮();
    int num = (_param3.Length + val1 - 1) / val1;
    byte[] numArray2 = new byte[obj.\u202D​⁮‍⁭⁫‍‌​‮⁫​​⁭⁯⁬⁪‫‬‭‪‫‭⁫⁬‫‭‬⁯‭⁮‎‍‫‌‎⁪⁭⁭‫‮()];
    byte[] sourceArray = new byte[obj.\u202D​⁮‍⁭⁫‍‌​‮⁫​​⁭⁯⁬⁪‫‬‭‪‫‭⁫⁬‫‭‬⁯‭⁮‎‍‫‌‎⁪⁭⁭‫‮()];
    for (int index = 0; index < num; ++index)
    {
      obj.\u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(numArray1, 0, numArray1.Length);
      obj.\u200F‏‏‬‫​⁮‬⁫‌‌⁮⁬‏⁭‭‌⁯⁪​‍​⁮⁫‮‫⁮‌‎‪⁬⁯⁪‪⁬‫⁫⁮‪⁭‮(numArray2, 0);
      numArray1 = numArray2;
      obj.\u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(numArray1, 0, numArray1.Length);
      obj.\u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(_param2, 0, _param2.Length);
      obj.\u200F‏‏‬‫​⁮‬⁫‌‌⁮⁬‏⁭‭‌⁯⁪​‍​⁮⁫‮‫⁮‌‎‪⁬⁯⁪‪⁬‫⁫⁮‪⁭‮(sourceArray, 0);
      Array.Copy((Array) sourceArray, 0, (Array) _param3, val1 * index, Math.Min(val1, _param3.Length - val1 * index));
    }
  }

  internal static void \u202A‭⁮⁪‏‏‬‪‭‫‎‮‭‏⁮⁯​⁭⁪‫‎‍‫‮⁯⁫⁫‍‫⁫‪‬⁪​⁯‏‭‬‮‮(
    \u202B‮⁭‏‮⁭‭⁭‌‍‎‎‍‭‌⁮​​⁭‌‮​‭⁬​‏‍⁯⁪⁭‏​⁪‏⁭⁭‪‫⁫⁫‮ _param0,
    int _param1)
  {
    \u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮ obj1 = _param0.\u202E⁫‬‌⁯⁭‬​⁪⁮​​⁪‏‫⁭⁪⁯‎⁯​‪‏‫‪⁭⁭⁯​⁮‮⁯‏‫‏‮⁯‏‎‭‮.\u202E⁭‍⁯⁫⁯‏⁯‍‬‮⁬‍⁯‌⁪‬‌⁫‎⁭⁭‫‭‪‏⁮​‍‍‎⁪​‪⁪⁮⁪‏‫‬‮;
    if (obj1 == null)
      return;
    \u200D⁮‏⁭⁪‪​⁭‌‌‮‎‎⁮‬‌⁫⁭‭‭‍⁮⁮‬⁭⁪‪​‭‍‍‌‍‬⁬‭‎‪⁭‍‮ obj2 = obj1.\u202A⁯‭‮‪⁪‭‭​⁭⁬‎‏‎‮‭‌⁬⁮⁭⁮⁯‏‏⁫⁪‫⁬‬‍⁯‌‏‭⁫‮⁮‮‮‬‮(\u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u200B‭‬​‍‮​‎‪⁬‍‮‌⁮⁬⁬⁬‪⁪‮‪⁯⁬‌⁯‍⁮⁯⁮⁬‏‬‍‮⁬‬‬⁫⁭‍‮);
    if (obj2 != null && ((int) \u206E‌⁪​‏⁯‎⁯‎‏‭⁫‫⁮‍⁪⁬‮‫⁮⁯‬⁭‫​‬‬‏⁯‍‏​⁪⁮⁭‌‎⁪‌‬‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) obj2).\u202C⁭‌‮‌⁫‮⁮‌‮‮⁯‎‪‍⁬‪⁯‍⁪⁭⁯‬‌⁫⁯⁫‎‫⁪⁫⁬⁫⁯⁮‪‭‮‍‎‮()[0] & _param1) != _param1)
      throw new \u206B‌⁭⁭⁭⁯​⁪‭‍⁮‭⁪‍‏‌⁬‫⁯‫‫‬‎⁭⁫‎⁪‌‏⁫⁮‪‬‮‬‏‎‏⁮‪‮((byte) 46);
  }

  internal static byte[] \u200B‌‪⁯‏‏​⁬⁯‭⁪‏‭‪⁭‮‏‌‮‮‬‌‭​​⁯‪‭‪⁮⁮⁫⁪‎⁫⁬‭‮‍‍‮(
    \u200B⁮‫‎‪‍⁬‍‎‪‫‎‭⁪⁪⁬‫⁬‍⁭‎‎⁯⁫​⁫‫⁯⁯​⁪⁯‫⁮‏⁯⁪⁮⁬‫‮ _param0,
    int _param1)
  {
    \u206E‮⁯‪⁯​​⁭⁭‮‌⁫‌⁪‫‬⁫⁪‬‭‭‌⁯‏‌‍‏‎‬‭‎⁫‫‪‌⁭⁫‌‏⁫‮ obj = _param0.\u206B‮‍⁯⁬‪⁭‬‏​‍⁯⁪‌‬​⁮‬⁪⁬‌‬​‮‫⁭⁫‎⁪‪⁭‏‬⁪‍⁬‪⁬‮⁮‮;
    byte[] numArray1 = obj.\u206E‍‮‏‫⁪⁪⁮⁫‮⁯‍‎⁪⁬‬⁫‮‫⁯‍⁬‏⁮‍‫‬‭‭‬⁪‮‪‬‮‌‬‬⁮‏‮;
    byte[] numArray2 = \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202A‫⁭⁪⁮⁫‌⁮‮⁮‏‭⁮‭⁬‎‎‬‬⁬‪‍‎⁬​‍⁫‌‍⁫‪⁪⁬⁫‎⁫⁮‍‎‬‮(obj.\u202D‌‎‭‏‌‎‫‍⁯‮​‭⁪⁯‭‎‮‏‍⁬⁪⁯‬​‎​‭⁯​⁭⁮‪‭‍⁬‎‬‎‪‮, obj.\u200D‫⁬⁭‏⁫⁭⁭‬‬⁪‮‍‬‭‫​‭‫‭‫‍‪‮‍⁬⁪⁯‫‪‏⁮‎‭⁯‮⁬​‌⁫‮);
    return \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u200E⁯‮‍​⁪⁬‫‫‏⁯⁪‍‬⁬⁮‭‬‏‍‍‫⁫⁪⁭⁯‬‭‪⁮⁯‌‮‌‍‎⁫‫‌‭‮(_param0) ? \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206B⁮‏⁬‪⁯​‪‌‎​‭⁪⁮⁫‎‏⁫‍‮‭‌​‭⁭‌‫‎‫⁬⁫⁮‌‫‬⁬‎⁯‫⁯‮(numArray1, numArray2, _param1) : \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206C‫‌​‪​‪‍‫‏‭⁯‌‍​‮‮‎‌⁪‮‭⁫‌‌‪‮‏⁮‫⁫⁬‌‪‫​‮‏‏⁬‮(_param0, numArray1, "key expansion", numArray2, _param1);
  }

  internal static byte[] \u206B⁮‏⁬‪⁯​‪‌‎​‭⁪⁮⁫‎‏⁫‍‮‭‌​‭⁭‌‫‎‫⁬⁫⁮‌‫‬⁬‎⁯‫⁯‮(
    byte[] _param0,
    byte[] _param1,
    int _param2)
  {
    \u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮ obj1 = \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202A⁬⁫‭⁮⁯⁯⁯‫‌⁮⁮‫‬​‍⁯⁯‮‬⁫‪‎‌‪‍⁭​‮‮⁭‬‏​‪⁪⁮⁭‬⁫‮((byte) 1);
    \u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮ obj2 = \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202A⁬⁫‭⁮⁯⁯⁯‫‌⁮⁮‫‬​‍⁯⁯‮‬⁫‪‎‌‪‍⁭​‮‮⁭‬‏​‪⁪⁮⁭‬⁫‮((byte) 2);
    int num1 = obj1.\u202D‏‬‪⁬‪‌⁭‌​‪‍‭‮‪‫‌⁫‌​⁭‫⁭‫‍⁫⁪⁪‫‮‌⁮⁭⁪‭​‫‍‌‭‮();
    byte[] numArray1 = new byte[obj2.\u202D‏‬‪⁬‪‌⁭‌​‪‍‭‮‪‫‌⁫‌​⁭‫⁭‫‍⁫⁪⁪‫‮‌⁮⁭⁪‭​‫‍‌‭‮()];
    byte[] numArray2 = new byte[_param2 + num1];
    int index = 0;
    int num2 = 0;
    while (num2 < _param2)
    {
      byte[] numArray3 = \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206A⁫‍​⁭‪‫‍⁮⁭⁫‍‎‬‏‎⁮‏⁪⁬‭‮‏‬‭⁬‬⁭‎⁬⁮⁯‌‪⁫‏‎‭⁮‍‮[index];
      obj2.\u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(numArray3, 0, numArray3.Length);
      obj2.\u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(_param0, 0, _param0.Length);
      obj2.\u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(_param1, 0, _param1.Length);
      obj2.\u200F‏‏‬‫​⁮‬⁫‌‌⁮⁬‏⁭‭‌⁯⁪​‍​⁮⁫‮‫⁮‌‎‪⁬⁯⁪‪⁬‫⁫⁮‪⁭‮(numArray1, 0);
      obj1.\u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(_param0, 0, _param0.Length);
      obj1.\u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(numArray1, 0, numArray1.Length);
      obj1.\u200F‏‏‬‫​⁮‬⁫‌‌⁮⁬‏⁭‭‌⁯⁪​‍​⁮⁫‮‫⁮‌‎‪⁬⁯⁪‪⁬‫⁫⁮‪⁭‮(numArray2, num2);
      num2 += num1;
      ++index;
    }
    return \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u202D⁪‎⁭⁬​⁮⁪‮⁭‏⁯⁪‍⁭‍‭⁮‮⁮‍‮⁪⁮‭⁮‌​⁪‭‪‌‪‍‍‭⁫‎​⁬‮(numArray2, 0, _param2);
  }

  internal static byte[] \u200C‮‎‎‫⁫‮‮‍‎⁭⁬‫‍‭‎‪⁭‌‭‍​⁫‭⁭‭‮‎​‫⁫⁯‮‍​⁭⁫‍​⁭‮(
    \u200B⁮‫‎‪‍⁬‍‎‪‫‎‭⁪⁪⁬‫⁬‍⁭‎‎⁯⁫​⁫‫⁯⁯​⁪⁯‫⁮‏⁯⁪⁮⁬‫‮ _param0,
    byte[] _param1)
  {
    \u206E‮⁯‪⁯​​⁭⁭‮‌⁫‌⁪‫‬⁫⁪‬‭‭‌⁯‏‌‍‏‎‬‭‎⁫‫‪‌⁭⁫‌‏⁫‮ obj = _param0.\u206B‮‍⁯⁬‪⁭‬‏​‍⁯⁪‌‬​⁮‬⁪⁬‌‬​‮‫⁭⁫‎⁪‪⁭‏‬⁪‍⁬‪⁬‮⁮‮;
    byte[] numArray = obj.\u200D⁮⁯⁪⁮⁭⁫⁯‪‫⁯‫‍‏‬‪‏‌‌‮‬‪‬​‭‪​‬‏‍‭⁯‮⁪‪⁭⁭‪‌⁬‮ ? obj.\u206E​‬⁭‬‌‍⁪⁮⁪⁮‬⁬⁯‫‌⁭⁮⁪⁮‌⁭⁯‪⁮‮‌‎‭‌‌⁮‭‏‪‫⁮‭‍⁯‮ : \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202A‫⁭⁪⁮⁫‌⁮‮⁮‏‭⁮‭⁬‎‎‬‬⁬‪‍‎⁬​‍⁫‌‍⁫‪⁪⁬⁫‎⁫⁮‍‎‬‮(obj.\u200D‫⁬⁭‏⁫⁭⁭‬‬⁪‮‍‬‭‫​‭‫‭‫‍‪‮‍⁬⁪⁯‫‪‏⁮‎‭⁯‮⁬​‌⁫‮, obj.\u202D‌‎‭‏‌‎‫‍⁯‮​‭⁪⁯‭‎‮‏‍⁬⁪⁯‬​‎​‭⁯​⁭⁮‪‭‍⁬‎‬‎‪‮);
    if (\u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u200E⁯‮‍​⁪⁬‫‫‏⁯⁪‍‬⁬⁮‭‬‏‍‍‫⁫⁪⁭⁯‬‭‪⁮⁯‌‮‌‍‎⁫‫‌‭‮(_param0))
      return \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202B⁯⁮‬‍‎‪‭⁮‪‌‭⁮‏‍⁫‌‭‫⁯​‪‬⁪⁭​‍‍​‏‌​‬‌‌⁪‮⁬⁮⁮‮(_param1, numArray);
    string str = obj.\u200D⁮⁯⁪⁮⁭⁫⁯‪‫⁯‫‍‏‬‪‏‌‌‮‬‪‬​‭‪​‬‏‍‭⁯‮⁪‪⁭⁭‪‌⁬‮ ? \u206C​‌‮‬⁪⁮‌⁪‎⁪⁭‮‭‍⁯‮⁫‍‫‍‌‭​⁪‌⁪‫‫‬‬⁮⁫‬‪⁮‪‏‪‮‮.\u206B⁮‮‭‬⁯⁮⁬‪⁪⁬‮‬‫‏⁪⁫⁯‍⁬​‌‍‪⁫⁯‍⁯⁭⁫⁫‍⁭‌⁫‏⁭‮‏‬‮ : "master secret";
    return \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206C‫‌​‪​‪‍‫‏‭⁯‌‍​‮‮‎‌⁪‮‭⁫‌‌‪‮‏⁮‫⁫⁬‌‪‫​‮‏‏⁬‮(_param0, _param1, str, numArray, 48);
  }

  internal static byte[] \u202B⁯⁮‬‍‎‪‭⁮‪‌‭⁮‏‍⁫‌‭‫⁯​‪‬⁪⁭​‍‍​‏‌​‬‌‌⁪‮⁬⁮⁮‮(
    byte[] _param0,
    byte[] _param1)
  {
    \u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮ obj1 = \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202A⁬⁫‭⁮⁯⁯⁯‫‌⁮⁮‫‬​‍⁯⁯‮‬⁫‪‎‌‪‍⁭​‮‮⁭‬‏​‪⁪⁮⁭‬⁫‮((byte) 1);
    \u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮ obj2 = \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202A⁬⁫‭⁮⁯⁯⁯‫‌⁮⁮‫‬​‍⁯⁯‮‬⁫‪‎‌‪‍⁭​‮‮⁭‬‏​‪⁪⁮⁭‬⁫‮((byte) 2);
    int num1 = obj1.\u202D‏‬‪⁬‪‌⁭‌​‪‍‭‮‪‫‌⁫‌​⁭‫⁭‫‍⁫⁪⁪‫‮‌⁮⁭⁪‭​‫‍‌‭‮();
    byte[] numArray1 = new byte[obj2.\u202D‏‬‪⁬‪‌⁭‌​‪‍‭‮‪‫‌⁫‌​⁭‫⁭‫‍⁫⁪⁪‫‮‌⁮⁭⁪‭​‫‍‌‭‮()];
    byte[] numArray2 = new byte[num1 * 3];
    int num2 = 0;
    for (int index = 0; index < 3; ++index)
    {
      byte[] numArray3 = \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206A⁫‍​⁭‪‫‍⁮⁭⁫‍‎‬‏‎⁮‏⁪⁬‭‮‏‬‭⁬‬⁭‎⁬⁮⁯‌‪⁫‏‎‭⁮‍‮[index];
      obj2.\u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(numArray3, 0, numArray3.Length);
      obj2.\u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(_param0, 0, _param0.Length);
      obj2.\u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(_param1, 0, _param1.Length);
      obj2.\u200F‏‏‬‫​⁮‬⁫‌‌⁮⁬‏⁭‭‌⁯⁪​‍​⁮⁫‮‫⁮‌‎‪⁬⁯⁪‪⁬‫⁫⁮‪⁭‮(numArray1, 0);
      obj1.\u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(_param0, 0, _param0.Length);
      obj1.\u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(numArray1, 0, numArray1.Length);
      obj1.\u200F‏‏‬‫​⁮‬⁫‌‌⁮⁬‏⁭‭‌⁯⁪​‍​⁮⁫‮‫⁮‌‎‪⁬⁯⁪‪⁬‫⁫⁮‪⁭‮(numArray2, num2);
      num2 += num1;
    }
    return numArray2;
  }

  internal static byte[] \u206C⁫‏⁯‮‬‭⁪‮⁯‎‌⁯⁪⁭‪‮⁮‬⁯⁭⁯‪‪⁪‭⁯⁭⁫‌⁮‪‎‍‎‮‍‍⁪‍‮(
    \u200B⁮‫‎‪‍⁬‍‎‪‫‎‭⁪⁪⁬‫⁬‍⁭‎‎⁯⁫​⁫‫⁯⁯​⁪⁯‫⁮‏⁯⁪⁮⁬‫‮ _param0,
    string _param1,
    byte[] _param2)
  {
    if (\u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u200E⁯‮‍​⁪⁬‫‫‏⁯⁪‍‬⁬⁮‭‬‏‍‍‫⁫⁪⁭⁯‬‭‪⁮⁯‌‮‌‍‎⁫‫‌‭‮(_param0))
      return _param2;
    \u206E‮⁯‪⁯​​⁭⁭‮‌⁫‌⁪‫‬⁫⁪‬‭‭‌⁯‏‌‍‏‎‬‭‎⁫‫‪‌⁭⁫‌‏⁫‮ obj = _param0.\u206B‮‍⁯⁬‪⁭‬‏​‍⁯⁪‌‬​⁮‬⁪⁬‌‬​‮‫⁭⁫‎⁪‪⁭‏‬⁪‍⁬‪⁬‮⁮‮;
    byte[] numArray = obj.\u206E‍‮‏‫⁪⁪⁮⁫‮⁯‍‎⁪⁬‬⁫‮‫⁯‍⁬‏⁮‍‫‬‭‭‬⁪‮‪‬‮‌‬‬⁮‏‮;
    int num = obj.\u202A⁯⁭​⁯‌‌‭⁪‌‭‪‍‫‍‏‏‎⁪⁪⁯​⁬⁪‎⁮⁮⁯⁮‫‎‮‍​⁯‏⁪⁪⁬⁫‮;
    return \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206C‫‌​‪​‪‍‫‏‭⁯‌‍​‮‮‎‌⁪‮‭⁫‌‌‪‮‏⁮‫⁫⁬‌‪‫​‮‏‏⁬‮(_param0, numArray, _param1, _param2, num);
  }

  public static \u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮ \u202A⁬⁫‭⁮⁯⁯⁯‫‌⁮⁮‫‬​‍⁯⁯‮‬⁫‪‎‌‪‍⁭​‮‮⁭‬‏​‪⁪⁮⁭‬⁫‮(
    byte _param0)
  {
    switch (_param0)
    {
      case 1:
        return (\u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮) new \u206D‫⁪‬⁯⁬‌‌‮​⁬⁮‎‍⁮‍⁯⁯⁪⁮‮‍‮​⁯‬‎⁭‫⁪⁫​‬​⁯⁮‌⁬⁭‫‮();
      case 2:
        return (\u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮) new \u202B‌⁯​⁯⁯‭‮⁮‪‎⁫‌‫‮⁭‌‎‌⁬‮‎‌⁫⁯‭‍‏‏‬‎‌⁪‏⁫‮‌‌‍⁭‮();
      case 3:
        return (\u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮) new \u200C‍‏‌⁫‌‫‎‏​⁬⁯​⁪‎⁫‭‎​‍‮‮‬‪⁬‏​‍‭‎‏‌‬‍‎‏‭⁪‫‏‮();
      case 4:
        return (\u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮) new \u206B‎‎⁪‪⁫‍‮‌‪‬‫‫‬⁭⁫⁮‏‫‪​‌⁮‎⁫‍⁬⁬‫‌‌⁬⁮‏‎‏‬⁯⁮⁫‮();
      case 5:
        return (\u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮) new \u202E⁬‬‮‮‫⁬⁬⁫‍‌‮⁭‮⁭⁭⁮⁫​​​‬⁬⁭‍⁫‬⁯‮‏‍⁮⁪‪⁪⁯‮⁯⁬⁫‮();
      case 6:
        return (\u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮) new \u200B⁬‏‎‍‭⁮‭‮⁯‮⁮‎‌⁯‭‫‏‭‏‏‍‎‭​‌‮⁬⁯⁬‭‪‍‌⁭​‍⁮‪‬‮();
      default:
        throw new ArgumentException("unknown HashAlgorithm", "hashAlgorithm");
    }
  }

  public static \u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮ \u202A⁬⁫‭⁮⁯⁯⁯‫‌⁮⁮‫‬​‍⁯⁯‮‬⁫‪‎‌‪‍⁭​‮‮⁭‬‏​‪⁪⁮⁭‬⁫‮(
    \u200D⁮‌‫⁯⁬‫‍‪‫‬‌‫‭‎‭⁬⁬‬‪‬⁯‍⁮‪‪‮⁪‪‬⁬⁪⁯​‬‍‍‍‌‎‮ _param0)
  {
    return _param0 != null ? \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202A⁬⁫‭⁮⁯⁯⁯‫‌⁮⁮‫‬​‍⁯⁯‮‬⁫‪‎‌‪‍⁭​‮‮⁭‬‏​‪⁪⁮⁭‬⁫‮(_param0.\u202C‭​‬‬⁭​‮‭​⁬⁫‬‏⁬‬⁭‏‏‍‏‮‌⁪‫‮‮⁪⁫‍‍⁫⁫⁪⁪⁬‌⁬⁬‮‮) : (\u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮) new \u200F‏‍‫‬‎⁮‭‎⁯‬‏‬⁯‍⁭⁬‫‪‏‪‬‪⁫⁯⁮‪⁪⁯⁬⁪‫‏‬‫‪⁭⁬‭‮();
  }

  public static \u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮ \u200E⁫⁫⁭‌⁬‏‍⁭‫⁬‌​⁯‫‬‏⁮⁪‪‏⁮‪⁯⁪​‏​⁬‮‪⁪⁭‎‍⁯​‍‮‎‮(
    byte _param0,
    \u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮ _param1)
  {
    switch (_param0)
    {
      case 1:
        return (\u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮) new \u206D‫⁪‬⁯⁬‌‌‮​⁬⁮‎‍⁮‍⁯⁯⁪⁮‮‍‮​⁯‬‎⁭‫⁪⁫​‬​⁯⁮‌⁬⁭‫‮((\u206D‫⁪‬⁯⁬‌‌‮​⁬⁮‎‍⁮‍⁯⁯⁪⁮‮‍‮​⁯‬‎⁭‫⁪⁫​‬​⁯⁮‌⁬⁭‫‮) _param1);
      case 2:
        return (\u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮) new \u202B‌⁯​⁯⁯‭‮⁮‪‎⁫‌‫‮⁭‌‎‌⁬‮‎‌⁫⁯‭‍‏‏‬‎‌⁪‏⁫‮‌‌‍⁭‮((\u202B‌⁯​⁯⁯‭‮⁮‪‎⁫‌‫‮⁭‌‎‌⁬‮‎‌⁫⁯‭‍‏‏‬‎‌⁪‏⁫‮‌‌‍⁭‮) _param1);
      case 3:
        return (\u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮) new \u200C‍‏‌⁫‌‫‎‏​⁬⁯​⁪‎⁫‭‎​‍‮‮‬‪⁬‏​‍‭‎‏‌‬‍‎‏‭⁪‫‏‮((\u200C‍‏‌⁫‌‫‎‏​⁬⁯​⁪‎⁫‭‎​‍‮‮‬‪⁬‏​‍‭‎‏‌‬‍‎‏‭⁪‫‏‮) _param1);
      case 4:
        return (\u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮) new \u206B‎‎⁪‪⁫‍‮‌‪‬‫‫‬⁭⁫⁮‏‫‪​‌⁮‎⁫‍⁬⁬‫‌‌⁬⁮‏‎‏‬⁯⁮⁫‮((\u206B‎‎⁪‪⁫‍‮‌‪‬‫‫‬⁭⁫⁮‏‫‪​‌⁮‎⁫‍⁬⁬‫‌‌⁬⁮‏‎‏‬⁯⁮⁫‮) _param1);
      case 5:
        return (\u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮) new \u202E⁬‬‮‮‫⁬⁬⁫‍‌‮⁭‮⁭⁭⁮⁫​​​‬⁬⁭‍⁫‬⁯‮‏‍⁮⁪‪⁪⁯‮⁯⁬⁫‮((\u202E⁬‬‮‮‫⁬⁬⁫‍‌‮⁭‮⁭⁭⁮⁫​​​‬⁬⁭‍⁫‬⁯‮‏‍⁮⁪‪⁪⁯‮⁯⁬⁫‮) _param1);
      case 6:
        return (\u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮) new \u200B⁬‏‎‍‭⁮‭‮⁯‮⁮‎‌⁯‭‫‏‭‏‏‍‎‭​‌‮⁬⁯⁬‭‪‍‌⁭​‍⁮‪‬‮((\u200B⁬‏‎‍‭⁮‭‮⁯‮⁮‎‌⁯‭‫‏‭‏‏‍‎‭​‌‮⁬⁯⁬‭‪‍‌⁭​‍⁮‪‬‮) _param1);
      default:
        throw new ArgumentException("unknown HashAlgorithm", "hashAlgorithm");
    }
  }

  public static \u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮ \u200E‪‏⁭‏‏⁬‍⁪⁬‫‫‮⁪‍⁪⁫‬‍⁮​⁪‮‭‍‭⁭‮‬‍‪‎⁭‫⁭⁪‬‍‮‮‮(
    int _param0)
  {
    return _param0 == 0 ? (\u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮) new \u200F‏‍‫‬‎⁮‭‎⁯‬‏‬⁯‍⁭⁬‫‪‏‪‬‪⁫⁯⁮‪⁪⁯⁬⁪‫‏‬‫‪⁭⁬‭‮() : \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202A⁬⁫‭⁮⁯⁯⁯‫‌⁮⁮‫‬​‍⁯⁯‮‬⁫‪‎‌‪‍⁭​‮‮⁭‬‏​‪⁪⁮⁭‬⁫‮(\u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206F‌⁫⁭‎⁬‮‮‏⁪⁫‎⁯​⁬‮⁬‭‫⁬​⁮​‪⁬‭‪‭⁭‪⁬⁪⁬⁬⁪‬‪⁭‍⁫‮(_param0));
  }

  public static \u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮ \u202E‫‏⁮‏⁯⁪‭⁫‬‬‌‪⁬⁬​‍⁯⁯‬⁪⁪‌‬‬⁮⁯‪‎‎⁬⁫⁪‍⁯⁪‍⁪‭⁫‮(
    int _param0,
    \u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮ _param1)
  {
    return _param0 == 0 ? (\u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮) new \u200F‏‍‫‬‎⁮‭‎⁯‬‏‬⁯‍⁭⁬‫‪‏‪‬‪⁫⁯⁮‪⁪⁯⁬⁪‫‏‬‫‪⁭⁬‭‮((\u200F‏‍‫‬‎⁮‭‎⁯‬‏‬⁯‍⁭⁬‫‪‏‪‬‪⁫⁯⁮‪⁪⁯⁬⁪‫‏‬‫‪⁭⁬‭‮) _param1) : \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u200E⁫⁫⁭‌⁬‏‍⁭‫⁬‌​⁯‫‬‏⁮⁪‪‏⁮‪⁯⁪​‏​⁬‮‪⁪⁭‎‍⁯​‍‮‎‮(\u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206F‌⁫⁭‎⁬‮‮‏⁪⁫‎⁯​⁬‮⁬‭‫⁬​⁮​‪⁬‭‪‭⁭‪⁬⁪⁬⁬⁪‬‪⁭‍⁫‮(_param0), _param1);
  }

  public static byte \u206F‌⁫⁭‎⁬‮‮‏⁪⁫‎⁯​⁬‮⁬‭‫⁬​⁮​‪⁬‭‪‭⁭‪⁬⁪⁬⁬⁪‬‪⁭‍⁫‮(int _param0)
  {
    switch (_param0)
    {
      case 0:
        throw new ArgumentException("legacy PRF not a valid algorithm", "prfAlgorithm");
      case 1:
        return 4;
      case 2:
        return 5;
      default:
        throw new ArgumentException("unknown PrfAlgorithm", "prfAlgorithm");
    }
  }

  public static \u202D‎‮‏‬⁮‎⁭⁬⁪‪⁬⁬‍⁭‎‎‫​‌⁪⁯⁪‮‪‏⁪⁪‫⁮‍​⁭⁪⁭⁯‏‍‭⁫‮ \u200F⁪‬‎‭⁮‍⁭⁫⁫‍‮⁬‏​⁯⁭‍⁪⁮‭‮⁪⁬⁬‌​⁯‌⁮⁯‪⁪‏‫⁭‭⁭⁪‪‮(
    byte _param0)
  {
    switch (_param0)
    {
      case 1:
        return \u202E‍‮⁫‎​‪⁮‮⁫‫​⁭‬‫‎⁮⁭‏⁭‮⁮⁮‭‫⁪‫⁫‏‎⁭‭‎⁮‪⁮⁪⁯‬‌‮.\u200C⁬​⁮⁬⁭‬‌⁮⁭‎‭‍‫​‫⁫⁪‪‏​⁬⁪⁪‪⁫‍‌‪⁮⁭⁬​‍⁮‮⁬⁫‌⁪‮;
      case 2:
        return \u206C‌⁮‮⁯‮‭⁬⁬⁭‬‫‮‍‪‍‭‍‪‭⁭‮⁪⁪‌⁫‮⁯⁪​‍⁫⁮⁯‭‌‎‪‮‌‮.\u202B‮‎‮⁯⁫⁫⁯⁮‌‬​​⁯‭⁬⁫​⁪⁫⁫‏‭⁪‏⁬⁬⁬‪⁯⁫⁭‍‬‏‏‪​‪‏‮;
      case 3:
        return \u202E‭‌‮‪⁭⁭⁯⁭​⁮‫‪⁪⁬‬‍‏‫‮‍⁭⁯‬‍⁯‭‭‌⁪⁫‎⁬‎⁭⁯‭⁬⁬⁬‮.\u200F‫‍‍‭⁪‏⁯‪⁬‏‪‎‪‍‏‭‮‭⁫‎‮⁬‌‏⁪⁭‏‫‫‮‏⁪‌⁬‎‌⁫⁪‮‮;
      case 4:
        return \u202E‭‌‮‪⁭⁭⁯⁭​⁮‫‪⁪⁬‬‍‏‫‮‍⁭⁯‬‍⁯‭‭‌⁪⁫‎⁬‎⁭⁯‭⁬⁬⁬‮.\u206D⁯⁮​‭⁬‍⁬⁮‮‭‎‌​‮‎‪⁫‬⁯⁯‎‌‭‬⁯‍⁫‍‭‬‮‍⁬⁬⁪‌‎‭⁪‮;
      case 5:
        return \u202E‭‌‮‪⁭⁭⁯⁭​⁮‫‪⁪⁬‬‍‏‫‮‍⁭⁯‬‍⁯‭‭‌⁪⁫‎⁬‎⁭⁯‭⁬⁬⁬‮.\u200C‭⁫‮‍⁬‭⁪⁫⁭‭‍‭‮‭‬⁮‬‮‏‎‭​⁮‏⁬‬‮‌‏⁭⁫⁮‪‮‍‏‎⁬⁮‮;
      case 6:
        return \u202E‭‌‮‪⁭⁭⁯⁭​⁮‫‪⁪⁬‬‍‏‫‮‍⁭⁯‬‍⁯‭‭‌⁪⁫‎⁬‎⁭⁯‭⁬⁬⁬‮.\u200C⁫‌⁪‏⁯⁫⁮‪⁪⁬⁪‬⁯​⁭‍‍​‎⁯‌‭‫‮⁮‮‮‍‫⁫⁭‪⁫‏⁯‮‏‬⁯‮;
      default:
        throw new ArgumentException("unknown HashAlgorithm", "hashAlgorithm");
    }
  }

  internal static short \u206C⁯‎⁬‍‏‌‪‭​​‮​‮‭‍‎‎‎⁫‫⁪⁮‫⁭⁭‌‎⁪‫‫‌‫‬‬⁮‪⁬‏⁬‮(
    \u200C‎⁫⁪‬‍‮‏⁬⁭‍⁯⁭⁮​⁮⁭⁭‬⁭‍⁫⁫⁯‌⁮⁬‭‪‫‌‌⁪‎⁮‬‪‍⁯⁭‮ _param0,
    \u200C‎⁫⁪‬‍‮‏⁬⁭‍⁯⁭⁮​⁮⁭⁭‬⁭‍⁫⁫⁯‌⁮⁬‭‪‫‌‌⁪‎⁮‬‪‍⁯⁭‮ _param1)
  {
    if (_param0.\u202E‮‬⁭⁮⁫‮‮⁭‎⁭⁭‭‬‌​‫⁯‍‭‌‍‫‪‍‏‮‌‏⁭‍⁫‎⁬‮‌⁫⁮​‌‮)
      return -1;
    \u202B‮⁭‏‮⁭‭⁭‌‍‎‎‍‭‌⁮​​⁭‌‮​‭⁬​‏‍⁯⁪⁭‏​⁪‏⁭⁭‪‫⁫⁫‮ obj1 = _param0.\u206E⁭‭⁮‫‌‫⁬‏​‏⁬⁫⁬⁭​​‮⁯‮⁯⁭⁮⁪‎⁫⁮⁪⁭​⁪‬⁯⁯⁭⁪‎⁬⁯‌‮(0);
    \u202C‍‌‎⁭‍⁮‍‌⁯⁪‏⁭⁭​‮​⁫⁪⁬‌⁮‏⁪⁫⁬‌‪⁯⁪​‏‌‭‫‪‍‮⁪‬‮ obj2 = obj1.\u206E⁫​⁭⁪‮⁪‍‭‪​⁫⁫‪⁫‌‭‌‭‍⁫‌‎‎‭‫‍‍⁯⁫⁭‪‍​‪⁪⁭‫‪⁭‮;
    try
    {
      \u206D⁬‬⁫‪‎⁭⁭‌​⁬‌⁯‍‍⁯⁭‬‫‪‭‏⁮‏‭‬‫⁮‌‏⁯‫‫⁫⁫‭⁭‏‌‍‮ obj3 = \u202A⁫‮‏‎⁫⁮‪⁭⁬‮‏‌‌‌‪⁪‮‍⁮⁪‬‭‎‬‮‍⁬‌⁮‎‌⁮‬⁫⁮⁫‪⁫⁪‮.\u200F⁮‏⁬‫⁪‎​‬‏‏‌⁬⁬⁯‭‬‏‪‭‎⁮‏⁪⁮⁬‭‮⁫‍⁫‪⁭​‫⁫‮⁪‪‮‮(obj2);
      if (obj3.\u206D⁪⁯‏‪‏‍‏⁭‪⁮‏⁬⁭‪⁬⁬⁬⁪​‍‪‮‏‮⁮‍⁪‪⁪⁪‮⁮‏‮⁪‪‬⁭‍‮)
        throw new \u206B‌⁭⁭⁭⁯​⁪‭‍⁮‭⁪‍‏‌⁬‫⁯‫‫‬‎⁭⁫‎⁪‌‏⁫⁮‪‬‮‬‏‎‏⁮‪‮((byte) 80);
      switch (obj3)
      {
        case \u202A⁫‎⁯‎⁪‫‬​⁪⁫‭⁪‎‬‪‎⁬⁭⁪​⁬⁪⁪‫‪⁯‏⁪⁬⁫‪​‬‮‫⁬‌⁬‎‮ _:
          \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202A‭⁮⁪‏‏‬‪‭‫‎‮‭‏⁮⁯​⁭⁪‫‎‍‫‮⁯⁫⁫‍‫⁫‪‬⁪​⁯‏‭‬‮‮(obj1, 128);
          return 1;
        case \u206E‭‭⁭‍​⁮⁬⁬‏⁬‭‫⁮‫‭‭‎‫‍‎⁭‏‍⁮‏⁯⁭⁫​‭‪​‮‪‎‫‪⁫‬‮ _:
          \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202A‭⁮⁪‏‏‬‪‭‫‎‮‭‏⁮⁯​⁭⁪‫‎‍‫‮⁯⁫⁫‍‫⁫‪‬⁪​⁯‏‭‬‮‮(obj1, 128);
          return 2;
        case \u206A‭‪⁭⁬‎‍‮⁭‮‎‮‭‎‏‪‮‭⁪‍‭‎⁯⁫‏‪⁫‎⁬‭‪‪‏⁫‌‭‎⁫⁯‭‮ _:
          \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202A‭⁮⁪‏‏‬‪‭‫‎‮‭‏⁮⁯​⁭⁪‫‎‍‫‮⁯⁫⁫‍‫⁫‪‬⁪​⁯‏‭‬‮‮(obj1, 128);
          return 64;
        default:
          throw new \u206B‌⁭⁭⁭⁯​⁪‭‍⁮‭⁪‍‏‌⁬‫⁯‫‫‬‎⁭⁫‎⁪‌‏⁫⁮‪‬‮‬‏‎‏⁮‪‮((byte) 43);
      }
    }
    catch (Exception ex)
    {
      throw new \u206B‌⁭⁭⁭⁯​⁪‭‍⁮‭⁪‍‏‌⁬‫⁯‫‫‬‎⁭⁫‎⁪‌‏⁫⁮‪‬‮‬‏‎‏⁮‪‮((byte) 43, ex);
    }
  }

  internal static void \u200F‪‭‪⁪⁬‎⁬⁬⁪‎‎⁯⁪‪⁯‎⁭‎‭‏‬​​⁬‌‬‭⁫‌‫⁯⁯‭‮⁫‏⁮⁬‮(
    \u202A⁯⁫‌⁭‮⁯‏⁯‮‌‮‬‏‍⁯⁫‫‮‌‬‭⁫⁪‎‬⁪⁬‮‍⁪⁫‪⁫‫⁫‮‫⁫⁮‮ _param0,
    IList _param1)
  {
    if (_param1 == null)
      return;
    foreach (\u200D⁮‌‫⁯⁬‫‍‪‫‬‌‫‭‎‭⁬⁬‬‪‬⁯‍⁮‪‪‮⁪‪‬⁬⁪⁯​‬‍‍‍‌‎‮ obj in (IEnumerable) _param1)
    {
      byte num = obj.\u202C‭​‬‬⁭​‮‭​⁬⁫‬‏⁬‬⁭‏‏‍‏‮‌⁪‫‮‮⁪⁫‍‍⁫⁫⁪⁪⁬‌⁬⁬‮‮;
      if (\u200E‮‮⁯​⁮⁫​‫⁮⁪‭‏⁮‭‫‬‮‭⁯⁭‪‭⁪⁭‫‍⁪⁬‬⁮‮‬​‭​⁬⁬‌‪‮.\u200C⁬‪⁫‏‫‏​‪‎​‌‫⁫⁮⁮⁮‮⁯‏‎‪‭⁭‍‬⁬‬‍‏⁮​‭⁪‌⁪‫⁯⁭⁪‮(num))
        _param0.\u206A​⁫‍‭⁪​⁪⁪⁪‪⁫⁯⁫‮⁪‪⁯⁪‮⁭‭‫⁪​​⁬‎⁭‭⁯⁫‫⁮⁬⁯‭‫‪‎‮(num);
    }
  }

  public static bool \u206C⁪‭‮‌‭‌‬⁮‌‏‌‎‭⁭​⁮⁬‎⁬‏‮‍​​⁪‏‪‎⁮‮‬⁫⁯‌⁪‎‭‮⁭‮(byte _param0)
  {
    switch (_param0)
    {
      case 1:
      case 2:
      case 64:
        return true;
      default:
        return false;
    }
  }

  public static \u200D​‌‍‮⁪‏‌‏‬⁬​‏‍​‌⁮‭⁮‌‭​‪⁮​‪‫⁮⁮⁯‬‏‬⁯‪⁯⁪⁯‮⁭‮ \u202C‭‏‪‭⁯⁯⁬‏⁯⁪⁯‏⁬​‏​‭⁯​‮‍⁭‬​⁯‌⁭‬⁯‌⁭‭‭‏⁫‮​​‮‮(
    byte _param0)
  {
    if (_param0 == (byte) 1)
      return (\u200D​‌‍‮⁪‏‌‏‬⁬​‏‍​‌⁮‭⁮‌‭​‪⁮​‪‫⁮⁮⁯‬‏‬⁯‪⁯⁪⁯‮⁭‮) new \u200C‮​‎‏‮‍‪‎‎‍‎‮​‮‭⁭‫​‪‍⁫​​‫‫⁫⁪⁮‮‌⁫‏‏⁫​‬‏‮‭‮();
    if (_param0 == (byte) 2)
      return (\u200D​‌‍‮⁪‏‌‏‬⁬​‏‍​‌⁮‭⁮‌‭​‪⁮​‪‫⁮⁮⁯‬‏‬⁯‪⁯⁪⁯‮⁭‮) new \u206F‪‭‪‌‫‏‍‪‮‪‌‍‪‫‭⁬⁮‭‭‫‌‍⁭‭⁬‭‬‫‮⁭⁬‪‭⁫⁪‪⁮‎‬‮();
    if (_param0 == (byte) 64)
      return (\u200D​‌‍‮⁪‏‌‏‬⁬​‏‍​‌⁮‭⁮‌‭​‪⁮​‪‫⁮⁮⁯‬‏‬⁯‪⁯⁪⁯‮⁭‮) new \u200E⁭⁭‭‏‭⁫‪​‫⁪⁭‭‬‫‫‫‌‮⁮‫‍‏‏⁯⁮​⁮‌‏‭⁪⁭​⁪⁬‫‏‌⁫‮();
    throw new ArgumentException("not a type with signing capability", "clientCertificateType");
  }

  private static byte[][] \u202B‪‬⁫‏‮‫⁯‭⁮‍‭⁯‍‫‎⁫​‮‎‬‮‫⁬⁬‫‮‍​‮⁫⁭⁯⁬⁮‬⁬‮‮‍‮()
  {
    int length = 10;
    byte[][] numArray1 = new byte[length][];
    for (int index = 0; index < length; ++index)
    {
      byte[] numArray2 = new byte[index + 1];
      \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u202E‫⁭‬‌⁫‮‏‫‮‪⁬‫‫⁬⁪⁪⁭‬‏⁫⁮‏⁪‫‬‭‮⁬‪‍‫⁭‪‍⁯‫‭‍‫‮(numArray2, (byte) (65 + index));
      numArray1[index] = numArray2;
    }
    return numArray1;
  }

  private static IList \u206D⁭⁭‌⁪⁫⁮‏​‭⁮‪‭‫⁪‭​‌‫⁫‎⁪‬⁫⁬‬‌‏‍‪‍⁫⁭‎⁫‮‎‏⁮‮‮(object _param0)
  {
    IList list = \u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u200C⁮‬‎⁪‌⁮‬​⁬⁭​‏⁮​‍‌⁮‮⁪⁪⁫‪‫‎⁮‎⁬​​‏⁪‪‍‬‪⁬⁫⁪‏‮(1);
    list.Add(_param0);
    return list;
  }

  public static int \u206E‭‪‌​⁪⁭⁯‭‌‮⁬⁬‍‍⁫⁪‎‮‏⁪⁪⁭⁬​‍‭⁭‭‏⁪‫‫‭⁯⁭⁭‪‮⁭‮(int _param0)
  {
    switch (\u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206B⁮⁫​‬‎⁯⁫‭⁮‬​⁫‎‭‪⁭‏‌⁯‏‪⁪⁭‮⁭‮‍‭‌​‎⁫‪‪⁫‪⁯⁯‮(_param0))
    {
      case 0:
      case 1:
      case 2:
        return 0;
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 12:
      case 13:
      case 14:
        return 1;
      case 10:
      case 11:
      case 15:
      case 16:
      case 17:
      case 18:
      case 19:
      case 20:
      case 21:
      case 103:
      case 104:
        return 2;
      default:
        throw new \u206B‌⁭⁭⁭⁯​⁪‭‍⁮‭⁪‍‏‌⁬‫⁯‫‫‬‎⁭⁫‎⁪‌‏⁫⁮‪‬‮‬‏‎‏⁮‪‮((byte) 80);
    }
  }

  public static int \u206B⁮⁫​‬‎⁯⁫‭⁮‬​⁫‎‭‪⁭‏‌⁯‏‪⁪⁭‮⁭‮‍‭‌​‎⁫‪‪⁫‪⁯⁯‮(int _param0)
  {
    switch (_param0)
    {
      case 1:
        return 0;
      case 2:
      case 44:
      case 45:
      case 46:
      case 49153:
      case 49158:
      case 49163:
      case 49168:
      case 49173:
      case 49209:
        return 0;
      case 4:
      case 24:
        return 2;
      case 5:
      case 138:
      case 142:
      case 146:
      case 49154:
      case 49159:
      case 49164:
      case 49169:
      case 49174:
      case 49203:
        return 2;
      case 10:
      case 13:
      case 16:
      case 19:
      case 22:
      case 27:
      case 139:
      case 143:
      case 147:
      case 49155:
      case 49160:
      case 49165:
      case 49170:
      case 49175:
      case 49178:
      case 49179:
      case 49180:
      case 49204:
        return 7;
      case 47:
      case 48:
      case 49:
      case 50:
      case 51:
      case 52:
      case 60:
      case 62:
      case 63:
      case 64:
      case 103:
      case 108:
      case 140:
      case 144:
      case 148:
      case 174:
      case 178:
      case 182:
      case 49156:
      case 49161:
      case 49166:
      case 49171:
      case 49176:
      case 49181:
      case 49182:
      case 49183:
      case 49187:
      case 49189:
      case 49191:
      case 49193:
      case 49205:
      case 49207:
        return 8;
      case 53:
      case 54:
      case 55:
      case 56:
      case 57:
      case 58:
      case 61:
      case 104:
      case 105:
      case 106:
      case 107:
      case 109:
      case 141:
      case 145:
      case 149:
      case 175:
      case 179:
      case 183:
      case 49157:
      case 49162:
      case 49167:
      case 49172:
      case 49177:
      case 49184:
      case 49185:
      case 49186:
      case 49188:
      case 49190:
      case 49192:
      case 49194:
      case 49206:
      case 49208:
        return 9;
      case 59:
      case 176:
      case 180:
      case 184:
      case 49210:
        return 0;
      case 65:
      case 66:
      case 67:
      case 68:
      case 69:
      case 70:
      case 186:
      case 187:
      case 188:
      case 189:
      case 190:
      case 191:
      case 49266:
      case 49268:
      case 49270:
      case 49272:
      case 49300:
      case 49302:
      case 49304:
      case 49306:
        return 12;
      case 132:
      case 133:
      case 134:
      case 135:
      case 136:
      case 137:
      case 192:
      case 193:
      case 194:
      case 195:
      case 196:
      case 197:
      case 49267:
      case 49269:
      case 49271:
      case 49273:
      case 49301:
      case 49303:
      case 49305:
      case 49307:
        return 13;
      case 150:
      case 151:
      case 152:
      case 153:
      case 154:
      case 155:
        return 14;
      case 156:
      case 158:
      case 160:
      case 162:
      case 164:
      case 166:
      case 168:
      case 170:
      case 172:
      case 49195:
      case 49197:
      case 49199:
      case 49201:
        return 10;
      case 157:
      case 159:
      case 161:
      case 163:
      case 165:
      case 167:
      case 169:
      case 171:
      case 173:
      case 49196:
      case 49198:
      case 49200:
      case 49202:
        return 11;
      case 177:
      case 181:
      case 185:
      case 49211:
        return 0;
      case 49274:
      case 49276:
      case 49278:
      case 49280:
      case 49282:
      case 49284:
      case 49286:
      case 49288:
      case 49290:
      case 49292:
      case 49294:
      case 49296:
      case 49298:
        return 19;
      case 49275:
      case 49277:
      case 49279:
      case 49281:
      case 49283:
      case 49285:
      case 49287:
      case 49289:
      case 49291:
      case 49293:
      case 49295:
      case 49297:
      case 49299:
        return 20;
      case 49308:
      case 49310:
      case 49316:
      case 49318:
      case 49324:
        return 15;
      case 49309:
      case 49311:
      case 49317:
      case 49319:
      case 49325:
        return 17;
      case 49312:
      case 49314:
      case 49320:
      case 49322:
      case 49326:
        return 16;
      case 49313:
      case 49315:
      case 49321:
      case 49323:
      case 49327:
        return 18;
      case 52392:
      case 52393:
      case 52394:
      case 52395:
      case 52396:
      case 52397:
      case 52398:
        return 21;
      default:
        throw new \u206B‌⁭⁭⁭⁯​⁪‭‍⁮‭⁪‍‏‌⁬‫⁯‫‫‬‎⁭⁫‎⁪‌‏⁫⁮‪‬‮‬‏‎‏⁮‪‮((byte) 80);
    }
  }

  public static int \u202B‌‏‪‭‌‭‏‪‌‎‎‭‭‎‬‫⁯⁬⁭⁬⁮⁯⁬​​‬‬‪‮⁫‭⁬⁮‮‭‮‌⁭‮‮(int _param0)
  {
    switch (_param0)
    {
      case 1:
      case 2:
      case 4:
      case 5:
      case 10:
      case 47:
      case 53:
      case 59:
      case 60:
      case 61:
      case 65:
      case 132:
      case 150:
      case 156:
      case 157:
      case 186:
      case 192:
      case 49274:
      case 49275:
      case 49308:
      case 49309:
      case 49312:
      case 49313:
      case 52398:
        return 1;
      case 13:
      case 48:
      case 54:
      case 62:
      case 66:
      case 104:
      case 133:
      case 151:
      case 164:
      case 165:
      case 187:
      case 193:
      case 49282:
      case 49283:
        return 7;
      case 16:
      case 49:
      case 55:
      case 63:
      case 67:
      case 105:
      case 134:
      case 152:
      case 160:
      case 161:
      case 188:
      case 194:
      case 49278:
      case 49279:
        return 9;
      case 19:
      case 50:
      case 56:
      case 64:
      case 68:
      case 106:
      case 135:
      case 153:
      case 162:
      case 163:
      case 189:
      case 195:
      case 49280:
      case 49281:
        return 3;
      case 22:
      case 51:
      case 57:
      case 69:
      case 103:
      case 107:
      case 136:
      case 154:
      case 158:
      case 159:
      case 190:
      case 196:
      case 49276:
      case 49277:
      case 49310:
      case 49311:
      case 49314:
      case 49315:
      case 52394:
        return 5;
      case 24:
      case 27:
      case 52:
      case 58:
      case 70:
      case 108:
      case 109:
      case 137:
      case 155:
      case 166:
      case 167:
      case 191:
      case 197:
      case 49284:
      case 49285:
        return 11;
      case 44:
      case 138:
      case 139:
      case 140:
      case 141:
      case 168:
      case 169:
      case 174:
      case 175:
      case 176:
      case 177:
      case 49294:
      case 49295:
      case 49300:
      case 49301:
      case 49316:
      case 49317:
      case 49320:
      case 49321:
      case 52395:
        return 13;
      case 45:
      case 142:
      case 143:
      case 144:
      case 145:
      case 170:
      case 171:
      case 178:
      case 179:
      case 180:
      case 181:
      case 49296:
      case 49297:
      case 49302:
      case 49303:
      case 49318:
      case 49319:
      case 49322:
      case 49323:
      case 52397:
        return 14;
      case 46:
      case 146:
      case 147:
      case 148:
      case 149:
      case 172:
      case 173:
      case 182:
      case 183:
      case 184:
      case 185:
      case 49298:
      case 49299:
      case 49304:
      case 49305:
        return 15;
      case 49153:
      case 49154:
      case 49155:
      case 49156:
      case 49157:
      case 49189:
      case 49190:
      case 49197:
      case 49198:
      case 49268:
      case 49269:
      case 49288:
      case 49289:
        return 16;
      case 49158:
      case 49159:
      case 49160:
      case 49161:
      case 49162:
      case 49187:
      case 49188:
      case 49195:
      case 49196:
      case 49266:
      case 49267:
      case 49286:
      case 49287:
      case 49324:
      case 49325:
      case 49326:
      case 49327:
      case 52393:
        return 17;
      case 49163:
      case 49164:
      case 49165:
      case 49166:
      case 49167:
      case 49193:
      case 49194:
      case 49201:
      case 49202:
      case 49272:
      case 49273:
      case 49292:
      case 49293:
        return 18;
      case 49168:
      case 49169:
      case 49170:
      case 49171:
      case 49172:
      case 49191:
      case 49192:
      case 49199:
      case 49200:
      case 49270:
      case 49271:
      case 49290:
      case 49291:
      case 52392:
        return 19;
      case 49173:
      case 49174:
      case 49175:
      case 49176:
      case 49177:
        return 20;
      case 49178:
      case 49181:
      case 49184:
        return 21;
      case 49179:
      case 49182:
      case 49185:
        return 23;
      case 49180:
      case 49183:
      case 49186:
        return 22;
      case 49203:
      case 49204:
      case 49205:
      case 49206:
      case 49207:
      case 49208:
      case 49209:
      case 49210:
      case 49211:
      case 49306:
      case 49307:
      case 52396:
        return 24;
      default:
        throw new \u206B‌⁭⁭⁭⁯​⁪‭‍⁮‭⁪‍‏‌⁬‫⁯‫‫‬‎⁭⁫‎⁪‌‏⁫⁮‪‬‮‬‏‎‏⁮‪‮((byte) 80);
    }
  }

  public static int \u206B‍​⁯‍‎⁬​‍⁪‪‭‎‫⁪⁭‌⁭‫‫‮⁮‬‍⁯‭​‮‍‭⁯‌‎‎‎⁬⁬​‪‬‮(int _param0)
  {
    switch (_param0)
    {
      case 1:
      case 4:
      case 24:
        return 1;
      case 2:
      case 5:
      case 10:
      case 13:
      case 16:
      case 19:
      case 22:
      case 27:
      case 44:
      case 45:
      case 46:
      case 47:
      case 48:
      case 49:
      case 50:
      case 51:
      case 52:
      case 53:
      case 54:
      case 55:
      case 56:
      case 57:
      case 58:
      case 65:
      case 66:
      case 67:
      case 68:
      case 69:
      case 70:
      case 132:
      case 133:
      case 134:
      case 135:
      case 136:
      case 137:
      case 138:
      case 139:
      case 140:
      case 141:
      case 142:
      case 143:
      case 144:
      case 145:
      case 146:
      case 147:
      case 148:
      case 149:
      case 150:
      case 151:
      case 152:
      case 153:
      case 154:
      case 155:
      case 49153:
      case 49154:
      case 49155:
      case 49156:
      case 49157:
      case 49158:
      case 49159:
      case 49160:
      case 49161:
      case 49162:
      case 49163:
      case 49164:
      case 49165:
      case 49166:
      case 49167:
      case 49168:
      case 49169:
      case 49170:
      case 49171:
      case 49172:
      case 49173:
      case 49174:
      case 49175:
      case 49176:
      case 49177:
      case 49178:
      case 49179:
      case 49180:
      case 49181:
      case 49182:
      case 49183:
      case 49184:
      case 49185:
      case 49186:
      case 49203:
      case 49204:
      case 49205:
      case 49206:
      case 49209:
        return 2;
      case 59:
      case 60:
      case 61:
      case 62:
      case 63:
      case 64:
      case 103:
      case 104:
      case 105:
      case 106:
      case 107:
      case 108:
      case 109:
      case 174:
      case 176:
      case 178:
      case 180:
      case 182:
      case 184:
      case 186:
      case 187:
      case 188:
      case 189:
      case 190:
      case 191:
      case 192:
      case 193:
      case 194:
      case 195:
      case 196:
      case 197:
      case 49187:
      case 49189:
      case 49191:
      case 49193:
      case 49207:
      case 49210:
      case 49266:
      case 49268:
      case 49270:
      case 49272:
      case 49300:
      case 49302:
      case 49304:
      case 49306:
        return 3;
      case 156:
      case 157:
      case 158:
      case 159:
      case 160:
      case 161:
      case 162:
      case 163:
      case 164:
      case 165:
      case 166:
      case 167:
      case 168:
      case 169:
      case 170:
      case 171:
      case 172:
      case 173:
      case 49195:
      case 49196:
      case 49197:
      case 49198:
      case 49199:
      case 49200:
      case 49201:
      case 49202:
      case 49274:
      case 49275:
      case 49276:
      case 49277:
      case 49278:
      case 49279:
      case 49280:
      case 49281:
      case 49282:
      case 49283:
      case 49284:
      case 49285:
      case 49286:
      case 49287:
      case 49288:
      case 49289:
      case 49290:
      case 49291:
      case 49292:
      case 49293:
      case 49294:
      case 49295:
      case 49296:
      case 49297:
      case 49298:
      case 49299:
      case 49308:
      case 49309:
      case 49310:
      case 49311:
      case 49312:
      case 49313:
      case 49314:
      case 49315:
      case 49316:
      case 49317:
      case 49318:
      case 49319:
      case 49320:
      case 49321:
      case 49322:
      case 49323:
      case 49324:
      case 49325:
      case 49326:
      case 49327:
      case 52392:
      case 52393:
      case 52394:
      case 52395:
      case 52396:
      case 52397:
      case 52398:
        return 0;
      case 175:
      case 177:
      case 179:
      case 181:
      case 183:
      case 185:
      case 49188:
      case 49190:
      case 49192:
      case 49194:
      case 49208:
      case 49211:
      case 49267:
      case 49269:
      case 49271:
      case 49273:
      case 49301:
      case 49303:
      case 49305:
      case 49307:
        return 4;
      default:
        throw new \u206B‌⁭⁭⁭⁯​⁪‭‍⁮‭⁪‍‏‌⁬‫⁯‫‫‬‎⁭⁫‎⁪‌‏⁫⁮‪‬‮‬‏‎‏⁮‪‮((byte) 80);
    }
  }

  public static \u206F⁯‮‏‮‫‪‮⁬‬⁪‭‏‪‪‭⁫‌‫⁫‪​‮⁭‮‬⁮⁯‫‌‫‌⁯⁬⁬⁯⁪⁭⁭‪‮ \u200B⁫​‭‪​‍‭‍‌⁮⁬⁯‬‫‍⁪‌‪⁮‍‮‬⁬‮‌⁮‍‏⁯‪‍‏‭‍⁫‮​‫‮(
    int _param0)
  {
    if (_param0 <= 197)
    {
      if (_param0 <= 109)
      {
        if ((uint) (_param0 - 59) > 5U && (uint) (_param0 - 103) > 6U)
          goto label_9;
      }
      else if ((uint) (_param0 - 156) > 17U && (uint) (_param0 - 186) > 11U)
        goto label_9;
    }
    else if (_param0 <= 49299)
    {
      if ((uint) (_param0 - 49187) > 15U && (uint) (_param0 - 49266) > 33U)
        goto label_9;
    }
    else if ((uint) (_param0 - 49308) > 19U)
    {
      switch (_param0)
      {
        case 52392:
        case 52393:
        case 52394:
        case 52395:
        case 52396:
        case 52397:
        case 52398:
          break;
        default:
          goto label_9;
      }
    }
    return \u206F⁯‮‏‮‫‪‮⁬‬⁪‭‏‪‪‭⁫‌‫⁫‪​‮⁭‮‬⁮⁯‫‌‫‌⁯⁬⁬⁯⁪⁭⁭‪‮.\u202A‌‬‬‮‌⁬‍‎⁭⁬‏⁫‎​‪‮​​‫⁬⁮​⁭‏⁮‮‬⁮‮⁮‬‎‏⁪​⁪‏‎⁭‮;
label_9:
    return \u206F⁯‮‏‮‫‪‮⁬‬⁪‭‏‪‪‭⁫‌‫⁫‪​‮⁭‮‬⁮⁯‫‌‫‌⁯⁬⁬⁯⁪⁭⁭‪‮.\u202A‫‌​⁮⁭⁭⁫⁬​⁭‫‭‎‪⁫‬‭⁪‮‫⁯‪‭‬⁬‪‌⁮‏‏‍‌⁬⁮⁯⁬‮⁫⁮‮;
  }

  public static bool \u200E‬⁫⁪‬‭‎⁫‌⁪‏⁫⁫‪⁭‌⁫⁭⁭‏‎⁬⁫⁫‮‍⁫⁬‍‍‮⁯‮⁫⁬‏⁮‌⁪⁬‮(int _param0) => 2 == \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206E‭‪‌​⁪⁭⁯‭‌‮⁬⁬‍‍⁫⁪‎‮‏⁪⁪⁭⁬​‍‭⁭‭‏⁪‫‫‭⁯⁭⁭‪‮⁭‮(_param0);

  public static bool \u206D⁯⁯​‎⁬‌‎‪‮‭⁪⁫‍‮⁭​⁯‏‎⁭⁪‎⁭⁯⁬⁫⁬⁮‬‪‍‭‍⁪⁫‫​⁯‬‮(int _param0) => 1 == \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206E‭‪‌​⁪⁭⁯‭‌‮⁬⁬‍‍⁫⁪‎‮‏⁪⁪⁭⁬​‍‭⁭‭‏⁪‫‫‭⁯⁭⁭‪‮⁭‮(_param0);

  public static bool \u202E⁬⁪‫‍‭⁭‬⁬‏‎‮‮‎‬⁯⁭⁭‎⁪​⁯‌⁬‮‎‏‭⁯‭⁪‍​⁫⁫‎‬‎‭⁪‮(int _param0) => \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u206E‭‪‌​⁪⁭⁯‭‌‮⁬⁬‍‍⁫⁪‎‮‏⁪⁪⁭⁬​‍‭⁭‭‏⁪‫‫‭⁯⁭⁭‪‮⁭‮(_param0) == 0;

  public static bool \u206D​⁭⁪‮‏‎⁪‎⁫‍‫‌‮‫⁪‭⁪‌​‪‍‭​⁬‪‭‎‬⁮‌​‭‭‮‎‎‏⁫⁪‮(int _param0, IList _param1)
  {
    int num;
    try
    {
      num = \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202B‌‏‪‭‌‭‏‪‌‎‎‭‭‎‬‫⁯⁬⁭⁬⁮⁯⁬​​‬‬‪‮⁫‭⁬⁮‮‭‮‌⁭‮‮(_param0);
    }
    catch (IOException ex)
    {
      return true;
    }
    switch (num)
    {
      case 3:
      case 4:
      case 22:
        return _param1.Contains((object) (byte) 2);
      case 5:
      case 6:
      case 19:
      case 23:
        return _param1.Contains((object) (byte) 1);
      case 11:
      case 12:
      case 20:
        return _param1.Contains((object) (byte) 0);
      case 17:
        return _param1.Contains((object) (byte) 3);
      default:
        return true;
    }
  }

  public static bool \u206A‫⁪‌‭⁭‍⁬‍‫⁯‪‌‎‫‬‪​​‍⁫⁮‮‭⁫​‬‏‪⁮​⁫‭‫‫​‎⁮‏‌‮(
    int _param0,
    \u206F⁯‮‏‮‫‪‮⁬‬⁪‭‏‪‪‭⁫‌‫⁫‪​‮⁭‮‬⁮⁯‫‌‫‌⁯⁬⁬⁯⁪⁭⁭‪‮ _param1)
  {
    return \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u200B⁫​‭‪​‍‭‍‌⁮⁬⁯‬‫‍⁪‌‪⁮‍‮‬⁬‮‌⁮‍‏⁯‪‍‏‭‍⁫‮​‫‮(_param0).\u200C‪‮‏​⁪‭‏⁪‫⁯‪‫‭⁫‪⁫⁮‎​⁫⁯‬‮‮⁫‬⁮‍⁯‮‍‭‌⁭⁭‍‌‬⁬‮(_param1.\u206B‍‌⁬‏‎‏‫‭‍​​‭⁬‮⁮‌⁯‌‫‬‬‭‎​‏⁭⁬​⁫‍‌‫⁪‪⁪‪‍‭‪‮());
  }

  public static IList \u206D‌⁪⁫‫‮‮​‫​‪‍⁬‍⁯‌‫‏⁮⁬​⁬⁭⁬‭⁪⁫⁪‮‮​⁯⁯⁬‬⁫​⁭⁪⁫‮(IList _param0)
  {
    if (_param0 == null)
      return \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202E‮⁯⁫‪⁭⁫⁫‬‮‪‮‌‎‬⁬‍⁭⁪⁫‬⁭⁬⁫⁪⁯​‌‪‪⁫‏⁮⁬⁫⁭‫⁬‎⁪‮();
    IList list = \u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u200C⁮‬‎⁪‌⁮‬​⁬⁭​‏⁮​‍‌⁮‮⁪⁪⁫‪‫‎⁮‎⁬​​‏⁪‪‍‬‪⁬⁫⁪‏‮(4);
    list.Add((object) (byte) 0);
    foreach (\u200D⁮‌‫⁯⁬‫‍‪‫‬‌‫‭‎‭⁬⁬‬‪‬⁯‍⁮‪‪‮⁪‪‬⁬⁪⁯​‬‍‍‍‌‎‮ obj in (IEnumerable) _param0)
    {
      byte num = obj.\u200B‭‭⁮⁬​⁫⁬‫‏‎​‮‌‌‌‭‏‪‍‌‬‬‫⁭‏⁫⁮⁮​⁯⁬‎‬‮​‭‏‫‎‮;
      if (!list.Contains((object) num))
        list.Add((object) num);
    }
    return list;
  }

  public static bool \u202A‬‪‬‍⁬⁮⁪⁪‏‮⁪‫⁭⁪‫‭‌⁮‏‬​‌‏‭‬‎⁭⁫‭‭⁭‎⁮⁭‫‮‮‭‎‮(SocketException _param0) => SocketError.TimedOut == _param0.SocketErrorCode;
}
