// Decompiled with JetBrains decompiler
// Type: Vändtia_Live_Server.PackOfCards
// Assembly: W1rxzw3ZKeRvpGn, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 142397A1-15D1-D7EF-251C-AE295CB71E89
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan.MSIL.Remcos.gen-869da055040f18615ffee1bc2369c1e6496fce17b977c375b8501f7f91f0606d.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections;
using System.Runtime.CompilerServices;
using System.Threading;
using Vändtia_Live_Server.My;

namespace Vändtia_Live_Server
{
  public class PackOfCards
  {
    public ArrayList Cards;
    public ArrayList LayedCards;

    public event PackOfCards.OnClearEventHandler OnClear
    {
      add
      {
        PackOfCards.OnClearEventHandler clearEventHandler1 = this.OnClearEvent;
label_1:
        PackOfCards.OnClearEventHandler comparand = clearEventHandler1;
label_7:
        int num1 = 3;
        int num2 = 3;
        while (true)
        {
          switch (num2 ^ 64)
          {
            case 64:
              PackOfCards.OnClearEventHandler clearEventHandler2;
              switch (num1)
              {
                case 63:
                  clearEventHandler2 = comparand + value;
                  num1 = 124;
                  goto label_2;
                case 64:
                  clearEventHandler1 = Interlocked.CompareExchange<PackOfCards.OnClearEventHandler>(ref this.OnClearEvent, clearEventHandler2, comparand);
                  num1 = 125;
                  goto label_2;
                case 65:
                  if (clearEventHandler1 == comparand)
                  {
                    num1 = (int) sbyte.MaxValue;
                    goto label_2;
                  }
                  else
                    goto label_1;
                case 66:
                  RuntimeMethodHandle runtimeMethodHandle1 = __methodref (PackOfCards.add_OnClear);
                  num1 = 126;
                  goto label_2;
                case 67:
                  goto label_12;
                default:
                  num2 = 1;
                  continue;
              }
            case 65:
              goto label_7;
            case 66:
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (PackOfCards.GetNext);
              num2 = 2;
              continue;
            case 67:
label_2:
              num1 ^= 60;
              break;
          }
          num2 = 0;
        }
label_12:;
      }
      remove
      {
        PackOfCards.OnClearEventHandler clearEventHandler1 = this.OnClearEvent;
label_1:
        PackOfCards.OnClearEventHandler comparand = clearEventHandler1;
label_5:
        int num1 = 125;
        int num2 = 124;
        while (true)
        {
          switch (num2 ^ 64)
          {
            case 57:
              goto label_5;
            case 58:
              PackOfCards.OnClearEventHandler clearEventHandler2;
              switch (num1)
              {
                case 61:
                  clearEventHandler2 = comparand - value;
                  num1 = 126;
                  goto label_2;
                case 62:
                  clearEventHandler1 = Interlocked.CompareExchange<PackOfCards.OnClearEventHandler>(ref this.OnClearEvent, clearEventHandler2, comparand);
                  num1 = 0;
                  goto label_2;
                case 63:
                  RuntimeMethodHandle runtimeMethodHandle1 = __methodref (PackOfCards.GetNext);
                  num1 = (int) sbyte.MaxValue;
                  goto label_2;
                case 64:
                  if (clearEventHandler1 == comparand)
                  {
                    num1 = 1;
                    goto label_2;
                  }
                  else
                    goto label_1;
                case 65:
                  goto label_13;
                default:
                  num2 = 121;
                  continue;
              }
            case 59:
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (PackOfCards.add_OnClear);
              num2 = 123;
              continue;
            case 60:
label_2:
              num1 ^= 64;
              break;
          }
          num2 = 122;
        }
label_13:;
      }
    }

    public PackOfCards()
    {
label_2:
      int num1 = FoodItem.\uE607\uE6C8\uF041\uE1D1\uEB67\uF562\uF59C\uEDEA\uEABB\uE409\uF42B\uF64E(13);
      string str;
      while (true)
      {
        switch ((num1 ^ 58) + 61)
        {
          case 0:
            this.Cards = new ArrayList();
            num1 = -2;
            continue;
          case 1:
            this.LayedCards = new ArrayList();
            num1 = FoodItem.\uE607\uE6C8\uF041\uE1D1\uEB67\uF562\uF59C\uEDEA\uEABB\uE409\uF42B\uF64E(34);
            continue;
          case 2:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (PackOfCards.add_OnClear);
            num1 = -1;
            continue;
          case 3:
            str = "Hjärter";
            num1 = -3;
            continue;
          case 4:
            goto label_7;
          default:
            goto label_2;
        }
      }
label_7:
      int num2 = 1;
      do
      {
        int Number = 1;
label_9:
        this.Cards.Add((object) new Card(str, Number));
label_11:
        int num3 = 12;
        while (true)
        {
          switch (num3 ^ 55)
          {
            case 57:
              num3 = 11;
              continue;
            case 58:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (PackOfCards.\u002Ector);
              num3 = 13;
              continue;
            case 59:
              checked { ++Number; }
              num3 = 10;
              continue;
            case 60:
              if (Operators.CompareString(str, "Hjärter", false) != 0)
              {
                num3 = 9;
                continue;
              }
              goto label_20;
            case 61:
              if (Number > 13)
              {
                num3 = 14;
                continue;
              }
              goto label_9;
            case 62:
              goto label_19;
            default:
              goto label_11;
          }
        }
label_19:
        int num4 = 0;
        goto label_21;
label_20:
        num4 = 1;
label_21:
        if (num4 == 0)
        {
          if ((Operators.CompareString(str, "Spader", false) == 0 ? 1 : 0) == 0)
          {
            if ((Operators.CompareString(str, "Ruter", false) == 0 ? 1 : 0) != 0)
              str = "Klöver";
          }
          else
            str = "Ruter";
        }
        else
          str = "Spader";
        checked { ++num2; }
      }
      while (num2 <= 4);
    }

    public void Bland()
    {
      ArrayList c = new ArrayList();
      Random random = new Random();
label_9:
      while ((c.Count >= this.Cards.Count ? 0 : 1) != 0)
      {
        int int32 = Convert.ToInt32(Math.Floor(random.NextDouble() * (double) this.Cards.Count));
        IEnumerator enumerator;
        try
        {
          enumerator = c.GetEnumerator();
          while ((!enumerator.MoveNext() ? 0 : 1) != 0)
          {
            if ((!Operators.ConditionalCompareObjectEqual((object) ((Card) enumerator.Current).Merged, NewLateBinding.LateGet(this.Cards[int32], (Type) null, "Merged", new object[0], (string[]) null, (Type[]) null, (bool[]) null), false) ? 1 : 0) == 0)
              goto label_9;
          }
        }
        finally
        {
          if ((!(enumerator is IDisposable) ? 1 : 0) == 0)
            (enumerator as IDisposable).Dispose();
        }
        c.Add(RuntimeHelpers.GetObjectValue(this.Cards[int32]));
      }
      this.Cards.Clear();
label_16:
      int num1 = FoodItem.\uE607\uE6C8\uF041\uE1D1\uEB67\uF562\uF59C\uEDEA\uEABB\uE409\uF42B\uF64E(13);
      int num2 = 124;
      while (true)
      {
        switch (num2 ^ 61)
        {
          case 62:
            switch (num1 + 55)
            {
              case 0:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (PackOfCards.Bland);
                num1 = -4;
                goto label_11;
              case 1:
                this.Cards.AddRange((ICollection) c);
                num1 = -2;
                goto label_11;
              case 2:
                num1 = -8;
                goto label_11;
              case 3:
                num1 = FormLoader.\uF6D9\uF827\uF028\uED0F\uECCA\uE547\uF4C8\uF468\uEA41\uE615\uE78E\uE0F5(31);
                goto label_11;
              case 4:
                goto label_18;
              default:
                num2 = 2;
                continue;
            }
          case 63:
            goto label_16;
          case 64:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (PackOfCards.add_OnClear);
            num2 = 125;
            continue;
          case 65:
label_11:
            num1 ^= 53;
            break;
        }
        num2 = 3;
      }
label_18:;
    }

    public Card GetNext()
    {
      Card next;
      try
      {
        Card card = (Card) this.Cards[checked (this.Cards.Count - 1)];
label_5:
        int num1 = Mazes.\uED64\uF7C9\uE463\uE570\uEDE5\uF0EF\uEC88\uF1DB\uF4DB\uE913\uF508\uF2F8(62);
        int num2 = -7;
        while (true)
        {
          switch ((num2 ^ 62) + 60)
          {
            case 0:
              goto label_5;
            case 1:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (PackOfCards.GetNext);
              // ISSUE: reference to a compiler-generated method
              num2 = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA90.\uE152\uE14D\uE4B1\uE4CF\uEFA5\uEAA8\uF7D2\uF85C\uF37D\uF074\uF5CA\uE496(14);
              continue;
            case 2:
              bool flag;
              switch (num1 + 60)
              {
                case 0:
                  // ISSUE: method reference
                  RuntimeMethodHandle runtimeMethodHandle2 = __methodref (PackOfCards.Bland);
                  num1 = -15;
                  goto label_2;
                case 1:
                  if (flag)
                  {
                    num1 = -4;
                    goto label_2;
                  }
                  else
                    goto label_16;
                case 2:
                  flag = this.Cards.Count == 0;
                  num1 = FormLoader.\uF6D9\uF827\uF028\uED0F\uECCA\uE547\uF4C8\uF468\uEA41\uE615\uE78E\uE0F5(36);
                  goto label_2;
                case 3:
                  this.Cards.Remove((object) card);
                  num1 = -3;
                  goto label_2;
                case 4:
                  num1 = -13;
                  goto label_2;
                case 5:
                  goto label_15;
                default:
                  num2 = -6;
                  continue;
              }
            case 3:
label_2:
              num1 ^= 53;
              break;
          }
          num2 = FoodItem.\uE607\uE6C8\uF041\uE1D1\uEB67\uF562\uF59C\uEDEA\uEABB\uE409\uF42B\uF64E(16);
        }
label_15:
        int num3 = 0;
        goto label_17;
label_16:
        num3 = 1;
label_17:
        if (num3 == 0)
        {
          // ISSUE: reference to a compiler-generated field
          PackOfCards.OnClearEventHandler onClearEvent = this.OnClearEvent;
          if ((onClearEvent == null ? 1 : 0) == 0)
            onClearEvent();
        }
        next = card;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        next = (Card) null;
        ProjectData.ClearProjectError();
      }
      return next;
    }

    internal static int \uE952\uEF95\uEFCD\uEA81\uF020\uE4AB\uE598\uF418\uE1FC\uE91E\uF085\uF208(
      int _param0)
    {
      int num = _param0;
      switch (num - (-~-24972425 - -24972489))
      {
        case 0:
          return -125;
        case 1:
        case 3:
        case 6:
        case 8:
        case 11:
        case 12:
        case 14:
          return -(~(~-688131061 - 152601896) + 535529166);
        case 2:
          return ~(905332018 ^ 563065407) - -343537298;
        case 4:
          return -~(699994832 - 1053245421) + 353250465;
        case 5:
          return ~(-107599520 - 138539557 ^ -512354017) - -270675371;
        case 7:
          return -~-635258673 + 137002014 ^ 498256751;
        case 9:
          return -(~-662046516 - 662046411);
        case 10:
          return -((660399511 - 669593634 ^ -9202315) >> 6);
        case 13:
          return -(-130227266 - 97489538 ^ -227716789);
        case 15:
          return -(518659184 - 518659166);
        default:
          if (num == --607292090 - 607292006)
            return (568592196 ^ 99541359) - 604694089;
          goto case 1;
      }
    }

    public delegate void OnClearEventHandler();
  }
}
