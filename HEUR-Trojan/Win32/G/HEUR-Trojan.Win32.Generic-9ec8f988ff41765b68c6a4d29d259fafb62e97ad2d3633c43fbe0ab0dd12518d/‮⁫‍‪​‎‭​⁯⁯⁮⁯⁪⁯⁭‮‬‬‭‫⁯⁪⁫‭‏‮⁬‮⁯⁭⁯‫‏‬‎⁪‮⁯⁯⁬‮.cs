// Decompiled with JetBrains decompiler
// Type: ‮⁫‍‪​‎‭​⁯⁯⁮⁯⁪⁯⁭‮‬‬‭‫⁯⁪⁫‭‏‮⁬‮⁯⁭⁯‫‏‬‎⁪‮⁯⁯⁬‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using System;
using System.Collections;

public class \u202E⁫‍‪​‎‭​⁯⁯⁮⁯⁪⁯⁭‮‬‬‭‫⁯⁪⁫‭‏‮⁬‮⁯⁭⁯‫‏‬‎⁪‮⁯⁯⁬‮ : 
  \u200D‬⁪‌‍‫‪‎‭⁭⁫‏‎‬‫‌⁯‍‎⁬‎‮‭​⁯‪⁭‌‬⁬⁭‬‍‌⁫⁪‪⁫‍‬‮,
  \u202C‪⁭⁫⁬‏‬‪​⁭‪⁯‍‬⁯⁭‬‎⁯‮​​⁯⁫‮‫‍⁫‍​‭⁪‪⁭‭‌⁪‭‫⁬‮
{
  private const int \u200D‌‍⁭‬‭⁯‌​⁯‍​‬‮‬‭‎​‎⁮‎‬‍⁯‮⁪‌‪​​‍⁫⁮‫‍‫‌⁬‍⁭‮ = 16;
  private readonly \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ \u200B⁫‎‌‌‍⁮⁭‍‫⁯⁫‭⁫‭‫⁪‬⁫‌​‍‮‎⁮‍⁪‭‌‎‫⁪‏⁯⁮‬⁮‭‮‬‮;
  private readonly \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ \u202B‏‭⁬⁪​⁫⁯‎‫⁭‌‬‮‫⁪⁫‏‎‬‏‌⁭‬⁭⁭⁬⁮⁭⁮​⁭‮⁭‫‮⁯⁬⁬⁮‮;
  private bool \u206F⁬⁪‪‪‫‎⁪‍​‭​⁭⁫‍⁪⁮‮⁫‮⁭⁪‌‫‮​⁯‬‬⁪‭‮​​‌‎‬⁬‮‮‮;
  private int \u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮;
  private byte[] \u202E‭‎⁯‌⁪‎⁪⁪⁭‎⁮⁬‪‬⁯⁭​⁮⁭‏‍⁯⁬⁬⁭‍​‍​‍⁪⁫⁬​‮⁯‭⁭‮‮;
  private IList \u200D⁭‫​‮‪‎‌⁬⁯⁫‌⁫‍‎⁬⁬‫‭⁪‭‪‏‎‬‮‬‎‎​‎‫⁪⁮‬‮‮​‎⁬‮;
  private byte[] \u200F⁯‌‮⁪‭‎⁯⁯‎⁭‬‮⁯‬‏‭‫​‎‌‭‭‪‬⁭‭⁬​⁮⁭⁫⁯⁬‍‍‬⁭‮‮‮;
  private byte[] \u202A‫‎‭⁫‭‪‌‎⁬‬⁪⁫‏⁫‫⁫‪⁪⁮‫⁯‫‬‌‪⁫‏⁯⁮‬‬⁭‏⁭‮‪⁭⁯‏‮;
  private byte[] \u206E‭‍‭‫‏⁭⁫⁮‮‎‏⁫⁮‫‫‫⁪⁬⁬‪‭⁯‏‬​⁯⁬⁪⁪⁬‭‮⁮⁮‭‍​⁪‏‮;
  private byte[] \u206A⁯‫⁭‮‮‭‏‌‎⁫‍⁬‭‍⁫‭⁪​⁫‎⁬⁭⁭‬⁮⁬‌‪⁪‌⁯‫⁪‎‏‫⁯⁬⁪‮ = new byte[24];
  private byte[] \u200C‏‮⁮⁭‬​‎‬‫‏‎‏‫⁪‫‫‮‫‎⁪⁫‍​⁬‎‏​​‮‭​‏‪⁬​⁪⁪⁪‌‮ = new byte[16];
  private byte[] \u200F​‪⁪‬⁪‮‍⁪⁬⁮⁯‎‫‭​⁭⁭‫‫‮‮‍⁭‬‍‌‫​⁫‬⁯‪⁬⁫⁭‬‮‍‪‮;
  private byte[] \u202A‮⁮‌‭‍‪‍⁬⁫‮‎‌‫​‭⁪‬‪⁬‏⁭‫⁮⁭‮‮‏‮‍‭‎‫⁭‏‎⁬⁫⁮⁭‮;
  private int \u206F‪⁬‏‪⁬⁫⁪⁮⁪‏‍‏‍⁫‪⁮‫⁬‪‭⁬⁬‌⁭‫‏⁮‪‎⁭⁬⁭‪​⁭⁬‫⁯‌‮;
  private int \u200F‪‫⁪‬⁯‬‎‪‬⁬⁫‪‪⁫⁯‫⁭​‭⁮‫⁯⁪‬​⁮⁯⁫‌‪⁬‎⁬⁯⁮⁮‪‍‪‮;
  private long \u200F⁭⁬‫⁭⁫‍‌‍‍‪‌⁪‭⁯⁫‏‪‭‬‭‪⁮‍‎‮⁫​‮⁮‎‬‫‪‍⁭⁭​‍⁬‮;
  private long \u206A⁬‏‬‭⁬⁫‎​‬⁭‌‏‌‏‭⁫​‬‪‮‎⁮‮‌‏‮⁫⁯‎‪‫‫⁪‪⁪‍⁬‮‮‮;
  private byte[] \u200E‬‎⁪‍⁪‭‍‬‬‮‬‫‎⁭⁬‭⁮‏‪‮‫‮‍‬⁯⁬⁬⁯⁮⁫⁮‪⁬‍⁮‏⁪‏⁭‮;
  private byte[] \u206E‍⁫‌‮‫⁮‎‭‎⁫‏​‪⁮⁪​​⁮‎‎‍⁫‌‭‮‌‍‎⁭‍⁯‭⁯⁪‏‮‫‪⁮‮;
  private byte[] \u206D​⁪​⁪⁫‎⁯⁭‫‎⁬‫⁬⁫‭⁭⁬‎⁬‏‏‍‍⁪⁫‏‫⁯‏⁯‍⁮‮⁬‌⁭⁫‏‬‮ = new byte[16];
  private byte[] \u206E‏⁯‌⁪​‫‮⁪​‬‬‬​⁯⁯‫‎⁯‌⁮‎⁬​‍⁯⁯‮​⁪‪⁯‫‫⁮‎⁭‭⁪⁬‮;
  private byte[] \u202E⁫⁬‏⁪⁭⁪​‬⁬‎‍‌‍‌⁭‌⁮‌‪⁫‮​​⁭⁯‬⁬‌‫⁯‏‍⁮⁬⁪⁯‌⁮‎‮;

  public \u202E⁫‍‪​‎‭​⁯⁯⁮⁯⁪⁯⁭‮‬‬‭‫⁯⁪⁫‭‏‮⁬‮⁯⁭⁯‫‏‬‎⁪‮⁯⁯⁬‮(
    \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ _param1,
    \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ _param2)
  {
    if (_param1 == null)
      throw new ArgumentNullException("hashCipher");
    if (_param1.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮() != 16)
      throw new ArgumentException("must have a block size of " + 16.ToString(), "hashCipher");
    if (_param2 == null)
      throw new ArgumentNullException("mainCipher");
    if (_param2.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮() != 16)
      throw new ArgumentException("must have a block size of " + 16.ToString(), "mainCipher");
    if (!_param1.\u206B‪⁭‪⁮‍⁮‪⁭⁪‪​⁮‭‭⁬⁯‍‎⁮⁬‫‍‏‌⁬⁯⁯‮⁪‪‬‫⁯‬⁪‌‍‮‎‮.Equals(_param2.\u206B‪⁭‪⁮‍⁮‪⁭⁪‪​⁮‭‭⁬⁯‍‎⁮⁬‫‍‏‌⁬⁯⁯‮⁪‪‬‫⁯‬⁪‌‍‮‎‮))
      throw new ArgumentException("'hashCipher' and 'mainCipher' must be the same algorithm");
    this.\u200B⁫‎‌‌‍⁮⁭‍‫⁯⁫‭⁫‭‫⁪‬⁫‌​‍‮‎⁮‍⁪‭‌‎‫⁪‏⁯⁮‬⁮‭‮‬‮ = _param1;
    this.\u202B‏‭⁬⁪​⁫⁯‎‫⁭‌‬‮‫⁪⁫‏‎‬‏‌⁭‬⁭⁭⁬⁮⁭⁮​⁭‮⁭‫‮⁯⁬⁬⁮‮ = _param2;
  }

  public virtual \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ \u206F‍‬‪⁭⁭⁬⁪⁭⁪‌‎‮‌‍⁮⁪⁮⁯‪‭⁬‭‬‪​⁭⁮⁫‬⁪⁫⁪​‏​‎⁪‍‭‮() => this.\u202B‏‭⁬⁪​⁫⁯‎‫⁭‌‬‮‫⁪⁫‏‎‬‏‌⁭‬⁭⁭⁬⁮⁭⁮​⁭‮⁭‫‮⁯⁬⁬⁮‮;

  public virtual string \u206B‪⁭‪⁮‍⁮‪⁭⁪‪​⁮‭‭⁬⁯‍‎⁮⁬‫‍‏‌⁬⁯⁯‮⁪‪‬‫⁯‬⁪‌‍‮‎‮ => this.\u202B‏‭⁬⁪​⁫⁯‎‫⁭‌‬‮‫⁪⁫‏‎‬‏‌⁭‬⁭⁭⁬⁮⁭⁮​⁭‮⁭‫‮⁯⁬⁬⁮‮.\u206B‪⁭‪⁮‍⁮‪⁭⁪‪​⁮‭‭⁬⁯‍‎⁮⁬‫‍‏‌⁬⁯⁯‮⁪‪‬‫⁯‬⁪‌‍‮‎‮ + "/OCB";

  public virtual void \u206A⁭⁫‪‫‬⁪‎​⁯‎‪⁬⁭​‍⁪⁫‌⁪‫⁯​⁪⁫⁫‪‬⁬‏‫‮⁬‬⁭⁬⁫‍⁮‮(
    bool _param1,
    \u202B⁭⁮‬‎⁪‬⁪‬⁮⁪‮‬‍‎⁮‎⁫‎​‌⁫⁪‭‬‮‏‮​⁮‌‌‬‌⁯‮⁫‮‬⁫‮ _param2)
  {
    bool flag = this.\u206F⁬⁪‪‪‫‎⁪‍​‭​⁭⁫‍⁪⁮‮⁫‮⁭⁪‌‫‮​⁯‬‬⁪‭‮​​‌‎‬⁬‮‮‮;
    this.\u206F⁬⁪‪‪‫‎⁪‍​‭​⁭⁫‍⁪⁮‮⁫‮⁭⁪‌‫‮​⁯‬‬⁪‭‮​​‌‎‬⁬‮‮‮ = _param1;
    this.\u202E⁫⁬‏⁪⁭⁪​‬⁬‎‍‌‍‌⁭‌⁮‌‪⁫‮​​⁭⁯‬⁬‌‫⁯‏‍⁮⁬⁪⁯‌⁮‎‮ = (byte[]) null;
    byte[] numArray;
    \u200C⁭‎‪‬⁪⁭⁮‌​⁯‫⁪⁭⁬⁭‌‎⁮⁮⁯⁯​‏‎⁮‌‬⁪⁭⁬​⁯‏⁪‌‮‍⁮‮ obj1;
    switch (_param2)
    {
      case \u200E⁪‏⁬‍‪⁬‌‪‭‪​‮‍‬⁬‬‪‌‭‭‌‌‍⁮⁪⁯⁫‍​‎‏⁪‮‌⁬⁯⁫⁯⁬‮ _:
        \u200E⁪‏⁬‍‪⁬‌‪‭‪​‮‍‬⁬‬‪‌‭‭‌‌‍⁮⁪⁯⁫‍​‎‏⁪‮‌⁬⁯⁫⁯⁬‮ obj2 = (\u200E⁪‏⁬‍‪⁬‌‪‭‪​‮‍‬⁬‬‪‌‭‭‌‌‍⁮⁪⁯⁫‍​‎‏⁪‮‌⁬⁯⁫⁯⁬‮) _param2;
        numArray = obj2.\u200B‫‭⁮‌‍⁪‪‪‏‌⁯⁮⁫‌‫⁪⁪⁯​⁮​‏​⁬‭‮‮⁪⁬​‪⁬⁯⁫​‍⁬‍⁪‮();
        this.\u202E‭‎⁯‌⁪‎⁪⁪⁭‎⁮⁬‪‬⁯⁭​⁮⁭‏‍⁯⁬⁬⁭‍​‍​‍⁪⁫⁬​‮⁯‭⁭‮‮ = obj2.\u202C​‮‍⁪‌‮​‏​‫⁭⁭‬⁮‪‍⁬​⁭‫‭‏⁬‬‎⁮‍‌‬⁬‏‬‎‌⁫‮​‮‫‮();
        int num1 = obj2.\u202D‮⁬‌⁫⁮⁬‫‎‮‬‬⁪⁪⁭⁪⁫⁯⁪‬‏⁭‮​‬‬⁯⁮‍‫‏‏‎‭‬⁬‌‭​‌‮;
        if (num1 < 64 || num1 > 128 || num1 % 8 != 0)
          throw new ArgumentException("Invalid value for MAC size: " + num1.ToString());
        this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮ = num1 / 8;
        obj1 = obj2.\u206F⁬‌‍⁪‎⁪‎‏‬‎⁮‫‫‏⁫‎⁬‫‪‎‍⁪​‎⁭‬‏‮‫⁮⁯‬‌⁬‮⁭​‮⁭‮;
        break;
      case \u200C⁯‭‏⁯‬‌‌‏​‌‫⁬‮⁮⁫‬⁬‮⁪‍​⁯‮⁭‏‫‪‍‬⁮​‬⁭⁯‍⁭‭‪⁬‮ _:
        \u200C⁯‭‏⁯‬‌‌‏​‌‫⁬‮⁮⁫‬⁬‮⁪‍​⁯‮⁭‏‫‪‍‬⁮​‬⁭⁯‍⁭‭‪⁬‮ obj3 = (\u200C⁯‭‏⁯‬‌‌‏​‌‫⁬‮⁮⁫‬⁬‮⁪‍​⁯‮⁭‏‫‪‍‬⁮​‬⁭⁯‍⁭‭‪⁬‮) _param2;
        numArray = obj3.\u202A‌⁭‍‪‭‍‍⁪⁭⁫‮⁬‍⁪⁪‪⁬‏⁭⁫⁫⁬‫⁬‪‏⁯‍⁪‍‮‫⁪‏‬⁯‭‏‪‮();
        this.\u202E‭‎⁯‌⁪‎⁪⁪⁭‎⁮⁬‪‬⁯⁭​⁮⁭‏‍⁯⁬⁬⁭‍​‍​‍⁪⁫⁬​‮⁯‭⁭‮‮ = (byte[]) null;
        this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮ = 16;
        obj1 = (\u200C⁭‎‪‬⁪⁭⁮‌​⁯‫⁪⁭⁬⁭‌‎⁮⁮⁯⁯​‏‎⁮‌‬⁪⁭⁬​⁯‏⁪‌‮‍⁮‮) obj3.\u202C⁬⁮⁮‮⁮​‫⁪⁬⁬⁬​‎‍⁭⁫‍⁯‬⁪‬⁮⁪‬‬⁭⁭⁫⁫‏‭⁪‬​‮​‫‫⁫‮;
        break;
      default:
        throw new ArgumentException("invalid parameters passed to OCB");
    }
    this.\u200F​‪⁪‬⁪‮‍⁪⁬⁮⁯‎‫‭​⁭⁭‫‫‮‮‍⁭‬‍‌‫​⁫‬⁯‪⁬⁫⁭‬‮‍‪‮ = new byte[16];
    this.\u202A‮⁮‌‭‍‪‍⁬⁫‮‎‌‫​‭⁪‬‪⁬‏⁭‫⁮⁭‮‮‏‮‍‭‎‫⁭‏‎⁬⁫⁮⁭‮ = new byte[_param1 ? 16 : 16 + this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮];
    if (numArray == null)
      numArray = new byte[0];
    if (numArray.Length > 15)
      throw new ArgumentException("IV must be no more than 15 bytes");
    if (obj1 != null)
    {
      this.\u200B⁫‎‌‌‍⁮⁭‍‫⁯⁫‭⁫‭‫⁪‬⁫‌​‍‮‎⁮‍⁪‭‌‎‫⁪‏⁯⁮‬⁮‭‮‬‮.\u206A⁭⁫‪‫‬⁪‎​⁯‎‪⁬⁭​‍⁪⁫‌⁪‫⁯​⁪⁫⁫‪‬⁬‏‫‮⁬‬⁭⁬⁫‍⁮‮(true, (\u202B⁭⁮‬‎⁪‬⁪‬⁮⁪‮‬‍‎⁮‎⁫‎​‌⁫⁪‭‬‮‏‮​⁮‌‌‬‌⁯‮⁫‮‬⁫‮) obj1);
      this.\u202B‏‭⁬⁪​⁫⁯‎‫⁭‌‬‮‫⁪⁫‏‎‬‏‌⁭‬⁭⁭⁬⁮⁭⁮​⁭‮⁭‫‮⁯⁬⁬⁮‮.\u206A⁭⁫‪‫‬⁪‎​⁯‎‪⁬⁭​‍⁪⁫‌⁪‫⁯​⁪⁫⁫‪‬⁬‏‫‮⁬‬⁭⁬⁫‍⁮‮(_param1, (\u202B⁭⁮‬‎⁪‬⁪‬⁮⁪‮‬‍‎⁮‎⁫‎​‌⁫⁪‭‬‮‏‮​⁮‌‌‬‌⁯‮⁫‮‬⁫‮) obj1);
      this.\u206E‭‍‭‫‏⁭⁫⁮‮‎‏⁫⁮‫‫‫⁪⁬⁬‪‭⁯‏‬​⁯⁬⁪⁪⁬‭‮⁮⁮‭‍​⁪‏‮ = (byte[]) null;
    }
    else if (flag != _param1)
      throw new ArgumentException("cannot change encrypting state without providing key.");
    this.\u200F⁯‌‮⁪‭‎⁯⁯‎⁭‬‮⁯‬‏‭‫​‎‌‭‭‪‬⁭‭⁬​⁮⁭⁫⁯⁬‍‍‬⁭‮‮‮ = new byte[16];
    this.\u200B⁫‎‌‌‍⁮⁭‍‫⁯⁫‭⁫‭‫⁪‬⁫‌​‍‮‎⁮‍⁪‭‌‎‫⁪‏⁯⁮‬⁮‭‮‬‮.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(this.\u200F⁯‌‮⁪‭‎⁯⁯‎⁭‬‮⁯‬‏‭‫​‎‌‭‭‪‬⁭‭⁬​⁮⁭⁫⁯⁬‍‍‬⁭‮‮‮, 0, this.\u200F⁯‌‮⁪‭‎⁯⁯‎⁭‬‮⁯‬‏‭‫​‎‌‭‭‪‬⁭‭⁬​⁮⁭⁫⁯⁬‍‍‬⁭‮‮‮, 0);
    this.\u202A‫‎‭⁫‭‪‌‎⁬‬⁪⁫‏⁫‫⁫‪⁪⁮‫⁯‫‬‌‪⁫‏⁯⁮‬‬⁭‏⁭‮‪⁭⁯‏‮ = \u202E⁫‍‪​‎‭​⁯⁯⁮⁯⁪⁯⁭‮‬‬‭‫⁯⁪⁫‭‏‮⁬‮⁯⁭⁯‫‏‬‎⁪‮⁯⁯⁬‮.\u200F⁮⁭‫‍‌⁬⁯⁯⁬⁮​​​‫‬⁬‎‬⁮‎‭⁯‏‍⁭⁯‌⁮‭‬‬⁭‍‮⁯‍⁬‏⁪‮(this.\u200F⁯‌‮⁪‭‎⁯⁯‎⁭‬‮⁯‬‏‭‫​‎‌‭‭‪‬⁭‭⁬​⁮⁭⁫⁯⁬‍‍‬⁭‮‮‮);
    this.\u200D⁭‫​‮‪‎‌⁬⁯⁫‌⁫‍‎⁬⁬‫‭⁪‭‪‏‎‬‮‬‎‎​‎‫⁪⁮‬‮‮​‎⁬‮ = \u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u200C⁮‬‎⁪‌⁮‬​⁬⁭​‏⁮​‍‌⁮‮⁪⁪⁫‪‫‎⁮‎⁬​​‏⁪‪‍‬‪⁬⁫⁪‏‮();
    this.\u200D⁭‫​‮‪‎‌⁬⁯⁫‌⁫‍‎⁬⁬‫‭⁪‭‪‏‎‬‮‬‎‎​‎‫⁪⁮‬‮‮​‎⁬‮.Add((object) \u202E⁫‍‪​‎‭​⁯⁯⁮⁯⁪⁯⁭‮‬‬‭‫⁯⁪⁫‭‏‮⁬‮⁯⁭⁯‫‏‬‎⁪‮⁯⁯⁬‮.\u200F⁮⁭‫‍‌⁬⁯⁯⁬⁮​​​‫‬⁬‎‬⁮‎‭⁯‏‍⁭⁯‌⁮‭‬‬⁭‍‮⁯‍⁬‏⁪‮(this.\u202A‫‎‭⁫‭‪‌‎⁬‬⁪⁫‏⁫‫⁫‪⁪⁮‫⁯‫‬‌‪⁫‏⁯⁮‬‬⁭‏⁭‮‪⁭⁯‏‮));
    int num2 = this.\u200C‬⁭‬‎‫⁪‍⁬‎‬‭‫⁭‏‍⁬‏⁪⁫⁪‪‏‎‍⁭‎‪‏‭‭‍⁮‌‬​‬⁯​‫‮(numArray);
    int num3 = num2 % 8;
    int sourceIndex = num2 / 8;
    if (num3 == 0)
    {
      Array.Copy((Array) this.\u206A⁯‫⁭‮‮‭‏‌‎⁫‍⁬‭‍⁫‭⁪​⁫‎⁬⁭⁭‬⁮⁬‌‪⁪‌⁯‫⁪‎‏‫⁯⁬⁪‮, sourceIndex, (Array) this.\u200C‏‮⁮⁭‬​‎‬‫‏‎‏‫⁪‫‫‮‫‎⁪⁫‍​⁬‎‏​​‮‭​‏‪⁬​⁪⁪⁪‌‮, 0, 16);
    }
    else
    {
      for (int index = 0; index < 16; ++index)
      {
        uint num4 = (uint) this.\u206A⁯‫⁭‮‮‭‏‌‎⁫‍⁬‭‍⁫‭⁪​⁫‎⁬⁭⁭‬⁮⁬‌‪⁪‌⁯‫⁪‎‏‫⁯⁬⁪‮[sourceIndex];
        uint num5 = (uint) this.\u206A⁯‫⁭‮‮‭‏‌‎⁫‍⁬‭‍⁫‭⁪​⁫‎⁬⁭⁭‬⁮⁬‌‪⁪‌⁯‫⁪‎‏‫⁯⁬⁪‮[++sourceIndex];
        this.\u200C‏‮⁮⁭‬​‎‬‫‏‎‏‫⁪‫‫‮‫‎⁪⁫‍​⁬‎‏​​‮‭​‏‪⁬​⁪⁪⁪‌‮[index] = (byte) (num4 << num3 | num5 >> 8 - num3);
      }
    }
    this.\u206F‪⁬‏‪⁬⁫⁪⁮⁪‏‍‏‍⁫‪⁮‫⁬‪‭⁬⁬‌⁭‫‏⁮‪‎⁭⁬⁭‪​⁭⁬‫⁯‌‮ = 0;
    this.\u200F‪‫⁪‬⁯‬‎‪‬⁬⁫‪‪⁫⁯‫⁭​‭⁮‫⁯⁪‬​⁮⁯⁫‌‪⁬‎⁬⁯⁮⁮‪‍‪‮ = 0;
    this.\u200F⁭⁬‫⁭⁫‍‌‍‍‪‌⁪‭⁯⁫‏‪‭‬‭‪⁮‍‎‮⁫​‮⁮‎‬‫‪‍⁭⁭​‍⁬‮ = 0L;
    this.\u206A⁬‏‬‭⁬⁫‎​‬⁭‌‏‌‏‭⁫​‬‪‮‎⁮‮‌‏‮⁫⁯‎‪‫‫⁪‪⁪‍⁬‮‮‮ = 0L;
    this.\u200E‬‎⁪‍⁪‭‍‬‬‮‬‫‎⁭⁬‭⁮‏‪‮‫‮‍‬⁯⁬⁬⁯⁮⁫⁮‪⁬‍⁮‏⁪‏⁭‮ = new byte[16];
    this.\u206E‍⁫‌‮‫⁮‎‭‎⁫‏​‪⁮⁪​​⁮‎‎‍⁫‌‭‮‌‍‎⁭‍⁯‭⁯⁪‏‮‫‪⁮‮ = new byte[16];
    Array.Copy((Array) this.\u200C‏‮⁮⁭‬​‎‬‫‏‎‏‫⁪‫‫‮‫‎⁪⁫‍​⁬‎‏​​‮‭​‏‪⁬​⁪⁪⁪‌‮, 0, (Array) this.\u206D​⁪​⁪⁫‎⁯⁭‫‎⁬‫⁬⁫‭⁭⁬‎⁬‏‏‍‍⁪⁫‏‫⁯‏⁯‍⁮‮⁬‌⁭⁫‏‬‮, 0, 16);
    this.\u206E‏⁯‌⁪​‫‮⁪​‬‬‬​⁯⁯‫‎⁯‌⁮‎⁬​‍⁯⁯‮​⁪‪⁯‫‫⁮‎⁭‭⁪⁬‮ = new byte[16];
    if (this.\u202E‭‎⁯‌⁪‎⁪⁪⁭‎⁮⁬‪‬⁯⁭​⁮⁭‏‍⁯⁬⁬⁭‍​‍​‍⁪⁫⁬​‮⁯‭⁭‮‮ == null)
      return;
    this.\u200C‌​⁪‫‌‌⁫⁪⁮‍⁪⁫‍⁫⁭‪⁪‭⁪‭‌‍⁭‮‫‪‏‪‬‮‪⁯⁫‬⁭⁪⁪⁪‭‮(this.\u202E‭‎⁯‌⁪‎⁪⁪⁭‎⁮⁬‪‬⁯⁭​⁮⁭‏‍⁯⁬⁬⁭‍​‍​‍⁪⁫⁬​‮⁯‭⁭‮‮, 0, this.\u202E‭‎⁯‌⁪‎⁪⁪⁭‎⁮⁬‪‬⁯⁭​⁮⁭‏‍⁯⁬⁬⁭‍​‍​‍⁪⁫⁬​‮⁯‭⁭‮‮.Length);
  }

  protected virtual int \u200C‬⁭‬‎‫⁪‍⁬‎‬‭‫⁭‏‍⁬‏⁪⁫⁪‪‏‎‍⁭‎‪‏‭‭‍⁮‌‬​‬⁯​‫‮(byte[] _param1)
  {
    byte[] destinationArray = new byte[16];
    Array.Copy((Array) _param1, 0, (Array) destinationArray, destinationArray.Length - _param1.Length, _param1.Length);
    destinationArray[0] = (byte) (this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮ << 4);
    destinationArray[15 - _param1.Length] |= (byte) 1;
    int num = (int) destinationArray[15] & 63;
    destinationArray[15] &= (byte) 192;
    if (this.\u206E‭‍‭‫‏⁭⁫⁮‮‎‏⁫⁮‫‫‫⁪⁬⁬‪‭⁯‏‬​⁯⁬⁪⁪⁬‭‮⁮⁮‭‍​⁪‏‮ == null || !\u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u200D‮‫‏⁮‮‪‎⁬‪‌⁮‏⁬⁫⁪‮‎⁪‫‬⁫‌‎​‏⁪⁫‎‎‫⁬‌⁭‫⁯⁭‪⁫‏‮(destinationArray, this.\u206E‭‍‭‫‏⁭⁫⁮‮‎‏⁫⁮‫‫‫⁪⁬⁬‪‭⁯‏‬​⁯⁬⁪⁪⁬‭‮⁮⁮‭‍​⁪‏‮))
    {
      byte[] sourceArray = new byte[16];
      this.\u206E‭‍‭‫‏⁭⁫⁮‮‎‏⁫⁮‫‫‫⁪⁬⁬‪‭⁯‏‬​⁯⁬⁪⁪⁬‭‮⁮⁮‭‍​⁪‏‮ = destinationArray;
      this.\u200B⁫‎‌‌‍⁮⁭‍‫⁯⁫‭⁫‭‫⁪‬⁫‌​‍‮‎⁮‍⁪‭‌‎‫⁪‏⁯⁮‬⁮‭‮‬‮.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(this.\u206E‭‍‭‫‏⁭⁫⁮‮‎‏⁫⁮‫‫‫⁪⁬⁬‪‭⁯‏‬​⁯⁬⁪⁪⁬‭‮⁮⁮‭‍​⁪‏‮, 0, sourceArray, 0);
      Array.Copy((Array) sourceArray, 0, (Array) this.\u206A⁯‫⁭‮‮‭‏‌‎⁫‍⁬‭‍⁫‭⁪​⁫‎⁬⁭⁭‬⁮⁬‌‪⁪‌⁯‫⁪‎‏‫⁯⁬⁪‮, 0, 16);
      for (int index = 0; index < 8; ++index)
        this.\u206A⁯‫⁭‮‮‭‏‌‎⁫‍⁬‭‍⁫‭⁪​⁫‎⁬⁭⁭‬⁮⁬‌‪⁪‌⁯‫⁪‎‏‫⁯⁬⁪‮[16 + index] = (byte) ((uint) sourceArray[index] ^ (uint) sourceArray[index + 1]);
    }
    return num;
  }

  public virtual int \u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮() => 16;

  public virtual byte[] \u200C⁬⁬‏⁭‮‫‎‏‌‮‌‍‮‪⁭⁯‫‪‭‮‪⁮⁮‭‌‏⁮‏⁫⁯‭‪‬​​‮‮⁮⁭‮() => this.\u202E⁫⁬‏⁪⁭⁪​‬⁬‎‍‌‍‌⁭‌⁮‌‪⁫‮​​⁭⁯‬⁬‌‫⁯‏‍⁮⁬⁪⁯‌⁮‎‮ != null ? \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u206F‬⁯‪⁬⁮⁭⁮‮‭‬‌‌‎⁪⁫‍‭‍‮‌⁬‮‏‍‪‬‮⁯‫‪‭‬⁭‏⁮⁯​‮⁬‮(this.\u202E⁫⁬‏⁪⁭⁪​‬⁬‎‍‌‍‌⁭‌⁮‌‪⁫‮​​⁭⁯‬⁬‌‫⁯‏‍⁮⁬⁪⁯‌⁮‎‮) : new byte[this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮];

  public virtual int \u200E‍‮‎‎‎​‫⁫‍‮‭‫⁬⁭⁪​‮⁭‫⁫‌⁫⁯‮‪⁪‭⁭‬‎​⁪‎‪‫⁯‭‌⁫‮(int _param1)
  {
    int num = _param1 + this.\u200F‪‫⁪‬⁯‬‎‪‬⁬⁫‪‪⁫⁯‫⁭​‭⁮‫⁯⁪‬​⁮⁯⁫‌‪⁬‎⁬⁯⁮⁮‪‍‪‮;
    if (this.\u206F⁬⁪‪‪‫‎⁪‍​‭​⁭⁫‍⁪⁮‮⁫‮⁭⁪‌‫‮​⁯‬‬⁪‭‮​​‌‎‬⁬‮‮‮)
      return num + this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮;
    return num >= this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮ ? num - this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮ : 0;
  }

  public virtual int \u200F‮⁭⁫‌‎‏​‭‏​⁯‫⁯​‮‫⁪⁫⁬⁮⁭⁯‏​⁫⁯​‮⁫⁮⁮⁫‍⁫‬‪⁮‎‫‮(int _param1)
  {
    int num = _param1 + this.\u200F‪‫⁪‬⁯‬‎‪‬⁬⁫‪‪⁫⁯‫⁭​‭⁮‫⁯⁪‬​⁮⁯⁫‌‪⁬‎⁬⁯⁮⁮‪‍‪‮;
    if (!this.\u206F⁬⁪‪‪‫‎⁪‍​‭​⁭⁫‍⁪⁮‮⁫‮⁭⁪‌‫‮​⁯‬‬⁪‭‮​​‌‎‬⁬‮‮‮)
    {
      if (num < this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮)
        return 0;
      num -= this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮;
    }
    return num - num % 16;
  }

  public virtual void \u202B⁪⁫‮‬‪⁬⁭⁯‌⁬‬‍‌⁫‭‏‭⁮‮‮⁬‌‭‬‏⁯‫‪⁭‏​‎‍⁮⁬⁬⁫‮⁪‮(byte _param1)
  {
    this.\u200F​‪⁪‬⁪‮‍⁪⁬⁮⁯‎‫‭​⁭⁭‫‫‮‮‍⁭‬‍‌‫​⁫‬⁯‪⁬⁫⁭‬‮‍‪‮[this.\u206F‪⁬‏‪⁬⁫⁪⁮⁪‏‍‏‍⁫‪⁮‫⁬‪‭⁬⁬‌⁭‫‏⁮‪‎⁭⁬⁭‪​⁭⁬‫⁯‌‮] = _param1;
    if (++this.\u206F‪⁬‏‪⁬⁫⁪⁮⁪‏‍‏‍⁫‪⁮‫⁬‪‭⁬⁬‌⁭‫‏⁮‪‎⁭⁬⁭‪​⁭⁬‫⁯‌‮ != this.\u200F​‪⁪‬⁪‮‍⁪⁬⁮⁯‎‫‭​⁭⁭‫‫‮‮‍⁭‬‍‌‫​⁫‬⁯‪⁬⁫⁭‬‮‍‪‮.Length)
      return;
    this.\u206C⁫⁫​‪‎‏⁪‭​⁯⁫⁯⁮‬‬‏‏‏⁮⁪⁭⁮‍‪‌‎​‬‌⁭‫⁮‮⁭⁪‬⁯⁭‬‮();
  }

  public virtual void \u200C‌​⁪‫‌‌⁫⁪⁮‍⁪⁫‍⁫⁭‪⁪‭⁪‭‌‍⁭‮‫‪‏‪‬‮‪⁯⁫‬⁭⁪⁪⁪‭‮(
    byte[] _param1,
    int _param2,
    int _param3)
  {
    for (int index = 0; index < _param3; ++index)
    {
      this.\u200F​‪⁪‬⁪‮‍⁪⁬⁮⁯‎‫‭​⁭⁭‫‫‮‮‍⁭‬‍‌‫​⁫‬⁯‪⁬⁫⁭‬‮‍‪‮[this.\u206F‪⁬‏‪⁬⁫⁪⁮⁪‏‍‏‍⁫‪⁮‫⁬‪‭⁬⁬‌⁭‫‏⁮‪‎⁭⁬⁭‪​⁭⁬‫⁯‌‮] = _param1[_param2 + index];
      if (++this.\u206F‪⁬‏‪⁬⁫⁪⁮⁪‏‍‏‍⁫‪⁮‫⁬‪‭⁬⁬‌⁭‫‏⁮‪‎⁭⁬⁭‪​⁭⁬‫⁯‌‮ == this.\u200F​‪⁪‬⁪‮‍⁪⁬⁮⁯‎‫‭​⁭⁭‫‫‮‮‍⁭‬‍‌‫​⁫‬⁯‪⁬⁫⁭‬‮‍‪‮.Length)
        this.\u206C⁫⁫​‪‎‏⁪‭​⁯⁫⁯⁮‬‬‏‏‏⁮⁪⁭⁮‍‪‌‎​‬‌⁭‫⁮‮⁭⁪‬⁯⁭‬‮();
    }
  }

  public virtual int \u200E⁯‬‎⁯⁭⁭‬⁬⁫‍‌‫‫⁮‭‫‍⁫⁯⁫⁫‫‭‭‌​‫‏‬⁫‏‪⁪‬⁫‎‍‫⁮‮(
    byte _param1,
    byte[] _param2,
    int _param3)
  {
    this.\u202A‮⁮‌‭‍‪‍⁬⁫‮‎‌‫​‭⁪‬‪⁬‏⁭‫⁮⁭‮‮‏‮‍‭‎‫⁭‏‎⁬⁫⁮⁭‮[this.\u200F‪‫⁪‬⁯‬‎‪‬⁬⁫‪‪⁫⁯‫⁭​‭⁮‫⁯⁪‬​⁮⁯⁫‌‪⁬‎⁬⁯⁮⁮‪‍‪‮] = _param1;
    if (++this.\u200F‪‫⁪‬⁯‬‎‪‬⁬⁫‪‪⁫⁯‫⁭​‭⁮‫⁯⁪‬​⁮⁯⁫‌‪⁬‎⁬⁯⁮⁮‪‍‪‮ != this.\u202A‮⁮‌‭‍‪‍⁬⁫‮‎‌‫​‭⁪‬‪⁬‏⁭‫⁮⁭‮‮‏‮‍‭‎‫⁭‏‎⁬⁫⁮⁭‮.Length)
      return 0;
    this.\u206F‏‮⁭‏‮⁮⁭⁭⁬‪⁪‫‎⁮‎‎⁪‏⁬‎‍‭⁭‬‫‎⁬‬⁬⁮‫⁫​‫‍⁬‪‎⁪‮(_param2, _param3);
    return 16;
  }

  public virtual int \u206D‫⁭‪‭‏‎‌⁪⁪⁯‪​‌⁯‪‮⁮⁭‎⁪​⁯⁮‪‬‮⁪‭‬‍‫⁪⁭‍⁪‏⁪⁬‪‮(
    byte[] _param1,
    int _param2,
    int _param3,
    byte[] _param4,
    int _param5)
  {
    int num = 0;
    for (int index = 0; index < _param3; ++index)
    {
      this.\u202A‮⁮‌‭‍‪‍⁬⁫‮‎‌‫​‭⁪‬‪⁬‏⁭‫⁮⁭‮‮‏‮‍‭‎‫⁭‏‎⁬⁫⁮⁭‮[this.\u200F‪‫⁪‬⁯‬‎‪‬⁬⁫‪‪⁫⁯‫⁭​‭⁮‫⁯⁪‬​⁮⁯⁫‌‪⁬‎⁬⁯⁮⁮‪‍‪‮] = _param1[_param2 + index];
      if (++this.\u200F‪‫⁪‬⁯‬‎‪‬⁬⁫‪‪⁫⁯‫⁭​‭⁮‫⁯⁪‬​⁮⁯⁫‌‪⁬‎⁬⁯⁮⁮‪‍‪‮ == this.\u202A‮⁮‌‭‍‪‍⁬⁫‮‎‌‫​‭⁪‬‪⁬‏⁭‫⁮⁭‮‮‏‮‍‭‎‫⁭‏‎⁬⁫⁮⁭‮.Length)
      {
        this.\u206F‏‮⁭‏‮⁮⁭⁭⁬‪⁪‫‎⁮‎‎⁪‏⁬‎‍‭⁭‬‫‎⁬‬⁬⁮‫⁫​‫‍⁬‪‎⁪‮(_param4, _param5 + num);
        num += 16;
      }
    }
    return num;
  }

  public virtual int \u200F‏‏‬‫​⁮‬⁫‌‌⁮⁬‏⁭‭‌⁯⁪​‍​⁮⁫‮‫⁮‌‎‪⁬⁯⁪‪⁬‫⁫⁮‪⁭‮(byte[] _param1, int _param2)
  {
    byte[] destinationArray = (byte[]) null;
    if (!this.\u206F⁬⁪‪‪‫‎⁪‍​‭​⁭⁫‍⁪⁮‮⁫‮⁭⁪‌‫‮​⁯‬‬⁪‭‮​​‌‎‬⁬‮‮‮)
    {
      if (this.\u200F‪‫⁪‬⁯‬‎‪‬⁬⁫‪‪⁫⁯‫⁭​‭⁮‫⁯⁪‬​⁮⁯⁫‌‪⁬‎⁬⁯⁮⁮‪‍‪‮ < this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮)
        throw new \u206F⁭‭‫‎‍‏⁯‬‍‌​⁭⁮‬⁪⁬⁮⁯‪⁪‏‬‭⁬⁫‪​‬‬‎⁪‪⁪‭‏‫‬⁪‏‮("data too short");
      this.\u200F‪‫⁪‬⁯‬‎‪‬⁬⁫‪‪⁫⁯‫⁭​‭⁮‫⁯⁪‬​⁮⁯⁫‌‪⁬‎⁬⁯⁮⁮‪‍‪‮ -= this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮;
      destinationArray = new byte[this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮];
      Array.Copy((Array) this.\u202A‮⁮‌‭‍‪‍⁬⁫‮‎‌‫​‭⁪‬‪⁬‏⁭‫⁮⁭‮‮‏‮‍‭‎‫⁭‏‎⁬⁫⁮⁭‮, this.\u200F‪‫⁪‬⁯‬‎‪‬⁬⁫‪‪⁫⁯‫⁭​‭⁮‫⁯⁪‬​⁮⁯⁫‌‪⁬‎⁬⁯⁮⁮‪‍‪‮, (Array) destinationArray, 0, this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮);
    }
    if (this.\u206F‪⁬‏‪⁬⁫⁪⁮⁪‏‍‏‍⁫‪⁮‫⁬‪‭⁬⁬‌⁭‫‏⁮‪‎⁭⁬⁭‪​⁭⁬‫⁯‌‮ > 0)
    {
      \u202E⁫‍‪​‎‭​⁯⁯⁮⁯⁪⁯⁭‮‬‬‭‫⁯⁪⁫‭‏‮⁬‮⁯⁭⁯‫‏‬‎⁪‮⁯⁯⁬‮.\u202C​⁫‬‮⁪‏‍⁮‫⁪⁪⁯⁬‮‌‌‮‪​‮‍⁪⁫‍⁮‮​​⁪‎‮⁫‪‪⁮⁫‍‬⁮‮(this.\u200F​‪⁪‬⁪‮‍⁪⁬⁮⁯‎‫‭​⁭⁭‫‫‮‮‍⁭‬‍‌‫​⁫‬⁯‪⁬⁫⁭‬‮‍‪‮, this.\u206F‪⁬‏‪⁬⁫⁪⁮⁪‏‍‏‍⁫‪⁮‫⁬‪‭⁬⁬‌⁭‫‏⁮‪‎⁭⁬⁭‪​⁭⁬‫⁯‌‮);
      this.\u202D‬‫⁮⁪‎‫‍‎‏‭⁫⁫⁯⁭‬‍⁭‎‍⁬‪‎⁬⁮⁯‍‬⁬‎⁫‭‫⁫​⁯⁫‪⁭‮‮(this.\u200F⁯‌‮⁪‭‎⁯⁯‎⁭‬‮⁯‬‏‭‫​‎‌‭‭‪‬⁭‭⁬​⁮⁭⁫⁯⁬‍‍‬⁭‮‮‮);
    }
    if (this.\u200F‪‫⁪‬⁯‬‎‪‬⁬⁫‪‪⁫⁯‫⁭​‭⁮‫⁯⁪‬​⁮⁯⁫‌‪⁬‎⁬⁯⁮⁮‪‍‪‮ > 0)
    {
      if (this.\u206F⁬⁪‪‪‫‎⁪‍​‭​⁭⁫‍⁪⁮‮⁫‮⁭⁪‌‫‮​⁯‬‬⁪‭‮​​‌‎‬⁬‮‮‮)
      {
        \u202E⁫‍‪​‎‭​⁯⁯⁮⁯⁪⁯⁭‮‬‬‭‫⁯⁪⁫‭‏‮⁬‮⁯⁭⁯‫‏‬‎⁪‮⁯⁯⁬‮.\u202C​⁫‬‮⁪‏‍⁮‫⁪⁪⁯⁬‮‌‌‮‪​‮‍⁪⁫‍⁮‮​​⁪‎‮⁫‪‪⁮⁫‍‬⁮‮(this.\u202A‮⁮‌‭‍‪‍⁬⁫‮‎‌‫​‭⁪‬‪⁬‏⁭‫⁮⁭‮‮‏‮‍‭‎‫⁭‏‎⁬⁫⁮⁭‮, this.\u200F‪‫⁪‬⁯‬‎‪‬⁬⁫‪‪⁫⁯‫⁭​‭⁮‫⁯⁪‬​⁮⁯⁫‌‪⁬‎⁬⁯⁮⁮‪‍‪‮);
        \u202E⁫‍‪​‎‭​⁯⁯⁮⁯⁪⁯⁭‮‬‬‭‫⁯⁪⁫‭‏‮⁬‮⁯⁭⁯‫‏‬‎⁪‮⁯⁯⁬‮.\u202B⁬‍⁭‎‭‌⁯⁭‎⁮‭‫‬‎‬⁬⁬‪‏‍‏‭‪‪⁫⁫‌‪⁬‪⁬‬⁮​​‍​⁯‎‮(this.\u206E‏⁯‌⁪​‫‮⁪​‬‬‬​⁯⁯‫‎⁯‌⁮‎⁬​‍⁯⁯‮​⁪‪⁯‫‫⁮‎⁭‭⁪⁬‮, this.\u202A‮⁮‌‭‍‪‍⁬⁫‮‎‌‫​‭⁪‬‪⁬‏⁭‫⁮⁭‮‮‏‮‍‭‎‫⁭‏‎⁬⁫⁮⁭‮);
      }
      \u202E⁫‍‪​‎‭​⁯⁯⁮⁯⁪⁯⁭‮‬‬‭‫⁯⁪⁫‭‏‮⁬‮⁯⁭⁯‫‏‬‎⁪‮⁯⁯⁬‮.\u202B⁬‍⁭‎‭‌⁯⁭‎⁮‭‫‬‎‬⁬⁬‪‏‍‏‭‪‪⁫⁫‌‪⁬‪⁬‬⁮​​‍​⁯‎‮(this.\u206D​⁪​⁪⁫‎⁯⁭‫‎⁬‫⁬⁫‭⁭⁬‎⁬‏‏‍‍⁪⁫‏‫⁯‏⁯‍⁮‮⁬‌⁭⁫‏‬‮, this.\u200F⁯‌‮⁪‭‎⁯⁯‎⁭‬‮⁯‬‏‭‫​‎‌‭‭‪‬⁭‭⁬​⁮⁭⁫⁯⁬‍‍‬⁭‮‮‮);
      byte[] numArray = new byte[16];
      this.\u200B⁫‎‌‌‍⁮⁭‍‫⁯⁫‭⁫‭‫⁪‬⁫‌​‍‮‎⁮‍⁪‭‌‎‫⁪‏⁯⁮‬⁮‭‮‬‮.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(this.\u206D​⁪​⁪⁫‎⁯⁭‫‎⁬‫⁬⁫‭⁭⁬‎⁬‏‏‍‍⁪⁫‏‫⁯‏⁯‍⁮‮⁬‌⁭⁫‏‬‮, 0, numArray, 0);
      \u202E⁫‍‪​‎‭​⁯⁯⁮⁯⁪⁯⁭‮‬‬‭‫⁯⁪⁫‭‏‮⁬‮⁯⁭⁯‫‏‬‎⁪‮⁯⁯⁬‮.\u202B⁬‍⁭‎‭‌⁯⁭‎⁮‭‫‬‎‬⁬⁬‪‏‍‏‭‪‪⁫⁫‌‪⁬‪⁬‬⁮​​‍​⁯‎‮(this.\u202A‮⁮‌‭‍‪‍⁬⁫‮‎‌‫​‭⁪‬‪⁬‏⁭‫⁮⁭‮‮‏‮‍‭‎‫⁭‏‎⁬⁫⁮⁭‮, numArray);
      \u200B‪⁭⁮⁫⁯‌‭‏‫⁭⁯⁯‫‪‎‬‍⁪‬⁮⁪‮‍‮‎‬⁬‎⁪⁬⁫‌‍⁬‮‏‫‭⁬‮.\u200D‬⁫‬‬⁯⁭‭⁪‮‪‬⁬⁫⁮‎‪‌⁭‎⁫⁯‍⁭⁮⁪‭​⁫⁫‭‏‍⁮‏‬​⁪⁯‎‮(_param1, _param2, this.\u200F‪‫⁪‬⁯‬‎‪‬⁬⁫‪‪⁫⁯‫⁭​‭⁮‫⁯⁪‬​⁮⁯⁫‌‪⁬‎⁬⁯⁮⁮‪‍‪‮, "Output buffer too short");
      Array.Copy((Array) this.\u202A‮⁮‌‭‍‪‍⁬⁫‮‎‌‫​‭⁪‬‪⁬‏⁭‫⁮⁭‮‮‏‮‍‭‎‫⁭‏‎⁬⁫⁮⁭‮, 0, (Array) _param1, _param2, this.\u200F‪‫⁪‬⁯‬‎‪‬⁬⁫‪‪⁫⁯‫⁭​‭⁮‫⁯⁪‬​⁮⁯⁫‌‪⁬‎⁬⁯⁮⁮‪‍‪‮);
      if (!this.\u206F⁬⁪‪‪‫‎⁪‍​‭​⁭⁫‍⁪⁮‮⁫‮⁭⁪‌‫‮​⁯‬‬⁪‭‮​​‌‎‬⁬‮‮‮)
      {
        \u202E⁫‍‪​‎‭​⁯⁯⁮⁯⁪⁯⁭‮‬‬‭‫⁯⁪⁫‭‏‮⁬‮⁯⁭⁯‫‏‬‎⁪‮⁯⁯⁬‮.\u202C​⁫‬‮⁪‏‍⁮‫⁪⁪⁯⁬‮‌‌‮‪​‮‍⁪⁫‍⁮‮​​⁪‎‮⁫‪‪⁮⁫‍‬⁮‮(this.\u202A‮⁮‌‭‍‪‍⁬⁫‮‎‌‫​‭⁪‬‪⁬‏⁭‫⁮⁭‮‮‏‮‍‭‎‫⁭‏‎⁬⁫⁮⁭‮, this.\u200F‪‫⁪‬⁯‬‎‪‬⁬⁫‪‪⁫⁯‫⁭​‭⁮‫⁯⁪‬​⁮⁯⁫‌‪⁬‎⁬⁯⁮⁮‪‍‪‮);
        \u202E⁫‍‪​‎‭​⁯⁯⁮⁯⁪⁯⁭‮‬‬‭‫⁯⁪⁫‭‏‮⁬‮⁯⁭⁯‫‏‬‎⁪‮⁯⁯⁬‮.\u202B⁬‍⁭‎‭‌⁯⁭‎⁮‭‫‬‎‬⁬⁬‪‏‍‏‭‪‪⁫⁫‌‪⁬‪⁬‬⁮​​‍​⁯‎‮(this.\u206E‏⁯‌⁪​‫‮⁪​‬‬‬​⁯⁯‫‎⁯‌⁮‎⁬​‍⁯⁯‮​⁪‪⁯‫‫⁮‎⁭‭⁪⁬‮, this.\u202A‮⁮‌‭‍‪‍⁬⁫‮‎‌‫​‭⁪‬‪⁬‏⁭‫⁮⁭‮‮‏‮‍‭‎‫⁭‏‎⁬⁫⁮⁭‮);
      }
    }
    \u202E⁫‍‪​‎‭​⁯⁯⁮⁯⁪⁯⁭‮‬‬‭‫⁯⁪⁫‭‏‮⁬‮⁯⁭⁯‫‏‬‎⁪‮⁯⁯⁬‮.\u202B⁬‍⁭‎‭‌⁯⁭‎⁮‭‫‬‎‬⁬⁬‪‏‍‏‭‪‪⁫⁫‌‪⁬‪⁬‬⁮​​‍​⁯‎‮(this.\u206E‏⁯‌⁪​‫‮⁪​‬‬‬​⁯⁯‫‎⁯‌⁮‎⁬​‍⁯⁯‮​⁪‪⁯‫‫⁮‎⁭‭⁪⁬‮, this.\u206D​⁪​⁪⁫‎⁯⁭‫‎⁬‫⁬⁫‭⁭⁬‎⁬‏‏‍‍⁪⁫‏‫⁯‏⁯‍⁮‮⁬‌⁭⁫‏‬‮);
    \u202E⁫‍‪​‎‭​⁯⁯⁮⁯⁪⁯⁭‮‬‬‭‫⁯⁪⁫‭‏‮⁬‮⁯⁭⁯‫‏‬‎⁪‮⁯⁯⁬‮.\u202B⁬‍⁭‎‭‌⁯⁭‎⁮‭‫‬‎‬⁬⁬‪‏‍‏‭‪‪⁫⁫‌‪⁬‪⁬‬⁮​​‍​⁯‎‮(this.\u206E‏⁯‌⁪​‫‮⁪​‬‬‬​⁯⁯‫‎⁯‌⁮‎⁬​‍⁯⁯‮​⁪‪⁯‫‫⁮‎⁭‭⁪⁬‮, this.\u202A‫‎‭⁫‭‪‌‎⁬‬⁪⁫‏⁫‫⁫‪⁪⁮‫⁯‫‬‌‪⁫‏⁯⁮‬‬⁭‏⁭‮‪⁭⁯‏‮);
    this.\u200B⁫‎‌‌‍⁮⁭‍‫⁯⁫‭⁫‭‫⁪‬⁫‌​‍‮‎⁮‍⁪‭‌‎‫⁪‏⁯⁮‬⁮‭‮‬‮.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(this.\u206E‏⁯‌⁪​‫‮⁪​‬‬‬​⁯⁯‫‎⁯‌⁮‎⁬​‍⁯⁯‮​⁪‪⁯‫‫⁮‎⁭‭⁪⁬‮, 0, this.\u206E‏⁯‌⁪​‫‮⁪​‬‬‬​⁯⁯‫‎⁯‌⁮‎⁬​‍⁯⁯‮​⁪‪⁯‫‫⁮‎⁭‭⁪⁬‮, 0);
    \u202E⁫‍‪​‎‭​⁯⁯⁮⁯⁪⁯⁭‮‬‬‭‫⁯⁪⁫‭‏‮⁬‮⁯⁭⁯‫‏‬‎⁪‮⁯⁯⁬‮.\u202B⁬‍⁭‎‭‌⁯⁭‎⁮‭‫‬‎‬⁬⁬‪‏‍‏‭‪‪⁫⁫‌‪⁬‪⁬‬⁮​​‍​⁯‎‮(this.\u206E‏⁯‌⁪​‫‮⁪​‬‬‬​⁯⁯‫‎⁯‌⁮‎⁬​‍⁯⁯‮​⁪‪⁯‫‫⁮‎⁭‭⁪⁬‮, this.\u206E‍⁫‌‮‫⁮‎‭‎⁫‏​‪⁮⁪​​⁮‎‎‍⁫‌‭‮‌‍‎⁭‍⁯‭⁯⁪‏‮‫‪⁮‮);
    this.\u202E⁫⁬‏⁪⁭⁪​‬⁬‎‍‌‍‌⁭‌⁮‌‪⁫‮​​⁭⁯‬⁬‌‫⁯‏‍⁮⁬⁪⁯‌⁮‎‮ = new byte[this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮];
    Array.Copy((Array) this.\u206E‏⁯‌⁪​‫‮⁪​‬‬‬​⁯⁯‫‎⁯‌⁮‎⁬​‍⁯⁯‮​⁪‪⁯‫‫⁮‎⁭‭⁪⁬‮, 0, (Array) this.\u202E⁫⁬‏⁪⁭⁪​‬⁬‎‍‌‍‌⁭‌⁮‌‪⁫‮​​⁭⁯‬⁬‌‫⁯‏‍⁮⁬⁪⁯‌⁮‎‮, 0, this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮);
    int num = this.\u200F‪‫⁪‬⁯‬‎‪‬⁬⁫‪‪⁫⁯‫⁭​‭⁮‫⁯⁪‬​⁮⁯⁫‌‪⁬‎⁬⁯⁮⁮‪‍‪‮;
    if (this.\u206F⁬⁪‪‪‫‎⁪‍​‭​⁭⁫‍⁪⁮‮⁫‮⁭⁪‌‫‮​⁯‬‬⁪‭‮​​‌‎‬⁬‮‮‮)
    {
      \u200B‪⁭⁮⁫⁯‌‭‏‫⁭⁯⁯‫‪‎‬‍⁪‬⁮⁪‮‍‮‎‬⁬‎⁪⁬⁫‌‍⁬‮‏‫‭⁬‮.\u200D‬⁫‬‬⁯⁭‭⁪‮‪‬⁬⁫⁮‎‪‌⁭‎⁫⁯‍⁭⁮⁪‭​⁫⁫‭‏‍⁮‏‬​⁪⁯‎‮(_param1, _param2, num + this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮, "Output buffer too short");
      Array.Copy((Array) this.\u202E⁫⁬‏⁪⁭⁪​‬⁬‎‍‌‍‌⁭‌⁮‌‪⁫‮​​⁭⁯‬⁬‌‫⁯‏‍⁮⁬⁪⁯‌⁮‎‮, 0, (Array) _param1, _param2 + num, this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮);
      num += this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮;
    }
    else if (!\u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u200F⁬‌‬⁭⁪⁪‏‫⁮⁭‪⁮‎​‍⁬‭⁪⁯⁬‭‌⁬⁬‬‫‮⁫⁯‏⁫⁪‌⁬⁫⁫‬‬‬‮(this.\u202E⁫⁬‏⁪⁭⁪​‬⁬‎‍‌‍‌⁭‌⁮‌‪⁫‮​​⁭⁯‬⁬‌‫⁯‏‍⁮⁬⁪⁯‌⁮‎‮, destinationArray))
      throw new \u206F⁭‭‫‎‍‏⁯‬‍‌​⁭⁮‬⁪⁬⁮⁯‪⁪‏‬‭⁬⁫‪​‬‬‎⁪‪⁪‭‏‫‬⁪‏‮("mac check in OCB failed");
    this.\u202C‬‎⁪​​‌‎‍⁯⁯​‮‪‮​⁭‬‭​⁮‬‍⁬⁬⁫‭​‎‌⁪⁬‬‮⁬⁫‮⁮‪‪‮(false);
    return num;
  }

  public virtual void \u202C‬‎⁪​​‌‎‍⁯⁯​‮‪‮​⁭‬‭​⁮‬‍⁬⁬⁫‭​‎‌⁪⁬‬‮⁬⁫‮⁮‪‪‮() => this.\u202C‬‎⁪​​‌‎‍⁯⁯​‮‪‮​⁭‬‭​⁮‬‍⁬⁬⁫‭​‎‌⁪⁬‬‮⁬⁫‮⁮‪‪‮(true);

  protected virtual void \u206C‍‫‎⁭⁫‎‫​‬⁮‫‌⁭‎⁪⁯⁫‮​‬⁬‮⁮‬‏​‭‍​⁬‌‌⁯⁬⁮‮​‫‫‮(byte[] _param1)
  {
    if (_param1 == null)
      return;
    Array.Clear((Array) _param1, 0, _param1.Length);
  }

  protected virtual byte[] \u206C⁬⁮⁯‏⁫‭‎⁮⁫‪⁬‌​‌⁬⁫⁪​⁬‌‭‍‬⁫⁭⁪⁬⁮⁮⁯‬⁭⁫⁮‮⁯⁭‎‍‮(int _param1)
  {
    while (_param1 >= this.\u200D⁭‫​‮‪‎‌⁬⁯⁫‌⁫‍‎⁬⁬‫‭⁪‭‪‏‎‬‮‬‎‎​‎‫⁪⁮‬‮‮​‎⁬‮.Count)
      this.\u200D⁭‫​‮‪‎‌⁬⁯⁫‌⁫‍‎⁬⁬‫‭⁪‭‪‏‎‬‮‬‎‎​‎‫⁪⁮‬‮‮​‎⁬‮.Add((object) \u202E⁫‍‪​‎‭​⁯⁯⁮⁯⁪⁯⁭‮‬‬‭‫⁯⁪⁫‭‏‮⁬‮⁯⁭⁯‫‏‬‎⁪‮⁯⁯⁬‮.\u200F⁮⁭‫‍‌⁬⁯⁯⁬⁮​​​‫‬⁬‎‬⁮‎‭⁯‏‍⁭⁯‌⁮‭‬‬⁭‍‮⁯‍⁬‏⁪‮((byte[]) this.\u200D⁭‫​‮‪‎‌⁬⁯⁫‌⁫‍‎⁬⁬‫‭⁪‭‪‏‎‬‮‬‎‎​‎‫⁪⁮‬‮‮​‎⁬‮[this.\u200D⁭‫​‮‪‎‌⁬⁯⁫‌⁫‍‎⁬⁬‫‭⁪‭‪‏‎‬‮‬‎‎​‎‫⁪⁮‬‮‮​‎⁬‮.Count - 1]));
    return (byte[]) this.\u200D⁭‫​‮‪‎‌⁬⁯⁫‌⁫‍‎⁬⁬‫‭⁪‭‪‏‎‬‮‬‎‎​‎‫⁪⁮‬‮‮​‎⁬‮[_param1];
  }

  protected virtual void \u206C⁫⁫​‪‎‏⁪‭​⁯⁫⁯⁮‬‬‏‏‏⁮⁪⁭⁮‍‪‌‎​‬‌⁭‫⁮‮⁭⁪‬⁯⁭‬‮()
  {
    this.\u202D‬‫⁮⁪‎‫‍‎‏‭⁫⁫⁯⁭‬‍⁭‎‍⁬‪‎⁬⁮⁯‍‬⁬‎⁫‭‫⁫​⁯⁫‪⁭‮‮(this.\u206C⁬⁮⁯‏⁫‭‎⁮⁫‪⁬‌​‌⁬⁫⁪​⁬‌‭‍‬⁫⁭⁪⁬⁮⁮⁯‬⁭⁫⁮‮⁯⁭‎‍‮(\u202E⁫‍‪​‎‭​⁯⁯⁮⁯⁪⁯⁭‮‬‬‭‫⁯⁪⁫‭‏‮⁬‮⁯⁭⁯‫‏‬‎⁪‮⁯⁯⁬‮.\u202C⁭⁫‮⁯⁯‫⁯⁭‪‏‍‭⁯‏⁬⁭‍⁭‍⁫‪⁯‫‪⁬​​⁮‍‏​⁮‫⁬​⁮⁯‫⁪‮(++this.\u200F⁭⁬‫⁭⁫‍‌‍‍‪‌⁪‭⁯⁫‏‪‭‬‭‪⁮‍‎‮⁫​‮⁮‎‬‫‪‍⁭⁭​‍⁬‮)));
    this.\u206F‪⁬‏‪⁬⁫⁪⁮⁪‏‍‏‍⁫‪⁮‫⁬‪‭⁬⁬‌⁭‫‏⁮‪‎⁭⁬⁭‪​⁭⁬‫⁯‌‮ = 0;
  }

  protected virtual void \u206F‏‮⁭‏‮⁮⁭⁭⁬‪⁪‫‎⁮‎‎⁪‏⁬‎‍‭⁭‬‫‎⁬‬⁬⁮‫⁫​‫‍⁬‪‎⁪‮(byte[] _param1, int _param2)
  {
    \u200B‪⁭⁮⁫⁯‌‭‏‫⁭⁯⁯‫‪‎‬‍⁪‬⁮⁪‮‍‮‎‬⁬‎⁪⁬⁫‌‍⁬‮‏‫‭⁬‮.\u200D‮⁭⁫‎⁮‏⁬⁫‍‬​‬‪‫‬‭‭‭⁬⁪‎‭⁮⁭‬‭⁭⁬⁬‪‍‌‎‏‬⁪‫‫‌‮(_param1, _param2, 16, "Output buffer too short");
    if (this.\u206F⁬⁪‪‪‫‎⁪‍​‭​⁭⁫‍⁪⁮‮⁫‮⁭⁪‌‫‮​⁯‬‬⁪‭‮​​‌‎‬⁬‮‮‮)
    {
      \u202E⁫‍‪​‎‭​⁯⁯⁮⁯⁪⁯⁭‮‬‬‭‫⁯⁪⁫‭‏‮⁬‮⁯⁭⁯‫‏‬‎⁪‮⁯⁯⁬‮.\u202B⁬‍⁭‎‭‌⁯⁭‎⁮‭‫‬‎‬⁬⁬‪‏‍‏‭‪‪⁫⁫‌‪⁬‪⁬‬⁮​​‍​⁯‎‮(this.\u206E‏⁯‌⁪​‫‮⁪​‬‬‬​⁯⁯‫‎⁯‌⁮‎⁬​‍⁯⁯‮​⁪‪⁯‫‫⁮‎⁭‭⁪⁬‮, this.\u202A‮⁮‌‭‍‪‍⁬⁫‮‎‌‫​‭⁪‬‪⁬‏⁭‫⁮⁭‮‮‏‮‍‭‎‫⁭‏‎⁬⁫⁮⁭‮);
      this.\u200F‪‫⁪‬⁯‬‎‪‬⁬⁫‪‪⁫⁯‫⁭​‭⁮‫⁯⁪‬​⁮⁯⁫‌‪⁬‎⁬⁯⁮⁮‪‍‪‮ = 0;
    }
    \u202E⁫‍‪​‎‭​⁯⁯⁮⁯⁪⁯⁭‮‬‬‭‫⁯⁪⁫‭‏‮⁬‮⁯⁭⁯‫‏‬‎⁪‮⁯⁯⁬‮.\u202B⁬‍⁭‎‭‌⁯⁭‎⁮‭‫‬‎‬⁬⁬‪‏‍‏‭‪‪⁫⁫‌‪⁬‪⁬‬⁮​​‍​⁯‎‮(this.\u206D​⁪​⁪⁫‎⁯⁭‫‎⁬‫⁬⁫‭⁭⁬‎⁬‏‏‍‍⁪⁫‏‫⁯‏⁯‍⁮‮⁬‌⁭⁫‏‬‮, this.\u206C⁬⁮⁯‏⁫‭‎⁮⁫‪⁬‌​‌⁬⁫⁪​⁬‌‭‍‬⁫⁭⁪⁬⁮⁮⁯‬⁭⁫⁮‮⁯⁭‎‍‮(\u202E⁫‍‪​‎‭​⁯⁯⁮⁯⁪⁯⁭‮‬‬‭‫⁯⁪⁫‭‏‮⁬‮⁯⁭⁯‫‏‬‎⁪‮⁯⁯⁬‮.\u202C⁭⁫‮⁯⁯‫⁯⁭‪‏‍‭⁯‏⁬⁭‍⁭‍⁫‪⁯‫‪⁬​​⁮‍‏​⁮‫⁬​⁮⁯‫⁪‮(++this.\u206A⁬‏‬‭⁬⁫‎​‬⁭‌‏‌‏‭⁫​‬‪‮‎⁮‮‌‏‮⁫⁯‎‪‫‫⁪‪⁪‍⁬‮‮‮)));
    \u202E⁫‍‪​‎‭​⁯⁯⁮⁯⁪⁯⁭‮‬‬‭‫⁯⁪⁫‭‏‮⁬‮⁯⁭⁯‫‏‬‎⁪‮⁯⁯⁬‮.\u202B⁬‍⁭‎‭‌⁯⁭‎⁮‭‫‬‎‬⁬⁬‪‏‍‏‭‪‪⁫⁫‌‪⁬‪⁬‬⁮​​‍​⁯‎‮(this.\u202A‮⁮‌‭‍‪‍⁬⁫‮‎‌‫​‭⁪‬‪⁬‏⁭‫⁮⁭‮‮‏‮‍‭‎‫⁭‏‎⁬⁫⁮⁭‮, this.\u206D​⁪​⁪⁫‎⁯⁭‫‎⁬‫⁬⁫‭⁭⁬‎⁬‏‏‍‍⁪⁫‏‫⁯‏⁯‍⁮‮⁬‌⁭⁫‏‬‮);
    this.\u202B‏‭⁬⁪​⁫⁯‎‫⁭‌‬‮‫⁪⁫‏‎‬‏‌⁭‬⁭⁭⁬⁮⁭⁮​⁭‮⁭‫‮⁯⁬⁬⁮‮.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(this.\u202A‮⁮‌‭‍‪‍⁬⁫‮‎‌‫​‭⁪‬‪⁬‏⁭‫⁮⁭‮‮‏‮‍‭‎‫⁭‏‎⁬⁫⁮⁭‮, 0, this.\u202A‮⁮‌‭‍‪‍⁬⁫‮‎‌‫​‭⁪‬‪⁬‏⁭‫⁮⁭‮‮‏‮‍‭‎‫⁭‏‎⁬⁫⁮⁭‮, 0);
    \u202E⁫‍‪​‎‭​⁯⁯⁮⁯⁪⁯⁭‮‬‬‭‫⁯⁪⁫‭‏‮⁬‮⁯⁭⁯‫‏‬‎⁪‮⁯⁯⁬‮.\u202B⁬‍⁭‎‭‌⁯⁭‎⁮‭‫‬‎‬⁬⁬‪‏‍‏‭‪‪⁫⁫‌‪⁬‪⁬‬⁮​​‍​⁯‎‮(this.\u202A‮⁮‌‭‍‪‍⁬⁫‮‎‌‫​‭⁪‬‪⁬‏⁭‫⁮⁭‮‮‏‮‍‭‎‫⁭‏‎⁬⁫⁮⁭‮, this.\u206D​⁪​⁪⁫‎⁯⁭‫‎⁬‫⁬⁫‭⁭⁬‎⁬‏‏‍‍⁪⁫‏‫⁯‏⁯‍⁮‮⁬‌⁭⁫‏‬‮);
    Array.Copy((Array) this.\u202A‮⁮‌‭‍‪‍⁬⁫‮‎‌‫​‭⁪‬‪⁬‏⁭‫⁮⁭‮‮‏‮‍‭‎‫⁭‏‎⁬⁫⁮⁭‮, 0, (Array) _param1, _param2, 16);
    if (this.\u206F⁬⁪‪‪‫‎⁪‍​‭​⁭⁫‍⁪⁮‮⁫‮⁭⁪‌‫‮​⁯‬‬⁪‭‮​​‌‎‬⁬‮‮‮)
      return;
    \u202E⁫‍‪​‎‭​⁯⁯⁮⁯⁪⁯⁭‮‬‬‭‫⁯⁪⁫‭‏‮⁬‮⁯⁭⁯‫‏‬‎⁪‮⁯⁯⁬‮.\u202B⁬‍⁭‎‭‌⁯⁭‎⁮‭‫‬‎‬⁬⁬‪‏‍‏‭‪‪⁫⁫‌‪⁬‪⁬‬⁮​​‍​⁯‎‮(this.\u206E‏⁯‌⁪​‫‮⁪​‬‬‬​⁯⁯‫‎⁯‌⁮‎⁬​‍⁯⁯‮​⁪‪⁯‫‫⁮‎⁭‭⁪⁬‮, this.\u202A‮⁮‌‭‍‪‍⁬⁫‮‎‌‫​‭⁪‬‪⁬‏⁭‫⁮⁭‮‮‏‮‍‭‎‫⁭‏‎⁬⁫⁮⁭‮);
    Array.Copy((Array) this.\u202A‮⁮‌‭‍‪‍⁬⁫‮‎‌‫​‭⁪‬‪⁬‏⁭‫⁮⁭‮‮‏‮‍‭‎‫⁭‏‎⁬⁫⁮⁭‮, 16, (Array) this.\u202A‮⁮‌‭‍‪‍⁬⁫‮‎‌‫​‭⁪‬‪⁬‏⁭‫⁮⁭‮‮‏‮‍‭‎‫⁭‏‎⁬⁫⁮⁭‮, 0, this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮);
    this.\u200F‪‫⁪‬⁯‬‎‪‬⁬⁫‪‪⁫⁯‫⁭​‭⁮‫⁯⁪‬​⁮⁯⁫‌‪⁬‎⁬⁯⁮⁮‪‍‪‮ = this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮;
  }

  protected virtual void \u202C‬‎⁪​​‌‎‍⁯⁯​‮‪‮​⁭‬‭​⁮‬‍⁬⁬⁫‭​‎‌⁪⁬‬‮⁬⁫‮⁮‪‪‮(bool _param1)
  {
    this.\u200B⁫‎‌‌‍⁮⁭‍‫⁯⁫‭⁫‭‫⁪‬⁫‌​‍‮‎⁮‍⁪‭‌‎‫⁪‏⁯⁮‬⁮‭‮‬‮.\u202C‬‎⁪​​‌‎‍⁯⁯​‮‪‮​⁭‬‭​⁮‬‍⁬⁬⁫‭​‎‌⁪⁬‬‮⁬⁫‮⁮‪‪‮();
    this.\u202B‏‭⁬⁪​⁫⁯‎‫⁭‌‬‮‫⁪⁫‏‎‬‏‌⁭‬⁭⁭⁬⁮⁭⁮​⁭‮⁭‫‮⁯⁬⁬⁮‮.\u202C‬‎⁪​​‌‎‍⁯⁯​‮‪‮​⁭‬‭​⁮‬‍⁬⁬⁫‭​‎‌⁪⁬‬‮⁬⁫‮⁮‪‪‮();
    this.\u206C‍‫‎⁭⁫‎‫​‬⁮‫‌⁭‎⁪⁯⁫‮​‬⁬‮⁮‬‏​‭‍​⁬‌‌⁯⁬⁮‮​‫‫‮(this.\u200F​‪⁪‬⁪‮‍⁪⁬⁮⁯‎‫‭​⁭⁭‫‫‮‮‍⁭‬‍‌‫​⁫‬⁯‪⁬⁫⁭‬‮‍‪‮);
    this.\u206C‍‫‎⁭⁫‎‫​‬⁮‫‌⁭‎⁪⁯⁫‮​‬⁬‮⁮‬‏​‭‍​⁬‌‌⁯⁬⁮‮​‫‫‮(this.\u202A‮⁮‌‭‍‪‍⁬⁫‮‎‌‫​‭⁪‬‪⁬‏⁭‫⁮⁭‮‮‏‮‍‭‎‫⁭‏‎⁬⁫⁮⁭‮);
    this.\u206F‪⁬‏‪⁬⁫⁪⁮⁪‏‍‏‍⁫‪⁮‫⁬‪‭⁬⁬‌⁭‫‏⁮‪‎⁭⁬⁭‪​⁭⁬‫⁯‌‮ = 0;
    this.\u200F‪‫⁪‬⁯‬‎‪‬⁬⁫‪‪⁫⁯‫⁭​‭⁮‫⁯⁪‬​⁮⁯⁫‌‪⁬‎⁬⁯⁮⁮‪‍‪‮ = 0;
    this.\u200F⁭⁬‫⁭⁫‍‌‍‍‪‌⁪‭⁯⁫‏‪‭‬‭‪⁮‍‎‮⁫​‮⁮‎‬‫‪‍⁭⁭​‍⁬‮ = 0L;
    this.\u206A⁬‏‬‭⁬⁫‎​‬⁭‌‏‌‏‭⁫​‬‪‮‎⁮‮‌‏‮⁫⁯‎‪‫‫⁪‪⁪‍⁬‮‮‮ = 0L;
    this.\u206C‍‫‎⁭⁫‎‫​‬⁮‫‌⁭‎⁪⁯⁫‮​‬⁬‮⁮‬‏​‭‍​⁬‌‌⁯⁬⁮‮​‫‫‮(this.\u200E‬‎⁪‍⁪‭‍‬‬‮‬‫‎⁭⁬‭⁮‏‪‮‫‮‍‬⁯⁬⁬⁯⁮⁫⁮‪⁬‍⁮‏⁪‏⁭‮);
    this.\u206C‍‫‎⁭⁫‎‫​‬⁮‫‌⁭‎⁪⁯⁫‮​‬⁬‮⁮‬‏​‭‍​⁬‌‌⁯⁬⁮‮​‫‫‮(this.\u206E‍⁫‌‮‫⁮‎‭‎⁫‏​‪⁮⁪​​⁮‎‎‍⁫‌‭‮‌‍‎⁭‍⁯‭⁯⁪‏‮‫‪⁮‮);
    Array.Copy((Array) this.\u200C‏‮⁮⁭‬​‎‬‫‏‎‏‫⁪‫‫‮‫‎⁪⁫‍​⁬‎‏​​‮‭​‏‪⁬​⁪⁪⁪‌‮, 0, (Array) this.\u206D​⁪​⁪⁫‎⁯⁭‫‎⁬‫⁬⁫‭⁭⁬‎⁬‏‏‍‍⁪⁫‏‫⁯‏⁯‍⁮‮⁬‌⁭⁫‏‬‮, 0, 16);
    this.\u206C‍‫‎⁭⁫‎‫​‬⁮‫‌⁭‎⁪⁯⁫‮​‬⁬‮⁮‬‏​‭‍​⁬‌‌⁯⁬⁮‮​‫‫‮(this.\u206E‏⁯‌⁪​‫‮⁪​‬‬‬​⁯⁯‫‎⁯‌⁮‎⁬​‍⁯⁯‮​⁪‪⁯‫‫⁮‎⁭‭⁪⁬‮);
    if (_param1)
      this.\u202E⁫⁬‏⁪⁭⁪​‬⁬‎‍‌‍‌⁭‌⁮‌‪⁫‮​​⁭⁯‬⁬‌‫⁯‏‍⁮⁬⁪⁯‌⁮‎‮ = (byte[]) null;
    if (this.\u202E‭‎⁯‌⁪‎⁪⁪⁭‎⁮⁬‪‬⁯⁭​⁮⁭‏‍⁯⁬⁬⁭‍​‍​‍⁪⁫⁬​‮⁯‭⁭‮‮ == null)
      return;
    this.\u200C‌​⁪‫‌‌⁫⁪⁮‍⁪⁫‍⁫⁭‪⁪‭⁪‭‌‍⁭‮‫‪‏‪‬‮‪⁯⁫‬⁭⁪⁪⁪‭‮(this.\u202E‭‎⁯‌⁪‎⁪⁪⁭‎⁮⁬‪‬⁯⁭​⁮⁭‏‍⁯⁬⁬⁭‍​‍​‍⁪⁫⁬​‮⁯‭⁭‮‮, 0, this.\u202E‭‎⁯‌⁪‎⁪⁪⁭‎⁮⁬‪‬⁯⁭​⁮⁭‏‍⁯⁬⁬⁭‍​‍​‍⁪⁫⁬​‮⁯‭⁭‮‮.Length);
  }

  protected virtual void \u202D‬‫⁮⁪‎‫‍‎‏‭⁫⁫⁯⁭‬‍⁭‎‍⁬‪‎⁬⁮⁯‍‬⁬‎⁫‭‫⁫​⁯⁫‪⁭‮‮(byte[] _param1)
  {
    \u202E⁫‍‪​‎‭​⁯⁯⁮⁯⁪⁯⁭‮‬‬‭‫⁯⁪⁫‭‏‮⁬‮⁯⁭⁯‫‏‬‎⁪‮⁯⁯⁬‮.\u202B⁬‍⁭‎‭‌⁯⁭‎⁮‭‫‬‎‬⁬⁬‪‏‍‏‭‪‪⁫⁫‌‪⁬‪⁬‬⁮​​‍​⁯‎‮(this.\u200E‬‎⁪‍⁪‭‍‬‬‮‬‫‎⁭⁬‭⁮‏‪‮‫‮‍‬⁯⁬⁬⁯⁮⁫⁮‪⁬‍⁮‏⁪‏⁭‮, _param1);
    \u202E⁫‍‪​‎‭​⁯⁯⁮⁯⁪⁯⁭‮‬‬‭‫⁯⁪⁫‭‏‮⁬‮⁯⁭⁯‫‏‬‎⁪‮⁯⁯⁬‮.\u202B⁬‍⁭‎‭‌⁯⁭‎⁮‭‫‬‎‬⁬⁬‪‏‍‏‭‪‪⁫⁫‌‪⁬‪⁬‬⁮​​‍​⁯‎‮(this.\u200F​‪⁪‬⁪‮‍⁪⁬⁮⁯‎‫‭​⁭⁭‫‫‮‮‍⁭‬‍‌‫​⁫‬⁯‪⁬⁫⁭‬‮‍‪‮, this.\u200E‬‎⁪‍⁪‭‍‬‬‮‬‫‎⁭⁬‭⁮‏‪‮‫‮‍‬⁯⁬⁬⁯⁮⁫⁮‪⁬‍⁮‏⁪‏⁭‮);
    this.\u200B⁫‎‌‌‍⁮⁭‍‫⁯⁫‭⁫‭‫⁪‬⁫‌​‍‮‎⁮‍⁪‭‌‎‫⁪‏⁯⁮‬⁮‭‮‬‮.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(this.\u200F​‪⁪‬⁪‮‍⁪⁬⁮⁯‎‫‭​⁭⁭‫‫‮‮‍⁭‬‍‌‫​⁫‬⁯‪⁬⁫⁭‬‮‍‪‮, 0, this.\u200F​‪⁪‬⁪‮‍⁪⁬⁮⁯‎‫‭​⁭⁭‫‫‮‮‍⁭‬‍‌‫​⁫‬⁯‪⁬⁫⁭‬‮‍‪‮, 0);
    \u202E⁫‍‪​‎‭​⁯⁯⁮⁯⁪⁯⁭‮‬‬‭‫⁯⁪⁫‭‏‮⁬‮⁯⁭⁯‫‏‬‎⁪‮⁯⁯⁬‮.\u202B⁬‍⁭‎‭‌⁯⁭‎⁮‭‫‬‎‬⁬⁬‪‏‍‏‭‪‪⁫⁫‌‪⁬‪⁬‬⁮​​‍​⁯‎‮(this.\u206E‍⁫‌‮‫⁮‎‭‎⁫‏​‪⁮⁪​​⁮‎‎‍⁫‌‭‮‌‍‎⁭‍⁯‭⁯⁪‏‮‫‪⁮‮, this.\u200F​‪⁪‬⁪‮‍⁪⁬⁮⁯‎‫‭​⁭⁭‫‫‮‮‍⁭‬‍‌‫​⁫‬⁯‪⁬⁫⁭‬‮‍‪‮);
  }

  protected static byte[] \u200F⁮⁭‫‍‌⁬⁯⁯⁬⁮​​​‫‬⁬‎‬⁮‎‭⁯‏‍⁭⁯‌⁮‭‬‬⁭‍‮⁯‍⁬‏⁪‮(byte[] _param0)
  {
    byte[] numArray = new byte[16];
    int num = \u202E⁫‍‪​‎‭​⁯⁯⁮⁯⁪⁯⁭‮‬‬‭‫⁯⁪⁫‭‏‮⁬‮⁯⁭⁯‫‏‬‎⁪‮⁯⁯⁬‮.\u202B‭‪⁯‫‪⁯​‎‭⁮⁬⁬⁫‍⁯‍‌⁯‏‭‪‌‮‪‭‪‌⁬⁭‫⁫⁭⁪‌​‫‎‎‬‮(_param0, numArray);
    numArray[15] ^= (byte) (135 >> (1 - num << 3));
    return numArray;
  }

  protected static void \u202C​⁫‬‮⁪‏‍⁮‫⁪⁪⁯⁬‮‌‌‮‪​‮‍⁪⁫‍⁮‮​​⁪‎‮⁫‪‪⁮⁫‍‬⁮‮(byte[] _param0, int _param1)
  {
    _param0[_param1] = (byte) 128;
    while (++_param1 < 16)
      _param0[_param1] = (byte) 0;
  }

  protected static int \u202C⁭⁫‮⁯⁯‫⁯⁭‪‏‍‭⁯‏⁬⁭‍⁭‍⁫‪⁯‫‪⁬​​⁮‍‏​⁮‫⁬​⁮⁯‫⁪‮(long _param0)
  {
    if (_param0 == 0L)
      return 64;
    int num = 0;
    for (ulong index = (ulong) _param0; ((long) index & 1L) == 0L; index >>= 1)
      ++num;
    return num;
  }

  protected static int \u202B‭‪⁯‫‪⁯​‎‭⁮⁬⁬⁫‍⁯‍‌⁯‏‭‪‌‮‪‭‪‌⁬⁭‫⁫⁭⁪‌​‫‎‎‬‮(
    byte[] _param0,
    byte[] _param1)
  {
    int index = 16;
    uint num1 = 0;
    while (--index >= 0)
    {
      uint num2 = (uint) _param0[index];
      _param1[index] = (byte) (num2 << 1 | num1);
      num1 = num2 >> 7 & 1U;
    }
    return (int) num1;
  }

  protected static void \u202B⁬‍⁭‎‭‌⁯⁭‎⁮‭‫‬‎‬⁬⁬‪‏‍‏‭‪‪⁫⁫‌‪⁬‪⁬‬⁮​​‍​⁯‎‮(
    byte[] _param0,
    byte[] _param1)
  {
    for (int index = 15; index >= 0; --index)
      _param0[index] ^= _param1[index];
  }
}
