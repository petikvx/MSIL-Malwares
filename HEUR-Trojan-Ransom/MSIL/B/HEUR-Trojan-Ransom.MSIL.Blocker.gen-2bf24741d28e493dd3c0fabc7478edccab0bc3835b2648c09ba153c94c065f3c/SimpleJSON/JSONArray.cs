// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONArray
// Assembly: ResourceTypeCo, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: D98D3237-A321-4821-9049-807D7FD195EE
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-2bf24741d28e493dd3c0fabc7478edccab0bc3835b2648c09ba153c94c065f3c.exe

using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONArray : JSONNode, IEnumerable
  {
    private List<JSONNode> m_List = new List<JSONNode>();

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 1971601081;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          int num3;
          switch ((num2 = (uint) (num1 ^ 1825166340)) % 6U)
          {
            case 0:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            case 1:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * 2014657412 ^ -512442927;
              continue;
            case 2:
              jsonNode = this.m_List[aIndex];
              num1 = 837091645;
              continue;
            case 3:
              if (aIndex < 0)
              {
                num3 = 1;
                break;
              }
              num1 = (int) num2 * 764326575 ^ -1504529143;
              continue;
            case 4:
              goto label_1;
            default:
              goto label_10;
          }
          int num4;
          num1 = num4 = num3 != 0 ? 343775647 : (num4 = 1477289398);
        }
label_10:
        return jsonNode;
      }
      set
      {
        if (aIndex < 0)
          goto label_8;
label_1:
        int num1 = 1030446681;
label_2:
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 822012052)) % 8U)
          {
            case 0:
              num1 = (int) num2 * -2097711453 ^ -352128642;
              continue;
            case 1:
              this.m_List.Add(value);
              num1 = (int) num2 * 1973330496 ^ -1491075374;
              continue;
            case 2:
              goto label_3;
            case 3:
              goto label_1;
            case 4:
              num1 = (int) num2 * 1332120568 ^ -1689267226;
              continue;
            case 5:
              goto label_7;
            case 6:
              num1 = (int) num2 * 1155097821 ^ -1716396234;
              continue;
            case 7:
              this.m_List[aIndex] = value;
              num1 = 1852302844;
              continue;
            default:
              goto label_12;
          }
        }
label_3:
        return;
label_12:
        return;
label_7:
        int num3 = aIndex >= this.m_List.Count ? 1 : 0;
        goto label_9;
label_8:
        num3 = 1;
label_9:
        num1 = num3 != 0 ? 1875265493 : (num1 = 566102299);
        goto label_2;
      }
    }

    public override JSONNode this[string aKey]
    {
      get => (JSONNode) new JSONLazyCreator((JSONNode) this);
      set
      {
label_1:
        int num1 = -355624249;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1832429756)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              this.m_List.Add(value);
              num1 = (int) num2 * 24871860 ^ -861760568;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = -1332942568;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1588088037)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * 674408025 ^ -246582312;
              continue;
            case 3:
              count = this.m_List.Count;
              num1 = (int) num2 * 818456855 ^ -1007651388;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem) => this.m_List.Add(aItem);

    public override JSONNode Remove(int aIndex)
    {
      if (aIndex < 0)
        goto label_4;
label_1:
      int num1 = 822759246;
label_2:
      JSONNode jsonNode1;
      JSONNode jsonNode2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 323222941)) % 8U)
        {
          case 0:
            goto label_1;
          case 1:
            jsonNode2 = jsonNode1;
            num1 = (int) num2 * 1632479607 ^ -1513909393;
            continue;
          case 2:
            num1 = (int) num2 * -1920606676 ^ 1798234936;
            continue;
          case 3:
            goto label_3;
          case 4:
            jsonNode1 = this.m_List[aIndex];
            num1 = 318364498;
            continue;
          case 6:
            jsonNode2 = (JSONNode) null;
            num1 = (int) num2 * 84583606 ^ 51712979;
            continue;
          case 7:
            this.m_List.RemoveAt(aIndex);
            num1 = (int) num2 * -2037009324 ^ 41365048;
            continue;
          default:
            goto label_11;
        }
      }
label_3:
      int num3 = aIndex >= this.m_List.Count ? 1 : 0;
      goto label_5;
label_11:
      return jsonNode2;
label_4:
      num3 = 1;
label_5:
      num1 = num3 != 0 ? 1351871739 : (num1 = 1705036641);
      goto label_2;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = 513560380;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1805902789)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            this.m_List.Remove(aNode);
            jsonNode = aNode;
            num1 = (int) num2 * -631982629 ^ 395013146;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs => (IEnumerable<JSONNode>) new JSONArray.\u003Cget_Childs\u003Ed__13(-2)
    {
      \u003C\u003E4__this = this
    };

    public IEnumerator GetEnumerator() => (IEnumerator) new JSONArray.\u003CGetEnumerator\u003Ed__14(0)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString()
    {
label_1:
      int num1 = 1293272484;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1999869408)) % 3U)
        {
          case 1:
            str1 = "[ ";
            num1 = (int) num2 * 2101960652 ^ -1534878564;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_11:
        int num3 = enumerator.MoveNext() ? 214530197 : (num3 = 1837444058);
        JSONNode current;
        bool flag;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1999869408)) % 8U)
          {
            case 0:
              goto label_11;
            case 1:
              str1 = JSONArray.\u202D‌⁯⁬⁯‭⁮‫‫⁬⁮⁮‮​⁫⁮⁪‏‍‍‌‎‌⁭‌⁯‬⁮⁯⁬‍⁮⁮‬‬⁬‭‪⁪‪‮(str1, JSONArray.\u202C‬‏⁮‍⁫⁫‭‮⁭‍​⁫‌‎​‬‌‎‬⁭⁫‍⁪‬‮‮⁪⁯⁫‭‏‪⁪‍⁮‪⁮⁯‮‮((object) current));
              num3 = 49489932;
              continue;
            case 3:
              str1 = JSONArray.\u202D‌⁯⁬⁯‭⁮‫‫⁬⁮⁮‮​⁫⁮⁪‏‍‍‌‎‌⁭‌⁯‬⁮⁯⁬‍⁮⁮‬‬⁬‭‪⁪‪‮(str1, ", ");
              num3 = (int) num4 * 271748176 ^ -957263831;
              continue;
            case 4:
              num3 = (int) num4 * -845773353 ^ 1801459060;
              continue;
            case 5:
              current = enumerator.Current;
              flag = JSONArray.\u200F‭⁬‮⁭⁮‬‌‍‫​⁫⁭⁬‬⁯⁪‍‪‎⁪‬⁯⁯‏⁪‫⁮⁮⁯‫‍⁫⁪‬‏‏⁭‎‪‮(str1) > 2;
              num3 = 1543542303;
              continue;
            case 6:
              num3 = 214530197;
              continue;
            case 7:
              int num5 = flag ? -1891474301 : (num5 = -475107831);
              num3 = num5 ^ (int) num4 * -1706075600;
              continue;
            default:
              goto label_15;
          }
        }
      }
label_15:
      string str2 = JSONArray.\u202D‌⁯⁬⁯‭⁮‫‫⁬⁮⁮‮​⁫⁮⁪‏‍‍‌‎‌⁭‌⁯‬⁮⁯⁬‍⁮⁮‬‬⁬‭‪⁪‪‮(str1, " ]");
label_16:
      int num6 = 1172315959;
      string str3;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ 1999869408)) % 3U)
        {
          case 0:
            goto label_16;
          case 2:
            str3 = str2;
            num6 = (int) num7 * -1734245564 ^ -167433548;
            continue;
          default:
            goto label_19;
        }
      }
label_19:
      return str3;
    }

    public override string ToString(string aPrefix)
    {
      string str1 = "[ ";
      List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator();
      try
      {
label_4:
        int num1 = enumerator.MoveNext() ? -646548549 : (num1 = -156387388);
        bool flag;
        JSONNode current;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1612283147)) % 9U)
          {
            case 1:
              flag = JSONArray.\u200F‭⁬‮⁭⁮‬‌‍‫​⁫⁭⁬‬⁯⁪‍‪‎⁪‬⁯⁯‏⁪‫⁮⁮⁯‫‍⁫⁪‬‏‏⁭‎‪‮(str1) > 3;
              num1 = (int) num2 * -719797225 ^ 1258427417;
              continue;
            case 2:
              goto label_4;
            case 3:
              str1 = JSONArray.\u202B⁯⁪‍‍⁫‪⁭⁬‏‌‏‌‫‏‬‎‬⁫⁬‬⁮​‮‌‮⁭​‎‭‌‎‌‮⁭⁯‮‭‫⁯‮(str1, "\n", aPrefix, "   ");
              num1 = -753300080;
              continue;
            case 4:
              int num3 = !flag ? -889090042 : (num3 = -905995473);
              num1 = num3 ^ (int) num2 * -1305192233;
              continue;
            case 5:
              current = enumerator.Current;
              num1 = -844255113;
              continue;
            case 6:
              str1 = JSONArray.\u202D‌⁯⁬⁯‭⁮‫‫⁬⁮⁮‮​⁫⁮⁪‏‍‍‌‎‌⁭‌⁯‬⁮⁯⁬‍⁮⁮‬‬⁬‭‪⁪‪‮(str1, current.ToString(JSONArray.\u202D‌⁯⁬⁯‭⁮‫‫⁬⁮⁮‮​⁫⁮⁪‏‍‍‌‎‌⁭‌⁯‬⁮⁯⁬‍⁮⁮‬‬⁬‭‪⁪‪‮(aPrefix, "   ")));
              num1 = (int) num2 * 944303587 ^ 2117710636;
              continue;
            case 7:
              str1 = JSONArray.\u202D‌⁯⁬⁯‭⁮‫‫⁬⁮⁮‮​⁫⁮⁪‏‍‍‌‎‌⁭‌⁯‬⁮⁯⁬‍⁮⁮‬‬⁬‭‪⁪‪‮(str1, ", ");
              num1 = (int) num2 * -104282238 ^ -320950016;
              continue;
            case 8:
              num1 = -646548549;
              continue;
            default:
              goto label_16;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_12:
        int num4 = -665130697;
        while (true)
        {
          uint num5;
          switch ((num5 = (uint) (num4 ^ -1612283147)) % 3U)
          {
            case 0:
              goto label_12;
            case 2:
              num4 = (int) num5 * -653034239 ^ 1685234366;
              continue;
            default:
              goto label_15;
          }
        }
label_15:;
      }
label_16:
      string str2 = JSONArray.\u202B⁯⁪‍‍⁫‪⁭⁬‏‌‏‌‫‏‬‎‬⁫⁬‬⁮​‮‌‮⁭​‎‭‌‎‌‮⁭⁯‮‭‫⁯‮(str1, "\n", aPrefix, "]");
label_17:
      int num6 = -1242053528;
      string str3;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ -1612283147)) % 4U)
        {
          case 0:
            goto label_17;
          case 1:
            str3 = str2;
            num6 = (int) num7 * -7951416 ^ 224095179;
            continue;
          case 2:
            num6 = (int) num7 * -842147443 ^ 720614572;
            continue;
          default:
            goto label_21;
        }
      }
label_21:
      return str3;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = 1929799389;
      int index;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1866922136)) % 10U)
        {
          case 0:
            int num3 = flag ? 336595963 : (num3 = 1270056115);
            num1 = num3 ^ (int) num2 * -423531165;
            continue;
          case 1:
            num1 = (int) num2 * -724603667 ^ -111483711;
            continue;
          case 2:
            this.m_List[index].Serialize(aWriter);
            ++index;
            num1 = (int) num2 * -124749271 ^ 1960678124;
            continue;
          case 3:
            num1 = 2018278838;
            continue;
          case 4:
            JSONArray.\u206E⁭‭⁯‎‏⁬‭‬‌⁭‍⁮‪‏‪‎⁪⁮‌⁪​‪‍‭‏⁬‮‬‫⁪​‭‎‬⁬⁬⁫⁫⁯‮(aWriter, this.m_List.Count);
            num1 = (int) num2 * 1172299586 ^ 1532901008;
            continue;
          case 5:
            goto label_3;
          case 6:
            index = 0;
            num1 = (int) num2 * 1151176581 ^ -285384630;
            continue;
          case 7:
            goto label_1;
          case 8:
            flag = index < this.m_List.Count;
            num1 = 76882108;
            continue;
          case 9:
            JSONArray.\u206F‍‭‫‪⁮⁮⁬‭‌⁪⁫‏‎‏​‌⁯‮⁪‭⁮‏‌‎⁮‭⁭​⁫‭‍‪‫‌‫⁭‮​⁯‮(aWriter, (byte) 1);
            num1 = (int) num2 * 1525631971 ^ 1013705090;
            continue;
          default:
            goto label_12;
        }
      }
label_3:
      return;
label_12:;
    }

    static int \u200F‭⁬‮⁭⁮‬‌‍‫​⁫⁭⁬‬⁯⁪‍‪‎⁪‬⁯⁯‏⁪‫⁮⁮⁯‫‍⁫⁪‬‏‏⁭‎‪‮([In] string obj0) => obj0.Length;

    static string \u202D‌⁯⁬⁯‭⁮‫‫⁬⁮⁮‮​⁫⁮⁪‏‍‍‌‎‌⁭‌⁯‬⁮⁯⁬‍⁮⁮‬‬⁬‭‪⁪‪‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u202C‬‏⁮‍⁫⁫‭‮⁭‍​⁫‌‎​‬‌‎‬⁭⁫‍⁪‬‮‮⁪⁯⁫‭‏‪⁪‍⁮‪⁮⁯‮‮([In] object obj0) => obj0.ToString();

    static string \u202B⁯⁪‍‍⁫‪⁭⁬‏‌‏‌‫‏‬‎‬⁫⁬‬⁮​‮‌‮⁭​‎‭‌‎‌‮⁭⁯‮‭‫⁯‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u206F‍‭‫‪⁮⁮⁬‭‌⁪⁫‏‎‏​‌⁯‮⁪‭⁮‏‌‎⁮‭⁭​⁫‭‍‪‫‌‫⁭‮​⁯‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u206E⁭‭⁯‎‏⁬‭‬‌⁭‍⁮‪‏‪‎⁪⁮‌⁪​‪‍‭‏⁬‮‬‫⁪​‭‎‬⁬⁬⁫⁫⁯‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);
  }
}
