// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONClass
// Assembly: StreamWriterBufferedDataLo, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 2A001E45-B149-45C2-9BBE-A5BA299DBD32
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-375dd437fa652b84e37aabfc7547012047b9c468f5470c4761424ed1086c52a4.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONClass : JSONNode, IEnumerable
  {
    private Dictionary<string, JSONNode> m_Dict = new Dictionary<string, JSONNode>();

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -1642889025;
        JSONNode jsonNode;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1445801517)) % 7U)
          {
            case 0:
              int num3 = flag ? -1284191775 : (num3 = -2077084851);
              num1 = num3 ^ (int) num2 * 681290003;
              continue;
            case 1:
              num1 = (int) num2 * 1860824626 ^ -1468577034;
              continue;
            case 2:
              goto label_1;
            case 3:
              jsonNode = this.m_Dict[aKey];
              num1 = (int) num2 * -1842005918 ^ -1375968214;
              continue;
            case 5:
              flag = this.m_Dict.ContainsKey(aKey);
              num1 = (int) num2 * -685006976 ^ -115712141;
              continue;
            case 6:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = -904302500;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return jsonNode;
      }
      set
      {
        bool flag = this.m_Dict.ContainsKey(aKey);
label_1:
        int num1 = 1370092740;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 406694286)) % 7U)
          {
            case 0:
              this.m_Dict[aKey] = value;
              num1 = (int) num2 * 2023532499 ^ 621729546;
              continue;
            case 1:
              this.m_Dict.Add(aKey, value);
              num1 = 421690216;
              continue;
            case 2:
              goto label_3;
            case 3:
              int num3 = flag ? 959337120 : (num3 = 439567989);
              num1 = num3 ^ (int) num2 * 749271184;
              continue;
            case 4:
              num1 = (int) num2 * -344336586 ^ -1098505357;
              continue;
            case 5:
              goto label_1;
            case 6:
              num1 = (int) num2 * 537468249 ^ 846437745;
              continue;
            default:
              goto label_9;
          }
        }
label_3:
        return;
label_9:;
      }
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 1223982581;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          int num3;
          switch ((num2 = (uint) (num1 ^ 468486975)) % 7U)
          {
            case 0:
              num1 = (int) num2 * 1124497231 ^ -1656238986;
              continue;
            case 1:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * -1825528015 ^ 490858450;
                continue;
              }
              num3 = 1;
              break;
            case 2:
              jsonNode = (JSONNode) null;
              num1 = 1348183825;
              continue;
            case 3:
              goto label_1;
            case 4:
              num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
              break;
            case 6:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -370406930 ^ 675044696;
              continue;
            default:
              goto label_11;
          }
          int num4;
          num1 = num4 = num3 == 0 ? 2097423961 : (num4 = 2129650510);
        }
label_11:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 108547842;
        while (true)
        {
          uint num2;
          int num3;
          switch ((num2 = (uint) (num1 ^ 288497876)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 344061997 ^ -473855740;
              continue;
            case 2:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * -1860606729 ^ -43655106;
                continue;
              }
              num3 = 1;
              break;
            case 3:
              goto label_3;
            case 4:
              num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
              break;
            default:
              goto label_10;
          }
          int num4;
          num1 = num4 = num3 == 0 ? 204973445 : (num4 = 386361073);
        }
label_3:
        return;
label_10:;
      }
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = 45014616;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 414915436)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              count = this.m_Dict.Count;
              num1 = (int) num2 * -732260008 ^ 1761267354;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
      bool flag1 = !JSONClass.\u202A‭⁮⁫‪​⁫‏‏⁭‍‏‏⁬‫⁭‏‮⁬‮‮‏‬‏‎‏‮‪⁬‫⁬⁭⁬⁮​‎‎⁭‭‏‮(aKey);
label_1:
      int num1 = 1242787450;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1373050313)) % 11U)
        {
          case 0:
            this.m_Dict.Add(aKey, aItem);
            num1 = 1892194931;
            continue;
          case 1:
            flag2 = this.m_Dict.ContainsKey(aKey);
            num1 = (int) num2 * -1149642935 ^ 1255383018;
            continue;
          case 2:
            int num3 = flag2 ? -1879296005 : (num3 = -18056240);
            num1 = num3 ^ (int) num2 * 1164701986;
            continue;
          case 3:
            num1 = 1830351979;
            continue;
          case 4:
            this.m_Dict.Add(Guid.NewGuid().ToString(), aItem);
            num1 = 1830351979;
            continue;
          case 5:
            int num4 = !flag1 ? 1165238340 : (num4 = 2130264046);
            num1 = num4 ^ (int) num2 * 1176341003;
            continue;
          case 6:
            this.m_Dict[aKey] = aItem;
            num1 = (int) num2 * -778644440 ^ -1371029604;
            continue;
          case 7:
            goto label_1;
          case 8:
            goto label_3;
          case 9:
            num1 = (int) num2 * -956744386 ^ 990017029;
            continue;
          case 10:
            num1 = (int) num2 * 1528336672 ^ -1405111708;
            continue;
          default:
            goto label_13;
        }
      }
label_3:
      return;
label_13:;
    }

    public override JSONNode Remove(string aKey)
    {
      bool flag = !this.m_Dict.ContainsKey(aKey);
label_1:
      int num1 = 713358816;
      JSONNode jsonNode1;
      JSONNode jsonNode2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1810127876)) % 8U)
        {
          case 0:
            num1 = (int) num2 * 31658871 ^ -475360747;
            continue;
          case 2:
            goto label_1;
          case 3:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num2 * -1614658161 ^ -461240927;
            continue;
          case 4:
            int num3 = flag ? 484766199 : (num3 = 311079801);
            num1 = num3 ^ (int) num2 * 167213168;
            continue;
          case 5:
            jsonNode2 = this.m_Dict[aKey];
            num1 = 1001983635;
            continue;
          case 6:
            jsonNode1 = jsonNode2;
            num1 = (int) num2 * 1650844326 ^ 1091027705;
            continue;
          case 7:
            this.m_Dict.Remove(aKey);
            num1 = (int) num2 * -711280090 ^ 1892430872;
            continue;
          default:
            goto label_9;
        }
      }
label_9:
      return jsonNode1;
    }

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = -1921343359;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        bool flag;
        int num3;
        switch ((num2 = (uint) (num1 ^ -1728800120)) % 9U)
        {
          case 0:
            goto label_1;
          case 1:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 1560747105 ^ 2069255133;
            continue;
          case 2:
            num1 = (int) num2 * 817718118 ^ -286355380;
            continue;
          case 3:
            num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
            break;
          case 4:
            jsonNode = (JSONNode) null;
            num1 = -58246421;
            continue;
          case 5:
            if (aIndex >= 0)
            {
              num1 = (int) num2 * 95820056 ^ -1664624393;
              continue;
            }
            num3 = 1;
            break;
          case 6:
            num1 = (int) num2 * 1012812528 ^ 1242671342;
            continue;
          case 8:
            int num4 = !flag ? -1698714984 : (num4 = -1716380866);
            num1 = num4 ^ (int) num2 * -1914277200;
            continue;
          default:
            goto label_13;
        }
        flag = num3 != 0;
        num1 = -1656856764;
      }
label_13:
      return jsonNode;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      try
      {
        return (JSONNode) null;
      }
      catch
      {
label_3:
        int num1 = -1730261462;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -585757153)) % 3U)
          {
            case 0:
              goto label_3;
            case 2:
              num1 = (int) num2 * -1377358987 ^ -1758852461;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return (JSONNode) null;
      }
    }

    public override IEnumerable<JSONNode> Childs => (IEnumerable<JSONNode>) new JSONClass.\u003Cget_Childs\u003Ed__14(-2)
    {
      \u003C\u003E4__this = this
    };

    public IEnumerator GetEnumerator()
    {
      bool enumerator1;
      // ISSUE: fault handler
      try
      {
        // ISSUE: reference to a compiler-generated field
        int num1 = this.\u003C\u003E1__state;
label_1:
        int num2 = 1073896094;
        Dictionary<string, JSONNode>.Enumerator enumerator;
        KeyValuePair<string, JSONNode> N;
        while (true)
        {
          uint num3;
          switch ((num3 = (uint) (num2 ^ 1235424732)) % 19U)
          {
            case 0:
              num2 = (int) num3 * -2023135418 ^ -699951712;
              continue;
            case 1:
            case 4:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = 274448557;
              continue;
            case 2:
              goto label_19;
            case 3:
              int num4;
              num2 = num4 = num1 == 1 ? 939597285 : (num4 = 1993970455);
              continue;
            case 5:
            case 16:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -1;
              num2 = 508421515;
              continue;
            case 7:
              goto label_1;
            case 8:
              goto label_6;
            case 9:
              num2 = (int) num3 * 1869135570 ^ -552806197;
              continue;
            case 10:
              enumerator1 = true;
              num2 = (int) num3 * 1483381066 ^ -985411491;
              continue;
            case 11:
              int num5 = num1 != 0 ? -1551123718 : (num5 = -2066586677);
              num2 = num5 ^ (int) num3 * -540849711;
              continue;
            case 12:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = 1;
              num2 = (int) num3 * 119797243 ^ 883370231;
              continue;
            case 13:
              int num6;
              num2 = num6 = !enumerator.MoveNext() ? 758200250 : (num6 = 346003271);
              continue;
            case 14:
              // ISSUE: reference to a compiler-generated method
              this.\u003C\u003Em__Finally1();
              num2 = (int) num3 * -967878462 ^ -1063827649;
              continue;
            case 15:
              N = enumerator.Current;
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E2__current = (object) N;
              num2 = 1697730800;
              continue;
            case 17:
              N = new KeyValuePair<string, JSONNode>();
              num2 = (int) num3 * -1671124039 ^ 861976930;
              continue;
            case 18:
              enumerator = this.m_Dict.GetEnumerator();
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = (int) num3 * 572112860 ^ -1714523377;
              continue;
            default:
              goto label_17;
          }
        }
label_6:
        enumerator1 = false;
        goto label_19;
label_17:
        enumerator = new Dictionary<string, JSONNode>.Enumerator();
        enumerator1 = false;
      }
      __fault
      {
        // ISSUE: reference to a compiler-generated method
        this.System\u002EIDisposable\u002EDispose();
      }
label_19:
      return enumerator1;
    }

    public override string ToString()
    {
label_1:
      int num1 = -1691503176;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1481488731)) % 4U)
        {
          case 0:
            num1 = (int) num2 * 668281227 ^ -1144948525;
            continue;
          case 1:
            str1 = "{";
            num1 = (int) num2 * 776088317 ^ -714104180;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator();
      try
      {
label_12:
        int num3 = !enumerator.MoveNext() ? -362973687 : (num3 = -368384639);
        bool flag;
        KeyValuePair<string, JSONNode> current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -1481488731)) % 9U)
          {
            case 0:
              str1 = JSONClass.\u200C‌‫⁭‭‍⁬⁫⁯‪‭​⁯‬​‮⁮‌‎⁪‎‍‎‫⁬⁪‌⁬⁭⁪‫⁮⁫‪‭‏‍⁯⁭⁭‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\":",
                JSONClass.\u206F‎⁬‏​​‭‍‌⁮‎⁮⁫‍⁪‮⁯‎‫‬‬⁪⁮‌⁪⁬‎⁫⁮‫‌⁪⁮⁪‮‎‍⁫⁫‍‮((object) current.Value)
              });
              num3 = -1535045586;
              continue;
            case 1:
              current = enumerator.Current;
              num3 = -5515258;
              continue;
            case 2:
              num3 = -368384639;
              continue;
            case 3:
              int num5 = flag ? -1658418477 : (num5 = -1389890788);
              num3 = num5 ^ (int) num4 * -305921787;
              continue;
            case 4:
              goto label_12;
            case 5:
              flag = JSONClass.\u200C‪⁭⁫⁬⁬‪‪⁮​⁭‏‏⁪‬‏‏‌‏⁭⁭⁮​‏⁯⁭‍‪‏‏​‪​⁮‮​​‫‍⁯‮(str1) > 2;
              num3 = (int) num4 * 1896440294 ^ -256720556;
              continue;
            case 6:
              num3 = (int) num4 * -606370099 ^ -1321030292;
              continue;
            case 7:
              str1 = JSONClass.\u202D‍‫⁭‬‌‫⁫‭⁮⁪‫‎⁮⁬‏‏‭‎‬‪​‎⁮‏‎‪⁯​​‬‍‪⁬⁯⁯‎‌‫‎‮(str1, ", ");
              num3 = (int) num4 * 2044330143 ^ 1000852276;
              continue;
            default:
              goto label_21;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_17:
        int num6 = -1687172182;
        while (true)
        {
          uint num7;
          switch ((num7 = (uint) (num6 ^ -1481488731)) % 3U)
          {
            case 0:
              goto label_17;
            case 2:
              num6 = (int) num7 * 1583998854 ^ -883188184;
              continue;
            default:
              goto label_20;
          }
        }
label_20:;
      }
label_21:
      string str2 = JSONClass.\u202D‍‫⁭‬‌‫⁫‭⁮⁪‫‎⁮⁬‏‏‭‎‬‪​‎⁮‏‎‪⁯​​‬‍‪⁬⁯⁯‎‌‫‎‮(str1, "}");
label_22:
      int num8 = -1522823552;
      string str3;
      while (true)
      {
        uint num9;
        switch ((num9 = (uint) (num8 ^ -1481488731)) % 4U)
        {
          case 1:
            str3 = str2;
            num8 = (int) num9 * -17093345 ^ -1508598655;
            continue;
          case 2:
            goto label_22;
          case 3:
            num8 = (int) num9 * 391636452 ^ 1984256717;
            continue;
          default:
            goto label_26;
        }
      }
label_26:
      return str3;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = -2128570155;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1655111689)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 1765026408 ^ -1352730332;
            continue;
          case 2:
            str = "{ ";
            num1 = (int) num2 * 1900204396 ^ 354217934;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      using (Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator())
      {
label_13:
        int num3 = !enumerator.MoveNext() ? -1388251457 : (num3 = -20809180);
        KeyValuePair<string, JSONNode> current;
        bool flag;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -1655111689)) % 8U)
          {
            case 1:
              str = JSONClass.\u202D‍‫⁭‬‌‫⁫‭⁮⁪‫‎⁮⁬‏‏‭‎‬‪​‎⁮‏‎‪⁯​​‬‍‪⁬⁯⁯‎‌‫‎‮(str, ", ");
              num3 = (int) num4 * -1678290258 ^ -985042397;
              continue;
            case 2:
              str = JSONClass.\u200E⁫⁮‪⁫⁭⁪⁪‮‭‮‪⁬⁪⁭‌⁬⁭‮⁫⁭‪‍‪‍‮‌⁭‭‭⁫‭‫‌⁬⁬⁭‬‬‪‮(str, "\n", aPrefix, "   ");
              str = JSONClass.\u200C‌‫⁭‭‍⁬⁫⁯‪‭​⁯‬​‮⁮‌‎⁪‎‍‎‫⁬⁪‌⁬⁭⁪‫⁮⁫‪‭‏‍⁯⁭⁭‮(new string[5]
              {
                str,
                "\"",
                JSONNode.Escape(current.Key),
                "\" : ",
                current.Value.ToString(JSONClass.\u202D‍‫⁭‬‌‫⁫‭⁮⁪‫‎⁮⁬‏‏‭‎‬‪​‎⁮‏‎‪⁯​​‬‍‪⁬⁯⁯‎‌‫‎‮(aPrefix, "   "))
              });
              num3 = -554698967;
              continue;
            case 3:
              current = enumerator.Current;
              num3 = -645584014;
              continue;
            case 4:
              int num5 = !flag ? 2097923573 : (num5 = 300617966);
              num3 = num5 ^ (int) num4 * 766857314;
              continue;
            case 5:
              flag = JSONClass.\u200C‪⁭⁫⁬⁬‪‪⁮​⁭‏‏⁪‬‏‏‌‏⁭⁭⁮​‏⁯⁭‍‪‏‏​‪​⁮‮​​‫‍⁯‮(str) > 3;
              num3 = (int) num4 * -1131983539 ^ -473260310;
              continue;
            case 6:
              goto label_13;
            case 7:
              num3 = -20809180;
              continue;
            default:
              goto label_16;
          }
        }
      }
label_16:
      return JSONClass.\u200E⁫⁮‪⁫⁭⁪⁪‮‭‮‪⁬⁪⁭‌⁬⁭‮⁫⁭‪‍‪‍‮‌⁭‭‭⁫‭‫‌⁬⁬⁭‬‬‪‮(str, "\n", aPrefix, "}");
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = -160584035;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -298806269)) % 5U)
        {
          case 0:
            JSONClass.\u202A⁪‎‍‬‭‌‏‪⁮‌‭‏‮‌⁫‏‍⁯‏‫‏‍‭⁮⁫​‭⁮‬‭⁫‬‫​‌‪‍‫⁫‮(aWriter, this.m_Dict.Count);
            num1 = (int) num2 * 694257101 ^ -740802241;
            continue;
          case 1:
            num1 = (int) num2 * -1877132240 ^ 1732063166;
            continue;
          case 3:
            JSONClass.\u202C‍⁭‭‎‫⁯‌‌⁯‫​‭‏⁭⁭​⁯‎‪‮‫⁯‫​‬‭‭⁫⁪‭‎​‮⁫‮‭⁯‏⁮‮(aWriter, (byte) 2);
            num1 = (int) num2 * 1604152408 ^ -1981289125;
            continue;
          case 4:
            goto label_1;
          default:
            goto label_6;
        }
      }
label_6:
      using (Dictionary<string, JSONNode>.KeyCollection.Enumerator enumerator = this.m_Dict.Keys.GetEnumerator())
      {
label_14:
        int num3 = !enumerator.MoveNext() ? -118294422 : (num3 = -1008522903);
        string current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -298806269)) % 7U)
          {
            case 0:
              this.m_Dict[current].Serialize(aWriter);
              num3 = (int) num4 * -87849144 ^ 407236221;
              continue;
            case 1:
              goto label_14;
            case 2:
              goto label_16;
            case 3:
              num3 = (int) num4 * 1659257482 ^ -1007610034;
              continue;
            case 4:
              num3 = -1008522903;
              continue;
            case 5:
              JSONClass.\u202B⁭‎⁭⁮⁫‫‮⁬⁮‌‮‍‮‮‎‬‏⁮‬‏‏‎⁭⁮⁪‎​⁯⁭‏⁯⁭‏‍⁭​‬‌⁭‮(aWriter, current);
              num3 = (int) num4 * 1034961555 ^ 181924537;
              continue;
            case 6:
              current = enumerator.Current;
              num3 = -1873321893;
              continue;
            default:
              goto label_10;
          }
        }
label_16:
        return;
label_10:;
      }
    }

    static bool \u202A‭⁮⁫‪​⁫‏‏⁭‍‏‏⁬‫⁭‏‮⁬‮‮‏‬‏‎‏‮‪⁬‫⁬⁭⁬⁮​‎‎⁭‭‏‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    static int \u200C‪⁭⁫⁬⁬‪‪⁮​⁭‏‏⁪‬‏‏‌‏⁭⁭⁮​‏⁯⁭‍‪‏‏​‪​⁮‮​​‫‍⁯‮([In] string obj0) => obj0.Length;

    static string \u202D‍‫⁭‬‌‫⁫‭⁮⁪‫‎⁮⁬‏‏‭‎‬‪​‎⁮‏‎‪⁯​​‬‍‪⁬⁯⁯‎‌‫‎‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u206F‎⁬‏​​‭‍‌⁮‎⁮⁫‍⁪‮⁯‎‫‬‬⁪⁮‌⁪⁬‎⁫⁮‫‌⁪⁮⁪‮‎‍⁫⁫‍‮([In] object obj0) => obj0.ToString();

    static string \u200C‌‫⁭‭‍⁬⁫⁯‪‭​⁯‬​‮⁮‌‎⁪‎‍‎‫⁬⁪‌⁬⁭⁪‫⁮⁫‪‭‏‍⁯⁭⁭‮([In] string[] obj0) => string.Concat(obj0);

    static string \u200E⁫⁮‪⁫⁭⁪⁪‮‭‮‪⁬⁪⁭‌⁬⁭‮⁫⁭‪‍‪‍‮‌⁭‭‭⁫‭‫‌⁬⁬⁭‬‬‪‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u202C‍⁭‭‎‫⁯‌‌⁯‫​‭‏⁭⁭​⁯‎‪‮‫⁯‫​‬‭‭⁫⁪‭‎​‮⁫‮‭⁯‏⁮‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u202A⁪‎‍‬‭‌‏‪⁮‌‭‏‮‌⁫‏‍⁯‏‫‏‍‭⁮⁫​‭⁮‬‭⁫‬‫​‌‪‍‫⁫‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u202B⁭‎⁭⁮⁫‫‮⁬⁮‌‮‍‮‮‎‬‏⁮‬‏‏‎⁭⁮⁪‎​⁯⁭‏⁯⁭‏‍⁭​‬‌⁭‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
