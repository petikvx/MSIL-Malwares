// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONArray
// Assembly: ByteTokenEncodi, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 9BCE2B70-1A4C-43FA-BCC8-8DBBEE1C54F3
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-0d4b7a493ffb322f46927f4d290740e9157c549cdb50db1ce746065332ed317c.exe

using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONArray : JSONNode, IEnumerable
  {
    private List<JSONNode> m_List = new List<JSONNode>();

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 1985228935;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ 586431960)) % 9U)
          {
            case 0:
              num1 = (int) num2 * -473123113 ^ -1082349904;
              continue;
            case 1:
              if (aIndex < 0)
              {
                num3 = 1;
                break;
              }
              num1 = (int) num2 * 1752709089 ^ -1602891007;
              continue;
            case 2:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            case 3:
              goto label_1;
            case 5:
              int num4 = !flag ? 1882540107 : (num4 = 2026447600);
              num1 = num4 ^ (int) num2 * -1986042508;
              continue;
            case 6:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * -1501738620 ^ 1857403020;
              continue;
            case 7:
              jsonNode = this.m_List[aIndex];
              num1 = 1036262996;
              continue;
            case 8:
              num1 = (int) num2 * 82845336 ^ -2059128788;
              continue;
            default:
              goto label_13;
          }
          flag = num3 != 0;
          num1 = 2058899041;
        }
label_13:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 965717195;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ 502474506)) % 10U)
          {
            case 0:
              goto label_3;
            case 1:
              this.m_List[aIndex] = value;
              num1 = 1971894266;
              continue;
            case 2:
              this.m_List.Add(value);
              num1 = (int) num2 * -1759008063 ^ -1508514325;
              continue;
            case 3:
              num1 = (int) num2 * 157794049 ^ 373818248;
              continue;
            case 4:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            case 5:
              goto label_1;
            case 6:
              num1 = (int) num2 * -1282835034 ^ 269113398;
              continue;
            case 7:
              if (aIndex < 0)
              {
                num3 = 1;
                break;
              }
              num1 = (int) num2 * 588167217 ^ -1567539431;
              continue;
            case 8:
              int num4 = flag ? -1147642252 : (num4 = -1848072079);
              num1 = num4 ^ (int) num2 * -1708011401;
              continue;
            case 9:
              num1 = (int) num2 * 702399817 ^ -236401285;
              continue;
            default:
              goto label_15;
          }
          flag = num3 != 0;
          num1 = 476668322;
        }
label_3:
        return;
label_15:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
label_1:
        int num1 = 707915465;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1304954153)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 736861776 ^ -189872894;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set => this.m_List.Add(value);
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = 691488753;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1834546922)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              count = this.m_List.Count;
              num1 = (int) num2 * -1544431897 ^ 553585739;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = -2031962333;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -363074350)) % 4U)
        {
          case 0:
            goto label_3;
          case 1:
            this.m_List.Add(aItem);
            num1 = (int) num2 * 1351377916 ^ -276428607;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * -800074609 ^ 691613307;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = 1591499778;
      JSONNode jsonNode1;
      while (true)
      {
        uint num2;
        bool flag;
        JSONNode jsonNode2;
        int num3;
        switch ((num2 = (uint) (num1 ^ 1727956785)) % 10U)
        {
          case 0:
            int num4 = !flag ? 1246368928 : (num4 = 1369751801);
            num1 = num4 ^ (int) num2 * -1001822395;
            continue;
          case 1:
            jsonNode2 = this.m_List[aIndex];
            num1 = 1101464997;
            continue;
          case 2:
            num1 = (int) num2 * 1089885783 ^ 813545826;
            continue;
          case 3:
            num3 = aIndex >= this.m_List.Count ? 1 : 0;
            break;
          case 4:
            jsonNode1 = jsonNode2;
            num1 = (int) num2 * 1706369399 ^ -858443279;
            continue;
          case 5:
            if (aIndex < 0)
            {
              num3 = 1;
              break;
            }
            num1 = (int) num2 * 576169039 ^ -1393591021;
            continue;
          case 6:
            this.m_List.RemoveAt(aIndex);
            num1 = (int) num2 * 1970911689 ^ -383171899;
            continue;
          case 7:
            goto label_1;
          case 8:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num2 * -30298749 ^ 345558162;
            continue;
          default:
            goto label_14;
        }
        flag = num3 != 0;
        num1 = 1337929481;
      }
label_14:
      return jsonNode1;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      this.m_List.Remove(aNode);
label_1:
      int num1 = 873568299;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1418731614)) % 3U)
        {
          case 1:
            jsonNode = aNode;
            num1 = (int) num2 * -54978384 ^ -1735304037;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONArray.\u003Cget_Childs\u003Ed__13 childs = new JSONArray.\u003Cget_Childs\u003Ed__13(-2);
label_1:
        int num1 = 962392780;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2061024459)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              childs.\u003C\u003E4__this = this;
              num1 = (int) num2 * -406221275 ^ -1633285015;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return (IEnumerable<JSONNode>) childs;
      }
    }

    public IEnumerator GetEnumerator()
    {
      bool enumerator1;
      // ISSUE: fault handler
      try
      {
        // ISSUE: reference to a compiler-generated field
        int num1 = this.\u003C\u003E1__state;
        if (num1 == 0)
          goto label_10;
label_1:
        int num2 = -1494782922;
label_2:
        List<JSONNode>.Enumerator enumerator;
        JSONNode N;
        while (true)
        {
          uint num3;
          switch ((num3 = (uint) (num2 ^ -1700683914)) % 20U)
          {
            case 0:
              goto label_1;
            case 1:
            case 17:
              goto label_19;
            case 2:
              num2 = (int) num3 * 1204867333 ^ -903071045;
              continue;
            case 3:
            case 11:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              N = (JSONNode) null;
              num2 = -1552005503;
              continue;
            case 4:
              enumerator = this.m_List.GetEnumerator();
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = (int) num3 * -119641603 ^ 1941501504;
              continue;
            case 5:
              // ISSUE: reference to a compiler-generated method
              this.\u003C\u003Em__Finally1();
              num2 = (int) num3 * 659570007 ^ -1726741163;
              continue;
            case 6:
              enumerator1 = true;
              num2 = (int) num3 * -2001824661 ^ -2014419699;
              continue;
            case 7:
              N = enumerator.Current;
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E2__current = (object) N;
              num2 = -2087732061;
              continue;
            case 9:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = 1;
              num2 = (int) num3 * 399060655 ^ 1684593691;
              continue;
            case 10:
              num2 = (int) num3 * 1655832769 ^ 301869710;
              continue;
            case 12:
              num2 = (int) num3 * 333496780 ^ -1101417712;
              continue;
            case 13:
            case 15:
              goto label_10;
            case 14:
              int num4;
              num2 = num4 = num1 == 1 ? -1665771899 : (num4 = -1492486292);
              continue;
            case 16:
              num2 = (int) num3 * 1027655024 ^ 1046240610;
              continue;
            case 18:
              enumerator1 = false;
              num2 = -1438354877;
              continue;
            case 19:
              int num5;
              num2 = num5 = enumerator.MoveNext() ? -262819479 : (num5 = -415282245);
              continue;
            default:
              goto label_17;
          }
        }
label_17:
        enumerator = new List<JSONNode>.Enumerator();
        enumerator1 = false;
        goto label_19;
label_10:
        // ISSUE: reference to a compiler-generated field
        this.\u003C\u003E1__state = -1;
        num2 = -871197922;
        goto label_2;
      }
      __fault
      {
        // ISSUE: reference to a compiler-generated method
        this.System\u002EIDisposable\u002EDispose();
      }
label_19:
      return enumerator1;
    }

    public override string ToString()
    {
label_1:
      int num1 = -1021079900;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -762064723)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            str1 = "[ ";
            num1 = (int) num2 * -1381894549 ^ -891227065;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator();
      try
      {
label_8:
        int num3 = !enumerator.MoveNext() ? -1826988045 : (num3 = -1020290467);
        bool flag;
        JSONNode current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -762064723)) % 9U)
          {
            case 0:
              num3 = -1020290467;
              continue;
            case 1:
              str1 = JSONArray.\u202A‫‪‭⁮‭​‫‮‏⁮‬‬‮⁭⁪⁫⁪⁬⁫⁭⁮‮‫⁬‬‪‍‏‭⁫‍⁫‫⁫⁬‫​‫‭‮(str1, JSONArray.\u200D⁪⁫⁫‫⁫‎⁬‮‪‌‮‬⁭⁪‍⁪‏⁭⁬‪‎⁭‭‭‪‍‭‏‫‌‏‬‫‬‎‏‏‌⁭‮((object) current));
              num3 = -341089290;
              continue;
            case 2:
              int num5 = !flag ? -1025083200 : (num5 = -1105487623);
              num3 = num5 ^ (int) num4 * 1934885714;
              continue;
            case 3:
              goto label_8;
            case 4:
              flag = JSONArray.\u202B⁭⁬‍‮⁫‫⁫⁭⁬‮‌‌⁫‪‏⁭‎‍‏‌⁪‌‌⁮‍⁫‍⁫‭‍⁫‎‪‎⁪⁪⁪⁭‎‮(str1) > 2;
              num3 = (int) num4 * -599236160 ^ 1716189180;
              continue;
            case 5:
              num3 = (int) num4 * 1508371246 ^ 2021576944;
              continue;
            case 6:
              current = enumerator.Current;
              num3 = -1671859740;
              continue;
            case 8:
              str1 = JSONArray.\u202A‫‪‭⁮‭​‫‮‏⁮‬‬‮⁭⁪⁫⁪⁬⁫⁭⁮‮‫⁬‬‪‍‏‭⁫‍⁫‫⁫⁬‫​‫‭‮(str1, ", ");
              num3 = (int) num4 * -1594390881 ^ -1630688472;
              continue;
            default:
              goto label_20;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_16:
        int num6 = -1340763285;
        while (true)
        {
          uint num7;
          switch ((num7 = (uint) (num6 ^ -762064723)) % 3U)
          {
            case 0:
              goto label_16;
            case 2:
              num6 = (int) num7 * -1183508688 ^ 96277794;
              continue;
            default:
              goto label_19;
          }
        }
label_19:;
      }
label_20:
      string str2 = JSONArray.\u202A‫‪‭⁮‭​‫‮‏⁮‬‬‮⁭⁪⁫⁪⁬⁫⁭⁮‮‫⁬‬‪‍‏‭⁫‍⁫‫⁫⁬‫​‫‭‮(str1, " ]");
label_21:
      int num8 = -1254622499;
      while (true)
      {
        uint num9;
        switch ((num9 = (uint) (num8 ^ -762064723)) % 3U)
        {
          case 0:
            goto label_21;
          case 1:
            num8 = (int) num9 * -927476721 ^ 514282625;
            continue;
          default:
            goto label_24;
        }
      }
label_24:
      return str2;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = -907946377;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -746386781)) % 3U)
        {
          case 1:
            str1 = "[ ";
            num1 = (int) num2 * 1175037078 ^ 181791436;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_11:
        int num3 = enumerator.MoveNext() ? -65047833 : (num3 = -1767478215);
        bool flag;
        JSONNode current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -746386781)) % 11U)
          {
            case 0:
              num3 = (int) num4 * 59807294 ^ 51552885;
              continue;
            case 1:
              str1 = JSONArray.\u206D‫‭‪‎⁬‏‮‏‍‌‫⁯⁬⁪⁬‎‮⁯‏‎⁪‪⁬‭⁭‫⁭‬⁫‍⁬​‍‫⁫⁮‪‫⁭‮(str1, "\n", aPrefix, "   ");
              num3 = -492596713;
              continue;
            case 2:
              num3 = -65047833;
              continue;
            case 3:
              str1 = JSONArray.\u202A‫‪‭⁮‭​‫‮‏⁮‬‬‮⁭⁪⁫⁪⁬⁫⁭⁮‮‫⁬‬‪‍‏‭⁫‍⁫‫⁫⁬‫​‫‭‮(str1, current.ToString(JSONArray.\u202A‫‪‭⁮‭​‫‮‏⁮‬‬‮⁭⁪⁫⁪⁬⁫⁭⁮‮‫⁬‬‪‍‏‭⁫‍⁫‫⁫⁬‫​‫‭‮(aPrefix, "   ")));
              num3 = (int) num4 * 1736757079 ^ -591505197;
              continue;
            case 4:
              num3 = (int) num4 * -520552195 ^ 40035584;
              continue;
            case 6:
              flag = JSONArray.\u202B⁭⁬‍‮⁫‫⁫⁭⁬‮‌‌⁫‪‏⁭‎‍‏‌⁪‌‌⁮‍⁫‍⁫‭‍⁫‎‪‎⁪⁪⁪⁭‎‮(str1) > 3;
              num3 = (int) num4 * -1752957505 ^ -1758675111;
              continue;
            case 7:
              goto label_11;
            case 8:
              int num5 = !flag ? 1317679489 : (num5 = 820344994);
              num3 = num5 ^ (int) num4 * 1784005500;
              continue;
            case 9:
              str1 = JSONArray.\u202A‫‪‭⁮‭​‫‮‏⁮‬‬‮⁭⁪⁫⁪⁬⁫⁭⁮‮‫⁬‬‪‍‏‭⁫‍⁫‫⁫⁬‫​‫‭‮(str1, ", ");
              num3 = (int) num4 * -941619828 ^ 274420293;
              continue;
            case 10:
              current = enumerator.Current;
              num3 = -1550418788;
              continue;
            default:
              goto label_18;
          }
        }
      }
label_18:
      string str2 = JSONArray.\u206D‫‭‪‎⁬‏‮‏‍‌‫⁯⁬⁪⁬‎‮⁯‏‎⁪‪⁬‭⁭‫⁭‬⁫‍⁬​‍‫⁫⁮‪‫⁭‮(str1, "\n", aPrefix, "]");
label_19:
      int num6 = -1795409441;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ -746386781)) % 3U)
        {
          case 0:
            goto label_19;
          case 1:
            num6 = (int) num7 * 1818581827 ^ 1896288252;
            continue;
          default:
            goto label_22;
        }
      }
label_22:
      return str2;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
      JSONArray.\u202C⁫⁪‏⁭‍⁪⁪⁪⁮​‮‏⁫​‎‬‭‬‏​‎⁭‎‏⁬​⁮⁮⁬⁯⁯⁪⁫⁮‏‮‍⁭‎‮(aWriter, (byte) 1);
label_1:
      int num1 = -299339753;
      int index;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -808101382)) % 12U)
        {
          case 0:
            num1 = (int) num2 * 1612750057 ^ -1966585215;
            continue;
          case 1:
            num1 = (int) num2 * -2070217385 ^ 1704289341;
            continue;
          case 2:
            int num3 = flag ? -1725939652 : (num3 = -1388374712);
            num1 = num3 ^ (int) num2 * -883901354;
            continue;
          case 3:
            flag = index < this.m_List.Count;
            num1 = -524552448;
            continue;
          case 4:
            index = 0;
            num1 = (int) num2 * -251815254 ^ 2124277481;
            continue;
          case 5:
            goto label_1;
          case 6:
            goto label_3;
          case 7:
            ++index;
            num1 = (int) num2 * -141584836 ^ 1443895173;
            continue;
          case 8:
            this.m_List[index].Serialize(aWriter);
            num1 = (int) num2 * -783218338 ^ -1022327202;
            continue;
          case 9:
            num1 = (int) num2 * 1098815347 ^ -1393883450;
            continue;
          case 10:
            num1 = -2093801902;
            continue;
          case 11:
            JSONArray.\u206E⁮​⁪⁯⁫⁯​​‮‏‎‫‭⁮⁬‏​‌⁭‭‪⁮‪‬‬​‫‍⁭⁫​‌‍‏‬⁫‪‫‬‮(aWriter, this.m_List.Count);
            num1 = (int) num2 * -2070069651 ^ 394505280;
            continue;
          default:
            goto label_14;
        }
      }
label_3:
      return;
label_14:;
    }

    static int \u202B⁭⁬‍‮⁫‫⁫⁭⁬‮‌‌⁫‪‏⁭‎‍‏‌⁪‌‌⁮‍⁫‍⁫‭‍⁫‎‪‎⁪⁪⁪⁭‎‮([In] string obj0) => obj0.Length;

    static string \u202A‫‪‭⁮‭​‫‮‏⁮‬‬‮⁭⁪⁫⁪⁬⁫⁭⁮‮‫⁬‬‪‍‏‭⁫‍⁫‫⁫⁬‫​‫‭‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u200D⁪⁫⁫‫⁫‎⁬‮‪‌‮‬⁭⁪‍⁪‏⁭⁬‪‎⁭‭‭‪‍‭‏‫‌‏‬‫‬‎‏‏‌⁭‮([In] object obj0) => obj0.ToString();

    static string \u206D‫‭‪‎⁬‏‮‏‍‌‫⁯⁬⁪⁬‎‮⁯‏‎⁪‪⁬‭⁭‫⁭‬⁫‍⁬​‍‫⁫⁮‪‫⁭‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u202C⁫⁪‏⁭‍⁪⁪⁪⁮​‮‏⁫​‎‬‭‬‏​‎⁭‎‏⁬​⁮⁮⁬⁯⁯⁪⁫⁮‏‮‍⁭‎‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u206E⁮​⁪⁯⁫⁯​​‮‏‎‫‭⁮⁬‏​‌⁭‭‪⁮‪‬‬​‫‍⁭⁫​‌‍‏‬⁫‪‫‬‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);
  }
}
