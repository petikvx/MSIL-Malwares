// Decompiled with JetBrains decompiler
// Type: Newtonsoft.Json.JsonWriter
// Assembly: BitGenerator, Version=37.0.2.5583, Culture=neutral, PublicKeyToken=70e4c26ef2031892
// MVID: D3922F89-E00A-4D10-8BC9-9309D5539F14
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\Trojan.Win32.Scar.nxii-31823040d8ccb20eab0b8653d01af370a6537017e69ead69f6f7b73d6ef7ac14.exe

using \u0001;
using \u0014;
using SmartAssembly.Delegates;
using SmartAssembly.HouseOfCards;
using System;
using System.Collections.Generic;
using System.Globalization;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace Newtonsoft.Json
{
  public abstract class JsonWriter : IDisposable
  {
    private static readonly JsonWriter.State[][] \u0001;
    internal static readonly JsonWriter.State[][] \u0002;
    internal List<\u0011.\u0002> \u0001;
    internal \u0011.\u0002 \u0001;
    internal JsonWriter.State \u0001;
    internal \u0004.\u0002 \u0001;
    internal \u000E.\u0001 \u0001;
    internal \u0004.\u0001 \u0001;
    internal \u0003 \u0001;
    internal \u0011.\u0001 \u0001;
    internal string \u0001;
    internal CultureInfo \u0001;
    [NonSerialized]
    internal static GetString \u001A;

    static JsonWriter()
    {
      Strings.CreateGetStringDelegate(typeof (JsonWriter));
      JsonWriter.\u0002 = new JsonWriter.State[8][]
      {
        new JsonWriter.State[10]
        {
          JsonWriter.State.Error,
          JsonWriter.State.Error,
          JsonWriter.State.Error,
          JsonWriter.State.Error,
          JsonWriter.State.Error,
          JsonWriter.State.Error,
          JsonWriter.State.Error,
          JsonWriter.State.Error,
          JsonWriter.State.Error,
          JsonWriter.State.Error
        },
        new JsonWriter.State[10]
        {
          JsonWriter.State.ObjectStart,
          JsonWriter.State.ObjectStart,
          JsonWriter.State.Error,
          JsonWriter.State.Error,
          JsonWriter.State.ObjectStart,
          JsonWriter.State.ObjectStart,
          JsonWriter.State.ObjectStart,
          JsonWriter.State.ObjectStart,
          JsonWriter.State.Error,
          JsonWriter.State.Error
        },
        new JsonWriter.State[10]
        {
          JsonWriter.State.ArrayStart,
          JsonWriter.State.ArrayStart,
          JsonWriter.State.Error,
          JsonWriter.State.Error,
          JsonWriter.State.ArrayStart,
          JsonWriter.State.ArrayStart,
          JsonWriter.State.ArrayStart,
          JsonWriter.State.ArrayStart,
          JsonWriter.State.Error,
          JsonWriter.State.Error
        },
        new JsonWriter.State[10]
        {
          JsonWriter.State.ConstructorStart,
          JsonWriter.State.ConstructorStart,
          JsonWriter.State.Error,
          JsonWriter.State.Error,
          JsonWriter.State.ConstructorStart,
          JsonWriter.State.ConstructorStart,
          JsonWriter.State.ConstructorStart,
          JsonWriter.State.ConstructorStart,
          JsonWriter.State.Error,
          JsonWriter.State.Error
        },
        new JsonWriter.State[10]
        {
          JsonWriter.State.Property,
          JsonWriter.State.Error,
          JsonWriter.State.Property,
          JsonWriter.State.Property,
          JsonWriter.State.Error,
          JsonWriter.State.Error,
          JsonWriter.State.Error,
          JsonWriter.State.Error,
          JsonWriter.State.Error,
          JsonWriter.State.Error
        },
        new JsonWriter.State[10]
        {
          JsonWriter.State.Start,
          JsonWriter.State.Property,
          JsonWriter.State.ObjectStart,
          JsonWriter.State.Object,
          JsonWriter.State.ArrayStart,
          JsonWriter.State.Array,
          JsonWriter.State.Constructor,
          JsonWriter.State.Constructor,
          JsonWriter.State.Error,
          JsonWriter.State.Error
        },
        new JsonWriter.State[10]
        {
          JsonWriter.State.Start,
          JsonWriter.State.Property,
          JsonWriter.State.ObjectStart,
          JsonWriter.State.Object,
          JsonWriter.State.ArrayStart,
          JsonWriter.State.Array,
          JsonWriter.State.Constructor,
          JsonWriter.State.Constructor,
          JsonWriter.State.Error,
          JsonWriter.State.Error
        },
        new JsonWriter.State[10]
        {
          JsonWriter.State.Start,
          JsonWriter.State.Object,
          JsonWriter.State.Error,
          JsonWriter.State.Error,
          JsonWriter.State.Array,
          JsonWriter.State.Array,
          JsonWriter.State.Constructor,
          JsonWriter.State.Constructor,
          JsonWriter.State.Error,
          JsonWriter.State.Error
        }
      };
      JsonWriter.\u0001 = \u0006.\u0001();
    }

    [CompilerGenerated]
    [SpecialName]
    public bool \u0001() => this.\u0001;

    [CompilerGenerated]
    [SpecialName]
    public void \u0002([In] bool obj0) => this.\u0001 = obj0;

    internal virtual void \u0004()
    {
    }

    protected JsonWriter()
    {
      this.\u0001 = JsonWriter.State.Start;
      this.\u0001 = \u0004.\u0002.\u0001;
      this.\u0001 = \u0004.\u0001.\u0004;
      this.\u0002(true);
    }

    public virtual void \u0001() => \u0006.\u0001(this);

    public virtual void \u0002() => \u0006.\u0001(JsonToken.StartObject, JsonContainerType.Object, this);

    public virtual void \u0011() => \u0006.\u0001(JsonContainerType.Object, this);

    public virtual void \u0003() => \u0006.\u0001(JsonToken.StartArray, JsonContainerType.Array, this);

    public virtual void \u000F() => \u0006.\u0001(JsonContainerType.Array, this);

    public virtual void \u0001([In] string obj0) => \u0006.\u0001(JsonToken.StartConstructor, JsonContainerType.Constructor, this);

    public virtual void \u0010() => \u0006.\u0001(JsonContainerType.Constructor, this);

    public virtual void \u0002([In] string obj0) => \u0006.\u0001(this, obj0);

    public virtual void \u0001([In] string obj0, [In] bool obj1) => this.\u0002(obj0);

    public virtual void \u0012() => \u0006.\u0001(this, this.\u0001.\u0001);

    internal unsafe void \u0001([In] JsonContainerType obj0)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(20);
      *(int*) voidPtr = 0;
      if (this.\u0001.\u0001 != obj0)
        goto label_22;
      else
        goto label_21;
label_5:
      if (*(int*) voidPtr == 0)
        throw \u0006.\u0001(this, JsonWriter.\u001A(3918), (Exception) null);
      *(int*) ((IntPtr) voidPtr + 16) = 0;
      while (*(int*) ((IntPtr) voidPtr + 16) < *(int*) voidPtr)
      {
        JsonToken jsonToken = \u0006.\u0001(this, \u0006.\u0001(this));
        if (this.\u0001 == JsonWriter.State.Property)
          this.\u0008();
        if (this.\u0001 == \u0004.\u0002.\u0002 && this.\u0001 != JsonWriter.State.ObjectStart && this.\u0001 != JsonWriter.State.ArrayStart)
          this.\u0005();
        this.\u0001(jsonToken);
        JsonContainerType jsonContainerType = this.\u0001.\u0001;
        switch (jsonContainerType)
        {
          case JsonContainerType.None:
            this.\u0001 = JsonWriter.State.Start;
            break;
          case JsonContainerType.Object:
            this.\u0001 = JsonWriter.State.Object;
            break;
          case JsonContainerType.Array:
            this.\u0001 = JsonWriter.State.Array;
            break;
          case JsonContainerType.Constructor:
            this.\u0001 = JsonWriter.State.Array;
            break;
          default:
            throw \u0006.\u0001(this, \u0086.\u0086\u0003((object) JsonWriter.\u001A(3943), (object) jsonContainerType), (Exception) null);
        }
        *(int*) ((IntPtr) voidPtr + 16) = *(int*) ((IntPtr) voidPtr + 16) + 1;
      }
      return;
label_21:
      *(int*) voidPtr = 1;
      goto label_5;
label_22:
      *(int*) ((IntPtr) voidPtr + 4) = \u0006.\u0001(this) - 2;
      *(int*) ((IntPtr) voidPtr + 8) = *(int*) ((IntPtr) voidPtr + 4);
      while (*(int*) ((IntPtr) voidPtr + 8) >= 0)
      {
        *(int*) ((IntPtr) voidPtr + 12) = *(int*) ((IntPtr) voidPtr + 4) - *(int*) ((IntPtr) voidPtr + 8);
        if (this.\u0001[*(int*) ((IntPtr) voidPtr + 12)].\u0001 == obj0)
        {
          *(int*) voidPtr = *(int*) ((IntPtr) voidPtr + 8) + 2;
          break;
        }
        *(int*) ((IntPtr) voidPtr + 8) = *(int*) ((IntPtr) voidPtr + 8) - 1;
      }
      goto label_5;
    }

    protected virtual void \u0001([In] JsonToken obj0)
    {
    }

    protected virtual void \u0005()
    {
    }

    protected virtual void \u0006()
    {
    }

    protected virtual void \u0007()
    {
    }

    internal void \u0002([In] JsonToken obj0)
    {
      JsonWriter.State state = JsonWriter.\u0001[(int) obj0][(int) this.\u0001];
      if (state == JsonWriter.State.Error)
        throw \u0006.\u0001(this, \u0002.\u0002.\u0001(JsonWriter.\u001A(3968), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj0.ToString(), (object) this.\u0001.ToString()), (Exception) null);
      if ((this.\u0001 == JsonWriter.State.Object || this.\u0001 == JsonWriter.State.Array || this.\u0001 == JsonWriter.State.Constructor) && obj0 != JsonToken.Comment)
        this.\u0006();
      if (this.\u0001 == \u0004.\u0002.\u0002)
      {
        if (this.\u0001 == JsonWriter.State.Property)
          this.\u0007();
        if (this.\u0001 == JsonWriter.State.Array || this.\u0001 == JsonWriter.State.ArrayStart || this.\u0001 == JsonWriter.State.Constructor || this.\u0001 == JsonWriter.State.ConstructorStart || obj0 == JsonToken.PropertyName && this.\u0001 != JsonWriter.State.Start)
          this.\u0005();
      }
      this.\u0001 = state;
    }

    public virtual void \u0008() => \u0006.\u0001(this, JsonToken.Null);

    public virtual void \u000E() => \u0006.\u0001(this, JsonToken.Undefined);

    public virtual void \u0003([In] string obj0) => \u0006.\u0001(this);

    public virtual void \u0006([In] string obj0)
    {
      \u0006.\u0001(this);
      this.\u0002(JsonToken.Undefined);
      string str = obj0;
      if (false)
        return;
      this.\u0003(str);
    }

    public virtual void \u0004([In] string obj0) => \u0006.\u0001(this, JsonToken.String);

    public virtual void \u0001([In] int obj0) => \u0006.\u0001(this, JsonToken.Integer);

    [CLSCompliant(false)]
    public virtual void \u0001([In] uint obj0) => \u0006.\u0001(this, JsonToken.Integer);

    public virtual void \u0001([In] long obj0) => \u0006.\u0001(this, JsonToken.Integer);

    [CLSCompliant(false)]
    public virtual void \u0001([In] ulong obj0) => \u0006.\u0001(this, JsonToken.Integer);

    public virtual void \u0001([In] float obj0) => \u0006.\u0001(this, JsonToken.Float);

    public virtual void \u0001([In] double obj0) => \u0006.\u0001(this, JsonToken.Float);

    public virtual void \u0001([In] bool obj0) => \u0006.\u0001(this, JsonToken.Boolean);

    public virtual void \u0001([In] short obj0) => \u0006.\u0001(this, JsonToken.Integer);

    [CLSCompliant(false)]
    public virtual void \u0001([In] ushort obj0) => \u0006.\u0001(this, JsonToken.Integer);

    public virtual void \u0001([In] char obj0) => \u0006.\u0001(this, JsonToken.String);

    public virtual void \u0001([In] byte obj0) => \u0006.\u0001(this, JsonToken.Integer);

    [CLSCompliant(false)]
    public virtual void \u0001([In] sbyte obj0) => \u0006.\u0001(this, JsonToken.Integer);

    public virtual void \u0001([In] Decimal obj0) => \u0006.\u0001(this, JsonToken.Float);

    public virtual void \u0001([In] DateTime obj0) => \u0006.\u0001(this, JsonToken.Date);

    public virtual void \u0001([In] DateTimeOffset obj0) => \u0006.\u0001(this, JsonToken.Date);

    public virtual void \u0001([In] Guid obj0) => \u0006.\u0001(this, JsonToken.String);

    public virtual void \u0001([In] TimeSpan obj0) => \u0006.\u0001(this, JsonToken.String);

    public virtual void \u0001([In] int? obj0)
    {
label_0:
      if (!obj0.HasValue)
        goto label_5;
      else
        goto label_6;
label_4:
      if (true)
        return;
label_5:
      this.\u0008();
      if (true)
      {
        if (true)
          return;
        goto label_4;
      }
      else
        goto label_0;
label_6:
      this.\u0001(obj0.GetValueOrDefault());
      goto label_4;
    }

    [CLSCompliant(false)]
    public virtual void \u0001([In] uint? obj0)
    {
label_0:
      if (!obj0.HasValue)
        goto label_5;
      else
        goto label_6;
label_4:
      if (true)
        return;
label_5:
      this.\u0008();
      if (true)
      {
        if (true)
          return;
        goto label_4;
      }
      else
        goto label_0;
label_6:
      this.\u0001(obj0.GetValueOrDefault());
      goto label_4;
    }

    public virtual void \u0001([In] long? obj0)
    {
label_0:
      if (!obj0.HasValue)
        goto label_5;
      else
        goto label_6;
label_4:
      if (true)
        return;
label_5:
      this.\u0008();
      if (true)
      {
        if (true)
          return;
        goto label_4;
      }
      else
        goto label_0;
label_6:
      this.\u0001(obj0.GetValueOrDefault());
      goto label_4;
    }

    [CLSCompliant(false)]
    public virtual void \u0001([In] ulong? obj0)
    {
label_0:
      if (!obj0.HasValue)
        goto label_5;
      else
        goto label_6;
label_4:
      if (true)
        return;
label_5:
      this.\u0008();
      if (true)
      {
        if (true)
          return;
        goto label_4;
      }
      else
        goto label_0;
label_6:
      this.\u0001(obj0.GetValueOrDefault());
      goto label_4;
    }

    public virtual void \u0001([In] float? obj0)
    {
label_0:
      if (!obj0.HasValue)
        goto label_5;
      else
        goto label_6;
label_4:
      if (true)
        return;
label_5:
      this.\u0008();
      if (true)
      {
        if (true)
          return;
        goto label_4;
      }
      else
        goto label_0;
label_6:
      this.\u0001(obj0.GetValueOrDefault());
      goto label_4;
    }

    public virtual void \u0001([In] double? obj0)
    {
label_0:
      if (!obj0.HasValue)
        goto label_5;
      else
        goto label_6;
label_4:
      if (true)
        return;
label_5:
      this.\u0008();
      if (true)
      {
        if (true)
          return;
        goto label_4;
      }
      else
        goto label_0;
label_6:
      this.\u0001(obj0.GetValueOrDefault());
      goto label_4;
    }

    public virtual void \u0001([In] bool? obj0)
    {
label_0:
      if (!obj0.HasValue)
        goto label_5;
      else
        goto label_6;
label_4:
      if (true)
        return;
label_5:
      this.\u0008();
      if (true)
      {
        if (true)
          return;
        goto label_4;
      }
      else
        goto label_0;
label_6:
      this.\u0001(obj0.GetValueOrDefault());
      goto label_4;
    }

    public virtual void \u0001([In] short? obj0)
    {
label_0:
      if (!obj0.HasValue)
        goto label_5;
      else
        goto label_6;
label_4:
      if (true)
        return;
label_5:
      this.\u0008();
      if (true)
      {
        if (true)
          return;
        goto label_4;
      }
      else
        goto label_0;
label_6:
      this.\u0001(obj0.GetValueOrDefault());
      goto label_4;
    }

    [CLSCompliant(false)]
    public virtual void \u0001([In] ushort? obj0)
    {
label_0:
      if (!obj0.HasValue)
        goto label_5;
      else
        goto label_6;
label_4:
      if (true)
        return;
label_5:
      this.\u0008();
      if (true)
      {
        if (true)
          return;
        goto label_4;
      }
      else
        goto label_0;
label_6:
      this.\u0001(obj0.GetValueOrDefault());
      goto label_4;
    }

    public virtual void \u0001([In] char? obj0)
    {
label_0:
      if (!obj0.HasValue)
        goto label_5;
      else
        goto label_6;
label_4:
      if (true)
        return;
label_5:
      this.\u0008();
      if (true)
      {
        if (true)
          return;
        goto label_4;
      }
      else
        goto label_0;
label_6:
      this.\u0001(obj0.GetValueOrDefault());
      goto label_4;
    }

    public virtual void \u0001([In] byte? obj0)
    {
label_0:
      if (!obj0.HasValue)
        goto label_5;
      else
        goto label_6;
label_4:
      if (true)
        return;
label_5:
      this.\u0008();
      if (true)
      {
        if (true)
          return;
        goto label_4;
      }
      else
        goto label_0;
label_6:
      this.\u0001(obj0.GetValueOrDefault());
      goto label_4;
    }

    [CLSCompliant(false)]
    public virtual void \u0001([In] sbyte? obj0)
    {
label_0:
      if (!obj0.HasValue)
        goto label_5;
      else
        goto label_6;
label_4:
      if (true)
        return;
label_5:
      this.\u0008();
      if (true)
      {
        if (true)
          return;
        goto label_4;
      }
      else
        goto label_0;
label_6:
      this.\u0001(obj0.GetValueOrDefault());
      goto label_4;
    }

    public virtual void \u0001([In] Decimal? obj0)
    {
label_0:
      if (!obj0.HasValue)
        goto label_5;
      else
        goto label_6;
label_4:
      if (true)
        return;
label_5:
      this.\u0008();
      if (true)
      {
        if (true)
          return;
        goto label_4;
      }
      else
        goto label_0;
label_6:
      this.\u0001(obj0.GetValueOrDefault());
      goto label_4;
    }

    public virtual void \u0001([In] DateTime? obj0)
    {
label_0:
      if (!obj0.HasValue)
        goto label_5;
      else
        goto label_6;
label_4:
      if (true)
        return;
label_5:
      this.\u0008();
      if (true)
      {
        if (true)
          return;
        goto label_4;
      }
      else
        goto label_0;
label_6:
      this.\u0001(obj0.GetValueOrDefault());
      goto label_4;
    }

    public virtual void \u0001([In] DateTimeOffset? obj0)
    {
label_0:
      if (!obj0.HasValue)
        goto label_5;
      else
        goto label_6;
label_4:
      if (true)
        return;
label_5:
      this.\u0008();
      if (true)
      {
        if (true)
          return;
        goto label_4;
      }
      else
        goto label_0;
label_6:
      this.\u0001(obj0.GetValueOrDefault());
      goto label_4;
    }

    public virtual void \u0001([In] Guid? obj0)
    {
label_0:
      if (!obj0.HasValue)
        goto label_5;
      else
        goto label_6;
label_4:
      if (true)
        return;
label_5:
      this.\u0008();
      if (true)
      {
        if (true)
          return;
        goto label_4;
      }
      else
        goto label_0;
label_6:
      this.\u0001(obj0.GetValueOrDefault());
      goto label_4;
    }

    public virtual void \u0001([In] TimeSpan? obj0)
    {
label_0:
      if (!obj0.HasValue)
        goto label_5;
      else
        goto label_6;
label_4:
      if (true)
        return;
label_5:
      this.\u0008();
      if (true)
      {
        if (true)
          return;
        goto label_4;
      }
      else
        goto label_0;
label_6:
      this.\u0001(obj0.GetValueOrDefault());
      goto label_4;
    }

    public virtual void \u0001([In] byte[] obj0)
    {
      if (obj0 == null)
        this.\u0008();
      else
        \u0006.\u0001(this, JsonToken.Bytes);
    }

    public virtual void \u0001([In] Uri obj0)
    {
label_0:
      if (!\u009F.\u0016\u0004(obj0, (Uri) null))
        goto label_3;
label_1:
      if (true)
      {
        this.\u0008();
        if (true)
          return;
        goto label_0;
      }
label_3:
      if (true)
      {
        if (true)
          goto label_8;
label_5:
        if (true)
          return;
        goto label_1;
label_8:
        \u0006.\u0001(this, JsonToken.String);
        goto label_5;
      }
      else
        goto label_1;
    }

    public virtual void \u0001([In] object obj0)
    {
      do
      {
        if (obj0 != null)
          goto label_5;
        else
          goto label_4;
label_1:
        continue;
label_4:
        this.\u0008();
        goto label_1;
label_5:
        \u0006.\u0001(this, \u0006.\u0001(\u0001\u0002.\u007E\u0017\u0004(obj0)), obj0);
        if (false)
          goto label_1;
        else
          goto label_2;
      }
      while (false);
      return;
label_2:;
    }

    public virtual void \u0005([In] string obj0) => \u0006.\u0001(this);

    void IDisposable.\u0013()
    {
      this.\u0003(true);
      \u0005\u0002.\u0086\u0004((object) this);
    }

    protected virtual void \u0003([In] bool obj0)
    {
      do
      {
        int num1 = this.\u0001 == JsonWriter.State.Closed ? 1 : 0;
        int num2;
        while (true)
        {
          int num3 = 0;
          do
          {
            if (num3 == 0)
            {
              int num4 = num1 == num3 ? 1 : 0;
              num3 = obj0 ? 1 : 0;
              num1 = num4;
            }
          }
          while (false);
          num2 = num1 & num3;
          if (false)
            num1 = num2;
          else
            break;
        }
        if (num2 != 0)
          goto label_10;
label_9:
        continue;
label_10:
        this.\u0001();
        goto label_9;
      }
      while (false);
    }

    internal enum State
    {
      Start,
      Property,
      ObjectStart,
      Object,
      ArrayStart,
      Array,
      ConstructorStart,
      Constructor,
      Closed,
      Error,
    }
  }
}
