// Decompiled with JetBrains decompiler
// Type: mmxAH.ArchemStreet
// Assembly: PermissionTokenFact, Version=1.0.2.2, Culture=neutral, PublicKeyToken=null
// MVID: 0E8B010F-DA1B-42FA-9C31-C1DCAF557A03
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan-Spy.Win32.Noon.bcqm-2f77bf5e4f961cc5be052ad8dc7fd08c90151230df1a0324df453d4e1d3a2056.exe

using System;
using System.Collections.Generic;

namespace mmxAH
{
  public class ArchemStreet : ArchemArea
  {
    private List<short> LocathionInDistr;

    public ArchemStreet(GameEngine eng, string cn)
    {
      this.type = LocathionType.ArchamStreet;
      this.LocathionInDistr = new List<short>();
      this.codeName = cn;
      this.en = eng;
    }

    public void RemoveMonstersFromDistrict()
    {
      this.monsters.Clear();
      foreach (byte index in this.LocathionInDistr)
        ((ArchemArea) this.en.locs[(int) index]).RemoveAllMonsters();
    }

    public void DistrictCloseStatus(bool closeStatus)
    {
      this.isClosed = closeStatus;
      foreach (byte index in this.LocathionInDistr)
        ((ArchemArea) this.en.locs[(int) index]).SetClosed(closeStatus);
    }

    public override bool FromText(TextFileParser prs, TextFileParser text)
    {
      if (!this.FromText2(prs, text))
        return false;
      string upper;
      while ((upper = prs.GetToken().Trim().ToUpper()) != "END" && upper != null)
      {
        short numberByCodeName = this.en.map.GetNumberByCodeName(prs.GetToken().Trim().ToUpper());
        if (numberByCodeName == (short) -1)
          return false;
        string str = upper;
        if (!(str == "BLACK"))
        {
          if (!(str == "WHITE"))
          {
            if (!(str == "OTHER"))
              return false;
            this.OtherLinks.Add(numberByCodeName);
          }
          else
            this.WhiteArrow = numberByCodeName;
        }
        else
          this.BlackArrow = numberByCodeName;
      }
      return true;
    }

    public void PrintDistrickt(byte label, byte row)
    {
      this.en.io.Print(((int) row + 1).ToString() + ". ", (byte) 16, true, label: label);
      this.Print(label);
      foreach (short index in this.LocathionInDistr)
      {
        this.en.io.Print(Environment.NewLine, (byte) 10, label: label);
        this.en.locs[(int) index].Print(label);
      }
      this.en.io.Print(Environment.NewLine + Environment.NewLine, (byte) 10, label: label);
    }

    public override void Print(byte label)
    {
      this.en.io.Print(this.displayName, (byte) 16, true, label: label);
      this.PrintInvestAndMonsters(label);
    }

    public void AddLocInDistr(short loc, bool isTextLoad = true)
    {
      this.LocathionInDistr.Add(loc);
      if (!isTextLoad)
        return;
      this.OtherLinks.Add(loc);
    }

    public List<short> GetLinkStreets()
    {
      List<short> linkStreets = new List<short>();
      if (this.en.locs[(int) this.BlackArrow].GetLocType() == LocathionType.ArchamStreet)
        linkStreets.Add(this.BlackArrow);
      if (this.en.locs[(int) this.WhiteArrow].GetLocType() == LocathionType.ArchamStreet)
        linkStreets.Add(this.WhiteArrow);
      foreach (short otherLink in this.OtherLinks)
      {
        if (this.en.locs[(int) otherLink].GetLocType() == LocathionType.ArchamStreet)
          linkStreets.Add(otherLink);
      }
      return linkStreets;
    }
  }
}
