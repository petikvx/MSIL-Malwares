// Decompiled with JetBrains decompiler
// Type: rw.uwN
// Assembly: DynamicMet, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: AF763EB9-8CE5-4C8D-A157-180B851AA721
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-f9cf1ff0097d861156fd09818614a3bb202741325fc00049356ff51a8388dfd6.exe

using System.Collections;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace rw
{
  internal class uwN : nwe
  {
    internal static uwN rLZ;

    public void Cfp(Od _param1)
    {
      using (IEnumerator<OA> enumerator1 = _param1.wVE().GetEnumerator())
      {
        while (true)
        {
          if (enumerator1.MoveNext())
            goto label_21;
          else
            goto label_37;
label_2:
          int num1;
          int num2 = num1;
label_3:
          mR mR;
          Dictionary<string, g4>.ValueCollection.Enumerator enumerator2;
          while (true)
          {
            switch (num2)
            {
              case 1:
                enumerator2 = mR.mfQ().Values.GetEnumerator();
                num2 = uwN.cLI() == null ? 2 : 0;
                continue;
              case 2:
                goto label_23;
              case 3:
                goto label_39;
              default:
                goto label_14;
            }
          }
label_14:
          OA current1;
          IEnumerator<z9> enumerator3;
          try
          {
            while (uwN.uLb((object) enumerator3))
              uwN.oHL(enumerator3.Current.LJY(), current1);
            goto label_35;
          }
          finally
          {
            enumerator3?.Dispose();
          }
label_23:
          try
          {
label_29:
            while (enumerator2.MoveNext())
            {
              g4 current2 = enumerator2.Current;
              int num3 = 2;
              bool flag;
              while (true)
              {
                switch (num3)
                {
                  case 1:
                    if (flag)
                    {
                      int num4;
                      num3 = uwN.cLI() == null ? 0 : num4;
                      continue;
                    }
                    goto label_29;
                  case 2:
                    flag = current2.wJo() is XY;
                    num3 = uwN.VLv() ? 1 : 1;
                    continue;
                  default:
                    goto label_25;
                }
              }
label_25:
              XY xy = (XY) current2.wJo();
              if (_param1.wVu().ContainsKey(xy.Cti()))
              {
                qy qy = new qy();
                qy.atF(_param1.wVu()[xy.Cti()]);
                qy.UfU(xy.AfY());
                uwN.pL8((object) qy, xy.mRN());
                uwN.rLf((object) current2, (object) qy);
              }
              else
                qwp.Cq3(xy.mRN(), (string) uwN.PLL((object) "Could not resolve '", (object) xy.Cti(), (object) "' to a type."));
            }
            goto label_35;
          }
          finally
          {
            enumerator2.Dispose();
          }
label_21:
          current1 = enumerator1.Current;
          switch (current1)
          {
            case mR _:
              mR = current1 as mR;
              if (uwN.cLI() == null)
              {
                num2 = 1;
                goto label_3;
              }
              else
                goto label_2;
            case V5 _:
              enumerator3 = (current1 as V5).ctI().GetEnumerator();
              num2 = 0;
              if (uwN.cLI() == null)
              {
                num2 = 0;
                goto label_3;
              }
              else
                goto label_3;
            case nG _:
              using (IEnumerator<Y2> enumerator4 = (current1 as nG).ctU().GetEnumerator())
              {
                while (enumerator4.MoveNext())
                  uwN.oHL(enumerator4.Current.lJB(), current1);
                break;
              }
          }
label_35:
          continue;
label_37:
          if (uwN.VLv())
          {
            num2 = 3;
            goto label_3;
          }
          else
            goto label_2;
        }
label_39:;
      }
    }

    private static void oHL(IList<Fq> _param0, OA _param1)
    {
      if (_param0 == null)
        return;
      for (int index = 0; index < _param0.Count; ++index)
      {
        Fq fq = _param0[index];
        if (fq is Rw8)
        {
          Rw8 rw8 = fq as Rw8;
          Bwi bwi = new Bwi();
          bwi.TqL(rw8.rqo());
          bwi.VRw(rw8.mRN());
          if (_param1.iRz().ContainsKey(rw8.NqX()))
            bwi.pqq(_param1.iRz()[rw8.NqX()]);
          else
            qwp.Cq3(bwi.mRN(), "Could not find local variable: '" + rw8.NqX() + "'");
          _param0.Insert(index, (Fq) bwi);
          _param0.Remove(fq);
        }
      }
    }

    public uwN()
    {
      uwN.gL3();
      // ISSUE: explicit constructor call
      base.\u002Ector();
    }

    internal static void pL8([In] object obj0, Nx _param1) => ((qy) obj0).VRw(_param1);

    internal static void rLf([In] object obj0, [In] object obj1) => ((g4) obj0).sJV((CU) obj1);

    internal static object PLL([In] object obj0, [In] object obj1, [In] object obj2) => (object) ((string) obj0 + (string) obj1 + (string) obj2);

    internal static bool uLb([In] object obj0) => ((IEnumerator) obj0).MoveNext();

    internal static bool VLv() => uwN.rLZ == null;

    internal static uwN cLI() => uwN.rLZ;

    internal static void gL3() => ccw.xFvA3V();
  }
}
