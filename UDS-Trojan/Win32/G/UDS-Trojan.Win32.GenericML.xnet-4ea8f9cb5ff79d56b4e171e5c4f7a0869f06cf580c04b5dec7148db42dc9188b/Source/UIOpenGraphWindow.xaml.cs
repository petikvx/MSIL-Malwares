// Decompiled with JetBrains decompiler
// Type: Path_Finder.Source.UI.OpenGraphWindow
// Assembly: TypeDelega, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FEF18FA9-51E7-447C-8FC7-9441C6E3C0DE
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.07\UDS-Trojan.Win32.GenericML.xnet-4ea8f9cb5ff79d56b4e171e5c4f7a0869f06cf580c04b5dec7148db42dc9188b.exe

using Microsoft.Win32;
using Path_Finder.DataTypes;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Markup;

namespace Path_Finder.Source.UI
{
  public partial class OpenGraphWindow : Window, IComponentConnector
  {
    private CitiesLocations citiesLocations;
    private CitiesConnections citiesConnections;
    private bool result;
    internal OpenGraphWindow OpenraphWindow;
    internal TextBox textBoxLocations;
    internal Label labelLocations;
    internal Label labelConnections;
    internal Button buttonBrowseLocations;
    internal Button buttonCancel;
    internal Button buttonLoadGraph;
    internal TextBox textBoxConnections;
    internal Button buttonBrowseConnections;
    private bool _contentLoaded;

    public OpenGraphWindow()
    {
      this.citiesLocations = (CitiesLocations) null;
      this.citiesConnections = (CitiesConnections) null;
      this.InitializeComponent();
    }

    public CitiesLocations getLocations() => this.citiesLocations;

    public CitiesConnections getConnections() => this.citiesConnections;

    public bool getResult() => this.result;

    private void buttonCancel_Click(object sender, RoutedEventArgs e)
    {
      this.result = false;
      this.Close();
    }

    private void buttonBrowseLocations_Click(object sender, RoutedEventArgs e)
    {
      OpenFileDialog openFileDialog = new OpenFileDialog();
      openFileDialog.Multiselect = false;
      openFileDialog.DefaultExt = ".txt";
      openFileDialog.Filter = "Text documents (.txt)|*.txt|All files (*.*)|*.*";
      bool? nullable = openFileDialog.ShowDialog();
      bool flag = true;
      if (!(nullable.GetValueOrDefault() == flag & nullable.HasValue))
        return;
      this.textBoxLocations.Text = openFileDialog.FileName;
    }

    private void buttonBrowseConnections_Click(object sender, RoutedEventArgs e)
    {
      OpenFileDialog openFileDialog = new OpenFileDialog();
      openFileDialog.Multiselect = false;
      openFileDialog.DefaultExt = ".txt";
      openFileDialog.Filter = "Text documents (.txt)|*.txt|All files (*.*)|*.*";
      bool? nullable = openFileDialog.ShowDialog();
      bool flag = true;
      if (!(nullable.GetValueOrDefault() == flag & nullable.HasValue))
        return;
      this.textBoxConnections.Text = openFileDialog.FileName;
    }

    private void buttonLoadGraph_Click(object sender, RoutedEventArgs e)
    {
      string text1 = this.textBoxLocations.Text;
      string text2 = this.textBoxConnections.Text;
      if (FileManager.VerifyLocationsFile(text1) && FileManager.VerifyConnectionsFile(text2))
      {
        this.citiesLocations = FileManager.ReadLocations(text1);
        this.citiesConnections = FileManager.ReadConnections(text2);
        this.result = true;
        this.Close();
      }
      else
      {
        this.result = false;
        int num = (int) MessageBox.Show("ERROR! Chosen files are corrupted. Choose another files.", "Path Finder", MessageBoxButton.OK, MessageBoxImage.Hand);
      }
    }

    [DebuggerNonUserCode]
    [GeneratedCode("PresentationBuildTasks", "4.0.0.0")]
    public void InitializeComponent()
    {
      if (this._contentLoaded)
        return;
      this._contentLoaded = true;
      Application.LoadComponent((object) this, new Uri("/TypeDelega;component/source/ui/opengraphwindow.xaml", UriKind.Relative));
    }

    [DebuggerNonUserCode]
    [GeneratedCode("PresentationBuildTasks", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Never)]
    void IComponentConnector.Connect(int connectionId, object target)
    {
      switch (connectionId)
      {
        case 1:
          this.OpenraphWindow = (OpenGraphWindow) target;
          break;
        case 2:
          this.textBoxLocations = (TextBox) target;
          break;
        case 3:
          this.labelLocations = (Label) target;
          break;
        case 4:
          this.labelConnections = (Label) target;
          break;
        case 5:
          this.buttonBrowseLocations = (Button) target;
          this.buttonBrowseLocations.Click += new RoutedEventHandler(this.buttonBrowseLocations_Click);
          break;
        case 6:
          this.buttonCancel = (Button) target;
          this.buttonCancel.Click += new RoutedEventHandler(this.buttonCancel_Click);
          break;
        case 7:
          this.buttonLoadGraph = (Button) target;
          this.buttonLoadGraph.Click += new RoutedEventHandler(this.buttonLoadGraph_Click);
          break;
        case 8:
          this.textBoxConnections = (TextBox) target;
          break;
        case 9:
          this.buttonBrowseConnections = (Button) target;
          this.buttonBrowseConnections.Click += new RoutedEventHandler(this.buttonBrowseConnections_Click);
          break;
        default:
          this._contentLoaded = true;
          break;
      }
    }
  }
}
