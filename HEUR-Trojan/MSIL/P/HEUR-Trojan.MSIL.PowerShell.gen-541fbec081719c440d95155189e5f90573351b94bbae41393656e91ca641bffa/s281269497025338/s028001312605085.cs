// Decompiled with JetBrains decompiler
// Type: s281269497025338.s028001312605085
// Assembly: s778197286190734, Version=16.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: B8DB6840-BCA0-4EC3-93C1-1E026E238560
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan.MSIL.PowerShell.gen-541fbec081719c440d95155189e5f90573351b94bbae41393656e91ca641bffa.exe

using System;
using System.Net;
using System.Threading.Tasks;

namespace s281269497025338
{
  public static class s028001312605085
  {
    public const string s953829488168870 = "data:";

    public static bool s407186376133205(string s665687769269889)
    {
      if (!string.IsNullOrEmpty(s665687769269889))
      {
        if (s665687769269889.EndsWith(".js", StringComparison.OrdinalIgnoreCase))
          return true;
        try
        {
          if (new Uri(s665687769269889).AbsolutePath.EndsWith(".js", StringComparison.OrdinalIgnoreCase))
            return true;
        }
        catch
        {
        }
      }
      return false;
    }

    public static string s177918731804363(string s201301699827609) => s028001312605085.s337054737323945(s201301699827609, "sourceMappingURL");

    public static string s178429709172067(string s788009223956061) => s028001312605085.s337054737323945(s788009223956061, "sourceURL");

    private static string s337054737323945(string s668114694158663, string s126030539625328)
    {
      if (!string.IsNullOrEmpty(s668114694158663))
      {
        int startIndex1 = s668114694158663.LastIndexOf("//# " + s126030539625328 + "=", StringComparison.Ordinal);
        if (startIndex1 <= 0)
          startIndex1 = s668114694158663.LastIndexOf("//@ " + s126030539625328 + "=", StringComparison.Ordinal);
        if (startIndex1 >= 0)
        {
          int startIndex2 = s668114694158663.LastIndexOf('\n', startIndex1);
          if (startIndex2 >= 0 && !string.IsNullOrWhiteSpace(s668114694158663.Substring(startIndex2, startIndex1 - startIndex2)))
            return (string) null;
          int startIndex3 = startIndex1 + s126030539625328.Length + 5;
          int num = s668114694158663.IndexOf("\n", startIndex3);
          int length = (num == -1 ? s668114694158663.Length : num) - startIndex3;
          return s668114694158663.Substring(startIndex3, length).Trim();
        }
      }
      return (string) null;
    }

    public static WebResponse s939883195364330(Uri s593209513880315) => s028001312605085.s650010542011797(s593209513880315);

    private static WebResponse s650010542011797(
      Uri s760617319552203,
      string s601305115753917 = null)
    {
      WebRequest webRequest = WebRequest.Create(s760617319552203);
      if (s601305115753917 != null)
        webRequest.Method = s601305115753917;
      webRequest.UseDefaultCredentials = true;
      NetworkCredential credential1 = CredentialCache.DefaultNetworkCredentials.GetCredential(s760617319552203, "NTLM");
      NetworkCredential credential2 = CredentialCache.DefaultNetworkCredentials.GetCredential(s760617319552203, "Digest");
      webRequest.Credentials = (ICredentials) new CredentialCache()
      {
        {
          s760617319552203,
          "NTLM",
          credential1
        },
        {
          s760617319552203,
          "Digest",
          credential2
        }
      };
      Task task1 = Task.Delay(TimeSpan.FromSeconds(2.0));
      Task<WebResponse> task2 = Task.Factory.FromAsync<WebResponse>(new Func<AsyncCallback, object, IAsyncResult>(webRequest.BeginGetResponse), new Func<IAsyncResult, WebResponse>(webRequest.EndGetResponse), (object) null);
      if (Task.WhenAny(task1, (Task) task2).Result == task2)
        return task2.Result;
      throw new TimeoutException();
    }

    internal static bool s848645088059362(Uri s336541264045981)
    {
      if (s336541264045981.IsFile)
        return System.IO.File.Exists(s336541264045981.LocalPath);
      WebResponse webResponse = (WebResponse) null;
      try
      {
        webResponse = s028001312605085.s650010542011797(s336541264045981, "HEAD");
      }
      catch (AggregateException ex)
      {
        foreach (Exception innerException in ex.InnerExceptions)
        {
          if (innerException is WebException || innerException is TimeoutException)
            return false;
        }
        throw ex;
      }
      catch (TimeoutException ex)
      {
        return false;
      }
      finally
      {
        webResponse?.Dispose();
      }
      return true;
    }

    public static bool s656451194463703(string s977910887145078) => !string.IsNullOrEmpty(s977910887145078) && s977910887145078.StartsWith("data:", StringComparison.OrdinalIgnoreCase);

    internal static Uri s469818331284658(
      string s838777510508132,
      string s634996896387641,
      string s986493546420106)
    {
      if (!string.IsNullOrEmpty(s986493546420106))
      {
        try
        {
          return new Uri(s986493546420106, UriKind.Absolute);
        }
        catch (FormatException ex)
        {
        }
      }
      Uri baseUri = new Uri(s634996896387641 != null ? s634996896387641 : s838777510508132, UriKind.Absolute);
      if (!string.IsNullOrEmpty(s986493546420106))
      {
        try
        {
          return new Uri(baseUri, new Uri(s986493546420106, UriKind.Relative));
        }
        catch (FormatException ex)
        {
        }
      }
      return baseUri;
    }
  }
}
