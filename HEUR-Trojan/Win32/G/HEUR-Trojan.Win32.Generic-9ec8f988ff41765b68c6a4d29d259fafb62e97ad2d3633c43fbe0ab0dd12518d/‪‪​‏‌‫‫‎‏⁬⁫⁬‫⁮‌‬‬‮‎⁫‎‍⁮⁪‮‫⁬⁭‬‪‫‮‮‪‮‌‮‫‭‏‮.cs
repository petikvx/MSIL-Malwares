// Decompiled with JetBrains decompiler
// Type: ‪‪​‏‌‫‫‎‏⁬⁫⁬‫⁮‌‬‬‮‎⁫‎‍⁮⁪‮‫⁬⁭‬‪‫‮‮‪‮‌‮‫‭‏‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using System.IO;

public sealed class \u202A‪​‏‌‫‫‎‏⁬⁫⁬‫⁮‌‬‬‮‎⁫‎‍⁮⁪‮‫⁬⁭‬‪‫‮‮‪‮‌‮‫‭‏‮
{
  private const int \u202B‌⁮‫‭⁯‬‭‮‍⁬⁫⁬‎​‎⁬⁮‭‭⁮​⁫‍‌‬‌⁬​‭⁮‮⁪‫‎‬⁮‫‮‮‮ = 4096;

  private \u202A‪​‏‌‫‫‎‏⁬⁫⁬‫⁮‌‬‬‮‎⁫‎‍⁮⁪‮‫⁬⁭‬‪‫‮‮‪‮‌‮‫‭‏‮()
  {
  }

  public static void \u200C⁯‮‮‌⁪‏‭‮‪⁫‎‫‪‭‪⁫‪​⁭‫‬⁪‬‌⁬‫⁭‍‪⁯​​‪‪‫⁯‎⁭‪‮(Stream _param0)
  {
    byte[] buffer = new byte[4096];
    do
      ;
    while (_param0.Read(buffer, 0, buffer.Length) > 0);
  }

  public static byte[] \u202A⁬‍⁫⁭​⁮⁭‪⁭‎⁬⁬‏‎‮‍⁮‮⁬‏‍⁮‬⁯⁭⁭‎⁭‪‮⁪‮⁪⁭‎‎⁭‬‮‮(Stream _param0)
  {
    MemoryStream memoryStream = new MemoryStream();
    \u202A‪​‏‌‫‫‎‏⁬⁫⁬‫⁮‌‬‬‮‎⁫‎‍⁮⁪‮‫⁬⁭‬‪‫‮‮‪‮‌‮‫‭‏‮.\u202D‬⁫​​‭⁮‫​‬‫‫‪⁬⁬‮⁯⁯⁫‬⁪⁯⁫​‌⁪‮​‌⁪⁫⁭‬‪‍⁮⁭⁫‭⁫‮(_param0, (Stream) memoryStream);
    return memoryStream.ToArray();
  }

  public static byte[] \u200C⁯⁮⁯⁭⁯‭‌⁭⁫‎‬⁬‎‭⁯⁬⁪‮⁪‫​⁪⁪‭‮‮‌‏⁪⁫⁮‪⁭​⁬‏⁯‪‍‮(Stream _param0, int _param1)
  {
    MemoryStream memoryStream = new MemoryStream();
    \u202A‪​‏‌‫‫‎‏⁬⁫⁬‫⁮‌‬‬‮‎⁫‎‍⁮⁪‮‫⁬⁭‬‪‫‮‮‪‮‌‮‫‭‏‮.\u206C​⁮‭⁯‭‏‍⁭⁫‎⁯⁬‬‌⁭‏‍‮‌⁫⁯‭‌⁯⁫⁬‍‍​⁮‭‫⁭‫⁫‬⁪⁮‭‮(_param0, (long) _param1, (Stream) memoryStream);
    return memoryStream.ToArray();
  }

  public static int \u206A⁫⁯⁯⁫‫⁬‬​‬‪‫‮⁯‎‌‭‫‏‭‭‍‍⁭‭⁪‌‭⁬‮‬‮‭‫‍‪​⁪​⁯‮(Stream _param0, byte[] _param1) => \u202A‪​‏‌‫‫‎‏⁬⁫⁬‫⁮‌‬‬‮‎⁫‎‍⁮⁪‮‫⁬⁭‬‪‫‮‮‪‮‌‮‫‭‏‮.\u206A⁫⁯⁯⁫‫⁬‬​‬‪‫‮⁯‎‌‭‫‏‭‭‍‍⁭‭⁪‌‭⁬‮‬‮‭‫‍‪​⁪​⁯‮(_param0, _param1, 0, _param1.Length);

  public static int \u206A⁫⁯⁯⁫‫⁬‬​‬‪‫‮⁯‎‌‭‫‏‭‭‍‍⁭‭⁪‌‭⁬‮‬‮‭‫‍‪​⁪​⁯‮(
    Stream _param0,
    byte[] _param1,
    int _param2,
    int _param3)
  {
    int num1;
    int num2;
    for (num1 = 0; num1 < _param3; num1 += num2)
    {
      num2 = _param0.Read(_param1, _param2 + num1, _param3 - num1);
      if (num2 < 1)
        break;
    }
    return num1;
  }

  public static void \u202D‬⁫​​‭⁮‫​‬‫‫‪⁬⁬‮⁯⁯⁫‬⁪⁯⁫​‌⁪‮​‌⁪⁫⁭‬‪‍⁮⁭⁫‭⁫‮(Stream _param0, Stream _param1) => \u202A‪​‏‌‫‫‎‏⁬⁫⁬‫⁮‌‬‬‮‎⁫‎‍⁮⁪‮‫⁬⁭‬‪‫‮‮‪‮‌‮‫‭‏‮.\u202D‬⁫​​‭⁮‫​‬‫‫‪⁬⁬‮⁯⁯⁫‬⁪⁯⁫​‌⁪‮​‌⁪⁫⁭‬‪‍⁮⁭⁫‭⁫‮(_param0, _param1, 4096);

  public static void \u202D‬⁫​​‭⁮‫​‬‫‫‪⁬⁬‮⁯⁯⁫‬⁪⁯⁫​‌⁪‮​‌⁪⁫⁭‬‪‍⁮⁭⁫‭⁫‮(
    Stream _param0,
    Stream _param1,
    int _param2)
  {
    byte[] buffer = new byte[_param2];
    int count;
    while ((count = _param0.Read(buffer, 0, buffer.Length)) > 0)
      _param1.Write(buffer, 0, count);
  }

  public static long \u206C​⁮‭⁯‭‏‍⁭⁫‎⁯⁬‬‌⁭‏‍‮‌⁫⁯‭‌⁯⁫⁬‍‍​⁮‭‫⁭‫⁫‬⁪⁮‭‮(
    Stream _param0,
    long _param1,
    Stream _param2)
  {
    byte[] buffer = new byte[4096];
    long num = 0;
    int count;
    while ((count = _param0.Read(buffer, 0, buffer.Length)) > 0)
    {
      if (_param1 - num < (long) count)
        throw new \u206F⁯⁫‮‎‪‭‮‬⁯‪‌⁪⁬⁫‭⁮‌‎‎‭​‪‮‎‮⁪‎⁫⁯⁫‬⁮‭‎⁯‏‬‭‮("Data Overflow");
      num += (long) count;
      _param2.Write(buffer, 0, count);
    }
    return num;
  }

  public static void \u200D⁯‎⁪‫⁪‭⁯⁭‏⁪⁯​‭‏‭‌⁬‭‎‎⁪‮‌‮⁫‍⁮‭‌‎⁭⁪‬⁭‬⁭‎⁭‏‮(
    MemoryStream _param0,
    Stream _param1)
  {
    _param0.WriteTo(_param1);
  }

  public static int \u200D⁯‎⁪‫⁪‭⁯⁭‏⁪⁯​‭‏‭‌⁬‭‎‎⁪‮‌‮⁫‍⁮‭‌‎⁭⁪‬⁭‬⁭‎⁭‏‮(
    MemoryStream _param0,
    byte[] _param1,
    int _param2)
  {
    int length = (int) _param0.Length;
    \u202A‪​‏‌‫‫‎‏⁬⁫⁬‫⁮‌‬‬‮‎⁫‎‍⁮⁪‮‫⁬⁭‬‪‫‮‮‪‮‌‮‫‭‏‮.\u200D⁯‎⁪‫⁪‭⁯⁭‏⁪⁯​‭‏‭‌⁬‭‎‎⁪‮‌‮⁫‍⁮‭‌‎⁭⁪‬⁭‬⁭‎⁭‏‮(_param0, (Stream) new MemoryStream(_param1, _param2, length));
    return length;
  }

  public static void \u200D⁭‫⁮‬⁪‎‪⁬⁯​⁯‍​‏‫‭‬⁪⁪⁭‭​‬‏⁯⁪‎‫‭‪‬‮⁬‍⁪⁪‏‭‬‮(Stream _param0, long _param1)
  {
    byte[] buffer = new byte[4096];
    for (; _param1 > 4096L; _param1 -= 4096L)
      _param0.Write(buffer, 0, 4096);
    _param0.Write(buffer, 0, (int) _param1);
  }
}
