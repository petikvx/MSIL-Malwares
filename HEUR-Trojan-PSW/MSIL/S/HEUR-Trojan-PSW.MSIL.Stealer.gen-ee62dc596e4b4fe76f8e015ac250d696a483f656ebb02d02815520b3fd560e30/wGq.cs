// Decompiled with JetBrains decompiler
// Type: wG.wGq
// Assembly: Type, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 716CE3A9-BAD1-470D-912F-B421D403F66E
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-ee62dc596e4b4fe76f8e015ac250d696a483f656ebb02d02815520b3fd560e30.exe

using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;

namespace wG
{
  public class wGq
  {
    private List<oGZ> iRh;
    private List<string> SRO;
    internal static wGq z4h;

    public wGq(string _param1)
    {
      XTG.fvQjdC();
      this.iRh = new List<oGZ>();
      this.SRO = new List<string>();
      // ISSUE: explicit constructor call
      base.\u002Ector();
      this.wRw(_param1);
      this.oRr(wGq.SG0.Class);
      int num1 = 0;
      if (false)
        goto label_3;
label_1:
      switch (num1)
      {
        case 0:
          return;
        default:
          return;
      }
label_3:
      int num2;
      num1 = num2;
      goto label_1;
    }

    [CompilerGenerated]
    [SpecialName]
    public string LRJ() => this.YRE;

    [CompilerGenerated]
    [SpecialName]
    public void wRw(string _param1) => this.YRE = _param1;

    [SpecialName]
    public List<oGZ> SRZ() => this.iRh;

    [SpecialName]
    public List<string> pRc() => this.SRO;

    [CompilerGenerated]
    [SpecialName]
    public wGq.SG0 SRD() => this.iRU;

    [CompilerGenerated]
    [SpecialName]
    public void oRr(wGq.SG0 _param1) => this.iRU = _param1;

    public override string ToString()
    {
      StringBuilder stringBuilder = new StringBuilder();
      wGq.E4Q((object) stringBuilder, (object) ("\tpublic " + (string) wGq.W4c((object) this.SRD().ToString()) + " " + this.LRJ()));
      stringBuilder.AppendLine("\t{");
      foreach (string str in this.SRO)
        stringBuilder.AppendLine("\t\tpublic " + str);
      stringBuilder.AppendLine();
      List<oGZ>.Enumerator enumerator = this.iRh.GetEnumerator();
      int num1 = 1;
      if (wGq.x4A() == null)
        goto label_3;
label_1:
      string str1;
      while (true)
      {
        switch (num1)
        {
          case 1:
            try
            {
              while (enumerator.MoveNext())
              {
                oGZ current = enumerator.Current;
                stringBuilder.AppendLine(current.ToString());
              }
            }
            finally
            {
              enumerator.Dispose();
            }
            stringBuilder.AppendLine("\t}");
            stringBuilder.AppendLine();
            str1 = stringBuilder.ToString();
            int num2;
            num1 = wGq.t4I() ? 0 : num2;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str1;
label_3:
      num1 = 1;
      goto label_1;
    }

    internal static bool t4I() => wGq.z4h == null;

    internal static wGq x4A() => wGq.z4h;

    internal static object W4c([In] object obj0) => (object) ((string) obj0).ToLower();

    internal static object E4Q([In] object obj0, [In] object obj1) => (object) ((StringBuilder) obj0).AppendLine((string) obj1);

    public enum SG0
    {
      Class,
      Struct,
    }
  }
}
