// Decompiled with JetBrains decompiler
// Type: DataAccessFramework.Querying.LessThanClause
// Assembly: PreAllocatedOverlap, Version=1.0.2.1, Culture=neutral, PublicKeyToken=null
// MVID: B92242D0-7BA9-445E-B92A-42A0AEAC877F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Email-Worm.MSIL.LovGate.gen-514cb032bdc969f3ffe7822a716534d8e477f161e0d12f70225b72524e53bc11.exe

using System.Runtime.InteropServices;
using System.Text;

namespace DataAccessFramework.Querying
{
  public class LessThanClause : WherePart
  {
    private readonly WherePart _left;
    private readonly WherePart _right;

    public LessThanClause(WherePart left, WherePart right)
    {
label_1:
      int num1 = 158338534;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 750360271)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            this._left = left;
            num1 = (int) num2 * -267485477 ^ -779855388;
            continue;
          case 2:
            num1 = (int) num2 * 1893186303 ^ -561942391;
            continue;
          case 4:
            num1 = (int) num2 * -1026438778 ^ -345692338;
            continue;
          default:
            goto label_6;
        }
      }
label_6:
      this._right = right;
    }

    internal override void BuildSql(BuildSqlContext sqlContext)
    {
label_1:
      int num1 = 1146330790;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2098602277)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            this._left.BuildSql(sqlContext);
            num1 = (int) num2 * -1159184064 ^ -340793641;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      LessThanClause.\u202D​⁮⁫⁫‎⁯‫‭⁫‬⁮⁪‬‍‏⁮⁮⁪⁭‌⁬‏‭⁮⁯‪‏‪‬‏‮⁯‭⁮‫‫‏⁯‌‮(sqlContext.Builder, \u003CModule\u003E.\u200B‫‫‫⁯⁫‫‫⁬‪‪​‫⁮⁪⁪⁭‬‮⁬​‪‍‎‏⁫‬⁫‫‬‬⁫‭‍‏⁯‪⁪‫‮‮<string>(2208006719U));
      this._right.BuildSql(sqlContext);
    }

    static StringBuilder \u202D​⁮⁫⁫‎⁯‫‭⁫‬⁮⁪‬‍‏⁮⁮⁪⁭‌⁬‏‭⁮⁯‪‏‪‬‏‮⁯‭⁮‫‫‏⁯‌‮(
      [In] StringBuilder obj0,
      [In] string obj1)
    {
      return obj0.Append(obj1);
    }
  }
}
