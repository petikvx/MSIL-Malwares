// Decompiled with JetBrains decompiler
// Type: Stub.My.MySettings
// Assembly: FileZilla Client, Version=3.5.3.0, Culture=neutral, PublicKeyToken=null
// MVID: B794D7B0-77D8-4DB9-A117-32697E11C530
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan.Win32.Llac.coih-d4a46fe8e815224c23e37613278718e055c3b6df9e98f5bf6e3c86f949db54e3.exe

using Microsoft.VisualBasic.ApplicationServices;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Configuration;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Threading;

namespace Stub.My
{
  [CompilerGenerated]
  [GeneratedCode("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "10.0.0.0")]
  [EditorBrowsable(EditorBrowsableState.Advanced)]
  internal sealed class MySettings : ApplicationSettingsBase
  {
    private static MySettings \u0001 = (MySettings) SettingsBase.Synchronized((SettingsBase) new MySettings());
    private static bool \u0001;
    private static object \u0001 = RuntimeHelpers.GetObjectValue(new object());

    [MethodImpl(MethodImplOptions.NoInlining)]
    static MySettings()
    {
    }

    [DebuggerNonUserCode]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public MySettings()
    {
    }

    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [DebuggerNonUserCode]
    [MethodImpl(MethodImplOptions.NoInlining)]
    private static void \u0001(object _param0, EventArgs _param1)
    {
      if (!\u0004.\u0001.c7b6ebc5aa03f93f0829a1b964abc177d.SaveMySettingsOnExit)
        return;
label_1:
      switch (1)
      {
        case 0:
          goto label_1;
        default:
          if (false)
          {
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (MySettings.\u0001);
          }
          \u0001.\u0004.EbKpyL60v.Save();
          break;
      }
    }

    public static MySettings Default
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get
      {
        if (!MySettings.\u0001)
        {
label_1:
          switch (1)
          {
            case 0:
              goto label_1;
            default:
              if (false)
              {
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MySettings.\u0001);
              }
              object Expression = MySettings.\u0001;
              ObjectFlowControl.CheckForSyncLockOnValueType(Expression);
              bool lockTaken = false;
              try
              {
                Monitor.Enter(Expression, ref lockTaken);
                if (!MySettings.\u0001)
                {
                  \u0004.\u0001.c7b6ebc5aa03f93f0829a1b964abc177d.Shutdown += (ShutdownEventHandler) ((_param0, _param1) =>
                  {
                    if (!\u0004.\u0001.c7b6ebc5aa03f93f0829a1b964abc177d.SaveMySettingsOnExit)
                      return;
label_1:
                    switch (1)
                    {
                      case 0:
                        goto label_1;
                      default:
                        if (false)
                        {
                          RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MySettings.\u0001);
                        }
                        \u0001.\u0004.EbKpyL60v.Save();
                        break;
                    }
                  });
                  MySettings.\u0001 = true;
                  break;
                }
                break;
              }
              finally
              {
                if (lockTaken)
                {
label_8:
                  switch (1)
                  {
                    case 0:
                      goto label_8;
                    default:
                      Monitor.Exit(Expression);
                      break;
                  }
                }
              }
          }
        }
        MySettings mySettings = MySettings.\u0001;
        return mySettings;
      }
    }
  }
}
