// Decompiled with JetBrains decompiler
// Type: 044201292638.Properties.512125936281
// Assembly: 044201292638, Version=5.6.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35
// MVID: 5F642552-7ED7-4776-987B-53B72981CCE1
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Exploit.MSIL.Shellcode.gen-faabdbc465517c5e1ee24d7762bb002ee94c4be547badebd74bcaba4551155e8.exe

using \u003044201292638.Properties;
using \u003688249418256;
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Configuration;
using System.Data.Entity.Infrastructure.Annotations;
using System.Data.Entity.Migrations;
using System.Data.Entity.Migrations.Builders;
using System.Data.Entity.Migrations.Model;
using System.Resources;
using System.Runtime.CompilerServices;

namespace \u003044201292638.Properties
{
  [CompilerGenerated]
  [GeneratedCode("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "11.0.0.0")]
  internal sealed class \u003512125936281 : ApplicationSettingsBase
  {
    private readonly ResourceManager \u003945767824744;

    public static \u003512125936281 \u003929404800500
    {
      [SpecialName] get
      {
        \u003512125936281 obj = \u003140473662132.\u003662179336457;
        return obj;
      }
    }

    static \u003512125936281() => \u003140473662132.\u003662179336457 = (\u003512125936281) SettingsBase.Synchronized((SettingsBase) new \u003512125936281());

    public virtual void \u003933129653002()
    {
      ((DbMigration) this).AddColumn("dbo.Subscriptions", "Name", (Func<ColumnBuilder, ColumnModel>) (_param1 => _param1.String(new bool?(), new int?(), new bool?(), new bool?(), (string) null, (string) null, (string) null, (string) null, (IDictionary<string, AnnotationValues>) null)), (object) null);
      ((DbMigration) this).AddColumn("dbo.Subscriptions", "IsActive", (Func<ColumnBuilder, ColumnModel>) (_param1 => _param1.Boolean(new bool?(false), new bool?(), (string) null, (string) null, (string) null, (IDictionary<string, AnnotationValues>) null)), (object) null);
    }
  }
}
