// Decompiled with JetBrains decompiler
// Type: ‫‎⁮‏⁫⁭⁮‪‭​‫⁬⁬⁭‮‮‫‏​‭⁫⁭‮⁫‬⁫‎⁯‪⁫‮‮⁮​‎‏‏‭⁫‬‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using Org.BouncyCastle.Asn1;
using Org.BouncyCastle.X509.Store;
using System;
using System.Collections;
using System.IO;

public class \u202B‎⁮‏⁫⁭⁮‪‭​‫⁬⁬⁭‮‮‫‏​‭⁫⁭‮⁫‬⁫‎⁯‪⁫‮‮⁮​‎‏‏‭⁫‬‮
{
  private static readonly \u202E‍⁯‫⁭⁬‪‌‎⁮‏‌⁮‭⁬​‌‭⁬‭‫⁪⁪⁪​​‌‍‍‪‍‏⁪‭​‭‭‮‪‍‮ \u202E​‪⁮‬‮​‪⁭​⁯⁫‬⁬⁪‌⁮‮‮‍⁪‍⁭‫‬⁬‎‎⁫⁯‎‌⁬‬‬⁯‌⁯‭⁫‮ = new \u202E‍⁯‫⁭⁬‪‌‎⁮‏‌⁮‭⁬​‌‭⁬‭‫⁪⁪⁪​​‌‍‍‪‍‏⁪‭​‭‭‮‪‍‮();
  internal static readonly string \u202D‍⁮‬‪​‏‎⁫⁭⁪‪⁪‭⁮⁮‍⁭‍‏‪​‭‍⁪⁫⁬‪‬‪⁭‌​‎‭‬​⁮⁭‮ = "2.5.29.32.0";
  internal static readonly int \u200B‍‍‪⁭‪‬‫‬‍⁬⁯‭‪⁫‌‌‌‎‎‮‎‍‮‏⁪⁪‫‫‍⁯⁫‪‌⁮‌‌⁪‏‭‮ = 5;
  internal static readonly int \u200E⁭⁪‎⁮⁮‎⁪‎‌⁯‪‬‬⁭‭‫‭‬⁫‮⁯⁮‭⁬‫⁯⁪‍‪‭‮‫‍⁫‬‫‍‌‪‮ = 6;
  internal static readonly string[] \u206C‫⁬‬⁫⁭‮‌‬⁬​‍‏⁮‫‭⁫⁫⁮‍⁬⁭⁫‪⁯‍‍⁭⁬⁭‏⁪⁪‍⁫​‫⁪‍‫‮ = new string[11]
  {
    "unspecified",
    "keyCompromise",
    "cACompromise",
    "affiliationChanged",
    "superseded",
    "cessationOfOperation",
    "certificateHold",
    "unknown",
    "removeFromCRL",
    "privilegeWithdrawn",
    "aACompromise"
  };

  internal static void \u206F​‎‪‪‫‏​‬‌⁪​⁫⁬‎‌‬⁪‌‎⁮⁮⁮‫‫⁪‭⁫‭‍‮​⁮‪‪⁪‫⁭‫‏‮(
    \u202B‌‌‪⁮‬⁫⁮‮⁯‎‌‌‍⁪‏‎‪‬⁪⁭⁪⁪⁭‮‫‮⁬‌⁭‭⁫‎⁮⁬⁫‪‪⁪⁭‮ _param0,
    object _param1,
    \u200D‍​⁬‎‮⁮⁭⁮‌‎‭‮‎‍⁪⁬⁬‍⁬‎​⁯‭⁮‫‎‪⁭⁫‌⁮⁬‭‪‪‎⁪⁯⁪‮ _param2)
  {
    // ISSUE: unable to decompile the method.
  }

  internal static void \u206A‬‪‮‬⁭‎⁭‪⁭‍‍⁯‬‎​‍‍‌‌‌⁮‬⁪⁫⁬⁮‭‬‬‎‬‭‏‪⁬⁪‭‎⁮‮(
    \u206F⁬⁫⁪⁪⁪‬​‬⁬‮⁭⁯‪‍‌⁬⁬‍‫‬‏⁯‬​‌‎⁮​‫⁪‌‎‍‫‏⁭⁪‍⁯‮ _param0,
    int _param1,
    \u206B⁪‌⁬‮⁫‍‬⁬‏‪⁭‪⁬‬⁮‎‏‬⁫‌⁭‭‌⁯⁪‏‏⁭⁫⁭⁪‪‪‪‬‪⁭‪⁭‮ _param2)
  {
    IList list = _param0.\u202B‪‏⁫‮⁬⁪⁪‪⁬‍‪‏⁭‬‏‍‪‎‍‫‪⁭‌‎‍⁯‫‌‬‫‌‍⁯‮‪⁯⁬⁫⁪‮;
    \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ obj1 = (\u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮) list[_param1];
    int count = list.Count;
    int num = count - _param1;
    if (\u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u202C‬​⁪‭⁬⁮⁪‬‍‎‎⁯‏‮‪⁬‫⁪‪⁬⁫‍‍‎‭‭⁭‭‎‮‬⁪‮⁫‭⁯‏⁬‌‮(obj1) && num < count)
      return;
    \u202C​‭‬‌‏‎‬‎⁭‬⁯‪‮​​‏‎‍‌⁬⁭‎‍⁬⁫‎⁮⁮‮⁫⁬‭‍⁫⁭⁮‬⁮⁭‮ obj2 = obj1.\u200E‌‪⁫‎⁮‭⁯⁬⁭‪⁬‎‪⁯⁪⁭‫‪‎‍⁯‏‏⁭‍‌​‬⁯‏‌⁯​​‌‎⁯⁮⁫‮;
    \u206A‬⁪⁯​⁯‍⁭⁯‮‎‮⁫​‎‬‌‌‏⁪‍⁫‏​⁫​‪​⁯⁫⁮⁯‮​⁬‎‫‌‌⁯‮ obj3;
    try
    {
      obj3 = \u206A‬⁪⁯​⁯‍⁭⁯‮‎‮⁫​‎‬‌‌‏⁪‍⁫‏​⁫​‪​⁯⁫⁮⁯‮​⁬‎‫‌‌⁯‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) obj2.GetEncoded());
    }
    catch (Exception ex)
    {
      throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Exception extracting subject name when checking subtrees.", ex, _param0, _param1);
    }
    try
    {
      _param2.\u202D⁯‏‭‏‌⁯‭‫‭‎⁮⁭‍‫‪⁬⁪‫‬⁮‪⁬‎​‍‏‎⁭‬‌‫‮‎‏⁭‬​⁭‮‮(obj3);
      _param2.\u200B​‭‫⁪⁭‏⁭⁯‌‬⁯‌‬‍‌⁪‏⁭‮‍‮‌‭⁬‫‭‍‫‬‭⁯⁫‬⁪⁯‮‍⁬‏‮(obj3);
    }
    catch (\u206E⁯​⁬‬⁪‭‫‫​‪‪‌‬​​⁬⁬‬‭‍‬‪⁮⁭‬‌‌⁬‌⁮⁯‭‭‌⁫​‪‪⁭‮ ex)
    {
      throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Subtree check for certificate subject failed.", (Exception) ex, _param0, _param1);
    }
    \u206F⁭‌‫⁬‎‎‏​‎⁯‎‬‎⁬‫‫‭‫⁬‮‌⁭‎⁪​‍‮⁮⁭‍‍⁬​⁯⁭‪⁪‬‌‮ obj4;
    try
    {
      obj4 = \u206F⁭‌‫⁬‎‎‏​‎⁯‎‬‎⁬‫‫‭‫⁬‮‌⁭‎⁪​‍‮⁮⁭‍‍⁬​⁯⁭‪⁪‬‌‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200D⁭‫⁪‬⁪‬‫‬‏‮‏⁪‮‍⁫​‪‬‎⁪⁪‌‭⁫​⁯⁪⁬‫⁯​‌‎‪‌⁪⁫⁮‫‮((\u200C‮⁭‍⁭⁬⁯⁯‬⁮‏⁭‬⁬⁫‍‮‪‫⁪⁬‎‍‬‭​‪⁫‪‭‫‍‏‫‭⁬‎‮​⁪‮) obj1, \u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u206E‮‏⁫‪‏​‪⁭‌⁯⁯‮‫‏‌⁮​‪⁪‬‌⁪‪‍‬‏‍⁯‭⁮‎⁯‪⁮‌⁫‮⁭⁭‮));
    }
    catch (Exception ex)
    {
      throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Subject alternative name extension could not be decoded.", ex, _param0, _param1);
    }
    foreach (string str in (IEnumerable) \u202C​‭‬‌‏‎‬‎⁭‬⁯‪‮​​‏‎‍‌⁬⁭‎‍⁬⁫‎⁮⁮‮⁫⁬‭‍⁫⁭⁮‬⁮⁭‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) obj3).\u202E‮‭‌‌​‪⁮‬‭⁬⁮‫⁫‎‏‪​‎⁮‎⁯​‎‪⁫‮⁯‫‍‍⁮​‎​‮‭⁫‫‮‮(\u202C​‭‬‌‏‎‬‎⁭‬⁯‪‮​​‏‎‍‌⁬⁭‎‍⁬⁫‎⁮⁮‮⁫⁬‭‍⁫⁭⁮‬⁮⁭‮.\u202C‌⁯⁫​⁯‮​⁯‎⁮‭‬⁯‏‪⁫‫⁮⁮‌⁮‫‫‫⁯‎⁮⁬⁯⁭‫⁭⁭‭‏⁪​‍‪‮))
    {
      \u200E‍⁬⁪‮⁫⁬‬⁬⁯‏‎⁬‏⁪‪⁪⁪‮⁬‍‎‎‌‭‮‭⁭‎‫​‎⁯⁬​‭⁮‏‎‏‮ obj5 = new \u200E‍⁬⁪‮⁫⁬‬⁬⁯‏‎⁬‏⁪‪⁪⁪‮⁬‍‎‎‌‭‮‭⁭‎‫​‎⁯⁬​‭⁮‏‎‏‮(1, str);
      try
      {
        _param2.\u200E‪‍‫‎‏‬‌‏‎​​‬‌⁮‍​⁫‌⁬‏‌‏‪‎‍⁯‮⁫‭​⁪⁮⁯⁪​⁭⁪⁯‌‮(obj5);
        _param2.\u202D⁫‎⁫‌‎⁯⁫‬⁯⁮‬‮‌‏‪‍​⁭‭‎‎⁫⁯⁮⁫⁪⁭⁬‮⁬⁪⁫‍‭‬⁭⁯‫‏‮(obj5);
      }
      catch (\u206E⁯​⁬‬⁪‭‫‫​‪‪‌‬​​⁬⁬‬‭‍‬‪⁮⁭‬‌‌⁬‌⁮⁯‭‭‌⁫​‪‪⁭‮ ex)
      {
        throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Subtree check for certificate subject alternative email failed.", (Exception) ex, _param0, _param1);
      }
    }
    if (obj4 == null)
      return;
    \u200E‍⁬⁪‮⁫⁬‬⁬⁯‏‎⁬‏⁪‪⁪⁪‮⁬‍‎‎‌‭‮‭⁭‎‫​‎⁯⁬​‭⁮‏‎‏‮[] objArray;
    try
    {
      objArray = obj4.\u206B‌⁫‏⁬‮⁪‪‬‎⁮​⁪⁮‮​⁪‬‫‍⁪⁯⁮‎‌‭‫‫⁯‏⁭‭⁬⁬‬‍⁯‭‬‭‮();
    }
    catch (Exception ex)
    {
      throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Subject alternative name contents could not be decoded.", ex, _param0, _param1);
    }
    foreach (\u200E‍⁬⁪‮⁫⁬‬⁬⁯‏‎⁬‏⁪‪⁪⁪‮⁬‍‎‎‌‭‮‭⁭‎‫​‎⁯⁬​‭⁮‏‎‏‮ obj6 in objArray)
    {
      try
      {
        _param2.\u200E‪‍‫‎‏‬‌‏‎​​‬‌⁮‍​⁫‌⁬‏‌‏‪‎‍⁯‮⁫‭​⁪⁮⁯⁪​⁭⁪⁯‌‮(obj6);
        _param2.\u202D⁫‎⁫‌‎⁯⁫‬⁯⁮‬‮‌‏‪‍​⁭‭‎‎⁫⁯⁮⁫⁪⁭⁬‮⁬⁪⁫‍‭‬⁭⁯‫‏‮(obj6);
      }
      catch (\u206E⁯​⁬‬⁪‭‫‫​‪‪‌‬​​⁬⁬‬‭‍‬‪⁮⁭‬‌‌⁬‌⁮⁯‭‭‌⁫​‪‪⁭‮ ex)
      {
        throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Subtree check for certificate subject alternative name failed.", (Exception) ex, _param0, _param1);
      }
    }
  }

  internal static void \u206E⁪⁬‪‫‭‮‬‎‌⁭‮‫⁭‎⁭‭⁯‫⁬⁯‮⁮⁮‫‭⁬​⁫⁭‫‏⁬‮⁪⁯⁫⁭‮⁭‮(
    \u206F⁬⁫⁪⁪⁪‬​‬⁬‮⁭⁯‪‍‌⁬⁬‍‫‬‏⁯‬​‌‎⁮​‫⁪‌‎‍‫‏⁭⁪‍⁯‮ _param0,
    int _param1)
  {
    \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ obj1 = (\u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮) _param0.\u202B‪‏⁫‮⁬⁪⁪‪⁬‍‪‏⁭‬‏‍‪‎‍‫‪⁭‌‎‍⁯‫‌‬‫‌‍⁯‮‪⁯⁬⁫⁪‮[_param1];
    \u206A‬⁪⁯​⁯‍⁭⁯‮‎‮⁫​‎‬‌‌‏⁪‍⁫‏​⁫​‪​⁯⁫⁮⁯‮​⁬‎‫‌‌⁯‮ obj2;
    try
    {
      obj2 = \u206A‬⁪⁯​⁯‍⁭⁯‮‎‮⁫​‎‬‌‌‏⁪‍⁫‏​⁫​‪​⁯⁫⁮⁯‮​⁬‎‫‌‌⁯‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200D⁭‫⁪‬⁪‬‫‬‏‮‏⁪‮‍⁫​‪‬‎⁪⁪‌‭⁫​⁯⁪⁬‫⁯​‌‎‪‌⁪⁫⁮‫‮((\u200C‮⁭‍⁭⁬⁯⁯‬⁮‏⁭‬⁬⁫‍‮‪‫⁪⁬‎‍‬‭​‪⁫‪‭‫‍‏‫‭⁬‎‮​⁪‮) obj1, \u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u206A⁭⁭⁯‌‌‍‮⁪⁯‮‍⁫‌‫⁫‬⁫‌⁯⁭‎⁮⁫‬‎‭⁬‬‏‭‫‍⁭‭‭‫⁪‌‬‮));
    }
    catch (Exception ex)
    {
      throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Policy mappings extension could not be decoded.", ex, _param0, _param1);
    }
    if (obj2 == null)
      return;
    \u206A‬⁪⁯​⁯‍⁭⁯‮‎‮⁫​‎‬‌‌‏⁪‍⁫‏​⁫​‪​⁯⁫⁮⁯‮​⁬‎‫‌‌⁯‮ obj3 = obj2;
    for (int index = 0; index < obj3.\u200E‪‌‮‪‏⁬‮‫​‪⁪‎⁫‏‭⁭⁭‍⁮‌‬⁪‪⁪‪‎⁭⁯⁭‌‭‪⁪‬‮‬‎​‬‮; ++index)
    {
      \u202D‎‮‏‬⁮‎⁭⁬⁪‪⁬⁬‍⁭‎‎‫​‌⁪⁯⁪‮‪‏⁪⁪‫⁮‍​⁭⁪⁭⁯‏‍‭⁫‮ obj4;
      \u202D‎‮‏‬⁮‎⁭⁬⁪‪⁬⁬‍⁭‎‎‫​‌⁪⁯⁪‮‪‏⁪⁪‫⁮‍​⁭⁪⁭⁯‏‍‭⁫‮ obj5;
      try
      {
        \u206A‬⁪⁯​⁯‍⁭⁯‮‎‮⁫​‎‬‌‌‏⁪‍⁫‏​⁫​‪​⁯⁫⁮⁯‮​⁬‎‫‌‌⁯‮ obj6 = \u206A‬⁪⁯​⁯‍⁭⁯‮‎‮⁫​‎‬‌‌‏⁪‍⁫‏​⁫​‪​⁯⁫⁮⁯‮​⁬‎‫‌‌⁯‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) obj3.\u200E‪⁪‮⁮⁭⁯‏​‬⁫⁯‍‭‪‫⁫‏‌⁪⁬‪‫⁯‎⁪‌⁫‭⁫‫⁫‌​‭⁯‫​⁯‭‮(index));
        obj4 = \u202D‎‮‏‬⁮‎⁭⁬⁪‪⁬⁬‍⁭‎‎‫​‌⁪⁯⁪‮‪‏⁪⁪‫⁮‍​⁭⁪⁭⁯‏‍‭⁫‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) obj6.\u200E‪⁪‮⁮⁭⁯‏​‬⁫⁯‍‭‪‫⁫‏‌⁪⁬‪‫⁯‎⁪‌⁫‭⁫‫⁫‌​‭⁯‫​⁯‭‮(0));
        obj5 = \u202D‎‮‏‬⁮‎⁭⁬⁪‪⁬⁬‍⁭‎‎‫​‌⁪⁯⁪‮‪‏⁪⁪‫⁮‍​⁭⁪⁭⁯‏‍‭⁫‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) obj6.\u200E‪⁪‮⁮⁭⁯‏​‬⁫⁯‍‭‪‫⁫‏‌⁪⁬‪‫⁯‎⁪‌⁫‭⁫‫⁫‌​‭⁯‫​⁯‭‮(1));
      }
      catch (Exception ex)
      {
        throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Policy mappings extension contents could not be decoded.", ex, _param0, _param1);
      }
      if (\u202B‎⁮‏⁫⁭⁮‪‭​‫⁬⁬⁭‮‮‫‏​‭⁫⁭‮⁫‬⁫‎⁯‪⁫‮‮⁮​‎‏‏‭⁫‬‮.\u202D‍⁮‬‪​‏‎⁫⁭⁪‪⁪‭⁮⁮‍⁭‍‏‪​‭‍⁪⁫⁬‪‬‪⁭‌​‎‭‬​⁮⁭‮.Equals(obj4.\u202D⁯​‪‮⁫‭⁮‭⁭⁬⁫‭​‪‪‮‍‫‬⁮‬‮‮‏‫‍‏​‪​⁯⁪​‍‭‮‏‫‪‮))
        throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("IssuerDomainPolicy is anyPolicy", (Exception) null, _param0, _param1);
      if (\u202B‎⁮‏⁫⁭⁮‪‭​‫⁬⁬⁭‮‮‫‏​‭⁫⁭‮⁫‬⁫‎⁯‪⁫‮‮⁮​‎‏‏‭⁫‬‮.\u202D‍⁮‬‪​‏‎⁫⁭⁪‪⁪‭⁮⁮‍⁭‍‏‪​‭‍⁪⁫⁬‪‬‪⁭‌​‎‭‬​⁮⁭‮.Equals(obj5.\u202D⁯​‪‮⁫‭⁮‭⁭⁬⁫‭​‪‪‮‍‫‬⁮‬‮‮‏‫‍‏​‪​⁯⁪​‍‭‮‏‫‪‮))
        throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("SubjectDomainPolicy is anyPolicy,", (Exception) null, _param0, _param1);
    }
  }

  internal static \u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ \u202E‪​‮‫‏⁮‭‪‭⁫⁯‌‏⁪⁫⁪‍‎⁮‌⁬⁪‏​⁯⁭‌⁫‫⁫⁮‮‏⁮⁬‏⁪‎‏‮(
    \u206F⁬⁫⁪⁪⁪‬​‬⁬‮⁭⁯‪‍‌⁬⁬‍‫‬‏⁯‬​‌‎⁮​‫⁪‌‎‍‫‏⁭⁪‍⁯‮ _param0,
    int _param1,
    \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ _param2,
    \u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ _param3,
    IList[] _param4,
    int _param5)
  {
    IList list1 = _param0.\u202B‪‏⁫‮⁬⁪⁪‪⁬‍‪‏⁭‬‏‍‪‎‍‫‪⁭‌‎‍⁯‫‌‬‫‌‍⁯‮‪⁯⁬⁫⁪‮;
    \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ obj1 = (\u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮) list1[_param1];
    int count = list1.Count;
    int index1 = count - _param1;
    \u206A‬⁪⁯​⁯‍⁭⁯‮‎‮⁫​‎‬‌‌‏⁪‍⁫‏​⁫​‪​⁯⁫⁮⁯‮​⁬‎‫‌‌⁯‮ obj2;
    try
    {
      obj2 = \u206A‬⁪⁯​⁯‍⁭⁯‮‎‮⁫​‎‬‌‌‏⁪‍⁫‏​⁫​‪​⁯⁫⁮⁯‮​⁬‎‫‌‌⁯‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200D⁭‫⁪‬⁪‬‫‬‏‮‏⁪‮‍⁫​‪‬‎⁪⁪‌‭⁫​⁯⁪⁬‫⁯​‌‎‪‌⁪⁫⁮‫‮((\u200C‮⁭‍⁭⁬⁯⁯‬⁮‏⁭‬⁬⁫‍‮‪‫⁪⁬‎‍‬‭​‪⁫‪‭‫‍‏‫‭⁬‎‮​⁪‮) obj1, \u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u200C​⁬‏⁮‎‎‬‏⁫‏‎⁯⁮‬‪‪⁭‭⁪‬⁮‭⁪⁬⁯‎⁪‭⁪‬⁬⁯‍‎⁮⁮‌‍‮‮));
    }
    catch (Exception ex)
    {
      throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Could not read certificate policies extension from certificate.", ex, _param0, _param1);
    }
    if (obj2 == null || _param3 == null)
      return (\u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮) null;
    \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ obj3 = (\u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮) new \u202B​⁮⁭⁯‎⁫⁮⁪‭‭⁭⁮‍‎‌⁯‫⁫‎​⁫​‪‬‬‍⁫⁬‎‫⁪‏‌⁪​‪‎‮⁮‮();
    foreach (Asn1Encodable asn1Encodable in obj2)
    {
      \u202B⁬​⁬‭‮⁮⁭‌‪⁮‍⁮⁮‎‭⁪⁮‭⁮‍⁮⁬‎⁮⁭‪⁯‮‮‭‫‬⁯⁯⁭‌‬‭‬‮ obj4 = \u202B⁬​⁬‭‮⁮⁭‌‪⁮‍⁮⁮‎‭⁪⁮‭⁮‍⁮⁬‎⁮⁭‪⁯‮‮‭‫‬⁯⁯⁭‌‬‭‬‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) asn1Encodable.ToAsn1Object());
      \u202D‎‮‏‬⁮‎⁭⁬⁪‪⁬⁬‍⁭‎‎‫​‌⁪⁯⁪‮‪‏⁪⁪‫⁮‍​⁭⁪⁭⁯‏‍‭⁫‮ obj5 = obj4.\u206C⁭⁫‌⁯⁫‪⁬‭⁪‭‏‌‪⁯‮‫‍⁮‮⁬⁫‌‬⁬‫‏‏‏‪⁫‬⁯‫‮‬⁭⁭⁬⁫‮;
      obj3.\u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮((object) obj5.\u202D⁯​‪‮⁫‭⁮‭⁭⁬⁫‭​‪‪‮‍‫‬⁮‬‮‮‏‫‍‏​‪​⁯⁪​‍‭‮‏‫‪‮);
      if (!\u202B‎⁮‏⁫⁭⁮‪‭​‫⁬⁬⁭‮‮‫‏​‭⁫⁭‮⁫‬⁫‎⁯‪⁫‮‮⁮​‎‏‏‭⁫‬‮.\u202D‍⁮‬‪​‏‎⁫⁭⁪‪⁪‭⁮⁮‍⁭‍‏‪​‭‍⁪⁫⁬‪‬‪⁭‌​‎‭‬​⁮⁭‮.Equals(obj5.\u202D⁯​‪‮⁫‭⁮‭⁭⁬⁫‭​‪‪‮‍‫‬⁮‬‮‮‏‫‍‏​‪​⁯⁪​‍‭‮‏‫‪‮))
      {
        \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ obj6;
        try
        {
          obj6 = \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u206E‌​‬⁯‪‎‍​⁫‏⁮‮‍‬⁭⁪⁫⁯⁯​⁮‮‭⁮⁯‫⁯‫​⁪‪⁪​‫‪⁯⁬⁯‭‮(obj4.\u206F⁮⁬‭‬‭‌‌⁬⁬⁪⁮⁬‍⁫‏⁫‫⁯⁪‫‮‌‭​​⁬‭‌⁯‮‏‮‫⁭⁭‎⁫​⁫‮);
        }
        catch (\u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮ ex)
        {
          throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Policy qualifier info set could not be build.", (Exception) ex, _param0, _param1);
        }
        if (!\u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200D‭‍⁬‌‌⁫⁪⁮⁫⁪⁭⁭‌⁭‍​‎⁮⁫⁬‬⁭‭⁬‭‍‭‫‏‏‪‬‪​⁪‌⁭‎⁪‮(index1, _param4, obj5, obj6))
          \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200B‌⁫‌‬‍‍‮‫‮⁭⁪‮⁭‮⁬‌⁪‮‏‎⁬‪⁯⁭⁫⁮‌⁮‍‮⁪⁭‌⁮‎‪‮⁫⁪‮(index1, _param4, obj5, obj6);
      }
    }
    if (_param2.\u202E‮‬⁭⁮⁫‮‮⁭‎⁭⁭‭‬‌​‫⁯‍‭‌‍‫‪‍‏‮‌‏⁭‍⁫‎⁬‮‌⁫⁮​‌‮ || _param2.\u200E‪‏⁭‍⁭⁪‫‍‏‍‮⁮‬‌⁬⁫⁪‮‫⁯‮‮‭⁬⁯‮‭​⁭‫‪‮‫‎⁬⁮⁭⁭‍‮((object) \u202B‎⁮‏⁫⁭⁮‪‭​‫⁬⁬⁭‮‮‫‏​‭⁫⁭‮⁫‬⁫‎⁯‪⁫‮‮⁮​‎‏‏‭⁫‬‮.\u202D‍⁮‬‪​‏‎⁫⁭⁪‪⁪‭⁮⁮‍⁭‍‏‪​‭‍⁪⁫⁬‪‬‪⁭‌​‎‭‬​⁮⁭‮))
    {
      _param2.\u206C‍‫‎⁭⁫‎‫​‬⁮‫‌⁭‎⁪⁯⁫‮​‬⁬‮⁮‬‏​‭‍​⁬‌‌⁯⁬⁮‮​‫‫‮();
      _param2.\u206C‮‍‫‌⁫⁮⁯⁫⁪⁫‮⁭‎‮​‬⁯‬‮⁯⁫⁪‏‍‬‪‎⁫‭‫‎⁮⁮‮‌‎‮‌⁯‮((IEnumerable) obj3);
    }
    else
    {
      \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ obj7 = (\u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮) new \u202B​⁮⁭⁯‎⁫⁮⁪‭‭⁭⁮‍‎‌⁯‫⁫‎​⁫​‪‬‬‍⁫⁬‎‫⁪‏‌⁪​‪‎‮⁮‮();
      foreach (object obj8 in (IEnumerable) _param2)
      {
        if (obj3.\u200E‪‏⁭‍⁭⁪‫‍‏‍‮⁮‬‌⁬⁫⁪‮‫⁯‮‮‭⁬⁯‮‭​⁭‫‪‮‫‎⁬⁮⁭⁭‍‮(obj8))
          obj7.\u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮(obj8);
      }
      _param2.\u206C‍‫‎⁭⁫‎‫​‬⁮‫‌⁭‎⁪⁯⁫‮​‬⁬‮⁮‬‏​‭‍​⁬‌‌⁯⁬⁮‮​‫‫‮();
      _param2.\u206C‮‍‫‌⁫⁮⁯⁫⁪⁫‮⁭‎‮​‬⁯‬‮⁯⁫⁪‏‍‬‪‎⁫‭‫‎⁮⁮‮‌‎‮‌⁯‮((IEnumerable) obj7);
    }
    if (_param5 > 0 || index1 < count && \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u202C‬​⁪‭⁬⁮⁪‬‍‎‎⁯‏‮‪⁬‫⁪‪⁬⁫‍‍‎‭‭⁭‭‎‮‬⁪‮⁫‭⁯‏⁬‌‮(obj1))
    {
      foreach (Asn1Encodable asn1Encodable in obj2)
      {
        \u202B⁬​⁬‭‮⁮⁭‌‪⁮‍⁮⁮‎‭⁪⁮‭⁮‍⁮⁬‎⁮⁭‪⁯‮‮‭‫‬⁯⁯⁭‌‬‭‬‮ obj9 = \u202B⁬​⁬‭‮⁮⁭‌‪⁮‍⁮⁮‎‭⁪⁮‭⁮‍⁮⁬‎⁮⁭‪⁯‮‮‭‫‬⁯⁯⁭‌‬‭‬‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) asn1Encodable.ToAsn1Object());
        if (\u202B‎⁮‏⁫⁭⁮‪‭​‫⁬⁬⁭‮‮‫‏​‭⁫⁭‮⁫‬⁫‎⁯‪⁫‮‮⁮​‎‏‏‭⁫‬‮.\u202D‍⁮‬‪​‏‎⁫⁭⁪‪⁪‭⁮⁮‍⁭‍‏‪​‭‍⁪⁫⁬‪‬‪⁭‌​‎‭‬​⁮⁭‮.Equals(obj9.\u206C⁭⁫‌⁯⁫‪⁬‭⁪‭‏‌‪⁯‮‫‍⁮‮⁬⁫‌‬⁬‫‏‏‏‪⁫‬⁯‫‮‬⁭⁭⁬⁫‮.\u202D⁯​‪‮⁫‭⁮‭⁭⁬⁫‭​‪‪‮‍‫‬⁮‬‮‮‏‫‍‏​‪​⁯⁪​‍‭‮‏‫‪‮))
        {
          \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ obj10 = \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u206E‌​‬⁯‪‎‍​⁫‏⁮‮‍‬⁭⁪⁫⁯⁯​⁮‮‭⁮⁯‫⁯‫​⁪‪⁪​‫‪⁯⁬⁯‭‮(obj9.\u206F⁮⁬‭‬‭‌‌⁬⁬⁪⁮⁬‍⁫‏⁫‫⁯⁪‫‮‌‭​​⁬‭‌⁯‮‏‮‫⁭⁭‎⁫​⁫‮);
          IList list2 = _param4[index1 - 1];
          for (int index2 = 0; index2 < list2.Count; ++index2)
          {
            \u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ obj11 = (\u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮) list2[index2];
            foreach (object obj12 in (IEnumerable) obj11.\u202D⁮​‫‬⁪‎‏⁮⁪⁫⁪​‮‪‍⁮‪⁮‎‌⁫⁮⁬‬⁬⁫‍‭⁪‫​‫‮‬⁪‬‏‌‎‮)
            {
              string str;
              if (obj12 is string)
                str = (string) obj12;
              else if (obj12 is \u202D‎‮‏‬⁮‎⁭⁬⁪‪⁬⁬‍⁭‎‎‫​‌⁪⁯⁪‮‪‏⁪⁪‫⁮‍​⁭⁪⁭⁯‏‍‭⁫‮)
                str = ((\u202D‎‮‏‬⁮‎⁭⁬⁪‪⁬⁬‍⁭‎‎‫​‌⁪⁯⁪‮‪‏⁪⁪‫⁮‍​⁭⁪⁭⁯‏‍‭⁫‮) obj12).\u202D⁯​‪‮⁫‭⁮‭⁭⁬⁫‭​‪‪‮‍‫‬⁮‬‮‮‏‫‍‏​‪​⁯⁪​‍‭‮‏‫‪‮;
              else
                continue;
              bool flag = false;
              foreach (\u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ obj13 in obj11.\u202A‏⁫‌‍⁬‎⁮‫​⁯‮‏​‮‭⁫‫‪⁮‏‏⁫⁪‌‌‬​‫⁯⁪‎‮‮‏⁭‏‭‬⁬‮)
              {
                if (str.Equals(obj13.\u206D‭⁯‭‌⁭‏‍‬‌⁪‫⁫​⁭‭‍‬⁪⁯‏‌‍⁭‌⁮⁭‎‏⁮⁫⁯⁫​⁫‫⁬⁭‏⁪‮))
                  flag = true;
              }
              if (!flag)
              {
                \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ obj14 = (\u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮) new \u202B​⁮⁭⁯‎⁫⁮⁪‭‭⁭⁮‍‎‌⁯‫⁫‎​⁫​‪‬‬‍⁫⁬‎‫⁪‏‌⁪​‪‎‮⁮‮();
                obj14.\u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮((object) str);
                \u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ obj15 = new \u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮(\u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u200C⁮‬‎⁪‌⁮‬​⁬⁭​‏⁮​‍‌⁮‮⁪⁪⁫‪‫‎⁮‎⁬​​‏⁪‪‍‬‪⁬⁫⁪‏‮(), index1, obj14, obj11, obj10, str, false);
                obj11.\u202B‭‬⁪​‭⁬‪⁫⁮‫​‭‭⁭‫⁪‌⁫‫‌‬‎‬⁪‬‫⁭⁯‬‏⁫⁭⁫‍‪⁮​‎‭‮(obj15);
                _param4[index1].Add((object) obj15);
              }
            }
          }
          break;
        }
      }
    }
    \u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ obj16 = _param3;
    for (int index3 = index1 - 1; index3 >= 0; --index3)
    {
      IList list3 = _param4[index3];
      for (int index4 = 0; index4 < list3.Count; ++index4)
      {
        \u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ obj17 = (\u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮) list3[index4];
        if (!obj17.\u200F‎‮⁭⁫‮‭​‮‍‎‌⁭‌‎⁪‭‬‭‭‪‪⁭‮‍⁬⁬‏‏‭‪‍‬‮⁭⁯‏‬‏⁯‮)
        {
          obj16 = \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200B‎‬⁭‌⁯⁮‫‪⁭‍‌⁬⁯‎‪‫​‏‌‎‭⁮⁬‭⁭⁭‪⁬‎‮⁫​‫‫⁬‪⁮​‫‮(obj16, _param4, obj17);
          if (obj16 == null)
            break;
        }
      }
    }
    \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ obj18 = obj1.\u206E‍‌⁫‏⁮‪‭‍⁭⁯‍‌⁬‌⁫⁯​​⁮‬⁭‫‭‫⁪⁯⁫‍‏⁬‏⁮‎⁭⁪‭‫⁮‮();
    if (obj18 != null)
    {
      bool flag = obj18.\u200E‪‏⁭‍⁭⁪‫‍‏‍‮⁮‬‌⁬⁫⁪‮‫⁯‮‮‭⁬⁯‮‭​⁭‫‪‮‫‎⁬⁮⁭⁭‍‮((object) \u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u200C​⁬‏⁮‎‎‬‏⁫‏‎⁯⁮‬‪‪⁭‭⁪‬⁮‭⁪⁬⁯‎⁪‭⁪‬⁬⁯‍‎⁮⁮‌‍‮‮.\u202D⁯​‪‮⁫‭⁮‭⁭⁬⁫‭​‪‪‮‍‫‬⁮‬‮‮‏‫‍‏​‪​⁯⁪​‍‭‮‏‫‪‮);
      IList list4 = _param4[index1];
      for (int index5 = 0; index5 < list4.Count; ++index5)
        ((\u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮) list4[index5]).\u200B​⁭⁯‬‬‌‎‏‍‪‌⁯‮‎‪⁫‍‌⁫⁭⁫‫⁬⁭⁬⁫​⁭‫⁭⁪⁮​‪‮‌‪‭‪‮ = flag;
    }
    return obj16;
  }

  internal static void \u206D‏‬‏⁫⁬‎‭⁭‌‮⁫‍​⁫‏‎‌⁯‪‪‏‏‎‌⁭⁯⁮‮‮‪‬​‪⁯⁫‏​‏⁬‮(
    \u202B‌‌‪⁮‬⁫⁮‮⁯‎‌‌‍⁪‏‎‪‬⁪⁭⁪⁪⁭‮‫‮⁬‌⁭‭⁫‎⁮⁬⁫‪‪⁪⁭‮ _param0,
    object _param1,
    \u200D‍​⁬‎‮⁮⁭⁮‌‎‭‮‎‍⁪⁬⁬‍⁬‎​⁯‭⁮‫‎‪⁭⁫‌⁮⁬‭‪‪‎⁪⁯⁪‮ _param2)
  {
    \u206C‭‍⁮‪‮⁭‫⁮‮‬‎​‌‮‎‍⁬​⁪‫⁫‪‭‌‌‪⁭⁭⁪‍‮⁯⁭‍‎⁪‬⁬‍‮ obj = \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200D⁭‫⁪‬⁪‬‫‬‏‮‏⁪‮‍⁫​‪‬‎⁪⁪‌‭⁫​⁯⁪⁬‫⁯​‌‎‪‌⁪⁫⁮‫‮((\u200C‮⁭‍⁭⁬⁯⁯‬⁮‏⁭‬⁬⁫‍‮‪‫⁪⁬‎‍‬‭​‪⁫‪‭‫‍‏‫‭⁬‎‮​⁪‮) _param2, \u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u202C⁯‏⁭‍‌⁫⁪‪‭‍‫‫​⁪‏‬‍‬⁯‏‮‭⁪‎‌‬‏⁮‮‫‮‭‮⁬⁪‬‭‭‍‮);
    bool flag1 = false;
    if (obj != null && \u206D⁬⁮‌⁬‌⁭‮‏‍‪‏‫⁪‍‎‭‍‫​⁯⁯⁭⁮⁮‍‏‍‪‫‏​⁭‏‎‌⁬⁯‮‭‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) obj).\u202B‪‮‎‎⁭‪⁯‌⁭⁫⁫‫‪⁯⁪⁮‬‫‭‎‌‍‫​⁯⁯‭⁬‍‌‪⁭⁮‪⁯‮‫‌‍‮)
      flag1 = true;
    byte[] encoded = _param2.\u200B‌‭⁮‭⁮‮⁬‭‏⁮⁯​⁪‍⁮​⁭‏‮‎‭⁭⁭⁭⁭⁮‍‍‍⁭⁪​‌​⁮⁪⁭⁫‏‮.GetEncoded();
    bool flag2 = false;
    if (_param0.\u202D⁪⁪⁬‪‮⁯‎⁭‍⁪⁭‫‪‬⁭‏⁮‮⁬‌‭‍‫​‍‍‌⁮‭‫⁯⁪⁯⁭⁬‎⁭‬⁬‮ != null)
    {
      \u200E‍⁬⁪‮⁫⁬‬⁬⁯‏‎⁬‏⁪‪⁪⁪‮⁬‍‎‎‌‭‮‭⁭‎‫​‎⁯⁬​‭⁮‏‎‏‮[] objArray = _param0.\u202D⁪⁪⁬‪‮⁯‎⁭‍⁪⁭‫‪‬⁭‏⁮‮⁬‌‭‍‫​‍‍‌⁮‭‫⁯⁪⁯⁭⁬‎⁭‬⁬‮.\u206B‌⁫‏⁬‮⁪‪‬‎⁮​⁪⁮‮​⁪‬‫‍⁪⁯⁮‎‌‭‫‫⁯‏⁭‭⁬⁬‬‍⁯‭‬‭‮();
      for (int index = 0; index < objArray.Length; ++index)
      {
        if (objArray[index].\u202E‌‮⁬‏⁫‮‍‫‏​​‮‎⁬⁪⁫‭‎⁫⁪‏‮‫⁬‭‏⁯‎⁫‍‪‪​​⁫‭​⁯‪‮ == 4)
        {
          try
          {
            if (\u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u200D‮‫‏⁮‮‪‎⁬‪‌⁮‏⁬⁫⁪‮‎⁪‫‬⁫‌‎​‏⁪⁫‎‎‫⁬‌⁭‫⁯⁭‪⁫‏‮(objArray[index].\u202D‍‬‎‪⁯‭‏⁪‮‪⁫⁬‍‏⁬‫⁭‍⁪‏‫‫‌‫‍⁯‏‫⁯‌⁮⁬‭‌‫⁬‬⁫‫‮.ToAsn1Object().GetEncoded(), encoded))
              flag2 = true;
          }
          catch (IOException ex)
          {
            throw new Exception("CRL issuer information from distribution point cannot be decoded.", (Exception) ex);
          }
        }
      }
      if (flag2 && !flag1)
        throw new Exception("Distribution point contains cRLIssuer field but CRL is not indirect.");
      if (!flag2)
        throw new Exception("CRL issuer of CRL does not match CRL issuer of distribution point.");
    }
    else if (_param2.\u200B‌‭⁮‭⁮‮⁬‭‏⁮⁯​⁪‍⁮​⁭‏‮‎‭⁭⁭⁭⁭⁮‍‍‍⁭⁪​‌​⁮⁪⁭⁫‏‮.\u202C⁮⁪⁫‪‫‮⁬⁮‏⁫‎‭‌⁬⁬​‏⁬‮‍‮‪⁬‪‌‫‌⁭‪⁪‪‫‫⁫‬‏⁯‭‮(\u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200B​⁫‎⁬​‪​‮‎‎‎⁫⁮⁬‏⁭⁮‫⁪‎‍‬⁪‍‭‎‭‍‌‫‭⁭‍​​‬​⁬‎‮(_param1), true))
      flag2 = true;
    if (!flag2)
      throw new Exception("Cannot find matching CRL issuer for certificate.");
  }

  internal static \u206B‬⁮‬⁮⁪‍‭⁭‌⁮‎⁮‪⁬‪​⁬‏⁯‫⁮‪‮‎‍‍‮‍‫⁫‌⁪‮⁫‌‬‫‏‬‮ \u206B⁯​⁮‏‬‭​‫‫‮⁫⁪‮‪‪‬⁭‮‮‪‬‬‏⁭⁮‬‭‪⁬⁭⁪⁮‮‎⁭‍‎‎‪‮(
    \u200D‍​⁬‎‮⁮⁭⁮‌‎‭‮‎‍⁪⁬⁬‍⁬‎​⁯‭⁮‫‎‪⁭⁫‌⁮⁬‭‪‪‎⁪⁯⁪‮ _param0,
    \u202B‌‌‪⁮‬⁫⁮‮⁯‎‌‌‍⁪‏‎‪‬⁪⁭⁪⁪⁭‮‫‮⁬‌⁭‭⁫‎⁮⁬⁫‪‪⁪⁭‮ _param1)
  {
    \u206D⁬⁮‌⁬‌⁭‮‏‍‪‏‫⁪‍‎‭‍‫​⁯⁯⁭⁮⁮‍‏‍‪‫‏​⁭‏‎‌⁬⁯‮‭‮ obj;
    try
    {
      obj = \u206D⁬⁮‌⁬‌⁭‮‏‍‪‏‫⁪‍‎‭‍‫​⁯⁯⁭⁮⁮‍‏‍‪‫‏​⁭‏‎‌⁬⁯‮‭‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200D⁭‫⁪‬⁪‬‫‬‏‮‏⁪‮‍⁫​‪‬‎⁪⁪‌‭⁫​⁯⁪⁬‫⁯​‌‎‪‌⁪⁫⁮‫‮((\u200C‮⁭‍⁭⁬⁯⁯‬⁮‏⁭‬⁬⁫‍‮‪‫⁪⁬‎‍‬‭​‪⁫‪‭‫‍‏‫‭⁬‎‮​⁪‮) _param0, \u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u202C⁯‏⁭‍‌⁫⁪‪‭‍‫‫​⁪‏‬‍‬⁯‏‮‭⁪‎‌‬‏⁮‮‫‮‭‮⁬⁪‬‭‭‍‮));
    }
    catch (Exception ex)
    {
      throw new Exception("issuing distribution point extension could not be decoded.", ex);
    }
    if (obj != null && obj.\u202B⁬​⁪‮‌⁮‫⁮‫‍⁭‮‏⁭​‏⁫⁭‮⁯⁬‍‪‭⁬‎‮‪‬‍‌⁮‪⁭‬‬‎‍‌‮ != null && _param1.\u206D​‏‏⁯‪‭‬⁭‏⁮‏‌‫‭‍‫⁮‏‎⁮​⁪⁭‮‫‍‌​​⁮⁭⁯⁪‫⁬​‏‬⁭‮ != null)
      return new \u206B‬⁮‬⁮⁪‍‭⁭‌⁮‎⁮‪⁬‪​⁬‏⁯‫⁮‪‮‎‍‍‮‍‫⁫‌⁪‮⁫‌‬‫‏‬‮(_param1.\u206D​‏‏⁯‪‭‬⁭‏⁮‏‌‫‭‍‫⁮‏‎⁮​⁪⁭‮‫‍‌​​⁮⁭⁯⁪‫⁬​‏‬⁭‮.\u200E‬‫‫‪⁮⁭‎‮⁫⁫⁭‍‍⁮⁫‫‫⁪⁬‎‏‭‭⁪⁪​⁫⁪‍⁫⁪⁪‏‎‪‎⁫‪⁮‮).\u202E‪‌​⁬⁯‍‌‎‭‪‪‬‍​‎⁫‌‏‪⁫‍‭⁭⁪⁭‫‎‌‎⁪⁬‌⁭⁬‬‫⁯‬‪‮(new \u206B‬⁮‬⁮⁪‍‭⁭‌⁮‎⁮‪⁬‪​⁬‏⁯‫⁮‪‮‎‍‍‮‍‫⁫‌⁪‮⁫‌‬‫‏‬‮(obj.\u202B⁬​⁪‮‌⁮‫⁮‫‍⁭‮‏⁭​‏⁫⁭‮⁯⁬‍‪‭⁬‎‮‪‬‍‌⁮‪⁭‬‬‎‍‌‮.\u200E‬‫‫‪⁮⁭‎‮⁫⁫⁭‍‍⁮⁫‫‫⁪⁬‎‏‭‭⁪⁪​⁫⁪‍⁫⁪⁪‏‎‪‎⁫‪⁮‮));
    if ((obj == null || obj.\u202B⁬​⁪‮‌⁮‫⁮‫‍⁭‮‏⁭​‏⁫⁭‮⁯⁬‍‪‭⁬‎‮‪‬‍‌⁮‪⁭‬‬‎‍‌‮ == null) && _param1.\u206D​‏‏⁯‪‭‬⁭‏⁮‏‌‫‭‍‫⁮‏‎⁮​⁪⁭‮‫‍‌​​⁮⁭⁯⁪‫⁬​‏‬⁭‮ == null)
      return \u206B‬⁮‬⁮⁪‍‭⁭‌⁮‎⁮‪⁬‪​⁬‏⁯‫⁮‪‮‎‍‍‮‍‫⁫‌⁪‮⁫‌‬‫‏‬‮.\u202C⁬‏‍‮‪‬‪‪​‏‪⁭⁮‮‮⁬⁯‏‫​‫⁮⁮⁯‏​‮⁬‍‫⁯⁫‭‍‏​‌⁫‪‮;
    return (_param1.\u206D​‏‏⁯‪‭‬⁭‏⁮‏‌‫‭‍‫⁮‏‎⁮​⁪⁭‮‫‍‌​​⁮⁭⁯⁪‫⁬​‏‬⁭‮ != null ? new \u206B‬⁮‬⁮⁪‍‭⁭‌⁮‎⁮‪⁬‪​⁬‏⁯‫⁮‪‮‎‍‍‮‍‫⁫‌⁪‮⁫‌‬‫‏‬‮(_param1.\u206D​‏‏⁯‪‭‬⁭‏⁮‏‌‫‭‍‫⁮‏‎⁮​⁪⁭‮‫‍‌​​⁮⁭⁯⁪‫⁬​‏‬⁭‮.\u200E‬‫‫‪⁮⁭‎‮⁫⁫⁭‍‍⁮⁫‫‫⁪⁬‎‏‭‭⁪⁪​⁫⁪‍⁫⁪⁪‏‎‪‎⁫‪⁮‮) : \u206B‬⁮‬⁮⁪‍‭⁭‌⁮‎⁮‪⁬‪​⁬‏⁯‫⁮‪‮‎‍‍‮‍‫⁫‌⁪‮⁫‌‬‫‏‬‮.\u202C⁬‏‍‮‪‬‪‪​‏‪⁭⁮‮‮⁬⁯‏‫​‫⁮⁮⁯‏​‮⁬‍‫⁯⁫‭‍‏​‌⁫‪‮).\u202E‪‌​⁬⁯‍‌‎‭‪‪‬‍​‎⁫‌‏‪⁫‍‭⁭⁪⁭‫‎‌‎⁪⁬‌⁭⁬‬‫⁯‬‪‮(obj != null ? new \u206B‬⁮‬⁮⁪‍‭⁭‌⁮‎⁮‪⁬‪​⁬‏⁯‫⁮‪‮‎‍‍‮‍‫⁫‌⁪‮⁫‌‬‫‏‬‮(obj.\u202B⁬​⁪‮‌⁮‫⁮‫‍⁭‮‏⁭​‏⁫⁭‮⁯⁬‍‪‭⁬‎‮‪‬‍‌⁮‪⁭‬‬‎‍‌‮.\u200E‬‫‫‪⁮⁭‎‮⁫⁫⁭‍‍⁮⁫‫‫⁪⁬‎‏‭‭⁪⁪​⁫⁪‍⁫⁪⁪‏‎‪‎⁫‪⁮‮) : \u206B‬⁮‬⁮⁪‍‭⁭‌⁮‎⁮‪⁬‪​⁬‏⁯‫⁮‪‮‎‍‍‮‍‫⁫‌⁪‮⁫‌‬‫‏‬‮.\u202C⁬‏‍‮‪‬‪‪​‏‪⁭⁮‮‮⁬⁯‏‫​‫⁮⁮⁯‏​‮⁬‍‫⁯⁫‭‍‏​‌⁫‪‮);
  }

  internal static \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ \u200C‏‪‫‎‏⁬⁫⁬‭‎‭‏‌‮‫‎⁮‬⁭‏​‌‬⁯‫⁭‭‬‭​‫⁫‫⁮⁪‪​‬‫‮(
    \u200D‍​⁬‎‮⁮⁭⁮‌‎‭‮‎‍⁪⁬⁬‍⁬‎​⁯‭⁮‫‎‪⁭⁫‌⁮⁬‭‪‪‎⁪⁯⁪‮ _param0,
    object _param1,
    \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ _param2,
    \u206D⁬‬⁫‪‎⁭⁭‌​⁬‌⁯‍‍⁯⁭‬‫‪‭‏⁮‏‭‬‫⁮‌‏⁯‫‫⁫⁫‭⁭‏‌‍‮ _param3,
    \u206C⁫⁪‫‏‬⁫⁭⁬‏‬‎‫‏​⁫‏⁬‍⁫‌‭⁯⁬⁯‎‪⁬‬‭⁭‫⁭⁬‍‫‏⁯‫‭‮ _param4,
    IList _param5)
  {
    X509CertStoreSelector certStoreSelector1 = new X509CertStoreSelector();
    try
    {
      certStoreSelector1.Subject = _param0.\u200B‌‭⁮‭⁮‮⁬‭‏⁮⁯​⁪‍⁮​⁭‏‮‎‭⁭⁭⁭⁭⁮‍‍‍⁭⁪​‌​⁮⁪⁭⁫‏‮;
    }
    catch (IOException ex)
    {
      throw new Exception("Subject criteria for certificate selector to find issuer certificate for CRL could not be set.", (Exception) ex);
    }
    IList list1 = \u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u200C⁮‬‎⁪‌⁮‬​⁬⁭​‏⁮​‍‌⁮‮⁪⁪⁫‪‫‎⁮‎⁬​​‏⁪‪‍‬‪⁬⁫⁪‏‮();
    try
    {
      \u206F‌​‬⁬‫‮‬‎‬⁪⁬‍⁫‫‏‪‬‭‮‬‭‎⁬‪⁪‭‭‭⁭​‮‮‌‬⁮‮‎⁭‭‮.\u202E‫‍⁯‍‍‌‎⁪⁪‫⁫⁭‬‫⁭⁭⁯⁯⁪⁫⁭‌⁪​‏‮⁯‫‌⁯⁮⁫⁬⁯​‏‍⁪⁯‮(list1, (IEnumerable) \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200D‬⁯‍‮‫‫⁮⁭‪‌‌⁮‫‭‏‬​⁫‮⁬​‬‍⁫‍​​‌⁭⁬⁬‎‫⁮⁬⁫⁫⁫⁬‮(certStoreSelector1, _param4.\u200C‬⁬⁬‮⁪⁫⁬‫‏⁫‮‎‍‮‎⁮⁯‎‮⁫‎⁪‏‪⁫‌‭⁫‏⁮​‏‎⁮‭​⁬⁮‍‮()));
      \u206F‌​‬⁬‫‮‬‎‬⁪⁬‍⁫‫‏‪‬‭‮‬‭‎⁬‪⁪‭‭‭⁭​‮‮‌‬⁮‮‎⁭‭‮.\u202E‫‍⁯‍‍‌‎⁪⁪‫⁫⁭‬‫⁭⁭⁯⁯⁪⁫⁭‌⁪​‏‮⁯‫‌⁯⁮⁫⁬⁯​‏‍⁪⁯‮(list1, (IEnumerable) \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200D‬⁯‍‮‫‫⁮⁭‪‌‌⁮‫‭‏‬​⁫‮⁬​‬‍⁫‍​​‌⁭⁬⁬‎‫⁮⁬⁫⁫⁫⁬‮(certStoreSelector1, _param4.\u206B‌‬⁪⁫‍⁪‍⁭‌‏‪‮⁯⁬‮‪‮‮⁪⁮⁫‏‭‮⁭‬‏‬⁫‌​‭⁬⁮‌‬‮‭⁬‮()));
    }
    catch (Exception ex)
    {
      throw new Exception("Issuer certificate for CRL cannot be searched.", ex);
    }
    list1.Add((object) _param2);
    IEnumerator enumerator = list1.GetEnumerator();
    IList list2 = \u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u200C⁮‬‎⁪‌⁮‬​⁬⁭​‏⁮​‍‌⁮‮⁪⁪⁫‪‫‎⁮‎⁬​​‏⁪‪‍‬‪⁬⁫⁪‏‮();
    IList list3 = \u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u200C⁮‬‎⁪‌⁮‬​⁬⁭​‏⁮​‍‌⁮‮⁪⁪⁫‪‫‎⁮‎⁬​​‏⁪‪‍‬‪⁬⁫⁪‏‮();
    while (enumerator.MoveNext())
    {
      \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ current = (\u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮) enumerator.Current;
      if (((object) current).Equals((object) _param2))
      {
        list2.Add((object) current);
        list3.Add((object) _param3);
      }
      else
      {
        try
        {
          \u206F‬‪​⁬‮‏‫‌⁬‌⁬⁭‎⁬​‪⁯‏‍‬‫‭​‎‭‫⁭​‏​⁫⁫‎⁬‌⁯​‭‬‮ obj1 = new \u206F‬‪​⁬‮‏‫‌⁬‌⁬⁭‎⁬​‪⁯‏‍‬‫‭​‎‭‫⁭​‏​⁫⁫‎⁬‌⁯​‭‬‮();
          X509CertStoreSelector certStoreSelector2 = new X509CertStoreSelector();
          certStoreSelector2.Certificate = current;
          \u206C⁫⁪‫‏‬⁫⁭⁬‏‬‎‫‏​⁫‏⁬‍⁫‌‭⁯⁬⁯‎‪⁬‬‭⁭‫⁭⁬‍‫‏⁯‫‭‮ obj2 = (\u206C⁫⁪‫‏‬⁫⁭⁬‏‬‎‫‏​⁫‏⁬‍⁫‌‭⁯⁬⁯‎‪⁬‬‭⁭‫⁭⁬‍‫‏⁯‫‭‮) _param4.\u206F‬⁯‪⁬⁮⁭⁮‮‭‬‌‌‎⁪⁫‍‭‍‮‌⁬‮‏‍‪‬‮⁯‫‪‭‬⁭‏⁮⁯​‮⁬‮();
          obj2.\u200F‌‬‮⁮⁪⁭‬⁬⁬‪⁪‫⁬‫‪‪‮‭⁫‬‍‫⁮⁮‍⁯⁭​⁪‫‭‬⁯‏‭⁪‪‫‫‮((\u202B⁬⁬​​⁮‫‭⁬‫‪‮⁯‫⁭⁯​⁪⁮‏‍‎‮⁬‭⁪⁪‍‮‍‍⁯‮⁮‏‏‮‌‪⁭‮) certStoreSelector2);
          \u200E‭‪⁪‪⁮⁪⁪⁫‍⁮⁯⁯‮‪⁮⁫‭⁫‭‫‮⁮‪‍⁬⁭⁮‭⁫‪‌‫⁫‮‬⁬‎​⁬‮ obj3 = \u200E‭‪⁪‪⁮⁪⁪⁫‍⁮⁯⁯‮‪⁮⁫‭⁫‭‫‮⁮‪‍⁬⁭⁮‭⁫‪‌‫⁫‮‬⁬‎​⁬‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮(obj2);
          if (_param5.Contains((object) current))
            obj3.\u202C‎‫⁯⁫‪⁫⁭‬⁬⁪⁪‬‍‬‬⁬⁫‎​‮‌‏‮‏⁪⁫⁯​​‏‏‭‫⁫‏⁪⁫⁫‮ = false;
          else
            obj3.\u202C‎‫⁯⁫‪⁫⁭‬⁬⁪⁪‬‍‬‬⁬⁫‎​‮‌‏‮‏⁪⁫⁯​​‏‏‭‫⁫‏⁪⁫⁫‮ = true;
          \u200E‭‪⁪‪⁮⁪⁪⁫‍⁮⁯⁯‮‪⁮⁫‭⁫‭‫‮⁮‪‍⁬⁭⁮‭⁫‪‌‫⁫‮‬⁬‎​⁬‮ obj4 = obj3;
          IList list4 = obj1.\u206A‫⁬⁬‬⁪‪‮‏⁫⁪‎‍‮⁬​‪‎‏‍⁭⁮‪‭⁯‪⁪‎‭‪⁮⁬⁫‫‬⁪‭⁯⁮⁪‮(obj4).\u206D‎​‌⁭‎⁬‌⁬‫⁪‮‮‌‭⁪‍⁯‫⁬⁮‪‎‌‭‍⁭‎‍‏​‮‫‮‪‌⁫⁫⁯⁬‮.\u202B‪‏⁫‮⁬⁪⁪‪⁬‍‪‏⁭‬‏‍‪‎‍‫‪⁭‌‎‍⁯‫‌‬‫‌‍⁯‮‪⁯⁬⁫⁪‮;
          list2.Add((object) current);
          list3.Add((object) \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200D‍⁫​⁭​⁪⁭​‍‌⁬‪⁯⁬‪‬⁮‭‮‍‬​⁭‌‍⁭⁯‍‍​‫⁫‎‫‪‮⁫‬‫‮(list4, 0));
        }
        catch (\u202E‌‮‬‬‪⁭‭‍⁬⁪⁪‎​⁫⁬⁮‪⁬⁯‌⁫‌‏‏‌⁭‎⁫‪⁪⁫⁬‫⁭⁪⁪‮‍‮‮ ex)
        {
          throw new Exception("CertPath for CRL signer failed to validate.", (Exception) ex);
        }
        catch (\u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮ ex)
        {
          throw new Exception("Public key of issuer certificate of CRL could not be retrieved.", (Exception) ex);
        }
      }
    }
    \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ obj = (\u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮) new \u202B​⁮⁭⁯‎⁫⁮⁪‭‭⁭⁮‍‎‌⁯‫⁫‎​⁫​‪‬‬‍⁫⁬‎‫⁪‏‌⁪​‪‎‮⁮‮();
    Exception exception = (Exception) null;
    for (int index = 0; index < list2.Count; ++index)
    {
      bool[] flagArray = ((\u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮) list2[index]).\u200D​‪‬‍‭‌‮⁮‍‬‏‪‮‮⁮⁯⁫​⁭‎⁯​‍⁮‬‌‍⁮⁯‏⁮​⁯​‍‫‎‍⁯‮();
      if (flagArray != null && (flagArray.Length < 7 || !flagArray[\u202B‎⁮‏⁫⁭⁮‪‭​‫⁬⁬⁭‮‮‫‏​‭⁫⁭‮⁫‬⁫‎⁯‪⁫‮‮⁮​‎‏‏‭⁫‬‮.\u200E⁭⁪‎⁮⁮‎⁪‎‌⁯‪‬‬⁭‭‫‭‬⁫‮⁯⁮‭⁬‫⁯⁪‍‪‭‮‫‍⁫‬‫‍‌‪‮]))
        exception = new Exception("Issuer certificate key usage extension does not permit CRL signing.");
      else
        obj.\u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮(list3[index]);
    }
    if (obj.Count == 0 && exception == null)
      throw new Exception("Cannot find a valid issuer certificate.");
    if (obj.Count == 0 && exception != null)
      throw exception;
    return obj;
  }

  internal static \u206D⁬‬⁫‪‎⁭⁭‌​⁬‌⁯‍‍⁯⁭‬‫‪‭‏⁮‏‭‬‫⁮‌‏⁯‫‫⁫⁫‭⁭‏‌‍‮ \u202E⁪⁪⁫‏‭‌⁫⁯⁬⁫⁮‏‫‌‏⁭‮‫‏⁪‪‎‪‫‌​⁬‏‎‍‫‏‪‏‭‮⁮‬⁭‮(
    \u200D‍​⁬‎‮⁮⁭⁮‌‎‭‮‎‍⁪⁬⁬‍⁬‎​⁯‭⁮‫‎‪⁭⁫‌⁮⁬‭‪‪‎⁪⁯⁪‮ _param0,
    \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ _param1)
  {
    Exception innerException = (Exception) null;
    foreach (\u206D⁬‬⁫‪‎⁭⁭‌​⁬‌⁯‍‍⁯⁭‬‫‪‭‏⁮‏‭‬‫⁮‌‏⁯‫‫⁫⁫‭⁭‏‌‍‮ obj in (IEnumerable) _param1)
    {
      try
      {
        _param0.\u200F‌⁪⁬⁭⁪‭‍‌‫⁪‏‏‍‌⁫‌‍‏‬‌⁫‮⁬⁪‌‮‫⁪‏‎⁬‫‎⁬⁭‏⁬‮⁬‮(obj);
        return obj;
      }
      catch (Exception ex)
      {
        innerException = ex;
      }
    }
    throw new Exception("Cannot verify CRL.", innerException);
  }

  internal static \u200D‍​⁬‎‮⁮⁭⁮‌‎‭‮‎‍⁪⁬⁬‍⁬‎​⁯‭⁮‫‎‪⁭⁫‌⁮⁬‭‪‪‎⁪⁯⁪‮ \u200C‪⁮‬‫⁫⁯‮‬⁪‍‫‭⁭​‮⁬‮⁪‪⁬⁭‌‫‮‬‭‌​‫⁯⁯⁭⁬‎‮‫⁮‫‬‮(
    \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ _param0,
    \u206D⁬‬⁫‪‎⁭⁭‌​⁬‌⁯‍‍⁯⁭‬‫‪‭‏⁮‏‭‬‫⁮‌‏⁯‫‫⁫⁫‭⁭‏‌‍‮ _param1)
  {
    Exception innerException = (Exception) null;
    foreach (\u200D‍​⁬‎‮⁮⁭⁮‌‎‭‮‎‍⁪⁬⁬‍⁬‎​⁯‭⁮‫‎‪⁭⁫‌⁮⁬‭‪‪‎⁪⁯⁪‮ obj in (IEnumerable) _param0)
    {
      try
      {
        obj.\u200F‌⁪⁬⁭⁪‭‍‌‫⁪‏‏‍‌⁫‌‍‏‬‌⁫‮⁬⁪‌‮‫⁪‏‎⁬‫‎⁬⁭‏⁬‮⁬‮(_param1);
        return obj;
      }
      catch (Exception ex)
      {
        innerException = ex;
      }
    }
    if (innerException != null)
      throw new Exception("Cannot verify delta CRL.", innerException);
    return (\u200D‍​⁬‎‮⁮⁭⁮‌‎‭‮‎‍⁪⁬⁬‍⁬‎​⁯‭⁮‫‎‪⁭⁫‌⁮⁬‭‪‪‎⁪⁯⁪‮) null;
  }

  private static void \u206D⁭‬‌‬⁭‫‌⁪⁬‪⁫⁫⁮‮‏​‭⁪‮⁫⁯⁬⁮‏‏‪‌‪‏‫‎‫‮⁯‮‍‌‮‎‮(
    \u202B‌‌‪⁮‬⁫⁮‮⁯‎‌‌‍⁪‏‎‪‬⁪⁭⁪⁪⁭‮‫‮⁬‌⁭‭⁫‎⁮⁬⁫‪‪⁪⁭‮ _param0,
    \u206C⁫⁪‫‏‬⁫⁭⁬‏‬‎‫‏​⁫‏⁬‍⁫‌‭⁯⁬⁯‎‪⁬‬‭⁭‫⁭⁬‍‫‏⁯‫‭‮ _param1,
    \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ _param2,
    DateTime _param3,
    \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ _param4,
    \u206D⁬‬⁫‪‎⁭⁭‌​⁬‌⁯‍‍⁯⁭‬‫‪‭‏⁮‏‭‬‫⁮‌‏⁯‫‫⁫⁫‭⁭‏‌‍‮ _param5,
    \u200D⁭⁬⁭⁪‬⁮⁫⁮⁭‬‫⁯⁬⁮‎‍‮‏⁫⁫‍‬⁬‮‏⁭‬‬‫⁮⁫⁯‍‌⁪‍⁮‏‍‮ _param6,
    \u206B‬⁮‬⁮⁪‍‭⁭‌⁮‎⁮‪⁬‪​⁬‏⁯‫⁮‪‮‎‍‍‮‍‫⁫‌⁪‮⁫‌‬‫‏‬‮ _param7,
    IList _param8)
  {
    DateTime utcNow = DateTime.UtcNow;
    if (_param3.Ticks > utcNow.Ticks)
      throw new Exception("Validation time is in future.");
    \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ obj1 = \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200F‭‫⁪‮⁮‌‏‌‬⁯⁭⁫​‎⁯‮⁪⁬​‭⁭⁫⁪‬‬‏⁯⁪‍⁫‏⁮⁯⁬‏‮​‌‪‮(_param0, (object) _param2, utcNow, _param1);
    bool flag = false;
    Exception exception = (Exception) null;
    IEnumerator enumerator = obj1.GetEnumerator();
    while (enumerator.MoveNext() && _param6.\u202A‪⁭‪⁪‎‌⁫⁭‬⁯‭⁯‎⁯‮⁭⁫⁪‌‍⁭‍⁮‭⁫⁬‭‬⁬⁫‍‭⁫⁫⁮‎⁬‫⁪‮ == 11)
    {
      if (!_param7.\u206B‪‎‪‎‍‭​‭⁭⁭‮‭‎‪‎‪‬‎‬⁫‎‭⁬‍‭⁪‮⁫⁬⁫⁮⁪​⁯‪‍‫‏⁭‮)
      {
        try
        {
          \u200D‍​⁬‎‮⁮⁭⁮‌‎‭‮‎‍⁪⁬⁬‍⁬‎​⁯‭⁮‫‎‪⁭⁫‌⁮⁬‭‪‪‎⁪⁯⁪‮ current = (\u200D‍​⁬‎‮⁮⁭⁮‌‎‭‮‎‍⁪⁬⁬‍⁬‎​⁯‭⁮‫‎‪⁭⁫‌⁮⁬‭‪‪‎⁪⁯⁪‮) enumerator.Current;
          \u206B‬⁮‬⁮⁪‍‭⁭‌⁮‎⁮‪⁬‪​⁬‏⁯‫⁮‪‮‎‍‍‮‍‫⁫‌⁪‮⁫‌‬‫‏‬‮ obj2 = \u202B‎⁮‏⁫⁭⁮‪‭​‫⁬⁬⁭‮‮‫‏​‭⁫⁭‮⁫‬⁫‎⁯‪⁫‮‮⁮​‎‏‏‭⁫‬‮.\u206B⁯​⁮‏‬‭​‫‫‮⁫⁪‮‪‪‬⁭‮‮‪‬‬‏⁭⁮‬‭‪⁬⁭⁪⁮‮‎⁭‍‎‎‪‮(current, _param0);
          if (obj2.\u200E⁮​‌‌⁭‪⁫‮⁭‮⁫⁯‫‫‌‬⁯⁬‏⁬‎‌‫⁫‎⁭‏‬‏‮‭‬‍⁮‬‎‏‪‭‮(_param7))
          {
            \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ obj3 = \u202B‎⁮‏⁫⁭⁮‪‭​‫⁬⁬⁭‮‮‫‏​‭⁫⁭‮⁫‬⁫‎⁯‪⁫‮‮⁮​‎‏‏‭⁫‬‮.\u200C‏‪‫‎‏⁬⁫⁬‭‎‭‏‌‮‫‎⁮‬⁭‏​‌‬⁯‫⁭‭‬‭​‫⁫‫⁮⁪‪​‬‫‮(current, (object) _param2, _param4, _param5, _param1, _param8);
            \u206D⁬‬⁫‪‎⁭⁭‌​⁬‌⁯‍‍⁯⁭‬‫‪‭‏⁮‏‭‬‫⁮‌‏⁯‫‫⁫⁫‭⁭‏‌‍‮ obj4 = \u202B‎⁮‏⁫⁭⁮‪‭​‫⁬⁬⁭‮‮‫‏​‭⁫⁭‮⁫‬⁫‎⁯‪⁫‮‮⁮​‎‏‏‭⁫‬‮.\u202E⁪⁪⁫‏‭‌⁫⁯⁬⁫⁮‏‫‌‏⁭‮‫‏⁪‪‎‪‫‌​⁬‏‎‍‫‏‪‏‭‮⁮‬⁭‮(current, obj3);
            \u200D‍​⁬‎‮⁮⁭⁮‌‎‭‮‎‍⁪⁬⁬‍⁬‎​⁯‭⁮‫‎‪⁭⁫‌⁮⁬‭‪‪‎⁪⁯⁪‮ obj5 = (\u200D‍​⁬‎‮⁮⁭⁮‌‎‭‮‎‍⁪⁬⁬‍⁬‎​⁯‭⁮‫‎‪⁭⁫‌⁮⁬‭‪‪‎⁪⁯⁪‮) null;
            if (_param1.\u202A⁭‫‭⁮‫‭⁬⁯⁫‭‫⁭⁮⁫⁯⁫⁯‬⁮‏‎⁫‭‭‌⁪‬‫⁬‌‫⁮⁮‪‭‬‭⁪⁪‮)
              obj5 = \u202B‎⁮‏⁫⁭⁮‪‭​‫⁬⁬⁭‮‮‫‏​‭⁫⁭‮⁫‬⁫‎⁯‪⁫‮‮⁮​‎‏‏‭⁫‬‮.\u200C‪⁮‬‫⁫⁯‮‬⁪‍‫‭⁭​‮⁬‮⁪‪⁬⁭‌‫‮‬‭‌​‫⁯⁯⁭⁬‎‮‫⁮‫‬‮(\u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u206C⁪‬⁭‎‏‬⁮‎‏⁮‭‬⁭⁯⁭‎‌‪⁬‪‍⁫⁮‮‫‫‬⁮‌‎‍‫‪⁬⁮‭‍‮‍‮(utcNow, _param1, current), obj4);
            if (_param1.\u206B⁮⁮​⁫‫‎⁫‭‮‫⁬⁮⁮‪⁯⁯‌⁯⁪‍‭⁯⁫‭‪⁮⁪⁯‫‍⁮‎‬‭‍‫​⁯‏‮ != 1 && _param2.\u202D⁪⁮‮⁮‭​‎⁭⁮⁪⁫⁬‫⁪​‫‫‪‪‏​⁬‪‌‪‮⁪‪⁬​⁬‭‬‍‫⁯⁪‬‍‮.Ticks < current.\u202C‍‭‮‎‫‮‪‍‏‍‭‮⁯⁪‎⁬‭‭‌‪‪‍⁭‮⁫‫‬⁭‏‌‌‏‪‪‮‎⁯‎⁭‮.Ticks)
              throw new Exception("No valid CRL for current time found.");
            \u202B‎⁮‏⁫⁭⁮‪‭​‫⁬⁬⁭‮‮‫‏​‭⁫⁭‮⁫‬⁫‎⁯‪⁫‮‮⁮​‎‏‏‭⁫‬‮.\u206D‏‬‏⁫⁬‎‭⁭‌‮⁫‍​⁫‏‎‌⁯‪‪‏‏‎‌⁭⁯⁮‮‮‪‬​‪⁯⁫‏​‏⁬‮(_param0, (object) _param2, current);
            \u202B‎⁮‏⁫⁭⁮‪‭​‫⁬⁬⁭‮‮‫‏​‭⁫⁭‮⁫‬⁫‎⁯‪⁫‮‮⁮​‎‏‏‭⁫‬‮.\u206F​‎‪‪‫‏​‬‌⁪​⁫⁬‎‌‬⁪‌‎⁮⁮⁮‫‫⁪‭⁫‭‍‮​⁮‪‪⁪‫⁭‫‏‮(_param0, (object) _param2, current);
            \u202B‎⁮‏⁫⁭⁮‪‭​‫⁬⁬⁭‮‮‫‏​‭⁫⁭‮⁫‬⁫‎⁯‪⁫‮‮⁮​‎‏‏‭⁫‬‮.\u200B‍‮‏⁫⁯⁭‭‫‬⁯​⁭‫‎⁪​‌‍⁪‭⁮‍‭‏‏⁭‎⁭‬⁫⁯‏⁫‌‏⁪​⁬‫‮(obj5, current, _param1);
            \u202B‎⁮‏⁫⁭⁮‪‭​‫⁬⁬⁭‮‮‫‏​‭⁫⁭‮⁫‬⁫‎⁯‪⁫‮‮⁮​‎‏‏‭⁫‬‮.\u206B⁬‏‬‌‍⁭⁮⁯‬‎‌‪⁮‭‬⁯⁭‬⁫‏‎‮⁯‎‎⁮​‭⁯‏⁬‎‬‏‏‫⁫‎⁭‮(_param3, obj5, (object) _param2, _param6, _param1);
            \u202B‎⁮‏⁫⁭⁮‪‭​‫⁬⁬⁭‮‮‫‏​‭⁫⁭‮⁫‬⁫‎⁯‪⁫‮‮⁮​‎‏‏‭⁫‬‮.\u200C‬⁯⁫⁮‬‮‬‮​‮⁯⁫⁭⁪‪⁭⁫‎‏‪‌‏⁮‭⁫⁯⁫‏⁪‪‮⁪‍⁮‬‫‫‮⁪‮(_param3, current, (object) _param2, _param6);
            if (_param6.\u202A‪⁭‪⁪‎‌⁫⁭‬⁯‭⁯‎⁯‮⁭⁫⁪‌‍⁭‍⁮‭⁫⁬‭‬⁬⁫‍‭⁫⁫⁮‎⁬‫⁪‮ == 8)
              _param6.\u202A‪⁭‪⁪‎‌⁫⁭‬⁯‭⁯‎⁯‮⁭⁫⁪‌‍⁭‍⁮‭⁫⁬‭‬⁬⁫‍‭⁫⁫⁮‎⁬‫⁪‮ = 11;
            _param7.\u200D⁯⁯​⁮‌​⁬‫⁭⁪⁪‫⁫⁮⁭‎‪⁯​⁮⁮‪‎‏⁬⁬⁪‪⁬‍⁯‬‪⁯‭‮⁫⁯‌‮(obj2);
            \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ obj6 = current.\u206E‍‌⁫‏⁮‪‭‍⁭⁯‍‌⁬‌⁫⁯​​⁮‬⁭‫‭‫⁪⁯⁫‍‏⁬‏⁮‎⁭⁪‭‫⁮‮();
            if (obj6 != null)
            {
              \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ obj7 = (\u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮) new \u202B​⁮⁭⁯‎⁫⁮⁪‭‭⁭⁮‍‎‌⁯‫⁫‎​⁫​‪‬‬‍⁫⁬‎‫⁪‏‌⁪​‪‎‮⁮‮((IEnumerable) obj6);
              obj7.\u200C⁭⁮​⁮​⁭‬​‮‍‎‍‫⁮⁪⁪⁪‏‬​⁫⁯⁫‬⁮‬‫⁫⁮⁫⁯⁯⁭‬⁬⁮‫⁯⁯‮((object) \u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u202C⁯‏⁭‍‌⁫⁪‪‭‍‫‫​⁪‏‬‍‬⁯‏‮‭⁪‎‌‬‏⁮‮‫‮‭‮⁬⁪‬‭‭‍‮.\u202D⁯​‪‮⁫‭⁮‭⁭⁬⁫‭​‪‪‮‍‫‬⁮‬‮‮‏‫‍‏​‪​⁯⁪​‍‭‮‏‫‪‮);
              obj7.\u200C⁭⁮​⁮​⁭‬​‮‍‎‍‫⁮⁪⁪⁪‏‬​⁫⁯⁫‬⁮‬‫⁫⁮⁫⁯⁯⁭‬⁬⁮‫⁯⁯‮((object) \u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u206E‪⁪‍​‬‮⁮‌‮⁭‪‭‍​‪‮‬‌‬‎⁪‬⁮⁫⁫⁭‪‭‪‮⁫⁬‭‪‌‎‌‌⁫‮.\u202D⁯​‪‮⁫‭⁮‭⁭⁬⁫‭​‪‪‮‍‫‬⁮‬‮‮‏‫‍‏​‪​⁯⁪​‍‭‮‏‫‪‮);
              if (!obj7.\u202E‮‬⁭⁮⁫‮‮⁭‎⁭⁭‭‬‌​‫⁯‍‭‌‍‫‪‍‏‮‌‏⁭‍⁫‎⁬‮‌⁫⁮​‌‮)
                throw new Exception("CRL contains unsupported critical extensions.");
            }
            if (obj5 != null)
            {
              \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ obj8 = obj5.\u206E‍‌⁫‏⁮‪‭‍⁭⁯‍‌⁬‌⁫⁯​​⁮‬⁭‫‭‫⁪⁯⁫‍‏⁬‏⁮‎⁭⁪‭‫⁮‮();
              if (obj8 != null)
              {
                \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ obj9 = (\u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮) new \u202B​⁮⁭⁯‎⁫⁮⁪‭‭⁭⁮‍‎‌⁯‫⁫‎​⁫​‪‬‬‍⁫⁬‎‫⁪‏‌⁪​‪‎‮⁮‮((IEnumerable) obj8);
                obj9.\u200C⁭⁮​⁮​⁭‬​‮‍‎‍‫⁮⁪⁪⁪‏‬​⁫⁯⁫‬⁮‬‫⁫⁮⁫⁯⁯⁭‬⁬⁮‫⁯⁯‮((object) \u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u202C⁯‏⁭‍‌⁫⁪‪‭‍‫‫​⁪‏‬‍‬⁯‏‮‭⁪‎‌‬‏⁮‮‫‮‭‮⁬⁪‬‭‭‍‮.\u202D⁯​‪‮⁫‭⁮‭⁭⁬⁫‭​‪‪‮‍‫‬⁮‬‮‮‏‫‍‏​‪​⁯⁪​‍‭‮‏‫‪‮);
                obj9.\u200C⁭⁮​⁮​⁭‬​‮‍‎‍‫⁮⁪⁪⁪‏‬​⁫⁯⁫‬⁮‬‫⁫⁮⁫⁯⁯⁭‬⁬⁮‫⁯⁯‮((object) \u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u206E‪⁪‍​‬‮⁮‌‮⁭‪‭‍​‪‮‬‌‬‎⁪‬⁮⁫⁫⁭‪‭‪‮⁫⁬‭‪‌‎‌‌⁫‮.\u202D⁯​‪‮⁫‭⁮‭⁭⁬⁫‭​‪‪‮‍‫‬⁮‬‮‮‏‫‍‏​‪​⁯⁪​‍‭‮‏‫‪‮);
                if (!obj9.\u202E‮‬⁭⁮⁫‮‮⁭‎⁭⁭‭‬‌​‫⁯‍‭‌‍‫‪‍‏‮‌‏⁭‍⁫‎⁬‮‌⁫⁮​‌‮)
                  throw new Exception("Delta CRL contains unsupported critical extension.");
              }
            }
            flag = true;
          }
        }
        catch (Exception ex)
        {
          exception = ex;
        }
      }
      else
        break;
    }
    if (!flag)
      throw exception;
  }

  protected static void \u206A‎‪⁯‬⁫⁭‭‍‭‍⁪‮⁯‫⁫⁭‪‭‮⁬⁪‌‫​​‭⁯⁯⁪⁪‌⁪⁫⁯‏⁫⁭‪‫‮(
    \u206C⁫⁪‫‏‬⁫⁭⁬‏‬‎‫‏​⁫‏⁬‍⁫‌‭⁯⁬⁯‎‪⁬‬‭⁭‫⁭⁬‍‫‏⁯‫‭‮ _param0,
    \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ _param1,
    DateTime _param2,
    \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ _param3,
    \u206D⁬‬⁫‪‎⁭⁭‌​⁬‌⁯‍‍⁯⁭‬‫‪‭‏⁮‏‭‬‫⁮‌‏⁯‫‫⁫⁫‭⁭‏‌‍‮ _param4,
    IList _param5)
  {
    Exception exception = (Exception) null;
    \u202C‍‫‫⁫⁮⁯‮‮‪⁬‪⁬‎‎‪‌⁪⁬‎‭‍⁫‫‌⁫⁪⁯​‭⁫‬‏‎‫‮‫‏‍‫‮ obj1;
    try
    {
      obj1 = \u202C‍‫‫⁫⁮⁯‮‮‪⁬‪⁬‎‎‪‌⁪⁬‎‭‍⁫‫‌⁫⁪⁯​‭⁫‬‏‎‫‮‫‏‍‫‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200D⁭‫⁪‬⁪‬‫‬‏‮‏⁪‮‍⁫​‪‬‎⁪⁪‌‭⁫​⁯⁪⁬‫⁯​‌‎‪‌⁪⁫⁮‫‮((\u200C‮⁭‍⁭⁬⁯⁯‬⁮‏⁭‬⁬⁫‍‮‪‫⁪⁬‎‍‬‭​‪⁫‪‭‫‍‏‫‭⁬‎‮​⁪‮) _param1, \u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u200C⁬‍‍‏‎‬⁮⁫​‏⁯⁯⁭‏‎⁫⁮‎‮‍‪⁭⁬⁫‍‪⁮‪​‫⁫⁯⁫⁪⁮⁪‍⁯‭‮));
    }
    catch (Exception ex)
    {
      throw new Exception("CRL distribution point extension could not be read.", ex);
    }
    try
    {
      \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200B‌‎‎‎‬‏​⁭‫​​‏⁭⁪‍‭‭⁭‫​‌⁪​‭⁮⁪​⁮‮‬‫⁬⁬⁮‫⁭⁬‍‭‮(obj1, _param0);
    }
    catch (Exception ex)
    {
      throw new Exception("No additional CRL locations could be decoded from CRL distribution point extension.", ex);
    }
    \u200D⁭⁬⁭⁪‬⁮⁫⁮⁭‬‫⁯⁬⁮‎‍‮‏⁫⁫‍‬⁬‮‏⁭‬‬‫⁮⁫⁯‍‌⁪‍⁮‏‍‮ obj2 = new \u200D⁭⁬⁭⁪‬⁮⁫⁮⁭‬‫⁯⁬⁮‎‍‮‏⁫⁫‍‬⁬‮‏⁭‬‬‫⁮⁫⁯‍‌⁪‍⁮‏‍‮();
    \u206B‬⁮‬⁮⁪‍‭⁭‌⁮‎⁮‪⁬‪​⁬‏⁯‫⁮‪‮‎‍‍‮‍‫⁫‌⁪‮⁫‌‬‫‏‬‮ obj3 = new \u206B‬⁮‬⁮⁪‍‭⁭‌⁮‎⁮‪⁬‪​⁬‏⁯‫⁮‪‮‎‍‍‮‍‫⁫‌⁪‮⁫‌‬‫‏‬‮();
    bool flag = false;
    if (obj1 != null)
    {
      \u202B‌‌‪⁮‬⁫⁮‮⁯‎‌‌‍⁪‏‎‪‬⁪⁭⁪⁪⁭‮‫‮⁬‌⁭‭⁫‎⁮⁬⁫‪‪⁪⁭‮[] objArray;
      try
      {
        objArray = obj1.\u206C‫‪‎‪‌​‏⁬⁪‮⁯‍‍‌‌⁯‍⁯‍​‫‪‫‮‬‌‍‎⁯‏‪⁪‭​‫⁫‏⁪‪‮();
      }
      catch (Exception ex)
      {
        throw new Exception("Distribution points could not be read.", ex);
      }
      if (objArray != null)
      {
        for (int index = 0; index < objArray.Length && obj2.\u202A‪⁭‪⁪‎‌⁫⁭‬⁯‭⁯‎⁯‮⁭⁫⁪‌‍⁭‍⁮‭⁫⁬‭‬⁬⁫‍‭⁫⁫⁮‎⁬‫⁪‮ == 11 && !obj3.\u206B‪‎‪‎‍‭​‭⁭⁭‮‭‎‪‎‪‬‎‬⁫‎‭⁬‍‭⁪‮⁫⁬⁫⁮⁪​⁯‪‍‫‏⁭‮; ++index)
        {
          \u206C⁫⁪‫‏‬⁫⁭⁬‏‬‎‫‏​⁫‏⁬‍⁫‌‭⁯⁬⁯‎‪⁬‬‭⁭‫⁭⁬‍‫‏⁯‫‭‮ obj4 = (\u206C⁫⁪‫‏‬⁫⁭⁬‏‬‎‫‏​⁫‏⁬‍⁫‌‭⁯⁬⁯‎‪⁬‬‭⁭‫⁭⁬‍‫‏⁯‫‭‮) _param0.\u206F‬⁯‪⁬⁮⁭⁮‮‭‬‌‌‎⁪⁫‍‭‍‮‌⁬‮‏‍‪‬‮⁯‫‪‭‬⁭‏⁮⁯​‮⁬‮();
          try
          {
            \u202B‎⁮‏⁫⁭⁮‪‭​‫⁬⁬⁭‮‮‫‏​‭⁫⁭‮⁫‬⁫‎⁯‪⁫‮‮⁮​‎‏‏‭⁫‬‮.\u206D⁭‬‌‬⁭‫‌⁪⁬‪⁫⁫⁮‮‏​‭⁪‮⁫⁯⁬⁮‏‏‪‌‪‏‫‎‫‮⁯‮‍‌‮‎‮(objArray[index], obj4, _param1, _param2, _param3, _param4, obj2, obj3, _param5);
            flag = true;
          }
          catch (Exception ex)
          {
            exception = ex;
          }
        }
      }
    }
    if (obj2.\u202A‪⁭‪⁪‎‌⁫⁭‬⁯‭⁯‎⁯‮⁭⁫⁪‌‍⁭‍⁮‭⁫⁬‭‬⁬⁫‍‭⁫⁫⁮‎⁬‫⁪‮ == 11)
    {
      if (!obj3.\u206B‪‎‪‎‍‭​‭⁭⁭‮‭‎‪‎‪‬‎‬⁫‎‭⁬‍‭⁪‮⁫⁬⁫⁮⁪​⁯‪‍‫‏⁭‮)
      {
        try
        {
          \u202C​‭‬‌‏‎‬‎⁭‬⁯‪‮​​‏‎‍‌⁬⁭‎‍⁬⁫‎⁮⁮‮⁫⁬‭‍⁫⁭⁮‬⁮⁭‮ obj5;
          try
          {
            obj5 = \u202C​‭‬‌‏‎‬‎⁭‬⁯‪‮​​‏‎‍‌⁬⁭‎‍⁬⁫‎⁮⁮‮⁫⁬‭‍⁫⁭⁮‬⁮⁭‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) _param1.\u200B‌‭⁮‭⁮‮⁬‭‏⁮⁯​⁪‍⁮​⁭‏‮‎‭⁭⁭⁭⁭⁮‍‍‍⁭⁪​‌​⁮⁪⁭⁫‏‮.GetEncoded());
          }
          catch (Exception ex)
          {
            throw new Exception("Issuer from certificate for CRL could not be reencoded.", ex);
          }
          \u202B‎⁮‏⁫⁭⁮‪‭​‫⁬⁬⁭‮‮‫‏​‭⁫⁭‮⁫‬⁫‎⁯‪⁫‮‮⁮​‎‏‏‭⁫‬‮.\u206D⁭‬‌‬⁭‫‌⁪⁬‪⁫⁫⁮‮‏​‭⁪‮⁫⁯⁬⁮‏‏‪‌‪‏‫‎‫‮⁯‮‍‌‮‎‮(new \u202B‌‌‪⁮‬⁫⁮‮⁯‎‌‌‍⁪‏‎‪‬⁪⁭⁪⁪⁭‮‫‮⁬‌⁭‭⁫‎⁮⁬⁫‪‪⁪⁭‮(new \u200D⁮⁫⁯‬​⁭⁪‏‬‬‮⁬‍⁭‎⁪‍⁬⁯⁬‎⁪‪⁪‮⁯‮‬‍‮‪‎⁮‬‪‍⁪‫‍‮(0, (Asn1Encodable) new \u206F⁭‌‫⁬‎‎‏​‎⁯‎‬‎⁬‫‫‭‫⁬‮‌⁭‎⁪​‍‮⁮⁭‍‍⁬​⁯⁭‪⁪‬‌‮(new \u200E‍⁬⁪‮⁫⁬‬⁬⁯‏‎⁬‏⁪‪⁪⁪‮⁬‍‎‎‌‭‮‭⁭‎‫​‎⁯⁬​‭⁮‏‎‏‮(4, (Asn1Encodable) obj5))), (\u202C⁯⁮‮​‌‌‌‍⁪⁪‮‮⁬‭​⁮‪‫‎‎‏⁫⁭⁪⁪‬‪‏‭⁪‮⁯⁫‪‪⁯​‭‮) null, (\u206F⁭‌‫⁬‎‎‏​‎⁯‎‬‎⁬‫‫‭‫⁬‮‌⁭‎⁪​‍‮⁮⁭‍‍⁬​⁯⁭‪⁪‬‌‮) null), (\u206C⁫⁪‫‏‬⁫⁭⁬‏‬‎‫‏​⁫‏⁬‍⁫‌‭⁯⁬⁯‎‪⁬‬‭⁭‫⁭⁬‍‫‏⁯‫‭‮) _param0.\u206F‬⁯‪⁬⁮⁭⁮‮‭‬‌‌‎⁪⁫‍‭‍‮‌⁬‮‏‍‪‬‮⁯‫‪‭‬⁭‏⁮⁯​‮⁬‮(), _param1, _param2, _param3, _param4, obj2, obj3, _param5);
          flag = true;
        }
        catch (Exception ex)
        {
          exception = ex;
        }
      }
    }
    if (!flag)
      throw exception;
    if (obj2.\u202A‪⁭‪⁪‎‌⁫⁭‬⁯‭⁯‎⁯‮⁭⁫⁪‌‍⁭‍⁮‭⁫⁬‭‬⁬⁫‍‭⁫⁫⁮‎⁬‫⁪‮ != 11)
      throw new Exception("Certificate revocation after " + obj2.\u206A‎‪‭​⁯‍‏‍‪‫⁯⁫‮‎⁫⁭‪‏​‪‭‎‎⁯‌​​‬‫​‭‏⁬⁯‍⁯‬‭⁮‮.\u206C‬⁪‬‫​⁪‮‏⁭‏‬‏‭⁭‬‫‍⁮‌‪‌‍‮‮‪‪⁪​⁯‎‫⁮‭⁪‍‌‫⁫‮‮.ToString("ddd MMM dd HH:mm:ss K yyyy") + ", reason: " + \u202B‎⁮‏⁫⁭⁮‪‭​‫⁬⁬⁭‮‮‫‏​‭⁫⁭‮⁫‬⁫‎⁯‪⁫‮‮⁮​‎‏‏‭⁫‬‮.\u206C‫⁬‬⁫⁭‮‌‬⁬​‍‏⁮‫‭⁫⁫⁮‍⁬⁭⁫‪⁯‍‍⁭⁬⁭‏⁪⁪‍⁫​‫⁪‍‫‮[obj2.\u202A‪⁭‪⁪‎‌⁫⁭‬⁯‭⁯‎⁯‮⁭⁫⁪‌‍⁭‍⁮‭⁫⁬‭‬⁬⁫‍‭⁫⁫⁮‎⁬‫⁪‮]);
    if (!obj3.\u206B‪‎‪‎‍‭​‭⁭⁭‮‭‎‪‎‪‬‎‬⁫‎‭⁬‍‭⁪‮⁫⁬⁫⁮⁪​⁯‪‍‫‏⁭‮ && obj2.\u202A‪⁭‪⁪‎‌⁫⁭‬⁯‭⁯‎⁯‮⁭⁫⁪‌‍⁭‍⁮‭⁫⁬‭‬⁬⁫‍‭⁫⁫⁮‎⁬‫⁪‮ == 11)
      obj2.\u202A‪⁭‪⁪‎‌⁫⁭‬⁯‭⁯‎⁯‮⁭⁫⁪‌‍⁭‍⁮‭⁫⁬‭‬⁬⁫‍‭⁫⁫⁮‎⁬‫⁪‮ = 12;
    if (obj2.\u202A‪⁭‪⁪‎‌⁫⁭‬⁯‭⁯‎⁯‮⁭⁫⁪‌‍⁭‍⁮‭⁫⁬‭‬⁬⁫‍‭⁫⁫⁮‎⁬‫⁪‮ == 12)
      throw new Exception("Certificate status could not be determined.");
  }

  internal static \u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ \u200C⁫⁪‍⁭⁪‮‌⁪‎‬⁫‍‎‏⁫‏‎‍⁮‎⁮‍⁫‪⁪‬⁮‎‬‬‏‬‫‬‬‫‬‌‭‮(
    \u206F⁬⁫⁪⁪⁪‬​‬⁬‮⁭⁯‪‍‌⁬⁬‍‫‬‏⁯‬​‌‎⁮​‫⁪‌‎‍‫‏⁭⁪‍⁯‮ _param0,
    int _param1,
    IList[] _param2,
    \u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ _param3,
    int _param4)
  {
    IList list = _param0.\u202B‪‏⁫‮⁬⁪⁪‪⁬‍‪‏⁭‬‏‍‪‎‍‫‪⁭‌‎‍⁯‫‌‬‫‌‍⁯‮‪⁯⁬⁫⁪‮;
    \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ obj1 = (\u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮) list[_param1];
    int index1 = list.Count - _param1;
    \u206A‬⁪⁯​⁯‍⁭⁯‮‎‮⁫​‎‬‌‌‏⁪‍⁫‏​⁫​‪​⁯⁫⁮⁯‮​⁬‎‫‌‌⁯‮ obj2;
    try
    {
      obj2 = \u206A‬⁪⁯​⁯‍⁭⁯‮‎‮⁫​‎‬‌‌‏⁪‍⁫‏​⁫​‪​⁯⁫⁮⁯‮​⁬‎‫‌‌⁯‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200D⁭‫⁪‬⁪‬‫‬‏‮‏⁪‮‍⁫​‪‬‎⁪⁪‌‭⁫​⁯⁪⁬‫⁯​‌‎‪‌⁪⁫⁮‫‮((\u200C‮⁭‍⁭⁬⁯⁯‬⁮‏⁭‬⁬⁫‍‮‪‫⁪⁬‎‍‬‭​‪⁫‪‭‫‍‏‫‭⁬‎‮​⁪‮) obj1, \u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u206A⁭⁭⁯‌‌‍‮⁪⁯‮‍⁫‌‫⁫‬⁫‌⁯⁭‎⁮⁫‬‎‭⁬‬‏‭‫‍⁭‭‭‫⁪‌‬‮));
    }
    catch (Exception ex)
    {
      throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Policy mappings extension could not be decoded.", ex, _param0, _param1);
    }
    \u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ obj3 = _param3;
    if (obj2 != null)
    {
      \u206A‬⁪⁯​⁯‍⁭⁯‮‎‮⁫​‎‬‌‌‏⁪‍⁫‏​⁫​‪​⁯⁫⁮⁯‮​⁬‎‫‌‌⁯‮ obj4 = obj2;
      IDictionary dictionary = \u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u206D‬⁫‏‮‎‪‏‫⁪⁬⁭‭⁯⁯‎‫‪⁫‫⁯‌⁯​⁬‍‍⁮‪⁫‮‫‎‬‌⁮‎⁪‎‬‮();
      \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ obj5 = (\u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮) new \u202B​⁮⁭⁯‎⁫⁮⁪‭‭⁭⁮‍‎‌⁯‫⁫‎​⁫​‪‬‬‍⁫⁬‎‫⁪‏‌⁪​‪‎‮⁮‮();
      for (int index2 = 0; index2 < obj4.\u200E‪‌‮‪‏⁬‮‫​‪⁪‎⁫‏‭⁭⁭‍⁮‌‬⁪‪⁪‪‎⁭⁯⁭‌‭‪⁪‬‮‬‎​‬‮; ++index2)
      {
        \u206A‬⁪⁯​⁯‍⁭⁯‮‎‮⁫​‎‬‌‌‏⁪‍⁫‏​⁫​‪​⁯⁫⁮⁯‮​⁬‎‫‌‌⁯‮ obj6 = (\u206A‬⁪⁯​⁯‍⁭⁯‮‎‮⁫​‎‬‌‌‏⁪‍⁫‏​⁫​‪​⁯⁫⁮⁯‮​⁬‎‫‌‌⁯‮) obj4.\u200E‪⁪‮⁮⁭⁯‏​‬⁫⁯‍‭‪‫⁫‏‌⁪⁬‪‫⁯‎⁪‌⁫‭⁫‫⁫‌​‭⁯‫​⁯‭‮(index2);
        string key = ((\u202D‎‮‏‬⁮‎⁭⁬⁪‪⁬⁬‍⁭‎‎‫​‌⁪⁯⁪‮‪‏⁪⁪‫⁮‍​⁭⁪⁭⁯‏‍‭⁫‮) obj6.\u200E‪⁪‮⁮⁭⁯‏​‬⁫⁯‍‭‪‫⁫‏‌⁪⁬‪‫⁯‎⁪‌⁫‭⁫‫⁫‌​‭⁯‫​⁯‭‮(0)).\u202D⁯​‪‮⁫‭⁮‭⁭⁬⁫‭​‪‪‮‍‫‬⁮‬‮‮‏‫‍‏​‪​⁯⁪​‍‭‮‏‫‪‮;
        string str = ((\u202D‎‮‏‬⁮‎⁭⁬⁪‪⁬⁬‍⁭‎‎‫​‌⁪⁯⁪‮‪‏⁪⁪‫⁮‍​⁭⁪⁭⁯‏‍‭⁫‮) obj6.\u200E‪⁪‮⁮⁭⁯‏​‬⁫⁯‍‭‪‫⁫‏‌⁪⁬‪‫⁯‎⁪‌⁫‭⁫‫⁫‌​‭⁯‫​⁯‭‮(1)).\u202D⁯​‪‮⁫‭⁮‭⁭⁬⁫‭​‪‪‮‍‫‬⁮‬‮‮‏‫‍‏​‪​⁯⁪​‍‭‮‏‫‪‮;
        if (!dictionary.Contains((object) key))
        {
          \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ obj7 = (\u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮) new \u202B​⁮⁭⁯‎⁫⁮⁪‭‭⁭⁮‍‎‌⁯‫⁫‎​⁫​‪‬‬‍⁫⁬‎‫⁪‏‌⁪​‪‎‮⁮‮();
          obj7.\u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮((object) str);
          dictionary[(object) key] = (object) obj7;
          obj5.\u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮((object) key);
        }
        else
          ((\u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮) dictionary[(object) key]).\u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮((object) str);
      }
      foreach (string key in (IEnumerable) obj5)
      {
        if (_param4 > 0)
        {
          bool flag1 = false;
          foreach (\u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ obj8 in (IEnumerable) _param2[index1])
          {
            if (obj8.\u206D‭⁯‭‌⁭‏‍‬‌⁪‫⁫​⁭‭‍‬⁪⁯‏‌‍⁭‌⁮⁭‎‏⁮⁫⁯⁫​⁫‫⁬⁭‏⁪‮.Equals(key))
            {
              flag1 = true;
              obj8.\u202D⁮​‫‬⁪‎‏⁮⁪⁫⁪​‮‪‍⁮‪⁮‎‌⁫⁮⁬‬⁬⁫‍‭⁪‫​‫‮‬⁪‬‏‌‎‮ = (\u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮) dictionary[(object) key];
              break;
            }
          }
          if (!flag1)
          {
            foreach (\u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ obj9 in (IEnumerable) _param2[index1])
            {
              if (\u202B‎⁮‏⁫⁭⁮‪‭​‫⁬⁬⁭‮‮‫‏​‭⁫⁭‮⁫‬⁫‎⁯‪⁫‮‮⁮​‎‏‏‭⁫‬‮.\u202D‍⁮‬‪​‏‎⁫⁭⁪‪⁪‭⁮⁮‍⁭‍‏‪​‭‍⁪⁫⁬‪‬‪⁭‌​‎‭‬​⁮⁭‮.Equals(obj9.\u206D‭⁯‭‌⁭‏‍‬‌⁪‫⁫​⁭‭‍‬⁪⁯‏‌‍⁭‌⁮⁭‎‏⁮⁫⁯⁫​⁫‫⁬⁭‏⁪‮))
              {
                \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ obj10 = (\u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮) null;
                \u206A‬⁪⁯​⁯‍⁭⁯‮‎‮⁫​‎‬‌‌‏⁪‍⁫‏​⁫​‪​⁯⁫⁮⁯‮​⁬‎‫‌‌⁯‮ obj11;
                try
                {
                  obj11 = (\u206A‬⁪⁯​⁯‍⁭⁯‮‎‮⁫​‎‬‌‌‏⁪‍⁫‏​⁫​‪​⁯⁫⁮⁯‮​⁬‎‫‌‌⁯‮) \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200D⁭‫⁪‬⁪‬‫‬‏‮‏⁪‮‍⁫​‪‬‎⁪⁪‌‭⁫​⁯⁪⁬‫⁯​‌‎‪‌⁪⁫⁮‫‮((\u200C‮⁭‍⁭⁬⁯⁯‬⁮‏⁭‬⁬⁫‍‮‪‫⁪⁬‎‍‬‭​‪⁫‪‭‫‍‏‫‭⁬‎‮​⁪‮) obj1, \u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u200C​⁬‏⁮‎‎‬‏⁫‏‎⁯⁮‬‪‪⁭‭⁪‬⁮‭⁪⁬⁯‎⁪‭⁪‬⁬⁯‍‎⁮⁮‌‍‮‮);
                }
                catch (Exception ex)
                {
                  throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Certificate policies extension could not be decoded.", ex, _param0, _param1);
                }
                foreach (Asn1Encodable asn1Encodable in obj11)
                {
                  \u202B⁬​⁬‭‮⁮⁭‌‪⁮‍⁮⁮‎‭⁪⁮‭⁮‍⁮⁬‎⁮⁭‪⁯‮‮‭‫‬⁯⁯⁭‌‬‭‬‮ obj12;
                  try
                  {
                    obj12 = \u202B⁬​⁬‭‮⁮⁭‌‪⁮‍⁮⁮‎‭⁪⁮‭⁮‍⁮⁬‎⁮⁭‪⁯‮‮‭‫‬⁯⁯⁭‌‬‭‬‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) asn1Encodable.ToAsn1Object());
                  }
                  catch (Exception ex)
                  {
                    throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Policy information could not be decoded.", ex, _param0, _param1);
                  }
                  if (\u202B‎⁮‏⁫⁭⁮‪‭​‫⁬⁬⁭‮‮‫‏​‭⁫⁭‮⁫‬⁫‎⁯‪⁫‮‮⁮​‎‏‏‭⁫‬‮.\u202D‍⁮‬‪​‏‎⁫⁭⁪‪⁪‭⁮⁮‍⁭‍‏‪​‭‍⁪⁫⁬‪‬‪⁭‌​‎‭‬​⁮⁭‮.Equals(obj12.\u206C⁭⁫‌⁯⁫‪⁬‭⁪‭‏‌‪⁯‮‫‍⁮‮⁬⁫‌‬⁬‫‏‏‏‪⁫‬⁯‫‮‬⁭⁭⁬⁫‮.\u202D⁯​‪‮⁫‭⁮‭⁭⁬⁫‭​‪‪‮‍‫‬⁮‬‮‮‏‫‍‏​‪​⁯⁪​‍‭‮‏‫‪‮))
                  {
                    try
                    {
                      obj10 = \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u206E‌​‬⁯‪‎‍​⁫‏⁮‮‍‬⁭⁪⁫⁯⁯​⁮‮‭⁮⁯‫⁯‫​⁪‪⁪​‫‪⁯⁬⁯‭‮(obj12.\u206F⁮⁬‭‬‭‌‌⁬⁬⁪⁮⁬‍⁫‏⁫‫⁯⁪‫‮‌‭​​⁬‭‌⁯‮‏‮‫⁭⁭‎⁫​⁫‮);
                      break;
                    }
                    catch (\u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮ ex)
                    {
                      throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Policy qualifier info set could not be decoded.", (Exception) ex, _param0, _param1);
                    }
                  }
                }
                bool flag2 = false;
                \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ obj13 = obj1.\u206E‍‌⁫‏⁮‪‭‍⁭⁯‍‌⁬‌⁫⁯​​⁮‬⁭‫‭‫⁪⁯⁫‍‏⁬‏⁮‎⁭⁪‭‫⁮‮();
                if (obj13 != null)
                  flag2 = obj13.\u200E‪‏⁭‍⁭⁪‫‍‏‍‮⁮‬‌⁬⁫⁪‮‫⁯‮‮‭⁬⁯‮‭​⁭‫‪‮‫‎⁬⁮⁭⁭‍‮((object) \u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u200C​⁬‏⁮‎‎‬‏⁫‏‎⁯⁮‬‪‪⁭‭⁪‬⁮‭⁪⁬⁯‎⁪‭⁪‬⁬⁯‍‎⁮⁮‌‍‮‮.\u202D⁯​‪‮⁫‭⁮‭⁭⁬⁫‭​‪‪‮‍‫‬⁮‬‮‮‏‫‍‏​‪​⁯⁪​‍‭‮‏‫‪‮);
                \u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ obj14 = obj9.\u200F‫‏‍⁮⁭‪‌⁭⁪‏​‏​‫‪‌‮‍‎⁭⁪‬​⁬‭‬‍‌⁫‫⁬⁭⁮⁮⁫‎⁫⁫‎‮;
                if (\u202B‎⁮‏⁫⁭⁮‪‭​‫⁬⁬⁭‮‮‫‏​‭⁫⁭‮⁫‬⁫‎⁯‪⁫‮‮⁮​‎‏‏‭⁫‬‮.\u202D‍⁮‬‪​‏‎⁫⁭⁪‪⁪‭⁮⁮‍⁭‍‏‪​‭‍⁪⁫⁬‪‬‪⁭‌​‎‭‬​⁮⁭‮.Equals(obj14.\u206D‭⁯‭‌⁭‏‍‬‌⁪‫⁫​⁭‭‍‬⁪⁯‏‌‍⁭‌⁮⁭‎‏⁮⁫⁯⁫​⁫‫⁬⁭‏⁪‮))
                {
                  \u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ obj15 = new \u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮(\u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u200C⁮‬‎⁪‌⁮‬​⁬⁭​‏⁮​‍‌⁮‮⁪⁪⁫‪‫‎⁮‎⁬​​‏⁪‪‍‬‪⁬⁫⁪‏‮(), index1, (\u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮) dictionary[(object) key], obj14, obj10, key, flag2);
                  obj14.\u202B‭‬⁪​‭⁬‪⁫⁮‫​‭‭⁭‫⁪‌⁫‫‌‬‎‬⁪‬‫⁭⁯‬‏⁫⁭⁫‍‪⁮​‎‭‮(obj15);
                  _param2[index1].Add((object) obj15);
                  break;
                }
                break;
              }
            }
          }
        }
        else if (_param4 <= 0)
        {
          foreach (\u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ obj16 in (IEnumerable) \u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u200C⁮‬‎⁪‌⁮‬​⁬⁭​‏⁮​‍‌⁮‮⁪⁪⁫‪‫‎⁮‎⁬​​‏⁪‪‍‬‪⁬⁫⁪‏‮((ICollection) _param2[index1]))
          {
            if (obj16.\u206D‭⁯‭‌⁭‏‍‬‌⁪‫⁫​⁭‭‍‬⁪⁯‏‌‍⁭‌⁮⁭‎‏⁮⁫⁯⁫​⁫‫⁬⁭‏⁪‮.Equals(key))
            {
              obj16.\u200F‫‏‍⁮⁭‪‌⁭⁪‏​‏​‫‪‌‮‍‎⁭⁪‬​⁬‭‬‍‌⁫‫⁬⁭⁮⁮⁫‎⁫⁫‎‮.\u206A⁮‪‬⁫⁫⁯‫⁯⁯‎‭​‍‪⁪‫‬‫⁫⁬‍‮⁪‍⁬‌⁬⁯‬‌‏⁫⁯‪‬‪‮⁯⁪‮(obj16);
              for (int index3 = index1 - 1; index3 >= 0; --index3)
              {
                foreach (\u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ obj17 in (IEnumerable) \u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u200C⁮‬‎⁪‌⁮‬​⁬⁭​‏⁮​‍‌⁮‮⁪⁪⁫‪‫‎⁮‎⁬​​‏⁪‪‍‬‪⁬⁫⁪‏‮((ICollection) _param2[index3]))
                {
                  if (!obj17.\u200F‎‮⁭⁫‮‭​‮‍‎‌⁭‌‎⁪‭‬‭‭‪‪⁭‮‍⁬⁬‏‏‭‪‍‬‮⁭⁯‏‬‏⁯‮)
                  {
                    obj3 = \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200B‎‬⁭‌⁯⁮‫‪⁭‍‌⁬⁯‎‪‫​‏‌‎‭⁮⁬‭⁭⁭‪⁬‎‮⁫​‫‫⁬‪⁮​‫‮(obj3, _param2, obj17);
                    if (obj3 == null)
                      break;
                  }
                }
              }
            }
          }
        }
      }
    }
    return obj3;
  }

  internal static \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮[] \u200F⁬‭⁬‎‫‫‭⁫‌‪‏‏‎‍‬​‫‌⁪‌‫⁪‭​‍​⁯‏‫‪⁫⁯‍⁮‮‬⁬‪‭‮(
    DateTime _param0,
    \u206C⁫⁪‫‏‬⁫⁭⁬‏‬‎‫‏​⁫‏⁬‍⁫‌‭⁯⁬⁯‎‪⁬‬‭⁭‫⁭⁬‍‫‏⁯‫‭‮ _param1,
    \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ _param2,
    \u200D‍​⁬‎‮⁮⁭⁮‌‎‭‮‎‍⁪⁬⁬‍⁬‎​⁯‭⁮‫‎‪⁭⁫‌⁮⁬‭‪‪‎⁪⁯⁪‮ _param3)
  {
    \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ obj1 = (\u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮) new \u202B​⁮⁭⁯‎⁫⁮⁪‭‭⁭⁮‍‎‌⁯‫⁫‎​⁫​‪‬‬‍⁫⁬‎‫⁪‏‌⁪​‪‎‮⁮‮();
    \u202E‌​‮‌‪⁭⁭‫‫‭​⁯‮​⁪⁬⁪‪⁫⁭‍⁯‍⁯‪‬⁯⁭‭‭⁮‌​‍⁬‍‪⁫‏‮ obj2 = new \u202E‌​‮‌‪⁭⁭‫‫‭​⁯‮​⁪⁬⁪‪⁫⁭‍⁯‍⁯‪‬⁯⁭‭‭⁮‌​‍⁬‍‪⁫‏‮();
    obj2.\u202A‬‏⁯‭⁭⁭‫‭‭​‪‏⁭‫‬‌⁭⁭⁮‍⁫⁮⁮‪⁮‪‎​‮‫⁯‍⁭⁬⁮‭⁬‪⁫‮ = _param2;
    try
    {
      IList list = \u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u200C⁮‬‎⁪‌⁮‬​⁬⁭​‏⁮​‍‌⁮‮⁪⁪⁫‪‫‎⁮‎⁬​​‏⁪‪‍‬‪⁬⁫⁪‏‮();
      list.Add((object) _param3.\u200B‌‭⁮‭⁮‮⁬‭‏⁮⁯​⁪‍⁮​⁭‏‮‎‭⁭⁭⁭⁭⁮‍‍‍⁭⁪​‌​⁮⁪⁭⁫‏‮);
      obj2.\u200D‎⁯​⁮‍‏⁯⁬​⁭⁭⁯‭‍⁫‮​⁫⁮‪⁪‍‪‬‪​‎‍‮‬⁫⁫‮‏‍‪‫‎‮‮ = (ICollection) list;
    }
    catch (IOException ex)
    {
      throw new Exception("Cannot extract issuer from CRL." + ex?.ToString(), (Exception) ex);
    }
    obj2.\u206D⁮⁭‍⁭‬‏⁯‌⁫⁬‪‬‍‮‎‏‎‍‪⁪‎‎⁬‫​⁮‏‏‌‭⁮‍‭‫‍‏‏‭⁯‮ = true;
    \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ obj3 = \u202B‎⁮‏⁫⁭⁮‪‭​‫⁬⁬⁭‮‮‫‏​‭⁫⁭‮⁫‬⁫‎⁯‪⁫‮‮⁮​‎‏‏‭⁫‬‮.\u202E​‪⁮‬‮​‪⁭​⁯⁫‬⁬⁪‌⁮‮‮‍⁪‍⁭‫‬⁬‎‎⁫⁯‎‌⁬‬‬⁯‌⁯‭⁫‮.\u200E‪⁬‏⁬‏‎⁬⁪‌⁯‎‫‌‎‮​⁪‬⁯‮‌⁯‮⁫⁯‭‪⁬⁪‭‍⁯⁯‫‭⁫‎‍‍‮(obj2, _param1, _param0);
    if (_param1.\u202A⁭‫‭⁮‫‭⁬⁯⁫‭‫⁭⁮⁫⁯⁫⁯‬⁮‏‎⁫‭‭‌⁪‬‫⁬‌‫⁮⁮‪‭‬‭⁪⁪‮)
    {
      try
      {
        obj1.\u206C‮‍‫‌⁫⁮⁯⁫⁪⁫‮⁭‎‮​‬⁯‬‮⁯⁫⁪‏‍‬‪‎⁫‭‫‎⁮⁮‮‌‎‮‌⁯‮((IEnumerable) \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u206C⁪‬⁭‎‏‬⁮‎‏⁮‭‬⁭⁯⁭‎‌‪⁬‪‍⁫⁮‮‫‫‬⁮‌‎‍‫‪⁬⁮‭‍‮‍‮(_param0, _param1, _param3));
      }
      catch (Exception ex)
      {
        throw new Exception("Exception obtaining delta CRLs.", ex);
      }
    }
    return new \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮[2]
    {
      obj3,
      obj1
    };
  }

  internal static \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ \u202A⁬⁪⁭‎‪‏‏‌‬⁯‍‎⁭‮‭‬‮⁬⁭⁮⁫‫‫‭​‭⁯​‪⁭⁪⁭‎‍⁯‫⁪‏⁭‮(
    DateTime _param0,
    \u206C⁫⁪‫‏‬⁫⁭⁬‏‬‎‫‏​⁫‏⁬‍⁫‌‭⁯⁬⁯‎‪⁬‬‭⁭‫⁭⁬‍‫‏⁯‫‭‮ _param1,
    \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ _param2,
    \u200D‍​⁬‎‮⁮⁭⁮‌‎‭‮‎‍⁪⁬⁬‍⁬‎​⁯‭⁮‫‎‪⁭⁫‌⁮⁬‭‪‪‎⁪⁯⁪‮ _param3)
  {
    \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ obj1 = (\u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮) new \u202B​⁮⁭⁯‎⁫⁮⁪‭‭⁭⁮‍‎‌⁯‫⁫‎​⁫​‪‬‬‍⁫⁬‎‫⁪‏‌⁪​‪‎‮⁮‮();
    if (_param1.\u202A⁭‫‭⁮‫‭⁬⁯⁫‭‫⁭⁮⁫⁯⁫⁯‬⁮‏‎⁫‭‭‌⁪‬‫⁬‌‫⁮⁮‪‭‬‭⁪⁪‮)
    {
      \u202C‍‫‫⁫⁮⁯‮‮‪⁬‪⁬‎‎‪‌⁪⁬‎‭‍⁫‫‌⁫⁪⁯​‭⁫‬‏‎‫‮‫‏‍‫‮ obj2;
      try
      {
        obj2 = \u202C‍‫‫⁫⁮⁯‮‮‪⁬‪⁬‎‎‪‌⁪⁬‎‭‍⁫‫‌⁫⁪⁯​‭⁫‬‏‎‫‮‫‏‍‫‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200D⁭‫⁪‬⁪‬‫‬‏‮‏⁪‮‍⁫​‪‬‎⁪⁪‌‭⁫​⁯⁪⁬‫⁯​‌‎‪‌⁪⁫⁮‫‮((\u200C‮⁭‍⁭⁬⁯⁯‬⁮‏⁭‬⁬⁫‍‮‪‫⁪⁬‎‍‬‭​‪⁫‪‭‫‍‏‫‭⁬‎‮​⁪‮) _param2, \u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u206A⁭‪⁪‎⁫‍‌⁬⁪⁯‭‭‪‮​⁪‍⁬‮‭‭‬⁯‫‏‍‍‪‮‮⁫​‍⁪‬⁪‎⁯‪‮));
      }
      catch (Exception ex)
      {
        throw new Exception("Freshest CRL extension could not be decoded from certificate.", ex);
      }
      if (obj2 == null)
      {
        try
        {
          obj2 = \u202C‍‫‫⁫⁮⁯‮‮‪⁬‪⁬‎‎‪‌⁪⁬‎‭‍⁫‫‌⁫⁪⁯​‭⁫‬‏‎‫‮‫‏‍‫‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200D⁭‫⁪‬⁪‬‫‬‏‮‏⁪‮‍⁫​‪‬‎⁪⁪‌‭⁫​⁯⁪⁬‫⁯​‌‎‪‌⁪⁫⁮‫‮((\u200C‮⁭‍⁭⁬⁯⁯‬⁮‏⁭‬⁬⁫‍‮‪‫⁪⁬‎‍‬‭​‪⁫‪‭‫‍‏‫‭⁬‎‮​⁪‮) _param3, \u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u206A⁭‪⁪‎⁫‍‌⁬⁪⁯‭‭‪‮​⁪‍⁬‮‭‭‬⁯‫‏‍‍‪‮‮⁫​‍⁪‬⁪‎⁯‪‮));
        }
        catch (Exception ex)
        {
          throw new Exception("Freshest CRL extension could not be decoded from CRL.", ex);
        }
      }
      if (obj2 != null)
      {
        try
        {
          \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200B‌‎‎‎‬‏​⁭‫​​‏⁭⁪‍‭‭⁭‫​‌⁪​‭⁮⁪​⁮‮‬‫⁬⁬⁮‫⁭⁬‍‭‮(obj2, _param1);
        }
        catch (Exception ex)
        {
          throw new Exception("No new delta CRL locations could be added from Freshest CRL extension.", ex);
        }
        try
        {
          obj1.\u206C‮‍‫‌⁫⁮⁯⁫⁪⁫‮⁭‎‮​‬⁯‬‮⁯⁫⁪‏‍‬‪‎⁫‭‫‎⁮⁮‮‌‎‮‌⁯‮((IEnumerable) \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u206C⁪‬⁭‎‏‬⁮‎‏⁮‭‬⁭⁯⁭‎‌‪⁬‪‍⁫⁮‮‫‫‬⁮‌‎‍‫‪⁬⁮‭‍‮‍‮(_param0, _param1, _param3));
        }
        catch (Exception ex)
        {
          throw new Exception("Exception obtaining delta CRLs.", ex);
        }
      }
    }
    return obj1;
  }

  internal static void \u200F‎‏​‌​⁯⁯‪⁫‎‍‬‍‫‍‍‬⁯‍​⁬‭‌⁫‬​‎⁯⁭⁭‍⁮​⁮⁬‪‌‬‬‮(
    \u206F⁬⁫⁪⁪⁪‬​‬⁬‮⁭⁯‪‍‌⁬⁬‍‫‬‏⁯‬​‌‎⁮​‫⁪‌‎‍‫‏⁭⁪‍⁯‮ _param0,
    int _param1,
    \u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ _param2,
    int _param3)
  {
    if (_param3 <= 0 && _param2 == null)
      throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("No valid policy tree found when one expected.", (Exception) null, _param0, _param1);
  }

  internal static void \u202A⁬⁫‪‭‍‫⁮⁬‏‎⁯⁪‍‮⁬‫‍⁭‬‬⁮‎‮‪⁫‌‮‬⁭​‫⁬⁮⁮‎‪‫⁭⁫‮(
    \u206F⁬⁫⁪⁪⁪‬​‬⁬‮⁭⁯‪‍‌⁬⁬‍‫‬‏⁯‬​‌‎⁮​‫⁪‌‎‍‫‏⁭⁪‍⁯‮ _param0,
    \u206C⁫⁪‫‏‬⁫⁭⁬‏‬‎‫‏​⁫‏⁬‍⁫‌‭⁯⁬⁯‎‪⁬‬‭⁭‫⁭⁬‍‫‏⁯‫‭‮ _param1,
    int _param2,
    \u206D⁬‬⁫‪‎⁭⁭‌​⁬‌⁯‍‍⁯⁭‬‫‪‭‏⁮‏‭‬‫⁮‌‏⁯‫‫⁫⁫‭⁭‏‌‍‮ _param3,
    \u202C​‭‬‌‏‎‬‎⁭‬⁯‪‮​​‏‎‍‌⁬⁭‎‍⁬⁫‎⁮⁮‮⁫⁬‭‍⁫⁭⁮‬⁮⁭‮ _param4,
    \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ _param5)
  {
    IList list = _param0.\u202B‪‏⁫‮⁬⁪⁪‪⁬‍‪‏⁭‬‏‍‪‎‍‫‪⁭‌‎‍⁯‫‌‬‫‌‍⁯‮‪⁯⁬⁫⁪‮;
    \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ obj1 = (\u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮) list[_param2];
    try
    {
      obj1.\u200F‌⁪⁬⁭⁪‭‍‌‫⁪‏‏‍‌⁫‌‍‏‬‌⁫‮⁬⁪‌‮‫⁪‏‎⁬‫‎⁬⁭‏⁬‮⁬‮(_param3);
    }
    catch (\u206D⁮‫‪‏‌‎⁮‬​‌‭‮‫‎⁭‮⁭‫⁪‎⁭‍⁬⁮‍‫⁫‪‎⁫⁫⁯‏⁪‭‎⁬⁫⁪‮ ex)
    {
      throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Could not validate certificate signature.", (Exception) ex, _param0, _param2);
    }
    try
    {
      obj1.\u200B⁫‍⁭‭⁫‭‌⁪‫⁬‎⁫‍‎‫⁬‭‍‭⁯‏‭⁬‪⁪‬‫‏‮‮⁯⁯⁫⁭‭⁮‌⁮⁯‮(\u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200E‪⁯⁫‌‪⁪⁫⁯⁭‮‍‪⁬‌‌‎‪‪‏‎⁪‭⁫⁭​⁫‭‎‫‌‌‪‎⁫‏‪‮⁫⁮‮(_param1, _param0, _param2));
    }
    catch (\u206F‏‭​⁮‮⁮⁭‌⁬⁯⁬⁪‏‪⁯‬⁫⁫‬⁮‫⁫⁪⁭‍⁫​‍‭‫⁮⁬‬​‬⁫⁯‍⁯‮ ex)
    {
      throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Could not validate certificate: " + ex.Message, (Exception) ex, _param0, _param2);
    }
    catch (\u206C‫⁯⁮‭⁫‍⁬​⁬⁭⁬‌‍‬⁭​‮‫‏‎​‫‫‬‮‫‭‫⁮⁭⁪⁬‫‏‎‍⁭‌‮‮ ex)
    {
      throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Could not validate certificate: " + ex.Message, (Exception) ex, _param0, _param2);
    }
    catch (Exception ex)
    {
      throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Could not validate time of certificate.", ex, _param0, _param2);
    }
    if (_param1.\u202C‎‫⁯⁫‪⁫⁭‬⁬⁪⁪‬‍‬‬⁬⁫‎​‮‌‏‮‏⁪⁫⁯​​‏‏‭‫⁫‏⁪⁫⁫‮)
    {
      try
      {
        \u202B‎⁮‏⁫⁭⁮‪‭​‫⁬⁬⁭‮‮‫‏​‭⁫⁭‮⁫‬⁫‎⁯‪⁫‮‮⁮​‎‏‏‭⁫‬‮.\u206A‎‪⁯‬⁫⁭‭‍‭‍⁪‮⁯‫⁫⁭‪‭‮⁬⁪‌‫​​‭⁯⁯⁪⁪‌⁪⁫⁯‏⁫⁭‪‫‮(_param1, obj1, \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200E‪⁯⁫‌‪⁪⁫⁯⁭‮‍‪⁬‌‌‎‪‪‏‎⁪‭⁫⁭​⁫‭‎‫‌‌‪‎⁫‏‪‮⁫⁮‮(_param1, _param0, _param2), _param5, _param3, list);
      }
      catch (Exception ex)
      {
        Exception exception = ex.InnerException ?? ex;
        throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮(ex.Message, exception, _param0, _param2);
      }
    }
    \u202C​‭‬‌‏‎‬‎⁭‬⁯‪‮​​‏‎‍‌⁬⁭‎‍⁬⁫‎⁮⁮‮⁫⁬‭‍⁫⁭⁮‬⁮⁭‮ obj2 = \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200B​⁫‎⁬​‪​‮‎‎‎⁫⁮⁬‏⁭⁮‫⁪‎‍‬⁪‍‭‎‭‍‌‫‭⁭‍​​‬​⁬‎‮((object) obj1);
    if (!obj2.\u202C⁮⁪⁫‪‫‮⁬⁮‏⁫‎‭‌⁬⁬​‏⁬‮‍‮‪⁬‪‌‫‌⁭‪⁪‪‫‫⁫‬‏⁯‭‮(_param4, true))
      throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("IssuerName(" + ((object) obj2)?.ToString() + ") does not match SubjectName(" + ((object) _param4)?.ToString() + ") of signing certificate.", (Exception) null, _param0, _param2);
  }

  internal static int \u206D‌⁯‬‭‍‍‌‍⁪⁭‬⁫​‏‬‌‌⁭‫‏‭‎‭‏‍‏⁯⁭⁮‍⁭‬‬‎‎⁭⁯⁭⁪‮(
    \u206F⁬⁫⁪⁪⁪‬​‬⁬‮⁭⁯‪‍‌⁬⁬‍‫‬‏⁯‬​‌‎⁮​‫⁪‌‎‍‫‏⁭⁪‍⁯‮ _param0,
    int _param1,
    int _param2)
  {
    \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ obj1 = (\u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮) _param0.\u202B‪‏⁫‮⁬⁪⁪‪⁬‍‪‏⁭‬‏‍‪‎‍‫‪⁭‌‎‍⁯‫‌‬‫‌‍⁯‮‪⁯⁬⁫⁪‮[_param1];
    \u206A‬⁪⁯​⁯‍⁭⁯‮‎‮⁫​‎‬‌‌‏⁪‍⁫‏​⁫​‪​⁯⁫⁮⁯‮​⁬‎‫‌‌⁯‮ obj2;
    try
    {
      obj2 = \u206A‬⁪⁯​⁯‍⁭⁯‮‎‮⁫​‎‬‌‌‏⁪‍⁫‏​⁫​‪​⁯⁫⁮⁯‮​⁬‎‫‌‌⁯‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200D⁭‫⁪‬⁪‬‫‬‏‮‏⁪‮‍⁫​‪‬‎⁪⁪‌‭⁫​⁯⁪⁬‫⁯​‌‎‪‌⁪⁫⁮‫‮((\u200C‮⁭‍⁭⁬⁯⁯‬⁮‏⁭‬⁬⁫‍‮‪‫⁪⁬‎‍‬‭​‪⁫‪‭‫‍‏‫‭⁬‎‮​⁪‮) obj1, \u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u200C⁮​⁮‏⁫‏‮‬‌‫‭‬⁫‪⁮⁯⁭‌⁫⁬‮‍‬‎‮⁪‬‏⁯‭‮‬⁬⁬‪‏⁮‪‍‮));
    }
    catch (Exception ex)
    {
      throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Policy constraints extension cannot be decoded.", ex, _param0, _param1);
    }
    if (obj2 != null)
    {
      foreach (object obj3 in obj2)
      {
        try
        {
          \u202C⁭⁫⁪‌‪‎‌⁬⁯‭‫⁬⁪‮⁪‏⁫‏‫‪⁫⁬‭‮⁪‮​‫‏‏‭⁪⁮‫⁯⁫⁫⁪⁮‮ obj4 = \u202C⁭⁫⁪‌‪‎‌⁬⁯‭‫⁬⁪‮⁪‏⁫‏‫‪⁫⁬‭‮⁪‮​‫‏‏‭⁪⁮‫⁯⁫⁫⁪⁮‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮(obj3);
          if (obj4.\u202E‌‮⁬‏⁫‮‍‫‏​​‮‎⁬⁪⁫‭‎⁫⁪‏‮‫⁬‭‏⁯‎⁫‍‪‪​​⁫‭​⁯‪‮ == 0)
          {
            int num = \u202E‭⁮‌⁭⁪‍⁪‬‎⁪⁮‎‮‪‏⁪‌‪⁯‮‮⁪‎⁬⁯⁪‍⁪⁭‬‪⁫⁪​⁬⁫⁬‭‪‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮(obj4, false).\u202E‭‫⁪‮​‎⁮‏‬⁬⁫‬‍‍‌‏‍⁭‮‭⁭⁫‮⁭‍‎⁬‫‮‬⁮‌⁪⁬‭⁮⁬‬‪‮;
            if (num < _param2)
              return num;
            break;
          }
        }
        catch (ArgumentException ex)
        {
          throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Policy constraints extension contents cannot be decoded.", (Exception) ex, _param0, _param1);
        }
      }
    }
    return _param2;
  }

  internal static int \u206F​‬​‫‬‭‭‬‬​‭‫‌⁯‌‪​‫⁮‮‍‏‫‪⁯⁯⁬​​‌‬⁮‍⁭⁮‭⁫⁮‌‮(
    \u206F⁬⁫⁪⁪⁪‬​‬⁬‮⁭⁯‪‍‌⁬⁬‍‫‬‏⁯‬​‌‎⁮​‫⁪‌‎‍‫‏⁭⁪‍⁯‮ _param0,
    int _param1,
    int _param2)
  {
    \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ obj1 = (\u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮) _param0.\u202B‪‏⁫‮⁬⁪⁪‪⁬‍‪‏⁭‬‏‍‪‎‍‫‪⁭‌‎‍⁯‫‌‬‫‌‍⁯‮‪⁯⁬⁫⁪‮[_param1];
    \u206A‬⁪⁯​⁯‍⁭⁯‮‎‮⁫​‎‬‌‌‏⁪‍⁫‏​⁫​‪​⁯⁫⁮⁯‮​⁬‎‫‌‌⁯‮ obj2;
    try
    {
      obj2 = \u206A‬⁪⁯​⁯‍⁭⁯‮‎‮⁫​‎‬‌‌‏⁪‍⁫‏​⁫​‪​⁯⁫⁮⁯‮​⁬‎‫‌‌⁯‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200D⁭‫⁪‬⁪‬‫‬‏‮‏⁪‮‍⁫​‪‬‎⁪⁪‌‭⁫​⁯⁪⁬‫⁯​‌‎‪‌⁪⁫⁮‫‮((\u200C‮⁭‍⁭⁬⁯⁯‬⁮‏⁭‬⁬⁫‍‮‪‫⁪⁬‎‍‬‭​‪⁫‪‭‫‍‏‫‭⁬‎‮​⁪‮) obj1, \u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u200C⁮​⁮‏⁫‏‮‬‌‫‭‬⁫‪⁮⁯⁭‌⁫⁬‮‍‬‎‮⁪‬‏⁯‭‮‬⁬⁬‪‏⁮‪‍‮));
    }
    catch (Exception ex)
    {
      throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Policy constraints extension cannot be decoded.", ex, _param0, _param1);
    }
    if (obj2 != null)
    {
      foreach (object obj3 in obj2)
      {
        try
        {
          \u202C⁭⁫⁪‌‪‎‌⁬⁯‭‫⁬⁪‮⁪‏⁫‏‫‪⁫⁬‭‮⁪‮​‫‏‏‭⁪⁮‫⁯⁫⁫⁪⁮‮ obj4 = \u202C⁭⁫⁪‌‪‎‌⁬⁯‭‫⁬⁪‮⁪‏⁫‏‫‪⁫⁬‭‮⁪‮​‫‏‏‭⁪⁮‫⁯⁫⁫⁪⁮‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮(obj3);
          if (obj4.\u202E‌‮⁬‏⁫‮‍‫‏​​‮‎⁬⁪⁫‭‎⁫⁪‏‮‫⁬‭‏⁯‎⁫‍‪‪​​⁫‭​⁯‪‮ == 1)
          {
            int num = \u202E‭⁮‌⁭⁪‍⁪‬‎⁪⁮‎‮‪‏⁪‌‪⁯‮‮⁪‎⁬⁯⁪‍⁪⁭‬‪⁫⁪​⁬⁫⁬‭‪‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮(obj4, false).\u202E‭‫⁪‮​‎⁮‏‬⁬⁫‬‍‍‌‏‍⁭‮‭⁭⁫‮⁭‍‎⁬‫‮‬⁮‌⁪⁬‭⁮⁬‬‪‮;
            if (num < _param2)
              return num;
            break;
          }
        }
        catch (ArgumentException ex)
        {
          throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Policy constraints extension contents cannot be decoded.", (Exception) ex, _param0, _param1);
        }
      }
    }
    return _param2;
  }

  internal static void \u206A⁫⁪⁭‫‏⁭‎‍‫⁪‫‌‬⁭‭‫⁫‌​⁮⁯‏‭​‭‌‏⁮⁮⁭‭‏‮‫​⁬‌⁬‎‮(
    \u206F⁬⁫⁪⁪⁪‬​‬⁬‮⁭⁯‪‍‌⁬⁬‍‫‬‏⁯‬​‌‎⁮​‫⁪‌‎‍‫‏⁭⁪‍⁯‮ _param0,
    int _param1,
    \u206B⁪‌⁬‮⁫‍‬⁬‏‪⁭‪⁬‬⁮‎‏‬⁫‌⁭‭‌⁯⁪‏‏⁭⁫⁭⁪‪‪‪‬‪⁭‪⁭‮ _param2)
  {
    \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ obj1 = (\u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮) _param0.\u202B‪‏⁫‮⁬⁪⁪‪⁬‍‪‏⁭‬‏‍‪‎‍‫‪⁭‌‎‍⁯‫‌‬‫‌‍⁯‮‪⁯⁬⁫⁪‮[_param1];
    \u202A​⁪‏⁮‪‎‬‪‮‭‮‬‪⁫‬⁭⁪⁫‫‌⁭⁮‏‬⁬‪‍‬‬‫‫‭‮⁫⁪‬​‍⁮‮ obj2 = (\u202A​⁪‏⁮‪‎‬‪‮‭‮‬‪⁫‬⁭⁪⁫‫‌⁭⁮‏‬⁬‪‍‬‬‫‫‭‮⁫⁪‬​‍⁮‮) null;
    try
    {
      \u206A‬⁪⁯​⁯‍⁭⁯‮‎‮⁫​‎‬‌‌‏⁪‍⁫‏​⁫​‪​⁯⁫⁮⁯‮​⁬‎‫‌‌⁯‮ obj3 = \u206A‬⁪⁯​⁯‍⁭⁯‮‎‮⁫​‎‬‌‌‏⁪‍⁫‏​⁫​‪​⁯⁫⁮⁯‮​⁬‎‫‌‌⁯‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200D⁭‫⁪‬⁪‬‫‬‏‮‏⁪‮‍⁫​‪‬‎⁪⁪‌‭⁫​⁯⁪⁬‫⁯​‌‎‪‌⁪⁫⁮‫‮((\u200C‮⁭‍⁭⁬⁯⁯‬⁮‏⁭‬⁬⁫‍‮‪‫⁪⁬‎‍‬‭​‪⁫‪‭‫‍‏‫‭⁬‎‮​⁪‮) obj1, \u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u202D⁪‌‬‍‎​‎⁪‏⁫‏⁬‍‎‎‌‫⁮‌⁮‬​‏​⁬⁬‏⁫‍‍‮⁯⁯‬‏‬⁪‎‌‮));
      if (obj3 != null)
        obj2 = new \u202A​⁪‏⁮‪‎‬‪‮‭‮‬‪⁫‬⁭⁪⁫‫‌⁭⁮‏‬⁬‪‍‬‬‫‫‭‮⁫⁪‬​‍⁮‮(obj3);
    }
    catch (Exception ex)
    {
      throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Name constraints extension could not be decoded.", ex, _param0, _param1);
    }
    if (obj2 == null)
      return;
    \u206A‬⁪⁯​⁯‍⁭⁯‮‎‮⁫​‎‬‌‌‏⁪‍⁫‏​⁫​‪​⁯⁫⁮⁯‮​⁬‎‫‌‌⁯‮ obj4 = obj2.\u206B‌⁫⁯‌⁮‭⁯‌‍⁪⁯‬‪‬⁫‮⁭⁭​‎⁭‪‮‭⁪⁪‌‏⁪‏⁮​⁭⁭‪‬‬⁯‬‮;
    if (obj4 != null)
    {
      try
      {
        _param2.\u200E⁬⁪‎⁮​‌​‭‫‍‮⁮‬⁫‮‭‫‭‮‪‬‬‬‫⁭​‍⁯‭‎⁯‭⁮‏⁫‍‬​⁫‮(obj4);
      }
      catch (Exception ex)
      {
        throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Permitted subtrees cannot be build from name constraints extension.", ex, _param0, _param1);
      }
    }
    \u206A‬⁪⁯​⁯‍⁭⁯‮‎‮⁫​‎‬‌‌‏⁪‍⁫‏​⁫​‪​⁯⁫⁮⁯‮​⁬‎‫‌‌⁯‮ obj5 = obj2.\u206D⁮‍⁮​‫‬⁫‏‬⁪‬⁫‮⁮‪‏‌​‮‮​⁯⁪⁫‬‪‮⁬‪‪⁭​‌‭‬​⁭⁫⁪‮;
    if (obj5 == null)
      return;
    IEnumerator enumerator = obj5.GetEnumerator();
    try
    {
      while (enumerator.MoveNext())
      {
        \u206B​‮‏‍⁯‬⁫⁫‮⁯⁫​‪‎‎‏⁬⁮‫‬⁪‮‎⁭‎⁫‌‪‎⁭⁫‮⁯‪‮⁬‌‮‮‮ obj6 = \u206B​‮‏‍⁯‬⁫⁫‮⁯⁫​‪‎‎‏⁬⁮‫‬⁪‮‎⁭‎⁫‌‪‎⁭⁫‮⁯‪‮⁬‌‮‮‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮(enumerator.Current);
        _param2.\u202E‮⁯‏‫‎​⁪‌‌‏⁮⁯⁫‌⁭‎⁭‪‏‏‏‏‪‫​⁬‍‫‌⁫‌‍⁭‌⁫⁯⁫⁬⁬‮(obj6);
      }
    }
    catch (Exception ex)
    {
      throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Excluded subtrees cannot be build from name constraints extension.", ex, _param0, _param1);
    }
  }

  internal static int \u202C‮‪‎⁫‭​‫⁬​​‎​‭⁮⁫‬‪⁭‬‎‎‍⁫‫‍‭⁬⁬‪‍‌‏‏‍‮‬‫⁪⁫‮(
    \u206F⁬⁫⁪⁪⁪‬​‬⁬‮⁭⁯‪‍‌⁬⁬‍‫‬‏⁯‬​‌‎⁮​‫⁪‌‎‍‫‏⁭⁪‍⁯‮ _param0,
    int _param1,
    int _param2)
  {
    \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ obj1 = (\u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮) _param0.\u202B‪‏⁫‮⁬⁪⁪‪⁬‍‪‏⁭‬‏‍‪‎‍‫‪⁭‌‎‍⁯‫‌‬‫‌‍⁯‮‪⁯⁬⁫⁪‮[_param1];
    \u202E‭⁮‌⁭⁪‍⁪‬‎⁪⁮‎‮‪‏⁪‌‪⁯‮‮⁪‎⁬⁯⁪‍⁪⁭‬‪⁫⁪​⁬⁫⁬‭‪‮ obj2;
    try
    {
      obj2 = \u202E‭⁮‌⁭⁪‍⁪‬‎⁪⁮‎‮‪‏⁪‌‪⁯‮‮⁪‎⁬⁯⁪‍⁪⁭‬‪⁫⁪​⁬⁫⁬‭‪‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200D⁭‫⁪‬⁪‬‫‬‏‮‏⁪‮‍⁫​‪‬‎⁪⁪‌‭⁫​⁯⁪⁬‫⁯​‌‎‪‌⁪⁫⁮‫‮((\u200C‮⁭‍⁭⁬⁯⁯‬⁮‏⁭‬⁬⁫‍‮‪‫⁪⁬‎‍‬‭​‪⁫‪‭‫‍‏‫‭⁬‎‮​⁪‮) obj1, \u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u202E​⁪⁪‌⁫‬⁫‍⁭‮‮​‌‍‮‏⁯​‮‌⁯⁯‏⁯​‎‮‪⁫⁫⁪‫‌⁯‫‫⁬‭⁪‮));
    }
    catch (Exception ex)
    {
      throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Inhibit any-policy extension cannot be decoded.", ex, _param0, _param1);
    }
    if (obj2 != null)
    {
      int num = obj2.\u202E‭‫⁪‮​‎⁮‏‬⁬⁫‬‍‍‌‏‍⁭‮‭⁭⁫‮⁭‍‎⁬‫‮‬⁮‌⁪⁬‭⁮⁬‬‪‮;
      if (num < _param2)
        return num;
    }
    return _param2;
  }

  internal static void \u200B‪‭‎⁪‏‌‌‪‌‬‎​‫‮​⁮‎‏‬‌‬‍‍‪⁫‫‭⁬‪‭‫‪⁯⁮⁮⁫‫⁭‪‮(
    \u206F⁬⁫⁪⁪⁪‬​‬⁬‮⁭⁯‪‍‌⁬⁬‍‫‬‏⁯‬​‌‎⁮​‫⁪‌‎‍‫‏⁭⁪‍⁯‮ _param0,
    int _param1)
  {
    \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ obj1 = (\u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮) _param0.\u202B‪‏⁫‮⁬⁪⁪‪⁬‍‪‏⁭‬‏‍‪‎‍‫‪⁭‌‎‍⁯‫‌‬‫‌‍⁯‮‪⁯⁬⁫⁪‮[_param1];
    \u202E‎‍⁯‪⁫⁭⁪‏⁮⁬⁪‎⁭‪⁫‭‌‌‬⁯⁪‮‏⁬⁯⁬‭⁭⁭‍⁯​​‪⁬⁮‏⁯‭‮ obj2;
    try
    {
      obj2 = \u202E‎‍⁯‪⁫⁭⁪‏⁮⁬⁪‎⁭‪⁫‭‌‌‬⁯⁪‮‏⁬⁯⁬‭⁭⁭‍⁯​​‪⁬⁮‏⁯‭‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200D⁭‫⁪‬⁪‬‫‬‏‮‏⁪‮‍⁫​‪‬‎⁪⁪‌‭⁫​⁯⁪⁬‫⁯​‌‎‪‌⁪⁫⁮‫‮((\u200C‮⁭‍⁭⁬⁯⁯‬⁮‏⁭‬⁬⁫‍‮‪‫⁪⁬‎‍‬‭​‪⁫‪‭‫‍‏‫‭⁬‎‮​⁪‮) obj1, \u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u206A‎⁬‭‭‭‍‫​⁯⁭‮‪‫‫‬‭‎⁮​⁯⁭⁬⁭⁯‬⁬⁪‮‬‍‎⁬⁯‫⁯‭⁫‏⁯‮));
    }
    catch (Exception ex)
    {
      throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Basic constraints extension cannot be decoded.", ex, _param0, _param1);
    }
    if (obj2 == null)
      throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Intermediate certificate lacks BasicConstraints");
    if (!obj2.\u200D⁪⁮⁯‌⁭‮‮⁬‎⁯⁯‍⁫⁫⁪​⁯⁪‪⁫​‮‫‪‎‭‎‬‏⁮‪‍‮‬⁬‪‌‬⁭‮())
      throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Not a CA certificate");
  }

  internal static int \u206C‮‭⁬⁭⁬⁮‬‫⁫‮‪‌‌‬‏‬‬‪‌‮⁬⁭‍‮‏‪⁭‍‫‌⁬‫​⁭⁬⁯‪‌⁫‮(
    \u206F⁬⁫⁪⁪⁪‬​‬⁬‮⁭⁯‪‍‌⁬⁬‍‫‬‏⁯‬​‌‎⁮​‫⁪‌‎‍‫‏⁭⁪‍⁯‮ _param0,
    int _param1,
    int _param2)
  {
    if (\u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u202C‬​⁪‭⁬⁮⁪‬‍‎‎⁯‏‮‪⁬‫⁪‪⁬⁫‍‍‎‭‭⁭‭‎‮‬⁪‮⁫‭⁯‏⁬‌‮((\u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮) _param0.\u202B‪‏⁫‮⁬⁪⁪‪⁬‍‪‏⁭‬‏‍‪‎‍‫‪⁭‌‎‍⁯‫‌‬‫‌‍⁯‮‪⁯⁬⁫⁪‮[_param1]))
      return _param2;
    if (_param2 <= 0)
      throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Max path length not greater than zero", (Exception) null, _param0, _param1);
    return _param2 - 1;
  }

  internal static int \u202B‍⁫⁮⁬⁯‬‪⁮⁪‏‭‬‮⁮​⁯‮⁮​‮‏‌‭‫⁯⁯⁮⁭⁪‍‌‎‌⁭‮‬‮⁯‫‮(
    \u206F⁬⁫⁪⁪⁪‬​‬⁬‮⁭⁯‪‍‌⁬⁬‍‫‬‏⁯‬​‌‎⁮​‫⁪‌‎‍‫‏⁭⁪‍⁯‮ _param0,
    int _param1,
    int _param2)
  {
    \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ obj1 = (\u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮) _param0.\u202B‪‏⁫‮⁬⁪⁪‪⁬‍‪‏⁭‬‏‍‪‎‍‫‪⁭‌‎‍⁯‫‌‬‫‌‍⁯‮‪⁯⁬⁫⁪‮[_param1];
    \u202E‎‍⁯‪⁫⁭⁪‏⁮⁬⁪‎⁭‪⁫‭‌‌‬⁯⁪‮‏⁬⁯⁬‭⁭⁭‍⁯​​‪⁬⁮‏⁯‭‮ obj2;
    try
    {
      obj2 = \u202E‎‍⁯‪⁫⁭⁪‏⁮⁬⁪‎⁭‪⁫‭‌‌‬⁯⁪‮‏⁬⁯⁬‭⁭⁭‍⁯​​‪⁬⁮‏⁯‭‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200D⁭‫⁪‬⁪‬‫‬‏‮‏⁪‮‍⁫​‪‬‎⁪⁪‌‭⁫​⁯⁪⁬‫⁯​‌‎‪‌⁪⁫⁮‫‮((\u200C‮⁭‍⁭⁬⁯⁯‬⁮‏⁭‬⁬⁫‍‮‪‫⁪⁬‎‍‬‭​‪⁫‪‭‫‍‏‫‭⁬‎‮​⁪‮) obj1, \u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u206A‎⁬‭‭‭‍‫​⁯⁭‮‪‫‫‬‭‎⁮​⁯⁭⁬⁭⁯‬⁬⁪‮‬‍‎⁬⁯‫⁯‭⁫‏⁯‮));
    }
    catch (Exception ex)
    {
      throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Basic constraints extension cannot be decoded.", ex, _param0, _param1);
    }
    if (obj2 != null)
    {
      \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj3 = obj2.\u206C⁭⁮‮⁫‭‮​⁯​⁭⁭‏⁯‎⁬⁫⁪⁭‍​‮‏⁯⁭‏‎‫​⁮‪⁯⁯⁮⁮‍⁭‫⁬⁮‮;
      if (obj3 != null)
      {
        int num = obj3.\u200E‬‫‫‪⁮⁭‎‮⁫⁫⁭‍‍⁮⁫‫‫⁪⁬‎‏‭‭⁪⁪​⁫⁪‍⁫⁪⁪‏‎‪‎⁫‪⁮‮;
        if (num < _param2)
          return num;
      }
    }
    return _param2;
  }

  internal static void \u202A‫‌‬‮‎‭⁭⁯‌⁯⁮⁭‏⁪‏‌‍‏⁪⁬‪‍⁯⁯‭​​‏‍⁮‌‌‎⁯‭⁪‍‍‫‮(
    \u206F⁬⁫⁪⁪⁪‬​‬⁬‮⁭⁯‪‍‌⁬⁬‍‫‬‏⁯‬​‌‎⁮​‫⁪‌‎‍‫‏⁭⁪‍⁯‮ _param0,
    int _param1)
  {
    bool[] flagArray = ((\u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮) _param0.\u202B‪‏⁫‮⁬⁪⁪‪⁬‍‪‏⁭‬‏‍‪‎‍‫‪⁭‌‎‍⁯‫‌‬‫‌‍⁯‮‪⁯⁬⁫⁪‮[_param1]).\u200D​‪‬‍‭‌‮⁮‍‬‏‪‮‮⁮⁯⁫​⁭‎⁯​‍⁮‬‌‍⁮⁯‏⁮​⁯​‍‫‎‍⁯‮();
    if (flagArray != null && !flagArray[\u202B‎⁮‏⁫⁭⁮‪‭​‫⁬⁬⁭‮‮‫‏​‭⁫⁭‮⁫‬⁫‎⁯‪⁫‮‮⁮​‎‏‏‭⁫‬‮.\u200B‍‍‪⁭‪‬‫‬‍⁬⁯‭‪⁫‌‌‌‎‎‮‎‍‮‏⁪⁪‫‫‍⁯⁫‪‌⁮‌‌⁪‏‭‮])
      throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Issuer certificate keyusage extension is critical and does not permit key signing.", (Exception) null, _param0, _param1);
  }

  internal static void \u206D‍⁭⁮⁯‏‍⁭‬‍‫‬⁬‮​‌⁬⁪⁯‫‏‪⁬‮‬⁯⁪⁮​‌‭‬‍‮‪⁭⁪⁭⁫‏‮(
    \u206F⁬⁫⁪⁪⁪‬​‬⁬‮⁭⁯‪‍‌⁬⁬‍‫‬‏⁯‬​‌‎⁮​‫⁪‌‎‍‫‏⁭⁪‍⁯‮ _param0,
    int _param1,
    \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ _param2,
    IList _param3)
  {
    \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ obj1 = (\u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮) _param0.\u202B‪‏⁫‮⁬⁪⁪‪⁬‍‪‏⁭‬‏‍‪‎‍‫‪⁭‌‎‍⁯‫‌‬‫‌‍⁯‮‪⁯⁬⁫⁪‮[_param1];
    foreach (\u200E‌⁮‏⁯⁭⁯⁮‫⁯⁪‎‭‬‏​‭‪⁯‭⁬‍‌‭⁮‬‍⁪⁫⁬‮‌‌⁯‍‏‪‍‭‬‮ obj2 in (IEnumerable) _param3)
    {
      try
      {
        obj2.\u206C⁮⁬‏⁯‎‌‪⁪​‎‬‍‍⁭‌‬‏⁯⁫⁫⁭⁭‎⁪⁯‬‌⁭‍‫⁬⁭‌⁭‍‭‍⁫‪‮(obj1, _param2);
      }
      catch (\u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮ ex)
      {
        throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮(((Exception) ex).Message, ex.InnerException, _param0, _param1);
      }
    }
    if (!_param2.\u202E‮‬⁭⁮⁫‮‮⁭‎⁭⁭‭‬‌​‫⁯‍‭‌‍‫‪‍‏‮‌‏⁭‍⁫‎⁬‮‌⁫⁮​‌‮)
      throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Certificate has unsupported critical extension.", (Exception) null, _param0, _param1);
  }

  internal static int \u202E‏‭‫‭‭‮⁭‏‬‏⁫​‫⁭‫‬⁮⁭‍⁯‫⁮⁮⁭‭‍‫‍‭‏‌⁫⁬​⁫‫‬‎⁫‮(
    \u206F⁬⁫⁪⁪⁪‬​‬⁬‮⁭⁯‪‍‌⁬⁬‍‫‬‏⁯‬​‌‎⁮​‫⁪‌‎‍‫‏⁭⁪‍⁯‮ _param0,
    int _param1,
    int _param2)
  {
    return !\u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u202C‬​⁪‭⁬⁮⁪‬‍‎‎⁯‏‮‪⁬‫⁪‪⁬⁫‍‍‎‭‭⁭‭‎‮‬⁪‮⁫‭⁯‏⁬‌‮((\u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮) _param0.\u202B‪‏⁫‮⁬⁪⁪‪⁬‍‪‏⁭‬‏‍‪‎‍‫‪⁭‌‎‍⁯‫‌‬‫‌‍⁯‮‪⁯⁬⁫⁪‮[_param1]) && _param2 != 0 ? _param2 - 1 : _param2;
  }

  internal static int \u206C​‮‍‍‪⁬⁭‪‬​‏‫⁫⁫‭⁪⁯‬‌‬​‫⁮​‫‎⁬‎⁭​‪‬‎⁯‬‬‏‍⁪‮(
    \u206F⁬⁫⁪⁪⁪‬​‬⁬‮⁭⁯‪‍‌⁬⁬‍‫‬‏⁯‬​‌‎⁮​‫⁪‌‎‍‫‏⁭⁪‍⁯‮ _param0,
    int _param1,
    int _param2)
  {
    return !\u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u202C‬​⁪‭⁬⁮⁪‬‍‎‎⁯‏‮‪⁬‫⁪‪⁬⁫‍‍‎‭‭⁭‭‎‮‬⁪‮⁫‭⁯‏⁬‌‮((\u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮) _param0.\u202B‪‏⁫‮⁬⁪⁪‪⁬‍‪‏⁭‬‏‍‪‎‍‫‪⁭‌‎‍⁯‫‌‬‫‌‍⁯‮‪⁯⁬⁫⁪‮[_param1]) && _param2 != 0 ? _param2 - 1 : _param2;
  }

  internal static int \u200F‌‮‎‪‮​‏‪⁪⁮‭‫​⁮⁫⁭‪‭⁫⁮⁯⁪⁯⁬‪‌⁮‍‮⁭‎⁭⁯‎‭‮‮‎‌‮(
    \u206F⁬⁫⁪⁪⁪‬​‬⁬‮⁭⁯‪‍‌⁬⁬‍‫‬‏⁯‬​‌‎⁮​‫⁪‌‎‍‫‏⁭⁪‍⁯‮ _param0,
    int _param1,
    int _param2)
  {
    return !\u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u202C‬​⁪‭⁬⁮⁪‬‍‎‎⁯‏‮‪⁬‫⁪‪⁬⁫‍‍‎‭‭⁭‭‎‮‬⁪‮⁫‭⁯‏⁬‌‮((\u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮) _param0.\u202B‪‏⁫‮⁬⁪⁪‪⁬‍‪‏⁭‬‏‍‪‎‍‫‪⁭‌‎‍⁯‫‌‬‫‌‍⁯‮‪⁯⁬⁫⁪‮[_param1]) && _param2 != 0 ? _param2 - 1 : _param2;
  }

  internal static int \u202D⁫⁬‬⁮⁬⁪‬‎​‌​‪​⁪​‪⁮⁫‫⁯‍⁭⁯​⁭‬‬⁬‎‫‭⁮⁭⁪⁮‮‫⁪⁯‮(
    int _param0,
    \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ _param1)
  {
    if (!\u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u202C‬​⁪‭⁬⁮⁪‬‍‎‎⁯‏‮‪⁬‫⁪‪⁬⁫‍‍‎‭‭⁭‭‎‮‬⁪‮⁫‭⁯‏⁬‌‮(_param1) && _param0 != 0)
      --_param0;
    return _param0;
  }

  internal static int \u200C⁫‌‌‬‪‬‏‪‭⁭⁭‫‫‏‌⁮⁫‍‮⁫⁯​‏⁫‭​‎‌‬​⁮​‌‭⁮⁮⁫‍⁬‮(
    \u206F⁬⁫⁪⁪⁪‬​‬⁬‮⁭⁯‪‍‌⁬⁬‍‫‬‏⁯‬​‌‎⁮​‫⁪‌‎‍‫‏⁭⁪‍⁯‮ _param0,
    int _param1,
    int _param2)
  {
    \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ obj1 = (\u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮) _param0.\u202B‪‏⁫‮⁬⁪⁪‪⁬‍‪‏⁭‬‏‍‪‎‍‫‪⁭‌‎‍⁯‫‌‬‫‌‍⁯‮‪⁯⁬⁫⁪‮[_param1];
    \u206A‬⁪⁯​⁯‍⁭⁯‮‎‮⁫​‎‬‌‌‏⁪‍⁫‏​⁫​‪​⁯⁫⁮⁯‮​⁬‎‫‌‌⁯‮ obj2;
    try
    {
      obj2 = \u206A‬⁪⁯​⁯‍⁭⁯‮‎‮⁫​‎‬‌‌‏⁪‍⁫‏​⁫​‪​⁯⁫⁮⁯‮​⁬‎‫‌‌⁯‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200D⁭‫⁪‬⁪‬‫‬‏‮‏⁪‮‍⁫​‪‬‎⁪⁪‌‭⁫​⁯⁪⁬‫⁯​‌‎‪‌⁪⁫⁮‫‮((\u200C‮⁭‍⁭⁬⁯⁯‬⁮‏⁭‬⁬⁫‍‮‪‫⁪⁬‎‍‬‭​‪⁫‪‭‫‍‏‫‭⁬‎‮​⁪‮) obj1, \u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u200C⁮​⁮‏⁫‏‮‬‌‫‭‬⁫‪⁮⁯⁭‌⁫⁬‮‍‬‎‮⁪‬‏⁯‭‮‬⁬⁬‪‏⁮‪‍‮));
    }
    catch (Exception ex)
    {
      throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Policy constraints could not be decoded.", ex, _param0, _param1);
    }
    if (obj2 != null)
    {
      foreach (\u202C⁭⁫⁪‌‪‎‌⁬⁯‭‫⁬⁪‮⁪‏⁫‏‫‪⁫⁬‭‮⁪‮​‫‏‏‭⁪⁮‫⁯⁫⁫⁪⁮‮ obj3 in obj2)
      {
        if (obj3.\u202E‌‮⁬‏⁫‮‍‫‏​​‮‎⁬⁪⁫‭‎⁫⁪‏‮‫⁬‭‏⁯‎⁫‍‪‪​​⁫‭​⁯‪‮ == 0)
        {
          int num;
          try
          {
            num = \u202E‭⁮‌⁭⁪‍⁪‬‎⁪⁮‎‮‪‏⁪‌‪⁯‮‮⁪‎⁬⁯⁪‍⁪⁭‬‪⁫⁪​⁬⁫⁬‭‪‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮(obj3, false).\u202E‭‫⁪‮​‎⁮‏‬⁬⁫‬‍‍‌‏‍⁭‮‭⁭⁫‮⁭‍‎⁬‫‮‬⁮‌⁪⁬‭⁮⁬‬‪‮;
          }
          catch (Exception ex)
          {
            throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Policy constraints requireExplicitPolicy field could not be decoded.", ex, _param0, _param1);
          }
          if (num == 0)
            return 0;
        }
      }
    }
    return _param2;
  }

  internal static void \u206D‭‌⁯‏‍‌⁫‫​‎⁭‏‪‮‎⁮⁫‏⁫‪‌⁭‮‭⁯⁬⁬⁯‍‫⁬⁭‫‭​⁬‌‍‮(
    \u206F⁬⁫⁪⁪⁪‬​‬⁬‮⁭⁯‪‍‌⁬⁬‍‫‬‏⁯‬​‌‎⁮​‫⁪‌‎‍‫‏⁭⁪‍⁯‮ _param0,
    int _param1,
    IList _param2,
    \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ _param3)
  {
    \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ obj1 = (\u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮) _param0.\u202B‪‏⁫‮⁬⁪⁪‪⁬‍‪‏⁭‬‏‍‪‎‍‫‪⁭‌‎‍⁯‫‌‬‫‌‍⁯‮‪⁯⁬⁫⁪‮[_param1];
    foreach (\u200E‌⁮‏⁯⁭⁯⁮‫⁯⁪‎‭‬‏​‭‪⁯‭⁬‍‌‭⁮‬‍⁪⁫⁬‮‌‌⁯‍‏‪‍‭‬‮ obj2 in (IEnumerable) _param2)
    {
      try
      {
        obj2.\u206C⁮⁬‏⁯‎‌‪⁪​‎‬‍‍⁭‌‬‏⁯⁫⁫⁭⁭‎⁪⁯‬‌⁭‍‫⁬⁭‌⁭‍‭‍⁫‪‮(obj1, _param3);
      }
      catch (\u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮ ex)
      {
        throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Additional certificate path checker failed.", (Exception) ex, _param0, _param1);
      }
    }
    if (!_param3.\u202E‮‬⁭⁮⁫‮‮⁭‎⁭⁭‭‬‌​‫⁯‍‭‌‍‫‪‍‏‮‌‏⁭‍⁫‎⁬‮‌⁫⁮​‌‮)
      throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Certificate has unsupported critical extension", (Exception) null, _param0, _param1);
  }

  internal static \u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ \u206A‫⁬⁬‏⁬⁫⁮‌‏‮⁫⁫‫⁪⁫‮⁫‎⁭⁬‭‭⁪⁮⁮‪⁮‌‌‮​​⁮⁫‫‬‍‭⁪‮(
    \u206F⁬⁫⁪⁪⁪‬​‬⁬‮⁭⁯‪‍‌⁬⁬‍‫‬‏⁯‬​‌‎⁮​‫⁪‌‎‍‫‏⁭⁪‍⁯‮ _param0,
    \u206C⁫⁪‫‏‬⁫⁭⁬‏‬‎‫‏​⁫‏⁬‍⁫‌‭⁯⁬⁯‎‪⁬‬‭⁭‫⁭⁬‍‫‏⁯‫‭‮ _param1,
    \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ _param2,
    int _param3,
    IList[] _param4,
    \u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ _param5,
    \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ _param6)
  {
    int count = _param0.\u202B‪‏⁫‮⁬⁪⁪‪⁬‍‪‏⁭‬‏‍‪‎‍‫‪⁭‌‎‍⁯‫‌‬‫‌‍⁯‮‪⁯⁬⁫⁪‮.Count;
    \u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ obj1;
    if (_param5 == null)
    {
      if (_param1.\u206F⁪‮‎‍⁯⁭‪‭⁯‪​⁯⁪‫‪​‪⁪‌‍‎‮​‌​⁫‮‪⁭⁬‌⁯‎⁮⁯​‪‍‍‮)
        throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Explicit policy requested but none available.", (Exception) null, _param0, _param3);
      obj1 = (\u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮) null;
    }
    else if (\u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u206E‭⁪⁯‫‭​⁯‎‮‪‮‫⁪‍​‪‎⁬‫⁬⁫‫⁬‫⁬​⁬‮⁪‫‮⁫​‎‎⁪‎‫‬‮(_param2))
    {
      if (_param1.\u206F⁪‮‎‍⁯⁭‪‭⁯‪​⁯⁪‫‪​‪⁪‌‍‎‮​‌​⁫‮‪⁭⁬‌⁯‎⁮⁯​‪‍‍‮)
      {
        if (_param6.\u202E‮‬⁭⁮⁫‮‮⁭‎⁭⁭‭‬‌​‫⁯‍‭‌‍‫‪‍‏‮‌‏⁭‍⁫‎⁬‮‌⁫⁮​‌‮)
          throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Explicit policy requested but none available.", (Exception) null, _param0, _param3);
        \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ obj2 = (\u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮) new \u202B​⁮⁭⁯‎⁫⁮⁪‭‭⁭⁮‍‎‌⁯‫⁫‎​⁫​‪‬‬‍⁫⁬‎‫⁪‏‌⁪​‪‎‮⁮‮();
        for (int index1 = 0; index1 < _param4.Length; ++index1)
        {
          IList list = _param4[index1];
          for (int index2 = 0; index2 < list.Count; ++index2)
          {
            \u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ obj3 = (\u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮) list[index2];
            if (\u202B‎⁮‏⁫⁭⁮‪‭​‫⁬⁬⁭‮‮‫‏​‭⁫⁭‮⁫‬⁫‎⁯‪⁫‮‮⁮​‎‏‏‭⁫‬‮.\u202D‍⁮‬‪​‏‎⁫⁭⁪‪⁪‭⁮⁮‍⁭‍‏‪​‭‍⁪⁫⁬‪‬‪⁭‌​‎‭‬​⁮⁭‮.Equals(obj3.\u206D‭⁯‭‌⁭‏‍‬‌⁪‫⁫​⁭‭‍‬⁪⁯‏‌‍⁭‌⁮⁭‎‏⁮⁫⁯⁫​⁫‫⁬⁭‏⁪‮))
            {
              foreach (object obj4 in obj3.\u202A‏⁫‌‍⁬‎⁮‫​⁯‮‏​‮‭⁫‫‪⁮‏‏⁫⁪‌‌‬​‫⁯⁪‎‮‮‏⁭‏‭‬⁬‮)
                obj2.\u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮(obj4);
            }
          }
        }
        foreach (\u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ obj5 in (IEnumerable) obj2)
        {
          string str = obj5.\u206D‭⁯‭‌⁭‏‍‬‌⁪‫⁫​⁭‭‍‬⁪⁯‏‌‍⁭‌⁮⁭‎‏⁮⁫⁯⁫​⁫‫⁬⁭‏⁪‮;
          _param6.\u200E‪‏⁭‍⁭⁪‫‍‏‍‮⁮‬‌⁬⁫⁪‮‫⁯‮‮‭⁬⁯‮‭​⁭‫‪‮‫‎⁬⁮⁭⁭‍‮((object) str);
        }
        if (_param5 != null)
        {
          for (int index3 = count - 1; index3 >= 0; --index3)
          {
            IList list = _param4[index3];
            for (int index4 = 0; index4 < list.Count; ++index4)
            {
              \u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ obj6 = (\u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮) list[index4];
              if (!obj6.\u200F‎‮⁭⁫‮‭​‮‍‎‌⁭‌‎⁪‭‬‭‭‪‪⁭‮‍⁬⁬‏‏‭‪‍‬‮⁭⁯‏‬‏⁯‮)
                _param5 = \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200B‎‬⁭‌⁯⁮‫‪⁭‍‌⁬⁯‎‪‫​‏‌‎‭⁮⁬‭⁭⁭‪⁬‎‮⁫​‫‫⁬‪⁮​‫‮(_param5, _param4, obj6);
            }
          }
        }
      }
      obj1 = _param5;
    }
    else
    {
      \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ obj7 = (\u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮) new \u202B​⁮⁭⁯‎⁫⁮⁪‭‭⁭⁮‍‎‌⁯‫⁫‎​⁫​‪‬‬‍⁫⁬‎‫⁪‏‌⁪​‪‎‮⁮‮();
      for (int index5 = 0; index5 < _param4.Length; ++index5)
      {
        IList list = _param4[index5];
        for (int index6 = 0; index6 < list.Count; ++index6)
        {
          \u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ obj8 = (\u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮) list[index6];
          if (\u202B‎⁮‏⁫⁭⁮‪‭​‫⁬⁬⁭‮‮‫‏​‭⁫⁭‮⁫‬⁫‎⁯‪⁫‮‮⁮​‎‏‏‭⁫‬‮.\u202D‍⁮‬‪​‏‎⁫⁭⁪‪⁪‭⁮⁮‍⁭‍‏‪​‭‍⁪⁫⁬‪‬‪⁭‌​‎‭‬​⁮⁭‮.Equals(obj8.\u206D‭⁯‭‌⁭‏‍‬‌⁪‫⁫​⁭‭‍‬⁪⁯‏‌‍⁭‌⁮⁭‎‏⁮⁫⁯⁫​⁫‫⁬⁭‏⁪‮))
          {
            foreach (\u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ obj9 in obj8.\u202A‏⁫‌‍⁬‎⁮‫​⁯‮‏​‮‭⁫‫‪⁮‏‏⁫⁪‌‌‬​‫⁯⁪‎‮‮‏⁭‏‭‬⁬‮)
            {
              if (!\u202B‎⁮‏⁫⁭⁮‪‭​‫⁬⁬⁭‮‮‫‏​‭⁫⁭‮⁫‬⁫‎⁯‪⁫‮‮⁮​‎‏‏‭⁫‬‮.\u202D‍⁮‬‪​‏‎⁫⁭⁪‪⁪‭⁮⁮‍⁭‍‏‪​‭‍⁪⁫⁬‪‬‪⁭‌​‎‭‬​⁮⁭‮.Equals(obj9.\u206D‭⁯‭‌⁭‏‍‬‌⁪‫⁫​⁭‭‍‬⁪⁯‏‌‍⁭‌⁮⁭‎‏⁮⁫⁯⁫​⁫‫⁬⁭‏⁪‮))
                obj7.\u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮((object) obj9);
            }
          }
        }
      }
      foreach (\u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ obj10 in (IEnumerable) obj7)
      {
        string str = obj10.\u206D‭⁯‭‌⁭‏‍‬‌⁪‫⁫​⁭‭‍‬⁪⁯‏‌‍⁭‌⁮⁭‎‏⁮⁫⁯⁫​⁫‫⁬⁭‏⁪‮;
        if (!_param2.\u200E‪‏⁭‍⁭⁪‫‍‏‍‮⁮‬‌⁬⁫⁪‮‫⁯‮‮‭⁬⁯‮‭​⁭‫‪‮‫‎⁬⁮⁭⁭‍‮((object) str))
          _param5 = \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200B‎‬⁭‌⁯⁮‫‪⁭‍‌⁬⁯‎‪‫​‏‌‎‭⁮⁬‭⁭⁭‪⁬‎‮⁫​‫‫⁬‪⁮​‫‮(_param5, _param4, obj10);
      }
      if (_param5 != null)
      {
        for (int index7 = count - 1; index7 >= 0; --index7)
        {
          IList list = _param4[index7];
          for (int index8 = 0; index8 < list.Count; ++index8)
          {
            \u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ obj11 = (\u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮) list[index8];
            if (!obj11.\u200F‎‮⁭⁫‮‭​‮‍‎‌⁭‌‎⁪‭‬‭‭‪‪⁭‮‍⁬⁬‏‏‭‪‍‬‮⁭⁯‏‬‏⁯‮)
              _param5 = \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200B‎‬⁭‌⁯⁮‫‪⁭‍‌⁬⁯‎‪‫​‏‌‎‭⁮⁬‭⁭⁭‪⁬‎‮⁫​‫‫⁬‪⁮​‫‮(_param5, _param4, obj11);
          }
        }
      }
      obj1 = _param5;
    }
    return obj1;
  }

  internal static void \u200B‍‮‏⁫⁯⁭‭‫‬⁯​⁭‫‎⁪​‌‍⁪‭⁮‍‭‏‏⁭‎⁭‬⁫⁯‏⁫‌‏⁪​⁬‫‮(
    \u200D‍​⁬‎‮⁮⁭⁮‌‎‭‮‎‍⁪⁬⁬‍⁬‎​⁯‭⁮‫‎‪⁭⁫‌⁮⁬‭‪‪‎⁪⁯⁪‮ _param0,
    \u200D‍​⁬‎‮⁮⁭⁮‌‎‭‮‎‍⁪⁬⁬‍⁬‎​⁯‭⁮‫‎‪⁭⁫‌⁮⁬‭‪‪‎⁪⁯⁪‮ _param1,
    \u206C⁫⁪‫‏‬⁫⁭⁬‏‬‎‫‏​⁫‏⁬‍⁫‌‭⁯⁬⁯‎‪⁬‬‭⁭‫⁭⁬‍‫‏⁯‫‭‮ _param2)
  {
    if (_param0 == null)
      return;
    \u206D⁬⁮‌⁬‌⁭‮‏‍‪‏‫⁪‍‎‭‍‫​⁯⁯⁭⁮⁮‍‏‍‪‫‏​⁭‏‎‌⁬⁯‮‭‮ objA;
    try
    {
      objA = \u206D⁬⁮‌⁬‌⁭‮‏‍‪‏‫⁪‍‎‭‍‫​⁯⁯⁭⁮⁮‍‏‍‪‫‏​⁭‏‎‌⁬⁯‮‭‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200D⁭‫⁪‬⁪‬‫‬‏‮‏⁪‮‍⁫​‪‬‎⁪⁪‌‭⁫​⁯⁪⁬‫⁯​‌‎‪‌⁪⁫⁮‫‮((\u200C‮⁭‍⁭⁬⁯⁯‬⁮‏⁭‬⁬⁫‍‮‪‫⁪⁬‎‍‬‭​‪⁫‪‭‫‍‏‫‭⁬‎‮​⁪‮) _param1, \u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u202C⁯‏⁭‍‌⁫⁪‪‭‍‫‫​⁪‏‬‍‬⁯‏‮‭⁪‎‌‬‏⁮‮‫‮‭‮⁬⁪‬‭‭‍‮));
    }
    catch (Exception ex)
    {
      throw new Exception("000 Issuing distribution point extension could not be decoded.", ex);
    }
    if (!_param2.\u202A⁭‫‭⁮‫‭⁬⁯⁫‭‫⁭⁮⁫⁯⁫⁯‬⁮‏‎⁫‭‭‌⁪‬‫⁬‌‫⁮⁮‪‭‬‭⁪⁪‮)
      return;
    if (!_param0.\u200B‌‭⁮‭⁮‮⁬‭‏⁮⁯​⁪‍⁮​⁭‏‮‎‭⁭⁭⁭⁭⁮‍‍‍⁭⁪​‌​⁮⁪⁭⁫‏‮.\u202C⁮⁪⁫‪‫‮⁬⁮‏⁫‎‭‌⁬⁬​‏⁬‮‍‮‪⁬‪‌‫‌⁭‪⁪‪‫‫⁫‬‏⁯‭‮(_param1.\u200B‌‭⁮‭⁮‮⁬‭‏⁮⁯​⁪‍⁮​⁭‏‮‎‭⁭⁭⁭⁭⁮‍‍‍⁭⁪​‌​⁮⁪⁭⁫‏‮, true))
      throw new Exception("Complete CRL issuer does not match delta CRL issuer.");
    \u206D⁬⁮‌⁬‌⁭‮‏‍‪‏‫⁪‍‎‭‍‫​⁯⁯⁭⁮⁮‍‏‍‪‫‏​⁭‏‎‌⁬⁯‮‭‮ objB;
    try
    {
      objB = \u206D⁬⁮‌⁬‌⁭‮‏‍‪‏‫⁪‍‎‭‍‫​⁯⁯⁭⁮⁮‍‏‍‪‫‏​⁭‏‎‌⁬⁯‮‭‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200D⁭‫⁪‬⁪‬‫‬‏‮‏⁪‮‍⁫​‪‬‎⁪⁪‌‭⁫​⁯⁪⁬‫⁯​‌‎‪‌⁪⁫⁮‫‮((\u200C‮⁭‍⁭⁬⁯⁯‬⁮‏⁭‬⁬⁫‍‮‪‫⁪⁬‎‍‬‭​‪⁫‪‭‫‍‏‫‭⁬‎‮​⁪‮) _param0, \u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u202C⁯‏⁭‍‌⁫⁪‪‭‍‫‫​⁪‏‬‍‬⁯‏‮‭⁪‎‌‬‏⁮‮‫‮‭‮⁬⁪‬‭‭‍‮));
    }
    catch (Exception ex)
    {
      throw new Exception("Issuing distribution point extension from delta CRL could not be decoded.", ex);
    }
    if (!object.Equals((object) objA, (object) objB))
      throw new Exception("Issuing distribution point extension from delta CRL and complete CRL does not match.");
    \u206C‭‍⁮‪‮⁭‫⁮‮‬‎​‌‮‎‍⁬​⁪‫⁫‪‭‌‌‪⁭⁭⁪‍‮⁯⁭‍‎⁪‬⁬‍‮ obj1;
    try
    {
      obj1 = \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200D⁭‫⁪‬⁪‬‫‬‏‮‏⁪‮‍⁫​‪‬‎⁪⁪‌‭⁫​⁯⁪⁬‫⁯​‌‎‪‌⁪⁫⁮‫‮((\u200C‮⁭‍⁭⁬⁯⁯‬⁮‏⁭‬⁬⁫‍‮‪‫⁪⁬‎‍‬‭​‪⁫‪‭‫‍‏‫‭⁬‎‮​⁪‮) _param1, \u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u202C‭‫‎‬⁯​‌​‮‬‍‌​‏‭⁯‎⁬‬‮​‎⁪‬‏‌​‬‬‮⁯⁮⁯‫‏‎‪⁮‌‮);
    }
    catch (Exception ex)
    {
      throw new Exception("Authority key identifier extension could not be extracted from complete CRL.", ex);
    }
    \u206C‭‍⁮‪‮⁭‫⁮‮‬‎​‌‮‎‍⁬​⁪‫⁫‪‭‌‌‪⁭⁭⁪‍‮⁯⁭‍‎⁪‬⁬‍‮ obj2;
    try
    {
      obj2 = \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200D⁭‫⁪‬⁪‬‫‬‏‮‏⁪‮‍⁫​‪‬‎⁪⁪‌‭⁫​⁯⁪⁬‫⁯​‌‎‪‌⁪⁫⁮‫‮((\u200C‮⁭‍⁭⁬⁯⁯‬⁮‏⁭‬⁬⁫‍‮‪‫⁪⁬‎‍‬‭​‪⁫‪‭‫‍‏‫‭⁬‎‮​⁪‮) _param0, \u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u202C‭‫‎‬⁯​‌​‮‬‍‌​‏‭⁯‎⁬‬‮​‎⁪‬‏‌​‬‬‮⁯⁮⁯‫‏‎‪⁮‌‮);
    }
    catch (Exception ex)
    {
      throw new Exception("Authority key identifier extension could not be extracted from delta CRL.", ex);
    }
    if (obj1 == null)
      throw new Exception("CRL authority key identifier is null.");
    if (obj2 == null)
      throw new Exception("Delta CRL authority key identifier is null.");
    if (!((object) obj1).Equals((object) obj2))
      throw new Exception("Delta CRL authority key identifier does not match complete CRL authority key identifier.");
  }

  internal static void \u206B⁬‏‬‌‍⁭⁮⁯‬‎‌‪⁮‭‬⁯⁭‬⁫‏‎‮⁯‎‎⁮​‭⁯‏⁬‎‬‏‏‫⁫‎⁭‮(
    DateTime _param0,
    \u200D‍​⁬‎‮⁮⁭⁮‌‎‭‮‎‍⁪⁬⁬‍⁬‎​⁯‭⁮‫‎‪⁭⁫‌⁮⁬‭‪‪‎⁪⁯⁪‮ _param1,
    object _param2,
    \u200D⁭⁬⁭⁪‬⁮⁫⁮⁭‬‫⁯⁬⁮‎‍‮‏⁫⁫‍‬⁬‮‏⁭‬‬‫⁮⁫⁯‍‌⁪‍⁮‏‍‮ _param3,
    \u206C⁫⁪‫‏‬⁫⁭⁬‏‬‎‫‏​⁫‏⁬‍⁫‌‭⁯⁬⁯‎‪⁬‬‭⁭‫⁭⁬‍‫‏⁯‫‭‮ _param4)
  {
    if (!_param4.\u202A⁭‫‭⁮‫‭⁬⁯⁫‭‫⁭⁮⁫⁯⁫⁯‬⁮‏‎⁫‭‭‌⁪‬‫⁬‌‫⁮⁮‪‭‬‭⁪⁪‮ || _param1 == null)
      return;
    \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u202E‬⁫⁪‪‍⁮‌⁪‭‌​‌‏⁮‎‏⁬‏‮‫⁯⁫‮⁪‬‪‎⁬‫‮⁫‫‬‮​‎‌‏⁬‮(_param0, _param1, _param2, _param3);
  }

  internal static void \u200C‬⁯⁫⁮‬‮‬‮​‮⁯⁫⁭⁪‪⁭⁫‎‏‪‌‏⁮‭⁫⁯⁫‏⁪‪‮⁪‍⁮‬‫‫‮⁪‮(
    DateTime _param0,
    \u200D‍​⁬‎‮⁮⁭⁮‌‎‭‮‎‍⁪⁬⁬‍⁬‎​⁯‭⁮‫‎‪⁭⁫‌⁮⁬‭‪‪‎⁪⁯⁪‮ _param1,
    object _param2,
    \u200D⁭⁬⁭⁪‬⁮⁫⁮⁭‬‫⁯⁬⁮‎‍‮‏⁫⁫‍‬⁬‮‏⁭‬‬‫⁮⁫⁯‍‌⁪‍⁮‏‍‮ _param3)
  {
    if (_param3.\u202A‪⁭‪⁪‎‌⁫⁭‬⁯‭⁯‎⁯‮⁭⁫⁪‌‍⁭‍⁮‭⁫⁬‭‬⁬⁫‍‭⁫⁫⁮‎⁬‫⁪‮ != 11)
      return;
    \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u202E‬⁫⁪‪‍⁮‌⁪‭‌​‌‏⁮‎‏⁬‏‮‫⁯⁫‮⁪‬‪‎⁬‫‮⁫‫‬‮​‎‌‏⁬‮(_param0, _param1, _param2, _param3);
  }

  internal static \u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ \u206A⁮‫‪⁪‫‌‌‏‏‭‏‪⁬‌⁮⁬‫‫‭‫‏‫‎‫‫‍⁯‏‭⁯‮⁭‫⁮‫⁫‫⁬‌‮(
    \u206F⁬⁫⁪⁪⁪‬​‬⁬‮⁭⁯‪‍‌⁬⁬‍‫‬‏⁯‬​‌‎⁮​‫⁪‌‎‍‫‏⁭⁪‍⁯‮ _param0,
    int _param1,
    \u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ _param2)
  {
    \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ obj1 = (\u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮) _param0.\u202B‪‏⁫‮⁬⁪⁪‪⁬‍‪‏⁭‬‏‍‪‎‍‫‪⁭‌‎‍⁯‫‌‬‫‌‍⁯‮‪⁯⁬⁫⁪‮[_param1];
    \u206A‬⁪⁯​⁯‍⁭⁯‮‎‮⁫​‎‬‌‌‏⁪‍⁫‏​⁫​‪​⁯⁫⁮⁯‮​⁬‎‫‌‌⁯‮ obj2;
    try
    {
      obj2 = \u206A‬⁪⁯​⁯‍⁭⁯‮‎‮⁫​‎‬‌‌‏⁪‍⁫‏​⁫​‪​⁯⁫⁮⁯‮​⁬‎‫‌‌⁯‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200D⁭‫⁪‬⁪‬‫‬‏‮‏⁪‮‍⁫​‪‬‎⁪⁪‌‭⁫​⁯⁪⁬‫⁯​‌‎‪‌⁪⁫⁮‫‮((\u200C‮⁭‍⁭⁬⁯⁯‬⁮‏⁭‬⁬⁫‍‮‪‫⁪⁬‎‍‬‭​‪⁫‪‭‫‍‏‫‭⁬‎‮​⁪‮) obj1, \u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u200C​⁬‏⁮‎‎‬‏⁫‏‎⁯⁮‬‪‪⁭‭⁪‬⁮‭⁪⁬⁯‎⁪‭⁪‬⁬⁯‍‎⁮⁮‌‍‮‮));
    }
    catch (Exception ex)
    {
      throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Could not read certificate policies extension from certificate.", ex, _param0, _param1);
    }
    if (obj2 == null)
      _param2 = (\u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮) null;
    return _param2;
  }
}
