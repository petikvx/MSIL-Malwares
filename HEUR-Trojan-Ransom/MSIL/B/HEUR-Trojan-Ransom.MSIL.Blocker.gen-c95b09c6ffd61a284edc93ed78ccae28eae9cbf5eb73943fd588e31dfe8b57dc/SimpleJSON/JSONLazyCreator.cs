// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONLazyCreator
// Assembly: WaitHand, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: A25291C7-A109-4713-B14B-FDD04827C77F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-c95b09c6ffd61a284edc93ed78ccae28eae9cbf5eb73943fd588e31dfe8b57dc.exe

namespace SimpleJSON
{
  internal class JSONLazyCreator : JSONNode
  {
    private JSONNode m_Node = (JSONNode) null;
    private string m_Key = (string) null;

    public JSONLazyCreator(JSONNode aNode)
    {
      this.m_Node = aNode;
      this.m_Key = (string) null;
    }

    public JSONLazyCreator(JSONNode aNode, string aKey)
    {
label_1:
      int num1 = -918154176;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -132098097)) % 6U)
        {
          case 0:
            this.m_Node = aNode;
            num1 = (int) num2 * 1622084789 ^ 1059236318;
            continue;
          case 1:
            num1 = (int) num2 * 1549048038 ^ 180308717;
            continue;
          case 2:
            num1 = (int) num2 * 100877521 ^ 889342419;
            continue;
          case 3:
            this.m_Key = aKey;
            num1 = (int) num2 * -628079293 ^ -956164951;
            continue;
          case 4:
            goto label_1;
          case 5:
            goto label_3;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    private void Set(JSONNode aVal)
    {
label_1:
      int num1 = 225050501;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1333636912)) % 11U)
        {
          case 0:
            num1 = (int) num2 * 1645615631 ^ 158016426;
            continue;
          case 1:
            this.m_Node.Add(this.m_Key, aVal);
            num1 = 1715335600;
            continue;
          case 2:
            num1 = (int) num2 * -482903625 ^ -1484327089;
            continue;
          case 3:
            num1 = (int) num2 * 1952728382 ^ 854598968;
            continue;
          case 4:
            num1 = (int) num2 * -1899381114 ^ 179617038;
            continue;
          case 5:
            goto label_1;
          case 6:
            goto label_3;
          case 7:
            int num3 = this.m_Key == null ? 174057162 : (num3 = 1664156277);
            num1 = num3 ^ (int) num2 * 1160180205;
            continue;
          case 8:
            this.m_Node.Add(aVal);
            num1 = (int) num2 * 429111747 ^ 1587662978;
            continue;
          case 9:
            num1 = (int) num2 * -1056103136 ^ -1376071803;
            continue;
          case 10:
            this.m_Node = (JSONNode) null;
            num1 = 1569542850;
            continue;
          default:
            goto label_13;
        }
      }
label_3:
      return;
label_13:;
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
label_1:
        int num1 = -2108169276;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1853242120)) % 3U)
          {
            case 1:
              num1 = (int) num2 * 519043529 ^ -296382698;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
        JSONArray aVal = new JSONArray();
        aVal.Add(value);
label_1:
        int num1 = 1510089779;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1310661400)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * 306568686 ^ -276985715;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        this.Set((JSONNode) aVal);
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -340142659;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -569576205)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -1259382687 ^ -1426161667;
              continue;
            case 2:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = (int) num2 * -827305858 ^ 684250622;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
        JSONClass aVal = new JSONClass();
        aVal.Add(aKey, value);
label_1:
        int num1 = 11341120;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1484356943)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1491528869 ^ 1034539931;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override void Add(JSONNode aItem)
    {
      JSONArray aVal = new JSONArray();
label_1:
      int num1 = -1691984036;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -351063409)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * 1752633683 ^ -2047149984;
            continue;
          case 3:
            aVal.Add(aItem);
            num1 = (int) num2 * 1447067625 ^ 412490018;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public override void Add(string aKey, JSONNode aItem)
    {
      JSONClass aVal = new JSONClass();
label_1:
      int num1 = -2138485479;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2084873661)) % 5U)
        {
          case 0:
            num1 = (int) num2 * 972573344 ^ -1731068806;
            continue;
          case 1:
            aVal.Add(aKey, aItem);
            num1 = (int) num2 * -767526511 ^ -1898313644;
            continue;
          case 2:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * 2080044724 ^ -274900392;
            continue;
          case 3:
            goto label_3;
          case 4:
            goto label_1;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public static bool operator ==(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = -506753076;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1488120308)) % 7U)
        {
          case 0:
            flag1 = (object) a == b;
            num1 = -760603715;
            continue;
          case 1:
            flag2 = b == null;
            num1 = (int) num2 * -1853822625 ^ -532582322;
            continue;
          case 2:
            flag1 = true;
            num1 = (int) num2 * -14994493 ^ -1154946680;
            continue;
          case 3:
            num1 = (int) num2 * -2088527304 ^ -1846819931;
            continue;
          case 5:
            int num3 = !flag2 ? 2143347163 : (num3 = 280693681);
            num1 = num3 ^ (int) num2 * 1036653501;
            continue;
          case 6:
            goto label_1;
          default:
            goto label_8;
        }
      }
label_8:
      return flag1;
    }

    public static bool operator !=(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = 1285908342;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2125108079)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -750069693 ^ 4047289;
            continue;
          case 1:
            flag = !(a == b);
            num1 = (int) num2 * -1626117633 ^ 847180444;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = 1704843713;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 633440826)) % 6U)
        {
          case 0:
            flag = (object) this == obj;
            num1 = 12476387;
            continue;
          case 1:
            int num3 = obj != null ? -1488003871 : (num3 = -1616909899);
            num1 = num3 ^ (int) num2 * -248508515;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * -1628046718 ^ 549268495;
            continue;
          case 4:
            flag = true;
            num1 = (int) num2 * -1773582506 ^ 1280248445;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      return flag;
    }

    public override int GetHashCode()
    {
      int hashCode = base.GetHashCode();
label_1:
      int num1 = 940180918;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 601872089)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 652824270 ^ 140010139;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return hashCode;
    }

    public override string ToString()
    {
label_1:
      int num1 = -1671934104;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1836250437)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * 684282172 ^ 774678686;
            continue;
          case 3:
            str = "";
            num1 = (int) num2 * 765563668 ^ 645272741;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public override string ToString(string aPrefix) => "";

    public override int AsInt
    {
      get
      {
        JSONData aVal = new JSONData(0);
label_1:
        int num1 = 1254084906;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 36692606)) % 5U)
          {
            case 0:
              num1 = (int) num2 * 345019865 ^ -246056231;
              continue;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -2017164824 ^ 501988720;
              continue;
            case 3:
              goto label_1;
            case 4:
              asInt = 0;
              num1 = (int) num2 * 1393881011 ^ -1573378635;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asInt;
      }
      set => this.Set((JSONNode) new JSONData(value));
    }

    public override float AsFloat
    {
      get
      {
label_1:
        int num1 = -1580975356;
        float asFloat;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -731812686)) % 5U)
          {
            case 0:
              asFloat = 0.0f;
              num1 = (int) num2 * 117703057 ^ 1912261492;
              continue;
            case 1:
              aVal = new JSONData(0.0f);
              num1 = (int) num2 * 2065007672 ^ 1972789207;
              continue;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 956122960 ^ -1084322919;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_6:
        return asFloat;
      }
      set
      {
label_1:
        int num1 = -830245360;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1068422016)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              aVal = new JSONData(value);
              num1 = (int) num2 * -2000722009 ^ -1138966888;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        this.Set((JSONNode) aVal);
      }
    }

    public override double AsDouble
    {
      get
      {
        this.Set((JSONNode) new JSONData(0.0));
label_1:
        int num1 = -1923128694;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1006091548)) % 5U)
          {
            case 1:
              num1 = (int) num2 * 478123868 ^ -716963099;
              continue;
            case 2:
              num1 = (int) num2 * 152848415 ^ 1422935448;
              continue;
            case 3:
              asDouble = 0.0;
              num1 = (int) num2 * 557688704 ^ -419896943;
              continue;
            case 4:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_6:
        return asDouble;
      }
      set => this.Set((JSONNode) new JSONData(value));
    }

    public override bool AsBool
    {
      get
      {
label_1:
        int num1 = 642144451;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 702082466)) % 4U)
          {
            case 1:
              this.Set((JSONNode) new JSONData(false));
              asBool = false;
              num1 = (int) num2 * 1577405917 ^ 468691380;
              continue;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * 2137577614 ^ 265751132;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asBool;
      }
      set => this.Set((JSONNode) new JSONData(value));
    }

    public override JSONArray AsArray
    {
      get
      {
        JSONArray aVal = new JSONArray();
label_1:
        int num1 = 1547913046;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1147516074)) % 5U)
          {
            case 0:
              num1 = (int) num2 * -2089756654 ^ 1748122198;
              continue;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1025459690 ^ 242959621;
              continue;
            case 3:
              goto label_1;
            case 4:
              asArray = aVal;
              num1 = (int) num2 * 1528704307 ^ 25237357;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asArray;
      }
    }

    public override JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = 139101447;
        JSONClass aVal;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1065862726)) % 6U)
          {
            case 0:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1998847526 ^ -1888212534;
              continue;
            case 2:
              asObject = aVal;
              num1 = (int) num2 * -1340506647 ^ -727181632;
              continue;
            case 3:
              goto label_1;
            case 4:
              num1 = (int) num2 * 928822077 ^ -1213577837;
              continue;
            case 5:
              aVal = new JSONClass();
              num1 = (int) num2 * 2041594104 ^ 635623488;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asObject;
      }
    }
  }
}
