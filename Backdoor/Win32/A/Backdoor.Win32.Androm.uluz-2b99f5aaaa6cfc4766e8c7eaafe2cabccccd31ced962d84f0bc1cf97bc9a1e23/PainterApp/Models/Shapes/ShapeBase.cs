// Decompiled with JetBrains decompiler
// Type: PainterApp.Models.Shapes.ShapeBase
// Assembly: 太城hضd氏bTنH, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FB883643-FAF4-44BB-B4FC-F1B0FC1059A6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\Backdoor.Win32.Androm.uluz-2b99f5aaaa6cfc4766e8c7eaafe2cabccccd31ced962d84f0bc1cf97bc9a1e23.exe

using System.Drawing;

namespace PainterApp.Models.Shapes
{
  public abstract class ShapeBase
  {
    public int LineWidth { get; set; }

    public MyColor Color { get; set; }

    public Point Start { get; private set; }

    public Point End { get; private set; }

    public ShapeBase(MyColor color, int lineWidth)
    {
      this.Color = color;
      this.LineWidth = lineWidth;
    }

    public ShapeBase(Point start, Point end, MyColor color, int lineWidth)
    {
      this.Start = start;
      this.End = end;
      this.Color = color;
      this.LineWidth = lineWidth;
    }

    public virtual void ChangeCordinates(Point start, Point end)
    {
      this.Start = start;
      this.End = end;
    }

    protected void OrderCordinates()
    {
      Point point1 = this.Start;
      int x1 = point1.X;
      point1 = this.End;
      int x2 = point1.X;
      int x3;
      int x4;
      if (x1 < x2)
      {
        Point point2 = this.Start;
        x3 = point2.X;
        point2 = this.End;
        x4 = point2.X;
      }
      else
      {
        Point point3 = this.End;
        x3 = point3.X;
        point3 = this.Start;
        x4 = point3.X;
      }
      Point point4 = this.Start;
      int y1 = point4.Y;
      point4 = this.End;
      int y2 = point4.Y;
      int y3;
      int y4;
      if (y1 < y2)
      {
        point4 = this.Start;
        y3 = point4.Y;
        point4 = this.End;
        y4 = point4.Y;
      }
      else
      {
        point4 = this.End;
        y3 = point4.Y;
        point4 = this.Start;
        y4 = point4.Y;
      }
      this.Start = new Point(x3, y3);
      this.End = new Point(x4, y4);
    }
  }
}
