// Decompiled with JetBrains decompiler
// Type: fLaSh.Dissembler.IconImage
// Assembly: Pass, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B2D05123-D1EE-4E11-B4EC-79932D637F25
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00100-msil\Trojan-Ransom.Win32.Blocker.ajjm-b001e2657b2764cdbd2d9790e4eb90ffd0dc35ed5746bdc109cf01610ec1d1c3.exe

using In2aXkPRwyNprNdGJT;
using System;
using System.IO;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace fLaSh.Dissembler
{
  public class IconImage
  {
    private Gdi32.BITMAPINFOHEADER zLR4mROlL7;
    private byte[] JQC4iV3iyI;

    public byte[] Data
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => this.JQC4iV3iyI;
      [MethodImpl(MethodImplOptions.NoInlining)] set
      {
        this.JQC4iV3iyI = value;
        IntPtr num = Marshal.AllocHGlobal(Marshal.SizeOf((object) this.zLR4mROlL7));
        try
        {
          Marshal.Copy(this.JQC4iV3iyI, 0, num, Marshal.SizeOf((object) this.zLR4mROlL7));
          this.zLR4mROlL7 = (Gdi32.BITMAPINFOHEADER) Marshal.PtrToStructure(num, typeof (Gdi32.BITMAPINFOHEADER));
        }
        finally
        {
          Marshal.FreeHGlobal(num);
        }
      }
    }

    public Gdi32.BITMAPINFOHEADER Header
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => this.zLR4mROlL7;
    }

    public int Size
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => this.JQC4iV3iyI.Length;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public IconImage()
    {
      rbdjPoeaA1BgLlupgC.XYjXOJ9ztPdU4();
      this.zLR4mROlL7 = new Gdi32.BITMAPINFOHEADER();
      // ISSUE: explicit constructor call
      base.\u002Ector();
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public IconImage(string filename)
    {
      rbdjPoeaA1BgLlupgC.XYjXOJ9ztPdU4();
      this.zLR4mROlL7 = new Gdi32.BITMAPINFOHEADER();
      // ISSUE: explicit constructor call
      base.\u002Ector();
      this.Data = File.ReadAllBytes(filename);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public void Read(IntPtr lpData, uint size)
    {
      this.zLR4mROlL7 = (Gdi32.BITMAPINFOHEADER) Marshal.PtrToStructure(lpData, typeof (Gdi32.BITMAPINFOHEADER));
      this.JQC4iV3iyI = new byte[(IntPtr) size];
      Marshal.Copy(lpData, this.JQC4iV3iyI, 0, this.JQC4iV3iyI.Length);
    }
  }
}
