// Decompiled with JetBrains decompiler
// Type: Coache.Business.PagosManager
// Assembly: IsCopyConstruc, Version=5.6.2.1, Culture=neutral, PublicKeyToken=null
// MVID: 1DA50973-FF9A-4563-8B8F-74E2573677DF
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-136935297fa08738f6957068951067c699c91b2902f3ea14da650289cabfd29d.exe

using Coache.Common;
using Data;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration;
using System.Data;
using System.Linq;

namespace Coache.Business
{
  public class PagosManager
  {
    public BindingList<Pago> GetAll(User user)
    {
      DataTable dataTable = SqlDataAccess.ExecuteDataTableQuery(ConfigurationManager.ConnectionStrings["GrouponConnectionString"].ToString(), "GRUPO_N.GetPagosCliente", SqlDataAccessArgs.CreateWith("@ID_Cliente", (object) user.UserID).Arguments);
      BindingList<Pago> all = new BindingList<Pago>();
      if (dataTable != null && dataTable.Rows != null)
      {
        foreach (DataRow row in (InternalDataCollectionBase) dataTable.Rows)
          all.Add(new Pago()
          {
            Credito = double.Parse(row["Credito"].ToString()),
            Fecha = Convert.ToDateTime(row["Fecha"]),
            ID = int.Parse(row["ID"].ToString()),
            TipoPago = (TipoPago) int.Parse(row["ID_TipoPago"].ToString()),
            Banco = row["Banco"].ToString(),
            Tarjeta = row["Numero"].ToString()
          });
      }
      return all;
    }

    public List<TipoPago> GetTipoPagos() => Enum.GetValues(typeof (TipoPago)).Cast<TipoPago>().ToList<TipoPago>();

    public void Add(Pago pago, User user) => SqlDataAccess.ExecuteNonQuery(ConfigurationManager.ConnectionStrings["GrouponConnectionString"].ToString(), "GRUPO_N.InsertPago", SqlDataAccessArgs.CreateWith("@ID_Cliente", (object) user.UserID).And("@Credito", (object) pago.Credito).And("@Fecha", (object) pago.Fecha).And("@ID_TipoPago", (object) (int) pago.TipoPago).And("@Tarjeta", (object) pago.Tarjeta).And("@Banco", (object) pago.Banco).Arguments);
  }
}
