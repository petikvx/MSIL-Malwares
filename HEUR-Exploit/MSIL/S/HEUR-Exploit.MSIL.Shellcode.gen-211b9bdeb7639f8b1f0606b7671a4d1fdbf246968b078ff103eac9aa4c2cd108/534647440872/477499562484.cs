// Decompiled with JetBrains decompiler
// Type: 534647440872.477499562484
// Assembly: 190180155270, Version=7.6.1.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
// MVID: 20B0A582-54C5-4C64-BCB9-2AC73608F590
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-211b9bdeb7639f8b1f0606b7671a4d1fdbf246968b078ff103eac9aa4c2cd108.exe

using \u003463056308027;
using \u003475310219084;
using \u003534647440872;
using Microsoft.ProgramSynthesis.Utils;
using System;
using System.Collections.Generic;
using System.Globalization;
using System.Text;

namespace \u003534647440872
{
  public class \u003477499562484 : IRichDataType, IEquatable<IRichDataType>
  {
    private static readonly string \u003025084559963 = true.ToString((IFormatProvider) CultureInfo.InvariantCulture);
    private static readonly string \u003784179523657 = false.ToString((IFormatProvider) CultureInfo.InvariantCulture);
    private readonly HashSet<string> \u003942389930911 = new HashSet<string>();
    private readonly HashSet<string> \u003644142387368 = new HashSet<string>();
    private static readonly Lazy<Dictionary<string, bool>> \u003831900428359 = new Lazy<Dictionary<string, bool>>(new Func<Dictionary<string, bool>>(\u003477499562484.\u003964216174715));

    public bool \u003759058878945(IRichDataType _param1) => _param1 is \u003477499562484 obj && this.\u003942389930911.SetEquals((IEnumerable<string>) obj.\u003942389930911) && this.\u003644142387368.SetEquals((IEnumerable<string>) obj.\u003644142387368) && object.Equals((object) this.\u003417624964401, (object) obj.\u003417624964401);

    public IEnumerable<string> \u003304071846640 => (IEnumerable<string>) this.\u003942389930911;

    public IEnumerable<string> \u003263248571856 => (IEnumerable<string>) this.\u003644142387368;

    public Optional<string> \u003180984555547(string _param1)
    {
      if (_param1 == null)
        return Optional<string>.Nothing;
      if (this.\u003624918851138)
        _param1 = UnicodeUtils.NormalizeAndTrim(_param1, NormalizationForm.FormC);
      if (string.IsNullOrEmpty(_param1))
        return OptionalUtils.Some<string>(string.Empty);
      bool flag;
      return \u003477499562484.\u003242348682240.TryGetValue(_param1.ToLower(), out flag) ? OptionalUtils.Some<string>(flag ? \u003477499562484.\u003025084559963 : \u003477499562484.\u003784179523657) : Optional<string>.Nothing;
    }

    public string \u003417624964401 { get; private set; }

    public \u003547566135655 \u003543976777388 => \u003547566135655.Boolean;

    public \u003547566135655 \u003346526149062 => \u003547566135655.Boolean;

    public bool \u003431273125825 { get; set; }

    public bool \u003624918851138 { get; set; }

    public bool \u003632916853028 { get; set; }

    public bool \u003129526337294(string _param1) => \u003477499562484.\u003242348682240.ContainsKey(_param1.ToLower());

    public bool \u003846733930073(string _param1_1)
    {
      if (this.\u003068289922974)
        return false;
      if (string.IsNullOrWhiteSpace(_param1_1))
      {
        ++this.\u003176549319498;
        return true;
      }
      ++this.\u003431466309030;
      Optional<string> optional = this.\u003180984555547(_param1_1);
      if (!optional.HasValue)
      {
        if (this.\u003417624964401 == null && !CollectionUtils.Any<char>((IEnumerable<char>) _param1_1, (Func<char, int, bool>) ((_param1_2, _param2) => char.IsDigit(_param1_2))) || this.\u003417624964401 == _param1_1)
        {
          this.\u003417624964401 = _param1_1;
          ++this.\u003176549319498;
          return true;
        }
        ++this.\u003649961191180;
        return false;
      }
      if (optional.Equals(OptionalUtils.Some<string>(\u003477499562484.\u003025084559963)))
        this.\u003942389930911.Add(_param1_1);
      else
        this.\u003644142387368.Add(_param1_1);
      ++this.\u003408631521872;
      return true;
    }

    public void \u003039434605881(long _param1)
    {
      this.\u003068289922974 = true;
      this.\u003876445536359 = !this.\u003392262057174 && this.\u003649961191180 == 0 && this.\u003408631521872 > 0 && (double) this.\u003176549319498 < 0.5 * (double) _param1 && this.\u003942389930911.Count > 0 && this.\u003644142387368.Count > 0;
    }

    public int \u003649961191180 { get; private set; }

    public int \u003431466309030 { get; private set; }

    public int \u003408631521872 { get; private set; }

    public int \u003176549319498 { get; private set; }

    public bool \u003876445536359 { get; private set; }

    public bool \u003392262057174 { get; private set; }

    public bool \u003068289922974 { get; private set; }

    private static Dictionary<string, bool> \u003242348682240 => \u003477499562484.\u003831900428359.Value;

    public long \u003192864154461 => (long) (this.\u003176549319498 * 2);

    private static Dictionary<string, bool> \u003964216174715() => new Dictionary<string, bool>()
    {
      ["t"] = true,
      ["f"] = false,
      ["true"] = true,
      ["false"] = false,
      ["y"] = true,
      ["n"] = false,
      ["yes"] = true,
      ["no"] = false,
      ["1"] = true,
      ["0"] = false,
      ["\"t\""] = true,
      ["\"f\""] = false,
      ["\"true\""] = true,
      ["\"false\""] = false,
      ["\"y\""] = true,
      ["\"n\""] = false,
      ["\"yes\""] = true,
      ["\"no\""] = false,
      ["\"1\""] = true,
      ["\"0\""] = false
    };
  }
}
