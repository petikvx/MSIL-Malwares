// Decompiled with JetBrains decompiler
// Type: SimpleChessApp.Game.NotationManager
// Assembly: طv, Version=2.159.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8DDF840D-AD0E-4D2F-A03C-7E334C2C97A3
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.01-msil\HEUR-Trojan-Ransom.MSIL.Makop.gen-2abb16d594f4b36fc8b8aab8cab7736350421c619cec8e12e8975e87f7a99faa.exe

using System.ComponentModel;

namespace SimpleChessApp.Game
{
  public class NotationManager
  {
    public BindingList<Turn> Moves { get; set; }

    public NotationManager()
    {
label_1:
      int num1 = -1957674852;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1153633199)) % 5U)
        {
          case 0:
            this.Moves = new BindingList<Turn>();
            num1 = (int) num2 * -1721238906 ^ 2088058598;
            continue;
          case 1:
            num1 = (int) num2 * -531835327 ^ -1475295454;
            continue;
          case 2:
            goto label_3;
          case 3:
            num1 = (int) num2 * 942178057 ^ -1007308338;
            continue;
          case 4:
            goto label_1;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    internal void Clear()
    {
label_1:
      int num1 = -1434907371;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2074657492)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -20878007 ^ 1933917439;
            continue;
          case 1:
            this.Moves.Clear();
            num1 = (int) num2 * -20294546 ^ 1020693578;
            continue;
          case 2:
            goto label_1;
          case 3:
            goto label_3;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }
  }
}
