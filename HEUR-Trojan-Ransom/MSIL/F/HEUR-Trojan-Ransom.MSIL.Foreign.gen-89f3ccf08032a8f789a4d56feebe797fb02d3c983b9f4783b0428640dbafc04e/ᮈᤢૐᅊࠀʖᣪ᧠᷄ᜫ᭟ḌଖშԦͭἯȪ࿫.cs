// Decompiled with JetBrains decompiler
// Type: ẍ߮ᑐᗭ৲ᗒ̛ᗫ།ཏӍᡸẗ᡽़य़ᢠ᛭༌.ᮈᤢૐᅊࠀʖᣪ᧠᷄ᜫ᭟ḌଖშԦͭἯȪ࿫
// Assembly: start1, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B30574D9-5740-4AF1-9AAD-FBD9FE6B2A96
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00100-msil\HEUR-Trojan-Ransom.MSIL.Foreign.gen-89f3ccf08032a8f789a4d56feebe797fb02d3c983b9f4783b0428640dbafc04e.exe

using System;
using System.Runtime.InteropServices;
using ẍ߮ᑐᗭ\u09F2ᗒ̛ᗫ\u0F0DཏӍ\u1878ẗ\u187D़य़ᢠ\u16ED\u0F0C;

namespace ẍ߮ᑐᗭ\u09F2ᗒ̛ᗫ\u0F0DཏӍ\u1878ẗ\u187D़य़ᢠ\u16ED\u0F0C
{
  internal class ᮈᤢૐᅊࠀʖᣪ\u19E0᷄ᜫ\u1B5FḌଖშԦͭἯȪ\u0FEB
  {
    public static string \u08C2؅ḩ\u0D45ணᤆඪ()
    {
      OperatingSystem osVersion = Environment.OSVersion;
      string str = "";
      if (osVersion.Platform.ToString() == "Win32NT")
      {
        switch (ᮈᤢૐᅊࠀʖᣪ\u19E0᷄ᜫ\u1B5FḌଖშԦͭἯȪ\u0FEB.Ėዛᮮ᧑ᯣ๕\u002Dᬑೄɠ(osVersion.Version))
        {
          case "4.1.2222":
            str = "Windows 98";
            break;
          case "4.1.2600":
            str = "Windows 98SE";
            break;
          case "4.9.3000":
            str = "Windows ME";
            break;
          case "5.0.2195":
            str = "Windows 2000";
            break;
          case "5.1.2600":
          case "5.2.3790":
            str = "Windows XP";
            break;
          case "6.0.6000":
          case "6.0.6001":
          case "6.0.6002":
          case "6.0.6003":
            str = "Windows Vista";
            break;
          case "6.1.7600":
          case "6.1.7601":
          case "6.1.7602":
          case "6.1.7603":
            str = "Windows 7";
            break;
          default:
            str = "Unknown";
            break;
        }
      }
      string empty = string.Empty;
      ᮈᤢૐᅊࠀʖᣪ\u19E0᷄ᜫ\u1B5FḌଖშԦͭἯȪ\u0FEB.ਸ\u07BBᩯϴ\u0D54\u0D98ᐼ ਸᩯϴᐼ = new ᮈᤢૐᅊࠀʖᣪ\u19E0᷄ᜫ\u1B5FḌଖშԦͭἯȪ\u0FEB.ਸ\u07BBᩯϴ\u0D54\u0D98ᐼ();
      ਸᩯϴᐼ.\u02FBҥᗟᙴӳԈŤጊಝᇌᥲύ = Marshal.SizeOf(typeof (ᮈᤢૐᅊࠀʖᣪ\u19E0᷄ᜫ\u1B5FḌଖშԦͭἯȪ\u0FEB.ਸ\u07BBᩯϴ\u0D54\u0D98ᐼ));
      if (ᮈᤢૐᅊࠀʖᣪ\u19E0᷄ᜫ\u1B5FḌଖშԦͭἯȪ\u0FEB.ק\u0EE6๙సާᵉᱱ(ref ਸᩯϴᐼ))
      {
        if (ਸᩯϴᐼ.ᛡᏇᆦฅеಂႍ߮ᢨ\u1C93\u0A3A.ToString().Contains("Service Pack 1"))
          str += " SP1";
        if (ਸᩯϴᐼ.ᛡᏇᆦฅеಂႍ߮ᢨ\u1C93\u0A3A.ToString().Contains("Service Pack 2"))
          str += " SP2";
        if (ਸᩯϴᐼ.ᛡᏇᆦฅеಂႍ߮ᢨ\u1C93\u0A3A.ToString().Contains("Service Pack 3"))
          str += " SP3";
        if (ਸᩯϴᐼ.ᛡᏇᆦฅеಂႍ߮ᢨ\u1C93\u0A3A.ToString().Contains("Service Pack 4"))
          str += " SP4";
        if (ਸᩯϴᐼ.ᛡᏇᆦฅеಂႍ߮ᢨ\u1C93\u0A3A.ToString().Contains("Service Pack 5"))
          str += " SP5";
        if (ਸᩯϴᐼ.ᛡᏇᆦฅеಂႍ߮ᢨ\u1C93\u0A3A.ToString().Contains("Service Pack 6"))
          str += " SP6";
        if (ਸᩯϴᐼ.ᛡᏇᆦฅеಂႍ߮ᢨ\u1C93\u0A3A.ToString().Contains("Service Pack 7"))
          str += " SP7";
        if (ਸᩯϴᐼ.ᛡᏇᆦฅеಂႍ߮ᢨ\u1C93\u0A3A.ToString().Contains("Service Pack 8"))
          str += " SP8";
        if (ਸᩯϴᐼ.ᛡᏇᆦฅеಂႍ߮ᢨ\u1C93\u0A3A.ToString().Contains("Service Pack 9"))
          str += " SP9";
        str = !ᮈᤢૐᅊࠀʖᣪ\u19E0᷄ᜫ\u1B5FḌଖშԦͭἯȪ\u0FEB.\u0BEBלͭŻᮺɈᰲ() ? str + " - x86" : str + " - x64";
      }
      return str;
    }

    private static string Ėዛᮮ᧑ᯣ๕\u002Dᬑೄɠ(Version _param0) => _param0.Major.ToString() + "." + _param0.Minor.ToString() + "." + _param0.Build.ToString();

    [DllImport("kernel32.dll", EntryPoint = "GetVersionEx")]
    private static extern bool ק\u0EE6๙సާᵉᱱ(
      ref ᮈᤢૐᅊࠀʖᣪ\u19E0᷄ᜫ\u1B5FḌଖშԦͭἯȪ\u0FEB.ਸ\u07BBᩯϴ\u0D54\u0D98ᐼ _param0);

    public static bool \u0BEBלͭŻᮺɈᰲ()
    {
      try
      {
        return !string.IsNullOrEmpty(Environment.GetEnvironmentVariable("ProgramW6432"));
      }
      catch
      {
        return false;
      }
    }

    public struct ਸ\u07BBᩯϴ\u0D54\u0D98ᐼ
    {
      public int \u02FBҥᗟᙴӳԈŤጊಝᇌᥲύ;
      public int \u07B3ᆌᶅᐟࢪLǊ\u19DC;
      public int \u19F0Ꮫุ\u00D7ɉ\u066Aᔿ\u1DFBώʑཆᔸᣮ\u0D56ᄂΒ\u00BC;
      public int ѷྡྷᐞ৮ࠕᡥᯚʄ;
      public int \u1C2A\u0F14Ҫോቱᖮ݅\u09F4ȃ\u083CЛʾᨹᴋ\u0DE2;
      [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 128)]
      public string ᛡᏇᆦฅеಂႍ߮ᢨ\u1C93\u0A3A;
      public short ဂெᔓнἄျᡕ\u0EE6;
      public short ᒅᰔỉᆨ͢\u0EFE᪕ᯠХॾᇖؼᬯၴҝਲ਼Ꮏᄹྦྷ;
      public short \u1BFCᏣᔞ\u0B73nᤲᕽቨἝ\u02F9\u09FEҶḻ\u0EDBɛᛲምᮝÓ;
      public byte ᔷ୍ᒃጔឣ\u009Bᐓ᪑ၵ᥉\u0B45Ṃࢭၟɧ\u00A2۶ፖ;
      public byte \u0970ᣀ࠭ᰂīếഠ݀\u0C54น೫\u1756ᝢ;
    }
  }
}
