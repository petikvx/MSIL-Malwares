// Decompiled with JetBrains decompiler
// Type: CC.Common.Utils.InputBox
// Assembly: Interna, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 443E8749-461D-4E08-9210-1C57029CD0B8
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan.MSIL.Crypt.gen-0703de1e7a681eeac51ea409b707c66a2494735fe462e6aabc07972b556056f5.exe

using System;
using System.ComponentModel;
using System.Drawing;
using System.Windows.Forms;

namespace CC.Common.Utils
{
  public class InputBox : Form
  {
    protected Button buttonOK;
    protected Button buttonCancel;
    protected Label labelPrompt;
    protected TextBox textBoxText;
    protected ErrorProvider errorProviderText;
    private Container components = (Container) null;
    private InputBoxValidatingHandler _validator;

    private InputBox() => this.InitializeComponent();

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(disposing);
    }

    private void InitializeComponent()
    {
      this.buttonOK = new Button();
      this.buttonCancel = new Button();
      this.textBoxText = new TextBox();
      this.labelPrompt = new Label();
      this.errorProviderText = new ErrorProvider();
      this.SuspendLayout();
      this.buttonOK.Anchor = AnchorStyles.Top | AnchorStyles.Right;
      this.buttonOK.DialogResult = DialogResult.OK;
      this.buttonOK.Location = new Point(288, 72);
      this.buttonOK.Name = "buttonOK";
      this.buttonOK.TabIndex = 2;
      this.buttonOK.Text = "OK";
      this.buttonOK.Click += new EventHandler(this.buttonOK_Click);
      this.buttonCancel.Anchor = AnchorStyles.Top | AnchorStyles.Right;
      this.buttonCancel.CausesValidation = false;
      this.buttonCancel.DialogResult = DialogResult.Cancel;
      this.buttonCancel.Location = new Point(376, 72);
      this.buttonCancel.Name = "buttonCancel";
      this.buttonCancel.TabIndex = 3;
      this.buttonCancel.Text = "Cancel";
      this.buttonCancel.Click += new EventHandler(this.buttonCancel_Click);
      this.textBoxText.Location = new Point(16, 32);
      this.textBoxText.Name = "textBoxText";
      this.textBoxText.Size = new Size(416, 20);
      this.textBoxText.TabIndex = 1;
      this.textBoxText.Text = "";
      this.textBoxText.Validating += new CancelEventHandler(this.textBoxText_Validating);
      this.textBoxText.TextChanged += new EventHandler(this.textBoxText_TextChanged);
      this.labelPrompt.AutoSize = true;
      this.labelPrompt.Location = new Point(15, 15);
      this.labelPrompt.Name = "labelPrompt";
      this.labelPrompt.Size = new Size(39, 13);
      this.labelPrompt.TabIndex = 0;
      this.labelPrompt.Text = "prompt";
      this.errorProviderText.DataMember = (string) null;
      this.AcceptButton = (IButtonControl) this.buttonOK;
      this.AutoScaleBaseSize = new Size(5, 13);
      this.CancelButton = (IButtonControl) this.buttonCancel;
      this.ClientSize = new Size(464, 104);
      this.Controls.AddRange(new Control[4]
      {
        (Control) this.labelPrompt,
        (Control) this.textBoxText,
        (Control) this.buttonCancel,
        (Control) this.buttonOK
      });
      this.FormBorderStyle = FormBorderStyle.FixedDialog;
      this.MaximizeBox = false;
      this.MinimizeBox = false;
      this.Name = nameof (InputBox);
      this.Text = "Title";
      this.ResumeLayout(false);
    }

    private void buttonCancel_Click(object sender, EventArgs e)
    {
      this.Validator = (InputBoxValidatingHandler) null;
      this.Close();
    }

    private void buttonOK_Click(object sender, EventArgs e) => this.Close();

    public static InputBoxResult Show(
      string prompt,
      string title,
      string defaultResponse,
      InputBoxValidatingHandler validator,
      int xpos,
      int ypos)
    {
      using (InputBox inputBox = new InputBox())
      {
        inputBox.labelPrompt.Text = prompt;
        inputBox.Text = title;
        inputBox.textBoxText.Text = defaultResponse;
        if (xpos >= 0 && ypos >= 0)
        {
          inputBox.StartPosition = FormStartPosition.Manual;
          inputBox.Left = xpos;
          inputBox.Top = ypos;
        }
        else
          inputBox.StartPosition = FormStartPosition.CenterParent;
        inputBox.Validator = validator;
        DialogResult dialogResult = inputBox.ShowDialog();
        InputBoxResult inputBoxResult = new InputBoxResult();
        if (dialogResult == DialogResult.OK)
        {
          inputBoxResult.Text = inputBox.textBoxText.Text;
          inputBoxResult.OK = true;
        }
        return inputBoxResult;
      }
    }

    public static InputBoxResult Show(
      string prompt,
      string title,
      string defaultText,
      InputBoxValidatingHandler validator)
    {
      return InputBox.Show(prompt, title, defaultText, validator, -1, -1);
    }

    public static InputBoxResult Show(
      string prompt,
      string title,
      string defaultText)
    {
      return InputBox.Show(prompt, title, defaultText, (InputBoxValidatingHandler) null);
    }

    private void textBoxText_TextChanged(object sender, EventArgs e) => this.errorProviderText.SetError((Control) this.textBoxText, "");

    private void textBoxText_Validating(object sender, CancelEventArgs e)
    {
      if (this.Validator == null)
        return;
      InputBoxValidatingArgs e1 = new InputBoxValidatingArgs();
      e1.Text = this.textBoxText.Text;
      this.Validator((object) this, e1);
      if (e1.Cancel)
      {
        e.Cancel = true;
        this.errorProviderText.SetError((Control) this.textBoxText, e1.Message);
      }
    }

    protected InputBoxValidatingHandler Validator
    {
      get => this._validator;
      set => this._validator = value;
    }
  }
}
