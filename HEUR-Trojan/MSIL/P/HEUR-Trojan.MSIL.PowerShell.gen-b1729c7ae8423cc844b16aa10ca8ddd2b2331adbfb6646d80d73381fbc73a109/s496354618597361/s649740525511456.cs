// Decompiled with JetBrains decompiler
// Type: s496354618597361.s649740525511456
// Assembly: s968508024776124, Version=2.0.47.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: E3596912-35E7-405B-A05A-F5F12AB5E292
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan.MSIL.PowerShell.gen-b1729c7ae8423cc844b16aa10ca8ddd2b2331adbfb6646d80d73381fbc73a109.exe

using Dia2Lib;
using s066122474154154;
using s158708423978940;
using s197089294584183;
using s206683195330003;
using s375012979798828;
using s430663705211726;
using s534789655168184;
using s608480027755992;
using s827992872880859;
using s851819648760407;
using s892147355897104;
using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Globalization;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;

namespace s496354618597361
{
  public class s649740525511456 : s389047933096245
  {
    private bool s761206147722004;
    private Dictionary<int, string> s454206073438238;
    private string s658191314245931;
    private Guid s271910325255801;
    private int s782111477961208;
    private s389047933096245 s744083895510254;
    private bool s438470590910577;
    internal readonly IDiaSession s482894794510832;
    private readonly s435790585148060 s060200400225828;
    private readonly IDiaDataSource3 s167096708552694;
    private readonly IDiaEnumSymbolsByAddr s765017497430541;
    private readonly Lazy<IReadOnlyDictionary<uint, string>> s998646023122231;

    public string s362391379025396(uint s260680551803095)
    {
      string str;
      return !this.s998646023122231.Value.TryGetValue(s260680551803095, out str) ? (string) null : str;
    }

    public string s657194150335332(uint s798443490265774)
    {
      uint s997092865766583 = 0;
      return this.s781407123404822(s798443490265774, ref s997092865766583);
    }

    public string s781407123404822(uint s953530793625857, ref uint s997092865766583)
    {
      // ISSUE: variable of a compiler-generated type
      s649740525511456.s074695545700823 s074695545700823 = (s649740525511456.s074695545700823) new s649740525511456.s495333248286015();
      Thread.Sleep(0);
      if (this.s765017497430541 == null)
        return "";
      IDiaSymbol idiaSymbol = this.s765017497430541.symbolByRVA(s953530793625857);
      if (idiaSymbol == null)
        return "";
      string input = idiaSymbol.name;
      if (input == null)
        return "";
      ulong length1 = idiaSymbol.length;
      s997092865766583 = idiaSymbol.relativeVirtualAddress;
      uint relativeVirtualAddress = idiaSymbol.relativeVirtualAddress;
      if ((relativeVirtualAddress > s953530793625857 || (ulong) s953530793625857 >= (ulong) relativeVirtualAddress + length1) && length1 != 0UL)
      {
        this.s060200400225828.s682952334786273.WriteLine("Warning: NOT IN RANGE: address 0x{0:x} start {2:x} end {3:x} Offset {4:x} Len {5:x}, symbol {1}, prefixing with ??.", (object) s953530793625857, (object) input, (object) relativeVirtualAddress, (object) (ulong) ((long) relativeVirtualAddress + (long) length1), (object) (uint) ((int) s953530793625857 - (int) relativeVirtualAddress), (object) length1);
        input = "??" + input;
      }
      if (0 <= input.IndexOf('@'))
      {
        string str = (string) null;
        idiaSymbol.get_undecoratedNameEx(4096U, ref str);
        if (str != null)
          input = str;
        if (input.StartsWith("@"))
          input = input.Substring(1);
        if (input.StartsWith("_"))
          input = input.Substring(1);
        int length2 = input.IndexOf('@');
        if (0 < length2)
          input = input.Substring(0, length2);
      }
      int length3 = input.LastIndexOf('$');
      if (0 <= length3 && length3 + 2 < input.Length && input[length3 + 1] == '#' && 0 <= input.IndexOf('#', length3 + 2))
        input = input.Substring(0, length3);
      ((s649740525511456.s495333248286015) s074695545700823).s907572728284773 = this.s012439154252468();
      if (((s649740525511456.s495333248286015) s074695545700823).s907572728284773 != null)
      {
        // ISSUE: object of a compiler-generated type is created
        // ISSUE: variable of a compiler-generated type
        s649740525511456.s530892078482371 s530892078482371 = (s649740525511456.s530892078482371) new s649740525511456.s074695545700823();
        // ISSUE: reference to a compiler-generated field
        s530892078482371.s040290524914878 = s074695545700823;
        // ISSUE: reference to a compiler-generated field
        ((s649740525511456.s074695545700823) s530892078482371).s063097757169745 = false;
        // ISSUE: reference to a compiler-generated method
        input = new Regex("\\$(\\d+)_").Replace(input, new MatchEvaluator(s530892078482371.s402169814834640));
        // ISSUE: reference to a compiler-generated field
        if (!((s649740525511456.s074695545700823) s530892078482371).s063097757169745)
        {
          // ISSUE: reference to a compiler-generated field
          input = s649740525511456.s036684664191997(((s649740525511456.s495333248286015) s530892078482371.s040290524914878).s907572728284773, int.MaxValue, string.Empty) + input;
        }
      }
      return input;
    }

    private static string s036684664191997(
      Dictionary<int, string> s275109286062876,
      int s430688395029971,
      string s357797368687449)
    {
      string assemblyName;
      if (s275109286062876.TryGetValue(s430688395029971, out assemblyName))
      {
        try
        {
          return new AssemblyName(assemblyName).Name + "!";
        }
        catch (Exception ex)
        {
        }
      }
      return s357797368687449;
    }

    public s541749027096251 s815032161496393(uint s761069330518846) => this.s258828146480631(s761069330518846, out string _, out uint _, out int _);

    public s541749027096251 s258828146480631(
      uint s380596893851035,
      out string s372688766090338,
      out uint s869567465058135,
      out int s280013535982297)
    {
      s372688766090338 = (string) null;
      s869567465058135 = 0U;
      s280013535982297 = -1;
      this.s060200400225828.s472927214603781.WriteLine("SourceLocationForRva: looking up RVA {0:x} ", (object) s380596893851035);
      IDiaEnumLineNumbers idiaEnumLineNumbers;
      this.s482894794510832.findLinesByRVA(s380596893851035, 0U, ref idiaEnumLineNumbers);
      IDiaLineNumber idiaLineNumber;
      uint num1;
      idiaEnumLineNumbers.Next(1U, ref idiaLineNumber, ref num1);
      if (num1 == 0U)
      {
        this.s060200400225828.s472927214603781.WriteLine("SourceLocationForRva: did not find line info Looking for mangled symbol name (for NGEN pdbs)");
        IDiaSymbol idiaSymbol = this.s765017497430541.symbolByRVA(s380596893851035);
        if (idiaSymbol != null)
        {
          string name = idiaSymbol.name;
          if (name != null)
          {
            this.s060200400225828.s472927214603781.WriteLine("SourceLocationForRva: RVA lives in method with 4.6.1 mangled name {0}", (object) name);
            int num2 = name.LastIndexOf("$#");
            if (0 <= num2 && num2 + 2 < name.Length)
            {
              int num3 = name.IndexOf('#', num2 + 2);
              if (num3 < 0)
              {
                this.s060200400225828.s472927214603781.WriteLine("SourceLocationForRva: Error parsing method name mangling.  No # separating token");
                return (s541749027096251) null;
              }
              string s = name.Substring(num3 + 1);
              int result;
              if (!int.TryParse(s, NumberStyles.AllowHexSpecifier, (IFormatProvider) null, out result))
              {
                this.s060200400225828.s472927214603781.WriteLine("SourceLocationForRva: Could not parse token as a Hex number {0}", (object) s);
                return (s541749027096251) null;
              }
              if (num3 == num2 + 2)
              {
                s372688766090338 = Path.GetFileNameWithoutExtension(this.s804769078966272);
                if (s372688766090338.EndsWith(".ni", StringComparison.OrdinalIgnoreCase))
                  s372688766090338 = s372688766090338.Substring(0, s372688766090338.Length - 3);
              }
              else
                s372688766090338 = name.Substring(num2 + 2, num3 - (num2 + 2));
              s869567465058135 = (uint) result;
              s280013535982297 = 0;
              this.s060200400225828.s472927214603781.WriteLine("SourceLocationForRva: Looking up IL Offset by RVA 0x{0:x}", (object) s380596893851035);
              this.s482894794510832.findILOffsetsByRVA(s380596893851035, 0U, ref idiaEnumLineNumbers);
              while (true)
              {
                idiaEnumLineNumbers.Next(1U, ref idiaLineNumber, ref num1);
                if (num1 != 0U)
                {
                  s280013535982297 = (int) idiaLineNumber.lineNumber;
                  if (s280013535982297 == 16707566)
                  {
                    this.s060200400225828.s472927214603781.WriteLine("SourceLocationForRva: got illegal offset FEEFEE picking next offset.");
                    s280013535982297 = 0;
                  }
                  else
                    goto label_17;
                }
                else
                  break;
              }
              this.s060200400225828.s472927214603781.WriteLine("SourceLocationForRva: Ran out of IL mappings, guessing 0x{0:x}", (object) s280013535982297);
label_17:
              this.s060200400225828.s472927214603781.WriteLine("SourceLocationForRva: Found native to IL mappings, IL offset 0x{0:x}", (object) s280013535982297);
              return (s541749027096251) null;
            }
          }
        }
        this.s060200400225828.s472927214603781.WriteLine("SourceLocationForRva: No lines for RVA {0:x} ", (object) s380596893851035);
        return (s541749027096251) null;
      }
      IDiaSourceFile sourceFile1 = idiaLineNumber.sourceFile;
      int lineNumber = (int) idiaLineNumber.lineNumber;
      s649740525511456.s238181255941013 sourceFile2 = new s649740525511456.s238181255941013(this, sourceFile1);
      if (lineNumber == 16707566)
        lineNumber = 0;
      s541749027096251 s541749027096251 = new s541749027096251((s141330826619026) sourceFile2, lineNumber);
      this.s060200400225828.s472927214603781.WriteLine("SourceLocationForRva: RVA {0:x} maps to line {1} file {2} ", (object) s380596893851035, (object) lineNumber, (object) sourceFile2.s166608229115699);
      return s541749027096251;
    }

    public virtual s541749027096251 s906435593925101(
      uint s592005137735242,
      int s263914527549250)
    {
      this.s060200400225828.s472927214603781.WriteLine("SourceLocationForManaged: Looking up method token {0:x} ilOffset {1:x}", (object) s592005137735242, (object) s263914527549250);
      IDiaSymbol idiaSymbol;
      this.s482894794510832.findSymbolByToken(s592005137735242, (SymTagEnum) 5, ref idiaSymbol);
      if (idiaSymbol == null)
      {
        this.s060200400225828.s472927214603781.WriteLine("SourceLocationForManaged: No symbol for token {0:x} ilOffset {1:x}", (object) s592005137735242, (object) s263914527549250);
        return (s541749027096251) null;
      }
      IDiaEnumLineNumbers idiaEnumLineNumbers;
      this.s482894794510832.findLinesByRVA(idiaSymbol.relativeVirtualAddress + (uint) s263914527549250, 256U, ref idiaEnumLineNumbers);
      IDiaLineNumber idiaLineNumber;
      uint num;
      idiaEnumLineNumbers.Next(1U, ref idiaLineNumber, ref num);
      if (num == 0U)
      {
        this.s060200400225828.s472927214603781.WriteLine("SourceLocationForManaged: No lines for token {0:x} ilOffset {1:x}", (object) s592005137735242, (object) s263914527549250);
        return (s541749027096251) null;
      }
      s649740525511456.s238181255941013 sourceFile = new s649740525511456.s238181255941013(this, idiaLineNumber.sourceFile);
      int lineNumber;
      do
      {
        lineNumber = (int) idiaLineNumber.lineNumber;
        if (lineNumber == 16707566)
        {
          lineNumber = 0;
          idiaEnumLineNumbers.Next(1U, ref idiaLineNumber, ref num);
        }
        else
          break;
      }
      while (num != 0U);
      s541749027096251 s541749027096251 = new s541749027096251((s141330826619026) sourceFile, lineNumber);
      this.s060200400225828.s472927214603781.WriteLine("SourceLocationForManaged: found source linenum {0} file {1}", (object) lineNumber, (object) sourceFile.s166608229115699);
      return s541749027096251;
    }

    public s578547583535146 s138367038196302 => new s578547583535146(this, this.s482894794510832.globalScope);

    public virtual Guid s140592524935995 => this.s482894794510832.globalScope.guid;

    public virtual int s477411247024397 => (int) this.s482894794510832.globalScope.age;

    private s649740525511456(
      s435790585148060 reader,
      string pdbFilePath,
      Action<IDiaDataSource3> loadData)
      : base(reader, pdbFilePath)
    {
      this.s060200400225828 = reader;
      this.s167096708552694 = s510732502333341.s419346066341064();
      loadData(this.s167096708552694);
      this.s167096708552694.openSession(ref this.s482894794510832);
      this.s482894794510832.getSymbolsByAddr(ref this.s765017497430541);
      this.s998646023122231 = new Lazy<IReadOnlyDictionary<uint, string>>((Func<IReadOnlyDictionary<uint, string>>) (() =>
      {
        Dictionary<uint, string> dictionary = (Dictionary<uint, string>) null;
        IDiaEnumSymbols idiaEnumSymbols;
        this.s482894794510832.getHeapAllocationSites(ref idiaEnumSymbols);
        while (true)
        {
          IDiaSymbol idiaSymbol;
          uint num;
          idiaEnumSymbols.Next(1U, ref idiaSymbol, ref num);
          if (num != 0U)
          {
            dictionary = dictionary ?? new Dictionary<uint, string>();
            IDiaSymbol s545627350096934;
            this.s482894794510832.symbolById(idiaSymbol.typeId, ref s545627350096934);
            dictionary[idiaSymbol.relativeVirtualAddress + (uint) idiaSymbol.length] = s649740525511456.s238181255941013.s196322182654531(s545627350096934);
          }
          else
            break;
        }
        return (IReadOnlyDictionary<uint, string>) dictionary ?? (IReadOnlyDictionary<uint, string>) ImmutableDictionary<uint, string>.Empty;
      }));
      this.s060200400225828.s472927214603781.WriteLine("Opening PDB {0} with signature GUID {1} Age {2}", (object) pdbFilePath, (object) this.s956138111746114, (object) this.s516659163850869);
    }

    internal s649740525511456(s435790585148060 reader, string pdbFilePath)
    {
      // ISSUE: object of a compiler-generated type is created
      // ISSUE: variable of a compiler-generated type
      s649740525511456.s169202547640977 s169202547640977 = (s649740525511456.s169202547640977) new s649740525511456.s530892078482371();
      // ISSUE: reference to a compiler-generated field
      ((s649740525511456.s530892078482371) s169202547640977).s891869992746126 = pdbFilePath;
      // ISSUE: reference to a compiler-generated field
      // ISSUE: reference to a compiler-generated method
      // ISSUE: explicit constructor call
      this.\u002Ector(reader, ((s649740525511456.s530892078482371) s169202547640977).s891869992746126, new Action<IDiaDataSource3>(s169202547640977.s418983634414247));
    }

    internal s649740525511456(s435790585148060 reader, string pdbFilePath, Stream pdbStream)
    {
      // ISSUE: object of a compiler-generated type is created
      // ISSUE: variable of a compiler-generated type
      s649740525511456.s417491663475405 s417491663475405 = (s649740525511456.s417491663475405) new s649740525511456.s169202547640977();
      // ISSUE: reference to a compiler-generated field
      ((s649740525511456.s169202547640977) s417491663475405).s855380317684913 = pdbStream;
      // ISSUE: reference to a compiler-generated method
      // ISSUE: explicit constructor call
      this.\u002Ector(reader, pdbFilePath, new Action<IDiaDataSource3>(s417491663475405.s389451099977282));
    }

    internal void s293238812527775(
      string s780418116604469,
      Guid s317897736673942,
      int s566966829858189)
    {
      this.s658191314245931 = s780418116604469;
      this.s271910325255801 = s317897736673942;
      this.s782111477961208 = s566966829858189;
    }

    internal unsafe string s671454742511843()
    {
      TextWriter s472927214603781 = this.s060200400225828.s472927214603781;
      s472927214603781.WriteLine("Getting source server stream for PDB {0}", (object) this.s804769078966272);
      uint length = 0;
      this.s167096708552694.getStreamSize("srcsrv", ref length);
      if (length == 0U)
      {
        if (0 <= this.s804769078966272.IndexOf(".ni.", StringComparison.OrdinalIgnoreCase))
          s472927214603781.WriteLine("Error, trying to look up source information on an NGEN file, giving up");
        else
          s472927214603781.WriteLine("Pdb {0} does not have source server information (srcsrv stream) in it", (object) this.s804769078966272);
        return (string) null;
      }
      byte[] bytes = new byte[(int) length];
      fixed (byte* numPtr = bytes)
      {
        this.s167096708552694.getStreamRawData("srcsrv", length, ref numPtr[0]);
        return new UTF8Encoding().GetString(bytes);
      }
    }

    protected override string GetSourceLinkJson()
    {
      uint num = 0;
      this.s167096708552694.getStreamSize("srcsrv", ref num);
      if (num != 0U)
      {
        this.s060200400225828.s472927214603781.WriteLine("Has srcsrv information, skipping looking for SourceLink information for {0}", (object) this.s804769078966272);
        return (string) null;
      }
      Match match = Regex.Match(File.ReadAllText(this.s804769078966272), "({\\s*\"documents\"\\s*:\\s*{[ -~]*?}\\s*})", RegexOptions.Singleline);
      if (match.Success)
      {
        string sourceLinkJson = match.Groups[1].Value;
        this.s060200400225828.s472927214603781.WriteLine("Found SourceLink Infomation for {0}\r\nData:    {1}", (object) this.s804769078966272, (object) sourceLinkJson.Replace("\r\n", " "));
        return sourceLinkJson;
      }
      this.s060200400225828.s472927214603781.WriteLine("Failed to look up SourceLink Infomation for {0}.", (object) this.s804769078966272);
      return (string) null;
    }

    internal s389047933096245 s512685879534435
    {
      get
      {
        if (this.s658191314245931 == null)
          return (s389047933096245) this;
        if (!this.s438470590910577)
        {
          this.s060200400225828.s472927214603781.WriteLine("We have a NGEN image with an IL PDB {0}, looking it up", (object) this.s658191314245931);
          this.s438470590910577 = true;
          string s349210490078763 = this.s060200400225828.s686953150455467(this.s658191314245931, this.s271910325255801, this.s782111477961208);
          if (s349210490078763 != null)
          {
            this.s060200400225828.s472927214603781.WriteLine("Found managed PDB path {0}", (object) s349210490078763);
            this.s744083895510254 = this.s060200400225828.s410989997732674(s349210490078763);
          }
          else
            this.s060200400225828.s472927214603781.WriteLine("Could not find managed PDB {0}", (object) this.s658191314245931);
        }
        return this.s744083895510254;
      }
    }

    public Dictionary<int, string> s012439154252468()
    {
      if (this.s454206073438238 == null && !this.s761206147722004)
      {
        IDiaEnumInputAssemblyFiles inputAssemblyFiles;
        this.s482894794510832.findInputAssemblyFiles(ref inputAssemblyFiles);
        while (true)
        {
          IDiaInputAssemblyFile inputAssemblyFile;
          uint num;
          inputAssemblyFiles.Next(1U, ref inputAssemblyFile, ref num);
          if (num == 1U)
          {
            int index = (int) inputAssemblyFile.index;
            string fileName = inputAssemblyFile.fileName;
            if (this.s454206073438238 == null)
              this.s454206073438238 = new Dictionary<int, string>();
            this.s454206073438238.Add(index, fileName);
          }
          else
            break;
        }
        this.s761206147722004 = true;
      }
      return this.s454206073438238;
    }

    public MemoryStream s884657321648656()
    {
      try
      {
        uint length;
        this.s167096708552694.getStreamSize("ilimage", ref length);
        if (length > 0U)
        {
          byte[] buffer = new byte[(int) length];
          this.s167096708552694.getStreamRawData("ilimage", length, ref buffer[0]);
          return new MemoryStream(buffer);
        }
      }
      catch (COMException ex)
      {
      }
      return (MemoryStream) null;
    }

    public MemoryStream s897195909281996()
    {
      try
      {
        uint length;
        this.s167096708552694.getStreamSize("pseudoil", ref length);
        if (length > 0U)
        {
          byte[] buffer = new byte[(int) length];
          this.s167096708552694.getStreamRawData("pseudoil", length, ref buffer[0]);
          return new MemoryStream(buffer, false);
        }
      }
      catch (COMException ex)
      {
      }
      return (MemoryStream) null;
    }

    public unsafe byte[] s088397108366797()
    {
      uint length;
      this.s482894794510832.getFuncMDTokenMapSize(ref length);
      byte[] numArray = new byte[(int) length];
      fixed (byte* numPtr1 = numArray)
      {
        byte* numPtr2 = numPtr1;
        this.s482894794510832.getFuncMDTokenMap((uint) numArray.Length, ref length, ref numArray[0]);
      }
      return numArray;
    }

    public unsafe byte[] s206399863531033()
    {
      uint length;
      this.s482894794510832.getTypeMDTokenMapSize(ref length);
      byte[] numArray = new byte[(int) length];
      fixed (byte* numPtr1 = numArray)
      {
        byte* numPtr2 = numPtr1;
        this.s482894794510832.getTypeMDTokenMap((uint) numArray.Length, ref length, ref numArray[0]);
      }
      return numArray;
    }

    public class s238181255941013 : s141330826619026
    {
      public virtual string s812865979542194
      {
        [SpecialName] get
        {
          string s002757170457971 = __nonvirtual (((s141330826619026) this).s743717365192849);
          if (s002757170457971 != null)
            return s002757170457971;
          ((s649740525511456.s238181255941013) this).s611609669634554(out s002757170457971, out string _);
          return !string.IsNullOrEmpty(s002757170457971) && Uri.IsWellFormedUriString(s002757170457971, UriKind.Absolute) ? s002757170457971 : (string) null;
        }
      }

      protected override string GetSourceFromSrcServer()
      {
        string sourceFromSrcServer = base.GetSourceFromSrcServer();
        if (sourceFromSrcServer != null)
          return sourceFromSrcServer;
        string s395526091369185 = this._symbolModule.s606395693751712.s395526091369185;
        string s002757170457971;
        string s332822441908685;
        this.s611609669634554(out s002757170457971, out s332822441908685, s395526091369185);
        if (s002757170457971 != null)
        {
          if (!s002757170457971.StartsWith(s395526091369185, StringComparison.OrdinalIgnoreCase))
          {
            Uri result = (Uri) null;
            if (Uri.TryCreate(s002757170457971, UriKind.Absolute, out result))
            {
              s002757170457971 = (string) null;
              string s566703521838405 = Path.Combine(s395526091369185, result.AbsolutePath.TrimStart('/').Replace('/', '\\'));
              if (this._symbolModule.s606395693751712.s361021071448665(result.GetComponents(UriComponents.SchemeAndServer, UriFormat.Unescaped), result.AbsolutePath, s566703521838405))
                s002757170457971 = s566703521838405;
              if (s002757170457971 == null)
              {
                this.s130590313137244.WriteLine("Could not fetch {0} from web", (object) result.AbsoluteUri);
                return (string) null;
              }
            }
            else
            {
              this.s130590313137244.WriteLine("Source Server string {0} is targeting an unsafe location.  Giving up.", (object) s002757170457971);
              return (string) null;
            }
          }
          if (!File.Exists(s002757170457971) && s332822441908685 != null)
          {
            this.s130590313137244.WriteLine("Trying to generate the file {0}.", (object) s002757170457971);
            string path1 = Path.Combine(Path.GetDirectoryName(typeof (s141330826619026).GetTypeInfo().Assembly.ManifestModule.FullyQualifiedName), s519732577581812.s755935240018842);
            string str = (string) null;
            if (s332822441908685.StartsWith("sd.exe ", StringComparison.OrdinalIgnoreCase))
            {
              if (!File.Exists(Path.Combine(path1, "sd.exe")))
                this.s130590313137244.WriteLine("WARNING: Could not find sd.exe that should have been deployed at {0}", (object) path1);
              str = path1;
            }
            else if (s332822441908685.StartsWith("tf.exe ", StringComparison.OrdinalIgnoreCase))
            {
              if (s062136670151047.s940393135131078("tf.exe") == null)
              {
                string path = s649740525511456.s238181255941013.s957315728640000();
                if (path == null)
                {
                  this.s130590313137244.WriteLine("Could not find TF.exe, place it on the PATH environment variable to fix this.");
                  return (string) null;
                }
                str = Path.GetDirectoryName(path);
              }
            }
            else
            {
              this.s130590313137244.WriteLine("Source Server command {0} is not recognized as safe (sd.exe or tf.exe), failing.", (object) s332822441908685);
              return (string) null;
            }
            Directory.CreateDirectory(Path.GetDirectoryName(s002757170457971));
            string s761710075308025 = "cmd /c " + s332822441908685;
            s434305609096598 s610084872719370 = new s434305609096598().s768668256682897(this.s130590313137244).s356792493822912();
            if (str != null)
              s610084872719370 = s610084872719370.s455952820099390("PATH", str + ";%PATH%");
            this.s130590313137244.WriteLine("Source Server command {0}", (object) s761710075308025);
            s062136670151047 s062136670151047 = s062136670151047.s455031916978056(s761710075308025, s610084872719370);
            if (s062136670151047.s458846704520366 != 0)
              this.s130590313137244.WriteLine("Source Server command failed with exit code {0}", (object) s062136670151047.s458846704520366);
            if (File.Exists(s002757170457971))
            {
              if (new FileInfo(s002757170457971).Length == 0L)
              {
                File.Delete(s002757170457971);
                s002757170457971 = (string) null;
              }
            }
            else
              s002757170457971 = (string) null;
            if (s002757170457971 == null)
              this.s130590313137244.WriteLine("Source Server command failed to produce the output file.");
            else
              this.s130590313137244.WriteLine("Source Server command succeeded creating {0}", (object) s002757170457971);
          }
          else
            this.s130590313137244.WriteLine("Found an existing source server file {0}.", (object) s002757170457971);
          return s002757170457971;
        }
        this.s130590313137244.WriteLine("Did not find source file in the set of source files in the PDB.");
        return (string) null;
      }

      internal unsafe s238181255941013(s649740525511456 module, IDiaSourceFile sourceFile)
        : base((s389047933096245) module)
      {
        this.s166608229115699 = sourceFile.fileName;
        if (sourceFile.checksumType == 1U)
          this._hashAlgorithm = (HashAlgorithm) MD5.Create();
        else if (sourceFile.checksumType == 2U)
          this._hashAlgorithm = (HashAlgorithm) SHA1.Create();
        else if (sourceFile.checksumType == 3U)
          this._hashAlgorithm = (HashAlgorithm) SHA256.Create();
        if (this._hashAlgorithm == null)
          return;
        byte* numPtr1 = (byte*) null;
        uint length;
        sourceFile.get_checksum(0U, ref length, ref *numPtr1);
        this._hash = new byte[(int) length];
        fixed (byte* numPtr2 = this._hash)
        {
          uint num;
          sourceFile.get_checksum((uint) this._hash.Length, ref num, ref numPtr2[0]);
        }
      }

      private void s611609669634554(
        out string s002757170457971,
        out string s332822441908685,
        string s245233588765698 = null)
      {
        s002757170457971 = (string) null;
        s332822441908685 = (string) null;
        this.s130590313137244.WriteLine("*** Looking up {0} using source server", (object) this.s166608229115699);
        if (!((this._symbolModule as s649740525511456).s512685879534435 is s649740525511456 s512685879534435))
        {
          this.s130590313137244.WriteLine("*** Could not find PDB to look up source server information");
        }
        else
        {
          string s = s512685879534435.s671454742511843();
          if (s == null)
          {
            this.s130590313137244.WriteLine("*** Could not find srcsrv stream in PDB file");
          }
          else
          {
            this.s130590313137244.WriteLine("*** Found srcsrv stream in PDB file. of size {0}", (object) s.Length);
            StringReader stringReader = new StringReader(s);
            bool flag1 = false;
            bool flag2 = false;
            Dictionary<string, string> s442120702749812 = new Dictionary<string, string>((IEqualityComparer<string>) StringComparer.OrdinalIgnoreCase);
            if (s245233588765698 != null)
              s442120702749812.Add("targ", s245233588765698);
            while (true)
            {
              Match match;
              do
              {
                string input;
                do
                {
                  input = stringReader.ReadLine();
                  if (input != null)
                  {
                    if (input.StartsWith("SRCSRV: "))
                    {
                      flag1 = input.StartsWith("SRCSRV: source files");
                      flag2 = input.StartsWith("SRCSRV: variables");
                    }
                    else if (flag1)
                    {
                      string[] strArray = input.Split('*');
                      if (strArray.Length >= 2 && string.Compare(this.s166608229115699, strArray[0], StringComparison.OrdinalIgnoreCase) == 0)
                      {
                        for (int index = 0; index < strArray.Length; ++index)
                          s442120702749812.Add("var" + (index + 1).ToString(), strArray[index]);
                        s002757170457971 = this.s859593178399285("SRCSRVTRG", s442120702749812);
                        s332822441908685 = this.s859593178399285("SRCSRVCMD", s442120702749812);
                        return;
                      }
                    }
                  }
                  else
                    goto label_18;
                }
                while (!flag2);
                match = Regex.Match(input, "^(\\w+)=(.*?)\\s*$");
              }
              while (!match.Success);
              s442120702749812[match.Groups[1].Value] = match.Groups[2].Value;
            }
label_18:;
          }
        }
      }

      private static string s957315728640000()
      {
        string path1 = Environment.GetEnvironmentVariable("ProgramFiles (x86)") ?? Environment.GetEnvironmentVariable("ProgramFiles");
        if (path1 != null)
        {
          string[] directories = Directory.GetDirectories(path1, "Microsoft Visual Studio*");
          Array.Sort<string>(directories);
          if (directories.Length != 0)
          {
            string path2 = Path.Combine(Path.Combine(directories[directories.Length - 1], "Common7\\IDE"), "tf.exe");
            if (File.Exists(path2))
              return path2;
          }
        }
        return (string) null;
      }

      private string s859593178399285(
        string s290523489286028,
        Dictionary<string, string> s442120702749812)
      {
        string s209845372915916 = "";
        if (s442120702749812.TryGetValue(s290523489286028, out s209845372915916))
        {
          if (0 <= s209845372915916.IndexOf('%'))
            this.s130590313137244.WriteLine("SourceServerFetchVar: Before Evaluation {0} = '{1}'", (object) s290523489286028, (object) s209845372915916);
          s209845372915916 = this.s240775458951229(s209845372915916, s442120702749812);
        }
        this.s130590313137244.WriteLine("SourceServerFetchVar: {0} = '{1}'", (object) s290523489286028, (object) s209845372915916);
        return s209845372915916;
      }

      private string s240775458951229(
        string s209845372915916,
        Dictionary<string, string> s941488301636098)
      {
        // ISSUE: variable of a compiler-generated type
        s649740525511456.s238181255941013.s969226931913320 s969226931913320 = (s649740525511456.s238181255941013.s969226931913320) new s327530072450904.s822865683283693();
        ((s176774397146331.s139804516699062) s969226931913320).s343171253939805 = this;
        // ISSUE: reference to a compiler-generated field
        s969226931913320.s942284796403502 = s941488301636098;
        if (0 <= s209845372915916.IndexOf('%'))
        {
          // ISSUE: reference to a compiler-generated method
          s209845372915916 = Regex.Replace(s209845372915916, "%fnvar%\\((.*?)\\)", new MatchEvaluator(s969226931913320.s238521266645861));
          // ISSUE: reference to a compiler-generated method
          s209845372915916 = Regex.Replace(s209845372915916, "%fnbksl%\\((.*?)\\)", new MatchEvaluator(s969226931913320.s500900516775245));
          // ISSUE: reference to a compiler-generated method
          s209845372915916 = Regex.Replace(s209845372915916, "%fnfile%\\((.*?)\\)", new MatchEvaluator(s969226931913320.s260651386672878));
          // ISSUE: reference to a compiler-generated method
          s209845372915916 = Regex.Replace(s209845372915916, "%(\\w+)%", new MatchEvaluator(s969226931913320.s125042643655919));
        }
        return s209845372915916;
      }

      internal static string s196322182654531(IDiaSymbol s545627350096934)
      {
        // ISSUE: unable to decompile the method.
      }
    }

    private static class s495333248286015
    {
      public Dictionary<int, string> s907572728284773;

      static s495333248286015() => s916389884151353.s692541064960840.s567430785601133 = new string[32]
      {
        "<NoType>",
        "void",
        "char",
        "wchar_t",
        "signed char",
        "unsigned char",
        "int",
        "unsigned int",
        "float",
        "<BCD>",
        "bool",
        "short",
        "unsigned short",
        "long",
        "unsigned long",
        "__int8",
        "__int16",
        "__int32",
        "__int64",
        "__int128",
        "unsigned __int8",
        "unsigned __int16",
        "unsigned __int32",
        "unsigned __int64",
        "unsigned __int128",
        "<currency>",
        "<date>",
        "VARIANT",
        "<complex>",
        "<bit>",
        "BSTR",
        "HRESULT"
      };

      private enum s721865654611925
      {
        Null,
        Exe,
        Compiland,
        CompilandDetails,
        CompilandEnv,
        Function,
        Block,
        Data,
        Annotation,
        Label,
        PublicSymbol,
        UDT,
        Enum,
        FunctionType,
        PointerType,
        ArrayType,
        BaseType,
        Typedef,
        BaseClass,
        Friend,
        FunctionArgType,
        FuncDebugStart,
        FuncDebugEnd,
        UsingNamespace,
        VTableShape,
        VTable,
        Custom,
        Thunk,
        CustomType,
        ManagedType,
        Dimension,
        CallSite,
        InlineSite,
        BaseInterface,
        VectorType,
        MatrixType,
        HLSLType,
      }

      private enum s482031402994061
      {
        btNoType = 0,
        btVoid = 1,
        btChar = 2,
        btWChar = 3,
        btInt = 6,
        btUInt = 7,
        btFloat = 8,
        btBCD = 9,
        btBool = 10, // 0x0000000A
        btLong = 13, // 0x0000000D
        btULong = 14, // 0x0000000E
        btCurrency = 25, // 0x00000019
        btDate = 26, // 0x0000001A
        btVariant = 27, // 0x0000001B
        btComplex = 28, // 0x0000001C
        btBit = 29, // 0x0000001D
        btBSTR = 30, // 0x0000001E
        btHresult = 31, // 0x0000001F
        btChar16 = 32, // 0x00000020
        btChar32 = 33, // 0x00000021
      }
    }
  }
}
