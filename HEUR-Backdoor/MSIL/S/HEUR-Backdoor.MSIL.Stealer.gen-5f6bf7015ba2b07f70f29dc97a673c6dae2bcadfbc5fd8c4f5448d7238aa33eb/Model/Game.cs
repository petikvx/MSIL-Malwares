// Decompiled with JetBrains decompiler
// Type: AutoJack.Model.Game
// Assembly: DBCSDeco, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 88F14F11-3C25-4928-9B64-C01D5FB1C3EF
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Backdoor.MSIL.Stealer.gen-5f6bf7015ba2b07f70f29dc97a673c6dae2bcadfbc5fd8c4f5448d7238aa33eb.exe

using System.Collections.Generic;
using System.Linq;

namespace AutoJack.Model
{
  public class Game
  {
    private const int DECKSIZE = 52;

    public bool ShouldWarn { get; set; }

    public int TurnWho { get; set; }

    public Player Player { get; set; }

    public Machine Machine { get; set; }

    internal List<Card> Deck { get; set; }

    public string Winner { get; set; }

    public string Logs { get; set; }

    public Game(Player Player, Machine Machine)
    {
      this.Player = Player;
      this.Machine = Machine;
      this.ShouldWarn = false;
      this.TurnWho = -1;
      this.Winner = string.Empty;
    }

    internal int GetHandSumFor(List<Card> Hand)
    {
      int handSumFor = 0;
      foreach (Card card in Hand)
        handSumFor += card.GetCardValue();
      return handSumFor;
    }

    internal bool CheckIdenticalHand(string Who, string HandName)
    {
      if (Who == "Player" && HandName == "Hand1")
      {
        if (this.Player.Hand1.Count != 2)
          return false;
        if (this.Player.Hand1.ElementAt<Card>(0).GetCardValue() == this.Player.Hand1.ElementAt<Card>(1).GetCardValue())
          return true;
      }
      if (Who == "Player" && HandName == "Hand2")
      {
        if (this.Player.Hand2.Count != 2)
          return false;
        if (this.Player.Hand2.ElementAt<Card>(0).GetCardValue() == this.Player.Hand2.ElementAt<Card>(1).GetCardValue())
          return true;
      }
      if (Who == "Machine" && HandName == "Hand1")
      {
        if (this.Machine.Hand1.Count != 2)
          return false;
        if (this.Machine.Hand1.ElementAt<Card>(0).GetCardValue() == this.Machine.Hand1.ElementAt<Card>(1).GetCardValue())
          return true;
      }
      return Who == "Machine" && HandName == "Hand2" && this.Machine.Hand2.Count == 2 && this.Machine.Hand2.ElementAt<Card>(0).GetCardValue() == this.Machine.Hand2.ElementAt<Card>(1).GetCardValue();
    }
  }
}
