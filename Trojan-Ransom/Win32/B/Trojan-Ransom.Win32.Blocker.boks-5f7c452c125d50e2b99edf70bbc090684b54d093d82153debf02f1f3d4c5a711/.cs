// Decompiled with JetBrains decompiler
// Type: 
// Assembly: loadinghub, Version=1.0.1.1, Culture=neutral, PublicKeyToken=null
// MVID: 1F46CF06-A4EB-445D-B6B9-7A8B4A2C4880
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00080-msil\Trojan-Ransom.Win32.Blocker.boks-5f7c452c125d50e2b99edf70bbc090684b54d093d82153debf02f1f3d4c5a711.exe

using Microsoft.VisualBasic.ApplicationServices;
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

[GeneratedCode("MyTemplate", "8.0.0.0")]
[EditorBrowsable(EditorBrowsableState.Never)]
internal class \uE000 : WindowsFormsApplicationBase
{
  private static List<WeakReference> \uE000 = new List<WeakReference>();

  [DebuggerNonUserCode]
  static \uE000()
  {
  }

  [DebuggerStepThrough]
  public \uE000()
    : base(AuthenticationMode.Windows)
  {
    \uE000.\uE000((object) this);
    this.IsSingleInstance = false;
    this.EnableVisualStyles = true;
    this.SaveMySettingsOnExit = true;
    this.ShutdownStyle = ShutdownMode.AfterMainFormCloses;
  }

  [DebuggerNonUserCode]
  private static void \uE000(object _param0)
  {
    lock (\uE000.\uE000)
    {
      if (\uE000.\uE000.Count == \uE000.\uE000.Capacity)
      {
        int index1 = 0;
        int num = checked (\uE000.\uE000.Count - 1);
        int index2 = 0;
        while (index2 <= num)
        {
          if (\uE000.\uE000[index2].IsAlive)
          {
            if (index2 != index1)
              \uE000.\uE000[index1] = \uE000.\uE000[index2];
            checked { ++index1; }
          }
          checked { ++index2; }
        }
        \uE000.\uE000.RemoveRange(index1, checked (\uE000.\uE000.Count - index1));
        \uE000.\uE000.Capacity = \uE000.\uE000.Count;
      }
      \uE000.\uE000.Add(new WeakReference(RuntimeHelpers.GetObjectValue(_param0)));
    }
  }

  [EditorBrowsable(EditorBrowsableState.Advanced)]
  [DebuggerHidden]
  [STAThread]
  [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
  internal static void Main(string[] Args)
  {
    try
    {
      Application.SetCompatibleTextRenderingDefault(WindowsFormsApplicationBase.UseCompatibleTextRendering);
    }
    finally
    {
    }
    \uE002.\uE000.Run(Args);
  }

  [DebuggerStepThrough]
  protected override void OnCreateMainForm() => this.MainForm = (Form) \uE002.\uE000.\uE000;
}
