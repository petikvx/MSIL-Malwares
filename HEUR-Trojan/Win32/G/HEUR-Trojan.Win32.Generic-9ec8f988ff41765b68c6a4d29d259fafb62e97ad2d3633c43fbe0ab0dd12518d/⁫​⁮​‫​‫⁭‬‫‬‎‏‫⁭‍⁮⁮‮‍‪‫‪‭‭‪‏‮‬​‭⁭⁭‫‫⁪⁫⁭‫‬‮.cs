// Decompiled with JetBrains decompiler
// Type: ⁫​⁮​‫​‫⁭‬‫‬‎‏‫⁭‍⁮⁮‮‍‪‫‪‭‭‪‏‮‬​‭⁭⁭‫‫⁪⁫⁭‫‬‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using System;

public class \u206B​⁮​‫​‫⁭‬‫‬‎‏‫⁭‍⁮⁮‮‍‪‫‪‭‭‪‏‮‬​‭⁭⁭‫‫⁪⁫⁭‫‬‮
{
  private \u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮ \u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮;
  private int \u200D⁭‫​‮‪‎‌⁬⁯⁫‌⁫‍‎⁬⁬‫‭⁪‭‪‏‎‬‮‬‎‎​‎‫⁪⁮‬‮‮​‎⁬‮;
  private int \u202D⁪‍​‌⁮⁭‫⁮‎⁭⁭⁫‫⁬⁫‪‏⁭‫‍⁬‬‬​‬‮‎‪‬‎‌‮⁬‌⁯‎‏‌⁪‮;
  private int \u200D⁯⁮‫‎⁮⁪‏⁪⁮‮​⁭‏⁯⁫⁭⁬‬⁪‪⁭‎‎‬⁪⁪⁬​‎⁫‍⁬‮‍‎‍‌‭‮;
  private \u200D​⁪‮​‫⁯⁮‪‫‪‍⁪⁮⁫‮​⁯⁪⁫⁫‬‮‎‫‎⁪⁮‮‎‌⁬‮‫⁫‬‮‌⁪‭‮ \u202C⁪‎⁫⁭‌⁯⁪‫‮​⁪‬⁯‍‌‭⁭⁬​⁬⁪‬⁪‪⁪‪‏‫‌‎‌⁭‌‪‎⁯‮⁭⁫‮;
  private bool \u206D⁯⁪⁬⁯‬‏⁫⁪‌‬‌‪‪⁫‏⁮⁯‮‮‏⁭‫​‌⁪‪⁫⁮⁯‍⁫‌⁯⁪‬‪⁯​‌‮;
  private int \u202B⁫​‎‭⁪‌‍‎⁮‫⁫‭‪‭⁭⁯⁮‮⁫‮⁪‪‪‎‭⁮‫‭‬​‮‫⁯‭⁬⁫‮‍‎‮;

  public \u206B​⁮​‫​‫⁭‬‫‬‎‏‫⁭‍⁮⁮‮‍‪‫‪‭‭‪‏‮‬​‭⁭⁭‫‫⁪⁫⁭‫‬‮()
    : this((\u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮) new \u202B‌⁯​⁯⁯‭‮⁮‪‎⁫‌‫‮⁭‌‎‌⁬‮‎‌⁫⁯‭‍‏‏‬‎‌⁪‏⁫‮‌‌‍⁭‮())
  {
  }

  public \u206B​⁮​‫​‫⁭‬‫‬‎‏‫⁭‍⁮⁮‮‍‪‫‪‭‭‪‏‮‬​‭⁭⁭‫‫⁪⁫⁭‫‬‮(
    \u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮ _param1)
  {
    this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮ = _param1;
  }

  public virtual void \u206A⁭⁫‪‫‬⁪‎​⁯‎‪⁬⁭​‍⁪⁫‌⁪‫⁯​⁪⁫⁫‪‬⁬‏‫‮⁬‬⁭⁬⁫‍⁮‮(
    int _param1,
    int _param2,
    \u200D​⁪‮​‫⁯⁮‪‫‪‍⁪⁮⁫‮​⁯⁪⁫⁫‬‮‎‫‎⁪⁮‮‎‌⁬‮‫⁫‬‮‌⁪‭‮ _param3)
  {
    if (!\u206B​⁮​‫​‫⁭‬‫‬‎‏‫⁭‍⁮⁮‮‍‪‫‪‭‭‪‏‮‬​‭⁭⁭‫‫⁪⁫⁭‫‬‮.\u206B‫‮‎‏‏‫‭‏⁯⁪​⁭⁬⁮‭‭‏​⁪‭⁪​⁮⁯​‬⁯‪⁮‪⁭‭⁫⁬​‏‎⁬‎‮(_param1))
      throw new ArgumentException("size must be from 512 - 1024 and a multiple of 64", "size");
    this.\u206D⁯⁪⁬⁯‬‏⁫⁪‌‬‌‪‪⁫‏⁮⁯‮‮‏⁭‫​‌⁪‪⁫⁮⁯‍⁫‌⁯⁪‬‪⁯​‌‮ = false;
    this.\u200D⁭‫​‮‪‎‌⁬⁯⁫‌⁫‍‎⁬⁬‫‭⁪‭‪‏‎‬‮‬‎‎​‎‫⁪⁮‬‮‮​‎⁬‮ = _param1;
    this.\u202D⁪‍​‌⁮⁭‫⁮‎⁭⁭⁫‫⁬⁫‪‏⁭‫‍⁬‬‬​‬‮‎‪‬‎‌‮⁬‌⁯‎‏‌⁪‮ = \u206B​⁮​‫​‫⁭‬‫‬‎‏‫⁭‍⁮⁮‮‍‪‫‪‭‭‪‏‮‬​‭⁭⁭‫‫⁪⁫⁭‫‬‮.\u200D‮⁬‍‪‫​⁫⁬‪‎‮‫‬‌⁭​⁮‍⁭‌‭‌‍‌‪‏⁯‮⁬‏​​⁯⁭‪‬​⁫⁮‮(_param1);
    this.\u200D⁯⁮‫‎⁮⁪‏⁪⁮‮​⁭‏⁯⁫⁭⁬‬⁪‪⁭‎‎‬⁪⁪⁬​‎⁫‍⁬‮‍‎‍‌‭‮ = _param2;
    this.\u202C⁪‎⁫⁭‌⁯⁪‫‮​⁪‬⁯‍‌‭⁭⁬​⁬⁪‬⁪‪⁪‪‏‫‌‎‌⁭‌‪‎⁯‮⁭⁫‮ = _param3;
  }

  public virtual void \u206A⁭⁫‪‫‬⁪‎​⁯‎‪⁬⁭​‍⁪⁫‌⁪‫⁯​⁪⁫⁫‪‬⁬‏‫‮⁬‬⁭⁬⁫‍⁮‮(
    \u202C‫⁫⁭⁫‬⁫‮​‮‍​‌‬​‫⁬‭⁬⁪​⁪⁪⁪‪⁯⁫⁪⁪⁫‏‎‮‪⁫‬‫‪​‌‮ _param1)
  {
    this.\u206D⁯⁪⁬⁯‬‏⁫⁪‌‬‌‪‪⁫‏⁮⁯‮‮‏⁭‫​‌⁪‪⁫⁮⁯‍⁫‌⁯⁪‬‪⁯​‌‮ = true;
    this.\u200D⁭‫​‮‪‎‌⁬⁯⁫‌⁫‍‎⁬⁬‫‭⁪‭‪‏‎‬‮‬‎‎​‎‫⁪⁮‬‮‮​‎⁬‮ = _param1.\u200D⁭‫​‮‪‎‌⁬⁯⁫‌⁫‍‎⁬⁬‫‭⁪‭‪‏‎‬‮‬‎‎​‎‫⁪⁮‬‮‮​‎⁬‮;
    this.\u202D⁪‍​‌⁮⁭‫⁮‎⁭⁭⁫‫⁬⁫‪‏⁭‫‍⁬‬‬​‬‮‎‪‬‎‌‮⁬‌⁯‎‏‌⁪‮ = _param1.\u202D⁪‍​‌⁮⁭‫⁮‎⁭⁭⁫‫⁬⁫‪‏⁭‫‍⁬‬‬​‬‮‎‪‬‎‌‮⁬‌⁯‎‏‌⁪‮;
    this.\u200D⁯⁮‫‎⁮⁪‏⁪⁮‮​⁭‏⁯⁫⁭⁬‬⁪‪⁭‎‎‬⁪⁪⁬​‎⁫‍⁬‮‍‎‍‌‭‮ = _param1.\u200F‍‌‪‎⁫‏‮​⁭‏⁬‍⁮⁮‪‪‎⁬⁪‌‮‪‭‭⁯‎‎‮⁫‪‮⁬‮‭​⁪‌‫⁪‮;
    this.\u202C⁪‎⁫⁭‌⁯⁪‫‮​⁪‬⁯‍‌‭⁭⁬​⁬⁪‬⁪‪⁪‪‏‫‌‎‌⁭‌‪‎⁯‮⁭⁫‮ = _param1.\u206A‫⁯‭⁯⁭‫‌‍​⁭‬‮‪⁭⁭⁬⁯‍​‌‮‪⁪‬⁮⁭‬‌⁬⁬⁬‌‭‏‏⁭⁬​‏‮;
    this.\u202B⁫​‎‭⁪‌‍‎⁮‫⁫‭‪‭⁭⁯⁮‮⁫‮⁪‪‪‎‭⁮‫‭‬​‮‫⁯‭⁬⁫‮‍‎‮ = _param1.\u206B⁪‮⁫​‏⁮⁭⁬⁪⁫‍⁮⁬‎‎‪⁯⁫‫⁯⁪‭‮​⁯​⁮‍‏‮‭‮‬‏⁫‭​​‎‮;
    if (this.\u200D⁭‫​‮‪‎‌⁬⁯⁫‌⁫‍‎⁬⁬‫‭⁪‭‪‏‎‬‮‬‎‎​‎‫⁪⁮‬‮‮​‎⁬‮ < 1024 || this.\u200D⁭‫​‮‪‎‌⁬⁯⁫‌⁫‍‎⁬⁬‫‭⁪‭‪‏‎‬‮‬‎‎​‎‫⁪⁮‬‮‮​‎⁬‮ > 3072 || this.\u200D⁭‫​‮‪‎‌⁬⁯⁫‌⁫‍‎⁬⁬‫‭⁪‭‪‏‎‬‮‬‎‎​‎‫⁪⁮‬‮‮​‎⁬‮ % 1024 != 0)
      throw new ArgumentException("Values must be between 1024 and 3072 and a multiple of 1024", "L");
    if (this.\u200D⁭‫​‮‪‎‌⁬⁯⁫‌⁫‍‎⁬⁬‫‭⁪‭‪‏‎‬‮‬‎‎​‎‫⁪⁮‬‮‮​‎⁬‮ == 1024 && this.\u202D⁪‍​‌⁮⁭‫⁮‎⁭⁭⁫‫⁬⁫‪‏⁭‫‍⁬‬‬​‬‮‎‪‬‎‌‮⁬‌⁯‎‏‌⁪‮ != 160)
      throw new ArgumentException("N must be 160 for L = 1024");
    if (this.\u200D⁭‫​‮‪‎‌⁬⁯⁫‌⁫‍‎⁬⁬‫‭⁪‭‪‏‎‬‮‬‎‎​‎‫⁪⁮‬‮‮​‎⁬‮ == 2048 && this.\u202D⁪‍​‌⁮⁭‫⁮‎⁭⁭⁫‫⁬⁫‪‏⁭‫‍⁬‬‬​‬‮‎‪‬‎‌‮⁬‌⁯‎‏‌⁪‮ != 224 && this.\u202D⁪‍​‌⁮⁭‫⁮‎⁭⁭⁫‫⁬⁫‪‏⁭‫‍⁬‬‬​‬‮‎‪‬‎‌‮⁬‌⁯‎‏‌⁪‮ != 256)
      throw new ArgumentException("N must be 224 or 256 for L = 2048");
    if (this.\u200D⁭‫​‮‪‎‌⁬⁯⁫‌⁫‍‎⁬⁬‫‭⁪‭‪‏‎‬‮‬‎‎​‎‫⁪⁮‬‮‮​‎⁬‮ == 3072 && this.\u202D⁪‍​‌⁮⁭‫⁮‎⁭⁭⁫‫⁬⁫‪‏⁭‫‍⁬‬‬​‬‮‎‪‬‎‌‮⁬‌⁯‎‏‌⁪‮ != 256)
      throw new ArgumentException("N must be 256 for L = 3072");
    if (this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮.\u202D‏‬‪⁬‪‌⁭‌​‪‍‭‮‪‫‌⁫‌​⁭‫⁭‫‍⁫⁪⁪‫‮‌⁮⁭⁪‭​‫‍‌‭‮() * 8 < this.\u202D⁪‍​‌⁮⁭‫⁮‎⁭⁭⁫‫⁬⁫‪‏⁭‫‍⁬‬‬​‬‮‎‪‬‎‌‮⁬‌⁯‎‏‌⁪‮)
      throw new InvalidOperationException("Digest output size too small for value of N");
  }

  public virtual \u206B‮‪​‏​⁫‮⁬‫‫⁯⁫⁪⁪⁪⁯‏‎‬⁮​⁭⁭⁯‌⁬⁬‍‫⁮⁯‏‭‎⁮‫⁪‏‍‮ \u202C‏​‮​⁫‪‮‪⁮‫⁪‏​‍⁯⁫⁫‮‌‏⁪‬‭⁭‍‫‌‌‪⁭‎⁫⁭‪⁭⁬⁮‌‭‮() => !this.\u206D⁯⁪⁬⁯‬‏⁫⁪‌‬‌‪‪⁫‏⁮⁯‮‮‏⁭‫​‌⁪‪⁫⁮⁯‍⁫‌⁯⁪‬‪⁯​‌‮ ? this.\u206A‮⁯‮​⁫‭⁪​‍‏⁯​⁬‎‬‏⁯‏‏⁮‭‏‭​⁬‪⁭‭​‬‮‬‌‬⁮​‎⁬‎‮() : this.\u200C⁪‌‍‪⁭⁬‎⁬⁭⁫‎⁫⁬⁫‎‪⁫⁯‭⁬‬‌⁮‬‫‍‭‫⁯‍⁯‍‏‫‪⁫⁫‍⁫‮();

  protected virtual \u206B‮‪​‏​⁫‮⁬‫‫⁯⁫⁪⁪⁪⁯‏‎‬⁮​⁭⁭⁯‌⁬⁬‍‫⁮⁯‏‭‎⁮‫⁪‏‍‮ \u206A‮⁯‮​⁫‭⁪​‍‏⁯​⁬‎‬‏⁯‏‏⁮‭‏‭​⁬‪⁭‭​‬‮‬‌‬⁮​‎⁬‎‮()
  {
    byte[] numArray1 = new byte[20];
    byte[] sourceArray = new byte[20];
    byte[] destinationArray1 = new byte[20];
    byte[] numArray2 = new byte[20];
    int num = (this.\u200D⁭‫​‮‪‎‌⁬⁯⁫‌⁫‍‎⁬⁬‫‭⁪‭‪‏‎‬‮‬‎‎​‎‫⁪⁮‬‮‮​‎⁬‮ - 1) / 160;
    byte[] destinationArray2 = new byte[this.\u200D⁭‫​‮‪‎‌⁬⁯⁫‌⁫‍‎⁬⁬‫‭⁪‭‪‏‎‬‮‬‎‎​‎‫⁪⁮‬‮‮​‎⁬‮ / 8];
    if (!(this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮ is \u202B‌⁯​⁯⁯‭‮⁮‪‎⁫‌‫‮⁭‌‎‌⁬‮‎‌⁫⁯‭‍‏‏‬‎‌⁪‏⁫‮‌‌‍⁭‮))
      throw new InvalidOperationException("can only use SHA-1 for generating FIPS 186-2 parameters");
label_2:
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj1;
    do
    {
      ((Random) this.\u202C⁪‎⁫⁭‌⁯⁪‫‮​⁪‬⁯‍‌‭⁭⁬​⁬⁪‬⁪‪⁪‪‏‫‌‎‌⁭‌‪‎⁯‮⁭⁫‮).NextBytes(numArray1);
      \u206B​⁮​‫​‫⁭‬‫‬‎‏‫⁭‍⁮⁮‮‍‪‫‪‭‭‪‏‮‬​‭⁭⁭‫‫⁪⁫⁭‫‬‮.\u202C‭​‬‬⁭​‮‭​⁬⁫‬‏⁬‬⁭‏‏‍‏‮‌⁪‫‮‮⁪⁫‍‍⁫⁫⁪⁪⁬‌⁬⁬‮‮(this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮, numArray1, sourceArray);
      Array.Copy((Array) numArray1, 0, (Array) destinationArray1, 0, numArray1.Length);
      \u206B​⁮​‫​‫⁭‬‫‬‎‏‫⁭‍⁮⁮‮‍‪‫‪‭‭‪‏‮‬​‭⁭⁭‫‫⁪⁫⁭‫‬‮.\u202C‌‪‫‭‮‫‌‭‮‌⁯⁬⁬⁬‏‎‍⁭‬‪‎‮⁯‎⁮‮⁮‌‍‫⁮‌⁭⁭‬⁮‪‫‫‮(destinationArray1);
      \u206B​⁮​‫​‫⁭‬‫‬‎‏‫⁭‍⁮⁮‮‍‪‫‪‭‭‪‏‮‬​‭⁭⁭‫‫⁪⁫⁭‫‬‮.\u202C‭​‬‬⁭​‮‭​⁬⁫‬‏⁬‬⁭‏‏‍‏‮‌⁪‫‮‮⁪⁫‍‍⁫⁫⁪⁪⁬‌⁬⁬‮‮(this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮, destinationArray1, destinationArray1);
      for (int index = 0; index != numArray2.Length; ++index)
        numArray2[index] = (byte) ((uint) sourceArray[index] ^ (uint) destinationArray1[index]);
      numArray2[0] |= (byte) 128;
      numArray2[19] |= (byte) 1;
      obj1 = new \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮(1, numArray2);
    }
    while (!obj1.\u202C​⁭‎‪‮‏‮‌⁭‎⁫‌‫⁭‌⁯‎⁮‎⁯⁯‬‬‬‍‍⁫​‎‫‌⁭‮‍⁮⁮⁬‍‬‮(this.\u200D⁯⁮‫‎⁮⁪‏⁪⁮‮​⁭‏⁯⁫⁭⁬‬⁪‪⁭‎‎‬⁪⁪⁬​‎⁫‍⁬‮‍‎‍‌‭‮));
    byte[] numArray3 = \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u206F‬⁯‪⁬⁮⁭⁮‮‭‬‌‌‎⁪⁫‍‭‍‮‌⁬‮‏‍‪‬‮⁯‫‪‭‬⁭‏⁮⁯​‮⁬‮(numArray1);
    \u206B​⁮​‫​‫⁭‬‫‬‎‏‫⁭‍⁮⁮‮‍‪‫‪‭‭‪‏‮‬​‭⁭⁭‫‫⁪⁫⁭‫‬‮.\u202C‌‪‫‭‮‫‌‭‮‌⁯⁬⁬⁬‏‎‍⁭‬‪‎‮⁯‎⁮‮⁮‌‍‫⁮‌⁭⁭‬⁮‪‫‫‮(numArray3);
    for (int index1 = 0; index1 < 4096; ++index1)
    {
      for (int index2 = 0; index2 < num; ++index2)
      {
        \u206B​⁮​‫​‫⁭‬‫‬‎‏‫⁭‍⁮⁮‮‍‪‫‪‭‭‪‏‮‬​‭⁭⁭‫‫⁪⁫⁭‫‬‮.\u202C‌‪‫‭‮‫‌‭‮‌⁯⁬⁬⁬‏‎‍⁭‬‪‎‮⁯‎⁮‮⁮‌‍‫⁮‌⁭⁭‬⁮‪‫‫‮(numArray3);
        \u206B​⁮​‫​‫⁭‬‫‬‎‏‫⁭‍⁮⁮‮‍‪‫‪‭‭‪‏‮‬​‭⁭⁭‫‫⁪⁫⁭‫‬‮.\u202C‭​‬‬⁭​‮‭​⁬⁫‬‏⁬‬⁭‏‏‍‏‮‌⁪‫‮‮⁪⁫‍‍⁫⁫⁪⁪⁬‌⁬⁬‮‮(this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮, numArray3, sourceArray);
        Array.Copy((Array) sourceArray, 0, (Array) destinationArray2, destinationArray2.Length - (index2 + 1) * sourceArray.Length, sourceArray.Length);
      }
      \u206B​⁮​‫​‫⁭‬‫‬‎‏‫⁭‍⁮⁮‮‍‪‫‪‭‭‪‏‮‬​‭⁭⁭‫‫⁪⁫⁭‫‬‮.\u202C‌‪‫‭‮‫‌‭‮‌⁯⁬⁬⁬‏‎‍⁭‬‪‎‮⁯‎⁮‮⁮‌‍‫⁮‌⁭⁭‬⁮‪‫‫‮(numArray3);
      \u206B​⁮​‫​‫⁭‬‫‬‎‏‫⁭‍⁮⁮‮‍‪‫‪‭‭‪‏‮‬​‭⁭⁭‫‫⁪⁫⁭‫‬‮.\u202C‭​‬‬⁭​‮‭​⁬⁫‬‏⁬‬⁭‏‏‍‏‮‌⁪‫‮‮⁪⁫‍‍⁫⁫⁪⁪⁬‌⁬⁬‮‮(this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮, numArray3, sourceArray);
      Array.Copy((Array) sourceArray, sourceArray.Length - (destinationArray2.Length - num * sourceArray.Length), (Array) destinationArray2, 0, destinationArray2.Length - num * sourceArray.Length);
      destinationArray2[0] |= (byte) 128;
      \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj2 = new \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮(1, destinationArray2);
      \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj3 = obj2.\u206D⁮‮‌‌‭‏‭‭⁪‮⁯⁮​‫⁯‍⁬​‍‌‮‌⁯⁭‏⁫‏​‪⁪‪‎‭‎‍‪‫⁮⁫‮(obj2.\u206A‎‏⁫⁪‫‪‎⁭‮‮‭⁬⁮⁪⁬‮‍‫‏‮‎⁯‏‏‭⁯‭⁯‍‪⁮‬⁭‏⁬‎‍‭⁮‮(obj1.\u202B‭‪⁯‫‪⁯​‎‭⁮⁬⁬⁫‍⁯‍‌⁯‏‭‪‌‮‪‭‪‌⁬⁭‫⁫⁭⁪‌​‫‎‎‬‮(1)).\u206D⁮‮‌‌‭‏‭‭⁪‮⁯⁮​‫⁯‍⁬​‍‌‮‌⁯⁭‏⁫‏​‪⁪‪‎‭‎‍‪‫⁮⁫‮(\u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮.One));
      if (obj3.\u200B‌⁮⁫‪‎⁬⁮​⁯⁬⁪‭⁯‌‌⁪‪⁬⁬‭‏⁮‬‬‏⁫‬‫‏⁭⁭‫‫⁪‬‏⁯⁬‮ == this.\u200D⁭‫​‮‪‎‌⁬⁯⁫‌⁫‍‎⁬⁬‫‭⁪‭‪‏‎‬‮‬‎‎​‎‫⁪⁮‬‮‮​‎⁬‮ && obj3.\u202C​⁭‎‪‮‏‮‌⁭‎⁫‌‫⁭‌⁯‎⁮‎⁯⁯‬‬‬‍‍⁫​‎‫‌⁭‮‍⁮⁮⁬‍‬‮(this.\u200D⁯⁮‫‎⁮⁪‏⁪⁮‮​⁭‏⁯⁫⁭⁬‬⁪‪⁭‎‎‬⁪⁪⁬​‎⁫‍⁬‮‍‎‍‌‭‮))
      {
        \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj4 = this.\u202A⁬⁭‮‪‌⁭⁪⁯⁪‏‬‫⁪‍‭‌⁯‎⁮‍‫⁪⁯‏⁬‭⁬‭‬⁭‭⁬⁫‬‫‏⁮‭⁮‮(obj3, obj1, this.\u202C⁪‎⁫⁭‌⁯⁪‫‮​⁪‬⁯‍‌‭⁭⁬​⁬⁪‬⁪‪⁪‪‏‫‌‎‌⁭‌‪‎⁯‮⁭⁫‮);
        return new \u206B‮‪​‏​⁫‮⁬‫‫⁯⁫⁪⁪⁪⁯‏‎‬⁮​⁭⁭⁯‌⁬⁬‍‫⁮⁯‏‭‎⁮‫⁪‏‍‮(obj3, obj1, obj4, new \u206F⁭‏⁯‪‎⁫⁬‭⁪‭⁯⁯‭⁮‭‎​⁭⁮⁮⁪‍‍‎‬⁭‍⁪‎‮‭‮‮‎‎⁯⁫‌‪‮(numArray1, index1));
      }
    }
    goto label_2;
  }

  protected virtual \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ \u202A⁬⁭‮‪‌⁭⁪⁯⁪‏‬‫⁪‍‭‌⁯‎⁮‍‫⁪⁯‏⁬‭⁬‭‬⁭‭⁬⁫‬‫‏⁮‭⁮‮(
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ _param1,
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ _param2,
    \u200D​⁪‮​‫⁯⁮‪‫‪‍⁪⁮⁫‮​⁯⁪⁫⁫‬‮‎‫‎⁪⁮‮‎‌⁬‮‫⁫‬‮‌⁪‭‮ _param3)
  {
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj1 = _param1.\u206D⁮‮‌‌‭‏‭‭⁪‮⁯⁮​‫⁯‍⁬​‍‌‮‌⁯⁭‏⁫‏​‪⁪‪‎‭‎‍‪‫⁮⁫‮(\u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮.One).\u206C⁯‬⁪⁯‫‬⁫‮‭⁭‫⁭⁪⁬‌‏⁭‭⁫‍‪⁯‮‎‍‮⁭⁮‌‍⁬‌⁮‭​⁯​‬‮(_param2);
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj2 = _param1.\u206D⁮‮‌‌‭‏‭‭⁪‮⁯⁮​‫⁯‍⁬​‍‌‮‌⁯⁭‏⁫‏​‪⁪‪‎‭‎‍‪‫⁮⁫‮(\u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮.Two);
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj3;
    do
    {
      obj3 = \u206B⁮‏‬⁭⁫‪‌‭‍‫‏‎‍⁯‏‪‏‌‎⁮‍‬‌‭⁭‫‪⁪‎​⁭⁭⁮‬⁭⁯‪⁫⁪‮.\u202B‭‭‏⁬⁫‫⁪‭‍‭⁮‍‌⁭‎‫​‮‮⁯‭‫⁮‫⁬⁫‬​⁫⁪‮‎‪⁪‪‬⁯‍⁪‮(\u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮.Two, obj2, _param3).\u206B‫‌‍⁮​‌‮‮​⁬‏​⁯‍‮‍⁯‪‌⁬​⁯‏⁬‎⁬‌​⁪‬‮‭‎‎⁪​⁫‫‪‮(obj1, _param1);
    }
    while (obj3.\u200B‌⁮⁫‪‎⁬⁮​⁯⁬⁪‭⁯‌‌⁪‪⁬⁬‭‏⁮‬‬‏⁫‬‫‏⁭⁭‫‫⁪‬‏⁯⁬‮ <= 1);
    return obj3;
  }

  protected virtual \u206B‮‪​‏​⁫‮⁬‫‫⁯⁫⁪⁪⁪⁯‏‎‬⁮​⁭⁭⁯‌⁬⁬‍‫⁮⁯‏‭‎⁮‫⁪‏‍‮ \u200C⁪‌‍‪⁭⁬‎⁬⁭⁫‎⁫⁬⁫‎‪⁫⁯‭⁬‬‌⁮‬‫‍‭‫⁯‍⁯‍‏‫‪⁫⁫‍⁫‮()
  {
    \u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮ obj1 = this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮;
    int num1 = obj1.\u202D‏‬‪⁬‪‌⁭‌​‪‍‭‮‪‫‌⁫‌​⁭‫⁭‫‍⁫⁪⁪‫‮‌⁮⁭⁪‭​‫‍‌‭‮() * 8;
    byte[] buffer = new byte[this.\u202D⁪‍​‌⁮⁭‫⁮‎⁭⁭⁫‫⁬⁫‪‏⁭‫‍⁬‬‬​‬‮‎‪‬‎‌‮⁬‌⁯‎‏‌⁪‮ / 8];
    int num2 = (this.\u200D⁭‫​‮‪‎‌⁬⁯⁫‌⁫‍‎⁬⁬‫‭⁪‭‪‏‎‬‮‬‎‎​‎‫⁪⁮‬‮‮​‎⁬‮ - 1) / num1;
    int num3 = (this.\u200D⁭‫​‮‪‎‌⁬⁯⁫‌⁫‍‎⁬⁬‫‭⁪‭‪‏‎‬‮‬‎‎​‎‫⁪⁮‬‮‮​‎⁬‮ - 1) % num1;
    byte[] numArray1 = new byte[obj1.\u202D‏‬‪⁬‪‌⁭‌​‪‍‭‮‪‫‌⁫‌​⁭‫⁭‫‍⁫⁪⁪‫‮‌⁮⁭⁪‭​‫‍‌‭‮()];
label_1:
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj2;
    do
    {
      ((Random) this.\u202C⁪‎⁫⁭‌⁯⁪‫‮​⁪‬⁯‍‌‭⁭⁬​⁬⁪‬⁪‪⁪‪‏‫‌‎‌⁭‌‪‎⁯‮⁭⁫‮).NextBytes(buffer);
      \u206B​⁮​‫​‫⁭‬‫‬‎‏‫⁭‍⁮⁮‮‍‪‫‪‭‭‪‏‮‬​‭⁭⁭‫‫⁪⁫⁭‫‬‮.\u202C‭​‬‬⁭​‮‭​⁬⁫‬‏⁬‬⁭‏‏‍‏‮‌⁪‫‮‮⁪⁫‍‍⁫⁫⁪⁪⁬‌⁬⁬‮‮(obj1, buffer, numArray1);
      obj2 = new \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮(1, numArray1).\u206A‎‏⁫⁪‫‪‎⁭‮‮‭⁬⁮⁪⁬‮‍‫‏‮‎⁯‏‏‭⁯‭⁯‍‪⁮‬⁭‏⁬‎‍‭⁮‮(\u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮.One.\u202B‭‪⁯‫‪⁯​‎‭⁮⁬⁬⁫‍⁯‍‌⁯‏‭‪‌‮‪‭‪‌⁬⁭‫⁫⁭⁪‌​‫‎‎‬‮(this.\u202D⁪‍​‌⁮⁭‫⁮‎⁭⁭⁫‫⁬⁫‪‏⁭‫‍⁬‬‬​‬‮‎‪‬‎‌‮⁬‌⁯‎‏‌⁪‮ - 1)).\u206A​⁭‪⁯‪⁭‍‪‮‭‮⁪‪⁭⁫​‎⁮‏⁪‭‫‬‏‪⁫⁬‪⁬‪‭⁭‭‎⁮‫‍⁭⁪‮(0).\u206A​⁭‪⁯‪⁭‍‪‮‭‮⁪‪⁭⁫​‎⁮‏⁪‭‫‬‏‪⁫⁬‪⁬‪‭⁭‭‎⁮‫‍⁭⁪‮(this.\u202D⁪‍​‌⁮⁭‫⁮‎⁭⁭⁫‫⁬⁫‪‏⁭‫‍⁬‬‬​‬‮‎‪‬‎‌‮⁬‌⁯‎‏‌⁪‮ - 1);
    }
    while (!obj2.\u202C​⁭‎‪‮‏‮‌⁭‎⁫‌‫⁭‌⁯‎⁮‎⁯⁯‬‬‬‍‍⁫​‎‫‌⁭‮‍⁮⁮⁬‍‬‮(this.\u200D⁯⁮‫‎⁮⁪‏⁪⁮‮​⁭‏⁯⁫⁭⁬‬⁪‪⁭‎‎‬⁪⁪⁬​‎⁫‍⁬‮‍‎‍‌‭‮));
    byte[] numArray2 = \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u206F‬⁯‪⁬⁮⁭⁮‮‭‬‌‌‎⁪⁫‍‭‍‮‌⁬‮‏‍‪‬‮⁯‫‪‭‬⁭‏⁮⁯​‮⁬‮(buffer);
    int num4 = 4 * this.\u200D⁭‫​‮‪‎‌⁬⁯⁫‌⁫‍‎⁬⁬‫‭⁪‭‪‏‎‬‮‬‎‎​‎‫⁪⁮‬‮‮​‎⁬‮;
    for (int index = 0; index < num4; ++index)
    {
      \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj3 = \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮.Zero;
      int num5 = 0;
      int num6 = 0;
      while (num5 <= num2)
      {
        \u206B​⁮​‫​‫⁭‬‫‬‎‏‫⁭‍⁮⁮‮‍‪‫‪‭‭‪‏‮‬​‭⁭⁭‫‫⁪⁫⁭‫‬‮.\u202C‌‪‫‭‮‫‌‭‮‌⁯⁬⁬⁬‏‎‍⁭‬‪‎‮⁯‎⁮‮⁮‌‍‫⁮‌⁭⁭‬⁮‪‫‫‮(numArray2);
        \u206B​⁮​‫​‫⁭‬‫‬‎‏‫⁭‍⁮⁮‮‍‪‫‪‭‭‪‏‮‬​‭⁭⁭‫‫⁪⁫⁭‫‬‮.\u202C‭​‬‬⁭​‮‭​⁬⁫‬‏⁬‬⁭‏‏‍‏‮‌⁪‫‮‮⁪⁫‍‍⁫⁫⁪⁪⁬‌⁬⁬‮‮(obj1, numArray2, numArray1);
        \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj4 = new \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮(1, numArray1);
        if (num5 == num2)
          obj4 = obj4.\u206A‎‏⁫⁪‫‪‎⁭‮‮‭⁬⁮⁪⁬‮‍‫‏‮‎⁯‏‏‭⁯‭⁯‍‪⁮‬⁭‏⁬‎‍‭⁮‮(\u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮.One.\u202B‭‪⁯‫‪⁯​‎‭⁮⁬⁬⁫‍⁯‍‌⁯‏‭‪‌‮‪‭‪‌⁬⁭‫⁫⁭⁪‌​‫‎‎‬‮(num3));
        obj3 = obj3.\u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮(obj4.\u202B‭‪⁯‫‪⁯​‎‭⁮⁬⁬⁫‍⁯‍‌⁯‏‭‪‌‮‪‭‪‌⁬⁭‫⁫⁭⁪‌​‫‎‎‬‮(num6));
        ++num5;
        num6 += num1;
      }
      \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj5 = obj3.\u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮(\u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮.One.\u202B‭‪⁯‫‪⁯​‎‭⁮⁬⁬⁫‍⁯‍‌⁯‏‭‪‌‮‪‭‪‌⁬⁭‫⁫⁭⁪‌​‫‎‎‬‮(this.\u200D⁭‫​‮‪‎‌⁬⁯⁫‌⁫‍‎⁬⁬‫‭⁪‭‪‏‎‬‮‬‎‎​‎‫⁪⁮‬‮‮​‎⁬‮ - 1));
      \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj6 = obj5.\u206D⁮‮‌‌‭‏‭‭⁪‮⁯⁮​‫⁯‍⁬​‍‌‮‌⁯⁭‏⁫‏​‪⁪‪‎‭‎‍‪‫⁮⁫‮(obj5.\u206A‎‏⁫⁪‫‪‎⁭‮‮‭⁬⁮⁪⁬‮‍‫‏‮‎⁯‏‏‭⁯‭⁯‍‪⁮‬⁭‏⁬‎‍‭⁮‮(obj2.\u202B‭‪⁯‫‪⁯​‎‭⁮⁬⁬⁫‍⁯‍‌⁯‏‭‪‌‮‪‭‪‌⁬⁭‫⁫⁭⁪‌​‫‎‎‬‮(1)).\u206D⁮‮‌‌‭‏‭‭⁪‮⁯⁮​‫⁯‍⁬​‍‌‮‌⁯⁭‏⁫‏​‪⁪‪‎‭‎‍‪‫⁮⁫‮(\u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮.One));
      if (obj6.\u200B‌⁮⁫‪‎⁬⁮​⁯⁬⁪‭⁯‌‌⁪‪⁬⁬‭‏⁮‬‬‏⁫‬‫‏⁭⁭‫‫⁪‬‏⁯⁬‮ == this.\u200D⁭‫​‮‪‎‌⁬⁯⁫‌⁫‍‎⁬⁬‫‭⁪‭‪‏‎‬‮‬‎‎​‎‫⁪⁮‬‮‮​‎⁬‮ && obj6.\u202C​⁭‎‪‮‏‮‌⁭‎⁫‌‫⁭‌⁯‎⁮‎⁯⁯‬‬‬‍‍⁫​‎‫‌⁭‮‍⁮⁮⁬‍‬‮(this.\u200D⁯⁮‫‎⁮⁪‏⁪⁮‮​⁭‏⁯⁫⁭⁬‬⁪‪⁭‎‎‬⁪⁪⁬​‎⁫‍⁬‮‍‎‍‌‭‮))
      {
        if (this.\u202B⁫​‎‭⁪‌‍‎⁮‫⁫‭‪‭⁭⁯⁮‮⁫‮⁪‪‪‎‭⁮‫‭‬​‮‫⁯‭⁬⁫‮‍‎‮ >= 0)
        {
          \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj7 = this.\u202C‬⁬‎‎​⁯‬‏‍‎⁫⁮‭‪‭⁫⁪‬‮⁫‬‪‎‌​‍‍‌‫‭⁭⁬‍‍‬⁬​‌‮(obj1, obj6, obj2, buffer, this.\u202B⁫​‎‭⁪‌‍‎⁮‫⁫‭‪‭⁭⁯⁮‮⁫‮⁪‪‪‎‭⁮‫‭‬​‮‫⁯‭⁬⁫‮‍‎‮);
          if (obj7 != null)
            return new \u206B‮‪​‏​⁫‮⁬‫‫⁯⁫⁪⁪⁪⁯‏‎‬⁮​⁭⁭⁯‌⁬⁬‍‫⁮⁯‏‭‎⁮‫⁪‏‍‮(obj6, obj2, obj7, new \u206F⁭‏⁯‪‎⁫⁬‭⁪‭⁯⁯‭⁮‭‎​⁭⁮⁮⁪‍‍‎‬⁭‍⁪‎‮‭‮‮‎‎⁯⁫‌‪‮(buffer, index, this.\u202B⁫​‎‭⁪‌‍‎⁮‫⁫‭‪‭⁭⁯⁮‮⁫‮⁪‪‪‎‭⁮‫‭‬​‮‫⁯‭⁬⁫‮‍‎‮));
        }
        \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj8 = this.\u200F⁬‏‫⁪⁯⁪‏‍‮‮‪⁮​⁬⁪⁭⁪⁭‏⁭‮‍​‪‮‍‪⁭‬​⁭‬‫‬⁬⁯⁬‪‪‮(obj6, obj2, this.\u202C⁪‎⁫⁭‌⁯⁪‫‮​⁪‬⁯‍‌‭⁭⁬​⁬⁪‬⁪‪⁪‪‏‫‌‎‌⁭‌‪‎⁯‮⁭⁫‮);
        return new \u206B‮‪​‏​⁫‮⁬‫‫⁯⁫⁪⁪⁪⁯‏‎‬⁮​⁭⁭⁯‌⁬⁬‍‫⁮⁯‏‭‎⁮‫⁪‏‍‮(obj6, obj2, obj8, new \u206F⁭‏⁯‪‎⁫⁬‭⁪‭⁯⁯‭⁮‭‎​⁭⁮⁮⁪‍‍‎‬⁭‍⁪‎‮‭‮‮‎‎⁯⁫‌‪‮(buffer, index));
      }
    }
    goto label_1;
  }

  protected virtual \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ \u200F⁬‏‫⁪⁯⁪‏‍‮‮‪⁮​⁬⁪⁭⁪⁭‏⁭‮‍​‪‮‍‪⁭‬​⁭‬‫‬⁬⁯⁬‪‪‮(
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ _param1,
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ _param2,
    \u200D​⁪‮​‫⁯⁮‪‫‪‍⁪⁮⁫‮​⁯⁪⁫⁫‬‮‎‫‎⁪⁮‮‎‌⁬‮‫⁫‬‮‌⁪‭‮ _param3)
  {
    return this.\u202A⁬⁭‮‪‌⁭⁪⁯⁪‏‬‫⁪‍‭‌⁯‎⁮‍‫⁪⁯‏⁬‭⁬‭‬⁭‭⁬⁫‬‫‏⁮‭⁮‮(_param1, _param2, _param3);
  }

  protected virtual \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ \u202C‬⁬‎‎​⁯‬‏‍‎⁫⁮‭‪‭⁫⁪‬‮⁫‬‪‎‌​‍‍‌‫‭⁭⁬‍‍‬⁬​‌‮(
    \u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮ _param1,
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ _param2,
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ _param3,
    byte[] _param4,
    int _param5)
  {
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj1 = _param2.\u206D⁮‮‌‌‭‏‭‭⁪‮⁯⁮​‫⁯‍⁬​‍‌‮‌⁯⁭‏⁫‏​‪⁪‪‎‭‎‍‪‫⁮⁫‮(\u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮.One).\u206C⁯‬⁪⁯‫‬⁫‮‭⁭‫⁭⁪⁬‌‏⁭‭⁫‍‪⁯‮‎‍‮⁭⁮‌‍⁬‌⁮‭​⁯​‬‮(_param3);
    byte[] sourceArray = \u202E‏‌​⁮‌‭‍‫‍⁭​⁯‌​‫⁫‭‭⁯⁫​⁮‪‭⁯‫‮⁫‏⁮‮⁬⁭‎⁭⁯​‪⁭‮.\u202B‫​⁭‏⁬⁫⁬⁯⁮‏‬‬‫⁭‫‭⁫‪‎‍‫⁫‪‍⁮⁯‍⁯‬​‭⁪​⁫⁮‎‍‬‏‮("6767656E");
    byte[] destinationArray = new byte[_param4.Length + sourceArray.Length + 1 + 2];
    Array.Copy((Array) _param4, 0, (Array) destinationArray, 0, _param4.Length);
    Array.Copy((Array) sourceArray, 0, (Array) destinationArray, _param4.Length, sourceArray.Length);
    destinationArray[destinationArray.Length - 3] = (byte) _param5;
    byte[] numArray = new byte[_param1.\u202D‏‬‪⁬‪‌⁭‌​‪‍‭‮‪‫‌⁫‌​⁭‫⁭‫‍⁫⁪⁪‫‮‌⁮⁭⁪‭​‫‍‌‭‮()];
    for (int index = 1; index < 65536; ++index)
    {
      \u206B​⁮​‫​‫⁭‬‫‬‎‏‫⁭‍⁮⁮‮‍‪‫‪‭‭‪‏‮‬​‭⁭⁭‫‫⁪⁫⁭‫‬‮.\u202C‌‪‫‭‮‫‌‭‮‌⁯⁬⁬⁬‏‎‍⁭‬‪‎‮⁯‎⁮‮⁮‌‍‫⁮‌⁭⁭‬⁮‪‫‫‮(destinationArray);
      \u206B​⁮​‫​‫⁭‬‫‬‎‏‫⁭‍⁮⁮‮‍‪‫‪‭‭‪‏‮‬​‭⁭⁭‫‫⁪⁫⁭‫‬‮.\u202C‭​‬‬⁭​‮‭​⁬⁫‬‏⁬‬⁭‏‏‍‏‮‌⁪‫‮‮⁪⁫‍‍⁫⁫⁪⁪⁬‌⁬⁬‮‮(_param1, destinationArray, numArray);
      \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj2 = new \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮(1, numArray).\u206B‫‌‍⁮​‌‮‮​⁬‏​⁯‍‮‍⁯‪‌⁬​⁯‏⁬‎⁬‌​⁪‬‮‭‎‎⁪​⁫‫‪‮(obj1, _param2);
      if (obj2.\u202B‎⁬⁪‏⁪‏‎⁮‌‮‌‭‎⁮⁭⁬‬‌‭⁪⁮‌‌⁯⁫‭‏⁫‮‬‭⁫​‍‍‍⁪‮⁭‮(\u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮.Two) >= 0)
        return obj2;
    }
    return (\u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮) null;
  }

  private static bool \u206B‫‮‎‏‏‫‭‏⁯⁪​⁭⁬⁮‭‭‏​⁪‭⁪​⁮⁯​‬⁯‪⁮‪⁭‭⁫⁬​‏‎⁬‎‮(int _param0) => _param0 >= 512 && _param0 <= 1024 && _param0 % 64 == 0;

  protected static void \u202C‭​‬‬⁭​‮‭​⁬⁫‬‏⁬‬⁭‏‏‍‏‮‌⁪‫‮‮⁪⁫‍‍⁫⁫⁪⁪⁬‌⁬⁬‮‮(
    \u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮ _param0,
    byte[] _param1,
    byte[] _param2)
  {
    _param0.\u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(_param1, 0, _param1.Length);
    _param0.\u200F‏‏‬‫​⁮‬⁫‌‌⁮⁬‏⁭‭‌⁯⁪​‍​⁮⁫‮‫⁮‌‎‪⁬⁯⁪‪⁬‫⁫⁮‪⁭‮(_param2, 0);
  }

  private static int \u200D‮⁬‍‪‫​⁫⁬‪‎‮‫‬‌⁭​⁮‍⁭‌‭‌‍‌‪‏⁯‮⁬‏​​⁯⁭‪‬​⁫⁮‮(int _param0) => _param0 <= 1024 ? 160 : 256;

  protected static void \u202C‌‪‫‭‮‫‌‭‮‌⁯⁬⁬⁬‏‎‍⁭‬‪‎‮⁯‎⁮‮⁮‌‍‫⁮‌⁭⁭‬⁮‪‫‫‮(byte[] _param0)
  {
    for (int index = _param0.Length - 1; index >= 0; --index)
    {
      byte num = (byte) ((uint) _param0[index] + 1U);
      _param0[index] = num;
      if (num != (byte) 0)
        break;
    }
  }
}
