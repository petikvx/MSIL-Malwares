// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONArray
// Assembly: BaseConfigHandl, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 8D741A15-4AC4-4AEF-B040-FB58D745B7BF
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-d821a006c277a3233bf056c5fcd528f49e8482ec7c153568c098d86915113f2c.exe

using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONArray : JSONNode, IEnumerable
  {
    private List<JSONNode> m_List = new List<JSONNode>();

    public override JSONNode this[int aIndex]
    {
      get
      {
        if (aIndex < 0)
          goto label_7;
label_1:
        int num1 = 1982750640;
label_2:
        JSONNode jsonNode;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 495976743)) % 7U)
          {
            case 0:
              int num3 = !flag ? 1721503205 : (num3 = 268611501);
              num1 = num3 ^ (int) num2 * 1414495189;
              continue;
            case 2:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * -289160455 ^ -19936802;
              continue;
            case 3:
              num1 = (int) num2 * 1571147570 ^ 300009241;
              continue;
            case 4:
              goto label_1;
            case 5:
              jsonNode = this.m_List[aIndex];
              num1 = 918075786;
              continue;
            case 6:
              goto label_6;
            default:
              goto label_10;
          }
        }
label_6:
        int num4 = aIndex >= this.m_List.Count ? 1 : 0;
        goto label_8;
label_10:
        return jsonNode;
label_7:
        num4 = 1;
label_8:
        flag = num4 != 0;
        num1 = 606457572;
        goto label_2;
      }
      set
      {
        if (aIndex < 0)
          goto label_9;
label_1:
        int num1 = -167227150;
label_2:
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -749664919)) % 8U)
          {
            case 0:
              this.m_List.Add(value);
              num1 = (int) num2 * -383450848 ^ -582715496;
              continue;
            case 1:
              num1 = (int) num2 * -341724688 ^ -1211712579;
              continue;
            case 2:
              goto label_3;
            case 3:
              goto label_8;
            case 4:
              num1 = (int) num2 * -1308101939 ^ -1528919889;
              continue;
            case 5:
              num1 = (int) num2 * -91378816 ^ 319924731;
              continue;
            case 6:
              this.m_List[aIndex] = value;
              num1 = -1199001924;
              continue;
            case 7:
              goto label_1;
            default:
              goto label_12;
          }
        }
label_3:
        return;
label_12:
        return;
label_8:
        int num3 = aIndex >= this.m_List.Count ? 1 : 0;
        goto label_10;
label_9:
        num3 = 1;
label_10:
        num1 = num3 != 0 ? -1736700855 : (num1 = -1067702849);
        goto label_2;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
label_1:
        int num1 = 194476435;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 972214195)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * 795551359 ^ 700110016;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set => this.m_List.Add(value);
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = 905360507;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 706267312)) % 4U)
          {
            case 0:
              num1 = (int) num2 * -691173291 ^ 1300236501;
              continue;
            case 2:
              goto label_1;
            case 3:
              count = this.m_List.Count;
              num1 = (int) num2 * -535496181 ^ -1973175295;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = 1467458928;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1128089190)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            this.m_List.Add(aItem);
            num1 = (int) num2 * 1883935201 ^ -2050041129;
            continue;
          case 2:
            goto label_3;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = 1934494611;
      JSONNode jsonNode1;
      while (true)
      {
        uint num2;
        bool flag;
        int num3;
        switch ((num2 = (uint) (num1 ^ 348462946)) % 8U)
        {
          case 0:
            num3 = aIndex >= this.m_List.Count ? 1 : 0;
            break;
          case 1:
            if (aIndex >= 0)
            {
              num1 = (int) num2 * 1188311803 ^ -753578271;
              continue;
            }
            num3 = 1;
            break;
          case 3:
            int num4 = flag ? 530149302 : (num4 = 929903853);
            num1 = num4 ^ (int) num2 * -964747738;
            continue;
          case 4:
            num1 = (int) num2 * 272807258 ^ 1751248736;
            continue;
          case 5:
            JSONNode jsonNode2 = this.m_List[aIndex];
            this.m_List.RemoveAt(aIndex);
            jsonNode1 = jsonNode2;
            num1 = 909893032;
            continue;
          case 6:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num2 * -4994813 ^ -1534132620;
            continue;
          case 7:
            goto label_1;
          default:
            goto label_12;
        }
        flag = num3 != 0;
        num1 = 1571314793;
      }
label_12:
      return jsonNode1;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      this.m_List.Remove(aNode);
label_1:
      int num1 = -598486551;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -22622645)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            jsonNode = aNode;
            num1 = (int) num2 * -1705304769 ^ -790390470;
            continue;
          case 3:
            num1 = (int) num2 * -458311693 ^ -1136759621;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONArray.\u003Cget_Childs\u003Ed__13 getChildsD13 = new JSONArray.\u003Cget_Childs\u003Ed__13(-2);
label_1:
        int num1 = 2073597015;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 650039494)) % 4U)
          {
            case 1:
              getChildsD13.\u003C\u003E4__this = this;
              num1 = (int) num2 * 1878153532 ^ -804618564;
              continue;
            case 2:
              childs = (IEnumerable<JSONNode>) getChildsD13;
              num1 = (int) num2 * 930591534 ^ 1626415498;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return childs;
      }
    }

    public IEnumerator GetEnumerator()
    {
      bool enumerator1;
      // ISSUE: fault handler
      try
      {
        // ISSUE: reference to a compiler-generated field
        int num1 = this.\u003C\u003E1__state;
label_1:
        int num2 = 1903992408;
        List<JSONNode>.Enumerator enumerator;
        JSONNode N;
        while (true)
        {
          uint num3;
          switch ((num3 = (uint) (num2 ^ 1181353728)) % 25U)
          {
            case 0:
              enumerator1 = false;
              num2 = (int) num3 * -1016905916 ^ -2095653620;
              continue;
            case 1:
            case 22:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -1;
              num2 = 587564881;
              continue;
            case 2:
              enumerator = this.m_List.GetEnumerator();
              num2 = (int) num3 * -641032107 ^ -955775181;
              continue;
            case 3:
              int num4 = num1 != 0 ? -1761000396 : (num4 = -1961112315);
              num2 = num4 ^ (int) num3 * 1142145893;
              continue;
            case 4:
              num2 = (int) num3 * -95005959 ^ -843453871;
              continue;
            case 6:
              enumerator = new List<JSONNode>.Enumerator();
              num2 = (int) num3 * -1383936435 ^ -1612115678;
              continue;
            case 7:
              goto label_1;
            case 8:
              int num5;
              num2 = num5 = enumerator.MoveNext() ? 1934300965 : (num5 = 1843396503);
              continue;
            case 9:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E2__current = (object) N;
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = 1;
              num2 = (int) num3 * 1258387949 ^ 1920656013;
              continue;
            case 10:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = (int) num3 * 195525615 ^ 330302290;
              continue;
            case 11:
              num2 = (int) num3 * -373764454 ^ -985630006;
              continue;
            case 12:
            case 20:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = 187224262;
              continue;
            case 13:
              num2 = (int) num3 * 1647028403 ^ -514943895;
              continue;
            case 14:
              enumerator1 = false;
              num2 = 965351996;
              continue;
            case 15:
              int num6;
              num2 = num6 = num1 == 1 ? 1720574657 : (num6 = 1428575282);
              continue;
            case 17:
              num2 = (int) num3 * -1131518390 ^ 1751883738;
              continue;
            case 18:
              // ISSUE: reference to a compiler-generated method
              this.\u003C\u003Em__Finally1();
              num2 = (int) num3 * 1246621283 ^ 556875597;
              continue;
            case 19:
              N = enumerator.Current;
              num2 = 602732392;
              continue;
            case 21:
              N = (JSONNode) null;
              num2 = (int) num3 * -2095412909 ^ 694766524;
              continue;
            case 23:
              num2 = (int) num3 * -1690767779 ^ 988789096;
              continue;
            case 24:
              goto label_21;
            default:
              goto label_24;
          }
        }
label_21:
        enumerator1 = true;
      }
      __fault
      {
        // ISSUE: reference to a compiler-generated method
        this.System\u002EIDisposable\u002EDispose();
      }
label_24:
      return enumerator1;
    }

    public override string ToString()
    {
label_1:
      int num1 = 1848511948;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1714459512)) % 3U)
        {
          case 1:
            str1 = "[ ";
            num1 = (int) num2 * -1490780181 ^ 721186431;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_11:
        int num3 = enumerator.MoveNext() ? 257806130 : (num3 = 414884396);
        bool flag;
        JSONNode current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1714459512)) % 9U)
          {
            case 0:
              int num5 = !flag ? -57822406 : (num5 = -1797602697);
              num3 = num5 ^ (int) num4 * -1810222273;
              continue;
            case 1:
              str1 = JSONArray.\u202C⁮‮⁭⁯⁫‍​⁪⁭⁮‫​‌⁭‪‍‌‌‏‌‮‏‏⁬‭‎‌‎‬⁭⁬⁪⁬⁬​‮‮‪⁫‮(str1, ", ");
              num3 = (int) num4 * 758909651 ^ 2040145937;
              continue;
            case 2:
              num3 = (int) num4 * 1373650109 ^ 977294168;
              continue;
            case 3:
              flag = JSONArray.\u206F‫⁯‭⁯⁮⁮‍‮‭⁫‫⁯‌​⁯⁫⁪⁬‍⁮⁯⁯‎⁯‍‭​⁮⁮‍⁫⁫‎‬‎‭​‬⁪‮(str1) > 2;
              num3 = (int) num4 * -795438433 ^ -1230217812;
              continue;
            case 5:
              current = enumerator.Current;
              num3 = 1667719069;
              continue;
            case 6:
              goto label_11;
            case 7:
              num3 = 257806130;
              continue;
            case 8:
              str1 = JSONArray.\u202C⁮‮⁭⁯⁫‍​⁪⁭⁮‫​‌⁭‪‍‌‌‏‌‮‏‏⁬‭‎‌‎‬⁭⁬⁪⁬⁬​‮‮‪⁫‮(str1, JSONArray.\u200C‪‍‍⁭‭‭‏⁯⁫‌⁪‪‏⁯⁪‭⁪​⁭⁫​⁮‫⁫‍‬‍‫‬⁪⁫⁯‮‎‬‎‌‌⁪‮((object) current));
              num3 = 342865621;
              continue;
            default:
              goto label_16;
          }
        }
      }
label_16:
      string str2 = JSONArray.\u202C⁮‮⁭⁯⁫‍​⁪⁭⁮‫​‌⁭‪‍‌‌‏‌‮‏‏⁬‭‎‌‎‬⁭⁬⁪⁬⁬​‮‮‪⁫‮(str1, " ]");
label_17:
      int num6 = 1876884989;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ 1714459512)) % 3U)
        {
          case 0:
            goto label_17;
          case 1:
            num6 = (int) num7 * 478360855 ^ 937786494;
            continue;
          default:
            goto label_20;
        }
      }
label_20:
      return str2;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = -752631002;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1062869663)) % 3U)
        {
          case 1:
            str = "[ ";
            num1 = (int) num2 * -574124953 ^ -854610109;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_8:
        int num3 = !enumerator.MoveNext() ? -907771467 : (num3 = -687104832);
        JSONNode current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -1062869663)) % 8U)
          {
            case 0:
              int num5 = JSONArray.\u206F‫⁯‭⁯⁮⁮‍‮‭⁫‫⁯‌​⁯⁫⁪⁬‍⁮⁯⁯‎⁯‍‭​⁮⁮‍⁫⁫‎‬‎‭​‬⁪‮(str) > 3 ? -1405499650 : (num5 = -1394136230);
              num3 = num5 ^ (int) num4 * -779512725;
              continue;
            case 1:
              current = enumerator.Current;
              num3 = -1988504652;
              continue;
            case 2:
              num3 = -687104832;
              continue;
            case 3:
              str = JSONArray.\u202B⁮‬‬⁫‌‍⁯‬‫‬⁬‮‮​⁪‬‪‍⁮‭‬⁯⁬⁬‎‎⁭⁫⁭⁪‭⁫‎‪⁪⁪‌⁪‫‮(str, "\n", aPrefix, "   ");
              str = JSONArray.\u202C⁮‮⁭⁯⁫‍​⁪⁭⁮‫​‌⁭‪‍‌‌‏‌‮‏‏⁬‭‎‌‎‬⁭⁬⁪⁬⁬​‮‮‪⁫‮(str, current.ToString(JSONArray.\u202C⁮‮⁭⁯⁫‍​⁪⁭⁮‫​‌⁭‪‍‌‌‏‌‮‏‏⁬‭‎‌‎‬⁭⁬⁪⁬⁬​‮‮‪⁫‮(aPrefix, "   ")));
              num3 = -344347321;
              continue;
            case 5:
              num3 = (int) num4 * 774124283 ^ -1776032938;
              continue;
            case 6:
              goto label_8;
            case 7:
              str = JSONArray.\u202C⁮‮⁭⁯⁫‍​⁪⁭⁮‫​‌⁭‪‍‌‌‏‌‮‏‏⁬‭‎‌‎‬⁭⁬⁪⁬⁬​‮‮‪⁫‮(str, ", ");
              num3 = (int) num4 * -466207854 ^ 599230484;
              continue;
            default:
              goto label_15;
          }
        }
      }
label_15:
      return JSONArray.\u202B⁮‬‬⁫‌‍⁯‬‫‬⁬‮‮​⁪‬‪‍⁮‭‬⁯⁬⁬‎‎⁭⁫⁭⁪‭⁫‎‪⁪⁪‌⁪‫‮(str, "\n", aPrefix, "]");
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = 2107916521;
      int index;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 881292795)) % 12U)
        {
          case 0:
            int num3 = !flag ? -1210097524 : (num3 = -868957852);
            num1 = num3 ^ (int) num2 * 1791769002;
            continue;
          case 1:
            index = 0;
            num1 = (int) num2 * 1553373380 ^ 1623263450;
            continue;
          case 2:
            JSONArray.\u202C‭‮‎‏‮⁮‭⁫‭‍‫‎⁪⁫‮‫‌‍⁫‏⁯⁪⁪‫‬⁫‮‬‬‫‭‍⁪‬⁬‌⁭‍‪‮(aWriter, (byte) 1);
            JSONArray.\u206F⁬⁮‬⁯‏‌⁭⁫⁮​‍‮⁮‎‌​⁬⁭⁮‬‭⁮‮‎⁬‮⁭⁮⁬‎⁮‫⁯⁯⁭⁪‌‍‮(aWriter, this.m_List.Count);
            num1 = (int) num2 * -796100038 ^ -667662526;
            continue;
          case 3:
            goto label_1;
          case 4:
            flag = index < this.m_List.Count;
            num1 = 2009115259;
            continue;
          case 5:
            this.m_List[index].Serialize(aWriter);
            num1 = (int) num2 * -335848928 ^ -1056961485;
            continue;
          case 6:
            ++index;
            num1 = (int) num2 * -1397263338 ^ -592133413;
            continue;
          case 7:
            num1 = 952103118;
            continue;
          case 8:
            num1 = (int) num2 * 2006050035 ^ -694558495;
            continue;
          case 9:
            num1 = (int) num2 * -1403924638 ^ 1974684557;
            continue;
          case 10:
            num1 = (int) num2 * -171277553 ^ -296007537;
            continue;
          case 11:
            goto label_3;
          default:
            goto label_14;
        }
      }
label_3:
      return;
label_14:;
    }

    static int \u206F‫⁯‭⁯⁮⁮‍‮‭⁫‫⁯‌​⁯⁫⁪⁬‍⁮⁯⁯‎⁯‍‭​⁮⁮‍⁫⁫‎‬‎‭​‬⁪‮([In] string obj0) => obj0.Length;

    static string \u202C⁮‮⁭⁯⁫‍​⁪⁭⁮‫​‌⁭‪‍‌‌‏‌‮‏‏⁬‭‎‌‎‬⁭⁬⁪⁬⁬​‮‮‪⁫‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u200C‪‍‍⁭‭‭‏⁯⁫‌⁪‪‏⁯⁪‭⁪​⁭⁫​⁮‫⁫‍‬‍‫‬⁪⁫⁯‮‎‬‎‌‌⁪‮([In] object obj0) => obj0.ToString();

    static string \u202B⁮‬‬⁫‌‍⁯‬‫‬⁬‮‮​⁪‬‪‍⁮‭‬⁯⁬⁬‎‎⁭⁫⁭⁪‭⁫‎‪⁪⁪‌⁪‫‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u202C‭‮‎‏‮⁮‭⁫‭‍‫‎⁪⁫‮‫‌‍⁫‏⁯⁪⁪‫‬⁫‮‬‬‫‭‍⁪‬⁬‌⁭‍‪‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u206F⁬⁮‬⁯‏‌⁭⁫⁮​‍‮⁮‎‌​⁬⁭⁮‬‭⁮‮‎⁬‮⁭⁮⁬‎⁮‫⁯⁯⁭⁪‌‍‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);
  }
}
