// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONClass
// Assembly: AppConte, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 7B8B5733-911E-457B-A55E-DDA2927F5FA5
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-60ba049b8af0c51a8dfbc45cacedef4180000b7739c937d22d8cbd66d4c6a8a8.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONClass : JSONNode, IEnumerable
  {
    private Dictionary<string, JSONNode> m_Dict = new Dictionary<string, JSONNode>();

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 1400670316;
        bool flag;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1317625766)) % 8U)
          {
            case 0:
              goto label_1;
            case 1:
              jsonNode = this.m_Dict[aKey];
              num1 = (int) num2 * -1937251406 ^ -343062376;
              continue;
            case 2:
              flag = this.m_Dict.ContainsKey(aKey);
              num1 = (int) num2 * -1616153080 ^ -2143591992;
              continue;
            case 3:
              num1 = (int) num2 * -1792670705 ^ -116649332;
              continue;
            case 4:
              num1 = (int) num2 * -1122340882 ^ 1663638881;
              continue;
            case 5:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = 1712646381;
              continue;
            case 6:
              int num3 = flag ? -2014201557 : (num3 = -1698147009);
              num1 = num3 ^ (int) num2 * 1207082710;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = -1134265072;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1956625866)) % 7U)
          {
            case 0:
              this.m_Dict.Add(aKey, value);
              num1 = -133148079;
              continue;
            case 1:
              num1 = (int) num2 * -735781633 ^ 1450348566;
              continue;
            case 2:
              num1 = (int) num2 * 854731939 ^ -960849382;
              continue;
            case 3:
              int num3 = !this.m_Dict.ContainsKey(aKey) ? 527778975 : (num3 = 934144615);
              num1 = num3 ^ (int) num2 * 286253409;
              continue;
            case 4:
              goto label_3;
            case 5:
              this.m_Dict[aKey] = value;
              num1 = (int) num2 * 145505275 ^ 1873347260;
              continue;
            case 6:
              goto label_1;
            default:
              goto label_9;
          }
        }
label_3:
        return;
label_9:;
      }
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = -1303695523;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ -2012770280)) % 8U)
          {
            case 0:
              num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
              break;
            case 2:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 321790292 ^ 2019081303;
              continue;
            case 3:
              goto label_1;
            case 4:
              int num4 = flag ? 1396104694 : (num4 = 816275106);
              num1 = num4 ^ (int) num2 * -1537258759;
              continue;
            case 5:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * 364388985 ^ 1499230813;
                continue;
              }
              num3 = 1;
              break;
            case 6:
              jsonNode = (JSONNode) null;
              num1 = -1529996423;
              continue;
            case 7:
              num1 = (int) num2 * 2058367859 ^ 688203612;
              continue;
            default:
              goto label_12;
          }
          flag = num3 != 0;
          num1 = -1892164004;
        }
label_12:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = -153851440;
        while (true)
        {
          uint num2;
          int num3;
          switch ((num2 = (uint) (num1 ^ -1399289063)) % 5U)
          {
            case 0:
              goto label_3;
            case 1:
              num1 = (int) num2 * 727775271 ^ 849207534;
              continue;
            case 2:
              num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
              break;
            case 3:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * 434169318 ^ 1906673985;
                continue;
              }
              num3 = 1;
              break;
            case 4:
              goto label_1;
            default:
              goto label_10;
          }
          int num4;
          num1 = num4 = num3 == 0 ? -52960590 : (num4 = -1141464227);
        }
label_3:
        return;
label_10:;
      }
    }

    public override int Count
    {
      get
      {
        int count = this.m_Dict.Count;
label_1:
        int num1 = 72194671;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 893028929)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * 1634777256 ^ -400573298;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = -761260173;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1854401120)) % 12U)
        {
          case 0:
            num1 = (int) num2 * 2109396334 ^ 2061037301;
            continue;
          case 1:
            int num3 = this.m_Dict.ContainsKey(aKey) ? 164733547 : (num3 = 2087309514);
            num1 = num3 ^ (int) num2 * -133205615;
            continue;
          case 2:
            this.m_Dict[aKey] = aItem;
            num1 = (int) num2 * 1941895605 ^ -1218658602;
            continue;
          case 3:
            num1 = (int) num2 * -1321155577 ^ -1297363165;
            continue;
          case 4:
            this.m_Dict.Add(Guid.NewGuid().ToString(), aItem);
            num1 = -1869612769;
            continue;
          case 5:
            num1 = (int) num2 * -1225757490 ^ -264644074;
            continue;
          case 6:
            goto label_1;
          case 7:
            flag = !JSONClass.\u202D‏‫‮⁪‎⁪‬⁪⁯‏⁫‭‮⁫⁮‮‎⁫‎​​‎​‍⁭⁭‫⁮‎⁭⁫‪‫‪‍⁬‫‬‌‮(aKey);
            num1 = (int) num2 * 760518496 ^ 238543745;
            continue;
          case 8:
            num1 = -1352500710;
            continue;
          case 9:
            int num4 = flag ? 476332932 : (num4 = 1060099336);
            num1 = num4 ^ (int) num2 * -1596548980;
            continue;
          case 10:
            goto label_3;
          case 11:
            this.m_Dict.Add(aKey, aItem);
            num1 = -1267991619;
            continue;
          default:
            goto label_14;
        }
      }
label_3:
      return;
label_14:;
    }

    public override JSONNode Remove(string aKey)
    {
label_1:
      int num1 = 991481019;
      JSONNode jsonNode1;
      JSONNode jsonNode2;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1659618617)) % 8U)
        {
          case 0:
            goto label_1;
          case 2:
            flag = !this.m_Dict.ContainsKey(aKey);
            num1 = (int) num2 * -573150503 ^ 665875374;
            continue;
          case 3:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num2 * 1967012247 ^ -181008875;
            continue;
          case 4:
            jsonNode1 = jsonNode2;
            num1 = (int) num2 * -1303905798 ^ 1265067096;
            continue;
          case 5:
            int num3 = !flag ? -889512160 : (num3 = -1172509484);
            num1 = num3 ^ (int) num2 * 1207925398;
            continue;
          case 6:
            this.m_Dict.Remove(aKey);
            num1 = (int) num2 * 909356209 ^ 817426267;
            continue;
          case 7:
            jsonNode2 = this.m_Dict[aKey];
            num1 = 376154255;
            continue;
          default:
            goto label_9;
        }
      }
label_9:
      return jsonNode1;
    }

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = -1195134994;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        int num3;
        switch ((num2 = (uint) (num1 ^ -1530623530)) % 7U)
        {
          case 0:
            num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
            break;
          case 1:
            jsonNode = (JSONNode) null;
            num1 = -669295219;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * -909241953 ^ -668939588;
            continue;
          case 5:
            if (aIndex >= 0)
            {
              num1 = (int) num2 * -991751006 ^ -1874714004;
              continue;
            }
            num3 = 1;
            break;
          case 6:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * -108294651 ^ -1558391201;
            continue;
          default:
            goto label_11;
        }
        int num4;
        num1 = num4 = num3 == 0 ? -1543154115 : (num4 = -618437832);
      }
label_11:
      return jsonNode;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = 2050926049;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1882808444)) % 3U)
          {
            case 0:
              goto label_2;
            case 2:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -955849832 ^ -236385368;
              continue;
            default:
              goto label_6;
          }
        }
      }
      catch
      {
        jsonNode = (JSONNode) null;
      }
label_6:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        bool childs;
        try
        {
          int num1 = this.\u003C\u003E1__state;
label_1:
          int num2 = 1686758882;
          Dictionary<string, JSONNode>.Enumerator enumerator;
          KeyValuePair<string, JSONNode> N;
          while (true)
          {
            uint num3;
            switch ((num3 = (uint) (num2 ^ 485977168)) % 23U)
            {
              case 0:
              case 10:
                this.\u003C\u003E1__state = -1;
                num2 = 983614297;
                continue;
              case 1:
              case 3:
                this.\u003C\u003E1__state = -3;
                N = new KeyValuePair<string, JSONNode>();
                num2 = 466012193;
                continue;
              case 2:
                N = enumerator.Current;
                num2 = 342315778;
                continue;
              case 4:
                num2 = (int) num3 * 1238892956 ^ -1329604990;
                continue;
              case 5:
                this.\u003C\u003E1__state = -3;
                num2 = (int) num3 * 412597345 ^ 88626146;
                continue;
              case 6:
                enumerator = this.m_Dict.GetEnumerator();
                num2 = (int) num3 * -1516521310 ^ 1855303911;
                continue;
              case 7:
                goto label_1;
              case 8:
                int num4;
                num2 = num4 = num1 != 1 ? 1318480948 : (num4 = 1676482206);
                continue;
              case 9:
                childs = false;
                num2 = 567002034;
                continue;
              case 12:
                this.\u003C\u003E2__current = N.Value;
                this.\u003C\u003E1__state = 1;
                num2 = (int) num3 * 797904934 ^ -493570090;
                continue;
              case 13:
                num2 = (int) num3 * -781796077 ^ -1087857723;
                continue;
              case 14:
                num2 = (int) num3 * -1590397154 ^ 888762121;
                continue;
              case 15:
                num2 = (int) num3 * 522492343 ^ 540115687;
                continue;
              case 16:
                int num5;
                num2 = num5 = !enumerator.MoveNext() ? 671144309 : (num5 = 1709161121);
                continue;
              case 17:
              case 19:
                goto label_22;
              case 18:
                int num6 = num1 != 0 ? -985583638 : (num6 = -825572039);
                num2 = num6 ^ (int) num3 * -1293996919;
                continue;
              case 20:
                num2 = (int) num3 * -1523743473 ^ 1393028821;
                continue;
              case 21:
                this.\u003C\u003Em__Finally1();
                num2 = (int) num3 * -694404913 ^ 253896208;
                continue;
              case 22:
                childs = true;
                num2 = (int) num3 * -770979638 ^ -1043871759;
                continue;
              default:
                goto label_20;
            }
          }
label_20:
          enumerator = new Dictionary<string, JSONNode>.Enumerator();
          childs = false;
        }
        __fault
        {
          this.System\u002EIDisposable\u002EDispose();
        }
label_22:
        return childs;
      }
    }

    public IEnumerator GetEnumerator() => (IEnumerator) new JSONClass.\u003CGetEnumerator\u003Ed__15(0)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString()
    {
label_1:
      int num1 = 975910196;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 812251618)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -370655782 ^ -1211275321;
            continue;
          case 2:
            str = "{";
            num1 = (int) num2 * -710295488 ^ -1739216169;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      using (Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator())
      {
label_14:
        int num3 = enumerator.MoveNext() ? 1840772465 : (num3 = 2119593994);
        KeyValuePair<string, JSONNode> current;
        bool flag;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 812251618)) % 8U)
          {
            case 1:
              int num5 = flag ? -1359168016 : (num5 = -1554107758);
              num3 = num5 ^ (int) num4 * 1996352444;
              continue;
            case 2:
              num3 = 1840772465;
              continue;
            case 3:
              current = enumerator.Current;
              num3 = 595137021;
              continue;
            case 4:
              str = JSONClass.\u206B⁬‏‫⁭⁪‍‭‪⁯‎‌‍⁭‪​‪‭⁪‍⁬⁭‪⁯‎​​⁪⁭‎‪⁪‏⁯‍​⁪‏⁮‮‮(new string[5]
              {
                str,
                "\"",
                JSONNode.Escape(current.Key),
                "\":",
                JSONClass.\u206A⁯‏​⁫‪⁭‪‮​‍‭‎⁫‌‏⁭​‌‭⁮‪‌‭‏‏⁯‫‎⁪‏⁬‮‪‫‪⁫‭⁮‭‮((object) current.Value)
              });
              num3 = 1872419567;
              continue;
            case 5:
              goto label_14;
            case 6:
              str = JSONClass.\u200B⁭‪‌‪‪‎​⁬⁫‮‎⁯⁫​‌‎‌‮⁯⁫⁫‭‏‫⁬‪‭‏⁭⁫‌‫‍‌‪‮‪‎⁪‮(str, ", ");
              num3 = (int) num4 * 585520053 ^ -1536398040;
              continue;
            case 7:
              flag = JSONClass.\u202B‪‫⁯⁯⁫⁯‪‬‭​‪⁭⁫‏⁪‍⁭⁮‬⁫‭‮‫⁪‪‏‮⁯‮​‏⁬‏⁫‏‫‏‎‮(str) > 2;
              num3 = (int) num4 * -942638877 ^ -614850018;
              continue;
            default:
              goto label_16;
          }
        }
      }
label_16:
      return JSONClass.\u200B⁭‪‌‪‪‎​⁬⁫‮‎⁯⁫​‌‎‌‮⁯⁫⁫‭‏‫⁬‪‭‏⁭⁫‌‫‍‌‪‮‪‎⁪‮(str, "}");
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 442162427;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1790565386)) % 3U)
        {
          case 1:
            str1 = "{ ";
            num1 = (int) num2 * -195649897 ^ -252240060;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator();
      try
      {
label_11:
        int num3 = !enumerator.MoveNext() ? 169901429 : (num3 = 1923917659);
        KeyValuePair<string, JSONNode> current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1790565386)) % 8U)
          {
            case 0:
              num3 = 1923917659;
              continue;
            case 1:
              current = enumerator.Current;
              num3 = 1545408376;
              continue;
            case 2:
              int num5 = JSONClass.\u202B‪‫⁯⁯⁫⁯‪‬‭​‪⁭⁫‏⁪‍⁭⁮‬⁫‭‮‫⁪‪‏‮⁯‮​‏⁬‏⁫‏‫‏‎‮(str1) > 3 ? 1012443342 : (num5 = 199617956);
              num3 = num5 ^ (int) num4 * -1525350984;
              continue;
            case 3:
              goto label_11;
            case 4:
              str1 = JSONClass.\u200B⁭‪‌‪‪‎​⁬⁫‮‎⁯⁫​‌‎‌‮⁯⁫⁫‭‏‫⁬‪‭‏⁭⁫‌‫‍‌‪‮‪‎⁪‮(str1, ", ");
              num3 = (int) num4 * 265569572 ^ 896862468;
              continue;
            case 5:
              str1 = JSONClass.\u206B⁬‏‫⁭⁪‍‭‪⁯‎‌‍⁭‪​‪‭⁪‍⁬⁭‪⁯‎​​⁪⁭‎‪⁪‏⁯‍​⁪‏⁮‮‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\" : ",
                current.Value.ToString(JSONClass.\u200B⁭‪‌‪‪‎​⁬⁫‮‎⁯⁫​‌‎‌‮⁯⁫⁫‭‏‫⁬‪‭‏⁭⁫‌‫‍‌‪‮‪‎⁪‮(aPrefix, "   "))
              });
              num3 = (int) num4 * -1030003176 ^ 480655369;
              continue;
            case 6:
              str1 = JSONClass.\u202C⁭‭‏‎‭⁪‍‮‫‫⁪⁯⁭‍⁪⁭‭‫‍‮‫⁭⁬‬⁬⁭‍‬⁮‍⁪‌‎‍⁯‎⁯‬⁮‮(str1, "\n", aPrefix, "   ");
              num3 = 738587351;
              continue;
            default:
              goto label_19;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_15:
        int num6 = 1901468942;
        while (true)
        {
          uint num7;
          switch ((num7 = (uint) (num6 ^ 1790565386)) % 3U)
          {
            case 1:
              num6 = (int) num7 * -189359220 ^ 939178123;
              continue;
            case 2:
              goto label_15;
            default:
              goto label_18;
          }
        }
label_18:;
      }
label_19:
      string str2 = JSONClass.\u202C⁭‭‏‎‭⁪‍‮‫‫⁪⁯⁭‍⁪⁭‭‫‍‮‫⁭⁬‬⁬⁭‍‬⁮‍⁪‌‎‍⁯‎⁯‬⁮‮(str1, "\n", aPrefix, "}");
label_20:
      int num8 = 513241780;
      string str3;
      while (true)
      {
        uint num9;
        switch ((num9 = (uint) (num8 ^ 1790565386)) % 4U)
        {
          case 1:
            num8 = (int) num9 * -622381008 ^ -1050407238;
            continue;
          case 2:
            str3 = str2;
            num8 = (int) num9 * 1878023164 ^ 1937078615;
            continue;
          case 3:
            goto label_20;
          default:
            goto label_24;
        }
      }
label_24:
      return str3;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
      JSONClass.\u206D⁪‫‮‍⁭​⁬‭⁮⁬‫⁪⁫‌‫⁪‮⁪⁮‎⁫‮⁫⁮‮‌‮‮⁪‭‫‍⁯‭⁬⁯‭‎‮(aWriter, (byte) 2);
label_1:
      int num1 = -938004029;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1101570871)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            JSONClass.\u206D​⁬‮‌⁬‏​⁯‬‏⁫⁬‭⁬‌⁪⁪⁭⁮‬⁫⁫‪⁪‫⁯‮‫‬‬⁮‪‬‫‬⁭‬⁯‭‮(aWriter, this.m_Dict.Count);
            num1 = (int) num2 * 46908947 ^ -1991258444;
            continue;
          case 3:
            num1 = (int) num2 * -1433704639 ^ -1786649837;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      using (Dictionary<string, JSONNode>.KeyCollection.Enumerator enumerator = this.m_Dict.Keys.GetEnumerator())
      {
label_13:
        int num3 = enumerator.MoveNext() ? -1047961160 : (num3 = -1087354870);
        string current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -1101570871)) % 8U)
          {
            case 0:
              num3 = -1047961160;
              continue;
            case 1:
              current = enumerator.Current;
              num3 = -727279980;
              continue;
            case 2:
              num3 = (int) num4 * -663061550 ^ -277881942;
              continue;
            case 3:
              goto label_16;
            case 4:
              goto label_13;
            case 5:
              JSONClass.\u200F‌​‫⁭‎‭⁬‭⁬⁯‍‪‌⁬⁬‮⁭‏‪‭‪‬⁫⁮⁬‌‎⁫‌​⁬‮​‍‬‮⁬‮‫‮(aWriter, current);
              num3 = (int) num4 * -1760012339 ^ 1987374798;
              continue;
            case 6:
              this.m_Dict[current].Serialize(aWriter);
              num3 = (int) num4 * -232590586 ^ -1392294305;
              continue;
            case 7:
              num3 = (int) num4 * 1644758838 ^ 1220656567;
              continue;
            default:
              goto label_9;
          }
        }
label_16:
        return;
label_9:;
      }
    }

    public JSONClass()
    {
label_1:
      int num1 = 1830048886;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 360787444)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * 2128051251 ^ 1430644729;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static bool \u202D‏‫‮⁪‎⁪‬⁪⁯‏⁫‭‮⁫⁮‮‎⁫‎​​‎​‍⁭⁭‫⁮‎⁭⁫‪‫‪‍⁬‫‬‌‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    static int \u202B‪‫⁯⁯⁫⁯‪‬‭​‪⁭⁫‏⁪‍⁭⁮‬⁫‭‮‫⁪‪‏‮⁯‮​‏⁬‏⁫‏‫‏‎‮([In] string obj0) => obj0.Length;

    static string \u200B⁭‪‌‪‪‎​⁬⁫‮‎⁯⁫​‌‎‌‮⁯⁫⁫‭‏‫⁬‪‭‏⁭⁫‌‫‍‌‪‮‪‎⁪‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u206A⁯‏​⁫‪⁭‪‮​‍‭‎⁫‌‏⁭​‌‭⁮‪‌‭‏‏⁯‫‎⁪‏⁬‮‪‫‪⁫‭⁮‭‮([In] object obj0) => obj0.ToString();

    static string \u206B⁬‏‫⁭⁪‍‭‪⁯‎‌‍⁭‪​‪‭⁪‍⁬⁭‪⁯‎​​⁪⁭‎‪⁪‏⁯‍​⁪‏⁮‮‮([In] string[] obj0) => string.Concat(obj0);

    static string \u202C⁭‭‏‎‭⁪‍‮‫‫⁪⁯⁭‍⁪⁭‭‫‍‮‫⁭⁬‬⁬⁭‍‬⁮‍⁪‌‎‍⁯‎⁯‬⁮‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u206D⁪‫‮‍⁭​⁬‭⁮⁬‫⁪⁫‌‫⁪‮⁪⁮‎⁫‮⁫⁮‮‌‮‮⁪‭‫‍⁯‭⁬⁯‭‎‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u206D​⁬‮‌⁬‏​⁯‬‏⁫⁬‭⁬‌⁪⁪⁭⁮‬⁫⁫‪⁪‫⁯‮‫‬‬⁮‪‬‫‬⁭‬⁯‭‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u200F‌​‫⁭‎‭⁬‭⁬⁯‍‪‌⁬⁬‮⁭‏‪‭‪‬⁫⁮⁬‌‎⁫‌​⁬‮​‍‬‮⁬‮‫‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
