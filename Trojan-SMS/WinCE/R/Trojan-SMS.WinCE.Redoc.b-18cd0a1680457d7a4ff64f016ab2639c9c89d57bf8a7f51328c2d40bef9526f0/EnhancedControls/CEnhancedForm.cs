// Decompiled with JetBrains decompiler
// Type: Dbasic.EnhancedControls.CEnhancedForm
// Assembly: B4Pruntime, Version=1.0.3056.20520, Culture=neutral, PublicKeyToken=null
// MVID: BED81B59-7EDE-4B04-983E-56C0010CF881
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00007-msil\Trojan-SMS.WinCE.Redoc.b-18cd0a1680457d7a4ff64f016ab2639c9c89d57bf8a7f51328c2d40bef9526f0.exe

using System.Drawing;
using System.Drawing.Imaging;
using System.Windows.Forms;

namespace Dbasic.EnhancedControls
{
  public class CEnhancedForm : Form, IImage, IEnhancedControl
  {
    public Graphics graphics;
    public MainMenu mainMenu1;
    public string name;
    public Bitmap bitmap;
    public Rectangle destRect;
    public bool activeState = false;
    public bool cancelClose = false;
    public bool hideEventAdded = false;
    public Bitmap foreBitmap;
    public Graphics foreGraphics;
    public bool foreLayer = false;
    public ImageAttributes imageAttr = new ImageAttributes();

    public CEnhancedForm()
    {
      this.InitializeComponent();
      ref Rectangle local = ref this.destRect;
      Size clientSize1 = ((Control) this).ClientSize;
      int width1 = clientSize1.Width;
      clientSize1 = ((Control) this).ClientSize;
      int height1 = clientSize1.Height;
      local = new Rectangle(0, 0, width1, height1);
      Size clientSize2 = ((Control) this).ClientSize;
      int width2 = clientSize2.Width;
      clientSize2 = ((Control) this).ClientSize;
      int height2 = clientSize2.Height;
      this.bitmap = new Bitmap(width2, height2);
      this.graphics = Graphics.FromImage((Image) this.bitmap);
    }

    private void InitializeComponent()
    {
      this.mainMenu1 = new MainMenu();
      this.Menu = this.mainMenu1;
    }

    protected override void OnPaint(PaintEventArgs e)
    {
      e.Graphics.DrawImage((Image) this.bitmap, 0, 0);
      if (!this.foreLayer)
        return;
      e.Graphics.DrawImage((Image) this.foreBitmap, this.destRect, 0, 0, this.bitmap.Width, this.bitmap.Height, GraphicsUnit.Pixel, this.imageAttr);
    }

    protected override void OnPaintBackground(PaintEventArgs pevent)
    {
    }

    protected override void Dispose(bool disposing)
    {
      if (this.bitmap != null)
        this.bitmap.Dispose();
      if (this.foreBitmap != null)
        this.foreBitmap.Dispose();
      base.Dispose(disposing);
    }

    public string propName => this.name;

    public Image ReturnImage => (Image) this.bitmap;
  }
}
