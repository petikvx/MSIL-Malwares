// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONData
// Assembly: ObjRefSurroga, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 1D36518F-5F0C-4DDD-80AA-3BF17FC6E8B1
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-87b4a205c27d8ffaecb7e687ace76ed76394ae98d22a2a8be17f532d917c236e.exe

using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONData : JSONNode
  {
    private string m_Data;

    public override string Value
    {
      get
      {
label_1:
        int num1 = 779100696;
        string data;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2126486495)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              data = this.m_Data;
              num1 = (int) num2 * 633207566 ^ 732322134;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return data;
      }
      set => this.m_Data = value;
    }

    public JSONData(string aData)
    {
label_1:
      int num1 = 732390489;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 234729424)) % 4U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * -1789311489 ^ 1790196592;
            continue;
          case 2:
            goto label_1;
          case 3:
            this.m_Data = aData;
            num1 = (int) num2 * 1202256194 ^ 402436342;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public JSONData(float aData) => this.AsFloat = aData;

    public JSONData(double aData)
    {
label_1:
      int num1 = 629346395;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 491102754)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 462149328 ^ -638104936;
            continue;
          case 2:
            this.AsDouble = aData;
            num1 = (int) num2 * -1716969866 ^ -1282897423;
            continue;
          case 3:
            goto label_3;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public JSONData(bool aData) => this.AsBool = aData;

    public JSONData(int aData) => this.AsInt = aData;

    public override string ToString() => JSONData.\u202A⁭⁮‮‎​‪‬‏‍⁪⁪‪‪‍‌⁯⁮‭‫⁮​​⁪‭⁬⁫‍‫‍‫‍‮‮‏‭‎‏‬‌‮("\"", JSONNode.Escape(this.m_Data), "\"");

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 245271915;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 983291571)) % 3U)
        {
          case 1:
            str = JSONData.\u202A⁭⁮‮‎​‪‬‏‍⁪⁪‪‪‍‌⁯⁮‭‫⁮​​⁪‭⁬⁫‍‫‍‫‍‮‮‏‭‎‏‬‌‮("\"", JSONNode.Escape(this.m_Data), "\"");
            num1 = (int) num2 * -80892557 ^ -202844643;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = -1788258536;
      JSONData jsonData;
      bool flag1;
      bool flag2;
      bool flag3;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1802171197)) % 27U)
        {
          case 0:
            num1 = (int) num2 * -545385269 ^ 1027465893;
            continue;
          case 1:
            JSONData.\u202D‌⁮‫⁪​‌⁭⁬⁫⁫‌⁫‌⁫‍‬⁫‬⁮‍‫‪​‍‮⁬⁮​⁭‏⁯‎‌‌‍‬⁪‭‭‮(aWriter, (byte) 5);
            num1 = (int) num2 * -803746759 ^ 2078874018;
            continue;
          case 2:
            num1 = (int) num2 * 320218345 ^ 725036357;
            continue;
          case 3:
            int num3 = !JSONData.\u202E⁫‍‎‭‫‏‮​⁭‌‮⁫‪‬⁯‮⁯⁬⁭⁭‬⁭‌⁬‭‪‪⁯‬‏‌‌‬⁭​⁮‍‎‭‮(jsonData.m_Data, this.m_Data) ? -1958073651 : (num3 = -1953317683);
            num1 = num3 ^ (int) num2 * 1788265172;
            continue;
          case 4:
            JSONData.\u202B⁬⁫‎‏‍‫‎⁬⁬‮‫‎‮‮‭‌‎⁮​⁬‬‪‭⁫‏​‎⁫⁬‌⁮‮⁮⁪⁮‬⁫⁮⁭‮(aWriter, this.m_Data);
            num1 = (int) num2 * -372235682 ^ -606974864;
            continue;
          case 5:
            jsonData.AsFloat = this.AsFloat;
            num1 = -98331935;
            continue;
          case 6:
            int num4 = !flag2 ? 2038588807 : (num4 = 2013897096);
            num1 = num4 ^ (int) num2 * 487523666;
            continue;
          case 7:
            num1 = (int) num2 * 311661515 ^ 1119712101;
            continue;
          case 8:
            JSONData.\u202D‌⁮‫⁪​‌⁭⁬⁫⁫‌⁫‌⁫‍‬⁫‬⁮‍‫‪​‍‮⁬⁮​⁭‏⁯‎‌‌‍‬⁪‭‭‮(aWriter, (byte) 6);
            JSONData.\u200F​⁫⁭⁮⁭⁪‪⁫⁬‭‪‬‫‎‮‬‬‌‮‫⁭‪⁮‏⁬‮​‭‮⁭‎‮⁮⁫‪⁭‌‎‭‮(aWriter, this.AsBool);
            num1 = (int) num2 * -766699191 ^ -2062117301;
            continue;
          case 9:
            int num5 = flag3 ? -879727773 : (num5 = -1996272239);
            num1 = num5 ^ (int) num2 * 1512020071;
            continue;
          case 10:
            flag2 = JSONData.\u202E⁫‍‎‭‫‏‮​⁭‌‮⁫‪‬⁯‮⁯⁬⁭⁭‬⁭‌⁬‭‪‪⁯‬‏‌‌‬⁭​⁮‍‎‭‮(jsonData.m_Data, this.m_Data);
            num1 = (int) num2 * -287349127 ^ 523995813;
            continue;
          case 11:
            num1 = (int) num2 * 1445501671 ^ -1906756893;
            continue;
          case 12:
            num1 = (int) num2 * 480660397 ^ -1989558501;
            continue;
          case 13:
            JSONData.\u202D‌⁮‫⁪​‌⁭⁬⁫⁫‌⁫‌⁫‍‬⁫‬⁮‍‫‪​‍‮⁬⁮​⁭‏⁯‎‌‌‍‬⁪‭‭‮(aWriter, (byte) 7);
            num1 = (int) num2 * 69204388 ^ 476816246;
            continue;
          case 14:
            jsonData.AsBool = this.AsBool;
            num1 = -802145949;
            continue;
          case 15:
            JSONData.\u202D‌⁮‫⁪​‌⁭⁬⁫⁫‌⁫‌⁫‍‬⁫‬⁮‍‫‪​‍‮⁬⁮​⁭‏⁯‎‌‌‍‬⁪‭‭‮(aWriter, (byte) 4);
            JSONData.\u202A‬⁪⁭‌‫⁫‪⁫‎‫⁭⁯⁬‏⁫‬‭‮​⁬⁪⁬‎⁮‬‍‮⁪⁭‬‫⁮⁭‬⁯⁮‫⁬‬‮(aWriter, this.AsInt);
            num1 = (int) num2 * 294636413 ^ 1032268210;
            continue;
          case 16:
            JSONData.\u202A‍‫⁬⁪‫‭‎‌‏⁭⁯‬‪‮‪‮⁪⁭​‪‭⁭​‏‫‏⁫‎​‫‭‍⁬⁭⁬⁭‪​⁮‮(aWriter, this.AsDouble);
            num1 = (int) num2 * -1664608326 ^ -1198735154;
            continue;
          case 17:
            jsonData = new JSONData("");
            jsonData.AsInt = this.AsInt;
            flag3 = JSONData.\u202E⁫‍‎‭‫‏‮​⁭‌‮⁫‪‬⁯‮⁯⁬⁭⁭‬⁭‌⁬‭‪‪⁯‬‏‌‌‬⁭​⁮‍‎‭‮(jsonData.m_Data, this.m_Data);
            num1 = (int) num2 * 275103123 ^ -1422337914;
            continue;
          case 18:
            num1 = (int) num2 * 1720173535 ^ 357952810;
            continue;
          case 19:
            JSONData.\u200E⁬‪​​⁫⁫​⁮‭​⁬‎‮⁪‭‬⁮‌‫‌⁮⁯​⁯‮‍⁬⁫⁪⁮‌‪‬⁪⁭⁭‭‏⁮‮(aWriter, this.AsFloat);
            num1 = (int) num2 * -62534737 ^ -361440046;
            continue;
          case 20:
            goto label_1;
          case 21:
            num1 = (int) num2 * 1169641176 ^ -286533812;
            continue;
          case 22:
            jsonData.AsDouble = this.AsDouble;
            num1 = -1384964441;
            continue;
          case 23:
            flag1 = JSONData.\u202E⁫‍‎‭‫‏‮​⁭‌‮⁫‪‬⁯‮⁯⁬⁭⁭‬⁭‌⁬‭‪‪⁯‬‏‌‌‬⁭​⁮‍‎‭‮(jsonData.m_Data, this.m_Data);
            num1 = (int) num2 * 1178486055 ^ -1138453961;
            continue;
          case 24:
            int num6 = !flag1 ? 2032708983 : (num6 = 2117841613);
            num1 = num6 ^ (int) num2 * -1207094313;
            continue;
          case 25:
            JSONData.\u202D‌⁮‫⁪​‌⁭⁬⁫⁫‌⁫‌⁫‍‬⁫‬⁮‍‫‪​‍‮⁬⁮​⁭‏⁯‎‌‌‍‬⁪‭‭‮(aWriter, (byte) 3);
            num1 = -141930819;
            continue;
          case 26:
            goto label_3;
          default:
            goto label_29;
        }
      }
label_3:
      return;
label_29:;
    }

    static string \u202A⁭⁮‮‎​‪‬‏‍⁪⁪‪‪‍‌⁯⁮‭‫⁮​​⁪‭⁬⁫‍‫‍‫‍‮‮‏‭‎‏‬‌‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2)
    {
      return obj0 + obj1 + obj2;
    }

    static bool \u202E⁫‍‎‭‫‏‮​⁭‌‮⁫‪‬⁯‮⁯⁬⁭⁭‬⁭‌⁬‭‪‪⁯‬‏‌‌‬⁭​⁮‍‎‭‮([In] string obj0, [In] string obj1) => obj0 == obj1;

    static void \u202D‌⁮‫⁪​‌⁭⁬⁫⁫‌⁫‌⁫‍‬⁫‬⁮‍‫‪​‍‮⁬⁮​⁭‏⁯‎‌‌‍‬⁪‭‭‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u202A‬⁪⁭‌‫⁫‪⁫‎‫⁭⁯⁬‏⁫‬‭‮​⁬⁪⁬‎⁮‬‍‮⁪⁭‬‫⁮⁭‬⁯⁮‫⁬‬‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u200E⁬‪​​⁫⁫​⁮‭​⁬‎‮⁪‭‬⁮‌‫‌⁮⁯​⁯‮‍⁬⁫⁪⁮‌‪‬⁪⁭⁭‭‏⁮‮([In] BinaryWriter obj0, [In] float obj1) => obj0.Write(obj1);

    static void \u202A‍‫⁬⁪‫‭‎‌‏⁭⁯‬‪‮‪‮⁪⁭​‪‭⁭​‏‫‏⁫‎​‫‭‍⁬⁭⁬⁭‪​⁮‮([In] BinaryWriter obj0, [In] double obj1) => obj0.Write(obj1);

    static void \u200F​⁫⁭⁮⁭⁪‪⁫⁬‭‪‬‫‎‮‬‬‌‮‫⁭‪⁮‏⁬‮​‭‮⁭‎‮⁮⁫‪⁭‌‎‭‮([In] BinaryWriter obj0, [In] bool obj1) => obj0.Write(obj1);

    static void \u202B⁬⁫‎‏‍‫‎⁬⁬‮‫‎‮‮‭‌‎⁮​⁬‬‪‭⁫‏​‎⁫⁬‌⁮‮⁮⁪⁮‬⁫⁮⁭‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
