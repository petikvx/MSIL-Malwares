// Decompiled with JetBrains decompiler
// Type: WoRmy3.My.MySettings
// Assembly: WoRmy 3.1, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 5B3F2157-9C5E-49FF-827C-36A43C2192D1
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00007-msil\Worm.MSIL.Autorun.bn-c84e33c1883ca2f034c2d20e5c59a5319d95e9525a9ab0a5111aecbd19ba55e7.exe

using \u0019\u0003;
using Microsoft.VisualBasic.ApplicationServices;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Configuration;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Threading;

namespace WoRmy3.My
{
  [EditorBrowsable(EditorBrowsableState.Advanced)]
  [GeneratedCode("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "9.0.0.0")]
  [CompilerGenerated]
  internal sealed class MySettings : ApplicationSettingsBase
  {
    private static MySettings \u0001 = (MySettings) SettingsBase.Synchronized((SettingsBase) new MySettings());
    private static bool \u0002;
    private static object \u0003 = RuntimeHelpers.GetObjectValue(new object());

    [DebuggerNonUserCode]
    public MySettings()
    {
    }

    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [DebuggerNonUserCode]
    private static void \u0016\u0003(object sender, EventArgs e)
    {
      if (!\u001E.Application.SaveMySettingsOnExit)
        return;
      \u0088.Settings.Save();
    }

    public static MySettings Default
    {
      get
      {
        if (!MySettings.\u0002)
        {
          object Expression = MySettings.\u0003;
          ObjectFlowControl.CheckForSyncLockOnValueType(Expression);
          Monitor.Enter(Expression);
          try
          {
            if (!MySettings.\u0002)
            {
              \u001E.Application.Shutdown += (ShutdownEventHandler) ((sender, e) =>
              {
                if (!\u001E.Application.SaveMySettingsOnExit)
                  return;
                \u0088.Settings.Save();
              });
              MySettings.\u0002 = true;
            }
          }
          finally
          {
            Monitor.Exit(Expression);
          }
        }
        return MySettings.\u0001;
      }
    }
  }
}
