// Decompiled with JetBrains decompiler
// Type: mmxAH.ArcEncCard
// Assembly: IAsyncLocalValue, Version=1.0.2.2, Culture=neutral, PublicKeyToken=null
// MVID: 5C4F3FBF-C751-4B18-BBEA-B1DDBC6F76B9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan-Spy.Win32.Noon.bcqk-374874898c5386561d60c3fae0482d1caee783f1096dda6742b1c073175a0a14.exe

using System;

namespace mmxAH
{
  public class ArcEncCard : Card
  {
    private GameEngine en;
    private short loc1 = -1;
    private short loc2 = -1;
    private short loc3 = -1;
    private string Text1;
    private string Text2;
    private string Text3;
    private Effect eff1;
    private Effect eff2;
    private Effect eff3;
    private byte districtNum;

    public ArcEncCard(GameEngine eng, short pID)
    {
      this.en = eng;
      this.ID = pID;
    }

    public void Execute(short locnum)
    {
      this.en.curs.resolvingArch.Add(this);
      if ((int) locnum == (int) this.loc1)
      {
        this.en.io.PrintTag(Environment.NewLine + this.Text1);
        this.eff1.Execute(new Func(this.en.clock.NextPlayer));
      }
      else if ((int) locnum == (int) this.loc2)
      {
        this.en.io.PrintTag(Environment.NewLine + this.Text2);
        this.eff2.Execute(new Func(this.en.clock.NextPlayer));
      }
      else
      {
        if ((int) locnum != (int) this.loc3)
          return;
        this.en.io.PrintTag(Environment.NewLine + this.Text3);
        this.eff3.Execute(new Func(this.en.clock.NextPlayer));
      }
    }

    public void Discard() => this.en.archEncs[(int) this.districtNum].Add(this);

    public bool FromTextFile(
      TextFileParser data,
      TextFileParser text,
      short l1,
      short l2,
      short l3,
      byte dn)
    {
      this.loc1 = l1;
      this.loc2 = l2;
      this.loc3 = l3;
      this.districtNum = dn;
      this.eff1 = Effect.FromTextFile(data, this.en);
      if (this.eff1 == null)
        return false;
      this.eff2 = Effect.FromTextFile(data, this.en);
      if (this.eff2 == null)
        return false;
      this.eff3 = Effect.FromTextFile(data, this.en);
      byte result;
      if (this.eff3 == null || !byte.TryParse(text.GetToken(), out result))
        return false;
      for (int index = 0; index < (int) result; ++index)
        this.Text1 = this.Text1 + text.GetCurString() + Environment.NewLine;
      if (!byte.TryParse(text.GetToken(), out result))
        return false;
      for (int index = 0; index < (int) result; ++index)
        this.Text2 = this.Text2 + text.GetCurString() + Environment.NewLine;
      if (!byte.TryParse(text.GetToken(), out result))
        return false;
      for (int index = 0; index < (int) result; ++index)
        this.Text3 = this.Text3 + text.GetCurString() + Environment.NewLine;
      return true;
    }
  }
}
