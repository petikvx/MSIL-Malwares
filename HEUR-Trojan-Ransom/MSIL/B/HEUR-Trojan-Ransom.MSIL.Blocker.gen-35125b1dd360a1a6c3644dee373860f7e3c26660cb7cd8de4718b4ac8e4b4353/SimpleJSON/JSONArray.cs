// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONArray
// Assembly: DataCollect, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 42D7E59F-0880-4460-A28E-6C718E130DF7
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-35125b1dd360a1a6c3644dee373860f7e3c26660cb7cd8de4718b4ac8e4b4353.exe

using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONArray : JSONNode, IEnumerable
  {
    private List<JSONNode> m_List = new List<JSONNode>();

    public override JSONNode this[int aIndex]
    {
      get
      {
        if (aIndex < 0)
          goto label_7;
label_1:
        int num1 = -484994868;
label_2:
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1698563595)) % 6U)
          {
            case 0:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * -339599912 ^ -618627504;
              continue;
            case 1:
              num1 = (int) num2 * -1392202100 ^ 1996916874;
              continue;
            case 2:
              goto label_1;
            case 4:
              jsonNode = this.m_List[aIndex];
              num1 = -1684187978;
              continue;
            case 5:
              goto label_6;
            default:
              goto label_9;
          }
        }
label_6:
        int num3 = aIndex >= this.m_List.Count ? 1 : 0;
        goto label_8;
label_9:
        return jsonNode;
label_7:
        num3 = 1;
label_8:
        num1 = num3 == 0 ? -1319164371 : (num1 = -496506827);
        goto label_2;
      }
      set
      {
label_1:
        int num1 = 69575278;
        while (true)
        {
          uint num2;
          int num3;
          switch ((num2 = (uint) (num1 ^ 6260778)) % 7U)
          {
            case 0:
              goto label_1;
            case 1:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * 611131194 ^ 609729993;
                continue;
              }
              num3 = 1;
              break;
            case 2:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            case 3:
              this.m_List.Add(value);
              num1 = (int) num2 * 205261140 ^ -1670884095;
              continue;
            case 4:
              this.m_List[aIndex] = value;
              num1 = 54875390;
              continue;
            case 5:
              num1 = (int) num2 * -1829906227 ^ 627786913;
              continue;
            case 6:
              goto label_3;
            default:
              goto label_12;
          }
          int num4;
          num1 = num4 = num3 == 0 ? 773864020 : (num4 = 179008358);
        }
label_3:
        return;
label_12:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 816364634;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 410295203)) % 4U)
          {
            case 1:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * -1570939258 ^ 1873711582;
              continue;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * -356645087 ^ 1565619520;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = -2076250265;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -875791770)) % 4U)
          {
            case 0:
              num1 = (int) num2 * -886241162 ^ 1611985649;
              continue;
            case 1:
              this.m_List.Add(value);
              num1 = (int) num2 * -1118849695 ^ 2141409047;
              continue;
            case 2:
              goto label_1;
            case 3:
              goto label_3;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = 57944881;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1968653704)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              count = this.m_List.Count;
              num1 = (int) num2 * 1558065099 ^ -848354484;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
      this.m_List.Add(aItem);
label_1:
      int num1 = 736286988;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1731364481)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 961246541 ^ -760456245;
            continue;
          case 2:
            goto label_3;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = -291920736;
      JSONNode jsonNode1;
      while (true)
      {
        uint num2;
        bool flag;
        JSONNode jsonNode2;
        int num3;
        switch ((num2 = (uint) (num1 ^ -1723723433)) % 9U)
        {
          case 0:
            num1 = (int) num2 * -484901730 ^ 657125821;
            continue;
          case 1:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num2 * -29195125 ^ 176198406;
            continue;
          case 2:
            int num4 = flag ? 1876261470 : (num4 = 525185916);
            num1 = num4 ^ (int) num2 * -79145584;
            continue;
          case 3:
            goto label_1;
          case 4:
            if (aIndex < 0)
            {
              num3 = 1;
              break;
            }
            num1 = (int) num2 * -346711482 ^ -868762437;
            continue;
          case 5:
            jsonNode2 = this.m_List[aIndex];
            this.m_List.RemoveAt(aIndex);
            num1 = -1906814814;
            continue;
          case 7:
            num3 = aIndex >= this.m_List.Count ? 1 : 0;
            break;
          case 8:
            jsonNode1 = jsonNode2;
            num1 = (int) num2 * -785044436 ^ -1345528611;
            continue;
          default:
            goto label_13;
        }
        flag = num3 != 0;
        num1 = -1492459864;
      }
label_13:
      return jsonNode1;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      this.m_List.Remove(aNode);
label_1:
      int num1 = -1508837712;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1245776689)) % 3U)
        {
          case 1:
            jsonNode = aNode;
            num1 = (int) num2 * 2146431653 ^ 937748337;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONArray.\u003Cget_Childs\u003Ed__13 childs = new JSONArray.\u003Cget_Childs\u003Ed__13(-2);
label_1:
        int num1 = -152556095;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1965047247)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              childs.\u003C\u003E4__this = this;
              num1 = (int) num2 * 169911501 ^ 789961170;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return (IEnumerable<JSONNode>) childs;
      }
    }

    public IEnumerator GetEnumerator()
    {
      bool enumerator1;
      // ISSUE: fault handler
      try
      {
        // ISSUE: reference to a compiler-generated field
        int num1 = this.\u003C\u003E1__state;
label_1:
        int num2 = -1097226519;
        List<JSONNode>.Enumerator enumerator;
        JSONNode N;
        while (true)
        {
          uint num3;
          switch ((num3 = (uint) (num2 ^ -2103626281)) % 20U)
          {
            case 0:
            case 5:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -1;
              num2 = -587013632;
              continue;
            case 1:
              goto label_13;
            case 3:
              num2 = (int) num3 * -1499793766 ^ -1789648549;
              continue;
            case 4:
              int num4;
              num2 = num4 = !enumerator.MoveNext() ? -524063059 : (num4 = -747155408);
              continue;
            case 6:
              int num5;
              num2 = num5 = num1 == 1 ? -796485282 : (num5 = -1770193605);
              continue;
            case 7:
              N = enumerator.Current;
              num2 = -848899562;
              continue;
            case 8:
            case 13:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              N = (JSONNode) null;
              num2 = -769309085;
              continue;
            case 9:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E2__current = (object) N;
              num2 = (int) num3 * 1859897747 ^ 1297743860;
              continue;
            case 10:
              // ISSUE: reference to a compiler-generated method
              this.\u003C\u003Em__Finally1();
              num2 = (int) num3 * 877368256 ^ 1908803922;
              continue;
            case 11:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = (int) num3 * 360975695 ^ -426343454;
              continue;
            case 12:
              goto label_11;
            case 14:
              goto label_1;
            case 15:
              enumerator = new List<JSONNode>.Enumerator();
              enumerator1 = false;
              num2 = (int) num3 * 1076755490 ^ -5424781;
              continue;
            case 16:
              num2 = (int) num3 * -1629125092 ^ 1341258406;
              continue;
            case 17:
              num2 = (int) num3 * -1271663517 ^ 1750516059;
              continue;
            case 18:
              int num6 = num1 != 0 ? 477278472 : (num6 = 1423732155);
              num2 = num6 ^ (int) num3 * -1611532308;
              continue;
            case 19:
              enumerator = this.m_List.GetEnumerator();
              num2 = (int) num3 * 152939101 ^ 1458861795;
              continue;
            default:
              goto label_20;
          }
        }
label_11:
        // ISSUE: reference to a compiler-generated field
        this.\u003C\u003E1__state = 1;
        enumerator1 = true;
        goto label_20;
label_13:
        enumerator1 = false;
      }
      __fault
      {
        // ISSUE: reference to a compiler-generated method
        this.System\u002EIDisposable\u002EDispose();
      }
label_20:
      return enumerator1;
    }

    public override string ToString()
    {
      string str = "[ ";
label_1:
      int num1 = -1223760399;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -127475711)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -684254834 ^ -1048582830;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_14:
        int num3 = enumerator.MoveNext() ? -1871704324 : (num3 = -1404645781);
        bool flag;
        JSONNode current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -127475711)) % 9U)
          {
            case 0:
              str = JSONArray.\u206A‫⁫‮​⁫⁯‌‬‭‫‬‫‫‎⁮‮⁯​‌⁯‏‎‏​‌​‏⁫‏⁭⁭‌‭⁭‫‮⁪⁬‮(str, JSONArray.\u206D‮‭⁫⁬‬⁫⁪⁭⁮⁯⁭‬⁭⁪‌‪⁬‬​⁮‎‍‍‬‮‍‬‌⁫‍⁫‮‌​‍‍‮‭‏‮((object) current));
              num3 = -1004696996;
              continue;
            case 1:
              str = JSONArray.\u206A‫⁫‮​⁫⁯‌‬‭‫‬‫‫‎⁮‮⁯​‌⁯‏‎‏​‌​‏⁫‏⁭⁭‌‭⁭‫‮⁪⁬‮(str, ", ");
              num3 = (int) num4 * 1864345137 ^ -1725496946;
              continue;
            case 2:
              flag = JSONArray.\u202A⁭⁫‎⁪‍​⁯⁭⁯​⁪⁬‬⁫⁫‌​‎⁪‫‏‫‮‌⁫‮‬⁭⁪⁯‫⁯‍⁯⁫‍‫‫‭‮(str) > 2;
              num3 = (int) num4 * -1319723241 ^ -641961684;
              continue;
            case 3:
              num3 = -1871704324;
              continue;
            case 5:
              current = enumerator.Current;
              num3 = -1459105090;
              continue;
            case 6:
              int num5 = !flag ? -896065802 : (num5 = -1482961991);
              num3 = num5 ^ (int) num4 * 1088589941;
              continue;
            case 7:
              goto label_14;
            case 8:
              num3 = (int) num4 * 1464416018 ^ 743405264;
              continue;
            default:
              goto label_16;
          }
        }
      }
label_16:
      return JSONArray.\u206A‫⁫‮​⁫⁯‌‬‭‫‬‫‫‎⁮‮⁯​‌⁯‏‎‏​‌​‏⁫‏⁭⁭‌‭⁭‫‮⁪⁬‮(str, " ]");
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 120604562;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 262078048)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            str1 = "[ ";
            num1 = (int) num2 * 310437577 ^ -1803476423;
            continue;
          case 3:
            num1 = (int) num2 * 1875053821 ^ -1386711898;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_13:
        int num3 = enumerator.MoveNext() ? 799435000 : (num3 = 961546278);
        JSONNode current;
        bool flag;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 262078048)) % 9U)
          {
            case 0:
              int num5 = !flag ? -697745753 : (num5 = -1345647291);
              num3 = num5 ^ (int) num4 * -755789472;
              continue;
            case 1:
              str1 = JSONArray.\u206A‫⁫‮​⁫⁯‌‬‭‫‬‫‫‎⁮‮⁯​‌⁯‏‎‏​‌​‏⁫‏⁭⁭‌‭⁭‫‮⁪⁬‮(str1, current.ToString(JSONArray.\u206A‫⁫‮​⁫⁯‌‬‭‫‬‫‫‎⁮‮⁯​‌⁯‏‎‏​‌​‏⁫‏⁭⁭‌‭⁭‫‮⁪⁬‮(aPrefix, "   ")));
              num3 = (int) num4 * 472382888 ^ -164799728;
              continue;
            case 2:
              str1 = JSONArray.\u206D⁮‎‬⁭‫‏‏⁫⁯⁭‮⁭‎‫⁭‌‪⁯⁬⁮⁫‮‪⁮⁫‍‍⁪‪‪⁪‬‬​⁬⁪‌⁪‪‮(str1, "\n", aPrefix, "   ");
              num3 = 1939158219;
              continue;
            case 4:
              goto label_13;
            case 5:
              str1 = JSONArray.\u206A‫⁫‮​⁫⁯‌‬‭‫‬‫‫‎⁮‮⁯​‌⁯‏‎‏​‌​‏⁫‏⁭⁭‌‭⁭‫‮⁪⁬‮(str1, ", ");
              num3 = (int) num4 * 1196200845 ^ -2047156026;
              continue;
            case 6:
              current = enumerator.Current;
              flag = JSONArray.\u202A⁭⁫‎⁪‍​⁯⁭⁯​⁪⁬‬⁫⁫‌​‎⁪‫‏‫‮‌⁫‮‬⁭⁪⁯‫⁯‍⁯⁫‍‫‫‭‮(str1) > 3;
              num3 = 1178545841;
              continue;
            case 7:
              num3 = 799435000;
              continue;
            case 8:
              num3 = (int) num4 * 611795433 ^ 1294932375;
              continue;
            default:
              goto label_17;
          }
        }
      }
label_17:
      string str2 = JSONArray.\u206D⁮‎‬⁭‫‏‏⁫⁯⁭‮⁭‎‫⁭‌‪⁯⁬⁮⁫‮‪⁮⁫‍‍⁪‪‪⁪‬‬​⁬⁪‌⁪‪‮(str1, "\n", aPrefix, "]");
label_18:
      int num6 = 1589732165;
      string str3;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ 262078048)) % 4U)
        {
          case 0:
            goto label_18;
          case 1:
            str3 = str2;
            num6 = (int) num7 * -930026633 ^ -135048944;
            continue;
          case 3:
            num6 = (int) num7 * 169735269 ^ 263498221;
            continue;
          default:
            goto label_22;
        }
      }
label_22:
      return str3;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = 1770432071;
      int index;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 900994747)) % 11U)
        {
          case 0:
            flag = index < this.m_List.Count;
            num1 = 813638239;
            continue;
          case 1:
            JSONArray.\u206D⁬⁭⁫​‌‮⁯‏‭‎​‫​‍⁬‮⁭⁯‪⁪⁭‌‭⁮‎⁭‪‬‎⁭⁬⁮‫⁪‮⁭‎⁭‮(aWriter, this.m_List.Count);
            num1 = (int) num2 * 1344415356 ^ 1366773102;
            continue;
          case 2:
            this.m_List[index].Serialize(aWriter);
            num1 = (int) num2 * 564452120 ^ -592691880;
            continue;
          case 3:
            int num3 = flag ? 880564698 : (num3 = 98861141);
            num1 = num3 ^ (int) num2 * 1034082259;
            continue;
          case 4:
            ++index;
            num1 = (int) num2 * 1153171200 ^ -1533134437;
            continue;
          case 5:
            goto label_3;
          case 6:
            num1 = 525782935;
            continue;
          case 7:
            JSONArray.\u200D⁯​⁬‏⁪​‭‭⁬⁪‏⁯‫⁯⁬⁯‎‍‍‎‌‏⁮‪‮‫⁮‪‬⁯‬⁬⁬‍⁭​‮‮‍‮(aWriter, (byte) 1);
            num1 = (int) num2 * 1771869424 ^ -679506377;
            continue;
          case 8:
            goto label_1;
          case 9:
            num1 = (int) num2 * 1696909314 ^ 1738303507;
            continue;
          case 10:
            index = 0;
            num1 = (int) num2 * -1170369995 ^ 1796366582;
            continue;
          default:
            goto label_13;
        }
      }
label_3:
      return;
label_13:;
    }

    public JSONArray()
    {
label_1:
      int num1 = -1897829418;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1146872225)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * 86381700 ^ -179149342;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static int \u202A⁭⁫‎⁪‍​⁯⁭⁯​⁪⁬‬⁫⁫‌​‎⁪‫‏‫‮‌⁫‮‬⁭⁪⁯‫⁯‍⁯⁫‍‫‫‭‮([In] string obj0) => obj0.Length;

    static string \u206A‫⁫‮​⁫⁯‌‬‭‫‬‫‫‎⁮‮⁯​‌⁯‏‎‏​‌​‏⁫‏⁭⁭‌‭⁭‫‮⁪⁬‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u206D‮‭⁫⁬‬⁫⁪⁭⁮⁯⁭‬⁭⁪‌‪⁬‬​⁮‎‍‍‬‮‍‬‌⁫‍⁫‮‌​‍‍‮‭‏‮([In] object obj0) => obj0.ToString();

    static string \u206D⁮‎‬⁭‫‏‏⁫⁯⁭‮⁭‎‫⁭‌‪⁯⁬⁮⁫‮‪⁮⁫‍‍⁪‪‪⁪‬‬​⁬⁪‌⁪‪‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u200D⁯​⁬‏⁪​‭‭⁬⁪‏⁯‫⁯⁬⁯‎‍‍‎‌‏⁮‪‮‫⁮‪‬⁯‬⁬⁬‍⁭​‮‮‍‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u206D⁬⁭⁫​‌‮⁯‏‭‎​‫​‍⁬‮⁭⁯‪⁪⁭‌‭⁮‎⁭‪‬‎⁭⁬⁮‫⁪‮⁭‎⁭‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);
  }
}
