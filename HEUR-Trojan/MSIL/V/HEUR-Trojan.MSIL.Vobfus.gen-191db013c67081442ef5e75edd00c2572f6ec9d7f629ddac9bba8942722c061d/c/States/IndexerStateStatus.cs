// Decompiled with JetBrains decompiler
// Type: c.States.IndexerStateStatus
// Assembly: c, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: CCB3E154-F36D-403E-8019-8861E9AEB8FC
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Vobfus.gen-191db013c67081442ef5e75edd00c2572f6ec9d7f629ddac9bba8942722c061d.exe

using GLuaR.Importers;
using GLuaR.Properties;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace c.States
{
  public class IndexerStateStatus : Form
  {
    private IContainer m_Field;
    private Label m_Wrapper;
    private TextBox mapper;
    private Button m_Rule;
    private Button m_Definition;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public IndexerStateStatus(Exception param)
    {
      int num1 = 4;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
              goto label_5;
            case 1:
            case 3:
              goto label_7;
            case 2:
            case 5:
              goto label_1;
            case 4:
              goto label_6;
            case 6:
              goto label_8;
            default:
              if (IndexerStateStatus.VisitManager())
              {
                num2 = 1;
                continue;
              }
              goto label_5;
          }
        }
label_1:
        this.VerifyFactory();
        this.mapper.Text = "Type: " + param.GetType().Name + "\r\nMessage: " + param.Message + "\r\nSource: " + param.Source + "\r\nException Stack Trace:\r\n" + param.StackTrace;
        // ISSUE: reference to a compiler-generated method
        this.m_Definition.Image = (Image) Resources.AssetField();
        goto label_7;
label_5:
        this.m_Field = (IContainer) null;
        // ISSUE: explicit constructor call
        base.\u002Ector();
        num1 = 5;
        continue;
label_6:
        ImporterMapper.InitAccount();
        num1 = 0;
        continue;
label_7:
        ((Bitmap) this.m_Definition.Image).MakeTransparent(Color.Magenta);
        num1 = 6;
      }
label_8:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void ReadFactory(object i, EventArgs cfg) => this.Close();

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void ComputeFactory(object last, EventArgs selection)
    {
      try
      {
        Process.Start("http://glua.net/bugtrack/index.php?do=index&project=3");
      }
      catch
      {
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    protected override void Dispose(bool islast)
    {
      int num1 = 3;
      while (true)
      {
        int num2;
        switch (num1)
        {
          case 0:
          case 1:
            num2 = this.m_Field != null ? 1 : 0;
            goto label_8;
          case 2:
          case 4:
label_4:
            break;
          case 3:
            if (islast)
            {
              int num3 = 0;
              num1 = IndexerStateStatus.TestManager() ? num3 : num3;
              continue;
            }
            num2 = 0;
            goto label_8;
          case 5:
            goto label_3;
          default:
            num1 = 4;
            continue;
        }
label_5:
        base.Dispose(islast);
        num1 = 5;
        continue;
label_8:
        if (num2 != 0)
        {
          this.m_Field.Dispose();
          goto label_4;
        }
        else
          goto label_5;
      }
label_3:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void VerifyFactory()
    {
      int num1 = 12;
      while (true)
      {
        int num2 = num1;
        ComponentResourceManager componentResourceManager;
        while (true)
        {
          switch (num2)
          {
            case 0:
              goto label_4;
            case 1:
              this.Controls.Add((Control) this.m_Definition);
              this.Controls.Add((Control) this.m_Rule);
              num2 = 10;
              continue;
            case 2:
              goto label_16;
            case 3:
              this.m_Definition.TabIndex = 3;
              this.m_Definition.Text = "Report This Bug!";
              this.m_Definition.TextImageRelation = TextImageRelation.ImageBeforeText;
              this.m_Definition.UseVisualStyleBackColor = true;
              this.m_Definition.Click += new EventHandler(this.ComputeFactory);
              this.AutoScaleDimensions = new SizeF(6f, 13f);
              if (true)
              {
                num2 = 14;
                continue;
              }
              goto case 11;
            case 4:
              this.SuspendLayout();
              this.m_Wrapper.Font = new Font("Tahoma", 8.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
              this.m_Wrapper.Location = new Point(12, 13);
              this.m_Wrapper.Name = "label1";
              this.m_Wrapper.Size = new Size(538, 122);
              this.m_Wrapper.TabIndex = 0;
              this.m_Wrapper.Text = componentResourceManager.GetString("label1.Text");
              int num3 = 0;
              num2 = IndexerStateStatus.TestManager() ? num3 : num3;
              continue;
            case 5:
              this.m_Rule.UseVisualStyleBackColor = true;
              this.m_Rule.Click += new EventHandler(this.ReadFactory);
              this.m_Definition.Font = new Font("Tahoma", 8.25f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
              this.m_Definition.Location = new Point(12, 311);
              if (IndexerStateStatus.VisitManager())
              {
                num2 = 6;
                continue;
              }
              goto label_6;
            case 6:
            case 9:
              goto label_17;
            case 7:
            case 8:
              this.m_Rule.Size = new Size(75, 23);
              this.m_Rule.TabIndex = 2;
              this.m_Rule.Text = "Close";
              goto case 5;
            case 10:
              goto label_6;
            case 11:
              this.m_Definition = new Button();
              if (IndexerStateStatus.VisitManager())
              {
                num2 = 4;
                continue;
              }
              goto label_15;
            case 12:
              componentResourceManager = new ComponentResourceManager(typeof (IndexerStateStatus));
              num2 = 16;
              continue;
            case 13:
              goto label_11;
            case 14:
              goto label_15;
            case 15:
              goto label_12;
            case 16:
              goto label_3;
            case 17:
              goto label_2;
            default:
              goto label_10;
          }
        }
label_3:
        this.m_Wrapper = new Label();
        this.mapper = new TextBox();
        num1 = 13;
        continue;
label_4:
        this.m_Wrapper.TextAlign = ContentAlignment.MiddleCenter;
        num1 = 2;
        continue;
label_6:
        this.Controls.Add((Control) this.mapper);
        num1 = 15;
        continue;
label_10:
        num1 = 5;
        continue;
label_11:
        this.m_Rule = new Button();
        num1 = 11;
        continue;
label_12:
        this.Controls.Add((Control) this.m_Wrapper);
        this.FormBorderStyle = FormBorderStyle.FixedSingle;
        this.Icon = (Icon) componentResourceManager.GetObject("$this.Icon");
        this.MaximizeBox = false;
        this.MinimizeBox = false;
        this.Name = "ErrorDialog";
        this.StartPosition = FormStartPosition.CenterParent;
        this.Text = "Exception!";
        this.ResumeLayout(false);
        this.PerformLayout();
        num1 = 17;
        continue;
label_15:
        this.AutoScaleMode = AutoScaleMode.Font;
        this.ClientSize = new Size(562, 346);
        num1 = 1;
        continue;
label_16:
        this.mapper.BackColor = SystemColors.Control;
        this.mapper.BorderStyle = BorderStyle.FixedSingle;
        this.mapper.Font = new Font("Tahoma", 8.25f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
        this.mapper.Location = new Point(12, 138);
        this.mapper.Multiline = true;
        this.mapper.Name = "textBox1";
        this.mapper.ReadOnly = true;
        this.mapper.ScrollBars = ScrollBars.Both;
        this.mapper.Size = new Size(538, 167);
        this.mapper.TabIndex = 1;
        this.mapper.WordWrap = false;
        this.m_Rule.Font = new Font("Tahoma", 8.25f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
        this.m_Rule.Location = new Point(475, 311);
        this.m_Rule.Name = "button1";
        num1 = 8;
        continue;
label_17:
        this.m_Definition.Name = "button2";
        this.m_Definition.Size = new Size(112, 23);
        num1 = 3;
      }
label_2:;
    }

    internal static bool VisitManager() => true;

    internal static bool TestManager() => false;
  }
}
