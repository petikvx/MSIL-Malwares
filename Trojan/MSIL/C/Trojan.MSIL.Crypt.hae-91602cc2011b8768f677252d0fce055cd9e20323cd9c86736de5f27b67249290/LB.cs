// Decompiled with JetBrains decompiler
// Type: A.LB
// Assembly: N0$Crypter, Version=3.0.7.1, Culture=neutral, PublicKeyToken=null
// MVID: FD276B3A-BCAA-4176-AE7A-13B114112E73
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan.MSIL.Crypt.hae-91602cc2011b8768f677252d0fce055cd9e20323cd9c86736de5f27b67249290.exe

using System;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace A
{
  internal sealed class LB : CB
  {
    private Orientation A;
    private Pen A;
    private Pen B;

    public LB()
    {
      this.E(14);
      this.D(EC.A(14303), (byte) 70, (byte) 70, (byte) 70);
      this.D(EC.A(14314), (byte) 130, (byte) 130, (byte) 130);
    }

    [SpecialName]
    public Orientation D() => this.A;

    [SpecialName]
    public void D(Orientation _param1)
    {
      this.A = _param1;
      if (_param1 == Orientation.Vertical)
      {
label_1:
        switch (2)
        {
          case 0:
            goto label_1;
          default:
            if (false)
            {
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (LB.D);
            }
            this.E(0);
            this.D(14);
            break;
        }
      }
      else
      {
        this.E(14);
        this.D(0);
      }
      FX.A((object) this);
    }

    protected override void A()
    {
      this.A = this.D(EC.A(14303));
      this.B = this.D(EC.A(14314));
    }

    protected override void B()
    {
      LBB.A((object) base.A, GBB.A((object) this));
      if (this.A == Orientation.Vertical)
      {
label_1:
        switch (4)
        {
          case 0:
            goto label_1;
          default:
            if (false)
            {
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (LB.B);
            }
            NBB.A((object) base.A, this.A, 6, 0, 6, CX.A((object) this));
            NBB.A((object) base.A, this.B, 7, 0, 7, CX.A((object) this));
            break;
        }
      }
      else
      {
        NBB.A((object) base.A, this.A, 0, 6, DX.A((object) this), 6);
        NBB.A((object) base.A, this.B, 0, 7, DX.A((object) this), 7);
      }
    }
  }
}
