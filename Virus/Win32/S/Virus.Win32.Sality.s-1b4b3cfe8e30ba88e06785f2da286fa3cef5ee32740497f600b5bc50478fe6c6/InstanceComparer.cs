// Decompiled with JetBrains decompiler
// Type: WatsonDialog.InstanceComparer
// Assembly: SQLWTSN, Version=9.0.242.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91
// MVID: B7E612C0-B21E-4017-B4A7-EBA59D4A8946
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00009-msil\Virus.Win32.Sality.s-1b4b3cfe8e30ba88e06785f2da286fa3cef5ee32740497f600b5bc50478fe6c6.exe

using System.Collections;
using System.Collections.Generic;

namespace WatsonDialog
{
  internal class InstanceComparer : IComparer<Instance>
  {
    private IComparer m_comparer;
    private bool m_descending = true;
    private int m_column;

    internal InstanceComparer(IComparer comp) => this.m_comparer = comp;

    internal bool Descending
    {
      set => this.m_descending = value;
    }

    internal int Column
    {
      set => this.m_column = value;
    }

    private static bool ValidateData(Instance a) => a != null;

    private static int GetOtherColumn(int col)
    {
      switch (col)
      {
        case 0:
          return 1;
        case 1:
          return 0;
        default:
          return col;
      }
    }

    private int CompareField(Instance a, Instance b, int col)
    {
      if (!InstanceComparer.ValidateData(a) || !InstanceComparer.ValidateData(b))
        return 0;
      switch (col)
      {
        case 0:
          return this.m_comparer.Compare((object) a.instanceName, (object) b.instanceName);
        case 1:
          return this.m_comparer.Compare((object) a.instanceType, (object) b.instanceType);
        default:
          return 0;
      }
    }

    public int Compare(Instance instA, Instance instB)
    {
      if (object.ReferenceEquals((object) instA, (object) instB))
        return 0;
      if (instA.IsAgnostic && instB.IsAgnostic)
        return !instA.isWow ? -1 : 1;
      if (instA.IsAgnostic || instB.IsAgnostic)
        return !instA.IsAgnostic ? 1 : -1;
      int num = this.CompareField(instA, instB, this.m_column);
      if (num == 0)
        num = this.CompareField(instA, instB, InstanceComparer.GetOtherColumn(this.m_column));
      return (this.m_descending ? 1 : -1) * num;
    }

    public bool Equals(Instance instA, Instance instB) => this.Compare(instA, instB) == 0;

    public int GetHashCode(Instance a)
    {
      InstanceComparer.ValidateData(a);
      return a.GetHashCode();
    }
  }
}
