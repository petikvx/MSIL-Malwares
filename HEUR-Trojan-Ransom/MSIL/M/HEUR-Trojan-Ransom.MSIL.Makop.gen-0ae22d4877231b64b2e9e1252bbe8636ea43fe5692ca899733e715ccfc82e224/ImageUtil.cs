// Decompiled with JetBrains decompiler
// Type: ImageUtil
// Assembly: ةE, Version=2.159.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 5B83DFD6-FCF7-4EFA-B68A-746E3BD488E0
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.01-msil\HEUR-Trojan-Ransom.MSIL.Makop.gen-0ae22d4877231b64b2e9e1252bbe8636ea43fe5692ca899733e715ccfc82e224.exe

using System;
using System.Drawing;
using System.Drawing.Imaging;
using System.Runtime.InteropServices;

public static class ImageUtil
{
  private const int bytesPerPixel = 4;

  public static Image Opacity(Image originalImage, double opacity)
  {
    if ((ImageUtil.\u202C‎​⁯⁯‌‍⁬​‌⁯‭⁪‫‭⁫‬‭‫⁮‍‮‍‍‍⁮​⁬‮⁮‌‎⁬‬⁬⁭⁮⁫‏⁫‮(originalImage) & PixelFormat.Indexed) != PixelFormat.Indexed)
      goto label_12;
label_1:
    int num1 = -392990901;
label_2:
    bool flag1;
    int num2;
    Bitmap bitmap;
    int length;
    PixelFormat pixelFormat;
    Rectangle rectangle;
    BitmapData bitmapData;
    IntPtr num3;
    byte[] numArray;
    bool flag2;
    Image image;
    while (true)
    {
      uint num4;
      switch ((num4 = (uint) (num1 ^ -1685024132)) % 26U)
      {
        case 0:
          bitmapData = ImageUtil.\u202C‌⁬‌‪‌⁭‮​​‏‌​⁭⁮‬⁬‬‍‫‎⁪⁬⁪⁯‮‮‬‌⁯‍‎⁭​​‌‪‍​‮‮(bitmap, rectangle, ImageLockMode.ReadWrite, pixelFormat);
          num1 = (int) num4 * -1805331310 ^ -904676626;
          continue;
        case 1:
          ImageUtil.\u200E‏‮⁭⁪‫‬‎‫‎‮‍⁪⁭‬⁭‎⁪‏⁮⁭‌‍‮⁭‌‏⁬‌⁭⁭⁮‌‌‌⁪‌⁪‌⁬‮(numArray, 0, num3, length);
          num1 = (int) num4 * 2117989908 ^ 1761992314;
          continue;
        case 2:
          num1 = (int) num4 * 877149170 ^ -1803064628;
          continue;
        case 3:
          image = (Image) bitmap;
          num1 = (int) num4 * -876791196 ^ 548859859;
          continue;
        case 4:
          pixelFormat = PixelFormat.Format32bppArgb;
          num1 = (int) num4 * -2009381171 ^ 1606725808;
          continue;
        case 5:
          length = ImageUtil.\u206D‭⁯‍⁮‎⁬​‎​‮⁪⁪‌​‪⁪‫‎‫⁯‪​​⁫‪⁭⁯‫⁯⁬​⁯‮⁭‏⁬⁮‍‪‮((Image) bitmap) * ImageUtil.\u206F‮‍‎‍‏‬​‎‏‎‮⁭‭‪‎‫⁬‏⁯‫‎⁬⁭‬‭⁪‌‬⁬‎‭‭‍​​​⁯⁮‮((Image) bitmap) * 4;
          num1 = (int) num4 * -1954155400 ^ -2001452291;
          continue;
        case 6:
          flag1 = num2 < numArray.Length;
          num1 = -1780024441;
          continue;
        case 7:
          flag2 = numArray[num2 + 4 - 1] == (byte) 0;
          num1 = -1613309120;
          continue;
        case 8:
          int num5 = flag2 ? -1076335632 : (num5 = -2079211886);
          num1 = num5 ^ (int) num4 * -354305599;
          continue;
        case 9:
          numArray = new byte[length];
          num1 = (int) num4 * -2024956011 ^ 766461083;
          continue;
        case 10:
          ImageUtil.\u202A⁭⁭‮⁮⁫⁪‪‪‫​‍‌⁬⁯⁬‍⁭‌​⁯‮⁮‎⁮​‭​‮⁯⁭‭‪‮‌‫‭⁬⁬‭‮(num3, numArray, 0, length);
          num1 = (int) num4 * -1952910096 ^ 1678892732;
          continue;
        case 11:
          goto label_12;
        case 12:
          int num6 = 0 + 1 + 1 + 1;
          numArray[num2 + num6] = (byte) ((double) numArray[num2 + num6] * opacity);
          num1 = -1481641238;
          continue;
        case 14:
          ImageUtil.\u200E⁪‭‍‪⁫‍‬⁯⁮‎⁮‍‮⁭⁪⁬⁪‌‫⁫‎‏‌‏‎⁫‬‎⁫‌‌‏​‭‭‬‮⁯⁮‮(bitmap, bitmapData);
          num1 = (int) num4 * 2102472085 ^ -768387993;
          continue;
        case 15:
          image = originalImage;
          num1 = (int) num4 * -545747440 ^ -2129597593;
          continue;
        case 16:
          num3 = ImageUtil.\u200B‭‏⁬‎‮⁮⁮‮⁪⁬⁭⁬⁯‬‎‌‮‪⁭‭‫⁭‍⁮⁬⁮‌⁮‏⁮⁬‏‬‬⁮⁮⁬‎‏‮(bitmapData);
          num1 = (int) num4 * -407784729 ^ -968597447;
          continue;
        case 17:
          int num7 = flag1 ? -341451348 : (num7 = -166278276);
          num1 = num7 ^ (int) num4 * 399313373;
          continue;
        case 18:
          rectangle = new Rectangle(0, 0, ImageUtil.\u206D‭⁯‍⁮‎⁬​‎​‮⁪⁪‌​‪⁪‫‎‫⁯‪​​⁫‪⁭⁯‫⁯⁬​⁯‮⁭‏⁬⁮‍‪‮((Image) bitmap), ImageUtil.\u206F‮‍‎‍‏‬​‎‏‎‮⁭‭‪‎‫⁬‏⁯‫‎⁬⁭‬‭⁪‌‬⁬‎‭‭‍​​​⁯⁮‮((Image) bitmap));
          num1 = (int) num4 * -1889870965 ^ -1180508006;
          continue;
        case 19:
          num1 = (int) num4 * 480559176 ^ 1879009520;
          continue;
        case 20:
          num1 = (int) num4 * 193692649 ^ 1713284656;
          continue;
        case 21:
          num2 = 0;
          num1 = (int) num4 * -2063788326 ^ 586384569;
          continue;
        case 22:
          num1 = (int) num4 * -1732535597 ^ -301324563;
          continue;
        case 23:
          goto label_1;
        case 24:
          num2 += 4;
          num1 = -1882816696;
          continue;
        case 25:
          num1 = (int) num4 * -1329647291 ^ -1372545644;
          continue;
        default:
          goto label_27;
      }
    }
label_27:
    return image;
label_12:
    bitmap = (Bitmap) ImageUtil.\u202B⁬‌‮⁮⁭⁮⁭⁫⁯⁬‌⁯​⁪⁯‌‫‬‮‪⁪‬⁪⁮‪⁪‬​‫‏‭⁫⁫⁭⁫‪‍​‮‮(originalImage);
    num1 = -1324607520;
    goto label_2;
  }

  static PixelFormat \u202C‎​⁯⁯‌‍⁬​‌⁯‭⁪‫‭⁫‬‭‫⁮‍‮‍‍‍⁮​⁬‮⁮‌‎⁬‬⁬⁭⁮⁫‏⁫‮([In] Image obj0) => obj0.PixelFormat;

  static object \u202B⁬‌‮⁮⁭⁮⁭⁫⁯⁬‌⁯​⁪⁯‌‫‬‮‪⁪‬⁪⁮‪⁪‬​‫‏‭⁫⁫⁭⁫‪‍​‮‮([In] Image obj0) => obj0.Clone();

  static int \u206D‭⁯‍⁮‎⁬​‎​‮⁪⁪‌​‪⁪‫‎‫⁯‪​​⁫‪⁭⁯‫⁯⁬​⁯‮⁭‏⁬⁮‍‪‮([In] Image obj0) => obj0.Width;

  static int \u206F‮‍‎‍‏‬​‎‏‎‮⁭‭‪‎‫⁬‏⁯‫‎⁬⁭‬‭⁪‌‬⁬‎‭‭‍​​​⁯⁮‮([In] Image obj0) => obj0.Height;

  static BitmapData \u202C‌⁬‌‪‌⁭‮​​‏‌​⁭⁮‬⁬‬‍‫‎⁪⁬⁪⁯‮‮‬‌⁯‍‎⁭​​‌‪‍​‮‮(
    [In] Bitmap obj0,
    [In] Rectangle obj1,
    [In] ImageLockMode obj2,
    [In] PixelFormat obj3)
  {
    return obj0.LockBits(obj1, obj2, obj3);
  }

  static IntPtr \u200B‭‏⁬‎‮⁮⁮‮⁪⁬⁭⁬⁯‬‎‌‮‪⁭‭‫⁭‍⁮⁬⁮‌⁮‏⁮⁬‏‬‬⁮⁮⁬‎‏‮([In] BitmapData obj0) => obj0.Scan0;

  static void \u202A⁭⁭‮⁮⁫⁪‪‪‫​‍‌⁬⁯⁬‍⁭‌​⁯‮⁮‎⁮​‭​‮⁯⁭‭‪‮‌‫‭⁬⁬‭‮(
    [In] IntPtr obj0,
    [In] byte[] obj1,
    [In] int obj2,
    [In] int obj3)
  {
    Marshal.Copy(obj0, obj1, obj2, obj3);
  }

  static void \u200E‏‮⁭⁪‫‬‎‫‎‮‍⁪⁭‬⁭‎⁪‏⁮⁭‌‍‮⁭‌‏⁬‌⁭⁭⁮‌‌‌⁪‌⁪‌⁬‮(
    [In] byte[] obj0,
    [In] int obj1,
    [In] IntPtr obj2,
    [In] int obj3)
  {
    Marshal.Copy(obj0, obj1, obj2, obj3);
  }

  static void \u200E⁪‭‍‪⁫‍‬⁯⁮‎⁮‍‮⁭⁪⁬⁪‌‫⁫‎‏‌‏‎⁫‬‎⁫‌‌‏​‭‭‬‮⁯⁮‮([In] Bitmap obj0, [In] BitmapData obj1) => obj0.UnlockBits(obj1);
}
