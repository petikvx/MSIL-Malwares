// Decompiled with JetBrains decompiler
// Type: .
// Assembly: 1m, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 9A9758D8-D673-4760-AFDD-69A3D20C59FF
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00100-msil\Trojan-Ransom.Win32.Blocker.krdt-d2cd288694c5883ae6364f17a60ae3fe9619748d94946bbd3e1ff8ba566b1e0f.exe

using \u0001;
using \u0007;
using \u000E;
using \u0010;
using System;
using System.Runtime.CompilerServices;

namespace \u0010
{
  internal class \u0002
  {
    private byte[] \u0001;
    private int \u0001;
    private int \u0001;
    private uint \u0001;
    private int \u0002;
    [NonSerialized]
    internal static \u0013 \u0094;

    public int \u0001(int _param1)
    {
      if (this.\u0002 < _param1)
      {
        if (this.\u0001 == this.\u0001)
          return -1;
        this.\u0001 |= (uint) (((int) this.\u0001[this.\u0001++] & (int) byte.MaxValue | ((int) this.\u0001[this.\u0001++] & (int) byte.MaxValue) << 8) << this.\u0002);
        this.\u0002 += 16;
      }
      return (int) ((long) this.\u0001 & (long) ((1 << _param1) - 1));
    }

    public void \u0001(int _param1)
    {
      this.\u0001 >>= _param1;
      this.\u0002 -= _param1;
    }

    public int \u0002(int _param1)
    {
      int num = this.\u0001(_param1);
      if (num >= 0)
        this.\u0001(_param1);
      return num;
    }

    [SpecialName]
    public int \u0001() => this.\u0002;

    [SpecialName]
    public int \u0001() => this.\u0001 - this.\u0001 + (this.\u0002 >> 3);

    public void \u0002()
    {
      this.\u0001 >>= this.\u0002 & 7;
      this.\u0002 &= -8;
    }

    [SpecialName]
    public bool \u0003() => this.\u0001 == this.\u0001;

    public int \u0001(byte[] _param1, int _param2, int _param3)
    {
      if (_param3 < 0)
        throw new ArgumentOutOfRangeException(\u0004.\u0001(709993243, 749106464, 497155300));
      if ((this.\u0002 & 7) != 0)
        throw new InvalidOperationException(\u0004.\u0001(2060386966, 749106452, 497155278));
      int num1 = 0;
      while (this.\u0002 > 0 && _param3 > 0)
      {
        _param1[_param2++] = (byte) this.\u0001;
        this.\u0001 >>= 8;
        this.\u0002 -= 8;
        --_param3;
        ++num1;
      }
      if (_param3 == 0)
        return num1;
      int num2 = this.\u0001 - this.\u0001;
      if (_param3 > num2)
        _param3 = num2;
      Array.Copy((Array) this.\u0001, this.\u0001, (Array) _param1, _param2, _param3);
      this.\u0001 += _param3;
      if ((this.\u0001 - this.\u0001 & 1) != 0)
      {
        this.\u0001 = (uint) this.\u0001[this.\u0001++] & (uint) byte.MaxValue;
        this.\u0002 = 8;
      }
      return num1 + _param3;
    }

    public void \u0004() => this.\u0001 = (uint) (this.\u0001 = this.\u0001 = this.\u0002 = 0);

    public void \u0001(byte[] _param1, int _param2, int _param3)
    {
      if (this.\u0001 < this.\u0001)
        throw new InvalidOperationException(\u0004.\u0001(441261360, 749106502, 497155254));
      int num = _param2 + _param3;
      if (0 > _param2 || _param2 > num || num > _param1.Length)
        throw new ArgumentOutOfRangeException();
      if ((_param3 & 1) != 0)
      {
        this.\u0001 |= (uint) (((int) _param1[_param2++] & (int) byte.MaxValue) << this.\u0002);
        this.\u0002 += 8;
      }
      this.\u0001 = _param1;
      this.\u0001 = _param2;
      this.\u0001 = num;
    }

    static \u0002() => \u0003.\u0001(typeof (\u0002));
  }
}
