// Decompiled with JetBrains decompiler
// Type: .
// Assembly: 4a5c2017-21d9-4074-b899-32a29b0f3c26, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 0A04E507-2FF2-4D9E-ACC3-5B6E2C54765E
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\HEUR-Trojan.Win32.Generic-a2dcc8321dba5ad48f0b385f3c7883ebaa9f53591488c132ead66b3d626d69c2.exe

using \u0001;
using \u0003;
using \u0005;
using System;
using System.Drawing;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace \u0003
{
  internal sealed class \u0004 : Control
  {
    [NonSerialized]
    internal static \u0002 \u0001;
    private int \u0001 = 99;
    private Bitmap \u0001 = \u0006.\u0003(\u0004.\u0001(654));
    private Bitmap \u0002 = \u0006.\u0003(\u0004.\u0001(663));
    private Timer \u0001 = new Timer();
    private float \u0001 = 1f;
    private float \u0002 = 1f;

    protected override void OnVisibleChanged([In] EventArgs obj0)
    {
      \u009D\u0005.\u000E\u0007((object) this, obj0);
      if (\u0095\u0005.\u0015\u0008((object) this))
        return;
      this.\u0003(\u0095\u0005.\u009E\u0006((object) this));
    }

    private void \u0003([In] bool obj0)
    {
      \u008E\u0005.\u007E\u009D\u0007((object) this.\u0001, obj0);
      this.\u0001 = 0;
      \u001A\u0005.\u007E\u0011\u0007((object) this);
    }

    protected override void OnResize([In] EventArgs obj0)
    {
      \u0098\u0002.\u0099\u0006((object) this, new Size(\u0080\u0005.\u0003\u0003(250f * this.\u0001), \u0080\u0005.\u0003\u0003(42f * this.\u0002)));
      \u009D\u0005.\u0010\u0007((object) this, obj0);
    }

    protected override void ScaleCore([In] float obj0, [In] float obj1)
    {
      this.\u0001 = obj0;
      this.\u0002 = obj1;
      \u009F\u0003.\u0013\u0007((object) this, obj0, obj1);
      \u009D\u0005.\u007E\u0010\u0007((object) this, EventArgs.Empty);
    }

    protected override void Dispose([In] bool obj0)
    {
      if (obj0 && this.\u0001 != null)
        \u001A\u0005.\u007E\u001F\u0008((object) this.\u0001);
      \u008E\u0005.\u0005\u0007((object) this, obj0);
    }

    protected override void OnPaint([In] PaintEventArgs obj0)
    {
      \u008C\u0004.\u000F\u0007((object) this, obj0);
      if (this.\u0002 != null)
        \u001B\u0003.\u007E\u0086\u0008((object) \u0005\u0003.\u007E\u0019\u0007((object) obj0), (Image) this.\u0002, new Rectangle(0, 0, \u0080\u0005.\u0003\u0003(250f * this.\u0001), \u0080\u0005.\u0003\u0003(42f * this.\u0002)), new Rectangle(0, 0, 250, 42), GraphicsUnit.Pixel);
      if (this.\u0001 == null || this.\u0001 <= 0)
        return;
      \u009A\u0005.\u007E\u0088\u0008((object) \u0005\u0003.\u007E\u0019\u0007((object) obj0), new Rectangle(\u0080\u0005.\u0003\u0003(46f * this.\u0001), 0, \u0080\u0005.\u0003\u0003(165f * this.\u0001), \u0080\u0005.\u0003\u0003(34f * this.\u0002)));
      \u0001\u0005.\u007E\u0087\u0008((object) \u0005\u0003.\u007E\u0019\u0007((object) obj0), (Image) this.\u0001, new Rectangle(\u0080\u0005.\u0003\u0003((float) (this.\u0001 - 6) * this.\u0001), \u0080\u0005.\u0003\u0003(16f * this.\u0002), \u0080\u0005.\u0003\u0003(40f * this.\u0001), \u0080\u0005.\u0003\u0003(12f * this.\u0002)), 0, 0, 40, 12, GraphicsUnit.Pixel);
    }

    private void \u0003([In] object obj0, [In] EventArgs obj1)
    {
      this.\u0001 += 11;
      if (this.\u0001 > 198)
        goto label_2;
label_1:
      \u001A\u0005.\u007E\u0011\u0007((object) this);
      return;
label_2:
      this.\u0001 = 0;
      goto label_1;
    }

    public \u0004()
    {
      this.\u0001.Interval = 85;
      \u0089\u0002.\u007E\u009C\u0007((object) this.\u0001, new EventHandler(this.\u0003));
      \u0098\u0002.\u0099\u0006((object) this, new Size(250, 42));
      \u008E\u0005.\u009B\u0006((object) this, false);
      \u0084\u0003.\u0015\u0007((object) this, ControlStyles.UserPaint | ControlStyles.ResizeRedraw | ControlStyles.SupportsTransparentBackColor | ControlStyles.AllPaintingInWmPaint | ControlStyles.DoubleBuffer, true);
    }

    static \u0004() => \u0001.\u0003.\u0003();
  }
}
