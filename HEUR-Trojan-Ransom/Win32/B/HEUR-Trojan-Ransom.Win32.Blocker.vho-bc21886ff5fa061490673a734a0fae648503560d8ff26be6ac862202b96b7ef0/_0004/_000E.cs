// Decompiled with JetBrains decompiler
// Type: .
// Assembly: w, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8101C3F8-A792-4EB9-952B-26F7AB9A4B5A
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00100-msil\HEUR-Trojan-Ransom.Win32.Blocker.vho-bc21886ff5fa061490673a734a0fae648503560d8ff26be6ac862202b96b7ef0.exe

using \u0002;
using \u0003;
using \u0004;
using \u0006;
using \u000E;
using System;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security;
using System.Windows.Forms;

namespace \u0004
{
  internal class \u000E : \u0006.\u0006
  {
    [NonSerialized]
    internal static \u0001 \u0003;

    protected override void \u0001([In] \u0001 obj0)
    {
      do
      {
        \u0008 obj = new \u0008(obj0);
        try
        {
          int num = (int) \u0081\u0004.\u007E\u0014\u0007((object) obj);
        }
        finally
        {
          if (obj != null)
            \u009B.\u007E\u007F\u0003((object) obj);
        }
      }
      while (false);
    }

    protected override void \u0001([In] \u0005 obj0)
    {
      do
      {
        if (true)
          goto label_8;
label_7:
        continue;
label_8:
        \u0007 obj = new \u0007((\u0006.\u0006) this, obj0);
        try
        {
          do
          {
            do
            {
              int num = (int) \u0081\u0004.\u007E\u0014\u0007((object) obj);
            }
            while (false);
          }
          while (false);
          goto label_7;
        }
        finally
        {
          if (obj != null)
            \u009B.\u007E\u007F\u0003((object) obj);
        }
      }
      while (false);
    }

    protected override void \u0001([In] \u0004.\u0004 obj0)
    {
      int num = (int) \u0086\u0004.\u0018\u0007(\u001E.\u007E\u0017\u0002((object) obj0.\u0001), \u0088\u0002.\u0001\u0005(\u0004.\u000E.\u0003(7309), (object) \u0004.\u000E.\u0003(2195)), MessageBoxButtons.OK, MessageBoxIcon.Hand);
    }

    public static bool \u0001()
    {
      bool flag;
      try
      {
        \u0007.\u0001((\u0006.\u0006) new \u0004.\u000E());
        do
        {
          flag = true;
        }
        while (false);
      }
      catch (SecurityException ex1)
      {
        try
        {
          try
          {
            // ISSUE: type reference
            object obj = \u0087\u0004.\u0019\u0007((object) \u0013.\u001C(__typeref (Application)), \u0004.\u000E.\u0003(7338), BindingFlags.Static | BindingFlags.Public | BindingFlags.InvokeMethod, (Binder) null, (object) null, (object[]) null);
          }
          catch (MissingMethodException ex2)
          {
          }
          \u0008 obj1 = new \u0008(new \u0001(\u0088\u0002.\u0001\u0005(\u0004.\u000E.\u0003(7363), (object) \u0004.\u000E.\u0003(2195)), false));
          \u0012\u0002.\u007E\u001E\u0004((object) obj1, true);
          int num = (int) \u0081\u0004.\u007E\u0014\u0007((object) obj1);
        }
        catch (Exception ex3)
        {
          int num = (int) \u0086\u0004.\u0018\u0007(\u001E.\u007E\u0017\u0002((object) ex3), \u0088\u0002.\u0001\u0005(\u0004.\u000E.\u0003(7309), (object) \u0004.\u000E.\u0003(2195)), MessageBoxButtons.OK, MessageBoxIcon.Hand);
        }
        flag = false;
      }
      return flag;
    }

    static \u000E() => \u0004.\u0002.\u0001(typeof (\u0004.\u000E));
  }
}
