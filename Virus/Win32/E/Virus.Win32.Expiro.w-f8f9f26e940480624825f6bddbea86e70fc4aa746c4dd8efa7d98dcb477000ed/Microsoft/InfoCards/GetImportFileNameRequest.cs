// Decompiled with JetBrains decompiler
// Type: Microsoft.InfoCards.GetImportFileNameRequest
// Assembly: infocard, Version=3.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
// MVID: 1D4D5564-A025-490C-AF1D-DF4FBB709D1F
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00001-msil\Virus.Win32.Expiro.w-f8f9f26e940480624825f6bddbea86e70fc4aa746c4dd8efa7d98dcb477000ed.exe

using Microsoft.InfoCards.Diagnostics;
using System;
using System.IO;
using System.Text;

namespace Microsoft.InfoCards
{
  internal class GetImportFileNameRequest : UIAgentRequest
  {
    private string m_filename = string.Empty;

    public GetImportFileNameRequest(
      IntPtr rpcHandle,
      Stream inArgs,
      Stream outArgs,
      ClientUIRequest parent)
      : base(rpcHandle, inArgs, outArgs, parent)
    {
    }

    protected override void OnMarshalInArgs()
    {
    }

    protected override void OnProcess()
    {
      if (this.ParentRequest is ImportRequest)
      {
        this.m_filename = (this.ParentRequest as ImportRequest).ImportedFile;
        InfoCardTrace.Assert(!string.IsNullOrEmpty(this.m_filename), "No file name provided for import");
      }
      else
        InfoCardTrace.Assert(false, "The parent of this request MUST be ImportRequest");
    }

    protected override void OnMarshalOutArgs() => Utility.SerializeString(new BinaryWriter(this.OutArgs, Encoding.Unicode), this.m_filename);
  }
}
