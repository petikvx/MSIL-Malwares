// Decompiled with JetBrains decompiler
// Type: Cytotechnologist.Dice
// Assembly: ConcurrentS, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: BBECA65A-DDC9-4285-A0F3-1DAD9BE0ED87
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-29a2cecf014cf5640915defd5f1ca82e75089ad0ec89107be8f9144673d99be6.exe

using System;
using System.Runtime.InteropServices;

namespace Cytotechnologist
{
  public class Dice
  {
    private readonly Random _random;

    public Dice()
    {
label_1:
      int num1 = 233920497;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2146884062)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            this._random = Dice.\u206D⁯‫‪‫⁫‭‪‍⁫‌‪‏⁯‬⁮‮‌‌⁯‬⁯‭‏‍‍⁭⁬‮‮⁮‏⁭⁪‫‪⁯‭⁭‪‮((int) DateTime.Now.Ticks);
            num1 = (int) num2 * -164934805 ^ 542077673;
            continue;
          case 3:
            num1 = (int) num2 * -1030204723 ^ -991367245;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public bool Roll(float chance)
    {
      double num1 = Dice.\u206D‬⁭‍⁯⁫‎​‍‎‏⁯‍​‏‬⁭⁬⁭‍⁮​​‏‎‭​‭‏​‍⁯⁫⁬⁭⁫‎‪⁫⁬‮(this._random);
label_1:
      int num2 = -1444516310;
      bool flag;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num2 ^ -142259953)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            flag = num1 <= (double) chance;
            num2 = (int) num3 * -583022061 ^ 885715544;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    static Random \u206D⁯‫‪‫⁫‭‪‍⁫‌‪‏⁯‬⁮‮‌‌⁯‬⁯‭‏‍‍⁭⁬‮‮⁮‏⁭⁪‫‪⁯‭⁭‪‮([In] int obj0) => new Random(obj0);

    static double \u206D‬⁭‍⁯⁫‎​‍‎‏⁯‍​‏‬⁭⁬⁭‍⁮​​‏‎‭​‭‏​‍⁯⁫⁬⁭⁫‎‪⁫⁬‮([In] Random obj0) => obj0.NextDouble();
  }
}
