// Decompiled with JetBrains decompiler
// Type: C3904355907.C3775001192
// Assembly: Google Software Update, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 1ECCB2B4-E3D0-48EA-84ED-06938D43796B
// Assembly location: C:\Users\Administrateur\Downloads\toto\HEUR-Trojan.MSIL.DelShad.gen-b37761715d5a2405a3fa75abccaf6bb15b7298673aaad91a158725be3c518a87.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.InteropServices;

namespace C3904355907
{
  internal sealed class C3775001192 : IEnumerable<KeyValuePair<int, C3554254475.C3110715001>>, IEnumerable
  {
    private Dictionary<int, C3554254475.C3110715001> C3554254475 = new Dictionary<int, C3554254475.C3110715001>();

    IEnumerator IEnumerable.C3554254475() => (IEnumerator) this.C3554254475.GetEnumerator();

    public IEnumerator<KeyValuePair<int, C3554254475.C3110715001>> GetEnumerator() => (IEnumerator<KeyValuePair<int, C3554254475.C3110715001>>) this.C3554254475.GetEnumerator();

    public void C3904355907() => this.C3554254475.Clear();

    private int C1255198513()
    {
      int count = this.C3554254475.Count;
      while (this.C3554254475.ContainsKey(count))
        ++count;
      Debug.Assert(count == this.C3554254475.Count);
      return count;
    }

    public C3554254475.C3110715001 C3554254475([In] int obj0)
    {
      C3554254475.C3110715001 c3110715001;
      return this.C3554254475.TryGetValue(obj0, out c3110715001) ? c3110715001 : (C3554254475.C3110715001) null;
    }

    public int C3554254475([In] C3554254475.C3110715001 obj0)
    {
      if (obj0 == null)
      {
        Debug.Assert(false);
        return -1;
      }
      foreach (KeyValuePair<int, C3554254475.C3110715001> keyValuePair in this.C3554254475)
      {
        if (obj0 == keyValuePair.Value)
        {
          Debug.Assert(obj0.Equals(keyValuePair.Value));
          return keyValuePair.Key;
        }
      }
      foreach (KeyValuePair<int, C3554254475.C3110715001> keyValuePair in this.C3554254475)
      {
        if (obj0.Equals(keyValuePair.Value))
          return keyValuePair.Key;
      }
      return -1;
    }

    public void C3554254475([In] int obj0, [In] C3554254475.C3110715001 obj1)
    {
      if (obj0 < 0)
        Debug.Assert(false);
      else if (obj1 == null)
        Debug.Assert(false);
      else
        this.C3554254475[obj0] = obj1;
    }

    public void C3904355907([In] C3554254475.C3110715001 obj0)
    {
      if (obj0 == null)
      {
        Debug.Assert(false);
      }
      else
      {
        if (this.C3554254475(obj0) >= 0)
          return;
        this.C3554254475[this.C1255198513()] = obj0;
      }
    }

    public void C3554254475([In] C3664761504 obj0)
    {
      if (obj0 == null)
      {
        Debug.Assert(false);
      }
      else
      {
        foreach (KeyValuePair<string, C3554254475.C3110715001> keyValuePair in obj0)
          this.C3904355907(keyValuePair.Value);
      }
    }

    public C3554254475.C3110715001[] C1908338681()
    {
      int count = this.C3554254475.Count;
      C3554254475.C3110715001[] c3110715001Array = new C3554254475.C3110715001[count];
      foreach (KeyValuePair<int, C3554254475.C3110715001> keyValuePair in this.C3554254475)
      {
        if (keyValuePair.Key < 0 || keyValuePair.Key >= count)
        {
          Debug.Assert(false);
          throw new InvalidOperationException();
        }
        c3110715001Array[keyValuePair.Key] = keyValuePair.Value;
      }
      for (int index = 0; index < count; ++index)
      {
        if (c3110715001Array[index] == null)
        {
          Debug.Assert(false);
          throw new InvalidOperationException();
        }
      }
      return c3110715001Array;
    }
  }
}
