// Decompiled with JetBrains decompiler
// Type: SimpleChessApp.Game.ChessPiece
// Assembly: Xe, Version=2.159.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 5E8DDD59-A67B-4ABD-99CD-92D28751A620
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.01-msil\HEUR-Trojan-Ransom.MSIL.Makop.gen-2fdfbfc735f43a4e2dce0c849b41ab83dd17228f6df983f7a95d6e427cdc77b0.exe

using System.Runtime.InteropServices;

namespace SimpleChessApp.Game
{
  public class ChessPiece
  {
    public int Id;
    public Pieces Kind;
    public PieceColor Color;
    public Square Home;
    public bool Passant;
    public Square Current;
    private static int idd = 0;

    public ChessPiece(Square h, Pieces p, PieceColor c)
    {
label_1:
      int num1 = 132549676;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 55919717)) % 5U)
        {
          case 0:
            this.Color = c;
            this.Current = this.Home = h;
            num1 = (int) num2 * -1172073241 ^ 1958442039;
            continue;
          case 1:
            num1 = (int) num2 * 1716496493 ^ -1173253360;
            continue;
          case 2:
            this.Id = ChessPiece.idd++;
            this.Kind = p;
            num1 = (int) num2 * -930403212 ^ -537104724;
            continue;
          case 3:
            goto label_3;
          case 4:
            goto label_1;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public ChessPiece(Pieces p, PieceColor c)
    {
label_1:
      int num1 = 852290430;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2071036160)) % 4U)
        {
          case 1:
            this.Id = ChessPiece.idd++;
            num1 = (int) num2 * -841498390 ^ 1510330098;
            continue;
          case 2:
            num1 = (int) num2 * -829419705 ^ -468031385;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      this.Kind = p;
      this.Color = c;
    }

    public string SpecialName
    {
      get
      {
label_1:
        int num1 = 1392929186;
        string specialName;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1972840003)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              specialName = ChessPiece.\u206E‬‫‌‭⁫‭‌⁯⁬‍‪‎‍‍‬‮⁯​⁪⁫‌‬‍⁯‫‬⁯‪‎⁬‌⁯‎⁫​⁪‮‎⁫‮(\u003CModule\u003E.\u200C⁪⁬‬⁪⁪⁬‭⁭⁫⁭⁪⁭⁪⁭‭‌⁭‎⁭‮⁬⁭‍​⁯‬⁫‌‮‎‫‏‬‭​​​⁮⁮‮<string>(538948734U), (object) this.Current.Name, (object) this.Kind);
              num1 = (int) num2 * -85242207 ^ -2091805542;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return specialName;
      }
    }

    static string \u206E‬‫‌‭⁫‭‌⁯⁬‍‪‎‍‍‬‮⁯​⁪⁫‌‬‍⁯‫‬⁯‪‎⁬‌⁯‎⁫​⁪‮‎⁫‮(
      [In] string obj0,
      [In] object obj1,
      [In] object obj2)
    {
      return string.Format(obj0, obj1, obj2);
    }
  }
}
