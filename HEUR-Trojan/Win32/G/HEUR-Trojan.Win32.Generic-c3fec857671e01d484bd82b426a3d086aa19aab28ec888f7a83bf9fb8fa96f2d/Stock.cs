// Decompiled with JetBrains decompiler
// Type: Stock
// Assembly: TaskSchedulerExcept, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: C99F8105-AF21-447F-A90A-9B9B26790CA7
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.05\HEUR-Trojan.Win32.Generic-c3fec857671e01d484bd82b426a3d086aa19aab28ec888f7a83bf9fb8fa96f2d.exe

using System;

public class Stock
{
  private string symbol;
  private Decimal purchasePrice;
  private Decimal currentPrice;
  private long sharesOwned;

  public Stock(string symbol, Decimal purchasePrice, long sharesOwned)
  {
label_1:
    int num1 = 616279565;
    while (true)
    {
      uint num2;
      switch ((num2 = (uint) (num1 ^ 1288417814)) % 5U)
      {
        case 0:
          this.symbol = symbol;
          this.purchasePrice = this.currentPrice = purchasePrice;
          num1 = (int) num2 * 361700066 ^ 258375892;
          continue;
        case 1:
          num1 = (int) num2 * 597980637 ^ 1519111291;
          continue;
        case 2:
          goto label_1;
        case 3:
          goto label_3;
        case 4:
          this.sharesOwned = sharesOwned;
          num1 = (int) num2 * 2291067 ^ 326314230;
          continue;
        default:
          goto label_7;
      }
    }
label_3:
    return;
label_7:;
  }

  public Decimal CurrentPrice
  {
    get
    {
label_1:
      int num1 = -614958907;
      Decimal currentPrice;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -663903984)) % 4U)
        {
          case 1:
            currentPrice = this.currentPrice;
            num1 = (int) num2 * -1465327219 ^ 1403920926;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * 2129882547 ^ -514885199;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return currentPrice;
    }
    set => this.currentPrice = value;
  }

  public string Symbol
  {
    get
    {
      string symbol = this.symbol;
label_1:
      int num1 = -890765243;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2065932688)) % 3U)
        {
          case 1:
            num1 = (int) num2 * -2122628295 ^ -163470956;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return symbol;
    }
    set
    {
label_1:
      int num1 = -27038859;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -572771199)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            this.symbol = value;
            num1 = (int) num2 * 977449159 ^ -202108814;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }
  }

  public Decimal PurchasePrice
  {
    get
    {
label_1:
      int num1 = -1079292600;
      Decimal purchasePrice;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1399959207)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -1798934237 ^ -423000818;
            continue;
          case 1:
            purchasePrice = this.purchasePrice;
            num1 = (int) num2 * 1529292154 ^ 1515833299;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return purchasePrice;
    }
  }

  public long SharesOwned
  {
    get
    {
label_1:
      int num1 = -375615278;
      long sharesOwned;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -654641961)) % 3U)
        {
          case 1:
            sharesOwned = this.sharesOwned;
            num1 = (int) num2 * 480236956 ^ 651810196;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return sharesOwned;
    }
  }

  public Decimal Worth
  {
    get
    {
label_1:
      int num1 = 1153157241;
      Decimal worth;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1357670308)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            worth = this.CurrentPrice * (Decimal) this.SharesOwned;
            num1 = (int) num2 * 408772041 ^ 1713714271;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return worth;
    }
  }
}
