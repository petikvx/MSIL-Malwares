// Decompiled with JetBrains decompiler
// Type: FannyHeirdooBot.Quadrant
// Assembly: IDynamicMessageS, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 27E16815-1EE5-4D7C-AD78-EB45F6CA3CA3
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.05\Backdoor.Win32.Blakken.vqn-4ac70e6596359a19fddd3380edc192f01f7e789c9cf8dd3afa68fd5f9ef8bdb5.exe

using System;
using System.Diagnostics;
using System.Runtime.InteropServices;

namespace FannyHeirdooBot
{
  [DebuggerDisplay("X: {X} Y: {Y}")]
  public class Quadrant
  {
    public double X;
    public double Y;

    internal Quadrant Calculate(int totalShipCount)
    {
      Quadrant quadrant1 = new Quadrant();
      bool flag = totalShipCount != 0;
label_1:
      int num1 = 1519199186;
      Quadrant quadrant2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1947820181)) % 7U)
        {
          case 0:
            goto label_1;
          case 1:
            quadrant1.Y = this.Y / (double) totalShipCount;
            num1 = (int) num2 * -1663002205 ^ 719773160;
            continue;
          case 2:
            int num3 = flag ? -2041167922 : (num3 = -1130316290);
            num1 = num3 ^ (int) num2 * -980761301;
            continue;
          case 4:
            num1 = (int) num2 * 1890412708 ^ 1522727883;
            continue;
          case 5:
            quadrant2 = quadrant1;
            num1 = 1613733950;
            continue;
          case 6:
            quadrant1.X = this.X / (double) totalShipCount;
            num1 = (int) num2 * 1796330981 ^ -1478004926;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      return quadrant2;
    }

    internal double Delta(Planet planet)
    {
label_1:
      int num1 = 1856964453;
      double num2;
      double num3;
      while (true)
      {
        uint num4;
        switch ((num4 = (uint) (num1 ^ 613127592)) % 5U)
        {
          case 1:
            num2 = planet.X - this.X;
            num1 = (int) num4 * 105000703 ^ 537527632;
            continue;
          case 2:
            num1 = (int) num4 * 543397813 ^ -2022783886;
            continue;
          case 3:
            goto label_1;
          case 4:
            double num5 = planet.Y - this.Y;
            num3 = Quadrant.\u202C‎⁪⁫‭⁪⁪⁪‌⁮‭‬⁬‭‎‭⁫‮‍​⁮‮⁪⁯⁭‮⁪‮⁯‌‭‎⁮⁬‌‪‌‏⁪‍‮(num2 * num2 + num5 * num5);
            num1 = (int) num4 * 945024198 ^ 865872350;
            continue;
          default:
            goto label_6;
        }
      }
label_6:
      return num3;
    }

    static double \u202C‎⁪⁫‭⁪⁪⁪‌⁮‭‬⁬‭‎‭⁫‮‍​⁮‮⁪⁯⁭‮⁪‮⁯‌‭‎⁮⁬‌‪‌‏⁪‍‮([In] double obj0) => Math.Sqrt(obj0);
  }
}
