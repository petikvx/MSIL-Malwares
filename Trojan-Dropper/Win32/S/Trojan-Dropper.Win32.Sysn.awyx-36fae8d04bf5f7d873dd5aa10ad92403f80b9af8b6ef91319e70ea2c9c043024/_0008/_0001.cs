// Decompiled with JetBrains decompiler
// Type: .
// Assembly: AudioHD, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A79492AA-5FAA-4ED2-ACC6-3D90AD665D99
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00000-msil\Trojan-Dropper.Win32.Sysn.awyx-36fae8d04bf5f7d873dd5aa10ad92403f80b9af8b6ef91319e70ea2c9c043024.exe

using \u0001;
using System;
using System.Collections;
using System.Diagnostics;
using System.Threading;

namespace \u0008
{
  internal sealed class \u0001
  {
    [NonSerialized]
    internal static \u0002 \u0001;

    public void \u000F()
    {
      if (\u000F.\u0001.\u0001.\u0003)
      {
        try
        {
          if (Debugger.IsAttached)
          {
            this.\u0010();
            return;
          }
        }
        catch
        {
        }
      }
      if (\u000F.\u0001.\u0001.\u0002)
      {
        try
        {
          foreach (string module in (ReadOnlyCollectionBase) Process.GetCurrentProcess().Modules)
          {
            if (module.Contains(\u0008.\u0001.\u0001(1889)))
            {
              this.\u0010();
              return;
            }
          }
        }
        catch
        {
        }
      }
      if (\u000F.\u0001.\u0001.\u0004)
      {
        try
        {
          long ticks = DateTime.Now.Ticks;
          Thread.Sleep(10);
          if (DateTime.Now.Ticks - ticks < 10L)
          {
            this.\u0010();
            return;
          }
        }
        catch
        {
        }
      }
      if (\u000F.\u0001.\u0001.\u0006)
      {
        try
        {
          if (\u000F.\u0001.\u0001.\u000F(\u0008.\u0001.\u0001(1906)))
          {
            this.\u0010();
            return;
          }
        }
        catch
        {
        }
      }
      if (\u000F.\u0001.\u0001.\u0005)
      {
        try
        {
          if (\u000F.\u0001.\u0001.\u000F(\u0008.\u0001.\u0001(1919)))
          {
            this.\u0010();
            return;
          }
        }
        catch
        {
        }
      }
      if (\u000F.\u0001.\u0001.\u000E)
      {
        try
        {
          if (\u000F.\u0001.\u0001.\u000F(\u0008.\u0001.\u0001(1932)))
          {
            this.\u0010();
            return;
          }
        }
        catch
        {
        }
      }
      if (\u000F.\u0001.\u0001.\u000F)
      {
        try
        {
          if (\u000F.\u0001.\u0001.\u000F(\u0008.\u0001.\u0001(1945)))
          {
            this.\u0010();
            return;
          }
        }
        catch
        {
        }
      }
      if (\u000F.\u0001.\u0001.\u0001)
      {
        try
        {
          if (\u000F.\u0001.\u0001.\u000F(\u0008.\u0001.\u0001(1954)))
          {
            this.\u0010();
            return;
          }
        }
        catch
        {
        }
      }
      if (\u000F.\u0001.\u0001.\u0007)
      {
        try
        {
          if (\u000F.\u0001.\u0001.\u000F(\u0008.\u0001.\u0001(1963)))
          {
            this.\u0010();
            return;
          }
        }
        catch
        {
        }
      }
      if (\u000F.\u0001.\u0001.\u0010)
      {
        try
        {
          if (\u000F.\u0001.\u0001.\u000F(\u0008.\u0001.\u0001(1972)))
          {
            this.\u0010();
            return;
          }
        }
        catch
        {
        }
      }
      if (\u000F.\u0001.\u0001.\u0014)
      {
        try
        {
          if (\u000F.\u0001.\u0001.\u000F(\u0008.\u0001.\u0001(1985)))
          {
            this.\u0010();
            return;
          }
        }
        catch
        {
        }
      }
      if (\u000F.\u0001.\u0001.\u0008)
      {
        try
        {
          if (\u000F.\u0001.\u0001.\u0015() == \u0008.\u0001.\u0001(1998))
          {
            this.\u0010();
            return;
          }
        }
        catch
        {
        }
      }
      if (\u000F.\u0001.\u0001.\u0013)
      {
        try
        {
          if (\u000F.\u0001.\u0001.\u0015() == \u0008.\u0001.\u0001(2031))
          {
            this.\u0010();
            return;
          }
        }
        catch
        {
        }
      }
      if (\u000F.\u0001.\u0001.\u0011)
      {
        try
        {
          if (\u000F.\u0001.\u0001.\u0015() == \u0008.\u0001.\u0001(2052))
          {
            this.\u0010();
            return;
          }
        }
        catch
        {
        }
      }
      if (!\u000F.\u0001.\u0001.\u0012)
        return;
      try
      {
        string[] strArray = new string[2]
        {
          \u0008.\u0001.\u0001(2089),
          \u0008.\u0001.\u0001(2126)
        };
        foreach (string str in strArray)
        {
          if (\u000F.\u0001.\u0001.\u0015() == str)
          {
            this.\u0010();
            break;
          }
        }
      }
      catch
      {
      }
    }

    private void \u0010() => Environment.Exit(0);

    static \u0001() => \u0003.\u000F();
  }
}
