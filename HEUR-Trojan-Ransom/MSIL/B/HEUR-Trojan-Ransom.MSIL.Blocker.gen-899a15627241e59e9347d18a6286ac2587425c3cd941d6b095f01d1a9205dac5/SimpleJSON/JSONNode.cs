// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: RuntimeParameterIn, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: E46F8FBF-E963-420D-9D24-515F2113904E
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-899a15627241e59e9347d18a6286ac2587425c3cd941d6b095f01d1a9205dac5.exe

using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = -1306266464;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -270711097)) % 3U)
          {
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -1332851428 ^ 326569209;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -1056843302;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -990565912)) % 4U)
          {
            case 1:
              num1 = (int) num2 * 265042823 ^ 1375547319;
              continue;
            case 2:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -1822073535 ^ 2084557275;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual string Value
    {
      get
      {
label_1:
        int num1 = -1483763369;
        string str;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -378160262)) % 4U)
          {
            case 1:
              str = "";
              num1 = (int) num2 * -1182124040 ^ 352606120;
              continue;
            case 2:
              num1 = (int) num2 * -1756594534 ^ 1803956242;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return str;
      }
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
        int count = 0;
label_1:
        int num1 = 934598141;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1519327778)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 299670221 ^ -1233743583;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem) => this.Add("", aItem);

    public virtual JSONNode Remove(string aKey)
    {
      JSONNode jsonNode = (JSONNode) null;
label_1:
      int num1 = 288865810;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1375466557)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * 883055000 ^ -614931936;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = -459606144;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1824774479)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 687232856 ^ -462006178;
            continue;
          case 3:
            num1 = (int) num2 * -1851356614 ^ 317641113;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = -1660345287;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -493482568)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -506836941 ^ -2095700922;
            continue;
          case 1:
            jsonNode = aNode;
            num1 = (int) num2 * 1111203265 ^ 1621693601;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONNode.\u003Cget_Childs\u003Ed__17 childs = new JSONNode.\u003Cget_Childs\u003Ed__17(-2);
label_1:
        int num1 = 2073879733;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 407504426)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              childs.\u003C\u003E4__this = this;
              num1 = (int) num2 * -1870408632 ^ 794112881;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return (IEnumerable<JSONNode>) childs;
      }
    }

    public IEnumerable<JSONNode> DeepChilds
    {
      get
      {
        JSONNode.\u003Cget_DeepChilds\u003Ed__19 getDeepChildsD19 = new JSONNode.\u003Cget_DeepChilds\u003Ed__19(-2);
        getDeepChildsD19.\u003C\u003E4__this = this;
label_1:
        int num1 = -922622756;
        IEnumerable<JSONNode> deepChilds;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1838429027)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              deepChilds = (IEnumerable<JSONNode>) getDeepChildsD19;
              num1 = (int) num2 * 913392327 ^ 353611058;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return deepChilds;
      }
    }

    public override string ToString()
    {
      string str = nameof (JSONNode);
label_1:
      int num1 = 1854112651;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 234881552)) % 3U)
        {
          case 1:
            num1 = (int) num2 * 643508897 ^ 1122837274;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual string ToString(string aPrefix) => nameof (JSONNode);

    public virtual int AsInt
    {
      get
      {
label_1:
        int num1 = -1610532252;
        int result;
        bool flag;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2097749254)) % 8U)
          {
            case 0:
              int num3 = !flag ? -1805889313 : (num3 = -1825327279);
              num1 = num3 ^ (int) num2 * 282512965;
              continue;
            case 1:
              flag = int.TryParse(this.Value, out result);
              num1 = (int) num2 * 1570938375 ^ 1542806653;
              continue;
            case 3:
              asInt = result;
              num1 = (int) num2 * 605049563 ^ 1310456641;
              continue;
            case 4:
              goto label_1;
            case 5:
              asInt = 0;
              num1 = -156871795;
              continue;
            case 6:
              result = 0;
              num1 = (int) num2 * -1813675347 ^ 1654466733;
              continue;
            case 7:
              num1 = (int) num2 * 1424416926 ^ 207322794;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asInt;
      }
      set
      {
label_1:
        int num1 = 102352423;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1865494658)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Value = value.ToString();
              num1 = (int) num2 * 1229816461 ^ -294764399;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual float AsFloat
    {
      get
      {
        float result = 0.0f;
        bool flag = float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u202E‮‬⁮⁯‫‭⁬‬⁫⁪‮‮‫⁪⁭​⁮⁬‎‏‫‌‮⁮‮‏⁮‮‪‌‎⁪⁬⁪‭⁮‪‍‭‮(), out result);
label_1:
        int num1 = -1791951033;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1898190413)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              asFloat = 0.0f;
              num1 = -1879542748;
              continue;
            case 2:
              asFloat = result;
              num1 = (int) num2 * -1241623198 ^ 749052388;
              continue;
            case 3:
              int num3 = !flag ? 112914870 : (num3 = 1277744159);
              num1 = num3 ^ (int) num2 * -1252303281;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asFloat;
      }
      set
      {
label_1:
        int num1 = -1247939536;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -132402583)) % 4U)
          {
            case 0:
              num1 = (int) num2 * -730107630 ^ 926666058;
              continue;
            case 1:
              this.Value = value.ToString();
              num1 = (int) num2 * 932842484 ^ -41408127;
              continue;
            case 2:
              goto label_1;
            case 3:
              goto label_3;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public virtual double AsDouble
    {
      get
      {
label_1:
        int num1 = -770931535;
        double asDouble;
        double result;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1625769113)) % 8U)
          {
            case 0:
              asDouble = result;
              num1 = (int) num2 * -197546295 ^ 821113084;
              continue;
            case 1:
              flag = double.TryParse(this.Value, out result);
              num1 = (int) num2 * -320393086 ^ -244403288;
              continue;
            case 2:
              num1 = (int) num2 * -472049423 ^ 438130446;
              continue;
            case 4:
              asDouble = 0.0;
              num1 = -1661695275;
              continue;
            case 5:
              int num3 = !flag ? -936568445 : (num3 = -2132377849);
              num1 = num3 ^ (int) num2 * 342880256;
              continue;
            case 6:
              result = 0.0;
              num1 = (int) num2 * 1320663167 ^ 1299445028;
              continue;
            case 7:
              goto label_1;
            default:
              goto label_9;
          }
        }
label_9:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = 904777564;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1076286374)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Value = value.ToString();
              num1 = (int) num2 * -1457595351 ^ -915160261;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual bool AsBool
    {
      get
      {
label_1:
        int num1 = 1032432940;
        bool result;
        bool asBool;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1313675490)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              int num3 = flag ? 277578421 : (num3 = 796968334);
              num1 = num3 ^ (int) num2 * -1473126835;
              continue;
            case 2:
              result = false;
              flag = bool.TryParse(this.Value, out result);
              num1 = (int) num2 * 1128054807 ^ 1375311361;
              continue;
            case 3:
              asBool = !JSONNode.\u206A‮⁪‌​‌⁫⁭⁪⁭‪⁯‎‭‮‫⁪‭⁭⁫‫‏‌​‌​⁮⁪⁮​⁮‍⁪‍‎⁪‌⁫‬‬‮(this.Value);
              num1 = 2037659431;
              continue;
            case 4:
              asBool = result;
              num1 = (int) num2 * 1469995989 ^ -1649544027;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asBool;
      }
      set => this.Value = value ? "true" : "false";
    }

    public virtual JSONArray AsArray
    {
      get
      {
        JSONArray asArray = this as JSONArray;
label_1:
        int num1 = -2082647466;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1186781346)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * 1564833671 ^ -1837201681;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asArray;
      }
    }

    public virtual JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = -1110273807;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1732578796)) % 4U)
          {
            case 1:
              asObject = this as JSONClass;
              num1 = (int) num2 * -1908107661 ^ -2096278687;
              continue;
            case 2:
              num1 = (int) num2 * 747349375 ^ 1584924590;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s)
    {
label_1:
      int num1 = -751392037;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1594009755)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            jsonNode = (JSONNode) new JSONData(s);
            num1 = (int) num2 * 1099172260 ^ -471023443;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public static implicit operator string(JSONNode d)
    {
      if (d == (object) null)
        goto label_4;
label_1:
      int num1 = -28373618;
label_2:
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -503301365)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 3:
            num1 = (int) num2 * -1634675269 ^ 1913182384;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      string str1 = d.Value;
      goto label_5;
label_7:
      string str2;
      return str2;
label_4:
      str1 = (string) null;
label_5:
      str2 = str1;
      num1 = -1166094240;
      goto label_2;
    }

    public static bool operator ==(JSONNode a, object b)
    {
      if (b != null)
        goto label_4;
label_1:
      int num1 = -738524537;
label_2:
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -512436932)) % 6U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            flag2 = (object) a == b;
            num1 = -1292017007;
            continue;
          case 4:
            int num3 = flag1 ? 388658463 : (num3 = 1977150936);
            num1 = num3 ^ (int) num2 * 1836092648;
            continue;
          case 5:
            flag2 = true;
            num1 = (int) num2 * 1804072403 ^ -1413907112;
            continue;
          default:
            goto label_9;
        }
      }
label_3:
      int num4 = a is JSONLazyCreator ? 1 : 0;
      goto label_5;
label_9:
      return flag2;
label_4:
      num4 = 0;
label_5:
      flag1 = num4 != 0;
      num1 = -490371090;
      goto label_2;
    }

    public static bool operator !=(JSONNode a, object b)
    {
label_1:
      int num1 = -1118099082;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1157766439)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -193263285 ^ 124319752;
            continue;
          case 3:
            flag = !(a == b);
            num1 = (int) num2 * -130108207 ^ -1198183893;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override bool Equals(object obj)
    {
      bool flag = (object) this == obj;
label_1:
      int num1 = 1170394416;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 110040709)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -405486308 ^ -1217046954;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override int GetHashCode()
    {
      int hashCode = this.\u206C⁮​‌‮⁮​‌‮⁪⁯⁯‍‮‮‭‬​⁪‍⁫‏‫⁯⁫‬⁭‭⁭‪⁭‏‮‭⁫‬⁮⁬‫‮();
label_1:
      int num1 = 1303952441;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 21717817)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -1299748714 ^ -23512407;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return hashCode;
    }

    internal static string Escape(string aText)
    {
label_1:
      int num1 = -1542394382;
      string str1;
      char ch1;
      string str2;
      int num2;
      char ch2;
      char ch3;
      string str3;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -1718104091)) % 30U)
        {
          case 0:
            num1 = (int) num3 * 262245860 ^ 720124811;
            continue;
          case 1:
label_21:
            str1 = JSONNode.\u206E⁭⁮‍​⁯‏‎‭⁯⁯‪⁪⁪‌⁯‌⁪⁯⁪⁫⁫‍‭⁯‌‌‏⁫⁫⁬⁪‭⁮⁪‭⁪⁭‭‫‮(str1, "\\f");
            num1 = -665086701;
            continue;
          case 2:
            str1 = JSONNode.\u206E⁭⁮‍​⁯‏‎‭⁯⁯‪⁪⁪‌⁯‌⁪⁯⁪⁫⁫‍‭⁯‌‌‏⁫⁫⁬⁪‭⁮⁪‭⁪⁭‭‫‮(str1, "\\\\");
            num1 = -1101870888;
            continue;
          case 3:
            num1 = (int) num3 * -370512463 ^ 1745785752;
            continue;
          case 4:
            num1 = (int) num3 * 1184934001 ^ 1311598888;
            continue;
          case 5:
            int num4;
            num1 = num4 = num2 < JSONNode.\u202A‬‌⁭‫​⁫⁭‍‭‬⁬⁮‫⁬‍⁫​​​⁫‪‎⁫⁭⁭⁫‌⁪⁮⁭‭‎‪‪‮​‎‫‭‮(str2) ? -550963728 : (num4 = -827010894);
            continue;
          case 6:
            num1 = (int) num3 * 1216196055 ^ 1911215175;
            continue;
          case 7:
label_9:
            str1 = JSONNode.\u206E⁭⁮‍​⁯‏‎‭⁯⁯‪⁪⁪‌⁯‌⁪⁯⁪⁫⁫‍‭⁯‌‌‏⁫⁫⁬⁪‭⁮⁪‭⁪⁭‭‫‮(str1, "\\r");
            num1 = -470279895;
            continue;
          case 8:
label_7:
            str1 = JSONNode.\u206E⁭⁮‍​⁯‏‎‭⁯⁯‪⁪⁪‌⁯‌⁪⁯⁪⁫⁫‍‭⁯‌‌‏⁫⁫⁬⁪‭⁮⁪‭⁪⁭‭‫‮(str1, ch1.ToString());
            num1 = -780492821;
            continue;
          case 9:
label_10:
            str1 = JSONNode.\u206E⁭⁮‍​⁯‏‎‭⁯⁯‪⁪⁪‌⁯‌⁪⁯⁪⁫⁫‍‭⁯‌‌‏⁫⁫⁬⁪‭⁮⁪‭⁪⁭‭‫‮(str1, "\\n");
            num1 = -1676574102;
            continue;
          case 10:
            num1 = (int) num3 * 1844749242 ^ 266163428;
            continue;
          case 11:
            int num5;
            num1 = num5 = ch2 == '"' ? -1383508995 : (num5 = -1943181348);
            continue;
          case 13:
            str1 = "";
            num1 = (int) num3 * -987740511 ^ 961539553;
            continue;
          case 14:
label_11:
            str1 = JSONNode.\u206E⁭⁮‍​⁯‏‎‭⁯⁯‪⁪⁪‌⁯‌⁪⁯⁪⁫⁫‍‭⁯‌‌‏⁫⁫⁬⁪‭⁮⁪‭⁪⁭‭‫‮(str1, "\\b");
            num1 = -622819661;
            continue;
          case 15:
            str3 = str1;
            num1 = (int) num3 * -1896948501 ^ 1744773048;
            continue;
          case 16:
            ch2 = ch3;
            switch (ch2)
            {
              case '\b':
                goto label_11;
              case '\t':
                goto label_30;
              case '\n':
                goto label_10;
              case '\v':
                goto label_7;
              case '\f':
                goto label_21;
              case '\r':
                goto label_9;
              default:
                num1 = (int) num3 * 602096382 ^ 1162487217;
                continue;
            }
          case 17:
            str2 = aText;
            num2 = 0;
            num1 = (int) num3 * -91447486 ^ -568783309;
            continue;
          case 18:
            num1 = (int) num3 * 1377592716 ^ -918604509;
            continue;
          case 19:
            num1 = (int) num3 * 853203060 ^ -1894831433;
            continue;
          case 20:
            ++num2;
            num1 = -1071862908;
            continue;
          case 21:
label_30:
            str1 = JSONNode.\u206E⁭⁮‍​⁯‏‎‭⁯⁯‪⁪⁪‌⁯‌⁪⁯⁪⁫⁫‍‭⁯‌‌‏⁫⁫⁬⁪‭⁮⁪‭⁪⁭‭‫‮(str1, "\\t");
            num1 = -665086701;
            continue;
          case 22:
            str1 = JSONNode.\u206E⁭⁮‍​⁯‏‎‭⁯⁯‪⁪⁪‌⁯‌⁪⁯⁪⁫⁫‍‭⁯‌‌‏⁫⁫⁬⁪‭⁮⁪‭⁪⁭‭‫‮(str1, "\\\"");
            num1 = -95210399;
            continue;
          case 23:
            int num6;
            num1 = num6 = ch2 != '\\' ? -1823823144 : (num6 = -2077760667);
            continue;
          case 24:
            num1 = (int) num3 * -1758586129 ^ 489089233;
            continue;
          case 25:
            ch1 = JSONNode.\u202E⁪‪‮‪⁯⁬‮⁮‫⁯​‭⁮⁭‎‮‍‏‭⁮‬⁭‫‎‬‮⁮​⁯‬⁯‎‌‌​‬​‫⁬‮(str2, num2);
            ch3 = ch1;
            num1 = -1448317673;
            continue;
          case 26:
            goto label_1;
          case 27:
            num1 = (int) num3 * -2019159011 ^ -1293759439;
            continue;
          case 28:
            num1 = (int) num3 * -288782381 ^ -946485095;
            continue;
          case 29:
            num1 = (int) num3 * -568665259 ^ 1143767144;
            continue;
          default:
            goto label_32;
        }
      }
label_32:
      return str3;
    }

    public static JSONNode Parse(string aJSON)
    {
label_1:
      int num1 = 1492399296;
      bool flag1;
      char ch1;
      Stack<JSONNode> jsonNodeStack;
      JSONNode jsonNode1;
      string aKey;
      int num2;
      char ch2;
      string aItem;
      char ch3;
      bool flag2;
      bool flag3;
      char ch4;
      bool flag4;
      bool flag5;
      bool flag6;
      char ch5;
      bool flag7;
      JSONNode jsonNode2;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 1477117973)) % 139U)
        {
          case 0:
            int num4 = ch1 > 'f' ? -451735138 : (num4 = -1593523198);
            num1 = num4 ^ (int) num3 * -82414169;
            continue;
          case 1:
            int num5;
            num1 = num5 = !flag3 ? 1353607824 : (num5 = 368831835);
            continue;
          case 2:
            num1 = (int) num3 * 1447266569 ^ 76801079;
            continue;
          case 3:
            num1 = (int) num3 * 1706701179 ^ 810820840;
            continue;
          case 4:
            aItem = "";
            num1 = (int) num3 * 184767154 ^ -1582094321;
            continue;
          case 5:
            string str1 = aItem;
            ch3 = JSONNode.\u202E⁪‪‮‪⁯⁬‮⁮‫⁯​‭⁮⁭‎‮‍‏‭⁮‬⁭‫‎‬‮⁮​⁯‬⁯‎‌‌​‬​‫⁬‮(aJSON, num2);
            string str2 = ch3.ToString();
            aItem = JSONNode.\u206E⁭⁮‍​⁯‏‎‭⁯⁯‪⁪⁪‌⁯‌⁪⁯⁪⁫⁫‍‭⁯‌‌‏⁫⁫⁬⁪‭⁮⁪‭⁪⁭‭‫‮(str1, str2);
            num1 = (int) num3 * 309075764 ^ -1082085025;
            continue;
          case 6:
            int num6 = flag1 ? 337487980 : (num6 = 1560277853);
            num1 = num6 ^ (int) num3 * -1339217172;
            continue;
          case 7:
label_51:
            num1 = 126312110;
            continue;
          case 8:
            int num7;
            num1 = num7 = ch1 == 'f' ? 2107651145 : (num7 = 569441256);
            continue;
          case 9:
            int num8;
            num1 = num8 = JSONNode.\u202D⁫⁪⁮‌‪‪⁮‍⁫⁮‮⁮⁮⁮‍‪‌​⁮‮‮‪‭⁯​‏‬‫‫‭‭‍‌‏⁯⁭⁫‭‭‮(aKey, "") ? 1657316312 : (num8 = 891948210);
            continue;
          case 10:
            aItem = JSONNode.\u206E⁭⁮‍​⁯‏‎‭⁯⁯‪⁪⁪‌⁯‌⁪⁯⁪⁫⁫‍‭⁯‌‌‏⁫⁫⁬⁪‭⁮⁪‭⁪⁭‭‫‮(aItem, "\n");
            num1 = 1660155486;
            continue;
          case 11:
            num1 = (int) num3 * 1513089148 ^ -2053178741;
            continue;
          case 12:
            num1 = (int) num3 * -2084237817 ^ 1470040043;
            continue;
          case 13:
label_64:
            int num9;
            num1 = num9 = !flag3 ? 1695165007 : (num9 = 606066887);
            continue;
          case 14:
            int num10 = jsonNodeStack.Count > 0 ? 1372299406 : (num10 = 842157867);
            num1 = num10 ^ (int) num3 * 363150708;
            continue;
          case 15:
            ch2 = JSONNode.\u202E⁪‪‮‪⁯⁬‮⁮‫⁯​‭⁮⁭‎‮‍‏‭⁮‬⁭‫‎‬‮⁮​⁯‬⁯‎‌‌​‬​‫⁬‮(aJSON, num2);
            ch1 = ch2;
            num1 = (int) num3 * 1815997643 ^ -1313461799;
            continue;
          case 16:
            flag5 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 1315774063 ^ 1694779933;
            continue;
          case 17:
            int num11 = flag4 ? 1415103101 : (num11 = 861847662);
            num1 = num11 ^ (int) num3 * 679378490;
            continue;
          case 18:
            num1 = (int) num3 * -793572754 ^ -87171446;
            continue;
          case 19:
            num1 = (int) num3 * -1197197813 ^ -967158416;
            continue;
          case 20:
            int num12;
            num1 = num12 = JSONNode.\u202D⁫⁪⁮‌‪‪⁮‍⁫⁮‮⁮⁮⁮‍‪‌​⁮‮‮‪‭⁯​‏‬‫‫‭‭‍‌‏⁯⁭⁫‭‭‮(aItem, "") ? 1203593902 : (num12 = 402950194);
            continue;
          case 21:
            num1 = (int) num3 * 872485139 ^ 418798720;
            continue;
          case 22:
            aKey = JSONNode.\u206D⁯⁯⁭⁫⁪‮‍⁯‍‭‌‭‏‎‭⁪​‮‫​‪⁯⁬⁬⁬‪‪⁬‪⁪​⁪‏‫​‫​⁫‮(aKey);
            num1 = (int) num3 * -2037127967 ^ 2063595054;
            continue;
          case 23:
            aKey = JSONNode.\u206D⁯⁯⁭⁫⁪‮‍⁯‍‭‌‭‏‎‭⁪​‮‫​‪⁯⁬⁬⁬‪‪⁬‪⁪​⁪‏‫​‫​⁫‮(aKey);
            num1 = (int) num3 * 1825249317 ^ 1665077826;
            continue;
          case 24:
            int num13 = ch4 > ' ' ? -1224691853 : (num13 = -325350657);
            num1 = num13 ^ (int) num3 * -1060973966;
            continue;
          case 25:
            aKey = "";
            aItem = "";
            num1 = 1458175610;
            continue;
          case 26:
            int num14 = ch1 != 'b' ? -1165342184 : (num14 = -975716676);
            num1 = num14 ^ (int) num3 * 2081071449;
            continue;
          case 27:
            num1 = (int) num3 * -464941736 ^ -1405527204;
            continue;
          case 28:
            num1 = (int) num3 * -1513805388 ^ 1409308615;
            continue;
          case 29:
            num1 = 402950194;
            continue;
          case 30:
            num1 = (int) num3 * 2084601046 ^ -1911276812;
            continue;
          case 31:
            num1 = (int) num3 * 807397080 ^ 1962274269;
            continue;
          case 32:
            aItem = JSONNode.\u206E⁭⁮‍​⁯‏‎‭⁯⁯‪⁪⁪‌⁯‌⁪⁯⁪⁫⁫‍‭⁯‌‌‏⁫⁫⁬⁪‭⁮⁪‭⁪⁭‭‫‮(aItem, "\f");
            num1 = 1660155486;
            continue;
          case 33:
            switch (ch1)
            {
              case 'r':
                goto label_117;
              case 's':
                goto label_79;
              case 't':
                goto label_13;
              case 'u':
                goto label_51;
              default:
                num1 = 1745839055;
                continue;
            }
          case 34:
          case 51:
          case 54:
          case 72:
          case 107:
label_98:
            ++num2;
            num1 = 1574059567;
            continue;
          case 35:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -1251536286 ^ 691392341;
            continue;
          case 36:
            num1 = 2022923560;
            continue;
          case 37:
            num1 = (int) num3 * -1157473198 ^ -2791508;
            continue;
          case 38:
            num1 = 1823207265;
            continue;
          case 39:
            int num15;
            num1 = num15 = ch4 != ' ' ? 1586254518 : (num15 = 1362211656);
            continue;
          case 41:
            num1 = (int) num3 * -169527412 ^ 546320307;
            continue;
          case 42:
            switch (ch4)
            {
              case '[':
                goto label_66;
              case '\\':
                goto label_136;
              case ']':
                goto label_64;
              default:
                num1 = 1101816209;
                continue;
            }
          case 43:
            flag3 = false;
            num1 = (int) num3 * -974050123 ^ -1072343834;
            continue;
          case 44:
            string str3 = aItem;
            ch3 = JSONNode.\u202E⁪‪‮‪⁯⁬‮⁮‫⁯​‭⁮⁭‎‮‍‏‭⁮‬⁭‫‎‬‮⁮​⁯‬⁯‎‌‌​‬​‫⁬‮(aJSON, num2);
            string str4 = ch3.ToString();
            aItem = JSONNode.\u206E⁭⁮‍​⁯‏‎‭⁯⁯‪⁪⁪‌⁯‌⁪⁯⁪⁫⁫‍‭⁯‌‌‏⁫⁫⁬⁪‭⁮⁪‭⁪⁭‭‫‮(str3, str4);
            num1 = (int) num3 * -1037229766 ^ -1360086181;
            continue;
          case 45:
            jsonNodeStack.Pop();
            num1 = 1194139204;
            continue;
          case 46:
            num1 = (int) num3 * 326088949 ^ 1219550791;
            continue;
          case 47:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -154151854 ^ -571071582;
            continue;
          case 48:
            flag2 = flag3;
            num1 = 247719325;
            continue;
          case 49:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 1692220783 ^ 642888498;
            continue;
          case 50:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 1894968644 ^ 434920576;
            continue;
          case 52:
            num1 = (int) num3 * 959498885 ^ 701899459;
            continue;
          case 53:
            num1 = (int) num3 * -2106086299 ^ -1583687818;
            continue;
          case 55:
            num1 = 2141425357;
            continue;
          case 56:
            switch (ch4)
            {
              case '\t':
                goto label_91;
              case '\n':
              case '\r':
                goto label_98;
              case '\v':
              case '\f':
                goto label_50;
              default:
                num1 = (int) num3 * 1791514516 ^ 1731408203;
                continue;
            }
          case 57:
            flag4 = flag3;
            num1 = 231064376;
            continue;
          case 58:
            int num16;
            num1 = num16 = ch4 == '{' ? 1846037426 : (num16 = 2018043253);
            continue;
          case 59:
            int num17;
            num1 = num17 = ch4 != ',' ? 1517931219 : (num17 = 1914390038);
            continue;
          case 60:
            goto label_134;
          case 61:
            int num18 = flag7 ? 604072976 : (num18 = 1264841319);
            num1 = num18 ^ (int) num3 * -1811810520;
            continue;
          case 62:
            num1 = (int) num3 * 150112871 ^ -1815592354;
            continue;
          case 63:
            int num19;
            num1 = num19 = ch4 != '}' ? 1186165255 : (num19 = 1666610132);
            continue;
          case 64:
            num1 = (int) num3 * -1305459958 ^ 2489296;
            continue;
          case 65:
            num1 = (int) num3 * -922767022 ^ -1077795529;
            continue;
          case 66:
            jsonNode2 = jsonNode1;
            num1 = 1842798927;
            continue;
          case 67:
            num1 = (int) num3 * -1535676467 ^ 1817442741;
            continue;
          case 68:
            num1 = (int) num3 * 153638046 ^ -661396308;
            continue;
          case 69:
            int num20 = !(jsonNode1 is JSONArray) ? 1103130361 : (num20 = 1305292918);
            num1 = num20 ^ (int) num3 * 366689991;
            continue;
          case 70:
label_117:
            aItem = JSONNode.\u206E⁭⁮‍​⁯‏‎‭⁯⁯‪⁪⁪‌⁯‌⁪⁯⁪⁫⁫‍‭⁯‌‌‏⁫⁫⁬⁪‭⁮⁪‭⁪⁭‭‫‮(aItem, "\r");
            num1 = 183049078;
            continue;
          case 71:
            string str5 = aItem;
            ch3 = JSONNode.\u202E⁪‪‮‪⁯⁬‮⁮‫⁯​‭⁮⁭‎‮‍‏‭⁮‬⁭‫‎‬‮⁮​⁯‬⁯‎‌‌​‬​‫⁬‮(aJSON, num2);
            string str6 = ch3.ToString();
            aItem = JSONNode.\u206E⁭⁮‍​⁯‏‎‭⁯⁯‪⁪⁪‌⁯‌⁪⁯⁪⁫⁫‍‭⁯‌‌‏⁫⁫⁬⁪‭⁮⁪‭⁪⁭‭‫‮(str5, str6);
            num1 = (int) num3 * 1987456270 ^ 1109284851;
            continue;
          case 73:
            ch4 = ch5;
            int num21 = ch4 > ',' ? -1674395457 : (num21 = -242470411);
            num1 = num21 ^ (int) num3 * 611904821;
            continue;
          case 74:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * 20303673 ^ -10307327;
            continue;
          case 75:
            flag3 = !flag3;
            num1 = 942274839;
            continue;
          case 76:
            aKey = aItem;
            num1 = 657481578;
            continue;
          case 77:
            num1 = (int) num3 * -330766435 ^ -1932780521;
            continue;
          case 78:
            num1 = (int) num3 * 955949792 ^ 590884900;
            continue;
          case 79:
            int num22 = jsonNode1 != (object) null ? 1764503158 : (num22 = 559694614);
            num1 = num22 ^ (int) num3 * -1418504933;
            continue;
          case 80:
            aKey = "";
            num1 = 1173832822;
            continue;
          case 81:
            int num23;
            num1 = num23 = JSONNode.\u202D⁫⁪⁮‌‪‪⁮‍⁫⁮‮⁮⁮⁮‍‪‌​⁮‮‮‪‭⁯​‏‬‫‫‭‭‍‌‏⁯⁭⁫‭‭‮(aKey, "") ? 1281527679 : (num23 = 275247012);
            continue;
          case 82:
label_91:
            flag1 = flag3;
            num1 = 574811494;
            continue;
          case 83:
            aKey = JSONNode.\u206D⁯⁯⁭⁫⁪‮‍⁯‍‭‌‭‏‎‭⁪​‮‫​‪⁯⁬⁬⁬‪‪⁬‪⁪​⁪‏‫​‫​⁫‮(aKey);
            flag6 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 1482419356 ^ 903536565;
            continue;
          case 84:
            num1 = 961647227;
            continue;
          case 85:
            string str7 = aItem;
            ch3 = JSONNode.\u202E⁪‪‮‪⁯⁬‮⁮‫⁯​‭⁮⁭‎‮‍‏‭⁮‬⁭‫‎‬‮⁮​⁯‬⁯‎‌‌​‬​‫⁬‮(aJSON, num2);
            string str8 = ch3.ToString();
            aItem = JSONNode.\u206E⁭⁮‍​⁯‏‎‭⁯⁯‪⁪⁪‌⁯‌⁪⁯⁪⁫⁫‍‭⁯‌‌‏⁫⁫⁬⁪‭⁮⁪‭⁪⁭‭‫‮(str7, str8);
            num1 = (int) num3 * -487717146 ^ 142108715;
            continue;
          case 86:
label_79:
            aItem = JSONNode.\u206E⁭⁮‍​⁯‏‎‭⁯⁯‪⁪⁪‌⁯‌⁪⁯⁪⁫⁫‍‭⁯‌‌‏⁫⁫⁬⁪‭⁮⁪‭⁪⁭‭‫‮(aItem, ch2.ToString());
            num1 = 1063769233;
            continue;
          case 87:
            aItem = "";
            num1 = (int) num3 * 8419921 ^ -762142652;
            continue;
          case 88:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -2031524814 ^ -953746080;
            continue;
          case 89:
            int num24;
            num1 = num24 = num2 < JSONNode.\u202A‬‌⁭‫​⁫⁭‍‭‬⁬⁮‫⁬‍⁫​​​⁫‪‎⁫⁭⁭⁫‌⁪⁮⁭‭‎‪‪‮​‎‫‭‮(aJSON) ? 740315922 : (num24 = 2107523184);
            continue;
          case 90:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -1553982856 ^ -87843088;
            continue;
          case 91:
            int num25 = !(jsonNode1 != (object) null) ? -1181200901 : (num25 = -1591569664);
            num1 = num25 ^ (int) num3 * -2049834196;
            continue;
          case 92:
            aItem = "";
            num1 = (int) num3 * 1938253041 ^ -2085565540;
            continue;
          case 93:
            goto label_1;
          case 94:
            string str9 = aItem;
            ch3 = JSONNode.\u202E⁪‪‮‪⁯⁬‮⁮‫⁯​‭⁮⁭‎‮‍‏‭⁮‬⁭‫‎‬‮⁮​⁯‬⁯‎‌‌​‬​‫⁬‮(aJSON, num2);
            string str10 = ch3.ToString();
            aItem = JSONNode.\u206E⁭⁮‍​⁯‏‎‭⁯⁯‪⁪⁪‌⁯‌⁪⁯⁪⁫⁫‍‭⁯‌‌‏⁫⁫⁬⁪‭⁮⁪‭⁪⁭‭‫‮(str9, str10);
            num1 = (int) num3 * -156534520 ^ -553762161;
            continue;
          case 95:
            int num26 = JSONNode.\u202D⁫⁪⁮‌‪‪⁮‍⁫⁮‮⁮⁮⁮‍‪‌​⁮‮‮‪‭⁯​‏‬‫‫‭‭‍‌‏⁯⁭⁫‭‭‮(aItem, "") ? 1689460557 : (num26 = 1056728833);
            num1 = num26 ^ (int) num3 * 665057369;
            continue;
          case 96:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num3 * -1976055550 ^ 99789595;
            continue;
          case 97:
            int num27 = flag6 ? 446199155 : (num27 = 1687514347);
            num1 = num27 ^ (int) num3 * -175514629;
            continue;
          case 98:
label_66:
            int num28;
            num1 = num28 = flag3 ? 45068294 : (num28 = 1903367308);
            continue;
          case 99:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            num1 = 615039925;
            continue;
          case 100:
            num1 = (int) num3 * 108038566 ^ 695638516;
            continue;
          case 101:
            num1 = (int) num3 * -1436168250 ^ -41962043;
            continue;
          case 102:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num1 = 745031753;
            continue;
          case 103:
            int num29;
            num1 = num29 = ch1 != 'n' ? 1912910737 : (num29 = 126289419);
            continue;
          case 104:
label_136:
            ++num2;
            int num30;
            num1 = num30 = flag3 ? 1155955615 : (num30 = 2070684547);
            continue;
          case 105:
            aKey = "";
            num1 = 180875238;
            continue;
          case 106:
            aKey = "";
            num1 = (int) num3 * -953909348 ^ -561760353;
            continue;
          case 108:
            num1 = (int) num3 * 685401151 ^ 2087914771;
            continue;
          case 109:
            num2 = 0;
            num1 = (int) num3 * 1009070096 ^ -1066934027;
            continue;
          case 110:
            int num31 = flag3 ? 1311808458 : (num31 = 384919966);
            num1 = num31 ^ (int) num3 * -1162929397;
            continue;
          case 111:
label_13:
            aItem = JSONNode.\u206E⁭⁮‍​⁯‏‎‭⁯⁯‪⁪⁪‌⁯‌⁪⁯⁪⁫⁫‍‭⁯‌‌‏⁫⁫⁬⁪‭⁮⁪‭⁪⁭‭‫‮(aItem, "\t");
            num1 = 134890854;
            continue;
          case 112:
            string s = JSONNode.\u206D‪⁮‪⁬⁯‫‫⁬​‪⁪⁭​‮‫‮⁪‭​‪‍‫‫⁯⁯​‎‪‍⁪⁯​‌⁪⁯⁭‬⁭⁭‮(aJSON, num2 + 1, 4);
            string str11 = aItem;
            ch3 = (char) int.Parse(s, NumberStyles.AllowHexSpecifier);
            string str12 = ch3.ToString();
            aItem = JSONNode.\u206E⁭⁮‍​⁯‏‎‭⁯⁯‪⁪⁪‌⁯‌⁪⁯⁪⁫⁫‍‭⁯‌‌‏⁫⁫⁬⁪‭⁮⁪‭⁪⁭‭‫‮(str11, str12);
            num2 += 4;
            num1 = (int) num3 * -1930245035 ^ -1383586231;
            continue;
          case 113:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 1195006414 ^ -2111144743;
            continue;
          case 114:
            int num32 = jsonNode1 is JSONArray ? 800857814 : (num32 = 699634879);
            num1 = num32 ^ (int) num3 * -625176297;
            continue;
          case 115:
            num1 = 2070684547;
            continue;
          case 116:
            aItem = "";
            num1 = (int) num3 * -2001462920 ^ 1417778079;
            continue;
          case 117:
            int num33 = ch4 != ':' ? 1145925978 : (num33 = 525744988);
            num1 = num33 ^ (int) num3 * -1028903765;
            continue;
          case 118:
            flag7 = JSONNode.\u202D⁫⁪⁮‌‪‪⁮‍⁫⁮‮⁮⁮⁮‍‪‌​⁮‮‮‪‭⁯​‏‬‫‫‭‭‍‌‏⁯⁭⁫‭‭‮(aKey, "");
            num1 = 1812044288;
            continue;
          case 119:
            int num34 = !flag5 ? -1847987789 : (num34 = -1712606214);
            num1 = num34 ^ (int) num3 * -1393901501;
            continue;
          case 120:
            string str13 = aItem;
            ch3 = JSONNode.\u202E⁪‪‮‪⁯⁬‮⁮‫⁯​‭⁮⁭‎‮‍‏‭⁮‬⁭‫‎‬‮⁮​⁯‬⁯‎‌‌​‬​‫⁬‮(aJSON, num2);
            string str14 = ch3.ToString();
            aItem = JSONNode.\u206E⁭⁮‍​⁯‏‎‭⁯⁯‪⁪⁪‌⁯‌⁪⁯⁪⁫⁫‍‭⁯‌‌‏⁫⁫⁬⁪‭⁮⁪‭⁪⁭‭‫‮(str13, str14);
            num1 = (int) num3 * 2050491350 ^ 962797607;
            continue;
          case 121:
            num1 = (int) num3 * 1095996844 ^ 2142213898;
            continue;
          case 122:
            num1 = (int) num3 * 811312095 ^ 1592300865;
            continue;
          case 123:
            int num35;
            num1 = num35 = jsonNodeStack.Count == 0 ? 1622690741 : (num35 = 340602561);
            continue;
          case 124:
            num1 = (int) num3 * -2052943348 ^ 1768675631;
            continue;
          case 125:
            int num36 = !flag2 ? -1106583229 : (num36 = -399274937);
            num1 = num36 ^ (int) num3 * -682217257;
            continue;
          case 126:
            int num37;
            num1 = num37 = !JSONNode.\u202D⁫⁪⁮‌‪‪⁮‍⁫⁮‮⁮⁮⁮‍‪‌​⁮‮‮‪‭⁯​‏‬‫‫‭‭‍‌‏⁯⁭⁫‭‭‮(aKey, "") ? 317212258 : (num37 = 1746644399);
            continue;
          case (uint) sbyte.MaxValue:
            aKey = "";
            num1 = 910054183;
            continue;
          case 128:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -1663880049 ^ 347033887;
            continue;
          case 129:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 215111243 ^ 1170820892;
            continue;
          case 130:
            aItem = JSONNode.\u206E⁭⁮‍​⁯‏‎‭⁯⁯‪⁪⁪‌⁯‌⁪⁯⁪⁫⁫‍‭⁯‌‌‏⁫⁫⁬⁪‭⁮⁪‭⁪⁭‭‫‮(aItem, "\b");
            num1 = 1660155486;
            continue;
          case 131:
            num1 = (int) num3 * 569143043 ^ -715118638;
            continue;
          case 132:
            jsonNodeStack = new Stack<JSONNode>();
            num1 = (int) num3 * -1153553816 ^ -755017097;
            continue;
          case 133:
label_50:
            string str15 = aItem;
            ch3 = JSONNode.\u202E⁪‪‮‪⁯⁬‮⁮‫⁯​‭⁮⁭‎‮‍‏‭⁮‬⁭‫‎‬‮⁮​⁯‬⁯‎‌‌​‬​‫⁬‮(aJSON, num2);
            string str16 = ch3.ToString();
            aItem = JSONNode.\u206E⁭⁮‍​⁯‏‎‭⁯⁯‪⁪⁪‌⁯‌⁪⁯⁪⁫⁫‍‭⁯‌‌‏⁫⁫⁬⁪‭⁮⁪‭⁪⁭‭‫‮(str15, str16);
            num1 = 942274839;
            continue;
          case 134:
            aItem = "";
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 1368020891 ^ -1699987426;
            continue;
          case 135:
            ch5 = JSONNode.\u202E⁪‪‮‪⁯⁬‮⁮‫⁯​‭⁮⁭‎‮‍‏‭⁮‬⁭‫‎‬‮⁮​⁯‬⁯‎‌‌​‬​‫⁬‮(aJSON, num2);
            num1 = (int) num3 * -1147207279 ^ -1040150068;
            continue;
          case 136:
            int num38;
            num1 = num38 = ch4 != '"' ? 1292937227 : (num38 = 1490147196);
            continue;
          case 137:
            goto label_55;
          case 138:
            int num39;
            num1 = num39 = ch4 <= ']' ? 2093400801 : (num39 = 890127229);
            continue;
          default:
            goto label_139;
        }
      }
label_55:
      throw JSONNode.\u206E⁯⁮‌‌⁭⁫⁮⁬‏​⁬‍‬‎‎‫⁭⁭‬‪‬‮‌⁪‍⁭‮‎⁬‮‪‌⁬‬‪‭⁮⁬‮("JSON Parse: Too many closing brackets");
label_134:
      throw JSONNode.\u206E⁯⁮‌‌⁭⁫⁮⁬‏​⁬‍‬‎‎‫⁭⁭‬‪‬‮‌⁪‍⁭‮‎⁬‮‪‌⁬‬‪‭⁮⁬‮("JSON Parse: Quotation marks seems to be messed up.");
label_139:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
label_1:
      int num1 = 633057136;
      BinaryWriter aWriter;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 166812339)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            this.Serialize(aWriter);
            num1 = (int) num2 * 946234734 ^ 1833043835;
            continue;
          case 2:
            goto label_3;
          case 3:
            aWriter = JSONNode.\u202B⁭‎‍‫⁫⁬⁭⁪‎⁮⁮‫‮⁬‬‍⁫‍⁭‫‬⁭⁪‭‬‫​⁫‎‫⁯⁭⁪‮‮⁯‫‮‍‮(aData);
            num1 = (int) num2 * 1406819916 ^ 1142557086;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u206E⁯⁮‌‌⁭⁫⁮⁬‏​⁬‍‬‎‎‫⁭⁭‬‪‬‮‌⁪‍⁭‮‎⁬‮‪‌⁬‬‪‭⁮⁬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u206E⁯⁮‌‌⁭⁫⁮⁬‏​⁬‍‬‎‎‫⁭⁭‬‪‬‮‌⁪‍⁭‮‎⁬‮‪‌⁬‬‪‭⁮⁬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u206E⁯⁮‌‌⁭⁫⁮⁬‏​⁬‍‬‎‎‫⁭⁭‬‪‬‮‌⁪‍⁭‮‎⁬‮‪‌⁬‬‪‭⁮⁬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
      JSONNode.\u202C‎⁯‎‍⁪⁫‬⁪⁭‬⁬‭⁫​⁯‫⁫⁭‍⁪‫‬‫⁭⁭⁬⁯‪‫‫‍⁫‏‫‏⁫⁫‮‏‮(JSONNode.\u206F⁮‪⁪⁫⁫‌⁮⁫⁫‏⁮⁯‮‮⁬‫⁫​⁪⁭‮‮‏‏‍⁫‬​⁯‭‌‮​‍‫⁯⁬⁪⁮‮((FileSystemInfo) JSONNode.\u200C⁬‮‌‭‌‮‭‎‏⁭⁯‎‭‪⁫‫⁮‪⁬‏⁮⁭⁬‭‬‬​‮‍⁭‭⁪‎‬‫‏‏‬‫‮(JSONNode.\u200E‏‌⁫‬‬‫⁬‫‪⁬⁪‏‏‏⁭‫‎⁫‪‎‬‮‏‮‎‫⁪⁭⁯⁪⁪‍‭⁪‏‭‎‍⁬‮(aFileName))));
      FileStream aData = JSONNode.\u200B⁪‫⁮⁭⁫⁮‍⁪⁯‭‫‪⁬⁮‮‍‍‌​⁮⁭‌⁪⁯‫‭⁭‏‪⁯‭​‬‍⁯⁪⁯‎‮(aFileName);
      try
      {
label_2:
        int num1 = -1526610683;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2114910432)) % 4U)
          {
            case 0:
              goto label_2;
            case 1:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * -1057041964 ^ 111510435;
              continue;
            case 2:
              goto label_10;
            case 3:
              num1 = (int) num2 * 1362372348 ^ 330236826;
              continue;
            default:
              goto label_6;
          }
        }
label_10:
        return;
label_6:;
      }
      finally
      {
        if (aData != null)
        {
label_8:
          int num3 = -290422641;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -2114910432)) % 4U)
            {
              case 0:
                num3 = (int) num4 * -245652388 ^ -1289239487;
                continue;
              case 2:
                goto label_8;
              case 3:
                JSONNode.\u206E‪​⁭‎⁯‏⁪‎‫⁪‏⁮‪‌⁮‮⁭‭‪‏‭​⁫⁮⁬⁬‌‮⁪​⁬⁪‪⁬⁭⁫‬⁬⁫‮((IDisposable) aData);
                num3 = (int) num4 * -961537200 ^ -1691736560;
                continue;
              default:
                goto label_13;
            }
          }
        }
label_13:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u202A​‎‪‪⁬⁬‏‍‮⁪⁯‮​⁯‏⁫⁫‪‍‌‫‍‌‎⁮‫⁭‍⁭⁭‎⁬‎⁫‭‮‪⁪⁪‮();
      string base64;
      try
      {
        this.SaveToStream((Stream) aData);
label_2:
        int num1 = -1090834325;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1897897478)) % 6U)
          {
            case 0:
              JSONNode.\u206B⁭​‮⁯⁪⁮‪‪‫⁪‮‭⁮⁬‍‎⁮⁬‮‬⁯⁯‌‎​⁫⁬‏‪⁪‌⁭⁯⁭⁮⁫‮‎‎‮((Stream) aData, 0L);
              num1 = (int) num2 * 1555496885 ^ -2146744898;
              continue;
            case 1:
              num1 = (int) num2 * 1914018498 ^ -554794900;
              continue;
            case 2:
              num1 = (int) num2 * 860327288 ^ -1289075665;
              continue;
            case 4:
              goto label_2;
            case 5:
              base64 = JSONNode.\u206D‪‫‭‭​⁭‌‌⁯‮⁮‍⁯⁯⁯⁭‫​‌‬⁪⁮‍⁬​‏⁪‫‍⁭⁭‏‏⁪‌‮‬⁬⁮‮(JSONNode.\u200D‪⁫​⁪‌⁫‌‎‮⁯‮‫‫⁭‫‎⁪⁪⁪‍‎‏‎⁫‪⁬‪‪‎‫‍⁭⁪‫‮⁪⁪⁯⁫‮(aData));
              num1 = (int) num2 * -491035642 ^ -1844324643;
              continue;
            default:
              goto label_13;
          }
        }
      }
      finally
      {
        if (aData != null)
        {
label_9:
          int num3 = -1214415701;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -1897897478)) % 3U)
            {
              case 1:
                JSONNode.\u206E‪​⁭‎⁯‏⁪‎‫⁪‏⁮‪‌⁮‮⁭‭‪‏‭​⁫⁮⁬⁬‌‮⁪​⁬⁪‪⁬⁭⁫‬⁬⁫‮((IDisposable) aData);
                num3 = (int) num4 * -828717825 ^ 226409074;
                continue;
              case 2:
                goto label_9;
              default:
                goto label_12;
            }
          }
        }
label_12:;
      }
label_13:
      return base64;
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
      JSONBinaryTag jsonBinaryTag1 = (JSONBinaryTag) JSONNode.\u206D‫‍⁬⁬⁪‬‍⁭‏⁯⁬⁭⁬‪⁭‎⁯⁯⁯‫⁮⁬‎‮‭‏‏‬‍‬‫‍‭‪‬‮⁬‪⁮‮(aReader);
label_1:
      int num1 = 315173136;
      int num2;
      JSONClass jsonClass;
      string aKey;
      JSONNode aItem;
      int num3;
      JSONNode jsonNode;
      JSONArray jsonArray;
      JSONBinaryTag jsonBinaryTag2;
      bool flag1;
      int num4;
      bool flag2;
      int num5;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ 1294385327)) % 39U)
        {
          case 0:
            goto label_1;
          case 1:
            ++num2;
            num1 = (int) num6 * -41439047 ^ -404354271;
            continue;
          case 2:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * -900405407 ^ -1091778584;
            continue;
          case 3:
            goto label_34;
          case 4:
            num1 = (int) num6 * -1212694246 ^ 2041013020;
            continue;
          case 5:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206C‌‮‭‮‍​‌‭⁭‍⁮‏‍⁪‍​‏‎⁬​⁯‌‌⁬⁪‮‏⁬‭⁪‏‭⁫‬‬⁭‪⁭‏‮(aReader));
            num1 = (int) num6 * -685465490 ^ -1179663193;
            continue;
          case 6:
            jsonArray = new JSONArray();
            num1 = (int) num6 * -932888645 ^ 2010531892;
            continue;
          case 7:
            num1 = (int) num6 * 1509791648 ^ -1858806048;
            continue;
          case 8:
            num1 = (int) num6 * 661298716 ^ 1123886648;
            continue;
          case 9:
            num1 = (int) num6 * 1810023210 ^ -529314613;
            continue;
          case 10:
label_26:
            num1 = 831169360;
            continue;
          case 11:
label_38:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202A‫⁭⁪⁭⁪​‌‪‏⁫⁯‏⁯‪‍‭‌‭⁮‌‫⁮‎‮‏‭‍‮​‌‍‭‬‍‌⁯⁯‍⁫‮(aReader));
            num1 = 188610479;
            continue;
          case 12:
            aKey = JSONNode.\u206C‌‮‭‮‍​‌‭⁭‍⁮‏‍⁪‍​‏‎⁬​⁯‌‌⁬⁪‮‏⁬‭⁪‏‭⁫‬‬⁭‪⁭‏‮(aReader);
            aItem = JSONNode.Deserialize(aReader);
            num1 = 1926972756;
            continue;
          case 13:
label_33:
            num4 = JSONNode.\u206D‎‭⁪‬‭‮‏​⁬‮‎‌​⁭⁫‮‬⁭‎⁮‮‍‪‪‭​​‌‬⁭⁪​‬⁬‍‪‌⁫⁯‮(aReader);
            num1 = 32475538;
            continue;
          case 14:
            num1 = (int) num6 * 1372305531 ^ -576497760;
            continue;
          case 16:
label_30:
            num5 = JSONNode.\u206D‎‭⁪‬‭‮‏​⁬‮‎‌​⁭⁫‮‬⁭‎⁮‮‍‪‪‭​​‌‬⁭⁪​‬⁬‍‪‌⁫⁯‮(aReader);
            jsonClass = new JSONClass();
            num1 = 870411895;
            continue;
          case 17:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200F‭⁫‏‬⁮⁮‮‮⁯⁫​⁪‌‌‭‬‮‫‎‍⁮‌‍⁪⁪‪⁪⁫‍‭‎‭‍‪⁬⁬‬‍‪‮(aReader));
            num1 = (int) num6 * 908708305 ^ -1359856205;
            continue;
          case 18:
            int num7 = flag2 ? -1303053079 : (num7 = -1022605446);
            num1 = num7 ^ (int) num6 * -987770395;
            continue;
          case 19:
            num1 = (int) num6 * -626783286 ^ 206998448;
            continue;
          case 20:
            num1 = (int) num6 * 544928048 ^ -801743876;
            continue;
          case 21:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200B‮‫⁮⁬‫‍‌‍‎‫⁪⁮‮⁮‎⁮‎‍‪‍‮‫‫‭⁫⁪‍⁬⁪⁮‭‍‮⁪⁮‎‌‮⁯‮(aReader));
            num1 = (int) num6 * -1418875989 ^ -2121657313;
            continue;
          case 22:
            num3 = 0;
            num1 = (int) num6 * -1302016275 ^ -997764033;
            continue;
          case 23:
            ++num3;
            num1 = (int) num6 * -899702961 ^ 1372272410;
            continue;
          case 24:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * 1837642103 ^ -212282608;
            continue;
          case 25:
            flag2 = num2 < num4;
            num1 = 1975527968;
            continue;
          case 26:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206D‎‭⁪‬‭‮‏​⁬‮‎‌​⁭⁫‮‬⁭‎⁮‮‍‪‪‭​​‌‬⁭⁪​‬⁬‍‪‌⁫⁯‮(aReader));
            num1 = (int) num6 * 2094529771 ^ 275329352;
            continue;
          case 27:
label_12:
            num1 = 710139606;
            continue;
          case 28:
            flag1 = num3 < num5;
            num1 = 570305867;
            continue;
          case 29:
            num1 = (int) num6 * -813177590 ^ 384061904;
            continue;
          case 30:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            num1 = 1216777150;
            continue;
          case 31:
            num2 = 0;
            num1 = (int) num6 * 146217487 ^ -1498531194;
            continue;
          case 32:
            jsonBinaryTag2 = jsonBinaryTag1;
            num1 = (int) num6 * 1503943435 ^ -884906144;
            continue;
          case 33:
            switch (jsonBinaryTag2)
            {
              case JSONBinaryTag.Array:
                goto label_33;
              case JSONBinaryTag.Class:
                goto label_30;
              case JSONBinaryTag.Value:
                goto label_26;
              case JSONBinaryTag.IntValue:
                goto label_12;
              case JSONBinaryTag.DoubleValue:
                goto label_38;
              case JSONBinaryTag.BoolValue:
                goto label_17;
              case JSONBinaryTag.FloatValue:
                goto label_20;
              default:
                num1 = (int) num6 * 231558535 ^ -1020276036;
                continue;
            }
          case 34:
            jsonClass.Add(aKey, aItem);
            num1 = (int) num6 * 549409429 ^ -1906516239;
            continue;
          case 35:
            num1 = (int) num6 * 830770268 ^ 204968916;
            continue;
          case 36:
            int num8 = flag1 ? 1331038891 : (num8 = 1454835242);
            num1 = num8 ^ (int) num6 * -506267974;
            continue;
          case 37:
label_20:
            num1 = 1446413848;
            continue;
          case 38:
label_17:
            num1 = 1656121550;
            continue;
          default:
            goto label_41;
        }
      }
label_34:
      throw JSONNode.\u206E⁯⁮‌‌⁭⁫⁮⁬‏​⁬‍‬‎‎‫⁭⁭‬‪‬‮‌⁪‍⁭‮‎⁬‮‪‌⁬‬‪‭⁮⁬‮(JSONNode.\u206E⁭⁮‍​⁯‏‎‭⁯⁯‪⁪⁪‌⁯‌⁪⁯⁪⁫⁫‍‭⁯‌‌‏⁫⁫⁬⁪‭⁮⁪‭⁪⁭‭‫‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag1.ToString()));
label_41:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u206E⁯⁮‌‌⁭⁫⁮⁬‏​⁬‍‬‎‎‫⁭⁭‬‪‬‮‌⁪‍⁭‮‎⁬‮‪‌⁬‬‪‭⁮⁬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u206E⁯⁮‌‌⁭⁫⁮⁬‏​⁬‍‬‎‎‫⁭⁭‬‪‬‮‌⁪‍⁭‮‎⁬‮‪‌⁬‬‪‭⁮⁬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u206E⁯⁮‌‌⁭⁫⁮⁬‏​⁬‍‬‎‎‫⁭⁭‬‪‬‮‌⁪‍⁭‮‎⁬‮‪‌⁬‬‪‭⁮⁬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u206D‌⁯⁪⁮‪⁬‎‍‮⁪‭‍⁫‮​‭‌⁬⁯‮‏‌⁭⁪⁬‌⁬⁪⁭⁫‎⁮‭‎‪‭‫⁭‮(aData);
      try
      {
        return JSONNode.Deserialize(aReader);
      }
      finally
      {
        if (aReader != null)
        {
label_3:
          int num1 = -1789287887;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ -1400495413)) % 3U)
            {
              case 1:
                JSONNode.\u206E‪​⁭‎⁯‏⁪‎‫⁪‏⁮‪‌⁮‮⁭‭‪‏‭​⁫⁮⁬⁬‌‮⁪​⁬⁪‪⁬⁭⁫‬⁬⁫‮((IDisposable) aReader);
                num1 = (int) num2 * -1173150891 ^ 1509243118;
                continue;
              case 2:
                goto label_3;
              default:
                goto label_6;
            }
          }
        }
label_6:;
      }
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u206C‪‎⁬‮⁫⁬‮⁪‮‎⁬​⁮⁯‫‪‏⁫‫‬‮‍​‫‌​‍‍⁬⁭‭‏‏​‏‏⁫⁬‎‮(aFileName);
      try
      {
        return JSONNode.LoadFromStream((Stream) aData);
      }
      finally
      {
        if (aData != null)
        {
label_3:
          int num1 = 1104343621;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ 938223049)) % 3U)
            {
              case 1:
                JSONNode.\u206E‪​⁭‎⁯‏⁪‎‫⁪‏⁮‪‌⁮‮⁭‭‪‏‭​⁫⁮⁬⁬‌‮⁪​⁬⁪‪⁬⁭⁫‬⁬⁫‮((IDisposable) aData);
                num1 = (int) num2 * -355582701 ^ 2004114816;
                continue;
              case 2:
                goto label_3;
              default:
                goto label_6;
            }
          }
        }
label_6:;
      }
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
label_1:
      int num1 = -708729005;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -469903852)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            MemoryStream aData = JSONNode.\u202B‌⁬‮‌‭⁮‮⁯‏‎‏⁬‍‭‌‫⁬‌‮‏⁮‌‫‬⁫⁯‮⁭‫⁫​⁬‌‎⁭​⁮‌‪‮(JSONNode.\u200D​⁭‪‮‭⁬‫‫‏⁪⁯⁭‬‌⁪‍⁬‮‍⁪‏⁭‮⁭‎​‎‫‫⁬‪‬‬‭‭‪⁮⁮⁮‮(aBase64));
            JSONNode.\u206B⁭​‮⁯⁪⁮‪‪‫⁪‮‭⁮⁬‍‎⁮⁬‮‬⁯⁯‌‎​⁫⁬‏‪⁪‌⁭⁯⁭⁮⁫‮‎‎‮((Stream) aData, 0L);
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * 1985817088 ^ 1159291162;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    static CultureInfo \u202E‮‬⁮⁯‫‭⁬‬⁫⁪‮‮‫⁪⁭​⁮⁬‎‏‫‌‮⁮‮‏⁮‮‪‌‎⁪⁬⁪‭⁮‪‍‭‮() => CultureInfo.InvariantCulture;

    static bool \u206A‮⁪‌​‌⁫⁭⁪⁭‪⁯‎‭‮‫⁪‭⁭⁫‫‏‌​‌​⁮⁪⁮​⁮‍⁪‍‎⁪‌⁫‬‬‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u206C⁮​‌‮⁮​‌‮⁪⁯⁯‍‮‮‭‬​⁪‍⁫‏‫⁯⁫‬⁭‭⁭‪⁭‏‮‭⁫‬⁮⁬‫‮() => base.GetHashCode();

    static char \u202E⁪‪‮‪⁯⁬‮⁮‫⁯​‭⁮⁭‎‮‍‏‭⁮‬⁭‫‎‬‮⁮​⁯‬⁯‎‌‌​‬​‫⁬‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u206E⁭⁮‍​⁯‏‎‭⁯⁯‪⁪⁪‌⁯‌⁪⁯⁪⁫⁫‍‭⁯‌‌‏⁫⁫⁬⁪‭⁮⁪‭⁪⁭‭‫‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u202A‬‌⁭‫​⁫⁭‍‭‬⁬⁮‫⁬‍⁫​​​⁫‪‎⁫⁭⁭⁫‌⁪⁮⁭‭‎‪‪‮​‎‫‭‮([In] string obj0) => obj0.Length;

    static string \u206D⁯⁯⁭⁫⁪‮‍⁯‍‭‌‭‏‎‭⁪​‮‫​‪⁯⁬⁬⁬‪‪⁬‪⁪​⁪‏‫​‫​⁫‮([In] string obj0) => obj0.Trim();

    static bool \u202D⁫⁪⁮‌‪‪⁮‍⁫⁮‮⁮⁮⁮‍‪‌​⁮‮‮‪‭⁯​‏‬‫‫‭‭‍‌‏⁯⁭⁫‭‭‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u206E⁯⁮‌‌⁭⁫⁮⁬‏​⁬‍‬‎‎‫⁭⁭‬‪‬‮‌⁪‍⁭‮‎⁬‮‪‌⁬‬‪‭⁮⁬‮([In] string obj0) => new Exception(obj0);

    static string \u206D‪⁮‪⁬⁯‫‫⁬​‪⁪⁭​‮‫‮⁪‭​‪‍‫‫⁯⁯​‎‪‍⁪⁯​‌⁪⁯⁭‬⁭⁭‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u202B⁭‎‍‫⁫⁬⁭⁪‎⁮⁮‫‮⁬‬‍⁫‍⁭‫‬⁭⁪‭‬‫​⁫‎‫⁯⁭⁪‮‮⁯‫‮‍‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u200E‏‌⁫‬‬‫⁬‫‪⁬⁪‏‏‏⁭‫‎⁫‪‎‬‮‏‮‎‫⁪⁭⁯⁪⁪‍‭⁪‏‭‎‍⁬‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u200C⁬‮‌‭‌‮‭‎‏⁭⁯‎‭‪⁫‫⁮‪⁬‏⁮⁭⁬‭‬‬​‮‍⁭‭⁪‎‬‫‏‏‬‫‮([In] FileInfo obj0) => obj0.Directory;

    static string \u206F⁮‪⁪⁫⁫‌⁮⁫⁫‏⁮⁯‮‮⁬‫⁫​⁪⁭‮‮‏‏‍⁫‬​⁯‭‌‮​‍‫⁯⁬⁪⁮‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u202C‎⁯‎‍⁪⁫‬⁪⁭‬⁬‭⁫​⁯‫⁫⁭‍⁪‫‬‫⁭⁭⁬⁯‪‫‫‍⁫‏‫‏⁫⁫‮‏‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u200B⁪‫⁮⁭⁫⁮‍⁪⁯‭‫‪⁬⁮‮‍‍‌​⁮⁭‌⁪⁯‫‭⁭‏‪⁯‭​‬‍⁯⁪⁯‎‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u206E‪​⁭‎⁯‏⁪‎‫⁪‏⁮‪‌⁮‮⁭‭‪‏‭​⁫⁮⁬⁬‌‮⁪​⁬⁪‪⁬⁭⁫‬⁬⁫‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u202A​‎‪‪⁬⁬‏‍‮⁪⁯‮​⁯‏⁫⁫‪‍‌‫‍‌‎⁮‫⁭‍⁭⁭‎⁬‎⁫‭‮‪⁪⁪‮() => new MemoryStream();

    static void \u206B⁭​‮⁯⁪⁮‪‪‫⁪‮‭⁮⁬‍‎⁮⁬‮‬⁯⁯‌‎​⁫⁬‏‪⁪‌⁭⁯⁭⁮⁫‮‎‎‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u200D‪⁫​⁪‌⁫‌‎‮⁯‮‫‫⁭‫‎⁪⁪⁪‍‎‏‎⁫‪⁬‪‪‎‫‍⁭⁪‫‮⁪⁪⁯⁫‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u206D‪‫‭‭​⁭‌‌⁯‮⁮‍⁯⁯⁯⁭‫​‌‬⁪⁮‍⁬​‏⁪‫‍⁭⁭‏‏⁪‌‮‬⁬⁮‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u206D‫‍⁬⁬⁪‬‍⁭‏⁯⁬⁭⁬‪⁭‎⁯⁯⁯‫⁮⁬‎‮‭‏‏‬‍‬‫‍‭‪‬‮⁬‪⁮‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u206D‎‭⁪‬‭‮‏​⁬‮‎‌​⁭⁫‮‬⁭‎⁮‮‍‪‪‭​​‌‬⁭⁪​‬⁬‍‪‌⁫⁯‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u206C‌‮‭‮‍​‌‭⁭‍⁮‏‍⁪‍​‏‎⁬​⁯‌‌⁬⁪‮‏⁬‭⁪‏‭⁫‬‬⁭‪⁭‏‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u202A‫⁭⁪⁭⁪​‌‪‏⁫⁯‏⁯‪‍‭‌‭⁮‌‫⁮‎‮‏‭‍‮​‌‍‭‬‍‌⁯⁯‍⁫‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u200B‮‫⁮⁬‫‍‌‍‎‫⁪⁮‮⁮‎⁮‎‍‪‍‮‫‫‭⁫⁪‍⁬⁪⁮‭‍‮⁪⁮‎‌‮⁯‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u200F‭⁫‏‬⁮⁮‮‮⁯⁫​⁪‌‌‭‬‮‫‎‍⁮‌‍⁪⁪‪⁪⁫‍‭‎‭‍‪⁬⁬‬‍‪‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u206D‌⁯⁪⁮‪⁬‎‍‮⁪‭‍⁫‮​‭‌⁬⁯‮‏‌⁭⁪⁬‌⁬⁪⁭⁫‎⁮‭‎‪‭‫⁭‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u206C‪‎⁬‮⁫⁬‮⁪‮‎⁬​⁮⁯‫‪‏⁫‫‬‮‍​‫‌​‍‍⁬⁭‭‏‏​‏‏⁫⁬‎‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u200D​⁭‪‮‭⁬‫‫‏⁪⁯⁭‬‌⁪‍⁬‮‍⁪‏⁭‮⁭‎​‎‫‫⁬‪‬‬‭‭‪⁮⁮⁮‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u202B‌⁬‮‌‭⁮‮⁯‏‎‏⁬‍‭‌‫⁬‌‮‏⁮‌‫‬⁫⁯‮⁭‫⁫​⁬‌‎⁭​⁮‌‪‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
