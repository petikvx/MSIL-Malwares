// Decompiled with JetBrains decompiler
// Type: DirectX.Capture.DirectShowPropertyPage
// Assembly: p, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 91D63E37-42E0-404C-97F4-07116ACD2D57
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00000-msil\Trojan.MSIL.KillAV.ao-27eafab1bfbe5012a9dd5eb6a22a5e09a25b91a1b79c55ba29e0e7098dcc6f9f.exe

using DShowNET;
using System;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace DirectX.Capture
{
  public class DirectShowPropertyPage : PropertyPage
  {
    protected DShowNET.ISpecifyPropertyPages specifyPropertyPages;

    public DirectShowPropertyPage(string name, DShowNET.ISpecifyPropertyPages specifyPropertyPages)
    {
      this.Name = name;
      this.SupportsPersisting = false;
      this.specifyPropertyPages = specifyPropertyPages;
    }

    public override void Show(Control owner)
    {
      DsCAUUID pPages = new DsCAUUID();
      try
      {
        int num = this.specifyPropertyPages.GetPages(out pPages);
        object specifyPropertyPages = (object) this.specifyPropertyPages;
        num = DirectShowPropertyPage.OleCreatePropertyFrame(owner.Handle, 30, 30, (string) null, 1, ref specifyPropertyPages, pPages.cElems, pPages.pElems, 0, 0, IntPtr.Zero);
      }
      finally
      {
        if (pPages.pElems != IntPtr.Zero)
          Marshal.FreeCoTaskMem(pPages.pElems);
      }
    }

    public new void Dispose()
    {
      if (this.specifyPropertyPages != null)
        Marshal.ReleaseComObject((object) this.specifyPropertyPages);
      this.specifyPropertyPages = (DShowNET.ISpecifyPropertyPages) null;
    }

    [DllImport("olepro32.dll", CharSet = CharSet.Unicode)]
    private static extern int OleCreatePropertyFrame(
      IntPtr hwndOwner,
      int x,
      int y,
      string lpszCaption,
      int cObjects,
      [MarshalAs(UnmanagedType.Interface), In] ref object ppUnk,
      int cPages,
      IntPtr pPageClsID,
      int lcid,
      int dwReserved,
      IntPtr pvReserved);
  }
}
