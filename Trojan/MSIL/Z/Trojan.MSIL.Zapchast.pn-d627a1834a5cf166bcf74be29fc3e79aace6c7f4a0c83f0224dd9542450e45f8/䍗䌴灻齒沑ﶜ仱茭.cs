// Decompiled with JetBrains decompiler
// Type: 䍗䌴灻齒沑ﶜ仱茭
// Assembly: Mains, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 87A24014-4235-4CFD-B5E9-8BC1446D37FE
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Trojan.MSIL.Zapchast.pn-d627a1834a5cf166bcf74be29fc3e79aace6c7f4a0c83f0224dd9542450e45f8.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.IO;
using System.Security.Cryptography;
using System.Text;

internal class 䍗䌴灻齒沑ﶜ仱茭
{
  public static object ﬃ學쑌槁觠煕\uF02E矫(string _param0, string _param1)
  {
    RijndaelManaged rijndaelManaged = new RijndaelManaged();
    byte[] salt = new byte[8]
    {
      (byte) 1,
      (byte) 2,
      (byte) 3,
      (byte) 4,
      (byte) 5,
      (byte) 6,
      (byte) 7,
      (byte) 8
    };
    Rfc2898DeriveBytes rfc2898DeriveBytes = new Rfc2898DeriveBytes(_param1, salt);
    rijndaelManaged.Key = rfc2898DeriveBytes.GetBytes(rijndaelManaged.Key.Length);
    rijndaelManaged.IV = rfc2898DeriveBytes.GetBytes(rijndaelManaged.IV.Length);
    MemoryStream memoryStream = new MemoryStream();
    CryptoStream cryptoStream = new CryptoStream((Stream) memoryStream, rijndaelManaged.CreateDecryptor(), CryptoStreamMode.Write);
    try
    {
      byte[] buffer = Convert.FromBase64String(_param0);
      cryptoStream.Write(buffer, 0, buffer.Length);
      cryptoStream.Close();
      _param0 = Encoding.UTF8.GetString(memoryStream.ToArray());
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
    return (object) _param0;
  }
}
