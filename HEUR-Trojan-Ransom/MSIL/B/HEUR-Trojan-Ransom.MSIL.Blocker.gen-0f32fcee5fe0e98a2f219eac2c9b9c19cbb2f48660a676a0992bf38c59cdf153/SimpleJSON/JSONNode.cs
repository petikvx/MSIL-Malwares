// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: TypeLimitingDeserializationBind, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 1D6D78DD-B812-498A-928B-6D9E4655E6A7
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-0f32fcee5fe0e98a2f219eac2c9b9c19cbb2f48660a676a0992bf38c59cdf153.exe

using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 959036104;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 454852249)) % 4U)
          {
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -409791082 ^ 412822512;
              continue;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * -1533785386 ^ -2076474117;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -2010066596;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1375530169)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * -2114603032 ^ -915092918;
              continue;
            case 3:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 1218616692 ^ -1622986055;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual string Value
    {
      get
      {
label_1:
        int num1 = 1559562170;
        string str;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 127767607)) % 4U)
          {
            case 1:
              str = "";
              num1 = (int) num2 * -1745070888 ^ -1368280003;
              continue;
            case 2:
              num1 = (int) num2 * -446923234 ^ -296635737;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return str;
      }
      set
      {
      }
    }

    public virtual int Count => 0;

    public virtual void Add(JSONNode aItem) => this.Add("", aItem);

    public virtual JSONNode Remove(string aKey)
    {
label_1:
      int num1 = -1692013852;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1379522521)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * -1249222086 ^ -17165480;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(int aIndex) => (JSONNode) null;

    public virtual JSONNode Remove(JSONNode aNode)
    {
      JSONNode jsonNode = aNode;
label_1:
      int num1 = 113632359;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 297988926)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -850923846 ^ 1418806700;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual IEnumerable<JSONNode> Childs => (IEnumerable<JSONNode>) new JSONNode.\u003Cget_Childs\u003Ed__17(-2)
    {
      \u003C\u003E4__this = this
    };

    public IEnumerable<JSONNode> DeepChilds
    {
      get
      {
        JSONNode.\u003Cget_DeepChilds\u003Ed__19 getDeepChildsD19 = new JSONNode.\u003Cget_DeepChilds\u003Ed__19(-2);
label_1:
        int num1 = 104450868;
        IEnumerable<JSONNode> deepChilds;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1884482758)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              getDeepChildsD19.\u003C\u003E4__this = this;
              deepChilds = (IEnumerable<JSONNode>) getDeepChildsD19;
              num1 = (int) num2 * 974405047 ^ 1433764313;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return deepChilds;
      }
    }

    public override string ToString() => nameof (JSONNode);

    public virtual string ToString(string aPrefix)
    {
label_1:
      int num1 = -905788114;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2028108245)) % 4U)
        {
          case 0:
            num1 = (int) num2 * 46421143 ^ -1764495972;
            continue;
          case 1:
            str = nameof (JSONNode);
            num1 = (int) num2 * -1907507379 ^ -587838246;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public virtual int AsInt
    {
      get
      {
label_1:
        int num1 = -756890516;
        int asInt;
        int result;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -145990958)) % 8U)
          {
            case 0:
              flag = int.TryParse(this.Value, out result);
              num1 = (int) num2 * 2018735092 ^ 1007896351;
              continue;
            case 1:
              num1 = (int) num2 * 1592774385 ^ -825085264;
              continue;
            case 2:
              asInt = result;
              num1 = (int) num2 * -682146361 ^ -2143755889;
              continue;
            case 4:
              asInt = 0;
              num1 = -1187282301;
              continue;
            case 5:
              int num3 = flag ? 845866371 : (num3 = 1270000389);
              num1 = num3 ^ (int) num2 * -1802915441;
              continue;
            case 6:
              result = 0;
              num1 = (int) num2 * -1849378846 ^ -1607283586;
              continue;
            case 7:
              goto label_1;
            default:
              goto label_9;
          }
        }
label_9:
        return asInt;
      }
      set
      {
label_1:
        int num1 = 229659522;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1598367746)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Value = value.ToString();
              num1 = (int) num2 * -1252438220 ^ 583815898;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual float AsFloat
    {
      get
      {
label_1:
        int num1 = 141765195;
        float result;
        float asFloat;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1927855069)) % 8U)
          {
            case 1:
              asFloat = result;
              num1 = (int) num2 * -1546601053 ^ -1785521218;
              continue;
            case 2:
              flag = float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u206D‫‪⁮‍‪‍‌⁪‫‫⁪⁫‌‍‍‮⁯‬‌‮⁬‎⁫‮‏⁭‍​‭⁮⁪​‪⁬⁮‌‭‌‬‮(), out result);
              num1 = (int) num2 * -1786796056 ^ -1566325608;
              continue;
            case 3:
              num1 = (int) num2 * 1687544661 ^ -1565465774;
              continue;
            case 4:
              asFloat = 0.0f;
              num1 = 478665078;
              continue;
            case 5:
              int num3 = flag ? -1252278396 : (num3 = -1203021679);
              num1 = num3 ^ (int) num2 * -356241792;
              continue;
            case 6:
              result = 0.0f;
              num1 = (int) num2 * -1680092953 ^ 569528909;
              continue;
            case 7:
              goto label_1;
            default:
              goto label_9;
          }
        }
label_9:
        return asFloat;
      }
      set
      {
label_1:
        int num1 = 1669266942;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1399928710)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Value = value.ToString();
              num1 = (int) num2 * -2006875852 ^ 139542690;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual double AsDouble
    {
      get
      {
        double result = 0.0;
        bool flag = double.TryParse(this.Value, out result);
label_1:
        int num1 = 858252869;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 634074209)) % 7U)
          {
            case 0:
              num1 = (int) num2 * 2085848811 ^ -1926704547;
              continue;
            case 1:
              asDouble = result;
              num1 = (int) num2 * 1999378998 ^ -1983420207;
              continue;
            case 2:
              asDouble = 0.0;
              num1 = 1036387251;
              continue;
            case 3:
              goto label_1;
            case 4:
              num1 = (int) num2 * -166718726 ^ -453789847;
              continue;
            case 5:
              int num3 = flag ? 965763885 : (num3 = 1120654723);
              num1 = num3 ^ (int) num2 * -203873195;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asDouble;
      }
      set
      {
        this.Value = value.ToString();
label_1:
        int num1 = 495338355;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 34602214)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -1712163319 ^ -1230168852;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual bool AsBool
    {
      get
      {
label_1:
        int num1 = 1894418290;
        bool result;
        bool asBool;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 984580471)) % 6U)
          {
            case 0:
              int num3 = !flag ? 956520701 : (num3 = 1040313329);
              num1 = num3 ^ (int) num2 * 1818596374;
              continue;
            case 1:
              result = false;
              flag = bool.TryParse(this.Value, out result);
              num1 = (int) num2 * 1756085037 ^ -1640040130;
              continue;
            case 2:
              asBool = !JSONNode.\u200D⁬⁭‎‎⁪⁫⁯⁮‪⁮‌‭⁪‪⁯‭‮‮‌‏‎‌‌‌‌⁪‍‮⁬‫‏‍‏‭⁫⁮‭‪‏‮(this.Value);
              num1 = 1464851914;
              continue;
            case 3:
              goto label_1;
            case 4:
              asBool = result;
              num1 = (int) num2 * -889483725 ^ 2135845576;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asBool;
      }
      set
      {
label_1:
        int num1 = -2047962486;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -792612905)) % 4U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Value = value ? "true" : "false";
              num1 = -1045076271;
              continue;
            case 2:
              num1 = (int) num2 * -1589753412 ^ 1272366515;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public virtual JSONArray AsArray => this as JSONArray;

    public virtual JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = 2142074084;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 856753874)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -154536688 ^ 316719589;
              continue;
            case 2:
              asObject = this as JSONClass;
              num1 = (int) num2 * -1897080756 ^ 597571943;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s)
    {
      JSONNode jsonNode = (JSONNode) new JSONData(s);
label_1:
      int num1 = 386597164;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 689414553)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -1347258889 ^ 790173636;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public static implicit operator string(JSONNode d)
    {
label_1:
      int num1 = 1196733603;
      string str1;
      while (true)
      {
        uint num2;
        string str2;
        switch ((num2 = (uint) (num1 ^ 939430704)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1068118236 ^ 309696310;
            continue;
          case 2:
            str2 = d.Value;
            break;
          case 3:
            if (!(d == (object) null))
            {
              num1 = (int) num2 * 755830095 ^ 1600930776;
              continue;
            }
            str2 = (string) null;
            break;
          default:
            goto label_9;
        }
        str1 = str2;
        num1 = 1286769862;
      }
label_9:
      return str1;
    }

    public static bool operator ==(JSONNode a, object b)
    {
label_1:
      int num1 = -1450905406;
      bool flag;
      while (true)
      {
        uint num2;
        int num3;
        switch ((num2 = (uint) (num1 ^ -1566791716)) % 8U)
        {
          case 0:
            num1 = (int) num2 * -1507785627 ^ 640673062;
            continue;
          case 1:
            flag = (object) a == b;
            num1 = -742016849;
            continue;
          case 3:
            num1 = (int) num2 * -713353758 ^ -1578454560;
            continue;
          case 4:
            goto label_1;
          case 5:
            flag = true;
            num1 = (int) num2 * 1458253368 ^ -901462716;
            continue;
          case 6:
            if (b != null)
            {
              num3 = 0;
              break;
            }
            num1 = (int) num2 * -1680960738 ^ 1102096575;
            continue;
          case 7:
            num3 = a is JSONLazyCreator ? 1 : 0;
            break;
          default:
            goto label_12;
        }
        int num4;
        num1 = num4 = num3 != 0 ? -1797282447 : (num4 = -1079587843);
      }
label_12:
      return flag;
    }

    public static bool operator !=(JSONNode a, object b)
    {
label_1:
      int num1 = -1993537502;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1487251727)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * 821668838 ^ -606247140;
            continue;
          case 3:
            flag = !(a == b);
            num1 = (int) num2 * -1672223468 ^ 659295439;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = -1663832877;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1531338912)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 1786633500 ^ -19351786;
            continue;
          case 3:
            flag = (object) this == obj;
            num1 = (int) num2 * 1587013933 ^ 199196166;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override int GetHashCode()
    {
      int hashCode = this.\u200C​‏⁭‪‬⁪‌‍⁫‍‮‪‮‏‍‪‫⁪‏‭⁮‏‮‌‍⁯‍‫‏⁭⁫⁮‪‮⁪⁫⁮⁯⁭‮();
label_1:
      int num1 = -1599800301;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -108546146)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1350053115 ^ -832084964;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return hashCode;
    }

    internal static string Escape(string aText)
    {
label_1:
      int num1 = 38445241;
      string str1;
      string str2;
      int num2;
      char ch1;
      string str3;
      char ch2;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 955899987)) % 30U)
        {
          case 0:
label_27:
            str1 = JSONNode.\u206A‎‮⁪‌‫‌‌‎‭‭‪‪‮‭​‎⁫‬⁫⁪‏⁮⁯‍‍‫⁭‎‪‭‪⁭‎⁪‍‭⁪‏‪‮(str1, ch2.ToString());
            num1 = 1524436894;
            continue;
          case 1:
            num1 = (int) num3 * 1596045481 ^ 1788461193;
            continue;
          case 2:
            int num4;
            num1 = num4 = ch1 == '\\' ? 276861705 : (num4 = 1194329842);
            continue;
          case 3:
            num1 = (int) num3 * -1414672834 ^ 1882887016;
            continue;
          case 4:
label_13:
            str1 = JSONNode.\u206A‎‮⁪‌‫‌‌‎‭‭‪‪‮‭​‎⁫‬⁫⁪‏⁮⁯‍‍‫⁭‎‪‭‪⁭‎⁪‍‭⁪‏‪‮(str1, "\\b");
            num1 = 38072818;
            continue;
          case 5:
            ++num2;
            num1 = 810206069;
            continue;
          case 6:
            str1 = JSONNode.\u206A‎‮⁪‌‫‌‌‎‭‭‪‪‮‭​‎⁫‬⁫⁪‏⁮⁯‍‍‫⁭‎‪‭‪⁭‎⁪‍‭⁪‏‪‮(str1, "\\\\");
            num1 = 38072818;
            continue;
          case 7:
            ch1 = ch2;
            num1 = (int) num3 * 838047928 ^ 2108005018;
            continue;
          case 8:
            num1 = (int) num3 * 1778064371 ^ 281816260;
            continue;
          case 9:
            switch (ch1)
            {
              case '\b':
                goto label_13;
              case '\t':
                goto label_4;
              case '\n':
                goto label_14;
              case '\v':
                goto label_27;
              case '\f':
                goto label_19;
              case '\r':
                goto label_31;
              default:
                num1 = (int) num3 * -2061277088 ^ 1727188488;
                continue;
            }
          case 10:
            str1 = "";
            str2 = aText;
            num2 = 0;
            num1 = (int) num3 * -2098905579 ^ 151140856;
            continue;
          case 11:
            num1 = (int) num3 * 60129840 ^ 1796997186;
            continue;
          case 12:
            int num5;
            num1 = num5 = ch1 == '"' ? 282944268 : (num5 = 462565382);
            continue;
          case 13:
            ch2 = JSONNode.\u206C⁬‮‎​‌‎⁭‪⁯⁭‎⁯⁬⁭⁬⁭⁪‭‫⁭‎⁯‍‫​​⁮‎‍⁪‌⁬⁯⁭​‭‫‏⁬‮(str2, num2);
            num1 = 1275708769;
            continue;
          case 15:
            num1 = (int) num3 * -1904091496 ^ -684435655;
            continue;
          case 16:
label_19:
            str1 = JSONNode.\u206A‎‮⁪‌‫‌‌‎‭‭‪‪‮‭​‎⁫‬⁫⁪‏⁮⁯‍‍‫⁭‎‪‭‪⁭‎⁪‍‭⁪‏‪‮(str1, "\\f");
            num1 = 1339668113;
            continue;
          case 17:
            str1 = JSONNode.\u206A‎‮⁪‌‫‌‌‎‭‭‪‪‮‭​‎⁫‬⁫⁪‏⁮⁯‍‍‫⁭‎‪‭‪⁭‎⁪‍‭⁪‏‪‮(str1, "\\\"");
            num1 = 455852282;
            continue;
          case 18:
            goto label_1;
          case 19:
            str3 = str1;
            num1 = (int) num3 * -1846332782 ^ -483577795;
            continue;
          case 20:
            int num6;
            num1 = num6 = num2 < JSONNode.\u202B‮‬‪‮‏‏‎‌⁯‍⁯⁬⁭‫‏‍‎‍‍‪​‌‌⁭‎‌‏‬‫⁬‬​‍⁫⁯‪⁪‏⁮‮(str2) ? 535268480 : (num6 = 346282932);
            continue;
          case 21:
            num1 = (int) num3 * -403786289 ^ 255369666;
            continue;
          case 22:
            num1 = (int) num3 * -136239344 ^ 2117874706;
            continue;
          case 23:
            num1 = (int) num3 * -1123466068 ^ -2047057842;
            continue;
          case 24:
label_31:
            str1 = JSONNode.\u206A‎‮⁪‌‫‌‌‎‭‭‪‪‮‭​‎⁫‬⁫⁪‏⁮⁯‍‍‫⁭‎‪‭‪⁭‎⁪‍‭⁪‏‪‮(str1, "\\r");
            num1 = 1144587629;
            continue;
          case 25:
label_14:
            str1 = JSONNode.\u206A‎‮⁪‌‫‌‌‎‭‭‪‪‮‭​‎⁫‬⁫⁪‏⁮⁯‍‍‫⁭‎‪‭‪⁭‎⁪‍‭⁪‏‪‮(str1, "\\n");
            num1 = 1652381248;
            continue;
          case 26:
            num1 = (int) num3 * -1023707548 ^ -2037268934;
            continue;
          case 27:
            num1 = (int) num3 * 1309363996 ^ 353342851;
            continue;
          case 28:
label_4:
            str1 = JSONNode.\u206A‎‮⁪‌‫‌‌‎‭‭‪‪‮‭​‎⁫‬⁫⁪‏⁮⁯‍‍‫⁭‎‪‭‪⁭‎⁪‍‭⁪‏‪‮(str1, "\\t");
            num1 = 1881611216;
            continue;
          case 29:
            num1 = (int) num3 * 108408995 ^ 89395068;
            continue;
          default:
            goto label_32;
        }
      }
label_32:
      return str3;
    }

    public static JSONNode Parse(string aJSON)
    {
label_1:
      int num1 = -466242530;
      string aItem;
      bool flag1;
      string s;
      JSONNode jsonNode1;
      string aKey;
      bool flag2;
      int num2;
      bool flag3;
      char ch1;
      char ch2;
      bool flag4;
      bool flag5;
      bool flag6;
      char ch3;
      char ch4;
      Stack<JSONNode> jsonNodeStack;
      bool flag7;
      bool flag8;
      bool flag9;
      bool flag10;
      bool flag11;
      bool flag12;
      bool flag13;
      JSONNode jsonNode2;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -381402179)) % 152U)
        {
          case 0:
            num1 = (int) num3 * 556050087 ^ -1637061030;
            continue;
          case 1:
            num1 = (int) num3 * 582517638 ^ 2123176266;
            continue;
          case 2:
            num1 = (int) num3 * -44210077 ^ 1746999610;
            continue;
          case 3:
            flag13 = jsonNodeStack.Count == 0;
            num1 = -1331800441;
            continue;
          case 4:
            aItem = JSONNode.\u206A‎‮⁪‌‫‌‌‎‭‭‪‪‮‭​‎⁫‬⁫⁪‏⁮⁯‍‍‫⁭‎‪‭‪⁭‎⁪‍‭⁪‏‪‮(aItem, JSONNode.\u206C⁬‮‎​‌‎⁭‪⁯⁭‎⁯⁬⁭⁬⁭⁪‭‫⁭‎⁯‍‫​​⁮‎‍⁪‌⁬⁯⁭​‭‫‏⁬‮(aJSON, num2).ToString());
            num1 = (int) num3 * 2119157343 ^ -1059630924;
            continue;
          case 5:
            aItem = JSONNode.\u206A‎‮⁪‌‫‌‌‎‭‭‪‪‮‭​‎⁫‬⁫⁪‏⁮⁯‍‍‫⁭‎‪‭‪⁭‎⁪‍‭⁪‏‪‮(aItem, JSONNode.\u206C⁬‮‎​‌‎⁭‪⁯⁭‎⁯⁬⁭⁬⁭⁪‭‫⁭‎⁯‍‫​​⁮‎‍⁪‌⁬⁯⁭​‭‫‏⁬‮(aJSON, num2).ToString());
            num1 = (int) num3 * 1746472262 ^ -736497613;
            continue;
          case 6:
            num1 = (int) num3 * -1525399031 ^ 1482847814;
            continue;
          case 7:
            int num4 = ch2 <= 'f' ? 277938756 : (num4 = 1290732420);
            num1 = num4 ^ (int) num3 * -404778285;
            continue;
          case 8:
            int num5 = ch1 <= ' ' ? -408269056 : (num5 = -271170918);
            num1 = num5 ^ (int) num3 * 2131335163;
            continue;
          case 9:
            int num6;
            num1 = num6 = ch1 == ',' ? -699840791 : (num6 = -958698352);
            continue;
          case 10:
            num1 = (int) num3 * 571880212 ^ -489991492;
            continue;
          case 11:
            num1 = (int) num3 * 537901639 ^ 388564125;
            continue;
          case 12:
            num1 = -423985652;
            continue;
          case 13:
label_8:
            aItem = JSONNode.\u206A‎‮⁪‌‫‌‌‎‭‭‪‪‮‭​‎⁫‬⁫⁪‏⁮⁯‍‍‫⁭‎‪‭‪⁭‎⁪‍‭⁪‏‪‮(aItem, "\t");
            num1 = -687987969;
            continue;
          case 14:
            int num7;
            num1 = num7 = ch1 != '{' ? -22601288 : (num7 = -50226812);
            continue;
          case 15:
            int num8 = flag10 ? 1558419349 : (num8 = 1934732516);
            num1 = num8 ^ (int) num3 * 711531228;
            continue;
          case 16:
            num1 = (int) num3 * 168986209 ^ -716834829;
            continue;
          case 17:
label_85:
            s = JSONNode.\u202C‬‮‎⁫‪​⁪‏‎‍‫‬‍‍⁬‍⁫⁭‪‏‌‮⁭‍‭⁭‭‫‫‬‫​‭⁭‬‏⁯‬⁬‮(aJSON, num2 + 1, 4);
            num1 = -1412472142;
            continue;
          case 18:
            ch4 = JSONNode.\u206C⁬‮‎​‌‎⁭‪⁯⁭‎⁯⁬⁭⁬⁭⁪‭‫⁭‎⁯‍‫​​⁮‎‍⁪‌⁬⁯⁭​‭‫‏⁬‮(aJSON, num2);
            num1 = -129050290;
            continue;
          case 19:
            num1 = (int) num3 * 783394551 ^ 117363606;
            continue;
          case 20:
            aItem = JSONNode.\u206A‎‮⁪‌‫‌‌‎‭‭‪‪‮‭​‎⁫‬⁫⁪‏⁮⁯‍‍‫⁭‎‪‭‪⁭‎⁪‍‭⁪‏‪‮(aItem, "\b");
            num1 = -712693702;
            continue;
          case 21:
            aKey = JSONNode.\u202E‮‍‍‫⁫⁬‭‍‏‬⁬‬‭‏‏‍‌⁯⁯​‍‮⁮‮⁪‪‎⁮⁬‍‏⁪‫​⁮‎‫⁭⁮‮(aKey);
            flag11 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 866573400 ^ -713242628;
            continue;
          case 22:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -1907102736 ^ -107900001;
            continue;
          case 23:
label_50:
            aItem = JSONNode.\u206A‎‮⁪‌‫‌‌‎‭‭‪‪‮‭​‎⁫‬⁫⁪‏⁮⁯‍‍‫⁭‎‪‭‪⁭‎⁪‍‭⁪‏‪‮(aItem, JSONNode.\u206C⁬‮‎​‌‎⁭‪⁯⁭‎⁯⁬⁭⁬⁭⁪‭‫⁭‎⁯‍‫​​⁮‎‍⁪‌⁬⁯⁭​‭‫‏⁬‮(aJSON, num2).ToString());
            num1 = -266134998;
            continue;
          case 24:
            int num9 = flag12 ? 1698452379 : (num9 = 894252791);
            num1 = num9 ^ (int) num3 * 511054750;
            continue;
          case 25:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -1653620087 ^ 1952257383;
            continue;
          case 26:
            num1 = (int) num3 * -1839924976 ^ -1514980461;
            continue;
          case 27:
            num2 = 0;
            aItem = "";
            num1 = (int) num3 * -957013035 ^ -1074715294;
            continue;
          case 28:
label_116:
            aItem = JSONNode.\u206A‎‮⁪‌‫‌‌‎‭‭‪‪‮‭​‎⁫‬⁫⁪‏⁮⁯‍‍‫⁭‎‪‭‪⁭‎⁪‍‭⁪‏‪‮(aItem, "\r");
            num1 = -674241910;
            continue;
          case 29:
            num1 = (int) num3 * -385136855 ^ 702050265;
            continue;
          case 30:
            int num10;
            num1 = num10 = ch1 > ']' ? -1375008053 : (num10 = -766947252);
            continue;
          case 31:
            int num11;
            num1 = num11 = !JSONNode.\u206F‬⁭‍⁫⁮‫‎⁫⁭​⁮⁯​⁮‌‏⁭⁬‭‍‎‍⁫‪⁬‏⁯‬‍‎‪⁭⁪⁭‪⁬‌‏‏‮(aKey, "") ? -479044491 : (num11 = -203734601);
            continue;
          case 32:
          case 54:
          case 55:
          case 109:
          case 141:
label_68:
            ++num2;
            num1 = -813898921;
            continue;
          case 33:
            num1 = (int) num3 * -2070354961 ^ -887938459;
            continue;
          case 34:
            aKey = "";
            num1 = -2080124336;
            continue;
          case 35:
            num1 = (int) num3 * 1679553297 ^ -1734698180;
            continue;
          case 36:
            int num12 = ch2 != 'b' ? -608244451 : (num12 = -1672171363);
            num1 = num12 ^ (int) num3 * 1104444877;
            continue;
          case 37:
            num1 = (int) num3 * -1267526554 ^ 1782992509;
            continue;
          case 38:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * 267105627 ^ 931027663;
            continue;
          case 39:
            num1 = (int) num3 * -190362358 ^ -2070840427;
            continue;
          case 40:
            num1 = -13080827;
            continue;
          case 41:
            num1 = (int) num3 * -222884864 ^ 1381155763;
            continue;
          case 42:
            num1 = (int) num3 * -498759305 ^ 1671139549;
            continue;
          case 43:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 1707829422 ^ -1540048971;
            continue;
          case 44:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -597658765 ^ 1687022385;
            continue;
          case 45:
            goto label_48;
          case 46:
            aItem = JSONNode.\u206A‎‮⁪‌‫‌‌‎‭‭‪‪‮‭​‎⁫‬⁫⁪‏⁮⁯‍‍‫⁭‎‪‭‪⁭‎⁪‍‭⁪‏‪‮(aItem, "\f");
            num1 = -1975891673;
            continue;
          case 47:
            num1 = (int) num3 * 1350721740 ^ 547354158;
            continue;
          case 48:
            int num13 = !flag8 ? -277052283 : (num13 = -1795509344);
            num1 = num13 ^ (int) num3 * -2063751850;
            continue;
          case 49:
            aKey = "";
            aItem = "";
            int num14;
            num1 = num14 = jsonNodeStack.Count <= 0 ? -1727013787 : (num14 = -1797415455);
            continue;
          case 50:
            int num15 = !flag2 ? 267175617 : (num15 = 755350756);
            num1 = num15 ^ (int) num3 * -1339870407;
            continue;
          case 51:
            num1 = (int) num3 * 1789408428 ^ 1447095001;
            continue;
          case 52:
            aKey = "";
            aItem = "";
            jsonNode1 = jsonNodeStack.Peek();
            num1 = -2037919296;
            continue;
          case 53:
            num1 = (int) num3 * -1913769616 ^ 891536458;
            continue;
          case 56:
            int num16;
            num1 = num16 = !JSONNode.\u206F‬⁭‍⁫⁮‫‎⁫⁭​⁮⁯​⁮‌‏⁭⁬‭‍‎‍⁫‪⁬‏⁯‬‍‎‪⁭⁪⁭‪⁬‌‏‏‮(aKey, "") ? -57119707 : (num16 = -672293060);
            continue;
          case 57:
            num1 = -1334434377;
            continue;
          case 58:
            int num17;
            num1 = num17 = ch1 == ' ' ? -2059267783 : (num17 = -1522041419);
            continue;
          case 59:
            jsonNodeStack = new Stack<JSONNode>();
            num1 = (int) num3 * -1184212288 ^ -304312138;
            continue;
          case 60:
label_151:
            flag10 = flag2;
            num1 = -1578053430;
            continue;
          case 61:
            int num18 = !(jsonNode1 is JSONArray) ? 985839797 : (num18 = 45328719);
            num1 = num18 ^ (int) num3 * -2111067125;
            continue;
          case 62:
            num1 = -867453000;
            continue;
          case 63:
            aItem = JSONNode.\u206A‎‮⁪‌‫‌‌‎‭‭‪‪‮‭​‎⁫‬⁫⁪‏⁮⁯‍‍‫⁭‎‪‭‪⁭‎⁪‍‭⁪‏‪‮(aItem, ((char) int.Parse(s, NumberStyles.AllowHexSpecifier)).ToString());
            num1 = (int) num3 * 923499910 ^ -629080488;
            continue;
          case 64:
            int num19 = !flag7 ? 285018836 : (num19 = 920615174);
            num1 = num19 ^ (int) num3 * 993917880;
            continue;
          case 65:
            int num20;
            num1 = num20 = ch1 != '}' ? -722879508 : (num20 = -1527749471);
            continue;
          case 66:
            num1 = (int) num3 * -2117543193 ^ 292492653;
            continue;
          case 67:
            num1 = (int) num3 * -1140341042 ^ -848519793;
            continue;
          case 68:
            int num21;
            num1 = num21 = JSONNode.\u206F‬⁭‍⁫⁮‫‎⁫⁭​⁮⁯​⁮‌‏⁭⁬‭‍‎‍⁫‪⁬‏⁯‬‍‎‪⁭⁪⁭‪⁬‌‏‏‮(aKey, "") ? -1938621917 : (num21 = -1257382119);
            continue;
          case 69:
            aKey = JSONNode.\u202E‮‍‍‫⁫⁬‭‍‏‬⁬‬‭‏‏‍‌⁯⁯​‍‮⁮‮⁪‪‎⁮⁬‍‏⁪‫​⁮‎‫⁭⁮‮(aKey);
            num1 = (int) num3 * -765567417 ^ 123269033;
            continue;
          case 70:
            num1 = (int) num3 * 1219259161 ^ -1755014255;
            continue;
          case 71:
            num2 += 4;
            num1 = (int) num3 * -689686410 ^ -127737199;
            continue;
          case 72:
            num1 = (int) num3 * -1623529670 ^ -1877454228;
            continue;
          case 73:
            int num22 = ch1 == ':' ? 197155113 : (num22 = 1918246662);
            num1 = num22 ^ (int) num3 * 45330445;
            continue;
          case 74:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -1502908346 ^ -838946103;
            continue;
          case 75:
            num1 = (int) num3 * 2052023640 ^ 260061956;
            continue;
          case 76:
            jsonNodeStack.Pop();
            num1 = -946974453;
            continue;
          case 77:
            int num23;
            num1 = num23 = ch2 == 'f' ? -1770560709 : (num23 = -701403644);
            continue;
          case 78:
            int num24 = flag4 ? -264089159 : (num24 = -287319879);
            num1 = num24 ^ (int) num3 * 379350896;
            continue;
          case 79:
            num1 = (int) num3 * -168335136 ^ -1239752301;
            continue;
          case 80:
            goto label_128;
          case 81:
label_95:
            aItem = JSONNode.\u206A‎‮⁪‌‫‌‌‎‭‭‪‪‮‭​‎⁫‬⁫⁪‏⁮⁯‍‍‫⁭‎‪‭‪⁭‎⁪‍‭⁪‏‪‮(aItem, ch3.ToString());
            num1 = -276979301;
            continue;
          case 82:
            flag8 = JSONNode.\u206F‬⁭‍⁫⁮‫‎⁫⁭​⁮⁯​⁮‌‏⁭⁬‭‍‎‍⁫‪⁬‏⁯‬‍‎‪⁭⁪⁭‪⁬‌‏‏‮(aItem, "");
            num1 = -2076895491;
            continue;
          case 83:
            num1 = (int) num3 * 441779530 ^ -136642085;
            continue;
          case 84:
            int num25;
            num1 = num25 = flag2 ? -156013221 : (num25 = -421279537);
            continue;
          case 85:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 770175697 ^ -1288352789;
            continue;
          case 86:
            switch (ch2)
            {
              case 'r':
                goto label_116;
              case 's':
                goto label_95;
              case 't':
                goto label_8;
              case 'u':
                goto label_85;
              default:
                num1 = -772865435;
                continue;
            }
          case 87:
            num1 = (int) num3 * 2018549235 ^ -958045266;
            continue;
          case 88:
            num1 = (int) num3 * -1837980775 ^ -1447957983;
            continue;
          case 89:
            flag2 = !flag2;
            num1 = -1543669857;
            continue;
          case 90:
            aItem = "";
            num1 = (int) num3 * 890039176 ^ 1557234090;
            continue;
          case 91:
            num1 = (int) num3 * 508189362 ^ 1453273998;
            continue;
          case 92:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * 51004188 ^ -468682360;
            continue;
          case 93:
            num1 = (int) num3 * -1411183875 ^ 343168917;
            continue;
          case 94:
            num1 = (int) num3 * -100806901 ^ -1298514149;
            continue;
          case 95:
            int num26 = !flag9 ? 764044716 : (num26 = 1654581968);
            num1 = num26 ^ (int) num3 * -816896331;
            continue;
          case 96:
            aKey = aItem;
            num1 = -600074481;
            continue;
          case 97:
            int num27 = !flag11 ? -387699148 : (num27 = -1496871270);
            num1 = num27 ^ (int) num3 * 66174273;
            continue;
          case 98:
            int num28 = flag13 ? -447170480 : (num28 = -1686423895);
            num1 = num28 ^ (int) num3 * 663046136;
            continue;
          case 99:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            num1 = -786305829;
            continue;
          case 100:
            int num29;
            num1 = num29 = ch2 != 'n' ? -1621637180 : (num29 = -1085266487);
            continue;
          case 101:
            switch (ch1)
            {
              case '\t':
                goto label_151;
              case '\n':
              case '\r':
                goto label_68;
              case '\v':
              case '\f':
                goto label_50;
              default:
                num1 = (int) num3 * 1013444686 ^ -594243856;
                continue;
            }
          case 102:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 694678096 ^ -104317147;
            continue;
          case 103:
            num1 = (int) num3 * 86868415 ^ 1359511834;
            continue;
          case 104:
            aKey = "";
            aItem = "";
            num1 = -339513421;
            continue;
          case 105:
            flag7 = JSONNode.\u206F‬⁭‍⁫⁮‫‎⁫⁭​⁮⁯​⁮‌‏⁭⁬‭‍‎‍⁫‪⁬‏⁯‬‍‎‪⁭⁪⁭‪⁬‌‏‏‮(aKey, "");
            num1 = -985678051;
            continue;
          case 106:
            num1 = (int) num3 * 1382753155 ^ 222063453;
            continue;
          case 107:
            ch1 = ch4;
            num1 = (int) num3 * 1955425674 ^ -1374162916;
            continue;
          case 108:
label_24:
            flag5 = flag2;
            num1 = -1121020858;
            continue;
          case 110:
            aItem = JSONNode.\u206A‎‮⁪‌‫‌‌‎‭‭‪‪‮‭​‎⁫‬⁫⁪‏⁮⁯‍‍‫⁭‎‪‭‪⁭‎⁪‍‭⁪‏‪‮(aItem, JSONNode.\u206C⁬‮‎​‌‎⁭‪⁯⁭‎⁯⁬⁭⁬⁭⁪‭‫⁭‎⁯‍‫​​⁮‎‍⁪‌⁬⁯⁭​‭‫‏⁬‮(aJSON, num2).ToString());
            num1 = (int) num3 * -607900956 ^ -1400147492;
            continue;
          case 111:
            flag4 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -1563978379 ^ 1074471184;
            continue;
          case 112:
            num1 = -827466839;
            continue;
          case 113:
            aItem = JSONNode.\u206A‎‮⁪‌‫‌‌‎‭‭‪‪‮‭​‎⁫‬⁫⁪‏⁮⁯‍‍‫⁭‎‪‭‪⁭‎⁪‍‭⁪‏‪‮(aItem, JSONNode.\u206C⁬‮‎​‌‎⁭‪⁯⁭‎⁯⁬⁭⁬⁭⁪‭‫⁭‎⁯‍‫​​⁮‎‍⁪‌⁬⁯⁭​‭‫‏⁬‮(aJSON, num2).ToString());
            num1 = (int) num3 * -47906683 ^ -708318348;
            continue;
          case 114:
            aKey = JSONNode.\u202E‮‍‍‫⁫⁬‭‍‏‬⁬‬‭‏‏‍‌⁯⁯​‍‮⁮‮⁪‪‎⁮⁬‍‏⁪‫​⁮‎‫⁭⁮‮(aKey);
            int num30 = !(jsonNode1 is JSONArray) ? 1410207034 : (num30 = 923846215);
            num1 = num30 ^ (int) num3 * -1869112637;
            continue;
          case 115:
            aItem = JSONNode.\u206A‎‮⁪‌‫‌‌‎‭‭‪‪‮‭​‎⁫‬⁫⁪‏⁮⁯‍‍‫⁭‎‪‭‪⁭‎⁪‍‭⁪‏‪‮(aItem, JSONNode.\u206C⁬‮‎​‌‎⁭‪⁯⁭‎⁯⁬⁭⁬⁭⁪‭‫⁭‎⁯‍‫​​⁮‎‍⁪‌⁬⁯⁭​‭‫‏⁬‮(aJSON, num2).ToString());
            num1 = (int) num3 * -616157325 ^ 471805754;
            continue;
          case 116:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -1657357860 ^ 1289692171;
            continue;
          case 117:
            int num31 = !flag6 ? 613469165 : (num31 = 131515197);
            num1 = num31 ^ (int) num3 * -1401693622;
            continue;
          case 118:
            flag1 = JSONNode.\u206F‬⁭‍⁫⁮‫‎⁫⁭​⁮⁯​⁮‌‏⁭⁬‭‍‎‍⁫‪⁬‏⁯‬‍‎‪⁭⁪⁭‪⁬‌‏‏‮(aItem, "");
            num1 = (int) num3 * 1283117272 ^ 476552176;
            continue;
          case 119:
            int num32;
            num1 = num32 = ch1 == '"' ? -1378496644 : (num32 = -1965099673);
            continue;
          case 120:
            num1 = (int) num3 * 761517883 ^ 1798185325;
            continue;
          case 121:
            num1 = (int) num3 * -1681036801 ^ 1648196004;
            continue;
          case 122:
            switch (ch1)
            {
              case '[':
                goto label_108;
              case '\\':
                goto label_12;
              case ']':
                goto label_24;
              default:
                num1 = -1045500726;
                continue;
            }
          case 123:
            int num33 = flag3 ? 592256190 : (num33 = 1080867992);
            num1 = num33 ^ (int) num3 * -1052703648;
            continue;
          case 124:
            num1 = (int) num3 * 1054120437 ^ -302302820;
            continue;
          case 125:
            aItem = JSONNode.\u206A‎‮⁪‌‫‌‌‎‭‭‪‪‮‭​‎⁫‬⁫⁪‏⁮⁯‍‍‫⁭‎‪‭‪⁭‎⁪‍‭⁪‏‪‮(aItem, JSONNode.\u206C⁬‮‎​‌‎⁭‪⁯⁭‎⁯⁬⁭⁬⁭⁪‭‫⁭‎⁯‍‫​​⁮‎‍⁪‌⁬⁯⁭​‭‫‏⁬‮(aJSON, num2).ToString());
            num1 = (int) num3 * -1798131503 ^ 313879119;
            continue;
          case 126:
            goto label_1;
          case (uint) sbyte.MaxValue:
            num1 = (int) num3 * -2086753468 ^ 670571847;
            continue;
          case 128:
            aKey = "";
            flag2 = false;
            num1 = (int) num3 * -1988547801 ^ -912532945;
            continue;
          case 129:
            int num34;
            num1 = num34 = !flag2 ? -254025634 : (num34 = -2128037242);
            continue;
          case 130:
            flag6 = num2 < JSONNode.\u202B‮‬‪‮‏‏‎‌⁯‍⁯⁬⁭‫‏‍‎‍‍‪​‌‌⁭‎‌‏‬‫⁬‬​‍⁫⁯‪⁪‏⁮‮(aJSON);
            num1 = -833966552;
            continue;
          case 131:
            int num35 = !flag5 ? 949867795 : (num35 = 1443921714);
            num1 = num35 ^ (int) num3 * -1834444929;
            continue;
          case 132:
            num1 = (int) num3 * 61614919 ^ -2055667425;
            continue;
          case 133:
            aItem = "";
            num1 = (int) num3 * 231928800 ^ -779943461;
            continue;
          case 134:
            num1 = (int) num3 * -751492193 ^ -2042107315;
            continue;
          case 135:
            int num36 = ch1 <= ',' ? 374957907 : (num36 = 1896677741);
            num1 = num36 ^ (int) num3 * -353159126;
            continue;
          case 136:
            ch3 = JSONNode.\u206C⁬‮‎​‌‎⁭‪⁯⁭‎⁯⁬⁭⁬⁭⁪‭‫⁭‎⁯‍‫​​⁮‎‍⁪‌⁬⁯⁭​‭‫‏⁬‮(aJSON, num2);
            ch2 = ch3;
            num1 = (int) num3 * -1601705304 ^ -954080062;
            continue;
          case 137:
            int num37;
            num1 = num37 = flag2 ? -960990658 : (num37 = -1883906403);
            continue;
          case 138:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            int num38;
            num1 = num38 = !(jsonNode1 != (object) null) ? -827466839 : (num38 = -1659218946);
            continue;
          case 139:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num3 * 1500488193 ^ 1025101773;
            continue;
          case 140:
            aItem = JSONNode.\u206A‎‮⁪‌‫‌‌‎‭‭‪‪‮‭​‎⁫‬⁫⁪‏⁮⁯‍‍‫⁭‎‪‭‪⁭‎⁪‍‭⁪‏‪‮(aItem, "\n");
            num1 = -1496835674;
            continue;
          case 142:
            flag9 = jsonNode1 != (object) null;
            num1 = (int) num3 * 945037273 ^ 185203012;
            continue;
          case 143:
label_108:
            flag12 = flag2;
            num1 = -1402390035;
            continue;
          case 144:
            num1 = (int) num3 * -1961666444 ^ 1187209050;
            continue;
          case 145:
            num1 = (int) num3 * -1005252516 ^ -2001158935;
            continue;
          case 146:
            num1 = (int) num3 * 1175106801 ^ -1304516658;
            continue;
          case 147:
            num1 = (int) num3 * -442214379 ^ 1680657681;
            continue;
          case 148:
label_12:
            ++num2;
            flag3 = flag2;
            num1 = -26762002;
            continue;
          case 149:
            int num39 = !flag1 ? -798949792 : (num39 = -393352828);
            num1 = num39 ^ (int) num3 * -258008740;
            continue;
          case 150:
            jsonNode2 = jsonNode1;
            num1 = -354676787;
            continue;
          default:
            goto label_152;
        }
      }
label_48:
      throw JSONNode.\u200F‌⁪⁪‫‌‬⁮‭⁭‮⁪‫‭⁭‌‭​‬‎‌⁯⁪⁮⁭⁬⁯‪⁬‬​‭⁭‎‭‪⁫‌​‮‮("JSON Parse: Too many closing brackets");
label_128:
      throw JSONNode.\u200F‌⁪⁪‫‌‬⁮‭⁭‮⁪‫‭⁭‌‭​‬‎‌⁯⁪⁮⁭⁬⁯‪⁬‬​‭⁭‎‭‪⁫‌​‮‮("JSON Parse: Quotation marks seems to be messed up.");
label_152:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
label_1:
      int num1 = -533804518;
      BinaryWriter aWriter;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1086848300)) % 3U)
        {
          case 1:
            aWriter = JSONNode.\u202A‎‌‍‭⁭‎⁬⁪‪​‭‎⁭⁯​‌⁭‍‪⁬⁭⁬‪‫‍‪⁬‍​‎⁭‮‏⁫‬‮⁮‭‬‮(aData);
            num1 = (int) num2 * 1055771101 ^ 2024365937;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      this.Serialize(aWriter);
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u200F‌⁪⁪‫‌‬⁮‭⁭‮⁪‫‭⁭‌‭​‬‎‌⁯⁪⁮⁭⁬⁯‪⁬‬​‭⁭‎‭‪⁫‌​‮‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u200F‌⁪⁪‫‌‬⁮‭⁭‮⁪‫‭⁭‌‭​‬‎‌⁯⁪⁮⁭⁬⁯‪⁬‬​‭⁭‎‭‪⁫‌​‮‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u200F‌⁪⁪‫‌‬⁮‭⁭‮⁪‫‭⁭‌‭​‬‎‌⁯⁪⁮⁭⁬⁯‪⁬‬​‭⁭‎‭‪⁫‌​‮‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
label_1:
      int num1 = -1125304471;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -424160229)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            JSONNode.\u200D‎‍‎‌‬‮⁫‪⁫⁭‍⁯‌⁬‌‭⁫‏‭⁫⁮⁮⁫‍‌‭‎‬⁬‍‍⁭‭‎‏‌⁫​⁫‮(JSONNode.\u200D⁬‮‫‫⁪‪⁪‬‎‫⁭​‍‍‮‭⁪​⁮⁮⁬‬‭‎‬⁮‪‫‏‭‌⁬⁯‫‬⁯⁮⁬‎‮((FileSystemInfo) JSONNode.\u200D‫⁭⁬‍‎⁬‌‏‎‪‌​‎⁪⁫⁬‍⁮⁬​‬⁪⁫‭⁭‍‬‌⁮⁭‮‏⁪‬⁬⁮⁬‫⁪‮(JSONNode.\u200F‭⁫⁭⁬‭⁮⁬​‎​⁫‭‮⁮⁬‪‍‌⁭‍​‪‌‏‬⁮‮‍‬‎‌⁭‌⁮‎​⁫‏‬‮(aFileName))));
            num1 = (int) num2 * 1609963518 ^ 530082000;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      FileStream aData = JSONNode.\u200C‍‬‌‪‭⁪⁭⁯‬‏‏‍‫⁯‪‫‮⁮‍‏‌⁭⁯‬‍‮‍‭‬⁮‬‬‬⁮‭‏‏⁭‏‮(aFileName);
      try
      {
        this.SaveToStream((Stream) aData);
label_6:
        int num3 = -2020858093;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -424160229)) % 3U)
          {
            case 0:
              goto label_6;
            case 1:
              goto label_13;
            case 2:
              num3 = (int) num4 * 574295754 ^ -1690360890;
              continue;
            default:
              goto label_9;
          }
        }
label_13:
        return;
label_9:;
      }
      finally
      {
        if (aData != null)
        {
label_11:
          int num5 = -2107149974;
          while (true)
          {
            uint num6;
            switch ((num6 = (uint) (num5 ^ -424160229)) % 4U)
            {
              case 0:
                num5 = (int) num6 * -2024338053 ^ 382183505;
                continue;
              case 1:
                JSONNode.\u206A‍⁯‎‪‪⁭‪‏⁯‎⁭‏⁯‪‭‪‭⁬​‎‍‌‭⁭‫⁪‍⁮‪⁫⁪‌‭⁮⁬⁯⁬⁪⁬‮((IDisposable) aData);
                num5 = (int) num6 * -1853692460 ^ -766815213;
                continue;
              case 3:
                goto label_11;
              default:
                goto label_16;
            }
          }
        }
label_16:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u200B‌‌‌⁭⁭‭⁮⁮⁬‮‏⁯‫⁫⁫⁪⁪⁪‪‏​‫‏⁬⁪‎⁫‍‍‌‌⁬‎‫​‫‪‏⁭‮();
      try
      {
label_2:
        int num1 = 1425484097;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1358829820)) % 4U)
          {
            case 0:
              num1 = (int) num2 * -853333052 ^ -715672509;
              continue;
            case 1:
              this.SaveToStream((Stream) aData);
              JSONNode.\u202E‌‭‌‭⁯‮‍​‮⁬‭⁭⁫‫‬‫⁬⁯‫⁪⁭‪‫⁯​‎‬‬‭‬‏⁫‭‌‎‭⁫⁭⁪‮((Stream) aData, 0L);
              num1 = (int) num2 * 2110301901 ^ 1363877261;
              continue;
            case 2:
              goto label_2;
            default:
              goto label_6;
          }
        }
label_6:
        return JSONNode.\u200E‏‪⁯‭⁭⁭‭⁯‌‬‍⁫⁫‭‮‬​‫⁮⁭‏‮‪‏‪‏​⁯⁮⁯‫⁫‌‏‍‬‌‍‬‮(JSONNode.\u206D‫⁫‭⁯⁯​‌​⁭⁫⁫​‌‮‮​‬⁫⁯⁫⁯⁭‭⁯⁮‪⁬‏‬‭⁬​‎‮⁫⁯‌‬‮‮(aData));
      }
      finally
      {
        if (aData != null)
        {
label_8:
          int num3 = 616908557;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 1358829820)) % 4U)
            {
              case 0:
                num3 = (int) num4 * -423997033 ^ -1957806482;
                continue;
              case 1:
                JSONNode.\u206A‍⁯‎‪‪⁭‪‏⁯‎⁭‏⁯‪‭‪‭⁬​‎‍‌‭⁭‫⁪‍⁮‪⁫⁪‌‭⁮⁬⁯⁬⁪⁬‮((IDisposable) aData);
                num3 = (int) num4 * -1205680269 ^ 826276911;
                continue;
              case 3:
                goto label_8;
              default:
                goto label_12;
            }
          }
        }
label_12:;
      }
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
      JSONBinaryTag jsonBinaryTag1 = (JSONBinaryTag) JSONNode.\u206A‫‭‮⁮‌⁪​⁬⁯‍​‮‏‭‭‭‍⁪⁮‏‍‍‌​​​‬‪‎⁬‭⁬⁭⁮‌‭⁮‏‏‮(aReader);
      JSONBinaryTag jsonBinaryTag2 = jsonBinaryTag1;
label_1:
      int num1 = 1285178310;
      JSONBinaryTag jsonBinaryTag3;
      int num2;
      int num3;
      bool flag;
      int num4;
      JSONNode jsonNode;
      int num5;
      JSONClass jsonClass;
      JSONArray jsonArray;
      JSONNode aItem;
      string aKey;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ 1444637917)) % 38U)
        {
          case 0:
            num1 = (int) num6 * -164185827 ^ -868401244;
            continue;
          case 1:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * -1730466969 ^ -1850054659;
            continue;
          case 2:
label_6:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206F‍⁫⁯⁯‌‏‌⁫‎​⁮‪‮⁫⁪‌‬⁪‎‎​‭⁭⁭‍‎‌⁬⁪⁯‌⁪‎‪‍⁮⁭‏⁭‮(aReader));
            num1 = 885116590;
            continue;
          case 3:
label_36:
            num1 = 1287292791;
            continue;
          case 4:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206B⁭⁬‏‮⁮‭‍‫‍‫‏⁫‌⁮⁬⁪‬‫‌⁯⁭‍‮‭‍⁭⁫‏⁯‭‎⁫⁬⁭​⁯‫‮‌‮(aReader));
            num1 = (int) num6 * -1394922886 ^ 1294150648;
            continue;
          case 5:
            num1 = (int) num6 * 61002102 ^ 1817042174;
            continue;
          case 6:
            num1 = (int) num6 * -423813088 ^ 2070620796;
            continue;
          case 7:
            int num7;
            num1 = num7 = num4 < num5 ? 1849447343 : (num7 = 785548682);
            continue;
          case 8:
label_28:
            num1 = 395324375;
            continue;
          case 9:
            ++num4;
            num1 = (int) num6 * -721603533 ^ 1286598277;
            continue;
          case 10:
            num1 = (int) num6 * -1368204895 ^ -1626181131;
            continue;
          case 11:
            switch (jsonBinaryTag3)
            {
              case JSONBinaryTag.Array:
                goto label_37;
              case JSONBinaryTag.Class:
                goto label_9;
              case JSONBinaryTag.Value:
                goto label_28;
              case JSONBinaryTag.IntValue:
                goto label_14;
              case JSONBinaryTag.DoubleValue:
                goto label_32;
              case JSONBinaryTag.BoolValue:
                goto label_36;
              case JSONBinaryTag.FloatValue:
                goto label_6;
              default:
                num1 = (int) num6 * 857872049 ^ -309245640;
                continue;
            }
          case 12:
            flag = num2 < num3;
            num1 = 104456480;
            continue;
          case 13:
            num2 = 0;
            num1 = (int) num6 * 612736383 ^ 2047945204;
            continue;
          case 14:
            num1 = 1819620072;
            continue;
          case 15:
label_14:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200B‪‪‎⁪⁮‏‭‬⁭‌‬⁭‫‎​⁯⁬‪⁭‮⁮‮‏‏⁫‏‏​‌‫⁫‭⁪‫‮⁪⁪​‭‮(aReader));
            num1 = 615049474;
            continue;
          case 16:
            aItem = JSONNode.Deserialize(aReader);
            num1 = (int) num6 * 2037270249 ^ 1328158319;
            continue;
          case 17:
label_9:
            num5 = JSONNode.\u200B‪‪‎⁪⁮‏‭‬⁭‌‬⁭‫‎​⁯⁬‪⁭‮⁮‮‏‏⁫‏‏​‌‫⁫‭⁪‫‮⁪⁪​‭‮(aReader);
            jsonClass = new JSONClass();
            num4 = 0;
            num1 = 965323790;
            continue;
          case 18:
label_37:
            num1 = 84405419;
            continue;
          case 19:
label_32:
            num1 = 1232687221;
            continue;
          case 20:
            jsonClass.Add(aKey, aItem);
            num1 = (int) num6 * 689853896 ^ -1198090838;
            continue;
          case 21:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * -496681168 ^ 306504920;
            continue;
          case 22:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            num1 = 1034701223;
            continue;
          case 23:
            jsonBinaryTag3 = jsonBinaryTag2;
            num1 = (int) num6 * -769973183 ^ 941202015;
            continue;
          case 24:
            jsonArray = new JSONArray();
            num1 = (int) num6 * 1783016084 ^ 1713352748;
            continue;
          case 26:
            num1 = (int) num6 * 993635953 ^ -880352003;
            continue;
          case 27:
            num1 = (int) num6 * -1819032392 ^ -562016740;
            continue;
          case 28:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206C‎‪‫⁮⁮‮⁭⁮‬‍⁯⁫⁭‫‪⁫‌‫‮⁫⁫⁫‌‭⁬⁮​‭​‮‌⁭‫‌⁬⁬‍‎‍‮(aReader));
            num1 = (int) num6 * -2045908781 ^ -1560694883;
            continue;
          case 29:
            int num8 = flag ? -1797249168 : (num8 = -352240413);
            num1 = num8 ^ (int) num6 * 693588019;
            continue;
          case 30:
            goto label_7;
          case 31:
            aKey = JSONNode.\u202A‎⁪‎⁪‌⁬‏‬‫‬‏‫‎‪⁪​⁯⁬⁫⁬‏‍⁫‮‌⁫⁯‌‬‎⁯⁫‭‬‪⁭​‌‬‮(aReader);
            num1 = (int) num6 * 1374002371 ^ -1512354844;
            continue;
          case 32:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202A‎⁪‎⁪‌⁬‏‬‫‬‏‫‎‪⁪​⁯⁬⁫⁬‏‍⁫‮‌⁫⁯‌‬‎⁯⁫‭‬‪⁭​‌‬‮(aReader));
            num1 = (int) num6 * 1279241819 ^ 844824007;
            continue;
          case 33:
            num1 = (int) num6 * -1774330511 ^ -560441575;
            continue;
          case 34:
            num3 = JSONNode.\u200B‪‪‎⁪⁮‏‭‬⁭‌‬⁭‫‎​⁯⁬‪⁭‮⁮‮‏‏⁫‏‏​‌‫⁫‭⁪‫‮⁪⁪​‭‮(aReader);
            num1 = (int) num6 * -27579229 ^ -570099197;
            continue;
          case 35:
            num1 = (int) num6 * -1861202420 ^ -1723522936;
            continue;
          case 36:
            ++num2;
            num1 = (int) num6 * -1959053973 ^ -1184703283;
            continue;
          case 37:
            goto label_1;
          default:
            goto label_40;
        }
      }
label_7:
      throw JSONNode.\u200F‌⁪⁪‫‌‬⁮‭⁭‮⁪‫‭⁭‌‭​‬‎‌⁯⁪⁮⁭⁬⁯‪⁬‬​‭⁭‎‭‪⁫‌​‮‮(JSONNode.\u206A‎‮⁪‌‫‌‌‎‭‭‪‪‮‭​‎⁫‬⁫⁪‏⁮⁯‍‍‫⁭‎‪‭‪⁭‎⁪‍‭⁪‏‪‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag1.ToString()));
label_40:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u200F‌⁪⁪‫‌‬⁮‭⁭‮⁪‫‭⁭‌‭​‬‎‌⁯⁪⁮⁭⁬⁯‪⁬‬​‭⁭‎‭‪⁫‌​‮‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u200F‌⁪⁪‫‌‬⁮‭⁭‮⁪‫‭⁭‌‭​‬‎‌⁯⁪⁮⁭⁬⁯‪⁬‬​‭⁭‎‭‪⁫‌​‮‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u200F‌⁪⁪‫‌‬⁮‭⁭‮⁪‫‭⁭‌‭​‬‎‌⁯⁪⁮⁭⁬⁯‪⁬‬​‭⁭‎‭‪⁫‌​‮‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u202C⁪‫‍‮‪‪⁫⁭​‪‎‌‪‏‪⁬‏⁮⁭‬‏‌⁪⁫⁬⁭​‌‪⁫⁪⁯⁫⁮‮⁫‪‍‌‮(aData);
      try
      {
        return JSONNode.Deserialize(aReader);
      }
      finally
      {
        if (aReader != null)
        {
label_3:
          int num1 = 2061510895;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ 3399530)) % 4U)
            {
              case 0:
                num1 = (int) num2 * 1611380944 ^ -1250421471;
                continue;
              case 1:
                JSONNode.\u206A‍⁯‎‪‪⁭‪‏⁯‎⁭‏⁯‪‭‪‭⁬​‎‍‌‭⁭‫⁪‍⁮‪⁫⁪‌‭⁮⁬⁯⁬⁪⁬‮((IDisposable) aReader);
                num1 = (int) num2 * 49936162 ^ -647654584;
                continue;
              case 2:
                goto label_3;
              default:
                goto label_7;
            }
          }
        }
label_7:;
      }
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u200B‫‎⁪⁬⁫⁭‭‬⁯⁯‍‭⁯‏⁬‮‮⁯‬⁯‮⁮‌‬⁭‪​⁬‮⁪⁮‫‌‏⁪⁭‮‍⁫‮(aFileName);
      try
      {
        return JSONNode.LoadFromStream((Stream) aData);
      }
      finally
      {
        if (aData != null)
        {
label_3:
          int num1 = -1126009703;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ -1423620297)) % 4U)
            {
              case 0:
                goto label_3;
              case 2:
                JSONNode.\u206A‍⁯‎‪‪⁭‪‏⁯‎⁭‏⁯‪‭‪‭⁬​‎‍‌‭⁭‫⁪‍⁮‪⁫⁪‌‭⁮⁬⁯⁬⁪⁬‮((IDisposable) aData);
                num1 = (int) num2 * 658842729 ^ -227950422;
                continue;
              case 3:
                num1 = (int) num2 * 654565177 ^ -21895915;
                continue;
              default:
                goto label_7;
            }
          }
        }
label_7:;
      }
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
label_1:
      int num1 = 1391574972;
      byte[] numArray;
      MemoryStream aData;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 867783448)) % 6U)
        {
          case 1:
            aData = JSONNode.\u206B⁫‍⁬⁭‭‏‭⁪‌‪‏‎‎⁬⁫​⁫⁮‫‌‪‭‪‭‎‪⁬‪⁫⁮‮‬‬‪⁪‎‌‮‏‮(numArray);
            JSONNode.\u202E‌‭‌‭⁯‮‍​‮⁬‭⁭⁫‫‬‫⁬⁯‫⁪⁭‪‫⁯​‎‬‬‭‬‏⁫‭‌‎‭⁫⁭⁪‮((Stream) aData, 0L);
            num1 = (int) num2 * -1853748490 ^ 1806795161;
            continue;
          case 2:
            numArray = JSONNode.\u200D‪‫‮‏‪⁮‌‮‬​‮⁬‪‭⁪‌‍‎⁮‫‏⁫‎​⁭‮‮‌⁯‎‬‍‫‎‍⁬‪‫‫‮(aBase64);
            num1 = (int) num2 * 1097639578 ^ 546649139;
            continue;
          case 3:
            goto label_1;
          case 4:
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * -450942670 ^ -1796241746;
            continue;
          case 5:
            num1 = (int) num2 * -1896526786 ^ -138172354;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      return jsonNode;
    }

    static CultureInfo \u206D‫‪⁮‍‪‍‌⁪‫‫⁪⁫‌‍‍‮⁯‬‌‮⁬‎⁫‮‏⁭‍​‭⁮⁪​‪⁬⁮‌‭‌‬‮() => CultureInfo.InvariantCulture;

    static bool \u200D⁬⁭‎‎⁪⁫⁯⁮‪⁮‌‭⁪‪⁯‭‮‮‌‏‎‌‌‌‌⁪‍‮⁬‫‏‍‏‭⁫⁮‭‪‏‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u200C​‏⁭‪‬⁪‌‍⁫‍‮‪‮‏‍‪‫⁪‏‭⁮‏‮‌‍⁯‍‫‏⁭⁫⁮‪‮⁪⁫⁮⁯⁭‮() => base.GetHashCode();

    static char \u206C⁬‮‎​‌‎⁭‪⁯⁭‎⁯⁬⁭⁬⁭⁪‭‫⁭‎⁯‍‫​​⁮‎‍⁪‌⁬⁯⁭​‭‫‏⁬‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u206A‎‮⁪‌‫‌‌‎‭‭‪‪‮‭​‎⁫‬⁫⁪‏⁮⁯‍‍‫⁭‎‪‭‪⁭‎⁪‍‭⁪‏‪‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u202B‮‬‪‮‏‏‎‌⁯‍⁯⁬⁭‫‏‍‎‍‍‪​‌‌⁭‎‌‏‬‫⁬‬​‍⁫⁯‪⁪‏⁮‮([In] string obj0) => obj0.Length;

    static string \u202E‮‍‍‫⁫⁬‭‍‏‬⁬‬‭‏‏‍‌⁯⁯​‍‮⁮‮⁪‪‎⁮⁬‍‏⁪‫​⁮‎‫⁭⁮‮([In] string obj0) => obj0.Trim();

    static bool \u206F‬⁭‍⁫⁮‫‎⁫⁭​⁮⁯​⁮‌‏⁭⁬‭‍‎‍⁫‪⁬‏⁯‬‍‎‪⁭⁪⁭‪⁬‌‏‏‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u200F‌⁪⁪‫‌‬⁮‭⁭‮⁪‫‭⁭‌‭​‬‎‌⁯⁪⁮⁭⁬⁯‪⁬‬​‭⁭‎‭‪⁫‌​‮‮([In] string obj0) => new Exception(obj0);

    static string \u202C‬‮‎⁫‪​⁪‏‎‍‫‬‍‍⁬‍⁫⁭‪‏‌‮⁭‍‭⁭‭‫‫‬‫​‭⁭‬‏⁯‬⁬‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u202A‎‌‍‭⁭‎⁬⁪‪​‭‎⁭⁯​‌⁭‍‪⁬⁭⁬‪‫‍‪⁬‍​‎⁭‮‏⁫‬‮⁮‭‬‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u200F‭⁫⁭⁬‭⁮⁬​‎​⁫‭‮⁮⁬‪‍‌⁭‍​‪‌‏‬⁮‮‍‬‎‌⁭‌⁮‎​⁫‏‬‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u200D‫⁭⁬‍‎⁬‌‏‎‪‌​‎⁪⁫⁬‍⁮⁬​‬⁪⁫‭⁭‍‬‌⁮⁭‮‏⁪‬⁬⁮⁬‫⁪‮([In] FileInfo obj0) => obj0.Directory;

    static string \u200D⁬‮‫‫⁪‪⁪‬‎‫⁭​‍‍‮‭⁪​⁮⁮⁬‬‭‎‬⁮‪‫‏‭‌⁬⁯‫‬⁯⁮⁬‎‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u200D‎‍‎‌‬‮⁫‪⁫⁭‍⁯‌⁬‌‭⁫‏‭⁫⁮⁮⁫‍‌‭‎‬⁬‍‍⁭‭‎‏‌⁫​⁫‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u200C‍‬‌‪‭⁪⁭⁯‬‏‏‍‫⁯‪‫‮⁮‍‏‌⁭⁯‬‍‮‍‭‬⁮‬‬‬⁮‭‏‏⁭‏‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u206A‍⁯‎‪‪⁭‪‏⁯‎⁭‏⁯‪‭‪‭⁬​‎‍‌‭⁭‫⁪‍⁮‪⁫⁪‌‭⁮⁬⁯⁬⁪⁬‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u200B‌‌‌⁭⁭‭⁮⁮⁬‮‏⁯‫⁫⁫⁪⁪⁪‪‏​‫‏⁬⁪‎⁫‍‍‌‌⁬‎‫​‫‪‏⁭‮() => new MemoryStream();

    static void \u202E‌‭‌‭⁯‮‍​‮⁬‭⁭⁫‫‬‫⁬⁯‫⁪⁭‪‫⁯​‎‬‬‭‬‏⁫‭‌‎‭⁫⁭⁪‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u206D‫⁫‭⁯⁯​‌​⁭⁫⁫​‌‮‮​‬⁫⁯⁫⁯⁭‭⁯⁮‪⁬‏‬‭⁬​‎‮⁫⁯‌‬‮‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u200E‏‪⁯‭⁭⁭‭⁯‌‬‍⁫⁫‭‮‬​‫⁮⁭‏‮‪‏‪‏​⁯⁮⁯‫⁫‌‏‍‬‌‍‬‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u206A‫‭‮⁮‌⁪​⁬⁯‍​‮‏‭‭‭‍⁪⁮‏‍‍‌​​​‬‪‎⁬‭⁬⁭⁮‌‭⁮‏‏‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u200B‪‪‎⁪⁮‏‭‬⁭‌‬⁭‫‎​⁯⁬‪⁭‮⁮‮‏‏⁫‏‏​‌‫⁫‭⁪‫‮⁪⁪​‭‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u202A‎⁪‎⁪‌⁬‏‬‫‬‏‫‎‪⁪​⁯⁬⁫⁬‏‍⁫‮‌⁫⁯‌‬‎⁯⁫‭‬‪⁭​‌‬‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u206C‎‪‫⁮⁮‮⁭⁮‬‍⁯⁫⁭‫‪⁫‌‫‮⁫⁫⁫‌‭⁬⁮​‭​‮‌⁭‫‌⁬⁬‍‎‍‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u206B⁭⁬‏‮⁮‭‍‫‍‫‏⁫‌⁮⁬⁪‬‫‌⁯⁭‍‮‭‍⁭⁫‏⁯‭‎⁫⁬⁭​⁯‫‮‌‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u206F‍⁫⁯⁯‌‏‌⁫‎​⁮‪‮⁫⁪‌‬⁪‎‎​‭⁭⁭‍‎‌⁬⁪⁯‌⁪‎‪‍⁮⁭‏⁭‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u202C⁪‫‍‮‪‪⁫⁭​‪‎‌‪‏‪⁬‏⁮⁭‬‏‌⁪⁫⁬⁭​‌‪⁫⁪⁯⁫⁮‮⁫‪‍‌‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u200B‫‎⁪⁬⁫⁭‭‬⁯⁯‍‭⁯‏⁬‮‮⁯‬⁯‮⁮‌‬⁭‪​⁬‮⁪⁮‫‌‏⁪⁭‮‍⁫‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u200D‪‫‮‏‪⁮‌‮‬​‮⁬‪‭⁪‌‍‎⁮‫‏⁫‎​⁭‮‮‌⁯‎‬‍‫‎‍⁬‪‫‫‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u206B⁫‍⁬⁭‭‏‭⁪‌‪‏‎‎⁬⁫​⁫⁮‫‌‪‭‪‭‎‪⁬‪⁫⁮‮‬‬‪⁪‎‌‮‏‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
