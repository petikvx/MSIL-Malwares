// Decompiled with JetBrains decompiler
// Type: Cytotechnologist.ScrambleExtention
// Assembly: ContractHelp, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 7E915048-53CD-4869-AA6D-7821BA258ED2
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-226153caf46a7078970ce7ca5feb4aac6882ecb128e89ec40abb3be26166dd41.exe

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Cytotechnologist
{
  public static class ScrambleExtention
  {
    private static readonly Random Random = ScrambleExtention.\u202D‌‎‪‏‎⁭‏‏⁪‏‌⁯​⁬‫​‎⁬‬‮⁯⁮⁭‍⁬‎​‌⁮⁯⁮‬‬⁬⁭⁯⁭‎⁫‮();

    public static void Shuffle<T>(IList<T> list)
    {
label_1:
      int num1 = 206925938;
      int count;
      bool flag;
      int index;
      T obj;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 848140474)) % 13U)
        {
          case 0:
            goto label_1;
          case 1:
            index = ScrambleExtention.\u202E‬⁯‮⁯‏‏‍⁯⁬‫⁬⁯‏‭​‌⁮‎⁪‭​‍‎‬‮⁭‎‭‎‭‌‍⁯⁬​⁪​‏‌‮(ScrambleExtention.Random, count + 1);
            num1 = (int) num2 * 226082910 ^ -1151210394;
            continue;
          case 2:
            flag = count > 1;
            num1 = 1468453105;
            continue;
          case 3:
            --count;
            num1 = (int) num2 * -538732473 ^ -1461024844;
            continue;
          case 4:
            num1 = (int) num2 * 859389488 ^ -1417282499;
            continue;
          case 5:
            list[count] = obj;
            num1 = (int) num2 * -78506719 ^ -384754893;
            continue;
          case 6:
            num1 = (int) num2 * 604070560 ^ -1848187587;
            continue;
          case 7:
            obj = list[index];
            list[index] = list[count];
            num1 = (int) num2 * 909094229 ^ -280679476;
            continue;
          case 8:
            count = list.Count;
            num1 = (int) num2 * 877680839 ^ -1886524146;
            continue;
          case 9:
            num1 = (int) num2 * 2141300844 ^ -411283268;
            continue;
          case 10:
            num1 = 1519421446;
            continue;
          case 11:
            goto label_3;
          case 12:
            int num3 = flag ? -62161687 : (num3 = -840280341);
            num1 = num3 ^ (int) num2 * 1031779701;
            continue;
          default:
            goto label_15;
        }
      }
label_3:
      return;
label_15:;
    }

    static int \u202E‬⁯‮⁯‏‏‍⁯⁬‫⁬⁯‏‭​‌⁮‎⁪‭​‍‎‬‮⁭‎‭‎‭‌‍⁯⁬​⁪​‏‌‮([In] Random obj0, [In] int obj1) => obj0.Next(obj1);

    static Random \u202D‌‎‪‏‎⁭‏‏⁪‏‌⁯​⁬‫​‎⁬‬‮⁯⁮⁭‍⁬‎​‌⁮⁯⁮‬‬⁬⁭⁯⁭‎⁫‮() => new Random();
  }
}
