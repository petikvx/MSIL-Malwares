// Decompiled with JetBrains decompiler
// Type: Cradiator.Model.BuildBusterImageDecorator
// Assembly: FileOptio, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 0135208B-21B4-457A-BFCD-FFD93FD8BA14
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan.MSIL.Crypt.gen-c07e2154bd7603dd3a6fdf4810a799ff7d31670747236cd1d2a52be397c0676b.exe

using Cradiator.Config;
using Cradiator.Extensions;
using log4net;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

namespace Cradiator.Model
{
  public class BuildBusterImageDecorator : IBuildBuster
  {
    private static readonly ILog _log = LogManager.GetLogger(typeof (BuildBusterImageDecorator).Name);
    private readonly IBuildBuster _buildBuster;
    private readonly string _imageFolder;
    private readonly List<char> InvalidCharacterList = ((IEnumerable<char>) Path.GetInvalidFileNameChars()).ToList<char>();

    public BuildBusterImageDecorator([InjectBuildBuster] IBuildBuster buildBuster, IAppLocation appLocation)
    {
      this._buildBuster = buildBuster;
      this._imageFolder = Path.Combine(appLocation.DirectoryName, "images");
    }

    public string FindBreaker(string currentMessage)
    {
      string me = this._buildBuster.FindBreaker(currentMessage);
      if (me.ContainsInvalidChars())
      {
        foreach (char ch in ((IEnumerable<char>) me.ToCharArray()).Where<char>(new Func<char, bool>(this.InvalidCharacterList.Contains)))
          me = me.Replace(ch.ToString(), "");
      }
      string breaker = string.Format("{0}\\{1}.jpg", (object) this._imageFolder, (object) me).Trim();
      BuildBusterImageDecorator._log.DebugFormat("Breaker image='{0}'", (object) breaker);
      return breaker;
    }
  }
}
