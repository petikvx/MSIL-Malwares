// Decompiled with JetBrains decompiler
// Type: SmartAssembly.License.License1
// Assembly: o4tdggb3, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FA0844EB-EF82-404C-B76C-C092ABDB9392
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.bzqq-b74e3dc76fae79b75c26f27ecb85aae1eae4082a42bfa080f7805f32dedc9d67.exe

using SmartAssembly.SmartExceptionsCore;
using System;
using System.Drawing;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace SmartAssembly.License
{
  public class License1
  {
    private static void \u0001()
    {
      try
      {
        try
        {
          typeof (Application).InvokeMember("EnableVisualStyles", BindingFlags.Static | BindingFlags.Public | BindingFlags.InvokeMethod, (Binder) null, (object) null, (object[]) null);
        }
        catch (MissingMethodException ex)
        {
        }
        Application.DoEvents();
      }
      catch (Exception ex)
      {
        StackFrameHelper.CreateException0(ex);
        throw;
      }
    }

    public static bool Validate()
    {
      try
      {
        return License1.\u0001(false);
      }
      catch (Exception ex)
      {
        StackFrameHelper.CreateException0(ex);
        throw;
      }
    }

    public static void ValidateDLL()
    {
      try
      {
        License1.\u0001(true);
      }
      catch (Exception ex)
      {
        StackFrameHelper.CreateException0(ex);
        throw;
      }
    }

    private static bool \u0001([In] bool obj0)
    {
      DateTime dateTime;
      string name;
      string message;
      \u0001.\u0001 mainForm;
      \u0001.\u0001 obj;
      try
      {
        dateTime = DateTime.Parse("2013-08-15T05:49:45");
        if (DateTime.Now > dateTime || DateTime.Now < dateTime.AddDays(-21.0))
        {
          name = Assembly.GetExecutingAssembly().GetName().Name;
          message = string.Format("This copy of '{0}' has expired and will no longer run. \nThis is because it was created using a version of Red Gate's SmartAssembly which is only licensed for testing software. \n\nYou should report this problem to the vendor who supplied '{0}'.", (object) name, (object) dateTime.ToString("D"));
          if (obj0)
            throw new Exception(message);
          mainForm = new \u0001.\u0001(message, "Program has expired", "error");
          License1.\u0001();
          Application.Run((Form) mainForm);
          return false;
        }
        if (\u0002.\u0002.\u0001() != null)
          return true;
        try
        {
          obj = new \u0001.\u0001("This application has been built with an evaluation version of SmartAssembly, and therefore cannot be distributed. You can install SmartAssembly on this computer to be able to run this application.\n\nThis application will now quit.", "SmartAssembly Evaluation Version", "error");
          License1.\u0001();
          obj.BackColor = Color.White;
          int num = (int) obj.ShowDialog();
        }
        catch
        {
        }
        return false;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<DateTime> o1 = (ValueType) dateTime;
        string o2 = name;
        string o3 = message;
        \u0001.\u0001 o4 = mainForm;
        \u0001.\u0001 o5 = obj;
        // ISSUE: variable of a boxed type
        __Boxed<bool> o6 = (ValueType) obj0;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }
  }
}
