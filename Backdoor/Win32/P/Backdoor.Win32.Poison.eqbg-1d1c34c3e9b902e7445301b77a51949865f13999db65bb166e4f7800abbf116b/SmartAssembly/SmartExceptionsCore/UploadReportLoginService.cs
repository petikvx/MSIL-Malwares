// Decompiled with JetBrains decompiler
// Type: SmartAssembly.SmartExceptionsCore.UploadReportLoginService
// Assembly: 5, Version=0.0.0.0, Culture=neutral, PublicKeyToken=c1ca78561cb11ead
// MVID: 2D47F565-522D-4F7E-99C5-0FAB4FA0B168
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Backdoor.Win32.Poison.eqbg-1d1c34c3e9b902e7445301b77a51949865f13999db65bb166e4f7800abbf116b.exe

using \u000F;
using System;
using System.Net;
using System.Web.Services;
using System.Web.Services.Protocols;

namespace SmartAssembly.SmartExceptionsCore
{
  [WebServiceBinding(Name = "LoginServiceSoap", Namespace = "http://www.smartassembly.com/webservices/UploadReportLogin/")]
  internal sealed class UploadReportLoginService : SoapHttpClientProtocol
  {
    [NonSerialized]
    internal static \u0002 \u0004;

    public UploadReportLoginService()
    {
      string str = \u0004.\u0003.\u0001;
      this.Url = \u0004.\u0003.\u0001 + UploadReportLoginService.\u0004(2015);
      this.Timeout = 30000;
    }

    [SoapDocumentMethod("http://www.smartassembly.com/webservices/UploadReportLogin/GetServerURL")]
    public string GetServerURL(string licenseID) => (string) \u0018\u0002.\u0081\u0003((object) this, UploadReportLoginService.\u0004(2048), new object[1]
    {
      (object) licenseID
    })[0];

    protected override WebRequest GetWebRequest(Uri uri)
    {
      WebRequest webRequest = \u0019\u0002.\u0082\u0003((object) this, uri);
      if (webRequest is HttpWebRequest httpWebRequest)
        \u001B\u0002.\u007E\u0084\u0003((object) \u001A\u0002.\u007E\u0083\u0003((object) httpWebRequest), false);
      return webRequest;
    }

    static UploadReportLoginService() => \u0003.\u0003.\u0001(typeof (UploadReportLoginService));
  }
}
