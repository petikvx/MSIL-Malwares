// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONClass
// Assembly: ASMNA, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 756C4858-C1DF-4594-BBF4-94321F458D9F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-b15de477cfbeebb8bbdc45f252c7c6bc6d2897ab737240c78a82a618f6e85508.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONClass : JSONNode, IEnumerable
  {
    private Dictionary<string, JSONNode> m_Dict = new Dictionary<string, JSONNode>();

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -1651419189;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1920513440)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              int num3 = this.m_Dict.ContainsKey(aKey) ? -318466521 : (num3 = -497285700);
              num1 = num3 ^ (int) num2 * -470609008;
              continue;
            case 3:
              num1 = (int) num2 * -1097037234 ^ -2114831664;
              continue;
            case 4:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = -1937835202;
              continue;
            case 5:
              jsonNode = this.m_Dict[aKey];
              num1 = (int) num2 * 382889272 ^ 1881395417;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return jsonNode;
      }
      set
      {
        bool flag = this.m_Dict.ContainsKey(aKey);
label_1:
        int num1 = 1395405989;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2064381656)) % 7U)
          {
            case 0:
              this.m_Dict[aKey] = value;
              num1 = (int) num2 * 889143134 ^ -1232429900;
              continue;
            case 1:
              this.m_Dict.Add(aKey, value);
              num1 = 337901542;
              continue;
            case 2:
              goto label_3;
            case 3:
              num1 = (int) num2 * -1634445038 ^ -1381956057;
              continue;
            case 4:
              int num3 = flag ? 473751713 : (num3 = 38781264);
              num1 = num3 ^ (int) num2 * -462160251;
              continue;
            case 5:
              num1 = (int) num2 * -1378448455 ^ -2089636591;
              continue;
            case 6:
              goto label_1;
            default:
              goto label_9;
          }
        }
label_3:
        return;
label_9:;
      }
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
        if (aIndex < 0)
          goto label_7;
label_1:
        int num1 = -1776317196;
label_2:
        JSONNode jsonNode;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -298531885)) % 7U)
          {
            case 0:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 1006800231 ^ 1856046686;
              continue;
            case 1:
              goto label_6;
            case 2:
              jsonNode = (JSONNode) null;
              num1 = -1569044135;
              continue;
            case 3:
              int num3 = flag ? 1536970211 : (num3 = 352218876);
              num1 = num3 ^ (int) num2 * -1427015316;
              continue;
            case 4:
              goto label_1;
            case 6:
              num1 = (int) num2 * -1436249266 ^ -1938583977;
              continue;
            default:
              goto label_10;
          }
        }
label_6:
        int num4 = aIndex >= this.m_Dict.Count ? 1 : 0;
        goto label_8;
label_10:
        return jsonNode;
label_7:
        num4 = 1;
label_8:
        flag = num4 != 0;
        num1 = -630589616;
        goto label_2;
      }
      set
      {
        if (aIndex < 0)
          goto label_5;
label_1:
        int num1 = 678859248;
label_2:
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 828470894)) % 5U)
          {
            case 0:
              goto label_3;
            case 1:
              int num3 = !flag ? 117521758 : (num3 = 731292793);
              num1 = num3 ^ (int) num2 * -982703787;
              continue;
            case 2:
              goto label_4;
            case 3:
              num1 = (int) num2 * -1612397029 ^ -1415633087;
              continue;
            case 4:
              goto label_1;
            default:
              goto label_9;
          }
        }
label_3:
        return;
label_9:
        return;
label_4:
        int num4 = aIndex >= this.m_Dict.Count ? 1 : 0;
        goto label_6;
label_5:
        num4 = 1;
label_6:
        flag = num4 != 0;
        num1 = 559692129;
        goto label_2;
      }
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = -873123300;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1087114499)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 530339720 ^ -506594578;
              continue;
            case 1:
              count = this.m_Dict.Count;
              num1 = (int) num2 * 148635731 ^ 1916628650;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = 516034928;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1101738636)) % 12U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * -500814803 ^ 504733950;
            continue;
          case 2:
            int num3 = this.m_Dict.ContainsKey(aKey) ? 393408553 : (num3 = 482744428);
            num1 = num3 ^ (int) num2 * -1338269735;
            continue;
          case 3:
            num1 = 1960381880;
            continue;
          case 4:
            int num4 = JSONClass.\u200E‌‌‎‍‌‬⁮​‪‌‬⁮‮⁫⁬‌⁭‬‍⁫‭​‌⁮‎‪​‪‮⁬‪⁪‮‪‬⁫‫‮⁭‮(aKey) ? 1666646405 : (num4 = 977732241);
            num1 = num4 ^ (int) num2 * -367607757;
            continue;
          case 5:
            this.m_Dict.Add(Guid.NewGuid().ToString(), aItem);
            num1 = 1344115818;
            continue;
          case 6:
            this.m_Dict.Add(aKey, aItem);
            num1 = 1519709017;
            continue;
          case 7:
            this.m_Dict[aKey] = aItem;
            num1 = (int) num2 * 1399445454 ^ -1412383730;
            continue;
          case 8:
            num1 = (int) num2 * -1408733509 ^ -462128321;
            continue;
          case 9:
            num1 = (int) num2 * 475924504 ^ -1677979474;
            continue;
          case 10:
            num1 = (int) num2 * -1586195929 ^ 1357092018;
            continue;
          case 11:
            goto label_1;
          default:
            goto label_14;
        }
      }
label_3:
      return;
label_14:;
    }

    public override JSONNode Remove(string aKey)
    {
      if (this.m_Dict.ContainsKey(aKey))
        goto label_8;
label_1:
      int num1 = 601877505;
label_2:
      JSONNode jsonNode1;
      JSONNode jsonNode2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1362186520)) % 8U)
        {
          case 0:
            goto label_8;
          case 1:
            jsonNode2 = (JSONNode) null;
            num1 = (int) num2 * 1498753399 ^ 319335585;
            continue;
          case 3:
            goto label_1;
          case 4:
            jsonNode2 = jsonNode1;
            num1 = (int) num2 * -530372388 ^ 1365573927;
            continue;
          case 5:
            this.m_Dict.Remove(aKey);
            num1 = (int) num2 * -1811094314 ^ 1096670938;
            continue;
          case 6:
            num1 = (int) num2 * -505283320 ^ 1444378074;
            continue;
          case 7:
            num1 = (int) num2 * -320758278 ^ 166964748;
            continue;
          default:
            goto label_9;
        }
      }
label_9:
      return jsonNode2;
label_8:
      jsonNode1 = this.m_Dict[aKey];
      num1 = 1635159381;
      goto label_2;
    }

    public override JSONNode Remove(int aIndex)
    {
      if (aIndex < 0)
        goto label_4;
label_1:
      int num1 = -1681180772;
label_2:
      bool flag;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1852219217)) % 7U)
        {
          case 0:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * -694800757 ^ 1970605038;
            continue;
          case 2:
            goto label_1;
          case 3:
            jsonNode = (JSONNode) null;
            num1 = -335558448;
            continue;
          case 4:
            int num3 = flag ? -844832024 : (num3 = -1268937246);
            num1 = num3 ^ (int) num2 * -305544235;
            continue;
          case 5:
            num1 = (int) num2 * 1965221254 ^ -70008830;
            continue;
          case 6:
            goto label_3;
          default:
            goto label_10;
        }
      }
label_3:
      int num4 = aIndex >= this.m_Dict.Count ? 1 : 0;
      goto label_5;
label_10:
      return jsonNode;
label_4:
      num4 = 1;
label_5:
      flag = num4 != 0;
      num1 = -1278670946;
      goto label_2;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      JSONNode jsonNode;
      try
      {
        jsonNode = (JSONNode) null;
      }
      catch
      {
label_3:
        int num1 = -609024988;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1373795508)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 331362921 ^ 1666668737;
              continue;
            default:
              goto label_6;
          }
        }
      }
label_6:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONClass.\u003Cget_Childs\u003Ed__14 getChildsD14 = new JSONClass.\u003Cget_Childs\u003Ed__14(-2);
label_1:
        int num1 = -1393732340;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -868590520)) % 3U)
          {
            case 1:
              getChildsD14.\u003C\u003E4__this = this;
              childs = (IEnumerable<JSONNode>) getChildsD14;
              num1 = (int) num2 * 464172771 ^ -1513033409;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return childs;
      }
    }

    public IEnumerator GetEnumerator()
    {
      bool enumerator1;
      // ISSUE: fault handler
      try
      {
        // ISSUE: reference to a compiler-generated field
        int num1 = this.\u003C\u003E1__state;
label_1:
        int num2 = -1881392465;
        Dictionary<string, JSONNode>.Enumerator enumerator;
        KeyValuePair<string, JSONNode> N;
        while (true)
        {
          uint num3;
          switch ((num3 = (uint) (num2 ^ -509685154)) % 21U)
          {
            case 0:
              num2 = (int) num3 * -2010171878 ^ 1227214961;
              continue;
            case 1:
            case 12:
              goto label_20;
            case 2:
              num2 = (int) num3 * 997362299 ^ 1269516340;
              continue;
            case 4:
              int num4 = num1 == 0 ? -1130506670 : (num4 = -1688338905);
              num2 = num4 ^ (int) num3 * -109448108;
              continue;
            case 5:
              N = enumerator.Current;
              num2 = -1657443213;
              continue;
            case 6:
            case 7:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -1;
              num2 = -620657605;
              continue;
            case 8:
              goto label_1;
            case 9:
            case 10:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = -627045478;
              continue;
            case 11:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E2__current = (object) N;
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = 1;
              enumerator1 = true;
              num2 = (int) num3 * 1282255340 ^ 158322;
              continue;
            case 13:
              num2 = (int) num3 * 2037017078 ^ -1404051466;
              continue;
            case 14:
              int num5;
              num2 = num5 = !enumerator.MoveNext() ? -1904620677 : (num5 = -681071038);
              continue;
            case 15:
              N = new KeyValuePair<string, JSONNode>();
              num2 = (int) num3 * 2013193989 ^ -1237010712;
              continue;
            case 16:
              enumerator = new Dictionary<string, JSONNode>.Enumerator();
              num2 = (int) num3 * -2040610571 ^ -1086789552;
              continue;
            case 17:
              // ISSUE: reference to a compiler-generated method
              this.\u003C\u003Em__Finally1();
              num2 = (int) num3 * -1103051017 ^ -700510780;
              continue;
            case 18:
              enumerator = this.m_Dict.GetEnumerator();
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = (int) num3 * 784635094 ^ 944575522;
              continue;
            case 19:
              int num6;
              num2 = num6 = num1 == 1 ? -1211776155 : (num6 = -820394551);
              continue;
            case 20:
              enumerator1 = false;
              num2 = -1987316238;
              continue;
            default:
              goto label_18;
          }
        }
label_18:
        enumerator1 = false;
      }
      __fault
      {
        // ISSUE: reference to a compiler-generated method
        this.System\u002EIDisposable\u002EDispose();
      }
label_20:
      return enumerator1;
    }

    public override string ToString()
    {
      string str1 = "{";
label_1:
      int num1 = 97612018;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 522939465)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * 252360531 ^ -1594017669;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      using (Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator())
      {
label_11:
        int num3 = !enumerator.MoveNext() ? 166207716 : (num3 = 891941080);
        KeyValuePair<string, JSONNode> current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 522939465)) % 9U)
          {
            case 0:
              goto label_11;
            case 2:
              num3 = (int) num4 * -2032531757 ^ -488568941;
              continue;
            case 3:
              str1 = JSONClass.\u202B‏‬‮‌‬⁫‪‪⁮‮​⁫⁪⁯⁫‎‭‬‮‪‎‏‪‫​​⁫‫‭⁭‮‏‬⁯⁪‍‬‎‭‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\":",
                JSONClass.\u206B‎‬‮‪⁪⁮‮‎‬⁪⁭⁪⁯‌‬⁮‪‬‪⁯‪‌⁬⁬⁬⁮‏⁮‭⁯‬‪‪‪‏‏‍‏⁯‮((object) current.Value)
              });
              num3 = 107213855;
              continue;
            case 4:
              str1 = JSONClass.\u202A⁫‌‌‫⁬⁮‮⁭⁮⁭‭⁫‍‪⁪‬‪‬‏⁬‪⁯⁯‬‭⁬‫⁯⁭⁯‍⁫‎‪‪⁪⁯⁮⁪‮(str1, ", ");
              num3 = (int) num4 * 2046858189 ^ 1995256724;
              continue;
            case 5:
              num3 = 891941080;
              continue;
            case 6:
              current = enumerator.Current;
              num3 = 1757233626;
              continue;
            case 7:
              int num5 = JSONClass.\u202D‮‬​⁯‭⁭⁭⁯‪​​⁭‏‫⁬‎‬⁫⁬‌‫‍⁯⁬‬‫​‫‬⁯⁫​⁪‍⁭‌⁬⁬‍‮(str1) <= 2 ? 1662344505 : (num5 = 1376167124);
              num3 = num5 ^ (int) num4 * -1024713573;
              continue;
            case 8:
              num3 = (int) num4 * -860821531 ^ 1857381211;
              continue;
            default:
              goto label_16;
          }
        }
      }
label_16:
      string str2 = JSONClass.\u202A⁫‌‌‫⁬⁮‮⁭⁮⁭‭⁫‍‪⁪‬‪‬‏⁬‪⁯⁯‬‭⁬‫⁯⁭⁯‍⁫‎‪‪⁪⁯⁮⁪‮(str1, "}");
label_17:
      int num6 = 2142243468;
      string str3;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ 522939465)) % 3U)
        {
          case 0:
            goto label_17;
          case 1:
            str3 = str2;
            num6 = (int) num7 * -773981416 ^ -159098053;
            continue;
          default:
            goto label_20;
        }
      }
label_20:
      return str3;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = -1996723869;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2131972002)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            str1 = "{ ";
            num1 = (int) num2 * -969263952 ^ -1860073519;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator();
      try
      {
label_10:
        int num3 = enumerator.MoveNext() ? -1892390281 : (num3 = -1260962788);
        KeyValuePair<string, JSONNode> current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -2131972002)) % 8U)
          {
            case 0:
              goto label_10;
            case 1:
              current = enumerator.Current;
              num3 = -541147848;
              continue;
            case 3:
              int num5 = JSONClass.\u202D‮‬​⁯‭⁭⁭⁯‪​​⁭‏‫⁬‎‬⁫⁬‌‫‍⁯⁬‬‫​‫‬⁯⁫​⁪‍⁭‌⁬⁬‍‮(str1) > 3 ? -1144927103 : (num5 = -1778291261);
              num3 = num5 ^ (int) num4 * -626659672;
              continue;
            case 4:
              num3 = -1892390281;
              continue;
            case 5:
              str1 = JSONClass.\u200C‏⁬⁪⁮⁯‌⁮‎‏⁬​‎‭‮​‍⁪‎⁫‭​⁬‫‌‮⁮‌‬‬‌⁪‎‭⁯‫‌⁯⁬⁫‮(str1, "\n", aPrefix, "   ");
              str1 = JSONClass.\u202B‏‬‮‌‬⁫‪‪⁮‮​⁫⁪⁯⁫‎‭‬‮‪‎‏‪‫​​⁫‫‭⁭‮‏‬⁯⁪‍‬‎‭‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\" : ",
                current.Value.ToString(JSONClass.\u202A⁫‌‌‫⁬⁮‮⁭⁮⁭‭⁫‍‪⁪‬‪‬‏⁬‪⁯⁯‬‭⁬‫⁯⁭⁯‍⁫‎‪‪⁪⁯⁮⁪‮(aPrefix, "   "))
              });
              num3 = -1458024410;
              continue;
            case 6:
              num3 = (int) num4 * 1078522739 ^ 378210983;
              continue;
            case 7:
              str1 = JSONClass.\u202A⁫‌‌‫⁬⁮‮⁭⁮⁭‭⁫‍‪⁪‬‪‬‏⁬‪⁯⁯‬‭⁬‫⁯⁭⁯‍⁫‎‪‪⁪⁯⁮⁪‮(str1, ", ");
              num3 = (int) num4 * -1239644451 ^ -44283760;
              continue;
            default:
              goto label_19;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_15:
        int num6 = -1221527308;
        while (true)
        {
          uint num7;
          switch ((num7 = (uint) (num6 ^ -2131972002)) % 3U)
          {
            case 1:
              num6 = (int) num7 * -365570384 ^ 1426558950;
              continue;
            case 2:
              goto label_15;
            default:
              goto label_18;
          }
        }
label_18:;
      }
label_19:
      string str2 = JSONClass.\u200C‏⁬⁪⁮⁯‌⁮‎‏⁬​‎‭‮​‍⁪‎⁫‭​⁬‫‌‮⁮‌‬‬‌⁪‎‭⁯‫‌⁯⁬⁫‮(str1, "\n", aPrefix, "}");
label_20:
      int num8 = -1469797936;
      while (true)
      {
        uint num9;
        switch ((num9 = (uint) (num8 ^ -2131972002)) % 3U)
        {
          case 1:
            num8 = (int) num9 * 1634031607 ^ -425957524;
            continue;
          case 2:
            goto label_20;
          default:
            goto label_23;
        }
      }
label_23:
      return str2;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = -1906695039;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -948514338)) % 3U)
        {
          case 1:
            JSONClass.\u206C‭⁭⁮⁮⁭⁮‍‬⁯‫‎‫⁫⁫‎⁮‭‌⁮⁬⁬​⁪‫⁯‬⁭‫‪‪‭‍‎⁬‍⁮‌‏‌‮(aWriter, (byte) 2);
            num1 = (int) num2 * -1515840895 ^ 2138455434;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      JSONClass.\u200C⁮​‏​⁭‭‪⁮​‭⁮⁬⁮‌‭‭⁭‫⁬‮‭⁪‪‍‏‌⁬‮‭​‫⁪‭⁪‭‏‭‎‬‮(aWriter, this.m_Dict.Count);
      Dictionary<string, JSONNode>.KeyCollection.Enumerator enumerator = this.m_Dict.Keys.GetEnumerator();
      try
      {
label_9:
        int num3 = enumerator.MoveNext() ? -1099544826 : (num3 = -2077735084);
        string current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -948514338)) % 9U)
          {
            case 0:
              num3 = (int) num4 * 24934602 ^ 2122148120;
              continue;
            case 1:
              current = enumerator.Current;
              num3 = -171388087;
              continue;
            case 2:
              goto label_9;
            case 3:
              num3 = (int) num4 * -779105585 ^ -902435453;
              continue;
            case 4:
              num3 = -1099544826;
              continue;
            case 5:
              goto label_19;
            case 6:
              this.m_Dict[current].Serialize(aWriter);
              num3 = (int) num4 * -1979782296 ^ 689264218;
              continue;
            case 7:
              JSONClass.\u202D⁬‌‫⁬⁯‍‭⁯‏⁬‍⁫​‭⁬‍⁮‭​‎⁬‮⁫⁯‭‮‏‎‪‮‎⁪⁬‏⁭‬⁮⁪⁪‮(aWriter, current);
              num3 = (int) num4 * -1246465967 ^ -1181580863;
              continue;
            case 8:
              num3 = (int) num4 * 22462937 ^ 596611347;
              continue;
            default:
              goto label_15;
          }
        }
label_19:
        return;
label_15:;
      }
      finally
      {
        enumerator.Dispose();
label_17:
        int num5 = -99927033;
        while (true)
        {
          uint num6;
          switch ((num6 = (uint) (num5 ^ -948514338)) % 3U)
          {
            case 1:
              num5 = (int) num6 * -644340041 ^ 1795052365;
              continue;
            case 2:
              goto label_17;
            default:
              goto label_21;
          }
        }
label_21:;
      }
    }

    static bool \u200E‌‌‎‍‌‬⁮​‪‌‬⁮‮⁫⁬‌⁭‬‍⁫‭​‌⁮‎‪​‪‮⁬‪⁪‮‪‬⁫‫‮⁭‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    static int \u202D‮‬​⁯‭⁭⁭⁯‪​​⁭‏‫⁬‎‬⁫⁬‌‫‍⁯⁬‬‫​‫‬⁯⁫​⁪‍⁭‌⁬⁬‍‮([In] string obj0) => obj0.Length;

    static string \u202A⁫‌‌‫⁬⁮‮⁭⁮⁭‭⁫‍‪⁪‬‪‬‏⁬‪⁯⁯‬‭⁬‫⁯⁭⁯‍⁫‎‪‪⁪⁯⁮⁪‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u206B‎‬‮‪⁪⁮‮‎‬⁪⁭⁪⁯‌‬⁮‪‬‪⁯‪‌⁬⁬⁬⁮‏⁮‭⁯‬‪‪‪‏‏‍‏⁯‮([In] object obj0) => obj0.ToString();

    static string \u202B‏‬‮‌‬⁫‪‪⁮‮​⁫⁪⁯⁫‎‭‬‮‪‎‏‪‫​​⁫‫‭⁭‮‏‬⁯⁪‍‬‎‭‮([In] string[] obj0) => string.Concat(obj0);

    static string \u200C‏⁬⁪⁮⁯‌⁮‎‏⁬​‎‭‮​‍⁪‎⁫‭​⁬‫‌‮⁮‌‬‬‌⁪‎‭⁯‫‌⁯⁬⁫‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u206C‭⁭⁮⁮⁭⁮‍‬⁯‫‎‫⁫⁫‎⁮‭‌⁮⁬⁬​⁪‫⁯‬⁭‫‪‪‭‍‎⁬‍⁮‌‏‌‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u200C⁮​‏​⁭‭‪⁮​‭⁮⁬⁮‌‭‭⁭‫⁬‮‭⁪‪‍‏‌⁬‮‭​‫⁪‭⁪‭‏‭‎‬‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u202D⁬‌‫⁬⁯‍‭⁯‏⁬‍⁫​‭⁬‍⁮‭​‎⁬‮⁫⁯‭‮‏‎‪‮‎⁪⁬‏⁭‬⁮⁪⁪‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
