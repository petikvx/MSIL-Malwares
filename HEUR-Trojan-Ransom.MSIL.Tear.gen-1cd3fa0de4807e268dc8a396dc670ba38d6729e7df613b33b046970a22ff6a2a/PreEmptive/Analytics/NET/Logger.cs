// Decompiled with JetBrains decompiler
// Type: PreEmptive.Analytics.NET.Logger
// Assembly: EncoderCSL, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8BC70EB6-E222-4E38-9ED5-32744A85C676
// Assembly location: C:\Users\Administrateur\Downloads\toto\HEUR-Trojan-Ransom.MSIL.Tear.gen-1cd3fa0de4807e268dc8a396dc670ba38d6729e7df613b33b046970a22ff6a2a.exe

using PreEmptive.Analytics.Common;
using PreEmptive.Analytics.Common.Utilities;
using System;
using System.Collections.Concurrent;
using System.IO;
using System.Runtime.InteropServices;
using System.Threading;

namespace PreEmptive.Analytics.NET
{
  public class Logger : LoggerBase, ILogger
  {
    private Thread a;
    private ConcurrentQueue<string> b;
    private AutoResetEvent c;

    public Logger(LoggingLevel logging, [Optional] string filename)
    {
      int A_1 = 8;
      // ISSUE: object of a compiler-generated type is created
      // ISSUE: variable of a compiler-generated type
      Logger.a a = new Logger.a();
      // ISSUE: reference to a compiler-generated field
      a.b = filename;
      // ISSUE: explicit constructor call
      base.\u002Ector(logging);
      // ISSUE: reference to a compiler-generated field
      a.a = this;
      try
      {
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        a.b = a.b ?? Path.Combine(AppDomain.CurrentDomain.BaseDirectory, Utils.a("\uECBBﾽ貿귁ꏃ胅ꇇꛉ꧋\uE0CD\uA4CF\uAAD1ꃓ", A_1));
      }
      catch
      {
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        a.b = a.b ?? Utils.a("\uECBBﾽ貿귁ꏃ胅ꇇꛉ꧋\uE0CD\uA4CF\uAAD1ꃓ", A_1);
      }
      this.c = new AutoResetEvent(false);
      this.b = new ConcurrentQueue<string>();
      // ISSUE: reference to a compiler-generated method
      this.a = new Thread(new ThreadStart(a.c))
      {
        Priority = ThreadPriority.Lowest,
        IsBackground = true
      };
      this.a.Start();
    }

    public void LogError(string message)
    {
      int A_1 = 2;
      int num1 = 2;
      while (true)
      {
        int num2;
        switch (num1)
        {
          case 0:
            this.b.Enqueue(string.Format(Utils.a("\uF3B5\uEAB7\uE8B9\uF3BB\uECBD謹\uE2C1뿃\uF6C5뗇", A_1), (object) message));
            this.c.Set();
            num2 = 1;
            num1 = num2;
            continue;
          case 1:
            goto label_8;
          case 2:
            switch (0)
            {
              case 0:
                break;
              default:
                continue;
            }
            break;
        }
        if (this.MessageLoggingLevel.HasFlag((Enum) LoggingLevel.Error))
        {
          num2 = -11792;
          int num3 = num2;
          num2 = -11792;
          int num4 = num2;
          switch (num3 == num4 ? 1 : 0)
          {
            case 0:
              goto label_11;
            case 2:
              goto label_12;
            default:
              num2 = 0;
              if (num2 == 0)
                ;
              num2 = 1;
              if (num2 == 0)
                ;
              num2 = 0;
              num1 = num2;
              continue;
          }
        }
        else
          goto label_10;
      }
label_8:
      return;
label_10:
      return;
label_11:
      return;
label_12:;
    }

    public void LogWarning(string message)
    {
      int A_1 = 18;
      int num1 = 2;
      while (true)
      {
        int num2;
        switch (num1)
        {
          case 0:
            num2 = 1;
            if (num2 == 0)
              ;
            this.b.Enqueue(string.Format(Utils.a("釅觇飉苋蟍黏闑\uEED3\uF6D5ꏗ\uEAD9ꇛ", A_1), (object) message));
            this.c.Set();
            num2 = 1;
            num1 = num2;
            continue;
          case 1:
            goto label_8;
          case 2:
            switch (0)
            {
              case 0:
                break;
              default:
                continue;
            }
            break;
        }
        if (this.MessageLoggingLevel.HasFlag((Enum) LoggingLevel.Warning))
        {
          num2 = 29714;
          int num3 = num2;
          num2 = 29714;
          int num4 = num2;
          switch (num3 == num4 ? 1 : 0)
          {
            case 0:
              goto label_11;
            case 2:
              goto label_12;
            default:
              num2 = 0;
              if (num2 == 0)
                ;
              num2 = 0;
              num1 = num2;
              continue;
          }
        }
        else
          goto label_10;
      }
label_8:
      return;
label_10:
      return;
label_11:
      return;
label_12:;
    }

    public void LogInfo(string message)
    {
      int A_1 = 7;
      int num1 = 2;
      while (true)
      {
        int num2;
        switch (num1)
        {
          case 0:
            this.b.Enqueue(string.Format(Utils.a("\uF2BA\uF3BC料軀蓼\uE5C4볆杻뛊", A_1), (object) message));
            this.c.Set();
            num2 = 1;
            num1 = num2;
            continue;
          case 1:
            goto label_8;
          case 2:
            switch (0)
            {
              case 0:
                break;
              default:
                continue;
            }
            break;
        }
        if (this.MessageLoggingLevel.HasFlag((Enum) LoggingLevel.Info))
        {
          num2 = 5586;
          int num3 = num2;
          num2 = 5586;
          int num4 = num2;
          switch (num3 == num4 ? 1 : 0)
          {
            case 0:
              goto label_11;
            case 2:
              goto label_12;
            default:
              num2 = 1;
              if (num2 == 0)
                ;
              num2 = 0;
              if (num2 == 0)
                ;
              num2 = 0;
              num1 = num2;
              continue;
          }
        }
        else
          goto label_10;
      }
label_8:
      return;
label_10:
      return;
label_11:
      return;
label_12:;
    }

    private void a(string A_0)
    {
      int A_1 = 14;
label_1:
      while (true)
      {
        if (false)
          ;
        this.c.WaitOne();
        try
        {
          StreamWriter streamWriter = new StreamWriter(A_0, true);
          try
          {
            int num1 = -25220;
            int num2;
            switch (-25220 == num1 ? 1 : 0)
            {
              case 0:
              case 2:
label_16:
                num1 = 5;
                num2 = num1;
                break;
              default:
                num1 = 0;
                if (num1 == 0)
                  ;
                num1 = 4;
                num2 = num1;
                break;
            }
            while (true)
            {
              string result;
              switch (num2)
              {
                case 0:
                  if (this.b.Count > 0)
                  {
                    num1 = 6;
                    num2 = num1;
                    continue;
                  }
                  num1 = 3;
                  num2 = num1;
                  continue;
                case 2:
                  streamWriter.WriteLine(DateTime.Now.ToString() + Utils.a("\uE2C1", A_1) + result);
                  num1 = 1;
                  num2 = num1;
                  continue;
                case 3:
                  goto label_16;
                case 4:
                  switch (0)
                  {
                    case 0:
                      break;
                    default:
                      continue;
                  }
                  break;
                case 5:
                  goto label_1;
                case 6:
                  if (this.b.TryDequeue(out result))
                  {
                    num1 = 2;
                    num2 = num1;
                    continue;
                  }
                  break;
              }
              num1 = 0;
              num2 = num1;
            }
          }
          finally
          {
            int num3 = 2;
            while (true)
            {
              int num4;
              switch (num3)
              {
                case 0:
                  streamWriter.Dispose();
                  num4 = 1;
                  num3 = num4;
                  continue;
                case 1:
                  goto label_23;
                case 2:
                  switch (0)
                  {
                    case 0:
                      break;
                    default:
                      continue;
                  }
                  break;
              }
              if (streamWriter != null)
              {
                num4 = 0;
                num3 = num4;
              }
              else
                break;
            }
label_23:;
          }
        }
        catch
        {
        }
      }
    }
  }
}
