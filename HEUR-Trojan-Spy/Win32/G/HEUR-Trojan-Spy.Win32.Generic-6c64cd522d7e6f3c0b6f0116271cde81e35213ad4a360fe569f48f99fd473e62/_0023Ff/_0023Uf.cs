// Decompiled with JetBrains decompiler
// Type: #Ff.#Uf
// Assembly: qouzb, Version=0.0.0.0, Culture=neutral, PublicKeyToken=34256fcd934ca661
// MVID: 528C9DDA-94F5-4688-B6FB-056FFA07C362
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-Spy.Win32.Generic-6c64cd522d7e6f3c0b6f0116271cde81e35213ad4a360fe569f48f99fd473e62.exe

using \u0023Ff;
using System;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace \u0023Ff
{
  internal class \u0023Uf : Control
  {
    private readonly Label \u0023Gf;
    internal Image \u0023Hf;
    internal bool \u0023If;
    internal readonly Timer \u0023Jf;
    internal bool \u0023Kf;
    internal string \u0023Lf;
    private float \u0023Mf;
    private float \u0023Nf;

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    string Control.\u0023Of() => __nonvirtual (((Control) this).Text);

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    void Control.\u0023Pf([In] string obj0)
    {
      // ISSUE: explicit non-virtual call
      __nonvirtual (((Control) this).Text) = obj0;
      this.Refresh();
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    void Control.\u0023Cf([In] EventArgs obj0)
    {
      this.\u0023Gf.SetBounds(Convert.ToInt32(22f * this.\u0023Mf), Convert.ToInt32(this.\u0023Nf), this.Width - Convert.ToInt32(22f * this.\u0023Mf), this.Height - Convert.ToInt32(this.\u0023Nf));
      // ISSUE: explicit non-virtual call
      __nonvirtual (((Control) this).OnResize(obj0));
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    void Control.\u0023Qf([In] float obj0, [In] float obj1)
    {
      int num = 1;
      while (true)
      {
        switch (num)
        {
          case 0:
          case 1:
            this.\u0023Mf = obj0;
            if (true)
            {
              num = 4;
              continue;
            }
            goto case 4;
          case 2:
          case 3:
            // ISSUE: explicit non-virtual call
            __nonvirtual (((Control) this).ScaleCore(obj0, obj1));
            ((Control) this).OnResize(EventArgs.Empty);
            num = 5;
            continue;
          case 4:
            this.\u0023Nf = obj1;
            goto case 2;
          case 5:
            goto label_7;
          default:
            num = 3;
            continue;
        }
      }
label_7:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    void Control.\u0023Rf([In] PaintEventArgs obj0)
    {
      int num1 = 0;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
              // ISSUE: explicit non-virtual call
              __nonvirtual (((Control) this).OnPaint(obj0));
              num2 = 4;
              continue;
            case 1:
            case 3:
              if (this.\u0023Hf != null && this.\u0023Kf)
              {
                obj0.Graphics.DrawImage(this.\u0023Hf, new Rectangle(0, 0, Convert.ToInt32(16f * this.\u0023Mf), Convert.ToInt32(16f * this.\u0023Nf)), new Rectangle(0, 0, 16, 16), GraphicsUnit.Pixel);
                num2 = 6;
                continue;
              }
              goto case 6;
            case 2:
            case 5:
              this.\u0023If = true;
              goto case 1;
            case 4:
              if (!this.DesignMode)
                goto case 1;
              else
                goto label_10;
            case 6:
              if (!this.\u0023If)
              {
                this.\u0023Gf.Text = string.Empty;
                if (!\u0023Uf.vd2cet509jNDfq5qGla())
                {
                  num2 = 7;
                  continue;
                }
                goto case 0;
              }
              else
                goto label_2;
            case 7:
              goto label_13;
            default:
              goto label_8;
          }
        }
label_8:
        num1 = 1;
        continue;
label_10:
        this.\u0023Hf = (Image) \u0023\u0023.\u00235i("current");
        num1 = 5;
      }
label_2:
      // ISSUE: explicit non-virtual call
      // ISSUE: explicit non-virtual call
      this.\u0023Gf.Text = this.\u0023Lf.Length > 0 ? __nonvirtual (((Control) this).Text) + " (" + this.\u0023Lf + ")" : __nonvirtual (((Control) this).Text);
      return;
label_13:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public \u0023Uf()
    {
      int num1 = 6;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 4:
              goto label_7;
            case 1:
            case 2:
              this.\u0023Jf = new Timer();
              num2 = 3;
              continue;
            case 3:
              this.\u0023Kf = true;
              this.\u0023Lf = string.Empty;
              this.\u0023Mf = 1f;
              this.\u0023Nf = 1f;
              // ISSUE: explicit constructor call
              base.\u002Ector();
              this.\u0023Jf.Interval = 250;
              goto case 5;
            case 5:
              this.\u0023Jf.Tick += new EventHandler(this.\u0023Tf);
              num2 = 0;
              continue;
            case 6:
              goto label_6;
            case 7:
              goto label_9;
            default:
              goto label_4;
          }
        }
label_4:
        num1 = 5;
        continue;
label_6:
        this.\u0023Gf = new Label();
        num1 = 2;
        continue;
label_7:
        this.\u0023Gf.FlatStyle = FlatStyle.System;
        this.Controls.Add((Control) this.\u0023Gf);
        this.SetStyle(ControlStyles.UserPaint | ControlStyles.ResizeRedraw | ControlStyles.SupportsTransparentBackColor | ControlStyles.AllPaintingInWmPaint | ControlStyles.DoubleBuffer, true);
        this.TabStop = false;
        num1 = 7;
      }
label_9:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    void Control.\u0023Sf([In] bool obj0)
    {
      int num1 = 0;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
              goto label_1;
            case 1:
            case 5:
              if (this.\u0023Hf != null)
              {
                this.\u0023Hf.Dispose();
                num2 = 3;
                continue;
              }
              goto label_3;
            case 2:
            case 3:
              goto label_3;
            case 4:
              goto label_9;
            case 6:
              goto label_10;
            default:
              goto label_6;
          }
        }
label_1:
        if (obj0)
        {
          num1 = 5;
          continue;
        }
        goto label_9;
label_3:
        this.\u0023Jf.Dispose();
        goto label_9;
label_6:
        num1 = 4;
        continue;
label_9:
        // ISSUE: explicit non-virtual call
        __nonvirtual (((Control) this).Dispose(obj0));
        num1 = 6;
      }
label_10:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void \u0023Tf([In] object obj0, [In] EventArgs obj1)
    {
      this.\u0023Kf = !this.\u0023Kf;
      this.Refresh();
    }

    internal static bool Raf9Ly5upNPHlsnFTwm() => true;

    internal static bool vd2cet509jNDfq5qGla() => false;
  }
}
