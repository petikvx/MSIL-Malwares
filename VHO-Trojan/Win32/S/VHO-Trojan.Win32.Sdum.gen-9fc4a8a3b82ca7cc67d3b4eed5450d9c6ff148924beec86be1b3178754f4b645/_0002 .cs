// Decompiled with JetBrains decompiler
// Type:  
// Assembly: Vqblspvdqljhpsgi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FE8081E8-66FB-4850-FD50-A5695502DCE6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\VHO-Trojan.Win32.Sdum.gen-9fc4a8a3b82ca7cc67d3b4eed5450d9c6ff148924beec86be1b3178754f4b645.exe

using System;
using System.Runtime.CompilerServices;
using System.Security.Cryptography;

internal sealed class \u0002\u2000 : \u0006, IDisposable
{
  private \u0008\u2000 \u0002;
  private byte[] \u0003;
  private readonly int \u0005;
  private readonly int \u0008;

  public \u0002\u2000(\u0008\u2000 _param1)
  {
    if (_param1 == null)
      throw new ArgumentNullException();
    \u0008\u2000 obj = !_param1.\u0002() ? _param1 : throw new NotSupportedException();
    if (true)
      goto label_8;
label_5:
    byte[] numArray = new byte[_param1.\u0006\u2009​\u0003()];
    if (true)
      goto label_9;
label_6:
    int num = this.\u0002();
    if (true)
      goto label_10;
label_7:
    this.\u0008 = this.\u0003();
    return;
label_10:
    this.\u0005 = num;
    goto label_7;
label_9:
    this.\u0003 = numArray;
    goto label_6;
label_8:
    this.\u0002 = obj;
    goto label_5;
  }

  private int \u0002()
  {
    if (true)
      ;
    return this.\u0002.\u0006\u2009​\u0002();
  }

  private int \u0003()
  {
    if (true)
      ;
    return this.\u0002.\u0006\u2009​\u0003() - 10;
  }

  [CompilerGenerated]
  [SpecialName]
  public int \u0006\u2009​\u0002()
  {
    if (true)
      ;
    return this.\u0005;
  }

  [CompilerGenerated]
  [SpecialName]
  public int \u0006\u2009​\u0003()
  {
    if (true)
      ;
    return this.\u0008;
  }

  public int \u0006\u2009​\u0002(
    byte[] _param1,
    int _param2,
    int _param3,
    byte[] _param4,
    int _param5,
    RandomNumberGenerator _param6)
  {
    if (true)
      ;
    byte[] numArray1 = _param1;
    if (true)
      ;
    int num1 = _param2;
    if (true)
      ;
    int num2 = _param3;
    byte[] numArray2 = _param4;
    int num3 = _param5;
    RandomNumberGenerator randomNumberGenerator = _param6;
    return this.\u0002(numArray1, num1, num2, numArray2, num3, randomNumberGenerator);
  }

  private int \u0002(
    byte[] _param1,
    int _param2,
    int _param3,
    byte[] _param4,
    int _param5,
    RandomNumberGenerator _param6)
  {
    int num1 = this.\u0002.\u0006\u2009​\u0003();
    if (true)
      goto label_4;
label_1:
    byte[] numArray = this.\u0003;
    if (true)
      goto label_5;
label_2:
    byte[] src;
    this.\u0002.\u0006\u2009​\u0002(_param1, _param2, _param3, src, 0, _param6);
    int num2 = (int) src[0];
    int num3 = num2 != 2 ? 1 : 0;
    if (true)
      goto label_6;
label_3:
    int num4;
    int srcOffset = \u0002\u2000.\u0002((byte) num2, src, 0, num4) + 1;
    bool flag;
    if (flag | srcOffset < 10)
      throw new InvalidOperationException(\u0008\u2008\u2000.\u0002(-389107097));
    int count = num4 - srcOffset;
    Buffer.BlockCopy((Array) src, srcOffset, (Array) _param4, _param5, count);
    return count;
label_6:
    flag = num3 != 0;
    goto label_3;
label_5:
    src = numArray;
    goto label_2;
label_4:
    num4 = num1;
    goto label_1;
  }

  private static int \u0002(byte _param0, byte[] _param1, int _param2, int _param3)
  {
    int num1 = _param2 + 1;
    int index;
    if (true)
      index = num1;
    while (index != _param2 + _param3)
    {
      if (_param1[index] == (byte) 0)
        return index;
      int num2 = index + 1;
      if (true)
        index = num2;
    }
    return -1;
  }

  public void Dispose()
  {
    if (this.\u0002 == null)
      return;
    this.\u0002.Dispose();
    if (false)
      return;
    this.\u0002 = (\u0008\u2000) null;
  }
}
