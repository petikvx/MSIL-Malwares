// Decompiled with JetBrains decompiler
// Type: TagMp3Saito.ReflectHelp.Serializer
// Assembly: ManualResetEv, Version=0.7.2.0, Culture=neutral, PublicKeyToken=null
// MVID: 555BB952-8DEA-4CDE-87A4-0E642B4B65E6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Backdoor.MSIL.Androm.gen-1e9b14262f935e7f822b39afe45842ceac9c584e70a3b520d8f391d975d600ee.exe

using System.IO;
using System.Text;
using System.Xml;
using System.Xml.Serialization;

namespace TagMp3Saito.ReflectHelp
{
  internal class Serializer
  {
    private static string UTF8ByteArrayToString(byte[] characters) => new UTF8Encoding().GetString(characters);

    private static byte[] StringToUTF8ByteArray(string pXmlString) => new UTF8Encoding().GetBytes(pXmlString);

    public static string SerializeObject<T>(T obj)
    {
      MemoryStream w = new MemoryStream();
      XmlSerializer xmlSerializer = new XmlSerializer(typeof (T));
      XmlTextWriter xmlTextWriter = new XmlTextWriter((Stream) w, Encoding.UTF8);
      xmlSerializer.Serialize((XmlWriter) xmlTextWriter, (object) obj);
      return Serializer.UTF8ByteArrayToString(((MemoryStream) xmlTextWriter.BaseStream).ToArray());
    }

    public static T DeserializeObject<T>(string xml)
    {
      XmlSerializer xmlSerializer = new XmlSerializer(typeof (T));
      MemoryStream w = new MemoryStream(Serializer.StringToUTF8ByteArray(xml));
      XmlTextWriter xmlTextWriter = new XmlTextWriter((Stream) w, Encoding.UTF8);
      return (T) xmlSerializer.Deserialize((Stream) w);
    }
  }
}
