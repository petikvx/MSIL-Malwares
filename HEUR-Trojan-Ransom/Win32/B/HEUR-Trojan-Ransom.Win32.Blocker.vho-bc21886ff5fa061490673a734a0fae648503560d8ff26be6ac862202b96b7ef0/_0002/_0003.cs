// Decompiled with JetBrains decompiler
// Type: .
// Assembly: w, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8101C3F8-A792-4EB9-952B-26F7AB9A4B5A
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00100-msil\HEUR-Trojan-Ransom.Win32.Blocker.vho-bc21886ff5fa061490673a734a0fae648503560d8ff26be6ac862202b96b7ef0.exe

using \u0002;
using \u0006;
using \u0008;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Net;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using System.Xml;

namespace \u0002
{
  internal class \u0003 : \u0005.\u0002
  {
    private readonly Exception \u0001;
    private readonly Guid \u0001;
    internal readonly char[] \u0001 = new char[0];
    private readonly Dictionary<string, object> \u0001 = new Dictionary<string, object>();
    private readonly Dictionary<string, \u0003.\u0001> \u0001 = new Dictionary<string, \u0003.\u0001>();
    internal readonly XmlWriter \u0001;
    private readonly List<\u0006.\u0005> \u0001 = new List<\u0006.\u0005>();
    private readonly List<string> \u0001 = new List<string>();
    private readonly Dictionary<string, int> \u0001 = new Dictionary<string, int>();
    internal readonly List<\u0003.\u0002> \u0001 = new List<\u0003.\u0002>();
    internal readonly Dictionary<string, int> \u0002 = new Dictionary<string, int>();
    private readonly MemoryStream \u0001;
    private byte[] \u0001;
    internal \u0003 \u0001;
    internal EventHandler \u0001;
    [NonSerialized]
    internal static \u0001 \u008F;

    public \u0003([In] Guid obj0, [In] Exception obj1, [In] IWebProxy obj2)
    {
      this.\u0001 = obj0;
      this.\u0001 = obj1;
      this.\u0001 = new MemoryStream();
      this.\u0001 = (XmlWriter) new XmlTextWriter((Stream) this.\u0001, (Encoding) new UTF8Encoding(false));
      base.\u0001 = obj2;
      string upper;
      if ((upper = \u0003.\u008F(4150).ToUpper()) == null)
        return;
      if (!(upper == \u0003.\u008F(4163)))
      {
        if (!(upper == \u0003.\u008F(4150)))
          return;
        this.\u0001 = new char[58]
        {
          '\u0001',
          '\u0002',
          '\u0003',
          '\u0004',
          '\u0005',
          '\u0006',
          '\a',
          '\b',
          '\u000E',
          '\u000F',
          '\u0010',
          '\u0011',
          '\u0012',
          '\u0013',
          '\u0014',
          '\u0015',
          '\u0016',
          '\u0017',
          '\u0018',
          '\u0019',
          '\u001A',
          '\u001B',
          '\u001C',
          '\u001D',
          '\u001E',
          '\u001F',
          '\u007F',
          '\u0080',
          '\u0081',
          '\u0082',
          '\u0083',
          '\u0084',
          '\u0086',
          '\u0087',
          '\u0088',
          '\u0089',
          '\u008A',
          '\u008B',
          '\u008C',
          '\u008D',
          '\u008E',
          '\u008F',
          '\u0090',
          '\u0091',
          '\u0092',
          '\u0093',
          '\u0094',
          '\u0095',
          '\u0096',
          '\u0097',
          '\u0098',
          '\u0099',
          '\u009A',
          '\u009B',
          '\u009C',
          '\u009D',
          '\u009E',
          '\u009F'
        };
      }
      else
        this.\u0001 = new char[62]
        {
          'a',
          'b',
          'c',
          'd',
          'e',
          'f',
          'g',
          'h',
          'i',
          'j',
          'k',
          'l',
          'm',
          'n',
          'o',
          'p',
          'q',
          'r',
          's',
          't',
          'u',
          'v',
          'w',
          'x',
          'y',
          'z',
          'A',
          'B',
          'C',
          'D',
          'E',
          'F',
          'G',
          'H',
          'I',
          'J',
          'K',
          'L',
          'M',
          'N',
          'O',
          'P',
          'Q',
          'R',
          'S',
          'T',
          'U',
          'V',
          'W',
          'X',
          'Y',
          'Z',
          '0',
          '1',
          '2',
          '3',
          '4',
          '5',
          '6',
          '7',
          '8',
          '9'
        };
    }

    private unsafe void \u0001([In] \u0006.\u0005 obj0, [In] FieldInfo obj1)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(8);
label_1:
      object obj2;
      string str1;
      string str2;
      Type type1;
      string str3;
      string str4;
      while (true)
      {
        string str5 = (object) obj1 == null ? (string) null : \u001E.\u007E\u0010\u0002((object) obj1);
        if (true)
          str2 = str5;
        string str6;
        do
        {
          str1 = (object) obj1 == null ? \u0003.\u008F(4181) : \u0003.\u008F(4172);
          obj2 = obj0.\u0001;
          if (obj2 != null)
          {
            type1 = \u0094\u0002.\u007E\u0017\u0005(obj0.\u0001);
            str3 = (string) null;
            str4 = (string) null;
            if (obj2 is string)
              str3 = \u0003.\u008F(4239);
            if (str3 == null)
            {
              if (\u0087.\u007E\u008C\u0002((object) type1) || obj2 is IntPtr || obj2 is UIntPtr)
              {
                if (true)
                {
                  str3 = \u001E.\u007E\u0011\u0002((object) type1);
                  if (obj2 is char ch)
                  {
                    *(int*) voidPtr = (int) ch;
                    StringBuilder stringBuilder1 = new StringBuilder();
                    if (*(int*) voidPtr >= 32)
                    {
                      StringBuilder stringBuilder2 = \u0093\u0003.\u007E\u001D\u0006((object) stringBuilder1, '\'');
                      StringBuilder stringBuilder3 = \u0093\u0003.\u007E\u001D\u0006((object) stringBuilder1, (char) obj2);
                      StringBuilder stringBuilder4 = \u0094\u0003.\u007E\u001E\u0006((object) stringBuilder1, \u0003.\u008F(4260));
                    }
                    StringBuilder stringBuilder5 = \u0094\u0003.\u007E\u001E\u0006((object) stringBuilder1, \u0003.\u008F(4265));
                    StringBuilder stringBuilder6 = \u0094\u0003.\u007E\u001E\u0006((object) stringBuilder1, ((int*) voidPtr)->ToString(\u0003.\u008F(967)));
                    StringBuilder stringBuilder7 = \u0093\u0003.\u007E\u001D\u0006((object) stringBuilder1, ')');
                    str4 = \u001E.\u007E\u000F\u0002((object) stringBuilder1);
                  }
                  if (obj2 is bool)
                    str4 = \u001E.\u007E\u009C((object) \u001E.\u007E\u000F\u0002(obj2));
                  if (str4 == null)
                    str6 = \u0007.\u0001(obj2);
                  else
                    goto label_44;
                }
                else
                  goto label_1;
              }
              else
                goto label_42;
            }
            else
              goto label_44;
          }
          else
            goto label_3;
        }
        while (false);
        goto label_39;
label_3:
        \u000E.\u0004 obj3 = new \u000E.\u0004(this.\u0001, str1);
        try
        {
          Type type2;
          if ((object) obj1 != null)
          {
            if (true)
            {
              if (\u0087.\u007E\u0087\u0002((object) obj1))
                \u0095\u0002.\u007E\u0018\u0005((object) this.\u0001, \u0003.\u008F(4190), \u0003.\u008F(2414));
              type2 = \u0094\u0002.\u007E\u0015\u0005((object) obj1);
              if ((object) type2 != null && \u0087.\u007E\u0088\u0002((object) type2))
              {
                this.\u0001(\u0094\u0002.\u007E\u0016\u0005((object) type2));
                if (!\u0087.\u007E\u0089\u0002((object) type2))
                  goto label_11;
                else
                  goto label_10;
              }
            }
            this.\u0001(type2);
            goto label_18;
          }
          else
            goto label_18;
label_10:
          \u0095\u0002.\u007E\u0018\u0005((object) this.\u0001, \u0003.\u008F(4199), \u0003.\u008F(2414));
label_11:
          int num = \u0087.\u007E\u008A\u0002((object) type2) ? 1 : 0;
          if (true)
          {
            if (num != 0)
              \u0095\u0002.\u007E\u0018\u0005((object) this.\u0001, \u0003.\u008F(4208), \u0003.\u008F(2414));
            num = \u0087.\u007E\u008B\u0002((object) type2) ? 1 : 0;
          }
          if (num != 0)
          {
            \u0095\u0002 obj4 = \u0095\u0002.\u007E\u0018\u0005;
            XmlWriter xmlWriter = this.\u0001;
            string str7 = \u0003.\u008F(4221);
            *(int*) ((IntPtr) voidPtr + 4) = \u0018.\u007E\u0090((object) type2);
            string str8 = ((int*) ((IntPtr) voidPtr + 4))->ToString();
            obj4((object) xmlWriter, str7, str8);
          }
label_18:
          if (true)
          {
            if (str2 != null)
              this.\u0001(str2);
            \u0095\u0002.\u007E\u0018\u0005((object) this.\u0001, \u0003.\u008F(4230), \u0003.\u008F(2414));
            return;
          }
          goto label_10;
        }
        finally
        {
          if (obj3 != null)
            \u009B.\u007E\u007F\u0003((object) obj3);
        }
label_39:
        if (\u0018.\u007E\u0084((object) str6) > 0)
        {
          StringBuilder stringBuilder8 = new StringBuilder();
          StringBuilder stringBuilder9 = \u0094\u0003.\u007E\u001E\u0006((object) stringBuilder8, \u001E.\u007E\u000F\u0002(obj2));
          StringBuilder stringBuilder10 = \u0094\u0003.\u007E\u001E\u0006((object) stringBuilder8, \u0003.\u008F(4270));
          StringBuilder stringBuilder11 = \u0094\u0003.\u007E\u001E\u0006((object) stringBuilder8, str6);
          StringBuilder stringBuilder12 = \u0093\u0003.\u007E\u001D\u0006((object) stringBuilder8, ')');
          str4 = \u001E.\u007E\u000F\u0002((object) stringBuilder8);
          goto label_44;
        }
        else
          break;
label_42:
        if (\u0087.\u007E\u008D\u0002((object) type1) && (object) \u0095\u0003.\u007E\u001F\u0006((object) type1) != (object) \u0095\u0003.\u007E\u001F\u0006((object) \u0094\u0002.\u0017\u0005((object) this)))
        {
          str3 = \u001E.\u007E\u0011\u0002((object) type1);
          goto label_44;
        }
        else
          goto label_44;
      }
      str4 = \u001E.\u007E\u000F\u0002(obj2);
label_44:
      \u000E.\u0004 obj5 = new \u000E.\u0004(this.\u0001, str1);
      try
      {
        if ((object) obj1 != null && \u0087.\u007E\u0087\u0002((object) obj1))
          \u0095\u0002.\u007E\u0018\u0005((object) this.\u0001, \u0003.\u008F(4190), \u0003.\u008F(2414));
        if (str3 != null)
        {
          this.\u0001(type1);
          if (str2 != null)
            this.\u0001(str2);
          if (\u0087.\u007E\u008E\u0002((object) type1))
            str4 = \u001E.\u007E\u000F\u0002(obj2);
          if (obj2 is Guid)
            str4 = \u0080\u0002.\u0096\u0004((object) \u0003.\u008F(3829), obj2, (object) \u0003.\u008F(4279));
          if (str4 == null)
            str4 = \u0080\u0002.\u0096\u0004((object) \u0003.\u008F(1173), obj2, (object) \u0003.\u008F(1173));
          \u0095\u0002.\u007E\u0018\u0005((object) this.\u0001, \u0003.\u008F(4284), \u0007.\u0001(str4));
          if (true)
            return;
        }
        else
        {
          if ((object) obj1 != null)
            this.\u0001(\u0094\u0002.\u007E\u0015\u0005((object) obj1));
          this.\u0001(obj0);
          if (str2 == null)
            return;
        }
        this.\u0001(str2);
      }
      finally
      {
        if (obj5 != null)
          \u009B.\u007E\u007F\u0003((object) obj5);
      }
    }

    internal unsafe void \u0001([In] \u0006.\u0005 obj0)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(8);
      object obj = obj0.\u0001;
      *(int*) voidPtr = -1;
      *(int*) ((IntPtr) voidPtr + 4) = 0;
      while (*(int*) ((IntPtr) voidPtr + 4) < this.\u0001.Count)
      {
        if (\u0096\u0003.\u0080\u0006(this.\u0001[*(int*) ((IntPtr) voidPtr + 4)].\u0001, obj))
        {
          *(int*) voidPtr = *(int*) ((IntPtr) voidPtr + 4);
          break;
        }
        *(int*) ((IntPtr) voidPtr + 4) = *(int*) ((IntPtr) voidPtr + 4) + 1;
      }
      if (*(int*) voidPtr == -1)
      {
        *(int*) voidPtr = this.\u0001.Count;
        this.\u0001.Add(obj0);
      }
      \u0095\u0002.\u007E\u0018\u0005((object) this.\u0001, \u0003.\u008F(4293), ((int*) voidPtr)->ToString());
    }

    private void \u0001([In] string obj0)
    {
      int num = \u0007.\u0001(this, obj0);
      if (num != -1)
        \u0095\u0002.\u007E\u0018\u0005((object) this.\u0001, \u0003.\u008F(4298), num.ToString());
      else
        \u0095\u0002.\u007E\u0018\u0005((object) this.\u0001, \u0003.\u008F(871), obj0);
    }

    private static \u0003.\u0003 \u0001([In] Type obj0)
    {
      \u0003.\u0003 obj = \u0003.\u0003.\u0001();
      if ((object) obj0 != null && (object) \u0098\u0003.\u007E\u0082\u0006((object) \u0097\u0003.\u007E\u0081\u0006((object) obj0), \u0003.\u008F(4307)) != null)
      {
        obj.\u0001 = ((\u0018.\u007E\u008E((object) obj0) & 16777215) - 1).ToString();
        Assembly assembly = \u0097\u0003.\u007E\u0081\u0006((object) obj0);
        obj.\u0001 = new \u0003.\u0002(\u0099\u0003.\u007E\u0083\u0006((object) \u0095\u0003.\u007E\u007F\u0006((object) assembly)).ToString(\u0003.\u008F(4368)), \u001E.\u007E\u0012\u0002((object) assembly));
      }
      return obj;
    }

    internal unsafe void \u0001([In] Type obj0)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(12);
      if (false)
        return;
      if ((object) obj0 == null)
        return;
      try
      {
        \u0003.\u0003 obj = \u0003.\u0001(obj0);
        if (!obj.\u0001())
        {
          \u0095\u0002.\u007E\u0018\u0005((object) this.\u0001, \u0003.\u008F(4373), obj.\u0001);
          *(int*) voidPtr = \u0007.\u0001(this, obj);
          if (*(int*) voidPtr <= 0)
            return;
          \u0095\u0002.\u007E\u0018\u0005((object) this.\u0001, \u0003.\u008F(4386), ((int*) voidPtr)->ToString());
        }
        else
        {
          string key = \u001E.\u007E\u0011\u0002((object) obj0);
          if (this.\u0001.ContainsKey(key))
          {
            *(int*) ((IntPtr) voidPtr + 4) = this.\u0001[key];
          }
          else
          {
            StringBuilder stringBuilder1 = new StringBuilder();
            string str1 = \u001E.\u007E\u0013\u0002((object) \u009A\u0003.\u007E\u0084\u0006((object) \u0097\u0003.\u007E\u0081\u0006((object) obj0)));
            if (\u0018.\u007E\u0084((object) str1) > 0 && \u0095.\u0018\u0003(str1, \u0003.\u008F(4399)))
            {
              StringBuilder stringBuilder2 = \u0093\u0003.\u007E\u001D\u0006((object) stringBuilder1, '[');
              StringBuilder stringBuilder3 = \u0094\u0003.\u007E\u001E\u0006((object) stringBuilder1, str1);
              StringBuilder stringBuilder4 = \u0093\u0003.\u007E\u001D\u0006((object) stringBuilder1, ']');
            }
            string str2 = \u001E.\u007E\u0014\u0002((object) obj0);
            if (\u0018.\u007E\u0084((object) str2) > 0)
            {
              StringBuilder stringBuilder5 = \u0094\u0003.\u007E\u001E\u0006((object) stringBuilder1, str2);
              StringBuilder stringBuilder6 = \u0093\u0003.\u007E\u001D\u0006((object) stringBuilder1, '.');
            }
            if (\u0087.\u007E\u0088\u0002((object) obj0))
              obj0 = \u0094\u0002.\u007E\u0016\u0005((object) obj0);
            *(int*) ((IntPtr) voidPtr + 8) = \u0098\u0002.\u007E\u001D\u0005((object) key, \u0003.\u008F(4412));
            if (*(int*) ((IntPtr) voidPtr + 8) <= 0)
              goto label_16;
label_15:
            string str3 = \u009C.\u007E\u0097\u0003((object) \u0080.\u007E\u001E\u0002((object) key, \u0018.\u007E\u0084((object) str2) + 1, *(int*) ((IntPtr) voidPtr + 8) - \u0018.\u007E\u0084((object) str2)), \u0003.\u008F(4412), \u0003.\u008F(3208));
            StringBuilder stringBuilder7 = \u0094\u0003.\u007E\u001E\u0006((object) stringBuilder1, str3);
label_16:
            StringBuilder stringBuilder8 = \u0094\u0003.\u007E\u001E\u0006((object) stringBuilder1, \u001E.\u007E\u0010\u0002((object) obj0));
            *(int*) ((IntPtr) voidPtr + 4) = this.\u0001.Count;
            this.\u0001.Add(\u001E.\u007E\u000F\u0002((object) stringBuilder1));
            if (true)
              this.\u0001.Add(key, *(int*) ((IntPtr) voidPtr + 4));
            else
              goto label_15;
          }
          \u0095\u0002.\u007E\u0018\u0005((object) this.\u0001, \u0003.\u008F(4417), ((int*) ((IntPtr) voidPtr + 4))->ToString());
        }
      }
      catch
      {
      }
    }

    internal unsafe byte[] \u0001()
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(52);
      if (this.\u0001 != null)
        return this.\u0001;
      \u009B.\u007E\u008E\u0003((object) this.\u0001);
      \u000E.\u0004 obj1 = new \u000E.\u0004(this.\u0001, \u0003.\u008F(4430));
      try
      {
        \u0095\u0002.\u007E\u0018\u0005((object) this.\u0001, \u0003.\u008F(4463), \u001E.\u007E\u009B((object) \u0003.\u008F(1525)));
        \u0095\u0002.\u007E\u0018\u0005((object) this.\u0001, \u0003.\u008F(4480), \u009B\u0003.\u0086\u0006().ToString(\u0003.\u008F(4493)));
        \u0095\u0002.\u007E\u0018\u0005((object) this.\u0001, \u0003.\u008F(2419), \u0007.\u0001());
        if (\u009C\u0003.\u0087\u0006(this.\u0001, Guid.Empty))
          \u0095\u0002.\u007E\u0018\u0005((object) this.\u0001, \u0003.\u008F(4498), this.\u0001.ToString(\u0003.\u008F(4368)));
        \u0095\u0002.\u007E\u0018\u0005((object) this.\u0001, \u0003.\u008F(4507), \u009D\u0003.\u0088\u0006().ToString(\u0003.\u008F(4368)));
        if (this.\u0001.Count > 0)
          this.\u0001.Clear();
        this.\u0001.Add(new \u0003.\u0002(\u0003.\u008F(1525), string.Empty));
        if (this.\u0002.Count > 0)
          this.\u0002.Clear();
        this.\u0002.Add(\u0003.\u008F(1525), 0);
        \u000E.\u0004 obj2 = new \u000E.\u0004(this.\u0001, \u0003.\u008F(4520));
        try
        {
          Assembly assembly1 = \u0007.\u0001();
          Assembly[] assemblyArray = \u0007.\u0001(this);
          *(int*) ((IntPtr) voidPtr + 32) = 0;
          while (*(int*) ((IntPtr) voidPtr + 32) < assemblyArray.Length)
          {
            Assembly assembly2 = assemblyArray[*(int*) ((IntPtr) voidPtr + 32)];
            if ((object) assembly2 != null)
            {
              \u000E.\u0004 obj3 = new \u000E.\u0004(this.\u0001, \u0003.\u008F(4386));
              try
              {
                \u0095\u0002.\u007E\u0018\u0005((object) this.\u0001, \u0003.\u008F(871), \u001E.\u007E\u0012\u0002((object) assembly2));
                \u0095\u0002.\u007E\u0018\u0005((object) this.\u0001, \u0003.\u008F(4537), \u001E.\u007E\u0015\u0002((object) assembly2));
                if ((object) assembly2 == (object) assembly1)
                  \u0095\u0002.\u007E\u0018\u0005((object) this.\u0001, \u0003.\u008F(4550), \u0003.\u008F(2414));
              }
              catch
              {
              }
              finally
              {
                if (obj3 != null)
                  \u009B.\u007E\u007F\u0003((object) obj3);
              }
            }
            *(int*) ((IntPtr) voidPtr + 32) = *(int*) ((IntPtr) voidPtr + 32) + 1;
          }
        }
        finally
        {
          if (obj2 != null)
            \u009B.\u007E\u007F\u0003((object) obj2);
        }
        \u000E.\u0004 obj4 = new \u000E.\u0004(this.\u0001, \u0003.\u008F(4559));
        try
        {
          if (this.\u0001 != null)
          {
            if (this.\u0001.Count > 0)
            {
              foreach (string key in this.\u0001.Keys)
              {
                \u000E.\u0004 obj5 = new \u000E.\u0004(this.\u0001, \u0003.\u008F(4584));
                try
                {
                  \u0095\u0002.\u007E\u0018\u0005((object) this.\u0001, \u0003.\u008F(871), key);
                  string str = (string) this.\u0001[key];
                  if (str == null)
                    \u0095\u0002.\u007E\u0018\u0005((object) this.\u0001, \u0003.\u008F(4230), \u0003.\u008F(2414));
                  else
                    \u0095\u0002.\u007E\u0018\u0005((object) this.\u0001, \u0003.\u008F(4284), global::\u0004.\u0004(\u0003.\u008F(1173), str, \u0003.\u008F(1173)));
                }
                finally
                {
                  if (obj5 != null)
                    \u009B.\u007E\u007F\u0003((object) obj5);
                }
              }
            }
          }
        }
        finally
        {
          if (obj4 != null)
            \u009B.\u007E\u007F\u0003((object) obj4);
        }
        if (this.\u0001 != null && this.\u0001.Count > 0)
        {
          \u000E.\u0004 obj6 = new \u000E.\u0004(this.\u0001, \u0003.\u008F(4605));
          try
          {
            foreach (string key in this.\u0001.Keys)
            {
              \u000E.\u0004 obj7 = new \u000E.\u0004(this.\u0001, \u0003.\u008F(4626));
              try
              {
                \u0095\u0002.\u007E\u0018\u0005((object) this.\u0001, \u0003.\u008F(4643), key);
                \u0003.\u0001 obj8 = this.\u0001[key];
                \u0095\u0002.\u007E\u0018\u0005((object) this.\u0001, \u0003.\u008F(2891), obj8.\u0001);
                \u0095\u0002 obj9 = \u0095\u0002.\u007E\u0018\u0005;
                XmlWriter xmlWriter = this.\u0001;
                string str1 = \u0003.\u008F(3502);
                *(int*) ((IntPtr) voidPtr + 36) = obj8.\u0001;
                string str2 = ((int*) ((IntPtr) voidPtr + 36))->ToString();
                obj9((object) xmlWriter, str1, str2);
                if (\u0018.\u007E\u0084((object) obj8.\u0003) > 0)
                  \u0095\u0002.\u007E\u0018\u0005((object) this.\u0001, \u0003.\u008F(4648), obj8.\u0003);
                else
                  \u0095\u0002.\u007E\u0018\u0005((object) this.\u0001, \u0003.\u008F(544), obj8.\u0002);
              }
              finally
              {
                if (obj7 != null)
                  \u009B.\u007E\u007F\u0003((object) obj7);
              }
            }
          }
          finally
          {
            if (obj6 != null)
              \u009B.\u007E\u007F\u0003((object) obj6);
          }
        }
        \u000E.\u0004 obj10 = new \u000E.\u0004(this.\u0001, \u0003.\u008F(4657));
        try
        {
          \u0095\u0002.\u007E\u0019\u0005((object) this.\u0001, \u0003.\u008F(4682), \u001E.\u007E\u000F\u0002((object) \u009E\u0003.\u0089\u0006()));
          \u0095\u0002.\u007E\u0019\u0005((object) this.\u0001, \u0003.\u008F(4699), \u001E.\u007E\u000F\u0002((object) \u009F\u0003.\u007E\u008A\u0006((object) \u0017\u0002.\u008A\u0004())));
          \u0095\u0002.\u007E\u0019\u0005((object) this.\u0001, \u0003.\u008F(4712), \u001E.\u007E\u000F\u0002((object) \u0001\u0004.\u007E\u008B\u0006((object) \u0017\u0002.\u008A\u0004())));
          \u0095\u0002.\u007E\u0019\u0005((object) this.\u0001, \u0003.\u008F(4729), \u0007.\u0001());
          this.\u0001.WriteElementString(\u0003.\u008F(4746), \u0007.\u0001() ? \u0003.\u008F(2414) : \u0003.\u008F(4759));
          this.\u0001.WriteElementString(\u0003.\u008F(4764), \u0007.\u0001() ? \u0003.\u008F(2414) : \u0003.\u008F(4759));
          this.\u0001.WriteElementString(\u0003.\u008F(4769), \u0007.\u0001() ? \u0003.\u008F(2414) : \u0003.\u008F(4759));
        }
        catch
        {
        }
        finally
        {
          if (obj10 != null)
            \u009B.\u007E\u007F\u0003((object) obj10);
        }
        List<Exception> exceptionList = new List<Exception>();
        for (Exception exception = this.\u0001; exception != null; exception = \u0002\u0004.\u007E\u008C\u0006((object) exception))
          exceptionList.Add(exception);
        exceptionList.Reverse();
        \u000E.\u0004 obj11 = new \u000E.\u0004(this.\u0001, \u0003.\u008F(4786));
        try
        {
          foreach (Exception exception in exceptionList)
          {
            try
            {
              \u0007.\u0001(this, exception);
              if (\u001F\u0003.\u007E\u0002\u0006((object) \u001E\u0003.\u007E\u0001\u0006((object) exception), (object) \u0003.\u008F(3393)))
              {
                ICollection collection = (ICollection) \u0090.\u007E\u000E\u0003((object) \u001E\u0003.\u007E\u0001\u0006((object) exception), (object) \u0003.\u008F(3393));
                *(int*) voidPtr = \u0018.\u007E\u0091((object) collection);
                *(int*) ((IntPtr) voidPtr + 4) = 0;
                IEnumerator enumerator = \u001A\u0002.\u007E\u008D\u0004((object) collection);
                try
                {
                  while (\u0087.\u007E\u0086\u0002((object) enumerator))
                  {
                    object obj12 = \u001B\u0002.\u007E\u008E\u0004((object) enumerator);
                    try
                    {
                      Type type = \u0094\u0002.\u007E\u0017\u0005(obj12);
                      *(int*) ((IntPtr) voidPtr + 4) = *(int*) ((IntPtr) voidPtr + 4) + 1;
                      if (*(int*) ((IntPtr) voidPtr + 4) > 100 && *(int*) ((IntPtr) voidPtr + 4) == *(int*) voidPtr - 100)
                      {
                        \u000E.\u0004 obj13 = new \u000E.\u0004(this.\u0001, \u0003.\u008F(4803));
                        try
                        {
                          \u0095\u0002.\u007E\u0018\u0005((object) this.\u0001, \u0003.\u008F(4824), ((int*) voidPtr)->ToString());
                        }
                        finally
                        {
                          if (obj13 != null)
                            \u009B.\u007E\u007F\u0003((object) obj13);
                        }
                      }
                      else
                      {
                        if (*(int*) ((IntPtr) voidPtr + 4) > 100)
                        {
                          if (*(int*) ((IntPtr) voidPtr + 4) <= *(int*) voidPtr - 100)
                            continue;
                        }
                        *(int*) ((IntPtr) voidPtr + 8) = (int) \u0090.\u007E\u000F\u0003((object) \u0003\u0004.\u007E\u008E\u0006((object) type, \u0003.\u008F(4849)), obj12);
                        *(int*) ((IntPtr) voidPtr + 12) = (int) \u0090.\u007E\u000F\u0003((object) \u0003\u0004.\u007E\u008E\u0006((object) type, \u0003.\u008F(4862)), obj12);
                        *(int*) ((IntPtr) voidPtr + 16) = (int) \u0090.\u007E\u000F\u0003((object) \u0003\u0004.\u007E\u008E\u0006((object) type, \u0003.\u008F(4875)), obj12);
                        object[] objArray1 = (object[]) \u0090.\u007E\u000F\u0003((object) \u0003\u0004.\u007E\u008E\u0006((object) type, \u0003.\u008F(4904)), obj12);
                        \u0003.\u0003 obj14 = \u0003.\u0001(type);
                        if (!obj14.\u0001())
                        {
                          \u000E.\u0004 obj15 = new \u000E.\u0004(this.\u0001, \u0003.\u008F(4917));
                          try
                          {
                            \u0095\u0002.\u007E\u0018\u0005((object) this.\u0001, \u0003.\u008F(4849), ((int*) ((IntPtr) voidPtr + 8))->ToString());
                            \u0095\u0002.\u007E\u0018\u0005((object) this.\u0001, \u0003.\u008F(4875), ((int*) ((IntPtr) voidPtr + 16))->ToString());
                            *(int*) ((IntPtr) voidPtr + 20) = \u0007.\u0001(this, obj14);
                            if (*(int*) ((IntPtr) voidPtr + 20) > 0)
                              \u0095\u0002.\u007E\u0018\u0005((object) this.\u0001, \u0003.\u008F(4386), ((int*) ((IntPtr) voidPtr + 20))->ToString());
                            if (*(int*) ((IntPtr) voidPtr + 12) != -1)
                              \u0095\u0002.\u007E\u0018\u0005((object) this.\u0001, \u0003.\u008F(4862), ((int*) ((IntPtr) voidPtr + 12))->ToString());
                            object[] objArray2 = objArray1;
                            *(int*) ((IntPtr) voidPtr + 40) = 0;
                            while (*(int*) ((IntPtr) voidPtr + 40) < objArray2.Length)
                            {
                              object obj16 = objArray2[*(int*) ((IntPtr) voidPtr + 40)];
                              try
                              {
                                this.\u0001(new \u0006.\u0005(obj16, true), (FieldInfo) null);
                              }
                              catch
                              {
                              }
                              *(int*) ((IntPtr) voidPtr + 40) = *(int*) ((IntPtr) voidPtr + 40) + 1;
                            }
                          }
                          finally
                          {
                            if (obj15 != null)
                              \u009B.\u007E\u007F\u0003((object) obj15);
                          }
                        }
                      }
                    }
                    catch
                    {
                    }
                  }
                }
                finally
                {
                  if (enumerator is IDisposable disposable)
                    \u009B.\u007E\u007F\u0003((object) disposable);
                }
              }
            }
            catch
            {
            }
          }
        }
        finally
        {
          if (obj11 != null)
            \u009B.\u007E\u007F\u0003((object) obj11);
        }
        this.\u0001();
        \u000E.\u0004 obj17 = new \u000E.\u0004(this.\u0001, \u0003.\u008F(4934));
        try
        {
          \u0095\u0002 obj18 = \u0095\u0002.\u007E\u0018\u0005;
          XmlWriter xmlWriter = this.\u0001;
          string str3 = \u0003.\u008F(4947);
          *(int*) ((IntPtr) voidPtr + 44) = this.\u0001.Count;
          string str4 = ((int*) ((IntPtr) voidPtr + 44))->ToString();
          obj18((object) xmlWriter, str3, str4);
          *(int*) ((IntPtr) voidPtr + 24) = 0;
          while (*(int*) ((IntPtr) voidPtr + 24) < this.\u0001.Count)
          {
            string str5;
            try
            {
              str5 = \u001E.\u007E\u000F\u0002((object) this.\u0001[*(int*) ((IntPtr) voidPtr + 24)]);
            }
            catch (Exception ex)
            {
              str5 = \u0080\u0002.\u0096\u0004((object) '"', (object) \u001E.\u007E\u0004\u0002((object) ex), (object) '"');
            }
            \u0095\u0002.\u007E\u0019\u0005((object) this.\u0001, \u0003.\u008F(4417), str5);
            *(int*) ((IntPtr) voidPtr + 24) = *(int*) ((IntPtr) voidPtr + 24) + 1;
          }
        }
        finally
        {
          if (obj17 != null)
            \u009B.\u007E\u007F\u0003((object) obj17);
        }
        \u000E.\u0004 obj19 = new \u000E.\u0004(this.\u0001, \u0003.\u008F(4956));
        try
        {
          \u0095\u0002 obj20 = \u0095\u0002.\u007E\u0018\u0005;
          XmlWriter xmlWriter = this.\u0001;
          string str6 = \u0003.\u008F(4947);
          *(int*) ((IntPtr) voidPtr + 48) = this.\u0001.Count;
          string str7 = ((int*) ((IntPtr) voidPtr + 48))->ToString();
          obj20((object) xmlWriter, str6, str7);
          *(int*) ((IntPtr) voidPtr + 28) = 0;
          while (*(int*) ((IntPtr) voidPtr + 28) < this.\u0001.Count)
          {
            \u000E.\u0004 obj21 = new \u000E.\u0004(this.\u0001, \u0003.\u008F(4463));
            try
            {
              \u0003.\u0002 obj22 = this.\u0001[*(int*) ((IntPtr) voidPtr + 28)];
              \u0095\u0002.\u007E\u0018\u0005((object) this.\u0001, \u0003.\u008F(4293), obj22.\u0001);
              if (\u0018.\u007E\u0084((object) obj22.\u0002) > 0)
                \u0095\u0002.\u007E\u0018\u0005((object) this.\u0001, \u0003.\u008F(2550), obj22.\u0002);
            }
            finally
            {
              if (obj21 != null)
                \u009B.\u007E\u007F\u0003((object) obj21);
            }
            *(int*) ((IntPtr) voidPtr + 28) = *(int*) ((IntPtr) voidPtr + 28) + 1;
          }
        }
        finally
        {
          if (obj19 != null)
            \u009B.\u007E\u007F\u0003((object) obj19);
        }
      }
      finally
      {
        if (obj1 != null)
          \u009B.\u007E\u007F\u0003((object) obj1);
      }
      \u009B.\u007E\u008F\u0003((object) this.\u0001);
      \u009B.\u007E\u0090\u0003((object) this.\u0001);
      \u009B.\u007E\u0091\u0003((object) this.\u0001);
      this.\u0001 = \u0019\u0003.\u007E\u0099\u0005((object) this.\u0001);
      return this.\u0001;
    }

    private unsafe void \u0001()
    {
      // ISSUE: untyped stack allocation
      IntPtr num1 = __untypedstackalloc(33);
      void* voidPtr;
      if (true)
        voidPtr = (void*) num1;
      \u000E.\u0004 obj1 = new \u000E.\u0004(this.\u0001, \u0003.\u008F(4904));
      try
      {
        *(int*) voidPtr = 0;
        while (*(int*) voidPtr < this.\u0001.Count)
        {
          \u0006.\u0005 obj2 = this.\u0001[*(int*) voidPtr];
          object obj3 = obj2.\u0001;
          Type type = obj2.\u0001;
          \u000E.\u0004 obj4 = new \u000E.\u0004(this.\u0001, \u0003.\u008F(4973));
          try
          {
            \u0095\u0002.\u007E\u0018\u0005((object) this.\u0001, \u0003.\u008F(4293), ((int*) voidPtr)->ToString());
            string str1 = (string) null;
            *(sbyte*) ((IntPtr) voidPtr + 32) = (sbyte) 1;
            string[] strArray = \u001B\u0003.\u007E\u009D\u0005((object) \u0003.\u008F(425), new char[1]
            {
              ','
            });
            *(int*) ((IntPtr) voidPtr + 20) = 0;
            while (*(int*) ((IntPtr) voidPtr + 20) < strArray.Length)
            {
              string str2 = strArray[*(int*) ((IntPtr) voidPtr + 20)];
              if (\u0095.\u0018\u0003(str2, \u0003.\u008F(425)) && \u0015.\u007E\u0080((object) \u001E.\u007E\u0011\u0002((object) type), str2))
              {
                *(sbyte*) ((IntPtr) voidPtr + 32) = (sbyte) 0;
                break;
              }
              *(int*) ((IntPtr) voidPtr + 20) = *(int*) ((IntPtr) voidPtr + 20) + 1;
            }
            object[] objArray = \u0004\u0004.\u007E\u008F\u0006((object) type, true);
            *(int*) ((IntPtr) voidPtr + 24) = 0;
            int num2;
            while (*(int*) ((IntPtr) voidPtr + 24) < objArray.Length)
            {
              Attribute attribute = (Attribute) objArray[*(int*) ((IntPtr) voidPtr + 24)];
              string str3 = \u001E.\u007E\u0010\u0002((object) \u0094\u0002.\u007E\u0017\u0005((object) attribute));
              if (true)
              {
                num2 = \u0095.\u0018\u0003(str3, \u0003.\u008F(4986)) ? 1 : 0;
                if (true)
                {
                  if (num2 == 0 || !\u0095.\u0018\u0003(str3, \u0003.\u008F(5023)))
                  {
                    *(sbyte*) ((IntPtr) voidPtr + 32) = (sbyte) 0;
                    break;
                  }
                  *(int*) ((IntPtr) voidPtr + 24) = *(int*) ((IntPtr) voidPtr + 24) + 1;
                }
                else
                  goto label_41;
              }
              else
                goto label_38;
            }
            if (*(sbyte*) ((IntPtr) voidPtr + 32) != (sbyte) 0)
            {
              try
              {
                str1 = \u001E.\u007E\u000F\u0002(obj3);
                str1 = !\u0095.\u0017\u0003(str1, \u001E.\u007E\u0011\u0002((object) type)) ? (!\u0087.\u007E\u008E\u0002((object) type) ? (!(obj3 is Guid) ? global::\u0004.\u0004(\u0003.\u008F(1173), str1, \u0003.\u008F(1173)) : global::\u0004.\u0004(\u0003.\u008F(3829), str1, \u0003.\u008F(4279))) : \u0005\u0004.\u0090\u0006(type, obj3, \u0003.\u008F(5052))) : (string) null;
              }
              catch
              {
              }
              if (str1 != null)
                \u0095\u0002.\u007E\u0018\u0005((object) this.\u0001, \u0003.\u008F(4284), \u0007.\u0001(str1));
            }
            Array array;
            if (\u0087.\u007E\u0088\u0002((object) type))
            {
              this.\u0001(\u0094\u0002.\u007E\u0016\u0005((object) type));
              if (\u0087.\u007E\u0089\u0002((object) type))
                \u0095\u0002.\u007E\u0018\u0005((object) this.\u0001, \u0003.\u008F(4199), \u0003.\u008F(2414));
              if (\u0087.\u007E\u008A\u0002((object) type))
                \u0095\u0002.\u007E\u0018\u0005((object) this.\u0001, \u0003.\u008F(4208), \u0003.\u008F(2414));
              if (\u0087.\u007E\u008B\u0002((object) type))
              {
                array = (Array) obj3;
                \u0095\u0002 obj5 = \u0095\u0002.\u007E\u0018\u0005;
                XmlWriter xmlWriter = this.\u0001;
                string str4 = \u0003.\u008F(4221);
                *(int*) ((IntPtr) voidPtr + 28) = \u0018.\u007E\u0092((object) array);
                string str5 = ((int*) ((IntPtr) voidPtr + 28))->ToString();
                obj5((object) xmlWriter, str4, str5);
                StringBuilder stringBuilder1 = new StringBuilder();
                *(int*) ((IntPtr) voidPtr + 4) = 0;
                while (*(int*) ((IntPtr) voidPtr + 4) < \u0018.\u007E\u0092((object) array))
                {
                  if (*(int*) ((IntPtr) voidPtr + 4) > 0)
                  {
                    StringBuilder stringBuilder2 = \u0093\u0003.\u007E\u001D\u0006((object) stringBuilder1, ',');
                  }
                  StringBuilder stringBuilder3 = \u0007\u0004.\u007E\u0092\u0006((object) stringBuilder1, \u0006\u0004.\u007E\u0091\u0006((object) array, *(int*) ((IntPtr) voidPtr + 4)));
                  *(int*) ((IntPtr) voidPtr + 4) = *(int*) ((IntPtr) voidPtr + 4) + 1;
                }
                \u0095\u0002.\u007E\u0018\u0005((object) this.\u0001, \u0003.\u008F(3502), \u001E.\u007E\u000F\u0002((object) stringBuilder1));
                if (\u0018.\u007E\u0092((object) array) == 1)
                {
                  *(int*) ((IntPtr) voidPtr + 8) = \u0018.\u007E\u0083((object) array);
                  *(int*) ((IntPtr) voidPtr + 12) = 0;
                }
                else
                  goto label_61;
              }
              else
                goto label_61;
            }
            else
            {
              this.\u0001(type);
              if (obj2.\u0001)
              {
                num2 = (int) *(sbyte*) ((IntPtr) voidPtr + 32);
                goto label_41;
              }
              else
                goto label_61;
            }
label_38:
            while (*(int*) ((IntPtr) voidPtr + 12) < *(int*) ((IntPtr) voidPtr + 8))
            {
              if (*(int*) ((IntPtr) voidPtr + 12) == 10)
              {
                if (*(int*) ((IntPtr) voidPtr + 8) > 16)
                  *(int*) ((IntPtr) voidPtr + 12) = *(int*) ((IntPtr) voidPtr + 8) - 5;
              }
              try
              {
                this.\u0001(new \u0006.\u0005(\u0008\u0004.\u007E\u0093\u0006((object) array, *(int*) ((IntPtr) voidPtr + 12)), false), (FieldInfo) null);
              }
              catch
              {
              }
              *(int*) ((IntPtr) voidPtr + 12) = *(int*) ((IntPtr) voidPtr + 12) + 1;
            }
            goto label_61;
label_41:
            if (num2 != 0)
            {
              try
              {
                if (obj3 is IEnumerable)
                {
                  \u000E.\u0004 obj6 = new \u000E.\u0004(this.\u0001, \u0003.\u008F(5057));
                  try
                  {
                    *(int*) ((IntPtr) voidPtr + 16) = 0;
                    IEnumerator enumerator = \u001A\u0002.\u007E\u008D\u0004((object) (IEnumerable) obj3);
                    try
                    {
                      while (\u0087.\u007E\u0086\u0002((object) enumerator))
                      {
                        object obj7 = \u001B\u0002.\u007E\u008E\u0004((object) enumerator);
                        if (*(int*) ((IntPtr) voidPtr + 16) > 20)
                        {
                          \u0095\u0002.\u007E\u0019\u0005((object) this.\u0001, \u0003.\u008F(5074), string.Empty);
                          break;
                        }
                        this.\u0001(new \u0006.\u0005(obj7, false), (FieldInfo) null);
                        *(int*) ((IntPtr) voidPtr + 16) = *(int*) ((IntPtr) voidPtr + 16) + 1;
                      }
                    }
                    finally
                    {
                      if (enumerator is IDisposable disposable)
                        \u009B.\u007E\u007F\u0003((object) disposable);
                    }
                  }
                  finally
                  {
                    if (obj6 != null)
                      \u009B.\u007E\u007F\u0003((object) obj6);
                  }
                }
              }
              catch
              {
              }
              this.\u0002(obj2);
            }
          }
          finally
          {
            if (obj4 != null)
              \u009B.\u007E\u007F\u0003((object) obj4);
          }
label_61:
          *(int*) voidPtr = *(int*) voidPtr + 1;
        }
      }
      finally
      {
        if (obj1 == null)
          goto label_67;
label_66:
        \u009B.\u007E\u007F\u0003((object) obj1);
label_67:
        if (false)
          goto label_66;
      }
    }

    private unsafe void \u0002([In] \u0006.\u0005 obj0)
    {
      void* voidPtr;
      FieldInfo[] fieldInfoArray1;
      if (true)
      {
        // ISSUE: untyped stack allocation
        voidPtr = (void*) __untypedstackalloc(13);
        FieldInfo[] fieldInfoArray2 = \u000E\u0004.\u007E\u0094\u0006((object) obj0.\u0001, BindingFlags.DeclaredOnly | BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic);
        FieldInfo[] fieldInfoArray3;
        if (true)
          fieldInfoArray3 = fieldInfoArray2;
        fieldInfoArray1 = fieldInfoArray3;
        *(int*) voidPtr = 0;
      }
      while (*(int*) voidPtr < fieldInfoArray1.Length)
      {
        FieldInfo fieldInfo = fieldInfoArray1[*(int*) voidPtr];
        try
        {
          if (!\u0087.\u007E\u008F\u0002((object) fieldInfo))
          {
            if (\u0087.\u007E\u0087\u0002((object) fieldInfo))
            {
              if (\u0087.\u007E\u0090\u0002((object) fieldInfo))
                goto label_15;
            }
            *(sbyte*) ((IntPtr) voidPtr + 12) = (sbyte) 1;
            object[] objArray = \u0004\u0004.\u007E\u008F\u0006((object) fieldInfo, true);
            *(int*) ((IntPtr) voidPtr + 4) = 0;
            while (*(int*) ((IntPtr) voidPtr + 4) < objArray.Length)
            {
              if (true)
              {
                Attribute attribute = (Attribute) objArray[*(int*) ((IntPtr) voidPtr + 4)];
                if (\u0095.\u0017\u0003(\u001E.\u007E\u0010\u0002((object) \u0094\u0002.\u007E\u0017\u0005((object) attribute)), \u0003.\u008F(5023)))
                {
                  *(sbyte*) ((IntPtr) voidPtr + 12) = (sbyte) 0;
                  break;
                }
                *(int*) ((IntPtr) voidPtr + 4) = *(int*) ((IntPtr) voidPtr + 4) + 1;
              }
              else
                goto label_13;
            }
            if (*(sbyte*) ((IntPtr) voidPtr + 12) == (sbyte) 0)
              goto label_15;
label_13:
            this.\u0001(new \u0006.\u0005(\u0090.\u007E\u000F\u0003((object) fieldInfo, obj0.\u0001), false), fieldInfo);
          }
        }
        catch
        {
        }
label_15:
        *(int*) voidPtr = *(int*) voidPtr + 1;
      }
      obj0 = new \u0006.\u0005(obj0.\u0001, \u0094\u0002.\u007E\u0014\u0005((object) obj0.\u0001), obj0.\u0001);
      if ((object) obj0.\u0001 == null)
        return;
      \u000E.\u0004 obj1 = new \u000E.\u0004(this.\u0001, \u0003.\u008F(4172));
      try
      {
        this.\u0001(\u0003.\u008F(5083));
        \u0095\u0002 obj2 = \u0095\u0002.\u007E\u0018\u0005;
        XmlWriter xmlWriter = this.\u0001;
        string str1 = \u0003.\u008F(4293);
        *(int*) ((IntPtr) voidPtr + 8) = this.\u0001.Count;
        string str2 = ((int*) ((IntPtr) voidPtr + 8))->ToString();
        obj2((object) xmlWriter, str1, str2);
      }
      finally
      {
        if (obj1 != null)
          \u009B.\u007E\u007F\u0003((object) obj1);
      }
      this.\u0001.Add(obj0);
    }

    internal unsafe bool \u0001()
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(5);
      try
      {
        if (true)
        {
          \u0007.\u0001((\u0005.\u0002) this, \u000E.\u0002.\u0001);
          byte[] numArray;
          try
          {
            numArray = this.\u0001();
          }
          catch (Exception ex)
          {
            *(int*) voidPtr = -1;
            try
            {
              StackTrace stackTrace = new StackTrace(ex);
              if (\u0018.\u007E\u008D((object) stackTrace) > 0)
              {
                StackFrame stackFrame = \u001C\u0003.\u007E\u009E\u0005((object) stackTrace, \u0018.\u007E\u008D((object) stackTrace) - 1);
                *(int*) voidPtr = \u0018.\u007E\u008F((object) stackFrame);
              }
            }
            catch
            {
            }
            \u0007.\u0001((\u0005.\u0002) this, \u000E.\u0002.\u0001, \u000F\u0004.\u0095\u0006(\u0003.\u008F(5092), (object) \u001E.\u007E\u0004\u0002((object) ex), (object) *(int*) voidPtr));
            *(sbyte*) ((IntPtr) voidPtr + 4) = (sbyte) 0;
            goto label_12;
          }
          \u0005.\u0002.\u0003 obj = new \u0005.\u0002.\u0003(\u0003.\u008F(425), \u0003.\u008F(2047), \u0003.\u008F(5125));
          *(sbyte*) ((IntPtr) voidPtr + 4) = (sbyte) \u0007.\u0001(obj, numArray, (\u0005.\u0002) this);
        }
      }
      catch (ThreadAbortException ex)
      {
        *(sbyte*) ((IntPtr) voidPtr + 4) = (sbyte) 0;
      }
      catch (Exception ex)
      {
        \u0007.\u0001(this, new \u0004.\u0004(ex));
        *(sbyte*) ((IntPtr) voidPtr + 4) = (sbyte) 0;
      }
label_12:
      return (bool) *(sbyte*) ((IntPtr) voidPtr + 4);
    }

    static \u0003() => \u0004.\u0002.\u0001(typeof (\u0003));

    private new struct \u0001
    {
      public readonly string \u0001;
      public readonly string \u0002;
      public readonly string \u0003;
      public readonly int \u0001;
    }

    internal new struct \u0002
    {
      public readonly string \u0001;
      public readonly string \u0002;

      public \u0002([In] string obj0, [In] string obj1)
      {
        this.\u0001 = obj0;
        this.\u0002 = obj1;
      }
    }

    internal new struct \u0003
    {
      public string \u0001;
      public \u0003.\u0002 \u0001;

      [SpecialName]
      public bool \u0001() => \u0018.\u007E\u0084((object) this.\u0001) == 0;

      [SpecialName]
      public static \u0003.\u0003 \u0001() => new \u0003.\u0003(string.Empty, string.Empty, string.Empty);

      private \u0003([In] string obj0, [In] string obj1, [In] string obj2)
      {
        this.\u0001 = obj0;
        this.\u0001 = new \u0003.\u0002(obj1, obj2);
      }
    }
  }
}
