// Decompiled with JetBrains decompiler
// Type: .
// Assembly: BitGenerator, Version=37.0.2.5583, Culture=neutral, PublicKeyToken=70e4c26ef2031892
// MVID: D3922F89-E00A-4D10-8BC9-9309D5539F14
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\Trojan.Win32.Scar.nxii-31823040d8ccb20eab0b8653d01af370a6537017e69ead69f6f7b73d6ef7ac14.exe

using \u0004;
using \u0014;
using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace \u0004
{
  internal static class \u0006
  {
    internal static readonly Dictionary<Type, \u000F.\u0003> \u0001 = new Dictionary<Type, \u000F.\u0003>()
    {
      {
        \u0004\u0002.\u0084\u0004(__typeref (char)),
        \u000F.\u0003.\u0003
      },
      {
        \u0004\u0002.\u0084\u0004(__typeref (char?)),
        \u000F.\u0003.\u0004
      },
      {
        \u0004\u0002.\u0084\u0004(__typeref (bool)),
        \u000F.\u0003.\u0005
      },
      {
        \u0004\u0002.\u0084\u0004(__typeref (bool?)),
        \u000F.\u0003.\u0006
      },
      {
        \u0004\u0002.\u0084\u0004(__typeref (sbyte)),
        \u000F.\u0003.\u0007
      },
      {
        \u0004\u0002.\u0084\u0004(__typeref (sbyte?)),
        \u000F.\u0003.\u0008
      },
      {
        \u0004\u0002.\u0084\u0004(__typeref (short)),
        \u000F.\u0003.\u000E
      },
      {
        \u0004\u0002.\u0084\u0004(__typeref (short?)),
        \u000F.\u0003.\u000F
      },
      {
        \u0004\u0002.\u0084\u0004(__typeref (ushort)),
        \u000F.\u0003.\u0010
      },
      {
        \u0004\u0002.\u0084\u0004(__typeref (ushort?)),
        \u000F.\u0003.\u0011
      },
      {
        \u0004\u0002.\u0084\u0004(__typeref (int)),
        \u000F.\u0003.\u0012
      },
      {
        \u0004\u0002.\u0084\u0004(__typeref (int?)),
        \u000F.\u0003.\u0013
      },
      {
        \u0004\u0002.\u0084\u0004(__typeref (byte)),
        \u000F.\u0003.\u0014
      },
      {
        \u0004\u0002.\u0084\u0004(__typeref (byte?)),
        \u000F.\u0003.\u0015
      },
      {
        \u0004\u0002.\u0084\u0004(__typeref (uint)),
        \u000F.\u0003.\u0016
      },
      {
        \u0004\u0002.\u0084\u0004(__typeref (uint?)),
        \u000F.\u0003.\u0017
      },
      {
        \u0004\u0002.\u0084\u0004(__typeref (long)),
        \u000F.\u0003.\u0018
      },
      {
        \u0004\u0002.\u0084\u0004(__typeref (long?)),
        \u000F.\u0003.\u0019
      },
      {
        \u0004\u0002.\u0084\u0004(__typeref (ulong)),
        \u000F.\u0003.\u001A
      },
      {
        \u0004\u0002.\u0084\u0004(__typeref (ulong?)),
        \u000F.\u0003.\u001B
      },
      {
        \u0004\u0002.\u0084\u0004(__typeref (float)),
        \u000F.\u0003.\u001C
      },
      {
        \u0004\u0002.\u0084\u0004(__typeref (float?)),
        \u000F.\u0003.\u001D
      },
      {
        \u0004\u0002.\u0084\u0004(__typeref (double)),
        \u000F.\u0003.\u001E
      },
      {
        \u0004\u0002.\u0084\u0004(__typeref (double?)),
        \u000F.\u0003.\u001F
      },
      {
        \u0004\u0002.\u0084\u0004(__typeref (DateTime)),
        \u000F.\u0003.\u007F
      },
      {
        \u0004\u0002.\u0084\u0004(__typeref (DateTime?)),
        \u000F.\u0003.\u0080
      },
      {
        \u0004\u0002.\u0084\u0004(__typeref (DateTimeOffset)),
        \u000F.\u0003.\u0081
      },
      {
        \u0004\u0002.\u0084\u0004(__typeref (DateTimeOffset?)),
        \u000F.\u0003.\u0082
      },
      {
        \u0004\u0002.\u0084\u0004(__typeref (Decimal)),
        \u000F.\u0003.\u0083
      },
      {
        \u0004\u0002.\u0084\u0004(__typeref (Decimal?)),
        \u000F.\u0003.\u0084
      },
      {
        \u0004\u0002.\u0084\u0004(__typeref (Guid)),
        \u000F.\u0003.\u0086
      },
      {
        \u0004\u0002.\u0084\u0004(__typeref (Guid?)),
        \u000F.\u0003.\u0087
      },
      {
        \u0004\u0002.\u0084\u0004(__typeref (TimeSpan)),
        \u000F.\u0003.\u0088
      },
      {
        \u0004\u0002.\u0084\u0004(__typeref (TimeSpan?)),
        \u000F.\u0003.\u0089
      },
      {
        \u0004\u0002.\u0084\u0004(__typeref (Uri)),
        \u000F.\u0003.\u008C
      },
      {
        \u0004\u0002.\u0084\u0004(__typeref (string)),
        \u000F.\u0003.\u008D
      },
      {
        \u0004\u0002.\u0084\u0004(__typeref (byte[])),
        \u000F.\u0003.\u008E
      },
      {
        \u0004\u0002.\u0084\u0004(__typeref (DBNull)),
        \u000F.\u0003.\u008F
      }
    };
    internal static readonly \u0001.\u0004[] \u0001;
    internal static readonly \u0003.\u0004<\u0006.\u0001, Func<object, object>> \u0001;

    static \u0006()
    {
      \u0001.\u0004[] objArray = new \u0001.\u0004[19];
      \u0001.\u0004 obj1 = new \u0001.\u0004();
      // ISSUE: type reference
      obj1.\u0001(\u0004\u0002.\u0084\u0004(__typeref (object)));
      obj1.\u0001(\u000F.\u0003.\u0001);
      objArray[0] = obj1;
      \u0001.\u0004 obj2 = new \u0001.\u0004();
      // ISSUE: type reference
      obj2.\u0001(\u0004\u0002.\u0084\u0004(__typeref (object)));
      obj2.\u0001(\u000F.\u0003.\u0002);
      objArray[1] = obj2;
      \u0001.\u0004 obj3 = new \u0001.\u0004();
      // ISSUE: type reference
      obj3.\u0001(\u0004\u0002.\u0084\u0004(__typeref (object)));
      obj3.\u0001(\u000F.\u0003.\u008F);
      objArray[2] = obj3;
      \u0001.\u0004 obj4 = new \u0001.\u0004();
      // ISSUE: type reference
      obj4.\u0001(\u0004\u0002.\u0084\u0004(__typeref (bool)));
      obj4.\u0001(\u000F.\u0003.\u0005);
      objArray[3] = obj4;
      \u0001.\u0004 obj5 = new \u0001.\u0004();
      // ISSUE: type reference
      obj5.\u0001(\u0004\u0002.\u0084\u0004(__typeref (char)));
      obj5.\u0001(\u000F.\u0003.\u0003);
      objArray[4] = obj5;
      \u0001.\u0004 obj6 = new \u0001.\u0004();
      // ISSUE: type reference
      obj6.\u0001(\u0004\u0002.\u0084\u0004(__typeref (sbyte)));
      obj6.\u0001(\u000F.\u0003.\u0007);
      objArray[5] = obj6;
      \u0001.\u0004 obj7 = new \u0001.\u0004();
      // ISSUE: type reference
      obj7.\u0001(\u0004\u0002.\u0084\u0004(__typeref (byte)));
      obj7.\u0001(\u000F.\u0003.\u0014);
      objArray[6] = obj7;
      \u0001.\u0004 obj8 = new \u0001.\u0004();
      // ISSUE: type reference
      obj8.\u0001(\u0004\u0002.\u0084\u0004(__typeref (short)));
      obj8.\u0001(\u000F.\u0003.\u000E);
      objArray[7] = obj8;
      \u0001.\u0004 obj9 = new \u0001.\u0004();
      // ISSUE: type reference
      obj9.\u0001(\u0004\u0002.\u0084\u0004(__typeref (ushort)));
      obj9.\u0001(\u000F.\u0003.\u0010);
      objArray[8] = obj9;
      \u0001.\u0004 obj10 = new \u0001.\u0004();
      // ISSUE: type reference
      obj10.\u0001(\u0004\u0002.\u0084\u0004(__typeref (int)));
      obj10.\u0001(\u000F.\u0003.\u0012);
      objArray[9] = obj10;
      \u0001.\u0004 obj11 = new \u0001.\u0004();
      // ISSUE: type reference
      obj11.\u0001(\u0004\u0002.\u0084\u0004(__typeref (uint)));
      obj11.\u0001(\u000F.\u0003.\u0016);
      objArray[10] = obj11;
      \u0001.\u0004 obj12 = new \u0001.\u0004();
      // ISSUE: type reference
      obj12.\u0001(\u0004\u0002.\u0084\u0004(__typeref (long)));
      obj12.\u0001(\u000F.\u0003.\u0018);
      objArray[11] = obj12;
      \u0001.\u0004 obj13 = new \u0001.\u0004();
      // ISSUE: type reference
      obj13.\u0001(\u0004\u0002.\u0084\u0004(__typeref (ulong)));
      obj13.\u0001(\u000F.\u0003.\u001A);
      objArray[12] = obj13;
      \u0001.\u0004 obj14 = new \u0001.\u0004();
      // ISSUE: type reference
      obj14.\u0001(\u0004\u0002.\u0084\u0004(__typeref (float)));
      obj14.\u0001(\u000F.\u0003.\u001C);
      objArray[13] = obj14;
      \u0001.\u0004 obj15 = new \u0001.\u0004();
      // ISSUE: type reference
      obj15.\u0001(\u0004\u0002.\u0084\u0004(__typeref (double)));
      obj15.\u0001(\u000F.\u0003.\u001E);
      objArray[14] = obj15;
      \u0001.\u0004 obj16 = new \u0001.\u0004();
      // ISSUE: type reference
      obj16.\u0001(\u0004\u0002.\u0084\u0004(__typeref (Decimal)));
      obj16.\u0001(\u000F.\u0003.\u0083);
      objArray[15] = obj16;
      \u0001.\u0004 obj17 = new \u0001.\u0004();
      // ISSUE: type reference
      obj17.\u0001(\u0004\u0002.\u0084\u0004(__typeref (DateTime)));
      obj17.\u0001(\u000F.\u0003.\u007F);
      objArray[16] = obj17;
      \u0001.\u0004 obj18 = new \u0001.\u0004();
      // ISSUE: type reference
      obj18.\u0001(\u0004\u0002.\u0084\u0004(__typeref (object)));
      obj18.\u0001(\u000F.\u0003.\u0001);
      objArray[17] = obj18;
      \u0001.\u0004 obj19 = new \u0001.\u0004();
      // ISSUE: type reference
      obj19.\u0001(\u0004\u0002.\u0084\u0004(__typeref (string)));
      obj19.\u0001(\u000F.\u0003.\u008D);
      objArray[18] = obj19;
      \u0006.\u0001 = objArray;
      \u0006.\u0001 = new \u0003.\u0004<\u0006.\u0001, Func<object, object>>(new Func<\u0006.\u0001, Func<object, object>>(\u0006.\u0001));
    }

    internal struct \u0001 : IEquatable<\u0006.\u0001>
    {
      private readonly Type \u0001;
      private readonly Type \u0002;

      [SpecialName]
      public Type \u0001() => this.\u0001;

      [SpecialName]
      public Type \u0002() => this.\u0002;

      public \u0001([In] Type obj0, [In] Type obj1)
      {
        this.\u0001 = obj0;
        this.\u0002 = obj1;
      }

      int ValueType.\u0001() => \u001F.\u007E\u0014\u0003((object) this.\u0001) ^ \u001F.\u007E\u0014\u0003((object) this.\u0002);

      bool ValueType.\u0001([In] object obj0) => obj0 is \u0006.\u0001 obj && this.\u0001(obj);

      public bool \u0001([In] \u0006.\u0001 obj0)
      {
        while ((object) this.\u0001 != (object) obj0.\u0001)
        {
          if (true)
          {
            int num = 0;
            return num != 0 ? num != 0 : num != 0;
          }
        }
        return (object) this.\u0002 == (object) obj0.\u0002;
      }
    }

    internal enum \u0002
    {
      \u0001,
      \u0002,
      \u0003,
      \u0004,
    }
  }
}
