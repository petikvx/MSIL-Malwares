// Decompiled with JetBrains decompiler
// Type: DebuggerTypeProxyAttrib.Visitors.VisitorDatabaseVisitor
// Assembly: DebuggerTypeProxyAttrib, Version=1.7.3.0, Culture=neutral, PublicKeyToken=null
// MVID: 3D9F2D5D-94C2-4B9B-BC0A-C78BF30C6035
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-5acf494024d29f4957958fce64819adc19bc7cffa6d323531e5a321496a04ae0.exe

using DebuggerTypeProxyAttrib.Pages;
using System;
using System.Reflection;
using System.Runtime.CompilerServices;

namespace DebuggerTypeProxyAttrib.Visitors
{
  internal class VisitorDatabaseVisitor
  {
    internal static Module _ConfigWrapper;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void RegisterMethod(int typemdt)
    {
      int num = 5;
      Type type;
      int index;
      FieldInfo[] fields;
      FieldInfo fieldInfo;
      while (true)
      {
        switch (num)
        {
          case 0:
          case 3:
            if (index >= fields.Length)
            {
              num = 6;
              continue;
            }
            fieldInfo = fields[index];
            num = 1;
            continue;
          case 1:
          case 2:
            MethodInfo method = (MethodInfo) VisitorDatabaseVisitor._ConfigWrapper.ResolveMethod(fieldInfo.MetadataToken + 100663296);
            fieldInfo.SetValue((object) null, (object) (MulticastDelegate) Delegate.CreateDelegate(type, method));
            ++index;
            goto case 0;
          case 4:
            fields = type.GetFields();
            index = 0;
            goto case 0;
          case 5:
            type = VisitorDatabaseVisitor._ConfigWrapper.ResolveType(33554432 + typemdt);
            num = 4;
            continue;
          case 6:
            goto label_9;
          default:
            num = 0;
            continue;
        }
      }
label_9:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public VisitorDatabaseVisitor()
    {
      RegistryPagePage.ListMethod();
      // ISSUE: explicit constructor call
      base.\u002Ector();
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    static VisitorDatabaseVisitor()
    {
      RegistryPagePage.ListMethod();
      VisitorDatabaseVisitor._ConfigWrapper = typeof (VisitorDatabaseVisitor).Assembly.ManifestModule;
    }

    internal static bool CompareMethod() => true;

    internal static bool SetupMethod() => false;

    internal delegate void GetterWrapper(object o);
  }
}
