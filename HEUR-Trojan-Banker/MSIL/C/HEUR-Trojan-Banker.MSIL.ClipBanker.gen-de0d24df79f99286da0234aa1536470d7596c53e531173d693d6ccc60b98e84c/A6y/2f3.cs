// Decompiled with JetBrains decompiler
// Type: A6y.2f3
// Assembly: uc5uTlQKZwvBJeUwoIoxWYL1o3uBI8gaMfnT9AO, Version=9.8.6.0, Culture=neutral, PublicKeyToken=null
// MVID: 66B519F9-803D-46C9-8343-EC24850CA08A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\HEUR-Trojan-Banker.MSIL.ClipBanker.gen-de0d24df79f99286da0234aa1536470d7596c53e531173d693d6ccc60b98e84c.exe

using \u0031Y3;
using \u003288;
using \u0032L6;
using \u003362;
using \u00339E;
using \u0033wQ;
using \u003427;
using \u0034i2;
using \u0034ke;
using \u0034p7;
using \u0034yi;
using \u0035H3;
using \u0036s6;
using \u0037q5;
using \u0037yC;
using \u0038Gu;
using \u00392b;
using A7B;
using B15;
using g5V;
using gOS;
using I5x;
using k35;
using k5A;
using KtU;
using Microsoft.CSharp;
using N83;
using nyv;
using O24;
using O8M;
using OT8;
using Qlv;
using S65;
using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using t28;
using u2y;
using UsF;
using Y1t;
using y45;

namespace A6y
{
  [DefaultMember("Item")]
  [ComVisible(true)]
  [Guid("ebc25cf6-9120-4283-b972-0e5520d00005")]
  public sealed class \u0032f3 : IEnumerable<q14>, IEnumerable, IDisposable
  {
    private static \u0032f3.\u00312P[] n78 = new \u0032f3.\u00312P[2]
    {
      new \u0032f3.\u00312P()
      {
        \u0038q3 = nlA.WinFormsApplication,
        \u003254 = new List<string>()
        {
          "System.dll",
          "System.Windows.Forms.dll",
          "System.Drawing.dll"
        },
        \u003146 = new List<string>()
        {
          "Ionic.Zip.WinFormsSelfExtractorStub.resources",
          "Ionic.Zip.Forms.PasswordDialog.resources",
          "Ionic.Zip.Forms.ZipContentsDialog.resources"
        },
        Zm1 = new List<string>()
        {
          "WinFormsSelfExtractorStub.cs",
          "WinFormsSelfExtractorStub.Designer.cs",
          "PasswordDialog.cs",
          "PasswordDialog.Designer.cs",
          "ZipContentsDialog.cs",
          "ZipContentsDialog.Designer.cs",
          "FolderBrowserDialogEx.cs"
        }
      },
      new \u0032f3.\u00312P()
      {
        \u0038q3 = nlA.ConsoleApplication,
        \u003254 = new List<string>() { "System.dll" },
        \u003146 = (List<string>) null,
        Zm1 = new List<string>()
        {
          "CommandLineSelfExtractorStub.cs"
        }
      }
    };
    private bool AvB;
    private bool Co8;
    private bool Su3;
    private int q77;
    private bool \u0037e5;
    private PIJ \u0038LR;
    private \u00331g \u0033O4;
    private GCG \u00324j;
    private TextWriter L51;
    private bool \u003271;
    private bool \u0033T7;
    private Stream \u00399r;
    private Stream eb7;
    private ushort J27;
    private ushort uo9;
    private uint QJI;
    private long i46;
    private uint Xv7;
    private \u0039T3 I92;
    private bool RC6;
    private Dictionary<string, q14> \u003915;
    private Dictionary<string, q14> \u0033Ns;
    private List<q14> \u0031f8;
    private string \u0031f3;
    private string XM6;
    private string \u0036p6;
    internal string F59;
    private bool \u0034Tx = true;
    private bool i1J;
    private YNv dox;
    private d3U \u0033J8 = d3U.Deflate;
    private bool Nba;
    private string \u0033q5;
    private bool \u003115;
    private bool \u00374q;
    private string j81;
    private bool \u003826 = true;
    private object \u003833 = new object();
    private bool \u0032vr;
    private bool \u003321;
    private bool \u003733;
    private \u0031p6 \u0039jY;
    private bool DOr;
    private long t24 = -1;
    private uint \u00357I;
    private long JMn;
    private bool? \u0035C5;
    internal bool xOj;
    private Encoding a21;
    private VR4 \u003556;
    private int \u0038Te = \u0032f3.NDY;
    internal A8K \u003232;
    private long \u00375m;
    private int ujW = 16;
    internal \u0033RZ \u0033TX;
    private bool ue4;
    public static readonly int NDY = 32768;
    private long \u003417 = -99;
    private static Encoding \u0033Y9 = (Encoding) null;
    private static bool \u0033sD = false;

    public void dYu([In] string obj0, [In] nlA obj1)
    {
      R9i r9i = new R9i();
      r9i.FOE(obj1);
      this.V16(obj0, r9i);
    }

    public void V16([In] string obj0, [In] R9i obj1)
    {
      if (this.\u0031f3 == null)
        this.eb7 = (Stream) null;
      this.ue4 = true;
      this.\u0031f3 = obj0;
      if (Directory.Exists(this.\u0031f3))
        throw new xZi("Bad Directory", (Exception) new ArgumentException("That name specifies an existing directory. Please specify a filename.", "exeToGenerate"));
      this.\u003115 = true;
      this.Nba = File.Exists(this.\u0031f3);
      this.O7o(obj0, obj1);
      this.\u0035cH();
      this.ue4 = false;
    }

    private static void \u003368([In] Assembly obj0, [In] string obj1, [In] string obj2)
    {
      byte[] buffer = new byte[1024];
      using (Stream manifestResourceStream = obj0.GetManifestResourceStream(obj1))
      {
        if (manifestResourceStream == null)
          throw new xZi(string.Format("missing resource '{0}'", (object) obj1));
        using (FileStream fileStream = File.OpenWrite(obj2))
        {
          int count;
          do
          {
            count = manifestResourceStream.Read(buffer, 0, buffer.Length);
            fileStream.Write(buffer, 0, count);
          }
          while (count > 0);
        }
      }
    }

    private void O7o([In] string obj0, [In] R9i obj1)
    {
      \u0032f3.\u003155 obj2 = new \u0032f3.\u003155();
      obj2.\u0035HR = obj1;
      string path1 = (string) null;
      string str1 = (string) null;
      try
      {
        if (File.Exists(obj0) && this.V7K)
          this.YY3.WriteLine("The existing file ({0}) will be overwritten.", (object) obj0);
        if (!obj0.EndsWith(".exe") && this.V7K)
          this.YY3.WriteLine("Warning: The generated self-extracting file will not have an .exe extension.");
        string str2 = this.\u0034UW ?? Path.GetDirectoryName(obj0);
        path1 = \u0032f3.\u00343L(str2, "exe");
        Assembly assembly = typeof (\u0032f3).Assembly;
        Dictionary<string, string> providerOptions = new Dictionary<string, string>();
        if (!string.IsNullOrEmpty(obj2.\u0035HR.f8z()))
          providerOptions.Add("CompilerVersion", obj2.\u0035HR.f8z());
        using (CSharpCodeProvider csharpCodeProvider = new CSharpCodeProvider((IDictionary<string, string>) providerOptions))
        {
          \u0032f3.\u00312P obj3 = ((IEnumerable<\u0032f3.\u00312P>) \u0032f3.n78).Where<\u0032f3.\u00312P>(new Func<\u0032f3.\u00312P, bool>(obj2.\u003315)).FirstOrDefault<\u0032f3.\u00312P>();
          if (obj3 == null)
            throw new UW5(string.Format("While saving a Self-Extracting Zip, Cannot find that flavor ({0})?", (object) obj2.\u0035HR.XF4()));
          CompilerParameters options = new CompilerParameters();
          options.ReferencedAssemblies.Add(assembly.Location);
          if (obj3.\u003254 != null)
          {
            foreach (string str3 in obj3.\u003254)
              options.ReferencedAssemblies.Add(str3);
          }
          options.GenerateInMemory = false;
          options.GenerateExecutable = true;
          options.IncludeDebugInformation = false;
          options.CompilerOptions = "";
          Assembly executingAssembly = Assembly.GetExecutingAssembly();
          StringBuilder stringBuilder = new StringBuilder();
          string path2 = \u0032f3.\u00343L(str2, "cs");
          using (\u0032f3 obj4 = \u0032f3.\u0031if(executingAssembly.GetManifestResourceStream("Ionic.Zip.Resources.ZippedResources.zip")))
          {
            str1 = \u0032f3.\u00343L(str2, "tmp");
            if (string.IsNullOrEmpty(obj2.\u0035HR.D2Y()))
            {
              Directory.CreateDirectory(str1);
              q14 q14 = obj4.\u0039XN("zippedFile.ico");
              if ((q14.PAq & FileAttributes.ReadOnly) == FileAttributes.ReadOnly)
                q14.PAq ^= FileAttributes.ReadOnly;
              q14.qbX(str1);
              string str4 = Path.Combine(str1, "zippedFile.ico");
              options.CompilerOptions += string.Format("/win32icon:\"{0}\"", (object) str4);
            }
            else
              options.CompilerOptions += string.Format("/win32icon:\"{0}\"", (object) obj2.\u0035HR.D2Y());
            options.OutputAssembly = path1;
            if (obj2.\u0035HR.XF4() == nlA.WinFormsApplication)
              options.CompilerOptions += " /target:winexe";
            if (!string.IsNullOrEmpty(obj2.\u0035HR.Pl3()))
            {
              CompilerParameters compilerParameters = options;
              compilerParameters.CompilerOptions = compilerParameters.CompilerOptions + " " + obj2.\u0035HR.Pl3();
            }
            if (string.IsNullOrEmpty(options.CompilerOptions))
              options.CompilerOptions = (string) null;
            if (obj3.\u003146 != null && obj3.\u003146.Count != 0)
            {
              if (!Directory.Exists(str1))
                Directory.CreateDirectory(str1);
              foreach (string path2_1 in obj3.\u003146)
              {
                string str5 = Path.Combine(str1, path2_1);
                \u0032f3.\u003368(executingAssembly, path2_1, str5);
                options.EmbeddedResources.Add(str5);
              }
            }
            options.EmbeddedResources.Add(assembly.Location);
            stringBuilder.Append("// " + Path.GetFileName(path2) + "\n").Append("// --------------------------------------------\n//\n").Append("// This SFX source file was generated by DotNetZip ").Append(\u0032f3.Pn3.ToString()).Append("\n//         at ").Append(DateTime.Now.ToString("yyyy MMMM dd  HH:mm:ss")).Append("\n//\n// --------------------------------------------\n\n\n");
            if (!string.IsNullOrEmpty(obj2.\u0035HR.LhK()))
              stringBuilder.Append("[assembly: System.Reflection.AssemblyTitle(\"" + obj2.\u0035HR.LhK().Replace("\"", "") + "\")]\n");
            else
              stringBuilder.Append("[assembly: System.Reflection.AssemblyTitle(\"DotNetZip SFX Archive\")]\n");
            if (!string.IsNullOrEmpty(obj2.\u0035HR.\u0034a5()))
              stringBuilder.Append("[assembly: System.Reflection.AssemblyInformationalVersion(\"" + obj2.\u0035HR.\u0034a5().Replace("\"", "") + "\")]\n");
            string str6 = string.IsNullOrEmpty(obj2.\u0035HR.T18()) ? "Extractor: Copyright � Dino Chiesa 2008-2011" : obj2.\u0035HR.T18().Replace("\"", "");
            if (!string.IsNullOrEmpty(obj2.\u0035HR.\u00335U()))
              stringBuilder.Append("[assembly: System.Reflection.AssemblyProduct(\"").Append(obj2.\u0035HR.\u00335U().Replace("\"", "")).Append("\")]\n");
            else
              stringBuilder.Append("[assembly: System.Reflection.AssemblyProduct(\"DotNetZip\")]\n");
            stringBuilder.Append("[assembly: System.Reflection.AssemblyCopyright(\"" + str6 + "\")]\n").Append(string.Format("[assembly: System.Reflection.AssemblyVersion(\"{0}\")]\n", (object) \u0032f3.Pn3.ToString()));
            if (obj2.\u0035HR.b8i() != (Version) null)
              stringBuilder.Append(string.Format("[assembly: System.Reflection.AssemblyFileVersion(\"{0}\")]\n", (object) obj2.\u0035HR.b8i().ToString()));
            stringBuilder.Append("\n\n\n");
            string newValue1 = obj2.\u0035HR.X51();
            if (newValue1 != null)
              newValue1 = newValue1.Replace("\"", "").Replace("\\", "\\\\");
            string newValue2 = obj2.\u0035HR.Ov4();
            if (newValue2 != null)
              newValue2 = newValue2.Replace("\\", "\\\\").Replace("\"", "\\\"");
            foreach (string str7 in obj3.Zm1)
            {
              using (Stream stream = (Stream) obj4.\u0039XN(str7).\u003141())
              {
                if (stream == null)
                  throw new xZi(string.Format("missing resource '{0}'", (object) str7));
                using (StreamReader streamReader = new StreamReader(stream))
                {
                  while (streamReader.Peek() >= 0)
                  {
                    string str8 = streamReader.ReadLine();
                    if (newValue1 != null)
                      str8 = str8.Replace("@@EXTRACTLOCATION", newValue1);
                    string str9 = str8;
                    bool flag = obj2.\u0035HR.gGJ();
                    string newValue3 = flag.ToString();
                    string str10 = str9.Replace("@@REMOVE_AFTER_EXECUTE", newValue3);
                    flag = obj2.\u0035HR.j1N();
                    string newValue4 = flag.ToString();
                    string str11 = str10.Replace("@@QUIET", newValue4);
                    if (!string.IsNullOrEmpty(obj2.\u0035HR.TXI()))
                      str11 = str11.Replace("@@SFX_EXE_WINDOW_TITLE", obj2.\u0035HR.TXI());
                    string str12 = str11.Replace("@@EXTRACT_EXISTING_FILE", ((int) obj2.\u0035HR.yqz()).ToString());
                    if (newValue2 != null)
                      str12 = str12.Replace("@@POST_UNPACK_CMD_LINE", newValue2);
                    stringBuilder.Append(str12).Append("\n");
                  }
                }
                stringBuilder.Append("\n\n");
              }
            }
          }
          string str13 = stringBuilder.ToString();
          CompilerResults compilerResults = csharpCodeProvider.CompileAssemblyFromSource(options, str13);
          if (compilerResults == null)
            throw new Zh6("Cannot compile the extraction logic!");
          if (this.V7K)
          {
            foreach (string str14 in compilerResults.Output)
              this.YY3.WriteLine(str14);
          }
          if (compilerResults.Errors.Count != 0)
          {
            using (TextWriter textWriter = (TextWriter) new StreamWriter(path2))
            {
              textWriter.Write(str13);
              textWriter.Write("\n\n\n// ------------------------------------------------------------------\n");
              textWriter.Write("// Errors during compilation: \n//\n");
              string fileName = Path.GetFileName(path2);
              foreach (CompilerError error in (CollectionBase) compilerResults.Errors)
                textWriter.Write(string.Format("//   {0}({1},{2}): {3} {4}: {5}\n//\n", (object) fileName, (object) error.Line, (object) error.Column, error.IsWarning ? (object) "Warning" : (object) "error", (object) error.ErrorNumber, (object) error.ErrorText));
            }
            throw new Zh6(string.Format("Errors compiling the extraction logic!  {0}", (object) path2));
          }
          this.Ji6(\u003544.\u0023p);
          using (Stream stream = (Stream) File.OpenRead(path1))
          {
            byte[] buffer = new byte[4000];
            int count = 1;
            while (count != 0)
            {
              count = stream.Read(buffer, 0, buffer.Length);
              if (count != 0)
                this.pDj.Write(buffer, 0, count);
            }
          }
        }
        this.Ji6(\u003544.\u0023m);
      }
      finally
      {
        try
        {
          if (Directory.Exists(str1))
          {
            try
            {
              Directory.Delete(str1, true);
            }
            catch (IOException ex)
            {
              this.YY3.WriteLine("Warning: Exception: {0}", (object) ex);
            }
          }
          if (File.Exists(path1))
          {
            try
            {
              File.Delete(path1);
            }
            catch (IOException ex)
            {
              this.YY3.WriteLine("Warning: Exception: {0}", (object) ex);
            }
          }
        }
        catch (IOException ex)
        {
        }
      }
    }

    internal static string \u00343L([In] string obj0, [In] string obj1)
    {
      string name = Assembly.GetExecutingAssembly().GetName().Name;
      string path;
      do
      {
        string str = Guid.NewGuid().ToString();
        string path2 = string.Format("{0}-{1}-{2}.{3}", (object) name, (object) DateTime.Now.ToString("yyyyMMMdd-HHmmss"), (object) str, (object) obj1);
        path = Path.Combine(obj0, path2);
      }
      while (File.Exists(path) || Directory.Exists(path));
      return path;
    }

    public q14 cJi([In] string obj0) => this.c17(obj0, (string) null);

    public q14 c17([In] string obj0, [In] string obj1)
    {
      if (File.Exists(obj0))
        return this.\u0035mc(obj0, obj1);
      return Directory.Exists(obj0) ? this.\u0031tP(obj0, obj1) : throw new FileNotFoundException(string.Format("That file or directory ({0}) does not exist!", (object) obj0));
    }

    public q14 \u0031IB([In] string obj0) => this.\u0035mc(obj0, (string) null);

    public q14 \u0035mc([In] string obj0, [In] string obj1)
    {
      string str = q14.\u00336Q(obj0, obj1);
      q14 q14 = q14.TTR(obj0, str);
      if (this.V7K)
        this.YY3.WriteLine("adding {0}...", (object) obj0);
      return this.i71(q14);
    }

    public void \u0037D5([In] ICollection<q14> obj0)
    {
      if (obj0 == null)
        throw new ArgumentNullException("entriesToRemove");
      foreach (q14 q14 in (IEnumerable<q14>) obj0)
        this.\u003681(q14);
    }

    public void P55([In] ICollection<string> obj0)
    {
      if (obj0 == null)
        throw new ArgumentNullException("entriesToRemove");
      foreach (string str in (IEnumerable<string>) obj0)
        this.P24(str);
    }

    public void \u00355h([In] IEnumerable<string> obj0) => this.\u0039v7(obj0, (string) null);

    public void HRz([In] IEnumerable<string> obj0) => this.\u0035gJ(obj0, (string) null);

    public void \u0039v7([In] IEnumerable<string> obj0, [In] string obj1) => this.\u0036AQ(obj0, false, obj1);

    public void \u0036AQ([In] IEnumerable<string> obj0, [In] bool obj1, [In] string obj2)
    {
      if (obj0 == null)
        throw new ArgumentNullException("fileNames");
      this.\u003733 = false;
      this.Rr6();
      if (obj1)
      {
        foreach (string path in obj0)
        {
          if (!this.\u003733)
          {
            if (obj2 != null)
            {
              string fullPath = Path.GetFullPath(Path.Combine(obj2, Path.GetDirectoryName(path)));
              this.\u0035mc(path, fullPath);
            }
            else
              this.\u0035mc(path, (string) null);
          }
          else
            break;
        }
      }
      else
      {
        foreach (string str in obj0)
        {
          if (!this.\u003733)
            this.\u0035mc(str, obj2);
          else
            break;
        }
      }
      if (this.\u003733)
        return;
      this.\u0031R6();
    }

    public void \u0035gJ([In] IEnumerable<string> obj0, [In] string obj1)
    {
      if (obj0 == null)
        throw new ArgumentNullException("fileNames");
      this.Rr6();
      foreach (string str in obj0)
        this.\u003855(str, obj1);
      this.\u0031R6();
    }

    public q14 \u0035lj([In] string obj0) => this.\u003855(obj0, (string) null);

    public q14 \u003855([In] string obj0, [In] string obj1)
    {
      string str = q14.\u00336Q(obj0, obj1);
      if (this.\u0039XN(str) != null)
        this.P24(str);
      return this.\u0035mc(obj0, obj1);
    }

    public q14 \u003245([In] string obj0) => this.pMf(obj0, (string) null);

    public q14 pMf([In] string obj0, [In] string obj1) => this.O5s(obj0, obj1, po6.\u0023b);

    public void \u00311V([In] string obj0) => this.\u003986(obj0, (string) null);

    public void \u003986([In] string obj0, [In] string obj1)
    {
      if (File.Exists(obj0))
      {
        this.\u003855(obj0, obj1);
      }
      else
      {
        if (!Directory.Exists(obj0))
          throw new FileNotFoundException(string.Format("That file or directory ({0}) does not exist!", (object) obj0));
        this.pMf(obj0, obj1);
      }
    }

    public q14 EIU([In] string obj0, [In] string obj1) => this.\u0034B2(obj0, obj1, Encoding.Default);

    public q14 \u0034B2([In] string obj0, [In] string obj1, [In] Encoding obj2)
    {
      MemoryStream memoryStream = new MemoryStream();
      StreamWriter streamWriter = new StreamWriter((Stream) memoryStream, obj2);
      streamWriter.Write(obj1);
      streamWriter.Flush();
      memoryStream.Seek(0L, SeekOrigin.Begin);
      return this.qw1(obj0, (Stream) memoryStream);
    }

    public q14 qw1([In] string obj0, [In] Stream obj1)
    {
      q14 q14 = q14.g2a(obj0, obj1);
      q14.T23(DateTime.Now, DateTime.Now, DateTime.Now);
      if (this.V7K)
        this.YY3.WriteLine("adding {0}...", (object) obj0);
      return this.i71(q14);
    }

    public q14 \u003669([In] string obj0, [In] I7i obj1)
    {
      q14 q14 = q14.k24(obj0, obj1);
      if (this.V7K)
        this.YY3.WriteLine("adding {0}...", (object) obj0);
      return this.i71(q14);
    }

    public q14 \u003348([In] string obj0, [In] i3h obj1, [In] VXm obj2)
    {
      q14 q14 = q14.GA7(obj0, obj1, obj2);
      q14.T23(DateTime.Now, DateTime.Now, DateTime.Now);
      if (this.V7K)
        this.YY3.WriteLine("adding {0}...", (object) obj0);
      return this.i71(q14);
    }

    public void \u0038I7([In] q14 obj0)
    {
      obj0.\u0039tG = obj0.\u0039tG == null ? new \u0033rn((object) this) : throw new InvalidOperationException("Entry already belongs to a zip file");
      this.\u0037B1(obj0.L83, obj0);
      this.\u003116(obj0);
    }

    private q14 i71([In] q14 obj0)
    {
      obj0.\u0039tG = new \u0033rn((object) this);
      obj0.UQ3 = this.\u003218;
      obj0.\u0032Q2 = this.V49;
      obj0.\u0035PR = this.\u003246;
      obj0.b7o = this.A61;
      obj0.\u00399X = this.\u0035dF;
      obj0.SG2 = this.QT1;
      obj0.oLx = this.\u0033B3;
      obj0.K89 = this.F59;
      obj0.\u0038w8 = this.X8a;
      obj0.\u0034Hn = this.\u0034Tx;
      obj0.SU5 = this.i1J;
      this.\u0037B1(obj0.L83, obj0);
      this.\u003116(obj0);
      return obj0;
    }

    public q14 Jpb([In] string obj0, [In] string obj1) => this.W38(obj0, obj1, Encoding.Default);

    public q14 W38([In] string obj0, [In] string obj1, [In] Encoding obj2)
    {
      this.\u00379s(obj0);
      return this.\u0034B2(obj0, obj1, obj2);
    }

    public q14 u47([In] string obj0, [In] I7i obj1)
    {
      this.\u00379s(obj0);
      return this.\u003669(obj0, obj1);
    }

    public q14 WGC([In] string obj0, [In] i3h obj1, [In] VXm obj2)
    {
      this.\u00379s(obj0);
      return this.\u003348(obj0, obj1, obj2);
    }

    public q14 UJj([In] string obj0, [In] Stream obj1)
    {
      this.\u00379s(obj0);
      return this.qw1(obj0, obj1);
    }

    private void \u00379s([In] string obj0)
    {
      if (string.IsNullOrEmpty(obj0))
        throw new ArgumentNullException("entryName");
      string str1 = (string) null;
      if (obj0.IndexOf('\\') != -1)
      {
        str1 = Path.GetDirectoryName(obj0);
        obj0 = Path.GetFileName(obj0);
      }
      string str2 = q14.\u00336Q(obj0, str1);
      if (this.\u0039XN(str2) == null)
        return;
      this.P24(str2);
    }

    public q14 Zx4([In] string obj0, [In] byte[] obj1)
    {
      MemoryStream memoryStream = obj1 != null ? new MemoryStream(obj1) : throw new ArgumentException("bad argument", "byteContent");
      return this.qw1(obj0, (Stream) memoryStream);
    }

    public q14 \u0036uq([In] string obj0, [In] byte[] obj1)
    {
      this.\u00379s(obj0);
      return this.Zx4(obj0, obj1);
    }

    public q14 \u00319s([In] string obj0) => this.\u0031tP(obj0, (string) null);

    public q14 \u0031tP([In] string obj0, [In] string obj1) => this.O5s(obj0, obj1, po6.\u0023a);

    public q14 \u003182([In] string obj0)
    {
      q14 q14 = q14.g8w(obj0);
      q14.\u0039tG = new \u0033rn((object) this);
      q14.\u0034d1();
      q14.SG2 = this.QT1;
      q14.oLx = this.\u0033B3;
      q14.T23(DateTime.Now, DateTime.Now, DateTime.Now);
      q14.\u0034Hn = this.\u0034Tx;
      q14.SU5 = this.i1J;
      q14.r98 = fGj.\u0023c;
      this.\u0037B1(q14.L83, q14);
      this.\u003116(q14);
      return q14;
    }

    private q14 O5s([In] string obj0, [In] string obj1, [In] po6 obj2)
    {
      if (obj1 == null)
        obj1 = "";
      return this.Y7B(obj0, obj1, obj2, true, 0);
    }

    internal void \u0037B1([In] string obj0, [In] q14 obj1)
    {
      this.\u003915.Add(obj0, obj1);
      if (!this.\u0033Ns.ContainsKey(obj0))
        this.\u0033Ns.Add(obj0, obj1);
      this.\u0031f8 = (List<q14>) null;
      this.\u003115 = true;
    }

    private q14 Y7B([In] string obj0, [In] string obj1, [In] po6 obj2, [In] bool obj3, [In] int obj4)
    {
      if (this.V7K)
        this.YY3.WriteLine("{0} {1}...", obj2 == po6.\u0023a ? (object) "adding" : (object) "Adding or updating", (object) obj0);
      if (obj4 == 0)
      {
        this.\u003733 = false;
        this.Rr6();
      }
      if (this.\u003733)
        return (q14) null;
      string str1 = obj1;
      q14 q14 = (q14) null;
      if (obj4 > 0)
      {
        int num = obj0.Length;
        for (int index = obj4; index > 0; --index)
          num = obj0.LastIndexOfAny("/\\".ToCharArray(), num - 1, num - 1);
        string path2 = obj0.Substring(num + 1);
        str1 = Path.Combine(obj1, path2);
      }
      if (obj4 > 0 || obj1 != "")
      {
        q14 = q14.TTR(obj0, str1);
        q14.\u0039tG = new \u0033rn((object) this);
        q14.SG2 = this.QT1;
        q14.oLx = this.\u0033B3;
        q14.\u0034d1();
        q14.\u0034Hn = this.\u0034Tx;
        q14.SU5 = this.i1J;
        if (!this.\u003915.ContainsKey(q14.L83))
        {
          this.\u0037B1(q14.L83, q14);
          this.\u003116(q14);
        }
        str1 = q14.L83;
      }
      if (!this.\u003733)
      {
        string[] files = Directory.GetFiles(obj0);
        if (obj3)
        {
          foreach (string str2 in files)
          {
            if (!this.\u003733)
            {
              if (obj2 == po6.\u0023a)
                this.\u0035mc(str2, str1);
              else
                this.\u003855(str2, str1);
            }
            else
              break;
          }
          if (!this.\u003733)
          {
            foreach (string directory in Directory.GetDirectories(obj0))
            {
              FileAttributes attributes = File.GetAttributes(directory);
              if (this.T45 || (attributes & FileAttributes.ReparsePoint) == (FileAttributes) 0)
                this.Y7B(directory, obj1, obj2, obj3, obj4 + 1);
            }
          }
        }
      }
      if (obj4 == 0)
        this.\u0031R6();
      return q14;
    }

    public static bool TiM([In] string obj0) => \u0032f3.\u003829(obj0, false, (TextWriter) null);

    public static bool \u003829([In] string obj0, [In] bool obj1, [In] TextWriter obj2)
    {
      \u0032f3 obj3 = (\u0032f3) null;
      \u0032f3 obj4 = (\u0032f3) null;
      bool flag = true;
      try
      {
        obj3 = new \u0032f3();
        obj3.\u0037c9 = true;
        obj3.NVj(obj0);
        obj4 = \u0032f3.\u0038Ha(obj0);
        using (IEnumerator<q14> enumerator1 = obj3.\u0023O())
        {
          while (enumerator1.MoveNext())
          {
            q14 current1 = enumerator1.Current;
            using (IEnumerator<q14> enumerator2 = obj4.\u0023O())
            {
              while (enumerator2.MoveNext())
              {
                q14 current2 = enumerator2.Current;
                if (current1.L83 == current2.L83)
                {
                  if (current1.h4e != current2.h4e)
                  {
                    flag = false;
                    obj2?.WriteLine("{0}: mismatch in RelativeOffsetOfLocalHeader  (0x{1:X16} != 0x{2:X16})", (object) current1.L83, (object) current1.h4e, (object) current2.h4e);
                  }
                  if (current1.h1c != current2.h1c)
                  {
                    flag = false;
                    obj2?.WriteLine("{0}: mismatch in CompressedSize  (0x{1:X16} != 0x{2:X16})", (object) current1.L83, (object) current1.h1c, (object) current2.h1c);
                  }
                  if (current1.\u003378 != current2.\u003378)
                  {
                    flag = false;
                    obj2?.WriteLine("{0}: mismatch in UncompressedSize  (0x{1:X16} != 0x{2:X16})", (object) current1.L83, (object) current1.\u003378, (object) current2.\u003378);
                  }
                  if (current1.UQ3 != current2.UQ3)
                  {
                    flag = false;
                    obj2?.WriteLine("{0}: mismatch in CompressionMethod  (0x{1:X4} != 0x{2:X4})", (object) current1.L83, (object) current1.UQ3, (object) current2.UQ3);
                  }
                  if (current1.t2X != current2.t2X)
                  {
                    flag = false;
                    if (obj2 != null)
                    {
                      obj2.WriteLine("{0}: mismatch in Crc32  (0x{1:X4} != 0x{2:X4})", (object) current1.L83, (object) current1.t2X, (object) current2.t2X);
                      break;
                    }
                    break;
                  }
                  break;
                }
              }
            }
          }
        }
        obj4.\u0023Nn();
        obj4 = (\u0032f3) null;
        if (!flag & obj1)
        {
          string str = string.Format("{0}_fixed.zip", (object) Path.GetFileNameWithoutExtension(obj0));
          obj3.\u00313k(str);
        }
      }
      finally
      {
        obj3?.\u0023Nn();
        obj4?.\u0023Nn();
      }
      return flag;
    }

    public static void Er5([In] string obj0)
    {
      using (\u0032f3 obj = new \u0032f3())
      {
        obj.\u0037c9 = true;
        obj.NVj(obj0);
        obj.\u00313k(obj0);
      }
    }

    public static bool \u003584([In] string obj0, [In] string obj1)
    {
      bool flag = false;
      try
      {
        using (\u0032f3 obj = \u0032f3.\u0038Ha(obj0))
        {
          using (IEnumerator<q14> enumerator = obj.\u0023O())
          {
            while (enumerator.MoveNext())
            {
              q14 current = enumerator.Current;
              if (!current.pT8 && current.egp)
                current.H76(Stream.Null, obj1);
            }
          }
        }
        flag = true;
      }
      catch (D2v ex)
      {
      }
      return flag;
    }

    public string \u0032O1
    {
      get
      {
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.Append(string.Format("          ZipFile: {0}\n", (object) this.\u0039Z1));
        if (!string.IsNullOrEmpty(this.\u0036p6))
          stringBuilder.Append(string.Format("          Comment: {0}\n", (object) this.\u0036p6));
        if (this.J27 != (ushort) 0)
          stringBuilder.Append(string.Format("  version made by: 0x{0:X4}\n", (object) this.J27));
        if (this.uo9 != (ushort) 0)
          stringBuilder.Append(string.Format("needed to extract: 0x{0:X4}\n", (object) this.uo9));
        stringBuilder.Append(string.Format("       uses ZIP64: {0}\n", (object) this.Lb3));
        stringBuilder.Append(string.Format("     disk with CD: {0}\n", (object) this.QJI));
        if (this.\u00357I == uint.MaxValue)
          stringBuilder.Append(string.Format("      CD64 offset: 0x{0:X16}\n", (object) this.JMn));
        else
          stringBuilder.Append(string.Format("        CD offset: 0x{0:X8}\n", (object) this.\u00357I));
        stringBuilder.Append("\n");
        foreach (q14 q14 in this.\u003915.Values)
          stringBuilder.Append(q14.y2q);
        return stringBuilder.ToString();
      }
    }

    public bool \u0037c9
    {
      get => this.AvB;
      [param: In] set => this.AvB = value;
    }

    public bool sj6
    {
      get => this.Co8;
      [param: In] set => this.Co8 = value;
    }

    public bool T45
    {
      get => this.Su3;
      [param: In] set => this.Su3 = value;
    }

    public int Yd1
    {
      get => this.\u0038Te;
      [param: In] set => this.\u0038Te = value;
    }

    public int SQ7
    {
      get => this.q77;
      [param: In] set => this.q77 = value;
    }

    public bool \u00321i
    {
      get => this.\u0037e5;
      [param: In] set => this.\u0037e5 = value;
    }

    public YNv \u003864
    {
      get => this.dox;
      [param: In] set => this.dox = value;
    }

    public string \u0039Z1
    {
      get => this.\u0031f3;
      [param: In] set => this.\u0031f3 = value;
    }

    public PIJ V49
    {
      get => this.\u0038LR;
      [param: In] set => this.\u0038LR = value;
    }

    public d3U \u003218
    {
      get => this.\u0033J8;
      [param: In] set => this.\u0033J8 = value;
    }

    public string ez5
    {
      get => this.\u0036p6;
      [param: In] set
      {
        this.\u0036p6 = value;
        this.\u003115 = true;
      }
    }

    public bool \u0033t8
    {
      get => this.\u0034Tx;
      [param: In] set => this.\u0034Tx = value;
    }

    public bool L99
    {
      get => this.i1J;
      [param: In] set => this.i1J = value;
    }

    internal bool V7K => this.L51 != null;

    public bool \u003665([In] string obj0) => this.pNi.ContainsKey(To4.\u0037j4(obj0));

    public bool \u0035C1
    {
      get => this.\u003271;
      [param: In] set => this.\u003271 = value;
    }

    private Dictionary<string, q14> pNi => !this.\u0035C1 ? this.\u0033Ns : this.\u003915;

    public bool \u0039U2
    {
      get => this.\u0033T7;
      [param: In] set => this.\u0033T7 = value;
    }

    public bool \u00384v
    {
      get => this.a21 == Encoding.GetEncoding("UTF-8") && this.\u003556 == VR4.\u0023c;
      [param: In] set
      {
        if (value)
        {
          this.a21 = Encoding.GetEncoding("UTF-8");
          this.\u003556 = VR4.\u0023c;
        }
        else
        {
          this.a21 = \u0032f3.l79;
          this.\u003556 = VR4.\u0023a;
        }
      }
    }

    public \u0033RZ \u003265
    {
      get => this.\u0033TX;
      [param: In] set => this.\u0033TX = value;
    }

    public bool? qFU
    {
      get
      {
        if (this.\u003915.Count > 65534)
          return new bool?(true);
        if (!this.\u00374q || this.\u003115)
          return new bool?();
        foreach (q14 q14 in this.\u003915.Values)
        {
          bool? nullable = q14.\u0039BR;
          if (nullable.Value)
          {
            nullable = new bool?(true);
            return nullable;
          }
        }
        return new bool?(false);
      }
    }

    public bool? \u0037G5 => this.\u0035C5;

    public bool? Lb3
    {
      get
      {
        if (this.\u003915.Count > 65534)
          return new bool?(true);
        using (IEnumerator<q14> enumerator = this.\u0023O())
        {
          while (enumerator.MoveNext())
          {
            q14 current = enumerator.Current;
            if (current.\u0034m2 != fGj.\u0023d)
              return new bool?();
            if (current.\u003832)
              return new bool?(true);
          }
        }
        return new bool?(false);
      }
    }

    public Encoding \u0034xE
    {
      get => this.\u003556 == VR4.\u0023c ? this.a21 : (Encoding) null;
      [param: In] set
      {
        this.a21 = value;
        this.\u003556 = VR4.\u0023c;
      }
    }

    public Encoding QT1
    {
      get => this.a21;
      [param: In] set => this.a21 = value;
    }

    public VR4 \u0033B3
    {
      get => this.\u003556;
      [param: In] set => this.\u003556 = value;
    }

    public TextWriter YY3
    {
      get => this.L51;
      [param: In] set => this.L51 = value;
    }

    public string \u0034UW
    {
      get => this.j81;
      [param: In] set
      {
        this.j81 = value;
        if (value != null && !Directory.Exists(value))
          throw new FileNotFoundException(string.Format("That directory ({0}) does not exist.", (object) value));
      }
    }

    public string \u0032OH
    {
      [param: In] set
      {
        this.F59 = value;
        if (this.F59 == null)
        {
          this.X8a = \u0031p6.\u0023a;
        }
        else
        {
          if (this.X8a != \u0031p6.\u0023a)
            return;
          this.X8a = \u0031p6.\u0023b;
        }
      }
      private get => this.F59;
    }

    public \u00331g \u003246
    {
      get => this.\u0033O4;
      [param: In] set => this.\u0033O4 = value;
    }

    public \u0039T3 A61
    {
      get
      {
        if (this.a77 != null)
          this.I92 = \u0039T3.\u0023d;
        return this.I92;
      }
      [param: In] set
      {
        this.I92 = value;
        if (this.I92 == \u0039T3.\u0023d || this.a77 == null)
          return;
        this.a77 = (EventHandler<\u00355m>) null;
      }
    }

    public \u0031p6 X8a
    {
      get => this.\u0039jY;
      [param: In] set => this.\u0039jY = value != \u0031p6.\u0023e ? value : throw new InvalidOperationException("You may not set Encryption to that value.");
    }

    public GCG \u0035dF
    {
      get => this.\u00324j;
      [param: In] set => this.\u00324j = value;
    }

    public int \u0034oj
    {
      get => this.i46 <= (long) int.MaxValue ? (int) this.i46 : throw new xZi("MaxOutputSegmentSize is too large, use MaxOutputSegmentSize64 instead.");
      [param: In] set => this.i46 = value >= 65536 || value == 0 ? (long) value : throw new xZi("The minimum acceptable segment size is 65536.");
    }

    public long n73
    {
      get => this.i46;
      [param: In] set => this.i46 = value >= 65536L || value == 0L ? value : throw new xZi("The minimum acceptable segment size is 65536.");
    }

    public int I89 => (int) this.Xv7 + 1;

    public long f34
    {
      [param: In] set => this.\u00375m = value == 0L || value == -1L || value >= 65536L ? value : throw new ArgumentOutOfRangeException("ParallelDeflateThreshold should be -1, 0, or > 65536");
      get => this.\u00375m;
    }

    public int s7A
    {
      get => this.ujW;
      [param: In] set => this.ujW = value >= 4 ? value : throw new ArgumentOutOfRangeException("ParallelDeflateMaxBufferPairs", "Value must be 4 or greater.");
    }

    string object.\u0037E4() => string.Format("ZipFile::{0}", (object) this.\u0039Z1);

    public static Version Pn3 => Assembly.GetExecutingAssembly().GetName().Version;

    internal void p1m() => this.\u003115 = true;

    internal Stream \u00323Q([In] uint obj0) => (int) obj0 + 1 == (int) this.QJI || obj0 == 0U && this.QJI == 0U ? this.\u00394k : (Stream) \u0035yQ.k8c(this.XM6 ?? this.\u0031f3, obj0, this.QJI);

    internal void L2Y([In] bool obj0)
    {
      if (!this.DOr)
        return;
      using (\u0032f3 obj = new \u0032f3())
      {
        if (File.Exists(this.XM6 ?? this.\u0031f3))
        {
          obj.XM6 = obj.\u0031f3 = obj0 ? this.XM6 ?? this.\u0031f3 : this.\u0031f3;
        }
        else
        {
          if (this.\u00399r.CanSeek)
            this.\u00399r.Seek(0L, SeekOrigin.Begin);
          obj.\u00399r = this.\u00399r;
        }
        obj.QT1 = this.QT1;
        obj.\u0033B3 = this.\u0033B3;
        \u0032f3.HrP(obj);
        using (IEnumerator<q14> enumerator = obj.\u0023O())
        {
          while (enumerator.MoveNext())
          {
            q14 current = enumerator.Current;
            q14 q14 = this.\u0039XN(current.L83);
            if (q14 != null && !q14.n4I)
              q14.\u003196(current);
          }
        }
      }
      this.DOr = false;
    }

    public \u0032f3([In] string obj0)
    {
      if (\u0032f3.l79 == null)
      {
        this.a21 = Encoding.UTF8;
        this.\u0033B3 = VR4.\u0023d;
      }
      else
        this.a21 = \u0032f3.l79;
      try
      {
        this.\u0037uO(obj0, (TextWriter) null);
      }
      catch (Exception ex)
      {
        throw new xZi(string.Format("Could not read {0} as a zip file", (object) obj0), ex);
      }
    }

    public \u0032f3([In] string obj0, [In] Encoding obj1)
    {
      try
      {
        this.QT1 = obj1;
        this.\u0033B3 = VR4.\u0023d;
        this.\u0037uO(obj0, (TextWriter) null);
      }
      catch (Exception ex)
      {
        throw new xZi(string.Format("{0} is not a valid zip file", (object) obj0), ex);
      }
    }

    public \u0032f3()
    {
      if (\u0032f3.l79 == null)
      {
        this.a21 = Encoding.UTF8;
        this.\u0033B3 = VR4.\u0023d;
      }
      else
        this.a21 = \u0032f3.l79;
      this.\u0037uO((string) null, (TextWriter) null);
    }

    public \u0032f3([In] Encoding obj0)
    {
      this.QT1 = obj0;
      this.\u0033B3 = VR4.\u0023d;
      this.\u0037uO((string) null, (TextWriter) null);
    }

    public \u0032f3([In] string obj0, [In] TextWriter obj1)
    {
      if (\u0032f3.l79 == null)
      {
        this.a21 = Encoding.UTF8;
        this.\u0033B3 = VR4.\u0023d;
      }
      else
        this.a21 = \u0032f3.l79;
      try
      {
        this.\u0037uO(obj0, obj1);
      }
      catch (Exception ex)
      {
        throw new xZi(string.Format("{0} is not a valid zip file", (object) obj0), ex);
      }
    }

    public \u0032f3([In] string obj0, [In] TextWriter obj1, [In] Encoding obj2)
    {
      try
      {
        this.QT1 = obj2;
        this.\u0033B3 = VR4.\u0023d;
        this.\u0037uO(obj0, obj1);
      }
      catch (Exception ex)
      {
        throw new xZi(string.Format("{0} is not a valid zip file", (object) obj0), ex);
      }
    }

    public void NVj([In] string obj0)
    {
      try
      {
        this.\u0037uO(obj0, (TextWriter) null);
      }
      catch (Exception ex)
      {
        throw new xZi(string.Format("{0} is not a valid zip file", (object) obj0), ex);
      }
    }

    private void \u0037uO([In] string obj0, [In] TextWriter obj1)
    {
      this.\u0031f3 = obj0;
      this.L51 = obj1;
      this.\u003115 = true;
      this.T45 = true;
      this.V49 = PIJ.\u0023i;
      this.f34 = 524288L;
      this.\u003915 = new Dictionary<string, q14>((IEqualityComparer<string>) StringComparer.Ordinal);
      this.\u0033Ns = new Dictionary<string, q14>((IEqualityComparer<string>) StringComparer.OrdinalIgnoreCase);
      if (!File.Exists(this.\u0031f3))
        return;
      if (this.\u0037c9)
        \u0032f3.\u0035U7(this);
      else
        \u0032f3.HrP(this);
      this.Nba = true;
    }

    private List<q14> \u003644
    {
      get
      {
        if (this.\u0031f8 == null)
          this.\u0031f8 = new List<q14>((IEnumerable<q14>) this.\u003915.Values);
        return this.\u0031f8;
      }
    }

    public q14 \u0032gd([In] int obj0) => this.\u003644[obj0];

    public q14 \u0039XN([In] string obj0)
    {
      Dictionary<string, q14> pNi = this.pNi;
      string key1 = To4.\u0037j4(obj0);
      if (pNi.ContainsKey(key1))
        return pNi[key1];
      string key2 = key1.Replace("/", "\\");
      return pNi.ContainsKey(key2) ? pNi[key2] : (q14) null;
    }

    public ICollection<string> \u003287 => (ICollection<string>) this.\u003915.Keys;

    public ICollection<q14> a3S => (ICollection<q14>) this.\u003915.Values;

    public ICollection<q14> e19
    {
      get
      {
        \u0032f3.W3v w3v = new \u0032f3.W3v();
        List<q14> q14List = new List<q14>();
        foreach (q14 q14 in (IEnumerable<q14>) this.a3S)
          q14List.Add(q14);
        w3v.\u0036kv = this.\u0035C1 ? StringComparison.Ordinal : StringComparison.OrdinalIgnoreCase;
        q14List.Sort(new Comparison<q14>(w3v.\u0036IH));
        return (ICollection<q14>) q14List.AsReadOnly();
      }
    }

    public int \u003896 => this.\u003915.Count;

    public void \u003681([In] q14 obj0)
    {
      string key = obj0 != null ? To4.\u0037j4(obj0.L83) : throw new ArgumentNullException("entry");
      this.\u003915.Remove(key);
      if (!this.\u00335H(key))
        this.\u0033Ns.Remove(key);
      this.\u0031f8 = (List<q14>) null;
      this.\u003115 = true;
    }

    private bool \u00335H([In] string obj0)
    {
      foreach (q14 q14 in this.\u003915.Values)
      {
        if (string.Equals(q14.L83, obj0, StringComparison.OrdinalIgnoreCase))
          return true;
      }
      return false;
    }

    public void P24([In] string obj0) => this.\u003681(this.\u0039XN(q14.\u00336Q(obj0, (string) null)) ?? throw new ArgumentException("The entry you specified was not found in the zip archive."));

    public void \u0023Nn()
    {
      this.xsR(true);
      GC.SuppressFinalize((object) this);
    }

    protected virtual void xsR([In] bool obj0)
    {
      if (this.RC6)
        return;
      if (obj0)
      {
        if (this.\u003826 && this.\u00399r != null)
        {
          this.\u00399r.Dispose();
          this.\u00399r = (Stream) null;
        }
        if (this.\u0033q5 != null && this.\u0031f3 != null && this.eb7 != null)
        {
          this.eb7.Dispose();
          this.eb7 = (Stream) null;
        }
        if (this.\u003232 != null)
        {
          this.\u003232.j2y();
          this.\u003232 = (A8K) null;
        }
      }
      this.RC6 = true;
    }

    internal Stream \u00394k
    {
      get
      {
        if (this.\u00399r == null && (this.XM6 != null || this.\u0031f3 != null))
        {
          this.\u00399r = (Stream) File.Open(this.XM6 ?? this.\u0031f3, FileMode.Open, FileAccess.Read, FileShare.ReadWrite);
          this.\u003826 = true;
        }
        return this.\u00399r;
      }
    }

    private Stream pDj
    {
      get
      {
        if (this.eb7 != null || this.\u0031f3 == null)
          return this.eb7;
        if (this.i46 != 0L)
        {
          this.eb7 = (Stream) \u0035yQ.p56(this.\u0031f3, this.i46);
          return this.eb7;
        }
        To4.\u003234(this.\u0034UW ?? Path.GetDirectoryName(this.\u0031f3), out this.eb7, out this.\u0033q5);
        return this.eb7;
      }
      [param: In] set
      {
        if (value != null)
          throw new xZi("Cannot set the stream to a non-null value.");
        this.eb7 = (Stream) null;
      }
    }

    private string \u0032g7 => this.\u0031f3 == null ? "(stream)" : this.\u0031f3;

    public event EventHandler<\u0033FK> \u0035q4;

    internal bool \u0034MX([In] q14 obj0, [In] long obj1, [In] long obj2)
    {
      EventHandler<\u0033FK> eventHandler = this.\u003686;
      if (eventHandler != null)
      {
        \u0033FK e = \u0033FK.\u003833(this.\u0032g7, obj0, obj1, obj2);
        eventHandler((object) this, e);
        if (e.J6U())
          this.\u0032vr = true;
      }
      return this.\u0032vr;
    }

    private void JU3([In] int obj0, [In] q14 obj1, [In] bool obj2)
    {
      EventHandler<\u0033FK> eventHandler = this.\u003686;
      if (eventHandler == null)
        return;
      \u0033FK e = new \u0033FK(this.\u0032g7, obj2, this.\u003915.Count, obj0, obj1);
      eventHandler((object) this, e);
      if (!e.J6U())
        return;
      this.\u0032vr = true;
    }

    private void Ji6([In] \u003544 obj0)
    {
      EventHandler<\u0033FK> eventHandler = this.\u003686;
      if (eventHandler == null)
        return;
      \u0033FK e = new \u0033FK(this.\u0032g7, obj0);
      eventHandler((object) this, e);
      if (!e.J6U())
        return;
      this.\u0032vr = true;
    }

    private void \u003738()
    {
      EventHandler<\u0033FK> eventHandler = this.\u003686;
      if (eventHandler == null)
        return;
      \u0033FK e = \u0033FK.cF1(this.\u0032g7);
      eventHandler((object) this, e);
      if (!e.J6U())
        return;
      this.\u0032vr = true;
    }

    private void a33()
    {
      EventHandler<\u0033FK> eventHandler = this.\u003686;
      if (eventHandler == null)
        return;
      \u0033FK e = \u0033FK.O5x(this.\u0032g7);
      eventHandler((object) this, e);
    }

    public event EventHandler<r1R> qCl;

    private void CE3()
    {
      EventHandler<r1R> bwj = this.Bwj;
      if (bwj == null)
        return;
      r1R e = r1R.H38(this.\u0032g7);
      bwj((object) this, e);
    }

    private void \u00378a()
    {
      EventHandler<r1R> bwj = this.Bwj;
      if (bwj == null)
        return;
      r1R e = r1R.\u0034I8(this.\u0032g7);
      bwj((object) this, e);
    }

    internal void \u003856([In] q14 obj0)
    {
      EventHandler<r1R> bwj = this.Bwj;
      if (bwj == null)
        return;
      r1R e = r1R.xu3(this.\u0032g7, obj0, this.\u00394k.Position, this.\u0035C5);
      bwj((object) this, e);
    }

    internal void Zab([In] bool obj0, [In] q14 obj1)
    {
      EventHandler<r1R> bwj = this.Bwj;
      if (bwj == null)
        return;
      r1R e = obj0 ? r1R.\u00374i(this.\u0032g7, this.\u003915.Count) : r1R.\u0038z7(this.\u0032g7, obj1, this.\u003915.Count);
      bwj((object) this, e);
    }

    private long \u0035C5
    {
      get
      {
        if (this.\u003417 == -99L)
          this.\u003417 = this.\u003826 ? To4.wHY(this.\u0031f3) : -1L;
        return this.\u003417;
      }
    }

    public event EventHandler<O58> N46;

    private void \u003353([In] int obj0, [In] bool obj1, [In] q14 obj2, [In] string obj3)
    {
      EventHandler<O58> p34 = this.P34;
      if (p34 == null)
        return;
      O58 e = new O58(this.\u0032g7, obj1, this.\u003915.Count, obj0, obj2, obj3);
      p34((object) this, e);
      if (!e.J6U())
        return;
      this.\u003321 = true;
    }

    internal bool e34([In] q14 obj0, [In] long obj1, [In] long obj2)
    {
      EventHandler<O58> p34 = this.P34;
      if (p34 != null)
      {
        O58 e = O58.\u00374i(this.\u0032g7, obj0, obj1, obj2);
        p34((object) this, e);
        if (e.J6U())
          this.\u003321 = true;
      }
      return this.\u003321;
    }

    internal bool \u003133([In] q14 obj0, [In] string obj1, [In] bool obj2)
    {
      EventHandler<O58> p34 = this.P34;
      if (p34 != null)
      {
        O58 e = obj2 ? O58.p29(this.\u0032g7, obj0, obj1) : O58.BSa(this.\u0032g7, obj0, obj1);
        p34((object) this, e);
        if (e.J6U())
          this.\u003321 = true;
      }
      return this.\u003321;
    }

    internal bool \u0034vE([In] q14 obj0, [In] string obj1)
    {
      EventHandler<O58> p34 = this.P34;
      if (p34 != null)
      {
        O58 e = O58.S7r(this.\u0032g7, obj0, obj1);
        p34((object) this, e);
        if (e.J6U())
          this.\u003321 = true;
      }
      return this.\u003321;
    }

    private void \u00398P([In] string obj0)
    {
      EventHandler<O58> p34 = this.P34;
      if (p34 == null)
        return;
      O58 e = O58.\u003986(this.\u0032g7, obj0);
      p34((object) this, e);
    }

    private void XtA([In] string obj0)
    {
      EventHandler<O58> p34 = this.P34;
      if (p34 == null)
        return;
      O58 e = O58.Z1S(this.\u0032g7, obj0);
      p34((object) this, e);
    }

    public event EventHandler<\u003761> xrK;

    private void Rr6()
    {
      EventHandler<\u003761> bO9 = this.bO9;
      if (bO9 == null)
        return;
      \u003761 e = \u003761.\u0037Z1(this.\u0032g7);
      bO9((object) this, e);
      if (!e.J6U())
        return;
      this.\u003733 = true;
    }

    private void \u0031R6()
    {
      EventHandler<\u003761> bO9 = this.bO9;
      if (bO9 == null)
        return;
      \u003761 e = \u003761.t52(this.\u0032g7);
      bO9((object) this, e);
    }

    internal void \u003116([In] q14 obj0)
    {
      EventHandler<\u003761> bO9 = this.bO9;
      if (bO9 == null)
        return;
      \u003761 e = \u003761.l12(this.\u0032g7, obj0, this.\u003915.Count);
      bO9((object) this, e);
      if (!e.J6U())
        return;
      this.\u003733 = true;
    }

    public event EventHandler<\u00355m> \u0034Fo;

    internal bool \u0034yx([In] q14 obj0, [In] Exception obj1)
    {
      if (this.a77 != null)
      {
        lock (this.\u003833)
        {
          \u00355m e = \u00355m.\u00313R(this.\u0039Z1, obj0, obj1);
          this.a77((object) this, e);
          if (e.J6U())
            this.\u0032vr = true;
        }
      }
      return this.\u0032vr;
    }

    public void \u003134([In] string obj0) => this.C5X(obj0, true);

    public void I24([In] string obj0, [In] \u00331g obj1)
    {
      this.\u003246 = obj1;
      this.C5X(obj0, true);
    }

    private void C5X([In] string obj0, [In] bool obj1)
    {
      bool flag = this.V7K;
      this.xOj = true;
      try
      {
        this.XtA(obj0);
        int num = 0;
        foreach (q14 q14 in this.\u003915.Values)
        {
          if (flag)
          {
            this.YY3.WriteLine("\n{1,-22} {2,-8} {3,4}   {4,-8}  {0}", (object) "Name", (object) "Modified", (object) "Size", (object) "Ratio", (object) "Packed");
            this.YY3.WriteLine(new string('-', 72));
            flag = false;
          }
          if (this.V7K)
          {
            this.YY3.WriteLine("{1,-22} {2,-8} {3,4:F0}%   {4,-8} {0}", (object) q14.L83, (object) q14.S1N.ToString("yyyy-MM-dd HH:mm:ss"), (object) q14.\u0039MP, (object) q14.P22, (object) q14.\u0037qg);
            if (!string.IsNullOrEmpty(q14.\u003545))
              this.YY3.WriteLine("  Comment: {0}", (object) q14.\u003545);
          }
          q14.K89 = this.F59;
          this.\u003353(num, true, q14, obj0);
          if (obj1)
            q14.\u0035PR = this.\u003246;
          q14.qbX(obj0);
          ++num;
          this.\u003353(num, false, q14, obj0);
          if (this.\u003321)
            break;
        }
        if (this.\u003321)
          return;
        foreach (q14 q14 in this.\u003915.Values)
        {
          if (q14.pT8 || q14.L83.EndsWith("/"))
          {
            string str = q14.L83.StartsWith("/") ? Path.Combine(obj0, q14.L83.Substring(1)) : Path.Combine(obj0, q14.L83);
            q14.\u00399W(str, false);
          }
        }
        this.\u00398P(obj0);
      }
      finally
      {
        this.xOj = false;
      }
    }

    public static \u0032f3 \u0038Ha([In] string obj0) => \u0032f3.JX1(obj0, (TextWriter) null, (Encoding) null, (EventHandler<r1R>) null);

    public static \u0032f3 \u003364([In] string obj0, [In] w64 obj1) => obj1 != null ? \u0032f3.JX1(obj0, obj1.\u003645(), obj1.uDV(), obj1.\u003297()) : throw new ArgumentNullException("options");

    private static \u0032f3 JX1(
      [In] string obj0,
      [In] TextWriter obj1,
      [In] Encoding obj2,
      [In] EventHandler<r1R> obj3)
    {
      \u0032f3 obj = new \u0032f3();
      obj.QT1 = obj2 ?? \u0032f3.l79;
      obj.\u0033B3 = VR4.\u0023d;
      obj.L51 = obj1;
      obj.\u0031f3 = obj0;
      if (obj3 != null)
        obj.Bwj = obj3;
      if (obj.V7K)
        obj.L51.WriteLine("reading from {0}...", (object) obj0);
      \u0032f3.HrP(obj);
      obj.Nba = true;
      return obj;
    }

    public static \u0032f3 \u0031if([In] Stream obj0) => \u0032f3.\u00346I(obj0, (TextWriter) null, (Encoding) null, (EventHandler<r1R>) null);

    public static \u0032f3 z78([In] Stream obj0, [In] w64 obj1) => obj1 != null ? \u0032f3.\u00346I(obj0, obj1.\u003645(), obj1.uDV(), obj1.\u003297()) : throw new ArgumentNullException("options");

    private static \u0032f3 \u00346I(
      [In] Stream obj0,
      [In] TextWriter obj1,
      [In] Encoding obj2,
      [In] EventHandler<r1R> obj3)
    {
      if (obj0 == null)
        throw new ArgumentNullException("zipStream");
      \u0032f3 obj = new \u0032f3();
      obj.L51 = obj1;
      obj.a21 = obj2 ?? \u0032f3.l79;
      obj.\u003556 = VR4.\u0023d;
      if (obj3 != null)
        obj.qCl += obj3;
      obj.\u00399r = obj0.Position == 0L ? obj0 : (Stream) new \u0034Vh(obj0);
      obj.\u003826 = false;
      if (obj.V7K)
        obj.L51.WriteLine("reading from stream...");
      \u0032f3.HrP(obj);
      return obj;
    }

    private static void HrP([In] \u0032f3 obj0)
    {
      Stream stream = obj0.\u00394k;
      try
      {
        obj0.XM6 = obj0.\u0031f3;
        if (!stream.CanSeek)
        {
          \u0032f3.\u0035U7(obj0);
          return;
        }
        obj0.CE3();
        if (\u0032f3.g7x(stream) == 101010256U)
          return;
        int num1 = 0;
        bool flag = false;
        long offset = stream.Length - 64L;
        long num2 = Math.Max(stream.Length - 16384L, 10L);
        do
        {
          if (offset < 0L)
            offset = 0L;
          stream.Seek(offset, SeekOrigin.Begin);
          if (To4.I5o(stream, 101010256) != -1L)
            flag = true;
          else if (offset != 0L)
          {
            ++num1;
            offset -= (long) (32 * (num1 + 1) * num1);
          }
          else
            break;
        }
        while (!flag && offset > num2);
        if (flag)
        {
          obj0.t24 = stream.Position - 4L;
          byte[] buffer = new byte[16];
          stream.Read(buffer, 0, buffer.Length);
          obj0.QJI = (uint) BitConverter.ToUInt16(buffer, 2);
          if (obj0.QJI == (uint) ushort.MaxValue)
            throw new xZi("Spanned archives with more than 65534 segments are not supported at this time.");
          ++obj0.QJI;
          int startIndex = 12;
          uint uint32 = BitConverter.ToUInt32(buffer, startIndex);
          if (uint32 == uint.MaxValue)
          {
            \u0032f3.\u0036FB(obj0);
          }
          else
          {
            obj0.\u00357I = uint32;
            stream.Seek((long) uint32, SeekOrigin.Begin);
          }
          \u0032f3.\u0036UK(obj0);
        }
        else
        {
          stream.Seek(0L, SeekOrigin.Begin);
          \u0032f3.\u0035U7(obj0);
        }
      }
      catch (Exception ex)
      {
        if (obj0.\u003826 && obj0.\u00399r != null)
        {
          obj0.\u00399r.Dispose();
          obj0.\u00399r = (Stream) null;
        }
        throw new xZi("Cannot read that as a ZipFile", ex);
      }
      obj0.\u003115 = false;
    }

    private static void \u0036FB([In] \u0032f3 obj0)
    {
      Stream stream = obj0.\u00394k;
      byte[] buffer1 = new byte[16];
      stream.Seek(-40L, SeekOrigin.Current);
      stream.Read(buffer1, 0, 16);
      long int64_1 = BitConverter.ToInt64(buffer1, 8);
      obj0.\u00357I = uint.MaxValue;
      obj0.JMn = int64_1;
      stream.Seek(int64_1, SeekOrigin.Begin);
      uint num = (uint) To4.\u0038m2(stream);
      if (num != 101075792U)
        throw new e1T(string.Format("  Bad signature (0x{0:X8}) looking for ZIP64 EoCD Record at position 0x{1:X8}", (object) num, (object) stream.Position));
      stream.Read(buffer1, 0, 8);
      byte[] buffer2 = new byte[BitConverter.ToInt64(buffer1, 0)];
      stream.Read(buffer2, 0, buffer2.Length);
      long int64_2 = BitConverter.ToInt64(buffer2, 36);
      stream.Seek(int64_2, SeekOrigin.Begin);
    }

    private static uint g7x([In] Stream obj0) => (uint) To4.\u0038m2(obj0);

    private static void \u0036UK([In] \u0032f3 obj0)
    {
      bool flag = false;
      Dictionary<string, object> dictionary = new Dictionary<string, object>((IEqualityComparer<string>) StringComparer.Ordinal);
      q14 q14;
      while ((q14 = q14.\u00353N(obj0, dictionary)) != null)
      {
        q14.\u0037o7();
        obj0.Zab(true, (q14) null);
        if (obj0.V7K)
          obj0.YY3.WriteLine("entry {0}", (object) q14.L83);
        obj0.\u003915.Add(q14.L83, q14);
        if (!obj0.\u0033Ns.ContainsKey(q14.L83))
          obj0.\u0033Ns.Add(q14.L83, q14);
        if (q14.\u003832)
          flag = true;
        dictionary.Add(q14.L83, (object) null);
      }
      if (flag)
        obj0.\u003265 = \u0033RZ.\u0023d;
      if (obj0.t24 > 0L)
        obj0.\u00394k.Seek(obj0.t24, SeekOrigin.Begin);
      \u0032f3.Wy4(obj0);
      if (obj0.V7K && !string.IsNullOrEmpty(obj0.ez5))
        obj0.YY3.WriteLine("Zip file Comment: {0}", (object) obj0.ez5);
      if (obj0.V7K)
        obj0.YY3.WriteLine("read in {0} entries.", (object) obj0.\u003915.Count);
      obj0.\u00378a();
    }

    private static void \u0035U7([In] \u0032f3 obj0)
    {
      obj0.CE3();
      obj0.\u003915.Clear();
      obj0.\u0033Ns.Clear();
      if (obj0.V7K)
      {
        if (obj0.\u0039Z1 == null)
          obj0.YY3.WriteLine("Reading zip from stream...");
        else
          obj0.YY3.WriteLine("Reading zip {0}...", (object) obj0.\u0039Z1);
      }
      bool flag = true;
      q14 q14_1;
      for (\u0033rn obj = new \u0033rn((object) obj0); (q14_1 = q14.ELI(obj, flag)) != null; flag = false)
      {
        if (obj0.V7K)
          obj0.YY3.WriteLine("  {0}", (object) q14_1.L83);
        obj0.\u003915.Add(q14_1.L83, q14_1);
        if (!obj0.\u0033Ns.ContainsKey(q14_1.L83))
          obj0.\u0033Ns.Add(q14_1.L83, q14_1);
      }
      try
      {
        Dictionary<string, object> dictionary = new Dictionary<string, object>((IEqualityComparer<string>) StringComparer.Ordinal);
        q14 q14_2;
        while ((q14_2 = q14.\u00353N(obj0, dictionary)) != null)
        {
          q14 q14_3 = obj0.\u003915[q14_2.L83];
          if (q14_3 != null)
          {
            q14_3.i9M = q14_2.\u003545;
            if (q14_2.pT8)
              q14_3.\u0034d1();
          }
          dictionary.Add(q14_2.L83, (object) null);
        }
        if (obj0.t24 > 0L)
          obj0.\u00394k.Seek(obj0.t24, SeekOrigin.Begin);
        \u0032f3.Wy4(obj0);
        if (obj0.V7K)
        {
          if (!string.IsNullOrEmpty(obj0.ez5))
            obj0.YY3.WriteLine("Zip file Comment: {0}", (object) obj0.ez5);
        }
      }
      catch (xZi ex)
      {
      }
      catch (IOException ex)
      {
      }
      obj0.\u00378a();
    }

    private static void Wy4([In] \u0032f3 obj0)
    {
      Stream stream = obj0.\u00394k;
      int num1 = To4.\u00352s(stream);
      int startIndex1 = 0;
      if (num1 == 101075792)
      {
        byte[] buffer1 = new byte[52];
        stream.Read(buffer1, 0, buffer1.Length);
        long int64 = BitConverter.ToInt64(buffer1, 0);
        if (int64 < 44L)
          throw new xZi("Bad size in the ZIP64 Central Directory.");
        obj0.J27 = BitConverter.ToUInt16(buffer1, startIndex1);
        int startIndex2 = startIndex1 + 2;
        obj0.uo9 = BitConverter.ToUInt16(buffer1, startIndex2);
        int startIndex3 = startIndex2 + 2;
        obj0.QJI = BitConverter.ToUInt32(buffer1, startIndex3);
        int num2 = startIndex3 + 2;
        byte[] buffer2 = new byte[int64 - 44L];
        stream.Read(buffer2, 0, buffer2.Length);
        if (To4.\u00352s(stream) != 117853008)
          throw new xZi("Inconsistent metadata in the ZIP64 Central Directory.");
        byte[] buffer3 = new byte[16];
        stream.Read(buffer3, 0, buffer3.Length);
        num1 = To4.\u00352s(stream);
      }
      if (num1 != 101010256)
      {
        stream.Seek(-4L, SeekOrigin.Current);
        throw new e1T(string.Format("Bad signature ({0:X8}) at position 0x{1:X8}", (object) num1, (object) stream.Position));
      }
      byte[] buffer = new byte[16];
      obj0.\u00394k.Read(buffer, 0, buffer.Length);
      if (obj0.QJI == 0U)
        obj0.QJI = (uint) BitConverter.ToUInt16(buffer, 2);
      \u0032f3.I35(obj0);
    }

    private static void I35([In] \u0032f3 obj0)
    {
      byte[] buffer = new byte[2];
      obj0.\u00394k.Read(buffer, 0, buffer.Length);
      short length = (short) ((int) buffer[0] + (int) buffer[1] * 256);
      if (length <= (short) 0)
        return;
      byte[] numArray = new byte[(int) length];
      obj0.\u00394k.Read(numArray, 0, numArray.Length);
      string str = obj0.QT1.GetString(numArray, 0, numArray.Length);
      obj0.ez5 = str;
    }

    public static bool uem([In] string obj0) => \u0032f3.\u0035vv(obj0, false);

    public static bool \u0035vv([In] string obj0, [In] bool obj1)
    {
      bool flag = false;
      try
      {
        if (!File.Exists(obj0))
          return false;
        using (FileStream fileStream = File.Open(obj0, FileMode.Open, FileAccess.Read, FileShare.ReadWrite))
          flag = \u0032f3.hJf((Stream) fileStream, obj1);
      }
      catch (IOException ex)
      {
      }
      catch (xZi ex)
      {
      }
      return flag;
    }

    public static bool hJf([In] Stream obj0, [In] bool obj1)
    {
      if (obj0 == null)
        throw new ArgumentNullException("stream");
      bool flag = false;
      try
      {
        if (!obj0.CanRead)
          return false;
        Stream stream = Stream.Null;
        using (\u0032f3 obj = \u0032f3.\u00346I(obj0, (TextWriter) null, (Encoding) null, (EventHandler<r1R>) null))
        {
          if (obj1)
          {
            using (IEnumerator<q14> enumerator = obj.\u0023O())
            {
              while (enumerator.MoveNext())
              {
                q14 current = enumerator.Current;
                if (!current.pT8)
                  current.X6M(stream);
              }
            }
          }
        }
        flag = true;
      }
      catch (IOException ex)
      {
      }
      catch (xZi ex)
      {
      }
      return flag;
    }

    private void w1V([In] string obj0)
    {
      bool flag = false;
      int num = 3;
      for (int index = 0; index < num; ++index)
      {
        if (flag)
          break;
        try
        {
          File.Delete(obj0);
          flag = true;
        }
        catch (UnauthorizedAccessException ex)
        {
          Console.WriteLine("************************************************** Retry delete.");
          Thread.Sleep(200 + index * 200);
        }
      }
    }

    public void \u0035cH()
    {
      try
      {
        bool flag1 = false;
        this.\u0032vr = false;
        this.Xv7 = 0U;
        this.\u003738();
        if (this.pDj == null)
          throw new UW5("You haven't specified where to save the zip.");
        if (this.\u0031f3 != null && this.\u0031f3.EndsWith(".exe") && !this.ue4)
          throw new UW5("You specified an EXE for a plain zip file.");
        if (!this.\u003115)
        {
          this.a33();
          if (!this.V7K)
            return;
          this.YY3.WriteLine("No save is necessary....");
        }
        else
        {
          this.L2Y(true);
          if (this.V7K)
            this.YY3.WriteLine("saving....");
          if (this.\u003915.Count >= (int) ushort.MaxValue && this.\u0033TX == \u0033RZ.\u0023a)
            throw new xZi("The number of entries is 65535 or greater. Consider setting the UseZip64WhenSaving property on the ZipFile instance.");
          int num = 0;
          ICollection<q14> q14s = this.sj6 ? this.e19 : this.a3S;
          foreach (q14 q14 in (IEnumerable<q14>) q14s)
          {
            this.JU3(num, q14, true);
            q14.\u0039ed(this.pDj);
            if (!this.\u0032vr)
            {
              ++num;
              this.JU3(num, q14, false);
              if (!this.\u0032vr)
              {
                if (q14.\u0032vs)
                  flag1 |= q14.\u003551.Value;
              }
              else
                break;
            }
            else
              break;
          }
          if (this.\u0032vr)
            return;
          this.Xv7 = this.pDj is \u0035yQ pDj ? pDj.\u0031pq() : 1U;
          bool flag2 = \u003324.ZB7(this.pDj, q14s, this.Xv7, this.\u0033TX, this.ez5, new \u0033rn((object) this));
          this.Ji6(\u003544.\u0023m);
          this.\u00374q = true;
          this.\u003115 = false;
          this.\u0035C5 = new bool?(flag1 | flag2);
          if (this.Nba && this.\u00399r != null)
          {
            this.\u00399r.Close();
            this.\u00399r = (Stream) null;
          }
          foreach (q14 q14 in (IEnumerable<q14>) q14s)
          {
            if (q14.\u0034c3 is \u0035yQ obj)
              obj.Dispose();
            q14.\u0034c3 = (Stream) null;
          }
          if (this.\u0031f3 != null && (this.\u0033q5 != null || pDj != null))
          {
            this.pDj.Dispose();
            if (this.\u0032vr)
              return;
            string str = (string) null;
            if (File.Exists(this.\u0031f3))
            {
              str = this.\u0031f3 + "." + Path.GetRandomFileName();
              if (File.Exists(str))
                this.w1V(str);
              File.Move(this.\u0031f3, str);
            }
            this.Ji6(\u003544.\u0023n);
            File.Move(pDj != null ? pDj.\u0037vl() : this.\u0033q5, this.\u0031f3);
            this.Ji6(\u003544.\u0023o);
            if (str != null)
            {
              try
              {
                if (File.Exists(str))
                  File.Delete(str);
              }
              catch
              {
              }
            }
            this.Nba = true;
          }
          this.XM6 = this.\u0031f3;
          \u0032f3.y43(q14s);
          this.a33();
          this.DOr = true;
        }
      }
      finally
      {
        this.\u0033R4();
      }
    }

    private static void y43([In] ICollection<q14> obj0)
    {
      foreach (q14 q14 in (IEnumerable<q14>) obj0)
        q14.\u00392F();
    }

    private void SO3()
    {
      try
      {
        if (!File.Exists(this.\u0033q5))
          return;
        File.Delete(this.\u0033q5);
      }
      catch (IOException ex)
      {
        if (!this.V7K)
          return;
        this.YY3.WriteLine("ZipFile::Save: could not delete temp file: {0}.", (object) ex.Message);
      }
    }

    private void \u0033R4()
    {
      if (this.\u0031f3 == null)
        return;
      if (this.eb7 != null)
      {
        try
        {
          this.eb7.Dispose();
        }
        catch (IOException ex)
        {
        }
      }
      this.eb7 = (Stream) null;
      if (this.\u0033q5 == null)
        return;
      this.SO3();
      this.\u0033q5 = (string) null;
    }

    public void \u00313k([In] string obj0)
    {
      if (this.\u0031f3 == null)
        this.eb7 = (Stream) null;
      else
        this.XM6 = this.\u0031f3;
      this.\u0031f3 = obj0;
      if (Directory.Exists(this.\u0031f3))
        throw new xZi("Bad Directory", (Exception) new ArgumentException("That name specifies an existing directory. Please specify a filename.", "fileName"));
      this.\u003115 = true;
      this.Nba = File.Exists(this.XM6);
      this.\u0035cH();
    }

    public void ze3([In] Stream obj0)
    {
      if (obj0 == null)
        throw new ArgumentNullException("outputStream");
      if (!obj0.CanWrite)
        throw new ArgumentException("Must be a writable stream.", "outputStream");
      this.\u0031f3 = (string) null;
      if (this.eb7 != null)
        this.\u00399r = this.eb7;
      this.eb7 = (Stream) new \u0036IA(obj0);
      this.\u003115 = true;
      this.Nba = File.Exists(this.XM6);
      this.\u0035cH();
      this.Nba = false;
      this.XM6 = (string) null;
    }

    public void \u0037B4([In] string obj0) => this.Go5(obj0, ".", (string) null, false);

    public void \u00314G([In] string obj0, [In] bool obj1) => this.Go5(obj0, ".", (string) null, obj1);

    public void \u00367e([In] string obj0, [In] string obj1) => this.Go5(obj0, obj1, (string) null, false);

    public void \u0036gI([In] string obj0, [In] string obj1, [In] bool obj2) => this.Go5(obj0, obj1, (string) null, obj2);

    public void W15([In] string obj0, [In] string obj1, [In] string obj2) => this.Go5(obj0, obj1, obj2, false);

    public void Go5([In] string obj0, [In] string obj1, [In] string obj2, [In] bool obj3) => this.H4V(obj0, obj1, obj2, obj3, false);

    public void \u003892([In] string obj0, [In] string obj1, [In] string obj2, [In] bool obj3) => this.H4V(obj0, obj1, obj2, obj3, true);

    private string rD6([In] string obj0) => obj0.EndsWith("\\") ? obj0 : obj0 + "\\";

    private void H4V([In] string obj0, [In] string obj1, [In] string obj2, [In] bool obj3, [In] bool obj4)
    {
      if (obj1 == null && Directory.Exists(obj0))
      {
        obj1 = obj0;
        obj0 = "*.*";
      }
      else if (string.IsNullOrEmpty(obj1))
        obj1 = ".";
      while (obj1.EndsWith("\\"))
        obj1 = obj1.Substring(0, obj1.Length - 1);
      if (this.V7K)
        this.YY3.WriteLine("adding selection '{0}' from dir '{1}'...", (object) obj0, (object) obj1);
      ReadOnlyCollection<string> readOnlyCollection = new lKP(obj0, this.T45).xV4(obj1, obj3);
      if (this.V7K)
        this.YY3.WriteLine("found {0} files...", (object) readOnlyCollection.Count);
      this.Rr6();
      po6 po6 = obj4 ? po6.\u0023b : po6.\u0023a;
      foreach (string path in readOnlyCollection)
      {
        string str = obj2 == null ? (string) null : \u0032f3.\u0036f1(Path.GetDirectoryName(path), obj1, obj2);
        if (File.Exists(path))
        {
          if (obj4)
            this.\u003855(path, str);
          else
            this.\u0035mc(path, str);
        }
        else
          this.Y7B(path, str, po6, false, 0);
      }
      this.\u0031R6();
    }

    private static string \u0036f1([In] string obj0, [In] string obj1, [In] string obj2)
    {
      string upper1 = obj0.ToUpper();
      string upper2 = obj1.ToUpper();
      string str = upper2;
      return upper1.IndexOf(str) != 0 ? obj0 : obj2 + obj0.Substring(upper2.Length);
    }

    public ICollection<q14> R92([In] string obj0) => new lKP(obj0, this.T45).c5z(this);

    public ICollection<q14> \u0031dM([In] string obj0, [In] string obj1) => new lKP(obj0, this.T45).xm4(this, obj1);

    public int \u003725([In] string obj0)
    {
      ICollection<q14> q14s = this.R92(obj0);
      this.\u0037D5(q14s);
      return q14s.Count;
    }

    public int \u0033b2([In] string obj0, [In] string obj1)
    {
      ICollection<q14> q14s = this.\u0031dM(obj0, obj1);
      this.\u0037D5(q14s);
      return q14s.Count;
    }

    public void iKw([In] string obj0)
    {
      foreach (q14 q14 in (IEnumerable<q14>) this.R92(obj0))
      {
        q14.K89 = this.F59;
        q14.f2N();
      }
    }

    public void pv4([In] string obj0, [In] \u00331g obj1)
    {
      foreach (q14 q14 in (IEnumerable<q14>) this.R92(obj0))
      {
        q14.K89 = this.F59;
        q14.ow4(obj1);
      }
    }

    public void \u00345y([In] string obj0, [In] string obj1)
    {
      foreach (q14 q14 in (IEnumerable<q14>) this.\u0031dM(obj0, obj1))
      {
        q14.K89 = this.F59;
        q14.f2N();
      }
    }

    public void R4v([In] string obj0, [In] string obj1, [In] string obj2)
    {
      foreach (q14 q14 in (IEnumerable<q14>) this.\u0031dM(obj0, obj1))
      {
        q14.K89 = this.F59;
        q14.qbX(obj2);
      }
    }

    public void \u00318U([In] string obj0, [In] string obj1, [In] string obj2, [In] \u00331g obj3)
    {
      foreach (q14 q14 in (IEnumerable<q14>) this.\u0031dM(obj0, obj1))
      {
        q14.K89 = this.F59;
        q14.\u0034fB(obj2, obj3);
      }
    }

    static \u0032f3()
    {
      Encoding encoding = (Encoding) null;
      try
      {
        encoding = Encoding.GetEncoding("IBM437");
      }
      catch (Exception ex)
      {
      }
      if (encoding == null)
      {
        try
        {
          encoding = Encoding.GetEncoding(1252);
        }
        catch (Exception ex)
        {
        }
      }
      \u0032f3.\u0033Y9 = encoding;
    }

    public static Encoding l79
    {
      get => \u0032f3.\u0033Y9;
      [param: In] set
      {
        if (\u0032f3.\u0033sD)
          return;
        \u0032f3.\u0033Y9 = value;
        \u0032f3.\u0033sD = true;
      }
    }

    public IEnumerator<q14> \u0023O() => (IEnumerator<q14>) new \u0032f3.kb2(0)
    {
      \u00366L = this
    };

    IEnumerator IEnumerable.\u0023P() => (IEnumerator) this.\u0023O();

    [DispId(-4)]
    public IEnumerator \u00353b() => (IEnumerator) this.\u0023O();

    private sealed class \u00312P
    {
      public nlA \u0038q3;
      public List<string> \u003254;
      public List<string> \u003146;
      public List<string> Zm1;
    }

    private sealed class \u003155
    {
      public R9i \u0035HR;

      internal bool \u003315([In] \u0032f3.\u00312P obj0) => obj0.\u0038q3 == this.\u0035HR.XF4();
    }

    private sealed class W3v
    {
      public StringComparison \u0036kv;

      internal int \u0036IH([In] q14 obj0, [In] q14 obj1) => string.Compare(obj0.L83, obj1.L83, this.\u0036kv);
    }

    private sealed class kb2 : IEnumerator<q14>, IEnumerator, IDisposable
    {
      private int \u0032e1;
      private q14 C46;
      public \u0032f3 \u00366L;
      private Dictionary<string, q14>.ValueCollection.Enumerator \u00337Q;

      public kb2([In] int obj0) => this.\u0032e1 = obj0;

      void IDisposable.\u0023wjg()
      {
        switch (this.\u0032e1)
        {
          case -3:
          case 1:
            try
            {
            }
            finally
            {
              this.\u0032O2();
            }
            break;
        }
      }

      bool IEnumerator.\u0023Trg()
      {
        // ISSUE: fault handler
        try
        {
          int num = this.\u0032e1;
          \u0032f3 obj = this.\u00366L;
          switch (num)
          {
            case 0:
              this.\u0032e1 = -1;
              this.\u00337Q = obj.\u003915.Values.GetEnumerator();
              this.\u0032e1 = -3;
              break;
            case 1:
              this.\u0032e1 = -3;
              break;
            default:
              return false;
          }
          if (this.\u00337Q.MoveNext())
          {
            this.C46 = this.\u00337Q.Current;
            this.\u0032e1 = 1;
            return true;
          }
          this.\u0032O2();
          this.\u00337Q = new Dictionary<string, q14>.ValueCollection.Enumerator();
          return false;
        }
        __fault
        {
          this.\u0023wjg();
        }
      }

      private void \u0032O2()
      {
        this.\u0032e1 = -1;
        this.\u00337Q.Dispose();
      }

      [SpecialName]
      q14 IEnumerator<q14>.\u0023Vrg() => this.C46;

      void IEnumerator.\u0023Wrg() => throw new NotSupportedException();

      [SpecialName]
      object IEnumerator.\u0023Xrg() => (object) this.C46;
    }
  }
}
