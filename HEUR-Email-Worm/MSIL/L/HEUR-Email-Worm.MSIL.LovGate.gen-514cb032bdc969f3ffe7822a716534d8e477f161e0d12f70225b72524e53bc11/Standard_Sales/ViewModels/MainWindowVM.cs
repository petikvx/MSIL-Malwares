// Decompiled with JetBrains decompiler
// Type: Standard_Sales.ViewModels.MainWindowVM
// Assembly: PreAllocatedOverlap, Version=1.0.2.1, Culture=neutral, PublicKeyToken=null
// MVID: B92242D0-7BA9-445E-B92A-42A0AEAC877F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Email-Worm.MSIL.LovGate.gen-514cb032bdc969f3ffe7822a716534d8e477f161e0d12f70225b72524e53bc11.exe

using Microsoft.CSharp.RuntimeBinder;
using Standard_Sales.Calculators;
using Standard_Sales.ExcelImport;
using Standard_Sales.Models;
using Standard_Sales.ResultExporters;
using Standard_Sales.TypeGenerator;
using Standard_Sales.ViewModels.Events;
using Standard_Sales.ViewModels.Framework;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Threading;
using System.Windows.Input;

namespace Standard_Sales.ViewModels
{
  public class MainWindowVM : SimpleViewModel
  {
    private readonly IOpenFileService _openFileService;
    private readonly ISaveFileService _saveFileService;
    private readonly IExcelImporter _excelImporter;
    private readonly IColumnReducer _columnReducer;
    private readonly IDynamicListGenerator _dynamicListGenerator;
    private ICommand _openCommand;
    private ICommand _calculateCohensCommand;
    private ICommand _calculateHedgesCommand;
    private object _expando;
    private ExcelDataSet _excelDataSet;

    public MainWindowVM(
      IOpenFileService openFileService,
      ISaveFileService saveFileService,
      IExcelImporter excelImporter,
      IColumnReducer columnReducer,
      IDynamicListGenerator dynamicListGenerator)
    {
label_1:
      int num1 = 1351045518;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 397514554)) % 8U)
        {
          case 0:
            goto label_3;
          case 1:
            this._saveFileService = saveFileService;
            num1 = (int) num2 * -1123110982 ^ 175465347;
            continue;
          case 2:
            this._columnReducer = columnReducer;
            num1 = (int) num2 * -199606893 ^ 491290883;
            continue;
          case 3:
            this._excelImporter = excelImporter;
            num1 = (int) num2 * 1359612912 ^ -626673624;
            continue;
          case 4:
            this._openFileService = openFileService;
            num1 = (int) num2 * -1062332347 ^ 525885799;
            continue;
          case 5:
            num1 = (int) num2 * -489055504 ^ -1557349062;
            continue;
          case 6:
            goto label_1;
          case 7:
            this._dynamicListGenerator = dynamicListGenerator;
            this.OpenExcelSheet(\u003CModule\u003E.\u206F‌⁮​‫‫‮‬⁭⁬⁫⁮⁫⁭‌‮‌‏‬​⁭⁫‪​‫‮‬‫‬⁪⁬‍‍‮‬⁯‮‏‌‮‮<string>(4228537633U));
            num1 = (int) num2 * 670266638 ^ 1314457437;
            continue;
          default:
            goto label_10;
        }
      }
label_3:
      return;
label_10:;
    }

    public object Expando
    {
      get
      {
label_1:
        int num1 = -355703874;
        object expando;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1769636945)) % 4U)
          {
            case 0:
              num1 = (int) num2 * -438379921 ^ 1054589901;
              continue;
            case 1:
              expando = this._expando;
              num1 = (int) num2 * -1854446807 ^ 991051738;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return expando;
      }
      private set
      {
label_1:
        int num1 = 1397727730;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 974289868)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              this.RaisePropertyChanged();
              num1 = (int) num2 * 854892022 ^ 993891729;
              continue;
            case 2:
              this._expando = value;
              num1 = (int) num2 * 823412395 ^ -1047743277;
              continue;
            case 3:
              goto label_3;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public ICommand OpenCommand
    {
      get
      {
label_1:
        int num1 = 1435284627;
        ICommand openCommand;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1105841598)) % 4U)
          {
            case 1:
              openCommand = this._openCommand ?? (this._openCommand = (ICommand) new RelayCommand((Action<object>) (p => this.OnOpen())));
              num1 = 453296868;
              continue;
            case 2:
              num1 = (int) num2 * -716108949 ^ -779797536;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return openCommand;
      }
    }

    private void OnOpen()
    {
label_1:
      int num1 = 1838685966;
      bool? nullable;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 361718855)) % 11U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 1518500545 ^ 1921248624;
            continue;
          case 2:
            num1 = (int) num2 * 90592932 ^ -1205399157;
            continue;
          case 3:
            int num3 = flag2 ? 2012193634 : (num3 = 1918595924);
            num1 = num3 ^ (int) num2 * 276758481;
            continue;
          case 4:
            num1 = (int) num2 * 475629547 ^ -1903237319;
            continue;
          case 5:
            flag2 = nullable.GetValueOrDefault() == flag1 & nullable.HasValue;
            num1 = (int) num2 * 1400551604 ^ -800609358;
            continue;
          case 6:
            this._openFileService.Filter = \u003CModule\u003E.\u200C‍⁯​‫⁪‏⁭‫⁪‫‮‭‫‮‌‮⁮‭​‎⁬‬‌⁫‭‫‏⁮‍⁮‍‪‏⁬⁮‎‮⁮⁬‮<string>(807880950U);
            num1 = (int) num2 * 1499948128 ^ 1947923014;
            continue;
          case 7:
            this.OpenExcelSheet(this._openFileService.FileName);
            num1 = (int) num2 * -2078589340 ^ 966620185;
            continue;
          case 8:
            nullable = this._openFileService.ShowDialog();
            flag1 = true;
            num1 = (int) num2 * -185612664 ^ -1146190326;
            continue;
          case 9:
            goto label_3;
          case 10:
            num1 = (int) num2 * -1801693680 ^ -2075666448;
            continue;
          default:
            goto label_13;
        }
      }
label_3:
      return;
label_13:;
    }

    private void OpenExcelSheet(string filename)
    {
      this._excelDataSet = this._excelImporter.GetCellValues(filename);
      this._columnReducer.ReduceToColumnsWithDoubleValues(this._excelDataSet);
label_1:
      int num1 = -1414475975;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -919205973)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * 1952505960 ^ -1485274740;
            continue;
          case 3:
            this.Expando = (object) this._dynamicListGenerator.CreateDynamicData(this._excelDataSet);
            num1 = (int) num2 * 1446804868 ^ 1011355346;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public event EventHandler<ShowDialogEventArgs> DialogRequest
    {
      add
      {
        EventHandler<ShowDialogEventArgs> eventHandler1 = this.DialogRequest;
label_1:
        int num1 = -916316966;
        EventHandler<ShowDialogEventArgs> comparand;
        EventHandler<ShowDialogEventArgs> eventHandler2;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -935146099)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              eventHandler1 = Interlocked.CompareExchange<EventHandler<ShowDialogEventArgs>>(ref this.DialogRequest, eventHandler2, comparand);
              num1 = (int) num2 * -118485223 ^ -1136268920;
              continue;
            case 2:
              int num3 = eventHandler1 != comparand ? 350138508 : (num3 = 735142237);
              num1 = num3 ^ (int) num2 * -1161719694;
              continue;
            case 3:
              goto label_3;
            case 4:
              comparand = eventHandler1;
              eventHandler2 = (EventHandler<ShowDialogEventArgs>) MainWindowVM.\u206D⁯‪⁫‬‮⁮‮‫‫​⁯‍⁭⁯⁪⁫⁮‮‏‎‍⁫‌‪‪⁪‪​‭‌‭‌‭⁪‬‍⁪‎‏‮((Delegate) comparand, (Delegate) value);
              num1 = -900966917;
              continue;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
      remove
      {
        EventHandler<ShowDialogEventArgs> eventHandler1 = this.DialogRequest;
label_1:
        int num1 = 2135765762;
        EventHandler<ShowDialogEventArgs> comparand;
        EventHandler<ShowDialogEventArgs> eventHandler2;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1069655111)) % 6U)
          {
            case 0:
              eventHandler1 = Interlocked.CompareExchange<EventHandler<ShowDialogEventArgs>>(ref this.DialogRequest, eventHandler2, comparand);
              num1 = (int) num2 * -2101330513 ^ 2088603461;
              continue;
            case 1:
              comparand = eventHandler1;
              num1 = 153228917;
              continue;
            case 2:
              eventHandler2 = (EventHandler<ShowDialogEventArgs>) MainWindowVM.\u202B‌⁭‏⁮⁪​⁬​⁪‫‬‌‬⁬‭⁭‌⁯‏‎‏⁭‬​‎⁭⁪⁪‫‬‪⁬⁫⁯​‫‭‎‏‮((Delegate) comparand, (Delegate) value);
              num1 = (int) num2 * 245206302 ^ -366770903;
              continue;
            case 3:
              goto label_3;
            case 4:
              int num3 = eventHandler1 == comparand ? -737472532 : (num3 = -368982970);
              num1 = num3 ^ (int) num2 * 998907763;
              continue;
            case 5:
              goto label_1;
            default:
              goto label_8;
          }
        }
label_3:
        return;
label_8:;
      }
    }

    public void RaiseDialogRequested(ShowDialogEventArgs e)
    {
      EventHandler<ShowDialogEventArgs> dialogRequest = this.DialogRequest;
      bool flag = dialogRequest != null;
label_1:
      int num1 = -123588792;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -700255165)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            dialogRequest((object) this, e);
            num1 = (int) num2 * 770537553 ^ -1894987864;
            continue;
          case 2:
            goto label_3;
          case 3:
            int num3 = !flag ? -2074158317 : (num3 = -1113575064);
            num1 = num3 ^ (int) num2 * 2043124810;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public ICommand CalculateCohensCommand
    {
      get
      {
label_1:
        int num1 = 1293248942;
        ICommand calculateCohensCommand;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1052689685)) % 4U)
          {
            case 0:
              num1 = (int) num2 * -663677713 ^ 1392063992;
              continue;
            case 2:
              goto label_1;
            case 3:
              calculateCohensCommand = this._calculateCohensCommand ?? (this._calculateCohensCommand = (ICommand) new RelayCommand((Action<object>) (p => this.OnCalculateCohens()), (Predicate<object>) (p =>
              {
                if (MainWindowVM.\u003C\u003Eo__23.\u003C\u003Ep__1 == null)
                  goto label_4;
label_1:
                int num3 = 576462727;
label_2:
                while (true)
                {
                  uint num4;
                  switch ((num4 = (uint) (num3 ^ 1013560309)) % 4U)
                  {
                    case 0:
                      goto label_1;
                    case 1:
                      goto label_4;
                    case 2:
                      num3 = (int) num4 * -1275888606 ^ 1436083414;
                      continue;
                    default:
                      goto label_5;
                  }
                }
label_5:
                Func<CallSite, object, bool> target = MainWindowVM.\u003C\u003Eo__23.\u003C\u003Ep__1.Target;
                CallSite<Func<CallSite, object, bool>> p1 = MainWindowVM.\u003C\u003Eo__23.\u003C\u003Ep__1;
                if (MainWindowVM.\u003C\u003Eo__23.\u003C\u003Ep__0 == null)
                  MainWindowVM.\u003C\u003Eo__23.\u003C\u003Ep__0 = CallSite<Func<CallSite, object, object, object>>.Create(MainWindowVM.\u200E⁫‬⁫⁯‎‬‫‎‬⁮‪‍‍‫‏‌⁮‮‮⁮⁮‌‬‎‏​‮‏​⁪‮‪⁮‍⁫​‭‏‎‮(CSharpBinderFlags.None, ExpressionType.NotEqual, MainWindowVM.\u202B⁯⁬⁮⁭‌​‬⁮‫‍‏‌‎⁪‍‌‏⁪‌⁫⁫⁪⁬‪‎⁪‭‏​‎​⁯‭⁭‏‪‪⁯⁫‮(__typeref (MainWindowVM)), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    MainWindowVM.\u200B‌⁫​⁯‏⁮‎‬⁫⁫‬⁪‭‏⁮‭‏‭⁫‏‏⁮⁪⁬‪‬⁮⁮‮‌‏‪⁬​​⁬⁬⁭‮(CSharpArgumentInfoFlags.None, (string) null),
                    MainWindowVM.\u200B‌⁫​⁯‏⁮‎‬⁫⁫‬⁪‭‏⁮‭‏‭⁫‏‏⁮⁪⁬‪‬⁮⁮‮‌‏‪⁬​​⁬⁬⁭‮(CSharpArgumentInfoFlags.Constant, (string) null)
                  }));
                object obj = MainWindowVM.\u003C\u003Eo__23.\u003C\u003Ep__0.Target((CallSite) MainWindowVM.\u003C\u003Eo__23.\u003C\u003Ep__0, this.Expando, (object) null);
                return target((CallSite) p1, obj);
label_4:
                MainWindowVM.\u003C\u003Eo__23.\u003C\u003Ep__1 = CallSite<Func<CallSite, object, bool>>.Create(MainWindowVM.\u206D‍‭‭​‬‬‌‮‪⁪‎‏⁪‎⁭‍​‪‏‫‭⁪‏⁬⁮‮‫⁫‌⁪⁮⁭‪‌⁯‭⁭‭‮‮(CSharpBinderFlags.None, MainWindowVM.\u202B⁯⁬⁮⁭‌​‬⁮‫‍‏‌‎⁪‍‌‏⁪‌⁫⁫⁪⁬‪‎⁪‭‏​‎​⁯‭⁭‏‪‪⁯⁫‮(__typeref (bool)), MainWindowVM.\u202B⁯⁬⁮⁭‌​‬⁮‫‍‏‌‎⁪‍‌‏⁪‌⁫⁫⁪⁬‪‎⁪‭‏​‎​⁯‭⁭‏‪‪⁯⁫‮(__typeref (MainWindowVM))));
                num3 = 1028062194;
                goto label_2;
              })));
              num1 = 1352418713;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return calculateCohensCommand;
      }
    }

    public ICommand CalculateHedgesCommand
    {
      get
      {
label_1:
        int num1 = 5776115;
        ICommand calculateHedgesCommand;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1474374060)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 875406791 ^ 1229878857;
              continue;
            case 3:
              calculateHedgesCommand = this._calculateHedgesCommand ?? (this._calculateHedgesCommand = (ICommand) new RelayCommand((Action<object>) (p =>
              {
                this.OnCalculateHedges();
label_1:
                int num3 = 263261126;
                while (true)
                {
                  uint num4;
                  switch ((num4 = (uint) (num3 ^ 1060918168)) % 3U)
                  {
                    case 0:
                      goto label_1;
                    case 1:
                      goto label_3;
                    case 2:
                      num3 = (int) num4 * -1405936656 ^ 1367541350;
                      continue;
                    default:
                      goto label_5;
                  }
                }
label_3:
                return;
label_5:;
              }), (Predicate<object>) (p =>
              {
                if (MainWindowVM.\u003C\u003Eo__25.\u003C\u003Ep__1 == null)
                  goto label_4;
label_1:
                int num5 = -119884267;
label_2:
                while (true)
                {
                  uint num6;
                  switch ((num6 = (uint) (num5 ^ -1737682649)) % 4U)
                  {
                    case 0:
                      goto label_1;
                    case 2:
                      num5 = (int) num6 * 77446740 ^ -1589262738;
                      continue;
                    case 3:
                      goto label_4;
                    default:
                      goto label_5;
                  }
                }
label_5:
                Func<CallSite, object, bool> target = MainWindowVM.\u003C\u003Eo__25.\u003C\u003Ep__1.Target;
                CallSite<Func<CallSite, object, bool>> p1 = MainWindowVM.\u003C\u003Eo__25.\u003C\u003Ep__1;
                if (MainWindowVM.\u003C\u003Eo__25.\u003C\u003Ep__0 == null)
                  MainWindowVM.\u003C\u003Eo__25.\u003C\u003Ep__0 = CallSite<Func<CallSite, object, object, object>>.Create(MainWindowVM.\u200E⁫‬⁫⁯‎‬‫‎‬⁮‪‍‍‫‏‌⁮‮‮⁮⁮‌‬‎‏​‮‏​⁪‮‪⁮‍⁫​‭‏‎‮(CSharpBinderFlags.None, ExpressionType.NotEqual, MainWindowVM.\u202B⁯⁬⁮⁭‌​‬⁮‫‍‏‌‎⁪‍‌‏⁪‌⁫⁫⁪⁬‪‎⁪‭‏​‎​⁯‭⁭‏‪‪⁯⁫‮(__typeref (MainWindowVM)), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    MainWindowVM.\u200B‌⁫​⁯‏⁮‎‬⁫⁫‬⁪‭‏⁮‭‏‭⁫‏‏⁮⁪⁬‪‬⁮⁮‮‌‏‪⁬​​⁬⁬⁭‮(CSharpArgumentInfoFlags.None, (string) null),
                    MainWindowVM.\u200B‌⁫​⁯‏⁮‎‬⁫⁫‬⁪‭‏⁮‭‏‭⁫‏‏⁮⁪⁬‪‬⁮⁮‮‌‏‪⁬​​⁬⁬⁭‮(CSharpArgumentInfoFlags.Constant, (string) null)
                  }));
                object obj = MainWindowVM.\u003C\u003Eo__25.\u003C\u003Ep__0.Target((CallSite) MainWindowVM.\u003C\u003Eo__25.\u003C\u003Ep__0, this.Expando, (object) null);
                return target((CallSite) p1, obj);
label_4:
                MainWindowVM.\u003C\u003Eo__25.\u003C\u003Ep__1 = CallSite<Func<CallSite, object, bool>>.Create(MainWindowVM.\u206D‍‭‭​‬‬‌‮‪⁪‎‏⁪‎⁭‍​‪‏‫‭⁪‏⁬⁮‮‫⁫‌⁪⁮⁭‪‌⁯‭⁭‭‮‮(CSharpBinderFlags.None, MainWindowVM.\u202B⁯⁬⁮⁭‌​‬⁮‫‍‏‌‎⁪‍‌‏⁪‌⁫⁫⁪⁬‪‎⁪‭‏​‎​⁯‭⁭‏‪‪⁯⁫‮(__typeref (bool)), MainWindowVM.\u202B⁯⁬⁮⁭‌​‬⁮‫‍‏‌‎⁪‍‌‏⁪‌⁫⁫⁪⁬‪‎⁪‭‏​‎​⁯‭⁭‏‪‪⁯⁫‮(__typeref (MainWindowVM))));
                num5 = -45728250;
                goto label_2;
              })));
              num1 = 2067746665;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return calculateHedgesCommand;
      }
    }

    private void OnCalculateCohens()
    {
label_1:
      int num1 = -2099527004;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -719411626)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1314565257 ^ -735335294;
            continue;
          case 2:
            CohensSettings cohensSettings = new CohensSettings();
            this.ShowEffectSizeWindow((IStandard_Salesulator) new CohensCalculator(this._excelDataSet, cohensSettings), (IResultExporter) new CohensResultExporter(cohensSettings), (IEffectSizeSetupVM) new CohensSetupVM(this._excelDataSet, cohensSettings));
            num1 = (int) num2 * -1087678717 ^ 1911484881;
            continue;
          case 3:
            goto label_3;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    private void OnCalculateHedges()
    {
      HedgesSettings hedgesSettings = new HedgesSettings();
label_1:
      int num1 = -1511599949;
      HedgesCalculator Standard_Salesulator;
      HedgesResultExporter hedgesResultExporter;
      HedgesSetupVM hedgesSetupVM;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2010217342)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            hedgesSetupVM = new HedgesSetupVM(this._excelDataSet, hedgesSettings);
            num1 = (int) num2 * -1462258125 ^ 242028451;
            continue;
          case 2:
            this.ShowEffectSizeWindow((IStandard_Salesulator) Standard_Salesulator, (IResultExporter) hedgesResultExporter, (IEffectSizeSetupVM) hedgesSetupVM);
            num1 = (int) num2 * -350793546 ^ -538710430;
            continue;
          case 3:
            Standard_Salesulator = new HedgesCalculator(this._excelDataSet, hedgesSettings);
            hedgesResultExporter = new HedgesResultExporter(hedgesSettings);
            num1 = (int) num2 * 1924485741 ^ -588482168;
            continue;
          case 4:
            goto label_3;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    private void ShowEffectSizeWindow(
      IStandard_Salesulator Standard_Salesulator,
      IResultExporter resultExporter,
      IEffectSizeSetupVM hedgesSetupVM)
    {
label_1:
      int num1 = -271071508;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1030358143)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            EffectSizeVM viewModel = new EffectSizeVM(Standard_Salesulator, this._saveFileService, resultExporter, hedgesSetupVM);
            hedgesSetupVM.CalculateCommand = viewModel.CalculateCommand;
            this.RaiseDialogRequested(new ShowDialogEventArgs((ISimpleViewModel) viewModel));
            num1 = (int) num2 * -1272099425 ^ -1340393436;
            continue;
          case 2:
            num1 = (int) num2 * 418449396 ^ -394283242;
            continue;
          case 3:
            goto label_3;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    static Delegate \u206D⁯‪⁫‬‮⁮‮‫‫​⁯‍⁭⁯⁪⁫⁮‮‏‎‍⁫‌‪‪⁪‪​‭‌‭‌‭⁪‬‍⁪‎‏‮(
      [In] Delegate obj0,
      [In] Delegate obj1)
    {
      return Delegate.Combine(obj0, obj1);
    }

    static Delegate \u202B‌⁭‏⁮⁪​⁬​⁪‫‬‌‬⁬‭⁭‌⁯‏‎‏⁭‬​‎⁭⁪⁪‫‬‪⁬⁫⁯​‫‭‎‏‮(
      [In] Delegate obj0,
      [In] Delegate obj1)
    {
      return Delegate.Remove(obj0, obj1);
    }

    static Type \u202B⁯⁬⁮⁭‌​‬⁮‫‍‏‌‎⁪‍‌‏⁪‌⁫⁫⁪⁬‪‎⁪‭‏​‎​⁯‭⁭‏‪‪⁯⁫‮([In] RuntimeTypeHandle obj0) => Type.GetTypeFromHandle(obj0);

    static CallSiteBinder \u206D‍‭‭​‬‬‌‮‪⁪‎‏⁪‎⁭‍​‪‏‫‭⁪‏⁬⁮‮‫⁫‌⁪⁮⁭‪‌⁯‭⁭‭‮‮(
      [In] CSharpBinderFlags obj0,
      [In] Type obj1,
      [In] Type obj2)
    {
      return Binder.Convert(obj0, obj1, obj2);
    }

    static CSharpArgumentInfo \u200B‌⁫​⁯‏⁮‎‬⁫⁫‬⁪‭‏⁮‭‏‭⁫‏‏⁮⁪⁬‪‬⁮⁮‮‌‏‪⁬​​⁬⁬⁭‮(
      [In] CSharpArgumentInfoFlags obj0,
      [In] string obj1)
    {
      return CSharpArgumentInfo.Create(obj0, obj1);
    }

    static CallSiteBinder \u200E⁫‬⁫⁯‎‬‫‎‬⁮‪‍‍‫‏‌⁮‮‮⁮⁮‌‬‎‏​‮‏​⁪‮‪⁮‍⁫​‭‏‎‮(
      [In] CSharpBinderFlags obj0,
      [In] ExpressionType obj1,
      [In] Type obj2,
      [In] IEnumerable<CSharpArgumentInfo> obj3)
    {
      return Binder.BinaryOperation(obj0, obj1, obj2, obj3);
    }
  }
}
