// Decompiled with JetBrains decompiler
// Type: BullyBot
// Assembly: IDynamicMessageS, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 27E16815-1EE5-4D7C-AD78-EB45F6CA3CA3
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.05\Backdoor.Win32.Blakken.vqn-4ac70e6596359a19fddd3380edc192f01f7e789c9cf8dd3afa68fd5f9ef8bdb5.exe

using DefaultPackage;
using System.Collections.Generic;

public class BullyBot
{
  public static void DoTurn(PlanetWars pw)
  {
label_1:
    int num1 = -1250145709;
    Planet source;
    double num2;
    bool flag1;
    while (true)
    {
      uint num3;
      switch ((num3 = (uint) (num1 ^ -117368416)) % 8U)
      {
        case 0:
          int num4 = !flag1 ? 1809113655 : (num4 = 848580841);
          num1 = num4 ^ (int) num3 * 862747236;
          continue;
        case 1:
          num1 = (int) num3 * 1362573887 ^ 1818678754;
          continue;
        case 2:
          num2 = double.MinValue;
          num1 = (int) num3 * -666177859 ^ 61599950;
          continue;
        case 3:
          flag1 = pw.MyFleets().Count >= 1;
          num1 = (int) num3 * -125052924 ^ 183430868;
          continue;
        case 5:
          goto label_41;
        case 6:
          goto label_1;
        case 7:
          source = (Planet) null;
          num1 = -1638376118;
          continue;
        default:
          goto label_8;
      }
    }
label_41:
    return;
label_8:
    using (List<Planet>.Enumerator enumerator = pw.MyPlanets().GetEnumerator())
    {
label_14:
      int num5 = enumerator.MoveNext() ? -1867950183 : (num5 = -1863205434);
      double num6;
      bool flag2;
      Planet current;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num5 ^ -117368416)) % 10U)
        {
          case 0:
            num2 = num6;
            num5 = (int) num7 * -107126899 ^ 33580319;
            continue;
          case 1:
            goto label_14;
          case 2:
            flag2 = num6 > num2;
            num5 = (int) num7 * 1074150477 ^ -1379211696;
            continue;
          case 3:
            current = enumerator.Current;
            num5 = -1022320369;
            continue;
          case 4:
            num5 = -1242411319;
            continue;
          case 5:
            num5 = -1867950183;
            continue;
          case 7:
            source = current;
            num5 = (int) num7 * -917658691 ^ -489534719;
            continue;
          case 8:
            int num8 = flag2 ? 925436416 : (num8 = 354192034);
            num5 = num8 ^ (int) num7 * -1138989232;
            continue;
          case 9:
            num6 = (double) current.NumShips();
            num5 = (int) num7 * -2059266373 ^ -609172673;
            continue;
          default:
            goto label_21;
        }
      }
    }
label_21:
    Planet dest = (Planet) null;
label_22:
    int num9 = -1338567619;
    double num10;
    while (true)
    {
      uint num11;
      switch ((num11 = (uint) (num9 ^ -117368416)) % 4U)
      {
        case 0:
          num9 = (int) num11 * 549148629 ^ 1428722726;
          continue;
        case 1:
          num10 = double.MinValue;
          num9 = (int) num11 * 858157384 ^ 994688232;
          continue;
        case 3:
          goto label_22;
        default:
          goto label_26;
      }
    }
label_26:
    List<Planet>.Enumerator enumerator1 = pw.NotMyPlanets().GetEnumerator();
    try
    {
label_33:
      int num12 = !enumerator1.MoveNext() ? -2119106131 : (num12 = -618334757);
      bool flag3;
      Planet current;
      double num13;
      while (true)
      {
        uint num14;
        switch ((num14 = (uint) (num12 ^ -117368416)) % 9U)
        {
          case 0:
            int num15 = !flag3 ? 1351001129 : (num15 = 1319191954);
            num12 = num15 ^ (int) num14 * 1092122182;
            continue;
          case 1:
            current = enumerator1.Current;
            num12 = -1417970083;
            continue;
          case 2:
            num10 = num13;
            num12 = (int) num14 * 1497320799 ^ -1128275800;
            continue;
          case 4:
            num12 = -511763209;
            continue;
          case 5:
            goto label_33;
          case 6:
            num12 = -618334757;
            continue;
          case 7:
            dest = current;
            num12 = (int) num14 * 1344347554 ^ -908773347;
            continue;
          case 8:
            num13 = 1.0 / (double) (1 + current.NumShips());
            flag3 = num13 > num10;
            num12 = (int) num14 * 939889242 ^ -1156894322;
            continue;
          default:
            goto label_44;
        }
      }
    }
    finally
    {
      enumerator1.Dispose();
label_39:
      int num16 = -111633275;
      while (true)
      {
        uint num17;
        switch ((num17 = (uint) (num16 ^ -117368416)) % 3U)
        {
          case 0:
            goto label_39;
          case 1:
            num16 = (int) num17 * 569251469 ^ -651121573;
            continue;
          default:
            goto label_43;
        }
      }
label_43:;
    }
label_44:
    if (source == null)
      goto label_49;
label_45:
    int num18 = -1886001504;
label_46:
    bool flag4;
    while (true)
    {
      uint num19;
      switch ((num19 = (uint) (num18 ^ -117368416)) % 7U)
      {
        case 0:
          goto label_45;
        case 1:
          num18 = (int) num19 * -394632708 ^ -1605408769;
          continue;
        case 2:
          num18 = (int) num19 * 1530760490 ^ -1238729795;
          continue;
        case 3:
          int num20 = !flag4 ? -2107671252 : (num20 = -239618174);
          num18 = num20 ^ (int) num19 * -413290183;
          continue;
        case 4:
          int numShips = source.NumShips() / 2;
          pw.IssueOrder(source, dest, numShips);
          num18 = (int) num19 * 956045159 ^ 1312530722;
          continue;
        case 5:
          goto label_47;
        case 6:
          goto label_48;
        default:
          goto label_37;
      }
    }
label_47:
    return;
label_37:
    return;
label_48:
    int num21 = dest != null ? 1 : 0;
    goto label_50;
label_49:
    num21 = 0;
label_50:
    flag4 = num21 != 0;
    num18 = -1393905841;
    goto label_46;
  }
}
