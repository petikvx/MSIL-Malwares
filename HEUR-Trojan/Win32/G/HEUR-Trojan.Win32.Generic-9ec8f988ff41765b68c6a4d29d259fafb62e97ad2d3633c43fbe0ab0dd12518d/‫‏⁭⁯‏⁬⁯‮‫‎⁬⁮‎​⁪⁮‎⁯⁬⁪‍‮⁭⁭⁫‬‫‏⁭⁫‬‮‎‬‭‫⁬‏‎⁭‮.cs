// Decompiled with JetBrains decompiler
// Type: ‫‏⁭⁯‏⁬⁯‮‫‎⁬⁮‎​⁪⁮‎⁯⁬⁪‍‮⁭⁭⁫‬‫‏⁭⁫‬‮‎‬‭‫⁬‏‎⁭‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using System;
using System.Collections;

public class \u202B‏⁭⁯‏⁬⁯‮‫‎⁬⁮‎​⁪⁮‎⁯⁬⁪‍‮⁭⁭⁫‬‫‏⁭⁫‬‮‎‬‭‫⁬‏‎⁭‮ : 
  \u202E‏‫⁫‏‭‭‮‮⁭‎‭‏‮⁬‌‫⁫⁮‫⁫⁭‬‎‮‪‎⁪‍‍‌‍‬‍‍⁬‌‫⁪‬‮
{
  private static readonly byte[] \u202B‬‌​‬​‌‭‭⁬‮‏‭⁭‎‭⁪⁮⁯⁪‫‬‮‍⁫⁮‌⁮‍⁫‫‌‍‫⁯⁭‎‮‬‮ = new byte[1]
  {
    (byte) 1
  };
  private static readonly long \u206F​⁯⁪‎‭‬⁫‎‪‍​⁯‪⁬‪‍⁯‫‬‎​‏⁯‮‏⁭⁯‪⁪‪⁮‏⁯‮‌⁪‌​‬‮ = 140737488355328;
  private static readonly int \u206A‍‫⁯⁪‎‭‍‍‌‏‭​‭‬⁫‍‬‍‭⁯‭‏⁭​⁫⁫‭⁯⁮⁯⁮‪‮‬⁫‍⁮⁮‮ = 262144;
  private static readonly IDictionary \u206A‮‫‮‬⁯‫‫​‪‮‪‎‪⁭⁭⁯​‮⁫‏⁫‎⁪‍⁫⁮⁭⁬⁯‮⁮‭‏‮‭‌‎‮‮‮ = \u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u206D‬⁫‏‮‎‪‏‫⁪⁬⁭‭⁯⁯‎‫‪⁫‫⁯‌⁯​⁬‍‍⁮‪⁫‮‫‎‬‌⁮‎⁪‎‬‮();
  private readonly \u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮ \u206A‫‮‍‬​‍⁮‬‪⁭⁭⁮‭⁫⁮⁬⁬‬⁬⁯‭‭‮‏‏⁯⁬⁫‌‭‭⁫⁭‪⁯⁪​⁭⁫‮;
  private readonly \u206B‌‪‭⁮‌⁭‎⁭‎⁯​‎‭‌‪‏‭‫‮‎‪⁫⁪​⁫‏⁮‪‫​‬⁭​⁮⁬⁯⁬‍‮‮ \u200B⁯​‎‌‌‬⁬‎‭‭⁫‌⁮⁪‫⁫‪​⁬⁪‬‪⁪‍‭⁬⁮⁪⁫⁮⁪​‮⁮‎‏⁭‌‏‮;
  private readonly int \u200B‭‎⁯‮⁭⁮​‎‌​⁭‭‮⁫‪⁪⁬​‎‍‬⁯‪‌‬‭‌‍​‍‏⁯‍⁭⁯⁬⁯⁫‎‮;
  private readonly int \u206C⁭‎⁬⁮‍⁮‌​‍⁭⁪⁫‮‬‭‭‌‏‍‍‭‪‪‪‮⁯⁬‎‏‏‍⁮‮⁪⁭‌⁮‎⁯‮;
  private byte[] \u202C‮‮‬⁯⁬‭⁮⁭⁮​⁫‪⁫‭⁭⁪⁭‫‭‪‏⁫‪⁪​‮​⁬‬⁫​‎‪‮‌‎‫⁯‮;
  private byte[] \u202B​‪‫‎​‬‎‫⁮⁪‫‫‮‪‎‭⁫‏‮‫‬‬‏‪‎⁯‌‬⁬‭‎‍​⁭‎‬‌⁮‬‮;
  private long \u206E‭‬‏⁮​‮⁯⁭⁯⁫‌‌⁬‬‍⁯⁪‍‮‌⁯​‪‮‬⁬⁭​‌‭‌‮‪‏‭‌⁭‎‮;

  static \u202B‏⁭⁯‏⁬⁯‮‫‎⁬⁮‎​⁪⁮‎⁯⁬⁪‍‮⁭⁭⁫‬‫‏⁭⁫‬‮‎‬‭‫⁬‏‎⁭‮()
  {
    \u202B‏⁭⁯‏⁬⁯‮‫‎⁬⁮‎​⁪⁮‎⁯⁬⁪‍‮⁭⁭⁫‬‫‏⁭⁫‬‮‎‬‭‫⁬‏‎⁭‮.\u206A‮‫‮‬⁯‫‫​‪‮‪‎‪⁭⁭⁯​‮⁫‏⁫‎⁪‍⁫⁮⁭⁬⁯‮⁮‭‏‮‭‌‎‮‮‮.Add((object) "SHA-1", (object) 440);
    \u202B‏⁭⁯‏⁬⁯‮‫‎⁬⁮‎​⁪⁮‎⁯⁬⁪‍‮⁭⁭⁫‬‫‏⁭⁫‬‮‎‬‭‫⁬‏‎⁭‮.\u206A‮‫‮‬⁯‫‫​‪‮‪‎‪⁭⁭⁯​‮⁫‏⁫‎⁪‍⁫⁮⁭⁬⁯‮⁮‭‏‮‭‌‎‮‮‮.Add((object) "SHA-224", (object) 440);
    \u202B‏⁭⁯‏⁬⁯‮‫‎⁬⁮‎​⁪⁮‎⁯⁬⁪‍‮⁭⁭⁫‬‫‏⁭⁫‬‮‎‬‭‫⁬‏‎⁭‮.\u206A‮‫‮‬⁯‫‫​‪‮‪‎‪⁭⁭⁯​‮⁫‏⁫‎⁪‍⁫⁮⁭⁬⁯‮⁮‭‏‮‭‌‎‮‮‮.Add((object) "SHA-256", (object) 440);
    \u202B‏⁭⁯‏⁬⁯‮‫‎⁬⁮‎​⁪⁮‎⁯⁬⁪‍‮⁭⁭⁫‬‫‏⁭⁫‬‮‎‬‭‫⁬‏‎⁭‮.\u206A‮‫‮‬⁯‫‫​‪‮‪‎‪⁭⁭⁯​‮⁫‏⁫‎⁪‍⁫⁮⁭⁬⁯‮⁮‭‏‮‭‌‎‮‮‮.Add((object) "SHA-512/256", (object) 440);
    \u202B‏⁭⁯‏⁬⁯‮‫‎⁬⁮‎​⁪⁮‎⁯⁬⁪‍‮⁭⁭⁫‬‫‏⁭⁫‬‮‎‬‭‫⁬‏‎⁭‮.\u206A‮‫‮‬⁯‫‫​‪‮‪‎‪⁭⁭⁯​‮⁫‏⁫‎⁪‍⁫⁮⁭⁬⁯‮⁮‭‏‮‭‌‎‮‮‮.Add((object) "SHA-512/224", (object) 440);
    \u202B‏⁭⁯‏⁬⁯‮‫‎⁬⁮‎​⁪⁮‎⁯⁬⁪‍‮⁭⁭⁫‬‫‏⁭⁫‬‮‎‬‭‫⁬‏‎⁭‮.\u206A‮‫‮‬⁯‫‫​‪‮‪‎‪⁭⁭⁯​‮⁫‏⁫‎⁪‍⁫⁮⁭⁬⁯‮⁮‭‏‮‭‌‎‮‮‮.Add((object) "SHA-384", (object) 888);
    \u202B‏⁭⁯‏⁬⁯‮‫‎⁬⁮‎​⁪⁮‎⁯⁬⁪‍‮⁭⁭⁫‬‫‏⁭⁫‬‮‎‬‭‫⁬‏‎⁭‮.\u206A‮‫‮‬⁯‫‫​‪‮‪‎‪⁭⁭⁯​‮⁫‏⁫‎⁪‍⁫⁮⁭⁬⁯‮⁮‭‏‮‭‌‎‮‮‮.Add((object) "SHA-512", (object) 888);
  }

  public \u202B‏⁭⁯‏⁬⁯‮‫‎⁬⁮‎​⁪⁮‎⁯⁬⁪‍‮⁭⁭⁫‬‫‏⁭⁫‬‮‎‬‭‫⁬‏‎⁭‮(
    \u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮ _param1,
    int _param2,
    \u206B‌‪‭⁮‌⁭‎⁭‎⁯​‎‭‌‪‏‭‫‮‎‪⁫⁪​⁫‏⁮‪‫​‬⁭​⁮⁬⁯⁬‍‮‮ _param3,
    byte[] _param4,
    byte[] _param5)
  {
    if (_param2 > \u206F‪​⁮‭‌‭​‫⁯‬‭‎‎‏​‌‪‪⁮⁫‍‭‭​⁪​‮‌‫‪⁪‬‬‬‪‎⁯‏‭‮.\u206E‬⁪⁪‫⁯‬‏​⁭‍⁬‭‌⁮‎​‎⁭⁫‌​‮‬‭⁭⁮‮‭​‎⁮‪⁬‭⁮⁯‭​⁪‮(_param1))
      throw new ArgumentException("Requested security strength is not supported by the derivation function");
    if (_param3.\u206E⁭⁫‎‪⁭‮‫‬‍⁫‫‮‍‌⁯⁪‬⁯‭‌‭‏⁯⁬​‭‬‏⁪⁭⁪‎‫‭​⁪⁬⁪⁪‮ < _param2)
      throw new ArgumentException("Not enough entropy for security strength required");
    this.\u206A‫‮‍‬​‍⁮‬‪⁭⁭⁮‭⁫⁮⁬⁬‬⁬⁯‭‭‮‏‏⁯⁬⁫‌‭‭⁫⁭‪⁯⁪​⁭⁫‮ = _param1;
    this.\u200B⁯​‎‌‌‬⁬‎‭‭⁫‌⁮⁪‫⁫‪​⁬⁪‬‪⁪‍‭⁬⁮⁪⁫⁮⁪​‮⁮‎‏⁭‌‏‮ = _param3;
    this.\u200B‭‎⁯‮⁭⁮​‎‌​⁭‭‮⁫‪⁪⁬​‎‍‬⁯‪‌‬‭‌‍​‍‏⁯‍⁭⁯⁬⁯⁫‎‮ = _param2;
    this.\u206C⁭‎⁬⁮‍⁮‌​‍⁭⁪⁫‮‬‭‭‌‏‍‍‭‪‪‪‮⁯⁬‎‏‏‍⁮‮⁪⁭‌⁮‎⁯‮ = (int) \u202B‏⁭⁯‏⁬⁯‮‫‎⁬⁮‎​⁪⁮‎⁯⁬⁪‍‮⁭⁭⁫‬‫‏⁭⁫‬‮‎‬‭‫⁬‏‎⁭‮.\u206A‮‫‮‬⁯‫‫​‪‮‪‎‪⁭⁭⁯​‮⁫‏⁫‎⁪‍⁫⁮⁭⁬⁯‮⁮‭‏‮‭‌‎‮‮‮[(object) _param1.\u206B‪⁭‪⁮‍⁮‪⁭⁪‪​⁮‭‭⁬⁯‍‎⁮⁬‫‍‏‌⁬⁯⁯‮⁪‪‬‫⁯‬⁪‌‍‮‎‮];
    this.\u202C‮‮‬⁯⁬‭⁮⁭⁮​⁫‪⁫‭⁭⁪⁭‫‭‪‏⁫‪⁪​‮​⁬‬⁫​‎‪‮‌‎‫⁯‮ = \u206F‪​⁮‭‌‭​‫⁯‬‭‎‎‏​‌‪‪⁮⁫‍‭‭​⁪​‮‌‫‪⁪‬‬‬‪‎⁯‏‭‮.\u200B​‎‏⁫⁭​‮‍‏‍⁮‍⁮​‮⁭⁮‎‭‮‍⁪‭‮‏‌⁯‫⁯‎‫‭‌‮⁪‭​⁫‌‮(this.\u206A‫‮‍‬​‍⁮‬‪⁭⁭⁮‭⁫⁮⁬⁬‬⁬⁯‭‭‮‏‏⁯⁬⁫‌‭‭⁫⁭‪⁯⁪​⁭⁫‮, \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u202C⁫⁫‍⁪‌‫‬‌⁬⁭‫‭‮‭‎​‏⁯⁪‍‎⁬⁯⁪‬‏⁯‏⁯‌⁬⁭‪‫‏‪​‍‎‮(this.\u206B⁮‎⁫⁭⁪‪‏‌⁫‍⁭⁫‍‏‮‎‍⁯​‭⁯‭‏⁭⁪⁯⁭⁪⁯⁯⁮‌‫⁯⁭‍‪⁯⁭‮(), _param5, _param4), this.\u206C⁭‎⁬⁮‍⁮‌​‍⁭⁪⁫‮‬‭‭‌‏‍‍‭‪‪‪‮⁯⁬‎‏‏‍⁮‮⁪⁭‌⁮‎⁯‮);
    byte[] destinationArray = new byte[this.\u202C‮‮‬⁯⁬‭⁮⁭⁮​⁫‪⁫‭⁭⁪⁭‫‭‪‏⁫‪⁪​‮​⁬‬⁫​‎‪‮‌‎‫⁯‮.Length + 1];
    Array.Copy((Array) this.\u202C‮‮‬⁯⁬‭⁮⁭⁮​⁫‪⁫‭⁭⁪⁭‫‭‪‏⁫‪⁪​‮​⁬‬⁫​‎‪‮‌‎‫⁯‮, 0, (Array) destinationArray, 1, this.\u202C‮‮‬⁯⁬‭⁮⁭⁮​⁫‪⁫‭⁭⁪⁭‫‭‪‏⁫‪⁪​‮​⁬‬⁫​‎‪‮‌‎‫⁯‮.Length);
    this.\u202B​‪‫‎​‬‎‫⁮⁪‫‫‮‪‎‭⁫‏‮‫‬‬‏‪‎⁯‌‬⁬‭‎‍​⁭‎‬‌⁮‬‮ = \u206F‪​⁮‭‌‭​‫⁯‬‭‎‎‏​‌‪‪⁮⁫‍‭‭​⁪​‮‌‫‪⁪‬‬‬‪‎⁯‏‭‮.\u200B​‎‏⁫⁭​‮‍‏‍⁮‍⁮​‮⁭⁮‎‭‮‍⁪‭‮‏‌⁯‫⁯‎‫‭‌‮⁪‭​⁫‌‮(this.\u206A‫‮‍‬​‍⁮‬‪⁭⁭⁮‭⁫⁮⁬⁬‬⁬⁯‭‭‮‏‏⁯⁬⁫‌‭‭⁫⁭‪⁯⁪​⁭⁫‮, destinationArray, this.\u206C⁭‎⁬⁮‍⁮‌​‍⁭⁪⁫‮‬‭‭‌‏‍‍‭‪‪‪‮⁯⁬‎‏‏‍⁮‮⁪⁭‌⁮‎⁯‮);
    this.\u206E‭‬‏⁮​‮⁯⁭⁯⁫‌‌⁬‬‍⁯⁪‍‮‌⁯​‪‮‬⁬⁭​‌‭‌‮‪‏‭‌⁭‎‮ = 1L;
  }

  public int \u200F‏⁬⁭‬‏‭⁪‭‪‎⁬‮⁬⁬‬⁯​‍‫‮‮‏⁮‏‫⁪‮‫‪⁪​‫⁬‬⁯⁮⁭⁪‮‮ => this.\u206A‫‮‍‬​‍⁮‬‪⁭⁭⁮‭⁫⁮⁬⁬‬⁬⁯‭‭‮‏‏⁯⁬⁫‌‭‭⁫⁭‪⁯⁪​⁭⁫‮.\u202D‏‬‪⁬‪‌⁭‌​‪‍‭‮‪‫‌⁫‌​⁭‫⁭‫‍⁫⁪⁪‫‮‌⁮⁭⁪‭​‫‍‌‭‮() * 8;

  public int \u202C⁯⁫‮‭⁪‌‍​‎⁭⁮‌‍‮‍‎‍⁬‏⁫‪‎‎⁯⁮‬⁮⁪‬‭‍‎⁭‌‬⁯⁫⁬⁮‮(
    byte[] _param1,
    byte[] _param2,
    bool _param3)
  {
    int num = _param1.Length * 8;
    if (num > \u202B‏⁭⁯‏⁬⁯‮‫‎⁬⁮‎​⁪⁮‎⁯⁬⁪‍‮⁭⁭⁫‬‫‏⁭⁫‬‮‎‬‭‫⁬‏‎⁭‮.\u206A‍‫⁯⁪‎‭‍‍‌‏‭​‭‬⁫‍‬‍‭⁯‭‏⁭​⁫⁫‭⁯⁮⁯⁮‪‮‬⁫‍⁮⁮‮)
      throw new ArgumentException("Number of bits per request limited to " + \u202B‏⁭⁯‏⁬⁯‮‫‎⁬⁮‎​⁪⁮‎⁯⁬⁪‍‮⁭⁭⁫‬‫‏⁭⁫‬‮‎‬‭‫⁬‏‎⁭‮.\u206A‍‫⁯⁪‎‭‍‍‌‏‭​‭‬⁫‍‬‍‭⁯‭‏⁭​⁫⁫‭⁯⁮⁯⁮‪‮‬⁫‍⁮⁮‮.ToString(), "output");
    if (this.\u206E‭‬‏⁮​‮⁯⁭⁯⁫‌‌⁬‬‍⁯⁪‍‮‌⁯​‪‮‬⁬⁭​‌‭‌‮‪‏‭‌⁭‎‮ > \u202B‏⁭⁯‏⁬⁯‮‫‎⁬⁮‎​⁪⁮‎⁯⁬⁪‍‮⁭⁭⁫‬‫‏⁭⁫‬‮‎‬‭‫⁬‏‎⁭‮.\u206F​⁯⁪‎‭‬⁫‎‪‍​⁯‪⁬‪‍⁯‫‬‎​‏⁯‮‏⁭⁯‪⁪‪⁮‏⁯‮‌⁪‌​‬‮)
      return -1;
    if (_param3)
    {
      this.\u200B⁬⁯‮⁯‏‌‍⁫⁫⁪‫‏⁭‏⁯‫⁬⁫‪‭‍⁯⁪⁪‏⁪‏⁪​‫‎‍‮‭​‪⁭⁫‏‮(_param2);
      _param2 = (byte[]) null;
    }
    if (_param2 != null)
    {
      byte[] destinationArray = new byte[1 + this.\u202C‮‮‬⁯⁬‭⁮⁭⁮​⁫‪⁫‭⁭⁪⁭‫‭‪‏⁫‪⁪​‮​⁬‬⁫​‎‪‮‌‎‫⁯‮.Length + _param2.Length];
      destinationArray[0] = (byte) 2;
      Array.Copy((Array) this.\u202C‮‮‬⁯⁬‭⁮⁭⁮​⁫‪⁫‭⁭⁪⁭‫‭‪‏⁫‪⁪​‮​⁬‬⁫​‎‪‮‌‎‫⁯‮, 0, (Array) destinationArray, 1, this.\u202C‮‮‬⁯⁬‭⁮⁭⁮​⁫‪⁫‭⁭⁪⁭‫‭‪‏⁫‪⁪​‮​⁬‬⁫​‎‪‮‌‎‫⁯‮.Length);
      Array.Copy((Array) _param2, 0, (Array) destinationArray, 1 + this.\u202C‮‮‬⁯⁬‭⁮⁭⁮​⁫‪⁫‭⁭⁪⁭‫‭‪‏⁫‪⁪​‮​⁬‬⁫​‎‪‮‌‎‫⁯‮.Length, _param2.Length);
      this.\u200F‏‬‌⁮‏‮‪‍⁬⁭‭‏⁯‌‏‭‌⁬⁬‫⁯‮‪‍​⁮‫⁫⁭⁯‮⁯⁮‫⁫⁪⁫⁬‎‮(this.\u202C‮‮‬⁯⁬‭⁮⁭⁮​⁫‪⁫‭⁭⁪⁭‫‭‪‏⁫‪⁪​‮​⁬‬⁫​‎‪‮‌‎‫⁯‮, this.\u202C‭​‬‬⁭​‮‭​⁬⁫‬‏⁬‬⁭‏‏‍‏‮‌⁪‫‮‮⁪⁫‍‍⁫⁫⁪⁪⁬‌⁬⁬‮‮(destinationArray));
    }
    byte[] sourceArray = this.\u202B‮‮‫⁬‍‬‬⁫⁮‬⁫⁯‌⁭​‌‏⁯‏​‪‏⁬‭‬⁪⁫⁮‬‮⁪​‍⁪‫‪‪​⁪‮(this.\u202C‮‮‬⁯⁬‭⁮⁭⁮​⁫‪⁫‭⁭⁪⁭‫‭‪‏⁫‪⁪​‮​⁬‬⁫​‎‪‮‌‎‫⁯‮, num);
    byte[] destinationArray1 = new byte[this.\u202C‮‮‬⁯⁬‭⁮⁭⁮​⁫‪⁫‭⁭⁪⁭‫‭‪‏⁫‪⁪​‮​⁬‬⁫​‎‪‮‌‎‫⁯‮.Length + 1];
    Array.Copy((Array) this.\u202C‮‮‬⁯⁬‭⁮⁭⁮​⁫‪⁫‭⁭⁪⁭‫‭‪‏⁫‪⁪​‮​⁬‬⁫​‎‪‮‌‎‫⁯‮, 0, (Array) destinationArray1, 1, this.\u202C‮‮‬⁯⁬‭⁮⁭⁮​⁫‪⁫‭⁭⁪⁭‫‭‪‏⁫‪⁪​‮​⁬‬⁫​‎‪‮‌‎‫⁯‮.Length);
    destinationArray1[0] = (byte) 3;
    this.\u200F‏‬‌⁮‏‮‪‍⁬⁭‭‏⁯‌‏‭‌⁬⁬‫⁯‮‪‍​⁮‫⁫⁭⁯‮⁯⁮‫⁫⁪⁫⁬‎‮(this.\u202C‮‮‬⁯⁬‭⁮⁭⁮​⁫‪⁫‭⁭⁪⁭‫‭‪‏⁫‪⁪​‮​⁬‬⁫​‎‪‮‌‎‫⁯‮, this.\u202C‭​‬‬⁭​‮‭​⁬⁫‬‏⁬‬⁭‏‏‍‏‮‌⁪‫‮‮⁪⁫‍‍⁫⁫⁪⁪⁬‌⁬⁬‮‮(destinationArray1));
    this.\u200F‏‬‌⁮‏‮‪‍⁬⁭‭‏⁯‌‏‭‌⁬⁬‫⁯‮‪‍​⁮‫⁫⁭⁯‮⁯⁮‫⁫⁪⁫⁬‎‮(this.\u202C‮‮‬⁯⁬‭⁮⁭⁮​⁫‪⁫‭⁭⁪⁭‫‭‪‏⁫‪⁪​‮​⁬‬⁫​‎‪‮‌‎‫⁯‮, this.\u202B​‪‫‎​‬‎‫⁮⁪‫‫‮‪‎‭⁫‏‮‫‬‬‏‪‎⁯‌‬⁬‭‎‍​⁭‎‬‌⁮‬‮);
    this.\u200F‏‬‌⁮‏‮‪‍⁬⁭‭‏⁯‌‏‭‌⁬⁬‫⁯‮‪‍​⁮‫⁫⁭⁯‮⁯⁮‫⁫⁪⁫⁬‎‮(this.\u202C‮‮‬⁯⁬‭⁮⁭⁮​⁫‪⁫‭⁭⁪⁭‫‭‪‏⁫‪⁪​‮​⁬‬⁫​‎‪‮‌‎‫⁯‮, new byte[4]
    {
      (byte) (this.\u206E‭‬‏⁮​‮⁯⁭⁯⁫‌‌⁬‬‍⁯⁪‍‮‌⁯​‪‮‬⁬⁭​‌‭‌‮‪‏‭‌⁭‎‮ >> 24),
      (byte) (this.\u206E‭‬‏⁮​‮⁯⁭⁯⁫‌‌⁬‬‍⁯⁪‍‮‌⁯​‪‮‬⁬⁭​‌‭‌‮‪‏‭‌⁭‎‮ >> 16),
      (byte) (this.\u206E‭‬‏⁮​‮⁯⁭⁯⁫‌‌⁬‬‍⁯⁪‍‮‌⁯​‪‮‬⁬⁭​‌‭‌‮‪‏‭‌⁭‎‮ >> 8),
      (byte) this.\u206E‭‬‏⁮​‮⁯⁭⁯⁫‌‌⁬‬‍⁯⁪‍‮‌⁯​‪‮‬⁬⁭​‌‭‌‮‪‏‭‌⁭‎‮
    });
    ++this.\u206E‭‬‏⁮​‮⁯⁭⁯⁫‌‌⁬‬‍⁯⁪‍‮‌⁯​‪‮‬⁬⁭​‌‭‌‮‪‏‭‌⁭‎‮;
    byte[] destinationArray2 = _param1;
    int length = _param1.Length;
    Array.Copy((Array) sourceArray, 0, (Array) destinationArray2, 0, length);
    return num;
  }

  private byte[] \u206B⁮‎⁫⁭⁪‪‏‌⁫‍⁭⁫‍‏‮‎‍⁯​‭⁯‭‏⁭⁪⁯⁭⁪⁯⁯⁮‌‫⁯⁭‍‪⁯⁭‮()
  {
    byte[] numArray = this.\u200B⁯​‎‌‌‬⁬‎‭‭⁫‌⁮⁪‫⁫‪​⁬⁪‬‪⁪‍‭⁬⁮⁪⁫⁮⁪​‮⁮‎‏⁭‌‏‮.\u206B⁮‎⁫⁭⁪‪‏‌⁫‍⁭⁫‍‏‮‎‍⁯​‭⁯‭‏⁭⁪⁯⁭⁪⁯⁯⁮‌‫⁯⁭‍‪⁯⁭‮();
    if (numArray.Length >= (this.\u200B‭‎⁯‮⁭⁮​‎‌​⁭‭‮⁫‪⁪⁬​‎‍‬⁯‪‌‬‭‌‍​‍‏⁯‍⁭⁯⁬⁯⁫‎‮ + 7) / 8)
      return numArray;
    throw new InvalidOperationException("Insufficient entropy provided by entropy source");
  }

  private void \u200F‏‬‌⁮‏‮‪‍⁬⁭‭‏⁯‌‏‭‌⁬⁬‫⁯‮‪‍​⁮‫⁫⁭⁯‮⁯⁮‫⁫⁪⁫⁬‎‮(byte[] _param1, byte[] _param2)
  {
    int num1 = _param1.Length - _param2.Length;
    uint num2 = 0;
    int length = _param2.Length;
    while (--length >= 0)
    {
      uint num3 = num2 + ((uint) _param1[num1 + length] + (uint) _param2[length]);
      _param1[num1 + length] = (byte) num3;
      num2 = num3 >> 8;
    }
    int index = num1;
    while (--index >= 0)
    {
      uint num4 = num2 + (uint) _param1[index];
      _param1[index] = (byte) num4;
      num2 = num4 >> 8;
    }
  }

  public void \u200B⁬⁯‮⁯‏‌‍⁫⁫⁪‫‏⁭‏⁯‫⁬⁫‪‭‍⁯⁪⁪‏⁪‏⁪​‫‎‍‮‭​‪⁭⁫‏‮(byte[] _param1)
  {
    byte[] numArray = this.\u206B⁮‎⁫⁭⁪‪‏‌⁫‍⁭⁫‍‏‮‎‍⁯​‭⁯‭‏⁭⁪⁯⁭⁪⁯⁯⁮‌‫⁯⁭‍‪⁯⁭‮();
    this.\u202C‮‮‬⁯⁬‭⁮⁭⁮​⁫‪⁫‭⁭⁪⁭‫‭‪‏⁫‪⁪​‮​⁬‬⁫​‎‪‮‌‎‫⁯‮ = \u206F‪​⁮‭‌‭​‫⁯‬‭‎‎‏​‌‪‪⁮⁫‍‭‭​⁪​‮‌‫‪⁪‬‬‬‪‎⁯‏‭‮.\u200B​‎‏⁫⁭​‮‍‏‍⁮‍⁮​‮⁭⁮‎‭‮‍⁪‭‮‏‌⁯‫⁯‎‫‭‌‮⁪‭​⁫‌‮(this.\u206A‫‮‍‬​‍⁮‬‪⁭⁭⁮‭⁫⁮⁬⁬‬⁬⁯‭‭‮‏‏⁯⁬⁫‌‭‭⁫⁭‪⁯⁪​⁭⁫‮, \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u202C⁫⁫‍⁪‌‫‬‌⁬⁭‫‭‮‭‎​‏⁯⁪‍‎⁬⁯⁪‬‏⁯‏⁯‌⁬⁭‪‫‏‪​‍‎‮(\u202B‏⁭⁯‏⁬⁯‮‫‎⁬⁮‎​⁪⁮‎⁯⁬⁪‍‮⁭⁭⁫‬‫‏⁭⁫‬‮‎‬‭‫⁬‏‎⁭‮.\u202B‬‌​‬​‌‭‭⁬‮‏‭⁭‎‭⁪⁮⁯⁪‫‬‮‍⁫⁮‌⁮‍⁫‫‌‍‫⁯⁭‎‮‬‮, this.\u202C‮‮‬⁯⁬‭⁮⁭⁮​⁫‪⁫‭⁭⁪⁭‫‭‪‏⁫‪⁪​‮​⁬‬⁫​‎‪‮‌‎‫⁯‮, numArray, _param1), this.\u206C⁭‎⁬⁮‍⁮‌​‍⁭⁪⁫‮‬‭‭‌‏‍‍‭‪‪‪‮⁯⁬‎‏‏‍⁮‮⁪⁭‌⁮‎⁯‮);
    byte[] destinationArray = new byte[this.\u202C‮‮‬⁯⁬‭⁮⁭⁮​⁫‪⁫‭⁭⁪⁭‫‭‪‏⁫‪⁪​‮​⁬‬⁫​‎‪‮‌‎‫⁯‮.Length + 1];
    destinationArray[0] = (byte) 0;
    Array.Copy((Array) this.\u202C‮‮‬⁯⁬‭⁮⁭⁮​⁫‪⁫‭⁭⁪⁭‫‭‪‏⁫‪⁪​‮​⁬‬⁫​‎‪‮‌‎‫⁯‮, 0, (Array) destinationArray, 1, this.\u202C‮‮‬⁯⁬‭⁮⁭⁮​⁫‪⁫‭⁭⁪⁭‫‭‪‏⁫‪⁪​‮​⁬‬⁫​‎‪‮‌‎‫⁯‮.Length);
    this.\u202B​‪‫‎​‬‎‫⁮⁪‫‫‮‪‎‭⁫‏‮‫‬‬‏‪‎⁯‌‬⁬‭‎‍​⁭‎‬‌⁮‬‮ = \u206F‪​⁮‭‌‭​‫⁯‬‭‎‎‏​‌‪‪⁮⁫‍‭‭​⁪​‮‌‫‪⁪‬‬‬‪‎⁯‏‭‮.\u200B​‎‏⁫⁭​‮‍‏‍⁮‍⁮​‮⁭⁮‎‭‮‍⁪‭‮‏‌⁯‫⁯‎‫‭‌‮⁪‭​⁫‌‮(this.\u206A‫‮‍‬​‍⁮‬‪⁭⁭⁮‭⁫⁮⁬⁬‬⁬⁯‭‭‮‏‏⁯⁬⁫‌‭‭⁫⁭‪⁯⁪​⁭⁫‮, destinationArray, this.\u206C⁭‎⁬⁮‍⁮‌​‍⁭⁪⁫‮‬‭‭‌‏‍‍‭‪‪‪‮⁯⁬‎‏‏‍⁮‮⁪⁭‌⁮‎⁯‮);
    this.\u206E‭‬‏⁮​‮⁯⁭⁯⁫‌‌⁬‬‍⁯⁪‍‮‌⁯​‪‮‬⁬⁭​‌‭‌‮‪‏‭‌⁭‎‮ = 1L;
  }

  private byte[] \u202C‭​‬‬⁭​‮‭​⁬⁫‬‏⁬‬⁭‏‏‍‏‮‌⁪‫‮‮⁪⁫‍‍⁫⁫⁪⁪⁬‌⁬⁬‮‮(byte[] _param1)
  {
    byte[] numArray = new byte[this.\u206A‫‮‍‬​‍⁮‬‪⁭⁭⁮‭⁫⁮⁬⁬‬⁬⁯‭‭‮‏‏⁯⁬⁫‌‭‭⁫⁭‪⁯⁪​⁭⁫‮.\u202D‏‬‪⁬‪‌⁭‌​‪‍‭‮‪‫‌⁫‌​⁭‫⁭‫‍⁫⁪⁪‫‮‌⁮⁭⁪‭​‫‍‌‭‮()];
    this.\u206A‮⁪‌⁭‍‭‬‭‮‏‬‫‭‪⁭‭⁭⁫⁯⁭⁯‍⁭⁯‎‭‎​⁪⁬‬‍‫​⁪‮‎‌⁪‮(_param1, numArray);
    return numArray;
  }

  private void \u206A‮⁪‌⁭‍‭‬‭‮‏‬‫‭‪⁭‭⁭⁫⁯⁭⁯‍⁭⁯‎‭‎​⁪⁬‬‍‫​⁪‮‎‌⁪‮(byte[] _param1, byte[] _param2)
  {
    this.\u206A‫‮‍‬​‍⁮‬‪⁭⁭⁮‭⁫⁮⁬⁬‬⁬⁯‭‭‮‏‏⁯⁬⁫‌‭‭⁫⁭‪⁯⁪​⁭⁫‮.\u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(_param1, 0, _param1.Length);
    this.\u206A‫‮‍‬​‍⁮‬‪⁭⁭⁮‭⁫⁮⁬⁬‬⁬⁯‭‭‮‏‏⁯⁬⁫‌‭‭⁫⁭‪⁯⁪​⁭⁫‮.\u200F‏‏‬‫​⁮‬⁫‌‌⁮⁬‏⁭‭‌⁯⁪​‍​⁮⁫‮‫⁮‌‎‪⁬⁯⁪‪⁬‫⁫⁮‪⁭‮(_param2, 0);
  }

  private byte[] \u202B‮‮‫⁬‍‬‬⁫⁮‬⁫⁯‌⁭​‌‏⁯‏​‪‏⁬‭‬⁪⁫⁮‬‮⁪​‍⁪‫‪‪​⁪‮(byte[] _param1, int _param2)
  {
    int num1 = this.\u206A‫‮‍‬​‍⁮‬‪⁭⁭⁮‭⁫⁮⁬⁬‬⁬⁯‭‭‮‏‏⁯⁬⁫‌‭‭⁫⁭‪⁯⁪​⁭⁫‮.\u202D‏‬‪⁬‪‌⁭‌​‪‍‭‮‪‫‌⁫‌​⁭‫⁭‫‍⁫⁪⁪‫‮‌⁮⁭⁪‭​‫‍‌‭‮();
    int num2 = _param2 / 8 / num1;
    byte[] destinationArray1 = new byte[_param1.Length];
    Array.Copy((Array) _param1, 0, (Array) destinationArray1, 0, _param1.Length);
    byte[] destinationArray2 = new byte[_param2 / 8];
    byte[] sourceArray = new byte[this.\u206A‫‮‍‬​‍⁮‬‪⁭⁭⁮‭⁫⁮⁬⁬‬⁬⁯‭‭‮‏‏⁯⁬⁫‌‭‭⁫⁭‪⁯⁪​⁭⁫‮.\u202D‏‬‪⁬‪‌⁭‌​‪‍‭‮‪‫‌⁫‌​⁭‫⁭‫‍⁫⁪⁪‫‮‌⁮⁭⁪‭​‫‍‌‭‮()];
    for (int index = 0; index <= num2; ++index)
    {
      this.\u206A‮⁪‌⁭‍‭‬‭‮‏‬‫‭‪⁭‭⁭⁫⁯⁭⁯‍⁭⁯‎‭‎​⁪⁬‬‍‫​⁪‮‎‌⁪‮(destinationArray1, sourceArray);
      int length = destinationArray2.Length - index * sourceArray.Length > sourceArray.Length ? sourceArray.Length : destinationArray2.Length - index * sourceArray.Length;
      Array.Copy((Array) sourceArray, 0, (Array) destinationArray2, index * sourceArray.Length, length);
      this.\u200F‏‬‌⁮‏‮‪‍⁬⁭‭‏⁯‌‏‭‌⁬⁬‫⁯‮‪‍​⁮‫⁫⁭⁯‮⁯⁮‫⁫⁪⁫⁬‎‮(destinationArray1, \u202B‏⁭⁯‏⁬⁯‮‫‎⁬⁮‎​⁪⁮‎⁯⁬⁪‍‮⁭⁭⁫‬‫‏⁭⁫‬‮‎‬‭‫⁬‏‎⁭‮.\u202B‬‌​‬​‌‭‭⁬‮‏‭⁭‎‭⁪⁮⁯⁪‫‬‮‍⁫⁮‌⁮‍⁫‫‌‍‫⁯⁭‎‮‬‮);
    }
    return destinationArray2;
  }
}
