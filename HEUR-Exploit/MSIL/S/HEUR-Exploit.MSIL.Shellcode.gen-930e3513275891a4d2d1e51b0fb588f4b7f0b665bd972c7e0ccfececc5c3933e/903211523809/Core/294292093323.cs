// Decompiled with JetBrains decompiler
// Type: 903211523809.Core.294292093323
// Assembly: 903211523809, Version=16.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: 9299602E-5CAC-472E-8784-954A0E70F0DC
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-930e3513275891a4d2d1e51b0fb588f4b7f0b665bd972c7e0ccfececc5c3933e.exe

using \u003903211523809.Core;
using \u003903211523809.Models;
using \u003903211523809.Utils;
using Microsoft.Win32.TaskScheduler;
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Drawing.Text;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Windows.Forms;

namespace \u003903211523809.Core
{
  public class \u003294292093323 : IDisposable
  {
    private const int \u003368723969597 = 130;
    private const int \u003755818342616 = 15;
    private const string \u003805179670151 = "31";
    private const int \u003183065900896 = 70;
    private const int \u003830383490582 = 20;
    private readonly int \u003130405439517;
    private readonly Graphics \u003980224246778;
    private readonly Image \u003416130128304;
    private readonly int \u003886984056418;
    private readonly int \u003241781189624;
    private Color \u003632375719851;
    private bool \u003132018766812;
    private Color \u003986425108175;
    private Color \u003175635312477;
    private int \u003737109626387;
    private int \u003314976005551;
    private int \u003971175851557;
    private IList<Point> \u003636477620667;
    private int \u003947574952201;
    internal static readonly long \u003714231897514;

    public string \u003069328377734 { set; get; }

    public int \u003035875791855 { set; get; }

    public string \u003731249217037 { set; get; }

    public int \u003532464691381 { set; get; }

    public string \u003659859173533 { set; get; }

    public IList<\u003633496981392> \u003083334157736 { set; get; }

    public int \u003259416888129 { set; get; }

    public bool \u003186663094112 { set; get; }

    public Color \u003698332164509 { set; get; }

    public bool \u003077886729885 { set; get; }

    public void \u003715783651734()
    {
      this.Dispose(true);
      GC.SuppressFinalize((object) this);
    }

    public Image \u003116978438842()
    {
      this.\u003317417193091();
      this.\u003913372321231();
      this.\u003265850529087();
      this.\u003636477620667 = (IList<Point>) this.\u003620686675868();
      this.\u003632008529249();
      this.\u003986972879359();
      this.\u003843721173793();
      return this.\u003416130128304;
    }

    protected virtual void Dispose(bool disposeManagedResources)
    {
      if (this.\u003132018766812 || !disposeManagedResources)
        return;
      this.\u003980224246778?.Dispose();
      this.\u003132018766812 = true;
    }

    private List<Point> \u003620686675868()
    {
      List<Point> pointList = new List<Point>();
      for (int index1 = 0; index1 < 7; ++index1)
      {
        for (int index2 = 0; index2 < 7; ++index2)
        {
          Point point = new Point(this.\u003737109626387 + index2 * this.\u003971175851557, this.\u003947574952201 + index1 * this.\u003314976005551);
          pointList.Add(point);
        }
      }
      return pointList;
    }

    private void \u003986972879359()
    {
      List<\u003633496981392> objList = new List<\u003633496981392>();
      int num1 = \u003127619052675.\u003958648889795(this.\u003241781189624, this.\u003886984056418);
      int num2 = this.\u003886984056418 <= 6 ? 31 : 30;
      if (this.\u003886984056418 - 1 == 11)
        num2 = \u003538166080728.\u003270625479908(this.\u003241781189624) ? 30 : 29;
      int num3 = 1;
      int num4 = num1 + 1;
      foreach (Point point in this.\u003636477620667.Skip<Point>(7).Take<Point>(7 - num1).Reverse<Point>().ToList<Point>())
      {
        this.\u003993418403165(num3, num4, point, (IList<\u003633496981392>) objList);
        ++num4;
        ++num3;
      }
      List<Point> list = this.\u003636477620667.Skip<Point>(14).ToList<Point>();
      int count = 0;
      Point point1 = new Point(this.\u003737109626387, this.\u003947574952201 + 7 * this.\u003314976005551);
      while (num3 <= num2)
      {
        IEnumerable<Point> points = list.Skip<Point>(count).Take<Point>(7).Reverse<Point>();
        int num5 = 1;
        foreach (Point point2 in points)
        {
          this.\u003993418403165(num3, num5, point2, (IList<\u003633496981392>) objList);
          ++num5;
          ++num3;
          if (num3 > num2)
          {
            point1 = point2;
            break;
          }
        }
        count += 7;
      }
      this.\u003913622848927((IList<\u003633496981392>) objList, point1);
    }

    private void \u003993418403165(
      int _param1,
      int _param2,
      Point _param3,
      IList<\u003633496981392> _param4)
    {
      Color? nullable = _param1 == this.\u003130405439517 ? new Color?(this.\u003698332164509) : new Color?();
      \u003633496981392 obj = this.\u003205354958634(_param1);
      if (obj != null)
      {
        if (_param1 != this.\u003130405439517)
          nullable = new Color?(this.\u003175635312477);
        if (this.\u003186663094112 || _param1 >= this.\u003130405439517)
        {
          obj.\u003791406076893 = this.\u003130405439517 == _param1;
          _param4.Add(obj);
        }
      }
      if (_param2 == 7 && _param1 != this.\u003130405439517)
        nullable = new Color?(this.\u003175635312477);
      string str = _param1.ToString((IFormatProvider) CultureInfo.InvariantCulture).\u003778954660712();
      this.\u003147496322323(_param3, str, this.\u003971175851557, this.\u003035875791855, nullable);
    }

    private void \u003632008529249()
    {
      for (int index = 6; index >= 0; --index)
      {
        string str = \u003864748249755.\u003973310948720[6 - index];
        this.\u003147496322323(this.\u003636477620667[index], str, this.\u003971175851557, this.\u003035875791855, \u003902205575654: true);
      }
    }

    private IEnumerable<\u003486711033987> \u003390926347453()
    {
      CultureInfo provider = new CultureInfo("ar-SA")
      {
        DateTimeFormat = {
          Calendar = (Calendar) new HijriCalendar()
        }
      };
      DateTime now = DateTime.Now;
      \u003486711033987[] objArray = new \u003486711033987[3];
      \u003486711033987 obj1 = new \u003486711033987();
      ((\u003505561967568) obj1).set_Day(this.\u003130405439517.ToString());
      obj1.\u003008312004964 = \u003367305612860.\u003347370486520[this.\u003886984056418 - 1] + " " + this.\u003241781189624.ToString((IFormatProvider) CultureInfo.InvariantCulture).\u003778954660712();
      objArray[0] = obj1;
      \u003486711033987 obj2 = new \u003486711033987();
      ((\u003505561967568) obj2).set_Day(string.Format("{0}", (object) int.Parse(now.ToString("dd", (IFormatProvider) provider))));
      obj2.\u003008312004964 = now.ToString("MMMM yyyy", (IFormatProvider) provider) ?? "";
      objArray[1] = obj2;
      \u003486711033987 obj3 = new \u003486711033987();
      ((\u003505561967568) obj3).set_Day(now.Day.ToString());
      obj3.\u003008312004964 = now.ToString("yyyy, MMMM", (IFormatProvider) CultureInfo.InvariantCulture) ?? "";
      objArray[2] = obj3;
      return (IEnumerable<\u003486711033987>) objArray;
    }

    private string \u003719597347217() => Path.Combine(\u003084399638497.\u003212313026258(), "fonts", this.\u003069328377734);

    private \u003633496981392 \u003205354958634(int _param1)
    {
      // ISSUE: object of a compiler-generated type is created
      // ISSUE: variable of a compiler-generated type
      \u003294292093323.\u003949071657220 obj = (\u003294292093323.\u003949071657220) new \u003294292093323.\u003481592814997();
      // ISSUE: reference to a compiler-generated field
      ((\u003294292093323.\u003481592814997) obj).\u003798364890492 = this;
      // ISSUE: reference to a compiler-generated field
      obj.\u003042538076272 = _param1;
      // ISSUE: reference to a compiler-generated method
      return this.\u003083334157736.FirstOrDefault<\u003633496981392>(new Func<\u003633496981392, bool>(obj.\u003791929433302));
    }

    private SizeF \u003645569525825(int _param1_1)
    {
      List<SizeF> source = new List<SizeF>();
      foreach (string str in \u003864748249755.\u003973310948720)
        source.Add(this.\u003052094528688(str, this.\u003035875791855));
      source.Add(this.\u003052094528688("31", this.\u003035875791855));
      float num = source.Select<SizeF, float>((Func<SizeF, float>) (_param1_2 => _param1_2.Height)).Max();
      return new SizeF(source.Select<SizeF, float>((Func<SizeF, float>) (_param1_3 => _param1_3.Width)).Max() + (float) _param1_1, num + (float) _param1_1);
    }

    private SizeF \u003052094528688(string _param1, int _param2)
    {
      string str = this.\u003719597347217();
      return \u003689944259250.\u003845312548486(_param1, _param2, FontStyle.Regular, str);
    }

    private void \u003843721173793()
    {
      if (!this.\u003077886729885)
        return;
      using (Font font = new Font(this.\u003731249217037, (float) this.\u003532464691381, FontStyle.Regular, GraphicsUnit.Pixel))
      {
        SizeF sizeF = \u003689944259250.\u003007881431324(this.\u003659859173533, font);
        this.\u003147496322323(new Point((int) ((double) this.\u003416130128304.Width - (246.0 + (double) sizeF.Width + 5.0)), this.\u003416130128304.Height - 120), this.\u003659859173533, (int) sizeF.Width + 20, this.\u003532464691381, \u003305082462494: false, \u003880695421510: font);
      }
    }

    private void \u003265850529087()
    {
      int num1 = this.\u003314976005551 + 20;
      int num2 = this.\u003971175851557;
      int num3 = this.\u003971175851557 * 6;
      int num4 = 0;
      foreach (\u003486711033987 obj in this.\u003390926347453())
      {
        Point point = new Point(this.\u003416130128304.Width - (70 + num2), num1 + num4 * this.\u003314976005551);
        this.\u003147496322323(point, obj.\u003405167358053, num2, this.\u003259416888129, new Color?(this.\u003986425108175));
        point = new Point(this.\u003416130128304.Width - (70 + num3 + num2), num1 + num4 * this.\u003314976005551);
        this.\u003147496322323(point, obj.\u003008312004964, num3, this.\u003259416888129, new Color?(this.\u003986425108175));
        ++num4;
      }
      this.\u003947574952201 = 4 * this.\u003314976005551 + 20;
    }

    private void \u003913622848927(IList<\u003633496981392> _param1, Point _param2)
    {
      int num = 2;
      float width1 = this.\u003052094528688("31", this.\u003259416888129).Width;
      foreach (\u003633496981392 obj in (IEnumerable<\u003633496981392>) _param1)
      {
        float width2 = this.\u003052094528688(obj.\u003040891291099, this.\u003259416888129).Width;
        Point point = new Point((int) ((double) this.\u003416130128304.Width - (70.0 + (double) width1 + 5.0)), _param2.Y + num * this.\u003314976005551);
        this.\u003147496322323(point, obj.\u003075245023696.ToString(), (int) width1 + 5, this.\u003259416888129, new Color?(obj.\u003791406076893 ? this.\u003698332164509 : this.\u003175635312477));
        point = new Point((int) ((double) this.\u003416130128304.Width - (70.0 + (double) width2 + (double) width1 + 10.0)), _param2.Y + num * this.\u003314976005551);
        this.\u003147496322323(point, obj.\u003040891291099, (int) width2 + 5, this.\u003259416888129, new Color?(obj.\u003791406076893 ? this.\u003698332164509 : this.\u003175635312477));
        ++num;
      }
    }

    private void \u003147496322323(
      Point _param1,
      string _param2,
      int _param3,
      int _param4,
      Color? _param5 = null,
      bool _param6 = true,
      bool _param7 = false,
      Font _param8 = null)
    {
      int x = _param1.X;
      int y = _param1.Y;
      double num = _param8 == null ? (double) this.\u003052094528688(_param2, _param4).Height : (double) \u003689944259250.\u003007881431324(_param2, _param8).Height;
      int height = (int) num + 15;
      if (num > (double) this.\u003314976005551)
        y -= height - this.\u003314976005551;
      Color color1 = !_param5.HasValue ? this.\u003632375719851 : Color.FromArgb(110, _param5.Value);
      if (_param7)
        color1 = color1.\u003479875853668(-0.12f);
      Rectangle layoutRectangle = new Rectangle(x, y, _param3, height);
      Graphics graphics = this.\u003980224246778;
      Rectangle rectangle = layoutRectangle;
      Pen pen = new Pen(color1);
      pen.Width = 1.1f;
      Color color2 = color1;
      \u003689944259250.\u003242448308953(graphics, rectangle, 15, pen, color2);
      StringFormat format = new StringFormat()
      {
        LineAlignment = StringAlignment.Center,
        Alignment = StringAlignment.Center,
        FormatFlags = _param6 ? StringFormatFlags.DirectionRightToLeft : StringFormatFlags.NoClip
      };
      this.\u003980224246778.TextRenderingHint = TextRenderingHint.AntiAlias;
      Color color3 = color1.\u003638264964761() < 130 ? Color.White : Color.Black;
      if (_param8 != null)
      {
        this.\u003980224246778.DrawString(_param2, _param8, (Brush) new SolidBrush(color3), (RectangleF) layoutRectangle, format);
      }
      else
      {
        using (PrivateFontCollection privateFontCollection = new PrivateFontCollection())
        {
          privateFontCollection.AddFontFile(this.\u003719597347217());
          using (FontFamily family = privateFontCollection.Families[0])
          {
            using (Font font = new Font(family, (float) _param4, FontStyle.Regular, GraphicsUnit.Pixel))
              this.\u003980224246778.DrawString(_param2, font, (Brush) new SolidBrush(color3), (RectangleF) layoutRectangle, format);
          }
        }
      }
    }

    private void \u003487968419422()
    {
      this.\u003632375719851 = this.\u003416130128304.\u003830447437018(new Rectangle(this.\u003737109626387 - 70, 0, this.\u003416130128304.Width, this.\u003416130128304.Height / 2)).\u003798013806422();
      this.\u003632375719851 = Color.FromArgb(190, this.\u003632375719851);
      while (this.\u003632375719851.\u003638264964761() >= 130)
        this.\u003632375719851 = this.\u003632375719851.\u003479875853668(-0.01f);
    }

    private void \u003913372321231()
    {
      this.\u003487968419422();
      this.\u003175635312477 = this.\u003632375719851.\u003479875853668(-0.7f);
      this.\u003986425108175 = this.\u003632375719851.\u003479875853668(-0.4f);
    }

    private void \u003317417193091()
    {
      SizeF sizeF = this.\u003645569525825(15);
      this.\u003314976005551 = (int) sizeF.Height;
      this.\u003971175851557 = (int) sizeF.Width;
      this.\u003737109626387 = this.\u003416130128304.Width - (70 + 7 * this.\u003971175851557);
    }

    public static void \u003194853507190()
    {
      try
      {
        ExecAction execAction = new ExecAction(Application.ExecutablePath, (string) null, Application.StartupPath);
        using (TaskDefinition taskDefinition = TaskService.Instance.NewTask())
        {
          int num = TaskService.Instance.HighestSupportedVersion >= new Version(1, 2) ? 1 : 0;
          taskDefinition.RegistrationInfo.Description = "903211523809 Runner";
          taskDefinition.RegistrationInfo.Author = "DNT";
          taskDefinition.Settings.Hidden = true;
          taskDefinition.Settings.Enabled = true;
          taskDefinition.Settings.DisallowStartIfOnBatteries = false;
          taskDefinition.Settings.StopIfGoingOnBatteries = false;
          if (num != 0)
          {
            taskDefinition.Settings.StartWhenAvailable = true;
            taskDefinition.Settings.MultipleInstances = (TaskInstancesPolicy) 2;
          }
          TimeTrigger timeTrigger1 = \u003307619739987.\u003556725220129();
          if (num == 0)
            ((Trigger) timeTrigger1).Repetition.Duration = TimeSpan.FromHours(1.1);
          taskDefinition.Triggers.Add((Trigger) timeTrigger1);
          TimeTrigger timeTrigger2 = \u003307619739987.\u003147519970007();
          if (num == 0)
            ((Trigger) timeTrigger2).Repetition.Duration = TimeSpan.FromHours(1.1);
          taskDefinition.Triggers.Add((Trigger) timeTrigger2);
          taskDefinition.Actions.Add((Action) execAction);
          TaskService.Instance.RootFolder.RegisterTaskDefinition("903211523809 Runner", taskDefinition, (TaskCreation) 6, (string) null, (string) null, (TaskLogonType) 3, (string) null);
        }
        Console.WriteLine("`903211523809 Runner` task has been added.");
      }
      catch (Exception ex)
      {
        ex.\u003602950046893();
      }
    }
  }
}
