// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: IOExcepti, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 72674A88-3F84-4927-9D84-82118D6CBF01
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-49811dca565bead069108819f9ad132a2214364381f97dcf7f0f439614cc8ff4.exe

using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = -2038268516;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1716829548)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 379467971 ^ -937005258;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 636284001;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1418542107)) % 4U)
          {
            case 1:
              num1 = (int) num2 * 1414843963 ^ -284434840;
              continue;
            case 2:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 2013230317 ^ -359438292;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual string Value
    {
      get
      {
label_1:
        int num1 = 260300699;
        string str;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1511799370)) % 3U)
          {
            case 1:
              str = "";
              num1 = (int) num2 * 1066979897 ^ 27820194;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return str;
      }
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
label_1:
        int num1 = -1816006621;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -476579)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -1342605896 ^ -800078870;
              continue;
            case 2:
              count = 0;
              num1 = (int) num2 * -90749456 ^ 1835548680;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem) => this.Add("", aItem);

    public virtual JSONNode Remove(string aKey)
    {
label_1:
      int num1 = -1104547305;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1428733782)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * -281577342 ^ 68134371;
            continue;
          case 3:
            num1 = (int) num2 * 1843068982 ^ 2038484826;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual JSONNode Remove(int aIndex) => (JSONNode) null;

    public virtual JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = 692786234;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 616995675)) % 3U)
        {
          case 1:
            jsonNode = aNode;
            num1 = (int) num2 * -37661042 ^ 1986434464;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONNode.\u003Cget_Childs\u003Ed__17 getChildsD17 = new JSONNode.\u003Cget_Childs\u003Ed__17(-2);
label_1:
        int num1 = 278589826;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1630855783)) % 4U)
          {
            case 1:
              getChildsD17.\u003C\u003E4__this = this;
              num1 = (int) num2 * -1145919018 ^ 120747987;
              continue;
            case 2:
              childs = (IEnumerable<JSONNode>) getChildsD17;
              num1 = (int) num2 * 239934247 ^ -70760803;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return childs;
      }
    }

    public IEnumerable<JSONNode> DeepChilds => (IEnumerable<JSONNode>) new JSONNode.\u003Cget_DeepChilds\u003Ed__19(-2)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString()
    {
      string str = nameof (JSONNode);
label_1:
      int num1 = -1628215837;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1209309347)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -1230151809 ^ -451138720;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual string ToString(string aPrefix)
    {
      string str = nameof (JSONNode);
label_1:
      int num1 = -1128933627;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -155085154)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -638160849 ^ 869122785;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual int AsInt
    {
      get
      {
label_1:
        int num1 = 396491718;
        int asInt;
        bool flag;
        int result;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 64813763)) % 6U)
          {
            case 1:
              result = 0;
              flag = int.TryParse(this.Value, out result);
              num1 = (int) num2 * 529755658 ^ -862699218;
              continue;
            case 2:
              asInt = result;
              num1 = (int) num2 * -137278238 ^ 1824469793;
              continue;
            case 3:
              int num3 = flag ? 278460115 : (num3 = 1319472088);
              num1 = num3 ^ (int) num2 * 206393142;
              continue;
            case 4:
              goto label_1;
            case 5:
              asInt = 0;
              num1 = 721156565;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asInt;
      }
      set => this.Value = value.ToString();
    }

    public virtual float AsFloat
    {
      get
      {
label_1:
        int num1 = 1265815869;
        float asFloat;
        float result;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1273553561)) % 9U)
          {
            case 0:
              num1 = (int) num2 * -382911482 ^ 140398118;
              continue;
            case 1:
              flag = float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u206B‬⁪‌‎‌‍‮⁯⁮‏‪⁬​⁭‎⁯‫​‍⁭‏⁯‎‫‬‌⁬‎‪‮‏⁫⁪​‌‌‪‌‌‮(), out result);
              num1 = (int) num2 * -230607771 ^ -1577276796;
              continue;
            case 2:
              int num3 = flag ? -1868181202 : (num3 = -212010922);
              num1 = num3 ^ (int) num2 * 479700153;
              continue;
            case 4:
              asFloat = result;
              num1 = (int) num2 * 1058268670 ^ -538593264;
              continue;
            case 5:
              goto label_1;
            case 6:
              result = 0.0f;
              num1 = (int) num2 * 1077610403 ^ -709711792;
              continue;
            case 7:
              asFloat = 0.0f;
              num1 = 362533112;
              continue;
            case 8:
              num1 = (int) num2 * 1315625430 ^ 1936699074;
              continue;
            default:
              goto label_10;
          }
        }
label_10:
        return asFloat;
      }
      set
      {
        this.Value = value.ToString();
label_1:
        int num1 = 2003869827;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1487541196)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -2072134633 ^ 2129194439;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual double AsDouble
    {
      get
      {
label_1:
        int num1 = -1883727965;
        double result;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1417256322)) % 7U)
          {
            case 0:
              num1 = (int) num2 * -1361727170 ^ 21950067;
              continue;
            case 1:
              asDouble = result;
              num1 = (int) num2 * 803251297 ^ 1664757897;
              continue;
            case 2:
              num1 = (int) num2 * -1127190713 ^ -2094942418;
              continue;
            case 3:
              result = 0.0;
              int num3 = double.TryParse(this.Value, out result) ? 93174603 : (num3 = 1987925087);
              num1 = num3 ^ (int) num2 * -1621287007;
              continue;
            case 4:
              asDouble = 0.0;
              num1 = -603172016;
              continue;
            case 5:
              goto label_1;
            default:
              goto label_8;
          }
        }
label_8:
        return asDouble;
      }
      set => this.Value = value.ToString();
    }

    public virtual bool AsBool
    {
      get
      {
        bool result = false;
        bool flag = bool.TryParse(this.Value, out result);
label_1:
        int num1 = -1500438980;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -213769524)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 910786904 ^ 131150489;
              continue;
            case 2:
              int num3 = !flag ? -2123336390 : (num3 = -830970461);
              num1 = num3 ^ (int) num2 * 1483214168;
              continue;
            case 3:
              asBool = result;
              num1 = (int) num2 * 2001408069 ^ -300627922;
              continue;
            case 4:
              asBool = !JSONNode.\u200F⁮‬‬⁪​‫‮​​‍‏⁯‫‭‏‍‌‮‬‭⁭⁪‬‎⁮‪‫‎‪⁬⁯‏​⁯‏​‎⁮‫‮(this.Value);
              num1 = -1778945407;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asBool;
      }
      set
      {
label_1:
        int num1 = -1147807507;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -927230314)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              num1 = (int) num2 * 13121829 ^ 1122462985;
              continue;
            case 3:
              this.Value = value ? "true" : "false";
              num1 = -1517632760;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public virtual JSONArray AsArray
    {
      get
      {
        JSONArray asArray = this as JSONArray;
label_1:
        int num1 = -556816487;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1642483045)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -1804171220 ^ 194662688;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asArray;
      }
    }

    public virtual JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = -246845751;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1492586894)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              asObject = this as JSONClass;
              num1 = (int) num2 * -1586228955 ^ 530814102;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s)
    {
label_1:
      int num1 = -940681438;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -332123821)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            jsonNode = (JSONNode) new JSONData(s);
            num1 = (int) num2 * 420974701 ^ 90609749;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public static implicit operator string(JSONNode d)
    {
label_1:
      int num1 = -1527507049;
      string str1;
      while (true)
      {
        uint num2;
        string str2;
        switch ((num2 = (uint) (num1 ^ -1154845724)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            str2 = d.Value;
            break;
          case 3:
            if (!(d == (object) null))
            {
              num1 = (int) num2 * 113761311 ^ 957313168;
              continue;
            }
            str2 = (string) null;
            break;
          default:
            goto label_8;
        }
        str1 = str2;
        num1 = -1452298050;
      }
label_8:
      return str1;
    }

    public static bool operator ==(JSONNode a, object b)
    {
      if (b != null)
        goto label_6;
label_1:
      int num1 = -424959707;
label_2:
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1089361811)) % 7U)
        {
          case 1:
            num1 = (int) num2 * 197533047 ^ 2063949747;
            continue;
          case 2:
            goto label_5;
          case 3:
            flag = true;
            num1 = (int) num2 * 1467100006 ^ 1585779766;
            continue;
          case 4:
            num1 = (int) num2 * -1334597208 ^ 1328158940;
            continue;
          case 5:
            flag = (object) a == b;
            num1 = -2026350718;
            continue;
          case 6:
            goto label_1;
          default:
            goto label_10;
        }
      }
label_5:
      int num3 = a is JSONLazyCreator ? 1 : 0;
      goto label_7;
label_10:
      return flag;
label_6:
      num3 = 0;
label_7:
      num1 = num3 == 0 ? -2045269740 : (num1 = -966880622);
      goto label_2;
    }

    public static bool operator !=(JSONNode a, object b) => !(a == b);

    public override bool Equals(object obj) => (object) this == obj;

    public override int GetHashCode()
    {
      int hashCode = this.\u206E⁫⁫⁯⁯‍⁪‌‪‬‬‬‮⁬⁬‪‭‌⁬⁫⁪‭‌⁬​⁯⁯‍⁭⁯‎⁫‭‍⁪‮⁭⁯‌‮();
label_1:
      int num1 = 1398145981;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1551224580)) % 3U)
        {
          case 1:
            num1 = (int) num2 * 1251426647 ^ 1531645658;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return hashCode;
    }

    internal static string Escape(string aText)
    {
      string str1 = "";
label_1:
      int num1 = 565250654;
      char ch1;
      string str2;
      string str3;
      int num2;
      char ch2;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 450702920)) % 31U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num3 * 1998436369 ^ -372482575;
            continue;
          case 2:
            num1 = (int) num3 * -1541895092 ^ -971719453;
            continue;
          case 3:
label_3:
            str1 = JSONNode.\u202D‬‪‎⁭‬‮‎‫‏‏​⁪‪‭⁪‫⁪⁫‮‎‬‭‭⁬‭‏‫​⁮‏⁭‫‪⁫‍‍‏⁫‬‮(str1, "\\n");
            num1 = 264746023;
            continue;
          case 4:
label_27:
            str1 = JSONNode.\u202D‬‪‎⁭‬‮‎‫‏‏​⁪‪‭⁪‫⁪⁫‮‎‬‭‭⁬‭‏‫​⁮‏⁭‫‪⁫‍‍‏⁫‬‮(str1, "\\r");
            num1 = 1137986272;
            continue;
          case 5:
label_25:
            str1 = JSONNode.\u202D‬‪‎⁭‬‮‎‫‏‏​⁪‪‭⁪‫⁪⁫‮‎‬‭‭⁬‭‏‫​⁮‏⁭‫‪⁫‍‍‏⁫‬‮(str1, ch2.ToString());
            num1 = 1284234784;
            continue;
          case 6:
            int num4;
            num1 = num4 = ch1 != '"' ? 1412910525 : (num4 = 376125152);
            continue;
          case 7:
            num1 = (int) num3 * -32394915 ^ -1351448081;
            continue;
          case 8:
label_13:
            str1 = JSONNode.\u202D‬‪‎⁭‬‮‎‫‏‏​⁪‪‭⁪‫⁪⁫‮‎‬‭‭⁬‭‏‫​⁮‏⁭‫‪⁫‍‍‏⁫‬‮(str1, "\\b");
            num1 = 694318325;
            continue;
          case 9:
            int num5;
            num1 = num5 = num2 < JSONNode.\u200E‏‍​⁫‎‭‫⁬⁮‎‭‌⁪‭‎​‏‏‏‫‫⁭‎⁯⁭⁫⁭‍⁮​⁭⁬⁯⁬⁮⁪⁯⁫⁯‮(str3) ? 963353037 : (num5 = 703041203);
            continue;
          case 10:
            ch2 = JSONNode.\u206A‪⁫‬⁬‎‫⁪‬‬‌‬‬‎⁪⁭‪‭⁯⁫‪​‏‎⁯‫‬‭‫⁬⁮‎‬‎⁮‭⁫‏‫‮‮(str3, num2);
            num1 = 1040366899;
            continue;
          case 11:
            num1 = (int) num3 * -489516385 ^ -2063237260;
            continue;
          case 12:
            num1 = (int) num3 * -278228993 ^ 1634582948;
            continue;
          case 13:
            num1 = (int) num3 * 983223639 ^ 77513411;
            continue;
          case 14:
            str2 = str1;
            num1 = (int) num3 * -760761554 ^ 129504697;
            continue;
          case 15:
            switch (ch1)
            {
              case '\b':
                goto label_13;
              case '\t':
                goto label_20;
              case '\n':
                goto label_3;
              case '\v':
                goto label_25;
              case '\f':
                goto label_24;
              case '\r':
                goto label_27;
              default:
                num1 = (int) num3 * 1607372742 ^ -1934400502;
                continue;
            }
          case 16:
            int num6;
            num1 = num6 = ch1 != '\\' ? 1700278277 : (num6 = 468355125);
            continue;
          case 17:
            str1 = JSONNode.\u202D‬‪‎⁭‬‮‎‫‏‏​⁪‪‭⁪‫⁪⁫‮‎‬‭‭⁬‭‏‫​⁮‏⁭‫‪⁫‍‍‏⁫‬‮(str1, "\\\"");
            num1 = 264746023;
            continue;
          case 18:
label_20:
            str1 = JSONNode.\u202D‬‪‎⁭‬‮‎‫‏‏​⁪‪‭⁪‫⁪⁫‮‎‬‭‭⁬‭‏‫​⁮‏⁭‫‪⁫‍‍‏⁫‬‮(str1, "\\t");
            num1 = 264746023;
            continue;
          case 19:
            ch1 = ch2;
            num1 = (int) num3 * 687675253 ^ 1123554602;
            continue;
          case 20:
            ++num2;
            num1 = (int) num3 * 1465930256 ^ -1555821006;
            continue;
          case 21:
            num1 = (int) num3 * -23048415 ^ -764596041;
            continue;
          case 22:
            str3 = aText;
            num2 = 0;
            num1 = (int) num3 * 451358149 ^ -634389945;
            continue;
          case 23:
            num1 = (int) num3 * -1706177374 ^ 627582583;
            continue;
          case 24:
label_24:
            str1 = JSONNode.\u202D‬‪‎⁭‬‮‎‫‏‏​⁪‪‭⁪‫⁪⁫‮‎‬‭‭⁬‭‏‫​⁮‏⁭‫‪⁫‍‍‏⁫‬‮(str1, "\\f");
            num1 = 1937435864;
            continue;
          case 25:
            num1 = (int) num3 * 1681296414 ^ 1748776547;
            continue;
          case 26:
            num1 = 461796984;
            continue;
          case 27:
            num1 = (int) num3 * 391980431 ^ -152226128;
            continue;
          case 29:
            str1 = JSONNode.\u202D‬‪‎⁭‬‮‎‫‏‏​⁪‪‭⁪‫⁪⁫‮‎‬‭‭⁬‭‏‫​⁮‏⁭‫‪⁫‍‍‏⁫‬‮(str1, "\\\\");
            num1 = 1259658302;
            continue;
          case 30:
            num1 = (int) num3 * 1075519527 ^ -1867856148;
            continue;
          default:
            goto label_33;
        }
      }
label_33:
      return str2;
    }

    public static JSONNode Parse(string aJSON)
    {
      Stack<JSONNode> jsonNodeStack = new Stack<JSONNode>();
label_1:
      int num1 = -1223048387;
      char ch1;
      bool flag1;
      JSONNode jsonNode1;
      char ch2;
      string aKey;
      int num2;
      string aItem;
      bool flag2;
      bool flag3;
      bool flag4;
      bool flag5;
      bool flag6;
      bool flag7;
      bool flag8;
      char ch3;
      bool flag9;
      bool flag10;
      bool flag11;
      char ch4;
      bool flag12;
      JSONNode jsonNode2;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -962295832)) % 152U)
        {
          case 0:
            int num4 = !flag6 ? -702634589 : (num4 = -100504912);
            num1 = num4 ^ (int) num3 * 12052436;
            continue;
          case 1:
            int num5;
            num1 = num5 = ch1 == ',' ? -233727374 : (num5 = -2035745583);
            continue;
          case 2:
            num1 = (int) num3 * -466118193 ^ -1200873201;
            continue;
          case 3:
            aKey = "";
            aItem = "";
            num1 = -399392039;
            continue;
          case 4:
            num1 = (int) num3 * 1523397009 ^ -1568256602;
            continue;
          case 5:
            flag3 = JSONNode.\u202D⁫​⁮⁪⁬⁫⁯‬⁯‮⁭‭‫‍‫‬‮‏‏⁭‫‮⁭‎⁭‌⁭‎‏⁮​⁯‬​‫‍‌‬‌‮(aKey, "");
            num1 = -1820181805;
            continue;
          case 6:
label_69:
            aItem = JSONNode.\u202D‬‪‎⁭‬‮‎‫‏‏​⁪‪‭⁪‫⁪⁫‮‎‬‭‭⁬‭‏‫​⁮‏⁭‫‪⁫‍‍‏⁫‬‮(aItem, "\r");
            num1 = -586620494;
            continue;
          case 7:
            num1 = (int) num3 * 1057092696 ^ 1653529578;
            continue;
          case 8:
            num1 = (int) num3 * -1801247188 ^ -687238218;
            continue;
          case 9:
            num1 = (int) num3 * 1837636305 ^ -926349712;
            continue;
          case 10:
            int num6 = ch1 <= ',' ? -1042292133 : (num6 = -1162375093);
            num1 = num6 ^ (int) num3 * -516670609;
            continue;
          case 11:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -338403090 ^ -227097825;
            continue;
          case 12:
            jsonNode2 = jsonNode1;
            num1 = -327333813;
            continue;
          case 13:
            int num7 = flag1 ? 728642126 : (num7 = 423770399);
            num1 = num7 ^ (int) num3 * -1691538704;
            continue;
          case 14:
            int num8;
            num1 = num8 = ch2 == 'n' ? -966502466 : (num8 = -70449236);
            continue;
          case 15:
            jsonNodeStack.Pop();
            int num9;
            num1 = num9 = !JSONNode.\u202D⁫​⁮⁪⁬⁫⁯‬⁯‮⁭‭‫‍‫‬‮‏‏⁭‫‮⁭‎⁭‌⁭‎‏⁮​⁯‬​‫‍‌‬‌‮(aItem, "") ? -640777137 : (num9 = -1441114373);
            continue;
          case 16:
            goto label_1;
          case 17:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -537118805 ^ -1898208990;
            continue;
          case 18:
            int num10 = ch1 != ':' ? 1214009694 : (num10 = 840778060);
            num1 = num10 ^ (int) num3 * -1469000730;
            continue;
          case 19:
            num1 = (int) num3 * 1282069256 ^ 1698787135;
            continue;
          case 20:
            num1 = (int) num3 * 261412026 ^ 834035739;
            continue;
          case 21:
            int num11;
            num1 = num11 = num2 >= JSONNode.\u200E‏‍​⁫‎‭‫⁬⁮‎‭‌⁪‭‎​‏‏‏‫‫⁭‎⁯⁭⁫⁭‍⁮​⁭⁬⁯⁬⁮⁪⁯⁫⁯‮(aJSON) ? -751978348 : (num11 = -1533150402);
            continue;
          case 22:
            goto label_141;
          case 23:
            num1 = (int) num3 * 225876585 ^ -1723820167;
            continue;
          case 24:
            num1 = (int) num3 * -84539829 ^ 1496320785;
            continue;
          case 25:
label_70:
            flag8 = flag4;
            num1 = -1046810457;
            continue;
          case 26:
            aItem = JSONNode.\u202D‬‪‎⁭‬‮‎‫‏‏​⁪‪‭⁪‫⁪⁫‮‎‬‭‭⁬‭‏‫​⁮‏⁭‫‪⁫‍‍‏⁫‬‮(aItem, JSONNode.\u206A‪⁫‬⁬‎‫⁪‬‬‌‬‬‎⁪⁭‪‭⁯⁫‪​‏‎⁯‫‬‭‫⁬⁮‎‬‎⁮‭⁫‏‫‮‮(aJSON, num2).ToString());
            num1 = (int) num3 * 1910419164 ^ 530780476;
            continue;
          case 27:
            aKey = JSONNode.\u206B‬⁬⁪⁭‌‭​‍‬‮​‬⁯‪‪‮‍⁪‌‌​‬‭‮⁯⁮⁪‌⁪‌⁮⁪​‫⁬​‫‎⁬‮(aKey);
            num1 = (int) num3 * -259486244 ^ 2106186451;
            continue;
          case 28:
            aKey = "";
            aItem = "";
            num1 = -273483615;
            continue;
          case 29:
            int num12;
            num1 = num12 = ch1 != ' ' ? -44450950 : (num12 = -2091717553);
            continue;
          case 30:
            aItem = JSONNode.\u202D‬‪‎⁭‬‮‎‫‏‏​⁪‪‭⁪‫⁪⁫‮‎‬‭‭⁬‭‏‫​⁮‏⁭‫‪⁫‍‍‏⁫‬‮(aItem, "\n");
            num1 = -1725430846;
            continue;
          case 31:
label_88:
            int num13;
            num1 = num13 = !flag4 ? -871502684 : (num13 = -391036894);
            continue;
          case 32:
            int num14;
            num1 = num14 = flag4 ? -113152748 : (num14 = -1953055928);
            continue;
          case 33:
            flag10 = flag4;
            num1 = -1793017713;
            continue;
          case 34:
            flag12 = jsonNode1 != (object) null;
            num1 = (int) num3 * 528307652 ^ -1232438250;
            continue;
          case 35:
            ch1 = ch3;
            num1 = (int) num3 * -1779956215 ^ 204268201;
            continue;
          case 36:
            aKey = "";
            num1 = (int) num3 * 186694119 ^ 1052341493;
            continue;
          case 37:
            num1 = (int) num3 * 2146501485 ^ -357456496;
            continue;
          case 38:
            num1 = -581506573;
            continue;
          case 39:
            num1 = (int) num3 * 1383256124 ^ 90513253;
            continue;
          case 40:
            num1 = (int) num3 * -25029850 ^ 540635214;
            continue;
          case 41:
            num1 = (int) num3 * 699930356 ^ 1631314551;
            continue;
          case 42:
            int num15 = flag5 ? -1484146786 : (num15 = -1518850914);
            num1 = num15 ^ (int) num3 * 1096654249;
            continue;
          case 43:
            flag9 = JSONNode.\u202D⁫​⁮⁪⁬⁫⁯‬⁯‮⁭‭‫‍‫‬‮‏‏⁭‫‮⁭‎⁭‌⁭‎‏⁮​⁯‬​‫‍‌‬‌‮(aItem, "");
            num1 = -334757187;
            continue;
          case 44:
            num1 = (int) num3 * -1448016795 ^ -1220779119;
            continue;
          case 45:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -198300007 ^ -890906902;
            continue;
          case 46:
            num1 = (int) num3 * 323825440 ^ 729863382;
            continue;
          case 47:
label_138:
            aItem = JSONNode.\u202D‬‪‎⁭‬‮‎‫‏‏​⁪‪‭⁪‫⁪⁫‮‎‬‭‭⁬‭‏‫​⁮‏⁭‫‪⁫‍‍‏⁫‬‮(aItem, ch4.ToString());
            num1 = -1725430846;
            continue;
          case 48:
            switch (ch1)
            {
              case '\t':
                goto label_88;
              case '\n':
              case '\r':
                goto label_23;
              case '\v':
              case '\f':
                goto label_75;
              default:
                num1 = (int) num3 * 455764087 ^ 924905236;
                continue;
            }
          case 49:
            aItem = JSONNode.\u202D‬‪‎⁭‬‮‎‫‏‏​⁪‪‭⁪‫⁪⁫‮‎‬‭‭⁬‭‏‫​⁮‏⁭‫‪⁫‍‍‏⁫‬‮(aItem, JSONNode.\u206A‪⁫‬⁬‎‫⁪‬‬‌‬‬‎⁪⁭‪‭⁯⁫‪​‏‎⁯‫‬‭‫⁬⁮‎‬‎⁮‭⁫‏‫‮‮(aJSON, num2).ToString());
            num1 = (int) num3 * 684326563 ^ 1388944492;
            continue;
          case 50:
            int num16;
            num1 = num16 = !flag4 ? -1623074189 : (num16 = -1605350496);
            continue;
          case 51:
            num1 = (int) num3 * -743720094 ^ 2138370169;
            continue;
          case 52:
            flag2 = JSONNode.\u202D⁫​⁮⁪⁬⁫⁯‬⁯‮⁭‭‫‍‫‬‮‏‏⁭‫‮⁭‎⁭‌⁭‎‏⁮​⁯‬​‫‍‌‬‌‮(aKey, "");
            num1 = -872070470;
            continue;
          case 53:
            jsonNode1 = (JSONNode) null;
            num2 = 0;
            num1 = (int) num3 * 1437476136 ^ 683490735;
            continue;
          case 54:
            num1 = (int) num3 * -643731166 ^ 1757022062;
            continue;
          case 55:
            aKey = JSONNode.\u206B‬⁬⁪⁭‌‭​‍‬‮​‬⁯‪‪‮‍⁪‌‌​‬‭‮⁯⁮⁪‌⁪‌⁮⁪​‫⁬​‫‎⁬‮(aKey);
            flag5 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 811678115 ^ 1278792215;
            continue;
          case 56:
            aKey = JSONNode.\u206B‬⁬⁪⁭‌‭​‍‬‮​‬⁯‪‪‮‍⁪‌‌​‬‭‮⁯⁮⁪‌⁪‌⁮⁪​‫⁬​‫‎⁬‮(aKey);
            num1 = (int) num3 * 536982819 ^ 1037812864;
            continue;
          case 57:
            num1 = (int) num3 * 1313189789 ^ -1955122570;
            continue;
          case 59:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num1 = -1745766029;
            continue;
          case 60:
            flag7 = flag4;
            num1 = (int) num3 * 154175394 ^ -2142109148;
            continue;
          case 61:
            string s = JSONNode.\u202E‎‬‮‮⁬‍‍‫⁮‮⁮⁫‬⁯⁯⁮‍⁪‎​‌​​‍‭‫‭⁪⁮‎‍⁫⁫⁮⁯‫⁭‪⁭‮(aJSON, num2 + 1, 4);
            aItem = JSONNode.\u202D‬‪‎⁭‬‮‎‫‏‏​⁪‪‭⁪‫⁪⁫‮‎‬‭‭⁬‭‏‫​⁮‏⁭‫‪⁫‍‍‏⁫‬‮(aItem, ((char) int.Parse(s, NumberStyles.AllowHexSpecifier)).ToString());
            num2 += 4;
            num1 = (int) num3 * 703904736 ^ 2041875372;
            continue;
          case 62:
            aItem = "";
            flag6 = jsonNodeStack.Count > 0;
            num1 = (int) num3 * -1523964687 ^ 955848830;
            continue;
          case 63:
            int num17 = !(jsonNode1 is JSONArray) ? -501251768 : (num17 = -1496446594);
            num1 = num17 ^ (int) num3 * 1199397435;
            continue;
          case 64:
            aKey = aItem;
            num1 = -1226385344;
            continue;
          case 65:
            num1 = (int) num3 * -2003539175 ^ 1546856744;
            continue;
          case 66:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -2024667578 ^ 1725898637;
            continue;
          case 67:
            aItem = JSONNode.\u202D‬‪‎⁭‬‮‎‫‏‏​⁪‪‭⁪‫⁪⁫‮‎‬‭‭⁬‭‏‫​⁮‏⁭‫‪⁫‍‍‏⁫‬‮(aItem, "\f");
            num1 = -382793401;
            continue;
          case 68:
            aItem = JSONNode.\u202D‬‪‎⁭‬‮‎‫‏‏​⁪‪‭⁪‫⁪⁫‮‎‬‭‭⁬‭‏‫​⁮‏⁭‫‪⁫‍‍‏⁫‬‮(aItem, JSONNode.\u206A‪⁫‬⁬‎‫⁪‬‬‌‬‬‎⁪⁭‪‭⁯⁫‪​‏‎⁯‫‬‭‫⁬⁮‎‬‎⁮‭⁫‏‫‮‮(aJSON, num2).ToString());
            num1 = (int) num3 * 1449655756 ^ -1680349833;
            continue;
          case 69:
            int num18 = ch1 <= ' ' ? -593552366 : (num18 = -722379770);
            num1 = num18 ^ (int) num3 * -1538422222;
            continue;
          case 70:
            int num19 = flag4 ? 1016057460 : (num19 = 1511947928);
            num1 = num19 ^ (int) num3 * 1317246934;
            continue;
          case 71:
            flag1 = jsonNodeStack.Count == 0;
            num1 = -1608715051;
            continue;
          case 72:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -2027110427 ^ 887745499;
            continue;
          case 73:
            switch (ch1)
            {
              case '[':
                goto label_26;
              case '\\':
                goto label_129;
              case ']':
                goto label_70;
              default:
                num1 = -57179564;
                continue;
            }
          case 74:
            flag11 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -1291293040 ^ 489509787;
            continue;
          case 75:
            int num20 = flag3 ? -1794728971 : (num20 = -1165505766);
            num1 = num20 ^ (int) num3 * -465496043;
            continue;
          case 76:
label_80:
            aItem = JSONNode.\u202D‬‪‎⁭‬‮‎‫‏‏​⁪‪‭⁪‫⁪⁫‮‎‬‭‭⁬‭‏‫​⁮‏⁭‫‪⁫‍‍‏⁫‬‮(aItem, "\t");
            num1 = -1788071906;
            continue;
          case 77:
            num1 = (int) num3 * -863313229 ^ -1708220408;
            continue;
          case 78:
            ch3 = JSONNode.\u206A‪⁫‬⁬‎‫⁪‬‬‌‬‬‎⁪⁭‪‭⁯⁫‪​‏‎⁯‫‬‭‫⁬⁮‎‬‎⁮‭⁫‏‫‮‮(aJSON, num2);
            num1 = -1065657325;
            continue;
          case 79:
            num1 = (int) num3 * -2119945956 ^ 1700743109;
            continue;
          case 80:
            num1 = (int) num3 * 403763049 ^ -97601127;
            continue;
          case 81:
            int num21;
            num1 = num21 = !JSONNode.\u202D⁫​⁮⁪⁬⁫⁯‬⁯‮⁭‭‫‍‫‬‮‏‏⁭‫‮⁭‎⁭‌⁭‎‏⁮​⁯‬​‫‍‌‬‌‮(aKey, "") ? -401883114 : (num21 = -1585647058);
            continue;
          case 82:
            aItem = JSONNode.\u202D‬‪‎⁭‬‮‎‫‏‏​⁪‪‭⁪‫⁪⁫‮‎‬‭‭⁬‭‏‫​⁮‏⁭‫‪⁫‍‍‏⁫‬‮(aItem, JSONNode.\u206A‪⁫‬⁬‎‫⁪‬‬‌‬‬‎⁪⁭‪‭⁯⁫‪​‏‎⁯‫‬‭‫⁬⁮‎‬‎⁮‭⁫‏‫‮‮(aJSON, num2).ToString());
            num1 = (int) num3 * -185510662 ^ 1843630789;
            continue;
          case 83:
          case 84:
          case 92:
          case 114:
          case 145:
label_23:
            ++num2;
            num1 = -700525098;
            continue;
          case 85:
            num1 = -603341972;
            continue;
          case 86:
            num1 = (int) num3 * -898437959 ^ 1354274443;
            continue;
          case 87:
            int num22 = flag10 ? -118343698 : (num22 = -571218609);
            num1 = num22 ^ (int) num3 * 1823801298;
            continue;
          case 88:
            num1 = (int) num3 * 1686263242 ^ 1263630333;
            continue;
          case 89:
            flag4 = !flag4;
            num1 = -1956717559;
            continue;
          case 90:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -2130584258 ^ 515608247;
            continue;
          case 91:
            num1 = (int) num3 * 1242644848 ^ -730113736;
            continue;
          case 93:
            int num23;
            num1 = num23 = ch1 > ']' ? -336559394 : (num23 = -2136443558);
            continue;
          case 94:
            ch4 = JSONNode.\u206A‪⁫‬⁬‎‫⁪‬‬‌‬‬‎⁪⁭‪‭⁯⁫‪​‏‎⁯‫‬‭‫⁬⁮‎‬‎⁮‭⁫‏‫‮‮(aJSON, num2);
            num1 = (int) num3 * -1091956226 ^ 1398975322;
            continue;
          case 95:
            int num24;
            num1 = num24 = ch2 != 'f' ? -1487721812 : (num24 = -73610213);
            continue;
          case 96:
            num1 = (int) num3 * 1187680998 ^ 185968578;
            continue;
          case 97:
            num1 = (int) num3 * 988563186 ^ 2111206739;
            continue;
          case 98:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 2012593594 ^ -1296703749;
            continue;
          case 99:
            num1 = (int) num3 * 1351572269 ^ 451710421;
            continue;
          case 100:
            num1 = (int) num3 * 1700608836 ^ 1250177375;
            continue;
          case 101:
            num1 = (int) num3 * -451692122 ^ 1209121688;
            continue;
          case 102:
            goto label_101;
          case 103:
            int num25 = flag8 ? 616634264 : (num25 = 1695600319);
            num1 = num25 ^ (int) num3 * 1756288568;
            continue;
          case 104:
            aItem = "";
            num1 = (int) num3 * 1312346567 ^ 521321436;
            continue;
          case 105:
            int num26;
            num1 = num26 = !JSONNode.\u202D⁫​⁮⁪⁬⁫⁯‬⁯‮⁭‭‫‍‫‬‮‏‏⁭‫‮⁭‎⁭‌⁭‎‏⁮​⁯‬​‫‍‌‬‌‮(aKey, "") ? -1227730497 : (num26 = -2090678283);
            continue;
          case 106:
            num1 = -1016778772;
            continue;
          case 107:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 882183857 ^ -984146308;
            continue;
          case 108:
            num1 = (int) num3 * -97907978 ^ -22353067;
            continue;
          case 109:
            num1 = (int) num3 * -508847510 ^ -1052589927;
            continue;
          case 110:
            int num27 = ch2 != 'b' ? 641149977 : (num27 = 2008222118);
            num1 = num27 ^ (int) num3 * 604132902;
            continue;
          case 111:
            num1 = (int) num3 * -2023796658 ^ 582854003;
            continue;
          case 112:
label_129:
            ++num2;
            num1 = -88937914;
            continue;
          case 113:
            flag4 = false;
            num1 = (int) num3 * 2052087496 ^ -1829104371;
            continue;
          case 115:
            int num28 = !flag11 ? -1275491928 : (num28 = -814203718);
            num1 = num28 ^ (int) num3 * 1699398659;
            continue;
          case 116:
            int num29;
            num1 = num29 = ch1 != '"' ? -1380235520 : (num29 = -674773287);
            continue;
          case 117:
            int num30 = flag9 ? 1930754051 : (num30 = 2075742234);
            num1 = num30 ^ (int) num3 * -1231773115;
            continue;
          case 118:
            ch2 = ch4;
            num1 = (int) num3 * -1635508710 ^ -1290582071;
            continue;
          case 119:
            num1 = -640777137;
            continue;
          case 120:
            aItem = JSONNode.\u202D‬‪‎⁭‬‮‎‫‏‏​⁪‪‭⁪‫⁪⁫‮‎‬‭‭⁬‭‏‫​⁮‏⁭‫‪⁫‍‍‏⁫‬‮(aItem, JSONNode.\u206A‪⁫‬⁬‎‫⁪‬‬‌‬‬‎⁪⁭‪‭⁯⁫‪​‏‎⁯‫‬‭‫⁬⁮‎‬‎⁮‭⁫‏‫‮‮(aJSON, num2).ToString());
            num1 = (int) num3 * -1396854874 ^ 331456663;
            continue;
          case 121:
label_26:
            int num31;
            num1 = num31 = !flag4 ? -728645637 : (num31 = -1249055481);
            continue;
          case 122:
            num1 = (int) num3 * 445833507 ^ -903339147;
            continue;
          case 123:
            int num32;
            num1 = num32 = ch1 == '}' ? -278782799 : (num32 = -1939497623);
            continue;
          case 124:
            num1 = (int) num3 * -345694093 ^ -604401755;
            continue;
          case 125:
            switch (ch2)
            {
              case 'r':
                goto label_69;
              case 's':
                goto label_138;
              case 't':
                goto label_80;
              case 'u':
                goto label_81;
              default:
                num1 = -584845987;
                continue;
            }
          case 126:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -750563272 ^ -588157184;
            continue;
          case (uint) sbyte.MaxValue:
            aItem = JSONNode.\u202D‬‪‎⁭‬‮‎‫‏‏​⁪‪‭⁪‫⁪⁫‮‎‬‭‭⁬‭‏‫​⁮‏⁭‫‪⁫‍‍‏⁫‬‮(aItem, JSONNode.\u206A‪⁫‬⁬‎‫⁪‬‬‌‬‬‎⁪⁭‪‭⁯⁫‪​‏‎⁯‫‬‭‫⁬⁮‎‬‎⁮‭⁫‏‫‮‮(aJSON, num2).ToString());
            num1 = (int) num3 * 402828380 ^ 810400921;
            continue;
          case 128:
            num1 = (int) num3 * -760353081 ^ -1741265711;
            continue;
          case 129:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            num1 = -1088443759;
            continue;
          case 130:
            aItem = JSONNode.\u202D‬‪‎⁭‬‮‎‫‏‏​⁪‪‭⁪‫⁪⁫‮‎‬‭‭⁬‭‏‫​⁮‏⁭‫‪⁫‍‍‏⁫‬‮(aItem, "\b");
            num1 = -1725430846;
            continue;
          case 131:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * 1873375029 ^ -422914289;
            continue;
          case 132:
            int num33 = !flag7 ? -1984755056 : (num33 = -862643382);
            num1 = num33 ^ (int) num3 * 477685257;
            continue;
          case 133:
            num1 = (int) num3 * -508007225 ^ -1154611716;
            continue;
          case 134:
            num1 = -1734754500;
            continue;
          case 135:
            aItem = "";
            num1 = (int) num3 * 1750524205 ^ 1906247071;
            continue;
          case 136:
            num1 = (int) num3 * -1345490311 ^ 269190158;
            continue;
          case 137:
            int num34 = jsonNode1 != (object) null ? 286130075 : (num34 = 14537532);
            num1 = num34 ^ (int) num3 * -1211192320;
            continue;
          case 138:
            num1 = (int) num3 * 886265410 ^ 673881334;
            continue;
          case 139:
label_75:
            aItem = JSONNode.\u202D‬‪‎⁭‬‮‎‫‏‏​⁪‪‭⁪‫⁪⁫‮‎‬‭‭⁬‭‏‫​⁮‏⁭‫‪⁫‍‍‏⁫‬‮(aItem, JSONNode.\u206A‪⁫‬⁬‎‫⁪‬‬‌‬‬‎⁪⁭‪‭⁯⁫‪​‏‎⁯‫‬‭‫⁬⁮‎‬‎⁮‭⁫‏‫‮‮(aJSON, num2).ToString());
            num1 = -2052898504;
            continue;
          case 140:
            aKey = "";
            aItem = "";
            num1 = -1500566598;
            continue;
          case 141:
            int num35 = ch2 <= 'f' ? -682103920 : (num35 = -1156130968);
            num1 = num35 ^ (int) num3 * -89617826;
            continue;
          case 142:
            int num36 = !flag12 ? 1280157288 : (num36 = 563946159);
            num1 = num36 ^ (int) num3 * 436014790;
            continue;
          case 143:
            aKey = "";
            num1 = -1581566346;
            continue;
          case 144:
            int num37 = !(jsonNode1 is JSONArray) ? 602751129 : (num37 = 1742406066);
            num1 = num37 ^ (int) num3 * -638997772;
            continue;
          case 146:
            int num38 = flag2 ? 1442174841 : (num38 = 523405436);
            num1 = num38 ^ (int) num3 * -111939043;
            continue;
          case 147:
            num1 = (int) num3 * 1279860119 ^ -564958945;
            continue;
          case 148:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -950674351 ^ -881701340;
            continue;
          case 149:
label_81:
            num1 = -796310683;
            continue;
          case 150:
            int num39;
            num1 = num39 = ch1 != '{' ? -1111123147 : (num39 = -206267719);
            continue;
          case 151:
            num1 = (int) num3 * -1186553861 ^ -1061720576;
            continue;
          default:
            goto label_152;
        }
      }
label_101:
      throw JSONNode.\u200F⁫‬⁪⁫⁪⁫⁮‏‏⁯⁭⁯⁮‬‏‏‪⁫‌⁬⁪‮⁪‬⁭‪‍‌‪‎⁭⁮‫⁪‍⁬​‍⁬‮("JSON Parse: Quotation marks seems to be messed up.");
label_141:
      throw JSONNode.\u200F⁫‬⁪⁫⁪⁫⁮‏‏⁯⁭⁯⁮‬‏‏‪⁫‌⁬⁪‮⁪‬⁭‪‍‌‪‎⁭⁮‫⁪‍⁬​‍⁬‮("JSON Parse: Too many closing brackets");
label_152:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
label_1:
      int num1 = 175929353;
      BinaryWriter aWriter;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 63536961)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            aWriter = JSONNode.\u206D‌⁮⁭‬‮‎‮⁯‍‮​⁪‮‫​‬‮‫‬⁮⁫⁪⁫⁯⁪⁫⁪‭⁯‪⁭‌⁭⁭‭‌‎‌‭‮(aData);
            num1 = (int) num2 * -350159447 ^ 1445610375;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      this.Serialize(aWriter);
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u200F⁫‬⁪⁫⁪⁫⁮‏‏⁯⁭⁯⁮‬‏‏‪⁫‌⁬⁪‮⁪‬⁭‪‍‌‪‎⁭⁮‫⁪‍⁬​‍⁬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u200F⁫‬⁪⁫⁪⁫⁮‏‏⁯⁭⁯⁮‬‏‏‪⁫‌⁬⁪‮⁪‬⁭‪‍‌‪‎⁭⁮‫⁪‍⁬​‍⁬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u200F⁫‬⁪⁫⁪⁫⁮‏‏⁯⁭⁯⁮‬‏‏‪⁫‌⁬⁪‮⁪‬⁭‪‍‌‪‎⁭⁮‫⁪‍⁬​‍⁬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
label_1:
      int num1 = 353788908;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1611497071)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            JSONNode.\u200C‬‌‏⁯‫‌‏‬⁬⁯⁯⁭⁯‎⁬⁬⁬⁯⁪⁪‍⁬⁮‭⁪‮‌‫‬⁫​‬‍‍‌⁫‪⁬⁫‮(JSONNode.\u202D⁪⁯‫‫‫​⁫⁪⁯‪⁮‮‪‌‏⁫‮‭⁬‭‬⁪‌‮‬⁯‏⁮‏⁯⁭‌⁯⁬⁫⁫⁫⁪‏‮((FileSystemInfo) JSONNode.\u202E⁫‭‬⁭⁬⁯‬‎⁬⁫⁫‏‌‪⁪‌‎⁫⁭​‏⁯​‏⁬‫‫⁬‏⁯‌‭‭‮‫‏‭‪⁮‮(JSONNode.\u206F‌‫⁫‭⁯⁯⁪​⁯⁬‮⁬‏​⁪‭​‫‭‮‌⁭‭‮‎‏‍​⁯‭⁬‪‪‬⁪‬​‌‬‮(aFileName))));
            num1 = (int) num2 * -987652179 ^ -1053075130;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      FileStream aData = JSONNode.\u200D⁯‍⁪⁯⁯‫⁭‎⁮⁭‏‎⁮‫⁫​‌⁭⁬⁬‫‎‍‌‭⁭‮​​⁫⁮​⁮⁯‏‍​‬‍‮(aFileName);
      try
      {
        this.SaveToStream((Stream) aData);
label_6:
        int num3 = 833885659;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1611497071)) % 3U)
          {
            case 0:
              goto label_13;
            case 1:
              num3 = (int) num4 * -619016027 ^ -1283468368;
              continue;
            case 2:
              goto label_6;
            default:
              goto label_9;
          }
        }
label_13:
        return;
label_9:;
      }
      finally
      {
        if (aData != null)
        {
label_11:
          int num5 = 1652327042;
          while (true)
          {
            uint num6;
            switch ((num6 = (uint) (num5 ^ 1611497071)) % 4U)
            {
              case 0:
                num5 = (int) num6 * -1394645483 ^ -690606335;
                continue;
              case 1:
                JSONNode.\u202B‪‬⁮‪‎⁬⁫⁫‭‬‮⁫​⁪⁮⁭⁮‮⁮⁬‏‏‭‌‬‪‎⁫‏‍‮⁫⁪​​⁯⁫‪‮((IDisposable) aData);
                num5 = (int) num6 * -25588803 ^ 1226285558;
                continue;
              case 3:
                goto label_11;
              default:
                goto label_16;
            }
          }
        }
label_16:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u202E‍⁮⁬⁯​‏⁬⁪‮⁯⁪‬⁭‏⁮​⁮‎⁭‌⁭⁭⁯‍‮‭⁫‫⁪⁯‫‭⁯⁪⁭‌⁬‎⁭‮();
      string base64;
      try
      {
label_2:
        int num1 = 1729465947;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 419163852)) % 6U)
          {
            case 0:
              goto label_2;
            case 1:
              num1 = (int) num2 * 564692481 ^ -152695641;
              continue;
            case 2:
              base64 = JSONNode.\u200B⁭‏⁯⁪‍⁬​‭‪‪⁭‎⁭⁫‪‮‫‍‭‭⁪‌‭‌‏⁭‏⁮⁫‬⁯⁬‮‫⁭‫‬⁬⁬‮(JSONNode.\u206B⁪‍‍⁫⁬‪⁬⁫⁫‬‭‫⁮​‫⁭‭‎⁪⁪‮‬⁯​⁪‬‫⁬‏‏⁯⁫‮⁯‏⁬⁮‪‭‮(aData));
              num1 = (int) num2 * 901141499 ^ -908582332;
              continue;
            case 3:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * -73862923 ^ 915079054;
              continue;
            case 5:
              JSONNode.\u200E‏⁫⁪⁭⁬‬‎​⁯⁫‮⁭⁫‫‭‎‌⁬⁪​⁫‫​‪⁯⁪⁪‫‭‪‪‍​‭⁬⁮‌‍‫‮((Stream) aData, 0L);
              num1 = (int) num2 * -2100805391 ^ -680795466;
              continue;
            default:
              goto label_13;
          }
        }
      }
      finally
      {
        if (aData != null)
        {
label_9:
          int num3 = 1237845562;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 419163852)) % 3U)
            {
              case 0:
                goto label_9;
              case 1:
                JSONNode.\u202B‪‬⁮‪‎⁬⁫⁫‭‬‮⁫​⁪⁮⁭⁮‮⁮⁬‏‏‭‌‬‪‎⁫‏‍‮⁫⁪​​⁯⁫‪‮((IDisposable) aData);
                num3 = (int) num4 * 926518624 ^ -843228855;
                continue;
              default:
                goto label_12;
            }
          }
        }
label_12:;
      }
label_13:
      return base64;
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
      JSONBinaryTag jsonBinaryTag1 = (JSONBinaryTag) JSONNode.\u206A⁯‭‌⁬​‭‫‌⁯‪‪⁫⁯‎‏‍‏‮‍‍‮‎⁫‏​⁯‏‭‮‎‫⁭‪‮⁫‬‮​‍‮(aReader);
label_1:
      int num1 = -1793327979;
      JSONNode jsonNode;
      JSONClass jsonClass;
      string aKey;
      JSONNode aItem;
      JSONArray jsonArray;
      int num2;
      int num3;
      int num4;
      bool flag;
      JSONBinaryTag jsonBinaryTag2;
      JSONBinaryTag jsonBinaryTag3;
      int num5;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ -2133933489)) % 39U)
        {
          case 0:
            ++num4;
            num1 = (int) num6 * -2052230129 ^ 1897037039;
            continue;
          case 1:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * -981434176 ^ 54029818;
            continue;
          case 2:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * -968372851 ^ 1269381999;
            continue;
          case 3:
            num1 = (int) num6 * 1545383447 ^ 2013542659;
            continue;
          case 4:
            num1 = (int) num6 * 759892490 ^ -578490851;
            continue;
          case 5:
            jsonClass.Add(aKey, aItem);
            num1 = (int) num6 * 1538428626 ^ -321759735;
            continue;
          case 6:
            num1 = (int) num6 * 1768005731 ^ -569015529;
            continue;
          case 7:
            goto label_1;
          case 8:
label_7:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200C⁬‫‫⁬‫⁮‍​‫⁯‪‎‌‌⁯‌‮⁬⁯‎‪‭⁭‭‌‭⁪‍⁮‎‫⁭‪⁯‌⁫⁭‫⁯‮(aReader));
            num1 = -222607545;
            continue;
          case 9:
            num1 = (int) num6 * 1936565400 ^ -1936714361;
            continue;
          case 10:
label_21:
            num1 = -1980763366;
            continue;
          case 11:
            int num7;
            num1 = num7 = num2 >= num3 ? -800617192 : (num7 = -1536699602);
            continue;
          case 12:
            num1 = (int) num6 * 1801842348 ^ 2008121963;
            continue;
          case 13:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            ++num2;
            num1 = -234460357;
            continue;
          case 14:
label_28:
            num1 = -1859156390;
            continue;
          case 15:
            num1 = -1986355841;
            continue;
          case 16:
            jsonClass = new JSONClass();
            num1 = (int) num6 * 665246341 ^ 2112485775;
            continue;
          case 17:
            switch (jsonBinaryTag3)
            {
              case JSONBinaryTag.Array:
                goto label_27;
              case JSONBinaryTag.Class:
                goto label_17;
              case JSONBinaryTag.Value:
                goto label_34;
              case JSONBinaryTag.IntValue:
                goto label_7;
              case JSONBinaryTag.DoubleValue:
                goto label_28;
              case JSONBinaryTag.BoolValue:
                goto label_21;
              case JSONBinaryTag.FloatValue:
                goto label_37;
              default:
                num1 = (int) num6 * -193986442 ^ -755314610;
                continue;
            }
          case 18:
label_37:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202D⁫‎⁮‪‍‍‍⁯⁮⁭‌‍‏⁯⁭⁫​‭‫⁮‌⁮⁭⁪⁯⁫‌‫⁫‏⁬‪‍⁮⁮‌‭⁪‎‮(aReader));
            num1 = -1589254204;
            continue;
          case 19:
            jsonBinaryTag2 = jsonBinaryTag1;
            num1 = (int) num6 * -126912250 ^ 194666481;
            continue;
          case 20:
            aKey = JSONNode.\u200B‭‎⁯​‫​‏⁫‎‮‫‫⁫‎‫⁮⁫⁯‬⁬‪⁭‎⁫‬‪‭⁭‪⁬⁭‌⁭⁮‮​‌‎‌‮(aReader);
            aItem = JSONNode.Deserialize(aReader);
            num1 = (int) num6 * 1029913872 ^ 207765191;
            continue;
          case 21:
            num4 = 0;
            num1 = (int) num6 * -1253796096 ^ -1815232597;
            continue;
          case 22:
            jsonBinaryTag3 = jsonBinaryTag2;
            num1 = (int) num6 * 1460823323 ^ -1342764060;
            continue;
          case 23:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206D‏⁯‌​⁮⁯‍‌⁭‭‮‭​‏‌⁭‭‬⁬⁮⁪‏‌​‬‌⁪⁪⁭‭‏‬⁬‫‮⁯‫‫⁪‮(aReader));
            num1 = (int) num6 * -1847150657 ^ -739208068;
            continue;
          case 24:
            num1 = (int) num6 * -169845734 ^ 536999307;
            continue;
          case 25:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200C‪‫⁯​‌‮‌⁭‍​⁯⁪⁫⁮⁮⁬‌⁪‮⁪‎‎​‫‌​⁪⁭‏⁮⁮⁪‍‬⁮‪‍‭‎‮(aReader));
            num1 = (int) num6 * 1814381709 ^ -1932346870;
            continue;
          case 26:
            goto label_31;
          case 27:
            num1 = (int) num6 * -440207966 ^ 70532015;
            continue;
          case 28:
            int num8 = flag ? -1046061706 : (num8 = -1927181897);
            num1 = num8 ^ (int) num6 * 244938424;
            continue;
          case 30:
            num1 = (int) num6 * 903749292 ^ -297867937;
            continue;
          case 31:
            num5 = JSONNode.\u200C⁬‫‫⁬‫⁮‍​‫⁯‪‎‌‌⁯‌‮⁬⁯‎‪‭⁭‭‌‭⁪‍⁮‎‫⁭‪⁯‌⁫⁭‫⁯‮(aReader);
            num1 = (int) num6 * 1460082417 ^ 701004820;
            continue;
          case 32:
            num3 = JSONNode.\u200C⁬‫‫⁬‫⁮‍​‫⁯‪‎‌‌⁯‌‮⁬⁯‎‪‭⁭‭‌‭⁪‍⁮‎‫⁭‪⁯‌⁫⁭‫⁯‮(aReader);
            num1 = (int) num6 * 1475064316 ^ -1592698485;
            continue;
          case 33:
label_34:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200B‭‎⁯​‫​‏⁫‎‮‫‫⁫‎‫⁮⁫⁯‬⁬‪⁭‎⁫‬‪‭⁭‪⁬⁭‌⁭⁮‮​‌‎‌‮(aReader));
            num1 = -1198853873;
            continue;
          case 34:
            jsonArray = new JSONArray();
            num2 = 0;
            num1 = (int) num6 * -536487870 ^ -1081092253;
            continue;
          case 35:
label_27:
            num1 = -1658376087;
            continue;
          case 36:
            flag = num4 < num5;
            num1 = -720234678;
            continue;
          case 37:
            num1 = (int) num6 * -661122827 ^ -1845381577;
            continue;
          case 38:
label_17:
            num1 = -822291971;
            continue;
          default:
            goto label_41;
        }
      }
label_31:
      throw JSONNode.\u200F⁫‬⁪⁫⁪⁫⁮‏‏⁯⁭⁯⁮‬‏‏‪⁫‌⁬⁪‮⁪‬⁭‪‍‌‪‎⁭⁮‫⁪‍⁬​‍⁬‮(JSONNode.\u202D‬‪‎⁭‬‮‎‫‏‏​⁪‪‭⁪‫⁪⁫‮‎‬‭‭⁬‭‏‫​⁮‏⁭‫‪⁫‍‍‏⁫‬‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag1.ToString()));
label_41:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u200F⁫‬⁪⁫⁪⁫⁮‏‏⁯⁭⁯⁮‬‏‏‪⁫‌⁬⁪‮⁪‬⁭‪‍‌‪‎⁭⁮‫⁪‍⁬​‍⁬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u200F⁫‬⁪⁫⁪⁫⁮‏‏⁯⁭⁯⁮‬‏‏‪⁫‌⁬⁪‮⁪‬⁭‪‍‌‪‎⁭⁮‫⁪‍⁬​‍⁬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u200F⁫‬⁪⁫⁪⁫⁮‏‏⁯⁭⁯⁮‬‏‏‪⁫‌⁬⁪‮⁪‬⁭‪‍‌‪‎⁭⁮‫⁪‍⁬​‍⁬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u206D‫⁪⁫⁫⁪⁪‏‭‍‎‌‬⁫‫⁭‏‌‬‫⁭‏‭⁬‬⁭⁬⁫⁮⁬‭⁯⁯‮‬‏⁯⁮‎‪‮(aData);
      try
      {
        return JSONNode.Deserialize(aReader);
      }
      finally
      {
        if (aReader != null)
        {
label_3:
          int num1 = 1120758611;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ 1680437253)) % 3U)
            {
              case 1:
                JSONNode.\u202B‪‬⁮‪‎⁬⁫⁫‭‬‮⁫​⁪⁮⁭⁮‮⁮⁬‏‏‭‌‬‪‎⁫‏‍‮⁫⁪​​⁯⁫‪‮((IDisposable) aReader);
                num1 = (int) num2 * -1185328102 ^ 1511427132;
                continue;
              case 2:
                goto label_3;
              default:
                goto label_6;
            }
          }
        }
label_6:;
      }
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u202B⁭‏⁮⁭‍⁭⁭‌‪‭⁭‍‫‮‍⁬‏‫‪⁭‏‍⁮‍⁬‏‫‏‫‎‭​‫⁯‎⁯⁮​⁭‮(aFileName);
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = 2087015867;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1830403940)) % 3U)
          {
            case 0:
              goto label_2;
            case 1:
              jsonNode = JSONNode.LoadFromStream((Stream) aData);
              num1 = (int) num2 * -216021059 ^ 1659733818;
              continue;
            default:
              goto label_11;
          }
        }
      }
      finally
      {
        if (aData != null)
        {
label_6:
          int num3 = 35177914;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 1830403940)) % 4U)
            {
              case 1:
                num3 = (int) num4 * 1605907022 ^ -1722223742;
                continue;
              case 2:
                JSONNode.\u202B‪‬⁮‪‎⁬⁫⁫‭‬‮⁫​⁪⁮⁭⁮‮⁮⁬‏‏‭‌‬‪‎⁫‏‍‮⁫⁪​​⁯⁫‪‮((IDisposable) aData);
                num3 = (int) num4 * -1658093577 ^ -64570317;
                continue;
              case 3:
                goto label_6;
              default:
                goto label_10;
            }
          }
        }
label_10:;
      }
label_11:
      return jsonNode;
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
label_1:
      int num1 = -1894314327;
      byte[] numArray;
      MemoryStream aData;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -819066439)) % 7U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -2123976606 ^ 406332984;
            continue;
          case 3:
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * 1522945337 ^ -677905198;
            continue;
          case 4:
            aData = JSONNode.\u202A⁬‌‫⁯‫⁯‫⁮⁪‬‬‬⁭‎‪⁪​⁫⁫‫‫⁫‮‬⁭⁭⁭‎⁭‪​‪‬⁭‌​‫‭‮‮(numArray);
            num1 = (int) num2 * -1158717038 ^ 1626469508;
            continue;
          case 5:
            numArray = JSONNode.\u206C​‏⁪⁫⁫‏‍‪‬⁮⁯‍⁫‌⁪⁬‭​⁮‭⁪⁯⁯⁭⁭‎‪​‎‫⁫‭⁮⁫‎‪⁪‮(aBase64);
            num1 = (int) num2 * -2090749432 ^ 25629731;
            continue;
          case 6:
            JSONNode.\u200E‏⁫⁪⁭⁬‬‎​⁯⁫‮⁭⁫‫‭‎‌⁬⁪​⁫‫​‪⁯⁪⁪‫‭‪‪‍​‭⁬⁮‌‍‫‮((Stream) aData, 0L);
            num1 = (int) num2 * 528810565 ^ 1297894596;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      return jsonNode;
    }

    static CultureInfo \u206B‬⁪‌‎‌‍‮⁯⁮‏‪⁬​⁭‎⁯‫​‍⁭‏⁯‎‫‬‌⁬‎‪‮‏⁫⁪​‌‌‪‌‌‮() => CultureInfo.InvariantCulture;

    static bool \u200F⁮‬‬⁪​‫‮​​‍‏⁯‫‭‏‍‌‮‬‭⁭⁪‬‎⁮‪‫‎‪⁬⁯‏​⁯‏​‎⁮‫‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u206E⁫⁫⁯⁯‍⁪‌‪‬‬‬‮⁬⁬‪‭‌⁬⁫⁪‭‌⁬​⁯⁯‍⁭⁯‎⁫‭‍⁪‮⁭⁯‌‮() => base.GetHashCode();

    static char \u206A‪⁫‬⁬‎‫⁪‬‬‌‬‬‎⁪⁭‪‭⁯⁫‪​‏‎⁯‫‬‭‫⁬⁮‎‬‎⁮‭⁫‏‫‮‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u202D‬‪‎⁭‬‮‎‫‏‏​⁪‪‭⁪‫⁪⁫‮‎‬‭‭⁬‭‏‫​⁮‏⁭‫‪⁫‍‍‏⁫‬‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u200E‏‍​⁫‎‭‫⁬⁮‎‭‌⁪‭‎​‏‏‏‫‫⁭‎⁯⁭⁫⁭‍⁮​⁭⁬⁯⁬⁮⁪⁯⁫⁯‮([In] string obj0) => obj0.Length;

    static string \u206B‬⁬⁪⁭‌‭​‍‬‮​‬⁯‪‪‮‍⁪‌‌​‬‭‮⁯⁮⁪‌⁪‌⁮⁪​‫⁬​‫‎⁬‮([In] string obj0) => obj0.Trim();

    static bool \u202D⁫​⁮⁪⁬⁫⁯‬⁯‮⁭‭‫‍‫‬‮‏‏⁭‫‮⁭‎⁭‌⁭‎‏⁮​⁯‬​‫‍‌‬‌‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u200F⁫‬⁪⁫⁪⁫⁮‏‏⁯⁭⁯⁮‬‏‏‪⁫‌⁬⁪‮⁪‬⁭‪‍‌‪‎⁭⁮‫⁪‍⁬​‍⁬‮([In] string obj0) => new Exception(obj0);

    static string \u202E‎‬‮‮⁬‍‍‫⁮‮⁮⁫‬⁯⁯⁮‍⁪‎​‌​​‍‭‫‭⁪⁮‎‍⁫⁫⁮⁯‫⁭‪⁭‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u206D‌⁮⁭‬‮‎‮⁯‍‮​⁪‮‫​‬‮‫‬⁮⁫⁪⁫⁯⁪⁫⁪‭⁯‪⁭‌⁭⁭‭‌‎‌‭‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u206F‌‫⁫‭⁯⁯⁪​⁯⁬‮⁬‏​⁪‭​‫‭‮‌⁭‭‮‎‏‍​⁯‭⁬‪‪‬⁪‬​‌‬‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u202E⁫‭‬⁭⁬⁯‬‎⁬⁫⁫‏‌‪⁪‌‎⁫⁭​‏⁯​‏⁬‫‫⁬‏⁯‌‭‭‮‫‏‭‪⁮‮([In] FileInfo obj0) => obj0.Directory;

    static string \u202D⁪⁯‫‫‫​⁫⁪⁯‪⁮‮‪‌‏⁫‮‭⁬‭‬⁪‌‮‬⁯‏⁮‏⁯⁭‌⁯⁬⁫⁫⁫⁪‏‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u200C‬‌‏⁯‫‌‏‬⁬⁯⁯⁭⁯‎⁬⁬⁬⁯⁪⁪‍⁬⁮‭⁪‮‌‫‬⁫​‬‍‍‌⁫‪⁬⁫‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u200D⁯‍⁪⁯⁯‫⁭‎⁮⁭‏‎⁮‫⁫​‌⁭⁬⁬‫‎‍‌‭⁭‮​​⁫⁮​⁮⁯‏‍​‬‍‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u202B‪‬⁮‪‎⁬⁫⁫‭‬‮⁫​⁪⁮⁭⁮‮⁮⁬‏‏‭‌‬‪‎⁫‏‍‮⁫⁪​​⁯⁫‪‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u202E‍⁮⁬⁯​‏⁬⁪‮⁯⁪‬⁭‏⁮​⁮‎⁭‌⁭⁭⁯‍‮‭⁫‫⁪⁯‫‭⁯⁪⁭‌⁬‎⁭‮() => new MemoryStream();

    static void \u200E‏⁫⁪⁭⁬‬‎​⁯⁫‮⁭⁫‫‭‎‌⁬⁪​⁫‫​‪⁯⁪⁪‫‭‪‪‍​‭⁬⁮‌‍‫‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u206B⁪‍‍⁫⁬‪⁬⁫⁫‬‭‫⁮​‫⁭‭‎⁪⁪‮‬⁯​⁪‬‫⁬‏‏⁯⁫‮⁯‏⁬⁮‪‭‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u200B⁭‏⁯⁪‍⁬​‭‪‪⁭‎⁭⁫‪‮‫‍‭‭⁪‌‭‌‏⁭‏⁮⁫‬⁯⁬‮‫⁭‫‬⁬⁬‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u206A⁯‭‌⁬​‭‫‌⁯‪‪⁫⁯‎‏‍‏‮‍‍‮‎⁫‏​⁯‏‭‮‎‫⁭‪‮⁫‬‮​‍‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u200C⁬‫‫⁬‫⁮‍​‫⁯‪‎‌‌⁯‌‮⁬⁯‎‪‭⁭‭‌‭⁪‍⁮‎‫⁭‪⁯‌⁫⁭‫⁯‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u200B‭‎⁯​‫​‏⁫‎‮‫‫⁫‎‫⁮⁫⁯‬⁬‪⁭‎⁫‬‪‭⁭‪⁬⁭‌⁭⁮‮​‌‎‌‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u200C‪‫⁯​‌‮‌⁭‍​⁯⁪⁫⁮⁮⁬‌⁪‮⁪‎‎​‫‌​⁪⁭‏⁮⁮⁪‍‬⁮‪‍‭‎‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u206D‏⁯‌​⁮⁯‍‌⁭‭‮‭​‏‌⁭‭‬⁬⁮⁪‏‌​‬‌⁪⁪⁭‭‏‬⁬‫‮⁯‫‫⁪‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u202D⁫‎⁮‪‍‍‍⁯⁮⁭‌‍‏⁯⁭⁫​‭‫⁮‌⁮⁭⁪⁯⁫‌‫⁫‏⁬‪‍⁮⁮‌‭⁪‎‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u206D‫⁪⁫⁫⁪⁪‏‭‍‎‌‬⁫‫⁭‏‌‬‫⁭‏‭⁬‬⁭⁬⁫⁮⁬‭⁯⁯‮‬‏⁯⁮‎‪‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u202B⁭‏⁮⁭‍⁭⁭‌‪‭⁭‍‫‮‍⁬‏‫‪⁭‏‍⁮‍⁬‏‫‏‫‎‭​‫⁯‎⁯⁮​⁭‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u206C​‏⁪⁫⁫‏‍‪‬⁮⁯‍⁫‌⁪⁬‭​⁮‭⁪⁯⁯⁭⁭‎‪​‎‫⁫‭⁮⁫‎‪⁪‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u202A⁬‌‫⁯‫⁯‫⁮⁪‬‬‬⁭‎‪⁪​⁫⁫‫‫⁫‮‬⁭⁭⁭‎⁭‪​‪‬⁭‌​‫‭‮‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
