// Decompiled with JetBrains decompiler
// Type: ProjNet.Templates.Config
// Assembly: IRefl, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A29A65F6-B7ED-422C-83D4-B9EFD61E5F13
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-8e89881e34371e10b7f9cb943183a061aab9b22853cb7192e1ac09401f4cc545.exe

using ProjNet.Structs;
using System;
using System.Globalization;
using System.Runtime.CompilerServices;

namespace ProjNet.Templates
{
  public class Config
  {
    private string _Adapter;
    private double mock;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public Config(string v, double attr)
    {
      int num = 2;
      while (true)
      {
        switch (num)
        {
          case 0:
          case 2:
            PageAdvisorStructBuilder.PrepareCreator();
            num = 4;
            continue;
          case 1:
          case 4:
            // ISSUE: explicit constructor call
            base.\u002Ector();
            this._Adapter = v;
            goto case 3;
          case 3:
            this.mock = attr;
            num = 5;
            continue;
          case 5:
            goto label_6;
          default:
            num = 3;
            continue;
        }
      }
label_6:;
    }

    public string Name
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => this._Adapter;
      [MethodImpl(MethodImplOptions.NoInlining)] set => this._Adapter = value;
    }

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public double CountRegistry() => this.mock;

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public void SelectRegistry(double asset) => this.mock = asset;

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public string RestartRegistry() => string.Format((IFormatProvider) CultureInfo.InvariantCulture.NumberFormat, "PARAMETER[\"{0}\", {1}]", new object[2]
    {
      (object) this.Name,
      (object) this.CountRegistry()
    });

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public string StopRegistry() => string.Format((IFormatProvider) CultureInfo.InvariantCulture.NumberFormat, "<CS_ProjectionParameter Name=\"{0}\" Value=\"{1}\"/>", new object[2]
    {
      (object) this.Name,
      (object) this.CountRegistry()
    });

    internal static bool CollectWrapper() => true;

    internal static bool FillWrapper() => false;
  }
}
