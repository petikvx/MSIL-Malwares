// Decompiled with JetBrains decompiler
// Type: Mooreming.UserInterface
// Assembly: EventListe, Version=1.0.2.0, Culture=neutral, PublicKeyToken=null
// MVID: 17402B6D-E2A2-428E-97AD-7F2170B297A3
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.06\Backdoor.Win32.Buterat.frsq-f1c24055722dc6f94c4b223ed4a7bce8ffb5c5bb3030bca735d6ceab513d8d31.exe

using System;

namespace Mooreming
{
  internal class UserInterface
  {
    private IDroidCollection droidCollection;

    public UserInterface(IDroidCollection DroidCollection) => this.droidCollection = DroidCollection;

    public void DisplayGreeting()
    {
      Console.WriteLine("Welcome to the Droid Inventory System");
      Console.WriteLine();
    }

    public void DisplayMainMenu()
    {
      Console.WriteLine("What would you like to do?");
      Console.WriteLine("1. Add a new droid to the system");
      Console.WriteLine("2. Print the list of droids out");
      Console.WriteLine("3. Organize the list of droids by type");
      Console.WriteLine("4. Sort the list of droids by total cost");
      Console.WriteLine("5. Exit the program");
    }

    public int GetMenuChoice()
    {
      Console.Write("> ");
      string s = Console.ReadLine();
      int menuChoice;
      try
      {
        menuChoice = int.Parse(s);
      }
      catch (Exception ex)
      {
        menuChoice = 0;
      }
      return menuChoice;
    }

    public void CreateDroid()
    {
      this.displayColorSelection();
      int menuChoice;
      for (menuChoice = this.GetMenuChoice(); menuChoice < 1 || menuChoice > 4; menuChoice = this.GetMenuChoice())
        this.displayColorSelection();
      switch (menuChoice)
      {
        case 1:
          this.chooseMaterial("Bronze");
          break;
        case 2:
          this.chooseMaterial("Silver");
          break;
        case 3:
          this.chooseMaterial("Gold");
          break;
      }
    }

    public void PrintDroidList()
    {
      Console.WriteLine();
      Console.WriteLine(this.droidCollection.GetPrintString());
    }

    private void displayModelSelection()
    {
      Console.WriteLine();
      Console.WriteLine("What type of droid is it?");
      Console.WriteLine("1. Protocol");
      Console.WriteLine("2. Utility");
      Console.WriteLine("3. Janitorial");
      Console.WriteLine("4. Astromech");
      Console.WriteLine("5. Cancel This Operation");
    }

    private void displayMaterialSelection()
    {
      Console.WriteLine();
      Console.WriteLine("What material is the droid made out of?");
      Console.WriteLine("1. Carbonite");
      Console.WriteLine("2. Vanadium");
      Console.WriteLine("3. Quadranium");
      Console.WriteLine("4. Cancel This Operation");
    }

    private void displayColorSelection()
    {
      Console.WriteLine();
      Console.WriteLine("What color is the droid?");
      Console.WriteLine("1. Bronze");
      Console.WriteLine("2. Silver");
      Console.WriteLine("3. Gold");
      Console.WriteLine("4. Cancel This Operation");
    }

    private void displayNumberOfLanguageSelection()
    {
      Console.WriteLine();
      Console.WriteLine("How many languages does the droid know?");
    }

    private bool[] displayAndGetUtilityOptions()
    {
      Console.WriteLine();
      bool option1 = this.displayAndGetOption("Does the droid have a toolbox?");
      Console.WriteLine();
      bool option2 = this.displayAndGetOption("Does the droid have a computer connection?");
      Console.WriteLine();
      bool option3 = this.displayAndGetOption("Does the droid have an arm?");
      return new bool[3]{ option1, option2, option3 };
    }

    private bool[] displayAndGetJanatorialOptions()
    {
      Console.WriteLine();
      bool option1 = this.displayAndGetOption("Does the droid have a trash compactor?");
      Console.WriteLine();
      bool option2 = this.displayAndGetOption("Does the droid have a vaccum?");
      return new bool[2]{ option1, option2 };
    }

    private bool displayAndGetAstromechOption()
    {
      Console.WriteLine();
      return this.displayAndGetOption("Does the droid have a fire extinguisher?");
    }

    private int displayAndGetAstromechNumberOfShips()
    {
      Console.WriteLine();
      Console.WriteLine("How many ships has the droid worked on?");
      int menuChoice;
      for (menuChoice = this.GetMenuChoice(); menuChoice <= 0; menuChoice = this.GetMenuChoice())
      {
        Console.WriteLine("Not a valid number of ships");
        Console.WriteLine("How many ships as the droid worked on?");
      }
      return menuChoice;
    }

    private bool displayAndGetOption(string optionString)
    {
      Console.WriteLine(optionString + " (y/n)");
      string str;
      for (str = Console.ReadLine(); str.ToUpper() != "Y" && str.ToUpper() != "N"; str = Console.ReadLine())
        Console.WriteLine(optionString);
      return str.ToUpper() == "Y";
    }

    private void chooseMaterial(string Color)
    {
      this.displayMaterialSelection();
      int menuChoice;
      for (menuChoice = this.GetMenuChoice(); menuChoice < 0 || menuChoice > 4; menuChoice = this.GetMenuChoice())
        this.displayMaterialSelection();
      switch (menuChoice)
      {
        case 1:
          this.chooseModel(Color, "Carbonite");
          break;
        case 2:
          this.chooseModel(Color, "Vanadium");
          break;
        case 3:
          this.chooseModel(Color, "Quadranium");
          break;
      }
    }

    private void chooseModel(string Color, string Material)
    {
      this.displayModelSelection();
      int menuChoice;
      for (menuChoice = this.GetMenuChoice(); menuChoice < 0 || menuChoice > 5; menuChoice = this.GetMenuChoice())
        this.displayModelSelection();
      switch (menuChoice)
      {
        case 1:
          this.chooseNumberOfLanguages(Color, Material, "Protocol");
          break;
        case 2:
          this.chooseOptions(Color, Material, "Utility");
          break;
        case 3:
          this.chooseOptions(Color, Material, "Janatorial");
          break;
        case 4:
          this.chooseOptions(Color, Material, "Astromech");
          break;
      }
    }

    private void chooseNumberOfLanguages(string Color, string Material, string Model)
    {
      this.displayNumberOfLanguageSelection();
      int menuChoice;
      for (menuChoice = this.GetMenuChoice(); menuChoice < 0; menuChoice = this.GetMenuChoice())
      {
        Console.WriteLine("Not a valid number of languages");
        this.displayNumberOfLanguageSelection();
      }
      this.droidCollection.Add(Material, Model, Color, menuChoice);
    }

    private void chooseOptions(string Color, string Material, string Model)
    {
      bool[] utilityOptions = this.displayAndGetUtilityOptions();
      string str = Model;
      if (!(str == "Utility"))
      {
        if (!(str == "Janatorial"))
        {
          if (!(str == "Astromech"))
            return;
          bool astromechOption = this.displayAndGetAstromechOption();
          int astromechNumberOfShips = this.displayAndGetAstromechNumberOfShips();
          this.droidCollection.Add(Material, Model, Color, utilityOptions[0], utilityOptions[1], utilityOptions[2], astromechOption, astromechNumberOfShips);
        }
        else
        {
          bool[] janatorialOptions = this.displayAndGetJanatorialOptions();
          this.droidCollection.Add(Material, Model, Color, utilityOptions[0], utilityOptions[1], utilityOptions[2], janatorialOptions[0], janatorialOptions[1]);
        }
      }
      else
        this.droidCollection.Add(Material, Model, Color, utilityOptions[0], utilityOptions[1], utilityOptions[2]);
    }

    public void Organize()
    {
      this.droidCollection.Organize();
      Console.WriteLine();
      Console.WriteLine("The droids have been organised by type.(Astromech, Janitor, Utility, Protocol)");
      Console.WriteLine();
    }

    public void Sort()
    {
      this.droidCollection.Sort();
      Console.WriteLine();
      Console.WriteLine("The droids have been organised by total cost.(low to high)");
      Console.WriteLine();
    }
  }
}
