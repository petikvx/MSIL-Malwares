// Decompiled with JetBrains decompiler
// Type: 363552236869.208021664161
// Assembly: 919255703032, Version=1.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: F1AD5918-0B7E-492E-9A94-09EF01F479FE
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan.MSIL.PowerShell.gen-3f4b670e0031ca65278218e918a28415aaa7ff1d11945b124206e7afa8294ecf.exe

using \u003363552236869;
using System.Text;

namespace \u003363552236869
{
  public class \u003208021664161
  {
    public static string \u003586840104015(string _param0)
    {
      if (_param0.EndsWith("/>"))
        return _param0.Substring(0, _param0.Length - 2) + ">";
      int length = _param0.LastIndexOf("</");
      while (length > 0 && char.IsWhiteSpace(_param0[length - 1]))
        --length;
      return _param0.Substring(0, length);
    }

    public static string \u003285277124988(object _param0, bool _param1 = false)
    {
      string str1 = _param0.ToString();
      StringBuilder stringBuilder = (StringBuilder) null;
      int num = 0;
      for (int index = 0; index < str1.Length; ++index)
      {
        string str2;
        switch (str1[index])
        {
          case '"':
            str2 = "&quot;";
            break;
          case '&':
            str2 = "&amp;";
            break;
          case '\'':
            str2 = "&apos;";
            break;
          case '<':
            str2 = "&lt;";
            break;
          case '>':
            str2 = "&gt;";
            break;
          default:
            continue;
        }
        if (stringBuilder == null)
        {
          stringBuilder = new StringBuilder();
          if (_param1)
            stringBuilder.Append('"');
        }
        while (num < index)
          stringBuilder.Append(str1[num++]);
        stringBuilder.Append(str2);
        ++num;
      }
      if (stringBuilder != null)
      {
        while (num < str1.Length)
          stringBuilder.Append(str1[num++]);
        if (_param1)
          stringBuilder.Append('"');
        return stringBuilder.ToString();
      }
      if (_param1)
        str1 = "\"" + str1 + "\"";
      return str1;
    }

    public static string \u003209933976530(object _param0) => \u003208021664161.\u003285277124988(_param0, true);

    public static string \u003238434777382(int _param0) => "\"" + (object) _param0 + "\"";

    public static string \u003415554269961(uint _param0) => "\"0x" + _param0.ToString("x").PadLeft(8, '0') + "\"";

    public static string \u003275785622929(ulong _param0) => "\"0x" + _param0.ToString("x").PadLeft(8, '0') + "\"";

    public static string \u003334929122887(int _param0) => \u003208021664161.\u003415554269961((uint) _param0);

    public static string \u003173660875492(long _param0) => \u003208021664161.\u003275785622929((ulong) _param0);
  }
}
