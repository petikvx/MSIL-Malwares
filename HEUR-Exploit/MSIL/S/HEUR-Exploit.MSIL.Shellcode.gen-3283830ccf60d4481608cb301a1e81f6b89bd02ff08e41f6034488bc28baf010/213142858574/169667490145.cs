// Decompiled with JetBrains decompiler
// Type: 213142858574.169667490145
// Assembly: 087135227926, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
// MVID: 0DB320EA-9C28-4716-BA63-69641BABDE67
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-3283830ccf60d4481608cb301a1e81f6b89bd02ff08e41f6034488bc28baf010.exe

using \u003029382680033;
using \u003031732155410;
using \u003053028810657;
using \u003131763409460;
using \u003133004791854;
using \u003166973138106;
using \u003188295525212;
using \u003208825527781;
using \u003213142858574;
using \u003226094756440;
using \u003233524418126;
using \u003305316230596;
using \u003384276752884;
using \u003462605226301;
using \u003489227910893;
using \u003566708290622;
using \u003573940117928;
using \u003672161515360;
using \u003714036611969;
using \u003772444843072;
using \u003868589895539;
using \u003915075660142;
using \u003977546272672;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.CompilerServices;
using System.Threading;
using System.Threading.Tasks;

namespace \u003213142858574
{
  public abstract class \u003169667490145 : 
    \u003057567207975,
    INotifyCollectionChanged,
    ICollection,
    IEnumerable<\u003057567207975>,
    IEnumerable,
    ICollection<\u003057567207975>,
    IBindingList,
    IList,
    IList<\u003057567207975>,
    ITypedList
  {
    internal ListChangedEventHandler \u003603193732354;
    internal AddingNewEventHandler \u003934410459875;
    internal NotifyCollectionChangedEventHandler \u003893759906433;
    private object \u003573165935118;
    private bool \u003700391637243;

    internal Task \u003418676808044(
      \u003250925846196 _param1,
      \u003090280913248 _param2,
      CancellationToken _param3 = default (CancellationToken))
    {
      // ISSUE: variable of a compiler-generated type
      \u003169667490145.\u003859603738888 stateMachine;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003483283133530 = this;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003132883542928 = _param1;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003776520242709 = _param2;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003117140639373 = _param3;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003484941117854 = AsyncTaskMethodBuilder.Create();
      // ISSUE: cast to a reference type
      // ISSUE: explicit reference operation
      // ISSUE: reference to a compiler-generated field
      (^(\u003326867762216.\u003145937066378&) ref stateMachine).\u003287345334194 = -1;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003484941117854.Start<\u003169667490145.\u003859603738888>(ref stateMachine);
      // ISSUE: reference to a compiler-generated field
      return stateMachine.\u003484941117854.Task;
    }

    private Task \u003572256305970(
      \u003250925846196 _param1,
      \u003090280913248 _param2,
      CancellationToken _param3 = default (CancellationToken))
    {
      // ISSUE: variable of a compiler-generated type
      \u003169667490145.\u003700945584233 stateMachine;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003719190702662 = this;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003679483555482 = _param1;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003920399653075 = _param2;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003822192342223 = _param3;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003479909108862 = AsyncTaskMethodBuilder.Create();
      // ISSUE: cast to a reference type
      // ISSUE: explicit reference operation
      // ISSUE: reference to a compiler-generated field
      (^(\u003169667490145.\u003859603738888&) ref stateMachine).\u003215712552249 = -1;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003479909108862.Start<\u003169667490145.\u003700945584233>(ref stateMachine);
      // ISSUE: reference to a compiler-generated field
      return stateMachine.\u003479909108862.Task;
    }

    public event ListChangedEventHandler \u003814057376867
    {
      add => this.\u003603193732354 += value;
      remove => this.\u003603193732354 -= value;
    }

    public event AddingNewEventHandler \u003832547470623
    {
      add => this.\u003934410459875 += value;
      remove => this.\u003934410459875 -= value;
    }

    public event NotifyCollectionChangedEventHandler \u003032671356728
    {
      add => this.\u003893759906433 += value;
      remove => this.\u003893759906433 -= value;
    }

    protected abstract IList<\u003057567207975> \u003717800693011 { get; }

    internal \u003169667490145()
    {
    }

    internal \u003169667490145(\u003169667490145 other)
      : this()
    {
      \u003821784578685.\u003260732825936((object) other, nameof (other));
      int num = 0;
      foreach (\u003057567207975 obj in (IEnumerable<\u003057567207975>) other)
      {
        this.\u003985170468532(num, (object) obj, false);
        ++num;
      }
    }

    internal void \u003037949696313()
    {
      if (this.\u003700391637243)
        throw new InvalidOperationException("Cannot change {0} during a collection change event.".\u003212424921759((IFormatProvider) CultureInfo.InvariantCulture, (object) this.GetType()));
    }

    internal virtual IList<\u003057567207975> \u003566847977634() => (IList<\u003057567207975>) new List<\u003057567207975>();

    protected virtual void OnAddingNew(AddingNewEventArgs e)
    {
      AddingNewEventHandler addingNewEventHandler = this.\u003934410459875;
      if (addingNewEventHandler == null)
        return;
      addingNewEventHandler((object) this, e);
    }

    protected virtual void OnListChanged(ListChangedEventArgs e)
    {
      ListChangedEventHandler changedEventHandler = this.\u003603193732354;
      if (changedEventHandler == null)
        return;
      this.\u003700391637243 = true;
      try
      {
        changedEventHandler((object) this, e);
      }
      finally
      {
        this.\u003700391637243 = false;
      }
    }

    protected virtual void OnCollectionChanged(NotifyCollectionChangedEventArgs e)
    {
      NotifyCollectionChangedEventHandler changedEventHandler = this.\u003893759906433;
      if (changedEventHandler == null)
        return;
      this.\u003700391637243 = true;
      try
      {
        changedEventHandler((object) this, e);
      }
      finally
      {
        this.\u003700391637243 = false;
      }
    }

    public virtual bool \u003409133822335 => this.\u003717800693011.Count > 0;

    internal bool \u003903985793231(\u003169667490145 _param1)
    {
      if (_param1 == this)
        return true;
      IList<\u003057567207975> objList1 = this.\u003717800693011;
      IList<\u003057567207975> objList2 = _param1.\u003717800693011;
      if (objList1.Count != objList2.Count)
        return false;
      for (int index = 0; index < objList1.Count; ++index)
      {
        if (!objList1[index].\u003804485497034(objList2[index]))
          return false;
      }
      return true;
    }

    public virtual \u003057567207975 \u003720274734181
    {
      get
      {
        IList<\u003057567207975> objList = this.\u003717800693011;
        return objList.Count <= 0 ? (\u003057567207975) null : objList[0];
      }
    }

    public virtual \u003057567207975 \u003877895227911
    {
      get
      {
        IList<\u003057567207975> objList = this.\u003717800693011;
        int count = objList.Count;
        return count <= 0 ? (\u003057567207975) null : objList[count - 1];
      }
    }

    public virtual \u003649716583018<\u003057567207975> \u003735515375741() => new \u003649716583018<\u003057567207975>((IEnumerable<\u003057567207975>) this.\u003717800693011);

    public virtual IEnumerable<T> \u003739833229905<T>() => this.\u003717800693011.\u003975413041614<\u003057567207975, T>();

    public IEnumerable<\u003057567207975> \u003426312494182() => this.\u003814640325154(false);

    public IEnumerable<\u003057567207975> \u003605912485280() => this.\u003814640325154(true);

    internal IEnumerable<\u003057567207975> \u003814640325154(
      bool _param1)
    {
      // ISSUE: object of a compiler-generated type is created
      return (IEnumerable<\u003057567207975>) new \u003169667490145.\u003700945584233(-2)
      {
        \u003501566165028 = this,
        \u003594945201128 = _param1
      };
    }

    internal bool \u003922097810195(object _param1) => _param1 is IEnumerable && !(_param1 is string) && !(_param1 is \u003057567207975) && !(_param1 is byte[]);

    internal \u003057567207975 \u003244608748180(
      \u003057567207975 _param1,
      bool _param2)
    {
      if (_param1 == null)
        return (\u003057567207975) \u003666167056623.\u003147671514610();
      if (_param2 || _param1.\u003070659156828 == null && _param1 != this && (!_param1.\u003803106334062 || this.\u003810565636763 != _param1))
        return _param1;
      _param1 = _param1.\u003875806748620();
      return _param1;
    }

    internal abstract int \u003621467079554(\u003057567207975 _param1);

    internal virtual void \u003864745195129(int _param1, \u003057567207975 _param2, bool _param3)
    {
      IList<\u003057567207975> objList = this.\u003717800693011;
      if (_param1 > objList.Count)
        throw new ArgumentOutOfRangeException("index", "Index must be within the bounds of the List.");
      this.\u003037949696313();
      _param2 = this.\u003244608748180(_param2, _param3);
      \u003057567207975 obj1 = _param1 == 0 ? (\u003057567207975) null : objList[_param1 - 1];
      \u003057567207975 obj2 = _param1 == objList.Count ? (\u003057567207975) null : objList[_param1];
      this.\u003069812659216(_param2, (\u003057567207975) null);
      _param2.\u003070659156828 = this;
      _param2.\u003245902510672 = obj1;
      if (obj1 != null)
        obj1.\u003576480696628 = _param2;
      _param2.\u003576480696628 = obj2;
      if (obj2 != null)
        obj2.\u003245902510672 = _param2;
      objList.Insert(_param1, _param2);
      if (this.\u003603193732354 != null)
        this.OnListChanged(new ListChangedEventArgs(ListChangedType.ItemAdded, _param1));
      if (this.\u003893759906433 == null)
        return;
      this.OnCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Add, (object) _param2, _param1));
    }

    internal virtual void \u003964814847964(int _param1)
    {
      IList<\u003057567207975> objList = this.\u003717800693011;
      if (_param1 < 0)
        throw new ArgumentOutOfRangeException("index", "Index is less than 0.");
      if (_param1 >= objList.Count)
        throw new ArgumentOutOfRangeException("index", "Index is equal to or greater than Count.");
      this.\u003037949696313();
      \u003057567207975 changedItem = objList[_param1];
      \u003057567207975 obj1 = _param1 == 0 ? (\u003057567207975) null : objList[_param1 - 1];
      \u003057567207975 obj2 = _param1 == objList.Count - 1 ? (\u003057567207975) null : objList[_param1 + 1];
      if (obj1 != null)
        obj1.\u003576480696628 = obj2;
      if (obj2 != null)
        obj2.\u003245902510672 = obj1;
      changedItem.\u003070659156828 = (\u003169667490145) null;
      changedItem.\u003245902510672 = (\u003057567207975) null;
      changedItem.\u003576480696628 = (\u003057567207975) null;
      objList.RemoveAt(_param1);
      if (this.\u003603193732354 != null)
        this.OnListChanged(new ListChangedEventArgs(ListChangedType.ItemDeleted, _param1));
      if (this.\u003893759906433 == null)
        return;
      this.OnCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Remove, (object) changedItem, _param1));
    }

    internal virtual bool \u003486609277086(\u003057567207975 _param1)
    {
      int num = this.\u003621467079554(_param1);
      if (num < 0)
        return false;
      this.\u003964814847964(num);
      return true;
    }

    internal virtual \u003057567207975 \u003150080009177(int _param1) => this.\u003717800693011[_param1];

    internal virtual void \u003897878127767(int _param1, \u003057567207975 _param2)
    {
      IList<\u003057567207975> objList = this.\u003717800693011;
      if (_param1 < 0)
        throw new ArgumentOutOfRangeException("index", "Index is less than 0.");
      if (_param1 >= objList.Count)
        throw new ArgumentOutOfRangeException("index", "Index is equal to or greater than Count.");
      \u003057567207975 oldItem = objList[_param1];
      if (\u003169667490145.\u003515944086238(oldItem, _param2))
        return;
      this.\u003037949696313();
      _param2 = this.\u003244608748180(_param2, false);
      this.\u003069812659216(_param2, oldItem);
      \u003057567207975 obj1 = _param1 == 0 ? (\u003057567207975) null : objList[_param1 - 1];
      \u003057567207975 obj2 = _param1 == objList.Count - 1 ? (\u003057567207975) null : objList[_param1 + 1];
      _param2.\u003070659156828 = this;
      _param2.\u003245902510672 = obj1;
      if (obj1 != null)
        obj1.\u003576480696628 = _param2;
      _param2.\u003576480696628 = obj2;
      if (obj2 != null)
        obj2.\u003245902510672 = _param2;
      objList[_param1] = _param2;
      oldItem.\u003070659156828 = (\u003169667490145) null;
      oldItem.\u003245902510672 = (\u003057567207975) null;
      oldItem.\u003576480696628 = (\u003057567207975) null;
      if (this.\u003603193732354 != null)
        this.OnListChanged(new ListChangedEventArgs(ListChangedType.ItemChanged, _param1));
      if (this.\u003893759906433 == null)
        return;
      this.OnCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Replace, (object) _param2, (object) oldItem, _param1));
    }

    internal virtual void \u003439680220501()
    {
      this.\u003037949696313();
      IList<\u003057567207975> objList = this.\u003717800693011;
      foreach (\u003057567207975 obj in (IEnumerable<\u003057567207975>) objList)
      {
        obj.\u003070659156828 = (\u003169667490145) null;
        obj.\u003245902510672 = (\u003057567207975) null;
        obj.\u003576480696628 = (\u003057567207975) null;
      }
      objList.Clear();
      if (this.\u003603193732354 != null)
        this.OnListChanged(new ListChangedEventArgs(ListChangedType.Reset, -1));
      if (this.\u003893759906433 == null)
        return;
      this.OnCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Reset));
    }

    internal virtual void \u003126193456320(\u003057567207975 _param1, \u003057567207975 _param2)
    {
      if (_param1 == null || _param1.\u003070659156828 != this)
        return;
      this.\u003897878127767(this.\u003621467079554(_param1), _param2);
    }

    internal virtual bool \u003070923030392(\u003057567207975 _param1) => this.\u003621467079554(_param1) != -1;

    internal virtual void \u003650312081491(Array _param1, int _param2)
    {
      if (_param1 == null)
        throw new ArgumentNullException("array");
      if (_param2 < 0)
        throw new ArgumentOutOfRangeException("arrayIndex", "arrayIndex is less than 0.");
      if (_param2 >= _param1.Length && _param2 != 0)
        throw new ArgumentException("arrayIndex is equal to or greater than the length of array.");
      if (this.\u003911121170153 > _param1.Length - _param2)
        throw new ArgumentException("The number of elements in the source JObject is greater than the available space from arrayIndex to the end of the destination array.");
      int num = 0;
      foreach (\u003057567207975 obj in (IEnumerable<\u003057567207975>) this.\u003717800693011)
      {
        _param1.SetValue((object) obj, _param2 + num);
        ++num;
      }
    }

    internal static bool \u003515944086238(\u003057567207975 _param0, \u003057567207975 _param1)
    {
      if (!(_param0 is \u003666167056623 obj))
        return false;
      return obj.\u003626381970874 == \u003205973939318.Null && _param1 == null || obj.Equals((object) _param1);
    }

    internal virtual void \u003069812659216(\u003057567207975 _param1, \u003057567207975 _param2)
    {
      \u003821784578685.\u003260732825936((object) _param1, "o");
      if (_param1.\u003626381970874 == \u003205973939318.Property)
        throw new ArgumentException("Can not add {0} to {1}.".\u003937370926224((IFormatProvider) CultureInfo.InvariantCulture, (object) _param1.GetType(), (object) this.GetType()));
    }

    public virtual void \u003989562133957(object _param1) => this.\u003985170468532(this.\u003717800693011.Count, _param1, false);

    internal void \u003344953009276(\u003057567207975 _param1) => this.\u003985170468532(this.\u003717800693011.Count, (object) _param1, true);

    public void \u003641592901724(object _param1) => this.\u003985170468532(0, _param1, false);

    internal void \u003985170468532(int _param1, object _param2, bool _param3)
    {
      if (this.\u003922097810195(_param2))
      {
        IEnumerable enumerable = (IEnumerable) _param2;
        int num = _param1;
        foreach (object obj in enumerable)
        {
          this.\u003985170468532(num, obj, _param3);
          ++num;
        }
      }
      else
      {
        \u003057567207975 obj = \u003169667490145.\u003922333858574(_param2);
        this.\u003864745195129(_param1, obj, _param3);
      }
    }

    internal static \u003057567207975 \u003922333858574(object _param0) => _param0 is \u003057567207975 obj ? obj : (\u003057567207975) new \u003666167056623(_param0);

    public \u003632627526011 \u003208640004724() => (\u003632627526011) new \u003798561175010(this);

    public void \u003627083625477(object _param1)
    {
      this.\u003439680220501();
      this.\u003989562133957(_param1);
    }

    public void \u003964677305652() => this.\u003439680220501();

    internal abstract void \u003776847198115(object _param1, \u003163041931836 _param2);

    public void \u003157666672686(object _param1) => this.\u003776847198115(_param1, new \u003163041931836());

    public void \u003541808773564(object _param1, \u003163041931836 _param2) => this.\u003776847198115(_param1, _param2);

    internal void \u003213485908360(\u003250925846196 _param1, \u003090280913248 _param2)
    {
      int num = _param1.\u003757908778853;
      if (!_param1.\u003776737810718())
        throw \u003341402789311.\u003547194519311(_param1, "Error reading {0} from JsonReader.".\u003212424921759((IFormatProvider) CultureInfo.InvariantCulture, (object) this.GetType().Name));
      this.\u003667981201964(_param1, _param2);
      if (_param1.\u003757908778853 > num)
        throw \u003341402789311.\u003547194519311(_param1, "Unexpected end of content while loading {0}.".\u003212424921759((IFormatProvider) CultureInfo.InvariantCulture, (object) this.GetType().Name));
    }

    internal void \u003667981201964(\u003250925846196 _param1, \u003090280913248 _param2)
    {
      \u003821784578685.\u003260732825936((object) _param1, "r");
      IJsonLineInfo jsonLineInfo = _param1 as IJsonLineInfo;
      \u003169667490145 obj1 = this;
      do
      {
        if ((obj1 is \u003165411198507 obj2 ? obj2.\u003019890020644 : (\u003057567207975) null) != null)
        {
          if (obj1 == this)
            break;
          obj1 = obj1.\u003070659156828;
        }
        switch (_param1.\u003271751439454)
        {
          case \u003293768301571.None:
            continue;
          case \u003293768301571.StartObject:
            \u003728419014961 obj3 = new \u003728419014961();
            obj3.\u003696850721159(jsonLineInfo, _param2);
            obj1.\u003989562133957((object) obj3);
            obj1 = (\u003169667490145) obj3;
            goto case \u003293768301571.None;
          case \u003293768301571.StartArray:
            \u003576016063606 obj4 = new \u003576016063606();
            obj4.\u003696850721159(jsonLineInfo, _param2);
            obj1.\u003989562133957((object) obj4);
            obj1 = (\u003169667490145) obj4;
            goto case \u003293768301571.None;
          case \u003293768301571.StartConstructor:
            \u003326867762216 obj5 = new \u003326867762216(_param1.\u003255783382022.ToString());
            obj5.\u003696850721159(jsonLineInfo, _param2);
            obj1.\u003989562133957((object) obj5);
            obj1 = (\u003169667490145) obj5;
            goto case \u003293768301571.None;
          case \u003293768301571.PropertyName:
            string name = _param1.\u003255783382022.ToString();
            \u003165411198507 obj6 = new \u003165411198507(name);
            obj6.\u003696850721159(jsonLineInfo, _param2);
            \u003165411198507 obj7 = ((\u003728419014961) obj1).\u003589431271918(name);
            if (obj7 == null)
              obj1.\u003989562133957((object) obj6);
            else
              obj7.\u003495546220893((\u003057567207975) obj6);
            obj1 = (\u003169667490145) obj6;
            goto case \u003293768301571.None;
          case \u003293768301571.Comment:
            if (_param2 != null && _param2.\u003253184545533 == \u003437529526602.Load)
            {
              \u003666167056623 obj8 = \u003666167056623.\u003072787451337(_param1.\u003255783382022.ToString());
              obj8.\u003696850721159(jsonLineInfo, _param2);
              obj1.\u003989562133957((object) obj8);
              goto case \u003293768301571.None;
            }
            else
              goto case \u003293768301571.None;
          case \u003293768301571.Integer:
          case \u003293768301571.Float:
          case \u003293768301571.String:
          case \u003293768301571.Boolean:
          case \u003293768301571.Date:
          case \u003293768301571.Bytes:
            \u003666167056623 obj9 = new \u003666167056623(_param1.\u003255783382022);
            obj9.\u003696850721159(jsonLineInfo, _param2);
            obj1.\u003989562133957((object) obj9);
            goto case \u003293768301571.None;
          case \u003293768301571.Null:
            \u003666167056623 obj10 = \u003666167056623.\u003147671514610();
            obj10.\u003696850721159(jsonLineInfo, _param2);
            obj1.\u003989562133957((object) obj10);
            goto case \u003293768301571.None;
          case \u003293768301571.Undefined:
            \u003666167056623 obj11 = \u003666167056623.\u003707642798312();
            obj11.\u003696850721159(jsonLineInfo, _param2);
            obj1.\u003989562133957((object) obj11);
            goto case \u003293768301571.None;
          case \u003293768301571.EndObject:
            if (obj1 == this)
              return;
            obj1 = obj1.\u003070659156828;
            goto case \u003293768301571.None;
          case \u003293768301571.EndArray:
            if (obj1 == this)
              return;
            obj1 = obj1.\u003070659156828;
            goto case \u003293768301571.None;
          case \u003293768301571.EndConstructor:
            if (obj1 == this)
              return;
            obj1 = obj1.\u003070659156828;
            goto case \u003293768301571.None;
          default:
            throw new InvalidOperationException("The JsonReader should not be on a token of type {0}.".\u003212424921759((IFormatProvider) CultureInfo.InvariantCulture, (object) _param1.\u003271751439454));
        }
      }
      while (_param1.\u003776737810718());
    }

    internal int \u003320346562208()
    {
      int num = 0;
      foreach (\u003057567207975 obj in (IEnumerable<\u003057567207975>) this.\u003717800693011)
        num ^= obj.\u003860056504497();
      return num;
    }

    string ITypedList.\u003111593623963(PropertyDescriptor[] _param1) => string.Empty;

    PropertyDescriptorCollection ITypedList.\u003002440420511(
      PropertyDescriptor[] _param1)
    {
      return !(this.\u003155157927618 is ICustomTypeDescriptor customTypeDescriptor) ? (PropertyDescriptorCollection) null : customTypeDescriptor.GetProperties();
    }

    int IList<\u003057567207975>.\u003612592991029(\u003057567207975 _param1) => this.\u003621467079554(_param1);

    void IList<\u003057567207975>.\u003805992879493(
      int _param1,
      \u003057567207975 _param2)
    {
      this.\u003864745195129(_param1, _param2, false);
    }

    void IList<\u003057567207975>.\u003829109495675(int _param1) => this.\u003964814847964(_param1);

    [IndexerName("269430937973")]
    \u003057567207975 IList<\u003057567207975>.this[int index]
    {
      get => this.\u003150080009177(index);
      set => this.\u003897878127767(index, value);
    }

    void ICollection<\u003057567207975>.\u003922631218800(
      \u003057567207975 _param1)
    {
      this.\u003989562133957((object) _param1);
    }

    void ICollection<\u003057567207975>.\u003690033896269() => this.\u003439680220501();

    bool ICollection<\u003057567207975>.\u003345395925020(
      \u003057567207975 _param1)
    {
      return this.\u003070923030392(_param1);
    }

    void ICollection<\u003057567207975>.\u003166681545799(
      \u003057567207975[] _param1,
      int _param2)
    {
      this.\u003650312081491((Array) _param1, _param2);
    }

    bool ICollection<\u003057567207975>.\u003811593035474 => false;

    bool ICollection<\u003057567207975>.\u003443144460725(
      \u003057567207975 _param1)
    {
      return this.\u003486609277086(_param1);
    }

    private \u003057567207975 \u003145229343861(object _param1)
    {
      if (_param1 == null)
        return (\u003057567207975) null;
      return _param1 is \u003057567207975 obj ? obj : throw new ArgumentException("Argument is not a JToken.");
    }

    int IList.\u003683514056286(object _param1)
    {
      this.\u003989562133957((object) this.\u003145229343861(_param1));
      return this.\u003911121170153 - 1;
    }

    void IList.\u003380559242417() => this.\u003439680220501();

    bool IList.\u003209746961813(object _param1) => this.\u003070923030392(this.\u003145229343861(_param1));

    int IList.\u003821383200767(object _param1) => this.\u003621467079554(this.\u003145229343861(_param1));

    void IList.\u003750322328837(int _param1, object _param2) => this.\u003864745195129(_param1, this.\u003145229343861(_param2), false);

    bool IList.\u003230341498929 => false;

    bool IList.\u003905989611153 => false;

    void IList.\u003514605672366(object _param1) => this.\u003486609277086(this.\u003145229343861(_param1));

    void IList.\u003657473849875(int _param1) => this.\u003964814847964(_param1);

    [IndexerName("147942777698")]
    object IList.this[int index]
    {
      get => (object) this.\u003150080009177(index);
      set => this.\u003897878127767(index, this.\u003145229343861(value));
    }

    void ICollection.\u003386229767506(Array _param1, int _param2) => this.\u003650312081491(_param1, _param2);

    public int \u003911121170153 => this.\u003717800693011.Count;

    bool ICollection.\u003886150143310 => false;

    object ICollection.\u003906613965136
    {
      get
      {
        if (this.\u003573165935118 == null)
          Interlocked.CompareExchange(ref this.\u003573165935118, new object(), (object) null);
        return this.\u003573165935118;
      }
    }

    void IBindingList.\u003775390436374(PropertyDescriptor _param1)
    {
    }

    object IBindingList.\u003175572554838()
    {
      AddingNewEventArgs e = new AddingNewEventArgs();
      this.OnAddingNew(e);
      if (e.NewObject == null)
        throw new \u003215302783352("Could not determine new value to add to '{0}'.".\u003212424921759((IFormatProvider) CultureInfo.InvariantCulture, (object) this.GetType()));
      \u003057567207975 obj = e.NewObject is \u003057567207975 ? (\u003057567207975) e.NewObject : throw new \u003215302783352("New item to be added to collection must be compatible with {0}.".\u003212424921759((IFormatProvider) CultureInfo.InvariantCulture, (object) typeof (\u003057567207975)));
      this.\u003989562133957((object) obj);
      return (object) obj;
    }

    bool IBindingList.\u003597547844294 => true;

    bool IBindingList.\u003702016365786 => true;

    bool IBindingList.\u003683098198338 => true;

    void IBindingList.\u003681228011404(
      PropertyDescriptor _param1,
      ListSortDirection _param2)
    {
      throw new NotSupportedException();
    }

    int IBindingList.\u003138792994161(PropertyDescriptor _param1, object _param2) => throw new NotSupportedException();

    bool IBindingList.\u003255671218971 => false;

    void IBindingList.\u003662227846283(PropertyDescriptor _param1)
    {
    }

    void IBindingList.\u003898695466022() => throw new NotSupportedException();

    ListSortDirection IBindingList.\u003532713043904 => ListSortDirection.Ascending;

    PropertyDescriptor IBindingList.\u003648559503459 => (PropertyDescriptor) null;

    bool IBindingList.\u003877065482802 => true;

    bool IBindingList.\u003664356173241 => false;

    bool IBindingList.\u003898827658612 => false;

    internal static void \u003281340246943(
      \u003169667490145 _param0,
      IEnumerable _param1,
      \u003163041931836 _param2)
    {
      switch (_param2.\u003160885247018)
      {
        case \u003292861151023.Concat:
          IEnumerator enumerator1 = _param1.GetEnumerator();
          try
          {
            while (enumerator1.MoveNext())
            {
              \u003057567207975 current = (\u003057567207975) enumerator1.Current;
              _param0.\u003989562133957((object) current);
            }
            break;
          }
          finally
          {
            if (enumerator1 is IDisposable disposable)
              disposable.Dispose();
          }
        case \u003292861151023.Union:
          HashSet<\u003057567207975> objSet = new HashSet<\u003057567207975>((IEnumerable<\u003057567207975>) _param0, (IEqualityComparer<\u003057567207975>) \u003057567207975.\u003190708639878);
          IEnumerator enumerator2 = _param1.GetEnumerator();
          try
          {
            while (enumerator2.MoveNext())
            {
              \u003057567207975 current = (\u003057567207975) enumerator2.Current;
              if (objSet.Add(current))
                _param0.\u003989562133957((object) current);
            }
            break;
          }
          finally
          {
            if (enumerator2 is IDisposable disposable)
              disposable.Dispose();
          }
        case \u003292861151023.Replace:
          _param0.\u003439680220501();
          IEnumerator enumerator3 = _param1.GetEnumerator();
          try
          {
            while (enumerator3.MoveNext())
            {
              \u003057567207975 current = (\u003057567207975) enumerator3.Current;
              _param0.\u003989562133957((object) current);
            }
            break;
          }
          finally
          {
            if (enumerator3 is IDisposable disposable)
              disposable.Dispose();
          }
        case \u003292861151023.Merge:
          int key = 0;
          IEnumerator enumerator4 = _param1.GetEnumerator();
          try
          {
            while (enumerator4.MoveNext())
            {
              object current = enumerator4.Current;
              if (key < _param0.\u003911121170153)
              {
                if (_param0.get_Item((object) key) is \u003169667490145 obj1)
                  obj1.\u003541808773564(current, _param2);
                else if (current != null)
                {
                  \u003057567207975 obj = \u003169667490145.\u003922333858574(current);
                  if (obj.\u003626381970874 != \u003205973939318.Null)
                    _param0.set_Item((object) key, obj);
                }
              }
              else
                _param0.\u003989562133957(current);
              ++key;
            }
            break;
          }
          finally
          {
            if (enumerator4 is IDisposable disposable)
              disposable.Dispose();
          }
        default:
          throw new ArgumentOutOfRangeException("settings", "Unexpected merge array handling when merging JSON.");
      }
    }
  }
}
