// Decompiled with JetBrains decompiler
// Type: IRefl.Pools.InfoValuePool
// Assembly: IRefl, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A29A65F6-B7ED-422C-83D4-B9EFD61E5F13
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-8e89881e34371e10b7f9cb943183a061aab9b22853cb7192e1ac09401f4cc545.exe

using ProjNet.Services;
using ProjNet.Structs;
using System;
using System.ComponentModel;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace IRefl.Pools
{
  public class InfoValuePool : Form
  {
    private IContainer m_RoleAdvisor;
    private DataGridView _AttrAdvisor;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public InfoValuePool()
    {
      int num1 = 0;
      if (InfoValuePool.FindModel())
        ;
      while (true)
      {
        int num2;
        switch (num1)
        {
          case 0:
            PageAdvisorStructBuilder.PrepareCreator();
            num2 = 5;
            break;
          case 1:
          case 5:
            this.m_RoleAdvisor = (IContainer) null;
            // ISSUE: explicit constructor call
            base.\u002Ector();
            num2 = 4;
            break;
          case 2:
          case 3:
            this._AttrAdvisor.DataSource = (object) CallbackRegistry.RestartAdvisor();
            num2 = 6;
            break;
          case 4:
            this.AssetStatus();
            goto case 2;
          case 6:
            goto label_1;
          default:
            num1 = 2;
            continue;
        }
        num1 = num2;
      }
label_1:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void RevertFacade(object task, EventArgs cust)
    {
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    protected override void Dispose(bool isident)
    {
      int num1 = 3;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          int num3;
          switch (num2)
          {
            case 0:
            case 1:
label_5:
              num3 = this.m_RoleAdvisor != null ? 1 : 0;
              goto label_7;
            case 2:
            case 4:
label_3:
              this.m_RoleAdvisor.Dispose();
              break;
            case 3:
              if (!isident)
              {
                num3 = 0;
                goto label_7;
              }
              else
                goto label_2;
            case 5:
              goto label_8;
            default:
              if (true)
              {
                num2 = 4;
                continue;
              }
              goto label_12;
          }
label_4:
          base.Dispose(isident);
          if (true)
          {
            num2 = 5;
            continue;
          }
          goto label_5;
label_7:
          if (num3 == 0)
            goto label_4;
          else
            goto label_3;
        }
label_2:
        num1 = 0;
      }
label_8:
      return;
label_12:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void AssetStatus()
    {
      int num1 = 5;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
              goto label_2;
            case 1:
              goto label_8;
            case 2:
              goto label_11;
            case 3:
            case 4:
              goto label_3;
            case 5:
              goto label_7;
            case 6:
            case 7:
              this.Name = "ReadAuthorChildForm";
              this.Text = "Authors";
              ((ISupportInitialize) this._AttrAdvisor).EndInit();
              this.ResumeLayout(false);
              if (true)
              {
                num2 = 10;
                continue;
              }
              goto label_11;
            case 8:
              goto label_9;
            case 9:
              goto label_1;
            case 10:
              goto label_12;
            default:
              goto label_6;
          }
        }
label_1:
        this._AttrAdvisor.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize;
        this._AttrAdvisor.Dock = DockStyle.Fill;
        this._AttrAdvisor.Location = new Point(0, 0);
        this._AttrAdvisor.Name = "dataGridView";
        this._AttrAdvisor.ReadOnly = true;
        this._AttrAdvisor.Size = new Size(227, 140);
        this._AttrAdvisor.TabIndex = 0;
        this.AutoScaleDimensions = new SizeF(6f, 13f);
        num1 = 0;
        continue;
label_2:
        this.AutoScaleMode = AutoScaleMode.Font;
        this.AutoSize = true;
        this.ClientSize = new Size(227, 140);
        this.Controls.Add((Control) this._AttrAdvisor);
        num1 = 6;
        continue;
label_3:
        this._AttrAdvisor.AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.AllCells;
        goto label_1;
label_6:
        num1 = 9;
        continue;
label_7:
        this._AttrAdvisor = new DataGridView();
        num1 = 2;
        continue;
label_8:
        this._AttrAdvisor.AllowUserToDeleteRows = false;
        this._AttrAdvisor.AllowUserToResizeColumns = false;
        this._AttrAdvisor.AllowUserToResizeRows = false;
        this._AttrAdvisor.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.Fill;
        num1 = 3;
        continue;
label_9:
        this._AttrAdvisor.AllowUserToAddRows = false;
        num1 = 1;
        continue;
label_11:
        ((ISupportInitialize) this._AttrAdvisor).BeginInit();
        this.SuspendLayout();
        num1 = 8;
      }
label_12:;
    }

    internal static bool StopModel() => true;

    internal static bool FindModel() => false;
  }
}
