// Decompiled with JetBrains decompiler
// Type: MentQ.MentQNumericUpDown
// Assembly: جdk6氏صڤSnb, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DC493AC2-8E19-4B7E-8F8B-A7CB6CD6346F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan-PSW.MSIL.Fareit.gen-125c88c0a34185a8a6c38ba5e7d461ccc5b9d8a1acc87871a618c3e15c32be42.exe

using System;
using System.ComponentModel;
using System.Drawing;
using System.Drawing.Drawing2D;
using System.Windows.Forms;

namespace MentQ
{
  [Category("MentQ")]
  public class MentQNumericUpDown : Control
  {
    public MentQNumericUpDown()
    {
      this.BackColor = Color.White;
      this.SelectedColor = MentQDefaults.MentQBlue;
      this.DoubleBuffered = true;
      this.SetStyle(ControlStyles.UserPaint | ControlStyles.AllPaintingInWmPaint | ControlStyles.CacheText | ControlStyles.OptimizedDoubleBuffer, true);
      this.Padding = new Padding(3);
      this.Size = new Size(90, 24);
      Size buttonSize = this.CalculateButtonSize();
      MentQButton mentQbutton1 = new MentQButton();
      mentQbutton1.Anchor = AnchorStyles.Top | AnchorStyles.Right;
      mentQbutton1.Size = buttonSize;
      mentQbutton1.Location = new Point(this.Width - this.Padding.Right - buttonSize.Width, this.Padding.Top);
      mentQbutton1.Font = new Font("Segoe UI Symbol", 6f);
      mentQbutton1.Text = "\uE010";
      MentQButton mentQbutton2 = mentQbutton1;
      MentQButton mentQbutton3 = new MentQButton();
      mentQbutton3.Anchor = AnchorStyles.Top | AnchorStyles.Right;
      mentQbutton3.Size = buttonSize;
      mentQbutton3.Location = new Point(this.Width - this.Padding.Right - buttonSize.Width, this.Height - this.Padding.Bottom - buttonSize.Height);
      mentQbutton3.Font = new Font("Segoe UI Symbol", 6f);
      mentQbutton3.Text = "\uE011";
      MentQButton mentQbutton4 = mentQbutton3;
      this.InternalNumericUpDown = new NumericUpDown();
      this.InternalNumericUpDown.BackColor = this.BackColor;
      this.InternalNumericUpDown.BorderStyle = BorderStyle.None;
      this.InternalNumericUpDown.Controls.RemoveAt(0);
      this.UpButton = mentQbutton2;
      this.DownButton = mentQbutton4;
      this.UpButton.Click += (EventHandler) ((sender, args) => this.InternalNumericUpDown.UpButton());
      this.DownButton.Click += (EventHandler) ((sender, args) => this.InternalNumericUpDown.DownButton());
      this.Controls.Add((Control) this.InternalNumericUpDown);
      this.InternalNumericUpDown.SendToBack();
      this.Controls.Add((Control) this.UpButton);
      this.UpButton.BringToFront();
      this.Controls.Add((Control) this.DownButton);
      this.DownButton.BringToFront();
    }

    public NumericUpDown InternalNumericUpDown { get; }

    private MentQButton UpButton { get; }

    private MentQButton DownButton { get; }

    public Color SelectedColor { get; set; }

    [Category("Appearance")]
    public Decimal Value
    {
      get => this.InternalNumericUpDown.Value;
      set => this.InternalNumericUpDown.Value = value;
    }

    protected override void OnHandleCreated(EventArgs e)
    {
      this.AdjustSize();
      base.OnHandleCreated(e);
    }

    protected override void OnCreateControl()
    {
      base.OnCreateControl();
      this.MaximumSize = new Size((int) short.MaxValue, 24);
      this.MinimumSize = new Size(0, 24);
    }

    protected override void OnPaddingChanged(EventArgs e)
    {
      this.AdjustSize();
      base.OnPaddingChanged(e);
    }

    protected override void OnSizeChanged(EventArgs e)
    {
      base.OnSizeChanged(e);
      this.AdjustSize();
    }

    private void AdjustSize()
    {
      Padding padding;
      if (this.InternalNumericUpDown != null)
      {
        NumericUpDown internalNumericUpDown1 = this.InternalNumericUpDown;
        int width = this.Width;
        padding = this.Padding;
        int horizontal = padding.Horizontal;
        int num1 = width - horizontal - 5;
        internalNumericUpDown1.Width = num1;
        NumericUpDown internalNumericUpDown2 = this.InternalNumericUpDown;
        padding = this.Padding;
        int left = padding.Left;
        padding = this.Padding;
        int top = padding.Top;
        int height = this.Height;
        padding = this.Padding;
        int vertical = padding.Vertical;
        int num2 = (height - vertical - this.InternalNumericUpDown.Height) / 2;
        int y = top + num2 + 1;
        Point point = new Point(left, y);
        internalNumericUpDown2.Location = point;
      }
      if (this.UpButton == null || this.DownButton == null)
        return;
      Size buttonSize = this.CalculateButtonSize();
      this.UpButton.Size = buttonSize;
      this.DownButton.Size = buttonSize;
      MentQButton downButton = this.DownButton;
      int width1 = this.Width;
      padding = this.Padding;
      int right = padding.Right;
      int x = width1 - right - buttonSize.Width;
      int height1 = this.Height;
      padding = this.Padding;
      int bottom = padding.Bottom;
      int y1 = height1 - bottom - buttonSize.Height;
      Point point1 = new Point(x, y1);
      downButton.Location = point1;
    }

    private Size CalculateButtonSize() => new Size(20, (this.Height - this.Padding.Top - this.Padding.Bottom) / 2 - 1);

    protected override void OnPaint(PaintEventArgs e)
    {
      Graphics graphics = e.Graphics;
      graphics.SmoothingMode = SmoothingMode.HighQuality;
      graphics.Clear(this.BackColor);
      using (SolidBrush solidBrush = new SolidBrush(this.BackColor))
        graphics.FillPath((Brush) solidBrush, GlobalHelpers.GetRoundedRect(new Rectangle(0, 0, this.Width - 1, this.Height - 1), 4));
      using (Pen pen = new Pen(Color.Gray))
        graphics.DrawPath(pen, GlobalHelpers.GetRoundedRect(new Rectangle(0, 0, this.Width - 1, this.Height - 1), 4));
    }
  }
}
