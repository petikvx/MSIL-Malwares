// Decompiled with JetBrains decompiler
// Type: abIg3qdW3UpZqiLUe.IRunnableProjectConfig
// Assembly: bouNMGxVgGi4SRgWO, Version=3.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60
// MVID: 3F6A2AF1-3CCB-4F01-AA36-FA31C2E4CFE8
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Backdoor.MSIL.Agent.gen-bc408b9f362db28b2e931ff336ec5661cc0ce27b0cdc0ce215fec1b7381aca7f.exe

using Microsoft.TemplateEngine.Abstractions;
using Microsoft.TemplateEngine.Abstractions.Mount;
using Microsoft.TemplateEngine.Core.Contracts;
using PgLEPpSpDk54KWT6E;
using S5rLCBT4dvZbpILSB;
using saoIRJkbshzEOA30R;
using System.Collections.Generic;
using Tp3koip8k4uGHU6CO;

namespace abIg3qdW3UpZqiLUe
{
  public interface IRunnableProjectConfig
  {
    IReadOnlyDictionary<string, ckgfOYwQVcmI3lHXN> Parameters { get; }

    IReadOnlyList<KeyValuePair<string, IGlobalRunConfig>> SpecialOperationConfig { get; }

    IReadOnlyDictionary<string, IReadOnlyList<IOperationProvider>> LocalizationOperations { get; }

    IGlobalRunConfig OperationConfig { get; }

    IReadOnlyList<N19aXVav6htZ8iWZQ> Sources { get; }

    string DefaultName { get; }

    string Description { get; }

    string Name { get; }

    IReadOnlyList<string> ShortNameList { get; }

    string Author { get; }

    IReadOnlyDictionary<string, ICacheTag> Tags { get; }

    IReadOnlyDictionary<string, ICacheParameter> CacheParameters { get; }

    IReadOnlyList<string> Classifications { get; }

    string GroupIdentity { get; }

    int Precedence { get; }

    IFile SourceFile { set; }

    string Identity { get; }

    IReadOnlyList<string> IgnoreFileNames { get; }

    IReadOnlyList<IPostActionModel> PostActionModel { get; }

    IReadOnlyList<ICreationPathModel> PrimaryOutputs { get; }

    string GeneratorVersions { get; }

    void Evaluate(
      IParameterSet parameters,
      IVariableCollection rootVariableCollection,
      IFileSystemInfo configFile);

    IReadOnlyDictionary<string, IBaselineInfo> BaselineInfo { get; }

    bool HasScriptRunningPostActions { get; set; }
  }
}
