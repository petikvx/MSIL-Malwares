// Decompiled with JetBrains decompiler
// Type: System.ServiceModel.Web.Configuration.AppSettings
// Assembly: Microsoft.Transactions.Bridge, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 51116F84-6FE2-4BD6-A908-2C88E06F45BB
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.07\HEUR-Trojan.MSIL.Picsys.gen-d64123468b2dcb11e9205288e0a6cb144a448944457a708807b7345a8a766675.exe

using System.Collections.Specialized;
using System.Configuration;

namespace System.ServiceModel.Web.Configuration
{
  internal static class AppSettings
  {
    private const string EnableAutomaticEndpointsCompatabilityString = "wcf:webservicehost:enableautomaticendpointscompatability";
    private const string DisableHtmlErrorPageExceptionHtmlEncodingString = "wcf:web:HtmlErrorPage:DisableExceptionMessageHtmlEncoding";
    private static readonly object appSettingsLock = new object();
    private static bool enableAutomaticEndpointCompat = false;
    private static bool disableHtmlErrorPageExceptionHtmlEncoding = false;
    private static volatile bool settingsInitialized = false;

    public static bool EnableAutomaticEndpointsCompatibility
    {
      get
      {
        AppSettings.EnsureSettingsLoaded();
        return AppSettings.enableAutomaticEndpointCompat;
      }
    }

    public static bool DisableHtmlErrorPageExceptionHtmlEncoding
    {
      get
      {
        AppSettings.EnsureSettingsLoaded();
        return AppSettings.disableHtmlErrorPageExceptionHtmlEncoding;
      }
    }

    private static void EnsureSettingsLoaded()
    {
      if (AppSettings.settingsInitialized)
        return;
      lock (AppSettings.appSettingsLock)
      {
        if (AppSettings.settingsInitialized)
          return;
        NameValueCollection nameValueCollection = (NameValueCollection) null;
        try
        {
          nameValueCollection = ConfigurationManager.AppSettings;
        }
        catch (ConfigurationErrorsException ex)
        {
        }
        finally
        {
          if (nameValueCollection == null || !bool.TryParse(nameValueCollection["wcf:webservicehost:enableautomaticendpointscompatability"], out AppSettings.enableAutomaticEndpointCompat))
            AppSettings.enableAutomaticEndpointCompat = false;
          if (nameValueCollection == null || !bool.TryParse(nameValueCollection["wcf:web:HtmlErrorPage:DisableExceptionMessageHtmlEncoding"], out AppSettings.disableHtmlErrorPageExceptionHtmlEncoding))
            AppSettings.disableHtmlErrorPageExceptionHtmlEncoding = false;
          AppSettings.settingsInitialized = true;
        }
      }
    }
  }
}
