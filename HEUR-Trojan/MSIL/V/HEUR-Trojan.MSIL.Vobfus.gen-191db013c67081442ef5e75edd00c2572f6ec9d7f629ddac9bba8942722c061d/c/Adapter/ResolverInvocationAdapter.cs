// Decompiled with JetBrains decompiler
// Type: c.Adapter.ResolverInvocationAdapter
// Assembly: c, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: CCB3E154-F36D-403E-8019-8861E9AEB8FC
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Vobfus.gen-191db013c67081442ef5e75edd00c2572f6ec9d7f629ddac9bba8942722c061d.exe

using Fireball.Docking;
using GLuaR.Importers;
using System.ComponentModel;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace c.Adapter
{
  public class ResolverInvocationAdapter : DockableWindow
  {
    private IContainer testsWrapper;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public ResolverInvocationAdapter()
    {
      int num = 1;
      if (ResolverInvocationAdapter.CallRegistry())
        goto label_4;
label_1:
      this.AddRule();
      num = 5;
label_4:
      while (true)
      {
        switch (num)
        {
          case 0:
          case 1:
            ImporterMapper.InitAccount();
            if (true)
            {
              num = 3;
              continue;
            }
            goto label_3;
          case 2:
          case 4:
            goto label_1;
          case 3:
            goto label_3;
          case 5:
            goto label_8;
          default:
            if (true)
            {
              num = 4;
              continue;
            }
            goto label_6;
        }
      }
label_3:
      this.testsWrapper = (IContainer) null;
      // ISSUE: explicit constructor call
      base.\u002Ector();
      goto label_1;
label_8:
      return;
label_6:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    protected virtual void Dispose(bool includekey)
    {
      int num1 = 4;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          int num3;
          switch (num2)
          {
            case 0:
            case 4:
              if (includekey)
              {
                if (!ResolverInvocationAdapter.IncludeRegistry())
                {
                  num2 = 3;
                  continue;
                }
                goto case 2;
              }
              else
              {
                num3 = 0;
                goto label_7;
              }
            case 1:
            case 3:
              num3 = this.testsWrapper != null ? 1 : 0;
              goto label_7;
            case 2:
label_3:
              this.testsWrapper.Dispose();
              break;
            case 5:
              goto label_8;
            default:
              goto label_11;
          }
label_4:
          // ISSUE: explicit non-virtual call
          __nonvirtual (((Form) this).Dispose(includekey));
          num2 = 5;
          continue;
label_7:
          if (num3 == 0)
            goto label_4;
          else
            goto label_3;
        }
label_11:
        num1 = 2;
      }
label_8:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void AddRule()
    {
      int num1 = 0;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
              ((Control) this).SuspendLayout();
              if (ResolverInvocationAdapter.CallRegistry())
              {
                num2 = 6;
                continue;
              }
              goto case 5;
            case 1:
            case 6:
              goto label_1;
            case 2:
            case 4:
              goto label_3;
            case 3:
              goto label_2;
            case 5:
              this.TabText = "[ DesignToolbox ]";
              ((Control) this).Text = "[ Toolbox ]";
              ((Control) this).ResumeLayout(false);
              if (true)
              {
                num2 = 7;
                continue;
              }
              goto label_9;
            case 7:
              goto label_11;
            default:
              num2 = 3;
              continue;
          }
        }
label_1:
        ((ContainerControl) this).AutoScaleDimensions = new SizeF(6f, 13f);
        ((ContainerControl) this).AutoScaleMode = AutoScaleMode.Font;
        ((Form) this).ClientSize = new Size(196, 320);
        num1 = 4;
        continue;
label_2:
        ((Form) this).FormBorderStyle = FormBorderStyle.FixedSingle;
        ((Control) this).Name = "DesignToolbox";
        ((Form) this).ShowIcon = false;
        ((Form) this).ShowInTaskbar = false;
        num1 = 5;
        continue;
label_3:
        this.DockableAreas = (DockAreas) 31;
        ((Control) this).DoubleBuffered = true;
        goto label_2;
      }
label_11:
      return;
label_9:;
    }

    internal static bool CallRegistry() => true;

    internal static bool IncludeRegistry() => false;
  }
}
