// Decompiled with JetBrains decompiler
// Type: VenomRAT_HVNC.StreamLibrary.src.JpgCompression
// Assembly: VenomRAT_HVNC, Version=5.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 364FC72B-4DB8-403E-BB7F-732199A12380
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-HackTool.MSIL.Alien.gen-666d190a7059c03b3572dd66e51b8232537a8650bbdcbfbe3f8335c830f3aeae.exe

using System.Drawing;
using System.Drawing.Imaging;
using System.IO;

namespace VenomRAT_HVNC.StreamLibrary.src
{
  public class JpgCompression
  {
    private EncoderParameter parameter;
    private ImageCodecInfo encoderInfo;
    private EncoderParameters encoderParams;

    public JpgCompression(int Quality)
    {
      this.parameter = new EncoderParameter(Encoder.Quality, (long) Quality);
      this.encoderInfo = this.GetEncoderInfo("image/jpeg");
      this.encoderParams = new EncoderParameters(2);
      this.encoderParams.Param[0] = this.parameter;
      this.encoderParams.Param[1] = new EncoderParameter(Encoder.Compression, 2L);
    }

    public byte[] Compress(Bitmap bmp)
    {
      byte[] array;
      using (MemoryStream memoryStream = new MemoryStream())
      {
        bmp.Save((Stream) memoryStream, this.encoderInfo, this.encoderParams);
        array = memoryStream.ToArray();
      }
      return array;
    }

    public void Compress(Bitmap bmp, ref Stream TargetStream) => bmp.Save(TargetStream, this.encoderInfo, this.encoderParams);

    private ImageCodecInfo GetEncoderInfo(string mimeType)
    {
      ImageCodecInfo[] imageEncoders = ImageCodecInfo.GetImageEncoders();
      int num = imageEncoders.Length - 1;
      for (int index = 0; index <= num; ++index)
      {
        if (imageEncoders[index].MimeType == mimeType)
          return imageEncoders[index];
      }
      return (ImageCodecInfo) null;
    }
  }
}
