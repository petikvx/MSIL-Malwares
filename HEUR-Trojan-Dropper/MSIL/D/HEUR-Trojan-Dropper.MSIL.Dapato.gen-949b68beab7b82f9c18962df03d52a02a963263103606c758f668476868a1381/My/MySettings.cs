// Decompiled with JetBrains decompiler
// Type: AltiumManager.My.MySettings
// Assembly: LeOcHwILpefYMF8, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A7C159C0-2645-0515-18CC-33AA0158F2C6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.06-msil\HEUR-Trojan-Dropper.MSIL.Dapato.gen-949b68beab7b82f9c18962df03d52a02a963263103606c758f668476868a1381.exe

using Microsoft.VisualBasic.ApplicationServices;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Configuration;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Threading;

namespace AltiumManager.My
{
  [CompilerGenerated]
  [GeneratedCode("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "16.0.0.0")]
  [EditorBrowsable(EditorBrowsableState.Advanced)]
  internal sealed class MySettings : ApplicationSettingsBase
  {
    private static MySettings defaultInstance = (MySettings) SettingsBase.Synchronized((SettingsBase) new MySettings());
    private static bool addedHandler;
    private static object addedHandlerLockObject = RuntimeHelpers.GetObjectValue(new object());

    [DebuggerNonUserCode]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    private static void \uF0D4\uED6D\uEC52\uE70D\uF4F1\uF46B\uF0DD\uE2ED\uEF21\uE87C\uEE04\uE7E7(
      object _param0,
      EventArgs _param1)
    {
      if ((!\uEF33\uF205\uE560\uF33F\uE7F1\uEFE2\uEF15\uE192\uE066\uF727\uF51A\uEAE7.\uE681\uF0E4\uF481\uF504\uE501\uF2E5\uE299\uE5CD\uE41E\uE684\uF872\uF39E.SaveMySettingsOnExit ? 1 : 0) != 0)
        return;
label_7:
      int num1 = AltiumDatabaseDataSet.ReleasedComponentsRowChangeEvent.\uE4B1\uE099\uEB2D\uF713\uEFE2\uE494\uE2B4\uEB29\uE7EC\uF1B8\uE270\uF6F8(77);
      int num2 = -4;
      while (true)
      {
        switch ((num2 ^ 81) + 86)
        {
          case 0:
            switch (num1 + 72)
            {
              case 0:
                \uEF33\uF205\uE560\uF33F\uE7F1\uEFE2\uEF15\uE192\uE066\uF727\uF51A\uEAE8.\uE7BE\uEA53\uE98E\uE08E\uF0F8\uEBAB\uEB88\uE029\uEFC0\uF3F5\uE46C\uE152.Save();
                num1 = -11;
                goto label_1;
              case 1:
                num1 = -9;
                goto label_1;
              case 2:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MySettings.\u002Ector);
                num1 = AltiumDatabaseDataSet.ReleasedComponentsRowChangeEvent.\uE4B1\uE099\uEB2D\uF713\uEFE2\uE494\uE2B4\uEB29\uE7EC\uF1B8\uE270\uF6F7(65);
                goto label_1;
              case 3:
                goto label_12;
              default:
                num2 = -3;
                continue;
            }
          case 1:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MySettings.\u002Ecctor);
            num2 = -6;
            continue;
          case 2:
            goto label_7;
          case 3:
label_1:
            num1 ^= 76;
            break;
        }
        num2 = AltiumDatabaseDataSet.\uF5B4\uEBB6\uED16\uE0FF\uE59B\uF026\uEFAB\uE051\uE189\uE10C\uF7F9\uF6D6(68);
      }
label_12:;
    }

    public static MySettings \uE370\uE531\uE2F7\uE630\uE607\uF43B\uF298\uF29B\uF6A4\uE212\uE9B9\uE7C5
    {
      get
      {
        if ((MySettings.addedHandler ? 1 : 0) == 0)
        {
          object handlerLockObject = MySettings.addedHandlerLockObject;
          ObjectFlowControl.CheckForSyncLockOnValueType(handlerLockObject);
          bool lockTaken = false;
          try
          {
            Monitor.Enter(handlerLockObject, ref lockTaken);
label_4:
            int num1 = 29;
            bool flag;
            while (true)
            {
              switch (num1 ^ 80)
              {
                case 77:
                  num1 = 0;
                  continue;
                case 78:
                  RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MySettings.\u002Ecctor);
                  num1 = 30;
                  continue;
                case 79:
                  if (flag)
                  {
                    num1 = 1;
                    continue;
                  }
                  goto label_11;
                case 80:
                  flag = !MySettings.addedHandler;
                  num1 = 31;
                  continue;
                case 81:
                  goto label_10;
                default:
                  goto label_4;
              }
            }
label_10:
            int num2 = 0;
            goto label_12;
label_11:
            num2 = 1;
label_12:
            if (num2 == 0)
            {
              \uEF33\uF205\uE560\uF33F\uE7F1\uEFE2\uEF15\uE192\uE066\uF727\uF51A\uEAE7.\uE681\uF0E4\uF481\uF504\uE501\uF2E5\uE299\uE5CD\uE41E\uE684\uF872\uF39E.Shutdown += (ShutdownEventHandler) ((_param0, _param1) =>
              {
                if ((!\uEF33\uF205\uE560\uF33F\uE7F1\uEFE2\uEF15\uE192\uE066\uF727\uF51A\uEAE7.\uE681\uF0E4\uF481\uF504\uE501\uF2E5\uE299\uE5CD\uE41E\uE684\uF872\uF39E.SaveMySettingsOnExit ? 1 : 0) != 0)
                  return;
label_7:
                int num3 = AltiumDatabaseDataSet.ReleasedComponentsRowChangeEvent.\uE4B1\uE099\uEB2D\uF713\uEFE2\uE494\uE2B4\uEB29\uE7EC\uF1B8\uE270\uF6F8(77);
                int num4 = -4;
                while (true)
                {
                  switch ((num4 ^ 81) + 86)
                  {
                    case 0:
                      switch (num3 + 72)
                      {
                        case 0:
                          \uEF33\uF205\uE560\uF33F\uE7F1\uEFE2\uEF15\uE192\uE066\uF727\uF51A\uEAE8.\uE7BE\uEA53\uE98E\uE08E\uF0F8\uEBAB\uEB88\uE029\uEFC0\uF3F5\uE46C\uE152.Save();
                          num3 = -11;
                          goto label_1;
                        case 1:
                          num3 = -9;
                          goto label_1;
                        case 2:
                          RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MySettings.\u002Ector);
                          num3 = AltiumDatabaseDataSet.ReleasedComponentsRowChangeEvent.\uE4B1\uE099\uEB2D\uF713\uEFE2\uE494\uE2B4\uEB29\uE7EC\uF1B8\uE270\uF6F7(65);
                          goto label_1;
                        case 3:
                          goto label_12;
                        default:
                          num4 = -3;
                          continue;
                      }
                    case 1:
                      RuntimeMethodHandle runtimeMethodHandle3 = __methodref (MySettings.\u002Ecctor);
                      num4 = -6;
                      continue;
                    case 2:
                      goto label_7;
                    case 3:
label_1:
                      num3 ^= 76;
                      break;
                  }
                  num4 = AltiumDatabaseDataSet.\uF5B4\uEBB6\uED16\uE0FF\uE59B\uF026\uEFAB\uE051\uE189\uE10C\uF7F9\uF6D6(68);
                }
label_12:;
              });
label_15:
              int num5 = AltiumDatabaseDataSet.ReleasedComponentsRowChangeEvent.\uE4B1\uE099\uEB2D\uF713\uEFE2\uE494\uE2B4\uEB29\uE7EC\uF1B8\uE270\uF6F8(92);
              while (true)
              {
                switch ((num5 ^ 72) + 82)
                {
                  case 0:
                    RuntimeMethodHandle runtimeMethodHandle4 = __methodref (MySettings.get_AltiumDatabaseConnectionString1);
                    num5 = -26;
                    continue;
                  case 1:
                    num5 = AltiumDatabaseDataSet.ReleasedComponentsRowChangeEvent.\uE4B1\uE099\uEB2D\uF713\uEFE2\uE494\uE2B4\uEB29\uE7EC\uF1B8\uE270\uF6F8(90);
                    continue;
                  case 2:
                    MySettings.addedHandler = true;
                    num5 = -7;
                    continue;
                  case 3:
                    goto label_22;
                  default:
                    goto label_15;
                }
              }
            }
          }
          finally
          {
            if ((!lockTaken ? 1 : 0) == 0)
              Monitor.Exit(handlerLockObject);
          }
        }
label_22:
        MySettings defaultInstance = MySettings.defaultInstance;
        return defaultInstance;
      }
    }

    [ApplicationScopedSetting]
    [DebuggerNonUserCode]
    [SpecialSetting(SpecialSetting.ConnectionString)]
    [DefaultSettingValue("Data Source=(LocalDB)\\v11.0;AttachDbFilename=|DataDirectory|\\AltiumDatabase.mdf;Integrated Security=True")]
    public string AltiumDatabaseConnectionString
    {
      get
      {
label_4:
        int num1 = 60;
        int num2 = 4;
        string connectionString;
        while (true)
        {
          switch (num2 ^ 88)
          {
            case 89:
              goto label_4;
            case 90:
              switch (num1)
              {
                case 97:
                case 100:
                  goto label_10;
                case 98:
                  RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MySettings.\u002Ecctor);
                  num1 = 61;
                  goto label_1;
                case 99:
                  connectionString = Conversions.ToString(this[nameof (AltiumDatabaseConnectionString)]);
                  num1 = 62;
                  goto label_1;
                default:
                  num2 = 1;
                  continue;
              }
            case 91:
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MySettings.get_AltiumDatabaseConnectionString);
              num2 = 3;
              continue;
            case 92:
label_1:
              num1 ^= 95;
              break;
          }
          num2 = 2;
        }
label_10:
        return connectionString;
      }
    }

    [ApplicationScopedSetting]
    [DebuggerNonUserCode]
    [SpecialSetting(SpecialSetting.ConnectionString)]
    [DefaultSettingValue("Data Source=(LocalDB)\\v11.0;AttachDbFilename=N:\\Altium\\Database\\AltiumDatabase.mdf;Integrated Security=True;Connect Timeout=30")]
    public string AltiumDatabaseConnectionString1
    {
      get
      {
label_4:
        int num1 = AltiumDatabaseDataSet.ReleasedComponentsRowChangeEvent.\uE4B1\uE099\uEB2D\uF713\uEFE2\uE494\uE2B4\uEB29\uE7EC\uF1B8\uE270\uF6F7(65);
        int num2 = 1;
        string connectionString1;
        while (true)
        {
          switch (num2 ^ 91)
          {
            case 87:
              goto label_4;
            case 88:
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MySettings.get_AltiumDatabaseConnectionString1);
              num2 = 3;
              continue;
            case 89:
              switch (num1 + 87)
              {
                case 0:
                  RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MySettings.\uF0D4\uED6D\uEC52\uE70D\uF4F1\uF46B\uF0DD\uE2ED\uEF21\uE87C\uEE04\uE7E7);
                  num1 = AltiumDatabaseDataSet.ReleasedComponentsRowChangeEvent.\uE4B1\uE099\uEB2D\uF713\uEFE2\uE494\uE2B4\uEB29\uE7EC\uF1B8\uE270\uF6F8(77);
                  goto label_1;
                case 1:
                case 3:
                  goto label_10;
                case 2:
                  connectionString1 = Conversions.ToString(this[nameof (AltiumDatabaseConnectionString1)]);
                  num1 = -9;
                  goto label_1;
                default:
                  num2 = 12;
                  continue;
              }
            case 90:
label_1:
              num1 ^= 93;
              break;
          }
          num2 = 2;
        }
label_10:
        return connectionString1;
      }
    }
  }
}
