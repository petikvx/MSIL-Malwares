// Decompiled with JetBrains decompiler
// Type: Cytotechnologist.Dice
// Assembly: CriticalHand, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 8F3AACC8-AAA3-4E3C-B88D-04522F6F341D
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-894cebc6da151cbe64ab4094b2e779f433dc0865ba1cff8063747ca407454629.exe

using System;
using System.Runtime.InteropServices;

namespace Cytotechnologist
{
  public class Dice
  {
    private readonly Random _random;

    public Dice() => this._random = Dice.\u200E⁬⁭‏‎⁭‫⁬⁬‬⁬‪‍​‎⁫‭‎⁭⁭⁮‭‬‭‍‪​‪‫‮⁯⁮‭‪⁫‪‫‬⁬⁬‮((int) DateTime.Now.Ticks);

    public bool Roll(float chance)
    {
      double num1 = Dice.\u202B⁮⁯‬‭‫⁮‮‏⁯⁫⁬⁪⁯‌⁬‬‮⁭⁯‌‮‫‎‎⁮‏⁪‏‍‪‮⁪‭‎‌⁪‍‭⁬‮(this._random);
label_1:
      int num2 = 1460003496;
      bool flag;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num2 ^ 1765241773)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            flag = num1 <= (double) chance;
            num2 = (int) num3 * 1733242990 ^ -883796575;
            continue;
          case 2:
            num2 = (int) num3 * 359074163 ^ -576628172;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    static Random \u200E⁬⁭‏‎⁭‫⁬⁬‬⁬‪‍​‎⁫‭‎⁭⁭⁮‭‬‭‍‪​‪‫‮⁯⁮‭‪⁫‪‫‬⁬⁬‮([In] int obj0) => new Random(obj0);

    static double \u202B⁮⁯‬‭‫⁮‮‏⁯⁫⁬⁪⁯‌⁬‬‮⁭⁯‌‮‫‎‎⁮‏⁪‏‍‪‮⁪‭‎‌⁪‍‭⁬‮([In] Random obj0) => obj0.NextDouble();
  }
}
