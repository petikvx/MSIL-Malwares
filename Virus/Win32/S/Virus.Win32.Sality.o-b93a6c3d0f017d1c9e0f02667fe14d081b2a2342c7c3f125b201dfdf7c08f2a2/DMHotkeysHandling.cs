// Decompiled with JetBrains decompiler
// Type: DMHotkeysHandling
// Assembly: Toggle, Version=1.2.11.0, Culture=neutral, PublicKeyToken=null
// MVID: 153CC43F-2BBE-46AD-9359-CBBEFED04D2C
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Virus.Win32.Sality.o-b93a6c3d0f017d1c9e0f02667fe14d081b2a2342c7c3f125b201dfdf7c08f2a2.exe

using ATI.ACE.ACE.Graphics.DisplaysManager.Shared;
using ATI.ACE.CLI.Caste.Graphics.Shared;
using ATI.ACE.CLI.Foundation;
using ATI.ACE.LOG.Foundation;
using System;
using System.Collections;

internal sealed class DMHotkeysHandling
{
  internal static bool Rotate_Current(
    ANGLES angles,
    IGraphicsCaste iGraphicsCaste,
    SGraphicsAdapter sGraphicsAdapter,
    IComponent iComponent)
  {
    bool flag = false;
    try
    {
      if (((SAdapter) sGraphicsAdapter).active && sGraphicsAdapter.displaysManagerRotationSupported && !sGraphicsAdapter.displaysManagerInfo.onDeviceNotConnected && ((SPropertySetting_MODEINFO) sGraphicsAdapter.displaysManagerInfo.mode.Control).T.orientation != angles)
      {
        DM_INFO dmInfo = new DM_INFO(((SAdapter) sGraphicsAdapter).index, ((SPropertySetting_bool) sGraphicsAdapter.displaysManagerInfo.active.Control).T, ((SPropertySetting_bool) sGraphicsAdapter.displaysManagerInfo.primary.Control).T, ((SPropertySetting_MODEINFO) sGraphicsAdapter.displaysManagerInfo.mode.Control).T, ((SPropertySetting_MAPPINGINFO) sGraphicsAdapter.displaysManagerInfo.mapping.Control).T, false);
        dmInfo.modeinfo.orientation = angles;
        if ((((SAdapter) sGraphicsAdapter).iAdapter as IGraphicsAdapter).ValidateModeInList(dmInfo.modeinfo))
        {
          ArrayList arrayList = new ArrayList();
          arrayList.Add((object) dmInfo);
          flag = true;
          iGraphicsCaste.RequestDisplaysManagerMultipleAssign(arrayList);
        }
      }
      if (flag)
        iComponent.Apply(true);
    }
    catch (Exception ex)
    {
      Services.Exception(ex);
    }
    return flag;
  }

  internal static bool ToggleRotation0_180(
    IGraphicsCaste iGraphicsCaste,
    SGraphicsAdapter sGraphicsAdapter,
    IComponent iComponent)
  {
    bool flag = false;
    try
    {
      if (((SAdapter) sGraphicsAdapter).active && sGraphicsAdapter.displaysManagerRotationSupported && !sGraphicsAdapter.displaysManagerInfo.onDeviceNotConnected)
      {
        DM_INFO dmInfo = new DM_INFO(((SAdapter) sGraphicsAdapter).index, ((SPropertySetting_bool) sGraphicsAdapter.displaysManagerInfo.active.Control).T, ((SPropertySetting_bool) sGraphicsAdapter.displaysManagerInfo.primary.Control).T, ((SPropertySetting_MODEINFO) sGraphicsAdapter.displaysManagerInfo.mode.Control).C, ((SPropertySetting_MAPPINGINFO) sGraphicsAdapter.displaysManagerInfo.mapping.Control).T, false);
        ANGLES orientation = dmInfo.modeinfo.orientation;
        if (orientation <= 90)
        {
          if (orientation != 0)
          {
            if (orientation == 90)
              dmInfo.modeinfo.orientation = (ANGLES) 0;
          }
          else
            dmInfo.modeinfo.orientation = (ANGLES) 180;
        }
        else if (orientation != 180)
        {
          if (orientation == 270)
            dmInfo.modeinfo.orientation = (ANGLES) 0;
        }
        else
          dmInfo.modeinfo.orientation = (ANGLES) 0;
        if ((((SAdapter) sGraphicsAdapter).iAdapter as IGraphicsAdapter).ValidateModeInList(dmInfo.modeinfo))
        {
          ArrayList arrayList = new ArrayList();
          arrayList.Add((object) dmInfo);
          flag = true;
          iGraphicsCaste.RequestDisplaysManagerMultipleAssign(arrayList);
        }
      }
      if (flag)
        iComponent.Apply(true);
    }
    catch (Exception ex)
    {
      Services.Exception(ex);
    }
    return flag;
  }

  internal static bool SwapDisplayMapping(
    IGraphicsCaste iGraphicsCaste,
    SGraphicsAdapter sGraphicsAdapter,
    IComponent iComponent)
  {
    bool flag = false;
    try
    {
      if (sGraphicsAdapter.ATISpecific && ((SAdapter) sGraphicsAdapter).active && sGraphicsAdapter.displaysManagerInfo.swapDeviceSupported)
      {
        SGraphicsAdapter sgraphicsAdapter = sGraphicsAdapter;
        MANNERISM manner = ((SPropertySetting_MAPPINGINFO) sgraphicsAdapter.displaysManagerInfo.mapping.Control).T.linkInfo.manner;
        if (manner == 1 || manner == 7)
          sgraphicsAdapter = ((ICaste) iGraphicsCaste).GetSAdapter(sgraphicsAdapter.displaysManagerInfo.firstControllerDEMAdapterIndex) as SGraphicsAdapter;
        DM_INFO dmInfo = new DM_INFO(((SAdapter) sgraphicsAdapter).index, ((SPropertySetting_bool) sgraphicsAdapter.displaysManagerInfo.active.Control).T, ((SPropertySetting_bool) sgraphicsAdapter.displaysManagerInfo.primary.Control).T, ((SPropertySetting_MODEINFO) sgraphicsAdapter.displaysManagerInfo.mode.Control).C, ((SPropertySetting_MAPPINGINFO) sgraphicsAdapter.displaysManagerInfo.mapping.Control).T, false);
        dmInfo.mappinginfo.firstController.Clear();
        for (int index = 0; index < ((SPropertySetting_MAPPINGINFO) sgraphicsAdapter.displaysManagerInfo.mapping.Control).C.secondController.Count; ++index)
          dmInfo.mappinginfo.firstController.Add((object) (int) ((SPropertySetting_MAPPINGINFO) sgraphicsAdapter.displaysManagerInfo.mapping.Control).C.secondController[index]);
        dmInfo.mappinginfo.secondController.Clear();
        for (int index = 0; index < ((SPropertySetting_MAPPINGINFO) sgraphicsAdapter.displaysManagerInfo.mapping.Control).C.firstController.Count; ++index)
          dmInfo.mappinginfo.secondController.Add((object) (int) ((SPropertySetting_MAPPINGINFO) sgraphicsAdapter.displaysManagerInfo.mapping.Control).C.firstController[index]);
        ArrayList arrayList = new ArrayList();
        arrayList.Add((object) dmInfo);
        flag = true;
        iGraphicsCaste.RequestDisplaysManagerMultipleAssign(arrayList);
      }
      if (flag)
        iComponent.Apply(true);
    }
    catch (Exception ex)
    {
      Services.Exception(ex);
    }
    return flag;
  }

  internal static bool SwitchAmongstDisplay(
    IGraphicsCaste iGraphicsCaste,
    SGraphicsAdapter sGraphicsAdapter,
    IComponent iComponent)
  {
    bool flag = false;
    try
    {
      if (sGraphicsAdapter.ATISpecific)
      {
        if (((SAdapter) sGraphicsAdapter).active)
        {
          switch ((int) ((SPropertySetting_MAPPINGINFO) sGraphicsAdapter.displaysManagerInfo.mapping.Control).C.linkInfo.manner)
          {
            case 0:
              DM_INFO dmInfo1 = new DM_INFO(((SAdapter) sGraphicsAdapter).index, ((SPropertySetting_bool) sGraphicsAdapter.displaysManagerInfo.active.Control).T, ((SPropertySetting_bool) sGraphicsAdapter.displaysManagerInfo.primary.Control).T, ((SPropertySetting_MODEINFO) sGraphicsAdapter.displaysManagerInfo.mode.Control).T, ((SPropertySetting_MAPPINGINFO) sGraphicsAdapter.displaysManagerInfo.mapping.Control).C, false);
              if (1 <= dmInfo1.mappinginfo.firstController.Count)
              {
                int num1 = (int) dmInfo1.mappinginfo.firstController[0];
                int num2 = -1;
                for (int index = 0; index < sGraphicsAdapter.displaysManagerInfo.allMappedAndOffConnectedDisplays.Length; ++index)
                {
                  if (num1 == sGraphicsAdapter.displaysManagerInfo.allMappedAndOffConnectedDisplays[index])
                  {
                    num2 = index;
                    break;
                  }
                }
                int index1 = -1 == num2 || num2 + 1 >= sGraphicsAdapter.displaysManagerInfo.allMappedAndOffConnectedDisplays.Length ? 0 : num2 + 1;
                dmInfo1.mappinginfo.firstController.Clear();
                dmInfo1.mappinginfo.firstController.Add((object) sGraphicsAdapter.displaysManagerInfo.allMappedAndOffConnectedDisplays[index1]);
                dmInfo1.mappinginfo.secondController.Clear();
              }
              else if (1 <= dmInfo1.mappinginfo.secondController.Count)
              {
                int num3 = (int) dmInfo1.mappinginfo.secondController[0];
                int num4 = -1;
                for (int index = 0; index < sGraphicsAdapter.displaysManagerInfo.allMappedAndOffConnectedDisplays.Length; ++index)
                {
                  if (num3 == sGraphicsAdapter.displaysManagerInfo.allMappedAndOffConnectedDisplays[index])
                  {
                    num4 = index;
                    break;
                  }
                }
                int index2 = -1 == num4 || num4 + 1 >= sGraphicsAdapter.displaysManagerInfo.allMappedAndOffConnectedDisplays.Length ? 0 : num4 + 1;
                dmInfo1.mappinginfo.secondController.Clear();
                dmInfo1.mappinginfo.secondController.Add((object) sGraphicsAdapter.displaysManagerInfo.allMappedAndOffConnectedDisplays[index2]);
                dmInfo1.mappinginfo.firstController.Clear();
              }
              ArrayList arrayList1 = new ArrayList();
              arrayList1.Add((object) dmInfo1);
              flag = true;
              iGraphicsCaste.RequestDisplaysManagerMultipleAssign(arrayList1);
              break;
            case 1:
              int index3 = ((SAdapter) sGraphicsAdapter).index;
              int num5 = ((SAdapter) sGraphicsAdapter).index != sGraphicsAdapter.displaysManagerInfo.firstControllerDEMAdapterIndex ? sGraphicsAdapter.displaysManagerInfo.firstControllerDEMAdapterIndex : sGraphicsAdapter.displaysManagerInfo.secondControllerDEMAdapterIndex;
              if (((SPropertySetting_bool) (((ICaste) iGraphicsCaste).GetSAdapter(num5) as SGraphicsAdapter).displaysManagerInfo.primary.Control).C)
                iGraphicsCaste.RequestSetPrimaryLater(((SAdapter) sGraphicsAdapter).index);
              iGraphicsCaste.RequestDeactivateLater(num5);
              flag = true;
              break;
            case 2:
            case 4:
            case 5:
              DM_INFO dmInfo2 = new DM_INFO(((SAdapter) sGraphicsAdapter).index, ((SPropertySetting_bool) sGraphicsAdapter.displaysManagerInfo.active.Control).T, ((SPropertySetting_bool) sGraphicsAdapter.displaysManagerInfo.primary.Control).T, ((SPropertySetting_MODEINFO) sGraphicsAdapter.displaysManagerInfo.mode.Control).T, ((SPropertySetting_MAPPINGINFO) sGraphicsAdapter.displaysManagerInfo.mapping.Control).C, false);
              dmInfo2.mappinginfo.secondController.Clear();
              dmInfo2.mappinginfo.linkInfo.manner = (MANNERISM) 0;
              ArrayList arrayList2 = new ArrayList();
              arrayList2.Add((object) dmInfo2);
              flag = true;
              iGraphicsCaste.RequestDisplaysManagerMultipleAssign(arrayList2);
              break;
            case 3:
              DM_INFO dmInfo3 = new DM_INFO(((SAdapter) sGraphicsAdapter).index, ((SPropertySetting_bool) sGraphicsAdapter.displaysManagerInfo.active.Control).T, ((SPropertySetting_bool) sGraphicsAdapter.displaysManagerInfo.primary.Control).T, ((SPropertySetting_MODEINFO) sGraphicsAdapter.displaysManagerInfo.mode.Control).T, ((SPropertySetting_MAPPINGINFO) sGraphicsAdapter.displaysManagerInfo.mapping.Control).C, false);
              if (1 <= dmInfo3.mappinginfo.firstController.Count)
                dmInfo3.mappinginfo.firstController.RemoveRange(1, dmInfo3.mappinginfo.firstController.Count - 1);
              else if (1 <= dmInfo3.mappinginfo.secondController.Count)
                dmInfo3.mappinginfo.secondController.RemoveRange(1, dmInfo3.mappinginfo.secondController.Count - 1);
              dmInfo3.mappinginfo.secondController.Clear();
              dmInfo3.mappinginfo.linkInfo.manner = (MANNERISM) 0;
              ArrayList arrayList3 = new ArrayList();
              arrayList3.Add((object) dmInfo3);
              flag = true;
              iGraphicsCaste.RequestDisplaysManagerMultipleAssign(arrayList3);
              break;
            case 6:
            case 8:
            case 9:
              DM_INFO dmInfo4 = new DM_INFO(((SAdapter) sGraphicsAdapter).index, ((SPropertySetting_bool) sGraphicsAdapter.displaysManagerInfo.active.Control).T, ((SPropertySetting_bool) sGraphicsAdapter.displaysManagerInfo.primary.Control).T, ((SPropertySetting_MODEINFO) sGraphicsAdapter.displaysManagerInfo.mode.Control).T, ((SPropertySetting_MAPPINGINFO) sGraphicsAdapter.displaysManagerInfo.mapping.Control).C, false);
              if (1 < dmInfo4.mappinginfo.firstController.Count)
                dmInfo4.mappinginfo.firstController.RemoveRange(1, dmInfo4.mappinginfo.firstController.Count - 1);
              dmInfo4.mappinginfo.secondController.Clear();
              dmInfo4.mappinginfo.linkInfo.manner = (MANNERISM) 0;
              ArrayList arrayList4 = new ArrayList();
              arrayList4.Add((object) dmInfo4);
              flag = true;
              iGraphicsCaste.RequestDisplaysManagerMultipleAssign(arrayList4);
              break;
            case 7:
              int num6 = 0;
              int controllerDemAdapterIndex;
              if (((SAdapter) sGraphicsAdapter).index == sGraphicsAdapter.displaysManagerInfo.firstControllerDEMAdapterIndex)
              {
                controllerDemAdapterIndex = sGraphicsAdapter.displaysManagerInfo.secondControllerDEMAdapterIndex;
                num6 = 1;
              }
              else
                controllerDemAdapterIndex = sGraphicsAdapter.displaysManagerInfo.firstControllerDEMAdapterIndex;
              SGraphicsAdapter sadapter = ((ICaste) iGraphicsCaste).GetSAdapter(controllerDemAdapterIndex) as SGraphicsAdapter;
              DM_INFO dmInfo5 = new DM_INFO(((SAdapter) sGraphicsAdapter).index, ((SPropertySetting_bool) sGraphicsAdapter.displaysManagerInfo.active.Control).T, ((SPropertySetting_bool) sGraphicsAdapter.displaysManagerInfo.primary.Control).T, ((SPropertySetting_MODEINFO) sGraphicsAdapter.displaysManagerInfo.mode.Control).T, ((SPropertySetting_MAPPINGINFO) sGraphicsAdapter.displaysManagerInfo.mapping.Control).C, false);
              DM_INFO dmInfo6 = new DM_INFO(((SAdapter) sadapter).index, false, false, ((SPropertySetting_MODEINFO) sadapter.displaysManagerInfo.mode.Control).T, ((SPropertySetting_MAPPINGINFO) sadapter.displaysManagerInfo.mapping.Control).T, false);
              if (((SPropertySetting_bool) sadapter.displaysManagerInfo.primary.Control).C)
                dmInfo5.isPrimary = true;
              if (num6 == 0)
              {
                dmInfo5.mappinginfo.firstController.Clear();
                if (1 < dmInfo5.mappinginfo.secondController.Count)
                  dmInfo5.mappinginfo.secondController.RemoveRange(1, dmInfo5.mappinginfo.secondController.Count - 1);
              }
              else
              {
                dmInfo5.mappinginfo.secondController.Clear();
                if (1 < dmInfo5.mappinginfo.firstController.Count)
                  dmInfo5.mappinginfo.firstController.RemoveRange(1, dmInfo5.mappinginfo.firstController.Count - 1);
              }
              dmInfo5.mappinginfo.linkInfo.controllerIndexFirst = ((SAdapter) sGraphicsAdapter).index;
              dmInfo5.mappinginfo.linkInfo.controllerIndexSecond = ((SAdapter) sGraphicsAdapter).index;
              dmInfo5.mappinginfo.linkInfo.manner = (MANNERISM) 0;
              ArrayList arrayList5 = new ArrayList();
              arrayList5.Add((object) dmInfo5);
              arrayList5.Add((object) dmInfo6);
              flag = true;
              iGraphicsCaste.RequestDisplaysManagerMultipleAssign(arrayList5);
              break;
          }
          if (flag)
            iComponent.Apply(true);
        }
      }
    }
    catch (Exception ex)
    {
      Services.Exception(ex);
    }
    return flag;
  }

  internal static bool EnableCloneMode(
    IGraphicsCaste iGraphicsCaste,
    SGraphicsAdapter sGraphicsAdapter,
    IComponent iComponent)
  {
    bool flag1 = false;
    try
    {
      if (sGraphicsAdapter.ATISpecific && ((SAdapter) sGraphicsAdapter).active)
      {
        switch ((int) ((SPropertySetting_MAPPINGINFO) sGraphicsAdapter.displaysManagerInfo.mapping.Control).C.linkInfo.manner)
        {
          case 0:
            DM_INFO dmInfo1 = new DM_INFO(((SAdapter) sGraphicsAdapter).index, ((SPropertySetting_bool) sGraphicsAdapter.displaysManagerInfo.active.Control).T, ((SPropertySetting_bool) sGraphicsAdapter.displaysManagerInfo.primary.Control).T, ((SPropertySetting_MODEINFO) sGraphicsAdapter.displaysManagerInfo.mode.Control).T, ((SPropertySetting_MAPPINGINFO) sGraphicsAdapter.displaysManagerInfo.mapping.Control).C, false);
            if (1 <= dmInfo1.mappinginfo.firstController.Count)
            {
              bool flag2 = false;
              for (int index = 0; index < sGraphicsAdapter.displaysManagerInfo.secondControllerList.Length; ++index)
              {
                ArrayList secondController = sGraphicsAdapter.displaysManagerInfo.secondControllerList[index];
                if (1 == secondController.Count)
                {
                  dmInfo1.mappinginfo.secondController.Clear();
                  dmInfo1.mappinginfo.secondController.Add((object) (int) secondController[0]);
                  dmInfo1.mappinginfo.linkInfo.manner = (MANNERISM) 2;
                  ArrayList arrayList = new ArrayList();
                  arrayList.Add((object) dmInfo1);
                  flag1 = true;
                  iGraphicsCaste.RequestDisplaysManagerMultipleAssign(arrayList);
                  flag2 = true;
                  break;
                }
              }
              if (!flag2)
              {
                for (int index = 0; index < sGraphicsAdapter.displaysManagerInfo.firstControllerList.Length; ++index)
                {
                  ArrayList firstController = sGraphicsAdapter.displaysManagerInfo.firstControllerList[index];
                  if (2 == firstController.Count)
                  {
                    dmInfo1.mappinginfo.firstController.Clear();
                    dmInfo1.mappinginfo.firstController.Add((object) (int) firstController[0]);
                    dmInfo1.mappinginfo.firstController.Add((object) (int) firstController[1]);
                    dmInfo1.mappinginfo.linkInfo.manner = (MANNERISM) 3;
                    ArrayList arrayList = new ArrayList();
                    arrayList.Add((object) dmInfo1);
                    flag1 = true;
                    iGraphicsCaste.RequestDisplaysManagerMultipleAssign(arrayList);
                    break;
                  }
                }
                break;
              }
              break;
            }
            if (1 <= dmInfo1.mappinginfo.secondController.Count)
            {
              bool flag3 = false;
              for (int index = 0; index < sGraphicsAdapter.displaysManagerInfo.firstControllerList.Length; ++index)
              {
                ArrayList firstController = sGraphicsAdapter.displaysManagerInfo.firstControllerList[index];
                if (1 == firstController.Count)
                {
                  dmInfo1.mappinginfo.firstController.Clear();
                  dmInfo1.mappinginfo.firstController.Add((object) (int) firstController[0]);
                  dmInfo1.mappinginfo.linkInfo.manner = (MANNERISM) 2;
                  ArrayList arrayList = new ArrayList();
                  arrayList.Add((object) dmInfo1);
                  flag1 = true;
                  iGraphicsCaste.RequestDisplaysManagerMultipleAssign(arrayList);
                  flag3 = true;
                  break;
                }
              }
              if (!flag3)
              {
                for (int index = 0; index < sGraphicsAdapter.displaysManagerInfo.secondControllerList.Length; ++index)
                {
                  ArrayList secondController = sGraphicsAdapter.displaysManagerInfo.secondControllerList[index];
                  if (2 == secondController.Count)
                  {
                    dmInfo1.mappinginfo.secondController.Clear();
                    dmInfo1.mappinginfo.secondController.Add((object) (int) secondController[0]);
                    dmInfo1.mappinginfo.secondController.Add((object) (int) secondController[1]);
                    dmInfo1.mappinginfo.linkInfo.manner = (MANNERISM) 3;
                    ArrayList arrayList = new ArrayList();
                    arrayList.Add((object) dmInfo1);
                    flag1 = true;
                    iGraphicsCaste.RequestDisplaysManagerMultipleAssign(arrayList);
                    break;
                  }
                }
                break;
              }
              break;
            }
            break;
          case 1:
            int num1 = ((SAdapter) sGraphicsAdapter).index != sGraphicsAdapter.displaysManagerInfo.firstControllerDEMAdapterIndex ? sGraphicsAdapter.displaysManagerInfo.firstControllerDEMAdapterIndex : sGraphicsAdapter.displaysManagerInfo.secondControllerDEMAdapterIndex;
            SGraphicsAdapter sadapter1 = ((ICaste) iGraphicsCaste).GetSAdapter(num1) as SGraphicsAdapter;
            DM_INFO dmInfo2 = new DM_INFO(((SAdapter) sGraphicsAdapter).index, ((SPropertySetting_bool) sGraphicsAdapter.displaysManagerInfo.active.Control).T, ((SPropertySetting_bool) sGraphicsAdapter.displaysManagerInfo.primary.Control).T, ((SPropertySetting_MODEINFO) sGraphicsAdapter.displaysManagerInfo.mode.Control).T, ((SPropertySetting_MAPPINGINFO) sGraphicsAdapter.displaysManagerInfo.mapping.Control).C, false);
            DM_INFO dmInfo3 = new DM_INFO(((SAdapter) sadapter1).index, false, false, ((SPropertySetting_MODEINFO) sadapter1.displaysManagerInfo.mode.Control).T, ((SPropertySetting_MAPPINGINFO) sadapter1.displaysManagerInfo.mapping.Control).T, false);
            if (((SPropertySetting_bool) sadapter1.displaysManagerInfo.primary.Control).C)
              dmInfo2.isPrimary = true;
            dmInfo2.mappinginfo.linkInfo.controllerIndexFirst = ((SAdapter) sGraphicsAdapter).index;
            dmInfo2.mappinginfo.linkInfo.controllerIndexSecond = ((SAdapter) sGraphicsAdapter).index;
            dmInfo2.mappinginfo.linkInfo.manner = (MANNERISM) 2;
            ArrayList arrayList1 = new ArrayList();
            arrayList1.Add((object) dmInfo2);
            arrayList1.Add((object) dmInfo3);
            flag1 = true;
            iGraphicsCaste.RequestDisplaysManagerMultipleAssign(arrayList1);
            break;
          case 4:
          case 5:
            DM_INFO dmInfo4 = new DM_INFO(((SAdapter) sGraphicsAdapter).index, ((SPropertySetting_bool) sGraphicsAdapter.displaysManagerInfo.active.Control).T, ((SPropertySetting_bool) sGraphicsAdapter.displaysManagerInfo.primary.Control).T, ((SPropertySetting_MODEINFO) sGraphicsAdapter.displaysManagerInfo.mode.Control).T, ((SPropertySetting_MAPPINGINFO) sGraphicsAdapter.displaysManagerInfo.mapping.Control).C, false);
            dmInfo4.mappinginfo.linkInfo.manner = (MANNERISM) 2;
            ArrayList arrayList2 = new ArrayList();
            arrayList2.Add((object) dmInfo4);
            flag1 = true;
            iGraphicsCaste.RequestDisplaysManagerMultipleAssign(arrayList2);
            break;
          case 7:
            int num2 = ((SAdapter) sGraphicsAdapter).index != sGraphicsAdapter.displaysManagerInfo.firstControllerDEMAdapterIndex ? sGraphicsAdapter.displaysManagerInfo.firstControllerDEMAdapterIndex : sGraphicsAdapter.displaysManagerInfo.secondControllerDEMAdapterIndex;
            SGraphicsAdapter sadapter2 = ((ICaste) iGraphicsCaste).GetSAdapter(num2) as SGraphicsAdapter;
            DM_INFO dmInfo5 = new DM_INFO(((SAdapter) sGraphicsAdapter).index, ((SPropertySetting_bool) sGraphicsAdapter.displaysManagerInfo.active.Control).T, ((SPropertySetting_bool) sGraphicsAdapter.displaysManagerInfo.primary.Control).T, ((SPropertySetting_MODEINFO) sGraphicsAdapter.displaysManagerInfo.mode.Control).T, ((SPropertySetting_MAPPINGINFO) sGraphicsAdapter.displaysManagerInfo.mapping.Control).C, false);
            DM_INFO dmInfo6 = new DM_INFO(((SAdapter) sadapter2).index, false, false, ((SPropertySetting_MODEINFO) sadapter2.displaysManagerInfo.mode.Control).T, ((SPropertySetting_MAPPINGINFO) sadapter2.displaysManagerInfo.mapping.Control).C, false);
            if (((SPropertySetting_bool) sadapter2.displaysManagerInfo.primary.Control).C)
              dmInfo5.isPrimary = true;
            dmInfo5.mappinginfo.linkInfo.controllerIndexFirst = ((SAdapter) sGraphicsAdapter).index;
            dmInfo5.mappinginfo.linkInfo.controllerIndexSecond = ((SAdapter) sGraphicsAdapter).index;
            dmInfo5.mappinginfo.linkInfo.manner = (MANNERISM) 6;
            ArrayList arrayList3 = new ArrayList();
            arrayList3.Add((object) dmInfo5);
            arrayList3.Add((object) dmInfo6);
            flag1 = true;
            iGraphicsCaste.RequestDisplaysManagerMultipleAssign(arrayList3);
            break;
          case 8:
          case 9:
            DM_INFO dmInfo7 = new DM_INFO(((SAdapter) sGraphicsAdapter).index, ((SPropertySetting_bool) sGraphicsAdapter.displaysManagerInfo.active.Control).T, ((SPropertySetting_bool) sGraphicsAdapter.displaysManagerInfo.primary.Control).T, ((SPropertySetting_MODEINFO) sGraphicsAdapter.displaysManagerInfo.mode.Control).T, ((SPropertySetting_MAPPINGINFO) sGraphicsAdapter.displaysManagerInfo.mapping.Control).C, false);
            dmInfo7.mappinginfo.linkInfo.manner = (MANNERISM) 6;
            ArrayList arrayList4 = new ArrayList();
            arrayList4.Add((object) dmInfo7);
            flag1 = true;
            iGraphicsCaste.RequestDisplaysManagerMultipleAssign(arrayList4);
            break;
        }
      }
      if (flag1)
        iComponent.Apply(true);
    }
    catch (Exception ex)
    {
      Services.Exception(ex);
    }
    return flag1;
  }

  internal static bool TogglePossibleModes(
    IGraphicsCaste iGraphicsCaste,
    SGraphicsAdapter sGraphicsAdapter,
    IComponent iComponent)
  {
    bool flag = false;
    try
    {
      if (sGraphicsAdapter.ATISpecific)
      {
        if (((SAdapter) sGraphicsAdapter).active)
        {
          switch ((int) ((SPropertySetting_MAPPINGINFO) sGraphicsAdapter.displaysManagerInfo.mapping.Control).C.linkInfo.manner)
          {
            case 0:
              if (((SPropertySetting_MAPPINGINFO) sGraphicsAdapter.displaysManagerInfo.mapping.Control).C.firstController.Count == 0)
              {
                flag = DMHotkeysHandling.TogglePossibleModes_MakeSingle(iGraphicsCaste, sGraphicsAdapter);
                break;
              }
              ArrayList arrayList1 = new ArrayList();
              foreach (ArrayList secondController in sGraphicsAdapter.displaysManagerInfo.secondControllerList)
              {
                if (1 == secondController.Count)
                  arrayList1.Add(secondController[0]);
              }
              arrayList1.Sort(0, arrayList1.Count, (IComparer) null);
              int secondControlerIndex1 = -1;
              if (0 < ((SPropertySetting_MAPPINGINFO) sGraphicsAdapter.displaysManagerInfo.mapping.Control).C.secondController.Count)
              {
                foreach (int num in arrayList1)
                {
                  if (num > (int) ((SPropertySetting_MAPPINGINFO) sGraphicsAdapter.displaysManagerInfo.mapping.Control).C.secondController[0])
                  {
                    secondControlerIndex1 = num;
                    break;
                  }
                }
              }
              else if (0 < arrayList1.Count)
                secondControlerIndex1 = (int) arrayList1[0];
              flag = -1 != secondControlerIndex1 ? (!sGraphicsAdapter.displaysManagerCloneSupported ? (!sGraphicsAdapter.displaysManagerStretchSupported ? (!sGraphicsAdapter.displaysManagerExtendedSupported ? DMHotkeysHandling.TogglePossibleModes_MakeSingle(iGraphicsCaste, sGraphicsAdapter) : DMHotkeysHandling.TogglePossibleModes_MakeExtended(iGraphicsCaste, sGraphicsAdapter, secondControlerIndex1)) : DMHotkeysHandling.TogglePossibleModes_MakeHStretch(iGraphicsCaste, sGraphicsAdapter, secondControlerIndex1)) : DMHotkeysHandling.TogglePossibleModes_MakeDualClone(iGraphicsCaste, sGraphicsAdapter, secondControlerIndex1)) : DMHotkeysHandling.TogglePossibleModes_MakeSingle(iGraphicsCaste, sGraphicsAdapter);
              break;
            case 1:
              ArrayList arrayList2 = new ArrayList();
              foreach (ArrayList secondController in sGraphicsAdapter.displaysManagerInfo.secondControllerList)
              {
                if (1 == secondController.Count)
                  arrayList2.Add(secondController[0]);
              }
              arrayList2.Sort(0, arrayList2.Count, (IComparer) null);
              int secondControlerIndex2 = -1;
              if (0 < ((SPropertySetting_MAPPINGINFO) sGraphicsAdapter.displaysManagerInfo.mapping.Control).C.secondController.Count)
              {
                foreach (int num in arrayList2)
                {
                  if (num > (int) ((SPropertySetting_MAPPINGINFO) sGraphicsAdapter.displaysManagerInfo.mapping.Control).C.secondController[0])
                  {
                    secondControlerIndex2 = num;
                    break;
                  }
                }
              }
              flag = -1 != secondControlerIndex2 ? (!sGraphicsAdapter.displaysManagerCloneSupported ? (!sGraphicsAdapter.displaysManagerStretchSupported ? (!sGraphicsAdapter.displaysManagerExtendedSupported ? DMHotkeysHandling.TogglePossibleModes_MakeSingle(iGraphicsCaste, sGraphicsAdapter) : DMHotkeysHandling.TogglePossibleModes_MakeExtended(iGraphicsCaste, sGraphicsAdapter, secondControlerIndex2)) : DMHotkeysHandling.TogglePossibleModes_MakeHStretch(iGraphicsCaste, sGraphicsAdapter, secondControlerIndex2)) : DMHotkeysHandling.TogglePossibleModes_MakeDualClone(iGraphicsCaste, sGraphicsAdapter, secondControlerIndex2)) : DMHotkeysHandling.TogglePossibleModes_MakeSingle(iGraphicsCaste, sGraphicsAdapter);
              break;
            case 2:
              int secondControlerIndex3 = (int) ((SPropertySetting_MAPPINGINFO) sGraphicsAdapter.displaysManagerInfo.mapping.Control).C.secondController[0];
              if (sGraphicsAdapter.displaysManagerStretchSupported)
              {
                flag = DMHotkeysHandling.TogglePossibleModes_MakeHStretch(iGraphicsCaste, sGraphicsAdapter, secondControlerIndex3);
                break;
              }
              if (sGraphicsAdapter.displaysManagerExtendedSupported)
              {
                flag = DMHotkeysHandling.TogglePossibleModes_MakeExtended(iGraphicsCaste, sGraphicsAdapter, secondControlerIndex3);
                break;
              }
              ArrayList arrayList3 = new ArrayList();
              foreach (ArrayList secondController in sGraphicsAdapter.displaysManagerInfo.secondControllerList)
              {
                if (1 == secondController.Count)
                  arrayList3.Add(secondController[0]);
              }
              arrayList3.Sort(0, arrayList3.Count, (IComparer) null);
              int secondControlerIndex4 = -1;
              if (0 < ((SPropertySetting_MAPPINGINFO) sGraphicsAdapter.displaysManagerInfo.mapping.Control).C.secondController.Count)
              {
                foreach (int num in arrayList3)
                {
                  if (num > (int) ((SPropertySetting_MAPPINGINFO) sGraphicsAdapter.displaysManagerInfo.mapping.Control).C.secondController[0])
                  {
                    secondControlerIndex4 = num;
                    break;
                  }
                }
              }
              else if (0 < arrayList3.Count)
                secondControlerIndex4 = (int) arrayList3[0];
              flag = -1 != secondControlerIndex4 ? (!sGraphicsAdapter.displaysManagerCloneSupported ? (!sGraphicsAdapter.displaysManagerStretchSupported ? (!sGraphicsAdapter.displaysManagerExtendedSupported ? DMHotkeysHandling.TogglePossibleModes_MakeSingle(iGraphicsCaste, sGraphicsAdapter) : DMHotkeysHandling.TogglePossibleModes_MakeExtended(iGraphicsCaste, sGraphicsAdapter, secondControlerIndex4)) : DMHotkeysHandling.TogglePossibleModes_MakeHStretch(iGraphicsCaste, sGraphicsAdapter, secondControlerIndex4)) : DMHotkeysHandling.TogglePossibleModes_MakeDualClone(iGraphicsCaste, sGraphicsAdapter, secondControlerIndex4)) : DMHotkeysHandling.TogglePossibleModes_MakeSingle(iGraphicsCaste, sGraphicsAdapter);
              break;
            case 3:
            case 6:
            case 7:
            case 8:
            case 9:
              flag = DMHotkeysHandling.TogglePossibleModes_MakeSingle(iGraphicsCaste, sGraphicsAdapter);
              break;
            case 4:
              int secondControlerIndex5 = (int) ((SPropertySetting_MAPPINGINFO) sGraphicsAdapter.displaysManagerInfo.mapping.Control).C.secondController[0];
              if (sGraphicsAdapter.displaysManagerExtendedSupported)
              {
                flag = DMHotkeysHandling.TogglePossibleModes_MakeExtended(iGraphicsCaste, sGraphicsAdapter, secondControlerIndex5);
                break;
              }
              ArrayList arrayList4 = new ArrayList();
              foreach (ArrayList secondController in sGraphicsAdapter.displaysManagerInfo.secondControllerList)
              {
                if (1 == secondController.Count)
                  arrayList4.Add(secondController[0]);
              }
              arrayList4.Sort(0, arrayList4.Count, (IComparer) null);
              int secondControlerIndex6 = -1;
              if (0 < ((SPropertySetting_MAPPINGINFO) sGraphicsAdapter.displaysManagerInfo.mapping.Control).C.secondController.Count)
              {
                foreach (int num in arrayList4)
                {
                  if (num > (int) ((SPropertySetting_MAPPINGINFO) sGraphicsAdapter.displaysManagerInfo.mapping.Control).C.secondController[0])
                  {
                    secondControlerIndex6 = num;
                    break;
                  }
                }
              }
              else if (0 < arrayList4.Count)
                secondControlerIndex6 = (int) arrayList4[0];
              flag = -1 != secondControlerIndex6 ? (!sGraphicsAdapter.displaysManagerCloneSupported ? (!sGraphicsAdapter.displaysManagerStretchSupported ? (!sGraphicsAdapter.displaysManagerExtendedSupported ? DMHotkeysHandling.TogglePossibleModes_MakeSingle(iGraphicsCaste, sGraphicsAdapter) : DMHotkeysHandling.TogglePossibleModes_MakeExtended(iGraphicsCaste, sGraphicsAdapter, secondControlerIndex6)) : DMHotkeysHandling.TogglePossibleModes_MakeHStretch(iGraphicsCaste, sGraphicsAdapter, secondControlerIndex6)) : DMHotkeysHandling.TogglePossibleModes_MakeDualClone(iGraphicsCaste, sGraphicsAdapter, secondControlerIndex6)) : DMHotkeysHandling.TogglePossibleModes_MakeSingle(iGraphicsCaste, sGraphicsAdapter);
              break;
            case 5:
              int secondControlerIndex7 = (int) ((SPropertySetting_MAPPINGINFO) sGraphicsAdapter.displaysManagerInfo.mapping.Control).C.secondController[0];
              if (sGraphicsAdapter.displaysManagerStretchSupported)
              {
                flag = DMHotkeysHandling.TogglePossibleModes_MakeVStretch(iGraphicsCaste, sGraphicsAdapter, secondControlerIndex7);
                break;
              }
              if (sGraphicsAdapter.displaysManagerExtendedSupported)
              {
                flag = DMHotkeysHandling.TogglePossibleModes_MakeExtended(iGraphicsCaste, sGraphicsAdapter, secondControlerIndex7);
                break;
              }
              ArrayList arrayList5 = new ArrayList();
              foreach (ArrayList secondController in sGraphicsAdapter.displaysManagerInfo.secondControllerList)
              {
                if (1 == secondController.Count)
                  arrayList5.Add(secondController[0]);
              }
              arrayList5.Sort(0, arrayList5.Count, (IComparer) null);
              int secondControlerIndex8 = -1;
              if (0 < ((SPropertySetting_MAPPINGINFO) sGraphicsAdapter.displaysManagerInfo.mapping.Control).C.secondController.Count)
              {
                foreach (int num in arrayList5)
                {
                  if (num > (int) ((SPropertySetting_MAPPINGINFO) sGraphicsAdapter.displaysManagerInfo.mapping.Control).C.secondController[0])
                  {
                    secondControlerIndex8 = num;
                    break;
                  }
                }
              }
              else if (0 < arrayList5.Count)
                secondControlerIndex8 = (int) arrayList5[0];
              flag = -1 != secondControlerIndex8 ? (!sGraphicsAdapter.displaysManagerCloneSupported ? (!sGraphicsAdapter.displaysManagerStretchSupported ? (!sGraphicsAdapter.displaysManagerExtendedSupported ? DMHotkeysHandling.TogglePossibleModes_MakeSingle(iGraphicsCaste, sGraphicsAdapter) : DMHotkeysHandling.TogglePossibleModes_MakeExtended(iGraphicsCaste, sGraphicsAdapter, secondControlerIndex8)) : DMHotkeysHandling.TogglePossibleModes_MakeHStretch(iGraphicsCaste, sGraphicsAdapter, secondControlerIndex8)) : DMHotkeysHandling.TogglePossibleModes_MakeDualClone(iGraphicsCaste, sGraphicsAdapter, secondControlerIndex8)) : DMHotkeysHandling.TogglePossibleModes_MakeSingle(iGraphicsCaste, sGraphicsAdapter);
              break;
          }
          if (flag)
            iComponent.Apply(true);
        }
      }
    }
    catch (Exception ex)
    {
      Services.Exception(ex);
    }
    return flag;
  }

  private static bool TogglePossibleModes_MakeSingle(
    IGraphicsCaste iGraphicsCaste,
    SGraphicsAdapter sGraphicsAdapter)
  {
    bool flag1 = false;
    bool flag2 = false;
    ArrayList arrayList1 = new ArrayList();
    DM_INFO dmInfo1 = (DM_INFO) null;
    SGraphicsAdapter sgraphicsAdapter = sGraphicsAdapter;
    switch ((int) ((SPropertySetting_MAPPINGINFO) sGraphicsAdapter.displaysManagerInfo.mapping.Control).C.linkInfo.manner)
    {
      case 0:
        if (((SPropertySetting_MAPPINGINFO) sGraphicsAdapter.displaysManagerInfo.mapping.Control).C.firstController.Count == 0)
        {
          flag2 = true;
          break;
        }
        break;
      case 1:
      case 7:
        SGraphicsAdapter sadapter;
        if (sGraphicsAdapter.displaysManagerInfo.firstControllerDEMAdapterIndex <= sGraphicsAdapter.displaysManagerInfo.secondControllerDEMAdapterIndex)
        {
          if (sGraphicsAdapter.displaysManagerInfo.firstControllerDEMAdapterIndex != ((SAdapter) sGraphicsAdapter).index)
            sgraphicsAdapter = ((ICaste) iGraphicsCaste).GetSAdapter(sGraphicsAdapter.displaysManagerInfo.firstControllerDEMAdapterIndex) as SGraphicsAdapter;
          sadapter = ((ICaste) iGraphicsCaste).GetSAdapter(sGraphicsAdapter.displaysManagerInfo.secondControllerDEMAdapterIndex) as SGraphicsAdapter;
        }
        else
        {
          if (sGraphicsAdapter.displaysManagerInfo.secondControllerDEMAdapterIndex != ((SAdapter) sGraphicsAdapter).index)
            sgraphicsAdapter = ((ICaste) iGraphicsCaste).GetSAdapter(sGraphicsAdapter.displaysManagerInfo.secondControllerDEMAdapterIndex) as SGraphicsAdapter;
          sadapter = ((ICaste) iGraphicsCaste).GetSAdapter(sGraphicsAdapter.displaysManagerInfo.firstControllerDEMAdapterIndex) as SGraphicsAdapter;
        }
        DM_INFO dmInfo2 = new DM_INFO(((SAdapter) sadapter).index, false, false, ((SPropertySetting_MODEINFO) sadapter.displaysManagerInfo.mode.Control).C, ((SPropertySetting_MAPPINGINFO) sadapter.displaysManagerInfo.mapping.Control).C, false);
        arrayList1.Add((object) dmInfo2);
        dmInfo1 = (DM_INFO) null;
        if (7 == ((SPropertySetting_MAPPINGINFO) sGraphicsAdapter.displaysManagerInfo.mapping.Control).C.linkInfo.manner)
        {
          flag2 = true;
          break;
        }
        break;
      case 3:
      case 6:
      case 8:
      case 9:
        flag2 = true;
        break;
    }
    ArrayList arrayList2 = new ArrayList();
    ArrayList arrayList3 = new ArrayList();
    ArrayList arrayList4 = (ArrayList) null;
    iGraphicsCaste.GetControllerAllPossibleMapping(((SAdapter) sgraphicsAdapter).index, 0, arrayList2, ref arrayList4);
    foreach (ArrayList arrayList5 in arrayList4)
    {
      if (1 == arrayList5.Count)
        arrayList3.Add((object) (int) arrayList5[0]);
    }
    arrayList3.Sort(0, arrayList3.Count, (IComparer) null);
    if (0 < arrayList3.Count)
    {
      flag1 = true;
      int num1 = (int) arrayList3[0];
      if (!flag2 && 0 < ((SPropertySetting_MAPPINGINFO) sgraphicsAdapter.displaysManagerInfo.mapping.Control).C.firstController.Count)
      {
        foreach (int num2 in arrayList3)
        {
          if (num2 > (int) ((SPropertySetting_MAPPINGINFO) sgraphicsAdapter.displaysManagerInfo.mapping.Control).C.firstController[0])
          {
            num1 = num2;
            break;
          }
        }
      }
      DM_INFO dmInfo3 = new DM_INFO(((SAdapter) sgraphicsAdapter).index, ((SPropertySetting_bool) sgraphicsAdapter.displaysManagerInfo.active.Control).C, ((SPropertySetting_bool) sgraphicsAdapter.displaysManagerInfo.primary.Control).C, ((SPropertySetting_MODEINFO) sgraphicsAdapter.displaysManagerInfo.mode.Control).C, ((SPropertySetting_MAPPINGINFO) sgraphicsAdapter.displaysManagerInfo.mapping.Control).C, false);
      dmInfo3.mappinginfo.firstController.Clear();
      dmInfo3.mappinginfo.secondController.Clear();
      dmInfo3.mappinginfo.firstController.Add((object) num1);
      dmInfo3.mappinginfo.linkInfo.manner = (MANNERISM) 0;
      arrayList1.Add((object) dmInfo3);
      dmInfo1 = (DM_INFO) null;
      iGraphicsCaste.RequestDisplaysManagerMultipleAssign(arrayList1);
    }
    return flag1;
  }

  private static bool TogglePossibleModes_MakeDualClone(
    IGraphicsCaste iGraphicsCaste,
    SGraphicsAdapter sGraphicsAdapter,
    int secondControlerIndex)
  {
    bool flag = false;
    ArrayList arrayList = new ArrayList();
    DM_INFO dmInfo1 = (DM_INFO) null;
    SGraphicsAdapter sgraphicsAdapter = sGraphicsAdapter;
    switch ((int) ((SPropertySetting_MAPPINGINFO) sGraphicsAdapter.displaysManagerInfo.mapping.Control).C.linkInfo.manner)
    {
      case 0:
        if (((SPropertySetting_MAPPINGINFO) sgraphicsAdapter.displaysManagerInfo.mapping.Control).C.firstController.Count == 0)
        {
          Services.LogError("Not supporting making DualClone from single manner which first controller has no devices mapped");
          break;
        }
        flag = true;
        DM_INFO dmInfo2 = new DM_INFO(((SAdapter) sgraphicsAdapter).index, ((SPropertySetting_bool) sgraphicsAdapter.displaysManagerInfo.active.Control).C, ((SPropertySetting_bool) sgraphicsAdapter.displaysManagerInfo.primary.Control).C, ((SPropertySetting_MODEINFO) sgraphicsAdapter.displaysManagerInfo.mode.Control).C, ((SPropertySetting_MAPPINGINFO) sgraphicsAdapter.displaysManagerInfo.mapping.Control).C, false);
        dmInfo2.mappinginfo.secondController.Clear();
        dmInfo2.mappinginfo.secondController.Add((object) secondControlerIndex);
        dmInfo2.mappinginfo.linkInfo.manner = (MANNERISM) 2;
        arrayList.Add((object) dmInfo2);
        dmInfo1 = (DM_INFO) null;
        break;
      case 1:
        flag = true;
        SGraphicsAdapter sadapter;
        if (sGraphicsAdapter.displaysManagerInfo.firstControllerDEMAdapterIndex <= sGraphicsAdapter.displaysManagerInfo.secondControllerDEMAdapterIndex)
        {
          if (sGraphicsAdapter.displaysManagerInfo.firstControllerDEMAdapterIndex != ((SAdapter) sGraphicsAdapter).index)
            sgraphicsAdapter = ((ICaste) iGraphicsCaste).GetSAdapter(sGraphicsAdapter.displaysManagerInfo.firstControllerDEMAdapterIndex) as SGraphicsAdapter;
          sadapter = ((ICaste) iGraphicsCaste).GetSAdapter(sGraphicsAdapter.displaysManagerInfo.secondControllerDEMAdapterIndex) as SGraphicsAdapter;
        }
        else
        {
          if (sGraphicsAdapter.displaysManagerInfo.secondControllerDEMAdapterIndex != ((SAdapter) sGraphicsAdapter).index)
            sgraphicsAdapter = ((ICaste) iGraphicsCaste).GetSAdapter(sGraphicsAdapter.displaysManagerInfo.secondControllerDEMAdapterIndex) as SGraphicsAdapter;
          sadapter = ((ICaste) iGraphicsCaste).GetSAdapter(sGraphicsAdapter.displaysManagerInfo.firstControllerDEMAdapterIndex) as SGraphicsAdapter;
        }
        DM_INFO dmInfo3 = new DM_INFO(((SAdapter) sadapter).index, false, false, ((SPropertySetting_MODEINFO) sadapter.displaysManagerInfo.mode.Control).C, ((SPropertySetting_MAPPINGINFO) sadapter.displaysManagerInfo.mapping.Control).C, false);
        arrayList.Add((object) dmInfo3);
        DM_INFO dmInfo4 = new DM_INFO(((SAdapter) sgraphicsAdapter).index, ((SPropertySetting_bool) sgraphicsAdapter.displaysManagerInfo.active.Control).C, ((SPropertySetting_bool) sgraphicsAdapter.displaysManagerInfo.primary.Control).C, ((SPropertySetting_MODEINFO) sgraphicsAdapter.displaysManagerInfo.mode.Control).C, ((SPropertySetting_MAPPINGINFO) sgraphicsAdapter.displaysManagerInfo.mapping.Control).C, false);
        dmInfo4.mappinginfo.secondController.Clear();
        dmInfo4.mappinginfo.secondController.Add((object) secondControlerIndex);
        dmInfo4.mappinginfo.linkInfo.manner = (MANNERISM) 2;
        arrayList.Add((object) dmInfo4);
        dmInfo1 = (DM_INFO) null;
        break;
      case 2:
      case 4:
      case 5:
        flag = true;
        DM_INFO dmInfo5 = new DM_INFO(((SAdapter) sgraphicsAdapter).index, ((SPropertySetting_bool) sgraphicsAdapter.displaysManagerInfo.active.Control).C, ((SPropertySetting_bool) sgraphicsAdapter.displaysManagerInfo.primary.Control).C, ((SPropertySetting_MODEINFO) sgraphicsAdapter.displaysManagerInfo.mode.Control).C, ((SPropertySetting_MAPPINGINFO) sgraphicsAdapter.displaysManagerInfo.mapping.Control).C, false);
        dmInfo5.mappinginfo.secondController.Clear();
        dmInfo5.mappinginfo.secondController.Add((object) secondControlerIndex);
        dmInfo5.mappinginfo.linkInfo.manner = (MANNERISM) 2;
        arrayList.Add((object) dmInfo5);
        dmInfo1 = (DM_INFO) null;
        break;
      case 3:
      case 6:
      case 7:
      case 8:
      case 9:
        Services.LogError("Not supporting making DualClone from any kind of single clone manner");
        break;
    }
    if (flag || 0 < arrayList.Count)
      iGraphicsCaste.RequestDisplaysManagerMultipleAssign(arrayList);
    return flag;
  }

  private static bool TogglePossibleModes_MakeHStretch(
    IGraphicsCaste iGraphicsCaste,
    SGraphicsAdapter sGraphicsAdapter,
    int secondControlerIndex)
  {
    bool flag = false;
    ArrayList arrayList = new ArrayList();
    DM_INFO dmInfo1 = (DM_INFO) null;
    SGraphicsAdapter sgraphicsAdapter = sGraphicsAdapter;
    switch ((int) ((SPropertySetting_MAPPINGINFO) sGraphicsAdapter.displaysManagerInfo.mapping.Control).C.linkInfo.manner)
    {
      case 0:
        if (((SPropertySetting_MAPPINGINFO) sgraphicsAdapter.displaysManagerInfo.mapping.Control).C.firstController.Count == 0)
        {
          Services.LogError("Not supporting making HStretch from single manner which first controller has no devices mapped");
          break;
        }
        flag = true;
        DM_INFO dmInfo2 = new DM_INFO(((SAdapter) sgraphicsAdapter).index, ((SPropertySetting_bool) sgraphicsAdapter.displaysManagerInfo.active.Control).C, ((SPropertySetting_bool) sgraphicsAdapter.displaysManagerInfo.primary.Control).C, ((SPropertySetting_MODEINFO) sgraphicsAdapter.displaysManagerInfo.mode.Control).C, ((SPropertySetting_MAPPINGINFO) sgraphicsAdapter.displaysManagerInfo.mapping.Control).C, false);
        dmInfo2.mappinginfo.secondController.Clear();
        dmInfo2.mappinginfo.secondController.Add((object) secondControlerIndex);
        dmInfo2.mappinginfo.linkInfo.manner = (MANNERISM) 5;
        arrayList.Add((object) dmInfo2);
        dmInfo1 = (DM_INFO) null;
        break;
      case 1:
        flag = true;
        SGraphicsAdapter sadapter;
        if (sGraphicsAdapter.displaysManagerInfo.firstControllerDEMAdapterIndex <= sGraphicsAdapter.displaysManagerInfo.secondControllerDEMAdapterIndex)
        {
          if (sGraphicsAdapter.displaysManagerInfo.firstControllerDEMAdapterIndex != ((SAdapter) sGraphicsAdapter).index)
            sgraphicsAdapter = ((ICaste) iGraphicsCaste).GetSAdapter(sGraphicsAdapter.displaysManagerInfo.firstControllerDEMAdapterIndex) as SGraphicsAdapter;
          sadapter = ((ICaste) iGraphicsCaste).GetSAdapter(sGraphicsAdapter.displaysManagerInfo.secondControllerDEMAdapterIndex) as SGraphicsAdapter;
        }
        else
        {
          if (sGraphicsAdapter.displaysManagerInfo.secondControllerDEMAdapterIndex != ((SAdapter) sGraphicsAdapter).index)
            sgraphicsAdapter = ((ICaste) iGraphicsCaste).GetSAdapter(sGraphicsAdapter.displaysManagerInfo.secondControllerDEMAdapterIndex) as SGraphicsAdapter;
          sadapter = ((ICaste) iGraphicsCaste).GetSAdapter(sGraphicsAdapter.displaysManagerInfo.firstControllerDEMAdapterIndex) as SGraphicsAdapter;
        }
        DM_INFO dmInfo3 = new DM_INFO(((SAdapter) sadapter).index, false, false, ((SPropertySetting_MODEINFO) sadapter.displaysManagerInfo.mode.Control).C, ((SPropertySetting_MAPPINGINFO) sadapter.displaysManagerInfo.mapping.Control).C, false);
        arrayList.Add((object) dmInfo3);
        DM_INFO dmInfo4 = new DM_INFO(((SAdapter) sgraphicsAdapter).index, ((SPropertySetting_bool) sgraphicsAdapter.displaysManagerInfo.active.Control).C, ((SPropertySetting_bool) sgraphicsAdapter.displaysManagerInfo.primary.Control).C, ((SPropertySetting_MODEINFO) sgraphicsAdapter.displaysManagerInfo.mode.Control).C, ((SPropertySetting_MAPPINGINFO) sgraphicsAdapter.displaysManagerInfo.mapping.Control).C, false);
        dmInfo4.mappinginfo.secondController.Clear();
        dmInfo4.mappinginfo.secondController.Add((object) secondControlerIndex);
        dmInfo4.mappinginfo.linkInfo.manner = (MANNERISM) 5;
        arrayList.Add((object) dmInfo4);
        dmInfo1 = (DM_INFO) null;
        break;
      case 2:
      case 4:
      case 5:
        flag = true;
        DM_INFO dmInfo5 = new DM_INFO(((SAdapter) sgraphicsAdapter).index, ((SPropertySetting_bool) sgraphicsAdapter.displaysManagerInfo.active.Control).C, ((SPropertySetting_bool) sgraphicsAdapter.displaysManagerInfo.primary.Control).C, ((SPropertySetting_MODEINFO) sgraphicsAdapter.displaysManagerInfo.mode.Control).C, ((SPropertySetting_MAPPINGINFO) sgraphicsAdapter.displaysManagerInfo.mapping.Control).C, false);
        dmInfo5.mappinginfo.secondController.Clear();
        dmInfo5.mappinginfo.secondController.Add((object) secondControlerIndex);
        dmInfo5.mappinginfo.linkInfo.manner = (MANNERISM) 5;
        arrayList.Add((object) dmInfo5);
        dmInfo1 = (DM_INFO) null;
        break;
      case 3:
      case 6:
      case 7:
      case 8:
      case 9:
        Services.LogError("Not supporting making HStretch from any kind of single clone manner");
        break;
    }
    if (flag || 0 < arrayList.Count)
      iGraphicsCaste.RequestDisplaysManagerMultipleAssign(arrayList);
    return flag;
  }

  private static bool TogglePossibleModes_MakeVStretch(
    IGraphicsCaste iGraphicsCaste,
    SGraphicsAdapter sGraphicsAdapter,
    int secondControlerIndex)
  {
    bool flag = false;
    ArrayList arrayList = new ArrayList();
    DM_INFO dmInfo1 = (DM_INFO) null;
    SGraphicsAdapter sgraphicsAdapter = sGraphicsAdapter;
    switch ((int) ((SPropertySetting_MAPPINGINFO) sGraphicsAdapter.displaysManagerInfo.mapping.Control).C.linkInfo.manner)
    {
      case 0:
        if (((SPropertySetting_MAPPINGINFO) sgraphicsAdapter.displaysManagerInfo.mapping.Control).C.firstController.Count == 0)
        {
          Services.LogError("Not supporting making VStretch from single manner which first controller has no devices mapped");
          break;
        }
        flag = true;
        DM_INFO dmInfo2 = new DM_INFO(((SAdapter) sgraphicsAdapter).index, ((SPropertySetting_bool) sgraphicsAdapter.displaysManagerInfo.active.Control).C, ((SPropertySetting_bool) sgraphicsAdapter.displaysManagerInfo.primary.Control).C, ((SPropertySetting_MODEINFO) sgraphicsAdapter.displaysManagerInfo.mode.Control).C, ((SPropertySetting_MAPPINGINFO) sgraphicsAdapter.displaysManagerInfo.mapping.Control).C, false);
        dmInfo2.mappinginfo.secondController.Clear();
        dmInfo2.mappinginfo.secondController.Add((object) secondControlerIndex);
        dmInfo2.mappinginfo.linkInfo.manner = (MANNERISM) 4;
        arrayList.Add((object) dmInfo2);
        dmInfo1 = (DM_INFO) null;
        break;
      case 1:
        flag = true;
        SGraphicsAdapter sadapter;
        if (sGraphicsAdapter.displaysManagerInfo.firstControllerDEMAdapterIndex <= sGraphicsAdapter.displaysManagerInfo.secondControllerDEMAdapterIndex)
        {
          if (sGraphicsAdapter.displaysManagerInfo.firstControllerDEMAdapterIndex != ((SAdapter) sGraphicsAdapter).index)
            sgraphicsAdapter = ((ICaste) iGraphicsCaste).GetSAdapter(sGraphicsAdapter.displaysManagerInfo.firstControllerDEMAdapterIndex) as SGraphicsAdapter;
          sadapter = ((ICaste) iGraphicsCaste).GetSAdapter(sGraphicsAdapter.displaysManagerInfo.secondControllerDEMAdapterIndex) as SGraphicsAdapter;
        }
        else
        {
          if (sGraphicsAdapter.displaysManagerInfo.secondControllerDEMAdapterIndex != ((SAdapter) sGraphicsAdapter).index)
            sgraphicsAdapter = ((ICaste) iGraphicsCaste).GetSAdapter(sGraphicsAdapter.displaysManagerInfo.secondControllerDEMAdapterIndex) as SGraphicsAdapter;
          sadapter = ((ICaste) iGraphicsCaste).GetSAdapter(sGraphicsAdapter.displaysManagerInfo.firstControllerDEMAdapterIndex) as SGraphicsAdapter;
        }
        DM_INFO dmInfo3 = new DM_INFO(((SAdapter) sadapter).index, false, false, ((SPropertySetting_MODEINFO) sadapter.displaysManagerInfo.mode.Control).C, ((SPropertySetting_MAPPINGINFO) sadapter.displaysManagerInfo.mapping.Control).C, false);
        arrayList.Add((object) dmInfo3);
        DM_INFO dmInfo4 = new DM_INFO(((SAdapter) sgraphicsAdapter).index, ((SPropertySetting_bool) sgraphicsAdapter.displaysManagerInfo.active.Control).C, ((SPropertySetting_bool) sgraphicsAdapter.displaysManagerInfo.primary.Control).C, ((SPropertySetting_MODEINFO) sgraphicsAdapter.displaysManagerInfo.mode.Control).C, ((SPropertySetting_MAPPINGINFO) sgraphicsAdapter.displaysManagerInfo.mapping.Control).C, false);
        dmInfo4.mappinginfo.secondController.Clear();
        dmInfo4.mappinginfo.secondController.Add((object) secondControlerIndex);
        dmInfo4.mappinginfo.linkInfo.manner = (MANNERISM) 4;
        arrayList.Add((object) dmInfo4);
        dmInfo1 = (DM_INFO) null;
        break;
      case 2:
      case 4:
      case 5:
        flag = true;
        DM_INFO dmInfo5 = new DM_INFO(((SAdapter) sgraphicsAdapter).index, ((SPropertySetting_bool) sgraphicsAdapter.displaysManagerInfo.active.Control).C, ((SPropertySetting_bool) sgraphicsAdapter.displaysManagerInfo.primary.Control).C, ((SPropertySetting_MODEINFO) sgraphicsAdapter.displaysManagerInfo.mode.Control).C, ((SPropertySetting_MAPPINGINFO) sgraphicsAdapter.displaysManagerInfo.mapping.Control).C, false);
        dmInfo5.mappinginfo.secondController.Clear();
        dmInfo5.mappinginfo.secondController.Add((object) secondControlerIndex);
        dmInfo5.mappinginfo.linkInfo.manner = (MANNERISM) 4;
        arrayList.Add((object) dmInfo5);
        dmInfo1 = (DM_INFO) null;
        break;
      case 3:
      case 6:
      case 7:
      case 8:
      case 9:
        Services.LogError("Not supporting making VStretch from any kind of single clone manner");
        break;
    }
    if (flag || 0 < arrayList.Count)
      iGraphicsCaste.RequestDisplaysManagerMultipleAssign(arrayList);
    return flag;
  }

  private static bool TogglePossibleModes_MakeExtended(
    IGraphicsCaste iGraphicsCaste,
    SGraphicsAdapter sGraphicsAdapter,
    int secondControlerIndex)
  {
    bool flag = false;
    ArrayList arrayList = new ArrayList();
    DM_INFO dmInfo1 = (DM_INFO) null;
    SGraphicsAdapter sgraphicsAdapter = sGraphicsAdapter;
    switch ((int) ((SPropertySetting_MAPPINGINFO) sGraphicsAdapter.displaysManagerInfo.mapping.Control).C.linkInfo.manner)
    {
      case 0:
        if (((SPropertySetting_MAPPINGINFO) sgraphicsAdapter.displaysManagerInfo.mapping.Control).C.firstController.Count == 0)
        {
          Services.LogError("Not supporting making Extended from single manner which first controller has no devices mapped");
          break;
        }
        flag = true;
        DM_INFO dmInfo2 = new DM_INFO(((SAdapter) sgraphicsAdapter).index, ((SPropertySetting_bool) sgraphicsAdapter.displaysManagerInfo.active.Control).C, ((SPropertySetting_bool) sgraphicsAdapter.displaysManagerInfo.primary.Control).C, ((SPropertySetting_MODEINFO) sgraphicsAdapter.displaysManagerInfo.mode.Control).C, ((SPropertySetting_MAPPINGINFO) sgraphicsAdapter.displaysManagerInfo.mapping.Control).C, false);
        dmInfo2.mappinginfo.secondController.Clear();
        dmInfo2.mappinginfo.secondController.Add((object) secondControlerIndex);
        dmInfo2.mappinginfo.linkInfo.manner = (MANNERISM) 1;
        arrayList.Add((object) dmInfo2);
        foreach (int associatedAllAdapter in sgraphicsAdapter.associatedAllAdapters)
        {
          if (((ICaste) iGraphicsCaste).GetSAdapter(associatedAllAdapter) is SGraphicsAdapter sadapter && !((SAdapter) sadapter).active)
          {
            DM_INFO dmInfo3 = new DM_INFO(((SAdapter) sadapter).index, true, ((SPropertySetting_bool) sadapter.displaysManagerInfo.primary.Control).C, ((SPropertySetting_MODEINFO) sadapter.displaysManagerInfo.mode.Control).C, ((SPropertySetting_MAPPINGINFO) sadapter.displaysManagerInfo.mapping.Control).C, false);
            arrayList.Add((object) dmInfo3);
            break;
          }
        }
        dmInfo1 = (DM_INFO) null;
        break;
      case 1:
        flag = true;
        if (sGraphicsAdapter.displaysManagerInfo.firstControllerDEMAdapterIndex <= sGraphicsAdapter.displaysManagerInfo.secondControllerDEMAdapterIndex)
        {
          if (sGraphicsAdapter.displaysManagerInfo.firstControllerDEMAdapterIndex != ((SAdapter) sGraphicsAdapter).index)
            sgraphicsAdapter = ((ICaste) iGraphicsCaste).GetSAdapter(sGraphicsAdapter.displaysManagerInfo.firstControllerDEMAdapterIndex) as SGraphicsAdapter;
        }
        else if (sGraphicsAdapter.displaysManagerInfo.secondControllerDEMAdapterIndex != ((SAdapter) sGraphicsAdapter).index)
          sgraphicsAdapter = ((ICaste) iGraphicsCaste).GetSAdapter(sGraphicsAdapter.displaysManagerInfo.secondControllerDEMAdapterIndex) as SGraphicsAdapter;
        DM_INFO dmInfo4 = new DM_INFO(((SAdapter) sgraphicsAdapter).index, ((SPropertySetting_bool) sgraphicsAdapter.displaysManagerInfo.active.Control).C, ((SPropertySetting_bool) sgraphicsAdapter.displaysManagerInfo.primary.Control).C, ((SPropertySetting_MODEINFO) sgraphicsAdapter.displaysManagerInfo.mode.Control).C, ((SPropertySetting_MAPPINGINFO) sgraphicsAdapter.displaysManagerInfo.mapping.Control).C, false);
        dmInfo4.mappinginfo.secondController.Clear();
        dmInfo4.mappinginfo.secondController.Add((object) secondControlerIndex);
        dmInfo4.mappinginfo.linkInfo.manner = (MANNERISM) 1;
        arrayList.Add((object) dmInfo4);
        dmInfo1 = (DM_INFO) null;
        break;
      case 2:
      case 4:
      case 5:
        flag = true;
        DM_INFO dmInfo5 = new DM_INFO(((SAdapter) sgraphicsAdapter).index, ((SPropertySetting_bool) sgraphicsAdapter.displaysManagerInfo.active.Control).C, ((SPropertySetting_bool) sgraphicsAdapter.displaysManagerInfo.primary.Control).C, ((SPropertySetting_MODEINFO) sgraphicsAdapter.displaysManagerInfo.mode.Control).C, ((SPropertySetting_MAPPINGINFO) sgraphicsAdapter.displaysManagerInfo.mapping.Control).C, false);
        dmInfo5.mappinginfo.secondController.Clear();
        dmInfo5.mappinginfo.secondController.Add((object) secondControlerIndex);
        dmInfo5.mappinginfo.linkInfo.manner = (MANNERISM) 1;
        arrayList.Add((object) dmInfo5);
        foreach (int associatedAllAdapter in sgraphicsAdapter.associatedAllAdapters)
        {
          if (((ICaste) iGraphicsCaste).GetSAdapter(associatedAllAdapter) is SGraphicsAdapter sadapter && !((SAdapter) sadapter).active)
          {
            DM_INFO dmInfo6 = new DM_INFO(((SAdapter) sadapter).index, true, ((SPropertySetting_bool) sadapter.displaysManagerInfo.primary.Control).C, ((SPropertySetting_MODEINFO) sadapter.displaysManagerInfo.mode.Control).C, ((SPropertySetting_MAPPINGINFO) sadapter.displaysManagerInfo.mapping.Control).C, false);
            arrayList.Add((object) dmInfo6);
            break;
          }
        }
        dmInfo1 = (DM_INFO) null;
        break;
      case 3:
      case 6:
      case 7:
      case 8:
      case 9:
        Services.LogError("Not supporting making Extended from any kind of single clone manner");
        break;
    }
    if (flag || 0 < arrayList.Count)
      iGraphicsCaste.RequestDisplaysManagerMultipleAssign(arrayList);
    return flag;
  }
}
