// Decompiled with JetBrains decompiler
// Type: Mario_KS.HighscoreTable
// Assembly: OnSerializingAttribute, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: F72B5184-77D9-4DBB-B29C-2F3B04C48CCD
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan-Spy.MSIL.Quasar.gen-8c2eb36fc68b33fc269eaa5f42a303b63ee25bccdd99c0c424285aee9317d94c.exe

using System;
using System.Collections.Generic;

namespace Mario_KS
{
  [Serializable]
  public class HighscoreTable
  {
    public List<Entry> Entries;
    public int MaxEntries;
    public string Category;

    public HighscoreTable()
    {
      this.Entries = new List<Entry>();
      this.MaxEntries = 10;
    }

    public HighscoreTable(string Category, int MaxEntries = 10, List<Entry> Entries = null)
    {
      this.Entries = new List<Entry>();
      this.MaxEntries = 10;
      if (Entries == null)
        Entries = new List<Entry>();
      this.Category = Category;
      this.Entries = Entries;
      this.MaxEntries = MaxEntries;
    }

    public bool IsHighscore(double Points)
    {
      int num = 1;
      try
      {
        foreach (Entry entry in this.Entries)
        {
          if (entry.Points <= Points)
            checked { ++num; }
          else
            break;
        }
      }
      finally
      {
        List<Entry>.Enumerator enumerator;
        enumerator.Dispose();
      }
      return num <= this.MaxEntries;
    }

    public bool IsHighscore(Entry Entry) => this.IsHighscore(Entry.Points);

    public Entry AddEntry(Entry newEntry)
    {
      this.Entries.Add(newEntry);
      this.Entries.Sort();
      if (this.Entries.Count > this.MaxEntries)
        this.Entries.RemoveRange(checked (this.MaxEntries - 1), checked (this.Entries.Count - this.MaxEntries));
      newEntry.Parent = this;
      return newEntry;
    }
  }
}
