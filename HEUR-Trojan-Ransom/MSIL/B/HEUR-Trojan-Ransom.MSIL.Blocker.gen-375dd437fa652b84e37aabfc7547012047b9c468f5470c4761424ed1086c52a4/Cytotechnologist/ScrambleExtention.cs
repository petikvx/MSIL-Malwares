// Decompiled with JetBrains decompiler
// Type: Cytotechnologist.ScrambleExtention
// Assembly: StreamWriterBufferedDataLo, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 2A001E45-B149-45C2-9BBE-A5BA299DBD32
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-375dd437fa652b84e37aabfc7547012047b9c468f5470c4761424ed1086c52a4.exe

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Cytotechnologist
{
  public static class ScrambleExtention
  {
    private static readonly Random Random = ScrambleExtention.\u202D⁭‍‮‫‫‬‮‭​⁮‎‫‭⁬⁪‎‍‫‬‎‎‌‎‮⁭‎‫⁯⁪‌‍‫‫‎⁭‭​‏‏‮();

    public static void Shuffle<T>(IList<T> list)
    {
      int count = list.Count;
label_10:
      bool flag = count > 1;
      int num1 = 1615949292;
      int index;
      T obj;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 144518331)) % 12U)
        {
          case 0:
            num1 = 18798353;
            continue;
          case 1:
            obj = list[index];
            num1 = (int) num2 * -245064822 ^ -196735028;
            continue;
          case 2:
            list[count] = obj;
            num1 = (int) num2 * -1567866692 ^ 756915739;
            continue;
          case 3:
            index = ScrambleExtention.\u202D‭‌‎‎⁬⁫‏⁮‎‬⁪‎‭​⁭​‎⁪⁪‬‌‌⁬‎⁪⁯​‍‭‭​⁫‍‍‏‪⁫⁫⁯‮(ScrambleExtention.Random, count + 1);
            num1 = (int) num2 * 1790764119 ^ -768444885;
            continue;
          case 4:
            num1 = (int) num2 * -104612777 ^ -629356215;
            continue;
          case 5:
            list[index] = list[count];
            num1 = (int) num2 * 730728839 ^ 1368855867;
            continue;
          case 6:
            num1 = 1324135618;
            continue;
          case 7:
            int num3 = flag ? 1400370267 : (num3 = 468290829);
            num1 = num3 ^ (int) num2 * 1868822214;
            continue;
          case 8:
            goto label_3;
          case 9:
            --count;
            num1 = (int) num2 * -1691096778 ^ -1683573550;
            continue;
          case 10:
            goto label_10;
          case 11:
            num1 = (int) num2 * -2015344861 ^ 1037476648;
            continue;
          default:
            goto label_14;
        }
      }
label_3:
      return;
label_14:;
    }

    static int \u202D‭‌‎‎⁬⁫‏⁮‎‬⁪‎‭​⁭​‎⁪⁪‬‌‌⁬‎⁪⁯​‍‭‭​⁫‍‍‏‪⁫⁫⁯‮([In] Random obj0, [In] int obj1) => obj0.Next(obj1);

    static Random \u202D⁭‍‮‫‫‬‮‭​⁮‎‫‭⁬⁪‎‍‫‬‎‎‌‎‮⁭‎‫⁯⁪‌‍‫‫‎⁭‭​‏‏‮() => new Random();
  }
}
