// Decompiled with JetBrains decompiler
// Type: Cytotechnologist.ScrambleExtention
// Assembly: DataCollect, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 42D7E59F-0880-4460-A28E-6C718E130DF7
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-35125b1dd360a1a6c3644dee373860f7e3c26660cb7cd8de4718b4ac8e4b4353.exe

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Cytotechnologist
{
  public static class ScrambleExtention
  {
    private static readonly Random Random = ScrambleExtention.\u200F‌‮‌​​⁫⁭⁪‫⁪‍‭⁭‮​⁫⁭‏‌‫​‬‌‮⁫‬‍⁫​‫⁭⁭‌⁬‬‌⁯‪‏‮();

    public static void Shuffle<T>(IList<T> list)
    {
label_1:
      int num1 = -1639332331;
      int count;
      int index;
      T obj;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -847615766)) % 11U)
        {
          case 0:
            goto label_1;
          case 1:
            count = list.Count;
            num1 = (int) num2 * -1194605536 ^ -1012010015;
            continue;
          case 2:
            list[index] = list[count];
            list[count] = obj;
            num1 = (int) num2 * -305453878 ^ 633805267;
            continue;
          case 3:
            num1 = (int) num2 * 631991106 ^ -2079878882;
            continue;
          case 4:
            --count;
            index = ScrambleExtention.\u202E⁭‎‮‏‎‌⁭‬⁮⁯‫‭⁯⁭‮‎​‫‬‍⁪⁫⁭⁪⁬⁪‏​⁬‌‏‬‫⁭⁮‬‭‮‪‮(ScrambleExtention.Random, count + 1);
            num1 = (int) num2 * -758789843 ^ -288091418;
            continue;
          case 5:
            num1 = (int) num2 * -1557772421 ^ 222302165;
            continue;
          case 6:
            num1 = -553608637;
            continue;
          case 7:
            obj = list[index];
            num1 = (int) num2 * -1770464350 ^ 552215825;
            continue;
          case 8:
            num1 = (int) num2 * -1018440998 ^ 1808681380;
            continue;
          case 9:
            int num3;
            num1 = num3 = count <= 1 ? -705728747 : (num3 = -1307358876);
            continue;
          case 10:
            goto label_3;
          default:
            goto label_13;
        }
      }
label_3:
      return;
label_13:;
    }

    static int \u202E⁭‎‮‏‎‌⁭‬⁮⁯‫‭⁯⁭‮‎​‫‬‍⁪⁫⁭⁪⁬⁪‏​⁬‌‏‬‫⁭⁮‬‭‮‪‮([In] Random obj0, [In] int obj1) => obj0.Next(obj1);

    static Random \u200F‌‮‌​​⁫⁭⁪‫⁪‍‭⁭‮​⁫⁭‏‌‫​‬‌‮⁫‬‍⁫​‫⁭⁭‌⁬‬‌⁯‪‏‮() => new Random();
  }
}
