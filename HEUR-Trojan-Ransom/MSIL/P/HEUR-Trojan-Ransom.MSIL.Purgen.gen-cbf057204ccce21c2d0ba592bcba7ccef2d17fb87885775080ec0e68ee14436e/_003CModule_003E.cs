// Decompiled with JetBrains decompiler
// Type: <Module>
// Assembly: , Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FAF82406-93DC-4D5D-948A-CEB8E42B10A6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.12-msil\HEUR-Trojan-Ransom.MSIL.Purgen.gen-cbf057204ccce21c2d0ba592bcba7ccef2d17fb87885775080ec0e68ee14436e.exe

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

internal class \u003CModule\u003E
{
  public static string 蠆蠁蠯蟽蠆蠲蟽蠂蠆蠀蠄蠘蠱蠁蠮()
  {
    string source = "̿";
    string str = "773";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 洷浓洴洙洜浉洞测浚洟浇浇济洙浈()
  {
    string source = "넥녊녃념녉녇";
    string str = "45282";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 斸方斵斄斶斺斸斄方旇斸斻斶文旂()
  {
    string source = "뱧벚벙벙범벓";
    string str = "48165";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 笜笖笖筇笧笹笲笙笖筈筗筐筌笚筝()
  {
    string source = "\u3289";
    string str = "12849";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \u2625\u261C\u25F8\u25F6\u2605\u2625\u2626\u25F6\u25FB\u25FA\u261C\u262F\u25F7\u25F4\u25F7()
  {
    string source = "节";
    string str = "33321";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 㲊㲘㲮㱧㲛㱧㲘㱧㱩㲜㲢㱪㲛㱮㱩()
  {
    string source = "蚄蚥虖蚣蚗蚪蚨蚟蚮";
    string str = "34358";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \u300C〣\u300B\u2FFA\u2FE5\u3019\u3018\u2FE6\u2FE3\u3002\u2FE7\u3015\u2FE3\u2FE7\u2FE9()
  {
    string source = "씩앖앖앓앖";
    string str = "50404";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 뿞뿤뿡뿠쀎쀒쀐뿞쀥뿥뿿쀒쀒뿡쀎()
  {
    string source = "蜣蝐蝐蝍蝐";
    string str = "34526";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \u29EB\u29B7\u29B8\u29B2\u29E8\u29B4\u29E4\u29CA\u29E8\u29B6\u29F9\u29E8\u29D8\u29B2\u29FB()
  {
    string source = "\u9FF8ꀃꀎꀋꀆ";
    string str = "40866";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 헾혁헽혂혀혻혂혭혀혮혂혝헼혔혪()
  {
    string source = "좋좖좡좞좙";
    string str = "51253";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 遗避遭邑遐邀邁遖遫遒邑遠邃遒過()
  {
    string source = "轫轶辁轾轹";
    string str = "36629";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \u245C\u2472\u2460\u2440\u243E\u2452\u2444\u2485\u2444\u2453\u247D\u2472\u247D\u245A\u2445()
  {
    string source = "\uF778\uF7A5\uF7A5\uF7A2\uF7A5";
    string str = "63283";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 斬敼斎斁斫斬敻新斐新斬斬敻敾斁()
  {
    string source = "\uE73C\uE730\uE743\uE741\uE738\uE747\uE718\uE73D\uE73F\uE744\uE743\uE700";
    string str = "59087";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 디듰딅딍듲딟듲디딐딤듷듮등듮듶()
  {
    string source = "";
    string str = "36197";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \uA9C8ꦓ\uA9C5ꦗꦓꦸ\uA9C9\uA9C4꧀ꦑꦑꦏ\uA9CC꧓\uA9C2()
  {
    string source = "\u4DBD䷈䷓䷐䷋";
    string str = "19815";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 零漣阮醴煉靈暈龍遼鈴阮栗流撚暈()
  {
    string source = "㠸㡃㡎㡋㡆";
    string str = "14306";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \uF2C5\uF2F5\uF2F6\uF2F7\uF2C9\uF2C7\uF2C6\uF2FD\uF2CA\uF2C5\uF2C4\uF30D\uF2F8\uF2C6\uF2EB()
  {
    string source = "চ\u09BB\u09CA\u09BBৈৃিৄষৄ\u09CA";
    string str = "2390";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \u2AB1\u2AAC\u2AAD\u2AAB\u2AB0\u2AA8\u2AAA\u2AAA\u2AEC\u2ADD\u2AA9\u2AA8\u2AEB\u2ADA\u2AA9()
  {
    string source = "\uEE95\uEEBA\uEEC2\uEEB1\uEEBE\uEEBF\uEEB1";
    string str = "61004";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 쬍쬎쬀쫣쫛쫣쫜쬢쫝쬐쫭쬌쫞쫝쫱()
  {
    string source = "렀렞렍렚렟렜렛렟렑";
    string str = "47020";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 筂筅筷筪筳筶筂箅筪筨等签筈筂筊()
  {
    string source = "뗧똉똁";
    string str = "46484";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 莒莏药药莡莞荮莵莅莫荴荳荫荮莕()
  {
    string source = "ᱛᱽᱪᱼᱺᱩᱫᱼᱱᱷᱶ";
    string str = "7176";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 䤔䥆䤕䥓䤓䤒䤐䤐䤑䤧䤙䤔䥑䥅䤮()
  {
    string source = "䠃䠫䠢䠪䠟䠦䠢䠟䠙䠗䠪䠟䠥䠤";
    string str = "18358";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 隭雜隕雈隘隓隗集隒隥雄隓隓隧雐()
  {
    string source = "鞙鞩鞧鞲鞧鞸靦鞓鞻鞲鞺鞯鞶鞲鞯鞩鞧鞺鞯鞵鞴";
    string str = "38726";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 慙憋慟慝慗憉慚慗慟憉慝慗慛慝憋()
  {
    string source = "䧚䧻䨊䧻䨈䨃䧿䨄䧷䨄䨊";
    string str = "18838";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \uF1BC\uF1C1\uF1D3\uF1C1\uF1C1\uF1C5\uF1F0\uF1EE\uF1E0\uF1ED\uF1F1\uF202\uF1F9\uF1F2\uF1BD()
  {
    string source = "ϏϴϼϫϸϹϫ";
    string str = "902";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \uF4A4\uF4A4\uF471\uF478\uF4A2\uF471\uF478\uF484\uF497\uF473\uF494\uF476\uF4A5\uF474\uF48E()
  {
    string source = "緳縑縀縍縒縏縎縒縄";
    string str = "32159";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 岄岱岵屿岅岱岆峃岂岲岇岵岴岴岄()
  {
    string source = "平幻干";
    string str = "24070";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD()
  {
    string source = "ꈄ";
    string str = "41432";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 맯맫릵릹릴릴맙릳맕릳맰맧릷릻맸()
  {
    string source = "";
    string str = "25447";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 締緫縄縌縀緘緰総緐緖緐縃緵緢総()
  {
    string source = "칛";
    string str = "52779";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 颡颦颥飖颶颦飤飗颩飣颡颹飀飣颣()
  {
    string source = "";
    string str = "4535";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string ৰীৄূীূ৯\u09D4\u09F4৯ো\u09E4িি()
  {
    string source = "뢃";
    string str = "47187";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \uE146\uE10B\uE109\uE10F\uE12F\uE13E\uE13A\uE145\uE125\uE122\uE128\uE142\uE13E\uE109\uE13D()
  {
    string source = "";
    string str = "30477";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD()
  {
    string source = "䆦";
    string str = "16758";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 䇱䈈䈚䈣䇺䇶䇳䈋䈨䇶䇱䇱䇳䈚䈗()
  {
    string source = "";
    string str = "30514";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \uE0E7\uE11B\uE0DC\uE0D8\uE0F3\uE0FA\uE117\uE0D8\uE0D9\uE0F2\uE0FE\uE0EC\uE107\uE0DA\uE0DA()
  {
    string source = "럵";
    string str = "47044";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 鼹齪齌鼸齨齲鼴齥鼸鼶鼴鼷鼺鼼鼴()
  {
    string source = "";
    string str = "48311";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 䒩䓔䒨䓘䓓䒿䓔䓙䒺䒥䒤䒢䒤䓢䒴()
  {
    string source = "蕨";
    string str = "34103";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 䀑㿟㿙㿠䀡䀋㿙㿚䀝䀒㿚䀋㿢㿜䀍()
  {
    string source = "";
    string str = "32759";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \uE1C3\uE1A7\uE189\uE190\uE1BD\uE18E\uE191\uE1BC\uE188\uE188\uE191\uE18B\uE18F\uE18E\uE188()
  {
    string source = "";
    string str = "10306";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 잨쟌쟓쟊잳쟗잧쟃잤쟗잽장잦잢쟜()
  {
    string source = "뇶눊눡뇉뇚뇙눡뇚뇙";
    string str = "45481";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 嘤噀噔嘨嘢嘹噘嘧噔噕噖噉噙噗噗()
  {
    string source = "\uE215\uE229\uE240\uE1E8\uE1F9\uE1F8\uE240\uE1F9\uE1F8";
    string str = "57800";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 뱾뱧벍뱫뱽뱣뱫뱫뱴법벢벊뱣벗뱤()
  {
    string source = "ꦒꦒ꧀ꦒꦒ꧀ꦭ꧑꧅꧋꧉꧗꧀\uA9DC꧃꧌꧓\uA9DA꧉꧖ꦒ꧔꧒꧋";
    string str = "43364";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \u2A50\u2A7B\u2A58\u2A4A\u2A4E\u2A78\u2A4A\u2A65\u2A7C\u2A78\u2A8F\u2A6B\u2A47\u2A66\u2A7C()
  {
    string source = "㓂㓂㓰㓂㓂㓰㓝㔁㓵㓻㓹㔇㓰㔌㓂㔄㔂㓻";
    string str = "13460";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 㿄㾖㿐㿅㾎㾑㾥㿗㿇㾔㾰㾕㿀㿄㾐()
  {
    string source = "\uDE76\uDE76\uDEA4\uDE76\uDE76\uDEA4\uDE91\uDEB5\uDEA9\uDEAF\uDEAD\uDEBB\uDEA4\uDEB5\uDEA7\uDEB0\uDEB7\uDEBE\uDEAD\uDEBA\uDE76\uDEB8\uDEB6\uDEAF";
    string str = "56904";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 킷킣큰큲킴킞킢킡킩킞킢큱큮큳큭()
  {
    string source = "臡臡舏臡臡舏臼舠舔舚舘舦舏舠臡舣舡舚";
    string str = "33203";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 뛨뛨뛚뚸뛨뚷뛜뛀뚿뚻뚷뛈뚾뛩뚽()
  {
    string source = "뷨븐븉뷿븥븢븧븝븚븨뷴븜븨븦븩븨븧븞븧븭뷨븦븚븢븧븰븢븧븝븨븰뷧븱븚븦븥";
    string str = "48569";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 䚿䚒䚕䛂䚥䛐䚍䚒䚕䚌䚐䚕䚏䛀䛀()
  {
    string source = "ᯧ\u1BFA᯲\u1BF4ᯧ\u1BF5\u1BF5ᯫᯱᯰ";
    string str = "7042";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 뉟늑느뉟느뉴뉣뉠뉤늠뉲뉣뉦뉠뉢()
  {
    string source = "喬喿喷喹喬喺喺喰営喵";
    string str = "21831";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 鄍郙郙郛郝郚郛郙郳郫鄏鄊郯郜鄋()
  {
    string source = "῀";
    string str = "8080";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 먵먬먍먷먹먅먄먶먉먄먊먹먿먾먅()
  {
    string source = "셭셲셿";
    string str = "49417";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD()
  {
    string source = "悇悉悁";
    string str = "24596";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 蛍蛕蛿蛍蜗蛿蜃蜕蛱蛍蛍蛳蛒蛖蛒()
  {
    string source = "\uE780\uE782\uE76F";
    string str = "59149";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 㛉㚛㛉㚓㛙㚜㛐㛅㚯㚛㚗㚹㚨㚩㚥()
  {
    string source = "羞羦羝";
    string str = "32561";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 럵럱럴럴렂럦럃럅렀럨럳랿럃럛럁()
  {
    string source = "횿후훑";
    string str = "54875";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 싺쌃싾싿쌬쌻쌮쌙쌘쌴쌞쌌쌁쌴싺()
  {
    string source = "ᘯᘢᘰ";
    string str = "5565";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 좟좭죍좞좜좜죂좝죍좜죎좤죍죑좝()
  {
    string source = "卞卜卝卟";
    string str = "21227";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \u29B1\u29C5\u2984\u2981\u29B3\u299F\u2989\u2995\u29B1\u2985\u2983\u29B1\u29B5\u2981\u2982()
  {
    string source = "뷃뷂뷊";
    string str = "48467";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 儞僮儉儅僱僰僯僭僩僩儳僪僬儋僯()
  {
    string source = "聏聒聊";
    string str = "32739";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 䖓䖟䖛䖙䕿䕾䖵䕽䖢䖰䖰䕽䕻䖯䗅()
  {
    string source = "";
    string str = "64906";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 嶶嵮嶀嶶嶟嶣嶋嵵嶟嵯嵳嵭嶋嶟嶟()
  {
    string source = "\uE7B0";
    string str = "59280";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 㩏㩊㩎㨡㩛㨚㩎㩎㩎㨺㨝㩡㨚㩊㩍()
  {
    string source = "䘒";
    string str = "17833";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string ｓｵｕｔﾀﾀﾅｐﾅﾃｒｷﾄｰｏ()
  {
    string source = "沩";
    string str = "27711";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \u26A3\u26A2\u26CD\u269E\u26CD\u269F\u26A1\u26CD\u26C3\u26DA\u26E0\u269F\u26AD\u269C\u26A1()
  {
    string source = "\uDF88\uDF9C\uDFA4\uDFA9\uDF92\uDFA4\uDFA9\uDF9F\uDFAA\uDFB2\uDF69\uDFB3\uDF9C\uDFA8\uDFA7";
    string str = "57147";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }
}
