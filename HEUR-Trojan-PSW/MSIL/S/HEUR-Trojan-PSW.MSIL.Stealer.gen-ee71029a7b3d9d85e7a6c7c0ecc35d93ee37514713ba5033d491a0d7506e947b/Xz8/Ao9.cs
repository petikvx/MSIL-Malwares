// Decompiled with JetBrains decompiler
// Type: Xz8.Ao9
// Assembly: k3F4, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: EF2862A8-7088-4F2B-ADD5-AFDC446098D9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-ee71029a7b3d9d85e7a6c7c0ecc35d93ee37514713ba5033d491a0d7506e947b.exe

using c0T;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using x4Q;
using x7X;

namespace Xz8
{
  [StandardModule]
  internal sealed class Ao9
  {
    public static Gx7[] Ⴀ = new Gx7[100000];
    public static int Ⴓ;
    public static string Ⴓ;
    private static Tt1 Ⴈ = new Tt1();

    public static int Km3()
    {
      Ao9.Ⴓ = 0;
      object enumerator;
      try
      {
        enumerator = (object) Ao9.Ⴈ.Ⴍ.GetEnumerator();
        while (((IEnumerator) enumerator).MoveNext())
        {
          object current = (object) ((IEnumerator<Ap0>) enumerator).Current;
          checked { ++Ao9.Ⴓ; }
        }
      }
      finally
      {
        ((IDisposable) enumerator)?.Dispose();
      }
      return Ao9.Ⴓ;
    }

    public static string w9N()
    {
      Ao9.Ⴓ = 0;
      object enumerator;
      try
      {
        enumerator = (object) Ao9.Ⴈ.Ⴍ.GetEnumerator();
        while (((IEnumerator) enumerator).MoveNext())
        {
          INotifyPropertyChanging current = (INotifyPropertyChanging) (enumerator as IEnumerator<Ap0>).Current;
          checked { ++Ao9.Ⴓ; }
        }
      }
      finally
      {
        if (enumerator is IEnumerator<Ap0>)
          (enumerator as IEnumerator<Ap0>).Dispose();
      }
      return (object) checked (Ao9.Ⴓ + 1).ToString("A10000") as string;
    }
  }
}
