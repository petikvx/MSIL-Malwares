// Decompiled with JetBrains decompiler
// Type: Cradiator.Config.ChangeHandlers.ShowCountdownChangeHandler
// Assembly: EvidenceTypeDescript, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B50F5F07-D63E-4094-B80D-E78774C87D41
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan.MSIL.Crypt.gen-c59c8e3be7ec42553ff6af2588e3bcd0569e9467dbb9307218fb8724e02739f2.exe

using Cradiator.Model;
using Cradiator.Views;
using System;

namespace Cradiator.Config.ChangeHandlers
{
  public class ShowCountdownChangeHandler : IConfigChangeHandler
  {
    private readonly ICountdownTimer _countdownTimer;
    private readonly ICradiatorView _view;

    public ShowCountdownChangeHandler(ICountdownTimer countdownTimer, ICradiatorView view)
    {
      this._countdownTimer = countdownTimer;
      this._view = view;
    }

    void IConfigChangeHandler.ConfigUpdated(ConfigSettings newSettings)
    {
      lock (this._countdownTimer)
      {
        if (newSettings.ShowCountdown == this._countdownTimer.IsSwitchedOn)
          return;
        if (newSettings.ShowCountdown)
        {
          this._countdownTimer.SwitchOn();
          this._countdownTimer.Start();
        }
        else
        {
          this._countdownTimer.Stop();
          this._countdownTimer.SwitchOff();
        }
        this._view.Invoke((Action) (() =>
        {
          this._countdownTimer.Execute();
          this._view.ShowCountdown(newSettings.ShowCountdown);
        }));
      }
    }
  }
}
