// Decompiled with JetBrains decompiler
// Type: 132966078364.822255978171
// Assembly: 087135227926, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
// MVID: 0DB320EA-9C28-4716-BA63-69641BABDE67
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-3283830ccf60d4481608cb301a1e81f6b89bd02ff08e41f6034488bc28baf010.exe

using \u003132966078364;
using \u003133004791854;
using \u003208825527781;
using \u003293721351544;
using \u003716157929241;
using System;
using System.Collections.Generic;
using System.Globalization;
using System.Text;

namespace \u003132966078364
{
  internal struct \u003822255978171
  {
    private static readonly char[] \u003622511543028 = new char[6]
    {
      '.',
      ' ',
      '[',
      ']',
      '(',
      ')'
    };
    internal \u003499671838538 \u003084265227338;
    internal int \u003227931165797;
    internal string \u003868680910229;
    internal bool \u003240244190713;

    public \u003822255978171(\u003499671838538 type)
    {
      this.\u003084265227338 = type;
      this.\u003240244190713 = \u003822255978171.\u003897168001871(type);
      this.\u003227931165797 = -1;
      this.\u003868680910229 = (string) null;
    }

    internal int \u003477654992339()
    {
      switch (this.\u003084265227338)
      {
        case \u003499671838538.Object:
          return this.\u003868680910229.Length + 5;
        case \u003499671838538.Array:
        case \u003499671838538.Constructor:
          return \u003243965671827.\u003396658521286((ulong) this.\u003227931165797) + 2;
        default:
          throw new ArgumentOutOfRangeException("Type");
      }
    }

    internal void \u003640169472192(StringBuilder _param1)
    {
      switch (this.\u003084265227338)
      {
        case \u003499671838538.Object:
          string str = this.\u003868680910229;
          if (str.IndexOfAny(\u003822255978171.\u003622511543028) != -1)
          {
            _param1.Append("['");
            _param1.Append(str);
            _param1.Append("']");
            break;
          }
          if (_param1.Length > 0)
            _param1.Append('.');
          _param1.Append(str);
          break;
        case \u003499671838538.Array:
        case \u003499671838538.Constructor:
          _param1.Append('[');
          _param1.Append(this.\u003227931165797);
          _param1.Append(']');
          break;
      }
    }

    internal static bool \u003897168001871(\u003499671838538 _param0) => _param0 == \u003499671838538.Array || _param0 == \u003499671838538.Constructor;

    internal static string \u003029273547335(
      List<\u003822255978171> _param0,
      \u003822255978171? _param1)
    {
      int capacity = 0;
      \u003822255978171 valueOrDefault;
      if (_param0 != null)
      {
        for (int index = 0; index < _param0.Count; ++index)
        {
          int num1 = capacity;
          valueOrDefault = _param0[index];
          int num2 = valueOrDefault.\u003477654992339();
          capacity = num1 + num2;
        }
      }
      if (_param1.HasValue)
      {
        int num3 = capacity;
        valueOrDefault = _param1.GetValueOrDefault();
        int num4 = valueOrDefault.\u003477654992339();
        capacity = num3 + num4;
      }
      StringBuilder stringBuilder = new StringBuilder(capacity);
      if (_param0 != null)
      {
        foreach (\u003822255978171 obj in _param0)
          obj.\u003640169472192(stringBuilder);
      }
      if (_param1.HasValue)
      {
        valueOrDefault = _param1.GetValueOrDefault();
        valueOrDefault.\u003640169472192(stringBuilder);
      }
      return stringBuilder.ToString();
    }

    internal static string \u003358142129139(IJsonLineInfo _param0, string _param1, string _param2)
    {
      if (!_param2.EndsWith(Environment.NewLine, StringComparison.Ordinal))
      {
        _param2 = _param2.Trim();
        if (!_param2.\u003942847903286('.'))
          _param2 += ".";
        _param2 += " ";
      }
      _param2 += "Path '{0}'".\u003212424921759((IFormatProvider) CultureInfo.InvariantCulture, (object) _param1);
      if (_param0 != null && _param0.HasLineInfo())
        _param2 += ", line {0}, position {1}".\u003937370926224((IFormatProvider) CultureInfo.InvariantCulture, (object) _param0.LineNumber, (object) _param0.LinePosition);
      _param2 += ".";
      return _param2;
    }
  }
}
