// Decompiled with JetBrains decompiler
// Type: ⁫‬⁬​‍‫‌‫‭⁪⁫‎‭‬​‬⁬⁯⁭‌‎‭⁭⁫⁭⁪⁯‬⁮‬⁪‬​‏‌‌‪⁫‍‏‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using System;

public class \u206B‬⁬​‍‫‌‫‭⁪⁫‎‭‬​‬⁬⁯⁭‌‎‭⁭⁫⁭⁪⁯‬⁮‬⁪‬​‏‌‌‪⁫‍‏‮
{
  internal byte[] \u206E‭‍⁮‪⁬​‪‪⁮‎‏‍‌‮‫‎‭‎⁮⁮⁫‭‌‮⁪⁪⁬‫‭⁬‭⁫‍⁬‎⁮‭‪⁯‮;
  internal int \u206D‎​‮‭‭⁭‬​‭⁪‫⁯‏⁬⁪⁪⁪⁮‌⁬⁪‭‏⁫⁭​‪‎‭‫⁮⁮‬‏⁭‎⁮⁮‬‮;
  internal \u206C‍‏‌‍​⁭‎⁫⁬⁯⁯​‫‭‍‎⁮​⁮‌‏‮‬‌⁪‬⁪‮⁫‎⁫‌⁮⁯⁮​‬‏⁮‮ \u202A⁯‮⁬‭⁬⁭‍‮‭‍‍⁪‍‭‌‪‭​⁬‍⁫⁭⁪‬⁭⁬⁯⁬‎⁫‫‪‪⁮‌⁬⁮‎‎‮;

  public \u206B‬⁬​‍‫‌‫‭⁪⁫‎‭‬​‬⁬⁯⁭‌‎‭⁭⁫⁭⁪⁯‬⁮‬⁪‬​‏‌‌‪⁫‍‏‮(
    \u206C‍‏‌‍​⁭‎⁫⁬⁯⁯​‫‭‍‎⁮​⁮‌‏‮‬‌⁪‬⁪‮⁫‎⁫‌⁮⁯⁮​‬‏⁮‮ _param1,
    int _param2)
  {
    this.\u202A⁯‮⁬‭⁬⁭‍‮‭‍‍⁪‍‭‌‪‭​⁬‍⁫⁭⁪‬⁭⁬⁯⁬‎⁫‫‪‪⁮‌⁬⁮‎‎‮ = _param1;
    this.\u206E‭‍⁮‪⁬​‪‪⁮‎‏‍‌‮‫‎‭‎⁮⁮⁫‭‌‮⁪⁪⁬‫‭⁬‭⁫‍⁬‎⁮‭‪⁯‮ = _param2 % _param1.\u206A‌‌⁬⁮‬⁯⁮⁯‏‌‭‌‬‪⁮‍⁫‏⁯⁪⁮‎⁪⁯⁬‏‏‫‏⁮‎‎⁫‪‎‎‌⁮‍‮() == 0 ? new byte[_param2] : throw new ArgumentException("buffer size not multiple of input block size");
  }

  public int \u200E⁯‬‎⁯⁭⁭‬⁬⁫‍‌‫‫⁮‭‫‍⁫⁯⁫⁫‫‭‭‌​‫‏‬⁫‏‪⁪‬⁫‎‍‫⁮‮(
    byte _param1,
    byte[] _param2,
    int _param3)
  {
    int num = 0;
    this.\u206E‭‍⁮‪⁬​‪‪⁮‎‏‍‌‮‫‎‭‎⁮⁮⁫‭‌‮⁪⁪⁬‫‭⁬‭⁫‍⁬‎⁮‭‪⁯‮[this.\u206D‎​‮‭‭⁭‬​‭⁪‫⁯‏⁬⁪⁪⁪⁮‌⁬⁪‭‏⁫⁭​‪‎‭‫⁮⁮‬‏⁭‎⁮⁮‬‮++] = _param1;
    if (this.\u206D‎​‮‭‭⁭‬​‭⁪‫⁯‏⁬⁪⁪⁪⁮‌⁬⁪‭‏⁫⁭​‪‎‭‫⁮⁮‬‏⁭‎⁮⁮‬‮ == this.\u206E‭‍⁮‪⁬​‪‪⁮‎‏‍‌‮‫‎‭‎⁮⁮⁫‭‌‮⁪⁪⁬‫‭⁬‭⁫‍⁬‎⁮‭‪⁯‮.Length)
    {
      num = this.\u202A⁯‮⁬‭⁬⁭‍‮‭‍‍⁪‍‭‌‪‭​⁬‍⁫⁭⁪‬⁭⁬⁯⁬‎⁫‫‪‪⁮‌⁬⁮‎‎‮.\u200D⁮‭‎⁪‏‌⁬‮‎⁬⁭‮‎⁫⁮⁯‌‏⁬‍⁭​‎​‍‏‏‌⁭‫‬⁯⁪‎⁪‮⁫⁬⁬‮(this.\u206E‭‍⁮‪⁬​‪‪⁮‎‏‍‌‮‫‎‭‎⁮⁮⁫‭‌‮⁪⁪⁬‫‭⁬‭⁫‍⁬‎⁮‭‪⁯‮, 0, this.\u206E‭‍⁮‪⁬​‪‪⁮‎‏‍‌‮‫‎‭‎⁮⁮⁫‭‌‮⁪⁪⁬‫‭⁬‭⁫‍⁬‎⁮‭‪⁯‮.Length, _param2, _param3);
      this.\u206D‎​‮‭‭⁭‬​‭⁪‫⁯‏⁬⁪⁪⁪⁮‌⁬⁪‭‏⁫⁭​‪‎‭‫⁮⁮‬‏⁭‎⁮⁮‬‮ = 0;
    }
    return num;
  }

  public int \u206D‫⁭‪‭‏‎‌⁪⁪⁯‪​‌⁯‪‮⁮⁭‎⁪​⁯⁮‪‬‮⁪‭‬‍‫⁪⁭‍⁪‏⁪⁬‪‮(
    byte[] _param1,
    int _param2,
    int _param3,
    byte[] _param4,
    int _param5)
  {
    if (_param3 < 0)
      throw new ArgumentException("Can't have a negative input length!");
    int num1 = 0;
    int length = this.\u206E‭‍⁮‪⁬​‪‪⁮‎‏‍‌‮‫‎‭‎⁮⁮⁫‭‌‮⁪⁪⁬‫‭⁬‭⁫‍⁬‎⁮‭‪⁯‮.Length - this.\u206D‎​‮‭‭⁭‬​‭⁪‫⁯‏⁬⁪⁪⁪⁮‌⁬⁪‭‏⁫⁭​‪‎‭‫⁮⁮‬‏⁭‎⁮⁮‬‮;
    if (_param3 > length)
    {
      Array.Copy((Array) _param1, _param2, (Array) this.\u206E‭‍⁮‪⁬​‪‪⁮‎‏‍‌‮‫‎‭‎⁮⁮⁫‭‌‮⁪⁪⁬‫‭⁬‭⁫‍⁬‎⁮‭‪⁯‮, this.\u206D‎​‮‭‭⁭‬​‭⁪‫⁯‏⁬⁪⁪⁪⁮‌⁬⁪‭‏⁫⁭​‪‎‭‫⁮⁮‬‏⁭‎⁮⁮‬‮, length);
      int num2 = num1 + this.\u202A⁯‮⁬‭⁬⁭‍‮‭‍‍⁪‍‭‌‪‭​⁬‍⁫⁭⁪‬⁭⁬⁯⁬‎⁫‫‪‪⁮‌⁬⁮‎‎‮.\u200D⁮‭‎⁪‏‌⁬‮‎⁬⁭‮‎⁫⁮⁯‌‏⁬‍⁭​‎​‍‏‏‌⁭‫‬⁯⁪‎⁪‮⁫⁬⁬‮(this.\u206E‭‍⁮‪⁬​‪‪⁮‎‏‍‌‮‫‎‭‎⁮⁮⁫‭‌‮⁪⁪⁬‫‭⁬‭⁫‍⁬‎⁮‭‪⁯‮, 0, this.\u206E‭‍⁮‪⁬​‪‪⁮‎‏‍‌‮‫‎‭‎⁮⁮⁫‭‌‮⁪⁪⁬‫‭⁬‭⁫‍⁬‎⁮‭‪⁯‮.Length, _param4, _param5);
      this.\u206D‎​‮‭‭⁭‬​‭⁪‫⁯‏⁬⁪⁪⁪⁮‌⁬⁪‭‏⁫⁭​‪‎‭‫⁮⁮‬‏⁭‎⁮⁮‬‮ = 0;
      _param3 -= length;
      _param2 += length;
      _param5 += num2;
      int num3 = _param3 - _param3 % this.\u206E‭‍⁮‪⁬​‪‪⁮‎‏‍‌‮‫‎‭‎⁮⁮⁫‭‌‮⁪⁪⁬‫‭⁬‭⁫‍⁬‎⁮‭‪⁯‮.Length;
      num1 = num2 + this.\u202A⁯‮⁬‭⁬⁭‍‮‭‍‍⁪‍‭‌‪‭​⁬‍⁫⁭⁪‬⁭⁬⁯⁬‎⁫‫‪‪⁮‌⁬⁮‎‎‮.\u200D⁮‭‎⁪‏‌⁬‮‎⁬⁭‮‎⁫⁮⁯‌‏⁬‍⁭​‎​‍‏‏‌⁭‫‬⁯⁪‎⁪‮⁫⁬⁬‮(_param1, _param2, num3, _param4, _param5);
      _param3 -= num3;
      _param2 += num3;
    }
    if (_param3 != 0)
    {
      Array.Copy((Array) _param1, _param2, (Array) this.\u206E‭‍⁮‪⁬​‪‪⁮‎‏‍‌‮‫‎‭‎⁮⁮⁫‭‌‮⁪⁪⁬‫‭⁬‭⁫‍⁬‎⁮‭‪⁯‮, this.\u206D‎​‮‭‭⁭‬​‭⁪‫⁯‏⁬⁪⁪⁪⁮‌⁬⁪‭‏⁫⁭​‪‎‭‫⁮⁮‬‏⁭‎⁮⁮‬‮, _param3);
      this.\u206D‎​‮‭‭⁭‬​‭⁪‫⁯‏⁬⁪⁪⁪⁮‌⁬⁪‭‏⁫⁭​‪‎‭‫⁮⁮‬‏⁭‎⁮⁮‬‮ += _param3;
    }
    return num1;
  }
}
