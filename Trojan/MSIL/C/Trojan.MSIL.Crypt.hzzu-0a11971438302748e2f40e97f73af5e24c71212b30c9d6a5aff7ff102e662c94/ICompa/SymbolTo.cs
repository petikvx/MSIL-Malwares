// Decompiled with JetBrains decompiler
// Type: ICompa.SymbolTo
// Assembly: DictionaryValueCollect, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 264A7E74-FCA9-4101-A215-90F8B6150D1A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan.MSIL.Crypt.hzzu-0a11971438302748e2f40e97f73af5e24c71212b30c9d6a5aff7ff102e662c94.exe

namespace ICompa
{
  public class SymbolTo
  {
    public SymbolTo()
    {
label_1:
      int num1 = 86761059;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1911476490)) % 4U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * -1083766520 ^ 392289460;
            continue;
          case 2:
            num1 = (int) num2 * 309371860 ^ 362565878;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public SymbolTo(string id, string UserName)
    {
      this.Id = id;
      this.Name = UserName;
      this.Balance = this.Winstreak = this.WinCount = this.LoseCount = this.Owing = 0;
    }

    public SymbolTo(
      string id,
      string UserName,
      int Balance,
      int WinStreak,
      int WinCount,
      int LoseCount,
      int Games,
      int Owing,
      double AvgBet,
      int MaxBet,
      int MinBet,
      string LastPlay,
      int CurrentStreak)
    {
      this.Id = id;
      this.Name = UserName;
      this.Balance = Balance;
      this.Winstreak = WinStreak;
      this.WinCount = WinCount;
      this.LoseCount = LoseCount;
      this.Games = Games;
      this.Owing = Owing;
      this.AverageBet = AvgBet;
      this.MaxBet = MaxBet;
      this.MinBet = MinBet;
      this.LastPlay = LastPlay;
      this.CurrentStreak = CurrentStreak;
    }

    public string Id { get; set; }

    public string Name { get; set; }

    public int Balance { get; set; }

    public int Winstreak { get; set; }

    public int WinCount { get; set; }

    public int LoseCount { get; set; }

    public int Games { get; set; }

    public int Owing { get; set; }

    public double AverageBet { get; set; }

    public int MaxBet { get; set; }

    public int MinBet { get; set; }

    public string LastPlay { get; set; }

    public int CurrentStreak { get; set; }
  }
}
