// Decompiled with JetBrains decompiler
// Type: Intuit.Spc.Esd.UpdateManager.ProjectInstaller
// Assembly: IntuitUpdateService, Version=4.0.6.0, Culture=neutral, PublicKeyToken=3ff6b78e2989595a
// MVID: 08B38694-3D86-4C13-AE29-EA4E3516801F
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan.Win32.Patched.mf-6695a931cd9c1cf19aea603bb85da7afffcb7e9107bf375bfa38f7526c0c80f4.exe

using System;
using System.Collections;
using System.ComponentModel;
using System.Configuration.Install;
using System.ServiceProcess;
using System.Windows.Forms;

namespace Intuit.Spc.Esd.UpdateManager
{
  [RunInstaller(true)]
  public class ProjectInstaller : Installer
  {
    private IContainer components;
    private ServiceProcessInstaller serviceProcessInstaller1;
    private ServiceInstaller serviceInstaller1;

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(disposing);
    }

    private void InitializeComponent()
    {
      this.serviceProcessInstaller1 = new ServiceProcessInstaller();
      this.serviceInstaller1 = new ServiceInstaller();
      this.serviceProcessInstaller1.Account = ServiceAccount.LocalSystem;
      this.serviceProcessInstaller1.Password = (string) null;
      this.serviceProcessInstaller1.Username = (string) null;
      this.serviceInstaller1.Description = "Helps Intuit applications automatically update themselves.";
      this.serviceInstaller1.DisplayName = "Intuit Update Service";
      this.serviceInstaller1.ServiceName = "IntuitUpdateService";
      this.serviceInstaller1.StartType = ServiceStartMode.Automatic;
      this.Installers.AddRange(new Installer[2]
      {
        (Installer) this.serviceProcessInstaller1,
        (Installer) this.serviceInstaller1
      });
    }

    public ProjectInstaller()
    {
      try
      {
        this.InitializeComponent();
      }
      catch (Exception ex)
      {
        int num = (int) MessageBox.Show(ex.ToString());
      }
    }

    public override void Install(IDictionary stateSaver)
    {
      try
      {
        base.Install(stateSaver);
        new ServiceController(this.serviceInstaller1.ServiceName).Start();
      }
      catch (Exception ex)
      {
        int num = (int) MessageBox.Show(ex.ToString());
      }
    }
  }
}
