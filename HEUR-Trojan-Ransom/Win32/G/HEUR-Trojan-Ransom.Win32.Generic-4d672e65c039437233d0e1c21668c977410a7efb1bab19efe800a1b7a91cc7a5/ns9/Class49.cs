// Decompiled with JetBrains decompiler
// Type: ns9.Class49
// Assembly: TRM, Version=1.0.4536.20171, Culture=neutral, PublicKeyToken=null
// MVID: 79277CC3-AD77-4213-861C-69775F8AFDDB
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.07\HEUR-Trojan-Ransom.Win32.Generic-4d672e65c039437233d0e1c21668c977410a7efb1bab19efe800a1b7a91cc7a5.exe

using ns2;
using System;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Security.Cryptography;

namespace ns9
{
  internal sealed class Class49
  {
    private static bool smethod_0(Assembly assembly_0, Assembly assembly_1)
    {
      byte[] publicKey1 = assembly_0.GetName().GetPublicKey();
      byte[] publicKey2 = assembly_1.GetName().GetPublicKey();
      if (publicKey2 == null != (publicKey1 == null))
        return false;
      if (publicKey2 != null)
      {
        for (int index = 0; index < publicKey2.Length; ++index)
        {
          if ((int) publicKey2[index] != (int) publicKey1[index])
            return false;
        }
      }
      return true;
    }

    public static byte[] smethod_1(byte[] byte_0)
    {
      Assembly callingAssembly = Assembly.GetCallingAssembly();
      Assembly executingAssembly = Assembly.GetExecutingAssembly();
      if ((object) callingAssembly != (object) executingAssembly && !Class49.smethod_0(executingAssembly, callingAssembly))
        return (byte[]) null;
      Class49.Stream0 stream0 = new Class49.Stream0(byte_0);
      byte[] byte_0_1 = new byte[0];
      int num1 = stream0.method_1();
      if (num1 == 67324752)
      {
        short num2 = (short) stream0.method_0();
        int num3 = stream0.method_0();
        int num4 = stream0.method_0();
        if (num1 != 67324752 || num2 != (short) 20 || num3 != 0 || num4 != 8)
          throw new FormatException("Wrong Header Signature");
        stream0.method_1();
        stream0.method_1();
        stream0.method_1();
        int length = stream0.method_1();
        int count1 = stream0.method_0();
        int count2 = stream0.method_0();
        if (count1 > 0)
        {
          byte[] buffer = new byte[count1];
          stream0.Read(buffer, 0, count1);
        }
        if (count2 > 0)
        {
          byte[] buffer = new byte[count2];
          stream0.Read(buffer, 0, count2);
        }
        byte[] numArray = new byte[stream0.Length - stream0.Position];
        stream0.Read(numArray, 0, numArray.Length);
        Class49.Class50 class50 = new Class49.Class50(numArray);
        byte_0_1 = new byte[length];
        class50.method_2(byte_0_1, 0, byte_0_1.Length);
      }
      else
      {
        int num5 = num1 >> 24;
        if (num1 - (num5 << 24) != 8223355)
          throw new FormatException("Unknown Header");
        if (num5 == 1)
        {
          int length1 = stream0.method_1();
          byte_0_1 = new byte[length1];
          int int_10;
          for (int int_9 = 0; int_9 < length1; int_9 += int_10)
          {
            int length2 = stream0.method_1();
            int_10 = stream0.method_1();
            byte[] numArray = new byte[length2];
            stream0.Read(numArray, 0, numArray.Length);
            new Class49.Class50(numArray).method_2(byte_0_1, int_9, int_10);
          }
        }
        if (num5 == 2)
        {
          byte[] byte_0_2 = new byte[8]
          {
            (byte) 14,
            (byte) 180,
            (byte) 182,
            (byte) 145,
            (byte) 50,
            (byte) 244,
            (byte) 231,
            (byte) 20
          };
          byte[] byte_1 = new byte[8]
          {
            (byte) 89,
            (byte) 122,
            (byte) 128,
            (byte) 145,
            (byte) 154,
            (byte) 133,
            (byte) 172,
            (byte) 90
          };
          using (Class48 class48 = new Class48())
          {
            using (ICryptoTransform cryptoTransform = class48.method_0(byte_0_2, byte_1, true))
              byte_0_1 = Class49.smethod_1(cryptoTransform.TransformFinalBlock(byte_0, 4, byte_0.Length - 4));
          }
        }
        if (num5 == 3)
        {
          byte[] byte_0_3 = new byte[16]
          {
            (byte) 1,
            (byte) 1,
            (byte) 1,
            (byte) 1,
            (byte) 1,
            (byte) 1,
            (byte) 1,
            (byte) 1,
            (byte) 1,
            (byte) 1,
            (byte) 1,
            (byte) 1,
            (byte) 1,
            (byte) 1,
            (byte) 1,
            (byte) 1
          };
          byte[] byte_1 = new byte[16]
          {
            (byte) 2,
            (byte) 2,
            (byte) 2,
            (byte) 2,
            (byte) 2,
            (byte) 2,
            (byte) 2,
            (byte) 2,
            (byte) 2,
            (byte) 2,
            (byte) 2,
            (byte) 2,
            (byte) 2,
            (byte) 2,
            (byte) 2,
            (byte) 2
          };
          using (Class47 class47 = new Class47())
          {
            using (ICryptoTransform cryptoTransform = class47.method_0(byte_0_3, byte_1, true))
              byte_0_1 = Class49.smethod_1(cryptoTransform.TransformFinalBlock(byte_0, 4, byte_0.Length - 4));
          }
        }
      }
      stream0.Close();
      return byte_0_1;
    }

    internal sealed class Class50
    {
      private static readonly int[] int_0 = new int[29]
      {
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        13,
        15,
        17,
        19,
        23,
        27,
        31,
        35,
        43,
        51,
        59,
        67,
        83,
        99,
        115,
        131,
        163,
        195,
        227,
        258
      };
      private static readonly int[] int_1 = new int[29]
      {
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        1,
        1,
        1,
        2,
        2,
        2,
        2,
        3,
        3,
        3,
        3,
        4,
        4,
        4,
        4,
        5,
        5,
        5,
        5,
        0
      };
      private static readonly int[] int_2 = new int[30]
      {
        1,
        2,
        3,
        4,
        5,
        7,
        9,
        13,
        17,
        25,
        33,
        49,
        65,
        97,
        129,
        193,
        257,
        385,
        513,
        769,
        1025,
        1537,
        2049,
        3073,
        4097,
        6145,
        8193,
        12289,
        16385,
        24577
      };
      private static readonly int[] int_3 = new int[30]
      {
        0,
        0,
        0,
        0,
        1,
        1,
        2,
        2,
        3,
        3,
        4,
        4,
        5,
        5,
        6,
        6,
        7,
        7,
        8,
        8,
        9,
        9,
        10,
        10,
        11,
        11,
        12,
        12,
        13,
        13
      };
      private int int_4;
      private int int_5;
      private int int_6;
      private int int_7;
      private int int_8;
      private bool bool_0;
      private Class49.Class51 class51_0;
      private Class49.Class52 class52_0;
      private Class49.Class54 class54_0;
      private Class49.Class53 class53_0;
      private Class49.Class53 class53_1;

      public Class50(byte[] byte_0)
      {
        this.class51_0 = new Class49.Class51();
        this.class52_0 = new Class49.Class52();
        this.int_4 = 2;
        this.class51_0.method_7(byte_0, 0, byte_0.Length);
      }

      private bool method_0()
      {
        int num1 = this.class52_0.method_4();
        while (num1 >= 258)
        {
          switch (this.int_4)
          {
            case 7:
              int int_2;
              while (((int_2 = this.class53_0.method_1(this.class51_0)) & -256) == 0)
              {
                this.class52_0.method_0(int_2);
                if (--num1 < 258)
                  return true;
              }
              if (int_2 >= 257)
              {
                this.int_6 = Class49.Class50.int_0[int_2 - 257];
                this.int_5 = Class49.Class50.int_1[int_2 - 257];
                goto case 8;
              }
              else
              {
                if (int_2 < 0)
                  return false;
                this.class53_1 = (Class49.Class53) null;
                this.class53_0 = (Class49.Class53) null;
                this.int_4 = 2;
                return true;
              }
            case 8:
              if (this.int_5 > 0)
              {
                this.int_4 = 8;
                int num2 = this.class51_0.method_0(this.int_5);
                if (num2 < 0)
                  return false;
                this.class51_0.method_1(this.int_5);
                this.int_6 += num2;
              }
              this.int_4 = 9;
              goto case 9;
            case 9:
              int index = this.class53_1.method_1(this.class51_0);
              if (index < 0)
                return false;
              this.int_7 = Class49.Class50.int_2[index];
              this.int_5 = Class49.Class50.int_3[index];
              goto case 10;
            case 10:
              if (this.int_5 > 0)
              {
                this.int_4 = 10;
                int num3 = this.class51_0.method_0(this.int_5);
                if (num3 < 0)
                  return false;
                this.class51_0.method_1(this.int_5);
                this.int_7 += num3;
              }
              this.class52_0.method_2(this.int_6, this.int_7);
              num1 -= this.int_6;
              this.int_4 = 7;
              continue;
            default:
              continue;
          }
        }
        return true;
      }

      private bool method_1()
      {
        switch (this.int_4)
        {
          case 2:
            if (this.bool_0)
            {
              this.int_4 = 12;
              return false;
            }
            int num = this.class51_0.method_0(3);
            if (num < 0)
              return false;
            this.class51_0.method_1(3);
            if ((num & 1) != 0)
              this.bool_0 = true;
            switch (num >> 1)
            {
              case 0:
                this.class51_0.method_4();
                this.int_4 = 3;
                break;
              case 1:
                this.class53_0 = Class49.Class53.class53_0;
                this.class53_1 = Class49.Class53.class53_1;
                this.int_4 = 7;
                break;
              case 2:
                this.class54_0 = new Class49.Class54();
                this.int_4 = 6;
                break;
            }
            return true;
          case 3:
            if ((this.int_8 = this.class51_0.method_0(16)) < 0)
              return false;
            this.class51_0.method_1(16);
            this.int_4 = 4;
            goto case 4;
          case 4:
            if (this.class51_0.method_0(16) < 0)
              return false;
            this.class51_0.method_1(16);
            this.int_4 = 5;
            goto case 5;
          case 5:
            this.int_8 -= this.class52_0.method_3(this.class51_0, this.int_8);
            if (this.int_8 != 0)
              return !this.class51_0.method_5();
            this.int_4 = 2;
            return true;
          case 6:
            if (!this.class54_0.method_0(this.class51_0))
              return false;
            this.class53_0 = this.class54_0.method_1();
            this.class53_1 = this.class54_0.method_2();
            this.int_4 = 7;
            goto case 7;
          case 7:
          case 8:
          case 9:
          case 10:
            return this.method_0();
          case 12:
            return false;
          default:
            return false;
        }
      }

      public int method_2(byte[] byte_0, int int_9, int int_10)
      {
        int num1 = 0;
        do
        {
          if (this.int_4 != 11)
            goto label_2;
label_1:
          continue;
label_2:
          int num2 = this.class52_0.method_6(byte_0, int_9, int_10);
          int_9 += num2;
          num1 += num2;
          int_10 -= num2;
          if (int_10 != 0)
            goto label_1;
          else
            goto label_4;
        }
        while (this.method_1() || this.class52_0.method_5() > 0 && this.int_4 != 11);
        goto label_5;
label_4:
        return num1;
label_5:
        return num1;
      }
    }

    internal sealed class Class51
    {
      private byte[] byte_0;
      private int int_0 = 0;
      private int int_1 = 0;
      private uint uint_0 = 0;
      private int int_2 = 0;

      public int method_0(int int_3)
      {
        if (this.int_2 < int_3)
        {
          if (this.int_0 == this.int_1)
            return -1;
          this.uint_0 |= (uint) (((int) this.byte_0[this.int_0++] & (int) byte.MaxValue | ((int) this.byte_0[this.int_0++] & (int) byte.MaxValue) << 8) << this.int_2);
          this.int_2 += 16;
        }
        return (int) ((long) this.uint_0 & (long) ((1 << int_3) - 1));
      }

      public void method_1(int int_3)
      {
        this.uint_0 >>= int_3;
        this.int_2 -= int_3;
      }

      [SpecialName]
      public int method_2() => this.int_2;

      [SpecialName]
      public int method_3() => this.int_1 - this.int_0 + (this.int_2 >> 3);

      public void method_4()
      {
        this.uint_0 >>= this.int_2 & 7;
        this.int_2 &= -8;
      }

      [SpecialName]
      public bool method_5() => this.int_0 == this.int_1;

      public int method_6(byte[] byte_1, int int_3, int int_4)
      {
        int num1 = 0;
        while (this.int_2 > 0 && int_4 > 0)
        {
          byte_1[int_3++] = (byte) this.uint_0;
          this.uint_0 >>= 8;
          this.int_2 -= 8;
          --int_4;
          ++num1;
        }
        if (int_4 == 0)
          return num1;
        int num2 = this.int_1 - this.int_0;
        if (int_4 > num2)
          int_4 = num2;
        Array.Copy((Array) this.byte_0, this.int_0, (Array) byte_1, int_3, int_4);
        this.int_0 += int_4;
        if ((this.int_0 - this.int_1 & 1) != 0)
        {
          this.uint_0 = (uint) this.byte_0[this.int_0++] & (uint) byte.MaxValue;
          this.int_2 = 8;
        }
        return num1 + int_4;
      }

      public void method_7(byte[] byte_1, int int_3, int int_4)
      {
        if (this.int_0 < this.int_1)
          throw new InvalidOperationException();
        int num = int_3 + int_4;
        if (0 > int_3 || int_3 > num || num > byte_1.Length)
          throw new ArgumentOutOfRangeException();
        if ((int_4 & 1) != 0)
        {
          this.uint_0 |= (uint) (((int) byte_1[int_3++] & (int) byte.MaxValue) << this.int_2);
          this.int_2 += 8;
        }
        this.byte_0 = byte_1;
        this.int_0 = int_3;
        this.int_1 = num;
      }
    }

    internal sealed class Class52
    {
      private byte[] byte_0 = new byte[32768];
      private int int_0 = 0;
      private int int_1 = 0;

      public void method_0(int int_2)
      {
        if (this.int_1++ == 32768)
          throw new InvalidOperationException();
        this.byte_0[this.int_0++] = (byte) int_2;
        this.int_0 &= (int) short.MaxValue;
      }

      private void method_1(int int_2, int int_3, int int_4)
      {
        while (int_3-- > 0)
        {
          this.byte_0[this.int_0++] = this.byte_0[int_2++];
          this.int_0 &= (int) short.MaxValue;
          int_2 &= (int) short.MaxValue;
        }
      }

      public void method_2(int int_2, int int_3)
      {
        if ((this.int_1 += int_2) > 32768)
          throw new InvalidOperationException();
        int num1 = this.int_0 - int_3 & (int) short.MaxValue;
        int num2 = 32768 - int_2;
        if (num1 <= num2 && this.int_0 < num2)
        {
          if (int_2 <= int_3)
          {
            Array.Copy((Array) this.byte_0, num1, (Array) this.byte_0, this.int_0, int_2);
            this.int_0 += int_2;
          }
          else
          {
            while (int_2-- > 0)
              this.byte_0[this.int_0++] = this.byte_0[num1++];
          }
        }
        else
          this.method_1(num1, int_2, int_3);
      }

      public int method_3(Class49.Class51 class51_0, int int_2)
      {
        int_2 = Math.Min(Math.Min(int_2, 32768 - this.int_1), class51_0.method_3());
        int int_4 = 32768 - this.int_0;
        int num;
        if (int_2 > int_4)
        {
          num = class51_0.method_6(this.byte_0, this.int_0, int_4);
          if (num == int_4)
            num += class51_0.method_6(this.byte_0, 0, int_2 - int_4);
        }
        else
          num = class51_0.method_6(this.byte_0, this.int_0, int_2);
        this.int_0 = this.int_0 + num & (int) short.MaxValue;
        this.int_1 += num;
        return num;
      }

      public int method_4() => 32768 - this.int_1;

      public int method_5() => this.int_1;

      public int method_6(byte[] byte_1, int int_2, int int_3)
      {
        int num1 = this.int_0;
        if (int_3 > this.int_1)
          int_3 = this.int_1;
        else
          num1 = this.int_0 - this.int_1 + int_3 & (int) short.MaxValue;
        int num2 = int_3;
        int length = int_3 - num1;
        if (length > 0)
        {
          Array.Copy((Array) this.byte_0, 32768 - length, (Array) byte_1, int_2, length);
          int_2 += length;
          int_3 = num1;
        }
        Array.Copy((Array) this.byte_0, num1 - int_3, (Array) byte_1, int_2, int_3);
        this.int_1 -= num2;
        if (this.int_1 < 0)
          throw new InvalidOperationException();
        return num2;
      }
    }

    internal sealed class Class53
    {
      private short[] short_0;
      public static readonly Class49.Class53 class53_0;
      public static readonly Class49.Class53 class53_1;

      static Class53()
      {
        byte[] byte_0_1 = new byte[288];
        int num1 = 0;
        while (num1 < 144)
          byte_0_1[num1++] = (byte) 8;
        while (num1 < 256)
          byte_0_1[num1++] = (byte) 9;
        while (num1 < 280)
          byte_0_1[num1++] = (byte) 7;
        while (num1 < 288)
          byte_0_1[num1++] = (byte) 8;
        Class49.Class53.class53_0 = new Class49.Class53(byte_0_1);
        byte[] byte_0_2 = new byte[32];
        int num2 = 0;
        while (num2 < 32)
          byte_0_2[num2++] = (byte) 5;
        Class49.Class53.class53_1 = new Class49.Class53(byte_0_2);
      }

      public Class53(byte[] byte_0) => this.method_0(byte_0);

      private void method_0(byte[] byte_0)
      {
        int[] numArray1 = new int[16];
        int[] numArray2 = new int[16];
        for (int index1 = 0; index1 < byte_0.Length; ++index1)
        {
          int index2 = (int) byte_0[index1];
          if (index2 > 0)
            ++numArray1[index2];
        }
        int num1 = 0;
        int length = 512;
        for (int index = 1; index <= 15; ++index)
        {
          numArray2[index] = num1;
          num1 += numArray1[index] << 16 - index;
          if (index >= 10)
          {
            int num2 = numArray2[index] & 130944;
            int num3 = num1 & 130944;
            length += num3 - num2 >> 16 - index;
          }
        }
        this.short_0 = new short[length];
        int num4 = 512;
        for (int index = 15; index >= 10; --index)
        {
          int num5 = num1 & 130944;
          num1 -= numArray1[index] << 16 - index;
          for (int int_1 = num1 & 130944; int_1 < num5; int_1 += 128)
          {
            this.short_0[(int) Class49.Class55.smethod_0(int_1)] = (short) (-num4 << 4 | index);
            num4 += 1 << index - 9;
          }
        }
        for (int index3 = 0; index3 < byte_0.Length; ++index3)
        {
          int index4 = (int) byte_0[index3];
          if (index4 != 0)
          {
            int int_1 = numArray2[index4];
            int index5 = (int) Class49.Class55.smethod_0(int_1);
            if (index4 <= 9)
            {
              do
              {
                this.short_0[index5] = (short) (index3 << 4 | index4);
                index5 += 1 << index4;
              }
              while (index5 < 512);
            }
            else
            {
              int num6 = (int) this.short_0[index5 & 511];
              int num7 = 1 << (num6 & 15);
              int num8 = -(num6 >> 4);
              do
              {
                this.short_0[num8 | index5 >> 9] = (short) (index3 << 4 | index4);
                index5 += 1 << index4;
              }
              while (index5 < num7);
            }
            numArray2[index4] = int_1 + (1 << 16 - index4);
          }
        }
      }

      public int method_1(Class49.Class51 class51_0)
      {
        int index;
        if ((index = class51_0.method_0(9)) >= 0)
        {
          int num1;
          if ((num1 = (int) this.short_0[index]) >= 0)
          {
            class51_0.method_1(num1 & 15);
            return num1 >> 4;
          }
          int num2 = -(num1 >> 4);
          int int_3_1 = num1 & 15;
          int num3;
          if ((num3 = class51_0.method_0(int_3_1)) >= 0)
          {
            int num4 = (int) this.short_0[num2 | num3 >> 9];
            class51_0.method_1(num4 & 15);
            return num4 >> 4;
          }
          int int_3_2 = class51_0.method_2();
          int num5 = class51_0.method_0(int_3_2);
          int num6 = (int) this.short_0[num2 | num5 >> 9];
          if ((num6 & 15) > int_3_2)
            return -1;
          class51_0.method_1(num6 & 15);
          return num6 >> 4;
        }
        int int_3 = class51_0.method_2();
        int num = (int) this.short_0[class51_0.method_0(int_3)];
        if (num < 0 || (num & 15) > int_3)
          return -1;
        class51_0.method_1(num & 15);
        return num >> 4;
      }
    }

    internal sealed class Class54
    {
      private static readonly int[] int_0 = new int[3]
      {
        3,
        3,
        11
      };
      private static readonly int[] int_1 = new int[3]
      {
        2,
        3,
        7
      };
      private byte[] byte_0;
      private byte[] byte_1;
      private Class49.Class53 class53_0;
      private int int_2;
      private int int_3;
      private int int_4;
      private int int_5;
      private int int_6;
      private int int_7;
      private byte byte_2;
      private int int_8;
      private static readonly int[] int_9 = new int[19]
      {
        16,
        17,
        18,
        0,
        8,
        7,
        9,
        6,
        10,
        5,
        11,
        4,
        12,
        3,
        13,
        2,
        14,
        1,
        15
      };

      public bool method_0(Class49.Class51 class51_0)
      {
        while (true)
        {
          switch (this.int_2)
          {
            case 0:
              this.int_3 = class51_0.method_0(5);
              if (this.int_3 >= 0)
              {
                this.int_3 += 257;
                class51_0.method_1(5);
                this.int_2 = 1;
                goto case 1;
              }
              else
                goto label_23;
            case 1:
              this.int_4 = class51_0.method_0(5);
              if (this.int_4 >= 0)
              {
                ++this.int_4;
                class51_0.method_1(5);
                this.int_6 = this.int_3 + this.int_4;
                this.byte_1 = new byte[this.int_6];
                this.int_2 = 2;
                goto case 2;
              }
              else
                goto label_24;
            case 2:
              this.int_5 = class51_0.method_0(4);
              if (this.int_5 >= 0)
              {
                this.int_5 += 4;
                class51_0.method_1(4);
                this.byte_0 = new byte[19];
                this.int_8 = 0;
                this.int_2 = 3;
                goto case 3;
              }
              else
                goto label_25;
            case 3:
              for (; this.int_8 < this.int_5; ++this.int_8)
              {
                int num = class51_0.method_0(3);
                if (num < 0)
                  return false;
                class51_0.method_1(3);
                this.byte_0[Class49.Class54.int_9[this.int_8]] = (byte) num;
              }
              this.class53_0 = new Class49.Class53(this.byte_0);
              this.byte_0 = (byte[]) null;
              this.int_8 = 0;
              this.int_2 = 4;
              goto case 4;
            case 4:
              int num1;
              while (((num1 = this.class53_0.method_1(class51_0)) & -16) == 0)
              {
                this.byte_1[this.int_8++] = this.byte_2 = (byte) num1;
                if (this.int_8 == this.int_6)
                  return true;
              }
              if (num1 >= 0)
              {
                if (num1 >= 17)
                  this.byte_2 = (byte) 0;
                this.int_7 = num1 - 16;
                this.int_2 = 5;
                goto case 5;
              }
              else
                goto label_27;
            case 5:
              int int_3 = Class49.Class54.int_1[this.int_7];
              int num2 = class51_0.method_0(int_3);
              if (num2 >= 0)
              {
                class51_0.method_1(int_3);
                int num3 = num2 + Class49.Class54.int_0[this.int_7];
                while (num3-- > 0)
                  this.byte_1[this.int_8++] = this.byte_2;
                if (this.int_8 != this.int_6)
                {
                  this.int_2 = 4;
                  continue;
                }
                goto label_30;
              }
              else
                goto label_29;
            default:
              continue;
          }
        }
label_23:
        return false;
label_24:
        return false;
label_25:
        return false;
label_27:
        return false;
label_29:
        return false;
label_30:
        return true;
      }

      public Class49.Class53 method_1()
      {
        byte[] numArray = new byte[this.int_3];
        Array.Copy((Array) this.byte_1, 0, (Array) numArray, 0, this.int_3);
        return new Class49.Class53(numArray);
      }

      public Class49.Class53 method_2()
      {
        byte[] numArray = new byte[this.int_4];
        Array.Copy((Array) this.byte_1, this.int_3, (Array) numArray, 0, this.int_4);
        return new Class49.Class53(numArray);
      }
    }

    internal sealed class Class55
    {
      private static readonly int[] int_0 = new int[19]
      {
        16,
        17,
        18,
        0,
        8,
        7,
        9,
        6,
        10,
        5,
        11,
        4,
        12,
        3,
        13,
        2,
        14,
        1,
        15
      };
      private static readonly byte[] byte_0 = new byte[16]
      {
        (byte) 0,
        (byte) 8,
        (byte) 4,
        (byte) 12,
        (byte) 2,
        (byte) 10,
        (byte) 6,
        (byte) 14,
        (byte) 1,
        (byte) 9,
        (byte) 5,
        (byte) 13,
        (byte) 3,
        (byte) 11,
        (byte) 7,
        (byte) 15
      };
      private static readonly short[] short_0 = new short[286];
      private static readonly byte[] byte_1 = new byte[286];
      private static readonly short[] short_1;
      private static readonly byte[] byte_2;

      public static short smethod_0(int int_1) => (short) ((int) Class49.Class55.byte_0[int_1 & 15] << 12 | (int) Class49.Class55.byte_0[int_1 >> 4 & 15] << 8 | (int) Class49.Class55.byte_0[int_1 >> 8 & 15] << 4 | (int) Class49.Class55.byte_0[int_1 >> 12]);

      static Class55()
      {
        int index1;
        for (index1 = 0; index1 < 144; Class49.Class55.byte_1[index1++] = (byte) 8)
          Class49.Class55.short_0[index1] = Class49.Class55.smethod_0(48 + index1 << 8);
        for (; index1 < 256; Class49.Class55.byte_1[index1++] = (byte) 9)
          Class49.Class55.short_0[index1] = Class49.Class55.smethod_0(256 + index1 << 7);
        for (; index1 < 280; Class49.Class55.byte_1[index1++] = (byte) 7)
          Class49.Class55.short_0[index1] = Class49.Class55.smethod_0(index1 - 256 << 9);
        for (; index1 < 286; Class49.Class55.byte_1[index1++] = (byte) 8)
          Class49.Class55.short_0[index1] = Class49.Class55.smethod_0(index1 - 88 << 8);
        Class49.Class55.short_1 = new short[30];
        Class49.Class55.byte_2 = new byte[30];
        for (int index2 = 0; index2 < 30; ++index2)
        {
          Class49.Class55.short_1[index2] = Class49.Class55.smethod_0(index2 << 11);
          Class49.Class55.byte_2[index2] = (byte) 5;
        }
      }
    }

    internal sealed class Stream0 : MemoryStream
    {
      public int method_0() => this.ReadByte() | this.ReadByte() << 8;

      public int method_1() => this.method_0() | this.method_0() << 16;

      public Stream0(byte[] byte_0)
        : base(byte_0, false)
      {
      }
    }
  }
}
