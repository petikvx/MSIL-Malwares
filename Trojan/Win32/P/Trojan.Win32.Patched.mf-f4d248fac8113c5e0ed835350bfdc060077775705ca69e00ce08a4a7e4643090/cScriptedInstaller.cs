// Decompiled with JetBrains decompiler
// Type: LTSvcMon.cScriptedInstaller
// Assembly: LTSvcMon, Version=40.101.4107.19874, Culture=neutral, PublicKeyToken=null
// MVID: 816B70F7-DB44-4BCA-BD08-988C39A8AB45
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Trojan.Win32.Patched.mf-f4d248fac8113c5e0ed835350bfdc060077775705ca69e00ce08a4a7e4643090.exe

using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;
using System;
using System.Collections;
using System.ComponentModel;
using System.Configuration.Install;
using System.ServiceProcess;

namespace LTSvcMon
{
  [RunInstaller(true)]
  public class cScriptedInstaller : Installer
  {
    private const string mServiceName = "LTSvcMon";
    private const string mServiceDescription = "This makes sure the LabTech Service stays running and updated.";
    private ServiceInstaller mServiceInstaller;
    private ServiceProcessInstaller mProcessInstaller;

    public cScriptedInstaller()
    {
      this.mServiceInstaller = new ServiceInstaller();
      this.mProcessInstaller = new ServiceProcessInstaller();
      this.mProcessInstaller.Account = ServiceAccount.User;
      ServiceInstaller serviceInstaller = this.mServiceInstaller;
      serviceInstaller.StartType = ServiceStartMode.Automatic;
      serviceInstaller.ServiceName = "LTSvcMon";
      this.Installers.Add((Installer) this.mServiceInstaller);
      this.Installers.Add((Installer) this.mProcessInstaller);
    }

    protected override void OnBeforeInstall(IDictionary savedState)
    {
      base.OnBeforeInstall(savedState);
      this.mServiceInstaller.ServiceName = "LTSvcMon";
      this.mProcessInstaller.Account = ServiceAccount.LocalSystem;
    }

    public override void Install(IDictionary StateServer)
    {
      base.Install(StateServer);
      try
      {
        RegistryKey registryKey1 = Registry.LocalMachine.OpenSubKey("System");
        RegistryKey registryKey2 = registryKey1.OpenSubKey("CurrentControlSet");
        RegistryKey registryKey3 = registryKey2.OpenSubKey("Services");
        RegistryKey registryKey4 = registryKey3.OpenSubKey(this.mServiceInstaller.ServiceName, true);
        registryKey4.SetValue("DisplayName", (object) "LabTech Watchdog Service");
        registryKey4.SetValue("Description", (object) "This makes sure the LabTech Service stays running and updated.");
        string str = Conversions.ToString(registryKey4.GetValue("ImagePath"));
        registryKey4.SetValue("ImagePath", (object) str);
        registryKey4.CreateSubKey("Parameters").Close();
        registryKey4.Close();
        registryKey3.Close();
        registryKey2.Close();
        registryKey1.Close();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    protected override void OnBeforeUninstall(IDictionary savedState)
    {
      base.OnBeforeUninstall(savedState);
      try
      {
        this.mServiceInstaller.ServiceName = "LTSvcMon";
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    public override void Uninstall(IDictionary stateServer)
    {
      base.Uninstall(stateServer);
      try
      {
        RegistryKey registryKey1 = Registry.LocalMachine.OpenSubKey("System");
        RegistryKey registryKey2 = registryKey1.OpenSubKey("CurrentControlSet");
        RegistryKey registryKey3 = registryKey2.OpenSubKey("Services");
        RegistryKey registryKey4 = registryKey3.OpenSubKey(this.mServiceInstaller.ServiceName, true);
        registryKey4.DeleteSubKeyTree("Parameters");
        registryKey4.Close();
        registryKey3.Close();
        registryKey2.Close();
        registryKey1.Close();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }
  }
}
