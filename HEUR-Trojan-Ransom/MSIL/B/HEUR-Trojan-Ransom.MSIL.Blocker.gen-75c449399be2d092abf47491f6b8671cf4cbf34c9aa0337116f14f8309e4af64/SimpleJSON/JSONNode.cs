// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: SystemThreadingSpinLockDebugVi, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 4BC7AA9F-A353-4AE7-9558-F3A117D261BE
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-75c449399be2d092abf47491f6b8671cf4cbf34c9aa0337116f14f8309e4af64.exe

using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = -1354461581;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1544114714)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 1426758034 ^ 391962460;
              continue;
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -1207733293 ^ 467966117;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get => (JSONNode) null;
      set
      {
      }
    }

    public virtual string Value
    {
      get
      {
label_1:
        int num1 = -211641924;
        string str;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -967768383)) % 4U)
          {
            case 1:
              str = "";
              num1 = (int) num2 * 1278830045 ^ 609407759;
              continue;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * 679953041 ^ -1627773926;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return str;
      }
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
label_1:
        int num1 = -747896578;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2128236535)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              count = 0;
              num1 = (int) num2 * -7556127 ^ 1144679588;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem)
    {
label_1:
      int num1 = -953582703;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1307024233)) % 4U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * 1565986333 ^ -796926174;
            continue;
          case 2:
            this.Add("", aItem);
            num1 = (int) num2 * 1838323100 ^ -131339222;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public virtual JSONNode Remove(string aKey)
    {
label_1:
      int num1 = 2105674494;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 956343890)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 1506598208 ^ 1706367631;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(int aIndex)
    {
      JSONNode jsonNode = (JSONNode) null;
label_1:
      int num1 = 22797739;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 191987914)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -1288620348 ^ 1776933138;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(JSONNode aNode) => aNode;

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONNode.\u003Cget_Childs\u003Ed__17 childs = new JSONNode.\u003Cget_Childs\u003Ed__17(-2);
label_1:
        int num1 = -1806858434;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1122761944)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              childs.\u003C\u003E4__this = this;
              num1 = (int) num2 * -2074799752 ^ 1993684521;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return (IEnumerable<JSONNode>) childs;
      }
    }

    public IEnumerable<JSONNode> DeepChilds
    {
      get
      {
        JSONNode.\u003Cget_DeepChilds\u003Ed__19 getDeepChildsD19 = new JSONNode.\u003Cget_DeepChilds\u003Ed__19(-2);
label_1:
        int num1 = -1999024802;
        IEnumerable<JSONNode> deepChilds;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -407111805)) % 4U)
          {
            case 1:
              getDeepChildsD19.\u003C\u003E4__this = this;
              num1 = (int) num2 * 471405116 ^ -1706797731;
              continue;
            case 2:
              deepChilds = (IEnumerable<JSONNode>) getDeepChildsD19;
              num1 = (int) num2 * 1761290588 ^ 1919633127;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return deepChilds;
      }
    }

    public override string ToString()
    {
label_1:
      int num1 = 942709615;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 792018087)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            str = nameof (JSONNode);
            num1 = (int) num2 * -1047332487 ^ -535574371;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual string ToString(string aPrefix)
    {
label_1:
      int num1 = -74522995;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1287980216)) % 4U)
        {
          case 0:
            num1 = (int) num2 * 1777972101 ^ -1246623461;
            continue;
          case 1:
            str = nameof (JSONNode);
            num1 = (int) num2 * -996552958 ^ 1419502586;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public virtual int AsInt
    {
      get
      {
label_1:
        int num1 = -2036476968;
        int result;
        bool flag;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -539780819)) % 6U)
          {
            case 0:
              int num3 = flag ? -73067781 : (num3 = -1980286382);
              num1 = num3 ^ (int) num2 * -1220846614;
              continue;
            case 1:
              asInt = 0;
              num1 = -1045982225;
              continue;
            case 3:
              result = 0;
              flag = int.TryParse(this.Value, out result);
              num1 = (int) num2 * -1296448891 ^ -1942607966;
              continue;
            case 4:
              asInt = result;
              num1 = (int) num2 * 1573687923 ^ -96670671;
              continue;
            case 5:
              goto label_1;
            default:
              goto label_7;
          }
        }
label_7:
        return asInt;
      }
      set => this.Value = value.ToString();
    }

    public virtual float AsFloat
    {
      get
      {
label_1:
        int num1 = 1406950531;
        float result;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1858556401)) % 8U)
          {
            case 0:
              asFloat = result;
              num1 = (int) num2 * -1999033664 ^ 226159588;
              continue;
            case 1:
              int num3 = !float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u200E⁪​⁮‬‮⁬⁭⁫⁪‬⁪‎‎‮‭‍​‮‮⁫‪⁭⁭‭⁪‬‏⁪‪‎‭‏⁯‭‍‎‍‪‌‮(), out result) ? 67597956 : (num3 = 1140579283);
              num1 = num3 ^ (int) num2 * -117800526;
              continue;
            case 2:
              result = 0.0f;
              num1 = (int) num2 * -562102924 ^ -1023014360;
              continue;
            case 3:
              num1 = (int) num2 * -65566832 ^ -397815579;
              continue;
            case 5:
              num1 = (int) num2 * -780403328 ^ -1288255403;
              continue;
            case 6:
              goto label_1;
            case 7:
              asFloat = 0.0f;
              num1 = 2118582778;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asFloat;
      }
      set => this.Value = value.ToString();
    }

    public virtual double AsDouble
    {
      get
      {
label_1:
        int num1 = -168843400;
        double result;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -26668675)) % 7U)
          {
            case 0:
              asDouble = 0.0;
              num1 = -448140589;
              continue;
            case 1:
              asDouble = result;
              num1 = (int) num2 * 1666748349 ^ 279222108;
              continue;
            case 3:
              int num3 = !double.TryParse(this.Value, out result) ? -156159798 : (num3 = -1905318275);
              num1 = num3 ^ (int) num2 * 663032014;
              continue;
            case 4:
              result = 0.0;
              num1 = (int) num2 * 1602841959 ^ -1150420662;
              continue;
            case 5:
              goto label_1;
            case 6:
              num1 = (int) num2 * 1319917320 ^ 1935926043;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asDouble;
      }
      set
      {
        this.Value = value.ToString();
label_1:
        int num1 = -2081890468;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1942000634)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 601381757 ^ -1464360088;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual bool AsBool
    {
      get
      {
label_1:
        int num1 = 204714813;
        bool result;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 478081597)) % 6U)
          {
            case 1:
              asBool = !JSONNode.\u206D‍‬‪⁪‪‫‌⁪‬‬⁯⁪‫⁫‮‪⁯⁭⁮‌‏‬‎⁮‍⁫‪⁪⁪⁯⁪‪⁫‮⁭‮‍⁭‭‮(this.Value);
              num1 = 1258973735;
              continue;
            case 2:
              result = false;
              num1 = (int) num2 * 793537376 ^ -1539695549;
              continue;
            case 3:
              goto label_1;
            case 4:
              int num3 = bool.TryParse(this.Value, out result) ? -251781092 : (num3 = -1360260176);
              num1 = num3 ^ (int) num2 * 1105173543;
              continue;
            case 5:
              asBool = result;
              num1 = (int) num2 * 831152620 ^ -1845759325;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asBool;
      }
      set
      {
label_1:
        int num1 = -221581492;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1343715713)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Value = value ? "true" : "false";
              num1 = -1400169273;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = -1238914163;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -538820021)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              asArray = this as JSONArray;
              num1 = (int) num2 * -705659362 ^ 1205634579;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asArray;
      }
    }

    public virtual JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = -1870267219;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2131303488)) % 3U)
          {
            case 1:
              asObject = this as JSONClass;
              num1 = (int) num2 * 1472921713 ^ -764194712;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s)
    {
label_1:
      int num1 = 678864029;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1604994952)) % 4U)
        {
          case 0:
            num1 = (int) num2 * 560897476 ^ -2074668462;
            continue;
          case 1:
            jsonNode = (JSONNode) new JSONData(s);
            num1 = (int) num2 * -1394540822 ^ -1037163458;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public static implicit operator string(JSONNode d)
    {
label_1:
      int num1 = -164097323;
      string str1;
      while (true)
      {
        uint num2;
        string str2;
        switch ((num2 = (uint) (num1 ^ -272844097)) % 4U)
        {
          case 1:
            str2 = d.Value;
            break;
          case 2:
            if (!(d == (object) null))
            {
              num1 = (int) num2 * 988943815 ^ 165465912;
              continue;
            }
            str2 = (string) null;
            break;
          case 3:
            goto label_1;
          default:
            goto label_8;
        }
        str1 = str2;
        num1 = -873416801;
      }
label_8:
      return str1;
    }

    public static bool operator ==(JSONNode a, object b)
    {
label_1:
      int num1 = 368816086;
      bool flag1;
      while (true)
      {
        uint num2;
        bool flag2;
        int num3;
        switch ((num2 = (uint) (num1 ^ 1870210148)) % 7U)
        {
          case 0:
            goto label_1;
          case 1:
            num3 = a is JSONLazyCreator ? 1 : 0;
            break;
          case 2:
            flag1 = true;
            num1 = (int) num2 * -30037975 ^ -481848672;
            continue;
          case 3:
            if (b != null)
            {
              num3 = 0;
              break;
            }
            num1 = (int) num2 * -1291625233 ^ 1510863682;
            continue;
          case 5:
            flag1 = (object) a == b;
            num1 = 2083223733;
            continue;
          case 6:
            int num4 = flag2 ? 1476991513 : (num4 = 688706313);
            num1 = num4 ^ (int) num2 * 2124355144;
            continue;
          default:
            goto label_11;
        }
        flag2 = num3 != 0;
        num1 = 1356673594;
      }
label_11:
      return flag1;
    }

    public static bool operator !=(JSONNode a, object b) => !(a == b);

    public override bool Equals(object obj)
    {
      bool flag = (object) this == obj;
label_1:
      int num1 = -1049470403;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2014126572)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -1243079229 ^ -224241831;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override int GetHashCode()
    {
      int hashCode = this.\u202E⁯⁫‎⁪⁬​‪‬‮‫⁭‮⁬⁭⁪⁮‪⁫‏‎‪‌⁯​‬⁮⁭⁮‌​‫‏‏​​‏⁭​‌‮();
label_1:
      int num1 = -1728339519;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -143992730)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 1085567919 ^ 1161953477;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return hashCode;
    }

    internal static string Escape(string aText)
    {
      string str1 = "";
label_1:
      int num1 = 429412697;
      string str2;
      int num2;
      char ch1;
      char ch2;
      string str3;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 338377361)) % 29U)
        {
          case 0:
            num1 = (int) num3 * -1799356446 ^ -1722081591;
            continue;
          case 1:
            int num4;
            num1 = num4 = ch2 != '\\' ? 1265246049 : (num4 = 1511812621);
            continue;
          case 2:
label_11:
            str1 = JSONNode.\u206F‍‏‬⁫‭⁮‫‫‏‎‌⁬‎‪‪⁮‪⁪‮‪‌⁭‍‮‎‭‏‍‌‭⁬⁫​‪⁪‪‏‮⁪‮(str1, "\\n");
            num1 = 381476598;
            continue;
          case 3:
            str1 = JSONNode.\u206F‍‏‬⁫‭⁮‫‫‏‎‌⁬‎‪‪⁮‪⁪‮‪‌⁭‍‮‎‭‏‍‌‭⁬⁫​‪⁪‪‏‮⁪‮(str1, "\\\\");
            num1 = 85502804;
            continue;
          case 4:
label_27:
            str1 = JSONNode.\u206F‍‏‬⁫‭⁮‫‫‏‎‌⁬‎‪‪⁮‪⁪‮‪‌⁭‍‮‎‭‏‍‌‭⁬⁫​‪⁪‪‏‮⁪‮(str1, "\\r");
            num1 = 85502804;
            continue;
          case 5:
            num1 = (int) num3 * -1190636159 ^ -1530496694;
            continue;
          case 6:
label_17:
            str1 = JSONNode.\u206F‍‏‬⁫‭⁮‫‫‏‎‌⁬‎‪‪⁮‪⁪‮‪‌⁭‍‮‎‭‏‍‌‭⁬⁫​‪⁪‪‏‮⁪‮(str1, "\\f");
            num1 = 271488075;
            continue;
          case 7:
            num1 = (int) num3 * -1089456886 ^ -1832092776;
            continue;
          case 8:
            int num5;
            num1 = num5 = num2 < JSONNode.\u206B‍‮⁬⁪‭‬‮⁭‎⁪‮‎⁭⁭‭​⁪‭‭⁫⁯⁬⁫⁫⁫‭‪‭⁬⁯‬‭‮‪⁯​‭‪‮‮(str2) ? 1474726661 : (num5 = 711146481);
            continue;
          case 9:
label_10:
            str1 = JSONNode.\u206F‍‏‬⁫‭⁮‫‫‏‎‌⁬‎‪‪⁮‪⁪‮‪‌⁭‍‮‎‭‏‍‌‭⁬⁫​‪⁪‪‏‮⁪‮(str1, "\\t");
            num1 = 1032222607;
            continue;
          case 10:
            int num6;
            num1 = num6 = ch2 == '"' ? 268886741 : (num6 = 1292077390);
            continue;
          case 11:
            ch2 = ch1;
            num1 = (int) num3 * 1810868014 ^ -1543371785;
            continue;
          case 12:
label_29:
            str1 = JSONNode.\u206F‍‏‬⁫‭⁮‫‫‏‎‌⁬‎‪‪⁮‪⁪‮‪‌⁭‍‮‎‭‏‍‌‭⁬⁫​‪⁪‪‏‮⁪‮(str1, "\\b");
            num1 = 85502804;
            continue;
          case 13:
            num1 = (int) num3 * 476231027 ^ -395818044;
            continue;
          case 14:
            ++num2;
            num1 = 1636063020;
            continue;
          case 15:
            ch1 = JSONNode.\u200B⁮‍‎‫⁫​‬​‏‮‬⁭‎⁮‮‬⁮⁬⁫‌⁯⁮‏‌‪‫‭⁬‏‏‭​‌⁪‌⁯⁭⁮‌‮(str2, num2);
            num1 = 677612872;
            continue;
          case 16:
            switch (ch2)
            {
              case '\b':
                goto label_29;
              case '\t':
                goto label_10;
              case '\n':
                goto label_11;
              case '\v':
                goto label_20;
              case '\f':
                goto label_17;
              case '\r':
                goto label_27;
              default:
                num1 = (int) num3 * 244444083 ^ -427349803;
                continue;
            }
          case 17:
            num1 = (int) num3 * -662050698 ^ -2035907800;
            continue;
          case 18:
            goto label_1;
          case 19:
            str1 = JSONNode.\u206F‍‏‬⁫‭⁮‫‫‏‎‌⁬‎‪‪⁮‪⁪‮‪‌⁭‍‮‎‭‏‍‌‭⁬⁫​‪⁪‪‏‮⁪‮(str1, "\\\"");
            num1 = 152454936;
            continue;
          case 20:
            num1 = (int) num3 * 186397002 ^ -693926800;
            continue;
          case 21:
            str2 = aText;
            num2 = 0;
            num1 = (int) num3 * 1347435420 ^ -1277240733;
            continue;
          case 22:
            num1 = (int) num3 * -1512531192 ^ 1486713884;
            continue;
          case 23:
            num1 = (int) num3 * -1390140250 ^ -1056948834;
            continue;
          case 24:
            num1 = (int) num3 * -1502074528 ^ -867322128;
            continue;
          case 25:
            num1 = (int) num3 * -1811272527 ^ 824599673;
            continue;
          case 26:
label_20:
            str1 = JSONNode.\u206F‍‏‬⁫‭⁮‫‫‏‎‌⁬‎‪‪⁮‪⁪‮‪‌⁭‍‮‎‭‏‍‌‭⁬⁫​‪⁪‪‏‮⁪‮(str1, ch1.ToString());
            num1 = 1750188972;
            continue;
          case 28:
            str3 = str1;
            num1 = (int) num3 * -1614342823 ^ 1895556867;
            continue;
          default:
            goto label_31;
        }
      }
label_31:
      return str3;
    }

    public static JSONNode Parse(string aJSON)
    {
label_1:
      int num1 = 1355113984;
      string aItem;
      bool flag1;
      bool flag2;
      bool flag3;
      char ch1;
      char ch2;
      JSONNode jsonNode1;
      string aKey;
      int num2;
      char ch3;
      bool flag4;
      Stack<JSONNode> jsonNodeStack;
      bool flag5;
      bool flag6;
      bool flag7;
      bool flag8;
      bool flag9;
      bool flag10;
      bool flag11;
      bool flag12;
      bool flag13;
      char ch4;
      bool flag14;
      bool flag15;
      bool flag16;
      bool flag17;
      JSONNode jsonNode2;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 858075445)) % 149U)
        {
          case 0:
            aKey = aItem;
            aItem = "";
            num1 = 1425344497;
            continue;
          case 1:
            jsonNode2 = jsonNode1;
            num1 = 139352545;
            continue;
          case 2:
            num1 = (int) num3 * -118944303 ^ -2136853851;
            continue;
          case 3:
            num1 = 1362368737;
            continue;
          case 4:
label_98:
            aItem = JSONNode.\u206F‍‏‬⁫‭⁮‫‫‏‎‌⁬‎‪‪⁮‪⁪‮‪‌⁭‍‮‎‭‏‍‌‭⁬⁫​‪⁪‪‏‮⁪‮(aItem, "\r");
            num1 = 748200570;
            continue;
          case 5:
            num1 = (int) num3 * 1113834711 ^ -1753198711;
            continue;
          case 6:
            num1 = (int) num3 * 1019261575 ^ -2064207537;
            continue;
          case 7:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 155872288 ^ -80762931;
            continue;
          case 8:
            flag12 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 1929394080 ^ -3738682;
            continue;
          case 9:
            int num4 = ch1 <= ' ' ? 373269790 : (num4 = 1093519585);
            num1 = num4 ^ (int) num3 * -1343507523;
            continue;
          case 10:
            int num5;
            num1 = num5 = !JSONNode.\u200D‌⁪‭‍‏‎‮⁭⁪‮‪‫‭⁪​‭⁯⁭‪‮⁬⁭⁫‭‍‮‫‬‎⁭⁪⁮‌‪‌‌​‎‪‮(aKey, "") ? 1568860166 : (num5 = 821320291);
            continue;
          case 11:
            aItem = JSONNode.\u206F‍‏‬⁫‭⁮‫‫‏‎‌⁬‎‪‪⁮‪⁪‮‪‌⁭‍‮‎‭‏‍‌‭⁬⁫​‪⁪‪‏‮⁪‮(aItem, "\n");
            num1 = 406717496;
            continue;
          case 12:
            aKey = JSONNode.\u200F⁫‌⁭⁪⁪‪‭‭‍‮⁪⁭‍‎⁬⁪⁬⁫‎⁭‌⁪⁪‬‍‏‬⁬‎‍‌⁫​‫​‎⁮‭‪‮(aKey);
            flag7 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 72324677 ^ -212748690;
            continue;
          case 13:
            goto label_143;
          case 14:
            num1 = (int) num3 * -2012752083 ^ 921092009;
            continue;
          case 15:
            num1 = (int) num3 * -2129024790 ^ 1631954206;
            continue;
          case 16:
            aKey = "";
            aItem = "";
            num1 = 1850256616;
            continue;
          case 17:
            int num6 = flag13 ? -1962430376 : (num6 = -570755460);
            num1 = num6 ^ (int) num3 * -1696228847;
            continue;
          case 18:
            num1 = (int) num3 * -927777853 ^ -1131953549;
            continue;
          case 19:
            aItem = "";
            num1 = (int) num3 * 954857785 ^ 1501947731;
            continue;
          case 20:
            aItem = JSONNode.\u206F‍‏‬⁫‭⁮‫‫‏‎‌⁬‎‪‪⁮‪⁪‮‪‌⁭‍‮‎‭‏‍‌‭⁬⁫​‪⁪‪‏‮⁪‮(aItem, "\f");
            num1 = 402905546;
            continue;
          case 21:
            string str1 = aItem;
            ch3 = JSONNode.\u200B⁮‍‎‫⁫​‬​‏‮‬⁭‎⁮‮‬⁮⁬⁫‌⁯⁮‏‌‪‫‭⁬‏‏‭​‌⁪‌⁯⁭⁮‌‮(aJSON, num2);
            string str2 = ch3.ToString();
            aItem = JSONNode.\u206F‍‏‬⁫‭⁮‫‫‏‎‌⁬‎‪‪⁮‪⁪‮‪‌⁭‍‮‎‭‏‍‌‭⁬⁫​‪⁪‪‏‮⁪‮(str1, str2);
            num1 = (int) num3 * -1685369496 ^ -1045792943;
            continue;
          case 22:
            aKey = "";
            num1 = 423219836;
            continue;
          case 23:
            num2 += 4;
            num1 = (int) num3 * -888630630 ^ 1770458514;
            continue;
          case 24:
            num1 = (int) num3 * 587317938 ^ -978989012;
            continue;
          case 25:
            int num7;
            num1 = num7 = JSONNode.\u200D‌⁪‭‍‏‎‮⁭⁪‮‪‫‭⁪​‭⁯⁭‪‮⁬⁭⁫‭‍‮‫‬‎⁭⁪⁮‌‪‌‌​‎‪‮(aKey, "") ? 1554777923 : (num7 = 731212348);
            continue;
          case 26:
            num1 = (int) num3 * 808474498 ^ -1617591178;
            continue;
          case 27:
            flag15 = jsonNode1 != (object) null;
            num1 = (int) num3 * -1458319074 ^ 1963095998;
            continue;
          case 28:
            flag3 = flag1;
            num1 = 28011285;
            continue;
          case 29:
          case 58:
          case 59:
          case 79:
          case 143:
label_101:
            ++num2;
            num1 = 257495917;
            continue;
          case 30:
label_63:
            ++num2;
            num1 = 1863160826;
            continue;
          case 31:
            flag2 = jsonNode1 != (object) null;
            num1 = (int) num3 * -549777631 ^ 1403295689;
            continue;
          case 32:
            int num8;
            num1 = num8 = ch1 == ' ' ? 1349324543 : (num8 = 1633144467);
            continue;
          case 33:
            num1 = (int) num3 * -9897851 ^ 2049597478;
            continue;
          case 34:
            int num9 = flag3 ? -122541738 : (num9 = -1880781033);
            num1 = num9 ^ (int) num3 * -843684067;
            continue;
          case 35:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -550877315 ^ 1117127350;
            continue;
          case 36:
            int num10;
            num1 = num10 = JSONNode.\u200D‌⁪‭‍‏‎‮⁭⁪‮‪‫‭⁪​‭⁯⁭‪‮⁬⁭⁫‭‍‮‫‬‎⁭⁪⁮‌‪‌‌​‎‪‮(aKey, "") ? 2055316932 : (num10 = 705725529);
            continue;
          case 37:
            int num11;
            num1 = num11 = ch1 != ',' ? 1685980416 : (num11 = 1155038652);
            continue;
          case 38:
            num1 = (int) num3 * 1627588926 ^ -399427283;
            continue;
          case 39:
            int num12 = flag15 ? -1400044517 : (num12 = -498065703);
            num1 = num12 ^ (int) num3 * 1934174792;
            continue;
          case 40:
            int num13 = flag14 ? -94341689 : (num13 = -7263183);
            num1 = num13 ^ (int) num3 * -515065720;
            continue;
          case 41:
            aKey = "";
            aItem = "";
            jsonNode1 = jsonNodeStack.Peek();
            num1 = 1425344497;
            continue;
          case 42:
            int num14 = !flag5 ? 1325801630 : (num14 = 727684419);
            num1 = num14 ^ (int) num3 * -144560395;
            continue;
          case 43:
            switch (ch2)
            {
              case 'r':
                goto label_98;
              case 's':
                goto label_103;
              case 't':
                goto label_108;
              case 'u':
                goto label_82;
              default:
                num1 = 1020608859;
                continue;
            }
          case 44:
            num1 = 592792364;
            continue;
          case 45:
            int num15;
            num1 = num15 = ch1 <= ']' ? 220944409 : (num15 = 395329219);
            continue;
          case 46:
            num1 = (int) num3 * 385397853 ^ -549816384;
            continue;
          case 47:
            switch (ch1)
            {
              case '[':
                goto label_137;
              case '\\':
                goto label_63;
              case ']':
                goto label_124;
              default:
                num1 = 1572438917;
                continue;
            }
          case 48:
            int num16 = !flag6 ? -1771863388 : (num16 = -528897573);
            num1 = num16 ^ (int) num3 * -1929327937;
            continue;
          case 49:
            int num17;
            num1 = num17 = !flag1 ? 1282409321 : (num17 = 604702394);
            continue;
          case 50:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -1716451605 ^ 1394858850;
            continue;
          case 51:
            string str3 = aItem;
            ch3 = JSONNode.\u200B⁮‍‎‫⁫​‬​‏‮‬⁭‎⁮‮‬⁮⁬⁫‌⁯⁮‏‌‪‫‭⁬‏‏‭​‌⁪‌⁯⁭⁮‌‮(aJSON, num2);
            string str4 = ch3.ToString();
            aItem = JSONNode.\u206F‍‏‬⁫‭⁮‫‫‏‎‌⁬‎‪‪⁮‪⁪‮‪‌⁭‍‮‎‭‏‍‌‭⁬⁫​‪⁪‪‏‮⁪‮(str3, str4);
            num1 = (int) num3 * -1920797176 ^ 735587006;
            continue;
          case 52:
            num1 = (int) num3 * -1968242244 ^ -822981213;
            continue;
          case 53:
            num1 = (int) num3 * 1973036453 ^ -467609424;
            continue;
          case 54:
            string str5 = aItem;
            ch3 = JSONNode.\u200B⁮‍‎‫⁫​‬​‏‮‬⁭‎⁮‮‬⁮⁬⁫‌⁯⁮‏‌‪‫‭⁬‏‏‭​‌⁪‌⁯⁭⁮‌‮(aJSON, num2);
            string str6 = ch3.ToString();
            aItem = JSONNode.\u206F‍‏‬⁫‭⁮‫‫‏‎‌⁬‎‪‪⁮‪⁪‮‪‌⁭‍‮‎‭‏‍‌‭⁬⁫​‪⁪‪‏‮⁪‮(str5, str6);
            num1 = (int) num3 * -398757469 ^ -1021600216;
            continue;
          case 55:
            num1 = 898118466;
            continue;
          case 56:
            num1 = (int) num3 * 1941546223 ^ 35111124;
            continue;
          case 57:
            aKey = JSONNode.\u200F⁫‌⁭⁪⁪‪‭‭‍‮⁪⁭‍‎⁬⁪⁬⁫‎⁭‌⁪⁪‬‍‏‬⁬‎‍‌⁫​‫​‎⁮‭‪‮(aKey);
            num1 = (int) num3 * -1711771658 ^ 1677956105;
            continue;
          case 60:
            flag1 = !flag1;
            num1 = 239093755;
            continue;
          case 61:
            jsonNodeStack.Pop();
            flag5 = JSONNode.\u200D‌⁪‭‍‏‎‮⁭⁪‮‪‫‭⁪​‭⁯⁭‪‮⁬⁭⁫‭‍‮‫‬‎⁭⁪⁮‌‪‌‌​‎‪‮(aItem, "");
            num1 = 65095702;
            continue;
          case 62:
            aItem = JSONNode.\u206F‍‏‬⁫‭⁮‫‫‏‎‌⁬‎‪‪⁮‪⁪‮‪‌⁭‍‮‎‭‏‍‌‭⁬⁫​‪⁪‪‏‮⁪‮(aItem, "\b");
            num1 = 748200570;
            continue;
          case 63:
            num1 = 256069508;
            continue;
          case 64:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 1716692709 ^ 1763982910;
            continue;
          case 65:
            num1 = 723417249;
            continue;
          case 66:
            goto label_1;
          case 67:
            num1 = (int) num3 * -55926272 ^ -158470335;
            continue;
          case 68:
            int num18 = flag11 ? 1531387522 : (num18 = 1796517845);
            num1 = num18 ^ (int) num3 * 1782421098;
            continue;
          case 69:
            string str7 = aItem;
            ch3 = JSONNode.\u200B⁮‍‎‫⁫​‬​‏‮‬⁭‎⁮‮‬⁮⁬⁫‌⁯⁮‏‌‪‫‭⁬‏‏‭​‌⁪‌⁯⁭⁮‌‮(aJSON, num2);
            string str8 = ch3.ToString();
            aItem = JSONNode.\u206F‍‏‬⁫‭⁮‫‫‏‎‌⁬‎‪‪⁮‪⁪‮‪‌⁭‍‮‎‭‏‍‌‭⁬⁫​‪⁪‪‏‮⁪‮(str7, str8);
            num1 = (int) num3 * -1574532795 ^ 430308291;
            continue;
          case 70:
            num1 = (int) num3 * -536063551 ^ 2091982264;
            continue;
          case 71:
            num1 = (int) num3 * 61367979 ^ 968335203;
            continue;
          case 72:
            int num19 = flag2 ? 1923568264 : (num19 = 2050552679);
            num1 = num19 ^ (int) num3 * -146013731;
            continue;
          case 73:
            flag13 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -539865701 ^ 20761766;
            continue;
          case 74:
            jsonNodeStack = new Stack<JSONNode>();
            num1 = (int) num3 * 959899479 ^ -237038602;
            continue;
          case 75:
            aItem = "";
            aKey = "";
            flag1 = false;
            num1 = (int) num3 * 189256917 ^ -1951468566;
            continue;
          case 76:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * 164608703 ^ 1032833431;
            continue;
          case 77:
label_82:
            string s = JSONNode.\u200E⁬⁭⁫‎‎‪‎‮⁮‪⁫‌‮⁬⁯⁮‪⁮⁮⁫⁮‭⁮⁪⁫‌⁫‫‍⁬‬⁮⁯‪⁭​⁪‪⁯‮(aJSON, num2 + 1, 4);
            string str9 = aItem;
            ch3 = (char) int.Parse(s, NumberStyles.AllowHexSpecifier);
            string str10 = ch3.ToString();
            aItem = JSONNode.\u206F‍‏‬⁫‭⁮‫‫‏‎‌⁬‎‪‪⁮‪⁪‮‪‌⁭‍‮‎‭‏‍‌‭⁬⁫​‪⁪‪‏‮⁪‮(str9, str10);
            num1 = 1934094742;
            continue;
          case 78:
            num1 = (int) num3 * -403182177 ^ -952731645;
            continue;
          case 80:
            int num20 = !flag7 ? -294011366 : (num20 = -1319074081);
            num1 = num20 ^ (int) num3 * -188489014;
            continue;
          case 81:
            int num21;
            num1 = num21 = ch1 == '}' ? 1689875288 : (num21 = 741587412);
            continue;
          case 82:
            int num22 = !flag4 ? -1602313353 : (num22 = -1590553739);
            num1 = num22 ^ (int) num3 * 736579164;
            continue;
          case 83:
            num1 = (int) num3 * -1103913334 ^ 365885490;
            continue;
          case 84:
label_124:
            flag17 = flag1;
            num1 = 649219675;
            continue;
          case 85:
            ch1 = JSONNode.\u200B⁮‍‎‫⁫​‬​‏‮‬⁭‎⁮‮‬⁮⁬⁫‌⁯⁮‏‌‪‫‭⁬‏‏‭​‌⁪‌⁯⁭⁮‌‮(aJSON, num2);
            int num23;
            num1 = num23 = ch1 > ',' ? 1067119846 : (num23 = 176633019);
            continue;
          case 86:
            int num24 = flag10 ? -1265919774 : (num24 = -1121922708);
            num1 = num24 ^ (int) num3 * 1836308566;
            continue;
          case 87:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            num1 = 434101604;
            continue;
          case 88:
            int num25 = flag8 ? 1365985343 : (num25 = 1475516130);
            num1 = num25 ^ (int) num3 * 837043221;
            continue;
          case 89:
            num1 = (int) num3 * -1346722115 ^ -922485998;
            continue;
          case 90:
            num1 = (int) num3 * 276699726 ^ -348429895;
            continue;
          case 91:
            num1 = (int) num3 * 726301540 ^ 900379975;
            continue;
          case 92:
            num1 = (int) num3 * -249401794 ^ 1098231032;
            continue;
          case 93:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -1146536291 ^ 103360012;
            continue;
          case 94:
            flag10 = JSONNode.\u200D‌⁪‭‍‏‎‮⁭⁪‮‪‫‭⁪​‭⁯⁭‪‮⁬⁭⁫‭‍‮‫‬‎⁭⁪⁮‌‪‌‌​‎‪‮(aItem, "");
            num1 = 283772501;
            continue;
          case 95:
label_103:
            aItem = JSONNode.\u206F‍‏‬⁫‭⁮‫‫‏‎‌⁬‎‪‪⁮‪⁪‮‪‌⁭‍‮‎‭‏‍‌‭⁬⁫​‪⁪‪‏‮⁪‮(aItem, ch4.ToString());
            num1 = 1950589734;
            continue;
          case 96:
            num1 = (int) num3 * 441433712 ^ 1486573889;
            continue;
          case 97:
label_137:
            flag6 = flag1;
            num1 = 98161699;
            continue;
          case 99:
            int num26;
            num1 = num26 = ch2 == 'f' ? 1580044519 : (num26 = 102527281);
            continue;
          case 100:
            flag9 = flag1;
            num1 = (int) num3 * -964664615 ^ 1926514432;
            continue;
          case 101:
            num1 = (int) num3 * -1008784644 ^ 919870257;
            continue;
          case 102:
            int num27 = flag17 ? 318670775 : (num27 = 1264954090);
            num1 = num27 ^ (int) num3 * -1038795691;
            continue;
          case 103:
            switch (ch1)
            {
              case '\t':
                goto label_111;
              case '\n':
              case '\r':
                goto label_101;
              case '\v':
              case '\f':
                goto label_115;
              default:
                num1 = (int) num3 * 1992809333 ^ 851947260;
                continue;
            }
          case 104:
            num1 = (int) num3 * 1676973445 ^ -16809285;
            continue;
          case 105:
            ch4 = JSONNode.\u200B⁮‍‎‫⁫​‬​‏‮‬⁭‎⁮‮‬⁮⁬⁫‌⁯⁮‏‌‪‫‭⁬‏‏‭​‌⁪‌⁯⁭⁮‌‮(aJSON, num2);
            ch2 = ch4;
            int num28 = ch2 <= 'f' ? 1960798350 : (num28 = 2084268126);
            num1 = num28 ^ (int) num3 * -558358323;
            continue;
          case 106:
            aItem = "";
            num1 = (int) num3 * -849518336 ^ 96568817;
            continue;
          case 107:
            goto label_8;
          case 108:
            string str11 = aItem;
            ch3 = JSONNode.\u200B⁮‍‎‫⁫​‬​‏‮‬⁭‎⁮‮‬⁮⁬⁫‌⁯⁮‏‌‪‫‭⁬‏‏‭​‌⁪‌⁯⁭⁮‌‮(aJSON, num2);
            string str12 = ch3.ToString();
            aItem = JSONNode.\u206F‍‏‬⁫‭⁮‫‫‏‎‌⁬‎‪‪⁮‪⁪‮‪‌⁭‍‮‎‭‏‍‌‭⁬⁫​‪⁪‪‏‮⁪‮(str11, str12);
            num1 = (int) num3 * -1953282088 ^ -1707508463;
            continue;
          case 109:
label_108:
            aItem = JSONNode.\u206F‍‏‬⁫‭⁮‫‫‏‎‌⁬‎‪‪⁮‪⁪‮‪‌⁭‍‮‎‭‏‍‌‭⁬⁫​‪⁪‪‏‮⁪‮(aItem, "\t");
            num1 = 950887594;
            continue;
          case 110:
label_115:
            string str13 = aItem;
            ch3 = JSONNode.\u200B⁮‍‎‫⁫​‬​‏‮‬⁭‎⁮‮‬⁮⁬⁫‌⁯⁮‏‌‪‫‭⁬‏‏‭​‌⁪‌⁯⁭⁮‌‮(aJSON, num2);
            string str14 = ch3.ToString();
            aItem = JSONNode.\u206F‍‏‬⁫‭⁮‫‫‏‎‌⁬‎‪‪⁮‪⁪‮‪‌⁭‍‮‎‭‏‍‌‭⁬⁫​‪⁪‪‏‮⁪‮(str13, str14);
            num1 = 634275301;
            continue;
          case 111:
label_111:
            flag14 = flag1;
            num1 = 1308702503;
            continue;
          case 112:
            num1 = (int) num3 * 873427379 ^ 721497194;
            continue;
          case 113:
            int num29;
            num1 = num29 = jsonNodeStack.Count != 0 ? 849507849 : (num29 = 623569733);
            continue;
          case 114:
            int num30;
            num1 = num30 = ch1 != '"' ? 2056811640 : (num30 = 2057713705);
            continue;
          case 115:
            jsonNode1 = (JSONNode) null;
            num2 = 0;
            num1 = (int) num3 * -115580723 ^ 1215369502;
            continue;
          case 116:
            num1 = (int) num3 * -164280676 ^ 1885833313;
            continue;
          case 117:
            num1 = (int) num3 * -364680766 ^ -1883627003;
            continue;
          case 118:
            int num31;
            num1 = num31 = flag1 ? 1544392894 : (num31 = 389584294);
            continue;
          case 119:
            int num32 = flag9 ? 781944297 : (num32 = 1882528638);
            num1 = num32 ^ (int) num3 * 38830430;
            continue;
          case 120:
            num1 = (int) num3 * -990998969 ^ -1133831693;
            continue;
          case 121:
            int num33;
            num1 = num33 = ch1 != '{' ? 506031786 : (num33 = 1514421280);
            continue;
          case 122:
            num1 = (int) num3 * -929965803 ^ 1824195725;
            continue;
          case 123:
            flag16 = jsonNodeStack.Count > 0;
            num1 = (int) num3 * -294707140 ^ -1021338014;
            continue;
          case 124:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num1 = 634564822;
            continue;
          case 125:
            num1 = (int) num3 * -1416404480 ^ -284487558;
            continue;
          case 126:
            int num34 = flag12 ? -2030191273 : (num34 = -1477189925);
            num1 = num34 ^ (int) num3 * 1792672464;
            continue;
          case (uint) sbyte.MaxValue:
            int num35 = ch2 == 'b' ? -1442080768 : (num35 = -1390293350);
            num1 = num35 ^ (int) num3 * 672451806;
            continue;
          case 128:
            string str15 = aItem;
            ch3 = JSONNode.\u200B⁮‍‎‫⁫​‬​‏‮‬⁭‎⁮‮‬⁮⁬⁫‌⁯⁮‏‌‪‫‭⁬‏‏‭​‌⁪‌⁯⁭⁮‌‮(aJSON, num2);
            string str16 = ch3.ToString();
            aItem = JSONNode.\u206F‍‏‬⁫‭⁮‫‫‏‎‌⁬‎‪‪⁮‪⁪‮‪‌⁭‍‮‎‭‏‍‌‭⁬⁫​‪⁪‪‏‮⁪‮(str15, str16);
            num1 = (int) num3 * -204662818 ^ 907347351;
            continue;
          case 129:
            num1 = (int) num3 * -1708998377 ^ -1102720817;
            continue;
          case 130:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -300497810 ^ -445272391;
            continue;
          case 131:
            int num36 = ch1 != ':' ? 1613999152 : (num36 = 630221816);
            num1 = num36 ^ (int) num3 * 1735351250;
            continue;
          case 132:
            num1 = (int) num3 * 949690528 ^ 1150001063;
            continue;
          case 133:
            num1 = (int) num3 * -677963386 ^ 786418765;
            continue;
          case 134:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -989673693 ^ -335907932;
            continue;
          case 135:
            flag8 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 1486533664 ^ 1169326761;
            continue;
          case 136:
            int num37 = !flag1 ? 77611597 : (num37 = 769519388);
            num1 = num37 ^ (int) num3 * 730191584;
            continue;
          case 137:
            num1 = (int) num3 * -572358017 ^ 923813582;
            continue;
          case 138:
            int num38 = flag16 ? 1427889345 : (num38 = 1530418639);
            num1 = num38 ^ (int) num3 * 334838380;
            continue;
          case 139:
            num1 = (int) num3 * 45078068 ^ -2017299118;
            continue;
          case 140:
            flag11 = num2 < JSONNode.\u206B‍‮⁬⁪‭‬‮⁭‎⁪‮‎⁭⁭‭​⁪‭‭⁫⁯⁬⁫⁫⁫‭‪‭⁬⁯‬‭‮‪⁯​‭‪‮‮(aJSON);
            num1 = 637508884;
            continue;
          case 141:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -167121012 ^ -1104752660;
            continue;
          case 142:
            int num39;
            num1 = num39 = ch2 == 'n' ? 1341417659 : (num39 = 567445652);
            continue;
          case 144:
            flag4 = JSONNode.\u200D‌⁪‭‍‏‎‮⁭⁪‮‪‫‭⁪​‭⁯⁭‪‮⁬⁭⁫‭‍‮‫‬‎⁭⁪⁮‌‪‌‌​‎‪‮(aKey, "");
            num1 = 2116180928;
            continue;
          case 145:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -1359687218 ^ -1471580853;
            continue;
          case 146:
            aKey = "";
            num1 = 45621495;
            continue;
          case 147:
            num1 = (int) num3 * 951289095 ^ 138950438;
            continue;
          case 148:
            aKey = JSONNode.\u200F⁫‌⁭⁪⁪‪‭‭‍‮⁪⁭‍‎⁬⁪⁬⁫‎⁭‌⁪⁪‬‍‏‬⁬‎‍‌⁫​‫​‎⁮‭‪‮(aKey);
            num1 = (int) num3 * 1869407446 ^ -2067324881;
            continue;
          default:
            goto label_149;
        }
      }
label_8:
      throw JSONNode.\u206B‍⁯‏⁫‬‮‍‬​⁬⁯‌‪‍⁫‭⁯‎⁭‌‌‎⁯​⁭⁫‎⁪‫‍‬‮‬‫⁫‫‬‎⁫‮("JSON Parse: Too many closing brackets");
label_143:
      throw JSONNode.\u206B‍⁯‏⁫‬‮‍‬​⁬⁯‌‪‍⁫‭⁯‎⁭‌‌‎⁯​⁭⁫‎⁪‫‍‬‮‬‫⁫‫‬‎⁫‮("JSON Parse: Quotation marks seems to be messed up.");
label_149:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
label_1:
      int num1 = 408614271;
      BinaryWriter aWriter;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 569531975)) % 5U)
        {
          case 0:
            goto label_3;
          case 1:
            this.Serialize(aWriter);
            num1 = (int) num2 * 2129817105 ^ -1875062669;
            continue;
          case 2:
            aWriter = JSONNode.\u202D⁫‬⁪⁭‌⁯‪‮‭⁫​⁭‌⁮‮⁮⁬⁭‏⁭‎‌‍⁪‫‍⁪‮⁭⁪‬⁪‏‬‍‌⁯‌⁯‮(aData);
            num1 = (int) num2 * -101191137 ^ 1237334626;
            continue;
          case 3:
            num1 = (int) num2 * -2038912593 ^ 1061127646;
            continue;
          case 4:
            goto label_1;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u206B‍⁯‏⁫‬‮‍‬​⁬⁯‌‪‍⁫‭⁯‎⁭‌‌‎⁯​⁭⁫‎⁪‫‍‬‮‬‫⁫‫‬‎⁫‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u206B‍⁯‏⁫‬‮‍‬​⁬⁯‌‪‍⁫‭⁯‎⁭‌‌‎⁯​⁭⁫‎⁪‫‍‬‮‬‫⁫‫‬‎⁫‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u206B‍⁯‏⁫‬‮‍‬​⁬⁯‌‪‍⁫‭⁯‎⁭‌‌‎⁯​⁭⁫‎⁪‫‍‬‮‬‫⁫‫‬‎⁫‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
label_1:
      int num1 = -935966639;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1090045632)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            JSONNode.\u200F⁪‭‬‍‮‏‪‌‭⁫‬‭‮⁭‫⁮‏⁭​⁭⁫‭‬‮⁪‭‫⁫⁬​‮‎‎⁭‬⁫‫‬‬‮(JSONNode.\u206A⁪‬‮‮‮⁫‪‫⁮⁪⁯⁯‫‍‪⁪‫‍​⁪‍‬‬‭⁬‬‫‫‫⁭‍‌‌‪‍‏‬⁮‏‮((FileSystemInfo) JSONNode.\u200C⁭⁬‮⁭⁭‌‭‪⁮⁯⁫⁯⁮⁯⁫‭‮⁫⁭⁭‪‭‍‎‪‍‮⁭‬⁯‏‮‭⁮⁪‬⁭‮‮‮(JSONNode.\u206F⁯⁯‍‎‎⁭⁯⁭‪⁮⁪⁯‮‪‍‭⁯⁪⁬‬‎‎⁮⁯‭⁯⁫⁭⁬‍‫‏‪‫⁭‬⁫‎⁬‮(aFileName))));
            num1 = (int) num2 * -806982949 ^ 980244673;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      FileStream aData = JSONNode.\u200E​⁮⁬‍‫⁪‭‏‍‎‍⁬⁫‏⁯‏‏​‍‪‮‬⁫‭‬‌‬⁮‪⁭⁯‭‍‏⁮⁭‪⁫‪‮(aFileName);
      try
      {
        this.SaveToStream((Stream) aData);
label_6:
        int num3 = -1433152286;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -1090045632)) % 3U)
          {
            case 0:
              goto label_6;
            case 1:
              num3 = (int) num4 * -1410735553 ^ -7975150;
              continue;
            case 2:
              goto label_13;
            default:
              goto label_9;
          }
        }
label_13:
        return;
label_9:;
      }
      finally
      {
        if (aData != null)
        {
label_11:
          int num5 = -942143834;
          while (true)
          {
            uint num6;
            switch ((num6 = (uint) (num5 ^ -1090045632)) % 4U)
            {
              case 0:
                goto label_11;
              case 1:
                num5 = (int) num6 * -1256941240 ^ 1698671451;
                continue;
              case 2:
                JSONNode.\u206B⁫⁫‍‮⁪‌‏⁭‭⁮‫‏‍‫‮‏‫‮‎‏⁪‭‫‍⁫‍⁮‭⁭‮⁫⁪⁪‫⁫⁫‭‪⁪‮((IDisposable) aData);
                num5 = (int) num6 * 539579207 ^ 843654331;
                continue;
              default:
                goto label_16;
            }
          }
        }
label_16:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u206D‫⁫​‫⁮‍⁫‪‍‌⁫‎⁭‮‭‪‮‍⁯‪‮‎⁬⁪‫‭⁬⁭‌‭‫⁪⁫‮⁭⁬‬⁯‫‮();
      string base64;
      try
      {
label_2:
        int num1 = -328866343;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1334033046)) % 4U)
          {
            case 0:
              goto label_2;
            case 1:
              JSONNode.\u206E⁭‏​‪‍⁬⁮⁫‌‎⁭⁮‪‌​‫⁮‬⁫⁬‬⁭⁭‭‏‌‏‪⁭‎​‌⁯‬⁮⁭⁪⁪‏‮((Stream) aData, 0L);
              base64 = JSONNode.\u206C‪‮⁪‎⁪‮‫⁬‮‌‬‍‮‭‌⁭‍‌‬⁬‮‭⁭​‍​‭‫‫⁭‏‌⁮⁫⁭⁭‍⁬‮(JSONNode.\u202C⁭‮⁪‌‍‎‏⁬⁮‏‍‏‍‏‮‎‭‬‪⁭⁯⁫⁮‎‫⁪‪​⁫⁭‍⁮⁭‍⁭‍⁫‎‪‮(aData));
              num1 = (int) num2 * -2018088648 ^ 284120744;
              continue;
            case 3:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * -1611642504 ^ -82941593;
              continue;
            default:
              goto label_11;
          }
        }
      }
      finally
      {
        if (aData != null)
        {
label_7:
          int num3 = -1677832249;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -1334033046)) % 3U)
            {
              case 0:
                goto label_7;
              case 2:
                JSONNode.\u206B⁫⁫‍‮⁪‌‏⁭‭⁮‫‏‍‫‮‏‫‮‎‏⁪‭‫‍⁫‍⁮‭⁭‮⁫⁪⁪‫⁫⁫‭‪⁪‮((IDisposable) aData);
                num3 = (int) num4 * -690895502 ^ 201445853;
                continue;
              default:
                goto label_10;
            }
          }
        }
label_10:;
      }
label_11:
      return base64;
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
label_1:
      int num1 = 1118158705;
      int num2;
      JSONArray jsonArray;
      JSONNode jsonNode;
      int num3;
      JSONClass jsonClass;
      JSONBinaryTag jsonBinaryTag1;
      JSONBinaryTag jsonBinaryTag2;
      int num4;
      int num5;
      JSONBinaryTag jsonBinaryTag3;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ 1868133818)) % 43U)
        {
          case 0:
label_34:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206C⁯⁯⁭‮‌⁮‏⁮‫⁫​⁭‍‪‬‏⁬⁭‪‫⁬‬⁪⁬⁯⁯​⁭⁬‬​‏⁭‭‏‌⁪⁭⁬‮(aReader));
            num1 = 1134144788;
            continue;
          case 1:
label_28:
            num5 = JSONNode.\u206E⁫‮‎‬⁯⁮⁭⁬⁯‪‭‍‎⁫⁮‌‏‮⁭⁬‌‎⁫‬‮⁫⁮‫‭​​‬‎‮‍​⁬⁮‎‮(aReader);
            jsonArray = new JSONArray();
            num1 = 257195890;
            continue;
          case 2:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * 211386444 ^ -176892804;
            continue;
          case 3:
            num1 = (int) num6 * 2074577433 ^ 1628583930;
            continue;
          case 4:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206B⁪⁭⁪‍‎​‪⁬‪‍‮‏‭⁯‏⁮⁪‪‫‬‪‫⁯‬⁬‭‎⁫‪⁯‍⁭⁪⁪⁭‌‍⁫‌‮(aReader));
            num1 = (int) num6 * -1993272969 ^ -1244249724;
            continue;
          case 5:
            num1 = (int) num6 * -982172113 ^ -107358521;
            continue;
          case 6:
            num1 = (int) num6 * 1057065156 ^ -433330903;
            continue;
          case 7:
label_14:
            num1 = 1281545765;
            continue;
          case 9:
            switch (jsonBinaryTag2)
            {
              case JSONBinaryTag.Array:
                goto label_28;
              case JSONBinaryTag.Class:
                goto label_24;
              case JSONBinaryTag.Value:
                goto label_13;
              case JSONBinaryTag.IntValue:
                goto label_10;
              case JSONBinaryTag.DoubleValue:
                goto label_34;
              case JSONBinaryTag.BoolValue:
                goto label_14;
              case JSONBinaryTag.FloatValue:
                goto label_35;
              default:
                num1 = (int) num6 * 802099880 ^ 1643660343;
                continue;
            }
          case 10:
            num1 = (int) num6 * -1307295338 ^ 496052716;
            continue;
          case 11:
            goto label_1;
          case 12:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * 1788117838 ^ 803123901;
            continue;
          case 13:
label_35:
            num1 = 819563482;
            continue;
          case 14:
            num1 = (int) num6 * 1895885355 ^ -1307329909;
            continue;
          case 15:
label_13:
            num1 = 1994775967;
            continue;
          case 16:
            ++num2;
            num1 = (int) num6 * -1138713492 ^ -190177897;
            continue;
          case 17:
            jsonBinaryTag3 = (JSONBinaryTag) JSONNode.\u202E⁪‏⁮‬⁫⁪⁪‭⁭‌⁭⁯​‭⁪‍‭‪‌‭⁭‎‬‍​⁯‎⁫‪⁫‏⁪⁮​‎‪‍‌⁬‮(aReader);
            num1 = (int) num6 * 995655137 ^ 275244752;
            continue;
          case 18:
            num1 = (int) num6 * 1900100125 ^ 1267695031;
            continue;
          case 19:
            num1 = (int) num6 * 397176722 ^ 1415964377;
            continue;
          case 20:
            num3 = JSONNode.\u206E⁫‮‎‬⁯⁮⁭⁬⁯‪‭‍‎⁫⁮‌‏‮⁭⁬‌‎⁫‬‮⁫⁮‫‭​​‬‎‮‍​⁬⁮‎‮(aReader);
            jsonClass = new JSONClass();
            num1 = (int) num6 * -69822624 ^ 1375250380;
            continue;
          case 21:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206E⁫‮‎‬⁯⁮⁭⁬⁯‪‭‍‎⁫⁮‌‏‮⁭⁬‌‎⁫‬‮⁫⁮‫‭​​‬‎‮‍​⁬⁮‎‮(aReader));
            num1 = (int) num6 * -667182634 ^ 118562205;
            continue;
          case 22:
            num1 = (int) num6 * -1570416483 ^ 1166342590;
            continue;
          case 23:
            num4 = 0;
            num1 = (int) num6 * -1889531336 ^ 425087815;
            continue;
          case 24:
            int num7;
            num1 = num7 = num2 < num3 ? 1516563249 : (num7 = 50387599);
            continue;
          case 25:
            int num8;
            num1 = num8 = num4 < num5 ? 1354019406 : (num8 = 1806175291);
            continue;
          case 26:
            num2 = 0;
            num1 = (int) num6 * 1523965024 ^ 1204554542;
            continue;
          case 27:
            num1 = (int) num6 * 257564791 ^ -1182388460;
            continue;
          case 28:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202C⁫‭‬‫⁯⁬‍​‍‌‎‫⁭⁮‏⁯⁫⁭‏‍​‎⁮⁮‬‫⁬⁪‬⁭​⁪‍‎⁬⁯⁭‪‬‮(aReader));
            num1 = (int) num6 * -320433044 ^ -283859367;
            continue;
          case 29:
            num1 = (int) num6 * 1154497709 ^ -1129780741;
            continue;
          case 30:
            num1 = 1065940568;
            continue;
          case 31:
            string aKey = JSONNode.\u200E‍‭‬‍⁯‎⁫⁬‬‬‫‪⁯‮⁬‌‌‌⁫‎⁬⁪⁫‫​‌⁬‏⁫⁮‍‪‎​⁪‪‬‌⁪‮(aReader);
            JSONNode aItem = JSONNode.Deserialize(aReader);
            jsonClass.Add(aKey, aItem);
            num1 = (int) num6 * -864546588 ^ -746591484;
            continue;
          case 32:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            num1 = 772693341;
            continue;
          case 33:
label_10:
            num1 = 1268146118;
            continue;
          case 34:
            jsonBinaryTag1 = jsonBinaryTag3;
            num1 = (int) num6 * 158918858 ^ 1657528728;
            continue;
          case 35:
            num1 = (int) num6 * -1347909331 ^ -2107419568;
            continue;
          case 36:
            num1 = 1587895880;
            continue;
          case 37:
label_24:
            num1 = 1924556539;
            continue;
          case 38:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200E‍‭‬‍⁯‎⁫⁬‬‬‫‪⁯‮⁬‌‌‌⁫‎⁬⁪⁫‫​‌⁬‏⁫⁮‍‪‎​⁪‪‬‌⁪‮(aReader));
            num1 = (int) num6 * 349736702 ^ -1819779794;
            continue;
          case 39:
            ++num4;
            num1 = (int) num6 * -935980520 ^ 881126759;
            continue;
          case 40:
            jsonBinaryTag2 = jsonBinaryTag1;
            num1 = (int) num6 * 334002916 ^ 1865849144;
            continue;
          case 41:
            goto label_40;
          case 42:
            num1 = (int) num6 * -434861912 ^ -1552872299;
            continue;
          default:
            goto label_45;
        }
      }
label_40:
      throw JSONNode.\u206B‍⁯‏⁫‬‮‍‬​⁬⁯‌‪‍⁫‭⁯‎⁭‌‌‎⁯​⁭⁫‎⁪‫‍‬‮‬‫⁫‫‬‎⁫‮(JSONNode.\u206F‍‏‬⁫‭⁮‫‫‏‎‌⁬‎‪‪⁮‪⁪‮‪‌⁭‍‮‎‭‏‍‌‭⁬⁫​‪⁪‪‏‮⁪‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag3.ToString()));
label_45:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u206B‍⁯‏⁫‬‮‍‬​⁬⁯‌‪‍⁫‭⁯‎⁭‌‌‎⁯​⁭⁫‎⁪‫‍‬‮‬‫⁫‫‬‎⁫‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u206B‍⁯‏⁫‬‮‍‬​⁬⁯‌‪‍⁫‭⁯‎⁭‌‌‎⁯​⁭⁫‎⁪‫‍‬‮‬‫⁫‫‬‎⁫‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u206B‍⁯‏⁫‬‮‍‬​⁬⁯‌‪‍⁫‭⁯‎⁭‌‌‎⁯​⁭⁫‎⁪‫‍‬‮‬‫⁫‫‬‎⁫‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u202C‫‬‌‌‪‭⁮‭‭‭‎⁫​⁫‮‌‍⁭‬‪⁯‎⁮⁫‌​‭⁯⁭⁮‫‮‫‫‏⁬⁪⁬⁯‮(aData);
      try
      {
        return JSONNode.Deserialize(aReader);
      }
      finally
      {
        if (aReader != null)
        {
label_3:
          int num1 = -458459024;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ -905577983)) % 3U)
            {
              case 0:
                goto label_3;
              case 2:
                JSONNode.\u206B⁫⁫‍‮⁪‌‏⁭‭⁮‫‏‍‫‮‏‫‮‎‏⁪‭‫‍⁫‍⁮‭⁭‮⁫⁪⁪‫⁫⁫‭‪⁪‮((IDisposable) aReader);
                num1 = (int) num2 * -73184744 ^ -264029000;
                continue;
              default:
                goto label_6;
            }
          }
        }
label_6:;
      }
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u206D​⁯‪‌‎‫⁬⁫‭⁫‮‎‍‬‮​⁯‎⁬‮‫⁪‎⁪⁫‪‏‭⁮‪⁭⁮‌‍‏‭⁫‎‮(aFileName);
      try
      {
        return JSONNode.LoadFromStream((Stream) aData);
      }
      finally
      {
        if (aData != null)
        {
label_3:
          int num1 = 1177837123;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ 1128868344)) % 3U)
            {
              case 1:
                JSONNode.\u206B⁫⁫‍‮⁪‌‏⁭‭⁮‫‏‍‫‮‏‫‮‎‏⁪‭‫‍⁫‍⁮‭⁭‮⁫⁪⁪‫⁫⁫‭‪⁪‮((IDisposable) aData);
                num1 = (int) num2 * -535314092 ^ -1974927525;
                continue;
              case 2:
                goto label_3;
              default:
                goto label_6;
            }
          }
        }
label_6:;
      }
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
      byte[] numArray = JSONNode.\u206E⁮⁮⁮​⁯‌⁮‌‪⁯⁫⁫⁪​‏⁮‭⁯⁬‎‎⁪⁪‭‮‫‌⁭⁭⁫‍⁭‬‌⁪‫⁮‎‌‮(aBase64);
label_1:
      int num1 = 1524559890;
      MemoryStream aData;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1794000222)) % 6U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1367612117 ^ 1519217537;
            continue;
          case 2:
            aData = JSONNode.\u200F‏‭⁮⁮‮‌‍⁫⁬‮​⁭​‏⁬⁫⁬⁮‌‬​‍‪‌⁭‮‍‎‭‮‌⁯‎‏‮‎‌⁬⁫‮(numArray);
            JSONNode.\u206E⁭‏​‪‍⁬⁮⁫‌‎⁭⁮‪‌​‫⁮‬⁫⁬‬⁭⁭‭‏‌‏‪⁭‎​‌⁯‬⁮⁭⁪⁪‏‮((Stream) aData, 0L);
            num1 = (int) num2 * 1882409917 ^ 1950027215;
            continue;
          case 3:
            num1 = (int) num2 * 1840813255 ^ -272544952;
            continue;
          case 4:
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * 1491223193 ^ 1353894099;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      return jsonNode;
    }

    public JSONNode()
    {
label_1:
      int num1 = -222250483;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1693511667)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * 972305005 ^ 1895567629;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static CultureInfo \u200E⁪​⁮‬‮⁬⁭⁫⁪‬⁪‎‎‮‭‍​‮‮⁫‪⁭⁭‭⁪‬‏⁪‪‎‭‏⁯‭‍‎‍‪‌‮() => CultureInfo.InvariantCulture;

    static bool \u206D‍‬‪⁪‪‫‌⁪‬‬⁯⁪‫⁫‮‪⁯⁭⁮‌‏‬‎⁮‍⁫‪⁪⁪⁯⁪‪⁫‮⁭‮‍⁭‭‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u202E⁯⁫‎⁪⁬​‪‬‮‫⁭‮⁬⁭⁪⁮‪⁫‏‎‪‌⁯​‬⁮⁭⁮‌​‫‏‏​​‏⁭​‌‮() => base.GetHashCode();

    static char \u200B⁮‍‎‫⁫​‬​‏‮‬⁭‎⁮‮‬⁮⁬⁫‌⁯⁮‏‌‪‫‭⁬‏‏‭​‌⁪‌⁯⁭⁮‌‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u206F‍‏‬⁫‭⁮‫‫‏‎‌⁬‎‪‪⁮‪⁪‮‪‌⁭‍‮‎‭‏‍‌‭⁬⁫​‪⁪‪‏‮⁪‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u206B‍‮⁬⁪‭‬‮⁭‎⁪‮‎⁭⁭‭​⁪‭‭⁫⁯⁬⁫⁫⁫‭‪‭⁬⁯‬‭‮‪⁯​‭‪‮‮([In] string obj0) => obj0.Length;

    static string \u200F⁫‌⁭⁪⁪‪‭‭‍‮⁪⁭‍‎⁬⁪⁬⁫‎⁭‌⁪⁪‬‍‏‬⁬‎‍‌⁫​‫​‎⁮‭‪‮([In] string obj0) => obj0.Trim();

    static bool \u200D‌⁪‭‍‏‎‮⁭⁪‮‪‫‭⁪​‭⁯⁭‪‮⁬⁭⁫‭‍‮‫‬‎⁭⁪⁮‌‪‌‌​‎‪‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u206B‍⁯‏⁫‬‮‍‬​⁬⁯‌‪‍⁫‭⁯‎⁭‌‌‎⁯​⁭⁫‎⁪‫‍‬‮‬‫⁫‫‬‎⁫‮([In] string obj0) => new Exception(obj0);

    static string \u200E⁬⁭⁫‎‎‪‎‮⁮‪⁫‌‮⁬⁯⁮‪⁮⁮⁫⁮‭⁮⁪⁫‌⁫‫‍⁬‬⁮⁯‪⁭​⁪‪⁯‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u202D⁫‬⁪⁭‌⁯‪‮‭⁫​⁭‌⁮‮⁮⁬⁭‏⁭‎‌‍⁪‫‍⁪‮⁭⁪‬⁪‏‬‍‌⁯‌⁯‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u206F⁯⁯‍‎‎⁭⁯⁭‪⁮⁪⁯‮‪‍‭⁯⁪⁬‬‎‎⁮⁯‭⁯⁫⁭⁬‍‫‏‪‫⁭‬⁫‎⁬‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u200C⁭⁬‮⁭⁭‌‭‪⁮⁯⁫⁯⁮⁯⁫‭‮⁫⁭⁭‪‭‍‎‪‍‮⁭‬⁯‏‮‭⁮⁪‬⁭‮‮‮([In] FileInfo obj0) => obj0.Directory;

    static string \u206A⁪‬‮‮‮⁫‪‫⁮⁪⁯⁯‫‍‪⁪‫‍​⁪‍‬‬‭⁬‬‫‫‫⁭‍‌‌‪‍‏‬⁮‏‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u200F⁪‭‬‍‮‏‪‌‭⁫‬‭‮⁭‫⁮‏⁭​⁭⁫‭‬‮⁪‭‫⁫⁬​‮‎‎⁭‬⁫‫‬‬‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u200E​⁮⁬‍‫⁪‭‏‍‎‍⁬⁫‏⁯‏‏​‍‪‮‬⁫‭‬‌‬⁮‪⁭⁯‭‍‏⁮⁭‪⁫‪‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u206B⁫⁫‍‮⁪‌‏⁭‭⁮‫‏‍‫‮‏‫‮‎‏⁪‭‫‍⁫‍⁮‭⁭‮⁫⁪⁪‫⁫⁫‭‪⁪‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u206D‫⁫​‫⁮‍⁫‪‍‌⁫‎⁭‮‭‪‮‍⁯‪‮‎⁬⁪‫‭⁬⁭‌‭‫⁪⁫‮⁭⁬‬⁯‫‮() => new MemoryStream();

    static void \u206E⁭‏​‪‍⁬⁮⁫‌‎⁭⁮‪‌​‫⁮‬⁫⁬‬⁭⁭‭‏‌‏‪⁭‎​‌⁯‬⁮⁭⁪⁪‏‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u202C⁭‮⁪‌‍‎‏⁬⁮‏‍‏‍‏‮‎‭‬‪⁭⁯⁫⁮‎‫⁪‪​⁫⁭‍⁮⁭‍⁭‍⁫‎‪‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u206C‪‮⁪‎⁪‮‫⁬‮‌‬‍‮‭‌⁭‍‌‬⁬‮‭⁭​‍​‭‫‫⁭‏‌⁮⁫⁭⁭‍⁬‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u202E⁪‏⁮‬⁫⁪⁪‭⁭‌⁭⁯​‭⁪‍‭‪‌‭⁭‎‬‍​⁯‎⁫‪⁫‏⁪⁮​‎‪‍‌⁬‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u206E⁫‮‎‬⁯⁮⁭⁬⁯‪‭‍‎⁫⁮‌‏‮⁭⁬‌‎⁫‬‮⁫⁮‫‭​​‬‎‮‍​⁬⁮‎‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u200E‍‭‬‍⁯‎⁫⁬‬‬‫‪⁯‮⁬‌‌‌⁫‎⁬⁪⁫‫​‌⁬‏⁫⁮‍‪‎​⁪‪‬‌⁪‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u206C⁯⁯⁭‮‌⁮‏⁮‫⁫​⁭‍‪‬‏⁬⁭‪‫⁬‬⁪⁬⁯⁯​⁭⁬‬​‏⁭‭‏‌⁪⁭⁬‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u206B⁪⁭⁪‍‎​‪⁬‪‍‮‏‭⁯‏⁮⁪‪‫‬‪‫⁯‬⁬‭‎⁫‪⁯‍⁭⁪⁪⁭‌‍⁫‌‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u202C⁫‭‬‫⁯⁬‍​‍‌‎‫⁭⁮‏⁯⁫⁭‏‍​‎⁮⁮‬‫⁬⁪‬⁭​⁪‍‎⁬⁯⁭‪‬‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u202C‫‬‌‌‪‭⁮‭‭‭‎⁫​⁫‮‌‍⁭‬‪⁯‎⁮⁫‌​‭⁯⁭⁮‫‮‫‫‏⁬⁪⁬⁯‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u206D​⁯‪‌‎‫⁬⁫‭⁫‮‎‍‬‮​⁯‎⁬‮‫⁪‎⁪⁫‪‏‭⁮‪⁭⁮‌‍‏‭⁫‎‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u206E⁮⁮⁮​⁯‌⁮‌‪⁯⁫⁫⁪​‏⁮‭⁯⁬‎‎⁪⁪‭‮‫‌⁭⁭⁫‍⁭‬‌⁪‫⁮‎‌‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u200F‏‭⁮⁮‮‌‍⁫⁬‮​⁭​‏⁬⁫⁬⁮‌‬​‍‪‌⁭‮‍‎‭‮‌⁯‎‏‮‎‌⁬⁫‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
