// Decompiled with JetBrains decompiler
// Type: .
// Assembly: d1a3l0s, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 50A68CBD-55EA-4E40-8DCB-F2A44DFB42DE
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00001-msil\Trojan-Spy.MSIL.KeyLogger.aml-44c1ddfbe16f7426b43f0f84e1cff26f11ab5843bd621cd6766374fa6511763b.exe

using Microsoft.VisualBasic.ApplicationServices;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.ComponentModel;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace \u0002
{
  [GeneratedCode("MyTemplate", "8.0.0.0")]
  internal sealed class \u0003
  {
    private static readonly \u0002.\u0003.\u0003<\u0002.\u0002> \u0001 = new \u0002.\u0003.\u0003<\u0002.\u0002>();
    private static readonly \u0002.\u0003.\u0003<\u0002.\u0001> \u0001 = new \u0002.\u0003.\u0003<\u0002.\u0001>();
    private static readonly \u0002.\u0003.\u0003<User> \u0001 = new \u0002.\u0003.\u0003<User>();
    private static \u0002.\u0003.\u0003<\u0002.\u0003.\u0001> \u0001 = new \u0002.\u0003.\u0003<\u0002.\u0003.\u0001>();
    private static readonly \u0002.\u0003.\u0003<\u0002.\u0003.\u0002> \u0001 = new \u0002.\u0003.\u0003<\u0002.\u0003.\u0002>();

    [SpecialName]
    internal static \u0002.\u0002 \u0002() => \u0002.\u0003.\u0001.\u0002();

    [SpecialName]
    internal static \u0002.\u0001 \u0002() => \u0002.\u0003.\u0001.\u0002();

    [SpecialName]
    internal static \u0002.\u0003.\u0001 \u0002() => \u0002.\u0003.\u0001.\u0002();

    [EditorBrowsable(EditorBrowsableState.Never)]
    internal sealed class \u0001
    {
      [NonSerialized]
      internal static \u0001.\u0001 \u0001;
      public \u0003.\u0003 \u0001;
      [ThreadStatic]
      private static Hashtable \u0001;

      [SpecialName]
      public \u0003.\u0003 \u0002()
      {
        this.\u0001 = \u0002.\u0003.\u0001.\u0002<\u0003.\u0003>(this.\u0001);
        return this.\u0001;
      }

      private static T \u0002<T>([In] T obj0) where T : Form, new()
      {
        if ((object) obj0 != null && !obj0.IsDisposed)
          return obj0;
        if (\u0002.\u0003.\u0001.\u0001 != null)
        {
          if (\u0002.\u0003.\u0001.\u0001.ContainsKey((object) typeof (T)))
            throw new InvalidOperationException(Utils.GetResourceString(\u0002.\u0003.\u0001.\u0001(180)));
        }
        else
          \u0002.\u0003.\u0001.\u0001 = new Hashtable();
        \u0002.\u0003.\u0001.\u0001.Add((object) typeof (T), (object) null);
        try
        {
          return new T();
        }
        catch (TargetInvocationException ex) when (
        {
          // ISSUE: unable to correctly present filter
          ProjectData.SetProjectError((Exception) ex);
          if (ex.InnerException != null)
          {
            SuccessfulFiltering;
          }
          else
            throw;
        }
        )
        {
          throw new InvalidOperationException(Utils.GetResourceString(\u0002.\u0003.\u0001.\u0001(221), ex.InnerException.Message), ex.InnerException);
        }
        finally
        {
          \u0002.\u0003.\u0001.\u0001.Remove((object) typeof (T));
        }
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      public \u0001()
      {
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override bool Equals([In] object obj0) => base.Equals(RuntimeHelpers.GetObjectValue(obj0));

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override int GetHashCode() => base.GetHashCode();

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override string ToString() => base.ToString();

      static \u0001() => \u0001.\u0002.\u0002();
    }

    [EditorBrowsable(EditorBrowsableState.Never)]
    internal sealed class \u0002
    {
      [EditorBrowsable(EditorBrowsableState.Never)]
      public override bool Equals([In] object obj0) => base.Equals(RuntimeHelpers.GetObjectValue(obj0));

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override int GetHashCode() => base.GetHashCode();

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override string ToString() => base.ToString();

      [EditorBrowsable(EditorBrowsableState.Never)]
      public \u0002()
      {
      }
    }

    [EditorBrowsable(EditorBrowsableState.Never)]
    internal sealed class \u0003<T> where T : new()
    {
      [SpecialName]
      internal T \u0002()
      {
        // ISSUE: reference to a compiler-generated field
        if ((object) \u0002.\u0003.\u0003<T>.\u0001 == null)
        {
          // ISSUE: reference to a compiler-generated field
          \u0002.\u0003.\u0003<T>.\u0001 = new T();
        }
        // ISSUE: reference to a compiler-generated field
        return \u0002.\u0003.\u0003<T>.\u0001;
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      public \u0003()
      {
      }
    }
  }
}
