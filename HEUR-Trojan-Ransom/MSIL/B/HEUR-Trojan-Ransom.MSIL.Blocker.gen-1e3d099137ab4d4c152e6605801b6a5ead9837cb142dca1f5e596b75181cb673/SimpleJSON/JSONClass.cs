// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONClass
// Assembly: CMSCOMSERVERFL, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: BC3392BE-E240-40FB-9209-64A3FA8E63B6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-1e3d099137ab4d4c152e6605801b6a5ead9837cb142dca1f5e596b75181cb673.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONClass : JSONNode, IEnumerable
  {
    private Dictionary<string, JSONNode> m_Dict = new Dictionary<string, JSONNode>();

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 2140168249;
        JSONNode jsonNode;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 899567039)) % 8U)
          {
            case 0:
              jsonNode = this.m_Dict[aKey];
              num1 = (int) num2 * 925272092 ^ 1608489598;
              continue;
            case 1:
              num1 = (int) num2 * -137689181 ^ -898325345;
              continue;
            case 2:
              num1 = (int) num2 * 1881182408 ^ -1158928884;
              continue;
            case 4:
              int num3 = flag ? 767855435 : (num3 = 1341562606);
              num1 = num3 ^ (int) num2 * -713404527;
              continue;
            case 5:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = 779115629;
              continue;
            case 6:
              flag = this.m_Dict.ContainsKey(aKey);
              num1 = (int) num2 * 1920770286 ^ 562619959;
              continue;
            case 7:
              goto label_1;
            default:
              goto label_9;
          }
        }
label_9:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = -1032037358;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -539514136)) % 9U)
          {
            case 0:
              goto label_3;
            case 1:
              num1 = (int) num2 * -2079001548 ^ 1496387041;
              continue;
            case 2:
              this.m_Dict[aKey] = value;
              num1 = (int) num2 * 1539564876 ^ -469986638;
              continue;
            case 3:
              flag = this.m_Dict.ContainsKey(aKey);
              num1 = (int) num2 * 137643786 ^ 1898866663;
              continue;
            case 4:
              goto label_1;
            case 5:
              int num3 = !flag ? -1590124883 : (num3 = -1149901642);
              num1 = num3 ^ (int) num2 * -1455817749;
              continue;
            case 6:
              this.m_Dict.Add(aKey, value);
              num1 = -606793477;
              continue;
            case 7:
              num1 = (int) num2 * -777214086 ^ -1474856685;
              continue;
            case 8:
              num1 = (int) num2 * 480101555 ^ 64269721;
              continue;
            default:
              goto label_11;
          }
        }
label_3:
        return;
label_11:;
      }
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = -2130496454;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ -1038841176)) % 7U)
          {
            case 0:
              int num4 = !flag ? -1522949915 : (num4 = -1978099386);
              num1 = num4 ^ (int) num2 * 1561213320;
              continue;
            case 2:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 85624504 ^ -1221773197;
              continue;
            case 3:
              goto label_1;
            case 4:
              if (aIndex < 0)
              {
                num3 = 1;
                break;
              }
              num1 = (int) num2 * 1930098467 ^ -1606045559;
              continue;
            case 5:
              num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
              break;
            case 6:
              jsonNode = (JSONNode) null;
              num1 = -959553181;
              continue;
            default:
              goto label_11;
          }
          flag = num3 != 0;
          num1 = -829840224;
        }
label_11:
        return jsonNode;
      }
      set
      {
        if (aIndex < 0)
          goto label_5;
label_1:
        int num1 = 177209414;
label_2:
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 394980733)) % 5U)
          {
            case 0:
              num1 = (int) num2 * -1756528757 ^ 1548121726;
              continue;
            case 1:
              goto label_4;
            case 2:
              goto label_3;
            case 3:
              goto label_1;
            case 4:
              int num3 = !flag ? -1780782382 : (num3 = -1507358651);
              num1 = num3 ^ (int) num2 * -379340271;
              continue;
            default:
              goto label_9;
          }
        }
label_3:
        return;
label_9:
        return;
label_4:
        int num4 = aIndex >= this.m_Dict.Count ? 1 : 0;
        goto label_6;
label_5:
        num4 = 1;
label_6:
        flag = num4 != 0;
        num1 = 1265703255;
        goto label_2;
      }
    }

    public override int Count => this.m_Dict.Count;

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = -1712004491;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -421187422)) % 13U)
        {
          case 0:
            this.m_Dict[aKey] = aItem;
            num1 = (int) num2 * 1049316557 ^ 1603093252;
            continue;
          case 1:
            int num3 = !flag1 ? -239161513 : (num3 = -1803361626);
            num1 = num3 ^ (int) num2 * 1668699965;
            continue;
          case 2:
            this.m_Dict.Add(aKey, aItem);
            num1 = -1813035135;
            continue;
          case 3:
            goto label_1;
          case 4:
            int num4 = flag2 ? -997457263 : (num4 = -1740561211);
            num1 = num4 ^ (int) num2 * 295289348;
            continue;
          case 5:
            num1 = (int) num2 * 193245821 ^ -1376093432;
            continue;
          case 6:
            num1 = (int) num2 * -913274050 ^ 271401875;
            continue;
          case 7:
            this.m_Dict.Add(Guid.NewGuid().ToString(), aItem);
            num1 = -948777329;
            continue;
          case 8:
            flag1 = !JSONClass.\u202B⁬⁪‎⁭‭​⁯‪‎‍⁭‫‭⁯‍‬‏⁬⁬‍‬⁫‮‌‪‬‫⁯⁫⁭⁬‌‭⁭‫‬‏​‏‮(aKey);
            num1 = (int) num2 * 1685397181 ^ -1469805998;
            continue;
          case 9:
            num1 = (int) num2 * -1020625494 ^ 1070400325;
            continue;
          case 10:
            goto label_3;
          case 11:
            num1 = -1079918169;
            continue;
          case 12:
            flag2 = this.m_Dict.ContainsKey(aKey);
            num1 = (int) num2 * -394072411 ^ 202572808;
            continue;
          default:
            goto label_15;
        }
      }
label_3:
      return;
label_15:;
    }

    public override JSONNode Remove(string aKey)
    {
label_1:
      int num1 = -1731989885;
      JSONNode jsonNode1;
      JSONNode jsonNode2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -265582862)) % 8U)
        {
          case 0:
            jsonNode2 = jsonNode1;
            num1 = (int) num2 * -79920000 ^ 451657945;
            continue;
          case 1:
            int num3 = this.m_Dict.ContainsKey(aKey) ? 801826046 : (num3 = 57505655);
            num1 = num3 ^ (int) num2 * 331648994;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * -479491656 ^ 254348967;
            continue;
          case 4:
            this.m_Dict.Remove(aKey);
            num1 = (int) num2 * -2005450663 ^ -773536026;
            continue;
          case 6:
            jsonNode1 = this.m_Dict[aKey];
            num1 = -613121994;
            continue;
          case 7:
            jsonNode2 = (JSONNode) null;
            num1 = (int) num2 * -9307611 ^ -1962389492;
            continue;
          default:
            goto label_9;
        }
      }
label_9:
      return jsonNode2;
    }

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = -1353493267;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        bool flag;
        int num3;
        switch ((num2 = (uint) (num1 ^ -440973951)) % 8U)
        {
          case 1:
            num1 = (int) num2 * -1773774448 ^ 1914441169;
            continue;
          case 2:
            num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
            break;
          case 3:
            int num4 = flag ? 957302976 : (num4 = 149122707);
            num1 = num4 ^ (int) num2 * 1490852916;
            continue;
          case 4:
            if (aIndex >= 0)
            {
              num1 = (int) num2 * 225964999 ^ -1741067529;
              continue;
            }
            num3 = 1;
            break;
          case 5:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * -785868733 ^ 1354479039;
            continue;
          case 6:
            jsonNode = (JSONNode) null;
            num1 = -200813119;
            continue;
          case 7:
            goto label_1;
          default:
            goto label_12;
        }
        flag = num3 != 0;
        num1 = -1324697902;
      }
label_12:
      return jsonNode;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = 1785654938;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1732189293)) % 3U)
          {
            case 0:
              goto label_2;
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 122521292 ^ 164377013;
              continue;
            default:
              goto label_9;
          }
        }
      }
      catch
      {
label_6:
        int num3 = 1452438665;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1732189293)) % 3U)
          {
            case 0:
              goto label_6;
            case 2:
              jsonNode = (JSONNode) null;
              num3 = (int) num4 * -754486600 ^ -1944962783;
              continue;
            default:
              goto label_9;
          }
        }
      }
label_9:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs => (IEnumerable<JSONNode>) new JSONClass.\u003Cget_Childs\u003Ed__14(-2)
    {
      \u003C\u003E4__this = this
    };

    public IEnumerator GetEnumerator()
    {
      bool enumerator1;
      // ISSUE: fault handler
      try
      {
        // ISSUE: reference to a compiler-generated field
        int num1 = this.\u003C\u003E1__state;
label_1:
        int num2 = 1116959252;
        Dictionary<string, JSONNode>.Enumerator enumerator;
        KeyValuePair<string, JSONNode> N;
        while (true)
        {
          uint num3;
          switch ((num3 = (uint) (num2 ^ 304931636)) % 23U)
          {
            case 0:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = (int) num3 * -1557180332 ^ -1398157310;
              continue;
            case 1:
            case 10:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -1;
              num2 = 1467070703;
              continue;
            case 2:
              num2 = (int) num3 * 187642221 ^ 1063449543;
              continue;
            case 3:
            case 5:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              N = new KeyValuePair<string, JSONNode>();
              num2 = 263160284;
              continue;
            case 4:
              int num4;
              num2 = num4 = !enumerator.MoveNext() ? 1712987890 : (num4 = 1007631281);
              continue;
            case 6:
              enumerator1 = false;
              num2 = (int) num3 * -1740961975 ^ -1088718310;
              continue;
            case 7:
              num2 = (int) num3 * 1310129280 ^ -1307628415;
              continue;
            case 9:
              enumerator = this.m_Dict.GetEnumerator();
              num2 = (int) num3 * -1178828512 ^ -699082274;
              continue;
            case 12:
              goto label_1;
            case 13:
              enumerator = new Dictionary<string, JSONNode>.Enumerator();
              num2 = (int) num3 * -1173231230 ^ -181794639;
              continue;
            case 14:
              int num5;
              num2 = num5 = num1 != 1 ? 800451315 : (num5 = 1948324948);
              continue;
            case 15:
              N = enumerator.Current;
              num2 = 300836466;
              continue;
            case 17:
              enumerator1 = false;
              num2 = 963629025;
              continue;
            case 18:
              num2 = (int) num3 * -1246815426 ^ 1862501896;
              continue;
            case 19:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E2__current = (object) N;
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = 1;
              enumerator1 = true;
              num2 = (int) num3 * 383601817 ^ 1765024389;
              continue;
            case 20:
              num2 = (int) num3 * -1278979284 ^ -2139763596;
              continue;
            case 21:
              // ISSUE: reference to a compiler-generated method
              this.\u003C\u003Em__Finally1();
              num2 = (int) num3 * 288806402 ^ -281251373;
              continue;
            case 22:
              int num6 = num1 != 0 ? 1794561640 : (num6 = 28982723);
              num2 = num6 ^ (int) num3 * 970823014;
              continue;
            default:
              goto label_21;
          }
        }
      }
      __fault
      {
        // ISSUE: reference to a compiler-generated method
        this.System\u002EIDisposable\u002EDispose();
      }
label_21:
      return enumerator1;
    }

    public override string ToString()
    {
      string str1 = "{";
      using (Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator())
      {
label_10:
        int num1 = enumerator.MoveNext() ? -602789357 : (num1 = -788086774);
        KeyValuePair<string, JSONNode> current;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -451977056)) % 9U)
          {
            case 0:
              str1 = JSONClass.\u200B‏‎⁯⁯⁯‬⁮⁯⁬⁮‫‭‍‏⁯⁪⁮⁫‫⁮⁯​‬‭​‏‌‮‮‭‏‬‬‫‪⁯‍‮‏‮(str1, ", ");
              num1 = (int) num2 * 661312847 ^ 1339250973;
              continue;
            case 1:
              num1 = (int) num2 * 412282671 ^ 770477555;
              continue;
            case 2:
              goto label_10;
            case 3:
              num1 = -602789357;
              continue;
            case 4:
              flag = JSONClass.\u202B‭‫⁭⁯⁫⁮‪‭⁮‎⁮‪⁪​⁯​⁮⁪‎‍‬⁭‭‍‭‌‌⁯‍​‮‬‍⁪⁯⁪⁭‍‬‮(str1) > 2;
              num1 = (int) num2 * 366442011 ^ 154053003;
              continue;
            case 5:
              str1 = JSONClass.\u200F⁬⁬‎⁫⁮‫⁬⁬‍‏‮⁬⁫‏‍⁫⁯⁬⁮⁬‫⁫⁫⁯‮⁭‌‏‮⁭⁮‪⁭‍‏⁯‫‍‭‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\":",
                JSONClass.\u200D‎‍‮⁬‭‫⁪⁯‏‬⁯‮​‍‫‪‌‬‭‍‭‎‍‪‫‫‬‏⁯‬‌‮‮​‭⁯‭⁯‪‮((object) current.Value)
              });
              num1 = -1450403657;
              continue;
            case 6:
              current = enumerator.Current;
              num1 = -545015489;
              continue;
            case 8:
              int num3 = flag ? 1722440147 : (num3 = 311481536);
              num1 = num3 ^ (int) num2 * 1667721142;
              continue;
            default:
              goto label_12;
          }
        }
      }
label_12:
      string str2 = JSONClass.\u200B‏‎⁯⁯⁯‬⁮⁯⁬⁮‫‭‍‏⁯⁪⁮⁫‫⁮⁯​‬‭​‏‌‮‮‭‏‬‬‫‪⁯‍‮‏‮(str1, "}");
label_13:
      int num4 = -1515067283;
      while (true)
      {
        uint num5;
        switch ((num5 = (uint) (num4 ^ -451977056)) % 3U)
        {
          case 0:
            goto label_13;
          case 1:
            num4 = (int) num5 * -1092593784 ^ 537307333;
            continue;
          default:
            goto label_16;
        }
      }
label_16:
      return str2;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = -1133392486;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1741985413)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -1431781047 ^ 1928106636;
            continue;
          case 1:
            str = "{ ";
            num1 = (int) num2 * -585961543 ^ 1976523442;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      using (Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator())
      {
label_13:
        int num3 = enumerator.MoveNext() ? -368648366 : (num3 = -2146176975);
        KeyValuePair<string, JSONNode> current;
        bool flag;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -1741985413)) % 9U)
          {
            case 0:
              num3 = (int) num4 * -1344431608 ^ 593812926;
              continue;
            case 1:
              current = enumerator.Current;
              num3 = -1828064703;
              continue;
            case 2:
              int num5 = flag ? -585647966 : (num5 = -166292681);
              num3 = num5 ^ (int) num4 * 2112444370;
              continue;
            case 3:
              str = JSONClass.\u200B‏‎⁯⁯⁯‬⁮⁯⁬⁮‫‭‍‏⁯⁪⁮⁫‫⁮⁯​‬‭​‏‌‮‮‭‏‬‬‫‪⁯‍‮‏‮(str, ", ");
              num3 = (int) num4 * -19956292 ^ -1462350687;
              continue;
            case 5:
              str = JSONClass.\u200B​⁯‌⁭‍‏‪⁪⁮⁯‭‫⁬‎‍⁪⁪‏⁯‏⁮⁬⁪‌‪‏‮‏‏⁮‍‍‬⁫‌‏⁯‏⁭‮(str, "\n", aPrefix, "   ");
              str = JSONClass.\u200F⁬⁬‎⁫⁮‫⁬⁬‍‏‮⁬⁫‏‍⁫⁯⁬⁮⁬‫⁫⁫⁯‮⁭‌‏‮⁭⁮‪⁭‍‏⁯‫‍‭‮(new string[5]
              {
                str,
                "\"",
                JSONNode.Escape(current.Key),
                "\" : ",
                current.Value.ToString(JSONClass.\u200B‏‎⁯⁯⁯‬⁮⁯⁬⁮‫‭‍‏⁯⁪⁮⁫‫⁮⁯​‬‭​‏‌‮‮‭‏‬‬‫‪⁯‍‮‏‮(aPrefix, "   "))
              });
              num3 = -165881980;
              continue;
            case 6:
              flag = JSONClass.\u202B‭‫⁭⁯⁫⁮‪‭⁮‎⁮‪⁪​⁯​⁮⁪‎‍‬⁭‭‍‭‌‌⁯‍​‮‬‍⁪⁯⁪⁭‍‬‮(str) > 3;
              num3 = (int) num4 * 10998113 ^ 1144519287;
              continue;
            case 7:
              goto label_13;
            case 8:
              num3 = -368648366;
              continue;
            default:
              goto label_17;
          }
        }
      }
label_17:
      return JSONClass.\u200B​⁯‌⁭‍‏‪⁪⁮⁯‭‫⁬‎‍⁪⁪‏⁯‏⁮⁬⁪‌‪‏‮‏‏⁮‍‍‬⁫‌‏⁯‏⁭‮(str, "\n", aPrefix, "}");
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = 420396732;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1092450529)) % 5U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -262623510 ^ -799006788;
            continue;
          case 3:
            JSONClass.\u206D‏‪⁬‫‏‭‎‪‍‍​‫‌⁫⁯⁯⁪⁪⁪⁭‍⁫⁫‮‌‍‮‎‪‍⁬​⁪‎‫‫⁬‫‫‮(aWriter, (byte) 2);
            num1 = (int) num2 * -619336727 ^ 1548144901;
            continue;
          case 4:
            JSONClass.\u200C‭⁪‏‪‮‪‬‌⁪‪⁭‪⁭⁮‍⁯‫⁮⁮‎⁭⁮‭‍‪⁯‬‎⁪⁫‪‎‏⁪⁭‪​⁫‌‮(aWriter, this.m_Dict.Count);
            num1 = (int) num2 * -1349648000 ^ -1152745494;
            continue;
          default:
            goto label_6;
        }
      }
label_6:
      using (Dictionary<string, JSONNode>.KeyCollection.Enumerator enumerator = this.m_Dict.Keys.GetEnumerator())
      {
label_14:
        int num3 = !enumerator.MoveNext() ? 2039025217 : (num3 = 2002922483);
        string current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1092450529)) % 9U)
          {
            case 0:
              num3 = (int) num4 * -1167408238 ^ -39400634;
              continue;
            case 1:
              num3 = (int) num4 * 274946098 ^ 1819923185;
              continue;
            case 2:
              JSONClass.\u200F‮⁪​‮‎‏‌‍‭‮⁭‬‮⁯⁬‎⁮‍‬⁭⁪‬‌‏⁪⁫⁫‭‪‮⁯‬‬‏​‍‪⁫‌‮(aWriter, current);
              num3 = (int) num4 * -417229631 ^ 326616735;
              continue;
            case 3:
              this.m_Dict[current].Serialize(aWriter);
              num3 = (int) num4 * -1555434206 ^ 2074961697;
              continue;
            case 4:
              goto label_14;
            case 5:
              goto label_18;
            case 6:
              current = enumerator.Current;
              num3 = 1259220209;
              continue;
            case 7:
              num3 = (int) num4 * -1019599617 ^ 497941768;
              continue;
            case 8:
              num3 = 2002922483;
              continue;
            default:
              goto label_10;
          }
        }
label_18:
        return;
label_10:;
      }
    }

    static bool \u202B⁬⁪‎⁭‭​⁯‪‎‍⁭‫‭⁯‍‬‏⁬⁬‍‬⁫‮‌‪‬‫⁯⁫⁭⁬‌‭⁭‫‬‏​‏‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    static int \u202B‭‫⁭⁯⁫⁮‪‭⁮‎⁮‪⁪​⁯​⁮⁪‎‍‬⁭‭‍‭‌‌⁯‍​‮‬‍⁪⁯⁪⁭‍‬‮([In] string obj0) => obj0.Length;

    static string \u200B‏‎⁯⁯⁯‬⁮⁯⁬⁮‫‭‍‏⁯⁪⁮⁫‫⁮⁯​‬‭​‏‌‮‮‭‏‬‬‫‪⁯‍‮‏‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u200D‎‍‮⁬‭‫⁪⁯‏‬⁯‮​‍‫‪‌‬‭‍‭‎‍‪‫‫‬‏⁯‬‌‮‮​‭⁯‭⁯‪‮([In] object obj0) => obj0.ToString();

    static string \u200F⁬⁬‎⁫⁮‫⁬⁬‍‏‮⁬⁫‏‍⁫⁯⁬⁮⁬‫⁫⁫⁯‮⁭‌‏‮⁭⁮‪⁭‍‏⁯‫‍‭‮([In] string[] obj0) => string.Concat(obj0);

    static string \u200B​⁯‌⁭‍‏‪⁪⁮⁯‭‫⁬‎‍⁪⁪‏⁯‏⁮⁬⁪‌‪‏‮‏‏⁮‍‍‬⁫‌‏⁯‏⁭‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u206D‏‪⁬‫‏‭‎‪‍‍​‫‌⁫⁯⁯⁪⁪⁪⁭‍⁫⁫‮‌‍‮‎‪‍⁬​⁪‎‫‫⁬‫‫‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u200C‭⁪‏‪‮‪‬‌⁪‪⁭‪⁭⁮‍⁯‫⁮⁮‎⁭⁮‭‍‪⁯‬‎⁪⁫‪‎‏⁪⁭‪​⁫‌‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u200F‮⁪​‮‎‏‌‍‭‮⁭‬‮⁯⁬‎⁮‍‬⁭⁪‬‌‏⁪⁫⁫‭‪‮⁯‬‬‏​‍‪⁫‌‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
