// Decompiled with JetBrains decompiler
// Type: xClient.Core.MouseKeyHook.Implementation.MouseListener
// Assembly: $77-Venom, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DC8E8704-647D-4CA7-99AB-BB7BE936B486
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Zapchast.gen-815b2bf1ddadfb46a27001e08246e8f82f629eb793963bef856d17e1ef9c4085.exe

using System;
using System.Windows.Forms;

namespace xClient.Core.MouseKeyHook.Implementation
{
  internal abstract class MouseListener : 
    BaseListener,
    \uFFFD漶\uD7AAꏰ뮅\u2B5C更磔첄䕶鯰\uE244爲\u285C灢ﶩ\u2FB3䑓䆙\u09F7
  {
    private readonly ꭃଐ\u2F02뉺슟ต뽙쬅樦컐延\uE3A6싘\uEC62럦\uFFFD䅗묧\uE5D8㨚 m_DoubleDown;
    private readonly ꭃଐ\u2F02뉺슟ต뽙쬅樦컐延\uE3A6싘\uEC62럦\uFFFD䅗묧\uE5D8㨚 m_SingleDown;
    private 졕袃ᗬ礤뽀鷮慫릀羾䙾컓鸵ᨦ턟譖瑍\uFFFD䭳ꪮ\uFFFD m_PreviousPosition;

    protected MouseListener(
      痊ᴤ\u2730칞芑\u0D55ｉ䀜ꛃ֒䎕ꌱ藬攧嘳\u309C\u252F澚\u0E68\u4DE1 subscribe)
      : base(subscribe)
    {
      this.m_PreviousPosition = new 졕袃ᗬ礤뽀鷮慫릀羾䙾컓鸵ᨦ턟譖瑍\uFFFD䭳ꪮ\uFFFD(-1, -1);
      this.m_DoubleDown = new ꭃଐ\u2F02뉺슟ต뽙쬅樦컐延\uE3A6싘\uEC62럦\uFFFD䅗묧\uE5D8㨚();
      this.m_SingleDown = new ꭃଐ\u2F02뉺슟ต뽙쬅樦컐延\uE3A6싘\uEC62럦\uFFFD䅗묧\uE5D8㨚();
    }

    protected override bool Callback(ᠸ3귦觤娼闙\uEB3F揂숿涜頭᥏뼶榦듘㾇긟랈欐멒 data)
    {
      棿䠚㗉\u08BF\uEA2F\u33C3텬힉\uFFFD唋傕\uF1F6擦푳\uE462媇䌽쥳랩\u0CD9 eventArgs = this.GetEventArgs(data);
      if (eventArgs.IsMouseKeyDown)
        this.ProcessDown(ref eventArgs);
      if (eventArgs.IsMouseKeyUp)
        this.ProcessUp(ref eventArgs);
      if (eventArgs.WheelScrolled)
        this.ProcessWheel(ref eventArgs);
      if (this.HasMoved(eventArgs.Point))
        this.ProcessMove(ref eventArgs);
      return !eventArgs.Handled;
    }

    protected abstract 棿䠚㗉\u08BF\uEA2F\u33C3텬힉\uFFFD唋傕\uF1F6擦푳\uE462媇䌽쥳랩\u0CD9 GetEventArgs(
      ᠸ3귦觤娼闙\uEB3F揂숿涜頭᥏뼶榦듘㾇긟랈欐멒 data);

    protected virtual void ProcessWheel(
      ref 棿䠚㗉\u08BF\uEA2F\u33C3텬힉\uFFFD唋傕\uF1F6擦푳\uE462媇䌽쥳랩\u0CD9 e)
    {
      this.OnWheel((MouseEventArgs) e);
    }

    protected virtual void ProcessDown(
      ref 棿䠚㗉\u08BF\uEA2F\u33C3텬힉\uFFFD唋傕\uF1F6擦푳\uE462媇䌽쥳랩\u0CD9 e)
    {
      this.OnDown((MouseEventArgs) e);
      this.OnDownExt(e);
      if (e.Handled)
        return;
      if (e.Clicks == 2)
        this.m_DoubleDown.뱃ⵂ濩풾\u265D㑎\uFFFD崯秠\u3363៣\uFFFD掍ᨵ揘\uF837爎ਿ\uFFFDꁰ(e.Button);
      if (e.Clicks != 1)
        return;
      this.m_SingleDown.뱃ⵂ濩풾\u265D㑎\uFFFD崯秠\u3363៣\uFFFD掍ᨵ揘\uF837爎ਿ\uFFFDꁰ(e.Button);
    }

    protected virtual void ProcessUp(
      ref 棿䠚㗉\u08BF\uEA2F\u33C3텬힉\uFFFD唋傕\uF1F6擦푳\uE462媇䌽쥳랩\u0CD9 e)
    {
      if (this.m_SingleDown.䠃酺箛ท큿퉝주\u26C4䞻려व㧃ᵆ\u3191먹驺褔ꁠ\u2023閈(e.Button))
      {
        this.OnUp((MouseEventArgs) e);
        this.OnUpExt(e);
        if (e.Handled)
          return;
        this.OnClick((MouseEventArgs) e);
        this.m_SingleDown.\u28AE\uFFFD͊鏘ꉪ\u2593冹\uFFFD㟒\uFFFD㬏ｖ膄嫦欮\uEA9E緝\u000E\u2962ⳝ(e.Button);
      }
      if (!this.m_DoubleDown.䠃酺箛ท큿퉝주\u26C4䞻려व㧃ᵆ\u3191먹驺褔ꁠ\u2023閈(e.Button))
        return;
      e = e.韴瘭붟韎巿瘻䇯鷔ԁ䶳\uF1B1ꭲ皽䠵ᩪ\uF217곫\uFFFD祙桹();
      this.OnUp((MouseEventArgs) e);
      this.OnDoubleClick((MouseEventArgs) e);
      this.m_DoubleDown.\u28AE\uFFFD͊鏘ꉪ\u2593冹\uFFFD㟒\uFFFD㬏ｖ膄嫦欮\uEA9E緝\u000E\u2962ⳝ(e.Button);
    }

    private void ProcessMove(
      ref 棿䠚㗉\u08BF\uEA2F\u33C3텬힉\uFFFD唋傕\uF1F6擦푳\uE462媇䌽쥳랩\u0CD9 e)
    {
      this.m_PreviousPosition = e.Point;
      this.OnMove((MouseEventArgs) e);
      this.OnMoveExt(e);
    }

    private bool HasMoved(졕袃ᗬ礤뽀鷮慫릀羾䙾컓鸵ᨦ턟譖瑍\uFFFD䭳ꪮ\uFFFD actualPoint) => 졕袃ᗬ礤뽀鷮慫릀羾䙾컓鸵ᨦ턟譖瑍\uFFFD䭳ꪮ\uFFFD.\uEDA9젩譑鏇ಞ䂠됰\uFFFD軌繻ꢅꗁ그㜤詉녯褯屮ᾲ遻(this.m_PreviousPosition, actualPoint);

    public event MouseEventHandler MouseMove;

    public event EventHandler<棿䠚㗉\u08BF\uEA2F\u33C3텬힉\uFFFD唋傕\uF1F6擦푳\uE462媇䌽쥳랩\u0CD9> MouseMoveExt;

    public event MouseEventHandler MouseClick;

    public event MouseEventHandler MouseDown;

    public event EventHandler<棿䠚㗉\u08BF\uEA2F\u33C3텬힉\uFFFD唋傕\uF1F6擦푳\uE462媇䌽쥳랩\u0CD9> MouseDownExt;

    public event MouseEventHandler MouseUp;

    public event EventHandler<棿䠚㗉\u08BF\uEA2F\u33C3텬힉\uFFFD唋傕\uF1F6擦푳\uE462媇䌽쥳랩\u0CD9> MouseUpExt;

    public event MouseEventHandler MouseWheel;

    public event MouseEventHandler MouseDoubleClick;

    protected virtual void OnMove(MouseEventArgs e)
    {
      MouseEventHandler mouseMove = this.MouseMove;
      if (mouseMove == null)
        return;
      mouseMove((object) this, e);
    }

    protected virtual void OnMoveExt(
      棿䠚㗉\u08BF\uEA2F\u33C3텬힉\uFFFD唋傕\uF1F6擦푳\uE462媇䌽쥳랩\u0CD9 e)
    {
      EventHandler<棿䠚㗉\u08BF\uEA2F\u33C3텬힉\uFFFD唋傕\uF1F6擦푳\uE462媇䌽쥳랩\u0CD9> mouseMoveExt = this.MouseMoveExt;
      if (mouseMoveExt == null)
        return;
      mouseMoveExt((object) this, e);
    }

    protected virtual void OnClick(MouseEventArgs e)
    {
      MouseEventHandler mouseClick = this.MouseClick;
      if (mouseClick == null)
        return;
      mouseClick((object) this, e);
    }

    protected virtual void OnDown(MouseEventArgs e)
    {
      MouseEventHandler mouseDown = this.MouseDown;
      if (mouseDown == null)
        return;
      mouseDown((object) this, e);
    }

    protected virtual void OnDownExt(
      棿䠚㗉\u08BF\uEA2F\u33C3텬힉\uFFFD唋傕\uF1F6擦푳\uE462媇䌽쥳랩\u0CD9 e)
    {
      EventHandler<棿䠚㗉\u08BF\uEA2F\u33C3텬힉\uFFFD唋傕\uF1F6擦푳\uE462媇䌽쥳랩\u0CD9> mouseDownExt = this.MouseDownExt;
      if (mouseDownExt == null)
        return;
      mouseDownExt((object) this, e);
    }

    protected virtual void OnUp(MouseEventArgs e)
    {
      MouseEventHandler mouseUp = this.MouseUp;
      if (mouseUp == null)
        return;
      mouseUp((object) this, e);
    }

    protected virtual void OnUpExt(
      棿䠚㗉\u08BF\uEA2F\u33C3텬힉\uFFFD唋傕\uF1F6擦푳\uE462媇䌽쥳랩\u0CD9 e)
    {
      EventHandler<棿䠚㗉\u08BF\uEA2F\u33C3텬힉\uFFFD唋傕\uF1F6擦푳\uE462媇䌽쥳랩\u0CD9> mouseUpExt = this.MouseUpExt;
      if (mouseUpExt == null)
        return;
      mouseUpExt((object) this, e);
    }

    protected virtual void OnWheel(MouseEventArgs e)
    {
      MouseEventHandler mouseWheel = this.MouseWheel;
      if (mouseWheel == null)
        return;
      mouseWheel((object) this, e);
    }

    protected virtual void OnDoubleClick(MouseEventArgs e)
    {
      MouseEventHandler mouseDoubleClick = this.MouseDoubleClick;
      if (mouseDoubleClick == null)
        return;
      mouseDoubleClick((object) this, e);
    }
  }
}
