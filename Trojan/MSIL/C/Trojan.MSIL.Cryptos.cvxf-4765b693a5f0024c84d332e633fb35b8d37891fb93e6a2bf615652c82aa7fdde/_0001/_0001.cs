// Decompiled with JetBrains decompiler
// Type: .
// Assembly: file, Version=0.0.0.0, Culture=neutral, PublicKeyToken=72ec7481cfa903fe
// MVID: 17BB4BA8-04F1-4383-A3D1-FFAF516C79D3
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan.MSIL.Cryptos.cvxf-4765b693a5f0024c84d332e633fb35b8d37891fb93e6a2bf615652c82aa7fdde.exe

using System;
using System.Diagnostics;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace \u0001
{
  internal sealed class \u0001
  {
    private static \u0001.\u0001 \u0001;
    private long \u0001 = DateTime.Now.Ticks;

    [DllImport("kernel32", EntryPoint = "SetProcessWorkingSetSize")]
    private static extern int \u0002(
      IntPtr process,
      int minimumWorkingSetSize,
      int maximumWorkingSetSize);

    private void \u0002()
    {
      try
      {
        using (Process currentProcess = Process.GetCurrentProcess())
        {
          if (false)
            return;
          \u0001.\u0001.\u0002(currentProcess.Handle, -1, -1);
        }
      }
      catch
      {
      }
    }

    private void \u0002(object sender, EventArgs e)
    {
      try
      {
        long num1 = DateTime.Now.Ticks;
        long num2;
        long num3;
        while (true)
        {
          if (true)
            num2 = num1;
          num3 = num2 - this.\u0001;
          if (false)
            num1 = num3;
          else
            break;
        }
        if (num3 <= 10000000L)
          return;
        this.\u0001 = num2;
        this.\u0002();
      }
      catch
      {
      }
    }

    private \u0001()
    {
      Application.Idle += new EventHandler(this.\u0002);
      this.\u0002();
    }

    public static void \u0003()
    {
      try
      {
        if (Environment.OSVersion.Platform != PlatformID.Win32NT)
          return;
        \u0001.\u0001.\u0001 = new \u0001.\u0001();
      }
      catch
      {
      }
    }
  }
}
