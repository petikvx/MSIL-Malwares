// Decompiled with JetBrains decompiler
// Type: IAssemblyN.FileStreamAsyncRes
// Assembly: DictionaryValueCollect, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 264A7E74-FCA9-4101-A215-90F8B6150D1A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan.MSIL.Crypt.hzzu-0a11971438302748e2f40e97f73af5e24c71212b30c9d6a5aff7ff102e662c94.exe

using ICompa;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace IAssemblyN
{
  internal class FileStreamAsyncRes
  {
    public List<SymbolTo> GetSavedUsers()
    {
label_1:
      int num1 = -1819662703;
      List<SymbolTo> savedUsers;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -790553425)) % 5U)
        {
          case 0:
            savedUsers = (List<SymbolTo>) null;
            num1 = (int) num2 * 653382023 ^ 1099980367;
            continue;
          case 2:
            num1 = (int) num2 * -1765486176 ^ -1640328801;
            continue;
          case 3:
            goto label_1;
          case 4:
            List<SymbolTo> symbolToList = new List<SymbolTo>();
            num1 = (int) num2 * -1942591843 ^ -2092715862;
            continue;
          default:
            goto label_6;
        }
      }
label_6:
      return savedUsers;
    }

    public void WriteUsersJSON(List<SymbolTo> Users)
    {
    }

    public SymbolTo GetUserById(int Id)
    {
      List<SymbolTo>.Enumerator enumerator = this.GetSavedUsers().GetEnumerator();
      SymbolTo userById;
      try
      {
label_8:
        int num1 = enumerator.MoveNext() ? 594784763 : (num1 = 2114061377);
        SymbolTo current;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1447133476)) % 8U)
          {
            case 0:
              goto label_8;
            case 1:
              flag = FileStreamAsyncRes.\u200E‬⁯⁬‫⁯‭‮‍‫⁪‌⁪‏‍‎‌⁫⁫‎‮‫‭‍⁪‌‫‏​⁫⁭‫⁬⁬​‫⁯‬‌⁪‮(current.Id, Id.ToString());
              num1 = (int) num2 * -1195441459 ^ -1011384061;
              continue;
            case 2:
              int num3 = flag ? -677021428 : (num3 = -218829246);
              num1 = num3 ^ (int) num2 * 751884875;
              continue;
            case 3:
              goto label_18;
            case 4:
              num1 = 594784763;
              continue;
            case 6:
              userById = current;
              num1 = (int) num2 * 1495728259 ^ -1128718139;
              continue;
            case 7:
              current = enumerator.Current;
              num1 = 1944204109;
              continue;
            default:
              goto label_14;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_10:
        int num4 = 830858328;
        while (true)
        {
          uint num5;
          switch ((num5 = (uint) (num4 ^ 1447133476)) % 3U)
          {
            case 0:
              goto label_10;
            case 2:
              num4 = (int) num5 * 801797725 ^ 46721301;
              continue;
            default:
              goto label_13;
          }
        }
label_13:;
      }
label_14:
      userById = (SymbolTo) null;
label_15:
      int num6 = 1003699813;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ 1447133476)) % 3U)
        {
          case 0:
            goto label_15;
          case 1:
            num6 = (int) num7 * -1991321461 ^ 1320692281;
            continue;
          default:
            goto label_18;
        }
      }
label_18:
      return userById;
    }

    public void Update(SymbolTo User)
    {
      List<SymbolTo> savedUsers = this.GetSavedUsers();
label_1:
      int num1 = 771430857;
      int index;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 88356926)) % 9U)
        {
          case 0:
            ++index;
            num1 = 1148042482;
            continue;
          case 1:
            index = 0;
            num1 = (int) num2 * -619603703 ^ 2080795741;
            continue;
          case 2:
            int num3;
            num1 = num3 = FileStreamAsyncRes.\u200E‬⁯⁬‫⁯‭‮‍‫⁪‌⁪‏‍‎‌⁫⁫‎‮‫‭‍⁪‌‫‏​⁫⁭‫⁬⁬​‫⁯‬‌⁪‮(savedUsers[index].Id, User.Id) ? 1493004166 : (num3 = 1068535641);
            continue;
          case 3:
            savedUsers[index] = User;
            num1 = (int) num2 * 1987325364 ^ 480827197;
            continue;
          case 4:
            flag = index < savedUsers.Count;
            num1 = 321269339;
            continue;
          case 5:
            this.WriteUsersJSON(savedUsers);
            num1 = 1225289094;
            continue;
          case 6:
            int num4 = flag ? 1503278493 : (num4 = 822027907);
            num1 = num4 ^ (int) num2 * -1968927610;
            continue;
          case 7:
            goto label_3;
          case 8:
            goto label_1;
          default:
            goto label_11;
        }
      }
label_3:
      return;
label_11:;
    }

    public void Delete(SymbolTo User)
    {
label_1:
      int num1 = -1198739988;
      List<SymbolTo> savedUsers;
      int index;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -299402987)) % 11U)
        {
          case 0:
            flag = index < savedUsers.Count;
            num1 = -1592583693;
            continue;
          case 1:
            ++index;
            num1 = -1924170677;
            continue;
          case 2:
            this.WriteUsersJSON(savedUsers);
            num1 = -938735979;
            continue;
          case 3:
            goto label_1;
          case 4:
            savedUsers.RemoveAt(index);
            num1 = (int) num2 * 598193256 ^ -1935595221;
            continue;
          case 5:
            savedUsers = this.GetSavedUsers();
            index = 0;
            num1 = (int) num2 * -822758457 ^ 948360388;
            continue;
          case 6:
            int num3 = flag ? 265850079 : (num3 = 291929799);
            num1 = num3 ^ (int) num2 * 2721095;
            continue;
          case 7:
            num1 = (int) num2 * 1620783095 ^ 1606236056;
            continue;
          case 8:
            goto label_3;
          case 9:
            num1 = (int) num2 * 1210025054 ^ 1207470025;
            continue;
          case 10:
            int num4;
            num1 = num4 = FileStreamAsyncRes.\u200E‬⁯⁬‫⁯‭‮‍‫⁪‌⁪‏‍‎‌⁫⁫‎‮‫‭‍⁪‌‫‏​⁫⁭‫⁬⁬​‫⁯‬‌⁪‮(savedUsers[index].Id, User.Id) ? -1523014290 : (num4 = -1851444831);
            continue;
          default:
            goto label_13;
        }
      }
label_3:
      return;
label_13:;
    }

    static bool \u200E‬⁯⁬‫⁯‭‮‍‫⁪‌⁪‏‍‎‌⁫⁫‎‮‫‭‍⁪‌‫‏​⁫⁭‫⁬⁬​‫⁯‬‌⁪‮([In] string obj0, [In] string obj1) => obj0 == obj1;
  }
}
