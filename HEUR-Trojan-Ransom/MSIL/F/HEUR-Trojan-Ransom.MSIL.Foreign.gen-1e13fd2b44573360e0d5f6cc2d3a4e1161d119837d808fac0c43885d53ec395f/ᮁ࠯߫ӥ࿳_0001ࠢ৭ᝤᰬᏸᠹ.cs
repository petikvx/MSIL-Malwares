// Decompiled with JetBrains decompiler
// Type: ր֬ᏉṢᡄẼ஗ᱻసҡƬོᒉࢲʗᎎཛྷ.ᮁ࠯߫ӥ࿳ࠢ৭ᝤᰬᏸᠹ
// Assembly: update, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 7E0159D6-932F-4F32-8DCB-751F61B22DA0
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00040-msil\HEUR-Trojan-Ransom.MSIL.Foreign.gen-1e13fd2b44573360e0d5f6cc2d3a4e1161d119837d808fac0c43885d53ec395f.exe

using System;
using System.Runtime.InteropServices;
using ր֬ᏉṢᡄẼ\u0B97ᱻసҡƬོᒉࢲʗᎎཛྷ;

namespace ր֬ᏉṢᡄẼ\u0B97ᱻసҡƬོᒉࢲʗᎎཛྷ
{
  internal class \u1B81\u082F߫ӥ\u0FF3\u0001ࠢ৭ᝤᰬᏸᠹ
  {
    public static string \u0FABӲ᪔ᚂᇁᒤឩږ\u0D98౬ሖᥰ\u1CA2\u0E62ᵒᴺ\u1C87ᤅẘ()
    {
      OperatingSystem osVersion = Environment.OSVersion;
      string str = "";
      if (osVersion.Platform.ToString() == "Win32NT")
      {
        switch (\u1B81\u082F߫ӥ\u0FF3\u0001ࠢ৭ᝤᰬᏸᠹ.تቊ\u0D70\u0F70ȣᙓೇ(osVersion.Version))
        {
          case "4.1.2222":
            str = "Windows 98";
            break;
          case "4.1.2600":
            str = "Windows 98SE";
            break;
          case "4.9.3000":
            str = "Windows ME";
            break;
          case "5.0.2195":
            str = "Windows 2000";
            break;
          case "5.1.2600":
          case "5.2.3790":
            str = "Windows XP";
            break;
          case "6.0.6000":
          case "6.0.6001":
          case "6.0.6002":
          case "6.0.6003":
            str = "Windows Vista";
            break;
          case "6.1.7600":
          case "6.1.7601":
          case "6.1.7602":
          case "6.1.7603":
            str = "Windows 7";
            break;
          default:
            str = "Unknown";
            break;
        }
      }
      string empty = string.Empty;
      \u1B81\u082F߫ӥ\u0FF3\u0001ࠢ৭ᝤᰬᏸᠹ.កᧀ\u0A79֭ೠᠹႴᐴǯ෩ កᧀ֭ೠᠹႴᐴǯ෩ = new \u1B81\u082F߫ӥ\u0FF3\u0001ࠢ৭ᝤᰬᏸᠹ.កᧀ\u0A79֭ೠᠹႴᐴǯ෩();
      កᧀ֭ೠᠹႴᐴǯ෩.Ԟ\u19FFᩫ\u1B7C\u1979ἵ᮴Ἇժڟ = Marshal.SizeOf(typeof (\u1B81\u082F߫ӥ\u0FF3\u0001ࠢ৭ᝤᰬᏸᠹ.កᧀ\u0A79֭ೠᠹႴᐴǯ෩));
      if (\u1B81\u082F߫ӥ\u0FF3\u0001ࠢ৭ᝤᰬᏸᠹ.\u059E៓ᣇࢡ\u19DD\u0F10ӳ\u192F\u05CE(ref កᧀ֭ೠᠹႴᐴǯ෩))
      {
        if (កᧀ֭ೠᠹႴᐴǯ෩.yᢼီᧈឦᡜࢧ\u0ACEᢴឍ.ToString().Contains("Service Pack 1"))
          str += " SP1";
        if (កᧀ֭ೠᠹႴᐴǯ෩.yᢼီᧈឦᡜࢧ\u0ACEᢴឍ.ToString().Contains("Service Pack 2"))
          str += " SP2";
        if (កᧀ֭ೠᠹႴᐴǯ෩.yᢼီᧈឦᡜࢧ\u0ACEᢴឍ.ToString().Contains("Service Pack 3"))
          str += " SP3";
        if (កᧀ֭ೠᠹႴᐴǯ෩.yᢼီᧈឦᡜࢧ\u0ACEᢴឍ.ToString().Contains("Service Pack 4"))
          str += " SP4";
        if (កᧀ֭ೠᠹႴᐴǯ෩.yᢼီᧈឦᡜࢧ\u0ACEᢴឍ.ToString().Contains("Service Pack 5"))
          str += " SP5";
        if (កᧀ֭ೠᠹႴᐴǯ෩.yᢼီᧈឦᡜࢧ\u0ACEᢴឍ.ToString().Contains("Service Pack 6"))
          str += " SP6";
        if (កᧀ֭ೠᠹႴᐴǯ෩.yᢼီᧈឦᡜࢧ\u0ACEᢴឍ.ToString().Contains("Service Pack 7"))
          str += " SP7";
        if (កᧀ֭ೠᠹႴᐴǯ෩.yᢼီᧈឦᡜࢧ\u0ACEᢴឍ.ToString().Contains("Service Pack 8"))
          str += " SP8";
        if (កᧀ֭ೠᠹႴᐴǯ෩.yᢼီᧈឦᡜࢧ\u0ACEᢴឍ.ToString().Contains("Service Pack 9"))
          str += " SP9";
        str = !\u1B81\u082F߫ӥ\u0FF3\u0001ࠢ৭ᝤᰬᏸᠹ.Ꮷ\u0C79ጆ\u08C7ᐠᇬᓣ() ? str + " - x86" : str + " - x64";
      }
      return str;
    }

    private static string تቊ\u0D70\u0F70ȣᙓೇ(Version _param0) => _param0.Major.ToString() + "." + _param0.Minor.ToString() + "." + _param0.Build.ToString();

    [DllImport("kernel32.dll", EntryPoint = "GetVersionEx")]
    private static extern bool \u059E៓ᣇࢡ\u19DD\u0F10ӳ\u192F\u05CE(
      ref \u1B81\u082F߫ӥ\u0FF3\u0001ࠢ৭ᝤᰬᏸᠹ.កᧀ\u0A79֭ೠᠹႴᐴǯ෩ _param0);

    public static bool Ꮷ\u0C79ጆ\u08C7ᐠᇬᓣ()
    {
      try
      {
        return !string.IsNullOrEmpty(Environment.GetEnvironmentVariable("ProgramW6432"));
      }
      catch
      {
        return false;
      }
    }

    public struct កᧀ\u0A79֭ೠᠹႴᐴǯ෩
    {
      public int Ԟ\u19FFᩫ\u1B7C\u1979ἵ᮴Ἇժڟ;
      public int \u0A40Ꮩ\u17ED᱃ᒂ;
      public int ӌကᏀ߰ᥬᦅƯ୍ựގ͘ᙨ\u19DBഫষዀ;
      public int \u09F6્ᢻွᣌ\u08D1ឫም;
      public int Ўᕺྀᗟ\u0D00\u0FDCηថཧᄯᥨϨ;
      [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 128)]
      public string yᢼီᧈឦᡜࢧ\u0ACEᢴឍ;
      public short \u0C7A\u0DF6ᅶᬆࠧିܮ᭔ᔓ\u09F3ᕷ\u0B74ᬍऑ\u19CE;
      public short \u12B1ɋᴃៈᢗͶṅ\u0A53Ἷ\u000EṄၪẏ;
      public short Ҫચᴬ\u17FF\u0965ṉᶥ߰ཨ;
      public byte \u0A00ᵓดýੂേ;
      public byte Ⴖᴘ֡ᔵ\u0883\u1AF0ἅᵩः\u0EF1ܣᬇ࠘\u0C3B;
    }
  }
}
