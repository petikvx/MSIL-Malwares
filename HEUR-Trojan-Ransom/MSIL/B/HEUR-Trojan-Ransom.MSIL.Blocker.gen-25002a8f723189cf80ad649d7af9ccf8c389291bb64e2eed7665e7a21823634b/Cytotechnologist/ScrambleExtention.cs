// Decompiled with JetBrains decompiler
// Type: Cytotechnologist.ScrambleExtention
// Assembly: Eviden, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 0FBAEA8D-82D6-42CE-BC01-F979DED3F8E4
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-25002a8f723189cf80ad649d7af9ccf8c389291bb64e2eed7665e7a21823634b.exe

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Cytotechnologist
{
  public static class ScrambleExtention
  {
    private static readonly Random Random = ScrambleExtention.\u200E⁮‪‪⁯‫‌⁯​⁭‮‪‮‏‮‮‮⁪⁪‬⁮‮⁬‭‎‌⁮⁪‏‪⁪⁭‭‮‏​‍‏‫⁬‮();

    public static void Shuffle<T>(IList<T> list)
    {
label_1:
      int num1 = -1053336770;
      int count;
      bool flag;
      T obj;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1264588376)) % 12U)
        {
          case 0:
            list[count] = obj;
            num1 = (int) num2 * 2004488265 ^ -1533519051;
            continue;
          case 1:
            num1 = (int) num2 * 105330787 ^ 1942046675;
            continue;
          case 2:
            num1 = (int) num2 * 1804977543 ^ 500062624;
            continue;
          case 3:
            goto label_1;
          case 4:
            goto label_3;
          case 5:
            int index = ScrambleExtention.\u200E‮⁭‏‭⁬‍⁫⁬‬‪‬‬⁫⁫‮‌‭‍‪‍‌‮⁪‍⁫⁪⁯⁭‫​‭⁫‬⁬⁫⁫‮‏‏‮(ScrambleExtention.Random, count + 1);
            obj = list[index];
            list[index] = list[count];
            num1 = (int) num2 * -2074151311 ^ 1603459144;
            continue;
          case 6:
            flag = count > 1;
            num1 = -4937073;
            continue;
          case 7:
            num1 = -988509184;
            continue;
          case 8:
            --count;
            num1 = (int) num2 * 32187716 ^ -118169839;
            continue;
          case 9:
            num1 = (int) num2 * -669628647 ^ -1032053485;
            continue;
          case 10:
            count = list.Count;
            num1 = (int) num2 * 1070695883 ^ 1660878864;
            continue;
          case 11:
            int num3 = flag ? 1749151680 : (num3 = 453666843);
            num1 = num3 ^ (int) num2 * 1925621461;
            continue;
          default:
            goto label_14;
        }
      }
label_3:
      return;
label_14:;
    }

    static int \u200E‮⁭‏‭⁬‍⁫⁬‬‪‬‬⁫⁫‮‌‭‍‪‍‌‮⁪‍⁫⁪⁯⁭‫​‭⁫‬⁬⁫⁫‮‏‏‮([In] Random obj0, [In] int obj1) => obj0.Next(obj1);

    static Random \u200E⁮‪‪⁯‫‌⁯​⁭‮‪‮‏‮‮‮⁪⁪‬⁮‮⁬‭‎‌⁮⁪‏‪⁪⁭‭‮‏​‍‏‫⁬‮() => new Random();
  }
}
