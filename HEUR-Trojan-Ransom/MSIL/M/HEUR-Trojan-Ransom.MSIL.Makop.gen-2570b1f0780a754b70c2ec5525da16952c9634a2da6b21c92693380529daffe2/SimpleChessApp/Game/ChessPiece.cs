// Decompiled with JetBrains decompiler
// Type: SimpleChessApp.Game.ChessPiece
// Assembly: 生ث, Version=2.159.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E8221468-4DC3-4423-BEC3-5B04CD1AB276
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.01-msil\HEUR-Trojan-Ransom.MSIL.Makop.gen-2570b1f0780a754b70c2ec5525da16952c9634a2da6b21c92693380529daffe2.exe

using System.Runtime.InteropServices;

namespace SimpleChessApp.Game
{
  public class ChessPiece
  {
    public int Id;
    public Pieces Kind;
    public PieceColor Color;
    public Square Home;
    public bool Passant;
    public Square Current;
    private static int idd = 0;

    public ChessPiece(Square h, Pieces p, PieceColor c)
    {
label_1:
      int num1 = 1130189956;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 726879575)) % 5U)
        {
          case 0:
            this.Id = ChessPiece.idd++;
            this.Kind = p;
            this.Color = c;
            num1 = (int) num2 * 2045672769 ^ 658918856;
            continue;
          case 1:
            goto label_3;
          case 2:
            goto label_1;
          case 3:
            this.Current = this.Home = h;
            num1 = (int) num2 * 936852283 ^ -1201276443;
            continue;
          case 4:
            num1 = (int) num2 * 226004163 ^ -354286515;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public ChessPiece(Pieces p, PieceColor c)
    {
label_1:
      int num1 = -1160618374;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1273174789)) % 6U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -868577657 ^ 312114856;
            continue;
          case 2:
            goto label_3;
          case 3:
            this.Kind = p;
            this.Color = c;
            num1 = (int) num2 * 1586361234 ^ -1288262579;
            continue;
          case 4:
            num1 = (int) num2 * -200035213 ^ -1535043862;
            continue;
          case 5:
            this.Id = ChessPiece.idd++;
            num1 = (int) num2 * 2145055794 ^ 532029360;
            continue;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    public string SpecialName => ChessPiece.\u202A⁬‌‮‪‬​⁯‪​⁫⁭⁬‪‭⁬‫⁬​‍⁬⁪‫‪‪‪‭‎‪‫‫‬‫‮‎‭‍⁮⁭⁬‮(\u003CModule\u003E.\u200E‏‪‮‫‌‮⁭⁬⁯⁯‌‪​⁭‌⁬‍⁮‏‬⁫​⁬⁬​​‎‮‪‎‏‫​‪⁮​‭‫‬‮<string>(2585799024U), (object) this.Current.Name, (object) this.Kind);

    static string \u202A⁬‌‮‪‬​⁯‪​⁫⁭⁬‪‭⁬‫⁬​‍⁬⁪‫‪‪‪‭‎‪‫‫‬‫‮‎‭‍⁮⁭⁬‮(
      [In] string obj0,
      [In] object obj1,
      [In] object obj2)
    {
      return string.Format(obj0, obj1, obj2);
    }
  }
}
