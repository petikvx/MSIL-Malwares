// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONData
// Assembly: CriticalHand, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 8F3AACC8-AAA3-4E3C-B88D-04522F6F341D
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-894cebc6da151cbe64ab4094b2e779f433dc0865ba1cff8063747ca407454629.exe

using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONData : JSONNode
  {
    private string m_Data;

    public override string Value
    {
      get
      {
        string data = this.m_Data;
label_1:
        int num1 = 611169317;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 217616834)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 1702012186 ^ 1691090168;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return data;
      }
      set => this.m_Data = value;
    }

    public JSONData(string aData) => this.m_Data = aData;

    public JSONData(float aData)
    {
label_1:
      int num1 = 361301747;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1851911949)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * 1309573486 ^ -371214644;
            continue;
          case 3:
            this.AsFloat = aData;
            num1 = (int) num2 * -557114273 ^ 1399657132;
            continue;
          case 4:
            num1 = (int) num2 * 1973783966 ^ 282168138;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public JSONData(double aData)
    {
label_1:
      int num1 = 1274840765;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 944735165)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * 1987138920 ^ -1179242787;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      this.AsDouble = aData;
    }

    public JSONData(bool aData) => this.AsBool = aData;

    public JSONData(int aData)
    {
label_1:
      int num1 = 2107700333;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1355867569)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            this.AsInt = aData;
            num1 = (int) num2 * 1247957201 ^ -62825925;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public override string ToString()
    {
      string str = JSONData.\u200C⁬⁭‫‭​‏​⁮⁬⁪⁯⁪⁬⁬‏‏‪‌‮‏‬‌⁪​⁮‏‌‬⁬‌‪⁮‎⁫⁬‫‫​‬‮("\"", JSONNode.Escape(this.m_Data), "\"");
label_1:
      int num1 = 625322754;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 208434816)) % 3U)
        {
          case 1:
            num1 = (int) num2 * 1007931961 ^ 1649951326;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 262847746;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 660409707)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            str = JSONData.\u200C⁬⁭‫‭​‏​⁮⁬⁪⁯⁪⁬⁬‏‏‪‌‮‏‬‌⁪​⁮‏‌‬⁬‌‪⁮‎⁫⁬‫‫​‬‮("\"", JSONNode.Escape(this.m_Data), "\"");
            num1 = (int) num2 * -929654319 ^ -439125652;
            continue;
          case 2:
            num1 = (int) num2 * -1401052106 ^ 1232460620;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
      JSONData jsonData = new JSONData("");
label_1:
      int num1 = -1092454512;
      bool flag1;
      bool flag2;
      bool flag3;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1259684946)) % 36U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 481569986 ^ 355176765;
            continue;
          case 2:
            int num3 = !flag3 ? 396730988 : (num3 = 1276949915);
            num1 = num3 ^ (int) num2 * 1450244169;
            continue;
          case 3:
            num1 = (int) num2 * 2012346153 ^ 1247844924;
            continue;
          case 4:
            num1 = (int) num2 * 2139389839 ^ -1710860429;
            continue;
          case 5:
            int num4 = !JSONData.\u202A‫‫⁫‏‍⁮‪⁭⁭⁭⁯⁭‬‏‎⁭‎‭⁭‪‪‌‬‭⁮‌‬​‬‭‎⁭⁮‎‏⁯​⁫‎‮(jsonData.m_Data, this.m_Data) ? 1255965310 : (num4 = 504737997);
            num1 = num4 ^ (int) num2 * 2076961860;
            continue;
          case 6:
            num1 = (int) num2 * 416499858 ^ -1185781909;
            continue;
          case 7:
            flag3 = JSONData.\u202A‫‫⁫‏‍⁮‪⁭⁭⁭⁯⁭‬‏‎⁭‎‭⁭‪‪‌‬‭⁮‌‬​‬‭‎⁭⁮‎‏⁯​⁫‎‮(jsonData.m_Data, this.m_Data);
            num1 = (int) num2 * -1515313913 ^ -1029971531;
            continue;
          case 8:
            num1 = (int) num2 * 1727060457 ^ 1468898377;
            continue;
          case 9:
            JSONData.\u202D⁫‏‍‫⁪⁭⁪⁪⁮‍⁮⁭‏⁯‎⁪‎⁭⁬‫⁪‫​‭⁪‍‮⁯⁯​‮‮‏⁯‍‏‬‭‫‮(aWriter, this.AsDouble);
            num1 = (int) num2 * -1032133352 ^ 1776823504;
            continue;
          case 10:
            num1 = (int) num2 * 727647031 ^ -822987943;
            continue;
          case 11:
            num1 = (int) num2 * -1713361295 ^ 342030578;
            continue;
          case 12:
            num1 = (int) num2 * 774100499 ^ 1938817883;
            continue;
          case 13:
            JSONData.\u200F‍⁬‮‫‏‏‌‍‪‌‌‎‏⁯‍‮​⁫‬⁬‏‏⁮⁮⁫​⁫‌⁮‮‌‮⁮‍​⁮⁯‍‬‮(aWriter, (byte) 5);
            num1 = (int) num2 * -1510122079 ^ 1913603345;
            continue;
          case 14:
            flag2 = JSONData.\u202A‫‫⁫‏‍⁮‪⁭⁭⁭⁯⁭‬‏‎⁭‎‭⁭‪‪‌‬‭⁮‌‬​‬‭‎⁭⁮‎‏⁯​⁫‎‮(jsonData.m_Data, this.m_Data);
            num1 = (int) num2 * -974204822 ^ -1785507340;
            continue;
          case 15:
            JSONData.\u200F‍⁬‮‫‏‏‌‍‪‌‌‎‏⁯‍‮​⁫‬⁬‏‏⁮⁮⁫​⁫‌⁮‮‌‮⁮‍​⁮⁯‍‬‮(aWriter, (byte) 7);
            num1 = (int) num2 * 1085778810 ^ -1639036229;
            continue;
          case 16:
            jsonData.AsDouble = this.AsDouble;
            num1 = -1005170732;
            continue;
          case 17:
            JSONData.\u206C‮⁭‭‮⁬‭⁬‬‪‫​‪⁫‮⁪‏⁬‎⁬‍‪⁬⁯‏‎⁮‮‏‍⁪‎‪‍⁮⁬⁪‮⁫‍‮(aWriter, this.AsInt);
            num1 = (int) num2 * 640861173 ^ 1342543263;
            continue;
          case 18:
            int num5 = flag2 ? -1696119052 : (num5 = -518677605);
            num1 = num5 ^ (int) num2 * 169519694;
            continue;
          case 19:
            JSONData.\u200F‍⁬‮‫‏‏‌‍‪‌‌‎‏⁯‍‮​⁫‬⁬‏‏⁮⁮⁫​⁫‌⁮‮‌‮⁮‍​⁮⁯‍‬‮(aWriter, (byte) 6);
            num1 = (int) num2 * -1123755860 ^ -345079398;
            continue;
          case 20:
            jsonData.AsBool = this.AsBool;
            num1 = -1812417851;
            continue;
          case 21:
            JSONData.\u200F‍⁬‮‫‏‏‌‍‪‌‌‎‏⁯‍‮​⁫‬⁬‏‏⁮⁮⁫​⁫‌⁮‮‌‮⁮‍​⁮⁯‍‬‮(aWriter, (byte) 3);
            num1 = -1657231746;
            continue;
          case 22:
            num1 = (int) num2 * 1844783271 ^ -45988775;
            continue;
          case 23:
            flag1 = JSONData.\u202A‫‫⁫‏‍⁮‪⁭⁭⁭⁯⁭‬‏‎⁭‎‭⁭‪‪‌‬‭⁮‌‬​‬‭‎⁭⁮‎‏⁯​⁫‎‮(jsonData.m_Data, this.m_Data);
            num1 = (int) num2 * 143238172 ^ -534063755;
            continue;
          case 24:
            num1 = (int) num2 * -59313610 ^ 1592412356;
            continue;
          case 25:
            num1 = (int) num2 * 1787338658 ^ 1271752381;
            continue;
          case 26:
            jsonData.AsInt = this.AsInt;
            num1 = (int) num2 * -1437760170 ^ 296269930;
            continue;
          case 27:
            int num6 = flag1 ? -1170048314 : (num6 = -1304719524);
            num1 = num6 ^ (int) num2 * 102519865;
            continue;
          case 28:
            JSONData.\u202A‌⁫‭⁭‎‍‫‏⁯‭⁬‫‏​‏‬‬⁪‫⁭‪​⁬⁭⁯⁬⁭‭‍‭⁬⁯‌‭‎‎‏‪‮(aWriter, this.AsBool);
            num1 = (int) num2 * -1698039564 ^ 1785171299;
            continue;
          case 29:
            jsonData.AsFloat = this.AsFloat;
            num1 = -641934687;
            continue;
          case 30:
            num1 = (int) num2 * -909257822 ^ 923063135;
            continue;
          case 31:
            JSONData.\u200F‪‍⁪‭‪‌⁯‭⁪⁫⁪⁯​‬‍‎⁬​⁬⁬‍‬‪⁬⁬‪⁫⁫⁯⁯‌⁪​⁭⁪‭‭⁪‍‮(aWriter, this.m_Data);
            num1 = (int) num2 * 1033906501 ^ 640044721;
            continue;
          case 32:
            num1 = (int) num2 * 566459961 ^ -549158676;
            continue;
          case 33:
            goto label_3;
          case 34:
            JSONData.\u200F‍⁬‮‫‏‏‌‍‪‌‌‎‏⁯‍‮​⁫‬⁬‏‏⁮⁮⁫​⁫‌⁮‮‌‮⁮‍​⁮⁯‍‬‮(aWriter, (byte) 4);
            num1 = (int) num2 * -926087645 ^ 1361378193;
            continue;
          case 35:
            JSONData.\u200C‭⁭‮‬⁬⁭⁬‫‮⁭‏‬‮⁮‪​‭⁬‌⁯⁭⁭‏⁪⁯⁫‍⁮‬‎⁮⁮⁯‎‮‏‍​⁮‮(aWriter, this.AsFloat);
            num1 = (int) num2 * -1585839668 ^ -1256244610;
            continue;
          default:
            goto label_38;
        }
      }
label_3:
      return;
label_38:;
    }

    static string \u200C⁬⁭‫‭​‏​⁮⁬⁪⁯⁪⁬⁬‏‏‪‌‮‏‬‌⁪​⁮‏‌‬⁬‌‪⁮‎⁫⁬‫‫​‬‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2)
    {
      return obj0 + obj1 + obj2;
    }

    static bool \u202A‫‫⁫‏‍⁮‪⁭⁭⁭⁯⁭‬‏‎⁭‎‭⁭‪‪‌‬‭⁮‌‬​‬‭‎⁭⁮‎‏⁯​⁫‎‮([In] string obj0, [In] string obj1) => obj0 == obj1;

    static void \u200F‍⁬‮‫‏‏‌‍‪‌‌‎‏⁯‍‮​⁫‬⁬‏‏⁮⁮⁫​⁫‌⁮‮‌‮⁮‍​⁮⁯‍‬‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u206C‮⁭‭‮⁬‭⁬‬‪‫​‪⁫‮⁪‏⁬‎⁬‍‪⁬⁯‏‎⁮‮‏‍⁪‎‪‍⁮⁬⁪‮⁫‍‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u200C‭⁭‮‬⁬⁭⁬‫‮⁭‏‬‮⁮‪​‭⁬‌⁯⁭⁭‏⁪⁯⁫‍⁮‬‎⁮⁮⁯‎‮‏‍​⁮‮([In] BinaryWriter obj0, [In] float obj1) => obj0.Write(obj1);

    static void \u202D⁫‏‍‫⁪⁭⁪⁪⁮‍⁮⁭‏⁯‎⁪‎⁭⁬‫⁪‫​‭⁪‍‮⁯⁯​‮‮‏⁯‍‏‬‭‫‮([In] BinaryWriter obj0, [In] double obj1) => obj0.Write(obj1);

    static void \u202A‌⁫‭⁭‎‍‫‏⁯‭⁬‫‏​‏‬‬⁪‫⁭‪​⁬⁭⁯⁬⁭‭‍‭⁬⁯‌‭‎‎‏‪‮([In] BinaryWriter obj0, [In] bool obj1) => obj0.Write(obj1);

    static void \u200F‪‍⁪‭‪‌⁯‭⁪⁫⁪⁯​‬‍‎⁬​⁬⁬‍‬‪⁬⁬‪⁫⁫⁯⁯‌⁪​⁭⁪‭‭⁪‍‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
