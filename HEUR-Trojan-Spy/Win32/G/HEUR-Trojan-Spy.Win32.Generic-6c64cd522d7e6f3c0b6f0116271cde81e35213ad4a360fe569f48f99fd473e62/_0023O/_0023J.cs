// Decompiled with JetBrains decompiler
// Type: #O.#J
// Assembly: qouzb, Version=0.0.0.0, Culture=neutral, PublicKeyToken=34256fcd934ca661
// MVID: 528C9DDA-94F5-4688-B6FB-056FFA07C362
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-Spy.Win32.Generic-6c64cd522d7e6f3c0b6f0116271cde81e35213ad4a360fe569f48f99fd473e62.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security;

namespace \u0023O
{
  [StandardModule]
  internal sealed class \u0023J
  {
    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static \u0023u \u0023Q<\u0023u>([In] string obj0, [In] string obj1)
    {
      try
      {
        return (\u0023u) Marshal.GetDelegateForFunctionPointer(\u0023\u0023.\u0023Oi(\u0023\u0023.\u0023Yk(ref obj0), obj1), typeof (\u0023u));
      }
      catch (Exception ex)
      {
        \u0023u u;
        // ISSUE: variable of a boxed type
        __Boxed<\u0023u> local = (object) u;
        string str1 = obj0;
        string str2 = obj1;
        \u0023\u0023.\u0023Dj(ex, (object) local, (object) str1, (object) str2);
        throw;
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    static \u0023J()
    {
      int num1 = 4;
      while (true)
      {
        int num2 = num1;
        Assembly executingAssembly;
        bool flag;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 4:
              flag = false;
              if (true)
              {
                num2 = 2;
                continue;
              }
              goto case 1;
            case 1:
              if (!\u0023\u0023.\u0023ak(executingAssembly.Location, true, out flag) || !flag)
                goto label_10;
              else
                goto case 3;
            case 2:
              executingAssembly = Assembly.GetExecutingAssembly();
              num2 = 1;
              continue;
            case 3:
            case 5:
              if (executingAssembly.FullName.EndsWith("34256fcd934ca661"))
              {
                num2 = 6;
                continue;
              }
              goto label_10;
            case 6:
              goto label_9;
            default:
              goto label_8;
          }
        }
label_8:
        num1 = 5;
      }
label_9:
      return;
label_10:
      throw new SecurityException("Assembly has been tampered");
    }

    internal static bool zX5JO1Ws89x7mbn5Ws() => true;

    internal static bool a8O51EoP3v0rkDKBxe() => false;
  }
}
