// Decompiled with JetBrains decompiler
// Type: mmxAH.Effect
// Assembly: IAsyncLocalValue, Version=1.0.2.2, Culture=neutral, PublicKeyToken=null
// MVID: 5C4F3FBF-C751-4B18-BBEA-B1DDBC6F76B9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan-Spy.Win32.Noon.bcqk-374874898c5386561d60c3fae0482d1caee783f1096dda6742b1c073175a0a14.exe

namespace mmxAH
{
  public abstract class Effect
  {
    protected GameEngine en;
    protected Func rp;
    protected byte invnum;

    public Effect(GameEngine eng) => this.en = eng;

    public virtual void Execute(Func f, byte pInvNum = 40)
    {
      this.rp = f;
      if (pInvNum == (byte) 40)
        this.invnum = this.en.clock.GetCurPlayer();
      else
        this.invnum = pInvNum;
    }

    protected virtual bool ReadFromTextIndivid(TextFileParser data) => true;

    public static Effect FromTextFile(TextFileParser data, GameEngine eng)
    {
      Effect effect;
      switch (data.GetToken().ToUpper())
      {
        case "LITAS":
          effect = (Effect) new EffLitas(eng);
          break;
        case "MONSTER":
          effect = (Effect) new EffMonsterApears(eng);
          break;
        case "MOVEROLL":
          effect = (Effect) new EffMonsterMoveRoll(eng);
          break;
        case "NO":
          effect = (Effect) new EffNothing(eng);
          break;
        case "SANLOSE":
          effect = (Effect) new EffSanityLose(eng);
          break;
        case "STALOSE":
          effect = (Effect) new EffStaminaLose(eng);
          break;
        case "TONEARGATE":
          effect = (Effect) new EffToNearGate(eng);
          break;
        case "TONEARINVEST":
          effect = (Effect) new EffToNearInvest(eng);
          break;
        default:
          return (Effect) null;
      }
      return !effect.ReadFromTextIndivid(data) ? (Effect) null : effect;
    }
  }
}
