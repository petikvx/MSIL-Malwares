// Decompiled with JetBrains decompiler
// Type: SimpleChessApp.Game.ChessPiece
// Assembly: q是, Version=2.159.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 2A217F07-6E26-47B2-8CBC-BCC0D26AE04B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.01-msil\HEUR-Trojan-Ransom.MSIL.Makop.gen-566554b534a53102dd67fc20bd07ca49241b51616d73619e383e80bdfc4fe08a.exe

using System.Runtime.InteropServices;

namespace SimpleChessApp.Game
{
  public class ChessPiece
  {
    public int Id;
    public Pieces Kind;
    public PieceColor Color;
    public Square Home;
    public bool Passant;
    public Square Current;
    private static int idd = 0;

    public ChessPiece(Square h, Pieces p, PieceColor c)
    {
label_1:
      int num1 = 552774423;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 795506742)) % 8U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -221163490 ^ 1162369540;
            continue;
          case 2:
            goto label_3;
          case 3:
            this.Color = c;
            num1 = (int) num2 * 1916682494 ^ -111740775;
            continue;
          case 4:
            num1 = (int) num2 * 1641419168 ^ -854709687;
            continue;
          case 5:
            this.Current = this.Home = h;
            num1 = (int) num2 * 1716029929 ^ -1137296031;
            continue;
          case 6:
            this.Kind = p;
            num1 = (int) num2 * -1493179364 ^ -1017194883;
            continue;
          case 7:
            this.Id = ChessPiece.idd++;
            num1 = (int) num2 * -1750935353 ^ 691870705;
            continue;
          default:
            goto label_10;
        }
      }
label_3:
      return;
label_10:;
    }

    public ChessPiece(Pieces p, PieceColor c)
    {
      this.Id = ChessPiece.idd++;
      this.Kind = p;
      this.Color = c;
    }

    public string SpecialName
    {
      get
      {
label_1:
        int num1 = -513607999;
        string specialName;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -195284417)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              specialName = ChessPiece.\u202D‍‍‏‫⁬‫‌‍‭‎‌⁫‫‫⁬‌⁭‌‪‌⁫‌‌⁬⁯‍​⁬​‪⁭⁯⁬⁭⁮⁭‍‌‬‮(\u003CModule\u003E.\u206E‌⁪⁫‏‭⁪⁫⁭‭‫⁬⁯‮‫‏‮‌⁫‫‍⁫‏‪‌⁯⁭⁬⁮‏‍‍⁮‪​‏⁫‬‍‮<string>(3667227211U), (object) this.Current.Name, (object) this.Kind);
              num1 = (int) num2 * -1021102248 ^ -541347888;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return specialName;
      }
    }

    static string \u202D‍‍‏‫⁬‫‌‍‭‎‌⁫‫‫⁬‌⁭‌‪‌⁫‌‌⁬⁯‍​⁬​‪⁭⁯⁬⁭⁮⁭‍‌‬‮(
      [In] string obj0,
      [In] object obj1,
      [In] object obj2)
    {
      return string.Format(obj0, obj1, obj2);
    }
  }
}
