// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONLazyCreator
// Assembly: ClaimTyp, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 6CD146E8-0143-4099-A2FD-F452B55D5FF5
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-200a5cb8bf6489144c66e3b85eaeec5327dc66321001f4c0fda42840d0f230ec.exe

namespace SimpleJSON
{
  internal class JSONLazyCreator : JSONNode
  {
    private JSONNode m_Node = (JSONNode) null;
    private string m_Key = (string) null;

    public JSONLazyCreator(JSONNode aNode)
    {
label_1:
      int num1 = 1960899729;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1866155941)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -257460028 ^ 1363098832;
            continue;
          case 2:
            num1 = (int) num2 * -490622231 ^ 1003037156;
            continue;
          case 4:
            this.m_Node = aNode;
            num1 = (int) num2 * -670311064 ^ -935567551;
            continue;
          default:
            goto label_6;
        }
      }
label_6:
      this.m_Key = (string) null;
    }

    public JSONLazyCreator(JSONNode aNode, string aKey)
    {
      this.m_Node = aNode;
      this.m_Key = aKey;
    }

    private void Set(JSONNode aVal)
    {
      if (this.m_Key != null)
        goto label_6;
label_1:
      int num1 = 657955982;
label_2:
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 193849452)) % 6U)
        {
          case 0:
            goto label_1;
          case 1:
            this.m_Node.Add(aVal);
            num1 = (int) num2 * -261309540 ^ 1086392065;
            continue;
          case 2:
            num1 = (int) num2 * -626085178 ^ 510748207;
            continue;
          case 3:
            goto label_6;
          case 4:
            this.m_Node.Add(this.m_Key, aVal);
            num1 = (int) num2 * -1901557826 ^ -943571859;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      this.m_Node = (JSONNode) null;
      return;
label_6:
      num1 = 897562800;
      goto label_2;
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 2002917629;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 193681380)) % 4U)
          {
            case 1:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * -875999912 ^ 787938370;
              continue;
            case 2:
              num1 = (int) num2 * 1847241930 ^ 1494477140;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 1813287669;
        JSONArray aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2077391274)) % 6U)
          {
            case 0:
              num1 = (int) num2 * -248982639 ^ -1403228370;
              continue;
            case 1:
              goto label_3;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 928139010 ^ -1421221884;
              continue;
            case 3:
              goto label_1;
            case 4:
              num1 = (int) num2 * -1810278449 ^ -1639163841;
              continue;
            case 5:
              aVal = new JSONArray();
              aVal.Add(value);
              num1 = (int) num2 * -526423010 ^ 1351650700;
              continue;
            default:
              goto label_8;
          }
        }
label_3:
        return;
label_8:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
label_1:
        int num1 = -176709869;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -587315386)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * 175541734 ^ -628787412;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
        JSONClass aVal = new JSONClass();
label_1:
        int num1 = -890895459;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1961416553)) % 4U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -191512917 ^ 1562108200;
              continue;
            case 2:
              aVal.Add(aKey, value);
              num1 = (int) num2 * -1857778109 ^ -315273440;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override void Add(JSONNode aItem)
    {
label_1:
      int num1 = -1953324928;
      JSONArray aVal;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1145942983)) % 4U)
        {
          case 0:
            goto label_3;
          case 1:
            aVal = new JSONArray();
            aVal.Add(aItem);
            num1 = (int) num2 * 332127719 ^ -1530899375;
            continue;
          case 2:
            goto label_1;
          case 3:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * -1963252882 ^ 624992631;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = -1187712658;
      JSONClass aVal;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -325613529)) % 6U)
        {
          case 0:
            goto label_3;
          case 1:
            aVal = new JSONClass();
            num1 = (int) num2 * 2027282318 ^ -220640431;
            continue;
          case 2:
            aVal.Add(aKey, aItem);
            num1 = (int) num2 * 1271757379 ^ -1342642796;
            continue;
          case 3:
            num1 = (int) num2 * -722060592 ^ -914057789;
            continue;
          case 4:
            goto label_1;
          case 5:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * 827960481 ^ -1348403747;
            continue;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    public static bool operator ==(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = -692162670;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1853985023)) % 8U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 159166366 ^ -929536629;
            continue;
          case 2:
            int num3 = !flag2 ? 1924431322 : (num3 = 1833005136);
            num1 = num3 ^ (int) num2 * -1808911477;
            continue;
          case 3:
            flag2 = b == null;
            num1 = (int) num2 * -800952675 ^ -169790068;
            continue;
          case 5:
            flag1 = (object) a == b;
            num1 = -97258569;
            continue;
          case 6:
            num1 = (int) num2 * 675217612 ^ 1134839629;
            continue;
          case 7:
            flag1 = true;
            num1 = (int) num2 * 1322964971 ^ -1296497891;
            continue;
          default:
            goto label_9;
        }
      }
label_9:
      return flag1;
    }

    public static bool operator !=(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = -1022926120;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -90761843)) % 4U)
        {
          case 1:
            flag = !(a == b);
            num1 = (int) num2 * -1069686290 ^ 231960241;
            continue;
          case 2:
            num1 = (int) num2 * 1727215053 ^ -1625499509;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = 1075413025;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 515500911)) % 7U)
        {
          case 0:
            num1 = (int) num2 * 1810876057 ^ 1531149849;
            continue;
          case 1:
            int num3 = !flag1 ? 1217331845 : (num3 = 2026925418);
            num1 = num3 ^ (int) num2 * -1206852932;
            continue;
          case 2:
            flag2 = true;
            num1 = (int) num2 * 383656885 ^ 2089571754;
            continue;
          case 3:
            flag1 = obj == null;
            num1 = (int) num2 * -619002095 ^ -834404121;
            continue;
          case 5:
            goto label_1;
          case 6:
            flag2 = (object) this == obj;
            num1 = 1576029997;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      return flag2;
    }

    public override int GetHashCode()
    {
label_1:
      int num1 = -1587401827;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -457029117)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 1082008691 ^ -306416425;
            continue;
          case 2:
            hashCode = base.GetHashCode();
            num1 = (int) num2 * -810592465 ^ 78813624;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return hashCode;
    }

    public override string ToString() => "";

    public override string ToString(string aPrefix)
    {
      string str = "";
label_1:
      int num1 = 1524441674;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 236147831)) % 3U)
        {
          case 1:
            num1 = (int) num2 * -649576453 ^ -1579707933;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override int AsInt
    {
      get
      {
label_1:
        int num1 = -825750243;
        int asInt;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -573077185)) % 5U)
          {
            case 1:
              aVal = new JSONData(0);
              num1 = (int) num2 * 1653014639 ^ 1804171902;
              continue;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 630513146 ^ 29651375;
              continue;
            case 3:
              goto label_1;
            case 4:
              asInt = 0;
              num1 = (int) num2 * -2043192108 ^ -1968390408;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asInt;
      }
      set
      {
label_1:
        int num1 = 1118364330;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1857663760)) % 5U)
          {
            case 0:
              goto label_3;
            case 1:
              num1 = (int) num2 * 513522572 ^ 887148849;
              continue;
            case 2:
              goto label_1;
            case 3:
              aVal = new JSONData(value);
              num1 = (int) num2 * 779750794 ^ 1983114305;
              continue;
            case 4:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -832722725 ^ 1439596764;
              continue;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
    }

    public override float AsFloat
    {
      get
      {
label_1:
        int num1 = 1033124855;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2059175604)) % 6U)
          {
            case 0:
              num1 = (int) num2 * 1043617303 ^ 2003634325;
              continue;
            case 1:
              this.Set((JSONNode) new JSONData(0.0f));
              num1 = (int) num2 * 1449928783 ^ -657129679;
              continue;
            case 2:
              num1 = (int) num2 * 1520172712 ^ 1488145558;
              continue;
            case 4:
              asFloat = 0.0f;
              num1 = (int) num2 * 2025416955 ^ -1922804640;
              continue;
            case 5:
              goto label_1;
            default:
              goto label_7;
          }
        }
label_7:
        return asFloat;
      }
      set
      {
        this.Set((JSONNode) new JSONData(value));
label_1:
        int num1 = -1073035188;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2046349697)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              num1 = (int) num2 * -137220504 ^ 1570244251;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override double AsDouble
    {
      get
      {
label_1:
        int num1 = -728869736;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1499935149)) % 5U)
          {
            case 1:
              num1 = (int) num2 * 1221046209 ^ 205169513;
              continue;
            case 2:
              goto label_1;
            case 3:
              this.Set((JSONNode) new JSONData(0.0));
              num1 = (int) num2 * 53555827 ^ 1729421546;
              continue;
            case 4:
              asDouble = 0.0;
              num1 = (int) num2 * -1115830047 ^ 1347137433;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asDouble;
      }
      set => this.Set((JSONNode) new JSONData(value));
    }

    public override bool AsBool
    {
      get
      {
label_1:
        int num1 = 708904782;
        bool asBool;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 913365781)) % 6U)
          {
            case 0:
              num1 = (int) num2 * -670236806 ^ 1549650139;
              continue;
            case 1:
              aVal = new JSONData(false);
              num1 = (int) num2 * -1445710372 ^ 576970244;
              continue;
            case 2:
              asBool = false;
              num1 = (int) num2 * -390446598 ^ 111706185;
              continue;
            case 3:
              goto label_1;
            case 5:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1631937374 ^ -416162237;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asBool;
      }
      set
      {
        JSONData aVal = new JSONData(value);
label_1:
        int num1 = 2038948613;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1898078592)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1535536840 ^ -271458818;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = -2088263311;
        JSONArray aVal;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -31238730)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 390503171 ^ -1989671664;
              continue;
            case 2:
              aVal = new JSONArray();
              num1 = (int) num2 * 370051667 ^ -1142994530;
              continue;
            case 4:
              asArray = aVal;
              num1 = (int) num2 * -868993451 ^ 1453852665;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asArray;
      }
    }

    public override JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = 745044800;
        JSONClass aVal;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 846858746)) % 7U)
          {
            case 0:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -490136801 ^ -918250761;
              continue;
            case 1:
              aVal = new JSONClass();
              num1 = (int) num2 * 317622787 ^ 1163200720;
              continue;
            case 2:
              num1 = (int) num2 * -928031862 ^ 886925284;
              continue;
            case 3:
              goto label_1;
            case 4:
              asObject = aVal;
              num1 = (int) num2 * 1398561774 ^ -1229790897;
              continue;
            case 5:
              num1 = (int) num2 * 559675534 ^ 112288027;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asObject;
      }
    }
  }
}
