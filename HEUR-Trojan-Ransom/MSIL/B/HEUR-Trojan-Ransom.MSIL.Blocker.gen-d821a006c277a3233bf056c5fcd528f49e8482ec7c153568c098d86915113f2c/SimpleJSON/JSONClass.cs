// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONClass
// Assembly: BaseConfigHandl, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 8D741A15-4AC4-4AEF-B040-FB58D745B7BF
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-d821a006c277a3233bf056c5fcd528f49e8482ec7c153568c098d86915113f2c.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONClass : JSONNode, IEnumerable
  {
    private Dictionary<string, JSONNode> m_Dict = new Dictionary<string, JSONNode>();

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 197407092;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2052901686)) % 6U)
          {
            case 1:
              jsonNode = this.m_Dict[aKey];
              num1 = (int) num2 * 505618072 ^ 1915583428;
              continue;
            case 2:
              int num3 = !this.m_Dict.ContainsKey(aKey) ? 1409217597 : (num3 = 950698905);
              num1 = num3 ^ (int) num2 * 39027822;
              continue;
            case 3:
              num1 = (int) num2 * 883243849 ^ -1812702015;
              continue;
            case 4:
              goto label_1;
            case 5:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = 814610131;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 1030801;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 551022330)) % 7U)
          {
            case 0:
              this.m_Dict.Add(aKey, value);
              num1 = 1153736038;
              continue;
            case 1:
              num1 = (int) num2 * -1638522847 ^ 1541760924;
              continue;
            case 2:
              goto label_1;
            case 3:
              this.m_Dict[aKey] = value;
              num1 = (int) num2 * -1553316077 ^ -1292199421;
              continue;
            case 4:
              flag = this.m_Dict.ContainsKey(aKey);
              num1 = (int) num2 * 1574067175 ^ -1946847541;
              continue;
            case 5:
              goto label_3;
            case 6:
              int num3 = flag ? -653029577 : (num3 = -1623715464);
              num1 = num3 ^ (int) num2 * 851264185;
              continue;
            default:
              goto label_9;
          }
        }
label_3:
        return;
label_9:;
      }
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = -2000388564;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          int num3;
          switch ((num2 = (uint) (num1 ^ -2018676169)) % 6U)
          {
            case 0:
              jsonNode = (JSONNode) null;
              num1 = -842695830;
              continue;
            case 2:
              num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
              break;
            case 3:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * -290594632 ^ -1089762255;
                continue;
              }
              num3 = 1;
              break;
            case 4:
              goto label_1;
            case 5:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -78488093 ^ 811302185;
              continue;
            default:
              goto label_10;
          }
          int num4;
          num1 = num4 = num3 == 0 ? -1215824793 : (num4 = -1402382826);
        }
label_10:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 398787404;
        while (true)
        {
          uint num2;
          int num3;
          switch ((num2 = (uint) (num1 ^ 891412886)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * -1564559744 ^ 1969103020;
                continue;
              }
              num3 = 1;
              break;
            case 2:
              goto label_3;
            case 3:
              num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
              break;
            case 4:
              num1 = (int) num2 * -1530962640 ^ 581486461;
              continue;
            default:
              goto label_10;
          }
          int num4;
          num1 = num4 = num3 != 0 ? 920275667 : (num4 = 172747405);
        }
label_3:
        return;
label_10:;
      }
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = -510986124;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1551138318)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              count = this.m_Dict.Count;
              num1 = (int) num2 * 24269222 ^ 1266858337;
              continue;
            case 3:
              num1 = (int) num2 * 442725217 ^ -1090833272;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
      if (JSONClass.\u206A⁫‍⁮‌⁭​‍⁪⁬‫⁮‬‭⁯‏⁪‪⁯‍‌‭⁯​‎⁪⁯⁯‬‎‪‌‪⁭⁪⁮‍⁭‪‫‮(aKey))
        goto label_11;
label_1:
      int num1 = -1513419284;
label_2:
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -744123442)) % 12U)
        {
          case 0:
            num1 = (int) num2 * -118726592 ^ -105524148;
            continue;
          case 1:
            goto label_3;
          case 2:
            num1 = -1749674393;
            continue;
          case 3:
            int num3 = flag ? -1577986082 : (num3 = -107132514);
            num1 = num3 ^ (int) num2 * -1222737443;
            continue;
          case 4:
            goto label_1;
          case 5:
            num1 = (int) num2 * 1838551763 ^ 1913918940;
            continue;
          case 6:
            flag = this.m_Dict.ContainsKey(aKey);
            num1 = (int) num2 * 1543782565 ^ 1386527843;
            continue;
          case 7:
            this.m_Dict.Add(aKey, aItem);
            num1 = -1584956478;
            continue;
          case 8:
            num1 = (int) num2 * 1318851555 ^ 385884648;
            continue;
          case 9:
            goto label_11;
          case 10:
            num1 = (int) num2 * -770374773 ^ -1720185155;
            continue;
          case 11:
            this.m_Dict[aKey] = aItem;
            num1 = (int) num2 * 690458762 ^ -468297332;
            continue;
          default:
            goto label_14;
        }
      }
label_3:
      return;
label_14:
      return;
label_11:
      this.m_Dict.Add(Guid.NewGuid().ToString(), aItem);
      num1 = -1308642960;
      goto label_2;
    }

    public override JSONNode Remove(string aKey)
    {
label_1:
      int num1 = 455713745;
      JSONNode jsonNode1;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1351103956)) % 7U)
        {
          case 0:
            num1 = (int) num2 * 659813437 ^ 1656482480;
            continue;
          case 1:
            flag = !this.m_Dict.ContainsKey(aKey);
            num1 = (int) num2 * -1392897964 ^ -805009514;
            continue;
          case 2:
            JSONNode jsonNode2 = this.m_Dict[aKey];
            this.m_Dict.Remove(aKey);
            jsonNode1 = jsonNode2;
            num1 = 1203302773;
            continue;
          case 3:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num2 * 2023479815 ^ 197481112;
            continue;
          case 4:
            goto label_1;
          case 5:
            int num3 = !flag ? -689610462 : (num3 = -1622636629);
            num1 = num3 ^ (int) num2 * -848035750;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      return jsonNode1;
    }

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = 921649100;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        int num3;
        switch ((num2 = (uint) (num1 ^ 2025701997)) % 7U)
        {
          case 1:
            if (aIndex >= 0)
            {
              num1 = (int) num2 * 1631023009 ^ -150518995;
              continue;
            }
            num3 = 1;
            break;
          case 2:
            jsonNode = (JSONNode) null;
            num1 = 1200366105;
            continue;
          case 3:
            num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
            break;
          case 4:
            num1 = (int) num2 * 1607120263 ^ -1865925445;
            continue;
          case 5:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 744301845 ^ 2027939530;
            continue;
          case 6:
            goto label_1;
          default:
            goto label_11;
        }
        int num4;
        num1 = num4 = num3 != 0 ? 111844676 : (num4 = 412396587);
      }
label_11:
      return jsonNode;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = 1728911308;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1018111048)) % 3U)
          {
            case 0:
              goto label_2;
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 1132086066 ^ 1546658625;
              continue;
            default:
              goto label_6;
          }
        }
      }
      catch
      {
        jsonNode = (JSONNode) null;
      }
label_6:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONClass.\u003Cget_Childs\u003Ed__14 getChildsD14 = new JSONClass.\u003Cget_Childs\u003Ed__14(-2);
label_1:
        int num1 = -371719101;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -310129079)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              getChildsD14.\u003C\u003E4__this = this;
              childs = (IEnumerable<JSONNode>) getChildsD14;
              num1 = (int) num2 * -1810426794 ^ 39070903;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return childs;
      }
    }

    public IEnumerator GetEnumerator()
    {
      bool enumerator1;
      // ISSUE: fault handler
      try
      {
        // ISSUE: reference to a compiler-generated field
        int num1 = this.\u003C\u003E1__state;
label_1:
        int num2 = 585660237;
        Dictionary<string, JSONNode>.Enumerator enumerator;
        KeyValuePair<string, JSONNode> N;
        while (true)
        {
          uint num3;
          switch ((num3 = (uint) (num2 ^ 1810494568)) % 24U)
          {
            case 0:
              goto label_16;
            case 1:
              num2 = (int) num3 * 2041757259 ^ -813841786;
              continue;
            case 3:
              goto label_24;
            case 4:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E2__current = (object) N;
              num2 = (int) num3 * 555507252 ^ -1863299890;
              continue;
            case 5:
              int num4 = num1 == 0 ? 852444830 : (num4 = 628503547);
              num2 = num4 ^ (int) num3 * 1438229171;
              continue;
            case 6:
            case 10:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              N = new KeyValuePair<string, JSONNode>();
              num2 = 2129082693;
              continue;
            case 7:
            case 9:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -1;
              num2 = 1242180475;
              continue;
            case 8:
              enumerator1 = false;
              num2 = 673451155;
              continue;
            case 11:
              // ISSUE: reference to a compiler-generated method
              this.\u003C\u003Em__Finally1();
              num2 = (int) num3 * 563478573 ^ -112912216;
              continue;
            case 12:
              int num5;
              num2 = num5 = num1 == 1 ? 1871659558 : (num5 = 924584984);
              continue;
            case 13:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = (int) num3 * 229310022 ^ 1689255919;
              continue;
            case 14:
              enumerator = this.m_Dict.GetEnumerator();
              num2 = (int) num3 * -1866269272 ^ -576430139;
              continue;
            case 15:
              num2 = (int) num3 * 634053198 ^ -1829436173;
              continue;
            case 16:
              num2 = (int) num3 * 1331307548 ^ -1637475248;
              continue;
            case 17:
              enumerator = new Dictionary<string, JSONNode>.Enumerator();
              num2 = (int) num3 * 1148520123 ^ 708726905;
              continue;
            case 18:
              N = enumerator.Current;
              num2 = 1424081148;
              continue;
            case 19:
              num2 = (int) num3 * -2094657457 ^ -1906626469;
              continue;
            case 20:
              num2 = (int) num3 * 1737473418 ^ 532369884;
              continue;
            case 21:
              int num6;
              num2 = num6 = !enumerator.MoveNext() ? 218446363 : (num6 = 814097506);
              continue;
            case 22:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = 1;
              num2 = (int) num3 * 164886877 ^ 2115379254;
              continue;
            case 23:
              goto label_1;
            default:
              goto label_22;
          }
        }
label_16:
        enumerator1 = true;
        goto label_24;
label_22:
        enumerator1 = false;
      }
      __fault
      {
        // ISSUE: reference to a compiler-generated method
        this.System\u002EIDisposable\u002EDispose();
      }
label_24:
      return enumerator1;
    }

    public override string ToString()
    {
      string str1 = "{";
      Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator();
      try
      {
label_9:
        int num1 = enumerator.MoveNext() ? 224621129 : (num1 = 363867330);
        bool flag;
        KeyValuePair<string, JSONNode> current;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1263897989)) % 9U)
          {
            case 1:
              num1 = (int) num2 * -863263736 ^ -1718827063;
              continue;
            case 2:
              flag = JSONClass.\u206F⁫‎‮‏‫⁯⁭‮‏‌⁮⁯‬‎⁪‪‮‪‮⁯‫‍‍​⁬⁪⁯⁯‏‍‏‎⁫⁭⁮​‮‮‌‮(str1) > 2;
              num1 = (int) num2 * 1081878817 ^ 401345591;
              continue;
            case 3:
              int num3 = flag ? 728954300 : (num3 = 1671356600);
              num1 = num3 ^ (int) num2 * 717822125;
              continue;
            case 4:
              goto label_9;
            case 5:
              num1 = 224621129;
              continue;
            case 6:
              str1 = JSONClass.\u206C‫‍⁫⁭⁬‮⁫⁯‬⁬‌‪⁮⁭‌⁭⁯⁯‌⁯​‫⁭‎‎⁭⁯⁫​​‎⁮‎​‏⁯‏‪‫‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\":",
                JSONClass.\u202D‬⁪‌⁭⁭‭⁯‌‌​‫⁮‫‬‏⁮⁪‌‌⁬​‌‮‫⁮⁪​‍⁬‬⁪⁭​‭​‍⁫⁫‎‮((object) current.Value)
              });
              num1 = 1102697574;
              continue;
            case 7:
              current = enumerator.Current;
              num1 = 1860725928;
              continue;
            case 8:
              str1 = JSONClass.\u206B‌⁫‍‪‫‏⁭‫‌⁮‌⁭⁪‪‏‪⁭⁮‫‬⁮‎‭‪‏⁬⁭‍⁫⁯‎‌‪⁫⁯‫⁫‪‬‮(str1, ", ");
              num1 = (int) num2 * -1384671940 ^ -174924478;
              continue;
            default:
              goto label_16;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_12:
        int num4 = 744198036;
        while (true)
        {
          uint num5;
          switch ((num5 = (uint) (num4 ^ 1263897989)) % 3U)
          {
            case 0:
              goto label_12;
            case 1:
              num4 = (int) num5 * -732591548 ^ -1990287884;
              continue;
            default:
              goto label_15;
          }
        }
label_15:;
      }
label_16:
      string str2 = JSONClass.\u206B‌⁫‍‪‫‏⁭‫‌⁮‌⁭⁪‪‏‪⁭⁮‫‬⁮‎‭‪‏⁬⁭‍⁫⁯‎‌‪⁫⁯‫⁫‪‬‮(str1, "}");
label_17:
      int num6 = 1120799612;
      string str3;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ 1263897989)) % 4U)
        {
          case 1:
            str3 = str2;
            num6 = (int) num7 * -894226779 ^ -48529089;
            continue;
          case 2:
            goto label_17;
          case 3:
            num6 = (int) num7 * -53032683 ^ 791143262;
            continue;
          default:
            goto label_21;
        }
      }
label_21:
      return str3;
    }

    public override string ToString(string aPrefix)
    {
      string str1 = "{ ";
label_1:
      int num1 = 944824105;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1412416475)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 301902674 ^ 1577587229;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      using (Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator())
      {
label_12:
        int num3 = enumerator.MoveNext() ? 526560821 : (num3 = 81567881);
        bool flag;
        KeyValuePair<string, JSONNode> current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1412416475)) % 9U)
          {
            case 1:
              current = enumerator.Current;
              num3 = 1945376873;
              continue;
            case 2:
              num3 = (int) num4 * 1370531044 ^ 585438921;
              continue;
            case 3:
              num3 = 526560821;
              continue;
            case 4:
              int num5 = !flag ? -429565355 : (num5 = -837099616);
              num3 = num5 ^ (int) num4 * 1408759777;
              continue;
            case 5:
              str1 = JSONClass.\u206B‌⁫‍‪‫‏⁭‫‌⁮‌⁭⁪‪‏‪⁭⁮‫‬⁮‎‭‪‏⁬⁭‍⁫⁯‎‌‪⁫⁯‫⁫‪‬‮(str1, ", ");
              num3 = (int) num4 * 1118657459 ^ -1978527002;
              continue;
            case 6:
              goto label_12;
            case 7:
              flag = JSONClass.\u206F⁫‎‮‏‫⁯⁭‮‏‌⁮⁯‬‎⁪‪‮‪‮⁯‫‍‍​⁬⁪⁯⁯‏‍‏‎⁫⁭⁮​‮‮‌‮(str1) > 3;
              num3 = (int) num4 * -2096671868 ^ -1964547212;
              continue;
            case 8:
              str1 = JSONClass.\u206B⁯‫‎‍‪‭‮‪‫⁮‭‍‪‪⁪‪‪‬⁭⁫‪‫‏‏⁫‍‬​⁪‬‌⁭⁫⁪⁭‏‏⁫⁭‮(str1, "\n", aPrefix, "   ");
              str1 = JSONClass.\u206C‫‍⁫⁭⁬‮⁫⁯‬⁬‌‪⁮⁭‌⁭⁯⁯‌⁯​‫⁭‎‎⁭⁯⁫​​‎⁮‎​‏⁯‏‪‫‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\" : ",
                current.Value.ToString(JSONClass.\u206B‌⁫‍‪‫‏⁭‫‌⁮‌⁭⁪‪‏‪⁭⁮‫‬⁮‎‭‪‏⁬⁭‍⁫⁯‎‌‪⁫⁯‫⁫‪‬‮(aPrefix, "   "))
              });
              num3 = 552674416;
              continue;
            default:
              goto label_16;
          }
        }
      }
label_16:
      string str2 = JSONClass.\u206B⁯‫‎‍‪‭‮‪‫⁮‭‍‪‪⁪‪‪‬⁭⁫‪‫‏‏⁫‍‬​⁪‬‌⁭⁫⁪⁭‏‏⁫⁭‮(str1, "\n", aPrefix, "}");
label_17:
      int num6 = 933980993;
      string str3;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ 1412416475)) % 4U)
        {
          case 0:
            goto label_17;
          case 1:
            num6 = (int) num7 * -1355841939 ^ 57295613;
            continue;
          case 2:
            str3 = str2;
            num6 = (int) num7 * -658532349 ^ -2014965768;
            continue;
          default:
            goto label_21;
        }
      }
label_21:
      return str3;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = -480534992;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1505612187)) % 4U)
        {
          case 1:
            JSONClass.\u200F‎‏‏⁪⁮​‪​‪‎⁪‌‫‌‮‏⁪⁭⁪⁮‏‭‬⁯‪⁬‎‫‏‫‪​‮‌‮⁪⁭‪‎‮(aWriter, (byte) 2);
            num1 = (int) num2 * 1494141646 ^ -763211772;
            continue;
          case 2:
            goto label_1;
          case 3:
            JSONClass.\u202D‎‍‎‏‪‌⁬⁫‏‎​⁬‌‎‮‪‏‎​‮‫‭‫​‪‫⁪‪⁬⁭⁯‎⁪⁫‍⁮‬⁯‪‮(aWriter, this.m_Dict.Count);
            num1 = (int) num2 * 794678486 ^ -1604170801;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      using (Dictionary<string, JSONNode>.KeyCollection.Enumerator enumerator = this.m_Dict.Keys.GetEnumerator())
      {
label_14:
        int num3 = !enumerator.MoveNext() ? -1765657910 : (num3 = -244789864);
        string current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -1505612187)) % 7U)
          {
            case 0:
              num3 = (int) num4 * 228548768 ^ -113812251;
              continue;
            case 1:
              JSONClass.\u206D⁫​‬‫⁫⁪‮⁪‪⁭⁪‍‏⁬‫⁭‭‎⁮‎⁯‮‪‍‬‌⁪‎⁯⁭⁫⁮‍‏‎‭‍⁪⁯‮(aWriter, current);
              num3 = (int) num4 * 1612757813 ^ 1161065276;
              continue;
            case 2:
              current = enumerator.Current;
              num3 = -104942112;
              continue;
            case 3:
              goto label_15;
            case 4:
              goto label_14;
            case 5:
              num3 = -244789864;
              continue;
            case 6:
              this.m_Dict[current].Serialize(aWriter);
              num3 = (int) num4 * 1476830088 ^ 283507932;
              continue;
            default:
              goto label_9;
          }
        }
label_15:
        return;
label_9:;
      }
    }

    static bool \u206A⁫‍⁮‌⁭​‍⁪⁬‫⁮‬‭⁯‏⁪‪⁯‍‌‭⁯​‎⁪⁯⁯‬‎‪‌‪⁭⁪⁮‍⁭‪‫‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    static int \u206F⁫‎‮‏‫⁯⁭‮‏‌⁮⁯‬‎⁪‪‮‪‮⁯‫‍‍​⁬⁪⁯⁯‏‍‏‎⁫⁭⁮​‮‮‌‮([In] string obj0) => obj0.Length;

    static string \u206B‌⁫‍‪‫‏⁭‫‌⁮‌⁭⁪‪‏‪⁭⁮‫‬⁮‎‭‪‏⁬⁭‍⁫⁯‎‌‪⁫⁯‫⁫‪‬‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u202D‬⁪‌⁭⁭‭⁯‌‌​‫⁮‫‬‏⁮⁪‌‌⁬​‌‮‫⁮⁪​‍⁬‬⁪⁭​‭​‍⁫⁫‎‮([In] object obj0) => obj0.ToString();

    static string \u206C‫‍⁫⁭⁬‮⁫⁯‬⁬‌‪⁮⁭‌⁭⁯⁯‌⁯​‫⁭‎‎⁭⁯⁫​​‎⁮‎​‏⁯‏‪‫‮([In] string[] obj0) => string.Concat(obj0);

    static string \u206B⁯‫‎‍‪‭‮‪‫⁮‭‍‪‪⁪‪‪‬⁭⁫‪‫‏‏⁫‍‬​⁪‬‌⁭⁫⁪⁭‏‏⁫⁭‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u200F‎‏‏⁪⁮​‪​‪‎⁪‌‫‌‮‏⁪⁭⁪⁮‏‭‬⁯‪⁬‎‫‏‫‪​‮‌‮⁪⁭‪‎‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u202D‎‍‎‏‪‌⁬⁫‏‎​⁬‌‎‮‪‏‎​‮‫‭‫​‪‫⁪‪⁬⁭⁯‎⁪⁫‍⁮‬⁯‪‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u206D⁫​‬‫⁫⁪‮⁪‪⁭⁪‍‏⁬‫⁭‭‎⁮‎⁯‮‪‍‬‌⁪‎⁯⁭⁫⁮‍‏‎‭‍⁪⁯‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
