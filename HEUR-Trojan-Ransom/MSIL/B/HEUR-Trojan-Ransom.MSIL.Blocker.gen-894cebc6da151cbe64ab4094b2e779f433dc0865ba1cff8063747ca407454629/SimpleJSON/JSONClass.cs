// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONClass
// Assembly: CriticalHand, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 8F3AACC8-AAA3-4E3C-B88D-04522F6F341D
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-894cebc6da151cbe64ab4094b2e779f433dc0865ba1cff8063747ca407454629.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONClass : JSONNode, IEnumerable
  {
    private Dictionary<string, JSONNode> m_Dict = new Dictionary<string, JSONNode>();

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 1149938924;
        bool flag;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 702217089)) % 7U)
          {
            case 1:
              int num3 = !flag ? -1053459538 : (num3 = -631248542);
              num1 = num3 ^ (int) num2 * -1349919090;
              continue;
            case 2:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = 1788288812;
              continue;
            case 3:
              jsonNode = this.m_Dict[aKey];
              num1 = (int) num2 * 70556669 ^ 1581026277;
              continue;
            case 4:
              num1 = (int) num2 * 943219497 ^ -760982967;
              continue;
            case 5:
              flag = this.m_Dict.ContainsKey(aKey);
              num1 = (int) num2 * -2142864774 ^ -1545729278;
              continue;
            case 6:
              goto label_1;
            default:
              goto label_8;
          }
        }
label_8:
        return jsonNode;
      }
      set
      {
        bool flag = this.m_Dict.ContainsKey(aKey);
label_1:
        int num1 = -1574369686;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1453797703)) % 7U)
          {
            case 0:
              num1 = (int) num2 * 28579044 ^ 1719465198;
              continue;
            case 1:
              this.m_Dict[aKey] = value;
              num1 = (int) num2 * 2039493137 ^ 651939995;
              continue;
            case 2:
              int num3 = flag ? 747604162 : (num3 = 1564476820);
              num1 = num3 ^ (int) num2 * 347821752;
              continue;
            case 3:
              goto label_1;
            case 4:
              num1 = (int) num2 * -2100996474 ^ 749590357;
              continue;
            case 5:
              this.m_Dict.Add(aKey, value);
              num1 = -1325925498;
              continue;
            case 6:
              goto label_3;
            default:
              goto label_9;
          }
        }
label_3:
        return;
label_9:;
      }
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
        if (aIndex < 0)
          goto label_4;
label_1:
        int num1 = -1387917085;
label_2:
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1432745199)) % 5U)
          {
            case 1:
              goto label_3;
            case 2:
              goto label_1;
            case 3:
              jsonNode = (JSONNode) null;
              num1 = -320228976;
              continue;
            case 4:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 906445379 ^ 49127131;
              continue;
            default:
              goto label_8;
          }
        }
label_3:
        int num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
        goto label_5;
label_8:
        return jsonNode;
label_4:
        num3 = 1;
label_5:
        num1 = num3 != 0 ? -837818040 : (num1 = -355113104);
        goto label_2;
      }
      set
      {
        if (aIndex < 0)
          goto label_5;
label_1:
        int num1 = -544816963;
label_2:
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -625556022)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 777405970 ^ 1751929601;
              continue;
            case 2:
              goto label_4;
            case 3:
              goto label_3;
            case 4:
              int num3 = flag ? 750251126 : (num3 = 1098426619);
              num1 = num3 ^ (int) num2 * 1714191638;
              continue;
            default:
              goto label_9;
          }
        }
label_3:
        return;
label_9:
        return;
label_4:
        int num4 = aIndex >= this.m_Dict.Count ? 1 : 0;
        goto label_6;
label_5:
        num4 = 1;
label_6:
        flag = num4 != 0;
        num1 = -1280470905;
        goto label_2;
      }
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = -1527788543;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -573062760)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 369253 ^ -2098418553;
              continue;
            case 1:
              count = this.m_Dict.Count;
              num1 = (int) num2 * 320820267 ^ 1273436975;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = -1000392748;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1987816280)) % 14U)
        {
          case 0:
            this.m_Dict[aKey] = aItem;
            num1 = (int) num2 * -253166001 ^ 1714127362;
            continue;
          case 1:
            num1 = (int) num2 * 2113681260 ^ 1884439372;
            continue;
          case 2:
            goto label_1;
          case 3:
            int num3 = !flag1 ? -1666320865 : (num3 = -1000142364);
            num1 = num3 ^ (int) num2 * -804455366;
            continue;
          case 4:
            int num4 = flag2 ? -54211825 : (num4 = -1336730681);
            num1 = num4 ^ (int) num2 * 183035033;
            continue;
          case 5:
            this.m_Dict.Add(Guid.NewGuid().ToString(), aItem);
            num1 = -1659568295;
            continue;
          case 6:
            flag2 = !JSONClass.\u202A‫⁯⁬‫⁯‎‎‍‪‏⁬‫‏‏‮⁪⁬⁪‬⁯‏‬⁫‫⁯​⁬‫‬⁬‎⁬‮‏‏⁯‬‪‬‮(aKey);
            num1 = (int) num2 * 1798424622 ^ -590681564;
            continue;
          case 7:
            this.m_Dict.Add(aKey, aItem);
            num1 = -1820330379;
            continue;
          case 8:
            goto label_3;
          case 9:
            num1 = (int) num2 * -1395972373 ^ 782190526;
            continue;
          case 10:
            num1 = (int) num2 * 1431323822 ^ -172567124;
            continue;
          case 11:
            num1 = -1741771038;
            continue;
          case 12:
            num1 = (int) num2 * 188136032 ^ -35093111;
            continue;
          case 13:
            flag1 = this.m_Dict.ContainsKey(aKey);
            num1 = (int) num2 * 1496420458 ^ 966092925;
            continue;
          default:
            goto label_16;
        }
      }
label_3:
      return;
label_16:;
    }

    public override JSONNode Remove(string aKey)
    {
      if (this.m_Dict.ContainsKey(aKey))
        goto label_6;
label_1:
      int num1 = 106644466;
label_2:
      JSONNode jsonNode1;
      JSONNode jsonNode2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 946367964)) % 7U)
        {
          case 1:
            num1 = (int) num2 * 1960820867 ^ -709831034;
            continue;
          case 2:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num2 * 1465704787 ^ 612985623;
            continue;
          case 3:
            num1 = (int) num2 * 1398326578 ^ 938301287;
            continue;
          case 4:
            goto label_6;
          case 5:
            goto label_1;
          case 6:
            jsonNode1 = jsonNode2;
            num1 = (int) num2 * -2007190505 ^ 958036421;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      return jsonNode1;
label_6:
      jsonNode2 = this.m_Dict[aKey];
      this.m_Dict.Remove(aKey);
      num1 = 1104468108;
      goto label_2;
    }

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = 98900984;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        int num3;
        switch ((num2 = (uint) (num1 ^ 350359794)) % 7U)
        {
          case 0:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * -1965623587 ^ 1029073369;
            continue;
          case 1:
            if (aIndex < 0)
            {
              num3 = 1;
              break;
            }
            num1 = (int) num2 * 892775141 ^ 1787489416;
            continue;
          case 2:
            goto label_1;
          case 4:
            num1 = (int) num2 * 413068430 ^ -1239656446;
            continue;
          case 5:
            num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
            break;
          case 6:
            jsonNode = (JSONNode) null;
            num1 = 945114698;
            continue;
          default:
            goto label_11;
        }
        int num4;
        num1 = num4 = num3 == 0 ? 1541643443 : (num4 = 1915010613);
      }
label_11:
      return jsonNode;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      try
      {
        return (JSONNode) null;
      }
      catch
      {
        return (JSONNode) null;
      }
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONClass.\u003Cget_Childs\u003Ed__14 childs = new JSONClass.\u003Cget_Childs\u003Ed__14(-2);
label_1:
        int num1 = -540470852;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1833629816)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              childs.\u003C\u003E4__this = this;
              num1 = (int) num2 * -1507600469 ^ 716125437;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return (IEnumerable<JSONNode>) childs;
      }
    }

    public IEnumerator GetEnumerator()
    {
      bool enumerator1;
      // ISSUE: fault handler
      try
      {
        // ISSUE: reference to a compiler-generated field
        int num1 = this.\u003C\u003E1__state;
        if (num1 == 0)
          goto label_16;
label_1:
        int num2 = 505589315;
label_2:
        Dictionary<string, JSONNode>.Enumerator enumerator;
        KeyValuePair<string, JSONNode> N;
        while (true)
        {
          uint num3;
          switch ((num3 = (uint) (num2 ^ 1405217622)) % 19U)
          {
            case 0:
              goto label_5;
            case 1:
              enumerator = this.m_Dict.GetEnumerator();
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = (int) num3 * -1338188697 ^ -1537802939;
              continue;
            case 2:
              int num4;
              num2 = num4 = num1 == 1 ? 303316303 : (num4 = 1552850552);
              continue;
            case 3:
              num2 = (int) num3 * 1454544843 ^ -1445968380;
              continue;
            case 4:
            case 13:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = 1359000692;
              continue;
            case 5:
            case 14:
              goto label_16;
            case 6:
              N = new KeyValuePair<string, JSONNode>();
              num2 = (int) num3 * 1951609144 ^ -1815112525;
              continue;
            case 7:
              goto label_6;
            case 8:
              enumerator1 = false;
              num2 = (int) num3 * -190439471 ^ 1116241872;
              continue;
            case 9:
              // ISSUE: reference to a compiler-generated method
              this.\u003C\u003Em__Finally1();
              num2 = (int) num3 * -1492487360 ^ 925094698;
              continue;
            case 10:
              goto label_1;
            case 11:
              int num5;
              num2 = num5 = !enumerator.MoveNext() ? 355098055 : (num5 = 1379880278);
              continue;
            case 15:
              enumerator = new Dictionary<string, JSONNode>.Enumerator();
              num2 = (int) num3 * 701791938 ^ -1273293829;
              continue;
            case 16:
              N = enumerator.Current;
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E2__current = (object) N;
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = 1;
              num2 = 489220986;
              continue;
            case 17:
              num2 = (int) num3 * 1914190805 ^ 179723272;
              continue;
            case 18:
              num2 = (int) num3 * -1166312097 ^ 1582429577;
              continue;
            default:
              goto label_19;
          }
        }
label_5:
        enumerator1 = false;
        goto label_19;
label_6:
        enumerator1 = true;
        goto label_19;
label_16:
        // ISSUE: reference to a compiler-generated field
        this.\u003C\u003E1__state = -1;
        num2 = 1315521756;
        goto label_2;
      }
      __fault
      {
        // ISSUE: reference to a compiler-generated method
        this.System\u002EIDisposable\u002EDispose();
      }
label_19:
      return enumerator1;
    }

    public override string ToString()
    {
label_1:
      int num1 = -968014798;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -3892652)) % 4U)
        {
          case 1:
            num1 = (int) num2 * -1697732713 ^ 25024647;
            continue;
          case 2:
            str = "{";
            num1 = (int) num2 * -242569516 ^ -606654943;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      using (Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator())
      {
label_11:
        int num3 = !enumerator.MoveNext() ? -1871029172 : (num3 = -2053289761);
        bool flag;
        KeyValuePair<string, JSONNode> current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -3892652)) % 10U)
          {
            case 0:
              num3 = -2053289761;
              continue;
            case 1:
              flag = JSONClass.\u200B⁮⁭​⁫⁫‏‎⁯‪⁬⁭⁭⁭‎​‪‫⁪⁯‎⁭‌‬⁯⁯⁯‌⁯⁯‪​​‫‍⁪‮⁯​‪‮(str) > 2;
              num3 = (int) num4 * -383544279 ^ -1386406291;
              continue;
            case 2:
              int num5 = !flag ? 390175267 : (num5 = 1657269430);
              num3 = num5 ^ (int) num4 * 1214205421;
              continue;
            case 3:
              num3 = (int) num4 * -117325357 ^ 699361475;
              continue;
            case 4:
              goto label_11;
            case 5:
              current = enumerator.Current;
              num3 = -1716793069;
              continue;
            case 6:
              str = JSONClass.\u202D‍‏⁯‏‫‍⁫‮⁮‮‬‌⁪‬‍⁭‏‫‎‎‌‌‍‭⁫⁮⁭‮‬‍‎⁭⁪‌‫‍‮‪‌‮(str, ", ");
              num3 = (int) num4 * -738351817 ^ 699425133;
              continue;
            case 7:
              str = JSONClass.\u200D⁭‍‏‫‭⁭⁬‬‪⁫⁯⁫⁫⁬⁯‍‭​⁪‪‬‌‍⁭‮‍‫⁮‍‍‮‏⁭⁪‍‭⁬‍‏‮(new string[5]
              {
                str,
                "\"",
                JSONNode.Escape(current.Key),
                "\":",
                JSONClass.\u206B‪⁫‫‏⁯‎‭⁭‮⁮⁬⁮​‬⁬⁮⁫‬‍⁬‏⁮‏‮‎‌‮‎‎‪​⁪‮⁯‭‍⁪⁯⁮‮((object) current.Value)
              });
              num3 = -1596351497;
              continue;
            case 9:
              num3 = (int) num4 * 463844215 ^ -1643841152;
              continue;
            default:
              goto label_18;
          }
        }
      }
label_18:
      return JSONClass.\u202D‍‏⁯‏‫‍⁫‮⁮‮‬‌⁪‬‍⁭‏‫‎‎‌‌‍‭⁫⁮⁭‮‬‍‎⁭⁪‌‫‍‮‪‌‮(str, "}");
    }

    public override string ToString(string aPrefix)
    {
      string str1 = "{ ";
      using (Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator())
      {
label_9:
        int num1 = enumerator.MoveNext() ? -1181263833 : (num1 = -1901322890);
        bool flag;
        KeyValuePair<string, JSONNode> current;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1899291648)) % 9U)
          {
            case 0:
              str1 = JSONClass.\u202D‍‏⁯‏‫‍⁫‮⁮‮‬‌⁪‬‍⁭‏‫‎‎‌‌‍‭⁫⁮⁭‮‬‍‎⁭⁪‌‫‍‮‪‌‮(str1, ", ");
              num1 = (int) num2 * -2060221054 ^ 209629753;
              continue;
            case 1:
              num1 = (int) num2 * -832948520 ^ -586346112;
              continue;
            case 2:
              current = enumerator.Current;
              num1 = -132380716;
              continue;
            case 3:
              num1 = -1181263833;
              continue;
            case 4:
              int num3 = !flag ? 1093985335 : (num3 = 1690847565);
              num1 = num3 ^ (int) num2 * 587461233;
              continue;
            case 5:
              goto label_9;
            case 7:
              str1 = JSONClass.\u200B⁫​⁮⁯‪‫⁪⁯‏‮​⁫⁯‎‏‬‬⁭‬‌⁪‎‭‌⁬‮⁮⁯⁭‮‬‫‫‫‪‮⁭⁪⁭‮(str1, "\n", aPrefix, "   ");
              str1 = JSONClass.\u200D⁭‍‏‫‭⁭⁬‬‪⁫⁯⁫⁫⁬⁯‍‭​⁪‪‬‌‍⁭‮‍‫⁮‍‍‮‏⁭⁪‍‭⁬‍‏‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\" : ",
                current.Value.ToString(JSONClass.\u202D‍‏⁯‏‫‍⁫‮⁮‮‬‌⁪‬‍⁭‏‫‎‎‌‌‍‭⁫⁮⁭‮‬‍‎⁭⁪‌‫‍‮‪‌‮(aPrefix, "   "))
              });
              num1 = -1373653809;
              continue;
            case 8:
              flag = JSONClass.\u200B⁮⁭​⁫⁫‏‎⁯‪⁬⁭⁭⁭‎​‪‫⁪⁯‎⁭‌‬⁯⁯⁯‌⁯⁯‪​​‫‍⁪‮⁯​‪‮(str1) > 3;
              num1 = (int) num2 * -91463138 ^ 883680788;
              continue;
            default:
              goto label_12;
          }
        }
      }
label_12:
      string str2 = JSONClass.\u200B⁫​⁮⁯‪‫⁪⁯‏‮​⁫⁯‎‏‬‬⁭‬‌⁪‎‭‌⁬‮⁮⁯⁭‮‬‫‫‫‪‮⁭⁪⁭‮(str1, "\n", aPrefix, "}");
label_13:
      int num4 = -2127660694;
      string str3;
      while (true)
      {
        uint num5;
        switch ((num5 = (uint) (num4 ^ -1899291648)) % 4U)
        {
          case 1:
            num4 = (int) num5 * -331194598 ^ 1375481186;
            continue;
          case 2:
            str3 = str2;
            num4 = (int) num5 * -1176031712 ^ -381427119;
            continue;
          case 3:
            goto label_13;
          default:
            goto label_17;
        }
      }
label_17:
      return str3;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
      JSONClass.\u206E‍⁫‌⁮‮⁪‎⁬‪⁬⁪⁭‌‌‮⁯⁬‮‭‌‏‬⁫‎‎‫‬⁫⁭‏⁬‭⁪⁬​​‪‮‮(aWriter, (byte) 2);
label_1:
      int num1 = -1617619534;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -953971401)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -349026407 ^ -507594448;
            continue;
          case 1:
            JSONClass.\u200E‌⁫‬‫⁯‬‬‎‭⁫‫‎⁯‪​‪‭‏‌‏‌‎‏‭​⁬​‭‏‫​‌‏⁭⁭‪​‮‍‮(aWriter, this.m_Dict.Count);
            num1 = (int) num2 * -1339163231 ^ -8776566;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      Dictionary<string, JSONNode>.KeyCollection.Enumerator enumerator = this.m_Dict.Keys.GetEnumerator();
      try
      {
label_10:
        int num3 = enumerator.MoveNext() ? -1157152387 : (num3 = -2013092058);
        string current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -953971401)) % 8U)
          {
            case 0:
              num3 = (int) num4 * 1573117943 ^ 1583139188;
              continue;
            case 1:
              goto label_19;
            case 2:
              current = enumerator.Current;
              num3 = -783562079;
              continue;
            case 3:
              num3 = (int) num4 * -1406847667 ^ -2092151753;
              continue;
            case 4:
              num3 = -1157152387;
              continue;
            case 5:
              JSONClass.\u206A‫​‫‎‪‏‮‍⁪⁬​‬‍‪⁬‎⁮‬‎‏⁪⁯⁫‏‌⁬⁯‍‍⁫‌⁭⁬⁭‌‭⁭‬‮‮(aWriter, current);
              this.m_Dict[current].Serialize(aWriter);
              num3 = (int) num4 * 1191599767 ^ 127011644;
              continue;
            case 6:
              num3 = (int) num4 * 2113629734 ^ 594380062;
              continue;
            case 7:
              goto label_10;
            default:
              goto label_15;
          }
        }
label_19:
        return;
label_15:;
      }
      finally
      {
        enumerator.Dispose();
label_17:
        int num5 = -1493031211;
        while (true)
        {
          uint num6;
          switch ((num6 = (uint) (num5 ^ -953971401)) % 3U)
          {
            case 0:
              goto label_17;
            case 1:
              num5 = (int) num6 * 710976737 ^ 411611272;
              continue;
            default:
              goto label_21;
          }
        }
label_21:;
      }
    }

    static bool \u202A‫⁯⁬‫⁯‎‎‍‪‏⁬‫‏‏‮⁪⁬⁪‬⁯‏‬⁫‫⁯​⁬‫‬⁬‎⁬‮‏‏⁯‬‪‬‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    static int \u200B⁮⁭​⁫⁫‏‎⁯‪⁬⁭⁭⁭‎​‪‫⁪⁯‎⁭‌‬⁯⁯⁯‌⁯⁯‪​​‫‍⁪‮⁯​‪‮([In] string obj0) => obj0.Length;

    static string \u202D‍‏⁯‏‫‍⁫‮⁮‮‬‌⁪‬‍⁭‏‫‎‎‌‌‍‭⁫⁮⁭‮‬‍‎⁭⁪‌‫‍‮‪‌‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u206B‪⁫‫‏⁯‎‭⁭‮⁮⁬⁮​‬⁬⁮⁫‬‍⁬‏⁮‏‮‎‌‮‎‎‪​⁪‮⁯‭‍⁪⁯⁮‮([In] object obj0) => obj0.ToString();

    static string \u200D⁭‍‏‫‭⁭⁬‬‪⁫⁯⁫⁫⁬⁯‍‭​⁪‪‬‌‍⁭‮‍‫⁮‍‍‮‏⁭⁪‍‭⁬‍‏‮([In] string[] obj0) => string.Concat(obj0);

    static string \u200B⁫​⁮⁯‪‫⁪⁯‏‮​⁫⁯‎‏‬‬⁭‬‌⁪‎‭‌⁬‮⁮⁯⁭‮‬‫‫‫‪‮⁭⁪⁭‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u206E‍⁫‌⁮‮⁪‎⁬‪⁬⁪⁭‌‌‮⁯⁬‮‭‌‏‬⁫‎‎‫‬⁫⁭‏⁬‭⁪⁬​​‪‮‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u200E‌⁫‬‫⁯‬‬‎‭⁫‫‎⁯‪​‪‭‏‌‏‌‎‏‭​⁬​‭‏‫​‌‏⁭⁭‪​‮‍‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u206A‫​‫‎‪‏‮‍⁪⁬​‬‍‪⁬‎⁮‬‎‏⁪⁯⁫‏‌⁬⁯‍‍⁫‌⁭⁬⁭‌‭⁭‬‮‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
