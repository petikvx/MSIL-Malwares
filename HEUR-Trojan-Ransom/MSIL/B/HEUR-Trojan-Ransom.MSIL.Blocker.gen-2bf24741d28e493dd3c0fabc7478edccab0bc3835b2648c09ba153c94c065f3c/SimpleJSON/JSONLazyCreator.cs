// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONLazyCreator
// Assembly: ResourceTypeCo, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: D98D3237-A321-4821-9049-807D7FD195EE
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-2bf24741d28e493dd3c0fabc7478edccab0bc3835b2648c09ba153c94c065f3c.exe

namespace SimpleJSON
{
  internal class JSONLazyCreator : JSONNode
  {
    private JSONNode m_Node = (JSONNode) null;
    private string m_Key = (string) null;

    public JSONLazyCreator(JSONNode aNode)
    {
      this.m_Node = aNode;
      this.m_Key = (string) null;
    }

    public JSONLazyCreator(JSONNode aNode, string aKey)
    {
label_1:
      int num1 = -1290507658;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1777397790)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            this.m_Node = aNode;
            this.m_Key = aKey;
            num1 = (int) num2 * -850182522 ^ 421264963;
            continue;
          case 2:
            goto label_3;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    private void Set(JSONNode aVal)
    {
label_1:
      int num1 = -2042584488;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -165532598)) % 12U)
        {
          case 0:
            num1 = (int) num2 * -1613800371 ^ -1358653322;
            continue;
          case 1:
            this.m_Node.Add(aVal);
            num1 = (int) num2 * -1953934576 ^ 403207157;
            continue;
          case 2:
            num1 = (int) num2 * -1930300942 ^ -996977096;
            continue;
          case 3:
            num1 = (int) num2 * 36709996 ^ -1702850186;
            continue;
          case 4:
            num1 = (int) num2 * -539116734 ^ 356238404;
            continue;
          case 5:
            goto label_1;
          case 6:
            this.m_Node = (JSONNode) null;
            num1 = -865778515;
            continue;
          case 7:
            this.m_Node.Add(this.m_Key, aVal);
            num1 = (int) num2 * -833785758 ^ -1292309010;
            continue;
          case 8:
            int num3 = !flag ? -1324813085 : (num3 = -1262267197);
            num1 = num3 ^ (int) num2 * -45854191;
            continue;
          case 9:
            num1 = -952025915;
            continue;
          case 10:
            flag = this.m_Key == null;
            num1 = (int) num2 * -2108807366 ^ 916047906;
            continue;
          case 11:
            goto label_3;
          default:
            goto label_14;
        }
      }
label_3:
      return;
label_14:;
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 1420331520;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1493066929)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 607528637 ^ 376086262;
              continue;
            case 1:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * -1700595697 ^ 1544843678;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 1655616716;
        JSONArray aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 936422896)) % 6U)
          {
            case 0:
              num1 = (int) num2 * -1630967964 ^ -2064421321;
              continue;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 54366078 ^ 60977008;
              continue;
            case 2:
              aVal = new JSONArray();
              num1 = (int) num2 * -1022661059 ^ 1094707895;
              continue;
            case 3:
              aVal.Add(value);
              num1 = (int) num2 * -717886642 ^ 1060428951;
              continue;
            case 4:
              goto label_1;
            case 5:
              goto label_3;
            default:
              goto label_8;
          }
        }
label_3:
        return;
label_8:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
label_1:
        int num1 = 594485283;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2131646756)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * 896263312 ^ -785412179;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
        JSONClass aVal = new JSONClass();
label_1:
        int num1 = 1277706060;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 111127687)) % 6U)
          {
            case 0:
              num1 = (int) num2 * 1010888114 ^ 114608825;
              continue;
            case 1:
              aVal.Add(aKey, value);
              num1 = (int) num2 * 295343056 ^ -831813835;
              continue;
            case 2:
              num1 = (int) num2 * 120907127 ^ 2061492064;
              continue;
            case 3:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1495762462 ^ 1651606825;
              continue;
            case 4:
              goto label_3;
            case 5:
              goto label_1;
            default:
              goto label_8;
          }
        }
label_3:
        return;
label_8:;
      }
    }

    public override void Add(JSONNode aItem)
    {
label_1:
      int num1 = -1468652305;
      JSONArray aVal;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -703243344)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * -2006650402 ^ 1075761965;
            continue;
          case 3:
            aVal = new JSONArray();
            aVal.Add(aItem);
            num1 = (int) num2 * 1381459103 ^ -727334473;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = -547992288;
      JSONClass aVal;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -137420406)) % 5U)
        {
          case 0:
            aVal.Add(aKey, aItem);
            num1 = (int) num2 * 798127031 ^ -1308548351;
            continue;
          case 1:
            aVal = new JSONClass();
            num1 = (int) num2 * -1730670554 ^ -1304369512;
            continue;
          case 2:
            goto label_3;
          case 3:
            goto label_1;
          case 4:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * -589421820 ^ 1346068769;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public static bool operator ==(JSONLazyCreator a, object b)
    {
      bool flag1 = b == null;
label_1:
      int num1 = -1231097898;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -478938278)) % 6U)
        {
          case 1:
            flag2 = (object) a == b;
            num1 = -805422274;
            continue;
          case 2:
            int num3 = !flag1 ? 1684855425 : (num3 = 305012305);
            num1 = num3 ^ (int) num2 * 80097144;
            continue;
          case 3:
            flag2 = true;
            num1 = (int) num2 * 472570942 ^ 663876636;
            continue;
          case 4:
            num1 = (int) num2 * 974419585 ^ 407972626;
            continue;
          case 5:
            goto label_1;
          default:
            goto label_7;
        }
      }
label_7:
      return flag2;
    }

    public static bool operator !=(JSONLazyCreator a, object b)
    {
      bool flag = !(a == b);
label_1:
      int num1 = -1845614383;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -24452799)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -1808179519 ^ -1650182894;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override bool Equals(object obj)
    {
      if (obj != null)
        goto label_5;
label_1:
      int num1 = 1730250493;
label_2:
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1716059321)) % 5U)
        {
          case 1:
            flag = true;
            num1 = (int) num2 * -22533587 ^ 1966142809;
            continue;
          case 2:
            goto label_5;
          case 3:
            num1 = (int) num2 * -866275569 ^ 1658318387;
            continue;
          case 4:
            goto label_1;
          default:
            goto label_6;
        }
      }
label_6:
      return flag;
label_5:
      flag = (object) this == obj;
      num1 = 2020159263;
      goto label_2;
    }

    public override int GetHashCode()
    {
label_1:
      int num1 = 538446435;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1058924572)) % 4U)
        {
          case 0:
            num1 = (int) num2 * 504334930 ^ 866860229;
            continue;
          case 2:
            goto label_1;
          case 3:
            hashCode = base.GetHashCode();
            num1 = (int) num2 * -1215839231 ^ -39119765;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return hashCode;
    }

    public override string ToString()
    {
label_1:
      int num1 = -1181394877;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1856727483)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            str = "";
            num1 = (int) num2 * -2041226386 ^ 218873738;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = -1139277505;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2055195035)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            str = "";
            num1 = (int) num2 * -376479223 ^ -1287120312;
            continue;
          case 3:
            num1 = (int) num2 * 1574734669 ^ 982409683;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public override int AsInt
    {
      get
      {
        JSONData aVal = new JSONData(0);
label_1:
        int num1 = -1063954797;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1011714338)) % 5U)
          {
            case 0:
              num1 = (int) num2 * -1741772530 ^ 903060579;
              continue;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1657297724 ^ -417349943;
              continue;
            case 2:
              asInt = 0;
              num1 = (int) num2 * 1672096757 ^ -162623441;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_6:
        return asInt;
      }
      set => this.Set((JSONNode) new JSONData(value));
    }

    public override float AsFloat
    {
      get
      {
label_1:
        int num1 = -2130398639;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -770552253)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              this.Set((JSONNode) new JSONData(0.0f));
              asFloat = 0.0f;
              num1 = (int) num2 * -438363126 ^ -58318552;
              continue;
            case 3:
              num1 = (int) num2 * 1644806920 ^ -1670727298;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asFloat;
      }
      set
      {
label_1:
        int num1 = -1761075205;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1851814665)) % 3U)
          {
            case 1:
              aVal = new JSONData(value);
              num1 = (int) num2 * -1980671534 ^ 621375215;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        this.Set((JSONNode) aVal);
      }
    }

    public override double AsDouble
    {
      get
      {
label_1:
        int num1 = -377797099;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -5273472)) % 5U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * -1823486371 ^ -715868521;
              continue;
            case 3:
              asDouble = 0.0;
              num1 = (int) num2 * -167170485 ^ 1174377580;
              continue;
            case 4:
              this.Set((JSONNode) new JSONData(0.0));
              num1 = (int) num2 * -1441655520 ^ 2132788744;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = 1442174183;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 612062926)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 629668196 ^ -1929908775;
              continue;
            case 1:
              this.Set((JSONNode) new JSONData(value));
              num1 = (int) num2 * 1257812713 ^ 564981087;
              continue;
            case 2:
              goto label_1;
            case 3:
              goto label_3;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override bool AsBool
    {
      get
      {
        JSONData aVal = new JSONData(false);
label_1:
        int num1 = 2018756103;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2037455701)) % 5U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * 1650688051 ^ -875097695;
              continue;
            case 3:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1804004905 ^ 401914024;
              continue;
            case 4:
              asBool = false;
              num1 = (int) num2 * -1724617813 ^ 1623458720;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asBool;
      }
      set
      {
label_1:
        int num1 = 2135094993;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 57089302)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Set((JSONNode) new JSONData(value));
              num1 = (int) num2 * -1681892132 ^ -5711817;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = -931768529;
        JSONArray aVal;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1752980615)) % 6U)
          {
            case 0:
              asArray = aVal;
              num1 = (int) num2 * 1839588006 ^ 660392744;
              continue;
            case 1:
              num1 = (int) num2 * -144033922 ^ -152287269;
              continue;
            case 3:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1452560761 ^ 201953930;
              continue;
            case 4:
              aVal = new JSONArray();
              num1 = (int) num2 * -629304990 ^ 1638401604;
              continue;
            case 5:
              goto label_1;
            default:
              goto label_7;
          }
        }
label_7:
        return asArray;
      }
    }

    public override JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = -1488851240;
        JSONClass aVal;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1524306210)) % 6U)
          {
            case 0:
              goto label_1;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -36543550 ^ -947199467;
              continue;
            case 3:
              num1 = (int) num2 * 1998970023 ^ 2024067538;
              continue;
            case 4:
              aVal = new JSONClass();
              num1 = (int) num2 * 1718745872 ^ 1312639468;
              continue;
            case 5:
              asObject = aVal;
              num1 = (int) num2 * 84482915 ^ 433421632;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asObject;
      }
    }
  }
}
