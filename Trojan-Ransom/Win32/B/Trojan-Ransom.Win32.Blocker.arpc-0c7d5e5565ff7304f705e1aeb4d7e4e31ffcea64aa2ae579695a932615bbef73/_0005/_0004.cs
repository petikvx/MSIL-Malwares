// Decompiled with JetBrains decompiler
// Type: .
// Assembly: 5555, Version=0.0.0.0, Culture=neutral, PublicKeyToken=f1fbbd7db53bfdb4
// MVID: 0D11B329-2752-44F3-ACE5-4122455C2392
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00040-msil\Trojan-Ransom.Win32.Blocker.arpc-0c7d5e5565ff7304f705e1aeb4d7e4e31ffcea64aa2ae579695a932615bbef73.exe

using \u0004;
using \u0005;
using System;
using System.Runtime.InteropServices;
using System.Threading;

namespace \u0005
{
  internal abstract class \u0004
  {
    private static bool \u0001;
    private \u0002 \u0001;
    private static readonly object \u0001;

    protected void \u0002([In] uint obj0)
    {
      object obj1;
      try
      {
        try
        {
          object obj2 = \u0005.\u0004.\u0001;
          if (true)
            obj1 = obj2;
          Monitor.Enter(obj2);
          try
          {
            this.\u0002();
            int num1;
            do
            {
              if (true)
                goto label_8;
label_5:
              num1 = 4;
label_6:
              continue;
label_8:
              int num2 = (int) obj0;
              while (true)
              {
                if (true)
                {
                  \u0002.\u0002((uint) num2);
                  goto label_5;
                }
              }
              num1 = num2;
              goto label_6;
            }
            while (num1 == 0);
          }
          finally
          {
            \u0018\u0003.\u0002\u0004(obj1);
          }
        }
        catch
        {
        }
      }
      catch (Exception ex)
      {
        object obj3 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<uint> local = (ValueType) obj0;
        \u0008.\u0005.\u0002(ex, obj3, (object) this, (object) local);
        throw;
      }
    }

    protected void \u0002([In] string obj0)
    {
      object obj1;
      try
      {
        try
        {
          object obj2 = \u0005.\u0004.\u0001;
          if (true)
            obj1 = obj2;
          Monitor.Enter(obj2);
          try
          {
            this.\u0002();
            do
            {
              \u0002.\u0003(obj0);
            }
            while (false);
          }
          finally
          {
            \u0018\u0003.\u0002\u0004(obj1);
          }
        }
        catch
        {
        }
      }
      catch (Exception ex)
      {
        object obj3 = obj1;
        string str = obj0;
        \u0008.\u0005.\u0002(ex, obj3, (object) this, (object) str);
        throw;
      }
    }

    private void \u0002()
    {
      Thread thread1;
      \u0005.\u0004.\u0006 obj1;
      try
      {
        if (true)
        {
          if (true)
          {
            if (!\u0005.\u0004.\u0001)
            {
              \u0005.\u0004.\u0006 obj2 = new \u0005.\u0004.\u0006();
              if (true)
                obj1 = obj2;
              obj1.\u0001 = this;
              obj1.\u0001 = \u0002.\u0002();
            }
            else
              goto label_7;
          }
          // ISSUE: method pointer
          Thread thread2 = new Thread(new ThreadStart((object) obj1, __methodptr(\u0002)));
          if (true)
            thread1 = thread2;
          do
          {
            thread1.IsBackground = true;
          }
          while (false);
          \u0080\u0004.\u007E\u0011\u0004((object) thread1, ApartmentState.STA);
          if (false)
            goto label_6;
        }
        else
          goto label_5;
label_4:
        \u0018\u0003.\u007E\u0006\u0004((object) thread1);
label_5:
        \u0099\u0003.\u007E\u0087\u0002((object) \u0097\u0003.\u0084\u0002(), new EventHandler(this.\u0002));
        if (false)
          goto label_7;
label_6:
        \u0005.\u0004.\u0001 = true;
label_7:
        if (true)
        {
          if (false)
            goto label_6;
        }
        else
          goto label_4;
      }
      catch (Exception ex)
      {
        Thread thread3 = thread1;
        \u0005.\u0004.\u0006 obj3 = obj1;
        \u0008.\u0005.\u0002(ex, (object) thread3, (object) obj3, (object) this);
        throw;
      }
    }

    private void \u0002([In] object obj0, [In] EventArgs obj1)
    {
      \u0005.\u0005 obj2;
      \u0001 obj3;
      try
      {
        if (true)
        {
          int num1;
          if (true)
          {
            if (false)
              goto label_5;
label_3:
            int num2 = 8;
            if (num2 != 0)
            {
              if (num2 != 0)
              {
                \u0001 obj4 = \u0002.\u0003();
                if (true)
                  obj3 = obj4;
              }
              else
                goto label_9;
            }
            else
            {
              num1 = num2;
              goto label_7;
            }
label_5:
            if (false)
              goto label_3;
            else
              goto label_16;
          }
          else
            goto label_16;
label_7:
          if (num1 != 0)
            goto label_10;
          else
            goto label_17;
label_16:
          num1 = obj3.\u0002() ? 1 : 0;
          goto label_7;
        }
        else
          goto label_18;
label_9:
        \u0002.\u0002();
label_10:
        if (true)
        {
          if (true)
            return;
          goto label_18;
        }
label_17:
        \u0005.\u0005 obj5 = new \u0005.\u0005(obj3);
        if (true)
          obj2 = obj5;
label_18:
        // ISSUE: method pointer
        obj2.\u0002(new \u0002((object) this, __methodptr(\u0002)));
        if (this.\u0002())
        {
          this.\u0002(obj2);
          goto label_9;
        }
        else
          goto label_10;
      }
      catch (Exception ex)
      {
        \u0001 obj6 = obj3;
        \u0005.\u0005 obj7 = obj2;
        object obj8 = obj0;
        EventArgs eventArgs = obj1;
        \u0008.\u0005.\u0002(ex, (object) obj6, (object) obj7, (object) this, obj8, (object) eventArgs);
        throw;
      }
    }

    protected abstract void \u0002([In] \u0005.\u0005 obj0);

    protected abstract bool \u0002();

    private void \u0002([In] \u0001 obj0)
    {
      \u0005.\u0005 obj1;
      try
      {
        if (true)
          goto label_6;
label_1:
        if (true)
          this.\u0002(obj1);
        else
          goto label_7;
label_3:
        \u0004.\u0008.\u0002();
        if (true)
          return;
        goto label_8;
label_6:
        \u0005.\u0005 obj2 = new \u0005.\u0005(obj0);
        if (true)
          obj1 = obj2;
label_7:
        // ISSUE: method pointer
        obj1.\u0002(new \u0002((object) this, __methodptr(\u0002)));
label_8:
        if (this.\u0002())
        {
          \u001E\u0004.\u000E\u0004().IsBackground = false;
          goto label_1;
        }
        else
          goto label_3;
      }
      catch (Exception ex)
      {
        \u0005.\u0005 obj3 = obj1;
        \u0001 obj4 = obj0;
        \u0008.\u0005.\u0002(ex, (object) obj3, (object) this, (object) obj4);
        throw;
      }
    }

    private void \u0002([In] object obj0, [In] \u0003 obj1)
    {
      \u0002 obj2;
      try
      {
        if (true)
        {
          \u0002 obj3 = this.\u0001;
          if (true)
            obj2 = obj3;
        }
        if (obj2 == null)
          return;
        obj2(obj0, obj1);
      }
      catch (Exception ex)
      {
        \u0002 obj4 = obj2;
        object obj5 = obj0;
        \u0003 obj6 = obj1;
        \u0008.\u0005.\u0002(ex, (object) obj4, (object) this, obj5, (object) obj6);
        throw;
      }
    }

    protected \u0004()
    {
      try
      {
      }
      catch (Exception ex)
      {
        \u0008.\u0005.\u0002(ex, (object) this);
        throw;
      }
    }

    static \u0004()
    {
      try
      {
        \u0005.\u0004.\u0001 = new object();
      }
      catch (Exception ex)
      {
        \u0008.\u0005.\u0002(ex);
        throw;
      }
    }

    private sealed class \u0006
    {
      public \u0001 \u0001;
      public \u0005.\u0004 \u0001;

      public \u0006()
      {
        try
        {
        }
        catch (Exception ex)
        {
          \u0008.\u0005.\u0002(ex, (object) this);
          throw;
        }
      }

      public void \u0002()
      {
        try
        {
          this.\u0001.\u0002(this.\u0001);
        }
        catch (Exception ex)
        {
          \u0008.\u0005.\u0002(ex, (object) this);
          throw;
        }
      }
    }
  }
}
