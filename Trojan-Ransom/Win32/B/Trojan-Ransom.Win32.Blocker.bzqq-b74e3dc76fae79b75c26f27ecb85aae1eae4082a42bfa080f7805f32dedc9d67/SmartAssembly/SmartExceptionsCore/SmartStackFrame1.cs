// Decompiled with JetBrains decompiler
// Type: SmartAssembly.SmartExceptionsCore.SmartStackFrame1
// Assembly: o4tdggb3, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FA0844EB-EF82-404C-B76C-C092ABDB9392
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.bzqq-b74e3dc76fae79b75c26f27ecb85aae1eae4082a42bfa080f7805f32dedc9d67.exe

using System;
using System.Runtime.Serialization;

namespace SmartAssembly.SmartExceptionsCore
{
  [DoNotObfuscateTypeAttribute1]
  [Serializable]
  public class SmartStackFrame1 : ISerializable
  {
    public readonly int MethodID;
    public readonly object[] Objects;
    public readonly int ILOffset;
    public readonly int ExceptionStackDepth;

    public virtual void GetObjectData(SerializationInfo info, StreamingContext context)
    {
      info.AddValue("UnhandledException.MethodID", (object) this.MethodID, typeof (int));
      info.AddValue("UnhandledException.ILOffset", (object) this.ILOffset, typeof (int));
      info.AddValue("UnhandledException.ExceptionStackDepth", (object) this.ExceptionStackDepth, typeof (int));
      int num = this.Objects == null ? 0 : this.Objects.Length;
      info.AddValue("UnhandledException.Objects.Length", (object) num, typeof (int));
      for (int index = 0; index < num; ++index)
      {
        string name = string.Format("UnhandledException.Objects[{0}]", (object) index);
        try
        {
          if (this.Objects[index] == null)
            info.AddValue(name, (object) null, typeof (object));
          else
            info.AddValue(name, (object) (this.Objects[index].GetType().ToString() + " - " + this.Objects[index]), typeof (string));
        }
        catch (Exception ex)
        {
        }
      }
    }

    internal SmartStackFrame1(SerializationInfo info, StreamingContext context)
    {
      this.MethodID = info.GetInt32("UnhandledException.MethodID");
      this.ILOffset = info.GetInt32("UnhandledException.ILOffset");
      this.ExceptionStackDepth = info.GetInt32("UnhandledException.ExceptionStackDepth");
      int int32 = info.GetInt32("UnhandledException.Objects.Length");
      this.Objects = new object[int32];
      for (int index = 0; index < int32; ++index)
      {
        try
        {
          this.Objects[index] = info.GetValue(string.Format("UnhandledException.Objects[{0}]", (object) index), typeof (string));
        }
        catch (Exception ex)
        {
          this.Objects[index] = (object) "Could not deserialize the obect";
        }
      }
    }

    internal SmartStackFrame1(
      int methodID,
      object[] objects,
      int ilOffset,
      int exceptionStackDepth)
    {
      this.MethodID = methodID;
      this.ExceptionStackDepth = exceptionStackDepth;
      this.ILOffset = ilOffset;
      this.Objects = objects;
    }
  }
}
