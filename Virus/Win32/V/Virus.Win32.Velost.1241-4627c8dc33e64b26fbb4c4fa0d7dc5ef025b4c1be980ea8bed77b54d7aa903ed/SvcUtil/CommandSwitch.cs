// Decompiled with JetBrains decompiler
// Type: Microsoft.Tools.ServiceModel.SvcUtil.CommandSwitch
// Assembly: ComSvcConfig, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: 502D58B8-8905-498F-84D2-67D5F99987D4
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00009-msil\Virus.Win32.Velost.1241-4627c8dc33e64b26fbb4c4fa0d7dc5ef025b4c1be980ea8bed77b54d7aa903ed.exe

using System.Globalization;

namespace Microsoft.Tools.ServiceModel.SvcUtil
{
  internal class CommandSwitch
  {
    private readonly string name;
    private readonly string abbreviation;
    private readonly SwitchType switchType;

    internal CommandSwitch(string name, string abbreviation, SwitchType switchType)
    {
      this.name = name[0] == '/' || name[0] == '-' ? name.Substring(1).ToLower(CultureInfo.InvariantCulture) : name.ToLower(CultureInfo.InvariantCulture);
      this.abbreviation = abbreviation[0] == '/' || abbreviation[0] == '-' ? abbreviation.Substring(1).ToLower(CultureInfo.InvariantCulture) : abbreviation.ToLower(CultureInfo.InvariantCulture);
      this.switchType = switchType;
    }

    internal string Name => this.name;

    internal SwitchType SwitchType => this.switchType;

    internal bool Equals(string other)
    {
      string str = other[0] == '/' || other[0] == '-' ? other.Substring(1).ToLower(CultureInfo.InvariantCulture) : other.ToLower(CultureInfo.InvariantCulture);
      return this.name.Equals(str) || this.abbreviation.Equals(str);
    }

    internal static CommandSwitch FindSwitch(string name, CommandSwitch[] switches)
    {
      foreach (CommandSwitch commandSwitch in switches)
      {
        if (commandSwitch.Equals(name))
          return commandSwitch;
      }
      return (CommandSwitch) null;
    }
  }
}
