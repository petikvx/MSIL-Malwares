// Decompiled with JetBrains decompiler
// Type: @Ӝ
// Assembly: uLqhNaw2rJQahaaHEibmS0F8CAhQ12f0pD0UHJWVCL, Version=9.1.2.0, Culture=neutral, PublicKeyToken=null
// MVID: D212B58E-19EB-4690-837D-62FC76EFC9D2
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-c92d5d3e7959656b93039f2d0479f1cd50ca98907ea5aa0a925724b1dca475a3.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;
using System.Runtime.CompilerServices;

[DefaultMember("Item")]
internal sealed class \u0040Ӝ : 
  \u0040ә,
  IList<\u0040ә>,
  ICollection<\u0040ә>,
  IEnumerable<\u0040ә>,
  IEnumerable
{
  private List<\u0040ә> \u0040ӓ;
  internal Dictionary<string, \u0040ә> \u0040Ӕ;

  [MethodImpl(MethodImplOptions.NoInlining)]
  public \u0040Ӝ(string _param1)
  {
    int num = \u0040Ӝ.\u0040ӗ() ? 4 : 5;
    while (true)
    {
      switch (num)
      {
        case 0:
        case 5:
          \u0040Ӝ.\u0040ӕ();
          goto case 1;
        case 1:
        case 4:
          this.\u0040ӓ = new List<\u0040ә>();
          num = 2;
          continue;
        case 2:
          this.\u0040Ӕ = new Dictionary<string, \u0040ә>();
          goto case 3;
        case 3:
          // ISSUE: explicit constructor call
          base.\u002Ector(_param1);
          if (true)
          {
            num = 6;
            continue;
          }
          goto case 0;
        case 6:
          goto label_7;
        default:
          if (\u0040Ӝ.\u0040Ӗ())
          {
            num = 3;
            continue;
          }
          goto case 3;
      }
    }
label_7:;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  public int \u0023C(\u0040ә _param1) => this.\u0040ӓ.IndexOf(_param1);

  [MethodImpl(MethodImplOptions.NoInlining)]
  public void \u0023D(int _param1, \u0040ә _param2)
  {
    int num1 = 3;
    if (true)
      goto label_12;
label_1:
    this.\u0040Ӕ.Add((string) \u0040Ӝ.\u0040Ӛ((object) _param2), _param2);
    num1 = 13;
label_12:
    while (true)
    {
      bool flag1;
      bool flag2;
      bool flag3;
      int num2;
      switch (num1)
      {
        case 0:
          goto label_21;
        case 1:
          if (flag2)
          {
            if (true)
            {
              num1 = 11;
              continue;
            }
            goto label_21;
          }
          else
          {
            \u0040Ӝ.\u0040ӝ((object) _param2, (object) this);
            \u0040Ӝ.\u0040Ӗ();
            if (\u0040Ӝ.\u0040ӗ())
            {
              if (true)
              {
                num1 = 12;
                continue;
              }
              goto case 2;
            }
            else
            {
              if (!\u0040Ӝ.\u0040ӗ())
              {
                num1 = 8;
                continue;
              }
              goto label_27;
            }
          }
        case 2:
          if (flag1)
          {
            if (true)
            {
              num1 = 0;
              continue;
            }
            goto case 1;
          }
          else
          {
            if (_param1 < 0)
            {
              num2 = 1;
              break;
            }
            if (true)
            {
              num1 = 5;
              continue;
            }
            goto label_24;
          }
        case 3:
          flag1 = _param2 == null;
          num1 = 2;
          continue;
        case 4:
          goto label_3;
        case 5:
          num2 = _param1 >= \u0040Ӝ.\u0040ә((object) this.\u0040ӓ) ? 1 : 0;
          break;
        case 6:
          goto label_5;
        case 7:
          if (!flag3)
          {
            flag2 = \u0040ԝ.\u0040۳(this, (string) \u0040Ӝ.\u0040Ӛ((object) _param2));
            if (\u0040Ӝ.\u0040Ӗ())
            {
              num1 = 1;
              continue;
            }
            goto label_5;
          }
          else
            goto label_3;
        case 8:
        case 9:
          goto label_14;
        case 10:
        case 12:
          goto label_1;
        case 11:
          goto label_24;
        case 13:
          goto label_15;
        default:
          if (\u0040Ӝ.\u0040Ӗ())
          {
            num1 = 4;
            continue;
          }
          goto label_14;
      }
      if (num2 == 0)
      {
        flag3 = \u0040Ӝ.\u0040ӛ(\u0040Ӝ.\u0040Ӛ((object) _param2));
        num1 = 7;
      }
      else
        num1 = 6;
    }
label_3:
    throw new ArgumentException((string) \u0040Ӝ.\u0040Ә(462));
label_5:
    throw new ArgumentOutOfRangeException((string) \u0040Ӝ.\u0040Ә(448));
label_15:
    return;
label_14:
    this.\u0040ӓ.Insert(_param1, _param2);
    goto label_1;
label_21:
    throw new ArgumentNullException((string) \u0040Ӝ.\u0040Ә(436));
label_24:
    throw new ArgumentException((string) \u0040Ӝ.\u0040Ӝ(\u0040Ӝ.\u0040Ә(532), \u0040Ӝ.\u0040Ӛ((object) _param2), \u0040Ӝ.\u0040Ә(572)));
label_27:;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  public void \u0023E(int _param1)
  {
    int num = \u0040Ӝ.\u0040ӗ() ? 3 : 4;
    \u0040ә ә;
    while (true)
    {
      switch (num)
      {
        case 0:
        case 4:
          ә = this.\u0040ӓ[_param1];
          goto case 1;
        case 1:
        case 3:
          \u0040Ӝ.\u0040Ӟ((object) this.\u0040ӓ, _param1);
          goto case 2;
        case 2:
          this.\u0040Ӕ.Remove((string) \u0040Ӝ.\u0040Ӛ((object) ә));
          num = 5;
          continue;
        case 5:
          goto label_5;
        default:
          num = 2;
          continue;
      }
    }
label_5:;
  }

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public \u0040ә \u0023F(int _param1) => this.\u0040ӓ[_param1];

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public void \u0023G(int _param1, \u0040ә _param2)
  {
    int num;
    if (!\u0040Ӝ.\u0040ӗ())
      num = 6;
    else
      goto label_13;
label_9:
    bool flag;
    while (true)
    {
      switch (num)
      {
        case 0:
        case 6:
          flag = \u0040Ӝ.\u0040ӟ(\u0040Ӝ.\u0040Ӛ((object) this.\u0040ӓ[_param1]), \u0040Ӝ.\u0040Ӛ((object) _param2));
          goto case 1;
        case 1:
        case 2:
          if (flag)
          {
            num = 3;
            continue;
          }
          this.\u0040Ӕ[(string) \u0040Ӝ.\u0040Ӛ((object) _param2)] = _param2;
          if (true)
          {
            num = 7;
            continue;
          }
          goto case 7;
        case 3:
          this.\u0040Ӕ.Remove((string) \u0040Ӝ.\u0040Ӛ((object) this.\u0040ӓ[_param1]));
          if (true)
          {
            num = 4;
            continue;
          }
          goto case 5;
        case 4:
          this.\u0040Ӕ.Add((string) \u0040Ӝ.\u0040Ӛ((object) _param2), _param2);
          goto case 5;
        case 5:
          this.\u0040ӓ[_param1] = _param2;
          num = 8;
          continue;
        case 7:
          goto case 5;
        case 8:
          goto label_12;
        default:
          num = 5;
          continue;
      }
    }
label_12:
    return;
label_13:
    num = 2;
    if (true)
      goto label_9;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  public void Add(\u0040ә _param1)
  {
    int num = 4;
    while (true)
    {
      bool flag1;
      bool flag2;
      bool flag3;
      switch (num)
      {
        case 0:
          if (!flag1)
          {
            flag2 = \u0040Ӝ.\u0040ӛ(\u0040Ӝ.\u0040Ӛ((object) _param1));
            \u0040Ӝ.\u0040ӗ();
            if (\u0040Ӝ.\u0040Ӗ())
            {
              num = 8;
              continue;
            }
            if (true)
            {
              num = 1;
              continue;
            }
            goto label_20;
          }
          else
          {
            if (true)
            {
              num = 2;
              continue;
            }
            goto label_15;
          }
        case 2:
          goto label_5;
        case 3:
        case 8:
          if (flag2)
          {
            num = 6;
            continue;
          }
          flag3 = \u0040ԝ.\u0040۳(this, (string) \u0040Ӝ.\u0040Ӛ((object) _param1));
          break;
        case 4:
          flag1 = _param1 == null;
          if (true)
          {
            num = 0;
            continue;
          }
          goto case 9;
        case 6:
          goto label_15;
        case 7:
          this.\u0040ӓ.Add(_param1);
          if (\u0040Ӝ.\u0040Ӗ())
          {
            num = 9;
            continue;
          }
          break;
        case 9:
          this.\u0040Ӕ.Add((string) \u0040Ӝ.\u0040Ӛ((object) _param1), _param1);
          num = 11;
          continue;
        case 10:
          goto label_3;
        case 11:
          goto label_18;
      }
      if (!flag3)
      {
        \u0040Ӝ.\u0040ӝ((object) _param1, (object) this);
        num = 7;
      }
      else
        num = 10;
    }
label_3:
    throw new ArgumentException((string) \u0040Ӝ.\u0040Ӝ(\u0040Ӝ.\u0040Ә(532), \u0040Ӝ.\u0040Ӛ((object) _param1), \u0040Ӝ.\u0040Ә(572)));
label_5:
    throw new ArgumentNullException((string) \u0040Ӝ.\u0040Ә(436));
label_15:
    throw new ArgumentException((string) \u0040Ӝ.\u0040Ә(462));
label_18:
    return;
label_20:;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  public void \u0023I()
  {
    \u0040Ӝ.\u0040Ӡ((object) this.\u0040ӓ);
    \u0040Ӝ.\u0040ӡ((object) this.\u0040Ӕ);
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  public bool \u0023J(\u0040ә _param1)
  {
    int num1 = 2;
    while (true)
    {
      bool flag1;
      bool flag2;
      switch (num1)
      {
        case 0:
          goto label_4;
        case 1:
        case 6:
          if (!flag2)
          {
            flag1 = \u0040Ӝ.\u0040ӛ(\u0040Ӝ.\u0040Ӛ((object) _param1));
            break;
          }
          num1 = 0;
          continue;
        case 2:
          flag2 = _param1 == null;
          num1 = !\u0040Ӝ.\u0040Ӗ() ? 5 : 6;
          continue;
        case 4:
          goto label_1;
        case 7:
          goto label_12;
      }
      if (!flag1)
      {
        if (this.\u0040Ӕ.ContainsKey((string) \u0040Ӝ.\u0040Ӛ((object) _param1)))
        {
          if (true)
            num1 = 7;
          else
            goto label_4;
        }
        else
          goto label_13;
      }
      else
        num1 = 4;
    }
label_1:
    throw new ArgumentException((string) \u0040Ӝ.\u0040Ә(462));
label_4:
    throw new ArgumentNullException((string) \u0040Ӝ.\u0040Ә(436));
label_12:
    int num2 = this.\u0040Ӕ[(string) \u0040Ӝ.\u0040Ӛ((object) _param1)] == _param1 ? 1 : 0;
    goto label_14;
label_13:
    num2 = 0;
label_14:
    return num2 != 0;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  public void \u0023L(\u0040ә[] _param1, int _param2) => \u0040Ӝ.\u0040Ӣ((object) this.\u0040ӓ, (object) _param1, _param2);

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public int \u0023M() => \u0040Ӝ.\u0040ә((object) this.\u0040ӓ);

  [MethodImpl(MethodImplOptions.NoInlining)]
  public bool \u0023N(\u0040ә _param1)
  {
    int num1 = 10;
    bool flag1;
    bool flag2;
    bool flag3;
    bool flag4;
    while (true)
    {
      switch (num1)
      {
        case 0:
        case 8:
          flag2 = true;
          if (true)
          {
            num1 = 6;
            continue;
          }
          goto label_3;
        case 1:
          this.\u0040ӓ.Remove(_param1);
          goto case 0;
        case 2:
          goto label_3;
        case 3:
          goto label_8;
        case 4:
          if (!flag1)
          {
            flag4 = \u0040Ӝ.\u0040ӛ(\u0040Ӝ.\u0040Ӛ((object) _param1));
            int num2 = 9;
            num1 = \u0040Ӝ.\u0040ӗ() ? num2 : num2;
            continue;
          }
          num1 = 3;
          continue;
        case 5:
        case 11:
          if (!flag3)
          {
            flag2 = false;
            num1 = 12;
            continue;
          }
          goto case 7;
        case 6:
        case 12:
          goto label_18;
        case 7:
          this.\u0040Ӕ.Remove((string) \u0040Ӝ.\u0040Ӛ((object) _param1));
          if (!\u0040Ӝ.\u0040ӗ())
          {
            num1 = 1;
            continue;
          }
          goto label_8;
        case 9:
          if (!flag4)
          {
            flag3 = this.\u0023J(_param1);
            \u0040Ӝ.\u0040ӗ();
            num1 = !\u0040Ӝ.\u0040Ӗ() ? 0 : 11;
            continue;
          }
          num1 = 2;
          continue;
        case 10:
          flag1 = _param1 == null;
          if (\u0040Ӝ.\u0040Ӗ())
          {
            num1 = 4;
            continue;
          }
          goto case 0;
        default:
          if (true)
          {
            num1 = 7;
            continue;
          }
          goto label_18;
      }
    }
label_3:
    throw new ArgumentException((string) \u0040Ӝ.\u0040Ә(462));
label_8:
    throw new ArgumentNullException((string) \u0040Ӝ.\u0040Ә(436));
label_18:
    return flag2;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  public IEnumerator<\u0040ә> \u0023O() => (IEnumerator<\u0040ә>) this.\u0040ӓ.GetEnumerator();

  [MethodImpl(MethodImplOptions.NoInlining)]
  IEnumerator IEnumerable.\u0023P() => (IEnumerator) this.\u0040ӓ.GetEnumerator();

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  bool ICollection<\u0040ә>.\u0023Q() => false;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӕ() => \u0040ո.\u0040Ӕ();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040Ӗ() => true;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040ӗ() => false;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ә(int _param0) => (object) \u0040շ.\u0040ӻ(_param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static int \u0040ә(object _param0) => ((List<\u0040ә>) _param0).Count;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ӛ(object _param0) => (object) ((\u0040ә) _param0).\u0040ӗ();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040ӛ(object _param0) => string.IsNullOrEmpty((string) _param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ӝ(object _param0, object _param1, object _param2) => (object) ((string) _param0 + (string) _param1 + (string) _param2);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӝ(object _param0, object _param1) => ((\u0040ә) _param0).\u0040ӛ((\u0040ә) _param1);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӟ(object _param0, int _param1) => ((List<\u0040ә>) _param0).RemoveAt(_param1);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040ӟ(object _param0, object _param1) => (string) _param0 != (string) _param1;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӡ(object _param0) => ((List<\u0040ә>) _param0).Clear();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӡ(object _param0) => ((Dictionary<string, \u0040ә>) _param0).Clear();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӣ(object _param0, object _param1, int _param2) => ((List<\u0040ә>) _param0).CopyTo((\u0040ә[]) _param1, _param2);
}
