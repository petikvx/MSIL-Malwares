// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONArray
// Assembly: TimeSpanTok, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: ECAE311E-CE0C-4BF9-8C57-F98A452B360E
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-7480e4ba962590b3f14f4516861bb1aa80ffa08223a944ee6599cfe3b4e89bce.exe

using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONArray : JSONNode, IEnumerable
  {
    private List<JSONNode> m_List = new List<JSONNode>();

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 181027003;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ 1164249873)) % 9U)
          {
            case 1:
              if (aIndex < 0)
              {
                num3 = 1;
                break;
              }
              num1 = (int) num2 * 1490742004 ^ 2056664113;
              continue;
            case 2:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            case 3:
              num1 = (int) num2 * -1753282633 ^ 1335161034;
              continue;
            case 4:
              int num4 = flag ? -2124850681 : (num4 = -1251315394);
              num1 = num4 ^ (int) num2 * 380713554;
              continue;
            case 5:
              num1 = (int) num2 * 1525159245 ^ 116824921;
              continue;
            case 6:
              jsonNode = this.m_List[aIndex];
              num1 = 721858406;
              continue;
            case 7:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * -1987020954 ^ -101388241;
              continue;
            case 8:
              goto label_1;
            default:
              goto label_13;
          }
          flag = num3 != 0;
          num1 = 1246627749;
        }
label_13:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 551419237;
        while (true)
        {
          uint num2;
          int num3;
          switch ((num2 = (uint) (num1 ^ 1403380026)) % 9U)
          {
            case 0:
              num1 = (int) num2 * 209736261 ^ 2089724181;
              continue;
            case 1:
              if (aIndex < 0)
              {
                num3 = 1;
                break;
              }
              num1 = (int) num2 * 697294542 ^ 208981581;
              continue;
            case 2:
              this.m_List[aIndex] = value;
              num1 = 1032315982;
              continue;
            case 3:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            case 4:
              this.m_List.Add(value);
              num1 = (int) num2 * 341478763 ^ 1231868156;
              continue;
            case 5:
              goto label_3;
            case 6:
              num1 = (int) num2 * -1075776266 ^ 141249891;
              continue;
            case 7:
              num1 = (int) num2 * -427511173 ^ -254492137;
              continue;
            case 8:
              goto label_1;
            default:
              goto label_14;
          }
          int num4;
          num1 = num4 = num3 == 0 ? 1463424102 : (num4 = 422202521);
        }
label_3:
        return;
label_14:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 864511280;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1798881119)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * 2056322062 ^ 361806547;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set => this.m_List.Add(value);
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = -127808036;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -121221319)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              count = this.m_List.Count;
              num1 = (int) num2 * 1133492337 ^ 273379024;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = -1193284601;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1795573115)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            this.m_List.Add(aItem);
            num1 = (int) num2 * 1047224404 ^ 1226663703;
            continue;
          case 2:
            goto label_3;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public override JSONNode Remove(int aIndex)
    {
      if (aIndex < 0)
        goto label_4;
label_1:
      int num1 = 1968342836;
label_2:
      JSONNode jsonNode1;
      JSONNode jsonNode2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 852548233)) % 7U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * 1576682986 ^ -1584761386;
            continue;
          case 3:
            goto label_3;
          case 4:
            jsonNode1 = this.m_List[aIndex];
            this.m_List.RemoveAt(aIndex);
            num1 = 1546755276;
            continue;
          case 5:
            jsonNode2 = (JSONNode) null;
            num1 = (int) num2 * 424945165 ^ -1281497470;
            continue;
          case 6:
            jsonNode2 = jsonNode1;
            num1 = (int) num2 * 1218811674 ^ -1255610818;
            continue;
          default:
            goto label_10;
        }
      }
label_3:
      int num3 = aIndex >= this.m_List.Count ? 1 : 0;
      goto label_5;
label_10:
      return jsonNode2;
label_4:
      num3 = 1;
label_5:
      num1 = num3 != 0 ? 2136865083 : (num1 = 821624821);
      goto label_2;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      this.m_List.Remove(aNode);
label_1:
      int num1 = 1917649110;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 613204675)) % 4U)
        {
          case 0:
            num1 = (int) num2 * 121032219 ^ 2036885197;
            continue;
          case 1:
            jsonNode = aNode;
            num1 = (int) num2 * -683069011 ^ -1894226750;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONArray.\u003Cget_Childs\u003Ed__13 getChildsD13 = new JSONArray.\u003Cget_Childs\u003Ed__13(-2);
        getChildsD13.\u003C\u003E4__this = this;
label_1:
        int num1 = -116508599;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -751557425)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              childs = (IEnumerable<JSONNode>) getChildsD13;
              num1 = (int) num2 * -1140198866 ^ 1789515392;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return childs;
      }
    }

    public IEnumerator GetEnumerator()
    {
      bool enumerator1;
      // ISSUE: fault handler
      try
      {
        // ISSUE: reference to a compiler-generated field
        int num1 = this.\u003C\u003E1__state;
label_1:
        int num2 = 1272099150;
        List<JSONNode>.Enumerator enumerator;
        JSONNode N;
        while (true)
        {
          uint num3;
          switch ((num3 = (uint) (num2 ^ 255267435)) % 25U)
          {
            case 0:
              N = (JSONNode) null;
              num2 = (int) num3 * 1610175777 ^ -803499640;
              continue;
            case 1:
              num2 = (int) num3 * 758675102 ^ 1607316462;
              continue;
            case 2:
            case 23:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = 1636267038;
              continue;
            case 3:
              N = enumerator.Current;
              num2 = 1863891477;
              continue;
            case 4:
              int num4;
              num2 = num4 = num1 == 1 ? 1325059268 : (num4 = 483965319);
              continue;
            case 5:
              num2 = (int) num3 * -1557825441 ^ 843629053;
              continue;
            case 6:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = (int) num3 * -789963491 ^ -1824833190;
              continue;
            case 7:
              num2 = (int) num3 * -1338057238 ^ -868264279;
              continue;
            case 8:
              num2 = (int) num3 * 897521932 ^ 1548063161;
              continue;
            case 10:
            case 13:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -1;
              num2 = 1849232740;
              continue;
            case 11:
              enumerator = new List<JSONNode>.Enumerator();
              num2 = (int) num3 * 1424809959 ^ 600870759;
              continue;
            case 12:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E2__current = (object) N;
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = 1;
              num2 = (int) num3 * 278497228 ^ 1977295531;
              continue;
            case 14:
            case 15:
              goto label_24;
            case 16:
              enumerator1 = true;
              num2 = (int) num3 * 748619583 ^ 506765434;
              continue;
            case 17:
              enumerator = this.m_List.GetEnumerator();
              num2 = (int) num3 * 435322326 ^ 1135456777;
              continue;
            case 18:
              // ISSUE: reference to a compiler-generated method
              this.\u003C\u003Em__Finally1();
              num2 = (int) num3 * 141878511 ^ -877573550;
              continue;
            case 19:
              goto label_1;
            case 20:
              num2 = (int) num3 * 977250066 ^ -707773868;
              continue;
            case 21:
              enumerator1 = false;
              num2 = 10307608;
              continue;
            case 22:
              int num5 = num1 == 0 ? -294955577 : (num5 = -299577843);
              num2 = num5 ^ (int) num3 * -1729859520;
              continue;
            case 24:
              int num6;
              num2 = num6 = !enumerator.MoveNext() ? 16733143 : (num6 = 278519030);
              continue;
            default:
              goto label_22;
          }
        }
label_22:
        enumerator1 = false;
      }
      __fault
      {
        // ISSUE: reference to a compiler-generated method
        this.System\u002EIDisposable\u002EDispose();
      }
label_24:
      return enumerator1;
    }

    public override string ToString()
    {
      string str1 = "[ ";
label_1:
      int num1 = 2118610647;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1797573575)) % 3U)
        {
          case 1:
            num1 = (int) num2 * 1381946607 ^ 407895995;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_13:
        int num3 = !enumerator.MoveNext() ? 2039624137 : (num3 = 1326946674);
        JSONNode current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1797573575)) % 8U)
          {
            case 0:
              num3 = 1326946674;
              continue;
            case 1:
              str1 = JSONArray.\u200B‏‮‭⁬⁬‌‮⁬‬​‮‪⁫⁭​‌‏‫‌⁮⁯⁫‫‪⁮⁬⁫‏⁭‬‭‪⁯‪‎‍⁪‎‍‮(str1, ", ");
              num3 = (int) num4 * -157162247 ^ -1177427302;
              continue;
            case 2:
              num3 = (int) num4 * -1834717025 ^ -214098266;
              continue;
            case 3:
              goto label_13;
            case 4:
              str1 = JSONArray.\u200B‏‮‭⁬⁬‌‮⁬‬​‮‪⁫⁭​‌‏‫‌⁮⁯⁫‫‪⁮⁬⁫‏⁭‬‭‪⁯‪‎‍⁪‎‍‮(str1, JSONArray.\u202C⁪‎​‍⁯‏‭⁯‪‭⁭‏⁯⁭‍‭⁭‎⁬‎⁪‎‫‏⁬‌‫‌⁪⁯‏‍‌‭‬‏⁭⁪⁮‮((object) current));
              num3 = 615699852;
              continue;
            case 5:
              current = enumerator.Current;
              num3 = 1415708829;
              continue;
            case 7:
              int num5 = JSONArray.\u200C‏‍‭⁪‎⁮‮⁬‌‪‫⁮⁭⁪‬‬​​⁪‍⁫‌‫‌​‫‫‌‏‎​‍⁫⁬‎‏⁭‍‌‮(str1) <= 2 ? -989702739 : (num5 = -1305833032);
              num3 = num5 ^ (int) num4 * 1186741402;
              continue;
            default:
              goto label_15;
          }
        }
      }
label_15:
      string str2 = JSONArray.\u200B‏‮‭⁬⁬‌‮⁬‬​‮‪⁫⁭​‌‏‫‌⁮⁯⁫‫‪⁮⁬⁫‏⁭‬‭‪⁯‪‎‍⁪‎‍‮(str1, " ]");
label_16:
      int num6 = 1958366670;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ 1797573575)) % 3U)
        {
          case 0:
            goto label_16;
          case 2:
            num6 = (int) num7 * 1695752735 ^ 759014309;
            continue;
          default:
            goto label_19;
        }
      }
label_19:
      return str2;
    }

    public override string ToString(string aPrefix)
    {
      string str = "[ ";
label_1:
      int num1 = 2132629155;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 325331579)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -1056595983 ^ -1957879125;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator();
      try
      {
label_13:
        int num3 = enumerator.MoveNext() ? 708725573 : (num3 = 1524181197);
        JSONNode current;
        bool flag;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 325331579)) % 9U)
          {
            case 0:
              num3 = 708725573;
              continue;
            case 1:
              str = JSONArray.\u206A‭‫‏⁪​‮‌‮‏‍‎⁯​‪‪‎‮‪⁪⁫‭‏⁬‎⁭‏⁪‮‎‬‬‍‭‍⁫⁯⁮‫‫‮(str, "\n", aPrefix, "   ");
              num3 = 1591612552;
              continue;
            case 3:
              current = enumerator.Current;
              num3 = 883172051;
              continue;
            case 4:
              int num5 = !flag ? 2028962000 : (num5 = 231729484);
              num3 = num5 ^ (int) num4 * 807543377;
              continue;
            case 5:
              str = JSONArray.\u200B‏‮‭⁬⁬‌‮⁬‬​‮‪⁫⁭​‌‏‫‌⁮⁯⁫‫‪⁮⁬⁫‏⁭‬‭‪⁯‪‎‍⁪‎‍‮(str, ", ");
              num3 = (int) num4 * -619927732 ^ -1027058894;
              continue;
            case 6:
              goto label_13;
            case 7:
              str = JSONArray.\u200B‏‮‭⁬⁬‌‮⁬‬​‮‪⁫⁭​‌‏‫‌⁮⁯⁫‫‪⁮⁬⁫‏⁭‬‭‪⁯‪‎‍⁪‎‍‮(str, current.ToString(JSONArray.\u200B‏‮‭⁬⁬‌‮⁬‬​‮‪⁫⁭​‌‏‫‌⁮⁯⁫‫‪⁮⁬⁫‏⁭‬‭‪⁯‪‎‍⁪‎‍‮(aPrefix, "   ")));
              num3 = (int) num4 * -914658382 ^ -1633572433;
              continue;
            case 8:
              flag = JSONArray.\u200C‏‍‭⁪‎⁮‮⁬‌‪‫⁮⁭⁪‬‬​​⁪‍⁫‌‫‌​‫‫‌‏‎​‍⁫⁬‎‏⁭‍‌‮(str) > 3;
              num3 = (int) num4 * -1712548623 ^ -332979715;
              continue;
            default:
              goto label_20;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_16:
        int num6 = 220162275;
        while (true)
        {
          uint num7;
          switch ((num7 = (uint) (num6 ^ 325331579)) % 3U)
          {
            case 0:
              goto label_16;
            case 2:
              num6 = (int) num7 * 225524559 ^ -1507587447;
              continue;
            default:
              goto label_19;
          }
        }
label_19:;
      }
label_20:
      return JSONArray.\u206A‭‫‏⁪​‮‌‮‏‍‎⁯​‪‪‎‮‪⁪⁫‭‏⁬‎⁭‏⁪‮‎‬‬‍‭‍⁫⁯⁮‫‫‮(str, "\n", aPrefix, "]");
    }

    public override void Serialize(BinaryWriter aWriter)
    {
      JSONArray.\u206B‪‌​‭‫‫‌⁭⁮⁪‮‮‭‌⁯‍‮⁭‬⁫‪‬⁫‌‎‫⁫​‍⁮‏⁫⁮‭​‮‏‌‮(aWriter, (byte) 1);
      JSONArray.\u202D‮‎‎⁪‫‪⁪‪‭‬⁫‍⁮⁫‬‏‌‪⁪‮​⁯​‏⁪‭​‮‬‪‫‭‪⁯‬⁬⁬‌⁪‮(aWriter, this.m_List.Count);
label_1:
      int num1 = 1705451593;
      int index;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2076852637)) % 8U)
        {
          case 0:
            num1 = (int) num2 * 664701186 ^ 1730740752;
            continue;
          case 1:
            ++index;
            num1 = (int) num2 * 673276056 ^ 1369641928;
            continue;
          case 2:
            goto label_3;
          case 3:
            this.m_List[index].Serialize(aWriter);
            num1 = 1287850220;
            continue;
          case 4:
            index = 0;
            num1 = (int) num2 * -1195991827 ^ -628570695;
            continue;
          case 5:
            flag = index < this.m_List.Count;
            num1 = 928343642;
            continue;
          case 6:
            goto label_1;
          case 7:
            int num3 = !flag ? -1375407320 : (num3 = -160336975);
            num1 = num3 ^ (int) num2 * -2113060623;
            continue;
          default:
            goto label_10;
        }
      }
label_3:
      return;
label_10:;
    }

    static int \u200C‏‍‭⁪‎⁮‮⁬‌‪‫⁮⁭⁪‬‬​​⁪‍⁫‌‫‌​‫‫‌‏‎​‍⁫⁬‎‏⁭‍‌‮([In] string obj0) => obj0.Length;

    static string \u200B‏‮‭⁬⁬‌‮⁬‬​‮‪⁫⁭​‌‏‫‌⁮⁯⁫‫‪⁮⁬⁫‏⁭‬‭‪⁯‪‎‍⁪‎‍‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u202C⁪‎​‍⁯‏‭⁯‪‭⁭‏⁯⁭‍‭⁭‎⁬‎⁪‎‫‏⁬‌‫‌⁪⁯‏‍‌‭‬‏⁭⁪⁮‮([In] object obj0) => obj0.ToString();

    static string \u206A‭‫‏⁪​‮‌‮‏‍‎⁯​‪‪‎‮‪⁪⁫‭‏⁬‎⁭‏⁪‮‎‬‬‍‭‍⁫⁯⁮‫‫‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u206B‪‌​‭‫‫‌⁭⁮⁪‮‮‭‌⁯‍‮⁭‬⁫‪‬⁫‌‎‫⁫​‍⁮‏⁫⁮‭​‮‏‌‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u202D‮‎‎⁪‫‪⁪‪‭‬⁫‍⁮⁫‬‏‌‪⁪‮​⁯​‏⁪‭​‮‬‪‫‭‪⁯‬⁬⁬‌⁪‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);
  }
}
