// Decompiled with JetBrains decompiler
// Type: BatchRunner.Renderer
// Assembly: IDynamicMessageS, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 27E16815-1EE5-4D7C-AD78-EB45F6CA3CA3
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.05\Backdoor.Win32.Blakken.vqn-4ac70e6596359a19fddd3380edc192f01f7e789c9cf8dd3afa68fd5f9ef8bdb5.exe

using botDebug;
using PlanetDebug;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Drawing;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace BatchRunner
{
  public class Renderer : Panel
  {
    private DoubleMapper Double = new DoubleMapper();
    private Font font100 = Renderer.\u200D‌‬‌‏⁫⁮⁮⁮⁮⁮⁯‮‬‏‭‭‫⁫⁮⁮​⁪⁯‌‫‪‭⁭‭‎‏⁪‎​‭⁭⁪⁪‍‮("Courier New", 16f, FontStyle.Regular);
    private Font font75 = Renderer.\u200D‌‬‌‏⁫⁮⁮⁮⁮⁮⁯‮‬‏‭‭‫⁫⁮⁮​⁪⁯‌‫‪‭⁭‭‎‏⁪‎​‭⁭⁪⁪‍‮("Courier Newf", 14f, FontStyle.Regular);
    private Font font50 = Renderer.\u200D‌‬‌‏⁫⁮⁮⁮⁮⁮⁯‮‬‏‭‭‫⁫⁮⁮​⁪⁯‌‫‪‭⁭‭‎‏⁪‎​‭⁭⁪⁪‍‮("Courier New", 10f, FontStyle.Regular);
    private Font font25 = Renderer.\u200D‌‬‌‏⁫⁮⁮⁮⁮⁮⁯‮‬‏‭‭‫⁫⁮⁮​⁪⁯‌‫‪‭⁭‭‎‏⁪‎​‭⁭⁪⁪‍‮("Courier New", 8f, FontStyle.Regular);
    private Font font100b = Renderer.\u200D‌‬‌‏⁫⁮⁮⁮⁮⁮⁯‮‬‏‭‭‫⁫⁮⁮​⁪⁯‌‫‪‭⁭‭‎‏⁪‎​‭⁭⁪⁪‍‮("Courier New", 16f, FontStyle.Bold);
    private Font font75b = Renderer.\u200D‌‬‌‏⁫⁮⁮⁮⁮⁮⁯‮‬‏‭‭‫⁫⁮⁮​⁪⁯‌‫‪‭⁭‭‎‏⁪‎​‭⁭⁪⁪‍‮("Courier New", 14f, FontStyle.Bold);
    private Font font50b = Renderer.\u200D‌‬‌‏⁫⁮⁮⁮⁮⁮⁯‮‬‏‭‭‫⁫⁮⁮​⁪⁯‌‫‪‭⁭‭‎‏⁪‎​‭⁭⁪⁪‍‮("Courier New", 10f, FontStyle.Bold);
    private Font font25b = Renderer.\u200D‌‬‌‏⁫⁮⁮⁮⁮⁮⁯‮‬‏‭‭‫⁫⁮⁮​⁪⁯‌‫‪‭⁭‭‎‏⁪‎​‭⁭⁪⁪‍‮("Courier New", 8f, FontStyle.Bold);
    private Graphics _Canvas;
    private ColorDictionary MyColors;

    public Renderer()
    {
label_1:
      int num1 = 1907309740;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1353863557)) % 20U)
        {
          case 0:
            this.DrawUniverseStatistics = true;
            num1 = (int) num2 * 274669958 ^ 1187170512;
            continue;
          case 1:
            num1 = (int) num2 * -1692662857 ^ -392966091;
            continue;
          case 2:
            this.DrawPlanetStatistics = true;
            num1 = (int) num2 * -240549726 ^ -115301125;
            continue;
          case 3:
            num1 = (int) num2 * 2130450912 ^ 648182748;
            continue;
          case 4:
            num1 = (int) num2 * 319530473 ^ 751210410;
            continue;
          case 5:
            this.BarSpacing = 2;
            num1 = (int) num2 * -384625943 ^ 373466053;
            continue;
          case 6:
            this.DrawAttacklines = true;
            this.DrawFleetArrival = true;
            num1 = (int) num2 * 1841651027 ^ 1454112775;
            continue;
          case 7:
            this.BarWidth = 6;
            num1 = (int) num2 * -1564912172 ^ 271119554;
            continue;
          case 8:
            num1 = (int) num2 * 764092976 ^ 981514401;
            continue;
          case 9:
            num1 = (int) num2 * -763783393 ^ -1142917811;
            continue;
          case 10:
            num1 = (int) num2 * -1685066322 ^ 1116721245;
            continue;
          case 11:
            this.DrawGrid = true;
            num1 = (int) num2 * -702812193 ^ -462058738;
            continue;
          case 12:
            num1 = (int) num2 * -2092243307 ^ -1518853529;
            continue;
          case 13:
            this.DoubleBuffered = true;
            num1 = (int) num2 * -1901231522 ^ -1881788597;
            continue;
          case 14:
            num1 = (int) num2 * 1447111103 ^ -863421250;
            continue;
          case 15:
            this.DrawPlayerOne = true;
            num1 = (int) num2 * 153185173 ^ 596839318;
            continue;
          case 16:
            this.DrawPlayerTwo = true;
            num1 = (int) num2 * 180435718 ^ 877728950;
            continue;
          case 17:
            num1 = (int) num2 * 161106271 ^ -583925228;
            continue;
          case 18:
            goto label_1;
          case 19:
            goto label_3;
          default:
            goto label_22;
        }
      }
label_3:
      return;
label_22:;
    }

    protected override void OnPaintBackground(PaintEventArgs e)
    {
    }

    public bool DrawGrid { get; set; }

    public bool DrawAttacklines { get; set; }

    public bool DrawPlanetStatistics { get; set; }

    public bool DrawFleetArrival { get; set; }

    public bool DrawUniverseStatistics { get; set; }

    public bool DrawPlayerTwo { get; set; }

    public int BarSpacing { get; set; }

    public int BarWidth { get; set; }

    public bool DrawPlayerOne { get; set; }

    public IEnumerable<IPlanet> ShortestRoute { get; set; }

    public void Render(
      Game gameData,
      Image bgImage,
      ColorDictionary colors,
      Graphics canvas,
      botDebugBase getPlayerStats)
    {
      this._Canvas = canvas;
      this.MyColors = colors;
      try
      {
label_2:
        int num1 = -906068804;
        double num2;
        double num3;
        int num4;
        List<Planet> planets;
        PointF pointF1;
        int width;
        int height;
        List<Fleet> fleets;
        double num5;
        double num6;
        while (true)
        {
          uint num7;
          switch ((num7 = (uint) (num1 ^ -735044486)) % 13U)
          {
            case 0:
              goto label_2;
            case 1:
              num5 = this.Double.MAX_VALUE;
              num1 = (int) num7 * 48003121 ^ -1053472766;
              continue;
            case 2:
              num2 = this.Double.MIN_VALUE;
              num3 = this.Double.MIN_VALUE;
              num4 = 0;
              num1 = (int) num7 * -573989597 ^ 1384009531;
              continue;
            case 3:
              num1 = -1779776557;
              continue;
            case 4:
              fleets = gameData.Fleets;
              int num8 = bgImage == null ? 1761490532 : (num8 = 1245615468);
              num1 = num8 ^ (int) num7 * 2125448803;
              continue;
            case 5:
              num1 = (int) num7 * -7540876 ^ 652225019;
              continue;
            case 6:
              width = (int) ((double) Renderer.\u206B‬⁮‭⁪‫⁫⁭​‏⁫‬‌⁬‍⁮‬‎⁬‍‬‪‍⁯‏‮‮⁮⁯⁭‍‍⁭⁪‎⁫⁯⁪‏‮‮((Control) this) * 0.9);
              height = (int) ((double) Renderer.\u200E⁫⁬⁭‏‎‌‮‌‎⁫⁪‪⁪⁯‭‪‏‏​⁪⁪‏‭⁮‎‌⁪‏‎‍​‏‎⁪‍‌‭‏⁭‮((Control) this) * 0.9);
              num1 = (int) num7 * 1969881317 ^ -934641933;
              continue;
            case 7:
              planets = gameData.Planets;
              num1 = (int) num7 * 5023090 ^ -2138768807;
              continue;
            case 9:
              Renderer.\u202B‪⁮​‌‎‮⁫‍‬‍⁯‪⁬‬⁫‭‎⁫⁬‮‎⁭‌⁮‮⁭‮⁫‎‎‫‬‫‬⁯‍‌‌‮(this._Canvas, Renderer.\u202D‍‌‭‌‮‫‮‭⁮​‪⁬⁭⁫‬⁪​‎‍‫⁭‭‬⁭‮‪​‎⁮‭⁪‮‏⁮‭‌⁬‏⁭‮(), Renderer.\u200D⁮⁯‮⁮​‬‌‎‬⁪⁯⁫⁪‍‍‪⁭⁬⁪‭‭‭⁫​‬‌⁭‏‌⁯⁭⁮‏‍‫‮⁭⁮‪‮(this._Canvas));
              num1 = (int) num7 * 1946521241 ^ 240585522;
              continue;
            case 10:
              num6 = this.Double.MAX_VALUE;
              num1 = -125341422;
              continue;
            case 11:
              pointF1 = new PointF((float) (Renderer.\u206B‬⁮‭⁪‫⁫⁭​‏⁫‬‌⁬‍⁮‬‎⁬‍‬‪‍⁯‏‮‮⁮⁯⁭‍‍⁭⁪‎⁫⁯⁪‏‮‮((Control) this) - width - 30), (float) (Renderer.\u200E⁫⁬⁭‏‎‌‮‌‎⁫⁪‪⁪⁯‭‪‏‏​⁪⁪‏‭⁮‎‌⁪‏‎‍​‏‎⁪‍‌‭‏⁭‮((Control) this) - height - 15));
              num1 = (int) num7 * 1677058050 ^ -1343119066;
              continue;
            case 12:
              Renderer.\u206F⁯​⁫⁮‎⁫⁫⁫⁮‮‌⁯‌‮‍‪⁯‏‫‫‭‌‏⁪‏‮⁪‬⁮‍⁪‪‍‭​⁮‏⁮⁭‮(this._Canvas, bgImage, 0, 0);
              num1 = (int) num7 * -1944470185 ^ 1190172005;
              continue;
            default:
              goto label_15;
          }
        }
label_15:
        using (List<Planet>.Enumerator enumerator = planets.GetEnumerator())
        {
label_22:
          int num9 = !enumerator.MoveNext() ? -1987433848 : (num9 = -217483641);
          Planet current;
          bool flag1;
          bool flag2;
          bool flag3;
          bool flag4;
          while (true)
          {
            uint num10;
            switch ((num10 = (uint) (num9 ^ -735044486)) % 20U)
            {
              case 0:
                num9 = -217483641;
                continue;
              case 1:
                goto label_22;
              case 2:
                int num11 = !flag2 ? 1735692601 : (num11 = 1935793372);
                num9 = num11 ^ (int) num10 * 254091853;
                continue;
              case 3:
                flag3 = current.X < num5;
                num9 = (int) num10 * 965336132 ^ -328336355;
                continue;
              case 4:
                num6 = current.Y;
                num9 = (int) num10 * -1376876080 ^ -743429022;
                continue;
              case 5:
                current = enumerator.Current;
                num9 = -1492525351;
                continue;
              case 6:
                num5 = current.X;
                num9 = (int) num10 * -1096752490 ^ 68036343;
                continue;
              case 7:
                int num12 = flag3 ? -1506311941 : (num12 = -1392330112);
                num9 = num12 ^ (int) num10 * -1179605743;
                continue;
              case 8:
                int num13;
                num9 = num13 = current.GrowthRate <= num4 ? -1714794235 : (num13 = -892395114);
                continue;
              case 9:
                flag4 = current.Y > num3;
                num9 = -996284896;
                continue;
              case 11:
                num9 = -615691921;
                continue;
              case 12:
                num4 = current.GrowthRate;
                num9 = (int) num10 * -985221935 ^ -910611287;
                continue;
              case 13:
                num3 = current.Y;
                num9 = (int) num10 * -1484618060 ^ -394591343;
                continue;
              case 14:
                int num14 = flag4 ? -25142223 : (num14 = -460139585);
                num9 = num14 ^ (int) num10 * 1965869505;
                continue;
              case 15:
                flag1 = current.Y < num6;
                num9 = -518703696;
                continue;
              case 16:
                num2 = current.X;
                num9 = (int) num10 * 1344297980 ^ -1484803957;
                continue;
              case 17:
                flag2 = current.X > num2;
                num9 = -183114832;
                continue;
              case 18:
                int num15 = !flag1 ? 612402864 : (num15 = 1641921068);
                num9 = num15 ^ (int) num10 * 764321301;
                continue;
              case 19:
                num9 = (int) num10 * 1864120586 ^ -658128413;
                continue;
              default:
                goto label_38;
            }
          }
        }
label_38:
        double num16 = num5 - 1.0;
label_39:
        int num17 = -324043557;
        int num18;
        int[] planetCounter;
        PointF pointF2;
        float num19;
        PointF pointF3;
        PointF topLeft1;
        RectangleF rectangleF1;
        PointF topLeft2;
        int index;
        int[] growthRatesCounter;
        int[] inbaseCounter;
        float num20;
        PointF topLeft3;
        PointF topLeft4;
        string text1;
        bool drawGrid;
        int[] numArray1;
        int num21;
        float y1;
        double num22;
        Point[] pointArray;
        while (true)
        {
          uint num23;
          switch ((num23 = (uint) (num17 ^ -735044486)) % 32U)
          {
            case 0:
              int num24 = !drawGrid ? -346737981 : (num24 = -263472053);
              num17 = num24 ^ (int) num23 * -876691257;
              continue;
            case 1:
              ++num2;
              num17 = (int) num23 * 147701565 ^ 144501697;
              continue;
            case 2:
              num21 = (int) num3 - (int) num6;
              num17 = (int) num23 * -1476146582 ^ 1675413426;
              continue;
            case 3:
              num17 = (int) num23 * -1082079738 ^ 218547057;
              continue;
            case 4:
              topLeft4 = new PointF(rectangleF1.Right, y1);
              Renderer.\u202D⁮‮‏‌​‏‎‬⁮‫‌⁭‭⁬‏⁭‌⁪​​‎⁬‏‭⁮⁪‌‍⁮‭‬‏‌‭‌‌‍‪⁮‮(this._Canvas, this.MyColors.GetPen(RenderColor.GridLine), topLeft3, topLeft4);
              num17 = (int) num23 * 1568932546 ^ -694431828;
              continue;
            case 5:
              float x = pointF2.X + num19 * pointF3.X;
              topLeft1 = new PointF(x, rectangleF1.Top);
              topLeft2 = new PointF(x, rectangleF1.Bottom);
              num17 = -2145056446;
              continue;
            case 6:
              --num6;
              ++num3;
              num17 = (int) num23 * 1337411626 ^ -2018780895;
              continue;
            case 7:
              num18 = (int) num2 - (int) num16;
              num17 = (int) num23 * 1642920340 ^ -1139490284;
              continue;
            case 8:
              int num25;
              num17 = num25 = (double) num19 > (double) num18 ? -2138427935 : (num25 = -89722113);
              continue;
            case 9:
              this.WriteTextInElLipseWithBorder(RenderColor.GridDark, RenderColor.GridLight, (object) text1, this.font50, topLeft2, false, false);
              num17 = (int) num23 * 2013659317 ^ -1161206315;
              continue;
            case 10:
              planetCounter = new int[4];
              num17 = (int) num23 * -1224011932 ^ -1006014876;
              continue;
            case 11:
              y1 = pointF2.Y + ((float) num3 - num20) * pointF3.Y;
              num17 = (int) num23 * -854009188 ^ 1178949171;
              continue;
            case 13:
              drawGrid = this.DrawGrid;
              num17 = (int) num23 * -1702136208 ^ 1258814826;
              continue;
            case 14:
              num17 = (int) num23 * -2020539340 ^ -312267154;
              continue;
            case 15:
              num17 = (int) num23 * -1689206163 ^ 97543715;
              continue;
            case 16:
              goto label_39;
            case 17:
              num17 = (int) num23 * 267364738 ^ 1671062827;
              continue;
            case 18:
              ++num19;
              num17 = (int) num23 * -1249960617 ^ 1645242988;
              continue;
            case 19:
              num19 = (float) (int) num16;
              num17 = (int) num23 * -465446347 ^ 805757501;
              continue;
            case 20:
              rectangleF1 = new RectangleF(pointF1.X, pointF1.Y, (float) width, (float) height);
              pointF2 = new PointF(rectangleF1.Left - (float) num16 * pointF3.X, rectangleF1.Top - (float) num6 * pointF3.Y);
              num17 = (int) num23 * 1160434985 ^ 788631843;
              continue;
            case 21:
              int num26;
              num17 = num26 = (double) num20 > (double) num21 ? -1932789543 : (num26 = -189587379);
              continue;
            case 22:
              numArray1 = new int[planets.Count];
              num17 = (int) num23 * -1050428678 ^ 239510312;
              continue;
            case 23:
              num17 = -806621743;
              continue;
            case 24:
              Renderer.\u202D⁮‮‏‌​‏‎‬⁮‫‌⁭‭⁬‏⁭‌⁪​​‎⁬‏‭⁮⁪‌‍⁮‭‬‏‌‭‌‌‍‪⁮‮(this._Canvas, this.MyColors.GetPen(RenderColor.GridLine), topLeft1, topLeft2);
              text1 = num19.ToString();
              this.WriteTextInElLipseWithBorder(RenderColor.GridDark, RenderColor.GridLight, (object) text1, this.font50, topLeft1, true, false);
              num17 = (int) num23 * 1390630985 ^ 1943061739;
              continue;
            case 25:
              index = 0;
              growthRatesCounter = new int[4];
              inbaseCounter = new int[4];
              num17 = -1488417200;
              continue;
            case 26:
              ++num20;
              num17 = (int) num23 * -220880321 ^ 641130057;
              continue;
            case 27:
              num20 = (float) (int) num6;
              num17 = (int) num23 * -879501063 ^ 1780389676;
              continue;
            case 28:
              pointF3 = new PointF((float) width / (float) num18, (float) height / (float) num21);
              num17 = (int) num23 * 1809983924 ^ -650508683;
              continue;
            case 29:
              topLeft3 = new PointF(pointF1.X, y1);
              num17 = (int) num23 * -739900320 ^ 739400670;
              continue;
            case 30:
              string text2 = num20.ToString();
              this.WriteTextInElLipseWithBorder(RenderColor.GridDark, RenderColor.GridLight, (object) text2, this.font50, topLeft3, true, true);
              this.WriteTextInElLipseWithBorder(RenderColor.GridDark, RenderColor.GridLight, (object) text2, this.font50, topLeft4, false, false);
              num17 = (int) num23 * -544493450 ^ 327702145;
              continue;
            case 31:
              num22 = 5.0 + (double) pointF3.X / (double) num4;
              pointArray = new Point[planets.Count];
              num17 = (int) num23 * -561495009 ^ -348105201;
              continue;
            default:
              goto label_71;
          }
        }
label_71:
        List<Planet>.Enumerator enumerator1 = planets.GetEnumerator();
        try
        {
label_75:
          int num27 = !enumerator1.MoveNext() ? -1493461691 : (num27 = -334733920);
          Point point;
          int y2;
          Planet current;
          Pen pen;
          bool flag;
          int x1;
          int y3;
          double num28;
          int x2;
          double num29;
          Brush brush;
          double num30;
          while (true)
          {
            uint num31;
            switch ((num31 = (uint) (num27 ^ -735044486)) % 32U)
            {
              case 0:
                Renderer.\u200D⁯‌⁫⁯‎‬⁮⁯‭‍‌‮⁯‏⁯‭‬‮⁯‎‫⁪⁯⁭‎‪‭‎‌⁮‎‭⁯⁬‍‏⁯‍‍‮(this._Canvas, pen, (int) num29, (int) num30, (int) num28, (int) num28);
                num27 = (int) num31 * 1350140001 ^ 1687912324;
                continue;
              case 1:
                num27 = (int) num31 * -323613741 ^ -876900919;
                continue;
              case 2:
                num27 = -900387167;
                continue;
              case 3:
                num27 = (int) num31 * 1325257635 ^ 811126460;
                continue;
              case 4:
                num27 = -334733920;
                continue;
              case 5:
                pen = this.MyColors.GetLightPen(current.Owner);
                int num32 = current.GrowthRate == 0 ? -1387396750 : (num32 = -1426042036);
                num27 = num32 ^ (int) num31 * 848014232;
                continue;
              case 6:
                numArray1[index++] = current.Owner;
                num27 = (int) num31 * 427101439 ^ -1636239276;
                continue;
              case 7:
                num27 = (int) num31 * 1290940720 ^ 487551217;
                continue;
              case 8:
                flag = getPlayerStats.QueryPlanetCanSurviveAttack(current.PlanetID);
                num27 = (int) num31 * 691434424 ^ -1272567065;
                continue;
              case 9:
                num27 = (int) num31 * -783168092 ^ -294155751;
                continue;
              case 10:
                brush = this.MyColors.GetLightBrush(current.Owner);
                num27 = (int) num31 * -151441710 ^ -563100244;
                continue;
              case 11:
                inbaseCounter[current.Owner] += current.NumShips;
                num27 = (int) num31 * 1245332028 ^ -1583342026;
                continue;
              case 12:
                growthRatesCounter[3] += current.GrowthRate;
                num27 = (int) num31 * 2015879745 ^ -774747939;
                continue;
              case 13:
                point = new Point(x1, y3);
                pointArray[index] = point;
                num27 = (int) num31 * 99247708 ^ -1166962544;
                continue;
              case 14:
                flag = true;
                int num33;
                num27 = num33 = getPlayerStats == null ? -1318938073 : (num33 = -861677684);
                continue;
              case 15:
                pen = this.MyColors.GetDarkPen(current.Owner);
                num27 = (int) num31 * 766577744 ^ -1890616544;
                continue;
              case 16:
                num27 = (int) num31 * 965159931 ^ 66162969;
                continue;
              case 17:
                num28 = num22 * ((double) current.GrowthRate + 0.5);
                num29 = (double) x2 - num28 / 2.0;
                num27 = (int) num31 * 1273490017 ^ 965489463;
                continue;
              case 18:
                y2 = point.Y;
                num27 = (int) num31 * 182798550 ^ -24471481;
                continue;
              case 19:
                brush = Renderer.\u202B‫‭⁮⁬⁫⁬‮‫⁪⁪‪⁯‬​⁫‎‍⁮⁬‍‍‏​‪‪‮​‌‏‬‭‎‍​⁫‮⁬‮‫‮();
                num27 = (int) num31 * 99948620 ^ -174142921;
                continue;
              case 20:
                x2 = point.X;
                num27 = (int) num31 * 1434388753 ^ -1737120228;
                continue;
              case 21:
                x1 = (int) ((double) pointF2.X + current.X * (double) pointF3.X);
                y3 = (int) ((double) rectangleF1.Bottom - current.Y * (double) pointF3.Y);
                num27 = (int) num31 * -358068288 ^ 2141799319;
                continue;
              case 22:
                num27 = (int) num31 * -1040562484 ^ 1683126490;
                continue;
              case 23:
                ++planetCounter[3];
                num27 = (int) num31 * 154041432 ^ -2063644953;
                continue;
              case 24:
                inbaseCounter[3] += current.NumShips;
                ++planetCounter[current.Owner];
                num27 = (int) num31 * -1433052075 ^ -239453163;
                continue;
              case 25:
                brush = this.MyColors.GetDarkBrush(current.Owner);
                num27 = (int) num31 * 2141238037 ^ -51927406;
                continue;
              case 26:
                current = enumerator1.Current;
                growthRatesCounter[current.Owner] += current.GrowthRate;
                num27 = -222000522;
                continue;
              case 27:
                Renderer.\u206B​‌‭⁫⁫‭⁪‭​‏⁪​⁮‎⁭‮⁬‏‪⁭‭‎‭​‏‌‪‎⁬⁮​⁯⁭⁯⁮​⁭⁭‍‮(this._Canvas, brush, (int) num29, (int) num30, (int) num28, (int) num28);
                num27 = -1947974277;
                continue;
              case 28:
                num30 = (double) y2 - num28 / 2.0;
                num27 = (int) num31 * 1459262653 ^ -1315834609;
                continue;
              case 29:
                int num34;
                num27 = num34 = flag ? -1704462248 : (num34 = -1104343239);
                continue;
              case 30:
                goto label_75;
              default:
                goto label_110;
            }
          }
        }
        finally
        {
          enumerator1.Dispose();
label_106:
          int num35 = -360215716;
          while (true)
          {
            uint num36;
            switch ((num36 = (uint) (num35 ^ -735044486)) % 3U)
            {
              case 0:
                goto label_106;
              case 2:
                num35 = (int) num36 * 172146279 ^ 2029309726;
                continue;
              default:
                goto label_109;
            }
          }
label_109:;
        }
label_110:
        if (this.ShortestRoute != null)
        {
label_111:
          int num37 = -1188504840;
          Planet planet;
          while (true)
          {
            uint num38;
            switch ((num38 = (uint) (num37 ^ -735044486)) % 5U)
            {
              case 0:
                num37 = (int) num38 * 712899146 ^ -2143279640;
                continue;
              case 1:
                num37 = (int) num38 * -1985249112 ^ -1482781352;
                continue;
              case 2:
                goto label_111;
              case 3:
                planet = (Planet) null;
                num37 = (int) num38 * 65615205 ^ 966947714;
                continue;
              default:
                goto label_116;
            }
          }
label_116:
          IEnumerator<IPlanet> enumerator2 = this.ShortestRoute.GetEnumerator();
          try
          {
label_125:
            int num39 = Renderer.\u206B‎‫‌⁮‪‍‮⁮‫⁭‏‭⁮⁪‌⁯‌‏‎‪‏⁭‌⁫⁭‌‎‬‎‬‭⁮‌‪⁫⁬⁬‌‏‮((IEnumerator) enumerator2) ? -1363614338 : (num39 = -1806561679);
            Planet current;
            while (true)
            {
              uint num40;
              switch ((num40 = (uint) (num39 ^ -735044486)) % 10U)
              {
                case 0:
                  num39 = -1363614338;
                  continue;
                case 2:
                  num39 = (int) num40 * 2018122644 ^ -1722802320;
                  continue;
                case 3:
                  Point point1 = pointArray[planet.PlanetID];
                  Point point2 = pointArray[current.PlanetID];
                  Renderer.\u202A​‌‭‪‮⁫‫⁯‫⁮‬‌‍⁪‮​‌​‎‬‮‮‪‮‮‍⁪‬⁭⁬⁯⁭⁪⁭‌​‍‫‌‮(this._Canvas, Renderer.\u206D‫‮‫‮⁫‬‮‌⁭‬⁭⁫‍‍⁭‫‭⁮‫‏⁪⁫‫‫‍‭‍‌⁭⁭‭‎‮⁪⁮⁫⁯⁬‬‮(), point1, point2);
                  num39 = (int) num40 * -1651286815 ^ -516077260;
                  continue;
                case 4:
                  int num41 = planet == null ? -440324963 : (num41 = -523630931);
                  num39 = num41 ^ (int) num40 * -634398987;
                  continue;
                case 5:
                  num39 = (int) num40 * 678639034 ^ -676238638;
                  continue;
                case 6:
                  current = (Planet) enumerator2.Current;
                  num39 = -236056072;
                  continue;
                case 7:
                  planet = current;
                  num39 = -1379990457;
                  continue;
                case 8:
                  num39 = (int) num40 * 113208289 ^ 738171505;
                  continue;
                case 9:
                  goto label_125;
                default:
                  goto label_134;
              }
            }
          }
          finally
          {
            if (enumerator2 != null)
            {
label_129:
              int num42 = -662491063;
              while (true)
              {
                uint num43;
                switch ((num43 = (uint) (num42 ^ -735044486)) % 4U)
                {
                  case 0:
                    goto label_129;
                  case 2:
                    num42 = (int) num43 * 416377011 ^ 240765653;
                    continue;
                  case 3:
                    Renderer.\u202E⁯‏‏‪‮‭‪‌⁮‌‫⁬⁬‎⁮‮‭⁫‮‏⁪‮‪‬‭‌​⁫​‏⁭‫‬‏⁫‬‪⁯‬‮((IDisposable) enumerator2);
                    num42 = (int) num43 * -1896938368 ^ 256605916;
                    continue;
                  default:
                    goto label_133;
                }
              }
            }
label_133:;
          }
label_134:;
        }
        else
          goto label_139;
label_135:
        int num44 = -1061650761;
label_136:
        int[] numArray2;
        int[] inTransitCounter;
        int[] numArray3;
        int[] numArray4;
        while (true)
        {
          uint num45;
          int num46;
          bool flag5;
          int num47;
          switch ((num45 = (uint) (num44 ^ -735044486)) % 8U)
          {
            case 0:
              goto label_135;
            case 1:
label_138:
              num44 = -851523794;
              continue;
            case 2:
              num46 = 1;
              num44 = (int) num45 * 326682387 ^ -1890684421;
              continue;
            case 3:
              numArray4 = new int[planets.Count];
              num44 = (int) num45 * -1272432509 ^ 127464589;
              continue;
            case 5:
              goto label_139;
            case 6:
              numArray2 = new int[planets.Count];
              num44 = (int) num45 * -733862406 ^ 1269757820;
              continue;
            case 7:
label_224:
              flag5 = num46 < 3;
              num47 = -1033251147;
              goto label_219;
            default:
              List<Fleet>.Enumerator enumerator3 = fleets.GetEnumerator();
              try
              {
label_198:
                int num48 = !enumerator3.MoveNext() ? -1902563672 : (num48 = -1164865866);
                while (true)
                {
                  uint num49;
                  bool flag6;
                  Fleet current;
                  bool shouldDrawPlayer;
                  Pen pen;
                  Point point3;
                  PointF topLeft5;
                  bool flag7;
                  float num50;
                  Point point4;
                  bool flag8;
                  bool flag9;
                  RectangleF rectangleF2;
                  SizeF sizeF;
                  RenderColor darkColor;
                  RenderColor lightColor;
                  int num51;
                  int num52;
                  int num53;
                  switch ((num49 = (uint) (num48 ^ -735044486)) % 57U)
                  {
                    case 0:
                      num48 = (int) num49 * -1851766799 ^ -1290215545;
                      continue;
                    case 1:
                      if (num46 == 1)
                      {
                        num48 = (int) num49 * -1107083498 ^ -779298478;
                        continue;
                      }
                      num51 = 0;
                      goto label_210;
                    case 2:
                      num48 = (int) num49 * -2104771794 ^ -1773486699;
                      continue;
                    case 3:
                      num48 = (int) num49 * -1761105351 ^ -1569443013;
                      continue;
                    case 4:
                      num48 = (int) num49 * -2137215398 ^ 920011836;
                      continue;
                    case 5:
                      flag8 = num46 == 1;
                      num48 = (int) num49 * 2090791449 ^ -1421672433;
                      continue;
                    case 6:
                      int num54 = !flag9 ? 86927787 : (num54 = 763258914);
                      num48 = num54 ^ (int) num49 * -242332531;
                      continue;
                    case 7:
                      if (num46 == 1)
                      {
                        num48 = (int) num49 * -1285739847 ^ 486880785;
                        continue;
                      }
                      num52 = 0;
                      goto label_174;
                    case 8:
                      num48 = (int) num49 * -299927544 ^ 2005492538;
                      continue;
                    case 9:
                      num48 = (int) num49 * -1639412584 ^ -2048849359;
                      continue;
                    case 10:
                      int num55 = flag7 ? -593729794 : (num55 = -278862356);
                      num48 = num55 ^ (int) num49 * 953586661;
                      continue;
                    case 11:
                      if ((double) num50 > 0.99)
                      {
                        num53 = 1;
                        break;
                      }
                      num48 = (int) num49 * 1984965436 ^ -453664135;
                      continue;
                    case 12:
                      num48 = (int) num49 * 1136123889 ^ 816191867;
                      continue;
                    case 13:
                      num48 = (int) num49 * -1719604423 ^ 1075636957;
                      continue;
                    case 14:
                      num48 = (int) num49 * -1784385783 ^ 26227159;
                      continue;
                    case 15:
                      current = enumerator3.Current;
                      shouldDrawPlayer = this.DetermineShouldDrawPlayer(current.Owner);
                      num48 = -1228302635;
                      continue;
                    case 16:
                      sizeF = Renderer.\u202E⁮⁮‪‍⁭⁯‌⁫‮​‌‌‭‍⁪‫⁬‮‎⁯‫⁪‭⁮‬‬‫⁮⁭‍‌‭​⁯​⁬​‌⁮‮(this._Canvas, current.NumShips.ToString(), this.font100);
                      num48 = (int) num49 * 8861270 ^ 842962109;
                      continue;
                    case 17:
                      numArray4[current.DestinationPlanet] -= current.NumShips;
                      num48 = (int) num49 * 356320002 ^ 649615338;
                      continue;
                    case 18:
                      pen = this.MyColors.GetPen(RenderColor.FleetOutgoingAttackLine);
                      num48 = (int) num49 * -95538758 ^ -1157535846;
                      continue;
                    case 19:
                      goto label_198;
                    case 20:
                      num48 = (int) num49 * -239692589 ^ 1239650237;
                      continue;
                    case 21:
                      inTransitCounter[current.Owner] += current.NumShips;
                      num48 = (int) num49 * -115533561 ^ -1363472881;
                      continue;
                    case 22:
                      num48 = (int) num49 * 1879834925 ^ 1589084990;
                      continue;
                    case 23:
                      num51 = !this.DrawAttacklines ? 1 : 0;
                      goto label_210;
                    case 24:
                      num48 = -923707607;
                      continue;
                    case 25:
                      num52 = this.DrawAttacklines ? 1 : 0;
                      goto label_174;
                    case 26:
                      num48 = -71918899;
                      continue;
                    case 27:
                      pen = this.MyColors.GetPen(RenderColor.FleetIncomingAttackLine);
                      Renderer.\u200F⁫‏‏⁬‮⁫‏‪⁫‎‮‍‭‮‍⁭⁫‪⁮‪‫‍⁭‌‪‮‪‍⁬‏‌⁪⁭‭⁭‭‍‭‍‮(this._Canvas, pen, (float) (point3.X + 1), (float) point3.Y, topLeft5.X + 1f, topLeft5.Y);
                      num48 = (int) num49 * -776103157 ^ -1043591910;
                      continue;
                    case 28:
                      if (num46 != 2)
                      {
                        num48 = -977133546;
                        continue;
                      }
                      num51 = 1;
                      goto label_210;
                    case 29:
                      num48 = -1544047273;
                      continue;
                    case 30:
                      this.WriteTextInElLipseWithBorder(RenderColor.FleetDistanceDark, RenderColor.FleetDistanceLight, (object) current.TurnsRemaining, this.font25, topLeft5, true, true);
                      num48 = (int) num49 * 2081807517 ^ 1581558264;
                      continue;
                    case 31:
                      point4 = pointArray[current.SourcePlanet];
                      num48 = -1353776672;
                      continue;
                    case 32:
                      pen = this.MyColors.GetPen(RenderColor.FleetDefensiveLine);
                      num48 = (int) num49 * -723565660 ^ 1589933216;
                      continue;
                    case 33:
                      numArray3[current.DestinationPlanet] -= current.NumShips;
                      num48 = -1206062008;
                      continue;
                    case 34:
                      num53 = (double) num50 < 0.01 ? 1 : 0;
                      break;
                    case 35:
                      num48 = (int) num49 * 7347111 ^ 1174036215;
                      continue;
                    case 36:
                      int num56 = current.Owner == 1 ? 221043874 : (num56 = 216303397);
                      num48 = num56 ^ (int) num49 * 697523008;
                      continue;
                    case 37:
                      numArray3[current.DestinationPlanet] += current.NumShips;
                      numArray2[current.DestinationPlanet] += current.NumShips;
                      num48 = (int) num49 * -2047618479 ^ 1256165004;
                      continue;
                    case 38:
                      Renderer.\u200F⁫‏‏⁬‮⁫‏‪⁫‎‮‍‭‮‍⁭⁫‪⁮‪‫‍⁭‌‪‮‪‍⁬‏‌⁪⁭‭⁭‭‍‭‍‮(this._Canvas, pen, (float) point3.X, (float) (point3.Y + 1), topLeft5.X, topLeft5.Y + 1f);
                      num48 = (int) num49 * 309413758 ^ 1360589591;
                      continue;
                    case 39:
                      inTransitCounter[3] += current.NumShips;
                      flag6 = current.Owner == planets[current.DestinationPlanet].Owner;
                      num48 = (int) num49 * 369153310 ^ -97414169;
                      continue;
                    case 40:
                      int num57 = !flag6 ? -65373920 : (num57 = -26624351);
                      num48 = num57 ^ (int) num49 * 1421213918;
                      continue;
                    case 41:
                      num48 = -1164865866;
                      continue;
                    case 42:
                      int num58 = shouldDrawPlayer ? 1578664295 : (num58 = 444244300);
                      num48 = num58 ^ (int) num49 * -1535729404;
                      continue;
                    case 43:
                      num48 = -1155069122;
                      continue;
                    case 44:
                      num48 = (int) num49 * 1116130371 ^ -443224707;
                      continue;
                    case 46:
                      int num59 = flag8 ? 366007193 : (num59 = 226183207);
                      num48 = num59 ^ (int) num49 * 1135054900;
                      continue;
                    case 47:
                      int num60 = (current.Owner - 1) * 2;
                      float num61 = (float) (point3.X - point4.X + num60);
                      float num62 = (float) (point3.Y - point4.Y + num60);
                      topLeft5 = new PointF((float) point4.X + num61 * num50 + (float) num60, (float) point4.Y + num62 * num50 + (float) num60);
                      num48 = -2122111432;
                      continue;
                    case 48:
                      rectangleF2 = this.WriteTextInElLipseWithBorder(darkColor, lightColor, (object) current.NumShips, this.font100b, topLeft5, false, false);
                      int num63 = this.DrawFleetArrival ? 1211945304 : (num63 = 1342073603);
                      num48 = num63 ^ (int) num49 * -1439946849;
                      continue;
                    case 49:
                      point3 = pointArray[current.DestinationPlanet];
                      num48 = (int) num49 * -17013867 ^ 1187749739;
                      continue;
                    case 50:
                      flag7 = numArray1[current.DestinationPlanet] == current.Owner;
                      num48 = (int) num49 * -55243147 ^ 775369369;
                      continue;
                    case 51:
                      Renderer.\u202D⁮‮‏‌​‏‎‬⁮‫‌⁭‭⁬‏⁭‌⁪​​‎⁬‏‭⁮⁪‌‍⁮‭‬‏‌‭‌‌‍‪⁮‮(this._Canvas, pen, (PointF) point3, topLeft5);
                      num48 = -306146687;
                      continue;
                    case 52:
                      num48 = -710701597;
                      continue;
                    case 53:
                      num48 = -1632462608;
                      continue;
                    case 54:
                      topLeft5 = new PointF(topLeft5.X - sizeF.Width / 2f, topLeft5.Y - sizeF.Height / 2f);
                      darkColor = this.MyColors.GetDarkColor(current.Owner);
                      lightColor = this.MyColors.GetLightColor(current.Owner);
                      num48 = (int) num49 * 840420228 ^ -878488681;
                      continue;
                    case 55:
                      topLeft5 = new PointF(rectangleF2.Right + 5f, rectangleF2.Bottom + 5f);
                      num48 = (int) num49 * 941869437 ^ 543709582;
                      continue;
                    case 56:
                      num50 = (float) (1.0 - (double) current.TurnsRemaining / (double) current.TotalTripLength);
                      num48 = (int) num49 * -1605803498 ^ 1950328256;
                      continue;
                    default:
                      goto label_217;
                  }
                  int num64;
                  num48 = num64 = num53 == 0 ? -1471514758 : (num64 = -1179363333);
                  continue;
label_174:
                  int num65;
                  num48 = num65 = num52 != 0 ? -1218786654 : (num65 = -824826320);
                  continue;
label_210:
                  flag9 = num51 != 0;
                  num48 = -2018596078;
                }
              }
              finally
              {
                enumerator3.Dispose();
label_213:
                int num66 = -847983645;
                while (true)
                {
                  uint num67;
                  switch ((num67 = (uint) (num66 ^ -735044486)) % 3U)
                  {
                    case 0:
                      goto label_213;
                    case 2:
                      num66 = (int) num67 * 626248582 ^ 607637028;
                      continue;
                    default:
                      goto label_216;
                  }
                }
label_216:;
              }
label_217:
              if (this.DrawAttacklines)
                goto label_223;
              else
                break;
          }
label_218:
          num47 = -1549029383;
label_219:
          while (true)
          {
            uint num68;
            switch ((num68 = (uint) (num47 ^ -735044486)) % 8U)
            {
              case 0:
                goto label_224;
              case 1:
                goto label_223;
              case 2:
                num47 = (int) num68 * 1372081155 ^ 1739181354;
                continue;
              case 3:
                num47 = (int) num68 * 1354627605 ^ -933583553;
                continue;
              case 4:
                ++num46;
                num47 = (int) num68 * 1979226651 ^ 1486863254;
                continue;
              case 5:
                goto label_218;
              case 7:
                if (!flag5)
                {
                  num47 = (int) num68 * 786250677 ^ 304496799;
                  continue;
                }
                goto label_138;
              default:
                goto label_227;
            }
          }
label_223:
          num47 = -1499459546;
          goto label_219;
        }
label_227:
        using (List<Planet>.Enumerator enumerator4 = planets.GetEnumerator())
        {
label_246:
          int num69 = enumerator4.MoveNext() ? -299558464 : (num69 = -1245896276);
          int text3;
          Point topLeft6;
          Planet current;
          RectangleF rectangleF3;
          RectangleF rectangleF4;
          bool flag;
          bool planetStatistics;
          while (true)
          {
            uint num70;
            switch ((num70 = (uint) (num69 ^ -735044486)) % 20U)
            {
              case 0:
                num69 = -780208146;
                continue;
              case 1:
                this.WriteTextInElLipseWithBorder(RenderColor.PlanetAttackNettoNegativeDark, RenderColor.PlanetAttackNettoNegativeLight, (object) text3, this.font25b, (PointF) topLeft6, true, false);
                num69 = (int) num70 * 1711536210 ^ 1085353689;
                continue;
              case 2:
                goto label_246;
              case 3:
                num69 = (int) num70 * -574261475 ^ 523118560;
                continue;
              case 4:
                num69 = (int) num70 * 1520447821 ^ -1303596135;
                continue;
              case 5:
                num69 = -475833880;
                continue;
              case 6:
                int num71 = !planetStatistics ? -492040975 : (num71 = -2126411755);
                num69 = num71 ^ (int) num70 * 201840343;
                continue;
              case 7:
                num69 = -299558464;
                continue;
              case 8:
                rectangleF3 = this.WriteTextInElLipseWithBorder(RenderColor.PlanetAttackDark, RenderColor.PlanetAttackLight, (object) numArray4[current.PlanetID], this.font25, (PointF) topLeft6, true, false);
                topLeft6 = new Point((int) rectangleF3.Right, (int) rectangleF4.Top);
                this.WriteTextInElLipseWithBorder(RenderColor.PlanetDefenceDark, RenderColor.PlanetDefenceLight, (object) numArray2[current.PlanetID], this.font25, (PointF) topLeft6, true, false);
                topLeft6 = new Point((int) rectangleF3.Left, (int) rectangleF3.Top);
                text3 = numArray3[current.PlanetID];
                flag = text3 < 0;
                num69 = (int) num70 * 1658017403 ^ -1014436867;
                continue;
              case 9:
                num69 = (int) num70 * -741966029 ^ -1548880343;
                continue;
              case 10:
                current = enumerator4.Current;
                num69 = -1242361734;
                continue;
              case 11:
                topLeft6 = pointArray[current.PlanetID];
                this.WriteTextInElLipseWithBorder(RenderColor.PlanetIdDark, RenderColor.PlanetIdLight, (object) current.PlanetID, this.font75b, (PointF) topLeft6, true, true);
                rectangleF3 = this.WriteTextInElLipseWithBorder(RenderColor.PlanetGrowthDark, RenderColor.PlanetGrowthLight, (object) current.GrowthRate, this.font75, (PointF) topLeft6, false, true);
                topLeft6 = new Point((int) rectangleF3.Right, (int) rectangleF3.Bottom);
                num69 = (int) num70 * -1411905734 ^ 1553361398;
                continue;
              case 12:
                num69 = -1609282921;
                continue;
              case 13:
                topLeft6 = new Point((int) rectangleF4.Left + 2, (int) rectangleF4.Top);
                num69 = (int) num70 * -114239437 ^ -767095215;
                continue;
              case 14:
                rectangleF4 = this.WriteTextInElLipseWithBorder(RenderColor.PlanetNumShipsDark, RenderColor.PlanetNumShipsLight, (object) current.NumShips, this.font50b, (PointF) topLeft6, true, false);
                num69 = (int) num70 * 2059963186 ^ 386563785;
                continue;
              case 15:
                int num72 = flag ? 1986368112 : (num72 = 1600290011);
                num69 = num72 ^ (int) num70 * 609233711;
                continue;
              case 16:
                this.WriteTextInElLipseWithBorder(RenderColor.PlanetAttackNettoPositiveDark, RenderColor.PlanetAttackNettoPositiveLight, (object) text3, this.font25b, (PointF) topLeft6, true, false);
                num69 = (int) num70 * 1077498338 ^ -121269893;
                continue;
              case 17:
                num69 = (int) num70 * 1593099335 ^ 630173309;
                continue;
              case 19:
                planetStatistics = this.DrawPlanetStatistics;
                num69 = (int) num70 * 1032227182 ^ -901723758;
                continue;
              default:
                goto label_250;
            }
          }
        }
label_250:
        SizeF sizeF1 = Renderer.\u202E⁮⁮‪‍⁭⁯‌⁫‮​‌‌‭‍⁪‫⁬‮‎⁯‫⁪‭⁮‬‬‫⁮⁭‍‌‭​⁯​⁬​‌⁮‮(this._Canvas, "In base : 1234", this.font50);
label_251:
        int num73 = -1686398861;
        double num74;
        Brush lightBrush;
        int num75;
        int num76;
        bool universeStatistics;
        bool flag10;
        int topLeftCornerHeight;
        while (true)
        {
          uint num77;
          switch ((num77 = (uint) (num73 ^ -735044486)) % 36U)
          {
            case 0:
              num73 = (int) num77 * 612177657 ^ 350803047;
              continue;
            case 1:
              num73 = -1757248143;
              continue;
            case 2:
              int num78 = !getPlayerStats.QueryIsDominating() ? 1369019143 : (num78 = 1091609254);
              num73 = num78 ^ (int) num77 * 1915246456;
              continue;
            case 3:
              universeStatistics = this.DrawUniverseStatistics;
              num73 = -1644965658;
              continue;
            case 4:
              num73 = (int) num77 * 745487407 ^ 1633895291;
              continue;
            case 5:
              lightBrush = this.MyColors.GetLightBrush(2);
              Renderer.\u200C‌⁭⁫⁬⁫‎‪​‎⁮‫⁬​⁪⁪⁬​⁯​‭⁫‏⁬⁬‍‌​‮⁪​⁫⁬⁬‬‬‬‭‫‭‮(this._Canvas, Renderer.\u202B‫‭⁮⁬⁫⁬‮‫⁪⁪‪⁯‬​⁫‎‍⁮⁬‍‍‏​‪‪‮​‌‏‬‭‎‍​⁫‮⁬‮‫‮(), sizeF1.Width, 0.0f, sizeF1.Width, sizeF1.Height * 3f);
              num73 = (int) num77 * 678179375 ^ -1759845841;
              continue;
            case 6:
              goto label_291;
            case 7:
              Renderer.\u202B‬⁮⁮⁮‌‫‮‪‫‮⁫‭⁫⁪‮‎‮⁯⁭⁬⁭‭⁯‭‏⁫‮‫‪‏‭⁭⁮⁮⁫⁯⁯‬⁪‮(this._Canvas, Renderer.\u206F​⁮⁮‬⁬‬⁯​‌‫⁪‏⁫⁯‭⁬‬‬‪⁯⁪‬⁪‪‏​‏‌‍⁮‏⁮‎⁪‮⁯‎⁬⁫‮("Gr.Avg. : {0:G}", (object) num74), this.font50, lightBrush, 0.0f, sizeF1.Height * (float) num75++);
              num73 = (int) num77 * 1970806739 ^ -825203895;
              continue;
            case 8:
              num73 = (int) num77 * -1067929652 ^ -768478932;
              continue;
            case 9:
              num73 = (int) num77 * -995041209 ^ 85081673;
              continue;
            case 10:
              this.PaintVerticalStatisticBars(growthRatesCounter, inbaseCounter, planetCounter, inTransitCounter, lightBrush, topLeftCornerHeight);
              num73 = (int) num77 * 672206058 ^ 1917994838;
              continue;
            case 11:
              goto label_251;
            case 12:
              num73 = (int) num77 * -900127346 ^ 623022061;
              continue;
            case 13:
              Renderer.\u202B‬⁮⁮⁮‌‫‮‪‫‮⁫‭⁫⁪‮‎‮⁯⁭⁬⁭‭⁯‭‏⁫‮‫‪‏‭⁭⁮⁮⁫⁯⁯‬⁪‮(this._Canvas, "Dominating", this.font100b, this.MyColors.GetDarkBrush(1), (float) (Renderer.\u206B‬⁮‭⁪‫⁫⁭​‏⁫‬‌⁬‍⁮‬‎⁬‍‬‪‍⁯‏‮‮⁮⁯⁭‍‍⁭⁪‎⁫⁯⁪‏‮‮((Control) this) / 2) - sizeF1.Width, (float) num76);
              num73 = (int) num77 * 1288570354 ^ 778042003;
              continue;
            case 14:
              lightBrush = this.MyColors.GetLightBrush(0);
              Renderer.\u200C‌⁭⁫⁬⁫‎‪​‎⁮‫⁬​⁪⁪⁬​⁯​‭⁫‏⁬⁬‍‌​‮⁪​⁫⁬⁬‬‬‬‭‫‭‮(this._Canvas, Renderer.\u202B‫‭⁮⁬⁫⁬‮‫⁪⁪‪⁯‬​⁫‎‍⁮⁬‍‍‏​‪‪‮​‌‏‬‭‎‍​⁫‮⁬‮‫‮(), 0.0f, 0.0f, sizeF1.Width, sizeF1.Height * 6f);
              num73 = (int) num77 * -2022054722 ^ -766131910;
              continue;
            case 15:
              Renderer.\u202B‬⁮⁮⁮‌‫‮‪‫‮⁫‭⁫⁪‮‎‮⁯⁭⁬⁭‭⁯‭‏⁫‮‫‪‏‭⁭⁮⁮⁫⁯⁯‬⁪‮(this._Canvas, Renderer.\u206E⁫‌‍⁬⁪‍‎‫​⁪⁬‮⁭⁭⁯‍‏‪‬‎⁭‌⁫⁮‌‮⁭‭‮‪⁮‪⁮‫⁮⁯‌‭‬‮("In base : ", inbaseCounter[0].ToString()), this.font50, lightBrush, 0.0f, sizeF1.Height * (float) num75++);
              num73 = (int) num77 * 717978920 ^ 1615896103;
              continue;
            case 16:
              int num79 = universeStatistics ? -1094769997 : (num79 = -578954539);
              num73 = num79 ^ (int) num77 * 1537809152;
              continue;
            case 17:
              num73 = (int) num77 * 1047887349 ^ -1513578860;
              continue;
            case 18:
              lightBrush = this.MyColors.GetLightBrush(1);
              Renderer.\u202B‬⁮⁮⁮‌‫‮‪‫‮⁫‭⁫⁪‮‎‮⁯⁭⁬⁭‭⁯‭‏⁫‮‫‪‏‭⁭⁮⁮⁫⁯⁯‬⁪‮(this._Canvas, Renderer.\u206E⁫‌‍⁬⁪‍‎‫​⁪⁬‮⁭⁭⁯‍‏‪‬‎⁭‌⁫⁮‌‮⁭‭‮‪⁮‪⁮‫⁮⁯‌‭‬‮("In base : ", inbaseCounter[1].ToString()), this.font50, lightBrush, 0.0f, sizeF1.Height * (float) num75++);
              num73 = (int) num77 * 967660854 ^ -792654262;
              continue;
            case 19:
              num73 = (int) num77 * -960503432 ^ 911239615;
              continue;
            case 20:
              Renderer.\u202B‬⁮⁮⁮‌‫‮‪‫‮⁫‭⁫⁪‮‎‮⁯⁭⁬⁭‭⁯‭‏⁫‮‫‪‏‭⁭⁮⁮⁫⁯⁯‬⁪‮(this._Canvas, Renderer.\u206E⁫‌‍⁬⁪‍‎‫​⁪⁬‮⁭⁭⁯‍‏‪‬‎⁭‌⁫⁮‌‮⁭‭‮‪⁮‪⁮‫⁮⁯‌‭‬‮("In base : ", inbaseCounter[2].ToString()), this.font50, lightBrush, sizeF1.Width, sizeF1.Height * (float) num75++);
              num73 = (int) num77 * 678401496 ^ 1050030848;
              continue;
            case 21:
              flag10 = getPlayerStats != null;
              num73 = (int) num77 * -1822110059 ^ -756034808;
              continue;
            case 22:
              num73 = (int) num77 * -1139250882 ^ -764617159;
              continue;
            case 23:
              int num80 = !flag10 ? -713035081 : (num80 = -469988);
              num73 = num80 ^ (int) num77 * 49071346;
              continue;
            case 24:
              Renderer.\u202B‬⁮⁮⁮‌‫‮‪‫‮⁫‭⁫⁪‮‎‮⁯⁭⁬⁭‭⁯‭‏⁫‮‫‪‏‭⁭⁮⁮⁫⁯⁯‬⁪‮(this._Canvas, Renderer.\u206E⁫‌‍⁬⁪‍‎‫​⁪⁬‮⁭⁭⁯‍‏‪‬‎⁭‌⁫⁮‌‮⁭‭‮‪⁮‪⁮‫⁮⁯‌‭‬‮("Growth  : ", growthRatesCounter[1].ToString()), this.font50, lightBrush, 0.0f, sizeF1.Height * (float) num75++);
              num73 = (int) num77 * -1133056405 ^ 67781695;
              continue;
            case 25:
              num75 = 0;
              num74 = (double) growthRatesCounter[3] / (double) planets.Count;
              num73 = (int) num77 * 1633056439 ^ -1411533105;
              continue;
            case 26:
              Renderer.\u202B‬⁮⁮⁮‌‫‮‪‫‮⁫‭⁫⁪‮‎‮⁯⁭⁬⁭‭⁯‭‏⁫‮‫‪‏‭⁭⁮⁮⁫⁯⁯‬⁪‮(this._Canvas, Renderer.\u206E⁫‌‍⁬⁪‍‎‫​⁪⁬‮⁭⁭⁯‍‏‪‬‎⁭‌⁫⁮‌‮⁭‭‮‪⁮‪⁮‫⁮⁯‌‭‬‮("Growth  : ", growthRatesCounter[2].ToString()), this.font50, lightBrush, sizeF1.Width, sizeF1.Height * (float) num75++);
              num73 = (int) num77 * 1571467399 ^ 934363013;
              continue;
            case 27:
              num75 = 0;
              num73 = (int) num77 * -2055390366 ^ 81520485;
              continue;
            case 28:
              Renderer.\u202B‬⁮⁮⁮‌‫‮‪‫‮⁫‭⁫⁪‮‎‮⁯⁭⁬⁭‭⁯‭‏⁫‮‫‪‏‭⁭⁮⁮⁫⁯⁯‬⁪‮(this._Canvas, Renderer.\u206E⁫‌‍⁬⁪‍‎‫​⁪⁬‮⁭⁭⁯‍‏‪‬‎⁭‌⁫⁮‌‮⁭‭‮‪⁮‪⁮‫⁮⁯‌‭‬‮("Transit : ", inTransitCounter[1].ToString()), this.font50, lightBrush, 0.0f, sizeF1.Height * (float) num75++);
              num73 = (int) num77 * -2055251669 ^ -1774574486;
              continue;
            case 29:
              num73 = (int) num77 * -856274724 ^ 562385400;
              continue;
            case 30:
              Renderer.\u202B‬⁮⁮⁮‌‫‮‪‫‮⁫‭⁫⁪‮‎‮⁯⁭⁬⁭‭⁯‭‏⁫‮‫‪‏‭⁭⁮⁮⁫⁯⁯‬⁪‮(this._Canvas, Renderer.\u206E⁫‌‍⁬⁪‍‎‫​⁪⁬‮⁭⁭⁯‍‏‪‬‎⁭‌⁫⁮‌‮⁭‭‮‪⁮‪⁮‫⁮⁯‌‭‬‮("Growth  : ", growthRatesCounter[0].ToString()), this.font50, lightBrush, 0.0f, sizeF1.Height * (float) num75++);
              num73 = (int) num77 * -1453591641 ^ -904494645;
              continue;
            case 31:
              num73 = -522609268;
              continue;
            case 32:
              topLeftCornerHeight = (int) ((double) sizeF1.Height * (double) num75) + 1;
              num73 = (int) num77 * -1094103703 ^ 1027768505;
              continue;
            case 33:
              num73 = (int) num77 * 2123537996 ^ -1251288092;
              continue;
            case 34:
              num73 = (int) num77 * -1817076503 ^ -449210984;
              continue;
            case 35:
              num76 = (int) ((double) sizeF1.Height * (double) num75++);
              Renderer.\u202B‬⁮⁮⁮‌‫‮‪‫‮⁫‭⁫⁪‮‎‮⁯⁭⁬⁭‭⁯‭‏⁫‮‫‪‏‭⁭⁮⁮⁫⁯⁯‬⁪‮(this._Canvas, Renderer.\u206E⁫‌‍⁬⁪‍‎‫​⁪⁬‮⁭⁭⁯‍‏‪‬‎⁭‌⁫⁮‌‮⁭‭‮‪⁮‪⁮‫⁮⁯‌‭‬‮("Transit : ", inTransitCounter[2].ToString()), this.font50, lightBrush, sizeF1.Width, (float) num76);
              num73 = (int) num77 * 873712976 ^ -2050434724;
              continue;
            default:
              goto label_287;
          }
        }
label_291:
        return;
label_287:
        return;
label_139:
        inTransitCounter = new int[4];
        numArray3 = new int[planets.Count];
        num44 = -1046873767;
        goto label_136;
      }
      finally
      {
label_289:
        int num81 = -202447009;
        while (true)
        {
          uint num82;
          switch ((num82 = (uint) (num81 ^ -735044486)) % 5U)
          {
            case 0:
              goto label_289;
            case 1:
              this.MyColors = (ColorDictionary) null;
              num81 = (int) num82 * 689429215 ^ 702440196;
              continue;
            case 3:
              num81 = (int) num82 * 407123171 ^ -921508848;
              continue;
            case 4:
              this._Canvas = (Graphics) null;
              num81 = (int) num82 * 827118240 ^ -2040122053;
              continue;
            default:
              goto label_295;
          }
        }
label_295:;
      }
    }

    private bool DetermineShouldDrawPlayer(int playerId)
    {
label_1:
      int num1 = 209019753;
      bool shouldDrawPlayer;
      int num2;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 161793311)) % 10U)
        {
          case 0:
label_4:
            shouldDrawPlayer = this.DrawPlayerTwo;
            num1 = 407598814;
            continue;
          case 1:
            switch (num2)
            {
              case 0:
                goto label_11;
              case 1:
                goto label_7;
              case 2:
                goto label_4;
              default:
                num1 = (int) num3 * 217659080 ^ 1722665878;
                continue;
            }
          case 2:
label_7:
            shouldDrawPlayer = this.DrawPlayerOne;
            num1 = 407598814;
            continue;
          case 4:
            shouldDrawPlayer = true;
            num1 = 1695710724;
            continue;
          case 5:
            num1 = (int) num3 * -18954970 ^ -2127666703;
            continue;
          case 6:
            goto label_1;
          case 7:
label_11:
            shouldDrawPlayer = true;
            num1 = 407598814;
            continue;
          case 8:
            num2 = playerId;
            num1 = (int) num3 * -111544251 ^ 1973363924;
            continue;
          case 9:
            num1 = (int) num3 * -2050432375 ^ -1421573715;
            continue;
          default:
            goto label_12;
        }
      }
label_12:
      return shouldDrawPlayer;
    }

    private void PaintVerticalStatisticBars(
      int[] growthRatesCounter,
      int[] inbaseCounter,
      int[] planetCounter,
      int[] inTransitCounter,
      Brush color,
      int topLeftCornerHeight)
    {
      string str = "gbtp";
      SizeF sizeF = Renderer.\u202E⁮⁮‪‍⁭⁯‌⁫‮​‌‌‭‍⁪‫⁬‮‎⁯‫⁪‭⁮‬‬‫⁮⁭‍‌‭​⁯​⁬​‌⁮‮(this._Canvas, str, this.font50b);
label_1:
      int num1 = 827332849;
      Rectangle rectangle1;
      Rectangle rectangle2;
      double num2;
      Rectangle rectangle3;
      double num3;
      Rectangle[] rectangleArray;
      Rectangle rectangle4;
      Rectangle rectangle5;
      Rectangle rectangle6;
      Rectangle rectangle7;
      Rectangle rectangle8;
      Rectangle rectangle9;
      double num4;
      Rectangle rectangle10;
      double num5;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ 1533517733)) % 21U)
        {
          case 0:
            num5 = (double) (Renderer.\u200E⁫⁬⁭‏‎‌‮‌‎⁫⁪‪⁪⁯‭‪‏‏​⁪⁪‏‭⁮‎‌⁪‏‎‍​‏‎⁪‍‌‭‏⁭‮((Control) this) - topLeftCornerHeight) / (double) (inTransitCounter[3] + 1);
            num4 = (double) (Renderer.\u200E⁫⁬⁭‏‎‌‮‌‎⁫⁪‪⁪⁯‭‪‏‏​⁪⁪‏‭⁮‎‌⁪‏‎‍​‏‎⁪‍‌‭‏⁭‮((Control) this) - topLeftCornerHeight) / (double) planetCounter[3];
            num1 = (int) num6 * -1223819863 ^ -1346237755;
            continue;
          case 1:
            rectangleArray = new Rectangle[2]
            {
              rectangle10,
              rectangle4
            };
            num1 = (int) num6 * 1841007653 ^ 523122898;
            continue;
          case 2:
            Renderer.\u206C⁫‍⁬‭⁬‎‌‫‮⁯⁮‎​‮‭‮‍‎‫⁯‬‏‎⁬‏⁪⁫‎‌‮‌‬‭⁫‌⁬‬⁯⁮‮(this._Canvas, this.MyColors.GetDarkBrush(2), rectangleArray);
            Renderer.\u206A‎‪‫‫‭⁭‭⁬​‎‮‌‌⁮‌⁮‬⁭‬⁪‭‭⁪⁪​‏‫⁫​⁬⁫‪⁫⁬‪‭‪‬⁭‮(this._Canvas, this.MyColors.GetLightPen(0), rectangleArray);
            num1 = (int) num6 * -1511669162 ^ -1197988677;
            continue;
          case 3:
            Renderer.\u206A‎‪‫‫‭⁭‭⁬​‎‮‌‌⁮‌⁮‬⁭‬⁪‭‭⁪⁪​‏‫⁫​⁬⁫‪⁫⁬‪‭‪‬⁭‮(this._Canvas, this.MyColors.GetLightPen(0), rectangleArray);
            num1 = (int) num6 * 802123123 ^ 1898281629;
            continue;
          case 4:
            num2 = (double) (Renderer.\u200E⁫⁬⁭‏‎‌‮‌‎⁫⁪‪⁪⁯‭‪‏‏​⁪⁪‏‭⁮‎‌⁪‏‎‍​‏‎⁪‍‌‭‏⁭‮((Control) this) - topLeftCornerHeight) / (double) (growthRatesCounter[1] + growthRatesCounter[2]);
            num1 = (int) num6 * 340993834 ^ 1137325370;
            continue;
          case 5:
            rectangle6 = new Rectangle(rectangle10.Left, rectangle10.Bottom, rectangle10.Width, Renderer.\u200E⁫⁬⁭‏‎‌‮‌‎⁫⁪‪⁪⁯‭‪‏‏​⁪⁪‏‭⁮‎‌⁪‏‎‍​‏‎⁪‍‌‭‏⁭‮((Control) this) - rectangle10.Bottom);
            rectangle7 = new Rectangle(rectangle9.Left, rectangle9.Bottom, rectangle9.Width, Renderer.\u200E⁫⁬⁭‏‎‌‮‌‎⁫⁪‪⁪⁯‭‪‏‏​⁪⁪‏‭⁮‎‌⁪‏‎‍​‏‎⁪‍‌‭‏⁭‮((Control) this) - rectangle9.Bottom);
            num1 = (int) num6 * -1581385713 ^ 1793436987;
            continue;
          case 6:
            num3 = (double) (Renderer.\u200E⁫⁬⁭‏‎‌‮‌‎⁫⁪‪⁪⁯‭‪‏‏​⁪⁪‏‭⁮‎‌⁪‏‎‍​‏‎⁪‍‌‭‏⁭‮((Control) this) - topLeftCornerHeight) / (double) inbaseCounter[3];
            num1 = (int) num6 * -654745921 ^ -187810817;
            continue;
          case 7:
            this.BarSpacing = 3;
            rectangle1 = new Rectangle(0, topLeftCornerHeight, this.BarWidth * 4 + this.BarSpacing * 3 + 4, Renderer.\u200E⁫⁬⁭‏‎‌‮‌‎⁫⁪‪⁪⁯‭‪‏‏​⁪⁪‏‭⁮‎‌⁪‏‎‍​‏‎⁪‍‌‭‏⁭‮((Control) this) - topLeftCornerHeight);
            num1 = (int) num6 * 1098771735 ^ -2080225136;
            continue;
          case 8:
            Renderer.\u206C⁫‍⁬‭⁬‎‌‫‮⁯⁮‎​‮‭‮‍‎‫⁯‬‏‎⁬‏⁪⁫‎‌‮‌‬‭⁫‌⁬‬⁯⁮‮(this._Canvas, this.MyColors.GetDarkBrush(0), rectangleArray);
            num1 = (int) num6 * 36268824 ^ -1519917537;
            continue;
          case 9:
            goto label_1;
          case 10:
            rectangle5 = new Rectangle(rectangle2.Left, rectangle2.Bottom, rectangle2.Width, Renderer.\u200E⁫⁬⁭‏‎‌‮‌‎⁫⁪‪⁪⁯‭‪‏‏​⁪⁪‏‭⁮‎‌⁪‏‎‍​‏‎⁪‍‌‭‏⁭‮((Control) this) - rectangle2.Bottom);
            num1 = (int) num6 * 94595682 ^ 1376010899;
            continue;
          case 11:
            Rectangle rectangle11 = new Rectangle(rectangle4.Left, rectangle4.Bottom, rectangle4.Width, Renderer.\u200E⁫⁬⁭‏‎‌‮‌‎⁫⁪‪⁪⁯‭‪‏‏​⁪⁪‏‭⁮‎‌⁪‏‎‍​‏‎⁪‍‌‭‏⁭‮((Control) this) - rectangle4.Bottom);
            rectangleArray = new Rectangle[4]
            {
              rectangle5,
              rectangle6,
              rectangle7,
              rectangle11
            };
            num1 = (int) num6 * -191837472 ^ -1940718000;
            continue;
          case 12:
            num1 = (int) num6 * 2038476223 ^ -887568827;
            continue;
          case 13:
            rectangle9 = new Rectangle(rectangle3.Right + this.BarSpacing, topLeftCornerHeight, this.BarWidth, (int) (num5 * (double) inTransitCounter[1]));
            num1 = (int) num6 * 675116846 ^ 1685504350;
            continue;
          case 14:
            Renderer.\u200C‌⁭⁫⁬⁫‎‪​‎⁮‫⁬​⁪⁪⁬​⁯​‭⁫‏⁬⁬‍‌​‮⁪​⁫⁬⁬‬‬‬‭‫‭‮(this._Canvas, Renderer.\u202B‫‭⁮⁬⁫⁬‮‫⁪⁪‪⁯‬​⁫‎‍⁮⁬‍‍‏​‪‪‮​‌‏‬‭‎‍​⁫‮⁬‮‫‮(), 0.0f, (float) topLeftCornerHeight, sizeF.Width, sizeF.Height);
            Renderer.\u202B‬⁮⁮⁮‌‫‮‪‫‮⁫‭⁫⁪‮‎‮⁯⁭⁬⁭‭⁯‭‏⁫‮‫‪‏‭⁭⁮⁮⁫⁯⁯‬⁪‮(this._Canvas, str, this.font50, this.MyColors.GetLightBrush(0), 0.0f, (float) topLeftCornerHeight);
            num1 = (int) num6 * -426006288 ^ 170706965;
            continue;
          case 15:
            goto label_3;
          case 16:
            rectangle8 = new Rectangle(rectangle9.Right + this.BarSpacing, topLeftCornerHeight, this.BarWidth, (int) (num4 * (double) planetCounter[1]));
            rectangleArray = new Rectangle[4]
            {
              rectangle2,
              rectangle3,
              rectangle9,
              rectangle8
            };
            Renderer.\u206C⁫‍⁬‭⁬‎‌‫‮⁯⁮‎​‮‭‮‍‎‫⁯‬‏‎⁬‏⁪⁫‎‌‮‌‬‭⁫‌⁬‬⁯⁮‮(this._Canvas, this.MyColors.GetDarkBrush(1), rectangleArray);
            num1 = (int) num6 * -1221843770 ^ -1881923829;
            continue;
          case 17:
            topLeftCornerHeight += (int) sizeF.Height;
            num1 = (int) num6 * -719860718 ^ 1535300463;
            continue;
          case 18:
            Renderer.\u206A‎‪‫‫‭⁭‭⁬​‎‮‌‌⁮‌⁮‬⁭‬⁪‭‭⁪⁪​‏‫⁫​⁬⁫‪⁫⁬‪‭‪‬⁭‮(this._Canvas, this.MyColors.GetLightPen(1), rectangleArray);
            num1 = (int) num6 * -1697106549 ^ -1897262290;
            continue;
          case 19:
            rectangle10 = new Rectangle(rectangle3.Left, rectangle3.Bottom, rectangle3.Width, (int) (num3 * (double) inbaseCounter[0]));
            rectangle4 = new Rectangle(rectangle8.Left, rectangle8.Bottom, rectangle8.Width, (int) (num3 * (double) inbaseCounter[0]));
            num1 = (int) num6 * -859958067 ^ 753537041;
            continue;
          case 20:
            Renderer.\u206D‪‫⁮‫​⁫‭⁪‬⁬⁮‬‌‭​​‬‍‬‭⁫‍‎‏⁫‌‪‎‫‏‬‭⁪‭‌‫‫‪⁪‮(this._Canvas, Renderer.\u202B‫‭⁮⁬⁫⁬‮‫⁪⁪‪⁯‬​⁫‎‍⁮⁬‍‍‏​‪‪‮​‌‏‬‭‎‍​⁫‮⁬‮‫‮(), rectangle1);
            rectangle2 = new Rectangle(1, topLeftCornerHeight, this.BarWidth, (int) (num2 * (double) growthRatesCounter[1]));
            rectangle3 = new Rectangle(rectangle2.Right + this.BarSpacing, topLeftCornerHeight, this.BarWidth, (int) (num3 * (double) inbaseCounter[1]));
            num1 = (int) num6 * 515411415 ^ -731942094;
            continue;
          default:
            goto label_23;
        }
      }
label_3:
      return;
label_23:;
    }

    private RectangleF WriteTextInElLipseWithBorder(
      RenderColor background,
      RenderColor foreground,
      object text,
      Font font,
      PointF topLeft,
      bool shiftUp,
      bool shiftLeft)
    {
label_1:
      int num1 = 878121266;
      RectangleF rectangleF1;
      while (true)
      {
        uint num2;
        PointF pointF;
        SizeF sizeF;
        string str1;
        bool flag;
        RectangleF rectangleF2;
        string str2;
        switch ((num2 = (uint) (num1 ^ 1094205804)) % 19U)
        {
          case 0:
            goto label_1;
          case 1:
            int num3 = !flag ? -6845476 : (num3 = -134109529);
            num1 = num3 ^ (int) num2 * 132235396;
            continue;
          case 2:
            sizeF = Renderer.\u202E⁮⁮‪‍⁭⁯‌⁫‮​‌‌‭‍⁪‫⁬‮‎⁯‫⁪‭⁮‬‬‫⁮⁭‍‌‭​⁯​⁬​‌⁮‮(this._Canvas, str1, font);
            flag = shiftUp;
            num1 = (int) num2 * -997097396 ^ 1549115653;
            continue;
          case 3:
            if (text == null)
            {
              str2 = " ";
              break;
            }
            num1 = (int) num2 * -1433118699 ^ -59048494;
            continue;
          case 4:
            num1 = (int) num2 * -1044224445 ^ 49600084;
            continue;
          case 5:
            num1 = (int) num2 * 469156134 ^ 744610000;
            continue;
          case 6:
            num1 = (int) num2 * -288833457 ^ 212358192;
            continue;
          case 7:
            rectangleF2 = new RectangleF(pointF.X, pointF.Y, sizeF.Width, sizeF.Height);
            num1 = 212408903;
            continue;
          case 8:
            int num4;
            num1 = num4 = shiftLeft ? 555351474 : (num4 = 653511520);
            continue;
          case 9:
            rectangleF1 = rectangleF2;
            num1 = (int) num2 * 273249068 ^ -1465710777;
            continue;
          case 10:
            Renderer.\u202D‌‫​‮⁮‬‫⁪⁭‏‮⁬⁯‏⁯‏‎‭⁪‪⁫‮⁬‎‌‪‭⁪⁪⁮‌‬‮‎‏‭⁪⁫⁬‮(this._Canvas, this.MyColors.GetPen(foreground), rectangleF2);
            num1 = (int) num2 * 1681573131 ^ 1631713057;
            continue;
          case 11:
            str2 = Renderer.\u200C​‮‫⁯‫‫​‭‏‍⁯⁯⁫⁯⁯⁫‪‫⁯‍​⁪​⁬​‮‭‬‫‬‬‭‬⁯‪‮‎⁮‍‮(text);
            break;
          case 12:
            pointF = new PointF(pointF.X - sizeF.Width, pointF.Y);
            num1 = (int) num2 * 874962947 ^ 1904733450;
            continue;
          case 14:
            pointF = new PointF(topLeft.X, topLeft.Y - sizeF.Height);
            num1 = (int) num2 * -458063853 ^ 193515656;
            continue;
          case 15:
            num1 = (int) num2 * 419681539 ^ 403066372;
            continue;
          case 16:
            Renderer.\u202E⁭‎‬‫‍⁬​⁬‌⁪⁯⁫‮‭⁪​​‬⁫‬‌⁯​‎⁫⁫‏⁮⁯‍‭‭⁪‍‎⁮⁯‏⁪‮(this._Canvas, str1, font, this.MyColors.GetBrush(foreground), pointF);
            num1 = (int) num2 * 2083554524 ^ 325183317;
            continue;
          case 17:
            Renderer.\u206F‎‫‌⁪‏‎‍⁪‍⁮​‪‭‎‏‍‭⁯‪‭‫‮‫‮‍⁮⁬‏‭⁬‮⁮‮‍​⁬‮‌‮‮(this._Canvas, this.MyColors.GetBrush(background), rectangleF2);
            num1 = (int) num2 * 461190028 ^ 181271716;
            continue;
          case 18:
            pointF = topLeft;
            num1 = 1571374245;
            continue;
          default:
            goto label_23;
        }
        str1 = str2;
        num1 = 1300206907;
      }
label_23:
      return rectangleF1;
    }

    static Font \u200D‌‬‌‏⁫⁮⁮⁮⁮⁮⁯‮‬‏‭‭‫⁫⁮⁮​⁪⁯‌‫‪‭⁭‭‎‏⁪‎​‭⁭⁪⁪‍‮(
      [In] string obj0,
      [In] float obj1,
      [In] FontStyle obj2)
    {
      return new Font(obj0, obj1, obj2);
    }

    static int \u206B‬⁮‭⁪‫⁫⁭​‏⁫‬‌⁬‍⁮‬‎⁬‍‬‪‍⁯‏‮‮⁮⁯⁭‍‍⁭⁪‎⁫⁯⁪‏‮‮([In] Control obj0) => obj0.Width;

    static int \u200E⁫⁬⁭‏‎‌‮‌‎⁫⁪‪⁪⁯‭‪‏‏​⁪⁪‏‭⁮‎‌⁪‏‎‍​‏‎⁪‍‌‭‏⁭‮([In] Control obj0) => obj0.Height;

    static void \u206F⁯​⁫⁮‎⁫⁫⁫⁮‮‌⁯‌‮‍‪⁯‏‫‫‭‌‏⁪‏‮⁪‬⁮‍⁪‪‍‭​⁮‏⁮⁭‮(
      [In] Graphics obj0,
      [In] Image obj1,
      [In] int obj2,
      [In] int obj3)
    {
      obj0.DrawImage(obj1, obj2, obj3);
    }

    static Brush \u202D‍‌‭‌‮‫‮‭⁮​‪⁬⁭⁫‬⁪​‎‍‫⁭‭‬⁭‮‪​‎⁮‭⁪‮‏⁮‭‌⁬‏⁭‮() => Brushes.LightGray;

    static RectangleF \u200D⁮⁯‮⁮​‬‌‎‬⁪⁯⁫⁪‍‍‪⁭⁬⁪‭‭‭⁫​‬‌⁭‏‌⁯⁭⁮‏‍‫‮⁭⁮‪‮([In] Graphics obj0) => obj0.ClipBounds;

    static void \u202B‪⁮​‌‎‮⁫‍‬‍⁯‪⁬‬⁫‭‎⁫⁬‮‎⁭‌⁮‮⁭‮⁫‎‎‫‬‫‬⁯‍‌‌‮(
      [In] Graphics obj0,
      [In] Brush obj1,
      [In] RectangleF obj2)
    {
      obj0.FillRectangle(obj1, obj2);
    }

    static void \u202D⁮‮‏‌​‏‎‬⁮‫‌⁭‭⁬‏⁭‌⁪​​‎⁬‏‭⁮⁪‌‍⁮‭‬‏‌‭‌‌‍‪⁮‮(
      [In] Graphics obj0,
      [In] Pen obj1,
      [In] PointF obj2,
      [In] PointF obj3)
    {
      obj0.DrawLine(obj1, obj2, obj3);
    }

    static Brush \u202B‫‭⁮⁬⁫⁬‮‫⁪⁪‪⁯‬​⁫‎‍⁮⁬‍‍‏​‪‪‮​‌‏‬‭‎‍​⁫‮⁬‮‫‮() => Brushes.Black;

    static void \u206B​‌‭⁫⁫‭⁪‭​‏⁪​⁮‎⁭‮⁬‏‪⁭‭‎‭​‏‌‪‎⁬⁮​⁯⁭⁯⁮​⁭⁭‍‮(
      [In] Graphics obj0,
      [In] Brush obj1,
      [In] int obj2,
      [In] int obj3,
      [In] int obj4,
      [In] int obj5)
    {
      obj0.FillEllipse(obj1, obj2, obj3, obj4, obj5);
    }

    static void \u200D⁯‌⁫⁯‎‬⁮⁯‭‍‌‮⁯‏⁯‭‬‮⁯‎‫⁪⁯⁭‎‪‭‎‌⁮‎‭⁯⁬‍‏⁯‍‍‮(
      [In] Graphics obj0,
      [In] Pen obj1,
      [In] int obj2,
      [In] int obj3,
      [In] int obj4,
      [In] int obj5)
    {
      obj0.DrawEllipse(obj1, obj2, obj3, obj4, obj5);
    }

    static Pen \u206D‫‮‫‮⁫‬‮‌⁭‬⁭⁫‍‍⁭‫‭⁮‫‏⁪⁫‫‫‍‭‍‌⁭⁭‭‎‮⁪⁮⁫⁯⁬‬‮() => Pens.Black;

    static void \u202A​‌‭‪‮⁫‫⁯‫⁮‬‌‍⁪‮​‌​‎‬‮‮‪‮‮‍⁪‬⁭⁬⁯⁭⁪⁭‌​‍‫‌‮(
      [In] Graphics obj0,
      [In] Pen obj1,
      [In] Point obj2,
      [In] Point obj3)
    {
      obj0.DrawLine(obj1, obj2, obj3);
    }

    static bool \u206B‎‫‌⁮‪‍‮⁮‫⁭‏‭⁮⁪‌⁯‌‏‎‪‏⁭‌⁫⁭‌‎‬‎‬‭⁮‌‪⁫⁬⁬‌‏‮([In] IEnumerator obj0) => obj0.MoveNext();

    static void \u202E⁯‏‏‪‮‭‪‌⁮‌‫⁬⁬‎⁮‮‭⁫‮‏⁪‮‪‬‭‌​⁫​‏⁭‫‬‏⁫‬‪⁯‬‮([In] IDisposable obj0) => obj0.Dispose();

    static void \u200F⁫‏‏⁬‮⁫‏‪⁫‎‮‍‭‮‍⁭⁫‪⁮‪‫‍⁭‌‪‮‪‍⁬‏‌⁪⁭‭⁭‭‍‭‍‮(
      [In] Graphics obj0,
      [In] Pen obj1,
      [In] float obj2,
      [In] float obj3,
      [In] float obj4,
      [In] float obj5)
    {
      obj0.DrawLine(obj1, obj2, obj3, obj4, obj5);
    }

    static SizeF \u202E⁮⁮‪‍⁭⁯‌⁫‮​‌‌‭‍⁪‫⁬‮‎⁯‫⁪‭⁮‬‬‫⁮⁭‍‌‭​⁯​⁬​‌⁮‮(
      [In] Graphics obj0,
      [In] string obj1,
      [In] Font obj2)
    {
      return obj0.MeasureString(obj1, obj2);
    }

    static void \u200C‌⁭⁫⁬⁫‎‪​‎⁮‫⁬​⁪⁪⁬​⁯​‭⁫‏⁬⁬‍‌​‮⁪​⁫⁬⁬‬‬‬‭‫‭‮(
      [In] Graphics obj0,
      [In] Brush obj1,
      [In] float obj2,
      [In] float obj3,
      [In] float obj4,
      [In] float obj5)
    {
      obj0.FillRectangle(obj1, obj2, obj3, obj4, obj5);
    }

    static string \u206E⁫‌‍⁬⁪‍‎‫​⁪⁬‮⁭⁭⁯‍‏‪‬‎⁭‌⁫⁮‌‮⁭‭‮‪⁮‪⁮‫⁮⁯‌‭‬‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static void \u202B‬⁮⁮⁮‌‫‮‪‫‮⁫‭⁫⁪‮‎‮⁯⁭⁬⁭‭⁯‭‏⁫‮‫‪‏‭⁭⁮⁮⁫⁯⁯‬⁪‮(
      [In] Graphics obj0,
      [In] string obj1,
      [In] Font obj2,
      [In] Brush obj3,
      [In] float obj4,
      [In] float obj5)
    {
      obj0.DrawString(obj1, obj2, obj3, obj4, obj5);
    }

    static string \u206F​⁮⁮‬⁬‬⁯​‌‫⁪‏⁫⁯‭⁬‬‬‪⁯⁪‬⁪‪‏​‏‌‍⁮‏⁮‎⁪‮⁯‎⁬⁫‮([In] string obj0, [In] object obj1) => string.Format(obj0, obj1);

    static void \u206D‪‫⁮‫​⁫‭⁪‬⁬⁮‬‌‭​​‬‍‬‭⁫‍‎‏⁫‌‪‎‫‏‬‭⁪‭‌‫‫‪⁪‮(
      [In] Graphics obj0,
      [In] Brush obj1,
      [In] Rectangle obj2)
    {
      obj0.FillRectangle(obj1, obj2);
    }

    static void \u206C⁫‍⁬‭⁬‎‌‫‮⁯⁮‎​‮‭‮‍‎‫⁯‬‏‎⁬‏⁪⁫‎‌‮‌‬‭⁫‌⁬‬⁯⁮‮(
      [In] Graphics obj0,
      [In] Brush obj1,
      [In] Rectangle[] obj2)
    {
      obj0.FillRectangles(obj1, obj2);
    }

    static void \u206A‎‪‫‫‭⁭‭⁬​‎‮‌‌⁮‌⁮‬⁭‬⁪‭‭⁪⁪​‏‫⁫​⁬⁫‪⁫⁬‪‭‪‬⁭‮(
      [In] Graphics obj0,
      [In] Pen obj1,
      [In] Rectangle[] obj2)
    {
      obj0.DrawRectangles(obj1, obj2);
    }

    static string \u200C​‮‫⁯‫‫​‭‏‍⁯⁯⁫⁯⁯⁫‪‫⁯‍​⁪​⁬​‮‭‬‫‬‬‭‬⁯‪‮‎⁮‍‮([In] object obj0) => obj0.ToString();

    static void \u206F‎‫‌⁪‏‎‍⁪‍⁮​‪‭‎‏‍‭⁯‪‭‫‮‫‮‍⁮⁬‏‭⁬‮⁮‮‍​⁬‮‌‮‮(
      [In] Graphics obj0,
      [In] Brush obj1,
      [In] RectangleF obj2)
    {
      obj0.FillEllipse(obj1, obj2);
    }

    static void \u202E⁭‎‬‫‍⁬​⁬‌⁪⁯⁫‮‭⁪​​‬⁫‬‌⁯​‎⁫⁫‏⁮⁯‍‭‭⁪‍‎⁮⁯‏⁪‮(
      [In] Graphics obj0,
      [In] string obj1,
      [In] Font obj2,
      [In] Brush obj3,
      [In] PointF obj4)
    {
      obj0.DrawString(obj1, obj2, obj3, obj4);
    }

    static void \u202D‌‫​‮⁮‬‫⁪⁭‏‮⁬⁯‏⁯‏‎‭⁪‪⁫‮⁬‎‌‪‭⁪⁪⁮‌‬‮‎‏‭⁪⁫⁬‮(
      [In] Graphics obj0,
      [In] Pen obj1,
      [In] RectangleF obj2)
    {
      obj0.DrawEllipse(obj1, obj2);
    }
  }
}
