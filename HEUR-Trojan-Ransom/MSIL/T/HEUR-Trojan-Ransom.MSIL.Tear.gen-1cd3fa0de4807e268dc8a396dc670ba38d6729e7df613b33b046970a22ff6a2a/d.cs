// Decompiled with JetBrains decompiler
// Type: d
// Assembly: EncoderCSL, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8BC70EB6-E222-4E38-9ED5-32744A85C676
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-Ransom.MSIL.Tear.gen-1cd3fa0de4807e268dc8a396dc670ba38d6729e7df613b33b046970a22ff6a2a.exe

using PreEmptive.Analytics.Common;
using PreEmptive.Analytics.Common.Tags;
using PreEmptive.Analytics.Common.Utilities;
using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

internal class d : Message
{
  public d(Guid A_0, Guid A_1, [Optional] ExtendedKeys A_2, [Optional] BinaryInfoTag A_3)
  {
    int A_1_1 = 8;
    // ISSUE: explicit constructor call
    base.\u002Ector(A_1, A_2, A_3);
    // ISSUE: reference to a compiler-generated method
    this.h(A_0);
    this.AddAttribute(Utils.a("쾻튽ꦿꛁ", A_1_1), this.h().ToString());
  }

  [CompilerGenerated]
  [SpecialName]
  public Guid h()
  {
    int num1 = -30876;
    int num2 = num1;
    num1 = -30876;
    int num3 = num1;
    switch (num2 == num3)
    {
      case true:
        int num4 = 0;
        if (num4 == 0)
          ;
        num4 = 1;
        if (num4 == 0)
          ;
        // ISSUE: reference to a compiler-generated field
        return this.a;
      default:
        goto case 1;
    }
  }

  [SpecialName]
  public override string get_TagDescription()
  {
    int A_1 = 9;
    int num1 = 1;
    if (num1 == 0)
      ;
    num1 = -2093;
    int num2 = num1;
    num1 = -2093;
    int num3 = num1;
    switch (num2 == num3)
    {
      case true:
        num1 = 0;
        if (num1 == 0)
          ;
        return Utils.a("\uDCBC쾾뇀꿂계꓆\uA8C8뿊\uA4CCꃎ뿐\uF3D2냔꿖꧘닚꿜뻞闠諢諤触", A_1);
      default:
        goto case 1;
    }
  }

  [SpecialName]
  public override string get_TagName()
  {
    int A_1 = 10;
    int num1 = -12915;
    int num2 = num1;
    num1 = -12915;
    int num3 = num1;
    switch (num2 == num3)
    {
      case true:
        if (false)
          ;
        if (true)
          ;
        return Utils.a("\uDFBD낿닁\uE9C3ꏅ냇뫉", A_1);
      default:
        goto case 1;
    }
  }
}
