// Decompiled with JetBrains decompiler
// Type: DataAccessFramework.Querying.FieldReference
// Assembly: PreAllocatedOverlap, Version=1.0.2.1, Culture=neutral, PublicKeyToken=null
// MVID: B92242D0-7BA9-445E-B92A-42A0AEAC877F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Email-Worm.MSIL.LovGate.gen-514cb032bdc969f3ffe7822a716534d8e477f161e0d12f70225b72524e53bc11.exe

using System;
using System.Runtime.InteropServices;
using System.Text;

namespace DataAccessFramework.Querying
{
  public class FieldReference : WherePart
  {
    private readonly QueryTable _table;
    private readonly string _fieldName;

    public FieldReference(QueryTable table, string fieldName)
    {
label_1:
      int num1 = 1880431372;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2072394902)) % 5U)
        {
          case 0:
            num1 = (int) num2 * 465733336 ^ 936374254;
            continue;
          case 1:
            num1 = (int) num2 * 198680584 ^ 302131078;
            continue;
          case 2:
            this._table = table;
            this._fieldName = fieldName;
            num1 = (int) num2 * -798476699 ^ -1067256232;
            continue;
          case 3:
            goto label_1;
          case 4:
            goto label_3;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    internal override void BuildSql(BuildSqlContext context)
    {
label_1:
      int num1 = 173341087;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1696148250)) % 5U)
        {
          case 0:
            FieldReference.\u206B​⁯‪⁯⁭‭‫⁬‭⁮​‫​‍⁬‫⁯‪‪‍‬‮‭‫⁮​⁪⁪⁭‮⁫‏‬‬⁬⁭⁫‬⁬‮(context.Builder, \u003CModule\u003E.\u206B‏⁮‭⁬⁭‪‌​‮⁪‬‎⁪​​⁭‮⁬‪⁭‭‪‬⁬‮⁫⁫‮‎‮‏‫⁬⁪‌⁬‌‏⁫‮<string>(3464440244U));
            num1 = (int) num2 * 1797627512 ^ 420294397;
            continue;
          case 1:
            FieldReference.\u206B​⁯‪⁯⁭‭‫⁬‭⁮​‫​‍⁬‫⁯‪‪‍‬‮‭‫⁮​⁪⁪⁭‮⁫‏‬‬⁬⁭⁫‬⁬‮(context.Builder, context.ResolveAlias(this._table));
            num1 = (int) num2 * 22245060 ^ 1852767356;
            continue;
          case 2:
            goto label_1;
          case 3:
            FieldReference.\u206B​⁯‪⁯⁭‭‫⁬‭⁮​‫​‍⁬‫⁯‪‪‍‬‮‭‫⁮​⁪⁪⁭‮⁫‏‬‬⁬⁭⁫‬⁬‮(context.Builder, this._fieldName);
            FieldReference.\u206B​⁯‪⁯⁭‭‫⁬‭⁮​‫​‍⁬‫⁯‪‪‍‬‮‭‫⁮​⁪⁪⁭‮⁫‏‬‬⁬⁭⁫‬⁬‮(context.Builder, \u003CModule\u003E.\u200B‫‫‫⁯⁫‫‫⁬‪‪​‫⁮⁪⁪⁭‬‮⁬​‪‍‎‏⁫‬⁫‫‬‬⁫‭‍‏⁯‪⁪‫‮‮<string>(130610490U));
            num1 = (int) num2 * -1732059347 ^ -1087395146;
            continue;
          case 4:
            goto label_3;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public QueryTable Table
    {
      get
      {
label_1:
        int num1 = 525611298;
        QueryTable table;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1373201949)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * -470494621 ^ -134282430;
              continue;
            case 3:
              table = this._table;
              num1 = (int) num2 * -1250537475 ^ 2004869776;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return table;
      }
    }

    public string FieldName
    {
      get
      {
label_1:
        int num1 = -83384374;
        string fieldName;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -359853141)) % 4U)
          {
            case 0:
              num1 = (int) num2 * -346719321 ^ -1026722879;
              continue;
            case 1:
              fieldName = this._fieldName;
              num1 = (int) num2 * 895703800 ^ 602369519;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return fieldName;
      }
    }

    public EqualsClause EqualTo(int value)
    {
label_1:
      int num1 = -1212022591;
      EqualsClause equalsClause;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -351814125)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            equalsClause = new EqualsClause((WherePart) this, (WherePart) new IntConstant(value));
            num1 = (int) num2 * -193150633 ^ -1010274119;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return equalsClause;
    }

    public EqualsClause EqualTo(string value)
    {
      EqualsClause equalsClause = new EqualsClause((WherePart) this, (WherePart) new StringConstant(value));
label_1:
      int num1 = 1953080155;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1144515551)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 2144024785 ^ 1471967012;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return equalsClause;
    }

    public EqualsClause EqualTo(long value)
    {
      EqualsClause equalsClause = new EqualsClause((WherePart) this, (WherePart) new LongConstant(value));
label_1:
      int num1 = 1463913006;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 687798911)) % 3U)
        {
          case 1:
            num1 = (int) num2 * -1247915653 ^ -1140541547;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return equalsClause;
    }

    public EqualsClause EqualTo(bool value)
    {
      EqualsClause equalsClause = new EqualsClause((WherePart) this, (WherePart) new BoolConstant(value));
label_1:
      int num1 = -379738243;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -206445716)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * 730147542 ^ -1639142961;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return equalsClause;
    }

    public EqualsClause EqualTo(FieldReference field)
    {
label_1:
      int num1 = 1724848403;
      EqualsClause equalsClause;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1089087803)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            equalsClause = new EqualsClause((WherePart) this, (WherePart) field);
            num1 = (int) num2 * 449930188 ^ 1196253782;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return equalsClause;
    }

    public WherePart StartsWith(string name)
    {
label_1:
      int num1 = 2086956137;
      WherePart wherePart;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 713949931)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            wherePart = (WherePart) new StartsWithClause((WherePart) this, name);
            num1 = (int) num2 * -69638156 ^ 1899005400;
            continue;
          case 3:
            num1 = (int) num2 * 1515426664 ^ 1938265282;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return wherePart;
    }

    public WherePart LessThan(DateTime value)
    {
      WherePart wherePart = (WherePart) new LessThanClause((WherePart) this, (WherePart) new DateTimeConstant(value));
label_1:
      int num1 = -1881013144;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -856934075)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1269887309 ^ -1304650145;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return wherePart;
    }

    static StringBuilder \u206B​⁯‪⁯⁭‭‫⁬‭⁮​‫​‍⁬‫⁯‪‪‍‬‮‭‫⁮​⁪⁪⁭‮⁫‏‬‬⁬⁭⁫‬⁬‮(
      [In] StringBuilder obj0,
      [In] string obj1)
    {
      return obj0.Append(obj1);
    }
  }
}
