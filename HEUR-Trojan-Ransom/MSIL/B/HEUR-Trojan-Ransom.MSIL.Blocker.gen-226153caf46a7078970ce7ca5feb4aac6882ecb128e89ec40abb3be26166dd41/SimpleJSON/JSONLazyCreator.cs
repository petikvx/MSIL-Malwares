// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONLazyCreator
// Assembly: ContractHelp, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 7E915048-53CD-4869-AA6D-7821BA258ED2
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-226153caf46a7078970ce7ca5feb4aac6882ecb128e89ec40abb3be26166dd41.exe

namespace SimpleJSON
{
  internal class JSONLazyCreator : JSONNode
  {
    private JSONNode m_Node = (JSONNode) null;
    private string m_Key = (string) null;

    public JSONLazyCreator(JSONNode aNode)
    {
label_1:
      int num1 = 401197338;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 634355619)) % 4U)
        {
          case 1:
            num1 = (int) num2 * -530154287 ^ 1735397957;
            continue;
          case 2:
            goto label_1;
          case 3:
            this.m_Node = aNode;
            num1 = (int) num2 * 959896163 ^ -1955628058;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      this.m_Key = (string) null;
    }

    public JSONLazyCreator(JSONNode aNode, string aKey)
    {
label_1:
      int num1 = -1572420746;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1750529025)) % 4U)
        {
          case 1:
            num1 = (int) num2 * 1759728072 ^ -1948559972;
            continue;
          case 2:
            goto label_1;
          case 3:
            this.m_Node = aNode;
            num1 = (int) num2 * 1533302389 ^ -2024088404;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      this.m_Key = aKey;
    }

    private void Set(JSONNode aVal)
    {
label_1:
      int num1 = -8911029;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1890926032)) % 8U)
        {
          case 0:
            this.m_Node.Add(aVal);
            num1 = (int) num2 * -293189328 ^ -1197033898;
            continue;
          case 1:
            num1 = (int) num2 * -918473800 ^ 837284770;
            continue;
          case 3:
            int num3 = this.m_Key != null ? -741480716 : (num3 = -217663581);
            num1 = num3 ^ (int) num2 * 55738441;
            continue;
          case 4:
            goto label_1;
          case 5:
            num1 = (int) num2 * 1282393288 ^ 897095602;
            continue;
          case 6:
            num1 = (int) num2 * -1309309830 ^ 1403480673;
            continue;
          case 7:
            this.m_Node.Add(this.m_Key, aVal);
            num1 = -353205567;
            continue;
          default:
            goto label_9;
        }
      }
label_9:
      this.m_Node = (JSONNode) null;
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
label_1:
        int num1 = 1546489507;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1689735194)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * -728457850 ^ -319104984;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
        JSONArray aVal = new JSONArray();
label_1:
        int num1 = -645986583;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1889965442)) % 4U)
          {
            case 0:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 972041619 ^ -17717281;
              continue;
            case 1:
              goto label_3;
            case 2:
              goto label_1;
            case 3:
              aVal.Add(value);
              num1 = (int) num2 * 1251569540 ^ 833769862;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
label_1:
        int num1 = 602103211;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 174728398)) % 3U)
          {
            case 1:
              num1 = (int) num2 * -702497985 ^ 1123697553;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 1963693618;
        JSONClass aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 816790711)) % 4U)
          {
            case 0:
              goto label_3;
            case 1:
              aVal = new JSONClass();
              num1 = (int) num2 * 1207036884 ^ 1390099193;
              continue;
            case 2:
              aVal.Add(aKey, value);
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1081974350 ^ 2071716711;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override void Add(JSONNode aItem)
    {
label_1:
      int num1 = -1633775514;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1170733389)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            JSONArray aVal = new JSONArray();
            aVal.Add(aItem);
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * -241712809 ^ 221981867;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = 275899148;
      JSONClass aVal;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 405244937)) % 6U)
        {
          case 0:
            goto label_1;
          case 1:
            aVal.Add(aKey, aItem);
            num1 = (int) num2 * -615322924 ^ 1946449829;
            continue;
          case 2:
            goto label_3;
          case 3:
            aVal = new JSONClass();
            num1 = (int) num2 * 1899598453 ^ 2101235591;
            continue;
          case 4:
            num1 = (int) num2 * 813976703 ^ 766353542;
            continue;
          case 5:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * -813385893 ^ -801983588;
            continue;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    public static bool operator ==(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = 1297917271;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1541068881)) % 5U)
        {
          case 1:
            flag = (object) a == b;
            num1 = 1492664418;
            continue;
          case 2:
            int num3 = b == null ? 216375283 : (num3 = 568869196);
            num1 = num3 ^ (int) num2 * 31204477;
            continue;
          case 3:
            flag = true;
            num1 = (int) num2 * 282856044 ^ -1713895310;
            continue;
          case 4:
            goto label_1;
          default:
            goto label_6;
        }
      }
label_6:
      return flag;
    }

    public static bool operator !=(JSONLazyCreator a, object b) => !(a == b);

    public override bool Equals(object obj)
    {
      bool flag1 = obj == null;
label_1:
      int num1 = 1004544720;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1489407339)) % 6U)
        {
          case 0:
            num1 = (int) num2 * -805711258 ^ 346992369;
            continue;
          case 1:
            int num3 = !flag1 ? -696625374 : (num3 = -769467079);
            num1 = num3 ^ (int) num2 * -1596059581;
            continue;
          case 2:
            flag2 = (object) this == obj;
            num1 = 1745889329;
            continue;
          case 3:
            goto label_1;
          case 5:
            flag2 = true;
            num1 = (int) num2 * -1721513406 ^ -504438707;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      return flag2;
    }

    public override int GetHashCode()
    {
      int hashCode = base.GetHashCode();
label_1:
      int num1 = -2039271590;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1547126310)) % 3U)
        {
          case 1:
            num1 = (int) num2 * 1186597706 ^ -26920751;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return hashCode;
    }

    public override string ToString()
    {
label_1:
      int num1 = -510462545;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -736092938)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            str = "";
            num1 = (int) num2 * 2025247371 ^ 1383269509;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override string ToString(string aPrefix) => "";

    public override int AsInt
    {
      get
      {
        this.Set((JSONNode) new JSONData(0));
label_1:
        int num1 = -548375177;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -986085768)) % 5U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * -1933184269 ^ 24976131;
              continue;
            case 3:
              asInt = 0;
              num1 = (int) num2 * 515599731 ^ 520622634;
              continue;
            case 4:
              num1 = (int) num2 * -1673881960 ^ 1554198924;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asInt;
      }
      set
      {
        JSONData aVal = new JSONData(value);
label_1:
        int num1 = -940109260;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2128624803)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1780537865 ^ 1782857027;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override float AsFloat
    {
      get
      {
label_1:
        int num1 = -1318317461;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -546312582)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Set((JSONNode) new JSONData(0.0f));
              asFloat = 0.0f;
              num1 = (int) num2 * -1084539418 ^ -1130785323;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asFloat;
      }
      set => this.Set((JSONNode) new JSONData(value));
    }

    public override double AsDouble
    {
      get
      {
        JSONData aVal = new JSONData(0.0);
label_1:
        int num1 = -171079759;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -784205988)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -1438271520 ^ -1694233833;
              continue;
            case 3:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1276525297 ^ -1802519546;
              continue;
            case 4:
              num1 = (int) num2 * -822352491 ^ 647690424;
              continue;
            case 5:
              asDouble = 0.0;
              num1 = (int) num2 * 1319421201 ^ -1012083113;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = 1067414573;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1958314066)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              aVal = new JSONData(value);
              num1 = (int) num2 * -2063102523 ^ -1076875539;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        this.Set((JSONNode) aVal);
      }
    }

    public override bool AsBool
    {
      get
      {
label_1:
        int num1 = 729318001;
        JSONData aVal;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 818516136)) % 7U)
          {
            case 0:
              num1 = (int) num2 * 2077819238 ^ -2070678122;
              continue;
            case 1:
              num1 = (int) num2 * -1065492814 ^ -1018041983;
              continue;
            case 2:
              asBool = false;
              num1 = (int) num2 * 474188426 ^ -722518461;
              continue;
            case 3:
              goto label_1;
            case 4:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1295106792 ^ -174750455;
              continue;
            case 5:
              aVal = new JSONData(false);
              num1 = (int) num2 * -1577734896 ^ -1852161474;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asBool;
      }
      set => this.Set((JSONNode) new JSONData(value));
    }

    public override JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = 1962914273;
        JSONArray aVal;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1200524626)) % 6U)
          {
            case 0:
              asArray = aVal;
              num1 = (int) num2 * 1444775383 ^ -26612197;
              continue;
            case 1:
              aVal = new JSONArray();
              num1 = (int) num2 * 1178264411 ^ 448472179;
              continue;
            case 3:
              num1 = (int) num2 * -980496227 ^ -272486987;
              continue;
            case 4:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -280511293 ^ 323603772;
              continue;
            case 5:
              goto label_1;
            default:
              goto label_7;
          }
        }
label_7:
        return asArray;
      }
    }

    public override JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = -628503100;
        JSONClass aVal;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -445806076)) % 5U)
          {
            case 0:
              asObject = aVal;
              num1 = (int) num2 * -606230257 ^ -811926285;
              continue;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * 1796504723 ^ -1795566738;
              continue;
            case 4:
              aVal = new JSONClass();
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 487718122 ^ 1492022434;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asObject;
      }
    }
  }
}
