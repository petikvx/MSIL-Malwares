// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONArray
// Assembly: SafeArrayTypeMismatchExcepti, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: FE98C20D-A437-4C5F-9849-D190358A66A6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-c0f665918f4ea75327960ddf58cf37e415a6bf6569a4c22aa6291fbac9d171ce.exe

using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONArray : JSONNode, IEnumerable
  {
    private List<JSONNode> m_List = new List<JSONNode>();

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = -773236528;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ -911963436)) % 9U)
          {
            case 0:
              num1 = (int) num2 * -1568949190 ^ -160591586;
              continue;
            case 1:
              num1 = (int) num2 * 912098400 ^ 745741816;
              continue;
            case 2:
              goto label_1;
            case 3:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * -924651479 ^ -20833389;
                continue;
              }
              num3 = 1;
              break;
            case 4:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * -2118775303 ^ -867080059;
              continue;
            case 5:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            case 6:
              jsonNode = this.m_List[aIndex];
              num1 = -1694046745;
              continue;
            case 8:
              int num4 = !flag ? 2104080413 : (num4 = 1996421006);
              num1 = num4 ^ (int) num2 * -573985787;
              continue;
            default:
              goto label_13;
          }
          flag = num3 != 0;
          num1 = -1128959712;
        }
label_13:
        return jsonNode;
      }
      set
      {
        if (aIndex < 0)
          goto label_11;
label_1:
        int num1 = -1990923070;
label_2:
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -683454881)) % 9U)
          {
            case 0:
              this.m_List.Add(value);
              num1 = (int) num2 * -206343324 ^ 741361199;
              continue;
            case 1:
              goto label_3;
            case 2:
              int num3 = flag ? 1945528463 : (num3 = 1476920237);
              num1 = num3 ^ (int) num2 * 502410785;
              continue;
            case 3:
              this.m_List[aIndex] = value;
              num1 = -374000240;
              continue;
            case 4:
              num1 = (int) num2 * 953414430 ^ -521075992;
              continue;
            case 5:
              goto label_1;
            case 6:
              num1 = (int) num2 * -2130094583 ^ -1661398241;
              continue;
            case 7:
              goto label_10;
            case 8:
              num1 = (int) num2 * -301030842 ^ -1821222374;
              continue;
            default:
              goto label_13;
          }
        }
label_3:
        return;
label_13:
        return;
label_10:
        int num4 = aIndex >= this.m_List.Count ? 1 : 0;
        goto label_12;
label_11:
        num4 = 1;
label_12:
        flag = num4 != 0;
        num1 = -30419856;
        goto label_2;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -214904426;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -887956781)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 513822255 ^ 1484345761;
              continue;
            case 1:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * -687428693 ^ -2075682752;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = -584054702;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -389795815)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 312384365 ^ -328495182;
              continue;
            case 2:
              goto label_3;
            case 3:
              this.m_List.Add(value);
              num1 = (int) num2 * -303915218 ^ 2034658498;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = 1461650252;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 650811521)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 133577190 ^ -1864901206;
              continue;
            case 1:
              count = this.m_List.Count;
              num1 = (int) num2 * 1836025117 ^ -540520104;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = -723310291;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1355843265)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            this.m_List.Add(aItem);
            num1 = (int) num2 * 551512906 ^ -1308032772;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = -1417087469;
      JSONNode jsonNode1;
      while (true)
      {
        uint num2;
        bool flag;
        int num3;
        switch ((num2 = (uint) (num1 ^ -1126496819)) % 7U)
        {
          case 0:
            int num4 = !flag ? 23647691 : (num4 = 1310983410);
            num1 = num4 ^ (int) num2 * 289965946;
            continue;
          case 1:
            JSONNode jsonNode2 = this.m_List[aIndex];
            this.m_List.RemoveAt(aIndex);
            jsonNode1 = jsonNode2;
            num1 = -749997726;
            continue;
          case 2:
            goto label_1;
          case 4:
            if (aIndex < 0)
            {
              num3 = 1;
              break;
            }
            num1 = (int) num2 * 1556190958 ^ 1489358580;
            continue;
          case 5:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num2 * 292165044 ^ -1519249042;
            continue;
          case 6:
            num3 = aIndex >= this.m_List.Count ? 1 : 0;
            break;
          default:
            goto label_11;
        }
        flag = num3 != 0;
        num1 = -875512219;
      }
label_11:
      return jsonNode1;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      this.m_List.Remove(aNode);
label_1:
      int num1 = -1796334197;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -714726991)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            jsonNode = aNode;
            num1 = (int) num2 * -2133635483 ^ -850725839;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONArray.\u003Cget_Childs\u003Ed__13 getChildsD13 = new JSONArray.\u003Cget_Childs\u003Ed__13(-2);
        getChildsD13.\u003C\u003E4__this = this;
label_1:
        int num1 = -1208378796;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -620494560)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              childs = (IEnumerable<JSONNode>) getChildsD13;
              num1 = (int) num2 * 975679460 ^ -1419842179;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return childs;
      }
    }

    public IEnumerator GetEnumerator()
    {
      bool enumerator1;
      // ISSUE: fault handler
      try
      {
        // ISSUE: reference to a compiler-generated field
        int num1 = this.\u003C\u003E1__state;
label_1:
        int num2 = 514180425;
        List<JSONNode>.Enumerator enumerator;
        JSONNode N;
        while (true)
        {
          uint num3;
          switch ((num3 = (uint) (num2 ^ 1381050955)) % 19U)
          {
            case 0:
              N = enumerator.Current;
              num2 = 1459344405;
              continue;
            case 1:
              enumerator = this.m_List.GetEnumerator();
              num2 = (int) num3 * 1745252857 ^ 664103201;
              continue;
            case 2:
              num2 = (int) num3 * 1228649602 ^ 332427507;
              continue;
            case 3:
              int num4;
              num2 = num4 = num1 == 1 ? 594294585 : (num4 = 1506745544);
              continue;
            case 5:
            case 16:
              goto label_18;
            case 6:
              int num5;
              num2 = num5 = !enumerator.MoveNext() ? 1308805609 : (num5 = 325807767);
              continue;
            case 7:
              N = (JSONNode) null;
              num2 = (int) num3 * -1830236627 ^ 969933380;
              continue;
            case 8:
            case 18:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = 207712167;
              continue;
            case 9:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E2__current = (object) N;
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = 1;
              enumerator1 = true;
              num2 = (int) num3 * 1335962171 ^ 1296503459;
              continue;
            case 10:
              int num6 = num1 == 0 ? -373689067 : (num6 = -1931347080);
              num2 = num6 ^ (int) num3 * 2097952589;
              continue;
            case 11:
            case 17:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -1;
              num2 = 1284706826;
              continue;
            case 12:
              num2 = (int) num3 * 425519130 ^ -1266860945;
              continue;
            case 13:
              enumerator1 = false;
              num2 = 116888904;
              continue;
            case 14:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = (int) num3 * -35524742 ^ -174058826;
              continue;
            case 15:
              goto label_1;
            default:
              goto label_16;
          }
        }
label_16:
        // ISSUE: reference to a compiler-generated method
        this.\u003C\u003Em__Finally1();
        enumerator = new List<JSONNode>.Enumerator();
        enumerator1 = false;
      }
      __fault
      {
        // ISSUE: reference to a compiler-generated method
        this.System\u002EIDisposable\u002EDispose();
      }
label_18:
      return enumerator1;
    }

    public override string ToString()
    {
label_1:
      int num1 = 1308533407;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1369394523)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            str1 = "[ ";
            num1 = (int) num2 * 373173111 ^ -415186424;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator();
      try
      {
label_10:
        int num3 = !enumerator.MoveNext() ? 1188860254 : (num3 = 1431232597);
        JSONNode current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1369394523)) % 8U)
          {
            case 0:
              num3 = 1431232597;
              continue;
            case 1:
              goto label_10;
            case 2:
              num3 = (int) num4 * -634877391 ^ -722153904;
              continue;
            case 3:
              int num5 = JSONArray.\u200B‮⁪⁭⁪⁮‍‮⁫‮⁯‌‍⁭‌⁬⁫‍​‎⁪‪‪⁫⁪⁬⁫‬‭‍⁫‍‎​‌⁯⁭‌⁫‪‮(str1) <= 2 ? -2059712422 : (num5 = -553586847);
              num3 = num5 ^ (int) num4 * -1276234145;
              continue;
            case 4:
              str1 = JSONArray.\u206A‍‪‪‎⁯‎‏‮⁭‮⁬‭⁭‫⁭⁮‭‮‬‫⁭‫‭‏‍⁮⁪‫⁭​​⁯⁬⁮⁪‭⁪⁭⁫‮(str1, JSONArray.\u206A‮⁬​‪⁫‎‍‬‪‫​‎⁯‫⁭⁬‏⁬‬⁮​‎⁬⁫‌‫‏‭⁭​‮‫‭‎‬⁭‍‪⁫‮((object) current));
              num3 = 393411609;
              continue;
            case 6:
              current = enumerator.Current;
              num3 = 1197377064;
              continue;
            case 7:
              str1 = JSONArray.\u206A‍‪‪‎⁯‎‏‮⁭‮⁬‭⁭‫⁭⁮‭‮‬‫⁭‫‭‏‍⁮⁪‫⁭​​⁯⁬⁮⁪‭⁪⁭⁫‮(str1, ", ");
              num3 = (int) num4 * -1641528451 ^ 561228876;
              continue;
            default:
              goto label_19;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_15:
        int num6 = 1324566320;
        while (true)
        {
          uint num7;
          switch ((num7 = (uint) (num6 ^ 1369394523)) % 3U)
          {
            case 0:
              goto label_15;
            case 1:
              num6 = (int) num7 * -1118034845 ^ 581382718;
              continue;
            default:
              goto label_18;
          }
        }
label_18:;
      }
label_19:
      string str2 = JSONArray.\u206A‍‪‪‎⁯‎‏‮⁭‮⁬‭⁭‫⁭⁮‭‮‬‫⁭‫‭‏‍⁮⁪‫⁭​​⁯⁬⁮⁪‭⁪⁭⁫‮(str1, " ]");
label_20:
      int num8 = 375676682;
      string str3;
      while (true)
      {
        uint num9;
        switch ((num9 = (uint) (num8 ^ 1369394523)) % 4U)
        {
          case 0:
            goto label_20;
          case 1:
            str3 = str2;
            num8 = (int) num9 * -773183874 ^ -1377259849;
            continue;
          case 2:
            num8 = (int) num9 * 2082479071 ^ 1268144998;
            continue;
          default:
            goto label_24;
        }
      }
label_24:
      return str3;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = -1115943746;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -475906645)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            str1 = "[ ";
            num1 = (int) num2 * -1123353878 ^ -1609503074;
            continue;
          case 3:
            num1 = (int) num2 * -1936333329 ^ 447774988;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_10:
        int num3 = !enumerator.MoveNext() ? -337767318 : (num3 = -1267068348);
        JSONNode current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -475906645)) % 6U)
          {
            case 0:
              goto label_10;
            case 1:
              current = enumerator.Current;
              int num5;
              num3 = num5 = JSONArray.\u200B‮⁪⁭⁪⁮‍‮⁫‮⁯‌‍⁭‌⁬⁫‍​‎⁪‪‪⁫⁪⁬⁫‬‭‍⁫‍‎​‌⁯⁭‌⁫‪‮(str1) > 3 ? -602483219 : (num5 = -977818555);
              continue;
            case 2:
              str1 = JSONArray.\u206A‍‪‪‎⁯‎‏‮⁭‮⁬‭⁭‫⁭⁮‭‮‬‫⁭‫‭‏‍⁮⁪‫⁭​​⁯⁬⁮⁪‭⁪⁭⁫‮(str1, ", ");
              num3 = (int) num4 * -848493612 ^ 299927485;
              continue;
            case 4:
              str1 = JSONArray.\u202D⁪⁯⁬‭‪‬⁬⁫‫‮⁫⁯‏⁪⁯⁬⁬‫‌‮⁯‫⁮‏⁪​⁭‌‮⁯⁫‭⁬⁪​‍‎‍⁯‮(str1, "\n", aPrefix, "   ");
              str1 = JSONArray.\u206A‍‪‪‎⁯‎‏‮⁭‮⁬‭⁭‫⁭⁮‭‮‬‫⁭‫‭‏‍⁮⁪‫⁭​​⁯⁬⁮⁪‭⁪⁭⁫‮(str1, current.ToString(JSONArray.\u206A‍‪‪‎⁯‎‏‮⁭‮⁬‭⁭‫⁭⁮‭‮‬‫⁭‫‭‏‍⁮⁪‫⁭​​⁯⁬⁮⁪‭⁪⁭⁫‮(aPrefix, "   ")));
              num3 = -792177391;
              continue;
            case 5:
              num3 = -1267068348;
              continue;
            default:
              goto label_14;
          }
        }
      }
label_14:
      string str2 = JSONArray.\u202D⁪⁯⁬‭‪‬⁬⁫‫‮⁫⁯‏⁪⁯⁬⁬‫‌‮⁯‫⁮‏⁪​⁭‌‮⁯⁫‭⁬⁪​‍‎‍⁯‮(str1, "\n", aPrefix, "]");
label_15:
      int num6 = -164855949;
      string str3;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ -475906645)) % 3U)
        {
          case 0:
            goto label_15;
          case 1:
            str3 = str2;
            num6 = (int) num7 * 1348640346 ^ -1185830705;
            continue;
          default:
            goto label_18;
        }
      }
label_18:
      return str3;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = 1704806739;
      int index;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1533577723)) % 9U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -470396567 ^ -242368017;
            continue;
          case 2:
            index = 0;
            num1 = (int) num2 * -2142653542 ^ -375439529;
            continue;
          case 3:
            int num3;
            num1 = num3 = index < this.m_List.Count ? 1066872707 : (num3 = 968301899);
            continue;
          case 4:
            JSONArray.\u202C​​‍‎‌‮⁪⁬‎⁬⁬‫⁪‭‬⁫‎⁯⁪⁯⁬‪⁯⁬‬‪‍‌‏‌⁬‭‏⁭⁫‌⁯‬‮(aWriter, (byte) 1);
            num1 = (int) num2 * -1484120431 ^ -1442852931;
            continue;
          case 5:
            this.m_List[index].Serialize(aWriter);
            num1 = 1885701438;
            continue;
          case 6:
            goto label_3;
          case 7:
            ++index;
            num1 = (int) num2 * -1675515680 ^ 357062913;
            continue;
          case 8:
            JSONArray.\u200E‏⁬⁯⁯‎⁮​‮​‫⁫⁬⁭‍⁪⁮‮⁯‌‎⁯‮​⁬‪‌‬⁯‍‫‫‍‎‫‮‮⁫⁪‮‮(aWriter, this.m_List.Count);
            num1 = (int) num2 * 752670439 ^ -1800925698;
            continue;
          default:
            goto label_11;
        }
      }
label_3:
      return;
label_11:;
    }

    static int \u200B‮⁪⁭⁪⁮‍‮⁫‮⁯‌‍⁭‌⁬⁫‍​‎⁪‪‪⁫⁪⁬⁫‬‭‍⁫‍‎​‌⁯⁭‌⁫‪‮([In] string obj0) => obj0.Length;

    static string \u206A‍‪‪‎⁯‎‏‮⁭‮⁬‭⁭‫⁭⁮‭‮‬‫⁭‫‭‏‍⁮⁪‫⁭​​⁯⁬⁮⁪‭⁪⁭⁫‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u206A‮⁬​‪⁫‎‍‬‪‫​‎⁯‫⁭⁬‏⁬‬⁮​‎⁬⁫‌‫‏‭⁭​‮‫‭‎‬⁭‍‪⁫‮([In] object obj0) => obj0.ToString();

    static string \u202D⁪⁯⁬‭‪‬⁬⁫‫‮⁫⁯‏⁪⁯⁬⁬‫‌‮⁯‫⁮‏⁪​⁭‌‮⁯⁫‭⁬⁪​‍‎‍⁯‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u202C​​‍‎‌‮⁪⁬‎⁬⁬‫⁪‭‬⁫‎⁯⁪⁯⁬‪⁯⁬‬‪‍‌‏‌⁬‭‏⁭⁫‌⁯‬‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u200E‏⁬⁯⁯‎⁮​‮​‫⁫⁬⁭‍⁪⁮‮⁯‌‎⁯‮​⁬‪‌‬⁯‍‫‫‍‎‫‮‮⁫⁪‮‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);
  }
}
