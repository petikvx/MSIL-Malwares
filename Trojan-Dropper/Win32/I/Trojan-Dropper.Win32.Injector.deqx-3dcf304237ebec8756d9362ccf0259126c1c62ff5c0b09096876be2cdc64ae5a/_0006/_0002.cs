// Decompiled with JetBrains decompiler
// Type: .
// Assembly: file, Version=11.0.0.0, Culture=neutral, PublicKeyToken=71f2cf7c2509b8fe
// MVID: 1F473243-1123-401F-8099-7648B7C34C41
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan-Dropper.Win32.Injector.deqx-3dcf304237ebec8756d9362ccf0259126c1c62ff5c0b09096876be2cdc64ae5a.exe

using \u0008;
using System;
using System.IO;
using System.Reflection;
using System.Security.Cryptography;

namespace \u0006
{
  internal sealed class \u0002 : IDisposable
  {
    private readonly Type \u0001;
    private readonly object \u0001;

    public \u0002()
    {
      Assembly assembly;
      try
      {
        try
        {
          assembly = Assembly.Load("System.Core, Version=2.0.5.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e");
          this.\u0001 = assembly.GetType("System.Security.Cryptography.AesManaged");
        }
        catch (FileNotFoundException ex)
        {
          assembly = Assembly.Load("mscorlib");
          this.\u0001 = assembly.GetType("System.Security.Cryptography.RijndaelManaged");
        }
        this.\u0001 = Activator.CreateInstance(this.\u0001);
      }
      catch (Exception ex)
      {
        Assembly o1 = assembly;
        \u0004.\u0002(ex, (object) o1, (object) this);
        throw;
      }
    }

    public ICryptoTransform \u0002(byte[] key, byte[] iv, bool decrypt)
    {
      object[] objArray1;
      MethodInfo methodInfo;
      try
      {
        MethodInfo setMethod1 = this.\u0001.GetProperty("Key").GetSetMethod();
        object obj1 = this.\u0001;
        object[] objArray2 = new object[1];
        if (true)
          goto label_4;
label_1:
        objArray1[0] = (object) key;
        object[] parameters1 = objArray1;
        setMethod1.Invoke(obj1, parameters1);
        MethodInfo setMethod2 = this.\u0001.GetProperty("IV").GetSetMethod();
        object obj2 = this.\u0001;
        object[] objArray3 = new object[1];
        if (true)
          goto label_5;
label_2:
        objArray1[0] = (object) iv;
        object[] parameters2 = objArray1;
        setMethod2.Invoke(obj2, parameters2);
        MethodInfo method = this.\u0001.GetMethod(decrypt ? "CreateDecryptor" : "CreateEncryptor", new Type[0]);
        if (true)
          goto label_6;
label_3:
        return (ICryptoTransform) methodInfo.Invoke(this.\u0001, new object[0]);
label_6:
        methodInfo = method;
        goto label_3;
label_5:
        objArray1 = objArray3;
        goto label_2;
label_4:
        objArray1 = objArray2;
        goto label_1;
      }
      catch (Exception ex)
      {
        MethodInfo o1 = methodInfo;
        object[] o2 = objArray1;
        byte[] o4 = key;
        byte[] o5 = iv;
        // ISSUE: variable of a boxed type
        __Boxed<bool> o6 = (ValueType) decrypt;
        \u0004.\u0002(ex, (object) o1, (object) o2, (object) this, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }

    public void \u0002()
    {
      try
      {
        do
        {
          if (true)
            this.\u0001.GetMethod("Clear").Invoke(this.\u0001, new object[0]);
        }
        while (false);
      }
      catch (Exception ex)
      {
        \u0004.\u0002(ex, (object) this);
        throw;
      }
    }

    public void Dispose()
    {
      try
      {
        this.\u0002();
      }
      catch (Exception ex)
      {
        \u0004.\u0002(ex, (object) this);
        throw;
      }
    }
  }
}
