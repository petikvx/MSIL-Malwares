// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONClass
// Assembly: CustomQueryInterfaceMo, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 4B293447-7555-427F-9A9F-AB127E35E000
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-d42aac0420fddf3828862d0a9a1e79708beccbc282bf11d5b45daa35c47ba73f.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONClass : JSONNode, IEnumerable
  {
    private Dictionary<string, JSONNode> m_Dict = new Dictionary<string, JSONNode>();

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 40829909;
        bool flag;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 261016484)) % 8U)
          {
            case 0:
              jsonNode = this.m_Dict[aKey];
              num1 = (int) num2 * 1413945437 ^ -974346792;
              continue;
            case 1:
              flag = this.m_Dict.ContainsKey(aKey);
              num1 = (int) num2 * -550835637 ^ -391120942;
              continue;
            case 2:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = 369054787;
              continue;
            case 4:
              num1 = (int) num2 * 1644974029 ^ 788153075;
              continue;
            case 5:
              int num3 = !flag ? 1533124066 : (num3 = 519711040);
              num1 = num3 ^ (int) num2 * 743563012;
              continue;
            case 6:
              goto label_1;
            case 7:
              num1 = (int) num2 * 731089310 ^ -1182133731;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return jsonNode;
      }
      set
      {
        bool flag = this.m_Dict.ContainsKey(aKey);
label_1:
        int num1 = 816977932;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1310263086)) % 7U)
          {
            case 0:
              num1 = (int) num2 * 1513563820 ^ -1949377239;
              continue;
            case 1:
              this.m_Dict[aKey] = value;
              num1 = (int) num2 * -1341314764 ^ 1083676247;
              continue;
            case 2:
              goto label_3;
            case 3:
              int num3 = flag ? 826783387 : (num3 = 2045146103);
              num1 = num3 ^ (int) num2 * 647006511;
              continue;
            case 4:
              num1 = (int) num2 * 1281770379 ^ -543540914;
              continue;
            case 5:
              goto label_1;
            case 6:
              this.m_Dict.Add(aKey, value);
              num1 = 145595554;
              continue;
            default:
              goto label_9;
          }
        }
label_3:
        return;
label_9:;
      }
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
        if (aIndex < 0)
          goto label_6;
label_1:
        int num1 = -1028073921;
label_2:
        bool flag;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1245241399)) % 7U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 227170119 ^ -721033946;
              continue;
            case 2:
              goto label_5;
            case 4:
              jsonNode = (JSONNode) null;
              num1 = -475050623;
              continue;
            case 5:
              int num3 = !flag ? -1019212832 : (num3 = -631806905);
              num1 = num3 ^ (int) num2 * 1257254021;
              continue;
            case 6:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 728369973 ^ -1395270129;
              continue;
            default:
              goto label_10;
          }
        }
label_5:
        int num4 = aIndex >= this.m_Dict.Count ? 1 : 0;
        goto label_7;
label_10:
        return jsonNode;
label_6:
        num4 = 1;
label_7:
        flag = num4 != 0;
        num1 = -1301581234;
        goto label_2;
      }
      set
      {
label_1:
        int num1 = 996009144;
        while (true)
        {
          uint num2;
          int num3;
          switch ((num2 = (uint) (num1 ^ 1990078286)) % 5U)
          {
            case 0:
              goto label_3;
            case 1:
              if (aIndex < 0)
              {
                num3 = 1;
                break;
              }
              num1 = (int) num2 * -1010233849 ^ 1305354134;
              continue;
            case 2:
              num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
              break;
            case 3:
              goto label_1;
            case 4:
              num1 = (int) num2 * 806399480 ^ 737592348;
              continue;
            default:
              goto label_10;
          }
          int num4;
          num1 = num4 = num3 != 0 ? 1025179315 : (num4 = 1368760836);
        }
label_3:
        return;
label_10:;
      }
    }

    public override int Count
    {
      get
      {
        int count = this.m_Dict.Count;
label_1:
        int num1 = -1219200604;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -370605047)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * 1204281832 ^ -783729526;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = 1654410933;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1740155055)) % 12U)
        {
          case 0:
            int num3 = !this.m_Dict.ContainsKey(aKey) ? 1488325042 : (num3 = 1182172796);
            num1 = num3 ^ (int) num2 * -1309076992;
            continue;
          case 1:
            this.m_Dict.Add(aKey, aItem);
            num1 = 1932468774;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * 1034615471 ^ 456213634;
            continue;
          case 4:
            num1 = (int) num2 * -1229274978 ^ 1435651558;
            continue;
          case 5:
            num1 = 1714140255;
            continue;
          case 6:
            flag = !JSONClass.\u206C‮⁫‍‌⁭‪‌⁪‬​‎⁫‍⁪‍‎⁫‍⁭‏⁪⁮‏‬‮‏‏‪‏‫⁭‌⁯‮​‮​‎⁬‮(aKey);
            num1 = (int) num2 * 249535672 ^ 1531673336;
            continue;
          case 7:
            this.m_Dict[aKey] = aItem;
            num1 = (int) num2 * 2079091119 ^ 428341137;
            continue;
          case 8:
            num1 = (int) num2 * 1047523424 ^ 812604030;
            continue;
          case 9:
            goto label_3;
          case 10:
            this.m_Dict.Add(Guid.NewGuid().ToString(), aItem);
            num1 = 506757246;
            continue;
          case 11:
            int num4 = flag ? -34511479 : (num4 = -2117865657);
            num1 = num4 ^ (int) num2 * -462658182;
            continue;
          default:
            goto label_14;
        }
      }
label_3:
      return;
label_14:;
    }

    public override JSONNode Remove(string aKey)
    {
label_1:
      int num1 = 1207528176;
      JSONNode jsonNode1;
      JSONNode jsonNode2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1350337690)) % 6U)
        {
          case 0:
            this.m_Dict.Remove(aKey);
            jsonNode2 = jsonNode1;
            num1 = (int) num2 * -1681978987 ^ 1501611973;
            continue;
          case 1:
            jsonNode1 = this.m_Dict[aKey];
            num1 = 1144685066;
            continue;
          case 2:
            int num3 = !this.m_Dict.ContainsKey(aKey) ? -525362789 : (num3 = -1229097775);
            num1 = num3 ^ (int) num2 * 554594113;
            continue;
          case 3:
            jsonNode2 = (JSONNode) null;
            num1 = (int) num2 * 2073601853 ^ -21479958;
            continue;
          case 4:
            goto label_1;
          default:
            goto label_7;
        }
      }
label_7:
      return jsonNode2;
    }

    public override JSONNode Remove(int aIndex)
    {
      if (aIndex < 0)
        goto label_8;
label_1:
      int num1 = -1072376956;
label_2:
      JSONNode jsonNode;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1843337529)) % 7U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 1102345908 ^ 2137369541;
            continue;
          case 3:
            goto label_7;
          case 4:
            int num3 = flag ? 928321535 : (num3 = 802285119);
            num1 = num3 ^ (int) num2 * -660393601;
            continue;
          case 5:
            jsonNode = (JSONNode) null;
            num1 = -1194528067;
            continue;
          case 6:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 1092254340 ^ 1497540009;
            continue;
          default:
            goto label_10;
        }
      }
label_7:
      int num4 = aIndex >= this.m_Dict.Count ? 1 : 0;
      goto label_9;
label_10:
      return jsonNode;
label_8:
      num4 = 1;
label_9:
      flag = num4 != 0;
      num1 = -1251168387;
      goto label_2;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      try
      {
        return (JSONNode) null;
      }
      catch
      {
label_3:
        int num1 = -555219991;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -729821059)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              num1 = (int) num2 * -1903229456 ^ -1250794403;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return (JSONNode) null;
      }
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONClass.\u003Cget_Childs\u003Ed__14 getChildsD14 = new JSONClass.\u003Cget_Childs\u003Ed__14(-2);
label_1:
        int num1 = -806995306;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1539691798)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              getChildsD14.\u003C\u003E4__this = this;
              childs = (IEnumerable<JSONNode>) getChildsD14;
              num1 = (int) num2 * 2076164750 ^ -2069928582;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return childs;
      }
    }

    public IEnumerator GetEnumerator() => (IEnumerator) new JSONClass.\u003CGetEnumerator\u003Ed__15(0)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString()
    {
      string str1 = "{";
label_1:
      int num1 = 1880018160;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1571153154)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1971288613 ^ 2049396315;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator();
      try
      {
label_8:
        int num3 = enumerator.MoveNext() ? 1491704523 : (num3 = 1229795268);
        bool flag;
        KeyValuePair<string, JSONNode> current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1571153154)) % 8U)
          {
            case 0:
              flag = JSONClass.\u206F‪​‭‎‌⁮⁯‭⁯‮‎‭⁫⁮⁫⁪‮‮‫‬‬‌⁮⁭⁫‌‫​‪​‪‪‪‍⁭‮‍‪⁮‮(str1) > 2;
              num3 = (int) num4 * 1007069670 ^ 425030054;
              continue;
            case 1:
              current = enumerator.Current;
              num3 = 1561751242;
              continue;
            case 2:
              str1 = JSONClass.\u202E‎⁮‏⁫‏⁭‬​⁭⁯⁯‎‮‪‌‍‌⁮‎⁮‭‭⁫​‌‪⁪⁮‍‪‌‏‮‫​​‮⁭‬‮(str1, ", ");
              num3 = (int) num4 * 1611778430 ^ -1944982463;
              continue;
            case 3:
              num3 = 1491704523;
              continue;
            case 4:
              int num5 = flag ? 2120791852 : (num5 = 1965088993);
              num3 = num5 ^ (int) num4 * 968692339;
              continue;
            case 5:
              goto label_8;
            case 7:
              str1 = JSONClass.\u202E‫‍⁮⁪‍‬⁬‭‎‬⁯‎‍‪‎⁬⁯⁫​‫‌‬‌⁭‍‍⁬⁫‮‬‌​‏‮​‫‏⁭‪‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\":",
                JSONClass.\u200B⁪⁪‬‬‌‫⁭‪⁪⁮‫‪‌‬‎‍‬⁯⁮‪‭‮‏⁫⁪⁫⁮‮‬‬‫⁪⁯‏‎‭⁪⁯‪‮((object) current.Value)
              });
              num3 = 543542903;
              continue;
            default:
              goto label_19;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_15:
        int num6 = 2137019775;
        while (true)
        {
          uint num7;
          switch ((num7 = (uint) (num6 ^ 1571153154)) % 3U)
          {
            case 1:
              num6 = (int) num7 * -225568974 ^ -1454404407;
              continue;
            case 2:
              goto label_15;
            default:
              goto label_18;
          }
        }
label_18:;
      }
label_19:
      string str2 = JSONClass.\u202E‎⁮‏⁫‏⁭‬​⁭⁯⁯‎‮‪‌‍‌⁮‎⁮‭‭⁫​‌‪⁪⁮‍‪‌‏‮‫​​‮⁭‬‮(str1, "}");
label_20:
      int num8 = 931003960;
      string str3;
      while (true)
      {
        uint num9;
        switch ((num9 = (uint) (num8 ^ 1571153154)) % 4U)
        {
          case 0:
            goto label_20;
          case 1:
            num8 = (int) num9 * -2024851217 ^ 1779539278;
            continue;
          case 2:
            str3 = str2;
            num8 = (int) num9 * 326674703 ^ -627926271;
            continue;
          default:
            goto label_24;
        }
      }
label_24:
      return str3;
    }

    public override string ToString(string aPrefix)
    {
      string str1 = "{ ";
label_1:
      int num1 = -1380887958;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -314448512)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 121846177 ^ 1234115050;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator();
      try
      {
label_9:
        int num3 = enumerator.MoveNext() ? -322130217 : (num3 = -1903126478);
        KeyValuePair<string, JSONNode> current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -314448512)) % 9U)
          {
            case 0:
              num3 = (int) num4 * 520609799 ^ 1491406079;
              continue;
            case 1:
              str1 = JSONClass.\u202E‎⁮‏⁫‏⁭‬​⁭⁯⁯‎‮‪‌‍‌⁮‎⁮‭‭⁫​‌‪⁪⁮‍‪‌‏‮‫​​‮⁭‬‮(str1, ", ");
              num3 = (int) num4 * -2102504602 ^ -508844481;
              continue;
            case 2:
              num3 = (int) num4 * 1635419689 ^ -364936368;
              continue;
            case 3:
              int num5 = JSONClass.\u206F‪​‭‎‌⁮⁯‭⁯‮‎‭⁫⁮⁫⁪‮‮‫‬‬‌⁮⁭⁫‌‫​‪​‪‪‪‍⁭‮‍‪⁮‮(str1) > 3 ? 1692555976 : (num5 = 1886985503);
              num3 = num5 ^ (int) num4 * 1326038568;
              continue;
            case 4:
              goto label_9;
            case 5:
              num3 = -322130217;
              continue;
            case 6:
              str1 = JSONClass.\u200F⁭‭‬⁮‍‭‬⁪‬‏‫⁯‫⁫​‭‪‬⁬‫⁯‏⁮⁬‪⁮⁯‬⁮⁭‏⁬‫⁯‮​⁬‏⁫‮(str1, "\n", aPrefix, "   ");
              str1 = JSONClass.\u202E‫‍⁮⁪‍‬⁬‭‎‬⁯‎‍‪‎⁬⁯⁫​‫‌‬‌⁭‍‍⁬⁫‮‬‌​‏‮​‫‏⁭‪‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\" : ",
                current.Value.ToString(JSONClass.\u202E‎⁮‏⁫‏⁭‬​⁭⁯⁯‎‮‪‌‍‌⁮‎⁮‭‭⁫​‌‪⁪⁮‍‪‌‏‮‫​​‮⁭‬‮(aPrefix, "   "))
              });
              num3 = -943299936;
              continue;
            case 7:
              current = enumerator.Current;
              num3 = -672432689;
              continue;
            default:
              goto label_20;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_16:
        int num6 = -1310107102;
        while (true)
        {
          uint num7;
          switch ((num7 = (uint) (num6 ^ -314448512)) % 3U)
          {
            case 1:
              num6 = (int) num7 * -968254880 ^ -1184541191;
              continue;
            case 2:
              goto label_16;
            default:
              goto label_19;
          }
        }
label_19:;
      }
label_20:
      string str2 = JSONClass.\u200F⁭‭‬⁮‍‭‬⁪‬‏‫⁯‫⁫​‭‪‬⁬‫⁯‏⁮⁬‪⁮⁯‬⁮⁭‏⁬‫⁯‮​⁬‏⁫‮(str1, "\n", aPrefix, "}");
label_21:
      int num8 = -463039985;
      while (true)
      {
        uint num9;
        switch ((num9 = (uint) (num8 ^ -314448512)) % 3U)
        {
          case 1:
            num8 = (int) num9 * 1433274043 ^ -209042736;
            continue;
          case 2:
            goto label_21;
          default:
            goto label_24;
        }
      }
label_24:
      return str2;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = -641656966;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1742051141)) % 6U)
        {
          case 0:
            JSONClass.\u206D⁮⁯⁯‫‮‪‌‬‪⁭‭⁬‬‍​‍⁮‎⁮⁯‎‌‎​⁫‪‬⁪⁮‬⁮‫‭⁮‌⁬‬‫‍‮(aWriter, this.m_Dict.Count);
            num1 = (int) num2 * 782135655 ^ 450767820;
            continue;
          case 2:
            num1 = (int) num2 * 2020139853 ^ 662224602;
            continue;
          case 3:
            num1 = (int) num2 * 1734852210 ^ -445547429;
            continue;
          case 4:
            goto label_1;
          case 5:
            JSONClass.\u200F‎‮‎‏‎⁭⁭⁭‎⁮⁬​‍‍‪⁫‫⁪‍​‮‏‌⁭‏‍‫‫‎⁮‌‍‌‎‭‍‬⁬⁬‮(aWriter, (byte) 2);
            num1 = (int) num2 * 1639012283 ^ 116467666;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      using (Dictionary<string, JSONNode>.KeyCollection.Enumerator enumerator = this.m_Dict.Keys.GetEnumerator())
      {
label_18:
        int num3 = enumerator.MoveNext() ? -86868048 : (num3 = -1394138479);
        string current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -1742051141)) % 9U)
          {
            case 0:
              num3 = (int) num4 * -883214490 ^ -1355569274;
              continue;
            case 1:
              num3 = (int) num4 * -357154776 ^ -2033846013;
              continue;
            case 2:
              current = enumerator.Current;
              num3 = -2138523576;
              continue;
            case 3:
              JSONClass.\u206F⁫⁫‎⁯​‭‍‏⁫‍‪⁭​‎‪‬⁬⁭⁪‬⁪‪​‏‪‭⁪⁭⁭‫⁬​⁮‎⁭‭⁫‬‮(aWriter, current);
              num3 = (int) num4 * -780025162 ^ -778850607;
              continue;
            case 4:
              this.m_Dict[current].Serialize(aWriter);
              num3 = (int) num4 * -1238557868 ^ 1203312630;
              continue;
            case 5:
              num3 = -86868048;
              continue;
            case 6:
              goto label_18;
            case 7:
              goto label_19;
            case 8:
              num3 = (int) num4 * -574970908 ^ 493252359;
              continue;
            default:
              goto label_11;
          }
        }
label_19:
        return;
label_11:;
      }
    }

    static bool \u206C‮⁫‍‌⁭‪‌⁪‬​‎⁫‍⁪‍‎⁫‍⁭‏⁪⁮‏‬‮‏‏‪‏‫⁭‌⁯‮​‮​‎⁬‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    static int \u206F‪​‭‎‌⁮⁯‭⁯‮‎‭⁫⁮⁫⁪‮‮‫‬‬‌⁮⁭⁫‌‫​‪​‪‪‪‍⁭‮‍‪⁮‮([In] string obj0) => obj0.Length;

    static string \u202E‎⁮‏⁫‏⁭‬​⁭⁯⁯‎‮‪‌‍‌⁮‎⁮‭‭⁫​‌‪⁪⁮‍‪‌‏‮‫​​‮⁭‬‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u200B⁪⁪‬‬‌‫⁭‪⁪⁮‫‪‌‬‎‍‬⁯⁮‪‭‮‏⁫⁪⁫⁮‮‬‬‫⁪⁯‏‎‭⁪⁯‪‮([In] object obj0) => obj0.ToString();

    static string \u202E‫‍⁮⁪‍‬⁬‭‎‬⁯‎‍‪‎⁬⁯⁫​‫‌‬‌⁭‍‍⁬⁫‮‬‌​‏‮​‫‏⁭‪‮([In] string[] obj0) => string.Concat(obj0);

    static string \u200F⁭‭‬⁮‍‭‬⁪‬‏‫⁯‫⁫​‭‪‬⁬‫⁯‏⁮⁬‪⁮⁯‬⁮⁭‏⁬‫⁯‮​⁬‏⁫‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u200F‎‮‎‏‎⁭⁭⁭‎⁮⁬​‍‍‪⁫‫⁪‍​‮‏‌⁭‏‍‫‫‎⁮‌‍‌‎‭‍‬⁬⁬‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u206D⁮⁯⁯‫‮‪‌‬‪⁭‭⁬‬‍​‍⁮‎⁮⁯‎‌‎​⁫‪‬⁪⁮‬⁮‫‭⁮‌⁬‬‫‍‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u206F⁫⁫‎⁯​‭‍‏⁫‍‪⁭​‎‪‬⁬⁭⁪‬⁪‪​‏‪‭⁪⁭⁭‫⁬​⁮‎⁭‭⁫‬‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
