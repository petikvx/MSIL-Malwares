// Decompiled with JetBrains decompiler
// Type: c
// Assembly: EncoderCSL, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8BC70EB6-E222-4E38-9ED5-32744A85C676
// Assembly location: C:\Users\Administrateur\Downloads\toto\HEUR-Trojan-Ransom.MSIL.Tear.gen-1cd3fa0de4807e268dc8a396dc670ba38d6729e7df613b33b046970a22ff6a2a.exe

using PreEmptive.Analytics.Common;
using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Threading;

internal sealed class c
{
  private IAsyncProvider a;
  private Action<global::c> b;
  private bool c;
  private ManualResetEvent d = new ManualResetEvent(false);
  private volatile bool e;
  private ManualResetEvent f = new ManualResetEvent(false);
  private bool g;

  public c(IAsyncProvider A_0, Action<global::c> A_1, [Optional] bool A_2)
  {
    this.a = A_0;
    this.b = A_1;
    this.c = A_2;
  }

  [CompilerGenerated]
  [SpecialName]
  public DateTime c()
  {
    int num1 = 1;
    if (num1 == 0)
      ;
    num1 = -24123;
    int num2 = num1;
    num1 = -24123;
    int num3 = num1;
    switch (num2 == num3)
    {
      case true:
        num1 = 0;
        if (num1 == 0)
          ;
        // ISSUE: reference to a compiler-generated field
        return this.h;
      default:
        goto case 1;
    }
  }

  public void c(int A_0)
  {
    int num1 = -32246;
    int num2 = num1;
    num1 = -32246;
    int num3 = num1;
    switch (num2 == num3 ? 1 : 0)
    {
      case 0:
        break;
      case 2:
        break;
      default:
        int num4 = 0;
        if (num4 == 0)
          ;
        num4 = 0;
        int num5 = num4;
        switch (num5)
        {
          default:
            // ISSUE: object of a compiler-generated type is created
            // ISSUE: variable of a compiler-generated type
            global::c.a a = new global::c.a();
            // ISSUE: reference to a compiler-generated field
            a.b = A_0;
            // ISSUE: reference to a compiler-generated field
            a.a = this;
            bool lockTaken = false;
            global::c c;
            try
            {
              // ISSUE: variable of a compiler-generated type
              global::c.b b;
              switch (0)
              {
                case 0:
label_6:
                  Monitor.Enter((object) (c = this), ref lockTaken);
                  // ISSUE: object of a compiler-generated type is created
                  b = new global::c.b();
                  // ISSUE: reference to a compiler-generated field
                  b.a = a;
                  num4 = 0;
                  num5 = num4;
                  goto default;
                default:
                  while (true)
                  {
                    switch (num5)
                    {
                      case 0:
                        if (this.g)
                        {
                          num4 = 3;
                          num5 = num4;
                          continue;
                        }
                        goto case 2;
                      case 1:
                        goto label_11;
                      case 2:
                        // ISSUE: reference to a compiler-generated method
                        this.c(DateTime.UtcNow);
                        this.g = true;
                        this.e = false;
                        // ISSUE: reference to a compiler-generated field
                        b.b = this.d;
                        // ISSUE: reference to a compiler-generated method
                        this.a.ExecuteAsyncIfSupported(new Action(b.c), this.c);
                        num4 = 1;
                        num5 = num4;
                        continue;
                      case 3:
                        this.d(-1);
                        num4 = 2;
                        num5 = num4;
                        continue;
                      default:
                        goto label_6;
                    }
                  }
label_11:
                  return;
              }
            }
            finally
            {
              int num6 = 0;
              int num7 = num6;
              while (true)
              {
                switch (num7)
                {
                  case 0:
                    num6 = 1;
                    if (num6 == 0)
                      ;
                    switch (0)
                    {
                      case 0:
                        break;
                      default:
                        continue;
                    }
                    break;
                  case 1:
                    goto label_21;
                  case 2:
                    Monitor.Exit((object) c);
                    num6 = 1;
                    num7 = num6;
                    continue;
                }
                if (lockTaken)
                {
                  num6 = 2;
                  num7 = num6;
                }
                else
                  break;
              }
label_21:;
            }
        }
    }
  }

  public void d([Optional] int A_0)
  {
    bool lockTaken = false;
    global::c c;
    try
    {
      int num1;
      int num2;
      switch (0)
      {
        case 0:
label_3:
          Monitor.Enter((object) (c = this), ref lockTaken);
          num2 = 0;
          num1 = num2;
          goto default;
        default:
          while (true)
          {
            switch (num1)
            {
              case 0:
                num2 = -25104;
                int num3 = num2;
                num2 = -25104;
                int num4 = num2;
                switch (num3 == num4 ? 1 : 0)
                {
                  case 0:
                  case 2:
                    goto label_9;
                  default:
                    num2 = 0;
                    if (num2 == 0)
                      ;
                    if (this.g)
                    {
                      num2 = 3;
                      num1 = num2;
                      continue;
                    }
                    goto label_9;
                }
              case 1:
                goto label_17;
              case 2:
label_9:
                num2 = 1;
                num1 = num2;
                continue;
              case 3:
                this.g = false;
                this.e = true;
                this.d.Set();
                this.d = new ManualResetEvent(false);
                this.f.WaitOne(A_0);
                this.f = new ManualResetEvent(false);
                num2 = 2;
                num1 = num2;
                continue;
              default:
                goto label_3;
            }
          }
label_17:
          break;
      }
    }
    finally
    {
      int num5 = 2;
      int num6 = num5;
      while (true)
      {
        switch (num6)
        {
          case 0:
            num5 = 1;
            if (num5 == 0)
              ;
            Monitor.Exit((object) c);
            num5 = 1;
            num6 = num5;
            continue;
          case 1:
            goto label_18;
          case 2:
            switch (0)
            {
              case 0:
                break;
              default:
                continue;
            }
            break;
        }
        if (lockTaken)
        {
          num5 = 0;
          num6 = num5;
        }
        else
          break;
      }
label_18:;
    }
  }

  [SpecialName]
  public bool d()
  {
    bool lockTaken = false;
    global::c c;
    try
    {
      Monitor.Enter((object) (c = this), ref lockTaken);
      return this.g;
    }
    finally
    {
      int num1 = 2;
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
            num1 = 1;
            if (num1 == 0)
              ;
            Monitor.Exit((object) c);
            num1 = -6228;
            int num3 = num1;
            num1 = -6228;
            int num4 = num1;
            switch (num3 == num4 ? 1 : 0)
            {
              case 0:
              case 2:
                break;
              default:
                num1 = 0;
                if (num1 == 0)
                  ;
                num1 = 1;
                num2 = num1;
                continue;
            }
            break;
          case 1:
            goto label_11;
          case 2:
            switch (0)
            {
              case 0:
                goto label_5;
              default:
                continue;
            }
          default:
label_5:
            if (!lockTaken)
              goto label_11;
            else
              break;
        }
        num1 = 0;
        num2 = num1;
      }
label_11:;
    }
  }

  public void e()
  {
    int num1 = -20320;
    int num2 = num1;
    num1 = -20320;
    int num3 = num1;
    switch (num2 == num3)
    {
      case true:
        int num4 = 1;
        if (num4 == 0)
          ;
        num4 = 0;
        if (num4 == 0)
          ;
        this.f.WaitOne();
        break;
      default:
        goto case 1;
    }
  }
}
