// Decompiled with JetBrains decompiler
// Type: dotXMLToolsWPF.Controls.PathSelect
// Assembly: LeaseMana, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 529A6AA6-AEB5-47F3-B86B-C5E3C5F9FA62
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan.MSIL.PowerShell.gen-7e41c997a103e91b3815e9269a2d8806e5474c05620f8ff0ca591a586eae2f80.exe

using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Input;
using System.Windows.Markup;

namespace dotXMLToolsWPF.Controls
{
  public class PathSelect : UserControl, IComponentConnector, IStyleConnector
  {
    internal ListView lstView;
    private bool _contentLoaded;

    public event PathSelect.PathMouseClickHandler PathClick = _param1 => { };

    public PathSelect() => this.InitializeComponent();

    private void TextBlock_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
    {
      if (!(sender is TextBlock textBlock))
        return;
      this.PathClick(textBlock.Text);
    }

    [DebuggerNonUserCode]
    [GeneratedCode("PresentationBuildTasks", "4.0.0.0")]
    public void InitializeComponent()
    {
      if (this._contentLoaded)
        return;
      this._contentLoaded = true;
      Application.LoadComponent((object) this, new Uri("/LeaseMana;component/controls/pathselect.xaml", UriKind.Relative));
    }

    [DebuggerNonUserCode]
    [GeneratedCode("PresentationBuildTasks", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Never)]
    void IComponentConnector.Connect(int connectionId, object target)
    {
      if (connectionId == 1)
        this.lstView = (ListView) target;
      else
        this._contentLoaded = true;
    }

    [DebuggerNonUserCode]
    [GeneratedCode("PresentationBuildTasks", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Never)]
    void IStyleConnector.Connect(int connectionId, object target)
    {
      if (connectionId != 2)
        return;
      ((UIElement) target).MouseLeftButtonDown += new MouseButtonEventHandler(this.TextBlock_MouseLeftButtonDown);
    }

    public delegate void PathMouseClickHandler(string path);
  }
}
