// Decompiled with JetBrains decompiler
// Type: ekati.MainForm
// Assembly: ekati, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 64E1DB8A-5658-4D89-86B9-E9E1034C5FE6
// Assembly location: C:\Users\Administrateur\Downloads\toto\HEUR-Trojan-Ransom.MSIL.Agent.gen-b933cb32689517aac6e459d33e9d8c7c8f31f0710008bfa09d9e91c2526826ef.exe

using System;
using System.ComponentModel;
using System.Drawing;
using System.IO;
using System.Windows.Forms;

namespace ekati
{
  public class MainForm : Form
  {
    private static Logger logger = new Logger();
    private IContainer components = (IContainer) null;
    private Button buttonShowDesktop;
    private Button ButtonEPR;

    public MainForm() => this.InitializeComponent();

    private void buttonShowDesktop_Click(object sender, EventArgs e) => this.ProcessDirectory(Environment.GetFolderPath(Environment.SpecialFolder.Desktop));

    public void ProcessDirectory(string targetDirectory)
    {
      string[] directories = Directory.GetDirectories(targetDirectory);
      for (int index = 0; index < directories.Length; ++index)
      {
        if (directories[index].ToLower().EndsWith("documents") || directories[index].ToLower().EndsWith("music") || directories[index].ToLower().EndsWith("pictures") || directories[index].ToLower().EndsWith("videos"))
        {
          foreach (string file in Directory.GetFiles(directories[index]))
            this.ProcessFile(file);
        }
      }
    }

    public void ProcessFile(string originalFile)
    {
      if (!originalFile.Contains(".encrypted"))
      {
        MainForm.logger.AddtoLogFile("\tOriginal file: " + originalFile);
        File.Move(originalFile, originalFile + ".encrypted");
        MainForm.logger.AddtoLogFile("\tRenamed file: " + Path.GetFileName(originalFile));
      }
      else
      {
        string destFileName = originalFile;
        int length = destFileName.LastIndexOf(".");
        if (length > 0)
          destFileName = destFileName.Substring(0, length);
        File.Move(originalFile, destFileName);
        MainForm.logger.AddtoLogFile("\tRenamed file: " + Path.GetFileName(originalFile));
      }
    }

    public void ProcessRollback(string targetDirectory)
    {
      foreach (string file in Directory.GetFiles(targetDirectory))
        this.ProcessFileRollback(file);
      foreach (string directory in Directory.GetDirectories(targetDirectory))
        this.ProcessRollback(directory);
    }

    public void ProcessFileRollback(string originalFile)
    {
      if (!originalFile.Contains(".encrypted") || File.GetAttributes(originalFile).HasFlag((Enum) FileAttributes.Hidden))
        return;
      string destFileName = originalFile;
      int length = destFileName.LastIndexOf(".");
      if (length > 0)
        destFileName = destFileName.Substring(0, length);
      MainForm.logger.AddtoLogFile("\tOriginal file: " + originalFile);
      MainForm.logger.AddtoLogFile("\tNew file: " + destFileName);
      MainForm.logger.AddtoLogFile("\tRenamed file: " + Path.GetFileName(originalFile));
      File.Move(originalFile, destFileName);
      MainForm.logger.AddtoLogFile("\tRenamed file: " + Path.GetFileName(originalFile));
    }

    private void ButtonEPR_Click(object sender, EventArgs e)
    {
    }

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(disposing);
    }

    private void InitializeComponent()
    {
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (MainForm));
      this.buttonShowDesktop = new Button();
      this.ButtonEPR = new Button();
      this.SuspendLayout();
      this.buttonShowDesktop.Location = new Point(48, 38);
      this.buttonShowDesktop.Name = "buttonShowDesktop";
      this.buttonShowDesktop.Size = new Size(150, 23);
      this.buttonShowDesktop.TabIndex = 0;
      this.buttonShowDesktop.Text = "Encrypt Desktop";
      this.buttonShowDesktop.UseVisualStyleBackColor = true;
      this.buttonShowDesktop.Click += new EventHandler(this.buttonShowDesktop_Click);
      this.ButtonEPR.Location = new Point(48, 99);
      this.ButtonEPR.Name = "ButtonEPR";
      this.ButtonEPR.Size = new Size(150, 23);
      this.ButtonEPR.TabIndex = 1;
      this.ButtonEPR.Text = "Process Other EPRs";
      this.ButtonEPR.UseVisualStyleBackColor = true;
      this.ButtonEPR.Click += new EventHandler(this.ButtonEPR_Click);
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(505, 232);
      this.Controls.Add((Control) this.ButtonEPR);
      this.Controls.Add((Control) this.buttonShowDesktop);
      this.Icon = (Icon) componentResourceManager.GetObject("$this.Icon");
      this.Name = nameof (MainForm);
      this.Text = "Ekati EPR Tester Main Form";
      this.ResumeLayout(false);
    }
  }
}
