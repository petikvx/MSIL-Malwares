// Decompiled with JetBrains decompiler
// Type: 090421149927.190738381532
// Assembly: 903211523809, Version=16.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: 9299602E-5CAC-472E-8784-954A0E70F0DC
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-930e3513275891a4d2d1e51b0fb588f4b7f0b665bd972c7e0ccfececc5c3933e.exe

using \u003090421149927;
using \u003128271108681;
using \u003883241009814;
using Microsoft.VisualStudio.TaskRunnerExplorer;
using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;

namespace \u003090421149927
{
  internal static class \u003190738381532
  {
    internal static Task<ITaskRunnerNode> \u003948313573037(
      ITaskRunnerCommandContext _param0,
      string _param1)
    {
      // ISSUE: variable of a compiler-generated type
      \u003190738381532.\u003755094562702 stateMachine;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003315620249372 = _param0;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003210636384663 = _param1;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003919914280880 = AsyncTaskMethodBuilder<ITaskRunnerNode>.Create();
      // ISSUE: cast to a reference type
      // ISSUE: explicit reference operation
      // ISSUE: reference to a compiler-generated field
      (^(\u003006304396692.\u003598244501238&) ref stateMachine).\u003630130305001 = -1;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003919914280880.Start<\u003190738381532.\u003755094562702>(ref stateMachine);
      // ISSUE: reference to a compiler-generated field
      return stateMachine.\u003919914280880.Task;
    }

    private static void \u003380268316414(List<ITaskRunnerNode> _param0) => _param0?.Sort((Comparison<ITaskRunnerNode>) ((_param1, _param2) =>
    {
      if (string.Compare(_param1.Name, "default", StringComparison.OrdinalIgnoreCase) == 0)
        return -1;
      return string.Compare(_param2.Name, "default", StringComparison.OrdinalIgnoreCase) == 0 ? 1 : string.Compare(_param1.Name, _param2.Name, StringComparison.Ordinal);
    }));

    private static TaskRunnerNode \u003327789376330(
      string _param0,
      \u003969070247281 _param1)
    {
      string directoryName = Path.GetDirectoryName(_param0);
      string str = string.Format((IFormatProvider) CultureInfo.InvariantCulture, "/c gulp -b \"{0}\" --color --gulpfile \"{1}\" {2}", (object) directoryName, (object) _param0, (object) _param1.\u003032362452874);
      return new TaskRunnerNode(_param1.\u003032362452874, true)
      {
        Command = (ITaskRunnerCommand) new TaskRunnerCommand(directoryName, "cmd.exe", str, (string) null)
      };
    }

    public static Task<IEnumerable<\u003969070247281>> \u003318500507524(
      ITaskRunnerCommandContext _param0,
      string _param1)
    {
      // ISSUE: variable of a compiler-generated type
      \u003190738381532.\u003567499476642 stateMachine;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003037830670248 = _param0;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003666809245107 = _param1;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003402679241953 = AsyncTaskMethodBuilder<IEnumerable<\u003969070247281>>.Create();
      // ISSUE: cast to a reference type
      // ISSUE: explicit reference operation
      // ISSUE: reference to a compiler-generated field
      (^(\u003190738381532.\u003594628897746&) ref stateMachine).\u003443540795492 = -1;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003402679241953.Start<\u003190738381532.\u003567499476642>(ref stateMachine);
      // ISSUE: reference to a compiler-generated field
      return stateMachine.\u003402679241953.Task;
    }
  }
}
