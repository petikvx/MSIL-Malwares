// Decompiled with JetBrains decompiler
// Type: .
// Assembly: BitGenerator, Version=37.0.2.5583, Culture=neutral, PublicKeyToken=70e4c26ef2031892
// MVID: D3922F89-E00A-4D10-8BC9-9309D5539F14
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\Trojan.Win32.Scar.nxii-31823040d8ccb20eab0b8653d01af370a6537017e69ead69f6f7b73d6ef7ac14.exe

using \u0004;
using \u0012;
using \u0014;
using Newtonsoft.Json;
using SmartAssembly.Delegates;
using SmartAssembly.HouseOfCards;
using System;
using System.Collections.Generic;
using System.Globalization;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security;

namespace \u0012
{
  internal abstract class \u0007 : IDisposable
  {
    internal JsonToken \u0001;
    internal object \u0001;
    internal char \u0001;
    internal \u0007.\u0001 \u0001;
    internal \u0011.\u0002 \u0001;
    internal CultureInfo \u0001;
    internal \u0001 \u0001;
    internal int? \u0001;
    internal bool \u0001;
    internal \u000E.\u0002 \u0001;
    internal \u0015.\u0002 \u0001;
    internal string \u0001;
    internal List<\u0011.\u0002> \u0001;
    [NonSerialized]
    internal static GetString \u009D;

    [CompilerGenerated]
    [SpecialName]
    public bool \u0003() => this.\u0002;

    [CompilerGenerated]
    [SpecialName]
    public void \u0001([In] bool obj0) => this.\u0002 = obj0;

    [CompilerGenerated]
    [SpecialName]
    public bool \u0004() => this.\u0003;

    [CompilerGenerated]
    [SpecialName]
    public void \u0002([In] bool obj0) => this.\u0003 = obj0;

    [SpecialName]
    public virtual JsonToken \u0001() => this.\u0001;

    [SpecialName]
    public virtual object \u0001() => this.\u0001;

    [SpecialName]
    public virtual Type \u0001() => this.\u0001 == null ? (Type) null : \u0001\u0002.\u007E\u0017\u0004(this.\u0001);

    [SpecialName]
    public virtual int \u0001()
    {
      int num1;
      if (this.\u0001 == null)
        num1 = 0;
      else if (true)
        num1 = this.\u0001.Count;
      else
        goto label_9;
      if (true)
        goto label_12;
label_4:
      do
      {
        if (!\u0006.\u0001(this.\u0001()))
        {
          if (true)
          {
            if (this.\u0001.\u0001 != JsonContainerType.None)
              goto label_9;
          }
        }
      }
      while (false);
      int num2;
      int num3 = num2;
      if (true)
        return num3;
      int num4 = num3;
      goto label_10;
label_12:
      num2 = num1;
      goto label_4;
label_9:
      num4 = num2;
label_10:
      return num4 + 1;
    }

    [SpecialName]
    public virtual string \u0001() => this.\u0001.\u0001 == JsonContainerType.None ? string.Empty : \u0011.\u0002.\u0001(this.\u0001, (this.\u0001 == \u0007.\u0001.\u0006 || this.\u0001 == \u0007.\u0001.\u000F ? 0 : (this.\u0001 != \u0007.\u0001.\u0004 ? 1 : 0)) != 0 ? new \u0011.\u0002?(this.\u0001) : new \u0011.\u0002?());

    protected \u0007()
    {
      this.\u0001 = \u0007.\u0001.\u0001;
      this.\u0001 = \u0001.\u0004;
      this.\u0001 = \u000E.\u0002.\u0002;
      this.\u0001 = \u0015.\u0002.\u0001;
      this.\u0001(true);
    }

    public abstract bool \u0001();

    public virtual int? \u0001()
    {
      JsonToken jsonToken = \u0006.\u0001(this);
      switch (jsonToken)
      {
        case JsonToken.None:
        case JsonToken.Null:
        case JsonToken.EndArray:
          return new int?();
        case JsonToken.Integer:
        case JsonToken.Float:
          if (!(this.\u0001() is int))
            goto label_6;
label_2:
          return new int?((int) this.\u0001());
label_6:
          \u0006.\u0001(this, JsonToken.Integer, (object) Convert.ToInt32(this.\u0001(), (IFormatProvider) CultureInfo.InvariantCulture), false);
          goto label_2;
        case JsonToken.String:
          return \u0006.\u0001(this, (string) this.\u0001());
        default:
          throw \u0006.\u0001(this, \u0002.\u0002.\u0001(\u0007.\u009D(3303), (IFormatProvider) CultureInfo.InvariantCulture, (object) jsonToken));
      }
    }

    public virtual string \u0002()
    {
      JsonToken jsonToken = \u0006.\u0001(this);
      if (true)
        goto label_13;
label_6:
      string str = \u0002\u0002.\u007E\u0082\u0004((object) (IFormattable) this.\u0001(), (string) null, (IFormatProvider) \u0006.\u0001(this));
label_11:
      \u0006.\u0001(this, JsonToken.String, (object) str, false);
      return str;
label_13:
      if (jsonToken > JsonToken.String)
        goto label_16;
      else
        goto label_14;
label_1:
      return (string) null;
label_2:
      if (\u0006.\u0001(jsonToken))
      {
        if (true)
        {
          if (this.\u0001() != null)
          {
            if (!(this.\u0001() is IFormattable))
            {
              if (this.\u0001() is Uri)
              {
                str = \u0001.\u007E\u0007((object) (Uri) this.\u0001());
              }
              else
              {
                str = \u0001.\u007E\u0001(this.\u0001());
                goto label_11;
              }
            }
            else
              goto label_6;
          }
          else
            goto label_12;
        }
        if (false)
          goto label_16;
        else
          goto label_11;
      }
label_12:
      throw \u0006.\u0001(this, \u0002.\u0002.\u0001(\u0007.\u009D(3364), (IFormatProvider) \u0098.\u0002\u0004(), (object) jsonToken));
label_14:
      if (jsonToken != JsonToken.None)
      {
        if (jsonToken == JsonToken.String)
          return (string) this.\u0001();
        goto label_2;
      }
      else
        goto label_1;
label_16:
      if (jsonToken == JsonToken.Null || jsonToken == JsonToken.EndArray)
        goto label_1;
      else
        goto label_2;
    }

    public virtual byte[] \u0001()
    {
      JsonToken jsonToken = \u0006.\u0001(this);
      if (jsonToken == JsonToken.None)
        return (byte[]) null;
      if (this.\u0001() != JsonToken.StartObject)
      {
        switch (jsonToken)
        {
          case JsonToken.StartArray:
            return \u0006.\u0001(this);
          case JsonToken.String:
            string str = (string) this.\u0001();
            byte[] numArray1;
            do
            {
              Guid guid;
              numArray1 = \u001F.\u007E\u0011\u0003((object) str) != 0 ? (!\u0006.\u0001(str, out guid) ? \u0003\u0002.\u0083\u0004(str) : guid.ToByteArray()) : new byte[0];
              \u0006.\u0001(this, JsonToken.Bytes, (object) numArray1, false);
            }
            while (false);
            return numArray1;
          case JsonToken.Null:
          case JsonToken.EndArray:
            return (byte[]) null;
          case JsonToken.Bytes:
            // ISSUE: type reference
            if ((object) this.\u0001() != (object) \u0004\u0002.\u0084\u0004(__typeref (Guid)))
              return (byte[]) this.\u0001();
            byte[] byteArray = ((Guid) this.\u0001()).ToByteArray();
            \u0006.\u0001(this, JsonToken.Bytes, (object) byteArray, false);
            return byteArray;
          default:
            throw \u0006.\u0001(this, \u0002.\u0002.\u0001(\u0007.\u009D(3172), (IFormatProvider) \u0098.\u0002\u0004(), (object) jsonToken));
        }
      }
      else
      {
        \u0006.\u0001(this);
        byte[] numArray2 = this.\u0001();
        \u0006.\u0001(this);
        if (this.\u0001() != JsonToken.EndObject)
          throw \u0006.\u0001(this, \u0002.\u0002.\u0001(\u0007.\u009D(3172), (IFormatProvider) \u0098.\u0002\u0004(), (object) this.\u0001()));
        \u0006.\u0001(this, JsonToken.Bytes, (object) numArray2, false);
        return numArray2;
      }
    }

    public virtual double? \u0001()
    {
      JsonToken jsonToken = \u0006.\u0001(this);
      switch (jsonToken)
      {
        case JsonToken.None:
        case JsonToken.Null:
        case JsonToken.EndArray:
          return new double?();
        case JsonToken.Integer:
        case JsonToken.Float:
          if (!(this.\u0001() is double))
            goto label_7;
label_2:
          return new double?((double) this.\u0001());
label_7:
          \u0006.\u0001(this, JsonToken.Float, (object) Convert.ToDouble(this.\u0001(), (IFormatProvider) CultureInfo.InvariantCulture), false);
          goto label_2;
        case JsonToken.String:
          return \u0006.\u0001(this, (string) this.\u0001());
        default:
          if (true)
            throw \u0006.\u0001(this, \u0002.\u0002.\u0001(\u0007.\u009D(3425), (IFormatProvider) CultureInfo.InvariantCulture, (object) jsonToken));
          goto case JsonToken.String;
      }
    }

    public virtual bool? \u0001()
    {
      JsonToken jsonToken;
      int num1;
      do
      {
        int num2 = (int) \u0006.\u0001(this);
        if (true)
          jsonToken = (JsonToken) num2;
        if (jsonToken != JsonToken.None)
        {
          int num3 = (int) (jsonToken - 7);
          while (true)
          {
            switch (num3)
            {
              case 0:
              case 1:
                num1 = Convert.ToBoolean(this.\u0001(), (IFormatProvider) CultureInfo.InvariantCulture) ? 1 : 0;
                if (true)
                {
                  if (false)
                  {
                    num3 = num1;
                    continue;
                  }
                  goto label_6;
                }
                else
                  goto label_9;
              case 2:
                goto label_10;
              case 3:
                goto label_11;
              case 4:
              case 7:
                goto label_3;
              case 5:
              case 6:
                goto label_12;
              default:
                goto label_2;
            }
          }
label_2:;
        }
        else
          goto label_3;
      }
      while (false);
      goto label_12;
label_3:
      return new bool?();
label_6:
      bool flag = num1 != 0;
      if (true)
        \u0006.\u0001(this, JsonToken.Boolean, (object) flag, false);
      num1 = flag ? 1 : 0;
label_9:
      return new bool?(num1 != 0);
label_10:
      return \u0006.\u0001(this, (string) this.\u0001());
label_11:
      return new bool?((bool) this.\u0001());
label_12:
      throw \u0006.\u0001(this, \u0002.\u0002.\u0001(\u0007.\u009D(3486), (IFormatProvider) CultureInfo.InvariantCulture, (object) jsonToken));
    }

    public virtual Decimal? \u0001()
    {
      JsonToken jsonToken = \u0006.\u0001(this);
      switch (jsonToken)
      {
        case JsonToken.None:
        case JsonToken.Null:
        case JsonToken.EndArray:
          return new Decimal?();
        case JsonToken.Integer:
        case JsonToken.Float:
          if (!(this.\u0001() is Decimal))
            goto label_7;
label_2:
          return new Decimal?((Decimal) this.\u0001());
label_7:
          \u0006.\u0001(this, JsonToken.Float, (object) Convert.ToDecimal(this.\u0001(), (IFormatProvider) CultureInfo.InvariantCulture), false);
          goto label_2;
        case JsonToken.String:
          return \u0006.\u0001(this, (string) this.\u0001());
        default:
          if (true)
            throw \u0006.\u0001(this, \u0002.\u0002.\u0001(\u0007.\u009D(3547), (IFormatProvider) CultureInfo.InvariantCulture, (object) jsonToken));
          goto case JsonToken.String;
      }
    }

    public virtual DateTime? \u0001()
    {
      switch (\u0006.\u0001(this))
      {
        case JsonToken.None:
        case JsonToken.Null:
        case JsonToken.EndArray:
          return new DateTime?();
        case JsonToken.String:
          return \u0006.\u0001(this, (string) this.\u0001());
        case JsonToken.Date:
          if (this.\u0001() is DateTimeOffset)
            \u0006.\u0001(this, JsonToken.Date, (object) ((DateTimeOffset) this.\u0001()).DateTime, false);
          return new DateTime?((DateTime) this.\u0001());
        default:
          throw \u0006.\u0001(this, \u0002.\u0002.\u0001(\u0007.\u009D(3608), (IFormatProvider) CultureInfo.InvariantCulture, (object) this.\u0001()));
      }
    }

    public virtual DateTimeOffset? \u0001()
    {
      if (false)
        goto label_8;
      else
        goto label_7;
label_1:
      return new DateTimeOffset?();
label_6:
      JsonToken jsonToken;
      throw \u0006.\u0001(this, \u0002.\u0002.\u0001(\u0007.\u009D(3608), (IFormatProvider) CultureInfo.InvariantCulture, (object) jsonToken));
label_7:
      jsonToken = \u0006.\u0001(this);
      if (jsonToken > JsonToken.String)
      {
        if (jsonToken != JsonToken.Null && jsonToken != JsonToken.EndArray)
        {
          if (jsonToken == JsonToken.Date)
          {
            if (this.\u0001() is DateTime)
              \u0006.\u0001(this, JsonToken.Date, (object) new DateTimeOffset((DateTime) this.\u0001()), false);
            return new DateTimeOffset?((DateTimeOffset) this.\u0001());
          }
          goto label_6;
        }
        else
          goto label_1;
      }
label_8:
      if (jsonToken != JsonToken.None)
      {
        if (jsonToken == JsonToken.String)
          return \u0006.\u0001(this, (string) this.\u0001());
        goto label_6;
      }
      else
        goto label_1;
    }

    void IDisposable.\u0002()
    {
      this.\u0003(true);
      \u0005\u0002.\u0086\u0004((object) this);
    }

    protected virtual void \u0003([In] bool obj0)
    {
      do
      {
        int num1 = this.\u0001 == \u0007.\u0001.\u0008 ? 1 : 0;
        int num2;
        while (true)
        {
          int num3 = 0;
          do
          {
            if (num3 == 0)
            {
              int num4 = num1 == num3 ? 1 : 0;
              num3 = obj0 ? 1 : 0;
              num1 = num4;
            }
          }
          while (false);
          num2 = num1 & num3;
          if (false)
            num1 = num2;
          else
            break;
        }
        if (num2 != 0)
          goto label_10;
label_9:
        continue;
label_10:
        this.\u0001();
        goto label_9;
      }
      while (false);
    }

    public virtual void \u0001()
    {
      this.\u0001 = \u0007.\u0001.\u0008;
      this.\u0001 = JsonToken.None;
      this.\u0001 = (object) null;
    }

    static \u0007()
    {
      do
      {
        Strings.CreateGetStringDelegate(typeof (\u0007));
        bool flag = false;
        Assembly assembly = \u0013.\u008B\u0002();
        if (\u0006.\u0001(\u0001.\u007E\u0002((object) assembly), true, out flag))
          goto label_7;
label_5:
        throw new SecurityException(\u0007.\u009D(2165));
label_7:
        int num = flag ? 1 : 0;
        if (true)
        {
          if (num != 0)
            num = global::\u0014.\u007E\u008C\u0002((object) \u0001.\u007E\u0003((object) assembly), \u0007.\u009D(2140)) ? 1 : 0;
          else
            goto label_5;
        }
        if (num == 0)
          goto label_5;
      }
      while (false);
    }

    protected internal enum \u0001
    {
      \u0001,
      \u0002,
      \u0003,
      \u0004,
      \u0005,
      \u0006,
      \u0007,
      \u0008,
      \u000E,
      \u000F,
      \u0010,
      \u0011,
      \u0012,
    }
  }
}
