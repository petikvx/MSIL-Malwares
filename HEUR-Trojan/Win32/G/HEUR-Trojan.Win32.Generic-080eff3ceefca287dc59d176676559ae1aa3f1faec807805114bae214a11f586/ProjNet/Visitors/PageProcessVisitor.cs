// Decompiled with JetBrains decompiler
// Type: ProjNet.Visitors.PageProcessVisitor
// Assembly: TYPELIBA, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 97BB50BA-9882-4DFE-999C-7A4E4B448F1C
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-080eff3ceefca287dc59d176676559ae1aa3f1faec807805114bae214a11f586.exe

using ProjNet.Adapter;
using ProjNet.Roles;
using System;
using System.Globalization;
using System.Runtime.CompilerServices;
using System.Text;
using TYPELIBA.Identifiers;
using TYPELIBA.Lists;

namespace ProjNet.Visitors
{
  public class PageProcessVisitor : Field, PrototypeEventRole, Worker
  {
    private double producer;
    private FieldConsumerAdapter _Prototype;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal PageProcessVisitor(
      double param,
      FieldConsumerAdapter connection,
      string template,
      string res2,
      long info3_High,
      string init4,
      string token5,
      string setup6)
    {
      int num1 = 3;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 3:
              ManagerParamsID.NewExpression();
              if (true)
              {
                num2 = 1;
                continue;
              }
              goto label_3;
            case 1:
              goto label_3;
            case 2:
            case 4:
              goto label_1;
            case 5:
              goto label_9;
            default:
              if (true)
              {
                num2 = 4;
                continue;
              }
              goto label_7;
          }
        }
label_1:
        this._Prototype = connection;
        num1 = 5;
        continue;
label_3:
        // ISSUE: explicit constructor call
        base.\u002Ector(template, res2, info3_High, init4, token5, setup6);
        this.producer = param;
        goto label_1;
      }
label_9:
      return;
label_7:;
    }

    public static PageProcessVisitor Greenwich
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => new PageProcessVisitor(0.0, (FieldConsumerAdapter) ProducerEventRole.VerifyObject(), nameof (Greenwich), "EPSG", 8901L, string.Empty, string.Empty, string.Empty);
    }

    public static PageProcessVisitor Lisbon
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => new PageProcessVisitor(-9.0754862, (FieldConsumerAdapter) ProducerEventRole.VerifyObject(), nameof (Lisbon), "EPSG", 8902L, string.Empty, string.Empty, string.Empty);
    }

    public static PageProcessVisitor Paris
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => new PageProcessVisitor(2.5969213, (FieldConsumerAdapter) ProducerEventRole.VerifyObject(), nameof (Paris), "EPSG", 8903L, string.Empty, string.Empty, "Value adopted by IGN (Paris) in 1936. Equivalent to 2 deg 20min 14.025sec. Preferred by EPSG to earlier value of 2deg 20min 13.95sec (2.596898 grads) used by RGS London.");
    }

    public static PageProcessVisitor Bogota
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => new PageProcessVisitor(-74.04513, (FieldConsumerAdapter) ProducerEventRole.VerifyObject(), nameof (Bogota), "EPSG", 8904L, string.Empty, string.Empty, string.Empty);
    }

    public static PageProcessVisitor Madrid
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => new PageProcessVisitor(-3.411658, (FieldConsumerAdapter) ProducerEventRole.VerifyObject(), nameof (Madrid), "EPSG", 8905L, string.Empty, string.Empty, string.Empty);
    }

    public static PageProcessVisitor Rome
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => new PageProcessVisitor(12.27084, (FieldConsumerAdapter) ProducerEventRole.VerifyObject(), nameof (Rome), "EPSG", 8906L, string.Empty, string.Empty, string.Empty);
    }

    public static PageProcessVisitor Bern
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => new PageProcessVisitor(7.26225, (FieldConsumerAdapter) ProducerEventRole.VerifyObject(), nameof (Bern), "EPSG", 8907L, string.Empty, string.Empty, "1895 value. Newer value of 7 deg 26 min 22.335 sec E determined in 1938.");
    }

    public static PageProcessVisitor Jakarta
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => new PageProcessVisitor(106.482779, (FieldConsumerAdapter) ProducerEventRole.VerifyObject(), nameof (Jakarta), "EPSG", 8908L, string.Empty, string.Empty, string.Empty);
    }

    public static PageProcessVisitor Ferro
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => new PageProcessVisitor(-17.4, (FieldConsumerAdapter) ProducerEventRole.VerifyObject(), nameof (Ferro), "EPSG", 8909L, string.Empty, string.Empty, "Used in Austria and former Czechoslovakia.");
    }

    public static PageProcessVisitor Brussels
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => new PageProcessVisitor(4.220471, (FieldConsumerAdapter) ProducerEventRole.VerifyObject(), nameof (Brussels), "EPSG", 8910L, string.Empty, string.Empty, string.Empty);
    }

    public static PageProcessVisitor Stockholm
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => new PageProcessVisitor(18.03298, (FieldConsumerAdapter) ProducerEventRole.VerifyObject(), nameof (Stockholm), "EPSG", 8911L, string.Empty, string.Empty, string.Empty);
    }

    public static PageProcessVisitor Athens
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => new PageProcessVisitor(23.4258815, (FieldConsumerAdapter) ProducerEventRole.VerifyObject(), nameof (Athens), "EPSG", 8912L, string.Empty, string.Empty, "Used in Greece for older mapping based on Hatt projection.");
    }

    public static PageProcessVisitor Oslo
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => new PageProcessVisitor(10.43225, (FieldConsumerAdapter) ProducerEventRole.VerifyObject(), nameof (Oslo), "EPSG", 8913L, string.Empty, string.Empty, "Formerly known as Kristiania or Christiania.");
    }

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public double StopState() => this.producer;

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public void RevertState(double i) => this.producer = i;

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public FieldConsumerAdapter InvokeState() => this._Prototype;

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public void ReadState(FieldConsumerAdapter key) => this._Prototype = key;

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public override string RevertError()
    {
      int num1 = 3;
      string str;
      while (true)
      {
        int num2 = num1;
        StringBuilder stringBuilder;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 1:
              goto label_6;
            case 2:
            case 5:
              goto label_1;
            case 3:
              stringBuilder = new StringBuilder();
              if (true)
              {
                num2 = 0;
                continue;
              }
              goto label_8;
            case 4:
              goto label_8;
            case 6:
              goto label_9;
            default:
              if (true)
              {
                num2 = 4;
                continue;
              }
              goto label_6;
          }
        }
label_1:
        if (!string.IsNullOrEmpty(this.LoginState()) && this.RestartState() > 0L)
        {
          stringBuilder.AppendFormat(", AUTHORITY[\"{0}\", \"{1}\"]", (object) this.LoginState(), (object) this.RestartState());
          goto label_8;
        }
        else
          goto label_8;
label_6:
        stringBuilder.AppendFormat((IFormatProvider) CultureInfo.InvariantCulture.NumberFormat, "PRIMEM[\"{0}\", {1}", new object[2]
        {
          (object) this.Name,
          (object) this.StopState()
        });
        num1 = 5;
        continue;
label_8:
        stringBuilder.Append("]");
        str = stringBuilder.ToString();
        num1 = 6;
      }
label_9:
      return str;
    }

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public override string InterruptState() => string.Format((IFormatProvider) CultureInfo.InvariantCulture.NumberFormat, "<CS_PrimeMeridian Longitude=\"{0}\" >{1}{2}</CS_PrimeMeridian>", new object[3]
    {
      (object) this.StopState(),
      (object) this.AddProcess(),
      (object) this.InvokeState().InterruptState()
    });

    [MethodImpl(MethodImplOptions.NoInlining)]
    public override bool CompareState(object asset)
    {
      int num1 = 1;
      if (true)
        goto label_4;
label_1:
      return false;
label_4:
      PageProcessVisitor pageProcessVisitor;
      while (true)
      {
        int num2;
        bool flag;
        switch (num1)
        {
          case 0:
          case 1:
            flag = !(asset is PageProcessVisitor);
            num2 = 4;
            break;
          case 2:
          case 3:
            goto label_1;
          case 4:
            if (!flag)
            {
              pageProcessVisitor = asset as PageProcessVisitor;
              goto case 5;
            }
            else
            {
              num1 = 3;
              continue;
            }
          case 5:
            if (pageProcessVisitor.InvokeState().CompareState((object) this.InvokeState()))
            {
              if (!PageProcessVisitor.VerifyDescriptor())
              {
                num1 = 6;
                continue;
              }
              goto case 0;
            }
            else
              goto label_12;
          case 6:
            goto label_11;
          default:
            num2 = 5;
            break;
        }
        num1 = num2;
      }
label_11:
      int num3 = pageProcessVisitor.StopState() == this.StopState() ? 1 : 0;
      goto label_13;
label_12:
      num3 = 0;
label_13:
      return num3 != 0;
    }

    internal static bool CreateDescriptor() => true;

    internal static bool VerifyDescriptor() => false;
  }
}
