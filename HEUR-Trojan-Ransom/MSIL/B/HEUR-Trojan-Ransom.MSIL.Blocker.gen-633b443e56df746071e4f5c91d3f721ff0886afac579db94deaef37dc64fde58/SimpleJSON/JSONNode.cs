// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: SecurityContextSwitch, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: B550A3E4-7AB3-42E5-BA1E-9838306CED9A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-633b443e56df746071e4f5c91d3f721ff0886afac579db94deaef37dc64fde58.exe

using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = -1994576485;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -489896366)) % 4U)
          {
            case 0:
              num1 = (int) num2 * -314857460 ^ 1370924909;
              continue;
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -336208799 ^ -882592125;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -1643113854;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2064667036)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -724390048 ^ -1815835149;
              continue;
            case 2:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -151053052 ^ 929655945;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual string Value
    {
      get => "";
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
label_1:
        int num1 = 2067953258;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1710993995)) % 4U)
          {
            case 1:
              count = 0;
              num1 = (int) num2 * 2077056779 ^ 1934289879;
              continue;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * 1329853093 ^ 1110616612;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem)
    {
label_1:
      int num1 = -2048257810;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1539956565)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            this.Add("", aItem);
            num1 = (int) num2 * -352964915 ^ -1556711100;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public virtual JSONNode Remove(string aKey)
    {
label_1:
      int num1 = 1422235031;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1821996954)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 912360510 ^ -925527514;
            continue;
          case 2:
            num1 = (int) num2 * -1919005047 ^ -1611741629;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = -1742855045;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1095137512)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 1770365567 ^ 34290550;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(JSONNode aNode) => aNode;

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONNode.\u003Cget_Childs\u003Ed__17 childs = new JSONNode.\u003Cget_Childs\u003Ed__17(-2);
label_1:
        int num1 = -1799135551;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1303844870)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              childs.\u003C\u003E4__this = this;
              num1 = (int) num2 * 647127324 ^ 151559751;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return (IEnumerable<JSONNode>) childs;
      }
    }

    public IEnumerable<JSONNode> DeepChilds
    {
      get
      {
        JSONNode.\u003Cget_DeepChilds\u003Ed__19 getDeepChildsD19 = new JSONNode.\u003Cget_DeepChilds\u003Ed__19(-2);
label_1:
        int num1 = 217075917;
        IEnumerable<JSONNode> deepChilds;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1997067078)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              deepChilds = (IEnumerable<JSONNode>) getDeepChildsD19;
              num1 = (int) num2 * 632669449 ^ 511632185;
              continue;
            case 3:
              getDeepChildsD19.\u003C\u003E4__this = this;
              num1 = (int) num2 * -1373119766 ^ 468486053;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return deepChilds;
      }
    }

    public override string ToString()
    {
label_1:
      int num1 = -1499606506;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -849355017)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            str = nameof (JSONNode);
            num1 = (int) num2 * 1710910625 ^ 625040385;
            continue;
          case 3:
            num1 = (int) num2 * 452739249 ^ -334225590;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public virtual string ToString(string aPrefix)
    {
label_1:
      int num1 = -1233712692;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -28333140)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            str = nameof (JSONNode);
            num1 = (int) num2 * -161282041 ^ 15550315;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual int AsInt
    {
      get
      {
        int result = 0;
        if (!int.TryParse(this.Value, out result))
          goto label_4;
label_1:
        int num1 = -351688298;
label_2:
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1361490743)) % 6U)
          {
            case 0:
              num1 = (int) num2 * -672772224 ^ 1572742968;
              continue;
            case 1:
              asInt = result;
              num1 = (int) num2 * -2129864849 ^ -233075202;
              continue;
            case 2:
              num1 = (int) num2 * -1029474500 ^ -117760688;
              continue;
            case 4:
              goto label_1;
            case 5:
              goto label_4;
            default:
              goto label_7;
          }
        }
label_7:
        return asInt;
label_4:
        asInt = 0;
        num1 = -568650697;
        goto label_2;
      }
      set => this.Value = value.ToString();
    }

    public virtual float AsFloat
    {
      get
      {
label_1:
        int num1 = 1815293878;
        float result;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 90578477)) % 6U)
          {
            case 0:
              asFloat = 0.0f;
              num1 = 29894994;
              continue;
            case 1:
              result = 0.0f;
              int num3 = float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u200B‪⁯⁭⁪‪‪‪‭‬‬⁪‎​⁪‬‏⁯‎⁪‌​‪‌‌⁮​⁯⁮‏‍‮‭‏​‍‪‏⁯⁬‮(), out result) ? -1305437534 : (num3 = -1396279376);
              num1 = num3 ^ (int) num2 * 1811656737;
              continue;
            case 2:
              asFloat = result;
              num1 = (int) num2 * 720051740 ^ -1722961980;
              continue;
            case 3:
              num1 = (int) num2 * -219789688 ^ 634158604;
              continue;
            case 4:
              goto label_1;
            default:
              goto label_7;
          }
        }
label_7:
        return asFloat;
      }
      set => this.Value = value.ToString();
    }

    public virtual double AsDouble
    {
      get
      {
label_1:
        int num1 = 98297536;
        double result;
        double asDouble;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 754566420)) % 9U)
          {
            case 0:
              asDouble = 0.0;
              num1 = 1991179317;
              continue;
            case 1:
              result = 0.0;
              num1 = (int) num2 * -970161830 ^ -750666389;
              continue;
            case 2:
              flag = double.TryParse(this.Value, out result);
              num1 = (int) num2 * -1658262971 ^ 955927357;
              continue;
            case 3:
              num1 = (int) num2 * -77520888 ^ -455340975;
              continue;
            case 4:
              goto label_1;
            case 6:
              num1 = (int) num2 * 530517884 ^ 323244973;
              continue;
            case 7:
              int num3 = !flag ? -1914721583 : (num3 = -378465869);
              num1 = num3 ^ (int) num2 * 1256379849;
              continue;
            case 8:
              asDouble = result;
              num1 = (int) num2 * 1125137017 ^ 1360967793;
              continue;
            default:
              goto label_10;
          }
        }
label_10:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = 2026582171;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 329943261)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Value = value.ToString();
              num1 = (int) num2 * 1848654242 ^ 320457350;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual bool AsBool
    {
      get
      {
label_1:
        int num1 = 68496984;
        bool result;
        bool asBool;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1563552905)) % 8U)
          {
            case 1:
              result = false;
              num1 = (int) num2 * -1485518328 ^ 1546150506;
              continue;
            case 2:
              asBool = !JSONNode.\u200E‎‍‍‎‍‏‎‪‎⁫⁭‍‮​‭‎‮⁪⁪‬⁫‭⁯‎‎‪⁭‪‌‮⁪⁮⁮‭‎⁮‪⁫⁮‮(this.Value);
              num1 = 1786913981;
              continue;
            case 3:
              flag = bool.TryParse(this.Value, out result);
              num1 = (int) num2 * -1055681503 ^ -1012931780;
              continue;
            case 4:
              num1 = (int) num2 * 597020892 ^ -226515663;
              continue;
            case 5:
              goto label_1;
            case 6:
              int num3 = !flag ? -1361964293 : (num3 = -1826612722);
              num1 = num3 ^ (int) num2 * -335095348;
              continue;
            case 7:
              asBool = result;
              num1 = (int) num2 * -252130004 ^ 1100502421;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asBool;
      }
      set => this.Value = value ? "true" : "false";
    }

    public virtual JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = 782828873;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 610660810)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              asArray = this as JSONArray;
              num1 = (int) num2 * 196603997 ^ 897725075;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asArray;
      }
    }

    public virtual JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = -389274381;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -528981986)) % 4U)
          {
            case 1:
              asObject = this as JSONClass;
              num1 = (int) num2 * 1142661508 ^ -316561303;
              continue;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * -1328554593 ^ 1929470515;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s)
    {
label_1:
      int num1 = 237682533;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 756511066)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            jsonNode = (JSONNode) new JSONData(s);
            num1 = (int) num2 * -1269375015 ^ 1167489804;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public static implicit operator string(JSONNode d)
    {
label_1:
      int num1 = 524256676;
      string str1;
      while (true)
      {
        uint num2;
        string str2;
        switch ((num2 = (uint) (num1 ^ 1942416399)) % 5U)
        {
          case 1:
            str2 = d.Value;
            break;
          case 2:
            num1 = (int) num2 * -1285480404 ^ -2040246815;
            continue;
          case 3:
            if (!(d == (object) null))
            {
              num1 = (int) num2 * -975091793 ^ 1444927131;
              continue;
            }
            str2 = (string) null;
            break;
          case 4:
            goto label_1;
          default:
            goto label_9;
        }
        str1 = str2;
        num1 = 589737492;
      }
label_9:
      return str1;
    }

    public static bool operator ==(JSONNode a, object b)
    {
      if (b != null)
        goto label_4;
label_1:
      int num1 = -60713836;
label_2:
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -304027935)) % 7U)
        {
          case 0:
            int num3 = flag1 ? 1392192159 : (num3 = 1419903474);
            num1 = num3 ^ (int) num2 * 456091049;
            continue;
          case 1:
            goto label_3;
          case 3:
            goto label_1;
          case 4:
            num1 = (int) num2 * 519921249 ^ 1139331639;
            continue;
          case 5:
            flag2 = true;
            num1 = (int) num2 * 1395476045 ^ -1132995739;
            continue;
          case 6:
            flag2 = (object) a == b;
            num1 = -721293393;
            continue;
          default:
            goto label_10;
        }
      }
label_3:
      int num4 = a is JSONLazyCreator ? 1 : 0;
      goto label_5;
label_10:
      return flag2;
label_4:
      num4 = 0;
label_5:
      flag1 = num4 != 0;
      num1 = -737640445;
      goto label_2;
    }

    public static bool operator !=(JSONNode a, object b)
    {
label_1:
      int num1 = 1182872256;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1874455921)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            flag = !(a == b);
            num1 = (int) num2 * 781244636 ^ 827420015;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = 1423104021;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1785772664)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            flag = (object) this == obj;
            num1 = (int) num2 * -1400795221 ^ 1293428952;
            continue;
          case 3:
            num1 = (int) num2 * 688975349 ^ 597264973;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override int GetHashCode()
    {
      int hashCode = this.\u200C⁭⁭‮‮⁪⁮‫‫‍‬⁮⁮⁬⁪‮‭⁯‮⁮⁯‌​‬⁪‮‏‮⁬‮‭‬‏‬⁬‎‎⁫‏‌‮();
label_1:
      int num1 = 184904668;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1364480402)) % 3U)
        {
          case 1:
            num1 = (int) num2 * 1603987736 ^ 95854110;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return hashCode;
    }

    internal static string Escape(string aText)
    {
label_1:
      int num1 = -347732719;
      string str1;
      int num2;
      string str2;
      char ch1;
      char ch2;
      string str3;
      char ch3;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -909226063)) % 31U)
        {
          case 0:
            num1 = (int) num3 * -232908508 ^ -412697872;
            continue;
          case 1:
            ch2 = ch1;
            num1 = (int) num3 * -1472449129 ^ -20653211;
            continue;
          case 2:
label_23:
            str1 = JSONNode.\u206F⁯‫‍‮‍⁬‌‎‏⁬⁮‍⁪‍‌‍⁬⁯⁯⁫⁬​‌⁪‏⁪⁮‮⁪‮‬⁪⁯​‬‮‫⁫‮‮(str1, "\\n");
            num1 = -151511186;
            continue;
          case 3:
            str1 = JSONNode.\u206F⁯‫‍‮‍⁬‌‎‏⁬⁮‍⁪‍‌‍⁬⁯⁯⁫⁬​‌⁪‏⁪⁮‮⁪‮‬⁪⁯​‬‮‫⁫‮‮(str1, "\\\"");
            num1 = -306654524;
            continue;
          case 4:
            int num4;
            num1 = num4 = num2 >= JSONNode.\u200E‫‮‫⁪‪‪⁬⁭‌‫‍‭‬‬‍⁫⁬⁯⁪‏⁮⁮⁮⁬‫⁭⁯‬​‬‬⁬⁫⁭‌‎‮⁯‬‮(str3) ? -1480760910 : (num4 = -752608772);
            continue;
          case 5:
            str2 = str1;
            num1 = (int) num3 * -1245450890 ^ 1629826689;
            continue;
          case 6:
            ch3 = JSONNode.\u206B‮‎‍‎‭⁭‎‌⁬​‍⁪⁭‏‎‭⁯​‮‌⁬‪⁯‏⁬⁯⁬‌‎‫‎‮⁭‮⁯‍‌‌⁬‮(str3, num2);
            num1 = -1371815811;
            continue;
          case 7:
label_14:
            str1 = JSONNode.\u206F⁯‫‍‮‍⁬‌‎‏⁬⁮‍⁪‍‌‍⁬⁯⁯⁫⁬​‌⁪‏⁪⁮‮⁪‮‬⁪⁯​‬‮‫⁫‮‮(str1, "\\f");
            num1 = -931438963;
            continue;
          case 8:
            num1 = (int) num3 * 1030927392 ^ 2059175204;
            continue;
          case 9:
label_27:
            str1 = JSONNode.\u206F⁯‫‍‮‍⁬‌‎‏⁬⁮‍⁪‍‌‍⁬⁯⁯⁫⁬​‌⁪‏⁪⁮‮⁪‮‬⁪⁯​‬‮‫⁫‮‮(str1, "\\t");
            num1 = -306654524;
            continue;
          case 10:
            num1 = (int) num3 * 1908267856 ^ 391795848;
            continue;
          case 12:
label_29:
            str1 = JSONNode.\u206F⁯‫‍‮‍⁬‌‎‏⁬⁮‍⁪‍‌‍⁬⁯⁯⁫⁬​‌⁪‏⁪⁮‮⁪‮‬⁪⁯​‬‮‫⁫‮‮(str1, "\\r");
            num1 = -689941522;
            continue;
          case 13:
label_12:
            str1 = JSONNode.\u206F⁯‫‍‮‍⁬‌‎‏⁬⁮‍⁪‍‌‍⁬⁯⁯⁫⁬​‌⁪‏⁪⁮‮⁪‮‬⁪⁯​‬‮‫⁫‮‮(str1, ch3.ToString());
            num1 = -306654524;
            continue;
          case 14:
            ch1 = ch3;
            num1 = (int) num3 * -1453454265 ^ 780336119;
            continue;
          case 15:
            num1 = -242650225;
            continue;
          case 16:
            num1 = (int) num3 * -315280580 ^ 2079468756;
            continue;
          case 17:
            goto label_1;
          case 18:
            str1 = "";
            num1 = (int) num3 * -120177250 ^ -1675446159;
            continue;
          case 19:
            num1 = (int) num3 * -944918636 ^ 629826041;
            continue;
          case 20:
            num1 = (int) num3 * -545484685 ^ -441400507;
            continue;
          case 21:
            int num5;
            num1 = num5 = ch2 == '"' ? -2021175406 : (num5 = -2023508793);
            continue;
          case 22:
label_20:
            str1 = JSONNode.\u206F⁯‫‍‮‍⁬‌‎‏⁬⁮‍⁪‍‌‍⁬⁯⁯⁫⁬​‌⁪‏⁪⁮‮⁪‮‬⁪⁯​‬‮‫⁫‮‮(str1, "\\b");
            num1 = -799865373;
            continue;
          case 23:
            int num6;
            num1 = num6 = ch2 != '\\' ? -621522991 : (num6 = -210772799);
            continue;
          case 24:
            num1 = (int) num3 * 628374536 ^ -591046572;
            continue;
          case 25:
            str3 = aText;
            num2 = 0;
            num1 = (int) num3 * 2145801748 ^ 1321800111;
            continue;
          case 26:
            num1 = (int) num3 * 400046035 ^ -403422711;
            continue;
          case 27:
            str1 = JSONNode.\u206F⁯‫‍‮‍⁬‌‎‏⁬⁮‍⁪‍‌‍⁬⁯⁯⁫⁬​‌⁪‏⁪⁮‮⁪‮‬⁪⁯​‬‮‫⁫‮‮(str1, "\\\\");
            num1 = -1566469473;
            continue;
          case 28:
            num1 = (int) num3 * -425748967 ^ 1353670586;
            continue;
          case 29:
            switch (ch2)
            {
              case '\b':
                goto label_20;
              case '\t':
                goto label_27;
              case '\n':
                goto label_23;
              case '\v':
                goto label_12;
              case '\f':
                goto label_14;
              case '\r':
                goto label_29;
              default:
                num1 = (int) num3 * 283818192 ^ -1882374718;
                continue;
            }
          case 30:
            ++num2;
            num1 = (int) num3 * 1041889066 ^ 1597322180;
            continue;
          default:
            goto label_33;
        }
      }
label_33:
      return str2;
    }

    public static JSONNode Parse(string aJSON)
    {
label_1:
      int num1 = -1703769373;
      Stack<JSONNode> jsonNodeStack;
      JSONNode jsonNode1;
      string aKey;
      bool flag1;
      bool flag2;
      bool flag3;
      string aItem;
      bool flag4;
      char ch1;
      bool flag5;
      bool flag6;
      int num2;
      string s;
      char ch2;
      bool flag7;
      char ch3;
      char ch4;
      bool flag8;
      JSONNode jsonNode2;
      bool flag9;
      bool flag10;
      bool flag11;
      bool flag12;
      bool flag13;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -1564170005)) % 153U)
        {
          case 0:
            int num4 = !flag8 ? 696464364 : (num4 = 624800822);
            num1 = num4 ^ (int) num3 * 360478701;
            continue;
          case 1:
            num1 = (int) num3 * 980051448 ^ -886288756;
            continue;
          case 2:
            ch2 = ch4;
            num1 = (int) num3 * 1807328022 ^ 182559298;
            continue;
          case 3:
            int num5 = jsonNode1 is JSONArray ? 432838573 : (num5 = 2140028713);
            num1 = num5 ^ (int) num3 * -768644615;
            continue;
          case 4:
            num1 = (int) num3 * 173308147 ^ 629918831;
            continue;
          case 5:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -675788734 ^ -1294075964;
            continue;
          case 6:
            num1 = -696919978;
            continue;
          case 7:
label_24:
            flag6 = flag5;
            num1 = -1084949183;
            continue;
          case 8:
            num1 = (int) num3 * 893762809 ^ -383821176;
            continue;
          case 9:
            aKey = "";
            aItem = "";
            num1 = -1196445648;
            continue;
          case 10:
            int num6;
            num1 = num6 = ch1 == '{' ? -849875314 : (num6 = -1364721739);
            continue;
          case 11:
            num1 = (int) num3 * 1134923789 ^ -2052399919;
            continue;
          case 12:
            num1 = (int) num3 * -1738729962 ^ 1225197448;
            continue;
          case 13:
            switch (ch2)
            {
              case 'r':
                goto label_33;
              case 's':
                goto label_64;
              case 't':
                goto label_41;
              case 'u':
                goto label_137;
              default:
                num1 = -2050593678;
                continue;
            }
          case 14:
            aKey = JSONNode.\u206A‭⁭‌‍‬⁬‪‌⁬‍‮‌‬​‌‎‏⁮⁬⁪‫‎‌⁮⁯‬​‭⁭​‎⁮⁫⁮⁯⁪‭‌‭‮(aKey);
            flag1 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -944439273 ^ -1122619126;
            continue;
          case 15:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num3 * 1652901697 ^ -449059565;
            continue;
          case 16:
            flag7 = flag5;
            num1 = -665049042;
            continue;
          case 17:
            flag12 = flag5;
            num1 = (int) num3 * -1538459556 ^ -349845250;
            continue;
          case 18:
            int num7 = flag9 ? -1489355271 : (num7 = -829474783);
            num1 = num7 ^ (int) num3 * -300117477;
            continue;
          case 19:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -534645854 ^ -1995091973;
            continue;
          case 20:
            aKey = "";
            num1 = -865319666;
            continue;
          case 21:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 628717011 ^ -539899797;
            continue;
          case 22:
            aItem = "";
            num1 = (int) num3 * 544671821 ^ 420003363;
            continue;
          case 23:
            num1 = (int) num3 * -245724679 ^ -1871415118;
            continue;
          case 24:
          case 36:
          case 84:
          case 98:
          case 99:
label_121:
            ++num2;
            num1 = -1983589912;
            continue;
          case 25:
            jsonNodeStack = new Stack<JSONNode>();
            num1 = (int) num3 * 809548417 ^ 824904317;
            continue;
          case 26:
            int num8;
            num1 = num8 = !JSONNode.\u206F‪​⁮⁯⁯‫⁭⁬⁯‭⁪‭‮⁬‪‬‍⁪⁯⁬⁫‎⁬⁬‎‪​⁮‪‭⁮‬⁮‮‎⁬⁫‏⁯‮(aKey, "") ? -1538910590 : (num8 = -852332769);
            continue;
          case 27:
            int num9;
            num1 = num9 = ch1 != ',' ? -1061635210 : (num9 = -1827001692);
            continue;
          case 28:
            num1 = (int) num3 * -551937064 ^ -1925861142;
            continue;
          case 29:
            num1 = (int) num3 * -951411631 ^ 1369775591;
            continue;
          case 30:
            int num10 = jsonNodeStack.Count > 0 ? -1260095892 : (num10 = -1490151865);
            num1 = num10 ^ (int) num3 * 172787897;
            continue;
          case 32:
label_64:
            aItem = JSONNode.\u206F⁯‫‍‮‍⁬‌‎‏⁬⁮‍⁪‍‌‍⁬⁯⁯⁫⁬​‌⁪‏⁪⁮‮⁪‮‬⁪⁯​‬‮‫⁫‮‮(aItem, ch3.ToString());
            num1 = -1997974927;
            continue;
          case 33:
            int num11;
            num1 = num11 = ch1 != '}' ? -831957925 : (num11 = -183230101);
            continue;
          case 34:
            int num12;
            num1 = num12 = ch1 <= ']' ? -1243061796 : (num12 = -846361325);
            continue;
          case 35:
            num1 = (int) num3 * 189440188 ^ -1379460454;
            continue;
          case 37:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            num1 = -549097499;
            continue;
          case 38:
            int num13;
            num1 = num13 = ch1 != ' ' ? -1480931993 : (num13 = -1986924932);
            continue;
          case 39:
            num1 = (int) num3 * -1271576052 ^ -1169143536;
            continue;
          case 40:
            num1 = -1225526174;
            continue;
          case 41:
            int num14 = flag10 ? -721972406 : (num14 = -1038955418);
            num1 = num14 ^ (int) num3 * 1231406261;
            continue;
          case 42:
            num1 = (int) num3 * 101511790 ^ 1233183084;
            continue;
          case 43:
label_132:
            flag10 = flag5;
            num1 = -2006776015;
            continue;
          case 44:
            aItem = JSONNode.\u206F⁯‫‍‮‍⁬‌‎‏⁬⁮‍⁪‍‌‍⁬⁯⁯⁫⁬​‌⁪‏⁪⁮‮⁪‮‬⁪⁯​‬‮‫⁫‮‮(aItem, ((char) int.Parse(s, NumberStyles.AllowHexSpecifier)).ToString());
            num1 = (int) num3 * 1218054521 ^ 1563505;
            continue;
          case 45:
            flag3 = JSONNode.\u206F‪​⁮⁯⁯‫⁭⁬⁯‭⁪‭‮⁬‪‬‍⁪⁯⁬⁫‎⁬⁬‎‪​⁮‪‭⁮‬⁮‮‎⁬⁫‏⁯‮(aKey, "");
            num1 = -1606428020;
            continue;
          case 46:
            num1 = (int) num3 * -1081027664 ^ 1313261726;
            continue;
          case 47:
            switch (ch1)
            {
              case '\t':
                goto label_132;
              case '\n':
              case '\r':
                goto label_121;
              case '\v':
              case '\f':
                goto label_48;
              default:
                num1 = (int) num3 * 1400815779 ^ -1274824420;
                continue;
            }
          case 48:
            int num15;
            num1 = num15 = ch2 != 'n' ? -1498324353 : (num15 = -1497134528);
            continue;
          case 49:
            int num16 = !flag11 ? -805252677 : (num16 = -540498614);
            num1 = num16 ^ (int) num3 * -1753366560;
            continue;
          case 50:
label_96:
            flag11 = flag5;
            num1 = -137371458;
            continue;
          case 51:
            flag13 = num2 < JSONNode.\u200E‫‮‫⁪‪‪⁬⁭‌‫‍‭‬‬‍⁫⁬⁯⁪‏⁮⁮⁮⁬‫⁭⁯‬​‬‬⁬⁫⁭‌‎‮⁯‬‮(aJSON);
            num1 = -626043071;
            continue;
          case 52:
            num1 = (int) num3 * 1660428304 ^ -628976935;
            continue;
          case 53:
            num1 = (int) num3 * 340582992 ^ -506305473;
            continue;
          case 54:
            aKey = JSONNode.\u206A‭⁭‌‍‬⁬‪‌⁬‍‮‌‬​‌‎‏⁮⁬⁪‫‎‌⁮⁯‬​‭⁭​‎⁮⁫⁮⁯⁪‭‌‭‮(aKey);
            num1 = (int) num3 * 764102078 ^ -1546696716;
            continue;
          case 55:
            goto label_26;
          case 56:
            num1 = (int) num3 * 1714895447 ^ -246842139;
            continue;
          case 57:
            num1 = -1992506625;
            continue;
          case 58:
            aItem = JSONNode.\u206F⁯‫‍‮‍⁬‌‎‏⁬⁮‍⁪‍‌‍⁬⁯⁯⁫⁬​‌⁪‏⁪⁮‮⁪‮‬⁪⁯​‬‮‫⁫‮‮(aItem, JSONNode.\u206B‮‎‍‎‭⁭‎‌⁬​‍⁪⁭‏‎‭⁯​‮‌⁬‪⁯‏⁬⁯⁬‌‎‫‎‮⁭‮⁯‍‌‌⁬‮(aJSON, num2).ToString());
            num1 = (int) num3 * 830638571 ^ -1007967893;
            continue;
          case 59:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num1 = -618231419;
            continue;
          case 60:
            aKey = JSONNode.\u206A‭⁭‌‍‬⁬‪‌⁬‍‮‌‬​‌‎‏⁮⁬⁪‫‎‌⁮⁯‬​‭⁭​‎⁮⁫⁮⁯⁪‭‌‭‮(aKey);
            num1 = (int) num3 * -759427443 ^ 1783342488;
            continue;
          case 61:
            num1 = (int) num3 * 794631617 ^ -234798209;
            continue;
          case 62:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 485666280 ^ -638854019;
            continue;
          case 63:
            aItem = JSONNode.\u206F⁯‫‍‮‍⁬‌‎‏⁬⁮‍⁪‍‌‍⁬⁯⁯⁫⁬​‌⁪‏⁪⁮‮⁪‮‬⁪⁯​‬‮‫⁫‮‮(aItem, "\n");
            num1 = -907118415;
            continue;
          case 64:
            num1 = (int) num3 * 1929742936 ^ 2053150519;
            continue;
          case 65:
            int num17 = ch2 > 'f' ? -1478823731 : (num17 = -897794803);
            num1 = num17 ^ (int) num3 * 1790623276;
            continue;
          case 66:
            num1 = (int) num3 * -1413834704 ^ -1725700193;
            continue;
          case 67:
            aKey = aItem;
            num1 = -1729646099;
            continue;
          case 68:
            num2 = 0;
            num1 = (int) num3 * 862533531 ^ -1967714318;
            continue;
          case 69:
            aItem = JSONNode.\u206F⁯‫‍‮‍⁬‌‎‏⁬⁮‍⁪‍‌‍⁬⁯⁯⁫⁬​‌⁪‏⁪⁮‮⁪‮‬⁪⁯​‬‮‫⁫‮‮(aItem, JSONNode.\u206B‮‎‍‎‭⁭‎‌⁬​‍⁪⁭‏‎‭⁯​‮‌⁬‪⁯‏⁬⁯⁬‌‎‫‎‮⁭‮⁯‍‌‌⁬‮(aJSON, num2).ToString());
            num1 = (int) num3 * 967480492 ^ 1656315791;
            continue;
          case 70:
            num1 = (int) num3 * 1076884236 ^ -2052594905;
            continue;
          case 71:
            int num18 = !flag6 ? 940219153 : (num18 = 144138687);
            num1 = num18 ^ (int) num3 * -1935072578;
            continue;
          case 72:
            int num19;
            num1 = num19 = !flag5 ? -669063933 : (num19 = -1397461593);
            continue;
          case 73:
            aKey = "";
            aItem = "";
            num1 = -1130189037;
            continue;
          case 74:
label_41:
            aItem = JSONNode.\u206F⁯‫‍‮‍⁬‌‎‏⁬⁮‍⁪‍‌‍⁬⁯⁯⁫⁬​‌⁪‏⁪⁮‮⁪‮‬⁪⁯​‬‮‫⁫‮‮(aItem, "\t");
            num1 = -1878362327;
            continue;
          case 75:
            num1 = (int) num3 * 339129550 ^ -217467532;
            continue;
          case 76:
            int num20;
            num1 = num20 = !JSONNode.\u206F‪​⁮⁯⁯‫⁭⁬⁯‭⁪‭‮⁬‪‬‍⁪⁯⁬⁫‎⁬⁬‎‪​⁮‪‭⁮‬⁮‮‎⁬⁫‏⁯‮(aItem, "") ? -1225526174 : (num20 = -1057588786);
            continue;
          case 77:
            aItem = JSONNode.\u206F⁯‫‍‮‍⁬‌‎‏⁬⁮‍⁪‍‌‍⁬⁯⁯⁫⁬​‌⁪‏⁪⁮‮⁪‮‬⁪⁯​‬‮‫⁫‮‮(aItem, "\b");
            num1 = -336074486;
            continue;
          case 78:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * 327373693 ^ 1583741484;
            continue;
          case 79:
            aItem = JSONNode.\u206F⁯‫‍‮‍⁬‌‎‏⁬⁮‍⁪‍‌‍⁬⁯⁯⁫⁬​‌⁪‏⁪⁮‮⁪‮‬⁪⁯​‬‮‫⁫‮‮(aItem, JSONNode.\u206B‮‎‍‎‭⁭‎‌⁬​‍⁪⁭‏‎‭⁯​‮‌⁬‪⁯‏⁬⁯⁬‌‎‫‎‮⁭‮⁯‍‌‌⁬‮(aJSON, num2).ToString());
            num1 = (int) num3 * 1921766532 ^ 98656378;
            continue;
          case 80:
            int num21;
            num1 = num21 = !JSONNode.\u206F‪​⁮⁯⁯‫⁭⁬⁯‭⁪‭‮⁬‪‬‍⁪⁯⁬⁫‎⁬⁬‎‪​⁮‪‭⁮‬⁮‮‎⁬⁫‏⁯‮(aKey, "") ? -1606611508 : (num21 = -1589083978);
            continue;
          case 81:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * 2076875739 ^ -1676185817;
            continue;
          case 82:
            int num22 = !(jsonNode1 != (object) null) ? 1178390277 : (num22 = 1910999787);
            num1 = num22 ^ (int) num3 * -291845653;
            continue;
          case 83:
            num1 = (int) num3 * -1935865344 ^ 271956981;
            continue;
          case 85:
            int num23 = ch2 != 'b' ? -897721444 : (num23 = -1757196993);
            num1 = num23 ^ (int) num3 * 1483480472;
            continue;
          case 86:
            num1 = (int) num3 * -1592634161 ^ -1231239760;
            continue;
          case 87:
            num1 = (int) num3 * 1921665291 ^ -1090092729;
            continue;
          case 88:
            int num24 = !(jsonNode1 is JSONArray) ? -865012597 : (num24 = -1868141867);
            num1 = num24 ^ (int) num3 * 1283585528;
            continue;
          case 89:
            aKey = "";
            flag5 = false;
            num1 = (int) num3 * 1234062913 ^ -2061025569;
            continue;
          case 90:
            num1 = (int) num3 * 232552112 ^ -483962646;
            continue;
          case 91:
            num1 = (int) num3 * 774120355 ^ -879658795;
            continue;
          case 92:
            num1 = (int) num3 * 884507927 ^ -1819650683;
            continue;
          case 93:
            num1 = (int) num3 * 1712107908 ^ -520091846;
            continue;
          case 94:
            int num25 = !flag2 ? 822926283 : (num25 = 955932192);
            num1 = num25 ^ (int) num3 * -1542358995;
            continue;
          case 95:
            flag2 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 1695600494 ^ -2088240686;
            continue;
          case 96:
            jsonNode2 = jsonNode1;
            num1 = -635093203;
            continue;
          case 97:
            ch3 = JSONNode.\u206B‮‎‍‎‭⁭‎‌⁬​‍⁪⁭‏‎‭⁯​‮‌⁬‪⁯‏⁬⁯⁬‌‎‫‎‮⁭‮⁯‍‌‌⁬‮(aJSON, num2);
            ch4 = ch3;
            num1 = (int) num3 * 554615419 ^ 1672772677;
            continue;
          case 100:
            aKey = "";
            num1 = -35967102;
            continue;
          case 101:
            goto label_100;
          case 102:
            int num26;
            num1 = num26 = ch1 == '"' ? -2046699734 : (num26 = -54028813);
            continue;
          case 103:
label_33:
            aItem = JSONNode.\u206F⁯‫‍‮‍⁬‌‎‏⁬⁮‍⁪‍‌‍⁬⁯⁯⁫⁬​‌⁪‏⁪⁮‮⁪‮‬⁪⁯​‬‮‫⁫‮‮(aItem, "\r");
            num1 = -2092466558;
            continue;
          case 104:
            aItem = JSONNode.\u206F⁯‫‍‮‍⁬‌‎‏⁬⁮‍⁪‍‌‍⁬⁯⁯⁫⁬​‌⁪‏⁪⁮‮⁪‮‬⁪⁯​‬‮‫⁫‮‮(aItem, "\f");
            num1 = -336074486;
            continue;
          case 105:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 510334943 ^ -1319475426;
            continue;
          case 106:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 872181590 ^ 882501474;
            continue;
          case 107:
            s = JSONNode.\u202E‎‬⁭‌‭⁮​‏⁮⁯‏⁯⁯‏⁬‬‍‌‮​⁭‪‮‏​‎‫‫⁯⁪‮‏‫‫​⁪‫‎⁪‮(aJSON, num2 + 1, 4);
            num1 = (int) num3 * 456171307 ^ 1828363678;
            continue;
          case 108:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 1982225344 ^ 1815001265;
            continue;
          case 109:
            int num27 = flag1 ? 496235301 : (num27 = 1591615852);
            num1 = num27 ^ (int) num3 * -147232996;
            continue;
          case 110:
            flag8 = jsonNode1 != (object) null;
            num1 = (int) num3 * -1565564003 ^ -1783124782;
            continue;
          case 111:
            aItem = "";
            num1 = (int) num3 * -2054069184 ^ -980480209;
            continue;
          case 112:
            num1 = (int) num3 * -1057207641 ^ 1601036932;
            continue;
          case 113:
            int num28 = flag3 ? 1141896643 : (num28 = 874544688);
            num1 = num28 ^ (int) num3 * -1987163335;
            continue;
          case 114:
            num1 = (int) num3 * 282634447 ^ -869208147;
            continue;
          case 115:
            aItem = JSONNode.\u206F⁯‫‍‮‍⁬‌‎‏⁬⁮‍⁪‍‌‍⁬⁯⁯⁫⁬​‌⁪‏⁪⁮‮⁪‮‬⁪⁯​‬‮‫⁫‮‮(aItem, JSONNode.\u206B‮‎‍‎‭⁭‎‌⁬​‍⁪⁭‏‎‭⁯​‮‌⁬‪⁯‏⁬⁯⁬‌‎‫‎‮⁭‮⁯‍‌‌⁬‮(aJSON, num2).ToString());
            num1 = (int) num3 * 1402722460 ^ 170170767;
            continue;
          case 116:
            num1 = (int) num3 * 1762594097 ^ 1236001926;
            continue;
          case 117:
            int num29 = flag4 ? 1260992351 : (num29 = 1763093620);
            num1 = num29 ^ (int) num3 * -1502351147;
            continue;
          case 118:
            num1 = -1244982181;
            continue;
          case 119:
            int num30 = ch1 == ':' ? -1714308142 : (num30 = -538213393);
            num1 = num30 ^ (int) num3 * 246792077;
            continue;
          case 120:
            int num31;
            num1 = num31 = ch2 != 'f' ? -1024440354 : (num31 = -169830658);
            continue;
          case 121:
            num1 = (int) num3 * 506139185 ^ -306710153;
            continue;
          case 122:
            int num32 = ch1 <= ' ' ? -1333236884 : (num32 = -327413603);
            num1 = num32 ^ (int) num3 * 1508848693;
            continue;
          case 123:
            flag9 = flag5;
            num1 = -2118082294;
            continue;
          case 124:
            jsonNodeStack.Pop();
            flag4 = JSONNode.\u206F‪​⁮⁯⁯‫⁭⁬⁯‭⁪‭‮⁬‪‬‍⁪⁯⁬⁫‎⁬⁬‎‪​⁮‪‭⁮‬⁮‮‎⁬⁫‏⁯‮(aItem, "");
            num1 = -447966482;
            continue;
          case 125:
            num1 = -504538531;
            continue;
          case 126:
            num1 = (int) num3 * -765575227 ^ 1792431009;
            continue;
          case (uint) sbyte.MaxValue:
            switch (ch1)
            {
              case '[':
                goto label_24;
              case '\\':
                goto label_134;
              case ']':
                goto label_96;
              default:
                num1 = -2056683936;
                continue;
            }
          case 128:
label_134:
            ++num2;
            int num33;
            num1 = num33 = !flag5 ? -696919978 : (num33 = -892142911);
            continue;
          case 129:
            int num34;
            num1 = num34 = !JSONNode.\u206F‪​⁮⁯⁯‫⁭⁬⁯‭⁪‭‮⁬‪‬‍⁪⁯⁬⁫‎⁬⁬‎‪​⁮‪‭⁮‬⁮‮‎⁬⁫‏⁯‮(aKey, "") ? -1648172070 : (num34 = -1661807617);
            continue;
          case 130:
            int num35 = !flag12 ? 1366009154 : (num35 = 1760302786);
            num1 = num35 ^ (int) num3 * 1876977620;
            continue;
          case 131:
            num1 = (int) num3 * -2092566141 ^ -892167422;
            continue;
          case 132:
            aItem = "";
            num1 = (int) num3 * 1715957961 ^ -178923145;
            continue;
          case 133:
            goto label_1;
          case 134:
            num1 = (int) num3 * 800088015 ^ 1358635404;
            continue;
          case 135:
            num1 = (int) num3 * 23973661 ^ 645944736;
            continue;
          case 136:
            aItem = "";
            num1 = (int) num3 * -8012632 ^ 1286533913;
            continue;
          case 137:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 803337521 ^ -86308239;
            continue;
          case 138:
            aItem = JSONNode.\u206F⁯‫‍‮‍⁬‌‎‏⁬⁮‍⁪‍‌‍⁬⁯⁯⁫⁬​‌⁪‏⁪⁮‮⁪‮‬⁪⁯​‬‮‫⁫‮‮(aItem, JSONNode.\u206B‮‎‍‎‭⁭‎‌⁬​‍⁪⁭‏‎‭⁯​‮‌⁬‪⁯‏⁬⁯⁬‌‎‫‎‮⁭‮⁯‍‌‌⁬‮(aJSON, num2).ToString());
            num1 = (int) num3 * 1818814893 ^ -423472957;
            continue;
          case 139:
            num1 = (int) num3 * -1496627710 ^ -745000406;
            continue;
          case 140:
            int num36 = flag7 ? 1477864963 : (num36 = 2102457167);
            num1 = num36 ^ (int) num3 * -977025041;
            continue;
          case 141:
            num2 += 4;
            num1 = (int) num3 * 1140520143 ^ 1922135775;
            continue;
          case 142:
            int num37 = !flag13 ? 230224541 : (num37 = 1637667998);
            num1 = num37 ^ (int) num3 * 23698063;
            continue;
          case 143:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -1535119337 ^ 323519061;
            continue;
          case 144:
            num1 = (int) num3 * 2116875687 ^ 701313670;
            continue;
          case 145:
            flag5 = !flag5;
            num1 = -416939260;
            continue;
          case 146:
            num1 = (int) num3 * -1353807170 ^ -1243755262;
            continue;
          case 147:
            ch1 = JSONNode.\u206B‮‎‍‎‭⁭‎‌⁬​‍⁪⁭‏‎‭⁯​‮‌⁬‪⁯‏⁬⁯⁬‌‎‫‎‮⁭‮⁯‍‌‌⁬‮(aJSON, num2);
            int num38 = ch1 > ',' ? -918203161 : (num38 = -64281526);
            num1 = num38 ^ (int) num3 * -392526046;
            continue;
          case 148:
            aItem = JSONNode.\u206F⁯‫‍‮‍⁬‌‎‏⁬⁮‍⁪‍‌‍⁬⁯⁯⁫⁬​‌⁪‏⁪⁮‮⁪‮‬⁪⁯​‬‮‫⁫‮‮(aItem, JSONNode.\u206B‮‎‍‎‭⁭‎‌⁬​‍⁪⁭‏‎‭⁯​‮‌⁬‪⁯‏⁬⁯⁬‌‎‫‎‮⁭‮⁯‍‌‌⁬‮(aJSON, num2).ToString());
            num1 = (int) num3 * 1056984597 ^ 117022473;
            continue;
          case 149:
            num1 = -1219087377;
            continue;
          case 150:
label_48:
            aItem = JSONNode.\u206F⁯‫‍‮‍⁬‌‎‏⁬⁮‍⁪‍‌‍⁬⁯⁯⁫⁬​‌⁪‏⁪⁮‮⁪‮‬⁪⁯​‬‮‫⁫‮‮(aItem, JSONNode.\u206B‮‎‍‎‭⁭‎‌⁬​‍⁪⁭‏‎‭⁯​‮‌⁬‪⁯‏⁬⁯⁬‌‎‫‎‮⁭‮⁯‍‌‌⁬‮(aJSON, num2).ToString());
            num1 = -1649356433;
            continue;
          case 151:
label_137:
            num1 = -2103622271;
            continue;
          case 152:
            int num39;
            num1 = num39 = jsonNodeStack.Count != 0 ? -972534148 : (num39 = -5566623);
            continue;
          default:
            goto label_153;
        }
      }
label_26:
      throw JSONNode.\u202E⁮‮⁫‮‪‭‫‌‍⁪⁮‮‫‭⁫⁪‫‫‍‭‬⁯⁭‌⁬⁭⁪‮⁯‍‌‮‎⁪⁭⁬‪‬‪‮("JSON Parse: Quotation marks seems to be messed up.");
label_100:
      throw JSONNode.\u202E⁮‮⁫‮‪‭‫‌‍⁪⁮‮‫‭⁫⁪‫‫‍‭‬⁯⁭‌⁬⁭⁪‮⁯‍‌‮‎⁪⁭⁬‪‬‪‮("JSON Parse: Too many closing brackets");
label_153:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
label_1:
      int num1 = -952000804;
      BinaryWriter aWriter;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1321490115)) % 4U)
        {
          case 0:
            this.Serialize(aWriter);
            num1 = (int) num2 * 102907228 ^ 1597439315;
            continue;
          case 1:
            aWriter = JSONNode.\u202C‌‎⁭⁯‭‮⁬‭​⁮⁯⁬⁪‌‏‎⁯‏‏‭⁬‮‎⁫​‭‫‏⁬⁫‬⁫‏‪‮⁬‫‪⁫‮(aData);
            num1 = (int) num2 * 119239668 ^ 200858621;
            continue;
          case 2:
            goto label_3;
          case 3:
            goto label_1;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u202E⁮‮⁫‮‪‭‫‌‍⁪⁮‮‫‭⁫⁪‫‫‍‭‬⁯⁭‌⁬⁭⁪‮⁯‍‌‮‎⁪⁭⁬‪‬‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u202E⁮‮⁫‮‪‭‫‌‍⁪⁮‮‫‭⁫⁪‫‫‍‭‬⁯⁭‌⁬⁭⁪‮⁯‍‌‮‎⁪⁭⁬‪‬‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u202E⁮‮⁫‮‪‭‫‌‍⁪⁮‮‫‭⁫⁪‫‫‍‭‬⁯⁭‌⁬⁭⁪‮⁯‍‌‮‎⁪⁭⁬‪‬‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
      JSONNode.\u206A⁮⁮‪‮‬⁭⁭‍‭⁪⁭‭‏⁫‮⁬‪‭‫⁭‬⁫‪‫⁫‭⁮​⁯‪⁭⁪‎‫‮⁪​‮‭‮(JSONNode.\u206C‮​‮⁬‪‪⁯‏⁯⁯⁭‍‏‌⁪⁮‍‍⁬⁬‬‬⁪‏​‍⁭‏‭‭‍⁭‌‫⁭‌‎‮⁪‮((FileSystemInfo) JSONNode.\u200D⁪⁪‫⁫⁯⁬‎⁮⁮‏‪‍‏⁯‪‍⁯‭‪⁪‎‏⁫‌⁫⁬⁯‪‫‍⁮‎‪‭‪‍⁭‌⁮‮(JSONNode.\u206F‌‎‏⁯⁪⁬⁮⁭‫‪‌‏​‬⁪⁮⁪‮‍​​‬⁭‎‮‬⁪⁮‮⁬⁪‏⁫⁯‭⁫‬⁭‎‮(aFileName))));
      FileStream aData = JSONNode.\u206D​​‬‏‎⁬‪⁬​⁭‭⁬​⁮⁭‫⁭‭⁯‫‫‪‏⁫⁯​‏⁯⁮⁯‫⁮‭‌⁫‮‍‭‏‮(aFileName);
      try
      {
        this.SaveToStream((Stream) aData);
label_2:
        int num1 = 47376387;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1442549277)) % 4U)
          {
            case 0:
              goto label_2;
            case 1:
              num1 = (int) num2 * 785553614 ^ -499629768;
              continue;
            case 2:
              num1 = (int) num2 * 1249873897 ^ -1122979314;
              continue;
            case 3:
              goto label_10;
            default:
              goto label_6;
          }
        }
label_10:
        return;
label_6:;
      }
      finally
      {
        if (aData != null)
        {
label_8:
          int num3 = 504926891;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 1442549277)) % 4U)
            {
              case 1:
                num3 = (int) num4 * 462329330 ^ 1631852715;
                continue;
              case 2:
                JSONNode.\u202C⁫‎‬⁭⁪⁪‍‎‫‌‮‌​⁮‭​⁬‎⁮⁯‭‬‭‫‍‪‌⁮‍⁮⁫​⁯‍‬‎‬‌‭‮((IDisposable) aData);
                num3 = (int) num4 * 146034374 ^ -1666823332;
                continue;
              case 3:
                goto label_8;
              default:
                goto label_13;
            }
          }
        }
label_13:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u206A‎⁮‭‏‬‮​‪‬⁭⁪‬‍‏‪‭‬​‭‍​‎⁭⁪‫‌‎‏⁯⁬‭‮⁬‌⁬‌‭‎‫‮();
      try
      {
        this.SaveToStream((Stream) aData);
label_2:
        int num1 = 265034654;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 579964272)) % 4U)
          {
            case 0:
              goto label_2;
            case 2:
              JSONNode.\u202A‌⁫‬⁪‭⁯⁬‫‪⁭‬‭‮‌⁯⁯⁫‎⁭‫⁯‭⁬‭⁯⁫⁫⁫‏‏​⁫‍‮‍‮‪⁫‮‮((Stream) aData, 0L);
              num1 = (int) num2 * -1233918180 ^ 506280811;
              continue;
            case 3:
              num1 = (int) num2 * 1674114170 ^ -1621626029;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return JSONNode.\u206C‪‌‭⁭‮‌⁫‏⁮⁮⁭‎‍⁯‌‪‍‎⁯⁮⁮‍‮​‌‎‏⁯‎​​‫⁮‮⁯‮‌​‏‮(JSONNode.\u206A‭⁫‪⁮⁬⁫‭‎‌‪⁬‮‍⁫‮⁭⁯⁫​‎⁬⁬‭‫‍‍‬‎‭‭‌‫⁫‏‭‏⁯⁮‪‮(aData));
      }
      finally
      {
        if (aData != null)
        {
label_8:
          int num3 = 116391378;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 579964272)) % 4U)
            {
              case 0:
                goto label_8;
              case 2:
                JSONNode.\u202C⁫‎‬⁭⁪⁪‍‎‫‌‮‌​⁮‭​⁬‎⁮⁯‭‬‭‫‍‪‌⁮‍⁮⁫​⁯‍‬‎‬‌‭‮((IDisposable) aData);
                num3 = (int) num4 * -642144761 ^ -1912787275;
                continue;
              case 3:
                num3 = (int) num4 * -341152999 ^ -1312103334;
                continue;
              default:
                goto label_12;
            }
          }
        }
label_12:;
      }
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
label_1:
      int num1 = -2017118118;
      int num2;
      string aKey;
      JSONArray jsonArray;
      JSONNode jsonNode;
      JSONNode aItem;
      JSONBinaryTag jsonBinaryTag;
      bool flag;
      JSONClass jsonClass;
      int num3;
      int num4;
      int num5;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ -1489172545)) % 38U)
        {
          case 0:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * 733896710 ^ 1557706356;
            continue;
          case 1:
label_23:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202C‏‪‮‎‫‌⁭‏⁪‮‍‪⁪‮⁫⁯‭‌⁮​⁫‫⁪⁮‮⁮‏‬‎‮‏‍‎‮⁭⁬⁪⁯⁯‮(aReader));
            num1 = -175723201;
            continue;
          case 2:
            flag = num3 < num4;
            num1 = -324051433;
            continue;
          case 3:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202A⁫‫‫‮⁯⁫‫⁪⁯‎⁮⁬‬‎‭‭‎‬‪⁭⁪⁮⁭​‮⁪⁬‭‫⁮‮‬⁬⁫⁫‭‬⁬⁫‮(aReader));
            num1 = (int) num6 * 160237988 ^ 1533159854;
            continue;
          case 4:
            num1 = (int) num6 * 491505510 ^ -1495339542;
            continue;
          case 5:
            num1 = -1592117118;
            continue;
          case 6:
            num1 = (int) num6 * -828208010 ^ -1650276318;
            continue;
          case 7:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * 1601910881 ^ -950747515;
            continue;
          case 8:
label_39:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206D⁮‍‫‍‫‫‫⁪⁪‭‌‏‎⁪⁪‏⁪​‍‌‭⁮‮‭⁭‌⁪​⁪⁫⁮​⁯⁫‍‌‪‭‎‮(aReader));
            num1 = -96860920;
            continue;
          case 9:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            num1 = -542635850;
            continue;
          case 10:
            num2 = 0;
            num1 = (int) num6 * -1738528747 ^ -915305154;
            continue;
          case 11:
            num1 = (int) num6 * -1248899240 ^ -1292788291;
            continue;
          case 12:
label_33:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206C⁭‍‬‮‏⁮‪⁯⁮‌⁫⁮‪‪⁫‌‌‭‎‍⁬⁪‬⁯‮‏‪‪‫‪‍‍‌‍⁮‪‮‏⁯‮(aReader));
            num1 = -1139218721;
            continue;
          case 13:
            num1 = (int) num6 * -1368616807 ^ -1791023811;
            continue;
          case 14:
            ++num3;
            num1 = (int) num6 * -1046515398 ^ 2129467667;
            continue;
          case 16:
            aKey = JSONNode.\u206C⁭‍‬‮‏⁮‪⁯⁮‌⁫⁮‪‪⁫‌‌‭‎‍⁬⁪‬⁯‮‏‪‪‫‪‍‍‌‍⁮‪‮‏⁯‮(aReader);
            num1 = (int) num6 * 2136033017 ^ -2007249906;
            continue;
          case 17:
            num1 = -1257345631;
            continue;
          case 18:
            num1 = (int) num6 * 1667647730 ^ -157402402;
            continue;
          case 19:
            num1 = (int) num6 * 2119926888 ^ 2082034803;
            continue;
          case 20:
            int num7 = flag ? 682611812 : (num7 = 422746176);
            num1 = num7 ^ (int) num6 * -1982996805;
            continue;
          case 21:
            aItem = JSONNode.Deserialize(aReader);
            num1 = (int) num6 * -452402474 ^ -953693449;
            continue;
          case 22:
label_15:
            num1 = -734272700;
            continue;
          case 23:
            num3 = 0;
            num1 = (int) num6 * 842261642 ^ -120603991;
            continue;
          case 24:
label_3:
            num1 = -669019213;
            continue;
          case 25:
label_28:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206F⁪⁬⁮‮‪⁪⁮‬⁫‏‏‌⁯‏​⁫‎⁭⁫​⁭‫‬⁮⁭‍‏‏⁮⁫‍⁫⁪⁭⁯⁬⁪⁬⁯‮(aReader));
            num1 = -768171919;
            continue;
          case 26:
            num1 = (int) num6 * 2064389207 ^ 1471138803;
            continue;
          case 27:
            num1 = (int) num6 * -358611461 ^ 755953835;
            continue;
          case 28:
            num4 = JSONNode.\u202A⁫‫‫‮⁯⁫‫⁪⁯‎⁮⁬‬‎‭‭‎‬‪⁭⁪⁮⁭​‮⁪⁬‭‫⁮‮‬⁬⁫⁫‭‬⁬⁫‮(aReader);
            jsonClass = new JSONClass();
            num1 = (int) num6 * 754579111 ^ -198729254;
            continue;
          case 29:
            goto label_22;
          case 30:
            goto label_1;
          case 31:
            num1 = (int) num6 * 1022034942 ^ 2069335792;
            continue;
          case 32:
            num1 = (int) num6 * -2092244429 ^ 1949523426;
            continue;
          case 33:
            int num8;
            num1 = num8 = num2 < num5 ? -1088913088 : (num8 = -1833477163);
            continue;
          case 34:
            jsonClass.Add(aKey, aItem);
            num1 = (int) num6 * -196129414 ^ 1906436400;
            continue;
          case 35:
label_32:
            num5 = JSONNode.\u202A⁫‫‫‮⁯⁫‫⁪⁯‎⁮⁬‬‎‭‭‎‬‪⁭⁪⁮⁭​‮⁪⁬‭‫⁮‮‬⁬⁫⁫‭‬⁬⁫‮(aReader);
            jsonArray = new JSONArray();
            num1 = -864323403;
            continue;
          case 36:
            ++num2;
            num1 = (int) num6 * 308308880 ^ -1777823862;
            continue;
          case 37:
            jsonBinaryTag = (JSONBinaryTag) JSONNode.\u206A‭⁯⁫‏‎‬⁫‮‏⁭⁭⁮⁬⁪⁭⁪‎‫‫⁯⁮‫‪⁪‭‫⁪‪⁪‌‪‌⁭‭‏⁮‍⁮⁬‮(aReader);
            switch (jsonBinaryTag)
            {
              case JSONBinaryTag.Array:
                goto label_32;
              case JSONBinaryTag.Class:
                goto label_3;
              case JSONBinaryTag.Value:
                goto label_33;
              case JSONBinaryTag.IntValue:
                goto label_15;
              case JSONBinaryTag.DoubleValue:
                goto label_39;
              case JSONBinaryTag.BoolValue:
                goto label_28;
              case JSONBinaryTag.FloatValue:
                goto label_23;
              default:
                num1 = (int) num6 * -1649807441 ^ 2001767040;
                continue;
            }
          default:
            goto label_40;
        }
      }
label_22:
      throw JSONNode.\u202E⁮‮⁫‮‪‭‫‌‍⁪⁮‮‫‭⁫⁪‫‫‍‭‬⁯⁭‌⁬⁭⁪‮⁯‍‌‮‎⁪⁭⁬‪‬‪‮(JSONNode.\u206F⁯‫‍‮‍⁬‌‎‏⁬⁮‍⁪‍‌‍⁬⁯⁯⁫⁬​‌⁪‏⁪⁮‮⁪‮‬⁪⁯​‬‮‫⁫‮‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag.ToString()));
label_40:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u202E⁮‮⁫‮‪‭‫‌‍⁪⁮‮‫‭⁫⁪‫‫‍‭‬⁯⁭‌⁬⁭⁪‮⁯‍‌‮‎⁪⁭⁬‪‬‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u202E⁮‮⁫‮‪‭‫‌‍⁪⁮‮‫‭⁫⁪‫‫‍‭‬⁯⁭‌⁬⁭⁪‮⁯‍‌‮‎⁪⁭⁬‪‬‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u202E⁮‮⁫‮‪‭‫‌‍⁪⁮‮‫‭⁫⁪‫‫‍‭‬⁯⁭‌⁬⁭⁪‮⁯‍‌‮‎⁪⁭⁬‪‬‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u200C‬⁮‎⁪​⁪‮⁬‬⁫‎⁮‎‬‪‬⁫⁬⁬‍‍‪‎⁭‮‭‭‫⁯‮‪‫‮⁭⁬‮⁯⁫⁭‮(aData);
      try
      {
        return JSONNode.Deserialize(aReader);
      }
      finally
      {
        if (aReader != null)
        {
label_3:
          int num1 = -1891789453;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ -606918363)) % 4U)
            {
              case 0:
                goto label_3;
              case 1:
                num1 = (int) num2 * -1731689616 ^ -1594314490;
                continue;
              case 2:
                JSONNode.\u202C⁫‎‬⁭⁪⁪‍‎‫‌‮‌​⁮‭​⁬‎⁮⁯‭‬‭‫‍‪‌⁮‍⁮⁫​⁯‍‬‎‬‌‭‮((IDisposable) aReader);
                num1 = (int) num2 * -1666228599 ^ -1442374542;
                continue;
              default:
                goto label_7;
            }
          }
        }
label_7:;
      }
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u206B‍⁯‬‮​‎‌‎‬⁪⁭‎⁫⁬⁫⁭⁭⁮⁫‌⁫‍‮‏‮‎⁮⁪‎⁯‪‫‍⁭​​‬‪⁬‮(aFileName);
      try
      {
        return JSONNode.LoadFromStream((Stream) aData);
      }
      finally
      {
        if (aData != null)
        {
label_3:
          int num1 = 2022819805;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ 1288748918)) % 4U)
            {
              case 0:
                goto label_3;
              case 1:
                num1 = (int) num2 * 666341026 ^ -929948294;
                continue;
              case 3:
                JSONNode.\u202C⁫‎‬⁭⁪⁪‍‎‫‌‮‌​⁮‭​⁬‎⁮⁯‭‬‭‫‍‪‌⁮‍⁮⁫​⁯‍‬‎‬‌‭‮((IDisposable) aData);
                num1 = (int) num2 * -504641689 ^ -1373967146;
                continue;
              default:
                goto label_7;
            }
          }
        }
label_7:;
      }
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
      MemoryStream aData = JSONNode.\u200C‌‮‮​‍⁬⁬‭‫‫‮⁬‍⁬⁪⁬⁮‎‎‮‌‍‏‎‭⁮‌‪⁯‮⁪‌‌‫‫‍‍⁪⁫‮(JSONNode.\u200E‏‌‍⁬‫⁮​⁬⁭‮‎⁫⁯‎‭‏⁪‮​‮‭‮⁬⁪‫⁭‬‬⁯‎‮‮⁮‫‍‫‌‭⁭‮(aBase64));
label_1:
      int num1 = -1127701347;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -146324599)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -616479864 ^ -2022462745;
            continue;
          case 3:
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * 1008263677 ^ -1861594006;
            continue;
          case 4:
            JSONNode.\u202A‌⁫‬⁪‭⁯⁬‫‪⁭‬‭‮‌⁯⁯⁫‎⁭‫⁯‭⁬‭⁯⁫⁫⁫‏‏​⁫‍‮‍‮‪⁫‮‮((Stream) aData, 0L);
            num1 = (int) num2 * -2629329 ^ -1596731813;
            continue;
          default:
            goto label_6;
        }
      }
label_6:
      return jsonNode;
    }

    public JSONNode()
    {
label_1:
      int num1 = 736054255;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1963545695)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * 239179725 ^ -176496938;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static CultureInfo \u200B‪⁯⁭⁪‪‪‪‭‬‬⁪‎​⁪‬‏⁯‎⁪‌​‪‌‌⁮​⁯⁮‏‍‮‭‏​‍‪‏⁯⁬‮() => CultureInfo.InvariantCulture;

    static bool \u200E‎‍‍‎‍‏‎‪‎⁫⁭‍‮​‭‎‮⁪⁪‬⁫‭⁯‎‎‪⁭‪‌‮⁪⁮⁮‭‎⁮‪⁫⁮‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u200C⁭⁭‮‮⁪⁮‫‫‍‬⁮⁮⁬⁪‮‭⁯‮⁮⁯‌​‬⁪‮‏‮⁬‮‭‬‏‬⁬‎‎⁫‏‌‮() => base.GetHashCode();

    static char \u206B‮‎‍‎‭⁭‎‌⁬​‍⁪⁭‏‎‭⁯​‮‌⁬‪⁯‏⁬⁯⁬‌‎‫‎‮⁭‮⁯‍‌‌⁬‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u206F⁯‫‍‮‍⁬‌‎‏⁬⁮‍⁪‍‌‍⁬⁯⁯⁫⁬​‌⁪‏⁪⁮‮⁪‮‬⁪⁯​‬‮‫⁫‮‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u200E‫‮‫⁪‪‪⁬⁭‌‫‍‭‬‬‍⁫⁬⁯⁪‏⁮⁮⁮⁬‫⁭⁯‬​‬‬⁬⁫⁭‌‎‮⁯‬‮([In] string obj0) => obj0.Length;

    static string \u206A‭⁭‌‍‬⁬‪‌⁬‍‮‌‬​‌‎‏⁮⁬⁪‫‎‌⁮⁯‬​‭⁭​‎⁮⁫⁮⁯⁪‭‌‭‮([In] string obj0) => obj0.Trim();

    static bool \u206F‪​⁮⁯⁯‫⁭⁬⁯‭⁪‭‮⁬‪‬‍⁪⁯⁬⁫‎⁬⁬‎‪​⁮‪‭⁮‬⁮‮‎⁬⁫‏⁯‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u202E⁮‮⁫‮‪‭‫‌‍⁪⁮‮‫‭⁫⁪‫‫‍‭‬⁯⁭‌⁬⁭⁪‮⁯‍‌‮‎⁪⁭⁬‪‬‪‮([In] string obj0) => new Exception(obj0);

    static string \u202E‎‬⁭‌‭⁮​‏⁮⁯‏⁯⁯‏⁬‬‍‌‮​⁭‪‮‏​‎‫‫⁯⁪‮‏‫‫​⁪‫‎⁪‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u202C‌‎⁭⁯‭‮⁬‭​⁮⁯⁬⁪‌‏‎⁯‏‏‭⁬‮‎⁫​‭‫‏⁬⁫‬⁫‏‪‮⁬‫‪⁫‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u206F‌‎‏⁯⁪⁬⁮⁭‫‪‌‏​‬⁪⁮⁪‮‍​​‬⁭‎‮‬⁪⁮‮⁬⁪‏⁫⁯‭⁫‬⁭‎‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u200D⁪⁪‫⁫⁯⁬‎⁮⁮‏‪‍‏⁯‪‍⁯‭‪⁪‎‏⁫‌⁫⁬⁯‪‫‍⁮‎‪‭‪‍⁭‌⁮‮([In] FileInfo obj0) => obj0.Directory;

    static string \u206C‮​‮⁬‪‪⁯‏⁯⁯⁭‍‏‌⁪⁮‍‍⁬⁬‬‬⁪‏​‍⁭‏‭‭‍⁭‌‫⁭‌‎‮⁪‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u206A⁮⁮‪‮‬⁭⁭‍‭⁪⁭‭‏⁫‮⁬‪‭‫⁭‬⁫‪‫⁫‭⁮​⁯‪⁭⁪‎‫‮⁪​‮‭‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u206D​​‬‏‎⁬‪⁬​⁭‭⁬​⁮⁭‫⁭‭⁯‫‫‪‏⁫⁯​‏⁯⁮⁯‫⁮‭‌⁫‮‍‭‏‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u202C⁫‎‬⁭⁪⁪‍‎‫‌‮‌​⁮‭​⁬‎⁮⁯‭‬‭‫‍‪‌⁮‍⁮⁫​⁯‍‬‎‬‌‭‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u206A‎⁮‭‏‬‮​‪‬⁭⁪‬‍‏‪‭‬​‭‍​‎⁭⁪‫‌‎‏⁯⁬‭‮⁬‌⁬‌‭‎‫‮() => new MemoryStream();

    static void \u202A‌⁫‬⁪‭⁯⁬‫‪⁭‬‭‮‌⁯⁯⁫‎⁭‫⁯‭⁬‭⁯⁫⁫⁫‏‏​⁫‍‮‍‮‪⁫‮‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u206A‭⁫‪⁮⁬⁫‭‎‌‪⁬‮‍⁫‮⁭⁯⁫​‎⁬⁬‭‫‍‍‬‎‭‭‌‫⁫‏‭‏⁯⁮‪‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u206C‪‌‭⁭‮‌⁫‏⁮⁮⁭‎‍⁯‌‪‍‎⁯⁮⁮‍‮​‌‎‏⁯‎​​‫⁮‮⁯‮‌​‏‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u206A‭⁯⁫‏‎‬⁫‮‏⁭⁭⁮⁬⁪⁭⁪‎‫‫⁯⁮‫‪⁪‭‫⁪‪⁪‌‪‌⁭‭‏⁮‍⁮⁬‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u202A⁫‫‫‮⁯⁫‫⁪⁯‎⁮⁬‬‎‭‭‎‬‪⁭⁪⁮⁭​‮⁪⁬‭‫⁮‮‬⁬⁫⁫‭‬⁬⁫‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u206C⁭‍‬‮‏⁮‪⁯⁮‌⁫⁮‪‪⁫‌‌‭‎‍⁬⁪‬⁯‮‏‪‪‫‪‍‍‌‍⁮‪‮‏⁯‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u206D⁮‍‫‍‫‫‫⁪⁪‭‌‏‎⁪⁪‏⁪​‍‌‭⁮‮‭⁭‌⁪​⁪⁫⁮​⁯⁫‍‌‪‭‎‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u206F⁪⁬⁮‮‪⁪⁮‬⁫‏‏‌⁯‏​⁫‎⁭⁫​⁭‫‬⁮⁭‍‏‏⁮⁫‍⁫⁪⁭⁯⁬⁪⁬⁯‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u202C‏‪‮‎‫‌⁭‏⁪‮‍‪⁪‮⁫⁯‭‌⁮​⁫‫⁪⁮‮⁮‏‬‎‮‏‍‎‮⁭⁬⁪⁯⁯‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u200C‬⁮‎⁪​⁪‮⁬‬⁫‎⁮‎‬‪‬⁫⁬⁬‍‍‪‎⁭‮‭‭‫⁯‮‪‫‮⁭⁬‮⁯⁫⁭‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u206B‍⁯‬‮​‎‌‎‬⁪⁭‎⁫⁬⁫⁭⁭⁮⁫‌⁫‍‮‏‮‎⁮⁪‎⁯‪‫‍⁭​​‬‪⁬‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u200E‏‌‍⁬‫⁮​⁬⁭‮‎⁫⁯‎‭‏⁪‮​‮‭‮⁬⁪‫⁭‬‬⁯‎‮‮⁮‫‍‫‌‭⁭‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u200C‌‮‮​‍⁬⁬‭‫‫‮⁬‍⁬⁪⁬⁮‎‎‮‌‍‏‎‭⁮‌‪⁯‮⁪‌‌‫‫‍‍⁪⁫‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
