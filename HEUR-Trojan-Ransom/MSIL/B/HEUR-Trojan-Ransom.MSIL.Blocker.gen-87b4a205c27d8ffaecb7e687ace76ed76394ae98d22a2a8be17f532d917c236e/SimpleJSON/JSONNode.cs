// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: ObjRefSurroga, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 1D36518F-5F0C-4DDD-80AA-3BF17FC6E8B1
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-87b4a205c27d8ffaecb7e687ace76ed76394ae98d22a2a8be17f532d917c236e.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get => (JSONNode) null;
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -1081819531;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -254464984)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -1274064650 ^ 950929777;
              continue;
            case 3:
              num1 = (int) num2 * 1756331318 ^ 1429349784;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual string Value
    {
      get
      {
label_1:
        int num1 = -1693994270;
        string str;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1062953173)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              str = "";
              num1 = (int) num2 * -86226714 ^ 1328484014;
              continue;
            case 3:
              num1 = (int) num2 * -683975876 ^ -1481563075;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return str;
      }
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
label_1:
        int num1 = -1235231470;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1253357012)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              count = 0;
              num1 = (int) num2 * -828094746 ^ -2049373065;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem) => this.Add("", aItem);

    public virtual JSONNode Remove(string aKey)
    {
      JSONNode jsonNode = (JSONNode) null;
label_1:
      int num1 = 1910670385;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1071938521)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1160031515 ^ -1528188746;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = 1709053800;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1075943815)) % 3U)
        {
          case 1:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 1230455003 ^ 836309845;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(JSONNode aNode) => aNode;

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONNode.\u003Cget_Childs\u003Ed__17 getChildsD17 = new JSONNode.\u003Cget_Childs\u003Ed__17(-2);
label_1:
        int num1 = -1323473730;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1275002885)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              getChildsD17.\u003C\u003E4__this = this;
              num1 = (int) num2 * 77067649 ^ 1181207060;
              continue;
            case 2:
              childs = (IEnumerable<JSONNode>) getChildsD17;
              num1 = (int) num2 * 1086274695 ^ 806404782;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return childs;
      }
    }

    public IEnumerable<JSONNode> DeepChilds
    {
      get
      {
        bool deepChilds;
        try
        {
          int num1 = this.\u003C\u003E1__state;
          if (num1 == 0)
            goto label_17;
label_1:
          int num2 = -645840348;
label_2:
          IEnumerator<JSONNode> enumerator1;
          JSONNode C;
          IEnumerator<JSONNode> enumerator2;
          JSONNode D;
          while (true)
          {
            uint num3;
            switch ((num3 = (uint) (num2 ^ -1606113169)) % 25U)
            {
              case 0:
                enumerator2 = C.DeepChilds.GetEnumerator();
                this.\u003C\u003E1__state = -4;
                num2 = (int) num3 * 1105713764 ^ -109090655;
                continue;
              case 1:
                C = enumerator1.Current;
                num2 = -144609631;
                continue;
              case 2:
              case 14:
                goto label_17;
              case 3:
                int num4;
                num2 = num4 = num1 != 1 ? -1298295770 : (num4 = -1455349083);
                continue;
              case 4:
              case 15:
                this.\u003C\u003E1__state = -4;
                num2 = -1215178326;
                continue;
              case 5:
                enumerator2 = (IEnumerator<JSONNode>) null;
                num2 = (int) num3 * -1282095753 ^ -717586614;
                continue;
              case 6:
                C = (JSONNode) null;
                num2 = (int) num3 * -539224780 ^ -1961463966;
                continue;
              case 7:
                num2 = (int) num3 * -1273487211 ^ -1043415916;
                continue;
              case 8:
                num2 = (int) num3 * -1977316310 ^ 247846714;
                continue;
              case 9:
                this.\u003C\u003Em__Finally2();
                num2 = (int) num3 * 444444285 ^ 1342024030;
                continue;
              case 10:
                int num5;
                num2 = num5 = JSONNode.\u003Cget_DeepChilds\u003Ed__19.\u206E‭‭⁫⁮‍‍⁬⁮‌‎⁪⁭‌‮⁫‭‏⁯‭⁮⁭‫‮⁮‪⁫⁭‪‬⁪‭⁪‏‌⁮⁫⁮⁪‎‮((IEnumerator) enumerator2) ? -754159907 : (num5 = -15210183);
                continue;
              case 11:
                D = (JSONNode) null;
                num2 = (int) num3 * 2099973796 ^ -28470739;
                continue;
              case 13:
                goto label_1;
              case 16:
                this.\u003C\u003Em__Finally1();
                enumerator1 = (IEnumerator<JSONNode>) null;
                num2 = (int) num3 * -140143193 ^ 2073694755;
                continue;
              case 17:
                goto label_8;
              case 18:
                num2 = (int) num3 * 1079094044 ^ -1772819399;
                continue;
              case 19:
                goto label_25;
              case 20:
                int num6;
                num2 = num6 = !JSONNode.\u003Cget_DeepChilds\u003Ed__19.\u206E‭‭⁫⁮‍‍⁬⁮‌‎⁪⁭‌‮⁫‭‏⁯‭⁮⁭‫‮⁮‪⁫⁭‪‬⁪‭⁪‏‌⁮⁫⁮⁪‎‮((IEnumerator) enumerator1) ? -1553638199 : (num6 = -958336763);
                continue;
              case 21:
                this.\u003C\u003E2__current = D;
                this.\u003C\u003E1__state = 1;
                num2 = (int) num3 * 1217434352 ^ -1698085947;
                continue;
              case 22:
                enumerator1 = this.Childs.GetEnumerator();
                this.\u003C\u003E1__state = -3;
                num2 = (int) num3 * -711540774 ^ 190222128;
                continue;
              case 23:
                D = enumerator2.Current;
                num2 = -503075364;
                continue;
              case 24:
                deepChilds = true;
                num2 = (int) num3 * -231214314 ^ -1329211851;
                continue;
              default:
                goto label_23;
            }
          }
label_8:
          deepChilds = false;
          goto label_25;
label_23:
          deepChilds = false;
          goto label_25;
label_17:
          this.\u003C\u003E1__state = -1;
          num2 = -626484486;
          goto label_2;
        }
        __fault
        {
          this.System\u002EIDisposable\u002EDispose();
        }
label_25:
        return deepChilds;
      }
    }

    public override string ToString()
    {
      string str = nameof (JSONNode);
label_1:
      int num1 = -1441136590;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2067834042)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1070588416 ^ 621980183;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual string ToString(string aPrefix)
    {
label_1:
      int num1 = 1129248830;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1783673863)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            str = nameof (JSONNode);
            num1 = (int) num2 * 1525096879 ^ -1874551394;
            continue;
          case 2:
            num1 = (int) num2 * -984362307 ^ 397394398;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public virtual int AsInt
    {
      get
      {
        int result = 0;
label_1:
        int num1 = 1431963638;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 222783927)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              int num3 = int.TryParse(this.Value, out result) ? 2119846243 : (num3 = 1213520904);
              num1 = num3 ^ (int) num2 * -701859404;
              continue;
            case 2:
              asInt = result;
              num1 = (int) num2 * -99476497 ^ 1451041618;
              continue;
            case 4:
              num1 = (int) num2 * 528863387 ^ 1334808418;
              continue;
            case 5:
              asInt = 0;
              num1 = 1410006535;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asInt;
      }
      set
      {
label_1:
        int num1 = 1232561219;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2125251718)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Value = value.ToString();
              num1 = (int) num2 * 2003515156 ^ 1029547479;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual float AsFloat
    {
      get
      {
        float result = 0.0f;
        bool flag = float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u206E‌‫‌⁬⁯‪​‌‬⁭​‬‪‌⁯‌‎⁪‏⁫‍‏‮​‏⁪‎⁯⁯⁯‫‮⁯⁬‌‫⁮‌‬‮(), out result);
label_1:
        int num1 = -1882688277;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -471109425)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              asFloat = 0.0f;
              num1 = -129821921;
              continue;
            case 3:
              int num3 = flag ? -1908446191 : (num3 = -1833658518);
              num1 = num3 ^ (int) num2 * -1947173353;
              continue;
            case 4:
              asFloat = result;
              num1 = (int) num2 * 800634568 ^ -1589581937;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asFloat;
      }
      set => this.Value = value.ToString();
    }

    public virtual double AsDouble
    {
      get
      {
label_1:
        int num1 = -1400309411;
        double asDouble;
        bool flag;
        double result;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1879358446)) % 8U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -2048088842 ^ 516938495;
              continue;
            case 2:
              asDouble = result;
              num1 = (int) num2 * 279652920 ^ -1734335565;
              continue;
            case 4:
              asDouble = 0.0;
              num1 = -225098967;
              continue;
            case 5:
              int num3 = !flag ? -1428949878 : (num3 = -1595177780);
              num1 = num3 ^ (int) num2 * -3172228;
              continue;
            case 6:
              flag = double.TryParse(this.Value, out result);
              num1 = (int) num2 * -1609685447 ^ 54882153;
              continue;
            case 7:
              result = 0.0;
              num1 = (int) num2 * 1044493270 ^ 1684213374;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asDouble;
      }
      set => this.Value = value.ToString();
    }

    public virtual bool AsBool
    {
      get
      {
label_1:
        int num1 = 1832275217;
        bool result;
        bool asBool;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 519306124)) % 8U)
          {
            case 1:
              asBool = !JSONNode.\u206E⁬​‬‍‏‭‌‮‎⁪‮‭‬‮⁮‬⁮‏⁮⁪​⁬⁭⁫‪‎‌⁬‎‬⁮​⁪​‍‍⁭⁫⁯‮(this.Value);
              num1 = 675255371;
              continue;
            case 2:
              asBool = result;
              num1 = (int) num2 * 107527070 ^ -1184232666;
              continue;
            case 3:
              int num3 = !flag ? 535198596 : (num3 = 1839722751);
              num1 = num3 ^ (int) num2 * 178590659;
              continue;
            case 4:
              goto label_1;
            case 5:
              result = false;
              flag = bool.TryParse(this.Value, out result);
              num1 = (int) num2 * 671976981 ^ -1367683826;
              continue;
            case 6:
              num1 = (int) num2 * -1998757491 ^ 513089434;
              continue;
            case 7:
              num1 = (int) num2 * -1809096784 ^ 1728305956;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asBool;
      }
      set
      {
label_1:
        int num1 = 1143722214;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 179028920)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Value = value ? "true" : "false";
              num1 = 1098733974;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = -408466873;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -426271777)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              asArray = this as JSONArray;
              num1 = (int) num2 * -1865011338 ^ -131538382;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asArray;
      }
    }

    public virtual JSONClass AsObject
    {
      get
      {
        JSONClass asObject = this as JSONClass;
label_1:
        int num1 = -980372301;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -963082489)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * -2093774933 ^ 1491794778;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s)
    {
label_1:
      int num1 = -1908384895;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -228560951)) % 3U)
        {
          case 1:
            jsonNode = (JSONNode) new JSONData(s);
            num1 = (int) num2 * -2100854671 ^ -603119981;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public static implicit operator string(JSONNode d)
    {
label_1:
      int num1 = -666211306;
      string str1;
      while (true)
      {
        uint num2;
        string str2;
        switch ((num2 = (uint) (num1 ^ -37087607)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            if (!(d == (object) null))
            {
              num1 = (int) num2 * 154229427 ^ -1517427504;
              continue;
            }
            str2 = (string) null;
            break;
          case 2:
            num1 = (int) num2 * -1077273148 ^ -1633734687;
            continue;
          case 4:
            str2 = d.Value;
            break;
          default:
            goto label_9;
        }
        str1 = str2;
        num1 = -1880422289;
      }
label_9:
      return str1;
    }

    public static bool operator ==(JSONNode a, object b)
    {
      if (b != null)
        goto label_4;
label_1:
      int num1 = -1003178842;
label_2:
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2118711551)) % 7U)
        {
          case 1:
            num1 = (int) num2 * 42551132 ^ -827779630;
            continue;
          case 2:
            goto label_1;
          case 3:
            goto label_3;
          case 4:
            flag2 = true;
            num1 = (int) num2 * 954895506 ^ -603292228;
            continue;
          case 5:
            flag2 = (object) a == b;
            num1 = -1002685419;
            continue;
          case 6:
            int num3 = flag1 ? 958146551 : (num3 = 1324556669);
            num1 = num3 ^ (int) num2 * -1001696421;
            continue;
          default:
            goto label_10;
        }
      }
label_3:
      int num4 = a is JSONLazyCreator ? 1 : 0;
      goto label_5;
label_10:
      return flag2;
label_4:
      num4 = 0;
label_5:
      flag1 = num4 != 0;
      num1 = -645731822;
      goto label_2;
    }

    public static bool operator !=(JSONNode a, object b)
    {
label_1:
      int num1 = 1243110991;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 92138586)) % 3U)
        {
          case 1:
            flag = !(a == b);
            num1 = (int) num2 * -1508201676 ^ -1403269580;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override bool Equals(object obj) => (object) this == obj;

    public override int GetHashCode() => this.\u206C⁯‌‮⁭⁭‪‭⁮‫‭‏⁪‬‏‪‍‭⁪‭‌‮‭‌‪⁭‪‌‪‭⁬⁪‍‍⁮⁬⁮‭‪‬‮();

    internal static string Escape(string aText)
    {
      string str1 = "";
label_1:
      int num1 = 144058910;
      int num2;
      string str2;
      string str3;
      char ch1;
      char ch2;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 388849361)) % 28U)
        {
          case 0:
            num1 = (int) num3 * -544505816 ^ -124769754;
            continue;
          case 1:
label_29:
            str1 = JSONNode.\u200B‪‪⁯‮‍‪‬‮⁫‍​‮‎‫⁭⁫‪‪‏‎⁯‮‫‫‬‪‮‮‍‭‌‫‫⁯⁫‍‬‬⁫‮(str1, "\\b");
            num1 = 190603215;
            continue;
          case 2:
label_12:
            str1 = JSONNode.\u200B‪‪⁯‮‍‪‬‮⁫‍​‮‎‫⁭⁫‪‪‏‎⁯‮‫‫‬‪‮‮‍‭‌‫‫⁯⁫‍‬‬⁫‮(str1, "\\n");
            num1 = 190603215;
            continue;
          case 3:
            num1 = (int) num3 * -859904582 ^ -864891304;
            continue;
          case 4:
label_13:
            str1 = JSONNode.\u200B‪‪⁯‮‍‪‬‮⁫‍​‮‎‫⁭⁫‪‪‏‎⁯‮‫‫‬‪‮‮‍‭‌‫‫⁯⁫‍‬‬⁫‮(str1, "\\r");
            num1 = 1284761826;
            continue;
          case 5:
label_3:
            str1 = JSONNode.\u200B‪‪⁯‮‍‪‬‮⁫‍​‮‎‫⁭⁫‪‪‏‎⁯‮‫‫‬‪‮‮‍‭‌‫‫⁯⁫‍‬‬⁫‮(str1, "\\t");
            num1 = 190603215;
            continue;
          case 6:
            str1 = JSONNode.\u200B‪‪⁯‮‍‪‬‮⁫‍​‮‎‫⁭⁫‪‪‏‎⁯‮‫‫‬‪‮‮‍‭‌‫‫⁯⁫‍‬‬⁫‮(str1, "\\\\");
            num1 = 1524648617;
            continue;
          case 7:
            num1 = (int) num3 * -1182234056 ^ 1510896596;
            continue;
          case 8:
            num1 = (int) num3 * 276980328 ^ 155852559;
            continue;
          case 9:
            num1 = (int) num3 * -957827679 ^ 114531797;
            continue;
          case 10:
            ch1 = ch2;
            num1 = (int) num3 * -145322464 ^ -55751339;
            continue;
          case 11:
            num1 = (int) num3 * -14130763 ^ 1854175936;
            continue;
          case 12:
            ch2 = JSONNode.\u206D​⁮‌‫‪⁭⁮​⁭‭‏⁬‏‪‮‭⁯​‏‫⁯‏⁪⁯⁮​⁭‬⁪​‎​⁭‪⁪⁮‪‭⁬‮(str2, num2);
            num1 = 1846870787;
            continue;
          case 13:
            num2 = 0;
            num1 = (int) num3 * 1887715735 ^ -2142119282;
            continue;
          case 14:
            str1 = JSONNode.\u200B‪‪⁯‮‍‪‬‮⁫‍​‮‎‫⁭⁫‪‪‏‎⁯‮‫‫‬‪‮‮‍‭‌‫‫⁯⁫‍‬‬⁫‮(str1, "\\\"");
            num1 = 190603215;
            continue;
          case 15:
            int num4;
            num1 = num4 = ch1 == '\\' ? 909381567 : (num4 = 2009637222);
            continue;
          case 16:
label_9:
            str1 = JSONNode.\u200B‪‪⁯‮‍‪‬‮⁫‍​‮‎‫⁭⁫‪‪‏‎⁯‮‫‫‬‪‮‮‍‭‌‫‫⁯⁫‍‬‬⁫‮(str1, "\\f");
            num1 = 415449587;
            continue;
          case 17:
label_22:
            str1 = JSONNode.\u200B‪‪⁯‮‍‪‬‮⁫‍​‮‎‫⁭⁫‪‪‏‎⁯‮‫‫‬‪‮‮‍‭‌‫‫⁯⁫‍‬‬⁫‮(str1, ch2.ToString());
            num1 = 1687495220;
            continue;
          case 18:
            str3 = str1;
            num1 = (int) num3 * 1498970754 ^ 1665017266;
            continue;
          case 19:
            str2 = aText;
            num1 = (int) num3 * -1534785968 ^ -1829337156;
            continue;
          case 20:
            goto label_1;
          case 21:
            int num5;
            num1 = num5 = ch1 == '"' ? 403271579 : (num5 = 671070002);
            continue;
          case 22:
            ++num2;
            num1 = 2146773638;
            continue;
          case 23:
            int num6;
            num1 = num6 = num2 >= JSONNode.\u200B‮‮‎​⁬⁪⁪‬⁬‭‬‍⁭⁬⁪‍‪⁫‮‎‭⁮‏⁬‮‌⁭⁪⁬‍‪‭‭⁪⁭‫‪⁪⁫‮(str2) ? 1670537739 : (num6 = 537117489);
            continue;
          case 24:
            switch (ch1)
            {
              case '\b':
                goto label_29;
              case '\t':
                goto label_3;
              case '\n':
                goto label_12;
              case '\v':
                goto label_22;
              case '\f':
                goto label_9;
              case '\r':
                goto label_13;
              default:
                num1 = (int) num3 * -98775307 ^ -2093380132;
                continue;
            }
          case 25:
            num1 = (int) num3 * -1841922021 ^ 1852437480;
            continue;
          case 26:
            num1 = (int) num3 * 107115516 ^ 1446687927;
            continue;
          default:
            goto label_30;
        }
      }
label_30:
      return str3;
    }

    public static JSONNode Parse(string aJSON)
    {
label_1:
      int num1 = 402886843;
      string aKey;
      int num2;
      string aItem;
      char ch1;
      char ch2;
      bool flag1;
      JSONNode jsonNode1;
      bool flag2;
      bool flag3;
      bool flag4;
      char ch3;
      Stack<JSONNode> jsonNodeStack;
      char ch4;
      JSONNode jsonNode2;
      bool flag5;
      char ch5;
      bool flag6;
      char ch6;
      bool flag7;
      bool flag8;
      bool flag9;
      bool flag10;
      bool flag11;
      bool flag12;
      bool flag13;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 139057984)) % 156U)
        {
          case 0:
            num1 = (int) num3 * -747686808 ^ -273649766;
            continue;
          case 1:
            num1 = 1837019181;
            continue;
          case 2:
            int num4 = !flag5 ? -1334818947 : (num4 = -1246861918);
            num1 = num4 ^ (int) num3 * 859402267;
            continue;
          case 3:
            int num5;
            num1 = num5 = ch2 == '"' ? 1631654068 : (num5 = 1282584143);
            continue;
          case 4:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -386653316 ^ 1157315050;
            continue;
          case 5:
            flag13 = jsonNodeStack.Count > 0;
            num1 = (int) num3 * -1666178451 ^ 1369919286;
            continue;
          case 6:
label_108:
            ++num2;
            num1 = 633664777;
            continue;
          case 7:
          case 49:
          case 126:
          case 128:
          case 129:
label_84:
            ++num2;
            num1 = 1118215926;
            continue;
          case 8:
            string str1 = aItem;
            ch1 = JSONNode.\u206D​⁮‌‫‪⁭⁮​⁭‭‏⁬‏‪‮‭⁯​‏‫⁯‏⁪⁯⁮​⁭‬⁪​‎​⁭‪⁪⁮‪‭⁬‮(aJSON, num2);
            string str2 = ch1.ToString();
            aItem = JSONNode.\u200B‪‪⁯‮‍‪‬‮⁫‍​‮‎‫⁭⁫‪‪‏‎⁯‮‫‫‬‪‮‮‍‭‌‫‫⁯⁫‍‬‬⁫‮(str1, str2);
            num1 = (int) num3 * -551005481 ^ 1607563132;
            continue;
          case 9:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * 1079752494 ^ -498798118;
            continue;
          case 10:
            num1 = (int) num3 * -1078827354 ^ -541890321;
            continue;
          case 11:
            num1 = (int) num3 * 1631782704 ^ -1524516246;
            continue;
          case 12:
            num1 = (int) num3 * -81626782 ^ -1645327275;
            continue;
          case 13:
            int num6 = flag9 ? -305703818 : (num6 = -2080774408);
            num1 = num6 ^ (int) num3 * -1807953805;
            continue;
          case 14:
            string str3 = aItem;
            ch1 = JSONNode.\u206D​⁮‌‫‪⁭⁮​⁭‭‏⁬‏‪‮‭⁯​‏‫⁯‏⁪⁯⁮​⁭‬⁪​‎​⁭‪⁪⁮‪‭⁬‮(aJSON, num2);
            string str4 = ch1.ToString();
            aItem = JSONNode.\u200B‪‪⁯‮‍‪‬‮⁫‍​‮‎‫⁭⁫‪‪‏‎⁯‮‫‫‬‪‮‮‍‭‌‫‫⁯⁫‍‬‬⁫‮(str3, str4);
            num1 = (int) num3 * -1585391335 ^ 1909843141;
            continue;
          case 15:
            flag6 = jsonNode1 != (object) null;
            num1 = (int) num3 * 1870679915 ^ 1681054435;
            continue;
          case 16:
            int num7;
            num1 = num7 = !JSONNode.\u202C‫‭‫‏⁯​‬‎⁪⁪‌‍⁮⁪⁪‬‬⁬‌‮‭⁫⁯‮⁬‮‍⁫​‍​‌​‬⁫⁯⁬‪⁯‮(aKey, "") ? 611344700 : (num7 = 2015331538);
            continue;
          case 17:
            ch3 = JSONNode.\u206D​⁮‌‫‪⁭⁮​⁭‭‏⁬‏‪‮‭⁯​‏‫⁯‏⁪⁯⁮​⁭‬⁪​‎​⁭‪⁪⁮‪‭⁬‮(aJSON, num2);
            ch6 = ch3;
            num1 = (int) num3 * -1148957859 ^ 1442065093;
            continue;
          case 18:
            int num8 = !JSONNode.\u202C‫‭‫‏⁯​‬‎⁪⁪‌‍⁮⁪⁪‬‬⁬‌‮‭⁫⁯‮⁬‮‍⁫​‍​‌​‬⁫⁯⁬‪⁯‮(aItem, "") ? 293028332 : (num8 = 444008716);
            num1 = num8 ^ (int) num3 * 339271855;
            continue;
          case 19:
label_45:
            int num9;
            num1 = num9 = flag4 ? 727230519 : (num9 = 313275728);
            continue;
          case 20:
            num1 = (int) num3 * 1939596765 ^ 1781825742;
            continue;
          case 21:
            int num10;
            num1 = num10 = ch4 == 'f' ? 1409403517 : (num10 = 458254714);
            continue;
          case 22:
            int num11 = !flag1 ? 2084371594 : (num11 = 271132213);
            num1 = num11 ^ (int) num3 * 1217072739;
            continue;
          case 23:
            flag5 = flag4;
            num1 = (int) num3 * -1309680041 ^ -984630845;
            continue;
          case 24:
            num1 = 588089483;
            continue;
          case 25:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            num1 = 1038197623;
            continue;
          case 26:
            aKey = "";
            num1 = (int) num3 * -1969543223 ^ 1375334480;
            continue;
          case 27:
            aItem = "";
            num1 = (int) num3 * -103231463 ^ 1847356210;
            continue;
          case 28:
            int num12;
            num1 = num12 = jsonNodeStack.Count == 0 ? 2086857433 : (num12 = 147084882);
            continue;
          case 29:
            num1 = (int) num3 * 1475026580 ^ 731095664;
            continue;
          case 30:
            flag8 = flag4;
            num1 = 837968700;
            continue;
          case 31:
            string str5 = aItem;
            ch1 = JSONNode.\u206D​⁮‌‫‪⁭⁮​⁭‭‏⁬‏‪‮‭⁯​‏‫⁯‏⁪⁯⁮​⁭‬⁪​‎​⁭‪⁪⁮‪‭⁬‮(aJSON, num2);
            string str6 = ch1.ToString();
            aItem = JSONNode.\u200B‪‪⁯‮‍‪‬‮⁫‍​‮‎‫⁭⁫‪‪‏‎⁯‮‫‫‬‪‮‮‍‭‌‫‫⁯⁫‍‬‬⁫‮(str5, str6);
            num1 = (int) num3 * -753921596 ^ 1557887820;
            continue;
          case 32:
            flag12 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 758118126 ^ -232339406;
            continue;
          case 33:
            goto label_1;
          case 34:
label_137:
            flag3 = flag4;
            num1 = 1278826877;
            continue;
          case 35:
            num1 = (int) num3 * 1464004431 ^ 861677008;
            continue;
          case 36:
            flag10 = flag4;
            num1 = 1793950085;
            continue;
          case 37:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num1 = 1030275293;
            continue;
          case 38:
            num1 = (int) num3 * 525777475 ^ -213194748;
            continue;
          case 39:
            num1 = (int) num3 * -1721697079 ^ -536634180;
            continue;
          case 40:
            num1 = (int) num3 * 1521838847 ^ 923332889;
            continue;
          case 41:
            aItem = JSONNode.\u200B‪‪⁯‮‍‪‬‮⁫‍​‮‎‫⁭⁫‪‪‏‎⁯‮‫‫‬‪‮‮‍‭‌‫‫⁯⁫‍‬‬⁫‮(aItem, "\f");
            num1 = 2065170076;
            continue;
          case 42:
            num1 = (int) num3 * -855328779 ^ -271087686;
            continue;
          case 43:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -533913548 ^ 95826487;
            continue;
          case 44:
            ch4 = ch6;
            num1 = (int) num3 * -656041085 ^ -1968597646;
            continue;
          case 45:
            num1 = (int) num3 * -506482573 ^ -1038180268;
            continue;
          case 46:
            switch (ch2)
            {
              case '\t':
                goto label_45;
              case '\n':
              case '\r':
                goto label_84;
              case '\v':
              case '\f':
                goto label_66;
              default:
                num1 = (int) num3 * -1019711602 ^ 1145796647;
                continue;
            }
          case 47:
            int num13 = jsonNode1 is JSONArray ? -1564454663 : (num13 = -1063969696);
            num1 = num13 ^ (int) num3 * -1224143224;
            continue;
          case 48:
            int num14 = ch4 != 'b' ? 2017837468 : (num14 = 1883060190);
            num1 = num14 ^ (int) num3 * 2121854386;
            continue;
          case 50:
            int num15;
            num1 = num15 = ch2 != ',' ? 1144241034 : (num15 = 612874782);
            continue;
          case 51:
            jsonNode2 = jsonNode1;
            num1 = 1620002827;
            continue;
          case 52:
            switch (ch4)
            {
              case 'r':
                goto label_73;
              case 's':
                goto label_22;
              case 't':
                goto label_50;
              case 'u':
                goto label_111;
              default:
                num1 = 2096956190;
                continue;
            }
          case 53:
label_73:
            aItem = JSONNode.\u200B‪‪⁯‮‍‪‬‮⁫‍​‮‎‫⁭⁫‪‪‏‎⁯‮‫‫‬‪‮‮‍‭‌‫‫⁯⁫‍‬‬⁫‮(aItem, "\r");
            num1 = 1616616476;
            continue;
          case 54:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 1250404330 ^ 1860348004;
            continue;
          case 55:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 817814350 ^ 1804520070;
            continue;
          case 56:
            int num16;
            num1 = num16 = !JSONNode.\u202C‫‭‫‏⁯​‬‎⁪⁪‌‍⁮⁪⁪‬‬⁬‌‮‭⁫⁯‮⁬‮‍⁫​‍​‌​‬⁫⁯⁬‪⁯‮(aKey, "") ? 890702455 : (num16 = 760417646);
            continue;
          case 57:
            num1 = (int) num3 * 1713421326 ^ 1449331181;
            continue;
          case 58:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -1660468875 ^ 1472036828;
            continue;
          case 59:
            jsonNodeStack = new Stack<JSONNode>();
            jsonNode1 = (JSONNode) null;
            num2 = 0;
            aItem = "";
            num1 = (int) num3 * -1093077414 ^ -1840253788;
            continue;
          case 60:
            num1 = 495144560;
            continue;
          case 61:
label_111:
            num1 = 1355479697;
            continue;
          case 62:
            aItem = JSONNode.\u200B‪‪⁯‮‍‪‬‮⁫‍​‮‎‫⁭⁫‪‪‏‎⁯‮‫‫‬‪‮‮‍‭‌‫‫⁯⁫‍‬‬⁫‮(aItem, "\n");
            num1 = 872955709;
            continue;
          case 63:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -1675973523 ^ 1482952372;
            continue;
          case 64:
            int num17 = flag11 ? -1470668872 : (num17 = -192169407);
            num1 = num17 ^ (int) num3 * -1806397223;
            continue;
          case 65:
            int num18;
            num1 = num18 = ch2 != ' ' ? 1495088743 : (num18 = 1243641691);
            continue;
          case 66:
            num1 = (int) num3 * -1044654683 ^ 1122575008;
            continue;
          case 67:
            num1 = (int) num3 * 1181107955 ^ 1212794913;
            continue;
          case 68:
            flag4 = !flag4;
            num1 = 1112721765;
            continue;
          case 69:
            flag2 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 1248594971 ^ 690930119;
            continue;
          case 70:
            aKey = "";
            num1 = 3708955;
            continue;
          case 71:
            num1 = 1325077474;
            continue;
          case 72:
            aItem = "";
            num1 = (int) num3 * -1164486746 ^ 110436994;
            continue;
          case 73:
            aKey = "";
            num1 = 1936919905;
            continue;
          case 74:
            num1 = (int) num3 * -1368172830 ^ 842900664;
            continue;
          case 75:
            num1 = (int) num3 * 1838462857 ^ 1589351037;
            continue;
          case 76:
            goto label_90;
          case 77:
            string s = JSONNode.\u200D‌⁬‮‏⁯‌‍‎‎⁭⁫‫⁬⁬‌‏‭⁫‏‫⁯‎⁯‫‪⁯‪⁬‭⁮‭‫⁬‫‪‫⁯⁮‍‮(aJSON, num2 + 1, 4);
            string str7 = aItem;
            ch1 = (char) int.Parse(s, NumberStyles.AllowHexSpecifier);
            string str8 = ch1.ToString();
            aItem = JSONNode.\u200B‪‪⁯‮‍‪‬‮⁫‍​‮‎‫⁭⁫‪‪‏‎⁯‮‫‫‬‪‮‮‍‭‌‫‫⁯⁫‍‬‬⁫‮(str7, str8);
            num1 = (int) num3 * 232962452 ^ 1750128937;
            continue;
          case 78:
            int num19;
            num1 = num19 = flag4 ? 2146005083 : (num19 = 2108111861);
            continue;
          case 79:
            aKey = "";
            num1 = 1971834295;
            continue;
          case 80:
            int num20 = !flag2 ? -1518153031 : (num20 = -1278925327);
            num1 = num20 ^ (int) num3 * 577259210;
            continue;
          case 81:
            num1 = (int) num3 * 1405922524 ^ 1776800246;
            continue;
          case 83:
            flag9 = num2 < JSONNode.\u200B‮‮‎​⁬⁪⁪‬⁬‭‬‍⁭⁬⁪‍‪⁫‮‎‭⁮‏⁬‮‌⁭⁪⁬‍‪‭‭⁪⁭‫‪⁪⁫‮(aJSON);
            num1 = 1688441729;
            continue;
          case 84:
            int num21 = !flag8 ? 651484134 : (num21 = 620285772);
            num1 = num21 ^ (int) num3 * -1522136161;
            continue;
          case 85:
            goto label_8;
          case 86:
            switch (ch2)
            {
              case '[':
                goto label_89;
              case '\\':
                goto label_108;
              case ']':
                goto label_137;
              default:
                num1 = 563164040;
                continue;
            }
          case 87:
label_89:
            flag11 = flag4;
            num1 = 1028971996;
            continue;
          case 88:
            num1 = (int) num3 * -1627111667 ^ 119708299;
            continue;
          case 89:
            num1 = (int) num3 * -1549200296 ^ 1594790896;
            continue;
          case 90:
            aItem = JSONNode.\u200B‪‪⁯‮‍‪‬‮⁫‍​‮‎‫⁭⁫‪‪‏‎⁯‮‫‫‬‪‮‮‍‭‌‫‫⁯⁫‍‬‬⁫‮(aItem, "\b");
            num1 = 872955709;
            continue;
          case 91:
            num1 = (int) num3 * -538868015 ^ -227084075;
            continue;
          case 92:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -838579161 ^ 53232637;
            continue;
          case 93:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -195514493 ^ 699248887;
            continue;
          case 94:
            int num22 = flag6 ? 1276578082 : (num22 = 1268899851);
            num1 = num22 ^ (int) num3 * -1758265408;
            continue;
          case 95:
            num1 = 486551545;
            continue;
          case 96:
            num1 = (int) num3 * -649175345 ^ -1559542695;
            continue;
          case 97:
            string str9 = aItem;
            ch1 = JSONNode.\u206D​⁮‌‫‪⁭⁮​⁭‭‏⁬‏‪‮‭⁯​‏‫⁯‏⁪⁯⁮​⁭‬⁪​‎​⁭‪⁪⁮‪‭⁬‮(aJSON, num2);
            string str10 = ch1.ToString();
            aItem = JSONNode.\u200B‪‪⁯‮‍‪‬‮⁫‍​‮‎‫⁭⁫‪‪‏‎⁯‮‫‫‬‪‮‮‍‭‌‫‫⁯⁫‍‬‬⁫‮(str9, str10);
            num1 = (int) num3 * 284643084 ^ 439486854;
            continue;
          case 98:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 1879167722 ^ -1450516429;
            continue;
          case 99:
            num1 = (int) num3 * 1531360772 ^ 1947235055;
            continue;
          case 100:
            int num23 = ch2 != ':' ? 97924358 : (num23 = 2055472220);
            num1 = num23 ^ (int) num3 * 93991752;
            continue;
          case 101:
            int num24 = flag3 ? 438919985 : (num24 = 1213866431);
            num1 = num24 ^ (int) num3 * 2136205959;
            continue;
          case 102:
            int num25 = flag12 ? -2004711624 : (num25 = -2092785037);
            num1 = num25 ^ (int) num3 * 1563624629;
            continue;
          case 103:
            num1 = (int) num3 * 1550386949 ^ 496956247;
            continue;
          case 104:
            num1 = (int) num3 * 491712549 ^ -771439924;
            continue;
          case 105:
            flag1 = JSONNode.\u202C‫‭‫‏⁯​‬‎⁪⁪‌‍⁮⁪⁪‬‬⁬‌‮‭⁫⁯‮⁬‮‍⁫​‍​‌​‬⁫⁯⁬‪⁯‮(aKey, "");
            num1 = 277714050;
            continue;
          case 106:
            flag4 = false;
            num1 = (int) num3 * -1226686186 ^ 1606050021;
            continue;
          case 107:
            num1 = (int) num3 * -701543143 ^ -2099573679;
            continue;
          case 108:
            num1 = (int) num3 * -838364971 ^ 801306417;
            continue;
          case 109:
            num2 += 4;
            num1 = (int) num3 * -386204922 ^ -932978093;
            continue;
          case 110:
            int num26;
            num1 = num26 = ch2 == '{' ? 1749334850 : (num26 = 1284040471);
            continue;
          case 111:
            string str11 = aItem;
            ch1 = JSONNode.\u206D​⁮‌‫‪⁭⁮​⁭‭‏⁬‏‪‮‭⁯​‏‫⁯‏⁪⁯⁮​⁭‬⁪​‎​⁭‪⁪⁮‪‭⁬‮(aJSON, num2);
            string str12 = ch1.ToString();
            aItem = JSONNode.\u200B‪‪⁯‮‍‪‬‮⁫‍​‮‎‫⁭⁫‪‪‏‎⁯‮‫‫‬‪‮‮‍‭‌‫‫⁯⁫‍‬‬⁫‮(str11, str12);
            num1 = (int) num3 * -1892426164 ^ 1822223715;
            continue;
          case 112:
label_66:
            string str13 = aItem;
            ch1 = JSONNode.\u206D​⁮‌‫‪⁭⁮​⁭‭‏⁬‏‪‮‭⁯​‏‫⁯‏⁪⁯⁮​⁭‬⁪​‎​⁭‪⁪⁮‪‭⁬‮(aJSON, num2);
            string str14 = ch1.ToString();
            aItem = JSONNode.\u200B‪‪⁯‮‍‪‬‮⁫‍​‮‎‫⁭⁫‪‪‏‎⁯‮‫‫‬‪‮‮‍‭‌‫‫⁯⁫‍‬‬⁫‮(str13, str14);
            num1 = 1336627315;
            continue;
          case 113:
            num1 = (int) num3 * 1775593120 ^ -797759213;
            continue;
          case 114:
            num1 = (int) num3 * -214020139 ^ -1693044318;
            continue;
          case 115:
            int num27 = !flag13 ? 1140594416 : (num27 = 1517169574);
            num1 = num27 ^ (int) num3 * 1622828703;
            continue;
          case 116:
            int num28 = ch2 > ' ' ? -1803753573 : (num28 = -858594010);
            num1 = num28 ^ (int) num3 * 1625689261;
            continue;
          case 117:
            aKey = JSONNode.\u202E‬⁬‏‌‭‮‭⁭⁯‌‮‫‬‮⁬‫‏⁯‏⁬‎‫‫‎‪‌‮‮⁭⁯​‍‌⁮‌‫‫⁭⁭‮(aKey);
            num1 = (int) num3 * 1021870188 ^ -432906537;
            continue;
          case 118:
            int num29;
            num1 = num29 = JSONNode.\u202C‫‭‫‏⁯​‬‎⁪⁪‌‍⁮⁪⁪‬‬⁬‌‮‭⁫⁯‮⁬‮‍⁫​‍​‌​‬⁫⁯⁬‪⁯‮(aItem, "") ? 434913089 : (num29 = 495144560);
            continue;
          case 119:
            aKey = aItem;
            num1 = 897803020;
            continue;
          case 120:
            num1 = (int) num3 * 261907712 ^ -1984344259;
            continue;
          case 121:
            num1 = (int) num3 * -1950845867 ^ -1472232209;
            continue;
          case 122:
            num1 = (int) num3 * 707376080 ^ 1546855161;
            continue;
          case 123:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 134750233 ^ -1784005282;
            continue;
          case 124:
            aItem = "";
            num1 = (int) num3 * -1196298610 ^ -1507481990;
            continue;
          case 125:
            int num30;
            num1 = num30 = JSONNode.\u202C‫‭‫‏⁯​‬‎⁪⁪‌‍⁮⁪⁪‬‬⁬‌‮‭⁫⁯‮⁬‮‍⁫​‍​‌​‬⁫⁯⁬‪⁯‮(aKey, "") ? 21553223 : (num30 = 2121133915);
            continue;
          case (uint) sbyte.MaxValue:
            num1 = (int) num3 * -1422587901 ^ -192439389;
            continue;
          case 130:
            num1 = (int) num3 * -1824608108 ^ -508087572;
            continue;
          case 131:
            aKey = JSONNode.\u202E‬⁬‏‌‭‮‭⁭⁯‌‮‫‬‮⁬‫‏⁯‏⁬‎‫‫‎‪‌‮‮⁭⁯​‍‌⁮‌‫‫⁭⁭‮(aKey);
            num1 = (int) num3 * 269654740 ^ -1314554018;
            continue;
          case 132:
            aKey = JSONNode.\u202E‬⁬‏‌‭‮‭⁭⁯‌‮‫‬‮⁬‫‏⁯‏⁬‎‫‫‎‪‌‮‮⁭⁯​‍‌⁮‌‫‫⁭⁭‮(aKey);
            num1 = (int) num3 * -354195317 ^ -415867052;
            continue;
          case 133:
            num1 = (int) num3 * -148310399 ^ -1235268188;
            continue;
          case 134:
            int num31 = ch4 <= 'f' ? -1977280422 : (num31 = -825936348);
            num1 = num31 ^ (int) num3 * 1200643339;
            continue;
          case 135:
            aItem = "";
            num1 = (int) num3 * -1191492577 ^ 1484808141;
            continue;
          case 136:
            int num32 = flag7 ? -794787745 : (num32 = -1361345112);
            num1 = num32 ^ (int) num3 * 1258722099;
            continue;
          case 137:
            aItem = "";
            num1 = (int) num3 * -1454243004 ^ -1556428024;
            continue;
          case 138:
            num1 = (int) num3 * -1374262267 ^ 1682036669;
            continue;
          case 139:
            num1 = (int) num3 * 543198429 ^ 671257248;
            continue;
          case 140:
            int num33;
            num1 = num33 = ch2 > ']' ? 101972858 : (num33 = 364554592);
            continue;
          case 141:
            int num34 = !flag10 ? -2140199757 : (num34 = -732370320);
            num1 = num34 ^ (int) num3 * 1713934760;
            continue;
          case 142:
            num1 = (int) num3 * 414820529 ^ 1027968598;
            continue;
          case 143:
            num1 = (int) num3 * 291955080 ^ 724705295;
            continue;
          case 144:
            aKey = "";
            num1 = 2002914292;
            continue;
          case 145:
label_50:
            aItem = JSONNode.\u200B‪‪⁯‮‍‪‬‮⁫‍​‮‎‫⁭⁫‪‪‏‎⁯‮‫‫‬‪‮‮‍‭‌‫‫⁯⁫‍‬‬⁫‮(aItem, "\t");
            num1 = 872955709;
            continue;
          case 146:
            flag7 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -1858209111 ^ 1785633614;
            continue;
          case 147:
            ch2 = ch5;
            int num35 = ch2 <= ',' ? 462430970 : (num35 = 453360754);
            num1 = num35 ^ (int) num3 * -794020398;
            continue;
          case 148:
label_22:
            aItem = JSONNode.\u200B‪‪⁯‮‍‪‬‮⁫‍​‮‎‫⁭⁫‪‪‏‎⁯‮‫‫‬‪‮‮‍‭‌‫‫⁯⁫‍‬‬⁫‮(aItem, ch3.ToString());
            num1 = 1598121968;
            continue;
          case 149:
            int num36 = !flag4 ? 1464960983 : (num36 = 170196647);
            num1 = num36 ^ (int) num3 * -1017602006;
            continue;
          case 150:
            jsonNodeStack.Pop();
            num1 = 2060066066;
            continue;
          case 151:
            int num37 = jsonNode1 != (object) null ? -74468336 : (num37 = -263052068);
            num1 = num37 ^ (int) num3 * 555218023;
            continue;
          case 152:
            string str15 = aItem;
            ch1 = JSONNode.\u206D​⁮‌‫‪⁭⁮​⁭‭‏⁬‏‪‮‭⁯​‏‫⁯‏⁪⁯⁮​⁭‬⁪​‎​⁭‪⁪⁮‪‭⁬‮(aJSON, num2);
            string str16 = ch1.ToString();
            aItem = JSONNode.\u200B‪‪⁯‮‍‪‬‮⁫‍​‮‎‫⁭⁫‪‪‏‎⁯‮‫‫‬‪‮‮‍‭‌‫‫⁯⁫‍‬‬⁫‮(str15, str16);
            num1 = (int) num3 * 173776084 ^ 1462709594;
            continue;
          case 153:
            ch5 = JSONNode.\u206D​⁮‌‫‪⁭⁮​⁭‭‏⁬‏‪‮‭⁯​‏‫⁯‏⁪⁯⁮​⁭‬⁪​‎​⁭‪⁪⁮‪‭⁬‮(aJSON, num2);
            num1 = 303741623;
            continue;
          case 154:
            int num38;
            num1 = num38 = ch4 == 'n' ? 406800222 : (num38 = 1902328213);
            continue;
          case 155:
            int num39;
            num1 = num39 = ch2 != '}' ? 2109617137 : (num39 = 1218698782);
            continue;
          default:
            goto label_156;
        }
      }
label_8:
      throw JSONNode.\u202D‎⁮​‭⁪⁮‫⁫‮⁪‭‭‍⁯​⁮⁬‮‎⁪‭⁯⁪‭‌‌⁮‪⁯⁯‮‎‮‭‭⁪⁪⁯‮("JSON Parse: Too many closing brackets");
label_90:
      throw JSONNode.\u202D‎⁮​‭⁪⁮‫⁫‮⁪‭‭‍⁯​⁮⁬‮‎⁪‭⁯⁪‭‌‌⁮‪⁯⁯‮‎‮‭‭⁪⁪⁯‮("JSON Parse: Quotation marks seems to be messed up.");
label_156:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
label_1:
      int num1 = 845198210;
      BinaryWriter aWriter;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1770486059)) % 5U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * 218876099 ^ 657078292;
            continue;
          case 2:
            this.Serialize(aWriter);
            num1 = (int) num2 * -1239779693 ^ -491371418;
            continue;
          case 3:
            aWriter = JSONNode.\u200E⁭⁮‪⁪‎‭‍⁫‪‍​‭‪‪⁭‬⁬‫‮‭‎​​⁪⁯⁭⁯⁫⁯‏⁭⁮​⁭‎‎‬‭‮‮(aData);
            num1 = (int) num2 * -757655951 ^ 684205008;
            continue;
          case 4:
            goto label_1;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u202D‎⁮​‭⁪⁮‫⁫‮⁪‭‭‍⁯​⁮⁬‮‎⁪‭⁯⁪‭‌‌⁮‪⁯⁯‮‎‮‭‭⁪⁪⁯‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u202D‎⁮​‭⁪⁮‫⁫‮⁪‭‭‍⁯​⁮⁬‮‎⁪‭⁯⁪‭‌‌⁮‪⁯⁯‮‎‮‭‭⁪⁪⁯‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u202D‎⁮​‭⁪⁮‫⁫‮⁪‭‭‍⁯​⁮⁬‮‎⁪‭⁯⁪‭‌‌⁮‪⁯⁯‮‎‮‭‭⁪⁪⁯‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
      JSONNode.\u200E‍‮⁭‪‭⁪​‍⁭‏⁬⁪⁬⁯‏⁮‮‭‍‏⁪⁬‫‮⁮‍‌‫‭‌⁫⁯⁬‫​‍⁪⁫‮(JSONNode.\u206B‏⁯‭⁯‍⁮‎‪⁮‮⁯⁬‬‎⁬⁪‮⁭‏⁪‍‪‪‎‎‮‌‭​‮‌⁫⁪⁬‪‏⁯‎‫‮((FileSystemInfo) JSONNode.\u200B⁮​‏‬‎‬‏‎‮⁬‮⁯‍‫⁮‏‎‭‎‏​‮‪⁬⁯⁯​‍​‬‍​‪‬‌⁭‏⁫‏‮(JSONNode.\u202A‌‫‭⁫⁮​‮‮‍‭‫⁬⁫‍‭⁬​‭⁪⁮‫‍⁬‮‭‍‬‭‍‍⁫‭‭‏⁮⁬‪​‏‮(aFileName))));
      FileStream aData = JSONNode.\u206E⁭⁬‭‪⁮‫‬‏​‏‭⁯⁯⁮⁪‬​⁫‪‭⁯‏​‪⁮‍‭‬⁪‎‪‫⁯⁪⁮‌⁭⁪‮‮(aFileName);
      try
      {
label_2:
        int num1 = 837497776;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1382226455)) % 3U)
          {
            case 0:
              goto label_2;
            case 1:
              goto label_9;
            case 2:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * -627093282 ^ -180017295;
              continue;
            default:
              goto label_5;
          }
        }
label_9:
        return;
label_5:;
      }
      finally
      {
        if (aData != null)
        {
label_7:
          int num3 = 1690063824;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 1382226455)) % 4U)
            {
              case 0:
                goto label_7;
              case 2:
                num3 = (int) num4 * 990482737 ^ 998929180;
                continue;
              case 3:
                JSONNode.\u206C‎‏​⁪‎⁯‪‫⁯​‬⁯‌⁭‫‬‌⁫‪​‫⁭‬‪​​‎‫⁬‮‭‍‎‪‫‬⁪⁬‌‮((IDisposable) aData);
                num3 = (int) num4 * -1405077524 ^ -946083651;
                continue;
              default:
                goto label_12;
            }
          }
        }
label_12:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u200E‮⁫⁭‪​‮⁫‬⁬⁭⁭⁪​⁮‬⁫‌‪⁪‪⁯‮‫‌​⁭‎‬‪​⁬⁪⁪​‍⁫⁭‪‬‮();
      try
      {
        this.SaveToStream((Stream) aData);
label_2:
        int num1 = -198473023;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2133499449)) % 3U)
          {
            case 0:
              goto label_2;
            case 2:
              num1 = (int) num2 * -1103795505 ^ -1659009359;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        JSONNode.\u200B⁮⁬⁭⁯⁮⁯⁫⁯‭‎‪‫⁪‌‎‮‍‭⁮‍⁪​⁫‪⁪​‪⁪⁪‫⁯‎‬‮‭‭⁮‪⁪‮((Stream) aData, 0L);
        return JSONNode.\u200F‮⁭‫⁯‏⁫⁬⁭‍‫⁯‍‏⁭‎‌⁯⁭‬⁯⁫‭‌⁭⁬⁭⁮⁬⁭‫⁬‏‍​‪⁮‍‬⁪‮(JSONNode.\u200C⁪‌‌​⁫‏‎​​‏​‏⁭‏⁫​‮‪‌⁫‬⁪‮‭⁭⁮‬‎⁯​‌⁭‎‫‎⁪‏⁭‌‮(aData));
      }
      finally
      {
        if (aData != null)
        {
label_7:
          int num3 = -1288871722;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -2133499449)) % 4U)
            {
              case 0:
                goto label_7;
              case 1:
                JSONNode.\u206C‎‏​⁪‎⁯‪‫⁯​‬⁯‌⁭‫‬‌⁫‪​‫⁭‬‪​​‎‫⁬‮‭‍‎‪‫‬⁪⁬‌‮((IDisposable) aData);
                num3 = (int) num4 * 725872600 ^ 1818750573;
                continue;
              case 2:
                num3 = (int) num4 * 1346641379 ^ 406267614;
                continue;
              default:
                goto label_11;
            }
          }
        }
label_11:;
      }
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
      JSONBinaryTag jsonBinaryTag1 = (JSONBinaryTag) JSONNode.\u202A⁫⁫‬‭‫​‏⁯​‎‏‪⁬⁮⁪‬⁪⁫⁯⁬⁫⁬‍⁭‍⁯‌​⁬⁭‬⁯⁮‌‫​‏⁭‍‮(aReader);
label_1:
      int num1 = -638888523;
      int num2;
      int num3;
      JSONNode jsonNode;
      int num4;
      JSONClass jsonClass;
      bool flag;
      JSONArray jsonArray;
      JSONBinaryTag jsonBinaryTag2;
      int num5;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ -237581804)) % 35U)
        {
          case 0:
            num1 = (int) num6 * 1442151387 ^ 516361546;
            continue;
          case 1:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            ++num2;
            num1 = -1538739692;
            continue;
          case 2:
            num3 = JSONNode.\u200F​​‍‍‮‬⁫‪‫‬⁭⁯‍⁪‏⁬‫‍‬⁯‍​⁮‭⁫⁭​‮⁫‫‍‏‏⁭‎⁪‭‪⁯‮(aReader);
            num1 = (int) num6 * -1774469127 ^ 1300768411;
            continue;
          case 3:
            num1 = (int) num6 * -2004700703 ^ -1043909215;
            continue;
          case 4:
            num1 = -1816064428;
            continue;
          case 5:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206F⁬⁮⁮‪‮‌‏‍‏⁬‪⁫⁪⁮‌‫‭‌‎⁫‭⁯​‏‮⁫‪⁮‭​‏⁮‫⁫‪‫‭‌‮‮(aReader));
            num1 = (int) num6 * 222608751 ^ 1345926863;
            continue;
          case 6:
            num1 = (int) num6 * -1374098012 ^ -966792024;
            continue;
          case 7:
label_29:
            num1 = -629812745;
            continue;
          case 8:
label_5:
            num4 = JSONNode.\u200F​​‍‍‮‬⁫‪‫‬⁭⁯‍⁪‏⁬‫‍‬⁯‍​⁮‭⁫⁭​‮⁫‫‍‏‏⁭‎⁪‭‪⁯‮(aReader);
            jsonClass = new JSONClass();
            num1 = -2104410687;
            continue;
          case 9:
label_20:
            num1 = -727254123;
            continue;
          case 10:
            num1 = (int) num6 * 2035102102 ^ -1185547259;
            continue;
          case 11:
            switch (jsonBinaryTag2)
            {
              case JSONBinaryTag.Array:
                goto label_12;
              case JSONBinaryTag.Class:
                goto label_5;
              case JSONBinaryTag.Value:
                goto label_24;
              case JSONBinaryTag.IntValue:
                goto label_29;
              case JSONBinaryTag.DoubleValue:
                goto label_20;
              case JSONBinaryTag.BoolValue:
                goto label_4;
              case JSONBinaryTag.FloatValue:
                goto label_36;
              default:
                num1 = (int) num6 * 618094928 ^ 996976598;
                continue;
            }
          case 12:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202B⁭⁮⁮‫‮⁮⁮‫​⁮⁯⁯‏⁪‏⁮⁯⁮‪‍⁬‏​⁯⁬⁯‏⁭‮‮​‮‌‮‭⁬​​⁬‮(aReader));
            num1 = (int) num6 * -647600894 ^ 1845864782;
            continue;
          case 13:
            int num7;
            num1 = num7 = num2 < num3 ? -184289538 : (num7 = -1817412097);
            continue;
          case 14:
            flag = num5 < num4;
            num1 = -932984036;
            continue;
          case 15:
            goto label_1;
          case 16:
            num5 = 0;
            num1 = (int) num6 * 270366927 ^ -1852051263;
            continue;
          case 17:
            goto label_14;
          case 18:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206D⁭‪⁯⁫⁬⁪⁫‍‭⁯‭⁯‎‌⁪‭‬‍⁮‌‬‭​⁭⁬⁬⁮⁫‏‫‌⁬‏‪⁯‎‮‍‏‮(aReader));
            num1 = (int) num6 * -512465835 ^ 855201147;
            continue;
          case 20:
label_36:
            num1 = -131572930;
            continue;
          case 21:
            jsonBinaryTag2 = jsonBinaryTag1;
            num1 = (int) num6 * -2140291654 ^ -1847306432;
            continue;
          case 22:
            num1 = (int) num6 * 1316809864 ^ 541165660;
            continue;
          case 23:
            jsonArray = new JSONArray();
            num2 = 0;
            num1 = (int) num6 * 808329995 ^ 1246235679;
            continue;
          case 24:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * 798518796 ^ -913507219;
            continue;
          case 25:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200F​​‍‍‮‬⁫‪‫‬⁭⁯‍⁪‏⁬‫‍‬⁯‍​⁮‭⁫⁭​‮⁫‫‍‏‏⁭‎⁪‭‪⁯‮(aReader));
            num1 = (int) num6 * -1063327432 ^ -777752239;
            continue;
          case 26:
            string aKey = JSONNode.\u206D⁭‪⁯⁫⁬⁪⁫‍‭⁯‭⁯‎‌⁪‭‬‍⁮‌‬‭​⁭⁬⁬⁮⁫‏‫‌⁬‏‪⁯‎‮‍‏‮(aReader);
            JSONNode aItem = JSONNode.Deserialize(aReader);
            jsonClass.Add(aKey, aItem);
            num1 = (int) num6 * -1904825776 ^ -744592227;
            continue;
          case 27:
            ++num5;
            num1 = (int) num6 * -323854848 ^ -499187203;
            continue;
          case 28:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * -985934911 ^ 1087125814;
            continue;
          case 29:
label_4:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206E‪⁬‪‎‭⁭‍⁬‮​⁪‌​‮⁬⁮⁫‍⁮⁪‮⁯⁫⁮‪⁯​‏⁫​⁯⁯‮‭⁫⁪​‏‭‮(aReader));
            num1 = -1483880967;
            continue;
          case 30:
            num1 = (int) num6 * -870571737 ^ -103484737;
            continue;
          case 31:
label_24:
            num1 = -1668682731;
            continue;
          case 32:
            int num8 = !flag ? 232254083 : (num8 = 1677460100);
            num1 = num8 ^ (int) num6 * 981804716;
            continue;
          case 33:
            num1 = (int) num6 * -1341557708 ^ -2140356363;
            continue;
          case 34:
label_12:
            num1 = -617643915;
            continue;
          default:
            goto label_37;
        }
      }
label_14:
      throw JSONNode.\u202D‎⁮​‭⁪⁮‫⁫‮⁪‭‭‍⁯​⁮⁬‮‎⁪‭⁯⁪‭‌‌⁮‪⁯⁯‮‎‮‭‭⁪⁪⁯‮(JSONNode.\u200B‪‪⁯‮‍‪‬‮⁫‍​‮‎‫⁭⁫‪‪‏‎⁯‮‫‫‬‪‮‮‍‭‌‫‫⁯⁫‍‬‬⁫‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag1.ToString()));
label_37:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u202D‎⁮​‭⁪⁮‫⁫‮⁪‭‭‍⁯​⁮⁬‮‎⁪‭⁯⁪‭‌‌⁮‪⁯⁯‮‎‮‭‭⁪⁪⁯‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u202D‎⁮​‭⁪⁮‫⁫‮⁪‭‭‍⁯​⁮⁬‮‎⁪‭⁯⁪‭‌‌⁮‪⁯⁯‮‎‮‭‭⁪⁪⁯‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u202D‎⁮​‭⁪⁮‫⁫‮⁪‭‭‍⁯​⁮⁬‮‎⁪‭⁯⁪‭‌‌⁮‪⁯⁯‮‎‮‭‭⁪⁪⁯‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u206E‮‎⁬⁮⁫⁭‭⁯‌‏⁫‌‌‬‎‍​​⁫⁫‍⁬‌⁬⁪‫‍​⁬⁯‍⁮‪‏‏‭‍‪‭‮(aData);
      try
      {
        return JSONNode.Deserialize(aReader);
      }
      finally
      {
        if (aReader != null)
        {
label_3:
          int num1 = -624801767;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ -902389246)) % 3U)
            {
              case 0:
                goto label_3;
              case 2:
                JSONNode.\u206C‎‏​⁪‎⁯‪‫⁯​‬⁯‌⁭‫‬‌⁫‪​‫⁭‬‪​​‎‫⁬‮‭‍‎‪‫‬⁪⁬‌‮((IDisposable) aReader);
                num1 = (int) num2 * 1929720987 ^ 1804398029;
                continue;
              default:
                goto label_6;
            }
          }
        }
label_6:;
      }
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u206C⁯‎‍‭⁪⁫‭‪‬⁬⁯‬​⁪‮‮⁪⁭⁮⁪‍‎⁫‬‍⁯‭‭‪⁮‭‭⁬⁮‌⁪​⁬‮‮(aFileName);
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = 144754417;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 159248607)) % 3U)
          {
            case 1:
              jsonNode = JSONNode.LoadFromStream((Stream) aData);
              num1 = (int) num2 * -861401858 ^ 1239479433;
              continue;
            case 2:
              goto label_2;
            default:
              goto label_11;
          }
        }
      }
      finally
      {
        if (aData != null)
        {
label_6:
          int num3 = 493378530;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 159248607)) % 4U)
            {
              case 0:
                goto label_6;
              case 1:
                JSONNode.\u206C‎‏​⁪‎⁯‪‫⁯​‬⁯‌⁭‫‬‌⁫‪​‫⁭‬‪​​‎‫⁬‮‭‍‎‪‫‬⁪⁬‌‮((IDisposable) aData);
                num3 = (int) num4 * -585210764 ^ 1211411444;
                continue;
              case 3:
                num3 = (int) num4 * 964806737 ^ 1884549842;
                continue;
              default:
                goto label_10;
            }
          }
        }
label_10:;
      }
label_11:
      return jsonNode;
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
label_1:
      int num1 = 48469960;
      MemoryStream aData;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1018695272)) % 5U)
        {
          case 0:
            num1 = (int) num2 * 807816702 ^ -1662427002;
            continue;
          case 1:
            aData = JSONNode.\u200F‏⁭‌‮⁭⁬‌⁭‮⁬​‬‬‏⁯‫‬‍⁪‍⁬‎‭⁭⁪⁫‭⁫‮⁫⁬‭‪‏⁫‪‭‪⁪‮(JSONNode.\u206B‭‎‭‮⁭‎‎⁪‎‮⁪⁯⁫⁬⁯⁭⁭‏​‮‍‌‎⁯‮⁭‬‭‏⁮‬‪⁬​⁯‏⁪⁬‮(aBase64));
            JSONNode.\u200B⁮⁬⁭⁯⁮⁯⁫⁯‭‎‪‫⁪‌‎‮‍‭⁮‍⁪​⁫‪⁪​‪⁪⁪‫⁯‎‬‮‭‭⁮‪⁪‮((Stream) aData, 0L);
            num1 = (int) num2 * -1408805074 ^ 2086756980;
            continue;
          case 3:
            goto label_1;
          case 4:
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * 105446543 ^ 1662094001;
            continue;
          default:
            goto label_6;
        }
      }
label_6:
      return jsonNode;
    }

    public JSONNode()
    {
label_1:
      int num1 = 1600635076;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1552164454)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 106427998 ^ -720252401;
            continue;
          case 2:
            goto label_3;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static CultureInfo \u206E‌‫‌⁬⁯‪​‌‬⁭​‬‪‌⁯‌‎⁪‏⁫‍‏‮​‏⁪‎⁯⁯⁯‫‮⁯⁬‌‫⁮‌‬‮() => CultureInfo.InvariantCulture;

    static bool \u206E⁬​‬‍‏‭‌‮‎⁪‮‭‬‮⁮‬⁮‏⁮⁪​⁬⁭⁫‪‎‌⁬‎‬⁮​⁪​‍‍⁭⁫⁯‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u206C⁯‌‮⁭⁭‪‭⁮‫‭‏⁪‬‏‪‍‭⁪‭‌‮‭‌‪⁭‪‌‪‭⁬⁪‍‍⁮⁬⁮‭‪‬‮() => base.GetHashCode();

    static char \u206D​⁮‌‫‪⁭⁮​⁭‭‏⁬‏‪‮‭⁯​‏‫⁯‏⁪⁯⁮​⁭‬⁪​‎​⁭‪⁪⁮‪‭⁬‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u200B‪‪⁯‮‍‪‬‮⁫‍​‮‎‫⁭⁫‪‪‏‎⁯‮‫‫‬‪‮‮‍‭‌‫‫⁯⁫‍‬‬⁫‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u200B‮‮‎​⁬⁪⁪‬⁬‭‬‍⁭⁬⁪‍‪⁫‮‎‭⁮‏⁬‮‌⁭⁪⁬‍‪‭‭⁪⁭‫‪⁪⁫‮([In] string obj0) => obj0.Length;

    static string \u202E‬⁬‏‌‭‮‭⁭⁯‌‮‫‬‮⁬‫‏⁯‏⁬‎‫‫‎‪‌‮‮⁭⁯​‍‌⁮‌‫‫⁭⁭‮([In] string obj0) => obj0.Trim();

    static bool \u202C‫‭‫‏⁯​‬‎⁪⁪‌‍⁮⁪⁪‬‬⁬‌‮‭⁫⁯‮⁬‮‍⁫​‍​‌​‬⁫⁯⁬‪⁯‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u202D‎⁮​‭⁪⁮‫⁫‮⁪‭‭‍⁯​⁮⁬‮‎⁪‭⁯⁪‭‌‌⁮‪⁯⁯‮‎‮‭‭⁪⁪⁯‮([In] string obj0) => new Exception(obj0);

    static string \u200D‌⁬‮‏⁯‌‍‎‎⁭⁫‫⁬⁬‌‏‭⁫‏‫⁯‎⁯‫‪⁯‪⁬‭⁮‭‫⁬‫‪‫⁯⁮‍‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u200E⁭⁮‪⁪‎‭‍⁫‪‍​‭‪‪⁭‬⁬‫‮‭‎​​⁪⁯⁭⁯⁫⁯‏⁭⁮​⁭‎‎‬‭‮‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u202A‌‫‭⁫⁮​‮‮‍‭‫⁬⁫‍‭⁬​‭⁪⁮‫‍⁬‮‭‍‬‭‍‍⁫‭‭‏⁮⁬‪​‏‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u200B⁮​‏‬‎‬‏‎‮⁬‮⁯‍‫⁮‏‎‭‎‏​‮‪⁬⁯⁯​‍​‬‍​‪‬‌⁭‏⁫‏‮([In] FileInfo obj0) => obj0.Directory;

    static string \u206B‏⁯‭⁯‍⁮‎‪⁮‮⁯⁬‬‎⁬⁪‮⁭‏⁪‍‪‪‎‎‮‌‭​‮‌⁫⁪⁬‪‏⁯‎‫‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u200E‍‮⁭‪‭⁪​‍⁭‏⁬⁪⁬⁯‏⁮‮‭‍‏⁪⁬‫‮⁮‍‌‫‭‌⁫⁯⁬‫​‍⁪⁫‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u206E⁭⁬‭‪⁮‫‬‏​‏‭⁯⁯⁮⁪‬​⁫‪‭⁯‏​‪⁮‍‭‬⁪‎‪‫⁯⁪⁮‌⁭⁪‮‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u206C‎‏​⁪‎⁯‪‫⁯​‬⁯‌⁭‫‬‌⁫‪​‫⁭‬‪​​‎‫⁬‮‭‍‎‪‫‬⁪⁬‌‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u200E‮⁫⁭‪​‮⁫‬⁬⁭⁭⁪​⁮‬⁫‌‪⁪‪⁯‮‫‌​⁭‎‬‪​⁬⁪⁪​‍⁫⁭‪‬‮() => new MemoryStream();

    static void \u200B⁮⁬⁭⁯⁮⁯⁫⁯‭‎‪‫⁪‌‎‮‍‭⁮‍⁪​⁫‪⁪​‪⁪⁪‫⁯‎‬‮‭‭⁮‪⁪‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u200C⁪‌‌​⁫‏‎​​‏​‏⁭‏⁫​‮‪‌⁫‬⁪‮‭⁭⁮‬‎⁯​‌⁭‎‫‎⁪‏⁭‌‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u200F‮⁭‫⁯‏⁫⁬⁭‍‫⁯‍‏⁭‎‌⁯⁭‬⁯⁫‭‌⁭⁬⁭⁮⁬⁭‫⁬‏‍​‪⁮‍‬⁪‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u202A⁫⁫‬‭‫​‏⁯​‎‏‪⁬⁮⁪‬⁪⁫⁯⁬⁫⁬‍⁭‍⁯‌​⁬⁭‬⁯⁮‌‫​‏⁭‍‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u200F​​‍‍‮‬⁫‪‫‬⁭⁯‍⁪‏⁬‫‍‬⁯‍​⁮‭⁫⁭​‮⁫‫‍‏‏⁭‎⁪‭‪⁯‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u206D⁭‪⁯⁫⁬⁪⁫‍‭⁯‭⁯‎‌⁪‭‬‍⁮‌‬‭​⁭⁬⁬⁮⁫‏‫‌⁬‏‪⁯‎‮‍‏‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u202B⁭⁮⁮‫‮⁮⁮‫​⁮⁯⁯‏⁪‏⁮⁯⁮‪‍⁬‏​⁯⁬⁯‏⁭‮‮​‮‌‮‭⁬​​⁬‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u206E‪⁬‪‎‭⁭‍⁬‮​⁪‌​‮⁬⁮⁫‍⁮⁪‮⁯⁫⁮‪⁯​‏⁫​⁯⁯‮‭⁫⁪​‏‭‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u206F⁬⁮⁮‪‮‌‏‍‏⁬‪⁫⁪⁮‌‫‭‌‎⁫‭⁯​‏‮⁫‪⁮‭​‏⁮‫⁫‪‫‭‌‮‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u206E‮‎⁬⁮⁫⁭‭⁯‌‏⁫‌‌‬‎‍​​⁫⁫‍⁬‌⁬⁪‫‍​⁬⁯‍⁮‪‏‏‭‍‪‭‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u206C⁯‎‍‭⁪⁫‭‪‬⁬⁯‬​⁪‮‮⁪⁭⁮⁪‍‎⁫‬‍⁯‭‭‪⁮‭‭⁬⁮‌⁪​⁬‮‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u206B‭‎‭‮⁭‎‎⁪‎‮⁪⁯⁫⁬⁯⁭⁭‏​‮‍‌‎⁯‮⁭‬‭‏⁮‬‪⁬​⁯‏⁪⁬‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u200F‏⁭‌‮⁭⁬‌⁭‮⁬​‬‬‏⁯‫‬‍⁪‍⁬‎‭⁭⁪⁫‭⁫‮⁫⁬‭‪‏⁫‪‭‪⁪‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
