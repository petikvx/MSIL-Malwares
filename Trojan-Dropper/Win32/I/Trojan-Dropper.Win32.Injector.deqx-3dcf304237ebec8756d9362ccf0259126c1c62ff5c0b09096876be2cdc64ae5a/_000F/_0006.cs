// Decompiled with JetBrains decompiler
// Type: .
// Assembly: file, Version=11.0.0.0, Culture=neutral, PublicKeyToken=71f2cf7c2509b8fe
// MVID: 1F473243-1123-401F-8099-7648B7C34C41
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan-Dropper.Win32.Injector.deqx-3dcf304237ebec8756d9362ccf0259126c1c62ff5c0b09096876be2cdc64ae5a.exe

using \u0001;
using \u0008;
using \u000F;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.ApplicationServices;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.VisualBasic.MyServices.Internal;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.ComponentModel.Design;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security;

namespace \u000F
{
  [GeneratedCode("MyTemplate", "8.0.0.0")]
  [HideModuleName]
  [StandardModule]
  internal sealed class \u0006
  {
    [NonSerialized]
    internal static \u0001.\u0001 \u0001;
    private static readonly \u0006.\u0002<\u0005> \u0001;
    private static readonly \u0006.\u0002<\u0004> \u0001;
    private static readonly \u0006.\u0002<User> \u0001;
    private static readonly \u0006.\u0002<\u0006.\u0001> \u0001;

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode, PreserveSig = false)]
    [return: MarshalAs(UnmanagedType.U1)]
    private static extern bool \u0006([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.U1)] bool _param1, [MarshalAs(UnmanagedType.U1)] ref bool _param2);

    static \u0006()
    {
      bool flag;
      Assembly assembly;
      try
      {
        // ISSUE: type reference
        \u0003.\u0002(\u0087\u0005.\u0092\u0004(__typeref (\u0006)));
        flag = false;
        assembly = \u009F\u0005.\u008F\u0006();
        \u0006.\u0006(assembly.Location, true, ref flag);
        if (!flag || !\u0089\u0004.\u007E\u0097\u0002((object) \u0019\u0004.\u007E\u0084\u0006((object) assembly), \u0006.\u0001(8144)))
          throw new SecurityException(\u0006.\u0001(8169));
        \u0006.\u0001 = new \u0006.\u0002<\u0005>();
        \u0006.\u0001 = new \u0006.\u0002<\u0004>();
        \u0006.\u0001 = new \u0006.\u0002<User>();
        \u0006.\u0001 = new \u0006.\u0002<\u0006.\u0001>();
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<bool> o1 = (ValueType) flag;
        Assembly o2 = assembly;
        \u0004.\u0002(ex, (object) o1, (object) o2);
        throw;
      }
    }

    [HelpKeyword("My.Computer")]
    internal static \u0005 Computer
    {
      [DebuggerHidden] get
      {
        try
        {
          return \u0006.\u0001.GetInstance;
        }
        catch (Exception ex)
        {
          \u0005 obj;
          \u0005 o1 = obj;
          \u0004.\u0002(ex, (object) o1);
          throw;
        }
      }
    }

    [HelpKeyword("My.Application")]
    internal static \u0004 Application
    {
      [DebuggerHidden] get
      {
        try
        {
          return \u0006.\u0001.GetInstance;
        }
        catch (Exception ex)
        {
          \u0004 obj;
          \u0004 o1 = obj;
          \u0004.\u0002(ex, (object) o1);
          throw;
        }
      }
    }

    [HelpKeyword("My.User")]
    internal static User User
    {
      [DebuggerHidden] get
      {
        try
        {
          return \u0006.\u0001.GetInstance;
        }
        catch (Exception ex)
        {
          User user;
          User o1 = user;
          \u0004.\u0002(ex, (object) o1);
          throw;
        }
      }
    }

    [HelpKeyword("My.WebServices")]
    internal static \u0006.\u0001 WebServices
    {
      [DebuggerHidden] get
      {
        try
        {
          return \u0006.\u0001.GetInstance;
        }
        catch (Exception ex)
        {
          \u0006.\u0001 obj;
          \u0006.\u0001 o1 = obj;
          \u0004.\u0002(ex, (object) o1);
          throw;
        }
      }
    }

    [MyGroupCollection("System.Web.Services.Protocols.SoapHttpClientProtocol", "Create__Instance__", "Dispose__Instance__", "")]
    [EditorBrowsable(EditorBrowsableState.Never)]
    internal sealed class \u0001
    {
      [NonSerialized]
      internal static \u0001.\u0001 \u0001;

      static \u0001()
      {
        // ISSUE: type reference
        \u0003.\u0002(\u0087\u0005.\u0092\u0004(__typeref (\u0006.\u0001)));
        bool flag = false;
        Assembly assembly = \u009F\u0005.\u008F\u0006();
        \u0006.\u0001.\u0008(assembly.Location, true, ref flag);
        if (!flag || !\u0089\u0004.\u007E\u0097\u0002((object) \u0019\u0004.\u007E\u0084\u0006((object) assembly), \u0006.\u0001.\u0001(8149)))
          throw new SecurityException(\u0006.\u0001.\u0001(8174));
      }

      [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode, PreserveSig = false)]
      [return: MarshalAs(UnmanagedType.U1)]
      private static extern bool \u0008([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.U1)] bool _param1, [MarshalAs(UnmanagedType.U1)] ref bool _param2);

      [DebuggerHidden]
      [EditorBrowsable(EditorBrowsableState.Never)]
      public override bool Equals(object o)
      {
        try
        {
          return \u001A\u0004.\u007F\u0002((object) this, \u0081\u0004.\u0080\u0008(o));
        }
        catch (Exception ex)
        {
          bool flag;
          // ISSUE: variable of a boxed type
          __Boxed<bool> o1 = (ValueType) flag;
          object o3 = o;
          \u0004.\u0002(ex, (object) o1, (object) this, o3);
          throw;
        }
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      [DebuggerHidden]
      public override int GetHashCode()
      {
        try
        {
          return \u001B\u0004.\u0081\u0002((object) this);
        }
        catch (Exception ex)
        {
          int num;
          // ISSUE: variable of a boxed type
          __Boxed<int> o1 = (ValueType) num;
          \u0004.\u0002(ex, (object) o1, (object) this);
          throw;
        }
      }

      [DebuggerHidden]
      [EditorBrowsable(EditorBrowsableState.Never)]
      internal Type \u0002()
      {
        try
        {
          // ISSUE: type reference
          return \u0087\u0005.\u0092\u0004(__typeref (\u0006.\u0001));
        }
        catch (Exception ex)
        {
          Type type;
          Type o1 = type;
          \u0004.\u0002(ex, (object) o1, (object) this);
          throw;
        }
      }

      [DebuggerHidden]
      [EditorBrowsable(EditorBrowsableState.Never)]
      public override string ToString()
      {
        try
        {
          return \u0019\u0004.\u001F\u0002((object) this);
        }
        catch (Exception ex)
        {
          string str;
          string o1 = str;
          \u0004.\u0002(ex, (object) o1, (object) this);
          throw;
        }
      }

      [DebuggerHidden]
      private static \u0001 \u0002<\u0001>(\u0001 instance) where \u0001 : new()
      {
        try
        {
          return (object) instance == null ? new \u0001() : instance;
        }
        catch (Exception ex)
        {
          \u0001 obj;
          // ISSUE: variable of a boxed type
          __Boxed<\u0001> o1 = (object) obj;
          // ISSUE: variable of a boxed type
          __Boxed<\u0001> o2 = (object) instance;
          \u0004.\u0002(ex, (object) o1, (object) o2);
          throw;
        }
      }

      [DebuggerHidden]
      private void \u0002<\u0001>(ref \u0001 instance)
      {
        \u0001 obj1;
        try
        {
          ref \u0001 local = ref instance;
          obj1 = default (\u0001);
          \u0001 obj2 = obj1;
          local = obj2;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<\u0001> o1 = (object) obj1;
          // ISSUE: variable of a boxed type
          __Boxed<\u0001> o3 = (object) instance;
          \u0004.\u0002(ex, (object) o1, (object) this, (object) o3);
          throw;
        }
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      [DebuggerHidden]
      public \u0001()
      {
        try
        {
        }
        catch (Exception ex)
        {
          \u0004.\u0002(ex, (object) this);
          throw;
        }
      }
    }

    [ComVisible(false)]
    [EditorBrowsable(EditorBrowsableState.Never)]
    internal sealed class \u0002<\u0001> where \u0001 : new()
    {
      private readonly ContextValue<\u0001> \u0001;

      internal \u0001 GetInstance
      {
        [DebuggerHidden] get
        {
          \u0001 obj1;
          try
          {
            \u0001 obj2 = this.\u0001.Value;
            if (true)
              goto label_5;
label_1:
            if ((object) obj1 == null)
            {
              \u0001 obj3 = new \u0001();
              if (true)
                goto label_6;
label_3:
              this.\u0001.Value = obj1;
              goto label_4;
label_6:
              obj1 = obj3;
              goto label_3;
            }
label_4:
            return obj1;
label_5:
            obj1 = obj2;
            goto label_1;
          }
          catch (Exception ex)
          {
            \u0001 obj4;
            __Boxed<\u0001> o1 = (object) obj4;
            __Boxed<\u0001> o2 = (object) obj1;
            \u0001 obj5;
            __Boxed<\u0001> o3 = (object) obj5;
            \u0004.\u0002(ex, (object) o1, (object) o2, (object) o3, (object) this);
            throw;
          }
        }
      }

      [DebuggerHidden]
      [EditorBrowsable(EditorBrowsableState.Never)]
      public \u0002()
      {
        try
        {
          this.\u0001 = new ContextValue<\u0001>();
        }
        catch (Exception ex)
        {
          \u0004.\u0002(ex, (object) this);
          throw;
        }
      }
    }
  }
}
