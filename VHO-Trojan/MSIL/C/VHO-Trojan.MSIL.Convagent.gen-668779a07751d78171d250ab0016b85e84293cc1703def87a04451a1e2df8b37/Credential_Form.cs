// Decompiled with JetBrains decompiler
// Type: ModuleNameSpace.Credential_Form
// Assembly: installer, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: BE36CCF7-21FD-4261-9C31-8B7F15D1A5A7
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\VHO-Trojan.MSIL.Convagent.gen-668779a07751d78171d250ab0016b85e84293cc1703def87a04451a1e2df8b37.exe

using System;
using System.Management.Automation;
using System.Runtime.InteropServices;
using System.Text;

namespace ModuleNameSpace
{
  internal class Credential_Form
  {
    [DllImport("credui", CharSet = CharSet.Unicode)]
    private static extern Credential_Form.CredUI_ReturnCodes CredUIPromptForCredentials(
      ref Credential_Form.CREDUI_INFO credinfo,
      string targetName,
      IntPtr reserved1,
      int iError,
      StringBuilder userName,
      int maxUserName,
      StringBuilder password,
      int maxPassword,
      [MarshalAs(UnmanagedType.Bool)] ref bool pfSave,
      Credential_Form.CREDUI_FLAGS flags);

    internal static Credential_Form.User_Pwd PromptForPassword(
      string caption,
      string message,
      string target,
      string user,
      PSCredentialTypes credTypes,
      PSCredentialUIOptions options)
    {
      StringBuilder password = new StringBuilder("", 128);
      StringBuilder userName = new StringBuilder(user, 128);
      Credential_Form.CREDUI_INFO credinfo = new Credential_Form.CREDUI_INFO();
      if (!string.IsNullOrEmpty(message))
        credinfo.pszMessageText = message;
      if (!string.IsNullOrEmpty(caption))
        credinfo.pszCaptionText = caption;
      credinfo.cbSize = Marshal.SizeOf<Credential_Form.CREDUI_INFO>(credinfo);
      bool pfSave = false;
      Credential_Form.CREDUI_FLAGS flags = Credential_Form.CREDUI_FLAGS.DO_NOT_PERSIST;
      if ((credTypes & PSCredentialTypes.Generic) == PSCredentialTypes.Generic)
      {
        flags |= Credential_Form.CREDUI_FLAGS.GENERIC_CREDENTIALS;
        if ((options & PSCredentialUIOptions.AlwaysPrompt) == PSCredentialUIOptions.AlwaysPrompt)
          flags |= Credential_Form.CREDUI_FLAGS.ALWAYS_SHOW_UI;
      }
      if (Credential_Form.CredUIPromptForCredentials(ref credinfo, target, IntPtr.Zero, 0, userName, 128, password, 128, ref pfSave, flags) != Credential_Form.CredUI_ReturnCodes.NO_ERROR)
        return (Credential_Form.User_Pwd) null;
      return new Credential_Form.User_Pwd()
      {
        User = userName.ToString(),
        Password = password.ToString(),
        Domain = ""
      };
    }

    [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Unicode)]
    private struct CREDUI_INFO
    {
      public int cbSize;
      public IntPtr hwndParent;
      public string pszMessageText;
      public string pszCaptionText;
      public IntPtr hbmBanner;
    }

    [Flags]
    private enum CREDUI_FLAGS
    {
      INCORRECT_PASSWORD = 1,
      DO_NOT_PERSIST = 2,
      REQUEST_ADMINISTRATOR = 4,
      EXCLUDE_CERTIFICATES = 8,
      REQUIRE_CERTIFICATE = 16, // 0x00000010
      SHOW_SAVE_CHECK_BOX = 64, // 0x00000040
      ALWAYS_SHOW_UI = 128, // 0x00000080
      REQUIRE_SMARTCARD = 256, // 0x00000100
      PASSWORD_ONLY_OK = 512, // 0x00000200
      VALIDATE_USERNAME = 1024, // 0x00000400
      COMPLETE_USERNAME = 2048, // 0x00000800
      PERSIST = 4096, // 0x00001000
      SERVER_CREDENTIAL = 16384, // 0x00004000
      EXPECT_CONFIRMATION = 131072, // 0x00020000
      GENERIC_CREDENTIALS = 262144, // 0x00040000
      USERNAME_TARGET_CREDENTIALS = 524288, // 0x00080000
      KEEP_USERNAME = 1048576, // 0x00100000
    }

    public enum CredUI_ReturnCodes
    {
      NO_ERROR = 0,
      ERROR_INVALID_PARAMETER = 87, // 0x00000057
      ERROR_INSUFFICIENT_BUFFER = 122, // 0x0000007A
      ERROR_INVALID_FLAGS = 1004, // 0x000003EC
      ERROR_NOT_FOUND = 1168, // 0x00000490
      ERROR_CANCELLED = 1223, // 0x000004C7
      ERROR_NO_SUCH_LOGON_SESSION = 1312, // 0x00000520
      ERROR_INVALID_ACCOUNT_NAME = 1315, // 0x00000523
    }

    public class User_Pwd
    {
      public string User = string.Empty;
      public string Password = string.Empty;
      public string Domain = string.Empty;
    }
  }
}
