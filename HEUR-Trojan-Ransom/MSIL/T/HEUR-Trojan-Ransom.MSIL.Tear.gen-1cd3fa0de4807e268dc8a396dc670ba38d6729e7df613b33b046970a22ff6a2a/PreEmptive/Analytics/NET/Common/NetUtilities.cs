// Decompiled with JetBrains decompiler
// Type: PreEmptive.Analytics.NET.Common.NetUtilities
// Assembly: EncoderCSL, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8BC70EB6-E222-4E38-9ED5-32744A85C676
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-Ransom.MSIL.Tear.gen-1cd3fa0de4807e268dc8a396dc670ba38d6729e7df613b33b046970a22ff6a2a.exe

using PreEmptive.Analytics.Common.Utilities;
using System;
using System.Reflection;
using System.Text;

namespace PreEmptive.Analytics.NET.Common
{
  public static class NetUtilities
  {
    private static bool? a;

    internal static string a(this MethodBase A_0)
    {
      int A_1 = 14;
      int num1 = 30849;
      int num2 = num1;
      num1 = 30849;
      int num3 = num1;
      int num4;
      int num5;
      switch (num2 == num3 ? 1 : 0)
      {
        case 0:
        case 2:
label_6:
          num5 = 6;
          num4 = num5;
          break;
        default:
          if (true)
            ;
          num4 = 0;
          switch (num4)
          {
            default:
              switch (0)
              {
                case 0:
                  goto label_5;
              }
              break;
          }
      }
label_4:
      // ISSUE: variable of a compiler-generated type
      NetUtilities.a a;
      ParameterInfo[] parameters;
      ParameterInfo[] parameterInfoArray;
      int index;
      while (true)
      {
        switch (num4)
        {
          case 0:
            if (index >= parameterInfoArray.Length)
            {
              num5 = 3;
              num4 = num5;
              continue;
            }
            ParameterInfo parameterInfo = parameterInfoArray[index];
            // ISSUE: reference to a compiler-generated field
            a.a.Append(string.Format(Utils.a("링\uF4C3믅\uE4C7\uEAC9", A_1), (object) parameterInfo));
            ++index;
            num5 = 1;
            num4 = num5;
            continue;
          case 1:
          case 4:
            num5 = 0;
            num4 = num5;
            continue;
          case 2:
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            a.a.Remove(a.a.Length - 2, 2);
            num5 = 5;
            num4 = num5;
            continue;
          case 3:
            goto label_6;
          case 5:
            goto label_14;
          case 6:
            if (parameters.Length > 0)
            {
              num5 = 2;
              num4 = num5;
              continue;
            }
            goto label_14;
          default:
            goto label_5;
        }
      }
label_14:
      num5 = 1;
      if (num5 == 0)
        ;
      // ISSUE: reference to a compiler-generated field
      a.a.Append(Utils.a("\uEBC1", A_1));
      // ISSUE: reference to a compiler-generated field
      return a.a.ToString();
label_5:
      // ISSUE: object of a compiler-generated type is created
      a = new NetUtilities.a();
      // ISSUE: reference to a compiler-generated field
      a.a = new StringBuilder();
      // ISSUE: reference to a compiler-generated method
      A_0.a<MethodInfo>(new Action<MethodInfo>(a.b));
      // ISSUE: reference to a compiler-generated field
      a.a.Append(Utils.a("\uEAC1", A_1));
      parameters = A_0.GetParameters();
      parameterInfoArray = parameters;
      index = 0;
      num5 = 4;
      num4 = num5;
      goto label_4;
    }

    internal static void a<a>(this object A_0, Action<a> A_1)
    {
      int num = 2;
      while (true)
      {
        switch (num)
        {
          case 0:
            A_1((a) A_0);
            num = 1;
            continue;
          case 1:
            goto label_9;
          case 2:
            switch (0)
            {
              case 0:
                break;
              default:
                continue;
            }
            break;
        }
        if (A_0 is a)
        {
          switch (true ? 1 : 0)
          {
            case 0:
            case 2:
              goto label_9;
            default:
              if (true)
                ;
              num = 0;
              continue;
          }
        }
        else
          break;
      }
      return;
label_9:
      if (false)
        ;
    }

    internal static string b(this string A_0, string A_1)
    {
      if (!A_0.StartsWith(A_1))
        return A_0;
      int num = 4847;
      switch (4847 == num ? 1 : 0)
      {
        case 0:
        case 2:
          return A_0.Substring(A_1.Length);
        default:
          num = 1;
          if (num == 0)
            ;
          num = 0;
          if (num == 0)
            goto case 0;
          else
            goto case 0;
      }
    }

    internal static string a(this string A_0, string A_1)
    {
      if (!string.IsNullOrEmpty(A_0))
        return A_0;
      int num1 = -8076;
      int num2 = num1;
      num1 = -8076;
      int num3 = num1;
      switch (num2 == num3 ? 1 : 0)
      {
        case 0:
        case 2:
          return A_1;
        default:
          num1 = 0;
          if (num1 == 0)
            ;
          num1 = 1;
          if (num1 == 0)
            goto case 0;
          else
            goto case 0;
      }
    }

    internal static string a(this string A_0)
    {
      int A_1 = 16;
      int num1 = 16280;
      int num2 = num1;
      num1 = 16280;
      int num3 = num1;
      switch (num2 == num3)
      {
        case true:
          if (false)
            ;
          if (true)
            ;
          return A_0.Replace(Utils.a("飃", A_1), Utils.a("鯃", A_1)).Replace(Utils.a("\uEBC3", A_1), Utils.a("鯃", A_1)).Replace(Utils.a("\uECC3", A_1), Utils.a("鿃", A_1)).Replace(Utils.a("\uEDC3", A_1), Utils.a("駃", A_1)).Replace(Utils.a("\uE7C3", A_1), Utils.a("鯃", A_1));
        default:
          goto case 1;
      }
    }

    public static bool RunningInMono()
    {
      int A_1 = 18;
      int num1 = 2;
      int num2;
      while (true)
      {
        switch (num1)
        {
          case 0:
            NetUtilities.a = new bool?(Type.GetType(Utils.a("诅\uA7C7\uA4C9ꏋ\uE0CD苏\uA7D1뫓ꋕ뇗럙맛", A_1)) != (Type) null);
            num2 = 1;
            num1 = num2;
            continue;
          case 1:
            goto label_8;
          case 2:
            switch (0)
            {
              case 0:
                break;
              default:
                continue;
            }
            break;
        }
        if (!NetUtilities.a.HasValue)
        {
          num2 = 17957;
          int num3 = num2;
          num2 = 17957;
          int num4 = num2;
          switch (num3 == num4 ? 1 : 0)
          {
            case 0:
            case 2:
              goto label_8;
            default:
              num2 = 0;
              if (num2 == 0)
                ;
              num2 = 0;
              num1 = num2;
              continue;
          }
        }
        else
          goto label_9;
      }
label_8:
      num2 = 1;
      if (num2 == 0)
        ;
label_9:
      return NetUtilities.a.Value;
    }

    static NetUtilities()
    {
      int num1 = -11722;
      int num2 = num1;
      num1 = -11722;
      int num3 = num1;
      switch (num2 == num3)
      {
        case true:
          int num4 = 1;
          if (num4 == 0)
            ;
          num4 = 0;
          if (num4 == 0)
            ;
          NetUtilities.a = new bool?();
          break;
        default:
          goto case 1;
      }
    }
  }
}
