// Decompiled with JetBrains decompiler
// Type: Envoy.TimerButton
// Assembly: ManifestRunn, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 4340E416-8599-4A73-B291-89371197E3DA
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\HEUR-Worm.MSIL.FFAuto.gen-c26350de480859838a7d758ce891d049c78844695c6f7e33f9ea2fecc4b4a4a9.exe

using System;
using System.ComponentModel;
using System.Drawing;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace Envoy
{
  public class TimerButton : Button
  {
    private int Duration;
    private int TimerInterval = 100;
    private DateTime CurrentEndDate;
    private Timer UpdateLineTimer;
    private IContainer components = (IContainer) null;

    public TimerButton()
    {
      this.InitializeComponent();
      this.UpdateLineTimer = TimerButton.\u200E‬⁯⁬‮‌⁪⁪​‏‫‭‫‪⁭⁯‏‍‬‪‍⁮‪‏⁮‍‫⁫⁮​⁬⁬‬‫‪‏⁫​⁮‮‮();
      TimerButton.\u202A⁬‭‭​‬⁯⁮‎⁪‍⁯⁮⁯⁮⁭‪​⁬‪‭‮‍⁬⁭‫⁯​⁯​‫​‭‮‭⁫⁬‮⁮⁫‮(this.UpdateLineTimer, this.TimerInterval);
      TimerButton.\u202C⁫⁭‬‌⁭⁯‎⁯⁬‭‍⁮‌‪‎⁭⁬‮⁪‬⁪⁪⁮‮‬‌⁭‪⁭‭⁪⁯⁪‭‏‭‌‭⁬‮(this.UpdateLineTimer, new EventHandler(this.UpdateLineTimer_Tick));
    }

    private void UpdateLineTimer_Tick(object sender, EventArgs e) => TimerButton.\u200B‪⁪‏⁪‭‌⁭‎‍⁯‭‬‭‬⁫‫‏‫⁭‫⁭‌⁫‪‭⁬‌‏‎‮‫⁯‬​​​⁮‏‍‮((Control) this);

    public void ResetTimer() => this.CurrentEndDate = DateTime.Now.AddSeconds((double) this.Duration);

    protected override void OnPaint(PaintEventArgs pe)
    {
      base.OnPaint(pe);
      if (!TimerButton.\u200F‫‭‮‍‌‭‍⁬‌⁮‏‌⁬⁪⁫⁬‌⁯⁭‬⁭‬​⁫‏‌‏‍‭‎‮⁫‪⁫‮⁫‏‎⁯‮(this.UpdateLineTimer))
        return;
      Pen pen = TimerButton.\u202B‬‌‍‮⁫‬⁪⁮⁭‎‫‌‏⁬⁬⁭‭⁭‍‬‎‍‍‍‏‍‏‫‬‏⁭‌⁬⁬⁮‌⁭‎‌‮(Color.DarkRed, 3f);
      float num = (float) ((this.Duration * 1000 - (int) (this.CurrentEndDate - DateTime.Now).TotalMilliseconds) * TimerButton.\u202B⁫‌⁯‌⁯⁪‍⁫⁪‎⁯⁯‪‍‎​‌‎‫‬‬‪‭‭​‍​‎⁮‭⁭‭‎‌‌⁭‎​⁭‮((Control) this) / this.Duration);
      TimerButton.\u202C‭⁬‏⁯‌⁫⁯‭⁬⁬‏⁬‬⁫‌‮‫⁮⁪‪‎‌‏‪‭⁭​⁪⁬​⁫‭⁬⁪‏‍‬‍‎‮(TimerButton.\u206C‍‪‪⁭‫‭‪⁯‭⁭‭‭‮⁮⁪‫⁬‮​‬⁯‍​‭‫‭⁮‪‫​‫​⁬‬‫‍‬‌‭‮(pe), pen, 2f, (float) (TimerButton.\u206A⁮‏‬⁫⁮⁯‍‌⁯⁯‍⁫⁯⁭‪⁮‪‫⁫⁬⁯‫⁮‏⁬‮‎‌⁮‌‍‭‌‌‮‎‫‭‬‮((Control) this) - 1), TimerButton.\u206B‮‫‌‌‬‬‏​⁬‪‏‪‮‏‮⁪‍‪⁭⁫‏⁫‬⁭⁬‍⁫⁫​⁯​⁬‫‭⁭‭‌‫⁮‮(num, (float) (TimerButton.\u202B⁫‌⁯‌⁯⁪‍⁫⁪‎⁯⁯‪‍‎​‌‎‫‬‬‪‭‭​‍​‎⁮‭⁭‭‎‌‌⁭‎​⁭‮((Control) this) - 2)), (float) (TimerButton.\u206A⁮‏‬⁫⁮⁯‍‌⁯⁯‍⁫⁯⁭‪⁮‪‫⁫⁬⁯‫⁮‏⁬‮‎‌⁮‌‍‭‌‌‮‎‫‭‬‮((Control) this) - 1));
    }

    public void SetEnabled(bool enabled, int duration)
    {
      this.Duration = duration;
      if (enabled)
      {
        this.ResetTimer();
        TimerButton.\u202D‪‬‏​‏‫‬⁮‫⁯‏‍‭‭‍‪​​‫⁯⁭⁫‏‍‎‫‪‫‏‏⁯‪‫⁭‭‫⁬⁫‏‮(this.UpdateLineTimer);
      }
      else
        TimerButton.\u202B⁬‍​⁭⁭‭‭⁫⁯⁪‪‪‏‍‎​⁯‫⁪⁯​‍⁭⁯⁯‏‪‭⁪⁬‪‪⁪‮⁪⁫‮‫⁮‮(this.UpdateLineTimer);
      TimerButton.\u200B‪⁪‏⁪‭‌⁭‎‍⁯‭‬‭‬⁫‫‏‫⁭‫⁭‌⁫‪‭⁬‌‏‎‮‫⁯‬​​​⁮‏‍‮((Control) this);
    }

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        TimerButton.\u200C⁬​⁯‎​⁯⁭⁮‪⁯‏‪‌‌⁬‏‌‮‌‎‍⁭⁮‭‫⁮⁪‬⁫‏⁬⁭‬‏⁫⁮‍‫‎‮((IDisposable) this.components);
      base.Dispose(disposing);
    }

    private void InitializeComponent() => this.components = (IContainer) TimerButton.\u200F⁭⁮⁮​‭⁮​⁪‮‮‌⁫​⁬‍⁪⁬⁭‪⁬⁮‫⁯⁮​‪⁮⁬‍‮⁭‏‮⁯⁮⁪⁮⁫‬‮();

    static Timer \u200E‬⁯⁬‮‌⁪⁪​‏‫‭‫‪⁭⁯‏‍‬‪‍⁮‪‏⁮‍‫⁫⁮​⁬⁬‬‫‪‏⁫​⁮‮‮() => new Timer();

    static void \u202A⁬‭‭​‬⁯⁮‎⁪‍⁯⁮⁯⁮⁭‪​⁬‪‭‮‍⁬⁭‫⁯​⁯​‫​‭‮‭⁫⁬‮⁮⁫‮([In] Timer obj0, [In] int obj1) => obj0.Interval = obj1;

    static void \u202C⁫⁭‬‌⁭⁯‎⁯⁬‭‍⁮‌‪‎⁭⁬‮⁪‬⁪⁪⁮‮‬‌⁭‪⁭‭⁪⁯⁪‭‏‭‌‭⁬‮([In] Timer obj0, [In] EventHandler obj1) => obj0.Tick += obj1;

    static void \u200B‪⁪‏⁪‭‌⁭‎‍⁯‭‬‭‬⁫‫‏‫⁭‫⁭‌⁫‪‭⁬‌‏‎‮‫⁯‬​​​⁮‏‍‮([In] Control obj0) => obj0.Invalidate();

    static bool \u200F‫‭‮‍‌‭‍⁬‌⁮‏‌⁬⁪⁫⁬‌⁯⁭‬⁭‬​⁫‏‌‏‍‭‎‮⁫‪⁫‮⁫‏‎⁯‮([In] Timer obj0) => obj0.Enabled;

    static Pen \u202B‬‌‍‮⁫‬⁪⁮⁭‎‫‌‏⁬⁬⁭‭⁭‍‬‎‍‍‍‏‍‏‫‬‏⁭‌⁬⁬⁮‌⁭‎‌‮([In] Color obj0, [In] float obj1) => new Pen(obj0, obj1);

    static int \u202B⁫‌⁯‌⁯⁪‍⁫⁪‎⁯⁯‪‍‎​‌‎‫‬‬‪‭‭​‍​‎⁮‭⁭‭‎‌‌⁭‎​⁭‮([In] Control obj0) => obj0.Width;

    static Graphics \u206C‍‪‪⁭‫‭‪⁯‭⁭‭‭‮⁮⁪‫⁬‮​‬⁯‍​‭‫‭⁮‪‫​‫​⁬‬‫‍‬‌‭‮([In] PaintEventArgs obj0) => obj0.Graphics;

    static int \u206A⁮‏‬⁫⁮⁯‍‌⁯⁯‍⁫⁯⁭‪⁮‪‫⁫⁬⁯‫⁮‏⁬‮‎‌⁮‌‍‭‌‌‮‎‫‭‬‮([In] Control obj0) => obj0.Height;

    static float \u206B‮‫‌‌‬‬‏​⁬‪‏‪‮‏‮⁪‍‪⁭⁫‏⁫‬⁭⁬‍⁫⁫​⁯​⁬‫‭⁭‭‌‫⁮‮([In] float obj0, [In] float obj1) => Math.Min(obj0, obj1);

    static void \u202C‭⁬‏⁯‌⁫⁯‭⁬⁬‏⁬‬⁫‌‮‫⁮⁪‪‎‌‏‪‭⁭​⁪⁬​⁫‭⁬⁪‏‍‬‍‎‮(
      [In] Graphics obj0,
      [In] Pen obj1,
      [In] float obj2,
      [In] float obj3,
      [In] float obj4,
      [In] float obj5)
    {
      obj0.DrawLine(obj1, obj2, obj3, obj4, obj5);
    }

    static void \u202D‪‬‏​‏‫‬⁮‫⁯‏‍‭‭‍‪​​‫⁯⁭⁫‏‍‎‫‪‫‏‏⁯‪‫⁭‭‫⁬⁫‏‮([In] Timer obj0) => obj0.Start();

    static void \u202B⁬‍​⁭⁭‭‭⁫⁯⁪‪‪‏‍‎​⁯‫⁪⁯​‍⁭⁯⁯‏‪‭⁪⁬‪‪⁪‮⁪⁫‮‫⁮‮([In] Timer obj0) => obj0.Stop();

    static void \u200C⁬​⁯‎​⁯⁭⁮‪⁯‏‪‌‌⁬‏‌‮‌‎‍⁭⁮‭‫⁮⁪‬⁫‏⁬⁭‬‏⁫⁮‍‫‎‮([In] IDisposable obj0) => obj0.Dispose();

    static Container \u200F⁭⁮⁮​‭⁮​⁪‮‮‌⁫​⁬‍⁪⁬⁭‪⁬⁮‫⁯⁮​‪⁮⁬‍‮⁭‏‮⁯⁮⁪⁮⁫‬‮() => new Container();
  }
}
