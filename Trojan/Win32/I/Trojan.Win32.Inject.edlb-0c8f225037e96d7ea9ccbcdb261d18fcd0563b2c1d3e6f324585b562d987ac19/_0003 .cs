// Decompiled with JetBrains decompiler
// Type:  
// Assembly: syncui, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 32BC53D7-A239-4C18-BE53-ECC907E1DE31
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan.Win32.Inject.edlb-0c8f225037e96d7ea9ccbcdb261d18fcd0563b2c1d3e6f324585b562d987ac19.exe

using System.IO;

internal sealed class \u0003\u2001
{
  public uint \u0002;
  public uint \u0003;
  public Stream \u0005;

  public void \u0002(Stream _param1)
  {
    this.\u0005 = _param1;
    this.\u0003 = 0U;
    this.\u0002 = uint.MaxValue;
    for (int index = 0; index < 5; ++index)
      this.\u0003 = this.\u0003 << 8 | (uint) (byte) this.\u0005.ReadByte();
  }

  public void \u0002() => this.\u0005 = (Stream) null;

  public void \u0003() => this.\u0005.Close();

  public void \u0005()
  {
    for (; this.\u0002 < 16777216U; this.\u0002 <<= 8)
      this.\u0003 = this.\u0003 << 8 | (uint) (byte) this.\u0005.ReadByte();
  }

  public void \u0008()
  {
    if (this.\u0002 >= 16777216U)
      return;
    this.\u0003 = this.\u0003 << 8 | (uint) (byte) this.\u0005.ReadByte();
    this.\u0002 <<= 8;
  }

  public uint \u0002(uint _param1) => this.\u0003 / (this.\u0002 /= _param1);

  public void \u0002(uint _param1, uint _param2, uint _param3)
  {
    this.\u0003 -= _param1 * this.\u0002;
    this.\u0002 *= _param2;
    this.\u0005();
  }

  public uint \u0002(int _param1)
  {
    uint num1 = this.\u0002;
    uint num2 = this.\u0003;
    uint num3 = 0;
    for (int index = _param1; index > 0; --index)
    {
      num1 >>= 1;
      uint num4 = num2 - num1 >> 31;
      num2 -= num1 & num4 - 1U;
      num3 = (uint) ((int) num3 << 1 | 1 - (int) num4);
      if (num1 < 16777216U)
      {
        num2 = num2 << 8 | (uint) (byte) this.\u0005.ReadByte();
        num1 <<= 8;
      }
    }
    this.\u0002 = num1;
    this.\u0003 = num2;
    return num3;
  }

  public uint \u0002(uint _param1, int _param2)
  {
    uint num1 = (this.\u0002 >> _param2) * _param1;
    uint num2;
    if (this.\u0003 < num1)
    {
      num2 = 0U;
      this.\u0002 = num1;
    }
    else
    {
      num2 = 1U;
      this.\u0003 -= num1;
      this.\u0002 -= num1;
    }
    this.\u0005();
    return num2;
  }
}
