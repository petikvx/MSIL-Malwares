// Decompiled with JetBrains decompiler
// Type: DataAccessFramework.MSSqlDataTool
// Assembly: PreAllocatedOverlap, Version=1.0.2.1, Culture=neutral, PublicKeyToken=null
// MVID: B92242D0-7BA9-445E-B92A-42A0AEAC877F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Email-Worm.MSIL.LovGate.gen-514cb032bdc969f3ffe7822a716534d8e477f161e0d12f70225b72524e53bc11.exe

using System;
using System.Data;
using System.Data.Common;
using System.Data.SqlClient;
using System.Runtime.InteropServices;

namespace DataAccessFramework
{
  public abstract class MSSqlDataTool : DataTool
  {
    protected override IDbCommand CreateCommand()
    {
label_1:
      int num1 = -530194807;
      IDbCommand command;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -883837608)) % 4U)
        {
          case 1:
            command = (IDbCommand) MSSqlDataTool.\u206D⁭‌‮⁫⁭‎⁯⁭‏⁬‍⁬‪⁬⁯‪⁬‪‍⁭‫⁭‌⁮⁮‌⁭‫‭⁯⁯⁫‏‪⁪‫‪‌‬‮();
            num1 = (int) num2 * -744925910 ^ -1898200944;
            continue;
          case 2:
            num1 = (int) num2 * 550384839 ^ 1502868746;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return command;
    }

    public override IDataParameter CreateStringParameter(
      string parameterName,
      string value,
      int? length)
    {
label_1:
      int num1 = -1481763184;
      IDataParameter stringParameter;
      while (true)
      {
        uint num2;
        bool hasValue;
        bool flag1;
        bool flag2;
        SqlParameter sqlParameter1;
        int num3;
        switch ((num2 = (uint) (num1 ^ -1540809253)) % 14U)
        {
          case 0:
            int num4 = flag2 ? 206917477 : (num4 = 1018962101);
            num1 = num4 ^ (int) num2 * 1716178784;
            continue;
          case 1:
            MSSqlDataTool.\u202D‌⁯​‍‍⁯‫‏‪⁫⁬⁬⁮⁭⁮⁬‭⁮⁭‍⁯‫‫‎⁯‌‬‭⁭‬​‫⁫⁫⁯⁫⁬‫‏‮((DbParameter) sqlParameter1, length.Value);
            num1 = (int) num2 * 1139204419 ^ -862684404;
            continue;
          case 2:
            num3 = value != null ? 1 : 0;
            break;
          case 3:
            goto label_14;
          case 4:
            int num5 = MSSqlDataTool.\u206F⁪⁪⁮‬⁬‏‬⁫‍⁮⁯​‍‌⁬‌⁫⁯​‭⁭‭‎⁭‌‍⁭‌‎⁪‮‎⁭‎​⁭‭‌‫‮(value);
            int? nullable = length;
            int valueOrDefault = nullable.GetValueOrDefault();
            flag1 = num5 > valueOrDefault & nullable.HasValue;
            num1 = (int) num2 * -1388916730 ^ 1783958976;
            continue;
          case 5:
            int num6 = hasValue ? 958683506 : (num6 = 1499139688);
            num1 = num6 ^ (int) num2 * -2030842616;
            continue;
          case 6:
            goto label_1;
          case 7:
            if (length.HasValue)
            {
              num1 = (int) num2 * -47374297 ^ 16865572;
              continue;
            }
            num3 = 0;
            break;
          case 8:
            num1 = (int) num2 * 1073145403 ^ 982439452;
            continue;
          case 10:
            SqlParameter sqlParameter2 = MSSqlDataTool.\u200F‫‪⁪⁫‫‭‏‌‮⁯⁬⁬‮‪‌‭​‎‬‍⁪‮‮⁭⁫‍‪​‍​‭‪‪‮‌‫‏‏‮‮(parameterName, SqlDbType.NVarChar);
            MSSqlDataTool.\u202D​‭‎⁫‍‪​‏‌‏​⁭⁯​‪‮​‪⁬‎‫⁪⁯⁬‏⁫⁯​⁪​‫‎⁫‏⁬‫‮‏‬‮((DbParameter) sqlParameter2, value == null ? (object) DBNull.Value : (object) value);
            sqlParameter1 = sqlParameter2;
            hasValue = length.HasValue;
            num1 = -1316953244;
            continue;
          case 11:
            int num7 = !flag1 ? 337102856 : (num7 = 594060117);
            num1 = num7 ^ (int) num2 * -1077214641;
            continue;
          case 12:
            num1 = -2004971339;
            continue;
          case 13:
            stringParameter = (IDataParameter) sqlParameter1;
            num1 = -1477516408;
            continue;
          default:
            goto label_18;
        }
        flag2 = num3 != 0;
        num1 = -1039395493;
      }
label_14:
      throw new StringParameterTooLongException(parameterName, length.Value, MSSqlDataTool.\u206F⁪⁪⁮‬⁬‏‬⁫‍⁮⁯​‍‌⁬‌⁫⁯​‭⁭‭‎⁭‌‍⁭‌‎⁪‮‎⁭‎​⁭‭‌‫‮(value));
label_18:
      return stringParameter;
    }

    public override IDataParameter CreateIntParameter(
      string parameterName,
      int? value)
    {
label_1:
      int num1 = 295654777;
      SqlParameter sqlParameter;
      IDataParameter intParameter;
      bool hasValue;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 617677624)) % 11U)
        {
          case 0:
            num1 = (int) num2 * 1065878349 ^ 16780110;
            continue;
          case 2:
            intParameter = (IDataParameter) sqlParameter;
            num1 = 1339124943;
            continue;
          case 3:
            sqlParameter = MSSqlDataTool.\u200F‫‪⁪⁫‫‭‏‌‮⁯⁬⁬‮‪‌‭​‎‬‍⁪‮‮⁭⁫‍‪​‍​‭‪‪‮‌‫‏‏‮‮(parameterName, SqlDbType.Int);
            hasValue = value.HasValue;
            num1 = (int) num2 * 1159030723 ^ -1518900499;
            continue;
          case 4:
            num1 = (int) num2 * -691038188 ^ -49909250;
            continue;
          case 5:
            MSSqlDataTool.\u202D​‭‎⁫‍‪​‏‌‏​⁭⁯​‪‮​‪⁬‎‫⁪⁯⁬‏⁫⁯​⁪​‫‎⁫‏⁬‫‮‏‬‮((DbParameter) sqlParameter, (object) value);
            num1 = (int) num2 * 86442227 ^ -1620230051;
            continue;
          case 6:
            MSSqlDataTool.\u202D​‭‎⁫‍‪​‏‌‏​⁭⁯​‪‮​‪⁬‎‫⁪⁯⁬‏⁫⁯​⁪​‫‎⁫‏⁬‫‮‏‬‮((DbParameter) sqlParameter, (object) DBNull.Value);
            num1 = 231434964;
            continue;
          case 7:
            goto label_1;
          case 8:
            num1 = (int) num2 * -1366955560 ^ 1974648434;
            continue;
          case 9:
            num1 = (int) num2 * 921340751 ^ 927147188;
            continue;
          case 10:
            int num3 = hasValue ? -832976219 : (num3 = -966331156);
            num1 = num3 ^ (int) num2 * -836523162;
            continue;
          default:
            goto label_12;
        }
      }
label_12:
      return intParameter;
    }

    public override IDataParameter CreateLongParameter(
      string parameterName,
      long? value)
    {
label_1:
      int num1 = -1494146598;
      IDataParameter longParameter;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -685914594)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            SqlParameter sqlParameter = MSSqlDataTool.\u200F‫‪⁪⁫‫‭‏‌‮⁯⁬⁬‮‪‌‭​‎‬‍⁪‮‮⁭⁫‍‪​‍​‭‪‪‮‌‫‏‏‮‮(parameterName, SqlDbType.BigInt);
            MSSqlDataTool.\u202D​‭‎⁫‍‪​‏‌‏​⁭⁯​‪‮​‪⁬‎‫⁪⁯⁬‏⁫⁯​⁪​‫‎⁫‏⁬‫‮‏‬‮((DbParameter) sqlParameter, value.HasValue ? (object) value.Value : (object) DBNull.Value);
            longParameter = (IDataParameter) sqlParameter;
            num1 = -124054374;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return longParameter;
    }

    public override IDataParameter CreateBoolParameter(
      string parameterName,
      bool value)
    {
label_1:
      int num1 = 551409367;
      SqlParameter sqlParameter1;
      IDataParameter boolParameter;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 464025673)) % 5U)
        {
          case 0:
            boolParameter = (IDataParameter) sqlParameter1;
            num1 = (int) num2 * -34048892 ^ -1486040357;
            continue;
          case 1:
            num1 = (int) num2 * 132188026 ^ -1080479821;
            continue;
          case 3:
            SqlParameter sqlParameter2 = MSSqlDataTool.\u200F‫‪⁪⁫‫‭‏‌‮⁯⁬⁬‮‪‌‭​‎‬‍⁪‮‮⁭⁫‍‪​‍​‭‪‪‮‌‫‏‏‮‮(parameterName, SqlDbType.Bit);
            MSSqlDataTool.\u202D​‭‎⁫‍‪​‏‌‏​⁭⁯​‪‮​‪⁬‎‫⁪⁯⁬‏⁫⁯​⁪​‫‎⁫‏⁬‫‮‏‬‮((DbParameter) sqlParameter2, (object) value);
            sqlParameter1 = sqlParameter2;
            num1 = (int) num2 * -1411428811 ^ -1198946225;
            continue;
          case 4:
            goto label_1;
          default:
            goto label_6;
        }
      }
label_6:
      return boolParameter;
    }

    public override IDataParameter CreateStampParameter(
      string parameterName,
      object value)
    {
      if (value is byte[])
        goto label_4;
label_1:
      int num1 = 372785064;
label_2:
      SqlParameter sqlParameter1;
      IDataParameter stampParameter;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1324997828)) % 6U)
        {
          case 0:
            stampParameter = (IDataParameter) sqlParameter1;
            num1 = (int) num2 * 894490892 ^ -296656229;
            continue;
          case 2:
            goto label_4;
          case 3:
            goto label_1;
          case 4:
            goto label_6;
          case 5:
            num1 = (int) num2 * -1420985160 ^ 1065790429;
            continue;
          default:
            goto label_7;
        }
      }
label_6:
      throw MSSqlDataTool.\u202C‎‎‬‪⁭⁮‏‍‪‫‫⁬⁫⁭⁯⁫⁭‪‏‫‬⁯⁬⁫⁮‍‫⁯‪‪‪⁪‌‭‎‪‭‏‭‮(\u003CModule\u003E.\u206B‏⁮‭⁬⁭‪‌​‮⁪‬‎⁪​​⁭‮⁬‪⁭‭‪‬⁬‮⁫⁫‮‎‮‏‫⁬⁪‌⁬‌‏⁫‮<string>(266346748U), \u003CModule\u003E.\u206F‌⁮​‫‫‮‬⁭⁬⁫⁮⁫⁭‌‮‌‏‬​⁭⁫‪​‫‮‬‫‬⁪⁬‍‍‮‬⁯‮‏‌‮‮<string>(1730927371U));
label_7:
      return stampParameter;
label_4:
      SqlParameter sqlParameter2 = MSSqlDataTool.\u200F‫‪⁪⁫‫‭‏‌‮⁯⁬⁬‮‪‌‭​‎‬‍⁪‮‮⁭⁫‍‪​‍​‭‪‪‮‌‫‏‏‮‮(parameterName, SqlDbType.Binary);
      MSSqlDataTool.\u202D​‭‎⁫‍‪​‏‌‏​⁭⁯​‪‮​‪⁬‎‫⁪⁯⁬‏⁫⁯​⁪​‫‎⁫‏⁬‫‮‏‬‮((DbParameter) sqlParameter2, value);
      sqlParameter1 = sqlParameter2;
      num1 = 1522055422;
      goto label_2;
    }

    public override IDataParameter CreateDecimalParameter(
      string parameterName,
      Decimal? value)
    {
      SqlParameter sqlParameter = MSSqlDataTool.\u200F‫‪⁪⁫‫‭‏‌‮⁯⁬⁬‮‪‌‭​‎‬‍⁪‮‮⁭⁫‍‪​‍​‭‪‪‮‌‫‏‏‮‮(parameterName, SqlDbType.Decimal);
label_1:
      int num1 = 613410447;
      IDataParameter decimalParameter;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1075873172)) % 8U)
        {
          case 0:
            MSSqlDataTool.\u202D​‭‎⁫‍‪​‏‌‏​⁭⁯​‪‮​‪⁬‎‫⁪⁯⁬‏⁫⁯​⁪​‫‎⁫‏⁬‫‮‏‬‮((DbParameter) sqlParameter, (object) value.Value);
            num1 = (int) num2 * -1663500383 ^ -1920203096;
            continue;
          case 1:
            MSSqlDataTool.\u202D​‭‎⁫‍‪​‏‌‏​⁭⁯​‪‮​‪⁬‎‫⁪⁯⁬‏⁫⁯​⁪​‫‎⁫‏⁬‫‮‏‬‮((DbParameter) sqlParameter, (object) DBNull.Value);
            num1 = 1466683730;
            continue;
          case 3:
            int num3 = !value.HasValue ? -274090374 : (num3 = -1719500285);
            num1 = num3 ^ (int) num2 * -1125449995;
            continue;
          case 4:
            decimalParameter = (IDataParameter) sqlParameter;
            num1 = 1580717411;
            continue;
          case 5:
            goto label_1;
          case 6:
            num1 = (int) num2 * -1067499589 ^ -644805302;
            continue;
          case 7:
            num1 = (int) num2 * -207379621 ^ -302593965;
            continue;
          default:
            goto label_9;
        }
      }
label_9:
      return decimalParameter;
    }

    public override IDataParameter CreateMoneyParameter(
      string parameterName,
      Decimal value)
    {
label_1:
      int num1 = -697708120;
      IDataParameter moneyParameter;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -22936247)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            SqlParameter sqlParameter = MSSqlDataTool.\u200F‫‪⁪⁫‫‭‏‌‮⁯⁬⁬‮‪‌‭​‎‬‍⁪‮‮⁭⁫‍‪​‍​‭‪‪‮‌‫‏‏‮‮(parameterName, SqlDbType.Money);
            MSSqlDataTool.\u202D​‭‎⁫‍‪​‏‌‏​⁭⁯​‪‮​‪⁬‎‫⁪⁯⁬‏⁫⁯​⁪​‫‎⁫‏⁬‫‮‏‬‮((DbParameter) sqlParameter, (object) value);
            moneyParameter = (IDataParameter) sqlParameter;
            num1 = (int) num2 * -1760123193 ^ 2123152384;
            continue;
          case 2:
            num1 = (int) num2 * 1612593883 ^ -145702072;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return moneyParameter;
    }

    public override IDataParameter CreateBinaryParameter(
      string parameterName,
      byte[] value,
      int? length)
    {
      bool hasValue = length.HasValue;
label_1:
      int num1 = 1521734062;
      SqlParameter sqlParameter1;
      IDataParameter binaryParameter;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1834554145)) % 10U)
        {
          case 0:
            num1 = (int) num2 * -1877516218 ^ -1294335512;
            continue;
          case 1:
            int num3 = hasValue ? 1728005042 : (num3 = 1465495830);
            num1 = num3 ^ (int) num2 * -871977695;
            continue;
          case 2:
            SqlParameter sqlParameter2 = MSSqlDataTool.\u200F‫‪⁪⁫‫‭‏‌‮⁯⁬⁬‮‪‌‭​‎‬‍⁪‮‮⁭⁫‍‪​‍​‭‪‪‮‌‫‏‏‮‮(parameterName, SqlDbType.Binary);
            MSSqlDataTool.\u202D​‭‎⁫‍‪​‏‌‏​⁭⁯​‪‮​‪⁬‎‫⁪⁯⁬‏⁫⁯​⁪​‫‎⁫‏⁬‫‮‏‬‮((DbParameter) sqlParameter2, (object) value);
            sqlParameter1 = sqlParameter2;
            int num4;
            num1 = num4 = !length.HasValue ? 1674390620 : (num4 = 1342699751);
            continue;
          case 4:
            goto label_1;
          case 5:
            binaryParameter = (IDataParameter) sqlParameter1;
            num1 = 1571973254;
            continue;
          case 6:
            goto label_9;
          case 7:
            num1 = 156108409;
            continue;
          case 8:
            MSSqlDataTool.\u202D‌⁯​‍‍⁯‫‏‪⁫⁬⁬⁮⁭⁮⁬‭⁮⁭‍⁯‫‫‎⁯‌‬‭⁭‬​‫⁫⁫⁯⁫⁬‫‏‮((DbParameter) sqlParameter1, length.Value);
            num1 = (int) num2 * -881104535 ^ 118081130;
            continue;
          case 9:
            int length1 = value.Length;
            int? nullable = length;
            int valueOrDefault = nullable.GetValueOrDefault();
            int num5 = !(length1 > valueOrDefault & nullable.HasValue) ? -1714340014 : (num5 = -1321616359);
            num1 = num5 ^ (int) num2 * -1175587638;
            continue;
          default:
            goto label_11;
        }
      }
label_9:
      throw new BinaryParameterTooLongException(parameterName, length.Value, value.Length);
label_11:
      return binaryParameter;
    }

    public override IDataParameter CreateDateTimeParameter(
      string parameterName,
      DateTime? value)
    {
      SqlParameter sqlParameter = MSSqlDataTool.\u200F‫‪⁪⁫‫‭‏‌‮⁯⁬⁬‮‪‌‭​‎‬‍⁪‮‮⁭⁫‍‪​‍​‭‪‪‮‌‫‏‏‮‮(parameterName, SqlDbType.DateTime);
label_1:
      int num1 = -1408305122;
      bool hasValue;
      IDataParameter dateTimeParameter;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1261053093)) % 11U)
        {
          case 0:
            dateTimeParameter = (IDataParameter) sqlParameter;
            num1 = -1154285747;
            continue;
          case 1:
            MSSqlDataTool.\u202D​‭‎⁫‍‪​‏‌‏​⁭⁯​‪‮​‪⁬‎‫⁪⁯⁬‏⁫⁯​⁪​‫‎⁫‏⁬‫‮‏‬‮((DbParameter) sqlParameter, (object) DBNull.Value);
            num1 = -681114837;
            continue;
          case 2:
            goto label_1;
          case 3:
            MSSqlDataTool.\u202D​‭‎⁫‍‪​‏‌‏​⁭⁯​‪‮​‪⁬‎‫⁪⁯⁬‏⁫⁯​⁪​‫‎⁫‏⁬‫‮‏‬‮((DbParameter) sqlParameter, (object) value.Value);
            num1 = (int) num2 * -732600422 ^ -783015226;
            continue;
          case 4:
            num1 = (int) num2 * 2090527775 ^ -1841051503;
            continue;
          case 6:
            num1 = (int) num2 * 995828941 ^ -165970315;
            continue;
          case 7:
            num1 = (int) num2 * 1499625548 ^ 823188820;
            continue;
          case 8:
            num1 = (int) num2 * -158928295 ^ 1577024662;
            continue;
          case 9:
            int num3 = !hasValue ? 1820331828 : (num3 = 46272276);
            num1 = num3 ^ (int) num2 * -1291408536;
            continue;
          case 10:
            hasValue = value.HasValue;
            num1 = (int) num2 * 1731357001 ^ 885048937;
            continue;
          default:
            goto label_12;
        }
      }
label_12:
      return dateTimeParameter;
    }

    public override IDataParameter CreateGuidParameter(
      string parameterName,
      Guid? value)
    {
label_1:
      int num1 = 1377226878;
      SqlParameter sqlParameter;
      IDataParameter guidParameter;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1657632411)) % 10U)
        {
          case 0:
            num1 = (int) num2 * -1273546793 ^ 2016163018;
            continue;
          case 1:
            MSSqlDataTool.\u202D​‭‎⁫‍‪​‏‌‏​⁭⁯​‪‮​‪⁬‎‫⁪⁯⁬‏⁫⁯​⁪​‫‎⁫‏⁬‫‮‏‬‮((DbParameter) sqlParameter, (object) DBNull.Value);
            num1 = 263782565;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * -92313903 ^ -868964829;
            continue;
          case 4:
            MSSqlDataTool.\u202D​‭‎⁫‍‪​‏‌‏​⁭⁯​‪‮​‪⁬‎‫⁪⁯⁬‏⁫⁯​⁪​‫‎⁫‏⁬‫‮‏‬‮((DbParameter) sqlParameter, (object) value.Value);
            num1 = (int) num2 * -760738893 ^ 898032562;
            continue;
          case 5:
            guidParameter = (IDataParameter) sqlParameter;
            num1 = 1852919249;
            continue;
          case 7:
            sqlParameter = MSSqlDataTool.\u200F‫‪⁪⁫‫‭‏‌‮⁯⁬⁬‮‪‌‭​‎‬‍⁪‮‮⁭⁫‍‪​‍​‭‪‪‮‌‫‏‏‮‮(parameterName, SqlDbType.UniqueIdentifier);
            num1 = (int) num2 * 597155382 ^ -1125251284;
            continue;
          case 8:
            num1 = (int) num2 * 1218499304 ^ -247814819;
            continue;
          case 9:
            int num3 = value.HasValue ? 493403428 : (num3 = 1201845459);
            num1 = num3 ^ (int) num2 * 2145375857;
            continue;
          default:
            goto label_11;
        }
      }
label_11:
      return guidParameter;
    }

    static SqlCommand \u206D⁭‌‮⁫⁭‎⁯⁭‏⁬‍⁬‪⁬⁯‪⁬‪‍⁭‫⁭‌⁮⁮‌⁭‫‭⁯⁯⁫‏‪⁪‫‪‌‬‮() => new SqlCommand();

    static int \u206F⁪⁪⁮‬⁬‏‬⁫‍⁮⁯​‍‌⁬‌⁫⁯​‭⁭‭‎⁭‌‍⁭‌‎⁪‮‎⁭‎​⁭‭‌‫‮([In] string obj0) => obj0.Length;

    static SqlParameter \u200F‫‪⁪⁫‫‭‏‌‮⁯⁬⁬‮‪‌‭​‎‬‍⁪‮‮⁭⁫‍‪​‍​‭‪‪‮‌‫‏‏‮‮(
      [In] string obj0,
      [In] SqlDbType obj1)
    {
      return new SqlParameter(obj0, obj1);
    }

    static void \u202D​‭‎⁫‍‪​‏‌‏​⁭⁯​‪‮​‪⁬‎‫⁪⁯⁬‏⁫⁯​⁪​‫‎⁫‏⁬‫‮‏‬‮([In] DbParameter obj0, [In] object obj1) => obj0.Value = obj1;

    static void \u202D‌⁯​‍‍⁯‫‏‪⁫⁬⁬⁮⁭⁮⁬‭⁮⁭‍⁯‫‫‎⁯‌‬‭⁭‬​‫⁫⁫⁯⁫⁬‫‏‮([In] DbParameter obj0, [In] int obj1) => obj0.Size = obj1;

    static ArgumentOutOfRangeException \u202C‎‎‬‪⁭⁮‏‍‪‫‫⁬⁫⁭⁯⁫⁭‪‏‫‬⁯⁬⁫⁮‍‫⁯‪‪‪⁪‌‭‎‪‭‏‭‮(
      [In] string obj0,
      [In] string obj1)
    {
      return new ArgumentOutOfRangeException(obj0, obj1);
    }
  }
}
