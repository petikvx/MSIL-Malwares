// Decompiled with JetBrains decompiler
// Type:  
// Assembly: SecurityIdentif, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: D0A5C11A-2771-43FF-61D3-720E61B1B76A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-c0a6b562ce71149c052ed504556f0e4c8dbe2d075aef54299e548ed33f88a3c9.exe

using System;
using System.Collections.Generic;
using System.Drawing.Imaging;
using System.Linq;
using System.Runtime.CompilerServices;

public sealed class \u0003\u2005 : \u0005\u2004
{
  private readonly IDictionary<Guid, \u0003\u2004> \u0002;

  public \u0003\u2005(\u0003\u2004[] _param1)
  {
    \u0008\u2002.\u0002.\u0002((object) _param1, \u0008\u200A.\u0002(-1632088566));
    \u0008\u2002.\u0002.\u0002<\u0003\u2004>((ICollection<\u0003\u2004>) _param1, \u0008\u200A.\u0002(-1632088566));
    try
    {
      string message = \u0008\u200A.\u0002(-1632088570);
      int length = _param1.Length;
      if (((IEnumerable<\u0003\u2004>) _param1).\u0002<\u0003\u2004, int>(\u0003\u2005.\u0002.\u0003 ?? (\u0003\u2005.\u0002.\u0003 = new Func<\u0003\u2004, int>(\u0003\u2005.\u0002.\u0002.\u0002))).Count<\u0003\u2004>() != length)
        throw new ArgumentException(message);
      this.\u0002 = (IDictionary<Guid, \u0003\u2004>) ((IEnumerable<\u0003\u2004>) _param1).ToDictionary<\u0003\u2004, Guid>(\u0003\u2005.\u0002.\u0005 ?? (\u0003\u2005.\u0002.\u0005 = new Func<\u0003\u2004, Guid>(\u0003\u2005.\u0002.\u0002.\u0002)));
    }
    catch (ArgumentNullException ex)
    {
      throw;
    }
    catch (ArgumentException ex)
    {
      throw;
    }
  }

  public bool \u0005\u2004\u2002\u2002\u2001\u0002(string _param1) => this.\u0002.Values.Any<\u0003\u2004>(new Func<\u0003\u2004, bool>(new \u0003\u2005.\u0003()
  {
    \u0002 = _param1
  }.\u0002));

  public bool \u0005\u2004\u2002\u2002\u2001\u0003(string _param1) => this.\u0002.Values.Any<\u0003\u2004>(new Func<\u0003\u2004, bool>(new \u0003\u2005.\u0005()
  {
    \u0002 = _param1
  }.\u0002));

  public bool \u0005\u2004\u2002\u2002\u2001\u0002(ImageFormat _param1) => this.\u0002.Values.Any<\u0003\u2004>(new Func<\u0003\u2004, bool>(new \u0003\u2005.\u0008()
  {
    \u0002 = _param1
  }.\u0002));

  public \u0003\u2004 \u0005\u2004\u2002\u2002\u2001\u0002(string _param1) => this.\u0002.Values.SingleOrDefault<\u0003\u2004>(new Func<\u0003\u2004, bool>(new \u0003\u2005.\u0006()
  {
    \u0002 = _param1
  }.\u0002));

  public \u0003\u2004 \u0005\u2004\u2002\u2002\u2001\u0003(string _param1) => this.\u0002.Values.SingleOrDefault<\u0003\u2004>(new Func<\u0003\u2004, bool>(new \u0003\u2005.\u000E()
  {
    \u0002 = _param1
  }.\u0002));

  public \u0003\u2004 \u0005\u2004\u2002\u2002\u2001\u0002(ImageFormat _param1) => this.\u0002.Values.SingleOrDefault<\u0003\u2004>(new Func<\u0003\u2004, bool>(new \u0003\u2005.\u000F()
  {
    \u0002 = _param1
  }.\u0002));

  [SpecialName]
  public IList<\u0003\u2004> \u0005\u2004\u2002\u2002\u2001\u0002() => (IList<\u0003\u2004>) this.\u0002.Values.ToList<\u0003\u2004>().AsReadOnly();

  [Serializable]
  private sealed class \u0002
  {
    public static readonly \u0003\u2005.\u0002 \u0002 = new \u0003\u2005.\u0002();
    public static Func<\u0003\u2004, int> \u0003;
    public static Func<\u0003\u2004, Guid> \u0005;

    internal int \u0002(\u0003\u2004 _param1) => _param1.GetHashCode();

    internal Guid \u0002(\u0003\u2004 _param1) => _param1.\u0003\u2004\u2002\u2002\u2001\u0002().Guid;
  }

  private sealed class \u0003
  {
    public string \u0002;

    internal bool \u0002(\u0003\u2004 _param1) => _param1.\u0003\u2004\u2002\u2002\u2001\u0002().ToLower() == this.\u0002.ToLower();
  }

  private sealed class \u0005
  {
    public string \u0002;

    internal bool \u0002(\u0003\u2004 _param1) => _param1.\u0003\u2004\u2002\u2002\u2001\u0003().ToLower() == this.\u0002.ToLower();
  }

  private sealed class \u0006
  {
    public string \u0002;

    internal bool \u0002(\u0003\u2004 _param1) => _param1.\u0003\u2004\u2002\u2002\u2001\u0002().ToLower() == this.\u0002.ToLower();
  }

  private sealed class \u0008
  {
    public ImageFormat \u0002;

    internal bool \u0002(\u0003\u2004 _param1) => _param1.\u0003\u2004\u2002\u2002\u2001\u0002().Equals((object) this.\u0002);
  }

  private sealed class \u000E
  {
    public string \u0002;

    internal bool \u0002(\u0003\u2004 _param1) => _param1.\u0003\u2004\u2002\u2002\u2001\u0003().ToLower() == this.\u0002.ToLower();
  }

  private sealed class \u000F
  {
    public ImageFormat \u0002;

    internal bool \u0002(\u0003\u2004 _param1) => _param1.\u0003\u2004\u2002\u2002\u2001\u0002().Equals((object) this.\u0002);
  }
}
