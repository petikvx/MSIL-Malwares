// Decompiled with JetBrains decompiler
// Type: Cycle_Jump_Game.Main
// Assembly: cDisplayClas, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 89FB05B9-6915-4070-92A1-63732D16ABE9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-0b32f79b8abe4a232193f819dccfa47a922353e961d37d1becd35171c2b04a89.exe

using System;
using System.ComponentModel;
using System.Drawing;
using System.Windows.Forms;

namespace Cycle_Jump_Game
{
  public class Main : Form
  {
    private int speed = 12;
    private int gravity = 0;
    private int points = 0;
    private bool jump = false;
    private IContainer components = (IContainer) null;
    private PictureBox base_1;
    private PictureBox pipe_1;
    private PictureBox pipe_2;
    private PictureBox pipe_3;
    private PictureBox base_2;
    private PictureBox base_3;
    private PictureBox base_4;
    private PictureBox pipe_5;
    private PictureBox pipe_4;
    private PictureBox player;
    private Label point;
    private Timer timer1;
    private PictureBox pictureBox1;
    private PictureBox pictureBox2;

    public Main() => this.InitializeComponent();

    private void Main_Load(object sender, EventArgs e)
    {
    }

    private void EndGame()
    {
      this.timer1.Stop();
      this.point.Visible = true;
    }

    private void Main_KeyDown(object sender, KeyEventArgs e)
    {
      if (e.KeyCode != Keys.Space)
        return;
      this.gravity = -5;
    }

    private void Main_KeyUp(object sender, KeyEventArgs e)
    {
      if (e.KeyCode != Keys.Space)
        return;
      this.gravity = 5;
    }

    private void timer1_Tick(object sender, EventArgs e)
    {
      this.pipe_1.Left -= this.speed;
      this.pipe_2.Left -= this.speed;
      this.pipe_3.Left -= this.speed;
      this.pipe_4.Left -= this.speed;
      this.pipe_5.Left -= this.speed;
      this.base_3.Left -= this.speed;
      this.base_4.Left -= this.speed;
      this.base_2.Left -= this.speed;
      this.player.Top += this.gravity;
      this.point.Text = "SCORE :" + this.points.ToString();
      if (this.pipe_1.Left < -200)
      {
        this.pipe_1.Left = 1000;
        this.points += 5;
      }
      else if (this.pipe_2.Left < 200)
      {
        this.pipe_2.Left = 1000;
        this.points += 5;
      }
      else if (this.pipe_3.Left < 200)
      {
        this.pipe_3.Left = 1000;
        this.points += 5;
      }
      else if (this.pipe_4.Left < -200)
      {
        this.pipe_4.Left = 1000;
        this.points += 5;
      }
      else if (this.pipe_5.Left < -200)
      {
        this.pipe_5.Left = 1000;
        this.points += 5;
      }
      else if (this.base_2.Left < 200)
      {
        this.base_2.Left = 1000;
        this.points += 5;
      }
      else if (this.base_3.Left < 200)
      {
        this.base_3.Left = 1000;
        this.points += 5;
      }
      else if (this.base_4.Left < 200)
      {
        this.base_4.Left = 1000;
        this.points += 5;
      }
      else if (this.player.Bounds.IntersectsWith(this.pipe_1.Bounds))
      {
        this.EndGame();
        this.point.Text = "GAME OVER :" + this.points.ToString();
      }
      else if (this.player.Bounds.IntersectsWith(this.pipe_2.Bounds))
      {
        this.timer1.Stop();
        this.EndGame();
        this.point.Text = "GAME OVER :" + this.points.ToString();
      }
      else if (this.player.Bounds.IntersectsWith(this.pipe_3.Bounds))
      {
        this.timer1.Stop();
        this.EndGame();
        this.point.Text = "GAME OVER :" + this.points.ToString();
      }
      else if (this.player.Bounds.IntersectsWith(this.pipe_4.Bounds))
      {
        this.timer1.Stop();
        this.EndGame();
        this.point.Text = "GAME OVER :" + this.points.ToString();
      }
      else if (this.player.Bounds.IntersectsWith(this.pipe_5.Bounds))
      {
        this.timer1.Stop();
        this.EndGame();
        this.point.Text = "GAME OVER :" + this.points.ToString();
      }
      else if (this.player.Bounds.IntersectsWith(this.base_1.Bounds) && !this.jump)
        this.player.Top = this.base_1.Top - this.player.Height;
      else if (this.player.Bounds.IntersectsWith(this.base_2.Bounds) && !this.jump)
        this.player.Top = this.base_2.Top - this.player.Height;
      else if (this.player.Bounds.IntersectsWith(this.base_3.Bounds) && !this.jump)
      {
        this.player.Top = this.base_3.Top - this.player.Height;
      }
      else
      {
        if (!this.player.Bounds.IntersectsWith(this.base_4.Bounds) || this.jump)
          return;
        this.player.Top = this.base_4.Top - this.player.Height;
      }
    }

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(disposing);
    }

    private void InitializeComponent()
    {
      this.components = (IContainer) new Container();
      this.player = new PictureBox();
      this.pipe_4 = new PictureBox();
      this.pipe_5 = new PictureBox();
      this.base_4 = new PictureBox();
      this.base_3 = new PictureBox();
      this.base_2 = new PictureBox();
      this.pipe_3 = new PictureBox();
      this.pipe_2 = new PictureBox();
      this.pipe_1 = new PictureBox();
      this.base_1 = new PictureBox();
      this.point = new Label();
      this.timer1 = new Timer(this.components);
      this.pictureBox1 = new PictureBox();
      this.pictureBox2 = new PictureBox();
      ((ISupportInitialize) this.player).BeginInit();
      ((ISupportInitialize) this.pipe_4).BeginInit();
      ((ISupportInitialize) this.pipe_5).BeginInit();
      ((ISupportInitialize) this.base_4).BeginInit();
      ((ISupportInitialize) this.base_3).BeginInit();
      ((ISupportInitialize) this.base_2).BeginInit();
      ((ISupportInitialize) this.pipe_3).BeginInit();
      ((ISupportInitialize) this.pipe_2).BeginInit();
      ((ISupportInitialize) this.pipe_1).BeginInit();
      ((ISupportInitialize) this.base_1).BeginInit();
      ((ISupportInitialize) this.pictureBox1).BeginInit();
      ((ISupportInitialize) this.pictureBox2).BeginInit();
      this.SuspendLayout();
      this.player.Location = new Point(643, 582);
      this.player.Name = "player";
      this.player.Size = new Size(42, 54);
      this.player.TabIndex = 9;
      this.player.TabStop = false;
      this.pipe_4.BackColor = Color.FromArgb(192, 0, 192);
      this.pipe_4.Location = new Point(170, 404);
      this.pipe_4.Name = "pipe_4";
      this.pipe_4.Size = new Size(147, 10);
      this.pipe_4.TabIndex = 8;
      this.pipe_4.TabStop = false;
      this.pipe_5.BackColor = Color.FromArgb(0, 0, 192);
      this.pipe_5.Location = new Point(1088, 262);
      this.pipe_5.Name = "pipe_5";
      this.pipe_5.Size = new Size(147, 10);
      this.pipe_5.TabIndex = 7;
      this.pipe_5.TabStop = false;
      this.base_4.BackColor = SystemColors.ControlDarkDark;
      this.base_4.Location = new Point(984, 404);
      this.base_4.Name = "base_4";
      this.base_4.Size = new Size(251, 12);
      this.base_4.TabIndex = 6;
      this.base_4.TabStop = false;
      this.base_3.BackColor = SystemColors.ControlDarkDark;
      this.base_3.Location = new Point(523, 315);
      this.base_3.Name = "base_3";
      this.base_3.Size = new Size(251, 11);
      this.base_3.TabIndex = 5;
      this.base_3.TabStop = false;
      this.base_2.BackColor = SystemColors.ControlDarkDark;
      this.base_2.Location = new Point(66, 248);
      this.base_2.Name = "base_2";
      this.base_2.Size = new Size(251, 12);
      this.base_2.TabIndex = 4;
      this.base_2.TabStop = false;
      this.pipe_3.BackColor = Color.FromArgb(192, 0, 192);
      this.pipe_3.Location = new Point(1225, 558);
      this.pipe_3.Name = "pipe_3";
      this.pipe_3.Size = new Size(10, 78);
      this.pipe_3.TabIndex = 3;
      this.pipe_3.TabStop = false;
      this.pipe_2.BackColor = Color.Yellow;
      this.pipe_2.Location = new Point(631, 582);
      this.pipe_2.Name = "pipe_2";
      this.pipe_2.Size = new Size(10, 54);
      this.pipe_2.TabIndex = 2;
      this.pipe_2.TabStop = false;
      this.pipe_1.BackColor = Color.FromArgb(192, 0, 0);
      this.pipe_1.Location = new Point(44, 558);
      this.pipe_1.Name = "pipe_1";
      this.pipe_1.Size = new Size(10, 78);
      this.pipe_1.TabIndex = 1;
      this.pipe_1.TabStop = false;
      this.base_1.BackColor = Color.FromArgb(192, 64, 0);
      this.base_1.Dock = DockStyle.Bottom;
      this.base_1.Location = new Point(0, 636);
      this.base_1.Name = "base_1";
      this.base_1.Size = new Size(1289, 105);
      this.base_1.TabIndex = 0;
      this.base_1.TabStop = false;
      this.point.AutoSize = true;
      this.point.Font = new Font("Microsoft Sans Serif", 9.75f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.point.ForeColor = Color.FromArgb((int) byte.MaxValue, 128, 0);
      this.point.Location = new Point(589, 54);
      this.point.Name = "point";
      this.point.Size = new Size(80, 16);
      this.point.TabIndex = 10;
      this.point.Text = "SCORE : 0";
      this.timer1.Enabled = true;
      this.timer1.Interval = 30;
      this.timer1.Tick += new EventHandler(this.timer1_Tick);
      this.pictureBox1.BackColor = SystemColors.ControlDarkDark;
      this.pictureBox1.Location = new Point(234, 111);
      this.pictureBox1.Name = "pictureBox1";
      this.pictureBox1.Size = new Size(251, 11);
      this.pictureBox1.TabIndex = 5;
      this.pictureBox1.TabStop = false;
      this.pictureBox2.BackColor = SystemColors.ControlDarkDark;
      this.pictureBox2.Location = new Point(795, 111);
      this.pictureBox2.Name = "pictureBox2";
      this.pictureBox2.Size = new Size(251, 11);
      this.pictureBox2.TabIndex = 5;
      this.pictureBox2.TabStop = false;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.BackColor = SystemColors.ActiveCaptionText;
      this.ClientSize = new Size(1289, 741);
      this.Controls.Add((Control) this.point);
      this.Controls.Add((Control) this.player);
      this.Controls.Add((Control) this.pipe_4);
      this.Controls.Add((Control) this.pipe_5);
      this.Controls.Add((Control) this.base_4);
      this.Controls.Add((Control) this.pictureBox2);
      this.Controls.Add((Control) this.pictureBox1);
      this.Controls.Add((Control) this.base_3);
      this.Controls.Add((Control) this.base_2);
      this.Controls.Add((Control) this.pipe_3);
      this.Controls.Add((Control) this.pipe_2);
      this.Controls.Add((Control) this.pipe_1);
      this.Controls.Add((Control) this.base_1);
      this.MaximizeBox = false;
      this.MinimizeBox = false;
      this.Name = nameof (Main);
      this.StartPosition = FormStartPosition.CenterScreen;
      this.Text = nameof (Main);
      this.WindowState = FormWindowState.Maximized;
      this.Load += new EventHandler(this.Main_Load);
      this.KeyDown += new KeyEventHandler(this.Main_KeyDown);
      this.KeyUp += new KeyEventHandler(this.Main_KeyUp);
      ((ISupportInitialize) this.player).EndInit();
      ((ISupportInitialize) this.pipe_4).EndInit();
      ((ISupportInitialize) this.pipe_5).EndInit();
      ((ISupportInitialize) this.base_4).EndInit();
      ((ISupportInitialize) this.base_3).EndInit();
      ((ISupportInitialize) this.base_2).EndInit();
      ((ISupportInitialize) this.pipe_3).EndInit();
      ((ISupportInitialize) this.pipe_2).EndInit();
      ((ISupportInitialize) this.pipe_1).EndInit();
      ((ISupportInitialize) this.base_1).EndInit();
      ((ISupportInitialize) this.pictureBox1).EndInit();
      ((ISupportInitialize) this.pictureBox2).EndInit();
      this.ResumeLayout(false);
      this.PerformLayout();
    }
  }
}
