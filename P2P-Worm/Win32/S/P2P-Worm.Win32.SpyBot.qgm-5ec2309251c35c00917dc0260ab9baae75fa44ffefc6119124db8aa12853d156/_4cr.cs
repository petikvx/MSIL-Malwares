// Decompiled with JetBrains decompiler
// Type: winini._4cr
// Assembly: winini, Version=2.0.0.2, Culture=neutral, PublicKeyToken=null
// MVID: FD868ADB-5E8B-4953-B148-111F95D9107A
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00008-msil\P2P-Worm.Win32.SpyBot.qgm-5ec2309251c35c00917dc0260ab9baae75fa44ffefc6119124db8aa12853d156.exe

using Microsoft.VisualBasic;
using System;
using System.Diagnostics;
using System.Text;
using System.Threading;

namespace winini
{
  public class _4cr
  {
    [DebuggerNonUserCode]
    public _4cr()
    {
    }

    public static string enc(string message, string mykey)
    {
      int index1 = 0;
      int index2 = 0;
      StringBuilder stringBuilder = new StringBuilder();
      string empty = string.Empty;
      int[] numArray1 = new int[257];
      int[] numArray2 = new int[257];
      int length = mykey.Length;
      int location1 = 0;
      while (location1 <= (int) byte.MaxValue)
      {
        char String = mykey.Substring(location1 % length, 1).ToCharArray()[0];
        numArray2[location1] = Strings.Asc(String);
        numArray1[location1] = location1;
        Math.Max(Interlocked.Increment(ref location1), checked (location1 - 1));
      }
      int index3 = 0;
      int location2 = 0;
      while (location2 <= (int) byte.MaxValue)
      {
        index3 = checked (index3 + numArray1[location2] + numArray2[location2]) % 256;
        int num = numArray1[location2];
        numArray1[location2] = numArray1[index3];
        numArray1[index3] = num;
        Math.Max(Interlocked.Increment(ref location2), checked (location2 - 1));
      }
      location1 = 1;
      while (location1 <= message.Length)
      {
        index1 = checked (index1 + 1) % 256;
        index2 = checked (index2 + numArray1[index1]) % 256;
        int num1 = numArray1[index1];
        numArray1[index1] = numArray1[index2];
        numArray1[index2] = num1;
        int num2 = numArray1[checked (numArray1[index1] + numArray1[index2]) % 256];
        int CharCode = Strings.Asc(message.Substring(checked (location1 - 1), 1).ToCharArray()[0]) ^ num2;
        stringBuilder.Append(Strings.Chr(CharCode));
        Math.Max(Interlocked.Increment(ref location1), checked (location1 - 1));
      }
      string str = stringBuilder.ToString();
      stringBuilder.Length = 0;
      return str;
    }
  }
}
