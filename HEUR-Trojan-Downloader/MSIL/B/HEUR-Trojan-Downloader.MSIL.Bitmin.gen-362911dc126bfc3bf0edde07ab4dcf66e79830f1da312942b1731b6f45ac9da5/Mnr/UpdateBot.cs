// Decompiled with JetBrains decompiler
// Type: Mnr.UpdateBot
// Assembly: Mnr, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 31BEEE89-664D-4BA2-8E05-5A15545A4D73
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan-Downloader.MSIL.Bitmin.gen-362911dc126bfc3bf0edde07ab4dcf66e79830f1da312942b1731b6f45ac9da5.exe

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace Mnr
{
  [Serializable]
  public class UpdateBot
  {
    public int Version
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [MethodImpl(MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    public string Link
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [MethodImpl(MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    public string Name
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [MethodImpl(MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public UpdateBot()
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public UpdateBot(int Version, string Link, string Name)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static UpdateBot Deserialize(string path)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool dykQbNfZLRRlcW4VY8J()
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool LFkh2VfWSORZ5IlTY4S()
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void rUCm8jfDCgsM2NhBpc9()
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void MwxKpAfAfwSKPSj9UXs([In] object obj0)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static RuntimeTypeHandle C5hXeSfK103pcxynJwj(int token)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static Type Krm9uRf5iF7rPettg89([In] RuntimeTypeHandle obj0)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object bKyHjrfFHLDQhXpNSrA([In] object obj0, [In] object obj1)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void tg1Um8fHdXrvfQ3oArX([In] object obj0)
    {
      // ISSUE: unable to decompile the method.
    }
  }
}
