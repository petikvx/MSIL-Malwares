// Decompiled with JetBrains decompiler
// Type: SmartAssembly.SmartExceptionsCore.ReportingService
// Assembly: Crypter, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B731B599-442F-4A0A-B652-36FDF3199CF1
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\Trojan.MSIL.Zapchast.ctbt-4d7f60f5f9cd63e753868459d0468b2925cdad0dc9dd53f889e662aa428efebf.exe

using SmartAssembly.Delegates;
using SmartAssembly.HouseOfCards;
using System;
using System.Net;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

namespace SmartAssembly.SmartExceptionsCore
{
  [WebServiceBinding(Name = "ReportingServiceSoap", Namespace = "http://www.smartassembly.com/webservices/Reporting/")]
  internal sealed class ReportingService : SoapHttpClientProtocol
  {
    [NonSerialized]
    internal static GetString \u0008;

    public ReportingService(string serverUrl)
    {
      this.Url = serverUrl + ReportingService.\u0008(3251);
      this.Timeout = 180000;
    }

    [SoapDocumentMethod("http://www.smartassembly.com/webservices/Reporting/UploadReport2")]
    public string UploadReport2(
      string licenseID,
      [XmlElement(DataType = "base64Binary")] byte[] data,
      string email,
      string appFriendlyName,
      string buildFriendlyNumber)
    {
      return (string) \u0094\u0002.\u000E\u0004((object) this, ReportingService.\u0008(3272), new object[5]
      {
        (object) licenseID,
        (object) data,
        (object) email,
        (object) appFriendlyName,
        (object) buildFriendlyNumber
      })[0];
    }

    protected override WebRequest GetWebRequest(Uri uri)
    {
      WebRequest webRequest = \u0095\u0002.\u000F\u0004((object) this, uri);
      if (webRequest is HttpWebRequest httpWebRequest)
        \u0016.\u007E\u008B((object) \u0096\u0002.\u007E\u0010\u0004((object) httpWebRequest), false);
      return webRequest;
    }

    static ReportingService() => Strings.CreateGetStringDelegate(typeof (ReportingService));
  }
}
