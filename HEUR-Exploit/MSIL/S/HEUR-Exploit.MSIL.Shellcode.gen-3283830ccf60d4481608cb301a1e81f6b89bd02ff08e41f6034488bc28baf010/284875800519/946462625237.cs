// Decompiled with JetBrains decompiler
// Type: 284875800519.946462625237
// Assembly: 087135227926, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
// MVID: 0DB320EA-9C28-4716-BA63-69641BABDE67
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-3283830ccf60d4481608cb301a1e81f6b89bd02ff08e41f6034488bc28baf010.exe

using \u003048520867406;
using \u003053028810657;
using \u003065069248529;
using \u003172091972983;
using \u003226094756440;
using \u003277493558513;
using \u003284875800519;
using \u003384276752884;
using \u003545704640419;
using \u003603600525092;
using \u003658692056656;
using \u003830680403346;
using System;
using System.Collections.Generic;
using System.Reflection;

namespace \u003284875800519
{
  public class \u003946462625237 : \u003068562095717
  {
    private const string \u003307182408377 = "Key";
    private const string \u003107754003710 = "Value";
    private static readonly \u003991605103082<Type, \u003648686010507> \u003267907093081 = new \u003991605103082<Type, \u003648686010507>(new Func<Type, \u003648686010507>(\u003946462625237.\u003468192143465));

    private static \u003648686010507 \u003468192143465(Type _param0)
    {
      Type[] genericArguments = _param0.GetGenericArguments();
      Type type1 = ((IList<Type>) genericArguments)[0];
      Type type2 = ((IList<Type>) genericArguments)[1];
      return \u003648686010507.\u003926435075433(_param0, (MethodBase) _param0.GetConstructor(new Type[2]
      {
        type1,
        type2
      }), "Key", "Value");
    }

    public virtual void \u003258535009213(
      \u003632627526011 _param1,
      object _param2,
      \u003131478599170 _param3)
    {
      \u003648686010507 obj1 = \u003946462625237.\u003267907093081.Get(_param2.GetType());
      \u003200975390980 obj2 = _param3.\u003865471240500 as \u003200975390980;
      _param1.\u003038455958685();
      _param1.\u003210934969267(obj2 != null ? obj2.\u003481711761762("Key") : "Key");
      _param3.\u003054614261343(_param1, obj1.\u003147275448645(_param2, "Key"), obj1.\u003853565165575("Key"));
      _param1.\u003210934969267(obj2 != null ? obj2.\u003481711761762("Value") : "Value");
      _param3.\u003054614261343(_param1, obj1.\u003147275448645(_param2, "Value"), obj1.\u003853565165575("Value"));
      _param1.\u003908313152034();
    }

    public virtual object \u003322742949008(
      \u003250925846196 _param1,
      Type _param2,
      object _param3,
      \u003131478599170 _param4)
    {
      if (_param1.\u003271751439454 == \u003293768301571.Null)
      {
        if (!\u003560732527318.\u003876583190049(_param2))
          throw \u003479281034910.\u003188723322269(_param1, "Cannot convert null value to KeyValuePair.");
        return (object) null;
      }
      object obj1 = (object) null;
      object obj2 = (object) null;
      _param1.\u003664293826070();
      Type type = \u003560732527318.\u003876583190049(_param2) ? Nullable.GetUnderlyingType(_param2) : _param2;
      \u003648686010507 obj3 = \u003946462625237.\u003267907093081.Get(type);
      while (_param1.\u003271751439454 == \u003293768301571.PropertyName)
      {
        string a = _param1.\u003255783382022.ToString();
        if (string.Equals(a, "Key", StringComparison.OrdinalIgnoreCase))
        {
          _param1.\u003664293826070();
          obj1 = _param4.\u003939732608842(_param1, obj3.\u003853565165575("Key"));
        }
        else if (string.Equals(a, "Value", StringComparison.OrdinalIgnoreCase))
        {
          _param1.\u003664293826070();
          obj2 = _param4.\u003939732608842(_param1, obj3.\u003853565165575("Value"));
        }
        else
          _param1.\u003930609728103();
        _param1.\u003664293826070();
      }
      return obj3.\u003922898233183(new object[2]
      {
        obj1,
        obj2
      });
    }

    public virtual bool \u003159243678661(Type _param1)
    {
      Type type = \u003560732527318.\u003876583190049(_param1) ? Nullable.GetUnderlyingType(_param1) : _param1;
      return type.\u003465247563459() && type.\u003457523078059() && type.GetGenericTypeDefinition() == typeof (KeyValuePair<,>);
    }
  }
}
