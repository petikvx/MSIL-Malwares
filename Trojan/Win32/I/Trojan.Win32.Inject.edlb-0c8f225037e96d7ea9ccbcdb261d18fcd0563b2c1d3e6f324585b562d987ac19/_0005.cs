// Decompiled with JetBrains decompiler
// Type: 
// Assembly: syncui, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 32BC53D7-A239-4C18-BE53-ECC907E1DE31
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan.Win32.Inject.edlb-0c8f225037e96d7ea9ccbcdb261d18fcd0563b2c1d3e6f324585b562d987ac19.exe

using System;
using System.IO;

public class \u0005
{
  public byte[] \u0002;
  private Stream \u0003;
  private uint \u0005;
  private bool \u0008;
  private uint \u0006;
  public uint \u000E;
  public uint \u000F;
  public uint \u0002\u2000;
  private uint \u0003\u2000;
  private uint \u0005\u2000;
  private uint \u0008\u2000;
  public uint \u0006\u2000;

  public virtual void \u0005\u2004\u2006\u2008\u2002\u0002()
  {
  }

  public virtual void \u0005\u2004\u2006\u2008\u2002\u0003()
  {
  }

  public void \u0005()
  {
    this.\u0005\u2004\u2006\u2008\u2002\u0002();
    uint num1 = this.\u000E + this.\u0002\u2000 - this.\u0003\u2000;
    uint num2 = this.\u000E + this.\u0006\u2000 - num1;
    for (uint index = 0; index < num2; ++index)
      this.\u0002[(IntPtr) index] = this.\u0002[(IntPtr) (num1 + index)];
    this.\u000E -= num1;
    this.\u0005\u2004\u2006\u2008\u2002\u0003();
  }

  public virtual void \u0005\u2004\u2006\u2008\u2002\u0008()
  {
    if (this.\u0008)
      return;
    while (true)
    {
      do
      {
        int count = -(int) this.\u000E + (int) this.\u000F - (int) this.\u0006\u2000;
        if (count == 0)
          return;
        int num = this.\u0003.Read(this.\u0002, (int) this.\u000E + (int) this.\u0006\u2000, count);
        if (num == 0)
        {
          this.\u0005 = this.\u0006\u2000;
          if (this.\u000E + this.\u0005 > this.\u0006)
            this.\u0005 = this.\u0006 - this.\u000E;
          this.\u0008 = true;
          return;
        }
        this.\u0006\u2000 += (uint) num;
      }
      while (this.\u0006\u2000 < this.\u0002\u2000 + this.\u0005\u2000);
      this.\u0005 = this.\u0006\u2000 - this.\u0005\u2000;
    }
  }

  private void \u0006() => this.\u0002 = (byte[]) null;

  public void \u0002(uint _param1, uint _param2, uint _param3)
  {
    this.\u0003\u2000 = _param1;
    this.\u0005\u2000 = _param2;
    this.\u0008\u2000 = _param3;
    uint num = _param1 + _param2 + _param3;
    if (this.\u0002 == null || (int) this.\u000F != (int) num)
    {
      this.\u0006();
      this.\u000F = num;
      this.\u0002 = new byte[(IntPtr) this.\u000F];
    }
    this.\u0006 = this.\u000F - _param2;
  }

  public void \u0008\u2004\u2006\u2008\u2002\u0002(Stream _param1)
  {
    this.\u0003 = _param1;
    this.\u000E = 0U;
    this.\u0002\u2000 = 0U;
    this.\u0006\u2000 = 0U;
    this.\u0008 = false;
    this.\u0005\u2004\u2006\u2008\u2002\u0008();
  }

  public void \u0008\u2004\u2006\u2008\u2002\u0002() => this.\u0003 = (Stream) null;

  public void \u0008\u2004\u2006\u2008\u2002\u0003()
  {
    ++this.\u0002\u2000;
    if (this.\u0002\u2000 <= this.\u0005)
      return;
    if (this.\u000E + this.\u0002\u2000 > this.\u0006)
      this.\u0005();
    this.\u0005\u2004\u2006\u2008\u2002\u0008();
  }

  public byte \u0008\u2004\u2006\u2008\u2002\u0002(int _param1) => this.\u0002[(long) (this.\u000E + this.\u0002\u2000) + (long) _param1];

  public uint \u0008\u2004\u2006\u2008\u2002\u0002(int _param1, uint _param2, uint _param3)
  {
    if (this.\u0008 && (long) this.\u0002\u2000 + (long) _param1 + (long) _param3 > (long) this.\u0006\u2000)
      _param3 = this.\u0006\u2000 - (uint) ((ulong) this.\u0002\u2000 + (ulong) _param1);
    ++_param2;
    uint num1 = (uint) ((int) this.\u000E + (int) this.\u0002\u2000 + _param1);
    uint num2 = 0;
    while (num2 < _param3 && (int) this.\u0002[(IntPtr) (num1 + num2)] == (int) this.\u0002[(IntPtr) (num1 + num2 - _param2)])
      ++num2;
    return num2;
  }

  public uint \u0008\u2004\u2006\u2008\u2002\u0002() => this.\u0006\u2000 - this.\u0002\u2000;

  public void \u0002(int _param1)
  {
    this.\u000E += (uint) _param1;
    this.\u0005 -= (uint) _param1;
    this.\u0002\u2000 -= (uint) _param1;
    this.\u0006\u2000 -= (uint) _param1;
  }
}
