// Decompiled with JetBrains decompiler
// Type: Ny72.Sz6e
// Assembly: Ca98, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: F60F023D-6C20-458A-8FE1-30C85400304B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.10-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-50b584cc4677a24af400fb4682919ce3c2e3be14a9820681141acd6c44e7729d.exe

using Dx1;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.ApplicationServices;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security;
using System.Windows.Forms;

namespace Ny72
{
  [EditorBrowsable(EditorBrowsableState.Never)]
  [GeneratedCode("MyTemplate", "11.0.0.0")]
  internal sealed class Sz6e : ConsoleApplicationBase
  {
    [SecuritySafeCritical]
    internal static Assembly Sz80<Xy7i>([In] Xy7i obj0, [In] short obj1, [In] int obj2) where Xy7i : System.Type
    {
label_3:
      int num1 = 0;
      int num2 = 1;
      ICustomAttributeProvider attributeProvider;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 2:
            attributeProvider = (ICustomAttributeProvider) obj0.Assembly;
            num2 = 8;
            continue;
          case 1:
            int num3;
            switch (((int) obj1 ^ obj2) - 30 ^ num1)
            {
              case 0:
                num3 = 2;
                break;
              default:
                num3 = 11;
                break;
            }
            num2 = num3;
            continue;
          case 4:
            goto label_3;
          case 5:
            num2 = 1;
            continue;
          case 6:
          case 9:
            goto label_12;
          case 7:
            num2 = 1;
            continue;
          case 8:
          case 10:
            ++num1;
            int num4 = (int) obj1;
            num2 = (num4 * num4 + (int) obj1) % 2 == 0 ? 9 : 5;
            continue;
          case 11:
            attributeProvider = (ICustomAttributeProvider) null;
            num2 = 8;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Sz6e.Sz80);
            num2 = 4;
            continue;
        }
      }
label_12:
      return attributeProvider as Assembly;
    }

    [SecuritySafeCritical]
    internal static void j1JZ<p6S9>([In] p6S9 obj0, [In] FlatStyle obj1, [In] char obj2, [In] char obj3) where p6S9 : ButtonBase
    {
      int num1 = 0;
      int num2;
      int num3;
      while (true)
      {
        switch (num1)
        {
          case 1:
          case 7:
            obj0.FlatStyle = obj1;
            goto case 8;
          case 3:
            goto label_11;
          case 4:
            goto label_12;
          case 5:
            int num4;
            switch (((int) obj2 ^ (int) obj3) - (int) sbyte.MaxValue ^ num2)
            {
              case 0:
                num4 = 7;
                break;
              default:
                num4 = 6;
                break;
            }
            num1 = num4;
            continue;
          case 6:
            num1 = 8;
            continue;
          case 8:
            ++num2;
            int num5 = (int) obj3;
            int num6 = num5 * num5;
            num3 = (int) obj3 + num6;
            num1 = 9;
            continue;
          case 9:
            num1 = num3 % 2 != 0 ? 5 : 3;
            continue;
          default:
            num2 = 0;
            num1 = 5;
            continue;
        }
      }
label_11:
      return;
label_12:;
    }

    [SecuritySafeCritical]
    internal static string Nk7j<Hx04>([In] Hx04 obj0, [In] short obj1, [In] short obj2) where Hx04 : AssemblyInfo
    {
label_3:
      int num1 = 0;
      int num2 = 4;
      IComparable comparable;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 7:
            comparable = (IComparable) obj0.Title;
            num2 = 6;
            continue;
          case 1:
          case 6:
            ++num1;
            int num3 = (int) obj2;
            num2 = (num3 * num3 + (int) obj2) % 2 == 0 ? 3 : 12;
            continue;
          case 2:
            goto label_3;
          case 3:
            goto label_17;
          case 4:
            int num4;
            switch (((int) obj1 ^ (int) obj2) - 23 ^ num1)
            {
              case 0:
                num4 = 7;
                break;
              case 1:
                num4 = 13;
                break;
              case 2:
                num4 = 8;
                break;
              default:
                num4 = 9;
                break;
            }
            num2 = num4;
            continue;
          case 5:
            num2 = 6;
            continue;
          case 8:
            comparable = (IComparable) obj0.ProductName;
            num2 = 6;
            continue;
          case 9:
            comparable = (IComparable) null;
            goto case 5;
          case 10:
            num2 = 4;
            continue;
          case 12:
            num2 = 4;
            continue;
          case 13:
            comparable = (IComparable) obj0.AssemblyName;
            num2 = 6;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Sz6e.Nk7j);
            num2 = 2;
            continue;
        }
      }
label_17:
      return (string) comparable;
    }

    [SecuritySafeCritical]
    internal static string Wt5c<Nz64>([In] Nz64 obj0, [In] char obj1, [In] int obj2) where Nz64 : string
    {
label_3:
      int num1 = 0;
      int num2 = 8;
      ICloneable cloneable;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 1:
            cloneable = (ICloneable) Strings.Trim((string) obj0);
            num2 = 9;
            continue;
          case 2:
            goto label_15;
          case 3:
            num2 = 8;
            continue;
          case 4:
            num2 = 8;
            continue;
          case 6:
            goto label_3;
          case 7:
            cloneable = (ICloneable) Path.GetFileNameWithoutExtension((string) obj0);
            num2 = 9;
            continue;
          case 8:
            int num3;
            switch (((int) obj1 ^ obj2) - 110 ^ num1)
            {
              case 0:
                num3 = 7;
                break;
              case 1:
                num3 = 0;
                break;
              default:
                num3 = 11;
                break;
            }
            num2 = num3;
            continue;
          case 9:
            ++num1;
            num2 = 6552 > 936 - 593 * 7 ? 2 : 4;
            continue;
          case 10:
            num2 = 9;
            continue;
          case 11:
          case 12:
            cloneable = (ICloneable) null;
            goto case 10;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Sz6e.Wt5c);
            num2 = 6;
            continue;
        }
      }
label_15:
      return (string) cloneable;
    }

    [SecuritySafeCritical]
    internal static void Ft75<p2CD>([In] p2CD obj0, [In] bool obj1, [In] char obj2, [In] int obj3) where p2CD : GroupBox
    {
      int num1 = 4;
      int num2;
      while (true)
      {
        switch (num1)
        {
          case 0:
            goto label_10;
          case 1:
            goto label_11;
          case 2:
          case 6:
            obj0.TabStop = obj1;
            goto case 3;
          case 3:
          case 5:
            int num3 = num2;
            e0N.E[217] = (char) ((int) e0N.E[217] + obj3 & 166);
            num2 = num3 + 1;
            num1 = 155 < 465 / 3 - 149 ? 8 : 1;
            continue;
          case 7:
            num1 = 5;
            continue;
          case 8:
            int num4;
            switch ((obj3 ^ (int) obj2) - 29 ^ num2)
            {
              case 0:
                num4 = 6;
                break;
              default:
                num4 = 7;
                break;
            }
            num1 = num4;
            continue;
          default:
            num2 = 0;
            num1 = 8;
            continue;
        }
      }
label_10:
      return;
label_11:;
    }

    [SecuritySafeCritical]
    internal static string Lb16<q9RT>([In] q9RT obj0, [In] short obj1, [In] short obj2) where q9RT : Label
    {
label_3:
      int num1 = 0;
      int num2 = 4;
      IComparable comparable;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 8:
            comparable = (IComparable) obj0.Text;
            num2 = 1;
            continue;
          case 1:
            ++num1;
            goto case 2;
          case 2:
            num2 = 76 < 228 / 3 - 23 ? 4 : 6;
            continue;
          case 3:
          case 7:
            goto label_3;
          case 4:
            int num3;
            switch (((int) obj1 ^ (int) obj2) - 25 ^ num1)
            {
              case 0:
                num3 = 0;
                break;
              default:
                num3 = 5;
                break;
            }
            num2 = num3;
            continue;
          case 5:
            comparable = (IComparable) null;
            num2 = 1;
            continue;
          case 6:
            goto label_12;
          case 10:
            num2 = 4;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Sz6e.Lb16);
            num2 = 3;
            continue;
        }
      }
label_12:
      return (string) comparable;
    }

    [StructLayout(LayoutKind.Auto)]
    internal struct Xj34
    {
      internal PictureBox J;
      internal Label K;
      internal Label m;
      internal Label a;
      internal IContainer b;
    }

    [StructLayout(LayoutKind.Auto)]
    internal struct x6X4
    {
      internal MenuStrip o;
      internal ToolStripSeparator a;
      internal ToolStripMenuItem G;
      internal ToolStripMenuItem K;
      internal ToolStripMenuItem P;
      internal ToolStripMenuItem v;
      internal ToolStripMenuItem F;
      internal ColumnHeader L;
      internal TextBox R;
      internal Label i;
      internal Label W;
      internal Label B;
      internal ComboBox D;
      internal SqlConnection Y;
      internal DataTable U;
    }

    internal sealed class k8HC
    {
      internal IContainer F;
      internal ToolStripMenuItem p;
      internal ToolStripMenuItem d;
      internal ToolStripMenuItem e;
      internal TextBox C;
      internal Label K;
      internal Label s;
      internal Label W;
      internal ComboBox m;
      internal NumericUpDown Q;
      internal Label j;
      internal TextBox V;
      internal Label Y;
      internal Button A;
      internal Label R;
      internal TextBox O;
      internal Label h;
      internal DateTimePicker g;
      internal GroupBox B;
      internal Button u;
      internal TextBox L;
      internal Button n;
      internal Label i;
      internal Label x;
      internal Label t;
      internal Label z;
      internal Label pF;
      internal Label pp;
      internal Label pd;
      internal Label pe;
      internal Button pC;
      internal bool pK;
      internal string ps;
      internal string pW;
      internal int pm;
      internal string pQ;
      internal string pj;
      internal Decimal pV;
      internal int pY;
      internal string pA;
      internal string pR;
      internal string pO;
      internal Decimal ph;
      internal Decimal pg;
      internal Decimal pB;
      internal string pu;

      internal k8HC()
      {
      }
    }
  }
}
