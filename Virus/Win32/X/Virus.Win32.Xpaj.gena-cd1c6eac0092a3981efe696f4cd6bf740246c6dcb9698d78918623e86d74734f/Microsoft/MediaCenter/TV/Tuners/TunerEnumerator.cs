// Decompiled with JetBrains decompiler
// Type: Microsoft.MediaCenter.TV.Tuners.TunerEnumerator
// Assembly: Microsoft.MediaCenter.TV.Tuners.Interop, Version=6.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
// MVID: 4545DFBD-7834-4511-B0E8-46F2D6BF39B8
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00007-msil\Virus.Win32.Xpaj.gena-cd1c6eac0092a3981efe696f4cd6bf740246c6dcb9698d78918623e86d74734f.exe

using msclr;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.InteropServices;

namespace Microsoft.MediaCenter.TV.Tuners
{
  public class TunerEnumerator : ITunerEnumerator
  {
    private IEnumerator<Tuner> m_enum;
    private object m_Lock;

    [CLSCompliant(false)]
    internal TunerEnumerator(Tuner[] a)
    {
      this.m_enum = ((IEnumerable<Tuner>) a).GetEnumerator();
      this.m_Lock = new object();
      // ISSUE: explicit constructor call
      base.\u002Ector();
    }

    private void \u0021TunerEnumerator()
    {
      @lock lock1 = new @lock(this.m_Lock);
      @lock lock2;
      // ISSUE: fault handler
      try
      {
        lock2 = lock1;
        this.m_enum?.Dispose();
        this.m_enum = (IEnumerator<Tuner>) null;
      }
      __fault
      {
        lock2.Dispose();
      }
      lock2.Dispose();
    }

    private void \u007ETunerEnumerator() => this.\u0021TunerEnumerator();

    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
    public virtual Tuner Current
    {
      get
      {
        @lock lock1 = new @lock(this.m_Lock);
        @lock lock2;
        Tuner current;
        try
        {
          lock2 = lock1;
          current = \u003CModule\u003E.Microsoft\u002EMediaCenter\u002ETV\u002ETuners\u002Ememberwise_ref_clone\u003Cclass\u0020Microsoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATuner\u0020\u005E\u003E(this.m_enum.Current);
        }
        __fault
        {
          lock2.Dispose();
        }
        lock2.Dispose();
        return current;
      }
    }

    object IEnumerator.IEnumerator_get_Current()
    {
      @lock lock1 = new @lock(this.m_Lock);
      @lock lock2;
      object current;
      // ISSUE: fault handler
      try
      {
        lock2 = lock1;
        current = (object) \u003CModule\u003E.Microsoft\u002EMediaCenter\u002ETV\u002ETuners\u002Ememberwise_ref_clone\u003Cclass\u0020Microsoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATuner\u0020\u005E\u003E(this.m_enum.Current);
      }
      __fault
      {
        lock2.Dispose();
      }
      lock2.Dispose();
      return current;
    }

    public virtual void Reset() => this.m_enum.Reset();

    [return: MarshalAs(UnmanagedType.U1)]
    public virtual bool MoveNext() => this.m_enum.MoveNext();

    protected virtual void Dispose([MarshalAs(UnmanagedType.U1)] bool _param1)
    {
      if (_param1)
      {
        this.\u0021TunerEnumerator();
      }
      else
      {
        try
        {
          this.\u0021TunerEnumerator();
        }
        finally
        {
          // ISSUE: explicit finalizer call
          base.Finalize();
        }
      }
    }

    public virtual void Dispose()
    {
      this.Dispose(true);
      GC.SuppressFinalize((object) this);
    }

    ~TunerEnumerator() => this.Dispose(false);
  }
}
