// Decompiled with JetBrains decompiler
// Type: #Rh.#Xh
// Assembly: qouzb, Version=0.0.0.0, Culture=neutral, PublicKeyToken=34256fcd934ca661
// MVID: 528C9DDA-94F5-4688-B6FB-056FFA07C362
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-Spy.Win32.Generic-6c64cd522d7e6f3c0b6f0116271cde81e35213ad4a360fe569f48f99fd473e62.exe

using \u0023de;
using \u0023Ff;
using \u0023Rh;
using System;
using System.Collections;
using System.ComponentModel;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Windows.Forms;

namespace \u0023Rh
{
  internal class \u0023Xh : Form
  {
    private \u0023nf \u0023nf;
    internal Button \u0023Th;
    internal Button \u0023Uh;
    internal \u00232f \u0023lh;
    internal \u0023Ef \u0023rf;
    internal \u00238f \u00238f;
    private IContainer \u0023oh;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public \u0023Xh()
    {
      int num1 = 2;
      IEnumerator enumerator1;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 3:
              this.Text = \u0023\u0023.\u0023Gi(this.Text, this);
              if (this.Text.Length == 0)
                this.Text = "Security Exception";
              enumerator1 = this.Controls.GetEnumerator();
              num2 = 6;
              continue;
            case 1:
            case 5:
              goto label_1;
            case 2:
              goto label_6;
            case 4:
              this.Icon = \u0023\u0023.\u0023Wj();
              goto case 0;
            case 6:
              goto label_10;
            default:
              goto label_5;
          }
        }
label_1:
        \u0023\u0023.\u0023Pk(this);
        num1 = 4;
        continue;
label_5:
        num1 = 0;
        continue;
label_6:
        // ISSUE: explicit constructor call
        base.\u002Ector();
        num1 = 5;
      }
label_10:
      try
      {
        while (enumerator1.MoveNext())
        {
          Control current1 = (Control) enumerator1.Current;
          current1.Text = \u0023\u0023.\u0023Gi(current1.Text, this);
          IEnumerator enumerator2 = current1.Controls.GetEnumerator();
          try
          {
label_17:
            while (enumerator2.MoveNext())
            {
              Control current2 = (Control) enumerator2.Current;
              int num3 = 2;
              if (\u0023Xh.S7i1mBwKHCLcXIMPflC())
                goto label_15;
label_14:
              current2.Text = \u0023\u0023.\u0023Gi(current2.Text, this);
              continue;
label_15:
              while (true)
              {
                switch (num3)
                {
                  case 0:
                  case 2:
                    goto label_14;
                  case 1:
                  case 3:
                    goto label_17;
                  default:
                    if (true)
                    {
                      num3 = 3;
                      continue;
                    }
                    goto label_17;
                }
              }
            }
          }
          finally
          {
            if (enumerator2 is IDisposable disposable)
              disposable.Dispose();
          }
        }
      }
      finally
      {
        if (enumerator1 is IDisposable disposable)
          disposable.Dispose();
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public \u0023Xh([In] \u0023nf obj0)
    {
      int num1 = 7;
      while (true)
      {
        int num2 = num1;
        StringBuilder stringBuilder;
        while (true)
        {
          switch (num2)
          {
            case 0:
              stringBuilder.Append(obj0.\u0023jf.Message);
              this.\u0023rf.Text = \u0023\u0023.\u0023Gi(stringBuilder.ToString(), this);
              break;
            case 1:
            case 4:
              if (!obj0.\u0023mf)
                goto case 0;
              else
                goto label_7;
            case 2:
            case 5:
label_11:
              this.\u0023nf = obj0;
              if (obj0.\u0023kf.Length <= 0)
              {
                stringBuilder = new StringBuilder();
                stringBuilder.Append("%AppName% attempted to perform an operation not allowed by the security policy. To grant this application the required permission, contact your system administrator, or use the Microsoft .NET Framework Configuration tool.\n\n");
                goto case 1;
              }
              else
                goto label_12;
            case 3:
              this.\u0023rf.Text = obj0.\u0023kf;
              break;
            case 6:
              if (obj0 != null)
              {
                if (obj0.\u0023mf)
                  goto case 2;
                else
                  goto label_16;
              }
              else
                goto label_19;
            case 7:
              goto label_17;
            case 8:
              goto label_14;
            default:
              goto label_5;
          }
          int height = this.\u0023rf.Bottom + 60;
          if (height > this.ClientSize.Height)
          {
            this.ClientSize = new Size(this.ClientSize.Width, height);
            if (true)
              num2 = 8;
            else
              goto label_11;
          }
          else
            goto label_20;
        }
label_5:
        num1 = 1;
        continue;
label_7:
        stringBuilder.Append("If you click Continue, the application will ignore this error and attempt to continue. If you click Quit, the application will close immediately.\n\n");
        num1 = 0;
        continue;
label_12:
        num1 = 3;
        continue;
label_16:
        this.\u0023Th.Visible = false;
        num1 = 5;
        continue;
label_17:
        // ISSUE: explicit constructor call
        this.\u002Ector();
        num1 = 6;
      }
label_14:
      return;
label_20:
      return;
label_19:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    void Form.\u0023Sf([In] bool obj0)
    {
      int num1 = 4;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 4:
              if (obj0)
              {
                if (!\u0023Xh.Wua7Adw57SSuk8wLu5C())
                {
                  num2 = 3;
                  continue;
                }
                goto label_10;
              }
              else
                goto label_7;
            case 1:
            case 3:
              goto label_1;
            case 2:
              goto label_6;
            case 5:
              goto label_2;
            default:
              if (true)
              {
                num2 = 2;
                continue;
              }
              goto label_6;
          }
        }
label_1:
        if (this.\u0023oh == null)
          goto label_7;
label_6:
        this.\u0023oh.Dispose();
label_7:
        // ISSUE: explicit non-virtual call
        __nonvirtual (((Form) this).Dispose(obj0));
        num1 = 5;
      }
label_2:
      return;
label_10:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal void \u0023Vh([In] object obj0, [In] EventArgs obj1)
    {
      int num1 = 3;
      if (true)
        goto label_5;
label_1:
      int num2;
      if (this.\u0023nf != null)
        num2 = 4;
      else
        goto label_7;
label_4:
      num1 = num2;
label_5:
      switch (num1)
      {
        case 0:
        case 3:
          goto label_1;
        case 1:
        case 4:
          this.\u0023nf.\u0023ff = true;
          break;
        case 2:
          break;
        case 5:
          return;
        default:
          num2 = 2;
          goto label_4;
      }
label_7:
      this.Close();
      int num3 = 5;
      num1 = \u0023Xh.Wua7Adw57SSuk8wLu5C() ? num3 : num3;
      goto label_5;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal void \u0023Wh([In] object obj0, [In] EventArgs obj1)
    {
      int num1 = 3;
      if (\u0023Xh.Wua7Adw57SSuk8wLu5C())
        ;
      while (true)
      {
        int num2;
        switch (num1)
        {
          case 0:
          case 1:
            this.\u0023nf.\u0023ff = false;
            goto case 2;
          case 2:
          case 4:
            this.Close();
            num2 = 5;
            break;
          case 3:
            if (this.\u0023nf != null)
            {
              num2 = 0;
              break;
            }
            goto case 2;
          case 5:
            goto label_1;
          default:
            num2 = 4;
            break;
        }
        num1 = num2;
      }
label_1:;
    }

    internal static bool S7i1mBwKHCLcXIMPflC() => true;

    internal static bool Wua7Adw57SSuk8wLu5C() => false;
  }
}
