// Decompiled with JetBrains decompiler
// Type: Cradiator.Views.CradiatorPresenter
// Assembly: EvidenceTypeDescript, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B50F5F07-D63E-4094-B80D-E78774C87D41
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan.MSIL.Crypt.gen-c59c8e3be7ec42553ff6af2588e3bcd0569e9467dbb9307218fb8724e02739f2.exe

using Cradiator.Commands;
using Cradiator.Config;
using Cradiator.Config.ChangeHandlers;
using Cradiator.Model;

namespace Cradiator.Views
{
  public class CradiatorPresenter : IConfigObserver
  {
    private readonly ICradiatorView _view;
    private readonly IConfigSettings _configSettings;
    private readonly ConfigChangeHandlerFarm _changeHandlerFarm;
    private readonly ISkinLoader _skinLoader;
    private readonly IScreenUpdater _screenUpdater;
    private readonly IConfigFileWatcher _configFileWatcher;

    public CradiatorPresenter(
      ICradiatorView view,
      IConfigSettings configSettings,
      IConfigFileWatcher configFileWatcher,
      ISkinLoader skinLoader,
      ConfigChangeHandlerFarm changeHandlerFarm,
      IScreenUpdater screenUpdater,
      InputBindingAdder inputBindingAdder)
    {
      this._view = view;
      view.Presenter = this;
      this._configSettings = configSettings;
      this._configFileWatcher = configFileWatcher;
      this._screenUpdater = screenUpdater;
      this._skinLoader = skinLoader;
      this._changeHandlerFarm = changeHandlerFarm;
      inputBindingAdder.AddBindings();
      configSettings.AddObserver((IConfigObserver) this);
    }

    public void Init()
    {
      this._view.ShowCountdown(this._configSettings.ShowCountdown);
      this._skinLoader.Load(new Skin(this._configSettings.SkinName));
      this.UpdateScreen();
      this._configFileWatcher.Start();
    }

    public void UpdateScreen() => this._screenUpdater.Update();

    public void ConfigUpdated(ConfigSettings newSettings) => this._changeHandlerFarm.UpdateAll(newSettings);
  }
}
