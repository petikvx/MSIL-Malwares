// Decompiled with JetBrains decompiler
// Type: 220610547570.519308138513
// Assembly: 044201292638, Version=5.6.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35
// MVID: 5F642552-7ED7-4776-987B-53B72981CCE1
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Exploit.MSIL.Shellcode.gen-faabdbc465517c5e1ee24d7762bb002ee94c4be547badebd74bcaba4551155e8.exe

using \u003220610547570;
using System;
using System.Collections.Concurrent;
using System.Collections.Generic;

namespace \u003220610547570
{
  public struct \u003519308138513 : IEquatable<\u003519308138513>
  {
    private static ConcurrentDictionary<string, \u003519308138513> \u003561768645491 = new ConcurrentDictionary<string, \u003519308138513>((IEqualityComparer<string>) StringComparer.OrdinalIgnoreCase);
    public static readonly \u003519308138513 \u003201842417362 = \u003519308138513.\u003839272276055("project");
    public static readonly \u003519308138513 \u003725180946638 = \u003519308138513.\u003839272276055("externalProject");
    public static readonly \u003519308138513 \u003159565490933 = \u003519308138513.\u003839272276055("package");
    public static readonly \u003519308138513 \u003751898128182 = \u003519308138513.\u003839272276055("assembly");
    public static readonly \u003519308138513 \u003650654033952 = \u003519308138513.\u003839272276055("reference");
    public static readonly \u003519308138513 \u003249555789088 = \u003519308138513.\u003839272276055("winmd");
    public static readonly \u003519308138513 \u003566419396234 = \u003519308138513.\u003839272276055("unresolved");

    public string \u003378653287174 { get; }

    public bool \u003275176849786 { get; }

    private \u003519308138513(string value, bool isKnown)
    {
      this.\u003378653287174 = value;
      this.\u003275176849786 = isKnown;
    }

    public static \u003519308138513 \u003510999793357(string _param0)
    {
      \u003519308138513 obj;
      return \u003519308138513.\u003561768645491.TryGetValue(_param0, out obj) ? obj : new \u003519308138513(_param0, false);
    }

    public virtual string \u003215252981103() => this.\u003378653287174;

    public bool \u003620231021034(\u003519308138513 _param1) => string.Equals(_param1.\u003378653287174, this.\u003378653287174, StringComparison.OrdinalIgnoreCase);

    public virtual bool \u003544819986395(object _param1) => _param1 is \u003519308138513 obj && this.\u003620231021034(obj);

    public static bool operator ==(\u003519308138513 left, \u003519308138513 right) => left.\u003620231021034(right);

    public static bool operator !=(\u003519308138513 left, \u003519308138513 right) => !left.\u003620231021034(right);

    public static implicit operator string(\u003519308138513 libraryType) => libraryType.\u003378653287174;

    public virtual int \u003478734011746() => string.IsNullOrEmpty(this.\u003378653287174) ? 0 : StringComparer.OrdinalIgnoreCase.GetHashCode(this.\u003378653287174);

    private static \u003519308138513 \u003839272276055(string _param0)
    {
      \u003519308138513 obj = new \u003519308138513(_param0, true);
      \u003519308138513.\u003561768645491[_param0] = obj;
      return obj;
    }
  }
}
