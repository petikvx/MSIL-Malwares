// Decompiled with JetBrains decompiler
// Type: c5C.Ba1
// Assembly: k3F4, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: EF2862A8-7088-4F2B-ADD5-AFDC446098D9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-ee71029a7b3d9d85e7a6c7c0ecc35d93ee37514713ba5033d491a0d7506e947b.exe

using An9;
using Bz9;
using m5F8;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data.Linq;
using System.Drawing;
using System.Drawing.Printing;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;
using System.Resources;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Text;
using System.Windows.Forms;
using x3J;
using x7X;
using z0R5;
using z5JZ;

namespace c5C
{
  [DesignerGenerated]
  public class Ba1 : Form
  {
    [AccessedThroughProperty("Ⴄ")]
    private ComboBox ႤႤ;
    [AccessedThroughProperty("Ⴐ")]
    private Label ႤႭ;
    [AccessedThroughProperty("Ⴍ")]
    private Label ႤႷ;
    [AccessedThroughProperty("Ⴅ")]
    private Label ႤႥ;
    [AccessedThroughProperty("Ⴗ")]
    private TextBox ႤႨ;
    [AccessedThroughProperty("Ⴓ")]
    private TextBox ႤႣ;
    [AccessedThroughProperty("Ⴜ")]
    private Label ႤႰ;
    [AccessedThroughProperty("ႣႤ")]
    private DataGridView ႤႼ;
    [AccessedThroughProperty("ႣႭ")]
    private Label ႠႠ;
    [AccessedThroughProperty("ႣႥ")]
    private Label ႠႭ;
    [AccessedThroughProperty("ႣႷ")]
    private Label ႠႷ;
    [AccessedThroughProperty("ႣႼ")]
    private PrintPreviewDialog ႠႰ;
    internal static o5ZT Ⴀ;
    internal static byte[] Ⴈ;
    private Sb0.g3G.Yc5 Ⴓ;

    public Ba1()
    {
      this.Load += new EventHandler(this.Mf4);
      this.Shown += new EventHandler(this.Ko9);
      this.Py7();
    }

    protected virtual void Aw6([In] bool obj0)
    {
      try
      {
        if (!obj0 || this.Ⴓ.Ⴗ == null)
          return;
        this.Ⴓ.Ⴗ.Dispose();
      }
      finally
      {
        this.Dispose(obj0);
      }
    }

    private void Py7()
    {
      object obj = (object) new ComponentResourceManager(typeof (Ba1));
      this.Ⴄ = new ComboBox();
      this.Ⴃ = new ComboBox();
      this.Ⴐ = new Label();
      this.Ⴍ = new Label();
      this.Ⴅ = new Label();
      this.Ⴗ = new TextBox();
      this.Ⴓ = new TextBox();
      this.Ⴜ = new Label();
      this.ႣႤ = new DataGridView();
      this.ႣႣ = new Label();
      this.ႣႰ = new Label();
      this.ႣႭ = new Label();
      this.ႣႥ = new Label();
      this.ႣႷ = new Label();
      this.ႣႳ = new Button();
      this.ႣႠ = new Button();
      this.ႣႨ = new PrintDocument();
      this.ႣႼ = new PrintPreviewDialog();
      ((ISupportInitialize) this.ႣႤ).BeginInit();
      this.SuspendLayout();
      this.Ⴄ.DropDownStyle = ComboBoxStyle.DropDownList;
      this.Ⴄ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴄ.FormattingEnabled = true;
      this.Ⴄ.Items.AddRange(new object[3]
      {
        (object) "All",
        (object) "Male",
        (object) "Female"
      });
      this.Ⴄ.Location = new Point(857, 97);
      this.Ⴄ.Name = "cboGender";
      this.Ⴄ.Size = new Size(110, 28);
      this.Ⴄ.TabIndex = 4;
      this.Ⴃ.DropDownStyle = ComboBoxStyle.DropDownList;
      this.Ⴃ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴃ.FormattingEnabled = true;
      this.Ⴃ.Items.AddRange(new object[5]
      {
        (object) "All",
        (object) "IT Dept.",
        (object) "HR Dept.",
        (object) "Accounting Dept.",
        (object) "Marketing Dept."
      });
      this.Ⴃ.Location = new Point(604, 96);
      this.Ⴃ.Name = "cboDepart";
      this.Ⴃ.Size = new Size(152, 28);
      this.Ⴃ.TabIndex = 3;
      this.Ⴐ.AutoSize = true;
      this.Ⴐ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴐ.Location = new Point(772, 102);
      this.Ⴐ.Name = "Label4";
      this.Ⴐ.Size = new Size(79, 20);
      this.Ⴐ.TabIndex = 82;
      this.Ⴐ.Text = "Gender :";
      this.Ⴍ.AutoSize = true;
      this.Ⴍ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴍ.Location = new Point(484, 100);
      this.Ⴍ.Name = "Label3";
      this.Ⴍ.Size = new Size(114, 20);
      this.Ⴍ.TabIndex = 81;
      this.Ⴍ.Text = "Department :";
      this.Ⴅ.AutoSize = true;
      this.Ⴅ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴅ.Location = new Point(247, 100);
      this.Ⴅ.Name = "Label2";
      this.Ⴅ.Size = new Size(70, 20);
      this.Ⴅ.TabIndex = 80;
      this.Ⴅ.Text = "Name : ";
      this.Ⴗ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴗ.Location = new Point(323, 97);
      this.Ⴗ.Name = "txtName";
      this.Ⴗ.Size = new Size(155, 26);
      this.Ⴗ.TabIndex = 2;
      this.Ⴓ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴓ.Location = new Point(125, 98);
      this.Ⴓ.Name = "txtStaffid";
      this.Ⴓ.Size = new Size(116, 26);
      this.Ⴓ.TabIndex = 1;
      this.Ⴜ.AutoSize = true;
      this.Ⴜ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴜ.Location = new Point(8, 101);
      this.Ⴜ.Name = "Label1";
      this.Ⴜ.Size = new Size(114, 20);
      this.Ⴜ.TabIndex = 77;
      this.Ⴜ.Text = "HR Staff ID :";
      this.ႣႤ.AllowUserToAddRows = false;
      this.ႣႤ.AllowUserToDeleteRows = false;
      this.ႣႤ.Anchor = AnchorStyles.Top | AnchorStyles.Bottom | AnchorStyles.Left | AnchorStyles.Right;
      this.ႣႤ.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.AllCells;
      this.ႣႤ.AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.AllCells;
      this.ႣႤ.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize;
      this.ႣႤ.Location = new Point(12, 152);
      this.ႣႤ.Name = "dgv";
      this.ႣႤ.ReadOnly = true;
      this.ႣႤ.RowTemplate.Height = 28;
      this.ႣႤ.SelectionMode = DataGridViewSelectionMode.FullRowSelect;
      this.ႣႤ.Size = new Size(963, 293);
      this.ႣႤ.TabIndex = 76;
      this.ႣႣ.Font = new Font("Microsoft Sans Serif", 11f, FontStyle.Bold | FontStyle.Underline, GraphicsUnit.Point, (byte) 0);
      this.ႣႣ.Location = new Point(7, 26);
      this.ႣႣ.Name = "Label11";
      this.ႣႣ.Size = new Size(236, 59);
      this.ႣႣ.TabIndex = 75;
      this.ႣႣ.Text = "Select a HR/Staff to Update or Delete";
      this.ႣႰ.AutoSize = true;
      this.ႣႰ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႣႰ.Location = new Point(275, 46);
      this.ႣႰ.Name = "Label9";
      this.ႣႰ.Size = new Size(172, 20);
      this.ႣႰ.TabIndex = 87;
      this.ႣႰ.Text = "Welcome, Manager !";
      this.ႣႭ.BackColor = SystemColors.ActiveCaption;
      this.ႣႭ.BorderStyle = BorderStyle.FixedSingle;
      this.ႣႭ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႣႭ.Location = new Point(595, 45);
      this.ႣႭ.Name = "lblHRname";
      this.ႣႭ.Size = new Size(125, 30);
      this.ႣႭ.TabIndex = 86;
      this.ႣႥ.BackColor = SystemColors.ActiveCaption;
      this.ႣႥ.BorderStyle = BorderStyle.FixedSingle;
      this.ႣႥ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႣႥ.Location = new Point(464, 45);
      this.ႣႥ.Name = "lblHRid";
      this.ႣႥ.Size = new Size(125, 30);
      this.ႣႥ.TabIndex = 85;
      this.ႣႷ.AutoSize = true;
      this.ႣႷ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႣႷ.Location = new Point(8, 459);
      this.ႣႷ.Name = "lblCount";
      this.ႣႷ.Size = new Size(98, 20);
      this.ႣႷ.TabIndex = 89;
      this.ႣႷ.Text = "X record(s)";
      this.ႣႳ.BackColor = Color.IndianRed;
      this.ႣႳ.Cursor = Cursors.Hand;
      this.ႣႳ.DialogResult = DialogResult.Cancel;
      this.ႣႳ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႣႳ.ForeColor = SystemColors.ControlLightLight;
      this.ႣႳ.Location = new Point(849, 43);
      this.ႣႳ.Name = "btnHome";
      this.ႣႳ.Size = new Size(118, 40);
      this.ႣႳ.TabIndex = 6;
      this.ႣႳ.Text = "&HomePage";
      this.ႣႳ.UseVisualStyleBackColor = false;
      this.ႣႠ.BackColor = Color.MediumSeaGreen;
      this.ႣႠ.Cursor = Cursors.Hand;
      this.ႣႠ.Font = new Font("Microsoft Sans Serif", 10f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႣႠ.ForeColor = SystemColors.ControlLightLight;
      this.ႣႠ.Location = new Point(734, 45);
      this.ႣႠ.Name = "btnPrint";
      this.ႣႠ.Size = new Size(109, 37);
      this.ႣႠ.TabIndex = 5;
      this.ႣႠ.Text = "&Print";
      this.ႣႠ.UseVisualStyleBackColor = false;
      this.ႣႼ.AutoScrollMargin = new Size(0, 0);
      this.ႣႼ.AutoScrollMinSize = new Size(0, 0);
      this.ႣႼ.ClientSize = new Size(400, 300);
      this.ႣႼ.Enabled = true;
      this.ႣႼ.Icon = (Icon) ((ResourceManager) obj).GetObject("dlgPreview.Icon");
      this.ႣႼ.Name = "dlgPreview";
      this.ႣႼ.Visible = false;
      this.AcceptButton = (IButtonControl) this.ႣႠ;
      this.AutoScaleDimensions = new SizeF(9f, 20f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.BackColor = SystemColors.GradientActiveCaption;
      this.CancelButton = (IButtonControl) this.ႣႳ;
      this.ClientSize = new Size(996, 504);
      this.Controls.Add((Control) this.ႣႠ);
      this.Controls.Add((Control) this.ႣႳ);
      this.Controls.Add((Control) this.ႣႷ);
      this.Controls.Add((Control) this.ႣႰ);
      this.Controls.Add((Control) this.ႣႭ);
      this.Controls.Add((Control) this.ႣႥ);
      this.Controls.Add((Control) this.Ⴄ);
      this.Controls.Add((Control) this.Ⴃ);
      this.Controls.Add((Control) this.Ⴐ);
      this.Controls.Add((Control) this.Ⴍ);
      this.Controls.Add((Control) this.Ⴅ);
      this.Controls.Add((Control) this.Ⴗ);
      this.Controls.Add((Control) this.Ⴓ);
      this.Controls.Add((Control) this.Ⴜ);
      this.Controls.Add((Control) this.ႣႤ);
      this.Controls.Add((Control) this.ႣႣ);
      this.FormBorderStyle = FormBorderStyle.None;
      this.Name = "ႳႷ";
      this.Text = "ManUpdateHR";
      ((ISupportInitialize) this.ႣႤ).EndInit();
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual ComboBox Ⴄ
    {
      get => this.ႤႤ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        MulticastDelegate multicastDelegate = (MulticastDelegate) new EventHandler(this.r3J);
        ListControl ⴄⴄ1 = (ListControl) this.ႤႤ;
        if (ⴄⴄ1 is ComboBox)
          (ⴄⴄ1 as ComboBox).SelectedIndexChanged -= (EventHandler) multicastDelegate;
        this.ႤႤ = value;
        ListControl ⴄⴄ2 = (ListControl) this.ႤႤ;
        if ((ComboBox) ⴄⴄ2 == null)
          return;
        ((ComboBox) ⴄⴄ2).SelectedIndexChanged += multicastDelegate as EventHandler;
      }
    }

    internal virtual ComboBox Ⴃ
    {
      get => this.Ⴓ.Ⴅ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        object obj = (object) new EventHandler(this.We6);
        ListControl ⴅ1 = (ListControl) this.Ⴓ.Ⴅ;
        if (ⴅ1 is ComboBox)
          (ⴅ1 as ComboBox).SelectedIndexChanged -= obj as EventHandler;
        this.Ⴓ.Ⴅ = value;
        ListControl ⴅ2 = (ListControl) this.Ⴓ.Ⴅ;
        if (!(ⴅ2 is ComboBox))
          return;
        (ⴅ2 as ComboBox).SelectedIndexChanged += (EventHandler) obj;
      }
    }

    internal virtual Label Ⴐ
    {
      get => this.ႤႭ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႤႭ = value;
    }

    internal virtual Label Ⴍ
    {
      get => this.ႤႷ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႤႷ = value;
    }

    internal virtual Label Ⴅ
    {
      get => this.ႤႥ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႤႥ = value;
    }

    internal virtual TextBox Ⴗ
    {
      get => this.ႤႨ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        object obj = (object) new EventHandler(this.w8N);
        TextBoxBase ⴄⴈ1 = (TextBoxBase) this.ႤႨ;
        if (ⴄⴈ1 is TextBox)
          ⴄⴈ1.TextChanged -= (EventHandler) obj;
        this.ႤႨ = value;
        TextBoxBase ⴄⴈ2 = (TextBoxBase) this.ႤႨ;
        if ((TextBox) ⴄⴈ2 == null)
          return;
        ⴄⴈ2.TextChanged += (EventHandler) obj;
      }
    }

    internal virtual TextBox Ⴓ
    {
      get => this.ႤႣ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        MulticastDelegate multicastDelegate = (MulticastDelegate) new EventHandler(this.a7Z);
        TextBoxBase ⴄⴃ1 = (TextBoxBase) this.ႤႣ;
        if (ⴄⴃ1 is TextBox)
          (ⴄⴃ1 as TextBox).TextChanged -= multicastDelegate as EventHandler;
        this.ႤႣ = value;
        TextBoxBase ⴄⴃ2 = (TextBoxBase) this.ႤႣ;
        if ((TextBox) ⴄⴃ2 == null)
          return;
        ⴄⴃ2.TextChanged += multicastDelegate as EventHandler;
      }
    }

    internal virtual Label Ⴜ
    {
      get => this.ႤႰ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႤႰ = value;
    }

    internal virtual DataGridView ႣႤ
    {
      get => this.ႤႼ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        object obj = (object) new DataGridViewCellEventHandler(this.r4C);
        object ⴄⴜ1 = (object) this.ႤႼ;
        if (ⴄⴜ1 is DataGridView)
          ((DataGridView) ⴄⴜ1).CellDoubleClick -= obj as DataGridViewCellEventHandler;
        this.ႤႼ = value;
        object ⴄⴜ2 = (object) this.ႤႼ;
        if (!(ⴄⴜ2 is DataGridView))
          return;
        (ⴄⴜ2 as DataGridView).CellDoubleClick += (DataGridViewCellEventHandler) obj;
      }
    }

    internal virtual Label ႣႣ
    {
      get => this.Ⴓ.Ⴄ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴓ.Ⴄ = (Control) value as Label;
    }

    internal virtual Label ႣႰ
    {
      get => this.Ⴓ.Ⴈ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴓ.Ⴈ = value;
    }

    internal virtual Label ႣႭ
    {
      get => this.ႠႠ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႠႠ = value;
    }

    internal virtual Label ႣႥ
    {
      get => this.ႠႭ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႠႭ = value;
    }

    internal virtual Label ႣႷ
    {
      get => this.ႠႷ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႠႷ = value;
    }

    internal virtual Button ႣႳ
    {
      get => this.Ⴓ.Ⴍ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        MulticastDelegate multicastDelegate = (MulticastDelegate) new EventHandler(this.f9J);
        IButtonControl ⴍ1 = (IButtonControl) this.Ⴓ.Ⴍ;
        if (ⴍ1 is Button)
          (ⴍ1 as Button).Click -= (EventHandler) multicastDelegate;
        this.Ⴓ.Ⴍ = value;
        IButtonControl ⴍ2 = (IButtonControl) this.Ⴓ.Ⴍ;
        if (!(ⴍ2 is Button))
          return;
        ((Control) ⴍ2).Click += (EventHandler) multicastDelegate;
      }
    }

    internal virtual Button ႣႠ
    {
      get => this.Ⴓ.Ⴓ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        object obj = (object) new EventHandler(this.Ht9);
        IButtonControl ⴓ1 = (IButtonControl) this.Ⴓ.Ⴓ;
        if (ⴓ1 is Button)
          (ⴓ1 as Button).Click -= (EventHandler) obj;
        this.Ⴓ.Ⴓ = (IButtonControl) value as Button;
        IButtonControl ⴓ2 = (IButtonControl) this.Ⴓ.Ⴓ;
        if ((Button) ⴓ2 == null)
          return;
        ((Control) ⴓ2).Click += (EventHandler) obj;
      }
    }

    internal virtual PrintDocument ႣႨ
    {
      get => this.Ⴓ.Ⴀ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        object obj = (object) new PrintPageEventHandler(this.Gw5);
        Component ⴀ1 = (Component) this.Ⴓ.Ⴀ;
        if ((PrintDocument) ⴀ1 != null)
          ((PrintDocument) ⴀ1).PrintPage -= (PrintPageEventHandler) obj;
        this.Ⴓ.Ⴀ = (object) value as PrintDocument;
        Component ⴀ2 = (Component) this.Ⴓ.Ⴀ;
        if ((PrintDocument) ⴀ2 == null)
          return;
        ((PrintDocument) ⴀ2).PrintPage += obj as PrintPageEventHandler;
      }
    }

    internal virtual PrintPreviewDialog ႣႼ
    {
      get => this.ႠႰ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႠႰ = value;
    }

    private void Qf4()
    {
      object obj1 = (object) new Ba1.d1J();
      ((Ba1.d1J) obj1).Ⴀ = this.Ⴓ.Text;
      ((Ba1.d1J) obj1).Ⴗ = this.Ⴗ.Text;
      (obj1 as Ba1.d1J).Ⴈ = this.Ⴃ.Text;
      ((Ba1.d1J) obj1).Ⴐ = this.Ⴄ.Text;
      ((Ba1.d1J) obj1).Ⴄ = "Staff";
      (obj1 as Ba1.d1J).Ⴍ = "HR";
      Table<Af03> ⴃ = new Tt1().Ⴃ;
      object obj2 = (object) Expression.Parameter(typeof (Af03), "a");
      // ISSUE: method reference
      // ISSUE: method reference
      // ISSUE: field reference
      // ISSUE: method reference
      // ISSUE: method reference
      // ISSUE: field reference
      // ISSUE: method reference
      // ISSUE: method reference
      // ISSUE: field reference
      // ISSUE: method reference
      // ISSUE: method reference
      // ISSUE: field reference
      // ISSUE: method reference
      // ISSUE: field reference
      // ISSUE: method reference
      // ISSUE: method reference
      // ISSUE: field reference
      // ISSUE: method reference
      // ISSUE: field reference
      // ISSUE: method reference
      // ISSUE: method reference
      // ISSUE: field reference
      Expression<Func<Af03, bool>> predicate = Expression.Lambda<Func<Af03, bool>>((Expression) Expression.And((Expression) Expression.And((Expression) Expression.And((Expression) Expression.And((Expression) Expression.Or((Expression) Expression.Equal((Expression) Expression.Call((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Operators.CompareString)), new Expression[3]
      {
        (Expression) Expression.Property((Expression) obj2, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Af03.f5CG))),
        (Expression) Expression.Field((Expression) Expression.Constant((object) (Ba1.d1J) obj1, typeof (Ba1.d1J)), FieldInfo.GetFieldFromHandle(__fieldref (Ba1.d1J.Ⴄ))),
        (Expression) Expression.Constant((object) false, typeof (bool))
      }), (Expression) Expression.Constant((object) 0, typeof (int)), false, (MethodInfo) null), (Expression) Expression.Equal((Expression) Expression.Call((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Operators.CompareString)), new Expression[3]
      {
        (Expression) Expression.Property((Expression) (obj2 as ParameterExpression), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Af03.f5CG))),
        (Expression) Expression.Field((Expression) Expression.Constant((object) (obj1 as Ba1.d1J), typeof (Ba1.d1J)), FieldInfo.GetFieldFromHandle(__fieldref (Ba1.d1J.Ⴍ))),
        (Expression) Expression.Constant((object) false, typeof (bool))
      }), (Expression) Expression.Constant((object) 0, typeof (int)), false, (MethodInfo) null)), (Expression) Expression.Call((Expression) Expression.Property((Expression) obj2, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Af03.i0KG))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (string.Contains)), (Expression) Expression.Field((Expression) Expression.Constant((object) (obj1 as Ba1.d1J), typeof (Ba1.d1J)), FieldInfo.GetFieldFromHandle(__fieldref (Ba1.d1J.Ⴀ))))), (Expression) Expression.Call((Expression) Expression.Property((Expression) (obj2 as ParameterExpression), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Af03.Fi02))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (string.Contains)), (Expression) Expression.Field((Expression) Expression.Constant((object) (obj1 as Ba1.d1J), typeof (Ba1.d1J)), FieldInfo.GetFieldFromHandle(__fieldref (Ba1.d1J.Ⴗ))))), (Expression) Expression.Or((Expression) Expression.Equal((Expression) Expression.Call((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Operators.CompareString)), new Expression[3]
      {
        (Expression) Expression.Field((Expression) Expression.Constant((object) (obj1 as Ba1.d1J), typeof (Ba1.d1J)), FieldInfo.GetFieldFromHandle(__fieldref (Ba1.d1J.Ⴈ))),
        (Expression) Expression.Constant((object) "All", typeof (string)),
        (Expression) Expression.Constant((object) false, typeof (bool))
      }), (Expression) Expression.Constant((object) 0, typeof (int)), false, (MethodInfo) null), (Expression) Expression.Equal((Expression) Expression.Call((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Operators.CompareString)), new Expression[3]
      {
        (Expression) Expression.Property((Expression) (obj2 as ParameterExpression), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Af03.a4KG))),
        (Expression) Expression.Field((Expression) Expression.Constant((object) (obj1 as Ba1.d1J), typeof (Ba1.d1J)), FieldInfo.GetFieldFromHandle(__fieldref (Ba1.d1J.Ⴈ))),
        (Expression) Expression.Constant((object) false, typeof (bool))
      }), (Expression) Expression.Constant((object) 0, typeof (int)), false, (MethodInfo) null))), (Expression) Expression.Or((Expression) Expression.Equal((Expression) Expression.Call((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Operators.CompareString)), new Expression[3]
      {
        (Expression) Expression.Field((Expression) Expression.Constant((object) (Ba1.d1J) obj1, typeof (Ba1.d1J)), FieldInfo.GetFieldFromHandle(__fieldref (Ba1.d1J.Ⴐ))),
        (Expression) Expression.Constant((object) "All", typeof (string)),
        (Expression) Expression.Constant((object) false, typeof (bool))
      }), (Expression) Expression.Constant((object) 0, typeof (int)), false, (MethodInfo) null), (Expression) Expression.Equal((Expression) Expression.Call((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Operators.CompareString)), new Expression[3]
      {
        (Expression) Expression.Property((Expression) (obj2 as ParameterExpression), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Af03.Xr81))),
        (Expression) Expression.Field((Expression) Expression.Constant((object) (Ba1.d1J) obj1, typeof (Ba1.d1J)), FieldInfo.GetFieldFromHandle(__fieldref (Ba1.d1J.Ⴐ))),
        (Expression) Expression.Constant((object) false, typeof (bool))
      }), (Expression) Expression.Constant((object) 0, typeof (int)), false, (MethodInfo) null))), (ParameterExpression) obj2);
      IQueryable<Af03> source1 = ⴃ.Where<Af03>(predicate);
      object obj3 = (object) Expression.Parameter(typeof (Af03), "a");
      // ISSUE: method reference
      // ISSUE: type reference
      // ISSUE: method reference
      // ISSUE: method reference
      // ISSUE: method reference
      // ISSUE: method reference
      // ISSUE: method reference
      // ISSUE: type reference
      // ISSUE: method reference
      // ISSUE: type reference
      // ISSUE: method reference
      // ISSUE: type reference
      // ISSUE: method reference
      // ISSUE: type reference
      Expression<Func<Af03, c1H<string, string, string, string>>> selector = Expression.Lambda<Func<Af03, c1H<string, string, string, string>>>((Expression) Expression.New((ConstructorInfo) MethodBase.GetMethodFromHandle(__methodref (c1H<string, string, string, string>.\u002Ector), __typeref (c1H<string, string, string, string>)), (IEnumerable<Expression>) new Expression[4]
      {
        (Expression) Expression.Property((Expression) obj3, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Af03.i0KG))),
        (Expression) Expression.Property((Expression) (obj3 as ParameterExpression), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Af03.Fi02))),
        (Expression) Expression.Property((Expression) (obj3 as ParameterExpression), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Af03.a4KG))),
        (Expression) Expression.Property((Expression) (obj3 as ParameterExpression), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Af03.Xr81)))
      }, (MemberInfo) MethodBase.GetMethodFromHandle(__methodref (c1H<string, string, string, string>.Ⴃ), __typeref (c1H<string, string, string, string>)), (MemberInfo) MethodBase.GetMethodFromHandle(__methodref (c1H<string, string, string, string>.Ⴓ), __typeref (c1H<string, string, string, string>)), (MemberInfo) MethodBase.GetMethodFromHandle(__methodref (c1H<string, string, string, string>.Ⴐ), __typeref (c1H<string, string, string, string>)), (MemberInfo) MethodBase.GetMethodFromHandle(__methodref (c1H<string, string, string, string>.Ⴄ), __typeref (c1H<string, string, string, string>))), obj3 as ParameterExpression);
      object source2 = (object) source1.Select<Af03, c1H<string, string, string, string>>(selector);
      this.ႣႤ.DataSource = (object) (IQueryable<c1H<string, string, string, string>>) source2;
      this.ႣႷ.Text = ((IQueryable<c1H<string, string, string, string>>) source2).Count<c1H<string, string, string, string>>().ToString("0 record(s)");
    }

    private void a7Z([In] object obj0, [In] EventArgs obj1) => this.Qf4();

    private void w8N([In] object obj0, [In] EventArgs obj1) => this.Qf4();

    private void We6([In] object obj0, [In] EventArgs obj1) => this.Qf4();

    private void r3J([In] object obj0, [In] EventArgs obj1) => this.Qf4();

    private void r4C([In] object obj0, [In] DataGridViewCellEventArgs obj1)
    {
      int rowIndex = obj1.RowIndex;
      if (rowIndex <= -1)
        return;
      En6.Ⴈ.Ⴐ.ႠႨ = (object) Conversions.ToString(this.ႣႤ.Rows[rowIndex].Cells[0].Value) as string;
      int num = (int) En6.Ⴈ.Ⴐ.ShowDialog((IWin32Window) this);
      this.Qf4();
    }

    private void Mf4([In] object obj0, [In] EventArgs obj1)
    {
      this.Ⴄ.Text = "All";
      this.Ⴃ.Text = "HR Dept.";
      this.ႣႭ.Text = Ec63.Ⴀ;
      this.ႣႥ.Text = Ec63.Ⴅ;
      En6.Ⴈ.Ⴈ.Ⴄ.Enabled = true;
      En6.Ⴈ.Ⴈ.Ⴈ.Enabled = false;
      En6.Ⴈ.Ⴈ.Text = "Human Resource Management System (Manager)- Update HR Details";
      this.Qf4();
    }

    private void Ko9([In] object obj0, [In] EventArgs obj1)
    {
      this.Ⴄ.Text = "All";
      this.Ⴃ.Text = "HR Dept.";
      this.ႣႭ.Text = Ec63.Ⴀ;
      this.ႣႥ.Text = Ec63.Ⴅ;
      En6.Ⴈ.Ⴈ.Ⴄ.Enabled = true;
      En6.Ⴈ.Ⴈ.Ⴈ.Enabled = false;
      this.Qf4();
    }

    private void f9J([In] object obj0, [In] EventArgs obj1) => En6.Ⴈ.Ⴈ.m5E6((Form) En6.Ⴈ.Ⴀ);

    private void Gw5([In] object obj0, [In] PrintPageEventArgs obj1)
    {
      DataContext dataContext = (DataContext) new Tt1();
      object obj2 = (object) new Font("Calibri", 24f, FontStyle.Bold);
      ISerializable serializable = (ISerializable) new Font("Calibri", 14f, FontStyle.Bold);
      IDisposable disposable = (IDisposable) new Font("Consolas", 10f, FontStyle.Bold);
      IEnumerable s1 = (IEnumerable) "\r\nStaff Personal Details";
      IConvertible s2 = (IConvertible) string.Format("\r\n\r\n\r\nPrinted on {0:dd-MMMM-yyyy hh:mm:ss tt}\r\nPrepared by \r\nManager ID : " + Ec63.Ⴅ + "    Manager Name : " + Ec63.Ⴀ + "\r\nManager from HR Department.", (object) DateTime.Now);
      object obj3 = (object) new StringBuilder();
      ((StringBuilder) obj3).AppendLine("\r\n");
      (obj3 as StringBuilder).AppendLine("\r\n");
      ((StringBuilder) obj3).AppendLine("\r\n");
      ((StringBuilder) obj3).AppendLine("\r\n");
      ((StringBuilder) obj3).AppendLine(" No      Staff ID |  Staff Name  | Department  | Joined Date  |  IC-Number    |   Gender  |  Phone");
      (obj3 as StringBuilder).AppendLine(" ----------------------------------------------------------------------------------------------------------");
      int num = 0;
      object enumerator;
      try
      {
        enumerator = (object) (dataContext as Tt1).Ⴃ.GetEnumerator();
        while ((enumerator as IEnumerator<Af03>).MoveNext())
        {
          INotifyPropertyChanged current = (INotifyPropertyChanged) ((IEnumerator<Af03>) enumerator).Current;
          checked { ++num; }
          ((StringBuilder) obj3).AppendFormat("{0,2}       {1,6}      {2,6}       {3,6}    {4,6}     {5,6}     {6,6}   {7,6}\r\n", (object) num, (object) (current as Af03).Ⴐ, (object) (current as Af03).Ⴃ, (object) (current as Af03).ႠႰ, (object) (current as Af03).Ⴈ.ToShortDateString(), (object) ((Af03) current).Ⴗ, (object) ((Af03) current).Ⴅ, (object) ((Af03) current).Ⴍ);
        }
      }
      finally
      {
        if (enumerator is IEnumerator<Af03>)
          (enumerator as IEnumerator<Af03>).Dispose();
      }
      (obj3 as StringBuilder).AppendLine();
      ((StringBuilder) obj3).AppendFormat("{0,2} record(s)", (object) num);
      IDisposable graphics = (IDisposable) obj1.Graphics;
      ((Graphics) graphics).DrawString(s1 as string, obj2 as Font, Brushes.Purple, 100f, 0.0f);
      (graphics as Graphics).DrawString(s2 as string, serializable as Font, Brushes.Black, 100f, 40f);
      ((Graphics) graphics).DrawString(((StringBuilder) obj3).ToString(), disposable as Font, Brushes.Black, 0.0f, 120f);
    }

    private void Ht9([In] object obj0, [In] EventArgs obj1)
    {
      this.ႣႼ.Document = this.ႣႨ;
      int num = (int) this.ႣႼ.ShowDialog((IWin32Window) this);
    }

    internal sealed class d1J
    {
      public string Ⴄ;
      public string Ⴍ;
      public string Ⴀ;
      public string Ⴗ;
      public string Ⴈ;
      public string Ⴐ;
    }
  }
}
