// Decompiled with JetBrains decompiler
// Type: .
// Assembly: XtremeLoader, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FF5C2739-BB51-401B-85EA-0335ADE5C685
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00100-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-aa8581ea5894c494d738b78361d9e720df47a4f898d851a9455cd28a6e52c5d6.exe

using System;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.InteropServices;

namespace \u0001
{
  internal sealed class \u0001
  {
    private static Assembly \u0001 = (Assembly) null;
    private static string[] \u0001 = new string[0];

    internal static void \u0001()
    {
      try
      {
        AppDomain.CurrentDomain.ResourceResolve += new ResolveEventHandler(\u0001.\u0001.\u0001);
      }
      catch (Exception ex)
      {
      }
    }

    private static Assembly \u0001([In] object obj0, [In] ResolveEventArgs obj1)
    {
      if ((object) \u0001.\u0001.\u0001 == null)
      {
        lock (\u0001.\u0001.\u0001)
        {
          \u0001.\u0001.\u0001 = Assembly.Load("{20ba7242-b870-4af3-af8d-595a5fd0d496}, PublicKeyToken=3e56350693f7355e");
          if ((object) \u0001.\u0001.\u0001 != null)
            \u0001.\u0001.\u0001 = \u0001.\u0001.\u0001.GetManifestResourceNames();
        }
      }
      string name = obj1.Name;
      for (int index = 0; index < \u0001.\u0001.\u0001.Length; ++index)
      {
        if (\u0001.\u0001.\u0001[index] == name)
          return !\u0001.\u0001.\u0001() ? (Assembly) null : \u0001.\u0001.\u0001;
      }
      return (Assembly) null;
    }

    private static bool \u0001()
    {
      try
      {
        StackFrame[] frames = new StackTrace().GetFrames();
        if (true)
          goto label_7;
label_1:
        StackFrame[] stackFrameArray;
        for (int index = 2; index < stackFrameArray.Length; ++index)
        {
          if ((object) stackFrameArray[index].GetMethod().Module.Assembly == (object) Assembly.GetExecutingAssembly())
            return true;
        }
        return false;
label_7:
        stackFrameArray = frames;
        goto label_1;
      }
      catch
      {
        return true;
      }
    }
  }
}
