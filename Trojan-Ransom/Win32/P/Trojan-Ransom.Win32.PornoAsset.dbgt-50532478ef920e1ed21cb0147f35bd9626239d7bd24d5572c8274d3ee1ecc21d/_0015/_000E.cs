// Decompiled with JetBrains decompiler
// Type: .
// Assembly: 1R-EM, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: BB5D6A3D-366E-4216-AF14-47C4F935F6A7
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00024-msil\Trojan-Ransom.Win32.PornoAsset.dbgt-50532478ef920e1ed21cb0147f35bd9626239d7bd24d5572c8274d3ee1ecc21d.exe

using \u0015;
using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace \u0015
{
  internal sealed class \u000E
  {
    [DllImport("fusion", EntryPoint = "CreateAssemblyCache", CharSet = CharSet.Auto)]
    internal static extern int \u0016(out \u000E.\u0019 ppAsmCache, uint dwReserved);

    public static bool \u0016([In] string obj0)
    {
      \u000E.\u0019 ppAsmCache = (\u000E.\u0019) null;
      return \u000E.\u0016(out ppAsmCache, 0U) == 0 && ppAsmCache.\u0015(0U, obj0, IntPtr.Zero) == 0;
    }

    public struct \u000E
    {
      public int \u0001;
      public int \u0002;
    }

    public struct \u0015
    {
      public \u000E.\u000E \u0001;
      public long \u0002;
      public Guid \u0003;
      public \u000E.\u000E \u0004;
      public int \u0005;
      public int \u0006;
      public int \u0007;
      public \u000E.\u000E \u0008;
      public string \u000E;
      public int \u000F;
      public int \u0010;
    }

    [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
    [Guid("0000000c-0000-0000-C000-000000000046")]
    [ComImport]
    public interface \u0016
    {
      void \u000E(IntPtr pv, uint cb, out uint pcbRead);

      void \u0015(IntPtr pv, uint cb, out uint pcbWritten);

      void \u000E(long dlibMove, uint dwOrigin, out ulong plibNewPosition);

      void \u000E(ulong libNewSize);

      void \u000E(\u000E.\u0016 pstm, ulong cb, out ulong pcbRead, out ulong pcbWritten);

      void \u000E(uint grfCommitFlags);

      void \u000E();

      void \u000E(ulong libOffset, ulong cb, uint dwLockType);

      void \u0015(ulong libOffset, ulong cb, uint dwLockType);

      void \u000E(out \u000E.\u0015 pstatstg, uint grfStatFlag);

      void \u000E(out \u000E.\u0016 ppstm);
    }

    [Guid("7c23ff90-33af-11d3-95da-00a024a85b51")]
    [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
    [ComImport]
    internal interface \u0017
    {
      void \u000E(\u000E.\u0018 pName);

      void \u000E(out \u000E.\u0018 ppName);

      void \u000E([MarshalAs(UnmanagedType.LPWStr)] string szName, int pvValue, uint cbValue, uint dwFlags);

      void \u000E([MarshalAs(UnmanagedType.LPWStr)] string szName, out int pvValue, ref uint pcbValue, uint dwFlags);

      void \u000E(out int wzDynamicDir, ref uint pdwSize);
    }

    [Guid("CD193BC0-B4BC-11d2-9833-00C04FC31D2E")]
    [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
    [ComImport]
    internal interface \u0018
    {
      [MethodImpl(MethodImplOptions.PreserveSig)]
      int \u000E(uint PropertyId, IntPtr pvProperty, uint cbProperty);

      [MethodImpl(MethodImplOptions.PreserveSig)]
      int \u000E(uint PropertyId, IntPtr pvProperty, ref uint pcbProperty);

      [MethodImpl(MethodImplOptions.PreserveSig)]
      int \u000E();

      [MethodImpl(MethodImplOptions.PreserveSig)]
      int \u000E(IntPtr szDisplayName, ref uint pccDisplayName, uint dwDisplayFlags);

      [MethodImpl(MethodImplOptions.PreserveSig)]
      int \u000E(
        object refIID,
        object pAsmBindSink,
        \u000E.\u0017 pApplicationContext,
        [MarshalAs(UnmanagedType.LPWStr)] string szCodeBase,
        long llFlags,
        int pvReserved,
        uint cbReserved,
        out int ppv);

      [MethodImpl(MethodImplOptions.PreserveSig)]
      int \u000E(out uint lpcwBuffer, out int pwzName);

      [MethodImpl(MethodImplOptions.PreserveSig)]
      int \u000E(out uint pdwVersionHi, out uint pdwVersionLow);

      [MethodImpl(MethodImplOptions.PreserveSig)]
      int \u000E(\u000E.\u0018 pName, uint dwCmpFlags);

      [MethodImpl(MethodImplOptions.PreserveSig)]
      int \u000E(out \u000E.\u0018 pName);
    }

    [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
    [Guid("9e3aaeb4-d1cd-11d2-bab9-00c04f8eceae")]
    [ComImport]
    internal interface \u001B
    {
      void \u000E(
        [MarshalAs(UnmanagedType.LPWStr)] string pszName,
        uint dwFormat,
        uint dwFlags,
        uint dwMaxSize,
        out \u000E.\u0016 ppStream);

      void \u0015(\u000E.\u0018 pName);

      void \u000E(uint dwFlags);

      void \u0015(uint dwFlags);
    }

    [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
    [Guid("e707dcde-d1cd-11d2-bab9-00c04f8eceae")]
    [ComImport]
    internal interface \u0019
    {
      [MethodImpl(MethodImplOptions.PreserveSig)]
      int \u000E(uint dwFlags, [MarshalAs(UnmanagedType.LPWStr)] string pszAssemblyName, IntPtr pvReserved, out uint pulDisposition);

      [MethodImpl(MethodImplOptions.PreserveSig)]
      int \u000E(uint dwFlags, [MarshalAs(UnmanagedType.LPWStr)] string pszAssemblyName, IntPtr pAsmInfo);

      [MethodImpl(MethodImplOptions.PreserveSig)]
      int \u000E(
        uint dwFlags,
        IntPtr pvReserved,
        out \u000E.\u001B ppAsmItem,
        [MarshalAs(UnmanagedType.LPWStr)] string pszAssemblyName);

      [MethodImpl(MethodImplOptions.PreserveSig)]
      int \u000E(out object ppAsmScavenger);

      [MethodImpl(MethodImplOptions.PreserveSig)]
      int \u0015(uint dwFlags, [MarshalAs(UnmanagedType.LPWStr)] string pszManifestFilePath, IntPtr pvReserved);
    }
  }
}
