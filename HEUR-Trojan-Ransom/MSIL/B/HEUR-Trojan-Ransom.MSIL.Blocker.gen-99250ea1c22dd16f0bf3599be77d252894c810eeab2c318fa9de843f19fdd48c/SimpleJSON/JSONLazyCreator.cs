// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONLazyCreator
// Assembly: IClientChannelSinkSta, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: C2D4B9C8-45F5-4E7C-86BD-063D9CE5A365
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-99250ea1c22dd16f0bf3599be77d252894c810eeab2c318fa9de843f19fdd48c.exe

namespace SimpleJSON
{
  internal class JSONLazyCreator : JSONNode
  {
    private JSONNode m_Node = (JSONNode) null;
    private string m_Key = (string) null;

    public JSONLazyCreator(JSONNode aNode)
    {
label_1:
      int num1 = 1537844177;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 601257636)) % 4U)
        {
          case 0:
            this.m_Key = (string) null;
            num1 = (int) num2 * 801517543 ^ 1382773490;
            continue;
          case 1:
            this.m_Node = aNode;
            num1 = (int) num2 * -927345721 ^ -476021325;
            continue;
          case 2:
            goto label_3;
          case 3:
            goto label_1;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public JSONLazyCreator(JSONNode aNode, string aKey)
    {
label_1:
      int num1 = 1809293948;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 821217445)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            this.m_Node = aNode;
            this.m_Key = aKey;
            num1 = (int) num2 * 422471276 ^ -1875900928;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    private void Set(JSONNode aVal)
    {
      if (this.m_Key != null)
        goto label_4;
label_1:
      int num1 = 957708920;
label_2:
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 675240849)) % 9U)
        {
          case 0:
            num1 = (int) num2 * 171594511 ^ -1023402964;
            continue;
          case 1:
            num1 = (int) num2 * 1441700173 ^ 518008380;
            continue;
          case 2:
            goto label_1;
          case 3:
            this.m_Node.Add(aVal);
            num1 = (int) num2 * 467413815 ^ 114325596;
            continue;
          case 4:
            this.m_Node = (JSONNode) null;
            num1 = 450939428;
            continue;
          case 5:
            goto label_3;
          case 6:
            num1 = (int) num2 * 798068610 ^ -648159903;
            continue;
          case 7:
            goto label_4;
          case 8:
            num1 = (int) num2 * 477889595 ^ 213104073;
            continue;
          default:
            goto label_11;
        }
      }
label_3:
      return;
label_11:
      return;
label_4:
      this.m_Node.Add(this.m_Key, aVal);
      num1 = 1434877148;
      goto label_2;
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = -1655333483;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1382120745)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * -1304237397 ^ -760136954;
              continue;
            case 3:
              num1 = (int) num2 * -1446981937 ^ 1981645247;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 1698962898;
        JSONArray aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 928542055)) % 4U)
          {
            case 0:
              goto label_3;
            case 1:
              aVal = new JSONArray();
              aVal.Add(value);
              num1 = (int) num2 * 2049269968 ^ -824263348;
              continue;
            case 2:
              goto label_1;
            case 3:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 583453042 ^ -510974423;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 1672305502;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 364802088)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = (int) num2 * 529190774 ^ -203632990;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = -1571553292;
        JSONClass aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1924775564)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              aVal = new JSONClass();
              num1 = (int) num2 * 1684899869 ^ 874034940;
              continue;
            case 2:
              goto label_3;
            case 3:
              aVal.Add(aKey, value);
              num1 = (int) num2 * -122779085 ^ 1673733255;
              continue;
            case 4:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -719639016 ^ -188329725;
              continue;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
    }

    public override void Add(JSONNode aItem)
    {
      JSONArray aVal = new JSONArray();
label_1:
      int num1 = 1596696465;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 299349747)) % 4U)
        {
          case 0:
            goto label_3;
          case 1:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * 702572295 ^ 1950874844;
            continue;
          case 2:
            aVal.Add(aItem);
            num1 = (int) num2 * 1281256550 ^ 1165937558;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = 1921383083;
      JSONClass aVal;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2076385489)) % 4U)
        {
          case 0:
            goto label_3;
          case 1:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * 214413708 ^ 1466449801;
            continue;
          case 2:
            aVal = new JSONClass();
            aVal.Add(aKey, aItem);
            num1 = (int) num2 * 1224338402 ^ 771632160;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public static bool operator ==(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = 114522504;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 159021510)) % 7U)
        {
          case 1:
            flag = (object) a == b;
            num1 = 733147804;
            continue;
          case 2:
            num1 = (int) num2 * -10626968 ^ -151994155;
            continue;
          case 3:
            num1 = (int) num2 * -368134001 ^ 423741782;
            continue;
          case 4:
            int num3 = b == null ? -1494688623 : (num3 = -1923619392);
            num1 = num3 ^ (int) num2 * -1635113895;
            continue;
          case 5:
            goto label_1;
          case 6:
            flag = true;
            num1 = (int) num2 * -2124094738 ^ 1482609957;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      return flag;
    }

    public static bool operator !=(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = 172881488;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1311359492)) % 3U)
        {
          case 1:
            flag = !(a == b);
            num1 = (int) num2 * -261239797 ^ -1046695797;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override bool Equals(object obj)
    {
      bool flag1 = obj == null;
label_1:
      int num1 = -888602859;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1976424189)) % 6U)
        {
          case 0:
            goto label_1;
          case 1:
            flag2 = (object) this == obj;
            num1 = -742479146;
            continue;
          case 2:
            int num3 = !flag1 ? 1911998218 : (num3 = 1481623787);
            num1 = num3 ^ (int) num2 * -1091512971;
            continue;
          case 3:
            num1 = (int) num2 * 2118701911 ^ -1720710463;
            continue;
          case 4:
            flag2 = true;
            num1 = (int) num2 * -1099908530 ^ 2048479926;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      return flag2;
    }

    public override int GetHashCode()
    {
label_1:
      int num1 = -429605566;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1912701415)) % 3U)
        {
          case 1:
            hashCode = base.GetHashCode();
            num1 = (int) num2 * 867079213 ^ -331331732;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return hashCode;
    }

    public override string ToString()
    {
label_1:
      int num1 = -454470687;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -634632704)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            str = "";
            num1 = (int) num2 * -1641518313 ^ -1515702580;
            continue;
          case 3:
            num1 = (int) num2 * 634858516 ^ 2057556618;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = -810162390;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -317064833)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -1912348720 ^ 1868892461;
            continue;
          case 1:
            str = "";
            num1 = (int) num2 * 597662134 ^ 850938721;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public override int AsInt
    {
      get
      {
        JSONData aVal = new JSONData(0);
label_1:
        int num1 = 1677326622;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1814925003)) % 4U)
          {
            case 1:
              this.Set((JSONNode) aVal);
              asInt = 0;
              num1 = (int) num2 * -1074293149 ^ 449774562;
              continue;
            case 2:
              num1 = (int) num2 * -377851250 ^ 2053055675;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return asInt;
      }
      set
      {
label_1:
        int num1 = 1789689834;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 777220849)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 16147189 ^ 1864007544;
              continue;
            case 3:
              aVal = new JSONData(value);
              num1 = (int) num2 * 1980036038 ^ 1901018377;
              continue;
            case 4:
              num1 = (int) num2 * -1111539915 ^ 797672732;
              continue;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
    }

    public override float AsFloat
    {
      get
      {
label_1:
        int num1 = 1461325623;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 132854690)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Set((JSONNode) new JSONData(0.0f));
              num1 = (int) num2 * -1828951304 ^ -2122642892;
              continue;
            case 2:
              asFloat = 0.0f;
              num1 = (int) num2 * -463587464 ^ -255603779;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asFloat;
      }
      set
      {
label_1:
        int num1 = 1622939187;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 939195066)) % 4U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Set((JSONNode) new JSONData(value));
              num1 = (int) num2 * -154131098 ^ -1350409617;
              continue;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * -1908256968 ^ -1121915830;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override double AsDouble
    {
      get
      {
        JSONData aVal = new JSONData(0.0);
label_1:
        int num1 = -568394504;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1600356922)) % 5U)
          {
            case 0:
              num1 = (int) num2 * -2077510243 ^ -1264243654;
              continue;
            case 1:
              asDouble = 0.0;
              num1 = (int) num2 * -355712659 ^ 1170122153;
              continue;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1853371345 ^ 2069954279;
              continue;
            case 4:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_6:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = -1729199146;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -84428062)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Set((JSONNode) new JSONData(value));
              num1 = (int) num2 * -1758637371 ^ -1886056398;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override bool AsBool
    {
      get
      {
label_1:
        int num1 = -247946002;
        JSONData aVal;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1769417020)) % 7U)
          {
            case 0:
              goto label_1;
            case 1:
              aVal = new JSONData(false);
              num1 = (int) num2 * -298494155 ^ -240749848;
              continue;
            case 2:
              asBool = false;
              num1 = (int) num2 * 430033638 ^ 1976295816;
              continue;
            case 4:
              num1 = (int) num2 * -1008677377 ^ 2044697075;
              continue;
            case 5:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1690723538 ^ 1064943497;
              continue;
            case 6:
              num1 = (int) num2 * 216187267 ^ 701441726;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asBool;
      }
      set
      {
label_1:
        int num1 = 297718576;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1182223369)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 1461671358 ^ 1462579690;
              continue;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1501615808 ^ -1477418986;
              continue;
            case 3:
              goto label_3;
            case 4:
              aVal = new JSONData(value);
              num1 = (int) num2 * -1668663351 ^ -1326469253;
              continue;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
    }

    public override JSONArray AsArray
    {
      get
      {
        JSONArray aVal = new JSONArray();
        this.Set((JSONNode) aVal);
label_1:
        int num1 = -2006848434;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -604866767)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              asArray = aVal;
              num1 = (int) num2 * 1969455600 ^ 1075627736;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asArray;
      }
    }

    public override JSONClass AsObject
    {
      get
      {
        JSONClass aVal = new JSONClass();
label_1:
        int num1 = -1571883662;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -257281931)) % 6U)
          {
            case 0:
              num1 = (int) num2 * 2133943861 ^ -1091490982;
              continue;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1951557947 ^ -1938935540;
              continue;
            case 2:
              asObject = aVal;
              num1 = (int) num2 * 1617818178 ^ -773989403;
              continue;
            case 3:
              goto label_1;
            case 4:
              num1 = (int) num2 * 1590019623 ^ -2031035615;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asObject;
      }
    }
  }
}
