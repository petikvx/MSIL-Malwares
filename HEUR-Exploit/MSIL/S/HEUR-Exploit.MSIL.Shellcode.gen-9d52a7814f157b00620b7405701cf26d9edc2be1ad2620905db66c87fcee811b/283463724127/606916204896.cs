// Decompiled with JetBrains decompiler
// Type: 283463724127.606916204896
// Assembly: 341658236064, Version=3.1.2.23007, Culture=neutral, PublicKeyToken=31bf3856ad364e35
// MVID: 307D4BC7-4605-49A1-A696-CC8CC5C1D6BD
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-9d52a7814f157b00620b7405701cf26d9edc2be1ad2620905db66c87fcee811b.exe

using System;
using System.Collections.Generic;

namespace \u003283463724127
{
  internal class \u003606916204896
  {
    private Dictionary<string, int> \u003591352330082;

    public \u003606916204896(string[] packageIds)
    {
      int capacity = packageIds != null ? packageIds.Length : 0;
      this.\u003591352330082 = new Dictionary<string, int>(capacity, (IEqualityComparer<string>) StringComparer.OrdinalIgnoreCase);
      for (int index = capacity - 1; index >= 0; --index)
      {
        string key = packageIds[index].Trim();
        if (key.Length != 0)
          this.\u003591352330082[key] = index;
      }
    }

    public int \u003102798528959(string _param1)
    {
      int num;
      return _param1 != null && this.\u003591352330082.TryGetValue(_param1, out num) ? num : int.MaxValue;
    }
  }
}
