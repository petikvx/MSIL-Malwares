// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONLazyCreator
// Assembly: DataCollect, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 42D7E59F-0880-4460-A28E-6C718E130DF7
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-35125b1dd360a1a6c3644dee373860f7e3c26660cb7cd8de4718b4ac8e4b4353.exe

namespace SimpleJSON
{
  internal class JSONLazyCreator : JSONNode
  {
    private JSONNode m_Node = (JSONNode) null;
    private string m_Key = (string) null;

    public JSONLazyCreator(JSONNode aNode)
    {
      this.m_Node = aNode;
      this.m_Key = (string) null;
    }

    public JSONLazyCreator(JSONNode aNode, string aKey)
    {
label_1:
      int num1 = 25495881;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 115099508)) % 6U)
        {
          case 0:
            num1 = (int) num2 * 1885309904 ^ -732977268;
            continue;
          case 1:
            num1 = (int) num2 * -577519072 ^ 107387618;
            continue;
          case 2:
            goto label_1;
          case 3:
            goto label_3;
          case 4:
            this.m_Node = aNode;
            num1 = (int) num2 * -1817634928 ^ 1982265587;
            continue;
          case 5:
            this.m_Key = aKey;
            num1 = (int) num2 * 392287118 ^ 402503947;
            continue;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    private void Set(JSONNode aVal)
    {
label_1:
      int num1 = -1496819636;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -998263174)) % 11U)
        {
          case 0:
            int num3 = !flag ? -888675877 : (num3 = -1378364025);
            num1 = num3 ^ (int) num2 * 1239286449;
            continue;
          case 1:
            flag = this.m_Key == null;
            num1 = (int) num2 * 323204697 ^ -1102612298;
            continue;
          case 2:
            this.m_Node = (JSONNode) null;
            num1 = -1712408148;
            continue;
          case 3:
            this.m_Node.Add(aVal);
            num1 = (int) num2 * 1296069496 ^ -1238212154;
            continue;
          case 4:
            goto label_1;
          case 5:
            goto label_3;
          case 6:
            num1 = (int) num2 * 1594054109 ^ -1563173042;
            continue;
          case 7:
            this.m_Node.Add(this.m_Key, aVal);
            num1 = -1871939761;
            continue;
          case 8:
            num1 = (int) num2 * -1307451322 ^ -1930036163;
            continue;
          case 9:
            num1 = (int) num2 * 623612447 ^ -916646818;
            continue;
          case 10:
            num1 = (int) num2 * -876951712 ^ 366502607;
            continue;
          default:
            goto label_13;
        }
      }
label_3:
      return;
label_13:;
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 1170863941;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 912492151)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * 1728722485 ^ 1137826182;
              continue;
            case 3:
              num1 = (int) num2 * -1045767393 ^ 632356627;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
        JSONArray aVal = new JSONArray();
        aVal.Add(value);
label_1:
        int num1 = -1498428647;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -778671800)) % 4U)
          {
            case 0:
              goto label_3;
            case 1:
              num1 = (int) num2 * 879504142 ^ -406059576;
              continue;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1203069076 ^ 1723652788;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 1608057803;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 293967054)) % 4U)
          {
            case 1:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = (int) num2 * 2091238655 ^ -1711581945;
              continue;
            case 2:
              num1 = (int) num2 * 1400876762 ^ -407221034;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
        JSONClass aVal = new JSONClass();
        aVal.Add(aKey, value);
label_1:
        int num1 = 1885327516;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1210928883)) % 5U)
          {
            case 0:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1943596550 ^ 1763292744;
              continue;
            case 1:
              num1 = (int) num2 * 2133054674 ^ 1371085296;
              continue;
            case 2:
              goto label_1;
            case 3:
              goto label_3;
            case 4:
              num1 = (int) num2 * 632976151 ^ -295362511;
              continue;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
    }

    public override void Add(JSONNode aItem)
    {
      JSONArray aVal = new JSONArray();
      aVal.Add(aItem);
label_1:
      int num1 = -2073453173;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -486990361)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 1547778245 ^ 582924096;
            continue;
          case 2:
            num1 = (int) num2 * 1157873130 ^ -1373260531;
            continue;
          case 3:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * -1096062247 ^ -366934555;
            continue;
          case 4:
            goto label_3;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = -765590822;
      JSONClass aVal;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2013674639)) % 5U)
        {
          case 0:
            goto label_3;
          case 1:
            aVal = new JSONClass();
            aVal.Add(aKey, aItem);
            num1 = (int) num2 * 1383313268 ^ -108161293;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * -642437273 ^ -494177720;
            continue;
          case 4:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * 853941532 ^ -1214966135;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public static bool operator ==(JSONLazyCreator a, object b)
    {
      if (b != null)
        goto label_4;
label_1:
      int num1 = -1750417147;
label_2:
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2127135154)) % 5U)
        {
          case 0:
            num1 = (int) num2 * 1944648062 ^ -482850991;
            continue;
          case 1:
            goto label_4;
          case 3:
            goto label_1;
          case 4:
            flag = true;
            num1 = (int) num2 * 435265709 ^ 550871688;
            continue;
          default:
            goto label_6;
        }
      }
label_6:
      return flag;
label_4:
      flag = (object) a == b;
      num1 = -1460088373;
      goto label_2;
    }

    public static bool operator !=(JSONLazyCreator a, object b) => !(a == b);

    public override bool Equals(object obj)
    {
label_1:
      int num1 = -1113722491;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -138627288)) % 7U)
        {
          case 0:
            flag1 = (object) this == obj;
            num1 = -337693118;
            continue;
          case 1:
            num1 = (int) num2 * 697734836 ^ -2135181550;
            continue;
          case 2:
            flag1 = true;
            num1 = (int) num2 * 624771420 ^ -1300183942;
            continue;
          case 3:
            int num3 = flag2 ? 1197322678 : (num3 = 1071348859);
            num1 = num3 ^ (int) num2 * -870724349;
            continue;
          case 4:
            goto label_1;
          case 5:
            flag2 = obj == null;
            num1 = (int) num2 * -957034868 ^ -782581946;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      return flag1;
    }

    public override int GetHashCode()
    {
label_1:
      int num1 = -63120330;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -559763584)) % 4U)
        {
          case 1:
            num1 = (int) num2 * 1137278394 ^ -1017036106;
            continue;
          case 2:
            hashCode = base.GetHashCode();
            num1 = (int) num2 * -1844516032 ^ -442148659;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return hashCode;
    }

    public override string ToString() => "";

    public override string ToString(string aPrefix)
    {
      string str = "";
label_1:
      int num1 = 550216262;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1375572804)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -1465512693 ^ -1503718573;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override int AsInt
    {
      get
      {
label_1:
        int num1 = 1636295885;
        JSONData aVal;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 173427789)) % 5U)
          {
            case 1:
              this.Set((JSONNode) aVal);
              asInt = 0;
              num1 = (int) num2 * -1060397072 ^ -1402105042;
              continue;
            case 2:
              aVal = new JSONData(0);
              num1 = (int) num2 * -73465315 ^ 1844246000;
              continue;
            case 3:
              goto label_1;
            case 4:
              num1 = (int) num2 * 1917992401 ^ 439111394;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asInt;
      }
      set
      {
label_1:
        int num1 = 1619832263;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1689454440)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              num1 = (int) num2 * -594114586 ^ -970617079;
              continue;
            case 3:
              this.Set((JSONNode) new JSONData(value));
              num1 = (int) num2 * -340095144 ^ -969581270;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override float AsFloat
    {
      get
      {
label_1:
        int num1 = -728632953;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1020570514)) % 5U)
          {
            case 1:
              num1 = (int) num2 * -207688076 ^ 1120759907;
              continue;
            case 2:
              this.Set((JSONNode) new JSONData(0.0f));
              num1 = (int) num2 * -135237034 ^ -1183002526;
              continue;
            case 3:
              goto label_1;
            case 4:
              asFloat = 0.0f;
              num1 = (int) num2 * -642944125 ^ 737078402;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asFloat;
      }
      set
      {
        JSONData aVal = new JSONData(value);
label_1:
        int num1 = 1941606378;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1245965953)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 729683052 ^ 828309688;
              continue;
            case 1:
              goto label_3;
            case 2:
              goto label_1;
            case 3:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1854336747 ^ 1037796408;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override double AsDouble
    {
      get
      {
        JSONData aVal = new JSONData(0.0);
label_1:
        int num1 = -416865904;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1438705369)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1265152538 ^ -107100890;
              continue;
            case 2:
              num1 = (int) num2 * -1409019272 ^ 1797739686;
              continue;
            case 4:
              asDouble = 0.0;
              num1 = (int) num2 * -103045630 ^ -1024916481;
              continue;
            case 5:
              num1 = (int) num2 * 2139416251 ^ 2045907400;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asDouble;
      }
      set => this.Set((JSONNode) new JSONData(value));
    }

    public override bool AsBool
    {
      get
      {
        this.Set((JSONNode) new JSONData(false));
label_1:
        int num1 = -481079765;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -600131337)) % 3U)
          {
            case 1:
              asBool = false;
              num1 = (int) num2 * -1186404894 ^ -681515259;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return asBool;
      }
      set
      {
label_1:
        int num1 = -430611522;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -465774489)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              aVal = new JSONData(value);
              num1 = (int) num2 * 1848313107 ^ -1418331650;
              continue;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1263917169 ^ -271062610;
              continue;
            case 3:
              goto label_3;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = 1873775655;
        JSONArray aVal;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1955283130)) % 6U)
          {
            case 0:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 521201247 ^ -365132100;
              continue;
            case 1:
              aVal = new JSONArray();
              num1 = (int) num2 * 854700686 ^ -1852472916;
              continue;
            case 2:
              num1 = (int) num2 * 1500887205 ^ 1452715119;
              continue;
            case 3:
              goto label_1;
            case 5:
              asArray = aVal;
              num1 = (int) num2 * 1765635465 ^ -1270227887;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asArray;
      }
    }

    public override JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = -936831613;
        JSONClass aVal;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -743241125)) % 7U)
          {
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1750128947 ^ -581052653;
              continue;
            case 2:
              asObject = aVal;
              num1 = (int) num2 * -1900299649 ^ -1369493439;
              continue;
            case 3:
              aVal = new JSONClass();
              num1 = (int) num2 * -1728179328 ^ -1267963939;
              continue;
            case 4:
              num1 = (int) num2 * 559833945 ^ -127231819;
              continue;
            case 5:
              goto label_1;
            case 6:
              num1 = (int) num2 * -1379321976 ^ 607602110;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asObject;
      }
    }
  }
}
