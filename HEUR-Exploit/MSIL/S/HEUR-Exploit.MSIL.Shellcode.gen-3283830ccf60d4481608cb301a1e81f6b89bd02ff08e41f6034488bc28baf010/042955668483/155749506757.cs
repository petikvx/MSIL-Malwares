// Decompiled with JetBrains decompiler
// Type: 042955668483.155749506757
// Assembly: 087135227926, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
// MVID: 0DB320EA-9C28-4716-BA63-69641BABDE67
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-3283830ccf60d4481608cb301a1e81f6b89bd02ff08e41f6034488bc28baf010.exe

using \u003048520867406;
using \u003053028810657;
using \u003208825527781;
using \u003226094756440;
using \u003384276752884;
using \u003545704640419;
using \u003603600525092;
using \u003700941046987;
using System;
using System.Globalization;

namespace \u003042955668483
{
  public class \u003155749506757 : \u003909935353356
  {
    private const string \u003301701744427 = "yyyy'-'MM'-'dd'T'HH':'mm':'ss.FFFFFFFK";
    private DateTimeStyles \u003300609343428 = DateTimeStyles.RoundtripKind;
    private string \u003152472154311;
    private CultureInfo \u003732385619220;

    public DateTimeStyles \u003130807766343
    {
      get => this.\u003300609343428;
      set => this.\u003300609343428 = value;
    }

    public string \u003761264486377
    {
      get => this.\u003152472154311 ?? string.Empty;
      set => this.\u003152472154311 = string.IsNullOrEmpty(value) ? (string) null : value;
    }

    public CultureInfo \u003337448072802
    {
      get => this.\u003732385619220 ?? CultureInfo.CurrentCulture;
      set => this.\u003732385619220 = value;
    }

    public virtual void \u003046130028143(
      \u003632627526011 _param1,
      object _param2,
      \u003131478599170 _param3)
    {
      string str;
      switch (_param2)
      {
        case DateTime universalTime1:
          if ((this.\u003300609343428 & DateTimeStyles.AdjustToUniversal) == DateTimeStyles.AdjustToUniversal || (this.\u003300609343428 & DateTimeStyles.AssumeUniversal) == DateTimeStyles.AssumeUniversal)
            universalTime1 = universalTime1.ToUniversalTime();
          str = universalTime1.ToString(this.\u003152472154311 ?? "yyyy'-'MM'-'dd'T'HH':'mm':'ss.FFFFFFFK", (IFormatProvider) this.\u003337448072802);
          break;
        case DateTimeOffset universalTime2:
          if ((this.\u003300609343428 & DateTimeStyles.AdjustToUniversal) == DateTimeStyles.AdjustToUniversal || (this.\u003300609343428 & DateTimeStyles.AssumeUniversal) == DateTimeStyles.AssumeUniversal)
            universalTime2 = universalTime2.ToUniversalTime();
          str = universalTime2.ToString(this.\u003152472154311 ?? "yyyy'-'MM'-'dd'T'HH':'mm':'ss.FFFFFFFK", (IFormatProvider) this.\u003337448072802);
          break;
        default:
          throw new \u003479281034910("Unexpected value when converting date. Expected DateTime or DateTimeOffset, got {0}.".\u003212424921759((IFormatProvider) CultureInfo.InvariantCulture, (object) \u003560732527318.\u003502467942885(_param2)));
      }
      _param1.\u003897033093575(str);
    }

    public virtual object \u003992283403426(
      \u003250925846196 _param1,
      Type _param2,
      object _param3,
      \u003131478599170 _param4)
    {
      bool flag = \u003560732527318.\u003876583190049(_param2);
      Type type = flag ? Nullable.GetUnderlyingType(_param2) : _param2;
      if (_param1.\u003271751439454 == \u003293768301571.Null)
      {
        if (!\u003560732527318.\u003876583190049(_param2))
          throw \u003479281034910.\u003188723322269(_param1, "Cannot convert null value to {0}.".\u003212424921759((IFormatProvider) CultureInfo.InvariantCulture, (object) _param2));
        return (object) null;
      }
      if (_param1.\u003271751439454 == \u003293768301571.Date)
        return type == typeof (DateTimeOffset) ? (!(_param1.\u003255783382022 is DateTimeOffset) ? (object) new DateTimeOffset((DateTime) _param1.\u003255783382022) : _param1.\u003255783382022) : (_param1.\u003255783382022 is DateTimeOffset ? (object) ((DateTimeOffset) _param1.\u003255783382022).DateTime : _param1.\u003255783382022);
      string str = _param1.\u003271751439454 == \u003293768301571.String ? _param1.\u003255783382022.ToString() : throw \u003479281034910.\u003188723322269(_param1, "Unexpected token parsing date. Expected String, got {0}.".\u003212424921759((IFormatProvider) CultureInfo.InvariantCulture, (object) _param1.\u003271751439454));
      if (string.IsNullOrEmpty(str) & flag)
        return (object) null;
      return type == typeof (DateTimeOffset) ? (!string.IsNullOrEmpty(this.\u003152472154311) ? (object) DateTimeOffset.ParseExact(str, this.\u003152472154311, (IFormatProvider) this.\u003337448072802, this.\u003300609343428) : (object) DateTimeOffset.Parse(str, (IFormatProvider) this.\u003337448072802, this.\u003300609343428)) : (!string.IsNullOrEmpty(this.\u003152472154311) ? (object) DateTime.ParseExact(str, this.\u003152472154311, (IFormatProvider) this.\u003337448072802, this.\u003300609343428) : (object) DateTime.Parse(str, (IFormatProvider) this.\u003337448072802, this.\u003300609343428));
    }
  }
}
