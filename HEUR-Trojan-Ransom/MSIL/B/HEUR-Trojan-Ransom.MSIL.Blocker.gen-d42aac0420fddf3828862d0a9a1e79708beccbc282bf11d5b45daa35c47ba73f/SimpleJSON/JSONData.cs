// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONData
// Assembly: CustomQueryInterfaceMo, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 4B293447-7555-427F-9A9F-AB127E35E000
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-d42aac0420fddf3828862d0a9a1e79708beccbc282bf11d5b45daa35c47ba73f.exe

using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONData : JSONNode
  {
    private string m_Data;

    public override string Value
    {
      get
      {
label_1:
        int num1 = 655868166;
        string data;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1994041591)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              data = this.m_Data;
              num1 = (int) num2 * -1779709840 ^ -226328828;
              continue;
            case 3:
              num1 = (int) num2 * 1699874415 ^ 1608827448;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return data;
      }
      set => this.m_Data = value;
    }

    public JSONData(string aData)
    {
label_1:
      int num1 = -1012858979;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1461058938)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * 2028368504 ^ 1106256922;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      this.m_Data = aData;
    }

    public JSONData(float aData)
    {
label_1:
      int num1 = 164359383;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1766622929)) % 6U)
        {
          case 0:
            num1 = (int) num2 * 1820671248 ^ 1665898682;
            continue;
          case 1:
            goto label_3;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * -352012521 ^ -261403335;
            continue;
          case 4:
            num1 = (int) num2 * 64317083 ^ -1387705177;
            continue;
          case 5:
            this.AsFloat = aData;
            num1 = (int) num2 * 212692628 ^ 1532036248;
            continue;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    public JSONData(double aData) => this.AsDouble = aData;

    public JSONData(bool aData)
    {
label_1:
      int num1 = 1072177098;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1679353441)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 692281337 ^ -831516517;
            continue;
          case 2:
            goto label_3;
          case 3:
            num1 = (int) num2 * -330296382 ^ 1309189495;
            continue;
          case 4:
            this.AsBool = aData;
            num1 = (int) num2 * 1101150422 ^ -706207522;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public JSONData(int aData)
    {
label_1:
      int num1 = 285302991;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1781209876)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * -998662995 ^ 2079215696;
            continue;
          case 3:
            this.AsInt = aData;
            num1 = (int) num2 * 1710502311 ^ -2115849387;
            continue;
          case 4:
            num1 = (int) num2 * 296424132 ^ 58143368;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public override string ToString() => JSONData.\u206B‌‫‏‌‫⁪⁪‮⁬​⁪‪‭‏⁪‮‏⁪‍‮​⁬​‎‎‪⁭‫​‏⁯‍⁮⁮‏⁬‏⁮‎‮("\"", JSONNode.Escape(this.m_Data), "\"");

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 12615859;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1391503148)) % 3U)
        {
          case 1:
            str = JSONData.\u206B‌‫‏‌‫⁪⁪‮⁬​⁪‪‭‏⁪‮‏⁪‍‮​⁬​‎‎‪⁭‫​‏⁯‍⁮⁮‏⁬‏⁮‎‮("\"", JSONNode.Escape(this.m_Data), "\"");
            num1 = (int) num2 * -410236076 ^ 1254107378;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = -1539902959;
      JSONData jsonData;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1568205771)) % 35U)
        {
          case 0:
            num1 = (int) num2 * 452695773 ^ -1475185360;
            continue;
          case 1:
            JSONData.\u202C‬‎‫​⁯⁯‎‎‫‭⁭‬⁮‬‭⁬‎⁮⁬⁫‫‏‬‏⁫‎⁪‌⁫⁪‎⁯⁮​‍‫‬‫⁬‮(aWriter, this.m_Data);
            num1 = (int) num2 * 1476193343 ^ -329018139;
            continue;
          case 2:
            JSONData.\u206E⁬⁫‏‭⁫‌⁫‌‬‏⁭⁬‏​⁪‫‮‭​‪⁪‌⁮‫‌​‭‭⁪⁪‭⁮⁪‬‏⁯‫‌‫‮(aWriter, this.AsInt);
            num1 = (int) num2 * 259898576 ^ -562708827;
            continue;
          case 3:
            JSONData.\u202D‭​​⁮‫⁬‏‭⁮‫‌⁫⁫⁬‫‭⁬‎‭⁯‍‌​⁬⁯‏‮⁪‍⁯‏⁯⁮‍‍‬​⁫⁫‮(aWriter, this.AsFloat);
            num1 = (int) num2 * -1226641866 ^ -1343838019;
            continue;
          case 4:
            int num3 = flag2 ? 825274686 : (num3 = 1123465863);
            num1 = num3 ^ (int) num2 * -1337458152;
            continue;
          case 5:
            flag2 = JSONData.\u202E‍‪‬⁯⁮‫‪‮‌‏⁯⁬‮‍⁫⁬⁭‫⁬‪‭‭⁫⁯‪⁭⁭⁯‭⁬‏⁪‭⁭​‏‏‭‭‮(jsonData.m_Data, this.m_Data);
            num1 = (int) num2 * -1560366247 ^ 2017091997;
            continue;
          case 6:
            JSONData.\u200F‬⁬⁯‍‭‪​‌‮‏‬‫⁯⁮‌‫⁪‍⁫⁬⁯‭⁮⁯⁮‌⁯⁫⁪⁫⁬‭‎⁭‍⁬‏‪‬‮(aWriter, (byte) 4);
            num1 = (int) num2 * 1917858647 ^ 320133965;
            continue;
          case 7:
            num1 = (int) num2 * -1202735365 ^ -627652867;
            continue;
          case 8:
            flag1 = JSONData.\u202E‍‪‬⁯⁮‫‪‮‌‏⁯⁬‮‍⁫⁬⁭‫⁬‪‭‭⁫⁯‪⁭⁭⁯‭⁬‏⁪‭⁭​‏‏‭‭‮(jsonData.m_Data, this.m_Data);
            num1 = (int) num2 * -1969126248 ^ -1961146879;
            continue;
          case 9:
            goto label_1;
          case 10:
            JSONData.\u200F‬⁬⁯‍‭‪​‌‮‏‬‫⁯⁮‌‫⁪‍⁫⁬⁯‭⁮⁯⁮‌⁯⁫⁪⁫⁬‭‎⁭‍⁬‏‪‬‮(aWriter, (byte) 6);
            JSONData.\u200B‌‪‬⁭​‮⁭‌⁫⁫‌⁫‎‍‏⁫‭‍⁭‬⁬‎‪‌⁫‪⁬‪‍‍‫⁯‬⁬⁪‪‍⁮‮‮(aWriter, this.AsBool);
            num1 = (int) num2 * 1670932668 ^ 971169649;
            continue;
          case 11:
            int num4 = !JSONData.\u202E‍‪‬⁯⁮‫‪‮‌‏⁯⁬‮‍⁫⁬⁭‫⁬‪‭‭⁫⁯‪⁭⁭⁯‭⁬‏⁪‭⁭​‏‏‭‭‮(jsonData.m_Data, this.m_Data) ? -421492560 : (num4 = -1991181933);
            num1 = num4 ^ (int) num2 * 753169422;
            continue;
          case 12:
            int num5 = !flag1 ? 1329826159 : (num5 = 691317777);
            num1 = num5 ^ (int) num2 * 783479886;
            continue;
          case 13:
            jsonData.AsBool = this.AsBool;
            num1 = -371382281;
            continue;
          case 14:
            jsonData = new JSONData("");
            num1 = (int) num2 * -96641311 ^ -560395367;
            continue;
          case 15:
            num1 = (int) num2 * 932238024 ^ 797056789;
            continue;
          case 16:
            num1 = (int) num2 * 1372134230 ^ 2065905953;
            continue;
          case 17:
            JSONData.\u202D‫‫‏‮‌‫​​‮‮⁪‪⁬⁪‪‪⁭‎‫⁭‏‭‎‪‮‫⁪‮‍⁮⁭⁯‫‬‮‮⁮⁭‭‮(aWriter, this.AsDouble);
            num1 = (int) num2 * -8362520 ^ -116950452;
            continue;
          case 18:
            num1 = (int) num2 * -1932407064 ^ -792940835;
            continue;
          case 19:
            num1 = (int) num2 * -754559394 ^ -110043685;
            continue;
          case 20:
            jsonData.AsInt = this.AsInt;
            num1 = (int) num2 * -484890107 ^ -1001576425;
            continue;
          case 21:
            jsonData.AsFloat = this.AsFloat;
            num1 = -1551088837;
            continue;
          case 22:
            num1 = (int) num2 * -1354753416 ^ 2084650844;
            continue;
          case 23:
            num1 = (int) num2 * 1372858692 ^ -870596307;
            continue;
          case 24:
            num1 = (int) num2 * -1284301999 ^ -1850272188;
            continue;
          case 25:
            JSONData.\u200F‬⁬⁯‍‭‪​‌‮‏‬‫⁯⁮‌‫⁪‍⁫⁬⁯‭⁮⁯⁮‌⁯⁫⁪⁫⁬‭‎⁭‍⁬‏‪‬‮(aWriter, (byte) 7);
            num1 = (int) num2 * 1266149613 ^ 341496779;
            continue;
          case 26:
            jsonData.AsDouble = this.AsDouble;
            num1 = -1097396274;
            continue;
          case 27:
            num1 = (int) num2 * -793207870 ^ -371940462;
            continue;
          case 28:
            num1 = (int) num2 * 324433458 ^ 781463794;
            continue;
          case 29:
            goto label_3;
          case 30:
            int num6 = !JSONData.\u202E‍‪‬⁯⁮‫‪‮‌‏⁯⁬‮‍⁫⁬⁭‫⁬‪‭‭⁫⁯‪⁭⁭⁯‭⁬‏⁪‭⁭​‏‏‭‭‮(jsonData.m_Data, this.m_Data) ? -365151149 : (num6 = -1717807415);
            num1 = num6 ^ (int) num2 * -1017653299;
            continue;
          case 31:
            num1 = (int) num2 * -1202454147 ^ -1250200020;
            continue;
          case 32:
            num1 = (int) num2 * -134169711 ^ -255721162;
            continue;
          case 33:
            JSONData.\u200F‬⁬⁯‍‭‪​‌‮‏‬‫⁯⁮‌‫⁪‍⁫⁬⁯‭⁮⁯⁮‌⁯⁫⁪⁫⁬‭‎⁭‍⁬‏‪‬‮(aWriter, (byte) 5);
            num1 = (int) num2 * -1009349592 ^ -107477526;
            continue;
          case 34:
            JSONData.\u200F‬⁬⁯‍‭‪​‌‮‏‬‫⁯⁮‌‫⁪‍⁫⁬⁯‭⁮⁯⁮‌⁯⁫⁪⁫⁬‭‎⁭‍⁬‏‪‬‮(aWriter, (byte) 3);
            num1 = -1839150237;
            continue;
          default:
            goto label_37;
        }
      }
label_3:
      return;
label_37:;
    }

    static string \u206B‌‫‏‌‫⁪⁪‮⁬​⁪‪‭‏⁪‮‏⁪‍‮​⁬​‎‎‪⁭‫​‏⁯‍⁮⁮‏⁬‏⁮‎‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2)
    {
      return obj0 + obj1 + obj2;
    }

    static bool \u202E‍‪‬⁯⁮‫‪‮‌‏⁯⁬‮‍⁫⁬⁭‫⁬‪‭‭⁫⁯‪⁭⁭⁯‭⁬‏⁪‭⁭​‏‏‭‭‮([In] string obj0, [In] string obj1) => obj0 == obj1;

    static void \u200F‬⁬⁯‍‭‪​‌‮‏‬‫⁯⁮‌‫⁪‍⁫⁬⁯‭⁮⁯⁮‌⁯⁫⁪⁫⁬‭‎⁭‍⁬‏‪‬‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u206E⁬⁫‏‭⁫‌⁫‌‬‏⁭⁬‏​⁪‫‮‭​‪⁪‌⁮‫‌​‭‭⁪⁪‭⁮⁪‬‏⁯‫‌‫‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u202D‭​​⁮‫⁬‏‭⁮‫‌⁫⁫⁬‫‭⁬‎‭⁯‍‌​⁬⁯‏‮⁪‍⁯‏⁯⁮‍‍‬​⁫⁫‮([In] BinaryWriter obj0, [In] float obj1) => obj0.Write(obj1);

    static void \u202D‫‫‏‮‌‫​​‮‮⁪‪⁬⁪‪‪⁭‎‫⁭‏‭‎‪‮‫⁪‮‍⁮⁭⁯‫‬‮‮⁮⁭‭‮([In] BinaryWriter obj0, [In] double obj1) => obj0.Write(obj1);

    static void \u200B‌‪‬⁭​‮⁭‌⁫⁫‌⁫‎‍‏⁫‭‍⁭‬⁬‎‪‌⁫‪⁬‪‍‍‫⁯‬⁬⁪‪‍⁮‮‮([In] BinaryWriter obj0, [In] bool obj1) => obj0.Write(obj1);

    static void \u202C‬‎‫​⁯⁯‎‎‫‭⁭‬⁮‬‭⁬‎⁮⁬⁫‫‏‬‏⁫‎⁪‌⁫⁪‎⁯⁮​‍‫‬‫⁬‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
