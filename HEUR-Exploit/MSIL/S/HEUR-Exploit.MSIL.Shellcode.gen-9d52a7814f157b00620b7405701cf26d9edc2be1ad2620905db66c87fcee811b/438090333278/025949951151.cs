// Decompiled with JetBrains decompiler
// Type: 438090333278.025949951151
// Assembly: 341658236064, Version=3.1.2.23007, Culture=neutral, PublicKeyToken=31bf3856ad364e35
// MVID: 307D4BC7-4605-49A1-A696-CC8CC5C1D6BD
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-9d52a7814f157b00620b7405701cf26d9edc2be1ad2620905db66c87fcee811b.exe

using \u003896890811494;
using Microsoft.Build.Framework;
using Microsoft.Build.Utilities;
using System;
using System.Collections.Generic;

namespace \u003438090333278
{
  public class \u003025949951151 : \u003281886728672
  {
    [Required]
    public ITaskItem[] \u003602063403101 { get; set; }

    [Required]
    public ITaskItem[] \u003641237037581 { get; set; }

    [Output]
    public ITaskItem[] \u003432581241690 { get; set; }

    protected override void ExecuteCore()
    {
      Dictionary<string, ITaskItem> dictionary = new Dictionary<string, ITaskItem>((IEqualityComparer<string>) StringComparer.OrdinalIgnoreCase);
      foreach (ITaskItem taskItem1 in this.\u003641237037581)
      {
        string metadata = taskItem1.GetMetadata("FileName");
        TaskItem taskItem2 = new TaskItem(metadata);
        taskItem2.SetMetadata("HintPath", taskItem1.ItemSpec);
        taskItem2.SetMetadata("Private", "false");
        dictionary[metadata] = (ITaskItem) taskItem2;
      }
      List<ITaskItem> taskItemList = new List<ITaskItem>();
      foreach (ITaskItem taskItem in this.\u003602063403101)
      {
        string itemSpec = taskItem.ItemSpec;
        if (!dictionary.ContainsKey(itemSpec))
          taskItemList.Add(taskItem);
        else if (!taskItem.GetMetadata("IsImplicitlyDefined").Equals("True", StringComparison.OrdinalIgnoreCase) && taskItem.GetMetadata("NuGetSourceType") == "")
        {
          TaskItem destinationItem = new TaskItem(dictionary[itemSpec]);
          taskItem.CopyMetadataTo((ITaskItem) destinationItem);
          dictionary[itemSpec] = (ITaskItem) destinationItem;
        }
      }
      foreach (ITaskItem taskItem in this.\u003641237037581)
      {
        string metadata = taskItem.GetMetadata("FileName");
        taskItemList.Add(dictionary[metadata]);
      }
      this.\u003432581241690 = taskItemList.ToArray();
    }

    public \u003025949951151()
      : base()
    {
    }
  }
}
