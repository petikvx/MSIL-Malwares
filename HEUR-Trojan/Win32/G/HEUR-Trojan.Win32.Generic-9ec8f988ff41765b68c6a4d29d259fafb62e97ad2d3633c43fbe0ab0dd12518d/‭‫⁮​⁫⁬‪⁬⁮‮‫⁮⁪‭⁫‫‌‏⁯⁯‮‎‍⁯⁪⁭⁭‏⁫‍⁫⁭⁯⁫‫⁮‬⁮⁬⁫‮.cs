// Decompiled with JetBrains decompiler
// Type: ‭‫⁮​⁫⁬‪⁬⁮‮‫⁮⁪‭⁫‫‌‏⁯⁯‮‎‍⁯⁪⁭⁭‏⁫‍⁫⁭⁯⁫‫⁮‬⁮⁬⁫‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using System;
using System.Collections;
using System.IO;

public sealed class \u202D‫⁮​⁫⁬‪⁬⁮‮‫⁮⁪‭⁫‫‌‏⁯⁯‮‎‍⁯⁪⁭⁭‏⁫‍⁫⁭⁯⁫‫⁮‬⁮⁬⁫‮
{
  private static readonly \u200E‎‍‏‏‫‭‬‬‫⁬⁫‍‭⁯‫‬‭⁯‏‎‎‫⁮⁯⁬⁮‍​⁭⁫⁭‫‏‫‌​⁫⁪‍‮[] \u202A‬⁬‬⁬⁯‌‮​​‫‫​‪‌⁫‏⁪⁪‫‮⁪‭‪‪‍⁭​‌⁫‬⁮‌⁯⁬‪​⁯‏‫‮ = new \u200E‎‍‏‏‫‭‬‬‫⁬⁫‍‭⁯‫‬‭⁯‏‎‎‫⁮⁯⁬⁮‍​⁭⁫⁭‫‏‫‌​⁫⁪‍‮[0];
  private static readonly \u200F‎​⁮⁫‫‏‪⁮‬‏​‍‎⁭⁭‌​⁪⁮‎‫‎⁯​​​⁮‌‫​⁯‬‪‌‮⁮⁭⁬⁮‮[] \u200C‎‍‬⁮‌‪⁯⁬⁫​⁮‫⁮​‬‌‬‫‏‌‎⁬‏⁯‏‏⁪⁮‌⁯‫​‪​⁭⁪‌⁫⁬‮ = new \u200F‎​⁮⁫‫‏‪⁮‬‏​‍‎⁭⁭‌​⁪⁮‎‫‎⁯​​​⁮‌‫​⁯‬‪‌‮⁮⁭⁬⁮‮[0];
  public static readonly \u202D‫⁮​⁫⁬‪⁬⁮‮‫⁮⁪‭⁫‫‌‏⁯⁯‮‎‍⁯⁪⁭⁭‏⁫‍⁫⁭⁯⁫‫⁮‬⁮⁬⁫‮ \u206F‫‬‍⁫⁭⁮​‬‬‬‏⁪‬⁭‪‮‍‪‏⁫‎‌⁪‮‍‍‭‮‫⁫⁪‮⁪‪‪​⁮‭⁭‮ = new \u202D‫⁮​⁫⁬‪⁬⁮‮‫⁮⁪‭⁫‫‌‏⁯⁯‮‎‍⁯⁪⁭⁭‏⁫‍⁫⁭⁯⁫‫⁮‬⁮⁬⁫‮(\u202D‫⁮​⁫⁬‪⁬⁮‮‫⁮⁪‭⁫‫‌‏⁯⁯‮‎‍⁯⁪⁭⁭‏⁫‍⁫⁭⁯⁫‫⁮‬⁮⁬⁫‮.\u202A‬⁬‬⁬⁯‌‮​​‫‫​‪‌⁫‏⁪⁪‫‮⁪‭‪‪‍⁭​‌⁫‬⁮‌⁯⁬‪​⁯‏‫‮);
  public static readonly \u202D‫⁮​⁫⁬‪⁬⁮‮‫⁮⁪‭⁫‫‌‏⁯⁯‮‎‍⁯⁪⁭⁭‏⁫‍⁫⁭⁯⁫‫⁮‬⁮⁬⁫‮ \u202B‍⁯⁮‏‮⁬‎⁮⁫‭​‌‮⁬⁪‭⁮‮‎⁫⁬‍⁯‫⁭‎⁫⁬​‎‪‫‪⁮‬‭‌‌⁪‮ = new \u202D‫⁮​⁫⁬‪⁬⁮‮‫⁮⁪‭⁫‫‌‏⁯⁯‮‎‍⁯⁪⁭⁭‏⁫‍⁫⁭⁯⁫‫⁮‬⁮⁬⁫‮(\u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u202B⁫‌⁮⁫‎‬‮⁭‪⁬⁭‌⁯‏‬‮​‪‎⁫‍⁪‭‫​‌⁫⁫⁯‏⁫⁫⁭‌‫⁫‫‪‎‮, \u202D‫⁮​⁫⁬‪⁬⁮‮‫⁮⁪‭⁫‫‌‏⁯⁯‮‎‍⁯⁪⁭⁭‏⁫‍⁫⁭⁯⁫‫⁮‬⁮⁬⁫‮.\u200C‎‍‬⁮‌‪⁯⁬⁫​⁮‫⁮​‬‌‬‫‏‌‎⁬‏⁯‏‏⁪⁮‌⁯‫​‪​⁭⁪‌⁫⁬‮);
  private readonly byte[] \u202E‏‮‭‎⁪‭‌⁫⁪⁪‌⁭‍‌‭⁮⁯‪‮‌‍‭‏⁮‬‮‎‏‭‫‫⁭⁬⁭‫‬​⁬‪‮;
  private readonly \u200F‎​⁮⁫‫‏‪⁮‬‏​‍‎⁭⁭‌​⁪⁮‎‫‎⁯​​​⁮‌‫​⁯‬‪‌‮⁮⁭⁬⁮‮[] \u202A⁭‮⁬⁬‫⁫‬⁬‎‎⁮⁭⁭‎‮‮⁯⁮⁭‫‍‬‭‫​‌‭‪⁬‪​⁮⁫⁯‍‪‍⁭‍‮;

  private static \u200F‎​⁮⁫‫‏‪⁮‬‏​‍‎⁭⁭‌​⁪⁮‎‫‎⁯​​​⁮‌‫​⁯‬‪‌‮⁮⁭⁬⁮‮[] \u202C⁪‭⁮⁫‏⁭‭⁯‭‪⁬‭⁮⁪⁬⁬‌⁪‎‎‮‏‫⁬​⁮‎‮⁫⁫⁬‫⁮‬‪‬⁭‪‍‮(
    \u200E‎‍‏‏‫‭‬‬‫⁬⁫‍‭⁯‫‬‭⁯‏‎‎‫⁮⁯⁬⁮‍​⁭⁫⁭‫‏‫‌​⁫⁪‍‮[] _param0)
  {
    int length = !\u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u206F⁯⁫‌⁭⁭‎‮‎‭‏⁮⁫⁫‍‪⁫⁫‬​⁭‭⁪‭‭⁯​‬⁪⁮‏⁪​‫⁯⁬⁬⁬‫‮‮((object[]) _param0) ? _param0.Length : throw new ArgumentException("cannot be null or contain any nulls", "certificateList");
    \u200F‎​⁮⁫‫‏‪⁮‬‏​‍‎⁭⁭‌​⁪⁮‎‫‎⁯​​​⁮‌‫​⁯‬‪‌‮⁮⁭⁬⁮‮[] objArray = new \u200F‎​⁮⁫‫‏‪⁮‬‏​‍‎⁭⁭‌​⁪⁮‎‫‎⁯​​​⁮‌‫​⁯‬‪‌‮⁮⁭⁬⁮‮[length];
    for (int index = 0; index < length; ++index)
      objArray[index] = new \u200F‎​⁮⁫‫‏‪⁮‬‏​‍‎⁭⁭‌​⁪⁮‎‫‎⁯​​​⁮‌‫​⁯‬‪‌‮⁮⁭⁬⁮‮(_param0[index], (IDictionary) null);
    return objArray;
  }

  public \u202D‫⁮​⁫⁬‪⁬⁮‮‫⁮⁪‭⁫‫‌‏⁯⁯‮‎‍⁯⁪⁭⁭‏⁫‍⁫⁭⁯⁫‫⁮‬⁮⁬⁫‮(
    \u200E‎‍‏‏‫‭‬‬‫⁬⁫‍‭⁯‫‬‭⁯‏‎‎‫⁮⁯⁬⁮‍​⁭⁫⁭‫‏‫‌​⁫⁪‍‮[] _param1)
    : this((byte[]) null, \u202D‫⁮​⁫⁬‪⁬⁮‮‫⁮⁪‭⁫‫‌‏⁯⁯‮‎‍⁯⁪⁭⁭‏⁫‍⁫⁭⁯⁫‫⁮‬⁮⁬⁫‮.\u202C⁪‭⁮⁫‏⁭‭⁯‭‪⁬‭⁮⁪⁬⁬‌⁪‎‎‮‏‫⁬​⁮‎‮⁫⁫⁬‫⁮‬‪‬⁭‪‍‮(_param1))
  {
  }

  public \u202D‫⁮​⁫⁬‪⁬⁮‮‫⁮⁪‭⁫‫‌‏⁯⁯‮‎‍⁯⁪⁭⁭‏⁫‍⁫⁭⁯⁫‫⁮‬⁮⁬⁫‮(
    byte[] _param1,
    \u200F‎​⁮⁫‫‏‪⁮‬‏​‍‎⁭⁭‌​⁪⁮‎‫‎⁯​​​⁮‌‫​⁯‬‪‌‮⁮⁭⁬⁮‮[] _param2)
  {
    if (_param1 != null && !\u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u200B​​‌‏⁪​‭⁪‬‫‭‬⁪⁬⁯‭‍‎‭‮⁫⁪‫⁬‌⁮‪‮​⁭​‎‮‮‮‬‬‍‪‮(_param1.Length))
      throw new ArgumentException("cannot be longer than 255", "certificateRequestContext");
    if (\u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u206F⁯⁫‌⁭⁭‎‮‎‭‏⁮⁫⁫‍‪⁫⁫‬​⁭‭⁪‭‭⁯​‬⁪⁮‏⁪​‫⁯⁬⁬⁬‫‮‮((object[]) _param2))
      throw new ArgumentException("cannot be null or contain any nulls", "certificateEntryList");
    this.\u202E‏‮‭‎⁪‭‌⁫⁪⁪‌⁭‍‌‭⁮⁯‪‮‌‍‭‏⁮‬‮‎‏‭‫‫⁭⁬⁭‫‬​⁬‪‮ = \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u206F‬⁯‪⁬⁮⁭⁮‮‭‬‌‌‎⁪⁫‍‭‍‮‌⁬‮‏‍‪‬‮⁯‫‪‭‬⁭‏⁮⁯​‮⁬‮(_param1);
    this.\u202A⁭‮⁬⁬‫⁫‬⁬‎‎⁮⁭⁭‎‮‮⁯⁮⁭‫‍‬‭‫​‌‭‪⁬‪​⁮⁫⁯‍‪‍⁭‍‮ = _param2;
  }

  public byte[] \u200B‎‮⁮‎‬‮⁪‮​‪⁪‍⁪‬‫‪‌‏⁯‭‫‍⁮⁭⁫​⁬⁮‫‭‬⁯‭‌‪‌⁬⁭‮() => \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u206F‬⁯‪⁬⁮⁭⁮‮‭‬‌‌‎⁪⁫‍‭‍‮‌⁬‮‏‍‪‬‮⁯‫‪‭‬⁭‏⁮⁯​‮⁬‮(this.\u202E‏‮‭‎⁪‭‌⁫⁪⁪‌⁭‍‌‭⁮⁯‪‮‌‍‭‏⁮‬‮‎‏‭‫‫⁭⁬⁭‫‬​⁬‪‮);

  public \u200E‎‍‏‏‫‭‬‬‫⁬⁫‍‭⁯‫‬‭⁯‏‎‎‫⁮⁯⁬⁮‍​⁭⁫⁭‫‏‫‌​⁫⁪‍‮[] \u202E‍‍‫‬‫⁪‏⁭⁯⁫‏⁭‫‬‪⁬⁮‎‍‍‮‎⁮⁯⁭‍‍⁮‏⁫⁫‍‬‭‎‫⁪‌‫‮() => this.\u206F⁬⁪⁬‍‫‍⁫⁪‪‫​‫​⁯⁪‪‮‌‏‌⁪​⁫⁯‌‌⁯⁪‫‬‪‎‭⁬‪‮‫‍⁮‮();

  public \u200E‎‍‏‏‫‭‬‬‫⁬⁫‍‭⁯‫‬‭⁯‏‎‎‫⁮⁯⁬⁮‍​⁭⁫⁭‫‏‫‌​⁫⁪‍‮ \u206E⁭‭⁮‫‌‫⁬‏​‏⁬⁫⁬⁭​​‮⁯‮⁯⁭⁮⁪‎⁫⁮⁪⁭​⁪‬⁯⁯⁭⁪‎⁬⁯‌‮(
    int _param1)
  {
    return this.\u202A⁭‮⁬⁬‫⁫‬⁬‎‎⁮⁭⁭‎‮‮⁯⁮⁭‫‍‬‭‫​‌‭‪⁬‪​⁮⁫⁯‍‪‍⁭‍‮[_param1].\u206C‫‫‎⁮‌‭‌‏‎​‏⁮⁭⁪‭‎​‌⁯‪⁬⁪‬‏‮⁭⁪⁭‫‪‭‫‎⁭​⁬⁮‬‮;
  }

  public \u200F‎​⁮⁫‫‏‪⁮‬‏​‍‎⁭⁭‌​⁪⁮‎‫‎⁯​​​⁮‌‫​⁯‬‪‌‮⁮⁭⁬⁮‮ \u200D‪‏‏⁬⁬⁭⁯​‎‪⁫⁯⁭​⁯⁯⁬‎⁪‎⁫⁭⁮​⁪‍⁬⁫‍⁫‌‭‎‪⁯‪⁬‎‏‮(
    int _param1)
  {
    return this.\u202A⁭‮⁬⁬‫⁫‬⁬‎‎⁮⁭⁭‎‮‮⁯⁮⁭‫‍‬‭‫​‌‭‪⁬‪​⁮⁫⁯‍‪‍⁭‍‮[_param1];
  }

  public \u200F‎​⁮⁫‫‏‪⁮‬‏​‍‎⁭⁭‌​⁪⁮‎‫‎⁯​​​⁮‌‫​⁯‬‪‌‮⁮⁭⁬⁮‮[] \u200E‭⁫⁬⁯‎⁭⁫⁭⁯‭‮⁭⁯​⁯⁫‎‌​⁭‪‪‏⁯‮⁪‭‬⁯‬⁭‫‭‭‌‍⁭⁮‪‮() => this.\u206D‏‎‮‪⁯⁪‮‭⁬‮⁪‏​⁪⁭‭‫⁮‏‪‭‮‭‪⁬‮‎⁮⁪⁯‮⁮⁪‍‫⁯‭⁪⁭‮();

  public short \u200F‮⁫‬⁯‪⁯⁫‎‎‫‬‪⁭‍⁭‬⁬‭⁭​‭​⁪⁫‬‎‌‎⁫‏⁪⁫‎‍‮‍⁪⁯⁯‮ => 0;

  public int \u206F‌⁬‎‮‎⁮​‫​⁫⁯‍​⁫⁯​⁯‎⁭‮⁬‪‮‎‪​⁮‪‌​‬⁫‬​​‍‬‮‍‮ => this.\u202A⁭‮⁬⁬‫⁫‬⁬‎‎⁮⁭⁭‎‮‮⁯⁮⁭‫‍‬‭‫​‌‭‪⁬‪​⁮⁫⁯‍‪‍⁭‍‮.Length;

  public bool \u202E‮‬⁭⁮⁫‮‮⁭‎⁭⁭‭‬‌​‫⁯‍‭‌‍‫‪‍‏‮‌‏⁭‍⁫‎⁬‮‌⁫⁮​‌‮ => this.\u202A⁭‮⁬⁬‫⁫‬⁬‎‎⁮⁭⁭‎‮‮⁯⁮⁭‫‍‬‭‫​‌‭‪⁬‪​⁮⁫⁯‍‪‍⁭‍‮.Length == 0;

  public void \u206C‮⁯‌⁯‌⁭⁫‪‭​‪‫⁫⁪⁯⁭⁫‎⁬‫‫⁮‎‮⁬⁪‮‎‫‭⁪⁭⁫⁪‪⁪⁬‭‫‮(
    \u206D⁪⁭‫‬‮⁯‭⁮​‍​⁪⁬⁯‏‍⁮‮‍‬​‍‌‏‭⁯‪‬‎⁪‪‮⁬‎‬‏‪​⁮‮ _param1,
    Stream _param2,
    Stream _param3)
  {
    bool flag = \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u200F⁬⁮‌‬‪‏‏‎‮‭‍‌⁯⁯‪⁪‌​⁭‍‌‪⁪⁭⁪⁭⁯⁮⁫‫⁭‏⁬‎⁮‪‫​‫‮(_param1);
    if (this.\u202E‏‮‭‎⁪‭‌⁫⁪⁪‌⁭‍‌‭⁮⁯‪‮‌‍‭‏⁮‬‮‎‏‭‫‫⁭⁬⁭‫‬​⁬‪‮ != null != flag)
      throw new InvalidOperationException();
    if (flag)
      \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u200E⁯‭‎‌⁯⁮⁫‮⁬‪⁬⁮‪⁬‌⁪‎⁬⁫‍‬‭⁬‏‮⁮⁭⁮⁪‬‌‌⁯‎​‌‬‬‍‮(this.\u202E‏‮‭‎⁪‭‌⁫⁪⁪‌⁭‍‌‭⁮⁯‪‮‌‍‭‏⁮‬‮‎‏‭‫‫⁭⁬⁭‫‬​⁬‪‮, _param2);
    int length = this.\u202A⁭‮⁬⁬‫⁫‬⁬‎‎⁮⁭⁭‎‮‮⁯⁮⁭‫‍‬‭‫​‌‭‪⁬‪​⁮⁫⁯‍‪‍⁭‍‮.Length;
    IList list1 = \u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u200C⁮‬‎⁪‌⁮‬​⁬⁭​‏⁮​‍‌⁮‮⁪⁪⁫‪‫‎⁮‎⁬​​‏⁪‪‍‬‪⁬⁫⁪‏‮(length);
    IList list2 = flag ? \u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u200C⁮‬‎⁪‌⁮‬​⁬⁭​‏⁮​‍‌⁮‮⁪⁪⁫‪‫‎⁮‎⁬​​‏⁪‪‍‬‪⁬⁫⁪‏‮(length) : (IList) null;
    long num = 0;
    for (int index = 0; index < length; ++index)
    {
      \u200F‎​⁮⁫‫‏‪⁮‬‏​‍‎⁭⁭‌​⁪⁮‎‫‎⁯​​​⁮‌‫​⁯‬‪‌‮⁮⁭⁬⁮‮ obj1 = this.\u202A⁭‮⁬⁬‫⁫‬⁬‎‎⁮⁭⁭‎‮‮⁯⁮⁭‫‍‬‭‫​‌‭‪⁬‪​⁮⁫⁯‍‪‍⁭‍‮[index];
      \u200E‎‍‏‏‫‭‬‬‫⁬⁫‍‭⁯‫‬‭⁯‏‎‎‫⁮⁯⁬⁮‍​⁭⁫⁭‫‏‫‌​⁫⁪‍‮ obj2 = obj1.\u206C‫‫‎⁮‌‭‌‏‎​‏⁮⁭⁪‭‎​‌⁯‪⁬⁪‬‏‮⁭⁪⁭‫‪‭‫‎⁭​⁬⁮‬‮;
      byte[] numArray1 = obj2.\u206F​‪‪‌‮‬‫⁮​⁭‎‪​‬⁯‫‎⁭‪‌​‮‮‌​‌‮‏‭‎‫‌‮⁭‍‭‫‬‫‮();
      if (index == 0 && _param3 != null)
        \u202D‫⁮​⁫⁬‪⁬⁮‮‫⁮⁪‭⁫‫‌‏⁯⁯‮‎‍⁯⁪⁭⁭‏⁫‍⁫⁭⁯⁫‫⁮‬⁮⁬⁫‮.\u206D⁮​‌‎‬‭⁬‌⁬‮⁫⁪‌‍⁯‌‭‭‏‪​‌‬‏‍⁮‬‬⁪‭‮⁬⁯⁫‎⁬‍‍‮(_param1, obj2, numArray1, _param3);
      list1.Add((object) numArray1);
      num = num + (long) numArray1.Length + 3L;
      if (flag)
      {
        IDictionary dictionary = obj1.\u202E⁭‍⁯⁫⁯‏⁯‍‬‮⁬‍⁯‌⁪‬‌⁫‎⁭⁭‫‭‪‏⁮​‍‍‎⁪​‪⁪⁮⁪‏‫‬‮;
        byte[] numArray2 = dictionary == null ? \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u202B⁫‌⁮⁫‎‬‮⁭‪⁬⁭‌⁯‏‬‮​‪‎⁫‍⁪‭‫​‌⁫⁫⁯‏⁫⁫⁭‌‫⁫‫‪‎‮ : \u202E‎⁫⁯‪‎‫‌⁪⁮‪‍⁮‬⁭⁯⁮‌⁬‭⁬‪⁭‏‭⁭​‎‭⁮​⁪⁪⁫‮‌‏⁮‍⁪‮.\u200C‫‮‭​‎‮⁪‍‪​⁭‌‪‮‍⁪⁫‌‮⁮⁮‌⁫⁯⁫‎⁪‏​⁯​‍‬‏‏⁭‏‬‫‮(dictionary);
        list2.Add((object) numArray2);
        num = num + (long) numArray2.Length + 2L;
      }
    }
    \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u200B⁫⁫⁫‍⁬‍⁪‪‌‮‌‮‪‍‫‏‍⁬‏⁮‮‌‍‭‪‮‫⁫‍‎‍‎‮‎‮⁪‏⁬⁭‮(num);
    \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u202C⁭‏‏‬‍⁪‏⁭⁬‬‍‎‫⁫‎⁪⁮⁪⁫‪‭⁯‌‌‫‌⁫⁯‬⁭⁭‭⁬⁪⁫‮‏‏‬‮((int) num, _param2);
    for (int index = 0; index < length; ++index)
    {
      \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u200C⁮‪⁫‬‌⁮‎‏‫‍‌‏‮⁭‪‫‫​⁫⁭⁯⁯⁪‌⁭‬⁪‎‍‬‬⁬⁮‏​⁭​⁪‮((byte[]) list1[index], _param2);
      if (flag)
        \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u202B‪⁮‪⁮‌​‎⁫‍⁯‬​⁪⁮‮‬‭​‌‮⁮​⁮‏‮⁭‮⁫⁮⁭‎‪‎‏‪⁭‌‌‮‮((byte[]) list2[index], _param2);
    }
  }

  public static \u202D‫⁮​⁫⁬‪⁬⁮‮‫⁮⁪‭⁫‫‌‏⁯⁯‮‎‍⁯⁪⁭⁭‏⁫‍⁫⁭⁯⁫‫⁮‬⁮⁬⁫‮ \u202B‪​⁪‍⁫‮‏‪‎‏‫⁮‫⁬‬⁭‏⁯⁭‮⁪‏‮⁯‪‏⁪‪‌‭⁭‪‮‏‭⁭‍‪⁪‮(
    \u202D‫⁮​⁫⁬‪⁬⁮‮‫⁮⁪‭⁫‫‌‏⁯⁯‮‎‍⁯⁪⁭⁭‏⁫‍⁫⁭⁯⁫‫⁮‬⁮⁬⁫‮.\u200F‏‮‮⁪‭⁭‏‮⁬‎⁯⁯‏‮‌‍‫‍‪‪‎‮⁪⁪⁭‏‪⁮⁫‏⁮‎‪​⁬‎‌‏‌‮ _param0,
    \u206D⁪⁭‫‬‮⁯‭⁮​‍​⁪⁬⁯‏‍⁮‮‍‬​‍‌‏‭⁯‪‬‎⁪‪‮⁬‎‬‏‪​⁮‮ _param1,
    Stream _param2,
    Stream _param3)
  {
    bool flag = \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u200F⁬⁮‌‬‪‏‏‎‮‭‍‌⁯⁯‪⁪‌​⁭‍‌‪⁪⁭⁪⁭⁯⁮⁫‫⁭‏⁬‎⁮‪‫​‫‮(_param1.\u206B‮‍⁯⁬‪⁭‬‏​‍⁯⁪‌‬​⁮‬⁪⁬‌‬​‮‫⁭⁫‎⁪‪⁭‏‬⁪‍⁬‪⁬‮⁮‮.\u206D‭​⁪⁮⁪‮‎⁪⁯‎‌⁭‮‎‫⁫​‌‮⁯⁭‍⁪‫​​⁬‪‍⁮‏‍‫‭⁪‭‎⁭‪‮);
    byte[] numArray1 = (byte[]) null;
    if (flag)
      numArray1 = \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u202C‪​⁬⁫‭‏⁫‫‬‪‎⁮⁯‌‍‫⁬​‎‪‭⁮‫‮‏‎‏⁮⁯⁭​⁬‮‪​⁯‮⁬‏‮(_param2);
    int num1 = \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u206A‎⁬‎‮‍‍⁭‎⁫⁯‮‌‌‌‪‫⁮⁬‎‮‫⁯⁪‭‬​⁭‮‏⁮‮‌‏‌⁭‮‭‫‌‮(_param2);
    if (num1 == 0)
    {
      if (!flag)
        return \u202D‫⁮​⁫⁬‪⁬⁮‮‫⁮⁪‭⁫‫‌‏⁯⁯‮‎‍⁯⁪⁭⁭‏⁫‍⁫⁭⁯⁫‫⁮‬⁮⁬⁫‮.\u206F‫‬‍⁫⁭⁮​‬‬‬‏⁪‬⁭‪‮‍‪‏⁫‎‌⁪‮‍‍‭‮‫⁫⁪‮⁪‪‪​⁮‭⁭‮;
      return numArray1.Length >= 1 ? new \u202D‫⁮​⁫⁬‪⁬⁮‮‫⁮⁪‭⁫‫‌‏⁯⁯‮‎‍⁯⁪⁭⁭‏⁫‍⁫⁭⁯⁫‫⁮‬⁮⁬⁫‮(numArray1, \u202D‫⁮​⁫⁬‪⁬⁮‮‫⁮⁪‭⁫‫‌‏⁯⁯‮‎‍⁯⁪⁭⁭‏⁫‍⁫⁭⁯⁫‫⁮‬⁮⁬⁫‮.\u200C‎‍‬⁮‌‪⁯⁬⁫​⁮‫⁮​‬‌‬‫‏‌‎⁬‏⁯‏‏⁪⁮‌⁯‫​‪​⁭⁪‌⁫⁬‮) : \u202D‫⁮​⁫⁬‪⁬⁮‮‫⁮⁪‭⁫‫‌‏⁯⁯‮‎‍⁯⁪⁭⁭‏⁫‍⁫⁭⁯⁫‫⁮‬⁮⁬⁫‮.\u202B‍⁯⁮‏‮⁬‎⁮⁫‭​‌‮⁬⁪‭⁮‮‎⁫⁬‍⁯‫⁭‎⁫⁬​‎‪‫‪⁮‬‭‌‌⁪‮;
    }
    MemoryStream memoryStream = new MemoryStream(\u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u206A⁫⁯⁯⁫‫⁬‬​‬‪‫‮⁯‎‌‭‫‏‭‭‍‍⁭‭⁪‌‭⁬‮‬‮‭‫‍‪​⁪​⁯‮(num1, _param2), false);
    \u200C⁯⁮⁫‫‌‍‏⁯‮⁮‬⁮‫‏‎‎⁫​⁯​‮⁯⁯⁪‭⁫⁮⁭‭‍‮⁮‭⁬⁮⁭‎‮⁫‮ obj1 = _param1.\u206B⁯⁯‮‎‮⁮⁯‍‭‮‭⁭⁪‌‬⁪⁯‪‫‍⁫​‎⁭⁫‭⁫‏‌⁫⁮⁪⁬‫⁯‫‮‬⁯‮;
    int num2 = Math.Max(1, _param0.\u206D‭‭‫⁭⁮⁪⁮‌⁯‍‪​⁪‭‍‏⁬‎⁭‭⁪‮‍⁫‮‮‎‌‮‪⁭​⁬‪‏⁯⁬​⁬‮);
    IList list = \u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u200C⁮‬‎⁪‌⁮‬​⁬⁭​‏⁮​‍‌⁮‮⁪⁪⁫‪‫‎⁮‎⁬​​‏⁪‪‍‬‪⁬⁫⁪‏‮();
    while (memoryStream.Position < memoryStream.Length)
    {
      if (list.Count >= num2)
        throw new \u202B‬⁪⁮⁬⁮‫‏‫⁯‮⁬‫‬‍⁬⁮⁬‬‫‫⁮‎‎⁬​‍‎‍‏​⁯‍‬‫‍‫‮⁯‏‮((short) 80, "Certificate chain longer than maximum (" + num2.ToString() + ")");
      byte[] numArray2 = \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u202D‭‌⁬⁫​‌‎⁪⁮⁬‎‌⁬‍‮⁯‭‏⁪‬‫‬⁯‎⁬‬‌‮‬‪‭‫⁫‏⁬⁯‍‭‎‮((Stream) memoryStream, 1);
      \u200E‎‍‏‏‫‭‬‬‫⁬⁫‍‭⁯‫‬‭⁯‏‎‎‫⁮⁯⁬⁮‍​⁭⁫⁭‫‏‫‌​⁫⁪‍‮ obj2 = obj1.\u206A⁭‌‪⁪⁪⁬‫‎⁯⁯‭⁪‫‌⁮‭‮‮‫‎⁫‌‬‍⁯‎‌‍‫⁭‏‬‬⁪‮‎‍⁭‪‮(numArray2);
      if (list.Count < 1 && _param3 != null)
        \u202D‫⁮​⁫⁬‪⁬⁮‮‫⁮⁪‭⁫‫‌‏⁯⁯‮‎‍⁯⁪⁭⁭‏⁫‍⁫⁭⁯⁫‫⁮‬⁮⁬⁫‮.\u206D⁮​‌‎‬‭⁬‌⁬‮⁫⁪‌‍⁯‌‭‭‏‪​‌‬‏‍⁮‬‬⁪‭‮⁬⁯⁫‎⁬‍‍‮(_param1, obj2, numArray2, _param3);
      IDictionary dictionary = (IDictionary) null;
      if (flag)
        dictionary = \u202E‎⁫⁯‪‎‫‌⁪⁮‪‍⁮‬⁭⁯⁮‌⁬‭⁬‪⁭‏‭⁭​‎‭⁮​⁪⁪⁫‮‌‏⁮‍⁪‮.\u206D⁯‌‏​⁮⁭‭⁮⁮‮⁬​​⁫‌‮‎‫⁮⁬⁯‍‎⁯⁪‍​‬‬⁭​‏‮‏⁬​‭‪⁬‮(11, \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u202E‌‬⁭‮⁮‏‬‏⁭‭‫⁬‏​⁯‍‭‫‬⁬‏‮⁪⁯‫⁬⁮⁮⁬​⁬‏​‮⁬‫⁬‬⁪‮((Stream) memoryStream));
      list.Add((object) new \u200F‎​⁮⁫‫‏‪⁮‬‏​‍‎⁭⁭‌​⁪⁮‎‫‎⁯​​​⁮‌‫​⁯‬‪‌‮⁮⁭⁬⁮‮(obj2, dictionary));
    }
    \u200F‎​⁮⁫‫‏‪⁮‬‏​‍‎⁭⁭‌​⁪⁮‎‫‎⁯​​​⁮‌‫​⁯‬‪‌‮⁮⁭⁬⁮‮[] objArray = new \u200F‎​⁮⁫‫‏‪⁮‬‏​‍‎⁭⁭‌​⁪⁮‎‫‎⁯​​​⁮‌‫​⁯‬‪‌‮⁮⁭⁬⁮‮[list.Count];
    for (int index = 0; index < list.Count; ++index)
      objArray[index] = (\u200F‎​⁮⁫‫‏‪⁮‬‏​‍‎⁭⁭‌​⁪⁮‎‫‎⁯​​​⁮‌‫​⁯‬‪‌‮⁮⁭⁬⁮‮) list[index];
    return new \u202D‫⁮​⁫⁬‪⁬⁮‮‫⁮⁪‭⁫‫‌‏⁯⁯‮‎‍⁯⁪⁭⁭‏⁫‍⁫⁭⁯⁫‫⁮‬⁮⁬⁫‮(numArray1, objArray);
  }

  private static void \u206D⁮​‌‎‬‭⁬‌⁬‮⁫⁪‌‍⁯‌‭‭‏‪​‌‬‏‍⁮‬‬⁪‭‮⁬⁯⁫‎⁬‍‍‮(
    \u206D⁪⁭‫‬‮⁯‭⁮​‍​⁪⁬⁯‏‍⁮‮‍‬​‍‌‏‭⁯‪‬‎⁪‪‮⁬‎‬‏‪​⁮‮ _param0,
    \u200E‎‍‏‏‫‭‬‬‫⁬⁫‍‭⁯‫‬‭⁯‏‎‎‫⁮⁯⁬⁮‍​⁭⁫⁭‫‏‫‌​⁫⁪‍‮ _param1,
    byte[] _param2,
    Stream _param3)
  {
    byte[] buffer = \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u206D⁮​‌‎‬‭⁬‌⁬‮⁫⁪‌‍⁯‌‭‭‏‪​‌‬‏‍⁮‬‬⁪‭‮⁬⁯⁫‎⁬‍‍‮(_param0, _param1, _param2);
    if (buffer == null || buffer.Length == 0)
      return;
    _param3.Write(buffer, 0, buffer.Length);
  }

  private \u200E‎‍‏‏‫‭‬‬‫⁬⁫‍‭⁯‫‬‭⁯‏‎‎‫⁮⁯⁬⁮‍​⁭⁫⁭‫‏‫‌​⁫⁪‍‮[] \u206F⁬⁪⁬‍‫‍⁫⁪‪‫​‫​⁯⁪‪‮‌‏‌⁪​⁫⁯‌‌⁯⁪‫‬‪‎‭⁬‪‮‫‍⁮‮()
  {
    int length = this.\u202A⁭‮⁬⁬‫⁫‬⁬‎‎⁮⁭⁭‎‮‮⁯⁮⁭‫‍‬‭‫​‌‭‪⁬‪​⁮⁫⁯‍‪‍⁭‍‮.Length;
    if (length == 0)
      return \u202D‫⁮​⁫⁬‪⁬⁮‮‫⁮⁪‭⁫‫‌‏⁯⁯‮‎‍⁯⁪⁭⁭‏⁫‍⁫⁭⁯⁫‫⁮‬⁮⁬⁫‮.\u202A‬⁬‬⁬⁯‌‮​​‫‫​‪‌⁫‏⁪⁪‫‮⁪‭‪‪‍⁭​‌⁫‬⁮‌⁯⁬‪​⁯‏‫‮;
    \u200E‎‍‏‏‫‭‬‬‫⁬⁫‍‭⁯‫‬‭⁯‏‎‎‫⁮⁯⁬⁮‍​⁭⁫⁭‫‏‫‌​⁫⁪‍‮[] objArray = new \u200E‎‍‏‏‫‭‬‬‫⁬⁫‍‭⁯‫‬‭⁯‏‎‎‫⁮⁯⁬⁮‍​⁭⁫⁭‫‏‫‌​⁫⁪‍‮[length];
    for (int index = 0; index < length; ++index)
      objArray[index] = this.\u202A⁭‮⁬⁬‫⁫‬⁬‎‎⁮⁭⁭‎‮‮⁯⁮⁭‫‍‬‭‫​‌‭‪⁬‪​⁮⁫⁯‍‪‍⁭‍‮[index].\u206C‫‫‎⁮‌‭‌‏‎​‏⁮⁭⁪‭‎​‌⁯‪⁬⁪‬‏‮⁭⁪⁭‫‪‭‫‎⁭​⁬⁮‬‮;
    return objArray;
  }

  private \u200F‎​⁮⁫‫‏‪⁮‬‏​‍‎⁭⁭‌​⁪⁮‎‫‎⁯​​​⁮‌‫​⁯‬‪‌‮⁮⁭⁬⁮‮[] \u206D‏‎‮‪⁯⁪‮‭⁬‮⁪‏​⁪⁭‭‫⁮‏‪‭‮‭‪⁬‮‎⁮⁪⁯‮⁮⁪‍‫⁯‭⁪⁭‮()
  {
    int length = this.\u202A⁭‮⁬⁬‫⁫‬⁬‎‎⁮⁭⁭‎‮‮⁯⁮⁭‫‍‬‭‫​‌‭‪⁬‪​⁮⁫⁯‍‪‍⁭‍‮.Length;
    if (length == 0)
      return \u202D‫⁮​⁫⁬‪⁬⁮‮‫⁮⁪‭⁫‫‌‏⁯⁯‮‎‍⁯⁪⁭⁭‏⁫‍⁫⁭⁯⁫‫⁮‬⁮⁬⁫‮.\u200C‎‍‬⁮‌‪⁯⁬⁫​⁮‫⁮​‬‌‬‫‏‌‎⁬‏⁯‏‏⁪⁮‌⁯‫​‪​⁭⁪‌⁫⁬‮;
    \u200F‎​⁮⁫‫‏‪⁮‬‏​‍‎⁭⁭‌​⁪⁮‎‫‎⁯​​​⁮‌‫​⁯‬‪‌‮⁮⁭⁬⁮‮[] destinationArray = new \u200F‎​⁮⁫‫‏‪⁮‬‏​‍‎⁭⁭‌​⁪⁮‎‫‎⁯​​​⁮‌‫​⁯‬‪‌‮⁮⁭⁬⁮‮[length];
    Array.Copy((Array) this.\u202A⁭‮⁬⁬‫⁫‬⁬‎‎⁮⁭⁭‎‮‮⁯⁮⁭‫‍‬‭‫​‌‭‪⁬‪​⁮⁫⁯‍‪‍⁭‍‮, 0, (Array) destinationArray, 0, length);
    return destinationArray;
  }

  public sealed class \u200F‏‮‮⁪‭⁭‏‮⁬‎⁯⁯‏‮‌‍‫‍‪‪‎‮⁪⁪⁭‏‪⁮⁫‏⁮‎‪​⁬‎‌‏‌‮
  {
    private int \u202E‮⁯⁯​‭‮⁮⁭‫​⁭‏‫‎⁫​⁪⁭‎⁫⁬⁪‍‫‌‭⁭‫‎⁮⁪‮‮‫⁭‍⁬⁮⁮‮ = int.MaxValue;

    public int \u206D‭‭‫⁭⁮⁪⁮‌⁯‍‪​⁪‭‍‏⁬‎⁭‭⁪‮‍⁫‮‮‎‌‮‪⁭​⁬‪‏⁯⁬​⁬‮ => this.\u202E‮⁯⁯​‭‮⁮⁭‫​⁭‏‫‎⁫​⁪⁭‎⁫⁬⁪‍‫‌‭⁭‫‎⁮⁪‮‮‫⁭‍⁬⁮⁮‮;

    public \u202D‫⁮​⁫⁬‪⁬⁮‮‫⁮⁪‭⁫‫‌‏⁯⁯‮‎‍⁯⁪⁭⁭‏⁫‍⁫⁭⁯⁫‫⁮‬⁮⁬⁫‮.\u200F‏‮‮⁪‭⁭‏‮⁬‎⁯⁯‏‮‌‍‫‍‪‪‎‮⁪⁪⁭‏‪⁮⁫‏⁮‎‪​⁬‎‌‏‌‮ \u200F‮‮⁮⁪‫⁫⁯‫‬⁭‫​⁬‮‏‌‭‏⁮‌‭⁮⁭⁬⁪‫‏⁭⁭‫​⁮‪⁫⁫‫​⁫⁬‮(
      int _param1)
    {
      this.\u202E‮⁯⁯​‭‮⁮⁭‫​⁭‏‫‎⁫​⁪⁭‎⁫⁬⁪‍‫‌‭⁭‫‎⁮⁪‮‮‫⁭‍⁬⁮⁮‮ = _param1;
      return this;
    }
  }
}
