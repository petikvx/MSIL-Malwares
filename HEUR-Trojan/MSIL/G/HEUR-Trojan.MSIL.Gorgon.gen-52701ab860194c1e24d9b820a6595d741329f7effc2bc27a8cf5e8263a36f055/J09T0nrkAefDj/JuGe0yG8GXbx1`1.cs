// Decompiled with JetBrains decompiler
// Type: J09T0nrkAefDj.JuGe0yG8GXbx1
// Assembly: 6xHrFwRAI8cwf, Version=5.6.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35
// MVID: D0CFE593-D471-48A8-93C1-A7D99C557285
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Gorgon.gen-52701ab860194c1e24d9b820a6595d741329f7effc2bc27a8cf5e8263a36f055.exe

using MtJz1O9fMVzUN;
using O3eNiYziSSH50;
using System;
using System.Collections.Generic;
using System.Linq;

namespace J09T0nrkAefDj
{
  public class JuGe0yG8GXbx1<T>
  {
    private readonly T[] gU6TyYm3PGh3o;
    private readonly IList<IEnumerable<T>> yyLa6QLIOmkfq;
    private readonly List<HashSet<T>> CZxw3qyreZsC5;
    private readonly List<List<T>> WroAfzUSIJVDd;
    private readonly List<HashSet<int>> Ktngm1BEW9M6z;
    private readonly List<Stack<int>> HIlUqQ07jhr8L;
    private readonly List<Stack<int>> KQu6CIbIYgcrV;
    private readonly List<Stack<Stack<T>>> Tm7zDUoRJSFM6;
    private readonly IComparer<T> RZmHSJUYGM4D2;
    private readonly Func<T, T, bool> cXNZm5XTsDVcz;

    private JuGe0yG8GXbx1(
      IEnumerable<IEnumerable<T>> groupedItems,
      IComparer<T> itemSorter,
      Func<T, T, bool> shouldRejectPairFunc)
    {
      this._prioritySorter = itemSorter;
      this._shouldRejectPair = shouldRejectPairFunc;
      List<IEnumerable<T>> list = groupedItems.ToList<IEnumerable<T>>();
      this._initialDomains = (IList<IEnumerable<T>>) groupedItems.ToList<IEnumerable<T>>();
      this._currentDomains = list.Select<IEnumerable<T>, HashSet<T>>((Func<IEnumerable<T>, HashSet<T>>) delegate); //unable to render the statement
      this._currentDomainsSorted = list.Select<IEnumerable<T>, List<T>>((Func<IEnumerable<T>, List<T>>) delegate); //unable to render the statement
      foreach (List<T> objList in this._currentDomainsSorted)
        objList.Sort(this._prioritySorter);
      this._conflictSet = list.Select<IEnumerable<T>, HashSet<int>>((Func<IEnumerable<T>, HashSet<int>>) delegate); //unable to render the statement
      this._pastForwardChecking = list.Select<IEnumerable<T>, Stack<int>>((Func<IEnumerable<T>, Stack<int>>) delegate); //unable to render the statement
      this._futureForwardChecking = list.Select<IEnumerable<T>, Stack<int>>((Func<IEnumerable<T>, Stack<int>>) delegate); //unable to render the statement
      this._reductions = list.Select<IEnumerable<T>, Stack<Stack<T>>>((Func<IEnumerable<T>, Stack<Stack<T>>>) delegate); //unable to render the statement
      this._solution = new T[list.Count];
    }

    public static IEnumerable<T> MVEFfv6QXAVhq(
      IEnumerable<IEnumerable<T>> ZIkU5YYjTug0N,
      IComparer<T> rJGkyVuuLR3a1,
      Func<T, T, bool> _param2,
      Action<IEnumerable<T>> ET9UGPcpbBILT)
    {
      return new JuGe0yG8GXbx1<T>(ZIkU5YYjTug0N, rJGkyVuuLR3a1, _param2).FindSolution(ET9UGPcpbBILT);
    }

    private IEnumerable<T> JnGA5KClR5RqW(Action<IEnumerable<T>> BDklvAYPuHcm5)
    {
      bool flag = true;
      int num1 = 0;
      int num2 = -1;
      int num3 = 0;
      do
      {
        if (!flag)
        {
          ++num3;
          if (num3 > 10000)
            return (IEnumerable<T>) null;
        }
        num1 = flag ? this.MoveForward(num1, ref flag) : this.MoveBackward(num1, ref flag);
        if (BDklvAYPuHcm5 != null && num1 > num2)
        {
          num2 = num1;
          BDklvAYPuHcm5((IEnumerable<T>) new List<T>((IEnumerable<T>) this._solution));
        }
        if (num1 > this._solution.Length)
          throw new r4748yTeezCF5(\u00335D02svxTXoZR.Gsci9f99J0E0q);
        if (num1 == this._solution.Length)
          return (IEnumerable<T>) this._solution;
      }
      while (num1 >= 0);
      return (IEnumerable<T>) null;
    }

    private int f71QXqUCERW38(int _param1, ref bool _param2)
    {
      _param2 = false;
      foreach (T sorted in this.GetSortedList(_param1))
      {
        if (!_param2)
        {
          _param2 = true;
          this._solution[_param1] = sorted;
          for (int index = _param1 + 1; index < this._currentDomains.Count & _param2; ++index)
          {
            _param2 = this.CheckForward(_param1, index);
            if (!_param2)
            {
              this._currentDomains[_param1].Remove(sorted);
              this.UndoReductions(_param1);
              this._conflictSet[_param1].UnionWith((IEnumerable<int>) this._pastForwardChecking[index]);
            }
          }
        }
        else
          break;
      }
      return !_param2 ? _param1 : _param1 + 1;
    }

    private int c8QWXu4sBG7nK(int _param1, ref bool EdANCtrLZaBcV)
    {
      if (_param1 < 0 || _param1 >= this._solution.Length)
        throw new r4748yTeezCF5(\u00335D02svxTXoZR.Gsci9f99J0E0q);
      if (_param1 == 0 && !EdANCtrLZaBcV)
        return -1;
      Func<IEnumerable<int>, int> func = (Func<IEnumerable<int>, int>) delegate; //unable to render the statement
      int index1 = Math.Max(func((IEnumerable<int>) this._conflictSet[_param1]), func((IEnumerable<int>) this._pastForwardChecking[_param1]));
      this._conflictSet[index1] = new HashSet<int>(this._conflictSet[_param1].Union<int>((IEnumerable<int>) this._pastForwardChecking[_param1]).Union<int>((IEnumerable<int>) this._conflictSet[index1]).Except<int>((IEnumerable<int>) new int[1]
      {
        index1
      }));
      for (int index2 = _param1; index2 > index1; --index2)
      {
        this._conflictSet[index2].Clear();
        this.UndoReductions(index2);
        this.UpdateCurrentDomain(index2);
      }
      this.UndoReductions(index1);
      this._currentDomains[index1].Remove(this._solution[index1]);
      EdANCtrLZaBcV = this._currentDomains[index1] != null && this._currentDomains[index1].Any<T>();
      return index1;
    }

    private bool \u0032Pk7cMnmtQK6d(int r7H1DBwsdYoVJ, int _param2)
    {
      Stack<T> other = new Stack<T>();
      foreach (T sorted in this.GetSortedList(_param2))
      {
        this._solution[_param2] = sorted;
        if (this._shouldRejectPair(this._solution[r7H1DBwsdYoVJ], this._solution[_param2]))
          other.Push(sorted);
      }
      if (other.Count > 0)
      {
        this._currentDomains[_param2].ExceptWith((IEnumerable<T>) other);
        this._reductions[_param2].Push(other);
        this._futureForwardChecking[r7H1DBwsdYoVJ].Push(_param2);
        this._pastForwardChecking[_param2].Push(r7H1DBwsdYoVJ);
      }
      return this._currentDomains[_param2].Count > 0;
    }

    private void HBIi9gZ71IAVV(int kY9OlypWPwG24)
    {
      foreach (int index in this._futureForwardChecking[kY9OlypWPwG24])
      {
        Stack<T> other = this._reductions[index].Pop();
        this._currentDomains[index].UnionWith((IEnumerable<T>) other);
        this._pastForwardChecking[index].Pop();
      }
      this._futureForwardChecking[kY9OlypWPwG24].Clear();
    }

    private void hzWIkhvG2onHV(int sQAQ5DvwQbT4Z)
    {
      this._currentDomains[sQAQ5DvwQbT4Z] = new HashSet<T>(this._initialDomains[sQAQ5DvwQbT4Z]);
      foreach (Stack<T> other in this._reductions[sQAQ5DvwQbT4Z])
        this._currentDomains[sQAQ5DvwQbT4Z].ExceptWith((IEnumerable<T>) other);
    }

    private IEnumerable<T> XTKSDtyeCYoU8(int LAxYa7G9sZaBY) => (IEnumerable<T>) new JuGe0yG8GXbx1<T>.RF4IxYSiA6KvB(-2)
    {
      \u003C\u003E4__this = this,
      \u003C\u003E3__pos = LAxYa7G9sZaBY
    };
  }
}
