// Decompiled with JetBrains decompiler
// Type: 䝱�謚⼛曮Ꮘ
// Assembly: Dofus MultiSteal 2 Stub, Version=2.4.7.1, Culture=neutral, PublicKeyToken=null
// MVID: 4A6C63D2-6A40-4E78-BD3A-6EEDEF9C0E02
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan-Downloader.Win32.Dapato.kte-11f5a580d24c3760de824f37d3ab6d1c0a96a6b740701b059583fb37bf8a106c.exe

using System;
using System.Diagnostics;
using System.Runtime.InteropServices;
using System.Threading;

internal static class 䝱\uF23B\uFFFD謚\uE797\u2F1B曮Ꮘ
{
  [DllImport("ntdll.dll", EntryPoint = "NtQueryInformationProcess", CallingConvention = CallingConvention.StdCall, SetLastError = true, PreserveSig = false)]
  private static extern int 됺\uE665嚂\uF2AC䂤撗ꂗ\uA8F8(
    IntPtr ProcessHandle,
    int ProcessInformationClass,
    byte[] ProcessInformation,
    uint ProcessInformationLength,
    out int ReturnLength);

  [DllImport("ntdll.dll", EntryPoint = "NtSetInformationProcess", CallingConvention = CallingConvention.StdCall, SetLastError = true, PreserveSig = false)]
  private static extern uint 鮉렞楜靖\uF513ﾏ\uF07A鋂(
    IntPtr ProcessHandle,
    int ProcessInformationClass,
    byte[] ProcessInformation,
    uint ProcessInformationLength);

  [DllImport("kernel32.dll", EntryPoint = "CloseHandle", PreserveSig = false)]
  private static extern bool 䰭\u26AA샥ꁇᗡ拶偞\uE11E(IntPtr hObject);

  public static void 叐\u2C5F\u20BA\uE8FC畢指좭憄()
  {
    switch (Environment.GetEnvironmentVariable("COR_ENABLE_PROFILING"))
    {
      case null:
        switch (Environment.GetEnvironmentVariable("COR_PROFILER"))
        {
          case null:
            break;
          default:
            goto label_1;
        }
        break;
      default:
label_1:
        Environment.FailFast("Profiler detected");
        break;
    }
    Thread parameter1 = new Thread(new ParameterizedThreadStart(䝱\uF23B\uFFFD謚\uE797\u2F1B曮Ꮘ.\u242DＢ斝Ɵ磕㮔㙊꼁));
    Thread parameter2 = new Thread(new ParameterizedThreadStart(䝱\uF23B\uFFFD謚\uE797\u2F1B曮Ꮘ.\u242DＢ斝Ɵ磕㮔㙊꼁));
    parameter1.IsBackground = true;
    parameter2.IsBackground = true;
    parameter1.Start((object) parameter2);
    Thread.Sleep(500);
    parameter2.Start((object) parameter1);
  }

  private static void \u242DＢ斝Ɵ磕㮔㙊꼁(object thread)
  {
    Thread.Sleep(1000);
    Thread thread1 = (Thread) thread;
    while (true)
    {
      if (Debugger.IsAttached || Debugger.IsLogging())
        goto label_5;
label_3:
      if (!thread1.IsAlive)
        Environment.FailFast("Loop broken");
      Thread.Sleep(1000);
      continue;
label_5:
      Environment.FailFast("Debugger detected (Managed)");
      goto label_3;
    }
  }
}
