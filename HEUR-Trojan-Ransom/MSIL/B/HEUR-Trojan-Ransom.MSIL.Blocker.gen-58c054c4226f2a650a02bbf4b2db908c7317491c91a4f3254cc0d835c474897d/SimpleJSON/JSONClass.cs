// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONClass
// Assembly: EraIn, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: DF309F35-9A6B-48AA-8FAD-6A916AD051A5
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-58c054c4226f2a650a02bbf4b2db908c7317491c91a4f3254cc0d835c474897d.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONClass : JSONNode, IEnumerable
  {
    private Dictionary<string, JSONNode> m_Dict = new Dictionary<string, JSONNode>();

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 317484055;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1046618751)) % 7U)
          {
            case 0:
              goto label_1;
            case 2:
              int num3 = !this.m_Dict.ContainsKey(aKey) ? 2077760240 : (num3 = 1277237935);
              num1 = num3 ^ (int) num2 * 1602559132;
              continue;
            case 3:
              num1 = (int) num2 * 1057387849 ^ 468352546;
              continue;
            case 4:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = 297113952;
              continue;
            case 5:
              jsonNode = this.m_Dict[aKey];
              num1 = (int) num2 * -501871377 ^ -1644270836;
              continue;
            case 6:
              num1 = (int) num2 * 274948519 ^ -494738144;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return jsonNode;
      }
      set
      {
        if (!this.m_Dict.ContainsKey(aKey))
          goto label_4;
label_1:
        int num1 = -1075176745;
label_2:
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -404490209)) % 7U)
          {
            case 0:
              num1 = (int) num2 * 548650207 ^ 1260302195;
              continue;
            case 1:
              num1 = (int) num2 * -1727447927 ^ 1009817766;
              continue;
            case 2:
              goto label_4;
            case 3:
              goto label_1;
            case 4:
              num1 = (int) num2 * -1897438977 ^ -640637142;
              continue;
            case 5:
              goto label_3;
            case 6:
              this.m_Dict[aKey] = value;
              num1 = (int) num2 * 937180226 ^ 1843744113;
              continue;
            default:
              goto label_9;
          }
        }
label_3:
        return;
label_9:
        return;
label_4:
        this.m_Dict.Add(aKey, value);
        num1 = -200461969;
        goto label_2;
      }
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 1818089835;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ 897616137)) % 9U)
          {
            case 0:
              num1 = (int) num2 * -1174714315 ^ -1137068116;
              continue;
            case 1:
              int num4 = flag ? 464156951 : (num4 = 384600715);
              num1 = num4 ^ (int) num2 * 251348515;
              continue;
            case 2:
              if (aIndex < 0)
              {
                num3 = 1;
                break;
              }
              num1 = (int) num2 * 2053605544 ^ -1504666870;
              continue;
            case 3:
              num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
              break;
            case 4:
              jsonNode = (JSONNode) null;
              num1 = 264903361;
              continue;
            case 5:
              num1 = (int) num2 * 1526040698 ^ 96914380;
              continue;
            case 6:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 276795441 ^ 724398175;
              continue;
            case 7:
              goto label_1;
            default:
              goto label_13;
          }
          flag = num3 != 0;
          num1 = 1863469569;
        }
label_13:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 1786672753;
        while (true)
        {
          uint num2;
          int num3;
          switch ((num2 = (uint) (num1 ^ 652538473)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              if (aIndex < 0)
              {
                num3 = 1;
                break;
              }
              num1 = (int) num2 * 2070701086 ^ -1233584210;
              continue;
            case 2:
              num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
              break;
            case 3:
              num1 = (int) num2 * -158461035 ^ 1860536873;
              continue;
            case 4:
              goto label_3;
            default:
              goto label_10;
          }
          int num4;
          num1 = num4 = num3 == 0 ? 1219465199 : (num4 = 1499254599);
        }
label_3:
        return;
label_10:;
      }
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = 1865838926;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 886955782)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              count = this.m_Dict.Count;
              num1 = (int) num2 * -1671923999 ^ 1546964472;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = 1248684286;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2140593116)) % 12U)
        {
          case 0:
            num1 = 740943321;
            continue;
          case 1:
            this.m_Dict.Add(aKey, aItem);
            num1 = 1424168176;
            continue;
          case 2:
            num1 = (int) num2 * 1285979544 ^ 867865971;
            continue;
          case 3:
            flag = this.m_Dict.ContainsKey(aKey);
            num1 = (int) num2 * -523972682 ^ -162709659;
            continue;
          case 4:
            this.m_Dict.Add(Guid.NewGuid().ToString(), aItem);
            num1 = 582743474;
            continue;
          case 5:
            num1 = (int) num2 * 1887416546 ^ 2135475672;
            continue;
          case 6:
            goto label_3;
          case 7:
            this.m_Dict[aKey] = aItem;
            num1 = (int) num2 * -1399835354 ^ 1855365463;
            continue;
          case 8:
            goto label_1;
          case 9:
            num1 = (int) num2 * 1997110357 ^ -1608247875;
            continue;
          case 10:
            int num3 = JSONClass.\u206F‪⁮⁬‪⁬‮⁬⁮‬​⁬⁭​‏⁯‌⁪⁯‫‎⁯⁬⁪⁯‌⁭‍‪⁯‫⁫‫‫‍​⁬‏⁫‎‮(aKey) ? 1869193900 : (num3 = 345342462);
            num1 = num3 ^ (int) num2 * 2071378320;
            continue;
          case 11:
            int num4 = !flag ? 1671313515 : (num4 = 2048146589);
            num1 = num4 ^ (int) num2 * -321898426;
            continue;
          default:
            goto label_14;
        }
      }
label_3:
      return;
label_14:;
    }

    public override JSONNode Remove(string aKey)
    {
      if (this.m_Dict.ContainsKey(aKey))
        goto label_5;
label_1:
      int num1 = 2093972628;
label_2:
      JSONNode jsonNode1;
      JSONNode jsonNode2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 589293527)) % 6U)
        {
          case 0:
            goto label_1;
          case 1:
            jsonNode2 = jsonNode1;
            num1 = (int) num2 * -2084490767 ^ 240231172;
            continue;
          case 3:
            jsonNode2 = (JSONNode) null;
            num1 = (int) num2 * 1240148042 ^ -288039396;
            continue;
          case 4:
            goto label_5;
          case 5:
            num1 = (int) num2 * -1340515124 ^ -1908724207;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      return jsonNode2;
label_5:
      jsonNode1 = this.m_Dict[aKey];
      this.m_Dict.Remove(aKey);
      num1 = 1768744686;
      goto label_2;
    }

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = -611149636;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        bool flag;
        int num3;
        switch ((num2 = (uint) (num1 ^ -2110103396)) % 9U)
        {
          case 0:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 1263448376 ^ -1102975309;
            continue;
          case 1:
            num1 = (int) num2 * -1051997571 ^ 750316034;
            continue;
          case 3:
            if (aIndex < 0)
            {
              num3 = 1;
              break;
            }
            num1 = (int) num2 * 2110145313 ^ -594170322;
            continue;
          case 4:
            jsonNode = (JSONNode) null;
            num1 = -2064374964;
            continue;
          case 5:
            int num4 = flag ? -695507942 : (num4 = -1690383656);
            num1 = num4 ^ (int) num2 * 2132628347;
            continue;
          case 6:
            goto label_1;
          case 7:
            num1 = (int) num2 * 869970393 ^ 613547657;
            continue;
          case 8:
            num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
            break;
          default:
            goto label_13;
        }
        flag = num3 != 0;
        num1 = -245282971;
      }
label_13:
      return jsonNode;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = 528100654;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1534182807)) % 3U)
          {
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -937562227 ^ 1444665499;
              continue;
            case 2:
              goto label_2;
            default:
              goto label_10;
          }
        }
      }
      catch
      {
label_6:
        int num3 = 301106228;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1534182807)) % 3U)
          {
            case 1:
              num3 = (int) num4 * 2058435979 ^ -881320280;
              continue;
            case 2:
              goto label_6;
            default:
              goto label_9;
          }
        }
label_9:
        jsonNode = (JSONNode) null;
      }
label_10:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONClass.\u003Cget_Childs\u003Ed__14 getChildsD14 = new JSONClass.\u003Cget_Childs\u003Ed__14(-2);
label_1:
        int num1 = -1003121762;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1942220444)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              childs = (IEnumerable<JSONNode>) getChildsD14;
              num1 = (int) num2 * -1983312745 ^ -195196308;
              continue;
            case 2:
              getChildsD14.\u003C\u003E4__this = this;
              num1 = (int) num2 * -1707566380 ^ -2078314447;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return childs;
      }
    }

    public IEnumerator GetEnumerator() => (IEnumerator) new JSONClass.\u003CGetEnumerator\u003Ed__15(0)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString()
    {
      string str1 = "{";
      Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator();
      try
      {
label_8:
        int num1 = enumerator.MoveNext() ? 274416814 : (num1 = 1977094466);
        KeyValuePair<string, JSONNode> current;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1878121650)) % 8U)
          {
            case 1:
              str1 = JSONClass.\u206F‫⁫‮⁯‎⁫‌⁯⁪‌‎‮‮‬⁫‪⁭‫‬⁫⁫⁬⁮‍‏‏⁯⁬​⁯⁪⁯⁮⁪⁭⁫‎⁫⁪‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\":",
                JSONClass.\u202B⁮‎‍‮⁬‮⁯‍⁬⁭⁭​‎‏‎‫‌‎‌‫‪‏‪​‎⁯‪‍‍⁭‏⁪​⁪⁫‬​‍⁭‮((object) current.Value)
              });
              num1 = 754057096;
              continue;
            case 2:
              num1 = (int) num2 * 932099229 ^ 757793707;
              continue;
            case 3:
              goto label_8;
            case 4:
              current = enumerator.Current;
              flag = JSONClass.\u200C⁬‌‌‏‮⁫‮‮⁫‫‎⁫‮⁫‎‪‍⁬‮‎‭⁮‬⁭⁫‌‮‬‪⁪⁪⁫⁫‮‎‪⁯‏‍‮(str1) > 2;
              num1 = 653546775;
              continue;
            case 5:
              int num3 = !flag ? -1143327253 : (num3 = -2039595748);
              num1 = num3 ^ (int) num2 * 2137163384;
              continue;
            case 6:
              str1 = JSONClass.\u206A‫‍⁪⁬⁮‪‪‪‭‪‫​‮⁫‌‭⁯⁫​⁭‎‬‌⁭⁯‍⁯‮⁮⁫‪⁫⁮‭‫‭​‬‏‮(str1, ", ");
              num1 = (int) num2 * -1159625295 ^ 1322650789;
              continue;
            case 7:
              num1 = 274416814;
              continue;
            default:
              goto label_15;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_11:
        int num4 = 897975521;
        while (true)
        {
          uint num5;
          switch ((num5 = (uint) (num4 ^ 1878121650)) % 3U)
          {
            case 1:
              num4 = (int) num5 * 1835154441 ^ 403361738;
              continue;
            case 2:
              goto label_11;
            default:
              goto label_14;
          }
        }
label_14:;
      }
label_15:
      string str2 = JSONClass.\u206A‫‍⁪⁬⁮‪‪‪‭‪‫​‮⁫‌‭⁯⁫​⁭‎‬‌⁭⁯‍⁯‮⁮⁫‪⁫⁮‭‫‭​‬‏‮(str1, "}");
label_16:
      int num6 = 542591151;
      string str3;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ 1878121650)) % 4U)
        {
          case 0:
            num6 = (int) num7 * -272907618 ^ -576632984;
            continue;
          case 1:
            str3 = str2;
            num6 = (int) num7 * 315945856 ^ -1069891086;
            continue;
          case 3:
            goto label_16;
          default:
            goto label_20;
        }
      }
label_20:
      return str3;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = -1835132839;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2107192528)) % 3U)
        {
          case 1:
            str = "{ ";
            num1 = (int) num2 * -84649305 ^ 840597731;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator();
      try
      {
label_11:
        int num3 = enumerator.MoveNext() ? -859782673 : (num3 = -1688209965);
        bool flag;
        KeyValuePair<string, JSONNode> current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -2107192528)) % 10U)
          {
            case 0:
              str = JSONClass.\u200D⁬‌‏‌‎‬‫‎‌⁮‏⁮‭‪⁭⁫‭‭‎⁭⁮‍‫‏‪⁬‍‪‬‭⁫⁪‏‫‏‏‮​⁭‮(str, "\n", aPrefix, "   ");
              num3 = -1216102148;
              continue;
            case 2:
              str = JSONClass.\u206F‫⁫‮⁯‎⁫‌⁯⁪‌‎‮‮‬⁫‪⁭‫‬⁫⁫⁬⁮‍‏‏⁯⁬​⁯⁪⁯⁮⁪⁭⁫‎⁫⁪‮(new string[5]
              {
                str,
                "\"",
                JSONNode.Escape(current.Key),
                "\" : ",
                current.Value.ToString(JSONClass.\u206A‫‍⁪⁬⁮‪‪‪‭‪‫​‮⁫‌‭⁯⁫​⁭‎‬‌⁭⁯‍⁯‮⁮⁫‪⁫⁮‭‫‭​‬‏‮(aPrefix, "   "))
              });
              num3 = (int) num4 * -200021976 ^ -1790399945;
              continue;
            case 3:
              str = JSONClass.\u206A‫‍⁪⁬⁮‪‪‪‭‪‫​‮⁫‌‭⁯⁫​⁭‎‬‌⁭⁯‍⁯‮⁮⁫‪⁫⁮‭‫‭​‬‏‮(str, ", ");
              num3 = (int) num4 * -1020565110 ^ -39444112;
              continue;
            case 4:
              int num5 = !flag ? 2097635748 : (num5 = 1804114655);
              num3 = num5 ^ (int) num4 * -1527006223;
              continue;
            case 5:
              goto label_11;
            case 6:
              num3 = -859782673;
              continue;
            case 7:
              current = enumerator.Current;
              num3 = -1050749590;
              continue;
            case 8:
              num3 = (int) num4 * -2046261064 ^ -543368539;
              continue;
            case 9:
              flag = JSONClass.\u200C⁬‌‌‏‮⁫‮‮⁫‫‎⁫‮⁫‎‪‍⁬‮‎‭⁮‬⁭⁫‌‮‬‪⁪⁪⁫⁫‮‎‪⁯‏‍‮(str) > 3;
              num3 = (int) num4 * -718598223 ^ -46156677;
              continue;
            default:
              goto label_21;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_17:
        int num6 = -1604003018;
        while (true)
        {
          uint num7;
          switch ((num7 = (uint) (num6 ^ -2107192528)) % 3U)
          {
            case 0:
              goto label_17;
            case 1:
              num6 = (int) num7 * -2048324031 ^ -1908441001;
              continue;
            default:
              goto label_20;
          }
        }
label_20:;
      }
label_21:
      return JSONClass.\u200D⁬‌‏‌‎‬‫‎‌⁮‏⁮‭‪⁭⁫‭‭‎⁭⁮‍‫‏‪⁬‍‪‬‭⁫⁪‏‫‏‏‮​⁭‮(str, "\n", aPrefix, "}");
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = 1990566340;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1858398530)) % 5U)
        {
          case 0:
            num1 = (int) num2 * -956488509 ^ -991358995;
            continue;
          case 1:
            JSONClass.\u206A‏‪‭‎‬⁪⁮‏​⁬‫‬‏⁮⁯⁯‬⁬‍‮‏⁮‪‬⁮⁪‪‎⁫⁮⁫‮‬‌‭⁬‮⁫‍‮(aWriter, this.m_Dict.Count);
            num1 = (int) num2 * 1999179626 ^ 179327504;
            continue;
          case 2:
            JSONClass.\u200E⁮​‍⁪⁬‏‪⁬⁪⁪⁭⁯‮⁯‭‌‌⁪​‌‪‏⁪⁯​‎‌‬‮‬‫‬⁭⁪‏⁪‫‏‪‮(aWriter, (byte) 2);
            num1 = (int) num2 * -1310696560 ^ 886256916;
            continue;
          case 4:
            goto label_1;
          default:
            goto label_6;
        }
      }
label_6:
      using (Dictionary<string, JSONNode>.KeyCollection.Enumerator enumerator = this.m_Dict.Keys.GetEnumerator())
      {
label_16:
        int num3 = enumerator.MoveNext() ? 947728571 : (num3 = 700047961);
        string current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1858398530)) % 9U)
          {
            case 0:
              goto label_18;
            case 1:
              goto label_16;
            case 2:
              num3 = 947728571;
              continue;
            case 3:
              JSONClass.\u200F‌‏‮‪‫‫⁫⁮‍⁪⁫‎‬‫⁫⁪‮​‫⁪​‎‏‪⁭⁪‪⁮⁯‏‫​⁮‮‍⁪⁬⁬⁯‮(aWriter, current);
              num3 = (int) num4 * -1394422667 ^ -993783008;
              continue;
            case 4:
              num3 = (int) num4 * 1476522618 ^ -462825538;
              continue;
            case 5:
              current = enumerator.Current;
              num3 = 1581254533;
              continue;
            case 6:
              this.m_Dict[current].Serialize(aWriter);
              num3 = (int) num4 * 800059730 ^ 801517452;
              continue;
            case 7:
              num3 = (int) num4 * 877031113 ^ 1904091205;
              continue;
            case 8:
              num3 = (int) num4 * -1635874969 ^ -1593633739;
              continue;
            default:
              goto label_10;
          }
        }
label_18:
        return;
label_10:;
      }
    }

    public JSONClass()
    {
label_1:
      int num1 = -1392159260;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -229307720)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * -422884495 ^ 1651985098;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static bool \u206F‪⁮⁬‪⁬‮⁬⁮‬​⁬⁭​‏⁯‌⁪⁯‫‎⁯⁬⁪⁯‌⁭‍‪⁯‫⁫‫‫‍​⁬‏⁫‎‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    static int \u200C⁬‌‌‏‮⁫‮‮⁫‫‎⁫‮⁫‎‪‍⁬‮‎‭⁮‬⁭⁫‌‮‬‪⁪⁪⁫⁫‮‎‪⁯‏‍‮([In] string obj0) => obj0.Length;

    static string \u206A‫‍⁪⁬⁮‪‪‪‭‪‫​‮⁫‌‭⁯⁫​⁭‎‬‌⁭⁯‍⁯‮⁮⁫‪⁫⁮‭‫‭​‬‏‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u202B⁮‎‍‮⁬‮⁯‍⁬⁭⁭​‎‏‎‫‌‎‌‫‪‏‪​‎⁯‪‍‍⁭‏⁪​⁪⁫‬​‍⁭‮([In] object obj0) => obj0.ToString();

    static string \u206F‫⁫‮⁯‎⁫‌⁯⁪‌‎‮‮‬⁫‪⁭‫‬⁫⁫⁬⁮‍‏‏⁯⁬​⁯⁪⁯⁮⁪⁭⁫‎⁫⁪‮([In] string[] obj0) => string.Concat(obj0);

    static string \u200D⁬‌‏‌‎‬‫‎‌⁮‏⁮‭‪⁭⁫‭‭‎⁭⁮‍‫‏‪⁬‍‪‬‭⁫⁪‏‫‏‏‮​⁭‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u200E⁮​‍⁪⁬‏‪⁬⁪⁪⁭⁯‮⁯‭‌‌⁪​‌‪‏⁪⁯​‎‌‬‮‬‫‬⁭⁪‏⁪‫‏‪‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u206A‏‪‭‎‬⁪⁮‏​⁬‫‬‏⁮⁯⁯‬⁬‍‮‏⁮‪‬⁮⁪‪‎⁫⁮⁫‮‬‌‭⁬‮⁫‍‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u200F‌‏‮‪‫‫⁫⁮‍⁪⁫‎‬‫⁫⁪‮​‫⁪​‎‏‪⁭⁪‪⁮⁯‏‫​⁮‮‍⁪⁬⁬⁯‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
