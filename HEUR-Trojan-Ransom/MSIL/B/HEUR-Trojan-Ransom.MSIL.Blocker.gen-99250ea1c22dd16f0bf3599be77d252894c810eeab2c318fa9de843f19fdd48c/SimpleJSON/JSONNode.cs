// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: IClientChannelSinkSta, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: C2D4B9C8-45F5-4E7C-86BD-063D9CE5A365
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-99250ea1c22dd16f0bf3599be77d252894c810eeab2c318fa9de843f19fdd48c.exe

using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) null;
label_1:
        int num1 = -488600456;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -936785459)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 1992839699 ^ 965251917;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -267251684;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -252045783)) % 4U)
          {
            case 0:
              num1 = (int) num2 * -1860781880 ^ -1881613929;
              continue;
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -157981834 ^ 604921299;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual string Value
    {
      get
      {
label_1:
        int num1 = 1645769550;
        string str;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 445426311)) % 4U)
          {
            case 0:
              num1 = (int) num2 * -1211250938 ^ 6801833;
              continue;
            case 1:
              str = "";
              num1 = (int) num2 * 697519520 ^ 30301291;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return str;
      }
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
        int count = 0;
label_1:
        int num1 = -446226251;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -631390923)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 830054099 ^ -387029803;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem)
    {
label_1:
      int num1 = 1962118922;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1394957919)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            this.Add("", aItem);
            num1 = (int) num2 * -795757048 ^ -1239703392;
            continue;
          case 2:
            goto label_3;
          case 3:
            num1 = (int) num2 * -1370149387 ^ 1684082698;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public virtual JSONNode Remove(string aKey) => (JSONNode) null;

    public virtual JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = -1460217374;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -487717163)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 524403914 ^ 1047148632;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = 1841430487;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1040131828)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * 1297583543 ^ 298715863;
            continue;
          case 3:
            jsonNode = aNode;
            num1 = (int) num2 * -2034636122 ^ -2032710832;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
        int num1 = this.\u003C\u003E1__state;
label_1:
        int num2 = -2056399882;
        while (true)
        {
          uint num3;
          switch ((num3 = (uint) (num2 ^ -730803337)) % 8U)
          {
            case 0:
              goto label_6;
            case 1:
              int num4 = num1 == 0 ? -835552889 : (num4 = -2083022795);
              num2 = num4 ^ (int) num3 * 1968761157;
              continue;
            case 2:
              goto label_1;
            case 3:
              num2 = (int) num3 * 420379363 ^ 967970592;
              continue;
            case 4:
            case 5:
              this.\u003C\u003E1__state = -1;
              num2 = -1784850324;
              continue;
            case 7:
              num2 = (int) num3 * 1935333401 ^ -1318844760;
              continue;
            default:
              goto label_8;
          }
        }
label_6:
        return false;
label_8:
        return false;
      }
    }

    public IEnumerable<JSONNode> DeepChilds => (IEnumerable<JSONNode>) new JSONNode.\u003Cget_DeepChilds\u003Ed__19(-2)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString()
    {
label_1:
      int num1 = 1898927091;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2087562031)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            str = nameof (JSONNode);
            num1 = (int) num2 * 162618856 ^ 1484487447;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual string ToString(string aPrefix)
    {
label_1:
      int num1 = -1452542346;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2051214070)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            str = nameof (JSONNode);
            num1 = (int) num2 * -1503267885 ^ 1205842873;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual int AsInt
    {
      get
      {
label_1:
        int num1 = 1034219681;
        int result;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 633205744)) % 8U)
          {
            case 0:
              asInt = result;
              num1 = (int) num2 * 378441286 ^ -2144664883;
              continue;
            case 1:
              result = 0;
              num1 = (int) num2 * -1328937284 ^ -1944951269;
              continue;
            case 2:
              asInt = 0;
              num1 = 1132902398;
              continue;
            case 3:
              goto label_1;
            case 5:
              num1 = (int) num2 * -205489627 ^ 114988549;
              continue;
            case 6:
              num1 = (int) num2 * -1471266694 ^ 930050584;
              continue;
            case 7:
              int num3 = !int.TryParse(this.Value, out result) ? -217526063 : (num3 = -1819670133);
              num1 = num3 ^ (int) num2 * -248908499;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asInt;
      }
      set => this.Value = value.ToString();
    }

    public virtual float AsFloat
    {
      get
      {
        float result = 0.0f;
        if (!float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u200E‌‪⁪‭⁬⁯⁯‫⁪‎‭‍‪⁪​⁫⁫‬⁪‌⁪⁯‮‮‌⁮‌‌‏‍​⁪‬⁯‬‫‮‪⁪‮(), out result))
          goto label_4;
label_1:
        int num1 = 149641516;
label_2:
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 356851315)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_4;
            case 2:
              num1 = (int) num2 * -444792020 ^ 804839935;
              continue;
            case 3:
              asFloat = result;
              num1 = (int) num2 * 252020484 ^ 1480761822;
              continue;
            case 5:
              num1 = (int) num2 * 1708626524 ^ -582415989;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asFloat;
label_4:
        asFloat = 0.0f;
        num1 = 1966714301;
        goto label_2;
      }
      set => this.Value = value.ToString();
    }

    public virtual double AsDouble
    {
      get
      {
label_1:
        int num1 = 277660127;
        double result;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1081674254)) % 7U)
          {
            case 0:
              num1 = (int) num2 * -1441660695 ^ 302312590;
              continue;
            case 1:
              num1 = (int) num2 * -298878290 ^ -1759457070;
              continue;
            case 2:
              result = 0.0;
              int num3 = !double.TryParse(this.Value, out result) ? 1100050504 : (num3 = 531240476);
              num1 = num3 ^ (int) num2 * 776320244;
              continue;
            case 3:
              asDouble = 0.0;
              num1 = 1375569676;
              continue;
            case 4:
              asDouble = result;
              num1 = (int) num2 * -945899954 ^ 434061835;
              continue;
            case 5:
              goto label_1;
            default:
              goto label_8;
          }
        }
label_8:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = -1190152082;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1589564470)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Value = value.ToString();
              num1 = (int) num2 * -867076688 ^ -1945011989;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual bool AsBool
    {
      get
      {
        bool result = false;
label_1:
        int num1 = 67445208;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 774758684)) % 7U)
          {
            case 0:
              asBool = result;
              num1 = (int) num2 * 1217953922 ^ 1531536602;
              continue;
            case 1:
              int num3 = bool.TryParse(this.Value, out result) ? -1167201611 : (num3 = -133476333);
              num1 = num3 ^ (int) num2 * 1449737697;
              continue;
            case 3:
              num1 = (int) num2 * -1939382595 ^ -338688086;
              continue;
            case 4:
              asBool = !JSONNode.\u206C⁬⁫‮⁫‮⁭‌⁬⁫‫⁯⁭‮‮‌‫‫⁮​‭⁬⁭‌‍‭‎‪‎‪‎⁭⁫​‫‏‎‎⁬‍‮(this.Value);
              num1 = 815484932;
              continue;
            case 5:
              goto label_1;
            case 6:
              num1 = (int) num2 * 983008130 ^ -1571148874;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asBool;
      }
      set
      {
label_1:
        int num1 = 1173919235;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 969325704)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Value = value ? "true" : "false";
              num1 = 819496375;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual JSONArray AsArray
    {
      get
      {
        JSONArray asArray = this as JSONArray;
label_1:
        int num1 = -947337065;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1338980557)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * -948398776 ^ 2069418937;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asArray;
      }
    }

    public virtual JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = -409143252;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1223598933)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              asObject = this as JSONClass;
              num1 = (int) num2 * -1147800977 ^ -1543259400;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s)
    {
label_1:
      int num1 = 1716005469;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1108240493)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            jsonNode = (JSONNode) new JSONData(s);
            num1 = (int) num2 * 471856674 ^ -370563849;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public static implicit operator string(JSONNode d)
    {
label_1:
      int num1 = 403092116;
      string str1;
      while (true)
      {
        uint num2;
        string str2;
        switch ((num2 = (uint) (num1 ^ 674905459)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1631267719 ^ 1009423547;
            continue;
          case 2:
            if (d == (object) null)
            {
              str2 = (string) null;
              break;
            }
            num1 = (int) num2 * 211560771 ^ -1925457439;
            continue;
          case 4:
            str2 = d.Value;
            break;
          default:
            goto label_9;
        }
        str1 = str2;
        num1 = 1185235799;
      }
label_9:
      return str1;
    }

    public static bool operator ==(JSONNode a, object b)
    {
      if (b != null)
        goto label_6;
label_1:
      int num1 = -1797390846;
label_2:
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1625211068)) % 6U)
        {
          case 0:
            flag1 = true;
            num1 = (int) num2 * -870510626 ^ -2022285698;
            continue;
          case 1:
            flag1 = (object) a == b;
            num1 = -918011342;
            continue;
          case 3:
            goto label_1;
          case 4:
            goto label_5;
          case 5:
            int num3 = !flag2 ? -1460709574 : (num3 = -160359559);
            num1 = num3 ^ (int) num2 * 1609396317;
            continue;
          default:
            goto label_9;
        }
      }
label_5:
      int num4 = a is JSONLazyCreator ? 1 : 0;
      goto label_7;
label_9:
      return flag1;
label_6:
      num4 = 0;
label_7:
      flag2 = num4 != 0;
      num1 = -316259593;
      goto label_2;
    }

    public static bool operator !=(JSONNode a, object b) => !(a == b);

    public override bool Equals(object obj)
    {
label_1:
      int num1 = -870031348;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -126229609)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * 1666063576 ^ 660924482;
            continue;
          case 3:
            flag = (object) this == obj;
            num1 = (int) num2 * -552625722 ^ -1386272761;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override int GetHashCode()
    {
      int hashCode = this.\u206E⁯⁭⁫‌‏⁭‎‏⁯‪‬⁪‬⁫⁭⁬⁭‍‭‍‎‮⁬‪‬‍‍‭‏‫‌‭‍‬‮⁮​⁮‭‮();
label_1:
      int num1 = -2023662108;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1872595202)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -196484107 ^ 1712723245;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return hashCode;
    }

    internal static string Escape(string aText)
    {
label_1:
      int num1 = 496288502;
      string str1;
      char ch1;
      char ch2;
      string str2;
      int num2;
      char ch3;
      string str3;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 1093157502)) % 32U)
        {
          case 0:
            str1 = JSONNode.\u200F‬‪‮‏⁬‮‎‭‌⁪‮⁬⁯‫⁮​‫​‫‍⁫⁯‎⁮⁮⁪‍⁬⁪‮‮‫‎‮⁬⁪‪‪‫‮(str1, "\\\"");
            num1 = 1522848919;
            continue;
          case 1:
            num1 = (int) num3 * -754783046 ^ -379261653;
            continue;
          case 2:
            int num4;
            num1 = num4 = num2 < JSONNode.\u206D⁮‪‫⁬⁭⁫‬⁭⁮⁭‪⁬⁭⁫‍‪‫⁫‌‪​​​‮‍‎⁬​⁫⁮​⁭‍‎‮‫‬‫‮(str2) ? 703361136 : (num4 = 1074805420);
            continue;
          case 3:
            num1 = (int) num3 * -1811720817 ^ -2083392996;
            continue;
          case 4:
label_8:
            str1 = JSONNode.\u200F‬‪‮‏⁬‮‎‭‌⁪‮⁬⁯‫⁮​‫​‫‍⁫⁯‎⁮⁮⁪‍⁬⁪‮‮‫‎‮⁬⁪‪‪‫‮(str1, ch3.ToString());
            num1 = 1119674833;
            continue;
          case 5:
label_3:
            str1 = JSONNode.\u200F‬‪‮‏⁬‮‎‭‌⁪‮⁬⁯‫⁮​‫​‫‍⁫⁯‎⁮⁮⁪‍⁬⁪‮‮‫‎‮⁬⁪‪‪‫‮(str1, "\\n");
            num1 = 878761963;
            continue;
          case 6:
            str2 = aText;
            num2 = 0;
            num1 = (int) num3 * -869813038 ^ 1094379248;
            continue;
          case 7:
            int num5;
            num1 = num5 = ch2 == '\\' ? 88458794 : (num5 = 320406024);
            continue;
          case 8:
            str1 = "";
            num1 = (int) num3 * 1207079224 ^ 1068525646;
            continue;
          case 9:
            num1 = (int) num3 * 1810377728 ^ -1834684975;
            continue;
          case 10:
            ++num2;
            num1 = (int) num3 * 80906706 ^ 1927721320;
            continue;
          case 11:
            ch2 = ch1;
            num1 = (int) num3 * 1648916136 ^ 107990871;
            continue;
          case 13:
label_19:
            str1 = JSONNode.\u200F‬‪‮‏⁬‮‎‭‌⁪‮⁬⁯‫⁮​‫​‫‍⁫⁯‎⁮⁮⁪‍⁬⁪‮‮‫‎‮⁬⁪‪‪‫‮(str1, "\\f");
            num1 = 1475160221;
            continue;
          case 14:
            ch3 = JSONNode.\u202E‎⁬⁯‫‭‏‪⁫‎‎‫⁬‬‌‬‏‭⁬‎‭‬‭⁪‮‪‭⁫⁮⁮‌‌‫‏⁮⁭⁫⁯⁬‍‮(str2, num2);
            num1 = 1852546112;
            continue;
          case 15:
            num1 = 341874420;
            continue;
          case 16:
            num1 = (int) num3 * 1157997439 ^ 1648738952;
            continue;
          case 17:
            switch (ch2)
            {
              case '\b':
                goto label_23;
              case '\t':
                goto label_25;
              case '\n':
                goto label_3;
              case '\v':
                goto label_8;
              case '\f':
                goto label_19;
              case '\r':
                goto label_13;
              default:
                num1 = (int) num3 * -280958208 ^ -681858332;
                continue;
            }
          case 18:
            str3 = str1;
            num1 = (int) num3 * -1564870252 ^ -1631484230;
            continue;
          case 19:
            num1 = (int) num3 * 527531305 ^ 1423492442;
            continue;
          case 20:
            str1 = JSONNode.\u200F‬‪‮‏⁬‮‎‭‌⁪‮⁬⁯‫⁮​‫​‫‍⁫⁯‎⁮⁮⁪‍⁬⁪‮‮‫‎‮⁬⁪‪‪‫‮(str1, "\\\\");
            num1 = 880131042;
            continue;
          case 21:
            num1 = (int) num3 * 562373022 ^ -339646681;
            continue;
          case 22:
            num1 = (int) num3 * -1119403006 ^ -1229545578;
            continue;
          case 23:
label_25:
            str1 = JSONNode.\u200F‬‪‮‏⁬‮‎‭‌⁪‮⁬⁯‫⁮​‫​‫‍⁫⁯‎⁮⁮⁪‍⁬⁪‮‮‫‎‮⁬⁪‪‪‫‮(str1, "\\t");
            num1 = 1119674833;
            continue;
          case 24:
            num1 = (int) num3 * 1643292893 ^ 1725642753;
            continue;
          case 25:
            goto label_1;
          case 26:
            num1 = (int) num3 * -1367508293 ^ -315659457;
            continue;
          case 27:
label_13:
            str1 = JSONNode.\u200F‬‪‮‏⁬‮‎‭‌⁪‮⁬⁯‫⁮​‫​‫‍⁫⁯‎⁮⁮⁪‍⁬⁪‮‮‫‎‮⁬⁪‪‪‫‮(str1, "\\r");
            num1 = 981847263;
            continue;
          case 28:
            num1 = (int) num3 * 1469647554 ^ -1919966743;
            continue;
          case 29:
label_23:
            str1 = JSONNode.\u200F‬‪‮‏⁬‮‎‭‌⁪‮⁬⁯‫⁮​‫​‫‍⁫⁯‎⁮⁮⁪‍⁬⁪‮‮‫‎‮⁬⁪‪‪‫‮(str1, "\\b");
            num1 = 668570861;
            continue;
          case 30:
            ch1 = ch3;
            num1 = (int) num3 * -1455387850 ^ 1603859361;
            continue;
          case 31:
            int num6;
            num1 = num6 = ch2 == '"' ? 281278206 : (num6 = 1925327814);
            continue;
          default:
            goto label_34;
        }
      }
label_34:
      return str3;
    }

    public static JSONNode Parse(string aJSON)
    {
      Stack<JSONNode> jsonNodeStack = new Stack<JSONNode>();
      JSONNode jsonNode1 = (JSONNode) null;
label_1:
      int num1 = -1094934117;
      bool flag1;
      int num2;
      string aItem;
      char ch1;
      string aKey;
      char ch2;
      char ch3;
      bool flag2;
      bool flag3;
      bool flag4;
      char ch4;
      bool flag5;
      bool flag6;
      bool flag7;
      bool flag8;
      bool flag9;
      bool flag10;
      bool flag11;
      bool flag12;
      bool flag13;
      char ch5;
      char ch6;
      JSONNode jsonNode2;
      string s;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -943282693)) % 150U)
        {
          case 0:
            string str1 = aItem;
            ch3 = JSONNode.\u202E‎⁬⁯‫‭‏‪⁫‎‎‫⁬‬‌‬‏‭⁬‎‭‬‭⁪‮‪‭⁫⁮⁮‌‌‫‏⁮⁭⁫⁯⁬‍‮(aJSON, num2);
            string str2 = ch3.ToString();
            aItem = JSONNode.\u200F‬‪‮‏⁬‮‎‭‌⁪‮⁬⁯‫⁮​‫​‫‍⁫⁯‎⁮⁮⁪‍⁬⁪‮‮‫‎‮⁬⁪‪‪‫‮(str1, str2);
            num1 = (int) num3 * -491507464 ^ 1137258182;
            continue;
          case 1:
            num1 = (int) num3 * -825431726 ^ 109537622;
            continue;
          case 2:
            ch4 = ch6;
            num1 = (int) num3 * 240396199 ^ 2119309289;
            continue;
          case 3:
label_97:
            flag13 = flag1;
            num1 = -1832041572;
            continue;
          case 4:
            num1 = (int) num3 * 755354160 ^ -1120152225;
            continue;
          case 5:
            int num4;
            num1 = num4 = jsonNodeStack.Count != 0 ? -943853544 : (num4 = -2110305196);
            continue;
          case 6:
            num1 = (int) num3 * 1405954563 ^ -1682575532;
            continue;
          case 7:
            num1 = (int) num3 * 764128388 ^ -949561670;
            continue;
          case 8:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -436768906 ^ 1104534871;
            continue;
          case 9:
            num1 = -1764404808;
            continue;
          case 10:
            flag7 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -56977529 ^ 1767515372;
            continue;
          case 11:
            flag6 = JSONNode.\u202A‭‏⁮⁮‎⁫‫⁬‭‌‏‌⁯⁫​‬⁭⁬‌‎‎‌⁪‮‮⁯⁯‌⁮‌‫​​​‪‏‍⁫‎‮(aItem, "");
            num1 = -1526186976;
            continue;
          case 12:
            string str3 = aItem;
            ch3 = JSONNode.\u202E‎⁬⁯‫‭‏‪⁫‎‎‫⁬‬‌‬‏‭⁬‎‭‬‭⁪‮‪‭⁫⁮⁮‌‌‫‏⁮⁭⁫⁯⁬‍‮(aJSON, num2);
            string str4 = ch3.ToString();
            aItem = JSONNode.\u200F‬‪‮‏⁬‮‎‭‌⁪‮⁬⁯‫⁮​‫​‫‍⁫⁯‎⁮⁮⁪‍⁬⁪‮‮‫‎‮⁬⁪‪‪‫‮(str3, str4);
            num1 = (int) num3 * 479002320 ^ -1424218695;
            continue;
          case 13:
            aItem = "";
            num1 = (int) num3 * -1528180784 ^ -357198768;
            continue;
          case 14:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num1 = -98111077;
            continue;
          case 15:
            jsonNodeStack.Pop();
            num1 = -370137522;
            continue;
          case 16:
label_66:
            flag8 = flag1;
            num1 = -1803479372;
            continue;
          case 18:
            int num5;
            num1 = num5 = ch2 == 'n' ? -478301762 : (num5 = -922747177);
            continue;
          case 19:
            string str5 = aItem;
            ch3 = JSONNode.\u202E‎⁬⁯‫‭‏‪⁫‎‎‫⁬‬‌‬‏‭⁬‎‭‬‭⁪‮‪‭⁫⁮⁮‌‌‫‏⁮⁭⁫⁯⁬‍‮(aJSON, num2);
            string str6 = ch3.ToString();
            aItem = JSONNode.\u200F‬‪‮‏⁬‮‎‭‌⁪‮⁬⁯‫⁮​‫​‫‍⁫⁯‎⁮⁮⁪‍⁬⁪‮‮‫‎‮⁬⁪‪‪‫‮(str5, str6);
            num1 = (int) num3 * -543433480 ^ 1036008512;
            continue;
          case 20:
            int num6 = !flag9 ? -537814376 : (num6 = -402637422);
            num1 = num6 ^ (int) num3 * -1040635842;
            continue;
          case 21:
label_146:
            int num7;
            num1 = num7 = !flag1 ? -1753281963 : (num7 = -1333587885);
            continue;
          case 22:
            int num8 = ch2 == 'b' ? -448600037 : (num8 = -753944752);
            num1 = num8 ^ (int) num3 * 263586100;
            continue;
          case 23:
            num1 = (int) num3 * 424952058 ^ -374640494;
            continue;
          case 24:
label_7:
            aItem = JSONNode.\u200F‬‪‮‏⁬‮‎‭‌⁪‮⁬⁯‫⁮​‫​‫‍⁫⁯‎⁮⁮⁪‍⁬⁪‮‮‫‎‮⁬⁪‪‪‫‮(aItem, ch1.ToString());
            num1 = -180826306;
            continue;
          case 25:
            num1 = (int) num3 * 1745637944 ^ 85383347;
            continue;
          case 26:
            num1 = (int) num3 * -54881832 ^ 1370262358;
            continue;
          case 27:
            num1 = (int) num3 * -1872019673 ^ -1867379538;
            continue;
          case 28:
            string str7 = aItem;
            ch3 = (char) int.Parse(s, NumberStyles.AllowHexSpecifier);
            string str8 = ch3.ToString();
            aItem = JSONNode.\u200F‬‪‮‏⁬‮‎‭‌⁪‮⁬⁯‫⁮​‫​‫‍⁫⁯‎⁮⁮⁪‍⁬⁪‮‮‫‎‮⁬⁪‪‪‫‮(str7, str8);
            num1 = (int) num3 * -1407993157 ^ 1431805376;
            continue;
          case 29:
label_126:
            ++num2;
            num1 = -1745260227;
            continue;
          case 30:
            int num9 = jsonNode1 is JSONArray ? -389207021 : (num9 = -890694928);
            num1 = num9 ^ (int) num3 * 251752561;
            continue;
          case 31:
            num1 = (int) num3 * 1155267354 ^ -631134399;
            continue;
          case 32:
            switch (ch4)
            {
              case '\t':
                goto label_66;
              case '\n':
              case '\r':
                goto label_6;
              case '\v':
              case '\f':
                goto label_48;
              default:
                num1 = (int) num3 * 290301896 ^ 1079618128;
                continue;
            }
          case 33:
            int num10;
            num1 = num10 = ch4 == '"' ? -1089271481 : (num10 = -556485278);
            continue;
          case 34:
            aKey = JSONNode.\u200F‭​​⁭‏⁭⁮​‭⁬⁪‫⁭‌⁫⁯⁯​‬‏‫⁪⁯⁮‌⁫⁮⁭⁮⁬​‍⁭‎​⁬⁭​‭‮(aKey);
            num1 = (int) num3 * 367311017 ^ 1837432684;
            continue;
          case 35:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -762938079 ^ 719591662;
            continue;
          case 36:
            int num11;
            num1 = num11 = ch4 > ']' ? -849988303 : (num11 = -1133786605);
            continue;
          case 37:
            int num12 = !flag8 ? 1859168891 : (num12 = 887543567);
            num1 = num12 ^ (int) num3 * 1971441470;
            continue;
          case 38:
            string str9 = aItem;
            ch3 = JSONNode.\u202E‎⁬⁯‫‭‏‪⁫‎‎‫⁬‬‌‬‏‭⁬‎‭‬‭⁪‮‪‭⁫⁮⁮‌‌‫‏⁮⁭⁫⁯⁬‍‮(aJSON, num2);
            string str10 = ch3.ToString();
            aItem = JSONNode.\u200F‬‪‮‏⁬‮‎‭‌⁪‮⁬⁯‫⁮​‫​‫‍⁫⁯‎⁮⁮⁪‍⁬⁪‮‮‫‎‮⁬⁪‪‪‫‮(str9, str10);
            num1 = (int) num3 * -1617445504 ^ 751992012;
            continue;
          case 39:
            int num13 = flag13 ? 154092445 : (num13 = 1653028052);
            num1 = num13 ^ (int) num3 * -1467930148;
            continue;
          case 40:
            num1 = (int) num3 * -720173714 ^ 580278194;
            continue;
          case 41:
            flag4 = jsonNode1 != (object) null;
            num1 = (int) num3 * -2026025035 ^ -1678380476;
            continue;
          case 42:
            string str11 = aItem;
            ch3 = JSONNode.\u202E‎⁬⁯‫‭‏‪⁫‎‎‫⁬‬‌‬‏‭⁬‎‭‬‭⁪‮‪‭⁫⁮⁮‌‌‫‏⁮⁭⁫⁯⁬‍‮(aJSON, num2);
            string str12 = ch3.ToString();
            aItem = JSONNode.\u200F‬‪‮‏⁬‮‎‭‌⁪‮⁬⁯‫⁮​‫​‫‍⁫⁯‎⁮⁮⁪‍⁬⁪‮‮‫‎‮⁬⁪‪‪‫‮(str11, str12);
            num1 = (int) num3 * 1801741891 ^ -36093902;
            continue;
          case 43:
            num1 = -1321065264;
            continue;
          case 44:
            int num14;
            num1 = num14 = JSONNode.\u202A‭‏⁮⁮‎⁫‫⁬‭‌‏‌⁯⁫​‬⁭⁬‌‎‎‌⁪‮‮⁯⁯‌⁮‌‫​​​‪‏‍⁫‎‮(aKey, "") ? -1864364407 : (num14 = -1273161845);
            continue;
          case 45:
            num1 = -1538974376;
            continue;
          case 46:
            int num15 = ch4 <= ' ' ? 799439969 : (num15 = 253931214);
            num1 = num15 ^ (int) num3 * 894846696;
            continue;
          case 47:
            num1 = (int) num3 * -469208949 ^ -28106049;
            continue;
          case 48:
            num1 = (int) num3 * 977208457 ^ 1453914094;
            continue;
          case 49:
            switch (ch2)
            {
              case 'r':
                goto label_13;
              case 's':
                goto label_7;
              case 't':
                goto label_148;
              case 'u':
                goto label_33;
              default:
                num1 = -1774156695;
                continue;
            }
          case 50:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -205699981 ^ -1260574036;
            continue;
          case 51:
            aKey = aItem;
            aItem = "";
            num1 = -255552391;
            continue;
          case 52:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -1211348074 ^ 1214208403;
            continue;
          case 53:
            int num16 = !flag1 ? -1074828651 : (num16 = -1481886027);
            num1 = num16 ^ (int) num3 * -141658649;
            continue;
          case 54:
            num1 = -1765227571;
            continue;
          case 55:
            num1 = (int) num3 * -1991980165 ^ -1021891810;
            continue;
          case 56:
            flag2 = flag1;
            num1 = -1507961527;
            continue;
          case 57:
            int num17 = flag7 ? 2044311278 : (num17 = 230108846);
            num1 = num17 ^ (int) num3 * -2030374685;
            continue;
          case 58:
            aKey = "";
            num1 = (int) num3 * 1094259385 ^ -818572351;
            continue;
          case 59:
            num1 = (int) num3 * -290574449 ^ 1417882502;
            continue;
          case 60:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -381538052 ^ -803463021;
            continue;
          case 61:
            num1 = (int) num3 * 775620817 ^ 2004696284;
            continue;
          case 62:
label_148:
            aItem = JSONNode.\u200F‬‪‮‏⁬‮‎‭‌⁪‮⁬⁯‫⁮​‫​‫‍⁫⁯‎⁮⁮⁪‍⁬⁪‮‮‫‎‮⁬⁪‪‪‫‮(aItem, "\t");
            num1 = -1805006603;
            continue;
          case 63:
            string str13 = aItem;
            ch3 = JSONNode.\u202E‎⁬⁯‫‭‏‪⁫‎‎‫⁬‬‌‬‏‭⁬‎‭‬‭⁪‮‪‭⁫⁮⁮‌‌‫‏⁮⁭⁫⁯⁬‍‮(aJSON, num2);
            string str14 = ch3.ToString();
            aItem = JSONNode.\u200F‬‪‮‏⁬‮‎‭‌⁪‮⁬⁯‫⁮​‫​‫‍⁫⁯‎⁮⁮⁪‍⁬⁪‮‮‫‎‮⁬⁪‪‪‫‮(str13, str14);
            num1 = (int) num3 * -1271311792 ^ -1220803978;
            continue;
          case 64:
            num1 = (int) num3 * -607535502 ^ -288862767;
            continue;
          case 65:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -1413228744 ^ -787395784;
            continue;
          case 66:
            num1 = (int) num3 * -206670309 ^ -1193323692;
            continue;
          case 67:
          case 70:
          case 91:
          case 92:
          case 112:
label_6:
            ++num2;
            num1 = -1428951019;
            continue;
          case 68:
            int num18 = ch4 > ',' ? 206180373 : (num18 = 505210635);
            num1 = num18 ^ (int) num3 * -912270299;
            continue;
          case 69:
            aKey = "";
            num1 = -1936493508;
            continue;
          case 71:
            flag5 = JSONNode.\u202A‭‏⁮⁮‎⁫‫⁬‭‌‏‌⁯⁫​‬⁭⁬‌‎‎‌⁪‮‮⁯⁯‌⁮‌‫​​​‪‏‍⁫‎‮(aKey, "");
            num1 = -642111989;
            continue;
          case 72:
            num1 = (int) num3 * -1085261346 ^ 500842847;
            continue;
          case 73:
            aKey = JSONNode.\u200F‭​​⁭‏⁭⁮​‭⁬⁪‫⁭‌⁫⁯⁯​‬‏‫⁪⁯⁮‌⁫⁮⁭⁮⁬​‍⁭‎​⁬⁭​‭‮(aKey);
            num1 = (int) num3 * 2024468541 ^ -1411036772;
            continue;
          case 74:
            aItem = JSONNode.\u200F‬‪‮‏⁬‮‎‭‌⁪‮⁬⁯‫⁮​‫​‫‍⁫⁯‎⁮⁮⁪‍⁬⁪‮‮‫‎‮⁬⁪‪‪‫‮(aItem, "\b");
            num1 = -185636489;
            continue;
          case 75:
            int num19 = !flag3 ? -1759471195 : (num19 = -761246964);
            num1 = num19 ^ (int) num3 * -646366525;
            continue;
          case 76:
            aItem = JSONNode.\u200F‬‪‮‏⁬‮‎‭‌⁪‮⁬⁯‫⁮​‫​‫‍⁫⁯‎⁮⁮⁪‍⁬⁪‮‮‫‎‮⁬⁪‪‪‫‮(aItem, "\f");
            num1 = -836748458;
            continue;
          case 77:
            num1 = (int) num3 * -1472219067 ^ -1397633837;
            continue;
          case 78:
            num1 = (int) num3 * -386759180 ^ 489316926;
            continue;
          case 79:
            num1 = (int) num3 * 12587838 ^ 782814972;
            continue;
          case 80:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -105233740 ^ -531037282;
            continue;
          case 81:
            num1 = (int) num3 * 634799169 ^ -580165131;
            continue;
          case 82:
            num1 = (int) num3 * 355288548 ^ 499591286;
            continue;
          case 83:
            ch1 = JSONNode.\u202E‎⁬⁯‫‭‏‪⁫‎‎‫⁬‬‌‬‏‭⁬‎‭‬‭⁪‮‪‭⁫⁮⁮‌‌‫‏⁮⁭⁫⁯⁬‍‮(aJSON, num2);
            ch5 = ch1;
            num1 = (int) num3 * -919148151 ^ -537248505;
            continue;
          case 84:
label_48:
            string str15 = aItem;
            ch3 = JSONNode.\u202E‎⁬⁯‫‭‏‪⁫‎‎‫⁬‬‌‬‏‭⁬‎‭‬‭⁪‮‪‭⁫⁮⁮‌‌‫‏⁮⁭⁫⁯⁬‍‮(aJSON, num2);
            string str16 = ch3.ToString();
            aItem = JSONNode.\u200F‬‪‮‏⁬‮‎‭‌⁪‮⁬⁯‫⁮​‫​‫‍⁫⁯‎⁮⁮⁪‍⁬⁪‮‮‫‎‮⁬⁪‪‪‫‮(str15, str16);
            num1 = -1119760193;
            continue;
          case 85:
            ch6 = JSONNode.\u202E‎⁬⁯‫‭‏‪⁫‎‎‫⁬‬‌‬‏‭⁬‎‭‬‭⁪‮‪‭⁫⁮⁮‌‌‫‏⁮⁭⁫⁯⁬‍‮(aJSON, num2);
            num1 = -2133919413;
            continue;
          case 86:
            flag1 = false;
            num1 = (int) num3 * 1387164991 ^ 1433666344;
            continue;
          case 87:
            aKey = JSONNode.\u200F‭​​⁭‏⁭⁮​‭⁬⁪‫⁭‌⁫⁯⁯​‬‏‫⁪⁯⁮‌⁫⁮⁭⁮⁬​‍⁭‎​⁬⁭​‭‮(aKey);
            flag11 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -1781978269 ^ 165277854;
            continue;
          case 88:
            flag10 = jsonNodeStack.Count > 0;
            num1 = (int) num3 * 498612314 ^ -1441702977;
            continue;
          case 89:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            num1 = -672881568;
            continue;
          case 90:
            int num20 = !(jsonNode1 != (object) null) ? -476252554 : (num20 = -883197531);
            num1 = num20 ^ (int) num3 * 1775938730;
            continue;
          case 93:
            ch2 = ch5;
            int num21 = ch2 > 'f' ? 1372061392 : (num21 = 1843751274);
            num1 = num21 ^ (int) num3 * -480514691;
            continue;
          case 94:
            aItem = "";
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 536422406 ^ 1730982923;
            continue;
          case 95:
            switch (ch4)
            {
              case '[':
                goto label_146;
              case '\\':
                goto label_126;
              case ']':
                goto label_97;
              default:
                num1 = -1730338397;
                continue;
            }
          case 96:
            num1 = (int) num3 * -704009394 ^ -118903022;
            continue;
          case 97:
            int num22 = !JSONNode.\u202A‭‏⁮⁮‎⁫‫⁬‭‌‏‌⁯⁫​‬⁭⁬‌‎‎‌⁪‮‮⁯⁯‌⁮‌‫​​​‪‏‍⁫‎‮(aItem, "") ? -383161259 : (num22 = -1033771633);
            num1 = num22 ^ (int) num3 * 1961713720;
            continue;
          case 98:
            int num23 = !flag11 ? 1120797424 : (num23 = 602324043);
            num1 = num23 ^ (int) num3 * -93602737;
            continue;
          case 99:
            num1 = (int) num3 * -1737641658 ^ -734984587;
            continue;
          case 100:
            num1 = (int) num3 * -1443446029 ^ -468674851;
            continue;
          case 101:
            num1 = (int) num3 * -1081125449 ^ 16450881;
            continue;
          case 102:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -1315728509 ^ -212620226;
            continue;
          case 103:
            goto label_104;
          case 104:
            int num24;
            num1 = num24 = ch4 == ' ' ? -1420373809 : (num24 = -134755176);
            continue;
          case 105:
            s = JSONNode.\u206F⁪⁯‪‍⁭‍‏‪‏‪‎‏‌‪⁪⁫⁮​‫⁪‫⁮‬⁪‌‭⁪‭⁮⁬‫​⁮⁬⁮⁮‭‌‏‮(aJSON, num2 + 1, 4);
            num1 = (int) num3 * 1131277139 ^ 1735431626;
            continue;
          case 106:
            num1 = (int) num3 * 1104795121 ^ 773206170;
            continue;
          case 107:
            aKey = "";
            aItem = "";
            num1 = -447766708;
            continue;
          case 108:
            flag1 = !flag1;
            num1 = -906695450;
            continue;
          case 109:
            flag3 = JSONNode.\u202A‭‏⁮⁮‎⁫‫⁬‭‌‏‌⁯⁫​‬⁭⁬‌‎‎‌⁪‮‮⁯⁯‌⁮‌‫​​​‪‏‍⁫‎‮(aKey, "");
            num1 = -1799108520;
            continue;
          case 110:
            int num25;
            num1 = num25 = ch4 == '{' ? -1246698078 : (num25 = -90451236);
            continue;
          case 111:
            aKey = "";
            num1 = -1521099909;
            continue;
          case 113:
            num2 += 4;
            num1 = (int) num3 * 2015128331 ^ -515046895;
            continue;
          case 114:
label_13:
            aItem = JSONNode.\u200F‬‪‮‏⁬‮‎‭‌⁪‮⁬⁯‫⁮​‫​‫‍⁫⁯‎⁮⁮⁪‍⁬⁪‮‮‫‎‮⁬⁪‪‪‫‮(aItem, "\r");
            num1 = -836748458;
            continue;
          case 115:
            num1 = (int) num3 * -1646460542 ^ -28985749;
            continue;
          case 116:
            aKey = "";
            aItem = "";
            num1 = -1441543189;
            continue;
          case 117:
            goto label_41;
          case 118:
            int num26 = flag1 ? 1884325056 : (num26 = 56397406);
            num1 = num26 ^ (int) num3 * -1227145631;
            continue;
          case 119:
            flag9 = num2 < JSONNode.\u206D⁮‪‫⁬⁭⁫‬⁭⁮⁭‪⁬⁭⁫‍‪‫⁫‌‪​​​‮‍‎⁬​⁫⁮​⁭‍‎‮‫‬‫‮(aJSON);
            num1 = -21888233;
            continue;
          case 120:
            int num27 = flag5 ? -233360179 : (num27 = -346358288);
            num1 = num27 ^ (int) num3 * 193903628;
            continue;
          case 121:
            int num28 = !flag6 ? -1628595688 : (num28 = -28316493);
            num1 = num28 ^ (int) num3 * -832558376;
            continue;
          case 122:
            int num29;
            num1 = num29 = !flag1 ? -2108383480 : (num29 = -160404056);
            continue;
          case 123:
            int num30;
            num1 = num30 = JSONNode.\u202A‭‏⁮⁮‎⁫‫⁬‭‌‏‌⁯⁫​‬⁭⁬‌‎‎‌⁪‮‮⁯⁯‌⁮‌‫​​​‪‏‍⁫‎‮(aKey, "") ? -919733627 : (num30 = -68115706);
            continue;
          case 124:
            int num31 = !flag4 ? -178836528 : (num31 = -692145730);
            num1 = num31 ^ (int) num3 * -1254270807;
            continue;
          case 125:
            flag12 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 1451231158 ^ 803034946;
            continue;
          case 126:
            num1 = (int) num3 * 700286197 ^ -814862506;
            continue;
          case (uint) sbyte.MaxValue:
            num1 = (int) num3 * 1711982648 ^ 1524856910;
            continue;
          case 128:
            num1 = (int) num3 * 1873872650 ^ 1426117722;
            continue;
          case 129:
            num1 = (int) num3 * 1974915215 ^ 166414387;
            continue;
          case 130:
            int num32 = !flag10 ? 1218738571 : (num32 = 556943543);
            num1 = num32 ^ (int) num3 * -518249673;
            continue;
          case 131:
label_33:
            num1 = -709719202;
            continue;
          case 132:
            num1 = (int) num3 * -1245701418 ^ -1406466014;
            continue;
          case 133:
            num1 = -353078858;
            continue;
          case 134:
            int num33;
            num1 = num33 = ch4 != '}' ? -1364361960 : (num33 = -2010856968);
            continue;
          case 135:
            goto label_1;
          case 136:
            num1 = (int) num3 * -934749785 ^ 1297346470;
            continue;
          case 137:
            num1 = (int) num3 * -49279626 ^ 1094356668;
            continue;
          case 138:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -1062831608 ^ 526226912;
            continue;
          case 139:
            int num34;
            num1 = num34 = ch2 != 'f' ? -1956158970 : (num34 = -272157901);
            continue;
          case 140:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -664505574 ^ 950541824;
            continue;
          case 141:
            int num35;
            num1 = num35 = ch4 == ',' ? -334725355 : (num35 = -1852325731);
            continue;
          case 142:
            num1 = (int) num3 * 2013651605 ^ -1076047286;
            continue;
          case 143:
            int num36 = flag12 ? -1882164546 : (num36 = -1510336694);
            num1 = num36 ^ (int) num3 * 846780550;
            continue;
          case 144:
            int num37 = ch4 == ':' ? 1899455219 : (num37 = 914480197);
            num1 = num37 ^ (int) num3 * 1674182409;
            continue;
          case 145:
            int num38;
            num1 = num38 = flag1 ? -1932609422 : (num38 = -156412402);
            continue;
          case 146:
            int num39 = flag2 ? -722612916 : (num39 = -1892930204);
            num1 = num39 ^ (int) num3 * -830655492;
            continue;
          case 147:
            aItem = JSONNode.\u200F‬‪‮‏⁬‮‎‭‌⁪‮⁬⁯‫⁮​‫​‫‍⁫⁯‎⁮⁮⁪‍⁬⁪‮‮‫‎‮⁬⁪‪‪‫‮(aItem, "\n");
            num1 = -2112035733;
            continue;
          case 148:
            num2 = 0;
            aItem = "";
            num1 = (int) num3 * 1472997260 ^ -1675947413;
            continue;
          case 149:
            jsonNode2 = jsonNode1;
            num1 = -960030441;
            continue;
          default:
            goto label_150;
        }
      }
label_41:
      throw JSONNode.\u202C‬‍‍‬⁬‌‏‍⁭‏⁫‍⁪‏‬‌‌⁮⁪⁮⁭⁯‏‏‮‭‍‬⁯‍​‍‌‫‎‫⁯‏⁭‮("JSON Parse: Quotation marks seems to be messed up.");
label_104:
      throw JSONNode.\u202C‬‍‍‬⁬‌‏‍⁭‏⁫‍⁪‏‬‌‌⁮⁪⁮⁭⁯‏‏‮‭‍‬⁯‍​‍‌‫‎‫⁯‏⁭‮("JSON Parse: Too many closing brackets");
label_150:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
      this.Serialize(JSONNode.\u202B‭‪⁭⁬⁪⁫‮⁫⁫‬⁯‍‎‭‭‎​⁫⁬‫‌​‫⁭‮⁯‏⁫⁬​‎‮‍⁬‍‍⁯​‌‮(aData));
label_1:
      int num1 = -1226831809;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1842772128)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1226241487 ^ 449850511;
            continue;
          case 2:
            goto label_3;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u202C‬‍‍‬⁬‌‏‍⁭‏⁫‍⁪‏‬‌‌⁮⁪⁮⁭⁯‏‏‮‭‍‬⁯‍​‍‌‫‎‫⁯‏⁭‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u202C‬‍‍‬⁬‌‏‍⁭‏⁫‍⁪‏‬‌‌⁮⁪⁮⁭⁯‏‏‮‭‍‬⁯‍​‍‌‫‎‫⁯‏⁭‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u202C‬‍‍‬⁬‌‏‍⁭‏⁫‍⁪‏‬‌‌⁮⁪⁮⁭⁯‏‏‮‭‍‬⁯‍​‍‌‫‎‫⁯‏⁭‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
      JSONNode.\u206E‍⁬⁮‏‪‭​⁪⁭⁫‭⁭‭‏‍‏​​‏‌‫‎‮⁭‬‪‮‬‬⁬⁪​‮‌⁮‪​‏‮(JSONNode.\u206C⁪⁯⁪‌‏⁬‎⁪‫‌⁫⁪⁮⁪‏‮⁬‌⁪⁫‌‮⁯‮‮‮‭​⁮‫⁭​⁪⁭​‌⁫‎⁭‮((FileSystemInfo) JSONNode.\u206B⁫⁭‍‍‮⁪‎‌‎‬‏⁭⁫‭⁮‍⁫⁬‏‪​‮‏‪‌‍‪‬‭‏⁬‮‭‫‪‪‬⁫⁬‮(JSONNode.\u202E⁬‎⁬⁯‪‭⁯⁮‮⁭⁮⁫⁫‎‌‫⁬‌‌‫⁯​⁮‌‫‎⁫⁬‎⁪⁭⁭⁯‌‌⁫⁬⁮⁭‮(aFileName))));
      FileStream aData = JSONNode.\u206D​‬‍‪⁮‭⁭‍‬‭⁫⁭‏‍‪‌⁭⁫⁮‎⁬⁪‫‎‬‏‪‏‪​‭‏‫⁭‌‏⁫⁮‪‮(aFileName);
      try
      {
label_2:
        int num1 = 1309098133;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 550457998)) % 3U)
          {
            case 0:
              goto label_2;
            case 1:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * -1189291225 ^ -469185372;
              continue;
            case 2:
              goto label_9;
            default:
              goto label_5;
          }
        }
label_9:
        return;
label_5:;
      }
      finally
      {
        if (aData != null)
        {
label_7:
          int num3 = 630184424;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 550457998)) % 3U)
            {
              case 0:
                goto label_7;
              case 1:
                JSONNode.\u200B‍‌​‍‪​‏‎​‌‌‍‌‬⁮‏‏‌‏‭⁯‎⁬⁭⁪‌⁪⁬‌‫⁪⁭‎​‎⁫‫⁭‌‮((IDisposable) aData);
                num3 = (int) num4 * -636192773 ^ -1115036330;
                continue;
              default:
                goto label_11;
            }
          }
        }
label_11:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u202B‍‬‎‬‌‌‫⁬‎⁪⁮⁮‏⁪‭⁯‍​⁭⁯‬‫‏‪‪⁬⁮‎‬‌‪‫⁭⁭⁮⁬‪‌⁯‮();
      string base64;
      try
      {
label_2:
        int num1 = 480480371;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2125169276)) % 6U)
          {
            case 1:
              num1 = (int) num2 * 1850950991 ^ 397326105;
              continue;
            case 2:
              base64 = JSONNode.\u206D⁭‌‬‮⁮‬⁬⁭‎‎‭​‫‎⁭⁪‌⁬⁪⁮‮‪⁭‏⁪⁯⁮‍⁮​‪‍‌‪‮‪‌‬‎‮(JSONNode.\u206A‫​‏⁯‍‪⁪‭⁮⁫⁪⁬‌‪‫‌⁫⁪‬‫‫⁮⁪‭⁪‍​‎‎‏⁬⁬⁫⁪⁫‎‬‬⁫‮(aData));
              num1 = (int) num2 * 203979304 ^ 657362896;
              continue;
            case 3:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * 320880408 ^ 757689185;
              continue;
            case 4:
              JSONNode.\u206D​⁮​‪‮‬‏‏‪⁬⁭‫​‭​‪‬‪‬‎⁬⁬‭‮‪​‮‫⁬⁫‏‏⁬⁯‎‪⁫⁮⁮‮((Stream) aData, 0L);
              num1 = (int) num2 * 1922270440 ^ 503662058;
              continue;
            case 5:
              goto label_2;
            default:
              goto label_13;
          }
        }
      }
      finally
      {
        if (aData != null)
        {
label_9:
          int num3 = 605376989;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 2125169276)) % 3U)
            {
              case 0:
                goto label_9;
              case 1:
                JSONNode.\u200B‍‌​‍‪​‏‎​‌‌‍‌‬⁮‏‏‌‏‭⁯‎⁬⁭⁪‌⁪⁬‌‫⁪⁭‎​‎⁫‫⁭‌‮((IDisposable) aData);
                num3 = (int) num4 * -734516328 ^ -900513964;
                continue;
              default:
                goto label_12;
            }
          }
        }
label_12:;
      }
label_13:
      return base64;
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
label_1:
      int num1 = -1693674670;
      int num2;
      JSONNode jsonNode;
      int num3;
      int num4;
      int num5;
      JSONBinaryTag jsonBinaryTag1;
      JSONClass jsonClass;
      string aKey;
      JSONArray jsonArray;
      JSONBinaryTag jsonBinaryTag2;
      JSONBinaryTag jsonBinaryTag3;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ -418072056)) % 39U)
        {
          case 0:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * 468282354 ^ 1052230706;
            continue;
          case 1:
            int num7;
            num1 = num7 = num2 < num5 ? -1076603503 : (num7 = -2120917081);
            continue;
          case 2:
            num3 = 0;
            num1 = (int) num6 * 780039848 ^ 388807023;
            continue;
          case 3:
            goto label_1;
          case 4:
label_4:
            num1 = -702653167;
            continue;
          case 5:
            num1 = (int) num6 * 1351546952 ^ 1170334292;
            continue;
          case 6:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200D⁭​⁭⁭​‏‏⁭‫‬‪‏‪‎‎‪‬‮‏​​‪‍​‌‪⁭‫‬⁮‮⁭⁯‫‌⁫⁬‍⁪‮(aReader));
            num1 = (int) num6 * -754260666 ^ 52863462;
            continue;
          case 7:
            num1 = (int) num6 * -9185505 ^ 1883789479;
            continue;
          case 8:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * -582197272 ^ -736225589;
            continue;
          case 9:
            num1 = (int) num6 * -269935309 ^ -2062119748;
            continue;
          case 10:
            ++num2;
            num1 = (int) num6 * 989426311 ^ 2136380825;
            continue;
          case 11:
            jsonArray = new JSONArray();
            num2 = 0;
            num1 = (int) num6 * -505261031 ^ -1592645271;
            continue;
          case 12:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206E‪⁭‬‫‪⁯‍‌‍⁪⁬​‫‪‍​‎⁫‫‫⁭⁫‫‫‭⁭​‏​‌‪⁯‫‫⁬‫‍‭⁬‮(aReader));
            num1 = (int) num6 * -760833138 ^ -350286906;
            continue;
          case 13:
            num1 = (int) num6 * 1454136136 ^ 1394230741;
            continue;
          case 14:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200B⁮‮⁪⁭‭⁬⁯​⁭‍‬‮⁭⁬‪⁯⁯​⁪‭‪⁭‍‮‍‎‎‮‬‌‌‫‏⁮‏‭⁭‏‏‮(aReader));
            num1 = (int) num6 * 1640283326 ^ -470330024;
            continue;
          case 15:
            num1 = (int) num6 * -1330708235 ^ 617685074;
            continue;
          case 16:
            int num8;
            num1 = num8 = num3 >= num4 ? -1919630044 : (num8 = -2046921169);
            continue;
          case 17:
label_8:
            num4 = JSONNode.\u200D⁫‌⁯⁯‬‏‬‏⁯​‪‎⁮⁭⁮⁭⁮⁯‎⁮‬⁮‭‌⁯‎⁫‪⁭‏​‭‏⁮‍‬‎‬⁪‮(aReader);
            num1 = -2028605629;
            continue;
          case 18:
            jsonBinaryTag1 = (JSONBinaryTag) JSONNode.\u200B⁫⁯⁯⁭⁬⁭⁬‎‌‭⁭​​‪‍⁫‮‏‬‪​‫‬‏‌⁬‭⁯‮‫‭‏‍‭⁭‮⁯⁮‎‮(aReader);
            jsonBinaryTag3 = jsonBinaryTag1;
            num1 = (int) num6 * 1867468213 ^ 1588523911;
            continue;
          case 19:
            num5 = JSONNode.\u200D⁫‌⁯⁯‬‏‬‏⁯​‪‎⁮⁭⁮⁭⁮⁯‎⁮‬⁮‭‌⁯‎⁫‪⁭‏​‭‏⁮‍‬‎‬⁪‮(aReader);
            num1 = (int) num6 * 397338679 ^ 887016290;
            continue;
          case 20:
            num1 = (int) num6 * -1875889859 ^ -1350678464;
            continue;
          case 21:
            num1 = (int) num6 * 373962449 ^ -92910021;
            continue;
          case 22:
            goto label_10;
          case 23:
            aKey = JSONNode.\u200B⁮‮⁪⁭‭⁬⁯​⁭‍‬‮⁭⁬‪⁯⁯​⁪‭‪⁭‍‮‍‎‎‮‬‌‌‫‏⁮‏‭⁭‏‏‮(aReader);
            num1 = -215742950;
            continue;
          case 24:
            num1 = (int) num6 * 1989886972 ^ -1047798395;
            continue;
          case 25:
label_36:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200D⁫‌⁯⁯‬‏‬‏⁯​‪‎⁮⁭⁮⁭⁮⁯‎⁮‬⁮‭‌⁯‎⁫‪⁭‏​‭‏⁮‍‬‎‬⁪‮(aReader));
            num1 = -1667285717;
            continue;
          case 26:
label_22:
            num1 = -639343200;
            continue;
          case 27:
label_20:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206C‬‮‍‫⁯‎⁮‭‌‫⁬‪‫⁬‮⁪⁬‌⁬‭⁪⁯⁭⁭​‫‪‎‭⁯‪⁬⁫‬⁫‭⁮⁪⁮‮(aReader));
            num1 = -152619183;
            continue;
          case 28:
            JSONNode aItem = JSONNode.Deserialize(aReader);
            jsonClass.Add(aKey, aItem);
            num1 = (int) num6 * -135040479 ^ -1257955373;
            continue;
          case 29:
            jsonClass = new JSONClass();
            num1 = (int) num6 * 1799394524 ^ 1074191873;
            continue;
          case 30:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            num1 = -502630260;
            continue;
          case 31:
            num1 = (int) num6 * -1067214070 ^ 119637737;
            continue;
          case 32:
label_25:
            num1 = -577497839;
            continue;
          case 33:
            switch (jsonBinaryTag2)
            {
              case JSONBinaryTag.Array:
                goto label_40;
              case JSONBinaryTag.Class:
                goto label_8;
              case JSONBinaryTag.Value:
                goto label_25;
              case JSONBinaryTag.IntValue:
                goto label_36;
              case JSONBinaryTag.DoubleValue:
                goto label_4;
              case JSONBinaryTag.BoolValue:
                goto label_22;
              case JSONBinaryTag.FloatValue:
                goto label_20;
              default:
                num1 = (int) num6 * -1013460902 ^ -1502526379;
                continue;
            }
          case 35:
label_40:
            num1 = -2028096766;
            continue;
          case 36:
            jsonBinaryTag2 = jsonBinaryTag3;
            num1 = (int) num6 * -1691632325 ^ -1624960781;
            continue;
          case 37:
            num1 = (int) num6 * -1769823792 ^ 1025163029;
            continue;
          case 38:
            ++num3;
            num1 = (int) num6 * -422300577 ^ -768984929;
            continue;
          default:
            goto label_41;
        }
      }
label_10:
      throw JSONNode.\u202C‬‍‍‬⁬‌‏‍⁭‏⁫‍⁪‏‬‌‌⁮⁪⁮⁭⁯‏‏‮‭‍‬⁯‍​‍‌‫‎‫⁯‏⁭‮(JSONNode.\u200F‬‪‮‏⁬‮‎‭‌⁪‮⁬⁯‫⁮​‫​‫‍⁫⁯‎⁮⁮⁪‍⁬⁪‮‮‫‎‮⁬⁪‪‪‫‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag1.ToString()));
label_41:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u202C‬‍‍‬⁬‌‏‍⁭‏⁫‍⁪‏‬‌‌⁮⁪⁮⁭⁯‏‏‮‭‍‬⁯‍​‍‌‫‎‫⁯‏⁭‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u202C‬‍‍‬⁬‌‏‍⁭‏⁫‍⁪‏‬‌‌⁮⁪⁮⁭⁯‏‏‮‭‍‬⁯‍​‍‌‫‎‫⁯‏⁭‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u202C‬‍‍‬⁬‌‏‍⁭‏⁫‍⁪‏‬‌‌⁮⁪⁮⁭⁯‏‏‮‭‍‬⁯‍​‍‌‫‎‫⁯‏⁭‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u202C⁮​⁪⁯‫‪‏‪⁮‭​⁯‮‫‭⁪⁮⁭⁭⁫⁮​‭‪‪⁪⁯‮‪‎‬⁪⁯‎‏‍‮‫‌‮(aData);
      try
      {
        return JSONNode.Deserialize(aReader);
      }
      finally
      {
        if (aReader != null)
        {
label_3:
          int num1 = 1550600355;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ 1638098680)) % 4U)
            {
              case 0:
                num1 = (int) num2 * 553712023 ^ 1732197253;
                continue;
              case 2:
                goto label_3;
              case 3:
                JSONNode.\u200B‍‌​‍‪​‏‎​‌‌‍‌‬⁮‏‏‌‏‭⁯‎⁬⁭⁪‌⁪⁬‌‫⁪⁭‎​‎⁫‫⁭‌‮((IDisposable) aReader);
                num1 = (int) num2 * -1173759555 ^ -118549445;
                continue;
              default:
                goto label_7;
            }
          }
        }
label_7:;
      }
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u200F⁪⁭‍⁯⁯‮‌⁯‮⁯‬‮‬⁮‮​‍‪‫‌‮​‍‬‌‎⁯‏​​⁭⁭‏⁫‏⁫⁪⁭‍‮(aFileName);
      try
      {
        return JSONNode.LoadFromStream((Stream) aData);
      }
      finally
      {
        if (aData != null)
        {
label_3:
          int num1 = 1410501249;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ 967085341)) % 3U)
            {
              case 0:
                goto label_3;
              case 1:
                JSONNode.\u200B‍‌​‍‪​‏‎​‌‌‍‌‬⁮‏‏‌‏‭⁯‎⁬⁭⁪‌⁪⁬‌‫⁪⁭‎​‎⁫‫⁭‌‮((IDisposable) aData);
                num1 = (int) num2 * 1245251708 ^ -1729136383;
                continue;
              default:
                goto label_6;
            }
          }
        }
label_6:;
      }
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
label_1:
      int num1 = 526124843;
      MemoryStream aData;
      JSONNode jsonNode;
      byte[] numArray;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 204598965)) % 7U)
        {
          case 0:
            num1 = (int) num2 * 1461956732 ^ -148296347;
            continue;
          case 1:
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * -1624320300 ^ 333707353;
            continue;
          case 2:
            goto label_1;
          case 3:
            aData = JSONNode.\u202A‪⁭‪⁭‪‫‍‎⁪‏‍‮⁪⁮‬⁮⁭‏‬⁯⁬‏⁯‍⁮‎‬‬‭​‎​‮‫‭⁪‫⁬⁬‮(numArray);
            JSONNode.\u206D​⁮​‪‮‬‏‏‪⁬⁭‫​‭​‪‬‪‬‎⁬⁬‭‮‪​‮‫⁬⁫‏‏⁬⁯‎‪⁫⁮⁮‮((Stream) aData, 0L);
            num1 = (int) num2 * -1912302544 ^ 1847223280;
            continue;
          case 4:
            numArray = JSONNode.\u206F⁬‏‏⁪‪‭⁮⁬‏‪⁮‪⁯⁮‌‎⁫‪‮‭⁯​‌‎⁪‪‍‎⁪‬⁭⁭⁫⁬⁭‌⁮⁬⁫‮(aBase64);
            num1 = (int) num2 * -1662168000 ^ 2048331091;
            continue;
          case 6:
            num1 = (int) num2 * -813571038 ^ 1447417412;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      return jsonNode;
    }

    static CultureInfo \u200E‌‪⁪‭⁬⁯⁯‫⁪‎‭‍‪⁪​⁫⁫‬⁪‌⁪⁯‮‮‌⁮‌‌‏‍​⁪‬⁯‬‫‮‪⁪‮() => CultureInfo.InvariantCulture;

    static bool \u206C⁬⁫‮⁫‮⁭‌⁬⁫‫⁯⁭‮‮‌‫‫⁮​‭⁬⁭‌‍‭‎‪‎‪‎⁭⁫​‫‏‎‎⁬‍‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u206E⁯⁭⁫‌‏⁭‎‏⁯‪‬⁪‬⁫⁭⁬⁭‍‭‍‎‮⁬‪‬‍‍‭‏‫‌‭‍‬‮⁮​⁮‭‮() => base.GetHashCode();

    static char \u202E‎⁬⁯‫‭‏‪⁫‎‎‫⁬‬‌‬‏‭⁬‎‭‬‭⁪‮‪‭⁫⁮⁮‌‌‫‏⁮⁭⁫⁯⁬‍‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u200F‬‪‮‏⁬‮‎‭‌⁪‮⁬⁯‫⁮​‫​‫‍⁫⁯‎⁮⁮⁪‍⁬⁪‮‮‫‎‮⁬⁪‪‪‫‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u206D⁮‪‫⁬⁭⁫‬⁭⁮⁭‪⁬⁭⁫‍‪‫⁫‌‪​​​‮‍‎⁬​⁫⁮​⁭‍‎‮‫‬‫‮([In] string obj0) => obj0.Length;

    static string \u200F‭​​⁭‏⁭⁮​‭⁬⁪‫⁭‌⁫⁯⁯​‬‏‫⁪⁯⁮‌⁫⁮⁭⁮⁬​‍⁭‎​⁬⁭​‭‮([In] string obj0) => obj0.Trim();

    static bool \u202A‭‏⁮⁮‎⁫‫⁬‭‌‏‌⁯⁫​‬⁭⁬‌‎‎‌⁪‮‮⁯⁯‌⁮‌‫​​​‪‏‍⁫‎‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u202C‬‍‍‬⁬‌‏‍⁭‏⁫‍⁪‏‬‌‌⁮⁪⁮⁭⁯‏‏‮‭‍‬⁯‍​‍‌‫‎‫⁯‏⁭‮([In] string obj0) => new Exception(obj0);

    static string \u206F⁪⁯‪‍⁭‍‏‪‏‪‎‏‌‪⁪⁫⁮​‫⁪‫⁮‬⁪‌‭⁪‭⁮⁬‫​⁮⁬⁮⁮‭‌‏‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u202B‭‪⁭⁬⁪⁫‮⁫⁫‬⁯‍‎‭‭‎​⁫⁬‫‌​‫⁭‮⁯‏⁫⁬​‎‮‍⁬‍‍⁯​‌‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u202E⁬‎⁬⁯‪‭⁯⁮‮⁭⁮⁫⁫‎‌‫⁬‌‌‫⁯​⁮‌‫‎⁫⁬‎⁪⁭⁭⁯‌‌⁫⁬⁮⁭‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u206B⁫⁭‍‍‮⁪‎‌‎‬‏⁭⁫‭⁮‍⁫⁬‏‪​‮‏‪‌‍‪‬‭‏⁬‮‭‫‪‪‬⁫⁬‮([In] FileInfo obj0) => obj0.Directory;

    static string \u206C⁪⁯⁪‌‏⁬‎⁪‫‌⁫⁪⁮⁪‏‮⁬‌⁪⁫‌‮⁯‮‮‮‭​⁮‫⁭​⁪⁭​‌⁫‎⁭‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u206E‍⁬⁮‏‪‭​⁪⁭⁫‭⁭‭‏‍‏​​‏‌‫‎‮⁭‬‪‮‬‬⁬⁪​‮‌⁮‪​‏‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u206D​‬‍‪⁮‭⁭‍‬‭⁫⁭‏‍‪‌⁭⁫⁮‎⁬⁪‫‎‬‏‪‏‪​‭‏‫⁭‌‏⁫⁮‪‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u200B‍‌​‍‪​‏‎​‌‌‍‌‬⁮‏‏‌‏‭⁯‎⁬⁭⁪‌⁪⁬‌‫⁪⁭‎​‎⁫‫⁭‌‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u202B‍‬‎‬‌‌‫⁬‎⁪⁮⁮‏⁪‭⁯‍​⁭⁯‬‫‏‪‪⁬⁮‎‬‌‪‫⁭⁭⁮⁬‪‌⁯‮() => new MemoryStream();

    static void \u206D​⁮​‪‮‬‏‏‪⁬⁭‫​‭​‪‬‪‬‎⁬⁬‭‮‪​‮‫⁬⁫‏‏⁬⁯‎‪⁫⁮⁮‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u206A‫​‏⁯‍‪⁪‭⁮⁫⁪⁬‌‪‫‌⁫⁪‬‫‫⁮⁪‭⁪‍​‎‎‏⁬⁬⁫⁪⁫‎‬‬⁫‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u206D⁭‌‬‮⁮‬⁬⁭‎‎‭​‫‎⁭⁪‌⁬⁪⁮‮‪⁭‏⁪⁯⁮‍⁮​‪‍‌‪‮‪‌‬‎‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u200B⁫⁯⁯⁭⁬⁭⁬‎‌‭⁭​​‪‍⁫‮‏‬‪​‫‬‏‌⁬‭⁯‮‫‭‏‍‭⁭‮⁯⁮‎‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u200D⁫‌⁯⁯‬‏‬‏⁯​‪‎⁮⁭⁮⁭⁮⁯‎⁮‬⁮‭‌⁯‎⁫‪⁭‏​‭‏⁮‍‬‎‬⁪‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u200B⁮‮⁪⁭‭⁬⁯​⁭‍‬‮⁭⁬‪⁯⁯​⁪‭‪⁭‍‮‍‎‎‮‬‌‌‫‏⁮‏‭⁭‏‏‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u206E‪⁭‬‫‪⁯‍‌‍⁪⁬​‫‪‍​‎⁫‫‫⁭⁫‫‫‭⁭​‏​‌‪⁯‫‫⁬‫‍‭⁬‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u200D⁭​⁭⁭​‏‏⁭‫‬‪‏‪‎‎‪‬‮‏​​‪‍​‌‪⁭‫‬⁮‮⁭⁯‫‌⁫⁬‍⁪‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u206C‬‮‍‫⁯‎⁮‭‌‫⁬‪‫⁬‮⁪⁬‌⁬‭⁪⁯⁭⁭​‫‪‎‭⁯‪⁬⁫‬⁫‭⁮⁪⁮‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u202C⁮​⁪⁯‫‪‏‪⁮‭​⁯‮‫‭⁪⁮⁭⁭⁫⁮​‭‪‪⁪⁯‮‪‎‬⁪⁯‎‏‍‮‫‌‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u200F⁪⁭‍⁯⁯‮‌⁯‮⁯‬‮‬⁮‮​‍‪‫‌‮​‍‬‌‎⁯‏​​⁭⁭‏⁫‏⁫⁪⁭‍‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u206F⁬‏‏⁪‪‭⁮⁬‏‪⁮‪⁯⁮‌‎⁫‪‮‭⁯​‌‎⁪‪‍‎⁪‬⁭⁭⁫⁬⁭‌⁮⁬⁫‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u202A‪⁭‪⁭‪‫‍‎⁪‏‍‮⁪⁮‬⁮⁭‏‬⁯⁬‏⁯‍⁮‎‬‬‭​‎​‮‫‭⁪‫⁬⁬‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
