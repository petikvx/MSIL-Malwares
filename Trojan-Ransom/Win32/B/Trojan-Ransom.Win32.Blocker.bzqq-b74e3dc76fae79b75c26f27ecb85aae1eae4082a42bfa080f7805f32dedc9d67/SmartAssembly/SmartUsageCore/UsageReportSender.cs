// Decompiled with JetBrains decompiler
// Type: SmartAssembly.SmartUsageCore.UsageReportSender
// Assembly: o4tdggb3, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FA0844EB-EF82-404C-B76C-C092ABDB9392
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.bzqq-b74e3dc76fae79b75c26f27ecb85aae1eae4082a42bfa080f7805f32dedc9d67.exe

using Microsoft.VisualBasic.CompilerServices;
using My;
using SmartAssembly.Attributes;
using SmartAssembly.SmartExceptionsCore;
using SmartAssembly.Zip;
using System;
using System.Collections.Generic;
using System.Drawing;
using System.IO;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Security.Principal;
using System.Text;
using System.Threading;
using System.Windows.Forms;
using System.Xml;
using Ⴈ;

namespace SmartAssembly.SmartUsageCore
{
  public class UsageReportSender : ReportSender1
  {
    private SmartAssembly.SmartExceptionsCore.Win32.ႣႣ Ⴄ;

    public UsageReportSender(UsageCounts usageCounts)
    {
      UsageCounts usageCounts1;
      try
      {
        try
        {
          usageCounts1 = usageCounts;
          this.Ⴄ.Ⴍ = usageCounts1;
        }
        catch (Exception ex)
        {
          UsageCounts o2 = usageCounts;
          StackFrameHelper.CreateException2(ex, (object) this, (object) o2);
          throw;
        }
      }
      catch (Exception ex)
      {
        UsageCounts o1 = usageCounts1;
        UsageCounts o3 = usageCounts;
        StackFrameHelper.CreateException3(ex, (object) o1, (object) this, (object) o3);
        throw;
      }
    }

    private void Ⴓ()
    {
      int num1;
      UsageCounts ⴍ;
      UsageCounts usageCounts;
      ulong[] staticFeatureCounts;
      Dictionary<string, ulong> dynamicFeatureCounts;
      MemoryStream w;
      XmlWriter Ⴄ;
      Ⴈ.ႳႷ ⴓⴗ1;
      int num2;
      DateTime dateTime;
      Guid guid1;
      WindowsIdentity windowsIdentity;
      SecurityIdentifier securityIdentifier;
      MD5CryptoServiceProvider cryptoServiceProvider;
      int num3;
      Guid guid2;
      string str1;
      int num4;
      int num5;
      Ⴈ.ႳႷ ⴓⴗ2;
      int num6;
      int num7;
      int num8;
      Ⴈ.ႳႷ ⴓⴗ3;
      int num9;
      int index;
      int num10;
      int num11;
      Ⴈ.ႳႷ ⴓⴗ4;
      int num12;
      Dictionary<string, ulong>.Enumerator enumerator;
      int num13;
      KeyValuePair<string, ulong> current;
      ulong num14;
      int num15;
      int num16;
      int num17;
      int num18;
      int num19;
      int num20;
      byte[] numArray;
      object[] objArray;
      try
      {
        try
        {
          num1 = 5;
          while (true)
          {
            switch (num1)
            {
              case 0:
                num1 = !ⴍ.IsEmpty ? 1 : 3;
                continue;
              case 1:
                staticFeatureCounts = ⴍ.StaticFeatureCounts;
                dynamicFeatureCounts = ⴍ.DynamicFeatureCounts;
                w = new MemoryStream();
                Ⴄ = (XmlWriter) new XmlTextWriter((Stream) w, (Encoding) new UTF8Encoding(false));
                goto case 9;
              case 2:
              case 4:
                num1 = ⴍ == null ? 3 : 0;
                continue;
              case 3:
                goto label_90;
              case 6:
              case 10:
                num1 = this.Ⴄ.Ⴅ != null ? 3 : 4;
                continue;
              case 7:
                goto label_8;
              case 9:
                num1 = 7;
                continue;
              default:
                ⴍ = this.Ⴄ.Ⴍ;
                usageCounts = (UsageCounts) null;
                this.Ⴄ.Ⴍ = usageCounts;
                num1 = 6;
                continue;
            }
          }
label_8:
          SimpleZip.ႭႰ.Ⴐ(Ⴄ, 496, 428);
          ⴓⴗ1 = new Ⴈ.ႳႷ(Ⴄ, Ⴈ.ႷႭ.ႥႭ(490613220, 2));
          try
          {
            num2 = 7;
            while (true)
            {
              switch (num2)
              {
                case 1:
                  goto label_16;
                case 2:
                case 6:
                  windowsIdentity = Ⴈ.Ⴄ.ႳႣ(686, 641);
                  goto case 3;
                case 3:
                  securityIdentifier = PoweredByAttribute1.Ⴀ(windowsIdentity, 351, 381);
                  num2 = 1;
                  continue;
                case 5:
                  XmlWriter xmlWriter1 = Ⴄ;
                  string str2 = Ⴈ.ႳႷ.Ⴗ(2059790669, 4);
                  guid1 = SmartAssembly.SmartExceptionsCore.DoNotPruneAttribute.Ⴈ(727, 661);
                  string str3 = StackFrameHelper.Ⴐ(ref guid1, Ⴈ.ႷႭ.ႥႳ(1491049272, 2), 193, 210);
                  Ⴈ.ႳႠ.Ⴄ(xmlWriter1, str2, str3, 880, 832);
                  num2 = 2;
                  continue;
                case 8:
                  XmlWriter xmlWriter2 = Ⴄ;
                  string str4 = Ⴈ.Ⴀ.Ⴐ(1468304174, 8);
                  dateTime = UsageReportSender.Ⴈ(894, 876);
                  string str5 = MyComputer.Ⴓ(ref dateTime, Ⴈ.ႳႷ.Ⴗ(2059790522, 6), 913, 944);
                  Ⴈ.ႳႠ.Ⴄ(xmlWriter2, str4, str5, 228, 212);
                  num2 = 5;
                  continue;
                default:
                  Ⴈ.ႳႠ.Ⴄ(Ⴄ, Ⴈ.ႷႭ.ႥႭ(490613389, 4), ReportSender1.Ⴄ(Ⴈ.ႷႭ.ႥႭ(490613362, 2), 327, 315), 305, 257);
                  num2 = 8;
                  continue;
              }
            }
label_16:
            cryptoServiceProvider = new MD5CryptoServiceProvider();
            try
            {
              num3 = 1;
              while (true)
              {
                switch (num3)
                {
                  case 3:
                  case 4:
                    goto label_20;
                  default:
                    guid2 = new Guid(ReportUsageAttribute.Ⴍ((HashAlgorithm) cryptoServiceProvider, ႷႨ.Ⴄ(ႷႠ.Ⴅ(357, 379), UsageReportSender.ႥႷ((object) securityIdentifier, 335, 305), 860, 810), 153, 206));
                    num3 = 4;
                    continue;
                }
              }
label_20:
              str1 = guid2.ToString();
            }
            finally
            {
              num4 = 6;
              while (true)
              {
                switch (num4)
                {
                  case 0:
                  case 3:
                    goto label_25;
                  case 2:
                  case 4:
                    goto label_24;
                  default:
                    num4 = cryptoServiceProvider == null ? 3 : 2;
                    continue;
                }
              }
label_24:
              cryptoServiceProvider.Dispose();
label_25:;
            }
            num5 = 4;
            switch (num5)
            {
              default:
                Ⴈ.ႳႠ.Ⴄ(Ⴄ, Ⴈ.ႳႷ.Ⴗ(2059790662, 6), str1, 947, 899);
                ⴓⴗ2 = new Ⴈ.ႳႷ(Ⴄ, Ⴈ.Ⴀ.Ⴐ(1468304240, 4));
                try
                {
                  num6 = 2;
                  switch (num6)
                  {
                    case 0:
                      break;
                    default:
                      Ⴈ.ႳႠ.Ⴄ(Ⴄ, Ⴈ.ႳႷ.Ⴗ(2059790800, 0), Ⴈ.ႳႷ.Ⴗ(2059790959, 6), 872, 856);
                      break;
                  }
                }
                finally
                {
                  num7 = 6;
                  while (true)
                  {
                    switch (num7)
                    {
                      case 0:
                        goto label_35;
                      case 3:
                      case 5:
                        goto label_34;
                      default:
                        num7 = ⴓⴗ2 == null ? 0 : 3;
                        continue;
                    }
                  }
label_34:
                  ⴓⴗ2.Dispose();
label_35:;
                }
                num8 = 4;
                switch (num8)
                {
                  default:
                    ⴓⴗ3 = new Ⴈ.ႳႷ(Ⴄ, Ⴈ.ႷႭ.ႥႭ(490613235, 7));
                    try
                    {
                      num9 = 11;
                      while (true)
                      {
                        switch (num9)
                        {
                          case 0:
                          case 9:
                            num9 = index < staticFeatureCounts.Length ? 2 : 10;
                            continue;
                          case 1:
                            StackFrameHelper.Ⴅ(Ⴄ, 989, 927);
                            goto case 6;
                          case 2:
                            num9 = staticFeatureCounts[index] <= 0UL ? 6 : 7;
                            continue;
                          case 5:
                          case 8:
                            Ⴈ.ႳႠ.Ⴄ(Ⴄ, Ⴈ.ႳႷ.Ⴗ(2059790801, 1), staticFeatureCounts[index].ToString(), 478, 494);
                            num9 = 1;
                            continue;
                          case 6:
                            ++index;
                            num9 = 0;
                            continue;
                          case 7:
                            ႷႨ.Ⴈ(Ⴄ, Ⴈ.ႷႭ.ႥႳ(1491048532, 3), 53, 60);
                            Ⴈ.ႳႠ.Ⴄ(Ⴄ, Ⴈ.ႷႭ.ႥႳ(1491048552, 5), index.ToString(), 36, 20);
                            num9 = 5;
                            continue;
                          case 10:
                            goto label_53;
                          default:
                            index = 0;
                            num9 = 0;
                            continue;
                        }
                      }
                    }
                    finally
                    {
                      num10 = 2;
                      while (true)
                      {
                        switch (num10)
                        {
                          case 1:
                          case 4:
                          case 5:
                            goto label_51;
                          case 6:
                            goto label_52;
                          default:
                            num10 = ⴓⴗ3 == null ? 6 : 4;
                            continue;
                        }
                      }
label_51:
                      ⴓⴗ3.Dispose();
label_52:;
                    }
label_53:
                    num11 = 1;
                    switch (num11)
                    {
                      default:
                        ⴓⴗ4 = new Ⴈ.ႳႷ(Ⴄ, Ⴈ.ႷႭ.ႥႳ(1491048554, 2));
                        try
                        {
                          num12 = 0;
                          switch (num12)
                          {
                            default:
                              enumerator = dynamicFeatureCounts.GetEnumerator();
                              try
                              {
                                num13 = 5;
                                while (true)
                                {
                                  switch (num13)
                                  {
                                    case 1:
                                    case 4:
                                      goto label_69;
                                    case 2:
                                    case 3:
                                      XmlWriter xmlWriter3 = Ⴄ;
                                      string str6 = Ⴈ.ႳႷ.Ⴗ(2059790800, 0);
                                      num14 = current.Value;
                                      string str7 = num14.ToString();
                                      Ⴈ.ႳႠ.Ⴄ(xmlWriter3, str6, str7, 818, 770);
                                      num13 = 6;
                                      continue;
                                    case 6:
                                      StackFrameHelper.Ⴅ(Ⴄ, 811, 873);
                                      goto case 8;
                                    case 7:
                                      current = enumerator.Current;
                                      num13 = current.Value <= 0UL ? 8 : 10;
                                      continue;
                                    case 8:
                                      num13 = enumerator.MoveNext() ? 7 : 1;
                                      continue;
                                    case 10:
                                      ႷႨ.Ⴈ(Ⴄ, Ⴈ.ႷႭ.ႥႳ(1491048528, 7), 141, 132);
                                      Ⴈ.ႳႠ.Ⴄ(Ⴄ, MyComputer.Ⴗ(834543347, 1), current.Key, 534, 550);
                                      num13 = 3;
                                      continue;
                                    default:
                                      num13 = 8;
                                      continue;
                                  }
                                }
                              }
                              finally
                              {
                                num15 = 0;
                                switch (num15)
                                {
                                  case 2:
                                  case 3:
                                  case 4:
                                  default:
                                    enumerator.Dispose();
                                    goto case 2;
                                }
                              }
label_69:
                              num16 = 3;
                              switch (num16)
                              {
                              }
                              break;
                          }
                        }
                        finally
                        {
                          num17 = 1;
                          while (true)
                          {
                            switch (num17)
                            {
                              case 0:
                              case 4:
                                goto label_74;
                              case 3:
                              case 6:
                                goto label_75;
                              default:
                                num17 = ⴓⴗ4 == null ? 6 : 0;
                                continue;
                            }
                          }
label_74:
                          ⴓⴗ4.Dispose();
label_75:;
                        }
                        num18 = 4;
                        switch (num18)
                        {
                        }
                        break;
                    }
                }
            }
          }
          finally
          {
            num19 = 4;
            while (true)
            {
              switch (num19)
              {
                case 0:
                case 2:
                case 5:
                  goto label_82;
                case 3:
                case 6:
                  goto label_81;
                default:
                  num19 = ⴓⴗ1 == null ? 0 : 6;
                  continue;
              }
            }
label_81:
            ⴓⴗ1.Dispose();
label_82:;
          }
          num20 = 3;
          while (true)
          {
            switch (num20)
            {
              case 0:
              case 5:
                goto label_88;
              case 2:
                goto label_87;
              case 4:
                StackFrameHelper.Ⴅ(Ⴄ, 1008, 947);
                num20 = 2;
                continue;
              default:
                SimpleZip.ႭႰ.Ⴐ(Ⴄ, 639, 546);
                goto case 4;
            }
          }
label_87:
          MyApplication.Ⴃ((Stream) w, 154, 169);
label_88:
          numArray = ႳႭ.Ⴃ(w, 881, 871);
          this.Ⴄ.Ⴅ = numArray;
        }
        catch (Exception ex)
        {
          objArray = new object[21]
          {
            (object) ⴍ,
            (object) staticFeatureCounts,
            (object) dynamicFeatureCounts,
            (object) w,
            (object) Ⴄ,
            (object) windowsIdentity,
            (object) securityIdentifier,
            (object) str1,
            (object) cryptoServiceProvider,
            (object) index,
            (object) current,
            (object) ⴓⴗ1,
            (object) dateTime,
            (object) guid1,
            (object) guid2,
            (object) ⴓⴗ2,
            (object) ⴓⴗ3,
            (object) ⴓⴗ4,
            (object) enumerator,
            (object) num14,
            (object) this
          };
          object[] objects = objArray;
          StackFrameHelper.CreateExceptionN(ex, objects);
          throw;
        }
label_90:
        switch (3)
        {
        }
      }
      catch (Exception ex)
      {
        int num21;
        object[] objects = new object[44]
        {
          (object) ⴍ,
          (object) staticFeatureCounts,
          (object) dynamicFeatureCounts,
          (object) w,
          (object) Ⴄ,
          (object) windowsIdentity,
          (object) securityIdentifier,
          (object) str1,
          (object) cryptoServiceProvider,
          (object) index,
          (object) current,
          (object) ⴓⴗ1,
          (object) dateTime,
          (object) guid1,
          (object) guid2,
          (object) ⴓⴗ2,
          (object) ⴓⴗ3,
          (object) ⴓⴗ4,
          (object) enumerator,
          (object) num14,
          (object) objArray,
          (object) usageCounts,
          (object) numArray,
          (object) num1,
          (object) num2,
          (object) num3,
          (object) num4,
          (object) num5,
          (object) num6,
          (object) num7,
          (object) num8,
          (object) num9,
          (object) num10,
          (object) num11,
          (object) num12,
          (object) num13,
          (object) num15,
          (object) num16,
          (object) num17,
          (object) num18,
          (object) num19,
          (object) num20,
          (object) num21,
          (object) this
        };
        StackFrameHelper.CreateExceptionN(ex, objects);
        throw;
      }
    }

    public void SendReport()
    {
      int num;
      UsageCounts usageCountsAndReset;
      try
      {
        try
        {
          num = 4;
          while (true)
          {
            switch (num)
            {
              case 0:
              case 3:
                goto label_4;
              case 1:
                usageCountsAndReset = UsageCountStore.GetAllUsageCountsAndReset();
                this.Ⴄ.Ⴍ = usageCountsAndReset;
                num = 3;
                continue;
              case 2:
                goto label_5;
              default:
                num = this.Ⴄ.Ⴍ != null ? 3 : 1;
                continue;
            }
          }
label_4:
          this.Ⴓ();
label_5:
          this.Ⴗ(this.Ⴄ.Ⴅ, ReportSender1.ႣႠ.Ⴄ);
        }
        catch (Exception ex)
        {
          StackFrameHelper.CreateException1(ex, (object) this);
          throw;
        }
      }
      catch (Exception ex)
      {
        UsageCounts o1 = usageCountsAndReset;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num;
        StackFrameHelper.CreateException3(ex, (object) o1, (object) o2, (object) this);
        throw;
      }
    }

    static UsageReportSender()
    {
      try
      {
        DoNotPruneAttribute.ႰႣ();
      }
      catch (Exception ex)
      {
        StackFrameHelper.CreateException0(ex);
        throw;
      }
    }

    internal static void Ⴅ([In] int obj0, [In] int obj1)
    {
      int num1;
      try
      {
        num1 = 4;
        while (true)
        {
          switch (num1)
          {
            case 0:
              num1 = 4;
              continue;
            case 1:
            case 3:
            case 5:
              goto label_7;
            case 2:
              goto label_8;
            default:
              int num2;
              switch (obj1 ^ obj0)
              {
                case 80:
                  num2 = 3;
                  break;
                default:
                  num2 = 0;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_8:
        return;
label_7:
        ProjectData.ClearProjectError();
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj1;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static DateTime Ⴈ([In] int obj0, [In] int obj1)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj1 ^ obj0)
        {
          case 18:
            num2 = 3;
            break;
          default:
            num2 = 0;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 5:
              num1 = 1;
              continue;
            case 1:
            case 7:
              goto label_3;
            case 3:
              goto label_8;
            case 6:
              num1 = 1;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (UsageReportSender.Ⴈ);
              num1 = 1;
              continue;
          }
        }
label_8:
        return DateTime.Now;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        StackFrameHelper.CreateException3(ex, (object) o1, (object) o2, (object) o3);
        throw;
      }
    }

    internal static void Ⴀ([In] Array obj0, [In] RuntimeFieldHandle obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
        num1 = 5;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 4:
              goto label_7;
            case 2:
            case 3:
              num1 = 5;
              continue;
            default:
              int num2;
              switch (obj3 ^ obj2)
              {
                case 33:
                  num2 = 0;
                  break;
                default:
                  num2 = 3;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_7:
        RuntimeHelpers.InitializeArray(obj0, obj1);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        Array o3 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<RuntimeFieldHandle> o4 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj3;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }

    internal static void Ⴐ([In] Control obj0, [In] int obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
        num1 = 3;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 1:
            case 2:
              goto label_7;
            case 5:
              num1 = 3;
              continue;
            default:
              int num2;
              switch (obj3 ^ obj2)
              {
                case 116:
                  num2 = 1;
                  break;
                default:
                  num2 = 5;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_7:
        obj0.Top = obj1;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        Control o3 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj3;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }

    internal static string Ⴃ([In] Exception obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 60:
            num2 = 3;
            break;
          default:
            num2 = 5;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 1:
              goto label_3;
            case 2:
            case 4:
            case 6:
              num1 = 1;
              continue;
            case 3:
              goto label_8;
            case 5:
              num1 = 1;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (UsageReportSender.Ⴃ);
              num1 = 1;
              continue;
          }
        }
label_8:
        return obj0.Message;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        Exception o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static void Ⴄ([In] Control obj0, [In] bool obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
        num1 = 5;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 2:
              goto label_7;
            case 1:
            case 3:
              num1 = 5;
              continue;
            case 4:
              goto label_8;
            default:
              int num2;
              switch (obj3 ^ obj2)
              {
                case 52:
                  num2 = 2;
                  break;
                default:
                  num2 = 1;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_8:
        return;
label_7:
        obj0.Enabled = obj1;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        Control o3 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<bool> o4 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj3;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }

    internal static void Ⴜ([In] Thread obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
        num1 = 5;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 2:
            case 3:
            case 4:
              goto label_7;
            case 1:
              num1 = 5;
              continue;
            default:
              int num2;
              switch (obj2 ^ obj1)
              {
                case 14:
                  num2 = 2;
                  break;
                default:
                  num2 = 1;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_7:
        obj0.Start();
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        Thread o3 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj2;
        StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5);
        throw;
      }
    }

    internal static string ႥႷ([In] object obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 126:
            num2 = 2;
            break;
          default:
            num2 = 3;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 1:
            case 5:
              num1 = 7;
              continue;
            case 2:
              goto label_8;
            case 3:
              num1 = 7;
              continue;
            case 7:
              goto label_3;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (UsageReportSender.ႥႷ);
              num1 = 7;
              continue;
          }
        }
label_8:
        return obj0.ToString();
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        object o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static void ႥႥ([In] Control obj0, [In] EventHandler obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
        num1 = 5;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 1:
            case 4:
              goto label_7;
            case 2:
              goto label_8;
            case 3:
              num1 = 5;
              continue;
            default:
              int num2;
              switch (obj3 ^ obj2)
              {
                case 93:
                  num2 = 1;
                  break;
                default:
                  num2 = 3;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_8:
        return;
label_7:
        obj0.Click += obj1;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        Control o3 = obj0;
        EventHandler o4 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj3;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }

    internal static Size ႥႨ([In] SizeF obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 74:
            num2 = 3;
            break;
          default:
            num2 = 2;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 1:
              goto label_3;
            case 2:
              num1 = 1;
              continue;
            case 3:
            case 5:
              goto label_8;
            case 7:
              num1 = 1;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (UsageReportSender.ႥႨ);
              num1 = 1;
              continue;
          }
        }
label_8:
        return Size.Ceiling(obj0);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<SizeF> o2 = (ValueType) obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }
  }
}
