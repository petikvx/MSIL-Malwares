// Decompiled with JetBrains decompiler
// Type: ProjNet.Templates.DefinitionTokenTemplate
// Assembly: TYPELIBA, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 97BB50BA-9882-4DFE-999C-7A4E4B448F1C
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-080eff3ceefca287dc59d176676559ae1aa3f1faec807805114bae214a11f586.exe

using System;
using System.ComponentModel;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Windows.Forms;
using TYPELIBA.Identifiers;
using TYPELIBA.Wrappers;

namespace ProjNet.Templates
{
  public class DefinitionTokenTemplate : Form
  {
    private IContainer m_RegConsumer;
    private Label connectionConsumer;
    private Label _ParserConsumer;
    private Button statusConsumer;
    private TextBox m_BridgeConsumer;
    private TextBox itemConsumer;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public DefinitionTokenTemplate()
    {
      int num = 4;
      while (true)
      {
        switch (num)
        {
          case 0:
          case 1:
            this.m_RegConsumer = (IContainer) null;
            // ISSUE: explicit constructor call
            base.\u002Ector();
            goto case 2;
          case 2:
          case 3:
            this.ResetRepository();
            if (DefinitionTokenTemplate.LoginCreator())
            {
              num = 5;
              continue;
            }
            goto case 0;
          case 4:
            ManagerParamsID.NewExpression();
            num = 0;
            continue;
          case 5:
            goto label_7;
          default:
            if (true)
            {
              num = 3;
              continue;
            }
            goto case 4;
        }
      }
label_7:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void QueryRepository(object spec, EventArgs token)
    {
      try
      {
        string text1 = this.m_BridgeConsumer.Text;
        int num1 = 3;
        if (true)
          goto label_5;
label_2:
        this.itemConsumer.Text = "";
        num1 = 5;
label_5:
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 1:
              goto label_4;
            case 2:
            case 4:
              goto label_2;
            case 3:
              string text2 = this.itemConsumer.Text;
              MethodProcess.FindConsumer(text1, int.Parse(text2));
              num1 = 0;
              continue;
            case 5:
              goto label_8;
            default:
              num1 = 4;
              continue;
          }
        }
label_4:
        int num2 = (int) MessageBox.Show("Insertion successful.");
        this.m_BridgeConsumer.Text = "";
        goto label_2;
label_8:;
      }
      catch (Exception ex)
      {
        int num = (int) MessageBox.Show("Insertion Failed.");
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    protected override void Dispose(bool itemclose)
    {
      int num1 = 2;
      if (DefinitionTokenTemplate.LoginCreator())
        goto label_6;
label_1:
      int num2 = this.m_RegConsumer != null ? 1 : 0;
label_3:
      if (num2 == 0)
        goto label_9;
      else
        goto label_8;
label_5:
      int num3;
      num1 = num3;
label_6:
      switch (num1)
      {
        case 0:
        case 2:
          goto label_10;
        case 1:
        case 3:
          goto label_1;
        case 4:
          break;
        case 5:
          return;
        default:
          num3 = 4;
          goto label_5;
      }
label_8:
      this.m_RegConsumer.Dispose();
label_9:
      base.Dispose(itemclose);
      if (true)
      {
        num1 = 5;
        goto label_6;
      }
label_10:
      if (!itemclose)
      {
        num2 = 0;
        goto label_3;
      }
      else
      {
        num3 = 3;
        goto label_5;
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void ResetRepository()
    {
      int num1 = 5;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
              goto label_12;
            case 1:
            case 2:
              goto label_1;
            case 3:
              this._ParserConsumer = new Label();
              this.statusConsumer = new Button();
              this.m_BridgeConsumer = new TextBox();
              this.itemConsumer = new TextBox();
              num2 = 1;
              continue;
            case 4:
            case 10:
              goto label_11;
            case 5:
              this.connectionConsumer = new Label();
              if (DefinitionTokenTemplate.LoginCreator())
              {
                num2 = 3;
                continue;
              }
              goto label_7;
            case 6:
              goto label_15;
            case 7:
              goto label_7;
            case 8:
              this.Text = "Insert AuthorISBN";
              this.ResumeLayout(false);
              this.PerformLayout();
              if (true)
              {
                num2 = 15;
                continue;
              }
              goto case 3;
            case 9:
              goto label_2;
            case 11:
              goto label_9;
            case 12:
              this.Controls.Add((Control) this.itemConsumer);
              this.Controls.Add((Control) this.m_BridgeConsumer);
              this.Controls.Add((Control) this.statusConsumer);
              this.Controls.Add((Control) this._ParserConsumer);
              num2 = 14;
              continue;
            case 13:
              this.connectionConsumer.AutoSize = true;
              this.connectionConsumer.Location = new Point(40, 32);
              this.connectionConsumer.Name = "label1";
              this.connectionConsumer.Size = new Size(35, 13);
              this.connectionConsumer.TabIndex = 0;
              if (true)
              {
                num2 = 10;
                continue;
              }
              goto label_11;
            case 14:
              this.Controls.Add((Control) this.connectionConsumer);
              this.Name = "InsertAuthorISBN";
              if (true)
              {
                num2 = 8;
                continue;
              }
              goto label_9;
            case 15:
              goto label_17;
            default:
              goto label_5;
          }
        }
label_1:
        this.SuspendLayout();
        num1 = 13;
        continue;
label_2:
        this.statusConsumer.Size = new Size(75, 23);
        this.statusConsumer.TabIndex = 2;
        this.statusConsumer.Text = "Insert";
        this.statusConsumer.UseVisualStyleBackColor = true;
        this.statusConsumer.Click += new EventHandler(this.QueryRepository);
        goto label_7;
label_5:
        num1 = 7;
        continue;
label_7:
        this.m_BridgeConsumer.Location = new Point(81, 32);
        this.m_BridgeConsumer.Name = "ISBNTextBox";
        this.m_BridgeConsumer.Size = new Size(100, 20);
        this.m_BridgeConsumer.TabIndex = 3;
        this.itemConsumer.Location = new Point(81, 63);
        num1 = 0;
        continue;
label_9:
        this._ParserConsumer.AutoSize = true;
        this._ParserConsumer.Location = new Point(20, 63);
        this._ParserConsumer.Name = "label2";
        this._ParserConsumer.Size = new Size(55, 13);
        this._ParserConsumer.TabIndex = 1;
        this._ParserConsumer.Text = "Author ID:";
        this.statusConsumer.Location = new Point(81, 89);
        this.statusConsumer.Name = "InsertButton";
        num1 = 9;
        continue;
label_11:
        this.connectionConsumer.Text = "ISBN:";
        num1 = 11;
        continue;
label_12:
        this.itemConsumer.Name = "AuthorIDTextBox";
        this.itemConsumer.Size = new Size(100, 20);
        this.itemConsumer.TabIndex = 4;
        this.AutoScaleDimensions = new SizeF(6f, 13f);
        this.AutoScaleMode = AutoScaleMode.Font;
        num1 = 6;
        continue;
label_15:
        this.ClientSize = new Size(214, 132);
        num1 = 12;
      }
label_17:;
    }

    internal static bool LoginCreator() => true;

    internal static bool SetCreator() => false;
  }
}
