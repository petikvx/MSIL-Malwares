// Decompiled with JetBrains decompiler
// Type: SmartAssembly.Attributes.PoweredByAttribute1
// Assembly: o4tdggb3, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FA0844EB-EF82-404C-B76C-C092ABDB9392
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.bzqq-b74e3dc76fae79b75c26f27ecb85aae1eae4082a42bfa080f7805f32dedc9d67.exe

using SmartAssembly.SmartExceptionsCore;
using SmartAssembly.SmartExceptionsCore.UI;
using System;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security.Principal;
using System.Threading;
using System.Windows.Forms;
using System.Xml;

namespace SmartAssembly.Attributes
{
  public sealed class PoweredByAttribute1 : Attribute
  {
    public PoweredByAttribute1(string s)
    {
      try
      {
      }
      catch (Exception ex)
      {
        string o2 = s;
        StackFrameHelper.CreateException2(ex, (object) this, (object) o2);
        throw;
      }
    }

    static PoweredByAttribute1()
    {
      try
      {
        SmartAssembly.SmartUsageCore.DoNotPruneAttribute.ႰႣ();
      }
      catch (Exception ex)
      {
        StackFrameHelper.CreateException0(ex);
        throw;
      }
    }

    internal static int Ⴃ([In] ref DateTime obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 119:
            num2 = 6;
            break;
          case 120:
            num2 = 1;
            break;
          default:
            num2 = 5;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
              num1 = 4;
              continue;
            case 1:
            case 8:
              goto label_10;
            case 3:
            case 5:
              num1 = 4;
              continue;
            case 4:
            case 7:
              goto label_3;
            case 6:
              goto label_9;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (PoweredByAttribute1.Ⴃ);
              num1 = 4;
              continue;
          }
        }
label_9:
        return obj0.Day;
label_10:
        return obj0.Hour;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<DateTime> o2 = (ValueType) obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static bool Ⴈ([In] Control obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 9:
            num2 = 0;
            break;
          case 10:
            num2 = 4;
            break;
          default:
            num2 = 7;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
              goto label_9;
            case 1:
            case 6:
              num1 = 2;
              continue;
            case 2:
              goto label_3;
            case 4:
            case 8:
              goto label_10;
            case 7:
              num1 = 2;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (PoweredByAttribute1.Ⴈ);
              num1 = 2;
              continue;
          }
        }
label_9:
        return obj0.Visible;
label_10:
        return obj0.Focus();
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        Control o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static SecurityIdentifier Ⴀ(
      [In] WindowsIdentity obj0,
      [In] int obj1,
      [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 34:
            num2 = 0;
            break;
          default:
            num2 = 1;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 4:
              goto label_8;
            case 1:
              num1 = 7;
              continue;
            case 3:
            case 5:
            case 6:
              num1 = 7;
              continue;
            case 7:
              goto label_3;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (PoweredByAttribute1.Ⴀ);
              num1 = 7;
              continue;
          }
        }
label_8:
        return obj0.User;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        WindowsIdentity o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static Control.ControlCollection Ⴅ([In] Control obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 58:
            num2 = 5;
            break;
          default:
            num2 = 0;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 4:
              num1 = 2;
              continue;
            case 1:
            case 3:
            case 5:
              goto label_8;
            case 2:
              goto label_3;
            case 7:
              num1 = 2;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (PoweredByAttribute1.Ⴅ);
              num1 = 2;
              continue;
          }
        }
label_8:
        return obj0.Controls;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        Control o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static Assembly Ⴓ([In] System.Type obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 125:
            num2 = 2;
            break;
          default:
            num2 = 0;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 4:
            case 6:
              num1 = 3;
              continue;
            case 1:
            case 7:
              num1 = 3;
              continue;
            case 2:
              goto label_8;
            case 3:
              goto label_3;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (PoweredByAttribute1.Ⴓ);
              num1 = 3;
              continue;
          }
        }
label_8:
        return obj0.Assembly;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        System.Type o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    [StructLayout(LayoutKind.Auto)]
    internal struct Ⴗ
    {
      internal XmlWriter Ⴅ;
    }

    [StructLayout(LayoutKind.Auto)]
    internal struct Ⴐ
    {
      internal ReportExceptionEventArgs Ⴃ;
      internal Thread Ⴅ;
      internal CheckBox Ⴐ;
      internal Label Ⴈ;
      internal Button Ⴗ;
      internal Button Ⴄ;
      internal Label Ⴀ;
      internal AutoHeightLabel Ⴍ;
      internal Panel Ⴓ;
      internal Panel Ⴜ;
      internal Button ႥႣ;
      internal WaitSendingReportControl ႥႥ;
      internal FeedbackControl ႥႰ;
      internal FeedbackControl ႥႨ;
      internal FeedbackControl ႥႷ;
      internal FeedbackControl ႥႤ;
      internal Button ႥႠ;
      internal Button ႥႭ;
      internal Button ႥႳ;
      internal HeaderControl ႥႼ;
      internal HeaderControl ႰႣ;
      internal PoweredBy ႰႥ;
      internal Button ႰႰ;
      internal bool ႰႨ;
    }
  }
}
