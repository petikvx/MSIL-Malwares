// Decompiled with JetBrains decompiler
// Type: BlackJackConsole.Deck
// Assembly: RuntimeFieldHandleInter, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B77E6DA1-3105-41CC-BF61-BF72DE43E45D
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.05\Backdoor.Win32.Blakken.vqi-ee87094c1f1aa17c4fa85f40bcc253e02ed4b5cac439d8f5091ebfc3b4d242c1.exe

using System.Collections.Generic;

namespace BlackJackConsole
{
  internal class Deck
  {
    private List<Card> _listOfAvalibleCards;
    private List<Card> _usedCards;

    public Deck()
    {
      this._listOfAvalibleCards = new List<Card>();
      this._usedCards = new List<Card>();
      for (int index = 1; index < 14; ++index)
        this._listOfAvalibleCards.Add(new Card(index, 's'));
      for (int index = 1; index <= 14; ++index)
        this._listOfAvalibleCards.Add(new Card(index, 'c'));
      for (int index = 1; index <= 14; ++index)
        this._listOfAvalibleCards.Add(new Card(index, 'h'));
      for (int index = 1; index <= 14; ++index)
        this._listOfAvalibleCards.Add(new Card(index, 'd'));
    }

    public Card dealCard()
    {
      Card listOfAvalibleCard = this._listOfAvalibleCards[0];
      this._listOfAvalibleCards.RemoveAt(0);
      this._usedCards.Add(listOfAvalibleCard);
      return listOfAvalibleCard;
    }

    public void Shuffle() => this._listOfAvalibleCards.Shuffle<Card>();

    public void Reset()
    {
      this._listOfAvalibleCards = new List<Card>();
      this._usedCards = new List<Card>();
      for (int index = 1; index < 14; ++index)
        this._listOfAvalibleCards.Add(new Card(index, 's'));
      for (int index = 1; index <= 14; ++index)
        this._listOfAvalibleCards.Add(new Card(index, 'c'));
      for (int index = 1; index <= 14; ++index)
        this._listOfAvalibleCards.Add(new Card(index, 'h'));
      for (int index = 1; index <= 14; ++index)
        this._listOfAvalibleCards.Add(new Card(index, 'd'));
    }
  }
}
