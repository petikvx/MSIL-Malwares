// Decompiled with JetBrains decompiler
// Type: EngineSite
// Assembly: jsc, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: 64FE9439-6D79-4C3B-BBDD-9D73A741F992
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00004-msil\Virus.Win32.Sality.sil-4e552874df8b99a0969b07ded909051569fdb84478f01dd750d0323cc3573f48.exe

using Microsoft.Vsa;

internal class EngineSite : IVsaSite
{
  private CompilerOptions options;

  public EngineSite(CompilerOptions options) => this.options = options;

  public virtual bool OnCompilerError(IVsaError error)
  {
    int severity = error.Severity;
    if (severity > this.options.nWarningLevel)
      return true;
    bool fIsWarning = severity != 0 && !this.options.fTreatWarningsAsErrors;
    JScriptCompiler.PrintError(error.SourceMoniker, error.Line, error.StartColumn, fIsWarning, error.Number, error.Description);
    return true;
  }

  public virtual object GetItemInfo(string strItemName) => throw new VsaException((VsaError) -2146226168);

  public virtual object GetGlobalInstance(string name) => throw new VsaException((VsaError) -2146226168);

  public virtual object GetEventSourceInstance(string ItemName, string EventSourceName) => throw new VsaException((VsaError) -2146226168);

  public virtual void Notify(string notification, object value) => throw new VsaException((VsaError) -2146226168);

  public virtual void GetCompiledState(out byte[] pe, out byte[] debugInfo)
  {
    pe = (byte[]) null;
    debugInfo = (byte[]) null;
    throw new VsaException((VsaError) -2146226168);
  }
}
