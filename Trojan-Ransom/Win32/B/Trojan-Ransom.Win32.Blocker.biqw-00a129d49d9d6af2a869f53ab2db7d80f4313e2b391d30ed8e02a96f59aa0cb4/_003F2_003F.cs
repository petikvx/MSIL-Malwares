// Decompiled with JetBrains decompiler
// Type: ?2?
// Assembly: wLoader, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 601E9F23-A239-4CA4-BCF6-5BB65F85A0DA
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.biqw-00a129d49d9d6af2a869f53ab2db7d80f4313e2b391d30ed8e02a96f59aa0cb4.exe

using System;
using System.IO;

public class \u003F2\u003F
{
  public byte[] \u003F1\u003F;
  private Stream \u003F2\u003F;
  private uint \u003F3\u003F;
  private bool \u003F5\u003F;
  private uint \u003F4\u003F;
  public uint \u003F6\u003F;
  public uint \u003F7\u003F;
  public uint \u003F89\u003F;
  private uint \u003F90\u003F;
  private uint \u003F10\u003F;
  private uint \u003F13\u003F;
  public uint \u003F12\u003F;

  public virtual void \u0003\u2009\u2001\u0002()
  {
  }

  public virtual void \u0003\u2009\u2001\u0003()
  {
  }

  public void \u003F3\u003F()
  {
    this.\u0003\u2009\u2001\u0002();
    int num1 = (int) this.\u003F6\u003F;
    int num2 = (int) this.\u003F89\u003F;
    if (true)
      goto label_6;
label_1:
    uint num3 = (uint) (num1 - num2);
    uint num4;
    int num5;
    for (uint index = 0; index < num3; index = (uint) (num5 + 1))
    {
      this.\u003F1\u003F[(IntPtr) index] = this.\u003F1\u003F[(IntPtr) (num4 + index)];
      num5 = (int) index;
      if (false)
        goto label_4;
    }
    this.\u003F6\u003F -= num4;
    this.\u0003\u2009\u2001\u0003();
    if (true)
      return;
    goto label_5;
label_4:
    num4 = (uint) num5;
label_5:
    int num6 = (int) this.\u003F6\u003F;
    int num7 = (int) this.\u003F12\u003F;
    if (false)
    {
      num2 = num7;
      num1 = num6;
      goto label_1;
    }
    else
    {
      int num8 = num6 + num7;
      num2 = (int) num4;
      num1 = num8;
      goto label_1;
    }
label_6:
    num5 = num1 + num2 - (int) this.\u003F90\u003F;
    goto label_4;
  }

  public virtual void \u0003\u2009\u2001\u0008()
  {
    if (this.\u003F5\u003F)
      return;
label_1:
    int num1 = 0;
    if (num1 != 0)
      goto label_4;
    else
      goto label_8;
label_2:
    int num2;
    int num3;
    int count = num2 + num3 - (int) this.\u003F12\u003F;
    int num4;
    for (int index = count; index != 0; index = num4)
    {
label_9:
      int num5 = this.\u003F2\u003F.Read(this.\u003F1\u003F, (int) this.\u003F6\u003F + (int) this.\u003F12\u003F, count);
      num4 = num5;
      if (true)
      {
        if (num4 != 0)
          goto label_6;
        else
          goto label_14;
label_3:
        int num6;
        int num7;
        num1 = num6 + num7;
        goto label_4;
label_6:
        this.\u003F12\u003F += (uint) num5;
        num6 = (int) this.\u003F12\u003F;
        num7 = (int) this.\u003F89\u003F;
        if (true)
        {
          int num8 = (int) this.\u003F10\u003F;
          int num9 = num7 + num8;
          if ((uint) num6 >= (uint) num9)
          {
            do
            {
              if (true)
                this.\u003F3\u003F = this.\u003F12\u003F - this.\u003F10\u003F;
              else
                goto label_9;
            }
            while (false);
            goto label_1;
          }
          else
            goto label_1;
        }
        else
          goto label_3;
label_14:
        this.\u003F3\u003F = this.\u003F12\u003F;
        int num10 = (int) this.\u003F6\u003F;
        num7 = (int) this.\u003F3\u003F;
        num6 = num10;
        goto label_3;
      }
    }
    return;
label_4:
    num2 = num1;
    num3 = (int) this.\u003F4\u003F;
    if (true)
    {
      if ((uint) num2 > (uint) num3)
        goto label_16;
label_5:
      this.\u003F5\u003F = true;
      return;
label_16:
      this.\u003F3\u003F = this.\u003F4\u003F - this.\u003F6\u003F;
      goto label_5;
    }
    else
      goto label_2;
label_8:
    int num11 = num1 - (int) this.\u003F6\u003F;
    num3 = (int) this.\u003F7\u003F;
    num2 = num11;
    goto label_2;
  }

  private void \u003F4\u003F() => this.\u003F1\u003F = (byte[]) null;

  public void \u003F1\u003F(uint _param1, uint _param2, uint _param3)
  {
    if (true)
      goto label_6;
label_4:
    this.\u003F1\u003F = new byte[(IntPtr) this.\u003F7\u003F];
label_5:
    this.\u003F4\u003F = this.\u003F7\u003F - _param2;
    return;
label_6:
    this.\u003F90\u003F = _param1;
    this.\u003F10\u003F = _param2;
    this.\u003F13\u003F = _param3;
    int num1 = (int) _param1;
    if (true)
      goto label_7;
label_1:
    uint num2 = (uint) num1;
    if (this.\u003F1\u003F == null)
      goto label_3;
label_2:
    int num3 = (int) this.\u003F7\u003F;
    int num4 = (int) num2;
    goto label_9;
label_3:
    this.\u003F4\u003F();
    if (true)
    {
      this.\u003F7\u003F = num2;
      goto label_4;
    }
    else
      goto label_2;
label_7:
    int num5 = (int) _param2;
    if (true)
    {
      num1 = num1 + num5 + (int) _param3;
      goto label_1;
    }
    else
    {
      num4 = num5;
      num3 = num1;
    }
label_9:
    if (num3 == num4)
      goto label_5;
    else
      goto label_3;
  }

  public void \u003F27\u003F(Stream _param1)
  {
    this.\u003F2\u003F = _param1;
    this.\u003F6\u003F = 0U;
    do
    {
      if (true)
        goto label_3;
label_2:
      if (true)
        this.\u003F12\u003F = 0U;
      this.\u003F5\u003F = false;
      this.\u0003\u2009\u2001\u0008();
      continue;
label_3:
      this.\u003F89\u003F = 0U;
      goto label_2;
    }
    while (false);
  }

  public void \u003F27\u003F() => this.\u003F2\u003F = (Stream) null;

  public void \u003F28\u003F()
  {
    ++this.\u003F89\u003F;
    int num1 = (int) this.\u003F89\u003F;
    if (true)
    {
      int num2 = (int) this.\u003F3\u003F;
      if ((uint) num1 <= (uint) num2)
        return;
      num1 = (int) this.\u003F6\u003F + (int) this.\u003F89\u003F;
    }
    if ((uint) num1 > this.\u003F4\u003F)
      goto label_5;
label_1:
    this.\u0003\u2009\u2001\u0008();
    return;
label_5:
    this.\u003F3\u003F();
    goto label_1;
  }

  public byte \u003F27\u003F(int _param1) => this.\u003F1\u003F[(IntPtr) ((long) (this.\u003F6\u003F + this.\u003F89\u003F) + (long) _param1)];

  public uint \u003F27\u003F(int _param1, uint _param2, uint _param3)
  {
    if (this.\u003F5\u003F && (long) this.\u003F89\u003F + (long) _param1 + (long) _param3 > (long) this.\u003F12\u003F)
      goto label_10;
label_2:
    ++_param2;
label_3:
    int num1 = (int) this.\u003F6\u003F;
    int num2 = (int) this.\u003F89\u003F;
    int num3;
    int num4;
    if (true)
    {
      num3 = num1 + num2;
      num4 = _param1;
    }
    else
      goto label_7;
label_4:
    int num5 = num3 + num4;
label_5:
    uint num6 = (uint) num5;
    uint num7;
    if (true)
    {
      num7 = 0U;
      goto label_8;
    }
    else
      goto label_3;
label_7:
    num7 = (uint) (num1 + num2);
label_8:
    if (num7 >= _param3 || (int) this.\u003F1\u003F[(IntPtr) (num6 + num7)] != (int) this.\u003F1\u003F[(IntPtr) (num6 + num7 - _param2)])
      return num7;
    int num8 = (int) num7;
    num2 = 1;
    num1 = num8;
    goto label_7;
label_10:
    int num9 = (int) this.\u003F12\u003F;
    int num10 = (int) this.\u003F89\u003F;
    if (true)
      goto label_13;
label_1:
    if (false)
    {
      num4 = num10;
      num3 = num9;
      goto label_4;
    }
    else
    {
      int num11 = num9 - num10;
      if (false)
      {
        num5 = num11;
        goto label_5;
      }
      else
      {
        _param3 = (uint) num11;
        goto label_2;
      }
    }
label_13:
    long num12 = (long) (uint) num10;
    long num13;
    while (true)
    {
      long num14 = (long) _param1;
      num13 = num12 + num14;
      if (false)
        num12 = num13;
      else
        break;
    }
    num10 = (int) (uint) num13;
    goto label_1;
  }

  public uint \u003F27\u003F() => this.\u003F12\u003F - this.\u003F89\u003F;

  public void \u003F1\u003F(int _param1)
  {
    do
    {
      this.\u003F6\u003F += (uint) _param1;
      while (true)
      {
        this.\u003F3\u003F -= (uint) _param1;
        if (true)
        {
          this.\u003F89\u003F -= (uint) _param1;
          goto label_2;
        }
      }
      goto label_3;
label_2:
      this.\u003F12\u003F -= (uint) _param1;
label_3:
      if (true)
      {
        if (false)
          goto label_2;
      }
    }
    while (false);
  }
}
