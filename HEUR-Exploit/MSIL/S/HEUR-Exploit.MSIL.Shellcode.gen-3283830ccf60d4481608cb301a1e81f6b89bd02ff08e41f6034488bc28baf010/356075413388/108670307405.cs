// Decompiled with JetBrains decompiler
// Type: 356075413388.108670307405
// Assembly: 087135227926, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
// MVID: 0DB320EA-9C28-4716-BA63-69641BABDE67
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-3283830ccf60d4481608cb301a1e81f6b89bd02ff08e41f6034488bc28baf010.exe

using \u003048520867406;
using \u003053028810657;
using \u003208825527781;
using \u003226094756440;
using \u003277493558513;
using \u003384276752884;
using \u003603600525092;
using System;
using System.Globalization;

namespace \u003356075413388
{
  public class \u003108670307405 : \u003068562095717
  {
    public virtual void \u003942095302176(
      \u003632627526011 _param1,
      object _param2,
      \u003131478599170 _param3)
    {
      if (_param2 == null)
      {
        _param1.\u003876065641053();
      }
      else
      {
        if ((object) (_param2 as Version) == null)
          throw new \u003479281034910("Expected Version object value");
        _param1.\u003897033093575(_param2.ToString());
      }
    }

    public virtual object \u003552443576472(
      \u003250925846196 _param1,
      Type _param2,
      object _param3,
      \u003131478599170 _param4)
    {
      if (_param1.\u003271751439454 == \u003293768301571.Null)
        return (object) null;
      if (_param1.\u003271751439454 != \u003293768301571.String)
        throw \u003479281034910.\u003188723322269(_param1, "Unexpected token or value when parsing version. Token: {0}, Value: {1}".\u003937370926224((IFormatProvider) CultureInfo.InvariantCulture, (object) _param1.\u003271751439454, _param1.\u003255783382022));
      try
      {
        return (object) new Version((string) _param1.\u003255783382022);
      }
      catch (Exception ex)
      {
        throw \u003479281034910.\u003869667679172(_param1, "Error parsing version string: {0}".\u003212424921759((IFormatProvider) CultureInfo.InvariantCulture, _param1.\u003255783382022), ex);
      }
    }

    public virtual bool \u003215999255587(Type _param1) => _param1 == typeof (Version);
  }
}
