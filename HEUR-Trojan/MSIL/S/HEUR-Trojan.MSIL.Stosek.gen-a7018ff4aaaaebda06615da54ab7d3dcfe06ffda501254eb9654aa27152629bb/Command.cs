// Decompiled with JetBrains decompiler
// Type: ram_machine.Command
// Assembly: InternalCrossContextDelega, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: D2AB7CD5-4913-4369-B066-3ED6411FFDD0
// Assembly location: C:\Users\Administrateur\Downloads\toto\HEUR-Trojan.MSIL.Stosek.gen-a7018ff4aaaaebda06615da54ab7d3dcfe06ffda501254eb9654aa27152629bb.exe

using System.ComponentModel;
using System.Runtime.InteropServices;

namespace ram_machine
{
  internal class Command
  {
    public CommandType Type { get; set; }

    public int Position { get; set; }

    public int? Arg1 { get; set; }

    public int? Arg2 { get; set; }

    public int? Arg3 { get; set; }

    public override string ToString()
    {
label_1:
      int num1 = 830790158;
      string str1;
      while (true)
      {
        uint num2;
        int? nullable;
        string str2;
        bool flag;
        CommandType commandType;
        CommandType type;
        string str3;
        switch ((num2 = (uint) (num1 ^ 1545956611)) % 28U)
        {
          case 0:
            switch (commandType)
            {
              case CommandType.AssignValue:
                goto label_16;
              case CommandType.Add:
                goto label_26;
              case CommandType.Substract:
                goto label_36;
              case CommandType.Divide:
                goto label_33;
              case CommandType.CopyValue:
                goto label_23;
              case CommandType.CopyValue2:
                goto label_18;
              case CommandType.GotoIf:
                goto label_41;
              case CommandType.Halt:
                goto label_31;
              default:
                num1 = (int) num2 * -2028673049 ^ -1804940391;
                continue;
            }
          case 1:
label_33:
            str1 = Command.\u200B⁪‎‮‫‌‏‪‮‏⁮⁭‫⁭⁮‬‎⁭‭‫⁯‭‫‏‭‏​⁫‌‮⁭⁬‬‎‫‫‎⁪‏⁮‮(\u003CModule\u003E.\u200C‏‎‍⁯‌‏‎‍‍⁬‮​⁫‮​‭‭⁪‬⁯‍‌‭‬⁬⁪⁬⁫‭⁪‍‮⁯‍⁬⁪​‮⁮‮<string>(455769260U), str2);
            num1 = 176732966;
            continue;
          case 2:
            int num3 = !nullable.HasValue ? -1527115677 : (num3 = -667283786);
            num1 = num3 ^ (int) num2 * -942273900;
            continue;
          case 3:
            commandType = type;
            num1 = (int) num2 * -266452607 ^ 2058996992;
            continue;
          case 4:
label_36:
            str1 = Command.\u200B⁪‎‮‫‌‏‪‮‏⁮⁭‫⁭⁮‬‎⁭‭‫⁯‭‫‏‭‏​⁫‌‮⁭⁬‬‎‫‫‎⁪‏⁮‮(\u003CModule\u003E.\u200C⁮⁪‭‮⁬‏​‮⁪‭‍⁫‌‍‫⁬​⁫‬‬​⁪‍​​‏⁯⁫‏‬⁫⁭⁪‬‌⁯‪​⁭‮<string>(430912439U), str2);
            num1 = 859885118;
            continue;
          case 5:
            string str4 = \u003CModule\u003E.\u206E⁯‍‎‏⁭⁫⁭⁬‪‬‬‏⁮⁮‍⁫‍⁮⁫‫⁭‬‎‮‎⁮⁮‎⁮‪​‌‫​‫‫⁫⁫‬‮<string>(1024366865U);
            nullable = this.Arg1;
            string empty1;
            if (!nullable.HasValue)
            {
              empty1 = string.Empty;
            }
            else
            {
              nullable = this.Arg1;
              empty1 = nullable.Value.ToString();
            }
            nullable = this.Arg2;
            string empty2;
            if (!nullable.HasValue)
            {
              empty2 = string.Empty;
            }
            else
            {
              nullable = this.Arg2;
              empty2 = nullable.Value.ToString();
            }
            nullable = this.Arg3;
            string empty3;
            if (!nullable.HasValue)
            {
              empty3 = string.Empty;
            }
            else
            {
              nullable = this.Arg3;
              empty3 = nullable.Value.ToString();
            }
            str3 = Command.\u206E⁮‌⁯‫‌‪‭‍‬​​‌‪‮⁪‫‪⁫‎‎⁫‎‪‎‍⁬‬‭‪⁯‍‌⁫‭⁭⁮⁮⁫‎‮(str4, (object) empty1, (object) empty2, (object) empty3);
            break;
          case 6:
            type = this.Type;
            num1 = 1489392160;
            continue;
          case 7:
            goto label_15;
          case 8:
            nullable = this.Arg3;
            num1 = (int) num2 * -751612283 ^ -2117873941;
            continue;
          case 10:
            int num4 = flag ? -852486985 : (num4 = -740536483);
            num1 = num4 ^ (int) num2 * 1056060774;
            continue;
          case 11:
            num1 = (int) num2 * -1648035585 ^ -810214545;
            continue;
          case 12:
            num1 = (int) num2 * 1280786319 ^ 198487722;
            continue;
          case 13:
label_31:
            str1 = \u003CModule\u003E.\u206F‮‏⁫‏‌‏⁫‭⁯⁪‏⁯‌‬‬‌⁮‏‌⁯‪‭‭‬⁫⁭‪‍⁫‏‍‏‬⁬⁬‫‬‪‫‮<string>(3078286363U);
            num1 = 1071330228;
            continue;
          case 14:
            nullable = this.Arg2;
            num1 = (int) num2 * -1355367691 ^ -2010299689;
            continue;
          case 15:
label_26:
            str1 = Command.\u200B⁪‎‮‫‌‏‪‮‏⁮⁭‫⁭⁮‬‎⁭‭‫⁯‭‫‏‭‏​⁫‌‮⁭⁬‬‎‫‫‎⁪‏⁮‮(\u003CModule\u003E.\u200C⁮⁪‭‮⁬‏​‮⁪‭‍⁫‌‍‫⁬​⁫‬‬​⁪‍​​‏⁯⁫‏‬⁫⁭⁪‬‌⁯‪​⁭‮<string>(1671943746U), str2);
            num1 = 176732966;
            continue;
          case 16:
            if (!nullable.HasValue)
            {
              str3 = string.Empty;
              break;
            }
            num1 = (int) num2 * -494757575 ^ 376925598;
            continue;
          case 17:
            num1 = (int) num2 * -658118580 ^ -1550623702;
            continue;
          case 18:
label_23:
            str1 = Command.\u200B⁪‎‮‫‌‏‪‮‏⁮⁭‫⁭⁮‬‎⁭‭‫⁯‭‫‏‭‏​⁫‌‮⁭⁬‬‎‫‫‎⁪‏⁮‮(\u003CModule\u003E.\u200C‏‎‍⁯‌‏‎‍‍⁬‮​⁫‮​‭‭⁪‬⁯‍‌‭‬⁬⁪⁬⁫‭⁪‍‮⁯‍⁬⁪​‮⁮‮<string>(3076386708U), str2);
            num1 = 697506450;
            continue;
          case 19:
label_18:
            str1 = Command.\u200B⁪‎‮‫‌‏‪‮‏⁮⁭‫⁭⁮‬‎⁭‭‫⁯‭‫‏‭‏​⁫‌‮⁭⁬‬‎‫‫‎⁪‏⁮‮(\u003CModule\u003E.\u200C‏‎‍⁯‌‏‎‍‍⁬‮​⁫‮​‭‭⁪‬⁯‍‌‭‬⁬⁪⁬⁫‭⁪‍‮⁯‍⁬⁪​‮⁮‮<string>(2421232346U), str2);
            num1 = 523675319;
            continue;
          case 20:
            int num5 = nullable.HasValue ? -896714610 : (num5 = -351026655);
            num1 = num5 ^ (int) num2 * 2063081948;
            continue;
          case 21:
            nullable = this.Arg1;
            num1 = (int) num2 * -2142994902 ^ -987200727;
            continue;
          case 22:
label_16:
            str1 = Command.\u200B⁪‎‮‫‌‏‪‮‏⁮⁭‫⁭⁮‬‎⁭‭‫⁯‭‫‏‭‏​⁫‌‮⁭⁬‬‎‫‫‎⁪‏⁮‮(\u003CModule\u003E.\u206F‮‏⁫‏‌‏⁫‭⁯⁪‏⁯‌‬‬‌⁮‏‌⁯‪‭‭‬⁫⁭‪‍⁫‏‍‏‬⁬⁬‫‬‪‫‮<string>(3736804247U), str2);
            num1 = 176732966;
            continue;
          case 23:
            goto label_1;
          case 24:
            str2 = Command.\u200B⁪‎‮‫‌‏‪‮‏⁮⁭‫⁭⁮‬‎⁭‭‫⁯‭‫‏‭‏​⁫‌‮⁭⁬‬‎‫‫‎⁪‏⁮‮(\u003CModule\u003E.\u200C‏‎‍⁯‌‏‎‍‍⁬‮​⁫‮​‭‭⁪‬⁯‍‌‭‬⁬⁪⁬⁫‭⁪‍‮⁯‍⁬⁪​‮⁮‮<string>(1438500803U), str2);
            num1 = (int) num2 * 1108338227 ^ -2129134023;
            continue;
          case 25:
            num1 = (int) num2 * -1165612090 ^ -193119480;
            continue;
          case 26:
            num1 = (int) num2 * 1613525725 ^ -1839177222;
            continue;
          case 27:
label_41:
            str1 = Command.\u200B⁪‎‮‫‌‏‪‮‏⁮⁭‫⁭⁮‬‎⁭‭‫⁯‭‫‏‭‏​⁫‌‮⁭⁬‬‎‫‫‎⁪‏⁮‮(\u003CModule\u003E.\u200C‏‎‍⁯‌‏‎‍‍⁬‮​⁫‮​‭‭⁪‬⁯‍‌‭‬⁬⁪⁬⁫‭⁪‍‮⁯‍⁬⁪​‮⁮‮<string>(585741211U), str2);
            num1 = 176732966;
            continue;
          default:
            goto label_42;
        }
        str2 = str3;
        flag = !Command.\u200C‌⁪‌​⁫‪‍‫⁭⁮‮‎‮​⁭‍⁬‍⁫⁯⁮​⁬‫‬‌⁮⁭‍⁮⁪‭​‮‍‮⁯‮‌‮(str2);
        num1 = 1322897497;
      }
label_15:
      throw Command.\u206B⁬⁬‮⁮‫⁯‏‮⁭⁯⁭⁬‪⁪​‬‭⁪‏‬⁫‍​⁬⁬⁫‏⁮‫⁭⁫‎⁭‮‌‪​‪‍‮();
label_42:
      return str1;
    }

    public Instruction Translate()
    {
label_1:
      int num1 = 174039412;
      Instruction instruction;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1507778313)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            instruction = (Instruction) null;
            num1 = (int) num2 * 1975110334 ^ -894686211;
            continue;
          case 2:
            num1 = (int) num2 * 227506366 ^ 1563170794;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return instruction;
    }

    public int NumberOfArguments()
    {
label_1:
      int num1 = -1257787433;
      int num2;
      CommandType type;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -985700219)) % 19U)
        {
          case 0:
label_11:
            num2 = 2;
            num1 = -1462598819;
            continue;
          case 1:
label_5:
            num2 = 0;
            num1 = -1641073346;
            continue;
          case 2:
            num1 = (int) num3 * -1269755131 ^ -2129841585;
            continue;
          case 3:
label_8:
            num2 = 2;
            num1 = -1462598819;
            continue;
          case 5:
            switch (type)
            {
              case CommandType.AssignValue:
                goto label_10;
              case CommandType.Add:
                goto label_20;
              case CommandType.Substract:
                goto label_15;
              case CommandType.Divide:
                goto label_9;
              case CommandType.CopyValue:
                goto label_8;
              case CommandType.CopyValue2:
                goto label_11;
              case CommandType.GotoIf:
                goto label_6;
              case CommandType.Halt:
                goto label_5;
              default:
                num1 = (int) num3 * -1229427635 ^ -979695688;
                continue;
            }
          case 6:
            goto label_12;
          case 7:
            num1 = (int) num3 * -371472988 ^ -886485451;
            continue;
          case 8:
            goto label_1;
          case 9:
label_10:
            num2 = 2;
            num1 = -723634705;
            continue;
          case 10:
label_9:
            num2 = 1;
            num1 = -951313457;
            continue;
          case 11:
            type = this.Type;
            num1 = (int) num3 * 318425472 ^ -884043970;
            continue;
          case 12:
            num1 = (int) num3 * -900591026 ^ -777308249;
            continue;
          case 13:
label_15:
            num2 = 3;
            num1 = -549934089;
            continue;
          case 14:
            num1 = (int) num3 * -91122412 ^ -1703360382;
            continue;
          case 15:
            num1 = (int) num3 * 247297412 ^ -676371563;
            continue;
          case 16:
            num1 = (int) num3 * 1176193831 ^ 367360091;
            continue;
          case 17:
label_6:
            num2 = 2;
            num1 = -1462598819;
            continue;
          case 18:
label_20:
            num2 = 3;
            num1 = -108879857;
            continue;
          default:
            goto label_21;
        }
      }
label_12:
      throw Command.\u206B⁬⁬‮⁮‫⁯‏‮⁭⁯⁭⁬‪⁪​‬‭⁪‏‬⁫‍​⁬⁬⁫‏⁮‫⁭⁫‎⁭‮‌‪​‪‍‮();
label_21:
      return num2;
    }

    public Command()
    {
label_1:
      int num1 = 1126230436;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1001036203)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * 1375121732 ^ 796794487;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static string \u206E⁮‌⁯‫‌‪‭‍‬​​‌‪‮⁪‫‪⁫‎‎⁫‎‪‎‍⁬‬‭‪⁯‍‌⁫‭⁭⁮⁮⁫‎‮(
      [In] string obj0,
      [In] object obj1,
      [In] object obj2,
      [In] object obj3)
    {
      return string.Format(obj0, obj1, obj2, obj3);
    }

    static bool \u200C‌⁪‌​⁫‪‍‫⁭⁮‮‎‮​⁭‍⁬‍⁫⁯⁮​⁬‫‬‌⁮⁭‍⁮⁪‭​‮‍‮⁯‮‌‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    static string \u200B⁪‎‮‫‌‏‪‮‏⁮⁭‫⁭⁮‬‎⁭‭‫⁯‭‫‏‭‏​⁫‌‮⁭⁬‬‎‫‫‎⁪‏⁮‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static InvalidEnumArgumentException \u206B⁬⁬‮⁮‫⁯‏‮⁭⁯⁭⁬‪⁪​‬‭⁪‏‬⁫‍​⁬⁬⁫‏⁮‫⁭⁫‎⁭‮‌‪​‪‍‮() => new InvalidEnumArgumentException();
  }
}
