// Decompiled with JetBrains decompiler
// Type: s6Z1.Li8w
// Assembly: k3F4, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: EF2862A8-7088-4F2B-ADD5-AFDC446098D9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-ee71029a7b3d9d85e7a6c7c0ecc35d93ee37514713ba5033d491a0d7506e947b.exe

using An9;
using Ey7q;
using Le76;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.ComponentModel;
using System.Data.Linq;
using System.Drawing;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using x7X;

namespace s6Z1
{
  [DesignerGenerated]
  public class Li8w : Form
  {
    [AccessedThroughProperty("Ⴅ")]
    private Label Ⴀ;
    [AccessedThroughProperty("Ⴈ")]
    private DataGridView ႣႤ;
    private b8BW.Gw93 Ⴃ = new b8BW.Gw93();

    public Li8w()
    {
      this.Load += new EventHandler(this.Gy7g);
      this.Rz01();
    }

    protected virtual void s0Z7([In] bool obj0)
    {
      try
      {
        if (!obj0 || this.Ⴃ.Ⴃ == null)
          return;
        this.Ⴃ.Ⴃ.Dispose();
      }
      finally
      {
        this.Dispose(obj0);
      }
    }

    private void Rz01()
    {
      this.Ⴍ = new Label();
      this.Ⴅ = new Label();
      this.Ⴃ = new Label();
      this.Ⴈ = new DataGridView();
      this.Ⴗ = new DateTimePicker();
      this.Ⴐ = new Button();
      ((ISupportInitialize) this.Ⴈ).BeginInit();
      this.SuspendLayout();
      this.Ⴍ.AutoSize = true;
      this.Ⴍ.Font = new Font("Microsoft Sans Serif", 14f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴍ.Location = new Point(331, 5);
      this.Ⴍ.Name = "Label2";
      this.Ⴍ.Size = new Size(138, 32);
      this.Ⴍ.TabIndex = 26;
      this.Ⴍ.Text = "Overtime";
      this.Ⴅ.AutoSize = true;
      this.Ⴅ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴅ.Location = new Point(19, 63);
      this.Ⴅ.Margin = new Padding(4, 0, 4, 0);
      this.Ⴅ.Name = "Label1";
      this.Ⴅ.Size = new Size(120, 20);
      this.Ⴅ.TabIndex = 24;
      this.Ⴅ.Text = "&Search Date :";
      this.Ⴃ.Anchor = AnchorStyles.Bottom | AnchorStyles.Left;
      this.Ⴃ.Location = new Point(11, 410);
      this.Ⴃ.Margin = new Padding(4, 0, 4, 0);
      this.Ⴃ.Name = "lblCount";
      this.Ⴃ.Size = new Size(150, 35);
      this.Ⴃ.TabIndex = 23;
      this.Ⴃ.Text = "X records(s)";
      this.Ⴃ.TextAlign = ContentAlignment.MiddleLeft;
      this.Ⴈ.AllowUserToAddRows = false;
      this.Ⴈ.AllowUserToDeleteRows = false;
      this.Ⴈ.Anchor = AnchorStyles.Top | AnchorStyles.Bottom | AnchorStyles.Left | AnchorStyles.Right;
      this.Ⴈ.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.AllCells;
      this.Ⴈ.AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.AllCells;
      this.Ⴈ.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize;
      this.Ⴈ.Location = new Point(15, 98);
      this.Ⴈ.Margin = new Padding(4, 5, 4, 5);
      this.Ⴈ.Name = "dgv";
      this.Ⴈ.ReadOnly = true;
      this.Ⴈ.SelectionMode = DataGridViewSelectionMode.FullRowSelect;
      this.Ⴈ.Size = new Size(774, 307);
      this.Ⴈ.TabIndex = 22;
      this.Ⴗ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴗ.Format = DateTimePickerFormat.Short;
      this.Ⴗ.Location = new Point(146, 60);
      this.Ⴗ.MaxDate = new DateTime(2020, 12, 31, 0, 0, 0, 0);
      this.Ⴗ.MinDate = new DateTime(2000, 1, 1, 0, 0, 0, 0);
      this.Ⴗ.Name = "DateTimePicker1";
      this.Ⴗ.Size = new Size(200, 26);
      this.Ⴗ.TabIndex = 0;
      this.Ⴐ.AutoSize = true;
      this.Ⴐ.BackColor = Color.MediumSeaGreen;
      this.Ⴐ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴐ.ForeColor = SystemColors.ControlLightLight;
      this.Ⴐ.Location = new Point(375, 50);
      this.Ⴐ.Name = "btnSearch";
      this.Ⴐ.Size = new Size(117, 40);
      this.Ⴐ.TabIndex = 1;
      this.Ⴐ.Text = "&Search";
      this.Ⴐ.UseVisualStyleBackColor = false;
      this.AutoScaleDimensions = new SizeF(9f, 20f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.BackColor = Color.LightBlue;
      this.ClientSize = new Size(800, 450);
      this.Controls.Add((Control) this.Ⴐ);
      this.Controls.Add((Control) this.Ⴗ);
      this.Controls.Add((Control) this.Ⴍ);
      this.Controls.Add((Control) this.Ⴅ);
      this.Controls.Add((Control) this.Ⴃ);
      this.Controls.Add((Control) this.Ⴈ);
      this.FormBorderStyle = FormBorderStyle.None;
      this.Name = "ႰႳ";
      this.Text = "HROvertimeShow";
      ((ISupportInitialize) this.Ⴈ).EndInit();
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual Label Ⴍ
    {
      get => this.Ⴃ.Ⴈ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴃ.Ⴈ = value;
    }

    internal virtual Label Ⴅ
    {
      get => this.Ⴀ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴀ = value;
    }

    internal virtual Label Ⴃ
    {
      get => this.Ⴃ.Ⴀ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴃ.Ⴀ = value;
    }

    internal virtual DataGridView Ⴈ
    {
      get => this.ႣႤ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႣႤ = value;
    }

    internal virtual DateTimePicker Ⴗ
    {
      get => this.Ⴃ.Ⴄ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴃ.Ⴄ = (Control) value as DateTimePicker;
    }

    internal virtual Button Ⴐ
    {
      get => this.Ⴃ.Ⴗ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        MulticastDelegate multicastDelegate = (MulticastDelegate) new EventHandler(this.Yk73);
        ButtonBase ⴗ1 = (ButtonBase) this.Ⴃ.Ⴗ;
        if ((Button) ⴗ1 != null)
          ⴗ1.Click -= multicastDelegate as EventHandler;
        this.Ⴃ.Ⴗ = (IButtonControl) value as Button;
        ButtonBase ⴗ2 = (ButtonBase) this.Ⴃ.Ⴗ;
        if (!(ⴗ2 is Button))
          return;
        ⴗ2.Click += (EventHandler) multicastDelegate;
      }
    }

    private void t5WC()
    {
      Table<Ck51> ⴐ = ((DataContext) new Tt1() as Tt1).Ⴐ;
      object body = (object) Expression.Parameter(typeof (Ck51), "c");
      Expression<Func<Ck51, Ck51>> selector = Expression.Lambda<Func<Ck51, Ck51>>((Expression) body, (ParameterExpression) body);
      object source = (object) ⴐ.Select<Ck51, Ck51>(selector);
      this.Ⴈ.DataSource = (object) (source as IQueryable<Ck51>);
      this.Ⴃ.Text = ((IQueryable<Ck51>) source).Count<Ck51>().ToString("0 record(s)");
    }

    private void Yk73([In] object obj0, [In] EventArgs obj1)
    {
      object obj = (object) new Li8w.p9FP();
      ((Li8w.p9FP) obj).Ⴗ = this.Ⴗ.Text;
      Table<Ck51> ⴐ = ((DataContext) new Tt1() as Tt1).Ⴐ;
      Expression expression = (Expression) Expression.Parameter(typeof (Ck51), "c");
      // ISSUE: method reference
      // ISSUE: method reference
      // ISSUE: type reference
      // ISSUE: method reference
      // ISSUE: field reference
      Expression<Func<Ck51, bool>> predicate = Expression.Lambda<Func<Ck51, bool>>((Expression) Expression.Call((Expression) Expression.Property((Expression) (expression as ParameterExpression), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Ck51.z3H8))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (DateTime?.Equals), __typeref (DateTime?)), (Expression) Expression.Convert((Expression) Expression.Call((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (DateTime.Parse)), (Expression) Expression.Field((Expression) Expression.Constant((object) (obj as Li8w.p9FP), typeof (Li8w.p9FP)), FieldInfo.GetFieldFromHandle(__fieldref (Li8w.p9FP.Ⴗ)))), typeof (object))), (ParameterExpression) expression);
      object source = (object) ⴐ.Where<Ck51>(predicate);
      this.Ⴈ.DataSource = (object) (IQueryable<Ck51>) source;
      this.Ⴃ.Text = ((IQueryable<Ck51>) source).Count<Ck51>().ToString("0 record(s)");
    }

    private void Gy7g([In] object obj0, [In] EventArgs obj1)
    {
      this.t5WC();
      En6.Ⴈ.Ⴓ.Text = "Human Resource Management System - HR Show Overtime";
    }

    internal sealed class p9FP
    {
      public string Ⴗ;
    }

    [StructLayout(LayoutKind.Auto)]
    internal struct Hr1z
    {
      internal IContainer Ⴄ;
      internal ToolStripMenuItem Ⴃ;
      internal ToolStripMenuItem Ⴓ;
      internal ToolStripMenuItem Ⴍ;
      internal ToolStripMenuItem Ⴗ;
      internal ToolStripMenuItem Ⴈ;
      internal ToolStripMenuItem Ⴅ;
    }
  }
}
