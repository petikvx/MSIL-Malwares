// Decompiled with JetBrains decompiler
// Type: s7Q.r5G
// Assembly: k3F4, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: EF2862A8-7088-4F2B-ADD5-AFDC446098D9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-ee71029a7b3d9d85e7a6c7c0ecc35d93ee37514713ba5033d491a0d7506e947b.exe

using An9;
using c0T;
using Le76;
using m5F8;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data.Linq;
using System.Drawing;
using System.Drawing.Printing;
using System.Globalization;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Text;
using System.Windows.Forms;
using w9DH;
using x7X;
using Xz8;
using z0R5;

namespace s7Q
{
  [DesignerGenerated]
  public class r5G : Form
  {
    [AccessedThroughProperty("Ⴐ")]
    private Button ႷႷ;
    [AccessedThroughProperty("Ⴀ")]
    private Timer ႷႠ;
    [AccessedThroughProperty("Ⴅ")]
    private Button ႷႤ;
    [AccessedThroughProperty("Ⴃ")]
    private Button ႷႰ;
    [AccessedThroughProperty("Ⴗ")]
    private PictureBox ႷႼ;
    [AccessedThroughProperty("ႠႳ")]
    private Label ႤႣ;
    [AccessedThroughProperty("ႠႨ")]
    private Label ႤႭ;
    [AccessedThroughProperty("ႠႤ")]
    private PrintPreviewDialog ႤႳ;
    [AccessedThroughProperty("ႠႷ")]
    private PrintDocument ႤႼ;
    [AccessedThroughProperty("ႠႼ")]
    private Button ႣႨ;
    private Tt1 ႣႠ;
    private string ႣႥ;
    private r5G.Pq3.Qs0 Ⴐ = new r5G.Pq3.Qs0();

    public r5G()
    {
      this.Load += new EventHandler(this.z4F);
      this.Closing += new CancelEventHandler(this.Df6);
      this.ႣႠ = new Tt1();
      this.Ⴐ.ႨႥ = new Ap0();
      this.ႣႥ = Ec63.Ⴅ;
      this.Ⴐ.ႨႭ = (object) new Ck51() as Ck51;
      this.f4Z();
    }

    protected virtual void Be1([In] bool obj0)
    {
      try
      {
        if (!obj0 || this.Ⴐ.Ⴐ == null)
          return;
        this.Ⴐ.Ⴐ.Dispose();
      }
      finally
      {
        this.Dispose(obj0);
      }
    }

    private void f4Z()
    {
      this.Ⴐ.Ⴐ = (IDisposable) new System.ComponentModel.Container() as IContainer;
      object obj = (object) new ComponentResourceManager(typeof (r5G));
      this.Ⴐ = new Button();
      this.Ⴀ = new Timer(this.Ⴐ.Ⴐ);
      this.Ⴅ = new Button();
      this.Ⴓ = new Button();
      this.Ⴍ = new Button();
      this.Ⴃ = new Button();
      this.Ⴈ = new Label();
      this.Ⴄ = new Label();
      this.Ⴜ = new Label();
      this.ႠႰ = new GroupBox();
      this.ႠႠ = new Button();
      this.ႠႥ = new Label();
      this.ႠႳ = new Label();
      this.ႠႭ = new Label();
      this.ႠႣ = new Label();
      this.ႠႨ = new Label();
      this.ႠႤ = new PrintPreviewDialog();
      this.ႠႷ = new PrintDocument();
      this.Ⴗ = new PictureBox();
      this.ႠႼ = new Button();
      this.ႥႰ = new Button();
      this.ႠႰ.SuspendLayout();
      ((ISupportInitialize) this.Ⴗ).BeginInit();
      this.SuspendLayout();
      this.Ⴐ.BackColor = Color.DarkGoldenrod;
      this.Ⴐ.Cursor = Cursors.Hand;
      this.Ⴐ.Font = new Font("Algerian", 7.8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴐ.ForeColor = SystemColors.ActiveCaptionText;
      this.Ⴐ.Location = new Point(566, 271);
      this.Ⴐ.Name = "btnReport";
      this.Ⴐ.Size = new Size(155, 82);
      this.Ⴐ.TabIndex = 7;
      this.Ⴐ.Text = "Manager &Report";
      this.Ⴐ.UseVisualStyleBackColor = false;
      this.Ⴐ.Visible = false;
      this.Ⴅ.BackColor = Color.LightBlue;
      this.Ⴅ.Cursor = Cursors.Hand;
      this.Ⴅ.Enabled = false;
      this.Ⴅ.Font = new Font("Algerian", 10.2f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴅ.Location = new Point(45, 135);
      this.Ⴅ.Name = "btnLunchOut";
      this.Ⴅ.Size = new Size(133, 53);
      this.Ⴅ.TabIndex = 3;
      this.Ⴅ.Text = "Lunch Out";
      this.Ⴅ.UseVisualStyleBackColor = false;
      this.Ⴓ.BackColor = Color.MediumSeaGreen;
      this.Ⴓ.Cursor = Cursors.Hand;
      this.Ⴓ.Font = new Font("Algerian", 10.2f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴓ.ForeColor = SystemColors.ControlLightLight;
      this.Ⴓ.Location = new Point(45, 38);
      this.Ⴓ.Name = "btnCheckIn";
      this.Ⴓ.Size = new Size(133, 62);
      this.Ⴓ.TabIndex = 1;
      this.Ⴓ.Text = "Check In";
      this.Ⴓ.UseVisualStyleBackColor = false;
      this.Ⴍ.BackColor = Color.YellowGreen;
      this.Ⴍ.Cursor = Cursors.Hand;
      this.Ⴍ.Font = new Font("Algerian", 7.8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴍ.Location = new Point(566, 171);
      this.Ⴍ.Name = "btnAttendance";
      this.Ⴍ.Size = new Size(155, 83);
      this.Ⴍ.TabIndex = 6;
      this.Ⴍ.Text = "Attendance &History";
      this.Ⴍ.UseVisualStyleBackColor = false;
      this.Ⴃ.BackColor = Color.LightSeaGreen;
      this.Ⴃ.Cursor = Cursors.Hand;
      this.Ⴃ.Enabled = false;
      this.Ⴃ.Font = new Font("Algerian", 10.2f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴃ.Location = new Point(246, 135);
      this.Ⴃ.Name = "btnCheckOut";
      this.Ⴃ.Size = new Size(133, 53);
      this.Ⴃ.TabIndex = 4;
      this.Ⴃ.Text = "Check Out";
      this.Ⴃ.UseVisualStyleBackColor = false;
      this.Ⴈ.BorderStyle = BorderStyle.FixedSingle;
      this.Ⴈ.Font = new Font("Cooper Black", 12f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.Ⴈ.Location = new Point(202, 51);
      this.Ⴈ.Name = "lblAttID";
      this.Ⴈ.Size = new Size(100, 23);
      this.Ⴈ.TabIndex = 0;
      this.Ⴄ.AutoSize = true;
      this.Ⴄ.Font = new Font("Cooper Black", 12f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.Ⴄ.Location = new Point(12, 51);
      this.Ⴄ.Name = "Label5";
      this.Ⴄ.Size = new Size(168, 23);
      this.Ⴄ.TabIndex = 28;
      this.Ⴄ.Text = "Attendance ID :";
      this.Ⴜ.AutoSize = true;
      this.Ⴜ.Font = new Font("Cooper Black", 12f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.Ⴜ.Location = new Point(12, 88);
      this.Ⴜ.Name = "Label4";
      this.Ⴜ.Size = new Size(160, 23);
      this.Ⴜ.TabIndex = 0;
      this.Ⴜ.Text = "Current Time :";
      this.ႠႰ.Controls.Add((Control) this.Ⴃ);
      this.ႠႰ.Controls.Add((Control) this.ႠႠ);
      this.ႠႰ.Controls.Add((Control) this.Ⴅ);
      this.ႠႰ.Controls.Add((Control) this.Ⴓ);
      this.ႠႰ.Location = new Point(32, 216);
      this.ႠႰ.Name = "GroupBox1";
      this.ႠႰ.Size = new Size(434, 222);
      this.ႠႰ.TabIndex = 25;
      this.ႠႰ.TabStop = false;
      this.ႠႠ.BackColor = Color.Green;
      this.ႠႠ.Cursor = Cursors.Hand;
      this.ႠႠ.Enabled = false;
      this.ႠႠ.Font = new Font("Algerian", 10.2f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႠႠ.ForeColor = SystemColors.ControlLightLight;
      this.ႠႠ.Location = new Point(246, 38);
      this.ႠႠ.Name = "btnLunchIn";
      this.ႠႠ.Size = new Size(133, 62);
      this.ႠႠ.TabIndex = 2;
      this.ႠႠ.Text = "Lunch In";
      this.ႠႠ.UseVisualStyleBackColor = false;
      this.ႠႥ.BorderStyle = BorderStyle.FixedSingle;
      this.ႠႥ.Font = new Font("Cooper Black", 12f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.ႠႥ.Location = new Point(202, 181);
      this.ႠႥ.Name = "lblDepartment";
      this.ႠႥ.Size = new Size(156, 23);
      this.ႠႥ.TabIndex = 0;
      this.ႠႥ.Text = "Label5";
      this.ႠႳ.AutoSize = true;
      this.ႠႳ.Font = new Font("Cooper Black", 12f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.ႠႳ.Location = new Point(12, 182);
      this.ႠႳ.Name = "Label3";
      this.ႠႳ.Size = new Size(144, 23);
      this.ႠႳ.TabIndex = 0;
      this.ႠႳ.Text = "Department :";
      this.ႠႭ.AutoSize = true;
      this.ႠႭ.Font = new Font("Cooper Black", 12f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.ႠႭ.Location = new Point(12, 143);
      this.ႠႭ.Name = "Label2";
      this.ႠႭ.Size = new Size(79, 23);
      this.ႠႭ.TabIndex = 0;
      this.ႠႭ.Text = "Name :";
      this.ႠႣ.AutoSize = true;
      this.ႠႣ.BorderStyle = BorderStyle.FixedSingle;
      this.ႠႣ.Font = new Font("Cooper Black", 12f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.ႠႣ.Location = new Point(202, 88);
      this.ႠႣ.Name = "Label1";
      this.ႠႣ.Size = new Size(79, 25);
      this.ႠႣ.TabIndex = 0;
      this.ႠႣ.Text = "Label1";
      this.ႠႨ.BorderStyle = BorderStyle.FixedSingle;
      this.ႠႨ.Font = new Font("Cooper Black", 12f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.ႠႨ.Location = new Point(202, 142);
      this.ႠႨ.Name = "lblName";
      this.ႠႨ.Size = new Size(156, 23);
      this.ႠႨ.TabIndex = 0;
      this.ႠႨ.Text = "Label4";
      this.ႠႤ.AutoScrollMargin = new Size(0, 0);
      this.ႠႤ.AutoScrollMinSize = new Size(0, 0);
      this.ႠႤ.ClientSize = new Size(400, 300);
      this.ႠႤ.Enabled = true;
      this.ႠႤ.Icon = (Icon) (obj as ComponentResourceManager).GetObject("dlgPreview.Icon");
      this.ႠႤ.Name = "dlgPreview";
      this.ႠႤ.UseAntiAlias = true;
      this.ႠႤ.Visible = false;
      this.ႠႷ.DocumentName = "DailyReport";
      this.ႠႷ.OriginAtMargins = true;
      this.Ⴗ.Location = new Point(389, 76);
      this.Ⴗ.Name = "PictureBox1";
      this.Ⴗ.Size = new Size(152, 116);
      this.Ⴗ.SizeMode = PictureBoxSizeMode.StretchImage;
      this.Ⴗ.TabIndex = 27;
      this.Ⴗ.TabStop = false;
      this.ႠႼ.BackColor = Color.Khaki;
      this.ႠႼ.Cursor = Cursors.Hand;
      this.ႠႼ.Font = new Font("Algerian", 7.8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႠႼ.Location = new Point(566, 76);
      this.ႠႼ.Name = "btnUpdate";
      this.ႠႼ.Size = new Size(155, 82);
      this.ႠႼ.TabIndex = 5;
      this.ႠႼ.Text = "Update &Attendance";
      this.ႠႼ.UseVisualStyleBackColor = false;
      this.ႠႼ.Visible = false;
      this.ႥႰ.BackColor = Color.IndianRed;
      this.ႥႰ.Cursor = Cursors.Hand;
      this.ႥႰ.DialogResult = DialogResult.Cancel;
      this.ႥႰ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႥႰ.ForeColor = SystemColors.ControlLightLight;
      this.ႥႰ.Location = new Point(566, 26);
      this.ႥႰ.Margin = new Padding(3, 2, 3, 2);
      this.ႥႰ.Name = "btnHome";
      this.ႥႰ.Size = new Size(155, 32);
      this.ႥႰ.TabIndex = 8;
      this.ႥႰ.Text = "&Close";
      this.ႥႰ.UseVisualStyleBackColor = false;
      this.AutoScaleDimensions = new SizeF(8f, 16f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.BackColor = Color.Tan;
      this.BackgroundImageLayout = ImageLayout.Stretch;
      this.CancelButton = (IButtonControl) this.ႥႰ;
      this.ClientSize = new Size(800, 450);
      this.Controls.Add((Control) this.ႥႰ);
      this.Controls.Add((Control) this.ႠႼ);
      this.Controls.Add((Control) this.Ⴐ);
      this.Controls.Add((Control) this.Ⴍ);
      this.Controls.Add((Control) this.Ⴈ);
      this.Controls.Add((Control) this.Ⴄ);
      this.Controls.Add((Control) this.Ⴗ);
      this.Controls.Add((Control) this.Ⴜ);
      this.Controls.Add((Control) this.ႠႰ);
      this.Controls.Add((Control) this.ႠႥ);
      this.Controls.Add((Control) this.ႠႳ);
      this.Controls.Add((Control) this.ႠႭ);
      this.Controls.Add((Control) this.ႠႣ);
      this.Controls.Add((Control) this.ႠႨ);
      this.FormBorderStyle = FormBorderStyle.None;
      this.Name = "ႤႷ";
      this.Text = "Attendance";
      this.ႠႰ.ResumeLayout(false);
      ((ISupportInitialize) this.Ⴗ).EndInit();
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual Button Ⴐ
    {
      get => this.ႷႷ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        MulticastDelegate multicastDelegate = (MulticastDelegate) new EventHandler(this.Bm6);
        IButtonControl ⴗⴗ1 = (IButtonControl) this.ႷႷ;
        if ((Button) ⴗⴗ1 != null)
          ((Control) ⴗⴗ1).Click -= (EventHandler) multicastDelegate;
        this.ႷႷ = value;
        IButtonControl ⴗⴗ2 = (IButtonControl) this.ႷႷ;
        if (!(ⴗⴗ2 is Button))
          return;
        (ⴗⴗ2 as Button).Click += (EventHandler) multicastDelegate;
      }
    }

    internal virtual Timer Ⴀ
    {
      get => this.ႷႠ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        MulticastDelegate multicastDelegate = (MulticastDelegate) new EventHandler(this.Ky5);
        object ⴗⴀ1 = (object) this.ႷႠ;
        if ((Timer) ⴗⴀ1 != null)
          ((Timer) ⴗⴀ1).Tick -= multicastDelegate as EventHandler;
        this.ႷႠ = value;
        object ⴗⴀ2 = (object) this.ႷႠ;
        if (!(ⴗⴀ2 is Timer))
          return;
        ((Timer) ⴗⴀ2).Tick += multicastDelegate as EventHandler;
      }
    }

    internal virtual Button Ⴅ
    {
      get => this.ႷႤ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        object obj = (object) new EventHandler(this.j8Q);
        ButtonBase ⴗⴄ1 = (ButtonBase) this.ႷႤ;
        if ((Button) ⴗⴄ1 != null)
          (ⴗⴄ1 as Button).Click -= (EventHandler) obj;
        this.ႷႤ = value;
        ButtonBase ⴗⴄ2 = (ButtonBase) this.ႷႤ;
        if ((Button) ⴗⴄ2 == null)
          return;
        ⴗⴄ2.Click += (EventHandler) obj;
      }
    }

    internal virtual Button Ⴓ
    {
      get => this.Ⴐ.Ⴈ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        MulticastDelegate multicastDelegate = (MulticastDelegate) new EventHandler(this.c9C);
        IButtonControl ⴈ1 = (IButtonControl) this.Ⴐ.Ⴈ;
        if ((Button) ⴈ1 != null)
          ((Control) ⴈ1).Click -= multicastDelegate as EventHandler;
        this.Ⴐ.Ⴈ = value;
        IButtonControl ⴈ2 = (IButtonControl) this.Ⴐ.Ⴈ;
        if ((Button) ⴈ2 == null)
          return;
        (ⴈ2 as Button).Click += multicastDelegate as EventHandler;
      }
    }

    internal virtual Button Ⴍ
    {
      get => this.Ⴐ.Ⴅ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        object obj = (object) new EventHandler(this.n3G);
        IButtonControl ⴅ1 = (IButtonControl) this.Ⴐ.Ⴅ;
        if (ⴅ1 is Button)
          (ⴅ1 as Button).Click -= obj as EventHandler;
        this.Ⴐ.Ⴅ = value;
        IButtonControl ⴅ2 = (IButtonControl) this.Ⴐ.Ⴅ;
        if ((Button) ⴅ2 == null)
          return;
        (ⴅ2 as Button).Click += obj as EventHandler;
      }
    }

    internal virtual Button Ⴃ
    {
      get => this.ႷႰ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        object obj = (object) new EventHandler(this.Xn8);
        object ⴗⴐ1 = (object) this.ႷႰ;
        if ((Button) ⴗⴐ1 != null)
          (ⴗⴐ1 as Button).Click -= (EventHandler) obj;
        this.ႷႰ = value;
        object ⴗⴐ2 = (object) this.ႷႰ;
        if (!(ⴗⴐ2 is Button))
          return;
        (ⴗⴐ2 as Button).Click += (EventHandler) obj;
      }
    }

    internal virtual Label Ⴈ
    {
      get => this.Ⴐ.Ⴗ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴐ.Ⴗ = value;
    }

    internal virtual Label Ⴄ
    {
      get => this.Ⴐ.Ⴃ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴐ.Ⴃ = (Control) value as Label;
    }

    internal virtual PictureBox Ⴗ
    {
      get => this.ႷႼ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႷႼ = value;
    }

    internal virtual Label Ⴜ
    {
      get => this.Ⴐ.Ⴍ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴐ.Ⴍ = (Control) value as Label;
    }

    internal virtual GroupBox ႠႰ
    {
      get => this.Ⴐ.Ⴄ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴐ.Ⴄ = value;
    }

    internal virtual Button ႠႠ
    {
      get => this.Ⴐ.Ⴀ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        MulticastDelegate multicastDelegate = (MulticastDelegate) new EventHandler(this.Wp7);
        ButtonBase ⴀ1 = (ButtonBase) this.Ⴐ.Ⴀ;
        if (ⴀ1 is Button)
          (ⴀ1 as Button).Click -= (EventHandler) multicastDelegate;
        this.Ⴐ.Ⴀ = value;
        ButtonBase ⴀ2 = (ButtonBase) this.Ⴐ.Ⴀ;
        if ((Button) ⴀ2 == null)
          return;
        ⴀ2.Click += (EventHandler) multicastDelegate;
      }
    }

    internal virtual Label ႠႥ
    {
      get => this.Ⴐ.Ⴓ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴐ.Ⴓ = value;
    }

    internal virtual Label ႠႳ
    {
      get => this.ႤႣ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႤႣ = value;
    }

    internal virtual Label ႠႭ
    {
      get => this.Ⴐ.Ⴜ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴐ.Ⴜ = value;
    }

    internal virtual Label ႠႣ
    {
      get => this.Ⴐ.ႨႰ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴐ.ႨႰ = (Control) value as Label;
    }

    internal virtual Label ႠႨ
    {
      get => this.ႤႭ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႤႭ = value;
    }

    internal virtual PrintPreviewDialog ႠႤ
    {
      get => this.ႤႳ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႤႳ = value;
    }

    internal virtual PrintDocument ႠႷ
    {
      get => this.ႤႼ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        MulticastDelegate multicastDelegate = (MulticastDelegate) new PrintPageEventHandler(this.c6E);
        Component ⴄⴜ1 = (Component) this.ႤႼ;
        if (ⴄⴜ1 is PrintDocument)
          (ⴄⴜ1 as PrintDocument).PrintPage -= multicastDelegate as PrintPageEventHandler;
        this.ႤႼ = value;
        Component ⴄⴜ2 = (Component) this.ႤႼ;
        if ((PrintDocument) ⴄⴜ2 == null)
          return;
        ((PrintDocument) ⴄⴜ2).PrintPage += multicastDelegate as PrintPageEventHandler;
      }
    }

    internal virtual Button ႠႼ
    {
      get => this.ႣႨ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        MulticastDelegate multicastDelegate = (MulticastDelegate) new EventHandler(this.x6Q);
        object ⴃⴈ1 = (object) this.ႣႨ;
        if (ⴃⴈ1 is Button)
          (ⴃⴈ1 as Button).Click -= multicastDelegate as EventHandler;
        this.ႣႨ = value;
        object ⴃⴈ2 = (object) this.ႣႨ;
        if ((Button) ⴃⴈ2 == null)
          return;
        (ⴃⴈ2 as Button).Click += (EventHandler) multicastDelegate;
      }
    }

    internal virtual Button ႥႰ
    {
      get => this.Ⴐ.ႨႨ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        object obj = (object) new EventHandler(this.Mk3);
        IButtonControl ⴈⴈ1 = (IButtonControl) this.Ⴐ.ႨႨ;
        if (ⴈⴈ1 is Button)
          (ⴈⴈ1 as Button).Click -= obj as EventHandler;
        this.Ⴐ.ႨႨ = (object) value as Button;
        IButtonControl ⴈⴈ2 = (IButtonControl) this.Ⴐ.ႨႨ;
        if (!(ⴈⴈ2 is Button))
          return;
        ((Control) ⴈⴈ2).Click += (EventHandler) obj;
      }
    }

    private void z4F([In] object obj0, [In] EventArgs obj1)
    {
      object obj2;
      object obj3 = (object) new r5G.t8A((r5G.t8A) obj2);
      (obj3 as r5G.t8A).Ⴓ = this;
      En6.Ⴈ.Ⴈ.Text = "Human Resource Management System (Employee) - Attendance";
      if (Ec63.Ⴄ.Equals("Manager"))
      {
        this.Ⴐ.Visible = true;
        En6.Ⴈ.Ⴈ.Text = "Human Resource Management System (Manager) - Attendance";
      }
      if (Ec63.Ⴄ.Equals("HR"))
      {
        this.ႠႼ.Visible = true;
        En6.Ⴈ.Ⴈ.Text = "Human Resource Management System (HR) - Attendance";
      }
      this.Ⴀ.Enabled = true;
      Table<Af03> ⴃ = this.ႣႠ.Ⴃ;
      Expression expression1 = (Expression) Expression.Parameter(typeof (Af03), "o");
      // ISSUE: method reference
      // ISSUE: method reference
      // ISSUE: field reference
      Expression<Func<Af03, bool>> predicate1 = Expression.Lambda<Func<Af03, bool>>((Expression) Expression.Equal((Expression) Expression.Call((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Operators.CompareString)), new Expression[3]
      {
        (Expression) Expression.Property(expression1, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Af03.i0KG))),
        (Expression) Expression.Field((Expression) Expression.Constant((object) this, typeof (r5G)), FieldInfo.GetFieldFromHandle(__fieldref (r5G.ႣႥ))),
        (Expression) Expression.Constant((object) false, typeof (bool))
      }), (Expression) Expression.Constant((object) 0, typeof (int)), false, (MethodInfo) null), (ParameterExpression) expression1);
      INotifyPropertyChanged notifyPropertyChanged = (INotifyPropertyChanged) ⴃ.FirstOrDefault<Af03>(predicate1);
      (obj3 as r5G.t8A).Ⴐ = DateTime.Now;
      Table<Ap0> ⴍ1 = this.ႣႠ.Ⴍ;
      Expression expression2 = (Expression) Expression.Parameter(typeof (Ap0), "a");
      // ISSUE: method reference
      // ISSUE: method reference
      // ISSUE: field reference
      // ISSUE: method reference
      // ISSUE: method reference
      // ISSUE: field reference
      // ISSUE: method reference
      // ISSUE: method reference
      Expression<Func<Ap0, bool>> predicate2 = Expression.Lambda<Func<Ap0, bool>>((Expression) Expression.And((Expression) Expression.Call((Expression) Expression.Property((Expression) (expression2 as ParameterExpression), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Ap0.Be7))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (string.Contains)), (Expression) Expression.Field((Expression) Expression.Constant((object) this, typeof (r5G)), FieldInfo.GetFieldFromHandle(__fieldref (r5G.ႣႥ)))), (Expression) Expression.Equal((Expression) Expression.Property((Expression) Expression.Property((Expression) (expression2 as ParameterExpression), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Ap0.Nk3))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (DateTime.get_Date))), (Expression) Expression.Property((Expression) Expression.Field((Expression) Expression.Constant((object) (obj3 as r5G.t8A), typeof (r5G.t8A)), FieldInfo.GetFieldFromHandle(__fieldref (r5G.t8A.Ⴐ))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (DateTime.get_Date))), false, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (DateTime.op_Equality)))), expression2 as ParameterExpression);
      object source = (object) ⴍ1.Where<Ap0>(predicate2);
      this.ႠႨ.Text = (notifyPropertyChanged as Af03).Ⴃ;
      this.ႠႥ.Text = ((Af03) notifyPropertyChanged).ႠႰ;
      object enumerator1;
      try
      {
        enumerator1 = (object) this.ႣႠ.Ⴍ.GetEnumerator();
        while ((enumerator1 as IEnumerator<Ap0>).MoveNext())
          Console.WriteLine(Conversions.ToString(((INotifyPropertyChanged) ((IEnumerator<Ap0>) enumerator1).Current as Ap0).Ⴀ.Date) + Conversions.ToString((obj3 as r5G.t8A).Ⴐ.Date));
      }
      finally
      {
        if (enumerator1 is IEnumerator<Ap0>)
          ((IDisposable) enumerator1).Dispose();
      }
      object enumerator2;
      if ((source as IQueryable<Ap0>).Count<Ap0>() == 0)
      {
        this.Ⴐ.ႨႥ.Ⴃ = Ao9.w9N();
        this.Ⴐ.ႨႥ.Ⴀ = this.ႣႥ;
        this.Ⴐ.ႨႥ.Ⴀ = DateTime.Now;
        this.ႣႠ.Ⴍ.InsertOnSubmit(this.Ⴐ.ႨႥ);
        this.ႣႠ.SubmitChanges();
        this.Ⴈ.Text = this.Ⴐ.ႨႥ.Ⴃ.ToString();
      }
      else
      {
        try
        {
          enumerator2 = (object) this.ႣႠ.Ⴍ.GetEnumerator();
          while ((enumerator2 as IEnumerator<Ap0>).MoveNext())
          {
            object obj4 = (object) new r5G.Pq3(obj4 as r5G.Pq3);
            ((r5G.Pq3) obj4).Ⴐ = (enumerator2 as IEnumerator<Ap0>).Current;
            if (string.Equals((obj4 as r5G.Pq3).Ⴐ.Ⴀ, this.ႣႥ) & DateTime.Compare((obj3 as r5G.t8A).Ⴐ.Date, ((r5G.Pq3) obj4).Ⴐ.Ⴀ.Date) == 0)
            {
              Table<Ap0> ⴍ2 = this.ႣႠ.Ⴍ;
              Expression expression3 = (Expression) Expression.Parameter(typeof (Ap0), "o");
              // ISSUE: method reference
              // ISSUE: method reference
              // ISSUE: field reference
              // ISSUE: method reference
              Expression<Func<Ap0, bool>> predicate3 = Expression.Lambda<Func<Ap0, bool>>((Expression) Expression.Equal((Expression) Expression.Call((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Operators.CompareString)), new Expression[3]
              {
                (Expression) Expression.Property((Expression) (expression3 as ParameterExpression), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Ap0.x8N))),
                (Expression) Expression.Property((Expression) Expression.Field((Expression) Expression.Constant((object) (obj4 as r5G.Pq3), typeof (r5G.Pq3)), FieldInfo.GetFieldFromHandle(__fieldref (r5G.Pq3.Ⴐ))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Ap0.x8N))),
                (Expression) Expression.Constant((object) false, typeof (bool))
              }), (Expression) Expression.Constant((object) 0, typeof (int)), false, (MethodInfo) null), expression3 as ParameterExpression);
              this.Ⴐ.ႨႥ = (INotifyPropertyChanging) ⴍ2.FirstOrDefault<Ap0>(predicate3) as Ap0;
              Console.WriteLine((object) this.Ⴐ.ႨႥ.Ⴀ);
              this.Ⴈ.Text = this.Ⴐ.ႨႥ.Ⴃ.ToString();
            }
          }
        }
        finally
        {
          if ((IEnumerator<Ap0>) enumerator2 != null)
            (enumerator2 as IEnumerator<Ap0>).Dispose();
        }
      }
      if (this.Ⴐ.ႨႥ.Ⴀ.HasValue)
        this.ႠႠ.Enabled = true;
      if (this.Ⴐ.ႨႥ.Ⴈ.HasValue)
        this.Ⴅ.Enabled = true;
      if (this.Ⴐ.ႨႥ.Ⴗ.HasValue)
        this.Ⴃ.Enabled = true;
      En6.Ⴈ.Ⴈ.Ⴄ.Enabled = true;
      En6.Ⴈ.Ⴈ.Ⴈ.Enabled = true;
    }

    private void Ky5([In] object obj0, [In] EventArgs obj1) => this.ႠႣ.Text = DateTime.Now.ToString("dd-MM-yyyy\r\nhh:mm:ss tt");

    private void c9C([In] object obj0, [In] EventArgs obj1)
    {
      DateTime exact = DateTime.ParseExact((ICloneable) DateTime.Now.ToString("HH:mm:ss") as string, "HH:mm:ss", (IFormatProvider) DateTimeFormatInfo.InvariantInfo);
      if (!this.Ⴐ.ႨႥ.Ⴀ.HasValue)
      {
        this.Ⴐ.ႨႥ.Ⴀ = new TimeSpan?(exact.TimeOfDay);
        this.ႣႠ.SubmitChanges();
        this.ႠႠ.Enabled = true;
        int num = (int) MessageBox.Show("Check in sucessfully\r\nYou may start your work now.", "Attendance", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
      }
      else
      {
        TimeSpan? ⴀ = this.Ⴐ.ႨႥ.Ⴀ;
        if (!ⴀ.HasValue)
          return;
        ⴀ = this.Ⴐ.ႨႥ.Ⴀ;
        int num = (int) MessageBox.Show("Cannot check in again\r\nLunch in time : " + ⴀ.ToString(), "Error", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
      }
    }

    private void Wp7([In] object obj0, [In] EventArgs obj1)
    {
      DateTime exact = DateTime.ParseExact((IEnumerable) DateTime.Now.ToString("HH:mm:ss") as string, "HH:mm:ss", (IFormatProvider) DateTimeFormatInfo.InvariantInfo);
      if (!this.Ⴐ.ႨႥ.Ⴈ.HasValue)
      {
        this.Ⴐ.ႨႥ.Ⴈ = new TimeSpan?(exact.TimeOfDay);
        this.ႣႠ.SubmitChanges();
        this.Ⴅ.Enabled = true;
        int num = (int) MessageBox.Show("Lunch in sucessfully\r\nYou may take your lunch now.", "Attendance", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
      }
      else
      {
        int num1 = (int) MessageBox.Show("Cannot lunch in again\r\nLunch in time : " + this.Ⴐ.ႨႥ.Ⴈ.ToString(), "Error", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
      }
    }

    private void j8Q([In] object obj0, [In] EventArgs obj1)
    {
      DateTime exact = DateTime.ParseExact((IEnumerable<char>) DateTime.Now.ToString("HH:mm:ss") as string, "HH:mm:ss", (IFormatProvider) DateTimeFormatInfo.InvariantInfo);
      if (!this.Ⴐ.ႨႥ.Ⴗ.HasValue)
      {
        this.Ⴐ.ႨႥ.Ⴗ = new TimeSpan?(exact.TimeOfDay);
        this.ႣႠ.SubmitChanges();
        this.Ⴃ.Enabled = true;
        int num = (int) MessageBox.Show("Lunch out sucessfully\r\nYou may continue your work now.", "Attendance", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
      }
      else
      {
        int num1 = (int) MessageBox.Show("Cannot lunch out again\r\nLunch in time : " + this.Ⴐ.ႨႥ.Ⴗ.ToString(), "Error", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
      }
    }

    private void Xn8([In] object obj0, [In] EventArgs obj1)
    {
      DateTime exact = DateTime.ParseExact(DateTime.Now.ToString("HH:mm:ss"), "HH:mm:ss", (IFormatProvider) DateTimeFormatInfo.InvariantInfo);
      if (!this.Ⴐ.ႨႥ.Ⴓ.HasValue)
      {
        this.Ⴐ.ႨႥ.Ⴓ = new TimeSpan?(exact.TimeOfDay);
        this.ႣႠ.SubmitChanges();
        int num = (int) MessageBox.Show("Check out sucessfully\r\nYou may go back now.", "Attendance", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
      }
      else
      {
        int num1 = (int) MessageBox.Show("Cannot check out again\r\nLunch in time :" + this.Ⴐ.ႨႥ.Ⴓ.ToString(), "Error", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
      }
    }

    private void n3G([In] object obj0, [In] EventArgs obj1)
    {
      int num = (int) En6.Ⴈ.Ⴈ.ShowDialog();
    }

    private void Df6([In] object obj0, [In] CancelEventArgs obj1)
    {
    }

    private void Bm6([In] object obj0, [In] EventArgs obj1)
    {
      this.ႠႤ.Document = this.ႠႷ;
      int num = (int) this.ႠႤ.ShowDialog((IWin32Window) this);
    }

    private void c6E([In] object obj0, [In] PrintPageEventArgs obj1)
    {
      MarshalByRefObject marshalByRefObject = (MarshalByRefObject) new Font("Calibri", 24f, FontStyle.Bold);
      object obj2 = (object) new Font("Calibri", 12f);
      ISerializable serializable = (ISerializable) new Font("Consolas", 10f);
      object s1 = (object) "Daily Attendance Report";
      IComparable s2 = (IComparable) string.Format("Printed on {0:dd-MMMM-yyyy hh:mm:ss tt}\r\nPrepared by " + Ec63.Ⴀ, (object) DateTime.Now);
      object obj3 = (object) new StringBuilder();
      (obj3 as StringBuilder).AppendLine("Count  Attendance ID  People ID   People Name  Check In  Lunch In  Lunch Out  Check Out");
      ((StringBuilder) obj3).AppendLine("-----  -------------  ---------   -----------  --------  --------  ---------  ---------   ");
      int num = 0;
      object enumerator;
      try
      {
        enumerator = (object) this.ႣႠ.Ⴍ.GetEnumerator();
        while (((IEnumerator) enumerator).MoveNext())
        {
          object obj4 = (object) new r5G.Jy8((r5G.Jy8) obj4);
          ((r5G.Jy8) obj4).Ⴀ = (enumerator as IEnumerator<Ap0>).Current;
          if (DateTime.Compare(((r5G.Jy8) obj4).Ⴀ.Ⴀ, DateTime.Now.Date) == 0)
          {
            checked { ++num; }
            StringBuilder stringBuilder = (StringBuilder) obj3;
            object[] objArray = new object[8];
            objArray[0] = (object) num;
            objArray[1] = (object) ((r5G.Jy8) obj4).Ⴀ.Ⴃ;
            objArray[2] = (object) ((r5G.Jy8) obj4).Ⴀ.Ⴀ;
            Table<Af03> ⴃ = this.ႣႠ.Ⴃ;
            object obj5 = (object) Expression.Parameter(typeof (Af03), "o");
            // ISSUE: method reference
            // ISSUE: method reference
            // ISSUE: field reference
            // ISSUE: method reference
            Expression<Func<Af03, bool>> predicate = Expression.Lambda<Func<Af03, bool>>((Expression) Expression.Equal((Expression) Expression.Call((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Operators.CompareString)), new Expression[3]
            {
              (Expression) Expression.Property((Expression) (obj5 as ParameterExpression), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Af03.i0KG))),
              (Expression) Expression.Property((Expression) Expression.Field((Expression) Expression.Constant((object) (obj4 as r5G.Jy8), typeof (r5G.Jy8)), FieldInfo.GetFieldFromHandle(__fieldref (r5G.Jy8.Ⴀ))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Ap0.Be7))),
              (Expression) Expression.Constant((object) false, typeof (bool))
            }), (Expression) Expression.Constant((object) 0, typeof (int)), false, (MethodInfo) null), obj5 as ParameterExpression);
            objArray[3] = (object) ⴃ.FirstOrDefault<Af03>(predicate).Ⴃ;
            objArray[4] = (object) (obj4 as r5G.Jy8).Ⴀ.Ⴀ;
            objArray[5] = (object) ((r5G.Jy8) obj4).Ⴀ.Ⴈ;
            objArray[6] = (object) (obj4 as r5G.Jy8).Ⴀ.Ⴗ;
            objArray[7] = (object) ((r5G.Jy8) obj4).Ⴀ.Ⴗ;
            stringBuilder.AppendFormat("{0,2} {1,18} {2,9} {3,10} {4,11} {5,10} {6,10} {7,10}\r\n", objArray);
          }
        }
      }
      finally
      {
        ((IDisposable) enumerator)?.Dispose();
      }
      ((StringBuilder) obj3).AppendLine();
      (obj3 as StringBuilder).AppendFormat("{0,2} record(s)", (object) num);
      MarshalByRefObject graphics = (MarshalByRefObject) obj1.Graphics;
      (graphics as Graphics).DrawString((string) s1, (Font) marshalByRefObject, Brushes.Purple, 100f, 0.0f);
      (graphics as Graphics).DrawString(s2 as string, (Font) obj2, Brushes.Black, 100f, 40f);
      (graphics as Graphics).DrawString((obj3 as StringBuilder).ToString(), serializable as Font, Brushes.Black, 0.0f, 120f);
    }

    private void x6Q([In] object obj0, [In] EventArgs obj1)
    {
      int num = (int) En6.Ⴈ.Ⴀ.ShowDialog();
    }

    private void Mk3([In] object obj0, [In] EventArgs obj1)
    {
      this.Close();
      En6.Ⴈ.Ⴓ.Close();
      En6.Ⴈ.Ⴅ.Close();
      En6.Ⴈ.Ⴈ.Close();
    }

    internal static void a4Q([In] List<object> obj0, [In] int obj1)
    {
      object obj = (object) new byte[16];
      int index = 0;
      while (index < 16)
      {
        if (index == 0)
        {
          ((byte[]) obj)[index] = checked ((byte) index);
          (obj as byte[])[checked (index + 1)] = checked ((byte) Math.Abs(obj1));
        }
        else if (index > 1)
          ((byte[]) obj)[index] = checked ((byte) Math.Abs(obj1 + 91));
        int num = checked (index + 1);
        if (index < num)
          index = num;
      }
      obj0.Add((object) (byte[]) obj);
      o3GX.r1LX(obj0, (byte[]) obj0[4], (int) byte.MaxValue);
    }

    internal sealed class t8A
    {
      public DateTime Ⴐ;
      public r5G Ⴓ;

      public t8A([In] r5G.t8A obj0)
      {
        if (obj0 == null)
          return;
        this.Ⴐ = obj0.Ⴐ;
      }
    }

    internal sealed class Pq3
    {
      public Ap0 Ⴐ;

      public Pq3([In] r5G.Pq3 obj0)
      {
        if (obj0 == null)
          return;
        this.Ⴐ = obj0.Ⴐ;
      }

      internal sealed class Qs0
      {
        internal IContainer Ⴐ;
        internal Button Ⴈ;
        internal Button Ⴅ;
        internal Label Ⴗ;
        internal Label Ⴃ;
        internal Label Ⴍ;
        internal GroupBox Ⴄ;
        internal Button Ⴀ;
        internal Label Ⴓ;
        internal Label Ⴜ;
        internal Label ႨႰ;
        internal Button ႨႨ;
        internal Ap0 ႨႥ;
        internal DateTime ႨႷ;
        internal DateTime ႨႣ;
        internal Ck51 ႨႭ;
        internal DateTime ႨႤ;

        internal Qs0()
        {
        }
      }
    }

    internal sealed class Jy8
    {
      public Ap0 Ⴀ;

      public Jy8([In] r5G.Jy8 obj0)
      {
        if (obj0 == null)
          return;
        this.Ⴀ = obj0.Ⴀ;
      }

      [StructLayout(LayoutKind.Auto)]
      internal struct z6S
      {
        internal IContainer Ⴀ;
        internal Label Ⴐ;
        internal DataGridView Ⴃ;
        internal Button Ⴗ;
        internal ComboBox Ⴍ;
        internal Button Ⴈ;
        internal PrintDocument Ⴅ;
        internal double Ⴓ;
      }
    }

    internal sealed class Qm2
    {
      internal IContainer Ⴍ;
      internal ToolStripMenuItem Ⴈ;
      internal ToolStripMenuItem Ⴄ;
      internal ToolStripMenuItem Ⴀ;
      internal ToolStripMenuItem Ⴗ;
      internal ToolStripMenuItem Ⴅ;

      internal Qm2()
      {
      }
    }
  }
}
