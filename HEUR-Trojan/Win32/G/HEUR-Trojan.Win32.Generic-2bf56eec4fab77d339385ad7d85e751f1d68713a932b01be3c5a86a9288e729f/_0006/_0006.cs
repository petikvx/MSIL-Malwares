// Decompiled with JetBrains decompiler
// Type: .
// Assembly: serLoader, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: EB10F7D0-661D-4A45-B90F-D464336E900E
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\HEUR-Trojan.Win32.Generic-2bf56eec4fab77d339385ad7d85e751f1d68713a932b01be3c5a86a9288e729f.exe

using \u0001;
using \u0006;
using \u000E;
using Microsoft.Win32;
using System;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace \u0006
{
  internal sealed class \u0006 : \u0006.\u0001
  {
    internal static readonly string \u0001;
    internal static readonly string \u0002;
    private static bool? \u0001;

    public static void \u0003([In] uint obj0)
    {
      \u0006.\u0006 obj1;
      try
      {
        obj1 = new \u0006.\u0006();
        obj1.\u0002(obj0);
      }
      catch (Exception ex)
      {
        \u0006.\u0006 obj2 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<uint> local = (ValueType) obj0;
        \u0002.\u0002(ex, (object) obj2, (object) local);
        throw;
      }
    }

    public static void \u0003([In] string obj0)
    {
      \u0006.\u0006 obj1;
      try
      {
        obj1 = new \u0006.\u0006();
        obj1.\u0002(obj0);
      }
      catch (Exception ex)
      {
        \u0006.\u0006 obj2 = obj1;
        string str = obj0;
        \u0002.\u0002(ex, (object) obj2, (object) str);
        throw;
      }
    }

    protected override void \u0002([In] \u0002 obj0)
    {
      try
      {
        obj0.\u0003();
      }
      catch (Exception ex)
      {
        \u0002 obj = obj0;
        \u0002.\u0002(ex, (object) this, (object) obj);
        throw;
      }
    }

    protected override bool \u0002()
    {
      try
      {
        return \u0006.\u0006.\u0003();
      }
      catch (Exception ex)
      {
        \u0002.\u0002(ex, (object) this);
        throw;
      }
    }

    private static bool \u0003()
    {
      try
      {
        if (!\u0006.\u0006.\u0001.HasValue)
          goto label_2;
label_1:
        return \u0006.\u0006.\u0001.Value;
label_2:
        \u0006.\u0006.\u0003();
        goto label_1;
      }
      catch (Exception ex)
      {
        \u0002.\u0002(ex);
        throw;
      }
    }

    private static void \u0003()
    {
      string str1;
      RegistryKey registryKey1;
      object obj1;
      bool flag;
      try
      {
        registryKey1 = (RegistryKey) null;
        try
        {
          string str2 = \u0008.\u0002(3148) + \u0006.\u0006.\u0002 + \u0008.\u0002(3161) + \u0006.\u0006.\u0001;
          if (true)
            goto label_5;
label_2:
          registryKey1 = \u0012\u0005.\u007E\u0016\u0006((object) Registry.CurrentUser, str1);
          obj1 = \u0013\u0005.\u007E\u0018\u0006((object) registryKey1, \u0008.\u0002(3166));
          if (obj1 == null)
          {
            \u0015\u0005.\u007E\u001A\u0006((object) registryKey1, \u0008.\u0002(3166), (object) bool.FalseString);
            flag = \u0006.\u0006.\u0004();
            \u0016\u0005.\u007E\u001B\u0006((object) registryKey1, \u0008.\u0002(3166), (object) flag.ToString(), RegistryValueKind.String);
            \u0006.\u0006.\u0001 = new bool?(flag);
            return;
          }
          \u0006.\u0006.\u0001 = new bool?(\u001F\u0003.\u009F\u0002(obj1));
          return;
label_5:
          str1 = str2;
          goto label_2;
        }
        catch
        {
          \u0006.\u0006.\u0001 = new bool?(false);
        }
        finally
        {
          if (registryKey1 != null)
            \u0013\u0003.\u007E\u0015\u0006((object) registryKey1);
        }
      }
      catch (Exception ex)
      {
        RegistryKey registryKey2 = registryKey1;
        string str3 = str1;
        object obj2 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<bool> local = (ValueType) flag;
        \u0002.\u0002(ex, (object) registryKey2, (object) str3, obj2, (object) local);
        throw;
      }
    }

    private static bool \u0004()
    {
      \u0004 obj1;
      bool flag;
      try
      {
        obj1 = new \u0004();
        try
        {
          int num = (int) obj1.ShowDialog();
          flag = \u001C\u0006.\u007E\u000E\u000E((object) obj1) == DialogResult.Yes;
        }
        finally
        {
          if (obj1 != null)
            \u0013\u0003.\u007E\u008D((object) obj1);
        }
        return flag;
      }
      catch (Exception ex)
      {
        \u0004 obj2 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<bool> local = (ValueType) flag;
        \u0002.\u0002(ex, (object) obj2, (object) local);
        throw;
      }
    }

    public \u0006()
    {
      try
      {
      }
      catch (Exception ex)
      {
        \u0002.\u0002(ex, (object) this);
        throw;
      }
    }

    static \u0006()
    {
      try
      {
        \u0006.\u0006.\u0001 = \u0008.\u0002(3199);
        \u0006.\u0006.\u0002 = \u0008.\u0002(3216);
      }
      catch (Exception ex)
      {
        \u0002.\u0002(ex);
        throw;
      }
    }
  }
}
