// Decompiled with JetBrains decompiler
// Type: SimpleChessApp.Game.SimpleSquare
// Assembly: طv, Version=2.159.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8DDF840D-AD0E-4D2F-A03C-7E334C2C97A3
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.01-msil\HEUR-Trojan-Ransom.MSIL.Makop.gen-2abb16d594f4b36fc8b8aab8cab7736350421c619cec8e12e8975e87f7a99faa.exe

using System;
using System.ComponentModel;
using System.Drawing;
using System.Runtime.InteropServices;
using System.Threading;
using System.Windows.Forms;

namespace SimpleChessApp.Game
{
  public class SimpleSquare : UserControl
  {
    private Color DefaultColor;
    private ChessPiece piece;
    private bool isBlackSquare;
    private IContainer components = (IContainer) null;
    public Panel panel1;

    public event EventHandler<MouseEventArgs> Click
    {
      add
      {
        EventHandler<MouseEventArgs> eventHandler1 = this.Click;
label_1:
        int num1 = 209633455;
        EventHandler<MouseEventArgs> eventHandler2;
        EventHandler<MouseEventArgs> comparand;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1757684252)) % 6U)
          {
            case 0:
              eventHandler2 = (EventHandler<MouseEventArgs>) SimpleSquare.\u206D⁮‫‬‎‏⁫‪​‭​⁪‫‏⁭⁫‪⁪⁫‬‬‬‏⁮‭‎​‬⁬⁬‍​‮‭‫‏‌‌​‏‮((Delegate) comparand, (Delegate) value);
              num1 = (int) num2 * -2023702078 ^ -1274595;
              continue;
            case 1:
              comparand = eventHandler1;
              num1 = 1053797162;
              continue;
            case 2:
              int num3 = eventHandler1 == comparand ? -261492227 : (num3 = -1131206233);
              num1 = num3 ^ (int) num2 * 188110251;
              continue;
            case 3:
              eventHandler1 = Interlocked.CompareExchange<EventHandler<MouseEventArgs>>(ref this.Click, eventHandler2, comparand);
              num1 = (int) num2 * 2015546381 ^ 1268644365;
              continue;
            case 4:
              goto label_1;
            case 5:
              goto label_3;
            default:
              goto label_8;
          }
        }
label_3:
        return;
label_8:;
      }
      remove
      {
        EventHandler<MouseEventArgs> eventHandler = this.Click;
label_1:
        int num1 = 1951976008;
        EventHandler<MouseEventArgs> comparand;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1915988055)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              int num3 = eventHandler == comparand ? 1144871106 : (num3 = 71540744);
              num1 = num3 ^ (int) num2 * -1435768712;
              continue;
            case 2:
              comparand = eventHandler;
              num1 = 1099519164;
              continue;
            case 3:
              goto label_3;
            case 4:
              eventHandler = Interlocked.CompareExchange<EventHandler<MouseEventArgs>>(ref this.Click, (EventHandler<MouseEventArgs>) SimpleSquare.\u202E‌⁬‫‫⁪⁭‮‬‪‌‏⁪‮⁬‎‎‏⁮‬⁪⁭⁭‮‭‮⁬⁭⁯‎⁮‪‭⁯‮‫⁯‌⁮‮‮((Delegate) comparand, (Delegate) value), comparand);
              num1 = (int) num2 * 1594186320 ^ 342999327;
              continue;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
    }

    public ChessPiece Piece
    {
      get
      {
label_1:
        int num1 = 122177992;
        ChessPiece piece;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1597218047)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              piece = this.piece;
              num1 = (int) num2 * -788076687 ^ -1233061692;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return piece;
      }
      set
      {
        this.piece = value;
label_1:
        int num1 = -1927621345;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1007852760)) % 9U)
          {
            case 0:
              num1 = (int) num2 * -2126343509 ^ -35577912;
              continue;
            case 1:
              goto label_3;
            case 2:
              this.piece = (ChessPiece) null;
              SimpleSquare.\u206E​⁫⁬‎‏⁪⁯‭‫‍​‭⁮⁭‬‪‭‫⁯‎‫‭​‭‮⁬‬‌‎‍⁪​‪‏‫​‍‌‏‮((Control) this, (Image) null);
              num1 = (int) num2 * 1679352206 ^ 1294395175;
              continue;
            case 3:
              goto label_1;
            case 4:
              num1 = (int) num2 * -821149625 ^ 1756576048;
              continue;
            case 5:
              num1 = (int) num2 * 1502643520 ^ 1756463812;
              continue;
            case 6:
              num1 = (int) num2 * -541998817 ^ -239181219;
              continue;
            case 7:
              int num3 = this.piece == null ? -2041453624 : (num3 = -734182187);
              num1 = num3 ^ (int) num2 * 1547204609;
              continue;
            case 8:
              SimpleSquare.\u206E​⁫⁬‎‏⁪⁯‭‫‍​‭⁮⁭‬‪‭‫⁯‎‫‭​‭‮⁬‬‌‎‍⁪​‪‏‫​‍‌‏‮((Control) this, this.repo.GetPiece(this.piece.Kind, this.piece.Color));
              num1 = -1467038974;
              continue;
            default:
              goto label_11;
          }
        }
label_3:
        return;
label_11:;
      }
    }

    public void colorSquare()
    {
label_1:
      int num1 = -1846091420;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1067490338)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            SimpleSquare.\u202E⁫⁭⁪‏‭‎‎‭‫​‌⁬⁫​⁪‭‏‬‏‍‪‏‮⁮​⁫‫‍⁪‭⁭⁭⁮⁮‬⁬⁭‫‎‮((Control) this, this.DefaultColor);
            num1 = (int) num2 * 258783104 ^ 768110545;
            continue;
          case 2:
            this.DefaultColor = this.IsBlackSquare ? Color.CornflowerBlue : Color.WhiteSmoke;
            num1 = -2131899405;
            continue;
          case 3:
            goto label_3;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public Pieces Kind
    {
      set
      {
        this.Piece.Kind = value;
label_1:
        int num1 = 1278305;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 635668716)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Piece = this.Piece;
              num1 = (int) num2 * 957854088 ^ 694955376;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public bool IsBlackSquare
    {
      get => this.isBlackSquare;
      set
      {
label_1:
        int num1 = 1688037559;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 164562145)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              this.isBlackSquare = value;
              this.colorSquare();
              num1 = (int) num2 * 1575114921 ^ 1906474068;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public Repository repo
    {
      get
      {
label_1:
        int num1 = -1254209857;
        Repository repo;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -498367950)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 1659364060 ^ -441667435;
              continue;
            case 1:
              repo = ChessContext.repo;
              num1 = (int) num2 * -1022001928 ^ -713252266;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return repo;
      }
    }

    public SimpleSquare()
    {
      this.InitializeComponent();
      SimpleSquare.\u202A​‭‪‌‍​​‌⁫‏⁭​‫⁬⁪⁬‬⁬‌​​​‏‮‏‭⁭‫‮‏‭⁯‏​‍‎⁯‌‪‮((Control) this, new MouseEventHandler(this.Square_MouseClick));
      SimpleSquare.\u200F⁭​‪‎‏⁭‭⁭‎‪⁮​⁭‏⁮⁪‪⁭⁪⁫⁬‪‎‭‎​‏‪⁮⁬⁯‫‌​⁭⁯‏‫‬‮((Control) this.panel1, new MouseEventHandler(this.Square_MouseClick));
    }

    private void Square_MouseClick(object sender, MouseEventArgs e)
    {
      EventHandler<MouseEventArgs> click = this.Click;
      if (click == null)
        return;
      click((object) this, e);
label_3:
      int num1 = -1132744592;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1316301651)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            goto label_6;
          case 2:
            num1 = (int) num2 * 1902783227 ^ 1270895583;
            continue;
          default:
            goto label_7;
        }
      }
label_6:
      return;
label_7:;
    }

    public void HighLight()
    {
label_1:
      int num1 = -1398491446;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1040012132)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            SimpleSquare.\u202E⁫⁭⁪‏‭‎‎‭‫​‌⁬⁫​⁪‭‏‬‏‍‪‏‮⁮​⁫‫‍⁪‭⁭⁭⁮⁮‬⁬⁭‫‎‮((Control) this, Color.ForestGreen);
            num1 = (int) num2 * -576287806 ^ -1976299948;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public void ClearHighLight()
    {
label_1:
      int num1 = -887795168;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1732928340)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            SimpleSquare.\u202E⁫⁭⁪‏‭‎‎‭‫​‌⁬⁫​⁪‭‏‬‏‍‪‏‮⁮​⁫‫‍⁪‭⁭⁭⁮⁮‬⁬⁭‫‎‮((Control) this, this.DefaultColor);
            num1 = (int) num2 * -1659248756 ^ 1562252927;
            continue;
          case 2:
            goto label_3;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public bool IsEmpty => this.Piece == null;

    protected override void Dispose(bool disposing)
    {
      if (!disposing)
        goto label_5;
label_1:
      int num1 = 453359625;
label_2:
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 32886259)) % 9U)
        {
          case 0:
            num1 = (int) num2 * -756088717 ^ -1631380780;
            continue;
          case 1:
            num1 = (int) num2 * -202051458 ^ 22024498;
            continue;
          case 2:
            goto label_1;
          case 3:
            goto label_4;
          case 4:
            SimpleSquare.\u202B⁬​​‍⁭‫⁬‏‮⁭⁯‪‏‫⁬⁭‬‌‫⁫‫⁭⁬​‍‍⁭⁫‮‎⁮⁪‮‪⁭‪⁮‫‍‮((IDisposable) this.components);
            num1 = (int) num2 * 1498693433 ^ -186209533;
            continue;
          case 5:
            goto label_3;
          case 6:
            num1 = (int) num2 * -1145468605 ^ -896233498;
            continue;
          case 7:
            base.Dispose(disposing);
            num1 = 1785843515;
            continue;
          case 8:
            int num3 = !flag ? 441889639 : (num3 = 1219931859);
            num1 = num3 ^ (int) num2 * -1492939970;
            continue;
          default:
            goto label_13;
        }
      }
label_3:
      return;
label_13:
      return;
label_4:
      int num4 = this.components != null ? 1 : 0;
      goto label_6;
label_5:
      num4 = 0;
label_6:
      flag = num4 != 0;
      num1 = 849737775;
      goto label_2;
    }

    private void InitializeComponent()
    {
label_1:
      int num1 = 63496356;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 787897165)) % 23U)
        {
          case 0:
            SimpleSquare.\u206D⁭⁯‬‬‪‎‪⁮‭‪⁯‬⁫‫⁭⁬‏⁪⁫‎‮⁫‍​⁭⁫‏‬‌‫‎⁪⁫‫⁪‭⁫⁫⁬‮((Control) this.panel1, new Point(0, 0));
            num1 = (int) num2 * -366481584 ^ 1711331937;
            continue;
          case 1:
            SimpleSquare.\u202C‏⁫⁪‪‪⁯‌‌⁮‫‍‏⁬‬⁮⁬‫‭⁬⁭‍‍⁬‭‮⁪⁫‭⁫‫⁪‭⁪‎⁬⁬‮⁫⁮‮(SimpleSquare.\u206C⁪⁪‫⁭​‭‬‮‬⁯‬‍⁫‫‭⁮‮‮‫‍⁮​⁮⁫⁪‭​‎⁫⁯‬‌⁬⁭⁪⁮‭⁭‭‮((Control) this), (Control) this.panel1);
            num1 = (int) num2 * -1906061332 ^ 786510271;
            continue;
          case 2:
            num1 = (int) num2 * -1748482531 ^ 1821421084;
            continue;
          case 3:
            SimpleSquare.\u206E⁪⁮⁮‎⁬‫⁪‏‪​‎⁮‏‏⁫​⁮​⁪‭‍‎‎⁪‬‏‫‌‭‬‎‏⁮‮‌‪⁪‎⁭‮((Control) this.panel1, \u003CModule\u003E.\u200E⁫‏⁭‫‪⁪⁬‬‫‪‭‬⁪⁯‮‌‮‪⁯‎⁮‎⁪⁯⁮​⁯‬‌‪‭⁭‫‬‭‪⁭‪‫‮<string>(2291525651U));
            num1 = (int) num2 * 354581902 ^ 469580240;
            continue;
          case 4:
            SimpleSquare.\u200C‎⁭⁭⁮‎⁪‎‬⁯‏‏‌‮‌‌‎​‌⁮‭‏‫⁮‫⁭‫⁬⁮‭‪‎‭‬⁭⁫‍‌⁫‮‮((Control) this.panel1, 0);
            num1 = (int) num2 * 1335676139 ^ 1115955030;
            continue;
          case 5:
            num1 = (int) num2 * 604610830 ^ -284111617;
            continue;
          case 6:
            SimpleSquare.\u202D​⁪⁬⁮‭‍⁭⁪‏‎⁫​‬⁪‪‌‪‮‪⁭⁬​⁬⁬‭⁭‪​‪⁫‌‌‭⁫⁮​‬‍‪‮((Control) this, new Padding(0));
            SimpleSquare.\u206C‪⁪‫⁬‭‬⁬​‫⁪⁮⁮​‍‎⁬‍⁭‮​⁬‭‫‮‌‪‎‬⁪‍‫⁮⁮⁮‬⁪⁫‬⁪‮((Control) this, \u003CModule\u003E.\u206A⁪⁫‍⁫‫⁪‫‮⁮‌‬⁮‬⁮​‪⁪⁭‬⁮‪⁯‬‬⁬⁯‌⁯⁭⁭⁮⁬‎⁪‬⁫‌‍⁯‮<string>(1242704104U));
            num1 = (int) num2 * -925321061 ^ 1291611872;
            continue;
          case 7:
            SimpleSquare.\u200E⁬⁫⁫‫‍‭‬‭⁮‍‏‪‏‬‮‮⁬‬​⁪⁪‎‎⁫⁬‍‎‎‮‌‫⁪⁫‫‏‪⁭​‏‮((Control) this);
            num1 = (int) num2 * 15939205 ^ -1833825824;
            continue;
          case 8:
            num1 = (int) num2 * -551450398 ^ 1308272260;
            continue;
          case 9:
            SimpleSquare.\u206E⁬‫‎‍‎‮⁪‌‌⁬⁮‎‍‏‭‫‭⁫⁯⁭‪​⁮​‬⁬⁬‌‫‮⁮‭‬‏‎⁬‍‍⁫‮((Control) this, new Size(137, 132));
            num1 = (int) num2 * -317679308 ^ 857939387;
            continue;
          case 10:
            SimpleSquare.\u206D⁬‌‍‬‌⁪‎⁪⁫‭‭⁮⁯‎‮‪‎⁪‍⁪⁪‏⁯‫‏‪‍⁯‭‫‏‌​‭​‏‏⁯‭‮((ContainerControl) this, AutoScaleMode.Font);
            num1 = (int) num2 * 1151412046 ^ 162675053;
            continue;
          case 11:
            num1 = (int) num2 * -1441473874 ^ -261264519;
            continue;
          case 12:
            num1 = (int) num2 * 964154621 ^ -2091065872;
            continue;
          case 13:
            goto label_3;
          case 14:
            this.panel1 = SimpleSquare.\u206B‎​⁭‌⁫‌⁬​​⁬‏⁫‬‮‫‎‎‏‮‭‏⁭‍‮⁯⁬‫⁫⁯‪‬‏⁮⁬⁭‮⁬‫‍‮();
            num1 = (int) num2 * 71251347 ^ -1600482126;
            continue;
          case 15:
            SimpleSquare.\u200E‌⁫⁮⁪⁮⁭‬‫⁪⁯‍‮‌⁭‭‫‌⁫⁪‏‭‎‏⁬‮‍⁪‍⁫‫‭⁯‬‍‫‭‭‎‪‮((ContainerControl) this, new SizeF(6f, 13f));
            num1 = (int) num2 * 1780490896 ^ -1862134574;
            continue;
          case 16:
            SimpleSquare.\u202D⁪‮⁬‍⁬⁯⁫​⁬‭‎⁫⁪⁪⁫‭‭‎‌⁬‏‫⁯​​‏⁬‪‭​‬‌‎‬‮‬‫‏‪‮((Control) this.panel1, new Size(137, 132));
            num1 = (int) num2 * 231803248 ^ 688171600;
            continue;
          case 17:
            SimpleSquare.\u202E⁫⁭⁪‏‭‎‎‭‫​‌⁬⁫​⁪‭‏‬‏‍‪‏‮⁮​⁫‫‍⁪‭⁭⁭⁮⁮‬⁬⁭‫‎‮((Control) this.panel1, Color.Transparent);
            SimpleSquare.\u200D⁫‫‌​⁬‮​⁯⁬⁮⁬⁯‭⁮⁯⁯​‏⁭⁪⁭​‫⁪‪⁮‌‌​⁫‍‌‎⁬‫⁯‪⁫‏‮((Control) this.panel1, ImageLayout.Center);
            num1 = (int) num2 * 475857802 ^ 457295933;
            continue;
          case 18:
            SimpleSquare.\u200D⁫‫‌​⁬‮​⁯⁬⁮⁬⁯‭⁮⁯⁯​‏⁭⁪⁭​‫⁪‪⁮‌‌​⁫‍‌‎⁬‫⁯‪⁫‏‮((Control) this, ImageLayout.Center);
            num1 = (int) num2 * -205744850 ^ 1923466163;
            continue;
          case 19:
            SimpleSquare.\u202B⁭‏‭⁯⁯‮‏‮‍‍​‮⁭⁮​‏‏‬‏⁪‪‭‭⁪‮‪‫​‮⁬⁫‪⁪⁭‪‮‏​⁬‮((Control) this, false);
            num1 = (int) num2 * 1955147711 ^ -1284631367;
            continue;
          case 20:
            num1 = (int) num2 * -300669275 ^ -772861292;
            continue;
          case 21:
            goto label_1;
          case 22:
            SimpleSquare.\u206D⁮⁯​⁭‌‬‏‍‭⁮‏‬‪‎‏⁪‫⁮‫‬‎​⁪​​⁯‏​⁬⁭⁭⁮⁬‌⁫‫‍‌‭‮((Control) this.panel1, DockStyle.Fill);
            num1 = (int) num2 * -318216209 ^ -1611003001;
            continue;
          default:
            goto label_25;
        }
      }
label_3:
      return;
label_25:;
    }

    static Delegate \u206D⁮‫‬‎‏⁫‪​‭​⁪‫‏⁭⁫‪⁪⁫‬‬‬‏⁮‭‎​‬⁬⁬‍​‮‭‫‏‌‌​‏‮(
      [In] Delegate obj0,
      [In] Delegate obj1)
    {
      return Delegate.Combine(obj0, obj1);
    }

    static Delegate \u202E‌⁬‫‫⁪⁭‮‬‪‌‏⁪‮⁬‎‎‏⁮‬⁪⁭⁭‮‭‮⁬⁭⁯‎⁮‪‭⁯‮‫⁯‌⁮‮‮(
      [In] Delegate obj0,
      [In] Delegate obj1)
    {
      return Delegate.Remove(obj0, obj1);
    }

    static void \u206E​⁫⁬‎‏⁪⁯‭‫‍​‭⁮⁭‬‪‭‫⁯‎‫‭​‭‮⁬‬‌‎‍⁪​‪‏‫​‍‌‏‮([In] Control obj0, [In] Image obj1) => obj0.BackgroundImage = obj1;

    static void \u202E⁫⁭⁪‏‭‎‎‭‫​‌⁬⁫​⁪‭‏‬‏‍‪‏‮⁮​⁫‫‍⁪‭⁭⁭⁮⁮‬⁬⁭‫‎‮([In] Control obj0, [In] Color obj1) => obj0.BackColor = obj1;

    static void \u202A​‭‪‌‍​​‌⁫‏⁭​‫⁬⁪⁬‬⁬‌​​​‏‮‏‭⁭‫‮‏‭⁯‏​‍‎⁯‌‪‮([In] Control obj0, [In] MouseEventHandler obj1) => obj0.MouseClick += obj1;

    static void \u200F⁭​‪‎‏⁭‭⁭‎‪⁮​⁭‏⁮⁪‪⁭⁪⁫⁬‪‎‭‎​‏‪⁮⁬⁯‫‌​⁭⁯‏‫‬‮([In] Control obj0, [In] MouseEventHandler obj1) => obj0.MouseClick += obj1;

    static void \u202B⁬​​‍⁭‫⁬‏‮⁭⁯‪‏‫⁬⁭‬‌‫⁫‫⁭⁬​‍‍⁭⁫‮‎⁮⁪‮‪⁭‪⁮‫‍‮([In] IDisposable obj0) => obj0.Dispose();

    static Panel \u206B‎​⁭‌⁫‌⁬​​⁬‏⁫‬‮‫‎‎‏‮‭‏⁭‍‮⁯⁬‫⁫⁯‪‬‏⁮⁬⁭‮⁬‫‍‮() => new Panel();

    static void \u200E⁬⁫⁫‫‍‭‬‭⁮‍‏‪‏‬‮‮⁬‬​⁪⁪‎‎⁫⁬‍‎‎‮‌‫⁪⁫‫‏‪⁭​‏‮([In] Control obj0) => obj0.SuspendLayout();

    static void \u200D⁫‫‌​⁬‮​⁯⁬⁮⁬⁯‭⁮⁯⁯​‏⁭⁪⁭​‫⁪‪⁮‌‌​⁫‍‌‎⁬‫⁯‪⁫‏‮([In] Control obj0, [In] ImageLayout obj1) => obj0.BackgroundImageLayout = obj1;

    static void \u206D⁮⁯​⁭‌‬‏‍‭⁮‏‬‪‎‏⁪‫⁮‫‬‎​⁪​​⁯‏​⁬⁭⁭⁮⁬‌⁫‫‍‌‭‮([In] Control obj0, [In] DockStyle obj1) => obj0.Dock = obj1;

    static void \u206D⁭⁯‬‬‪‎‪⁮‭‪⁯‬⁫‫⁭⁬‏⁪⁫‎‮⁫‍​⁭⁫‏‬‌‫‎⁪⁫‫⁪‭⁫⁫⁬‮([In] Control obj0, [In] Point obj1) => obj0.Location = obj1;

    static void \u206E⁪⁮⁮‎⁬‫⁪‏‪​‎⁮‏‏⁫​⁮​⁪‭‍‎‎⁪‬‏‫‌‭‬‎‏⁮‮‌‪⁪‎⁭‮([In] Control obj0, [In] string obj1) => obj0.Name = obj1;

    static void \u202D⁪‮⁬‍⁬⁯⁫​⁬‭‎⁫⁪⁪⁫‭‭‎‌⁬‏‫⁯​​‏⁬‪‭​‬‌‎‬‮‬‫‏‪‮([In] Control obj0, [In] Size obj1) => obj0.Size = obj1;

    static void \u200C‎⁭⁭⁮‎⁪‎‬⁯‏‏‌‮‌‌‎​‌⁮‭‏‫⁮‫⁭‫⁬⁮‭‪‎‭‬⁭⁫‍‌⁫‮‮([In] Control obj0, [In] int obj1) => obj0.TabIndex = obj1;

    static void \u200E‌⁫⁮⁪⁮⁭‬‫⁪⁯‍‮‌⁭‭‫‌⁫⁪‏‭‎‏⁬‮‍⁪‍⁫‫‭⁯‬‍‫‭‭‎‪‮([In] ContainerControl obj0, [In] SizeF obj1) => obj0.AutoScaleDimensions = obj1;

    static void \u206D⁬‌‍‬‌⁪‎⁪⁫‭‭⁮⁯‎‮‪‎⁪‍⁪⁪‏⁯‫‏‪‍⁯‭‫‏‌​‭​‏‏⁯‭‮(
      [In] ContainerControl obj0,
      [In] AutoScaleMode obj1)
    {
      obj0.AutoScaleMode = obj1;
    }

    static Control.ControlCollection \u206C⁪⁪‫⁭​‭‬‮‬⁯‬‍⁫‫‭⁮‮‮‫‍⁮​⁮⁫⁪‭​‎⁫⁯‬‌⁬⁭⁪⁮‭⁭‭‮(
      [In] Control obj0)
    {
      return obj0.Controls;
    }

    static void \u202C‏⁫⁪‪‪⁯‌‌⁮‫‍‏⁬‬⁮⁬‫‭⁬⁭‍‍⁬‭‮⁪⁫‭⁫‫⁪‭⁪‎⁬⁬‮⁫⁮‮(
      [In] Control.ControlCollection obj0,
      [In] Control obj1)
    {
      obj0.Add(obj1);
    }

    static void \u202D​⁪⁬⁮‭‍⁭⁪‏‎⁫​‬⁪‪‌‪‮‪⁭⁬​⁬⁬‭⁭‪​‪⁫‌‌‭⁫⁮​‬‍‪‮([In] Control obj0, [In] Padding obj1) => obj0.Margin = obj1;

    static void \u206C‪⁪‫⁬‭‬⁬​‫⁪⁮⁮​‍‎⁬‍⁭‮​⁬‭‫‮‌‪‎‬⁪‍‫⁮⁮⁮‬⁪⁫‬⁪‮([In] Control obj0, [In] string obj1) => obj0.Name = obj1;

    static void \u206E⁬‫‎‍‎‮⁪‌‌⁬⁮‎‍‏‭‫‭⁫⁯⁭‪​⁮​‬⁬⁬‌‫‮⁮‭‬‏‎⁬‍‍⁫‮([In] Control obj0, [In] Size obj1) => obj0.Size = obj1;

    static void \u202B⁭‏‭⁯⁯‮‏‮‍‍​‮⁭⁮​‏‏‬‏⁪‪‭‭⁪‮‪‫​‮⁬⁫‪⁪⁭‪‮‏​⁬‮([In] Control obj0, [In] bool obj1) => obj0.ResumeLayout(obj1);
  }
}
