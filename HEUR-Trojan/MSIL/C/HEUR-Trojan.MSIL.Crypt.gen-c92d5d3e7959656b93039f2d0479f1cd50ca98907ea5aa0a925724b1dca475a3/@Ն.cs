// Decompiled with JetBrains decompiler
// Type: @Ն
// Assembly: uLqhNaw2rJQahaaHEibmS0F8CAhQ12f0pD0UHJWVCL, Version=9.1.2.0, Culture=neutral, PublicKeyToken=null
// MVID: D212B58E-19EB-4690-837D-62FC76EFC9D2
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-c92d5d3e7959656b93039f2d0479f1cd50ca98907ea5aa0a925724b1dca475a3.exe

using System;
using System.Runtime.CompilerServices;

internal sealed class \u0040Ն
{
  internal static readonly object \u0040ӓ;
  internal static readonly object \u0040Ӕ;
  internal static readonly object \u0040ӕ;
  internal static readonly object \u0040Ӗ;
  internal static readonly object \u0040ӗ;
  internal object \u0040Ә;
  internal object \u0040ә;
  internal int \u0040Ӛ;
  internal int \u0040ӛ;
  internal int \u0040Ӝ;

  [MethodImpl(MethodImplOptions.NoInlining)]
  private \u0040Ն(short[] _param1, int[] _param2, int _param3, int _param4, int _param5)
  {
    int num1 = 3;
    if (\u0040Ն.\u0040ӟ())
      goto label_11;
label_1:
    this.\u0040ӛ = _param4;
    num1 = 2;
label_11:
    while (true)
    {
      switch (num1)
      {
        case 0:
          this.\u0040Ә = (object) _param1;
          num1 = 6;
          continue;
        case 1:
        case 7:
          \u0040Ն.\u0040Ӟ((object) this);
          int num2 = 0;
          num1 = \u0040Ն.\u0040Ӡ() ? num2 : num2;
          continue;
        case 2:
          this.\u0040Ӝ = _param5;
          num1 = 9;
          continue;
        case 3:
          \u0040Ն.\u0040ӝ();
          \u0040Ն.\u0040Ӡ();
          if (!\u0040Ն.\u0040ӟ())
          {
            if (true)
            {
              num1 = 4;
              continue;
            }
            goto case 2;
          }
          else
          {
            num1 = 7;
            continue;
          }
        case 4:
        case 5:
          goto label_1;
        case 6:
          goto label_10;
        case 8:
          goto label_4;
        case 9:
          goto label_5;
        default:
          num1 = 8;
          continue;
      }
    }
label_4:
    this.\u0040Ӛ = _param3;
    goto label_1;
label_10:
    this.\u0040ә = (object) _param2;
    goto label_4;
label_5:;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  static \u0040Ն()
  {
    \u0040Ն.\u0040Ӡ();
    int num = !\u0040Ն.\u0040ӟ() ? 2 : 3;
    while (true)
    {
      switch (num)
      {
        case 0:
        case 3:
          \u0040Ն.\u0040ӝ();
          num = 6;
          continue;
        case 1:
          short[] numArray1 = new short[60];
          // ISSUE: field reference
          \u0040Ն.\u0040ӡ((object) numArray1, __fieldref (\u0040մ.\u0040Ӟ));
          \u0040Ն.\u0040Ӕ = (object) numArray1;
          num = 4;
          continue;
        case 2:
        case 5:
          \u0040Ն.\u0040ӗ = (object) new \u0040Ն((short[]) null, (int[]) \u0040Ղ.\u0040Ӗ, 0, \u0040Յ.\u0040Ӕ, \u0040Յ.\u0040ә);
          if (true)
          {
            num = 8;
            continue;
          }
          goto case 6;
        case 4:
          \u0040Ն.\u0040ӕ = (object) new \u0040Ն((short[]) \u0040Ն.\u0040ӓ, (int[]) \u0040Ղ.\u0040Ӕ, \u0040Յ.\u0040Ӗ + 1, \u0040Յ.\u0040Ә, \u0040Յ.\u0040ӓ);
          goto case 7;
        case 6:
          short[] numArray2 = new short[576];
          // ISSUE: field reference
          \u0040Ն.\u0040ӡ((object) numArray2, __fieldref (\u0040մ.\u0040Ӧ));
          \u0040Ն.\u0040ӓ = (object) numArray2;
          num = 1;
          continue;
        case 7:
          \u0040Ն.\u0040Ӗ = (object) new \u0040Ն((short[]) \u0040Ն.\u0040Ӕ, (int[]) \u0040Ղ.\u0040ӕ, 0, \u0040Յ.\u0040ӕ, \u0040Յ.\u0040ӓ);
          goto case 2;
        case 8:
          goto label_8;
        default:
          if (!\u0040Ն.\u0040Ӡ())
          {
            num = 7;
            continue;
          }
          goto case 0;
      }
    }
label_8:;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӝ() => \u0040ո.\u0040Ӕ();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӟ(object _param0) => _param0.\u002Ector();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040ӟ() => true;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040Ӡ() => false;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӡ(object _param0, RuntimeFieldHandle _param1) => RuntimeHelpers.InitializeArray((Array) _param0, _param1);
}
