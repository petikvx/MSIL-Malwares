// Decompiled with JetBrains decompiler
// Type:  
// Assembly: Environme, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 211E9794-44DD-4AE9-8EEE-7BDBDABF6B96
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\HEUR-Trojan.MSIL.PowerShell.gen-22c4eed50b30a567dc9f1a066e4d30ff4291d9718b391067f83e53e2b307d677.exe

using System;
using System.Collections.Generic;
using System.Globalization;

internal sealed class \u0005\u2000
{
  private readonly List<byte> \u0002 = new List<byte>();
  private readonly List<string> \u0003 = new List<string>();
  private readonly \u0002\u2001 \u0005;
  private readonly Dictionary<string, int> \u0008 = new Dictionary<string, int>();
  private readonly List<\u0005\u2000.\u0005> \u0006 = new List<\u0005\u2000.\u0005>();
  private readonly Stack<\u0005\u2000.\u0002> \u000E = new Stack<\u0005\u2000.\u0002>();
  private int \u000F;

  private \u0005\u2000(IEnumerable<string> _param1)
  {
    foreach (string str in _param1)
      this.\u0002(str.Trim());
    this.\u0002();
    this.\u0005 = new \u0002\u2001(1, this.\u0002.ToArray(), this.\u0003.ToArray());
  }

  public static \u0002\u2001 \u0002(IEnumerable<string> _param0) => new \u0005\u2000(_param0).\u0005;

  private void \u0002(string _param1)
  {
    if (_param1.ToUpper().StartsWith(\u0005\u2003\u2000.\u0002(1582166584)))
      this.\u0002(_param1.Split());
    else if (_param1.ToUpper().StartsWith(\u0005\u2003\u2000.\u0002(1582166583)))
      this.\u0003(_param1.Split());
    else if (_param1.EndsWith(\u0005\u2003\u2000.\u0002(1582166553)))
      this.\u0003(_param1.TrimEnd(':'));
    else
      this.\u0005(\u0005\u2000.\u0002(_param1));
  }

  private void \u0002(string[] _param1)
  {
    string str1 = _param1.Length >= 1 ? _param1[1] : throw new \u000E\u2001(\u0005\u2003\u2000.\u0002(1582166545));
    string str2 = this.\u0002();
    string str3 = this.\u0002();
    List<string> collection1 = new List<string>();
    List<string> collection2 = new List<string>();
    List<string> stringList1 = new List<string>();
    string empty = string.Empty;
    this.\u000E.Push(new \u0005\u2000.\u0002(str1, str2, str3, collection2));
    if (empty != string.Empty)
      collection1.Add(empty);
    this.\u0002(\u0005\u2003\u2000.\u0002(1582166731) + str3);
    this.\u0002(str2 + \u0005\u2003\u2000.\u0002(1582166553));
    if (empty == string.Empty)
      this.\u0002(\u0005\u2003\u2000.\u0002(1582166726) + (collection1.Count + collection2.Count).ToString() + \u0005\u2003\u2000.\u0002(1582167759) + str1);
    else
      this.\u0002(\u0005\u2003\u2000.\u0002(1582166739) + (collection1.Count + collection2.Count).ToString() + \u0005\u2003\u2000.\u0002(1582167759) + collection2.Count.ToString() + \u0005\u2003\u2000.\u0002(1582167759) + str1);
    foreach (string str4 in stringList1)
      this.\u0002(\u0005\u2003\u2000.\u0002(1582166689) + str4);
    List<string> stringList2 = new List<string>((IEnumerable<string>) collection2);
    stringList2.Reverse();
    foreach (string str5 in stringList2)
      this.\u0002(\u0005\u2003\u2000.\u0002(1582166704) + str5);
    List<string> stringList3 = new List<string>((IEnumerable<string>) collection1);
    stringList3.Reverse();
    foreach (string str6 in stringList3)
      this.\u0002(\u0005\u2003\u2000.\u0002(1582166704) + str6);
    this.\u0002(\u0005\u2003\u2000.\u0002(1582166670));
  }

  private string \u0002() => \u0005\u2003\u2000.\u0002(1582166680) + this.\u000F++.ToString();

  private void \u0003(string[] _param1)
  {
    \u0005\u2000.\u0002 obj = this.\u000E.Pop();
    this.\u0002(obj.\u0003 + \u0005\u2003\u2000.\u0002(1582166553));
    this.\u0002(\u0005\u2003\u2000.\u0002(1582166882) + obj.\u0002);
    this.\u0002(\u0005\u2003\u2000.\u0002(1582166704) + obj.\u0005);
    if (obj.\u0008.Count <= 0)
      return;
    this.\u0002(\u0005\u2003\u2000.\u0002(1582166899) + obj.\u0005);
    foreach (string str in obj.\u0008)
      this.\u0002(\u0005\u2003\u2000.\u0002(1582166850) + str);
    this.\u0002(\u0005\u2003\u2000.\u0002(1582166865) + obj.\u0008.Count.ToString());
    this.\u0002(\u0005\u2003\u2000.\u0002(1582166820) + obj.\u0005);
  }

  private void \u0003(string _param1)
  {
    if (this.\u0008.ContainsKey(_param1))
      throw new \u000E\u2001(\u0005\u2003\u2000.\u0002(1582166847) + _param1);
    this.\u0008[_param1] = this.\u0002.Count;
  }

  private void \u0005(string[] _param1)
  {
    int num = _param1.Length - 1;
    string upper = _param1[0].ToUpper();
    Dictionary<string, byte> dictionary1 = new Dictionary<string, byte>()
    {
      {
        \u0005\u2003\u2000.\u0002(1582166811),
        (byte) 0
      },
      {
        \u0005\u2003\u2000.\u0002(1582166670),
        (byte) 1
      },
      {
        \u0005\u2003\u2000.\u0002(1582166805),
        (byte) 5
      },
      {
        \u0005\u2003\u2000.\u0002(1582167012),
        (byte) 6
      },
      {
        \u0005\u2003\u2000.\u0002(1582167038),
        (byte) 7
      },
      {
        \u0005\u2003\u2000.\u0002(1582166984),
        (byte) 8
      },
      {
        \u0005\u2003\u2000.\u0002(1582166978),
        (byte) 9
      },
      {
        \u0005\u2003\u2000.\u0002(1582167004),
        (byte) 10
      },
      {
        \u0005\u2003\u2000.\u0002(1582166999),
        (byte) 13
      },
      {
        \u0005\u2003\u2000.\u0002(1582166945),
        (byte) 18
      },
      {
        \u0005\u2003\u2000.\u0002(1582166972),
        (byte) 21
      },
      {
        \u0005\u2003\u2000.\u0002(1582166923),
        (byte) 22
      },
      {
        \u0005\u2003\u2000.\u0002(1582166939),
        (byte) 24
      },
      {
        \u0005\u2003\u2000.\u0002(1582166935),
        (byte) 25
      },
      {
        \u0005\u2003\u2000.\u0002(1582166115),
        (byte) 26
      },
      {
        \u0005\u2003\u2000.\u0002(1582166143),
        (byte) 27
      },
      {
        \u0005\u2003\u2000.\u0002(1582166091),
        (byte) 30
      },
      {
        \u0005\u2003\u2000.\u0002(1582166106),
        (byte) 31
      },
      {
        \u0005\u2003\u2000.\u0002(1582166103),
        (byte) 32
      },
      {
        \u0005\u2003\u2000.\u0002(1582166051),
        (byte) 33
      },
      {
        \u0005\u2003\u2000.\u0002(1582166079),
        (byte) 34
      },
      {
        \u0005\u2003\u2000.\u0002(1582166029),
        (byte) 36
      },
      {
        \u0005\u2003\u2000.\u0002(1582166042),
        (byte) 37
      },
      {
        \u0005\u2003\u2000.\u0002(1582166249),
        (byte) 38
      },
      {
        \u0005\u2003\u2000.\u0002(1582166246),
        (byte) 39
      },
      {
        \u0005\u2003\u2000.\u0002(1582166258),
        (byte) 41
      },
      {
        \u0005\u2003\u2000.\u0002(1582166209),
        (byte) 42
      },
      {
        \u0005\u2003\u2000.\u0002(1582166224),
        (byte) 43
      },
      {
        \u0005\u2003\u2000.\u0002(1582166191),
        (byte) 44
      },
      {
        \u0005\u2003\u2000.\u0002(1582166192),
        (byte) 45
      },
      {
        \u0005\u2003\u2000.\u0002(1582166156),
        (byte) 46
      },
      {
        \u0005\u2003\u2000.\u0002(1582166170),
        (byte) 47
      },
      {
        \u0005\u2003\u2000.\u0002(1582166166),
        (byte) 48
      },
      {
        \u0005\u2003\u2000.\u0002(1582166372),
        (byte) 49
      },
      {
        \u0005\u2003\u2000.\u0002(1582166385),
        (byte) 50
      },
      {
        \u0005\u2003\u2000.\u0002(1582166350),
        (byte) 51
      },
      {
        \u0005\u2003\u2000.\u0002(1582166366),
        (byte) 53
      },
      {
        \u0005\u2003\u2000.\u0002(1582166315),
        (byte) 54
      },
      {
        \u0005\u2003\u2000.\u0002(1582166330),
        (byte) 55
      },
      {
        \u0005\u2003\u2000.\u0002(1582166283),
        (byte) 56
      },
      {
        \u0005\u2003\u2000.\u0002(1582166279),
        (byte) 57
      },
      {
        \u0005\u2003\u2000.\u0002(1582166293),
        (byte) 58
      },
      {
        \u0005\u2003\u2000.\u0002(1582166497),
        (byte) 59
      },
      {
        \u0005\u2003\u2000.\u0002(1582166527),
        (byte) 60
      },
      {
        \u0005\u2003\u2000.\u0002(1582166478),
        (byte) 61
      },
      {
        \u0005\u2003\u2000.\u0002(1582166493),
        (byte) 62
      },
      {
        \u0005\u2003\u2000.\u0002(1582166442),
        (byte) 63
      },
      {
        \u0005\u2003\u2000.\u0002(1582166458),
        (byte) 64
      },
      {
        \u0005\u2003\u2000.\u0002(1582166408),
        (byte) 65
      },
      {
        \u0005\u2003\u2000.\u0002(1582166407),
        (byte) 66
      },
      {
        \u0005\u2003\u2000.\u0002(1582166422),
        (byte) 67
      },
      {
        \u0005\u2003\u2000.\u0002(1582169701),
        (byte) 68
      },
      {
        \u0005\u2003\u2000.\u0002(1582169716),
        (byte) 69
      },
      {
        \u0005\u2003\u2000.\u0002(1582169664),
        (byte) 70
      },
      {
        \u0005\u2003\u2000.\u0002(1582169693),
        (byte) 71
      },
      {
        \u0005\u2003\u2000.\u0002(1582169644),
        (byte) 72
      },
      {
        \u0005\u2003\u2000.\u0002(1582169656),
        (byte) 73
      },
      {
        \u0005\u2003\u2000.\u0002(1582169654),
        byte.MaxValue
      }
    };
    Dictionary<string, byte> dictionary2 = new Dictionary<string, byte>()
    {
      {
        \u0005\u2003\u2000.\u0002(1582169602),
        (byte) 2
      },
      {
        \u0005\u2003\u2000.\u0002(1582169616),
        (byte) 14
      },
      {
        \u0005\u2003\u2000.\u0002(1582169835),
        (byte) 15
      },
      {
        \u0005\u2003\u2000.\u0002(1582169850),
        (byte) 23
      }
    };
    Dictionary<string, byte> dictionary3 = new Dictionary<string, byte>()
    {
      {
        \u0005\u2003\u2000.\u0002(1582169804),
        (byte) 3
      },
      {
        \u0005\u2003\u2000.\u0002(1582169817),
        (byte) 4
      },
      {
        \u0005\u2003\u2000.\u0002(1582169815),
        (byte) 19
      },
      {
        \u0005\u2003\u2000.\u0002(1582169761),
        (byte) 20
      },
      {
        \u0005\u2003\u2000.\u0002(1582169791),
        (byte) 29
      }
    };
    Dictionary<string, byte> dictionary4 = new Dictionary<string, byte>()
    {
      {
        \u0005\u2003\u2000.\u0002(1582169741),
        (byte) 11
      },
      {
        \u0005\u2003\u2000.\u0002(1582169754),
        (byte) 16
      },
      {
        \u0005\u2003\u2000.\u0002(1582169748),
        (byte) 17
      }
    };
    if (dictionary1.ContainsKey(upper))
    {
      this.\u0002(num, 0, upper);
      this.\u0002(dictionary1[upper]);
    }
    else if (dictionary2.ContainsKey(upper))
    {
      this.\u0002(num, 1, upper);
      this.\u0002(dictionary2[upper]);
      this.\u0002(int.Parse(_param1[1]));
    }
    else if (dictionary3.ContainsKey(upper))
    {
      this.\u0002(num, 1, upper);
      this.\u0002(dictionary3[upper]);
      this.\u0005(_param1[1]);
    }
    else if (dictionary4.ContainsKey(upper))
    {
      this.\u0002(num, 1, upper);
      this.\u0002(dictionary4[upper]);
      this.\u0008(_param1[1]);
    }
    else
    {
      string str = upper;
      if (!(str == \u0005\u2003\u2000.\u0002(1582169956)))
      {
        if (!(str == \u0005\u2003\u2000.\u0002(1582169970)))
        {
          if (!(str == \u0005\u2003\u2000.\u0002(1582169934)))
          {
            if (!(str == \u0005\u2003\u2000.\u0002(1582169947)))
            {
              if (!(str == \u0005\u2003\u2000.\u0002(1582169897)))
                throw new \u000E\u2001(\u0005\u2003\u2000.\u0002(1582169895) + upper);
              this.\u0002(num, 1, upper);
              this.\u0002((byte) 52);
              this.\u0002(int.Parse(_param1[1]));
            }
            else
            {
              this.\u0002(num, 1, upper);
              this.\u0002((byte) 40);
              this.\u0006(_param1[1]);
            }
          }
          else
          {
            this.\u0002(num, 3, upper);
            this.\u0002((byte) 35);
            this.\u0002(int.Parse(_param1[1]));
            this.\u0002(int.Parse(_param1[2]));
            this.\u0005(_param1[3]);
          }
        }
        else
        {
          this.\u0002(num, 2, upper);
          this.\u0002((byte) 12);
          this.\u0002(int.Parse(_param1[1]));
          this.\u0005(_param1[2]);
        }
      }
      else
      {
        this.\u0002(num, 1, upper);
        this.\u0002((byte) 28);
        this.\u0002(double.Parse(_param1[1], NumberStyles.Any, (IFormatProvider) CultureInfo.InvariantCulture));
      }
    }
  }

  private void \u0002(int _param1, int _param2, string _param3)
  {
    if (_param1 != _param2)
      throw new \u000E\u2001(\u0005\u2003\u2000.\u0002(1582169870) + _param3);
  }

  private void \u0002(byte _param1) => this.\u0002.Add(_param1);

  private void \u0002(int _param1)
  {
    foreach (byte num in BitConverter.GetBytes(_param1))
      this.\u0002(num);
  }

  private void \u0005(string _param1)
  {
    if (!this.\u0003.Contains(_param1))
      this.\u0003.Add(_param1);
    this.\u0002(this.\u0003.IndexOf(_param1));
  }

  private void \u0008(string _param1)
  {
    this.\u0006.Add(new \u0005\u2000.\u0005(_param1, this.\u0002.Count));
    this.\u0002(0);
  }

  private void \u0002(double _param1)
  {
    foreach (byte num in BitConverter.GetBytes(_param1))
      this.\u0002(num);
  }

  private void \u0006(string _param1)
  {
    _param1 = \u0005\u2000\u2000.\u0003(_param1);
    this.\u0002(_param1.Length);
    foreach (byte num in _param1)
      this.\u0002(num);
  }

  private void \u0002()
  {
    foreach (\u0005\u2000.\u0005 obj in this.\u0006)
    {
      int num1 = obj.\u0003;
      int num2 = this.\u0008[obj.\u0002];
      for (int index = 0; index < 4; ++index)
      {
        this.\u0002[num1++] = (byte) (num2 % 256);
        num2 /= 256;
      }
    }
  }

  private static string[] \u0002(string _param0)
  {
    List<string> stringList = new List<string>();
    _param0 = _param0.TrimEnd();
    while (_param0 != string.Empty)
      stringList.Add(\u0005\u2000.\u0002(ref _param0));
    return stringList.ToArray();
  }

  private static string \u0002(ref string _param0)
  {
    _param0 = _param0.TrimStart();
    string str;
    if (_param0.StartsWith(\u0005\u2003\u2000.\u0002(1582170087)))
    {
      int num = _param0.IndexOf('"', 1);
      if (num == -1)
        throw new \u000E\u2001(\u0005\u2003\u2000.\u0002(1582170111));
      str = _param0.Substring(1, num - 1);
      _param0 = _param0.Substring(num + 1);
    }
    else
    {
      int length = _param0.IndexOfAny(\u0005\u2003\u2000.\u0002(1582170065).ToCharArray());
      if (length == -1)
      {
        str = _param0;
        _param0 = string.Empty;
      }
      else
      {
        str = _param0.Substring(0, length);
        _param0 = _param0.Substring(length + 1);
      }
    }
    return str;
  }

  private sealed class \u0002
  {
    public readonly string \u0002;
    public readonly string \u0003;
    public readonly string \u0005;
    public readonly List<string> \u0008;

    public \u0002(string _param1, string _param2, string _param3, List<string> _param4)
    {
      this.\u0002 = _param2;
      this.\u0003 = _param3;
      this.\u0005 = _param1;
      this.\u0008 = _param4;
    }
  }

  private enum \u0003
  {
  }

  private sealed class \u0005
  {
    public readonly string \u0002;
    public readonly int \u0003;

    public \u0005(string _param1, int _param2)
    {
      this.\u0002 = _param1;
      this.\u0003 = _param2;
    }
  }
}
