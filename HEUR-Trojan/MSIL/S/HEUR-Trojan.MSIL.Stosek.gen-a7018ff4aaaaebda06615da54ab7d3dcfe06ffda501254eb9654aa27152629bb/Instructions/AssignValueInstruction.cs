// Decompiled with JetBrains decompiler
// Type: ram_machine.Instructions.AssignValueInstruction
// Assembly: InternalCrossContextDelega, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: D2AB7CD5-4913-4369-B066-3ED6411FFDD0
// Assembly location: C:\Users\Administrateur\Downloads\toto\HEUR-Trojan.MSIL.Stosek.gen-a7018ff4aaaaebda06615da54ab7d3dcfe06ffda501254eb9654aa27152629bb.exe

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace ram_machine.Instructions
{
  internal class AssignValueInstruction : Instruction
  {
    public override int run(int[] tape)
    {
      tape[this.parameters[0]] = this.parameters[1];
      int num1 = this.line + 1;
label_1:
      int num2 = -352023648;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num2 ^ -1473640747)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num2 = (int) num3 * 804437171 ^ -497760199;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return num1;
    }

    public override void setParameters(List<int> parameters)
    {
label_1:
      int num1 = 2126411963;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1580974980)) % 9U)
        {
          case 0:
            this.parameters.Add(parameters[0]);
            num1 = 1407895352;
            continue;
          case 1:
            flag = parameters.Count != 2;
            num1 = (int) num2 * -336132408 ^ 1641091858;
            continue;
          case 2:
            num1 = (int) num2 * -81226687 ^ -230576404;
            continue;
          case 3:
            goto label_10;
          case 4:
            goto label_3;
          case 5:
            goto label_1;
          case 6:
            num1 = (int) num2 * 195481930 ^ -759499165;
            continue;
          case 7:
            this.parameters.Add(parameters[1]);
            num1 = (int) num2 * 960153402 ^ -199078181;
            continue;
          case 8:
            int num3 = flag ? 234012029 : (num3 = 1902425601);
            num1 = num3 ^ (int) num2 * -512388132;
            continue;
          default:
            goto label_11;
        }
      }
label_3:
      return;
label_11:
      return;
label_10:
      throw AssignValueInstruction.\u206B⁯⁪‌‍‎‏⁮‍‫​⁯‬⁮‍​⁯‏​‬⁭‮⁬‫⁬‌‫‪⁪⁯⁫‌‬‎⁭⁯⁯‮​‏‮(\u003CModule\u003E.\u206F‮‏⁫‏‌‏⁫‭⁯⁪‏⁯‌‬‬‌⁮‏‌⁯‪‭‭‬⁫⁭‪‍⁫‏‍‏‬⁬⁬‫‬‪‫‮<string>(2179813529U));
    }

    public override string ToString()
    {
label_1:
      int num1 = 989786388;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 552424899)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -661066288 ^ 1559716854;
            continue;
          case 3:
            str = AssignValueInstruction.\u206B‫​‍‎‭‫​‌‏‮‌‌‌⁪‬‌⁬‪‪‌⁪‍⁭‎‎‌⁯‭⁪⁮‏‭‭⁭⁫‎‭‌⁬‮(new string[5]
            {
              this.line.ToString(),
              \u003CModule\u003E.\u206F‮‏⁫‏‌‏⁫‭⁯⁪‏⁯‌‬‬‌⁮‏‌⁯‪‭‭‬⁫⁭‪‍⁫‏‍‏‬⁬⁬‫‬‪‫‮<string>(636178787U),
              this.parameters[0].ToString(),
              \u003CModule\u003E.\u206F‮‏⁫‏‌‏⁫‭⁯⁪‏⁯‌‬‬‌⁮‏‌⁯‪‭‭‬⁫⁭‪‍⁫‏‍‏‬⁬⁬‫‬‪‫‮<string>(217615853U),
              this.parameters[1].ToString()
            });
            num1 = (int) num2 * -854825464 ^ -301433831;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    static ArgumentException \u206B⁯⁪‌‍‎‏⁮‍‫​⁯‬⁮‍​⁯‏​‬⁭‮⁬‫⁬‌‫‪⁪⁯⁫‌‬‎⁭⁯⁯‮​‏‮(
      [In] string obj0)
    {
      return new ArgumentException(obj0);
    }

    static string \u206B‫​‍‎‭‫​‌‏‮‌‌‌⁪‬‌⁬‪‪‌⁪‍⁭‎‎‌⁯‭⁪⁮‏‭‭⁭⁫‎‭‌⁬‮([In] string[] obj0) => string.Concat(obj0);
  }
}
