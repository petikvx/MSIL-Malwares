// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONArray
// Assembly: EncoderExceptionFallbackBuff, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 1A176EC6-F8F7-4000-B7C0-CE79157CC27B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-64a92f765017361d260169feccd6dd444e4a20dfceb3dcad952d976477406e1c.exe

using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONArray : JSONNode, IEnumerable
  {
    private List<JSONNode> m_List = new List<JSONNode>();

    public override JSONNode this[int aIndex]
    {
      get
      {
        if (aIndex < 0)
          goto label_4;
label_1:
        int num1 = -1067640976;
label_2:
        bool flag;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -293943998)) % 8U)
          {
            case 0:
              num1 = (int) num2 * -1594156068 ^ -1855742020;
              continue;
            case 1:
              int num3 = flag ? -1545320846 : (num3 = -368004655);
              num1 = num3 ^ (int) num2 * -1697340577;
              continue;
            case 2:
              goto label_3;
            case 3:
              num1 = (int) num2 * -688290363 ^ 70844299;
              continue;
            case 4:
              jsonNode = this.m_List[aIndex];
              num1 = -1441898711;
              continue;
            case 5:
              goto label_1;
            case 7:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * -1717310582 ^ -621832308;
              continue;
            default:
              goto label_11;
          }
        }
label_3:
        int num4 = aIndex >= this.m_List.Count ? 1 : 0;
        goto label_5;
label_11:
        return jsonNode;
label_4:
        num4 = 1;
label_5:
        flag = num4 != 0;
        num1 = -985424037;
        goto label_2;
      }
      set
      {
label_1:
        int num1 = 750130920;
        while (true)
        {
          uint num2;
          int num3;
          switch ((num2 = (uint) (num1 ^ 1168483200)) % 6U)
          {
            case 0:
              goto label_3;
            case 1:
              this.m_List.Add(value);
              num1 = (int) num2 * 1755134266 ^ -1491831904;
              continue;
            case 2:
              this.m_List[aIndex] = value;
              num1 = 438863930;
              continue;
            case 3:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            case 4:
              if (aIndex < 0)
              {
                num3 = 1;
                break;
              }
              num1 = (int) num2 * -1862477670 ^ -952173497;
              continue;
            case 5:
              goto label_1;
            default:
              goto label_11;
          }
          int num4;
          num1 = num4 = num3 == 0 ? 2035689906 : (num4 = 1387087217);
        }
label_3:
        return;
label_11:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -421413750;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1929867992)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -537171379 ^ -91315458;
              continue;
            case 2:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * -1887371788 ^ -500690771;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set => this.m_List.Add(value);
    }

    public override int Count => this.m_List.Count;

    public override void Add(string aKey, JSONNode aItem) => this.m_List.Add(aItem);

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = 1989195781;
      JSONNode jsonNode1;
      while (true)
      {
        uint num2;
        bool flag;
        int num3;
        switch ((num2 = (uint) (num1 ^ 1756918514)) % 8U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 2057107344 ^ 531146856;
            continue;
          case 3:
            int num4 = flag ? 2127792314 : (num4 = 1797547633);
            num1 = num4 ^ (int) num2 * 1837197674;
            continue;
          case 4:
            num3 = aIndex >= this.m_List.Count ? 1 : 0;
            break;
          case 5:
            JSONNode jsonNode2 = this.m_List[aIndex];
            this.m_List.RemoveAt(aIndex);
            jsonNode1 = jsonNode2;
            num1 = 330416248;
            continue;
          case 6:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num2 * -2004250831 ^ 1721765869;
            continue;
          case 7:
            if (aIndex >= 0)
            {
              num1 = (int) num2 * -308992729 ^ 1248831559;
              continue;
            }
            num3 = 1;
            break;
          default:
            goto label_12;
        }
        flag = num3 != 0;
        num1 = 2094852689;
      }
label_12:
      return jsonNode1;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = 1610344167;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2081592016)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1173448303 ^ 1932871855;
            continue;
          case 3:
            this.m_List.Remove(aNode);
            jsonNode = aNode;
            num1 = (int) num2 * -1334091421 ^ -2014447160;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONArray.\u003Cget_Childs\u003Ed__13 getChildsD13 = new JSONArray.\u003Cget_Childs\u003Ed__13(-2);
        getChildsD13.\u003C\u003E4__this = this;
label_1:
        int num1 = -1086140407;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -595616719)) % 3U)
          {
            case 1:
              childs = (IEnumerable<JSONNode>) getChildsD13;
              num1 = (int) num2 * 703242287 ^ -1513267307;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return childs;
      }
    }

    public IEnumerator GetEnumerator() => (IEnumerator) new JSONArray.\u003CGetEnumerator\u003Ed__14(0)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString()
    {
      string str1 = "[ ";
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_4:
        int num1 = enumerator.MoveNext() ? -179726242 : (num1 = -1861229765);
        JSONNode current;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2126330918)) % 9U)
          {
            case 0:
              goto label_4;
            case 1:
              int num3 = JSONArray.\u206F⁪‮‍⁭⁫⁪‍⁬‌‫‫‍‍⁭‪‮‬‬‌‪⁯‭⁬‬​⁯​⁭‪‌‭‫‪‫​‭‫‍⁪‮(str1) > 2 ? -1637915212 : (num3 = -389802864);
              num1 = num3 ^ (int) num2 * 1593896921;
              continue;
            case 2:
              num1 = (int) num2 * -1162797340 ^ 1224200085;
              continue;
            case 3:
              num1 = (int) num2 * -538718069 ^ -1686363442;
              continue;
            case 4:
              str1 = JSONArray.\u202C‫‮‏‮⁪‮​‪⁮‭⁭⁫⁫⁫‭‎‪​⁪‬⁮‮⁬‮​​‮‭‍⁪⁭‭⁭‬‬⁯⁯⁯‍‮(str1, ", ");
              num1 = (int) num2 * -799794142 ^ -5653833;
              continue;
            case 5:
              current = enumerator.Current;
              num1 = -540761899;
              continue;
            case 6:
              str1 = JSONArray.\u202C‫‮‏‮⁪‮​‪⁮‭⁭⁫⁫⁫‭‎‪​⁪‬⁮‮⁬‮​​‮‭‍⁪⁭‭⁭‬‬⁯⁯⁯‍‮(str1, JSONArray.\u202B‬‭⁪⁬‪‌⁯‭‎‭‫‏‮⁮‭​⁮‌⁪‌⁪⁪‮⁯⁬‌⁬⁪⁯‫⁬‪‪‌‏⁯⁭‭‪‮((object) current));
              num1 = -1888895600;
              continue;
            case 7:
              num1 = -179726242;
              continue;
            default:
              goto label_12;
          }
        }
      }
label_12:
      string str2 = JSONArray.\u202C‫‮‏‮⁪‮​‪⁮‭⁭⁫⁫⁫‭‎‪​⁪‬⁮‮⁬‮​​‮‭‍⁪⁭‭⁭‬‬⁯⁯⁯‍‮(str1, " ]");
label_13:
      int num4 = -2111034777;
      while (true)
      {
        uint num5;
        switch ((num5 = (uint) (num4 ^ -2126330918)) % 3U)
        {
          case 0:
            goto label_13;
          case 1:
            num4 = (int) num5 * 1639781909 ^ 606954151;
            continue;
          default:
            goto label_16;
        }
      }
label_16:
      return str2;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = -585790741;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1222954148)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            str1 = "[ ";
            num1 = (int) num2 * -1523734458 ^ -1898432320;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator();
      try
      {
label_9:
        int num3 = !enumerator.MoveNext() ? -939889090 : (num3 = -1745166665);
        JSONNode current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -1222954148)) % 8U)
          {
            case 0:
              str1 = JSONArray.\u202C‫‮‏‮⁪‮​‪⁮‭⁭⁫⁫⁫‭‎‪​⁪‬⁮‮⁬‮​​‮‭‍⁪⁭‭⁭‬‬⁯⁯⁯‍‮(str1, current.ToString(JSONArray.\u202C‫‮‏‮⁪‮​‪⁮‭⁭⁫⁫⁫‭‎‪​⁪‬⁮‮⁬‮​​‮‭‍⁪⁭‭⁭‬‬⁯⁯⁯‍‮(aPrefix, "   ")));
              num3 = (int) num4 * 1860828351 ^ -2032915085;
              continue;
            case 1:
              str1 = JSONArray.\u202C‫‮‏‮⁪‮​‪⁮‭⁭⁫⁫⁫‭‎‪​⁪‬⁮‮⁬‮​​‮‭‍⁪⁭‭⁭‬‬⁯⁯⁯‍‮(str1, ", ");
              num3 = (int) num4 * -78595684 ^ 1472128244;
              continue;
            case 3:
              current = enumerator.Current;
              num3 = -1786841254;
              continue;
            case 4:
              str1 = JSONArray.\u202B‎‪‫⁫⁯‎​⁪‌​‪‍⁮⁭⁯⁬‪‎⁪⁪‫⁫⁬‎‬‮‏⁭‬​​‭⁪⁬‭⁪‬⁫‌‮(str1, "\n", aPrefix, "   ");
              num3 = -570677548;
              continue;
            case 5:
              num3 = -1745166665;
              continue;
            case 6:
              int num5 = JSONArray.\u206F⁪‮‍⁭⁫⁪‍⁬‌‫‫‍‍⁭‪‮‬‬‌‪⁯‭⁬‬​⁯​⁭‪‌‭‫‪‫​‭‫‍⁪‮(str1) > 3 ? -1968053843 : (num5 = -889275800);
              num3 = num5 ^ (int) num4 * 210082912;
              continue;
            case 7:
              goto label_9;
            default:
              goto label_19;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_15:
        int num6 = -790098268;
        while (true)
        {
          uint num7;
          switch ((num7 = (uint) (num6 ^ -1222954148)) % 3U)
          {
            case 1:
              num6 = (int) num7 * -929233105 ^ -342093141;
              continue;
            case 2:
              goto label_15;
            default:
              goto label_18;
          }
        }
label_18:;
      }
label_19:
      string str2 = JSONArray.\u202B‎‪‫⁫⁯‎​⁪‌​‪‍⁮⁭⁯⁬‪‎⁪⁪‫⁫⁬‎‬‮‏⁭‬​​‭⁪⁬‭⁪‬⁫‌‮(str1, "\n", aPrefix, "]");
label_20:
      int num8 = -45116615;
      string str3;
      while (true)
      {
        uint num9;
        switch ((num9 = (uint) (num8 ^ -1222954148)) % 4U)
        {
          case 0:
            goto label_20;
          case 1:
            str3 = str2;
            num8 = (int) num9 * -1265974769 ^ 768649673;
            continue;
          case 2:
            num8 = (int) num9 * 1413460371 ^ -271358479;
            continue;
          default:
            goto label_24;
        }
      }
label_24:
      return str3;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = 142206309;
      int index;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1310329541)) % 9U)
        {
          case 0:
            this.m_List[index].Serialize(aWriter);
            num1 = (int) num2 * -1941818425 ^ 1396203536;
            continue;
          case 1:
            ++index;
            num1 = (int) num2 * -280843910 ^ -107841310;
            continue;
          case 2:
            num1 = (int) num2 * -1809341952 ^ -795212094;
            continue;
          case 3:
            num1 = 511309119;
            continue;
          case 4:
            goto label_3;
          case 5:
            goto label_1;
          case 6:
            JSONArray.\u200F⁮‪⁬‬‮‎‏⁭‌​‌‍⁫‫⁬‫⁯‮‌⁬⁮⁮‍‬⁫⁪⁯⁮‍‪‏‬‬⁮‫‏‍⁪⁪‮(aWriter, this.m_List.Count);
            index = 0;
            num1 = (int) num2 * 1433901055 ^ 1305632373;
            continue;
          case 7:
            JSONArray.\u206F‬⁮⁭⁫⁪‏⁪⁬‫⁭⁭⁯‭⁭⁫⁭⁪‏‮‎‪‭‍⁮‌‪⁬⁪‬‭⁮⁬⁬⁯⁭‎⁫⁫⁭‮(aWriter, (byte) 1);
            num1 = (int) num2 * -122965193 ^ 152765248;
            continue;
          case 8:
            int num3;
            num1 = num3 = index < this.m_List.Count ? 1320424669 : (num3 = 729114850);
            continue;
          default:
            goto label_11;
        }
      }
label_3:
      return;
label_11:;
    }

    static int \u206F⁪‮‍⁭⁫⁪‍⁬‌‫‫‍‍⁭‪‮‬‬‌‪⁯‭⁬‬​⁯​⁭‪‌‭‫‪‫​‭‫‍⁪‮([In] string obj0) => obj0.Length;

    static string \u202C‫‮‏‮⁪‮​‪⁮‭⁭⁫⁫⁫‭‎‪​⁪‬⁮‮⁬‮​​‮‭‍⁪⁭‭⁭‬‬⁯⁯⁯‍‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u202B‬‭⁪⁬‪‌⁯‭‎‭‫‏‮⁮‭​⁮‌⁪‌⁪⁪‮⁯⁬‌⁬⁪⁯‫⁬‪‪‌‏⁯⁭‭‪‮([In] object obj0) => obj0.ToString();

    static string \u202B‎‪‫⁫⁯‎​⁪‌​‪‍⁮⁭⁯⁬‪‎⁪⁪‫⁫⁬‎‬‮‏⁭‬​​‭⁪⁬‭⁪‬⁫‌‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u206F‬⁮⁭⁫⁪‏⁪⁬‫⁭⁭⁯‭⁭⁫⁭⁪‏‮‎‪‭‍⁮‌‪⁬⁪‬‭⁮⁬⁬⁯⁭‎⁫⁫⁭‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u200F⁮‪⁬‬‮‎‏⁭‌​‌‍⁫‫⁬‫⁯‮‌⁬⁮⁮‍‬⁫⁪⁯⁮‍‪‏‬‬⁮‫‏‍⁪⁪‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);
  }
}
