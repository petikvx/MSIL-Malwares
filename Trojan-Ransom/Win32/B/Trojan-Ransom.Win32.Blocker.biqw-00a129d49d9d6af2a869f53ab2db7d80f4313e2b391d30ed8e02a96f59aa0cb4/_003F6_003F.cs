// Decompiled with JetBrains decompiler
// Type: ?6?
// Assembly: wLoader, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 601E9F23-A239-4CA4-BCF6-5BB65F85A0DA
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.biqw-00a129d49d9d6af2a869f53ab2db7d80f4313e2b391d30ed8e02a96f59aa0cb4.exe

using System;
using System.IO;

public sealed class \u003F6\u003F
{
  private byte[] \u003F1\u003F;
  private uint \u003F2\u003F;
  private uint \u003F3\u003F;
  private uint \u003F5\u003F;
  private Stream \u003F4\u003F;

  public void \u003F1\u003F(uint _param1)
  {
    if ((int) this.\u003F3\u003F == (int) _param1)
      goto label_2;
label_1:
    this.\u003F1\u003F = new byte[(IntPtr) _param1];
label_2:
    this.\u003F3\u003F = _param1;
    if (true)
    {
      this.\u003F2\u003F = 0U;
      this.\u003F5\u003F = 0U;
      if (false)
        goto label_1;
    }
    else
      goto label_1;
  }

  public void \u003F1\u003F(Stream _param1, bool _param2)
  {
    if (false)
      return;
    this.\u003F1\u003F();
    do
    {
      this.\u003F4\u003F = _param1;
    }
    while (false);
    if (_param2)
      return;
    do
    {
      if (true)
        goto label_6;
label_2:
      continue;
label_6:
      this.\u003F5\u003F = 0U;
      goto label_2;
    }
    while (false);
    this.\u003F2\u003F = 0U;
  }

  public void \u003F1\u003F(Stream _param1) => this.\u003F1\u003F(_param1, false);

  public void \u003F1\u003F()
  {
    this.\u003F2\u003F();
    this.\u003F4\u003F = (Stream) null;
  }

  public void \u003F2\u003F()
  {
    uint count = this.\u003F2\u003F - this.\u003F5\u003F;
    if (count == 0U)
      return;
    this.\u003F4\u003F.Write(this.\u003F1\u003F, (int) this.\u003F5\u003F, (int) count);
    if (this.\u003F2\u003F >= this.\u003F3\u003F)
      goto label_4;
label_1:
    this.\u003F5\u003F = this.\u003F2\u003F;
    return;
label_4:
    if (false)
      return;
    this.\u003F2\u003F = 0U;
    goto label_1;
  }

  public void \u003F1\u003F(uint _param1, uint _param2)
  {
    int num1 = (int) this.\u003F2\u003F - (int) _param1;
    if (false)
      goto label_8;
    else
      goto label_10;
label_1:
    int num2;
    int num3;
    num1 = num2 + num3;
    goto label_8;
label_6:
    uint num4;
    while (true)
    {
      num2 = (int) _param2;
      num3 = 0;
      if (num3 == 0)
      {
        if ((uint) num2 > (uint) num3)
        {
          int num5 = (int) num4;
          if (false)
            goto label_3;
          else
            goto label_13;
label_2:
          num5 = 0;
label_3:
          num4 = (uint) num5;
label_4:
          if (true)
          {
            this.\u003F1\u003F[(IntPtr) this.\u003F2\u003F++] = this.\u003F1\u003F[(IntPtr) num4++];
            if (this.\u003F2\u003F >= this.\u003F3\u003F)
              goto label_15;
label_5:
            --_param2;
            continue;
label_15:
            this.\u003F2\u003F();
            goto label_5;
          }
          else
            goto label_2;
label_13:
          int num6 = (int) this.\u003F3\u003F;
          if ((uint) num5 < (uint) num6)
            goto label_4;
          else
            goto label_2;
        }
        else
          break;
      }
      else
        goto label_1;
    }
    return;
label_8:
    num4 = (uint) num1;
    goto label_6;
label_10:
    int num7 = 1;
    if (num7 != 0)
    {
      num4 = (uint) (num1 - num7);
      int num8 = (int) num4;
      num7 = (int) this.\u003F3\u003F;
      num1 = num8;
    }
    if ((uint) num1 >= (uint) num7)
    {
      int num9 = (int) num4;
      num3 = (int) this.\u003F3\u003F;
      num2 = num9;
      goto label_1;
    }
    else
      goto label_6;
  }

  public void \u003F1\u003F(byte _param1)
  {
    byte[] numArray = this.\u003F1\u003F;
    \u003F6\u003F obj = this;
    int num1;
    uint num2 = (uint) (num1 = (int) obj.\u003F2\u003F);
    obj.\u003F2\u003F = (uint) (num1 + 1);
    uint index = num2;
    int num3 = (int) _param1;
    numArray[(IntPtr) index] = (byte) num3;
    if (this.\u003F2\u003F < this.\u003F3\u003F)
      return;
    this.\u003F2\u003F();
  }

  public byte \u003F1\u003F(uint _param1)
  {
    int num1 = (int) this.\u003F2\u003F;
    if (false)
      goto label_6;
    else
      goto label_3;
label_1:
    int num2;
    int num3 = num1 + num2;
    uint index;
    if (true)
      index = (uint) num3;
    else
      goto label_4;
label_2:
    if (true)
      return this.\u003F1\u003F[(IntPtr) index];
    goto label_5;
label_3:
    int num4 = (int) _param1;
    if (false)
    {
      num2 = num4;
      goto label_1;
    }
    else
    {
      int num5 = num1 - num4;
      if (false)
        num3 = num5;
      else
        num3 = num5 - 1;
    }
label_4:
    index = (uint) num3;
    if (index < this.\u003F3\u003F)
      goto label_2;
label_5:
    num1 = (int) index;
label_6:
    num2 = (int) this.\u003F3\u003F;
    goto label_1;
  }
}
