// Decompiled with JetBrains decompiler
// Type: Ɖ늻˨�@.Ӥ򋢘�恁
// Assembly: iJMJnUDAnLMGBkvrphkwZ, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8BCFE5CC-61DE-4CD2-8DAF-2FBF230839CD
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-5067186ee6f83892e2d9e56ec500c4a4eb78c83006033b7f4ea166072624c87e.exe

using \u02F3Ŵ\u0609\uFFFD鈟;
using \uFFFDŲľBŧ;
using Ɖ늻\u02E8\uFFFD\u0040;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.ApplicationServices;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.ComponentModel;
using System.ComponentModel.Design;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace Ɖ늻\u02E8\uFFFD\u0040
{
  [StandardModule]
  [HideModuleName]
  [GeneratedCode("MyTemplate", "11.0.0.0")]
  internal sealed class Ӥ\uD9EE\uDC98\uFFFD恁
  {
    private static readonly Ӥ\uD9EE\uDC98\uFFFD恁.ThreadSafeObjectProvider<ٷŲRݶi> ņ嵱\uFFFD\u07BBٗ = new Ӥ\uD9EE\uDC98\uFFFD恁.ThreadSafeObjectProvider<ٷŲRݶi>();
    private static readonly Ӥ\uD9EE\uDC98\uFFFD恁.ThreadSafeObjectProvider<Ң̧츠\u003B\u07B9> أױӛ\uFFFD\uFFFD = new Ӥ\uD9EE\uDC98\uFFFD恁.ThreadSafeObjectProvider<Ң̧츠\u003B\u07B9>();
    private static readonly Ӥ\uD9EE\uDC98\uFFFD恁.ThreadSafeObjectProvider<User> 鈟Ԝܣé\u002D = new Ӥ\uD9EE\uDC98\uFFFD恁.ThreadSafeObjectProvider<User>();
    private static Ӥ\uD9EE\uDC98\uFFFD恁.ThreadSafeObjectProvider<Ӥ\uD9EE\uDC98\uFFFD恁.MyForms> \uFFFD\uFFFDζ\uFFFDt = new Ӥ\uD9EE\uDC98\uFFFD恁.ThreadSafeObjectProvider<Ӥ\uD9EE\uDC98\uFFFD恁.MyForms>();
    private static readonly Ӥ\uD9EE\uDC98\uFFFD恁.ThreadSafeObjectProvider<Ӥ\uD9EE\uDC98\uFFFD恁.MyWebServices> \u1CFCC\u07B8ջ泮 = new Ӥ\uD9EE\uDC98\uFFFD恁.ThreadSafeObjectProvider<Ӥ\uD9EE\uDC98\uFFFD恁.MyWebServices>();

    [HelpKeyword("My.Computer")]
    internal static ٷŲRݶi Օk\uFFFD\u0089̳
    {
      [DebuggerHidden] get => Ӥ\uD9EE\uDC98\uFFFD恁.ņ嵱\uFFFD\u07BBٗ.GetInstance;
    }

    [HelpKeyword("My.Application")]
    internal static Ң̧츠\u003B\u07B9 \uFFFDܹ\uFFFD丐\uFFFD
    {
      [DebuggerHidden] get => Ӥ\uD9EE\uDC98\uFFFD恁.أױӛ\uFFFD\uFFFD.GetInstance;
    }

    [HelpKeyword("My.User")]
    internal static User 盀\uFFFDΑ蠺Ŏ
    {
      [DebuggerHidden] get => Ӥ\uD9EE\uDC98\uFFFD恁.鈟Ԝܣé\u002D.GetInstance;
    }

    [HelpKeyword("My.Forms")]
    internal static Ӥ\uD9EE\uDC98\uFFFD恁.MyForms \u0300\uFFFDсΠO
    {
      [DebuggerHidden] get => Ӥ\uD9EE\uDC98\uFFFD恁.\uFFFD\uFFFDζ\uFFFDt.GetInstance;
    }

    [HelpKeyword("My.WebServices")]
    internal static Ӥ\uD9EE\uDC98\uFFFD恁.MyWebServices k\uF0B9\uFFFDş꾯
    {
      [DebuggerHidden] get => Ӥ\uD9EE\uDC98\uFFFD恁.\u1CFCC\u07B8ջ泮.GetInstance;
    }

    [EditorBrowsable(EditorBrowsableState.Never)]
    [MyGroupCollection("System.Windows.Forms.Form", "Create__Instance__", "Dispose__Instance__", "My.MyProject.Forms")]
    internal sealed class MyForms
    {
      [ThreadStatic]
      private static Hashtable m_FormBeingCreated;

      [DebuggerHidden]
      private static T Create__Instance__<T>(T Instance) where T : Form, new()
      {
        if ((object) Instance != null && !Instance.IsDisposed)
          return Instance;
        if (Ӥ\uD9EE\uDC98\uFFFD恁.MyForms.m_FormBeingCreated != null)
        {
          if (Ӥ\uD9EE\uDC98\uFFFD恁.MyForms.m_FormBeingCreated.ContainsKey((object) typeof (T)))
            throw new InvalidOperationException(Utils.GetResourceString("WinForms_RecursiveFormCreate"));
        }
        else
          Ӥ\uD9EE\uDC98\uFFFD恁.MyForms.m_FormBeingCreated = new Hashtable();
        Ӥ\uD9EE\uDC98\uFFFD恁.MyForms.m_FormBeingCreated.Add((object) typeof (T), (object) null);
        TargetInvocationException invocationException;
        try
        {
          return new T();
        }
        catch (TargetInvocationException ex) when (
        {
          // ISSUE: unable to correctly present filter
          ProjectData.SetProjectError((Exception) ex);
          invocationException = ex;
          if (invocationException.InnerException != null)
          {
            SuccessfulFiltering;
          }
          else
            throw;
        }
        )
        {
          throw new InvalidOperationException(Utils.GetResourceString("WinForms_SeeInnerException", invocationException.InnerException.Message), invocationException.InnerException);
        }
        finally
        {
          Ӥ\uD9EE\uDC98\uFFFD恁.MyForms.m_FormBeingCreated.Remove((object) typeof (T));
        }
      }

      [DebuggerHidden]
      private void Dispose__Instance__<T>(ref T instance) where T : Form
      {
        instance.Dispose();
        instance = default (T);
      }

      [DebuggerHidden]
      [EditorBrowsable(EditorBrowsableState.Never)]
      public MyForms()
      {
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override bool Equals(object o) => base.Equals(RuntimeHelpers.GetObjectValue(o));

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override int GetHashCode() => base.GetHashCode();

      [EditorBrowsable(EditorBrowsableState.Never)]
      internal new System.Type GetType() => typeof (Ӥ\uD9EE\uDC98\uFFFD恁.MyForms);

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override string ToString() => base.ToString();
    }

    [EditorBrowsable(EditorBrowsableState.Never)]
    [MyGroupCollection("System.Web.Services.Protocols.SoapHttpClientProtocol", "Create__Instance__", "Dispose__Instance__", "")]
    internal sealed class MyWebServices
    {
      [EditorBrowsable(EditorBrowsableState.Never)]
      [DebuggerHidden]
      public override bool Equals(object o) => base.Equals(RuntimeHelpers.GetObjectValue(o));

      [EditorBrowsable(EditorBrowsableState.Never)]
      [DebuggerHidden]
      public override int GetHashCode() => base.GetHashCode();

      [EditorBrowsable(EditorBrowsableState.Never)]
      [DebuggerHidden]
      internal new System.Type GetType() => typeof (Ӥ\uD9EE\uDC98\uFFFD恁.MyWebServices);

      [EditorBrowsable(EditorBrowsableState.Never)]
      [DebuggerHidden]
      public override string ToString() => base.ToString();

      [DebuggerHidden]
      private static T Create__Instance__<T>(T instance) where T : new() => (object) instance == null ? new T() : instance;

      [DebuggerHidden]
      private void Dispose__Instance__<T>(ref T instance) => instance = default (T);

      [DebuggerHidden]
      [EditorBrowsable(EditorBrowsableState.Never)]
      public MyWebServices()
      {
      }
    }

    [EditorBrowsable(EditorBrowsableState.Never)]
    [ComVisible(false)]
    internal sealed class ThreadSafeObjectProvider<T> where T : new()
    {
      internal T GetInstance
      {
        [DebuggerHidden] get
        {
          if ((object) Ӥ\uD9EE\uDC98\uFFFD恁.ThreadSafeObjectProvider<T>.m_ThreadStaticValue == null)
            Ӥ\uD9EE\uDC98\uFFFD恁.ThreadSafeObjectProvider<T>.m_ThreadStaticValue = new T();
          return Ӥ\uD9EE\uDC98\uFFFD恁.ThreadSafeObjectProvider<T>.m_ThreadStaticValue;
        }
      }

      [DebuggerHidden]
      [EditorBrowsable(EditorBrowsableState.Never)]
      public ThreadSafeObjectProvider()
      {
      }
    }
  }
}
