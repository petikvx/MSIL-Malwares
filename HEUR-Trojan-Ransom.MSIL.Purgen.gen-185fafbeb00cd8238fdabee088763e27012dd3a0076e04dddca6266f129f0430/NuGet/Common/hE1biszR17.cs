// Decompiled with JetBrains decompiler
// Type: NuGet.Common.hE1biszR17
// Assembly: Ty6CWyxFEL, Version=5.0.0.2, Culture=neutral, PublicKeyToken=31bf3856ad364e35
// MVID: 271E2DAF-741A-443A-8BCF-B62C509DDC38
// Assembly location: C:\Users\Administrateur\Downloads\toto\HEUR-Trojan-Ransom.MSIL.Purgen.gen-185fafbeb00cd8238fdabee088763e27012dd3a0076e04dddca6266f129f0430.exe

using System;
using System.Globalization;
using System.IO;

namespace NuGet.Common
{
  public static class hE1biszR17
  {
    private const string wuabUcnTgb = "dotnet";
    private const string DtegoBHkFl = "dotnet.exe";
    private const string qSoqBCn6U6 = "HOME";
    private const string fD3vKFVeY4 = "DOTNET_CLI_HOME";
    private const string \u0034bSzNjcabW = "USERPROFILE";
    private static readonly Lazy<string> \u0031vMSrE9KRo = new Lazy<string>((Func<string>) (() => hE1biszR17.\u0034tymAtJgAp()));

    public static string SX1Br5Fk1Y(YeXhnQPbgq mhBd2XQMSg)
    {
      switch (mhBd2XQMSg)
      {
        case YeXhnQPbgq.MachineWideSettingsBaseDirectory:
          string path1;
          if (!l6BkPTcFbv.OoRgJZVw7H && l6BkPTcFbv.ooEPhgvzVK)
          {
            path1 = hE1biszR17.CRIcKdtTsp(hE1biszR17.aktvJ2Vzo8.ProgramFilesX86);
            if (string.IsNullOrEmpty(path1))
              path1 = hE1biszR17.CRIcKdtTsp(hE1biszR17.aktvJ2Vzo8.ProgramFiles);
          }
          else
            path1 = hE1biszR17.CRIcKdtTsp(hE1biszR17.aktvJ2Vzo8.CommonApplicationData);
          return Path.Combine(path1, "NuGet");
        case YeXhnQPbgq.MachineWideConfigDirectory:
          return Path.Combine(hE1biszR17.SX1Br5Fk1Y(YeXhnQPbgq.MachineWideSettingsBaseDirectory), "Config");
        case YeXhnQPbgq.UserSettingsDirectory:
          return Path.Combine(hE1biszR17.CRIcKdtTsp(hE1biszR17.aktvJ2Vzo8.ApplicationData), "NuGet");
        case YeXhnQPbgq.HttpCacheDirectory:
          return Path.Combine(hE1biszR17.CRIcKdtTsp(hE1biszR17.aktvJ2Vzo8.LocalApplicationData), "NuGet", "v3-cache");
        case YeXhnQPbgq.NuGetHome:
          return Path.Combine(hE1biszR17.CRIcKdtTsp(hE1biszR17.aktvJ2Vzo8.UserProfile), ".nuget");
        case YeXhnQPbgq.DefaultMsBuildPath:
          string str = hE1biszR17.CRIcKdtTsp(hE1biszR17.aktvJ2Vzo8.ProgramFilesX86);
          if (string.IsNullOrEmpty(str))
            str = hE1biszR17.CRIcKdtTsp(hE1biszR17.aktvJ2Vzo8.ProgramFiles);
          return Path.Combine(str, "MSBuild", "14.0", "Bin", "MSBuild.exe");
        case YeXhnQPbgq.Temp:
          return Path.Combine(Path.GetTempPath(), "NuGetScratch");
        case YeXhnQPbgq.NuGetPluginsCacheDirectory:
          return Path.Combine(hE1biszR17.CRIcKdtTsp(hE1biszR17.aktvJ2Vzo8.LocalApplicationData), "NuGet", "plugins-cache");
        default:
          return (string) null;
      }
    }

    private static string CRIcKdtTsp(hE1biszR17.aktvJ2Vzo8 _param0)
    {
      Environment.SpecialFolder folder;
      switch (_param0)
      {
        case hE1biszR17.aktvJ2Vzo8.ProgramFilesX86:
          folder = Environment.SpecialFolder.ProgramFilesX86;
          break;
        case hE1biszR17.aktvJ2Vzo8.ProgramFiles:
          folder = Environment.SpecialFolder.ProgramFiles;
          break;
        case hE1biszR17.aktvJ2Vzo8.UserProfile:
          string folderPath = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile);
          return !string.IsNullOrEmpty(folderPath) ? folderPath : hE1biszR17.\u0031vMSrE9KRo.Value;
        case hE1biszR17.aktvJ2Vzo8.CommonApplicationData:
          folder = Environment.SpecialFolder.CommonApplicationData;
          break;
        case hE1biszR17.aktvJ2Vzo8.ApplicationData:
          folder = Environment.SpecialFolder.ApplicationData;
          break;
        case hE1biszR17.aktvJ2Vzo8.LocalApplicationData:
          folder = Environment.SpecialFolder.LocalApplicationData;
          break;
        default:
          return (string) null;
      }
      return Environment.GetFolderPath(folder);
    }

    private static string \u0034tymAtJgAp() => l6BkPTcFbv.ooEPhgvzVK ? hE1biszR17.qcyjBF3j3r((Func<string>) (() => hE1biszR17.\u003956yVTgyry()), "USERPROFILE") : hE1biszR17.qcyjBF3j3r((Func<string>) (() => Environment.GetEnvironmentVariable("HOME")), "HOME");

    private static string \u003956yVTgyry()
    {
      string environmentVariable = Environment.GetEnvironmentVariable("USERPROFILE");
      return !string.IsNullOrEmpty(environmentVariable) ? environmentVariable : Environment.GetEnvironmentVariable("HOMEDRIVE") + Environment.GetEnvironmentVariable("HOMEPATH");
    }

    private static string EEWWpyp741(Func<string> _param0, string cgDl1LJOYM, string _param2)
    {
      string str = _param0();
      return !string.IsNullOrEmpty(str) ? str : throw new InvalidOperationException(string.Format((IFormatProvider) CultureInfo.CurrentCulture, vK4KTOtZYy.Xb2CqXy99h, (object) cgDl1LJOYM, (object) _param2));
    }

    private static string qcyjBF3j3r(Func<string> jYNN4e1XUq, string _param1)
    {
      string str = jYNN4e1XUq();
      return !string.IsNullOrEmpty(str) ? str : throw new InvalidOperationException(string.Format((IFormatProvider) CultureInfo.CurrentCulture, vK4KTOtZYy.IDxPMhbgqN, (object) _param1));
    }

    public static string Gr0wP28oFK()
    {
      string environmentVariable = Environment.GetEnvironmentVariable("PATH");
      bool ooEphgvzVk = l6BkPTcFbv.ooEPhgvzVK;
      char ch = ooEphgvzVk ? ';' : ':';
      string path2 = ooEphgvzVk ? "dotnet.exe" : "dotnet";
      char[] chArray = new char[1]{ ch };
      foreach (string path1 in environmentVariable.Split(chArray))
      {
        string path = Path.Combine(path1, path2);
        if (File.Exists(path))
          return path;
      }
      if (ooEphgvzVk)
      {
        string path1_1 = hE1biszR17.CRIcKdtTsp(hE1biszR17.aktvJ2Vzo8.ProgramFiles);
        if (!string.IsNullOrEmpty(path1_1))
        {
          string path = Path.Combine(path1_1, "dotnet", "dotnet.exe");
          if (File.Exists(path))
            return path;
        }
        string path1_2 = hE1biszR17.CRIcKdtTsp(hE1biszR17.aktvJ2Vzo8.ProgramFilesX86);
        if (!string.IsNullOrEmpty(path1_2))
        {
          string path = Path.Combine(path1_2, "dotnet", "dotnet.exe");
          if (File.Exists(path))
            return path;
        }
      }
      else
      {
        string path1 = "/usr/local/bin";
        if (!string.IsNullOrEmpty(path1))
        {
          string path = Path.Combine(path1, "dotnet");
          if (File.Exists(path))
            return path;
        }
      }
      return "dotnet";
    }

    private enum aktvJ2Vzo8
    {
      ProgramFilesX86,
      ProgramFiles,
      UserProfile,
      CommonApplicationData,
      ApplicationData,
      LocalApplicationData,
    }
  }
}
