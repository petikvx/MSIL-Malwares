// Decompiled with JetBrains decompiler
// Type: .
// Assembly: Public Service, Version=6.0.240.7, Culture=neutral, PublicKeyToken=null
// MVID: FB6DF727-9CD8-4F53-ACDF-580EE570059D
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Trojan.Win32.Jorik.Shakblades.pp-19460fb6029bc601f27735d764371826ae0c3a20b9da833b0e9b78c529e9cc95.exe

using \u0001;
using \u0005;
using \u0006;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.ApplicationServices;
using Microsoft.VisualBasic.CompilerServices;
using SmartAssembly.SmartExceptionsCore;
using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.ComponentModel;
using System.ComponentModel.Design;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace \u0006
{
  [HideModuleName]
  [StandardModule]
  [GeneratedCode("MyTemplate", "8.0.0.0")]
  internal sealed class \u0002
  {
    private static readonly \u0002.\u0003<\u0006.\u0001> \u0001;
    private static readonly \u0002.\u0003<\u0007> \u0001;
    private static readonly \u0002.\u0003<User> \u0001;
    private static \u0002.\u0003<\u0002.\u0001> \u0001;
    private static readonly \u0002.\u0003<\u0002.\u0002> \u0001;

    [DebuggerNonUserCode]
    static \u0002()
    {
      try
      {
        \u0002.\u0001 = new \u0002.\u0003<\u0006.\u0001>();
        \u0002.\u0001 = new \u0002.\u0003<\u0007>();
        \u0002.\u0001 = new \u0002.\u0003<User>();
        \u0002.\u0001 = new \u0002.\u0003<\u0002.\u0001>();
        \u0002.\u0001 = new \u0002.\u0003<\u0002.\u0002>();
      }
      catch (Exception ex)
      {
        throw UnhandledException.\u0003(ex);
      }
    }

    [HelpKeyword("My.Computer")]
    internal static \u0006.\u0001 Computer
    {
      [DebuggerHidden] get
      {
        try
        {
          return \u0002.\u0001.GetInstance;
        }
        catch (Exception ex)
        {
          \u0006.\u0001 obj1;
          \u0006.\u0001 obj2 = obj1;
          throw UnhandledException.\u0003(ex, (object) obj2);
        }
      }
    }

    [HelpKeyword("My.Application")]
    internal static \u0007 Application
    {
      [DebuggerHidden] get
      {
        try
        {
          return \u0002.\u0001.GetInstance;
        }
        catch (Exception ex)
        {
          \u0007 obj1;
          \u0007 obj2 = obj1;
          throw UnhandledException.\u0003(ex, (object) obj2);
        }
      }
    }

    [HelpKeyword("My.User")]
    internal static User User
    {
      [DebuggerHidden] get
      {
        try
        {
          return \u0002.\u0001.GetInstance;
        }
        catch (Exception ex)
        {
          User user1;
          User user2 = user1;
          throw UnhandledException.\u0003(ex, (object) user2);
        }
      }
    }

    [HelpKeyword("My.Forms")]
    internal static \u0002.\u0001 Forms
    {
      [DebuggerHidden] get
      {
        try
        {
          return \u0002.\u0001.GetInstance;
        }
        catch (Exception ex)
        {
          \u0002.\u0001 obj1;
          \u0002.\u0001 obj2 = obj1;
          throw UnhandledException.\u0003(ex, (object) obj2);
        }
      }
    }

    [HelpKeyword("My.WebServices")]
    internal static \u0002.\u0002 WebServices
    {
      [DebuggerHidden] get
      {
        try
        {
          return \u0002.\u0001.GetInstance;
        }
        catch (Exception ex)
        {
          \u0002.\u0002 obj1;
          \u0002.\u0002 obj2 = obj1;
          throw UnhandledException.\u0003(ex, (object) obj2);
        }
      }
    }

    [EditorBrowsable(EditorBrowsableState.Never)]
    [MyGroupCollection("System.Windows.Forms.Form", "Create__Instance__", "Dispose__Instance__", "My.MyProject.Forms")]
    internal sealed class \u0001
    {
      [NonSerialized]
      internal static \u0002 \u0001;
      public \u0004 \u0001;
      [ThreadStatic]
      private static Hashtable \u0001;

      public \u0004 Form1
      {
        [DebuggerNonUserCode] get
        {
          try
          {
            this.\u0001 = \u0002.\u0001.\u0003<\u0004>(this.\u0001);
            return this.\u0001;
          }
          catch (Exception ex)
          {
            \u0004 obj1;
            \u0004 obj2 = obj1;
            throw UnhandledException.\u0003(ex, (object) obj2, (object) this);
          }
        }
        [DebuggerNonUserCode] set
        {
          bool flag;
          try
          {
            flag = value == this.\u0001;
            if (flag)
              return;
            flag = value != null;
            if (flag)
              throw new ArgumentException(\u0002.\u0001.\u0001(6237));
            this.\u0003<\u0004>(ref this.\u0001);
          }
          catch (Exception ex)
          {
            __Boxed<bool> local = (ValueType) flag;
            \u0004 obj = value;
            throw UnhandledException.\u0003(ex, (object) local, (object) this, (object) obj);
          }
        }
      }

      [DebuggerHidden]
      private static T \u0003<T>(T Instance) where T : Form, new()
      {
        T obj1;
        string[] strArray1;
        string message;
        bool flag1;
        bool flag2;
        bool flag3;
        try
        {
          flag1 = (object) Instance == null || Instance.IsDisposed;
          if (flag1)
          {
            flag2 = \u0002.\u0001.\u0001 != null;
            if (flag2)
            {
              // ISSUE: type reference
              flag3 = \u0094\u0004.\u007E\u0088\u0005((object) \u0002.\u0001.\u0001, (object) \u0010\u0004.\u008E\u0004(__typeref (T)));
              if (flag3)
                throw new InvalidOperationException(\u0018\u0004.\u0003\u0002(\u0002.\u0001.\u0001(6286), new string[0]));
            }
            else
              \u0002.\u0001.\u0001 = new Hashtable();
            // ISSUE: type reference
            \u0001\u0005.\u007E\u0086\u0005((object) \u0002.\u0001.\u0001, (object) \u0010\u0004.\u008E\u0004(__typeref (T)), (object) null);
            try
            {
              obj1 = new T();
            }
            catch (TargetInvocationException ex) when (
            {
              // ISSUE: unable to correctly present filter
              ProjectData.SetProjectError((Exception) ex);
              if (\u0086\u0004.\u007E\u0086\u0003((object) ex) != null)
              {
                SuccessfulFiltering;
              }
              else
                throw;
            }
            )
            {
              \u0018\u0004 obj2 = \u0018\u0004.\u0003\u0002;
              string str = \u0002.\u0001.\u0001(6327);
              strArray1 = new string[1]
              {
                \u0013\u0006.\u007E\u0084\u0003((object) \u0086\u0004.\u007E\u0086\u0003((object) ex))
              };
              string[] strArray2 = strArray1;
              message = obj2(str, strArray2);
              throw new InvalidOperationException(message, \u0086\u0004.\u007E\u0086\u0003((object) ex));
            }
            finally
            {
              // ISSUE: type reference
              \u008E\u0002.\u007E\u008B\u0005((object) \u0002.\u0001.\u0001, (object) \u0010\u0004.\u008E\u0004(__typeref (T)));
            }
          }
          else
            obj1 = Instance;
          return obj1;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<T> local1 = (object) obj1;
          string str = message;
          TargetInvocationException invocationException = ex;
          string[] strArray3 = strArray1;
          // ISSUE: variable of a boxed type
          __Boxed<bool> local2 = (ValueType) flag1;
          // ISSUE: variable of a boxed type
          __Boxed<bool> local3 = (ValueType) flag2;
          // ISSUE: variable of a boxed type
          __Boxed<bool> local4 = (ValueType) flag3;
          // ISSUE: variable of a boxed type
          __Boxed<T> local5 = (object) Instance;
          throw UnhandledException.\u0003(ex, (object) local1, (object) str, (object) invocationException, (object) strArray3, (object) local2, (object) local3, (object) local4, (object) local5);
        }
      }

      [DebuggerHidden]
      private void \u0003<T>(ref T instance) where T : Form
      {
        T obj1;
        try
        {
          instance.Dispose();
          ref T local = ref instance;
          obj1 = default (T);
          T obj2 = obj1;
          local = obj2;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<T> local1 = (object) obj1;
          // ISSUE: variable of a boxed type
          __Boxed<T> local2 = (object) instance;
          throw UnhandledException.\u0003(ex, (object) local1, (object) this, (object) local2);
        }
      }

      [DebuggerHidden]
      [EditorBrowsable(EditorBrowsableState.Never)]
      public \u0001()
      {
        try
        {
        }
        catch (Exception ex)
        {
          throw UnhandledException.\u0003(ex, (object) this);
        }
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override bool Equals(object o)
      {
        try
        {
          return \u0094\u0004.\u008D\u0002((object) this, \u000E\u0005.\u0013\u0007(o));
        }
        catch (Exception ex)
        {
          bool flag;
          // ISSUE: variable of a boxed type
          __Boxed<bool> local = (ValueType) flag;
          object obj = o;
          throw UnhandledException.\u0003(ex, (object) local, (object) this, obj);
        }
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override int GetHashCode()
      {
        try
        {
          return \u009F\u0002.\u008F\u0002((object) this);
        }
        catch (Exception ex)
        {
          int num;
          // ISSUE: variable of a boxed type
          __Boxed<int> local = (ValueType) num;
          throw UnhandledException.\u0003(ex, (object) local, (object) this);
        }
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      internal System.Type \u0003()
      {
        try
        {
          // ISSUE: type reference
          return \u0010\u0004.\u008E\u0004(__typeref (\u0002.\u0001));
        }
        catch (Exception ex)
        {
          System.Type type1;
          System.Type type2 = type1;
          throw UnhandledException.\u0003(ex, (object) type2, (object) this);
        }
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override string ToString()
      {
        try
        {
          return \u0013\u0006.\u008C\u0002((object) this);
        }
        catch (Exception ex)
        {
          string str1;
          string str2 = str1;
          throw UnhandledException.\u0003(ex, (object) str2, (object) this);
        }
      }

      static \u0001() => \u0003.\u0003();
    }

    [EditorBrowsable(EditorBrowsableState.Never)]
    [MyGroupCollection("System.Web.Services.Protocols.SoapHttpClientProtocol", "Create__Instance__", "Dispose__Instance__", "")]
    internal sealed class \u0002
    {
      [EditorBrowsable(EditorBrowsableState.Never)]
      [DebuggerHidden]
      public override bool Equals(object o)
      {
        try
        {
          return \u0094\u0004.\u008D\u0002((object) this, \u000E\u0005.\u0013\u0007(o));
        }
        catch (Exception ex)
        {
          bool flag;
          // ISSUE: variable of a boxed type
          __Boxed<bool> local = (ValueType) flag;
          object obj = o;
          throw UnhandledException.\u0003(ex, (object) local, (object) this, obj);
        }
      }

      [DebuggerHidden]
      [EditorBrowsable(EditorBrowsableState.Never)]
      public override int GetHashCode()
      {
        try
        {
          return \u009F\u0002.\u008F\u0002((object) this);
        }
        catch (Exception ex)
        {
          int num;
          // ISSUE: variable of a boxed type
          __Boxed<int> local = (ValueType) num;
          throw UnhandledException.\u0003(ex, (object) local, (object) this);
        }
      }

      [DebuggerHidden]
      [EditorBrowsable(EditorBrowsableState.Never)]
      internal System.Type \u0003()
      {
        try
        {
          // ISSUE: type reference
          return \u0010\u0004.\u008E\u0004(__typeref (\u0002.\u0002));
        }
        catch (Exception ex)
        {
          System.Type type1;
          System.Type type2 = type1;
          throw UnhandledException.\u0003(ex, (object) type2, (object) this);
        }
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      [DebuggerHidden]
      public override string ToString()
      {
        try
        {
          return \u0013\u0006.\u008C\u0002((object) this);
        }
        catch (Exception ex)
        {
          string str1;
          string str2 = str1;
          throw UnhandledException.\u0003(ex, (object) str2, (object) this);
        }
      }

      [DebuggerHidden]
      private static T \u0003<T>(T instance) where T : new()
      {
        bool flag;
        try
        {
          flag = (object) instance == null;
          return !flag ? instance : new T();
        }
        catch (Exception ex)
        {
          T obj;
          // ISSUE: variable of a boxed type
          __Boxed<T> local1 = (object) obj;
          // ISSUE: variable of a boxed type
          __Boxed<bool> local2 = (ValueType) flag;
          // ISSUE: variable of a boxed type
          __Boxed<T> local3 = (object) instance;
          throw UnhandledException.\u0003(ex, (object) local1, (object) local2, (object) local3);
        }
      }

      [DebuggerHidden]
      private void \u0003<T>(ref T instance)
      {
        T obj1;
        try
        {
          ref T local = ref instance;
          obj1 = default (T);
          T obj2 = obj1;
          local = obj2;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<T> local1 = (object) obj1;
          // ISSUE: variable of a boxed type
          __Boxed<T> local2 = (object) instance;
          throw UnhandledException.\u0003(ex, (object) local1, (object) this, (object) local2);
        }
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      [DebuggerHidden]
      public \u0002()
      {
        try
        {
        }
        catch (Exception ex)
        {
          throw UnhandledException.\u0003(ex, (object) this);
        }
      }
    }

    [ComVisible(false)]
    [EditorBrowsable(EditorBrowsableState.Never)]
    internal sealed class \u0003<T> where T : new()
    {
      internal T GetInstance
      {
        [DebuggerHidden] get
        {
          bool flag;
          try
          {
            flag = (object) \u0002.\u0003<T>.\u0001 == null;
            if (flag)
              goto label_2;
label_1:
            return \u0002.\u0003<T>.\u0001;
label_2:
            \u0002.\u0003<T>.\u0001 = new T();
            goto label_1;
          }
          catch (Exception ex)
          {
            T obj;
            __Boxed<T> local1 = (object) obj;
            __Boxed<bool> local2 = (ValueType) flag;
            throw UnhandledException.\u0003(ex, (object) local1, (object) local2, (object) this);
          }
        }
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      [DebuggerHidden]
      public \u0003()
      {
        try
        {
        }
        catch (Exception ex)
        {
          throw UnhandledException.\u0003(ex, (object) this);
        }
      }
    }
  }
}
