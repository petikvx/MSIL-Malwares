// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONClass
// Assembly: ResourceTypeCo, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: D98D3237-A321-4821-9049-807D7FD195EE
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-2bf24741d28e493dd3c0fabc7478edccab0bc3835b2648c09ba153c94c065f3c.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONClass : JSONNode, IEnumerable
  {
    private Dictionary<string, JSONNode> m_Dict = new Dictionary<string, JSONNode>();

    public override JSONNode this[string aKey]
    {
      get
      {
        bool flag = this.m_Dict.ContainsKey(aKey);
label_1:
        int num1 = 1938508442;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1788642815)) % 5U)
          {
            case 0:
              jsonNode = this.m_Dict[aKey];
              num1 = (int) num2 * -303106636 ^ 60020344;
              continue;
            case 1:
              int num3 = !flag ? -774659209 : (num3 = -1503173153);
              num1 = num3 ^ (int) num2 * -1532596500;
              continue;
            case 2:
              goto label_1;
            case 3:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = 552571976;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = -1459785132;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -998822857)) % 8U)
          {
            case 0:
              num1 = (int) num2 * 178941470 ^ 766157426;
              continue;
            case 1:
              int num3 = !flag ? 2076793200 : (num3 = 953892396);
              num1 = num3 ^ (int) num2 * -187722139;
              continue;
            case 2:
              this.m_Dict.Add(aKey, value);
              num1 = -220089150;
              continue;
            case 3:
              flag = this.m_Dict.ContainsKey(aKey);
              num1 = (int) num2 * 1938794138 ^ -1005419896;
              continue;
            case 4:
              num1 = (int) num2 * -1273942936 ^ 595593087;
              continue;
            case 5:
              goto label_3;
            case 6:
              this.m_Dict[aKey] = value;
              num1 = (int) num2 * -1621494119 ^ -1422176491;
              continue;
            case 7:
              goto label_1;
            default:
              goto label_10;
          }
        }
label_3:
        return;
label_10:;
      }
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = -367077971;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          int num3;
          switch ((num2 = (uint) (num1 ^ -200385083)) % 7U)
          {
            case 0:
              goto label_1;
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 2022124287 ^ 1891974560;
              continue;
            case 2:
              jsonNode = (JSONNode) null;
              num1 = -1204364836;
              continue;
            case 3:
              if (aIndex < 0)
              {
                num3 = 1;
                break;
              }
              num1 = (int) num2 * -1777142365 ^ -489514598;
              continue;
            case 4:
              num1 = (int) num2 * -1405673938 ^ -339179174;
              continue;
            case 5:
              num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
              break;
            default:
              goto label_11;
          }
          int num4;
          num1 = num4 = num3 == 0 ? -1613942815 : (num4 = -1634862603);
        }
label_11:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = -735621374;
        while (true)
        {
          uint num2;
          int num3;
          switch ((num2 = (uint) (num1 ^ -787017223)) % 5U)
          {
            case 0:
              num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
              break;
            case 1:
              num1 = (int) num2 * -1878665962 ^ -1018891625;
              continue;
            case 2:
              goto label_1;
            case 3:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * -585701888 ^ -894587841;
                continue;
              }
              num3 = 1;
              break;
            case 4:
              goto label_3;
            default:
              goto label_10;
          }
          int num4;
          num1 = num4 = num3 == 0 ? -562691973 : (num4 = -795653925);
        }
label_3:
        return;
label_10:;
      }
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = 1415705579;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1257164685)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              count = this.m_Dict.Count;
              num1 = (int) num2 * 254879222 ^ -1273088098;
              continue;
            case 3:
              num1 = (int) num2 * -803107984 ^ -132103232;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
      if (JSONClass.\u206C‌​‍⁫⁭⁪​⁪‫⁮​‎‪‏‍⁮‎‍⁪⁭‌⁭⁭⁭⁯‭‮⁯‮‎​‏‌⁫‪‍⁭⁭‪‮(aKey))
        goto label_11;
label_1:
      int num1 = -935175331;
label_2:
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1847136118)) % 13U)
        {
          case 0:
            num1 = (int) num2 * 1351657861 ^ -414725714;
            continue;
          case 1:
            flag = this.m_Dict.ContainsKey(aKey);
            num1 = (int) num2 * 787956175 ^ 1756980142;
            continue;
          case 2:
            this.m_Dict[aKey] = aItem;
            num1 = (int) num2 * 922174207 ^ 323896024;
            continue;
          case 3:
            goto label_11;
          case 4:
            num1 = (int) num2 * 777507970 ^ 1345752226;
            continue;
          case 5:
            num1 = (int) num2 * -468134445 ^ 942584210;
            continue;
          case 6:
            goto label_3;
          case 7:
            goto label_1;
          case 8:
            num1 = (int) num2 * -683636035 ^ -2078935647;
            continue;
          case 9:
            num1 = (int) num2 * 875195862 ^ -1284370507;
            continue;
          case 10:
            int num3 = !flag ? -1985134931 : (num3 = -709964731);
            num1 = num3 ^ (int) num2 * 855884032;
            continue;
          case 11:
            num1 = -63350306;
            continue;
          case 12:
            this.m_Dict.Add(aKey, aItem);
            num1 = -391918233;
            continue;
          default:
            goto label_15;
        }
      }
label_3:
      return;
label_15:
      return;
label_11:
      this.m_Dict.Add(Guid.NewGuid().ToString(), aItem);
      num1 = -143720438;
      goto label_2;
    }

    public override JSONNode Remove(string aKey)
    {
label_1:
      int num1 = -30435918;
      JSONNode jsonNode1;
      JSONNode jsonNode2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2066143515)) % 8U)
        {
          case 0:
            this.m_Dict.Remove(aKey);
            num1 = (int) num2 * 1051339343 ^ 199889644;
            continue;
          case 1:
            jsonNode2 = jsonNode1;
            num1 = (int) num2 * 1374467253 ^ -181301498;
            continue;
          case 2:
            goto label_1;
          case 3:
            jsonNode1 = this.m_Dict[aKey];
            num1 = -2006895859;
            continue;
          case 4:
            jsonNode2 = (JSONNode) null;
            num1 = (int) num2 * -1611031021 ^ 394136156;
            continue;
          case 5:
            num1 = (int) num2 * -531930126 ^ 1547037929;
            continue;
          case 7:
            int num3 = this.m_Dict.ContainsKey(aKey) ? 1309966886 : (num3 = 393260313);
            num1 = num3 ^ (int) num2 * -1152409776;
            continue;
          default:
            goto label_9;
        }
      }
label_9:
      return jsonNode2;
    }

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = 247940100;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        bool flag;
        int num3;
        switch ((num2 = (uint) (num1 ^ 662570478)) % 8U)
        {
          case 0:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 1080775716 ^ 319953999;
            continue;
          case 1:
            num1 = (int) num2 * -1657389321 ^ 926537026;
            continue;
          case 2:
            if (aIndex >= 0)
            {
              num1 = (int) num2 * -1579547200 ^ 687501704;
              continue;
            }
            num3 = 1;
            break;
          case 4:
            goto label_1;
          case 5:
            int num4 = !flag ? 2063160071 : (num4 = 1702004056);
            num1 = num4 ^ (int) num2 * -601402818;
            continue;
          case 6:
            num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
            break;
          case 7:
            jsonNode = (JSONNode) null;
            num1 = 745360213;
            continue;
          default:
            goto label_12;
        }
        flag = num3 != 0;
        num1 = 2084287971;
      }
label_12:
      return jsonNode;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      JSONNode jsonNode;
      try
      {
        jsonNode = (JSONNode) null;
      }
      catch
      {
label_3:
        int num1 = -705169897;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -751456940)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -403485099 ^ 484142744;
              continue;
            default:
              goto label_6;
          }
        }
      }
label_6:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONClass.\u003Cget_Childs\u003Ed__14 getChildsD14 = new JSONClass.\u003Cget_Childs\u003Ed__14(-2);
label_1:
        int num1 = -932722954;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -459011232)) % 4U)
          {
            case 1:
              childs = (IEnumerable<JSONNode>) getChildsD14;
              num1 = (int) num2 * 714519421 ^ 998802733;
              continue;
            case 2:
              getChildsD14.\u003C\u003E4__this = this;
              num1 = (int) num2 * 1976247366 ^ -861044187;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return childs;
      }
    }

    public IEnumerator GetEnumerator()
    {
      bool enumerator1;
      // ISSUE: fault handler
      try
      {
        // ISSUE: reference to a compiler-generated field
        int num1 = this.\u003C\u003E1__state;
label_1:
        int num2 = 148317844;
        Dictionary<string, JSONNode>.Enumerator enumerator;
        KeyValuePair<string, JSONNode> N;
        while (true)
        {
          uint num3;
          switch ((num3 = (uint) (num2 ^ 379499826)) % 21U)
          {
            case 0:
            case 11:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = 454363683;
              continue;
            case 1:
            case 16:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -1;
              num2 = 1891663411;
              continue;
            case 2:
            case 9:
              goto label_20;
            case 3:
              int num4;
              num2 = num4 = num1 == 1 ? 2006301493 : (num4 = 893624032);
              continue;
            case 4:
              num2 = (int) num3 * -563970764 ^ -838345807;
              continue;
            case 5:
              num2 = (int) num3 * -776333823 ^ 1063087209;
              continue;
            case 6:
              goto label_1;
            case 7:
              enumerator = this.m_Dict.GetEnumerator();
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = (int) num3 * -2125773652 ^ 281640960;
              continue;
            case 8:
              num2 = (int) num3 * 1353714689 ^ 1824657416;
              continue;
            case 10:
              num2 = (int) num3 * -820499917 ^ 1976188085;
              continue;
            case 13:
              int num5;
              num2 = num5 = enumerator.MoveNext() ? 878955576 : (num5 = 268491355);
              continue;
            case 14:
              enumerator1 = false;
              num2 = 1039274737;
              continue;
            case 15:
              N = new KeyValuePair<string, JSONNode>();
              num2 = (int) num3 * -2093190805 ^ -1303981604;
              continue;
            case 17:
              // ISSUE: reference to a compiler-generated method
              this.\u003C\u003Em__Finally1();
              num2 = (int) num3 * 577644672 ^ -1573410382;
              continue;
            case 18:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E2__current = (object) N;
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = 1;
              enumerator1 = true;
              num2 = (int) num3 * 1542742530 ^ -1029800008;
              continue;
            case 19:
              N = enumerator.Current;
              num2 = 667987598;
              continue;
            case 20:
              int num6 = num1 != 0 ? -1621002540 : (num6 = -1509587712);
              num2 = num6 ^ (int) num3 * 1489982862;
              continue;
            default:
              goto label_18;
          }
        }
label_18:
        enumerator = new Dictionary<string, JSONNode>.Enumerator();
        enumerator1 = false;
      }
      __fault
      {
        // ISSUE: reference to a compiler-generated method
        this.System\u002EIDisposable\u002EDispose();
      }
label_20:
      return enumerator1;
    }

    public override string ToString()
    {
label_1:
      int num1 = 183653657;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1815189496)) % 4U)
        {
          case 1:
            str1 = "{";
            num1 = (int) num2 * 1722337243 ^ -185105459;
            continue;
          case 2:
            num1 = (int) num2 * 1634061428 ^ 1172002800;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      using (Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator())
      {
label_12:
        int num3 = !enumerator.MoveNext() ? 463410165 : (num3 = 350324260);
        KeyValuePair<string, JSONNode> current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1815189496)) % 8U)
          {
            case 0:
              num3 = (int) num4 * 344524291 ^ -2070933033;
              continue;
            case 1:
              str1 = JSONClass.\u200D⁪‪‪‍‪⁫‭⁪‪⁪‭‌‫‏‌‭⁭⁯⁮⁮​⁬‫‬‌‫‭‎‍‏‮​‫⁫⁯‭‬⁭‪‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\":",
                JSONClass.\u202B‬⁫‮‫‍‎‫‍‬⁮‍‪⁯‌‎‭‫⁮​‎‮‭‮⁭⁬⁬‮⁯‬⁬⁫‮⁭‌‫‪‫‭⁫‮((object) current.Value)
              });
              num3 = 2131679808;
              continue;
            case 2:
              num3 = 350324260;
              continue;
            case 3:
              int num5 = JSONClass.\u202E‮​‏‪⁭‫‍⁪‏‏‏⁭‏‌‫‪⁮⁫⁫⁬‪⁯‎‪‭⁪‍‍‎‍⁪⁪‎‭‮⁭​⁯‏‮(str1) > 2 ? -56084906 : (num5 = -351467535);
              num3 = num5 ^ (int) num4 * -649807168;
              continue;
            case 4:
              current = enumerator.Current;
              num3 = 135996563;
              continue;
            case 6:
              str1 = JSONClass.\u206A‎‫⁪⁭⁫⁫‍‬​‮‭‬‍‫​⁯‬‮‬‏‫⁭‮⁯⁬‪‍⁬⁫‌‏‏‍⁪‫‬‫‫‭‮(str1, ", ");
              num3 = (int) num4 * -875449628 ^ 1487954505;
              continue;
            case 7:
              goto label_12;
            default:
              goto label_16;
          }
        }
      }
label_16:
      string str2 = JSONClass.\u206A‎‫⁪⁭⁫⁫‍‬​‮‭‬‍‫​⁯‬‮‬‏‫⁭‮⁯⁬‪‍⁬⁫‌‏‏‍⁪‫‬‫‫‭‮(str1, "}");
label_17:
      int num6 = 1009670898;
      string str3;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ 1815189496)) % 3U)
        {
          case 0:
            goto label_17;
          case 2:
            str3 = str2;
            num6 = (int) num7 * 1210955776 ^ -1079049501;
            continue;
          default:
            goto label_20;
        }
      }
label_20:
      return str3;
    }

    public override string ToString(string aPrefix)
    {
      string str1 = "{ ";
      using (Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator())
      {
label_8:
        int num1 = enumerator.MoveNext() ? 2986630 : (num1 = 63660579);
        KeyValuePair<string, JSONNode> current;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 316582943)) % 8U)
          {
            case 0:
              str1 = JSONClass.\u200B‎‏‮‮⁪‏‌⁫⁪‏⁭‌‌‬‏⁪‬⁪‎⁬‏⁪‬‮⁮‬‎​⁪⁯‬‫⁬‪​‏‫⁬⁬‮(str1, "\n", aPrefix, "   ");
              str1 = JSONClass.\u200D⁪‪‪‍‪⁫‭⁪‪⁪‭‌‫‏‌‭⁭⁯⁮⁮​⁬‫‬‌‫‭‎‍‏‮​‫⁫⁯‭‬⁭‪‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\" : ",
                current.Value.ToString(JSONClass.\u206A‎‫⁪⁭⁫⁫‍‬​‮‭‬‍‫​⁯‬‮‬‏‫⁭‮⁯⁬‪‍⁬⁫‌‏‏‍⁪‫‬‫‫‭‮(aPrefix, "   "))
              });
              num1 = 396921900;
              continue;
            case 1:
              current = enumerator.Current;
              num1 = 1044735402;
              continue;
            case 2:
              num1 = 2986630;
              continue;
            case 3:
              goto label_8;
            case 5:
              num1 = (int) num2 * 292479847 ^ -1599211734;
              continue;
            case 6:
              int num3 = JSONClass.\u202E‮​‏‪⁭‫‍⁪‏‏‏⁭‏‌‫‪⁮⁫⁫⁬‪⁯‎‪‭⁪‍‍‎‍⁪⁪‎‭‮⁭​⁯‏‮(str1) > 3 ? -278455926 : (num3 = -1369153563);
              num1 = num3 ^ (int) num2 * 29106027;
              continue;
            case 7:
              str1 = JSONClass.\u206A‎‫⁪⁭⁫⁫‍‬​‮‭‬‍‫​⁯‬‮‬‏‫⁭‮⁯⁬‪‍⁬⁫‌‏‏‍⁪‫‬‫‫‭‮(str1, ", ");
              num1 = (int) num2 * -60049744 ^ -1788120809;
              continue;
            default:
              goto label_11;
          }
        }
      }
label_11:
      string str2 = JSONClass.\u200B‎‏‮‮⁪‏‌⁫⁪‏⁭‌‌‬‏⁪‬⁪‎⁬‏⁪‬‮⁮‬‎​⁪⁯‬‫⁬‪​‏‫⁬⁬‮(str1, "\n", aPrefix, "}");
label_12:
      int num4 = 709589197;
      string str3;
      while (true)
      {
        uint num5;
        switch ((num5 = (uint) (num4 ^ 316582943)) % 4U)
        {
          case 0:
            goto label_12;
          case 1:
            num4 = (int) num5 * 380053116 ^ 1587228352;
            continue;
          case 2:
            str3 = str2;
            num4 = (int) num5 * -125036869 ^ 572945372;
            continue;
          default:
            goto label_16;
        }
      }
label_16:
      return str3;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
      JSONClass.\u202D‬⁬‎‫⁪⁮⁬⁭‏‬​⁯‬⁭‌⁬‎‏‭‭‬⁬‬‫⁭‪‏‏⁬⁮‍‍‬‌⁪‬‍‬⁫‮(aWriter, (byte) 2);
      JSONClass.\u206F⁯‍‌‮⁭⁫⁫‎⁪⁪‎‮‪‮‮⁯​⁬⁫⁬‎‭‏⁫⁪⁭‭⁫‭‏⁫⁮‌⁭‬⁪‍​⁭‮(aWriter, this.m_Dict.Count);
      using (Dictionary<string, JSONNode>.KeyCollection.Enumerator enumerator = this.m_Dict.Keys.GetEnumerator())
      {
label_9:
        int num1 = !enumerator.MoveNext() ? -1537114036 : (num1 = -500088564);
        string current;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -327967313)) % 9U)
          {
            case 0:
              this.m_Dict[current].Serialize(aWriter);
              num1 = (int) num2 * -170630389 ^ -1999651163;
              continue;
            case 1:
              goto label_12;
            case 2:
              num1 = -500088564;
              continue;
            case 3:
              goto label_9;
            case 4:
              num1 = (int) num2 * -461158181 ^ 953636481;
              continue;
            case 5:
              num1 = (int) num2 * 1908887821 ^ 599173662;
              continue;
            case 6:
              JSONClass.\u206A⁯⁯‫‬⁯‏‭‏⁭‌‌‫⁮⁭⁮⁯⁪‭‬‬⁭‎⁮⁬⁫‬⁮‫⁭⁬‏⁪‬‍‫‭⁭‎‭‮(aWriter, current);
              num1 = (int) num2 * 1084805841 ^ 1555431897;
              continue;
            case 7:
              current = enumerator.Current;
              num1 = -107356682;
              continue;
            case 8:
              num1 = (int) num2 * 515415547 ^ -202608744;
              continue;
            default:
              goto label_4;
          }
        }
label_12:
        return;
label_4:;
      }
    }

    static bool \u206C‌​‍⁫⁭⁪​⁪‫⁮​‎‪‏‍⁮‎‍⁪⁭‌⁭⁭⁭⁯‭‮⁯‮‎​‏‌⁫‪‍⁭⁭‪‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    static int \u202E‮​‏‪⁭‫‍⁪‏‏‏⁭‏‌‫‪⁮⁫⁫⁬‪⁯‎‪‭⁪‍‍‎‍⁪⁪‎‭‮⁭​⁯‏‮([In] string obj0) => obj0.Length;

    static string \u206A‎‫⁪⁭⁫⁫‍‬​‮‭‬‍‫​⁯‬‮‬‏‫⁭‮⁯⁬‪‍⁬⁫‌‏‏‍⁪‫‬‫‫‭‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u202B‬⁫‮‫‍‎‫‍‬⁮‍‪⁯‌‎‭‫⁮​‎‮‭‮⁭⁬⁬‮⁯‬⁬⁫‮⁭‌‫‪‫‭⁫‮([In] object obj0) => obj0.ToString();

    static string \u200D⁪‪‪‍‪⁫‭⁪‪⁪‭‌‫‏‌‭⁭⁯⁮⁮​⁬‫‬‌‫‭‎‍‏‮​‫⁫⁯‭‬⁭‪‮([In] string[] obj0) => string.Concat(obj0);

    static string \u200B‎‏‮‮⁪‏‌⁫⁪‏⁭‌‌‬‏⁪‬⁪‎⁬‏⁪‬‮⁮‬‎​⁪⁯‬‫⁬‪​‏‫⁬⁬‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u202D‬⁬‎‫⁪⁮⁬⁭‏‬​⁯‬⁭‌⁬‎‏‭‭‬⁬‬‫⁭‪‏‏⁬⁮‍‍‬‌⁪‬‍‬⁫‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u206F⁯‍‌‮⁭⁫⁫‎⁪⁪‎‮‪‮‮⁯​⁬⁫⁬‎‭‏⁫⁪⁭‭⁫‭‏⁫⁮‌⁭‬⁪‍​⁭‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u206A⁯⁯‫‬⁯‏‭‏⁭‌‌‫⁮⁭⁮⁯⁪‭‬‬⁭‎⁮⁬⁫‬⁮‫⁭⁬‏⁪‬‍‫‭⁭‎‭‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
