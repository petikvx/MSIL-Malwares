// Decompiled with JetBrains decompiler
// Type: .
// Assembly: 5555, Version=0.0.0.0, Culture=neutral, PublicKeyToken=f1fbbd7db53bfdb4
// MVID: 0D11B329-2752-44F3-ACE5-4122455C2392
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00040-msil\Trojan-Ransom.Win32.Blocker.arpc-0c7d5e5565ff7304f705e1aeb4d7e4e31ffcea64aa2ae579695a932615bbef73.exe

using \u0005;
using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.IO.IsolatedStorage;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using System.Threading;

namespace \u0005
{
  internal static class \u0002
  {
    private static readonly string \u0001;
    private static readonly string \u0002;
    private static readonly string \u0003;
    private static readonly string \u0004;
    private static readonly IsolatedStorageFile \u0001;
    private static readonly Encoding \u0001;
    private static readonly HashAlgorithm \u0001;

    static \u0002()
    {
      try
      {
        \u0002.\u0001 = "{0D11B329-2752-44F3-ACE5-4122455C2392}".Substring(1, 8);
        \u0002.\u0002 = Path.Combine(\u0002.\u0001, "Usages.bin");
        \u0002.\u0003 = Path.Combine(\u0002.\u0001, "D");
        \u0002.\u0004 = Path.Combine(\u0002.\u0001, "l");
        \u0002.\u0001 = \u009D\u0004.\u009A\u0005();
        \u0002.\u0001 = (HashAlgorithm) new MD5CryptoServiceProvider();
        \u0002.\u0001 = \u001D\u0005.\u0090\u0006();
        \u0002.\u0001.CreateDirectory(\u0002.\u0001);
        \u0002.\u0001.CreateDirectory(\u0002.\u0003);
      }
      catch (Exception ex)
      {
        \u0008.\u0005.\u0002(ex);
        throw;
      }
    }

    private static IDisposable \u0002()
    {
      try
      {
        return (IDisposable) new \u0002.\u0003(\u0002.\u0004);
      }
      catch (Exception ex)
      {
        \u0008.\u0005.\u0002(ex);
        throw;
      }
    }

    private static IsolatedStorageFileStream \u0002(
      [In] string obj0,
      [In] FileMode obj1,
      [In] FileAccess obj2)
    {
      try
      {
        return new IsolatedStorageFileStream(obj0, obj1, obj2, FileShare.None, \u0002.\u0001);
      }
      catch (Exception ex)
      {
        string str = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<FileMode> local1 = (Enum) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<FileAccess> local2 = (Enum) obj2;
        \u0008.\u0005.\u0002(ex, (object) str, (object) local1, (object) local2);
        throw;
      }
    }

    private static void \u0002([In] string obj0)
    {
      try
      {
        try
        {
          \u0002.\u0001.DeleteFile(obj0);
        }
        catch (IsolatedStorageException ex)
        {
        }
      }
      catch (Exception ex)
      {
        string str = obj0;
        \u0008.\u0005.\u0002(ex, (object) str);
        throw;
      }
    }

    private static void \u0002([In] string obj0, [In] long obj1)
    {
      ulong num1;
      IsolatedStorageFileStream storageFileStream1;
      try
      {
        IsolatedStorageFileStream storageFileStream2 = \u0002.\u0002(obj0, FileMode.OpenOrCreate, FileAccess.ReadWrite);
        if (true)
          goto label_14;
label_1:
        try
        {
          storageFileStream1.Position = obj1 + 8L;
          storageFileStream1.Position = obj1;
label_10:
          long num2 = (long) new BinaryReader((Stream) storageFileStream1).ReadUInt64();
          while (true)
          {
            if (true)
              goto label_9;
label_3:
            long num3;
            do
            {
              num3 = (long) num1;
              if (true)
              {
                long num4 = num3 + 1L;
                if (true)
                  goto label_8;
label_5:
                if (true)
                {
                  \u0010\u0005.\u007E\u0014\u0006((object) storageFileStream1, obj1);
                  continue;
                }
                goto label_10;
label_8:
                num1 = (ulong) num4;
                goto label_5;
              }
              else
                goto label_16;
            }
            while (false);
            break;
label_16:
            num2 = num3;
            continue;
label_9:
            num1 = (ulong) num2;
            goto label_3;
          }
          \u0016\u0005.\u007E\u001F\u0006((object) new BinaryWriter((Stream) storageFileStream1), num1);
          return;
        }
        finally
        {
          if (storageFileStream1 != null)
            \u0018\u0003.\u007E\u0083((object) storageFileStream1);
        }
label_14:
        storageFileStream1 = storageFileStream2;
        goto label_1;
      }
      catch (Exception ex)
      {
        IsolatedStorageFileStream storageFileStream3 = storageFileStream1;
        // ISSUE: variable of a boxed type
        __Boxed<ulong> local1 = (ValueType) num1;
        string str = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<long> local2 = (ValueType) obj1;
        \u0008.\u0005.\u0002(ex, (object) storageFileStream3, (object) local1, (object) str, (object) local2);
        throw;
      }
    }

    public static void \u0002([In] uint obj0)
    {
      IDisposable disposable1;
      try
      {
        if (false)
          return;
        if (true)
          goto label_11;
label_2:
        try
        {
          do
          {
            IDisposable disposable2 = \u0002.\u0002();
            if (true)
              goto label_5;
label_3:
            \u0002.\u0002(\u0002.\u0002, (long) (obj0 * 8U));
            continue;
label_5:
            disposable1 = disposable2;
            if (true)
              goto label_3;
          }
          while (false);
          return;
        }
        catch (Exception ex)
        {
          return;
        }
        finally
        {
          if (disposable1 != null)
            \u0018\u0003.\u007E\u0083((object) disposable1);
        }
label_11:
        disposable1 = (IDisposable) null;
        goto label_2;
      }
      catch (Exception ex)
      {
        IDisposable disposable3 = disposable1;
        // ISSUE: variable of a boxed type
        __Boxed<uint> local = (ValueType) obj0;
        \u0008.\u0005.\u0002(ex, (object) disposable3, (object) local);
        throw;
      }
    }

    private static string \u0002([In] string obj0)
    {
      byte[] b;
      Guid guid1;
      string str1;
      string str2;
      string str3;
      string str4;
      IsolatedStorageFileStream storageFileStream1;
      byte[] numArray1;
      try
      {
        byte[] bytes = \u0002.\u0001.GetBytes(obj0);
        if (true)
          goto label_17;
label_1:
        if (true)
          goto label_23;
label_15:
        str3 = \u0088\u0003.\u008A\u0006(\u0002.\u0003, \u0088\u0003.\u009D(str3, ".bin"));
label_16:
        return str3;
label_23:
        string str5 = Convert.ToBase64String(numArray1).Replace('\\', '@');
        if (true)
          str3 = str5;
        if (str3.Length > 50)
        {
          byte[] hash = \u0002.\u0001.ComputeHash(numArray1);
          if (true)
            goto label_19;
label_3:
          Guid guid2 = new Guid(b);
          if (true)
            goto label_20;
label_4:
          string str6 = \u001E\u0003.\u007E\u008C((object) guid1.ToString(), 0, 18);
          if (true)
            goto label_21;
label_5:
          if (true)
          {
            string str7 = \u0088\u0003.\u008A\u0006(\u0002.\u0003, str1);
            if (true)
              goto label_22;
label_7:
            str3 = \u0088\u0003.\u009D(str2, ".bin");
            goto label_8;
label_22:
            str2 = str7;
            goto label_7;
          }
label_8:
          str4 = \u0088\u0003.\u009D(str2, ".txt");
          storageFileStream1 = (IsolatedStorageFileStream) null;
          try
          {
            if (true)
            {
              storageFileStream1 = \u0002.\u0002(str4, FileMode.CreateNew, FileAccess.Write);
              \u0013\u0005.\u007E\u001A\u0006((object) storageFileStream1, numArray1, 0, numArray1.Length);
              goto label_16;
            }
            else
              goto label_16;
          }
          catch (IOException ex)
          {
            goto label_16;
          }
          finally
          {
            if (storageFileStream1 != null)
              \u0018\u0003.\u007E\u0015\u0006((object) storageFileStream1);
          }
label_21:
          str1 = str6;
          goto label_5;
label_20:
          guid1 = guid2;
          goto label_4;
label_19:
          b = hash;
          goto label_3;
        }
        else
          goto label_15;
label_17:
        numArray1 = bytes;
        goto label_1;
      }
      catch (Exception ex)
      {
        byte[] numArray2 = numArray1;
        string str8 = str3;
        byte[] numArray3 = b;
        string str9 = str1;
        string str10 = str2;
        string str11 = str4;
        IsolatedStorageFileStream storageFileStream2 = storageFileStream1;
        // ISSUE: variable of a boxed type
        __Boxed<Guid> local = (ValueType) guid1;
        string str12 = obj0;
        \u0008.\u0005.\u0002(ex, (object) numArray2, (object) str8, (object) numArray3, (object) str9, (object) str10, (object) str11, (object) storageFileStream2, (object) local, (object) str12);
        throw;
      }
    }

    public static void \u0003([In] string obj0)
    {
      string str1;
      IDisposable disposable1;
      try
      {
        do
        {
          if (false)
            goto label_11;
label_1:
          if (true)
            goto label_14;
label_2:
          try
          {
            IDisposable disposable2 = \u0002.\u0002();
            if (true)
            {
              disposable1 = disposable2;
              if (false)
                ;
            }
            string str2 = \u0002.\u0002(obj0);
            if (true)
              goto label_5;
label_3:
            \u0002.\u0002(str1, 0L);
            goto label_11;
label_5:
            str1 = str2;
            goto label_3;
          }
          catch (Exception ex)
          {
            goto label_11;
          }
          finally
          {
            if (disposable1 != null)
              \u0018\u0003.\u007E\u0083((object) disposable1);
          }
label_14:
          disposable1 = (IDisposable) null;
          goto label_2;
label_11:
          if (false)
            goto label_1;
        }
        while (false);
      }
      catch (Exception ex)
      {
        IDisposable disposable3 = disposable1;
        string str3 = str1;
        string str4 = obj0;
        \u0008.\u0005.\u0002(ex, (object) disposable3, (object) str3, (object) str4);
        throw;
      }
    }

    private static ulong[] \u0002([In] string obj0)
    {
      byte[] buffer;
      ulong[] numArray1;
      IsolatedStorageFileStream storageFileStream1;
      try
      {
        if (true)
          goto label_14;
label_11:
        if (true)
          return numArray1;
label_14:
        IsolatedStorageFileStream storageFileStream2 = new IsolatedStorageFileStream(obj0, FileMode.OpenOrCreate, FileAccess.Read, FileShare.None, \u0002.\u0001);
        if (true)
          goto label_13;
label_1:
        try
        {
          byte[] numArray2 = new byte[storageFileStream1.Length];
          if (true)
            buffer = numArray2;
          storageFileStream1.Read(buffer, 0, buffer.Length);
          do
          {
            ulong[] numArray3 = new ulong[buffer.Length / 8];
            if (true)
              goto label_4;
label_2:
            if (true)
            {
              \u0013\u0003.\u008C\u0002((Array) buffer, 0, (Array) numArray1, 0, buffer.Length);
              continue;
            }
            goto label_1;
label_4:
            numArray1 = numArray3;
            goto label_2;
          }
          while (false);
          goto label_11;
        }
        finally
        {
          if (storageFileStream1 != null)
            \u0018\u0003.\u007E\u0083((object) storageFileStream1);
        }
label_13:
        storageFileStream1 = storageFileStream2;
        goto label_1;
      }
      catch (Exception ex)
      {
        ulong[] numArray4 = numArray1;
        IsolatedStorageFileStream storageFileStream3 = storageFileStream1;
        byte[] numArray5 = buffer;
        string str = obj0;
        \u0008.\u0005.\u0002(ex, (object) numArray4, (object) storageFileStream3, (object) numArray5, (object) str);
        throw;
      }
    }

    public static \u0001 \u0002()
    {
      \u0001 obj1;
      \u0001 obj2;
      IDisposable disposable1;
      try
      {
        if (true)
          goto label_15;
label_13:
        return obj2;
label_15:
        IDisposable disposable2 = \u0002.\u0002();
        if (true)
          goto label_14;
label_1:
        try
        {
          \u0001 obj3 = \u0002.\u0004();
          if (true)
            goto label_4;
label_2:
          if (true)
          {
            \u0002.\u0003();
            \u0001 obj4 = obj1;
            if (true)
            {
              if (true)
              {
                obj2 = obj4;
                goto label_13;
              }
              else
                goto label_13;
            }
            else
              goto label_13;
          }
          else
            goto label_13;
label_4:
          obj1 = obj3;
          goto label_2;
        }
        finally
        {
          if (false)
            goto label_9;
label_8:
          if (disposable1 == null)
            goto label_12;
label_9:
          if (true)
          {
            if (true)
              \u0018\u0003.\u007E\u0083((object) disposable1);
            else
              goto label_8;
          }
label_12:;
        }
label_14:
        disposable1 = disposable2;
        goto label_1;
      }
      catch (Exception ex)
      {
        \u0001 obj5 = obj1;
        \u0001 obj6 = obj2;
        IDisposable disposable3 = disposable1;
        \u0008.\u0005.\u0002(ex, (object) obj5, (object) obj6, (object) disposable3);
        throw;
      }
    }

    public static \u0001 \u0003()
    {
      \u0001 obj1;
      IDisposable disposable1;
      try
      {
        if (true)
        {
          if (true)
            goto label_11;
label_2:
          try
          {
            do
            {
              \u0001 obj2 = \u0002.\u0004();
              if (true)
                goto label_4;
label_3:
              continue;
label_4:
              obj1 = obj2;
              goto label_3;
            }
            while (false);
            goto label_9;
          }
          finally
          {
            while (disposable1 != null)
            {
              if (true)
              {
                \u0018\u0003.\u007E\u0083((object) disposable1);
                break;
              }
            }
          }
label_11:
          IDisposable disposable2 = \u0002.\u0002();
          if (true)
          {
            disposable1 = disposable2;
            goto label_2;
          }
          else
            goto label_2;
        }
label_9:
        return obj1;
      }
      catch (Exception ex)
      {
        \u0001 obj3 = obj1;
        IDisposable disposable3 = disposable1;
        \u0008.\u0005.\u0002(ex, (object) obj3, (object) disposable3);
        throw;
      }
    }

    public static void \u0002()
    {
      IDisposable disposable1;
      try
      {
        if (true)
          goto label_8;
label_1:
        try
        {
          \u0002.\u0003();
          return;
        }
        finally
        {
          if (false)
            goto label_5;
label_3:
          if (disposable1 == null)
            goto label_5;
label_4:
          \u0018\u0003.\u007E\u0083((object) disposable1);
label_5:
          if (true)
          {
            if (false)
              goto label_3;
          }
          else
            goto label_4;
        }
label_8:
        IDisposable disposable2 = \u0002.\u0002();
        if (true)
        {
          disposable1 = disposable2;
          goto label_1;
        }
        else
          goto label_1;
      }
      catch (Exception ex)
      {
        IDisposable disposable3 = disposable1;
        \u0008.\u0005.\u0002(ex, (object) disposable3);
        throw;
      }
    }

    private static \u0001 \u0004()
    {
      string str1;
      ulong[] numArray1;
      string key;
      string str2;
      IsolatedStorageFileStream storageFileStream;
      byte[] numArray2;
      Dictionary<string, ulong> dictionary1;
      int index;
      string[] strArray;
      string str3;
      ulong[] numArray3;
      try
      {
        ulong[] numArray4 = \u0002.\u0002(\u0002.\u0002);
        if (true)
          numArray3 = numArray4;
        Dictionary<string, ulong> dictionary2 = new Dictionary<string, ulong>();
        if (true)
          goto label_30;
label_1:
        try
        {
          string[] fileNames = \u0002.\u0001.GetFileNames(\u0002.\u0003 + "\\*.bin");
          if (true)
            goto label_21;
label_2:
          if (true)
            goto label_22;
label_18:
          while (true)
          {
            if (index < strArray.Length)
              goto label_25;
            else
              goto label_19;
label_4:
            if (true)
            {
              numArray1 = \u0002.\u0002(str1);
              if (true)
              {
                str2 = \u0088\u0003.\u008A\u0006(\u0002.\u0003, \u0088\u0003.\u009D(key, ".txt"));
                if (true)
                {
                  storageFileStream = (IsolatedStorageFileStream) null;
                  try
                  {
                    storageFileStream = \u0002.\u0002(str2, FileMode.Open, FileAccess.Read);
                    numArray2 = new byte[\u000F\u0005.\u007E\u0012\u0006((object) storageFileStream)];
                    int num = \u0012\u0005.\u007E\u0018\u0006((object) storageFileStream, numArray2, 0, numArray2.Length);
                    key = \u009F\u0004.\u007E\u0098\u0005((object) \u0002.\u0001, numArray2);
                  }
                  catch (FileNotFoundException ex)
                  {
                    key = \u009F\u0004.\u007E\u0098\u0005((object) \u0002.\u0001, \u0001\u0004.\u0094\u0002(\u0081\u0003.\u007E\u0096((object) key, '@', '\\')));
                  }
                  finally
                  {
label_10:
                    while (true)
                    {
                      while (storageFileStream != null)
                      {
                        if (true)
                        {
                          if (true)
                          {
                            \u0018\u0003.\u007E\u0015\u0006((object) storageFileStream);
                            break;
                          }
                        }
                        else
                          goto label_10;
                      }
                      break;
                    }
                  }
                  dictionary1[key] = numArray1[0];
                }
                else
                  goto label_2;
              }
              ++index;
              continue;
            }
            goto label_1;
label_19:
            if (true)
            {
              if (false)
                goto label_4;
              else
                goto label_28;
            }
            else
              goto label_4;
label_25:
            object obj = (object) strArray[index];
            if (true)
              str3 = (string) obj;
            string withoutExtension = Path.GetFileNameWithoutExtension(str3);
            if (true)
              goto label_24;
label_3:
            str1 = Path.Combine(\u0002.\u0003, str3);
            goto label_4;
label_24:
            key = withoutExtension;
            goto label_3;
          }
label_22:
          index = 0;
          goto label_18;
label_21:
          strArray = fileNames;
          goto label_2;
        }
        catch (DirectoryNotFoundException ex)
        {
        }
label_28:
        return new \u0001(numArray3, dictionary1);
label_30:
        dictionary1 = dictionary2;
        goto label_1;
      }
      catch (Exception ex)
      {
        object[] objArray = new object[11]
        {
          (object) numArray3,
          (object) dictionary1,
          (object) str3,
          (object) key,
          (object) str1,
          (object) numArray1,
          (object) str2,
          (object) storageFileStream,
          (object) numArray2,
          (object) strArray,
          (object) index
        };
        \u0008.\u0005.\u0002(ex, objArray);
        throw;
      }
    }

    private static void \u0003()
    {
      string str1;
      string str2;
      string str3;
      int index;
      string[] strArray1;
      string str4;
      try
      {
        \u0002.\u0002(\u0002.\u0002);
label_1:
        try
        {
          string[] fileNames = \u0002.\u0001.GetFileNames(\u0002.\u0003 + "\\*.bin");
          if (true)
            goto label_11;
label_2:
          if (true)
            goto label_12;
label_10:
          for (; index < strArray1.Length; ++index)
          {
            if (true)
            {
              object obj = (object) strArray1[index];
              if (true)
                str4 = (string) obj;
              string withoutExtension = Path.GetFileNameWithoutExtension(str4);
              if (true)
                goto label_14;
label_4:
              string str5 = Path.Combine(\u0002.\u0003, str4);
              if (true)
                goto label_15;
label_5:
              \u0002.\u0002(str1);
label_6:
              string str6 = \u0088\u0003.\u008A\u0006(\u0002.\u0003, \u0088\u0003.\u009D(str2, ".txt"));
              if (true)
                goto label_16;
label_7:
              do
              {
                if (true)
                  \u0002.\u0002(str3);
                else
                  goto label_6;
              }
              while (false);
              continue;
label_16:
              str3 = str6;
              goto label_7;
label_15:
              str1 = str5;
              goto label_5;
label_14:
              str2 = withoutExtension;
              goto label_4;
            }
            else
              goto label_1;
          }
          goto label_20;
label_12:
          index = 0;
          goto label_10;
label_11:
          strArray1 = fileNames;
          goto label_2;
        }
        catch (DirectoryNotFoundException ex)
        {
        }
label_20:
        try
        {
          \u001E\u0005.\u007E\u0093\u0006((object) \u0002.\u0001, \u0002.\u0003);
        }
        catch (IsolatedStorageException ex)
        {
        }
        if (false)
          return;
        \u001E\u0005.\u007E\u0092\u0006((object) \u0002.\u0001, \u0002.\u0003);
      }
      catch (Exception ex)
      {
        string str7 = str4;
        string str8 = str2;
        string str9 = str1;
        string str10 = str3;
        string[] strArray2 = strArray1;
        // ISSUE: variable of a boxed type
        __Boxed<int> local = (ValueType) index;
        \u0008.\u0005.\u0002(ex, (object) str7, (object) str8, (object) str9, (object) str10, (object) strArray2, (object) local);
        throw;
      }
    }

    private sealed class \u0003 : IDisposable
    {
      private static readonly CultureInfo \u0001;
      private readonly CultureInfo \u0002;
      private readonly Mutex \u0001;

      public \u0003([In] string obj0)
      {
        try
        {
          this.\u0002 = \u0081\u0004.\u007E\u0012\u0004((object) \u001E\u0004.\u000E\u0004());
          \u0082\u0004.\u007E\u0013\u0004((object) \u001E\u0004.\u000E\u0004(), \u0002.\u0003.\u0001);
          if (\u0011\u0003.\u007E\u0089((object) obj0) > 260)
            obj0 = \u001D\u0003.\u007E\u0098((object) obj0, 261);
          obj0 = \u0081\u0003.\u007E\u0096((object) obj0, Path.DirectorySeparatorChar, '_');
          this.\u0001 = new Mutex(false, obj0);
          try
          {
            int num = \u0016\u0003.\u007E\u009D\u0003((object) this.\u0001) ? 1 : 0;
          }
          catch (AbandonedMutexException ex)
          {
          }
        }
        catch (Exception ex)
        {
          string str = obj0;
          \u0008.\u0005.\u0002(ex, (object) this, (object) str);
          throw;
        }
      }

      public void Dispose()
      {
        try
        {
          if (false)
            goto label_2;
label_1:
          if (true)
          {
            this.\u0001.ReleaseMutex();
            goto label_7;
          }
          else
            goto label_7;
label_2:
          if (true)
          {
            if (true)
              \u001E\u0004.\u000E\u0004().CurrentUICulture = this.\u0002;
            else
              goto label_1;
          }
          if (true)
            return;
label_7:
          this.\u0001.Close();
          goto label_2;
        }
        catch (Exception ex)
        {
          \u0008.\u0005.\u0002(ex, (object) this);
          throw;
        }
      }

      static \u0003()
      {
        try
        {
          \u0002.\u0003.\u0001 = CultureInfo.GetCultureInfo("en-US");
        }
        catch (Exception ex)
        {
          \u0008.\u0005.\u0002(ex);
          throw;
        }
      }
    }
  }
}
