// Decompiled with JetBrains decompiler
// Type: SpectraCyber.cPriorityQueue
// Assembly: STAThreadAttrib, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 6EE3DE1A-E148-4FBA-A193-65BEA1824C00
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-f6a784c2aa30ddaf03919958455d18bf51533a475c21a73eff578df0174cc5d4.exe

using System.Collections.Generic;
using System.Threading;

namespace SpectraCyber
{
  internal class cPriorityQueue : List<cCommandItem>
  {
    protected Semaphore msemaNotProcessed;

    public cPriorityQueue() => this.msemaNotProcessed = new Semaphore(0, int.MaxValue);

    public new void Add(cCommandItem pCommand)
    {
      bool flag = false;
      for (int index = 0; index < this.Count; ++index)
      {
        if (pCommand.Priority < this[index].Priority)
        {
          this.Insert(index, pCommand);
          flag = true;
          break;
        }
      }
      if (!flag)
        base.Add(pCommand);
      this.msemaNotProcessed.Release();
    }

    public cCommandItem GetFirstItem()
    {
      this.msemaNotProcessed.WaitOne();
      cCommandItem firstItem = this[0];
      this.Remove(firstItem);
      return firstItem;
    }

    public void Reduce()
    {
      List<char> charList = new List<char>();
      for (int index = this.Count - 1; index >= 0; --index)
      {
        string command = this[index].Command;
        if (charList.IndexOf(command[1]) != -1)
        {
          this.RemoveAt(index);
          this.msemaNotProcessed.WaitOne();
        }
        else
          charList.Add(command[1]);
      }
    }

    public new void Clear()
    {
      for (int index = 0; index < this.Count; ++index)
        this.msemaNotProcessed.WaitOne();
      base.Clear();
    }
  }
}
