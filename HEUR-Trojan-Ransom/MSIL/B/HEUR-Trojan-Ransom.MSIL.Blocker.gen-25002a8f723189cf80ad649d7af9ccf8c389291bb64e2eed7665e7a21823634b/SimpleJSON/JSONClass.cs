// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONClass
// Assembly: Eviden, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 0FBAEA8D-82D6-42CE-BC01-F979DED3F8E4
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-25002a8f723189cf80ad649d7af9ccf8c389291bb64e2eed7665e7a21823634b.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONClass : JSONNode, IEnumerable
  {
    private Dictionary<string, JSONNode> m_Dict = new Dictionary<string, JSONNode>();

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 1121946460;
        bool flag;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 611872949)) % 8U)
          {
            case 0:
              int num3 = !flag ? -1186674863 : (num3 = -450159432);
              num1 = num3 ^ (int) num2 * -698891808;
              continue;
            case 1:
              flag = this.m_Dict.ContainsKey(aKey);
              num1 = (int) num2 * -1225449650 ^ 271315003;
              continue;
            case 2:
              num1 = (int) num2 * 656938549 ^ -172653599;
              continue;
            case 3:
              num1 = (int) num2 * 1965716290 ^ 658870453;
              continue;
            case 4:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = 61788598;
              continue;
            case 5:
              jsonNode = this.m_Dict[aKey];
              num1 = (int) num2 * -639300186 ^ 2119222609;
              continue;
            case 7:
              goto label_1;
            default:
              goto label_9;
          }
        }
label_9:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 123440315;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 63916436)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              this.m_Dict.Add(aKey, value);
              num1 = 860488930;
              continue;
            case 2:
              num1 = (int) num2 * -1701499928 ^ -2130701902;
              continue;
            case 3:
              int num3 = this.m_Dict.ContainsKey(aKey) ? 1740076384 : (num3 = 1528673002);
              num1 = num3 ^ (int) num2 * -1243234233;
              continue;
            case 4:
              goto label_3;
            case 5:
              this.m_Dict[aKey] = value;
              num1 = (int) num2 * 1095907688 ^ -264997074;
              continue;
            default:
              goto label_8;
          }
        }
label_3:
        return;
label_8:;
      }
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
        if (aIndex < 0)
          goto label_7;
label_1:
        int num1 = 1564718149;
label_2:
        JSONNode jsonNode;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 852412661)) % 7U)
          {
            case 0:
              int num3 = flag ? -240347972 : (num3 = -2005673628);
              num1 = num3 ^ (int) num2 * -256843810;
              continue;
            case 1:
              goto label_6;
            case 3:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 1336460267 ^ -921384958;
              continue;
            case 4:
              num1 = (int) num2 * 1414284043 ^ 2097541482;
              continue;
            case 5:
              goto label_1;
            case 6:
              jsonNode = (JSONNode) null;
              num1 = 2050944026;
              continue;
            default:
              goto label_10;
          }
        }
label_6:
        int num4 = aIndex >= this.m_Dict.Count ? 1 : 0;
        goto label_8;
label_10:
        return jsonNode;
label_7:
        num4 = 1;
label_8:
        flag = num4 != 0;
        num1 = 2091555228;
        goto label_2;
      }
      set
      {
        if (aIndex < 0)
          goto label_5;
label_1:
        int num1 = 1995177397;
label_2:
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 191087177)) % 5U)
          {
            case 0:
              goto label_3;
            case 1:
              goto label_4;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * -848380984 ^ 1865051528;
              continue;
            case 4:
              int num3 = !flag ? -1225002280 : (num3 = -236444383);
              num1 = num3 ^ (int) num2 * 1949400944;
              continue;
            default:
              goto label_9;
          }
        }
label_3:
        return;
label_9:
        return;
label_4:
        int num4 = aIndex >= this.m_Dict.Count ? 1 : 0;
        goto label_6;
label_5:
        num4 = 1;
label_6:
        flag = num4 != 0;
        num1 = 1432584790;
        goto label_2;
      }
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = 147489624;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1270773117)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              count = this.m_Dict.Count;
              num1 = (int) num2 * -1015641944 ^ 489365327;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = -1990975197;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -797139921)) % 14U)
        {
          case 0:
            num1 = (int) num2 * -1851647833 ^ 417090409;
            continue;
          case 1:
            num1 = (int) num2 * 1702184122 ^ -464802496;
            continue;
          case 2:
            flag1 = this.m_Dict.ContainsKey(aKey);
            num1 = (int) num2 * 792634507 ^ 1254034343;
            continue;
          case 3:
            this.m_Dict.Add(Guid.NewGuid().ToString(), aItem);
            num1 = -1185339637;
            continue;
          case 4:
            num1 = (int) num2 * -1864315795 ^ 645898366;
            continue;
          case 5:
            num1 = (int) num2 * -1774872408 ^ 1296496402;
            continue;
          case 6:
            flag2 = !JSONClass.\u206B‪‬⁭⁯‫⁮‍‫⁫⁬⁭⁬⁪⁭‌‪⁬⁪⁭‫‍⁯‭‏‪‫⁪⁫‭⁯‬⁯⁯⁪‪​⁭‎⁫‮(aKey);
            num1 = (int) num2 * 480793738 ^ 1875033490;
            continue;
          case 7:
            int num3 = !flag2 ? 702924138 : (num3 = 908603129);
            num1 = num3 ^ (int) num2 * -8215638;
            continue;
          case 8:
            this.m_Dict[aKey] = aItem;
            num1 = (int) num2 * -72337145 ^ 682511902;
            continue;
          case 9:
            num1 = -1359428842;
            continue;
          case 10:
            int num4 = flag1 ? 1392068655 : (num4 = 1727108921);
            num1 = num4 ^ (int) num2 * -942043585;
            continue;
          case 11:
            goto label_3;
          case 12:
            this.m_Dict.Add(aKey, aItem);
            num1 = -2009172982;
            continue;
          case 13:
            goto label_1;
          default:
            goto label_16;
        }
      }
label_3:
      return;
label_16:;
    }

    public override JSONNode Remove(string aKey)
    {
label_1:
      int num1 = 1132842587;
      bool flag;
      JSONNode jsonNode1;
      JSONNode jsonNode2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1192368335)) % 9U)
        {
          case 0:
            goto label_1;
          case 1:
            int num3 = flag ? 822159966 : (num3 = 1332675433);
            num1 = num3 ^ (int) num2 * 522725315;
            continue;
          case 3:
            jsonNode2 = (JSONNode) null;
            num1 = (int) num2 * -271787291 ^ -1785451467;
            continue;
          case 4:
            flag = !this.m_Dict.ContainsKey(aKey);
            num1 = (int) num2 * 1268000683 ^ -1270467020;
            continue;
          case 5:
            num1 = (int) num2 * -255991215 ^ 2068298967;
            continue;
          case 6:
            jsonNode1 = this.m_Dict[aKey];
            num1 = 820608733;
            continue;
          case 7:
            this.m_Dict.Remove(aKey);
            jsonNode2 = jsonNode1;
            num1 = (int) num2 * -1444837619 ^ 1066448018;
            continue;
          case 8:
            num1 = (int) num2 * 1496302539 ^ -1919214486;
            continue;
          default:
            goto label_10;
        }
      }
label_10:
      return jsonNode2;
    }

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = -296333177;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        int num3;
        switch ((num2 = (uint) (num1 ^ -2094147938)) % 7U)
        {
          case 0:
            goto label_1;
          case 2:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * -1712493138 ^ -760847432;
            continue;
          case 3:
            num1 = (int) num2 * -1961838731 ^ -220066909;
            continue;
          case 4:
            num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
            break;
          case 5:
            jsonNode = (JSONNode) null;
            num1 = -971177677;
            continue;
          case 6:
            if (aIndex >= 0)
            {
              num1 = (int) num2 * -1654293706 ^ 26731258;
              continue;
            }
            num3 = 1;
            break;
          default:
            goto label_11;
        }
        int num4;
        num1 = num4 = num3 != 0 ? -438888157 : (num4 = -1294950078);
      }
label_11:
      return jsonNode;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = -243260333;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -848365087)) % 3U)
          {
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 127067520 ^ -1836878076;
              continue;
            case 2:
              goto label_2;
            default:
              goto label_9;
          }
        }
      }
      catch
      {
label_6:
        int num3 = -315393067;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -848365087)) % 3U)
          {
            case 1:
              jsonNode = (JSONNode) null;
              num3 = (int) num4 * -745225165 ^ -2124320929;
              continue;
            case 2:
              goto label_6;
            default:
              goto label_9;
          }
        }
      }
label_9:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONClass.\u003Cget_Childs\u003Ed__14 getChildsD14 = new JSONClass.\u003Cget_Childs\u003Ed__14(-2);
label_1:
        int num1 = 1963947905;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 918458967)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              childs = (IEnumerable<JSONNode>) getChildsD14;
              num1 = (int) num2 * 113461772 ^ -1931993472;
              continue;
            case 2:
              getChildsD14.\u003C\u003E4__this = this;
              num1 = (int) num2 * -1690756073 ^ 1099460320;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return childs;
      }
    }

    public IEnumerator GetEnumerator() => (IEnumerator) new JSONClass.\u003CGetEnumerator\u003Ed__15(0)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString()
    {
label_1:
      int num1 = -14810678;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -25640516)) % 4U)
        {
          case 1:
            num1 = (int) num2 * -1430065629 ^ 23759831;
            continue;
          case 2:
            str1 = "{";
            num1 = (int) num2 * 1727348278 ^ -771155267;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator();
      try
      {
label_12:
        int num3 = !enumerator.MoveNext() ? -2075806041 : (num3 = -1954456107);
        KeyValuePair<string, JSONNode> current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -25640516)) % 9U)
          {
            case 0:
              num3 = -1954456107;
              continue;
            case 1:
              str1 = JSONClass.\u206B‬⁯‫‍‬⁪‍‪‭​⁮‭‪‫‮⁪⁯​⁯‪‬⁪⁬⁬⁭⁯‬​‫⁫‬⁯⁪‭‏‏‪⁮‌‮(str1, ", ");
              num3 = (int) num4 * 2034909851 ^ -1928490731;
              continue;
            case 2:
              str1 = JSONClass.\u206E‌‎‬​⁬⁮‎‏‮⁪‬⁭‌‫‪‮‮‮⁮⁭‫‫​‫‎⁭‎‌‮‏⁭⁭⁯‫‬⁮‎‫‏‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\":",
                JSONClass.\u200B‍⁮‌‮‫⁭⁪‏‬‪‌‭⁪⁪⁭⁪‭⁬​⁫​‫⁯⁫⁮‪‬​⁫⁫⁮‪⁪‎⁮‏‬‍‭‮((object) current.Value)
              });
              num3 = -521595161;
              continue;
            case 3:
              goto label_12;
            case 4:
              num3 = (int) num4 * -156869498 ^ -120666041;
              continue;
            case 5:
              int num5 = JSONClass.\u206A‫⁫‎‭‍‫‭⁮‏⁫​⁭‫⁫‪‎‎‎‪‏‬⁮⁫​⁭⁮‬‍⁫‮​‭⁬‫⁯⁮​‍‮‮(str1) <= 2 ? -1777513369 : (num5 = -1103777398);
              num3 = num5 ^ (int) num4 * -958700704;
              continue;
            case 6:
              current = enumerator.Current;
              num3 = -219207383;
              continue;
            case 7:
              num3 = (int) num4 * 1991943665 ^ -535146031;
              continue;
            default:
              goto label_21;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_17:
        int num6 = -47912300;
        while (true)
        {
          uint num7;
          switch ((num7 = (uint) (num6 ^ -25640516)) % 3U)
          {
            case 1:
              num6 = (int) num7 * -1070951911 ^ 1125525266;
              continue;
            case 2:
              goto label_17;
            default:
              goto label_20;
          }
        }
label_20:;
      }
label_21:
      string str2 = JSONClass.\u206B‬⁯‫‍‬⁪‍‪‭​⁮‭‪‫‮⁪⁯​⁯‪‬⁪⁬⁬⁭⁯‬​‫⁫‬⁯⁪‭‏‏‪⁮‌‮(str1, "}");
label_22:
      int num8 = -1722642257;
      while (true)
      {
        uint num9;
        switch ((num9 = (uint) (num8 ^ -25640516)) % 3U)
        {
          case 0:
            goto label_22;
          case 2:
            num8 = (int) num9 * -886486756 ^ -1043928659;
            continue;
          default:
            goto label_25;
        }
      }
label_25:
      return str2;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = -1333552861;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1824050213)) % 3U)
        {
          case 1:
            str1 = "{ ";
            num1 = (int) num2 * -1461811847 ^ -814293965;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      using (Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator())
      {
label_9:
        int num3 = enumerator.MoveNext() ? -594168303 : (num3 = -1649152661);
        KeyValuePair<string, JSONNode> current;
        bool flag;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -1824050213)) % 10U)
          {
            case 0:
              goto label_9;
            case 1:
              int num5 = !flag ? -30365048 : (num5 = -1609289712);
              num3 = num5 ^ (int) num4 * 1720443968;
              continue;
            case 2:
              num3 = (int) num4 * -167311769 ^ -1219463313;
              continue;
            case 3:
              flag = JSONClass.\u206A‫⁫‎‭‍‫‭⁮‏⁫​⁭‫⁫‪‎‎‎‪‏‬⁮⁫​⁭⁮‬‍⁫‮​‭⁬‫⁯⁮​‍‮‮(str1) > 3;
              num3 = (int) num4 * -611429801 ^ -1295647385;
              continue;
            case 4:
              current = enumerator.Current;
              num3 = -811760313;
              continue;
            case 5:
              str1 = JSONClass.\u200D⁫‮⁭‭‪‬‬⁭⁫‮‭‌​⁯‪⁭‏​‬⁪‫‭⁭‎‌‌​‍‎‌⁭‏‪⁮⁮​‏‍‮‮(str1, "\n", aPrefix, "   ");
              str1 = JSONClass.\u206E‌‎‬​⁬⁮‎‏‮⁪‬⁭‌‫‪‮‮‮⁮⁭‫‫​‫‎⁭‎‌‮‏⁭⁭⁯‫‬⁮‎‫‏‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\" : ",
                current.Value.ToString(JSONClass.\u206B‬⁯‫‍‬⁪‍‪‭​⁮‭‪‫‮⁪⁯​⁯‪‬⁪⁬⁬⁭⁯‬​‫⁫‬⁯⁪‭‏‏‪⁮‌‮(aPrefix, "   "))
              });
              num3 = -539392697;
              continue;
            case 7:
              str1 = JSONClass.\u206B‬⁯‫‍‬⁪‍‪‭​⁮‭‪‫‮⁪⁯​⁯‪‬⁪⁬⁬⁭⁯‬​‫⁫‬⁯⁪‭‏‏‪⁮‌‮(str1, ", ");
              num3 = (int) num4 * 1684832592 ^ 1404191928;
              continue;
            case 8:
              num3 = (int) num4 * -984577991 ^ 406518396;
              continue;
            case 9:
              num3 = -594168303;
              continue;
            default:
              goto label_17;
          }
        }
      }
label_17:
      string str2 = JSONClass.\u200D⁫‮⁭‭‪‬‬⁭⁫‮‭‌​⁯‪⁭‏​‬⁪‫‭⁭‎‌‌​‍‎‌⁭‏‪⁮⁮​‏‍‮‮(str1, "\n", aPrefix, "}");
label_18:
      int num6 = -2040926846;
      string str3;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ -1824050213)) % 4U)
        {
          case 0:
            num6 = (int) num7 * 1371156582 ^ -1651868812;
            continue;
          case 1:
            str3 = str2;
            num6 = (int) num7 * -2052216894 ^ 212016413;
            continue;
          case 2:
            goto label_18;
          default:
            goto label_22;
        }
      }
label_22:
      return str3;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = -204420942;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -514994746)) % 5U)
        {
          case 0:
            num1 = (int) num2 * 1399035877 ^ 286537934;
            continue;
          case 1:
            JSONClass.\u206D‮‏⁪‬‭‎‬‫‍⁬‌‎⁭⁯‏‪⁭‌‎⁯⁫⁪‬‍‌‬⁪‌​⁬‫‌‏⁬⁪‬‬⁬⁯‮(aWriter, (byte) 2);
            num1 = (int) num2 * -2080525916 ^ -1673085636;
            continue;
          case 3:
            goto label_1;
          case 4:
            JSONClass.\u202B‫​⁯⁮⁪⁯‭⁪​​⁯⁪⁭⁫‫⁮‪⁬⁮‌‍‎‏‫‫‏⁯‫⁮‌‮​‭‫⁮​⁫‫‏‮(aWriter, this.m_Dict.Count);
            num1 = (int) num2 * 1259082819 ^ 269308796;
            continue;
          default:
            goto label_6;
        }
      }
label_6:
      Dictionary<string, JSONNode>.KeyCollection.Enumerator enumerator = this.m_Dict.Keys.GetEnumerator();
      try
      {
label_11:
        int num3 = !enumerator.MoveNext() ? -466395735 : (num3 = -1954988400);
        string current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -514994746)) % 8U)
          {
            case 0:
              num3 = (int) num4 * -480505831 ^ 980747786;
              continue;
            case 1:
              JSONClass.\u200B‍‮‪⁫‎⁬⁫‭⁯‭⁫⁫‪‌⁯‭‬⁭‮⁬⁫⁮‫‬‏⁭‏⁪‎‭‏‎⁫⁮⁮‌‎⁯‍‮(aWriter, current);
              num3 = (int) num4 * -802954165 ^ -729383242;
              continue;
            case 2:
              goto label_11;
            case 3:
              this.m_Dict[current].Serialize(aWriter);
              num3 = (int) num4 * -1570906635 ^ 834765009;
              continue;
            case 4:
              num3 = (int) num4 * -2039722415 ^ -603773456;
              continue;
            case 5:
              num3 = -1954988400;
              continue;
            case 6:
              current = enumerator.Current;
              num3 = -1737163737;
              continue;
            case 7:
              goto label_20;
            default:
              goto label_16;
          }
        }
label_20:
        return;
label_16:;
      }
      finally
      {
        enumerator.Dispose();
label_18:
        int num5 = -1383454837;
        while (true)
        {
          uint num6;
          switch ((num6 = (uint) (num5 ^ -514994746)) % 3U)
          {
            case 1:
              num5 = (int) num6 * -1867187108 ^ -1881887389;
              continue;
            case 2:
              goto label_18;
            default:
              goto label_22;
          }
        }
label_22:;
      }
    }

    static bool \u206B‪‬⁭⁯‫⁮‍‫⁫⁬⁭⁬⁪⁭‌‪⁬⁪⁭‫‍⁯‭‏‪‫⁪⁫‭⁯‬⁯⁯⁪‪​⁭‎⁫‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    static int \u206A‫⁫‎‭‍‫‭⁮‏⁫​⁭‫⁫‪‎‎‎‪‏‬⁮⁫​⁭⁮‬‍⁫‮​‭⁬‫⁯⁮​‍‮‮([In] string obj0) => obj0.Length;

    static string \u206B‬⁯‫‍‬⁪‍‪‭​⁮‭‪‫‮⁪⁯​⁯‪‬⁪⁬⁬⁭⁯‬​‫⁫‬⁯⁪‭‏‏‪⁮‌‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u200B‍⁮‌‮‫⁭⁪‏‬‪‌‭⁪⁪⁭⁪‭⁬​⁫​‫⁯⁫⁮‪‬​⁫⁫⁮‪⁪‎⁮‏‬‍‭‮([In] object obj0) => obj0.ToString();

    static string \u206E‌‎‬​⁬⁮‎‏‮⁪‬⁭‌‫‪‮‮‮⁮⁭‫‫​‫‎⁭‎‌‮‏⁭⁭⁯‫‬⁮‎‫‏‮([In] string[] obj0) => string.Concat(obj0);

    static string \u200D⁫‮⁭‭‪‬‬⁭⁫‮‭‌​⁯‪⁭‏​‬⁪‫‭⁭‎‌‌​‍‎‌⁭‏‪⁮⁮​‏‍‮‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u206D‮‏⁪‬‭‎‬‫‍⁬‌‎⁭⁯‏‪⁭‌‎⁯⁫⁪‬‍‌‬⁪‌​⁬‫‌‏⁬⁪‬‬⁬⁯‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u202B‫​⁯⁮⁪⁯‭⁪​​⁯⁪⁭⁫‫⁮‪⁬⁮‌‍‎‏‫‫‏⁯‫⁮‌‮​‭‫⁮​⁫‫‏‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u200B‍‮‪⁫‎⁬⁫‭⁯‭⁫⁫‪‌⁯‭‬⁭‮⁬⁫⁮‫‬‏⁭‏⁪‎‭‏‎⁫⁮⁮‌‎⁯‍‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
