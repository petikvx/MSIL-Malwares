// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: PInvokeAttribut, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: D5FBD274-2C02-4186-9C35-1EE6A67C7338
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-1aab9260ecb3ef6b3d07882eff498982f5146fb73a61ff77f8ea0dfbfb02cde7.exe

using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get => (JSONNode) null;
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get => (JSONNode) null;
      set
      {
      }
    }

    public virtual string Value
    {
      get
      {
label_1:
        int num1 = 2006813471;
        string str;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 142081494)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              str = "";
              num1 = (int) num2 * 1305220786 ^ 1598892902;
              continue;
            case 2:
              num1 = (int) num2 * 1007730770 ^ 1874977629;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return str;
      }
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
label_1:
        int num1 = -491766984;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1616012566)) % 4U)
          {
            case 1:
              num1 = (int) num2 * -1278916484 ^ -32449794;
              continue;
            case 2:
              count = 0;
              num1 = (int) num2 * 699218641 ^ 871004553;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem)
    {
label_1:
      int num1 = 1259933173;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 339924457)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            this.Add("", aItem);
            num1 = (int) num2 * -1572059762 ^ -650764939;
            continue;
          case 2:
            goto label_3;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public virtual JSONNode Remove(string aKey) => (JSONNode) null;

    public virtual JSONNode Remove(int aIndex)
    {
      JSONNode jsonNode = (JSONNode) null;
label_1:
      int num1 = -2031897663;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1943083762)) % 3U)
        {
          case 1:
            num1 = (int) num2 * 662588718 ^ 1157757279;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = 147624188;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 728962482)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            jsonNode = aNode;
            num1 = (int) num2 * 363719594 ^ 1355477711;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONNode.\u003Cget_Childs\u003Ed__17 getChildsD17 = new JSONNode.\u003Cget_Childs\u003Ed__17(-2);
label_1:
        int num1 = -405989628;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -914334033)) % 4U)
          {
            case 0:
              childs = (IEnumerable<JSONNode>) getChildsD17;
              num1 = (int) num2 * -582341782 ^ -1121530010;
              continue;
            case 2:
              goto label_1;
            case 3:
              getChildsD17.\u003C\u003E4__this = this;
              num1 = (int) num2 * -1731165217 ^ -1447773734;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return childs;
      }
    }

    public IEnumerable<JSONNode> DeepChilds
    {
      get
      {
        JSONNode.\u003Cget_DeepChilds\u003Ed__19 getDeepChildsD19 = new JSONNode.\u003Cget_DeepChilds\u003Ed__19(-2);
        getDeepChildsD19.\u003C\u003E4__this = this;
label_1:
        int num1 = -1630758384;
        IEnumerable<JSONNode> deepChilds;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1439106614)) % 3U)
          {
            case 1:
              deepChilds = (IEnumerable<JSONNode>) getDeepChildsD19;
              num1 = (int) num2 * -1301783900 ^ 481897563;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return deepChilds;
      }
    }

    public override string ToString()
    {
      string str = nameof (JSONNode);
label_1:
      int num1 = 1156340647;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1363575136)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -2004764595 ^ 395991373;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual string ToString(string aPrefix) => nameof (JSONNode);

    public virtual int AsInt
    {
      get
      {
        int result = 0;
label_1:
        int num1 = 177909069;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1719857281)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              asInt = result;
              num1 = (int) num2 * 1551998557 ^ 1325723604;
              continue;
            case 3:
              asInt = 0;
              num1 = 219354480;
              continue;
            case 4:
              int num3 = int.TryParse(this.Value, out result) ? 65995397 : (num3 = 30589687);
              num1 = num3 ^ (int) num2 * -1821761580;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asInt;
      }
      set
      {
label_1:
        int num1 = -1414271151;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2123936982)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Value = value.ToString();
              num1 = (int) num2 * 826000789 ^ -195045006;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual float AsFloat
    {
      get
      {
label_1:
        int num1 = -385784566;
        float result;
        bool flag;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -45278960)) % 9U)
          {
            case 1:
              int num3 = !flag ? 97017132 : (num3 = 1724244931);
              num1 = num3 ^ (int) num2 * -1564399596;
              continue;
            case 2:
              num1 = (int) num2 * -1804640728 ^ -1359360442;
              continue;
            case 3:
              result = 0.0f;
              num1 = (int) num2 * -292973183 ^ -2057898431;
              continue;
            case 4:
              flag = float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u200B‬⁭⁮‏⁮⁫‏‎‪‎⁪‮‫​‭⁫‍‭‪⁫​‎‫‫⁭‌‭⁫‌‫‌⁭⁬⁫⁪​‪⁬‎‮(), out result);
              num1 = (int) num2 * -635026854 ^ -784669215;
              continue;
            case 5:
              asFloat = result;
              num1 = (int) num2 * 1916789805 ^ 68495482;
              continue;
            case 6:
              asFloat = 0.0f;
              num1 = -1499427684;
              continue;
            case 7:
              num1 = (int) num2 * 2120219652 ^ -1365203134;
              continue;
            case 8:
              goto label_1;
            default:
              goto label_10;
          }
        }
label_10:
        return asFloat;
      }
      set
      {
        this.Value = value.ToString();
label_1:
        int num1 = -52768661;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -310004821)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              num1 = (int) num2 * 1801861473 ^ 904172751;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual double AsDouble
    {
      get
      {
        double result = 0.0;
label_1:
        int num1 = -100876344;
        double asDouble;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1596096716)) % 8U)
          {
            case 0:
              goto label_1;
            case 1:
              int num3 = !flag ? -1647345283 : (num3 = -995091545);
              num1 = num3 ^ (int) num2 * -1070225180;
              continue;
            case 2:
              num1 = (int) num2 * 729808744 ^ -1050154817;
              continue;
            case 4:
              flag = double.TryParse(this.Value, out result);
              num1 = (int) num2 * 984045189 ^ 541388273;
              continue;
            case 5:
              asDouble = 0.0;
              num1 = -222499910;
              continue;
            case 6:
              num1 = (int) num2 * -801513870 ^ 76047443;
              continue;
            case 7:
              asDouble = result;
              num1 = (int) num2 * 872514861 ^ 1481701789;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = 206045757;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 663315253)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Value = value.ToString();
              num1 = (int) num2 * 839599934 ^ -1209089114;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual bool AsBool
    {
      get
      {
label_1:
        int num1 = -1043834066;
        bool result;
        bool flag;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1218728852)) % 8U)
          {
            case 0:
              asBool = !JSONNode.\u202A⁬‭⁮⁮‭‍⁫‬‎‌‪‮⁫​⁫‎‮‮‎​‫‪‏‪‬‮‫⁭⁪‮‌‫‪​⁭‎​‎‏‮(this.Value);
              num1 = -1232026297;
              continue;
            case 2:
              result = false;
              flag = bool.TryParse(this.Value, out result);
              num1 = (int) num2 * -345411157 ^ 246043814;
              continue;
            case 3:
              num1 = (int) num2 * -483532472 ^ 721427917;
              continue;
            case 4:
              int num3 = flag ? 2093823325 : (num3 = 1617404040);
              num1 = num3 ^ (int) num2 * -1814718245;
              continue;
            case 5:
              asBool = result;
              num1 = (int) num2 * 1560879005 ^ -294761102;
              continue;
            case 6:
              goto label_1;
            case 7:
              num1 = (int) num2 * -2094763939 ^ -678838618;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asBool;
      }
      set
      {
        this.Value = value ? "true" : "false";
label_1:
        int num1 = -835102117;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -448239009)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              num1 = (int) num2 * -2050453900 ^ -1996152886;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = -83974507;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1926400569)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              asArray = this as JSONArray;
              num1 = (int) num2 * -457559803 ^ -560525990;
              continue;
            case 3:
              num1 = (int) num2 * -649436856 ^ -551303030;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asArray;
      }
    }

    public virtual JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = -1301996398;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1180218152)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -475166510 ^ -921133263;
              continue;
            case 2:
              asObject = this as JSONClass;
              num1 = (int) num2 * 2129335414 ^ 62921457;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s)
    {
label_1:
      int num1 = -1067265037;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1467960903)) % 3U)
        {
          case 1:
            jsonNode = (JSONNode) new JSONData(s);
            num1 = (int) num2 * 860120087 ^ 523598818;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public static implicit operator string(JSONNode d)
    {
      if (d == (object) null)
        goto label_4;
label_1:
      int num1 = -1546612146;
label_2:
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -287760255)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -1993250888 ^ 1048100616;
            continue;
          case 3:
            goto label_3;
          default:
            goto label_7;
        }
      }
label_3:
      string str1 = d.Value;
      goto label_5;
label_7:
      string str2;
      return str2;
label_4:
      str1 = (string) null;
label_5:
      str2 = str1;
      num1 = -1907843281;
      goto label_2;
    }

    public static bool operator ==(JSONNode a, object b)
    {
label_1:
      int num1 = 1537582142;
      bool flag1;
      while (true)
      {
        uint num2;
        bool flag2;
        int num3;
        switch ((num2 = (uint) (num1 ^ 1582811153)) % 7U)
        {
          case 0:
            goto label_1;
          case 1:
            flag1 = (object) a == b;
            num1 = 379455437;
            continue;
          case 2:
            if (b != null)
            {
              num3 = 0;
              break;
            }
            num1 = (int) num2 * -1917079255 ^ 1670935069;
            continue;
          case 4:
            flag1 = true;
            num1 = (int) num2 * -228249931 ^ 661737675;
            continue;
          case 5:
            int num4 = flag2 ? -1662147018 : (num4 = -1041126439);
            num1 = num4 ^ (int) num2 * 739127667;
            continue;
          case 6:
            num3 = a is JSONLazyCreator ? 1 : 0;
            break;
          default:
            goto label_11;
        }
        flag2 = num3 != 0;
        num1 = 195830018;
      }
label_11:
      return flag1;
    }

    public static bool operator !=(JSONNode a, object b)
    {
label_1:
      int num1 = 1730761537;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1555050872)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            flag = !(a == b);
            num1 = (int) num2 * 327263020 ^ -23754026;
            continue;
          case 2:
            num1 = (int) num2 * -1308843686 ^ 1519563659;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override bool Equals(object obj)
    {
      bool flag = (object) this == obj;
label_1:
      int num1 = -1363578146;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -694130924)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -1165777666 ^ -1826458542;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override int GetHashCode() => this.\u206F⁫‫‌‪‌‏‫⁪​‏‪⁪‫⁪⁮‍‭‏‍‎‮​⁯‪‍⁭​⁯⁪‌‬⁬⁭⁮⁮⁪⁭⁯‬‮();

    internal static string Escape(string aText)
    {
      string str1 = "";
label_1:
      int num1 = -887621062;
      int num2;
      string str2;
      string str3;
      char ch1;
      char ch2;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -1921990685)) % 26U)
        {
          case 0:
            num1 = (int) num3 * -2147360871 ^ 1430240983;
            continue;
          case 1:
label_3:
            str1 = JSONNode.\u200F​‏​⁮‍‏⁪⁯‫‮‬‍⁭‫‎‎​⁯‬⁪‪‍‬‎‪⁭‎‮‬‬⁮⁮‎‍⁫‏⁭‏‮(str1, "\\r");
            num1 = -1705377323;
            continue;
          case 2:
            ++num2;
            num1 = -354215079;
            continue;
          case 3:
label_23:
            str1 = JSONNode.\u200F​‏​⁮‍‏⁪⁯‫‮‬‍⁭‫‎‎​⁯‬⁪‪‍‬‎‪⁭‎‮‬‬⁮⁮‎‍⁫‏⁭‏‮(str1, "\\t");
            num1 = -1705377323;
            continue;
          case 4:
label_16:
            str1 = JSONNode.\u200F​‏​⁮‍‏⁪⁯‫‮‬‍⁭‫‎‎​⁯‬⁪‪‍‬‎‪⁭‎‮‬‬⁮⁮‎‍⁫‏⁭‏‮(str1, ch1.ToString());
            num1 = -212699026;
            continue;
          case 5:
            num1 = (int) num3 * 1394226238 ^ -382793158;
            continue;
          case 6:
label_17:
            str1 = JSONNode.\u200F​‏​⁮‍‏⁪⁯‫‮‬‍⁭‫‎‎​⁯‬⁪‪‍‬‎‪⁭‎‮‬‬⁮⁮‎‍⁫‏⁭‏‮(str1, "\\b");
            num1 = -1748260772;
            continue;
          case 7:
            num1 = (int) num3 * -232357387 ^ 1835700023;
            continue;
          case 8:
            goto label_1;
          case 9:
            int num4;
            num1 = num4 = ch2 == '\\' ? -2133925447 : (num4 = -1891922980);
            continue;
          case 10:
label_20:
            str1 = JSONNode.\u200F​‏​⁮‍‏⁪⁯‫‮‬‍⁭‫‎‎​⁯‬⁪‪‍‬‎‪⁭‎‮‬‬⁮⁮‎‍⁫‏⁭‏‮(str1, "\\n");
            num1 = -667836495;
            continue;
          case 11:
            num1 = (int) num3 * -901333317 ^ 593179802;
            continue;
          case 13:
            str2 = str1;
            num1 = (int) num3 * 219291415 ^ -1995999712;
            continue;
          case 14:
            num1 = (int) num3 * -477514372 ^ -1847058755;
            continue;
          case 15:
            num1 = (int) num3 * -1959187723 ^ -214885852;
            continue;
          case 16:
label_7:
            str1 = JSONNode.\u200F​‏​⁮‍‏⁪⁯‫‮‬‍⁭‫‎‎​⁯‬⁪‪‍‬‎‪⁭‎‮‬‬⁮⁮‎‍⁫‏⁭‏‮(str1, "\\f");
            num1 = -86566742;
            continue;
          case 17:
            num1 = (int) num3 * 1234039718 ^ 313843681;
            continue;
          case 18:
            ch1 = JSONNode.\u200C⁬⁬‭⁭‎‪‭‎‪‪‌⁮⁮⁭‮‏‎⁬​⁪‌⁭⁬‏‫‌⁯‬⁭‮⁮‎‏‪‪‬​⁫‌‮(str3, num2);
            ch2 = ch1;
            switch (ch2)
            {
              case '\b':
                goto label_17;
              case '\t':
                goto label_23;
              case '\n':
                goto label_20;
              case '\v':
                goto label_16;
              case '\f':
                goto label_7;
              case '\r':
                goto label_3;
              default:
                num1 = -739737056;
                continue;
            }
          case 19:
            int num5;
            num1 = num5 = ch2 != '"' ? -231424662 : (num5 = -1502264471);
            continue;
          case 20:
            str1 = JSONNode.\u200F​‏​⁮‍‏⁪⁯‫‮‬‍⁭‫‎‎​⁯‬⁪‪‍‬‎‪⁭‎‮‬‬⁮⁮‎‍⁫‏⁭‏‮(str1, "\\\"");
            num1 = -1705377323;
            continue;
          case 21:
            str3 = aText;
            num2 = 0;
            num1 = (int) num3 * -2069042149 ^ -178872167;
            continue;
          case 22:
            int num6;
            num1 = num6 = num2 < JSONNode.\u206B‪‎​‍⁫‍‏‭‭⁮‪⁭⁫‮‌⁮‎⁯⁮⁫⁬‌⁬⁮‎⁮‬‫⁫‭‏⁯⁬‬⁮⁯‮‏⁭‮(str3) ? -44976619 : (num6 = -214865428);
            continue;
          case 23:
            num1 = (int) num3 * 1312357773 ^ -1726884122;
            continue;
          case 24:
            str1 = JSONNode.\u200F​‏​⁮‍‏⁪⁯‫‮‬‍⁭‫‎‎​⁯‬⁪‪‍‬‎‪⁭‎‮‬‬⁮⁮‎‍⁫‏⁭‏‮(str1, "\\\\");
            num1 = -1119145083;
            continue;
          case 25:
            num1 = (int) num3 * -55881501 ^ -1914100626;
            continue;
          default:
            goto label_28;
        }
      }
label_28:
      return str2;
    }

    public static JSONNode Parse(string aJSON)
    {
      Stack<JSONNode> jsonNodeStack = new Stack<JSONNode>();
label_1:
      int num1 = -1420705815;
      string aKey;
      bool flag1;
      bool flag2;
      bool flag3;
      JSONNode jsonNode1;
      string aItem;
      bool flag4;
      char ch1;
      char ch2;
      int num2;
      char ch3;
      char ch4;
      bool flag5;
      bool flag6;
      bool flag7;
      bool flag8;
      bool flag9;
      bool flag10;
      bool flag11;
      bool flag12;
      string s;
      bool flag13;
      bool flag14;
      bool flag15;
      bool flag16;
      JSONNode jsonNode2;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -707162600)) % 153U)
        {
          case 0:
label_115:
            aItem = JSONNode.\u200F​‏​⁮‍‏⁪⁯‫‮‬‍⁭‫‎‎​⁯‬⁪‪‍‬‎‪⁭‎‮‬‬⁮⁮‎‍⁫‏⁭‏‮(aItem, "\r");
            num1 = -52534871;
            continue;
          case 1:
            int num4 = flag13 ? -56842504 : (num4 = -2047579948);
            num1 = num4 ^ (int) num3 * 1063406320;
            continue;
          case 2:
            flag9 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 105468695 ^ 1357336795;
            continue;
          case 3:
            aKey = JSONNode.\u200B‭⁬⁯⁮‪‪‮‭‌‬⁯⁭‭⁫​‪⁭‌‎⁪⁮‪‌⁯‫‍‪‌⁪‮‎⁭​‍⁪⁮‪​‏‮(aKey);
            num1 = (int) num3 * 853051908 ^ 715215315;
            continue;
          case 4:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            num1 = -1992344222;
            continue;
          case 5:
            num1 = -1269660172;
            continue;
          case 6:
            num1 = -692574653;
            continue;
          case 7:
label_97:
            flag13 = flag1;
            num1 = -208695809;
            continue;
          case 8:
            num1 = (int) num3 * 1288396910 ^ 12382838;
            continue;
          case 9:
            num1 = (int) num3 * 884810258 ^ 1731943518;
            continue;
          case 10:
            num1 = (int) num3 * -165803391 ^ 1658097396;
            continue;
          case 11:
            flag15 = jsonNode1 != (object) null;
            num1 = (int) num3 * 1541318267 ^ -570340198;
            continue;
          case 12:
            int num5 = !flag6 ? -1007887340 : (num5 = -1263980427);
            num1 = num5 ^ (int) num3 * -525735899;
            continue;
          case 13:
            num1 = (int) num3 * -133774059 ^ 924739939;
            continue;
          case 14:
            int num6 = jsonNode1 is JSONArray ? 1008435457 : (num6 = 1922926889);
            num1 = num6 ^ (int) num3 * -1026520932;
            continue;
          case 15:
            aItem = "";
            num1 = (int) num3 * -1150194249 ^ -1304233974;
            continue;
          case 16:
            num1 = -401009997;
            continue;
          case 17:
            int num7 = ch3 == ':' ? -1047951991 : (num7 = -1179099956);
            num1 = num7 ^ (int) num3 * 171831593;
            continue;
          case 18:
            num1 = (int) num3 * -1037760178 ^ 1067704639;
            continue;
          case 19:
            int num8;
            num1 = num8 = ch1 == 'f' ? -139438985 : (num8 = -519725608);
            continue;
          case 20:
          case 21:
          case 33:
          case 70:
          case 137:
label_85:
            ++num2;
            num1 = -717898352;
            continue;
          case 22:
            num1 = (int) num3 * 1454168473 ^ 845710625;
            continue;
          case 23:
            num1 = (int) num3 * -1041543311 ^ -126414867;
            continue;
          case 24:
            num1 = (int) num3 * -1521432768 ^ -1022761234;
            continue;
          case 25:
            num1 = (int) num3 * 577251241 ^ -536922637;
            continue;
          case 26:
            flag16 = JSONNode.\u200D‬‌‭​​‏⁫‏⁭​‎⁯‮‌⁯⁬⁫‮⁯‍‏‎⁫⁫⁪‬‏‭‌⁯‪‬​​⁯‫‌‍⁫‮(aItem, "");
            num1 = (int) num3 * 602267493 ^ 20893251;
            continue;
          case 27:
            num1 = (int) num3 * 1782093538 ^ 1845481162;
            continue;
          case 28:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -1645376948 ^ 738868701;
            continue;
          case 29:
            int num9 = !flag12 ? 2023496667 : (num9 = 588675052);
            num1 = num9 ^ (int) num3 * -1180477011;
            continue;
          case 30:
            int num10 = !flag3 ? -930221783 : (num10 = -1993759589);
            num1 = num10 ^ (int) num3 * 66578324;
            continue;
          case 31:
            switch (ch1)
            {
              case 'r':
                goto label_115;
              case 's':
                goto label_27;
              case 't':
                goto label_28;
              case 'u':
                goto label_148;
              default:
                num1 = -438798771;
                continue;
            }
          case 32:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 134547711 ^ 1867374276;
            continue;
          case 34:
            num1 = (int) num3 * -2102127513 ^ -2108154065;
            continue;
          case 35:
            ch1 = ch4;
            int num11 = ch1 > 'f' ? -1264627016 : (num11 = -1240467993);
            num1 = num11 ^ (int) num3 * -1164139897;
            continue;
          case 36:
            goto label_1;
          case 37:
            int num12 = !flag2 ? -1685644231 : (num12 = -231084413);
            num1 = num12 ^ (int) num3 * -711758845;
            continue;
          case 38:
            flag5 = flag1;
            num1 = -1854890283;
            continue;
          case 39:
            flag10 = JSONNode.\u200D‬‌‭​​‏⁫‏⁭​‎⁯‮‌⁯⁬⁫‮⁯‍‏‎⁫⁫⁪‬‏‭‌⁯‪‬​​⁯‫‌‍⁫‮(aKey, "");
            num1 = -2107524572;
            continue;
          case 40:
            flag4 = flag1;
            num1 = -1640786157;
            continue;
          case 41:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -484388210 ^ 20519570;
            continue;
          case 42:
            aItem = "";
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 86397282 ^ 179753921;
            continue;
          case 43:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 755453154 ^ -137997967;
            continue;
          case 44:
            num1 = (int) num3 * -1825137720 ^ 1035595193;
            continue;
          case 45:
            aItem = JSONNode.\u200F​‏​⁮‍‏⁪⁯‫‮‬‍⁭‫‎‎​⁯‬⁪‪‍‬‎‪⁭‎‮‬‬⁮⁮‎‍⁫‏⁭‏‮(aItem, JSONNode.\u200C⁬⁬‭⁭‎‪‭‎‪‪‌⁮⁮⁭‮‏‎⁬​⁪‌⁭⁬‏‫‌⁯‬⁭‮⁮‎‏‪‪‬​⁫‌‮(aJSON, num2).ToString());
            num1 = (int) num3 * -542861599 ^ 198159745;
            continue;
          case 46:
            aKey = "";
            num1 = -1831318630;
            continue;
          case 47:
label_28:
            aItem = JSONNode.\u200F​‏​⁮‍‏⁪⁯‫‮‬‍⁭‫‎‎​⁯‬⁪‪‍‬‎‪⁭‎‮‬‬⁮⁮‎‍⁫‏⁭‏‮(aItem, "\t");
            num1 = -617847197;
            continue;
          case 48:
            flag7 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -2075742622 ^ -1879372109;
            continue;
          case 49:
label_100:
            aItem = JSONNode.\u200F​‏​⁮‍‏⁪⁯‫‮‬‍⁭‫‎‎​⁯‬⁪‪‍‬‎‪⁭‎‮‬‬⁮⁮‎‍⁫‏⁭‏‮(aItem, JSONNode.\u200C⁬⁬‭⁭‎‪‭‎‪‪‌⁮⁮⁭‮‏‎⁬​⁪‌⁭⁬‏‫‌⁯‬⁭‮⁮‎‏‪‪‬​⁫‌‮(aJSON, num2).ToString());
            num1 = -1786183833;
            continue;
          case 50:
            num1 = (int) num3 * -1004957738 ^ 825812744;
            continue;
          case 51:
            num1 = (int) num3 * -1552747861 ^ 464159469;
            continue;
          case 52:
            int num13;
            num1 = num13 = flag1 ? -984060023 : (num13 = -215941563);
            continue;
          case 53:
            num1 = (int) num3 * -998431335 ^ -679552726;
            continue;
          case 54:
            flag14 = jsonNode1 != (object) null;
            num1 = (int) num3 * -1448329847 ^ -1890371812;
            continue;
          case 55:
            goto label_141;
          case 56:
            aItem = JSONNode.\u200F​‏​⁮‍‏⁪⁯‫‮‬‍⁭‫‎‎​⁯‬⁪‪‍‬‎‪⁭‎‮‬‬⁮⁮‎‍⁫‏⁭‏‮(aItem, JSONNode.\u200C⁬⁬‭⁭‎‪‭‎‪‪‌⁮⁮⁭‮‏‎⁬​⁪‌⁭⁬‏‫‌⁯‬⁭‮⁮‎‏‪‪‬​⁫‌‮(aJSON, num2).ToString());
            num1 = (int) num3 * 1335005794 ^ 1120042289;
            continue;
          case 57:
            aItem = JSONNode.\u200F​‏​⁮‍‏⁪⁯‫‮‬‍⁭‫‎‎​⁯‬⁪‪‍‬‎‪⁭‎‮‬‬⁮⁮‎‍⁫‏⁭‏‮(aItem, "\b");
            num1 = -52534871;
            continue;
          case 58:
            aItem = JSONNode.\u200F​‏​⁮‍‏⁪⁯‫‮‬‍⁭‫‎‎​⁯‬⁪‪‍‬‎‪⁭‎‮‬‬⁮⁮‎‍⁫‏⁭‏‮(aItem, JSONNode.\u200C⁬⁬‭⁭‎‪‭‎‪‪‌⁮⁮⁭‮‏‎⁬​⁪‌⁭⁬‏‫‌⁯‬⁭‮⁮‎‏‪‪‬​⁫‌‮(aJSON, num2).ToString());
            num1 = (int) num3 * -566803002 ^ -1400197916;
            continue;
          case 59:
label_143:
            flag6 = flag1;
            num1 = -1668754076;
            continue;
          case 60:
            aItem = JSONNode.\u200F​‏​⁮‍‏⁪⁯‫‮‬‍⁭‫‎‎​⁯‬⁪‪‍‬‎‪⁭‎‮‬‬⁮⁮‎‍⁫‏⁭‏‮(aItem, "\f");
            num1 = -851992980;
            continue;
          case 61:
            num1 = (int) num3 * 641458794 ^ 903682327;
            continue;
          case 62:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 2130989251 ^ 1490586789;
            continue;
          case 63:
            num1 = (int) num3 * -409222220 ^ 1544803591;
            continue;
          case 64:
            flag1 = false;
            num1 = (int) num3 * -2026212257 ^ 1926810072;
            continue;
          case 65:
            int num14 = ch1 != 'b' ? -1669044406 : (num14 = -1244858554);
            num1 = num14 ^ (int) num3 * -1531682165;
            continue;
          case 66:
            num1 = (int) num3 * 2019309710 ^ -1433432461;
            continue;
          case 67:
            aItem = "";
            aKey = "";
            num1 = (int) num3 * 563233831 ^ -1050998735;
            continue;
          case 68:
            num1 = -1718263631;
            continue;
          case 69:
label_148:
            s = JSONNode.\u200E‫‫⁬‬‭‍⁫⁪‏‍‭⁯​​‪‌⁬‏‍⁫‬⁭⁭‮⁮‮‎⁯‪⁯‭⁪‎‍‍⁯‭‏‫‮(aJSON, num2 + 1, 4);
            num1 = -2111932538;
            continue;
          case 71:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 929143210 ^ -1549984192;
            continue;
          case 72:
            aItem = JSONNode.\u200F​‏​⁮‍‏⁪⁯‫‮‬‍⁭‫‎‎​⁯‬⁪‪‍‬‎‪⁭‎‮‬‬⁮⁮‎‍⁫‏⁭‏‮(aItem, JSONNode.\u200C⁬⁬‭⁭‎‪‭‎‪‪‌⁮⁮⁭‮‏‎⁬​⁪‌⁭⁬‏‫‌⁯‬⁭‮⁮‎‏‪‪‬​⁫‌‮(aJSON, num2).ToString());
            num1 = (int) num3 * 162164914 ^ 1215663719;
            continue;
          case 73:
            aKey = aItem;
            num1 = -2126120083;
            continue;
          case 74:
            num1 = (int) num3 * -918061328 ^ -457443321;
            continue;
          case 75:
            num1 = (int) num3 * 308538319 ^ -1989790484;
            continue;
          case 76:
            int num15 = !flag16 ? 964700004 : (num15 = 914143791);
            num1 = num15 ^ (int) num3 * 104218279;
            continue;
          case 77:
            int num16 = flag10 ? 1849413880 : (num16 = 251414919);
            num1 = num16 ^ (int) num3 * -80934658;
            continue;
          case 78:
label_83:
            ++num2;
            flag12 = flag1;
            num1 = -249245791;
            continue;
          case 79:
            int num17 = !flag1 ? -830508035 : (num17 = -1691767200);
            num1 = num17 ^ (int) num3 * 1560691545;
            continue;
          case 80:
            aKey = JSONNode.\u200B‭⁬⁯⁮‪‪‮‭‌‬⁯⁭‭⁫​‪⁭‌‎⁪⁮‪‌⁯‫‍‪‌⁪‮‎⁭​‍⁪⁮‪​‏‮(aKey);
            num1 = (int) num3 * 2092023925 ^ 11540861;
            continue;
          case 81:
            flag3 = JSONNode.\u200D‬‌‭​​‏⁫‏⁭​‎⁯‮‌⁯⁬⁫‮⁯‍‏‎⁫⁫⁪‬‏‭‌⁯‪‬​​⁯‫‌‍⁫‮(aKey, "");
            num1 = -1170678686;
            continue;
          case 83:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -1376218890 ^ -391561552;
            continue;
          case 84:
            num1 = (int) num3 * -1153429195 ^ -731540092;
            continue;
          case 85:
            int num18;
            num1 = num18 = ch3 == '"' ? -673076410 : (num18 = -992935859);
            continue;
          case 86:
            jsonNodeStack.Pop();
            num1 = -30013606;
            continue;
          case 87:
            flag1 = !flag1;
            num1 = -616742999;
            continue;
          case 88:
            num1 = (int) num3 * -1054161340 ^ 438335353;
            continue;
          case 89:
            num2 = 0;
            num1 = (int) num3 * 852740970 ^ 800909205;
            continue;
          case 90:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num1 = -872761028;
            continue;
          case 91:
            switch (ch3)
            {
              case '\t':
                goto label_97;
              case '\n':
              case '\r':
                goto label_85;
              case '\v':
              case '\f':
                goto label_100;
              default:
                num1 = (int) num3 * 1620298248 ^ 1153445543;
                continue;
            }
          case 92:
            num1 = (int) num3 * 868691248 ^ 1520902617;
            continue;
          case 93:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num3 * 1786088852 ^ 1006855039;
            continue;
          case 94:
            num1 = (int) num3 * -1998315724 ^ 1179297750;
            continue;
          case 95:
            flag11 = num2 < JSONNode.\u206B‪‎​‍⁫‍‏‭‭⁮‪⁭⁫‮‌⁮‎⁯⁮⁫⁬‌⁬⁮‎⁮‬‫⁫‭‏⁯⁬‬⁮⁯‮‏⁭‮(aJSON);
            num1 = -288632998;
            continue;
          case 96:
            int num19;
            num1 = num19 = ch3 == ',' ? -1884110004 : (num19 = -1393186557);
            continue;
          case 97:
label_7:
            flag2 = flag1;
            num1 = -1523361644;
            continue;
          case 98:
            int num20;
            num1 = num20 = !JSONNode.\u200D‬‌‭​​‏⁫‏⁭​‎⁯‮‌⁯⁬⁫‮⁯‍‏‎⁫⁫⁪‬‏‭‌⁯‪‬​​⁯‫‌‍⁫‮(aKey, "") ? -1473675439 : (num20 = -1694108956);
            continue;
          case 99:
            num1 = (int) num3 * 1722374228 ^ 1900125614;
            continue;
          case 100:
            aKey = "";
            aItem = "";
            jsonNode1 = jsonNodeStack.Peek();
            num1 = -616742999;
            continue;
          case 101:
label_27:
            aItem = JSONNode.\u200F​‏​⁮‍‏⁪⁯‫‮‬‍⁭‫‎‎​⁯‬⁪‪‍‬‎‪⁭‎‮‬‬⁮⁮‎‍⁫‏⁭‏‮(aItem, ch2.ToString());
            num1 = -1373435948;
            continue;
          case 102:
            num1 = (int) num3 * -114599098 ^ -529554965;
            continue;
          case 103:
            num1 = (int) num3 * 203127093 ^ 579942384;
            continue;
          case 104:
            aKey = "";
            aItem = "";
            num1 = -1459430733;
            continue;
          case 105:
            ch2 = JSONNode.\u200C⁬⁬‭⁭‎‪‭‎‪‪‌⁮⁮⁭‮‏‎⁬​⁪‌⁭⁬‏‫‌⁯‬⁭‮⁮‎‏‪‪‬​⁫‌‮(aJSON, num2);
            num1 = (int) num3 * -1521468731 ^ -1334263462;
            continue;
          case 106:
            int num21 = flag11 ? 1426951557 : (num21 = 1533852787);
            num1 = num21 ^ (int) num3 * 939235644;
            continue;
          case 107:
            num1 = -329932578;
            continue;
          case 108:
            int num22 = ch3 > ' ' ? -2108474949 : (num22 = -926326455);
            num1 = num22 ^ (int) num3 * 870063372;
            continue;
          case 109:
            int num23;
            num1 = num23 = JSONNode.\u200D‬‌‭​​‏⁫‏⁭​‎⁯‮‌⁯⁬⁫‮⁯‍‏‎⁫⁫⁪‬‏‭‌⁯‪‬​​⁯‫‌‍⁫‮(aKey, "") ? -1812175173 : (num23 = -697476016);
            continue;
          case 110:
            int num24 = jsonNode1 is JSONArray ? -970915578 : (num24 = -1125987332);
            num1 = num24 ^ (int) num3 * -1661674789;
            continue;
          case 111:
            num1 = (int) num3 * 1769316404 ^ -247638524;
            continue;
          case 112:
            int num25 = !flag8 ? 197059722 : (num25 = 103332922);
            num1 = num25 ^ (int) num3 * 131620717;
            continue;
          case 113:
            int num26 = flag9 ? -552765918 : (num26 = -1120928934);
            num1 = num26 ^ (int) num3 * -1469179606;
            continue;
          case 114:
            int num27 = flag14 ? -2004998857 : (num27 = -2019096143);
            num1 = num27 ^ (int) num3 * -976872332;
            continue;
          case 115:
            int num28 = flag7 ? 1488829690 : (num28 = 793818260);
            num1 = num28 ^ (int) num3 * 1923183371;
            continue;
          case 116:
            int num29;
            num1 = num29 = ch3 == '{' ? -1798741846 : (num29 = -613758752);
            continue;
          case 117:
            num1 = (int) num3 * -213352802 ^ 1225901183;
            continue;
          case 118:
            aItem = JSONNode.\u200F​‏​⁮‍‏⁪⁯‫‮‬‍⁭‫‎‎​⁯‬⁪‪‍‬‎‪⁭‎‮‬‬⁮⁮‎‍⁫‏⁭‏‮(aItem, "\n");
            num1 = -52534871;
            continue;
          case 119:
            int num30;
            num1 = num30 = jsonNodeStack.Count == 0 ? -120797085 : (num30 = -1924895388);
            continue;
          case 120:
            int num31;
            num1 = num31 = ch3 != ' ' ? -1102483047 : (num31 = -2119950555);
            continue;
          case 121:
            aKey = "";
            num1 = -778064986;
            continue;
          case 122:
            int num32;
            num1 = num32 = ch3 != '}' ? -183028410 : (num32 = -550774162);
            continue;
          case 123:
            goto label_120;
          case 124:
            num1 = (int) num3 * 1303062528 ^ -1144710986;
            continue;
          case 125:
            num2 += 4;
            num1 = (int) num3 * -1625875945 ^ -361380538;
            continue;
          case 126:
            ch3 = JSONNode.\u200C⁬⁬‭⁭‎‪‭‎‪‪‌⁮⁮⁭‮‏‎⁬​⁪‌⁭⁬‏‫‌⁯‬⁭‮⁮‎‏‪‪‬​⁫‌‮(aJSON, num2);
            int num33 = ch3 <= ',' ? 1626603925 : (num33 = 137998403);
            num1 = num33 ^ (int) num3 * -826502672;
            continue;
          case (uint) sbyte.MaxValue:
            aItem = JSONNode.\u200F​‏​⁮‍‏⁪⁯‫‮‬‍⁭‫‎‎​⁯‬⁪‪‍‬‎‪⁭‎‮‬‬⁮⁮‎‍⁫‏⁭‏‮(aItem, JSONNode.\u200C⁬⁬‭⁭‎‪‭‎‪‪‌⁮⁮⁭‮‏‎⁬​⁪‌⁭⁬‏‫‌⁯‬⁭‮⁮‎‏‪‪‬​⁫‌‮(aJSON, num2).ToString());
            num1 = (int) num3 * -1687373059 ^ 1428228449;
            continue;
          case 128:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * 32404218 ^ 581120099;
            continue;
          case 129:
            aItem = JSONNode.\u200F​‏​⁮‍‏⁪⁯‫‮‬‍⁭‫‎‎​⁯‬⁪‪‍‬‎‪⁭‎‮‬‬⁮⁮‎‍⁫‏⁭‏‮(aItem, JSONNode.\u200C⁬⁬‭⁭‎‪‭‎‪‪‌⁮⁮⁭‮‏‎⁬​⁪‌⁭⁬‏‫‌⁯‬⁭‮⁮‎‏‪‪‬​⁫‌‮(aJSON, num2).ToString());
            num1 = (int) num3 * 350922317 ^ -902881302;
            continue;
          case 130:
            num1 = (int) num3 * -1922910003 ^ -1420552934;
            continue;
          case 131:
            num1 = (int) num3 * 560758313 ^ -1729395136;
            continue;
          case 132:
            aItem = JSONNode.\u200F​‏​⁮‍‏⁪⁯‫‮‬‍⁭‫‎‎​⁯‬⁪‪‍‬‎‪⁭‎‮‬‬⁮⁮‎‍⁫‏⁭‏‮(aItem, ((char) int.Parse(s, NumberStyles.AllowHexSpecifier)).ToString());
            num1 = (int) num3 * 1969202999 ^ -1530293890;
            continue;
          case 133:
            num1 = (int) num3 * -1343137062 ^ 893588091;
            continue;
          case 134:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -648724783 ^ -1046659323;
            continue;
          case 135:
            flag8 = JSONNode.\u200D‬‌‭​​‏⁫‏⁭​‎⁯‮‌⁯⁬⁫‮⁯‍‏‎⁫⁫⁪‬‏‭‌⁯‪‬​​⁯‫‌‍⁫‮(aItem, "");
            num1 = -809212587;
            continue;
          case 136:
            num1 = (int) num3 * -1564153207 ^ 1635216866;
            continue;
          case 138:
            switch (ch3)
            {
              case '[':
                goto label_143;
              case '\\':
                goto label_83;
              case ']':
                goto label_7;
              default:
                num1 = -1419520661;
                continue;
            }
          case 139:
            num1 = (int) num3 * 1932155650 ^ 2128629247;
            continue;
          case 140:
            jsonNode2 = jsonNode1;
            num1 = -540772327;
            continue;
          case 141:
            int num34 = flag4 ? -1163235837 : (num34 = -2043723505);
            num1 = num34 ^ (int) num3 * -862094104;
            continue;
          case 142:
            int num35;
            num1 = num35 = ch3 <= ']' ? -1030529683 : (num35 = -688398681);
            continue;
          case 143:
            num1 = -870998225;
            continue;
          case 144:
            ch4 = ch2;
            num1 = (int) num3 * -1281000629 ^ 842119873;
            continue;
          case 145:
            num1 = (int) num3 * 1663104689 ^ 1575448772;
            continue;
          case 146:
            int num36 = flag15 ? -1648290287 : (num36 = -1585866513);
            num1 = num36 ^ (int) num3 * 1045079696;
            continue;
          case 147:
            num1 = (int) num3 * -203747179 ^ -1619586297;
            continue;
          case 148:
            aItem = "";
            int num37 = jsonNodeStack.Count > 0 ? 447465816 : (num37 = 96569980);
            num1 = num37 ^ (int) num3 * -1373672966;
            continue;
          case 149:
            int num38;
            num1 = num38 = ch1 != 'n' ? -986836994 : (num38 = -1353921221);
            continue;
          case 150:
            num1 = (int) num3 * -1929014452 ^ 1505425002;
            continue;
          case 151:
            aKey = JSONNode.\u200B‭⁬⁯⁮‪‪‮‭‌‬⁯⁭‭⁫​‪⁭‌‎⁪⁮‪‌⁯‫‍‪‌⁪‮‎⁭​‍⁪⁮‪​‏‮(aKey);
            num1 = (int) num3 * 651187688 ^ 1600726951;
            continue;
          case 152:
            int num39 = flag5 ? -508564699 : (num39 = -1654837759);
            num1 = num39 ^ (int) num3 * 998945158;
            continue;
          default:
            goto label_153;
        }
      }
label_120:
      throw JSONNode.\u202C⁬‌‭⁭‬‏‫‎⁫⁭⁫‭⁮‌‏‫⁭‏⁭‮‎​‎​‮​‎‮‫‮​​‭⁫⁯‎‮‏⁬‮("JSON Parse: Quotation marks seems to be messed up.");
label_141:
      throw JSONNode.\u202C⁬‌‭⁭‬‏‫‎⁫⁭⁫‭⁮‌‏‫⁭‏⁭‮‎​‎​‮​‎‮‫‮​​‭⁫⁯‎‮‏⁬‮("JSON Parse: Too many closing brackets");
label_153:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
label_1:
      int num1 = -1218160085;
      BinaryWriter aWriter;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -880426927)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            aWriter = JSONNode.\u202D‭⁮‭⁬‮​⁭‪​‪‭‌⁫‌‍⁪‫‭‏‎⁪⁬⁮‫‭‪‬​‫‎‬⁮⁬‎‌‏‮‎‭‮(aData);
            num1 = (int) num2 * -1484535838 ^ -745783262;
            continue;
          case 3:
            this.Serialize(aWriter);
            num1 = (int) num2 * -1361649643 ^ 1218513083;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u202C⁬‌‭⁭‬‏‫‎⁫⁭⁫‭⁮‌‏‫⁭‏⁭‮‎​‎​‮​‎‮‫‮​​‭⁫⁯‎‮‏⁬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u202C⁬‌‭⁭‬‏‫‎⁫⁭⁫‭⁮‌‏‫⁭‏⁭‮‎​‎​‮​‎‮‫‮​​‭⁫⁯‎‮‏⁬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u202C⁬‌‭⁭‬‏‫‎⁫⁭⁫‭⁮‌‏‫⁭‏⁭‮‎​‎​‮​‎‮‫‮​​‭⁫⁯‎‮‏⁬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
      JSONNode.\u206B‫‏‮⁫⁫⁮⁫‏‌‎⁫​‏⁪⁬‏‎‫⁫‫‫‌‍⁮‪‌‪⁬‮⁬​‎⁬​​‎​‪‎‮(JSONNode.\u200B‫⁮⁫⁪‮‭​‌‬⁯⁬⁮‎⁪‍⁯​​⁪‎‏‮​‍‍‭‬‎‏⁬⁪‍⁬‌‏‏‫‭‌‮((FileSystemInfo) JSONNode.\u200B‌⁭‪‫‍⁭⁯‌‌‍‬⁭⁫‍‍⁭‎‪‪‍‍⁪‭‪⁮⁭‌‭‏⁬⁯⁫‍⁫⁫⁬‭⁪⁫‮(JSONNode.\u200F⁮⁫⁭‌⁮‮‮⁮⁬‫⁭‌​⁯‌‌‎‬‭‫‌⁮⁪‌⁪⁭‬​‎‌​‌⁪⁭⁭⁯‫⁫‪‮(aFileName))));
      FileStream aData = JSONNode.\u200B‬⁯⁫⁫‬‪⁭⁮‮‫⁬⁫‌‪⁯‍‫‪‌⁫⁫‍‮‫‭⁭‭⁫‍​⁯‬⁭‌‏‬‪⁭‌‮(aFileName);
      try
      {
        this.SaveToStream((Stream) aData);
label_2:
        int num1 = 953951927;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1048320211)) % 3U)
          {
            case 0:
              goto label_2;
            case 1:
              num1 = (int) num2 * 1219920477 ^ 1049105599;
              continue;
            case 2:
              goto label_9;
            default:
              goto label_5;
          }
        }
label_9:
        return;
label_5:;
      }
      finally
      {
        if (aData != null)
        {
label_7:
          int num3 = 756675165;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 1048320211)) % 3U)
            {
              case 1:
                JSONNode.\u200F‮⁫‌‏⁪‫‎​‮‫‭⁮⁯⁮⁭‍‌⁭⁮‪‌‌‏​⁬‍‍⁪‭⁯⁪⁭⁫‌‬‫⁭⁭⁫‮((IDisposable) aData);
                num3 = (int) num4 * 881261354 ^ -781086171;
                continue;
              case 2:
                goto label_7;
              default:
                goto label_11;
            }
          }
        }
label_11:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u206B⁬⁬⁯‪⁬‬‬⁮‪⁬‮⁫⁪⁬⁭‎⁭‍⁭‪‎⁪‬⁮‬⁬⁮‎‌⁭‫‎‌​‎‌‬‏‫‮();
      try
      {
label_2:
        int num1 = 1751172975;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1212682212)) % 5U)
          {
            case 0:
              num1 = (int) num2 * -419528118 ^ 309013673;
              continue;
            case 1:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * -598165444 ^ 25350984;
              continue;
            case 3:
              JSONNode.\u202B‪‌‍​‭‭⁯⁯‌⁬‭⁬‬⁫‪⁭⁮‌‭⁯‎⁮‏‌‬⁬⁪⁭‬‭⁪‬‬‮‌‍⁯‍‭‮((Stream) aData, 0L);
              num1 = (int) num2 * 2042518902 ^ 2034923504;
              continue;
            case 4:
              goto label_2;
            default:
              goto label_7;
          }
        }
label_7:
        return JSONNode.\u200B‮‮​‬‬‮​‭‭⁪⁭‍‎⁮⁭‮‎​⁫‏‪‬‏⁯‍⁬‪‪‭⁫‍‍‮⁭‬⁮⁭‏‮(JSONNode.\u206F‫⁫⁬‎​‭‫⁬​‌‭‏⁭⁮‎⁪⁬‬⁮‫‏‪‭‬‎‌⁬⁯‍⁬‪‎‫⁫‬‍‏‬⁯‮(aData));
      }
      finally
      {
        if (aData != null)
        {
label_9:
          int num3 = 1343742573;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 1212682212)) % 4U)
            {
              case 0:
                goto label_9;
              case 1:
                JSONNode.\u200F‮⁫‌‏⁪‫‎​‮‫‭⁮⁯⁮⁭‍‌⁭⁮‪‌‌‏​⁬‍‍⁪‭⁯⁪⁭⁫‌‬‫⁭⁭⁫‮((IDisposable) aData);
                num3 = (int) num4 * -1624946030 ^ 2134781253;
                continue;
              case 3:
                num3 = (int) num4 * 824110817 ^ -963082463;
                continue;
              default:
                goto label_13;
            }
          }
        }
label_13:;
      }
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
      JSONBinaryTag jsonBinaryTag1 = (JSONBinaryTag) JSONNode.\u206B‏​⁫‭⁭‏⁭‬​⁭​‎‬‍⁯⁫⁯⁪⁫⁬⁬‬‬‭⁯‍⁫⁯⁪⁬⁮⁬‬‌‮‌⁫⁮‭‮(aReader);
label_1:
      int num1 = 1285748738;
      JSONNode jsonNode;
      int num2;
      bool flag1;
      int num3;
      int num4;
      JSONClass jsonClass;
      JSONArray jsonArray;
      JSONNode aItem;
      bool flag2;
      string aKey;
      JSONBinaryTag jsonBinaryTag2;
      JSONBinaryTag jsonBinaryTag3;
      int num5;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ 1690129916)) % 43U)
        {
          case 0:
            num1 = (int) num6 * 993968332 ^ -1411397252;
            continue;
          case 1:
            aKey = JSONNode.\u200C⁮‏‏‬‌‌‏⁫‫​‫‮⁮​‍⁫‌‭⁬‭⁮‍‬⁫‍‎‍​⁪⁯‮‎⁭⁭⁬⁮⁮‏‬‮(aReader);
            num1 = (int) num6 * 1343850496 ^ -39977971;
            continue;
          case 2:
            switch (jsonBinaryTag3)
            {
              case JSONBinaryTag.Array:
                goto label_29;
              case JSONBinaryTag.Class:
                goto label_39;
              case JSONBinaryTag.Value:
                goto label_3;
              case JSONBinaryTag.IntValue:
                goto label_25;
              case JSONBinaryTag.DoubleValue:
                goto label_23;
              case JSONBinaryTag.BoolValue:
                goto label_35;
              case JSONBinaryTag.FloatValue:
                goto label_13;
              default:
                num1 = (int) num6 * -145718813 ^ 1940579503;
                continue;
            }
          case 3:
            num2 = 0;
            num1 = (int) num6 * -1167516193 ^ 1760922289;
            continue;
          case 4:
            num4 = 0;
            num1 = (int) num6 * -1212368075 ^ -619856833;
            continue;
          case 5:
            aItem = JSONNode.Deserialize(aReader);
            num1 = (int) num6 * 683580571 ^ 1159264848;
            continue;
          case 6:
            ++num2;
            num1 = (int) num6 * -1376313254 ^ -369265403;
            continue;
          case 7:
            jsonClass = new JSONClass();
            num1 = (int) num6 * 1837535884 ^ -48306199;
            continue;
          case 8:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            num1 = 1841910819;
            continue;
          case 9:
            num1 = (int) num6 * -1113005817 ^ 1714136321;
            continue;
          case 10:
            num1 = (int) num6 * 872744060 ^ -1449444869;
            continue;
          case 11:
            num1 = (int) num6 * -2022833071 ^ 2110764182;
            continue;
          case 12:
label_35:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202B‌‌‫⁭‫⁪‪⁬⁬​⁪‭‭‫⁯‬⁫‫‌⁪​⁬‮‭⁮‍‭​⁮‎‎⁬‭‭‌‪⁬‪‮‮(aReader));
            num1 = 1671010478;
            continue;
          case 13:
            jsonBinaryTag2 = jsonBinaryTag1;
            num1 = (int) num6 * 335123493 ^ 194114327;
            continue;
          case 14:
            num1 = 787762604;
            continue;
          case 15:
            num1 = (int) num6 * 1236723489 ^ 1523102949;
            continue;
          case 16:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * -2015649352 ^ 848706143;
            continue;
          case 17:
label_25:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200F⁫‎⁫‍⁬‍‏‎‮⁮⁮‏​​⁫‍⁭⁮‪‭‏⁭⁪​‫‌‪⁫‌⁮‌⁭⁬‍‍⁫‌‭⁫‮(aReader));
            num1 = 390635448;
            continue;
          case 18:
            num1 = (int) num6 * -308981988 ^ -1722524352;
            continue;
          case 19:
            num1 = (int) num6 * 720291209 ^ -1699621225;
            continue;
          case 20:
            flag1 = num2 < num3;
            num1 = 1896145836;
            continue;
          case 21:
label_13:
            num1 = 903104914;
            continue;
          case 22:
label_3:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200C⁮‏‏‬‌‌‏⁫‫​‫‮⁮​‍⁫‌‭⁬‭⁮‍‬⁫‍‎‍​⁪⁯‮‎⁭⁭⁬⁮⁮‏‬‮(aReader));
            num1 = 390635448;
            continue;
          case 23:
            jsonArray = new JSONArray();
            num1 = (int) num6 * 195330857 ^ -153566086;
            continue;
          case 24:
label_39:
            num5 = JSONNode.\u200F⁫‎⁫‍⁬‍‏‎‮⁮⁮‏​​⁫‍⁭⁮‪‭‏⁭⁪​‫‌‪⁫‌⁮‌⁭⁬‍‍⁫‌‭⁫‮(aReader);
            num1 = 639365980;
            continue;
          case 26:
            ++num4;
            num1 = (int) num6 * -1928026089 ^ -414835157;
            continue;
          case 27:
            jsonClass.Add(aKey, aItem);
            num1 = (int) num6 * -566594509 ^ -1567219065;
            continue;
          case 28:
label_29:
            num1 = 1885135483;
            continue;
          case 29:
            jsonBinaryTag3 = jsonBinaryTag2;
            num1 = (int) num6 * -1737906023 ^ 1747730898;
            continue;
          case 30:
            int num7 = !flag1 ? 775467360 : (num7 = 12449651);
            num1 = num7 ^ (int) num6 * 1630774891;
            continue;
          case 31:
            num1 = (int) num6 * -1941962814 ^ -1747516198;
            continue;
          case 32:
            num1 = 1077279350;
            continue;
          case 33:
            goto label_17;
          case 34:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * -1306467492 ^ -1030566147;
            continue;
          case 35:
            int num8 = !flag2 ? 2113908936 : (num8 = 962283871);
            num1 = num8 ^ (int) num6 * -2015450033;
            continue;
          case 36:
            num3 = JSONNode.\u200F⁫‎⁫‍⁬‍‏‎‮⁮⁮‏​​⁫‍⁭⁮‪‭‏⁭⁪​‫‌‪⁫‌⁮‌⁭⁬‍‍⁫‌‭⁫‮(aReader);
            num1 = (int) num6 * 1881423929 ^ -1933990945;
            continue;
          case 37:
            num1 = (int) num6 * 1926632294 ^ 1287632240;
            continue;
          case 38:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200C‎‫‎⁫‪‮‫‮⁯‍⁫⁯‌‍‮⁬‭‬⁫⁯‭‬‮⁭⁮‎⁪‍‍‎⁭⁬‌‪⁬‭‪‭‏‮(aReader));
            num1 = (int) num6 * 178007463 ^ 1827251526;
            continue;
          case 39:
            goto label_1;
          case 40:
label_23:
            num1 = 207458831;
            continue;
          case 41:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202D‪⁬⁯‬⁭‮‌⁫‏​⁭‍⁭‎⁯‮‏‎⁮‫⁪⁮‏‭‍‏‌⁭‎‭‍‪‫⁭​‌‏‎⁫‮(aReader));
            num1 = (int) num6 * 1504478227 ^ -1002953951;
            continue;
          case 42:
            flag2 = num4 < num5;
            num1 = 633727973;
            continue;
          default:
            goto label_45;
        }
      }
label_17:
      throw JSONNode.\u202C⁬‌‭⁭‬‏‫‎⁫⁭⁫‭⁮‌‏‫⁭‏⁭‮‎​‎​‮​‎‮‫‮​​‭⁫⁯‎‮‏⁬‮(JSONNode.\u200F​‏​⁮‍‏⁪⁯‫‮‬‍⁭‫‎‎​⁯‬⁪‪‍‬‎‪⁭‎‮‬‬⁮⁮‎‍⁫‏⁭‏‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag1.ToString()));
label_45:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u202C⁬‌‭⁭‬‏‫‎⁫⁭⁫‭⁮‌‏‫⁭‏⁭‮‎​‎​‮​‎‮‫‮​​‭⁫⁯‎‮‏⁬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u202C⁬‌‭⁭‬‏‫‎⁫⁭⁫‭⁮‌‏‫⁭‏⁭‮‎​‎​‮​‎‮‫‮​​‭⁫⁯‎‮‏⁬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u202C⁬‌‭⁭‬‏‫‎⁫⁭⁫‭⁮‌‏‫⁭‏⁭‮‎​‎​‮​‎‮‫‮​​‭⁫⁯‎‮‏⁬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u202E⁯⁪⁪‎‮‮‫‬⁭‏‮‭‎‫⁬‫⁫⁬⁮‭‭⁬⁯⁭⁯‌‌‭‬⁬⁯⁫‪‏‏⁭⁭⁯⁬‮(aData);
      try
      {
        return JSONNode.Deserialize(aReader);
      }
      finally
      {
        if (aReader != null)
        {
label_3:
          int num1 = -458827084;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ -166929885)) % 4U)
            {
              case 0:
                num1 = (int) num2 * -730098367 ^ 2043722742;
                continue;
              case 2:
                goto label_3;
              case 3:
                JSONNode.\u200F‮⁫‌‏⁪‫‎​‮‫‭⁮⁯⁮⁭‍‌⁭⁮‪‌‌‏​⁬‍‍⁪‭⁯⁪⁭⁫‌‬‫⁭⁭⁫‮((IDisposable) aReader);
                num1 = (int) num2 * -49579506 ^ -1724900859;
                continue;
              default:
                goto label_7;
            }
          }
        }
label_7:;
      }
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u206D​‎​‌‏⁮​​⁫⁫‪‌​‪‭‎‏‍‫‮⁫‫‪⁪‍‪‍⁭​⁬⁪⁮⁪⁮⁯⁮‌⁯⁭‮(aFileName);
      try
      {
        return JSONNode.LoadFromStream((Stream) aData);
      }
      finally
      {
        if (aData != null)
        {
label_3:
          int num1 = 708887171;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ 1686519211)) % 3U)
            {
              case 0:
                goto label_3;
              case 1:
                JSONNode.\u200F‮⁫‌‏⁪‫‎​‮‫‭⁮⁯⁮⁭‍‌⁭⁮‪‌‌‏​⁬‍‍⁪‭⁯⁪⁭⁫‌‬‫⁭⁭⁫‮((IDisposable) aData);
                num1 = (int) num2 * -661096893 ^ -1778158565;
                continue;
              default:
                goto label_6;
            }
          }
        }
label_6:;
      }
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
label_1:
      int num1 = 794845927;
      byte[] numArray;
      MemoryStream aData;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 290386182)) % 7U)
        {
          case 0:
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * -592808238 ^ -1462725724;
            continue;
          case 1:
            numArray = JSONNode.\u200D⁭‏‎‎⁯‪‫⁬‏‫⁮‍⁭⁪⁫‌⁫‏‭⁬⁪⁮⁭‫‭‌‬⁬⁪‎⁪‌⁫‪‍‭⁫‍⁬‮(aBase64);
            num1 = (int) num2 * -865388204 ^ -1249920397;
            continue;
          case 2:
            JSONNode.\u202B‪‌‍​‭‭⁯⁯‌⁬‭⁬‬⁫‪⁭⁮‌‭⁯‎⁮‏‌‬⁬⁪⁭‬‭⁪‬‬‮‌‍⁯‍‭‮((Stream) aData, 0L);
            num1 = (int) num2 * 202385290 ^ -956559272;
            continue;
          case 3:
            goto label_1;
          case 4:
            num1 = (int) num2 * 251067909 ^ -714103481;
            continue;
          case 6:
            aData = JSONNode.\u206D‮⁭‬‎⁮⁬‎‮‮⁮‌‌⁯⁫⁪⁮​⁮⁬‪‎​‍‏​‏‮‬⁪⁮‏‍‎‏⁫⁭‎⁮⁪‮(numArray);
            num1 = (int) num2 * -1265727825 ^ -1568884436;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      return jsonNode;
    }

    public JSONNode()
    {
label_1:
      int num1 = 940633294;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 991344326)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * 187512861 ^ -5082455;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static CultureInfo \u200B‬⁭⁮‏⁮⁫‏‎‪‎⁪‮‫​‭⁫‍‭‪⁫​‎‫‫⁭‌‭⁫‌‫‌⁭⁬⁫⁪​‪⁬‎‮() => CultureInfo.InvariantCulture;

    static bool \u202A⁬‭⁮⁮‭‍⁫‬‎‌‪‮⁫​⁫‎‮‮‎​‫‪‏‪‬‮‫⁭⁪‮‌‫‪​⁭‎​‎‏‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u206F⁫‫‌‪‌‏‫⁪​‏‪⁪‫⁪⁮‍‭‏‍‎‮​⁯‪‍⁭​⁯⁪‌‬⁬⁭⁮⁮⁪⁭⁯‬‮() => base.GetHashCode();

    static char \u200C⁬⁬‭⁭‎‪‭‎‪‪‌⁮⁮⁭‮‏‎⁬​⁪‌⁭⁬‏‫‌⁯‬⁭‮⁮‎‏‪‪‬​⁫‌‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u200F​‏​⁮‍‏⁪⁯‫‮‬‍⁭‫‎‎​⁯‬⁪‪‍‬‎‪⁭‎‮‬‬⁮⁮‎‍⁫‏⁭‏‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u206B‪‎​‍⁫‍‏‭‭⁮‪⁭⁫‮‌⁮‎⁯⁮⁫⁬‌⁬⁮‎⁮‬‫⁫‭‏⁯⁬‬⁮⁯‮‏⁭‮([In] string obj0) => obj0.Length;

    static string \u200B‭⁬⁯⁮‪‪‮‭‌‬⁯⁭‭⁫​‪⁭‌‎⁪⁮‪‌⁯‫‍‪‌⁪‮‎⁭​‍⁪⁮‪​‏‮([In] string obj0) => obj0.Trim();

    static bool \u200D‬‌‭​​‏⁫‏⁭​‎⁯‮‌⁯⁬⁫‮⁯‍‏‎⁫⁫⁪‬‏‭‌⁯‪‬​​⁯‫‌‍⁫‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u202C⁬‌‭⁭‬‏‫‎⁫⁭⁫‭⁮‌‏‫⁭‏⁭‮‎​‎​‮​‎‮‫‮​​‭⁫⁯‎‮‏⁬‮([In] string obj0) => new Exception(obj0);

    static string \u200E‫‫⁬‬‭‍⁫⁪‏‍‭⁯​​‪‌⁬‏‍⁫‬⁭⁭‮⁮‮‎⁯‪⁯‭⁪‎‍‍⁯‭‏‫‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u202D‭⁮‭⁬‮​⁭‪​‪‭‌⁫‌‍⁪‫‭‏‎⁪⁬⁮‫‭‪‬​‫‎‬⁮⁬‎‌‏‮‎‭‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u200F⁮⁫⁭‌⁮‮‮⁮⁬‫⁭‌​⁯‌‌‎‬‭‫‌⁮⁪‌⁪⁭‬​‎‌​‌⁪⁭⁭⁯‫⁫‪‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u200B‌⁭‪‫‍⁭⁯‌‌‍‬⁭⁫‍‍⁭‎‪‪‍‍⁪‭‪⁮⁭‌‭‏⁬⁯⁫‍⁫⁫⁬‭⁪⁫‮([In] FileInfo obj0) => obj0.Directory;

    static string \u200B‫⁮⁫⁪‮‭​‌‬⁯⁬⁮‎⁪‍⁯​​⁪‎‏‮​‍‍‭‬‎‏⁬⁪‍⁬‌‏‏‫‭‌‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u206B‫‏‮⁫⁫⁮⁫‏‌‎⁫​‏⁪⁬‏‎‫⁫‫‫‌‍⁮‪‌‪⁬‮⁬​‎⁬​​‎​‪‎‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u200B‬⁯⁫⁫‬‪⁭⁮‮‫⁬⁫‌‪⁯‍‫‪‌⁫⁫‍‮‫‭⁭‭⁫‍​⁯‬⁭‌‏‬‪⁭‌‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u200F‮⁫‌‏⁪‫‎​‮‫‭⁮⁯⁮⁭‍‌⁭⁮‪‌‌‏​⁬‍‍⁪‭⁯⁪⁭⁫‌‬‫⁭⁭⁫‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u206B⁬⁬⁯‪⁬‬‬⁮‪⁬‮⁫⁪⁬⁭‎⁭‍⁭‪‎⁪‬⁮‬⁬⁮‎‌⁭‫‎‌​‎‌‬‏‫‮() => new MemoryStream();

    static void \u202B‪‌‍​‭‭⁯⁯‌⁬‭⁬‬⁫‪⁭⁮‌‭⁯‎⁮‏‌‬⁬⁪⁭‬‭⁪‬‬‮‌‍⁯‍‭‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u206F‫⁫⁬‎​‭‫⁬​‌‭‏⁭⁮‎⁪⁬‬⁮‫‏‪‭‬‎‌⁬⁯‍⁬‪‎‫⁫‬‍‏‬⁯‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u200B‮‮​‬‬‮​‭‭⁪⁭‍‎⁮⁭‮‎​⁫‏‪‬‏⁯‍⁬‪‪‭⁫‍‍‮⁭‬⁮⁭‏‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u206B‏​⁫‭⁭‏⁭‬​⁭​‎‬‍⁯⁫⁯⁪⁫⁬⁬‬‬‭⁯‍⁫⁯⁪⁬⁮⁬‬‌‮‌⁫⁮‭‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u200F⁫‎⁫‍⁬‍‏‎‮⁮⁮‏​​⁫‍⁭⁮‪‭‏⁭⁪​‫‌‪⁫‌⁮‌⁭⁬‍‍⁫‌‭⁫‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u200C⁮‏‏‬‌‌‏⁫‫​‫‮⁮​‍⁫‌‭⁬‭⁮‍‬⁫‍‎‍​⁪⁯‮‎⁭⁭⁬⁮⁮‏‬‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u200C‎‫‎⁫‪‮‫‮⁯‍⁫⁯‌‍‮⁬‭‬⁫⁯‭‬‮⁭⁮‎⁪‍‍‎⁭⁬‌‪⁬‭‪‭‏‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u202B‌‌‫⁭‫⁪‪⁬⁬​⁪‭‭‫⁯‬⁫‫‌⁪​⁬‮‭⁮‍‭​⁮‎‎⁬‭‭‌‪⁬‪‮‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u202D‪⁬⁯‬⁭‮‌⁫‏​⁭‍⁭‎⁯‮‏‎⁮‫⁪⁮‏‭‍‏‌⁭‎‭‍‪‫⁭​‌‏‎⁫‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u202E⁯⁪⁪‎‮‮‫‬⁭‏‮‭‎‫⁬‫⁫⁬⁮‭‭⁬⁯⁭⁯‌‌‭‬⁬⁯⁫‪‏‏⁭⁭⁯⁬‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u206D​‎​‌‏⁮​​⁫⁫‪‌​‪‭‎‏‍‫‮⁫‫‪⁪‍‪‍⁭​⁬⁪⁮⁪⁮⁯⁮‌⁯⁭‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u200D⁭‏‎‎⁯‪‫⁬‏‫⁮‍⁭⁪⁫‌⁫‏‭⁬⁪⁮⁭‫‭‌‬⁬⁪‎⁪‌⁫‪‍‭⁫‍⁬‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u206D‮⁭‬‎⁮⁬‎‮‮⁮‌‌⁯⁫⁪⁮​⁮⁬‪‎​‍‏​‏‮‬⁪⁮‏‍‎‏⁫⁭‎⁮⁪‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
