<StubServiceMapper xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:local="clr-namespace:RiskGame">
  <Application.Resources>
    <Style x:Key="windowResizeable" TargetType="{x:Type Window}">
    </Style>
    <Style x:Key="btnUI" TargetType="{x:Type Button}">
      <Setter Property="Control.Background" Value="#B200D1FF"/>
      <Setter Property="Control.FontSize" Value="14"/>
      <Setter Property="Control.FontWeight" Value="Bold"/>
      <Setter Property="FrameworkElement.Margin" Value="5"/>
      <Setter Property="Control.BorderBrush" Value="Black"/>
    </Style>
    <Style x:Key="btnCornerUI" TargetType="{x:Type Button}" BasedOn="{StaticResource btnUI}">
      <Style.Resources>
        <Style TargetType="{x:Type Border}">
          <Setter Property="Border.CornerRadius" Value="4"/>
        </Style>
      </Style.Resources>
    </Style>
    <Style x:Key="btnReturn" TargetType="{x:Type Button}" BasedOn="{StaticResource btnCornerUI}">
      <Setter Property="Control.FontSize" Value="12"/>
      <Setter Property="ContentControl.Content" Value="Return"/>
    </Style>
    <Style x:Key="btnSettings" TargetType="{x:Type Button}" BasedOn="{StaticResource btnCornerUI}">
      <Setter Property="ContentControl.Content">
        <Setter.Value>
          <Image Source="pack://siteoforigin:,,,/Images/Settingsicon.png" Height="20" Margin="5"/>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="btnSettingsThin" TargetType="{x:Type Button}" BasedOn="{StaticResource btnSettings}">
      <Setter Property="ContentControl.Content">
        <Setter.Value>
          <Image Source="pack://siteoforigin:,,,/Images/Settingsicon.png" Height="18" Margin="3"/>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="btnHelp" TargetType="{x:Type Button}" BasedOn="{StaticResource btnCornerUI}">
      <Setter Property="ContentControl.Content">
        <Setter.Value>
          <Image Source="pack://siteoforigin:,,,/Images/Help.png" Height="20" Margin="5"/>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="btnHelpThin" TargetType="{x:Type Button}" BasedOn="{StaticResource btnHelp}">
      <Setter Property="ContentControl.Content">
        <Setter.Value>
          <Image Source="pack://siteoforigin:,,,/Images/Help.png" Height="18" Margin="3"/>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="btnPresenter" TargetType="{x:Type Button}">
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Border Background="{TemplateBinding Control.Background}" BorderBrush="Black" BorderThickness="2"
                    CornerRadius="4">
              <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Setter Property="Control.Background" Value="#B200D1FF"/>
      <Setter Property="Control.FontSize" Value="14"/>
      <Setter Property="Control.FontWeight" Value="Bold"/>
      <Setter Property="FrameworkElement.Margin" Value="5"/>
      <Style.Triggers>
        <Trigger Property="UIElement.IsMouseOver" Value="true"/>
      </Style.Triggers>
    </Style>
    <Style x:Key="btnMusicBack" TargetType="{x:Type Button}" BasedOn="{StaticResource btnCornerUI}">
      <Setter Property="ContentControl.Content">
        <Setter.Value>
          <Image Source="pack://siteoforigin:,,,/Images/previous.png" Height="14"/>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="btnMusicPause" TargetType="{x:Type Button}" BasedOn="{StaticResource btnCornerUI}">
      <Setter Property="ContentControl.Content">
        <Setter.Value>
          <Image Source="pack://siteoforigin:,,,/Images/pause.png" Height="14"/>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="btnMusicPlay" TargetType="{x:Type Button}" BasedOn="{StaticResource btnCornerUI}">
      <Setter Property="ContentControl.Content">
        <Setter.Value>
          <Image Source="pack://siteoforigin:,,,/Images/play.png" Height="14"/>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="btnMusicForward" TargetType="{x:Type Button}" BasedOn="{StaticResource btnCornerUI}">
      <Setter Property="ContentControl.Content">
        <Setter.Value>
          <Image Source="pack://siteoforigin:,,,/Images/Next.png" Height="14"/>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="lblHeader" TargetType="{x:Type Label}">
      <Setter Property="Control.FontSize" Value="10"/>
      <Setter Property="Control.Background" Value="#B200D1FF"/>
      <Setter Property="FrameworkElement.Margin" Value="5"/>
      <Setter Property="Control.FontWeight" Value="Bold"/>
      <Setter Property="Control.BorderBrush" Value="Black"/>
      <Setter Property="Control.BorderThickness" Value="1"/>
    </Style>
    <Style x:Key="lblSubHeading" TargetType="{x:Type Label}" BasedOn="{StaticResource lblHeader}">
      <Setter Property="Control.FontSize" Value="9"/>
      <Setter Property="FrameworkElement.Margin" Value="5,0,5,0"/>
    </Style>
    <Style x:Key="lblError" TargetType="{x:Type Label}">
      <Setter Property="FrameworkElement.Margin" Value="5"/>
      <Setter Property="Control.Background" Value="#FFF00303"/>
      <Setter Property="Control.BorderBrush" Value="Black"/>
      <Setter Property="Control.BorderThickness" Value="2"/>
      <Style.Resources>
        <Style TargetType="{x:Type Border}">
          <Setter Property="Border.CornerRadius" Value="2"/>
        </Style>
        <Style TargetType="{x:Type TextBlock}">
          <Setter Property="TextBlock.FontSize" Value="10"/>
          <Setter Property="TextBlock.Foreground" Value="White"/>
          <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
        </Style>
      </Style.Resources>
    </Style>
    <Style x:Key="lblSuccess" TargetType="{x:Type Label}" BasedOn="{StaticResource lblError}">
      <Setter Property="Control.Background">
        <Setter.Value>
          <SolidColorBrush Color="Green"/>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="HorizontalCentred" TargetType="{x:Type StackPanel}">
      <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
      <Setter Property="StackPanel.Orientation" Value="Horizontal"/>
    </Style>
    <Style x:Key="HorizontalStretch" TargetType="{x:Type StackPanel}">
      <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch"/>
      <Setter Property="StackPanel.Orientation" Value="Horizontal"/>
    </Style>
    <Style x:Key="MusicControls" TargetType="{x:Type StackPanel}" BasedOn="{StaticResource HorizontalCentred}">
      <Setter Property="FrameworkElement.Width" Value="145"/>
      <Setter Property="FrameworkElement.Margin" Value="3"/>
    </Style>
    <Style x:Key="panel_Background" TargetType="{x:Type StackPanel}">
      <Setter Property="Panel.Background" Value="#7F00D1FF"/>
    </Style>
    <Style x:Key="Default" TargetType="{x:Type CheckBox}">
      <Setter Property="Control.BorderBrush" Value="Black"/>
      <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="chkMusicEnabled" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource Default}">
      <Setter Property="FrameworkElement.Margin" Value="30,3,30,3"/>
      <Setter Property="ToggleButton.IsChecked" Value="{Binding Music_enabled, Mode=TwoWay}"/>
    </Style>
    <Style x:Key="chkFullscreen" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource Default}">
      <Setter Property="FrameworkElement.Margin" Value="0,0,5,0"/>
    </Style>
    <Style x:Key="chkHints" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource Default}">
      <Setter Property="FrameworkElement.Margin" Value="0,0,5,0"/>
      <Setter Property="ToggleButton.IsChecked" Value="{Binding Hints_enabled, Mode=TwoWay}"/>
    </Style>
    <Style x:Key="chkShowHide" TargetType="{x:Type CheckBox}">
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type CheckBox}">
            <StackPanel Orientation="Horizontal">
              <Image x:Name="checkboxImage" Source="pack://siteoforigin:,,,/Images/show.png"/>
              <ContentPresenter/>
            </StackPanel>
            <ControlTemplate.Triggers>
              <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter TargetName="checkboxImage" Property="Image.Source" Value="pack://siteoforigin:,,,/Images/hide.png"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.Height" Value="14"/>
    </Style>
    <Style x:Key="sld_Base" TargetType="{x:Type Slider}">
      <Setter Property="FrameworkElement.Width" Value="80"/>
      <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
      <Setter Property="Slider.IsSnapToTickEnabled" Value="true"/>
      <Setter Property="Slider.TickPlacement" Value="BottomRight"/>
      <Setter Property="Slider.TickFrequency" Value="5"/>
    </Style>
    <Style x:Key="sld_Music" TargetType="{x:Type Slider}" BasedOn="{StaticResource sld_Base}">
      <Setter Property="RangeBase.Minimum" Value="0"/>
      <Setter Property="RangeBase.Maximum" Value="1"/>
      <Setter Property="RangeBase.Value" Value="1"/>
      <Setter Property="Slider.TickFrequency" Value="0.1"/>
    </Style>
    <Style x:Key="brd_Background" TargetType="{x:Type Border}">
      <Setter Property="Border.BorderBrush" Value="Black"/>
      <Setter Property="Border.BorderThickness" Value="1"/>
      <Setter Property="FrameworkElement.Margin" Value="5"/>
    </Style>
    <Style x:Key="brd_BlueBackground" TargetType="{x:Type Border}" BasedOn="{StaticResource brd_Background}">
      <Setter Property="Border.Background" Value="#7F00D1FF"/>
    </Style>
    <Style x:Key="brd_ImageBackground" TargetType="{x:Type Border}">
      <Setter Property="Border.Background">
        <Setter.Value>
          <VisualBrush Viewbox="0.05,0.05,0.9,0.9" Stretch="UniformToFill">
            <VisualBrush.Visual>
              <Image Source="pack://siteoforigin:,,,/Resources/RiskBackground.jpg">
                <UIElement.Effect>
                  <BlurEffect Radius="20"/>
                </UIElement.Effect>
              </Image>
            </VisualBrush.Visual>
          </VisualBrush>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="pwdbox" TargetType="{x:Type PasswordBox}">
      <Setter Property="FrameworkElement.Margin" Value="5"/>
      <Setter Property="Control.BorderBrush" Value="Black"/>
      <Setter Property="FrameworkElement.Width" Value="110"/>
    </Style>
    <Style x:Key="showBox" TargetType="{x:Type TextBox}">
      <Setter Property="FrameworkElement.Margin" Value="5"/>
      <Setter Property="Control.BorderBrush" Value="Black"/>
      <Setter Property="FrameworkElement.Width" Value="110"/>
      <Setter Property="UIElement.Visibility" Value="Collapsed"/>
    </Style>
    <Style x:Key="grid_Background" TargetType="{x:Type Grid}">
      <Setter Property="Panel.Background" Value="#7F00D1FF"/>
    </Style>
    <Style TargetType="{x:Type DataGrid}">
      <Setter Property="FrameworkElement.Margin" Value="5,0,5,0"/>
      <Setter Property="FrameworkElement.Width" Value="250"/>
      <Setter Property="DataGrid.SelectionMode" Value="Single"/>
      <Setter Property="DataGrid.IsReadOnly" Value="true"/>
      <Setter Property="Control.FontSize" Value="8"/>
      <Setter Property="Control.FontWeight" Value="Bold"/>
      <Setter Property="DataGrid.AutoGenerateColumns" Value="false"/>
    </Style>
    <Style x:Key="media_Music" TargetType="{x:Type MediaElement}">
      <Setter Property="UIElement.Visibility" Value="Collapsed"/>
      <Setter Property="MediaElement.LoadedBehavior" Value="Manual"/>
    </Style>
  </Application.Resources>
</StubServiceMapper>