// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONData
// Assembly: WhenAllPromi, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: EC39505B-F84A-4834-9FA9-F8C42A2FB5BC
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-fabdc6de70c953d03389a8cd60eaa852c968c6328b070b4049f01954433e9324.exe

using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONData : JSONNode
  {
    private string m_Data;

    public override string Value
    {
      get
      {
label_1:
        int num1 = -517830753;
        string data;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2139844771)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              data = this.m_Data;
              num1 = (int) num2 * 65589991 ^ 2127082252;
              continue;
            case 3:
              num1 = (int) num2 * 2123455089 ^ -365598437;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return data;
      }
      set => this.m_Data = value;
    }

    public JSONData(string aData)
    {
label_1:
      int num1 = -1378293910;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1092030044)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            this.m_Data = aData;
            num1 = (int) num2 * -1309611285 ^ -2063876454;
            continue;
          case 2:
            goto label_3;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public JSONData(float aData) => this.AsFloat = aData;

    public JSONData(double aData)
    {
label_1:
      int num1 = 1068519794;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1548077189)) % 6U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * -1621257735 ^ 2108106302;
            continue;
          case 2:
            num1 = (int) num2 * -1707769219 ^ 1177427905;
            continue;
          case 3:
            num1 = (int) num2 * -2007976655 ^ 414566615;
            continue;
          case 4:
            this.AsDouble = aData;
            num1 = (int) num2 * -786736996 ^ 1941603977;
            continue;
          case 5:
            goto label_1;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    public JSONData(bool aData)
    {
label_1:
      int num1 = 1551954248;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 553523366)) % 4U)
        {
          case 0:
            goto label_3;
          case 1:
            this.AsBool = aData;
            num1 = (int) num2 * -158524733 ^ 1684934725;
            continue;
          case 2:
            num1 = (int) num2 * 160754400 ^ -500469941;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public JSONData(int aData) => this.AsInt = aData;

    public override string ToString()
    {
label_1:
      int num1 = 1889324513;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1443192350)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            str = JSONData.\u200B‏⁭‫⁫⁭‫‌‫‪​‭⁪‭⁯⁬‏⁯‮⁬​⁮‭‪⁬‏⁪‎‭‫‏⁬⁭⁫‪‮⁭‮‏‌‮("\"", JSONNode.Escape(this.m_Data), "\"");
            num1 = (int) num2 * 308319236 ^ -553483566;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override string ToString(string aPrefix)
    {
      string str = JSONData.\u200B‏⁭‫⁫⁭‫‌‫‪​‭⁪‭⁯⁬‏⁯‮⁬​⁮‭‪⁬‏⁪‎‭‫‏⁬⁭⁫‪‮⁭‮‏‌‮("\"", JSONNode.Escape(this.m_Data), "\"");
label_1:
      int num1 = 1424185810;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1583252213)) % 3U)
        {
          case 1:
            num1 = (int) num2 * 393567769 ^ 255008234;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = -900144505;
      bool flag1;
      JSONData jsonData;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -147080460)) % 28U)
        {
          case 0:
            JSONData.\u206A‫‫‬‮‭⁫​⁪‬‫⁪‌⁭‎‬⁭‬⁯⁫⁭⁮‎⁯⁮⁯⁬‭‬‫‍⁭‫‮‌⁮⁫‌‌⁭‮(aWriter, (byte) 7);
            num1 = (int) num2 * 941599597 ^ 526032368;
            continue;
          case 1:
            num1 = (int) num2 * -2073833298 ^ -688584328;
            continue;
          case 2:
            JSONData.\u206A‫‫‬‮‭⁫​⁪‬‫⁪‌⁭‎‬⁭‬⁯⁫⁭⁮‎⁯⁮⁯⁬‭‬‫‍⁭‫‮‌⁮⁫‌‌⁭‮(aWriter, (byte) 6);
            JSONData.\u200F‌⁬​‪⁭‪⁫⁬‮‎‬‬‏⁭​‬⁭⁫⁭⁬⁬⁫‏‪⁯⁫‮⁯⁭⁮⁮⁬‎‏⁯⁬‏‭‮(aWriter, this.AsBool);
            num1 = (int) num2 * -137310331 ^ 916885723;
            continue;
          case 3:
            num1 = (int) num2 * -1147200944 ^ -477795112;
            continue;
          case 4:
            JSONData.\u206A‫‫‬‮‭⁫​⁪‬‫⁪‌⁭‎‬⁭‬⁯⁫⁭⁮‎⁯⁮⁯⁬‭‬‫‍⁭‫‮‌⁮⁫‌‌⁭‮(aWriter, (byte) 5);
            num1 = (int) num2 * -2105774494 ^ -352748994;
            continue;
          case 5:
            num1 = (int) num2 * -1500539421 ^ -1797013885;
            continue;
          case 6:
            int num3 = !flag1 ? 2046243525 : (num3 = 785303167);
            num1 = num3 ^ (int) num2 * 599477619;
            continue;
          case 7:
            goto label_1;
          case 8:
            jsonData.AsDouble = this.AsDouble;
            num1 = -1061643827;
            continue;
          case 9:
            num1 = (int) num2 * -739862393 ^ -1847273404;
            continue;
          case 10:
            JSONData.\u206A‫‫‬‮‭⁫​⁪‬‫⁪‌⁭‎‬⁭‬⁯⁫⁭⁮‎⁯⁮⁯⁬‭‬‫‍⁭‫‮‌⁮⁫‌‌⁭‮(aWriter, (byte) 4);
            num1 = (int) num2 * -2147275917 ^ -1647366910;
            continue;
          case 11:
            int num4 = flag2 ? -1889847933 : (num4 = -825904096);
            num1 = num4 ^ (int) num2 * 1075901719;
            continue;
          case 12:
            JSONData.\u202B‫‮‬‮‌⁮‎⁯⁭⁬⁯⁪‭‬⁪⁯‫⁫‭⁬‬⁮‏⁬‍​⁫‏⁯⁫‬⁪‪‌​⁭‏‍‌‮(aWriter, this.AsInt);
            num1 = (int) num2 * 1188782977 ^ -314099179;
            continue;
          case 13:
            num1 = (int) num2 * 1283439367 ^ -73305117;
            continue;
          case 14:
            num1 = (int) num2 * -1394605856 ^ 636946427;
            continue;
          case 15:
            goto label_3;
          case 16:
            num1 = (int) num2 * 1590105812 ^ 363596043;
            continue;
          case 17:
            num1 = (int) num2 * 940157946 ^ 1589169060;
            continue;
          case 18:
            flag1 = JSONData.\u200F‫⁯⁮⁬‫‭‭⁭‮‏‏⁬⁬‭⁫⁬‎​‮‪​⁫‬​⁮⁫⁭‪⁯‏⁬‌⁬‮‮⁭⁭‪‬‮(jsonData.m_Data, this.m_Data);
            num1 = (int) num2 * -559386541 ^ 174986812;
            continue;
          case 19:
            jsonData = new JSONData("");
            jsonData.AsInt = this.AsInt;
            num1 = (int) num2 * 192220907 ^ -104542980;
            continue;
          case 20:
            JSONData.\u202D⁪⁯‎‎‍⁮‎‪⁯⁪⁯⁮⁭‪‍⁫‍‬⁬⁬⁪‮‍⁫⁪⁭‫⁪‭‫‍‪⁮‌‎‏‫⁯‏‮(aWriter, this.AsFloat);
            num1 = (int) num2 * 281978068 ^ -1635439413;
            continue;
          case 21:
            num1 = (int) num2 * 1903412008 ^ -1638212525;
            continue;
          case 22:
            jsonData.AsFloat = this.AsFloat;
            int num5;
            num1 = num5 = JSONData.\u200F‫⁯⁮⁬‫‭‭⁭‮‏‏⁬⁬‭⁫⁬‎​‮‪​⁫‬​⁮⁫⁭‪⁯‏⁬‌⁬‮‮⁭⁭‪‬‮(jsonData.m_Data, this.m_Data) ? -789558492 : (num5 = -1691937716);
            continue;
          case 23:
            jsonData.AsBool = this.AsBool;
            flag2 = JSONData.\u200F‫⁯⁮⁬‫‭‭⁭‮‏‏⁬⁬‭⁫⁬‎​‮‪​⁫‬​⁮⁫⁭‪⁯‏⁬‌⁬‮‮⁭⁭‪‬‮(jsonData.m_Data, this.m_Data);
            num1 = -1774142149;
            continue;
          case 24:
            int num6 = !JSONData.\u200F‫⁯⁮⁬‫‭‭⁭‮‏‏⁬⁬‭⁫⁬‎​‮‪​⁫‬​⁮⁫⁭‪⁯‏⁬‌⁬‮‮⁭⁭‪‬‮(jsonData.m_Data, this.m_Data) ? 1471894790 : (num6 = 663331499);
            num1 = num6 ^ (int) num2 * 1688721793;
            continue;
          case 25:
            JSONData.\u206A‫‫‬‮‭⁫​⁪‬‫⁪‌⁭‎‬⁭‬⁯⁫⁭⁮‎⁯⁮⁯⁬‭‬‫‍⁭‫‮‌⁮⁫‌‌⁭‮(aWriter, (byte) 3);
            JSONData.\u206C‏​‏‍​⁮‌‍‌​‍‎‪⁪⁫⁯‬⁭⁯‪⁭‬⁫⁮⁪‫​‍‫⁮‎‬‪‪‭⁯⁫‎‍‮(aWriter, this.m_Data);
            num1 = -2016532483;
            continue;
          case 26:
            JSONData.\u200C⁯⁯‍​⁫‫‮‮‪‬‌‏⁬‬‫‫​⁭‎‫‏‭‏‫‎⁯⁫‮⁭‏⁪⁬⁪⁫‬⁫‌‏‎‮(aWriter, this.AsDouble);
            num1 = (int) num2 * 1479533246 ^ 114041015;
            continue;
          case 27:
            num1 = (int) num2 * 1316289933 ^ 676790137;
            continue;
          default:
            goto label_30;
        }
      }
label_3:
      return;
label_30:;
    }

    static string \u200B‏⁭‫⁫⁭‫‌‫‪​‭⁪‭⁯⁬‏⁯‮⁬​⁮‭‪⁬‏⁪‎‭‫‏⁬⁭⁫‪‮⁭‮‏‌‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2)
    {
      return obj0 + obj1 + obj2;
    }

    static bool \u200F‫⁯⁮⁬‫‭‭⁭‮‏‏⁬⁬‭⁫⁬‎​‮‪​⁫‬​⁮⁫⁭‪⁯‏⁬‌⁬‮‮⁭⁭‪‬‮([In] string obj0, [In] string obj1) => obj0 == obj1;

    static void \u206A‫‫‬‮‭⁫​⁪‬‫⁪‌⁭‎‬⁭‬⁯⁫⁭⁮‎⁯⁮⁯⁬‭‬‫‍⁭‫‮‌⁮⁫‌‌⁭‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u202B‫‮‬‮‌⁮‎⁯⁭⁬⁯⁪‭‬⁪⁯‫⁫‭⁬‬⁮‏⁬‍​⁫‏⁯⁫‬⁪‪‌​⁭‏‍‌‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u202D⁪⁯‎‎‍⁮‎‪⁯⁪⁯⁮⁭‪‍⁫‍‬⁬⁬⁪‮‍⁫⁪⁭‫⁪‭‫‍‪⁮‌‎‏‫⁯‏‮([In] BinaryWriter obj0, [In] float obj1) => obj0.Write(obj1);

    static void \u200C⁯⁯‍​⁫‫‮‮‪‬‌‏⁬‬‫‫​⁭‎‫‏‭‏‫‎⁯⁫‮⁭‏⁪⁬⁪⁫‬⁫‌‏‎‮([In] BinaryWriter obj0, [In] double obj1) => obj0.Write(obj1);

    static void \u200F‌⁬​‪⁭‪⁫⁬‮‎‬‬‏⁭​‬⁭⁫⁭⁬⁬⁫‏‪⁯⁫‮⁯⁭⁮⁮⁬‎‏⁯⁬‏‭‮([In] BinaryWriter obj0, [In] bool obj1) => obj0.Write(obj1);

    static void \u206C‏​‏‍​⁮‌‍‌​‍‎‪⁪⁫⁯‬⁭⁯‪⁭‬⁫⁮⁪‫​‍‫⁮‎‬‪‪‭⁯⁫‎‍‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
