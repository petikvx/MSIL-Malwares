// Decompiled with JetBrains decompiler
// Type: Coache.Business.GiftCardManager
// Assembly: IsCopyConstruc, Version=5.6.2.1, Culture=neutral, PublicKeyToken=null
// MVID: 1DA50973-FF9A-4563-8B8F-74E2573677DF
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-136935297fa08738f6957068951067c699c91b2902f3ea14da650289cabfd29d.exe

using Coache.Common;
using Data;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration;
using System.Data;

namespace Coache.Business
{
  public class GiftCardManager
  {
    public BindingList<GiftCard> GetAll(Cliente clienteOrigen)
    {
      DataTable dataTable = SqlDataAccess.ExecuteDataTableQuery(ConfigurationManager.ConnectionStrings["GrouponConnectionString"].ToString(), "GRUPO_N.GetGiftCardCliente", SqlDataAccessArgs.CreateWith("@ID_Cliente", (object) clienteOrigen.UserID).Arguments);
      BindingList<GiftCard> all = new BindingList<GiftCard>();
      if (dataTable != null && dataTable.Rows != null)
      {
        foreach (DataRow row in (InternalDataCollectionBase) dataTable.Rows)
        {
          BindingList<GiftCard> bindingList = all;
          GiftCard giftCard = new GiftCard();
          giftCard.Credito = double.Parse(row["Credito"].ToString());
          giftCard.Fecha = Convert.ToDateTime(row["Fecha"]);
          Cliente cliente1 = new Cliente();
          cliente1.UserName = row["ClienteOrigen"].ToString();
          giftCard.ClienteOrigen = cliente1;
          Cliente cliente2 = new Cliente();
          cliente2.UserName = row["ClienteDestino"].ToString();
          giftCard.ClienteDestino = cliente2;
          bindingList.Add(giftCard);
        }
      }
      return all;
    }

    public int Add(GiftCard giftCard) => SqlDataAccess.ExecuteScalarQuery<int>(ConfigurationManager.ConnectionStrings["GrouponConnectionString"].ToString(), "GRUPO_N.InsertGiftCard", SqlDataAccessArgs.CreateWith("@ID_ClienteOrigen", (object) giftCard.ClienteOrigen.UserID).And("@ID_ClienteDestino", (object) giftCard.ClienteDestino.UserID).And("@Credito", (object) giftCard.Credito).And("@Fecha", (object) giftCard.Fecha).Arguments);

    public List<double> GetMontos() => new List<double>()
    {
      20.0,
      50.0,
      100.0
    };
  }
}
