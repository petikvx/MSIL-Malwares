// Decompiled with JetBrains decompiler
// Type: Server.My.MyProject
// Assembly: Server, Version=2.0.0.2, Culture=neutral, PublicKeyToken=null
// MVID: 84A0DB64-644B-4D8C-8E08-B82602C6312E
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00009-msil\Worm.Win32.Autorun.ibt-f55bc1707b05226f88e41d8673331234ab851b4a8ccb380e183352433ca3c09f.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.ApplicationServices;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.ComponentModel;
using System.ComponentModel.Design;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace Server.My
{
  [StandardModule]
  [HideModuleName]
  [GeneratedCode("MyTemplate", "8.0.0.0")]
  internal sealed class MyProject
  {
    private static readonly MyProject.ThreadSafeObjectProvider<MyComputer> m_ComputerObjectProvider = new MyProject.ThreadSafeObjectProvider<MyComputer>();
    private static readonly MyProject.ThreadSafeObjectProvider<MyApplication> m_AppObjectProvider = new MyProject.ThreadSafeObjectProvider<MyApplication>();
    private static readonly MyProject.ThreadSafeObjectProvider<User> m_UserObjectProvider;
    private static MyProject.ThreadSafeObjectProvider<MyProject.MyForms> m_MyFormsObjectProvider;
    private static readonly MyProject.ThreadSafeObjectProvider<MyProject.MyWebServices> m_MyWebServicesObjectProvider;

    [DebuggerNonUserCode]
    static MyProject()
    {
      if (false)
        return;
      MyProject.m_UserObjectProvider = new MyProject.ThreadSafeObjectProvider<User>();
      if (false)
        return;
      MyProject.m_MyFormsObjectProvider = new MyProject.ThreadSafeObjectProvider<MyProject.MyForms>();
      MyProject.m_MyWebServicesObjectProvider = new MyProject.ThreadSafeObjectProvider<MyProject.MyWebServices>();
    }

    [HelpKeyword("My.Computer")]
    internal static MyComputer Computer
    {
      [DebuggerHidden] get => MyProject.m_ComputerObjectProvider.GetInstance;
    }

    [HelpKeyword("My.Application")]
    internal static MyApplication Application
    {
      [DebuggerHidden] get => MyProject.m_AppObjectProvider.GetInstance;
    }

    [HelpKeyword("My.User")]
    internal static User User
    {
      [DebuggerHidden] get => MyProject.m_UserObjectProvider.GetInstance;
    }

    [HelpKeyword("My.Forms")]
    internal static MyProject.MyForms Forms
    {
      [DebuggerHidden] get => MyProject.m_MyFormsObjectProvider.GetInstance;
    }

    [HelpKeyword("My.WebServices")]
    internal static MyProject.MyWebServices WebServices
    {
      [DebuggerHidden] get => MyProject.m_MyWebServicesObjectProvider.GetInstance;
    }

    [EditorBrowsable(EditorBrowsableState.Never)]
    [ComVisible(false)]
    internal sealed class ThreadSafeObjectProvider<T> where T : new()
    {
      internal T GetInstance
      {
        [DebuggerHidden] get
        {
          if ((object) MyProject.ThreadSafeObjectProvider<T>.m_ThreadStaticValue == null)
            MyProject.ThreadSafeObjectProvider<T>.m_ThreadStaticValue = new T();
          return MyProject.ThreadSafeObjectProvider<T>.m_ThreadStaticValue;
        }
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      [DebuggerHidden]
      public ThreadSafeObjectProvider()
      {
      }
    }

    [MyGroupCollection("System.Windows.Forms.Form", "Create__Instance__", "Dispose__Instance__", "My.MyProject.Forms")]
    [EditorBrowsable(EditorBrowsableState.Never)]
    internal sealed class MyForms
    {
      public Form1 m_Form1;
      [ThreadStatic]
      private static Hashtable m_FormBeingCreated;

      public Form1 Form1
      {
        [DebuggerNonUserCode] get
        {
          this.m_Form1 = MyProject.MyForms.Create__Instance__<Form1>(this.m_Form1);
          Form1 form1 = this.m_Form1;
          if (false)
            ;
          return form1;
        }
        [DebuggerNonUserCode] set
        {
          bool flag = value == this.m_Form1;
          if (false)
            return;
          while (!flag)
          {
            if (false)
              goto label_10;
            else
              goto label_6;
label_4:
            flag = value != null;
            goto label_8;
label_6:
            if ((uint) flag >= 0U)
            {
              if ((uint) flag - (uint) flag >= 0U)
                goto label_4;
            }
            else
              continue;
label_8:
            if (false)
            {
              if (true)
                ;
            }
            else
              goto label_13;
label_10:
            if ((uint) flag - (uint) flag <= uint.MaxValue)
            {
              if ((uint) flag <= uint.MaxValue)
                goto label_4;
            }
            else
              continue;
label_13:
            if (true)
            {
              while (!flag)
              {
                this.Dispose__Instance__<Form1>(ref this.m_Form1);
                if (true)
                  return;
              }
              throw new ArgumentException("Property can only be set to Nothing");
            }
            break;
          }
        }
      }

      [DebuggerHidden]
      private static T Create__Instance__<T>(T Instance) where T : Form, new()
      {
        if ((object) Instance == null)
          goto label_22;
label_20:
        int num;
        if (!Instance.IsDisposed)
        {
          num = 0;
          goto label_23;
        }
label_22:
        num = 1;
label_23:
        bool flag1 = num != 0;
        T instance;
        if (true)
        {
          if (!flag1)
          {
            instance = Instance;
            goto label_25;
          }
          else
            goto label_18;
        }
        else
          goto label_19;
label_9:
        MyProject.MyForms.m_FormBeingCreated.Add((object) typeof (T), (object) null);
        bool flag2;
        try
        {
          instance = new T();
          goto label_25;
        }
        catch (TargetInvocationException ex) when (
        {
          // ISSUE: unable to correctly present filter
          ProjectData.SetProjectError((Exception) ex);
          if (ex.InnerException != null)
          {
            SuccessfulFiltering;
          }
          else
            throw;
        }
        )
        {
          if ((uint) flag2 + (uint) flag2 > uint.MaxValue)
          {
            ProjectData.ClearProjectError();
            goto label_25;
          }
          else
            throw new InvalidOperationException(Utils.GetResourceString("WinForms_SeeInnerException", ex.InnerException.Message), ex.InnerException);
        }
        finally
        {
          MyProject.MyForms.m_FormBeingCreated.Remove((object) typeof (T));
        }
label_10:
        MyProject.MyForms.m_FormBeingCreated = new Hashtable();
        if ((uint) flag1 <= uint.MaxValue)
        {
          if (((flag1 ? 1 : 0) & 0) == 0)
            goto label_9;
          else
            goto label_20;
        }
label_11:
        bool flag3;
        if ((uint) flag1 - (uint) flag3 <= uint.MaxValue)
          goto label_10;
label_14:
        if (!flag3)
        {
          if (false)
            goto label_11;
          else
            goto label_10;
        }
        else
        {
          flag2 = MyProject.MyForms.m_FormBeingCreated.ContainsKey((object) typeof (T));
          if (flag2)
          {
            if ((uint) flag2 - (uint) flag1 < 0U)
              goto label_25;
            else
              goto label_24;
          }
          else
            goto label_9;
        }
label_18:
        flag3 = MyProject.MyForms.m_FormBeingCreated != null;
        goto label_14;
label_19:
        if (true)
          goto label_18;
label_24:
        if ((uint) flag3 >= 0U)
          throw new InvalidOperationException(Utils.GetResourceString("WinForms_RecursiveFormCreate"));
        goto label_11;
label_25:
        return instance;
      }

      [DebuggerHidden]
      private void Dispose__Instance__<T>(ref T instance) where T : Form
      {
        instance.Dispose();
        instance = default (T);
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      [DebuggerHidden]
      public MyForms()
      {
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override bool Equals(object o) => base.Equals(RuntimeHelpers.GetObjectValue(o));

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override int GetHashCode() => base.GetHashCode();

      [EditorBrowsable(EditorBrowsableState.Never)]
      internal new System.Type GetType() => typeof (MyProject.MyForms);

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override string ToString() => base.ToString();
    }

    [MyGroupCollection("System.Web.Services.Protocols.SoapHttpClientProtocol", "Create__Instance__", "Dispose__Instance__", "")]
    [EditorBrowsable(EditorBrowsableState.Never)]
    internal sealed class MyWebServices
    {
      [EditorBrowsable(EditorBrowsableState.Never)]
      [DebuggerHidden]
      public override bool Equals(object o) => base.Equals(RuntimeHelpers.GetObjectValue(o));

      [EditorBrowsable(EditorBrowsableState.Never)]
      [DebuggerHidden]
      public override int GetHashCode() => base.GetHashCode();

      [EditorBrowsable(EditorBrowsableState.Never)]
      [DebuggerHidden]
      internal new System.Type GetType() => typeof (MyProject.MyWebServices);

      [EditorBrowsable(EditorBrowsableState.Never)]
      [DebuggerHidden]
      public override string ToString() => base.ToString();

      [DebuggerHidden]
      private static T Create__Instance__<T>(T instance) where T : new()
      {
        bool flag = (object) instance == null;
        if (true)
          goto label_4;
label_1:
        T instance1 = instance;
        goto label_6;
label_4:
        while ((uint) flag + (uint) flag <= uint.MaxValue)
        {
          if (!flag)
          {
            if ((uint) flag - (uint) flag >= 0U)
              goto label_1;
          }
          else
          {
            instance1 = new T();
            break;
          }
        }
label_6:
        return instance1;
      }

      [DebuggerHidden]
      private void Dispose__Instance__<T>(ref T instance) => instance = default (T);

      [DebuggerHidden]
      [EditorBrowsable(EditorBrowsableState.Never)]
      public MyWebServices()
      {
      }
    }
  }
}
