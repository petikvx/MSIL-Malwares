// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: WaitHand, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: A25291C7-A109-4713-B14B-FDD04827C77F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-c95b09c6ffd61a284edc93ed78ccae28eae9cbf5eb73943fd588e31dfe8b57dc.exe

using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) null;
label_1:
        int num1 = -189790266;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1526898906)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 358547444 ^ 1456933163;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) null;
label_1:
        int num1 = -1799374094;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1994910361)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -912174882 ^ 2012741603;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual string Value
    {
      get => "";
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
label_1:
        int num1 = 273561007;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 923155809)) % 4U)
          {
            case 1:
              num1 = (int) num2 * 1235083082 ^ -1326737533;
              continue;
            case 2:
              count = 0;
              num1 = (int) num2 * 1954603601 ^ -846427042;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem)
    {
      this.Add("", aItem);
label_1:
      int num1 = -1691309039;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1099709642)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * 159301103 ^ 1574581789;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public virtual JSONNode Remove(string aKey)
    {
label_1:
      int num1 = 696663287;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 156148293)) % 4U)
        {
          case 1:
            num1 = (int) num2 * 1101340456 ^ 1994771545;
            continue;
          case 2:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 749125628 ^ 1074604712;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual JSONNode Remove(int aIndex)
    {
      JSONNode jsonNode = (JSONNode) null;
label_1:
      int num1 = -413092302;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1907484962)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -388998694 ^ -676519695;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = 879991868;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1875057103)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -472555243 ^ -1702286184;
            continue;
          case 3:
            jsonNode = aNode;
            num1 = (int) num2 * 6303665 ^ 724664305;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONNode.\u003Cget_Childs\u003Ed__17 childs = new JSONNode.\u003Cget_Childs\u003Ed__17(-2);
label_1:
        int num1 = -1152133418;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1308881262)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              childs.\u003C\u003E4__this = this;
              num1 = (int) num2 * -1017861181 ^ -549911945;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return (IEnumerable<JSONNode>) childs;
      }
    }

    public IEnumerable<JSONNode> DeepChilds
    {
      get
      {
        JSONNode.\u003Cget_DeepChilds\u003Ed__19 getDeepChildsD19 = new JSONNode.\u003Cget_DeepChilds\u003Ed__19(-2);
        getDeepChildsD19.\u003C\u003E4__this = this;
label_1:
        int num1 = -17444106;
        IEnumerable<JSONNode> deepChilds;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -378265727)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              deepChilds = (IEnumerable<JSONNode>) getDeepChildsD19;
              num1 = (int) num2 * -284148302 ^ -1190019292;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return deepChilds;
      }
    }

    public override string ToString()
    {
label_1:
      int num1 = 114998591;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1743973691)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            str = nameof (JSONNode);
            num1 = (int) num2 * 582653358 ^ 1291408011;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual string ToString(string aPrefix)
    {
label_1:
      int num1 = -283191276;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2049235216)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            str = nameof (JSONNode);
            num1 = (int) num2 * -6641831 ^ 1955613996;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual int AsInt
    {
      get
      {
label_1:
        int num1 = -1814051039;
        int result;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -810013890)) % 8U)
          {
            case 0:
              num1 = (int) num2 * -3809634 ^ 149112332;
              continue;
            case 1:
              num1 = (int) num2 * -567451173 ^ 24049719;
              continue;
            case 3:
              goto label_1;
            case 4:
              int num3 = !int.TryParse(this.Value, out result) ? -1240713272 : (num3 = -942700101);
              num1 = num3 ^ (int) num2 * 1616548130;
              continue;
            case 5:
              asInt = result;
              num1 = (int) num2 * 42204520 ^ 357313863;
              continue;
            case 6:
              asInt = 0;
              num1 = -980213914;
              continue;
            case 7:
              result = 0;
              num1 = (int) num2 * 158941841 ^ 2106209821;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asInt;
      }
      set => this.Value = value.ToString();
    }

    public virtual float AsFloat
    {
      get
      {
label_1:
        int num1 = -754636136;
        float result;
        bool flag;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2023655159)) % 8U)
          {
            case 0:
              goto label_1;
            case 1:
              result = 0.0f;
              flag = float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u202E‍‌⁫⁫⁬⁪⁮⁫‫⁭⁫​⁯⁫‍‭‌⁪⁮​⁫‎‌‎⁬⁬​⁯‏‪‪‬⁯‭‬‫⁭⁪⁬‮(), out result);
              num1 = (int) num2 * -1468457473 ^ -1709655702;
              continue;
            case 2:
              asFloat = result;
              num1 = (int) num2 * 1962234017 ^ 1082126045;
              continue;
            case 3:
              asFloat = 0.0f;
              num1 = -1696385764;
              continue;
            case 4:
              int num3 = flag ? -699416625 : (num3 = -845757322);
              num1 = num3 ^ (int) num2 * 282114479;
              continue;
            case 5:
              num1 = (int) num2 * 913137234 ^ -434657548;
              continue;
            case 6:
              num1 = (int) num2 * 821094239 ^ -1493795308;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asFloat;
      }
      set
      {
label_1:
        int num1 = 361016165;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 300579026)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Value = value.ToString();
              num1 = (int) num2 * -1584319203 ^ 2109471275;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual double AsDouble
    {
      get
      {
label_1:
        int num1 = -2139624269;
        double result;
        bool flag;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1475164375)) % 7U)
          {
            case 0:
              int num3 = !flag ? 1917542825 : (num3 = 1785235214);
              num1 = num3 ^ (int) num2 * 1113632045;
              continue;
            case 1:
              result = 0.0;
              num1 = (int) num2 * -88903107 ^ 1362099511;
              continue;
            case 2:
              asDouble = 0.0;
              num1 = -37869831;
              continue;
            case 3:
              goto label_1;
            case 5:
              flag = double.TryParse(this.Value, out result);
              num1 = (int) num2 * 1485047540 ^ 823077357;
              continue;
            case 6:
              asDouble = result;
              num1 = (int) num2 * -1537413149 ^ -1904714928;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asDouble;
      }
      set => this.Value = value.ToString();
    }

    public virtual bool AsBool
    {
      get
      {
        bool result = false;
        if (!bool.TryParse(this.Value, out result))
          goto label_3;
label_1:
        int num1 = -90872075;
label_2:
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1272838604)) % 6U)
          {
            case 0:
              goto label_3;
            case 1:
              asBool = result;
              num1 = (int) num2 * -1384945962 ^ 367072094;
              continue;
            case 2:
              num1 = (int) num2 * -1804215372 ^ -482800419;
              continue;
            case 4:
              num1 = (int) num2 * 1446904690 ^ 405765541;
              continue;
            case 5:
              goto label_1;
            default:
              goto label_7;
          }
        }
label_7:
        return asBool;
label_3:
        asBool = !JSONNode.\u200B‭⁮‪‎‬⁫‌⁭‭⁬⁫‬​⁫‎‏‏‎⁯⁮‍⁫‏⁭‫​⁮⁪‌‌⁮‮⁪‎⁫‪⁪⁬‭‮(this.Value);
        num1 = -988768124;
        goto label_2;
      }
      set => this.Value = value ? "true" : "false";
    }

    public virtual JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = 1185180413;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 546198676)) % 4U)
          {
            case 1:
              asArray = this as JSONArray;
              num1 = (int) num2 * 1671715507 ^ -782465736;
              continue;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * -1847237808 ^ 150368408;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asArray;
      }
    }

    public virtual JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = 1845732886;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1672233051)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              asObject = this as JSONClass;
              num1 = (int) num2 * 1658670005 ^ -312611391;
              continue;
            case 3:
              num1 = (int) num2 * 373273168 ^ 1526289561;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s)
    {
label_1:
      int num1 = 371246304;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1883465841)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            jsonNode = (JSONNode) new JSONData(s);
            num1 = (int) num2 * 1927182985 ^ -344973702;
            continue;
          case 2:
            num1 = (int) num2 * 224597039 ^ -246152208;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public static implicit operator string(JSONNode d)
    {
label_1:
      int num1 = 287541924;
      string str1;
      while (true)
      {
        uint num2;
        string str2;
        switch ((num2 = (uint) (num1 ^ 1953565104)) % 5U)
        {
          case 0:
            str2 = d.Value;
            break;
          case 2:
            num1 = (int) num2 * -194080496 ^ -965923673;
            continue;
          case 3:
            goto label_1;
          case 4:
            if (!(d == (object) null))
            {
              num1 = (int) num2 * -1149911940 ^ 174721188;
              continue;
            }
            str2 = (string) null;
            break;
          default:
            goto label_9;
        }
        str1 = str2;
        num1 = 1987912805;
      }
label_9:
      return str1;
    }

    public static bool operator ==(JSONNode a, object b)
    {
      if (b != null)
        goto label_6;
label_1:
      int num1 = -2075940355;
label_2:
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1181355724)) % 6U)
        {
          case 0:
            goto label_1;
          case 1:
            flag = (object) a == b;
            num1 = -1076728855;
            continue;
          case 2:
            flag = true;
            num1 = (int) num2 * -1511571129 ^ -725375420;
            continue;
          case 3:
            goto label_5;
          case 4:
            num1 = (int) num2 * 447957591 ^ 1322285065;
            continue;
          default:
            goto label_9;
        }
      }
label_5:
      int num3 = a is JSONLazyCreator ? 1 : 0;
      goto label_7;
label_9:
      return flag;
label_6:
      num3 = 0;
label_7:
      num1 = num3 != 0 ? -792581116 : (num1 = -196562283);
      goto label_2;
    }

    public static bool operator !=(JSONNode a, object b)
    {
label_1:
      int num1 = -845967376;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -624398475)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            flag = !(a == b);
            num1 = (int) num2 * -1139606351 ^ -54381322;
            continue;
          case 2:
            num1 = (int) num2 * -180145032 ^ -332002566;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = 601623771;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 960832465)) % 4U)
        {
          case 1:
            num1 = (int) num2 * -661190031 ^ 1431588380;
            continue;
          case 2:
            flag = (object) this == obj;
            num1 = (int) num2 * 1946196174 ^ -444287284;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override int GetHashCode() => this.\u200E‭‬​‎‍‮⁬‎⁯‎‍‏‮‬‮⁮⁫⁪⁪‪‌⁫‪‏‮‏⁫‍‫⁭⁬⁫⁪‮‏⁬⁫‬‬‮();

    internal static string Escape(string aText)
    {
      string str1 = "";
label_1:
      int num1 = 908436468;
      string str2;
      int num2;
      char ch1;
      char ch2;
      string str3;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 916023770)) % 29U)
        {
          case 0:
            num1 = (int) num3 * -1836588472 ^ 1728227813;
            continue;
          case 1:
            int num4;
            num1 = num4 = ch2 == '\\' ? 1886133340 : (num4 = 1118223155);
            continue;
          case 2:
            ch1 = JSONNode.\u206A⁮⁯‏‮⁪‬‏⁮⁯‪‍‭‎‏⁪‍⁬⁪⁭⁫‎⁭‏⁭‍‍‌⁬‍⁮⁬‮‮⁯‮⁪⁭⁫⁪‮(str2, num2);
            num1 = 200743916;
            continue;
          case 3:
            num1 = (int) num3 * -534117669 ^ 1322312321;
            continue;
          case 4:
            num1 = (int) num3 * -1031813470 ^ 417774823;
            continue;
          case 5:
            num1 = (int) num3 * 79858654 ^ 1634059248;
            continue;
          case 6:
label_26:
            str1 = JSONNode.\u206E⁯‪⁬‭‭‬‍‮‪⁪‏⁮⁫⁮‬‭⁯‮⁭⁪‏‍‫‮‫‫‍⁮‮‌⁪‪⁫‫⁫‎⁭‬‎‮(str1, "\\n");
            num1 = 1025341621;
            continue;
          case 7:
            num1 = (int) num3 * 1862776171 ^ -983142420;
            continue;
          case 8:
            ++num2;
            num1 = 1577089860;
            continue;
          case 9:
            num1 = (int) num3 * -1545737898 ^ 2123560159;
            continue;
          case 10:
            num1 = (int) num3 * 205752732 ^ -262383279;
            continue;
          case 11:
            ch2 = ch1;
            switch (ch2)
            {
              case '\b':
                goto label_12;
              case '\t':
                goto label_24;
              case '\n':
                goto label_26;
              case '\v':
                goto label_10;
              case '\f':
                goto label_20;
              case '\r':
                goto label_14;
              default:
                num1 = (int) num3 * -1651190557 ^ -1736733115;
                continue;
            }
          case 12:
            int num5;
            num1 = num5 = ch2 == '"' ? 1171353301 : (num5 = 1846809463);
            continue;
          case 13:
label_10:
            str1 = JSONNode.\u206E⁯‪⁬‭‭‬‍‮‪⁪‏⁮⁫⁮‬‭⁯‮⁭⁪‏‍‫‮‫‫‍⁮‮‌⁪‪⁫‫⁫‎⁭‬‎‮(str1, ch1.ToString());
            num1 = 1025341621;
            continue;
          case 14:
label_20:
            str1 = JSONNode.\u206E⁯‪⁬‭‭‬‍‮‪⁪‏⁮⁫⁮‬‭⁯‮⁭⁪‏‍‫‮‫‫‍⁮‮‌⁪‪⁫‫⁫‎⁭‬‎‮(str1, "\\f");
            num1 = 1025341621;
            continue;
          case 15:
            str3 = str1;
            num1 = (int) num3 * -872521959 ^ 524523221;
            continue;
          case 16:
            num1 = (int) num3 * 419879903 ^ 2116636462;
            continue;
          case 18:
            num1 = (int) num3 * 22954261 ^ 2117448010;
            continue;
          case 19:
            goto label_1;
          case 20:
            str1 = JSONNode.\u206E⁯‪⁬‭‭‬‍‮‪⁪‏⁮⁫⁮‬‭⁯‮⁭⁪‏‍‫‮‫‫‍⁮‮‌⁪‪⁫‫⁫‎⁭‬‎‮(str1, "\\\"");
            num1 = 1229648415;
            continue;
          case 21:
label_14:
            str1 = JSONNode.\u206E⁯‪⁬‭‭‬‍‮‪⁪‏⁮⁫⁮‬‭⁯‮⁭⁪‏‍‫‮‫‫‍⁮‮‌⁪‪⁫‫⁫‎⁭‬‎‮(str1, "\\r");
            num1 = 1058632217;
            continue;
          case 22:
label_24:
            str1 = JSONNode.\u206E⁯‪⁬‭‭‬‍‮‪⁪‏⁮⁫⁮‬‭⁯‮⁭⁪‏‍‫‮‫‫‍⁮‮‌⁪‪⁫‫⁫‎⁭‬‎‮(str1, "\\t");
            num1 = 1301027781;
            continue;
          case 23:
            num1 = (int) num3 * 141809071 ^ 245053599;
            continue;
          case 24:
            str2 = aText;
            num2 = 0;
            num1 = (int) num3 * 1695333708 ^ 66432394;
            continue;
          case 25:
            num1 = (int) num3 * 290940082 ^ -1690036677;
            continue;
          case 26:
label_12:
            str1 = JSONNode.\u206E⁯‪⁬‭‭‬‍‮‪⁪‏⁮⁫⁮‬‭⁯‮⁭⁪‏‍‫‮‫‫‍⁮‮‌⁪‪⁫‫⁫‎⁭‬‎‮(str1, "\\b");
            num1 = 1441099008;
            continue;
          case 27:
            str1 = JSONNode.\u206E⁯‪⁬‭‭‬‍‮‪⁪‏⁮⁫⁮‬‭⁯‮⁭⁪‏‍‫‮‫‫‍⁮‮‌⁪‪⁫‫⁫‎⁭‬‎‮(str1, "\\\\");
            num1 = 1168583493;
            continue;
          case 28:
            int num6;
            num1 = num6 = num2 < JSONNode.\u206D⁭‪⁪‮⁯⁯⁪‮‮‏⁫‌‭⁯⁮⁫⁪⁫​‎⁬​⁯‭‍‬‏⁫‬⁫⁮⁫⁮⁬⁪‬‬‏‮(str2) ? 2092714951 : (num6 = 1373211828);
            continue;
          default:
            goto label_31;
        }
      }
label_31:
      return str3;
    }

    public static JSONNode Parse(string aJSON)
    {
      Stack<JSONNode> jsonNodeStack = new Stack<JSONNode>();
label_1:
      int num1 = 554411163;
      string aKey;
      JSONNode jsonNode1;
      bool flag1;
      bool flag2;
      string aItem;
      string s;
      bool flag3;
      bool flag4;
      bool flag5;
      int num2;
      char ch1;
      char ch2;
      char ch3;
      bool flag6;
      bool flag7;
      bool flag8;
      bool flag9;
      bool flag10;
      bool flag11;
      char ch4;
      bool flag12;
      bool flag13;
      bool flag14;
      bool flag15;
      JSONNode jsonNode2;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 347097048)) % 156U)
        {
          case 0:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -242410711 ^ 1577303015;
            continue;
          case 1:
            int num4;
            num1 = num4 = ch1 == ' ' ? 1914783322 : (num4 = 2105113014);
            continue;
          case 2:
            aItem = "";
            num1 = (int) num3 * 1555610010 ^ 1761848979;
            continue;
          case 3:
            int num5 = ch3 <= 'f' ? -49138642 : (num5 = -1732113338);
            num1 = num5 ^ (int) num3 * -958132901;
            continue;
          case 4:
            num1 = 1897463570;
            continue;
          case 5:
            num1 = (int) num3 * 848434269 ^ -676082792;
            continue;
          case 6:
            ch2 = JSONNode.\u206A⁮⁯‏‮⁪‬‏⁮⁯‪‍‭‎‏⁪‍⁬⁪⁭⁫‎⁭‏⁭‍‍‌⁬‍⁮⁬‮‮⁯‮⁪⁭⁫⁪‮(aJSON, num2);
            num1 = (int) num3 * 823998885 ^ -1448105728;
            continue;
          case 7:
            int num6 = flag7 ? 1482415666 : (num6 = 1558042926);
            num1 = num6 ^ (int) num3 * -1746227014;
            continue;
          case 8:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 1017893900 ^ 1666645368;
            continue;
          case 9:
            int num7;
            num1 = num7 = ch3 == 'f' ? 1447798220 : (num7 = 178726763);
            continue;
          case 10:
            num1 = (int) num3 * -64542707 ^ -836402745;
            continue;
          case 11:
            int num8;
            num1 = num8 = ch1 != ',' ? 1347143155 : (num8 = 1310137357);
            continue;
          case 12:
            aKey = "";
            aItem = "";
            num1 = 1357088760;
            continue;
          case 13:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * 1530177586 ^ -1649022358;
            continue;
          case 14:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num1 = 604330990;
            continue;
          case 15:
label_75:
            ++num2;
            flag12 = flag3;
            num1 = 108980593;
            continue;
          case 16:
            num1 = 326426238;
            continue;
          case 17:
            num1 = (int) num3 * 393276875 ^ -278618729;
            continue;
          case 18:
            flag3 = !flag3;
            num1 = 1326053659;
            continue;
          case 19:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 1924874793 ^ 844385508;
            continue;
          case 20:
            switch (ch3)
            {
              case 'r':
                goto label_120;
              case 's':
                goto label_152;
              case 't':
                goto label_131;
              case 'u':
                goto label_142;
              default:
                num1 = 917823675;
                continue;
            }
          case 21:
            num1 = (int) num3 * -1483900148 ^ -771454373;
            continue;
          case 22:
            num2 += 4;
            num1 = (int) num3 * -1737417800 ^ -2120307843;
            continue;
          case 23:
label_94:
            flag11 = flag3;
            num1 = 1687555029;
            continue;
          case 24:
            flag6 = jsonNode1 != (object) null;
            num1 = (int) num3 * -1283168422 ^ -546421889;
            continue;
          case 25:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * 843967156 ^ -1108068929;
            continue;
          case 26:
            num1 = (int) num3 * -1566595812 ^ -856796784;
            continue;
          case 27:
            switch (ch1)
            {
              case '[':
                goto label_145;
              case '\\':
                goto label_75;
              case ']':
                goto label_94;
              default:
                num1 = 2033845598;
                continue;
            }
          case 28:
            num1 = (int) num3 * -885292122 ^ 314297037;
            continue;
          case 29:
            int num9;
            num1 = num9 = ch1 != '}' ? 561662499 : (num9 = 1204144787);
            continue;
          case 30:
            num1 = (int) num3 * -1810131251 ^ -323683468;
            continue;
          case 31:
          case 52:
          case 87:
          case 101:
          case 116:
label_53:
            ++num2;
            num1 = 551065997;
            continue;
          case 32:
            num1 = (int) num3 * 1537985098 ^ -1949976379;
            continue;
          case 33:
            aItem = JSONNode.\u206E⁯‪⁬‭‭‬‍‮‪⁪‏⁮⁫⁮‬‭⁯‮⁭⁪‏‍‫‮‫‫‍⁮‮‌⁪‪⁫‫⁫‎⁭‬‎‮(aItem, JSONNode.\u206A⁮⁯‏‮⁪‬‏⁮⁯‪‍‭‎‏⁪‍⁬⁪⁭⁫‎⁭‏⁭‍‍‌⁬‍⁮⁬‮‮⁯‮⁪⁭⁫⁪‮(aJSON, num2).ToString());
            num1 = (int) num3 * 865467128 ^ 1337531144;
            continue;
          case 34:
            num1 = (int) num3 * -2072294467 ^ -1578196561;
            continue;
          case 35:
            flag4 = flag3;
            num1 = (int) num3 * -1060056065 ^ 2020587053;
            continue;
          case 36:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 1510841264 ^ -545491238;
            continue;
          case 37:
            flag13 = JSONNode.\u206C⁫‍⁪​⁫⁭⁬‎‫‫⁭‮‬⁪‍‌‏⁯⁬‏‫⁪‍‫⁮‬⁪​‭⁬‫⁪⁭‎‫⁮⁯‮⁭‮(aKey, "");
            num1 = 1377966584;
            continue;
          case 38:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -608110071 ^ -944944721;
            continue;
          case 39:
            num1 = (int) num3 * -783042739 ^ 934112063;
            continue;
          case 40:
            int num10;
            num1 = num10 = JSONNode.\u206C⁫‍⁪​⁫⁭⁬‎‫‫⁭‮‬⁪‍‌‏⁯⁬‏‫⁪‍‫⁮‬⁪​‭⁬‫⁪⁭‎‫⁮⁯‮⁭‮(aKey, "") ? 316969430 : (num10 = 1413399212);
            continue;
          case 41:
            num1 = (int) num3 * -621788761 ^ 516045595;
            continue;
          case 42:
            num1 = (int) num3 * -818229308 ^ 814318296;
            continue;
          case 43:
            int num11 = ch3 == 'b' ? -1256973124 : (num11 = -1757451904);
            num1 = num11 ^ (int) num3 * -1829904096;
            continue;
          case 44:
            aItem = JSONNode.\u206E⁯‪⁬‭‭‬‍‮‪⁪‏⁮⁫⁮‬‭⁯‮⁭⁪‏‍‫‮‫‫‍⁮‮‌⁪‪⁫‫⁫‎⁭‬‎‮(aItem, ((char) int.Parse(s, NumberStyles.AllowHexSpecifier)).ToString());
            num1 = (int) num3 * 1113391502 ^ 336937886;
            continue;
          case 45:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            num1 = 2090876120;
            continue;
          case 46:
            switch (ch1)
            {
              case '\t':
                goto label_64;
              case '\n':
              case '\r':
                goto label_53;
              case '\v':
              case '\f':
                goto label_99;
              default:
                num1 = (int) num3 * 1835312549 ^ -1766186148;
                continue;
            }
          case 47:
            int num12 = !flag6 ? 2073448033 : (num12 = 1322092486);
            num1 = num12 ^ (int) num3 * -392792272;
            continue;
          case 48:
            flag2 = JSONNode.\u206C⁫‍⁪​⁫⁭⁬‎‫‫⁭‮‬⁪‍‌‏⁯⁬‏‫⁪‍‫⁮‬⁪​‭⁬‫⁪⁭‎‫⁮⁯‮⁭‮(aItem, "");
            num1 = 314352015;
            continue;
          case 49:
            int num13 = ch1 > ' ' ? -1730469273 : (num13 = -1154955190);
            num1 = num13 ^ (int) num3 * -2007786140;
            continue;
          case 50:
            flag15 = JSONNode.\u206C⁫‍⁪​⁫⁭⁬‎‫‫⁭‮‬⁪‍‌‏⁯⁬‏‫⁪‍‫⁮‬⁪​‭⁬‫⁪⁭‎‫⁮⁯‮⁭‮(aKey, "");
            num1 = 1448554880;
            continue;
          case 51:
            int num14 = jsonNode1 is JSONArray ? 1664692825 : (num14 = 855512327);
            num1 = num14 ^ (int) num3 * 2015840065;
            continue;
          case 53:
            num1 = (int) num3 * -995708270 ^ -1271528938;
            continue;
          case 54:
            flag10 = JSONNode.\u206C⁫‍⁪​⁫⁭⁬‎‫‫⁭‮‬⁪‍‌‏⁯⁬‏‫⁪‍‫⁮‬⁪​‭⁬‫⁪⁭‎‫⁮⁯‮⁭‮(aItem, "");
            num1 = (int) num3 * -1464355622 ^ -409362103;
            continue;
          case 55:
            num1 = (int) num3 * -1951003489 ^ 114444096;
            continue;
          case 56:
            num1 = (int) num3 * 1080279001 ^ -2045872824;
            continue;
          case 57:
            int num15 = !flag12 ? 1384061744 : (num15 = 1571398448);
            num1 = num15 ^ (int) num3 * -628239701;
            continue;
          case 58:
            aKey = "";
            aItem = "";
            num1 = 706926685;
            continue;
          case 59:
            goto label_140;
          case 60:
            int num16 = !flag13 ? -483377997 : (num16 = -854086425);
            num1 = num16 ^ (int) num3 * -1586433837;
            continue;
          case 61:
            aItem = JSONNode.\u206E⁯‪⁬‭‭‬‍‮‪⁪‏⁮⁫⁮‬‭⁯‮⁭⁪‏‍‫‮‫‫‍⁮‮‌⁪‪⁫‫⁫‎⁭‬‎‮(aItem, "\n");
            num1 = 1202970541;
            continue;
          case 62:
            aKey = aItem;
            num1 = 531684373;
            continue;
          case 63:
            aItem = JSONNode.\u206E⁯‪⁬‭‭‬‍‮‪⁪‏⁮⁫⁮‬‭⁯‮⁭⁪‏‍‫‮‫‫‍⁮‮‌⁪‪⁫‫⁫‎⁭‬‎‮(aItem, JSONNode.\u206A⁮⁯‏‮⁪‬‏⁮⁯‪‍‭‎‏⁪‍⁬⁪⁭⁫‎⁭‏⁭‍‍‌⁬‍⁮⁬‮‮⁯‮⁪⁭⁫⁪‮(aJSON, num2).ToString());
            num1 = (int) num3 * -1158561215 ^ 1564603417;
            continue;
          case 64:
            aItem = JSONNode.\u206E⁯‪⁬‭‭‬‍‮‪⁪‏⁮⁫⁮‬‭⁯‮⁭⁪‏‍‫‮‫‫‍⁮‮‌⁪‪⁫‫⁫‎⁭‬‎‮(aItem, "\b");
            num1 = 738601800;
            continue;
          case 65:
            int num17 = flag11 ? 167527755 : (num17 = 21873640);
            num1 = num17 ^ (int) num3 * -365017471;
            continue;
          case 66:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 1932714474 ^ 643249248;
            continue;
          case 67:
            num1 = 1558113841;
            continue;
          case 68:
            int num18 = !flag4 ? -240445356 : (num18 = -797524762);
            num1 = num18 ^ (int) num3 * -1013087451;
            continue;
          case 69:
            aItem = "";
            flag7 = jsonNodeStack.Count > 0;
            num1 = (int) num3 * 1687988294 ^ 1809687193;
            continue;
          case 70:
            num1 = (int) num3 * -2099988933 ^ 1065218057;
            continue;
          case 71:
            num1 = (int) num3 * -2117984530 ^ -1895562045;
            continue;
          case 72:
            ch3 = ch4;
            num1 = (int) num3 * 392508408 ^ -1251269321;
            continue;
          case 73:
label_120:
            aItem = JSONNode.\u206E⁯‪⁬‭‭‬‍‮‪⁪‏⁮⁫⁮‬‭⁯‮⁭⁪‏‍‫‮‫‫‍⁮‮‌⁪‪⁫‫⁫‎⁭‬‎‮(aItem, "\r");
            num1 = 242023586;
            continue;
          case 74:
            num1 = (int) num3 * 1892459510 ^ -645805286;
            continue;
          case 75:
            num1 = (int) num3 * -1527511983 ^ -1187351691;
            continue;
          case 76:
            int num19 = jsonNode1 != (object) null ? -2005305659 : (num19 = -1787690740);
            num1 = num19 ^ (int) num3 * -1174585849;
            continue;
          case 77:
            aItem = "";
            num1 = (int) num3 * 1356159972 ^ -1831997034;
            continue;
          case 78:
label_64:
            int num20;
            num1 = num20 = !flag3 ? 230617680 : (num20 = 908195437);
            continue;
          case 79:
            int num21 = ch1 <= ',' ? 1912574219 : (num21 = 470969046);
            num1 = num21 ^ (int) num3 * -908561878;
            continue;
          case 80:
            num1 = (int) num3 * 237035796 ^ 1762163027;
            continue;
          case 81:
            num1 = (int) num3 * 871317090 ^ -275805153;
            continue;
          case 82:
            num1 = (int) num3 * 1892304864 ^ 594824552;
            continue;
          case 83:
            num1 = (int) num3 * 480131697 ^ 962795680;
            continue;
          case 84:
            int num22 = !(jsonNode1 is JSONArray) ? -1724347463 : (num22 = -387088839);
            num1 = num22 ^ (int) num3 * 535589298;
            continue;
          case 85:
            s = JSONNode.\u200F⁯‏‪⁫​⁬⁬‮⁪‏‌‫‍⁫‏‮⁬​‬‍‫‫‎‪⁭‫⁮⁭‌​‫‫‪‪‌⁭‌⁭‎‮(aJSON, num2 + 1, 4);
            num1 = (int) num3 * -1317084685 ^ 2073570423;
            continue;
          case 86:
            aItem = JSONNode.\u206E⁯‪⁬‭‭‬‍‮‪⁪‏⁮⁫⁮‬‭⁯‮⁭⁪‏‍‫‮‫‫‍⁮‮‌⁪‪⁫‫⁫‎⁭‬‎‮(aItem, JSONNode.\u206A⁮⁯‏‮⁪‬‏⁮⁯‪‍‭‎‏⁪‍⁬⁪⁭⁫‎⁭‏⁭‍‍‌⁬‍⁮⁬‮‮⁯‮⁪⁭⁫⁪‮(aJSON, num2).ToString());
            num1 = (int) num3 * -923973838 ^ 314856504;
            continue;
          case 88:
            int num23;
            num1 = num23 = !JSONNode.\u206C⁫‍⁪​⁫⁭⁬‎‫‫⁭‮‬⁪‍‌‏⁯⁬‏‫⁪‍‫⁮‬⁪​‭⁬‫⁪⁭‎‫⁮⁯‮⁭‮(aKey, "") ? 811489644 : (num23 = 592592142);
            continue;
          case 89:
            aKey = "";
            num1 = 892792382;
            continue;
          case 90:
            goto label_52;
          case 91:
            int num24 = !flag5 ? -1068364692 : (num24 = -494064535);
            num1 = num24 ^ (int) num3 * 1750064822;
            continue;
          case 92:
            int num25 = !flag8 ? -1321605804 : (num25 = -1525732812);
            num1 = num25 ^ (int) num3 * 983823615;
            continue;
          case 93:
            flag9 = jsonNodeStack.Count == 0;
            num1 = 950399279;
            continue;
          case 94:
            int num26 = ch1 != ':' ? 1488650657 : (num26 = 963287631);
            num1 = num26 ^ (int) num3 * 1883957089;
            continue;
          case 95:
            aItem = JSONNode.\u206E⁯‪⁬‭‭‬‍‮‪⁪‏⁮⁫⁮‬‭⁯‮⁭⁪‏‍‫‮‫‫‍⁮‮‌⁪‪⁫‫⁫‎⁭‬‎‮(aItem, JSONNode.\u206A⁮⁯‏‮⁪‬‏⁮⁯‪‍‭‎‏⁪‍⁬⁪⁭⁫‎⁭‏⁭‍‍‌⁬‍⁮⁬‮‮⁯‮⁪⁭⁫⁪‮(aJSON, num2).ToString());
            num1 = (int) num3 * -1489975512 ^ -1822046597;
            continue;
          case 96:
            jsonNode2 = jsonNode1;
            num1 = 1463732886;
            continue;
          case 97:
label_142:
            num1 = 1766851941;
            continue;
          case 99:
            jsonNodeStack.Pop();
            num1 = 1518184878;
            continue;
          case 100:
            int num27;
            num1 = num27 = ch1 != '{' ? 998631984 : (num27 = 1473395213);
            continue;
          case 102:
            aItem = JSONNode.\u206E⁯‪⁬‭‭‬‍‮‪⁪‏⁮⁫⁮‬‭⁯‮⁭⁪‏‍‫‮‫‫‍⁮‮‌⁪‪⁫‫⁫‎⁭‬‎‮(aItem, JSONNode.\u206A⁮⁯‏‮⁪‬‏⁮⁯‪‍‭‎‏⁪‍⁬⁪⁭⁫‎⁭‏⁭‍‍‌⁬‍⁮⁬‮‮⁯‮⁪⁭⁫⁪‮(aJSON, num2).ToString());
            num1 = (int) num3 * 1923738236 ^ 2051358969;
            continue;
          case 103:
            int num28;
            num1 = num28 = ch1 != '"' ? 1471665221 : (num28 = 1507718054);
            continue;
          case 104:
            aItem = JSONNode.\u206E⁯‪⁬‭‭‬‍‮‪⁪‏⁮⁫⁮‬‭⁯‮⁭⁪‏‍‫‮‫‫‍⁮‮‌⁪‪⁫‫⁫‎⁭‬‎‮(aItem, "\f");
            num1 = 581387873;
            continue;
          case 105:
            int num29 = !flag10 ? 1409437588 : (num29 = 829807175);
            num1 = num29 ^ (int) num3 * 1210300106;
            continue;
          case 106:
            aKey = "";
            num1 = 966210445;
            continue;
          case 107:
            int num30 = !flag9 ? 1459482720 : (num30 = 1028339736);
            num1 = num30 ^ (int) num3 * 922248393;
            continue;
          case 108:
            num1 = (int) num3 * -2087193308 ^ -1267327889;
            continue;
          case 109:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 1613390204 ^ 1171573815;
            continue;
          case 110:
label_152:
            aItem = JSONNode.\u206E⁯‪⁬‭‭‬‍‮‪⁪‏⁮⁫⁮‬‭⁯‮⁭⁪‏‍‫‮‫‫‍⁮‮‌⁪‪⁫‫⁫‎⁭‬‎‮(aItem, ch4.ToString());
            num1 = 1546902769;
            continue;
          case 111:
            jsonNode1 = (JSONNode) null;
            num2 = 0;
            aItem = "";
            num1 = (int) num3 * 830679335 ^ 1714927407;
            continue;
          case 112:
            aKey = JSONNode.\u202D⁫‏⁫‮‌⁪⁯‌‌‫‌‭‍‭‎​‬‫⁫‏⁫⁭‫⁯‭‍​⁪‌⁫⁬‪‎⁪⁮⁬⁫‪⁮‮(aKey);
            flag1 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -1560925134 ^ -658280950;
            continue;
          case 113:
            int num31;
            num1 = num31 = !flag3 ? 584618833 : (num31 = 931192622);
            continue;
          case 114:
            aKey = "";
            num1 = (int) num3 * 741840356 ^ -542069827;
            continue;
          case 115:
            num1 = (int) num3 * -1326526587 ^ 230557045;
            continue;
          case 117:
            num1 = (int) num3 * -1661373054 ^ 526009391;
            continue;
          case 118:
            num1 = (int) num3 * -328655895 ^ 904924815;
            continue;
          case 119:
            int num32 = flag2 ? -609154933 : (num32 = -1722064985);
            num1 = num32 ^ (int) num3 * -2137386541;
            continue;
          case 120:
            goto label_1;
          case 121:
            num1 = 1779783635;
            continue;
          case 122:
            num1 = (int) num3 * -1723036923 ^ 1448736127;
            continue;
          case 123:
            num1 = (int) num3 * 328398762 ^ -1045878834;
            continue;
          case 124:
            int num33 = flag14 ? 209040862 : (num33 = 2128335566);
            num1 = num33 ^ (int) num3 * -176566687;
            continue;
          case 125:
            flag5 = flag3;
            num1 = 221714439;
            continue;
          case 126:
            ch1 = ch2;
            num1 = (int) num3 * 1673582912 ^ 345946439;
            continue;
          case (uint) sbyte.MaxValue:
            num1 = (int) num3 * 1063577151 ^ 1060495319;
            continue;
          case 128:
            int num34 = !flag15 ? 1402217398 : (num34 = 207053456);
            num1 = num34 ^ (int) num3 * 387275670;
            continue;
          case 129:
            num1 = (int) num3 * 1920159833 ^ 1729783195;
            continue;
          case 130:
            aKey = JSONNode.\u202D⁫‏⁫‮‌⁪⁯‌‌‫‌‭‍‭‎​‬‫⁫‏⁫⁭‫⁯‭‍​⁪‌⁫⁬‪‎⁪⁮⁬⁫‪⁮‮(aKey);
            int num35 = !(jsonNode1 is JSONArray) ? 404425980 : (num35 = 1841989773);
            num1 = num35 ^ (int) num3 * -762369878;
            continue;
          case 131:
            num1 = (int) num3 * 1323029062 ^ -15498113;
            continue;
          case 132:
            aKey = JSONNode.\u202D⁫‏⁫‮‌⁪⁯‌‌‫‌‭‍‭‎​‬‫⁫‏⁫⁭‫⁯‭‍​⁪‌⁫⁬‪‎⁪⁮⁬⁫‪⁮‮(aKey);
            num1 = (int) num3 * 1727686888 ^ 1032179040;
            continue;
          case 133:
            int num36;
            num1 = num36 = num2 >= JSONNode.\u206D⁭‪⁪‮⁯⁯⁪‮‮‏⁫‌‭⁯⁮⁫⁪⁫​‎⁬​⁯‭‍‬‏⁫‬⁫⁮⁫⁮⁬⁪‬‬‏‮(aJSON) ? 633892791 : (num36 = 296986044);
            continue;
          case 134:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 1807257303 ^ 1691223539;
            continue;
          case 135:
            num1 = (int) num3 * 1118762997 ^ 560759150;
            continue;
          case 136:
            num1 = (int) num3 * 433924183 ^ 423261037;
            continue;
          case 137:
            flag3 = false;
            num1 = (int) num3 * -441750185 ^ -601515962;
            continue;
          case 138:
            num1 = (int) num3 * 1282575310 ^ 1812841857;
            continue;
          case 139:
            num1 = (int) num3 * -1236940751 ^ 988847200;
            continue;
          case 140:
            num1 = (int) num3 * 842502009 ^ 586547905;
            continue;
          case 141:
            flag8 = flag3;
            num1 = 716861444;
            continue;
          case 142:
            aItem = JSONNode.\u206E⁯‪⁬‭‭‬‍‮‪⁪‏⁮⁫⁮‬‭⁯‮⁭⁪‏‍‫‮‫‫‍⁮‮‌⁪‪⁫‫⁫‎⁭‬‎‮(aItem, JSONNode.\u206A⁮⁯‏‮⁪‬‏⁮⁯‪‍‭‎‏⁪‍⁬⁪⁭⁫‎⁭‏⁭‍‍‌⁬‍⁮⁬‮‮⁯‮⁪⁭⁫⁪‮(aJSON, num2).ToString());
            num1 = (int) num3 * -918204230 ^ 189324001;
            continue;
          case 143:
            int num37;
            num1 = num37 = ch3 == 'n' ? 1864514681 : (num37 = 2062683468);
            continue;
          case 144:
label_99:
            aItem = JSONNode.\u206E⁯‪⁬‭‭‬‍‮‪⁪‏⁮⁫⁮‬‭⁯‮⁭⁪‏‍‫‮‫‫‍⁮‮‌⁪‪⁫‫⁫‎⁭‬‎‮(aItem, JSONNode.\u206A⁮⁯‏‮⁪‬‏⁮⁯‪‍‭‎‏⁪‍⁬⁪⁭⁫‎⁭‏⁭‍‍‌⁬‍⁮⁬‮‮⁯‮⁪⁭⁫⁪‮(aJSON, num2).ToString());
            num1 = 133143647;
            continue;
          case 145:
label_145:
            flag14 = flag3;
            num1 = 1145597984;
            continue;
          case 146:
            int num38 = !flag1 ? 373459602 : (num38 = 865731801);
            num1 = num38 ^ (int) num3 * -466725902;
            continue;
          case 147:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -2022498467 ^ -1643859962;
            continue;
          case 148:
            int num39;
            num1 = num39 = ch1 <= ']' ? 661325230 : (num39 = 440325984);
            continue;
          case 149:
label_131:
            aItem = JSONNode.\u206E⁯‪⁬‭‭‬‍‮‪⁪‏⁮⁫⁮‬‭⁯‮⁭⁪‏‍‫‮‫‫‍⁮‮‌⁪‪⁫‫⁫‎⁭‬‎‮(aItem, "\t");
            num1 = 1202970541;
            continue;
          case 150:
            num1 = 1138783852;
            continue;
          case 151:
            num1 = (int) num3 * -475298494 ^ -1684094424;
            continue;
          case 152:
            num1 = 573328022;
            continue;
          case 153:
            num1 = (int) num3 * -1038691657 ^ -82274853;
            continue;
          case 154:
            num1 = (int) num3 * -1721471151 ^ -46221170;
            continue;
          case 155:
            ch4 = JSONNode.\u206A⁮⁯‏‮⁪‬‏⁮⁯‪‍‭‎‏⁪‍⁬⁪⁭⁫‎⁭‏⁭‍‍‌⁬‍⁮⁬‮‮⁯‮⁪⁭⁫⁪‮(aJSON, num2);
            num1 = (int) num3 * 1529025908 ^ -1837741028;
            continue;
          default:
            goto label_156;
        }
      }
label_52:
      throw JSONNode.\u206B‭⁬⁪⁪‏‪‍‎⁪⁮‭‍‍‭⁭⁪‎‭⁫‫⁫‮‬⁯⁬‎⁮⁬‍‭⁪⁪⁬‭‌‍⁮⁫‪‮("JSON Parse: Quotation marks seems to be messed up.");
label_140:
      throw JSONNode.\u206B‭⁬⁪⁪‏‪‍‎⁪⁮‭‍‍‭⁭⁪‎‭⁫‫⁫‮‬⁯⁬‎⁮⁬‍‭⁪⁪⁬‭‌‍⁮⁫‪‮("JSON Parse: Too many closing brackets");
label_156:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
label_1:
      int num1 = 893160766;
      BinaryWriter aWriter;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 464442702)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            aWriter = JSONNode.\u200C‭‎⁭‭‍‎‮‪⁪⁯‍‬⁪‏⁬‬‌⁭⁫‎⁬‏⁪‍‭‌‭‌​⁫‭‏⁪⁪‭⁯‮‫⁯‮(aData);
            num1 = (int) num2 * -820726177 ^ -393047272;
            continue;
          case 3:
            num1 = (int) num2 * 1876679959 ^ -1271837800;
            continue;
          case 4:
            this.Serialize(aWriter);
            num1 = (int) num2 * -589662269 ^ -857552887;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u206B‭⁬⁪⁪‏‪‍‎⁪⁮‭‍‍‭⁭⁪‎‭⁫‫⁫‮‬⁯⁬‎⁮⁬‍‭⁪⁪⁬‭‌‍⁮⁫‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u206B‭⁬⁪⁪‏‪‍‎⁪⁮‭‍‍‭⁭⁪‎‭⁫‫⁫‮‬⁯⁬‎⁮⁬‍‭⁪⁪⁬‭‌‍⁮⁫‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u206B‭⁬⁪⁪‏‪‍‎⁪⁮‭‍‍‭⁭⁪‎‭⁫‫⁫‮‬⁯⁬‎⁮⁬‍‭⁪⁪⁬‭‌‍⁮⁫‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
      JSONNode.\u200F⁭⁫⁭‏‭⁯⁫⁭⁫⁪‏‫‌‮‍​‮‬‬‍⁫‭‬​‪‌⁬‫‭‎‏⁯‏‫⁭​‬‪‮‮(JSONNode.\u202D⁭‬‫‬⁮⁪‫‌‌‎‬‎‮‌‫⁫‍‬‮‍‮‪‬‬⁭⁮‬‌‌​‌⁮​‌⁬⁬⁯​⁫‮((FileSystemInfo) JSONNode.\u200D‎‏​‬‏‎​‎‎‌‌⁮⁪‎‪​​⁪‮‮​‫⁬‮‭‏⁮‍‭‌‪⁭⁪⁭‍⁫‍‭⁪‮(JSONNode.\u206F‭‮‌⁫‫‪‍‫⁭‌‬‎⁭⁪⁮‏‪‬‏⁫⁬‮‮‏‫⁭⁬‪‫‭‫‪‮‪‎‭​⁭⁯‮(aFileName))));
      FileStream aData = JSONNode.\u200E‏‌‎‮​​‌⁪⁪⁬⁭‪⁬⁯⁬‏⁬⁯⁮⁬⁫⁭⁮‫‬⁬‪‏⁫⁬⁭⁪‍‍‌​‍‍⁯‮(aFileName);
      try
      {
        this.SaveToStream((Stream) aData);
label_2:
        int num1 = -1490016370;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -179861912)) % 4U)
          {
            case 0:
              goto label_10;
            case 1:
              num1 = (int) num2 * -88811756 ^ -1720797580;
              continue;
            case 2:
              num1 = (int) num2 * -1104931532 ^ -1186550363;
              continue;
            case 3:
              goto label_2;
            default:
              goto label_6;
          }
        }
label_10:
        return;
label_6:;
      }
      finally
      {
        if (aData != null)
        {
label_8:
          int num3 = -596912243;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -179861912)) % 4U)
            {
              case 0:
                goto label_8;
              case 1:
                JSONNode.\u206C⁯‍‪‬‮⁪⁬‬⁬⁪‭⁬⁮‏⁫‫⁬‮‍‌‭‎‍‍‎‮‭⁮​‪‬‍⁭‏‮‏‍‫‏‮((IDisposable) aData);
                num3 = (int) num4 * -744322855 ^ -2141109317;
                continue;
              case 2:
                num3 = (int) num4 * 1111088573 ^ -1983479451;
                continue;
              default:
                goto label_13;
            }
          }
        }
label_13:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u200D⁯‎‪​⁮‫​​⁬‌⁫⁪‍‍​‌⁪​‫‪⁯‪‌⁪‫‭⁭‮⁬⁪‬‭⁭​‌​‪‍‍‮();
      string base64;
      try
      {
label_2:
        int num1 = 644899852;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1211624145)) % 5U)
          {
            case 0:
              JSONNode.\u200D‬‮⁮‏‎⁮⁪‫‭⁯‪‏⁭⁬‬‮⁮⁮‍‭⁪‫⁭⁬‌⁮‏‍⁬⁬⁮‏‭‬⁬⁮‭‎⁮‮((Stream) aData, 0L);
              num1 = (int) num2 * -1087471030 ^ -1982264110;
              continue;
            case 2:
              goto label_2;
            case 3:
              base64 = JSONNode.\u206B‮‫⁬‌‭​‭‬‭⁬‎‎⁪​‬‪⁭⁮⁮‫‬‭​‫⁭‎⁫‫⁬⁭‮⁭⁯⁪​‪⁬⁪⁬‮(JSONNode.\u206C‍⁮⁫‬‫‬‌‮‬‮‍⁫‫‬​‏⁫⁮‪​‎⁭‮⁯⁭‌‫⁫‍‬⁬‪‬⁮‏⁭⁮‌⁬‮(aData));
              num1 = (int) num2 * -1808396362 ^ -1923542106;
              continue;
            case 4:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * -983568958 ^ -171470749;
              continue;
            default:
              goto label_13;
          }
        }
      }
      finally
      {
        if (aData != null)
        {
label_8:
          int num3 = 265136972;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 1211624145)) % 4U)
            {
              case 0:
                num3 = (int) num4 * -37267097 ^ 2082780495;
                continue;
              case 1:
                JSONNode.\u206C⁯‍‪‬‮⁪⁬‬⁬⁪‭⁬⁮‏⁫‫⁬‮‍‌‭‎‍‍‎‮‭⁮​‪‬‍⁭‏‮‏‍‫‏‮((IDisposable) aData);
                num3 = (int) num4 * -1514747496 ^ 368685469;
                continue;
              case 3:
                goto label_8;
              default:
                goto label_12;
            }
          }
        }
label_12:;
      }
label_13:
      return base64;
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
label_1:
      int num1 = 509421520;
      JSONArray jsonArray;
      int num2;
      JSONBinaryTag jsonBinaryTag1;
      JSONBinaryTag jsonBinaryTag2;
      JSONClass jsonClass;
      string aKey;
      JSONNode aItem;
      int num3;
      int num4;
      bool flag;
      JSONBinaryTag jsonBinaryTag3;
      int num5;
      JSONNode jsonNode;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ 1373546924)) % 39U)
        {
          case 0:
            jsonClass.Add(aKey, aItem);
            num1 = (int) num6 * -2050449728 ^ -1246966616;
            continue;
          case 1:
            num1 = (int) num6 * 1853522047 ^ 1678848140;
            continue;
          case 2:
            jsonBinaryTag1 = (JSONBinaryTag) JSONNode.\u206B‎⁫⁭⁫‪‏⁭⁫‮⁮⁫‫‏‍‭⁪‍‏‌‪‬‌‮‌​⁯⁪​‎​⁪⁬‫⁯‪⁭‭⁮‏‮(aReader);
            num1 = (int) num6 * 854415197 ^ -1818687451;
            continue;
          case 3:
            int num7;
            num1 = num7 = num2 < num3 ? 1342933088 : (num7 = 756524676);
            continue;
          case 4:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * 1328172263 ^ 900757751;
            continue;
          case 5:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * -1977276001 ^ 1598217533;
            continue;
          case 6:
            switch (jsonBinaryTag3)
            {
              case JSONBinaryTag.Array:
                goto label_8;
              case JSONBinaryTag.Class:
                goto label_18;
              case JSONBinaryTag.Value:
                goto label_17;
              case JSONBinaryTag.IntValue:
                goto label_14;
              case JSONBinaryTag.DoubleValue:
                goto label_34;
              case JSONBinaryTag.BoolValue:
                goto label_28;
              case JSONBinaryTag.FloatValue:
                goto label_3;
              default:
                num1 = (int) num6 * 1376751576 ^ -805341041;
                continue;
            }
          case 7:
            num1 = (int) num6 * -858339238 ^ -1729296307;
            continue;
          case 8:
label_34:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206E⁬‍‌‌‪‮‍‬‎​‎‌⁫⁫⁯⁪‎‬⁪⁭‭⁫‎⁯‭​⁫‮⁭‭⁫⁬​‍⁬‮⁫‎‍‮(aReader));
            num1 = 710348005;
            continue;
          case 9:
            goto label_1;
          case 10:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            num1 = 1008051524;
            continue;
          case 11:
label_14:
            num1 = 914659721;
            continue;
          case 13:
            num1 = (int) num6 * 1719969374 ^ 1367792555;
            continue;
          case 14:
            jsonBinaryTag2 = jsonBinaryTag1;
            num1 = (int) num6 * -1582100224 ^ -70403293;
            continue;
          case 15:
            num1 = (int) num6 * -2142627451 ^ 1193469055;
            continue;
          case 16:
label_8:
            num3 = JSONNode.\u206B⁬‌‍⁫‎⁪‪‌⁭‬‍​⁪⁮⁭⁫‭⁫‌‏⁭⁭‎‫‏‎‌⁪‭‎‌‪‬‪‬⁬⁫‌⁯‮(aReader);
            num1 = 1017777148;
            continue;
          case 17:
            goto label_12;
          case 18:
label_28:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200F‌‍⁬‫​‬‎‬⁬‪‪⁫‏‮‌⁭⁪‫‎‎‎‏‭⁯‮⁪​⁫‌⁬‌‌‎‌⁯​⁯⁮⁭‮(aReader));
            num1 = 746350267;
            continue;
          case 19:
label_3:
            num1 = 1893526224;
            continue;
          case 20:
            int num8 = flag ? 599591668 : (num8 = 1124210565);
            num1 = num8 ^ (int) num6 * -801135808;
            continue;
          case 21:
label_17:
            num1 = 2009123670;
            continue;
          case 22:
            ++num4;
            num1 = (int) num6 * 1815689536 ^ 1425738234;
            continue;
          case 23:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206B⁬‌‍⁫‎⁪‪‌⁭‬‍​⁪⁮⁭⁫‭⁫‌‏⁭⁭‎‫‏‎‌⁪‭‎‌‪‬‪‬⁬⁫‌⁯‮(aReader));
            num1 = (int) num6 * -1654404997 ^ 1192625442;
            continue;
          case 24:
            num1 = (int) num6 * -1544804067 ^ -2115064664;
            continue;
          case 25:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206D‪​‬‍‎‪​‭⁯‏‎⁮⁪‏⁯‎⁯‫‫⁮⁬‍‪‎⁪⁭‎⁬‎‫⁪⁫‏⁪‬⁫⁪‬⁫‮(aReader));
            num1 = (int) num6 * 2126780707 ^ 517000529;
            continue;
          case 26:
            flag = num4 < num5;
            num1 = 417798386;
            continue;
          case 27:
            jsonClass = new JSONClass();
            num4 = 0;
            num1 = (int) num6 * -1873014989 ^ 963397861;
            continue;
          case 28:
            num1 = 804353717;
            continue;
          case 29:
            num1 = (int) num6 * 2096672217 ^ 28439723;
            continue;
          case 30:
            num1 = (int) num6 * -717714315 ^ 244679596;
            continue;
          case 31:
            ++num2;
            num1 = (int) num6 * -2058101165 ^ 1993107237;
            continue;
          case 32:
            jsonArray = new JSONArray();
            num2 = 0;
            num1 = (int) num6 * -680364278 ^ -988415498;
            continue;
          case 33:
            num1 = (int) num6 * -82824950 ^ -187188257;
            continue;
          case 34:
            jsonBinaryTag3 = jsonBinaryTag2;
            num1 = (int) num6 * 548837165 ^ 1208754630;
            continue;
          case 35:
label_18:
            num5 = JSONNode.\u206B⁬‌‍⁫‎⁪‪‌⁭‬‍​⁪⁮⁭⁫‭⁫‌‏⁭⁭‎‫‏‎‌⁪‭‎‌‪‬‪‬⁬⁫‌⁯‮(aReader);
            num1 = 1469623100;
            continue;
          case 36:
            num1 = (int) num6 * -1574702239 ^ 2085928567;
            continue;
          case 37:
            aKey = JSONNode.\u200D‌‬⁫⁭‍⁬⁮⁮​‍⁯⁭⁫‎‏‫‪⁯⁫⁭‍⁯‍‏‏‮⁬‮‎​‎⁭​⁫‬‪‍‬‎‮(aReader);
            aItem = JSONNode.Deserialize(aReader);
            num1 = (int) num6 * 483860402 ^ -821338292;
            continue;
          case 38:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200D‌‬⁫⁭‍⁬⁮⁮​‍⁯⁭⁫‎‏‫‪⁯⁫⁭‍⁯‍‏‏‮⁬‮‎​‎⁭​⁫‬‪‍‬‎‮(aReader));
            num1 = (int) num6 * -1979901029 ^ -1702085117;
            continue;
          default:
            goto label_41;
        }
      }
label_12:
      throw JSONNode.\u206B‭⁬⁪⁪‏‪‍‎⁪⁮‭‍‍‭⁭⁪‎‭⁫‫⁫‮‬⁯⁬‎⁮⁬‍‭⁪⁪⁬‭‌‍⁮⁫‪‮(JSONNode.\u206E⁯‪⁬‭‭‬‍‮‪⁪‏⁮⁫⁮‬‭⁯‮⁭⁪‏‍‫‮‫‫‍⁮‮‌⁪‪⁫‫⁫‎⁭‬‎‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag1.ToString()));
label_41:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u206B‭⁬⁪⁪‏‪‍‎⁪⁮‭‍‍‭⁭⁪‎‭⁫‫⁫‮‬⁯⁬‎⁮⁬‍‭⁪⁪⁬‭‌‍⁮⁫‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u206B‭⁬⁪⁪‏‪‍‎⁪⁮‭‍‍‭⁭⁪‎‭⁫‫⁫‮‬⁯⁬‎⁮⁬‍‭⁪⁪⁬‭‌‍⁮⁫‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u206B‭⁬⁪⁪‏‪‍‎⁪⁮‭‍‍‭⁭⁪‎‭⁫‫⁫‮‬⁯⁬‎⁮⁬‍‭⁪⁪⁬‭‌‍⁮⁫‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u202A‫⁫‫⁪​⁫⁭‫‪‭‎‬⁪‬‍⁭‏‏​‭⁪‬‪⁪⁪⁯⁭⁪⁫⁫⁪‏⁭‌‪‎⁬⁫‮‮(aData);
      try
      {
        return JSONNode.Deserialize(aReader);
      }
      finally
      {
        if (aReader != null)
        {
label_3:
          int num1 = 1838490427;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ 135386474)) % 4U)
            {
              case 1:
                JSONNode.\u206C⁯‍‪‬‮⁪⁬‬⁬⁪‭⁬⁮‏⁫‫⁬‮‍‌‭‎‍‍‎‮‭⁮​‪‬‍⁭‏‮‏‍‫‏‮((IDisposable) aReader);
                num1 = (int) num2 * 418547479 ^ -1666768321;
                continue;
              case 2:
                num1 = (int) num2 * 202499518 ^ -1757769146;
                continue;
              case 3:
                goto label_3;
              default:
                goto label_7;
            }
          }
        }
label_7:;
      }
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u200E‫‬⁭‏‏​‎⁪⁯‍‮‪‫‏‫‬‮⁪⁯⁮⁭‍‏‍⁫⁪⁭‬‏⁭‬‌‍​⁪‫⁭​⁭‮(aFileName);
      try
      {
        return JSONNode.LoadFromStream((Stream) aData);
      }
      finally
      {
        if (aData != null)
        {
label_3:
          int num1 = 748923348;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ 183416437)) % 3U)
            {
              case 1:
                JSONNode.\u206C⁯‍‪‬‮⁪⁬‬⁬⁪‭⁬⁮‏⁫‫⁬‮‍‌‭‎‍‍‎‮‭⁮​‪‬‍⁭‏‮‏‍‫‏‮((IDisposable) aData);
                num1 = (int) num2 * -209019679 ^ -1759252206;
                continue;
              case 2:
                goto label_3;
              default:
                goto label_6;
            }
          }
        }
label_6:;
      }
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
label_1:
      int num1 = -398596485;
      MemoryStream aData;
      JSONNode jsonNode;
      byte[] numArray;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -256183673)) % 6U)
        {
          case 0:
            goto label_1;
          case 1:
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * 1324995511 ^ -2100594600;
            continue;
          case 2:
            numArray = JSONNode.\u202D⁫‌​⁫⁫⁮‌⁭‬‭‏⁬‪⁪⁭‏‮⁮​​⁮⁯‎⁫​⁫⁪‏‎‌‍‏‮‍⁮​⁫⁭⁯‮(aBase64);
            num1 = (int) num2 * 1907419674 ^ 972677542;
            continue;
          case 4:
            num1 = (int) num2 * -1470405494 ^ -1275607140;
            continue;
          case 5:
            aData = JSONNode.\u206E⁭⁮‏⁪‪‌‬⁪‫‬‮‭‪⁮‮‏​‭⁭⁯⁭‍‬‏‪‎⁯⁬‌‎‏⁬‎‭⁯‍‪⁬‎‮(numArray);
            JSONNode.\u200D‬‮⁮‏‎⁮⁪‫‭⁯‪‏⁭⁬‬‮⁮⁮‍‭⁪‫⁭⁬‌⁮‏‍⁬⁬⁮‏‭‬⁬⁮‭‎⁮‮((Stream) aData, 0L);
            num1 = (int) num2 * 1210642672 ^ 1801203890;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      return jsonNode;
    }

    public JSONNode()
    {
label_1:
      int num1 = -1168720493;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1707978264)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * -1810679953 ^ -88277598;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static CultureInfo \u202E‍‌⁫⁫⁬⁪⁮⁫‫⁭⁫​⁯⁫‍‭‌⁪⁮​⁫‎‌‎⁬⁬​⁯‏‪‪‬⁯‭‬‫⁭⁪⁬‮() => CultureInfo.InvariantCulture;

    static bool \u200B‭⁮‪‎‬⁫‌⁭‭⁬⁫‬​⁫‎‏‏‎⁯⁮‍⁫‏⁭‫​⁮⁪‌‌⁮‮⁪‎⁫‪⁪⁬‭‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u200E‭‬​‎‍‮⁬‎⁯‎‍‏‮‬‮⁮⁫⁪⁪‪‌⁫‪‏‮‏⁫‍‫⁭⁬⁫⁪‮‏⁬⁫‬‬‮() => base.GetHashCode();

    static char \u206A⁮⁯‏‮⁪‬‏⁮⁯‪‍‭‎‏⁪‍⁬⁪⁭⁫‎⁭‏⁭‍‍‌⁬‍⁮⁬‮‮⁯‮⁪⁭⁫⁪‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u206E⁯‪⁬‭‭‬‍‮‪⁪‏⁮⁫⁮‬‭⁯‮⁭⁪‏‍‫‮‫‫‍⁮‮‌⁪‪⁫‫⁫‎⁭‬‎‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u206D⁭‪⁪‮⁯⁯⁪‮‮‏⁫‌‭⁯⁮⁫⁪⁫​‎⁬​⁯‭‍‬‏⁫‬⁫⁮⁫⁮⁬⁪‬‬‏‮([In] string obj0) => obj0.Length;

    static string \u202D⁫‏⁫‮‌⁪⁯‌‌‫‌‭‍‭‎​‬‫⁫‏⁫⁭‫⁯‭‍​⁪‌⁫⁬‪‎⁪⁮⁬⁫‪⁮‮([In] string obj0) => obj0.Trim();

    static bool \u206C⁫‍⁪​⁫⁭⁬‎‫‫⁭‮‬⁪‍‌‏⁯⁬‏‫⁪‍‫⁮‬⁪​‭⁬‫⁪⁭‎‫⁮⁯‮⁭‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u206B‭⁬⁪⁪‏‪‍‎⁪⁮‭‍‍‭⁭⁪‎‭⁫‫⁫‮‬⁯⁬‎⁮⁬‍‭⁪⁪⁬‭‌‍⁮⁫‪‮([In] string obj0) => new Exception(obj0);

    static string \u200F⁯‏‪⁫​⁬⁬‮⁪‏‌‫‍⁫‏‮⁬​‬‍‫‫‎‪⁭‫⁮⁭‌​‫‫‪‪‌⁭‌⁭‎‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u200C‭‎⁭‭‍‎‮‪⁪⁯‍‬⁪‏⁬‬‌⁭⁫‎⁬‏⁪‍‭‌‭‌​⁫‭‏⁪⁪‭⁯‮‫⁯‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u206F‭‮‌⁫‫‪‍‫⁭‌‬‎⁭⁪⁮‏‪‬‏⁫⁬‮‮‏‫⁭⁬‪‫‭‫‪‮‪‎‭​⁭⁯‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u200D‎‏​‬‏‎​‎‎‌‌⁮⁪‎‪​​⁪‮‮​‫⁬‮‭‏⁮‍‭‌‪⁭⁪⁭‍⁫‍‭⁪‮([In] FileInfo obj0) => obj0.Directory;

    static string \u202D⁭‬‫‬⁮⁪‫‌‌‎‬‎‮‌‫⁫‍‬‮‍‮‪‬‬⁭⁮‬‌‌​‌⁮​‌⁬⁬⁯​⁫‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u200F⁭⁫⁭‏‭⁯⁫⁭⁫⁪‏‫‌‮‍​‮‬‬‍⁫‭‬​‪‌⁬‫‭‎‏⁯‏‫⁭​‬‪‮‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u200E‏‌‎‮​​‌⁪⁪⁬⁭‪⁬⁯⁬‏⁬⁯⁮⁬⁫⁭⁮‫‬⁬‪‏⁫⁬⁭⁪‍‍‌​‍‍⁯‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u206C⁯‍‪‬‮⁪⁬‬⁬⁪‭⁬⁮‏⁫‫⁬‮‍‌‭‎‍‍‎‮‭⁮​‪‬‍⁭‏‮‏‍‫‏‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u200D⁯‎‪​⁮‫​​⁬‌⁫⁪‍‍​‌⁪​‫‪⁯‪‌⁪‫‭⁭‮⁬⁪‬‭⁭​‌​‪‍‍‮() => new MemoryStream();

    static void \u200D‬‮⁮‏‎⁮⁪‫‭⁯‪‏⁭⁬‬‮⁮⁮‍‭⁪‫⁭⁬‌⁮‏‍⁬⁬⁮‏‭‬⁬⁮‭‎⁮‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u206C‍⁮⁫‬‫‬‌‮‬‮‍⁫‫‬​‏⁫⁮‪​‎⁭‮⁯⁭‌‫⁫‍‬⁬‪‬⁮‏⁭⁮‌⁬‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u206B‮‫⁬‌‭​‭‬‭⁬‎‎⁪​‬‪⁭⁮⁮‫‬‭​‫⁭‎⁫‫⁬⁭‮⁭⁯⁪​‪⁬⁪⁬‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u206B‎⁫⁭⁫‪‏⁭⁫‮⁮⁫‫‏‍‭⁪‍‏‌‪‬‌‮‌​⁯⁪​‎​⁪⁬‫⁯‪⁭‭⁮‏‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u206B⁬‌‍⁫‎⁪‪‌⁭‬‍​⁪⁮⁭⁫‭⁫‌‏⁭⁭‎‫‏‎‌⁪‭‎‌‪‬‪‬⁬⁫‌⁯‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u200D‌‬⁫⁭‍⁬⁮⁮​‍⁯⁭⁫‎‏‫‪⁯⁫⁭‍⁯‍‏‏‮⁬‮‎​‎⁭​⁫‬‪‍‬‎‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u206E⁬‍‌‌‪‮‍‬‎​‎‌⁫⁫⁯⁪‎‬⁪⁭‭⁫‎⁯‭​⁫‮⁭‭⁫⁬​‍⁬‮⁫‎‍‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u200F‌‍⁬‫​‬‎‬⁬‪‪⁫‏‮‌⁭⁪‫‎‎‎‏‭⁯‮⁪​⁫‌⁬‌‌‎‌⁯​⁯⁮⁭‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u206D‪​‬‍‎‪​‭⁯‏‎⁮⁪‏⁯‎⁯‫‫⁮⁬‍‪‎⁪⁭‎⁬‎‫⁪⁫‏⁪‬⁫⁪‬⁫‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u202A‫⁫‫⁪​⁫⁭‫‪‭‎‬⁪‬‍⁭‏‏​‭⁪‬‪⁪⁪⁯⁭⁪⁫⁫⁪‏⁭‌‪‎⁬⁫‮‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u200E‫‬⁭‏‏​‎⁪⁯‍‮‪‫‏‫‬‮⁪⁯⁮⁭‍‏‍⁫⁪⁭‬‏⁭‬‌‍​⁪‫⁭​⁭‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u202D⁫‌​⁫⁫⁮‌⁭‬‭‏⁬‪⁪⁭‏‮⁮​​⁮⁯‎⁫​⁫⁪‏‎‌‍‏‮‍⁮​⁫⁭⁯‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u206E⁭⁮‏⁪‪‌‬⁪‫‬‮‭‪⁮‮‏​‭⁭⁯⁭‍‬‏‪‎⁯⁬‌‎‏⁬‎‭⁯‍‪⁬‎‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
