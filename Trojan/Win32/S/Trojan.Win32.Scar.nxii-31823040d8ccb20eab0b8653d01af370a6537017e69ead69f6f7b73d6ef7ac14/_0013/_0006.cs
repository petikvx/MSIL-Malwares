// Decompiled with JetBrains decompiler
// Type: .
// Assembly: BitGenerator, Version=37.0.2.5583, Culture=neutral, PublicKeyToken=70e4c26ef2031892
// MVID: D3922F89-E00A-4D10-8BC9-9309D5539F14
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\Trojan.Win32.Scar.nxii-31823040d8ccb20eab0b8653d01af370a6537017e69ead69f6f7b73d6ef7ac14.exe

using \u0004;
using \u0013;
using \u0014;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using SmartAssembly.Delegates;
using SmartAssembly.HouseOfCards;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace \u0013
{
  internal sealed class \u0006 : 
    \u0011,
    IEnumerable,
    IEnumerable<\u0015.\u0013>,
    IList<\u0015.\u0013>,
    ICollection<\u0015.\u0013>
  {
    private readonly List<\u0015.\u0013> \u0001 = new List<\u0015.\u0013>();
    [NonSerialized]
    internal static GetString \u0002;

    [SpecialName]
    protected override IList<\u0015.\u0013> \u0001() => (IList<\u0015.\u0013>) this.\u0001;

    [SpecialName]
    public override JTokenType \u0001() => JTokenType.Array;

    public \u0006()
    {
    }

    public \u0006([In] \u0006 obj0)
      : base((\u0011) obj0)
    {
    }

    public \u0006([In] object obj0) => this.Add(obj0);

    internal override \u0015.\u0013 \u0001() => (\u0015.\u0013) new \u0006(this);

    public override void \u0001([In] JsonWriter obj0, [In] \u0005.\u0005[] obj1)
    {
      if (false)
        return;
      obj0.\u0003();
      if (false)
        return;
      if (true)
        goto label_12;
label_7:
      int index;
      while (true)
      {
        int num1 = index;
        int num2 = this.\u0001.Count;
        do
        {
          if (true)
            goto label_9;
label_5:
          continue;
label_9:
          if (num1 < num2)
          {
            this.\u0001[index].\u0001(obj0, obj1);
            if (true)
            {
              int num3 = index;
              num2 = 1;
              num1 = num3;
              goto label_5;
            }
            else
              goto label_7;
          }
          else
            goto label_10;
        }
        while (num2 == 0);
        index = num1 + num2;
      }
label_10:
      obj0.\u000F();
      return;
label_12:
      index = 0;
      goto label_7;
    }

    public override \u0015.\u0013 this[[In] object obj0]
    {
      get
      {
        \u0006.\u0001(obj0, \u0006.\u0002(6903));
        return obj0 is int num ? this.\u0001(num) : throw new ArgumentException(\u0002.\u0002.\u0001(\u0006.\u0002(26821), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0006.\u0001(obj0)));
      }
      [param: In] set
      {
        object obj = obj0;
        string str = \u0006.\u0002(6903);
        if (true)
          \u0006.\u0001(obj, str);
        if (!(obj0 is int num))
          throw new ArgumentException(\u0002.\u0002.\u0001(\u0006.\u0002(26930), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0006.\u0001(obj0)));
        this.\u0001(num, value);
      }
    }

    public \u0015.\u0013 this[[In] int obj0]
    {
      get => this.\u0001(obj0);
      [param: In] set => this.\u0001(obj0, value);
    }

    public int \u0003([In] \u0015.\u0013 obj0) => this.\u0001(obj0);

    public void \u0005([In] int obj0, [In] \u0015.\u0013 obj1) => this.\u0001(obj0, obj1, false);

    public void \u0004([In] int obj0) => this.\u0001(obj0);

    public IEnumerator<\u0015.\u0013> \u0001() => ((\u0015.\u0013) this).\u0001().\u0001();

    public void Add([In] \u0015.\u0013 obj0) => this.Add((object) obj0);

    public void \u0005() => base.\u0001();

    public bool \u0005([In] \u0015.\u0013 obj0) => this.\u0002(obj0);

    public void \u0002([In] \u0015.\u0013[] obj0, [In] int obj1) => this.\u0001((Array) obj0, obj1);

    [SpecialName]
    public bool \u0013() => false;

    public bool \u0006([In] \u0015.\u0013 obj0) => this.\u0001(obj0);

    static \u0006() => Strings.CreateGetStringDelegate(typeof (\u0006));
  }
}
