// Decompiled with JetBrains decompiler
// Type: LFSTweak.Form1
// Assembly: LFSTweak, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: C77C2A36-D42F-41E0-A8F4-0FAB7DAB4ECE
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00004-msil\Virus.Win32.Sality.sil-52c1c08a641f4eea7c4c4adfe074b30e92d254f958aa67f4b0ded38b7db3a24d.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Globalization;
using System.IO;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace LFSTweak
{
  [DesignerGenerated]
  public class Form1 : Form
  {
    private static List<WeakReference> __ENCList = new List<WeakReference>();
    private IContainer components;
    [AccessedThroughProperty("enginecc_value")]
    private TextBox _enginecc_value;
    [AccessedThroughProperty("Label1")]
    private Label _Label1;
    [AccessedThroughProperty("currentCar")]
    private Label _currentCar;
    [AccessedThroughProperty("Label2")]
    private Label _Label2;
    [AccessedThroughProperty("Label3")]
    private Label _Label3;
    [AccessedThroughProperty("enginecylinders_value")]
    private TextBox _enginecylinders_value;
    [AccessedThroughProperty("Label4")]
    private Label _Label4;
    [AccessedThroughProperty("enginetype_value")]
    private ComboBox _enginetype_value;
    [AccessedThroughProperty("Label5")]
    private Label _Label5;
    [AccessedThroughProperty("engineturbo_value")]
    private ComboBox _engineturbo_value;
    [AccessedThroughProperty("Label6")]
    private Label _Label6;
    [AccessedThroughProperty("engineturbopressure_value")]
    private TextBox _engineturbopressure_value;
    [AccessedThroughProperty("engineturbolag_value")]
    private TextBox _engineturbolag_value;
    [AccessedThroughProperty("Label7")]
    private Label _Label7;
    [AccessedThroughProperty("enginetorque_value")]
    private TextBox _enginetorque_value;
    [AccessedThroughProperty("torque")]
    private Label _torque;
    [AccessedThroughProperty("applyButton")]
    private Button _applyButton;
    [AccessedThroughProperty("Label8")]
    private Label _Label8;
    [AccessedThroughProperty("transmissiontype_value")]
    private ComboBox _transmissiontype_value;
    [AccessedThroughProperty("Button1")]
    private Button _Button1;
    [AccessedThroughProperty("engineredline_value")]
    private TextBox _engineredline_value;
    [AccessedThroughProperty("Label9")]
    private Label _Label9;
    [AccessedThroughProperty("Label10")]
    private Label _Label10;
    [AccessedThroughProperty("Label11")]
    private Label _Label11;
    [AccessedThroughProperty("fueltank_value")]
    private TextBox _fueltank_value;
    [AccessedThroughProperty("enginepower_value")]
    private TextBox _enginepower_value;
    [AccessedThroughProperty("Label12")]
    private Label _Label12;
    [AccessedThroughProperty("GroupBox1")]
    private GroupBox _GroupBox1;
    [AccessedThroughProperty("GroupBox2")]
    private GroupBox _GroupBox2;
    [AccessedThroughProperty("mec_ccmax")]
    private TextBox _mec_ccmax;
    [AccessedThroughProperty("mec_ccmin")]
    private TextBox _mec_ccmin;
    [AccessedThroughProperty("Label13")]
    private Label _Label13;
    [AccessedThroughProperty("mec_cylmax")]
    private TextBox _mec_cylmax;
    [AccessedThroughProperty("mec_cylmin")]
    private TextBox _mec_cylmin;
    [AccessedThroughProperty("Label14")]
    private Label _Label14;
    [AccessedThroughProperty("Label17")]
    private Label _Label17;
    [AccessedThroughProperty("mec_gearsmax")]
    private TextBox _mec_gearsmax;
    [AccessedThroughProperty("mec_gearsmin")]
    private TextBox _mec_gearsmin;
    [AccessedThroughProperty("Label16")]
    private Label _Label16;
    [AccessedThroughProperty("mec_torque")]
    private TextBox _mec_torque;
    [AccessedThroughProperty("Label15")]
    private Label _Label15;
    [AccessedThroughProperty("mec_drive")]
    private ComboBox _mec_drive;
    [AccessedThroughProperty("Label20")]
    private Label _Label20;
    [AccessedThroughProperty("mec_weight")]
    private TextBox _mec_weight;
    [AccessedThroughProperty("Label19")]
    private Label _Label19;
    [AccessedThroughProperty("mec_idle")]
    private TextBox _mec_idle;
    [AccessedThroughProperty("Label18")]
    private Label _Label18;
    [AccessedThroughProperty("mec_power")]
    private TextBox _mec_power;
    [AccessedThroughProperty("cartype_value")]
    private TextBox _cartype_value;
    [AccessedThroughProperty("Label21")]
    private Label _Label21;
    [AccessedThroughProperty("Label22")]
    private Label _Label22;
    [AccessedThroughProperty("tyre_rsize")]
    private TextBox _tyre_rsize;
    [AccessedThroughProperty("tyre_rheight")]
    private TextBox _tyre_rheight;
    [AccessedThroughProperty("tyre_rwidth")]
    private TextBox _tyre_rwidth;
    [AccessedThroughProperty("Label24")]
    private Label _Label24;
    [AccessedThroughProperty("tyre_fsize")]
    private TextBox _tyre_fsize;
    [AccessedThroughProperty("tyre_fheight")]
    private TextBox _tyre_fheight;
    [AccessedThroughProperty("tyre_fwidthrim")]
    private TextBox _tyre_fwidthrim;
    [AccessedThroughProperty("Label23")]
    private Label _Label23;
    [AccessedThroughProperty("SaveFileDialog1")]
    private SaveFileDialog _SaveFileDialog1;
    [AccessedThroughProperty("MenuStrip1")]
    private MenuStrip _MenuStrip1;
    [AccessedThroughProperty("ToolStripMenuItem1")]
    private ToolStripMenuItem _ToolStripMenuItem1;
    [AccessedThroughProperty("FileToolStripMenuItem")]
    private ToolStripMenuItem _FileToolStripMenuItem;
    [AccessedThroughProperty("SaveToolStripMenuItem")]
    private ToolStripMenuItem _SaveToolStripMenuItem;
    [AccessedThroughProperty("OpenFileDialog1")]
    private OpenFileDialog _OpenFileDialog1;
    [AccessedThroughProperty("tyre_rwidthrim")]
    private TextBox _tyre_rwidthrim;
    [AccessedThroughProperty("tyre_fwidth")]
    private TextBox _tyre_fwidth;
    [AccessedThroughProperty("massheight_value")]
    private TextBox _massheight_value;
    [AccessedThroughProperty("Label26")]
    private Label _Label26;
    [AccessedThroughProperty("enginepos_value")]
    private TextBox _enginepos_value;
    [AccessedThroughProperty("Label25")]
    private Label _Label25;
    [AccessedThroughProperty("Label27")]
    private Label _Label27;
    [AccessedThroughProperty("tyrefronttrack_value")]
    private TextBox _tyrefronttrack_value;
    [AccessedThroughProperty("tyrefrontangle_value")]
    private TextBox _tyrefrontangle_value;
    [AccessedThroughProperty("tyrereartrack_value")]
    private TextBox _tyrereartrack_value;
    [AccessedThroughProperty("tyrerearangle_value")]
    private TextBox _tyrerearangle_value;
    [AccessedThroughProperty("Label28")]
    private Label _Label28;
    [AccessedThroughProperty("tyrefrontypos_value")]
    private TextBox _tyrefrontypos_value;
    [AccessedThroughProperty("tyrerearypos_value")]
    private TextBox _tyrerearypos_value;
    [AccessedThroughProperty("Label29")]
    private Label _Label29;
    private string currentCarValue;
    private float currentenginecc;
    private float currentengineredline;
    private byte currentenginecylinders;
    private int currentenginetype;
    private byte currentengineturbo;
    private byte currenttransmissiontype;
    private byte currentcartype;
    private float currentengineturbopressure;
    private float currentengineturbolag;
    private double currentenginetorque;
    private float currentfueltank;
    private float currentenginepower;
    private float currenttyrefwidth;
    private float currenttyrefheight;
    private float currenttyrefsize;
    private float currenttyrefwidthrim;
    private float currenttyrerwidth;
    private float currenttyrerheight;
    private float currenttyrersize;
    private float currenttyrerwidthrim;
    private float enginepos;
    private float massheightpos;
    private float tyrefrontypos;
    private float tyrefrontangle;
    private float tyrefronttrack;
    private float tyrerearypos;
    private float tyrerearangle;
    private float tyrereartrack;
    private byte mec_currentcylmin;
    private byte mec_currentcylmax;
    private byte mec_currentdrive;
    private byte mec_currentgearsmin;
    private byte mec_currentgearsmax;
    private float mec_currentccmin;
    private float mec_currentccmax;
    private float mec_currenttorque;
    private float mec_currentpower;
    private float mec_currentidle;
    private float mec_currentweight;

    [DebuggerNonUserCode]
    static Form1()
    {
    }

    [DebuggerNonUserCode]
    public Form1()
    {
      this.Load += new EventHandler(this.Form1_Load);
      lock (Form1.__ENCList)
        Form1.__ENCList.Add(new WeakReference((object) this));
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (Form1));
      this.enginecc_value = new TextBox();
      this.Label1 = new Label();
      this.currentCar = new Label();
      this.Label2 = new Label();
      this.Label3 = new Label();
      this.enginecylinders_value = new TextBox();
      this.Label4 = new Label();
      this.enginetype_value = new ComboBox();
      this.Label5 = new Label();
      this.engineturbo_value = new ComboBox();
      this.Label6 = new Label();
      this.engineturbopressure_value = new TextBox();
      this.engineturbolag_value = new TextBox();
      this.Label7 = new Label();
      this.enginetorque_value = new TextBox();
      this.torque = new Label();
      this.applyButton = new Button();
      this.Label8 = new Label();
      this.transmissiontype_value = new ComboBox();
      this.Button1 = new Button();
      this.engineredline_value = new TextBox();
      this.Label9 = new Label();
      this.Label10 = new Label();
      this.Label11 = new Label();
      this.fueltank_value = new TextBox();
      this.enginepower_value = new TextBox();
      this.Label12 = new Label();
      this.GroupBox1 = new GroupBox();
      this.Label29 = new Label();
      this.massheight_value = new TextBox();
      this.Label26 = new Label();
      this.enginepos_value = new TextBox();
      this.Label25 = new Label();
      this.tyre_fwidth = new TextBox();
      this.tyre_rwidthrim = new TextBox();
      this.tyre_rsize = new TextBox();
      this.tyre_rheight = new TextBox();
      this.tyre_rwidth = new TextBox();
      this.Label24 = new Label();
      this.tyre_fsize = new TextBox();
      this.tyre_fheight = new TextBox();
      this.tyre_fwidthrim = new TextBox();
      this.Label23 = new Label();
      this.cartype_value = new TextBox();
      this.Label21 = new Label();
      this.GroupBox2 = new GroupBox();
      this.Label22 = new Label();
      this.mec_drive = new ComboBox();
      this.Label20 = new Label();
      this.mec_weight = new TextBox();
      this.Label19 = new Label();
      this.mec_idle = new TextBox();
      this.Label18 = new Label();
      this.mec_power = new TextBox();
      this.Label17 = new Label();
      this.mec_gearsmax = new TextBox();
      this.mec_gearsmin = new TextBox();
      this.Label16 = new Label();
      this.mec_torque = new TextBox();
      this.Label15 = new Label();
      this.mec_cylmax = new TextBox();
      this.mec_cylmin = new TextBox();
      this.Label14 = new Label();
      this.mec_ccmax = new TextBox();
      this.mec_ccmin = new TextBox();
      this.Label13 = new Label();
      this.SaveFileDialog1 = new SaveFileDialog();
      this.MenuStrip1 = new MenuStrip();
      this.ToolStripMenuItem1 = new ToolStripMenuItem();
      this.FileToolStripMenuItem = new ToolStripMenuItem();
      this.SaveToolStripMenuItem = new ToolStripMenuItem();
      this.OpenFileDialog1 = new OpenFileDialog();
      this.Label27 = new Label();
      this.tyrefronttrack_value = new TextBox();
      this.tyrefrontangle_value = new TextBox();
      this.tyrereartrack_value = new TextBox();
      this.tyrerearangle_value = new TextBox();
      this.Label28 = new Label();
      this.tyrefrontypos_value = new TextBox();
      this.tyrerearypos_value = new TextBox();
      this.GroupBox1.SuspendLayout();
      this.GroupBox2.SuspendLayout();
      this.MenuStrip1.SuspendLayout();
      this.SuspendLayout();
      TextBox engineccValue1 = this.enginecc_value;
      Point point1 = new Point(157, 95);
      Point point2 = point1;
      engineccValue1.Location = point2;
      this.enginecc_value.Name = "enginecc_value";
      TextBox engineccValue2 = this.enginecc_value;
      Size size1 = new Size(95, 20);
      Size size2 = size1;
      engineccValue2.Size = size2;
      this.enginecc_value.TabIndex = 0;
      this.Label1.AutoSize = true;
      Label label1_1 = this.Label1;
      point1 = new Point(38, 64);
      Point point3 = point1;
      label1_1.Location = point3;
      this.Label1.Name = "Label1";
      Label label1_2 = this.Label1;
      size1 = new Size(60, 13);
      Size size3 = size1;
      label1_2.Size = size3;
      this.Label1.TabIndex = 1;
      this.Label1.Text = "Current Car";
      this.currentCar.AutoSize = true;
      Label currentCar1 = this.currentCar;
      point1 = new Point(154, 64);
      Point point4 = point1;
      currentCar1.Location = point4;
      this.currentCar.Name = "currentCar";
      Label currentCar2 = this.currentCar;
      size1 = new Size(56, 13);
      Size size4 = size1;
      currentCar2.Size = size4;
      this.currentCar.TabIndex = 2;
      this.currentCar.Text = "currentCar";
      this.Label2.AutoSize = true;
      Label label2_1 = this.Label2;
      point1 = new Point(38, 98);
      Point point5 = point1;
      label2_1.Location = point5;
      this.Label2.Name = "Label2";
      Label label2_2 = this.Label2;
      size1 = new Size(57, 13);
      Size size5 = size1;
      label2_2.Size = size5;
      this.Label2.TabIndex = 3;
      this.Label2.Text = "Engine CC";
      this.Label3.AutoSize = true;
      Label label3_1 = this.Label3;
      point1 = new Point(38, 124);
      Point point6 = point1;
      label3_1.Location = point6;
      this.Label3.Name = "Label3";
      Label label3_2 = this.Label3;
      size1 = new Size(85, 13);
      Size size6 = size1;
      label3_2.Size = size6;
      this.Label3.TabIndex = 4;
      this.Label3.Text = "Engine Cylinders";
      TextBox enginecylindersValue1 = this.enginecylinders_value;
      point1 = new Point(157, 121);
      Point point7 = point1;
      enginecylindersValue1.Location = point7;
      this.enginecylinders_value.Name = "enginecylinders_value";
      TextBox enginecylindersValue2 = this.enginecylinders_value;
      size1 = new Size(95, 20);
      Size size7 = size1;
      enginecylindersValue2.Size = size7;
      this.enginecylinders_value.TabIndex = 5;
      this.Label4.AutoSize = true;
      Label label4_1 = this.Label4;
      point1 = new Point(38, 150);
      Point point8 = point1;
      label4_1.Location = point8;
      this.Label4.Name = "Label4";
      Label label4_2 = this.Label4;
      size1 = new Size(67, 13);
      Size size8 = size1;
      label4_2.Size = size8;
      this.Label4.TabIndex = 6;
      this.Label4.Text = "Engine Type";
      this.enginetype_value.FormattingEnabled = true;
      this.enginetype_value.Items.AddRange(new object[3]
      {
        (object) "Inline",
        (object) "Flat",
        (object) "V-Type"
      });
      ComboBox enginetypeValue1 = this.enginetype_value;
      point1 = new Point(157, 147);
      Point point9 = point1;
      enginetypeValue1.Location = point9;
      this.enginetype_value.Name = "enginetype_value";
      ComboBox enginetypeValue2 = this.enginetype_value;
      size1 = new Size(95, 21);
      Size size9 = size1;
      enginetypeValue2.Size = size9;
      this.enginetype_value.TabIndex = 7;
      this.Label5.AutoSize = true;
      Label label5_1 = this.Label5;
      point1 = new Point(38, 177);
      Point point10 = point1;
      label5_1.Location = point10;
      this.Label5.Name = "Label5";
      Label label5_2 = this.Label5;
      size1 = new Size(35, 13);
      Size size10 = size1;
      label5_2.Size = size10;
      this.Label5.TabIndex = 8;
      this.Label5.Text = "Turbo";
      this.engineturbo_value.FormattingEnabled = true;
      this.engineturbo_value.Items.AddRange(new object[2]
      {
        (object) "Off",
        (object) "On"
      });
      ComboBox engineturboValue1 = this.engineturbo_value;
      point1 = new Point(157, 174);
      Point point11 = point1;
      engineturboValue1.Location = point11;
      this.engineturbo_value.Name = "engineturbo_value";
      ComboBox engineturboValue2 = this.engineturbo_value;
      size1 = new Size(95, 21);
      Size size11 = size1;
      engineturboValue2.Size = size11;
      this.engineturbo_value.TabIndex = 9;
      this.Label6.AutoSize = true;
      Label label6_1 = this.Label6;
      point1 = new Point(38, 204);
      Point point12 = point1;
      label6_1.Location = point12;
      this.Label6.Name = "Label6";
      Label label6_2 = this.Label6;
      size1 = new Size(79, 13);
      Size size12 = size1;
      label6_2.Size = size12;
      this.Label6.TabIndex = 10;
      this.Label6.Text = "Turbo Pressure";
      TextBox engineturbopressureValue1 = this.engineturbopressure_value;
      point1 = new Point(157, 201);
      Point point13 = point1;
      engineturbopressureValue1.Location = point13;
      this.engineturbopressure_value.Name = "engineturbopressure_value";
      TextBox engineturbopressureValue2 = this.engineturbopressure_value;
      size1 = new Size(95, 20);
      Size size13 = size1;
      engineturbopressureValue2.Size = size13;
      this.engineturbopressure_value.TabIndex = 11;
      TextBox engineturbolagValue1 = this.engineturbolag_value;
      point1 = new Point(157, 227);
      Point point14 = point1;
      engineturbolagValue1.Location = point14;
      this.engineturbolag_value.Name = "engineturbolag_value";
      TextBox engineturbolagValue2 = this.engineturbolag_value;
      size1 = new Size(95, 20);
      Size size14 = size1;
      engineturbolagValue2.Size = size14;
      this.engineturbolag_value.TabIndex = 12;
      this.Label7.AutoSize = true;
      Label label7_1 = this.Label7;
      point1 = new Point(38, 230);
      Point point15 = point1;
      label7_1.Location = point15;
      this.Label7.Name = "Label7";
      Label label7_2 = this.Label7;
      size1 = new Size(56, 13);
      Size size15 = size1;
      label7_2.Size = size15;
      this.Label7.TabIndex = 13;
      this.Label7.Text = "Turbo Lag";
      TextBox enginetorqueValue1 = this.enginetorque_value;
      point1 = new Point(157, 253);
      Point point16 = point1;
      enginetorqueValue1.Location = point16;
      this.enginetorque_value.Name = "enginetorque_value";
      TextBox enginetorqueValue2 = this.enginetorque_value;
      size1 = new Size(95, 20);
      Size size16 = size1;
      enginetorqueValue2.Size = size16;
      this.enginetorque_value.TabIndex = 14;
      this.torque.AutoSize = true;
      Label torque1 = this.torque;
      point1 = new Point(38, 256);
      Point point17 = point1;
      torque1.Location = point17;
      this.torque.Name = "torque";
      Label torque2 = this.torque;
      size1 = new Size(41, 13);
      Size size17 = size1;
      torque2.Size = size17;
      this.torque.TabIndex = 15;
      this.torque.Text = "Torque";
      Button applyButton1 = this.applyButton;
      point1 = new Point(93, 523);
      Point point18 = point1;
      applyButton1.Location = point18;
      this.applyButton.Name = "applyButton";
      Button applyButton2 = this.applyButton;
      size1 = new Size(95, 21);
      Size size18 = size1;
      applyButton2.Size = size18;
      this.applyButton.TabIndex = 16;
      this.applyButton.Text = "Apply";
      this.applyButton.UseVisualStyleBackColor = true;
      this.Label8.AutoSize = true;
      Label label8_1 = this.Label8;
      point1 = new Point(38, 282);
      Point point19 = point1;
      label8_1.Location = point19;
      this.Label8.Name = "Label8";
      Label label8_2 = this.Label8;
      size1 = new Size(95, 13);
      Size size19 = size1;
      label8_2.Size = size19;
      this.Label8.TabIndex = 17;
      this.Label8.Text = "Transmission Type";
      this.transmissiontype_value.FormattingEnabled = true;
      this.transmissiontype_value.Items.AddRange(new object[5]
      {
        (object) "Manual",
        (object) "Motorbike",
        (object) "Sequential",
        (object) "??",
        (object) "Paddleshift"
      });
      ComboBox transmissiontypeValue1 = this.transmissiontype_value;
      point1 = new Point(157, 279);
      Point point20 = point1;
      transmissiontypeValue1.Location = point20;
      this.transmissiontype_value.Name = "transmissiontype_value";
      ComboBox transmissiontypeValue2 = this.transmissiontype_value;
      size1 = new Size(95, 21);
      Size size20 = size1;
      transmissiontypeValue2.Size = size20;
      this.transmissiontype_value.TabIndex = 18;
      Button button1_1 = this.Button1;
      point1 = new Point(12, 522);
      Point point21 = point1;
      button1_1.Location = point21;
      this.Button1.Name = "Button1";
      Button button1_2 = this.Button1;
      size1 = new Size(75, 23);
      Size size21 = size1;
      button1_2.Size = size21;
      this.Button1.TabIndex = 19;
      this.Button1.Text = "Refresh";
      this.Button1.UseVisualStyleBackColor = true;
      TextBox engineredlineValue1 = this.engineredline_value;
      point1 = new Point(157, 306);
      Point point22 = point1;
      engineredlineValue1.Location = point22;
      this.engineredline_value.Name = "engineredline_value";
      TextBox engineredlineValue2 = this.engineredline_value;
      size1 = new Size(95, 20);
      Size size22 = size1;
      engineredlineValue2.Size = size22;
      this.engineredline_value.TabIndex = 20;
      this.Label9.AutoSize = true;
      Label label9_1 = this.Label9;
      point1 = new Point(38, 309);
      Point point23 = point1;
      label9_1.Location = point23;
      this.Label9.Name = "Label9";
      Label label9_2 = this.Label9;
      size1 = new Size(79, 13);
      Size size23 = size1;
      label9_2.Size = size23;
      this.Label9.TabIndex = 21;
      this.Label9.Text = "Engine Redline";
      this.Label10.AutoSize = true;
      Label label10_1 = this.Label10;
      point1 = new Point(275, 488);
      Point point24 = point1;
      label10_1.Location = point24;
      this.Label10.Name = "Label10";
      Label label10_2 = this.Label10;
      size1 = new Size(289, 52);
      Size size24 = size1;
      label10_2.Size = size24;
      this.Label10.TabIndex = 22;
      this.Label10.Text = "Licencecheck by DavidTiger\r\nProgramming by Beerkeeper\r\n\r\nIf you like the program, leave a comment on LFSTweak.net!";
      this.Label11.AutoSize = true;
      Label label11_1 = this.Label11;
      point1 = new Point(38, 335);
      Point point25 = point1;
      label11_1.Location = point25;
      this.Label11.Name = "Label11";
      Label label11_2 = this.Label11;
      size1 = new Size(55, 13);
      Size size25 = size1;
      label11_2.Size = size25;
      this.Label11.TabIndex = 23;
      this.Label11.Text = "Fuel Tank";
      TextBox fueltankValue1 = this.fueltank_value;
      point1 = new Point(157, 332);
      Point point26 = point1;
      fueltankValue1.Location = point26;
      this.fueltank_value.Name = "fueltank_value";
      TextBox fueltankValue2 = this.fueltank_value;
      size1 = new Size(95, 20);
      Size size26 = size1;
      fueltankValue2.Size = size26;
      this.fueltank_value.TabIndex = 24;
      TextBox enginepowerValue1 = this.enginepower_value;
      point1 = new Point(157, 358);
      Point point27 = point1;
      enginepowerValue1.Location = point27;
      this.enginepower_value.Name = "enginepower_value";
      TextBox enginepowerValue2 = this.enginepower_value;
      size1 = new Size(95, 20);
      Size size27 = size1;
      enginepowerValue2.Size = size27;
      this.enginepower_value.TabIndex = 25;
      this.Label12.AutoSize = true;
      Label label12_1 = this.Label12;
      point1 = new Point(38, 361);
      Point point28 = point1;
      label12_1.Location = point28;
      this.Label12.Name = "Label12";
      Label label12_2 = this.Label12;
      size1 = new Size(73, 13);
      Size size28 = size1;
      label12_2.Size = size28;
      this.Label12.TabIndex = 26;
      this.Label12.Text = "Engine Power";
      this.GroupBox1.Controls.Add((Control) this.Label29);
      this.GroupBox1.Controls.Add((Control) this.massheight_value);
      this.GroupBox1.Controls.Add((Control) this.Label26);
      this.GroupBox1.Controls.Add((Control) this.enginepos_value);
      this.GroupBox1.Controls.Add((Control) this.Label25);
      this.GroupBox1.Controls.Add((Control) this.tyre_fwidth);
      this.GroupBox1.Controls.Add((Control) this.tyre_rwidthrim);
      this.GroupBox1.Controls.Add((Control) this.tyre_rsize);
      this.GroupBox1.Controls.Add((Control) this.tyre_rheight);
      this.GroupBox1.Controls.Add((Control) this.tyre_rwidth);
      this.GroupBox1.Controls.Add((Control) this.Label24);
      this.GroupBox1.Controls.Add((Control) this.tyre_fsize);
      this.GroupBox1.Controls.Add((Control) this.tyre_fheight);
      this.GroupBox1.Controls.Add((Control) this.tyre_fwidthrim);
      this.GroupBox1.Controls.Add((Control) this.Label23);
      this.GroupBox1.Controls.Add((Control) this.cartype_value);
      this.GroupBox1.Controls.Add((Control) this.Label21);
      GroupBox groupBox1_1 = this.GroupBox1;
      point1 = new Point(12, 42);
      Point point29 = point1;
      groupBox1_1.Location = point29;
      this.GroupBox1.Name = "GroupBox1";
      GroupBox groupBox1_2 = this.GroupBox1;
      size1 = new Size((int) byte.MaxValue, 474);
      Size size29 = size1;
      groupBox1_2.Size = size29;
      this.GroupBox1.TabIndex = 27;
      this.GroupBox1.TabStop = false;
      this.GroupBox1.Text = "LFSTweak";
      this.Label29.AutoSize = true;
      this.Label29.Font = new Font("Microsoft Sans Serif", 8.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      Label label29_1 = this.Label29;
      point1 = new Point(76, 0);
      Point point30 = point1;
      label29_1.Location = point30;
      this.Label29.Name = "Label29";
      Label label29_2 = this.Label29;
      size1 = new Size(131, 13);
      Size size30 = size1;
      label29_2.Size = size30;
      this.Label29.TabIndex = 43;
      this.Label29.Text = "XFG/XRG/FBM ONLY";
      TextBox massheightValue1 = this.massheight_value;
      point1 = new Point(145, 446);
      Point point31 = point1;
      massheightValue1.Location = point31;
      this.massheight_value.Name = "massheight_value";
      TextBox massheightValue2 = this.massheight_value;
      size1 = new Size(95, 20);
      Size size31 = size1;
      massheightValue2.Size = size31;
      this.massheight_value.TabIndex = 42;
      this.Label26.AutoSize = true;
      Label label26_1 = this.Label26;
      point1 = new Point(26, 449);
      Point point32 = point1;
      label26_1.Location = point32;
      this.Label26.Name = "Label26";
      Label label26_2 = this.Label26;
      size1 = new Size(103, 13);
      Size size32 = size1;
      label26_2.Size = size32;
      this.Label26.TabIndex = 41;
      this.Label26.Text = "Mass height position";
      TextBox engineposValue1 = this.enginepos_value;
      point1 = new Point(145, 420);
      Point point33 = point1;
      engineposValue1.Location = point33;
      this.enginepos_value.Name = "enginepos_value";
      TextBox engineposValue2 = this.enginepos_value;
      size1 = new Size(95, 20);
      Size size33 = size1;
      engineposValue2.Size = size33;
      this.enginepos_value.TabIndex = 30;
      this.Label25.AutoSize = true;
      Label label25_1 = this.Label25;
      point1 = new Point(26, 423);
      Point point34 = point1;
      label25_1.Location = point34;
      this.Label25.Name = "Label25";
      Label label25_2 = this.Label25;
      size1 = new Size(79, 13);
      Size size34 = size1;
      label25_2.Size = size34;
      this.Label25.TabIndex = 40;
      this.Label25.Text = "Engine position";
      TextBox tyreFwidth1 = this.tyre_fwidth;
      point1 = new Point(111, 368);
      Point point35 = point1;
      tyreFwidth1.Location = point35;
      this.tyre_fwidth.Name = "tyre_fwidth";
      TextBox tyreFwidth2 = this.tyre_fwidth;
      size1 = new Size(28, 20);
      Size size35 = size1;
      tyreFwidth2.Size = size35;
      this.tyre_fwidth.TabIndex = 39;
      TextBox tyreRwidthrim1 = this.tyre_rwidthrim;
      point1 = new Point(145, 394);
      Point point36 = point1;
      tyreRwidthrim1.Location = point36;
      this.tyre_rwidthrim.Name = "tyre_rwidthrim";
      TextBox tyreRwidthrim2 = this.tyre_rwidthrim;
      size1 = new Size(28, 20);
      Size size36 = size1;
      tyreRwidthrim2.Size = size36;
      this.tyre_rwidthrim.TabIndex = 38;
      TextBox tyreRsize1 = this.tyre_rsize;
      point1 = new Point(212, 394);
      Point point37 = point1;
      tyreRsize1.Location = point37;
      this.tyre_rsize.Name = "tyre_rsize";
      TextBox tyreRsize2 = this.tyre_rsize;
      size1 = new Size(28, 20);
      Size size37 = size1;
      tyreRsize2.Size = size37;
      this.tyre_rsize.TabIndex = 37;
      TextBox tyreRheight1 = this.tyre_rheight;
      point1 = new Point(179, 394);
      Point point38 = point1;
      tyreRheight1.Location = point38;
      this.tyre_rheight.Name = "tyre_rheight";
      TextBox tyreRheight2 = this.tyre_rheight;
      size1 = new Size(28, 20);
      Size size38 = size1;
      tyreRheight2.Size = size38;
      this.tyre_rheight.TabIndex = 36;
      TextBox tyreRwidth1 = this.tyre_rwidth;
      point1 = new Point(111, 394);
      Point point39 = point1;
      tyreRwidth1.Location = point39;
      this.tyre_rwidth.Name = "tyre_rwidth";
      TextBox tyreRwidth2 = this.tyre_rwidth;
      size1 = new Size(28, 20);
      Size size39 = size1;
      tyreRwidth2.Size = size39;
      this.tyre_rwidth.TabIndex = 35;
      this.Label24.AutoSize = true;
      Label label24_1 = this.Label24;
      point1 = new Point(26, 397);
      Point point40 = point1;
      label24_1.Location = point40;
      this.Label24.Name = "Label24";
      Label label24_2 = this.Label24;
      size1 = new Size(52, 13);
      Size size40 = size1;
      label24_2.Size = size40;
      this.Label24.TabIndex = 34;
      this.Label24.Text = "Rear tires";
      TextBox tyreFsize1 = this.tyre_fsize;
      point1 = new Point(212, 368);
      Point point41 = point1;
      tyreFsize1.Location = point41;
      this.tyre_fsize.Name = "tyre_fsize";
      TextBox tyreFsize2 = this.tyre_fsize;
      size1 = new Size(28, 20);
      Size size41 = size1;
      tyreFsize2.Size = size41;
      this.tyre_fsize.TabIndex = 33;
      TextBox tyreFheight1 = this.tyre_fheight;
      point1 = new Point(179, 368);
      Point point42 = point1;
      tyreFheight1.Location = point42;
      this.tyre_fheight.Name = "tyre_fheight";
      TextBox tyreFheight2 = this.tyre_fheight;
      size1 = new Size(28, 20);
      Size size42 = size1;
      tyreFheight2.Size = size42;
      this.tyre_fheight.TabIndex = 32;
      TextBox tyreFwidthrim1 = this.tyre_fwidthrim;
      point1 = new Point(145, 368);
      Point point43 = point1;
      tyreFwidthrim1.Location = point43;
      this.tyre_fwidthrim.Name = "tyre_fwidthrim";
      TextBox tyreFwidthrim2 = this.tyre_fwidthrim;
      size1 = new Size(28, 20);
      Size size43 = size1;
      tyreFwidthrim2.Size = size43;
      this.tyre_fwidthrim.TabIndex = 31;
      this.Label23.AutoSize = true;
      Label label23_1 = this.Label23;
      point1 = new Point(26, 371);
      Point point44 = point1;
      label23_1.Location = point44;
      this.Label23.Name = "Label23";
      Label label23_2 = this.Label23;
      size1 = new Size(53, 13);
      Size size44 = size1;
      label23_2.Size = size44;
      this.Label23.TabIndex = 30;
      this.Label23.Text = "Front tires";
      TextBox cartypeValue1 = this.cartype_value;
      point1 = new Point(145, 342);
      Point point45 = point1;
      cartypeValue1.Location = point45;
      this.cartype_value.Name = "cartype_value";
      TextBox cartypeValue2 = this.cartype_value;
      size1 = new Size(95, 20);
      Size size45 = size1;
      cartypeValue2.Size = size45;
      this.cartype_value.TabIndex = 29;
      this.Label21.AutoSize = true;
      Label label21_1 = this.Label21;
      point1 = new Point(26, 345);
      Point point46 = point1;
      label21_1.Location = point46;
      this.Label21.Name = "Label21";
      Label label21_2 = this.Label21;
      size1 = new Size(43, 13);
      Size size46 = size1;
      label21_2.Size = size46;
      this.Label21.TabIndex = 29;
      this.Label21.Text = "Cartype";
      this.GroupBox2.Controls.Add((Control) this.Label22);
      this.GroupBox2.Controls.Add((Control) this.mec_drive);
      this.GroupBox2.Controls.Add((Control) this.Label20);
      this.GroupBox2.Controls.Add((Control) this.mec_weight);
      this.GroupBox2.Controls.Add((Control) this.Label19);
      this.GroupBox2.Controls.Add((Control) this.mec_idle);
      this.GroupBox2.Controls.Add((Control) this.Label18);
      this.GroupBox2.Controls.Add((Control) this.mec_power);
      this.GroupBox2.Controls.Add((Control) this.Label17);
      this.GroupBox2.Controls.Add((Control) this.mec_gearsmax);
      this.GroupBox2.Controls.Add((Control) this.mec_gearsmin);
      this.GroupBox2.Controls.Add((Control) this.Label16);
      this.GroupBox2.Controls.Add((Control) this.mec_torque);
      this.GroupBox2.Controls.Add((Control) this.Label15);
      this.GroupBox2.Controls.Add((Control) this.mec_cylmax);
      this.GroupBox2.Controls.Add((Control) this.mec_cylmin);
      this.GroupBox2.Controls.Add((Control) this.Label14);
      this.GroupBox2.Controls.Add((Control) this.mec_ccmax);
      this.GroupBox2.Controls.Add((Control) this.mec_ccmin);
      this.GroupBox2.Controls.Add((Control) this.Label13);
      GroupBox groupBox2_1 = this.GroupBox2;
      point1 = new Point(278, 42);
      Point point47 = point1;
      groupBox2_1.Location = point47;
      this.GroupBox2.Name = "GroupBox2";
      GroupBox groupBox2_2 = this.GroupBox2;
      size1 = new Size(322, 270);
      Size size47 = size1;
      groupBox2_2.Size = size47;
      this.GroupBox2.TabIndex = 28;
      this.GroupBox2.TabStop = false;
      this.GroupBox2.Text = "Mecanik";
      this.Label22.AutoSize = true;
      this.Label22.Font = new Font("Microsoft Sans Serif", 8.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      Label label22_1 = this.Label22;
      point1 = new Point(6, 22);
      Point point48 = point1;
      label22_1.Location = point48;
      this.Label22.Name = "Label22";
      Label label22_2 = this.Label22;
      size1 = new Size(298, 13);
      Size size48 = size1;
      label22_2.Size = size48;
      this.Label22.TabIndex = 47;
      this.Label22.Text = "UF1/XRG/XFG/RB4/XRT/FXO/LX4/LX6/FZ5/RAC";
      this.mec_drive.FormattingEnabled = true;
      this.mec_drive.Items.AddRange(new object[4]
      {
        (object) "FWD",
        (object) "RWD",
        (object) "AWD",
        (object) "Default"
      });
      ComboBox mecDrive1 = this.mec_drive;
      point1 = new Point(120, 237);
      Point point49 = point1;
      mecDrive1.Location = point49;
      this.mec_drive.Name = "mec_drive";
      ComboBox mecDrive2 = this.mec_drive;
      size1 = new Size(121, 21);
      Size size49 = size1;
      mecDrive2.Size = size49;
      this.mec_drive.TabIndex = 46;
      this.Label20.AutoSize = true;
      Label label20_1 = this.Label20;
      point1 = new Point(6, 240);
      Point point50 = point1;
      label20_1.Location = point50;
      this.Label20.Name = "Label20";
      Label label20_2 = this.Label20;
      size1 = new Size(32, 13);
      Size size50 = size1;
      label20_2.Size = size50;
      this.Label20.TabIndex = 45;
      this.Label20.Text = "Drive";
      TextBox mecWeight1 = this.mec_weight;
      point1 = new Point(120, 211);
      Point point51 = point1;
      mecWeight1.Location = point51;
      this.mec_weight.Name = "mec_weight";
      TextBox mecWeight2 = this.mec_weight;
      size1 = new Size(95, 20);
      Size size51 = size1;
      mecWeight2.Size = size51;
      this.mec_weight.TabIndex = 44;
      this.Label19.AutoSize = true;
      Label label19_1 = this.Label19;
      point1 = new Point(6, 214);
      Point point52 = point1;
      label19_1.Location = point52;
      this.Label19.Name = "Label19";
      Label label19_2 = this.Label19;
      size1 = new Size(41, 13);
      Size size52 = size1;
      label19_2.Size = size52;
      this.Label19.TabIndex = 43;
      this.Label19.Text = "Weight";
      TextBox mecIdle1 = this.mec_idle;
      point1 = new Point(120, 185);
      Point point53 = point1;
      mecIdle1.Location = point53;
      this.mec_idle.Name = "mec_idle";
      TextBox mecIdle2 = this.mec_idle;
      size1 = new Size(95, 20);
      Size size53 = size1;
      mecIdle2.Size = size53;
      this.mec_idle.TabIndex = 42;
      this.Label18.AutoSize = true;
      Label label18_1 = this.Label18;
      point1 = new Point(6, 188);
      Point point54 = point1;
      label18_1.Location = point54;
      this.Label18.Name = "Label18";
      Label label18_2 = this.Label18;
      size1 = new Size(24, 13);
      Size size54 = size1;
      label18_2.Size = size54;
      this.Label18.TabIndex = 41;
      this.Label18.Text = "Idle";
      TextBox mecPower1 = this.mec_power;
      point1 = new Point(120, 131);
      Point point55 = point1;
      mecPower1.Location = point55;
      this.mec_power.Name = "mec_power";
      TextBox mecPower2 = this.mec_power;
      size1 = new Size(95, 20);
      Size size55 = size1;
      mecPower2.Size = size55;
      this.mec_power.TabIndex = 40;
      this.Label17.AutoSize = true;
      Label label17_1 = this.Label17;
      point1 = new Point(6, 135);
      Point point56 = point1;
      label17_1.Location = point56;
      this.Label17.Name = "Label17";
      Label label17_2 = this.Label17;
      size1 = new Size(73, 13);
      Size size56 = size1;
      label17_2.Size = size56;
      this.Label17.TabIndex = 39;
      this.Label17.Text = "Engine Power";
      TextBox mecGearsmax1 = this.mec_gearsmax;
      point1 = new Point(221, 159);
      Point point57 = point1;
      mecGearsmax1.Location = point57;
      this.mec_gearsmax.Name = "mec_gearsmax";
      TextBox mecGearsmax2 = this.mec_gearsmax;
      size1 = new Size(95, 20);
      Size size57 = size1;
      mecGearsmax2.Size = size57;
      this.mec_gearsmax.TabIndex = 38;
      TextBox mecGearsmin1 = this.mec_gearsmin;
      point1 = new Point(120, 159);
      Point point58 = point1;
      mecGearsmin1.Location = point58;
      this.mec_gearsmin.Name = "mec_gearsmin";
      TextBox mecGearsmin2 = this.mec_gearsmin;
      size1 = new Size(95, 20);
      Size size58 = size1;
      mecGearsmin2.Size = size58;
      this.mec_gearsmin.TabIndex = 37;
      this.Label16.AutoSize = true;
      Label label16_1 = this.Label16;
      point1 = new Point(6, 162);
      Point point59 = point1;
      label16_1.Location = point59;
      this.Label16.Name = "Label16";
      Label label16_2 = this.Label16;
      size1 = new Size(35, 13);
      Size size59 = size1;
      label16_2.Size = size59;
      this.Label16.TabIndex = 36;
      this.Label16.Text = "Gears";
      TextBox mecTorque1 = this.mec_torque;
      point1 = new Point(120, 105);
      Point point60 = point1;
      mecTorque1.Location = point60;
      this.mec_torque.Name = "mec_torque";
      TextBox mecTorque2 = this.mec_torque;
      size1 = new Size(95, 20);
      Size size60 = size1;
      mecTorque2.Size = size60;
      this.mec_torque.TabIndex = 35;
      this.Label15.AutoSize = true;
      Label label15_1 = this.Label15;
      point1 = new Point(6, 108);
      Point point61 = point1;
      label15_1.Location = point61;
      this.Label15.Name = "Label15";
      Label label15_2 = this.Label15;
      size1 = new Size(77, 13);
      Size size61 = size1;
      label15_2.Size = size61;
      this.Label15.TabIndex = 34;
      this.Label15.Text = "Engine Torque";
      TextBox mecCylmax1 = this.mec_cylmax;
      point1 = new Point(221, 79);
      Point point62 = point1;
      mecCylmax1.Location = point62;
      this.mec_cylmax.Name = "mec_cylmax";
      TextBox mecCylmax2 = this.mec_cylmax;
      size1 = new Size(95, 20);
      Size size62 = size1;
      mecCylmax2.Size = size62;
      this.mec_cylmax.TabIndex = 33;
      TextBox mecCylmin1 = this.mec_cylmin;
      point1 = new Point(120, 79);
      Point point63 = point1;
      mecCylmin1.Location = point63;
      this.mec_cylmin.Name = "mec_cylmin";
      TextBox mecCylmin2 = this.mec_cylmin;
      size1 = new Size(95, 20);
      Size size63 = size1;
      mecCylmin2.Size = size63;
      this.mec_cylmin.TabIndex = 32;
      this.Label14.AutoSize = true;
      Label label14_1 = this.Label14;
      point1 = new Point(6, 82);
      Point point64 = point1;
      label14_1.Location = point64;
      this.Label14.Name = "Label14";
      Label label14_2 = this.Label14;
      size1 = new Size(85, 13);
      Size size64 = size1;
      label14_2.Size = size64;
      this.Label14.TabIndex = 31;
      this.Label14.Text = "Engine Cylinders";
      TextBox mecCcmax1 = this.mec_ccmax;
      point1 = new Point(221, 53);
      Point point65 = point1;
      mecCcmax1.Location = point65;
      this.mec_ccmax.Name = "mec_ccmax";
      TextBox mecCcmax2 = this.mec_ccmax;
      size1 = new Size(95, 20);
      Size size65 = size1;
      mecCcmax2.Size = size65;
      this.mec_ccmax.TabIndex = 30;
      TextBox mecCcmin1 = this.mec_ccmin;
      point1 = new Point(120, 53);
      Point point66 = point1;
      mecCcmin1.Location = point66;
      this.mec_ccmin.Name = "mec_ccmin";
      TextBox mecCcmin2 = this.mec_ccmin;
      size1 = new Size(95, 20);
      Size size66 = size1;
      mecCcmin2.Size = size66;
      this.mec_ccmin.TabIndex = 29;
      this.Label13.AutoSize = true;
      Label label13_1 = this.Label13;
      point1 = new Point(6, 56);
      Point point67 = point1;
      label13_1.Location = point67;
      this.Label13.Name = "Label13";
      Label label13_2 = this.Label13;
      size1 = new Size(57, 13);
      Size size67 = size1;
      label13_2.Size = size67;
      this.Label13.TabIndex = 29;
      this.Label13.Text = "Engine CC";
      this.MenuStrip1.Items.AddRange(new ToolStripItem[1]
      {
        (ToolStripItem) this.ToolStripMenuItem1
      });
      MenuStrip menuStrip1_1 = this.MenuStrip1;
      point1 = new Point(0, 0);
      Point point68 = point1;
      menuStrip1_1.Location = point68;
      this.MenuStrip1.Name = "MenuStrip1";
      MenuStrip menuStrip1_2 = this.MenuStrip1;
      size1 = new Size(620, 24);
      Size size68 = size1;
      menuStrip1_2.Size = size68;
      this.MenuStrip1.TabIndex = 29;
      this.MenuStrip1.Text = "MenuStrip1";
      this.ToolStripMenuItem1.DropDownItems.AddRange(new ToolStripItem[2]
      {
        (ToolStripItem) this.FileToolStripMenuItem,
        (ToolStripItem) this.SaveToolStripMenuItem
      });
      this.ToolStripMenuItem1.Name = "ToolStripMenuItem1";
      ToolStripMenuItem toolStripMenuItem1 = this.ToolStripMenuItem1;
      size1 = new Size(37, 20);
      Size size69 = size1;
      toolStripMenuItem1.Size = size69;
      this.ToolStripMenuItem1.Text = "File";
      this.FileToolStripMenuItem.Name = "FileToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem2 = this.FileToolStripMenuItem;
      size1 = new Size(100, 22);
      Size size70 = size1;
      toolStripMenuItem2.Size = size70;
      this.FileToolStripMenuItem.Text = "Load";
      this.SaveToolStripMenuItem.Name = "SaveToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem3 = this.SaveToolStripMenuItem;
      size1 = new Size(100, 22);
      Size size71 = size1;
      toolStripMenuItem3.Size = size71;
      this.SaveToolStripMenuItem.Text = "Save";
      this.OpenFileDialog1.FileName = "OpenFileDialog1";
      this.Label27.AutoSize = true;
      Label label27_1 = this.Label27;
      point1 = new Point(282, 332);
      Point point69 = point1;
      label27_1.Location = point69;
      this.Label27.Name = "Label27";
      Label label27_2 = this.Label27;
      size1 = new Size(122, 13);
      Size size72 = size1;
      label27_2.Size = size72;
      this.Label27.TabIndex = 43;
      this.Label27.Text = "Front wheel pos (T/A/Y)";
      TextBox tyrefronttrackValue1 = this.tyrefronttrack_value;
      point1 = new Point(410, 328);
      Point point70 = point1;
      tyrefronttrackValue1.Location = point70;
      this.tyrefronttrack_value.Name = "tyrefronttrack_value";
      TextBox tyrefronttrackValue2 = this.tyrefronttrack_value;
      size1 = new Size(53, 20);
      Size size73 = size1;
      tyrefronttrackValue2.Size = size73;
      this.tyrefronttrack_value.TabIndex = 43;
      TextBox tyrefrontangleValue1 = this.tyrefrontangle_value;
      point1 = new Point(469, 329);
      Point point71 = point1;
      tyrefrontangleValue1.Location = point71;
      this.tyrefrontangle_value.Name = "tyrefrontangle_value";
      TextBox tyrefrontangleValue2 = this.tyrefrontangle_value;
      size1 = new Size(50, 20);
      Size size74 = size1;
      tyrefrontangleValue2.Size = size74;
      this.tyrefrontangle_value.TabIndex = 44;
      TextBox tyrereartrackValue1 = this.tyrereartrack_value;
      point1 = new Point(410, 354);
      Point point72 = point1;
      tyrereartrackValue1.Location = point72;
      this.tyrereartrack_value.Name = "tyrereartrack_value";
      TextBox tyrereartrackValue2 = this.tyrereartrack_value;
      size1 = new Size(53, 20);
      Size size75 = size1;
      tyrereartrackValue2.Size = size75;
      this.tyrereartrack_value.TabIndex = 45;
      TextBox tyrerearangleValue1 = this.tyrerearangle_value;
      point1 = new Point(469, 354);
      Point point73 = point1;
      tyrerearangleValue1.Location = point73;
      this.tyrerearangle_value.Name = "tyrerearangle_value";
      TextBox tyrerearangleValue2 = this.tyrerearangle_value;
      size1 = new Size(50, 20);
      Size size76 = size1;
      tyrerearangleValue2.Size = size76;
      this.tyrerearangle_value.TabIndex = 46;
      this.Label28.AutoSize = true;
      Label label28_1 = this.Label28;
      point1 = new Point(282, 357);
      Point point74 = point1;
      label28_1.Location = point74;
      this.Label28.Name = "Label28";
      Label label28_2 = this.Label28;
      size1 = new Size(121, 13);
      Size size77 = size1;
      label28_2.Size = size77;
      this.Label28.TabIndex = 47;
      this.Label28.Text = "Rear wheel pos (T/A/Y)";
      TextBox tyrefrontyposValue1 = this.tyrefrontypos_value;
      point1 = new Point(525, 328);
      Point point75 = point1;
      tyrefrontyposValue1.Location = point75;
      this.tyrefrontypos_value.Name = "tyrefrontypos_value";
      TextBox tyrefrontyposValue2 = this.tyrefrontypos_value;
      size1 = new Size(50, 20);
      Size size78 = size1;
      tyrefrontyposValue2.Size = size78;
      this.tyrefrontypos_value.TabIndex = 48;
      TextBox tyrerearyposValue1 = this.tyrerearypos_value;
      point1 = new Point(525, 354);
      Point point76 = point1;
      tyrerearyposValue1.Location = point76;
      this.tyrerearypos_value.Name = "tyrerearypos_value";
      TextBox tyrerearyposValue2 = this.tyrerearypos_value;
      size1 = new Size(50, 20);
      Size size79 = size1;
      tyrerearyposValue2.Size = size79;
      this.tyrerearypos_value.TabIndex = 49;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      size1 = new Size(620, 554);
      this.ClientSize = size1;
      this.Controls.Add((Control) this.tyrerearypos_value);
      this.Controls.Add((Control) this.tyrefrontypos_value);
      this.Controls.Add((Control) this.Label28);
      this.Controls.Add((Control) this.tyrerearangle_value);
      this.Controls.Add((Control) this.tyrereartrack_value);
      this.Controls.Add((Control) this.tyrefrontangle_value);
      this.Controls.Add((Control) this.tyrefronttrack_value);
      this.Controls.Add((Control) this.Label27);
      this.Controls.Add((Control) this.GroupBox2);
      this.Controls.Add((Control) this.Label12);
      this.Controls.Add((Control) this.enginepower_value);
      this.Controls.Add((Control) this.fueltank_value);
      this.Controls.Add((Control) this.Label11);
      this.Controls.Add((Control) this.Label10);
      this.Controls.Add((Control) this.Label9);
      this.Controls.Add((Control) this.engineredline_value);
      this.Controls.Add((Control) this.Button1);
      this.Controls.Add((Control) this.transmissiontype_value);
      this.Controls.Add((Control) this.Label8);
      this.Controls.Add((Control) this.applyButton);
      this.Controls.Add((Control) this.torque);
      this.Controls.Add((Control) this.enginetorque_value);
      this.Controls.Add((Control) this.Label7);
      this.Controls.Add((Control) this.engineturbolag_value);
      this.Controls.Add((Control) this.engineturbopressure_value);
      this.Controls.Add((Control) this.Label6);
      this.Controls.Add((Control) this.engineturbo_value);
      this.Controls.Add((Control) this.Label5);
      this.Controls.Add((Control) this.enginetype_value);
      this.Controls.Add((Control) this.Label4);
      this.Controls.Add((Control) this.enginecylinders_value);
      this.Controls.Add((Control) this.Label3);
      this.Controls.Add((Control) this.Label2);
      this.Controls.Add((Control) this.currentCar);
      this.Controls.Add((Control) this.Label1);
      this.Controls.Add((Control) this.enginecc_value);
      this.Controls.Add((Control) this.GroupBox1);
      this.Controls.Add((Control) this.MenuStrip1);
      this.Icon = (Icon) componentResourceManager.GetObject("$this.Icon");
      this.MainMenuStrip = this.MenuStrip1;
      this.Name = nameof (Form1);
      this.Text = "LFSTweak V0.6.2 from LFSTweak.net";
      this.GroupBox1.ResumeLayout(false);
      this.GroupBox1.PerformLayout();
      this.GroupBox2.ResumeLayout(false);
      this.GroupBox2.PerformLayout();
      this.MenuStrip1.ResumeLayout(false);
      this.MenuStrip1.PerformLayout();
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual TextBox enginecc_value
    {
      [DebuggerNonUserCode] get => this._enginecc_value;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._enginecc_value = value;
    }

    internal virtual Label Label1
    {
      [DebuggerNonUserCode] get => this._Label1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label1 = value;
    }

    internal virtual Label currentCar
    {
      [DebuggerNonUserCode] get => this._currentCar;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._currentCar = value;
    }

    internal virtual Label Label2
    {
      [DebuggerNonUserCode] get => this._Label2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label2 = value;
    }

    internal virtual Label Label3
    {
      [DebuggerNonUserCode] get => this._Label3;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label3 = value;
    }

    internal virtual TextBox enginecylinders_value
    {
      [DebuggerNonUserCode] get => this._enginecylinders_value;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._enginecylinders_value = value;
    }

    internal virtual Label Label4
    {
      [DebuggerNonUserCode] get => this._Label4;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label4 = value;
    }

    internal virtual ComboBox enginetype_value
    {
      [DebuggerNonUserCode] get => this._enginetype_value;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._enginetype_value = value;
    }

    internal virtual Label Label5
    {
      [DebuggerNonUserCode] get => this._Label5;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label5 = value;
    }

    internal virtual ComboBox engineturbo_value
    {
      [DebuggerNonUserCode] get => this._engineturbo_value;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._engineturbo_value = value;
    }

    internal virtual Label Label6
    {
      [DebuggerNonUserCode] get => this._Label6;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label6 = value;
    }

    internal virtual TextBox engineturbopressure_value
    {
      [DebuggerNonUserCode] get => this._engineturbopressure_value;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._engineturbopressure_value = value;
    }

    internal virtual TextBox engineturbolag_value
    {
      [DebuggerNonUserCode] get => this._engineturbolag_value;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._engineturbolag_value = value;
    }

    internal virtual Label Label7
    {
      [DebuggerNonUserCode] get => this._Label7;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label7 = value;
    }

    internal virtual TextBox enginetorque_value
    {
      [DebuggerNonUserCode] get => this._enginetorque_value;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._enginetorque_value = value;
    }

    internal virtual Label torque
    {
      [DebuggerNonUserCode] get => this._torque;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._torque = value;
    }

    internal virtual Button applyButton
    {
      [DebuggerNonUserCode] get => this._applyButton;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.applyButton_Click);
        if (this._applyButton != null)
          this._applyButton.Click -= eventHandler;
        this._applyButton = value;
        if (this._applyButton == null)
          return;
        this._applyButton.Click += eventHandler;
      }
    }

    internal virtual Label Label8
    {
      [DebuggerNonUserCode] get => this._Label8;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label8 = value;
    }

    internal virtual ComboBox transmissiontype_value
    {
      [DebuggerNonUserCode] get => this._transmissiontype_value;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._transmissiontype_value = value;
    }

    internal virtual Button Button1
    {
      [DebuggerNonUserCode] get => this._Button1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Button1_Click);
        if (this._Button1 != null)
          this._Button1.Click -= eventHandler;
        this._Button1 = value;
        if (this._Button1 == null)
          return;
        this._Button1.Click += eventHandler;
      }
    }

    internal virtual TextBox engineredline_value
    {
      [DebuggerNonUserCode] get => this._engineredline_value;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._engineredline_value = value;
    }

    internal virtual Label Label9
    {
      [DebuggerNonUserCode] get => this._Label9;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label9 = value;
    }

    internal virtual Label Label10
    {
      [DebuggerNonUserCode] get => this._Label10;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label10 = value;
    }

    internal virtual Label Label11
    {
      [DebuggerNonUserCode] get => this._Label11;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label11 = value;
    }

    internal virtual TextBox fueltank_value
    {
      [DebuggerNonUserCode] get => this._fueltank_value;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._fueltank_value = value;
    }

    internal virtual TextBox enginepower_value
    {
      [DebuggerNonUserCode] get => this._enginepower_value;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._enginepower_value = value;
    }

    internal virtual Label Label12
    {
      [DebuggerNonUserCode] get => this._Label12;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label12 = value;
    }

    internal virtual GroupBox GroupBox1
    {
      [DebuggerNonUserCode] get => this._GroupBox1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._GroupBox1 = value;
    }

    internal virtual GroupBox GroupBox2
    {
      [DebuggerNonUserCode] get => this._GroupBox2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._GroupBox2 = value;
    }

    internal virtual TextBox mec_ccmax
    {
      [DebuggerNonUserCode] get => this._mec_ccmax;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._mec_ccmax = value;
    }

    internal virtual TextBox mec_ccmin
    {
      [DebuggerNonUserCode] get => this._mec_ccmin;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._mec_ccmin = value;
    }

    internal virtual Label Label13
    {
      [DebuggerNonUserCode] get => this._Label13;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label13 = value;
    }

    internal virtual TextBox mec_cylmax
    {
      [DebuggerNonUserCode] get => this._mec_cylmax;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._mec_cylmax = value;
    }

    internal virtual TextBox mec_cylmin
    {
      [DebuggerNonUserCode] get => this._mec_cylmin;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._mec_cylmin = value;
    }

    internal virtual Label Label14
    {
      [DebuggerNonUserCode] get => this._Label14;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label14 = value;
    }

    internal virtual Label Label17
    {
      [DebuggerNonUserCode] get => this._Label17;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label17 = value;
    }

    internal virtual TextBox mec_gearsmax
    {
      [DebuggerNonUserCode] get => this._mec_gearsmax;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._mec_gearsmax = value;
    }

    internal virtual TextBox mec_gearsmin
    {
      [DebuggerNonUserCode] get => this._mec_gearsmin;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._mec_gearsmin = value;
    }

    internal virtual Label Label16
    {
      [DebuggerNonUserCode] get => this._Label16;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label16 = value;
    }

    internal virtual TextBox mec_torque
    {
      [DebuggerNonUserCode] get => this._mec_torque;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._mec_torque = value;
    }

    internal virtual Label Label15
    {
      [DebuggerNonUserCode] get => this._Label15;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label15 = value;
    }

    internal virtual ComboBox mec_drive
    {
      [DebuggerNonUserCode] get => this._mec_drive;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._mec_drive = value;
    }

    internal virtual Label Label20
    {
      [DebuggerNonUserCode] get => this._Label20;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label20 = value;
    }

    internal virtual TextBox mec_weight
    {
      [DebuggerNonUserCode] get => this._mec_weight;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._mec_weight = value;
    }

    internal virtual Label Label19
    {
      [DebuggerNonUserCode] get => this._Label19;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label19 = value;
    }

    internal virtual TextBox mec_idle
    {
      [DebuggerNonUserCode] get => this._mec_idle;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._mec_idle = value;
    }

    internal virtual Label Label18
    {
      [DebuggerNonUserCode] get => this._Label18;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label18 = value;
    }

    internal virtual TextBox mec_power
    {
      [DebuggerNonUserCode] get => this._mec_power;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._mec_power = value;
    }

    internal virtual TextBox cartype_value
    {
      [DebuggerNonUserCode] get => this._cartype_value;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._cartype_value = value;
    }

    internal virtual Label Label21
    {
      [DebuggerNonUserCode] get => this._Label21;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label21 = value;
    }

    internal virtual Label Label22
    {
      [DebuggerNonUserCode] get => this._Label22;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label22 = value;
    }

    internal virtual TextBox tyre_rsize
    {
      [DebuggerNonUserCode] get => this._tyre_rsize;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._tyre_rsize = value;
    }

    internal virtual TextBox tyre_rheight
    {
      [DebuggerNonUserCode] get => this._tyre_rheight;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._tyre_rheight = value;
    }

    internal virtual TextBox tyre_rwidth
    {
      [DebuggerNonUserCode] get => this._tyre_rwidth;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._tyre_rwidth = value;
    }

    internal virtual Label Label24
    {
      [DebuggerNonUserCode] get => this._Label24;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label24 = value;
    }

    internal virtual TextBox tyre_fsize
    {
      [DebuggerNonUserCode] get => this._tyre_fsize;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._tyre_fsize = value;
    }

    internal virtual TextBox tyre_fheight
    {
      [DebuggerNonUserCode] get => this._tyre_fheight;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._tyre_fheight = value;
    }

    internal virtual TextBox tyre_fwidthrim
    {
      [DebuggerNonUserCode] get => this._tyre_fwidthrim;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._tyre_fwidthrim = value;
    }

    internal virtual Label Label23
    {
      [DebuggerNonUserCode] get => this._Label23;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label23 = value;
    }

    internal virtual SaveFileDialog SaveFileDialog1
    {
      [DebuggerNonUserCode] get => this._SaveFileDialog1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._SaveFileDialog1 = value;
    }

    internal virtual MenuStrip MenuStrip1
    {
      [DebuggerNonUserCode] get => this._MenuStrip1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._MenuStrip1 = value;
    }

    internal virtual ToolStripMenuItem ToolStripMenuItem1
    {
      [DebuggerNonUserCode] get => this._ToolStripMenuItem1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._ToolStripMenuItem1 = value;
    }

    internal virtual ToolStripMenuItem FileToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._FileToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.FileToolStripMenuItem_Click);
        if (this._FileToolStripMenuItem != null)
          this._FileToolStripMenuItem.Click -= eventHandler;
        this._FileToolStripMenuItem = value;
        if (this._FileToolStripMenuItem == null)
          return;
        this._FileToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem SaveToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._SaveToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.SaveToolStripMenuItem_Click);
        if (this._SaveToolStripMenuItem != null)
          this._SaveToolStripMenuItem.Click -= eventHandler;
        this._SaveToolStripMenuItem = value;
        if (this._SaveToolStripMenuItem == null)
          return;
        this._SaveToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual OpenFileDialog OpenFileDialog1
    {
      [DebuggerNonUserCode] get => this._OpenFileDialog1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._OpenFileDialog1 = value;
    }

    internal virtual TextBox tyre_rwidthrim
    {
      [DebuggerNonUserCode] get => this._tyre_rwidthrim;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._tyre_rwidthrim = value;
    }

    internal virtual TextBox tyre_fwidth
    {
      [DebuggerNonUserCode] get => this._tyre_fwidth;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._tyre_fwidth = value;
    }

    internal virtual TextBox massheight_value
    {
      [DebuggerNonUserCode] get => this._massheight_value;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._massheight_value = value;
    }

    internal virtual Label Label26
    {
      [DebuggerNonUserCode] get => this._Label26;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label26 = value;
    }

    internal virtual TextBox enginepos_value
    {
      [DebuggerNonUserCode] get => this._enginepos_value;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._enginepos_value = value;
    }

    internal virtual Label Label25
    {
      [DebuggerNonUserCode] get => this._Label25;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label25 = value;
    }

    internal virtual Label Label27
    {
      [DebuggerNonUserCode] get => this._Label27;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Label27_Click);
        if (this._Label27 != null)
          this._Label27.Click -= eventHandler;
        this._Label27 = value;
        if (this._Label27 == null)
          return;
        this._Label27.Click += eventHandler;
      }
    }

    internal virtual TextBox tyrefronttrack_value
    {
      [DebuggerNonUserCode] get => this._tyrefronttrack_value;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._tyrefronttrack_value = value;
    }

    internal virtual TextBox tyrefrontangle_value
    {
      [DebuggerNonUserCode] get => this._tyrefrontangle_value;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._tyrefrontangle_value = value;
    }

    internal virtual TextBox tyrereartrack_value
    {
      [DebuggerNonUserCode] get => this._tyrereartrack_value;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._tyrereartrack_value = value;
    }

    internal virtual TextBox tyrerearangle_value
    {
      [DebuggerNonUserCode] get => this._tyrerearangle_value;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._tyrerearangle_value = value;
    }

    internal virtual Label Label28
    {
      [DebuggerNonUserCode] get => this._Label28;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label28 = value;
    }

    internal virtual TextBox tyrefrontypos_value
    {
      [DebuggerNonUserCode] get => this._tyrefrontypos_value;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._tyrefrontypos_value = value;
    }

    internal virtual TextBox tyrerearypos_value
    {
      [DebuggerNonUserCode] get => this._tyrerearypos_value;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._tyrerearypos_value = value;
    }

    internal virtual Label Label29
    {
      [DebuggerNonUserCode] get => this._Label29;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label29 = value;
    }

    public void carUpdate(string currentCar)
    {
      if (currentCar.Equals("XRG"))
      {
        Memory.WriteMemorySingle(5854728, (float) (Conversions.ToDouble(this.tyre_fwidth.Text) / 1000.0));
        Memory.WriteMemorySingle(5854732, (float) (Conversions.ToDouble(this.tyre_fheight.Text) / 100.0));
        Memory.WriteMemorySingle(5854736, (float) (Conversions.ToDouble(this.tyre_fsize.Text) / 100.0));
        Memory.WriteMemorySingle(5854740, (float) (Conversions.ToDouble(this.tyre_fwidthrim.Text) / 1000.0));
        Memory.WriteMemorySingle(5854664, (float) (Conversions.ToDouble(this.tyre_rwidth.Text) / 1000.0));
        Memory.WriteMemorySingle(5854668, (float) (Conversions.ToDouble(this.tyre_rheight.Text) / 100.0));
        Memory.WriteMemorySingle(5854672, (float) (Conversions.ToDouble(this.tyre_rsize.Text) / 100.0));
        Memory.WriteMemorySingle(5854676, (float) (Conversions.ToDouble(this.tyre_rwidthrim.Text) / 1000.0));
        Memory.WriteMemorySingle(5852696, Conversions.ToSingle(this.enginecc_value.Text));
        Memory.WriteByte(5852700, Conversions.ToInteger(this.enginecylinders_value.Text));
        if (Operators.CompareString(this.engineturbo_value.Text, "On", false) == 0)
          Memory.WriteByte(5852688, 13);
        else
          Memory.WriteByte(5852688, 12);
        Memory.WriteMemorySingle(5852708, Conversions.ToSingle(this.engineturbolag_value.Text));
        Memory.WriteMemorySingle(5852704, Conversions.ToSingle(this.engineturbopressure_value.Text));
        Memory.WriteMemorySingle(5852724, Conversions.ToSingle(this.engineredline_value.Text));
        Memory.WriteMemorySingle(5852728, Conversions.ToSingle(this.enginetorque_value.Text));
        Memory.WriteByte(5852672, Conversions.ToInteger(this.cartype_value.Text));
        Memory.WriteMemorySingle(5853424, Conversions.ToSingle(this.fueltank_value.Text));
        Memory.WriteMemorySingle(5852712, Conversions.ToSingle(this.enginepower_value.Text));
        Memory.WriteMemorySingle(5853336, Conversions.ToSingle(this.enginepos_value.Text));
        Memory.WriteMemorySingle(5853340, Conversions.ToSingle(this.massheight_value.Text));
        Memory.WriteMemorySingle(5854780, Conversions.ToSingle(this.tyrefrontypos_value.Text));
        Memory.WriteMemorySingle(5854768, Conversions.ToSingle(this.tyrefronttrack_value.Text));
        Memory.WriteMemorySingle(5854764, Conversions.ToSingle(this.tyrefrontangle_value.Text));
        Memory.WriteMemorySingle(5854716, Conversions.ToSingle(this.tyrerearypos_value.Text));
        Memory.WriteMemorySingle(5854704, Conversions.ToSingle(this.tyrereartrack_value.Text));
        Memory.WriteMemorySingle(5854700, Conversions.ToSingle(this.tyrerearangle_value.Text));
        if (Operators.CompareString(this.transmissiontype_value.Text, "Manual", false) == 0)
          Memory.WriteByte(5852676, 1);
        else if (Operators.CompareString(this.transmissiontype_value.Text, "Motorbike", false) == 0)
          Memory.WriteByte(5852676, 2);
        else if (Operators.CompareString(this.transmissiontype_value.Text, "Sequential", false) == 0)
          Memory.WriteByte(5852676, 3);
        else if (Operators.CompareString(this.transmissiontype_value.Text, "??", false) == 0)
          Memory.WriteByte(5852676, 4);
        else if (Operators.CompareString(this.transmissiontype_value.Text, "Paddleshift", false) == 0)
          Memory.WriteByte(5852676, 5);
        if (Operators.CompareString(this.enginetype_value.Text, "Inline", false) == 0)
          Memory.WriteByte(5852701, 0);
        else if (Operators.CompareString(this.enginetype_value.Text, "Flat", false) == 0)
        {
          Memory.WriteByte(5852701, 1);
        }
        else
        {
          if (Operators.CompareString(this.enginetype_value.Text, "V-Type", false) != 0)
            return;
          Memory.WriteByte(5852701, 2);
        }
      }
      else if (currentCar.Equals("XFG"))
      {
        Memory.WriteMemorySingle(5848800, (float) (Conversions.ToDouble(this.tyre_fwidth.Text) / 1000.0));
        Memory.WriteMemorySingle(5848804, (float) (Conversions.ToDouble(this.tyre_fheight.Text) / 100.0));
        Memory.WriteMemorySingle(5848808, (float) (Conversions.ToDouble(this.tyre_fsize.Text) / 100.0));
        Memory.WriteMemorySingle(5848812, (float) (Conversions.ToDouble(this.tyre_fwidthrim.Text) / 1000.0));
        Memory.WriteMemorySingle(5846936, Conversions.ToSingle(this.enginecc_value.Text));
        Memory.WriteByte(5846940, Conversions.ToInteger(this.enginecylinders_value.Text));
        if (Operators.CompareString(this.engineturbo_value.Text, "On", false) == 0)
          Memory.WriteByte(5846928, 13);
        else
          Memory.WriteByte(5846928, 12);
        Memory.WriteMemorySingle(5846948, Conversions.ToSingle(this.engineturbolag_value.Text));
        Memory.WriteMemorySingle(5846944, Conversions.ToSingle(this.engineturbopressure_value.Text));
        Memory.WriteMemorySingle(5846968, Conversions.ToSingle(this.enginetorque_value.Text));
        Memory.WriteMemorySingle(5846964, Conversions.ToSingle(this.engineredline_value.Text));
        Memory.WriteByte(5846912, Conversions.ToInteger(this.cartype_value.Text));
        Memory.WriteMemorySingle(5847664, Conversions.ToSingle(this.fueltank_value.Text));
        Memory.WriteMemorySingle(5846952, Conversions.ToSingle(this.enginepower_value.Text));
        Memory.WriteMemorySingle(5847624, Conversions.ToSingle(this.enginepos_value.Text));
        Memory.WriteMemorySingle(5847628, Conversions.ToSingle(this.massheight_value.Text));
        Memory.WriteMemorySingle(5848852, Conversions.ToSingle(this.tyrefrontypos_value.Text));
        Memory.WriteMemorySingle(5848840, Conversions.ToSingle(this.tyrefronttrack_value.Text));
        Memory.WriteMemorySingle(5848836, Conversions.ToSingle(this.tyrefrontangle_value.Text));
        if (Operators.CompareString(this.transmissiontype_value.Text, "Manual", false) == 0)
          Memory.WriteByte(5846916, 1);
        else if (Operators.CompareString(this.transmissiontype_value.Text, "Motorbike", false) == 0)
          Memory.WriteByte(5846916, 2);
        else if (Operators.CompareString(this.transmissiontype_value.Text, "Sequential", false) == 0)
          Memory.WriteByte(5846916, 3);
        else if (Operators.CompareString(this.transmissiontype_value.Text, "??", false) == 0)
          Memory.WriteByte(5846916, 4);
        else if (Operators.CompareString(this.transmissiontype_value.Text, "Paddleshift", false) == 0)
          Memory.WriteByte(5846916, 5);
        if (Operators.CompareString(this.enginetype_value.Text, "Inline", false) == 0)
          Memory.WriteByte(5846941, 0);
        else if (Operators.CompareString(this.enginetype_value.Text, "Flat", false) == 0)
        {
          Memory.WriteByte(5846941, 1);
        }
        else
        {
          if (Operators.CompareString(this.enginetype_value.Text, "V-Type", false) != 0)
            return;
          Memory.WriteByte(5846941, 2);
        }
      }
      else
      {
        if (!currentCar.Equals("FBM"))
          return;
        Memory.WriteMemorySingle(5744376, (float) (Conversions.ToDouble(this.tyre_fwidth.Text) / 1000.0));
        Memory.WriteMemorySingle(5744380, (float) (Conversions.ToDouble(this.tyre_fheight.Text) / 100.0));
        Memory.WriteMemorySingle(5744384, (float) (Conversions.ToDouble(this.tyre_fsize.Text) / 100.0));
        Memory.WriteMemorySingle(5744388, (float) (Conversions.ToDouble(this.tyre_fwidthrim.Text) / 1000.0));
        Memory.WriteMemorySingle(5744312, (float) (Conversions.ToDouble(this.tyre_rwidth.Text) / 1000.0));
        Memory.WriteMemorySingle(5744316, (float) (Conversions.ToDouble(this.tyre_rheight.Text) / 100.0));
        Memory.WriteMemorySingle(5744320, (float) (Conversions.ToDouble(this.tyre_rsize.Text) / 100.0));
        Memory.WriteMemorySingle(5744324, (float) (Conversions.ToDouble(this.tyre_rwidthrim.Text) / 1000.0));
        Memory.WriteMemorySingle(5742484, Conversions.ToSingle(this.enginecc_value.Text));
        Memory.WriteByte(5742488, Conversions.ToInteger(this.enginecylinders_value.Text));
        if (Operators.CompareString(this.engineturbo_value.Text, "On", false) == 0)
          Memory.WriteByte(5742476, 13);
        else
          Memory.WriteByte(5742476, 12);
        Memory.WriteMemorySingle(5742496, Conversions.ToSingle(this.engineturbolag_value.Text));
        Memory.WriteMemorySingle(5742492, Conversions.ToSingle(this.engineturbopressure_value.Text));
        Memory.WriteMemorySingle(5742516, Conversions.ToSingle(this.enginetorque_value.Text));
        Memory.WriteMemorySingle(5742512, Conversions.ToSingle(this.engineredline_value.Text));
        Memory.WriteByte(5742460, Conversions.ToInteger(this.cartype_value.Text));
        Memory.WriteMemorySingle(5743060, Conversions.ToSingle(this.fueltank_value.Text));
        Memory.WriteMemorySingle(5742500, Conversions.ToSingle(this.enginepower_value.Text));
        Memory.WriteMemorySingle(5742984, Conversions.ToSingle(this.enginepos_value.Text));
        Memory.WriteMemorySingle(5742988, Conversions.ToSingle(this.massheight_value.Text));
        Memory.WriteMemorySingle(5744428, Conversions.ToSingle(this.tyrefrontypos_value.Text));
        Memory.WriteMemorySingle(5744416, Conversions.ToSingle(this.tyrefronttrack_value.Text));
        Memory.WriteMemorySingle(5744412, Conversions.ToSingle(this.tyrefrontangle_value.Text));
        Memory.WriteMemorySingle(5744364, Conversions.ToSingle(this.tyrerearypos_value.Text));
        Memory.WriteMemorySingle(5744352, Conversions.ToSingle(this.tyrereartrack_value.Text));
        Memory.WriteMemorySingle(5744348, Conversions.ToSingle(this.tyrerearangle_value.Text));
        if (Operators.CompareString(this.transmissiontype_value.Text, "Manual", false) == 0)
          Memory.WriteByte(5742464, 1);
        else if (Operators.CompareString(this.transmissiontype_value.Text, "Motorbike", false) == 0)
          Memory.WriteByte(5742464, 2);
        else if (Operators.CompareString(this.transmissiontype_value.Text, "Sequential", false) == 0)
          Memory.WriteByte(5742464, 3);
        else if (Operators.CompareString(this.transmissiontype_value.Text, "??", false) == 0)
          Memory.WriteByte(5742464, 4);
        else if (Operators.CompareString(this.transmissiontype_value.Text, "Paddleshift", false) == 0)
          Memory.WriteByte(5742464, 5);
        if (Operators.CompareString(this.enginetype_value.Text, "Inline", false) == 0)
          Memory.WriteByte(5742489, 0);
        else if (Operators.CompareString(this.enginetype_value.Text, "Flat", false) == 0)
          Memory.WriteByte(5742489, 1);
        else if (Operators.CompareString(this.enginetype_value.Text, "V-Type", false) == 0)
          Memory.WriteByte(5742489, 2);
      }
    }

    public void mecanikUpdater(object currentCarValue)
    {
      if (currentCarValue.Equals((object) "XRG") | currentCarValue.Equals((object) "XFG") | currentCarValue.Equals((object) "UF1"))
      {
        this.mec_currentcylmin = Conversions.ToByte(Memory.ReadByte2(5966450));
        this.mec_cylmin.Text = Conversions.ToString(this.mec_currentcylmin);
        this.mec_currentcylmax = Conversions.ToByte(Memory.ReadByte2(5966451));
        this.mec_cylmax.Text = Conversions.ToString(this.mec_currentcylmax);
        this.mec_currentgearsmin = Conversions.ToByte(Memory.ReadByte2(5966446));
        this.mec_gearsmin.Text = Conversions.ToString(this.mec_currentgearsmin);
        this.mec_currentgearsmax = Conversions.ToByte(Memory.ReadByte2(5966447));
        this.mec_gearsmax.Text = Conversions.ToString(this.mec_currentgearsmax);
        this.mec_currentdrive = Conversions.ToByte(Memory.ReadByte(5966440));
        if (this.mec_currentdrive == (byte) 1)
          this.mec_drive.Text = "RWD";
        else if (this.mec_currentdrive == (byte) 2)
          this.mec_drive.Text = "FWD";
        else if (this.mec_currentdrive == (byte) 3)
          this.mec_drive.Text = "AWD";
        else if (this.mec_currentdrive == (byte) 4)
          this.mec_drive.Text = "Default";
        Memory.ReadSingle(5966452, ref this.mec_currentccmin);
        this.mec_ccmin.Text = Conversions.ToString(this.mec_currentccmin);
        Memory.ReadSingle(5966456, ref this.mec_currentccmax);
        this.mec_ccmax.Text = Conversions.ToString(this.mec_currentccmax);
        Memory.ReadSingle(5966460, ref this.mec_currenttorque);
        this.mec_torque.Text = Conversions.ToString(this.mec_currenttorque);
        Memory.ReadSingle(5966472, ref this.mec_currentpower);
        this.mec_power.Text = Conversions.ToString(this.mec_currentpower);
        Memory.ReadSingle(5966488, ref this.mec_currentidle);
        this.mec_idle.Text = Conversions.ToString(this.mec_currentidle);
        Memory.ReadSingle(5966436, ref this.mec_currentweight);
        this.mec_weight.Text = Conversions.ToString(this.mec_currentweight);
      }
      else
      {
        if (!(currentCarValue.Equals((object) "LX4") | currentCarValue.Equals((object) "LX6") | currentCarValue.Equals((object) "RB4") | currentCarValue.Equals((object) "FXO") | currentCarValue.Equals((object) "XRT") | currentCarValue.Equals((object) "RAC") | currentCarValue.Equals((object) "FZ5")))
          return;
        this.mec_currentcylmin = Conversions.ToByte(Memory.ReadByte2(5966390));
        this.mec_cylmin.Text = Conversions.ToString(this.mec_currentcylmin);
        this.mec_currentcylmax = Conversions.ToByte(Memory.ReadByte2(5966391));
        this.mec_cylmax.Text = Conversions.ToString(this.mec_currentcylmax);
        this.mec_currentgearsmin = Conversions.ToByte(Memory.ReadByte2(5966386));
        this.mec_gearsmin.Text = Conversions.ToString(this.mec_currentgearsmin);
        this.mec_currentgearsmax = Conversions.ToByte(Memory.ReadByte2(5966387));
        this.mec_gearsmax.Text = Conversions.ToString(this.mec_currentgearsmax);
        this.mec_currentdrive = Conversions.ToByte(Memory.ReadByte(5966380));
        if (this.mec_currentdrive == (byte) 1)
          this.mec_drive.Text = "RWD";
        else if (this.mec_currentdrive == (byte) 2)
          this.mec_drive.Text = "FWD";
        else if (this.mec_currentdrive == (byte) 3)
          this.mec_drive.Text = "AWD";
        else if (this.mec_currentdrive == (byte) 4)
          this.mec_drive.Text = "Default";
        Memory.ReadSingle(5966392, ref this.mec_currentccmin);
        this.mec_ccmin.Text = Conversions.ToString(this.mec_currentccmin);
        Memory.ReadSingle(5966396, ref this.mec_currentccmax);
        this.mec_ccmax.Text = Conversions.ToString(this.mec_currentccmax);
        Memory.ReadSingle(5966400, ref this.mec_currenttorque);
        this.mec_torque.Text = Conversions.ToString(this.mec_currenttorque);
        Memory.ReadSingle(5966412, ref this.mec_currentpower);
        this.mec_power.Text = Conversions.ToString(this.mec_currentpower);
        Memory.ReadSingle(5966428, ref this.mec_currentidle);
        this.mec_idle.Text = Conversions.ToString(this.mec_currentidle);
        Memory.ReadSingle(5966376, ref this.mec_currentweight);
        this.mec_weight.Text = Conversions.ToString(this.mec_currentweight);
      }
    }

    public void mecanikWriter(object currentCarValue)
    {
      if (currentCarValue.Equals((object) "XRG") | currentCarValue.Equals((object) "XFG") | currentCarValue.Equals((object) "UF1"))
      {
        Memory.WriteByte2(5966450, Conversions.ToInteger(this.mec_cylmin.Text));
        Memory.WriteByte2(5966451, Conversions.ToInteger(this.mec_cylmax.Text));
        Memory.WriteByte2(5966446, Conversions.ToInteger(this.mec_gearsmin.Text));
        Memory.WriteByte2(5966447, Conversions.ToInteger(this.mec_gearsmax.Text));
        if (Operators.CompareString(this.mec_drive.Text, "RWD", false) == 0)
          Memory.WriteByte(5966440, 1);
        else if (Operators.CompareString(this.mec_drive.Text, "FWD", false) == 0)
          Memory.WriteByte(5966440, 2);
        else if (Operators.CompareString(this.mec_drive.Text, "AWD", false) == 0)
          Memory.WriteByte(5966440, 3);
        else
          Memory.WriteByte(5966440, 4);
        Memory.WriteMemorySingle(5966452, Conversions.ToSingle(this.mec_ccmin.Text));
        Memory.WriteMemorySingle(5966456, Conversions.ToSingle(this.mec_ccmax.Text));
        Memory.WriteMemorySingle(5966460, Conversions.ToSingle(this.mec_torque.Text));
        Memory.WriteMemorySingle(5966472, Conversions.ToSingle(this.mec_power.Text));
        Memory.WriteMemorySingle(5966488, Conversions.ToSingle(this.mec_idle.Text));
        Memory.WriteMemorySingle(5966436, Conversions.ToSingle(this.mec_weight.Text));
      }
      else
      {
        if (!(currentCarValue.Equals((object) "LX4") | currentCarValue.Equals((object) "LX6") | currentCarValue.Equals((object) "RB4") | currentCarValue.Equals((object) "FXO") | currentCarValue.Equals((object) "XRT") | currentCarValue.Equals((object) "RAC") | currentCarValue.Equals((object) "FZ5")))
          return;
        Memory.WriteByte2(5966390, Conversions.ToInteger(this.mec_cylmin.Text));
        Memory.WriteByte2(5966391, Conversions.ToInteger(this.mec_cylmax.Text));
        Memory.WriteByte2(5966386, Conversions.ToInteger(this.mec_gearsmin.Text));
        Memory.WriteByte2(5966387, Conversions.ToInteger(this.mec_gearsmax.Text));
        if (Operators.CompareString(this.mec_drive.Text, "RWD", false) == 0)
          Memory.WriteByte(5966380, 1);
        else if (Operators.CompareString(this.mec_drive.Text, "FWD", false) == 0)
          Memory.WriteByte(5966380, 2);
        else if (Operators.CompareString(this.mec_drive.Text, "AWD", false) == 0)
          Memory.WriteByte(5966380, 3);
        else
          Memory.WriteByte(5966380, 4);
        Memory.WriteMemorySingle(5966392, Conversions.ToSingle(this.mec_ccmin.Text));
        Memory.WriteMemorySingle(5966396, Conversions.ToSingle(this.mec_ccmax.Text));
        Memory.WriteMemorySingle(5966400, Conversions.ToSingle(this.mec_torque.Text));
        Memory.WriteMemorySingle(5966412, Conversions.ToSingle(this.mec_power.Text));
        Memory.WriteMemorySingle(5966428, Conversions.ToSingle(this.mec_idle.Text));
        Memory.WriteMemorySingle(5966376, Conversions.ToSingle(this.mec_weight.Text));
      }
    }

    public void carSwitcher(string currentCar)
    {
      if (currentCar.Equals("XRG"))
      {
        this.tyre_rheight.ReadOnly = false;
        this.tyre_rsize.ReadOnly = false;
        this.tyre_rwidth.ReadOnly = false;
        this.tyre_rwidthrim.ReadOnly = false;
        this.tyrerearangle_value.ReadOnly = false;
        this.tyrereartrack_value.ReadOnly = false;
        this.tyrerearypos_value.ReadOnly = false;
        Memory.ReadSingle(5854728, ref this.currenttyrefwidth);
        Memory.ReadSingle(5854732, ref this.currenttyrefheight);
        Memory.ReadSingle(5854736, ref this.currenttyrefsize);
        Memory.ReadSingle(5854740, ref this.currenttyrefwidthrim);
        this.tyre_fwidth.Text = Conversions.ToString(this.currenttyrefwidth * 1000f);
        this.tyre_fheight.Text = Conversions.ToString(this.currenttyrefheight * 100f);
        this.tyre_fsize.Text = Conversions.ToString(this.currenttyrefsize * 100f);
        this.tyre_fwidthrim.Text = Conversions.ToString(this.currenttyrefwidthrim * 1000f);
        Memory.ReadSingle(5854664, ref this.currenttyrerwidth);
        Memory.ReadSingle(5854668, ref this.currenttyrerheight);
        Memory.ReadSingle(5854672, ref this.currenttyrersize);
        Memory.ReadSingle(5854676, ref this.currenttyrerwidthrim);
        this.tyre_rwidth.Text = Conversions.ToString(this.currenttyrerwidth * 1000f);
        this.tyre_rheight.Text = Conversions.ToString(this.currenttyrerheight * 100f);
        this.tyre_rsize.Text = Conversions.ToString(this.currenttyrersize * 100f);
        this.tyre_rwidthrim.Text = Conversions.ToString(this.currenttyrerwidthrim * 1000f);
        this.currentenginecylinders = Conversions.ToByte(Memory.ReadByte(5852700));
        this.enginecylinders_value.Text = Conversions.ToString(this.currentenginecylinders);
        Memory.ReadSingle(5852696, ref this.currentenginecc);
        this.enginecc_value.Text = Conversions.ToString(this.currentenginecc);
        this.currentengineturbo = Conversions.ToByte(Memory.ReadByte(5852688));
        this.engineturbo_value.Text = this.currentengineturbo != (byte) 12 ? "On" : "Off";
        Memory.ReadSingle(5852708, ref this.currentengineturbolag);
        this.engineturbolag_value.Text = Conversions.ToString(this.currentengineturbolag);
        Memory.ReadSingle(5852704, ref this.currentengineturbopressure);
        this.engineturbopressure_value.Text = Conversions.ToString(this.currentengineturbopressure);
        float currentenginetorque = (float) this.currentenginetorque;
        Memory.ReadSingle(5852728, ref currentenginetorque);
        this.currentenginetorque = (double) currentenginetorque;
        this.enginetorque_value.Text = Conversions.ToString(this.currentenginetorque);
        Memory.ReadSingle(5852724, ref this.currentengineredline);
        this.engineredline_value.Text = Conversions.ToString(this.currentengineredline);
        this.currentcartype = Conversions.ToByte(Memory.ReadByte(5852672));
        this.cartype_value.Text = Conversions.ToString(this.currentcartype);
        Memory.ReadSingle(5853424, ref this.currentfueltank);
        this.fueltank_value.Text = Conversions.ToString(this.currentfueltank);
        Memory.ReadSingle(5852712, ref this.currentenginepower);
        this.enginepower_value.Text = Conversions.ToString(this.currentenginepower);
        Memory.ReadSingle(5853336, ref this.enginepos);
        this.enginepos_value.Text = Conversions.ToString(this.enginepos);
        Memory.ReadSingle(5853340, ref this.massheightpos);
        this.massheight_value.Text = Conversions.ToString(this.massheightpos);
        Memory.ReadSingle(5854780, ref this.tyrefrontypos);
        this.tyrefrontypos_value.Text = Conversions.ToString(this.tyrefrontypos);
        Memory.ReadSingle(5854768, ref this.tyrefronttrack);
        this.tyrefronttrack_value.Text = Conversions.ToString(this.tyrefronttrack);
        Memory.ReadSingle(5854764, ref this.tyrefrontangle);
        this.tyrefrontangle_value.Text = Conversions.ToString(this.tyrefrontangle);
        Memory.ReadSingle(5854704, ref this.tyrereartrack);
        this.tyrereartrack_value.Text = Conversions.ToString(this.tyrereartrack);
        Memory.ReadSingle(5854716, ref this.tyrerearypos);
        this.tyrerearypos_value.Text = Conversions.ToString(this.tyrerearypos);
        Memory.ReadSingle(5854700, ref this.tyrerearangle);
        this.tyrerearangle_value.Text = Conversions.ToString(this.tyrerearangle);
        this.currenttransmissiontype = Conversions.ToByte(Memory.ReadByte(5852676));
        if (this.currenttransmissiontype == (byte) 1)
          this.transmissiontype_value.Text = "Manual";
        else if (this.currenttransmissiontype == (byte) 2)
          this.transmissiontype_value.Text = "Motorbike";
        else if (this.currenttransmissiontype == (byte) 3)
          this.transmissiontype_value.Text = "Sequential";
        else if (this.currenttransmissiontype == (byte) 4)
          this.transmissiontype_value.Text = "??";
        else if (this.currenttransmissiontype == (byte) 5)
          this.transmissiontype_value.Text = "Paddleshift";
        this.currentenginetype = Conversions.ToInteger(Memory.ReadByte(5852701));
        if (this.currentenginetype == 0)
          this.enginetype_value.Text = "Inline";
        else if (this.currentenginetype == 1)
        {
          this.enginetype_value.Text = "Flat";
        }
        else
        {
          if (this.currentenginetype != 2)
            return;
          this.enginetype_value.Text = "V-Type";
        }
      }
      else if (currentCar.Equals("XFG"))
      {
        this.tyre_rheight.ReadOnly = true;
        this.tyre_rsize.ReadOnly = true;
        this.tyre_rwidth.ReadOnly = true;
        this.tyre_rwidthrim.ReadOnly = true;
        this.tyrerearangle_value.ReadOnly = true;
        this.tyrereartrack_value.ReadOnly = true;
        this.tyrerearypos_value.ReadOnly = true;
        Memory.ReadSingle(5848800, ref this.currenttyrefwidth);
        Memory.ReadSingle(5848804, ref this.currenttyrefheight);
        Memory.ReadSingle(5848808, ref this.currenttyrefsize);
        Memory.ReadSingle(5848812, ref this.currenttyrefwidthrim);
        this.tyre_fwidth.Text = Conversions.ToString(this.currenttyrefwidth * 1000f);
        this.tyre_fheight.Text = Conversions.ToString(this.currenttyrefheight * 100f);
        this.tyre_fsize.Text = Conversions.ToString(this.currenttyrefsize * 100f);
        this.tyre_fwidthrim.Text = Conversions.ToString(this.currenttyrefwidth * 1000f);
        this.currentenginecylinders = Conversions.ToByte(Memory.ReadByte(5846940));
        this.enginecylinders_value.Text = Conversions.ToString(this.currentenginecylinders);
        Memory.ReadSingle(5846936, ref this.currentenginecc);
        this.enginecc_value.Text = Conversions.ToString(this.currentenginecc);
        this.currentengineturbo = Conversions.ToByte(Memory.ReadByte(5846928));
        this.engineturbo_value.Text = this.currentengineturbo != (byte) 12 ? "On" : "Off";
        Memory.ReadSingle(5846948, ref this.currentengineturbolag);
        this.engineturbolag_value.Text = Conversions.ToString(this.currentengineturbolag);
        Memory.ReadSingle(5846944, ref this.currentengineturbopressure);
        this.engineturbopressure_value.Text = Conversions.ToString(this.currentengineturbopressure);
        float currentenginetorque = (float) this.currentenginetorque;
        Memory.ReadSingle(5846968, ref currentenginetorque);
        this.currentenginetorque = (double) currentenginetorque;
        this.enginetorque_value.Text = Conversions.ToString(this.currentenginetorque);
        Memory.ReadSingle(5846964, ref this.currentengineredline);
        this.engineredline_value.Text = Conversions.ToString(this.currentengineredline);
        this.currentcartype = Conversions.ToByte(Memory.ReadByte(5846912));
        this.cartype_value.Text = Conversions.ToString(this.currentcartype);
        Memory.ReadSingle(5847664, ref this.currentfueltank);
        this.fueltank_value.Text = Conversions.ToString(this.currentfueltank);
        Memory.ReadSingle(5846952, ref this.currentenginepower);
        this.enginepower_value.Text = Conversions.ToString(this.currentenginepower);
        Memory.ReadSingle(5847624, ref this.enginepos);
        this.enginepos_value.Text = Conversions.ToString(this.enginepos);
        Memory.ReadSingle(5847628, ref this.massheightpos);
        this.massheight_value.Text = Conversions.ToString(this.massheightpos);
        Memory.ReadSingle(5848852, ref this.tyrefrontypos);
        this.tyrefrontypos_value.Text = Conversions.ToString(this.tyrefrontypos);
        Memory.ReadSingle(5848840, ref this.tyrefronttrack);
        this.tyrefronttrack_value.Text = Conversions.ToString(this.tyrefronttrack);
        Memory.ReadSingle(5848836, ref this.tyrefrontangle);
        this.tyrefrontangle_value.Text = Conversions.ToString(this.tyrefrontangle);
        this.currenttransmissiontype = Conversions.ToByte(Memory.ReadByte(5846916));
        if (this.currenttransmissiontype == (byte) 1)
          this.transmissiontype_value.Text = "Manual";
        else if (this.currenttransmissiontype == (byte) 2)
          this.transmissiontype_value.Text = "Motorbike";
        else if (this.currenttransmissiontype == (byte) 3)
          this.transmissiontype_value.Text = "Sequential";
        else if (this.currenttransmissiontype == (byte) 4)
          this.transmissiontype_value.Text = "??";
        else if (this.currenttransmissiontype == (byte) 5)
          this.transmissiontype_value.Text = "Paddleshift";
        this.currentenginetype = Conversions.ToInteger(Memory.ReadByte(5846941));
        if (this.currentenginetype == 0)
          this.enginetype_value.Text = "Inline";
        else if (this.currentenginetype == 1)
        {
          this.enginetype_value.Text = "Flat";
        }
        else
        {
          if (this.currentenginetype != 2)
            return;
          this.enginetype_value.Text = "V-Type";
        }
      }
      else
      {
        if (!currentCar.Equals("FBM"))
          return;
        this.tyre_rheight.ReadOnly = false;
        this.tyre_rsize.ReadOnly = false;
        this.tyre_rwidth.ReadOnly = false;
        this.tyre_rwidthrim.ReadOnly = false;
        this.tyrerearangle_value.ReadOnly = false;
        this.tyrereartrack_value.ReadOnly = false;
        this.tyrerearypos_value.ReadOnly = false;
        Memory.ReadSingle(5744376, ref this.currenttyrefwidth);
        Memory.ReadSingle(5744380, ref this.currenttyrefheight);
        Memory.ReadSingle(5744384, ref this.currenttyrefsize);
        Memory.ReadSingle(5744388, ref this.currenttyrefwidthrim);
        this.tyre_fwidth.Text = Conversions.ToString(this.currenttyrefwidth * 1000f);
        this.tyre_fheight.Text = Conversions.ToString(this.currenttyrefheight * 100f);
        this.tyre_fsize.Text = Conversions.ToString(this.currenttyrefsize * 100f);
        this.tyre_fwidthrim.Text = Conversions.ToString(this.currenttyrefwidthrim * 1000f);
        Memory.ReadSingle(5744312, ref this.currenttyrerwidth);
        Memory.ReadSingle(5744316, ref this.currenttyrerheight);
        Memory.ReadSingle(5744320, ref this.currenttyrersize);
        Memory.ReadSingle(5744324, ref this.currenttyrerwidthrim);
        this.tyre_rwidth.Text = Conversions.ToString(this.currenttyrerwidth * 1000f);
        this.tyre_rheight.Text = Conversions.ToString(this.currenttyrerheight * 100f);
        this.tyre_rsize.Text = Conversions.ToString(this.currenttyrersize * 100f);
        this.tyre_rwidthrim.Text = Conversions.ToString(this.currenttyrerwidthrim * 1000f);
        this.currentenginecylinders = Conversions.ToByte(Memory.ReadByte(5742488));
        this.enginecylinders_value.Text = Conversions.ToString(this.currentenginecylinders);
        Memory.ReadSingle(5742484, ref this.currentenginecc);
        this.enginecc_value.Text = Conversions.ToString(this.currentenginecc);
        this.currentengineturbo = Conversions.ToByte(Memory.ReadByte(5742476));
        this.engineturbo_value.Text = this.currentengineturbo != (byte) 12 ? "On" : "Off";
        Memory.ReadSingle(5742496, ref this.currentengineturbolag);
        this.engineturbolag_value.Text = Conversions.ToString(this.currentengineturbolag);
        Memory.ReadSingle(5742492, ref this.currentengineturbopressure);
        this.engineturbopressure_value.Text = Conversions.ToString(this.currentengineturbopressure);
        float currentenginetorque = (float) this.currentenginetorque;
        Memory.ReadSingle(5742516, ref currentenginetorque);
        this.currentenginetorque = (double) currentenginetorque;
        this.enginetorque_value.Text = Conversions.ToString(this.currentenginetorque);
        Memory.ReadSingle(5742512, ref this.currentengineredline);
        this.engineredline_value.Text = Conversions.ToString(this.currentengineredline);
        this.currentcartype = Conversions.ToByte(Memory.ReadByte(5742460));
        this.cartype_value.Text = Conversions.ToString(this.currentcartype);
        Memory.ReadSingle(5743060, ref this.currentfueltank);
        this.fueltank_value.Text = Conversions.ToString(this.currentfueltank);
        Memory.ReadSingle(5742500, ref this.currentenginepower);
        this.enginepower_value.Text = Conversions.ToString(this.currentenginepower);
        Memory.ReadSingle(5742984, ref this.enginepos);
        this.enginepos_value.Text = Conversions.ToString(this.enginepos);
        Memory.ReadSingle(5742988, ref this.massheightpos);
        this.massheight_value.Text = Conversions.ToString(this.massheightpos);
        Memory.ReadSingle(5744428, ref this.tyrefrontypos);
        this.tyrefrontypos_value.Text = Conversions.ToString(this.tyrefrontypos);
        Memory.ReadSingle(5744416, ref this.tyrefronttrack);
        this.tyrefronttrack_value.Text = Conversions.ToString(this.tyrefronttrack);
        Memory.ReadSingle(5744412, ref this.tyrefrontangle);
        this.tyrefrontangle_value.Text = Conversions.ToString(this.tyrefrontangle);
        Memory.ReadSingle(5744352, ref this.tyrereartrack);
        this.tyrereartrack_value.Text = Conversions.ToString(this.tyrereartrack);
        Memory.ReadSingle(5744364, ref this.tyrerearypos);
        this.tyrerearypos_value.Text = Conversions.ToString(this.tyrerearypos);
        Memory.ReadSingle(5744348, ref this.tyrerearangle);
        this.tyrerearangle_value.Text = Conversions.ToString(this.tyrerearangle);
        this.currenttransmissiontype = Conversions.ToByte(Memory.ReadByte(5742464));
        if (this.currenttransmissiontype == (byte) 1)
          this.transmissiontype_value.Text = "Manual";
        else if (this.currenttransmissiontype == (byte) 2)
          this.transmissiontype_value.Text = "Motorbike";
        else if (this.currenttransmissiontype == (byte) 3)
          this.transmissiontype_value.Text = "Sequential";
        else if (this.currenttransmissiontype == (byte) 4)
          this.transmissiontype_value.Text = "??";
        else if (this.currenttransmissiontype == (byte) 5)
          this.transmissiontype_value.Text = "Paddleshift";
        this.currentenginetype = Conversions.ToInteger(Memory.ReadByte(5742489));
        if (this.currentenginetype == 0)
          this.enginetype_value.Text = "Inline";
        else if (this.currentenginetype == 1)
          this.enginetype_value.Text = "Flat";
        else if (this.currentenginetype == 2)
          this.enginetype_value.Text = "V-Type";
      }
    }

    public void carRefresh()
    {
      Memory.ReadMemory(6259912, ref this.currentCarValue);
      this.currentCar.Text = this.currentCarValue;
      this.mecanikUpdater((object) this.currentCarValue);
      this.carSwitcher(this.currentCarValue);
    }

    public void saveSetup()
    {
      this.SaveFileDialog1.OverwritePrompt = true;
      this.SaveFileDialog1.Filter = "LTC|*.ltc";
      if (!this.SaveFileDialog1.ShowDialog().Equals((object) DialogResult.OK))
        return;
      try
      {
        FileStream fileStream = new FileStream(this.SaveFileDialog1.FileName, FileMode.OpenOrCreate, FileAccess.Write);
        StreamWriter streamWriter = new StreamWriter((Stream) fileStream);
        streamWriter.WriteLine("car_config:" + this.currentCar.Text);
        if (this.currentCarValue.Equals("XRG") | this.currentCarValue.Equals("XFG") | this.currentCarValue.Equals("UF1"))
        {
          streamWriter.WriteLine("lfstweak_engine_cc:" + this.enginecc_value.Text);
          streamWriter.WriteLine("lfstweak_engine_cylinders:" + this.enginecylinders_value.Text);
          int num1 = Operators.CompareString(this.enginetype_value.Text, "Inline", false) != 0 ? (Operators.CompareString(this.enginetype_value.Text, "Flat", false) != 0 ? 2 : 1) : 0;
          streamWriter.WriteLine("lfstweak_engine_type:" + num1.ToString());
          int num2 = Operators.CompareString(this.engineturbo_value.Text, "On", false) != 0 ? 12 : 13;
          streamWriter.WriteLine("lfstweak_engine_turbo:" + num2.ToString());
          streamWriter.WriteLine("lfstweak_engine_turbo_pressure:" + this.engineturbopressure_value.Text);
          streamWriter.WriteLine("lfstweak_engine_turbo_lag:" + this.engineturbolag_value.Text);
          streamWriter.WriteLine("lfstweak_engine_torque:" + this.enginetorque_value.Text);
          int num3 = Operators.CompareString(this.transmissiontype_value.Text, "Manual", false) != 0 ? (Operators.CompareString(this.transmissiontype_value.Text, "Motorbike", false) != 0 ? (Operators.CompareString(this.transmissiontype_value.Text, "Sequential", false) != 0 ? (Operators.CompareString(this.transmissiontype_value.Text, "??", false) != 0 ? 5 : 4) : 3) : 2) : 1;
          streamWriter.WriteLine("lfstweak_engine_transmission_type:" + num3.ToString());
          streamWriter.WriteLine("lfstweak_engine_redline:" + this.engineredline_value.Text);
          streamWriter.WriteLine("lfstweak_engine_fueltank:" + this.fueltank_value.Text);
          streamWriter.WriteLine("lfstweak_engine_power:" + this.enginepower_value.Text);
          streamWriter.WriteLine("lfstweak_engine_cartype:" + this.cartype_value.Text);
          streamWriter.WriteLine("lfstweak_front_tyre_width:" + this.tyre_fwidthrim.Text);
          streamWriter.WriteLine("lfstweak_front_tyre_height:" + this.tyre_fheight.Text);
          streamWriter.WriteLine("lfstweak_front_rim_size:" + this.tyre_fsize.Text);
          streamWriter.WriteLine("lfstweak_front_rim_width:" + this.tyre_fwidthrim.Text);
          streamWriter.WriteLine("lfstweak_rear_tyre_width:" + this.tyre_rwidth.Text);
          streamWriter.WriteLine("lfstweak_rear_tyre_height:" + this.tyre_rheight.Text);
          streamWriter.WriteLine("lfstweak_rear_rim_size:" + this.tyre_rsize.Text);
          streamWriter.WriteLine("lfstweak_rear_rim_width:" + this.tyre_rwidthrim.Text);
          streamWriter.WriteLine("lfstweak_enginepos:" + this.enginepos_value.Text);
          streamWriter.WriteLine("lfstweak_massheight:" + this.massheight_value.Text);
          streamWriter.WriteLine("lfstweak_tyrefronttrack:" + this.tyrefronttrack_value.Text);
          streamWriter.WriteLine("lfstweak_tyrefrontangle:" + this.tyrefrontangle_value.Text);
          streamWriter.WriteLine("lfstweak_tyrefrontypos:" + this.tyrefrontypos_value.Text);
          streamWriter.WriteLine("lfstweak_tyrereartrack:" + this.tyrereartrack_value.Text);
          streamWriter.WriteLine("lfstweak_tyrerearangle:" + this.tyrerearangle_value.Text);
          streamWriter.WriteLine("lfstweak_tyrerearypos:" + this.tyrerearypos_value.Text);
        }
        if (this.currentCarValue.Equals("XRG") | this.currentCarValue.Equals("XFG") | this.currentCarValue.Equals("UF1"))
          streamWriter.WriteLine("lfsmec_cartype:2");
        streamWriter.WriteLine("lfsmec_engine_cc_min:" + this.mec_ccmin.Text);
        streamWriter.WriteLine("lfsmec_engine_cc_max:" + this.mec_ccmax.Text);
        streamWriter.WriteLine("lfsmec_engine_cylinders_min:" + this.mec_cylmin.Text);
        streamWriter.WriteLine("lfsmec_engine_cylinders_max:" + this.mec_cylmax.Text);
        streamWriter.WriteLine("lfsmec_engine_torque:" + this.mec_torque.Text);
        streamWriter.WriteLine("lfsmec_engine_power:" + this.mec_power.Text);
        streamWriter.WriteLine("lfsmec_engine_gears_min:" + this.mec_gearsmin.Text);
        streamWriter.WriteLine("lfsmec_engine_gears_max:" + this.mec_gearsmax.Text);
        streamWriter.WriteLine("lfsmec_engine_idle:" + this.mec_idle.Text);
        streamWriter.WriteLine("lfsmec_weight:" + this.mec_weight.Text);
        if (Operators.CompareString(this.mec_drive.Text, "RWD", false) == 0)
          streamWriter.WriteLine("lfsmec_drive:1");
        else if (Operators.CompareString(this.mec_drive.Text, "FWD", false) == 0)
          streamWriter.WriteLine("lfsmec_drive:2");
        else if (Operators.CompareString(this.mec_drive.Text, "AWD", false) == 0)
          streamWriter.WriteLine("lfsmec_drive:3");
        else
          streamWriter.WriteLine("lfsmec_drive:4");
        streamWriter.Close();
        fileStream.Close();
        int num = (int) Interaction.MsgBox((object) "Setup succesfully saved!");
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        int num = (int) Interaction.MsgBox((object) "Couldn't open file. Maybe it is in use?");
        ProjectData.ClearProjectError();
      }
    }

    public void loadFile()
    {
      this.OpenFileDialog1.Filter = "LTC|*.ltc";
      if (!this.OpenFileDialog1.ShowDialog().Equals((object) DialogResult.OK))
        return;
      FileStream fileStream = new FileStream(this.OpenFileDialog1.FileName, FileMode.Open, FileAccess.Read);
      StreamReader streamReader = new StreamReader((Stream) fileStream);
      string Left;
      do
      {
        Left = streamReader.ReadLine();
        if (Operators.CompareString(Left, (string) null, false) != 0)
        {
          string[] strArray = Left.Split(':');
          string str = strArray[1].Replace(".", CultureInfo.CurrentCulture.NumberFormat.NumberDecimalSeparator);
          strArray[1] = str.Replace(",", CultureInfo.CurrentCulture.NumberFormat.NumberDecimalSeparator);
          if (strArray[0].Equals("car_config"))
          {
            this.currentCar.Text = strArray[1];
            this.currentCarValue = strArray[1];
          }
          else if (strArray[0].Equals("lfstweak_engine_cc"))
            this.enginecc_value.Text = strArray[1];
          else if (strArray[0].Equals("lfstweak_engine_cylinders"))
            this.enginecylinders_value.Text = strArray[1];
          else if (strArray[0].Equals("lfstweak_engine_type"))
          {
            if (strArray[1].Equals("0"))
              this.enginetype_value.Text = "Inline";
            else if (strArray[1].Equals("1"))
              this.enginetype_value.Text = "Flat";
            else if (strArray[1].Equals("2"))
              this.enginetype_value.Text = "V-Type";
          }
          else if (strArray[0].Equals("lfstweak_engine_turbo"))
            this.engineturbo_value.Text = !strArray[1].Equals("12") ? "On" : "Off";
          else if (strArray[0].Equals("lfstweak_engine_turbo_pressure"))
            this.engineturbopressure_value.Text = strArray[1];
          else if (strArray[0].Equals("lfstweak_engine_turbo_lag"))
            this.engineturbolag_value.Text = strArray[1];
          else if (strArray[0].Equals("lfstweak_engine_torque"))
            this.enginetorque_value.Text = strArray[1];
          else if (strArray[0].Equals("lfstweak_engine_transmission_type"))
          {
            if (strArray[1].Equals("1"))
              this.transmissiontype_value.Text = "Manual";
            else if (strArray[1].Equals("2"))
              this.transmissiontype_value.Text = "Motorbike";
            else if (strArray[1].Equals("3"))
              this.transmissiontype_value.Text = "Sequential";
            else if (strArray[1].Equals("4"))
              this.transmissiontype_value.Text = "??";
            else if (strArray[1].Equals("5"))
              this.transmissiontype_value.Text = "Paddleshift";
          }
          else if (strArray[0].Equals("lfstweak_engine_redline"))
            this.engineredline_value.Text = strArray[1];
          else if (strArray[0].Equals("lfstweak_engine_fueltank"))
            this.fueltank_value.Text = strArray[1];
          else if (strArray[0].Equals("lfstweak_engine_power"))
            this.enginepower_value.Text = strArray[1];
          else if (strArray[0].Equals("lfstweak_engine_cartype"))
            this.cartype_value.Text = strArray[1];
          else if (strArray[0].Equals("lfstweak_front_tyre_width"))
            this.tyre_fwidth.Text = strArray[1];
          else if (strArray[0].Equals("lfstweak_front_tyre_height"))
            this.tyre_fheight.Text = strArray[1];
          else if (strArray[0].Equals("lfstweak_front_rim_size"))
            this.tyre_fsize.Text = strArray[1];
          else if (strArray[0].Equals("lfstweak_front_rim_width"))
            this.tyre_fwidthrim.Text = strArray[1];
          else if (strArray[0].Equals("lfstweak_rear_tyre_width"))
            this.tyre_rwidth.Text = strArray[1];
          else if (strArray[0].Equals("lfstweak_rear_tyre_height"))
            this.tyre_rheight.Text = strArray[1];
          else if (strArray[0].Equals("lfstweak_rear_rim_size"))
            this.tyre_rsize.Text = strArray[1];
          else if (strArray[0].Equals("lfstweak_rear_rim_width"))
            this.tyre_rwidthrim.Text = strArray[1];
          else if (strArray[0].Equals("lfstweak_enginepos"))
            this.enginepos_value.Text = strArray[1];
          else if (strArray[0].Equals("lfstweak_massheight"))
            this.massheight_value.Text = strArray[1];
          else if (strArray[0].Equals("lfstweak_tyrefronttrack"))
            this.tyrefronttrack_value.Text = strArray[1];
          else if (strArray[0].Equals("lfstweak_tyrefrontangle"))
            this.tyrefrontangle_value.Text = strArray[1];
          else if (strArray[0].Equals("lfstweak_tyrefrontypos"))
            this.tyrefrontypos_value.Text = strArray[1];
          else if (strArray[0].Equals("lfstweak_tyrereartrack"))
            this.tyrereartrack_value.Text = strArray[1];
          else if (strArray[0].Equals("lfstweak_tyrerearangle"))
            this.tyrerearangle_value.Text = strArray[1];
          else if (strArray[0].Equals("lfstweak_tyrerearypos"))
            this.tyrerearypos_value.Text = strArray[1];
          else if (strArray[0].Equals("lfsmec_engine_cc_min"))
            this.mec_ccmin.Text = strArray[1];
          else if (strArray[0].Equals("lfsmec_engine_cc_max"))
            this.mec_ccmax.Text = strArray[1];
          else if (strArray[0].Equals("lfsmec_engine_cylinders_min"))
            this.mec_cylmin.Text = strArray[1];
          else if (strArray[0].Equals("lfsmec_engine_cylinders_max"))
            this.mec_cylmax.Text = strArray[1];
          else if (strArray[0].Equals("lfsmec_engine_torque"))
            this.mec_torque.Text = strArray[1];
          else if (strArray[0].Equals("lfsmec_engine_power"))
            this.mec_power.Text = strArray[1];
          else if (strArray[0].Equals("lfsmec_engine_gears_min"))
            this.mec_gearsmin.Text = strArray[1];
          else if (strArray[0].Equals("lfsmec_engine_gears_max"))
            this.mec_gearsmax.Text = strArray[1];
          else if (strArray[0].Equals("lfsmec_engine_idle"))
            this.mec_idle.Text = strArray[1];
          else if (strArray[0].Equals("lfsmec_weight"))
            this.mec_weight.Text = strArray[1];
          else if (strArray[0].Equals("lfsmec_drive"))
          {
            if (strArray[1].Equals("1"))
              this.mec_drive.Text = "RWD";
            else if (strArray[1].Equals("2"))
              this.mec_drive.Text = "FWD";
            else if (strArray[1].Equals("3"))
              this.mec_drive.Text = "AWD";
            else if (strArray[1].Equals("4"))
              this.mec_drive.Text = "Default";
          }
        }
      }
      while (Left != null);
      streamReader.Close();
      fileStream.Close();
      if (this.currentCarValue.Equals("XRG") | this.currentCarValue.Equals("XFG") | this.currentCarValue.Equals("FBM"))
        this.carUpdate(this.currentCar.Text);
      this.mecanikWriter((object) this.currentCar.Text);
      int num = (int) Interaction.MsgBox((object) "Setup succesfully loaded!");
    }

    private void Form1_Load(object sender, EventArgs e)
    {
      Memory.ReadMemory(6259912, ref this.currentCarValue);
      this.currentCar.Text = this.currentCarValue;
      this.mecanikUpdater((object) this.currentCar.Text);
      this.carSwitcher(this.currentCar.Text);
    }

    private void applyButton_Click(object sender, EventArgs e)
    {
      this.carUpdate(this.currentCar.Text);
      this.mecanikWriter((object) this.currentCar.Text);
    }

    private void Button1_Click(object sender, EventArgs e)
    {
      this.carRefresh();
      this.mecanikUpdater((object) this.currentCar.Text);
    }

    private void SaveToolStripMenuItem_Click(object sender, EventArgs e) => this.saveSetup();

    private void FileToolStripMenuItem_Click(object sender, EventArgs e) => this.loadFile();

    private void Label27_Click(object sender, EventArgs e)
    {
    }
  }
}
