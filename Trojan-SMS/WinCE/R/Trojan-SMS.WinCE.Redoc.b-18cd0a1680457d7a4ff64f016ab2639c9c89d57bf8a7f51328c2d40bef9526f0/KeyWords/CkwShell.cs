// Decompiled with JetBrains decompiler
// Type: Dbasic.KeyWords.CkwShell
// Assembly: B4Pruntime, Version=1.0.3056.20520, Culture=neutral, PublicKeyToken=null
// MVID: BED81B59-7EDE-4B04-983E-56C0010CF881
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00007-msil\Trojan-SMS.WinCE.Redoc.b-18cd0a1680457d7a4ff64f016ab2639c9c89d57bf8a7f51328c2d40bef9526f0.exe

using System;
using System.IO;
using System.Runtime.InteropServices;

namespace Dbasic.KeyWords
{
  public class CkwShell : CkeyWords
  {
    public CkwShell(CRunner CRunner)
      : base(CRunner)
    {
    }

    public override MethodReturn Method(Place place, ref Locals locals)
    {
      ++place.WordI;
      RunReturn runReturn = this.CRunner.RunCode(place, true, true, ref locals);
      place = runReturn.place;
      ++place.WordI;
      string str = Path.Combine(CRunner.b4pDir, runReturn.vString);
      if (!File.Exists(str))
        str = runReturn.vString;
      runReturn = this.CRunner.RunCode(place, true, true, ref locals);
      place = runReturn.place;
      ++place.WordI;
      string vString = runReturn.vString;
      CkwShell.ProcessInfo pi = new CkwShell.ProcessInfo();
      CkwShell.CreateProcess(str, vString, pi);
      return new MethodReturn(place);
    }

    [DllImport("CoreDll.DLL", SetLastError = true)]
    private static extern int CreateProcess(
      string imageName,
      string cmdLine,
      IntPtr lpProcessAttributes,
      IntPtr lpThreadAttributes,
      int boolInheritHandles,
      int dwCreationFlags,
      IntPtr lpEnvironment,
      IntPtr lpszCurrentDir,
      byte[] si,
      CkwShell.ProcessInfo pi);

    [DllImport("CoreDll.dll")]
    private static extern int GetLastError();

    [DllImport("CoreDll.dll")]
    private static extern int WaitForSingleObject(IntPtr Handle, int Wait);

    public static bool CreateProcess(string ExeName, string CmdLine, CkwShell.ProcessInfo pi)
    {
      if (pi == null)
        pi = new CkwShell.ProcessInfo();
      byte[] si = new byte[128];
      CkwShell.CreateProcess(ExeName, CmdLine, IntPtr.Zero, IntPtr.Zero, 0, 0, IntPtr.Zero, IntPtr.Zero, si, pi);
      return true;
    }

    public class ProcessInfo
    {
      public IntPtr hProcess;
      public IntPtr hThread;
      public int ProcessId;
      public int ThreadId;
    }
  }
}
