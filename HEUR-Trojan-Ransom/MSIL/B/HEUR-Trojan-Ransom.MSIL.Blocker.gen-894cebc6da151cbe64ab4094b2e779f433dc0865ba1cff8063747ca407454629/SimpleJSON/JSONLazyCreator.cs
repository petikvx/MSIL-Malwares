// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONLazyCreator
// Assembly: CriticalHand, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 8F3AACC8-AAA3-4E3C-B88D-04522F6F341D
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-894cebc6da151cbe64ab4094b2e779f433dc0865ba1cff8063747ca407454629.exe

namespace SimpleJSON
{
  internal class JSONLazyCreator : JSONNode
  {
    private JSONNode m_Node = (JSONNode) null;
    private string m_Key = (string) null;

    public JSONLazyCreator(JSONNode aNode)
    {
      this.m_Node = aNode;
      this.m_Key = (string) null;
    }

    public JSONLazyCreator(JSONNode aNode, string aKey)
    {
label_1:
      int num1 = 1350977180;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1687304719)) % 3U)
        {
          case 1:
            num1 = (int) num2 * 1666297349 ^ 254559902;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      this.m_Node = aNode;
      this.m_Key = aKey;
    }

    private void Set(JSONNode aVal)
    {
      bool flag = this.m_Key == null;
label_1:
      int num1 = -1002746362;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2009674127)) % 11U)
        {
          case 0:
            this.m_Node.Add(this.m_Key, aVal);
            num1 = (int) num2 * -163744766 ^ 1334332719;
            continue;
          case 1:
            this.m_Node.Add(aVal);
            num1 = (int) num2 * -638459612 ^ 1168717912;
            continue;
          case 2:
            num1 = (int) num2 * 465187297 ^ -779526784;
            continue;
          case 3:
            num1 = (int) num2 * -814356963 ^ -248664022;
            continue;
          case 4:
            goto label_3;
          case 5:
            num1 = -508015253;
            continue;
          case 6:
            num1 = (int) num2 * -504163121 ^ 899332468;
            continue;
          case 7:
            goto label_1;
          case 8:
            num1 = (int) num2 * 1456665558 ^ -649420466;
            continue;
          case 9:
            this.m_Node = (JSONNode) null;
            num1 = -1234974762;
            continue;
          case 10:
            int num3 = flag ? -674091922 : (num3 = -974334265);
            num1 = num3 ^ (int) num2 * -1261512530;
            continue;
          default:
            goto label_13;
        }
      }
label_3:
      return;
label_13:;
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
label_1:
        int num1 = 175285996;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 67647158)) % 3U)
          {
            case 1:
              num1 = (int) num2 * -1937833208 ^ -1613907673;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 1290152203;
        JSONArray aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 239708384)) % 4U)
          {
            case 0:
              aVal.Add(value);
              num1 = (int) num2 * -1239387681 ^ -1146357319;
              continue;
            case 2:
              goto label_1;
            case 3:
              aVal = new JSONArray();
              num1 = (int) num2 * 41126173 ^ -895101725;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        this.Set((JSONNode) aVal);
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 420303994;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1249041540)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = (int) num2 * -202330112 ^ 524419247;
              continue;
            case 3:
              num1 = (int) num2 * 1719160027 ^ 1422242740;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
        JSONClass aVal = new JSONClass();
label_1:
        int num1 = 57090383;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 859520822)) % 5U)
          {
            case 0:
              num1 = (int) num2 * 884998611 ^ 328597370;
              continue;
            case 1:
              aVal.Add(aKey, value);
              num1 = (int) num2 * 732666122 ^ -1032708109;
              continue;
            case 2:
              goto label_1;
            case 3:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1078452794 ^ 39906843;
              continue;
            case 4:
              goto label_3;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
    }

    public override void Add(JSONNode aItem)
    {
      JSONArray aVal = new JSONArray();
label_1:
      int num1 = 649824875;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1544964585)) % 6U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * -875095575 ^ -37812619;
            continue;
          case 2:
            aVal.Add(aItem);
            num1 = (int) num2 * 1755844164 ^ 312932318;
            continue;
          case 3:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * -1351507939 ^ 2092735197;
            continue;
          case 4:
            goto label_1;
          case 5:
            num1 = (int) num2 * 1430696685 ^ -296458780;
            continue;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    public override void Add(string aKey, JSONNode aItem)
    {
      JSONClass aVal = new JSONClass();
label_1:
      int num1 = 517740219;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 79873479)) % 3U)
        {
          case 1:
            aVal.Add(aKey, aItem);
            num1 = (int) num2 * 1816260004 ^ 978814907;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      this.Set((JSONNode) aVal);
    }

    public static bool operator ==(JSONLazyCreator a, object b)
    {
      bool flag1 = b == null;
label_1:
      int num1 = 765223656;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1238898230)) % 6U)
        {
          case 1:
            flag2 = true;
            num1 = (int) num2 * 178765947 ^ 468767936;
            continue;
          case 2:
            int num3 = !flag1 ? 136044141 : (num3 = 1450903319);
            num1 = num3 ^ (int) num2 * 1338909597;
            continue;
          case 3:
            flag2 = (object) a == b;
            num1 = 425435346;
            continue;
          case 4:
            goto label_1;
          case 5:
            num1 = (int) num2 * 1713783865 ^ -824199999;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      return flag2;
    }

    public static bool operator !=(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = -915210812;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1379881490)) % 4U)
        {
          case 1:
            num1 = (int) num2 * -1721261175 ^ -1521848789;
            continue;
          case 2:
            flag = !(a == b);
            num1 = (int) num2 * 72326955 ^ -200912339;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override bool Equals(object obj)
    {
      if (obj != null)
        goto label_3;
label_1:
      int num1 = -154467900;
label_2:
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1027015467)) % 6U)
        {
          case 0:
            num1 = (int) num2 * 1013048853 ^ 790801237;
            continue;
          case 1:
            flag = true;
            num1 = (int) num2 * 656407027 ^ -1922746912;
            continue;
          case 2:
            goto label_3;
          case 3:
            goto label_1;
          case 5:
            num1 = (int) num2 * -654747167 ^ -1458439640;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      return flag;
label_3:
      flag = (object) this == obj;
      num1 = -1145056058;
      goto label_2;
    }

    public override int GetHashCode()
    {
label_1:
      int num1 = -303660439;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1524064961)) % 4U)
        {
          case 1:
            num1 = (int) num2 * 893888007 ^ -438249388;
            continue;
          case 2:
            hashCode = base.GetHashCode();
            num1 = (int) num2 * -1671916360 ^ 744703394;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return hashCode;
    }

    public override string ToString()
    {
      string str = "";
label_1:
      int num1 = 550999696;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2028570296)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -967770391 ^ -141275795;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 867811956;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1242265324)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            str = "";
            num1 = (int) num2 * 944806829 ^ 889197709;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override int AsInt
    {
      get
      {
label_1:
        int num1 = -1754876586;
        JSONData aVal;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2111256373)) % 6U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * 533787647 ^ 427255400;
              continue;
            case 3:
              aVal = new JSONData(0);
              num1 = (int) num2 * -1057098719 ^ -1405355474;
              continue;
            case 4:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -2091642881 ^ -1973909545;
              continue;
            case 5:
              asInt = 0;
              num1 = (int) num2 * -1772791374 ^ -1819086050;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asInt;
      }
      set
      {
label_1:
        int num1 = -1233239624;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2119751675)) % 4U)
          {
            case 0:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1610434613 ^ -619811357;
              continue;
            case 1:
              aVal = new JSONData(value);
              num1 = (int) num2 * -207829250 ^ -983725349;
              continue;
            case 2:
              goto label_3;
            case 3:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override float AsFloat
    {
      get
      {
        JSONData aVal = new JSONData(0.0f);
label_1:
        int num1 = 1000343784;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1572681278)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              this.Set((JSONNode) aVal);
              asFloat = 0.0f;
              num1 = (int) num2 * -182449298 ^ -1162309731;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asFloat;
      }
      set
      {
        JSONData aVal = new JSONData(value);
label_1:
        int num1 = -1731841756;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1269085261)) % 4U)
          {
            case 0:
              num1 = (int) num2 * -50234044 ^ 1887172846;
              continue;
            case 1:
              goto label_3;
            case 2:
              goto label_1;
            case 3:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1045931925 ^ -810109910;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override double AsDouble
    {
      get
      {
        JSONData aVal = new JSONData(0.0);
label_1:
        int num1 = 1042597856;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 847232617)) % 4U)
          {
            case 0:
              asDouble = 0.0;
              num1 = (int) num2 * 473914625 ^ -766711829;
              continue;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1148780873 ^ -496259724;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return asDouble;
      }
      set
      {
        JSONData aVal = new JSONData(value);
label_1:
        int num1 = -490654285;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -541502894)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 1334189052 ^ 75437188;
              continue;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1365854714 ^ 217678656;
              continue;
            case 2:
              goto label_3;
            case 3:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override bool AsBool
    {
      get
      {
label_1:
        int num1 = -1813598554;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1276241881)) % 4U)
          {
            case 0:
              asBool = false;
              num1 = (int) num2 * 288550899 ^ -908028200;
              continue;
            case 1:
              this.Set((JSONNode) new JSONData(false));
              num1 = (int) num2 * -2029530205 ^ 2033220548;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return asBool;
      }
      set
      {
label_1:
        int num1 = -1694770658;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1660375160)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Set((JSONNode) new JSONData(value));
              num1 = (int) num2 * 493781516 ^ 917850571;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = -2101013966;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1628325153)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              JSONArray aVal = new JSONArray();
              this.Set((JSONNode) aVal);
              asArray = aVal;
              num1 = (int) num2 * 618901068 ^ -747645265;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asArray;
      }
    }

    public override JSONClass AsObject
    {
      get
      {
        JSONClass aVal = new JSONClass();
        this.Set((JSONNode) aVal);
label_1:
        int num1 = 1428969371;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 475832242)) % 5U)
          {
            case 0:
              num1 = (int) num2 * -700082529 ^ -157436330;
              continue;
            case 1:
              num1 = (int) num2 * 719205896 ^ 94248846;
              continue;
            case 3:
              asObject = aVal;
              num1 = (int) num2 * -1745922569 ^ -15342327;
              continue;
            case 4:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_6:
        return asObject;
      }
    }
  }
}
