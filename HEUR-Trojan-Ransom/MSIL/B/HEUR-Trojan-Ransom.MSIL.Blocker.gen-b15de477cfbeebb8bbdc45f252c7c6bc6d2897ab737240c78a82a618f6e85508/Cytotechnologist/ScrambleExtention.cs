// Decompiled with JetBrains decompiler
// Type: Cytotechnologist.ScrambleExtention
// Assembly: ASMNA, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 756C4858-C1DF-4594-BBF4-94321F458D9F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-b15de477cfbeebb8bbdc45f252c7c6bc6d2897ab737240c78a82a618f6e85508.exe

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Cytotechnologist
{
  public static class ScrambleExtention
  {
    private static readonly Random Random = ScrambleExtention.\u200B‫‌⁭⁬‭⁫‌‌‍‎⁯⁪‎⁫‪‍‭‌⁬⁬⁫‌​‎⁬‏‏⁫⁭‬⁮⁯​‫‌⁪⁮⁯‌‮();

    public static void Shuffle<T>(IList<T> list)
    {
label_1:
      int num1 = -315099662;
      int count;
      int index;
      bool flag;
      T obj;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -48627248)) % 15U)
        {
          case 0:
            num1 = (int) num2 * -1112827274 ^ 1188495122;
            continue;
          case 1:
            list[index] = list[count];
            num1 = (int) num2 * -1062599695 ^ 1476093631;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * -1443822564 ^ -864781955;
            continue;
          case 4:
            int num3 = !flag ? -307700014 : (num3 = -2067148925);
            num1 = num3 ^ (int) num2 * 708734692;
            continue;
          case 5:
            --count;
            num1 = (int) num2 * -609855872 ^ 768385957;
            continue;
          case 6:
            num1 = (int) num2 * 1581364375 ^ -73961905;
            continue;
          case 7:
            list[count] = obj;
            num1 = (int) num2 * 960011240 ^ -1813356040;
            continue;
          case 8:
            index = ScrambleExtention.\u206A​‬⁫‬⁯⁪‍⁮​‫‍⁯⁪⁪‬⁭‌‫‍‎‏‏‌​⁭‮‭‎⁫‏⁫⁮‮‬‍​‭⁮⁬‮(ScrambleExtention.Random, count + 1);
            num1 = (int) num2 * -1830966642 ^ 453621827;
            continue;
          case 9:
            count = list.Count;
            num1 = (int) num2 * 1766201678 ^ -1124909870;
            continue;
          case 10:
            obj = list[index];
            num1 = (int) num2 * -23469516 ^ 1935720895;
            continue;
          case 11:
            num1 = (int) num2 * -1857970363 ^ 1501673734;
            continue;
          case 12:
            goto label_3;
          case 13:
            num1 = -2044133587;
            continue;
          case 14:
            flag = count > 1;
            num1 = -120225563;
            continue;
          default:
            goto label_17;
        }
      }
label_3:
      return;
label_17:;
    }

    static int \u206A​‬⁫‬⁯⁪‍⁮​‫‍⁯⁪⁪‬⁭‌‫‍‎‏‏‌​⁭‮‭‎⁫‏⁫⁮‮‬‍​‭⁮⁬‮([In] Random obj0, [In] int obj1) => obj0.Next(obj1);

    static Random \u200B‫‌⁭⁬‭⁫‌‌‍‎⁯⁪‎⁫‪‍‭‌⁬⁬⁫‌​‎⁬‏‏⁫⁭‬⁮⁯​‫‌⁪⁮⁯‌‮() => new Random();
  }
}
