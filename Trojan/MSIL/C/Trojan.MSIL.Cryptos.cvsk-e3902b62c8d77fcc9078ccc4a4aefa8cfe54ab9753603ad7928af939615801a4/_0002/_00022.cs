// Decompiled with JetBrains decompiler
// Type: .2
// Assembly: stub, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: AC9AC2DB-F571-4006-AB5A-F6838C776154
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Trojan.MSIL.Cryptos.cvsk-e3902b62c8d77fcc9078ccc4a4aefa8cfe54ab9753603ad7928af939615801a4.exe

using \u0002;
using System;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.InteropServices;

namespace \u0002
{
  internal class \u00022
  {
    private static Assembly \u0001 = (Assembly) null;
    private static string[] \u0002 = new string[0];

    internal static void \u0003()
    {
      try
      {
        AppDomain.CurrentDomain.ResourceResolve += new ResolveEventHandler(\u00022.\u0003);
      }
      catch (Exception ex)
      {
      }
    }

    private static Assembly \u0003([In] object obj0, [In] ResolveEventArgs obj1)
    {
      if ((object) \u00022.\u0001 == null)
      {
        lock (\u00022.\u0002)
        {
          \u00022.\u0001 = Assembly.Load("{3a6316ee-1ac3-49ab-93ef-e51089fc6888}, PublicKeyToken=3e56350693f7355e");
          if ((object) \u00022.\u0001 != null)
            \u00022.\u0002 = \u00022.\u0001.GetManifestResourceNames();
        }
      }
      string name = obj1.Name;
      for (int index = 0; index < \u00022.\u0002.Length; ++index)
      {
        if (\u00022.\u0002[index] == name)
          return !\u00022.\u0003() ? (Assembly) null : \u00022.\u0001;
      }
      return (Assembly) null;
    }

    private static bool \u0003()
    {
      try
      {
        StackFrame[] frames = new StackTrace().GetFrames();
        for (int index = 2; index < frames.Length; ++index)
        {
          if ((object) frames[index].GetMethod().Module.Assembly == (object) Assembly.GetExecutingAssembly())
            return true;
        }
        return false;
      }
      catch
      {
        return true;
      }
    }
  }
}
