// Decompiled with JetBrains decompiler
// Type: CriticalHandleMinusOneIsInva.BooleanTypeI
// Assembly: DictionaryValueCollect, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 264A7E74-FCA9-4101-A215-90F8B6150D1A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan.MSIL.Crypt.hzzu-0a11971438302748e2f40e97f73af5e24c71212b30c9d6a5aff7ff102e662c94.exe

using BindableIterableToEnumerableAdap;
using c;
using IMoni;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.InteropServices;

namespace CriticalHandleMinusOneIsInva
{
  public class BooleanTypeI
  {
    private const int DECKSIZE = 52;

    public bool ShouldWarn { get; set; }

    public int TurnWho { get; set; }

    public AssemblyInformationalVersionAttrib Player { get; set; }

    public GenericCompa Machine { get; set; }

    internal List<UnknownWrap> Deck { get; set; }

    public string Winner { get; set; }

    public string Logs { get; set; }

    public BooleanTypeI(AssemblyInformationalVersionAttrib Player, GenericCompa Machine)
    {
label_1:
      int num1 = 1917517146;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2063828761)) % 8U)
        {
          case 0:
            this.TurnWho = -1;
            num1 = (int) num2 * 580221067 ^ -1258682171;
            continue;
          case 1:
            this.Machine = Machine;
            num1 = (int) num2 * 1115923836 ^ 1149585008;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * -116505596 ^ -487724645;
            continue;
          case 5:
            this.ShouldWarn = false;
            num1 = (int) num2 * -177459169 ^ -455720083;
            continue;
          case 6:
            this.Player = Player;
            num1 = (int) num2 * 1541251944 ^ -706369152;
            continue;
          case 7:
            num1 = (int) num2 * -274627057 ^ -88891296;
            continue;
          default:
            goto label_9;
        }
      }
label_9:
      this.Winner = string.Empty;
    }

    internal int GetHandSumFor(List<UnknownWrap> Hand)
    {
label_1:
      int num1 = 1635043216;
      int handSumFor;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1460976217)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            handSumFor = 0;
            num1 = (int) num2 * -1441263244 ^ 4489922;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      List<UnknownWrap>.Enumerator enumerator = Hand.GetEnumerator();
      try
      {
label_9:
        int num3 = !enumerator.MoveNext() ? 997624555 : (num3 = 514093507);
        UnknownWrap current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1460976217)) % 5U)
          {
            case 0:
              handSumFor += current.GetCardValue();
              num3 = (int) num4 * -1398071092 ^ 1132101892;
              continue;
            case 1:
              current = enumerator.Current;
              num3 = 781091184;
              continue;
            case 3:
              goto label_9;
            case 4:
              num3 = 514093507;
              continue;
            default:
              goto label_16;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_12:
        int num5 = 1114662342;
        while (true)
        {
          uint num6;
          switch ((num6 = (uint) (num5 ^ 1460976217)) % 3U)
          {
            case 0:
              goto label_12;
            case 2:
              num5 = (int) num6 * -592578335 ^ 1386551135;
              continue;
            default:
              goto label_15;
          }
        }
label_15:;
      }
label_16:
      return handSumFor;
    }

    internal bool CheckIdenticalHand(string Who, string HandName)
    {
label_1:
      int num1 = 167143657;
      bool flag1;
      while (true)
      {
        uint num2;
        bool flag2;
        bool flag3;
        bool flag4;
        bool flag5;
        bool flag6;
        bool flag7;
        bool flag8;
        int num3;
        int num4;
        int num5;
        int num6;
        switch ((num2 = (uint) (num1 ^ 750163801)) % 47U)
        {
          case 0:
            num1 = (int) num2 * 722571381 ^ 390570706;
            continue;
          case 1:
            num1 = (int) num2 * 219216886 ^ 1793072445;
            continue;
          case 2:
            flag1 = true;
            num1 = (int) num2 * 1783381119 ^ 423966494;
            continue;
          case 3:
            num1 = 1534784149;
            continue;
          case 4:
            int num7 = flag8 ? -1954892822 : (num7 = -2072100269);
            num1 = num7 ^ (int) num2 * 1755716912;
            continue;
          case 5:
            num3 = BooleanTypeI.\u202E‫‭⁮‬‭‍⁫‭⁫⁮‌⁯‏‬⁯‭‎‍‍⁮​⁮‬⁪‌‍⁭‭‮‮​⁪‪⁪‬⁬‬⁪‏‮(HandName, "Hand1") ? 1 : 0;
            goto label_39;
          case 6:
            int num8 = flag7 ? 1004548109 : (num8 = 143269041);
            num1 = num8 ^ (int) num2 * 1875085028;
            continue;
          case 7:
            num1 = (int) num2 * 619371603 ^ -1881437232;
            continue;
          case 8:
            num1 = 1760638843;
            continue;
          case 9:
            goto label_1;
          case 10:
            flag1 = true;
            num1 = (int) num2 * 453455541 ^ -291783489;
            continue;
          case 11:
            int num9 = flag5 ? 1648993942 : (num9 = 371291927);
            num1 = num9 ^ (int) num2 * -1746270330;
            continue;
          case 12:
            num1 = 1906562409;
            continue;
          case 13:
            flag6 = this.Player.Hand2.ElementAt<UnknownWrap>(0).GetCardValue() == this.Player.Hand2.ElementAt<UnknownWrap>(1).GetCardValue();
            num1 = 892059332;
            continue;
          case 14:
            flag1 = false;
            num1 = 1981897857;
            continue;
          case 15:
            num4 = BooleanTypeI.\u202E‫‭⁮‬‭‍⁫‭⁫⁮‌⁯‏‬⁯‭‎‍‍⁮​⁮‬⁪‌‍⁭‭‮‮​⁪‪⁪‬⁬‬⁪‏‮(HandName, "Hand2") ? 1 : 0;
            break;
          case 16:
            int num10 = !flag4 ? 278334510 : (num10 = 706950169);
            num1 = num10 ^ (int) num2 * -223889047;
            continue;
          case 17:
            int num11 = !flag2 ? 2043453427 : (num11 = 191008832);
            num1 = num11 ^ (int) num2 * -1446532843;
            continue;
          case 18:
            flag1 = false;
            num1 = (int) num2 * 825718745 ^ 1650195149;
            continue;
          case 19:
            int num12 = this.Player.Hand2.Count == 2 ? -1145045796 : (num12 = -1913905858);
            num1 = num12 ^ (int) num2 * 1798273790;
            continue;
          case 20:
            flag1 = true;
            num1 = (int) num2 * 2118972618 ^ 131842263;
            continue;
          case 21:
            int num13 = this.Machine.Hand1.Count == 2 ? -2128630621 : (num13 = -451965175);
            num1 = num13 ^ (int) num2 * -951093818;
            continue;
          case 22:
            flag3 = this.Machine.Hand2.Count != 2;
            num1 = (int) num2 * -1142880640 ^ -741976028;
            continue;
          case 23:
            num5 = BooleanTypeI.\u202E‫‭⁮‬‭‍⁫‭⁫⁮‌⁯‏‬⁯‭‎‍‍⁮​⁮‬⁪‌‍⁭‭‮‮​⁪‪⁪‬⁬‬⁪‏‮(HandName, "Hand1") ? 1 : 0;
            goto label_43;
          case 24:
            if (!BooleanTypeI.\u202E‫‭⁮‬‭‍⁫‭⁫⁮‌⁯‏‬⁯‭‎‍‍⁮​⁮‬⁪‌‍⁭‭‮‮​⁪‪⁪‬⁬‬⁪‏‮(Who, "Machine"))
            {
              num4 = 0;
              break;
            }
            num1 = 2139408677;
            continue;
          case 25:
            flag1 = true;
            num1 = (int) num2 * -315028732 ^ -707534518;
            continue;
          case 26:
            num1 = 343776797;
            continue;
          case 27:
            num1 = (int) num2 * 1548632472 ^ 2077730863;
            continue;
          case 28:
            if (BooleanTypeI.\u202E‫‭⁮‬‭‍⁫‭⁫⁮‌⁯‏‬⁯‭‎‍‍⁮​⁮‬⁪‌‍⁭‭‮‮​⁪‪⁪‬⁬‬⁪‏‮(Who, "Machine"))
            {
              num1 = 308930970;
              continue;
            }
            num5 = 0;
            goto label_43;
          case 29:
            num1 = (int) num2 * -2068143020 ^ 112292909;
            continue;
          case 30:
            flag2 = this.Machine.Hand1.ElementAt<UnknownWrap>(0).GetCardValue() == this.Machine.Hand1.ElementAt<UnknownWrap>(1).GetCardValue();
            num1 = 1954982088;
            continue;
          case 31:
            if (!BooleanTypeI.\u202E‫‭⁮‬‭‍⁫‭⁫⁮‌⁯‏‬⁯‭‎‍‍⁮​⁮‬⁪‌‍⁭‭‮‮​⁪‪⁪‬⁬‬⁪‏‮(Who, "Player"))
            {
              num6 = 0;
              goto label_34;
            }
            else
            {
              num1 = 51603053;
              continue;
            }
          case 32:
            int num14 = this.Player.Hand1.Count == 2 ? -1832944969 : (num14 = -604958897);
            num1 = num14 ^ (int) num2 * -1398032539;
            continue;
          case 33:
            flag1 = false;
            num1 = (int) num2 * -483268792 ^ -43054527;
            continue;
          case 34:
            num1 = (int) num2 * 75321151 ^ 839286836;
            continue;
          case 36:
            if (BooleanTypeI.\u202E‫‭⁮‬‭‍⁫‭⁫⁮‌⁯‏‬⁯‭‎‍‍⁮​⁮‬⁪‌‍⁭‭‮‮​⁪‪⁪‬⁬‬⁪‏‮(Who, "Player"))
            {
              num1 = (int) num2 * -1698059602 ^ 1547419672;
              continue;
            }
            num3 = 0;
            goto label_39;
          case 37:
            flag1 = false;
            num1 = (int) num2 * 1493575596 ^ 377217008;
            continue;
          case 38:
            flag8 = this.Machine.Hand2.ElementAt<UnknownWrap>(0).GetCardValue() == this.Machine.Hand2.ElementAt<UnknownWrap>(1).GetCardValue();
            num1 = 1093139625;
            continue;
          case 39:
            num1 = (int) num2 * -1382380708 ^ 1643058376;
            continue;
          case 40:
            int num15 = flag6 ? -1668194338 : (num15 = -314755661);
            num1 = num15 ^ (int) num2 * 1403955533;
            continue;
          case 41:
            flag4 = this.Player.Hand1.ElementAt<UnknownWrap>(0).GetCardValue() == this.Player.Hand1.ElementAt<UnknownWrap>(1).GetCardValue();
            num1 = 1261117240;
            continue;
          case 42:
            flag1 = false;
            num1 = (int) num2 * 1142292419 ^ -1333009381;
            continue;
          case 43:
            num1 = (int) num2 * -1390886667 ^ 552943185;
            continue;
          case 44:
            int num16 = !flag3 ? -103749944 : (num16 = -1925793747);
            num1 = num16 ^ (int) num2 * 162918839;
            continue;
          case 45:
            num1 = (int) num2 * -915277396 ^ 1393626825;
            continue;
          case 46:
            num6 = BooleanTypeI.\u202E‫‭⁮‬‭‍⁫‭⁫⁮‌⁯‏‬⁯‭‎‍‍⁮​⁮‬⁪‌‍⁭‭‮‮​⁪‪⁪‬⁬‬⁪‏‮(HandName, "Hand2") ? 1 : 0;
            goto label_34;
          default:
            goto label_60;
        }
        int num17;
        num1 = num17 = num4 != 0 ? 521181626 : (num17 = 1760638843);
        continue;
label_34:
        int num18;
        num1 = num18 = num6 != 0 ? 403653807 : (num18 = 343776797);
        continue;
label_39:
        flag5 = num3 != 0;
        num1 = 1804786802;
        continue;
label_43:
        flag7 = num5 != 0;
        num1 = 1852468863;
      }
label_60:
      return flag1;
    }

    static bool \u202E‫‭⁮‬‭‍⁫‭⁫⁮‌⁯‏‬⁯‭‎‍‍⁮​⁮‬⁪‌‍⁭‭‮‮​⁪‪⁪‬⁬‬⁪‏‮([In] string obj0, [In] string obj1) => obj0 == obj1;
  }
}
