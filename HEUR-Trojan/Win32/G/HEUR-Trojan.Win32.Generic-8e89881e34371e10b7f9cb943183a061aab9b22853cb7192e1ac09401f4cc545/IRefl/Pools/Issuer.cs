// Decompiled with JetBrains decompiler
// Type: IRefl.Pools.Issuer
// Assembly: IRefl, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A29A65F6-B7ED-422C-83D4-B9EFD61E5F13
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-8e89881e34371e10b7f9cb943183a061aab9b22853cb7192e1ac09401f4cc545.exe

using IRefl.Adapter;
using IRefl.Collections;
using IRefl.Composer;
using IRefl.Definitions;
using IRefl.Lists;
using IRefl.Managers;
using IRefl.Objects;
using IRefl.Wrappers;
using ProjNet.Candidates;
using ProjNet.Services;
using ProjNet.States;
using ProjNet.Structs;
using ProjNet.Templates;
using System.Collections.Generic;

namespace IRefl.Pools
{
  public interface Issuer
  {
    MockStatusService ReadItem(string ident, Reg counter, Reg serv);

    Page PostItem(string ident, double cont, double role, TagStatusService first2);

    Role ConnectItem(string res, Reg selection, string res, List<Strategy> instance2);

    Page CollectItem(string item, double pol, double helper, TagStatusService connection2);

    Reg FindItem(string init);

    Reg SearchItem(string config);

    ReaderItemState FlushItem(
      string last,
      StructTokenizerDef token,
      Initializer tag,
      DispatcherValueManager item2,
      Strategy ident3,
      Strategy param4);

    Initializer IncludeItem(
      string value,
      TestPageOption pred,
      Page template,
      FieldTemplate t2);

    ExpressionStatusService AddItem(
      string setup,
      Reader map,
      Candidate template,
      List<Strategy> instance2);

    Reader CalcItem(string info, TestPageOption selection);

    DispatcherValueManager PublishItem(
      string task,
      StructTokenizerDef counter,
      double res);

    Instance StartItem(
      string instance,
      ReaderItemState result,
      GlobalPrototypeAdapter res,
      TagStatusService param2,
      Strategy item3,
      Strategy asset4);

    GlobalPrototypeAdapter LogoutItem(
      string var1,
      string col,
      List<Config> pool);

    Mapper GetItem(string task, Consumer reg, TagStatusService role, Strategy init2);

    Consumer CloneItem(string param, TestPageOption cfg);
  }
}
