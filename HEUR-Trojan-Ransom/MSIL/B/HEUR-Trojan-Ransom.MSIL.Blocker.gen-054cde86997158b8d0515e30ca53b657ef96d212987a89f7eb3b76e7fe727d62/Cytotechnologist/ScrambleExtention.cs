// Decompiled with JetBrains decompiler
// Type: Cytotechnologist.ScrambleExtention
// Assembly: InternalSi, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: F44F14A9-876B-4F73-A898-F3E4E8A5FAFC
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-054cde86997158b8d0515e30ca53b657ef96d212987a89f7eb3b76e7fe727d62.exe

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Cytotechnologist
{
  public static class ScrambleExtention
  {
    private static readonly Random Random = ScrambleExtention.\u206A⁭‌⁯⁫‮‍⁮‫‪‮‍⁫‍‎‬‌‬⁫‭‎⁭⁫⁪⁫‫⁬‍‍⁪⁯⁬‮‭​‪⁮‌‫‭‮();

    public static void Shuffle<T>(IList<T> list)
    {
label_1:
      int num1 = -1236824578;
      int count;
      T obj;
      int index;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -595817384)) % 12U)
        {
          case 0:
            obj = list[index];
            num1 = (int) num2 * 1091599066 ^ 1667650072;
            continue;
          case 1:
            --count;
            num1 = -88051089;
            continue;
          case 2:
            count = list.Count;
            num1 = (int) num2 * -26582686 ^ -679021698;
            continue;
          case 3:
            num1 = (int) num2 * 1477782377 ^ 1486452557;
            continue;
          case 4:
            list[index] = list[count];
            num1 = (int) num2 * 1012368194 ^ -223681817;
            continue;
          case 5:
            num1 = (int) num2 * 1304835544 ^ 338693162;
            continue;
          case 6:
            int num3;
            num1 = num3 = count <= 1 ? -1247752396 : (num3 = -1896427299);
            continue;
          case 7:
            index = ScrambleExtention.\u206A‌‎‭‪‏⁮⁬⁭​‪⁭‏⁪‭⁬⁬⁫‫‮⁬‎‍⁭⁭⁬‭‌⁯‏‫⁪​‭‭‫⁯⁭⁯⁭‮(ScrambleExtention.Random, count + 1);
            num1 = (int) num2 * 1399298322 ^ 1261436894;
            continue;
          case 8:
            goto label_3;
          case 9:
            num1 = (int) num2 * 1411337388 ^ -1931831323;
            continue;
          case 10:
            list[count] = obj;
            num1 = (int) num2 * 1971536069 ^ 526152135;
            continue;
          case 11:
            goto label_1;
          default:
            goto label_14;
        }
      }
label_3:
      return;
label_14:;
    }

    static int \u206A‌‎‭‪‏⁮⁬⁭​‪⁭‏⁪‭⁬⁬⁫‫‮⁬‎‍⁭⁭⁬‭‌⁯‏‫⁪​‭‭‫⁯⁭⁯⁭‮([In] Random obj0, [In] int obj1) => obj0.Next(obj1);

    static Random \u206A⁭‌⁯⁫‮‍⁮‫‪‮‍⁫‍‎‬‌‬⁫‭‎⁭⁫⁪⁫‫⁬‍‍⁪⁯⁬‮‭​‪⁮‌‫‭‮() => new Random();
  }
}
