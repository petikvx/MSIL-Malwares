// Decompiled with JetBrains decompiler
// Type: .
// Assembly: file, Version=11.0.0.0, Culture=neutral, PublicKeyToken=71f2cf7c2509b8fe
// MVID: 1F473243-1123-401F-8099-7648B7C34C41
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan-Dropper.Win32.Injector.deqx-3dcf304237ebec8756d9362ccf0259126c1c62ff5c0b09096876be2cdc64ae5a.exe

using \u0001;
using \u0006;
using System;
using System.IO;
using System.Security.Cryptography;

namespace \u0006
{
  internal class \u000E
  {
    [NonSerialized]
    internal static \u0001.\u0001 \u0001;
    public static string \u0001;

    static \u000E() => \u0003.\u0002(typeof (\u000E));

    public static byte[] \u0002(byte[] data, string xmlPublicKey)
    {
      if (\u0089\u0004.\u007E\u009B\u0002((object) xmlPublicKey, \u000E.\u0001(894)))
      {
        \u000E.\u0001 = \u000E.\u0001(899);
        return (byte[]) null;
      }
      if (true)
        goto label_47;
label_3:
      if (true)
        goto label_48;
label_4:
      MemoryStream memoryStream1;
      do
      {
        if (true)
          goto label_49;
label_5:
        continue;
label_49:
        memoryStream1 = (MemoryStream) null;
        goto label_5;
      }
      while (false);
      if (true)
        goto label_50;
label_7:
      RSACryptoServiceProvider cryptoServiceProvider1;
      RijndaelManaged rijndaelManaged1;
      CryptoStream cryptoStream;
      try
      {
        if (true)
        {
label_8:
          RijndaelManaged rijndaelManaged2 = new RijndaelManaged();
          if (true)
            goto label_29;
label_9:
          do
          {
            RSACryptoServiceProvider cryptoServiceProvider2 = new RSACryptoServiceProvider();
            if (true)
              goto label_30;
label_10:
            \u0004\u0004.\u007E\u0097\u0008((object) cryptoServiceProvider1, xmlPublicKey);
            \u0008\u0004.\u007E\u009E\u0008((object) rijndaelManaged1);
            \u0008\u0004.\u007E\u009F\u0008((object) rijndaelManaged1);
            byte[] numArray1 = new byte[48];
            if (true)
              goto label_31;
label_11:
            byte[] numArray2;
            \u001F\u0004.\u009A\u0003((Array) \u0001\u0006.\u007E\u009C\u0008((object) rijndaelManaged1), 0, (Array) numArray2, 0, 32);
            \u001F\u0004.\u009A\u0003((Array) \u0001\u0006.\u007E\u009B\u0008((object) rijndaelManaged1), 0, (Array) numArray2, 32, 16);
            MemoryStream memoryStream2 = new MemoryStream();
            if (true)
              goto label_32;
label_12:
            try
            {
              if (false)
                goto label_15;
label_13:
              byte[] numArray3 = \u0098\u0006.\u007E\u0004\u000E((object) cryptoServiceProvider1, numArray2, false);
              if (true)
                goto label_16;
label_14:
              \u0084\u0006.\u007E\u0003\u0008((object) memoryStream1, (byte) 1);
              goto label_15;
label_16:
              byte[] numArray4 = numArray3;
              goto label_14;
label_15:
              \u0084\u0006.\u007E\u0003\u0008((object) memoryStream1, \u000E\u0005.\u009E\u0003(numArray4.Length / 8));
              \u0083\u0006.\u007E\u0002\u0008((object) memoryStream1, numArray4, 0, numArray4.Length);
              if (false)
                goto label_13;
            }
            catch (CryptographicException ex1)
            {
              try
              {
                byte[] numArray5 = new byte[16];
                if (true)
                  goto label_22;
label_19:
                byte[] numArray6 = new byte[16];
                if (true)
                  goto label_23;
label_20:
                byte[] numArray7;
                \u001F\u0004.\u009A\u0003((Array) \u0001\u0006.\u007E\u009C\u0008((object) rijndaelManaged1), 0, (Array) numArray7, 0, 16);
                byte[] numArray8;
                \u001F\u0004.\u009A\u0003((Array) \u0001\u0006.\u007E\u009C\u0008((object) rijndaelManaged1), 16, (Array) numArray8, 0, 16);
                byte[] numArray9 = \u0098\u0006.\u007E\u0004\u000E((object) cryptoServiceProvider1, numArray7, false);
                if (true)
                  goto label_24;
label_21:
                byte[] numArray10 = \u0098\u0006.\u007E\u0004\u000E((object) cryptoServiceProvider1, numArray8, false);
                byte[] numArray11 = \u0098\u0006.\u007E\u0004\u000E((object) cryptoServiceProvider1, \u0001\u0006.\u007E\u009B\u0008((object) rijndaelManaged1), false);
                \u0084\u0006.\u007E\u0003\u0008((object) memoryStream1, (byte) 2);
                byte[] numArray12;
                \u0084\u0006.\u007E\u0003\u0008((object) memoryStream1, \u000E\u0005.\u009E\u0003(numArray12.Length / 8));
                \u0083\u0006.\u007E\u0002\u0008((object) memoryStream1, numArray12, 0, numArray12.Length);
                \u0083\u0006.\u007E\u0002\u0008((object) memoryStream1, numArray10, 0, numArray10.Length);
                \u0083\u0006.\u007E\u0002\u0008((object) memoryStream1, numArray11, 0, numArray11.Length);
                goto label_26;
label_24:
                numArray12 = numArray9;
                goto label_21;
label_23:
                numArray8 = numArray6;
                goto label_20;
label_22:
                numArray7 = numArray5;
                goto label_19;
              }
              catch (CryptographicException ex2)
              {
                \u000E.\u0001 = \u000E.\u0001(992);
                return (byte[]) null;
              }
            }
label_26:
            continue;
label_32:
            memoryStream1 = memoryStream2;
            goto label_12;
label_31:
            numArray2 = numArray1;
            goto label_11;
label_30:
            cryptoServiceProvider1 = cryptoServiceProvider2;
            goto label_10;
          }
          while (false);
          cryptoStream = new CryptoStream((Stream) memoryStream1, \u0096\u0006.\u007E\u009D\u0008((object) rijndaelManaged1), CryptoStreamMode.Write);
          \u0083\u0006.\u007E\u0002\u0008((object) cryptoStream, data, 0, data.Length);
          goto label_28;
label_29:
          rijndaelManaged1 = rijndaelManaged2;
          if (false)
            goto label_8;
          else
            goto label_9;
        }
label_28:
        \u0008\u0004.\u007E\u0099\u0008((object) cryptoStream);
        return \u0001\u0006.\u007E\u0017\u0008((object) memoryStream1);
      }
      catch (Exception ex)
      {
        if (true)
          \u000E.\u0001 = \u0092\u0004.\u0007\u0003(\u000E.\u0001(1198), \u0019\u0004.\u007E\u0017\u0003((object) ex));
        return (byte[]) null;
      }
      finally
      {
        if (rijndaelManaged1 != null)
          \u0008\u0004.\u007E\u009A\u0008((object) rijndaelManaged1);
        if (cryptoServiceProvider1 != null)
          \u0008\u0004.\u007E\u0096\u0008((object) cryptoServiceProvider1);
        if (true)
        {
          if (memoryStream1 != null)
            \u0008\u0004.\u007E\u009C\u0007((object) memoryStream1);
          if (cryptoStream == null)
            goto label_46;
        }
        if (true)
          \u0008\u0004.\u007E\u009C\u0007((object) cryptoStream);
label_46:;
      }
label_50:
      cryptoStream = (CryptoStream) null;
      goto label_7;
label_48:
      cryptoServiceProvider1 = (RSACryptoServiceProvider) null;
      goto label_4;
label_47:
      rijndaelManaged1 = (RijndaelManaged) null;
      goto label_3;
    }
  }
}
