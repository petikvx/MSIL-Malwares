// Decompiled with JetBrains decompiler
// Type: TYPELIBA.Serialization.CreatorConsumer
// Assembly: TYPELIBA, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 97BB50BA-9882-4DFE-999C-7A4E4B448F1C
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-080eff3ceefca287dc59d176676559ae1aa3f1faec807805114bae214a11f586.exe

using System;
using System.ComponentModel;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Windows.Forms;
using TYPELIBA.Identifiers;
using TYPELIBA.Wrappers;

namespace TYPELIBA.Serialization
{
  public class CreatorConsumer : Form
  {
    private IContainer _ProducerConsumer;
    private TextBox _DispatcherConsumer;
    private TextBox prototypeConsumer;
    private Button merchantConsumer;
    private Label attrConsumer;
    private Label _ModelConsumer;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public CreatorConsumer()
    {
      int num1 = 4;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 4:
              ManagerParamsID.NewExpression();
              num2 = 3;
              continue;
            case 1:
            case 2:
              goto label_1;
            case 3:
              goto label_2;
            case 5:
              goto label_7;
            default:
              goto label_5;
          }
        }
label_1:
        this.PublishError();
        num1 = 5;
        continue;
label_2:
        this._ProducerConsumer = (IContainer) null;
        // ISSUE: explicit constructor call
        base.\u002Ector();
        goto label_1;
label_5:
        num1 = 1;
      }
label_7:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void VisitError(object res, EventArgs connection)
    {
      try
      {
        string text1 = this.prototypeConsumer.Text;
        int num1 = 4;
        while (true)
        {
          int num2;
          string text2;
          switch (num1)
          {
            case 0:
            case 4:
              text2 = this._DispatcherConsumer.Text;
              if (true)
              {
                num1 = 3;
                continue;
              }
              goto label_8;
            case 1:
            case 3:
              MethodProcess.FindConsumer(text1, int.Parse(text2));
              goto case 2;
            case 2:
              int num3 = (int) MessageBox.Show("Update successful.");
              this.prototypeConsumer.Text = "";
              this._DispatcherConsumer.Text = "";
              num2 = 5;
              break;
            case 5:
              goto label_11;
            default:
              num2 = 2;
              break;
          }
          num1 = num2;
        }
label_11:
        return;
label_8:;
      }
      catch (Exception ex)
      {
        int num = (int) MessageBox.Show("Update failed.");
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    protected override void Dispose(bool isreference)
    {
      int num1 = 3;
      if (true)
        goto label_8;
label_1:
label_2:
      base.Dispose(isreference);
      int num2 = 5;
label_7:
      num1 = num2;
label_8:
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 2:
            goto label_1;
          case 1:
          case 4:
            goto label_3;
          case 3:
            if (isreference)
            {
              num1 = 4;
              continue;
            }
            goto label_4;
          case 5:
            goto label_12;
          default:
            goto label_9;
        }
      }
label_3:
      int num3 = this._ProducerConsumer != null ? 1 : 0;
      goto label_5;
label_4:
      num3 = 0;
label_5:
      if (num3 != 0)
      {
        this._ProducerConsumer.Dispose();
        goto label_1;
      }
      else
        goto label_2;
label_12:
      return;
label_9:
      num2 = 0;
      goto label_7;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void PublishError()
    {
      int num1 = 2;
      if (!CreatorConsumer.ResetCreator())
        goto label_6;
label_1:
      this.prototypeConsumer = new TextBox();
      this.merchantConsumer = new Button();
      this.attrConsumer = new Label();
      num1 = 11;
label_6:
      while (true)
      {
        int num2;
        switch (num1)
        {
          case 0:
            this.merchantConsumer.UseVisualStyleBackColor = true;
            this.merchantConsumer.Click += new EventHandler(this.VisitError);
            this.attrConsumer.AutoSize = true;
            this.attrConsumer.Location = new Point(40, 59);
            if (true)
            {
              num1 = 3;
              continue;
            }
            goto case 6;
          case 1:
            this.attrConsumer.TabIndex = 6;
            this.attrConsumer.Text = "Author ID:";
            this._ModelConsumer.AutoSize = true;
            this._ModelConsumer.Location = new Point(60, 28);
            this._ModelConsumer.Name = "label1";
            this._ModelConsumer.Size = new Size(35, 13);
            this._ModelConsumer.TabIndex = 5;
            this._ModelConsumer.Text = "ISBN:";
            this.AutoScaleDimensions = new SizeF(6f, 13f);
            if (true)
            {
              num1 = 7;
              continue;
            }
            goto case 7;
          case 2:
            this._DispatcherConsumer = new TextBox();
            num2 = 9;
            break;
          case 3:
          case 8:
            this.attrConsumer.Name = "label2";
            this.attrConsumer.Size = new Size(55, 13);
            num2 = 1;
            break;
          case 4:
            this.Controls.Add((Control) this._ModelConsumer);
            this.Name = "UpdateAuthorISBN";
            this.Text = "Update AuthorISBN";
            this.ResumeLayout(false);
            this.PerformLayout();
            if (true)
            {
              num1 = 15;
              continue;
            }
            goto case 5;
          case 5:
          case 12:
            this.prototypeConsumer.TabIndex = 8;
            num2 = 14;
            break;
          case 6:
            this.Controls.Add((Control) this.attrConsumer);
            if (CreatorConsumer.RateCreator())
            {
              num1 = 4;
              continue;
            }
            goto case 13;
          case 7:
            this.AutoScaleMode = AutoScaleMode.Font;
            this.ClientSize = new Size(241, 119);
            this.Controls.Add((Control) this._DispatcherConsumer);
            this.Controls.Add((Control) this.prototypeConsumer);
            this.Controls.Add((Control) this.merchantConsumer);
            if (CreatorConsumer.RateCreator())
            {
              num1 = 6;
              continue;
            }
            goto case 0;
          case 9:
            goto label_1;
          case 10:
            this.prototypeConsumer.Size = new Size(100, 20);
            num2 = 12;
            break;
          case 11:
            this._ModelConsumer = new Label();
            this.SuspendLayout();
            this._DispatcherConsumer.Location = new Point(101, 59);
            this._DispatcherConsumer.Name = "AuthorIDTextBox";
            num1 = 13;
            continue;
          case 13:
            this._DispatcherConsumer.Size = new Size(100, 20);
            this._DispatcherConsumer.TabIndex = 9;
            this.prototypeConsumer.Location = new Point(101, 28);
            this.prototypeConsumer.Name = "ISBNTextBox";
            num2 = 10;
            break;
          case 14:
            this.merchantConsumer.Location = new Point(101, 85);
            this.merchantConsumer.Name = "UpdateButton";
            this.merchantConsumer.Size = new Size(75, 23);
            this.merchantConsumer.TabIndex = 7;
            this.merchantConsumer.Text = "Update";
            goto case 0;
          case 15:
            goto label_18;
          default:
            if (!CreatorConsumer.ResetCreator())
            {
              num1 = 0;
              continue;
            }
            goto case 10;
        }
        num1 = num2;
      }
label_18:;
    }

    internal static bool RateCreator() => true;

    internal static bool ResetCreator() => false;
  }
}
