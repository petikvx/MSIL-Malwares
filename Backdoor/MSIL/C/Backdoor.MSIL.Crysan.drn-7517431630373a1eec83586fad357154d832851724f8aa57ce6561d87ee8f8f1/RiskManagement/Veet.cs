// Decompiled with JetBrains decompiler
// Type: RiskManagement.Veet
// Assembly: IRefle, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 09188B70-FC90-4B10-A900-838DE205A659
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\Backdoor.MSIL.Crysan.drn-7517431630373a1eec83586fad357154d832851724f8aa57ce6561d87ee8f8f1.exe

using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.Globalization;
using System.Resources;
using System.Runtime.CompilerServices;

namespace RiskManagement
{
  [GeneratedCode("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
  [DebuggerNonUserCode]
  [CompilerGenerated]
  internal class Veet
  {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;

    internal Veet()
    {
    }

    [EditorBrowsable(EditorBrowsableState.Advanced)]
    internal static ResourceManager ResourceManager
    {
      get
      {
        if (Veet.resourceMan == null)
          Veet.resourceMan = new ResourceManager("RiskManagement.Veet", typeof (Veet).Assembly);
        return Veet.resourceMan;
      }
    }

    [EditorBrowsable(EditorBrowsableState.Advanced)]
    internal static CultureInfo Culture
    {
      get => Veet.resourceCulture;
      set => Veet.resourceCulture = value;
    }

    internal static string Sa => Veet.ResourceManager.GetString(nameof (Sa), Veet.resourceCulture);

    internal static string Xe => Veet.ResourceManager.GetString(nameof (Xe), Veet.resourceCulture);

    internal static string Zr => Veet.ResourceManager.GetString(nameof (Zr), Veet.resourceCulture);
  }
}
