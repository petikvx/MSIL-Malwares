// Decompiled with JetBrains decompiler
// Type: Ó.À
// Assembly: WindowsApplication1, Version=8.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: ED46BCEB-CED4-40B1-868F-E45B7BFC7B90
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Backdoor.Win32.Poison.aec-9345a1ab8f180f6137cf2175af139e78e5c5dd900afb0b82476f38087b658b70.exe

using \u0083Ó;
using System;
using System.Collections;
using System.Runtime.CompilerServices;
using System.Runtime.ConstrainedExecution;
using System.Security;
using System.Threading;

namespace \u0083Ó
{
  internal class \u0083À : Stack
  {
    private static object \u0082Ö = new object();
    internal static \u0083À \u0083ó = new \u0083À();

    [SecuritySafeCritical]
    internal void \u0083(EventHandler _param1)
    {
      bool lockTaken = false;
      RuntimeHelpers.PrepareConstrainedRegions();
      try
      {
        RuntimeHelpers.PrepareConstrainedRegions();
        Monitor.Enter(\u0083À.\u0082Ö, ref lockTaken);
        RuntimeHelpers.PrepareDelegate((Delegate) _param1);
        this.Push((object) _param1);
      }
      finally
      {
        if (lockTaken)
          Monitor.Exit(\u0083À.\u0082Ö);
      }
    }

    [SecurityCritical]
    static \u0083À()
    {
    }

    [SecuritySafeCritical]
    private \u0083À()
    {
      EventHandler eventHandler = new EventHandler(this.\u0081È);
      AppDomain.CurrentDomain.DomainUnload += eventHandler;
      AppDomain.CurrentDomain.ProcessExit += eventHandler;
    }

    [SecurityCritical]
    [PrePrepareMethod]
    private void \u0081È(object _param1, EventArgs _param2)
    {
      bool lockTaken = false;
      RuntimeHelpers.PrepareConstrainedRegions();
      try
      {
        RuntimeHelpers.PrepareConstrainedRegions();
        Monitor.Enter(\u0083À.\u0082Ö, ref lockTaken);
        foreach (EventHandler eventHandler in (Stack) this)
          eventHandler(_param1, _param2);
      }
      finally
      {
        if (lockTaken)
          Monitor.Exit(\u0083À.\u0082Ö);
      }
    }
  }
}
