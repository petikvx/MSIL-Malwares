// Decompiled with JetBrains decompiler
// Type: .
// Assembly: 1m, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 9A9758D8-D673-4760-AFDD-69A3D20C59FF
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00100-msil\Trojan-Ransom.Win32.Blocker.krdt-d2cd288694c5883ae6364f17a60ae3fe9619748d94946bbd3e1ff8ba566b1e0f.exe

using \u0001;
using \u000F;
using System;
using System.IO;
using System.Runtime.CompilerServices;

namespace \u000F
{
  internal class \u0002 : Stream
  {
    protected \u0010.\u0003 \u0001;
    protected byte[] \u0001;
    protected int \u0001;
    private byte[] \u0001 = new byte[1];
    protected Stream \u0001;
    protected byte[] \u0002;
    private uint[] \u0001;
    [NonSerialized]
    internal static \u0013 \u009C;

    public \u0002(Stream _param1)
      : this(_param1, new \u0010.\u0003(), 4096)
    {
    }

    public \u0002(Stream _param1, \u0010.\u0003 _param2)
      : this(_param1, _param2, 4096)
    {
    }

    public \u0002(Stream _param1, \u0010.\u0003 _param2, int _param3)
    {
      this.\u0001 = _param1;
      this.\u0001 = _param2;
      try
      {
        this.\u0001 = (int) _param1.Length;
      }
      catch (Exception ex)
      {
        this.\u0001 = 0;
      }
      this.\u0001 = _param3 > 0 ? new byte[_param3] : throw new ArgumentOutOfRangeException(\u0001.\u0010.\u0001(2031158973, 1543757917, 1037765893));
    }

    [SpecialName]
    public override bool get_CanRead() => this.\u0001.CanRead;

    [SpecialName]
    public override bool get_CanSeek() => this.\u0001.CanSeek;

    [SpecialName]
    public override bool get_CanWrite() => this.\u0001.CanWrite;

    [SpecialName]
    public override long get_Length() => (long) this.\u0001;

    [SpecialName]
    public override long get_Position() => this.\u0001.Position;

    [SpecialName]
    public override void set_Position(long _param1) => this.\u0001.Position = _param1;

    public override void Flush() => this.\u0001.Flush();

    public override long Seek(long _param1, SeekOrigin _param2) => this.\u0001.Seek(_param1, _param2);

    public override void SetLength(long _param1) => this.\u0001.SetLength(_param1);

    public override void Write(byte[] _param1, int _param2, int _param3) => this.\u0001.Write(_param1, _param2, _param3);

    public override void WriteByte(byte _param1) => this.\u0001.WriteByte(_param1);

    [SpecialName]
    public virtual int \u0001() => !this.\u0001.\u0008() ? 1 : 0;

    public override void Close() => this.\u0001.Close();

    protected void \u0001()
    {
      this.\u0001 = this.\u0001.Read(this.\u0001, 0, this.\u0001.Length);
      if (this.\u0002 != null)
        this.\u0001(this.\u0001, 0, this.\u0001.Length);
      if (this.\u0001 <= 0)
        throw new ApplicationException(\u0001.\u0010.\u0001(1177144112, 1543758041, 1037765921));
      this.\u0001.\u0001(this.\u0001, 0, this.\u0001);
    }

    public override int ReadByte() => this.Read(this.\u0001, 0, 1) > 0 ? (int) this.\u0001[0] & (int) byte.MaxValue : -1;

    public override int Read(byte[] _param1, int _param2, int _param3)
    {
      int num;
      while (true)
      {
        try
        {
          num = this.\u0001.\u0002(_param1, _param2, _param3);
        }
        catch (Exception ex)
        {
          throw new \u0003.\u0001(ex.ToString());
        }
        if (num <= 0)
        {
          if (!this.\u0001.\u0007())
          {
            if (!this.\u0001.\u0008())
            {
              if (this.\u0001.\u0006())
                this.\u0001();
              else
                goto label_11;
            }
            else
              goto label_8;
          }
          else
            goto label_6;
        }
        else
          break;
      }
      return num;
label_6:
      throw new \u0003.\u0001(\u0001.\u0010.\u0001(1736344836, 1543758009, 1037765941));
label_8:
      return 0;
label_11:
      throw new InvalidOperationException(\u0001.\u0010.\u0001(674076814, 1543758063, 1037765949));
    }

    public long \u0001(long _param1)
    {
      if (_param1 < 0L)
        throw new ArgumentOutOfRangeException(\u0001.\u0010.\u0001(832486071, 1543757915, 1037765909));
      int length = 2048;
      if (_param1 < (long) length)
        length = (int) _param1;
      byte[] buffer = new byte[length];
      return (long) this.\u0001.Read(buffer, 0, buffer.Length);
    }

    protected byte \u0002()
    {
      uint num = (uint) ((int) this.\u0001[2] & (int) ushort.MaxValue | 2);
      return (byte) (num * (num ^ 1U) >> 8);
    }

    protected void \u0001(byte[] _param1, int _param2, int _param3)
    {
      for (int index = _param2; index < _param2 + _param3; ++index)
      {
        _param1[index] ^= this.\u0002();
        this.\u0001(_param1[index]);
      }
    }

    protected void \u0001(string _param1)
    {
      this.\u0001 = new uint[3]
      {
        305419896U,
        591751049U,
        878082192U
      };
      for (int index = 0; index < _param1.Length; ++index)
        this.\u0001((byte) _param1[index]);
    }

    private uint \u0001(uint _param1, byte _param2) => \u000F.\u0001.\u0001[(IntPtr) (uint) (((int) _param1 ^ (int) _param2) & (int) byte.MaxValue)] ^ _param1 >> 8;

    protected void \u0001(byte _param1)
    {
      this.\u0001[0] = this.\u0001(this.\u0001[0], _param1);
      this.\u0001[1] = this.\u0001[1] + (uint) (byte) this.\u0001[0];
      this.\u0001[1] = (uint) ((int) this.\u0001[1] * 134775813 + 1);
      this.\u0001[2] = this.\u0001(this.\u0001[2], (byte) (this.\u0001[1] >> 24));
    }

    static \u0002() => \u000E.\u0003.\u0001(typeof (\u0002));
  }
}
