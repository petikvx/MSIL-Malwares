// Decompiled with JetBrains decompiler
// Type: System.ServiceModel.Dispatcher.OperationHelpInformation
// Assembly: Microsoft.Transactions.Bridge, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 51116F84-6FE2-4BD6-A908-2C88E06F45BB
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.07\HEUR-Trojan.MSIL.Picsys.gen-d64123468b2dcb11e9205288e0a6cb144a448944457a708807b7345a8a766675.exe

using System.Collections.Generic;
using System.Linq;
using System.ServiceModel.Channels;
using System.ServiceModel.Description;
using System.ServiceModel.Web;

namespace System.ServiceModel.Dispatcher
{
  internal class OperationHelpInformation
  {
    private OperationDescription od;
    private WebHttpBehavior behavior;
    private MessageHelpInformation request;
    private MessageHelpInformation response;

    internal OperationHelpInformation(WebHttpBehavior behavior, OperationDescription od)
    {
      this.od = od;
      this.behavior = behavior;
    }

    public string Name => this.od.Name;

    public string UriTemplate => UriTemplateClientFormatter.GetUTStringOrDefault(this.od);

    public string Method => WebHttpBehavior.GetWebMethod(this.od);

    public string Description => WebHttpBehavior.GetDescription(this.od);

    public string JavascriptCallbackParameterName => this.Response.SupportsJson && this.Method == "GET" ? this.behavior.JavascriptCallbackParameterName : (string) null;

    public WebMessageBodyStyle BodyStyle => this.behavior.GetBodyStyle(this.od);

    public MessageHelpInformation Request
    {
      get
      {
        if (this.request == null)
          this.request = new MessageHelpInformation(this.od, true, OperationHelpInformation.GetRequestBodyType(this.od, this.UriTemplate), this.BodyStyle == WebMessageBodyStyle.WrappedRequest || this.BodyStyle == WebMessageBodyStyle.Wrapped);
        return this.request;
      }
    }

    public MessageHelpInformation Response
    {
      get
      {
        if (this.response == null)
          this.response = new MessageHelpInformation(this.od, false, OperationHelpInformation.GetResponseBodyType(this.od), this.BodyStyle == WebMessageBodyStyle.WrappedResponse || this.BodyStyle == WebMessageBodyStyle.Wrapped);
        return this.response;
      }
    }

    private static System.Type GetResponseBodyType(OperationDescription od)
    {
      if (WebHttpBehavior.IsUntypedMessage(od.Messages[1]))
        return typeof (Message);
      if (WebHttpBehavior.IsTypedMessage(od.Messages[1]))
        return od.Messages[1].MessageType;
      return od.Messages[1].Body.Parts.Count > 0 ? (System.Type) null : od.Messages[1].Body.ReturnValue.Type;
    }

    private static System.Type GetRequestBodyType(OperationDescription od, string uriTemplate)
    {
      if (od.Behaviors.Contains(typeof (WebGetAttribute)))
        return typeof (void);
      if (WebHttpBehavior.IsUntypedMessage(od.Messages[0]))
        return typeof (Message);
      if (WebHttpBehavior.IsTypedMessage(od.Messages[0]))
        return od.Messages[0].MessageType;
      System.UriTemplate template = new System.UriTemplate(uriTemplate);
      IEnumerable<MessagePartDescription> source = od.Messages[0].Body.Parts.Where<MessagePartDescription>((Func<MessagePartDescription, bool>) (part => !template.PathSegmentVariableNames.Contains(part.Name.ToUpperInvariant()) && !template.QueryValueVariableNames.Contains(part.Name.ToUpperInvariant())));
      if (source.Count<MessagePartDescription>() == 1)
        return source.First<MessagePartDescription>().Type;
      return source.Count<MessagePartDescription>() == 0 ? typeof (void) : (System.Type) null;
    }
  }
}
