// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: Eviden, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 0FBAEA8D-82D6-42CE-BC01-F979DED3F8E4
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-25002a8f723189cf80ad649d7af9ccf8c389291bb64e2eed7665e7a21823634b.exe

using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) null;
label_1:
        int num1 = 544636651;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 497058094)) % 3U)
          {
            case 1:
              num1 = (int) num2 * -281332582 ^ -1237574309;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 2118927936;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 681346340)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 517571370 ^ 478478513;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual string Value
    {
      get
      {
label_1:
        int num1 = -1211571577;
        string str;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1937403871)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              str = "";
              num1 = (int) num2 * 2068148835 ^ -457685;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return str;
      }
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
label_1:
        int num1 = 1512219955;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 802284276)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -858543011 ^ 957278155;
              continue;
            case 3:
              count = 0;
              num1 = (int) num2 * -140002876 ^ -415211719;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem)
    {
label_1:
      int num1 = 706148248;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 127353666)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            this.Add("", aItem);
            num1 = (int) num2 * -337800865 ^ -91903327;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public virtual JSONNode Remove(string aKey)
    {
label_1:
      int num1 = -1233091;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2136554274)) % 3U)
        {
          case 1:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 482707120 ^ 508556389;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = -555851273;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -888965388)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -118523675 ^ 1498932013;
            continue;
          case 2:
            goto label_1;
          case 3:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 451371644 ^ -715066120;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual JSONNode Remove(JSONNode aNode)
    {
      JSONNode jsonNode = aNode;
label_1:
      int num1 = -1560701958;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2052305617)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 1185274508 ^ 1535269668;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONNode.\u003Cget_Childs\u003Ed__17 getChildsD17 = new JSONNode.\u003Cget_Childs\u003Ed__17(-2);
label_1:
        int num1 = -722602987;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -219230565)) % 3U)
          {
            case 1:
              getChildsD17.\u003C\u003E4__this = this;
              childs = (IEnumerable<JSONNode>) getChildsD17;
              num1 = (int) num2 * -396520921 ^ 1346304805;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return childs;
      }
    }

    public IEnumerable<JSONNode> DeepChilds => (IEnumerable<JSONNode>) new JSONNode.\u003Cget_DeepChilds\u003Ed__19(-2)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString()
    {
label_1:
      int num1 = -1754669938;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1492852369)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            str = nameof (JSONNode);
            num1 = (int) num2 * -729614160 ^ 577384127;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual string ToString(string aPrefix)
    {
label_1:
      int num1 = 526777934;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2118587805)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -136797322 ^ 466341180;
            continue;
          case 3:
            str = nameof (JSONNode);
            num1 = (int) num2 * 1728907869 ^ -2002042992;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public virtual int AsInt
    {
      get
      {
label_1:
        int num1 = -1701202107;
        int result;
        int asInt;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -433096954)) % 9U)
          {
            case 0:
              int num3 = flag ? -603984439 : (num3 = -710764512);
              num1 = num3 ^ (int) num2 * -60952281;
              continue;
            case 1:
              result = 0;
              num1 = (int) num2 * -6741664 ^ 1049133777;
              continue;
            case 3:
              num1 = (int) num2 * -1103752832 ^ -2113173504;
              continue;
            case 4:
              flag = int.TryParse(this.Value, out result);
              num1 = (int) num2 * 1558368650 ^ 243556653;
              continue;
            case 5:
              num1 = (int) num2 * -638749068 ^ 1458926472;
              continue;
            case 6:
              asInt = result;
              num1 = (int) num2 * 501234386 ^ 1440340100;
              continue;
            case 7:
              asInt = 0;
              num1 = -1404458435;
              continue;
            case 8:
              goto label_1;
            default:
              goto label_10;
          }
        }
label_10:
        return asInt;
      }
      set => this.Value = value.ToString();
    }

    public virtual float AsFloat
    {
      get
      {
        float result = 0.0f;
label_1:
        int num1 = -1040415847;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -591201759)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              int num3 = !float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u202D‮⁬‌⁪⁬​⁪‎‪⁮‌⁫⁪‭‎⁬​‫‍⁮‬⁮‎‬‫⁭‪⁮‮‪‍⁪‮⁯‌‏⁯⁫⁫‮(), out result) ? -367201808 : (num3 = -181086780);
              num1 = num3 ^ (int) num2 * 229797248;
              continue;
            case 3:
              asFloat = result;
              num1 = (int) num2 * -827770677 ^ 1604890130;
              continue;
            case 4:
              asFloat = 0.0f;
              num1 = -1194878843;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asFloat;
      }
      set
      {
        this.Value = value.ToString();
label_1:
        int num1 = 914113060;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1132255252)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -1455846850 ^ -598552907;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual double AsDouble
    {
      get
      {
label_1:
        int num1 = 543074195;
        double result;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 85574240)) % 6U)
          {
            case 0:
              asDouble = 0.0;
              num1 = 66514774;
              continue;
            case 2:
              num1 = (int) num2 * 804059486 ^ -45956121;
              continue;
            case 3:
              goto label_1;
            case 4:
              asDouble = result;
              num1 = (int) num2 * 2087092015 ^ -723662709;
              continue;
            case 5:
              result = 0.0;
              int num3 = double.TryParse(this.Value, out result) ? -871654749 : (num3 = -1208841217);
              num1 = num3 ^ (int) num2 * 484522889;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asDouble;
      }
      set
      {
        this.Value = value.ToString();
label_1:
        int num1 = 755951579;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1265670287)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -1167778319 ^ 2059706895;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual bool AsBool
    {
      get
      {
label_1:
        int num1 = -1641223218;
        bool result;
        bool flag;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -906613492)) % 8U)
          {
            case 0:
              asBool = !JSONNode.\u202E‍‬⁭⁫‍‎‌‮‮⁭⁯⁮​⁫‎⁫‍⁮⁮‎‍‌⁯‌⁯‏‌‍‬‎⁫⁮‮‬‫⁮⁬‪‮(this.Value);
              num1 = -776049239;
              continue;
            case 1:
              int num3 = flag ? -221346200 : (num3 = -1043701017);
              num1 = num3 ^ (int) num2 * -1190508205;
              continue;
            case 2:
              result = false;
              flag = bool.TryParse(this.Value, out result);
              num1 = (int) num2 * -1078838754 ^ 891654145;
              continue;
            case 3:
              num1 = (int) num2 * 1370094803 ^ -325711823;
              continue;
            case 5:
              num1 = (int) num2 * 1063313768 ^ -505437792;
              continue;
            case 6:
              goto label_1;
            case 7:
              asBool = result;
              num1 = (int) num2 * -1894856681 ^ -644013618;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asBool;
      }
      set => this.Value = value ? "true" : "false";
    }

    public virtual JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = -1061021086;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1254959776)) % 4U)
          {
            case 1:
              num1 = (int) num2 * -899265169 ^ -1991449925;
              continue;
            case 2:
              asArray = this as JSONArray;
              num1 = (int) num2 * -1414049838 ^ -2115864547;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return asArray;
      }
    }

    public virtual JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = 1503605403;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 574612484)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * 589086240 ^ -1621455507;
              continue;
            case 3:
              asObject = this as JSONClass;
              num1 = (int) num2 * 512687648 ^ -685107582;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s)
    {
label_1:
      int num1 = -194942914;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1488648193)) % 4U)
        {
          case 1:
            jsonNode = (JSONNode) new JSONData(s);
            num1 = (int) num2 * 1382686296 ^ 1180437845;
            continue;
          case 2:
            num1 = (int) num2 * -540136375 ^ 1925376009;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public static implicit operator string(JSONNode d)
    {
label_1:
      int num1 = 1304131371;
      string str1;
      while (true)
      {
        uint num2;
        string str2;
        switch ((num2 = (uint) (num1 ^ 509491678)) % 4U)
        {
          case 0:
            str2 = d.Value;
            break;
          case 1:
            if (!(d == (object) null))
            {
              num1 = (int) num2 * -1828179182 ^ -218470588;
              continue;
            }
            str2 = (string) null;
            break;
          case 2:
            goto label_1;
          default:
            goto label_8;
        }
        str1 = str2;
        num1 = 1406895705;
      }
label_8:
      return str1;
    }

    public static bool operator ==(JSONNode a, object b)
    {
      if (b != null)
        goto label_6;
label_1:
      int num1 = -464260749;
label_2:
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -298303166)) % 6U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 1974713554 ^ 130337940;
            continue;
          case 2:
            flag = true;
            num1 = (int) num2 * -529083252 ^ 995367283;
            continue;
          case 3:
            goto label_5;
          case 5:
            flag = (object) a == b;
            num1 = -79939754;
            continue;
          default:
            goto label_9;
        }
      }
label_5:
      int num3 = a is JSONLazyCreator ? 1 : 0;
      goto label_7;
label_9:
      return flag;
label_6:
      num3 = 0;
label_7:
      num1 = num3 == 0 ? -1928647315 : (num1 = -975099340);
      goto label_2;
    }

    public static bool operator !=(JSONNode a, object b)
    {
      bool flag = !(a == b);
label_1:
      int num1 = 293874464;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1153104123)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1663438199 ^ 1638959310;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = 716672326;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1684073621)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            flag = (object) this == obj;
            num1 = (int) num2 * -824335018 ^ -1950231165;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override int GetHashCode()
    {
      int hashCode = this.\u200D⁫‍‭‏‪⁯⁬‏‍‎‪‍⁮‌‌‌​‭⁫‏‌‍‭‬‏‍‏‮⁮‪‏‏‬⁮⁪⁯‫‏⁪‮();
label_1:
      int num1 = -1021042722;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -895184472)) % 3U)
        {
          case 1:
            num1 = (int) num2 * 729909345 ^ 405671745;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return hashCode;
    }

    internal static string Escape(string aText)
    {
label_1:
      int num1 = 2123746838;
      string str1;
      int num2;
      char ch1;
      string str2;
      char ch2;
      string str3;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 2041589965)) % 31U)
        {
          case 0:
            num1 = (int) num3 * -796648472 ^ -136474787;
            continue;
          case 1:
label_12:
            str1 = JSONNode.\u206C⁫‫‬‍‮‍‭‍‪‍​‬‌‭⁯‬​‫⁫‪‮⁫⁬⁭​‫‪⁬‌‫‫‌‫‮⁫‏‎‪‏‮(str1, "\\f");
            num1 = 745375520;
            continue;
          case 3:
            ch1 = ch2;
            num1 = (int) num3 * -1460932971 ^ 1869330978;
            continue;
          case 4:
            num1 = 1027710224;
            continue;
          case 5:
            str1 = JSONNode.\u206C⁫‫‬‍‮‍‭‍‪‍​‬‌‭⁯‬​‫⁫‪‮⁫⁬⁭​‫‪⁬‌‫‫‌‫‮⁫‏‎‪‏‮(str1, "\\\"");
            num1 = 1851073173;
            continue;
          case 6:
            str3 = str1;
            num1 = (int) num3 * -1403899486 ^ -1419618856;
            continue;
          case 7:
            num2 = 0;
            num1 = (int) num3 * 854948499 ^ -550729113;
            continue;
          case 8:
label_32:
            str1 = JSONNode.\u206C⁫‫‬‍‮‍‭‍‪‍​‬‌‭⁯‬​‫⁫‪‮⁫⁬⁭​‫‪⁬‌‫‫‌‫‮⁫‏‎‪‏‮(str1, "\\r");
            num1 = 1851073173;
            continue;
          case 9:
            num1 = (int) num3 * 117444006 ^ -1521246307;
            continue;
          case 10:
            num1 = (int) num3 * -490950759 ^ -1778526185;
            continue;
          case 11:
label_18:
            str1 = JSONNode.\u206C⁫‫‬‍‮‍‭‍‪‍​‬‌‭⁯‬​‫⁫‪‮⁫⁬⁭​‫‪⁬‌‫‫‌‫‮⁫‏‎‪‏‮(str1, "\\b");
            num1 = 1851073173;
            continue;
          case 12:
            goto label_1;
          case 13:
            ++num2;
            num1 = (int) num3 * -958728591 ^ -1119586621;
            continue;
          case 14:
            ch2 = JSONNode.\u206E‎‎​⁫⁬‏‬‫‮‍⁪‎‌⁫⁫⁪⁮‎‌​‬⁪⁯‌‌‎⁪‏⁪⁫‏‭‏⁯‏⁬‍⁫‍‮(str2, num2);
            num1 = 121783021;
            continue;
          case 15:
            num1 = (int) num3 * -1421364404 ^ 1697725337;
            continue;
          case 16:
            num1 = (int) num3 * 1068310150 ^ -1077147209;
            continue;
          case 17:
            num1 = (int) num3 * 1562557359 ^ 2137861822;
            continue;
          case 18:
            num1 = (int) num3 * 1639169332 ^ -1948202626;
            continue;
          case 19:
            str1 = "";
            num1 = (int) num3 * -117353455 ^ -1918946390;
            continue;
          case 20:
            num1 = (int) num3 * -981047130 ^ 408428798;
            continue;
          case 21:
            str2 = aText;
            num1 = (int) num3 * 1380233494 ^ -218258995;
            continue;
          case 22:
label_20:
            str1 = JSONNode.\u206C⁫‫‬‍‮‍‭‍‪‍​‬‌‭⁯‬​‫⁫‪‮⁫⁬⁭​‫‪⁬‌‫‫‌‫‮⁫‏‎‪‏‮(str1, "\\t");
            num1 = 1447262294;
            continue;
          case 23:
label_3:
            str1 = JSONNode.\u206C⁫‫‬‍‮‍‭‍‪‍​‬‌‭⁯‬​‫⁫‪‮⁫⁬⁭​‫‪⁬‌‫‫‌‫‮⁫‏‎‪‏‮(str1, "\\n");
            num1 = 1442709429;
            continue;
          case 24:
            switch (ch1)
            {
              case '\b':
                goto label_18;
              case '\t':
                goto label_20;
              case '\n':
                goto label_3;
              case '\v':
                goto label_10;
              case '\f':
                goto label_12;
              case '\r':
                goto label_32;
              default:
                num1 = (int) num3 * 329959386 ^ 1534847190;
                continue;
            }
          case 25:
            int num4;
            num1 = num4 = ch1 == '\\' ? 1303492552 : (num4 = 1795163214);
            continue;
          case 26:
            int num5;
            num1 = num5 = ch1 != '"' ? 104675126 : (num5 = 1331711950);
            continue;
          case 27:
label_10:
            str1 = JSONNode.\u206C⁫‫‬‍‮‍‭‍‪‍​‬‌‭⁯‬​‫⁫‪‮⁫⁬⁭​‫‪⁬‌‫‫‌‫‮⁫‏‎‪‏‮(str1, ch2.ToString());
            num1 = 1301932572;
            continue;
          case 28:
            str1 = JSONNode.\u206C⁫‫‬‍‮‍‭‍‪‍​‬‌‭⁯‬​‫⁫‪‮⁫⁬⁭​‫‪⁬‌‫‫‌‫‮⁫‏‎‪‏‮(str1, "\\\\");
            num1 = 1851073173;
            continue;
          case 29:
            int num6;
            num1 = num6 = num2 >= JSONNode.\u202B‪‎‬‮‎⁯‫⁭​‎​‬⁮⁬⁫⁬⁮‭​⁬⁪‎‌⁬‪⁫‭​‭‭‍⁮⁭‮‬‫‪⁭⁬‮(str2) ? 1035646612 : (num6 = 544437883);
            continue;
          case 30:
            num1 = (int) num3 * 1057435961 ^ -1744565459;
            continue;
          default:
            goto label_33;
        }
      }
label_33:
      return str3;
    }

    public static JSONNode Parse(string aJSON)
    {
label_1:
      int num1 = -1978771891;
      bool flag1;
      bool flag2;
      char ch1;
      string aKey;
      bool flag3;
      bool flag4;
      bool flag5;
      JSONNode jsonNode1;
      string aItem;
      bool flag6;
      char ch2;
      bool flag7;
      int num2;
      Stack<JSONNode> jsonNodeStack;
      bool flag8;
      char ch3;
      bool flag9;
      bool flag10;
      bool flag11;
      JSONNode jsonNode2;
      bool flag12;
      char ch4;
      char ch5;
      bool flag13;
      bool flag14;
      bool flag15;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -1575690375)) % 155U)
        {
          case 0:
            switch (ch1)
            {
              case 'r':
                goto label_12;
              case 's':
                goto label_127;
              case 't':
                goto label_129;
              case 'u':
                goto label_42;
              default:
                num1 = -286313350;
                continue;
            }
          case 1:
            int num4;
            num1 = num4 = ch2 != '{' ? -667052373 : (num4 = -509458471);
            continue;
          case 2:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            num1 = -161757012;
            continue;
          case 3:
            flag6 = jsonNode1 != (object) null;
            num1 = (int) num3 * 601840704 ^ 1907461193;
            continue;
          case 5:
            num1 = (int) num3 * -2027506522 ^ 1465758982;
            continue;
          case 6:
          case 42:
          case 67:
          case 88:
          case 120:
label_67:
            ++num2;
            num1 = -355974808;
            continue;
          case 7:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 475157905 ^ -1023620388;
            continue;
          case 8:
            flag11 = JSONNode.\u206C‏‏⁭‎‌‮​‍⁭⁬⁪‪⁬‭⁮‏⁫⁯‏‏‬⁫‏‏‌⁮‪⁬‫⁪‬‫⁭‫⁫‪‪‍‏‮(aKey, "");
            num1 = -542254492;
            continue;
          case 9:
            goto label_138;
          case 10:
label_81:
            int num5;
            num1 = num5 = !flag4 ? -743022580 : (num5 = -718608588);
            continue;
          case 11:
label_129:
            aItem = JSONNode.\u206C⁫‫‬‍‮‍‭‍‪‍​‬‌‭⁯‬​‫⁫‪‮⁫⁬⁭​‫‪⁬‌‫‫‌‫‮⁫‏‎‪‏‮(aItem, "\t");
            num1 = -1935966522;
            continue;
          case 12:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 1412974071 ^ 1047685462;
            continue;
          case 13:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 850842468 ^ -1138675373;
            continue;
          case 14:
            switch (ch2)
            {
              case '[':
                goto label_55;
              case '\\':
                goto label_134;
              case ']':
                goto label_97;
              default:
                num1 = -1375368774;
                continue;
            }
          case 15:
            flag8 = jsonNodeStack.Count > 0;
            num1 = (int) num3 * 1454210752 ^ -1689856986;
            continue;
          case 16:
            int num6 = flag6 ? -304761307 : (num6 = -765380746);
            num1 = num6 ^ (int) num3 * -1522399494;
            continue;
          case 17:
            goto label_1;
          case 18:
            string str1 = aItem;
            ch3 = JSONNode.\u206E‎‎​⁫⁬‏‬‫‮‍⁪‎‌⁫⁫⁪⁮‎‌​‬⁪⁯‌‌‎⁪‏⁪⁫‏‭‏⁯‏⁬‍⁫‍‮(aJSON, num2);
            string str2 = ch3.ToString();
            aItem = JSONNode.\u206C⁫‫‬‍‮‍‭‍‪‍​‬‌‭⁯‬​‫⁫‪‮⁫⁬⁭​‫‪⁬‌‫‫‌‫‮⁫‏‎‪‏‮(str1, str2);
            num1 = (int) num3 * 2065561281 ^ 1335286351;
            continue;
          case 19:
            flag3 = JSONNode.\u206C‏‏⁭‎‌‮​‍⁭⁬⁪‪⁬‭⁮‏⁫⁯‏‏‬⁫‏‏‌⁮‪⁬‫⁪‬‫⁭‫⁫‪‪‍‏‮(aKey, "");
            num1 = -1619835700;
            continue;
          case 20:
            string str3 = aItem;
            ch3 = JSONNode.\u206E‎‎​⁫⁬‏‬‫‮‍⁪‎‌⁫⁫⁪⁮‎‌​‬⁪⁯‌‌‎⁪‏⁪⁫‏‭‏⁯‏⁬‍⁫‍‮(aJSON, num2);
            string str4 = ch3.ToString();
            aItem = JSONNode.\u206C⁫‫‬‍‮‍‭‍‪‍​‬‌‭⁯‬​‫⁫‪‮⁫⁬⁭​‫‪⁬‌‫‫‌‫‮⁫‏‎‪‏‮(str3, str4);
            num1 = (int) num3 * 1853265887 ^ 1610187813;
            continue;
          case 21:
            num1 = -792398081;
            continue;
          case 22:
            int num7 = !flag7 ? -1529177758 : (num7 = -151501370);
            num1 = num7 ^ (int) num3 * 1270213019;
            continue;
          case 23:
label_64:
            string str5 = aItem;
            ch3 = JSONNode.\u206E‎‎​⁫⁬‏‬‫‮‍⁪‎‌⁫⁫⁪⁮‎‌​‬⁪⁯‌‌‎⁪‏⁪⁫‏‭‏⁯‏⁬‍⁫‍‮(aJSON, num2);
            string str6 = ch3.ToString();
            aItem = JSONNode.\u206C⁫‫‬‍‮‍‭‍‪‍​‬‌‭⁯‬​‫⁫‪‮⁫⁬⁭​‫‪⁬‌‫‫‌‫‮⁫‏‎‪‏‮(str5, str6);
            num1 = -330350568;
            continue;
          case 24:
            ch5 = JSONNode.\u206E‎‎​⁫⁬‏‬‫‮‍⁪‎‌⁫⁫⁪⁮‎‌​‬⁪⁯‌‌‎⁪‏⁪⁫‏‭‏⁯‏⁬‍⁫‍‮(aJSON, num2);
            num1 = (int) num3 * 1067587795 ^ -503264821;
            continue;
          case 25:
            num1 = (int) num3 * -960360399 ^ 514716414;
            continue;
          case 26:
            aItem = "";
            num1 = (int) num3 * 597549257 ^ 948864770;
            continue;
          case 27:
            num1 = (int) num3 * -1433556166 ^ 1476502114;
            continue;
          case 28:
label_12:
            aItem = JSONNode.\u206C⁫‫‬‍‮‍‭‍‪‍​‬‌‭⁯‬​‫⁫‪‮⁫⁬⁭​‫‪⁬‌‫‫‌‫‮⁫‏‎‪‏‮(aItem, "\r");
            num1 = -1827707826;
            continue;
          case 29:
            int num8;
            num1 = num8 = !JSONNode.\u206C‏‏⁭‎‌‮​‍⁭⁬⁪‪⁬‭⁮‏⁫⁯‏‏‬⁫‏‏‌⁮‪⁬‫⁪‬‫⁭‫⁫‪‪‍‏‮(aItem, "") ? -2000408715 : (num8 = -2043999628);
            continue;
          case 30:
            int num9 = flag3 ? 1973260447 : (num9 = 624637358);
            num1 = num9 ^ (int) num3 * -586660835;
            continue;
          case 31:
            num1 = -1332590947;
            continue;
          case 32:
            int num10 = flag12 ? -1465464017 : (num10 = -1843488829);
            num1 = num10 ^ (int) num3 * -756655900;
            continue;
          case 33:
            num1 = (int) num3 * -2095338659 ^ -864632515;
            continue;
          case 34:
            flag13 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 430279490 ^ -327005919;
            continue;
          case 35:
            num1 = (int) num3 * 1619174023 ^ 1252357115;
            continue;
          case 36:
            int num11 = !flag5 ? 356382462 : (num11 = 1864804114);
            num1 = num11 ^ (int) num3 * -665817448;
            continue;
          case 37:
            int num12 = flag2 ? -1893783471 : (num12 = -13735660);
            num1 = num12 ^ (int) num3 * 1030413241;
            continue;
          case 38:
            num1 = (int) num3 * -37290379 ^ -1201986470;
            continue;
          case 39:
            int num13 = jsonNode1 != (object) null ? 44959507 : (num13 = 1741743985);
            num1 = num13 ^ (int) num3 * -263196728;
            continue;
          case 40:
            num1 = (int) num3 * -195171533 ^ -247753347;
            continue;
          case 41:
            aItem = JSONNode.\u206C⁫‫‬‍‮‍‭‍‪‍​‬‌‭⁯‬​‫⁫‪‮⁫⁬⁭​‫‪⁬‌‫‫‌‫‮⁫‏‎‪‏‮(aItem, "\f");
            num1 = -1935966522;
            continue;
          case 43:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num1 = -670281000;
            continue;
          case 44:
            flag15 = flag4;
            num1 = -340361259;
            continue;
          case 45:
            num1 = -1835748330;
            continue;
          case 46:
            num1 = (int) num3 * 658617836 ^ -1751772424;
            continue;
          case 47:
            aItem = JSONNode.\u206C⁫‫‬‍‮‍‭‍‪‍​‬‌‭⁯‬​‫⁫‪‮⁫⁬⁭​‫‪⁬‌‫‫‌‫‮⁫‏‎‪‏‮(aItem, "\n");
            num1 = -1935966522;
            continue;
          case 48:
            int num14 = !JSONNode.\u206C‏‏⁭‎‌‮​‍⁭⁬⁪‪⁬‭⁮‏⁫⁯‏‏‬⁫‏‏‌⁮‪⁬‫⁪‬‫⁭‫⁫‪‪‍‏‮(aItem, "") ? 205587358 : (num14 = 475318877);
            num1 = num14 ^ (int) num3 * -1279596720;
            continue;
          case 49:
            int num15 = ch2 <= ' ' ? 324452537 : (num15 = 863660684);
            num1 = num15 ^ (int) num3 * -1748343510;
            continue;
          case 50:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 854572186 ^ -857580531;
            continue;
          case 51:
            num1 = (int) num3 * 273019956 ^ 1257527487;
            continue;
          case 52:
            num1 = (int) num3 * 117212254 ^ 857910578;
            continue;
          case 53:
            goto label_147;
          case 54:
            aItem = "";
            num1 = (int) num3 * -186099439 ^ -1517696119;
            continue;
          case 55:
            num1 = (int) num3 * 555508353 ^ -2127031295;
            continue;
          case 56:
            aKey = JSONNode.\u200E‭‬‭‍⁮⁯‪‪​⁮⁬‭⁮​‬‭‎‬⁪‎⁪‎‌⁬‬‍‪⁬‭⁬‬‎‫​⁪⁬‬‬⁫‮(aKey);
            num1 = (int) num3 * 16594072 ^ 1694950715;
            continue;
          case 57:
            jsonNodeStack.Pop();
            num1 = -993959431;
            continue;
          case 58:
            int num16;
            num1 = num16 = !JSONNode.\u206C‏‏⁭‎‌‮​‍⁭⁬⁪‪⁬‭⁮‏⁫⁯‏‏‬⁫‏‏‌⁮‪⁬‫⁪‬‫⁭‫⁫‪‪‍‏‮(aKey, "") ? -635014508 : (num16 = -1567584597);
            continue;
          case 59:
            aKey = "";
            aItem = "";
            num1 = -1848259226;
            continue;
          case 60:
            ch1 = ch4;
            int num17 = ch1 > 'f' ? -2130999443 : (num17 = -137956383);
            num1 = num17 ^ (int) num3 * 1651262978;
            continue;
          case 61:
            num1 = -2000408715;
            continue;
          case 62:
            num1 = (int) num3 * 2053031393 ^ 789393821;
            continue;
          case 63:
            int num18 = !flag8 ? 1194982748 : (num18 = 2025629813);
            num1 = num18 ^ (int) num3 * -1949369377;
            continue;
          case 64:
            int num19;
            num1 = num19 = num2 >= JSONNode.\u202B‪‎‬‮‎⁯‫⁭​‎​‬⁮⁬⁫⁬⁮‭​⁬⁪‎‌⁬‪⁫‭​‭‭‍⁮⁭‮‬‫‪⁭⁬‮(aJSON) ? -382952629 : (num19 = -1217013316);
            continue;
          case 65:
label_97:
            flag12 = flag4;
            num1 = -392575624;
            continue;
          case 66:
            num1 = (int) num3 * -1701410813 ^ 1579058373;
            continue;
          case 68:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -523368900 ^ 365718444;
            continue;
          case 69:
            aKey = "";
            aItem = "";
            jsonNode1 = jsonNodeStack.Peek();
            num1 = -521118162;
            continue;
          case 70:
            num1 = (int) num3 * -458500335 ^ 1398561233;
            continue;
          case 71:
            string str7 = aItem;
            ch3 = JSONNode.\u206E‎‎​⁫⁬‏‬‫‮‍⁪‎‌⁫⁫⁪⁮‎‌​‬⁪⁯‌‌‎⁪‏⁪⁫‏‭‏⁯‏⁬‍⁫‍‮(aJSON, num2);
            string str8 = ch3.ToString();
            aItem = JSONNode.\u206C⁫‫‬‍‮‍‭‍‪‍​‬‌‭⁯‬​‫⁫‪‮⁫⁬⁭​‫‪⁬‌‫‫‌‫‮⁫‏‎‪‏‮(str7, str8);
            num1 = (int) num3 * 1165288655 ^ 607151168;
            continue;
          case 72:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * 1826311911 ^ 62227265;
            continue;
          case 73:
            int num20 = !flag9 ? -275850270 : (num20 = -881047822);
            num1 = num20 ^ (int) num3 * 371532493;
            continue;
          case 74:
            flag14 = flag4;
            num1 = -540942425;
            continue;
          case 75:
            int num21 = flag14 ? 1621103192 : (num21 = 1006287071);
            num1 = num21 ^ (int) num3 * 751438437;
            continue;
          case 76:
            flag7 = flag4;
            num1 = (int) num3 * 360961195 ^ -747586335;
            continue;
          case 77:
            num1 = (int) num3 * 599392084 ^ -1504036750;
            continue;
          case 78:
            int num22 = ch2 != ':' ? 692998580 : (num22 = 633173611);
            num1 = num22 ^ (int) num3 * 2112496051;
            continue;
          case 79:
label_42:
            string s = JSONNode.\u202B‪⁪‬‌⁬‭‮‏⁪‎‏⁪‮‌‎⁪‪⁭⁯‮‫‪‍‭⁬‬‮⁪‫⁪⁯‏‌‌‫⁮‌⁬‬‮(aJSON, num2 + 1, 4);
            string str9 = aItem;
            ch3 = (char) int.Parse(s, NumberStyles.AllowHexSpecifier);
            string str10 = ch3.ToString();
            aItem = JSONNode.\u206C⁫‫‬‍‮‍‭‍‪‍​‬‌‭⁯‬​‫⁫‪‮⁫⁬⁭​‫‪⁬‌‫‫‌‫‮⁫‏‎‪‏‮(str9, str10);
            num1 = -1415219280;
            continue;
          case 80:
            int num23;
            num1 = num23 = ch2 == ',' ? -318283577 : (num23 = -905363215);
            continue;
          case 81:
            int num24;
            num1 = num24 = ch2 > ']' ? -308520421 : (num24 = -37467608);
            continue;
          case 82:
            int num25 = !flag10 ? 907534676 : (num25 = 492650147);
            num1 = num25 ^ (int) num3 * -296557709;
            continue;
          case 83:
            aKey = aItem;
            num1 = -1573821004;
            continue;
          case 84:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 1395896920 ^ 1786529635;
            continue;
          case 85:
            num1 = (int) num3 * -1158860989 ^ -1953612052;
            continue;
          case 86:
            num1 = (int) num3 * 290906076 ^ -1693824509;
            continue;
          case 87:
            int num26 = ch2 > ',' ? 902200153 : (num26 = 45589247);
            num1 = num26 ^ (int) num3 * 2084574623;
            continue;
          case 89:
            num1 = (int) num3 * -918128845 ^ -168300715;
            continue;
          case 90:
            num2 += 4;
            num1 = (int) num3 * -202761034 ^ -370768864;
            continue;
          case 91:
            num1 = (int) num3 * 983052385 ^ 1799919913;
            continue;
          case 92:
            int num27 = flag15 ? -2031422788 : (num27 = -1819961054);
            num1 = num27 ^ (int) num3 * -1640848559;
            continue;
          case 93:
            aItem = "";
            num1 = (int) num3 * 607563132 ^ 741431906;
            continue;
          case 94:
            int num28;
            num1 = num28 = ch1 != 'n' ? -1252898068 : (num28 = -579228807);
            continue;
          case 95:
            num1 = (int) num3 * -746797107 ^ -226820989;
            continue;
          case 96:
            num1 = -669671911;
            continue;
          case 97:
            int num29 = !(jsonNode1 is JSONArray) ? -866488684 : (num29 = -1001788697);
            num1 = num29 ^ (int) num3 * 1505965868;
            continue;
          case 98:
            num1 = (int) num3 * 424934878 ^ 1820154566;
            continue;
          case 99:
            num1 = -420476002;
            continue;
          case 100:
            num1 = (int) num3 * -352112735 ^ -1297984632;
            continue;
          case 101:
            num1 = (int) num3 * 147791622 ^ 1104755562;
            continue;
          case 102:
            int num30;
            num1 = num30 = JSONNode.\u206C‏‏⁭‎‌‮​‍⁭⁬⁪‪⁬‭⁮‏⁫⁯‏‏‬⁫‏‏‌⁮‪⁬‫⁪‬‫⁭‫⁫‪‪‍‏‮(aKey, "") ? -992373243 : (num30 = -690096284);
            continue;
          case 103:
label_134:
            ++num2;
            num1 = -256623804;
            continue;
          case 104:
            string str11 = aItem;
            ch3 = JSONNode.\u206E‎‎​⁫⁬‏‬‫‮‍⁪‎‌⁫⁫⁪⁮‎‌​‬⁪⁯‌‌‎⁪‏⁪⁫‏‭‏⁯‏⁬‍⁫‍‮(aJSON, num2);
            string str12 = ch3.ToString();
            aItem = JSONNode.\u206C⁫‫‬‍‮‍‭‍‪‍​‬‌‭⁯‬​‫⁫‪‮⁫⁬⁭​‫‪⁬‌‫‫‌‫‮⁫‏‎‪‏‮(str11, str12);
            num1 = (int) num3 * 1716246487 ^ 1085182887;
            continue;
          case 105:
            aKey = JSONNode.\u200E‭‬‭‍⁮⁯‪‪​⁮⁬‭⁮​‬‭‎‬⁪‎⁪‎‌⁬‬‍‪⁬‭⁬‬‎‫​⁪⁬‬‬⁫‮(aKey);
            num1 = (int) num3 * -1438916083 ^ 1126393279;
            continue;
          case 106:
            num1 = (int) num3 * 1487494448 ^ -2052993746;
            continue;
          case 107:
            num1 = (int) num3 * 1729213657 ^ 1011890498;
            continue;
          case 108:
            num1 = (int) num3 * -2080981726 ^ 385946346;
            continue;
          case 109:
            num1 = (int) num3 * 1577679613 ^ -831202183;
            continue;
          case 110:
            aKey = JSONNode.\u200E‭‬‭‍⁮⁯‪‪​⁮⁬‭⁮​‬‭‎‬⁪‎⁪‎‌⁬‬‍‪⁬‭⁬‬‎‫​⁪⁬‬‬⁫‮(aKey);
            flag1 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -1951479575 ^ -557392881;
            continue;
          case 111:
            string str13 = aItem;
            ch3 = JSONNode.\u206E‎‎​⁫⁬‏‬‫‮‍⁪‎‌⁫⁫⁪⁮‎‌​‬⁪⁯‌‌‎⁪‏⁪⁫‏‭‏⁯‏⁬‍⁫‍‮(aJSON, num2);
            string str14 = ch3.ToString();
            aItem = JSONNode.\u206C⁫‫‬‍‮‍‭‍‪‍​‬‌‭⁯‬​‫⁫‪‮⁫⁬⁭​‫‪⁬‌‫‫‌‫‮⁫‏‎‪‏‮(str13, str14);
            num1 = (int) num3 * 953987258 ^ -1621062305;
            continue;
          case 112:
label_127:
            aItem = JSONNode.\u206C⁫‫‬‍‮‍‭‍‪‍​‬‌‭⁯‬​‫⁫‪‮⁫⁬⁭​‫‪⁬‌‫‫‌‫‮⁫‏‎‪‏‮(aItem, ch5.ToString());
            num1 = -312241920;
            continue;
          case 113:
            num1 = (int) num3 * -868993413 ^ -1455710113;
            continue;
          case 114:
            int num31 = flag11 ? 1733515855 : (num31 = 1970601342);
            num1 = num31 ^ (int) num3 * -1661655821;
            continue;
          case 115:
            flag10 = jsonNodeStack.Count == 0;
            num1 = -1041393695;
            continue;
          case 116:
            num1 = (int) num3 * -1874965039 ^ 1471556503;
            continue;
          case 117:
            num1 = (int) num3 * 1276800771 ^ -1813926228;
            continue;
          case 118:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 1178597920 ^ -358246210;
            continue;
          case 119:
            int num32;
            num1 = num32 = ch2 != '"' ? -663756046 : (num32 = -131139480);
            continue;
          case 121:
            string str15 = aItem;
            ch3 = JSONNode.\u206E‎‎​⁫⁬‏‬‫‮‍⁪‎‌⁫⁫⁪⁮‎‌​‬⁪⁯‌‌‎⁪‏⁪⁫‏‭‏⁯‏⁬‍⁫‍‮(aJSON, num2);
            string str16 = ch3.ToString();
            aItem = JSONNode.\u206C⁫‫‬‍‮‍‭‍‪‍​‬‌‭⁯‬​‫⁫‪‮⁫⁬⁭​‫‪⁬‌‫‫‌‫‮⁫‏‎‪‏‮(str15, str16);
            num1 = (int) num3 * -1450554272 ^ 2105193550;
            continue;
          case 122:
            int num33 = ch1 == 'b' ? -1404517363 : (num33 = -1202964292);
            num1 = num33 ^ (int) num3 * 1235596679;
            continue;
          case 123:
            num1 = (int) num3 * -1506125377 ^ -1776352198;
            continue;
          case 124:
            ch4 = ch5;
            num1 = (int) num3 * 1120683540 ^ -1012438827;
            continue;
          case 125:
            num1 = (int) num3 * 1036228060 ^ 1113756494;
            continue;
          case 126:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -323855234 ^ 1624422058;
            continue;
          case (uint) sbyte.MaxValue:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num3 * -1934343192 ^ 269994137;
            continue;
          case 128:
label_55:
            flag2 = flag4;
            num1 = -983576174;
            continue;
          case 129:
            num1 = (int) num3 * 1944314096 ^ 1236246833;
            continue;
          case 130:
            jsonNode2 = jsonNode1;
            num1 = -762212192;
            continue;
          case 131:
            num1 = (int) num3 * 554761323 ^ -228726763;
            continue;
          case 132:
            int num34;
            num1 = num34 = ch2 != ' ' ? -1091308423 : (num34 = -566396360);
            continue;
          case 133:
            int num35 = !(jsonNode1 is JSONArray) ? 1626004248 : (num35 = 1548591690);
            num1 = num35 ^ (int) num3 * 850670429;
            continue;
          case 134:
            aItem = JSONNode.\u206C⁫‫‬‍‮‍‭‍‪‍​‬‌‭⁯‬​‫⁫‪‮⁫⁬⁭​‫‪⁬‌‫‫‌‫‮⁫‏‎‪‏‮(aItem, "\b");
            num1 = -1935966522;
            continue;
          case 135:
            jsonNodeStack = new Stack<JSONNode>();
            num1 = (int) num3 * -1933187995 ^ -665967086;
            continue;
          case 136:
            int num36;
            num1 = num36 = ch1 == 'f' ? -589925120 : (num36 = -1198513807);
            continue;
          case 137:
            aKey = "";
            num1 = -199524671;
            continue;
          case 138:
            num1 = (int) num3 * -1497950353 ^ -1776524415;
            continue;
          case 139:
            flag5 = flag4;
            num1 = (int) num3 * -471902731 ^ -1727330463;
            continue;
          case 140:
            int num37 = !flag1 ? -927765234 : (num37 = -423568440);
            num1 = num37 ^ (int) num3 * 583196655;
            continue;
          case 141:
            num1 = (int) num3 * 1087877278 ^ 1816915456;
            continue;
          case 142:
            int num38 = flag13 ? 1420266066 : (num38 = 1849494075);
            num1 = num38 ^ (int) num3 * 1722156977;
            continue;
          case 143:
            switch (ch2)
            {
              case '\t':
                goto label_81;
              case '\n':
              case '\r':
                goto label_67;
              case '\v':
              case '\f':
                goto label_64;
              default:
                num1 = (int) num3 * 109801701 ^ 133470350;
                continue;
            }
          case 144:
            aKey = "";
            flag4 = false;
            num1 = (int) num3 * 1864841512 ^ 53192830;
            continue;
          case 145:
            num1 = (int) num3 * 875063190 ^ 1596627126;
            continue;
          case 146:
            flag9 = flag4;
            num1 = -476525578;
            continue;
          case 147:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -176671842 ^ 1177023151;
            continue;
          case 148:
            ch2 = JSONNode.\u206E‎‎​⁫⁬‏‬‫‮‍⁪‎‌⁫⁫⁪⁮‎‌​‬⁪⁯‌‌‎⁪‏⁪⁫‏‭‏⁯‏⁬‍⁫‍‮(aJSON, num2);
            num1 = (int) num3 * 764923240 ^ -828716317;
            continue;
          case 149:
            flag4 = !flag4;
            num1 = -1483704040;
            continue;
          case 150:
            int num39;
            num1 = num39 = ch2 != '}' ? -1033804179 : (num39 = -1113929874);
            continue;
          case 151:
            num1 = (int) num3 * -758943233 ^ 1008819785;
            continue;
          case 152:
            num1 = (int) num3 * -1725680772 ^ 1483096523;
            continue;
          case 153:
            num2 = 0;
            aItem = "";
            num1 = (int) num3 * 1326340593 ^ 546054909;
            continue;
          case 154:
            aKey = "";
            num1 = -1514977229;
            continue;
          default:
            goto label_155;
        }
      }
label_138:
      throw JSONNode.\u202E‪‌‮⁫⁬‏‭‍‭‭⁫‏⁪‫‪‏⁯​⁬‪​⁯‎‮⁮‪‏‫‫⁮⁯‮‌⁮‭⁫‍⁫⁮‮("JSON Parse: Too many closing brackets");
label_147:
      throw JSONNode.\u202E‪‌‮⁫⁬‏‭‍‭‭⁫‏⁪‫‪‏⁯​⁬‪​⁯‎‮⁮‪‏‫‫⁮⁯‮‌⁮‭⁫‍⁫⁮‮("JSON Parse: Quotation marks seems to be messed up.");
label_155:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
label_1:
      int num1 = 1591227871;
      BinaryWriter aWriter;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2019617566)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -234743663 ^ -50658592;
            continue;
          case 2:
            aWriter = JSONNode.\u206C⁮‪⁫⁯⁮‮‬⁪⁬‍‎‬⁮⁯‭‫‭‍‬⁭‍​‍⁬⁫‎‭‬​‍⁪‍⁮‮‬⁯‫⁮‎‮(aData);
            num1 = (int) num2 * -2107503677 ^ -127186924;
            continue;
          case 3:
            goto label_3;
          case 4:
            this.Serialize(aWriter);
            num1 = (int) num2 * 1417755752 ^ 966748895;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u202E‪‌‮⁫⁬‏‭‍‭‭⁫‏⁪‫‪‏⁯​⁬‪​⁯‎‮⁮‪‏‫‫⁮⁯‮‌⁮‭⁫‍⁫⁮‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u202E‪‌‮⁫⁬‏‭‍‭‭⁫‏⁪‫‪‏⁯​⁬‪​⁯‎‮⁮‪‏‫‫⁮⁯‮‌⁮‭⁫‍⁫⁮‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u202E‪‌‮⁫⁬‏‭‍‭‭⁫‏⁪‫‪‏⁯​⁬‪​⁯‎‮⁮‪‏‫‫⁮⁯‮‌⁮‭⁫‍⁫⁮‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
      JSONNode.\u202C‏‮‏​‫‬⁭⁬⁪⁫‏‍‍⁭‬‮‎⁬‭‮‪‏⁮​‫‪⁯‍⁪‏‌⁬‪⁯​⁯⁭‌⁬‮(JSONNode.\u202A​‬⁪‮‎⁪⁯‎‭‮⁭​⁫⁪‬‮‫⁭‏⁭‪⁬‎‬⁭​⁫‍⁮‮‎‭⁯‫⁭⁯⁬‮((FileSystemInfo) JSONNode.\u206C‫‍‫⁭‪‬⁫‫⁭‮‏‪‏‬​​‍‍⁮‎‫⁬‭‬​⁮⁫⁮‮⁪⁬‎⁮⁮‪⁯‮‍‏‮(JSONNode.\u206F​‏‌‬⁪‪⁯⁮​‏‪⁮⁯⁪‬‌⁯​‌‫‍⁫⁪⁯‌​‪⁪‍⁮⁫‭‬⁯⁬‬⁯⁭⁮‮(aFileName))));
      FileStream aData = JSONNode.\u200D⁬⁮⁪⁯‎‬⁮‍‫‌⁭‮⁭‫‌‍‎‍⁪‏‭⁪​‫‮‍‭‪‎‫⁭⁭‏‏‎‬⁪⁯⁭‮(aFileName);
      try
      {
label_2:
        int num1 = -577523971;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1568855632)) % 3U)
          {
            case 0:
              goto label_9;
            case 1:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * 114357704 ^ 1563317722;
              continue;
            case 2:
              goto label_2;
            default:
              goto label_5;
          }
        }
label_9:
        return;
label_5:;
      }
      finally
      {
        if (aData != null)
        {
label_7:
          int num3 = -1959543390;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -1568855632)) % 4U)
            {
              case 0:
                goto label_7;
              case 2:
                JSONNode.\u206E‫‮‮⁪‏⁯‭‌‮‮‫‪‭⁮‫⁬⁬‫⁮⁮‏‎⁪⁬⁭​‬‪‬⁪‭⁫‏⁯‌‎​‍‮((IDisposable) aData);
                num3 = (int) num4 * 546538588 ^ 2020503739;
                continue;
              case 3:
                num3 = (int) num4 * 40961284 ^ -998451203;
                continue;
              default:
                goto label_12;
            }
          }
        }
label_12:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u202B‍⁯‪‬​‍‭⁭‎‍⁯‫‎‫‌‪⁭⁫‪‍⁬‭‫⁮⁯‪‪‮⁬‍‎‍‫‫⁮‪‮⁬‬‮();
      try
      {
label_2:
        int num1 = 1082088076;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1402321048)) % 3U)
          {
            case 0:
              goto label_2;
            case 1:
              this.SaveToStream((Stream) aData);
              JSONNode.\u200F‍‪⁪⁬‌‮‍‮​‪‭⁯⁪‍‌⁭‍‍​‍‪⁯⁮⁯​‫‏‫‌‏‍⁫‫⁮⁬⁯⁪⁫‌‮((Stream) aData, 0L);
              num1 = (int) num2 * 732011704 ^ -1690278232;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return JSONNode.\u202B⁮⁬⁪⁮⁪‫⁮‪‍‍​‪‫⁫⁮‍⁫‎‎‎⁯‏‮⁪‫⁫​‫‎⁪‪⁮‬‎‍‏⁪⁪⁮‮(JSONNode.\u202C​‪‫‫⁫⁯‍‪‫​‌‭‬‮⁯‍‎​‭‪⁫⁬⁮‍​‍‍‏⁪‪⁭‏‏‫‏‎‍⁮⁯‮(aData));
      }
      finally
      {
        if (aData != null)
        {
label_7:
          int num3 = 810005648;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 1402321048)) % 3U)
            {
              case 0:
                goto label_7;
              case 2:
                JSONNode.\u206E‫‮‮⁪‏⁯‭‌‮‮‫‪‭⁮‫⁬⁬‫⁮⁮‏‎⁪⁬⁭​‬‪‬⁪‭⁫‏⁯‌‎​‍‮((IDisposable) aData);
                num3 = (int) num4 * -1420155319 ^ 590134434;
                continue;
              default:
                goto label_10;
            }
          }
        }
label_10:;
      }
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
label_1:
      int num1 = -1658017524;
      JSONBinaryTag jsonBinaryTag1;
      JSONBinaryTag jsonBinaryTag2;
      int num2;
      int num3;
      bool flag;
      JSONNode jsonNode;
      JSONArray jsonArray;
      string aKey;
      JSONNode aItem;
      JSONBinaryTag jsonBinaryTag3;
      JSONClass jsonClass;
      int num4;
      int num5;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ -250318667)) % 40U)
        {
          case 0:
label_27:
            num5 = JSONNode.\u200F⁪‎‍‮⁯​​⁫‍‌⁯‮‏‎​‪‫⁬‭‍‍‪‍⁫⁬‪⁫‍‍‭⁬‭⁮⁫⁫‭⁯‪⁯‮(aReader);
            jsonArray = new JSONArray();
            num1 = -1871125941;
            continue;
          case 1:
            jsonBinaryTag1 = (JSONBinaryTag) JSONNode.\u202B‌‬‪​‬⁯‭⁪​‍‮‌‫‏⁭⁯‮‬⁭‬​⁫⁪‎‍‏⁪⁫‬⁮‭⁪⁭​‍​‍​‏‮(aReader);
            num1 = (int) num6 * -1729772460 ^ 1336318479;
            continue;
          case 2:
            num1 = (int) num6 * -293005366 ^ 412277217;
            continue;
          case 3:
label_30:
            num1 = -876311526;
            continue;
          case 4:
            num2 = 0;
            num1 = (int) num6 * -672892211 ^ 443052;
            continue;
          case 5:
label_41:
            num1 = -152016380;
            continue;
          case 6:
            aKey = JSONNode.\u202C⁯⁭​⁬‫⁫​‏⁭‫‪⁫⁯‪⁬‭‏⁭⁮‌‭‪‫⁫⁯‍‮‏‎‬‬‫‍⁮⁮‏‍‮‪‮(aReader);
            aItem = JSONNode.Deserialize(aReader);
            num1 = -1721484262;
            continue;
          case 7:
            jsonClass.Add(aKey, aItem);
            num1 = (int) num6 * -1854097235 ^ 1757805900;
            continue;
          case 8:
            ++num2;
            num1 = (int) num6 * -2121903005 ^ -436415064;
            continue;
          case 9:
label_22:
            num1 = -1164332369;
            continue;
          case 10:
            goto label_1;
          case 11:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200C⁮‮‍‪‭⁬‎‮‌⁪‍⁯‬⁬‮⁬‫‮‬⁭⁬‍‏‮‮⁯‎‍‪‏‬‌‫‏​‌⁬⁯⁭‮(aReader));
            num1 = (int) num6 * -1461099243 ^ -324750479;
            continue;
          case 12:
            num1 = (int) num6 * -1221254230 ^ 2014384729;
            continue;
          case 13:
            flag = num2 < num3;
            num1 = -1832660970;
            continue;
          case 14:
label_23:
            num1 = -355213010;
            continue;
          case 15:
            num1 = (int) num6 * -498668572 ^ 362798970;
            continue;
          case 16:
label_37:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200F⁪‎‍‮⁯​​⁫‍‌⁯‮‏‎​‪‫⁬‭‍‍‪‍⁫⁬‪⁫‍‍‭⁬‭⁮⁫⁫‭⁯‪⁯‮(aReader));
            num1 = -197157485;
            continue;
          case 17:
            switch (jsonBinaryTag3)
            {
              case JSONBinaryTag.Array:
                goto label_27;
              case JSONBinaryTag.Class:
                goto label_41;
              case JSONBinaryTag.Value:
                goto label_22;
              case JSONBinaryTag.IntValue:
                goto label_37;
              case JSONBinaryTag.DoubleValue:
                goto label_23;
              case JSONBinaryTag.BoolValue:
                goto label_7;
              case JSONBinaryTag.FloatValue:
                goto label_30;
              default:
                num1 = (int) num6 * 569517657 ^ 526454600;
                continue;
            }
          case 18:
            jsonBinaryTag3 = jsonBinaryTag2;
            num1 = (int) num6 * -1425577631 ^ 262009822;
            continue;
          case 19:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * -1745006031 ^ 1634888718;
            continue;
          case 20:
            int num7;
            num1 = num7 = num4 < num5 ? -256333912 : (num7 = -164159176);
            continue;
          case 21:
label_7:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206B⁫‎⁪‌‫​‌⁪‭‬⁮‏‍⁬‪‍⁫‌‍​⁮‫⁭⁯‌⁬​‍‎⁯⁭⁬‎⁭‍⁯‍⁪⁪‮(aReader));
            num1 = -1388270650;
            continue;
          case 22:
            jsonBinaryTag2 = jsonBinaryTag1;
            num1 = (int) num6 * -225393163 ^ 486518177;
            continue;
          case 23:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200C‌‮‭‭‎‍​‎‏⁭⁭⁭⁮‭‍⁮⁭⁮⁮‪‍‎‎‭⁭‏‭⁬⁮⁫⁪⁪‬⁫‮​⁮‫‍‮(aReader));
            num1 = (int) num6 * -179210043 ^ 636343913;
            continue;
          case 24:
            num1 = (int) num6 * -613684358 ^ -1006171647;
            continue;
          case 25:
            jsonClass = new JSONClass();
            num1 = (int) num6 * 2012212186 ^ -1891524917;
            continue;
          case 26:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202C⁯⁭​⁬‫⁫​‏⁭‫‪⁫⁯‪⁬‭‏⁭⁮‌‭‪‫⁫⁯‍‮‏‎‬‬‫‍⁮⁮‏‍‮‪‮(aReader));
            num1 = (int) num6 * -2047771060 ^ -1915985814;
            continue;
          case 27:
            int num8 = flag ? -1254790958 : (num8 = -558664481);
            num1 = num8 ^ (int) num6 * 1682558411;
            continue;
          case 28:
            ++num4;
            num1 = (int) num6 * -637811889 ^ 1716593693;
            continue;
          case 29:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * -1331848327 ^ 1267012031;
            continue;
          case 30:
            num4 = 0;
            num1 = (int) num6 * -1899615521 ^ -498265633;
            continue;
          case 31:
            num1 = (int) num6 * 719983168 ^ -1209298426;
            continue;
          case 32:
            num1 = (int) num6 * 460076077 ^ 1292840774;
            continue;
          case 33:
            num3 = JSONNode.\u200F⁪‎‍‮⁯​​⁫‍‌⁯‮‏‎​‪‫⁬‭‍‍‪‍⁫⁬‪⁫‍‍‭⁬‭⁮⁫⁫‭⁯‪⁯‮(aReader);
            num1 = (int) num6 * -1904443817 ^ -2011301821;
            continue;
          case 34:
            goto label_12;
          case 36:
            num1 = -1162017097;
            continue;
          case 37:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            num1 = -1459764351;
            continue;
          case 38:
            num1 = (int) num6 * 820986068 ^ 1734559934;
            continue;
          case 39:
            num1 = (int) num6 * -1147749354 ^ 321977852;
            continue;
          default:
            goto label_42;
        }
      }
label_12:
      throw JSONNode.\u202E‪‌‮⁫⁬‏‭‍‭‭⁫‏⁪‫‪‏⁯​⁬‪​⁯‎‮⁮‪‏‫‫⁮⁯‮‌⁮‭⁫‍⁫⁮‮(JSONNode.\u206C⁫‫‬‍‮‍‭‍‪‍​‬‌‭⁯‬​‫⁫‪‮⁫⁬⁭​‫‪⁬‌‫‫‌‫‮⁫‏‎‪‏‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag1.ToString()));
label_42:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u202E‪‌‮⁫⁬‏‭‍‭‭⁫‏⁪‫‪‏⁯​⁬‪​⁯‎‮⁮‪‏‫‫⁮⁯‮‌⁮‭⁫‍⁫⁮‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u202E‪‌‮⁫⁬‏‭‍‭‭⁫‏⁪‫‪‏⁯​⁬‪​⁯‎‮⁮‪‏‫‫⁮⁯‮‌⁮‭⁫‍⁫⁮‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u202E‪‌‮⁫⁬‏‭‍‭‭⁫‏⁪‫‪‏⁯​⁬‪​⁯‎‮⁮‪‏‫‫⁮⁯‮‌⁮‭⁫‍⁫⁮‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u202C‫⁮​‎‮⁫‍‫‪‮‎‫⁯⁪⁬‬‭‏‌⁭​‍⁫‍⁭‪‎‬⁬‪‍⁮⁫‌‏‏⁯‍‍‮(aData);
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = -1692577820;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -528533131)) % 3U)
          {
            case 1:
              jsonNode = JSONNode.Deserialize(aReader);
              num1 = (int) num2 * -1503521887 ^ -1997060372;
              continue;
            case 2:
              goto label_2;
            default:
              goto label_10;
          }
        }
      }
      finally
      {
        if (aReader != null)
        {
label_6:
          int num3 = -1784780320;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -528533131)) % 3U)
            {
              case 0:
                goto label_6;
              case 1:
                JSONNode.\u206E‫‮‮⁪‏⁯‭‌‮‮‫‪‭⁮‫⁬⁬‫⁮⁮‏‎⁪⁬⁭​‬‪‬⁪‭⁫‏⁯‌‎​‍‮((IDisposable) aReader);
                num3 = (int) num4 * 1784317630 ^ -159026588;
                continue;
              default:
                goto label_9;
            }
          }
        }
label_9:;
      }
label_10:
      return jsonNode;
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u202C⁫⁬⁭‮‭⁬‪​‏⁮‭‫‎‎⁪⁯⁫‎⁭⁬⁯⁫⁬⁫‮‏‬‍‬‫‮‎⁯‎⁯‪​‏‫‮(aFileName);
      try
      {
        return JSONNode.LoadFromStream((Stream) aData);
      }
      finally
      {
        if (aData != null)
        {
label_3:
          int num1 = 424658172;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ 492395143)) % 3U)
            {
              case 1:
                JSONNode.\u206E‫‮‮⁪‏⁯‭‌‮‮‫‪‭⁮‫⁬⁬‫⁮⁮‏‎⁪⁬⁭​‬‪‬⁪‭⁫‏⁯‌‎​‍‮((IDisposable) aData);
                num1 = (int) num2 * -5446635 ^ 486807995;
                continue;
              case 2:
                goto label_3;
              default:
                goto label_6;
            }
          }
        }
label_6:;
      }
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
      byte[] numArray = JSONNode.\u206E‌⁮⁫‫‭‪⁮⁭⁮⁮‪‌‮⁮​‪‫‫‌⁫‏⁪‭‮‏⁯‏‍‭⁭‫⁮‍‮‍⁬‍‬‎‮(aBase64);
label_1:
      int num1 = -854332432;
      MemoryStream aData;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -606568764)) % 7U)
        {
          case 0:
            JSONNode.\u200F‍‪⁪⁬‌‮‍‮​‪‭⁯⁪‍‌⁭‍‍​‍‪⁯⁮⁯​‫‏‫‌‏‍⁫‫⁮⁬⁯⁪⁫‌‮((Stream) aData, 0L);
            num1 = (int) num2 * -11805422 ^ -844345289;
            continue;
          case 1:
            num1 = (int) num2 * 27834971 ^ 240548457;
            continue;
          case 2:
            goto label_1;
          case 4:
            num1 = (int) num2 * -1269458678 ^ 1000297461;
            continue;
          case 5:
            aData = JSONNode.\u206B⁭‬⁯‬⁫‮‏‫‬‭‫‍⁭‌⁮‫⁪‮‍‭‍‌‏​⁯⁫‎‪⁫‍⁫‌⁫⁪‌‮‫⁪⁬‮(numArray);
            num1 = (int) num2 * 2019456017 ^ 1940947149;
            continue;
          case 6:
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * -1307594489 ^ 2094023344;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      return jsonNode;
    }

    public JSONNode()
    {
label_1:
      int num1 = -557737748;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1678937298)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * -231269525 ^ 1352605830;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static CultureInfo \u202D‮⁬‌⁪⁬​⁪‎‪⁮‌⁫⁪‭‎⁬​‫‍⁮‬⁮‎‬‫⁭‪⁮‮‪‍⁪‮⁯‌‏⁯⁫⁫‮() => CultureInfo.InvariantCulture;

    static bool \u202E‍‬⁭⁫‍‎‌‮‮⁭⁯⁮​⁫‎⁫‍⁮⁮‎‍‌⁯‌⁯‏‌‍‬‎⁫⁮‮‬‫⁮⁬‪‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u200D⁫‍‭‏‪⁯⁬‏‍‎‪‍⁮‌‌‌​‭⁫‏‌‍‭‬‏‍‏‮⁮‪‏‏‬⁮⁪⁯‫‏⁪‮() => base.GetHashCode();

    static char \u206E‎‎​⁫⁬‏‬‫‮‍⁪‎‌⁫⁫⁪⁮‎‌​‬⁪⁯‌‌‎⁪‏⁪⁫‏‭‏⁯‏⁬‍⁫‍‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u206C⁫‫‬‍‮‍‭‍‪‍​‬‌‭⁯‬​‫⁫‪‮⁫⁬⁭​‫‪⁬‌‫‫‌‫‮⁫‏‎‪‏‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u202B‪‎‬‮‎⁯‫⁭​‎​‬⁮⁬⁫⁬⁮‭​⁬⁪‎‌⁬‪⁫‭​‭‭‍⁮⁭‮‬‫‪⁭⁬‮([In] string obj0) => obj0.Length;

    static string \u200E‭‬‭‍⁮⁯‪‪​⁮⁬‭⁮​‬‭‎‬⁪‎⁪‎‌⁬‬‍‪⁬‭⁬‬‎‫​⁪⁬‬‬⁫‮([In] string obj0) => obj0.Trim();

    static bool \u206C‏‏⁭‎‌‮​‍⁭⁬⁪‪⁬‭⁮‏⁫⁯‏‏‬⁫‏‏‌⁮‪⁬‫⁪‬‫⁭‫⁫‪‪‍‏‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u202E‪‌‮⁫⁬‏‭‍‭‭⁫‏⁪‫‪‏⁯​⁬‪​⁯‎‮⁮‪‏‫‫⁮⁯‮‌⁮‭⁫‍⁫⁮‮([In] string obj0) => new Exception(obj0);

    static string \u202B‪⁪‬‌⁬‭‮‏⁪‎‏⁪‮‌‎⁪‪⁭⁯‮‫‪‍‭⁬‬‮⁪‫⁪⁯‏‌‌‫⁮‌⁬‬‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u206C⁮‪⁫⁯⁮‮‬⁪⁬‍‎‬⁮⁯‭‫‭‍‬⁭‍​‍⁬⁫‎‭‬​‍⁪‍⁮‮‬⁯‫⁮‎‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u206F​‏‌‬⁪‪⁯⁮​‏‪⁮⁯⁪‬‌⁯​‌‫‍⁫⁪⁯‌​‪⁪‍⁮⁫‭‬⁯⁬‬⁯⁭⁮‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u206C‫‍‫⁭‪‬⁫‫⁭‮‏‪‏‬​​‍‍⁮‎‫⁬‭‬​⁮⁫⁮‮⁪⁬‎⁮⁮‪⁯‮‍‏‮([In] FileInfo obj0) => obj0.Directory;

    static string \u202A​‬⁪‮‎⁪⁯‎‭‮⁭​⁫⁪‬‮‫⁭‏⁭‪⁬‎‬⁭​⁫‍⁮‮‎‭⁯‫⁭⁯⁬‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u202C‏‮‏​‫‬⁭⁬⁪⁫‏‍‍⁭‬‮‎⁬‭‮‪‏⁮​‫‪⁯‍⁪‏‌⁬‪⁯​⁯⁭‌⁬‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u200D⁬⁮⁪⁯‎‬⁮‍‫‌⁭‮⁭‫‌‍‎‍⁪‏‭⁪​‫‮‍‭‪‎‫⁭⁭‏‏‎‬⁪⁯⁭‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u206E‫‮‮⁪‏⁯‭‌‮‮‫‪‭⁮‫⁬⁬‫⁮⁮‏‎⁪⁬⁭​‬‪‬⁪‭⁫‏⁯‌‎​‍‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u202B‍⁯‪‬​‍‭⁭‎‍⁯‫‎‫‌‪⁭⁫‪‍⁬‭‫⁮⁯‪‪‮⁬‍‎‍‫‫⁮‪‮⁬‬‮() => new MemoryStream();

    static void \u200F‍‪⁪⁬‌‮‍‮​‪‭⁯⁪‍‌⁭‍‍​‍‪⁯⁮⁯​‫‏‫‌‏‍⁫‫⁮⁬⁯⁪⁫‌‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u202C​‪‫‫⁫⁯‍‪‫​‌‭‬‮⁯‍‎​‭‪⁫⁬⁮‍​‍‍‏⁪‪⁭‏‏‫‏‎‍⁮⁯‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u202B⁮⁬⁪⁮⁪‫⁮‪‍‍​‪‫⁫⁮‍⁫‎‎‎⁯‏‮⁪‫⁫​‫‎⁪‪⁮‬‎‍‏⁪⁪⁮‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u202B‌‬‪​‬⁯‭⁪​‍‮‌‫‏⁭⁯‮‬⁭‬​⁫⁪‎‍‏⁪⁫‬⁮‭⁪⁭​‍​‍​‏‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u200F⁪‎‍‮⁯​​⁫‍‌⁯‮‏‎​‪‫⁬‭‍‍‪‍⁫⁬‪⁫‍‍‭⁬‭⁮⁫⁫‭⁯‪⁯‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u202C⁯⁭​⁬‫⁫​‏⁭‫‪⁫⁯‪⁬‭‏⁭⁮‌‭‪‫⁫⁯‍‮‏‎‬‬‫‍⁮⁮‏‍‮‪‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u200C⁮‮‍‪‭⁬‎‮‌⁪‍⁯‬⁬‮⁬‫‮‬⁭⁬‍‏‮‮⁯‎‍‪‏‬‌‫‏​‌⁬⁯⁭‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u206B⁫‎⁪‌‫​‌⁪‭‬⁮‏‍⁬‪‍⁫‌‍​⁮‫⁭⁯‌⁬​‍‎⁯⁭⁬‎⁭‍⁯‍⁪⁪‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u200C‌‮‭‭‎‍​‎‏⁭⁭⁭⁮‭‍⁮⁭⁮⁮‪‍‎‎‭⁭‏‭⁬⁮⁫⁪⁪‬⁫‮​⁮‫‍‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u202C‫⁮​‎‮⁫‍‫‪‮‎‫⁯⁪⁬‬‭‏‌⁭​‍⁫‍⁭‪‎‬⁬‪‍⁮⁫‌‏‏⁯‍‍‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u202C⁫⁬⁭‮‭⁬‪​‏⁮‭‫‎‎⁪⁯⁫‎⁭⁬⁯⁫⁬⁫‮‏‬‍‬‫‮‎⁯‎⁯‪​‏‫‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u206E‌⁮⁫‫‭‪⁮⁭⁮⁮‪‌‮⁮​‪‫‫‌⁫‏⁪‭‮‏⁯‏‍‭⁭‫⁮‍‮‍⁬‍‬‎‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u206B⁭‬⁯‬⁫‮‏‫‬‭‫‍⁭‌⁮‫⁪‮‍‭‍‌‏​⁯⁫‎‪⁫‍⁫‌⁫⁪‌‮‫⁪⁬‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
