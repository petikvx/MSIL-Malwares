// Decompiled with JetBrains decompiler
// Type: 䏢蛭窚쟖叱때淄뚃톜줺땱쯵莮䀉깃ᰫ喝
// Assembly: $77-Venom, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DC8E8704-647D-4CA7-99AB-BB7BE936B486
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.02-msil\HEUR-Trojan.MSIL.Zapchast.gen-2e1eda10e2bbd19418706a23888807e50c0407eb191cc26d541c85279193c3db.exe

using System;
using System.IO;
using System.Net;
using System.Runtime.Serialization.Json;
using System.Text;
using System.Xml;

public static class 䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝
{
  public static readonly string[] \u3195ꙙ\uE547\uE973픥뭥ၫ㑲膥鞯풲ጓ\uE271ޝ鮱㻯\u02DB멜睋\uF84F = new string[247]
  {
    "ad",
    "ae",
    "af",
    "ag",
    "ai",
    "al",
    "am",
    "an",
    "ao",
    "ar",
    "as",
    "at",
    "au",
    "aw",
    "ax",
    "az",
    "ba",
    "bb",
    "bd",
    "be",
    "bf",
    "bg",
    "bh",
    "bi",
    "bj",
    "bm",
    "bn",
    "bo",
    "br",
    "bs",
    "bt",
    "bv",
    "bw",
    "by",
    "bz",
    "ca",
    "catalonia",
    "cc",
    "cd",
    "cf",
    "cg",
    "ch",
    "ci",
    "ck",
    "cl",
    "cm",
    "cn",
    "co",
    "cr",
    "cs",
    "cu",
    "cv",
    "cx",
    "cy",
    "cz",
    "de",
    "dj",
    "dk",
    "dm",
    "do",
    "dz",
    "ec",
    "ee",
    "eg",
    "eh",
    "england",
    "er",
    "es",
    "et",
    "europeanunion",
    "fam",
    "fi",
    "fj",
    "fk",
    "fm",
    "fo",
    "fr",
    "ga",
    "gb",
    "gd",
    "ge",
    "gf",
    "gh",
    "gi",
    "gl",
    "gm",
    "gn",
    "gp",
    "gq",
    "gr",
    "gs",
    "gt",
    "gu",
    "gw",
    "gy",
    "hk",
    "hm",
    "hn",
    "hr",
    "ht",
    "hu",
    "id",
    "ie",
    "il",
    "in",
    "io",
    "iq",
    "ir",
    "is",
    "it",
    "jm",
    "jo",
    "jp",
    "ke",
    "kg",
    "kh",
    "ki",
    "km",
    "kn",
    "kp",
    "kr",
    "kw",
    "ky",
    "kz",
    "la",
    "lb",
    "lc",
    "li",
    "lk",
    "lr",
    "ls",
    "lt",
    "lu",
    "lv",
    "ly",
    "ma",
    "mc",
    "md",
    "me",
    "mg",
    "mh",
    "mk",
    "ml",
    "mm",
    "mn",
    "mo",
    "mp",
    "mq",
    "mr",
    "ms",
    "mt",
    "mu",
    "mv",
    "mw",
    "mx",
    "my",
    "mz",
    "na",
    "nc",
    "ne",
    "nf",
    "ng",
    "ni",
    "nl",
    "no",
    "np",
    "nr",
    "nu",
    "nz",
    "om",
    "pa",
    "pe",
    "pf",
    "pg",
    "ph",
    "pk",
    "pl",
    "pm",
    "pn",
    "pr",
    "ps",
    "pt",
    "pw",
    "py",
    "qa",
    "re",
    "ro",
    "rs",
    "ru",
    "rw",
    "sa",
    "sb",
    "sc",
    "scotland",
    "sd",
    "se",
    "sg",
    "sh",
    "si",
    "sj",
    "sk",
    "sl",
    "sm",
    "sn",
    "so",
    "sr",
    "st",
    "sv",
    "sy",
    "sz",
    "tc",
    "td",
    "tf",
    "tg",
    "th",
    "tj",
    "tk",
    "tl",
    "tm",
    "tn",
    "to",
    "tr",
    "tt",
    "tv",
    "tw",
    "tz",
    "ua",
    "ug",
    "um",
    "us",
    "uy",
    "uz",
    "va",
    "vc",
    "ve",
    "vg",
    "vi",
    "vn",
    "vu",
    "wales",
    "wf",
    "ws",
    "ye",
    "yt",
    "za",
    "zm",
    "zw"
  };

  public static int ImageIndex { get; set; }

  public static \uF6DF\u2352怑ᥙ洵纾䡐\uF152퓚\u2255뮱夫\uE91E\uF33B枭ᵓ祦ᆜ岱鐧 GeoInfo { get; private set; }

  public static DateTime LastLocated { get; private set; }

  public static bool LocationCompleted { get; private set; }

  static 䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝() => 䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.LastLocated = new DateTime(1, 1, 1, 0, 0, 0, DateTimeKind.Utc);

  public static void ꃦ\uEC0Eេ隯ྛ粱틫퍤섩뷏\u2482頾ɔぇ\uF067㓡ꎁ\uEB6Eﱜ㫕()
  {
    TimeSpan timeSpan;
    ref TimeSpan local = ref timeSpan;
    DateTime dateTime = DateTime.UtcNow;
    long ticks1 = dateTime.Ticks;
    dateTime = 䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.LastLocated;
    long ticks2 = dateTime.Ticks;
    long ticks3 = ticks1 - ticks2;
    local = new TimeSpan(ticks3);
    if (timeSpan.TotalMinutes <= 30.0 && 䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.LocationCompleted)
      return;
    䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.㥸鎋\uE637젲\u23E3\u089A쟈ų\u332A\uF872䙈靕茙ܫ맟\uFFFD\uE936彽\uF2D5\uF882();
    if (string.IsNullOrEmpty(䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.GeoInfo.CountryCode) || string.IsNullOrEmpty(䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.GeoInfo.Country))
    {
      䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.ImageIndex = 247;
    }
    else
    {
      for (int index = 0; index < 䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.\u3195ꙙ\uE547\uE973픥뭥ၫ㑲膥鞯풲ጓ\uE271ޝ鮱㻯\u02DB멜睋\uF84F.Length; ++index)
      {
        if (䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.\u3195ꙙ\uE547\uE973픥뭥ၫ㑲膥鞯풲ጓ\uE271ޝ鮱㻯\u02DB멜睋\uF84F[index] == 䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.GeoInfo.CountryCode.ToLower())
        {
          䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.ImageIndex = index;
          break;
        }
      }
    }
  }

  private static void 㥸鎋\uE637젲\u23E3\u089A쟈ų\u332A\uF872䙈靕茙ܫ맟\uFFFD\uE936彽\uF2D5\uF882()
  {
    䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.LocationCompleted = false;
    try
    {
      DataContractJsonSerializer contractJsonSerializer = new DataContractJsonSerializer(typeof (\uF6DF\u2352怑ᥙ洵纾䡐\uF152퓚\u2255뮱夫\uE91E\uF33B枭ᵓ祦ᆜ岱鐧));
      HttpWebRequest httpWebRequest = (HttpWebRequest) WebRequest.Create("http://ip-api.com/json/");
      httpWebRequest.UserAgent = "Mozilla/5.0 (Windows NT 6.3; rv:48.0) Gecko/20100101 Firefox/48.0";
      httpWebRequest.Proxy = (IWebProxy) null;
      httpWebRequest.Timeout = 10000;
      using (HttpWebResponse response = (HttpWebResponse) httpWebRequest.GetResponse())
      {
        using (Stream responseStream = response.GetResponseStream())
        {
          using (StreamReader streamReader = new StreamReader(responseStream))
          {
            using (MemoryStream memoryStream = new MemoryStream(Encoding.UTF8.GetBytes(streamReader.ReadToEnd())))
              䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.GeoInfo = (\uF6DF\u2352怑ᥙ洵纾䡐\uF152퓚\u2255뮱夫\uE91E\uF33B枭ᵓ祦ᆜ岱鐧) contractJsonSerializer.ReadObject((Stream) memoryStream);
          }
        }
      }
      䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.LastLocated = DateTime.UtcNow;
      䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.LocationCompleted = true;
    }
    catch
    {
      䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.\uF42D뼞욘簼ﯹ註쪵䣉哩昇нꝧ讋а\uE7CF\uF6B4箋墟췁ᓿ();
    }
  }

  private static void \uF42D뼞욘簼ﯹ註쪵䣉哩昇нꝧ讋а\uE7CF\uF6B4箋墟췁ᓿ()
  {
    䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.GeoInfo = new \uF6DF\u2352怑ᥙ洵纾䡐\uF152퓚\u2255뮱夫\uE91E\uF33B枭ᵓ祦ᆜ岱鐧();
    try
    {
      HttpWebRequest httpWebRequest = (HttpWebRequest) WebRequest.Create("http://freegeoip.net/xml/");
      httpWebRequest.UserAgent = "Mozilla/5.0 (Windows NT 6.3; rv:48.0) Gecko/20100101 Firefox/48.0";
      httpWebRequest.Proxy = (IWebProxy) null;
      httpWebRequest.Timeout = 10000;
      using (HttpWebResponse response = (HttpWebResponse) httpWebRequest.GetResponse())
      {
        using (Stream responseStream = response.GetResponseStream())
        {
          using (StreamReader streamReader = new StreamReader(responseStream))
          {
            string end = streamReader.ReadToEnd();
            XmlDocument xmlDocument = new XmlDocument();
            xmlDocument.LoadXml(end);
            string innerXml1 = xmlDocument.SelectSingleNode("Response//IP").InnerXml;
            string innerXml2 = xmlDocument.SelectSingleNode("Response//CountryName").InnerXml;
            string innerXml3 = xmlDocument.SelectSingleNode("Response//CountryCode").InnerXml;
            string innerXml4 = xmlDocument.SelectSingleNode("Response//RegionName").InnerXml;
            string innerXml5 = xmlDocument.SelectSingleNode("Response//City").InnerXml;
            string innerXml6 = xmlDocument.SelectSingleNode("Response//TimeZone").InnerXml;
            䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.GeoInfo.Ip = !string.IsNullOrEmpty(innerXml1) ? innerXml1 : "-";
            䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.GeoInfo.Country = !string.IsNullOrEmpty(innerXml2) ? innerXml2 : "Unknown";
            䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.GeoInfo.CountryCode = !string.IsNullOrEmpty(innerXml3) ? innerXml3 : "-";
            䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.GeoInfo.Region = !string.IsNullOrEmpty(innerXml4) ? innerXml4 : "Unknown";
            䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.GeoInfo.City = !string.IsNullOrEmpty(innerXml5) ? innerXml5 : "Unknown";
            䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.GeoInfo.Timezone = !string.IsNullOrEmpty(innerXml6) ? innerXml6 : "Unknown";
            䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.GeoInfo.Isp = "Unknown";
          }
        }
      }
      䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.LastLocated = DateTime.UtcNow;
      䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.LocationCompleted = true;
    }
    catch
    {
      䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.GeoInfo.Country = "Unknown";
      䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.GeoInfo.CountryCode = "-";
      䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.GeoInfo.Region = "Unknown";
      䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.GeoInfo.City = "Unknown";
      䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.GeoInfo.Timezone = "Unknown";
      䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.GeoInfo.Isp = "Unknown";
      䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.LocationCompleted = false;
    }
    if (!string.IsNullOrEmpty(䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.GeoInfo.Ip))
      return;
    䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.籐閖\uFFFD봞\uEB53\uE4CE뺾ђﵶ鸸峊\uE7BF\u1363岓બ\uE647挖㩸赛헴();
  }

  private static void 籐閖\uFFFD봞\uEB53\uE4CE뺾ђﵶ鸸峊\uE7BF\u1363岓બ\uE647挖㩸赛헴()
  {
    string str = "-";
    try
    {
      HttpWebRequest httpWebRequest = (HttpWebRequest) WebRequest.Create("http://api.ipify.org/");
      httpWebRequest.UserAgent = "Mozilla/5.0 (Windows NT 6.3; rv:48.0) Gecko/20100101 Firefox/48.0";
      httpWebRequest.Proxy = (IWebProxy) null;
      httpWebRequest.Timeout = 5000;
      using (HttpWebResponse response = (HttpWebResponse) httpWebRequest.GetResponse())
      {
        using (Stream responseStream = response.GetResponseStream())
        {
          using (StreamReader streamReader = new StreamReader(responseStream))
            str = streamReader.ReadToEnd();
        }
      }
    }
    catch (Exception ex)
    {
    }
    䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.GeoInfo.Ip = str;
  }
}
