// Decompiled with JetBrains decompiler
// Type: 332664520104.569340644249
// Assembly: 087135227926, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
// MVID: 0DB320EA-9C28-4716-BA63-69641BABDE67
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-3283830ccf60d4481608cb301a1e81f6b89bd02ff08e41f6034488bc28baf010.exe

using \u003048520867406;
using \u003053028810657;
using \u003065069248529;
using \u003208825527781;
using \u003226094756440;
using \u003277493558513;
using \u003332664520104;
using \u003384276752884;
using \u003603600525092;
using \u003721960439039;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Globalization;

namespace \u003332664520104
{
  public class \u003569340644249 : \u003068562095717
  {
    public virtual void \u003336865918836(
      \u003632627526011 _param1,
      object _param2,
      \u003131478599170 _param3)
    {
      DataTable dataTable = (DataTable) _param2;
      \u003200975390980 obj1 = _param3.\u003865471240500 as \u003200975390980;
      _param1.\u003163938760233();
      foreach (DataRow row in (InternalDataCollectionBase) dataTable.Rows)
      {
        _param1.\u003038455958685();
        foreach (DataColumn column in (InternalDataCollectionBase) row.Table.Columns)
        {
          object obj2 = row[column];
          if (_param3.\u003410456808839 != \u003012384295359.Ignore || obj2 != null && obj2 != DBNull.Value)
          {
            _param1.\u003210934969267(obj1 != null ? obj1.\u003481711761762(column.ColumnName) : column.ColumnName);
            _param3.\u003003821094014(_param1, obj2);
          }
        }
        _param1.\u003908313152034();
      }
      _param1.\u003081028007003();
    }

    public virtual object \u003164278487325(
      \u003250925846196 _param1,
      Type _param2,
      object _param3,
      \u003131478599170 _param4)
    {
      if (_param1.\u003271751439454 == \u003293768301571.Null)
        return (object) null;
      if (!(_param3 is DataTable dataTable))
        dataTable = _param2 == typeof (DataTable) ? new DataTable() : (DataTable) Activator.CreateInstance(_param2);
      if (_param1.\u003271751439454 == \u003293768301571.PropertyName)
      {
        dataTable.TableName = (string) _param1.\u003255783382022;
        _param1.\u003664293826070();
        if (_param1.\u003271751439454 == \u003293768301571.Null)
          return (object) dataTable;
      }
      if (_param1.\u003271751439454 != \u003293768301571.StartArray)
        throw \u003479281034910.\u003188723322269(_param1, "Unexpected JSON token when reading DataTable. Expected StartArray, got {0}.".\u003212424921759((IFormatProvider) CultureInfo.InvariantCulture, (object) _param1.\u003271751439454));
      _param1.\u003664293826070();
      while (_param1.\u003271751439454 != \u003293768301571.EndArray)
      {
        \u003569340644249.\u003944450347125(_param1, dataTable, _param4);
        _param1.\u003664293826070();
      }
      return (object) dataTable;
    }

    private static void \u003944450347125(
      \u003250925846196 _param0,
      DataTable _param1,
      \u003131478599170 _param2)
    {
      DataRow row = _param1.NewRow();
      _param0.\u003664293826070();
      while (_param0.\u003271751439454 == \u003293768301571.PropertyName)
      {
        string str = (string) _param0.\u003255783382022;
        _param0.\u003664293826070();
        DataColumn column = _param1.Columns[str];
        if (column == null)
        {
          Type dataType = \u003569340644249.\u003484626485886(_param0);
          column = new DataColumn(str, dataType);
          _param1.Columns.Add(column);
        }
        if (column.DataType == typeof (DataTable))
        {
          if (_param0.\u003271751439454 == \u003293768301571.StartArray)
            _param0.\u003664293826070();
          DataTable dataTable = new DataTable();
          while (_param0.\u003271751439454 != \u003293768301571.EndArray)
          {
            \u003569340644249.\u003944450347125(_param0, dataTable, _param2);
            _param0.\u003664293826070();
          }
          row[str] = (object) dataTable;
        }
        else if (column.DataType.IsArray && column.DataType != typeof (byte[]))
        {
          if (_param0.\u003271751439454 == \u003293768301571.StartArray)
            _param0.\u003664293826070();
          List<object> objectList = new List<object>();
          while (_param0.\u003271751439454 != \u003293768301571.EndArray)
          {
            objectList.Add(_param0.\u003255783382022);
            _param0.\u003664293826070();
          }
          Array instance = Array.CreateInstance(column.DataType.GetElementType(), objectList.Count);
          ((ICollection) objectList).CopyTo(instance, 0);
          row[str] = (object) instance;
        }
        else
        {
          object obj = _param0.\u003255783382022 != null ? _param2.\u003939732608842(_param0, column.DataType) ?? (object) DBNull.Value : (object) DBNull.Value;
          row[str] = obj;
        }
        _param0.\u003664293826070();
      }
      row.EndEdit();
      _param1.Rows.Add(row);
    }

    private static Type \u003484626485886(\u003250925846196 _param0)
    {
      \u003293768301571 obj = _param0.\u003271751439454;
      switch (obj)
      {
        case \u003293768301571.StartArray:
          _param0.\u003664293826070();
          return _param0.\u003271751439454 == \u003293768301571.StartObject ? typeof (DataTable) : \u003569340644249.\u003484626485886(_param0).MakeArrayType();
        case \u003293768301571.Integer:
        case \u003293768301571.Float:
        case \u003293768301571.String:
        case \u003293768301571.Boolean:
        case \u003293768301571.Date:
        case \u003293768301571.Bytes:
          return _param0.\u003487642337602;
        case \u003293768301571.Null:
        case \u003293768301571.Undefined:
          return typeof (string);
        default:
          throw \u003479281034910.\u003188723322269(_param0, "Unexpected JSON token when reading DataTable: {0}".\u003212424921759((IFormatProvider) CultureInfo.InvariantCulture, (object) obj));
      }
    }

    public virtual bool \u003927266174191(Type _param1) => typeof (DataTable).IsAssignableFrom(_param1);
  }
}
