// Decompiled with JetBrains decompiler
// Type: NoiseMe.Drags.App.Models.SuperSocket.ProtoBase.FixedHeaderReceiveFilter`1
// Assembly: Stubv2.0, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E945C042-2241-44AF-B826-4AD3FC72B170
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan-Spy.MSIL.Quasar.gen-a3f98ee0a78f039e0a9ea52dba13c713dc46f749512bd7d108cc9c05f57fc93d.exe

namespace NoiseMe.Drags.App.Models.SuperSocket.ProtoBase
{
  public abstract class FixedHeaderReceiveFilter<TPackageInfo> : FixedSizeReceiveFilter<TPackageInfo>
    where TPackageInfo : IPackageInfo
  {
    private bool m_FoundHeader;

    public int HeaderSize { get; private set; }

    protected FixedHeaderReceiveFilter(int headerSize)
      : base(headerSize)
    {
      this.HeaderSize = headerSize;
    }

    protected abstract int GetBodyLengthFromHeader(IBufferStream bufferStream, int length);

    protected override bool CanResolvePackage(IBufferStream bufferStream)
    {
      if (this.m_FoundHeader)
        return true;
      int lengthFromHeader = this.GetBodyLengthFromHeader(bufferStream, this.HeaderSize);
      if (lengthFromHeader < 0)
      {
        this.State = FilterState.Error;
        return false;
      }
      if (lengthFromHeader == 0)
      {
        this.m_FoundHeader = true;
        return true;
      }
      this.ResetSize(this.HeaderSize + lengthFromHeader);
      this.m_FoundHeader = true;
      return false;
    }

    public override void Reset()
    {
      this.m_FoundHeader = false;
      base.Reset();
    }
  }
}
