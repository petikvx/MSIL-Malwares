// Decompiled with JetBrains decompiler
// Type: SmartAssembly.SmartExceptionsCore.ReportSender1
// Assembly: o4tdggb3, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FA0844EB-EF82-404C-B76C-C092ABDB9392
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.bzqq-b74e3dc76fae79b75c26f27ecb85aae1eae4082a42bfa080f7805f32dedc9d67.exe

using My;
using SmartAssembly.Shared;
using SmartAssembly.SmartExceptionsCore.UI;
using SmartAssembly.Zip;
using System;
using System.Drawing;
using System.IO;
using System.IO.IsolatedStorage;
using System.Net;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Threading;
using Ⴈ;

namespace SmartAssembly.SmartExceptionsCore
{
  public class ReportSender1
  {
    protected const string AssemblyID = "{100fd8cd-4fe2-410e-8c33-ae1af08ef31d}";
    private \u003CPrivateImplementationDetails\u003E.Ⴀ Ⴓ;

    public void SetProxy(IWebProxy proxy)
    {
      IWebProxy webProxy;
      try
      {
        try
        {
          webProxy = proxy;
          this.Ⴓ.Ⴍ = webProxy;
        }
        catch (Exception ex)
        {
          IWebProxy o2 = proxy;
          StackFrameHelper.CreateException2(ex, (object) this, (object) o2);
          throw;
        }
      }
      catch (Exception ex)
      {
        IWebProxy o1 = webProxy;
        IWebProxy o3 = proxy;
        StackFrameHelper.CreateException3(ex, (object) o1, (object) this, (object) o3);
        throw;
      }
    }

    internal bool Ⴗ(byte[] Ⴀ, ReportSender1.ႣႠ Ⴅ)
    {
      int num1;
      byte[] Ⴅ1;
      bool flag1;
      int num2;
      byte[] Ⴐ;
      bool flag2;
      Ⴈ.ႳႥ Ⴀ1;
      ReportSender1.ႣႷ ⴃⴗ;
      try
      {
        try
        {
          try
          {
            num1 = 1;
            switch (num1)
            {
              case 0:
              case 3:
                break;
              default:
                Ⴅ1 = SimpleZip.Zip(Ⴀ);
                break;
            }
          }
          catch (Exception ex)
          {
            this.InvokeSendingReportFeedback(SendingReportStep1.PreparingReport, SimpleZip.ExceptionMessage);
            flag1 = false;
            goto label_12;
          }
          num2 = 4;
          while (true)
          {
            switch (num2)
            {
              case 0:
                goto label_11;
              case 3:
                this.InvokeSendingReportFeedback(SendingReportStep1.ConnectingToServer);
                Ⴀ1 = new Ⴈ.ႳႥ(Ⴈ.ႷႭ.ႥႭ(490613292, 1));
                num2 = this.Ⴓ.Ⴍ == null ? 7 : 8;
                continue;
              case 5:
                goto label_6;
              case 6:
                num2 = 0;
                continue;
              case 7:
              case 10:
                ⴃⴗ = new ReportSender1.ႣႷ(this, Ⴐ, Ⴀ1, Ⴅ);
                Ⴀ1.Ⴐ(new ႷႰ(ⴃⴗ.Ⴓ));
                goto case 6;
              case 8:
                Ⴀ1.Ⴅ(this.Ⴓ.Ⴍ);
                goto case 7;
              case 9:
                goto label_12;
              default:
                Ⴐ = ႷႨ.Ⴃ(Ⴅ1, MyComputer.Ⴗ(834543074, 7));
                num2 = Ⴐ != null ? 3 : 5;
                continue;
            }
          }
label_6:
          this.InvokeSendingReportFeedback(SendingReportStep1.PreparingReport, ႷႨ.Ⴗ);
          flag2 = false;
          goto label_14;
label_11:
          flag2 = ⴃⴗ.Ⴅ;
          goto label_14;
label_12:
          flag2 = flag1;
        }
        catch (Exception ex)
        {
          byte[] o1 = Ⴅ1;
          byte[] o2 = Ⴐ;
          Ⴈ.ႳႥ o3 = Ⴀ1;
          ReportSender1.ႣႷ o4 = ⴃⴗ;
          bool flag3;
          // ISSUE: variable of a boxed type
          __Boxed<bool> o5 = (ValueType) flag3;
          byte[] o7 = Ⴀ;
          ReportSender1.ႣႠ o8 = Ⴅ;
          StackFrameHelper.CreateException8(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) this, (object) o7, (object) o8);
          throw;
        }
label_14:
        switch (3)
        {
          default:
            return flag2;
        }
      }
      catch (Exception ex)
      {
        int num3;
        object[] objects = new object[12]
        {
          (object) Ⴅ1,
          (object) Ⴐ,
          (object) Ⴀ1,
          (object) ⴃⴗ,
          (object) flag1,
          (object) flag2,
          (object) num1,
          (object) num2,
          (object) num3,
          (object) this,
          (object) Ⴀ,
          (object) Ⴅ
        };
        StackFrameHelper.CreateExceptionN(ex, objects);
        throw;
      }
    }

    public event SendingReportFeedbackEventHandler1 SendingReportFeedback
    {
      add
      {
        int num1;
        SendingReportFeedbackEventHandler1 feedbackEventHandler1_1;
        SendingReportFeedbackEventHandler1 comparand;
        SendingReportFeedbackEventHandler1 feedbackEventHandler1_2;
        try
        {
          try
          {
            num1 = 2;
            while (true)
            {
              switch (num1)
              {
                case 1:
                  comparand = feedbackEventHandler1_1;
                  feedbackEventHandler1_2 = (SendingReportFeedbackEventHandler1) WaitSendingReportControl.Ⴐ((Delegate) comparand, (Delegate) value, 413, 413);
                  num1 = 6;
                  continue;
                case 3:
                case 6:
                  feedbackEventHandler1_1 = Interlocked.CompareExchange<SendingReportFeedbackEventHandler1>(ref this.Ⴓ.Ⴐ, feedbackEventHandler1_2, comparand);
                  goto case 5;
                case 5:
                  num1 = feedbackEventHandler1_1 != comparand ? 1 : 7;
                  continue;
                case 7:
                  goto label_8;
                default:
                  feedbackEventHandler1_1 = this.Ⴓ.Ⴐ;
                  num1 = 1;
                  continue;
              }
            }
          }
          catch (Exception ex)
          {
            SendingReportFeedbackEventHandler1 o1 = feedbackEventHandler1_1;
            SendingReportFeedbackEventHandler1 o2 = comparand;
            SendingReportFeedbackEventHandler1 o3 = feedbackEventHandler1_2;
            SendingReportFeedbackEventHandler1 o5 = value;
            StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) this, (object) o5);
            throw;
          }
label_8:
          switch (2)
          {
          }
        }
        catch (Exception ex)
        {
          SendingReportFeedbackEventHandler1 o1 = feedbackEventHandler1_1;
          SendingReportFeedbackEventHandler1 o2 = comparand;
          SendingReportFeedbackEventHandler1 o3 = feedbackEventHandler1_2;
          __Boxed<int> o4 = (ValueType) num1;
          int num2;
          __Boxed<int> o5 = (ValueType) num2;
          SendingReportFeedbackEventHandler1 o7 = value;
          StackFrameHelper.CreateException7(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) this, (object) o7);
          throw;
        }
      }
      remove
      {
        int num1;
        SendingReportFeedbackEventHandler1 feedbackEventHandler1_1;
        SendingReportFeedbackEventHandler1 comparand;
        SendingReportFeedbackEventHandler1 feedbackEventHandler1_2;
        try
        {
          try
          {
            num1 = 6;
            while (true)
            {
              switch (num1)
              {
                case 0:
                  feedbackEventHandler1_2 = (SendingReportFeedbackEventHandler1) AutoHeightLabel.Ⴍ((Delegate) comparand, (Delegate) value, 526, 604);
                  num1 = 2;
                  continue;
                case 1:
                case 2:
                  feedbackEventHandler1_1 = Interlocked.CompareExchange<SendingReportFeedbackEventHandler1>(ref this.Ⴓ.Ⴐ, feedbackEventHandler1_2, comparand);
                  num1 = feedbackEventHandler1_1 != comparand ? 5 : 4;
                  continue;
                case 4:
                  goto label_8;
                case 5:
                  comparand = feedbackEventHandler1_1;
                  goto case 0;
                default:
                  feedbackEventHandler1_1 = this.Ⴓ.Ⴐ;
                  num1 = 5;
                  continue;
              }
            }
          }
          catch (Exception ex)
          {
            SendingReportFeedbackEventHandler1 o1 = feedbackEventHandler1_1;
            SendingReportFeedbackEventHandler1 o2 = comparand;
            SendingReportFeedbackEventHandler1 o3 = feedbackEventHandler1_2;
            SendingReportFeedbackEventHandler1 o5 = value;
            StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) this, (object) o5);
            throw;
          }
label_8:
          switch (0)
          {
          }
        }
        catch (Exception ex)
        {
          SendingReportFeedbackEventHandler1 o1 = feedbackEventHandler1_1;
          SendingReportFeedbackEventHandler1 o2 = comparand;
          SendingReportFeedbackEventHandler1 o3 = feedbackEventHandler1_2;
          __Boxed<int> o4 = (ValueType) num1;
          int num2;
          __Boxed<int> o5 = (ValueType) num2;
          SendingReportFeedbackEventHandler1 o7 = value;
          StackFrameHelper.CreateException7(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) this, (object) o7);
          throw;
        }
      }
    }

    protected void InvokeSendingReportFeedback(
      SendingReportStep1 step,
      string errorMessage,
      string reportId)
    {
      int num;
      SendingReportFeedbackEventHandler1 ⴐ;
      try
      {
        try
        {
          num = 3;
          while (true)
          {
            switch (num)
            {
              case 0:
              case 1:
                num = ⴐ == null ? 2 : 5;
                continue;
              case 2:
                goto label_7;
              case 4:
                goto label_5;
              case 5:
                goto label_4;
              default:
                ⴐ = this.Ⴓ.Ⴐ;
                goto case 0;
            }
          }
label_7:
          return;
label_5:
          return;
label_4:
          ⴐ((object) this, new SendingReportFeedbackEventArgs1(step, errorMessage, reportId));
        }
        catch (Exception ex)
        {
          SendingReportFeedbackEventHandler1 o1 = ⴐ;
          // ISSUE: variable of a boxed type
          __Boxed<SendingReportStep1> o3 = (System.Enum) step;
          string o4 = errorMessage;
          string o5 = reportId;
          StackFrameHelper.CreateException5(ex, (object) o1, (object) this, (object) o3, (object) o4, (object) o5);
          throw;
        }
      }
      catch (Exception ex)
      {
        SendingReportFeedbackEventHandler1 o1 = ⴐ;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num;
        // ISSUE: variable of a boxed type
        __Boxed<SendingReportStep1> o4 = (System.Enum) step;
        string o5 = errorMessage;
        string o6 = reportId;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) this, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }

    protected void InvokeSendingReportFeedback(SendingReportStep1 step, string errorMessage)
    {
      try
      {
        try
        {
          this.InvokeSendingReportFeedback(step, errorMessage, string.Empty);
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<SendingReportStep1> o2 = (System.Enum) step;
          string o3 = errorMessage;
          StackFrameHelper.CreateException3(ex, (object) this, (object) o2, (object) o3);
          throw;
        }
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<SendingReportStep1> o2 = (System.Enum) step;
        string o3 = errorMessage;
        StackFrameHelper.CreateException3(ex, (object) this, (object) o2, (object) o3);
        throw;
      }
    }

    protected void InvokeSendingReportFeedback(SendingReportStep1 step)
    {
      try
      {
        try
        {
          this.InvokeSendingReportFeedback(step, string.Empty);
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<SendingReportStep1> o2 = (System.Enum) step;
          StackFrameHelper.CreateException2(ex, (object) this, (object) o2);
          throw;
        }
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<SendingReportStep1> o2 = (System.Enum) step;
        StackFrameHelper.CreateException2(ex, (object) this, (object) o2);
        throw;
      }
    }

    public ReportSender1()
    {
      try
      {
      }
      catch (Exception ex)
      {
        StackFrameHelper.CreateException1(ex, (object) this);
        throw;
      }
    }

    static ReportSender1()
    {
      try
      {
        SmartAssembly.SmartUsageCore.DoNotPruneAttribute.ႰႣ();
      }
      catch (Exception ex)
      {
        StackFrameHelper.CreateException0(ex);
        throw;
      }
    }

    internal static MethodInfo Ⴅ(
      [In] Type obj0,
      [In] string obj1,
      [In] Type[] obj2,
      [In] int obj3,
      [In] int obj4)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj4 ^ obj3)
        {
          case 66:
            num2 = 2;
            break;
          default:
            num2 = 7;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 1:
            case 7:
              num1 = 5;
              continue;
            case 2:
            case 3:
              goto label_8;
            case 4:
            case 6:
              num1 = 5;
              continue;
            case 5:
              goto label_3;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ReportSender1.Ⴅ);
              num1 = 5;
              continue;
          }
        }
label_8:
        return obj0.GetMethod(obj1, obj2);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        Type o2 = obj0;
        string o3 = obj1;
        Type[] o4 = obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj4;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }

    internal static void Ⴍ([In] Stream obj0, [In] byte[] obj1, [In] int obj2, [In] int obj3, [In] int obj4, [In] int obj5)
    {
      int num1;
      try
      {
        num1 = 5;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 3:
            case 4:
              goto label_7;
            case 1:
              goto label_8;
            case 2:
              num1 = 5;
              continue;
            default:
              int num2;
              switch (obj5 ^ obj4)
              {
                case 126:
                  num2 = 4;
                  break;
                default:
                  num2 = 2;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_8:
        return;
label_7:
        obj0.Write(obj1, obj2, obj3);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        Stream o3 = obj0;
        byte[] o4 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o7 = (ValueType) obj4;
        // ISSUE: variable of a boxed type
        __Boxed<int> o8 = (ValueType) obj5;
        StackFrameHelper.CreateException8(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6, (object) o7, (object) o8);
        throw;
      }
    }

    internal static string Ⴄ([In] string obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 124:
            num2 = 0;
            break;
          default:
            num2 = 4;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 1:
            case 7:
              goto label_8;
            case 3:
              num1 = 5;
              continue;
            case 4:
            case 6:
              num1 = 5;
              continue;
            case 5:
              goto label_3;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ReportSender1.Ⴄ);
              num1 = 5;
              continue;
          }
        }
label_8:
        return obj0.ToUpper();
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        string o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static string Ⴓ([In] ref short obj0, [In] string obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj3 ^ obj2)
        {
          case 116:
            num2 = 0;
            break;
          default:
            num2 = 5;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 1:
            case 4:
              goto label_8;
            case 5:
              num1 = 7;
              continue;
            case 6:
              num1 = 7;
              continue;
            case 7:
              goto label_3;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ReportSender1.Ⴓ);
              num1 = 7;
              continue;
          }
        }
label_8:
        return obj0.ToString(obj1);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<short> o2 = (ValueType) obj0;
        string o3 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj3;
        StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5);
        throw;
      }
    }

    internal static byte[] Ⴈ(
      [In] RSACryptoServiceProvider obj0,
      [In] byte[] obj1,
      [In] bool obj2,
      [In] int obj3,
      [In] int obj4)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj4 ^ obj3)
        {
          case 25:
            num2 = 3;
            break;
          default:
            num2 = 7;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 3:
              goto label_8;
            case 1:
            case 2:
              num1 = 4;
              continue;
            case 4:
              goto label_3;
            case 7:
              num1 = 4;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ReportSender1.Ⴈ);
              num1 = 4;
              continue;
          }
        }
label_8:
        return obj0.Encrypt(obj1, obj2);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        RSACryptoServiceProvider o2 = obj0;
        byte[] o3 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<bool> o4 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj4;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }

    internal static OperatingSystem Ⴀ([In] int obj0, [In] int obj1)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj1 ^ obj0)
        {
          case 45:
            num2 = 7;
            break;
          default:
            num2 = 0;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
              num1 = 3;
              continue;
            case 2:
            case 7:
              goto label_8;
            case 3:
              goto label_3;
            case 4:
            case 5:
            case 6:
              num1 = 3;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ReportSender1.Ⴀ);
              num1 = 3;
              continue;
          }
        }
label_8:
        return Environment.OSVersion;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        StackFrameHelper.CreateException3(ex, (object) o1, (object) o2, (object) o3);
        throw;
      }
    }

    internal static void Ⴐ([In] IsolatedStorageFile obj0, [In] string obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
        num1 = 5;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 2:
            case 3:
              num1 = 5;
              continue;
            case 1:
              goto label_7;
            default:
              int num2;
              switch (obj3 ^ obj2)
              {
                case 40:
                  num2 = 1;
                  break;
                default:
                  num2 = 3;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_7:
        obj0.DeleteFile(obj1);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        IsolatedStorageFile o3 = obj0;
        string o4 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj3;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }

    internal static IntPtr Ⴜ([In] Graphics obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 60:
            num2 = 4;
            break;
          default:
            num2 = 0;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
              num1 = 1;
              continue;
            case 1:
              goto label_3;
            case 3:
            case 5:
              num1 = 1;
              continue;
            case 4:
            case 6:
              goto label_8;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ReportSender1.Ⴜ);
              num1 = 1;
              continue;
          }
        }
label_8:
        return obj0.GetHdc();
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        Graphics o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    private sealed class ႣႷ
    {
      private readonly ReportSender1.ႣႠ Ⴃ;
      public bool Ⴅ = true;
      private DESCryptoIndirector.Ⴀ Ⴈ;

      public ႣႷ(ReportSender1 Ⴍ, byte[] Ⴐ, Ⴈ.ႳႥ Ⴀ, ReportSender1.ႣႠ Ⴅ)
      {
        ReportSender1 reportSender1;
        Ⴈ.ႳႥ ⴓⴅ;
        byte[] numArray;
        try
        {
          try
          {
            reportSender1 = Ⴍ;
            this.Ⴈ.Ⴍ = reportSender1;
            this.Ⴃ = Ⴅ;
            ⴓⴅ = Ⴀ;
            this.Ⴈ.Ⴗ = ⴓⴅ;
            numArray = Ⴐ;
            this.Ⴈ.Ⴈ = numArray;
          }
          catch (Exception ex)
          {
            ReportSender1 o2 = Ⴍ;
            byte[] o3 = Ⴐ;
            Ⴈ.ႳႥ o4 = Ⴀ;
            ReportSender1.ႣႠ o5 = Ⴅ;
            StackFrameHelper.CreateException5(ex, (object) this, (object) o2, (object) o3, (object) o4, (object) o5);
            throw;
          }
        }
        catch (Exception ex)
        {
          ReportSender1 o1 = reportSender1;
          Ⴈ.ႳႥ o2 = ⴓⴅ;
          byte[] o3 = numArray;
          ReportSender1 o5 = Ⴍ;
          byte[] o6 = Ⴐ;
          Ⴈ.ႳႥ o7 = Ⴀ;
          ReportSender1.ႣႠ o8 = Ⴅ;
          StackFrameHelper.CreateException8(ex, (object) o1, (object) o2, (object) o3, (object) this, (object) o5, (object) o6, (object) o7, (object) o8);
          throw;
        }
      }

      public void Ⴓ(string Ⴓ)
      {
        int num1;
        byte[] numArray;
        byte[] Ⴐ;
        ReportSender1.ႣႥ ⴃⴅ;
        string Ⴅ;
        try
        {
          try
          {
            num1 = 0;
            while (true)
            {
              switch (num1)
              {
                case 1:
                  goto label_10;
                case 2:
                case 7:
                  goto label_7;
                case 3:
                  goto label_9;
                case 4:
                  Ⴅ = Ⴓ;
                  num1 = this.Ⴈ.Ⴍ.Ⴓ.Ⴐ == null ? 1 : 3;
                  continue;
                case 5:
                  ⴃⴅ = new ReportSender1.ႣႥ(this.Ⴈ.Ⴍ);
                  this.Ⴈ.Ⴗ.Ⴃ(Ⴐ, this.Ⴃ.Ⴍ(), this.Ⴃ.Ⴅ(), this.Ⴃ.Ⴃ(), new ႷႰ(ⴃⴅ.Ⴈ));
                  num1 = 7;
                  continue;
                case 6:
                case 10:
                  SmartAssembly.SmartUsageCore.DoNotObfuscateAttribute.Ⴈ((Array) numArray, (Array) Ⴐ, numArray.Length, 948, 1001);
                  AppPathFinder.Ⴍ((Array) this.Ⴈ.Ⴈ, 0, (Array) Ⴐ, numArray.Length, this.Ⴈ.Ⴈ.Length, 776, 786);
                  num1 = 5;
                  continue;
                case 9:
                  Ⴐ = new byte[numArray.Length + this.Ⴈ.Ⴈ.Length];
                  num1 = 6;
                  continue;
                case 11:
                  this.Ⴈ.Ⴍ.InvokeSendingReportFeedback(SendingReportStep1.Transfering);
                  numArray = ႷႨ.Ⴄ(ႷႼ.Ⴗ(795, 838), Ⴈ.ႷႭ.ႥႭ(490613363, 3), 734, 680);
                  num1 = 9;
                  continue;
                default:
                  num1 = !Ⴈ.Ⴅ.Ⴐ(Ⴓ, Ⴈ.ႳႷ.Ⴗ(2059790543, 8), 71, 29) ? 4 : 11;
                  continue;
              }
            }
label_7:
            this.Ⴅ = ⴃⴅ.Ⴄ;
            goto label_12;
label_9:
            this.Ⴈ.Ⴍ.Ⴓ.Ⴐ((object) this, new SendingReportFeedbackEventArgs1(SendingReportStep1.ConnectingToServer, Ⴅ));
label_10:
            this.Ⴅ = false;
          }
          catch (Exception ex)
          {
            byte[] o1 = numArray;
            byte[] o2 = Ⴐ;
            ReportSender1.ႣႥ o3 = ⴃⴅ;
            string o4 = Ⴅ;
            string o6 = Ⴓ;
            StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) this, (object) o6);
            throw;
          }
label_12:
          switch (4)
          {
          }
        }
        catch (Exception ex)
        {
          byte[] o1 = numArray;
          byte[] o2 = Ⴐ;
          ReportSender1.ႣႥ o3 = ⴃⴅ;
          string o4 = Ⴅ;
          // ISSUE: variable of a boxed type
          __Boxed<int> o5 = (ValueType) num1;
          int num2;
          // ISSUE: variable of a boxed type
          __Boxed<int> o6 = (ValueType) num2;
          string o8 = Ⴓ;
          StackFrameHelper.CreateException8(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6, (object) this, (object) o8);
          throw;
        }
      }

      static ႣႷ()
      {
        try
        {
          SmartAssembly.SmartUsageCore.DoNotPruneAttribute.ႰႣ();
        }
        catch (Exception ex)
        {
          StackFrameHelper.CreateException0(ex);
          throw;
        }
      }
    }

    private sealed class ႣႥ
    {
      public bool Ⴄ;
      private SecurityExceptionEventArgs.ႠႠ Ⴅ;

      public ႣႥ(ReportSender1 Ⴃ)
      {
        ReportSender1 reportSender1;
        try
        {
          try
          {
            reportSender1 = Ⴃ;
            this.Ⴅ.Ⴓ = reportSender1;
          }
          catch (Exception ex)
          {
            ReportSender1 o2 = Ⴃ;
            StackFrameHelper.CreateException2(ex, (object) this, (object) o2);
            throw;
          }
        }
        catch (Exception ex)
        {
          ReportSender1 o1 = reportSender1;
          ReportSender1 o3 = Ⴃ;
          StackFrameHelper.CreateException3(ex, (object) o1, (object) this, (object) o3);
          throw;
        }
      }

      public void Ⴈ(string Ⴀ)
      {
        int num;
        try
        {
          try
          {
            num = 1;
            while (true)
            {
              switch (num)
              {
                case 0:
                case 4:
                  goto label_4;
                case 2:
                case 5:
                  goto label_3;
                case 3:
                  goto label_5;
                default:
                  num = !AppNameFinder.Ⴓ(Ⴀ, Ⴈ.ႳႷ.Ⴗ(2059790473, 7), 223, 152) ? 4 : 2;
                  continue;
              }
            }
label_3:
            this.Ⴅ.Ⴓ.InvokeSendingReportFeedback(SendingReportStep1.Transfering, Ⴀ);
            this.Ⴄ = false;
            return;
label_4:
            this.Ⴅ.Ⴓ.InvokeSendingReportFeedback(SendingReportStep1.Finished, string.Empty, Ⴀ);
label_5:
            this.Ⴄ = true;
          }
          catch (Exception ex)
          {
            string o2 = Ⴀ;
            StackFrameHelper.CreateException2(ex, (object) this, (object) o2);
            throw;
          }
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> o1 = (ValueType) num;
          string o3 = Ⴀ;
          StackFrameHelper.CreateException3(ex, (object) o1, (object) this, (object) o3);
          throw;
        }
      }

      static ႣႥ()
      {
        try
        {
          SmartAssembly.SmartUsageCore.DoNotPruneAttribute.ႰႣ();
        }
        catch (Exception ex)
        {
          StackFrameHelper.CreateException0(ex);
          throw;
        }
      }
    }

    internal sealed class ႣႠ
    {
      public static ReportSender1.ႣႠ Ⴄ;
      private SimpleZip.ႤႭ.Ⴗ Ⴅ;

      public ႣႠ(string Ⴀ, string Ⴄ, string Ⴅ)
      {
        string str1;
        string str2;
        string str3;
        try
        {
          try
          {
            str1 = Ⴀ;
            this.Ⴅ.Ⴐ = str1;
            str2 = Ⴅ;
            this.Ⴅ.Ⴄ = str2;
            str3 = Ⴄ;
            this.Ⴅ.Ⴀ = str3;
          }
          catch (Exception ex)
          {
            string o2 = Ⴀ;
            string o3 = Ⴄ;
            string o4 = Ⴅ;
            StackFrameHelper.CreateException4(ex, (object) this, (object) o2, (object) o3, (object) o4);
            throw;
          }
        }
        catch (Exception ex)
        {
          string o1 = str1;
          string o2 = str2;
          string o3 = str3;
          string o5 = Ⴀ;
          string o6 = Ⴄ;
          string o7 = Ⴅ;
          StackFrameHelper.CreateException7(ex, (object) o1, (object) o2, (object) o3, (object) this, (object) o5, (object) o6, (object) o7);
          throw;
        }
      }

      [SpecialName]
      public string Ⴃ()
      {
        try
        {
          string ⴄ;
          try
          {
            ⴄ = this.Ⴅ.Ⴄ;
          }
          catch (Exception ex)
          {
            StackFrameHelper.CreateException1(ex, (object) this);
            throw;
          }
          return ⴄ;
        }
        catch (Exception ex)
        {
          string str;
          string o1 = str;
          StackFrameHelper.CreateException2(ex, (object) o1, (object) this);
          throw;
        }
      }

      [SpecialName]
      public string Ⴅ()
      {
        try
        {
          string ⴀ;
          try
          {
            ⴀ = this.Ⴅ.Ⴀ;
          }
          catch (Exception ex)
          {
            StackFrameHelper.CreateException1(ex, (object) this);
            throw;
          }
          return ⴀ;
        }
        catch (Exception ex)
        {
          string str;
          string o1 = str;
          StackFrameHelper.CreateException2(ex, (object) o1, (object) this);
          throw;
        }
      }

      [SpecialName]
      public string Ⴍ()
      {
        try
        {
          string ⴐ;
          try
          {
            ⴐ = this.Ⴅ.Ⴐ;
          }
          catch (Exception ex)
          {
            StackFrameHelper.CreateException1(ex, (object) this);
            throw;
          }
          return ⴐ;
        }
        catch (Exception ex)
        {
          string str;
          string o1 = str;
          StackFrameHelper.CreateException2(ex, (object) o1, (object) this);
          throw;
        }
      }

      static ႣႠ()
      {
        try
        {
          SmartAssembly.SmartUsageCore.DoNotPruneAttribute.ႰႣ();
          try
          {
            ReportSender1.ႣႠ.Ⴄ = new ReportSender1.ႣႠ((string) null, (string) null, (string) null);
          }
          catch (Exception ex)
          {
            StackFrameHelper.CreateException0(ex);
            throw;
          }
        }
        catch (Exception ex)
        {
          StackFrameHelper.CreateException0(ex);
          throw;
        }
      }
    }
  }
}
