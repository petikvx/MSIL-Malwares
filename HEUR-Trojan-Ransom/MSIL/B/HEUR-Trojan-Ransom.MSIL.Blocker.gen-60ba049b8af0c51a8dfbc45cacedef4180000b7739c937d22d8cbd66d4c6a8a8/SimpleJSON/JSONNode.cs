// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: AppConte, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 7B8B5733-911E-457B-A55E-DDA2927F5FA5
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-60ba049b8af0c51a8dfbc45cacedef4180000b7739c937d22d8cbd66d4c6a8a8.exe

using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get => (JSONNode) null;
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get => (JSONNode) null;
      set
      {
      }
    }

    public virtual string Value
    {
      get
      {
label_1:
        int num1 = -310744198;
        string str;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -186072136)) % 4U)
          {
            case 1:
              num1 = (int) num2 * 2003221834 ^ -2062837678;
              continue;
            case 2:
              str = "";
              num1 = (int) num2 * 1072426733 ^ 1554575895;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return str;
      }
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
label_1:
        int num1 = 759574745;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1909644301)) % 3U)
          {
            case 1:
              count = 0;
              num1 = (int) num2 * 617680892 ^ 2008192611;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem)
    {
label_1:
      int num1 = 2012318117;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1493834260)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            this.Add("", aItem);
            num1 = (int) num2 * -2009597078 ^ -168140960;
            continue;
          case 2:
            num1 = (int) num2 * 2084086040 ^ -1510452861;
            continue;
          case 3:
            goto label_3;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public virtual JSONNode Remove(string aKey) => (JSONNode) null;

    public virtual JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = 574476351;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 31214020)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * -1016985361 ^ -990649606;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(JSONNode aNode)
    {
      JSONNode jsonNode = aNode;
label_1:
      int num1 = -164350846;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -421388600)) % 3U)
        {
          case 1:
            num1 = (int) num2 * 200415802 ^ 117414938;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONNode.\u003Cget_Childs\u003Ed__17 getChildsD17 = new JSONNode.\u003Cget_Childs\u003Ed__17(-2);
        getChildsD17.\u003C\u003E4__this = this;
label_1:
        int num1 = 614807980;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1868351963)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              childs = (IEnumerable<JSONNode>) getChildsD17;
              num1 = (int) num2 * 1405774053 ^ -2060779356;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return childs;
      }
    }

    public IEnumerable<JSONNode> DeepChilds
    {
      get
      {
        JSONNode.\u003Cget_DeepChilds\u003Ed__19 getDeepChildsD19 = new JSONNode.\u003Cget_DeepChilds\u003Ed__19(-2);
        getDeepChildsD19.\u003C\u003E4__this = this;
label_1:
        int num1 = -1188777765;
        IEnumerable<JSONNode> deepChilds;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -542943486)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              deepChilds = (IEnumerable<JSONNode>) getDeepChildsD19;
              num1 = (int) num2 * -1629289953 ^ 1990777678;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return deepChilds;
      }
    }

    public override string ToString()
    {
label_1:
      int num1 = -632137452;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -621736151)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            str = nameof (JSONNode);
            num1 = (int) num2 * -1425057273 ^ -2011419873;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual string ToString(string aPrefix)
    {
label_1:
      int num1 = 1514378350;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 783274657)) % 4U)
        {
          case 0:
            num1 = (int) num2 * 625832333 ^ 645659996;
            continue;
          case 2:
            goto label_1;
          case 3:
            str = nameof (JSONNode);
            num1 = (int) num2 * 1735732299 ^ -763098464;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public virtual int AsInt
    {
      get
      {
label_1:
        int num1 = 516321164;
        int result;
        bool flag;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1161162445)) % 8U)
          {
            case 0:
              flag = int.TryParse(this.Value, out result);
              num1 = (int) num2 * 1499741182 ^ -2064601473;
              continue;
            case 1:
              result = 0;
              num1 = (int) num2 * -2083177350 ^ -1162680393;
              continue;
            case 2:
              int num3 = !flag ? 2016912291 : (num3 = 1301761769);
              num1 = num3 ^ (int) num2 * 273524564;
              continue;
            case 4:
              asInt = result;
              num1 = (int) num2 * 1570477584 ^ -1031091142;
              continue;
            case 5:
              goto label_1;
            case 6:
              asInt = 0;
              num1 = 338906846;
              continue;
            case 7:
              num1 = (int) num2 * 37826639 ^ -184476633;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asInt;
      }
      set
      {
label_1:
        int num1 = -1559826718;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1556140364)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Value = value.ToString();
              num1 = (int) num2 * -573729513 ^ 97241605;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual float AsFloat
    {
      get
      {
label_1:
        int num1 = 1498825571;
        float result;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 85161776)) % 8U)
          {
            case 1:
              asFloat = result;
              num1 = (int) num2 * -1049219911 ^ 1736538694;
              continue;
            case 2:
              asFloat = 0.0f;
              num1 = 1947739556;
              continue;
            case 3:
              result = 0.0f;
              num1 = (int) num2 * 2047583588 ^ 1481610810;
              continue;
            case 4:
              num1 = (int) num2 * -1892854037 ^ -247433580;
              continue;
            case 5:
              goto label_1;
            case 6:
              int num3 = float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u206D‌‌‮⁭⁭⁭‌⁬‍⁮⁭⁬⁪‏‫​‏⁮⁮⁪‎⁪‎‮‭‌‪​​⁫‍‎‍⁫⁭‫⁬‪‌‮(), out result) ? 751540989 : (num3 = 269663998);
              num1 = num3 ^ (int) num2 * 1167638114;
              continue;
            case 7:
              num1 = (int) num2 * -1578007712 ^ 1791082984;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asFloat;
      }
      set => this.Value = value.ToString();
    }

    public virtual double AsDouble
    {
      get
      {
label_1:
        int num1 = 365941340;
        bool flag;
        double asDouble;
        double result;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 289511538)) % 9U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 828015220 ^ -821448849;
              continue;
            case 2:
              int num3 = flag ? 1092371055 : (num3 = 513866905);
              num1 = num3 ^ (int) num2 * 1272561282;
              continue;
            case 3:
              asDouble = 0.0;
              num1 = 1714552401;
              continue;
            case 5:
              num1 = (int) num2 * 870394522 ^ 1326834573;
              continue;
            case 6:
              asDouble = result;
              num1 = (int) num2 * -1058833639 ^ 1389456400;
              continue;
            case 7:
              flag = double.TryParse(this.Value, out result);
              num1 = (int) num2 * 1801872393 ^ -304272769;
              continue;
            case 8:
              result = 0.0;
              num1 = (int) num2 * -885585126 ^ -864747557;
              continue;
            default:
              goto label_10;
          }
        }
label_10:
        return asDouble;
      }
      set => this.Value = value.ToString();
    }

    public virtual bool AsBool
    {
      get
      {
label_1:
        int num1 = -1172140968;
        bool result;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -443333750)) % 7U)
          {
            case 1:
              num1 = (int) num2 * 1301032147 ^ -1459492359;
              continue;
            case 2:
              int num3 = bool.TryParse(this.Value, out result) ? 1433069397 : (num3 = 210489425);
              num1 = num3 ^ (int) num2 * -1022332176;
              continue;
            case 3:
              result = false;
              num1 = (int) num2 * 413658274 ^ 394203993;
              continue;
            case 4:
              goto label_1;
            case 5:
              asBool = result;
              num1 = (int) num2 * -2013758748 ^ -1116138332;
              continue;
            case 6:
              asBool = !JSONNode.\u206E‏⁭‮‫‪⁬‬⁬‌⁫⁭‮‌‪​‭‫​‪⁪‫‮‎‏⁫⁭⁯‌‫‎‭‬‍⁫⁭⁫‪‏⁪‮(this.Value);
              num1 = -892675631;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asBool;
      }
      set => this.Value = value ? "true" : "false";
    }

    public virtual JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = -545207730;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1231595406)) % 3U)
          {
            case 1:
              asArray = this as JSONArray;
              num1 = (int) num2 * 736579769 ^ -855790931;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return asArray;
      }
    }

    public virtual JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = 253554008;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2098036042)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 26464744 ^ 1650496629;
              continue;
            case 2:
              asObject = this as JSONClass;
              num1 = (int) num2 * -223181464 ^ -1161378969;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s)
    {
label_1:
      int num1 = 1676766114;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2038942508)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1235918806 ^ 2077834173;
            continue;
          case 2:
            jsonNode = (JSONNode) new JSONData(s);
            num1 = (int) num2 * 1562944140 ^ 1409393201;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public static implicit operator string(JSONNode d)
    {
      if (d == (object) null)
        goto label_4;
label_1:
      int num1 = -1866795809;
label_2:
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1840875416)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -2133760248 ^ 952185153;
            continue;
          case 2:
            goto label_1;
          case 3:
            goto label_3;
          default:
            goto label_7;
        }
      }
label_3:
      string str1 = d.Value;
      goto label_5;
label_7:
      string str2;
      return str2;
label_4:
      str1 = (string) null;
label_5:
      str2 = str1;
      num1 = -176838960;
      goto label_2;
    }

    public static bool operator ==(JSONNode a, object b)
    {
label_1:
      int num1 = -308075947;
      bool flag1;
      while (true)
      {
        uint num2;
        bool flag2;
        int num3;
        switch ((num2 = (uint) (num1 ^ -1013112939)) % 7U)
        {
          case 1:
            flag1 = true;
            num1 = (int) num2 * 505547785 ^ -2146420906;
            continue;
          case 2:
            goto label_1;
          case 3:
            flag1 = (object) a == b;
            num1 = -1281843714;
            continue;
          case 4:
            if (b != null)
            {
              num3 = 0;
              break;
            }
            num1 = (int) num2 * -376937705 ^ 1467393055;
            continue;
          case 5:
            num3 = a is JSONLazyCreator ? 1 : 0;
            break;
          case 6:
            int num4 = !flag2 ? 1269738542 : (num4 = 432094756);
            num1 = num4 ^ (int) num2 * -1743958553;
            continue;
          default:
            goto label_11;
        }
        flag2 = num3 != 0;
        num1 = -670999894;
      }
label_11:
      return flag1;
    }

    public static bool operator !=(JSONNode a, object b)
    {
      bool flag = !(a == b);
label_1:
      int num1 = -296014766;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1184156847)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -948578306 ^ -2099507885;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = 498690117;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2122544476)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            flag = (object) this == obj;
            num1 = (int) num2 * 2038521947 ^ -1539390611;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override int GetHashCode()
    {
label_1:
      int num1 = -1291802078;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -64689079)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 30477140 ^ -1574884969;
            continue;
          case 3:
            hashCode = this.\u206C⁬‎⁮‌‮⁭‫⁪⁬​‫‌‏⁪​⁫⁪⁪⁯⁪⁫⁭​‏‮⁮⁭‎‪‬⁯⁫‮‫⁫⁫‏⁮⁫‮();
            num1 = (int) num2 * 50263770 ^ 926636598;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return hashCode;
    }

    internal static string Escape(string aText)
    {
      string str1 = "";
label_1:
      int num1 = 458430720;
      char ch1;
      char ch2;
      char ch3;
      string str2;
      string str3;
      int num2;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 1609075714)) % 34U)
        {
          case 0:
label_9:
            str1 = JSONNode.\u200F‌‬‪‭⁪⁭⁪‍‮⁪‌​⁫⁫‮⁬‍‬‍‎‮‬⁫‌‪‏‏⁪‮‍‏⁮⁭‎‌‎⁫⁪‬‮(str1, "\\n");
            num1 = 1496067585;
            continue;
          case 1:
            num1 = (int) num3 * -1853587907 ^ 735446124;
            continue;
          case 2:
            str1 = JSONNode.\u200F‌‬‪‭⁪⁭⁪‍‮⁪‌​⁫⁫‮⁬‍‬‍‎‮‬⁫‌‪‏‏⁪‮‍‏⁮⁭‎‌‎⁫⁪‬‮(str1, "\\\\");
            num1 = 2108803519;
            continue;
          case 3:
            num1 = (int) num3 * 1232236653 ^ -82408462;
            continue;
          case 5:
            num1 = (int) num3 * -776168292 ^ 212228077;
            continue;
          case 6:
            str3 = aText;
            num1 = (int) num3 * -1756326600 ^ 1383987137;
            continue;
          case 7:
            num1 = (int) num3 * 225494151 ^ -888908630;
            continue;
          case 8:
label_3:
            str1 = JSONNode.\u200F‌‬‪‭⁪⁭⁪‍‮⁪‌​⁫⁫‮⁬‍‬‍‎‮‬⁫‌‪‏‏⁪‮‍‏⁮⁭‎‌‎⁫⁪‬‮(str1, "\\b");
            num1 = 24396787;
            continue;
          case 9:
            num1 = (int) num3 * -251497800 ^ -509254855;
            continue;
          case 10:
            ch3 = ch2;
            num1 = (int) num3 * -1102381619 ^ -2008611058;
            continue;
          case 11:
            int num4;
            num1 = num4 = ch3 != '\\' ? 176104511 : (num4 = 227080060);
            continue;
          case 12:
            num1 = (int) num3 * -1562314621 ^ -1690191747;
            continue;
          case 13:
            str1 = JSONNode.\u200F‌‬‪‭⁪⁭⁪‍‮⁪‌​⁫⁫‮⁬‍‬‍‎‮‬⁫‌‪‏‏⁪‮‍‏⁮⁭‎‌‎⁫⁪‬‮(str1, "\\\"");
            num1 = 857760747;
            continue;
          case 14:
            num1 = (int) num3 * -1550778167 ^ 813344216;
            continue;
          case 15:
            num1 = (int) num3 * -630596557 ^ 1944660330;
            continue;
          case 16:
            switch (ch3)
            {
              case '\b':
                goto label_3;
              case '\t':
                goto label_23;
              case '\n':
                goto label_9;
              case '\v':
                goto label_4;
              case '\f':
                goto label_6;
              case '\r':
                goto label_31;
              default:
                num1 = (int) num3 * 661758675 ^ -1613322568;
                continue;
            }
          case 17:
            ch1 = JSONNode.\u200F‏‍‫⁬‭⁬⁮‪‬‭‎⁭⁬⁮‍‬‫​‎⁯‫‪‎‭⁮‪⁪‮‬‏‪‭⁯‏‮⁪‬⁮⁫‮(str3, num2);
            num1 = 1373743632;
            continue;
          case 18:
            ++num2;
            num1 = (int) num3 * -391561177 ^ -516040746;
            continue;
          case 19:
            goto label_1;
          case 20:
            int num5;
            num1 = num5 = num2 < JSONNode.\u200D⁮‎‬⁮‫‏‏⁫‪‍‬⁮​‮‮‭‭‮⁮⁭‮‎⁯‪​‌‎⁫⁫‬⁪⁮‫​‏⁭‍‏⁯‮(str3) ? 1111117979 : (num5 = 1583185117);
            continue;
          case 21:
label_31:
            str1 = JSONNode.\u200F‌‬‪‭⁪⁭⁪‍‮⁪‌​⁫⁫‮⁬‍‬‍‎‮‬⁫‌‪‏‏⁪‮‍‏⁮⁭‎‌‎⁫⁪‬‮(str1, "\\r");
            num1 = 1496067585;
            continue;
          case 22:
label_4:
            str1 = JSONNode.\u200F‌‬‪‭⁪⁭⁪‍‮⁪‌​⁫⁫‮⁬‍‬‍‎‮‬⁫‌‪‏‏⁪‮‍‏⁮⁭‎‌‎⁫⁪‬‮(str1, ch1.ToString());
            num1 = 1299300317;
            continue;
          case 23:
            num1 = (int) num3 * 1726445633 ^ -407344493;
            continue;
          case 24:
            num1 = (int) num3 * -151643331 ^ 1288580533;
            continue;
          case 25:
            num1 = (int) num3 * -1662861956 ^ -294759462;
            continue;
          case 26:
label_6:
            str1 = JSONNode.\u200F‌‬‪‭⁪⁭⁪‍‮⁪‌​⁫⁫‮⁬‍‬‍‎‮‬⁫‌‪‏‏⁪‮‍‏⁮⁭‎‌‎⁫⁪‬‮(str1, "\\f");
            num1 = 404144435;
            continue;
          case 27:
            num1 = 330974066;
            continue;
          case 28:
            ch2 = ch1;
            num1 = (int) num3 * 1568094530 ^ -591321116;
            continue;
          case 29:
            int num6;
            num1 = num6 = ch3 == '"' ? 1074737567 : (num6 = 728712584);
            continue;
          case 30:
label_23:
            str1 = JSONNode.\u200F‌‬‪‭⁪⁭⁪‍‮⁪‌​⁫⁫‮⁬‍‬‍‎‮‬⁫‌‪‏‏⁪‮‍‏⁮⁭‎‌‎⁫⁪‬‮(str1, "\\t");
            num1 = 1366740623;
            continue;
          case 31:
            num2 = 0;
            num1 = (int) num3 * -1186000120 ^ 854261571;
            continue;
          case 32:
            num1 = (int) num3 * 1521996290 ^ -120930344;
            continue;
          case 33:
            str2 = str1;
            num1 = (int) num3 * -582993849 ^ 111350291;
            continue;
          default:
            goto label_36;
        }
      }
label_36:
      return str2;
    }

    public static JSONNode Parse(string aJSON)
    {
      Stack<JSONNode> jsonNodeStack = new Stack<JSONNode>();
label_1:
      int num1 = 353098701;
      JSONNode jsonNode1;
      char ch1;
      string aItem;
      string aKey;
      bool flag1;
      bool flag2;
      bool flag3;
      bool flag4;
      char ch2;
      bool flag5;
      char ch3;
      int num2;
      char ch4;
      bool flag6;
      bool flag7;
      bool flag8;
      bool flag9;
      bool flag10;
      bool flag11;
      bool flag12;
      JSONNode jsonNode2;
      bool flag13;
      char ch5;
      bool flag14;
      bool flag15;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 1390853659)) % 154U)
        {
          case 0:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -2123473483 ^ -1494216189;
            continue;
          case 1:
            num1 = (int) num3 * 1825455435 ^ 1461773837;
            continue;
          case 2:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 1627040928 ^ -102195272;
            continue;
          case 3:
            num1 = 55273827;
            continue;
          case 4:
            int num4;
            num1 = num4 = JSONNode.\u202E‌‫‮‌⁫⁯⁪⁬‍⁪‪⁬‫‮⁮‎‎​​‫⁮‎⁫‮⁪⁯⁪⁬‭‌‮‎⁭‪‍‬‫⁬‮(aKey, "") ? 821338132 : (num4 = 272414131);
            continue;
          case 5:
            flag12 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -638866545 ^ -2064551110;
            continue;
          case 6:
            string str1 = aItem;
            ch4 = JSONNode.\u200F‏‍‫⁬‭⁬⁮‪‬‭‎⁭⁬⁮‍‬‫​‎⁯‫‪‎‭⁮‪⁪‮‬‏‪‭⁯‏‮⁪‬⁮⁫‮(aJSON, num2);
            string str2 = ch4.ToString();
            aItem = JSONNode.\u200F‌‬‪‭⁪⁭⁪‍‮⁪‌​⁫⁫‮⁬‍‬‍‎‮‬⁫‌‪‏‏⁪‮‍‏⁮⁭‎‌‎⁫⁪‬‮(str1, str2);
            num1 = (int) num3 * 346581501 ^ 1947052786;
            continue;
          case 7:
            goto label_81;
          case 8:
            switch (ch1)
            {
              case '\t':
                goto label_10;
              case '\n':
              case '\r':
                goto label_54;
              case '\v':
              case '\f':
                goto label_85;
              default:
                num1 = (int) num3 * 621558760 ^ -1120170889;
                continue;
            }
          case 9:
            int num5 = !flag15 ? -989995588 : (num5 = -1962193212);
            num1 = num5 ^ (int) num3 * 1264895074;
            continue;
          case 10:
            int num6 = !flag6 ? 1255046880 : (num6 = 2056709833);
            num1 = num6 ^ (int) num3 * 103320160;
            continue;
          case 11:
            num1 = 368186191;
            continue;
          case 12:
            num1 = (int) num3 * 1449243166 ^ 242537823;
            continue;
          case 13:
          case 37:
          case 53:
          case 94:
          case 133:
label_54:
            ++num2;
            num1 = 1606842729;
            continue;
          case 14:
label_90:
            ++num2;
            flag13 = flag2;
            num1 = 1028291374;
            continue;
          case 15:
            int num7 = flag5 ? -986311133 : (num7 = -326117787);
            num1 = num7 ^ (int) num3 * 113033332;
            continue;
          case 16:
            int num8 = !(jsonNode1 is JSONArray) ? -2144257316 : (num8 = -330321277);
            num1 = num8 ^ (int) num3 * 616493580;
            continue;
          case 17:
            flag5 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 1482162820 ^ -1662301500;
            continue;
          case 18:
            aKey = "";
            num1 = 719555228;
            continue;
          case 19:
            int num9;
            num1 = num9 = ch3 != 'f' ? 2025753467 : (num9 = 1446701716);
            continue;
          case 20:
            num1 = (int) num3 * -851908728 ^ -2130616744;
            continue;
          case 21:
            flag2 = false;
            num1 = (int) num3 * -901701278 ^ 602609221;
            continue;
          case 22:
            num1 = (int) num3 * -901385002 ^ -2114558252;
            continue;
          case 23:
            num1 = (int) num3 * 1930827562 ^ -1232419478;
            continue;
          case 24:
            num1 = (int) num3 * -1240025609 ^ 838002490;
            continue;
          case 25:
            aItem = JSONNode.\u200F‌‬‪‭⁪⁭⁪‍‮⁪‌​⁫⁫‮⁬‍‬‍‎‮‬⁫‌‪‏‏⁪‮‍‏⁮⁭‎‌‎⁫⁪‬‮(aItem, "\b");
            num1 = 1271213540;
            continue;
          case 26:
            int num10 = ch1 != ':' ? -1505137783 : (num10 = -2104236486);
            num1 = num10 ^ (int) num3 * -443947259;
            continue;
          case 27:
            num1 = (int) num3 * -71120006 ^ 772119626;
            continue;
          case 28:
            flag3 = JSONNode.\u202E‌‫‮‌⁫⁯⁪⁬‍⁪‪⁬‫‮⁮‎‎​​‫⁮‎⁫‮⁪⁯⁪⁬‭‌‮‎⁭‪‍‬‫⁬‮(aItem, "");
            num1 = 1249400049;
            continue;
          case 29:
label_124:
            string s = JSONNode.\u202D‌​⁫⁭‌‫‫‪‏⁮​‎‎⁮⁮‏⁮‌⁭‌‫⁯‭‏⁭⁭​‬‭⁬‍‪⁭⁫⁬⁪⁫⁯⁭‮(aJSON, num2 + 1, 4);
            string str3 = aItem;
            ch4 = (char) int.Parse(s, NumberStyles.AllowHexSpecifier);
            string str4 = ch4.ToString();
            aItem = JSONNode.\u200F‌‬‪‭⁪⁭⁪‍‮⁪‌​⁫⁫‮⁬‍‬‍‎‮‬⁫‌‪‏‏⁪‮‍‏⁮⁭‎‌‎⁫⁪‬‮(str3, str4);
            num2 += 4;
            num1 = 1011059965;
            continue;
          case 30:
            num1 = (int) num3 * 1132279310 ^ 457981062;
            continue;
          case 31:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -1414716374 ^ -395657275;
            continue;
          case 32:
            int num11;
            num1 = num11 = ch1 > ']' ? 463973095 : (num11 = 1150413027);
            continue;
          case 33:
label_144:
            int num12;
            num1 = num12 = flag2 ? 266243314 : (num12 = 1177731563);
            continue;
          case 34:
            int num13 = flag9 ? -2135933354 : (num13 = -797742558);
            num1 = num13 ^ (int) num3 * 1389506677;
            continue;
          case 35:
            num1 = (int) num3 * -326275062 ^ -1094491128;
            continue;
          case 36:
            num1 = (int) num3 * 1087584217 ^ -2086591729;
            continue;
          case 38:
            num1 = (int) num3 * -326393719 ^ -1422058336;
            continue;
          case 39:
            flag6 = JSONNode.\u202E‌‫‮‌⁫⁯⁪⁬‍⁪‪⁬‫‮⁮‎‎​​‫⁮‎⁫‮⁪⁯⁪⁬‭‌‮‎⁭‪‍‬‫⁬‮(aKey, "");
            num1 = 220848021;
            continue;
          case 40:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -1899299561 ^ 1104324485;
            continue;
          case 41:
            aItem = JSONNode.\u200F‌‬‪‭⁪⁭⁪‍‮⁪‌​⁫⁫‮⁬‍‬‍‎‮‬⁫‌‪‏‏⁪‮‍‏⁮⁭‎‌‎⁫⁪‬‮(aItem, "\f");
            num1 = 1746320899;
            continue;
          case 42:
            flag14 = flag2;
            num1 = 233503847;
            continue;
          case 43:
            num1 = (int) num3 * 515062443 ^ -137996818;
            continue;
          case 44:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num1 = 1561227187;
            continue;
          case 45:
label_7:
            aItem = JSONNode.\u200F‌‬‪‭⁪⁭⁪‍‮⁪‌​⁫⁫‮⁬‍‬‍‎‮‬⁫‌‪‏‏⁪‮‍‏⁮⁭‎‌‎⁫⁪‬‮(aItem, "\r");
            num1 = 1360366507;
            continue;
          case 46:
            num1 = (int) num3 * 327089517 ^ 1416582408;
            continue;
          case 47:
            int num14 = flag11 ? 972276274 : (num14 = 1911255607);
            num1 = num14 ^ (int) num3 * 1363372355;
            continue;
          case 48:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 650275150 ^ 2102628878;
            continue;
          case 49:
            int num15 = !(jsonNode1 is JSONArray) ? 1918196582 : (num15 = 1300205009);
            num1 = num15 ^ (int) num3 * 1970387585;
            continue;
          case 50:
            string str5 = aItem;
            ch4 = JSONNode.\u200F‏‍‫⁬‭⁬⁮‪‬‭‎⁭⁬⁮‍‬‫​‎⁯‫‪‎‭⁮‪⁪‮‬‏‪‭⁯‏‮⁪‬⁮⁫‮(aJSON, num2);
            string str6 = ch4.ToString();
            aItem = JSONNode.\u200F‌‬‪‭⁪⁭⁪‍‮⁪‌​⁫⁫‮⁬‍‬‍‎‮‬⁫‌‪‏‏⁪‮‍‏⁮⁭‎‌‎⁫⁪‬‮(str5, str6);
            num1 = (int) num3 * -2036487829 ^ -828976596;
            continue;
          case 51:
            ch1 = ch5;
            num1 = (int) num3 * -138605706 ^ 2142846072;
            continue;
          case 52:
            int num16;
            num1 = num16 = ch1 == '{' ? 638786675 : (num16 = 2044226737);
            continue;
          case 54:
            aKey = "";
            aItem = "";
            num1 = 384299703;
            continue;
          case 55:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -1535389826 ^ -1138754417;
            continue;
          case 56:
            flag7 = jsonNodeStack.Count > 0;
            num1 = (int) num3 * -589401417 ^ 1512663932;
            continue;
          case 57:
            aItem = JSONNode.\u200F‌‬‪‭⁪⁭⁪‍‮⁪‌​⁫⁫‮⁬‍‬‍‎‮‬⁫‌‪‏‏⁪‮‍‏⁮⁭‎‌‎⁫⁪‬‮(aItem, "\n");
            num1 = 1271213540;
            continue;
          case 58:
            int num17 = !flag1 ? 1984129886 : (num17 = 1412262542);
            num1 = num17 ^ (int) num3 * -844974733;
            continue;
          case 59:
            num1 = (int) num3 * 2000669814 ^ 1427167808;
            continue;
          case 60:
            flag11 = JSONNode.\u202E‌‫‮‌⁫⁯⁪⁬‍⁪‪⁬‫‮⁮‎‎​​‫⁮‎⁫‮⁪⁯⁪⁬‭‌‮‎⁭‪‍‬‫⁬‮(aKey, "");
            num1 = 1931436018;
            continue;
          case 61:
            num1 = (int) num3 * -859592438 ^ -744749363;
            continue;
          case 62:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -991614490 ^ 117155725;
            continue;
          case 63:
            num1 = (int) num3 * -1796839649 ^ -336224279;
            continue;
          case 64:
            aKey = "";
            num1 = (int) num3 * -1761843064 ^ 2114086130;
            continue;
          case 65:
            int num18 = flag8 ? 1166736678 : (num18 = 323917562);
            num1 = num18 ^ (int) num3 * 744926532;
            continue;
          case 66:
            num1 = (int) num3 * -795331764 ^ -1255216358;
            continue;
          case 67:
            aItem = "";
            num1 = (int) num3 * 1058886958 ^ 234982461;
            continue;
          case 68:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 1501666706 ^ -1491402811;
            continue;
          case 69:
            ch2 = JSONNode.\u200F‏‍‫⁬‭⁬⁮‪‬‭‎⁭⁬⁮‍‬‫​‎⁯‫‪‎‭⁮‪⁪‮‬‏‪‭⁯‏‮⁪‬⁮⁫‮(aJSON, num2);
            num1 = (int) num3 * -2146960698 ^ -1780198910;
            continue;
          case 70:
            num1 = (int) num3 * 645994865 ^ -1365158822;
            continue;
          case 71:
label_85:
            string str7 = aItem;
            ch4 = JSONNode.\u200F‏‍‫⁬‭⁬⁮‪‬‭‎⁭⁬⁮‍‬‫​‎⁯‫‪‎‭⁮‪⁪‮‬‏‪‭⁯‏‮⁪‬⁮⁫‮(aJSON, num2);
            string str8 = ch4.ToString();
            aItem = JSONNode.\u200F‌‬‪‭⁪⁭⁪‍‮⁪‌​⁫⁫‮⁬‍‬‍‎‮‬⁫‌‪‏‏⁪‮‍‏⁮⁭‎‌‎⁫⁪‬‮(str7, str8);
            num1 = 61060841;
            continue;
          case 72:
            num1 = (int) num3 * -111026777 ^ -2111836178;
            continue;
          case 73:
            num1 = (int) num3 * -1764529263 ^ 597790693;
            continue;
          case 74:
            num1 = (int) num3 * -1435414852 ^ 2020497417;
            continue;
          case 75:
            num1 = (int) num3 * 1918807714 ^ 1153737699;
            continue;
          case 76:
            flag4 = jsonNode1 != (object) null;
            num1 = (int) num3 * -823073208 ^ 345943784;
            continue;
          case 77:
            ch3 = ch2;
            num1 = (int) num3 * -728786391 ^ 1643633973;
            continue;
          case 78:
            num1 = (int) num3 * -1440004106 ^ -1226418167;
            continue;
          case 79:
            int num19;
            num1 = num19 = ch1 == '}' ? 1227256720 : (num19 = 432323460);
            continue;
          case 80:
            int num20 = !flag14 ? 1006682680 : (num20 = 1191103899);
            num1 = num20 ^ (int) num3 * 504642637;
            continue;
          case 81:
            flag9 = jsonNodeStack.Count == 0;
            num1 = 1562475427;
            continue;
          case 82:
            aKey = "";
            aItem = "";
            num1 = 735760225;
            continue;
          case 83:
            int num21;
            num1 = num21 = ch3 != 'n' ? 1440539780 : (num21 = 1616635472);
            continue;
          case 84:
            num1 = 1357587695;
            continue;
          case 85:
            int num22 = !flag13 ? 1921861333 : (num22 = 546805739);
            num1 = num22 ^ (int) num3 * 697569239;
            continue;
          case 86:
            string str9 = aItem;
            ch4 = JSONNode.\u200F‏‍‫⁬‭⁬⁮‪‬‭‎⁭⁬⁮‍‬‫​‎⁯‫‪‎‭⁮‪⁪‮‬‏‪‭⁯‏‮⁪‬⁮⁫‮(aJSON, num2);
            string str10 = ch4.ToString();
            aItem = JSONNode.\u200F‌‬‪‭⁪⁭⁪‍‮⁪‌​⁫⁫‮⁬‍‬‍‎‮‬⁫‌‪‏‏⁪‮‍‏⁮⁭‎‌‎⁫⁪‬‮(str9, str10);
            num1 = (int) num3 * -1555392010 ^ 1858210236;
            continue;
          case 87:
            int num23 = flag4 ? 1403106868 : (num23 = 606819092);
            num1 = num23 ^ (int) num3 * 1263037261;
            continue;
          case 88:
            aKey = aItem;
            aItem = "";
            num1 = 1037178146;
            continue;
          case 89:
            string str11 = aItem;
            ch4 = JSONNode.\u200F‏‍‫⁬‭⁬⁮‪‬‭‎⁭⁬⁮‍‬‫​‎⁯‫‪‎‭⁮‪⁪‮‬‏‪‭⁯‏‮⁪‬⁮⁫‮(aJSON, num2);
            string str12 = ch4.ToString();
            aItem = JSONNode.\u200F‌‬‪‭⁪⁭⁪‍‮⁪‌​⁫⁫‮⁬‍‬‍‎‮‬⁫‌‪‏‏⁪‮‍‏⁮⁭‎‌‎⁫⁪‬‮(str11, str12);
            num1 = (int) num3 * -1748843785 ^ 655261801;
            continue;
          case 90:
            num1 = (int) num3 * -1745342294 ^ -1948913610;
            continue;
          case 91:
            num1 = 466025558;
            continue;
          case 92:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -320184706 ^ 124771099;
            continue;
          case 93:
            int num24 = ch3 == 'b' ? 1795337518 : (num24 = 1278350938);
            num1 = num24 ^ (int) num3 * -1343476446;
            continue;
          case 95:
            int num25 = ch1 > ',' ? 622943731 : (num25 = 1864728357);
            num1 = num25 ^ (int) num3 * 958645986;
            continue;
          case 96:
            int num26;
            num1 = num26 = ch1 == ' ' ? 301351832 : (num26 = 1324848862);
            continue;
          case 97:
            num1 = (int) num3 * -1401425576 ^ -1173750760;
            continue;
          case 98:
            ch5 = JSONNode.\u200F‏‍‫⁬‭⁬⁮‪‬‭‎⁭⁬⁮‍‬‫​‎⁯‫‪‎‭⁮‪⁪‮‬‏‪‭⁯‏‮⁪‬⁮⁫‮(aJSON, num2);
            num1 = (int) num3 * -554104440 ^ 1220872772;
            continue;
          case 99:
            int num27;
            num1 = num27 = !flag2 ? 1415732585 : (num27 = 1458991104);
            continue;
          case 100:
            int num28;
            num1 = num28 = ch1 == '"' ? 281896487 : (num28 = 1683361726);
            continue;
          case 101:
            num1 = (int) num3 * 1040749994 ^ 909385432;
            continue;
          case 102:
label_118:
            aItem = JSONNode.\u200F‌‬‪‭⁪⁭⁪‍‮⁪‌​⁫⁫‮⁬‍‬‍‎‮‬⁫‌‪‏‏⁪‮‍‏⁮⁭‎‌‎⁫⁪‬‮(aItem, "\t");
            num1 = 1271213540;
            continue;
          case 103:
            num1 = 1473562283;
            continue;
          case 104:
            num1 = (int) num3 * -543512405 ^ 1765418666;
            continue;
          case 105:
            int num29 = ch3 <= 'f' ? 932787808 : (num29 = 577107604);
            num1 = num29 ^ (int) num3 * 1810119722;
            continue;
          case 106:
            num1 = (int) num3 * -1539065253 ^ -2099849032;
            continue;
          case 107:
            num1 = (int) num3 * -844017595 ^ -1596544267;
            continue;
          case 108:
            switch (ch3)
            {
              case 'r':
                goto label_7;
              case 's':
                goto label_16;
              case 't':
                goto label_118;
              case 'u':
                goto label_124;
              default:
                num1 = 1068991603;
                continue;
            }
          case 109:
            aItem = "";
            num1 = (int) num3 * -606100937 ^ 229471958;
            continue;
          case 110:
            num1 = (int) num3 * 2083942613 ^ 189368530;
            continue;
          case 111:
            num1 = (int) num3 * -789141477 ^ -264470701;
            continue;
          case 112:
            aItem = "";
            num1 = (int) num3 * 191208268 ^ -1180575041;
            continue;
          case 113:
            int num30 = flag7 ? -2057329311 : (num30 = -357571211);
            num1 = num30 ^ (int) num3 * -680543180;
            continue;
          case 114:
            int num31;
            num1 = num31 = ch1 != ',' ? 726084773 : (num31 = 1150063051);
            continue;
          case 115:
label_10:
            int num32;
            num1 = num32 = !flag2 ? 1985591418 : (num32 = 1967790233);
            continue;
          case 116:
            num1 = (int) num3 * 1547395149 ^ 809985109;
            continue;
          case 117:
            num1 = (int) num3 * 1410368005 ^ -356104906;
            continue;
          case 118:
            aKey = "";
            num1 = 1961076215;
            continue;
          case 119:
            num1 = (int) num3 * -1370980124 ^ -1343508474;
            continue;
          case 120:
            string str13 = aItem;
            ch4 = JSONNode.\u200F‏‍‫⁬‭⁬⁮‪‬‭‎⁭⁬⁮‍‬‫​‎⁯‫‪‎‭⁮‪⁪‮‬‏‪‭⁯‏‮⁪‬⁮⁫‮(aJSON, num2);
            string str14 = ch4.ToString();
            aItem = JSONNode.\u200F‌‬‪‭⁪⁭⁪‍‮⁪‌​⁫⁫‮⁬‍‬‍‎‮‬⁫‌‪‏‏⁪‮‍‏⁮⁭‎‌‎⁫⁪‬‮(str13, str14);
            num1 = (int) num3 * -2120226728 ^ -660625990;
            continue;
          case 121:
            jsonNode2 = jsonNode1;
            num1 = 470067918;
            continue;
          case 122:
            aKey = JSONNode.\u202A‭⁪⁭⁭‫⁮⁪⁪‭‏‫‌‮⁮⁭‮‎​‬‬‬‌⁫‪⁮‫‪​⁭⁬⁪‌⁪⁬‫‌⁯‮‫‮(aKey);
            num1 = (int) num3 * -102372321 ^ -979594710;
            continue;
          case 124:
            int num33 = !flag3 ? -1399830477 : (num33 = -1570893509);
            num1 = num33 ^ (int) num3 * -680781562;
            continue;
          case 125:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * 2103338408 ^ 1899017492;
            continue;
          case 126:
            flag10 = flag2;
            num1 = 1654792358;
            continue;
          case (uint) sbyte.MaxValue:
            num1 = 1936065219;
            continue;
          case 128:
            num1 = (int) num3 * -1560433194 ^ 1547959492;
            continue;
          case 129:
            flag15 = flag2;
            num1 = (int) num3 * 120805253 ^ 1432612271;
            continue;
          case 130:
            goto label_1;
          case 131:
label_34:
            flag8 = flag2;
            num1 = 798376344;
            continue;
          case 132:
            int num34 = flag12 ? -1612110759 : (num34 = -1705322797);
            num1 = num34 ^ (int) num3 * -1324577721;
            continue;
          case 134:
            jsonNode1 = (JSONNode) null;
            num2 = 0;
            num1 = (int) num3 * 20571041 ^ 1796856186;
            continue;
          case 135:
            jsonNodeStack.Pop();
            int num35;
            num1 = num35 = JSONNode.\u202E‌‫‮‌⁫⁯⁪⁬‍⁪‪⁬‫‮⁮‎‎​​‫⁮‎⁫‮⁪⁯⁪⁬‭‌‮‎⁭‪‍‬‫⁬‮(aItem, "") ? 1678242078 : (num35 = 1473562283);
            continue;
          case 136:
            int num36 = ch1 <= ' ' ? 1965394871 : (num36 = 829758113);
            num1 = num36 ^ (int) num3 * -1798214460;
            continue;
          case 137:
            switch (ch1)
            {
              case '[':
                goto label_144;
              case '\\':
                goto label_90;
              case ']':
                goto label_34;
              default:
                num1 = 1384320262;
                continue;
            }
          case 138:
            flag2 = !flag2;
            num1 = 644216837;
            continue;
          case 139:
            aKey = JSONNode.\u202A‭⁪⁭⁭‫⁮⁪⁪‭‏‫‌‮⁮⁭‮‎​‬‬‬‌⁫‪⁮‫‪​⁭⁬⁪‌⁪⁬‫‌⁯‮‫‮(aKey);
            num1 = (int) num3 * -1287711959 ^ 1532219447;
            continue;
          case 140:
            int num37;
            num1 = num37 = num2 >= JSONNode.\u200D⁮‎‬⁮‫‏‏⁫‪‍‬⁮​‮‮‭‭‮⁮⁭‮‎⁯‪​‌‎⁫⁫‬⁪⁮‫​‏⁭‍‏⁯‮(aJSON) ? 1907489512 : (num37 = 485229366);
            continue;
          case 141:
            int num38 = !(jsonNode1 != (object) null) ? 1917760087 : (num38 = 1956129018);
            num1 = num38 ^ (int) num3 * -174843784;
            continue;
          case 142:
            num1 = (int) num3 * 1113862311 ^ -533618100;
            continue;
          case 143:
            num1 = (int) num3 * 1105295040 ^ -84397854;
            continue;
          case 144:
label_16:
            aItem = JSONNode.\u200F‌‬‪‭⁪⁭⁪‍‮⁪‌​⁫⁫‮⁬‍‬‍‎‮‬⁫‌‪‏‏⁪‮‍‏⁮⁭‎‌‎⁫⁪‬‮(aItem, ch2.ToString());
            num1 = 75720005;
            continue;
          case 145:
            goto label_78;
          case 146:
            string str15 = aItem;
            ch4 = JSONNode.\u200F‏‍‫⁬‭⁬⁮‪‬‭‎⁭⁬⁮‍‬‫​‎⁯‫‪‎‭⁮‪⁪‮‬‏‪‭⁯‏‮⁪‬⁮⁫‮(aJSON, num2);
            string str16 = ch4.ToString();
            aItem = JSONNode.\u200F‌‬‪‭⁪⁭⁪‍‮⁪‌​⁫⁫‮⁬‍‬‍‎‮‬⁫‌‪‏‏⁪‮‍‏⁮⁭‎‌‎⁫⁪‬‮(str15, str16);
            num1 = (int) num3 * -1628846331 ^ 1115648961;
            continue;
          case 147:
            aKey = JSONNode.\u202A‭⁪⁭⁭‫⁮⁪⁪‭‏‫‌‮⁮⁭‮‎​‬‬‬‌⁫‪⁮‫‪​⁭⁬⁪‌⁪⁬‫‌⁯‮‫‮(aKey);
            num1 = (int) num3 * -194450987 ^ -1878121429;
            continue;
          case 148:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 1772297984 ^ 1131796770;
            continue;
          case 149:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            num1 = 875538160;
            continue;
          case 150:
            num1 = (int) num3 * -292973878 ^ -674689128;
            continue;
          case 151:
            int num39 = flag10 ? -1181143477 : (num39 = -1358231559);
            num1 = num39 ^ (int) num3 * -1752810920;
            continue;
          case 152:
            flag1 = JSONNode.\u202E‌‫‮‌⁫⁯⁪⁬‍⁪‪⁬‫‮⁮‎‎​​‫⁮‎⁫‮⁪⁯⁪⁬‭‌‮‎⁭‪‍‬‫⁬‮(aKey, "");
            num1 = 1465453593;
            continue;
          case 153:
            num1 = (int) num3 * -1056908658 ^ 1509632081;
            continue;
          default:
            goto label_154;
        }
      }
label_78:
      throw JSONNode.\u206E‍‏⁬‏⁭‮‍​⁯​‌‫‭⁬‭‫⁯​​⁯‫⁫⁬‎‌‏‮⁯⁯​‎‍‭‭‫‍‍⁮‭‮("JSON Parse: Too many closing brackets");
label_81:
      throw JSONNode.\u206E‍‏⁬‏⁭‮‍​⁯​‌‫‭⁬‭‫⁯​​⁯‫⁫⁬‎‌‏‮⁯⁯​‎‍‭‭‫‍‍⁮‭‮("JSON Parse: Quotation marks seems to be messed up.");
label_154:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData) => this.Serialize(JSONNode.\u200E⁬⁭‬⁬‍‬‍⁪‍‪​⁮‫⁪⁭‌‍⁪‭⁯‍‎⁭‌‏‪⁭‌‎‭⁪⁭⁮‎⁬‎‍‪‫‮(aData));

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u206E‍‏⁬‏⁭‮‍​⁯​‌‫‭⁬‭‫⁯​​⁯‫⁫⁬‎‌‏‮⁯⁯​‎‍‭‭‫‍‍⁮‭‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u206E‍‏⁬‏⁭‮‍​⁯​‌‫‭⁬‭‫⁯​​⁯‫⁫⁬‎‌‏‮⁯⁯​‎‍‭‭‫‍‍⁮‭‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u206E‍‏⁬‏⁭‮‍​⁯​‌‫‭⁬‭‫⁯​​⁯‫⁫⁬‎‌‏‮⁯⁯​‎‍‭‭‫‍‍⁮‭‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
      JSONNode.\u206A‭‬⁯‮⁬⁮⁭‎‬⁮‪‫‏‬‬⁮‍‪⁯‫‪⁬‏⁭‭‭‏⁪‫‍‎‪‎‭‫⁫‬‏‭‮(JSONNode.\u200B‬‬⁬⁫‎⁮⁪⁪⁬‎‎‬⁭⁮⁫​‭‬⁯⁭‏⁫‫‎⁮‪‎⁬‮‎⁭‎‬⁮⁫⁪‌⁭‫‮((FileSystemInfo) JSONNode.\u206B‏⁬⁪⁮‍‫‭‏‌⁯‫‍‎‏‮‏⁯⁯​‎⁯‪‏⁫‍‏‍‎‭‫⁪‪‬‎‫‮‌‎⁭‮(JSONNode.\u200B‮‫‬‌⁫‎‫‏‪⁪‪‪‎‎‭‬‎‪‍⁬‎⁭‏‭‪‎‫‍⁮‫⁭⁭⁪‮⁫⁬⁬⁭⁮‮(aFileName))));
      FileStream aData = JSONNode.\u206F⁮‮​⁬⁭⁮⁯⁪⁭⁬⁫⁫‍‍⁮⁫‫‎⁫‪⁪‬​​​⁫‪⁯‫⁪‎⁭⁫‍⁪⁬⁪‍‫‮(aFileName);
      try
      {
label_2:
        int num1 = -285431580;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -443778392)) % 3U)
          {
            case 0:
              goto label_2;
            case 1:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * 908585362 ^ -85737800;
              continue;
            case 2:
              goto label_9;
            default:
              goto label_5;
          }
        }
label_9:
        return;
label_5:;
      }
      finally
      {
        if (aData != null)
        {
label_7:
          int num3 = -973942232;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -443778392)) % 3U)
            {
              case 0:
                goto label_7;
              case 1:
                JSONNode.\u202A‮‌‭⁪‍‎⁬‍⁯‬⁬⁬‏‭‪⁪‮‍⁪⁬⁬⁬‭⁯⁮⁯⁮‫‮⁮‮‬⁫⁪‭‌‏​‏‮((IDisposable) aData);
                num3 = (int) num4 * 788391947 ^ 1432132553;
                continue;
              default:
                goto label_11;
            }
          }
        }
label_11:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u200D‌⁫‭‪‫‎‭⁯‪‏⁭‍‪‮‪‏‌‪⁮⁪‎‫⁫‮‮‏‬⁮⁬⁬‭‭⁮‌‎‍⁮⁪‭‮();
      try
      {
        this.SaveToStream((Stream) aData);
        JSONNode.\u206E‮‮‮‫‬⁮‪⁮‭‎‌‫‍‮‏‍⁯⁫⁫‌⁬⁯⁬⁯‍⁪‮‎⁯⁭⁫⁪​‫‫⁬‮‏‏‮((Stream) aData, 0L);
        return JSONNode.\u202C‬⁮⁫‍⁫‬‮‪‬⁬​‌⁪​‌‍⁫‬‏​‫⁫⁭‬⁪‬⁮⁭⁯‪‪‫⁮⁭⁮‎‫‏⁬‮(JSONNode.\u206D‭‬‮⁮⁯‮‌⁭‫⁮⁫​⁭⁯‬⁮‫⁫⁪‎‍⁬‌‮‫‫⁯⁯⁬‌⁮‬‫​⁫‬‮‎⁫‮(aData));
      }
      finally
      {
        if (aData != null)
        {
label_3:
          int num1 = 497027252;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ 324872147)) % 4U)
            {
              case 0:
                goto label_3;
              case 1:
                num1 = (int) num2 * 1704942611 ^ -311718578;
                continue;
              case 3:
                JSONNode.\u202A‮‌‭⁪‍‎⁬‍⁯‬⁬⁬‏‭‪⁪‮‍⁪⁬⁬⁬‭⁯⁮⁯⁮‫‮⁮‮‬⁫⁪‭‌‏​‏‮((IDisposable) aData);
                num1 = (int) num2 * 1578142363 ^ 1415435423;
                continue;
              default:
                goto label_7;
            }
          }
        }
label_7:;
      }
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
label_1:
      int num1 = -682555854;
      string aKey;
      JSONNode jsonNode;
      int num2;
      int num3;
      int num4;
      JSONBinaryTag jsonBinaryTag1;
      JSONArray jsonArray;
      JSONClass jsonClass;
      JSONBinaryTag jsonBinaryTag2;
      int num5;
      bool flag;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ -260811298)) % 39U)
        {
          case 0:
label_25:
            num1 = -2104218971;
            continue;
          case 1:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * -1291159354 ^ 121358014;
            continue;
          case 2:
            jsonBinaryTag2 = (JSONBinaryTag) JSONNode.\u206E‬‮‮​⁭⁯⁮‍⁪‏‮⁭‏‌‫‮⁪⁪‌⁬⁪​‫‬⁮‭​‬⁯‪‌‬⁮⁬‭⁯⁭‬⁮‮(aReader);
            num1 = (int) num6 * 972367150 ^ -1141533595;
            continue;
          case 3:
            num1 = (int) num6 * -109298998 ^ -624571831;
            continue;
          case 4:
label_9:
            num1 = -1124049501;
            continue;
          case 5:
            num1 = (int) num6 * 522747348 ^ -50314225;
            continue;
          case 6:
            num1 = (int) num6 * -1620170401 ^ 1608512017;
            continue;
          case 7:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * 1882250881 ^ -1608740976;
            continue;
          case 8:
            num1 = (int) num6 * 1887014328 ^ -375081065;
            continue;
          case 9:
            ++num3;
            num1 = (int) num6 * 1474726991 ^ 776398826;
            continue;
          case 10:
            int num7 = !flag ? -251040420 : (num7 = -1957518703);
            num1 = num7 ^ (int) num6 * 2013025687;
            continue;
          case 11:
            num4 = JSONNode.\u202E‌‌‎⁭⁪‌‭⁪‍⁪‌⁪⁮⁬⁪​‮⁬‮⁮‍⁪⁫‪‬⁯‌⁭‍⁬‮‌⁬⁫‌‏‍⁯⁬‮(aReader);
            num1 = (int) num6 * -359042172 ^ -1905657057;
            continue;
          case 12:
            jsonBinaryTag1 = jsonBinaryTag2;
            num1 = (int) num6 * 821847781 ^ -4516575;
            continue;
          case 13:
            jsonClass = new JSONClass();
            num1 = (int) num6 * -1776980273 ^ -1855457564;
            continue;
          case 14:
            flag = num2 < num5;
            num1 = -190769595;
            continue;
          case 15:
label_19:
            num1 = -1354415247;
            continue;
          case 16:
label_15:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200D‫⁭‪‫‎‫‭‫⁯⁫⁮⁬‎‌‭⁭‭‏⁮‫‫​​‍‎‬‭⁪​‌‪‍‌⁮⁬‎‏⁫⁬‮(aReader));
            num1 = -43044399;
            continue;
          case 17:
            num5 = JSONNode.\u202E‌‌‎⁭⁪‌‭⁪‍⁪‌⁪⁮⁬⁪​‮⁬‮⁮‍⁪⁫‪‬⁯‌⁭‍⁬‮‌⁬⁫‌‏‍⁯⁬‮(aReader);
            jsonArray = new JSONArray();
            num2 = 0;
            num1 = (int) num6 * 782191734 ^ 1142201659;
            continue;
          case 18:
            JSONNode aItem = JSONNode.Deserialize(aReader);
            jsonClass.Add(aKey, aItem);
            num1 = (int) num6 * -2075286881 ^ -1918674313;
            continue;
          case 19:
            num1 = (int) num6 * 1052117601 ^ 1356104573;
            continue;
          case 20:
            aKey = JSONNode.\u200D‪⁭‍‏‬‬‬‮⁬‫⁭‭‏‏​‬⁮⁫‬‬⁪‬‍⁪‫‌⁯⁫‍‌‍⁪⁯⁬‌​‪⁯⁬‮(aReader);
            num1 = (int) num6 * -1608163853 ^ 1486812884;
            continue;
          case 21:
label_7:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200B⁫​⁮⁬‫‍⁯‭‬‎‫⁭⁭‬‬⁫⁬‬‫⁮⁫‮⁬‭‏⁪⁯‮​⁪⁪‬⁯⁪‍‍‏​⁪‮(aReader));
            num1 = -185191844;
            continue;
          case 22:
            switch (jsonBinaryTag1)
            {
              case JSONBinaryTag.Array:
                goto label_19;
              case JSONBinaryTag.Class:
                goto label_9;
              case JSONBinaryTag.Value:
                goto label_25;
              case JSONBinaryTag.IntValue:
                goto label_34;
              case JSONBinaryTag.DoubleValue:
                goto label_7;
              case JSONBinaryTag.BoolValue:
                goto label_15;
              case JSONBinaryTag.FloatValue:
                goto label_10;
              default:
                num1 = (int) num6 * 1891040705 ^ -256068902;
                continue;
            }
          case 23:
label_10:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206C‏⁭⁪⁬‏‭⁪‫⁯‫‍‭⁯⁮‌⁫‭​‏‎⁫‪⁪⁯⁫⁭‎‭⁭‮‫‌‎⁭‍⁮‫‌⁯‮(aReader));
            num1 = -1398812244;
            continue;
          case 24:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200D‪⁭‍‏‬‬‬‮⁬‫⁭‭‏‏​‬⁮⁫‬‬⁪‬‍⁪‫‌⁯⁫‍‌‍⁪⁯⁬‌​‪⁯⁬‮(aReader));
            num1 = (int) num6 * 895025379 ^ 278106190;
            continue;
          case 25:
            goto label_1;
          case 26:
label_34:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202E‌‌‎⁭⁪‌‭⁪‍⁪‌⁪⁮⁬⁪​‮⁬‮⁮‍⁪⁫‪‬⁯‌⁭‍⁬‮‌⁬⁫‌‏‍⁯⁬‮(aReader));
            num1 = -271298790;
            continue;
          case 27:
            num1 = -1449374041;
            continue;
          case 28:
            ++num2;
            num1 = (int) num6 * 282309141 ^ -656572287;
            continue;
          case 29:
            num1 = (int) num6 * -1551784376 ^ 829182661;
            continue;
          case 31:
            goto label_23;
          case 32:
            int num8;
            num1 = num8 = num3 < num4 ? -205208611 : (num8 = -1190729281);
            continue;
          case 33:
            num1 = (int) num6 * -300516756 ^ -565938803;
            continue;
          case 34:
            num1 = (int) num6 * 1084710459 ^ 1150946473;
            continue;
          case 35:
            num1 = (int) num6 * 1072347935 ^ 979014105;
            continue;
          case 36:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            num1 = -1655790810;
            continue;
          case 37:
            num3 = 0;
            num1 = (int) num6 * -252840652 ^ -2072930957;
            continue;
          case 38:
            num1 = -691327414;
            continue;
          default:
            goto label_41;
        }
      }
label_23:
      throw JSONNode.\u206E‍‏⁬‏⁭‮‍​⁯​‌‫‭⁬‭‫⁯​​⁯‫⁫⁬‎‌‏‮⁯⁯​‎‍‭‭‫‍‍⁮‭‮(JSONNode.\u200F‌‬‪‭⁪⁭⁪‍‮⁪‌​⁫⁫‮⁬‍‬‍‎‮‬⁫‌‪‏‏⁪‮‍‏⁮⁭‎‌‎⁫⁪‬‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag2.ToString()));
label_41:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u206E‍‏⁬‏⁭‮‍​⁯​‌‫‭⁬‭‫⁯​​⁯‫⁫⁬‎‌‏‮⁯⁯​‎‍‭‭‫‍‍⁮‭‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u206E‍‏⁬‏⁭‮‍​⁯​‌‫‭⁬‭‫⁯​​⁯‫⁫⁬‎‌‏‮⁯⁯​‎‍‭‭‫‍‍⁮‭‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u206E‍‏⁬‏⁭‮‍​⁯​‌‫‭⁬‭‫⁯​​⁯‫⁫⁬‎‌‏‮⁯⁯​‎‍‭‭‫‍‍⁮‭‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u202E⁯‭‏​‪‫‌⁬‍⁮‮⁮‬⁪‌‪⁮⁫⁬‫‭‬⁫⁮‎‎⁫‫‬‭‫‮‬‫⁯‍‬‬‬‮(aData);
      try
      {
        return JSONNode.Deserialize(aReader);
      }
      finally
      {
        if (aReader != null)
        {
label_3:
          int num1 = 1121359316;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ 1795590658)) % 4U)
            {
              case 0:
                goto label_3;
              case 2:
                JSONNode.\u202A‮‌‭⁪‍‎⁬‍⁯‬⁬⁬‏‭‪⁪‮‍⁪⁬⁬⁬‭⁯⁮⁯⁮‫‮⁮‮‬⁫⁪‭‌‏​‏‮((IDisposable) aReader);
                num1 = (int) num2 * 2055965648 ^ 494350909;
                continue;
              case 3:
                num1 = (int) num2 * -1345656524 ^ -1387930953;
                continue;
              default:
                goto label_7;
            }
          }
        }
label_7:;
      }
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u206B⁯⁯‮‎⁬‍‎⁮‪‮⁫⁪‫⁯‏⁬⁬‮‎‏‭‎⁭⁯⁬⁮‫‮‮⁪‬⁯‭‌‪⁮‌‍⁯‮(aFileName);
      try
      {
        return JSONNode.LoadFromStream((Stream) aData);
      }
      finally
      {
        if (aData != null)
        {
label_3:
          int num1 = -1486639849;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ -1996083569)) % 3U)
            {
              case 1:
                JSONNode.\u202A‮‌‭⁪‍‎⁬‍⁯‬⁬⁬‏‭‪⁪‮‍⁪⁬⁬⁬‭⁯⁮⁯⁮‫‮⁮‮‬⁫⁪‭‌‏​‏‮((IDisposable) aData);
                num1 = (int) num2 * -1872663364 ^ -1359002049;
                continue;
              case 2:
                goto label_3;
              default:
                goto label_6;
            }
          }
        }
label_6:;
      }
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
label_1:
      int num1 = 1765711167;
      byte[] numArray;
      MemoryStream aData;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 181912742)) % 8U)
        {
          case 0:
            num1 = (int) num2 * -1796980488 ^ 569866922;
            continue;
          case 1:
            numArray = JSONNode.\u200B‭‌⁭⁪​‪⁭‮‎‌‌‍​‬‍​‫‪⁭⁬⁯‫⁭‫⁪‏‬‮⁮‮‬⁫‌‎‏‭‎‮⁭‮(aBase64);
            num1 = (int) num2 * 468346885 ^ -1923791018;
            continue;
          case 2:
            JSONNode.\u206E‮‮‮‫‬⁮‪⁮‭‎‌‫‍‮‏‍⁯⁫⁫‌⁬⁯⁬⁯‍⁪‮‎⁯⁭⁫⁪​‫‫⁬‮‏‏‮((Stream) aData, 0L);
            num1 = (int) num2 * -646252743 ^ 1757389044;
            continue;
          case 3:
            goto label_1;
          case 4:
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * 140564614 ^ -1204576719;
            continue;
          case 5:
            aData = JSONNode.\u206B​⁪‌⁯‍⁫⁯​‏⁬‪⁪⁯‌‮‮⁪⁫‪‮⁯⁪⁭‫‎‮‪⁬‭⁪‮‫⁯⁬​⁭⁬‍⁮‮(numArray);
            num1 = (int) num2 * 588662522 ^ -793479794;
            continue;
          case 7:
            num1 = (int) num2 * -46391183 ^ -1577003393;
            continue;
          default:
            goto label_9;
        }
      }
label_9:
      return jsonNode;
    }

    static CultureInfo \u206D‌‌‮⁭⁭⁭‌⁬‍⁮⁭⁬⁪‏‫​‏⁮⁮⁪‎⁪‎‮‭‌‪​​⁫‍‎‍⁫⁭‫⁬‪‌‮() => CultureInfo.InvariantCulture;

    static bool \u206E‏⁭‮‫‪⁬‬⁬‌⁫⁭‮‌‪​‭‫​‪⁪‫‮‎‏⁫⁭⁯‌‫‎‭‬‍⁫⁭⁫‪‏⁪‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u206C⁬‎⁮‌‮⁭‫⁪⁬​‫‌‏⁪​⁫⁪⁪⁯⁪⁫⁭​‏‮⁮⁭‎‪‬⁯⁫‮‫⁫⁫‏⁮⁫‮() => base.GetHashCode();

    static char \u200F‏‍‫⁬‭⁬⁮‪‬‭‎⁭⁬⁮‍‬‫​‎⁯‫‪‎‭⁮‪⁪‮‬‏‪‭⁯‏‮⁪‬⁮⁫‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u200F‌‬‪‭⁪⁭⁪‍‮⁪‌​⁫⁫‮⁬‍‬‍‎‮‬⁫‌‪‏‏⁪‮‍‏⁮⁭‎‌‎⁫⁪‬‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u200D⁮‎‬⁮‫‏‏⁫‪‍‬⁮​‮‮‭‭‮⁮⁭‮‎⁯‪​‌‎⁫⁫‬⁪⁮‫​‏⁭‍‏⁯‮([In] string obj0) => obj0.Length;

    static string \u202A‭⁪⁭⁭‫⁮⁪⁪‭‏‫‌‮⁮⁭‮‎​‬‬‬‌⁫‪⁮‫‪​⁭⁬⁪‌⁪⁬‫‌⁯‮‫‮([In] string obj0) => obj0.Trim();

    static bool \u202E‌‫‮‌⁫⁯⁪⁬‍⁪‪⁬‫‮⁮‎‎​​‫⁮‎⁫‮⁪⁯⁪⁬‭‌‮‎⁭‪‍‬‫⁬‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u206E‍‏⁬‏⁭‮‍​⁯​‌‫‭⁬‭‫⁯​​⁯‫⁫⁬‎‌‏‮⁯⁯​‎‍‭‭‫‍‍⁮‭‮([In] string obj0) => new Exception(obj0);

    static string \u202D‌​⁫⁭‌‫‫‪‏⁮​‎‎⁮⁮‏⁮‌⁭‌‫⁯‭‏⁭⁭​‬‭⁬‍‪⁭⁫⁬⁪⁫⁯⁭‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u200E⁬⁭‬⁬‍‬‍⁪‍‪​⁮‫⁪⁭‌‍⁪‭⁯‍‎⁭‌‏‪⁭‌‎‭⁪⁭⁮‎⁬‎‍‪‫‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u200B‮‫‬‌⁫‎‫‏‪⁪‪‪‎‎‭‬‎‪‍⁬‎⁭‏‭‪‎‫‍⁮‫⁭⁭⁪‮⁫⁬⁬⁭⁮‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u206B‏⁬⁪⁮‍‫‭‏‌⁯‫‍‎‏‮‏⁯⁯​‎⁯‪‏⁫‍‏‍‎‭‫⁪‪‬‎‫‮‌‎⁭‮([In] FileInfo obj0) => obj0.Directory;

    static string \u200B‬‬⁬⁫‎⁮⁪⁪⁬‎‎‬⁭⁮⁫​‭‬⁯⁭‏⁫‫‎⁮‪‎⁬‮‎⁭‎‬⁮⁫⁪‌⁭‫‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u206A‭‬⁯‮⁬⁮⁭‎‬⁮‪‫‏‬‬⁮‍‪⁯‫‪⁬‏⁭‭‭‏⁪‫‍‎‪‎‭‫⁫‬‏‭‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u206F⁮‮​⁬⁭⁮⁯⁪⁭⁬⁫⁫‍‍⁮⁫‫‎⁫‪⁪‬​​​⁫‪⁯‫⁪‎⁭⁫‍⁪⁬⁪‍‫‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u202A‮‌‭⁪‍‎⁬‍⁯‬⁬⁬‏‭‪⁪‮‍⁪⁬⁬⁬‭⁯⁮⁯⁮‫‮⁮‮‬⁫⁪‭‌‏​‏‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u200D‌⁫‭‪‫‎‭⁯‪‏⁭‍‪‮‪‏‌‪⁮⁪‎‫⁫‮‮‏‬⁮⁬⁬‭‭⁮‌‎‍⁮⁪‭‮() => new MemoryStream();

    static void \u206E‮‮‮‫‬⁮‪⁮‭‎‌‫‍‮‏‍⁯⁫⁫‌⁬⁯⁬⁯‍⁪‮‎⁯⁭⁫⁪​‫‫⁬‮‏‏‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u206D‭‬‮⁮⁯‮‌⁭‫⁮⁫​⁭⁯‬⁮‫⁫⁪‎‍⁬‌‮‫‫⁯⁯⁬‌⁮‬‫​⁫‬‮‎⁫‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u202C‬⁮⁫‍⁫‬‮‪‬⁬​‌⁪​‌‍⁫‬‏​‫⁫⁭‬⁪‬⁮⁭⁯‪‪‫⁮⁭⁮‎‫‏⁬‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u206E‬‮‮​⁭⁯⁮‍⁪‏‮⁭‏‌‫‮⁪⁪‌⁬⁪​‫‬⁮‭​‬⁯‪‌‬⁮⁬‭⁯⁭‬⁮‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u202E‌‌‎⁭⁪‌‭⁪‍⁪‌⁪⁮⁬⁪​‮⁬‮⁮‍⁪⁫‪‬⁯‌⁭‍⁬‮‌⁬⁫‌‏‍⁯⁬‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u200D‪⁭‍‏‬‬‬‮⁬‫⁭‭‏‏​‬⁮⁫‬‬⁪‬‍⁪‫‌⁯⁫‍‌‍⁪⁯⁬‌​‪⁯⁬‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u200B⁫​⁮⁬‫‍⁯‭‬‎‫⁭⁭‬‬⁫⁬‬‫⁮⁫‮⁬‭‏⁪⁯‮​⁪⁪‬⁯⁪‍‍‏​⁪‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u200D‫⁭‪‫‎‫‭‫⁯⁫⁮⁬‎‌‭⁭‭‏⁮‫‫​​‍‎‬‭⁪​‌‪‍‌⁮⁬‎‏⁫⁬‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u206C‏⁭⁪⁬‏‭⁪‫⁯‫‍‭⁯⁮‌⁫‭​‏‎⁫‪⁪⁯⁫⁭‎‭⁭‮‫‌‎⁭‍⁮‫‌⁯‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u202E⁯‭‏​‪‫‌⁬‍⁮‮⁮‬⁪‌‪⁮⁫⁬‫‭‬⁫⁮‎‎⁫‫‬‭‫‮‬‫⁯‍‬‬‬‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u206B⁯⁯‮‎⁬‍‎⁮‪‮⁫⁪‫⁯‏⁬⁬‮‎‏‭‎⁭⁯⁬⁮‫‮‮⁪‬⁯‭‌‪⁮‌‍⁯‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u200B‭‌⁭⁪​‪⁭‮‎‌‌‍​‬‍​‫‪⁭⁬⁯‫⁭‫⁪‏‬‮⁮‮‬⁫‌‎‏‭‎‮⁭‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u206B​⁪‌⁯‍⁫⁯​‏⁬‪⁪⁯‌‮‮⁪⁫‪‮⁯⁪⁭‫‎‮‪⁬‭⁪‮‫⁯⁬​⁭⁬‍⁮‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
