// Decompiled with JetBrains decompiler
// Type: Cytotechnologist.Dice
// Assembly: DigitShap, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: AB9237C5-7B14-44B1-B37B-A2ADF34FB693
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-ed844cfae2c80b291651f15b71e1c0608612446513cb527a5753bfa831a2e348.exe

using System;
using System.Runtime.InteropServices;

namespace Cytotechnologist
{
  public class Dice
  {
    private readonly Random _random;

    public Dice()
    {
label_1:
      int num1 = -1013028819;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1774161245)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 257870426 ^ 1700410305;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      this._random = Dice.\u200D⁭‏⁪‭⁯‎⁪‎⁮‎‎‏‭‏‏⁮‏​⁫⁮‭‬‭‌‎⁫⁯‎‮⁪‮⁭‬⁮‍‎‮‪‎‮((int) DateTime.Now.Ticks);
    }

    public bool Roll(float chance)
    {
label_1:
      int num1 = 1283619123;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1276664802)) % 3U)
        {
          case 1:
            flag = Dice.\u200C⁪‮⁫⁫⁮⁮‭‫‏‪⁬‪​‌​⁭‬‭⁪‫⁫‮⁬‫⁫⁮⁭⁬⁭‮⁭‍‌⁭‬‫‏⁪‪‮(this._random) <= (double) chance;
            num1 = (int) num2 * -1569324540 ^ -1090059469;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    static Random \u200D⁭‏⁪‭⁯‎⁪‎⁮‎‎‏‭‏‏⁮‏​⁫⁮‭‬‭‌‎⁫⁯‎‮⁪‮⁭‬⁮‍‎‮‪‎‮([In] int obj0) => new Random(obj0);

    static double \u200C⁪‮⁫⁫⁮⁮‭‫‏‪⁬‪​‌​⁭‬‭⁪‫⁫‮⁬‫⁫⁮⁭⁬⁭‮⁭‍‌⁭‬‫‏⁪‪‮([In] Random obj0) => obj0.NextDouble();
  }
}
