// Decompiled with JetBrains decompiler
// Type: HhOIosV.pJ0Jjqu
// Assembly: aO8BSlP, Version=2.0.0.0, Culture=neutral, PublicKeyToken=0a613f4dd989e8ae
// MVID: 26D80EA7-FF8D-466E-8999-D26AD81041E3
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.DOTHETUK.gen-37c04e3821fcaedfc79bce018910dfdb141a491f2e2e18102353a3e3e74ebde6.exe

using \u0032NspH2k;
using Microsoft.IdentityModel.Clients.ActiveDirectory;
using RVIBaqc;
using System;
using System.Diagnostics;
using System.IO;

namespace HhOIosV
{
  public sealed class pJ0Jjqu : TokenCache
  {
    private static readonly Lazy<TraceSource> J2KuqPj = new Lazy<TraceSource>(new Func<TraceSource>(JKrZ11O.\u0039Uep2LE.OoG9R69));
    private readonly R7EAZSM rFpzEVZ;
    private readonly TraceSource h6JZkcm;
    private kmadEpU aUmqgQP;
    private readonly int gxh1A76;
    private readonly int jG2nIJN;

    public pJ0Jjqu(R7EAZSM storage, TraceSource logger)
      : this(storage, logger, 100, 600)
    {
    }

    public pJ0Jjqu(R7EAZSM storage, TraceSource logger, int lockRetryDelay, int lockRetryCount)
    {
      this.h6JZkcm = logger ?? pJ0Jjqu.J2KuqPj.Value;
      this.rFpzEVZ = storage ?? throw new ArgumentNullException(nameof (storage));
      this.jG2nIJN = lockRetryCount;
      this.gxh1A76 = lockRetryDelay;
      // ISSUE: method pointer
      this.AfterAccess = new TokenCache.TokenCacheNotification((object) this, __methodptr(\u0031ljUUqK));
      // ISSUE: method pointer
      this.BeforeAccess = new TokenCache.TokenCacheNotification((object) this, __methodptr(H41aNFD));
      this.h6JZkcm.TraceEvent(TraceEventType.Information, 0, "Initializing adal cache");
      byte[] numArray = this.rFpzEVZ.yxHZYxl();
      this.h6JZkcm.TraceEvent(TraceEventType.Information, 0, string.Format("Read '{0}' bytes from storage", (object) numArray?.Length));
      if (numArray != null)
      {
        if (numArray.Length != 0)
        {
          try
          {
            this.h6JZkcm.TraceEvent(TraceEventType.Information, 0, "Deserializing data into memory");
            this.DeserializeAdalV3(numArray);
          }
          catch (Exception ex)
          {
            this.h6JZkcm.TraceEvent(TraceEventType.Information, 0, string.Format("An exception was encountered while deserializing the data during initialization of {0} : {1}", (object) nameof (pJ0Jjqu), (object) ex));
            this.DeserializeAdalV3((byte[]) null);
            this.rFpzEVZ.hYuHXZ2();
          }
        }
      }
      this.h6JZkcm.TraceEvent(TraceEventType.Information, 0, "Done initializing");
    }

    internal void H41aNFD(TokenCacheNotificationArgs yAP87Y9)
    {
      this.h6JZkcm.TraceEvent(TraceEventType.Information, 0, "Before access");
      this.h6JZkcm.TraceEvent(TraceEventType.Information, 0, "Acquiring lock for token cache");
      this.aUmqgQP = new kmadEpU(Path.Combine(this.rFpzEVZ.EG0jBBX.DqI3JDM, this.rFpzEVZ.EG0jBBX.lTgQGIs) + ".lockfile", this.gxh1A76, this.jG2nIJN);
      this.h6JZkcm.TraceEvent(TraceEventType.Information, 0, "Before access, the store has changed");
      byte[] numArray = this.rFpzEVZ.yxHZYxl();
      this.h6JZkcm.TraceEvent(TraceEventType.Information, 0, string.Format("Read '{0}' bytes from storage", (object) numArray?.Length));
      if (numArray != null)
      {
        if (numArray.Length != 0)
        {
          try
          {
            this.h6JZkcm.TraceEvent(TraceEventType.Information, 0, "Deserializing the store");
            this.DeserializeAdalV3(numArray);
            return;
          }
          catch (Exception ex)
          {
            this.h6JZkcm.TraceEvent(TraceEventType.Error, 0, string.Format("An exception was encountered while deserializing the {0} : {1}", (object) nameof (pJ0Jjqu), (object) ex));
            this.h6JZkcm.TraceEvent(TraceEventType.Error, 0, "No data found in the store, clearing the cache in memory.");
            this.DeserializeAdalV3((byte[]) null);
            this.rFpzEVZ.hYuHXZ2();
            throw;
          }
        }
      }
      this.h6JZkcm.TraceEvent(TraceEventType.Information, 0, "No data found in the store, clearing the cache in memory.");
      this.DeserializeAdalV3((byte[]) null);
    }

    internal void \u0031ljUUqK(TokenCacheNotificationArgs TeCZawI)
    {
      this.h6JZkcm.TraceEvent(TraceEventType.Information, 0, "After access");
      try
      {
        if (!this.HasStateChanged)
          return;
        this.h6JZkcm.TraceEvent(TraceEventType.Information, 0, "After access, cache in memory HasChanged");
        try
        {
          this.h6JZkcm.TraceEvent(TraceEventType.Information, 0, "Before Write Store");
          byte[] lD0x34U = this.SerializeAdalV3();
          this.h6JZkcm.TraceEvent(TraceEventType.Information, 0, string.Format("Serializing '{0}' bytes", (object) lD0x34U.Length));
          this.rFpzEVZ.xLKmaGd(lD0x34U);
          this.h6JZkcm.TraceEvent(TraceEventType.Information, 0, "After write store");
          this.HasStateChanged = false;
        }
        catch (Exception ex)
        {
          this.h6JZkcm.TraceEvent(TraceEventType.Error, 0, string.Format("An exception was encountered while serializing the {0} : {1}", (object) nameof (pJ0Jjqu), (object) ex));
          this.h6JZkcm.TraceEvent(TraceEventType.Error, 0, "No data found in the store, clearing the cache in memory.");
          this.DeserializeAdalV3((byte[]) null);
          this.rFpzEVZ.hYuHXZ2();
          throw;
        }
      }
      finally
      {
        this.h6JZkcm.TraceEvent(TraceEventType.Information, 0, "Releasing lock");
        kmadEpU aUmqgQp = this.aUmqgQP;
        this.aUmqgQP = (kmadEpU) null;
        aUmqgQp?.cB2rb0F();
      }
    }
  }
}
