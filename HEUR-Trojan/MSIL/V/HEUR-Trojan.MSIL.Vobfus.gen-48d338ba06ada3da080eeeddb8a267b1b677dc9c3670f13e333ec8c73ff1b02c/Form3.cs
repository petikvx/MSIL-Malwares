// Decompiled with JetBrains decompiler
// Type: WindowsFormsApp1.Form3
// Assembly: INormalizeForIsolatedStor, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 95549A8D-1BBA-42BD-89B9-AB899771C6E5
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan.MSIL.Vobfus.gen-48d338ba06ada3da080eeeddb8a267b1b677dc9c3670f13e333ec8c73ff1b02c.exe

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.Windows.Forms;

namespace WindowsFormsApp1
{
  public class Form3 : Form
  {
    private int clicks = 0;
    private Game game;
    private Hex[] hexes;
    private Player[] players;
    private string[] playerColors = new string[6]
    {
      "Yellow",
      "Green",
      "Red",
      "Blue",
      "Purple",
      "Black"
    };
    private List<string> playerQueue = new List<string>();
    private IContainer components = (IContainer) null;
    private PictureBox picBoard;
    private TextBox textBox1;

    public Form3()
    {
      this.InitializeComponent();
      this.InitializeGame();
    }

    private void InitializeGame()
    {
      this.game = new Game();
      this.players = new Player[this.game.playerNumber];
      for (int new_id = 0; new_id < 6; ++new_id)
      {
        this.players[new_id] = new Player(new_id, this.playerColors[new_id]);
        this.playerQueue.Add(this.players[new_id].color);
      }
      this.hexes = new Hex[this.game.hexNumber];
      this.hexes[0] = new Hex(0, 0, 0, this.picBoard.Width, this.picBoard.Height);
      for (int i = 1; i < 7; ++i)
        this.hexes[i] = new Hex(i, 1, i - 1, this.picBoard.Width, this.picBoard.Height);
      for (int i = 7; i < 19; ++i)
        this.hexes[i] = new Hex(i, 2, i - 7, this.picBoard.Width, this.picBoard.Height);
      for (int i = 19; i < 37; ++i)
        this.hexes[i] = new Hex(i, 3, i - 19, this.picBoard.Width, this.picBoard.Height);
      this.hexes[19].color = "Yellow";
      this.hexes[22].color = "Red";
      this.hexes[25].color = "Green";
      this.hexes[28].color = "Blue";
      this.hexes[31].color = "Purple";
      this.hexes[34].color = "Black";
    }

    private void drawBoard()
    {
      Bitmap bitmap = new Bitmap(this.picBoard.Width, this.picBoard.Height);
      Pen pen = new Pen(Color.Black);
    }

    private void picBoard_Paint(object sender, PaintEventArgs e)
    {
      this.DrawBoard(e.Graphics);
      Console.WriteLine(this.hexes[0].color);
    }

    private void picBoard_MouseClick(object sender, MouseEventArgs e)
    {
      int index = 0;
      float num1 = 1000f;
      foreach (Hex hex in this.hexes)
      {
        double num2 = Math.Sqrt(Math.Pow((double) e.X - (double) hex.center.X, 2.0) + Math.Pow((double) e.Y - (double) hex.center.Y, 2.0));
        if ((double) num1 > num2)
        {
          num1 = (float) num2;
          index = hex.id;
        }
      }
      if ((double) num1 < (double) (this.picBoard.Width / 11))
      {
        ++this.clicks;
        this.textBox1.Text = string.Format("Kliknięto {0} razy, ostatnio {1},{2}", (object) this.clicks, (object) this.hexes[index].coords.X, (object) this.hexes[index].coords.Y);
        if (this.hexes[index].color == "White")
        {
          this.hexes[index].color = this.playerQueue[0];
          this.playerQueue.Add(this.playerQueue[0]);
          this.playerQueue.RemoveAt(0);
        }
      }
      this.picBoard.Refresh();
    }

    private void DrawBoard(Graphics g)
    {
      foreach (Hex hex in this.hexes)
      {
        if (hex.color == "White")
          g.FillPolygon(Brushes.White, hex.points);
        else if (hex.color == "Yellow")
          g.FillPolygon(Brushes.Yellow, hex.points);
        else if (hex.color == "Red")
          g.FillPolygon(Brushes.Red, hex.points);
        else if (hex.color == "Green")
          g.FillPolygon(Brushes.Green, hex.points);
        else if (hex.color == "Blue")
          g.FillPolygon(Brushes.Blue, hex.points);
        else if (hex.color == "Purple")
          g.FillPolygon(Brushes.Purple, hex.points);
        else
          g.FillPolygon(Brushes.Black, hex.points);
        g.FillPolygon(Brushes.White, hex.points2);
        g.DrawPolygon(Pens.Black, hex.points);
      }
    }

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(disposing);
    }

    private void InitializeComponent()
    {
      this.picBoard = new PictureBox();
      this.textBox1 = new TextBox();
      ((ISupportInitialize) this.picBoard).BeginInit();
      this.SuspendLayout();
      this.picBoard.BackColor = SystemColors.Control;
      this.picBoard.Location = new Point(67, 51);
      this.picBoard.Margin = new Padding(4, 5, 4, 5);
      this.picBoard.Name = "picBoard";
      this.picBoard.Size = new Size(1089, 1388);
      this.picBoard.TabIndex = 0;
      this.picBoard.TabStop = false;
      this.picBoard.Paint += new PaintEventHandler(this.picBoard_Paint);
      this.picBoard.MouseClick += new MouseEventHandler(this.picBoard_MouseClick);
      this.textBox1.Location = new Point(245, 14);
      this.textBox1.Margin = new Padding(4, 5, 4, 5);
      this.textBox1.Name = "textBox1";
      this.textBox1.ReadOnly = true;
      this.textBox1.Size = new Size(739, 27);
      this.textBox1.TabIndex = 1;
      this.AutoScaleDimensions = new SizeF(8f, 20f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(2539, 1421);
      this.Controls.Add((Control) this.textBox1);
      this.Controls.Add((Control) this.picBoard);
      this.Font = new Font("Impact", 12f, FontStyle.Regular, GraphicsUnit.Point, (byte) 238);
      this.Margin = new Padding(4, 5, 4, 5);
      this.Name = "Form1";
      this.Text = "Form1";
      ((ISupportInitialize) this.picBoard).EndInit();
      this.ResumeLayout(false);
      this.PerformLayout();
    }
  }
}
