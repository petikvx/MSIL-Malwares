// Decompiled with JetBrains decompiler
// Type: .
// Assembly: Stub, Version=2.0.0.2, Culture=neutral, PublicKeyToken=null
// MVID: 18A6455A-DBC9-4D4B-8699-BEBEFCABEF8D
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00000-msil\Trojan.Win32.Llac.aimt-d60eebfa06f055ff7e8bef8d4507b58d2922f6e9f6682bbf0d9c0884bab4acb2.exe

using \u0001;
using \u0004;
using \u0005;
using Microsoft.VisualBasic.ApplicationServices;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.ComponentModel;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace \u0005
{
  [GeneratedCode("MyTemplate", "8.0.0.0")]
  internal sealed class \u0001
  {
    private static readonly \u0005.\u0001.\u0003<\u0004.\u0004> \u0001;
    private static readonly \u0005.\u0001.\u0003<\u0003> \u0001;
    private static readonly \u0005.\u0001.\u0003<User> \u0001;
    private static \u0005.\u0001.\u0003<\u0005.\u0001.\u0001> \u0001;
    private static readonly \u0005.\u0001.\u0003<\u0005.\u0001.\u0002> \u0001;

    static \u0001()
    {
      if (false)
        goto label_5;
label_1:
      if (true)
      {
        do
        {
          \u0005.\u0001.\u0001 = new \u0005.\u0001.\u0003<\u0004.\u0004>();
        }
        while (false);
        \u0005.\u0001.\u0001 = new \u0005.\u0001.\u0003<\u0003>();
      }
      \u0005.\u0001.\u0001 = new \u0005.\u0001.\u0003<User>();
label_5:
      \u0005.\u0001.\u0001 = new \u0005.\u0001.\u0003<\u0005.\u0001.\u0001>();
      if (true)
        \u0005.\u0001.\u0001 = new \u0005.\u0001.\u0003<\u0005.\u0001.\u0002>();
      else
        goto label_1;
    }

    [SpecialName]
    internal static \u0003 \u0002() => \u0005.\u0001.\u0001.\u0002();

    [SpecialName]
    internal static \u0005.\u0001.\u0001 \u0002() => \u0005.\u0001.\u0001.\u0002();

    [EditorBrowsable(EditorBrowsableState.Never)]
    internal sealed class \u0001
    {
      [NonSerialized]
      internal static \u0002 \u0001;
      public \u0002 \u0001;
      [ThreadStatic]
      private static Hashtable \u0001;

      static \u0001() => \u0001.\u0004.\u0002(typeof (\u0005.\u0001.\u0001));

      [SpecialName]
      public \u0002 \u0002()
      {
        this.\u0001 = \u0005.\u0001.\u0001.\u0002<\u0002>(this.\u0001);
        return this.\u0001;
      }

      private static \u0001 \u0002<\u0001>([In] \u0001 obj0) where \u0001 : Form, new()
      {
        if ((object) obj0 == null || obj0.IsDisposed)
        {
          if (\u0005.\u0001.\u0001.\u0001 == null)
          {
            \u0005.\u0001.\u0001.\u0001 = new Hashtable();
            goto label_4;
          }
        }
        else
          goto label_11;
label_2:
        if (\u0005.\u0001.\u0001.\u0001.ContainsKey((object) typeof (\u0001)))
          throw new InvalidOperationException(Utils.GetResourceString(\u0005.\u0001.\u0001.\u0001(240)));
label_4:
        \u0005.\u0001.\u0001.\u0001.Add((object) typeof (\u0001), (object) null);
        try
        {
          return new \u0001();
        }
        catch (TargetInvocationException ex) when (
        {
          // ISSUE: unable to correctly present filter
          ProjectData.SetProjectError((Exception) ex);
          if (\u0014\u0002.\u007E\u009C((object) ex) != null)
          {
            SuccessfulFiltering;
          }
          else
            throw;
        }
        )
        {
          throw new InvalidOperationException(\u0086\u0003.\u0017\u0004(\u0005.\u0001.\u0001.\u0001(281), new string[1]
          {
            \u009A.\u007E\u009B((object) \u0014\u0002.\u007E\u009C((object) ex))
          }), \u0014\u0002.\u007E\u009C((object) ex));
        }
        finally
        {
          if (true)
          {
            // ISSUE: type reference
            \u008C\u0002.\u007E\u0093\u0002((object) \u0005.\u0001.\u0001.\u0001, (object) \u0081\u0002.\u001F\u0002(__typeref (\u0001)));
          }
        }
label_11:
        if (true)
          return obj0;
        goto label_2;
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      public \u0001()
      {
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override bool Equals([In] object obj0) => base.Equals(RuntimeHelpers.GetObjectValue(obj0));

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override int GetHashCode() => base.GetHashCode();

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override string ToString() => base.ToString();
    }

    [EditorBrowsable(EditorBrowsableState.Never)]
    internal sealed class \u0002
    {
      [EditorBrowsable(EditorBrowsableState.Never)]
      public override bool Equals([In] object obj0) => base.Equals(RuntimeHelpers.GetObjectValue(obj0));

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override int GetHashCode() => base.GetHashCode();

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override string ToString() => base.ToString();

      [EditorBrowsable(EditorBrowsableState.Never)]
      public \u0002()
      {
      }
    }

    [ComVisible(false)]
    [EditorBrowsable(EditorBrowsableState.Never)]
    internal sealed class \u0003<\u0001> where \u0001 : new()
    {
      [SpecialName]
      internal \u0001 \u0002()
      {
        // ISSUE: reference to a compiler-generated field
        if ((object) \u0005.\u0001.\u0003<\u0001>.\u0001 == null)
          goto label_2;
label_1:
        // ISSUE: reference to a compiler-generated field
        return \u0005.\u0001.\u0003<\u0001>.\u0001;
label_2:
        // ISSUE: reference to a compiler-generated field
        \u0005.\u0001.\u0003<\u0001>.\u0001 = new \u0001();
        goto label_1;
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      public \u0003()
      {
      }
    }
  }
}
