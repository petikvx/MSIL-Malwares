// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONData
// Assembly: IOExcepti, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 72674A88-3F84-4927-9D84-82118D6CBF01
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-49811dca565bead069108819f9ad132a2214364381f97dcf7f0f439614cc8ff4.exe

using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONData : JSONNode
  {
    private string m_Data;

    public override string Value
    {
      get
      {
label_1:
        int num1 = -406448635;
        string data;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -30300255)) % 3U)
          {
            case 1:
              data = this.m_Data;
              num1 = (int) num2 * 1502910749 ^ 102914211;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return data;
      }
      set => this.m_Data = value;
    }

    public JSONData(string aData)
    {
label_1:
      int num1 = -2120767192;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2112806164)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            this.m_Data = aData;
            num1 = (int) num2 * -894864227 ^ -95113890;
            continue;
          case 2:
            goto label_3;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public JSONData(float aData)
    {
label_1:
      int num1 = 1357809609;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1521861266)) % 5U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * -2136800618 ^ 1349056178;
            continue;
          case 2:
            goto label_1;
          case 3:
            this.AsFloat = aData;
            num1 = (int) num2 * 1620089417 ^ 597750448;
            continue;
          case 4:
            num1 = (int) num2 * 1044611394 ^ -146635124;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public JSONData(double aData)
    {
label_1:
      int num1 = 1083833628;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1467784777)) % 5U)
        {
          case 0:
            num1 = (int) num2 * -210896960 ^ -1218663049;
            continue;
          case 1:
            num1 = (int) num2 * -58064755 ^ 1827269139;
            continue;
          case 2:
            goto label_3;
          case 3:
            this.AsDouble = aData;
            num1 = (int) num2 * 1315067585 ^ -1886281476;
            continue;
          case 4:
            goto label_1;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public JSONData(bool aData)
    {
label_1:
      int num1 = -104957679;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1961422673)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            this.AsBool = aData;
            num1 = (int) num2 * 1104855164 ^ 1121609229;
            continue;
          case 2:
            goto label_3;
          case 3:
            num1 = (int) num2 * 459976001 ^ -1310771720;
            continue;
          case 4:
            num1 = (int) num2 * -1016568335 ^ -1985226119;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public JSONData(int aData)
    {
label_1:
      int num1 = -544578482;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1078329503)) % 6U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * -58579938 ^ 1402654725;
            continue;
          case 2:
            num1 = (int) num2 * 1708864320 ^ 338205758;
            continue;
          case 3:
            this.AsInt = aData;
            num1 = (int) num2 * -866869299 ^ -2010234302;
            continue;
          case 4:
            num1 = (int) num2 * 1043078964 ^ -1947449749;
            continue;
          case 5:
            goto label_1;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    public override string ToString()
    {
label_1:
      int num1 = 660731149;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1261314117)) % 3U)
        {
          case 1:
            str = JSONData.\u202D​⁪‏‬‏‏⁬⁯⁫‮⁯‌⁭⁮⁭⁭‍⁫‪⁯⁯‍⁮⁮‭‍⁫‪‫‮‭‬‍‬‪⁮‍‮‫‮("\"", JSONNode.Escape(this.m_Data), "\"");
            num1 = (int) num2 * 374579490 ^ -1610144334;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override string ToString(string aPrefix)
    {
      string str = JSONData.\u202D​⁪‏‬‏‏⁬⁯⁫‮⁯‌⁭⁮⁭⁭‍⁫‪⁯⁯‍⁮⁮‭‍⁫‪‫‮‭‬‍‬‪⁮‍‮‫‮("\"", JSONNode.Escape(this.m_Data), "\"");
label_1:
      int num1 = -2143266822;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -310409191)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -39322139 ^ -632032522;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
      JSONData jsonData = new JSONData("");
label_1:
      int num1 = 1475450362;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1397573064)) % 38U)
        {
          case 0:
            num1 = (int) num2 * 1137330268 ^ 2065026893;
            continue;
          case 1:
            num1 = (int) num2 * -359141853 ^ 1032659418;
            continue;
          case 2:
            jsonData.AsInt = this.AsInt;
            num1 = (int) num2 * -652637202 ^ -286781543;
            continue;
          case 3:
            flag2 = JSONData.\u200B⁪‍⁯‎​‪⁫‎‏⁬‌‫⁪⁮‍⁯‎‫⁬⁫⁭‍‎⁯‎⁫⁮‭‮‏⁮‎‏⁮⁯​⁫‪‎‮(jsonData.m_Data, this.m_Data);
            num1 = (int) num2 * -2004384839 ^ -302034185;
            continue;
          case 4:
            num1 = (int) num2 * -1410011205 ^ -908748887;
            continue;
          case 5:
            num1 = (int) num2 * -1212266455 ^ 564974460;
            continue;
          case 6:
            JSONData.\u206D⁫⁪⁮‫⁭‍‍⁭‪⁬‎⁪​‬⁭‍‫‪‪⁬‭⁪⁯⁭‮⁮‭⁬​‮‬‪‭‫​‬‬​⁪‮(aWriter, (byte) 3);
            num1 = 655841133;
            continue;
          case 7:
            JSONData.\u206D⁫⁪⁮‫⁭‍‍⁭‪⁬‎⁪​‬⁭‍‫‪‪⁬‭⁪⁯⁭‮⁮‭⁬​‮‬‪‭‫​‬‬​⁪‮(aWriter, (byte) 5);
            num1 = (int) num2 * 1368117075 ^ -975514706;
            continue;
          case 8:
            JSONData.\u206D⁬‌‎⁯‪‭‫‪⁯⁯​​‍⁮⁫‎⁭‏⁬‪⁫‎‫‪​‌‏‌‍⁭‮‏⁪⁬‬‪⁭‎‪‮(aWriter, this.AsFloat);
            num1 = (int) num2 * 2105571041 ^ 1492814734;
            continue;
          case 9:
            JSONData.\u202E⁭‮⁮⁪⁭⁪‍‫‮‪‭‮​‫‍‍‌‭⁭‫⁪​‏⁯‍‏⁮‎⁮​⁫⁮⁪⁫⁮‎‏‪‫‮(aWriter, this.AsBool);
            num1 = (int) num2 * 1372641104 ^ 928197481;
            continue;
          case 10:
            jsonData.AsFloat = this.AsFloat;
            num1 = 785782184;
            continue;
          case 11:
            num1 = (int) num2 * 791330124 ^ -1641006841;
            continue;
          case 12:
            num1 = (int) num2 * -1833020571 ^ 1869327789;
            continue;
          case 13:
            num1 = (int) num2 * 1988089022 ^ 2114779690;
            continue;
          case 14:
            flag1 = JSONData.\u200B⁪‍⁯‎​‪⁫‎‏⁬‌‫⁪⁮‍⁯‎‫⁬⁫⁭‍‎⁯‎⁫⁮‭‮‏⁮‎‏⁮⁯​⁫‪‎‮(jsonData.m_Data, this.m_Data);
            num1 = (int) num2 * 1727414809 ^ 991056374;
            continue;
          case 15:
            goto label_3;
          case 16:
            num1 = (int) num2 * 1544359587 ^ -693471215;
            continue;
          case 17:
            num1 = (int) num2 * -1037965522 ^ 1794492120;
            continue;
          case 18:
            num1 = (int) num2 * -1234221624 ^ -619417587;
            continue;
          case 19:
            int num3 = !JSONData.\u200B⁪‍⁯‎​‪⁫‎‏⁬‌‫⁪⁮‍⁯‎‫⁬⁫⁭‍‎⁯‎⁫⁮‭‮‏⁮‎‏⁮⁯​⁫‪‎‮(jsonData.m_Data, this.m_Data) ? -2126007976 : (num3 = -884717255);
            num1 = num3 ^ (int) num2 * -1867860958;
            continue;
          case 20:
            int num4 = flag1 ? 1713699396 : (num4 = 1113854204);
            num1 = num4 ^ (int) num2 * 338005901;
            continue;
          case 21:
            JSONData.\u202B‮‌‍⁪‭‬‫​‌⁮‫⁯‬⁪‏⁬‫⁭‍⁬‌‎⁬‍⁯⁪‬⁬​‬⁮‬⁮‭⁬⁮‎⁮⁭‮(aWriter, this.AsDouble);
            num1 = (int) num2 * 1734459644 ^ -1987060978;
            continue;
          case 22:
            jsonData.AsBool = this.AsBool;
            num1 = 1438991172;
            continue;
          case 23:
            JSONData.\u206D⁫⁪⁮‫⁭‍‍⁭‪⁬‎⁪​‬⁭‍‫‪‪⁬‭⁪⁯⁭‮⁮‭⁬​‮‬‪‭‫​‬‬​⁪‮(aWriter, (byte) 4);
            num1 = (int) num2 * -1614350680 ^ 848989103;
            continue;
          case 24:
            num1 = (int) num2 * 756075544 ^ -1147462275;
            continue;
          case 25:
            jsonData.AsDouble = this.AsDouble;
            num1 = 1578127540;
            continue;
          case 26:
            int num5 = flag2 ? 1669953278 : (num5 = 205887516);
            num1 = num5 ^ (int) num2 * 111524502;
            continue;
          case 27:
            JSONData.\u206D⁫⁪⁮‫⁭‍‍⁭‪⁬‎⁪​‬⁭‍‫‪‪⁬‭⁪⁯⁭‮⁮‭⁬​‮‬‪‭‫​‬‬​⁪‮(aWriter, (byte) 6);
            num1 = (int) num2 * 1978755517 ^ 2059246674;
            continue;
          case 28:
            num1 = (int) num2 * -545546249 ^ -1645847276;
            continue;
          case 29:
            num1 = (int) num2 * 445947955 ^ -289544150;
            continue;
          case 30:
            num1 = (int) num2 * 94923425 ^ 829934903;
            continue;
          case 31:
            num1 = (int) num2 * -884997877 ^ -871481422;
            continue;
          case 32:
            num1 = (int) num2 * 842137140 ^ 1496622077;
            continue;
          case 33:
            JSONData.\u206A⁯⁭‎⁫⁬​⁬⁫‏‏‫‭⁪‭‮‮⁯‮‪‮⁮‮‬‮⁪‮⁮‫⁮‭​‭⁬‍‪‭‬⁯‎‮(aWriter, this.AsInt);
            num1 = (int) num2 * 1577129091 ^ 1398080920;
            continue;
          case 34:
            int num6 = JSONData.\u200B⁪‍⁯‎​‪⁫‎‏⁬‌‫⁪⁮‍⁯‎‫⁬⁫⁭‍‎⁯‎⁫⁮‭‮‏⁮‎‏⁮⁯​⁫‪‎‮(jsonData.m_Data, this.m_Data) ? 927064356 : (num6 = 1227563163);
            num1 = num6 ^ (int) num2 * -259466189;
            continue;
          case 35:
            JSONData.\u206D⁫⁪⁮‫⁭‍‍⁭‪⁬‎⁪​‬⁭‍‫‪‪⁬‭⁪⁯⁭‮⁮‭⁬​‮‬‪‭‫​‬‬​⁪‮(aWriter, (byte) 7);
            num1 = (int) num2 * -710809794 ^ 748000549;
            continue;
          case 36:
            goto label_1;
          case 37:
            JSONData.\u202E‍‌⁭⁪⁭‎⁯‎⁫⁬⁯‎⁭‪‭​‬‫‬⁮⁭‫‮‎‍⁬‮‫‮​‭‍‭⁯⁫⁯⁬‏‬‮(aWriter, this.m_Data);
            num1 = (int) num2 * -1126876522 ^ -1224373558;
            continue;
          default:
            goto label_40;
        }
      }
label_3:
      return;
label_40:;
    }

    static string \u202D​⁪‏‬‏‏⁬⁯⁫‮⁯‌⁭⁮⁭⁭‍⁫‪⁯⁯‍⁮⁮‭‍⁫‪‫‮‭‬‍‬‪⁮‍‮‫‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2)
    {
      return obj0 + obj1 + obj2;
    }

    static bool \u200B⁪‍⁯‎​‪⁫‎‏⁬‌‫⁪⁮‍⁯‎‫⁬⁫⁭‍‎⁯‎⁫⁮‭‮‏⁮‎‏⁮⁯​⁫‪‎‮([In] string obj0, [In] string obj1) => obj0 == obj1;

    static void \u206D⁫⁪⁮‫⁭‍‍⁭‪⁬‎⁪​‬⁭‍‫‪‪⁬‭⁪⁯⁭‮⁮‭⁬​‮‬‪‭‫​‬‬​⁪‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u206A⁯⁭‎⁫⁬​⁬⁫‏‏‫‭⁪‭‮‮⁯‮‪‮⁮‮‬‮⁪‮⁮‫⁮‭​‭⁬‍‪‭‬⁯‎‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u206D⁬‌‎⁯‪‭‫‪⁯⁯​​‍⁮⁫‎⁭‏⁬‪⁫‎‫‪​‌‏‌‍⁭‮‏⁪⁬‬‪⁭‎‪‮([In] BinaryWriter obj0, [In] float obj1) => obj0.Write(obj1);

    static void \u202B‮‌‍⁪‭‬‫​‌⁮‫⁯‬⁪‏⁬‫⁭‍⁬‌‎⁬‍⁯⁪‬⁬​‬⁮‬⁮‭⁬⁮‎⁮⁭‮([In] BinaryWriter obj0, [In] double obj1) => obj0.Write(obj1);

    static void \u202E⁭‮⁮⁪⁭⁪‍‫‮‪‭‮​‫‍‍‌‭⁭‫⁪​‏⁯‍‏⁮‎⁮​⁫⁮⁪⁫⁮‎‏‪‫‮([In] BinaryWriter obj0, [In] bool obj1) => obj0.Write(obj1);

    static void \u202E‍‌⁭⁪⁭‎⁯‎⁫⁬⁯‎⁭‪‭​‬‫‬⁮⁭‫‮‎‍⁬‮‫‮​‭‍‭⁯⁫⁯⁬‏‬‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
