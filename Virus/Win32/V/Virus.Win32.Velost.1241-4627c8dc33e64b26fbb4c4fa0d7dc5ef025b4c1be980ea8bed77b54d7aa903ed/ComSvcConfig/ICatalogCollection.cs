// Decompiled with JetBrains decompiler
// Type: Microsoft.Tools.ServiceModel.ComSvcConfig.ICatalogCollection
// Assembly: ComSvcConfig, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: 502D58B8-8905-498F-84D2-67D5F99987D4
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00009-msil\Virus.Win32.Velost.1241-4627c8dc33e64b26fbb4c4fa0d7dc5ef025b4c1be980ea8bed77b54d7aa903ed.exe

using System.Collections;
using System.Runtime.InteropServices;
using System.Security;

namespace Microsoft.Tools.ServiceModel.ComSvcConfig
{
  [SuppressUnmanagedCodeSecurity]
  [InterfaceType(ComInterfaceType.InterfaceIsDual)]
  [Guid("6EB22872-8A19-11D0-81B6-00A0C9231C29")]
  [ComImport]
  internal interface ICatalogCollection
  {
    [DispId(-4)]
    void GetEnumerator(out IEnumerator pEnum);

    [DispId(1)]
    [return: MarshalAs(UnmanagedType.Interface)]
    object Item([In] int lIndex);

    [DispId(1610743810)]
    int Count();

    [DispId(1610743811)]
    void Remove([In] int lIndex);

    [DispId(1610743812)]
    [return: MarshalAs(UnmanagedType.Interface)]
    object Add();

    [DispId(2)]
    void Populate();

    [DispId(3)]
    int SaveChanges();

    [DispId(4)]
    [return: MarshalAs(UnmanagedType.Interface)]
    object GetCollection([MarshalAs(UnmanagedType.BStr), In] string bstrCollName, [In] object varObjectKey);

    [DispId(6)]
    object Name();

    bool IsAddEnabled { [DispId(7)] [return: MarshalAs(UnmanagedType.VariantBool)] get; }

    bool IsRemoveEnabled { [DispId(8)] [return: MarshalAs(UnmanagedType.VariantBool)] get; }

    [DispId(9)]
    [return: MarshalAs(UnmanagedType.Interface)]
    object GetUtilInterface();

    int DataStoreMajorVersion { [DispId(10)] get; }

    int DataStoreMinorVersion { [DispId(11)] get; }

    void PopulateByKey([MarshalAs(UnmanagedType.SafeArray, SafeArraySubType = VarEnum.VT_VARIANT), In] object[] aKeys);

    [DispId(13)]
    void PopulateByQuery([MarshalAs(UnmanagedType.BStr), In] string bstrQueryString, [In] int lQueryType);
  }
}
