// Decompiled with JetBrains decompiler
// Type: Cytotechnologist.ScrambleExtention
// Assembly: EncoderExceptionFallbackBuff, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 1A176EC6-F8F7-4000-B7C0-CE79157CC27B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-64a92f765017361d260169feccd6dd444e4a20dfceb3dcad952d976477406e1c.exe

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Cytotechnologist
{
  public static class ScrambleExtention
  {
    private static readonly Random Random = ScrambleExtention.\u202D‮⁯⁯‍‏‍‪‬‫‫⁪‬⁭‏⁪‎⁫⁫⁪‪‪⁭⁮‪‪‭‫​⁫‭‌‪⁭​‮‏‮‫⁭‮();

    public static void Shuffle<T>(IList<T> list)
    {
      int count = list.Count;
label_8:
      int num1 = count > 1 ? -1700198464 : (num1 = -23441456);
      int index;
      T obj;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -333102591)) % 9U)
        {
          case 0:
            num1 = (int) num2 * -957982472 ^ -1090089322;
            continue;
          case 1:
            --count;
            num1 = -940710338;
            continue;
          case 2:
            index = ScrambleExtention.\u202D‮‪‫‍‎‎⁯⁬‪‌⁭‮⁬‎‏⁬‫‏​‎⁭​‌‌⁮‮‍‏‬⁮‬⁬‪⁯​‭⁬‏‫‮(ScrambleExtention.Random, count + 1);
            num1 = (int) num2 * -1361384488 ^ 167536160;
            continue;
          case 3:
            goto label_8;
          case 4:
            num1 = -1700198464;
            continue;
          case 5:
            goto label_3;
          case 6:
            obj = list[index];
            num1 = (int) num2 * 1303977856 ^ 817915620;
            continue;
          case 7:
            list[index] = list[count];
            num1 = (int) num2 * 780185207 ^ 806931388;
            continue;
          case 8:
            list[count] = obj;
            num1 = (int) num2 * 535854636 ^ 1205726605;
            continue;
          default:
            goto label_11;
        }
      }
label_3:
      return;
label_11:;
    }

    static int \u202D‮‪‫‍‎‎⁯⁬‪‌⁭‮⁬‎‏⁬‫‏​‎⁭​‌‌⁮‮‍‏‬⁮‬⁬‪⁯​‭⁬‏‫‮([In] Random obj0, [In] int obj1) => obj0.Next(obj1);

    static Random \u202D‮⁯⁯‍‏‍‪‬‫‫⁪‬⁭‏⁪‎⁫⁫⁪‪‪⁭⁮‪‪‭‫​⁫‭‌‪⁭​‮‏‮‫⁭‮() => new Random();
  }
}
