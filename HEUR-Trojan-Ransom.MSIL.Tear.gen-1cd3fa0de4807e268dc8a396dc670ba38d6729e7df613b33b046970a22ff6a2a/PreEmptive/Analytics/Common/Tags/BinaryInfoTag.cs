// Decompiled with JetBrains decompiler
// Type: PreEmptive.Analytics.Common.Tags.BinaryInfoTag
// Assembly: EncoderCSL, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8BC70EB6-E222-4E38-9ED5-32744A85C676
// Assembly location: C:\Users\Administrateur\Downloads\toto\HEUR-Trojan-Ransom.MSIL.Tear.gen-1cd3fa0de4807e268dc8a396dc670ba38d6729e7df613b33b046970a22ff6a2a.exe

using PreEmptive.Analytics.Common.Utilities;
using System;

namespace PreEmptive.Analytics.Common.Tags
{
  public class BinaryInfoTag : Tag
  {
    public BinaryInfoTag(
      Guid? id,
      DateTime? modified,
      string name,
      string version,
      string classname,
      string methodname)
    {
      int A_1 = 6;
      // ISSUE: explicit constructor call
      base.\u002Ector();
      this.ID = id;
      this.LastModified = modified;
      this.Name = name;
      this.Version = version;
      this.ClassName = classname;
      this.MethodName = methodname;
      this.AddOptionalAttribute(Utils.a("펹\uD8BB", A_1), this.ID.a<Guid>());
      string str = (string) null;
      if (this.LastModified.HasValue)
        str = this.LastModified.Value.ToISOFormat();
      this.AddOptionalAttribute(Utils.a("ힹ펻\uDABDꦿ꓁귃ꏅ곇", A_1), str);
      this.AddOptionalAttribute(Utils.a("풹\uDDBB펽ꖿ", A_1), this.Name);
      this.AddOptionalAttribute(Utils.a("첹\uD9BB첽뎿ꯁꯃ\uA8C5", A_1), this.Version);
      this.AddOptionalAttribute(Utils.a("캹얻캽ꖿ", A_1), this.ClassName);
      this.AddOptionalAttribute(Utils.a("ힹ\uD9BB쪽ꢿ귁ꃃ", A_1), this.MethodName);
    }

    public BinaryInfoTag(BinaryInfo info)
      : this(info.ID, info.LastModified, info.Name, info.Version, info.ClassName, info.MethodName)
    {
    }

    public override string TagName
    {
      get
      {
        int A_1 = 16;
        int num1 = -7599;
        int num2 = num1;
        num1 = -7599;
        int num3 = num1;
        switch (num2 == num3)
        {
          case true:
            if (false)
              ;
            if (true)
              ;
            return Utils.a("ꛃ꿅ꛇꯉ뻋럍", A_1);
          default:
            goto case 1;
        }
      }
    }

    public Guid? ID
    {
      get
      {
        int num1 = -15567;
        int num2 = num1;
        num1 = -15567;
        int num3 = num1;
        switch (num2 == num3)
        {
          case true:
            int num4 = 1;
            if (num4 == 0)
              ;
            num4 = 0;
            if (num4 == 0)
              ;
            return this.a;
          default:
            goto case 1;
        }
      }
      set
      {
        int num1 = -20081;
        int num2 = num1;
        num1 = -20081;
        int num3 = num1;
        switch (num2 == num3)
        {
          case true:
            int num4 = 1;
            if (num4 == 0)
              ;
            num4 = 0;
            if (num4 == 0)
              ;
            this.a = value;
            break;
          default:
            goto case 1;
        }
      }
    }

    public DateTime? LastModified
    {
      get
      {
        int num1 = -7386;
        int num2 = num1;
        num1 = -7386;
        int num3 = num1;
        switch (num2 == num3)
        {
          case true:
            int num4 = 0;
            if (num4 == 0)
              ;
            num4 = 1;
            if (num4 == 0)
              ;
            return this.b;
          default:
            goto case 1;
        }
      }
      set
      {
        int num1 = 1;
        if (num1 == 0)
          ;
        num1 = 1821;
        int num2 = num1;
        num1 = 1821;
        int num3 = num1;
        switch (num2 == num3)
        {
          case true:
            num1 = 0;
            if (num1 == 0)
              ;
            this.b = value;
            break;
          default:
            goto case 1;
        }
      }
    }

    public string Name
    {
      get
      {
        int num1 = 476;
        int num2 = num1;
        num1 = 476;
        int num3 = num1;
        switch (num2 == num3)
        {
          case true:
            int num4 = 1;
            if (num4 == 0)
              ;
            num4 = 0;
            if (num4 == 0)
              ;
            return this.c;
          default:
            goto case 1;
        }
      }
      set
      {
        int num1 = 1;
        if (num1 == 0)
          ;
        num1 = 17016;
        int num2 = num1;
        num1 = 17016;
        int num3 = num1;
        switch (num2 == num3)
        {
          case true:
            num1 = 0;
            if (num1 == 0)
              ;
            this.c = value;
            break;
          default:
            goto case 1;
        }
      }
    }

    public string Version
    {
      get
      {
        int num1 = -25439;
        int num2 = num1;
        num1 = -25439;
        int num3 = num1;
        switch (num2 == num3)
        {
          case true:
            int num4 = 1;
            if (num4 == 0)
              ;
            num4 = 0;
            if (num4 == 0)
              ;
            return this.d;
          default:
            goto case 1;
        }
      }
      set
      {
        int num1 = 6863;
        int num2 = num1;
        num1 = 6863;
        int num3 = num1;
        switch (num2 == num3)
        {
          case true:
            int num4 = 1;
            if (num4 == 0)
              ;
            num4 = 0;
            if (num4 == 0)
              ;
            this.d = value;
            break;
          default:
            goto case 1;
        }
      }
    }

    public string ClassName
    {
      get
      {
        int num1 = -7641;
        int num2 = num1;
        num1 = -7641;
        int num3 = num1;
        switch (num2 == num3)
        {
          case true:
            int num4 = 1;
            if (num4 == 0)
              ;
            num4 = 0;
            if (num4 == 0)
              ;
            return this.e;
          default:
            goto case 1;
        }
      }
      set
      {
        int num1 = -11947;
        int num2 = num1;
        num1 = -11947;
        int num3 = num1;
        switch (num2 == num3)
        {
          case true:
            int num4 = 0;
            if (num4 == 0)
              ;
            num4 = 1;
            if (num4 == 0)
              ;
            this.e = value;
            break;
          default:
            goto case 1;
        }
      }
    }

    public string MethodName
    {
      get
      {
        int num1 = -27239;
        int num2 = num1;
        num1 = -27239;
        int num3 = num1;
        switch (num2 == num3)
        {
          case true:
            int num4 = 1;
            if (num4 == 0)
              ;
            num4 = 0;
            if (num4 == 0)
              ;
            return this.f;
          default:
            goto case 1;
        }
      }
      set
      {
        int num1 = 2549;
        int num2 = num1;
        num1 = 2549;
        int num3 = num1;
        switch (num2 == num3)
        {
          case true:
            int num4 = 1;
            if (num4 == 0)
              ;
            num4 = 0;
            if (num4 == 0)
              ;
            this.f = value;
            break;
          default:
            goto case 1;
        }
      }
    }
  }
}
