// Decompiled with JetBrains decompiler
// Type: #c.#b
// Assembly: qouzb, Version=0.0.0.0, Culture=neutral, PublicKeyToken=34256fcd934ca661
// MVID: 528C9DDA-94F5-4688-B6FB-056FFA07C362
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-Spy.Win32.Generic-6c64cd522d7e6f3c0b6f0116271cde81e35213ad4a360fe569f48f99fd473e62.exe

using \u0023c;
using Microsoft.VisualBasic.ApplicationServices;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Security;

namespace \u0023c
{
  [EditorBrowsable(EditorBrowsableState.Never)]
  [GeneratedCode("MyTemplate", "8.0.0.0")]
  internal class \u0023b : ApplicationBase
  {
    [MethodImpl(MethodImplOptions.NoInlining)]
    public \u0023b()
    {
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    static \u0023b()
    {
      int num1 = 2;
      while (true)
      {
        bool flag;
        int num2;
        Assembly executingAssembly;
        switch (num1)
        {
          case 0:
          case 2:
            flag = false;
            num2 = 5;
            break;
          case 1:
          case 5:
            executingAssembly = Assembly.GetExecutingAssembly();
            if (\u0023\u0023.\u0023Si(executingAssembly.Location, true, out flag))
            {
              num2 = 3;
              break;
            }
            goto label_11;
          case 3:
            if (!flag)
              goto label_11;
            else
              goto case 4;
          case 4:
            if (executingAssembly.FullName.EndsWith("34256fcd934ca661"))
            {
              num2 = 6;
              break;
            }
            goto label_11;
          case 6:
            goto label_10;
          default:
            if (!\u0023b.KLTsJdZ57Cuwg8L7en())
            {
              num1 = 4;
              continue;
            }
            goto case 1;
        }
        num1 = num2;
      }
label_10:
      return;
label_11:
      throw new SecurityException("Assembly has been tampered");
    }

    internal static bool v2N6Lgaiu4DxBZS5Nt() => true;

    internal static bool KLTsJdZ57Cuwg8L7en() => false;
  }
}
