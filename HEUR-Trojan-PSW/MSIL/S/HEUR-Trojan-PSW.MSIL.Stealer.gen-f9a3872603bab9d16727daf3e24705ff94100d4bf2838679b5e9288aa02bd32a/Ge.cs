// Decompiled with JetBrains decompiler
// Type: ib.Ge
// Assembly: ContingentPropert, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 10450B75-DDB2-42D8-896D-5D92C0FA5DAE
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-f9a3872603bab9d16727daf3e24705ff94100d4bf2838679b5e9288aa02bd32a.exe

using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;
using System.Text;

namespace ib
{
  public class Ge : Np
  {
    protected byte[] UGo;
    private VG WGl;
    private static Ge yc4;

    public Ge()
    {
      Jnb.vbPcO4();
      // ISSUE: explicit constructor call
      this.\u002Ector((byte[]) null);
    }

    public Ge(byte[] _param1)
    {
      Jnb.vbPcO4();
      // ISSUE: explicit constructor call
      base.\u002Ector((TextWriter) null);
      this.iRz(_param1);
    }

    public Ge(byte[] _param1, TextWriter _param2)
    {
      Jnb.vbPcO4();
      // ISSUE: explicit constructor call
      base.\u002Ector(_param2);
      this.iRz(_param1);
    }

    public void hR3(byte[] _param1, TextWriter _param2)
    {
      this.hRD(_param2);
      this.iRz(_param1);
    }

    public void iRz(byte[] _param1)
    {
      int num = 1;
      bool flag;
      while (true)
      {
        switch (num)
        {
          case 1:
            flag = _param1 == null;
            num = Ge.DcP() ? 0 : 0;
            continue;
          default:
            goto label_3;
        }
      }
label_3:
      if (flag)
        goto label_5;
label_4:
      this.UGo = _param1;
      this.kRb = _param1.Length;
      this.WGl.WRT = new SortedList<int, int>();
      this.WGl.WRT[0] = 1;
      return;
label_5:
      _param1 = new byte[0];
      goto label_4;
    }

    public byte[] CGT() => this.UGo;

    public bool RGR(Np.lbY _param1, out byte[] _param2)
    {
      int krc = this.KRC;
      if (!_param1())
        goto label_8;
      else
        goto label_6;
label_1:
      int num1;
      int num2 = num1;
label_2:
      int length;
      bool flag;
      int index;
      switch (num2)
      {
        case 1:
          return flag;
        case 2:
          for (; index < length; ++index)
            _param2[index] = this.UGo[index + krc];
          flag = true;
          goto case 1;
        default:
          flag = false;
          goto case 1;
      }
label_6:
      length = this.KRC - krc;
      _param2 = new byte[length];
      index = 0;
      if (Ge.DcP())
      {
        num2 = 2;
        goto label_2;
      }
      else
        goto label_1;
label_8:
      _param2 = (byte[]) null;
      num2 = 0;
      if (Ge.DcP())
        goto label_2;
      else
        goto label_1;
    }

    public bool FGG(Np.lbY _param1, out aA _param2)
    {
      int num1 = 1;
label_1:
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 1:
            _param2.hR4 = this.KRC;
            if (Ge.vcq() == null)
            {
              num2 = 0;
              continue;
            }
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      bool flag = _param1();
      _param2.oRx = this.KRC;
      return flag;
    }

    public bool AGa(Np.lbY _param1, out int _param2)
    {
      int num1 = 3;
label_1:
      int num2 = num1;
      bool flag;
      while (true)
      {
        byte[] numArray;
        int index;
        switch (num2)
        {
          case 1:
            ++index;
            break;
          case 2:
            if (this.RGR(_param1, out numArray))
            {
              _param2 = 0;
              index = 0;
              break;
            }
            flag = false;
            if (Ge.DcP())
            {
              num2 = 0;
              continue;
            }
            goto label_1;
          case 3:
            _param2 = 0;
            num2 = Ge.DcP() ? 2 : 0;
            continue;
          default:
            goto label_11;
        }
        if (index < numArray.Length)
        {
          _param2 <<= 8;
          _param2 |= (int) numArray[index];
          if (Ge.DcP())
            num2 = 1;
          else
            goto label_1;
        }
        else
          break;
      }
      flag = true;
label_11:
      return flag;
    }

    public bool CG4(Np.lbY _param1, out double _param2)
    {
      _param2 = 0.0;
      byte[] bytes;
      if (this.RGR(_param1, out bytes))
        goto label_4;
      else
        goto label_8;
label_1:
      int num1;
      int num2 = num1;
label_2:
      bool flag;
      switch (num2)
      {
        case 1:
          flag = false;
          goto label_6;
        default:
          goto label_6;
      }
label_4:
      if (!double.TryParse(Encoding.UTF8.GetString(bytes), out _param2))
      {
        num2 = 1;
        if (Ge.vcq() == null)
          goto label_2;
        else
          goto label_1;
      }
      else
        flag = true;
label_6:
      return flag;
label_8:
      flag = false;
      if (Ge.DcP())
      {
        num2 = 0;
        goto label_2;
      }
      else
        goto label_1;
    }

    public bool hGx(int _param1, int _param2, out int _param3)
    {
      if (this.KRC < this.kRb)
      {
        int num1 = 1;
        if (Ge.vcq() != null)
          goto label_3;
label_1:
        switch (num1)
        {
          case 1:
            _param3 = (int) this.UGo[this.KRC] >> _param1 - 1 & (1 << _param2) - 1;
            ++this.KRC;
            return true;
          default:
            goto label_4;
        }
label_3:
        int num2;
        num1 = num2;
        goto label_1;
      }
label_4:
      _param3 = 0;
      return false;
    }

    public bool sGv(int _param1, int _param2, Ge.Ebq _param3, out int _param4)
    {
      if (this.KRC >= this.kRb)
      {
        int num = 0;
        if (Ge.vcq() == null)
          goto label_3;
label_1:
        switch (num)
        {
          default:
            _param4 = 0;
            return false;
        }
label_3:
        num = 0;
        goto label_1;
      }
      else
      {
        byte num = (byte) ((int) this.UGo[this.KRC] >> _param1 - 1 & (1 << _param2) - 1);
        ++this.KRC;
        _param4 = (int) num;
        return _param3.EM3(num);
      }
    }

    private void iGU(string _param1, string _param2)
    {
      this.bRO.WriteLine("<{0}>{1}:{2}", (object) this.KRC, (object) _param1, (object) _param2);
      this.bRO.Flush();
    }

    public virtual bool gSq(string _param1)
    {
      this.iGU("FATAL", _param1);
      throw new D8();
    }

    public bool vGf(string _param1)
    {
      this.iGU("WARNING", _param1);
      return true;
    }

    public bool SGh(int _param1, int _param2, byte _param3)
    {
      bool flag1 = this.KRC < this.kRb && ((int) this.UGo[this.KRC] >> _param1 - 1 & (1 << _param2) - 1) == (int) _param3;
      int num1 = 0;
      if (Ge.DcP())
        goto label_6;
label_1:
      bool flag2;
      while (true)
      {
        switch (num1)
        {
          case 1:
            goto label_4;
          default:
            if (!flag1)
            {
              flag2 = false;
              int num2;
              num1 = Ge.DcP() ? 1 : num2;
              continue;
            }
            goto label_5;
        }
      }
label_4:
      return flag2;
label_5:
      ++this.KRC;
      flag2 = true;
      goto label_4;
label_6:
      num1 = 0;
      goto label_1;
    }

    public bool bGs(int _param1, int _param2, Ge.Ebq _param3)
    {
      if (this.KRC >= this.kRb)
        return false;
      byte num1 = (byte) ((int) this.UGo[this.KRC] >> _param1 - 1 & (1 << _param2) - 1);
      int num2 = 0;
      if (!Ge.DcP())
        goto label_5;
label_1:
      switch (num2)
      {
        default:
          ++this.KRC;
          return _param3.EM3(num1);
      }
label_5:
      int num3;
      num2 = num3;
      goto label_1;
    }

    public bool eGd(int _param1, int _param2, byte _param3) => this.KRC < this.kRb && ((int) this.UGo[this.KRC] >> _param1 - 1 & (1 << _param2) - 1) == (int) _param3;

    public bool lGw(int _param1, int _param2, byte _param3) => this.KRC >= this.kRb || ((int) this.UGo[this.KRC] >> _param1 - 1 & (1 << _param2) - 1) != (int) _param3;

    public bool gGi(int _param1, int _param2, out int _param3) => this.hGx(_param1, _param2, out _param3);

    public bool FGQ(int _param1, int _param2, Ge.Ebq _param3, out int _param4) => this.hGx(_param1, _param2, out _param4);

    public bool UGA(int _param1, byte _param2)
    {
      int num1 = 2;
label_1:
      int num2 = num1;
      bool flag;
      while (true)
      {
        int num3;
        switch (num2)
        {
          case 1:
            num3 = ((int) this.UGo[this.KRC] >> _param1 - 1 & 1) == (int) _param2 ? 1 : 0;
            break;
          case 2:
            if (this.KRC < this.kRb)
            {
              if (Ge.DcP())
              {
                num2 = 1;
                continue;
              }
              goto label_1;
            }
            else
            {
              num3 = 0;
              break;
            }
          default:
            goto label_9;
        }
        if (num3 != 0)
        {
          ++this.KRC;
          flag = true;
          if (Ge.vcq() == null)
            num2 = 0;
          else
            goto label_1;
        }
        else
          break;
      }
      flag = false;
label_9:
      return flag;
    }

    public bool bGL(int _param1, byte _param2) => this.KRC < this.kRb && ((int) this.UGo[this.KRC] >> _param1 - 1 & 1) == (int) _param2;

    public bool OGM(int _param1, byte _param2) => this.KRC >= this.kRb || ((int) this.UGo[this.KRC] >> _param1 - 1 & 1) != (int) _param2;

    public bool AG1(byte _param1)
    {
      if (this.KRC >= this.kRb || (int) this.UGo[this.KRC] != (int) _param1)
        goto label_2;
      else
        goto label_4;
label_1:
      bool flag;
      int num1;
      switch (num1)
      {
        case 1:
          return flag;
        default:
          flag = true;
          goto case 1;
      }
label_2:
      flag = false;
      num1 = 1;
      if (!Ge.DcP())
      {
        num1 = 0;
        goto label_1;
      }
      else
        goto label_1;
label_4:
      ++this.KRC;
      int num2;
      num1 = Ge.vcq() == null ? 0 : num2;
      goto label_1;
    }

    public bool LG7(byte _param1, byte _param2)
    {
      int num1 = 2;
label_1:
      int num2 = num1;
      bool flag;
      while (true)
      {
        int num3;
        switch (num2)
        {
          case 1:
            if ((int) this.UGo[this.KRC] == (int) _param1)
            {
              num3 = (int) this.UGo[this.KRC + 1] == (int) _param2 ? 1 : 0;
              goto label_11;
            }
            else
              break;
          case 2:
            if (this.KRC + 1 < this.kRb)
            {
              if (Ge.DcP())
              {
                num2 = 1;
                continue;
              }
              goto label_1;
            }
            else
              break;
          default:
            goto label_4;
        }
        num3 = 0;
label_11:
        if (num3 != 0)
        {
          this.KRC += 2;
          flag = true;
          num2 = Ge.DcP() ? 0 : 0;
        }
        else
          goto label_6;
      }
label_4:
      return flag;
label_6:
      flag = false;
      goto label_4;
    }

    public bool UGg(byte _param1, byte _param2, byte _param3)
    {
      if (this.KRC + 2 >= this.kRb || (int) this.UGo[this.KRC] != (int) _param1 || (int) this.UGo[this.KRC + 1] != (int) _param2 || (int) this.UGo[this.KRC + 2] != (int) _param3)
        return false;
label_4:
      this.KRC += 3;
      int num1 = 1;
      if (Ge.vcq() != null)
        goto label_5;
label_1:
      switch (num1)
      {
        case 1:
          return true;
        default:
          goto label_4;
      }
label_5:
      int num2;
      num1 = num2;
      goto label_1;
    }

    public bool wGj(byte _param1, byte _param2, byte _param3, byte _param4)
    {
      int num1;
      if (this.KRC + 3 < this.kRb && (int) this.UGo[this.KRC] == (int) _param1)
      {
        int num2 = 1;
        if (Ge.DcP())
          goto label_2;
label_1:
        int num3;
        num2 = num3;
label_2:
        while (true)
        {
          switch (num2)
          {
            case 1:
              if ((int) this.UGo[this.KRC + 1] == (int) _param2)
              {
                if (Ge.vcq() == null)
                {
                  num2 = 0;
                  continue;
                }
                goto label_1;
              }
              else
                goto label_11;
            default:
              goto label_9;
          }
        }
label_9:
        if ((int) this.UGo[this.KRC + 2] == (int) _param3)
        {
          num1 = (int) this.UGo[this.KRC + 3] == (int) _param4 ? 1 : 0;
          goto label_12;
        }
      }
label_11:
      num1 = 0;
label_12:
      if (num1 == 0)
        return false;
      this.KRC += 4;
      return true;
    }

    public bool LGr(byte _param1, byte _param2, byte _param3, byte _param4, byte _param5)
    {
      if (this.KRC + 4 >= this.kRb || (int) this.UGo[this.KRC] != (int) _param1 || (int) this.UGo[this.KRC + 1] != (int) _param2)
        goto label_9;
      else
        goto label_7;
label_6:
      bool flag;
      return flag;
label_7:
      int num1 = 1;
      if (Ge.vcq() != null)
        goto label_8;
label_1:
      int num2;
      switch (num1)
      {
        case 1:
          if ((int) this.UGo[this.KRC + 2] == (int) _param3 && (int) this.UGo[this.KRC + 3] == (int) _param4)
          {
            num2 = (int) this.UGo[this.KRC + 4] == (int) _param5 ? 1 : 0;
            goto label_10;
          }
          else
            goto label_9;
        default:
          goto label_6;
      }
label_8:
      int num3;
      num1 = num3;
      goto label_1;
label_9:
      num2 = 0;
label_10:
      if (num2 != 0)
      {
        this.KRC += 5;
        flag = true;
        goto label_6;
      }
      else
      {
        flag = false;
        goto label_6;
      }
    }

    public bool cGZ(
      byte _param1,
      byte _param2,
      byte _param3,
      byte _param4,
      byte _param5,
      byte _param6)
    {
      if (this.KRC + 5 >= this.kRb || (int) this.UGo[this.KRC] != (int) _param1 || (int) this.UGo[this.KRC + 1] != (int) _param2 || (int) this.UGo[this.KRC + 2] != (int) _param3 || (int) this.UGo[this.KRC + 3] != (int) _param4)
        goto label_10;
      else
        goto label_7;
label_1:
      bool flag;
      int num1;
      while (true)
      {
        switch (num1)
        {
          case 1:
            goto label_2;
          case 2:
            goto label_9;
          default:
            flag = false;
            num1 = Ge.vcq() != null ? 0 : 1;
            continue;
        }
      }
label_9:
      int num2;
      if ((int) this.UGo[this.KRC + 4] == (int) _param5)
      {
        num2 = (int) this.UGo[this.KRC + 5] == (int) _param6 ? 1 : 0;
        goto label_11;
      }
      else
        goto label_10;
label_2:
      return flag;
label_7:
      int num3;
      num1 = Ge.vcq() == null ? 2 : num3;
      goto label_1;
label_10:
      num2 = 0;
label_11:
      if (num2 == 0)
      {
        num1 = 0;
        if (Ge.DcP())
        {
          num1 = 0;
          goto label_1;
        }
        else
          goto label_1;
      }
      else
      {
        this.KRC += 6;
        flag = true;
        goto label_2;
      }
    }

    public bool BGt(
      byte _param1,
      byte _param2,
      byte _param3,
      byte _param4,
      byte _param5,
      byte _param6,
      byte _param7)
    {
      int num1;
      if (this.KRC + 6 < this.kRb && (int) this.UGo[this.KRC] == (int) _param1)
      {
        int num2 = 2;
        if (!Ge.DcP())
          goto label_4;
label_1:
        while (true)
        {
          switch (num2)
          {
            case 1:
              if ((int) this.UGo[this.KRC + 3] == (int) _param4 && (int) this.UGo[this.KRC + 4] == (int) _param5 && (int) this.UGo[this.KRC + 5] == (int) _param6)
              {
                int num3;
                num2 = Ge.vcq() == null ? 0 : num3;
                continue;
              }
              goto label_11;
            case 2:
              if ((int) this.UGo[this.KRC + 1] == (int) _param2 && (int) this.UGo[this.KRC + 2] == (int) _param3)
              {
                num2 = Ge.DcP() ? 1 : 1;
                continue;
              }
              goto label_11;
            default:
              goto label_5;
          }
        }
label_5:
        num1 = (int) this.UGo[this.KRC + 6] == (int) _param7 ? 1 : 0;
        goto label_12;
label_4:
        num2 = 0;
        goto label_1;
      }
label_11:
      num1 = 0;
label_12:
      if (num1 == 0)
        return false;
      this.KRC += 7;
      return true;
    }

    public bool EGD(
      byte _param1,
      byte _param2,
      byte _param3,
      byte _param4,
      byte _param5,
      byte _param6,
      byte _param7,
      byte _param8)
    {
      if (this.KRC + 7 >= this.kRb || (int) this.UGo[this.KRC] != (int) _param1 || (int) this.UGo[this.KRC + 1] != (int) _param2 || (int) this.UGo[this.KRC + 2] != (int) _param3 || (int) this.UGo[this.KRC + 3] != (int) _param4 || (int) this.UGo[this.KRC + 4] != (int) _param5 || (int) this.UGo[this.KRC + 5] != (int) _param6)
        goto label_10;
      else
        goto label_4;
label_1:
      int num1;
      int num2 = num1;
label_2:
      while (true)
      {
        switch (num2)
        {
          case 1:
            if ((int) this.UGo[this.KRC + 6] == (int) _param7)
            {
              num2 = Ge.vcq() == null ? 0 : 0;
              continue;
            }
            goto label_10;
          case 2:
            goto label_8;
          default:
            goto label_9;
        }
      }
label_8:
      bool flag;
      if (!flag)
        return false;
      this.KRC += 8;
      return true;
label_9:
      int num3 = (int) this.UGo[this.KRC + 7] == (int) _param8 ? 1 : 0;
      goto label_11;
label_4:
      if (Ge.vcq() == null)
      {
        num2 = 1;
        goto label_2;
      }
      else
        goto label_1;
label_10:
      num3 = 0;
label_11:
      flag = num3 != 0;
      num2 = 2;
      if (Ge.vcq() == null)
        goto label_2;
      else
        goto label_1;
    }

    public bool FGp(byte[] _param1)
    {
      int length = _param1.Length;
      if (this.KRC + length <= this.kRb)
        goto label_4;
      else
        goto label_5;
label_3:
      bool flag;
      return flag;
label_4:
      int index = 0;
      int num1 = 0;
      if (Ge.DcP())
        goto label_2;
label_1:
      int num2;
      num1 = num2;
label_2:
      switch (num1)
      {
        case 1:
          goto label_3;
        case 2:
          flag = false;
          goto label_3;
        default:
          for (; index < length; ++index)
          {
            if ((int) _param1[index] != (int) this.UGo[this.KRC + index])
            {
              if (Ge.DcP())
              {
                num1 = 2;
                goto label_2;
              }
              else
                goto label_1;
            }
          }
          this.KRC += length;
          flag = true;
          goto label_3;
      }
label_5:
      flag = false;
      goto label_3;
    }

    public static byte QGS(byte _param0) => _param0 >= (byte) 97 && _param0 <= (byte) 122 ? (byte) ((uint) _param0 - 32U) : _param0;

    public bool MG2(byte _param1)
    {
      int num1 = 2;
label_1:
      int num2 = num1;
      bool flag;
      while (true)
      {
        int num3;
        switch (num2)
        {
          case 1:
            num3 = (int) Ge.QGS(this.UGo[this.KRC]) == (int) _param1 ? 1 : 0;
            break;
          case 2:
            if (this.KRC < this.kRb)
            {
              if (Ge.vcq() == null)
              {
                num2 = 1;
                continue;
              }
              goto label_1;
            }
            else
            {
              num3 = 0;
              break;
            }
          default:
            goto label_6;
        }
        if (num3 != 0)
        {
          ++this.KRC;
          flag = true;
          if (Ge.vcq() == null)
            num2 = 0;
          else
            goto label_1;
        }
        else
          break;
      }
      flag = false;
label_6:
      return flag;
    }

    public bool MGW(byte _param1, byte _param2)
    {
      bool flag1 = this.KRC + 1 < this.kRb && (int) Ge.QGS(this.UGo[this.KRC]) == (int) Ge.QGS(_param1) && (int) Ge.QGS(this.UGo[this.KRC + 1]) == (int) Ge.QGS(_param2);
      int num1 = 1;
      if (!Ge.DcP())
        goto label_6;
label_1:
      bool flag2;
      while (true)
      {
        switch (num1)
        {
          case 1:
            if (flag1)
            {
              this.KRC += 2;
              flag2 = true;
              num1 = Ge.vcq() == null ? 0 : 0;
              continue;
            }
            goto label_4;
          default:
            goto label_3;
        }
      }
label_3:
      return flag2;
label_4:
      flag2 = false;
      goto label_3;
label_6:
      int num2;
      num1 = num2;
      goto label_1;
    }

    public bool mGF(byte _param1, byte _param2, byte _param3)
    {
      bool flag;
      if (this.KRC + 2 >= this.kRb || (int) Ge.bcu(this.UGo[this.KRC]) != (int) Ge.bcu(_param1) || (int) Ge.bcu(this.UGo[this.KRC + 1]) != (int) Ge.QGS(_param2) || (int) Ge.QGS(this.UGo[this.KRC + 2]) != (int) Ge.QGS(_param3))
        flag = false;
      else
        goto label_5;
label_4:
      return flag;
label_5:
      this.KRC += 3;
      int num = 0;
      if (Ge.DcP())
        goto label_6;
label_1:
      switch (num)
      {
        case 1:
          goto label_4;
        default:
          flag = true;
          goto label_4;
      }
label_6:
      num = 0;
      goto label_1;
    }

    public bool fG8(byte _param1, byte _param2, byte _param3, byte _param4)
    {
      int num1 = 2;
      while (true)
      {
        switch (num1)
        {
          case 1:
            goto label_7;
          case 2:
            if (this.KRC + 3 < this.kRb)
            {
              num1 = !Ge.DcP() ? 0 : 1;
              continue;
            }
            goto label_9;
          default:
            goto label_2;
        }
      }
label_2:
      bool flag;
      return flag;
label_7:
      int num2;
      if ((int) Ge.bcu(this.UGo[this.KRC]) == (int) Ge.QGS(_param1) && (int) Ge.QGS(this.UGo[this.KRC + 1]) == (int) Ge.QGS(_param2) && (int) Ge.QGS(this.UGo[this.KRC + 2]) == (int) Ge.QGS(_param3))
      {
        num2 = (int) Ge.QGS(this.UGo[this.KRC + 3]) == (int) Ge.QGS(_param4) ? 1 : 0;
        goto label_10;
      }
label_9:
      num2 = 0;
label_10:
      if (num2 == 0)
      {
        flag = false;
        goto label_2;
      }
      else
      {
        this.KRC += 4;
        flag = true;
        goto label_2;
      }
    }

    public bool gGE(byte _param1, byte _param2, byte _param3, byte _param4, byte _param5)
    {
      int num1 = 1;
      while (true)
      {
        int num2;
        switch (num1)
        {
          case 1:
            if (this.KRC + 4 < this.kRb)
            {
              num1 = Ge.vcq() == null ? 0 : 0;
              continue;
            }
            break;
          case 2:
            goto label_8;
          default:
            if ((int) Ge.QGS(this.UGo[this.KRC]) == (int) Ge.QGS(_param1) && (int) Ge.bcu(this.UGo[this.KRC + 1]) == (int) Ge.QGS(_param2) && (int) Ge.QGS(this.UGo[this.KRC + 2]) == (int) Ge.bcu(_param3) && (int) Ge.QGS(this.UGo[this.KRC + 3]) == (int) Ge.QGS(_param4))
            {
              num2 = (int) Ge.QGS(this.UGo[this.KRC + 4]) == (int) Ge.QGS(_param5) ? 1 : 0;
              goto label_10;
            }
            else
              break;
        }
        num2 = 0;
label_10:
        if (num2 != 0)
          num1 = Ge.vcq() == null ? 2 : 1;
        else
          break;
      }
      return false;
label_8:
      this.KRC += 5;
      return true;
    }

    public bool WG0(
      byte _param1,
      byte _param2,
      byte _param3,
      byte _param4,
      byte _param5,
      byte _param6)
    {
      if (this.KRC + 5 >= this.kRb || (int) Ge.bcu(this.UGo[this.KRC]) != (int) Ge.bcu(_param1) || (int) Ge.QGS(this.UGo[this.KRC + 1]) != (int) Ge.QGS(_param2))
        goto label_10;
      else
        goto label_7;
label_2:
      bool flag;
      int num1;
      int num2;
      switch (num2)
      {
        case 2:
          if ((int) Ge.QGS(this.UGo[this.KRC + 2]) == (int) Ge.QGS(_param3) && (int) Ge.QGS(this.UGo[this.KRC + 3]) == (int) Ge.QGS(_param4) && (int) Ge.QGS(this.UGo[this.KRC + 4]) == (int) Ge.QGS(_param5))
          {
            num1 = (int) Ge.QGS(this.UGo[this.KRC + 5]) == (int) Ge.bcu(_param6) ? 1 : 0;
            goto label_11;
          }
          else
            goto label_10;
        default:
          return flag;
      }
label_7:
      num2 = 2;
      goto label_2;
label_10:
      num1 = 0;
label_11:
      if (num1 == 0)
        goto label_6;
      else
        goto label_9;
label_1:
      int num3;
      num2 = num3;
      goto label_2;
label_6:
      flag = false;
      num2 = 1;
      if (Ge.vcq() == null)
        goto label_2;
      else
        goto label_1;
label_9:
      this.KRC += 6;
      flag = true;
      if (Ge.vcq() == null)
      {
        num2 = 0;
        goto label_2;
      }
      else
        goto label_1;
    }

    public bool aGY(
      byte _param1,
      byte _param2,
      byte _param3,
      byte _param4,
      byte _param5,
      byte _param6,
      byte _param7)
    {
      int num1 = 1;
label_1:
      int num2 = num1;
      bool flag;
      while (true)
      {
        int num3;
        switch (num2)
        {
          case 1:
            if (this.KRC + 6 < this.kRb)
            {
              if (Ge.vcq() == null)
              {
                num2 = 0;
                continue;
              }
              goto label_1;
            }
            else
              break;
          case 2:
            if ((int) Ge.QGS(this.UGo[this.KRC + 4]) == (int) Ge.QGS(_param5) && (int) Ge.QGS(this.UGo[this.KRC + 5]) == (int) Ge.QGS(_param6))
            {
              num3 = (int) Ge.QGS(this.UGo[this.KRC + 6]) == (int) Ge.bcu(_param7) ? 1 : 0;
              goto label_15;
            }
            else
              break;
          case 3:
            goto label_9;
          default:
            if ((int) Ge.QGS(this.UGo[this.KRC]) == (int) Ge.QGS(_param1) && (int) Ge.QGS(this.UGo[this.KRC + 1]) == (int) Ge.QGS(_param2) && (int) Ge.bcu(this.UGo[this.KRC + 2]) == (int) Ge.QGS(_param3) && (int) Ge.QGS(this.UGo[this.KRC + 3]) == (int) Ge.QGS(_param4))
            {
              num2 = Ge.vcq() == null ? 2 : 0;
              continue;
            }
            break;
        }
        num3 = 0;
label_15:
        if (num3 != 0)
        {
          this.KRC += 7;
          flag = true;
          if (Ge.DcP())
            num2 = 3;
          else
            goto label_1;
        }
        else
          goto label_10;
      }
label_9:
      return flag;
label_10:
      flag = false;
      goto label_9;
    }

    public bool tGk(byte[] _param1)
    {
      int length = _param1.Length;
      bool flag1 = this.KRC + length > this.kRb;
      int num1 = 1;
      if (!Ge.DcP())
        goto label_2;
label_1:
      bool flag2;
      int index;
      while (true)
      {
        switch (num1)
        {
          case 1:
            if (!flag1)
            {
              index = 0;
              num1 = 3;
              continue;
            }
            goto label_6;
          case 3:
            for (; index < length; ++index)
            {
              if ((int) _param1[index] != (int) Ge.QGS(this.UGo[this.KRC + index]))
              {
                flag2 = false;
                goto label_3;
              }
            }
            this.KRC += length;
            flag2 = true;
            int num2;
            num1 = Ge.DcP() ? 0 : num2;
            continue;
          default:
            goto label_3;
        }
      }
label_3:
      return flag2;
label_6:
      flag2 = false;
      goto label_3;
label_2:
      num1 = 1;
      goto label_1;
    }

    public bool bGq(byte _param1, byte _param2)
    {
      if (this.KRC >= this.kRb || (int) this.UGo[this.KRC] < (int) _param1)
        goto label_8;
      else
        goto label_2;
label_1:
      int num1;
      int num2;
      switch (num2)
      {
        case 1:
          return true;
        default:
          num1 = (int) this.UGo[this.KRC] <= (int) _param2 ? 1 : 0;
          goto label_9;
      }
label_2:
      num2 = Ge.vcq() != null ? 0 : 0;
      goto label_1;
label_8:
      num1 = 0;
label_9:
      if (num1 == 0)
        return false;
      ++this.KRC;
      num2 = 1;
      if (Ge.vcq() != null)
      {
        num2 = 0;
        goto label_1;
      }
      else
        goto label_1;
    }

    public bool YGy(byte _param1, byte _param2, byte _param3, byte _param4)
    {
      if (this.KRC >= this.kRb)
        goto label_7;
      else
        goto label_5;
label_1:
      byte num1;
      int num2;
      int num3;
      switch (num2)
      {
        case 1:
          num3 = (int) num1 <= (int) _param4 ? 1 : 0;
          goto label_14;
        case 2:
          if ((int) num1 <= (int) _param2)
          {
            num3 = 1;
            goto label_14;
          }
          else
            goto label_10;
        default:
          goto label_9;
      }
label_5:
      num1 = this.UGo[this.KRC];
      if ((int) num1 >= (int) _param1)
      {
        num2 = 2;
        goto label_1;
      }
      else
        goto label_10;
label_7:
      bool flag = false;
      num2 = 0;
      if (Ge.vcq() == null)
      {
        num2 = 0;
        goto label_1;
      }
      else
        goto label_1;
label_9:
      return flag;
label_10:
      if ((int) num1 >= (int) _param3)
      {
        num2 = Ge.vcq() == null ? 1 : 1;
        goto label_1;
      }
      else
        num3 = 0;
label_14:
      if (num3 != 0)
      {
        ++this.KRC;
        flag = true;
        goto label_9;
      }
      else
        goto label_7;
    }

    public bool qGu(
      byte _param1,
      byte _param2,
      byte _param3,
      byte _param4,
      byte _param5,
      byte _param6)
    {
      if (this.KRC >= this.kRb)
        goto label_6;
      else
        goto label_8;
label_1:
      int num1;
      int num2 = num1;
label_2:
      bool flag;
      while (true)
      {
        switch (num2)
        {
          case 1:
          case 2:
            goto label_3;
          case 3:
            goto label_6;
          default:
            byte num3 = this.UGo[this.KRC];
            if ((int) num3 >= (int) _param1 && (int) num3 <= (int) _param2 || (int) num3 >= (int) _param3 && (int) num3 <= (int) _param4 || (int) num3 >= (int) _param5 && (int) num3 <= (int) _param6)
            {
              ++this.KRC;
              flag = true;
              if (Ge.vcq() == null)
              {
                num2 = 1;
                continue;
              }
              goto label_1;
            }
            else
              goto label_5;
        }
      }
label_3:
      return flag;
label_5:
      num1 = 3;
      goto label_1;
label_6:
      flag = false;
      num2 = 2;
      if (Ge.DcP())
        goto label_2;
      else
        goto label_1;
label_8:
      if (Ge.vcq() == null)
      {
        num2 = 0;
        goto label_2;
      }
      else
        goto label_1;
    }

    public bool oG6(
      byte _param1,
      byte _param2,
      byte _param3,
      byte _param4,
      byte _param5,
      byte _param6,
      byte _param7,
      byte _param8)
    {
      if (this.KRC < this.kRb)
        goto label_12;
label_6:
      return false;
label_12:
      byte num1 = this.UGo[this.KRC];
      if ((int) num1 < (int) _param1)
        goto label_13;
      else
        goto label_4;
label_1:
      int num2;
      int num3 = num2;
label_2:
      switch (num3)
      {
        case 1:
          goto label_13;
        case 2:
          if ((int) num1 <= (int) _param6)
            goto label_16;
          else
            break;
        case 3:
          if ((int) num1 <= (int) _param4)
            goto label_16;
          else
            goto label_7;
        default:
          return true;
      }
label_3:
      int num4 = (int) num1 < (int) _param7 ? 0 : ((int) num1 <= (int) _param8 ? 1 : 0);
      goto label_17;
label_4:
      if ((int) num1 > (int) _param2)
      {
        num3 = Ge.vcq() != null ? 0 : 1;
        goto label_2;
      }
      else
        goto label_16;
label_7:
      if ((int) num1 >= (int) _param5)
      {
        if (Ge.DcP())
        {
          num3 = 2;
          goto label_2;
        }
        else
          goto label_1;
      }
      else
        goto label_3;
label_13:
      if ((int) num1 >= (int) _param3)
      {
        num3 = 3;
        goto label_2;
      }
      else
        goto label_7;
label_16:
      num4 = 1;
label_17:
      if (num4 != 0)
      {
        ++this.KRC;
        num3 = 0;
        if (Ge.DcP())
          goto label_2;
        else
          goto label_1;
      }
      else
        goto label_6;
    }

    public bool NGB(byte[] _param1)
    {
      if (this.KRC >= this.kRb)
        goto label_5;
      else
        goto label_2;
label_1:
      int index;
      bool flag;
      byte num1;
      int num2;
      while (true)
      {
        switch (num2)
        {
          case 1:
            if (index < _param1.Length - 1)
            {
              if ((int) num1 >= (int) _param1[index] && (int) num1 <= (int) _param1[index + 1])
              {
                ++this.KRC;
                flag = true;
                num2 = 3;
                continue;
              }
              index += 2;
              int num3;
              num2 = Ge.DcP() ? 1 : num3;
              continue;
            }
            goto label_5;
          case 2:
            num1 = this.UGo[this.KRC];
            index = 0;
            goto case 1;
          default:
            goto label_7;
        }
      }
label_7:
      return flag;
label_2:
      num2 = 2;
      goto label_1;
label_5:
      flag = false;
      num2 = 0;
      if (Ge.vcq() == null)
      {
        num2 = 0;
        goto label_1;
      }
      else
        goto label_1;
    }

    public bool nGn(byte[] _param1)
    {
      if (this.KRC >= this.kRb)
        goto label_5;
      else
        goto label_3;
label_1:
      bool flag1;
      int index;
      bool flag2;
      int num1;
      switch (num1)
      {
        case 1:
          flag1 = true;
          goto case 2;
        case 2:
        case 3:
          return flag1;
        default:
          if (!flag2)
          {
            index += 2;
            goto label_7;
          }
          else
          {
            flag1 = false;
            goto case 2;
          }
      }
label_3:
      byte num2 = this.UGo[this.KRC];
      index = 0;
      goto label_7;
label_5:
      flag1 = false;
      num1 = 3;
      goto label_1;
label_7:
      if (index < _param1.Length - 1)
      {
        flag2 = (int) num2 >= (int) _param1[index] && (int) num2 <= (int) _param1[index + 1];
        num1 = !Ge.DcP() ? 0 : 0;
        goto label_1;
      }
      else
      {
        ++this.KRC;
        num1 = Ge.vcq() != null ? 1 : 1;
        goto label_1;
      }
    }

    public bool PGN(byte _param1, byte _param2)
    {
      if (this.KRC < this.kRb)
        goto label_2;
      else
        goto label_9;
label_1:
      bool flag;
      int num1;
      int num2;
      switch (num2)
      {
        case 1:
          if (!flag)
            return false;
          ++this.KRC;
          return true;
        default:
          num1 = (int) this.UGo[this.KRC] == (int) _param2 ? 1 : 0;
          goto label_10;
      }
label_2:
      if ((int) this.UGo[this.KRC] != (int) _param1)
      {
        int num3;
        num2 = Ge.vcq() == null ? 0 : num3;
        goto label_1;
      }
      else
      {
        num1 = 1;
        goto label_10;
      }
label_9:
      num1 = 0;
label_10:
      flag = num1 != 0;
      num2 = 1;
      if (Ge.DcP())
      {
        num2 = 1;
        goto label_1;
      }
      else
        goto label_1;
    }

    public bool TGP(byte _param1, byte _param2, byte _param3)
    {
      if (this.KRC < this.kRb)
      {
        byte num1 = this.UGo[this.KRC];
        int num2 = 1;
        if (Ge.DcP())
          goto label_2;
label_1:
        int num3;
        num2 = num3;
label_2:
        bool flag;
        while (true)
        {
          switch (num2)
          {
            case 1:
              flag = (int) num1 == (int) _param1 || (int) num1 == (int) _param2 || (int) num1 == (int) _param3;
              if (Ge.DcP())
              {
                num2 = 0;
                continue;
              }
              goto label_1;
            default:
              goto label_3;
          }
        }
label_3:
        if (flag)
        {
          ++this.KRC;
          return true;
        }
      }
      return false;
    }

    public bool pG5(byte _param1, byte _param2, byte _param3, byte _param4)
    {
      if (this.KRC < this.kRb)
        goto label_8;
label_4:
      return false;
label_8:
      byte num1 = this.UGo[this.KRC];
      int num2 = 0;
      if (Ge.DcP())
        goto label_2;
label_1:
      int num3;
      num2 = num3;
label_2:
      bool flag;
      while (true)
      {
        int num4;
        switch (num2)
        {
          case 1:
            goto label_3;
          case 2:
            num4 = (int) num1 == (int) _param4 ? 1 : 0;
            break;
          default:
            if ((int) num1 != (int) _param1 && (int) num1 != (int) _param2 && (int) num1 != (int) _param3)
            {
              num2 = 2;
              continue;
            }
            num4 = 1;
            break;
        }
        flag = num4 != 0;
        if (Ge.DcP())
          num2 = 1;
        else
          goto label_1;
      }
label_3:
      if (flag)
      {
        ++this.KRC;
        return true;
      }
      goto label_4;
    }

    public bool tGJ(byte _param1, byte _param2, byte _param3, byte _param4, byte _param5)
    {
      if (this.KRC >= this.kRb)
        goto label_4;
      else
        goto label_9;
label_1:
      int num1;
      int num2 = num1;
label_2:
      byte num3;
      while (true)
      {
        switch (num2)
        {
          case 1:
            goto label_5;
          case 2:
            goto label_10;
          default:
            if ((int) num3 != (int) _param3 && (int) num3 != (int) _param4)
            {
              if (Ge.vcq() == null)
              {
                num2 = 1;
                continue;
              }
              goto label_1;
            }
            else
              goto label_12;
        }
      }
label_5:
      int num4 = (int) num3 == (int) _param5 ? 1 : 0;
      goto label_13;
label_4:
      bool flag = false;
      num2 = 2;
      if (Ge.DcP())
        goto label_2;
      else
        goto label_1;
label_9:
      num3 = this.UGo[this.KRC];
      if ((int) num3 != (int) _param1 && (int) num3 != (int) _param2)
      {
        if (Ge.DcP())
        {
          num2 = 0;
          goto label_2;
        }
        else
          goto label_1;
      }
      else
        goto label_12;
label_10:
      return flag;
label_12:
      num4 = 1;
label_13:
      if (num4 != 0)
      {
        ++this.KRC;
        flag = true;
        goto label_10;
      }
      else
        goto label_4;
    }

    public bool GGX(
      byte _param1,
      byte _param2,
      byte _param3,
      byte _param4,
      byte _param5,
      byte _param6)
    {
      if (this.KRC < this.kRb)
        goto label_11;
label_3:
      return false;
label_11:
      byte num1 = this.UGo[this.KRC];
      int num2;
      if ((int) num1 != (int) _param1)
      {
        int num3 = 1;
        if (Ge.vcq() == null)
          goto label_2;
label_1:
        int num4;
        num3 = num4;
label_2:
        while (true)
        {
          switch (num3)
          {
            case 1:
              if ((int) num1 != (int) _param2 && (int) num1 != (int) _param3 && (int) num1 != (int) _param4)
              {
                num3 = Ge.DcP() ? 2 : 1;
                continue;
              }
              goto label_12;
            case 2:
              if ((int) num1 != (int) _param5)
              {
                if (Ge.DcP())
                {
                  num3 = 0;
                  continue;
                }
                goto label_1;
              }
              else
                goto label_12;
            default:
              goto label_10;
          }
        }
label_10:
        num2 = (int) num1 == (int) _param6 ? 1 : 0;
        goto label_13;
      }
label_12:
      num2 = 1;
label_13:
      if (num2 != 0)
      {
        ++this.KRC;
        return true;
      }
      goto label_3;
    }

    public bool BGI(
      byte _param1,
      byte _param2,
      byte _param3,
      byte _param4,
      byte _param5,
      byte _param6,
      byte _param7)
    {
      if (this.KRC < this.kRb)
        goto label_6;
label_4:
      return false;
label_6:
      byte num1 = this.UGo[this.KRC];
      int num2;
      if ((int) num1 != (int) _param1)
      {
        int num3 = 1;
        if (Ge.vcq() == null)
          goto label_2;
label_1:
        int num4;
        num3 = num4;
label_2:
        while (true)
        {
          switch (num3)
          {
            case 1:
              goto label_10;
            case 2:
              if ((int) num1 != (int) _param4 && (int) num1 != (int) _param5 && (int) num1 != (int) _param6)
              {
                num3 = Ge.vcq() == null ? 0 : 0;
                continue;
              }
              goto label_12;
            default:
              goto label_5;
          }
        }
label_5:
        num2 = (int) num1 == (int) _param7 ? 1 : 0;
        goto label_13;
label_10:
        if ((int) num1 != (int) _param2 && (int) num1 != (int) _param3)
        {
          num4 = 2;
          goto label_1;
        }
      }
label_12:
      num2 = 1;
label_13:
      if (num2 != 0)
      {
        ++this.KRC;
        return true;
      }
      goto label_4;
    }

    public bool TG9(
      byte _param1,
      byte _param2,
      byte _param3,
      byte _param4,
      byte _param5,
      byte _param6,
      byte _param7,
      byte _param8)
    {
      bool flag1;
      if (this.KRC < this.kRb)
      {
        byte num1 = this.UGo[this.KRC];
        if ((int) num1 == (int) _param1 || (int) num1 == (int) _param2 || (int) num1 == (int) _param3)
          goto label_14;
        else
          goto label_4;
label_1:
        int num2;
        int num3 = num2;
label_2:
        bool flag2;
        while (true)
        {
          switch (num3)
          {
            case 1:
              flag1 = true;
              if (Ge.vcq() == null)
              {
                num3 = 2;
                continue;
              }
              goto label_1;
            case 2:
              goto label_9;
            case 3:
              if (flag2)
              {
                ++this.KRC;
                if (Ge.DcP())
                {
                  num3 = 1;
                  continue;
                }
                goto label_1;
              }
              else
                goto label_8;
            default:
              goto label_11;
          }
        }
label_11:
        int num4;
        if ((int) num1 != (int) _param4 && (int) num1 != (int) _param5 && (int) num1 != (int) _param6 && (int) num1 != (int) _param7)
        {
          num4 = (int) num1 == (int) _param8 ? 1 : 0;
          goto label_15;
        }
        else
          goto label_14;
label_4:
        if (Ge.DcP())
        {
          num3 = 0;
          goto label_2;
        }
        else
          goto label_1;
label_14:
        num4 = 1;
label_15:
        flag2 = num4 != 0;
        num3 = 3;
        if (Ge.vcq() == null)
        {
          num3 = 3;
          goto label_2;
        }
        else
          goto label_2;
      }
label_8:
      flag1 = false;
label_9:
      return flag1;
    }

    public bool CGK(byte[] _param1)
    {
      if (this.KRC < this.kRb)
      {
        byte num1 = this.UGo[this.KRC];
        int index = 0;
        while (true)
        {
          bool flag = index < _param1.Length;
          int num2 = 0;
          if (Ge.DcP())
            goto label_3;
label_1:
          switch (num2)
          {
            case 1:
              goto label_6;
            case 2:
              if (flag)
                break;
              goto label_7;
          }
          if ((int) num1 != (int) _param1[index])
          {
            ++index;
            continue;
          }
          break;
label_3:
          num2 = 2;
          goto label_1;
        }
label_6:
        ++this.KRC;
        return true;
      }
label_7:
      return false;
    }

    public bool OGV(byte[] _param1)
    {
      int num1 = 2;
      byte num2;
      int index;
      bool flag;
      while (true)
      {
        switch (num1)
        {
          case 1:
            if (flag)
            {
              num2 = this.UGo[this.KRC];
              index = 0;
              num1 = 3;
              continue;
            }
            goto label_4;
          case 2:
            flag = this.KRC < this.kRb;
            num1 = Ge.DcP() ? 1 : 1;
            continue;
          case 3:
            goto label_3;
          default:
            goto label_8;
        }
      }
label_3:
      for (; index < _param1.Length; ++index)
      {
        if ((int) num2 != (int) _param1[index])
          continue;
        return false;
      }
      goto label_8;
label_4:
      return false;
label_8:
      return true;
    }

    public bool jGH(Ge.Ebq _param1)
    {
      int num1 = 1;
label_1:
      int num2 = num1;
      bool flag;
      while (true)
      {
        int num3;
        switch (num2)
        {
          case 1:
            if (this.KRC < this.kRb)
            {
              if (Ge.DcP())
              {
                num2 = 0;
                continue;
              }
              goto label_1;
            }
            else
            {
              num3 = 0;
              break;
            }
          case 2:
            goto label_8;
          default:
            num3 = _param1.EM3(this.UGo[this.KRC]) ? 1 : 0;
            break;
        }
        flag = num3 != 0;
        num2 = Ge.DcP() ? 2 : 1;
      }
label_8:
      if (!flag)
        return false;
      ++this.KRC;
      return true;
    }

    internal static bool DcP() => Ge.yc4 == null;

    internal static Ge vcq() => Ge.yc4;

    internal static byte bcu(byte _param0) => Ge.QGS(_param0);

    public sealed class Ebq
    {
      private BitArray AMz;
      private bool c1T;
      private static Ge.Ebq WDT;

      public Ebq(BitArray _param1)
      {
        Jnb.vbPcO4();
        // ISSUE: explicit constructor call
        this.\u002Ector(_param1, false);
      }

      public Ebq(BitArray _param1, bool _param2)
      {
        Jnb.vbPcO4();
        // ISSUE: explicit constructor call
        base.\u002Ector();
        this.AMz = new BitArray(_param1);
        this.c1T = _param2;
      }

      public Ebq(Ge.Ebq.Ybd[] _param1, byte[] _param2)
      {
        Jnb.vbPcO4();
        // ISSUE: explicit constructor call
        this.\u002Ector(_param1, _param2, false);
      }

      public Ebq(Ge.Ebq.Ybd[] _param1, byte[] _param2, bool _param3)
      {
        Ge.Ebq.cDe();
        // ISSUE: explicit constructor call
        base.\u002Ector();
        int num1 = 0;
        if (_param1 != null)
          goto label_17;
label_3:
        if (_param2 == null)
          goto label_20;
        else
          goto label_9;
label_1:
        int num2;
        int num3 = num2;
label_2:
        Ge.Ebq.Ybd[] ybdArray1;
        int num4;
        while (true)
        {
          int index;
          int j1U;
          Ge.Ebq.Ybd ybd;
          switch (num3)
          {
            case 0:
              goto label_34;
            case 1:
              goto label_26;
            case 2:
              num1 = num4;
              num3 = 10;
              continue;
            case 3:
              index = 0;
              break;
            case 4:
              goto label_32;
            case 5:
              ++index;
              break;
            case 6:
              goto label_20;
            case 7:
              goto label_5;
            case 8:
              goto label_27;
            case 9:
              for (; j1U <= (int) ybd.m1f; ++j1U)
                this.AMz[j1U] = true;
              num3 = 5;
              continue;
            case 10:
              goto label_25;
            default:
              goto label_30;
          }
          if (index < ybdArray1.Length)
          {
            ybd = ybdArray1[index];
            j1U = (int) ybd.J1U;
            num3 = 9;
          }
          else if (true)
            num3 = 1;
          else
            goto label_1;
        }
label_34:
        return;
label_30:
        return;
label_32:
        int index1;
        ++index1;
        goto label_19;
label_5:
        int index2;
        byte[] numArray1;
        if (index2 >= numArray1.Length)
        {
          num3 = 6;
          goto label_2;
        }
        else
        {
          num4 = (int) numArray1[index2];
          if (num4 > num1)
          {
            num3 = 2;
            goto label_2;
          }
          else
            goto label_25;
        }
label_9:
        numArray1 = _param2;
        index2 = 0;
        goto label_5;
label_18:
        this.c1T = _param3;
        num3 = 0;
        if (true)
          goto label_2;
        else
          goto label_1;
label_19:
        byte[] numArray2;
        if (index1 < numArray2.Length)
        {
          this.AMz[(int) numArray2[index1]] = true;
          num3 = 4;
          goto label_2;
        }
        else
          goto label_18;
label_20:
        this.AMz = new BitArray(num1 + 1, false);
        if (_param1 != null)
        {
          ybdArray1 = _param1;
          if (true)
          {
            num3 = 3;
            goto label_2;
          }
          else
            goto label_1;
        }
        else
          goto label_26;
label_25:
        ++index2;
        num3 = 7;
        goto label_2;
label_26:
        if (_param2 != null)
        {
          numArray2 = _param2;
          index1 = 0;
          goto label_19;
        }
        else
          goto label_18;
label_17:
        Ge.Ebq.Ybd[] ybdArray2 = _param1;
        int index3 = 0;
        goto label_33;
label_27:
        Ge.Ebq.Ybd ybd1 = ybdArray2[index3];
        if ((int) ybd1.m1f > num1)
          num1 = (int) ybd1.m1f;
        ++index3;
label_33:
        if (index3 < ybdArray2.Length)
          goto label_27;
        else
          goto label_3;
      }

      public bool EM3(byte _param1)
      {
        bool flag = (int) _param1 < Ge.Ebq.FDn((object) this.AMz) && this.AMz[(int) _param1];
        bool c1T = this.c1T;
        int num1 = 0;
        if (Ge.Ebq.NDY() == null)
          goto label_4;
label_1:
        while (true)
        {
          switch (num1)
          {
            case 1:
              goto label_2;
            default:
              if (c1T)
              {
                int num2;
                num1 = Ge.Ebq.NDY() == null ? 1 : num2;
                continue;
              }
              goto label_3;
          }
        }
label_2:
        return !flag;
label_3:
        return flag;
label_4:
        num1 = 0;
        goto label_1;
      }

      internal static bool CDf() => Ge.Ebq.WDT == null;

      internal static Ge.Ebq NDY() => Ge.Ebq.WDT;

      internal static void cDe() => Jnb.vbPcO4();

      internal static int FDn([In] object obj0) => ((BitArray) obj0).Length;

      public struct Ybd
      {
        public byte J1U;
        public byte m1f;
        private static object QDI;

        public Ybd(byte _param1, byte _param2)
        {
          Jnb.vbPcO4();
          this.J1U = _param1;
          this.m1f = _param2;
        }

        internal static bool jDo() => Ge.Ebq.Ybd.QDI == null;

        internal static object HDp() => Ge.Ebq.Ybd.QDI;
      }
    }
  }
}
