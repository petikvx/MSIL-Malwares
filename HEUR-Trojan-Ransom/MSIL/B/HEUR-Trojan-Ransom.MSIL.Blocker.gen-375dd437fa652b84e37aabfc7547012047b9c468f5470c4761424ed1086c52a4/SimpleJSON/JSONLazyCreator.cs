// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONLazyCreator
// Assembly: StreamWriterBufferedDataLo, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 2A001E45-B149-45C2-9BBE-A5BA299DBD32
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-375dd437fa652b84e37aabfc7547012047b9c468f5470c4761424ed1086c52a4.exe

namespace SimpleJSON
{
  internal class JSONLazyCreator : JSONNode
  {
    private JSONNode m_Node = (JSONNode) null;
    private string m_Key = (string) null;

    public JSONLazyCreator(JSONNode aNode)
    {
label_1:
      int num1 = -878627224;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1442070577)) % 5U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * -102125359 ^ 2113170213;
            continue;
          case 2:
            this.m_Key = (string) null;
            num1 = (int) num2 * 201215073 ^ 2117400382;
            continue;
          case 3:
            goto label_1;
          case 4:
            this.m_Node = aNode;
            num1 = (int) num2 * -1549289098 ^ 1665610857;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public JSONLazyCreator(JSONNode aNode, string aKey)
    {
label_1:
      int num1 = -1831121148;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -547080441)) % 5U)
        {
          case 0:
            this.m_Key = aKey;
            num1 = (int) num2 * 354339141 ^ -896489534;
            continue;
          case 1:
            num1 = (int) num2 * -1515139108 ^ -1388169253;
            continue;
          case 2:
            goto label_1;
          case 3:
            this.m_Node = aNode;
            num1 = (int) num2 * 1273589691 ^ 747804457;
            continue;
          case 4:
            goto label_3;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    private void Set(JSONNode aVal)
    {
      bool flag = this.m_Key == null;
label_1:
      int num1 = 1516156591;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1493589557)) % 10U)
        {
          case 1:
            num1 = (int) num2 * 1080361609 ^ 34217511;
            continue;
          case 2:
            int num3 = flag ? -847984849 : (num3 = -441596622);
            num1 = num3 ^ (int) num2 * 15998727;
            continue;
          case 3:
            this.m_Node.Add(this.m_Key, aVal);
            num1 = (int) num2 * -1303749172 ^ 138451636;
            continue;
          case 4:
            this.m_Node.Add(aVal);
            num1 = (int) num2 * 2040461860 ^ 2065792842;
            continue;
          case 5:
            num1 = (int) num2 * 578034447 ^ -968107504;
            continue;
          case 6:
            goto label_1;
          case 7:
            num1 = (int) num2 * 1983786443 ^ -238437062;
            continue;
          case 8:
            num1 = (int) num2 * -1494730489 ^ -1747793713;
            continue;
          case 9:
            num1 = 657307234;
            continue;
          default:
            goto label_11;
        }
      }
label_11:
      this.m_Node = (JSONNode) null;
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
label_1:
        int num1 = 277617335;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1290637574)) % 3U)
          {
            case 1:
              num1 = (int) num2 * 1257202934 ^ 988201437;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = -1928279029;
        JSONArray aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -359045106)) % 7U)
          {
            case 0:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 76923085 ^ 1280999729;
              continue;
            case 1:
              aVal.Add(value);
              num1 = (int) num2 * -1757345244 ^ -2029652390;
              continue;
            case 2:
              aVal = new JSONArray();
              num1 = (int) num2 * 343804155 ^ 1042387508;
              continue;
            case 3:
              goto label_1;
            case 4:
              num1 = (int) num2 * -1367445008 ^ -642057340;
              continue;
            case 5:
              goto label_3;
            case 6:
              num1 = (int) num2 * 1500392329 ^ -291704087;
              continue;
            default:
              goto label_9;
          }
        }
label_3:
        return;
label_9:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -254412929;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2006052562)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = (int) num2 * 766005543 ^ -385818010;
              continue;
            case 3:
              num1 = (int) num2 * 1698951183 ^ -2082844227;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
        JSONClass aVal = new JSONClass();
        aVal.Add(aKey, value);
label_1:
        int num1 = 1236999943;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1709811438)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 49184978 ^ 456401349;
              continue;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 710276313 ^ 775557343;
              continue;
            case 2:
              goto label_1;
            case 3:
              goto label_3;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override void Add(JSONNode aItem)
    {
label_1:
      int num1 = 1961986003;
      JSONArray aVal;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 688274189)) % 4U)
        {
          case 1:
            num1 = (int) num2 * -1074062077 ^ -723318174;
            continue;
          case 2:
            aVal = new JSONArray();
            aVal.Add(aItem);
            num1 = (int) num2 * 1270276158 ^ -470942972;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      this.Set((JSONNode) aVal);
    }

    public override void Add(string aKey, JSONNode aItem)
    {
      JSONClass aVal = new JSONClass();
      aVal.Add(aKey, aItem);
label_1:
      int num1 = -1746810281;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1877304006)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * 59925151 ^ -1378738510;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public static bool operator ==(JSONLazyCreator a, object b)
    {
      bool flag1 = b == null;
label_1:
      int num1 = -218484300;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1397568802)) % 7U)
        {
          case 1:
            num1 = (int) num2 * -1219825628 ^ -23563105;
            continue;
          case 2:
            flag2 = (object) a == b;
            num1 = -2004086398;
            continue;
          case 3:
            flag2 = true;
            num1 = (int) num2 * -1901154001 ^ 947859794;
            continue;
          case 4:
            int num3 = !flag1 ? -1200666673 : (num3 = -893135845);
            num1 = num3 ^ (int) num2 * 257874186;
            continue;
          case 5:
            num1 = (int) num2 * 606971747 ^ 1598895366;
            continue;
          case 6:
            goto label_1;
          default:
            goto label_8;
        }
      }
label_8:
      return flag2;
    }

    public static bool operator !=(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = 1176055939;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1798983114)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -707251269 ^ -971983239;
            continue;
          case 1:
            flag = !(a == b);
            num1 = (int) num2 * 1094708448 ^ -1940756018;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = 1428577044;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 902237909)) % 7U)
        {
          case 0:
            flag2 = (object) this == obj;
            num1 = 1829742645;
            continue;
          case 1:
            flag1 = obj == null;
            num1 = (int) num2 * -1641531508 ^ -1283719518;
            continue;
          case 2:
            goto label_1;
          case 3:
            flag2 = true;
            num1 = (int) num2 * -1256510134 ^ -1744913867;
            continue;
          case 5:
            int num3 = !flag1 ? -947248377 : (num3 = -1071999942);
            num1 = num3 ^ (int) num2 * -439692323;
            continue;
          case 6:
            num1 = (int) num2 * -1991855297 ^ -1946455147;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      return flag2;
    }

    public override int GetHashCode()
    {
label_1:
      int num1 = 1707766600;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1276826530)) % 3U)
        {
          case 1:
            hashCode = base.GetHashCode();
            num1 = (int) num2 * 2063859622 ^ 2023415963;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return hashCode;
    }

    public override string ToString() => "";

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = -1902100714;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1911887435)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            str = "";
            num1 = (int) num2 * -694373093 ^ 149850366;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override int AsInt
    {
      get
      {
        this.Set((JSONNode) new JSONData(0));
label_1:
        int num1 = 724365867;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1103336040)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 881359272 ^ -1696119038;
              continue;
            case 3:
              asInt = 0;
              num1 = (int) num2 * -745620544 ^ -1889915295;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asInt;
      }
      set
      {
label_1:
        int num1 = -2079562330;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -445549761)) % 5U)
          {
            case 0:
              goto label_3;
            case 1:
              num1 = (int) num2 * 1692433394 ^ -297080745;
              continue;
            case 2:
              aVal = new JSONData(value);
              num1 = (int) num2 * -651818301 ^ -146279482;
              continue;
            case 3:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -331607645 ^ 1230290893;
              continue;
            case 4:
              goto label_1;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
    }

    public override float AsFloat
    {
      get
      {
label_1:
        int num1 = -2110991842;
        float asFloat;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -438236089)) % 6U)
          {
            case 0:
              asFloat = 0.0f;
              num1 = (int) num2 * 1770960394 ^ 598064895;
              continue;
            case 1:
              aVal = new JSONData(0.0f);
              num1 = (int) num2 * 1128888363 ^ 1193030345;
              continue;
            case 3:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -2053170961 ^ -1476794112;
              continue;
            case 4:
              num1 = (int) num2 * 2015158857 ^ -1045679;
              continue;
            case 5:
              goto label_1;
            default:
              goto label_7;
          }
        }
label_7:
        return asFloat;
      }
      set
      {
        JSONData aVal = new JSONData(value);
label_1:
        int num1 = 2115791353;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 367959756)) % 4U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -306542277 ^ -433965484;
              continue;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * 189967638 ^ -1569753558;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override double AsDouble
    {
      get
      {
        this.Set((JSONNode) new JSONData(0.0));
        double asDouble = 0.0;
label_1:
        int num1 = 559938904;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 336532083)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 599718988 ^ -1755269724;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asDouble;
      }
      set => this.Set((JSONNode) new JSONData(value));
    }

    public override bool AsBool
    {
      get
      {
label_1:
        int num1 = 1831755921;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1474096352)) % 5U)
          {
            case 1:
              num1 = (int) num2 * -1181367017 ^ 832701873;
              continue;
            case 2:
              goto label_1;
            case 3:
              this.Set((JSONNode) new JSONData(false));
              num1 = (int) num2 * -1486594585 ^ -1606618409;
              continue;
            case 4:
              asBool = false;
              num1 = (int) num2 * 926223030 ^ 1564352046;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asBool;
      }
      set
      {
        JSONData aVal = new JSONData(value);
label_1:
        int num1 = -233098534;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -255507240)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 220681785 ^ -331992506;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = 1790654103;
        JSONArray aVal;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1360407860)) % 6U)
          {
            case 0:
              num1 = (int) num2 * -1103972389 ^ 181766129;
              continue;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -15009285 ^ -39807231;
              continue;
            case 3:
              asArray = aVal;
              num1 = (int) num2 * -1090955426 ^ 1634010946;
              continue;
            case 4:
              goto label_1;
            case 5:
              aVal = new JSONArray();
              num1 = (int) num2 * -262714207 ^ 1336190742;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asArray;
      }
    }

    public override JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = 1458618980;
        JSONClass aVal;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1519371535)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              asObject = aVal;
              num1 = (int) num2 * -1433219983 ^ -1381219476;
              continue;
            case 3:
              aVal = new JSONClass();
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1272336798 ^ 778025931;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asObject;
      }
    }
  }
}
