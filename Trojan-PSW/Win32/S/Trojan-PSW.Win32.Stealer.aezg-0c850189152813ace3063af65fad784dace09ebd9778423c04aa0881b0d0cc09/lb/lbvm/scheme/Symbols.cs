// Decompiled with JetBrains decompiler
// Type: org.lb.lbvm.scheme.Symbols
// Assembly: GCCollectionMo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 3A5CAC9E-800C-431E-83D8-5129C6781923
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\Trojan-PSW.Win32.Stealer.aezg-0c850189152813ace3063af65fad784dace09ebd9778423c04aa0881b0d0cc09.exe

using org.lb.lbvm.runtime;

namespace org.lb.lbvm.scheme
{
  internal static class Symbols
  {
    internal static readonly Symbol IfSymbol = Symbol.fromString("if");
    internal static readonly Symbol DefineSymbol = Symbol.fromString("define");
    internal static readonly Symbol LambdaSymbol = Symbol.fromString("lambda");
    internal static readonly Symbol QuoteSymbol = Symbol.fromString("quote");
    internal static readonly Symbol BeginSymbol = Symbol.fromString("begin");
    internal static readonly Symbol CondSymbol = Symbol.fromString("cond");
    internal static readonly Symbol SetSymbol = Symbol.fromString("set!");
    internal static readonly Symbol ElseSymbol = Symbol.fromString("else");
    internal static readonly Symbol NilSymbol = Symbol.fromString("nil");
    private static readonly string[] specialFormSymbols = new string[7]
    {
      "if",
      "define",
      "lambda",
      "quote",
      "begin",
      "cond",
      "set!"
    };
    private static readonly FunctionDefinition[] functions = new FunctionDefinition[51]
    {
      new FunctionDefinition(1, "pair?", "ISPAIR"),
      new FunctionDefinition(1, "car", "PAIR1"),
      new FunctionDefinition(1, "cdr", "PAIR2"),
      new FunctionDefinition(1, "display", "PRINT"),
      new FunctionDefinition(1, "random", "RANDOM"),
      new FunctionDefinition(1, "number?", "ISNUMBER"),
      new FunctionDefinition(1, "string?", "ISSTRING"),
      new FunctionDefinition(1, "string-length", "STRLEN"),
      new FunctionDefinition(1, "char?", "ISCHAR"),
      new FunctionDefinition(1, "char->integer", "CHRTOINT"),
      new FunctionDefinition(1, "integer->char", "INTTOCHR"),
      new FunctionDefinition(1, "sys:make-string", "MAKESTR"),
      new FunctionDefinition(1, "string->symbol", "STRTOSYM"),
      new FunctionDefinition(1, "symbol->string", "SYMTOSTR"),
      new FunctionDefinition(1, "null?", "ISNULL"),
      new FunctionDefinition(1, "sys:error", "THROW"),
      new FunctionDefinition(1, "boolean?", "ISBOOL"),
      new FunctionDefinition(1, "symbol?", "ISSYMBOL"),
      new FunctionDefinition(1, "integer?", "ISINT"),
      new FunctionDefinition(1, "real?", "ISFLOAT"),
      new FunctionDefinition(2, "=", "NUMEQUAL"),
      new FunctionDefinition(2, "+", "ADD"),
      new FunctionDefinition(2, "-", "SUB"),
      new FunctionDefinition(2, "*", "MUL"),
      new FunctionDefinition(2, "/", "DIV"),
      new FunctionDefinition(2, "sys:imod", "IMOD"),
      new FunctionDefinition(2, "quotient", "IDIV"),
      new FunctionDefinition(2, "<", "NUMLT"),
      new FunctionDefinition(2, "<=", "NUMLE"),
      new FunctionDefinition(2, ">", "NUMGT"),
      new FunctionDefinition(2, ">=", "NUMGE"),
      new FunctionDefinition(2, "cons", "MAKEPAIR"),
      new FunctionDefinition(2, "eq?", "OBJEQUAL"),
      new FunctionDefinition(2, "string=?", "STREQUAL"),
      new FunctionDefinition(2, "string-ci=?", "STREQUALCI"),
      new FunctionDefinition(2, "string<?", "STRLT"),
      new FunctionDefinition(2, "string-ci<?", "STRLTCI"),
      new FunctionDefinition(2, "string>?", "STRGT"),
      new FunctionDefinition(2, "string-ci>?", "STRGTCI"),
      new FunctionDefinition(2, "string-append", "STRAPPEND"),
      new FunctionDefinition(2, "char=?", "CHREQUAL"),
      new FunctionDefinition(2, "char-ci=?", "CHREQUALCI"),
      new FunctionDefinition(2, "char<?", "CHRLT"),
      new FunctionDefinition(2, "char-ci<?", "CHRLTCI"),
      new FunctionDefinition(2, "char>?", "CHRGT"),
      new FunctionDefinition(2, "char-ci>?", "CHRGTCI"),
      new FunctionDefinition(2, "string-ref", "STRREF"),
      new FunctionDefinition(2, "sys:strtonum", "STRTONUM"),
      new FunctionDefinition(2, "sys:numtostr", "NUMTOSTR"),
      new FunctionDefinition(3, "substring", "SUBSTR"),
      new FunctionDefinition(3, "string-set!", "SETSTRREF")
    };

    internal static FunctionDefinition GetFunction(string name) => (FunctionDefinition) null;

    internal static bool IsSpecialFormSymbol(string symbol) => true;

    internal static bool IsOptimizedFunctionSymbol(object symbol)
    {
      if (!(symbol is Symbol))
        return false;
      string name = symbol.ToString();
      return name == "else" || name == "nil" || Symbols.GetFunction(name) != null;
    }
  }
}
