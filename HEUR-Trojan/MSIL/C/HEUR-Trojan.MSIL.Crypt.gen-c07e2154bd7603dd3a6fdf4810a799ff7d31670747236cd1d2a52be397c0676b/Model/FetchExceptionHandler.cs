// Decompiled with JetBrains decompiler
// Type: Cradiator.Model.FetchExceptionHandler
// Assembly: FileOptio, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 0135208B-21B4-457A-BFCD-FFD93FD8BA14
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan.MSIL.Crypt.gen-c07e2154bd7603dd3a6fdf4810a799ff7d31670747236cd1d2a52be397c0676b.exe

using Cradiator.Views;
using log4net;
using System;

namespace Cradiator.Model
{
  public class FetchExceptionHandler
  {
    private static readonly ILog _log = LogManager.GetLogger(typeof (FetchExceptionHandler).Name);
    private readonly ICradiatorView _view;

    public FetchExceptionHandler(ICradiatorView view) => this._view = view;

    public void Handle(Exception fetchException)
    {
      FetchExceptionHandler._log.Error((object) fetchException.Message, fetchException);
      this._view.DataContext = (object) null;
      try
      {
        this._view.Invoke((Action) (() => this._view.ShowMessage("Connection problem")));
      }
      catch (Exception ex)
      {
        FetchExceptionHandler._log.Error((object) ex.Message, ex);
      }
    }
  }
}
