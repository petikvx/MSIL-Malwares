// Decompiled with JetBrains decompiler
// Type: PreEmptive.Analytics.NET.PAClient
// Assembly: EncoderCSL, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8BC70EB6-E222-4E38-9ED5-32744A85C676
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-Ransom.MSIL.Tear.gen-1cd3fa0de4807e268dc8a396dc670ba38d6729e7df613b33b046970a22ff6a2a.exe

using PreEmptive.Analytics.Common;
using System;
using System.Runtime.InteropServices;

namespace PreEmptive.Analytics.NET
{
  public class PAClient : PlatformClient
  {
    protected override IPlatform GetNewPlatform()
    {
      int num1 = 1;
      if (num1 == 0)
        ;
      num1 = 445;
      int num2 = num1;
      num1 = 445;
      int num3 = num1;
      switch (num2 == num3)
      {
        case true:
          num1 = 0;
          if (num1 == 0)
            ;
          return (IPlatform) new Platform(this.StartupConfiguration, this.Logger);
        default:
          goto case 1;
      }
    }

    public PAClient(Guid companyID, Guid applicationID, [Optional] ILogger logger)
      : base(companyID, applicationID, logger)
    {
    }

    public PAClient(string companyID, string applicationID, [Optional] ILogger logger)
      : base(companyID, applicationID, logger)
    {
    }

    public PAClient(Configuration config, [Optional] ILogger logger)
      : base(config, logger)
    {
    }
  }
}
