// Decompiled with JetBrains decompiler
// Type: r2D.Kd3
// Assembly: k3F4, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: EF2862A8-7088-4F2B-ADD5-AFDC446098D9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-ee71029a7b3d9d85e7a6c7c0ecc35d93ee37514713ba5033d491a0d7506e947b.exe

using m5F8;
using Microsoft.VisualBasic.CompilerServices;
using s4J;
using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data.Linq;
using System.Drawing;
using System.Drawing.Printing;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;
using System.Resources;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Text;
using System.Windows.Forms;
using System.Windows.Forms.Automation;
using x7X;
using z0R5;

namespace r2D
{
  [DesignerGenerated]
  public class Kd3 : Form
  {
    [AccessedThroughProperty("Ⴗ")]
    private MaskedTextBox ႣႳ;
    [AccessedThroughProperty("Ⴈ")]
    private Label ႣႤ;
    [AccessedThroughProperty("Ⴃ")]
    private Label ႣႨ;
    [AccessedThroughProperty("Ⴅ")]
    private Label ႣႰ;
    [AccessedThroughProperty("Ⴄ")]
    private Button ႣႼ;
    [AccessedThroughProperty("ႷႰ")]
    private ComboBox ႭႣ;
    [AccessedThroughProperty("ႷႳ")]
    private Button ႭႭ;
    [AccessedThroughProperty("ႷႨ")]
    private Button ႭႤ;
    [AccessedThroughProperty("ႷႭ")]
    private TextBox ႭႷ;
    [AccessedThroughProperty("ႷႣ")]
    private GroupBox ႭႨ;
    [AccessedThroughProperty("ႳႳ")]
    private Label ႤႭ;
    [AccessedThroughProperty("ႳႨ")]
    private Label ႤႤ;
    [AccessedThroughProperty("ႳႭ")]
    private Label ႤႷ;
    [AccessedThroughProperty("ႳႤ")]
    private Label ႤႼ;
    [AccessedThroughProperty("ႳႼ")]
    private Label ႠႥ;
    [AccessedThroughProperty("ႨႨ")]
    private PrintPreviewDialog ႠႤ;
    [AccessedThroughProperty("ႨႠ")]
    private Label ႠႠ;
    [AccessedThroughProperty("ႨႭ")]
    private MaskedTextBox ႠႷ;
    public string ႠႨ;
    private Ca9.q0T.Xj9 Ⴄ;

    public Kd3()
    {
      this.Shown += new EventHandler(this.n8Z);
      this.Ba2();
    }

    protected virtual void f4K([In] bool obj0)
    {
      try
      {
        if (!obj0 || this.Ⴄ.Ⴄ == null)
          return;
        this.Ⴄ.Ⴄ.Dispose();
      }
      finally
      {
        this.Dispose(obj0);
      }
    }

    private void Ba2()
    {
      object obj = (object) new ComponentResourceManager(typeof (Kd3));
      this.Ⴐ = new MaskedTextBox();
      this.Ⴗ = new MaskedTextBox();
      this.Ⴓ = new MaskedTextBox();
      this.Ⴈ = new Label();
      this.Ⴀ = new Label();
      this.Ⴍ = new ComboBox();
      this.Ⴃ = new Label();
      this.Ⴅ = new Label();
      this.Ⴄ = new Button();
      this.Ⴜ = new Label();
      this.ႷႰ = new ComboBox();
      this.ႷႷ = new Label();
      this.ႷႳ = new Button();
      this.ႷႨ = new Button();
      this.ႷႠ = new TextBox();
      this.ႷႭ = new TextBox();
      this.ႷႣ = new GroupBox();
      this.ႷႥ = new RadioButton();
      this.ႷႤ = new RadioButton();
      this.ႷႼ = new DateTimePicker();
      this.ႳႰ = new Label();
      this.ႳႷ = new Label();
      this.ႳႳ = new Label();
      this.ႳႨ = new Label();
      this.ႳႠ = new Label();
      this.ႳႭ = new Label();
      this.ႳႣ = new Label();
      this.ႳႥ = new Label();
      this.ႳႤ = new Label();
      this.ႳႼ = new Label();
      this.ႨႰ = new Label();
      this.ႨႷ = new Button();
      this.ႨႳ = new PrintDocument();
      this.ႨႨ = new PrintPreviewDialog();
      this.ႨႠ = new Label();
      this.ႨႭ = new MaskedTextBox();
      this.ႷႣ.SuspendLayout();
      this.SuspendLayout();
      this.Ⴐ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴐ.Location = new Point(241, 324);
      this.Ⴐ.Mask = "00000000009";
      this.Ⴐ.Name = "txtPhone";
      this.Ⴐ.Size = new Size(328, 26);
      this.Ⴐ.TabIndex = 6;
      this.Ⴗ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴗ.Location = new Point(241, 202);
      this.Ⴗ.Mask = "000000-00-0000";
      this.Ⴗ.Name = "txtIC";
      this.Ⴗ.Size = new Size(328, 26);
      this.Ⴗ.TabIndex = 3;
      this.Ⴓ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴓ.Location = new Point(241, 163);
      this.Ⴓ.Mask = "LLLLLLLLLLLLLLLLLL";
      this.Ⴓ.Name = "txtName";
      this.Ⴓ.Size = new Size(328, 26);
      this.Ⴓ.TabIndex = 2;
      this.Ⴈ.AutoSize = true;
      this.Ⴈ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴈ.ForeColor = SystemColors.Desktop;
      this.Ⴈ.Location = new Point(382, 453);
      this.Ⴈ.Name = "lblhourpay";
      this.Ⴈ.Size = new Size(104, 20);
      this.Ⴈ.TabIndex = 133;
      this.Ⴈ.Text = "Hourly Pay :";
      this.Ⴀ.AutoSize = true;
      this.Ⴀ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴀ.ForeColor = SystemColors.InactiveCaption;
      this.Ⴀ.Location = new Point(354, 450);
      this.Ⴀ.Name = "lblextra";
      this.Ⴀ.Size = new Size(0, 20);
      this.Ⴀ.TabIndex = 132;
      this.Ⴍ.DropDownStyle = ComboBoxStyle.DropDownList;
      this.Ⴍ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴍ.FormattingEnabled = true;
      this.Ⴍ.Items.AddRange(new object[6]
      {
        (object) "5",
        (object) "4",
        (object) "3",
        (object) "2",
        (object) "1",
        (object) "0"
      });
      this.Ⴍ.Location = new Point(241, 450);
      this.Ⴍ.Name = "cboLeave";
      this.Ⴍ.Size = new Size(88, 28);
      this.Ⴍ.TabIndex = 9;
      this.Ⴃ.AutoSize = true;
      this.Ⴃ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴃ.Location = new Point(77, 450);
      this.Ⴃ.Name = "Label11";
      this.Ⴃ.Size = new Size(143, 20);
      this.Ⴃ.TabIndex = 130;
      this.Ⴃ.Text = "LeaveApplyLeft :";
      this.Ⴅ.BorderStyle = BorderStyle.FixedSingle;
      this.Ⴅ.ForeColor = SystemColors.InactiveCaption;
      this.Ⴅ.Location = new Point(551, 21);
      this.Ⴅ.Name = "lblIndex";
      this.Ⴅ.Size = new Size(101, 32);
      this.Ⴅ.TabIndex = 129;
      this.Ⴄ.BackColor = Color.IndianRed;
      this.Ⴄ.Cursor = Cursors.Hand;
      this.Ⴄ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴄ.ForeColor = SystemColors.ControlLightLight;
      this.Ⴄ.Location = new Point(350, 537);
      this.Ⴄ.Name = "btnDelete";
      this.Ⴄ.Size = new Size(102, 52);
      this.Ⴄ.TabIndex = 12;
      this.Ⴄ.Text = "&Delete";
      this.Ⴄ.UseVisualStyleBackColor = false;
      this.Ⴜ.Font = new Font("Microsoft Sans Serif", 16f, FontStyle.Bold | FontStyle.Underline, GraphicsUnit.Point, (byte) 0);
      this.Ⴜ.Location = new Point(70, 21);
      this.Ⴜ.Name = "Label9";
      this.Ⴜ.Size = new Size(474, 49);
      this.Ⴜ.TabIndex = (int) sbyte.MaxValue;
      this.Ⴜ.Text = "Update HR Staff Details";
      this.ႷႰ.DropDownStyle = ComboBoxStyle.DropDownList;
      this.ႷႰ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႷႰ.FormattingEnabled = true;
      this.ႷႰ.Items.AddRange(new object[4]
      {
        (object) "IT Dept.",
        (object) "HR Dept.",
        (object) "Accounting Dept.",
        (object) "Marketing Dept."
      });
      this.ႷႰ.Location = new Point(241, 117);
      this.ႷႰ.Name = "cboDepart";
      this.ႷႰ.Size = new Size(328, 28);
      this.ႷႰ.TabIndex = 1;
      this.ႷႷ.AutoSize = true;
      this.ႷႷ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႷႷ.Location = new Point(77, 117);
      this.ႷႷ.Name = "Label8";
      this.ႷႷ.Size = new Size(114, 20);
      this.ႷႷ.TabIndex = 125;
      this.ႷႷ.Text = "Department :";
      this.ႷႳ.BackColor = Color.Goldenrod;
      this.ႷႳ.Cursor = Cursors.Hand;
      this.ႷႳ.DialogResult = DialogResult.Cancel;
      this.ႷႳ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႷႳ.ForeColor = SystemColors.ControlLightLight;
      this.ႷႳ.Location = new Point(459, 537);
      this.ႷႳ.Name = "btnCancel";
      this.ႷႳ.Size = new Size(97, 53);
      this.ႷႳ.TabIndex = 13;
      this.ႷႳ.Text = "&Cancel";
      this.ႷႳ.UseVisualStyleBackColor = false;
      this.ႷႨ.BackColor = Color.MediumSeaGreen;
      this.ႷႨ.Cursor = Cursors.Hand;
      this.ႷႨ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႷႨ.ForeColor = SystemColors.ControlLightLight;
      this.ႷႨ.Location = new Point(241, 537);
      this.ႷႨ.Name = "btnUpdate";
      this.ႷႨ.Size = new Size(104, 52);
      this.ႷႨ.TabIndex = 11;
      this.ႷႨ.Text = "&Update";
      this.ႷႨ.UseVisualStyleBackColor = false;
      this.ႷႠ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႷႠ.Location = new Point(241, 408);
      this.ႷႠ.Name = "txtAddress";
      this.ႷႠ.Size = new Size(328, 26);
      this.ႷႠ.TabIndex = 8;
      this.ႷႭ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႷႭ.Location = new Point(241, 366);
      this.ႷႭ.Name = "txtEmail";
      this.ႷႭ.Size = new Size(328, 26);
      this.ႷႭ.TabIndex = 7;
      this.ႷႣ.Controls.Add((Control) this.ႷႥ);
      this.ႷႣ.Controls.Add((Control) this.ႷႤ);
      this.ႷႣ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႷႣ.Location = new Point(241, 282);
      this.ႷႣ.Name = "GroupBox1";
      this.ႷႣ.Size = new Size(328, 36);
      this.ႷႣ.TabIndex = 5;
      this.ႷႣ.TabStop = false;
      this.ႷႥ.AutoSize = true;
      this.ႷႥ.Location = new Point(109, 6);
      this.ႷႥ.Name = "radFemale";
      this.ႷႥ.Size = new Size(93, 24);
      this.ႷႥ.TabIndex = 18;
      this.ႷႥ.TabStop = true;
      this.ႷႥ.Text = "Female";
      this.ႷႥ.UseVisualStyleBackColor = true;
      this.ႷႤ.AutoSize = true;
      this.ႷႤ.Checked = true;
      this.ႷႤ.Location = new Point(0, 6);
      this.ႷႤ.Name = "radMale";
      this.ႷႤ.Size = new Size(72, 24);
      this.ႷႤ.TabIndex = 0;
      this.ႷႤ.TabStop = true;
      this.ႷႤ.Text = "Male";
      this.ႷႤ.UseVisualStyleBackColor = true;
      this.ႷႼ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႷႼ.Location = new Point(241, 242);
      this.ႷႼ.Name = "DateDOB";
      this.ႷႼ.Size = new Size(328, 26);
      this.ႷႼ.TabIndex = 4;
      this.ႳႰ.BorderStyle = BorderStyle.FixedSingle;
      this.ႳႰ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႳႰ.Location = new Point(241, 72);
      this.ႳႰ.Name = "lblStaffID";
      this.ႳႰ.Size = new Size(328, 33);
      this.ႳႰ.TabIndex = 118;
      this.ႳႷ.AutoSize = true;
      this.ႳႷ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႳႷ.Location = new Point(77, 85);
      this.ႳႷ.Name = "Label10";
      this.ႳႷ.Size = new Size(83, 20);
      this.ႳႷ.TabIndex = 117;
      this.ႳႷ.Text = "StaffID : ";
      this.ႳႳ.AutoSize = true;
      this.ႳႳ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႳႳ.Location = new Point(77, 242);
      this.ႳႳ.Name = "Label3";
      this.ႳႳ.Size = new Size(125, 20);
      this.ႳႳ.TabIndex = 112;
      this.ႳႳ.Text = "Date Of Birth :";
      this.ႳႨ.AutoSize = true;
      this.ႳႨ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႳႨ.Location = new Point(77, 163);
      this.ႳႨ.Name = "Label1";
      this.ႳႨ.Size = new Size(70, 20);
      this.ႳႨ.TabIndex = 110;
      this.ႳႨ.Text = "Name : ";
      this.ႳႠ.AutoSize = true;
      this.ႳႠ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႳႠ.Location = new Point(77, 366);
      this.ႳႠ.Name = "Label7";
      this.ႳႠ.Size = new Size(68, 20);
      this.ႳႠ.TabIndex = 116;
      this.ႳႠ.Text = "Email : ";
      this.ႳႭ.AutoSize = true;
      this.ႳႭ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႳႭ.Location = new Point(77, 408);
      this.ႳႭ.Name = "Label6";
      this.ႳႭ.Size = new Size(90, 20);
      this.ႳႭ.TabIndex = 115;
      this.ႳႭ.Text = "Address : ";
      this.ႳႣ.AutoSize = true;
      this.ႳႣ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႳႣ.Location = new Point(77, 324);
      this.ႳႣ.Name = "Label5";
      this.ႳႣ.Size = new Size(97, 20);
      this.ႳႣ.TabIndex = 114;
      this.ႳႣ.Text = "Phone No :";
      this.ႳႥ.AutoSize = true;
      this.ႳႥ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႳႥ.Location = new Point(77, 282);
      this.ႳႥ.Name = "Label4";
      this.ႳႥ.Size = new Size(84, 20);
      this.ႳႥ.TabIndex = 113;
      this.ႳႥ.Text = "Gender : ";
      this.ႳႤ.AutoSize = true;
      this.ႳႤ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႳႤ.Location = new Point(77, 202);
      this.ႳႤ.Name = "Label2";
      this.ႳႤ.Size = new Size(102, 20);
      this.ႳႤ.TabIndex = 111;
      this.ႳႤ.Text = "IC number :";
      this.ႳႼ.BorderStyle = BorderStyle.FixedSingle;
      this.ႳႼ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႳႼ.Location = new Point(241, 493);
      this.ႳႼ.Name = "lblJoin";
      this.ႳႼ.Size = new Size(328, 29);
      this.ႳႼ.TabIndex = 138;
      this.ႨႰ.AutoSize = true;
      this.ႨႰ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႨႰ.Location = new Point(77, 494);
      this.ႨႰ.Name = "Label12";
      this.ႨႰ.Size = new Size(116, 20);
      this.ႨႰ.TabIndex = 137;
      this.ႨႰ.Text = "Joined Date :";
      this.ႨႷ.BackColor = SystemColors.Highlight;
      this.ႨႷ.Cursor = Cursors.Hand;
      this.ႨႷ.ForeColor = SystemColors.ControlLightLight;
      this.ႨႷ.Location = new Point(562, 536);
      this.ႨႷ.Name = "btnPrint";
      this.ႨႷ.Size = new Size(102, 53);
      this.ႨႷ.TabIndex = 14;
      this.ႨႷ.Text = "&Print";
      this.ႨႷ.UseVisualStyleBackColor = false;
      this.ႨႨ.AutoScrollMargin = new Size(0, 0);
      this.ႨႨ.AutoScrollMinSize = new Size(0, 0);
      this.ႨႨ.ClientSize = new Size(400, 300);
      this.ႨႨ.Enabled = true;
      this.ႨႨ.Icon = (Icon) ((ResourceManager) obj).GetObject("dlgPreview.Icon");
      this.ႨႨ.Name = "PrintPreviewDialog1";
      this.ႨႨ.Visible = false;
      this.ႨႠ.AutoSize = true;
      this.ႨႠ.ForeColor = SystemColors.InactiveCaption;
      this.ႨႠ.Location = new Point(601, 453);
      this.ႨႠ.Name = "lblPass";
      this.ႨႠ.Size = new Size(0, 20);
      this.ႨႠ.TabIndex = 140;
      this.ႨႭ.Location = new Point(498, 453);
      this.ႨႭ.Mask = "009";
      this.ႨႭ.Name = "txtHourlyPay";
      this.ႨႭ.Size = new Size(71, 26);
      this.ႨႭ.TabIndex = 10;
      this.AutoScaleDimensions = new SizeF(10f, 20f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.BackColor = Color.LightSteelBlue;
      this.ClientSize = new Size(720, 601);
      this.Controls.Add((Control) this.ႨႭ);
      this.Controls.Add((Control) this.ႨႠ);
      this.Controls.Add((Control) this.ႨႷ);
      this.Controls.Add((Control) this.ႳႼ);
      this.Controls.Add((Control) this.ႨႰ);
      this.Controls.Add((Control) this.Ⴐ);
      this.Controls.Add((Control) this.Ⴗ);
      this.Controls.Add((Control) this.Ⴓ);
      this.Controls.Add((Control) this.Ⴈ);
      this.Controls.Add((Control) this.Ⴀ);
      this.Controls.Add((Control) this.Ⴍ);
      this.Controls.Add((Control) this.Ⴃ);
      this.Controls.Add((Control) this.Ⴅ);
      this.Controls.Add((Control) this.Ⴄ);
      this.Controls.Add((Control) this.Ⴜ);
      this.Controls.Add((Control) this.ႷႰ);
      this.Controls.Add((Control) this.ႷႷ);
      this.Controls.Add((Control) this.ႷႳ);
      this.Controls.Add((Control) this.ႷႨ);
      this.Controls.Add((Control) this.ႷႠ);
      this.Controls.Add((Control) this.ႷႭ);
      this.Controls.Add((Control) this.ႷႣ);
      this.Controls.Add((Control) this.ႷႼ);
      this.Controls.Add((Control) this.ႳႰ);
      this.Controls.Add((Control) this.ႳႷ);
      this.Controls.Add((Control) this.ႳႳ);
      this.Controls.Add((Control) this.ႳႨ);
      this.Controls.Add((Control) this.ႳႠ);
      this.Controls.Add((Control) this.ႳႭ);
      this.Controls.Add((Control) this.ႳႣ);
      this.Controls.Add((Control) this.ႳႥ);
      this.Controls.Add((Control) this.ႳႤ);
      this.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.FormBorderStyle = FormBorderStyle.FixedSingle;
      this.Name = "ႳႠ";
      this.StartPosition = FormStartPosition.CenterScreen;
      this.Text = "Update / Delete HR Staff";
      this.ႷႣ.ResumeLayout(false);
      this.ႷႣ.PerformLayout();
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual MaskedTextBox Ⴐ
    {
      get => this.Ⴄ.Ⴐ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴄ.Ⴐ = value;
    }

    internal virtual MaskedTextBox Ⴗ
    {
      get => this.ႣႳ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႣႳ = value;
    }

    internal virtual MaskedTextBox Ⴓ
    {
      get => this.Ⴄ.Ⴃ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴄ.Ⴃ = (object) value as MaskedTextBox;
    }

    internal virtual Label Ⴈ
    {
      get => this.ႣႤ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႣႤ = value;
    }

    internal virtual Label Ⴀ
    {
      get => this.Ⴄ.Ⴍ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴄ.Ⴍ = (Control) value as Label;
    }

    internal virtual ComboBox Ⴍ
    {
      get => this.Ⴄ.Ⴅ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴄ.Ⴅ = (ListControl) value as ComboBox;
    }

    internal virtual Label Ⴃ
    {
      get => this.ႣႨ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႣႨ = value;
    }

    internal virtual Label Ⴅ
    {
      get => this.ႣႰ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႣႰ = value;
    }

    internal virtual Button Ⴄ
    {
      get => this.ႣႼ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        MulticastDelegate multicastDelegate = (MulticastDelegate) new EventHandler(this.t3R);
        object ⴃⴜ1 = (object) this.ႣႼ;
        if (ⴃⴜ1 is Button)
          (ⴃⴜ1 as Button).Click -= multicastDelegate as EventHandler;
        this.ႣႼ = value;
        object ⴃⴜ2 = (object) this.ႣႼ;
        if ((Button) ⴃⴜ2 == null)
          return;
        (ⴃⴜ2 as Button).Click += multicastDelegate as EventHandler;
      }
    }

    internal virtual Label Ⴜ
    {
      get => this.Ⴄ.Ⴀ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴄ.Ⴀ = value;
    }

    internal virtual ComboBox ႷႰ
    {
      get => this.ႭႣ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႭႣ = value;
    }

    internal virtual Label ႷႷ
    {
      get => this.Ⴄ.Ⴈ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴄ.Ⴈ = value;
    }

    internal virtual Button ႷႳ
    {
      get => this.ႭႭ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        object obj = (object) new EventHandler(this.Jp7);
        object ⴍⴍ1 = (object) this.ႭႭ;
        if (ⴍⴍ1 is Button)
          (ⴍⴍ1 as Button).Click -= (EventHandler) obj;
        this.ႭႭ = value;
        object ⴍⴍ2 = (object) this.ႭႭ;
        if ((Button) ⴍⴍ2 == null)
          return;
        ((Control) ⴍⴍ2).Click += (EventHandler) obj;
      }
    }

    internal virtual Button ႷႨ
    {
      get => this.ႭႤ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        object obj = (object) new EventHandler(this.x6X);
        IButtonControl ⴍⴄ1 = (IButtonControl) this.ႭႤ;
        if (ⴍⴄ1 is Button)
          ((Control) ⴍⴄ1).Click -= (EventHandler) obj;
        this.ႭႤ = value;
        IButtonControl ⴍⴄ2 = (IButtonControl) this.ႭႤ;
        if ((Button) ⴍⴄ2 == null)
          return;
        ((Control) ⴍⴄ2).Click += (EventHandler) obj;
      }
    }

    internal virtual TextBox ႷႠ
    {
      get => this.Ⴄ.Ⴗ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴄ.Ⴗ = (object) value as TextBox;
    }

    internal virtual TextBox ႷႭ
    {
      get => this.ႭႷ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႭႷ = value;
    }

    internal virtual GroupBox ႷႣ
    {
      get => this.ႭႨ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႭႨ = value;
    }

    internal virtual RadioButton ႷႥ
    {
      get => this.Ⴄ.Ⴓ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴄ.Ⴓ = (object) value as RadioButton;
    }

    internal virtual RadioButton ႷႤ
    {
      get => this.Ⴄ.Ⴜ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴄ.Ⴜ = value;
    }

    internal virtual DateTimePicker ႷႼ
    {
      get => this.Ⴄ.ႰႤ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴄ.ႰႤ = value;
    }

    internal virtual Label ႳႰ
    {
      get => this.Ⴄ.ႰႰ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴄ.ႰႰ = (object) value as Label;
    }

    internal virtual Label ႳႷ
    {
      get => this.Ⴄ.ႰႣ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴄ.ႰႣ = (object) value as Label;
    }

    internal virtual Label ႳႳ
    {
      get => this.ႤႭ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႤႭ = value;
    }

    internal virtual Label ႳႨ
    {
      get => this.ႤႤ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႤႤ = value;
    }

    internal virtual Label ႳႠ
    {
      get => this.Ⴄ.ႰႭ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴄ.ႰႭ = value;
    }

    internal virtual Label ႳႭ
    {
      get => this.ႤႷ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႤႷ = value;
    }

    internal virtual Label ႳႣ
    {
      get => this.Ⴄ.ႰႥ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴄ.ႰႥ = (Control) value as Label;
    }

    internal virtual Label ႳႥ
    {
      get => this.Ⴄ.ႰႠ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴄ.ႰႠ = value;
    }

    internal virtual Label ႳႤ
    {
      get => this.ႤႼ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႤႼ = value;
    }

    internal virtual Label ႳႼ
    {
      get => this.ႠႥ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႠႥ = value;
    }

    internal virtual Label ႨႰ
    {
      get => this.Ⴄ.ႰႨ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴄ.ႰႨ = (IAutomationLiveRegion) value as Label;
    }

    internal virtual Button ႨႷ
    {
      get => this.Ⴄ.ႰႷ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        MulticastDelegate multicastDelegate = (MulticastDelegate) new EventHandler(this.Zw4);
        object ⴐⴗ1 = (object) this.Ⴄ.ႰႷ;
        if ((Button) ⴐⴗ1 != null)
          ((Control) ⴐⴗ1).Click -= multicastDelegate as EventHandler;
        this.Ⴄ.ႰႷ = value;
        object ⴐⴗ2 = (object) this.Ⴄ.ႰႷ;
        if ((Button) ⴐⴗ2 == null)
          return;
        (ⴐⴗ2 as Button).Click += (EventHandler) multicastDelegate;
      }
    }

    internal virtual PrintDocument ႨႳ
    {
      get => this.Ⴄ.ႰႳ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        object obj = (object) new PrintPageEventHandler(this.k5Q);
        Component ⴐⴓ1 = (Component) this.Ⴄ.ႰႳ;
        if ((PrintDocument) ⴐⴓ1 != null)
          ((PrintDocument) ⴐⴓ1).PrintPage -= (PrintPageEventHandler) obj;
        this.Ⴄ.ႰႳ = (object) value as PrintDocument;
        Component ⴐⴓ2 = (Component) this.Ⴄ.ႰႳ;
        if (!(ⴐⴓ2 is PrintDocument))
          return;
        ((PrintDocument) ⴐⴓ2).PrintPage += obj as PrintPageEventHandler;
      }
    }

    internal virtual PrintPreviewDialog ႨႨ
    {
      get => this.ႠႤ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႠႤ = value;
    }

    internal virtual Label ႨႠ
    {
      get => this.ႠႠ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႠႠ = value;
    }

    internal virtual MaskedTextBox ႨႭ
    {
      get => this.ႠႷ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႠႷ = value;
    }

    private void n8Z([In] object obj0, [In] EventArgs obj1)
    {
      this.Ⴓ.Focus();
      this.ႷႼ.MaxDate = DateTime.Now.Subtract(new TimeSpan(5479, 0, 0, 0, 0));
      Table<Af03> ⴃ = new Tt1().Ⴃ;
      object obj = (object) Expression.Parameter(typeof (Af03), "o");
      // ISSUE: method reference
      // ISSUE: method reference
      // ISSUE: field reference
      Expression<Func<Af03, bool>> predicate = Expression.Lambda<Func<Af03, bool>>((Expression) Expression.Equal((Expression) Expression.Call((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Operators.CompareString)), new Expression[3]
      {
        (Expression) Expression.Property((Expression) obj, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Af03.i0KG))),
        (Expression) Expression.Field((Expression) Expression.Constant((object) this, typeof (Kd3)), FieldInfo.GetFieldFromHandle(__fieldref (Kd3.ႠႨ))),
        (Expression) Expression.Constant((object) false, typeof (bool))
      }), (Expression) Expression.Constant((object) 0, typeof (int)), false, (MethodInfo) null), obj as ParameterExpression);
      INotifyPropertyChanged notifyPropertyChanged = (INotifyPropertyChanged) ⴃ.FirstOrDefault<Af03>(predicate);
      if ((Af03) notifyPropertyChanged == null)
      {
        int num = (int) MessageBox.Show("Staff not found", "Error", MessageBoxButtons.OK, MessageBoxIcon.Hand);
        this.Close();
      }
      else
      {
        this.Ⴅ.Text = (notifyPropertyChanged as Af03).Ⴗ.ToString();
        this.ႳႰ.Text = ((Af03) notifyPropertyChanged).Ⴐ;
        this.Ⴓ.Text = ((Af03) notifyPropertyChanged).Ⴃ;
        this.Ⴗ.Text = ((Af03) notifyPropertyChanged).Ⴗ;
        this.ႷႼ.Value = DateTime.Parse((notifyPropertyChanged as Af03).Ⴈ);
        this.Ⴐ.Text = (notifyPropertyChanged as Af03).Ⴍ;
        this.ႷႭ.Text = ((Af03) notifyPropertyChanged).Ⴓ;
        this.ႷႠ.Text = ((Af03) notifyPropertyChanged).Ⴄ;
        this.Ⴀ.Text = ((Af03) notifyPropertyChanged).Ⴃ.ToString();
        this.ႨႭ.Text = ((Af03) notifyPropertyChanged).Ⴃ.ToString();
        this.ႳႼ.Text = ((Af03) notifyPropertyChanged).Ⴈ.ToShortDateString();
        this.ႨႠ.Text = (notifyPropertyChanged as Af03).Ⴀ;
        IEnumerable ⴀⴐ = (IEnumerable) (notifyPropertyChanged as Af03).ႠႰ;
        if (Operators.CompareString((string) ⴀⴐ, "IT Dept.", false) != 0)
        {
          if (Operators.CompareString(ⴀⴐ as string, "HR Dept.", false) != 0)
          {
            if (Operators.CompareString((string) ⴀⴐ, "Accounting Dept.", false) != 0)
            {
              if (Operators.CompareString((string) ⴀⴐ, "Marketing Dept.", false) == 0)
                this.ႷႰ.SelectedIndex = 3;
            }
            else
              this.ႷႰ.SelectedIndex = 2;
          }
          else
            this.ႷႰ.SelectedIndex = 1;
        }
        else
          this.ႷႰ.SelectedIndex = 0;
        IConvertible ⴅ = (IConvertible) ((Af03) notifyPropertyChanged).Ⴅ;
        if (Operators.CompareString((string) ⴅ, "Male", false) != 0)
        {
          if (Operators.CompareString((string) ⴅ, "Female", false) == 0)
            this.ႷႥ.Checked = true;
        }
        else
          this.ႷႤ.Checked = true;
        switch ((notifyPropertyChanged as Af03).Ⴀ)
        {
          case 0:
            this.Ⴍ.SelectedIndex = 5;
            break;
          case 1:
            this.Ⴍ.SelectedIndex = 4;
            break;
          case 2:
            this.Ⴍ.SelectedIndex = 3;
            break;
          case 3:
            this.Ⴍ.SelectedIndex = 2;
            break;
          case 4:
            this.Ⴍ.SelectedIndex = 1;
            break;
          case 5:
            this.Ⴍ.SelectedIndex = 0;
            break;
        }
      }
    }

    private void x6X([In] object obj0, [In] EventArgs obj1)
    {
      DataContext dataContext = (DataContext) new Tt1();
      Table<Af03> ⴃ = (dataContext as Tt1).Ⴃ;
      Expression expression = (Expression) Expression.Parameter(typeof (Af03), "o");
      // ISSUE: method reference
      // ISSUE: method reference
      // ISSUE: field reference
      Expression<Func<Af03, bool>> predicate = Expression.Lambda<Func<Af03, bool>>((Expression) Expression.Equal((Expression) Expression.Call((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Operators.CompareString)), new Expression[3]
      {
        (Expression) Expression.Property(expression, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Af03.i0KG))),
        (Expression) Expression.Field((Expression) Expression.Constant((object) this, typeof (Kd3)), FieldInfo.GetFieldFromHandle(__fieldref (Kd3.ႠႨ))),
        (Expression) Expression.Constant((object) false, typeof (bool))
      }), (Expression) Expression.Constant((object) 0, typeof (int)), false, (MethodInfo) null), (ParameterExpression) expression);
      object entity1 = (object) ⴃ.FirstOrDefault<Af03>(predicate);
      object obj = (object) new StringBuilder();
      IWin32Window win32Window = (IWin32Window) null;
      IEnumerable<char> chars = (IEnumerable<char>) "";
      chars = (IEnumerable<char>) this.ႳႰ.Text;
      IEnumerable text1 = (IEnumerable) this.Ⴓ.Text;
      object Left1 = this.Ⴗ.MaskCompleted ? (object) this.Ⴗ.Text : (object) "";
      IEquatable<string> Left2 = (IEquatable<string>) this.ႷႼ.Value.ToString("yyyy-MM-dd");
      IEquatable<string> equatable;
      if (this.ႷႥ.Checked)
        equatable = (IEquatable<string>) "Female";
      else if (this.ႷႤ.Checked)
      {
        equatable = (IEquatable<string>) "Male";
      }
      else
      {
        int num = (int) MessageBox.Show("Please select gender !", "error");
        return;
      }
      IEnumerable<char> Left3 = this.Ⴐ.MaskCompleted ? (IEnumerable<char>) this.Ⴐ.Text : (IEnumerable<char>) "";
      ICloneable text2 = (ICloneable) this.ႷႭ.Text;
      IEnumerable text3 = (IEnumerable) this.ႷႠ.Text;
      ICloneable cloneable = Operators.CompareString(this.ႷႰ.SelectedItem.ToString(), "HR Dept.", false) != 0 ? (ICloneable) "Staff" : (ICloneable) "HR";
      if (Operators.CompareString(Left2 as string, "", false) == 0)
      {
        ((StringBuilder) obj).AppendLine("- Please Enter Correct Birthday");
        win32Window = (IWin32Window) ((Control) win32Window ?? (Control) this.ႷႼ);
      }
      if (Operators.CompareString(text1 as string, "", false) == 0)
      {
        (obj as StringBuilder).AppendLine("- Please Enter Name");
        if (!(win32Window is Control control))
          control = (Control) this.Ⴓ;
        win32Window = (IWin32Window) control;
      }
      if (this.ႷႰ.SelectedIndex < 0)
      {
        (obj as StringBuilder).AppendLine("- Please Select Department");
        win32Window = (IWin32Window) ((Control) win32Window ?? (Control) this.ႷႰ);
      }
      if (Operators.CompareString(Left1 as string, "", false) == 0)
      {
        (obj as StringBuilder).AppendLine("- Please Enter Correct IC Format");
        if (!(win32Window is Control control))
          control = (Control) this.Ⴗ;
        win32Window = (IWin32Window) control;
      }
      if (Operators.CompareString(Left3 as string, "", false) == 0)
      {
        (obj as StringBuilder).AppendLine("- Please Enter Correct Phone Format");
        if (!(win32Window is Control control))
          control = (Control) this.Ⴐ;
        win32Window = (IWin32Window) control;
      }
      if (Operators.CompareString((string) text2, "", false) == 0)
      {
        ((StringBuilder) obj).AppendLine("- Please Enter Email");
        win32Window = (IWin32Window) ((Control) win32Window ?? (Control) this.ႷႭ);
      }
      if (Operators.CompareString((string) text3, "", false) == 0)
      {
        ((StringBuilder) obj).AppendLine("- Please Enter Address");
        if (!(win32Window is Control control))
          control = (Control) this.ႷႠ;
        win32Window = (IWin32Window) control;
      }
      if (((StringBuilder) obj).Length > 0)
      {
        int num = (int) MessageBox.Show(((StringBuilder) obj).ToString(), "Input Error", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
        ((Control) win32Window).Focus();
      }
      else if ((Af03) entity1 == null)
      {
        int num = (int) MessageBox.Show("Staff not found", "Error", MessageBoxButtons.OK, MessageBoxIcon.Hand);
        this.Close();
      }
      else
      {
        (dataContext as Tt1).Ⴃ.DeleteOnSubmit((Af03) entity1);
        (dataContext as Tt1).SubmitChanges();
        try
        {
          object entity2 = (object) new Af03();
          ((Af03) entity2).Ⴐ = this.ႳႰ.Text;
          (entity2 as Af03).Ⴗ = int.Parse(this.Ⴅ.Text);
          ((Af03) entity2).Ⴀ = this.ႨႠ.Text;
          ((Af03) entity2).Ⴃ = this.Ⴓ.Text;
          ((Af03) entity2).Ⴗ = this.Ⴗ.Text;
          (entity2 as Af03).Ⴈ = this.ႷႼ.Value.ToString("yyyy-MM-dd");
          ((Af03) entity2).Ⴅ = (string) equatable;
          ((Af03) entity2).Ⴍ = this.Ⴐ.Text;
          ((Af03) entity2).Ⴓ = this.ႷႭ.Text;
          ((Af03) entity2).Ⴄ = this.ႷႠ.Text;
          (entity2 as Af03).Ⴜ = cloneable as string;
          (entity2 as Af03).ႠႰ = this.ႷႰ.SelectedItem.ToString();
          ((Af03) entity2).Ⴀ = int.Parse(this.Ⴍ.SelectedItem.ToString());
          (entity2 as Af03).Ⴃ = int.Parse(this.Ⴀ.Text);
          (entity2 as Af03).Ⴃ = new Decimal(int.Parse(this.ႨႭ.Text));
          (entity2 as Af03).Ⴈ = DateTime.Parse(this.ႳႼ.Text);
          (dataContext as Tt1).Ⴃ.InsertOnSubmit(entity2 as Af03);
          try
          {
            (dataContext as Tt1).SubmitChanges();
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            int num = (int) MessageBox.Show("Error : " + ((object) ex as Exception).Message, "error");
            ProjectData.ClearProjectError();
          }
          int num1 = (int) MessageBox.Show("Staff [" + this.ႳႰ.Text + "] updated", "Done", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          int num = (int) MessageBox.Show("Error : " + ex.Message, "error");
          ProjectData.ClearProjectError();
        }
      }
    }

    private void t3R([In] object obj0, [In] EventArgs obj1)
    {
      object obj2 = (object) new Tt1();
      Table<Af03> ⴃ = ((Tt1) obj2).Ⴃ;
      object obj3 = (object) Expression.Parameter(typeof (Af03), "o");
      // ISSUE: method reference
      // ISSUE: method reference
      // ISSUE: field reference
      Expression<Func<Af03, bool>> predicate = Expression.Lambda<Func<Af03, bool>>((Expression) Expression.Equal((Expression) Expression.Call((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Operators.CompareString)), new Expression[3]
      {
        (Expression) Expression.Property((Expression) obj3, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Af03.i0KG))),
        (Expression) Expression.Field((Expression) Expression.Constant((object) this, typeof (Kd3)), FieldInfo.GetFieldFromHandle(__fieldref (Kd3.ႠႨ))),
        (Expression) Expression.Constant((object) false, typeof (bool))
      }), (Expression) Expression.Constant((object) 0, typeof (int)), false, (MethodInfo) null), obj3 as ParameterExpression);
      INotifyPropertyChanged entity = (INotifyPropertyChanged) ⴃ.FirstOrDefault<Af03>(predicate);
      if (!(entity is Af03))
      {
        int num = (int) MessageBox.Show("Staff not found", "Error", MessageBoxButtons.OK, MessageBoxIcon.Hand);
        this.Close();
      }
      else
      {
        (obj2 as Tt1).Ⴃ.DeleteOnSubmit((Af03) entity);
        ((DataContext) obj2).SubmitChanges();
        int num = (int) MessageBox.Show("Staff [" + (entity as Af03).Ⴐ + "] deleted", "Done", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
        this.Close();
      }
    }

    private void Jp7([In] object obj0, [In] EventArgs obj1) => this.Close();

    private void k5Q([In] object obj0, [In] PrintPageEventArgs obj1)
    {
      DataContext dataContext = (DataContext) new Tt1();
      MarshalByRefObject marshalByRefObject = (MarshalByRefObject) new Font("Calibri", 24f, FontStyle.Bold);
      ICloneable cloneable = (ICloneable) new Font("Calibri", 14f, FontStyle.Bold);
      ISerializable serializable = (ISerializable) new Font("Consolas", 14f, FontStyle.Bold);
      object s1 = (object) "\r\nStaff Personal Details";
      ICloneable s2 = (ICloneable) string.Format("\r\n\r\n\r\nPrinted on {0:dd-MMMM-yyyy hh:mm:ss tt}\r\nPrepared by \r\nManager ID : " + Ec63.Ⴅ + "    Manager Name : " + Ec63.Ⴀ + "\r\nManager from HR Department.", (object) DateTime.Now);
      object obj = (object) new StringBuilder();
      IEnumerable<char> chars;
      if (this.ႷႥ.Checked)
        chars = (IEnumerable<char>) "Female";
      else if (this.ႷႤ.Checked)
      {
        chars = (IEnumerable<char>) "Male";
      }
      else
      {
        int num = (int) MessageBox.Show("Please select gender !", "error");
        return;
      }
      (obj as StringBuilder).AppendLine("\r\n");
      ((StringBuilder) obj).AppendLine("\r\n");
      (obj as StringBuilder).AppendLine("----------------------------------------------------------------------------------------------------------------------------------");
      (obj as StringBuilder).AppendLine("\r\n         Staff ID          : " + this.ႳႰ.Text);
      (obj as StringBuilder).AppendLine("\r\n         Staff Name        : " + this.Ⴓ.Text);
      ((StringBuilder) obj).AppendLine("\r\n         Department        : " + this.ႷႰ.SelectedItem.ToString());
      ((StringBuilder) obj).AppendLine("\r\n         IC Number         : " + this.Ⴗ.Text);
      (obj as StringBuilder).AppendLine("\r\n         Birthday          : " + this.ႷႼ.Value.ToString("yyyy-MM-dd"));
      (obj as StringBuilder).AppendLine("\r\n         Gender            : " + (chars as string));
      (obj as StringBuilder).AppendLine("\r\n         Phone Number      : " + this.Ⴐ.Text);
      ((StringBuilder) obj).AppendLine("\r\n         Email             : " + this.ႷႭ.Text);
      ((StringBuilder) obj).AppendLine("\r\n         Address           : " + this.ႷႠ.Text);
      (obj as StringBuilder).AppendLine("\r\n----------------------------------------------------------------------------------------------------------------------------------");
      (obj as StringBuilder).AppendLine();
      IDisposable graphics = (IDisposable) obj1.Graphics;
      ((Graphics) graphics).DrawString((string) s1, (Font) marshalByRefObject, Brushes.Purple, 100f, 0.0f);
      ((Graphics) graphics).DrawString((string) s2, cloneable as Font, Brushes.Black, 100f, 40f);
      ((Graphics) graphics).DrawString(((StringBuilder) obj).ToString(), serializable as Font, Brushes.Black, 0.0f, 120f);
    }

    private void Zw4([In] object obj0, [In] EventArgs obj1)
    {
      this.ႨႨ.Document = this.ႨႳ;
      int num = (int) this.ႨႨ.ShowDialog((IWin32Window) this);
    }
  }
}
