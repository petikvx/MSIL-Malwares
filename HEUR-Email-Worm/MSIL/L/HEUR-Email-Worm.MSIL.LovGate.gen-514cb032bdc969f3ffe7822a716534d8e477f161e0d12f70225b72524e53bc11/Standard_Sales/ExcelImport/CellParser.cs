// Decompiled with JetBrains decompiler
// Type: Standard_Sales.ExcelImport.CellParser
// Assembly: PreAllocatedOverlap, Version=1.0.2.1, Culture=neutral, PublicKeyToken=null
// MVID: B92242D0-7BA9-445E-B92A-42A0AEAC877F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Email-Worm.MSIL.LovGate.gen-514cb032bdc969f3ffe7822a716534d8e477f161e0d12f70225b72524e53bc11.exe

using DocumentFormat.OpenXml;
using DocumentFormat.OpenXml.Packaging;
using DocumentFormat.OpenXml.Spreadsheet;
using System.Runtime.InteropServices;

namespace Standard_Sales.ExcelImport
{
  public class CellParser : ICellParser
  {
    private readonly ICellCoordinateParser _cellCoordinateParser;
    private readonly ICellValueParser _cellValueParser;

    public CellParser(ICellCoordinateParser cellCoordinateParser, ICellValueParser cellValueParser)
    {
      this._cellCoordinateParser = cellCoordinateParser;
      this._cellValueParser = cellValueParser;
    }

    public ExcelSheetValue ParseCell(OpenXmlPartContainer wbPart, Cell cell)
    {
label_1:
      int num1 = 1625635868;
      ExcelCellCoordinates coordinates;
      string cellValue;
      ExcelSheetValue excelSheetValue;
      ExcelSheetValue cell1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1081335542)) % 5U)
        {
          case 1:
            cell1 = excelSheetValue;
            num1 = (int) num2 * 827566242 ^ -1883793147;
            continue;
          case 2:
            coordinates = this._cellCoordinateParser.ParseCoordinates(CellParser.\u206F⁪‍‎‪‍⁭​⁬⁯⁮‍‪‬‫‪⁭⁪‬‭‌⁯​⁯‏‪‎‏⁯‬‬‎‏⁮​‪‪⁮⁪⁯‮(CellParser.\u202D⁫‎​⁮⁭⁭⁫‬​‌⁭⁫⁪⁪⁬⁭‮⁫‮‭‪‬​‎‎‌⁭⁫⁭‪‎⁯⁪​⁪⁪‌‭‮((CellType) cell)));
            cellValue = this._cellValueParser.GetCellValue(wbPart, CellParser.\u200F‬‮‏‫‎‭‮⁪‬⁮​‪‭‌‫‭​⁫⁮​⁮⁯⁬⁪​‏⁭‬‎⁮⁯‪‎⁪⁪‎‎⁪‬‮((CellType) cell), CellParser.\u206D‬⁪‌‫‎⁭‍‍⁮​⁬‬‫‎‎‪‬⁬⁫⁯‌⁫⁯‌‫‫‬‎⁭⁫‌‍‮⁮⁫‫​‍⁪‮((OpenXmlElement) cell));
            num1 = (int) num2 * -1977557942 ^ -611418114;
            continue;
          case 3:
            excelSheetValue = new ExcelSheetValue(coordinates, cellValue);
            num1 = (int) num2 * 1817391309 ^ -1911849896;
            continue;
          case 4:
            goto label_1;
          default:
            goto label_6;
        }
      }
label_6:
      return cell1;
    }

    static StringValue \u202D⁫‎​⁮⁭⁭⁫‬​‌⁭⁫⁪⁪⁬⁭‮⁫‮‭‪‬​‎‎‌⁭⁫⁭‪‎⁯⁪​⁪⁪‌‭‮([In] CellType obj0) => obj0.CellReference;

    static string \u206F⁪‍‎‪‍⁭​⁬⁯⁮‍‪‬‫‪⁭⁪‬‭‌⁯​⁯‏‪‎‏⁯‬‬‎‏⁮​‪‪⁮⁪⁯‮([In] StringValue obj0) => StringValue.op_Implicit(obj0);

    static EnumValue<CellValues> \u200F‬‮‏‫‎‭‮⁪‬⁮​‪‭‌‫‭​⁫⁮​⁮⁯⁬⁪​‏⁭‬‎⁮⁯‪‎⁪⁪‎‎⁪‬‮(
      [In] CellType obj0)
    {
      return obj0.DataType;
    }

    static string \u206D‬⁪‌‫‎⁭‍‍⁮​⁬‬‫‎‎‪‬⁬⁫⁯‌⁫⁯‌‫‫‬‎⁭⁫‌‍‮⁮⁫‫​‍⁪‮([In] OpenXmlElement obj0) => obj0.InnerText;
  }
}
