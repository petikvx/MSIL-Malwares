// Decompiled with JetBrains decompiler
// Type: 723.99x
// Assembly: uc5uTlQKZwvBJeUwoIoxWYL1o3uBI8gaMfnT9AO, Version=9.8.6.0, Culture=neutral, PublicKeyToken=null
// MVID: 66B519F9-803D-46C9-8343-EC24850CA08A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\HEUR-Trojan-Banker.MSIL.ClipBanker.gen-de0d24df79f99286da0234aa1536470d7596c53e531173d693d6ccc60b98e84c.exe

using \u003322;
using \u0034qc;
using \u003558;
using \u003723;
using rh9;
using System;
using System.Runtime.InteropServices;

namespace \u003723
{
  internal sealed class \u00399x
  {
    private static readonly int VlN = 2 * w8D.\u0032M8 + 1;
    internal static readonly int[] \u003367 = new int[29]
    {
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      1,
      1,
      1,
      2,
      2,
      2,
      2,
      3,
      3,
      3,
      3,
      4,
      4,
      4,
      4,
      5,
      5,
      5,
      5,
      0
    };
    internal static readonly int[] Fb7 = new int[30]
    {
      0,
      0,
      0,
      0,
      1,
      1,
      2,
      2,
      3,
      3,
      4,
      4,
      5,
      5,
      6,
      6,
      7,
      7,
      8,
      8,
      9,
      9,
      10,
      10,
      11,
      11,
      12,
      12,
      13,
      13
    };
    internal static readonly int[] \u003935 = new int[19]
    {
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      2,
      3,
      7
    };
    internal static readonly sbyte[] vw8 = new sbyte[19]
    {
      (sbyte) 16,
      (sbyte) 17,
      (sbyte) 18,
      (sbyte) 0,
      (sbyte) 8,
      (sbyte) 7,
      (sbyte) 9,
      (sbyte) 6,
      (sbyte) 10,
      (sbyte) 5,
      (sbyte) 11,
      (sbyte) 4,
      (sbyte) 12,
      (sbyte) 3,
      (sbyte) 13,
      (sbyte) 2,
      (sbyte) 14,
      (sbyte) 1,
      (sbyte) 15
    };
    private static readonly sbyte[] i91 = new sbyte[512]
    {
      (sbyte) 0,
      (sbyte) 1,
      (sbyte) 2,
      (sbyte) 3,
      (sbyte) 4,
      (sbyte) 4,
      (sbyte) 5,
      (sbyte) 5,
      (sbyte) 6,
      (sbyte) 6,
      (sbyte) 6,
      (sbyte) 6,
      (sbyte) 7,
      (sbyte) 7,
      (sbyte) 7,
      (sbyte) 7,
      (sbyte) 8,
      (sbyte) 8,
      (sbyte) 8,
      (sbyte) 8,
      (sbyte) 8,
      (sbyte) 8,
      (sbyte) 8,
      (sbyte) 8,
      (sbyte) 9,
      (sbyte) 9,
      (sbyte) 9,
      (sbyte) 9,
      (sbyte) 9,
      (sbyte) 9,
      (sbyte) 9,
      (sbyte) 9,
      (sbyte) 10,
      (sbyte) 10,
      (sbyte) 10,
      (sbyte) 10,
      (sbyte) 10,
      (sbyte) 10,
      (sbyte) 10,
      (sbyte) 10,
      (sbyte) 10,
      (sbyte) 10,
      (sbyte) 10,
      (sbyte) 10,
      (sbyte) 10,
      (sbyte) 10,
      (sbyte) 10,
      (sbyte) 10,
      (sbyte) 11,
      (sbyte) 11,
      (sbyte) 11,
      (sbyte) 11,
      (sbyte) 11,
      (sbyte) 11,
      (sbyte) 11,
      (sbyte) 11,
      (sbyte) 11,
      (sbyte) 11,
      (sbyte) 11,
      (sbyte) 11,
      (sbyte) 11,
      (sbyte) 11,
      (sbyte) 11,
      (sbyte) 11,
      (sbyte) 12,
      (sbyte) 12,
      (sbyte) 12,
      (sbyte) 12,
      (sbyte) 12,
      (sbyte) 12,
      (sbyte) 12,
      (sbyte) 12,
      (sbyte) 12,
      (sbyte) 12,
      (sbyte) 12,
      (sbyte) 12,
      (sbyte) 12,
      (sbyte) 12,
      (sbyte) 12,
      (sbyte) 12,
      (sbyte) 12,
      (sbyte) 12,
      (sbyte) 12,
      (sbyte) 12,
      (sbyte) 12,
      (sbyte) 12,
      (sbyte) 12,
      (sbyte) 12,
      (sbyte) 12,
      (sbyte) 12,
      (sbyte) 12,
      (sbyte) 12,
      (sbyte) 12,
      (sbyte) 12,
      (sbyte) 12,
      (sbyte) 12,
      (sbyte) 13,
      (sbyte) 13,
      (sbyte) 13,
      (sbyte) 13,
      (sbyte) 13,
      (sbyte) 13,
      (sbyte) 13,
      (sbyte) 13,
      (sbyte) 13,
      (sbyte) 13,
      (sbyte) 13,
      (sbyte) 13,
      (sbyte) 13,
      (sbyte) 13,
      (sbyte) 13,
      (sbyte) 13,
      (sbyte) 13,
      (sbyte) 13,
      (sbyte) 13,
      (sbyte) 13,
      (sbyte) 13,
      (sbyte) 13,
      (sbyte) 13,
      (sbyte) 13,
      (sbyte) 13,
      (sbyte) 13,
      (sbyte) 13,
      (sbyte) 13,
      (sbyte) 13,
      (sbyte) 13,
      (sbyte) 13,
      (sbyte) 13,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 0,
      (sbyte) 0,
      (sbyte) 16,
      (sbyte) 17,
      (sbyte) 18,
      (sbyte) 18,
      (sbyte) 19,
      (sbyte) 19,
      (sbyte) 20,
      (sbyte) 20,
      (sbyte) 20,
      (sbyte) 20,
      (sbyte) 21,
      (sbyte) 21,
      (sbyte) 21,
      (sbyte) 21,
      (sbyte) 22,
      (sbyte) 22,
      (sbyte) 22,
      (sbyte) 22,
      (sbyte) 22,
      (sbyte) 22,
      (sbyte) 22,
      (sbyte) 22,
      (sbyte) 23,
      (sbyte) 23,
      (sbyte) 23,
      (sbyte) 23,
      (sbyte) 23,
      (sbyte) 23,
      (sbyte) 23,
      (sbyte) 23,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 28,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29,
      (sbyte) 29
    };
    internal static readonly sbyte[] \u0034h3 = new sbyte[256]
    {
      (sbyte) 0,
      (sbyte) 1,
      (sbyte) 2,
      (sbyte) 3,
      (sbyte) 4,
      (sbyte) 5,
      (sbyte) 6,
      (sbyte) 7,
      (sbyte) 8,
      (sbyte) 8,
      (sbyte) 9,
      (sbyte) 9,
      (sbyte) 10,
      (sbyte) 10,
      (sbyte) 11,
      (sbyte) 11,
      (sbyte) 12,
      (sbyte) 12,
      (sbyte) 12,
      (sbyte) 12,
      (sbyte) 13,
      (sbyte) 13,
      (sbyte) 13,
      (sbyte) 13,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 14,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 15,
      (sbyte) 16,
      (sbyte) 16,
      (sbyte) 16,
      (sbyte) 16,
      (sbyte) 16,
      (sbyte) 16,
      (sbyte) 16,
      (sbyte) 16,
      (sbyte) 17,
      (sbyte) 17,
      (sbyte) 17,
      (sbyte) 17,
      (sbyte) 17,
      (sbyte) 17,
      (sbyte) 17,
      (sbyte) 17,
      (sbyte) 18,
      (sbyte) 18,
      (sbyte) 18,
      (sbyte) 18,
      (sbyte) 18,
      (sbyte) 18,
      (sbyte) 18,
      (sbyte) 18,
      (sbyte) 19,
      (sbyte) 19,
      (sbyte) 19,
      (sbyte) 19,
      (sbyte) 19,
      (sbyte) 19,
      (sbyte) 19,
      (sbyte) 19,
      (sbyte) 20,
      (sbyte) 20,
      (sbyte) 20,
      (sbyte) 20,
      (sbyte) 20,
      (sbyte) 20,
      (sbyte) 20,
      (sbyte) 20,
      (sbyte) 20,
      (sbyte) 20,
      (sbyte) 20,
      (sbyte) 20,
      (sbyte) 20,
      (sbyte) 20,
      (sbyte) 20,
      (sbyte) 20,
      (sbyte) 21,
      (sbyte) 21,
      (sbyte) 21,
      (sbyte) 21,
      (sbyte) 21,
      (sbyte) 21,
      (sbyte) 21,
      (sbyte) 21,
      (sbyte) 21,
      (sbyte) 21,
      (sbyte) 21,
      (sbyte) 21,
      (sbyte) 21,
      (sbyte) 21,
      (sbyte) 21,
      (sbyte) 21,
      (sbyte) 22,
      (sbyte) 22,
      (sbyte) 22,
      (sbyte) 22,
      (sbyte) 22,
      (sbyte) 22,
      (sbyte) 22,
      (sbyte) 22,
      (sbyte) 22,
      (sbyte) 22,
      (sbyte) 22,
      (sbyte) 22,
      (sbyte) 22,
      (sbyte) 22,
      (sbyte) 22,
      (sbyte) 22,
      (sbyte) 23,
      (sbyte) 23,
      (sbyte) 23,
      (sbyte) 23,
      (sbyte) 23,
      (sbyte) 23,
      (sbyte) 23,
      (sbyte) 23,
      (sbyte) 23,
      (sbyte) 23,
      (sbyte) 23,
      (sbyte) 23,
      (sbyte) 23,
      (sbyte) 23,
      (sbyte) 23,
      (sbyte) 23,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 24,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 25,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 26,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 27,
      (sbyte) 28
    };
    internal static readonly int[] \u0031lZ = new int[29]
    {
      0,
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8,
      10,
      12,
      14,
      16,
      20,
      24,
      28,
      32,
      40,
      48,
      56,
      64,
      80,
      96,
      112,
      128,
      160,
      192,
      224,
      0
    };
    internal static readonly int[] YF7 = new int[30]
    {
      0,
      1,
      2,
      3,
      4,
      6,
      8,
      12,
      16,
      24,
      32,
      48,
      64,
      96,
      128,
      192,
      256,
      384,
      512,
      768,
      1024,
      1536,
      2048,
      3072,
      4096,
      6144,
      8192,
      12288,
      16384,
      24576
    };
    internal short[] epb;
    internal int \u003214;
    internal \u0031xs \u003534;

    internal static int \u0034Bw([In] int obj0) => obj0 >= 256 ? (int) \u00399x.i91[256 + e6g.\u00358p(obj0, 7)] : (int) \u00399x.i91[obj0];

    internal void J35([In] \u0033rO obj0)
    {
      short[] epb = this.epb;
      short[] numArray = this.\u003534.\u0033l7;
      int[] dtU = this.\u003534.DtU;
      int num1 = this.\u003534.\u0038tF;
      int f88 = this.\u003534.f88;
      int num2 = 0;
      for (int index = 0; index <= w8D.EMt; ++index)
        obj0.\u0033sE[index] = (short) 0;
      epb[obj0.d71[obj0.X5U] * 2 + 1] = (short) 0;
      int index1;
      for (index1 = obj0.X5U + 1; index1 < \u00399x.VlN; ++index1)
      {
        int num3 = obj0.d71[index1];
        int index2 = (int) epb[(int) epb[num3 * 2 + 1] * 2 + 1] + 1;
        if (index2 > f88)
        {
          index2 = f88;
          ++num2;
        }
        epb[num3 * 2 + 1] = (short) index2;
        if (num3 <= this.\u003214)
        {
          ++obj0.\u0033sE[index2];
          int num4 = 0;
          if (num3 >= num1)
            num4 = dtU[num3 - num1];
          short num5 = epb[num3 * 2];
          obj0.N66 += (int) num5 * (index2 + num4);
          if (numArray != null)
            obj0.MaQ += (int) num5 * ((int) numArray[num3 * 2 + 1] + num4);
        }
      }
      if (num2 == 0)
        return;
      do
      {
        int index3 = f88 - 1;
        while (obj0.\u0033sE[index3] == (short) 0)
          --index3;
        --obj0.\u0033sE[index3];
        obj0.\u0033sE[index3 + 1] = (short) ((int) obj0.\u0033sE[index3 + 1] + 2);
        --obj0.\u0033sE[f88];
        num2 -= 2;
      }
      while (num2 > 0);
      for (int index4 = f88; index4 != 0; --index4)
      {
        int num6 = (int) obj0.\u0033sE[index4];
        while (num6 != 0)
        {
          int num7 = obj0.d71[--index1];
          if (num7 <= this.\u003214)
          {
            if ((int) epb[num7 * 2 + 1] != index4)
            {
              obj0.N66 = (int) ((long) obj0.N66 + ((long) index4 - (long) epb[num7 * 2 + 1]) * (long) epb[num7 * 2]);
              epb[num7 * 2 + 1] = (short) index4;
            }
            --num6;
          }
        }
      }
    }

    internal void \u0039EK([In] \u0033rO obj0)
    {
      short[] epb = this.epb;
      short[] numArray = this.\u003534.\u0033l7;
      int kV6 = this.\u003534.kV6;
      int num1 = -1;
      obj0.\u0032O5 = 0;
      obj0.X5U = \u00399x.VlN;
      for (int index = 0; index < kV6; ++index)
      {
        if (epb[index * 2] != (short) 0)
        {
          obj0.d71[++obj0.\u0032O5] = num1 = index;
          obj0.yQ2[index] = (sbyte) 0;
        }
        else
          epb[index * 2 + 1] = (short) 0;
      }
      while (obj0.\u0032O5 < 2)
      {
        int[] d71 = obj0.d71;
        int index1 = ++obj0.\u0032O5;
        int num2;
        if (num1 >= 2)
          num2 = 0;
        else
          num1 = num2 = num1 + 1;
        int num3 = num2;
        d71[index1] = num2;
        int index2 = num3;
        epb[index2 * 2] = (short) 1;
        obj0.yQ2[index2] = (sbyte) 0;
        --obj0.N66;
        if (numArray != null)
          obj0.MaQ -= (int) numArray[index2 * 2 + 1];
      }
      this.\u003214 = num1;
      for (int index = obj0.\u0032O5 / 2; index >= 1; --index)
        obj0.\u0034e5(epb, index);
      int index3 = kV6;
      do
      {
        int index4 = obj0.d71[1];
        obj0.d71[1] = obj0.d71[obj0.\u0032O5--];
        obj0.\u0034e5(epb, 1);
        int index5 = obj0.d71[1];
        obj0.d71[--obj0.X5U] = index4;
        obj0.d71[--obj0.X5U] = index5;
        epb[index3 * 2] = (short) ((int) epb[index4 * 2] + (int) epb[index5 * 2]);
        obj0.yQ2[index3] = (sbyte) ((int) Math.Max((byte) obj0.yQ2[index4], (byte) obj0.yQ2[index5]) + 1);
        epb[index4 * 2 + 1] = epb[index5 * 2 + 1] = (short) index3;
        obj0.d71[1] = index3++;
        obj0.\u0034e5(epb, 1);
      }
      while (obj0.\u0032O5 >= 2);
      obj0.d71[--obj0.X5U] = obj0.d71[1];
      this.J35(obj0);
      \u00399x.O6q(epb, num1, obj0.\u0033sE);
    }

    internal static void O6q([In] short[] obj0, [In] int obj1, [In] short[] obj2)
    {
      short[] numArray = new short[w8D.EMt + 1];
      short num = 0;
      for (int index = 1; index <= w8D.EMt; ++index)
        numArray[index] = num = (short) ((int) num + (int) obj2[index - 1] << 1);
      for (int index1 = 0; index1 <= obj1; ++index1)
      {
        int index2 = (int) obj0[index1 * 2 + 1];
        if (index2 != 0)
          obj0[index1 * 2] = (short) \u00399x.N6l((int) numArray[index2]++, index2);
      }
    }

    internal static int N6l([In] int obj0, [In] int obj1)
    {
      int num1 = 0;
      do
      {
        int num2 = num1 | obj0 & 1;
        obj0 >>= 1;
        num1 = num2 << 1;
      }
      while (--obj1 > 0);
      return num1 >> 1;
    }
  }
}
