// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONClass
// Assembly: IMuiResourceTypeIdIntEnt, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 108B0C51-A542-4D1F-972B-8772D9255CD7
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-77eaed5cde7243b357db648d37fafd906220fc6f0c415561162e6fe5a1c39959.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONClass : JSONNode, IEnumerable
  {
    private Dictionary<string, JSONNode> m_Dict = new Dictionary<string, JSONNode>();

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 1086386157;
        bool flag;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2065369527)) % 6U)
          {
            case 0:
              int num3 = flag ? -1221140283 : (num3 = -295705636);
              num1 = num3 ^ (int) num2 * 1932076554;
              continue;
            case 1:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = 765350734;
              continue;
            case 2:
              jsonNode = this.m_Dict[aKey];
              num1 = (int) num2 * 1102201896 ^ 26947870;
              continue;
            case 4:
              flag = this.m_Dict.ContainsKey(aKey);
              num1 = (int) num2 * 1832621202 ^ -127159205;
              continue;
            case 5:
              goto label_1;
            default:
              goto label_7;
          }
        }
label_7:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = -1524108801;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -296991997)) % 9U)
          {
            case 0:
              this.m_Dict[aKey] = value;
              num1 = (int) num2 * -1601130308 ^ 2133177619;
              continue;
            case 1:
              goto label_3;
            case 2:
              num1 = (int) num2 * 146109333 ^ -207126217;
              continue;
            case 3:
              num1 = (int) num2 * -341238174 ^ 1070945137;
              continue;
            case 4:
              num1 = (int) num2 * 176696820 ^ -1132560568;
              continue;
            case 5:
              goto label_1;
            case 6:
              flag = this.m_Dict.ContainsKey(aKey);
              num1 = (int) num2 * -296762962 ^ 1144618204;
              continue;
            case 7:
              int num3 = !flag ? -1234752756 : (num3 = -1648290389);
              num1 = num3 ^ (int) num2 * -2079873579;
              continue;
            case 8:
              this.m_Dict.Add(aKey, value);
              num1 = -1321492328;
              continue;
            default:
              goto label_11;
          }
        }
label_3:
        return;
label_11:;
      }
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = -1437182342;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ -324568953)) % 8U)
          {
            case 0:
              num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
              break;
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -638054457 ^ 1668941166;
              continue;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * -1224121667 ^ -586836698;
              continue;
            case 4:
              jsonNode = (JSONNode) null;
              num1 = -1050294020;
              continue;
            case 5:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * 698299735 ^ 236402364;
                continue;
              }
              num3 = 1;
              break;
            case 7:
              int num4 = flag ? -1759553347 : (num4 = -395283168);
              num1 = num4 ^ (int) num2 * 432286445;
              continue;
            default:
              goto label_12;
          }
          flag = num3 != 0;
          num1 = -1091544704;
        }
label_12:
        return jsonNode;
      }
      set
      {
        if (aIndex < 0)
          goto label_5;
label_1:
        int num1 = 778162651;
label_2:
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 245381218)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_4;
            case 2:
              num1 = (int) num2 * 1090667257 ^ 1263874695;
              continue;
            case 3:
              goto label_3;
            default:
              goto label_8;
          }
        }
label_3:
        return;
label_8:
        return;
label_4:
        int num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
        goto label_6;
label_5:
        num3 = 1;
label_6:
        num1 = num3 == 0 ? 790813433 : (num1 = 2077177228);
        goto label_2;
      }
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = -495740818;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1142161190)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              count = this.m_Dict.Count;
              num1 = (int) num2 * -662497191 ^ -1374535254;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = -1441651642;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -769956882)) % 14U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -238180916 ^ 2038549095;
            continue;
          case 2:
            flag = !JSONClass.\u200E‪‭‪‏‪⁪‏‮‍⁭‭‮‎‫‫⁬⁮⁬⁫⁯‎‌⁬‎‫⁭‎‭‪‌‭​‪‪‭‮‮⁪‮(aKey);
            num1 = (int) num2 * 1398899976 ^ -1074335970;
            continue;
          case 3:
            num1 = -937780181;
            continue;
          case 4:
            int num3 = !flag ? 160138750 : (num3 = 226713501);
            num1 = num3 ^ (int) num2 * 576866432;
            continue;
          case 5:
            num1 = (int) num2 * -243854374 ^ 292928918;
            continue;
          case 6:
            int num4 = !this.m_Dict.ContainsKey(aKey) ? 487016572 : (num4 = 1773732309);
            num1 = num4 ^ (int) num2 * 1276414009;
            continue;
          case 7:
            num1 = (int) num2 * 1494811566 ^ -132553359;
            continue;
          case 8:
            this.m_Dict.Add(aKey, aItem);
            num1 = -178228385;
            continue;
          case 9:
            num1 = (int) num2 * 1280766145 ^ -765897882;
            continue;
          case 10:
            goto label_3;
          case 11:
            this.m_Dict[aKey] = aItem;
            num1 = (int) num2 * -1115569908 ^ 949745345;
            continue;
          case 12:
            this.m_Dict.Add(Guid.NewGuid().ToString(), aItem);
            num1 = -1591091692;
            continue;
          case 13:
            num1 = (int) num2 * 1350011511 ^ 1044957319;
            continue;
          default:
            goto label_16;
        }
      }
label_3:
      return;
label_16:;
    }

    public override JSONNode Remove(string aKey)
    {
label_1:
      int num1 = -555473218;
      JSONNode jsonNode1;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1063036103)) % 7U)
        {
          case 1:
            int num3 = !flag ? -302565842 : (num3 = -137783236);
            num1 = num3 ^ (int) num2 * 1619730334;
            continue;
          case 2:
            flag = !this.m_Dict.ContainsKey(aKey);
            num1 = (int) num2 * 6401852 ^ 1343955837;
            continue;
          case 3:
            JSONNode jsonNode2 = this.m_Dict[aKey];
            this.m_Dict.Remove(aKey);
            jsonNode1 = jsonNode2;
            num1 = -33059804;
            continue;
          case 4:
            goto label_1;
          case 5:
            num1 = (int) num2 * -1055126748 ^ -1324116111;
            continue;
          case 6:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num2 * -673576495 ^ -1648415184;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      return jsonNode1;
    }

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = 661375708;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        int num3;
        switch ((num2 = (uint) (num1 ^ 1948210695)) % 7U)
        {
          case 0:
            num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
            break;
          case 2:
            goto label_1;
          case 3:
            if (aIndex >= 0)
            {
              num1 = (int) num2 * -1927576243 ^ -1396378881;
              continue;
            }
            num3 = 1;
            break;
          case 4:
            jsonNode = (JSONNode) null;
            num1 = 1375449476;
            continue;
          case 5:
            num1 = (int) num2 * -1942097046 ^ 486345508;
            continue;
          case 6:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 1949142303 ^ 566811906;
            continue;
          default:
            goto label_11;
        }
        int num4;
        num1 = num4 = num3 != 0 ? 1201049932 : (num4 = 1578102857);
      }
label_11:
      return jsonNode;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      JSONNode jsonNode;
      try
      {
        jsonNode = (JSONNode) null;
      }
      catch
      {
label_3:
        int num1 = 1238435721;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1396296440)) % 4U)
          {
            case 0:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 64413583 ^ -1992178690;
              continue;
            case 1:
              num1 = (int) num2 * 1689033992 ^ -216221228;
              continue;
            case 3:
              goto label_3;
            default:
              goto label_7;
          }
        }
      }
label_7:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs => (IEnumerable<JSONNode>) new JSONClass.\u003Cget_Childs\u003Ed__14(-2)
    {
      \u003C\u003E4__this = this
    };

    public IEnumerator GetEnumerator() => (IEnumerator) new JSONClass.\u003CGetEnumerator\u003Ed__15(0)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString()
    {
      string str1 = "{";
label_1:
      int num1 = 313671055;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1713101265)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 396815389 ^ 855721965;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator();
      try
      {
label_12:
        int num3 = enumerator.MoveNext() ? 1295470310 : (num3 = 968116170);
        KeyValuePair<string, JSONNode> current;
        bool flag;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1713101265)) % 8U)
          {
            case 0:
              goto label_12;
            case 1:
              flag = JSONClass.\u200B‏‌‪⁫‪⁬‭⁪⁫⁫‬‎‌⁪​⁮‏‍‏⁫⁫‭‮‭‪​‭‍‮‭‮‫‌⁭‫‭‮⁪‮(str1) > 2;
              num3 = (int) num4 * -889668404 ^ -1635004176;
              continue;
            case 2:
              str1 = JSONClass.\u206A‏⁪‏⁫⁭​‍‌⁪‫‎‬​‍‪‫‮⁯‏‬‪‫‪​‍‫⁫⁭‪‫‬⁫⁮‍‫⁬​⁪⁬‮(str1, ", ");
              num3 = (int) num4 * -367462419 ^ 614989631;
              continue;
            case 4:
              str1 = JSONClass.\u202D‭⁮​‮‎⁯​‮⁭‮⁯‭⁪⁮‭‏⁫‭​⁯⁯⁮‏‬​⁭‪‪‭⁪‍⁭‏‍⁭⁬‍‪‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\":",
                JSONClass.\u202D‌‫‪⁪⁭⁫‏⁫⁬⁮‭‫‪‪‍⁬‮​⁯‮⁯‮⁭‫⁯‌⁪‍‍‬⁫‏⁭‍‏‭⁪‭⁭‮((object) current.Value)
              });
              num3 = 1818171433;
              continue;
            case 5:
              int num5 = flag ? -1755762556 : (num5 = -367084894);
              num3 = num5 ^ (int) num4 * 774161307;
              continue;
            case 6:
              num3 = 1295470310;
              continue;
            case 7:
              current = enumerator.Current;
              num3 = 915569360;
              continue;
            default:
              goto label_19;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_15:
        int num6 = 215910346;
        while (true)
        {
          uint num7;
          switch ((num7 = (uint) (num6 ^ 1713101265)) % 3U)
          {
            case 1:
              num6 = (int) num7 * -1467701923 ^ 1027139494;
              continue;
            case 2:
              goto label_15;
            default:
              goto label_18;
          }
        }
label_18:;
      }
label_19:
      string str2 = JSONClass.\u206A‏⁪‏⁫⁭​‍‌⁪‫‎‬​‍‪‫‮⁯‏‬‪‫‪​‍‫⁫⁭‪‫‬⁫⁮‍‫⁬​⁪⁬‮(str1, "}");
label_20:
      int num8 = 620083982;
      string str3;
      while (true)
      {
        uint num9;
        switch ((num9 = (uint) (num8 ^ 1713101265)) % 3U)
        {
          case 1:
            str3 = str2;
            num8 = (int) num9 * 138605387 ^ 569399329;
            continue;
          case 2:
            goto label_20;
          default:
            goto label_23;
        }
      }
label_23:
      return str3;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 482739043;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1453060887)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            str1 = "{ ";
            num1 = (int) num2 * 101873637 ^ -1941782643;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator();
      try
      {
label_8:
        int num3 = !enumerator.MoveNext() ? 2066070945 : (num3 = 1624281184);
        bool flag;
        KeyValuePair<string, JSONNode> current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1453060887)) % 8U)
          {
            case 0:
              flag = JSONClass.\u200B‏‌‪⁫‪⁬‭⁪⁫⁫‬‎‌⁪​⁮‏‍‏⁫⁫‭‮‭‪​‭‍‮‭‮‫‌⁭‫‭‮⁪‮(str1) > 3;
              num3 = (int) num4 * -1902352576 ^ -1599311042;
              continue;
            case 1:
              int num5 = flag ? -919287942 : (num5 = -786925123);
              num3 = num5 ^ (int) num4 * -35411705;
              continue;
            case 2:
              str1 = JSONClass.\u206A‏⁪‏⁫⁭​‍‌⁪‫‎‬​‍‪‫‮⁯‏‬‪‫‪​‍‫⁫⁭‪‫‬⁫⁮‍‫⁬​⁪⁬‮(str1, ", ");
              num3 = (int) num4 * 970392893 ^ 1316059272;
              continue;
            case 3:
              goto label_8;
            case 4:
              num3 = 1624281184;
              continue;
            case 5:
              str1 = JSONClass.\u200C‌⁯‪⁬‎⁮‭‌‭⁫​‬‭‌⁫⁮⁫​⁯‎⁭‫​‍⁭‮​⁭⁬‍‎​‌⁬‍‏⁬‌‍‮(str1, "\n", aPrefix, "   ");
              str1 = JSONClass.\u202D‭⁮​‮‎⁯​‮⁭‮⁯‭⁪⁮‭‏⁫‭​⁯⁯⁮‏‬​⁭‪‪‭⁪‍⁭‏‍⁭⁬‍‪‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\" : ",
                current.Value.ToString(JSONClass.\u206A‏⁪‏⁫⁭​‍‌⁪‫‎‬​‍‪‫‮⁯‏‬‪‫‪​‍‫⁫⁭‪‫‬⁫⁮‍‫⁬​⁪⁬‮(aPrefix, "   "))
              });
              num3 = 2009285852;
              continue;
            case 7:
              current = enumerator.Current;
              num3 = 859580623;
              continue;
            default:
              goto label_19;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_15:
        int num6 = 1918907269;
        while (true)
        {
          uint num7;
          switch ((num7 = (uint) (num6 ^ 1453060887)) % 3U)
          {
            case 1:
              num6 = (int) num7 * 1134636022 ^ 1745225750;
              continue;
            case 2:
              goto label_15;
            default:
              goto label_18;
          }
        }
label_18:;
      }
label_19:
      string str2 = JSONClass.\u200C‌⁯‪⁬‎⁮‭‌‭⁫​‬‭‌⁫⁮⁫​⁯‎⁭‫​‍⁭‮​⁭⁬‍‎​‌⁬‍‏⁬‌‍‮(str1, "\n", aPrefix, "}");
label_20:
      int num8 = 552122982;
      while (true)
      {
        uint num9;
        switch ((num9 = (uint) (num8 ^ 1453060887)) % 3U)
        {
          case 0:
            goto label_20;
          case 2:
            num8 = (int) num9 * 1293662742 ^ -1317725321;
            continue;
          default:
            goto label_23;
        }
      }
label_23:
      return str2;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = 525775225;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 186040932)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            JSONClass.\u206E‎‏‏​‪⁭⁭‮‪‪⁮⁪‭⁫‪‮‌⁭‮⁭​‭⁫‫⁬⁫​⁪‬​‭⁫⁫⁪‏​‌⁯‪‮(aWriter, (byte) 2);
            num1 = (int) num2 * 2078870460 ^ 1570290742;
            continue;
          case 2:
            num1 = (int) num2 * 1686220485 ^ 1242845457;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      JSONClass.\u200C‫⁮⁪‏‫‬‍‏‪‫​‍⁯⁯‎⁬⁮​‫⁪‏‌‮‏‫⁮⁭⁫‎​⁬‌⁭⁭‮⁮⁬‬‬‮(aWriter, this.m_Dict.Count);
      using (Dictionary<string, JSONNode>.KeyCollection.Enumerator enumerator = this.m_Dict.Keys.GetEnumerator())
      {
label_10:
        int num3 = !enumerator.MoveNext() ? 1139201791 : (num3 = 1095446802);
        string current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 186040932)) % 9U)
          {
            case 0:
              num3 = 1095446802;
              continue;
            case 1:
              num3 = (int) num4 * 1125362953 ^ -873651281;
              continue;
            case 2:
              num3 = (int) num4 * 350537579 ^ 1609547399;
              continue;
            case 3:
              JSONClass.\u202A​‪‎‬‫⁪‮⁮⁯⁫‭⁬‏‎‍‫‍⁯⁭‬‏​‌‏⁪‎‮​⁭‎‌⁮⁮‮⁪‫‮‬‍‮(aWriter, current);
              num3 = (int) num4 * -1589391316 ^ -2026319242;
              continue;
            case 4:
              this.m_Dict[current].Serialize(aWriter);
              num3 = (int) num4 * 207901583 ^ -751276985;
              continue;
            case 5:
              goto label_10;
            case 6:
              current = enumerator.Current;
              num3 = 1753528800;
              continue;
            case 7:
              goto label_17;
            case 8:
              num3 = (int) num4 * 950730810 ^ -502760061;
              continue;
            default:
              goto label_9;
          }
        }
label_17:
        return;
label_9:;
      }
    }

    static bool \u200E‪‭‪‏‪⁪‏‮‍⁭‭‮‎‫‫⁬⁮⁬⁫⁯‎‌⁬‎‫⁭‎‭‪‌‭​‪‪‭‮‮⁪‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    static int \u200B‏‌‪⁫‪⁬‭⁪⁫⁫‬‎‌⁪​⁮‏‍‏⁫⁫‭‮‭‪​‭‍‮‭‮‫‌⁭‫‭‮⁪‮([In] string obj0) => obj0.Length;

    static string \u206A‏⁪‏⁫⁭​‍‌⁪‫‎‬​‍‪‫‮⁯‏‬‪‫‪​‍‫⁫⁭‪‫‬⁫⁮‍‫⁬​⁪⁬‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u202D‌‫‪⁪⁭⁫‏⁫⁬⁮‭‫‪‪‍⁬‮​⁯‮⁯‮⁭‫⁯‌⁪‍‍‬⁫‏⁭‍‏‭⁪‭⁭‮([In] object obj0) => obj0.ToString();

    static string \u202D‭⁮​‮‎⁯​‮⁭‮⁯‭⁪⁮‭‏⁫‭​⁯⁯⁮‏‬​⁭‪‪‭⁪‍⁭‏‍⁭⁬‍‪‮([In] string[] obj0) => string.Concat(obj0);

    static string \u200C‌⁯‪⁬‎⁮‭‌‭⁫​‬‭‌⁫⁮⁫​⁯‎⁭‫​‍⁭‮​⁭⁬‍‎​‌⁬‍‏⁬‌‍‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u206E‎‏‏​‪⁭⁭‮‪‪⁮⁪‭⁫‪‮‌⁭‮⁭​‭⁫‫⁬⁫​⁪‬​‭⁫⁫⁪‏​‌⁯‪‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u200C‫⁮⁪‏‫‬‍‏‪‫​‍⁯⁯‎⁬⁮​‫⁪‏‌‮‏‫⁮⁭⁫‎​⁬‌⁭⁭‮⁮⁬‬‬‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u202A​‪‎‬‫⁪‮⁮⁯⁫‭⁬‏‎‍‫‍⁯⁭‬‏​‌‏⁪‎‮​⁭‎‌⁮⁮‮⁪‫‮‬‍‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
