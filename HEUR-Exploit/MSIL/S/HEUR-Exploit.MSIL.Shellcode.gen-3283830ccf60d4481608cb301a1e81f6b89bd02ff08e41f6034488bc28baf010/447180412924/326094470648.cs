// Decompiled with JetBrains decompiler
// Type: 447180412924.326094470648
// Assembly: 087135227926, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
// MVID: 0DB320EA-9C28-4716-BA63-69641BABDE67
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-3283830ccf60d4481608cb301a1e81f6b89bd02ff08e41f6034488bc28baf010.exe

using \u003036381570747;
using \u003447180412924;
using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;

namespace \u003447180412924
{
  [Obsolete("JSON Schema validation has been moved to its own package. See http://www.newtonsoft.com/jsonschema for more details.")]
  internal class \u003326094470648
  {
    public string \u003604914865518 { get; }

    public ReadOnlyCollection<\u003063117452251> \u003644271655325 { get; }

    public Dictionary<string, \u003326094470648> \u003580192072069 { get; }

    public Dictionary<string, \u003326094470648> \u003205225477801 { get; }

    public List<\u003326094470648> \u003792561201950 { get; }

    public \u003326094470648 \u003890030466428 { get; set; }

    public \u003326094470648 \u003394414929849 { get; set; }

    public \u003326094470648(\u003063117452251 schema)
    {
      this.\u003644271655325 = new ReadOnlyCollection<\u003063117452251>((IList<\u003063117452251>) new \u003063117452251[1]
      {
        schema
      });
      this.\u003580192072069 = new Dictionary<string, \u003326094470648>();
      this.\u003205225477801 = new Dictionary<string, \u003326094470648>();
      this.\u003792561201950 = new List<\u003326094470648>();
      this.\u003604914865518 = \u003326094470648.\u003535815801017((IEnumerable<\u003063117452251>) this.\u003644271655325);
    }

    private \u003326094470648(\u003326094470648 source, \u003063117452251 schema)
    {
      this.\u003644271655325 = new ReadOnlyCollection<\u003063117452251>((IList<\u003063117452251>) source.\u003644271655325.Union<\u003063117452251>((IEnumerable<\u003063117452251>) new \u003063117452251[1]
      {
        schema
      }).ToList<\u003063117452251>());
      this.\u003580192072069 = new Dictionary<string, \u003326094470648>((IDictionary<string, \u003326094470648>) source.\u003580192072069);
      this.\u003205225477801 = new Dictionary<string, \u003326094470648>((IDictionary<string, \u003326094470648>) source.\u003205225477801);
      this.\u003792561201950 = new List<\u003326094470648>((IEnumerable<\u003326094470648>) source.\u003792561201950);
      this.\u003890030466428 = source.\u003890030466428;
      this.\u003394414929849 = source.\u003394414929849;
      this.\u003604914865518 = \u003326094470648.\u003535815801017((IEnumerable<\u003063117452251>) this.\u003644271655325);
    }

    public \u003326094470648 \u003994520563221(\u003063117452251 _param1) => new \u003326094470648(this, _param1);

    public static string \u003535815801017(IEnumerable<\u003063117452251> _param0) => string.Join("-", (IEnumerable<string>) _param0.Select<\u003063117452251, string>((Func<\u003063117452251, string>) (_param1 => _param1.\u003207639295741)).OrderBy<string, string>((Func<string, string>) (_param1 => _param1), (IComparer<string>) StringComparer.Ordinal));
  }
}
