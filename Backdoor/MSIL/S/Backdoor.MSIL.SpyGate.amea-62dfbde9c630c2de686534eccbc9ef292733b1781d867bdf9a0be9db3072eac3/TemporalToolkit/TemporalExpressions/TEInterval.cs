// Decompiled with JetBrains decompiler
// Type: TemporalToolkit.TemporalExpressions.TEInterval
// Assembly: AssertFilt, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: D82097A6-A4CE-4A4A-9933-E78378BA7CC6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.05\Backdoor.MSIL.SpyGate.amea-62dfbde9c630c2de686534eccbc9ef292733b1781d867bdf9a0be9db3072eac3.exe

using System;
using TemporalToolkit.Extensions;
using TemporalToolkit.Utils;

namespace TemporalToolkit.TemporalExpressions
{
  public class TEInterval : TemporalExpression
  {
    public int Interval;
    public DateTime Start;

    public IntervalPrecision Precision { get; set; }

    public TEInterval(DateTime start, int interval, IntervalPrecision precision)
    {
label_1:
      int num1 = 225326251;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1459423689)) % 6U)
        {
          case 1:
            this.Start = start;
            num1 = (int) num2 * -1178942482 ^ -261663105;
            continue;
          case 2:
            goto label_1;
          case 3:
            this.Precision = precision;
            num1 = (int) num2 * -1409850172 ^ -2091491212;
            continue;
          case 4:
            num1 = (int) num2 * -328862368 ^ -1106960986;
            continue;
          case 5:
            num1 = (int) num2 * -1404252500 ^ -1979712560;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      this.Interval = interval;
    }

    public override bool Includes(DateTime aDate)
    {
label_1:
      int num1 = 748903625;
      DateDifference dateDifference;
      bool flag1;
      bool flag2;
      TimeSpan timeSpan1;
      IntervalPrecision precision;
      TimeSpan timeSpan2;
      DateTime dateTime1;
      TimeSpan timeSpan3;
      TimeSpan timeSpan4;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 209683470)) % 33U)
        {
          case 0:
label_3:
            num1 = 767437226;
            continue;
          case 1:
            num1 = (int) num2 * 297619964 ^ 1509820497;
            continue;
          case 2:
            dateDifference = new DateDifference(this.Start, aDate);
            num1 = (int) num2 * 984427161 ^ -786939464;
            continue;
          case 3:
            num1 = (int) num2 * -1774938699 ^ -1717633598;
            continue;
          case 4:
label_16:
            num1 = 931082709;
            continue;
          case 5:
            int num3 = !flag1 ? -1005210542 : (num3 = -2052342499);
            num1 = num3 ^ (int) num2 * 2137691915;
            continue;
          case 6:
            DateTime dateTime2 = new DateTime(aDate.Year, aDate.Month, aDate.Day).StartOfWeek();
            timeSpan3 = dateTime1 - dateTime2;
            num1 = (int) num2 * -425565351 ^ -891067700;
            continue;
          case 7:
            num1 = (int) num2 * -1549193691 ^ -1240582914;
            continue;
          case 8:
            num1 = (int) num2 * 706129094 ^ -627945897;
            continue;
          case 9:
label_19:
            num1 = 1894444259;
            continue;
          case 10:
label_23:
            timeSpan4 = this.Start - aDate;
            num1 = 620717378;
            continue;
          case 11:
            flag2 = new DateDifference(this.Start, aDate).TotalMonths % this.Interval == 0;
            num1 = (int) num2 * 1907195678 ^ -1245794213;
            continue;
          case 12:
            dateTime1 = new DateTime(this.Start.Year, this.Start.Month, this.Start.Day).StartOfWeek();
            num1 = (int) num2 * -1328742685 ^ -758687928;
            continue;
          case 13:
            flag2 = timeSpan4.Minutes % this.Interval == 0;
            num1 = (int) num2 * -2077761646 ^ -1490480176;
            continue;
          case 14:
label_26:
            num1 = 814937098;
            continue;
          case 15:
            flag2 = timeSpan2.Hours % this.Interval == 0;
            num1 = (int) num2 * 2138504962 ^ -2143625213;
            continue;
          case 16:
label_31:
            num1 = 1431924557;
            continue;
          case 17:
            flag2 = timeSpan1.Seconds % this.Interval == 0;
            num1 = (int) num2 * -2064129706 ^ 132561601;
            continue;
          case 18:
            goto label_1;
          case 19:
            num1 = (int) num2 * 1184096624 ^ -1771160364;
            continue;
          case 20:
            switch (precision)
            {
              case IntervalPrecision.Seconds:
                goto label_34;
              case IntervalPrecision.Minutes:
                goto label_23;
              case IntervalPrecision.Hours:
                goto label_31;
              case IntervalPrecision.Days:
                goto label_26;
              case IntervalPrecision.Weeks:
                goto label_16;
              case IntervalPrecision.Months:
                goto label_3;
              case IntervalPrecision.Hours | IntervalPrecision.Days:
                goto label_22;
              case IntervalPrecision.Years:
                goto label_19;
              default:
                num1 = (int) num2 * -205037788 ^ -710853353;
                continue;
            }
          case 21:
            flag2 = dateDifference.Years % this.Interval == 0;
            num1 = (int) num2 * 1456628300 ^ -1914165533;
            continue;
          case 22:
            num1 = (int) num2 * 107207395 ^ 242732062;
            continue;
          case 23:
            DateTime dateTime3 = new DateTime(this.Start.Year, this.Start.Month, this.Start.Day);
            DateTime dateTime4 = new DateTime(aDate.Year, aDate.Month, aDate.Day);
            flag2 = (dateTime3 - aDate).Days % this.Interval == 0;
            num1 = (int) num2 * -908539696 ^ -844405579;
            continue;
          case 24:
            precision = this.Precision;
            num1 = 1330955394;
            continue;
          case 25:
            flag2 = false;
            num1 = (int) num2 * 1198198353 ^ -1897960732;
            continue;
          case 26:
            num1 = (int) num2 * -245902714 ^ -1164454001;
            continue;
          case 27:
            goto label_22;
          case 28:
            flag1 = aDate < this.Start;
            num1 = (int) num2 * 1651538016 ^ -515665548;
            continue;
          case 29:
            flag2 = timeSpan3.Days % (this.Interval * 7) == 0;
            num1 = (int) num2 * 807735056 ^ -1287514191;
            continue;
          case 30:
            timeSpan2 = this.Start - aDate;
            num1 = (int) num2 * -389656287 ^ 1746897392;
            continue;
          case 32:
label_34:
            timeSpan1 = this.Start - aDate;
            num1 = 156616405;
            continue;
          default:
            goto label_35;
        }
      }
label_22:
      throw TEInterval.\u202C‍‌‪⁮‪‎⁪‪‎⁫‍⁫⁭⁯​‪‬‌‪⁮⁫‌‏‮⁯‎‍‬⁯⁭⁯‍⁯‎‍‭‌⁪⁮‮();
label_35:
      return flag2;
    }

    static NotImplementedException \u202C‍‌‪⁮‪‎⁪‪‎⁫‍⁫⁭⁯​‪‬‌‪⁮⁫‌‏‮⁯‎‍‬⁯⁭⁯‍⁯‎‍‭‌⁪⁮‮() => new NotImplementedException();
  }
}
