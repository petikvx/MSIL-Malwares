// Decompiled with JetBrains decompiler
// Type: Cradiator.Converters.StateToGradientConverter
// Assembly: EvidenceTypeDescript, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B50F5F07-D63E-4094-B80D-E78774C87D41
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan.MSIL.Crypt.gen-c59c8e3be7ec42553ff6af2588e3bcd0569e9467dbb9307218fb8724e02739f2.exe

using Cradiator.Services;
using System;
using System.Globalization;
using System.Windows.Data;
using System.Windows.Markup;
using System.Windows.Media;

namespace Cradiator.Converters
{
  [MarkupExtensionReturnType(typeof (StateToGradientConverter))]
  [ValueConversion(typeof (string), typeof (Color))]
  public class StateToGradientConverter : MarkupExtension, IValueConverter
  {
    public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
    {
      string lower = value.ToString().ToLower();
      if (lower == "success" || lower == "normal")
        return (object) Colors.LightGreen;
      if (lower == "building")
        return (object) Color.FromArgb(byte.MaxValue, byte.MaxValue, byte.MaxValue, (byte) 200);
      return lower == "failure" || lower == "exception" || lower == "error" ? (object) Color.FromArgb(byte.MaxValue, byte.MaxValue, (byte) 150, (byte) 150) : (object) Colors.White;
    }

    public object ConvertBack(
      object value,
      Type targetType,
      object parameter,
      CultureInfo culture)
    {
      return (object) null;
    }

    public override object ProvideValue(IServiceProvider serviceProvider) => (object) Ninjector.Get<StateToGradientConverter>();
  }
}
