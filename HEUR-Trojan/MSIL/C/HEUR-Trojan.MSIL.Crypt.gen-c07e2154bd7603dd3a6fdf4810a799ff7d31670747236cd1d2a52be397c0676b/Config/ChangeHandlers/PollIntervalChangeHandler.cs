// Decompiled with JetBrains decompiler
// Type: Cradiator.Config.ChangeHandlers.PollIntervalChangeHandler
// Assembly: FileOptio, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 0135208B-21B4-457A-BFCD-FFD93FD8BA14
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan.MSIL.Crypt.gen-c07e2154bd7603dd3a6fdf4810a799ff7d31670747236cd1d2a52be397c0676b.exe

using Cradiator.Model;

namespace Cradiator.Config.ChangeHandlers
{
  public class PollIntervalChangeHandler : IConfigChangeHandler
  {
    private readonly IPollTimer _pollTimer;
    private readonly ICountdownTimer _countdownTimer;

    public PollIntervalChangeHandler(IPollTimer pollTimer, ICountdownTimer countTimer)
    {
      this._pollTimer = pollTimer;
      this._countdownTimer = countTimer;
    }

    void IConfigChangeHandler.ConfigUpdated(ConfigSettings newSettings)
    {
      lock (this._pollTimer)
      {
        if (!(this._pollTimer.Interval != newSettings.PollFrequencyTimeSpan))
          return;
        this._pollTimer.Stop();
        this._pollTimer.Interval = newSettings.PollFrequencyTimeSpan;
        lock (this._countdownTimer)
        {
          this._countdownTimer.PollFrequency = newSettings.PollFrequencyTimeSpan;
          this._countdownTimer.Reset();
        }
        this._pollTimer.Start();
      }
    }
  }
}
