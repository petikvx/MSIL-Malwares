// Decompiled with JetBrains decompiler
// Type: 
// Assembly: directx, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E1A2C9B9-DC80-4868-94B5-74DF307BFC32
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Foreign.ggnv-252b3db5f86199bed7197469826a07759a9f10473f4f37cffa6ec35b16d615b0.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Threading;

internal static class \u0003
{
  internal sealed class \u0002 : 
    IEnumerable<int>,
    IEnumerator<int>,
    IEnumerable,
    IEnumerator,
    IDisposable
  {
    private int \u0002;
    private int \u0003;
    private int \u0005;
    public int \u0008;
    public int \u0006;
    public int \u000E;
    public int \u000F;
    public int \u0002\u2000;
    public IEnumerator<int> \u0003\u2000;

    [DebuggerHidden]
    public \u0002(int _param1)
    {
      this.\u0003 = _param1;
      this.\u0005 = Thread.CurrentThread.ManagedThreadId;
    }

    [DebuggerHidden]
    IEnumerator<int> IEnumerable<int>.\u0002\u2004\u200A\u2001\u0002()
    {
      \u0003.\u0002 obj;
      if (Thread.CurrentThread.ManagedThreadId == this.\u0005 && this.\u0003 == -2)
      {
        this.\u0003 = 0;
        obj = this;
      }
      else
        obj = new \u0003.\u0002(0);
      obj.\u0008 = this.\u0006;
      return (IEnumerator<int>) obj;
    }

    [DebuggerHidden]
    IEnumerator IEnumerable.\u0002\u2004\u200A\u2001\u0002() => (IEnumerator) this.\u0002\u2004\u200A\u2001\u0002();

    bool IEnumerator.MoveNext()
    {
      // ISSUE: fault handler
      try
      {
        switch (this.\u0003)
        {
          case 0:
            this.\u0003 = -1;
            this.\u000E = 7;
            int num = this.\u0008;
            this.\u0003\u2000 = ((IEnumerable<int>) new \u0003.\u0003(-2)
            {
              \u0006 = num
            }).GetEnumerator();
            this.\u0003 = 1;
            break;
          case 2:
            this.\u0003 = 1;
            if (this.\u000E == 0)
            {
              this.\u0002\u2004\u200A\u2001\u0003();
              goto default;
            }
            else
              break;
          default:
label_11:
            return false;
        }
        if (this.\u0003\u2000.MoveNext())
        {
          this.\u000F = this.\u0003\u2000.Current;
          this.\u0002\u2000 = this.\u000F ^ this.\u0008;
          if ((this.\u0002\u2000 & 3) == 0)
            this.\u0002\u2000 ^= 1622458211;
          --this.\u000E;
          if ((this.\u0002\u2000 & 15) == 0)
            this.\u0002\u2000 ^= -1176753182;
          this.\u0002 = this.\u0002\u2000;
          this.\u0003 = 2;
          return true;
        }
        this.\u0005();
        goto label_11;
      }
      __fault
      {
        this.\u0002\u2004\u200A\u2001\u0003();
      }
    }

    [DebuggerHidden]
    int IEnumerator<int>.\u0002\u2004\u200A\u2001\u0002() => this.\u0002;

    [DebuggerHidden]
    void IEnumerator.\u0002\u2004\u200A\u2001\u0002() => throw new NotSupportedException();

    void IDisposable.\u0002\u2004\u200A\u2001\u0003()
    {
      switch (this.\u0003)
      {
        case 1:
        case 2:
          try
          {
          }
          finally
          {
            this.\u0005();
          }
          break;
      }
    }

    [DebuggerHidden]
    object IEnumerator.\u0002\u2004\u200A\u2001\u0002() => (object) this.\u0002;

    private void \u0005()
    {
      this.\u0003 = -1;
      if (this.\u0003\u2000 == null)
        return;
      this.\u0003\u2000.Dispose();
    }
  }

  internal sealed class \u0003 : 
    IEnumerable<int>,
    IEnumerator<int>,
    IEnumerable,
    IEnumerator,
    IDisposable
  {
    private int \u0002;
    private int \u0003;
    private int \u0005;
    public int \u0008;
    public int \u0006;
    public int \u000E;
    public int \u000F;
    public int \u0002\u2000;

    [DebuggerHidden]
    public \u0003(int _param1)
    {
      this.\u0003 = _param1;
      this.\u0005 = Thread.CurrentThread.ManagedThreadId;
    }

    [DebuggerHidden]
    IEnumerator<int> IEnumerable<int>.\u0003\u2004\u200A\u2001\u0002()
    {
      \u0003.\u0003 obj;
      if (Thread.CurrentThread.ManagedThreadId == this.\u0005 && this.\u0003 == -2)
      {
        this.\u0003 = 0;
        obj = this;
      }
      else
        obj = new \u0003.\u0003(0);
      obj.\u0008 = this.\u0006;
      return (IEnumerator<int>) obj;
    }

    [DebuggerHidden]
    IEnumerator IEnumerable.\u0003\u2004\u200A\u2001\u0002() => (IEnumerator) this.\u0003\u2004\u200A\u2001\u0002();

    bool IEnumerator.MoveNext()
    {
      switch (this.\u0003)
      {
        case 0:
          this.\u0003 = -1;
          this.\u000E = 0;
          this.\u000F = 1;
          break;
        case 1:
          this.\u0003 = -1;
          --this.\u0008;
          if (this.\u0008 != 0)
          {
            this.\u0002\u2000 = this.\u000F;
            this.\u000F = this.\u0002\u2000 + this.\u000E + this.\u0008 ^ -1510032625;
            this.\u000E = this.\u0002\u2000;
            break;
          }
          goto default;
        default:
          return false;
      }
      this.\u0002 = this.\u000F;
      this.\u0003 = 1;
      return true;
    }

    [DebuggerHidden]
    int IEnumerator<int>.\u0003\u2004\u200A\u2001\u0002() => this.\u0002;

    [DebuggerHidden]
    void IEnumerator.\u0003\u2004\u200A\u2001\u0002() => throw new NotSupportedException();

    void IDisposable.\u0003\u2004\u200A\u2001\u0003()
    {
    }

    [DebuggerHidden]
    object IEnumerator.\u0003\u2004\u200A\u2001\u0002() => (object) this.\u0002;
  }
}
