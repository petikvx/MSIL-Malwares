// Decompiled with JetBrains decompiler
// Type: .
// Assembly: BitGenerator, Version=37.0.2.5583, Culture=neutral, PublicKeyToken=70e4c26ef2031892
// MVID: D3922F89-E00A-4D10-8BC9-9309D5539F14
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\Trojan.Win32.Scar.nxii-31823040d8ccb20eab0b8653d01af370a6537017e69ead69f6f7b73d6ef7ac14.exe

using \u0016;
using System.Collections.Generic;
using System.Linq;

namespace \u0016
{
  internal static class \u0005
  {
    internal static readonly bool[] \u0001 = new bool[128];
    internal static readonly bool[] \u0002 = new bool[128];
    internal static readonly bool[] \u0003 = new bool[128];

    static \u0005()
    {
      List<char> charList = new List<char>();
      charList.Add('\n');
      charList.Add('\r');
      charList.Add('\t');
      charList.Add('\\');
      charList.Add('\f');
      if (true)
        charList.Add('\b');
      IList<char> first = (IList<char>) charList;
      int num;
      if (true)
        num = 0;
      for (; num < 32; ++num)
        first.Add((char) num);
      IEnumerator<char> enumerator1 = first.Union<char>((IEnumerable<char>) new char[1]
      {
        '\''
      }).GetEnumerator();
      try
      {
        while (\u0015\u0002.\u007E\u009E\u0004((object) enumerator1))
        {
          char current = enumerator1.Current;
          \u0005.\u0001[(int) current] = true;
        }
      }
      finally
      {
        if (enumerator1 != null)
          \u0011.\u007E\u0007\u0002((object) enumerator1);
      }
      IEnumerator<char> enumerator2 = first.Union<char>((IEnumerable<char>) new char[1]
      {
        '"'
      }).GetEnumerator();
      try
      {
        while (\u0015\u0002.\u007E\u009E\u0004((object) enumerator2))
        {
          if (true)
          {
            char current = enumerator2.Current;
            \u0005.\u0002[(int) current] = true;
          }
          else
            break;
        }
      }
      finally
      {
        if (enumerator2 != null)
          \u0011.\u007E\u0007\u0002((object) enumerator2);
      }
      IEnumerator<char> enumerator3 = first.Union<char>((IEnumerable<char>) new char[5]
      {
        '"',
        '\'',
        '<',
        '>',
        '&'
      }).GetEnumerator();
      try
      {
        while (\u0015\u0002.\u007E\u009E\u0004((object) enumerator3))
        {
          char current = enumerator3.Current;
          \u0005.\u0003[(int) current] = true;
        }
      }
      finally
      {
        if (enumerator3 != null)
          \u0011.\u007E\u0007\u0002((object) enumerator3);
      }
    }
  }
}
