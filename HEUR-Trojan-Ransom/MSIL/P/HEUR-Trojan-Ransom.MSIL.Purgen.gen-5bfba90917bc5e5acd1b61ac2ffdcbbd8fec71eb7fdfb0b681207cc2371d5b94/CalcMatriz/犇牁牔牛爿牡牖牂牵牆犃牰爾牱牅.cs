// Decompiled with JetBrains decompiler
// Type: CalcMatriz.犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅
// Assembly: ꌳꌆꍁꋿꌕꌜꌇꌆꌄꌄꍀꌄꌁꍁꌕ, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FAF82406-93DC-4D5D-948A-CEB8E42B10A6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.12-msil\HEUR-Trojan-Ransom.MSIL.Purgen.gen-5bfba90917bc5e5acd1b61ac2ffdcbbd8fec71eb7fdfb0b681207cc2371d5b94.exe

using System;
using System.Collections.Generic;
using System.Data;
using System.Windows;
using System.Windows.Media;

namespace CalcMatriz
{
  public class 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅
  {
    public int 䔭䓼䔑䓻䔥䓻䓹䔦䓸䔥䔆䔮䔎䔷䔦;
    public int ჾᄀᄋᄹᄘᄴჿჽᄐᄀჼᄻᄕᄺᄰ;
    public double[,] 켰콲콑켵켶켵켸켸켱켲콦켰콚콤켱;
    public double 綍綢緒綨經綼緁綽綐緎綔綼綾綒綑;
    public static List<double> ᬛ\u1ADC\u1AE0\u1AEB\u1AE0ᬍ\u1AE1\u1ADFᬞᬍ\u1ADFᬊ\u1AE0ᬀ\u1AEE = new List<double>();

    public static double 쌄쌀쌜쌆쌀쌇쌶싿쌲썆쌢쌲썇쌱쌄(string 魯魦魼魤鬴鬴魱魽魻鬼魙魰魨魺鬹)
    {
      DataTable dataTable = new DataTable();
      dataTable.Columns.Add(\u003CModule\u003E.箋範箇箃箋算箇箸箆箥箄箷箴箃箧(), typeof (string), 魯魦魼魤鬴鬴魱魽魻鬼魙魰魨魺鬹);
      DataRow row = dataTable.NewRow();
      dataTable.Rows.Add(row);
      return double.Parse((string) row[\u003CModule\u003E.淙淅涓涳淈淄淄涗涓涖涕淇淅涚淋()]);
    }

    public static 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 \u3229\u3256\u3253\u3222\u3242\u3228\u3252\u3253\u3229\u3224\u325B\u3224\u326A\u3221\u3254(
      string 譓譢譆謴譡譡謸謱譢譫謱譔譗警譢)
    {
      if (string.IsNullOrEmpty(譓譢譆謴譡譡謸謱譢譫謱譔譗警譢))
        return new 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅(0, 0);
      string[] strArray1 = 譓譢譆謴譡譡謸謱譢譫謱譔譗警譢.Split(new char[2]
      {
        '\n',
        '\r'
      }, StringSplitOptions.RemoveEmptyEntries);
      犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅1 = new 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅(strArray1.Length, strArray1[0].Split(' ').Length);
      string[] strArray2 = strArray1[0].Split(' ');
      for (int index1 = 0; index1 < strArray1.Length; ++index1)
      {
        for (int index2 = 0; index2 < strArray2.Length; ++index2)
        {
          犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅2 = 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅1;
          int num1 = index1;
          int num2 = index2;
          string s;
          if (string.IsNullOrWhiteSpace(strArray1[index1].Split(' ')[index2]))
            s = \u003CModule\u003E.푚푂푟퐠푞퐾퐼퐢퐟퐣퐰푒퐣퐦푏();
          else
            s = strArray1[index1].Split(' ')[index2];
          double num3 = double.Parse(s);
          犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅2.ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(num1, num2, num3);
        }
      }
      return 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅1;
    }

    public static 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 ԷԉՊԎԉԸԆԨԺԍԷԺԸԍԎ(
      犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 _param0,
      double 頒韥韤頒韨韦韥頥韦韤韣頒頔韥韧,
      double 狉狜狇犙犟犬犨犗狋犚狞犗犙犛犛)
    {
      犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 㑉㐹㐞㑉㐜㑒㑈㐘㐝㐫㑠㐞㑚㑉㐠 = new 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅(2, 2);
      㑉㐹㐞㑉㐜㑒㑈㐘㐝㐫㑠㐞㑚㑉㐠.ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(0, 0, 頒韥韤頒韨韦韥頥韦韤韣頒頔韥韧);
      㑉㐹㐞㑉㐜㑒㑈㐘㐝㐫㑠㐞㑚㑉㐠.ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(0, 1, 0.0);
      㑉㐹㐞㑉㐜㑒㑈㐘㐝㐫㑠㐞㑚㑉㐠.ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(1, 0, 0.0);
      㑉㐹㐞㑉㐜㑒㑈㐘㐝㐫㑠㐞㑚㑉㐠.ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(1, 1, 狉狜狇犙犟犬犨犗狋犚狞犗犙犛犛);
      return 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.\uE565\uE536\uE561\uE536\uE535\uE557\uE530\uE537\uE536\uE530\uE532\uE560\uE534\uE55F\uE561(㑉㐹㐞㑉㐜㑒㑈㐘㐝㐫㑠㐞㑚㑉㐠, _param0);
    }

    public static 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 쐰쐗쐕쐒쐨쐷쐐쐔쐑쐕쐤쐖쐲쐔쑔(
      犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 鲡鲏鲐鳁鲒鳁鲎鲕鲱鲟鲥鳘鲓鲒鲑,
      double _param1,
      double 乼乹乌乺争义乏乍乑乹乌乹乹乐乊)
    {
      犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 鸘鹖鹁鸚鸜鹝鸟鹠鹖鸟鸘鸘鸟鸚鸠 = new 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅(鲡鲏鲐鳁鲒鳁鲎鲕鲱鲟鲥鳘鲓鲒鲑.䔭䓼䔑䓻䔥䓻䓹䔦䓸䔥䔆䔮䔎䔷䔦, 鲡鲏鲐鳁鲒鳁鲎鲕鲱鲟鲥鳘鲓鲒鲑.ჾᄀᄋᄹᄘᄴჿჽᄐᄀჼᄻᄕᄺᄰ);
      for (int index = 0; index < 鲡鲏鲐鳁鲒鳁鲎鲕鲱鲟鲥鳘鲓鲒鲑.ჾᄀᄋᄹᄘᄴჿჽᄐᄀჼᄻᄕᄺᄰ; ++index)
      {
        鸘鹖鹁鸚鸜鹝鸟鹠鹖鸟鸘鸘鸟鸚鸠.ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(0, index, _param1);
        鸘鹖鹁鸚鸜鹝鸟鹠鹖鸟鸘鸘鸟鸚鸠.ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(1, index, -乼乹乌乺争义乏乍乑乹乌乹乹乐乊);
      }
      return 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.攚擡攋擾據攋擙擘據擛攍擝攎擘擴(鸘鹖鹁鸚鸜鹝鸟鹠鹖鸟鸘鸘鸟鸚鸠, 鲡鲏鲐鳁鲒鳁鲎鲕鲱鲟鲥鳘鲓鲒鲑);
    }

    public static 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 뼪뽆뼪뽚뽗뼮뼪뼮뽙뼧뼫뽣뽗뼷뽗(犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 䆐䅡䆨䅵䆑䆃䅡䆧䆥䆒䅨䅿䆈䆑䅠)
    {
      犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅1 = new 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅(䆐䅡䆨䅵䆑䆃䅡䆧䆥䆒䅨䅿䆈䆑䅠.䔭䓼䔑䓻䔥䓻䓹䔦䓸䔥䔆䔮䔎䔷䔦, 䆐䅡䆨䅵䆑䆃䅡䆧䆥䆒䅨䅿䆈䆑䅠.ჾᄀᄋᄹᄘᄴჿჽᄐᄀჼᄻᄕᄺᄰ);
      for (int 쭼쭶쮸쮪쮶쭹쮶쭷쭵쮧쮨쭴쭸쭸쭷 = 0; 쭼쭶쮸쮪쮶쭹쮶쭷쭵쮧쮨쭴쭸쭸쭷 < 䆐䅡䆨䅵䆑䆃䅡䆧䆥䆒䅨䅿䆈䆑䅠.䔭䓼䔑䓻䔥䓻䓹䔦䓸䔥䔆䔮䔎䔷䔦; ++쭼쭶쮸쮪쮶쭹쮶쭷쭵쮧쮨쭴쭸쭸쭷)
      {
        for (int 쵿췄쵾춀춄춯쵽춹춃춮춻쵽쵽춄춭 = 0; 쵿췄쵾춀춄춯쵽춹춃춮춻쵽쵽춄춭 < 䆐䅡䆨䅵䆑䆃䅡䆧䆥䆒䅨䅿䆈䆑䅠.ჾᄀᄋᄹᄘᄴჿჽᄐᄀჼᄻᄕᄺᄰ; ++쵿췄쵾춀춄춯쵽춹춃춮춻쵽쵽춄춭)
          犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅1.ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(쭼쭶쮸쮪쮶쭹쮶쭷쭵쮧쮨쭴쭸쭸쭷, 쵿췄쵾춀춄춯쵽춹춃춮춻쵽쵽춄춭, Math.Pow(-1.0, (double) (쭼쭶쮸쮪쮶쭹쮶쭷쭵쮧쮨쭴쭸쭸쭷 + 쵿췄쵾춀춄춯쵽춹춃춮춻쵽쵽춄춭)) * 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.퐦폹퐷퐍폺퐦퐩폸퐨폵퐧퐯퐱퐲퐗(犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.ǦƻǲǔǓƽƾƸǮǑǖǬǓǝǆ(쭼쭶쮸쮪쮶쭹쮶쭷쭵쮧쮨쭴쭸쭸쭷, 쵿췄쵾춀춄춯쵽춹춃춮춻쵽쵽춄춭, 䆐䅡䆨䅵䆑䆃䅡䆧䆥䆒䅨䅿䆈䆑䅠)));
      }
      犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅2 = 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅1.\uF7B8\uF7DD\uF7B4\uF7B7\uF7B3\uF7FC\uF7F0\uF7BB\uF7D3\uF7B9\uF7E5\uF7D3\uF7CD\uF7E5\uF7E5();
      return 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.趶跴趶跨趽跋跪跘跨趺跨趹跪跳跽(犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.퐦폹퐷퐍폺퐦퐩폸퐨폵퐧퐯퐱퐲퐗(䆐䅡䆨䅵䆑䆃䅡䆧䆥䆒䅨䅿䆈䆑䅠), 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅2, \u003CModule\u003E.䓋䓉䓃䔌䓇䓜䓷䓵䔈䓳䔅䓃䓃䔁䓇());
    }

    public static 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 蓡蒨蒦蓖蓪蒢蓕蒨蓙蒪蓃蓔蒧蒩蒢(
      犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 왡왤옲옴왍왥왞왆올왟왐옯옱옮왲,
      double 㑁㐻㐺㐬㐼㐐㐏㐻㐢㐺㐍㐉㐊㐍㐼)
    {
      犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 㑉㐹㐞㑉㐜㑒㑈㐘㐝㐫㑠㐞㑚㑉㐠 = new 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅(2, 2);
      㑉㐹㐞㑉㐜㑒㑈㐘㐝㐫㑠㐞㑚㑉㐠.ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(0, 0, Math.Round(Math.Cos(㑁㐻㐺㐬㐼㐐㐏㐻㐢㐺㐍㐉㐊㐍㐼 * (Math.PI / 180.0)), 2));
      㑉㐹㐞㑉㐜㑒㑈㐘㐝㐫㑠㐞㑚㑉㐠.ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(0, 1, Math.Round(-Math.Sin(㑁㐻㐺㐬㐼㐐㐏㐻㐢㐺㐍㐉㐊㐍㐼 * (Math.PI / 180.0)), 2));
      㑉㐹㐞㑉㐜㑒㑈㐘㐝㐫㑠㐞㑚㑉㐠.ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(1, 0, Math.Round(Math.Sin(㑁㐻㐺㐬㐼㐐㐏㐻㐢㐺㐍㐉㐊㐍㐼 * (Math.PI / 180.0)), 2));
      㑉㐹㐞㑉㐜㑒㑈㐘㐝㐫㑠㐞㑚㑉㐠.ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(1, 1, Math.Round(Math.Cos(㑁㐻㐺㐬㐼㐐㐏㐻㐢㐺㐍㐉㐊㐍㐼 * (Math.PI / 180.0)), 2));
      return 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.\uE565\uE536\uE561\uE536\uE535\uE557\uE530\uE537\uE536\uE530\uE532\uE560\uE534\uE55F\uE561(㑉㐹㐞㑉㐜㑒㑈㐘㐝㐫㑠㐞㑚㑉㐠, 왡왤옲옴왍왥왞왆올왟왐옯옱옮왲);
    }

    public 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 仈仕仈仗仉从今仚亘今今亞亾仟亘(int _param1, int 뗊뗖떾떾뗪떿떼떸떻뗑뗀떿뗪떹뗙)
    {
      犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 = new 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅(this.䔭䓼䔑䓻䔥䓻䓹䔦䓸䔥䔆䔮䔎䔷䔦, this.ჾᄀᄋᄹᄘᄴჿჽᄐᄀჼᄻᄕᄺᄰ);
      for (int index1 = 0; index1 < this.䔭䓼䔑䓻䔥䓻䓹䔦䓸䔥䔆䔮䔎䔷䔦; ++index1)
      {
        for (int index2 = 0; index2 < this.ჾᄀᄋᄹᄘᄴჿჽᄐᄀჼᄻᄕᄺᄰ; ++index2)
        {
          if (index1 == _param1)
            犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(_param1, index2, this.灩灥灬灭炛炆炡灮火炡火炢灥灪火(뗊뗖떾떾뗪떿떼떸떻뗑뗀떿뗪떹뗙, index2));
          else if (index1 == 뗊뗖떾떾뗪떿떼떸떻뗑뗀떿뗪떹뗙)
            犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(뗊뗖떾떾뗪떿떼떸떻뗑뗀떿뗪떹뗙, index2, this.灩灥灬灭炛炆炡灮火炡火炢灥灪火(_param1, index2));
          else
            犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(index1, index2, this.灩灥灬灭炛炆炡灮火炡火炢灥灪火(index1, index2));
        }
      }
      return 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅;
    }

    public static 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 㓼㒶㓽㒾㒶㓩㓪㒻㒹㒸㒶㓿㒼㒼㓩(
      犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 뉡뉞뉼뉥뉦늦뉧느뉦늀뉦늏뉧뉞늟,
      double 䖧䖙䕬䕩䖢䖛䕯䖧䖯䕯䕯䕩䕬䖎䕮)
    {
      for (int index = 0; index < 뉡뉞뉼뉥뉦늦뉧느뉦늀뉦늏뉧뉞늟.ჾᄀᄋᄹᄘᄴჿჽᄐᄀჼᄻᄕᄺᄰ; ++index)
        뉡뉞뉼뉥뉦늦뉧느뉦늀뉦늏뉧뉞늟.ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(0, index, 뉡뉞뉼뉥뉦늦뉧느뉦늀뉦늏뉧뉞늟.灩灥灬灭炛炆炡灮火炡火炢灥灪火(0, index) * 䖧䖙䕬䕩䖢䖛䕯䖧䖯䕯䕯䕩䕬䖎䕮);
      return 뉡뉞뉼뉥뉦늦뉧느뉦늀뉦늏뉧뉞늟;
    }

    public static 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 ǦƻǲǔǓƽƾƸǮǑǖǬǓǝǆ(
      int 쭼쭶쮸쮪쮶쭹쮶쭷쭵쮧쮨쭴쭸쭸쭷,
      int 쵿췄쵾춀춄춯쵽춹춃춮춻쵽쵽춄춭,
      犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 ꇣꇞꇡꇛꈒꇞꇠꇺꈞꈍꇣꈍꇿꈣꈒ)
    {
      犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 = new 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅(ꇣꇞꇡꇛꈒꇞꇠꇺꈞꈍꇣꈍꇿꈣꈒ.䔭䓼䔑䓻䔥䓻䓹䔦䓸䔥䔆䔮䔎䔷䔦 - 1, ꇣꇞꇡꇛꈒꇞꇠꇺꈞꈍꇣꈍꇿꈣꈒ.ჾᄀᄋᄹᄘᄴჿჽᄐᄀჼᄻᄕᄺᄰ - 1);
      for (int index1 = 0; index1 < ꇣꇞꇡꇛꈒꇞꇠꇺꈞꈍꇣꈍꇿꈣꈒ.䔭䓼䔑䓻䔥䓻䓹䔦䓸䔥䔆䔮䔎䔷䔦; ++index1)
      {
        int num = 0;
        for (int index2 = 0; index2 < ꇣꇞꇡꇛꈒꇞꇠꇺꈞꈍꇣꈍꇿꈣꈒ.ჾᄀᄋᄹᄘᄴჿჽᄐᄀჼᄻᄕᄺᄰ; ++index2)
        {
          if (index2 == 쵿췄쵾춀춄춯쵽춹춃춮춻쵽쵽춄춭 || index1 == 쭼쭶쮸쮪쮶쭹쮶쭷쭵쮧쮨쭴쭸쭸쭷)
            ++num;
          else if (index2 > 쵿췄쵾춀춄춯쵽춹춃춮춻쵽쵽춄춭)
          {
            if (index1 > 쭼쭶쮸쮪쮶쭹쮶쭷쭵쮧쮨쭴쭸쭸쭷)
              犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(index1 - 1, index2 - 1, ꇣꇞꇡꇛꈒꇞꇠꇺꈞꈍꇣꈍꇿꈣꈒ.灩灥灬灭炛炆炡灮火炡火炢灥灪火(index1, index2));
            if (index1 < 쭼쭶쮸쮪쮶쭹쮶쭷쭵쮧쮨쭴쭸쭸쭷)
              犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(index1, index2 - 1, ꇣꇞꇡꇛꈒꇞꇠꇺꈞꈍꇣꈍꇿꈣꈒ.灩灥灬灭炛炆炡灮火炡火炢灥灪火(index1, index2));
          }
          else if (index2 < 쵿췄쵾춀춄춯쵽춹춃춮춻쵽쵽춄춭)
          {
            if (index1 > 쭼쭶쮸쮪쮶쭹쮶쭷쭵쮧쮨쭴쭸쭸쭷)
              犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(index1 - 1, index2, ꇣꇞꇡꇛꈒꇞꇠꇺꈞꈍꇣꈍꇿꈣꈒ.灩灥灬灭炛炆炡灮火炡火炢灥灪火(index1, index2));
            if (index1 < 쭼쭶쮸쮪쮶쭹쮶쭷쭵쮧쮨쭴쭸쭸쭷)
              犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(index1, index2, ꇣꇞꇡꇛꈒꇞꇠꇺꈞꈍꇣꈍꇿꈣꈒ.灩灥灬灭炛炆炡灮火炡火炢灥灪火(index1, index2));
          }
        }
      }
      return 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅;
    }

    public static 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 趶跴趶跨趽跋跪跘跨趺跨趹跪跳跽(
      double 녣넝넢녏넡넡넿넾녏넻녒넢넣넠넲,
      犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 _param1,
      string 殒歍歎残歑歍殂殔歾殄歿歑歎殅歑)
    {
      for (int index1 = 0; index1 < _param1.䔭䓼䔑䓻䔥䓻䓹䔦䓸䔥䔆䔮䔎䔷䔦; ++index1)
      {
        for (int index2 = 0; index2 < _param1.ჾᄀᄋᄹᄘᄴჿჽᄐᄀჼᄻᄕᄺᄰ; ++index2)
        {
          string str = 殒歍歎残歑歍殂殔歾殄歿歑歎殅歑;
          // ISSUE: reference to a compiler-generated method
          switch (ᘨᙫᘨᘫᘣᙓᘣᘣᘧᘥᙋᙖᙪᙜᙔ.Ⅲ\u215EⅤ\u2190\u218EↄⅡⅦⅦ\u2193\u2198\u2192ⅢⅢⅥ(str))
          {
            case 804546073:
              if (str == \u003CModule\u003E.ဏ\u0FF5တ\u0FE5\u0FDD\u0FDD\u0FF6တ\u0FE3\u0FE5\u0FF4\u0FF0\u0FE1\u0FE5\u0FDE())
              {
                _param1.ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(index1, index2, _param1.켰콲콑켵켶켵켸켸켱켲콦켰콚콤켱[index1, index2] % 녣넝넢녏넡넡넿넾녏넻녒넢넣넠넲);
                break;
              }
              break;
            case 1062293841:
              if (str == \u003CModule\u003E.薴薉薴薃薈薇薲薆薊薈薆薳薷薴薉())
              {
                _param1.ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(index1, index2, Math.Log10(_param1.켰콲콑켵켶켵켸켸켱켲콦켰콚콤켱[index1, index2]));
                break;
              }
              break;
            case 1479764693:
              if (str == \u003CModule\u003E.\uE1B7\uE1EA\uE1E9\uE1E5\uE1B4\uE1E8\uE1E7\uE1B6\uE1B9\uE1B8\uE1B8\uE1E6\uE1CA\uE1B9\uE1B4())
              {
                _param1.ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(index1, index2, Math.Pow(_param1.켰콲콑켵켶켵켸켸켱켲콦켰콚콤켱[index1, index2], 녣넝넢녏넡넡넿넾녏넻녒넢넣넠넲));
                break;
              }
              break;
            case 2112764879:
              if (str == \u003CModule\u003E.垬垽垱埜垪垮垫埌垯埑域垲埑埨垮())
              {
                _param1.ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(index1, index2, Math.Sqrt(_param1.켰콲콑켵켶켵켸켸켱켲콦켰콚콤켱[index1, index2]));
                break;
              }
              break;
            case 3696113941:
              if (str == \u003CModule\u003E.ᣮᤈᤠᣠᤊᣘᣜᣞ\u18FBᤌᣞ\u18F6ᣟᤊᤉ())
              {
                _param1.ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(index1, index2, _param1.켰콲콑켵켶켵켸켸켱켲콦켰콚콤켱[index1, index2] - 녣넝넢녏넡넡넿넾녏넻녒넢넣넠넲);
                break;
              }
              break;
            case 3712891560:
              if (str == \u003CModule\u003E.䤵䥖䥖䤨䥑䥔䤩䤵䥕䤥䤩䤢䤡䥀䤥())
              {
                _param1.ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(index1, index2, _param1.켰콲콑켵켶켵켸켸켱켲콦켰콚콤켱[index1, index2] + 녣넝넢녏넡넡넿넾녏넻녒넢넣넠넲);
                break;
              }
              break;
            case 3848448840:
              if (str == \u003CModule\u003E.ﶵﶡﶦﶣﶦﶾﶠ\uFDCFﶟ\uFDD3\uFDCFﶾﶥﶲﶢ())
              {
                _param1.ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(index1, index2, _param1.켰콲콑켵켶켵켸켸켱켲콦켰콚콤켱[index1, index2] / 녣넝넢녏넡넡넿넾녏넻녒넢넣넠넲);
                break;
              }
              break;
            case 3951357313:
              if (str == \u003CModule\u003E.\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD())
              {
                _param1.ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(index1, index2, _param1.켰콲콑켵켶켵켸켸켱켲콦켰콚콤켱[index1, index2] * 녣넝넢녏넡넡넿넾녏넻녒넢넣넠넲);
                break;
              }
              break;
          }
        }
      }
      return _param1;
    }

    public double 鰣鰉鰉鰍鱂鰅鰬鱈鰡鰆鰈鰅鰌鰌鰉(int _param1, int 첦첚처챯챩첃첁챹챭처챸챫챿챪챺, bool 쬩쭎쬪쬧쬪쬧쬬쬪쬪쬨쬧쬸쭛쬦쬮)
    {
      double num = this.켰콲콑켵켶켵켸켸켱켲콦켰콚콤켱[_param1, 첦첚처챯챩첃첁챹챭처챸챫챿챪챺];
      ++_param1;
      첦첚처챯챩첃첁챹챭처챸챫챿챪챺 = 쬩쭎쬪쬧쬪쬧쬬쬪쬪쬨쬧쬸쭛쬦쬮 ? 첦첚처챯챩첃첁챹챭처챸챫챿챪챺 + 1 : 첦첚처챯챩첃첁챹챭처챸챫챿챪챺 - 1;
      for (int index = 0; index < this.䔭䓼䔑䓻䔥䓻䓹䔦䓸䔥䔆䔮䔎䔷䔦 - 1; ++index)
      {
        num *= this.켰콲콑켵켶켵켸켸켱켲콦켰콚콤켱[_param1, 첦첚처챯챩첃첁챹챭처챸챫챿챪챺];
        ++_param1;
        첦첚처챯챩첃첁챹챭처챸챫챿챪챺 = 쬩쭎쬪쬧쬪쬧쬬쬪쬪쬨쬧쬸쭛쬦쬮 ? 첦첚처챯챩첃첁챹챭처챸챫챿챪챺 + 1 : 첦첚처챯챩첃첁챹챭처챸챫챿챪챺 - 1;
      }
      return num;
    }

    public double 灩灥灬灭炛炆炡灮火炡火炢灥灪火(int _param1, int _param2) => this.켰콲콑켵켶켵켸켸켱켲콦켰콚콤켱[_param1, _param2];

    public 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 \uFFFD\uE00B\uFFFD\uE00A\uFFFD\uFFFD\uE020\uFFFD\uE010\uFFFD\uFFFD\uFFFD\uFFFD\uE00B\uFFFD()
    {
      犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 = new 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅(this.䔭䓼䔑䓻䔥䓻䓹䔦䓸䔥䔆䔮䔎䔷䔦, this.ჾᄀᄋᄹᄘᄴჿჽᄐᄀჼᄻᄕᄺᄰ + 2);
      for (int index1 = 0; index1 < this.䔭䓼䔑䓻䔥䓻䓹䔦䓸䔥䔆䔮䔎䔷䔦; ++index1)
      {
        for (int index2 = 0; index2 < this.ჾᄀᄋᄹᄘᄴჿჽᄐᄀჼᄻᄕᄺᄰ; ++index2)
          犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(index1, index2, this.켰콲콑켵켶켵켸켸켱켲콦켰콚콤켱[index1, index2]);
      }
      for (int index3 = 0; index3 < this.䔭䓼䔑䓻䔥䓻䓹䔦䓸䔥䔆䔮䔎䔷䔦; ++index3)
      {
        for (int index4 = 0; index4 < 2; ++index4)
          犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(index3, index4 + 3, this.켰콲콑켵켶켵켸켸켱켲콦켰콚콤켱[index3, index4]);
      }
      return 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅;
    }

    public static 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 ﰣﰙﯲﰵﯹﯱﰃﰥﰤﰎﯴﯴﯲﰩﯲ(犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 _param0)
    {
      for (int index1 = 1; index1 < _param0.䔭䓼䔑䓻䔥䓻䓹䔦䓸䔥䔆䔮䔎䔷䔦; ++index1)
      {
        for (int index2 = 1; index2 < _param0.ჾᄀᄋᄹᄘᄴჿჽᄐᄀჼᄻᄕᄺᄰ; ++index2)
          _param0.ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(index1, index2, _param0.灩灥灬灭炛炆炡灮火炡火炢灥灪火(index1, index2) - _param0.켰콲콑켵켶켵켸켸켱켲콦켰콚콤켱[0, index2] * _param0.켰콲콑켵켶켵켸켸켱켲콦켰콚콤켱[index1, 0]);
      }
      return 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.ǦƻǲǔǓƽƾƸǮǑǖǬǓǝǆ(0, 0, _param0);
    }

    public static double 퐦폹퐷퐍폺퐦퐩폸퐨폵퐧퐯퐱퐲퐗(犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 松枬枚枭架析枰板果枯枰杼杽枂枃)
    {
      if (松枬枚枭架析枰板果枯枰杼杽枂枃.䔭䓼䔑䓻䔥䓻䓹䔦䓸䔥䔆䔮䔎䔷䔦 != 松枬枚枭架析枰板果枯枰杼杽枂枃.ჾᄀᄋᄹᄘᄴჿჽᄐᄀჼᄻᄕᄺᄰ)
        return double.NaN;
      if (松枬枚枭架析枰板果枯枰杼杽枂枃.䔭䓼䔑䓻䔥䓻䓹䔦䓸䔥䔆䔮䔎䔷䔦 == 1)
        return 松枬枚枭架析枰板果枯枰杼杽枂枃.灩灥灬灭炛炆炡灮火炡火炢灥灪火(0, 0);
      if (松枬枚枭架析枰板果枯枰杼杽枂枃.䔭䓼䔑䓻䔥䓻䓹䔦䓸䔥䔆䔮䔎䔷䔦 == 2)
        return 松枬枚枭架析枰板果枯枰杼杽枂枃.鰣鰉鰉鰍鱂鰅鰬鱈鰡鰆鰈鰅鰌鰌鰉(0, 0, true) - 松枬枚枭架析枰板果枯枰杼杽枂枃.鰣鰉鰉鰍鱂鰅鰬鱈鰡鰆鰈鰅鰌鰌鰉(0, 1, false);
      if (松枬枚枭架析枰板果枯枰杼杽枂枃.䔭䓼䔑䓻䔥䓻䓹䔦䓸䔥䔆䔮䔎䔷䔦 == 3)
      {
        犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 = 松枬枚枭架析枰板果枯枰杼杽枂枃.\uFFFD\uE00B\uFFFD\uE00A\uFFFD\uFFFD\uE020\uFFFD\uE010\uFFFD\uFFFD\uFFFD\uFFFD\uE00B\uFFFD();
        double a = 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.鰣鰉鰉鰍鱂鰅鰬鱈鰡鰆鰈鰅鰌鰌鰉(0, 0, true) + 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.鰣鰉鰉鰍鱂鰅鰬鱈鰡鰆鰈鰅鰌鰌鰉(0, 1, true) + 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.鰣鰉鰉鰍鱂鰅鰬鱈鰡鰆鰈鰅鰌鰌鰉(0, 2, true) - (犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.鰣鰉鰉鰍鱂鰅鰬鱈鰡鰆鰈鰅鰌鰌鰉(0, 2, false) + 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.鰣鰉鰉鰍鱂鰅鰬鱈鰡鰆鰈鰅鰌鰌鰉(0, 3, false) + 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.鰣鰉鰉鰍鱂鰅鰬鱈鰡鰆鰈鰅鰌鰌鰉(0, 4, false));
        foreach (double num in 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.ᬛ\u1ADC\u1AE0\u1AEB\u1AE0ᬍ\u1AE1\u1ADFᬞᬍ\u1ADFᬊ\u1AE0ᬀ\u1AEE)
          a *= num;
        return Math.Round(a);
      }
      if (松枬枚枭架析枰板果枯枰杼杽枂枃.灩灥灬灭炛炆炡灮火炡火炢灥灪火(0, 0) == 0.0)
      {
        int num1 = 0;
        for (int 뗊뗖떾떾뗪떿떼떸떻뗑뗀떿뗪떹뗙 = 1; 뗊뗖떾떾뗪떿떼떸떻뗑뗀떿뗪떹뗙 < 松枬枚枭架析枰板果枯枰杼杽枂枃.䔭䓼䔑䓻䔥䓻䓹䔦䓸䔥䔆䔮䔎䔷䔦; ++뗊뗖떾떾뗪떿떼떸떻뗑뗀떿뗪떹뗙)
        {
          ++num1;
          if (松枬枚枭架析枰板果枯枰杼杽枂枃.灩灥灬灭炛炆炡灮火炡火炢灥灪火(뗊뗖떾떾뗪떿떼떸떻뗑뗀떿뗪떹뗙, 0) != 0.0)
          {
            if (松枬枚枭架析枰板果枯枰杼杽枂枃.灩灥灬灭炛炆炡灮火炡火炢灥灪火(뗊뗖떾떾뗪떿떼떸떻뗑뗀떿뗪떹뗙, 0) == 1.0)
            {
              犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.ᬛ\u1ADC\u1AE0\u1AEB\u1AE0ᬍ\u1AE1\u1ADFᬞᬍ\u1ADFᬊ\u1AE0ᬀ\u1AEE.Add(-1.0);
              return 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.퐦폹퐷퐍폺퐦퐩폸퐨폵퐧퐯퐱퐲퐗(犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.ﰣﰙﯲﰵﯹﯱﰃﰥﰤﰎﯴﯴﯲﰩﯲ(松枬枚枭架析枰板果枯枰杼杽枂枃.仈仕仈仗仉从今仚亘今今亞亾仟亘(0, 뗊뗖떾떾뗪떿떼떸떻뗑뗀떿뗪떹뗙)));
            }
            if (松枬枚枭架析枰板果枯枰杼杽枂枃.灩灥灬灭炛炆炡灮火炡火炢灥灪火(뗊뗖떾떾뗪떿떼떸떻뗑뗀떿뗪떹뗙, 0) != 1.0)
            {
              犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.ᬛ\u1ADC\u1AE0\u1AEB\u1AE0ᬍ\u1AE1\u1ADFᬞᬍ\u1ADFᬊ\u1AE0ᬀ\u1AEE.Add(松枬枚枭架析枰板果枯枰杼杽枂枃.灩灥灬灭炛炆炡灮火炡火炢灥灪火(뗊뗖떾떾뗪떿떼떸떻뗑뗀떿뗪떹뗙, 0));
              犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.ᬛ\u1ADC\u1AE0\u1AEB\u1AE0ᬍ\u1AE1\u1ADFᬞᬍ\u1ADFᬊ\u1AE0ᬀ\u1AEE.Add(-1.0);
              double num2 = 松枬枚枭架析枰板果枯枰杼杽枂枃.灩灥灬灭炛炆炡灮火炡火炢灥灪火(뗊뗖떾떾뗪떿떼떸떻뗑뗀떿뗪떹뗙, 0);
              for (int index = 0; index < 松枬枚枭架析枰板果枯枰杼杽枂枃.ჾᄀᄋᄹᄘᄴჿჽᄐᄀჼᄻᄕᄺᄰ; ++index)
                松枬枚枭架析枰板果枯枰杼杽枂枃.ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(뗊뗖떾떾뗪떿떼떸떻뗑뗀떿뗪떹뗙, index, 松枬枚枭架析枰板果枯枰杼杽枂枃.灩灥灬灭炛炆炡灮火炡火炢灥灪火(뗊뗖떾떾뗪떿떼떸떻뗑뗀떿뗪떹뗙, index) / num2);
              return 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.퐦폹퐷퐍폺퐦퐩폸퐨폵퐧퐯퐱퐲퐗(犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.ﰣﰙﯲﰵﯹﯱﰃﰥﰤﰎﯴﯴﯲﰩﯲ(松枬枚枭架析枰板果枯枰杼杽枂枃.仈仕仈仗仉从今仚亘今今亞亾仟亘(0, 뗊뗖떾떾뗪떿떼떸떻뗑뗀떿뗪떹뗙)));
            }
          }
        }
        return num1 == 松枬枚枭架析枰板果枯枰杼杽枂枃.䔭䓼䔑䓻䔥䓻䓹䔦䓸䔥䔆䔮䔎䔷䔦 ? 0.0 : 0.0;
      }
      if (松枬枚枭架析枰板果枯枰杼杽枂枃.灩灥灬灭炛炆炡灮火炡火炢灥灪火(0, 0) == 1.0)
        return 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.퐦폹퐷퐍폺퐦퐩폸퐨폵퐧퐯퐱퐲퐗(犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.ﰣﰙﯲﰵﯹﯱﰃﰥﰤﰎﯴﯴﯲﰩﯲ(松枬枚枭架析枰板果枯枰杼杽枂枃));
      犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.ᬛ\u1ADC\u1AE0\u1AEB\u1AE0ᬍ\u1AE1\u1ADFᬞᬍ\u1ADFᬊ\u1AE0ᬀ\u1AEE.Add(松枬枚枭架析枰板果枯枰杼杽枂枃.灩灥灬灭炛炆炡灮火炡火炢灥灪火(0, 0));
      double num3 = 松枬枚枭架析枰板果枯枰杼杽枂枃.灩灥灬灭炛炆炡灮火炡火炢灥灪火(0, 0);
      for (int index = 0; index < 松枬枚枭架析枰板果枯枰杼杽枂枃.ჾᄀᄋᄹᄘᄴჿჽᄐᄀჼᄻᄕᄺᄰ; ++index)
        松枬枚枭架析枰板果枯枰杼杽枂枃.ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(0, index, 松枬枚枭架析枰板果枯枰杼杽枂枃.灩灥灬灭炛炆炡灮火炡火炢灥灪火(0, index) / num3);
      return 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.퐦폹퐷퐍폺퐦퐩폸퐨폵퐧퐯퐱퐲퐗(犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.ﰣﰙﯲﰵﯹﯱﰃﰥﰤﰎﯴﯴﯲﰩﯲ(松枬枚枭架析枰板果枯枰杼杽枂枃));
    }

    public string 檡檦櫓檹櫗檦檨檦櫚檺櫒櫦櫕檶櫒()
    {
      string str = \u003CModule\u003E.\u25AA\u25D1\u258E\u25BD\u25BB\u25C1\u25BB\u258B\u25BB\u259D\u25A1\u258E\u2592\u25BD\u258F();
      for (int index1 = 0; index1 < this.䔭䓼䔑䓻䔥䓻䓹䔦䓸䔥䔆䔮䔎䔷䔦; ++index1)
      {
        for (int index2 = 0; index2 < this.ჾᄀᄋᄹᄘᄴჿჽᄐᄀჼᄻᄕᄺᄰ; ++index2)
          str += index2 == this.ჾᄀᄋᄹᄘᄴჿჽᄐᄀჼᄻᄕᄺᄰ - 1 ? this.켰콲콑켵켶켵켸켸켱켲콦켰콚콤켱[index1, index2].ToString() : this.켰콲콑켵켶켵켸켸켱켲콦켰콚콤켱[index1, index2].ToString() + \u003CModule\u003E.\uF0D7\uF107\uF10C\uF114\uF0F7\uF0DB\uF0D8\uF116\uF120\uF0F0\uF0D8\uF0D6\uF10B\uF11C\uF0EE();
        str += "\n";
      }
      return str;
    }

    public static 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 攚擡攋擾據攋擙擘據擛攍擝攎擘擴(
      犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 鸘鹖鹁鸚鸜鹝鸟鹠鹖鸟鸘鸘鸟鸚鸠,
      犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 塆塇塶塊境塓塊塂塂塊塾塅塡塄塂)
    {
      犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 = new 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅(鸘鹖鹁鸚鸜鹝鸟鹠鹖鸟鸘鸘鸟鸚鸠.䔭䓼䔑䓻䔥䓻䓹䔦䓸䔥䔆䔮䔎䔷䔦, 鸘鹖鹁鸚鸜鹝鸟鹠鹖鸟鸘鸘鸟鸚鸠.ჾᄀᄋᄹᄘᄴჿჽᄐᄀჼᄻᄕᄺᄰ);
      if (鸘鹖鹁鸚鸜鹝鸟鹠鹖鸟鸘鸘鸟鸚鸠.䔭䓼䔑䓻䔥䓻䓹䔦䓸䔥䔆䔮䔎䔷䔦 != 塆塇塶塊境塓塊塂塂塊塾塅塡塄塂.䔭䓼䔑䓻䔥䓻䓹䔦䓸䔥䔆䔮䔎䔷䔦 || 鸘鹖鹁鸚鸜鹝鸟鹠鹖鸟鸘鸘鸟鸚鸠.ჾᄀᄋᄹᄘᄴჿჽᄐᄀჼᄻᄕᄺᄰ != 塆塇塶塊境塓塊塂塂塊塾塅塡塄塂.ჾᄀᄋᄹᄘᄴჿჽᄐᄀჼᄻᄕᄺᄰ)
        return new 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅(0, 0);
      for (int index1 = 0; index1 < 鸘鹖鹁鸚鸜鹝鸟鹠鹖鸟鸘鸘鸟鸚鸠.䔭䓼䔑䓻䔥䓻䓹䔦䓸䔥䔆䔮䔎䔷䔦; ++index1)
      {
        for (int index2 = 0; index2 < 鸘鹖鹁鸚鸜鹝鸟鹠鹖鸟鸘鸘鸟鸚鸠.ჾᄀᄋᄹᄘᄴჿჽᄐᄀჼᄻᄕᄺᄰ; ++index2)
          犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(index1, index2, 鸘鹖鹁鸚鸜鹝鸟鹠鹖鸟鸘鸘鸟鸚鸠.켰콲콑켵켶켵켸켸켱켲콦켰콚콤켱[index1, index2] + 塆塇塶塊境塓塊塂塂塊塾塅塡塄塂.켰콲콑켵켶켵켸켸켱켲콦켰콚콤켱[index1, index2]);
      }
      return 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅;
    }

    public static 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 땍딹땪땺땪땊딾땱땴딸땱딺땨땫땩(
      犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 䱸䱋䱹䱎䲇䱌䱷䱺䱋䱆䱠䱽䱋䱌䱋,
      犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 렘럷럮럭러렡렙럾럮럫럦렛럼럨럥)
    {
      犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 = new 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅(䱸䱋䱹䱎䲇䱌䱷䱺䱋䱆䱠䱽䱋䱌䱋.䔭䓼䔑䓻䔥䓻䓹䔦䓸䔥䔆䔮䔎䔷䔦, 䱸䱋䱹䱎䲇䱌䱷䱺䱋䱆䱠䱽䱋䱌䱋.ჾᄀᄋᄹᄘᄴჿჽᄐᄀჼᄻᄕᄺᄰ);
      if (䱸䱋䱹䱎䲇䱌䱷䱺䱋䱆䱠䱽䱋䱌䱋.䔭䓼䔑䓻䔥䓻䓹䔦䓸䔥䔆䔮䔎䔷䔦 != 렘럷럮럭러렡렙럾럮럫럦렛럼럨럥.䔭䓼䔑䓻䔥䓻䓹䔦䓸䔥䔆䔮䔎䔷䔦 || 䱸䱋䱹䱎䲇䱌䱷䱺䱋䱆䱠䱽䱋䱌䱋.ჾᄀᄋᄹᄘᄴჿჽᄐᄀჼᄻᄕᄺᄰ != 렘럷럮럭러렡렙럾럮럫럦렛럼럨럥.ჾᄀᄋᄹᄘᄴჿჽᄐᄀჼᄻᄕᄺᄰ)
        return new 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅(0, 0);
      for (int index1 = 0; index1 < 䱸䱋䱹䱎䲇䱌䱷䱺䱋䱆䱠䱽䱋䱌䱋.䔭䓼䔑䓻䔥䓻䓹䔦䓸䔥䔆䔮䔎䔷䔦; ++index1)
      {
        for (int index2 = 0; index2 < 䱸䱋䱹䱎䲇䱌䱷䱺䱋䱆䱠䱽䱋䱌䱋.ჾᄀᄋᄹᄘᄴჿჽᄐᄀჼᄻᄕᄺᄰ; ++index2)
          犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(index1, index2, 䱸䱋䱹䱎䲇䱌䱷䱺䱋䱆䱠䱽䱋䱌䱋.켰콲콑켵켶켵켸켸켱켲콦켰콚콤켱[index1, index2] - 렘럷럮럭러렡렙럾럮럫럦렛럼럨럥.켰콲콑켵켶켵켸켸켱켲콦켰콚콤켱[index1, index2]);
      }
      return 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅;
    }

    public 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 \uF7B8\uF7DD\uF7B4\uF7B7\uF7B3\uF7FC\uF7F0\uF7BB\uF7D3\uF7B9\uF7E5\uF7D3\uF7CD\uF7E5\uF7E5()
    {
      犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 = new 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅(this.ჾᄀᄋᄹᄘᄴჿჽᄐᄀჼᄻᄕᄺᄰ, this.䔭䓼䔑䓻䔥䓻䓹䔦䓸䔥䔆䔮䔎䔷䔦);
      for (int index1 = 0; index1 < this.䔭䓼䔑䓻䔥䓻䓹䔦䓸䔥䔆䔮䔎䔷䔦; ++index1)
      {
        for (int index2 = 0; index2 < this.ჾᄀᄋᄹᄘᄴჿჽᄐᄀჼᄻᄕᄺᄰ; ++index2)
          犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(index2, index1, this.켰콲콑켵켶켵켸켸켱켲콦켰콚콤켱[index1, index2]);
      }
      return 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅;
    }

    public static 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 \uE565\uE536\uE561\uE536\uE535\uE557\uE530\uE537\uE536\uE530\uE532\uE560\uE534\uE55F\uE561(
      犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 㑉㐹㐞㑉㐜㑒㑈㐘㐝㐫㑠㐞㑚㑉㐠,
      犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 _param1)
    {
      if (㑉㐹㐞㑉㐜㑒㑈㐘㐝㐫㑠㐞㑚㑉㐠.ჾᄀᄋᄹᄘᄴჿჽᄐᄀჼᄻᄕᄺᄰ != _param1.䔭䓼䔑䓻䔥䓻䓹䔦䓸䔥䔆䔮䔎䔷䔦)
        return new 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅(0, 0);
      犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 = new 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅(㑉㐹㐞㑉㐜㑒㑈㐘㐝㐫㑠㐞㑚㑉㐠.䔭䓼䔑䓻䔥䓻䓹䔦䓸䔥䔆䔮䔎䔷䔦, _param1.ჾᄀᄋᄹᄘᄴჿჽᄐᄀჼᄻᄕᄺᄰ);
      double num = 0.0;
      for (int index1 = 0; index1 < 㑉㐹㐞㑉㐜㑒㑈㐘㐝㐫㑠㐞㑚㑉㐠.䔭䓼䔑䓻䔥䓻䓹䔦䓸䔥䔆䔮䔎䔷䔦; ++index1)
      {
        for (int index2 = 0; index2 < _param1.ჾᄀᄋᄹᄘᄴჿჽᄐᄀჼᄻᄕᄺᄰ; ++index2)
        {
          for (int index3 = 0; index3 < 㑉㐹㐞㑉㐜㑒㑈㐘㐝㐫㑠㐞㑚㑉㐠.ჾᄀᄋᄹᄘᄴჿჽᄐᄀჼᄻᄕᄺᄰ; ++index3)
            num += 㑉㐹㐞㑉㐜㑒㑈㐘㐝㐫㑠㐞㑚㑉㐠.켰콲콑켵켶켵켸켸켱켲콦켰콚콤켱[index1, index3] * _param1.켰콲콑켵켶켵켸켸켱켲콦켰콚콤켱[index3, index2];
          犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(index1, index2, num);
          num = 0.0;
        }
      }
      return 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅;
    }

    public void ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(int _param1, int _param2, double _param3) => this.켰콲콑켵켶켵켸켸켱켲콦켰콚콤켱[_param1, _param2] = _param3;

    public 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅(int rowN, int columN, string formula)
    {
      this.䔭䓼䔑䓻䔥䓻䓹䔦䓸䔥䔆䔮䔎䔷䔦 = rowN;
      this.ჾᄀᄋᄹᄘᄴჿჽᄐᄀჼᄻᄕᄺᄰ = columN;
      this.켰콲콑켵켶켵켸켸켱켲콦켰콚콤켱 = new double[rowN, columN];
      for (int index1 = 0; index1 < rowN; ++index1)
      {
        for (int index2 = 0; index2 < columN; ++index2)
        {
          string str1 = formula;
          string oldValue1 = \u003CModule\u003E.侴俢侲俤侴侰侶侶侱俣俢俑俥俺俥();
          int num = index1 + 1;
          string newValue1 = num.ToString();
          string str2 = str1.Replace(oldValue1, newValue1);
          string oldValue2 = \u003CModule\u003E.貑賁貗賄貺貔賍貕貕賘貒賆賆貗貺();
          num = index2 + 1;
          string newValue2 = num.ToString();
          string 魯魦魼魤鬴鬴魱魽魻鬼魙魰魨魺鬹 = str2.Replace(oldValue2, newValue2);
          this.ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(index1, index2, 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅.쌄쌀쌜쌆쌀쌇쌶싿쌲썆쌢쌲썇쌱쌄(魯魦魼魤鬴鬴魱魽魻鬼魙魰魨魺鬹));
        }
      }
    }

    public static 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 䧆䦓䧇䦫䦔䦙䦒䧃䦻䦬䦗䦔䦓䦖䧅(
      PointCollection _param0,
      double ꄶꅛꅧꄺꅨꄽꅜꄵꅭꄺꄽꄽꅷꄻꅩ,
      double 绖纷纵纼绋继绩绒绦纹绩纼绦绛绷)
    {
      犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅1 = new 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅(2, _param0.Count);
      for (int index = 0; index < _param0.Count; ++index)
      {
        犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅2 = 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅1;
        int num1 = index;
        Point point = _param0[index];
        double num2 = point.X + ꄶꅛꅧꄺꅨꄽꅜꄵꅭꄺꄽꄽꅷꄻꅩ;
        犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅2.ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(0, num1, num2);
        犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅3 = 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅1;
        int num3 = index;
        point = _param0[index];
        double num4 = point.Y + 绖纷纵纼绋继绩绒绦纹绩纼绦绛绷;
        犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅3.ᙇᙒᙕᘟᙩᘻᘨᘣᘤᘣᙐᙒᘧᙐᙩ(1, num3, num4);
      }
      return 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅1;
    }

    public static PointCollection 죧죻좽좸좶좶좷좵죧좷죩죪좵좶죪(
      犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅 _param0,
      double _param1,
      double _param2)
    {
      PointCollection pointCollection = new PointCollection();
      for (int index = 0; index < _param0.ჾᄀᄋᄹᄘᄴჿჽᄐᄀჼᄻᄕᄺᄰ; ++index)
        pointCollection.Add(new Point()
        {
          X = _param0.灩灥灬灭炛炆炡灮火炡火炢灥灪火(0, index) + _param1,
          Y = _param0.灩灥灬灭炛炆炡灮火炡火炢灥灪火(1, index) + _param2
        });
      return pointCollection;
    }

    public 犇牁牔牛爿牡牖牂牵牆犃牰爾牱牅(int rowN, int columN)
    {
      this.䔭䓼䔑䓻䔥䓻䓹䔦䓸䔥䔆䔮䔎䔷䔦 = rowN;
      this.ჾᄀᄋᄹᄘᄴჿჽᄐᄀჼᄻᄕᄺᄰ = columN;
      this.켰콲콑켵켶켵켸켸켱켲콦켰콚콤켱 = new double[rowN, columN];
    }
  }
}
