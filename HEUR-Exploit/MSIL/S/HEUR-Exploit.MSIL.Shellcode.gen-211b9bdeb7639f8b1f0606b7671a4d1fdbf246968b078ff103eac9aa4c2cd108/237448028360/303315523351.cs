// Decompiled with JetBrains decompiler
// Type: 237448028360.303315523351
// Assembly: 190180155270, Version=7.6.1.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
// MVID: 20B0A582-54C5-4C64-BCB9-2AC73608F590
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-211b9bdeb7639f8b1f0606b7671a4d1fdbf246968b078ff103eac9aa4c2cd108.exe

using \u003041130631579;
using \u003193754076629;
using \u003522274766650;
using Microsoft.ProgramSynthesis;
using Microsoft.ProgramSynthesis.Compound.Split;
using Microsoft.ProgramSynthesis.Compound.Split.Constraints;
using Microsoft.ProgramSynthesis.DslLibrary;
using Microsoft.ProgramSynthesis.Utils;
using Microsoft.ProgramSynthesis.Wrangling.Constraints;
using Microsoft.ProgramSynthesis.Wrangling.Logging;
using Microsoft.ProgramSynthesis.Wrangling.Schema.TableOutput;
using Microsoft.ProgramSynthesis.Wrangling.Session;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.Threading;
using System.Threading.Tasks;

namespace \u003237448028360
{
  internal class \u003303315523351 : \u003134945228346
  {
    private const int \u003160332556503 = 1048576;

    public TimeSpan \u003711577946974 { get; set; }

    internal virtual IEnumerable<\u003197692273545> \u003360241442955 => Seq.Of<\u003197692273545>(new \u003197692273545[1]
    {
      \u003197692273545.Csv
    });

    internal virtual IEnumerable<string> \u003204018881776 => Seq.Of<string>(new string[2]
    {
      "csv",
      "tsv"
    });

    internal virtual int \u003312124063162 => 10;

    public \u003303315523351() => this.\u003711577946974 = TimeSpan.FromSeconds(5.0);

    internal virtual \u003197692273545 \u003266937949761(
      \u003388950121399 _param1,
      string _param2,
      string _param3)
    {
      StringRegion stringRegion = Microsoft.ProgramSynthesis.Compound.Split.Session.CreateStringRegion(_param2.Substring(0, Math.Min(1048576, _param2.Length)));
      Microsoft.ProgramSynthesis.Compound.Split.Session session = new Microsoft.ProgramSynthesis.Compound.Split.Session((IJournalStorage) null, (CultureInfo) null, (ILogger) null);
      ((Microsoft.ProgramSynthesis.Wrangling.Session.Session<Program, StringRegion, ITable<StringRegion>>) session).Inputs.Add(stringRegion);
      ((Microsoft.ProgramSynthesis.Wrangling.Session.Session<Program, StringRegion, ITable<StringRegion>>) session).Constraints.Add((Constraint<StringRegion, ITable<StringRegion>>) new SimpleDelimiterOrFixedWidth());
      CancellationTokenSource cancellationTokenSource = new CancellationTokenSource();
      if (!Debugger.IsAttached)
        cancellationTokenSource.CancelAfter(this.\u003711577946974);
      try
      {
        Program program = ((Microsoft.ProgramSynthesis.Wrangling.Session.Session<Program, StringRegion, ITable<StringRegion>>) session).Learn((RankingMode) null, cancellationTokenSource.Token, new Guid?());
        if (Program<StringRegion, ITable<StringRegion>>.op_Equality((Program<StringRegion, ITable<StringRegion>>) program, (Program<StringRegion, ITable<StringRegion>>) null))
          return \u003197692273545.Unknown;
        if (program.Properties.ProgramType == 1)
          return \u003197692273545.Csv;
        return program.Properties.ProgramType == 2 ? \u003197692273545.FixedWidth : \u003197692273545.PlainText;
      }
      catch (TaskCanceledException ex)
      {
        return \u003197692273545.Unknown;
      }
    }
  }
}
