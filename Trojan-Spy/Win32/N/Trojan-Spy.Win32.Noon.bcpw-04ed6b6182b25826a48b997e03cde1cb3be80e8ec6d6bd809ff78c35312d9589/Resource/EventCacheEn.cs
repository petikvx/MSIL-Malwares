// Decompiled with JetBrains decompiler
// Type: Resource.EventCacheEn
// Assembly: RSACspObj, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 4F5485A2-22DD-4A3A-83EE-265873F291A8
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan-Spy.Win32.Noon.bcpw-04ed6b6182b25826a48b997e03cde1cb3be80e8ec6d6bd809ff78c35312d9589.exe

namespace Resource
{
  public class EventCacheEn
  {
    public EventCacheEn()
    {
label_1:
      int num1 = -4650054;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1069046037)) % 4U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * 210504291 ^ -917215933;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * 1440491089 ^ 790875948;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public EventCacheEn(string id, string UserName)
    {
label_1:
      int num1 = 277862489;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1363432450)) % 6U)
        {
          case 0:
            this.Balance = this.Winstreak = this.WinCount = this.LoseCount = this.Owing = 0;
            num1 = (int) num2 * -637189158 ^ -2129705763;
            continue;
          case 1:
            this.Id = id;
            num1 = (int) num2 * -1517799388 ^ -229401646;
            continue;
          case 2:
            this.Name = UserName;
            num1 = (int) num2 * 282561401 ^ 1517537399;
            continue;
          case 3:
            goto label_3;
          case 4:
            goto label_1;
          case 5:
            num1 = (int) num2 * -329317737 ^ 1682744233;
            continue;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    public EventCacheEn(
      string id,
      string UserName,
      int Balance,
      int WinStreak,
      int WinCount,
      int LoseCount,
      int Games,
      int Owing,
      double AvgBet,
      int MaxBet,
      int MinBet,
      string LastPlay,
      int CurrentStreak)
    {
      this.Id = id;
      this.Name = UserName;
      this.Balance = Balance;
      this.Winstreak = WinStreak;
      this.WinCount = WinCount;
      this.LoseCount = LoseCount;
      this.Games = Games;
      this.Owing = Owing;
      this.AverageBet = AvgBet;
      this.MaxBet = MaxBet;
      this.MinBet = MinBet;
      this.LastPlay = LastPlay;
      this.CurrentStreak = CurrentStreak;
    }

    public string Id { get; set; }

    public string Name { get; set; }

    public int Balance { get; set; }

    public int Winstreak { get; set; }

    public int WinCount { get; set; }

    public int LoseCount { get; set; }

    public int Games { get; set; }

    public int Owing { get; set; }

    public double AverageBet { get; set; }

    public int MaxBet { get; set; }

    public int MinBet { get; set; }

    public string LastPlay { get; set; }

    public int CurrentStreak { get; set; }
  }
}
