// Decompiled with JetBrains decompiler
// Type: AutoJack.View.BetView
// Assembly: DBCSDeco, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 88F14F11-3C25-4928-9B64-C01D5FB1C3EF
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Backdoor.MSIL.Stealer.gen-5f6bf7015ba2b07f70f29dc97a673c6dae2bcadfbc5fd8c4f5448d7238aa33eb.exe

using AutoJack.Controller;
using System;
using System.ComponentModel;
using System.Drawing;
using System.Windows.Forms;

namespace AutoJack.View
{
  public class BetView : Form
  {
    private BetController BetController;
    private IContainer components = (IContainer) null;
    private Label label1;
    private Label BetLabel;
    private TextBox BetInput;
    private Button DoneButton;
    private Label BalanceLabel;
    private TextBox BalanceInput;
    private Label ExplainLabel;
    private Button CancelButton;

    public BetView(BetController BetController)
    {
      this.BetController = BetController;
      this.InitializeComponent();
      int balance = BetController.GameController.Game.Player.Balance;
      this.BalanceInput.Text = balance > 0 ? balance.ToString() : BetController.GameController.Game.Player.Owing.ToString();
      this.BetInput.KeyPress += new KeyPressEventHandler(this.BetInputEnterKey);
      this.DoneButton.Click += new EventHandler(this.GetBetInput);
      this.CancelButton.Click += new EventHandler(this.CancelBetEvent);
    }

    private void BetInputEnterKey(object sender, KeyPressEventArgs e)
    {
      if (e.KeyChar != '\r')
        return;
      e.Handled = true;
      this.DoneButton.PerformClick();
    }

    private void GetBetInput(object sender, EventArgs e)
    {
      int result = 0;
      string text = this.BetInput.Text;
      if (text.Length == 0 || text == "Enter a number")
      {
        int num1 = (int) MessageBox.Show("No bet has been placed.");
      }
      else if (int.TryParse(text, out result))
      {
        if (this.CheckBet(result))
        {
          this.BetController.GameController.Game.Player.Bet = result;
          this.BetController.NotifyGameControllerAsync(true);
          this.Close();
        }
      }
      else
      {
        int num2 = (int) MessageBox.Show("Invalid input.");
      }
    }

    private void CancelBetEvent(object sender, EventArgs e)
    {
      this.BetController.NotifyGameControllerAsync(false);
      this.Close();
    }

    private bool CheckBet(int Bet)
    {
      if (Bet < 0)
      {
        int num = (int) MessageBox.Show("Bet must be a positive number.");
        return false;
      }
      int balance = this.BetController.GameController.Game.Player.Balance;
      if (balance <= 0 && (Bet > 1000 || Bet < 50))
      {
        int num = (int) MessageBox.Show("Negative Balance: Bet should should be in range [50, 1000].");
        return false;
      }
      if (balance > 0 && Bet > balance)
      {
        int num = (int) MessageBox.Show("Bet must be lower than Balance.");
        return false;
      }
      if (Bet >= (int) ((double) balance * 0.05))
        return true;
      int num1 = (int) MessageBox.Show("Bet must be higher than " + ((int) ((double) balance * 0.05)).ToString() + ".");
      return false;
    }

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(disposing);
    }

    private void InitializeComponent()
    {
      this.label1 = new Label();
      this.BetLabel = new Label();
      this.BetInput = new TextBox();
      this.DoneButton = new Button();
      this.BalanceLabel = new Label();
      this.BalanceInput = new TextBox();
      this.ExplainLabel = new Label();
      this.CancelButton = new Button();
      this.SuspendLayout();
      this.label1.Dock = DockStyle.Top;
      this.label1.Font = new Font("Microsoft Sans Serif", 12.75f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.label1.Location = new Point(0, 0);
      this.label1.Name = "label1";
      this.label1.Size = new Size(304, 23);
      this.label1.TabIndex = 0;
      this.label1.Text = "Place Bet";
      this.label1.TextAlign = ContentAlignment.MiddleCenter;
      this.BetLabel.AutoSize = true;
      this.BetLabel.Location = new Point(12, 125);
      this.BetLabel.Name = "BetLabel";
      this.BetLabel.Size = new Size(23, 13);
      this.BetLabel.TabIndex = 1;
      this.BetLabel.Text = "Bet";
      this.BetInput.Location = new Point(64, 118);
      this.BetInput.Name = "BetInput";
      this.BetInput.Size = new Size(228, 20);
      this.BetInput.TabIndex = 2;
      this.BetInput.Text = "Enter a number";
      this.DoneButton.Location = new Point(15, 144);
      this.DoneButton.Name = "DoneButton";
      this.DoneButton.Size = new Size(75, 23);
      this.DoneButton.TabIndex = 3;
      this.DoneButton.Text = "Done";
      this.DoneButton.UseVisualStyleBackColor = true;
      this.BalanceLabel.AutoSize = true;
      this.BalanceLabel.Location = new Point(12, 89);
      this.BalanceLabel.Name = "BalanceLabel";
      this.BalanceLabel.Size = new Size(46, 13);
      this.BalanceLabel.TabIndex = 4;
      this.BalanceLabel.Text = "Balance";
      this.BalanceInput.Enabled = false;
      this.BalanceInput.Location = new Point(64, 82);
      this.BalanceInput.Name = "BalanceInput";
      this.BalanceInput.Size = new Size(228, 20);
      this.BalanceInput.TabIndex = 5;
      this.ExplainLabel.ForeColor = Color.DarkRed;
      this.ExplainLabel.Location = new Point(12, 32);
      this.ExplainLabel.Name = "ExplainLabel";
      this.ExplainLabel.Size = new Size(280, 44);
      this.ExplainLabel.TabIndex = 6;
      this.ExplainLabel.Text = "Note: Bet is a positive number, higher than 5% of Balance and lower than Balance. Bet should not be higher than 1000 or lower than 50 if Balance is negative.";
      this.CancelButton.BackColor = Color.OrangeRed;
      this.CancelButton.Location = new Point(217, 144);
      this.CancelButton.Name = "CancelButton";
      this.CancelButton.Size = new Size(75, 23);
      this.CancelButton.TabIndex = 7;
      this.CancelButton.Text = "Cancel";
      this.CancelButton.UseVisualStyleBackColor = false;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(304, 182);
      this.ControlBox = false;
      this.Controls.Add((Control) this.CancelButton);
      this.Controls.Add((Control) this.ExplainLabel);
      this.Controls.Add((Control) this.BalanceInput);
      this.Controls.Add((Control) this.BalanceLabel);
      this.Controls.Add((Control) this.DoneButton);
      this.Controls.Add((Control) this.BetInput);
      this.Controls.Add((Control) this.BetLabel);
      this.Controls.Add((Control) this.label1);
      this.Name = nameof (BetView);
      this.StartPosition = FormStartPosition.CenterParent;
      this.Text = "Bet";
      this.ResumeLayout(false);
      this.PerformLayout();
    }
  }
}
