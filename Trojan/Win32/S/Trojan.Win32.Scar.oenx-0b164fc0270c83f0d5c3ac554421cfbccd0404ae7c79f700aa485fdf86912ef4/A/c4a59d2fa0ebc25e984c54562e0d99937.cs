// Decompiled with JetBrains decompiler
// Type: A.c4a59d2fa0ebc25e984c54562e0d99937
// Assembly: BitcoinBlackmailer, Version=2.4.5.0, Culture=neutral, PublicKeyToken=null
// MVID: 4C6D3383-405F-454B-A25B-FBC4B1EC529F
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\Trojan.Win32.Scar.oenx-0b164fc0270c83f0d5c3ac554421cfbccd0404ae7c79f700aa485fdf86912ef4.exe

using System;
using System.Reflection;
using System.Text;

namespace A
{
  internal class c4a59d2fa0ebc25e984c54562e0d99937
  {
    internal static readonly byte[] c6f1245b2b577de276af81e10ab5e619a;

    static c4a59d2fa0ebc25e984c54562e0d99937()
    {
      if (c4a59d2fa0ebc25e984c54562e0d99937.c6f1245b2b577de276af81e10ab5e619a != null)
        return;
label_1:
      switch (5)
      {
        case 0:
          goto label_1;
        default:
          if (false)
          {
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (c4a59d2fa0ebc25e984c54562e0d99937.\u002Ecctor);
          }
          byte[] bytes = Convert.FromBase64String("Qml0Y29pbkJsYWNrbWFpbGVyJA==");
          string name = Encoding.UTF8.GetString(bytes, 0, bytes.Length);
          c4a59d2fa0ebc25e984c54562e0d99937.c6f1245b2b577de276af81e10ab5e619a = c3c2c7ed57c9be715407a91dab22fc681.c8cd1f2364f9d323fc7cd6a27b2293cc4(97L, Assembly.GetExecutingAssembly().GetManifestResourceStream(name));
          break;
      }
    }

    internal static string c665b0cad13ff30f54bc12d341300f2e2(int c980f211b86b1c0f5e30f85826b75f0fd)
    {
      int count;
      if (((int) c4a59d2fa0ebc25e984c54562e0d99937.c6f1245b2b577de276af81e10ab5e619a[c980f211b86b1c0f5e30f85826b75f0fd] & 128) == 0)
      {
label_1:
        switch (6)
        {
          case 0:
            goto label_1;
          default:
            if (false)
            {
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (c4a59d2fa0ebc25e984c54562e0d99937.c665b0cad13ff30f54bc12d341300f2e2);
            }
            count = (int) c4a59d2fa0ebc25e984c54562e0d99937.c6f1245b2b577de276af81e10ab5e619a[c980f211b86b1c0f5e30f85826b75f0fd];
            ++c980f211b86b1c0f5e30f85826b75f0fd;
            break;
        }
      }
      else if (((int) c4a59d2fa0ebc25e984c54562e0d99937.c6f1245b2b577de276af81e10ab5e619a[c980f211b86b1c0f5e30f85826b75f0fd] & 64) == 0)
      {
        count = ((int) c4a59d2fa0ebc25e984c54562e0d99937.c6f1245b2b577de276af81e10ab5e619a[c980f211b86b1c0f5e30f85826b75f0fd] & -129) << 8 | (int) c4a59d2fa0ebc25e984c54562e0d99937.c6f1245b2b577de276af81e10ab5e619a[c980f211b86b1c0f5e30f85826b75f0fd + 1];
        c980f211b86b1c0f5e30f85826b75f0fd += 2;
      }
      else
      {
        count = ((int) c4a59d2fa0ebc25e984c54562e0d99937.c6f1245b2b577de276af81e10ab5e619a[c980f211b86b1c0f5e30f85826b75f0fd] & -193) << 24 | (int) c4a59d2fa0ebc25e984c54562e0d99937.c6f1245b2b577de276af81e10ab5e619a[c980f211b86b1c0f5e30f85826b75f0fd + 1] << 16 | (int) c4a59d2fa0ebc25e984c54562e0d99937.c6f1245b2b577de276af81e10ab5e619a[c980f211b86b1c0f5e30f85826b75f0fd + 2] << 8 | (int) c4a59d2fa0ebc25e984c54562e0d99937.c6f1245b2b577de276af81e10ab5e619a[c980f211b86b1c0f5e30f85826b75f0fd + 3];
        c980f211b86b1c0f5e30f85826b75f0fd += 4;
      }
      if (count >= 1)
        return string.Intern(Encoding.Unicode.GetString(c4a59d2fa0ebc25e984c54562e0d99937.c6f1245b2b577de276af81e10ab5e619a, c980f211b86b1c0f5e30f85826b75f0fd, count));
label_9:
      switch (1)
      {
        case 0:
          goto label_9;
        default:
          return string.Empty;
      }
    }
  }
}
