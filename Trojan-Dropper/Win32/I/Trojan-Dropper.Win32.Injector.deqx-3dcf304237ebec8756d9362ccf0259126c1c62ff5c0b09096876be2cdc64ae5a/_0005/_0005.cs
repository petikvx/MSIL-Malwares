// Decompiled with JetBrains decompiler
// Type: .
// Assembly: file, Version=11.0.0.0, Culture=neutral, PublicKeyToken=71f2cf7c2509b8fe
// MVID: 1F473243-1123-401F-8099-7648B7C34C41
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan-Dropper.Win32.Injector.deqx-3dcf304237ebec8756d9362ccf0259126c1c62ff5c0b09096876be2cdc64ae5a.exe

using \u0004;
using \u0005;
using System;
using System.Runtime.InteropServices;
using System.Threading;

namespace \u0005
{
  internal abstract class \u0005
  {
    private static bool \u0001;
    private \u0001 \u0001;
    private static readonly object \u0001;

    public event \u0001 SendingReportFeedback
    {
      add
      {
        \u0001 obj1;
        \u0001 comparand;
        \u0001 obj2;
        try
        {
          if (false)
            goto label_7;
label_1:
          \u0001 obj3 = this.\u0001;
          if (true)
            obj1 = obj3;
label_2:
          if (true)
          {
            if (false)
              goto label_7;
          }
          else
            goto label_5;
label_4:
          \u0001 obj4 = obj1;
          if (true)
            comparand = obj4;
label_5:
          \u0001 obj5 = (\u0001) \u009D\u0004.\u0084\u0003((Delegate) comparand, (Delegate) value);
          if (true)
            goto label_11;
label_6:
          \u0001 obj6 = Interlocked.CompareExchange<\u0001>(ref this.\u0001, obj2, comparand);
          if (true)
          {
            obj1 = obj6;
            goto label_7;
          }
          else
            goto label_7;
label_11:
          obj2 = obj5;
          goto label_6;
label_7:
          if (true)
          {
            if (true)
            {
              if (obj1 != comparand)
                goto label_2;
            }
            else
              goto label_4;
          }
          else
            goto label_1;
        }
        catch (Exception ex)
        {
          \u0001 o1 = obj1;
          \u0001 o2 = comparand;
          \u0001 o3 = obj2;
          \u0001 o5 = value;
          \u0008.\u0004.\u0002(ex, (object) o1, (object) o2, (object) o3, (object) this, (object) o5);
          throw;
        }
      }
      remove
      {
        \u0001 obj1;
        \u0001 comparand;
        \u0001 obj2;
        try
        {
          if (false)
            goto label_7;
label_1:
          \u0001 obj3 = this.\u0001;
          if (true)
            obj1 = obj3;
label_2:
          if (true)
          {
            if (false)
              goto label_7;
          }
          else
            goto label_5;
label_4:
          \u0001 obj4 = obj1;
          if (true)
            comparand = obj4;
label_5:
          \u0001 obj5 = (\u0001) \u009D\u0004.\u0086\u0003((Delegate) comparand, (Delegate) value);
          if (true)
            goto label_11;
label_6:
          \u0001 obj6 = Interlocked.CompareExchange<\u0001>(ref this.\u0001, obj2, comparand);
          if (true)
          {
            obj1 = obj6;
            goto label_7;
          }
          else
            goto label_7;
label_11:
          obj2 = obj5;
          goto label_6;
label_7:
          if (true)
          {
            if (true)
            {
              if (obj1 != comparand)
                goto label_2;
            }
            else
              goto label_4;
          }
          else
            goto label_1;
        }
        catch (Exception ex)
        {
          \u0001 o1 = obj1;
          \u0001 o2 = comparand;
          \u0001 o3 = obj2;
          \u0001 o5 = value;
          \u0008.\u0004.\u0002(ex, (object) o1, (object) o2, (object) o3, (object) this, (object) o5);
          throw;
        }
      }
    }

    protected void \u0002(uint featureId)
    {
      object obj1;
      try
      {
        try
        {
          object obj2 = \u0005.\u0005.\u0001;
          if (true)
            goto label_13;
label_1:
          Monitor.Enter(obj2);
          try
          {
            this.\u0002();
            int num;
            do
            {
              if (true)
              {
                int featureId1 = (int) featureId;
                while (true)
                {
                  if (true)
                  {
                    \u0003.\u0002((uint) featureId1);
                    goto label_8;
                  }
                }
                num = featureId1;
                goto label_9;
              }
label_8:
              num = 0;
label_9:;
            }
            while (num != 0);
            return;
          }
          finally
          {
            \u0008\u0004.\u007F\u0005(obj1);
          }
label_13:
          obj1 = obj2;
          goto label_1;
        }
        catch
        {
        }
      }
      catch (Exception ex)
      {
        object o1 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<uint> o3 = (ValueType) featureId;
        \u0008.\u0004.\u0002(ex, o1, (object) this, (object) o3);
        throw;
      }
    }

    protected void \u0002(string featureName)
    {
      object obj1;
      try
      {
        try
        {
          object obj2 = \u0005.\u0005.\u0001;
          if (true)
            goto label_6;
label_1:
          Monitor.Enter(obj2);
          try
          {
            this.\u0002();
            do
            {
              \u0003.\u0003(featureName);
            }
            while (false);
            return;
          }
          finally
          {
            \u0008\u0004.\u007F\u0005(obj1);
          }
label_6:
          obj1 = obj2;
          goto label_1;
        }
        catch
        {
        }
      }
      catch (Exception ex)
      {
        object o1 = obj1;
        string o3 = featureName;
        \u0008.\u0004.\u0002(ex, o1, (object) this, (object) o3);
        throw;
      }
    }

    private void \u0002()
    {
      \u0005.\u0005.\u0007 obj1;
      Thread thread1;
      try
      {
        if (false)
          goto label_5;
label_1:
        if (true)
        {
          if (\u0005.\u0005.\u0001)
            return;
          \u0005.\u0005.\u0007 obj2 = new \u0005.\u0005.\u0007();
          if (true)
            goto label_12;
label_4:
          obj1.\u0001 = this;
          obj1.\u0001 = \u0003.\u0002();
          goto label_5;
label_12:
          obj1 = obj2;
          goto label_4;
        }
label_5:
        if (true)
        {
          Thread thread2 = new Thread(new ThreadStart(obj1.\u0002));
          if (true)
            goto label_11;
label_7:
          \u0091\u0005.\u007E\u008A\u0005((object) thread1, ApartmentState.STA);
          if (true)
          {
            \u0008\u0004.\u007E\u0083\u0005((object) thread1);
            goto label_9;
          }
          else
            goto label_1;
label_11:
          thread1 = thread2;
          goto label_7;
        }
label_9:
        \u0005\u0005.\u007E\u0093\u0003((object) \u0003\u0005.\u0091\u0003(), new EventHandler(this.\u0002));
        \u0005.\u0005.\u0001 = true;
      }
      catch (Exception ex)
      {
        Thread o1 = thread1;
        \u0005.\u0005.\u0007 o2 = obj1;
        \u0008.\u0004.\u0002(ex, (object) o1, (object) o2, (object) this);
        throw;
      }
    }

    private void \u0002([In] object obj0, [In] EventArgs obj1)
    {
      \u0002 usageCounts;
      \u0006 sender;
      try
      {
        if (true)
        {
          if (true)
          {
            if (false)
              goto label_5;
label_3:
            if (true)
            {
              \u0002 obj = \u0003.\u0003();
              if (true)
                usageCounts = obj;
            }
            else
              goto label_10;
label_5:
            if (false)
              goto label_3;
          }
          if (usageCounts.IsEmpty)
            goto label_11;
        }
        else
          goto label_8;
label_7:
        \u0006 obj2 = new \u0006(usageCounts);
        if (true)
          sender = obj2;
label_8:
        sender.SendingReportFeedback += new \u0001(this.\u0002);
        if (this.\u0002())
          this.\u0002(sender);
        else
          goto label_11;
label_10:
        \u0003.\u0002();
label_11:
        if (true)
        {
          if (false)
            goto label_8;
        }
        else
          goto label_7;
      }
      catch (Exception ex)
      {
        \u0002 o1 = usageCounts;
        \u0006 o2 = sender;
        object o4 = obj0;
        EventArgs o5 = obj1;
        \u0008.\u0004.\u0002(ex, (object) o1, (object) o2, (object) this, o4, (object) o5);
        throw;
      }
    }

    protected abstract void \u0002(\u0006 sender);

    protected abstract bool \u0002();

    private void \u0002([In] \u0002 obj0)
    {
label_0:
      \u0006 sender;
      try
      {
        \u0006 obj = new \u0006(obj0);
        if (true)
          goto label_13;
label_1:
        if (false)
          return;
        sender.SendingReportFeedback += new \u0001(this.\u0002);
        int num1 = 2;
        if (num1 != 0)
        {
          if (num1 == 0)
            goto label_10;
        }
        else
          goto label_11;
label_4:
        int num2 = 3;
        if (num2 != 0)
        {
          if (num2 != 0)
            num2 = this.\u0002() ? 1 : 0;
          else
            goto label_0;
        }
        if (num2 != 0)
          this.\u0002(sender);
        \u0007.\u0002();
label_10:
        num1 = 7;
label_11:
        if (num1 != 0)
          return;
        goto label_4;
label_13:
        sender = obj;
        goto label_1;
      }
      catch (Exception ex)
      {
        \u0006 o1 = sender;
        \u0002 o3 = obj0;
        \u0008.\u0004.\u0002(ex, (object) o1, (object) this, (object) o3);
        throw;
      }
    }

    private void \u0002([In] object obj0, [In] \u0002 obj1)
    {
      \u0001 obj2;
      try
      {
        if (true)
        {
          \u0001 obj3 = this.\u0001;
          if (true)
            obj2 = obj3;
        }
        if (obj2 == null)
          return;
        obj2(obj0, obj1);
      }
      catch (Exception ex)
      {
        \u0001 o1 = obj2;
        object o3 = obj0;
        \u0002 o4 = obj1;
        \u0008.\u0004.\u0002(ex, (object) o1, (object) this, o3, (object) o4);
        throw;
      }
    }

    protected \u0005()
    {
      try
      {
      }
      catch (Exception ex)
      {
        \u0008.\u0004.\u0002(ex, (object) this);
        throw;
      }
    }

    static \u0005()
    {
      try
      {
        \u0005.\u0005.\u0001 = new object();
      }
      catch (Exception ex)
      {
        \u0008.\u0004.\u0002(ex);
        throw;
      }
    }

    private sealed class \u0007
    {
      public \u0002 \u0001;
      public \u0005.\u0005 \u0001;

      public \u0007()
      {
        try
        {
        }
        catch (Exception ex)
        {
          \u0008.\u0004.\u0002(ex, (object) this);
          throw;
        }
      }

      public void \u0002()
      {
        try
        {
          this.\u0001.\u0002(this.\u0001);
        }
        catch (Exception ex)
        {
          \u0008.\u0004.\u0002(ex, (object) this);
          throw;
        }
      }
    }
  }
}
