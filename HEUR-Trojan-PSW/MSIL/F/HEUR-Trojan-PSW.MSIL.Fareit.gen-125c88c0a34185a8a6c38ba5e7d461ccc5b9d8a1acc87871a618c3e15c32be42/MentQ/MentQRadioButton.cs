// Decompiled with JetBrains decompiler
// Type: MentQ.MentQRadioButton
// Assembly: جdk6氏صڤSnb, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DC493AC2-8E19-4B7E-8F8B-A7CB6CD6346F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan-PSW.MSIL.Fareit.gen-125c88c0a34185a8a6c38ba5e7d461ccc5b9d8a1acc87871a618c3e15c32be42.exe

using System;
using System.ComponentModel;
using System.Drawing;
using System.Drawing.Drawing2D;
using System.Windows.Forms;

namespace MentQ
{
  [Category("MentQ")]
  public class MentQRadioButton : RadioButton
  {
    public MentQRadioButton()
    {
      this.Font = new Font("Verdana", 7f);
      this.ForeColor = Color.Black;
      this.BackColor = MentQDefaults.MentQBlue;
      this.SetStyle(ControlStyles.UserPaint | ControlStyles.ResizeRedraw | ControlStyles.AllPaintingInWmPaint | ControlStyles.CacheText | ControlStyles.OptimizedDoubleBuffer, true);
      this.AutoSize = true;
    }

    [Category("Appearance")]
    public override string Text
    {
      get => base.Text;
      set
      {
        base.Text = value;
        this.Invalidate();
      }
    }

    public override Size GetPreferredSize(Size proposedSize) => new Size(17 + Convert.ToInt32(Graphics.FromHwnd(this.Handle).MeasureString(this.Text, this.Font).Width), 14);

    protected override void OnCreateControl()
    {
      this.DoubleBuffered = true;
      base.OnCreateControl();
    }

    protected override void OnPaint(PaintEventArgs e)
    {
      base.OnPaint(e);
      Graphics graphics = e.Graphics;
      graphics.SmoothingMode = SmoothingMode.HighQuality;
      graphics.Clear(this.Parent.BackColor);
      using (SolidBrush solidBrush = new SolidBrush(Color.FromArgb(5, 30, 30, 30)))
        graphics.FillEllipse((Brush) solidBrush, 0, 0, 13, 13);
      if (this.Checked)
      {
        using (SolidBrush solidBrush = new SolidBrush(this.BackColor))
          graphics.FillEllipse((Brush) solidBrush, 3, 3, 7, 7);
      }
      using (Pen pen = new Pen(Color.FromArgb(85, 13, 13, 13)))
        graphics.DrawEllipse(pen, 0, 0, 13, 13);
      using (SolidBrush solidBrush = new SolidBrush(this.ForeColor))
        graphics.DrawString(this.Text, this.Font, (Brush) solidBrush, 15f, (float) (((double) this.Height - (double) graphics.MeasureString(this.Text, this.Font).Height) / 2.0));
      if (this.Enabled)
        return;
      using (SolidBrush solidBrush = new SolidBrush(Color.FromArgb(100, 222, 222, 222)))
      {
        graphics.FillEllipse((Brush) solidBrush, 2, 2, 9, 19);
        graphics.DrawString(this.Text, this.Font, (Brush) solidBrush, 15f, (float) (((double) this.Height - (double) graphics.MeasureString(this.Text, this.Font).Height) / 2.0));
      }
    }
  }
}
