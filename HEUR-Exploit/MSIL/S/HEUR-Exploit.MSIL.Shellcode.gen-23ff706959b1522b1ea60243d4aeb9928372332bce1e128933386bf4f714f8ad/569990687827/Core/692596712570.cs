// Decompiled with JetBrains decompiler
// Type: 569990687827.Core.692596712570
// Assembly: 569990687827, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: 58118FF0-4F0E-4F7B-A626-B24D4B565FEB
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-23ff706959b1522b1ea60243d4aeb9928372332bce1e128933386bf4f714f8ad.exe

using \u003085363999524;
using \u003210067131537;
using \u003569990687827.Models;
using \u003569990687827.Utils;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

namespace \u003569990687827.Core
{
  public static class \u003692596712570
  {
    private static \u003088996991491 \u003613810508076(string _param0)
    {
      FileInfo[] files = new DirectoryInfo(_param0).GetFiles("*.jpg");
      if (!((IEnumerable<FileInfo>) files).Any<FileInfo>())
        return (\u003088996991491) null;
      FileInfo fileInfo;
      if (\u003725159542770.\u003338572595779)
      {
        Random random = new Random();
        fileInfo = files[random.Next(0, files.Length - 1)];
      }
      else
      {
        fileInfo = ((IEnumerable<FileInfo>) files).OrderByDescending<FileInfo, DateTime>((Func<FileInfo, DateTime>) (_param1 => _param1.LastWriteTime)).FirstOrDefault<FileInfo>();
        if (fileInfo == null)
          return (\u003088996991491) null;
      }
      string fullName = fileInfo.FullName;
      string path = fullName + ".xml";
      string str = "";
      if (!File.Exists(path))
        path = Path.Combine(Path.GetDirectoryName(fullName), ((IEnumerable<string>) Path.GetFileName(fullName).Split('_')).First<string>() + ".xml");
      if (File.Exists(path))
      {
        try
        {
          str = ((\u003225540370127) path.\u003525703573574<\u003960163740757>()).get_image().\u003735449047394;
        }
        catch
        {
        }
      }
      \u003088996991491 obj = new \u003088996991491();
      ((\u003216083080302) obj).set_ImageFileName(fullName);
      obj.\u003855702853306 = str;
      obj.\u003523740791809 = "";
      return obj;
    }

    public static IList<\u003248917970330> \u003909182148337()
    {
      List<\u003248917970330> objList1 = new List<\u003248917970330>();
      string path = Path.Combine(\u003665425881749.\u003249853457110(), "data", "holidays.csv");
      if (!File.Exists(path))
        return (IList<\u003248917970330>) objList1;
      foreach (string readAllLine in File.ReadAllLines(path))
      {
        if (!string.IsNullOrWhiteSpace(readAllLine))
        {
          string[] strArray1 = readAllLine.Split(new char[1]
          {
            ','
          }, StringSplitOptions.RemoveEmptyEntries);
          if (strArray1.Length >= 2)
          {
            string str1 = strArray1[0].Replace("\"", string.Empty).Trim();
            string str2 = strArray1[1].Replace("\"", string.Empty).Trim();
            string[] strArray2 = str1.Split('/');
            if (strArray2.Length == 3)
            {
              List<\u003248917970330> objList2 = objList1;
              \u003248917970330 obj = new \u003248917970330();
              obj.\u003221106403287 = str2;
              obj.\u003325711085238 = int.Parse(strArray2[0]);
              obj.\u003453506968768 = int.Parse(strArray2[1]);
              ((\u003718194170019) obj).set_Day(int.Parse(strArray2[2]));
              objList2.Add(obj);
            }
          }
        }
      }
      return (IList<\u003248917970330>) objList1;
    }
  }
}
