// Decompiled with JetBrains decompiler
// Type: GLuaR.Queues.AnnotationPredicateQueue
// Assembly: c, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: CCB3E154-F36D-403E-8019-8861E9AEB8FC
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Vobfus.gen-191db013c67081442ef5e75edd00c2572f6ec9d7f629ddac9bba8942722c061d.exe

using c.Configurations;
using c.Specifications;
using c.States;
using System.IO;
using System.Runtime.CompilerServices;

namespace GLuaR.Queues
{
  public static class AnnotationPredicateQueue
  {
    [MethodImpl(MethodImplOptions.NoInlining)]
    public static void ForgotField(string instance, ExceptionComparatorSpec second)
    {
      int num1 = 4;
      if (AnnotationPredicateQueue.ForgotManager())
        goto label_8;
label_1:
      FileStream fileStream;
      try
      {
        fileStream = File.Create(instance);
      }
      catch (System.Exception ex)
      {
        int num2 = (int) new IndexerStateStatus(ex).ShowDialog();
      }
      StreamWriter streamWriter;
      try
      {
        streamWriter = new StreamWriter((Stream) fileStream);
      }
      catch (System.Exception ex)
      {
        int num3 = (int) new IndexerStateStatus(ex).ShowDialog();
      }
      LsBrkCond strategy = second.strategy;
      if (strategy == LsBrkCond.Addon)
      {
        AnnotationPredicateQueue.SearchField((TextWriter) streamWriter, second);
        return;
      }
      goto label_12;
label_8:
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 4:
            fileStream = (FileStream) null;
            num1 = 2;
            continue;
          case 1:
          case 3:
            goto label_12;
          case 2:
            goto label_16;
          case 5:
            goto label_1;
          case 6:
            goto label_11;
          default:
            num1 = 1;
            continue;
        }
      }
label_11:
      return;
label_12:
      if (strategy != LsBrkCond.Gamemode)
        return;
      AnnotationPredicateQueue.GetField((TextWriter) streamWriter, second);
      if (AnnotationPredicateQueue.ForgotManager())
      {
        num1 = 6;
        goto label_8;
      }
label_16:
      streamWriter = (StreamWriter) null;
      num1 = 5;
      goto label_8;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private static void SearchField(TextWriter res, ExceptionComparatorSpec ivk)
    {
      int num1 = 7;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
              goto label_11;
            case 1:
              goto label_8;
            case 2:
            case 6:
              goto label_9;
            case 3:
              goto label_6;
            case 4:
            case 8:
              goto label_2;
            case 5:
              goto label_12;
            case 7:
              goto label_1;
            case 9:
              goto label_7;
            case 10:
              goto label_14;
            default:
              if (true)
              {
                num2 = 5;
                continue;
              }
              goto label_6;
          }
        }
label_1:
        res.WriteLine("\"AddonInfo\"");
        num1 = 1;
        continue;
label_2:
        res.WriteLine();
        res.WriteLine("\t// Won't be active unless the following GCFs are available and");
        res.WriteLine("\t// are mounted");
        goto label_12;
label_6:
        res.WriteLine();
        res.WriteLine("\t\"info\"\t\t\"" + ivk._Params + "\"");
        num1 = 8;
        continue;
label_7:
        res.WriteLine("}");
        res.Close();
        num1 = 10;
        continue;
label_8:
        res.WriteLine("{");
        res.WriteLine("\t\"name\"\t\t\"" + ivk.m_Product + "\"");
        res.WriteLine("\t\"version\"\t\"" + ivk.m_Attr + "\"");
        num1 = 0;
        continue;
label_9:
        int index;
        if (index >= ivk.m_Creator.Count)
        {
          res.WriteLine("\t}");
          num1 = 9;
          continue;
        }
        res.WriteLine("\t\t\"" + index.ToString() + "\"\t\t\"" + ivk.m_Creator[index].token.ToString() + "\"");
        ++index;
        num1 = 2;
        continue;
label_11:
        res.WriteLine("\t\"update\"\t\"" + ivk.m_Global + "\"");
        res.WriteLine("\t\"author_name\"\t\"" + ivk.@struct + "\"");
        res.WriteLine("\t\"author_email\"\t\"" + ivk._Role + "\"");
        res.WriteLine("\t\"author_url\"\t\"" + ivk._Item + "\"");
        num1 = 3;
        continue;
label_12:
        res.WriteLine("\t\"GCFRequires\"");
        res.WriteLine("\t{");
        index = 0;
        goto label_9;
      }
label_14:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private static void GetField(TextWriter def, ExceptionComparatorSpec b)
    {
      int num1 = 7;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
              def.WriteLine("\t// Setting this to 0 will hide the gamemode entry");
              if (!AnnotationPredicateQueue.ChangeManager())
              {
                num2 = 1;
                continue;
              }
              goto case 2;
            case 1:
            case 5:
              goto label_2;
            case 2:
            case 3:
              def.WriteLine();
              def.WriteLine("\t\"info\"\t\t\"" + b._Params + "\"");
              def.WriteLine();
              goto case 0;
            case 4:
              def.WriteLine("{");
              def.WriteLine("\t\"name\"\t\t\"" + b.m_Product + "\"");
              def.WriteLine("\t\"version\"\t\"" + b.m_Attr + "\"");
              def.WriteLine();
              if (true)
              {
                num2 = 6;
                continue;
              }
              goto label_9;
            case 6:
              def.WriteLine("\t\"author_name\"\t\"" + b.@struct + "\"");
              def.WriteLine("\t\"author_email\"\t\"" + b._Role + "\"");
              def.WriteLine("\t\"author_url\"\t\"" + b._Item + "\"");
              if (true)
              {
                num2 = 2;
                continue;
              }
              goto label_2;
            case 7:
              goto label_9;
            case 8:
              goto label_11;
            default:
              goto label_7;
          }
        }
label_2:
        def.WriteLine("\t\"hide\"\t\t\"" + (b.m_Printer ? 1 : 0).ToString() + "\"");
        def.WriteLine("}");
        def.Close();
        num1 = 8;
        continue;
label_7:
        num1 = 0;
        continue;
label_9:
        def.WriteLine("\"Gamemode\"");
        num1 = 4;
      }
label_11:;
    }

    internal static bool ForgotManager() => true;

    internal static bool ChangeManager() => false;
  }
}
