// Decompiled with JetBrains decompiler
// Type: TagMp3Saito.MusicCsv
// Assembly: ManualResetEv, Version=0.7.2.0, Culture=neutral, PublicKeyToken=null
// MVID: 555BB952-8DEA-4CDE-87A4-0E642B4B65E6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Backdoor.MSIL.Androm.gen-1e9b14262f935e7f822b39afe45842ceac9c584e70a3b520d8f391d975d600ee.exe

using Id3Tag;
using Id3Tag.HighLevel;
using Id3Tag.HighLevel.Id3Frame;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Text.RegularExpressions;

namespace TagMp3Saito
{
  public class MusicCsv
  {
    private MusicList _musics = new MusicList();

    public MusicCsv(MusicList musics) => this._musics = musics;

    public MusicCsv(string path) => this.Path = path;

    public string Path { get; set; }

    public void SaveCsvFile(string path)
    {
      StringBuilder stringBuilder = new StringBuilder();
      if (this._musics == null)
        throw new Exception("no songs loaded to save the CSV");
      foreach (Mp3Field mp3Field in MusicCsv.GetSelectedMp3FieldsFromJSON())
      {
        stringBuilder.Append("=\"");
        stringBuilder.Append((object) mp3Field);
        stringBuilder.Append("\"");
        stringBuilder.Append("\t");
      }
      stringBuilder.Append("=\"");
      stringBuilder.Append("** FullPath **");
      stringBuilder.Append("\"");
      stringBuilder.AppendLine();
      foreach (MusicFile music in (List<MusicFile>) this._musics)
      {
        stringBuilder.Append(this.Mus2CsvLine(music, "=\"", "\"", "\t", new Func<string, string>(MusicCsv.EncoderForCsv)));
        stringBuilder.AppendLine();
      }
      StreamWriter streamWriter = new StreamWriter(path, false, Encoding.Unicode);
      streamWriter.Write(stringBuilder.ToString());
      streamWriter.Flush();
      streamWriter.Close();
    }

    private string Mus2CsvLine(
      MusicFile mus,
      string startWith,
      string endWith,
      string separator,
      Func<string, string> encoderForCsv)
    {
      StringBuilder stringBuilder = new StringBuilder();
      foreach (Mp3Field mp3Field in MusicCsv.GetSelectedMp3FieldsFromJSON())
      {
        Mp3Field fieldJSON = mp3Field;
        stringBuilder.Append(startWith);
        if (fieldJSON.TagName == "XXXXXXX")
          stringBuilder.Append(MusicCsv.EncoderForCsv(fieldJSON.Valor.ToString()));
        else if (mus.Mp3Fields.Any<Mp3Field>((Func<Mp3Field, bool>) (f => f.TagName == fieldJSON.TagName)))
          stringBuilder.Append(mus.Mp3Fields.FirstOrDefault<Mp3Field>((Func<Mp3Field, bool>) (f => f.TagName == fieldJSON.TagName)).Valor);
        else
          stringBuilder.Append("");
        stringBuilder.Append(endWith);
        stringBuilder.Append(separator);
      }
      stringBuilder.Append(startWith);
      stringBuilder.Append(mus.FullPath);
      stringBuilder.Append(endWith);
      return stringBuilder.ToString();
    }

    private static string EncoderForCsv(string original)
    {
      StringBuilder stringBuilder = new StringBuilder(original);
      stringBuilder.Replace("\r", "\\r");
      stringBuilder.Replace("\n", "\\n");
      stringBuilder.Replace("\t", "\\t");
      stringBuilder.Replace("\"", "\"\"");
      return stringBuilder.ToString();
    }

    private static string DecoderFromCsv(string changed)
    {
      StringBuilder stringBuilder = new StringBuilder(changed);
      stringBuilder.Replace("\\r", "\r");
      stringBuilder.Replace("\\n", "\n");
      stringBuilder.Replace("\\t", "\t");
      stringBuilder.Replace("\"\"", "\"");
      return stringBuilder.ToString();
    }

    public void LoadAndSave()
    {
      if (!File.Exists(this.Path))
        return;
      StreamReader streamReader = new StreamReader(this.Path);
      List<Mp3Field> firstLineColumns = MusicCsv.GetFirstLineColumns(streamReader.ReadLine(), "\t");
      int count = firstLineColumns.Count;
      string input;
      while ((input = streamReader.ReadLine()) != null)
      {
        string[] columns = Regex.Replace(Regex.Replace(input, "(^|\\t)(=\")", "$1"), "(\")($|\\t)", "$2").Split('\t');
        MusicFile musicFile = new MusicFile();
        string str = columns[count];
        ((IEnumerable<PropertyInfo>) musicFile.GetType().GetProperties()).Where<PropertyInfo>((Func<PropertyInfo, bool>) (p => p.Name == "FullPath")).Single<PropertyInfo>().SetValue((object) musicFile, (object) str, (object[]) null);
        if (File.Exists(str))
        {
          Id3TagManager id3TagManager = new Id3TagManager();
          FileState tagsStatus = id3TagManager.GetTagsStatus(str);
          if (tagsStatus.Id3V1TagFound)
            id3TagManager.RemoveV1Tag(str);
          if (tagsStatus.Id3V2TagFound)
            id3TagManager.RemoveV2Tag(str);
          string fileName = str + ".aux";
          Id3TagFactory.CreateId3TagManager().WriteV2Tag(str, fileName, this.CreateTagContainer(firstLineColumns, columns));
          FileInfo fileInfo1 = new FileInfo(str);
          FileInfo fileInfo2 = new FileInfo(fileName);
          fileInfo1.Delete();
          fileInfo2.MoveTo(str);
        }
      }
      streamReader.Close();
    }

    private TagContainer CreateTagContainer(List<Mp3Field> mp3Fields, string[] columns)
    {
      TagContainer id3Tag = Id3TagFactory.CreateId3Tag((TagVersion) 0);
      id3Tag.GetId3V23Descriptor().SetHeaderOptions(false, false, false);
      for (int index = 0; index < mp3Fields.Count; ++index)
        id3Tag.Add((IFrame) new TextFrame(mp3Fields[index].TagName, columns[index], Encoding.Default));
      return id3Tag;
    }

    private static List<Mp3Field> GetFirstLineColumns(string row, string sep)
    {
      List<Mp3Field> firstLineColumns = new List<Mp3Field>();
      List<Mp3Field> defaultMp3Fields = MusicCsv.GetDefaultMp3Fields();
      MusicFile musicFile = new MusicFile();
      int index = 0;
      string tagName;
      while (true)
      {
        if (index < row.Split(sep.ToCharArray()[0]).Length)
        {
          string input = row.Split(sep.ToCharArray()[0])[index].Replace("=", string.Empty).Replace("\"", string.Empty);
          tagName = new Regex("^\\[(.*?)\\].*$").Match(input).Groups[1].Value;
          Mp3Field mp3Field1 = defaultMp3Fields.SingleOrDefault<Mp3Field>((Func<Mp3Field, bool>) (ff => ff.TagName == tagName));
          if (mp3Field1 != null || !(input == "** FullPath **"))
          {
            if (mp3Field1 != null || !(input != "** FullPath **"))
            {
              Mp3Field mp3Field2 = new Mp3Field()
              {
                Index = index,
                Active = true,
                Description = mp3Field1.Description,
                DetailedDescription = mp3Field1.DetailedDescription,
                FrameTypeString = mp3Field1.FrameTypeString,
                TagName = mp3Field1.TagName,
                IdV1_Compatible = mp3Field1.IdV1_Compatible
              };
              firstLineColumns.Add(mp3Field2);
              ++index;
            }
            else
              break;
          }
          else
            goto label_6;
        }
        else
          goto label_6;
      }
      throw new Exception("** FullPath ** Column not found at first line, tagName founded:" + tagName);
label_6:
      return firstLineColumns;
    }

    public static List<Mp3Field> GetDefaultMp3Fields() => new List<Mp3Field>()
    {
      new Mp3Field()
      {
        Active = true,
        Description = "Album_Movie_Showtitle(TALB)",
        DetailedDescription = "Album/Movie/Show title",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 8,
        TagName = "TALB",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "BPM(TBPM)",
        DetailedDescription = "BPM (beats per minute)",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 9,
        TagName = "TBPM",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Composer(TCOM)",
        DetailedDescription = "Composer",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 10,
        TagName = "TCOM",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Contenttype(TCON)",
        DetailedDescription = "Content type",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 11,
        TagName = "TCON",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Copyrightmessage(TCOP)",
        DetailedDescription = "Copyright message",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 12,
        TagName = "TCOP",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Date(TDAT)",
        DetailedDescription = "Date (replaced by TDRC in v2.4)",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 13,
        TagName = "TDAT",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Encodingtime(TDEN)",
        DetailedDescription = "Encoding time",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 14,
        TagName = "TDEN",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Playlistdelay(TDLY)",
        DetailedDescription = "Playlist delay",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 15,
        TagName = "TDLY",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Originalreleasetime(TDOR)",
        DetailedDescription = "Original release time",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 16,
        TagName = "TDOR",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Recordingtime(TDRC)",
        DetailedDescription = "Recording time",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 17,
        TagName = "TDRC",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Releasetime(TDRL)",
        DetailedDescription = "Release time",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 18,
        TagName = "TDRL",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Taggingtime(TDTG)",
        DetailedDescription = "Tagging time",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 19,
        TagName = "TDTG",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Encodedby(TENC)",
        DetailedDescription = "Encoded by",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 20,
        TagName = "TENC",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Lyricist_Textwriter(TEXT)",
        DetailedDescription = "Lyricist/Text writer",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 21,
        TagName = "TEXT",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Filetype(TFLT)",
        DetailedDescription = "File type",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 22,
        TagName = "TFLT",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Time(TIME)",
        DetailedDescription = "Time (replaced by TDRC in v2.4)",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 23,
        TagName = "TIME",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Involvedpeoplelist(TIPL)",
        DetailedDescription = "Involved people list",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 24,
        TagName = "TIPL",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Contentgroupdescription(TIT1)",
        DetailedDescription = "Content group description",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 25,
        TagName = "TIT1",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Title_songname_contentdescription(TIT2)",
        DetailedDescription = "Title/songname/content description",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 26,
        TagName = "TIT2",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Subtitle_Descriptionrefinement(TIT3)",
        DetailedDescription = "Subtitle/Description refinement",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 27,
        TagName = "TIT3",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Initialkey(TKEY)",
        DetailedDescription = "Initial key",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 28,
        TagName = "TKEY",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Language(TLAN)",
        DetailedDescription = "Language(s)",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 29,
        TagName = "TLAN",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Length(TLEN)",
        DetailedDescription = "Length",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 30,
        TagName = "TLEN",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Musiciancreditslist(TMCL)",
        DetailedDescription = "Musician credits list",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 31,
        TagName = "TMCL",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Mediatype(TMED)",
        DetailedDescription = "Media type",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 32,
        TagName = "TMED",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Mood(TMOO)",
        DetailedDescription = "Mood",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 33,
        TagName = "TMOO",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Originalalbum_movie_showtitle(TOAL)",
        DetailedDescription = "Original album/movie/show title",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 34,
        TagName = "TOAL",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Originalfilename(TOFN)",
        DetailedDescription = "Original filename",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 35,
        TagName = "TOFN",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Originallyricist_textwriter(TOLY)",
        DetailedDescription = "Original lyricist(s)/text writer(s)",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 36,
        TagName = "TOLY",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Originalartist_performer(TOPE)",
        DetailedDescription = "Original artist(s)/performer(s)",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 37,
        TagName = "TOPE",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Originalreleaseyear(TORY)",
        DetailedDescription = "Original release year (replaced by TDOR in v2.4)",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 38,
        TagName = "TORY",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Fileowner_licensee(TOWN)",
        DetailedDescription = "File owner/licensee",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 39,
        TagName = "TOWN",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Leadperformer_Soloist(TPE1)",
        DetailedDescription = "Lead performer(s)/Soloist(s)",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 40,
        TagName = "TPE1",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Band_orchestra_accompaniment(TPE2)",
        DetailedDescription = "Band/orchestra/accompaniment",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 41,
        TagName = "TPE2",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Conductor_performerrefinement(TPE3)",
        DetailedDescription = "Conductor/performer refinement",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 42,
        TagName = "TPE3",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Interpreted_remixed(TPE4)",
        DetailedDescription = "Interpreted, remixed, or otherwise modified by",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 43,
        TagName = "TPE4",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Partofaset(TPOS)",
        DetailedDescription = "Part of a set",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 44,
        TagName = "TPOS",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Producednotice(TPRO)",
        DetailedDescription = "Produced notice",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 45,
        TagName = "TPRO",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Publisher(TPUB)",
        DetailedDescription = "Publisher",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 46,
        TagName = "TPUB",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Tracknumber_Positioninset(TRCK)",
        DetailedDescription = "Track number/Position in set",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 47,
        TagName = "TRCK",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Recordingdates(TRDA)",
        DetailedDescription = "Recording dates (replaced by TDRC in v2.4)",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 48,
        TagName = "TRDA",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Internetradiostationname(TRSN)",
        DetailedDescription = "Internet radio station name",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 49,
        TagName = "TRSN",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Internetradiostationowner(TRSO)",
        DetailedDescription = "Internet radio station owner",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 50,
        TagName = "TRSO",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Size(TSIZ)",
        DetailedDescription = "Size (deprecated in v2.4)",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 51,
        TagName = "TSIZ",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Albumsortorder(TSOA)",
        DetailedDescription = "Album sort order",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 52,
        TagName = "TSOA",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Performersortorder(TSOP)",
        DetailedDescription = "Performer sort order",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 53,
        TagName = "TSOP",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Titlesortorder(TSOT)",
        DetailedDescription = "Title sort order",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 54,
        TagName = "TSOT",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "ISRC(TSRC)",
        DetailedDescription = "ISRC (international standard recording code)",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 55,
        TagName = "TSRC",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Software_HardEnc(TSSE)",
        DetailedDescription = "Software/Hardware and settings used for encoding",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 56,
        TagName = "TSSE",
        Valor = (object) null
      },
      new Mp3Field()
      {
        Active = true,
        Description = "Setsubtitle(TSST)",
        DetailedDescription = "Set subtitle",
        FrameTypeString = "TextFrame",
        IdV1_Compatible = false,
        Index = 57,
        TagName = "TSST",
        Valor = (object) null
      }
    };

    public static List<Mp3Field> GetSelectedMp3FieldsFromJSON()
    {
      List<Mp3Field> mp3FieldsFromJson = new List<Mp3Field>();
      if (!File.Exists(new DirectoryInfo(Environment.CurrentDirectory).FullName + "\\columnsConfig.json"))
        return MusicCsv.GetDefaultMp3Fields();
      foreach (Mp3Field mp3Field in Mp3FieldsHelper.GetMp3FieldsFromJSON((string) null))
      {
        if (Convert.ToBoolean(mp3Field.Active))
          mp3FieldsFromJson.Add(mp3Field);
      }
      return mp3FieldsFromJson;
    }
  }
}
