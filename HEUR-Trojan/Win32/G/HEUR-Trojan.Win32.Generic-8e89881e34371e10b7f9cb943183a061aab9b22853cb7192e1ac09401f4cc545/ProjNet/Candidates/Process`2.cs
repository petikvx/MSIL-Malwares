// Decompiled with JetBrains decompiler
// Type: ProjNet.Candidates.Process`2
// Assembly: IRefl, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A29A65F6-B7ED-422C-83D4-B9EFD61E5F13
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-8e89881e34371e10b7f9cb943183a061aab9b22853cb7192e1ac09401f4cc545.exe

using ProjNet.Structs;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;

namespace ProjNet.Candidates
{
  [DebuggerDisplay("\\{ author = {author}, book = {book} }", Type = "<Anonymous Type>")]
  [CompilerGenerated]
  internal sealed class Process<T, TT>
  {
    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
    private readonly T registry;
    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
    private readonly TT advisor;

    public T author
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => this.registry;
    }

    public TT book
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => this.advisor;
    }

    [DebuggerHidden]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public Process(T setup, TT result)
    {
      PageAdvisorStructBuilder.PrepareCreator();
      // ISSUE: explicit constructor call
      base.\u002Ector();
      // ISSUE: reference to a compiler-generated field
      this.registry = setup;
      // ISSUE: reference to a compiler-generated field
      this.advisor = result;
    }

    [DebuggerHidden]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public override bool Equals(object reference)
    {
      int num = 3;
      // ISSUE: variable of a compiler-generated type
      Process<T, TT> process;
      while (true)
      {
        switch (num)
        {
          case 0:
          case 3:
            process = reference as Process<T, TT>;
            num = 1;
            continue;
          case 1:
            if (this != process)
            {
              if (process == null)
                goto label_9;
              else
                goto case 2;
            }
            else
              goto label_10;
          case 2:
          case 4:
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            if (EqualityComparer<T>.Default.Equals(this.registry, process.registry))
            {
              num = 5;
              continue;
            }
            goto label_9;
          case 5:
            goto label_8;
          default:
            num = 4;
            continue;
        }
      }
label_8:
      // ISSUE: reference to a compiler-generated field
      // ISSUE: reference to a compiler-generated field
      return EqualityComparer<TT>.Default.Equals(this.advisor, process.advisor);
label_9:
      return false;
label_10:
      return true;
    }

    [DebuggerHidden]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public override int GetHashCode() => (-87315504 * -1521134295 + EqualityComparer<T>.Default.GetHashCode(this.registry)) * -1521134295 + EqualityComparer<TT>.Default.GetHashCode(this.advisor);

    [DebuggerHidden]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public override string ToString()
    {
      object[] objArray = new object[2];
      // ISSUE: reference to a compiler-generated field
      T registry = this.registry;
      ref T local1 = ref registry;
      objArray[0] = (object) ((object) local1 != null ? local1.ToString() : (string) null);
      // ISSUE: reference to a compiler-generated field
      TT advisor = this.advisor;
      ref TT local2 = ref advisor;
      objArray[1] = (object) ((object) local2 != null ? local2.ToString() : (string) null);
      return string.Format((IFormatProvider) null, "{{ author = {0}, book = {1} }}", objArray);
    }

    internal static bool PatchList() => true;

    internal static bool ConcatList() => false;
  }
}
