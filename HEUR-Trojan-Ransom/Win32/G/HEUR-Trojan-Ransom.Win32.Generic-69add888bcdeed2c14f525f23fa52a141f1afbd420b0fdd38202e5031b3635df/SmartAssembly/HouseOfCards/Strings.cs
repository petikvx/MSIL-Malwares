// Decompiled with JetBrains decompiler
// Type: SmartAssembly.HouseOfCards.Strings
// Assembly: LCDStudio, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: BEF96371-2C95-4469-8D1E-06EE21BF714F
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00027-msil\HEUR-Trojan-Ransom.Win32.Generic-69add888bcdeed2c14f525f23fa52a141f1afbd420b0fdd38202e5031b3635df.exe

using SmartAssembly.Delegates;
using System;
using System.Reflection;
using System.Reflection.Emit;
using System.Runtime.InteropServices;

namespace SmartAssembly.HouseOfCards
{
  [\u0003.\u0001]
  [\u0001.\u0001]
  public static class Strings
  {
    [\u0003.\u0001]
    [\u0001.\u0001]
    [\u0002.\u0001]
    public static unsafe void CreateGetStringDelegate([In] Type obj0)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(8);
      FieldInfo[] fields = obj0.GetFields(BindingFlags.Static | BindingFlags.NonPublic | BindingFlags.GetField);
      *(int*) voidPtr = 0;
      while (*(int*) voidPtr < fields.Length)
      {
        FieldInfo fieldInfo = fields[*(int*) voidPtr];
        try
        {
          if ((object) fieldInfo.FieldType == (object) typeof (GetString))
          {
            DynamicMethod dynamicMethod = new DynamicMethod(string.Empty, typeof (string), new Type[1]
            {
              typeof (int)
            }, obj0.Module, true);
            ILGenerator ilGenerator = dynamicMethod.GetILGenerator();
            ilGenerator.Emit(OpCodes.Ldarg_0);
            MethodInfo[] methods = typeof (SmartAssembly.StringsEncoding.Strings).GetMethods(BindingFlags.Static | BindingFlags.Public);
            *(int*) ((IntPtr) voidPtr + 4) = 0;
            while (true)
            {
              MethodInfo meth;
              if (*(int*) ((IntPtr) voidPtr + 4) < methods.Length)
                meth = methods[*(int*) ((IntPtr) voidPtr + 4)];
              else
                goto label_9;
label_5:
              if ((object) meth.ReturnType == (object) typeof (string))
              {
                ilGenerator.Emit(OpCodes.Ldc_I4, fieldInfo.MetadataToken & 16777215);
                ilGenerator.Emit(OpCodes.Sub);
                ilGenerator.Emit(OpCodes.Call, meth);
              }
              else
              {
                *(int*) ((IntPtr) voidPtr + 4) = *(int*) ((IntPtr) voidPtr + 4) + 1;
                continue;
              }
label_9:
              ilGenerator.Emit(OpCodes.Ret);
              if (false)
                goto label_5;
              else
                break;
            }
            fieldInfo.SetValue((object) null, (object) dynamicMethod.CreateDelegate(typeof (GetString)));
            break;
          }
          if (false)
            break;
        }
        catch
        {
        }
        *(int*) voidPtr = *(int*) voidPtr + 1;
      }
    }
  }
}
