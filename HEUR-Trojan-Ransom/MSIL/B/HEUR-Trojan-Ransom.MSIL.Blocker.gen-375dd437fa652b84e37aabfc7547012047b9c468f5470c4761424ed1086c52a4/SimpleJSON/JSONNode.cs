// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: StreamWriterBufferedDataLo, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 2A001E45-B149-45C2-9BBE-A5BA299DBD32
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-375dd437fa652b84e37aabfc7547012047b9c468f5470c4761424ed1086c52a4.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) null;
label_1:
        int num1 = 720983468;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 527057039)) % 3U)
          {
            case 1:
              num1 = (int) num2 * -789568823 ^ -594854593;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get => (JSONNode) null;
      set
      {
      }
    }

    public virtual string Value
    {
      get
      {
label_1:
        int num1 = 122990606;
        string str;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 504465379)) % 4U)
          {
            case 0:
              num1 = (int) num2 * -2105755036 ^ -1378244244;
              continue;
            case 1:
              str = "";
              num1 = (int) num2 * 1834493006 ^ -1279143367;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return str;
      }
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
label_1:
        int num1 = 229366061;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1283817964)) % 4U)
          {
            case 1:
              count = 0;
              num1 = (int) num2 * 365460806 ^ -1231266872;
              continue;
            case 2:
              num1 = (int) num2 * -502044457 ^ -678502106;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem) => this.Add("", aItem);

    public virtual JSONNode Remove(string aKey) => (JSONNode) null;

    public virtual JSONNode Remove(int aIndex)
    {
      JSONNode jsonNode = (JSONNode) null;
label_1:
      int num1 = -1190146762;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -977126700)) % 3U)
        {
          case 1:
            num1 = (int) num2 * -469206414 ^ 267102798;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = -291464591;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -651837964)) % 4U)
        {
          case 0:
            num1 = (int) num2 * 1811897931 ^ -583717610;
            continue;
          case 1:
            jsonNode = aNode;
            num1 = (int) num2 * -248774051 ^ -82455743;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONNode.\u003Cget_Childs\u003Ed__17 getChildsD17 = new JSONNode.\u003Cget_Childs\u003Ed__17(-2);
label_1:
        int num1 = -259770378;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1458264445)) % 4U)
          {
            case 1:
              getChildsD17.\u003C\u003E4__this = this;
              num1 = (int) num2 * -842106238 ^ -101023814;
              continue;
            case 2:
              goto label_1;
            case 3:
              childs = (IEnumerable<JSONNode>) getChildsD17;
              num1 = (int) num2 * 68919483 ^ 1544411858;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return childs;
      }
    }

    public IEnumerable<JSONNode> DeepChilds
    {
      get
      {
        bool deepChilds;
        try
        {
          int num1 = this.\u003C\u003E1__state;
label_1:
          int num2 = 739083029;
          IEnumerator<JSONNode> enumerator1;
          JSONNode C;
          IEnumerator<JSONNode> enumerator2;
          JSONNode D;
          while (true)
          {
            uint num3;
            switch ((num3 = (uint) (num2 ^ 1915070388)) % 30U)
            {
              case 0:
                this.\u003C\u003E1__state = -3;
                num2 = (int) num3 * 213114037 ^ -2045159656;
                continue;
              case 1:
                int num4 = num1 == 0 ? -2065983735 : (num4 = -1097571237);
                num2 = num4 ^ (int) num3 * 1810697444;
                continue;
              case 2:
                D = (JSONNode) null;
                num2 = (int) num3 * -775250097 ^ -1403968695;
                continue;
              case 3:
                C = enumerator1.Current;
                num2 = 1946612545;
                continue;
              case 4:
                goto label_30;
              case 5:
                this.\u003C\u003E2__current = D;
                this.\u003C\u003E1__state = 1;
                num2 = (int) num3 * 1908785565 ^ 447339243;
                continue;
              case 6:
                C = (JSONNode) null;
                num2 = (int) num3 * -1969165958 ^ -1381294122;
                continue;
              case 7:
                int num5;
                num2 = num5 = !JSONNode.\u003Cget_DeepChilds\u003Ed__19.\u202B‭‭‏⁫⁫⁬⁭​‮⁯‍‍‍⁫‬‌‫‌‪‏⁭⁯‬⁭‭‪‌⁫⁭‮‮‏‪⁬⁭‭‪⁮‫‮((IEnumerator) enumerator2) ? 183279048 : (num5 = 1850709354);
                continue;
              case 8:
                this.\u003C\u003Em__Finally2();
                enumerator2 = (IEnumerator<JSONNode>) null;
                num2 = (int) num3 * 1828272077 ^ 168603238;
                continue;
              case 9:
                num2 = (int) num3 * 1695699023 ^ -2092089810;
                continue;
              case 10:
                num2 = (int) num3 * 510736977 ^ 39172075;
                continue;
              case 11:
              case 29:
                this.\u003C\u003E1__state = -1;
                num2 = 563864531;
                continue;
              case 12:
                deepChilds = true;
                num2 = (int) num3 * -1033863751 ^ 1191852142;
                continue;
              case 13:
                this.\u003C\u003Em__Finally1();
                num2 = (int) num3 * 1688041562 ^ 1234155362;
                continue;
              case 14:
                goto label_1;
              case 15:
                int num6;
                num2 = num6 = num1 != 1 ? 1792287390 : (num6 = 2139982858);
                continue;
              case 16:
                D = enumerator2.Current;
                num2 = 23054063;
                continue;
              case 17:
                goto label_9;
              case 18:
                num2 = (int) num3 * -57337163 ^ -1535774736;
                continue;
              case 19:
                num2 = (int) num3 * 1793100580 ^ 1264504991;
                continue;
              case 20:
                num2 = (int) num3 * -837667431 ^ 2112869389;
                continue;
              case 22:
                int num7;
                num2 = num7 = JSONNode.\u003Cget_DeepChilds\u003Ed__19.\u202B‭‭‏⁫⁫⁬⁭​‮⁯‍‍‍⁫‬‌‫‌‪‏⁭⁯‬⁭‭‪‌⁫⁭‮‮‏‪⁬⁭‭‪⁮‫‮((IEnumerator) enumerator1) ? 1009276141 : (num7 = 1782257057);
                continue;
              case 23:
              case 24:
                this.\u003C\u003E1__state = -4;
                num2 = 1026252746;
                continue;
              case 25:
                num2 = (int) num3 * -1123641562 ^ -1317494202;
                continue;
              case 26:
                enumerator1 = (IEnumerator<JSONNode>) null;
                num2 = (int) num3 * -1755713031 ^ 487502297;
                continue;
              case 27:
                enumerator1 = this.Childs.GetEnumerator();
                num2 = (int) num3 * -2093592022 ^ 924609692;
                continue;
              case 28:
                enumerator2 = C.DeepChilds.GetEnumerator();
                this.\u003C\u003E1__state = -4;
                num2 = (int) num3 * 822649782 ^ -1315500612;
                continue;
              default:
                goto label_28;
            }
          }
label_9:
          deepChilds = false;
          goto label_30;
label_28:
          deepChilds = false;
        }
        __fault
        {
          this.System\u002EIDisposable\u002EDispose();
        }
label_30:
        return deepChilds;
      }
    }

    public override string ToString()
    {
      string str = nameof (JSONNode);
label_1:
      int num1 = -1475474914;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -927921240)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -1379750456 ^ 1870362256;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual string ToString(string aPrefix)
    {
label_1:
      int num1 = -17420746;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2049042181)) % 4U)
        {
          case 0:
            num1 = (int) num2 * 239448160 ^ -1384477532;
            continue;
          case 1:
            str = nameof (JSONNode);
            num1 = (int) num2 * 1012819461 ^ 646265098;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public virtual int AsInt
    {
      get
      {
label_1:
        int num1 = -1304663450;
        int asInt;
        int result;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1496948416)) % 8U)
          {
            case 1:
              num1 = (int) num2 * 2061546580 ^ 1505009684;
              continue;
            case 2:
              flag = int.TryParse(this.Value, out result);
              num1 = (int) num2 * -1717384755 ^ -1388447257;
              continue;
            case 3:
              asInt = 0;
              num1 = -468307776;
              continue;
            case 4:
              goto label_1;
            case 5:
              int num3 = flag ? -228468595 : (num3 = -1034291079);
              num1 = num3 ^ (int) num2 * -1390485694;
              continue;
            case 6:
              result = 0;
              num1 = (int) num2 * -636745132 ^ 422479674;
              continue;
            case 7:
              asInt = result;
              num1 = (int) num2 * 1510636074 ^ -492595097;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asInt;
      }
      set
      {
label_1:
        int num1 = -60784923;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -930236998)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -274826667 ^ 1944067913;
              continue;
            case 2:
              goto label_3;
            case 3:
              this.Value = value.ToString();
              num1 = (int) num2 * 2050213580 ^ 1582454299;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public virtual float AsFloat
    {
      get
      {
        float result = 0.0f;
        bool flag = float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u202E​‏‫‮⁫‏‪‪‮⁯‍⁯⁭‭⁭⁮​‍‪‎‎‮‏⁫​‫‌‮⁪‍⁮‌‏​​‫‬‎‪‮(), out result);
label_1:
        int num1 = 296140002;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1901733686)) % 7U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 1705080597 ^ 1598810227;
              continue;
            case 3:
              asFloat = 0.0f;
              num1 = 1397270914;
              continue;
            case 4:
              int num3 = flag ? 817260258 : (num3 = 2067376660);
              num1 = num3 ^ (int) num2 * 2036847838;
              continue;
            case 5:
              asFloat = result;
              num1 = (int) num2 * -1395150211 ^ -317365234;
              continue;
            case 6:
              num1 = (int) num2 * 843391019 ^ -950049541;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asFloat;
      }
      set
      {
label_1:
        int num1 = 1343369179;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1005261226)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Value = value.ToString();
              num1 = (int) num2 * -563303828 ^ 1124280544;
              continue;
            case 2:
              num1 = (int) num2 * -1821836939 ^ 464210631;
              continue;
            case 3:
              goto label_3;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public virtual double AsDouble
    {
      get
      {
label_1:
        int num1 = -1059455569;
        double result;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1558362896)) % 8U)
          {
            case 0:
              asDouble = result;
              num1 = (int) num2 * -1508421177 ^ -498953357;
              continue;
            case 1:
              asDouble = 0.0;
              num1 = -1718765612;
              continue;
            case 3:
              num1 = (int) num2 * -1577797668 ^ 1426241462;
              continue;
            case 4:
              num1 = (int) num2 * -1038915711 ^ -1469252090;
              continue;
            case 5:
              int num3 = double.TryParse(this.Value, out result) ? 633878174 : (num3 = 691031927);
              num1 = num3 ^ (int) num2 * -1361403258;
              continue;
            case 6:
              goto label_1;
            case 7:
              result = 0.0;
              num1 = (int) num2 * -1580700908 ^ 1058257985;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asDouble;
      }
      set => this.Value = value.ToString();
    }

    public virtual bool AsBool
    {
      get
      {
        bool result = false;
label_1:
        int num1 = 1668794756;
        bool asBool;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1953191204)) % 7U)
          {
            case 0:
              asBool = !JSONNode.\u206E⁭‍‭‪‏⁭⁪⁭⁯⁬‬⁭‭​‭⁯‍‫⁪⁯⁭⁭⁯‏⁪‮‫⁪‭‭⁯⁭⁮‪‌‍⁮‎⁫‮(this.Value);
              num1 = 944509713;
              continue;
            case 1:
              asBool = result;
              num1 = (int) num2 * -476167226 ^ 2063786933;
              continue;
            case 2:
              flag = bool.TryParse(this.Value, out result);
              num1 = (int) num2 * 1382006247 ^ 1420191356;
              continue;
            case 3:
              int num3 = flag ? -1893918396 : (num3 = -2107055540);
              num1 = num3 ^ (int) num2 * -2038899300;
              continue;
            case 5:
              num1 = (int) num2 * 23971923 ^ 1180085650;
              continue;
            case 6:
              goto label_1;
            default:
              goto label_8;
          }
        }
label_8:
        return asBool;
      }
      set => this.Value = value ? "true" : "false";
    }

    public virtual JSONArray AsArray
    {
      get
      {
        JSONArray asArray = this as JSONArray;
label_1:
        int num1 = 1611991467;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 872401511)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * 880717929 ^ -1807810464;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asArray;
      }
    }

    public virtual JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = -1545759846;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1617898390)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              asObject = this as JSONClass;
              num1 = (int) num2 * 896403361 ^ 1887319414;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s)
    {
label_1:
      int num1 = -252915160;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1714047159)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -1118275642 ^ 25834343;
            continue;
          case 1:
            jsonNode = (JSONNode) new JSONData(s);
            num1 = (int) num2 * -1526694372 ^ -76068891;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public static implicit operator string(JSONNode d)
    {
label_1:
      int num1 = 1950603095;
      string str1;
      while (true)
      {
        uint num2;
        string str2;
        switch ((num2 = (uint) (num1 ^ 733300561)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            if (d == (object) null)
            {
              str2 = (string) null;
              break;
            }
            num1 = (int) num2 * 401488430 ^ -1269195846;
            continue;
          case 2:
            str2 = d.Value;
            break;
          case 4:
            num1 = (int) num2 * 1385549769 ^ -584525466;
            continue;
          default:
            goto label_9;
        }
        str1 = str2;
        num1 = 912339214;
      }
label_9:
      return str1;
    }

    public static bool operator ==(JSONNode a, object b)
    {
      if (b != null)
        goto label_4;
label_1:
      int num1 = -119096408;
label_2:
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2120369678)) % 5U)
        {
          case 1:
            goto label_3;
          case 2:
            goto label_1;
          case 3:
            flag = true;
            num1 = (int) num2 * 307962571 ^ -141920933;
            continue;
          case 4:
            flag = (object) a == b;
            num1 = -1391385776;
            continue;
          default:
            goto label_8;
        }
      }
label_3:
      int num3 = a is JSONLazyCreator ? 1 : 0;
      goto label_5;
label_8:
      return flag;
label_4:
      num3 = 0;
label_5:
      num1 = num3 != 0 ? -2091759565 : (num1 = -1016435191);
      goto label_2;
    }

    public static bool operator !=(JSONNode a, object b)
    {
label_1:
      int num1 = -912001552;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1526035816)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            flag = !(a == b);
            num1 = (int) num2 * -793894087 ^ -126320149;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override bool Equals(object obj) => (object) this == obj;

    public override int GetHashCode() => this.\u200B‏‎‬‭‌‌‌⁭⁯⁭‪‮⁬⁬‏‬‏⁭⁬‫⁯‬‫‌​‪‪⁫⁭‍‍⁮‫⁫⁬⁮⁯⁮⁪‮();

    internal static string Escape(string aText)
    {
      string str1 = "";
label_1:
      int num1 = 686147149;
      char ch1;
      char ch2;
      int num2;
      char ch3;
      string str2;
      string str3;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 1393824282)) % 33U)
        {
          case 1:
            num1 = (int) num3 * 1954704465 ^ -1317096905;
            continue;
          case 2:
            str3 = str1;
            num1 = (int) num3 * -1781884930 ^ 196700196;
            continue;
          case 3:
            str1 = JSONNode.\u200D⁮‬⁮⁪‫⁭‫‭‌‭⁮‌‫⁮⁮⁪‬‍⁬‫⁯‎‫‏‭⁫‫‎‪‬⁪​⁯‭⁮⁪⁪‌‮(str1, "\\\\");
            num1 = 1965107877;
            continue;
          case 4:
            num2 = 0;
            num1 = (int) num3 * 471572099 ^ 320062616;
            continue;
          case 5:
            switch (ch3)
            {
              case '\b':
                goto label_12;
              case '\t':
                goto label_5;
              case '\n':
                goto label_11;
              case '\v':
                goto label_13;
              case '\f':
                goto label_29;
              case '\r':
                goto label_32;
              default:
                num1 = (int) num3 * 324305644 ^ -1538927397;
                continue;
            }
          case 6:
            num1 = (int) num3 * 871635516 ^ 1804302337;
            continue;
          case 7:
            num1 = (int) num3 * -1571470060 ^ 1428905389;
            continue;
          case 8:
            num1 = (int) num3 * 2018204920 ^ -582285595;
            continue;
          case 9:
            str2 = aText;
            num1 = (int) num3 * 2002643477 ^ -751455370;
            continue;
          case 10:
            int num4;
            num1 = num4 = ch3 == '"' ? 1834113565 : (num4 = 1415093775);
            continue;
          case 11:
            num1 = (int) num3 * -184542540 ^ -1981136470;
            continue;
          case 12:
label_13:
            str1 = JSONNode.\u200D⁮‬⁮⁪‫⁭‫‭‌‭⁮‌‫⁮⁮⁪‬‍⁬‫⁯‎‫‏‭⁫‫‎‪‬⁪​⁯‭⁮⁪⁪‌‮(str1, ch1.ToString());
            num1 = 1965107877;
            continue;
          case 13:
label_5:
            str1 = JSONNode.\u200D⁮‬⁮⁪‫⁭‫‭‌‭⁮‌‫⁮⁮⁪‬‍⁬‫⁯‎‫‏‭⁫‫‎‪‬⁪​⁯‭⁮⁪⁪‌‮(str1, "\\t");
            num1 = 831375296;
            continue;
          case 14:
            num1 = 2091297956;
            continue;
          case 15:
label_11:
            str1 = JSONNode.\u200D⁮‬⁮⁪‫⁭‫‭‌‭⁮‌‫⁮⁮⁪‬‍⁬‫⁯‎‫‏‭⁫‫‎‪‬⁪​⁯‭⁮⁪⁪‌‮(str1, "\\n");
            num1 = 694185886;
            continue;
          case 16:
            num1 = (int) num3 * 39728430 ^ -2031472979;
            continue;
          case 17:
            num1 = (int) num3 * -1622708778 ^ 265285519;
            continue;
          case 18:
            num1 = (int) num3 * 2089112369 ^ -744275258;
            continue;
          case 19:
            str1 = JSONNode.\u200D⁮‬⁮⁪‫⁭‫‭‌‭⁮‌‫⁮⁮⁪‬‍⁬‫⁯‎‫‏‭⁫‫‎‪‬⁪​⁯‭⁮⁪⁪‌‮(str1, "\\\"");
            num1 = 1699538664;
            continue;
          case 20:
            ch1 = JSONNode.\u206F‭‫‌⁫‫‏‍⁯‮‮‌‮⁫‬⁭‏⁪‫⁫‎⁭⁬⁯⁯‏‪‌‮⁮⁫⁪⁫⁭‎‫‏⁮‏‬‮(str2, num2);
            num1 = 696734771;
            continue;
          case 21:
label_29:
            str1 = JSONNode.\u200D⁮‬⁮⁪‫⁭‫‭‌‭⁮‌‫⁮⁮⁪‬‍⁬‫⁯‎‫‏‭⁫‫‎‪‬⁪​⁯‭⁮⁪⁪‌‮(str1, "\\f");
            num1 = 1428709218;
            continue;
          case 22:
            int num5;
            num1 = num5 = ch3 == '\\' ? 1246690429 : (num5 = 1005786891);
            continue;
          case 23:
            ++num2;
            num1 = (int) num3 * 2139597126 ^ -400407254;
            continue;
          case 24:
            num1 = (int) num3 * 1927466975 ^ 79965727;
            continue;
          case 25:
            int num6;
            num1 = num6 = num2 < JSONNode.\u200F‮‏⁬⁫⁬‭​‬‌⁭⁫‪​‌‎‭‏⁬‫‪⁮⁯‍‬‎‍‭‎⁮‏‫⁭‎‭‮‍‫⁬⁫‮(str2) ? 2116063555 : (num6 = 2101991810);
            continue;
          case 26:
            ch3 = ch2;
            num1 = (int) num3 * -1324940647 ^ -1251506539;
            continue;
          case 27:
            num1 = (int) num3 * -175191293 ^ -1220800983;
            continue;
          case 28:
            ch2 = ch1;
            num1 = (int) num3 * -829054844 ^ 1655239671;
            continue;
          case 29:
            goto label_1;
          case 30:
label_12:
            str1 = JSONNode.\u200D⁮‬⁮⁪‫⁭‫‭‌‭⁮‌‫⁮⁮⁪‬‍⁬‫⁯‎‫‏‭⁫‫‎‪‬⁪​⁯‭⁮⁪⁪‌‮(str1, "\\b");
            num1 = 1965107877;
            continue;
          case 31:
            num1 = (int) num3 * -1093728422 ^ -1823226408;
            continue;
          case 32:
label_32:
            str1 = JSONNode.\u200D⁮‬⁮⁪‫⁭‫‭‌‭⁮‌‫⁮⁮⁪‬‍⁬‫⁯‎‫‏‭⁫‫‎‪‬⁪​⁯‭⁮⁪⁪‌‮(str1, "\\r");
            num1 = 2057019229;
            continue;
          default:
            goto label_35;
        }
      }
label_35:
      return str3;
    }

    public static JSONNode Parse(string aJSON)
    {
label_1:
      int num1 = -1512673973;
      bool flag1;
      bool flag2;
      string aKey;
      string aItem;
      string s;
      int num2;
      JSONNode jsonNode1;
      bool flag3;
      bool flag4;
      JSONNode jsonNode2;
      char ch1;
      bool flag5;
      bool flag6;
      char ch2;
      Stack<JSONNode> jsonNodeStack;
      char ch3;
      bool flag7;
      bool flag8;
      bool flag9;
      bool flag10;
      char ch4;
      bool flag11;
      bool flag12;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -82949060)) % 153U)
        {
          case 0:
            flag1 = !flag1;
            num1 = -765840537;
            continue;
          case 1:
            num1 = (int) num3 * -1066814133 ^ 1285535301;
            continue;
          case 2:
            switch (ch1)
            {
              case '\t':
                goto label_46;
              case '\n':
              case '\r':
                goto label_73;
              case '\v':
              case '\f':
                goto label_74;
              default:
                num1 = (int) num3 * 1762469401 ^ 309617630;
                continue;
            }
          case 3:
            jsonNodeStack = new Stack<JSONNode>();
            jsonNode1 = (JSONNode) null;
            num1 = (int) num3 * 576974355 ^ 14616092;
            continue;
          case 4:
          case 25:
          case 77:
          case 78:
          case 113:
label_73:
            ++num2;
            num1 = -901394569;
            continue;
          case 5:
            int num4;
            num1 = num4 = ch1 == ',' ? -1454269837 : (num4 = -236238228);
            continue;
          case 6:
            num1 = (int) num3 * -1060706471 ^ -163346302;
            continue;
          case 7:
            num1 = (int) num3 * -1260714994 ^ 951585128;
            continue;
          case 8:
            num1 = (int) num3 * -2032946141 ^ 804738159;
            continue;
          case 9:
            int num5;
            num1 = num5 = ch1 == '"' ? -420813359 : (num5 = -2050178556);
            continue;
          case 10:
            int num6 = !flag2 ? 1145280074 : (num6 = 1872483740);
            num1 = num6 ^ (int) num3 * 24431309;
            continue;
          case 11:
            aItem = JSONNode.\u200D⁮‬⁮⁪‫⁭‫‭‌‭⁮‌‫⁮⁮⁪‬‍⁬‫⁯‎‫‏‭⁫‫‎‪‬⁪​⁯‭⁮⁪⁪‌‮(aItem, JSONNode.\u206F‭‫‌⁫‫‏‍⁯‮‮‌‮⁫‬⁭‏⁪‫⁫‎⁭⁬⁯⁯‏‪‌‮⁮⁫⁪⁫⁭‎‫‏⁮‏‬‮(aJSON, num2).ToString());
            num1 = (int) num3 * -1257645960 ^ -1457595121;
            continue;
          case 12:
            num1 = (int) num3 * -4585255 ^ 1132301591;
            continue;
          case 13:
            ch3 = JSONNode.\u206F‭‫‌⁫‫‏‍⁯‮‮‌‮⁫‬⁭‏⁪‫⁫‎⁭⁬⁯⁯‏‪‌‮⁮⁫⁪⁫⁭‎‫‏⁮‏‬‮(aJSON, num2);
            ch4 = ch3;
            num1 = (int) num3 * 1270996680 ^ -1368997403;
            continue;
          case 14:
            num1 = (int) num3 * 1540409308 ^ 318169933;
            continue;
          case 15:
            aItem = "";
            flag12 = jsonNodeStack.Count > 0;
            num1 = (int) num3 * -652623425 ^ 1180430113;
            continue;
          case 16:
            num1 = (int) num3 * 1215534259 ^ -1796671829;
            continue;
          case 17:
            int num7;
            num1 = num7 = ch2 != 'n' ? -1579280506 : (num7 = -1742319088);
            continue;
          case 18:
            flag10 = jsonNodeStack.Count == 0;
            num1 = -100210900;
            continue;
          case 19:
label_124:
            flag11 = flag1;
            num1 = -1298094219;
            continue;
          case 20:
            int num8 = !(jsonNode1 != (object) null) ? -575279889 : (num8 = -793793728);
            num1 = num8 ^ (int) num3 * -815764363;
            continue;
          case 21:
            int num9 = JSONNode.\u206F‏⁬‮‌⁬‍⁬⁪‭‎‪‏‭‍‏‫‏‍‏⁬‮‭‬⁬‏‮⁭‮‫⁪⁬‍‍⁮‎‭⁫‭‫‮(aItem, "") ? 1230909960 : (num9 = 1381985038);
            num1 = num9 ^ (int) num3 * 1350141859;
            continue;
          case 22:
            jsonNode2 = jsonNode1;
            num1 = -1794756704;
            continue;
          case 23:
            int num10 = flag4 ? -44125143 : (num10 = -192300080);
            num1 = num10 ^ (int) num3 * -840969237;
            continue;
          case 24:
            int num11;
            num1 = num11 = ch1 > ']' ? -283672929 : (num11 = -982101646);
            continue;
          case 26:
            int num12 = flag3 ? 973982997 : (num12 = 494194114);
            num1 = num12 ^ (int) num3 * -486255388;
            continue;
          case 27:
            num1 = -389189459;
            continue;
          case 28:
            aItem = JSONNode.\u200D⁮‬⁮⁪‫⁭‫‭‌‭⁮‌‫⁮⁮⁪‬‍⁬‫⁯‎‫‏‭⁫‫‎‪‬⁪​⁯‭⁮⁪⁪‌‮(aItem, JSONNode.\u206F‭‫‌⁫‫‏‍⁯‮‮‌‮⁫‬⁭‏⁪‫⁫‎⁭⁬⁯⁯‏‪‌‮⁮⁫⁪⁫⁭‎‫‏⁮‏‬‮(aJSON, num2).ToString());
            num1 = (int) num3 * 78956909 ^ -708162691;
            continue;
          case 29:
label_21:
            aItem = JSONNode.\u200D⁮‬⁮⁪‫⁭‫‭‌‭⁮‌‫⁮⁮⁪‬‍⁬‫⁯‎‫‏‭⁫‫‎‪‬⁪​⁯‭⁮⁪⁪‌‮(aItem, "\t");
            num1 = -1483935347;
            continue;
          case 30:
            num1 = -1363876365;
            continue;
          case 31:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -1209582969 ^ 477733599;
            continue;
          case 32:
            jsonNodeStack.Pop();
            num1 = -151549295;
            continue;
          case 33:
            int num13;
            num1 = num13 = JSONNode.\u206F‏⁬‮‌⁬‍⁬⁪‭‎‪‏‭‍‏‫‏‍‏⁬‮‭‬⁬‏‮⁭‮‫⁪⁬‍‍⁮‎‭⁫‭‫‮(aKey, "") ? -822808797 : (num13 = -1573038137);
            continue;
          case 34:
            int num14 = ch1 != ':' ? -181624049 : (num14 = -755486953);
            num1 = num14 ^ (int) num3 * -1498046247;
            continue;
          case 35:
            num1 = (int) num3 * -1341513304 ^ -1069277142;
            continue;
          case 36:
            flag2 = flag1;
            num1 = (int) num3 * 813404471 ^ -1189353476;
            continue;
          case 37:
            aItem = JSONNode.\u200D⁮‬⁮⁪‫⁭‫‭‌‭⁮‌‫⁮⁮⁪‬‍⁬‫⁯‎‫‏‭⁫‫‎‪‬⁪​⁯‭⁮⁪⁪‌‮(aItem, ((char) int.Parse(s, NumberStyles.AllowHexSpecifier)).ToString());
            num2 += 4;
            num1 = (int) num3 * 333370123 ^ 555857909;
            continue;
          case 38:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -1968575313 ^ -133152266;
            continue;
          case 39:
            num1 = (int) num3 * -1955546241 ^ 70372614;
            continue;
          case 40:
            goto label_40;
          case 41:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -897900040 ^ -1231586899;
            continue;
          case 42:
            num1 = (int) num3 * -59708868 ^ -1993553396;
            continue;
          case 43:
            num1 = -447752022;
            continue;
          case 44:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -610088159 ^ 778830403;
            continue;
          case 45:
            int num15 = !flag11 ? 1584947011 : (num15 = 1987116242);
            num1 = num15 ^ (int) num3 * 1599185038;
            continue;
          case 46:
            num1 = (int) num3 * -311415982 ^ -519569609;
            continue;
          case 47:
            int num16;
            num1 = num16 = ch2 == 'f' ? -534200184 : (num16 = -2058482057);
            continue;
          case 48:
            num1 = (int) num3 * 2015493662 ^ -1567559661;
            continue;
          case 49:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 1647174342 ^ 305021334;
            continue;
          case 50:
            ch2 = ch4;
            num1 = (int) num3 * 562244978 ^ -2120151792;
            continue;
          case 51:
label_32:
            s = JSONNode.\u200E‭‭‪‌⁫‎‮⁮‬‮⁪⁫⁪⁮⁪⁬‎⁮‮⁮‎⁫‫⁮⁫‍⁬‭⁮‏‎‍⁪‪‎‪‭⁬⁬‮(aJSON, num2 + 1, 4);
            num1 = -1093833124;
            continue;
          case 52:
            int num17;
            num1 = num17 = JSONNode.\u206F‏⁬‮‌⁬‍⁬⁪‭‎‪‏‭‍‏‫‏‍‏⁬‮‭‬⁬‏‮⁭‮‫⁪⁬‍‍⁮‎‭⁫‭‫‮(aKey, "") ? -251855572 : (num17 = -1025572434);
            continue;
          case 53:
            int num18 = !flag1 ? -652904015 : (num18 = -353235312);
            num1 = num18 ^ (int) num3 * 1191142558;
            continue;
          case 54:
            int num19;
            num1 = num19 = ch1 != '{' ? -1487611081 : (num19 = -1018849043);
            continue;
          case 55:
            num1 = (int) num3 * 1829455861 ^ 2004862855;
            continue;
          case 56:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -465862391 ^ 576817703;
            continue;
          case 57:
            int num20 = flag6 ? -802328697 : (num20 = -1418942651);
            num1 = num20 ^ (int) num3 * 280840265;
            continue;
          case 58:
            num1 = (int) num3 * -607588534 ^ -2015174594;
            continue;
          case 59:
            num1 = (int) num3 * -1244939038 ^ 1685523729;
            continue;
          case 60:
            num1 = (int) num3 * 102629790 ^ 509560479;
            continue;
          case 61:
            num1 = (int) num3 * -1516433986 ^ -1006989725;
            continue;
          case 62:
            flag8 = flag1;
            num1 = -774364602;
            continue;
          case 63:
            flag1 = false;
            num1 = (int) num3 * 1811518981 ^ -1286148858;
            continue;
          case 64:
            int num21 = jsonNode1 is JSONArray ? -799148123 : (num21 = -372337066);
            num1 = num21 ^ (int) num3 * 362737228;
            continue;
          case 65:
            num1 = (int) num3 * 38568552 ^ 143273249;
            continue;
          case 66:
            num1 = (int) num3 * 515556938 ^ -1648632296;
            continue;
          case 67:
            int num22 = ch1 > ',' ? 1721837423 : (num22 = 2077222615);
            num1 = num22 ^ (int) num3 * -70849372;
            continue;
          case 68:
label_140:
            aItem = JSONNode.\u200D⁮‬⁮⁪‫⁭‫‭‌‭⁮‌‫⁮⁮⁪‬‍⁬‫⁯‎‫‏‭⁫‫‎‪‬⁪​⁯‭⁮⁪⁪‌‮(aItem, "\r");
            num1 = -600672055;
            continue;
          case 69:
            flag3 = jsonNode1 != (object) null;
            num1 = (int) num3 * -535575250 ^ 863503472;
            continue;
          case 70:
            num1 = (int) num3 * 1978836415 ^ -1636143809;
            continue;
          case 71:
            num1 = (int) num3 * -1042342591 ^ 620185924;
            continue;
          case 72:
            num1 = (int) num3 * 1655071955 ^ 241871847;
            continue;
          case 73:
label_104:
            ++num2;
            num1 = -2142152402;
            continue;
          case 74:
            aKey = "";
            num1 = -1585826565;
            continue;
          case 75:
            num1 = (int) num3 * -1391160677 ^ 1646385930;
            continue;
          case 76:
            num1 = (int) num3 * 933820480 ^ -756996375;
            continue;
          case 79:
            aItem = JSONNode.\u200D⁮‬⁮⁪‫⁭‫‭‌‭⁮‌‫⁮⁮⁪‬‍⁬‫⁯‎‫‏‭⁫‫‎‪‬⁪​⁯‭⁮⁪⁪‌‮(aItem, "\f");
            num1 = -1483935347;
            continue;
          case 80:
            num1 = (int) num3 * -821038139 ^ 800360759;
            continue;
          case 81:
label_74:
            aItem = JSONNode.\u200D⁮‬⁮⁪‫⁭‫‭‌‭⁮‌‫⁮⁮⁪‬‍⁬‫⁯‎‫‏‭⁫‫‎‪‬⁪​⁯‭⁮⁪⁪‌‮(aItem, JSONNode.\u206F‭‫‌⁫‫‏‍⁯‮‮‌‮⁫‬⁭‏⁪‫⁫‎⁭⁬⁯⁯‏‪‌‮⁮⁫⁪⁫⁭‎‫‏⁮‏‬‮(aJSON, num2).ToString());
            num1 = -24617127;
            continue;
          case 82:
            int num23 = !(jsonNode1 is JSONArray) ? 582948955 : (num23 = 366510020);
            num1 = num23 ^ (int) num3 * -1437501080;
            continue;
          case 83:
            int num24;
            num1 = num24 = !JSONNode.\u206F‏⁬‮‌⁬‍⁬⁪‭‎‪‏‭‍‏‫‏‍‏⁬‮‭‬⁬‏‮⁭‮‫⁪⁬‍‍⁮‎‭⁫‭‫‮(aKey, "") ? -975986693 : (num24 = -656830634);
            continue;
          case 84:
            num1 = -942878679;
            continue;
          case 85:
            num1 = (int) num3 * 1643901342 ^ 815167641;
            continue;
          case 86:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num1 = -1770881776;
            continue;
          case 87:
            int num25;
            num1 = num25 = flag1 ? -1589190107 : (num25 = -211753842);
            continue;
          case 89:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -790539960 ^ 126410030;
            continue;
          case 90:
            int num26;
            num1 = num26 = ch1 == '}' ? -1197748860 : (num26 = -1962198983);
            continue;
          case 91:
            num2 = 0;
            num1 = (int) num3 * -1859374460 ^ -1831695679;
            continue;
          case 92:
            aItem = "";
            num1 = (int) num3 * 718722112 ^ -1349237518;
            continue;
          case 93:
            num1 = (int) num3 * -1366284271 ^ 25508228;
            continue;
          case 94:
            num1 = (int) num3 * -551999738 ^ 894344984;
            continue;
          case 95:
            flag7 = JSONNode.\u206F‏⁬‮‌⁬‍⁬⁪‭‎‪‏‭‍‏‫‏‍‏⁬‮‭‬⁬‏‮⁭‮‫⁪⁬‍‍⁮‎‭⁫‭‫‮(aItem, "");
            num1 = -1410135406;
            continue;
          case 96:
            aItem = JSONNode.\u200D⁮‬⁮⁪‫⁭‫‭‌‭⁮‌‫⁮⁮⁪‬‍⁬‫⁯‎‫‏‭⁫‫‎‪‬⁪​⁯‭⁮⁪⁪‌‮(aItem, "\b");
            num1 = -2088919627;
            continue;
          case 97:
            aKey = "";
            num1 = -1045449421;
            continue;
          case 98:
            int num27 = !flag5 ? 637987186 : (num27 = 34705002);
            num1 = num27 ^ (int) num3 * -740912016;
            continue;
          case 99:
            aKey = JSONNode.\u206C⁯‎‌⁫‌‬‪⁪‫⁫⁪‫⁮⁪⁪⁭⁮⁪⁯⁭‫⁫‪⁫‏⁫‍⁯‭‌‏⁯⁭⁫⁫‬⁭⁯‬‮(aKey);
            num1 = (int) num3 * -363948280 ^ 2022948888;
            continue;
          case 100:
            goto label_53;
          case 101:
            goto label_1;
          case 102:
            int num28 = !flag9 ? -394035824 : (num28 = -640025688);
            num1 = num28 ^ (int) num3 * -205028386;
            continue;
          case 103:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 638314467 ^ 384946625;
            continue;
          case 104:
            aItem = JSONNode.\u200D⁮‬⁮⁪‫⁭‫‭‌‭⁮‌‫⁮⁮⁪‬‍⁬‫⁯‎‫‏‭⁫‫‎‪‬⁪​⁯‭⁮⁪⁪‌‮(aItem, JSONNode.\u206F‭‫‌⁫‫‏‍⁯‮‮‌‮⁫‬⁭‏⁪‫⁫‎⁭⁬⁯⁯‏‪‌‮⁮⁫⁪⁫⁭‎‫‏⁮‏‬‮(aJSON, num2).ToString());
            num1 = (int) num3 * 628813761 ^ -2062414411;
            continue;
          case 105:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 642554560 ^ 664742561;
            continue;
          case 106:
            flag9 = num2 < JSONNode.\u200F‮‏⁬⁫⁬‭​‬‌⁭⁫‪​‌‎‭‏⁬‫‪⁮⁯‍‬‎‍‭‎⁮‏‫⁭‎‭‮‍‫⁬⁫‮(aJSON);
            num1 = -1117142536;
            continue;
          case 107:
            aKey = aItem;
            aItem = "";
            num1 = -24617127;
            continue;
          case 108:
            aKey = JSONNode.\u206C⁯‎‌⁫‌‬‪⁪‫⁫⁪‫⁮⁪⁪⁭⁮⁪⁯⁭‫⁫‪⁫‏⁫‍⁯‭‌‏⁯⁭⁫⁫‬⁭⁯‬‮(aKey);
            flag5 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -1302511860 ^ 661461064;
            continue;
          case 109:
            num1 = (int) num3 * -1455605751 ^ 1160734233;
            continue;
          case 110:
            num1 = (int) num3 * -902265394 ^ -1314299942;
            continue;
          case 111:
            aItem = JSONNode.\u200D⁮‬⁮⁪‫⁭‫‭‌‭⁮‌‫⁮⁮⁪‬‍⁬‫⁯‎‫‏‭⁫‫‎‪‬⁪​⁯‭⁮⁪⁪‌‮(aItem, "\n");
            num1 = -890176234;
            continue;
          case 112:
            num1 = -2019702766;
            continue;
          case 114:
            aItem = "";
            num1 = (int) num3 * 1077553589 ^ 1252666875;
            continue;
          case 115:
label_10:
            flag4 = flag1;
            num1 = -963843519;
            continue;
          case 116:
            num1 = (int) num3 * -2029539148 ^ 155585589;
            continue;
          case 117:
            num1 = (int) num3 * -1172804720 ^ 1761411820;
            continue;
          case 118:
            int num29 = flag7 ? 156887337 : (num29 = 551161765);
            num1 = num29 ^ (int) num3 * 1990326122;
            continue;
          case 119:
            switch (ch1)
            {
              case '[':
                goto label_10;
              case '\\':
                goto label_104;
              case ']':
                goto label_124;
              default:
                num1 = -29892982;
                continue;
            }
          case 120:
            switch (ch2)
            {
              case 'r':
                goto label_140;
              case 's':
                goto label_52;
              case 't':
                goto label_21;
              case 'u':
                goto label_32;
              default:
                num1 = -1599596404;
                continue;
            }
          case 121:
            num1 = (int) num3 * -1277349430 ^ -212001649;
            continue;
          case 122:
            aKey = "";
            num1 = (int) num3 * -575873725 ^ 1346407540;
            continue;
          case 123:
            num1 = (int) num3 * 217124467 ^ 1457175876;
            continue;
          case 124:
            aItem = JSONNode.\u200D⁮‬⁮⁪‫⁭‫‭‌‭⁮‌‫⁮⁮⁪‬‍⁬‫⁯‎‫‏‭⁫‫‎‪‬⁪​⁯‭⁮⁪⁪‌‮(aItem, JSONNode.\u206F‭‫‌⁫‫‏‍⁯‮‮‌‮⁫‬⁭‏⁪‫⁫‎⁭⁬⁯⁯‏‪‌‮⁮⁫⁪⁫⁭‎‫‏⁮‏‬‮(aJSON, num2).ToString());
            num1 = (int) num3 * 731909531 ^ -1491729826;
            continue;
          case 125:
            num1 = (int) num3 * -1770304108 ^ 1381964389;
            continue;
          case 126:
            aItem = "";
            num1 = (int) num3 * -1450766435 ^ 106251883;
            continue;
          case (uint) sbyte.MaxValue:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -411934462 ^ 1179712190;
            continue;
          case 128:
            aItem = JSONNode.\u200D⁮‬⁮⁪‫⁭‫‭‌‭⁮‌‫⁮⁮⁪‬‍⁬‫⁯‎‫‏‭⁫‫‎‪‬⁪​⁯‭⁮⁪⁪‌‮(aItem, JSONNode.\u206F‭‫‌⁫‫‏‍⁯‮‮‌‮⁫‬⁭‏⁪‫⁫‎⁭⁬⁯⁯‏‪‌‮⁮⁫⁪⁫⁭‎‫‏⁮‏‬‮(aJSON, num2).ToString());
            num1 = (int) num3 * -169407966 ^ 1284008191;
            continue;
          case 129:
label_52:
            aItem = JSONNode.\u200D⁮‬⁮⁪‫⁭‫‭‌‭⁮‌‫⁮⁮⁪‬‍⁬‫⁯‎‫‏‭⁫‫‎‪‬⁪​⁯‭⁮⁪⁪‌‮(aItem, ch3.ToString());
            num1 = -1483935347;
            continue;
          case 130:
            int num30 = ch2 > 'f' ? 1526214425 : (num30 = 68755580);
            num1 = num30 ^ (int) num3 * -1598658436;
            continue;
          case 131:
            int num31 = flag8 ? 2054200151 : (num31 = 1995466349);
            num1 = num31 ^ (int) num3 * 149060670;
            continue;
          case 132:
            num1 = -1348130391;
            continue;
          case 133:
            aKey = JSONNode.\u206C⁯‎‌⁫‌‬‪⁪‫⁫⁪‫⁮⁪⁪⁭⁮⁪⁯⁭‫⁫‪⁫‏⁫‍⁯‭‌‏⁯⁭⁫⁫‬⁭⁯‬‮(aKey);
            int num32 = !(jsonNode1 is JSONArray) ? -1056096895 : (num32 = -1983226796);
            num1 = num32 ^ (int) num3 * -1149584588;
            continue;
          case 134:
            int num33 = ch1 <= ' ' ? 1953068345 : (num33 = 913704597);
            num1 = num33 ^ (int) num3 * -44420231;
            continue;
          case 135:
            num1 = (int) num3 * 1912359794 ^ 690851715;
            continue;
          case 136:
            int num34;
            num1 = num34 = !JSONNode.\u206F‏⁬‮‌⁬‍⁬⁪‭‎‪‏‭‍‏‫‏‍‏⁬‮‭‬⁬‏‮⁭‮‫⁪⁬‍‍⁮‎‭⁫‭‫‮(aKey, "") ? -324071016 : (num34 = -193729863);
            continue;
          case 137:
            aKey = "";
            aItem = "";
            num1 = -1789417150;
            continue;
          case 138:
            ch1 = JSONNode.\u206F‭‫‌⁫‫‏‍⁯‮‮‌‮⁫‬⁭‏⁪‫⁫‎⁭⁬⁯⁯‏‪‌‮⁮⁫⁪⁫⁭‎‫‏⁮‏‬‮(aJSON, num2);
            num1 = (int) num3 * 2042005225 ^ -991297692;
            continue;
          case 139:
            num1 = (int) num3 * 777823366 ^ 470592251;
            continue;
          case 140:
            num1 = (int) num3 * -1448256347 ^ -1480030498;
            continue;
          case 141:
            num1 = (int) num3 * 1508288012 ^ -962707901;
            continue;
          case 142:
            int num35 = ch2 != 'b' ? -1579995126 : (num35 = -1753743937);
            num1 = num35 ^ (int) num3 * -1850378790;
            continue;
          case 143:
            aKey = "";
            num1 = -96132781;
            continue;
          case 144:
            flag6 = flag1;
            num1 = -586072177;
            continue;
          case 145:
            int num36 = !flag10 ? 821646486 : (num36 = 102314406);
            num1 = num36 ^ (int) num3 * 1096210408;
            continue;
          case 146:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 246624631 ^ 1960880131;
            continue;
          case 147:
label_46:
            int num37;
            num1 = num37 = flag1 ? -2003184416 : (num37 = -1944678969);
            continue;
          case 148:
            int num38;
            num1 = num38 = ch1 != ' ' ? -1965547068 : (num38 = -922164007);
            continue;
          case 149:
            aItem = JSONNode.\u200D⁮‬⁮⁪‫⁭‫‭‌‭⁮‌‫⁮⁮⁪‬‍⁬‫⁯‎‫‏‭⁫‫‎‪‬⁪​⁯‭⁮⁪⁪‌‮(aItem, JSONNode.\u206F‭‫‌⁫‫‏‍⁯‮‮‌‮⁫‬⁭‏⁪‫⁫‎⁭⁬⁯⁯‏‪‌‮⁮⁫⁪⁫⁭‎‫‏⁮‏‬‮(aJSON, num2).ToString());
            num1 = (int) num3 * 440263770 ^ -2030797943;
            continue;
          case 150:
            int num39 = !flag12 ? 1077221014 : (num39 = 1399985417);
            num1 = num39 ^ (int) num3 * -425738163;
            continue;
          case 151:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            num1 = -1901957624;
            continue;
          case 152:
            num1 = (int) num3 * 629464191 ^ -1538504596;
            continue;
          default:
            goto label_153;
        }
      }
label_40:
      throw JSONNode.\u200E‬‍‪​‏‬‍⁬⁯‫‭‭⁯⁪‎‏‏‫‌‍‎‪‏‍⁯‮‌⁯⁯⁮‍⁬​‬⁯​⁮‮‮‮("JSON Parse: Too many closing brackets");
label_53:
      throw JSONNode.\u200E‬‍‪​‏‬‍⁬⁯‫‭‭⁯⁪‎‏‏‫‌‍‎‪‏‍⁯‮‌⁯⁯⁮‍⁬​‬⁯​⁮‮‮‮("JSON Parse: Quotation marks seems to be messed up.");
label_153:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData) => this.Serialize(JSONNode.\u200B‭‍‎‪⁪‭⁫⁪​‭‮‫‭‍⁭⁮‍⁮‍⁬⁫⁯⁬⁯‎⁯⁪‍‎⁯‎‭⁪​‬⁯‬​‭‮(aData));

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u200E‬‍‪​‏‬‍⁬⁯‫‭‭⁯⁪‎‏‏‫‌‍‎‪‏‍⁯‮‌⁯⁯⁮‍⁬​‬⁯​⁮‮‮‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u200E‬‍‪​‏‬‍⁬⁯‫‭‭⁯⁪‎‏‏‫‌‍‎‪‏‍⁯‮‌⁯⁯⁮‍⁬​‬⁯​⁮‮‮‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u200E‬‍‪​‏‬‍⁬⁯‫‭‭⁯⁪‎‏‏‫‌‍‎‪‏‍⁯‮‌⁯⁯⁮‍⁬​‬⁯​⁮‮‮‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
      JSONNode.\u200F‬‎‏‫⁫‍‍⁯⁪‭⁪⁬⁮​‪‬⁭⁭‫‍⁫‫‌‫‏‌‍‬‭⁭‫⁪‎‫⁬‮⁬⁮‎‮(JSONNode.\u206F‮‏​⁫⁮‮‌​‬‬⁯⁯‍⁫⁮⁬‌‭‏‍‫‭⁭⁫‪‫‪‎‏‌⁮‌‏‬⁭⁫⁫⁯‎‮((FileSystemInfo) JSONNode.\u202C⁪​‎‬⁭‬‬‪⁭⁮‎‏‍⁬⁫‏‌⁫⁬⁬‪‬⁬‌⁬‮‌⁪⁬‪‮⁯​‪⁪‫‌⁮⁫‮(JSONNode.\u202B‎‫‎‎⁪‍⁮⁭‏‎‭‫⁮‪‭‭⁭‪⁯‫‭⁫⁪⁯‫⁪‌⁬‮‌⁪‭‎⁮‮⁯⁮⁪⁯‮(aFileName))));
      FileStream aData = JSONNode.\u206D⁪‪‌​​⁯⁮⁪‏⁯‏‬‫‎‎‮⁫‎‍⁫⁫⁭‍‌‌‍⁪‪⁪‎⁭‎⁪‎⁫‌⁬⁯‮‮(aFileName);
      try
      {
label_2:
        int num1 = 470962089;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1427464052)) % 3U)
          {
            case 0:
              goto label_2;
            case 1:
              goto label_9;
            case 2:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * -831437250 ^ -202098617;
              continue;
            default:
              goto label_5;
          }
        }
label_9:
        return;
label_5:;
      }
      finally
      {
        if (aData != null)
        {
label_7:
          int num3 = 602858392;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 1427464052)) % 3U)
            {
              case 1:
                JSONNode.\u202B​⁮⁯⁭⁭⁭‮​‍⁫‬‌‏‌⁬‬‫‮‏⁯‭‫⁪⁪⁪⁭‌‎‫‌‏‍‬‪​‏‫⁫⁭‮((IDisposable) aData);
                num3 = (int) num4 * -681743396 ^ 1439849689;
                continue;
              case 2:
                goto label_7;
              default:
                goto label_11;
            }
          }
        }
label_11:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u202D‬⁮⁫⁮‌​‫‏‫‭⁮‭⁫‭⁫‌‏⁮‍⁮⁯‭⁬‎‍‍⁬⁭⁮‏⁭⁪‌‏‫‫⁯‫‍‮();
      string base64;
      try
      {
label_2:
        int num1 = -2130274946;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -947200326)) % 5U)
          {
            case 0:
              base64 = JSONNode.\u202D‏‬⁮⁯⁫‍⁬⁭‬‫‌⁯‮‫​‪‍‪⁭‌⁪‬‮⁯⁪⁫⁫‮‌‮​⁬‌‍‮⁭​⁪‮‮(JSONNode.\u206F‮‫‬​⁫​​‎‏‭‪⁯‫‏‭⁮⁭‭‭‭⁭‭‌‬‌⁬⁬​‫‬⁪⁮‏⁭⁮⁪‬‏‬‮(aData));
              num1 = (int) num2 * 67869047 ^ -1496608044;
              continue;
            case 1:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * 1311979567 ^ -1688074097;
              continue;
            case 2:
              JSONNode.\u200C‏‌⁭‌⁯‫‪⁯⁭‮⁭‌⁫‫‎⁯‬‫‌‭‍⁭⁭⁮​⁪‪⁮‭‭‫​‎⁮‪‭​‎⁫‮((Stream) aData, 0L);
              num1 = (int) num2 * -117644298 ^ 63552688;
              continue;
            case 4:
              goto label_2;
            default:
              goto label_13;
          }
        }
      }
      finally
      {
        if (aData != null)
        {
label_8:
          int num3 = -1838847635;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -947200326)) % 4U)
            {
              case 0:
                goto label_8;
              case 2:
                num3 = (int) num4 * -194846416 ^ -237404705;
                continue;
              case 3:
                JSONNode.\u202B​⁮⁯⁭⁭⁭‮​‍⁫‬‌‏‌⁬‬‫‮‏⁯‭‫⁪⁪⁪⁭‌‎‫‌‏‍‬‪​‏‫⁫⁭‮((IDisposable) aData);
                num3 = (int) num4 * 1526416262 ^ 787845418;
                continue;
              default:
                goto label_12;
            }
          }
        }
label_12:;
      }
label_13:
      return base64;
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
      JSONBinaryTag jsonBinaryTag1 = (JSONBinaryTag) JSONNode.\u200B‮‭‏⁫‮⁪‮⁭​‏‏‭‫⁫‎​⁭‫⁭‮⁮⁫‪‎⁪⁮‭‎‭⁮⁮⁭‪⁪⁫‎⁮⁮‫‮(aReader);
label_1:
      int num1 = 84219320;
      int num2;
      int num3;
      JSONBinaryTag jsonBinaryTag2;
      bool flag;
      int num4;
      JSONClass jsonClass;
      int num5;
      JSONArray jsonArray;
      JSONNode jsonNode;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ 1159147681)) % 36U)
        {
          case 0:
            int num7 = flag ? 1986178520 : (num7 = 1991306384);
            num1 = num7 ^ (int) num6 * -814320252;
            continue;
          case 1:
            num1 = (int) num6 * 1297262719 ^ -1366962604;
            continue;
          case 2:
            num2 = 0;
            num1 = (int) num6 * 154777975 ^ -106859598;
            continue;
          case 3:
            num1 = (int) num6 * 1483546006 ^ -428811776;
            continue;
          case 4:
            num1 = (int) num6 * -1708497982 ^ -1527414518;
            continue;
          case 5:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * -1310846034 ^ 2072966132;
            continue;
          case 6:
            num3 = JSONNode.\u200E‏⁬⁪‬‎‪‮‌⁮‌‌‏⁭‏‮‎⁫‮​‏‮‍​‭‪‌⁭‎‏‌⁫​⁪‭‍⁫‭‪⁫‮(aReader);
            jsonArray = new JSONArray();
            num1 = (int) num6 * -1496714637 ^ 1086066509;
            continue;
          case 7:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * -578955795 ^ 1546727526;
            continue;
          case 8:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            num1 = 1069969079;
            continue;
          case 9:
            flag = num5 < num4;
            num1 = 871930673;
            continue;
          case 10:
            num1 = 932937816;
            continue;
          case 11:
label_35:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202C‌⁪⁮⁭⁮⁭​⁮⁭⁭‫‍‏⁯⁮‌‪‍‪⁭‍‮⁯‌⁮‬⁯⁪‌​⁪‬‌‭‍‬‪‎⁯‮(aReader));
            num1 = 1425089490;
            continue;
          case 12:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200F‏⁮‍​‭​‏‮‫‬‭⁯‪‫‍⁮‌⁫⁯⁭‬⁬⁭‭⁬⁪‏‌‍⁫‬‬⁯‫‫⁫⁪‭⁮‮(aReader));
            num1 = (int) num6 * 423692720 ^ 431036562;
            continue;
          case 13:
            goto label_23;
          case 14:
            switch (jsonBinaryTag2)
            {
              case JSONBinaryTag.Array:
                goto label_15;
              case JSONBinaryTag.Class:
                goto label_9;
              case JSONBinaryTag.Value:
                goto label_35;
              case JSONBinaryTag.IntValue:
                goto label_21;
              case JSONBinaryTag.DoubleValue:
                goto label_30;
              case JSONBinaryTag.BoolValue:
                goto label_24;
              case JSONBinaryTag.FloatValue:
                goto label_14;
              default:
                num1 = (int) num6 * 1858952536 ^ 1171008557;
                continue;
            }
          case 15:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206B⁫‌⁫‪‪​⁮‎⁪‭‮‎‏​⁬⁪⁬⁭‌‎‪​‭‪⁪‏‏‫‏⁯‮⁬‬​‬​‭‪⁬‮(aReader));
            num1 = (int) num6 * 290832064 ^ -2090882451;
            continue;
          case 16:
            num1 = (int) num6 * -1271707227 ^ -114631186;
            continue;
          case 17:
            num1 = 1582180671;
            continue;
          case 18:
label_15:
            num1 = 531048591;
            continue;
          case 19:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206C⁬‎‬⁮⁫‬‎⁭⁯‎‏‭‫‍‬⁪‫‭‏⁪‫⁬‌⁭‪‌‭​⁬⁫⁮‭‮​‏‬⁮⁪‭‮(aReader));
            num1 = (int) num6 * 1719996565 ^ 897487765;
            continue;
          case 20:
            num1 = (int) num6 * -1633259478 ^ 392702539;
            continue;
          case 21:
            jsonBinaryTag2 = jsonBinaryTag1;
            num1 = (int) num6 * -1502544871 ^ -201372670;
            continue;
          case 22:
label_14:
            num1 = 1823200509;
            continue;
          case 23:
            ++num5;
            num1 = (int) num6 * -251026493 ^ 602238229;
            continue;
          case 24:
label_21:
            num1 = 1772821996;
            continue;
          case 25:
            ++num2;
            num1 = (int) num6 * -1156510166 ^ -942168775;
            continue;
          case 26:
            string aKey = JSONNode.\u202C‌⁪⁮⁭⁮⁭​⁮⁭⁭‫‍‏⁯⁮‌‪‍‪⁭‍‮⁯‌⁮‬⁯⁪‌​⁪‬‌‭‍‬‪‎⁯‮(aReader);
            JSONNode aItem = JSONNode.Deserialize(aReader);
            jsonClass.Add(aKey, aItem);
            num1 = (int) num6 * 1773691749 ^ 391477780;
            continue;
          case 28:
label_30:
            num1 = 1838461546;
            continue;
          case 29:
label_24:
            num1 = 409406154;
            continue;
          case 30:
            num1 = (int) num6 * -84890354 ^ -2086608412;
            continue;
          case 31:
            num1 = (int) num6 * 1199689790 ^ 116316070;
            continue;
          case 32:
label_9:
            num4 = JSONNode.\u200E‏⁬⁪‬‎‪‮‌⁮‌‌‏⁭‏‮‎⁫‮​‏‮‍​‭‪‌⁭‎‏‌⁫​⁪‭‍⁫‭‪⁫‮(aReader);
            jsonClass = new JSONClass();
            num5 = 0;
            num1 = 829745810;
            continue;
          case 33:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200E‏⁬⁪‬‎‪‮‌⁮‌‌‏⁭‏‮‎⁫‮​‏‮‍​‭‪‌⁭‎‏‌⁫​⁪‭‍⁫‭‪⁫‮(aReader));
            num1 = (int) num6 * -73361866 ^ -710045716;
            continue;
          case 34:
            int num8;
            num1 = num8 = num2 < num3 ? 958708169 : (num8 = 386378198);
            continue;
          case 35:
            goto label_1;
          default:
            goto label_38;
        }
      }
label_23:
      throw JSONNode.\u200E‬‍‪​‏‬‍⁬⁯‫‭‭⁯⁪‎‏‏‫‌‍‎‪‏‍⁯‮‌⁯⁯⁮‍⁬​‬⁯​⁮‮‮‮(JSONNode.\u200D⁮‬⁮⁪‫⁭‫‭‌‭⁮‌‫⁮⁮⁪‬‍⁬‫⁯‎‫‏‭⁫‫‎‪‬⁪​⁯‭⁮⁪⁪‌‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag1.ToString()));
label_38:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u200E‬‍‪​‏‬‍⁬⁯‫‭‭⁯⁪‎‏‏‫‌‍‎‪‏‍⁯‮‌⁯⁯⁮‍⁬​‬⁯​⁮‮‮‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u200E‬‍‪​‏‬‍⁬⁯‫‭‭⁯⁪‎‏‏‫‌‍‎‪‏‍⁯‮‌⁯⁯⁮‍⁬​‬⁯​⁮‮‮‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u200E‬‍‪​‏‬‍⁬⁯‫‭‭⁯⁪‎‏‏‫‌‍‎‪‏‍⁯‮‌⁯⁯⁮‍⁬​‬⁯​⁮‮‮‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u202A‮⁪‫⁯‍‌⁬‎‭‎‬⁫⁯‭⁫​‭‫‍‏‍​‌‍⁪⁯‎‪‭‍⁮‪‍‭‮⁮‪⁮⁬‮(aData);
      try
      {
        return JSONNode.Deserialize(aReader);
      }
      finally
      {
        if (aReader != null)
        {
label_3:
          int num1 = 1733052502;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ 1012128187)) % 4U)
            {
              case 1:
                JSONNode.\u202B​⁮⁯⁭⁭⁭‮​‍⁫‬‌‏‌⁬‬‫‮‏⁯‭‫⁪⁪⁪⁭‌‎‫‌‏‍‬‪​‏‫⁫⁭‮((IDisposable) aReader);
                num1 = (int) num2 * 2081455377 ^ 1406252648;
                continue;
              case 2:
                num1 = (int) num2 * -1255236413 ^ -818612767;
                continue;
              case 3:
                goto label_3;
              default:
                goto label_7;
            }
          }
        }
label_7:;
      }
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u200E‍‎​‬‪‫⁬‪⁬⁪‬⁫‍⁪‫‏⁫‎⁫‭⁬⁬⁪‪⁯⁭‮‮‌‮‮‬‬‫⁮‪⁯‪‏‮(aFileName);
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = 459667465;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 586962580)) % 3U)
          {
            case 1:
              jsonNode = JSONNode.LoadFromStream((Stream) aData);
              num1 = (int) num2 * -930221243 ^ 1537415286;
              continue;
            case 2:
              goto label_2;
            default:
              goto label_11;
          }
        }
      }
      finally
      {
        if (aData != null)
        {
label_6:
          int num3 = 381721930;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 586962580)) % 4U)
            {
              case 1:
                num3 = (int) num4 * -933533464 ^ 735428888;
                continue;
              case 2:
                JSONNode.\u202B​⁮⁯⁭⁭⁭‮​‍⁫‬‌‏‌⁬‬‫‮‏⁯‭‫⁪⁪⁪⁭‌‎‫‌‏‍‬‪​‏‫⁫⁭‮((IDisposable) aData);
                num3 = (int) num4 * 1743884819 ^ -127394473;
                continue;
              case 3:
                goto label_6;
              default:
                goto label_10;
            }
          }
        }
label_10:;
      }
label_11:
      return jsonNode;
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
      byte[] numArray = JSONNode.\u200B‍‬⁮⁪⁪‫‍⁯⁬‍‫⁫‪⁭‍‍⁬⁫⁬‫‌‫‬​‌⁬⁬‬‏⁬‫‫‪⁭‪‪‍‭⁭‮(aBase64);
label_1:
      int num1 = -1957595994;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1646380753)) % 4U)
        {
          case 1:
            MemoryStream aData = JSONNode.\u206E⁪⁬⁬‍⁫​⁭‬‍‌‭⁬‬⁮‬⁪‭‎‭⁯⁪‏‬⁪‮⁯‏‭⁭⁮‭⁮‮‬‌‭‪⁯‪‮(numArray);
            JSONNode.\u200C‏‌⁭‌⁯‫‪⁯⁭‮⁭‌⁫‫‎⁯‬‫‌‭‍⁭⁭⁮​⁪‪⁮‭‭‫​‎⁮‪‭​‎⁫‮((Stream) aData, 0L);
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * 21684519 ^ -681718849;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * 1871396707 ^ 478756770;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public JSONNode()
    {
label_1:
      int num1 = -1879146744;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2086518152)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * 1943260510 ^ -214059557;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static CultureInfo \u202E​‏‫‮⁫‏‪‪‮⁯‍⁯⁭‭⁭⁮​‍‪‎‎‮‏⁫​‫‌‮⁪‍⁮‌‏​​‫‬‎‪‮() => CultureInfo.InvariantCulture;

    static bool \u206E⁭‍‭‪‏⁭⁪⁭⁯⁬‬⁭‭​‭⁯‍‫⁪⁯⁭⁭⁯‏⁪‮‫⁪‭‭⁯⁭⁮‪‌‍⁮‎⁫‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u200B‏‎‬‭‌‌‌⁭⁯⁭‪‮⁬⁬‏‬‏⁭⁬‫⁯‬‫‌​‪‪⁫⁭‍‍⁮‫⁫⁬⁮⁯⁮⁪‮() => base.GetHashCode();

    static char \u206F‭‫‌⁫‫‏‍⁯‮‮‌‮⁫‬⁭‏⁪‫⁫‎⁭⁬⁯⁯‏‪‌‮⁮⁫⁪⁫⁭‎‫‏⁮‏‬‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u200D⁮‬⁮⁪‫⁭‫‭‌‭⁮‌‫⁮⁮⁪‬‍⁬‫⁯‎‫‏‭⁫‫‎‪‬⁪​⁯‭⁮⁪⁪‌‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u200F‮‏⁬⁫⁬‭​‬‌⁭⁫‪​‌‎‭‏⁬‫‪⁮⁯‍‬‎‍‭‎⁮‏‫⁭‎‭‮‍‫⁬⁫‮([In] string obj0) => obj0.Length;

    static string \u206C⁯‎‌⁫‌‬‪⁪‫⁫⁪‫⁮⁪⁪⁭⁮⁪⁯⁭‫⁫‪⁫‏⁫‍⁯‭‌‏⁯⁭⁫⁫‬⁭⁯‬‮([In] string obj0) => obj0.Trim();

    static bool \u206F‏⁬‮‌⁬‍⁬⁪‭‎‪‏‭‍‏‫‏‍‏⁬‮‭‬⁬‏‮⁭‮‫⁪⁬‍‍⁮‎‭⁫‭‫‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u200E‬‍‪​‏‬‍⁬⁯‫‭‭⁯⁪‎‏‏‫‌‍‎‪‏‍⁯‮‌⁯⁯⁮‍⁬​‬⁯​⁮‮‮‮([In] string obj0) => new Exception(obj0);

    static string \u200E‭‭‪‌⁫‎‮⁮‬‮⁪⁫⁪⁮⁪⁬‎⁮‮⁮‎⁫‫⁮⁫‍⁬‭⁮‏‎‍⁪‪‎‪‭⁬⁬‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u200B‭‍‎‪⁪‭⁫⁪​‭‮‫‭‍⁭⁮‍⁮‍⁬⁫⁯⁬⁯‎⁯⁪‍‎⁯‎‭⁪​‬⁯‬​‭‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u202B‎‫‎‎⁪‍⁮⁭‏‎‭‫⁮‪‭‭⁭‪⁯‫‭⁫⁪⁯‫⁪‌⁬‮‌⁪‭‎⁮‮⁯⁮⁪⁯‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u202C⁪​‎‬⁭‬‬‪⁭⁮‎‏‍⁬⁫‏‌⁫⁬⁬‪‬⁬‌⁬‮‌⁪⁬‪‮⁯​‪⁪‫‌⁮⁫‮([In] FileInfo obj0) => obj0.Directory;

    static string \u206F‮‏​⁫⁮‮‌​‬‬⁯⁯‍⁫⁮⁬‌‭‏‍‫‭⁭⁫‪‫‪‎‏‌⁮‌‏‬⁭⁫⁫⁯‎‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u200F‬‎‏‫⁫‍‍⁯⁪‭⁪⁬⁮​‪‬⁭⁭‫‍⁫‫‌‫‏‌‍‬‭⁭‫⁪‎‫⁬‮⁬⁮‎‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u206D⁪‪‌​​⁯⁮⁪‏⁯‏‬‫‎‎‮⁫‎‍⁫⁫⁭‍‌‌‍⁪‪⁪‎⁭‎⁪‎⁫‌⁬⁯‮‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u202B​⁮⁯⁭⁭⁭‮​‍⁫‬‌‏‌⁬‬‫‮‏⁯‭‫⁪⁪⁪⁭‌‎‫‌‏‍‬‪​‏‫⁫⁭‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u202D‬⁮⁫⁮‌​‫‏‫‭⁮‭⁫‭⁫‌‏⁮‍⁮⁯‭⁬‎‍‍⁬⁭⁮‏⁭⁪‌‏‫‫⁯‫‍‮() => new MemoryStream();

    static void \u200C‏‌⁭‌⁯‫‪⁯⁭‮⁭‌⁫‫‎⁯‬‫‌‭‍⁭⁭⁮​⁪‪⁮‭‭‫​‎⁮‪‭​‎⁫‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u206F‮‫‬​⁫​​‎‏‭‪⁯‫‏‭⁮⁭‭‭‭⁭‭‌‬‌⁬⁬​‫‬⁪⁮‏⁭⁮⁪‬‏‬‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u202D‏‬⁮⁯⁫‍⁬⁭‬‫‌⁯‮‫​‪‍‪⁭‌⁪‬‮⁯⁪⁫⁫‮‌‮​⁬‌‍‮⁭​⁪‮‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u200B‮‭‏⁫‮⁪‮⁭​‏‏‭‫⁫‎​⁭‫⁭‮⁮⁫‪‎⁪⁮‭‎‭⁮⁮⁭‪⁪⁫‎⁮⁮‫‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u200E‏⁬⁪‬‎‪‮‌⁮‌‌‏⁭‏‮‎⁫‮​‏‮‍​‭‪‌⁭‎‏‌⁫​⁪‭‍⁫‭‪⁫‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u202C‌⁪⁮⁭⁮⁭​⁮⁭⁭‫‍‏⁯⁮‌‪‍‪⁭‍‮⁯‌⁮‬⁯⁪‌​⁪‬‌‭‍‬‪‎⁯‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u206B⁫‌⁫‪‪​⁮‎⁪‭‮‎‏​⁬⁪⁬⁭‌‎‪​‭‪⁪‏‏‫‏⁯‮⁬‬​‬​‭‪⁬‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u206C⁬‎‬⁮⁫‬‎⁭⁯‎‏‭‫‍‬⁪‫‭‏⁪‫⁬‌⁭‪‌‭​⁬⁫⁮‭‮​‏‬⁮⁪‭‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u200F‏⁮‍​‭​‏‮‫‬‭⁯‪‫‍⁮‌⁫⁯⁭‬⁬⁭‭⁬⁪‏‌‍⁫‬‬⁯‫‫⁫⁪‭⁮‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u202A‮⁪‫⁯‍‌⁬‎‭‎‬⁫⁯‭⁫​‭‫‍‏‍​‌‍⁪⁯‎‪‭‍⁮‪‍‭‮⁮‪⁮⁬‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u200E‍‎​‬‪‫⁬‪⁬⁪‬⁫‍⁪‫‏⁫‎⁫‭⁬⁬⁪‪⁯⁭‮‮‌‮‮‬‬‫⁮‪⁯‪‏‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u200B‍‬⁮⁪⁪‫‍⁯⁬‍‫⁫‪⁭‍‍⁬⁫⁬‫‌‫‬​‌⁬⁬‬‏⁬‫‫‪⁭‪‪‍‭⁭‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u206E⁪⁬⁬‍⁫​⁭‬‍‌‭⁬‬⁮‬⁪‭‎‭⁯⁪‏‬⁪‮⁯‏‭⁭⁮‭⁮‮‬‌‭‪⁯‪‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
