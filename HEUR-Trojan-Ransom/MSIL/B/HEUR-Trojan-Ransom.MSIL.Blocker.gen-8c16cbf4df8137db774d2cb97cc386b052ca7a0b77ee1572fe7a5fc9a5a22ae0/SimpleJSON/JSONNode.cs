// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: SZGenericArrayEnumerat, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: E834FD24-872B-47C0-BFE1-9B14E3D5CFBB
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-8c16cbf4df8137db774d2cb97cc386b052ca7a0b77ee1572fe7a5fc9a5a22ae0.exe

using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 1463162384;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1887691038)) % 4U)
          {
            case 1:
              num1 = (int) num2 * -1549679084 ^ -1345292494;
              continue;
            case 2:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 1395427982 ^ 209245555;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) null;
label_1:
        int num1 = 636558633;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1163288024)) % 3U)
          {
            case 1:
              num1 = (int) num2 * -644388196 ^ -1096832266;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual string Value
    {
      get => "";
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
label_1:
        int num1 = 670613913;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 735573638)) % 4U)
          {
            case 0:
              num1 = (int) num2 * -1127307795 ^ -1002708241;
              continue;
            case 2:
              goto label_1;
            case 3:
              count = 0;
              num1 = (int) num2 * -2133512585 ^ -352139173;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem)
    {
label_1:
      int num1 = 463571687;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1201721236)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * 1226443905 ^ 834371675;
            continue;
          case 3:
            this.Add("", aItem);
            num1 = (int) num2 * 1969973532 ^ 1701039362;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public virtual JSONNode Remove(string aKey)
    {
label_1:
      int num1 = 383459689;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 682086896)) % 4U)
        {
          case 1:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * -736698511 ^ -505408818;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * 2117787952 ^ 1376583968;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = -447014277;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -536208326)) % 4U)
        {
          case 1:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 131787018 ^ -136033997;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * -1519263578 ^ -1548963420;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual JSONNode Remove(JSONNode aNode) => aNode;

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONNode.\u003Cget_Childs\u003Ed__17 childs = new JSONNode.\u003Cget_Childs\u003Ed__17(-2);
label_1:
        int num1 = -1235947376;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2081734983)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              childs.\u003C\u003E4__this = this;
              num1 = (int) num2 * -2065322986 ^ -1437180237;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return (IEnumerable<JSONNode>) childs;
      }
    }

    public IEnumerable<JSONNode> DeepChilds => (IEnumerable<JSONNode>) new JSONNode.\u003Cget_DeepChilds\u003Ed__19(-2)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString()
    {
      string str = nameof (JSONNode);
label_1:
      int num1 = -481410749;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -418648657)) % 3U)
        {
          case 1:
            num1 = (int) num2 * 83078230 ^ -822128509;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual string ToString(string aPrefix)
    {
label_1:
      int num1 = -1902037256;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1363789057)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -306450007 ^ -1142737666;
            continue;
          case 2:
            goto label_1;
          case 3:
            str = nameof (JSONNode);
            num1 = (int) num2 * -734668128 ^ 1704057303;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public virtual int AsInt
    {
      get
      {
label_1:
        int num1 = -78668279;
        int result;
        bool flag;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2146764066)) % 8U)
          {
            case 0:
              flag = int.TryParse(this.Value, out result);
              num1 = (int) num2 * 393686850 ^ -996633982;
              continue;
            case 2:
              goto label_1;
            case 3:
              asInt = result;
              num1 = (int) num2 * -1220369319 ^ 1906443216;
              continue;
            case 4:
              int num3 = flag ? -1270693683 : (num3 = -682669216);
              num1 = num3 ^ (int) num2 * -322501930;
              continue;
            case 5:
              num1 = (int) num2 * -1392133790 ^ -1488672011;
              continue;
            case 6:
              asInt = 0;
              num1 = -1385432497;
              continue;
            case 7:
              result = 0;
              num1 = (int) num2 * 1017436617 ^ 1014481785;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asInt;
      }
      set
      {
label_1:
        int num1 = -1625039548;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2119790790)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 670222396 ^ 1259014389;
              continue;
            case 2:
              this.Value = value.ToString();
              num1 = (int) num2 * 1871534027 ^ 2138264205;
              continue;
            case 3:
              goto label_3;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public virtual float AsFloat
    {
      get
      {
label_1:
        int num1 = 1140980944;
        float asFloat;
        float result;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1915486126)) % 7U)
          {
            case 0:
              num1 = (int) num2 * -37727817 ^ -1516919429;
              continue;
            case 1:
              asFloat = result;
              num1 = (int) num2 * -1592755411 ^ -711598645;
              continue;
            case 2:
              asFloat = 0.0f;
              num1 = 1384076648;
              continue;
            case 3:
              result = 0.0f;
              num1 = (int) num2 * 163677611 ^ 2043916568;
              continue;
            case 5:
              goto label_1;
            case 6:
              int num3 = float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u202B‮‌‫‭‍⁪‪⁮⁭‏⁮‬‮‍‎⁬​⁫‬‭​​⁭‭⁯‍⁬‍‪‍⁮⁮‌⁪⁫‭‭‌⁬‮(), out result) ? -1463859084 : (num3 = -1306850282);
              num1 = num3 ^ (int) num2 * -1945965470;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asFloat;
      }
      set
      {
label_1:
        int num1 = -2059850199;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -262754997)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Value = value.ToString();
              num1 = (int) num2 * 1150054651 ^ 1677456734;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual double AsDouble
    {
      get
      {
label_1:
        int num1 = -1294075166;
        bool flag;
        double asDouble;
        double result;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1349131783)) % 9U)
          {
            case 0:
              goto label_1;
            case 1:
              flag = double.TryParse(this.Value, out result);
              num1 = (int) num2 * -598432544 ^ -1706024739;
              continue;
            case 2:
              result = 0.0;
              num1 = (int) num2 * 1520437861 ^ 1471910981;
              continue;
            case 3:
              asDouble = result;
              num1 = (int) num2 * -1199284645 ^ 1650617889;
              continue;
            case 4:
              asDouble = 0.0;
              num1 = -1145158445;
              continue;
            case 5:
              int num3 = !flag ? -983788545 : (num3 = -1534054563);
              num1 = num3 ^ (int) num2 * 918983309;
              continue;
            case 6:
              num1 = (int) num2 * -545329116 ^ 1012046714;
              continue;
            case 8:
              num1 = (int) num2 * -203283633 ^ -1591502710;
              continue;
            default:
              goto label_10;
          }
        }
label_10:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = 1354629515;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 957616244)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Value = value.ToString();
              num1 = (int) num2 * -2096603353 ^ 1467440117;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual bool AsBool
    {
      get
      {
label_1:
        int num1 = 1068766079;
        bool result;
        bool asBool;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1920687105)) % 8U)
          {
            case 1:
              num1 = (int) num2 * 1711031338 ^ -105518309;
              continue;
            case 2:
              goto label_1;
            case 3:
              asBool = result;
              num1 = (int) num2 * -1507732944 ^ -608471256;
              continue;
            case 4:
              num1 = (int) num2 * 942277818 ^ 471079785;
              continue;
            case 5:
              int num3 = flag ? -5058266 : (num3 = -832103566);
              num1 = num3 ^ (int) num2 * 602626844;
              continue;
            case 6:
              result = false;
              flag = bool.TryParse(this.Value, out result);
              num1 = (int) num2 * 1910104925 ^ 2082214770;
              continue;
            case 7:
              asBool = !JSONNode.\u202E‫‌​​‭⁫⁯⁫‌⁪​‏⁬‍⁮⁯‍‌‍‮‎‎‪⁯​⁮‏‎‫‬‎⁫‬‫⁫‮⁯⁪⁫‮(this.Value);
              num1 = 2009625765;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asBool;
      }
      set
      {
label_1:
        int num1 = 1203569863;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1564421129)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 232528995 ^ -1096734967;
              continue;
            case 2:
              this.Value = value ? "true" : "false";
              num1 = 1190195268;
              continue;
            case 3:
              goto label_3;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public virtual JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = -2088696095;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -496142052)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              asArray = this as JSONArray;
              num1 = (int) num2 * -109089651 ^ -1672060455;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asArray;
      }
    }

    public virtual JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = 530870776;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 735209329)) % 4U)
          {
            case 1:
              asObject = this as JSONClass;
              num1 = (int) num2 * -1646597001 ^ 2109774597;
              continue;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * 620310453 ^ -1478426126;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s)
    {
label_1:
      int num1 = 1333829400;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 505667924)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            jsonNode = (JSONNode) new JSONData(s);
            num1 = (int) num2 * -1294352884 ^ 1790343728;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public static implicit operator string(JSONNode d)
    {
label_1:
      int num1 = -2021025855;
      string str1;
      while (true)
      {
        uint num2;
        string str2;
        switch ((num2 = (uint) (num1 ^ -1217055764)) % 5U)
        {
          case 0:
            str2 = d.Value;
            break;
          case 1:
            num1 = (int) num2 * -1631321623 ^ -843371630;
            continue;
          case 2:
            goto label_1;
          case 4:
            if (!(d == (object) null))
            {
              num1 = (int) num2 * 226487729 ^ -1517448424;
              continue;
            }
            str2 = (string) null;
            break;
          default:
            goto label_9;
        }
        str1 = str2;
        num1 = -1029896583;
      }
label_9:
      return str1;
    }

    public static bool operator ==(JSONNode a, object b)
    {
label_1:
      int num1 = -427352549;
      bool flag1;
      while (true)
      {
        uint num2;
        bool flag2;
        int num3;
        switch ((num2 = (uint) (num1 ^ -2087556698)) % 9U)
        {
          case 0:
            num3 = a is JSONLazyCreator ? 1 : 0;
            break;
          case 1:
            num1 = (int) num2 * -2028383250 ^ -1085769509;
            continue;
          case 2:
            int num4 = flag2 ? 1691619951 : (num4 = 984849606);
            num1 = num4 ^ (int) num2 * -843857484;
            continue;
          case 3:
            num1 = (int) num2 * 1119210269 ^ 355869093;
            continue;
          case 4:
            if (b == null)
            {
              num1 = (int) num2 * -483527223 ^ 2118535747;
              continue;
            }
            num3 = 0;
            break;
          case 5:
            goto label_1;
          case 6:
            flag1 = (object) a == b;
            num1 = -1428181880;
            continue;
          case 8:
            flag1 = true;
            num1 = (int) num2 * 480826426 ^ 246136086;
            continue;
          default:
            goto label_13;
        }
        flag2 = num3 != 0;
        num1 = -341965893;
      }
label_13:
      return flag1;
    }

    public static bool operator !=(JSONNode a, object b)
    {
label_1:
      int num1 = -762232763;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -238557492)) % 3U)
        {
          case 1:
            flag = !(a == b);
            num1 = (int) num2 * 1147309164 ^ -506338416;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = -57203911;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1302982832)) % 4U)
        {
          case 1:
            flag = (object) this == obj;
            num1 = (int) num2 * -1749666854 ^ -1556523928;
            continue;
          case 2:
            num1 = (int) num2 * 578233113 ^ -1619006190;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override int GetHashCode()
    {
label_1:
      int num1 = -861342475;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -118170956)) % 4U)
        {
          case 0:
            num1 = (int) num2 * 481708664 ^ -1441621209;
            continue;
          case 1:
            hashCode = this.\u200E⁭‭‍‎‭‬‭‭‌⁫⁭‎⁬‫​⁪‫⁭‏‏‬‎​‭‫⁯‭‎⁫‏⁮⁭⁫⁫‮‌​⁮‮();
            num1 = (int) num2 * -989110686 ^ 1342448666;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return hashCode;
    }

    internal static string Escape(string aText)
    {
      string str1 = "";
label_1:
      int num1 = 677224436;
      int num2;
      string str2;
      char ch1;
      char ch2;
      string str3;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 1747370317)) % 29U)
        {
          case 0:
            int num4;
            num1 = num4 = ch2 == '"' ? 690908596 : (num4 = 268015756);
            continue;
          case 1:
label_15:
            str1 = JSONNode.\u202B​⁪​‎⁫‬‌‫‪‬⁮‪⁭‪⁯⁬⁯‎⁯​⁪‍‮⁮‪‬‪⁫‎‮‪‭⁪⁬‬⁪‍‍‬‮(str1, "\\n");
            num1 = 2091314721;
            continue;
          case 2:
label_23:
            str1 = JSONNode.\u202B​⁪​‎⁫‬‌‫‪‬⁮‪⁭‪⁯⁬⁯‎⁯​⁪‍‮⁮‪‬‪⁫‎‮‪‭⁪⁬‬⁪‍‍‬‮(str1, "\\t");
            num1 = 1867718193;
            continue;
          case 3:
            num1 = (int) num3 * -1255584280 ^ -68036861;
            continue;
          case 4:
            num1 = (int) num3 * 289612036 ^ -44154706;
            continue;
          case 5:
            ch1 = JSONNode.\u206F‎‪⁫‬⁭‬​‭​⁪‎‬​‫‬‬‍​‎‮‪⁯⁪‌‌‫⁬‬‍⁫​⁮‎​‮⁮‬‎⁯‮(str2, num2);
            num1 = 1917896812;
            continue;
          case 6:
            goto label_1;
          case 7:
            ch2 = ch1;
            switch (ch2)
            {
              case '\b':
                goto label_18;
              case '\t':
                goto label_23;
              case '\n':
                goto label_15;
              case '\v':
                goto label_6;
              case '\f':
                goto label_16;
              case '\r':
                goto label_14;
              default:
                num1 = (int) num3 * -871462772 ^ -53269335;
                continue;
            }
          case 8:
label_14:
            str1 = JSONNode.\u202B​⁪​‎⁫‬‌‫‪‬⁮‪⁭‪⁯⁬⁯‎⁯​⁪‍‮⁮‪‬‪⁫‎‮‪‭⁪⁬‬⁪‍‍‬‮(str1, "\\r");
            num1 = 1198161402;
            continue;
          case 9:
            num1 = (int) num3 * -1654099867 ^ 1625042878;
            continue;
          case 10:
            str2 = aText;
            num1 = (int) num3 * -217297602 ^ -1024318015;
            continue;
          case 11:
            num1 = (int) num3 * 681126744 ^ -312105467;
            continue;
          case 12:
            num1 = (int) num3 * -2374406 ^ 388687432;
            continue;
          case 13:
            num1 = (int) num3 * -613125575 ^ 2090020388;
            continue;
          case 14:
label_16:
            str1 = JSONNode.\u202B​⁪​‎⁫‬‌‫‪‬⁮‪⁭‪⁯⁬⁯‎⁯​⁪‍‮⁮‪‬‪⁫‎‮‪‭⁪⁬‬⁪‍‍‬‮(str1, "\\f");
            num1 = 1395690425;
            continue;
          case 15:
            num1 = (int) num3 * 363803228 ^ -491981462;
            continue;
          case 16:
label_6:
            str1 = JSONNode.\u202B​⁪​‎⁫‬‌‫‪‬⁮‪⁭‪⁯⁬⁯‎⁯​⁪‍‮⁮‪‬‪⁫‎‮‪‭⁪⁬‬⁪‍‍‬‮(str1, ch1.ToString());
            num1 = 1308943149;
            continue;
          case 17:
            num1 = (int) num3 * -1535600242 ^ -1130012815;
            continue;
          case 19:
            str1 = JSONNode.\u202B​⁪​‎⁫‬‌‫‪‬⁮‪⁭‪⁯⁬⁯‎⁯​⁪‍‮⁮‪‬‪⁫‎‮‪‭⁪⁬‬⁪‍‍‬‮(str1, "\\\"");
            num1 = 1198161402;
            continue;
          case 20:
            int num5;
            num1 = num5 = ch2 != '\\' ? 1794708098 : (num5 = 1263368552);
            continue;
          case 21:
            num2 = 0;
            num1 = (int) num3 * -633832450 ^ -1256804599;
            continue;
          case 22:
            num1 = (int) num3 * -891381084 ^ -785963830;
            continue;
          case 23:
            str3 = str1;
            num1 = (int) num3 * -520267899 ^ -937940467;
            continue;
          case 24:
            ++num2;
            num1 = 1154901070;
            continue;
          case 25:
label_18:
            str1 = JSONNode.\u202B​⁪​‎⁫‬‌‫‪‬⁮‪⁭‪⁯⁬⁯‎⁯​⁪‍‮⁮‪‬‪⁫‎‮‪‭⁪⁬‬⁪‍‍‬‮(str1, "\\b");
            num1 = 896809664;
            continue;
          case 26:
            int num6;
            num1 = num6 = num2 >= JSONNode.\u206C⁪‮⁪‎⁯‮‍‏‭⁬⁮‫​‮‭‮⁬‭‍‏‪⁯‭⁯‪‪‬‎⁭⁮⁯‍‍‭⁭‏‏​‍‮(str2) ? 883975047 : (num6 = 1725929488);
            continue;
          case 27:
            str1 = JSONNode.\u202B​⁪​‎⁫‬‌‫‪‬⁮‪⁭‪⁯⁬⁯‎⁯​⁪‍‮⁮‪‬‪⁫‎‮‪‭⁪⁬‬⁪‍‍‬‮(str1, "\\\\");
            num1 = 1538161539;
            continue;
          case 28:
            num1 = (int) num3 * -107969909 ^ -124315686;
            continue;
          default:
            goto label_31;
        }
      }
label_31:
      return str3;
    }

    public static JSONNode Parse(string aJSON)
    {
      Stack<JSONNode> jsonNodeStack = new Stack<JSONNode>();
label_1:
      int num1 = 292623310;
      string aItem;
      int num2;
      JSONNode jsonNode1;
      JSONNode jsonNode2;
      bool flag1;
      bool flag2;
      char ch1;
      bool flag3;
      char ch2;
      char ch3;
      string aKey;
      bool flag4;
      bool flag5;
      bool flag6;
      char ch4;
      bool flag7;
      bool flag8;
      bool flag9;
      bool flag10;
      bool flag11;
      bool flag12;
      string s;
      bool flag13;
      bool flag14;
      bool flag15;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 1067883960)) % 153U)
        {
          case 0:
            flag4 = JSONNode.\u200B‮‭⁯⁬‏⁮⁪⁫‬⁪‭‏⁫‬‎⁯‭⁮⁬⁯⁯⁬‍‍‌⁯‏‬‬⁮⁫⁭‬​⁭‭‪‎‎‮(aItem, "");
            num1 = (int) num3 * 1173749056 ^ -1628951619;
            continue;
          case 1:
            num2 = 0;
            aItem = "";
            num1 = (int) num3 * -1339475887 ^ 30688993;
            continue;
          case 2:
            int num4 = flag8 ? -98293533 : (num4 = -1504551157);
            num1 = num4 ^ (int) num3 * -1738739936;
            continue;
          case 3:
            int num5 = !flag15 ? -1813612936 : (num5 = -960018372);
            num1 = num5 ^ (int) num3 * -1899159891;
            continue;
          case 4:
            switch (ch1)
            {
              case '\t':
                goto label_138;
              case '\n':
              case '\r':
                goto label_95;
              case '\v':
              case '\f':
                goto label_89;
              default:
                num1 = (int) num3 * -998936733 ^ 1179677055;
                continue;
            }
          case 5:
            int num6 = ch4 <= 'f' ? 798697924 : (num6 = 553902430);
            num1 = num6 ^ (int) num3 * -783787115;
            continue;
          case 6:
          case 16:
          case 94:
          case 110:
          case (uint) sbyte.MaxValue:
label_95:
            ++num2;
            num1 = 335860775;
            continue;
          case 7:
            flag3 = JSONNode.\u200B‮‭⁯⁬‏⁮⁪⁫‬⁪‭‏⁫‬‎⁯‭⁮⁬⁯⁯⁬‍‍‌⁯‏‬‬⁮⁫⁭‬​⁭‭‪‎‎‮(aItem, "");
            num1 = 1151210730;
            continue;
          case 8:
            int num7 = jsonNodeStack.Count > 0 ? 1853863627 : (num7 = 472645146);
            num1 = num7 ^ (int) num3 * -1179643290;
            continue;
          case 9:
            num1 = (int) num3 * 538188621 ^ 1145320655;
            continue;
          case 10:
            num1 = (int) num3 * -1550335256 ^ -1052135811;
            continue;
          case 11:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -641495605 ^ 220627496;
            continue;
          case 12:
            int num8 = flag5 ? 2135196004 : (num8 = 664995502);
            num1 = num8 ^ (int) num3 * -786134507;
            continue;
          case 13:
            int num9 = !flag4 ? 1752998931 : (num9 = 872067121);
            num1 = num9 ^ (int) num3 * -1479119595;
            continue;
          case 14:
            num1 = (int) num3 * 318281989 ^ 1477542803;
            continue;
          case 15:
            aItem = JSONNode.\u202B​⁪​‎⁫‬‌‫‪‬⁮‪⁭‪⁯⁬⁯‎⁯​⁪‍‮⁮‪‬‪⁫‎‮‪‭⁪⁬‬⁪‍‍‬‮(aItem, "\f");
            num1 = 1114260156;
            continue;
          case 17:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 1050358908 ^ -101481472;
            continue;
          case 18:
            num1 = (int) num3 * -115763332 ^ -178302619;
            continue;
          case 19:
            ch3 = ch2;
            num1 = (int) num3 * 775982779 ^ -1983814261;
            continue;
          case 20:
            num1 = (int) num3 * 1600632350 ^ -918637277;
            continue;
          case 21:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -433767795 ^ -2041399242;
            continue;
          case 22:
label_77:
            aItem = JSONNode.\u202B​⁪​‎⁫‬‌‫‪‬⁮‪⁭‪⁯⁬⁯‎⁯​⁪‍‮⁮‪‬‪⁫‎‮‪‭⁪⁬‬⁪‍‍‬‮(aItem, "\r");
            num1 = 2096782866;
            continue;
          case 23:
            num1 = (int) num3 * -1584111969 ^ -1941698574;
            continue;
          case 24:
label_89:
            aItem = JSONNode.\u202B​⁪​‎⁫‬‌‫‪‬⁮‪⁭‪⁯⁬⁯‎⁯​⁪‍‮⁮‪‬‪⁫‎‮‪‭⁪⁬‬⁪‍‍‬‮(aItem, JSONNode.\u206F‎‪⁫‬⁭‬​‭​⁪‎‬​‫‬‬‍​‎‮‪⁯⁪‌‌‫⁬‬‍⁫​⁮‎​‮⁮‬‎⁯‮(aJSON, num2).ToString());
            num1 = 1767426381;
            continue;
          case 25:
            flag9 = JSONNode.\u200B‮‭⁯⁬‏⁮⁪⁫‬⁪‭‏⁫‬‎⁯‭⁮⁬⁯⁯⁬‍‍‌⁯‏‬‬⁮⁫⁭‬​⁭‭‪‎‎‮(aKey, "");
            num1 = 723181302;
            continue;
          case 26:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 1571016205 ^ -721086418;
            continue;
          case 27:
            int num10 = !flag7 ? 29306173 : (num10 = 992648250);
            num1 = num10 ^ (int) num3 * 6173434;
            continue;
          case 28:
            int num11 = flag6 ? 571149693 : (num11 = 680782773);
            num1 = num11 ^ (int) num3 * -1411422568;
            continue;
          case 29:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 8374759 ^ 36985267;
            continue;
          case 30:
            aKey = JSONNode.\u202D⁬‫‭‬‍‭‪‬‏‏⁬‮‏‎‭⁬⁭⁭‎⁫⁪⁮⁬⁪⁪⁫‎⁫⁫‫‪‪‭‭‌⁬‬‪⁬‮(aKey);
            num1 = (int) num3 * 908015154 ^ -2074512447;
            continue;
          case 31:
            int num12;
            num1 = num12 = ch4 == 'f' ? 1662901563 : (num12 = 1499941124);
            continue;
          case 32:
            num1 = (int) num3 * 886093879 ^ 1827265812;
            continue;
          case 33:
            num1 = (int) num3 * 9381389 ^ -2058660261;
            continue;
          case 34:
            num1 = (int) num3 * 1507787782 ^ -1295565799;
            continue;
          case 35:
            int num13;
            num1 = num13 = ch1 == '}' ? 846535236 : (num13 = 285342485);
            continue;
          case 36:
            int num14 = flag11 ? 1104504411 : (num14 = 207237809);
            num1 = num14 ^ (int) num3 * 1465956353;
            continue;
          case 37:
            num1 = (int) num3 * 532228619 ^ 1489178203;
            continue;
          case 38:
            num1 = (int) num3 * -1514234916 ^ -1132255879;
            continue;
          case 39:
            aItem = "";
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 372198443 ^ -2066880348;
            continue;
          case 40:
            aKey = JSONNode.\u202D⁬‫‭‬‍‭‪‬‏‏⁬‮‏‎‭⁬⁭⁭‎⁫⁪⁮⁬⁪⁪⁫‎⁫⁫‫‪‪‭‭‌⁬‬‪⁬‮(aKey);
            num1 = (int) num3 * 495778061 ^ 533189900;
            continue;
          case 42:
            aKey = "";
            aItem = "";
            num1 = 1233679087;
            continue;
          case 43:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 905690825 ^ -532722431;
            continue;
          case 44:
            flag13 = jsonNode1 != (object) null;
            num1 = (int) num3 * -719794882 ^ -519109166;
            continue;
          case 45:
            int num15;
            num1 = num15 = !flag2 ? 1897310314 : (num15 = 1937582091);
            continue;
          case 46:
            num1 = (int) num3 * -1745355733 ^ 1336707693;
            continue;
          case 47:
            int num16;
            num1 = num16 = ch1 != ' ' ? 189762287 : (num16 = 1899229434);
            continue;
          case 48:
            aKey = JSONNode.\u202D⁬‫‭‬‍‭‪‬‏‏⁬‮‏‎‭⁬⁭⁭‎⁫⁪⁮⁬⁪⁪⁫‎⁫⁫‫‪‪‭‭‌⁬‬‪⁬‮(aKey);
            num1 = (int) num3 * -527912343 ^ 1911291263;
            continue;
          case 49:
            aItem = JSONNode.\u202B​⁪​‎⁫‬‌‫‪‬⁮‪⁭‪⁯⁬⁯‎⁯​⁪‍‮⁮‪‬‪⁫‎‮‪‭⁪⁬‬⁪‍‍‬‮(aItem, JSONNode.\u206F‎‪⁫‬⁭‬​‭​⁪‎‬​‫‬‬‍​‎‮‪⁯⁪‌‌‫⁬‬‍⁫​⁮‎​‮⁮‬‎⁯‮(aJSON, num2).ToString());
            num1 = (int) num3 * 259227564 ^ 2044578504;
            continue;
          case 50:
label_143:
            flag7 = flag2;
            num1 = 27592805;
            continue;
          case 51:
            aItem = JSONNode.\u202B​⁪​‎⁫‬‌‫‪‬⁮‪⁭‪⁯⁬⁯‎⁯​⁪‍‮⁮‪‬‪⁫‎‮‪‭⁪⁬‬⁪‍‍‬‮(aItem, JSONNode.\u206F‎‪⁫‬⁭‬​‭​⁪‎‬​‫‬‬‍​‎‮‪⁯⁪‌‌‫⁬‬‍⁫​⁮‎​‮⁮‬‎⁯‮(aJSON, num2).ToString());
            num1 = (int) num3 * 1727751596 ^ -704232531;
            continue;
          case 52:
            int num17 = ch1 <= ' ' ? 845170716 : (num17 = 546032721);
            num1 = num17 ^ (int) num3 * 1496127754;
            continue;
          case 53:
            num1 = (int) num3 * 596649671 ^ 1240220194;
            continue;
          case 54:
            aItem = "";
            num1 = (int) num3 * 109062290 ^ -115157725;
            continue;
          case 55:
            int num18 = ch1 <= ',' ? -1048770947 : (num18 = -810274033);
            num1 = num18 ^ (int) num3 * 1405215197;
            continue;
          case 56:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -1240340175 ^ 423976784;
            continue;
          case 57:
label_101:
            num1 = 1399080132;
            continue;
          case 58:
            aKey = aItem;
            num1 = 909743047;
            continue;
          case 59:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            num1 = 1083715063;
            continue;
          case 60:
            aItem = JSONNode.\u202B​⁪​‎⁫‬‌‫‪‬⁮‪⁭‪⁯⁬⁯‎⁯​⁪‍‮⁮‪‬‪⁫‎‮‪‭⁪⁬‬⁪‍‍‬‮(aItem, "\b");
            num1 = 442625985;
            continue;
          case 61:
            num1 = (int) num3 * 610076239 ^ -1084319786;
            continue;
          case 62:
            num2 += 4;
            num1 = (int) num3 * 1012675966 ^ -769990793;
            continue;
          case 63:
            num1 = 618275661;
            continue;
          case 64:
            ch4 = ch3;
            num1 = (int) num3 * 1274670976 ^ -319062172;
            continue;
          case 65:
            num1 = (int) num3 * -1841204296 ^ -982171571;
            continue;
          case 66:
            int num19;
            num1 = num19 = JSONNode.\u200B‮‭⁯⁬‏⁮⁪⁫‬⁪‭‏⁫‬‎⁯‭⁮⁬⁯⁯⁬‍‍‌⁯‏‬‬⁮⁫⁭‬​⁭‭‪‎‎‮(aKey, "") ? 1044262615 : (num19 = 1269400422);
            continue;
          case 67:
            goto label_136;
          case 68:
label_42:
            int num20;
            num1 = num20 = !flag2 ? 1752929221 : (num20 = 1860371618);
            continue;
          case 69:
            switch (ch4)
            {
              case 'r':
                goto label_77;
              case 's':
                goto label_70;
              case 't':
                goto label_87;
              case 'u':
                goto label_101;
              default:
                num1 = 1899892300;
                continue;
            }
          case 70:
            int num21;
            num1 = num21 = ch1 != ',' ? 2057031725 : (num21 = 769636896);
            continue;
          case 71:
            flag2 = false;
            num1 = (int) num3 * -1834139766 ^ 879813989;
            continue;
          case 72:
            int num22 = !flag10 ? -524263516 : (num22 = -1391212371);
            num1 = num22 ^ (int) num3 * -957870939;
            continue;
          case 73:
            int num23 = jsonNode1 is JSONArray ? 783559440 : (num23 = 1661886575);
            num1 = num23 ^ (int) num3 * 1361573754;
            continue;
          case 74:
            flag12 = flag2;
            num1 = 517147584;
            continue;
          case 75:
            int num24;
            num1 = num24 = !flag2 ? 1993142433 : (num24 = 245360688);
            continue;
          case 76:
            int num25;
            num1 = num25 = ch4 != 'n' ? 600200931 : (num25 = 1384888046);
            continue;
          case 77:
            num1 = 300258327;
            continue;
          case 78:
            flag1 = JSONNode.\u200B‮‭⁯⁬‏⁮⁪⁫‬⁪‭‏⁫‬‎⁯‭⁮⁬⁯⁯⁬‍‍‌⁯‏‬‬⁮⁫⁭‬​⁭‭‪‎‎‮(aKey, "");
            num1 = 797517704;
            continue;
          case 79:
            aItem = JSONNode.\u202B​⁪​‎⁫‬‌‫‪‬⁮‪⁭‪⁯⁬⁯‎⁯​⁪‍‮⁮‪‬‪⁫‎‮‪‭⁪⁬‬⁪‍‍‬‮(aItem, "\n");
            num1 = 442625985;
            continue;
          case 80:
            num1 = (int) num3 * 450339660 ^ 209608426;
            continue;
          case 81:
            flag10 = flag2;
            num1 = (int) num3 * 588449576 ^ 293846766;
            continue;
          case 82:
            s = JSONNode.\u200B‌‫⁫⁪‏⁮‮‍‫‏⁪⁮​⁮‫‮⁭‮‌‫‫‪‬‭‏‏​⁮‎‬⁫⁫⁫‎‬⁮‭‮⁬‮(aJSON, num2 + 1, 4);
            num1 = (int) num3 * -529341819 ^ -1608412558;
            continue;
          case 83:
            num1 = (int) num3 * 111474659 ^ -1850284327;
            continue;
          case 84:
            aItem = JSONNode.\u202B​⁪​‎⁫‬‌‫‪‬⁮‪⁭‪⁯⁬⁯‎⁯​⁪‍‮⁮‪‬‪⁫‎‮‪‭⁪⁬‬⁪‍‍‬‮(aItem, JSONNode.\u206F‎‪⁫‬⁭‬​‭​⁪‎‬​‫‬‬‍​‎‮‪⁯⁪‌‌‫⁬‬‍⁫​⁮‎​‮⁮‬‎⁯‮(aJSON, num2).ToString());
            num1 = (int) num3 * 1316708281 ^ 119558374;
            continue;
          case 85:
            ch1 = JSONNode.\u206F‎‪⁫‬⁭‬​‭​⁪‎‬​‫‬‬‍​‎‮‪⁯⁪‌‌‫⁬‬‍⁫​⁮‎​‮⁮‬‎⁯‮(aJSON, num2);
            num1 = 1916100501;
            continue;
          case 86:
            num1 = 952951329;
            continue;
          case 87:
            aKey = "";
            aItem = "";
            num1 = 1767426381;
            continue;
          case 88:
            aKey = "";
            aItem = "";
            num1 = 2067984257;
            continue;
          case 89:
            num1 = (int) num3 * -168110532 ^ 1326134524;
            continue;
          case 90:
            num1 = (int) num3 * -248449730 ^ -1362943701;
            continue;
          case 91:
            num1 = (int) num3 * 1566064214 ^ -1963549373;
            continue;
          case 92:
            int num26 = flag3 ? 429092256 : (num26 = 1077088445);
            num1 = num26 ^ (int) num3 * -702058082;
            continue;
          case 93:
            int num27 = !flag1 ? 747855668 : (num27 = 1193982681);
            num1 = num27 ^ (int) num3 * 1887866074;
            continue;
          case 95:
            num1 = (int) num3 * -736429102 ^ -1266053006;
            continue;
          case 96:
            goto label_1;
          case 97:
            int num28 = flag13 ? -1014728356 : (num28 = -1641263913);
            num1 = num28 ^ (int) num3 * 703754484;
            continue;
          case 98:
            int num29 = !flag9 ? -510010247 : (num29 = -884742111);
            num1 = num29 ^ (int) num3 * 973793846;
            continue;
          case 99:
            num1 = (int) num3 * -1886096989 ^ 2003682087;
            continue;
          case 100:
            num1 = (int) num3 * -1619326622 ^ -1000761633;
            continue;
          case 101:
            flag2 = !flag2;
            num1 = 1767426381;
            continue;
          case 102:
            int num30;
            num1 = num30 = ch1 != '"' ? 694490026 : (num30 = 2133071602);
            continue;
          case 103:
            aItem = JSONNode.\u202B​⁪​‎⁫‬‌‫‪‬⁮‪⁭‪⁯⁬⁯‎⁯​⁪‍‮⁮‪‬‪⁫‎‮‪‭⁪⁬‬⁪‍‍‬‮(aItem, JSONNode.\u206F‎‪⁫‬⁭‬​‭​⁪‎‬​‫‬‬‍​‎‮‪⁯⁪‌‌‫⁬‬‍⁫​⁮‎​‮⁮‬‎⁯‮(aJSON, num2).ToString());
            num1 = (int) num3 * -1958641534 ^ 178601799;
            continue;
          case 104:
            int num31;
            num1 = num31 = num2 >= JSONNode.\u206C⁪‮⁪‎⁯‮‍‏‭⁬⁮‫​‮‭‮⁬‭‍‏‪⁯‭⁯‪‪‬‎⁭⁮⁯‍‍‭⁭‏‏​‍‮(aJSON) ? 486007944 : (num31 = 993680281);
            continue;
          case 105:
            flag5 = jsonNode1 != (object) null;
            num1 = (int) num3 * -836322695 ^ 465759463;
            continue;
          case 106:
            num1 = (int) num3 * 660286851 ^ 978586698;
            continue;
          case 107:
            int num32 = ch4 != 'b' ? 478073283 : (num32 = 894376672);
            num1 = num32 ^ (int) num3 * 1700677721;
            continue;
          case 108:
label_70:
            aItem = JSONNode.\u202B​⁪​‎⁫‬‌‫‪‬⁮‪⁭‪⁯⁬⁯‎⁯​⁪‍‮⁮‪‬‪⁫‎‮‪‭⁪⁬‬⁪‍‍‬‮(aItem, ch2.ToString());
            num1 = 442625985;
            continue;
          case 109:
label_27:
            ++num2;
            flag6 = flag2;
            num1 = 1694432957;
            continue;
          case 111:
            num1 = (int) num3 * 1629518267 ^ 2017488460;
            continue;
          case 112:
            flag15 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -1711570579 ^ -1639764818;
            continue;
          case 113:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num3 * 2077739125 ^ 2128789272;
            continue;
          case 114:
            int num33 = !flag12 ? -352733142 : (num33 = -1870856580);
            num1 = num33 ^ (int) num3 * -1971187013;
            continue;
          case 115:
            switch (ch1)
            {
              case '[':
                goto label_42;
              case '\\':
                goto label_27;
              case ']':
                goto label_143;
              default:
                num1 = 1217015550;
                continue;
            }
          case 116:
            jsonNode2 = jsonNode1;
            num1 = 40185106;
            continue;
          case 117:
            aItem = JSONNode.\u202B​⁪​‎⁫‬‌‫‪‬⁮‪⁭‪⁯⁬⁯‎⁯​⁪‍‮⁮‪‬‪⁫‎‮‪‭⁪⁬‬⁪‍‍‬‮(aItem, JSONNode.\u206F‎‪⁫‬⁭‬​‭​⁪‎‬​‫‬‬‍​‎‮‪⁯⁪‌‌‫⁬‬‍⁫​⁮‎​‮⁮‬‎⁯‮(aJSON, num2).ToString());
            num1 = (int) num3 * -2020951539 ^ 678667861;
            continue;
          case 118:
            num1 = (int) num3 * 1257726300 ^ -862516279;
            continue;
          case 119:
            jsonNodeStack.Pop();
            num1 = 1240417396;
            continue;
          case 120:
            flag8 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -516650693 ^ -749725176;
            continue;
          case 121:
            int num34 = ch1 != ':' ? 1529020935 : (num34 = 1238953817);
            num1 = num34 ^ (int) num3 * -338296176;
            continue;
          case 122:
            num1 = (int) num3 * -692871962 ^ -1533971032;
            continue;
          case 123:
            flag11 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 1870815618 ^ -770952212;
            continue;
          case 124:
            goto label_47;
          case 125:
            int num35;
            num1 = num35 = ch1 > ']' ? 1026123136 : (num35 = 915225990);
            continue;
          case 126:
            num1 = (int) num3 * -961920626 ^ -2025368903;
            continue;
          case 128:
            aKey = "";
            num1 = 874193283;
            continue;
          case 129:
            num1 = (int) num3 * 826660148 ^ -2101505889;
            continue;
          case 130:
            ch2 = JSONNode.\u206F‎‪⁫‬⁭‬​‭​⁪‎‬​‫‬‬‍​‎‮‪⁯⁪‌‌‫⁬‬‍⁫​⁮‎​‮⁮‬‎⁯‮(aJSON, num2);
            num1 = (int) num3 * 816974908 ^ -894035231;
            continue;
          case 131:
            num1 = (int) num3 * -730196232 ^ -966700288;
            continue;
          case 132:
            num1 = (int) num3 * -803554244 ^ -1559040770;
            continue;
          case 133:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 416651216 ^ 1776881405;
            continue;
          case 134:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -81203372 ^ -375075745;
            continue;
          case 135:
            int num36;
            num1 = num36 = !JSONNode.\u200B‮‭⁯⁬‏⁮⁪⁫‬⁪‭‏⁫‬‎⁯‭⁮⁬⁯⁯⁬‍‍‌⁯‏‬‬⁮⁫⁭‬​⁭‭‪‎‎‮(aKey, "") ? 1242627803 : (num36 = 326000362);
            continue;
          case 136:
            aItem = JSONNode.\u202B​⁪​‎⁫‬‌‫‪‬⁮‪⁭‪⁯⁬⁯‎⁯​⁪‍‮⁮‪‬‪⁫‎‮‪‭⁪⁬‬⁪‍‍‬‮(aItem, JSONNode.\u206F‎‪⁫‬⁭‬​‭​⁪‎‬​‫‬‬‍​‎‮‪⁯⁪‌‌‫⁬‬‍⁫​⁮‎​‮⁮‬‎⁯‮(aJSON, num2).ToString());
            num1 = (int) num3 * -1618561349 ^ 417262118;
            continue;
          case 137:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -104176085 ^ -485237053;
            continue;
          case 138:
            num1 = (int) num3 * -2142705997 ^ 190369327;
            continue;
          case 139:
            aItem = JSONNode.\u202B​⁪​‎⁫‬‌‫‪‬⁮‪⁭‪⁯⁬⁯‎⁯​⁪‍‮⁮‪‬‪⁫‎‮‪‭⁪⁬‬⁪‍‍‬‮(aItem, ((char) int.Parse(s, NumberStyles.AllowHexSpecifier)).ToString());
            num1 = (int) num3 * -466805100 ^ 367816954;
            continue;
          case 140:
            num1 = 1272112071;
            continue;
          case 141:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num1 = 1889406123;
            continue;
          case 142:
            int num37;
            num1 = num37 = jsonNodeStack.Count != 0 ? 837524816 : (num37 = 1609878814);
            continue;
          case 143:
            int num38;
            num1 = num38 = ch1 == '{' ? 1949608566 : (num38 = 374769381);
            continue;
          case 144:
            aKey = "";
            num1 = (int) num3 * -1291419799 ^ 1912765901;
            continue;
          case 145:
            num1 = (int) num3 * 330971708 ^ 777423109;
            continue;
          case 146:
            num1 = (int) num3 * 57130121 ^ -1092379343;
            continue;
          case 147:
label_138:
            flag14 = flag2;
            num1 = 895966140;
            continue;
          case 148:
label_87:
            aItem = JSONNode.\u202B​⁪​‎⁫‬‌‫‪‬⁮‪⁭‪⁯⁬⁯‎⁯​⁪‍‮⁮‪‬‪⁫‎‮‪‭⁪⁬‬⁪‍‍‬‮(aItem, "\t");
            num1 = 293394945;
            continue;
          case 149:
            num1 = 2111040122;
            continue;
          case 150:
            int num39 = !flag14 ? 1511878283 : (num39 = 459794558);
            num1 = num39 ^ (int) num3 * 1926713377;
            continue;
          case 151:
            num1 = (int) num3 * -686195112 ^ -1274973811;
            continue;
          case 152:
            num1 = (int) num3 * -172844055 ^ -1404054267;
            continue;
          default:
            goto label_153;
        }
      }
label_47:
      throw JSONNode.\u206D‌⁬​‌‬⁯‎⁯‭​‎⁬‫⁬⁭⁬​‎‪⁬⁭⁪‪⁯⁬​⁪⁮‭⁪‏​⁭‮‌⁯⁫⁮‍‮("JSON Parse: Quotation marks seems to be messed up.");
label_136:
      throw JSONNode.\u206D‌⁬​‌‬⁯‎⁯‭​‎⁬‫⁬⁭⁬​‎‪⁬⁭⁪‪⁯⁬​⁪⁮‭⁪‏​⁭‮‌⁯⁫⁮‍‮("JSON Parse: Too many closing brackets");
label_153:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
label_1:
      int num1 = 1939725702;
      BinaryWriter aWriter;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1650072564)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            aWriter = JSONNode.\u206F​‮‪‫‍‫⁬‍‎⁪⁪⁮​‮‮⁫‌‎⁯⁫⁪‏‌‫⁬‭‌‌‍⁬⁪‮⁯⁫‫​‭‏‮‮(aData);
            num1 = (int) num2 * -2074693012 ^ -440212833;
            continue;
          case 3:
            this.Serialize(aWriter);
            num1 = (int) num2 * 1738584464 ^ 1560152577;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u206D‌⁬​‌‬⁯‎⁯‭​‎⁬‫⁬⁭⁬​‎‪⁬⁭⁪‪⁯⁬​⁪⁮‭⁪‏​⁭‮‌⁯⁫⁮‍‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u206D‌⁬​‌‬⁯‎⁯‭​‎⁬‫⁬⁭⁬​‎‪⁬⁭⁪‪⁯⁬​⁪⁮‭⁪‏​⁭‮‌⁯⁫⁮‍‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u206D‌⁬​‌‬⁯‎⁯‭​‎⁬‫⁬⁭⁬​‎‪⁬⁭⁪‪⁯⁬​⁪⁮‭⁪‏​⁭‮‌⁯⁫⁮‍‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
label_1:
      int num1 = 28243011;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1445519294)) % 3U)
        {
          case 1:
            JSONNode.\u206B⁪⁫‫‭‏⁯​⁬‪⁬⁭‮‫⁭⁪‪‏‍⁬‍‎⁫⁭‍⁫⁭⁫‫​‮‮‍‭‭‫​⁯⁪⁫‮(JSONNode.\u200C‮⁮‍⁮‭‮⁪‬‍‎⁭⁮‍‮‏‮‫⁪‮⁮‌⁯‫⁪‪‬‏⁭⁮⁭⁬​‬‫⁯‫⁬⁭⁮‮((FileSystemInfo) JSONNode.\u200C‮‌⁮‌⁫‌‏‮‫‏‍⁪⁭‪⁯‬‎⁮⁪‪‭⁭⁮‭‪‪⁪‮⁬⁮‪‫‏⁮⁯‌⁬‌⁭‮(JSONNode.\u206F⁬⁪‭‮‏‏‎‮‪⁪⁬⁪⁫⁬‏⁪⁪‬‏‏‫‪⁬‮‏⁬‭‎⁫⁫‏⁪⁯‍‎‭⁪‎‪‮(aFileName))));
            num1 = (int) num2 * 1161630281 ^ 2135086098;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      FileStream aData = JSONNode.\u200D⁬‌⁯⁮‍‪‪‭‎⁪‪‫‬⁫‭⁪⁮‍‬⁭‫‮‎‌⁭‌​⁯⁮‌‪‬‬‍⁫‏⁯⁭⁫‮(aFileName);
      try
      {
label_6:
        int num3 = 1394546074;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1445519294)) % 5U)
          {
            case 0:
              goto label_6;
            case 1:
              num3 = (int) num4 * 299650050 ^ -1436241009;
              continue;
            case 2:
              goto label_15;
            case 3:
              this.SaveToStream((Stream) aData);
              num3 = (int) num4 * 202315253 ^ 980293809;
              continue;
            case 4:
              num3 = (int) num4 * 1047081494 ^ 137470248;
              continue;
            default:
              goto label_11;
          }
        }
label_15:
        return;
label_11:;
      }
      finally
      {
        if (aData != null)
        {
label_13:
          int num5 = 1858132055;
          while (true)
          {
            uint num6;
            switch ((num6 = (uint) (num5 ^ 1445519294)) % 4U)
            {
              case 1:
                JSONNode.\u200D​⁬‫⁫‍⁮⁫⁮⁬⁮⁮‏⁭‬‭‌‍​‮‪‬⁭‬‭⁮​⁪⁫‪‫‮⁫⁯⁬‬⁫‌‫‌‮((IDisposable) aData);
                num5 = (int) num6 * -1946297013 ^ 1848638418;
                continue;
              case 2:
                goto label_13;
              case 3:
                num5 = (int) num6 * -1823093386 ^ 203548752;
                continue;
              default:
                goto label_18;
            }
          }
        }
label_18:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u200D‏⁯‪‫‪⁫‍‍‍‮‏⁬⁪⁮‎‌‫‪‫⁫‭⁭⁭‍​‬⁬⁫​‬‏‎‍‪‬‏‪‌‎‮();
      try
      {
        this.SaveToStream((Stream) aData);
label_2:
        int num1 = -1579262209;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -347885833)) % 3U)
          {
            case 0:
              goto label_2;
            case 2:
              JSONNode.\u202D⁬‏⁮‭‮‍⁯‮⁪⁬‪‌⁯⁬‬⁪⁭‎‏‍‪⁫‫‪‫⁭‎⁬⁫⁫⁫⁬⁮⁮‪‮‬‌‮((Stream) aData, 0L);
              num1 = (int) num2 * -1569338123 ^ -1396584871;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return JSONNode.\u200B​⁬‍‍‭‎‪‭‌​‏‭‎⁫‎‭​‎‍⁪‬‍‏⁪⁭⁮⁭‪​‎‪‫‫‎⁬‍⁬‪⁭‮(JSONNode.\u200C‭‍⁯‍​⁪‫⁬‍‏⁬‍⁯‪​‍​⁭‫⁮‭⁯​‮⁮‮‍⁭‮⁭⁮⁮‎​⁭‎‎‭⁫‮(aData));
      }
      finally
      {
        if (aData != null)
        {
label_7:
          int num3 = -82091473;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -347885833)) % 3U)
            {
              case 0:
                goto label_7;
              case 2:
                JSONNode.\u200D​⁬‫⁫‍⁮⁫⁮⁬⁮⁮‏⁭‬‭‌‍​‮‪‬⁭‬‭⁮​⁪⁫‪‫‮⁫⁯⁬‬⁫‌‫‌‮((IDisposable) aData);
                num3 = (int) num4 * -206704816 ^ -647089741;
                continue;
              default:
                goto label_10;
            }
          }
        }
label_10:;
      }
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
      JSONBinaryTag jsonBinaryTag1 = (JSONBinaryTag) JSONNode.\u200F‬‪⁮‬‮‌⁪‮‬‮⁭‏‬‍⁪‌‭‪⁭‌⁬⁪⁫‏⁮‌‭‌‍​‬‏⁫⁮⁭‫⁪‎⁯‮(aReader);
label_1:
      int num1 = -1810218234;
      string aKey;
      JSONClass jsonClass;
      int num2;
      int num3;
      int num4;
      bool flag1;
      JSONNode jsonNode;
      JSONBinaryTag jsonBinaryTag2;
      int num5;
      bool flag2;
      JSONArray jsonArray;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ -1645215544)) % 40U)
        {
          case 0:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * 2135252904 ^ -454166056;
            continue;
          case 1:
            flag2 = num2 < num5;
            num1 = -1917216973;
            continue;
          case 2:
            aKey = JSONNode.\u200E⁬‍‎‌‭‮‮‏⁪‬​‌‭⁬‫‎‫‬‫‍‭​⁯‪⁬‪⁭‏‎​⁭‌‪‭‍⁮⁬⁫‭‮(aReader);
            num1 = (int) num6 * -1282282161 ^ -1152783819;
            continue;
          case 3:
label_37:
            num1 = -469351409;
            continue;
          case 4:
label_6:
            num3 = JSONNode.\u200E‎‌‏⁬‎‮‭‏‬⁪‎‎⁫‬‭‍‏‏‌⁫⁯⁪‌⁯‮‮‪‫‬‏‭​⁫‮⁪‪‎‮‮‮(aReader);
            num1 = -2071969087;
            continue;
          case 5:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200E⁬‍‎‌‭‮‮‏⁪‬​‌‭⁬‫‎‫‬‫‍‭​⁯‪⁬‪⁭‏‎​⁭‌‪‭‍⁮⁬⁫‭‮(aReader));
            num1 = (int) num6 * 1498362600 ^ 1437416272;
            continue;
          case 6:
            jsonBinaryTag2 = jsonBinaryTag1;
            num1 = (int) num6 * 1383431783 ^ -247661834;
            continue;
          case 7:
            num1 = (int) num6 * 1763411766 ^ -1677197854;
            continue;
          case 8:
label_34:
            num1 = -1980262740;
            continue;
          case 9:
            goto label_31;
          case 10:
            int num7 = !flag1 ? -808044030 : (num7 = -622004908);
            num1 = num7 ^ (int) num6 * -1185111507;
            continue;
          case 11:
            int num8 = !flag2 ? 2025250247 : (num8 = 641076369);
            num1 = num8 ^ (int) num6 * -410185856;
            continue;
          case 12:
            num5 = JSONNode.\u200E‎‌‏⁬‎‮‭‏‬⁪‎‎⁫‬‭‍‏‏‌⁫⁯⁪‌⁯‮‮‪‫‬‏‭​⁫‮⁪‪‎‮‮‮(aReader);
            jsonArray = new JSONArray();
            num1 = (int) num6 * 979296659 ^ -1258922768;
            continue;
          case 13:
            ++num2;
            num1 = (int) num6 * -1820063827 ^ -47712608;
            continue;
          case 14:
            flag1 = num4 < num3;
            num1 = -1385755518;
            continue;
          case 15:
            goto label_1;
          case 16:
            num1 = (int) num6 * 1299991147 ^ 351660337;
            continue;
          case 17:
            jsonClass = new JSONClass();
            num1 = (int) num6 * -985189135 ^ 1522945023;
            continue;
          case 18:
label_33:
            num1 = -1280509301;
            continue;
          case 19:
            JSONNode aItem = JSONNode.Deserialize(aReader);
            jsonClass.Add(aKey, aItem);
            num1 = (int) num6 * -367947599 ^ -1418413049;
            continue;
          case 20:
            ++num4;
            num1 = (int) num6 * -1886481805 ^ 1831131882;
            continue;
          case 21:
            num1 = (int) num6 * 432054948 ^ 876060300;
            continue;
          case 22:
            num4 = 0;
            num1 = (int) num6 * -334154299 ^ -340912954;
            continue;
          case 23:
label_20:
            num1 = -1949740293;
            continue;
          case 25:
            num1 = -99362975;
            continue;
          case 26:
            num1 = (int) num6 * -579989870 ^ 1737489324;
            continue;
          case 27:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206E⁭‏‌⁯‭‪‌‫‏⁪⁪⁫⁪⁪​⁮⁯‬‬‌⁬‎​‭⁫‍⁯⁮⁬‌⁫‮‮‌⁮⁬⁯‭⁫‮(aReader));
            num1 = (int) num6 * -1604812940 ^ 615535443;
            continue;
          case 28:
            switch (jsonBinaryTag2)
            {
              case JSONBinaryTag.Array:
                goto label_34;
              case JSONBinaryTag.Class:
                goto label_6;
              case JSONBinaryTag.Value:
                goto label_36;
              case JSONBinaryTag.IntValue:
                goto label_33;
              case JSONBinaryTag.DoubleValue:
                goto label_20;
              case JSONBinaryTag.BoolValue:
                goto label_14;
              case JSONBinaryTag.FloatValue:
                goto label_37;
              default:
                num1 = (int) num6 * 87450870 ^ 1248374016;
                continue;
            }
          case 29:
label_36:
            num1 = -1999526587;
            continue;
          case 30:
            num1 = -924308710;
            continue;
          case 31:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * 1837275147 ^ 961748240;
            continue;
          case 32:
            num1 = (int) num6 * 1633079421 ^ -1054953754;
            continue;
          case 33:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            num1 = -1953932710;
            continue;
          case 34:
            num1 = (int) num6 * 1725812100 ^ -960302211;
            continue;
          case 35:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200E‎‌‏⁬‎‮‭‏‬⁪‎‎⁫‬‭‍‏‏‌⁫⁯⁪‌⁯‮‮‪‫‬‏‭​⁫‮⁪‪‎‮‮‮(aReader));
            num1 = (int) num6 * -159536318 ^ 572648670;
            continue;
          case 36:
            num2 = 0;
            num1 = (int) num6 * 1218492347 ^ 751142661;
            continue;
          case 37:
            num1 = (int) num6 * -1034118658 ^ -487358338;
            continue;
          case 38:
label_14:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200C​⁮⁮‮‭⁮‪‌‭‎‮⁯‍‮⁫⁮⁬‫​⁫⁪‭⁭‪​‍‬‌⁯‬‭‮⁮​⁭⁮⁪⁬‬‮(aReader));
            num1 = -333569790;
            continue;
          case 39:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206B‭‌‌⁯‬‭‎⁫‍⁫‌‌‮⁪‫⁮‏⁪⁯⁯⁫⁪⁯⁯​⁭‌‬‫‫‎⁮‬⁪⁪‭⁪‬‬‮(aReader));
            num1 = (int) num6 * 124120207 ^ 1215925356;
            continue;
          default:
            goto label_42;
        }
      }
label_31:
      throw JSONNode.\u206D‌⁬​‌‬⁯‎⁯‭​‎⁬‫⁬⁭⁬​‎‪⁬⁭⁪‪⁯⁬​⁪⁮‭⁪‏​⁭‮‌⁯⁫⁮‍‮(JSONNode.\u202B​⁪​‎⁫‬‌‫‪‬⁮‪⁭‪⁯⁬⁯‎⁯​⁪‍‮⁮‪‬‪⁫‎‮‪‭⁪⁬‬⁪‍‍‬‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag1.ToString()));
label_42:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u206D‌⁬​‌‬⁯‎⁯‭​‎⁬‫⁬⁭⁬​‎‪⁬⁭⁪‪⁯⁬​⁪⁮‭⁪‏​⁭‮‌⁯⁫⁮‍‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u206D‌⁬​‌‬⁯‎⁯‭​‎⁬‫⁬⁭⁬​‎‪⁬⁭⁪‪⁯⁬​⁪⁮‭⁪‏​⁭‮‌⁯⁫⁮‍‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u206D‌⁬​‌‬⁯‎⁯‭​‎⁬‫⁬⁭⁬​‎‪⁬⁭⁪‪⁯⁬​⁪⁮‭⁪‏​⁭‮‌⁯⁫⁮‍‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u202D⁪⁯‭‮‫‪‭‬‮⁭‏⁪⁮‬‭⁮‭‫‮‏​‮‮⁬⁭‪⁪‬‏⁮‌⁫‮⁬‎‎‮⁮⁫‮(aData);
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = -1892652069;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -398348853)) % 3U)
          {
            case 1:
              jsonNode = JSONNode.Deserialize(aReader);
              num1 = (int) num2 * -2012654644 ^ 1965065172;
              continue;
            case 2:
              goto label_2;
            default:
              goto label_10;
          }
        }
      }
      finally
      {
        if (aReader != null)
        {
label_6:
          int num3 = -1894788613;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -398348853)) % 3U)
            {
              case 0:
                goto label_6;
              case 2:
                JSONNode.\u200D​⁬‫⁫‍⁮⁫⁮⁬⁮⁮‏⁭‬‭‌‍​‮‪‬⁭‬‭⁮​⁪⁫‪‫‮⁫⁯⁬‬⁫‌‫‌‮((IDisposable) aReader);
                num3 = (int) num4 * -1461399546 ^ -908543583;
                continue;
              default:
                goto label_9;
            }
          }
        }
label_9:;
      }
label_10:
      return jsonNode;
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u200B​⁪‎‮​‏⁯⁪‪‪⁫⁭‏⁮⁯⁪‫‪⁭⁬⁮‌⁫‭⁬⁮‌‍‭‎⁮⁫‏‭⁪‏‬‬‏‮(aFileName);
      try
      {
        return JSONNode.LoadFromStream((Stream) aData);
      }
      finally
      {
        if (aData != null)
        {
label_3:
          int num1 = -216830098;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ -602225179)) % 4U)
            {
              case 0:
                goto label_3;
              case 1:
                num1 = (int) num2 * -2001062773 ^ 865287684;
                continue;
              case 3:
                JSONNode.\u200D​⁬‫⁫‍⁮⁫⁮⁬⁮⁮‏⁭‬‭‌‍​‮‪‬⁭‬‭⁮​⁪⁫‪‫‮⁫⁯⁬‬⁫‌‫‌‮((IDisposable) aData);
                num1 = (int) num2 * -969016135 ^ 1540018043;
                continue;
              default:
                goto label_7;
            }
          }
        }
label_7:;
      }
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
      MemoryStream aData = JSONNode.\u202E⁮⁭‌‮​‍⁯‍‭‏‍‮‪⁫‎‫‍⁭‌‮‌⁮‏⁯‮‏⁫‏​‌⁯‪⁮‏‭‪‮⁭⁭‮(JSONNode.\u206A‌⁯‌‮⁪‪⁪‎‮‎‏‭​⁯⁯‮⁪‫‬‎‭‭‬‭​⁫‍⁯‫⁯‍‬‌‎‎⁮‮⁬‍‮(aBase64));
label_1:
      int num1 = -209435701;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -212777574)) % 4U)
        {
          case 1:
            JSONNode.\u202D⁬‏⁮‭‮‍⁯‮⁪⁬‪‌⁯⁬‬⁪⁭‎‏‍‪⁫‫‪‫⁭‎⁬⁫⁫⁫⁬⁮⁮‪‮‬‌‮((Stream) aData, 0L);
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * -1246704619 ^ -480804755;
            continue;
          case 2:
            num1 = (int) num2 * 602248929 ^ 1012605744;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public JSONNode()
    {
label_1:
      int num1 = -1755126748;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -163458554)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * -1697892742 ^ -1779062564;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static CultureInfo \u202B‮‌‫‭‍⁪‪⁮⁭‏⁮‬‮‍‎⁬​⁫‬‭​​⁭‭⁯‍⁬‍‪‍⁮⁮‌⁪⁫‭‭‌⁬‮() => CultureInfo.InvariantCulture;

    static bool \u202E‫‌​​‭⁫⁯⁫‌⁪​‏⁬‍⁮⁯‍‌‍‮‎‎‪⁯​⁮‏‎‫‬‎⁫‬‫⁫‮⁯⁪⁫‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u200E⁭‭‍‎‭‬‭‭‌⁫⁭‎⁬‫​⁪‫⁭‏‏‬‎​‭‫⁯‭‎⁫‏⁮⁭⁫⁫‮‌​⁮‮() => base.GetHashCode();

    static char \u206F‎‪⁫‬⁭‬​‭​⁪‎‬​‫‬‬‍​‎‮‪⁯⁪‌‌‫⁬‬‍⁫​⁮‎​‮⁮‬‎⁯‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u202B​⁪​‎⁫‬‌‫‪‬⁮‪⁭‪⁯⁬⁯‎⁯​⁪‍‮⁮‪‬‪⁫‎‮‪‭⁪⁬‬⁪‍‍‬‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u206C⁪‮⁪‎⁯‮‍‏‭⁬⁮‫​‮‭‮⁬‭‍‏‪⁯‭⁯‪‪‬‎⁭⁮⁯‍‍‭⁭‏‏​‍‮([In] string obj0) => obj0.Length;

    static string \u202D⁬‫‭‬‍‭‪‬‏‏⁬‮‏‎‭⁬⁭⁭‎⁫⁪⁮⁬⁪⁪⁫‎⁫⁫‫‪‪‭‭‌⁬‬‪⁬‮([In] string obj0) => obj0.Trim();

    static bool \u200B‮‭⁯⁬‏⁮⁪⁫‬⁪‭‏⁫‬‎⁯‭⁮⁬⁯⁯⁬‍‍‌⁯‏‬‬⁮⁫⁭‬​⁭‭‪‎‎‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u206D‌⁬​‌‬⁯‎⁯‭​‎⁬‫⁬⁭⁬​‎‪⁬⁭⁪‪⁯⁬​⁪⁮‭⁪‏​⁭‮‌⁯⁫⁮‍‮([In] string obj0) => new Exception(obj0);

    static string \u200B‌‫⁫⁪‏⁮‮‍‫‏⁪⁮​⁮‫‮⁭‮‌‫‫‪‬‭‏‏​⁮‎‬⁫⁫⁫‎‬⁮‭‮⁬‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u206F​‮‪‫‍‫⁬‍‎⁪⁪⁮​‮‮⁫‌‎⁯⁫⁪‏‌‫⁬‭‌‌‍⁬⁪‮⁯⁫‫​‭‏‮‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u206F⁬⁪‭‮‏‏‎‮‪⁪⁬⁪⁫⁬‏⁪⁪‬‏‏‫‪⁬‮‏⁬‭‎⁫⁫‏⁪⁯‍‎‭⁪‎‪‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u200C‮‌⁮‌⁫‌‏‮‫‏‍⁪⁭‪⁯‬‎⁮⁪‪‭⁭⁮‭‪‪⁪‮⁬⁮‪‫‏⁮⁯‌⁬‌⁭‮([In] FileInfo obj0) => obj0.Directory;

    static string \u200C‮⁮‍⁮‭‮⁪‬‍‎⁭⁮‍‮‏‮‫⁪‮⁮‌⁯‫⁪‪‬‏⁭⁮⁭⁬​‬‫⁯‫⁬⁭⁮‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u206B⁪⁫‫‭‏⁯​⁬‪⁬⁭‮‫⁭⁪‪‏‍⁬‍‎⁫⁭‍⁫⁭⁫‫​‮‮‍‭‭‫​⁯⁪⁫‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u200D⁬‌⁯⁮‍‪‪‭‎⁪‪‫‬⁫‭⁪⁮‍‬⁭‫‮‎‌⁭‌​⁯⁮‌‪‬‬‍⁫‏⁯⁭⁫‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u200D​⁬‫⁫‍⁮⁫⁮⁬⁮⁮‏⁭‬‭‌‍​‮‪‬⁭‬‭⁮​⁪⁫‪‫‮⁫⁯⁬‬⁫‌‫‌‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u200D‏⁯‪‫‪⁫‍‍‍‮‏⁬⁪⁮‎‌‫‪‫⁫‭⁭⁭‍​‬⁬⁫​‬‏‎‍‪‬‏‪‌‎‮() => new MemoryStream();

    static void \u202D⁬‏⁮‭‮‍⁯‮⁪⁬‪‌⁯⁬‬⁪⁭‎‏‍‪⁫‫‪‫⁭‎⁬⁫⁫⁫⁬⁮⁮‪‮‬‌‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u200C‭‍⁯‍​⁪‫⁬‍‏⁬‍⁯‪​‍​⁭‫⁮‭⁯​‮⁮‮‍⁭‮⁭⁮⁮‎​⁭‎‎‭⁫‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u200B​⁬‍‍‭‎‪‭‌​‏‭‎⁫‎‭​‎‍⁪‬‍‏⁪⁭⁮⁭‪​‎‪‫‫‎⁬‍⁬‪⁭‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u200F‬‪⁮‬‮‌⁪‮‬‮⁭‏‬‍⁪‌‭‪⁭‌⁬⁪⁫‏⁮‌‭‌‍​‬‏⁫⁮⁭‫⁪‎⁯‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u200E‎‌‏⁬‎‮‭‏‬⁪‎‎⁫‬‭‍‏‏‌⁫⁯⁪‌⁯‮‮‪‫‬‏‭​⁫‮⁪‪‎‮‮‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u200E⁬‍‎‌‭‮‮‏⁪‬​‌‭⁬‫‎‫‬‫‍‭​⁯‪⁬‪⁭‏‎​⁭‌‪‭‍⁮⁬⁫‭‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u206E⁭‏‌⁯‭‪‌‫‏⁪⁪⁫⁪⁪​⁮⁯‬‬‌⁬‎​‭⁫‍⁯⁮⁬‌⁫‮‮‌⁮⁬⁯‭⁫‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u200C​⁮⁮‮‭⁮‪‌‭‎‮⁯‍‮⁫⁮⁬‫​⁫⁪‭⁭‪​‍‬‌⁯‬‭‮⁮​⁭⁮⁪⁬‬‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u206B‭‌‌⁯‬‭‎⁫‍⁫‌‌‮⁪‫⁮‏⁪⁯⁯⁫⁪⁯⁯​⁭‌‬‫‫‎⁮‬⁪⁪‭⁪‬‬‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u202D⁪⁯‭‮‫‪‭‬‮⁭‏⁪⁮‬‭⁮‭‫‮‏​‮‮⁬⁭‪⁪‬‏⁮‌⁫‮⁬‎‎‮⁮⁫‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u200B​⁪‎‮​‏⁯⁪‪‪⁫⁭‏⁮⁯⁪‫‪⁭⁬⁮‌⁫‭⁬⁮‌‍‭‎⁮⁫‏‭⁪‏‬‬‏‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u206A‌⁯‌‮⁪‪⁪‎‮‎‏‭​⁯⁯‮⁪‫‬‎‭‭‬‭​⁫‍⁯‫⁯‍‬‌‎‎⁮‮⁬‍‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u202E⁮⁭‌‮​‍⁯‍‭‏‍‮‪⁫‎‫‍⁭‌‮‌⁮‏⁯‮‏⁫‏​‌⁯‪⁮‏‭‪‮⁭⁭‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
