// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONArray
// Assembly: Eviden, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 0FBAEA8D-82D6-42CE-BC01-F979DED3F8E4
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-25002a8f723189cf80ad649d7af9ccf8c389291bb64e2eed7665e7a21823634b.exe

using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONArray : JSONNode, IEnumerable
  {
    private List<JSONNode> m_List = new List<JSONNode>();

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 1027831996;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          int num3;
          switch ((num2 = (uint) (num1 ^ 1553371483)) % 7U)
          {
            case 0:
              jsonNode = this.m_List[aIndex];
              num1 = 1201877748;
              continue;
            case 2:
              num1 = (int) num2 * 1183937955 ^ 1005344814;
              continue;
            case 3:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            case 4:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * -1340564690 ^ 1388257577;
              continue;
            case 5:
              goto label_1;
            case 6:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * 988313132 ^ -1853082879;
                continue;
              }
              num3 = 1;
              break;
            default:
              goto label_11;
          }
          int num4;
          num1 = num4 = num3 == 0 ? 453276193 : (num4 = 413145217);
        }
label_11:
        return jsonNode;
      }
      set
      {
        if (aIndex < 0)
          goto label_7;
label_1:
        int num1 = -755477836;
label_2:
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -301477829)) % 7U)
          {
            case 0:
              goto label_3;
            case 1:
              goto label_6;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * 1317827053 ^ 1714623950;
              continue;
            case 4:
              this.m_List[aIndex] = value;
              num1 = -699667887;
              continue;
            case 5:
              int num3 = flag ? 893076778 : (num3 = 1670783671);
              num1 = num3 ^ (int) num2 * -1489108002;
              continue;
            case 6:
              this.m_List.Add(value);
              num1 = (int) num2 * -703465177 ^ 1098001693;
              continue;
            default:
              goto label_11;
          }
        }
label_3:
        return;
label_11:
        return;
label_6:
        int num4 = aIndex >= this.m_List.Count ? 1 : 0;
        goto label_8;
label_7:
        num4 = 1;
label_8:
        flag = num4 != 0;
        num1 = -612625168;
        goto label_2;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
label_1:
        int num1 = -867484109;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1880335040)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -154390164 ^ -1910814655;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = -1819078241;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1603870254)) % 4U)
          {
            case 0:
              goto label_3;
            case 1:
              this.m_List.Add(value);
              num1 = (int) num2 * 1609177715 ^ 34130858;
              continue;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * 992038274 ^ 586311820;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = 1433095824;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 531607197)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              count = this.m_List.Count;
              num1 = (int) num2 * 1267016460 ^ -1735784661;
              continue;
            case 2:
              num1 = (int) num2 * -760743066 ^ -580778350;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = 996730539;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 513115130)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -690353331 ^ 2039745020;
            continue;
          case 1:
            this.m_List.Add(aItem);
            num1 = (int) num2 * -968406237 ^ 221561997;
            continue;
          case 2:
            goto label_3;
          case 3:
            goto label_1;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = -292947863;
      JSONNode jsonNode1;
      while (true)
      {
        uint num2;
        bool flag;
        int num3;
        switch ((num2 = (uint) (num1 ^ -1887656037)) % 8U)
        {
          case 0:
            num1 = (int) num2 * 408220504 ^ 647988006;
            continue;
          case 1:
            num3 = aIndex >= this.m_List.Count ? 1 : 0;
            break;
          case 2:
            if (aIndex >= 0)
            {
              num1 = (int) num2 * -1644122033 ^ -1780458300;
              continue;
            }
            num3 = 1;
            break;
          case 3:
            goto label_1;
          case 4:
            JSONNode jsonNode2 = this.m_List[aIndex];
            this.m_List.RemoveAt(aIndex);
            jsonNode1 = jsonNode2;
            num1 = -1554750682;
            continue;
          case 6:
            int num4 = !flag ? -87719437 : (num4 = -130697504);
            num1 = num4 ^ (int) num2 * 1394729242;
            continue;
          case 7:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num2 * -1783781020 ^ -481316505;
            continue;
          default:
            goto label_12;
        }
        flag = num3 != 0;
        num1 = -2105825739;
      }
label_12:
      return jsonNode1;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = 1669327290;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1778797476)) % 3U)
        {
          case 1:
            this.m_List.Remove(aNode);
            jsonNode = aNode;
            num1 = (int) num2 * -323325874 ^ -1972397913;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONArray.\u003Cget_Childs\u003Ed__13 childs = new JSONArray.\u003Cget_Childs\u003Ed__13(-2);
label_1:
        int num1 = 1058423829;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 19640319)) % 3U)
          {
            case 1:
              childs.\u003C\u003E4__this = this;
              num1 = (int) num2 * 70723001 ^ 509300049;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return (IEnumerable<JSONNode>) childs;
      }
    }

    public IEnumerator GetEnumerator()
    {
      bool enumerator1;
      // ISSUE: fault handler
      try
      {
        // ISSUE: reference to a compiler-generated field
        int num1 = this.\u003C\u003E1__state;
label_1:
        int num2 = 1907199799;
        List<JSONNode>.Enumerator enumerator;
        JSONNode N;
        while (true)
        {
          uint num3;
          switch ((num3 = (uint) (num2 ^ 759511616)) % 19U)
          {
            case 0:
              N = enumerator.Current;
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E2__current = (object) N;
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = 1;
              num2 = 1428776128;
              continue;
            case 1:
            case 16:
              goto label_18;
            case 2:
              enumerator1 = false;
              num2 = 948079559;
              continue;
            case 3:
            case 7:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -1;
              num2 = 1212695582;
              continue;
            case 5:
              enumerator = this.m_List.GetEnumerator();
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = (int) num3 * -439600798 ^ 320864329;
              continue;
            case 6:
              num2 = (int) num3 * 2024768638 ^ 345750837;
              continue;
            case 8:
            case 15:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              N = (JSONNode) null;
              num2 = 1779781045;
              continue;
            case 9:
              int num4;
              num2 = num4 = enumerator.MoveNext() ? 1259244698 : (num4 = 1537424501);
              continue;
            case 10:
              num2 = (int) num3 * -1398226822 ^ -447449599;
              continue;
            case 11:
              int num5;
              num2 = num5 = num1 != 1 ? 1699014658 : (num5 = 58234495);
              continue;
            case 12:
              // ISSUE: reference to a compiler-generated method
              this.\u003C\u003Em__Finally1();
              num2 = (int) num3 * -1088901032 ^ 387497872;
              continue;
            case 13:
              goto label_1;
            case 14:
              num2 = (int) num3 * -1878453225 ^ 2080140171;
              continue;
            case 17:
              enumerator1 = true;
              num2 = (int) num3 * 1526418393 ^ 1687187144;
              continue;
            case 18:
              int num6 = num1 == 0 ? -449821347 : (num6 = -2089914498);
              num2 = num6 ^ (int) num3 * 1907964718;
              continue;
            default:
              goto label_16;
          }
        }
label_16:
        enumerator = new List<JSONNode>.Enumerator();
        enumerator1 = false;
      }
      __fault
      {
        // ISSUE: reference to a compiler-generated method
        this.System\u002EIDisposable\u002EDispose();
      }
label_18:
      return enumerator1;
    }

    public override string ToString()
    {
      string str1 = "[ ";
label_1:
      int num1 = -382838064;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -274614115)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * 1454785101 ^ 1215429460;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_14:
        int num3 = enumerator.MoveNext() ? -458043136 : (num3 = -1227753702);
        bool flag;
        JSONNode current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -274614115)) % 10U)
          {
            case 0:
              flag = JSONArray.\u206C⁭‎‍‏⁭‏‏‏‏‪‏⁯⁫‭‮⁯⁪⁯⁬‪⁫‫‎‫‍‬⁪⁬⁮⁪⁪⁫⁫‍⁬‍‪⁮⁫‮(str1) > 2;
              num3 = (int) num4 * -921597250 ^ -272026477;
              continue;
            case 1:
              str1 = JSONArray.\u200F‫⁮⁮‍⁮‬⁫‎‪‬‮‎‪‎⁯​‍‌⁫‪‬‎​‏‏⁪‏​⁭‫​‬‪⁪‫⁫‪⁯⁪‮(str1, ", ");
              num3 = (int) num4 * 1484289567 ^ -2102660565;
              continue;
            case 2:
              goto label_14;
            case 3:
              num3 = -458043136;
              continue;
            case 4:
              int num5 = flag ? -1568470970 : (num5 = -863936658);
              num3 = num5 ^ (int) num4 * -790485014;
              continue;
            case 6:
              num3 = (int) num4 * 1966501714 ^ -2134227061;
              continue;
            case 7:
              current = enumerator.Current;
              num3 = -1373172515;
              continue;
            case 8:
              num3 = (int) num4 * 137201263 ^ 2114190323;
              continue;
            case 9:
              str1 = JSONArray.\u200F‫⁮⁮‍⁮‬⁫‎‪‬‮‎‪‎⁯​‍‌⁫‪‬‎​‏‏⁪‏​⁭‫​‬‪⁪‫⁫‪⁯⁪‮(str1, JSONArray.\u206C​⁮‬‭⁭‮⁭​‭⁪‎‮‏‭‏⁮‍‫⁯‮⁬‮‎​⁪‏⁯‮⁮⁮⁬‫⁬⁯⁫‬‮⁫‎‮((object) current));
              num3 = -1960504049;
              continue;
            default:
              goto label_17;
          }
        }
      }
label_17:
      string str2 = JSONArray.\u200F‫⁮⁮‍⁮‬⁫‎‪‬‮‎‪‎⁯​‍‌⁫‪‬‎​‏‏⁪‏​⁭‫​‬‪⁪‫⁫‪⁯⁪‮(str1, " ]");
label_18:
      int num6 = -2014249325;
      string str3;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ -274614115)) % 4U)
        {
          case 1:
            num6 = (int) num7 * -1572427041 ^ -1142489458;
            continue;
          case 2:
            str3 = str2;
            num6 = (int) num7 * -1266090661 ^ -1735618190;
            continue;
          case 3:
            goto label_18;
          default:
            goto label_22;
        }
      }
label_22:
      return str3;
    }

    public override string ToString(string aPrefix)
    {
      string str1 = "[ ";
      List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator();
      try
      {
label_7:
        int num1 = enumerator.MoveNext() ? -2124503286 : (num1 = -813814978);
        JSONNode current;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1133153471)) % 9U)
          {
            case 0:
              str1 = JSONArray.\u200F‫⁮⁮‍⁮‬⁫‎‪‬‮‎‪‎⁯​‍‌⁫‪‬‎​‏‏⁪‏​⁭‫​‬‪⁪‫⁫‪⁯⁪‮(str1, current.ToString(JSONArray.\u200F‫⁮⁮‍⁮‬⁫‎‪‬‮‎‪‎⁯​‍‌⁫‪‬‎​‏‏⁪‏​⁭‫​‬‪⁪‫⁫‪⁯⁪‮(aPrefix, "   ")));
              num1 = (int) num2 * -1489814420 ^ -1656462776;
              continue;
            case 1:
              str1 = JSONArray.\u206D‎⁪‬​‪⁪‏⁪⁬⁭‫⁬‎‭​‪‮‪⁭‪⁯‎‍‫‪‮​⁮‍⁯‭‮⁯⁪‏‮‏‬⁭‮(str1, "\n", aPrefix, "   ");
              num1 = -3505537;
              continue;
            case 2:
              int num3 = JSONArray.\u206C⁭‎‍‏⁭‏‏‏‏‪‏⁯⁫‭‮⁯⁪⁯⁬‪⁫‫‎‫‍‬⁪⁬⁮⁪⁪⁫⁫‍⁬‍‪⁮⁫‮(str1) > 3 ? 459839398 : (num3 = 932504067);
              num1 = num3 ^ (int) num2 * 1107378839;
              continue;
            case 3:
              str1 = JSONArray.\u200F‫⁮⁮‍⁮‬⁫‎‪‬‮‎‪‎⁯​‍‌⁫‪‬‎​‏‏⁪‏​⁭‫​‬‪⁪‫⁫‪⁯⁪‮(str1, ", ");
              num1 = (int) num2 * 1495496871 ^ 483848104;
              continue;
            case 4:
              num1 = (int) num2 * 1882957837 ^ -17745199;
              continue;
            case 6:
              goto label_7;
            case 7:
              current = enumerator.Current;
              num1 = -1210364870;
              continue;
            case 8:
              num1 = -2124503286;
              continue;
            default:
              goto label_16;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_12:
        int num4 = -295593802;
        while (true)
        {
          uint num5;
          switch ((num5 = (uint) (num4 ^ -1133153471)) % 3U)
          {
            case 0:
              goto label_12;
            case 2:
              num4 = (int) num5 * -330019293 ^ 393014177;
              continue;
            default:
              goto label_15;
          }
        }
label_15:;
      }
label_16:
      string str2 = JSONArray.\u206D‎⁪‬​‪⁪‏⁪⁬⁭‫⁬‎‭​‪‮‪⁭‪⁯‎‍‫‪‮​⁮‍⁯‭‮⁯⁪‏‮‏‬⁭‮(str1, "\n", aPrefix, "]");
label_17:
      int num6 = -1824194480;
      string str3;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ -1133153471)) % 4U)
        {
          case 0:
            goto label_17;
          case 1:
            str3 = str2;
            num6 = (int) num7 * 1838540576 ^ 813269294;
            continue;
          case 3:
            num6 = (int) num7 * 1104958981 ^ 2066584932;
            continue;
          default:
            goto label_21;
        }
      }
label_21:
      return str3;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = -258545865;
      int index;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1139426553)) % 11U)
        {
          case 0:
            flag = index < this.m_List.Count;
            num1 = -1160692543;
            continue;
          case 1:
            num1 = (int) num2 * -208682732 ^ 1832554904;
            continue;
          case 2:
            JSONArray.\u206F⁬‫‪‎‍⁫​​‭‍⁫‪‪‪‌⁪‫‮​‎⁭‎⁫‎⁬‎‬⁮⁫‌‫‫‪⁪⁪‫‎⁭‏‮(aWriter, (byte) 1);
            JSONArray.\u206B‌‭‍⁪‪⁮‪‭‍⁫⁬⁯⁪‭‬‍‭⁯‫⁭‍⁭‪‏‍‌‎​‎⁮⁬⁪⁭⁯‌⁭⁫‭‌‮(aWriter, this.m_List.Count);
            num1 = (int) num2 * 807459847 ^ 1728322105;
            continue;
          case 3:
            this.m_List[index].Serialize(aWriter);
            num1 = -980317230;
            continue;
          case 4:
            goto label_1;
          case 5:
            num1 = (int) num2 * 2028291381 ^ -2134928504;
            continue;
          case 6:
            index = 0;
            num1 = (int) num2 * 1273626219 ^ 1909050105;
            continue;
          case 7:
            ++index;
            num1 = (int) num2 * -1731712004 ^ -1897249619;
            continue;
          case 8:
            num1 = (int) num2 * 1121042755 ^ -1699120443;
            continue;
          case 9:
            goto label_3;
          case 10:
            int num3 = !flag ? 1192438599 : (num3 = 1897566048);
            num1 = num3 ^ (int) num2 * -117145450;
            continue;
          default:
            goto label_13;
        }
      }
label_3:
      return;
label_13:;
    }

    static int \u206C⁭‎‍‏⁭‏‏‏‏‪‏⁯⁫‭‮⁯⁪⁯⁬‪⁫‫‎‫‍‬⁪⁬⁮⁪⁪⁫⁫‍⁬‍‪⁮⁫‮([In] string obj0) => obj0.Length;

    static string \u200F‫⁮⁮‍⁮‬⁫‎‪‬‮‎‪‎⁯​‍‌⁫‪‬‎​‏‏⁪‏​⁭‫​‬‪⁪‫⁫‪⁯⁪‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u206C​⁮‬‭⁭‮⁭​‭⁪‎‮‏‭‏⁮‍‫⁯‮⁬‮‎​⁪‏⁯‮⁮⁮⁬‫⁬⁯⁫‬‮⁫‎‮([In] object obj0) => obj0.ToString();

    static string \u206D‎⁪‬​‪⁪‏⁪⁬⁭‫⁬‎‭​‪‮‪⁭‪⁯‎‍‫‪‮​⁮‍⁯‭‮⁯⁪‏‮‏‬⁭‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u206F⁬‫‪‎‍⁫​​‭‍⁫‪‪‪‌⁪‫‮​‎⁭‎⁫‎⁬‎‬⁮⁫‌‫‫‪⁪⁪‫‎⁭‏‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u206B‌‭‍⁪‪⁮‪‭‍⁫⁬⁯⁪‭‬‍‭⁯‫⁭‍⁭‪‏‍‌‎​‎⁮⁬⁪⁭⁯‌⁭⁫‭‌‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);
  }
}
