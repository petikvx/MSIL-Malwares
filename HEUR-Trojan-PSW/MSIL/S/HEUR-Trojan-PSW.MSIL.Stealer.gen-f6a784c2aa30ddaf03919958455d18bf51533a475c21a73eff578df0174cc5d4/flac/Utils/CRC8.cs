// Decompiled with JetBrains decompiler
// Type: flac.Utils.CRC8
// Assembly: STAThreadAttrib, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 6EE3DE1A-E148-4FBA-A193-65BEA1824C00
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-f6a784c2aa30ddaf03919958455d18bf51533a475c21a73eff578df0174cc5d4.exe

namespace flac.Utils
{
  public static class CRC8
  {
    private static byte[] CRC8_TABLE = new byte[256]
    {
      (byte) 0,
      (byte) 7,
      (byte) 14,
      (byte) 9,
      (byte) 28,
      (byte) 27,
      (byte) 18,
      (byte) 21,
      (byte) 56,
      (byte) 63,
      (byte) 54,
      (byte) 49,
      (byte) 36,
      (byte) 35,
      (byte) 42,
      (byte) 45,
      (byte) 112,
      (byte) 119,
      (byte) 126,
      (byte) 121,
      (byte) 108,
      (byte) 107,
      (byte) 98,
      (byte) 101,
      (byte) 72,
      (byte) 79,
      (byte) 70,
      (byte) 65,
      (byte) 84,
      (byte) 83,
      (byte) 90,
      (byte) 93,
      (byte) 224,
      (byte) 231,
      (byte) 238,
      (byte) 233,
      (byte) 252,
      (byte) 251,
      (byte) 242,
      (byte) 245,
      (byte) 216,
      (byte) 223,
      (byte) 214,
      (byte) 209,
      (byte) 196,
      (byte) 195,
      (byte) 202,
      (byte) 205,
      (byte) 144,
      (byte) 151,
      (byte) 158,
      (byte) 153,
      (byte) 140,
      (byte) 139,
      (byte) 130,
      (byte) 133,
      (byte) 168,
      (byte) 175,
      (byte) 166,
      (byte) 161,
      (byte) 180,
      (byte) 179,
      (byte) 186,
      (byte) 189,
      (byte) 199,
      (byte) 192,
      (byte) 201,
      (byte) 206,
      (byte) 219,
      (byte) 220,
      (byte) 213,
      (byte) 210,
      byte.MaxValue,
      (byte) 248,
      (byte) 241,
      (byte) 246,
      (byte) 227,
      (byte) 228,
      (byte) 237,
      (byte) 234,
      (byte) 183,
      (byte) 176,
      (byte) 185,
      (byte) 190,
      (byte) 171,
      (byte) 172,
      (byte) 165,
      (byte) 162,
      (byte) 143,
      (byte) 136,
      (byte) 129,
      (byte) 134,
      (byte) 147,
      (byte) 148,
      (byte) 157,
      (byte) 154,
      (byte) 39,
      (byte) 32,
      (byte) 41,
      (byte) 46,
      (byte) 59,
      (byte) 60,
      (byte) 53,
      (byte) 50,
      (byte) 31,
      (byte) 24,
      (byte) 17,
      (byte) 22,
      (byte) 3,
      (byte) 4,
      (byte) 13,
      (byte) 10,
      (byte) 87,
      (byte) 80,
      (byte) 89,
      (byte) 94,
      (byte) 75,
      (byte) 76,
      (byte) 69,
      (byte) 66,
      (byte) 111,
      (byte) 104,
      (byte) 97,
      (byte) 102,
      (byte) 115,
      (byte) 116,
      (byte) 125,
      (byte) 122,
      (byte) 137,
      (byte) 142,
      (byte) 135,
      (byte) 128,
      (byte) 149,
      (byte) 146,
      (byte) 155,
      (byte) 156,
      (byte) 177,
      (byte) 182,
      (byte) 191,
      (byte) 184,
      (byte) 173,
      (byte) 170,
      (byte) 163,
      (byte) 164,
      (byte) 249,
      (byte) 254,
      (byte) 247,
      (byte) 240,
      (byte) 229,
      (byte) 226,
      (byte) 235,
      (byte) 236,
      (byte) 193,
      (byte) 198,
      (byte) 207,
      (byte) 200,
      (byte) 221,
      (byte) 218,
      (byte) 211,
      (byte) 212,
      (byte) 105,
      (byte) 110,
      (byte) 103,
      (byte) 96,
      (byte) 117,
      (byte) 114,
      (byte) 123,
      (byte) 124,
      (byte) 81,
      (byte) 86,
      (byte) 95,
      (byte) 88,
      (byte) 77,
      (byte) 74,
      (byte) 67,
      (byte) 68,
      (byte) 25,
      (byte) 30,
      (byte) 23,
      (byte) 16,
      (byte) 5,
      (byte) 2,
      (byte) 11,
      (byte) 12,
      (byte) 33,
      (byte) 38,
      (byte) 47,
      (byte) 40,
      (byte) 61,
      (byte) 58,
      (byte) 51,
      (byte) 52,
      (byte) 78,
      (byte) 73,
      (byte) 64,
      (byte) 71,
      (byte) 82,
      (byte) 85,
      (byte) 92,
      (byte) 91,
      (byte) 118,
      (byte) 113,
      (byte) 120,
      (byte) 127,
      (byte) 106,
      (byte) 109,
      (byte) 100,
      (byte) 99,
      (byte) 62,
      (byte) 57,
      (byte) 48,
      (byte) 55,
      (byte) 34,
      (byte) 37,
      (byte) 44,
      (byte) 43,
      (byte) 6,
      (byte) 1,
      (byte) 8,
      (byte) 15,
      (byte) 26,
      (byte) 29,
      (byte) 20,
      (byte) 19,
      (byte) 174,
      (byte) 169,
      (byte) 160,
      (byte) 167,
      (byte) 178,
      (byte) 181,
      (byte) 188,
      (byte) 187,
      (byte) 150,
      (byte) 145,
      (byte) 152,
      (byte) 159,
      (byte) 138,
      (byte) 141,
      (byte) 132,
      (byte) 131,
      (byte) 222,
      (byte) 217,
      (byte) 208,
      (byte) 215,
      (byte) 194,
      (byte) 197,
      (byte) 204,
      (byte) 203,
      (byte) 230,
      (byte) 225,
      (byte) 232,
      (byte) 239,
      (byte) 250,
      (byte) 253,
      (byte) 244,
      (byte) 243
    };

    public static byte update(byte data, byte crc) => CRC8.CRC8_TABLE[(int) crc ^ (int) data];

    public static byte updateBlock(byte[] data, int len, byte crc)
    {
      for (int index = 0; index < len; ++index)
        crc = CRC8.CRC8_TABLE[(int) crc ^ (int) data[index]];
      return crc;
    }

    public static byte calc(byte[] data, int len)
    {
      byte num = 0;
      for (int index = 0; index < len; ++index)
        num = CRC8.CRC8_TABLE[((int) num ^ (int) data[index]) & (int) byte.MaxValue];
      return num;
    }
  }
}
