// Decompiled with JetBrains decompiler
// Type: Sd8q.b5QY
// Assembly: k3F4, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: EF2862A8-7088-4F2B-ADD5-AFDC446098D9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-ee71029a7b3d9d85e7a6c7c0ecc35d93ee37514713ba5033d491a0d7506e947b.exe

using An9;
using Cx7o;
using e9H1;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.ComponentModel;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using w9DH;
using x7X;

namespace Sd8q
{
  [DesignerGenerated]
  public class b5QY : Form
  {
    private IContainer ႤႥ;
    [AccessedThroughProperty("Ⴗ")]
    private Label ႤႷ;
    [AccessedThroughProperty("Ⴀ")]
    private ComboBox ႤႳ;
    [AccessedThroughProperty("Ⴓ")]
    private TextBox ႤႠ;
    [AccessedThroughProperty("Ⴍ")]
    private TextBox ႤႭ;
    [AccessedThroughProperty("Ⴐ")]
    private Button ႤႼ;
    private o3GX.We0c Ⴀ = new o3GX.We0c();

    public b5QY()
    {
      this.Load += new EventHandler(this.Sw89);
      this.Ap19();
    }

    protected virtual void k4M9([In] bool obj0)
    {
      try
      {
        if (!obj0 || this.ႤႥ == null)
          return;
        this.ႤႥ.Dispose();
      }
      finally
      {
        this.Dispose(obj0);
      }
    }

    private void Ap19()
    {
      this.ႤႥ = (IContainer) new System.ComponentModel.Container();
      this.Ⴅ = new Label();
      this.Ⴃ = new Label();
      this.Ⴄ = new Label();
      this.Ⴈ = new Label();
      this.Ⴗ = new Label();
      this.Ⴀ = new ComboBox();
      this.Ⴓ = new TextBox();
      this.Ⴍ = new TextBox();
      this.Ⴐ = new Button();
      this.Ⴜ = new Button();
      this.ႣႥ = new Button();
      this.ႣႣ = new ErrorProvider(this.ႤႥ);
      ((ISupportInitialize) this.ႣႣ).BeginInit();
      this.SuspendLayout();
      this.Ⴅ.AutoSize = true;
      this.Ⴅ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴅ.Location = new Point(194, 57);
      this.Ⴅ.Name = "Label1";
      this.Ⴅ.Size = new Size(38, 20);
      this.Ⴅ.TabIndex = 0;
      this.Ⴅ.Text = "ID :";
      this.Ⴃ.AutoSize = true;
      this.Ⴃ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴃ.Location = new Point(177, 124);
      this.Ⴃ.Name = "Label2";
      this.Ⴃ.Size = new Size(57, 20);
      this.Ⴃ.TabIndex = 1;
      this.Ⴃ.Text = "Type :";
      this.Ⴄ.AutoSize = true;
      this.Ⴄ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴄ.Location = new Point(170, 191);
      this.Ⴄ.Name = "Label3";
      this.Ⴄ.Size = new Size(65, 20);
      this.Ⴄ.TabIndex = 2;
      this.Ⴄ.Text = "Value :";
      this.Ⴈ.AutoSize = true;
      this.Ⴈ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴈ.Location = new Point(160, 258);
      this.Ⴈ.Name = "Label4";
      this.Ⴈ.Size = new Size(76, 20);
      this.Ⴈ.TabIndex = 3;
      this.Ⴈ.Text = "Format :";
      this.Ⴗ.BorderStyle = BorderStyle.FixedSingle;
      this.Ⴗ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴗ.Location = new Point(268, 51);
      this.Ⴗ.Name = "lblID";
      this.Ⴗ.Size = new Size(232, 33);
      this.Ⴗ.TabIndex = 4;
      this.Ⴗ.Text = "40000";
      this.Ⴗ.TextAlign = ContentAlignment.MiddleLeft;
      this.Ⴀ.DropDownStyle = ComboBoxStyle.DropDownList;
      this.Ⴀ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴀ.FormattingEnabled = true;
      this.Ⴀ.Items.AddRange(new object[2]
      {
        (object) "money",
        (object) "percentage"
      });
      this.Ⴀ.Location = new Point(268, (int) byte.MaxValue);
      this.Ⴀ.Name = "cBoxFormat";
      this.Ⴀ.Size = new Size(232, 28);
      this.Ⴀ.TabIndex = 2;
      this.Ⴓ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴓ.Location = new Point(268, 188);
      this.Ⴓ.MaxLength = 50;
      this.Ⴓ.Name = "txtValue";
      this.Ⴓ.Size = new Size(232, 26);
      this.Ⴓ.TabIndex = 1;
      this.Ⴍ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴍ.Location = new Point(268, 121);
      this.Ⴍ.MaxLength = 50;
      this.Ⴍ.Name = "txtType";
      this.Ⴍ.Size = new Size(232, 26);
      this.Ⴍ.TabIndex = 0;
      this.Ⴐ.AutoSize = true;
      this.Ⴐ.BackColor = Color.MediumSeaGreen;
      this.Ⴐ.Font = new Font("Microsoft Sans Serif", 10f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴐ.ForeColor = SystemColors.ControlLightLight;
      this.Ⴐ.Location = new Point(177, 301);
      this.Ⴐ.Name = "btnAdd";
      this.Ⴐ.Size = new Size(100, 44);
      this.Ⴐ.TabIndex = 3;
      this.Ⴐ.Text = "&Add";
      this.Ⴐ.UseVisualStyleBackColor = false;
      this.Ⴜ.AutoSize = true;
      this.Ⴜ.BackColor = Color.Goldenrod;
      this.Ⴜ.CausesValidation = false;
      this.Ⴜ.Font = new Font("Microsoft Sans Serif", 10f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴜ.ForeColor = SystemColors.ControlLightLight;
      this.Ⴜ.Location = new Point(409, 301);
      this.Ⴜ.Name = "btnCancel";
      this.Ⴜ.Size = new Size(114, 44);
      this.Ⴜ.TabIndex = 5;
      this.Ⴜ.Text = "&Cancel";
      this.Ⴜ.UseVisualStyleBackColor = false;
      this.ႣႥ.AutoSize = true;
      this.ႣႥ.BackColor = Color.IndianRed;
      this.ႣႥ.CausesValidation = false;
      this.ႣႥ.Font = new Font("Microsoft Sans Serif", 10f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႣႥ.ForeColor = SystemColors.ControlLightLight;
      this.ႣႥ.Location = new Point(293, 301);
      this.ႣႥ.Name = "btnReset";
      this.ႣႥ.Size = new Size(101, 44);
      this.ႣႥ.TabIndex = 4;
      this.ႣႥ.Text = "&Reset";
      this.ႣႥ.UseVisualStyleBackColor = false;
      this.ႣႣ.BlinkStyle = ErrorBlinkStyle.NeverBlink;
      this.ႣႣ.ContainerControl = (ContainerControl) this;
      this.AutoScaleDimensions = new SizeF(9f, 20f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.AutoValidate = AutoValidate.EnableAllowFocusChange;
      this.BackColor = Color.LightSteelBlue;
      this.ClientSize = new Size(659, 385);
      this.Controls.Add((Control) this.ႣႥ);
      this.Controls.Add((Control) this.Ⴜ);
      this.Controls.Add((Control) this.Ⴐ);
      this.Controls.Add((Control) this.Ⴍ);
      this.Controls.Add((Control) this.Ⴓ);
      this.Controls.Add((Control) this.Ⴀ);
      this.Controls.Add((Control) this.Ⴗ);
      this.Controls.Add((Control) this.Ⴈ);
      this.Controls.Add((Control) this.Ⴄ);
      this.Controls.Add((Control) this.Ⴃ);
      this.Controls.Add((Control) this.Ⴅ);
      this.FormBorderStyle = FormBorderStyle.FixedSingle;
      this.Name = "ႰႷ";
      this.StartPosition = FormStartPosition.CenterScreen;
      this.Text = "Add Mandatory Deduction";
      ((ISupportInitialize) this.ႣႣ).EndInit();
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual Label Ⴅ
    {
      get => this.Ⴀ.Ⴃ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴀ.Ⴃ = (object) value as Label;
    }

    internal virtual Label Ⴃ
    {
      get => this.Ⴀ.Ⴀ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴀ.Ⴀ = value;
    }

    internal virtual Label Ⴄ
    {
      get => this.Ⴀ.Ⴈ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴀ.Ⴈ = (object) value as Label;
    }

    internal virtual Label Ⴈ
    {
      get => this.Ⴀ.Ⴓ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴀ.Ⴓ = value;
    }

    internal virtual Label Ⴗ
    {
      get => this.ႤႷ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႤႷ = value;
    }

    internal virtual ComboBox Ⴀ
    {
      get => this.ႤႳ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        object obj = (object) new CancelEventHandler(this.An60);
        object ⴄⴓ1 = (object) this.ႤႳ;
        if (ⴄⴓ1 is ComboBox)
          (ⴄⴓ1 as ComboBox).Validating -= (CancelEventHandler) obj;
        this.ႤႳ = value;
        object ⴄⴓ2 = (object) this.ႤႳ;
        if (!(ⴄⴓ2 is ComboBox))
          return;
        (ⴄⴓ2 as ComboBox).Validating += obj as CancelEventHandler;
      }
    }

    internal virtual TextBox Ⴓ
    {
      get => this.ႤႠ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        MulticastDelegate multicastDelegate = (MulticastDelegate) new CancelEventHandler(this.Xe96);
        TextBoxBase ⴄⴀ1 = (TextBoxBase) this.ႤႠ;
        if (ⴄⴀ1 is TextBox)
          ⴄⴀ1.Validating -= (CancelEventHandler) multicastDelegate;
        this.ႤႠ = value;
        TextBoxBase ⴄⴀ2 = (TextBoxBase) this.ႤႠ;
        if (!(ⴄⴀ2 is TextBox))
          return;
        (ⴄⴀ2 as TextBox).Validating += multicastDelegate as CancelEventHandler;
      }
    }

    internal virtual TextBox Ⴍ
    {
      get => this.ႤႭ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        MulticastDelegate multicastDelegate = (MulticastDelegate) new CancelEventHandler(this.q4GR);
        TextBoxBase ⴄⴍ1 = (TextBoxBase) this.ႤႭ;
        if ((TextBox) ⴄⴍ1 != null)
          (ⴄⴍ1 as TextBox).Validating -= multicastDelegate as CancelEventHandler;
        this.ႤႭ = value;
        TextBoxBase ⴄⴍ2 = (TextBoxBase) this.ႤႭ;
        if ((TextBox) ⴄⴍ2 == null)
          return;
        (ⴄⴍ2 as TextBox).Validating += multicastDelegate as CancelEventHandler;
      }
    }

    internal virtual Button Ⴐ
    {
      get => this.ႤႼ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        object obj = (object) new EventHandler(this.Ac48);
        ButtonBase ⴄⴜ1 = (ButtonBase) this.ႤႼ;
        if (ⴄⴜ1 is Button)
          ⴄⴜ1.Click -= obj as EventHandler;
        this.ႤႼ = value;
        ButtonBase ⴄⴜ2 = (ButtonBase) this.ႤႼ;
        if ((Button) ⴄⴜ2 == null)
          return;
        (ⴄⴜ2 as Button).Click += obj as EventHandler;
      }
    }

    internal virtual Button Ⴜ
    {
      get => this.Ⴀ.Ⴐ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        object obj = (object) new EventHandler(this.Zj89);
        object ⴐ1 = (object) this.Ⴀ.Ⴐ;
        if (ⴐ1 is Button)
          ((Control) ⴐ1).Click -= obj as EventHandler;
        this.Ⴀ.Ⴐ = (ButtonBase) value as Button;
        object ⴐ2 = (object) this.Ⴀ.Ⴐ;
        if (!(ⴐ2 is Button))
          return;
        ((Control) ⴐ2).Click += (EventHandler) obj;
      }
    }

    internal virtual Button ႣႥ
    {
      get => this.Ⴀ.Ⴄ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        object obj = (object) new EventHandler(this.q2K5);
        ButtonBase ⴄ1 = (ButtonBase) this.Ⴀ.Ⴄ;
        if (ⴄ1 is Button)
          (ⴄ1 as Button).Click -= (EventHandler) obj;
        this.Ⴀ.Ⴄ = value;
        ButtonBase ⴄ2 = (ButtonBase) this.Ⴀ.Ⴄ;
        if ((Button) ⴄ2 == null)
          return;
        (ⴄ2 as Button).Click += (EventHandler) obj;
      }
    }

    internal virtual ErrorProvider ႣႣ
    {
      get => this.Ⴀ.Ⴗ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴀ.Ⴗ = value;
    }

    private void Sw89([In] object obj0, [In] EventArgs obj1)
    {
      this.Ⴗ.Text = Jz49.i2SA();
      this.Ⴀ.SelectedIndex = 0;
      this.Ⴍ.Focus();
    }

    private void Ac48([In] object obj0, [In] EventArgs obj1)
    {
      if (!this.ValidateChildren())
        return;
      try
      {
        ICloneable text = (ICloneable) this.Ⴍ.Text;
        IComparable comparable = (IComparable) this.Ⴀ.SelectedItem.ToString();
        double num1 = double.Parse(this.Ⴓ.Text);
        INotifyPropertyChanged entity = (INotifyPropertyChanged) new Ex7f();
        (entity as Ex7f).Ⴐ = int.Parse(this.Ⴗ.Text);
        (entity as Ex7f).Ⴍ = (string) text;
        (entity as Ex7f).Ⴅ = new Decimal?(Convert.ToDecimal(num1));
        (entity as Ex7f).Ⴈ = (string) comparable;
        object obj = (object) new Tt1();
        ((Tt1) obj).Ⴀ.InsertOnSubmit(entity as Ex7f);
        try
        {
          (obj as Tt1).SubmitChanges();
          int num2 = (int) MessageBox.Show("Success ", "Success");
          this.Close();
          En6.Ⴈ.Ⴓ.Bp5k();
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          int num3 = (int) MessageBox.Show("Error : " + ex.Message, "error");
          ProjectData.ClearProjectError();
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        int num = (int) MessageBox.Show("Error : " + ex.Message, "error");
        ProjectData.ClearProjectError();
      }
    }

    private void q2K5([In] object obj0, [In] EventArgs obj1)
    {
      this.Ⴍ.Text = "";
      this.Ⴓ.Text = "";
      this.Ⴀ.SelectedIndex = 0;
      this.Ⴍ.Focus();
    }

    private void Zj89([In] object obj0, [In] EventArgs obj1) => this.Close();

    private void q4GR([In] object obj0, [In] CancelEventArgs obj1)
    {
      if (string.IsNullOrEmpty(this.Ⴍ.Text))
      {
        this.ႣႣ.SetError((Control) this.Ⴍ, "Type should not left blank");
        obj1.Cancel = true;
      }
      else
        this.ႣႣ.SetError((Control) this.Ⴍ, (string) null);
    }

    private void Xe96([In] object obj0, [In] CancelEventArgs obj1)
    {
      IEquatable<string> text = (IEquatable<string>) this.Ⴓ.Text;
      if (string.IsNullOrEmpty(text as string))
      {
        this.ႣႣ.SetError((Control) this.Ⴓ, "Value should not left blank");
        obj1.Cancel = true;
      }
      else if (!Versioned.IsNumeric((object) (string) text))
      {
        this.ႣႣ.SetError((Control) this.Ⴓ, "Value should be made of numeric");
        obj1.Cancel = true;
      }
      else
        this.ႣႣ.SetError((Control) this.Ⴓ, (string) null);
    }

    private void An60([In] object obj0, [In] CancelEventArgs obj1)
    {
      if (this.Ⴀ.SelectedIndex < 0)
      {
        this.ႣႣ.SetError((Control) this.Ⴀ, "Please select a format before proceeding.");
        obj1.Cancel = true;
      }
      else
        this.ႣႣ.SetError((Control) this.Ⴀ, (string) null);
    }
  }
}
