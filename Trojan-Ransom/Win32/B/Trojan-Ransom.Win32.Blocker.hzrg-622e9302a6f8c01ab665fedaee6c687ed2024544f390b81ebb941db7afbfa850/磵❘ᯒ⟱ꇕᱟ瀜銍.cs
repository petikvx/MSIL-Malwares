// Decompiled with JetBrains decompiler
// Type: 磵❘ᯒ⟱ꇕᱟ瀜銍
// Assembly: stub, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FA9A5647-A48B-43F0-8A2B-5C455466EE1E
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00070-msil\Trojan-Ransom.Win32.Blocker.hzrg-622e9302a6f8c01ab665fedaee6c687ed2024544f390b81ebb941db7afbfa850.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.IO;
using System.Security.Cryptography;
using System.Text;

[StandardModule]
internal sealed class 磵\u2758ᯒ\u27F1ꇕᱟ瀜銍
{
  public static object 紸癗룈洀\uFFFD紮て䎚(string _param0, string _param1)
  {
    object obj;
    try
    {
      RijndaelManaged rijndaelManaged = new RijndaelManaged();
      MD5CryptoServiceProvider cryptoServiceProvider = new MD5CryptoServiceProvider();
      byte[] hash = cryptoServiceProvider.ComputeHash(Encoding.UTF8.GetBytes(_param0));
      cryptoServiceProvider.Clear();
      rijndaelManaged.Key = hash;
      rijndaelManaged.GenerateIV();
      byte[] iv = rijndaelManaged.IV;
      MemoryStream memoryStream = new MemoryStream();
      memoryStream.Write(iv, 0, iv.Length);
      CryptoStream cryptoStream = new CryptoStream((Stream) memoryStream, rijndaelManaged.CreateEncryptor(), CryptoStreamMode.Write);
      byte[] bytes = Encoding.UTF8.GetBytes(_param1);
      cryptoStream.Write(bytes, 0, bytes.Length);
      cryptoStream.FlushFinalBlock();
      byte[] array = memoryStream.ToArray();
      cryptoStream.Close();
      rijndaelManaged.Clear();
      obj = (object) Convert.ToBase64String(array);
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      obj = (object) null;
      ProjectData.ClearProjectError();
    }
    return obj;
  }

  public static object \u0732齣֤\uEC7E\u33B7씭ጭ憒(string _param0, string _param1)
  {
    object obj;
    try
    {
      RijndaelManaged rijndaelManaged = new RijndaelManaged();
      int count1 = 16;
      MD5CryptoServiceProvider cryptoServiceProvider = new MD5CryptoServiceProvider();
      byte[] hash = cryptoServiceProvider.ComputeHash(Encoding.UTF8.GetBytes(_param0));
      cryptoServiceProvider.Clear();
      MemoryStream memoryStream = new MemoryStream(Convert.FromBase64String(_param1));
      byte[] buffer = new byte[16];
      memoryStream.Read(buffer, 0, count1);
      rijndaelManaged.IV = buffer;
      rijndaelManaged.Key = hash;
      CryptoStream cryptoStream = new CryptoStream((Stream) memoryStream, rijndaelManaged.CreateDecryptor(), CryptoStreamMode.Read);
      byte[] numArray = new byte[checked ((int) (memoryStream.Length - (long) count1) + 1)];
      int count2 = cryptoStream.Read(numArray, 0, numArray.Length);
      cryptoStream.Close();
      rijndaelManaged.Clear();
      obj = (object) Encoding.UTF8.GetString(numArray, 0, count2);
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      obj = (object) null;
      ProjectData.ClearProjectError();
    }
    return obj;
  }
}
