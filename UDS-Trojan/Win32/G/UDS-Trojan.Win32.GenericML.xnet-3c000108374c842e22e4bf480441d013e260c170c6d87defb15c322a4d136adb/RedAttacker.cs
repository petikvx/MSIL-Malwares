// Decompiled with JetBrains decompiler
// Type: MiniGames_Team9.RedAttacker
// Assembly: DependentHan, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A86A1B94-F21E-4DD9-9B87-E146CFB070D9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.07\UDS-Trojan.Win32.GenericML.xnet-3c000108374c842e22e4bf480441d013e260c170c6d87defb15c322a4d136adb.exe

using System.Drawing;
using System.Windows.Forms;

namespace MiniGames_Team9
{
  internal class RedAttacker : Attacker
  {
    private bool isLast = true;

    public RedAttacker(PictureBox MAP)
      : base(MAP)
    {
      this.Map = MAP;
    }

    public RedAttacker(PictureBox MAP, Point vt, Direction direc)
      : base(MAP)
    {
      this.vt = vt;
      this.direction = direc;
      this.state = FigureState.medium;
      this.MakeAttacker();
      this.speed = 5;
      this.timeDelay = 50;
      this.maxHealth = 50;
      this.Avatar.Height = 40;
      this.Avatar.Width = 40;
    }

    public override void MakeAttacker()
    {
      if (this.state == FigureState.medium)
      {
        this.skin.MakeAttacker2Medium();
        this.attackerHealth = (double) this.maxHealth;
      }
      else
      {
        this.skin.MakeAttacker2Weak();
        this.attackerHealth = (double) this.maxHealth;
      }
      this.maxHealth -= this.maxHealth / 2;
    }

    public override void AttackerShoot()
    {
      if (this.timeDelay == 0)
      {
        this.Shoot();
        if (this.isLast)
        {
          this.timeDelay = 70;
          this.isLast = false;
        }
        else
        {
          this.timeDelay = 15;
          this.isLast = true;
        }
      }
      else
        --this.timeDelay;
    }
  }
}
