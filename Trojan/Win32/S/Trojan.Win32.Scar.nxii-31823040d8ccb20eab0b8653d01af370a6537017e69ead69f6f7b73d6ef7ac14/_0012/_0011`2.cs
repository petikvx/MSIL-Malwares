// Decompiled with JetBrains decompiler
// Type: .
// Assembly: BitGenerator, Version=37.0.2.5583, Culture=neutral, PublicKeyToken=70e4c26ef2031892
// MVID: D3922F89-E00A-4D10-8BC9-9309D5539F14
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\Trojan.Win32.Scar.nxii-31823040d8ccb20eab0b8653d01af370a6537017e69ead69f6f7b73d6ef7ac14.exe

using \u0012;
using System;
using System.Collections.Generic;
using System.Globalization;
using System.Runtime.InteropServices;

namespace \u0012
{
  internal sealed class \u0011<\u0001, \u0002>
  {
    private readonly IDictionary<\u0001, \u0002> \u0001;
    private readonly IDictionary<\u0002, \u0001> \u0001;
    private readonly string \u0001;
    private readonly string \u0002;

    public \u0011()
      : this((IEqualityComparer<\u0001>) EqualityComparer<\u0001>.Default, (IEqualityComparer<\u0002>) EqualityComparer<\u0002>.Default)
    {
    }

    public \u0011([In] IEqualityComparer<\u0001> obj0, [In] IEqualityComparer<\u0002> obj1)
      : this(obj0, obj1, \u001C.\u0001(4066), \u001C.\u0001(4066))
    {
    }

    public \u0011(
      [In] IEqualityComparer<\u0001> obj0,
      [In] IEqualityComparer<\u0002> obj1,
      [In] string obj2,
      [In] string obj3)
    {
      this.\u0001 = (IDictionary<\u0001, \u0002>) new Dictionary<\u0001, \u0002>(obj0);
      this.\u0001 = (IDictionary<\u0001, \u0002>) new Dictionary<\u0002, \u0001>(obj1);
      this.\u0001 = (IDictionary<\u0001, \u0002>) obj2;
      this.\u0002 = obj3;
    }

    public void \u0001([In] \u0001 obj0, [In] \u0002 obj1)
    {
      \u0002 obj2;
      if (this.\u0001.TryGetValue(obj0, out obj2) && !obj2.Equals((object) obj1))
        throw new ArgumentException(\u0002.\u0002.\u0001((string) this.\u0001, (IFormatProvider) CultureInfo.InvariantCulture, (object) obj0));
      \u0001 obj3;
      if (((IDictionary<\u0002, \u0001>) this.\u0001).TryGetValue(obj1, out obj3) && !obj3.Equals((object) obj0))
        throw new ArgumentException(\u0002.\u0002.\u0001(this.\u0002, (IFormatProvider) CultureInfo.InvariantCulture, (object) obj1));
      this.\u0001.Add(obj0, obj1);
      ((IDictionary<\u0002, \u0001>) this.\u0001).Add(obj1, obj0);
    }

    public bool \u0001(\u0001 _param1, out \u0002 _param2) => this.\u0001.TryGetValue(_param1, out _param2);

    public bool \u0001(\u0002 _param1, out \u0001 _param2) => ((IDictionary<\u0002, \u0001>) this.\u0001).TryGetValue(_param1, out _param2);
  }
}
