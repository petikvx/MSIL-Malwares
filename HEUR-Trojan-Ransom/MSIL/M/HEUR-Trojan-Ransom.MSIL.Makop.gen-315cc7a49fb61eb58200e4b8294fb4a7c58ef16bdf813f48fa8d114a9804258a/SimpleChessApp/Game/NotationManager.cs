// Decompiled with JetBrains decompiler
// Type: SimpleChessApp.Game.NotationManager
// Assembly: Gز, Version=2.159.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 19F72CF4-8E17-4C69-9694-AAB2F68A841C
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.01-msil\HEUR-Trojan-Ransom.MSIL.Makop.gen-315cc7a49fb61eb58200e4b8294fb4a7c58ef16bdf813f48fa8d114a9804258a.exe

using System.ComponentModel;

namespace SimpleChessApp.Game
{
  public class NotationManager
  {
    public BindingList<Turn> Moves { get; set; }

    public NotationManager()
    {
label_1:
      int num1 = 1883677559;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 854003261)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            this.Moves = new BindingList<Turn>();
            num1 = (int) num2 * -763374021 ^ -78970743;
            continue;
          case 2:
            num1 = (int) num2 * 1129748090 ^ 2003275332;
            continue;
          case 3:
            goto label_3;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    internal void Clear()
    {
label_1:
      int num1 = 315033092;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1635234865)) % 4U)
        {
          case 0:
            goto label_3;
          case 1:
            this.Moves.Clear();
            num1 = (int) num2 * -79394421 ^ -599832332;
            continue;
          case 2:
            num1 = (int) num2 * -653959106 ^ -1409317515;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }
  }
}
