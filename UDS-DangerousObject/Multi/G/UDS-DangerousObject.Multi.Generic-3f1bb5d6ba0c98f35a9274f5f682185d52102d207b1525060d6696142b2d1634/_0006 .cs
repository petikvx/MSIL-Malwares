// Decompiled with JetBrains decompiler
// Type:  
// Assembly: 太q, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: A563A0A3-4CCB-4B67-F791-DB123DB47B3F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.01-msil\UDS-DangerousObject.Multi.Generic-3f1bb5d6ba0c98f35a9274f5f682185d52102d207b1525060d6696142b2d1634.exe

using System.Drawing;

internal sealed class \u0006\u2000 : \u0005\u2000
{
  public \u0006\u2000(int _param1)
    : base(_param1)
  {
  }

  public void \u0002(
    ref Bitmap _param1,
    int _param2,
    ref int _param3,
    ref int _param4,
    ref int _param5,
    ref int _param6)
  {
    this.\u0002.Width = (float) _param2;
    for (int x = _param3; x < _param3 + _param2; ++x)
    {
      for (int y = _param4; y < _param4 + _param2; ++y)
      {
        if (_param1.GetPixel(x, y) != Color.Transparent && _param1.GetPixel(x, y) != Color.White && (_param1.GetPixel(x, y).A != (byte) 0 || _param1.GetPixel(x, y).R != (byte) 0 || _param1.GetPixel(x, y).G != (byte) 0 || _param1.GetPixel(x, y).B > (byte) 0))
          _param1.SetPixel(x, y, Color.Transparent);
      }
    }
    _param3 = _param5;
    _param4 = _param6;
  }
}
