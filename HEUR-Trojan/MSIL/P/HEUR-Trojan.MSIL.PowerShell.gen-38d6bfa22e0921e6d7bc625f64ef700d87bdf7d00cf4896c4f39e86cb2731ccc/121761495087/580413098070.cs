// Decompiled with JetBrains decompiler
// Type: 121761495087.580413098070
// Assembly: 373224271579, Version=1.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: F1AD5918-0B7E-492E-9A94-09EF01F479FE
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan.MSIL.PowerShell.gen-38d6bfa22e0921e6d7bc625f64ef700d87bdf7d00cf4896c4f39e86cb2731ccc.exe

using \u003121761495087;
using \u003563858576936;
using System;
using System.Collections.Generic;
using System.IO;

namespace \u003121761495087
{
  public static class \u003580413098070
  {
    public static void \u003461247547645(string _param0, string _param1) => \u003580413098070.\u003583624721974(_param0, _param1, SearchOption.AllDirectories);

    public static void \u003583624721974(string _param0, string _param1, SearchOption _param2)
    {
      if (!Directory.Exists(_param1))
        Directory.CreateDirectory(_param1);
      foreach (string file in Directory.GetFiles(_param0))
      {
        string str = Path.Combine(_param1, Path.GetFileName(file));
        \u003991103819385.\u003035618186114(file, str);
      }
      if (_param2 != SearchOption.AllDirectories)
        return;
      foreach (string directory in Directory.GetDirectories(_param0))
      {
        string str = Path.Combine(_param1, Path.GetFileName(directory));
        \u003580413098070.\u003583624721974(directory, str, _param2);
      }
    }

    public static int \u003941304988382(string _param0)
    {
      if (!Directory.Exists(_param0))
        return 0;
      int num = 0;
      foreach (string file in Directory.GetFiles(_param0))
      {
        if (!\u003991103819385.\u003095072738730(file))
          ++num;
      }
      foreach (string directory in Directory.GetDirectories(_param0))
        num += \u003580413098070.\u003941304988382(directory);
      if (num == 0)
      {
        try
        {
          Directory.Delete(_param0, true);
        }
        catch
        {
          ++num;
        }
      }
      else
        ++num;
      return num;
    }

    public static bool \u003137096721580(string _param0, int _param1_1)
    {
      if (!Directory.Exists(_param0))
        return true;
      string[] directories = Directory.GetDirectories(_param0);
      int num = directories.Length - _param1_1;
      if (num <= 0)
        return true;
      Array.Sort<string>(directories, (Comparison<string>) ((_param1_2, _param2) => File.GetLastWriteTimeUtc(_param1_2).CompareTo(File.GetLastWriteTimeUtc(_param2))));
      bool flag = true;
      for (int index = 0; index < num; ++index)
      {
        try
        {
          Directory.Delete(directories[index]);
        }
        catch (Exception ex)
        {
          flag = false;
        }
      }
      return flag;
    }

    public static IEnumerable<string> \u003925392224296(
      string _param0,
      string _param1,
      SearchOption _param2)
    {
      // ISSUE: object of a compiler-generated type is created
      // ISSUE: variable of a compiler-generated type
      \u003580413098070.\u003711966888805 obj = new \u003580413098070.\u003711966888805(-2);
      // ISSUE: reference to a compiler-generated field
      ((\u003580413098070.\u003900173439553) obj).\u003845249849692 = _param0;
      // ISSUE: reference to a compiler-generated field
      ((\u003580413098070.\u003900173439553) obj).\u003721228826715 = _param1;
      // ISSUE: reference to a compiler-generated field
      ((\u003580413098070.\u003900173439553) obj).\u003241778579853 = _param2;
      return (IEnumerable<string>) obj;
    }

    public static IEnumerable<string> \u003112075796165(string _param0, string _param1 = "*") => \u003580413098070.\u003925392224296(_param0, _param1, SearchOption.TopDirectoryOnly);
  }
}
