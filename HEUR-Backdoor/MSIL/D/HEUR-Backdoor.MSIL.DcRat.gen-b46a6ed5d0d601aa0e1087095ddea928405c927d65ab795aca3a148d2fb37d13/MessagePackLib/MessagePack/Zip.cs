// Decompiled with JetBrains decompiler
// Type: MessagePackLib.MessagePack.Zip
// Assembly: Hau, Version=1.0.7.0, Culture=neutral, PublicKeyToken=null
// MVID: 43E252B6-B9CE-452D-8541-D8645EC414DC
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Backdoor.MSIL.DcRat.gen-b46a6ed5d0d601aa0e1087095ddea928405c927d65ab795aca3a148d2fb37d13.exe

using System;
using System.IO;
using System.IO.Compression;

namespace MessagePackLib.MessagePack
{
  public static class Zip
  {
    public static byte[] Decompress(byte[] input)
    {
      using (MemoryStream memoryStream = new MemoryStream(input))
      {
        byte[] buffer1 = new byte[4];
        memoryStream.Read(buffer1, 0, 4);
        int int32 = BitConverter.ToInt32(buffer1, 0);
        using (GZipStream gzipStream = new GZipStream((Stream) memoryStream, CompressionMode.Decompress))
        {
          byte[] buffer2 = new byte[int32];
          gzipStream.Read(buffer2, 0, int32);
          return buffer2;
        }
      }
    }

    public static byte[] Compress(byte[] input)
    {
      using (MemoryStream memoryStream = new MemoryStream())
      {
        byte[] bytes = BitConverter.GetBytes(input.Length);
        memoryStream.Write(bytes, 0, 4);
        using (GZipStream gzipStream = new GZipStream((Stream) memoryStream, CompressionMode.Compress))
        {
          gzipStream.Write(input, 0, input.Length);
          gzipStream.Flush();
        }
        return memoryStream.ToArray();
      }
    }
  }
}
