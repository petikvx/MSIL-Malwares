// Decompiled with JetBrains decompiler
// Type: TemporalToolkit.TemporalExpressions.TEDifference
// Assembly: TaskSchedulerExcept, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: C99F8105-AF21-447F-A90A-9B9B26790CA7
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.05\HEUR-Trojan.Win32.Generic-c3fec857671e01d484bd82b426a3d086aa19aab28ec888f7a83bf9fb8fa96f2d.exe

using System;

namespace TemporalToolkit.TemporalExpressions
{
  public class TEDifference : TemporalExpression
  {
    public TemporalExpression ExpressionA { get; set; }

    public TemporalExpression ExpressionB { get; set; }

    public TEDifference(TemporalExpression exprA, TemporalExpression exprB)
    {
      this.ExpressionA = exprA;
      this.ExpressionB = exprB;
    }

    public override bool Includes(DateTime aDate)
    {
label_1:
      int num1 = -1967533623;
      bool flag;
      while (true)
      {
        uint num2;
        int num3;
        switch ((num2 = (uint) (num1 ^ -1316012015)) % 5U)
        {
          case 0:
            num3 = !this.ExpressionB.Includes(aDate) ? 1 : 0;
            break;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * -955341393 ^ 219778989;
            continue;
          case 4:
            if (this.ExpressionA.Includes(aDate))
            {
              num1 = (int) num2 * -476205264 ^ -2100203900;
              continue;
            }
            num3 = 0;
            break;
          default:
            goto label_9;
        }
        flag = num3 != 0;
        num1 = -832949848;
      }
label_9:
      return flag;
    }
  }
}
