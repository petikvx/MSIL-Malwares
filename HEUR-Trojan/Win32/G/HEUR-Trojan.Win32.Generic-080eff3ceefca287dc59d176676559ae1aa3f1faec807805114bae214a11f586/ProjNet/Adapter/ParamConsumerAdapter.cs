// Decompiled with JetBrains decompiler
// Type: ProjNet.Adapter.ParamConsumerAdapter
// Assembly: TYPELIBA, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 97BB50BA-9882-4DFE-999C-7A4E4B448F1C
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-080eff3ceefca287dc59d176676559ae1aa3f1faec807805114bae214a11f586.exe

using ProjNet.Roles;
using ProjNet.Rules;
using System.Runtime.CompilerServices;
using TYPELIBA.Identifiers;
using TYPELIBA.Listeners;
using TYPELIBA.Lists;

namespace ProjNet.Adapter
{
  public class ParamConsumerAdapter : PrinterRefListener
  {
    private string container;
    private string _Client;
    private long _Database;
    private RepositoryProcess m_Issuer;
    private string _Exporter;
    private string serializer;
    private Listener _Definition;
    private Listener m_Class;
    private ConfigurationValueFlags _Record;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal ParamConsumerAdapter(
      Listener setup,
      Listener map,
      ConfigurationValueFlags role,
      RepositoryProcess asset2,
      string pol3,
      string reference4,
      long sum_selection5,
      string ident6,
      string visitor7)
    {
      int num1 = 3;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 3:
              goto label_8;
            case 1:
            case 4:
              // ISSUE: explicit constructor call
              base.\u002Ector();
              this.m_Class = map;
              this._Definition = setup;
              num2 = 2;
              continue;
            case 2:
              this._Record = role;
              goto case 6;
            case 5:
              this.serializer = visitor7;
              if (true)
              {
                num2 = 7;
                continue;
              }
              goto case 1;
            case 6:
              this.m_Issuer = asset2;
              this._Exporter = pol3;
              this._Client = reference4;
              this._Database = sum_selection5;
              this.container = ident6;
              if (ParamConsumerAdapter.InstantiateDescriptor())
              {
                num2 = 5;
                continue;
              }
              goto case 5;
            case 7:
              goto label_9;
            default:
              num2 = 6;
              continue;
          }
        }
label_8:
        ManagerParamsID.NewExpression();
        num1 = 4;
      }
label_9:;
    }

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public string AssetConfiguration() => this.container;

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public string LoginState() => this._Client;

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public long RestartState() => this._Database;

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public RepositoryProcess ViewConfiguration() => this.m_Issuer;

    public string Name
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => this._Exporter;
    }

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public string GetState() => this.serializer;

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public Listener SetConfiguration() => this._Definition;

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public Listener ComputeConfiguration() => this.m_Class;

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public ConfigurationValueFlags AddConfiguration() => this._Record;

    internal static bool InstantiateDescriptor() => true;

    internal static bool FillDescriptor() => false;
  }
}
