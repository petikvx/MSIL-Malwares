// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: VersioningHelp, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: A8C08E3E-24A1-4DAA-9E0F-F1F4BE4809FB
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-1861855b22d693257e4e3463667e53ae08711a684747fdd32f49c3e7b9c7f04f.exe

using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) null;
label_1:
        int num1 = -483090530;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1644120649)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * -1481208965 ^ -404139256;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 8320297;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1660144108)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 945837617 ^ 1277393748;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual string Value
    {
      get
      {
        string str = "";
label_1:
        int num1 = 658268859;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 276844343)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * -2125964449 ^ -1317800752;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return str;
      }
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
label_1:
        int num1 = 1165029747;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 51034482)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 1589581609 ^ 1044223061;
              continue;
            case 1:
              count = 0;
              num1 = (int) num2 * -1387243967 ^ 529580303;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem)
    {
label_1:
      int num1 = 712205197;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1954351608)) % 4U)
        {
          case 0:
            goto label_3;
          case 1:
            this.Add("", aItem);
            num1 = (int) num2 * -600834681 ^ -1035034747;
            continue;
          case 2:
            num1 = (int) num2 * -477415875 ^ 1201837622;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public virtual JSONNode Remove(string aKey)
    {
label_1:
      int num1 = 373228864;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 869972895)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 1404934274 ^ -1435242991;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = -1900768430;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1840002824)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 1704658312 ^ -1280855669;
            continue;
          case 2:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * -1473624212 ^ 2137368257;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = 1218300938;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 349620088)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 1254235623 ^ 1954187184;
            continue;
          case 2:
            jsonNode = aNode;
            num1 = (int) num2 * -235572844 ^ -1433981183;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONNode.\u003Cget_Childs\u003Ed__17 getChildsD17 = new JSONNode.\u003Cget_Childs\u003Ed__17(-2);
label_1:
        int num1 = -1335099291;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2102254241)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              getChildsD17.\u003C\u003E4__this = this;
              num1 = (int) num2 * -592690301 ^ -160817850;
              continue;
            case 3:
              childs = (IEnumerable<JSONNode>) getChildsD17;
              num1 = (int) num2 * -264467261 ^ 1532800583;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return childs;
      }
    }

    public IEnumerable<JSONNode> DeepChilds
    {
      get
      {
        JSONNode.\u003Cget_DeepChilds\u003Ed__19 getDeepChildsD19 = new JSONNode.\u003Cget_DeepChilds\u003Ed__19(-2);
        getDeepChildsD19.\u003C\u003E4__this = this;
label_1:
        int num1 = -1115606379;
        IEnumerable<JSONNode> deepChilds;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -70295487)) % 3U)
          {
            case 1:
              deepChilds = (IEnumerable<JSONNode>) getDeepChildsD19;
              num1 = (int) num2 * 389644207 ^ -1505092455;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return deepChilds;
      }
    }

    public override string ToString()
    {
      string str = nameof (JSONNode);
label_1:
      int num1 = 951965403;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 368993664)) % 3U)
        {
          case 1:
            num1 = (int) num2 * 1107245516 ^ -1400125559;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual string ToString(string aPrefix)
    {
label_1:
      int num1 = 177710900;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 471802987)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -1411146994 ^ 1346912910;
            continue;
          case 2:
            goto label_1;
          case 3:
            str = nameof (JSONNode);
            num1 = (int) num2 * -1001569213 ^ 1360515066;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public virtual int AsInt
    {
      get
      {
label_1:
        int num1 = 532563155;
        int asInt;
        bool flag;
        int result;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 438338909)) % 7U)
          {
            case 0:
              asInt = 0;
              num1 = 1123377833;
              continue;
            case 1:
              asInt = result;
              num1 = (int) num2 * -1714020847 ^ 549261330;
              continue;
            case 3:
              result = 0;
              flag = int.TryParse(this.Value, out result);
              num1 = (int) num2 * 1431714683 ^ 1313829824;
              continue;
            case 4:
              num1 = (int) num2 * -1746489234 ^ -1458631415;
              continue;
            case 5:
              goto label_1;
            case 6:
              int num3 = flag ? 1120194696 : (num3 = 1708406503);
              num1 = num3 ^ (int) num2 * -414222442;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asInt;
      }
      set => this.Value = value.ToString();
    }

    public virtual float AsFloat
    {
      get
      {
        float result = 0.0f;
label_1:
        int num1 = -1562079807;
        bool flag;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1493696482)) % 6U)
          {
            case 1:
              asFloat = result;
              num1 = (int) num2 * 351664918 ^ -517253842;
              continue;
            case 2:
              int num3 = flag ? 460987445 : (num3 = 1827038277);
              num1 = num3 ^ (int) num2 * 140678896;
              continue;
            case 3:
              flag = float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u206C⁮⁫‫⁬‍‪⁮​‮​‌‎‬‌‮‌‫⁯‭‏‫⁫⁬‫‏‏⁫⁮‎​​‭⁫‮⁯‮‏‭‮‮(), out result);
              num1 = (int) num2 * 607608318 ^ -192948026;
              continue;
            case 4:
              goto label_1;
            case 5:
              asFloat = 0.0f;
              num1 = -2060027300;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asFloat;
      }
      set => this.Value = value.ToString();
    }

    public virtual double AsDouble
    {
      get
      {
label_1:
        int num1 = -1951818907;
        double asDouble;
        double result;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2084587690)) % 8U)
          {
            case 0:
              asDouble = result;
              num1 = (int) num2 * 932013168 ^ -1687072084;
              continue;
            case 1:
              int num3 = !flag ? -1458724275 : (num3 = -412824728);
              num1 = num3 ^ (int) num2 * 1887588734;
              continue;
            case 3:
              result = 0.0;
              num1 = (int) num2 * -1043218868 ^ -1514080058;
              continue;
            case 4:
              flag = double.TryParse(this.Value, out result);
              num1 = (int) num2 * -896075625 ^ -1798428509;
              continue;
            case 5:
              asDouble = 0.0;
              num1 = -1072709424;
              continue;
            case 6:
              num1 = (int) num2 * -287632815 ^ 1375925962;
              continue;
            case 7:
              goto label_1;
            default:
              goto label_9;
          }
        }
label_9:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = -1868810559;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1745899082)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Value = value.ToString();
              num1 = (int) num2 * 1664806374 ^ -418542588;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual bool AsBool
    {
      get
      {
        bool result = false;
label_1:
        int num1 = 731220125;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2053947420)) % 6U)
          {
            case 1:
              num1 = (int) num2 * 407730458 ^ 1081905630;
              continue;
            case 2:
              asBool = !JSONNode.\u200F⁯‎‏‍‌‏‪‎⁫‌⁬‪‫‌‭⁫‫⁪‫‍‎⁯‪⁭‏⁯‪‭⁯‏⁯⁫‌‎⁮⁯‫⁮⁫‮(this.Value);
              num1 = 80343289;
              continue;
            case 3:
              int num3 = !bool.TryParse(this.Value, out result) ? 1182544851 : (num3 = 1723099285);
              num1 = num3 ^ (int) num2 * -789995811;
              continue;
            case 4:
              asBool = result;
              num1 = (int) num2 * 835354103 ^ 871656976;
              continue;
            case 5:
              goto label_1;
            default:
              goto label_7;
          }
        }
label_7:
        return asBool;
      }
      set
      {
label_1:
        int num1 = -1469265202;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -633408640)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Value = value ? "true" : "false";
              num1 = -1079958920;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = -213769583;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1645163060)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              asArray = this as JSONArray;
              num1 = (int) num2 * 1646252571 ^ -2045539707;
              continue;
            case 2:
              num1 = (int) num2 * -64145187 ^ 391684825;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asArray;
      }
    }

    public virtual JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = 1948128080;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2134024269)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 1917420356 ^ -1053672593;
              continue;
            case 1:
              asObject = this as JSONClass;
              num1 = (int) num2 * 1270616974 ^ -480204209;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s)
    {
      JSONNode jsonNode = (JSONNode) new JSONData(s);
label_1:
      int num1 = -627306350;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1580741172)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 2074095692 ^ -1252785134;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public static implicit operator string(JSONNode d)
    {
      if (d == (object) null)
        goto label_4;
label_1:
      int num1 = -1315726688;
label_2:
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -129436130)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            goto label_3;
          case 3:
            num1 = (int) num2 * -1757158213 ^ 1353229650;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      string str1 = d.Value;
      goto label_5;
label_7:
      string str2;
      return str2;
label_4:
      str1 = (string) null;
label_5:
      str2 = str1;
      num1 = -1743038111;
      goto label_2;
    }

    public static bool operator ==(JSONNode a, object b)
    {
label_1:
      int num1 = -1314259061;
      bool flag1;
      while (true)
      {
        uint num2;
        bool flag2;
        int num3;
        switch ((num2 = (uint) (num1 ^ -1461939730)) % 8U)
        {
          case 0:
            flag1 = true;
            num1 = (int) num2 * 1866302438 ^ 787631889;
            continue;
          case 1:
            flag1 = (object) a == b;
            num1 = -719391912;
            continue;
          case 2:
            int num4 = !flag2 ? -1829175485 : (num4 = -421721486);
            num1 = num4 ^ (int) num2 * -1643049842;
            continue;
          case 3:
            goto label_1;
          case 4:
            num3 = a is JSONLazyCreator ? 1 : 0;
            break;
          case 5:
            if (b == null)
            {
              num1 = (int) num2 * 94660265 ^ -735131817;
              continue;
            }
            num3 = 0;
            break;
          case 7:
            num1 = (int) num2 * 1457090183 ^ 2109913729;
            continue;
          default:
            goto label_12;
        }
        flag2 = num3 != 0;
        num1 = -1643785756;
      }
label_12:
      return flag1;
    }

    public static bool operator !=(JSONNode a, object b)
    {
label_1:
      int num1 = -1304940175;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -764311210)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * 2111615283 ^ -117078143;
            continue;
          case 3:
            flag = !(a == b);
            num1 = (int) num2 * -1194609165 ^ 1092874469;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = 536523380;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2025775761)) % 4U)
        {
          case 0:
            num1 = (int) num2 * 1049938824 ^ 107602075;
            continue;
          case 1:
            flag = (object) this == obj;
            num1 = (int) num2 * -1233851086 ^ -283902697;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override int GetHashCode() => this.\u206C‏⁯⁯‌‫‪‪‬⁫⁯‌⁪⁭​‫‌‎‭‏⁯⁬​‎‮⁫‎‮⁫‮‬‍‭⁯‎⁪‭‍‍‬‮();

    internal static string Escape(string aText)
    {
label_1:
      int num1 = 1039945511;
      string str1;
      string str2;
      char ch1;
      int num2;
      char ch2;
      string str3;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 1542691410)) % 29U)
        {
          case 0:
            num2 = 0;
            num1 = (int) num3 * 1191459786 ^ 394683889;
            continue;
          case 1:
            str1 = aText;
            num1 = (int) num3 * -1828253143 ^ -647984899;
            continue;
          case 2:
            int num4;
            num1 = num4 = num2 < JSONNode.\u206E‎⁮‬⁬‭‭‪‮‏⁮‌‏‏‬‪‪​⁮​​‮⁫​‍‍⁭‬⁯‭⁪‫⁮‫⁪‏⁫‫⁮⁪‮(str1) ? 524067526 : (num4 = 694095137);
            continue;
          case 3:
            int num5;
            num1 = num5 = ch2 != '\\' ? 1500058639 : (num5 = 1861074599);
            continue;
          case 4:
            num1 = (int) num3 * 2121709187 ^ 1746890465;
            continue;
          case 5:
            switch (ch2)
            {
              case '\b':
                goto label_29;
              case '\t':
                goto label_19;
              case '\n':
                goto label_7;
              case '\v':
                goto label_4;
              case '\f':
                goto label_24;
              case '\r':
                goto label_25;
              default:
                num1 = (int) num3 * 1762090580 ^ 136331090;
                continue;
            }
          case 6:
label_25:
            str2 = JSONNode.\u206D⁮‏⁫⁯‮‭‬⁭‫⁭⁬‬‭⁬⁮‭‍‪​‪‪‫‎‫‫‫‍⁪‮⁮⁪‌‭​‎⁮⁮⁯‮(str2, "\\r");
            num1 = 1245438307;
            continue;
          case 7:
            num1 = (int) num3 * 457010191 ^ 223215634;
            continue;
          case 8:
label_19:
            str2 = JSONNode.\u206D⁮‏⁫⁯‮‭‬⁭‫⁭⁬‬‭⁬⁮‭‍‪​‪‪‫‎‫‫‫‍⁪‮⁮⁪‌‭​‎⁮⁮⁯‮(str2, "\\t");
            num1 = 619115821;
            continue;
          case 9:
            num1 = (int) num3 * 688040814 ^ -1916326965;
            continue;
          case 10:
label_7:
            str2 = JSONNode.\u206D⁮‏⁫⁯‮‭‬⁭‫⁭⁬‬‭⁬⁮‭‍‪​‪‪‫‎‫‫‫‍⁪‮⁮⁪‌‭​‎⁮⁮⁯‮(str2, "\\n");
            num1 = 1542145793;
            continue;
          case 11:
            ch2 = ch1;
            num1 = (int) num3 * 2093414185 ^ -2023342231;
            continue;
          case 12:
            str2 = JSONNode.\u206D⁮‏⁫⁯‮‭‬⁭‫⁭⁬‬‭⁬⁮‭‍‪​‪‪‫‎‫‫‫‍⁪‮⁮⁪‌‭​‎⁮⁮⁯‮(str2, "\\\"");
            num1 = 619115821;
            continue;
          case 13:
            num1 = (int) num3 * -910349455 ^ -309635186;
            continue;
          case 15:
            num1 = (int) num3 * 507328696 ^ 799558552;
            continue;
          case 16:
            int num6;
            num1 = num6 = ch2 != '"' ? 1882692232 : (num6 = 212054688);
            continue;
          case 17:
            str2 = "";
            num1 = (int) num3 * -658389938 ^ -1085398608;
            continue;
          case 18:
            num1 = (int) num3 * 999842940 ^ 2041854609;
            continue;
          case 19:
            str2 = JSONNode.\u206D⁮‏⁫⁯‮‭‬⁭‫⁭⁬‬‭⁬⁮‭‍‪​‪‪‫‎‫‫‫‍⁪‮⁮⁪‌‭​‎⁮⁮⁯‮(str2, "\\\\");
            num1 = 619115821;
            continue;
          case 20:
            goto label_1;
          case 21:
label_24:
            str2 = JSONNode.\u206D⁮‏⁫⁯‮‭‬⁭‫⁭⁬‬‭⁬⁮‭‍‪​‪‪‫‎‫‫‫‍⁪‮⁮⁪‌‭​‎⁮⁮⁯‮(str2, "\\f");
            num1 = 619115821;
            continue;
          case 22:
label_29:
            str2 = JSONNode.\u206D⁮‏⁫⁯‮‭‬⁭‫⁭⁬‬‭⁬⁮‭‍‪​‪‪‫‎‫‫‫‍⁪‮⁮⁪‌‭​‎⁮⁮⁯‮(str2, "\\b");
            num1 = 495249795;
            continue;
          case 23:
            ch1 = JSONNode.\u202D⁬⁮⁭‎‭‌⁮⁫‫⁭⁫⁯⁯‍‭⁫‭‌‍⁫‭⁫‫‏⁭‪⁭⁮⁭⁯⁫‌⁮‏‌‌​‫‮‮(str1, num2);
            num1 = 1404983040;
            continue;
          case 24:
            str3 = str2;
            num1 = (int) num3 * -542929698 ^ 1297821615;
            continue;
          case 25:
            num1 = (int) num3 * -1531631322 ^ 1343764106;
            continue;
          case 26:
            num1 = (int) num3 * 1055514268 ^ 1945558058;
            continue;
          case 27:
            ++num2;
            num1 = 248206435;
            continue;
          case 28:
label_4:
            str2 = JSONNode.\u206D⁮‏⁫⁯‮‭‬⁭‫⁭⁬‬‭⁬⁮‭‍‪​‪‪‫‎‫‫‫‍⁪‮⁮⁪‌‭​‎⁮⁮⁯‮(str2, ch1.ToString());
            num1 = 1875857015;
            continue;
          default:
            goto label_31;
        }
      }
label_31:
      return str3;
    }

    public static JSONNode Parse(string aJSON)
    {
      Stack<JSONNode> jsonNodeStack = new Stack<JSONNode>();
label_1:
      int num1 = 1645739553;
      JSONNode jsonNode1;
      JSONNode jsonNode2;
      string aItem;
      string aKey;
      bool flag1;
      bool flag2;
      bool flag3;
      int num2;
      bool flag4;
      bool flag5;
      char ch1;
      char ch2;
      bool flag6;
      bool flag7;
      bool flag8;
      bool flag9;
      char ch3;
      bool flag10;
      bool flag11;
      bool flag12;
      bool flag13;
      bool flag14;
      char ch4;
      bool flag15;
      bool flag16;
      bool flag17;
      bool flag18;
      bool flag19;
      bool flag20;
      string s;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 1237070247)) % 163U)
        {
          case 0:
            switch (ch3)
            {
              case '\t':
                goto label_158;
              case '\n':
              case '\r':
                goto label_91;
              case '\v':
              case '\f':
                goto label_87;
              default:
                num1 = (int) num3 * 105192735 ^ 1188376105;
                continue;
            }
          case 1:
            goto label_90;
          case 2:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num1 = 1832126809;
            continue;
          case 3:
            flag2 = flag5;
            num1 = 1678104268;
            continue;
          case 4:
            num1 = (int) num3 * -305530296 ^ -1252231683;
            continue;
          case 5:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * 954138133 ^ 350291233;
            continue;
          case 6:
          case 11:
          case 48:
          case 75:
          case 98:
label_91:
            ++num2;
            num1 = 381241106;
            continue;
          case 7:
            num1 = (int) num3 * -1778084327 ^ -431982360;
            continue;
          case 8:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -58111746 ^ 850172882;
            continue;
          case 9:
            num1 = (int) num3 * 626519273 ^ -1781821914;
            continue;
          case 10:
            aKey = JSONNode.\u202E‮⁮⁪⁭‏‬‫‏​⁬‫⁬‭⁯‎⁭‪‮⁮‮‍⁪⁯‏‏‫‬​⁮‏‪‬‌‬⁭⁫‪‬⁮‮(aKey);
            flag12 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 516778386 ^ -1554560066;
            continue;
          case 12:
            aItem = JSONNode.\u206D⁮‏⁫⁯‮‭‬⁭‫⁭⁬‬‭⁬⁮‭‍‪​‪‪‫‎‫‫‫‍⁪‮⁮⁪‌‭​‎⁮⁮⁯‮(aItem, JSONNode.\u202D⁬⁮⁭‎‭‌⁮⁫‫⁭⁫⁯⁯‍‭⁫‭‌‍⁫‭⁫‫‏⁭‪⁭⁮⁭⁯⁫‌⁮‏‌‌​‫‮‮(aJSON, num2).ToString());
            num1 = (int) num3 * 1962535968 ^ -83946403;
            continue;
          case 13:
            int num4 = ch2 <= 'f' ? 1128929003 : (num4 = 427343139);
            num1 = num4 ^ (int) num3 * -591462476;
            continue;
          case 14:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 1355198935 ^ 128259972;
            continue;
          case 15:
            num1 = (int) num3 * -2032584491 ^ 1704234038;
            continue;
          case 16:
            int num5;
            num1 = num5 = ch2 == 'f' ? 1149438936 : (num5 = 1564160298);
            continue;
          case 17:
            aItem = JSONNode.\u206D⁮‏⁫⁯‮‭‬⁭‫⁭⁬‬‭⁬⁮‭‍‪​‪‪‫‎‫‫‫‍⁪‮⁮⁪‌‭​‎⁮⁮⁯‮(aItem, JSONNode.\u202D⁬⁮⁭‎‭‌⁮⁫‫⁭⁫⁯⁯‍‭⁫‭‌‍⁫‭⁫‫‏⁭‪⁭⁮⁭⁯⁫‌⁮‏‌‌​‫‮‮(aJSON, num2).ToString());
            num1 = (int) num3 * 1398299905 ^ -332269687;
            continue;
          case 18:
            flag3 = jsonNodeStack.Count == 0;
            num1 = 1251908871;
            continue;
          case 19:
            int num6 = !flag8 ? 1149754049 : (num6 = 1754209160);
            num1 = num6 ^ (int) num3 * -799151273;
            continue;
          case 20:
            flag1 = JSONNode.\u206A⁬‎​‮⁭⁯​‫‪‌‏‍⁬‮⁪‫‮⁫⁫‪‮‮‏​‏‬​‌‎‎‪‫‌‬⁬‎‏⁪⁯‮(aKey, "");
            num1 = 1855720097;
            continue;
          case 21:
            num1 = (int) num3 * 1962183537 ^ -550837048;
            continue;
          case 22:
            int num7 = !(jsonNode1 is JSONArray) ? -1013902648 : (num7 = -1634202735);
            num1 = num7 ^ (int) num3 * -496423146;
            continue;
          case 23:
            aItem = "";
            num1 = (int) num3 * 978932222 ^ 1310934787;
            continue;
          case 24:
            flag18 = flag5;
            num1 = (int) num3 * 1856059542 ^ -1474488855;
            continue;
          case 25:
            int num8 = ch3 == ':' ? 1162484822 : (num8 = 100844375);
            num1 = num8 ^ (int) num3 * -569897645;
            continue;
          case 26:
            int num9 = flag17 ? 257356366 : (num9 = 1354352094);
            num1 = num9 ^ (int) num3 * -2055831328;
            continue;
          case 27:
label_74:
            aItem = JSONNode.\u206D⁮‏⁫⁯‮‭‬⁭‫⁭⁬‬‭⁬⁮‭‍‪​‪‪‫‎‫‫‫‍⁪‮⁮⁪‌‭​‎⁮⁮⁯‮(aItem, "\t");
            num1 = 630256222;
            continue;
          case 28:
            flag17 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 2106494543 ^ 1799066656;
            continue;
          case 29:
            int num10 = flag1 ? 767036939 : (num10 = 392273337);
            num1 = num10 ^ (int) num3 * 642056418;
            continue;
          case 30:
            num1 = (int) num3 * 1358426450 ^ 1559139090;
            continue;
          case 31:
            num1 = (int) num3 * -299137628 ^ 1236196757;
            continue;
          case 32:
            aItem = JSONNode.\u206D⁮‏⁫⁯‮‭‬⁭‫⁭⁬‬‭⁬⁮‭‍‪​‪‪‫‎‫‫‫‍⁪‮⁮⁪‌‭​‎⁮⁮⁯‮(aItem, JSONNode.\u202D⁬⁮⁭‎‭‌⁮⁫‫⁭⁫⁯⁯‍‭⁫‭‌‍⁫‭⁫‫‏⁭‪⁭⁮⁭⁯⁫‌⁮‏‌‌​‫‮‮(aJSON, num2).ToString());
            num1 = (int) num3 * 494738374 ^ 1555447772;
            continue;
          case 33:
            aItem = JSONNode.\u206D⁮‏⁫⁯‮‭‬⁭‫⁭⁬‬‭⁬⁮‭‍‪​‪‪‫‎‫‫‫‍⁪‮⁮⁪‌‭​‎⁮⁮⁯‮(aItem, JSONNode.\u202D⁬⁮⁭‎‭‌⁮⁫‫⁭⁫⁯⁯‍‭⁫‭‌‍⁫‭⁫‫‏⁭‪⁭⁮⁭⁯⁫‌⁮‏‌‌​‫‮‮(aJSON, num2).ToString());
            num1 = (int) num3 * 1259127109 ^ 1236730194;
            continue;
          case 34:
label_158:
            flag10 = flag5;
            num1 = 327994331;
            continue;
          case 35:
            num1 = (int) num3 * -294133146 ^ -1491733063;
            continue;
          case 36:
            num1 = 786326617;
            continue;
          case 37:
            num1 = (int) num3 * 1749123304 ^ -1429837962;
            continue;
          case 38:
            num2 += 4;
            num1 = (int) num3 * 1608180720 ^ -1387035463;
            continue;
          case 39:
            num1 = (int) num3 * 1652204733 ^ -277709175;
            continue;
          case 40:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -1318160389 ^ 1939872705;
            continue;
          case 41:
            flag15 = jsonNode1 != (object) null;
            num1 = (int) num3 * -624119437 ^ 1074094774;
            continue;
          case 42:
            num1 = (int) num3 * 1233212339 ^ -1524259118;
            continue;
          case 43:
            num1 = (int) num3 * 59760758 ^ -783330602;
            continue;
          case 44:
            ch3 = JSONNode.\u202D⁬⁮⁭‎‭‌⁮⁫‫⁭⁫⁯⁯‍‭⁫‭‌‍⁫‭⁫‫‏⁭‪⁭⁮⁭⁯⁫‌⁮‏‌‌​‫‮‮(aJSON, num2);
            int num11;
            num1 = num11 = ch3 > ',' ? 1053418040 : (num11 = 1954233654);
            continue;
          case 45:
            aItem = JSONNode.\u206D⁮‏⁫⁯‮‭‬⁭‫⁭⁬‬‭⁬⁮‭‍‪​‪‪‫‎‫‫‫‍⁪‮⁮⁪‌‭​‎⁮⁮⁯‮(aItem, "\b");
            num1 = 780470158;
            continue;
          case 46:
            int num12;
            num1 = num12 = num2 >= JSONNode.\u206E‎⁮‬⁬‭‭‪‮‏⁮‌‏‏‬‪‪​⁮​​‮⁫​‍‍⁭‬⁯‭⁪‫⁮‫⁪‏⁫‫⁮⁪‮(aJSON) ? 593094532 : (num12 = 933460292);
            continue;
          case 47:
            goto label_1;
          case 49:
            int num13 = !flag6 ? 1065137797 : (num13 = 1159651600);
            num1 = num13 ^ (int) num3 * 1235423782;
            continue;
          case 50:
            goto label_114;
          case 51:
            flag16 = flag5;
            num1 = (int) num3 * 912681158 ^ 491430972;
            continue;
          case 52:
            int num14 = flag3 ? -2136084503 : (num14 = -696686045);
            num1 = num14 ^ (int) num3 * 2053168109;
            continue;
          case 53:
            int num15 = !flag12 ? -689694417 : (num15 = -337998549);
            num1 = num15 ^ (int) num3 * -1392909445;
            continue;
          case 54:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 789769681 ^ 1102787990;
            continue;
          case 55:
            switch (ch2)
            {
              case 'r':
                goto label_96;
              case 's':
                goto label_92;
              case 't':
                goto label_74;
              case 'u':
                goto label_154;
              default:
                num1 = 2069854515;
                continue;
            }
          case 56:
            num1 = (int) num3 * -796818501 ^ -424447010;
            continue;
          case 57:
            num1 = (int) num3 * 1992437153 ^ -116305549;
            continue;
          case 58:
            int num16 = !flag11 ? 1624237084 : (num16 = 1484453193);
            num1 = num16 ^ (int) num3 * -1740210443;
            continue;
          case 59:
            ch2 = ch1;
            num1 = (int) num3 * -481343013 ^ 1821664744;
            continue;
          case 60:
            flag7 = JSONNode.\u206A⁬‎​‮⁭⁯​‫‪‌‏‍⁬‮⁪‫‮⁫⁫‪‮‮‏​‏‬​‌‎‎‪‫‌‬⁬‎‏⁪⁯‮(aKey, "");
            num1 = 1569459640;
            continue;
          case 61:
            flag4 = JSONNode.\u206A⁬‎​‮⁭⁯​‫‪‌‏‍⁬‮⁪‫‮⁫⁫‪‮‮‏​‏‬​‌‎‎‪‫‌‬⁬‎‏⁪⁯‮(aKey, "");
            num1 = 2087528226;
            continue;
          case 62:
            num1 = (int) num3 * 1329151817 ^ -1902518903;
            continue;
          case 63:
            flag13 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 1354940926 ^ -1197655858;
            continue;
          case 64:
            aItem = "";
            num1 = (int) num3 * 427209998 ^ -113573338;
            continue;
          case 65:
            aKey = "";
            aItem = "";
            flag6 = jsonNodeStack.Count > 0;
            num1 = 569358701;
            continue;
          case 66:
            switch (ch3)
            {
              case '[':
                goto label_124;
              case '\\':
                goto label_157;
              case ']':
                goto label_66;
              default:
                num1 = 1377496864;
                continue;
            }
          case 67:
            ch4 = JSONNode.\u202D⁬⁮⁭‎‭‌⁮⁫‫⁭⁫⁯⁯‍‭⁫‭‌‍⁫‭⁫‫‏⁭‪⁭⁮⁭⁯⁫‌⁮‏‌‌​‫‮‮(aJSON, num2);
            num1 = (int) num3 * -191583734 ^ 646956663;
            continue;
          case 68:
            int num17;
            num1 = num17 = ch3 != ' ' ? 1710099019 : (num17 = 943954147);
            continue;
          case 69:
            num1 = (int) num3 * 1497336255 ^ 1384420221;
            continue;
          case 70:
            num1 = (int) num3 * 1363698649 ^ 610841346;
            continue;
          case 71:
            num1 = (int) num3 * 1245279805 ^ -1237471118;
            continue;
          case 72:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -2113031003 ^ -903782005;
            continue;
          case 73:
            int num18;
            num1 = num18 = ch3 != '"' ? 47836241 : (num18 = 459738606);
            continue;
          case 74:
            num1 = (int) num3 * -464186168 ^ 878718206;
            continue;
          case 76:
            num1 = (int) num3 * -1541213209 ^ -1380415556;
            continue;
          case 77:
            int num19;
            num1 = num19 = flag5 ? 820579449 : (num19 = 1737773352);
            continue;
          case 78:
            int num20 = flag7 ? -547923835 : (num20 = -514538845);
            num1 = num20 ^ (int) num3 * 1209938580;
            continue;
          case 79:
            aItem = JSONNode.\u206D⁮‏⁫⁯‮‭‬⁭‫⁭⁬‬‭⁬⁮‭‍‪​‪‪‫‎‫‫‫‍⁪‮⁮⁪‌‭​‎⁮⁮⁯‮(aItem, ((char) int.Parse(s, NumberStyles.AllowHexSpecifier)).ToString());
            num1 = (int) num3 * 1264105519 ^ -872283276;
            continue;
          case 80:
            int num21 = !flag9 ? 1031457813 : (num21 = 31844973);
            num1 = num21 ^ (int) num3 * 99540788;
            continue;
          case 81:
            int num22;
            num1 = num22 = ch3 > ']' ? 1428173560 : (num22 = 1303562469);
            continue;
          case 82:
            num1 = (int) num3 * 1778210838 ^ 2101849402;
            continue;
          case 83:
            aKey = JSONNode.\u202E‮⁮⁪⁭‏‬‫‏​⁬‫⁬‭⁯‎⁭‪‮⁮‮‍⁪⁯‏‏‫‬​⁮‏‪‬‌‬⁭⁫‪‬⁮‮(aKey);
            num1 = (int) num3 * 1834888628 ^ 1261702764;
            continue;
          case 84:
            int num23 = flag14 ? -546169145 : (num23 = -1116712034);
            num1 = num23 ^ (int) num3 * -2008342042;
            continue;
          case 85:
            num1 = 239786936;
            continue;
          case 86:
            num1 = (int) num3 * 1406268087 ^ -905292442;
            continue;
          case 87:
            num1 = (int) num3 * -1200007510 ^ -1792814193;
            continue;
          case 88:
            num2 = 0;
            num1 = (int) num3 * -1968604305 ^ 1553311277;
            continue;
          case 89:
            num1 = (int) num3 * -445601 ^ -1466898791;
            continue;
          case 90:
            int num24 = !flag2 ? 83462135 : (num24 = 1315939220);
            num1 = num24 ^ (int) num3 * -793921568;
            continue;
          case 91:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            num1 = 1473707979;
            continue;
          case 92:
            num1 = (int) num3 * -2131318931 ^ -664287829;
            continue;
          case 93:
            int num25;
            num1 = num25 = ch2 != 'n' ? 1628864297 : (num25 = 56060208);
            continue;
          case 95:
            int num26 = flag4 ? 638156098 : (num26 = 34367814);
            num1 = num26 ^ (int) num3 * -1048217399;
            continue;
          case 96:
            aKey = "";
            num1 = 1415872196;
            continue;
          case 97:
            num1 = (int) num3 * 253261272 ^ -738196582;
            continue;
          case 99:
label_87:
            aItem = JSONNode.\u206D⁮‏⁫⁯‮‭‬⁭‫⁭⁬‬‭⁬⁮‭‍‪​‪‪‫‎‫‫‫‍⁪‮⁮⁪‌‭​‎⁮⁮⁯‮(aItem, JSONNode.\u202D⁬⁮⁭‎‭‌⁮⁫‫⁭⁫⁯⁯‍‭⁫‭‌‍⁫‭⁫‫‏⁭‪⁭⁮⁭⁯⁫‌⁮‏‌‌​‫‮‮(aJSON, num2).ToString());
            num1 = 602135472;
            continue;
          case 100:
label_66:
            flag9 = flag5;
            num1 = 474005791;
            continue;
          case 101:
            int num27;
            num1 = num27 = ch3 != '{' ? 1087581978 : (num27 = 1358501111);
            continue;
          case 102:
            int num28 = !flag13 ? 1133071209 : (num28 = 2070765760);
            num1 = num28 ^ (int) num3 * 61221406;
            continue;
          case 103:
            num1 = (int) num3 * 611938902 ^ 69696458;
            continue;
          case 104:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 56677079 ^ 1019081499;
            continue;
          case 105:
            jsonNode2 = jsonNode1;
            num1 = 1343171624;
            continue;
          case 106:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * 482194956 ^ -2057350196;
            continue;
          case 107:
            num1 = (int) num3 * 1169131642 ^ 37998137;
            continue;
          case 108:
label_96:
            aItem = JSONNode.\u206D⁮‏⁫⁯‮‭‬⁭‫⁭⁬‬‭⁬⁮‭‍‪​‪‪‫‎‫‫‫‍⁪‮⁮⁪‌‭​‎⁮⁮⁯‮(aItem, "\r");
            num1 = 114826737;
            continue;
          case 109:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -1308322109 ^ 1154507047;
            continue;
          case 110:
            jsonNodeStack.Pop();
            flag14 = JSONNode.\u206A⁬‎​‮⁭⁯​‫‪‌‏‍⁬‮⁪‫‮⁫⁫‪‮‮‏​‏‬​‌‎‎‪‫‌‬⁬‎‏⁪⁯‮(aItem, "");
            num1 = 914877052;
            continue;
          case 111:
            num1 = 1725332409;
            continue;
          case 112:
            num1 = (int) num3 * -1761889617 ^ 167619552;
            continue;
          case 113:
            int num29 = ch2 == 'b' ? 940618637 : (num29 = 912368270);
            num1 = num29 ^ (int) num3 * 1610079273;
            continue;
          case 114:
            int num30 = !flag16 ? -2055938322 : (num30 = -1039148663);
            num1 = num30 ^ (int) num3 * -2101181455;
            continue;
          case 115:
            aItem = "";
            num1 = (int) num3 * -132926873 ^ -936432660;
            continue;
          case 116:
            num1 = (int) num3 * -946170615 ^ -1570209430;
            continue;
          case 117:
            aItem = JSONNode.\u206D⁮‏⁫⁯‮‭‬⁭‫⁭⁬‬‭⁬⁮‭‍‪​‪‪‫‎‫‫‫‍⁪‮⁮⁪‌‭​‎⁮⁮⁯‮(aItem, JSONNode.\u202D⁬⁮⁭‎‭‌⁮⁫‫⁭⁫⁯⁯‍‭⁫‭‌‍⁫‭⁫‫‏⁭‪⁭⁮⁭⁯⁫‌⁮‏‌‌​‫‮‮(aJSON, num2).ToString());
            num1 = (int) num3 * 1791489510 ^ 1022931843;
            continue;
          case 118:
            num1 = (int) num3 * 1844860273 ^ -1663057379;
            continue;
          case 119:
            num1 = (int) num3 * -195838334 ^ 136205514;
            continue;
          case 120:
            aKey = "";
            aItem = "";
            num1 = 1590912278;
            continue;
          case 121:
            flag5 = false;
            num1 = (int) num3 * 1558447454 ^ -306706093;
            continue;
          case 122:
            num1 = (int) num3 * 2110853871 ^ 2006813068;
            continue;
          case 123:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num3 * 1953845388 ^ 229398698;
            continue;
          case 124:
            aItem = JSONNode.\u206D⁮‏⁫⁯‮‭‬⁭‫⁭⁬‬‭⁬⁮‭‍‪​‪‪‫‎‫‫‫‍⁪‮⁮⁪‌‭​‎⁮⁮⁯‮(aItem, "\n");
            num1 = 407269481;
            continue;
          case 125:
            num1 = (int) num3 * 256989166 ^ 1897865981;
            continue;
          case 126:
            num1 = (int) num3 * -1251054514 ^ -328349828;
            continue;
          case (uint) sbyte.MaxValue:
            int num31;
            num1 = num31 = ch3 != '}' ? 515187302 : (num31 = 380455742);
            continue;
          case 128:
            num1 = (int) num3 * 1685601243 ^ 1920443361;
            continue;
          case 129:
            int num32 = !flag15 ? 1994949147 : (num32 = 1284178325);
            num1 = num32 ^ (int) num3 * -1327256887;
            continue;
          case 130:
            num1 = (int) num3 * -18391912 ^ -641679029;
            continue;
          case 131:
            num1 = (int) num3 * 542651612 ^ -1737024407;
            continue;
          case 132:
            num1 = (int) num3 * 1957923791 ^ -2002494502;
            continue;
          case 133:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -888278977 ^ -767181248;
            continue;
          case 134:
            int num33 = !flag18 ? -1031816321 : (num33 = -2044417960);
            num1 = num33 ^ (int) num3 * -1943627187;
            continue;
          case 135:
            aKey = aItem;
            num1 = 1767677695;
            continue;
          case 136:
            num1 = (int) num3 * 239835488 ^ -15320802;
            continue;
          case 137:
            int num34 = flag10 ? 1089800600 : (num34 = 358060062);
            num1 = num34 ^ (int) num3 * 912340814;
            continue;
          case 138:
            int num35;
            num1 = num35 = !JSONNode.\u206A⁬‎​‮⁭⁯​‫‪‌‏‍⁬‮⁪‫‮⁫⁫‪‮‮‏​‏‬​‌‎‎‪‫‌‬⁬‎‏⁪⁯‮(aKey, "") ? 1960515875 : (num35 = 968570697);
            continue;
          case 139:
            int num36 = flag20 ? 1140723083 : (num36 = 1150444220);
            num1 = num36 ^ (int) num3 * -1951122129;
            continue;
          case 140:
label_92:
            aItem = JSONNode.\u206D⁮‏⁫⁯‮‭‬⁭‫⁭⁬‬‭⁬⁮‭‍‪​‪‪‫‎‫‫‫‍⁪‮⁮⁪‌‭​‎⁮⁮⁯‮(aItem, ch4.ToString());
            num1 = 630256222;
            continue;
          case 141:
            flag11 = jsonNode1 != (object) null;
            num1 = (int) num3 * 844892426 ^ 1590060942;
            continue;
          case 142:
            aKey = "";
            num1 = (int) num3 * -1099389619 ^ 2105362745;
            continue;
          case 143:
            int num37;
            num1 = num37 = ch3 != ',' ? 1254971091 : (num37 = 1600137439);
            continue;
          case 144:
            aKey = "";
            aItem = "";
            num1 = 1038688734;
            continue;
          case 145:
label_157:
            ++num2;
            num1 = 232979165;
            continue;
          case 146:
            aKey = JSONNode.\u202E‮⁮⁪⁭‏‬‫‏​⁬‫⁬‭⁯‎⁭‪‮⁮‮‍⁪⁯‏‏‫‬​⁮‏‪‬‌‬⁭⁫‪‬⁮‮(aKey);
            num1 = (int) num3 * -83730424 ^ 1882075939;
            continue;
          case 147:
            aItem = JSONNode.\u206D⁮‏⁫⁯‮‭‬⁭‫⁭⁬‬‭⁬⁮‭‍‪​‪‪‫‎‫‫‫‍⁪‮⁮⁪‌‭​‎⁮⁮⁯‮(aItem, JSONNode.\u202D⁬⁮⁭‎‭‌⁮⁫‫⁭⁫⁯⁯‍‭⁫‭‌‍⁫‭⁫‫‏⁭‪⁭⁮⁭⁯⁫‌⁮‏‌‌​‫‮‮(aJSON, num2).ToString());
            num1 = (int) num3 * 1028456440 ^ 1811050121;
            continue;
          case 148:
            aItem = JSONNode.\u206D⁮‏⁫⁯‮‭‬⁭‫⁭⁬‬‭⁬⁮‭‍‪​‪‪‫‎‫‫‫‍⁪‮⁮⁪‌‭​‎⁮⁮⁯‮(aItem, "\f");
            num1 = 2073510739;
            continue;
          case 149:
            num1 = (int) num3 * -792435622 ^ 213421873;
            continue;
          case 150:
            int num38 = flag19 ? 1338810330 : (num38 = 525294429);
            num1 = num38 ^ (int) num3 * -268660004;
            continue;
          case 151:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -1214216238 ^ 1144398182;
            continue;
          case 152:
            flag8 = flag5;
            num1 = 1087900217;
            continue;
          case 153:
            flag20 = JSONNode.\u206A⁬‎​‮⁭⁯​‫‪‌‏‍⁬‮⁪‫‮⁫⁫‪‮‮‏​‏‬​‌‎‎‪‫‌‬⁬‎‏⁪⁯‮(aItem, "");
            num1 = 1599260875;
            continue;
          case 154:
label_124:
            flag19 = flag5;
            num1 = 1100925786;
            continue;
          case 155:
            ch1 = ch4;
            num1 = (int) num3 * 531125678 ^ -1081913914;
            continue;
          case 156:
            num1 = (int) num3 * 1804540354 ^ -100196408;
            continue;
          case 157:
            num1 = 1873601640;
            continue;
          case 158:
            flag5 = !flag5;
            num1 = 1127252750;
            continue;
          case 159:
label_154:
            s = JSONNode.\u200D⁮‭‏‫⁮‍‍⁯⁪‭‭⁯‎‮‍⁯‌‌⁮⁯‬‪⁮⁫​‎⁯‭⁭⁯⁮‪⁯‪‭‪⁪​‭‮(aJSON, num2 + 1, 4);
            num1 = 892052887;
            continue;
          case 160:
            int num39 = ch3 > ' ' ? -961273343 : (num39 = -1569491569);
            num1 = num39 ^ (int) num3 * -438899997;
            continue;
          case 161:
            num1 = 1966576220;
            continue;
          case 162:
            num1 = (int) num3 * 1498059154 ^ -545784144;
            continue;
          default:
            goto label_163;
        }
      }
label_90:
      throw JSONNode.\u206F‫⁫‮‍⁯‏⁬‪‮‫‭‫‌‬‏‮​‪‌⁭‫‮‮‍⁯‭⁫‭‎‍‎⁪​‎‍‏⁪⁮⁫‮("JSON Parse: Quotation marks seems to be messed up.");
label_114:
      throw JSONNode.\u206F‫⁫‮‍⁯‏⁬‪‮‫‭‫‌‬‏‮​‪‌⁭‫‮‮‍⁯‭⁫‭‎‍‎⁪​‎‍‏⁪⁮⁫‮("JSON Parse: Too many closing brackets");
label_163:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
label_1:
      int num1 = 1184422411;
      BinaryWriter aWriter;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1661759159)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            aWriter = JSONNode.\u202C‎‎‏‌⁭‬‏‫⁪⁬‎‏‪‪‌⁭⁯‍‌‮‫⁬⁯‮‫⁯⁫‌‌⁯⁬‭⁪‪‎​‭‮‫‮(aData);
            num1 = (int) num2 * -371813689 ^ 1492399440;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      this.Serialize(aWriter);
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u206F‫⁫‮‍⁯‏⁬‪‮‫‭‫‌‬‏‮​‪‌⁭‫‮‮‍⁯‭⁫‭‎‍‎⁪​‎‍‏⁪⁮⁫‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u206F‫⁫‮‍⁯‏⁬‪‮‫‭‫‌‬‏‮​‪‌⁭‫‮‮‍⁯‭⁫‭‎‍‎⁪​‎‍‏⁪⁮⁫‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u206F‫⁫‮‍⁯‏⁬‪‮‫‭‫‌‬‏‮​‪‌⁭‫‮‮‍⁯‭⁫‭‎‍‎⁪​‎‍‏⁪⁮⁫‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
      JSONNode.\u200D‪‍‎‫‪‭⁯‏​‎‌⁫‍‫‬⁬‮‎‬‍‪‫‬‍‌‮‫‬⁫‭‪‫‪‭⁮⁯‌⁬‮(JSONNode.\u200B⁯‎⁪‬‫⁪‍⁫‏⁬⁭⁫⁬⁯‮‭⁬‬‏‬‭‏‎‍⁯⁫‮‫‮‮‬‫​​​⁯‎⁪‮‮((FileSystemInfo) JSONNode.\u200E⁫⁪⁫⁪‎‫⁬‫‭‌⁬‍⁭⁮⁫⁫‬⁪‫⁭‬​⁬‫‮⁫‌⁬‪‏‪‪⁭‭⁭‌⁭⁭⁯‮(JSONNode.\u200B‫‮‫‪⁭‪​‍​‭⁯‍⁭‏‪⁪⁪‌⁬‪‬⁪‮‬‫‎‏‌‌‭⁬‭⁫‭‮‎‌‮‫‮(aFileName))));
      FileStream aData = JSONNode.\u206C‌‭‏‎‬‎‮​⁬‮‪‮‬⁫‮⁮‮⁭‎‫‎​‌‮‪⁪‪​‭⁮⁪‪‪‫‌‬⁪⁯⁭‮(aFileName);
      try
      {
        this.SaveToStream((Stream) aData);
label_2:
        int num1 = 1848829275;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1225907025)) % 4U)
          {
            case 0:
              goto label_2;
            case 1:
              num1 = (int) num2 * 882494937 ^ 1832142771;
              continue;
            case 2:
              num1 = (int) num2 * 622156051 ^ -461683114;
              continue;
            case 3:
              goto label_10;
            default:
              goto label_6;
          }
        }
label_10:
        return;
label_6:;
      }
      finally
      {
        if (aData != null)
        {
label_8:
          int num3 = 1445695476;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 1225907025)) % 4U)
            {
              case 1:
                JSONNode.\u206A⁯⁬⁪‏⁪⁭‮‍⁭‏‭⁯‭⁯‫‏‮‫‫⁫‌‏⁭⁮‌‎‭‭​​⁭‎‮‮⁫‎⁬‪‫‮((IDisposable) aData);
                num3 = (int) num4 * -1716135596 ^ 2017970602;
                continue;
              case 2:
                goto label_8;
              case 3:
                num3 = (int) num4 * 2141964837 ^ 1087098554;
                continue;
              default:
                goto label_13;
            }
          }
        }
label_13:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u200C‬‫⁫‌‏‮⁬⁮⁬‮​‮​‏⁭‮‍⁯⁬‫⁬‎​⁮⁫‮⁮‭‪‭⁪⁪⁯‬‎‌​⁭‮‮();
      try
      {
label_2:
        int num1 = 982286362;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 16721295)) % 5U)
          {
            case 0:
              num1 = (int) num2 * -170963570 ^ 548904716;
              continue;
            case 1:
              JSONNode.\u200D‬‬‌‪⁭‍⁭‫‭‬‍⁯⁪⁫⁪⁬⁪⁬‮⁮‭⁪‍⁪⁫‮‪‪⁯‍⁬⁯‪⁯⁪​‪⁯‪‮((Stream) aData, 0L);
              num1 = (int) num2 * -835324370 ^ -32659147;
              continue;
            case 2:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * 1171142120 ^ 2113892933;
              continue;
            case 4:
              goto label_2;
            default:
              goto label_7;
          }
        }
label_7:
        return JSONNode.\u202B‬‫‬⁯‏⁬⁫⁬⁯⁬‌⁯‪⁬‫⁭‎⁮‫‍‍‎‪​⁯⁮⁬⁬‍‫⁯​‬‫⁭⁯⁯⁯⁫‮(JSONNode.\u206E⁬‮‌⁪‍⁭⁯⁭⁮⁮⁫‫⁭​⁪‌‍‌​‪⁭‬‮⁭⁪⁮⁬‫‬⁮‏⁪⁫‪‏‬⁭‍‏‮(aData));
      }
      finally
      {
        if (aData != null)
        {
label_9:
          int num3 = 834578578;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 16721295)) % 4U)
            {
              case 0:
                goto label_9;
              case 1:
                JSONNode.\u206A⁯⁬⁪‏⁪⁭‮‍⁭‏‭⁯‭⁯‫‏‮‫‫⁫‌‏⁭⁮‌‎‭‭​​⁭‎‮‮⁫‎⁬‪‫‮((IDisposable) aData);
                num3 = (int) num4 * 451156952 ^ 716122572;
                continue;
              case 3:
                num3 = (int) num4 * -1199826664 ^ -427145771;
                continue;
              default:
                goto label_13;
            }
          }
        }
label_13:;
      }
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
label_1:
      int num1 = -88360968;
      JSONArray jsonArray;
      JSONNode jsonNode;
      int num2;
      int num3;
      int num4;
      int num5;
      bool flag1;
      JSONClass jsonClass;
      bool flag2;
      JSONBinaryTag jsonBinaryTag1;
      JSONBinaryTag jsonBinaryTag2;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ -386934921)) % 38U)
        {
          case 0:
            num1 = (int) num6 * -1630914467 ^ 1490478561;
            continue;
          case 1:
            num1 = (int) num6 * -867588693 ^ -890414143;
            continue;
          case 2:
label_4:
            num1 = -1761516508;
            continue;
          case 3:
            ++num3;
            num1 = (int) num6 * -45907215 ^ -4377710;
            continue;
          case 4:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * -1538542966 ^ -895983883;
            continue;
          case 5:
            goto label_1;
          case 6:
label_15:
            num1 = -413400958;
            continue;
          case 7:
            num5 = JSONNode.\u206B‬⁭⁯‎‍⁪⁬​⁫‫‪‍⁮⁪‍‌⁬‫‏‪⁫‭‪⁭⁯‭‮‪‫‏‌‭‍‪‏‫‪⁯‌‮(aReader);
            num1 = (int) num6 * -442774417 ^ -227950711;
            continue;
          case 9:
            num1 = -61115617;
            continue;
          case 10:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            num1 = -1475253605;
            continue;
          case 11:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206C‏‮⁮⁯‍‫⁪⁭⁬‬⁫‫⁭⁮‫⁬‍⁪​‏‭⁭⁫‫⁯⁬‮⁫‏‏⁫⁯​‍⁪‌‍‍‪‮(aReader));
            num1 = (int) num6 * -1122581279 ^ 1596150461;
            continue;
          case 12:
label_36:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202C‮‏‭‮⁮⁭‍‭‬‪‮‬⁫⁭⁫​⁭‍‏‫‪‪‭‏‪‮‌⁯‮‎‏⁪⁬⁮‍⁬‭​‏‮(aReader));
            num1 = -1580053346;
            continue;
          case 13:
            jsonClass = new JSONClass();
            num4 = 0;
            num1 = (int) num6 * 1412128953 ^ -1672255109;
            continue;
          case 14:
label_21:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206F‫‎‌‌‏‍⁮‎‫‬‪​‫‮‍​‏‮‭⁭‫​‌⁯‌‬⁭‌‮⁭​⁮‪⁪‎‏⁪‎‮‮(aReader));
            num1 = -2067632551;
            continue;
          case 15:
            num2 = JSONNode.\u206B‬⁭⁯‎‍⁪⁬​⁫‫‪‍⁮⁪‍‌⁬‫‏‪⁫‭‪⁭⁯‭‮‪‫‏‌‭‍‪‏‫‪⁯‌‮(aReader);
            jsonArray = new JSONArray();
            num3 = 0;
            num1 = (int) num6 * -67836669 ^ -196994966;
            continue;
          case 16:
            int num7 = flag2 ? -52248639 : (num7 = -1220643671);
            num1 = num7 ^ (int) num6 * 1108389441;
            continue;
          case 17:
label_25:
            num1 = -1255529880;
            continue;
          case 18:
            switch (jsonBinaryTag1)
            {
              case JSONBinaryTag.Array:
                goto label_25;
              case JSONBinaryTag.Class:
                goto label_15;
              case JSONBinaryTag.Value:
                goto label_4;
              case JSONBinaryTag.IntValue:
                goto label_18;
              case JSONBinaryTag.DoubleValue:
                goto label_31;
              case JSONBinaryTag.BoolValue:
                goto label_21;
              case JSONBinaryTag.FloatValue:
                goto label_36;
              default:
                num1 = (int) num6 * -1538311522 ^ 374575730;
                continue;
            }
          case 19:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * -1656091032 ^ 1077866370;
            continue;
          case 20:
            flag2 = num3 < num2;
            num1 = -1518613067;
            continue;
          case 21:
            num1 = -1259737453;
            continue;
          case 22:
            num1 = (int) num6 * -548508058 ^ 1419746573;
            continue;
          case 23:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202C‪⁭‌‪⁪‍‮‪⁮⁮⁬​‭‎‎⁫⁭⁪‫‎⁮‪‪⁬⁫‏​‎‮‮‬‪‫​‌⁭‎‎⁬‮(aReader));
            num1 = (int) num6 * 1212161430 ^ -1800649483;
            continue;
          case 24:
            jsonBinaryTag1 = jsonBinaryTag2;
            num1 = (int) num6 * -1124476426 ^ 190586031;
            continue;
          case 25:
            num1 = (int) num6 * -619797328 ^ 1467735325;
            continue;
          case 26:
            num1 = (int) num6 * 18609625 ^ 406402328;
            continue;
          case 27:
            flag1 = num4 < num5;
            num1 = -2119758195;
            continue;
          case 28:
            goto label_37;
          case 29:
            num1 = (int) num6 * 100694587 ^ -825546802;
            continue;
          case 30:
            int num8 = flag1 ? -1105711896 : (num8 = -970778468);
            num1 = num8 ^ (int) num6 * 314694865;
            continue;
          case 31:
            num1 = (int) num6 * 384545578 ^ -954018345;
            continue;
          case 32:
            num1 = (int) num6 * 1926076835 ^ 12569767;
            continue;
          case 33:
            jsonBinaryTag2 = (JSONBinaryTag) JSONNode.\u202D‎‍‍‬‮⁮‭‭​‭​‪‮‭‏‎‏⁯‌‮‬‪⁮‪‪‎​‭⁮⁭⁫‍‫‭⁯‭⁬‎‮‮(aReader);
            num1 = (int) num6 * 520506013 ^ -1193740166;
            continue;
          case 34:
label_31:
            num1 = -69965076;
            continue;
          case 35:
label_18:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206B‬⁭⁯‎‍⁪⁬​⁫‫‪‍⁮⁪‍‌⁬‫‏‪⁫‭‪⁭⁯‭‮‪‫‏‌‭‍‪‏‫‪⁯‌‮(aReader));
            num1 = -686790046;
            continue;
          case 36:
            string aKey = JSONNode.\u206C‏‮⁮⁯‍‫⁪⁭⁬‬⁫‫⁭⁮‫⁬‍⁪​‏‭⁭⁫‫⁯⁬‮⁫‏‏⁫⁯​‍⁪‌‍‍‪‮(aReader);
            JSONNode aItem = JSONNode.Deserialize(aReader);
            jsonClass.Add(aKey, aItem);
            ++num4;
            num1 = (int) num6 * -2046563199 ^ -1591837618;
            continue;
          case 37:
            num1 = (int) num6 * -1094006371 ^ 704567308;
            continue;
          default:
            goto label_40;
        }
      }
label_37:
      throw JSONNode.\u206F‫⁫‮‍⁯‏⁬‪‮‫‭‫‌‬‏‮​‪‌⁭‫‮‮‍⁯‭⁫‭‎‍‎⁪​‎‍‏⁪⁮⁫‮(JSONNode.\u206D⁮‏⁫⁯‮‭‬⁭‫⁭⁬‬‭⁬⁮‭‍‪​‪‪‫‎‫‫‫‍⁪‮⁮⁪‌‭​‎⁮⁮⁯‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag2.ToString()));
label_40:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u206F‫⁫‮‍⁯‏⁬‪‮‫‭‫‌‬‏‮​‪‌⁭‫‮‮‍⁯‭⁫‭‎‍‎⁪​‎‍‏⁪⁮⁫‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u206F‫⁫‮‍⁯‏⁬‪‮‫‭‫‌‬‏‮​‪‌⁭‫‮‮‍⁯‭⁫‭‎‍‎⁪​‎‍‏⁪⁮⁫‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u206F‫⁫‮‍⁯‏⁬‪‮‫‭‫‌‬‏‮​‪‌⁭‫‮‮‍⁯‭⁫‭‎‍‎⁪​‎‍‏⁪⁮⁫‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u200F‭‬‮‮‎⁭‍⁮​⁬‫‏‬‏‭‭‪⁮‫⁫‫⁫‎⁪⁫‬‬‌‭‬‮⁯‮‭‬‍‏‬⁮‮(aData);
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = 286069743;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1089222580)) % 3U)
          {
            case 1:
              jsonNode = JSONNode.Deserialize(aReader);
              num1 = (int) num2 * 1837595955 ^ 890657931;
              continue;
            case 2:
              goto label_2;
            default:
              goto label_11;
          }
        }
      }
      finally
      {
        if (aReader != null)
        {
label_6:
          int num3 = 814887527;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 1089222580)) % 4U)
            {
              case 0:
                goto label_6;
              case 2:
                num3 = (int) num4 * -1820093291 ^ -1551840545;
                continue;
              case 3:
                JSONNode.\u206A⁯⁬⁪‏⁪⁭‮‍⁭‏‭⁯‭⁯‫‏‮‫‫⁫‌‏⁭⁮‌‎‭‭​​⁭‎‮‮⁫‎⁬‪‫‮((IDisposable) aReader);
                num3 = (int) num4 * 512209521 ^ 1474986677;
                continue;
              default:
                goto label_10;
            }
          }
        }
label_10:;
      }
label_11:
      return jsonNode;
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u202D‎⁬‮⁯⁯⁪⁫‬‭⁬‏‭⁫⁫⁬⁯‌⁫‌⁯⁪⁪‬‏‬⁭​‫‪⁬​⁬⁪‏‮‮‬⁭‭‮(aFileName);
      try
      {
        return JSONNode.LoadFromStream((Stream) aData);
      }
      finally
      {
        if (aData != null)
        {
label_3:
          int num1 = -422290311;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ -1918020914)) % 4U)
            {
              case 0:
                goto label_3;
              case 1:
                num1 = (int) num2 * 859750129 ^ -74122299;
                continue;
              case 3:
                JSONNode.\u206A⁯⁬⁪‏⁪⁭‮‍⁭‏‭⁯‭⁯‫‏‮‫‫⁫‌‏⁭⁮‌‎‭‭​​⁭‎‮‮⁫‎⁬‪‫‮((IDisposable) aData);
                num1 = (int) num2 * 1662152552 ^ 553750935;
                continue;
              default:
                goto label_7;
            }
          }
        }
label_7:;
      }
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
label_1:
      int num1 = 1857821089;
      MemoryStream aData;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1488158975)) % 5U)
        {
          case 0:
            JSONNode.\u200D‬‬‌‪⁭‍⁭‫‭‬‍⁯⁪⁫⁪⁬⁪⁬‮⁮‭⁪‍⁪⁫‮‪‪⁯‍⁬⁯‪⁯⁪​‪⁯‪‮((Stream) aData, 0L);
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * 1824585204 ^ 1283285117;
            continue;
          case 1:
            aData = JSONNode.\u200E‎‭⁮⁮⁬⁭⁭‭‌‏​⁬⁪‎‍⁮‌‍‏‎⁯‏⁭‭⁯‮⁪‪‏⁯‎⁫⁪‪‏‪⁮⁭⁭‮(JSONNode.\u202C‌⁭‫⁫‫‬⁫⁫​⁮‌‎⁫​​‮⁮⁯⁭‌‍⁭​‌‍⁫⁭⁭⁫‏‍⁭⁮⁭‏‎⁭⁮⁭‮(aBase64));
            num1 = (int) num2 * -1996182259 ^ -2019226023;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * -1795347563 ^ 848587415;
            continue;
          default:
            goto label_6;
        }
      }
label_6:
      return jsonNode;
    }

    public JSONNode()
    {
label_1:
      int num1 = 2128541279;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 153733117)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * -1801553869 ^ 1963952155;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static CultureInfo \u206C⁮⁫‫⁬‍‪⁮​‮​‌‎‬‌‮‌‫⁯‭‏‫⁫⁬‫‏‏⁫⁮‎​​‭⁫‮⁯‮‏‭‮‮() => CultureInfo.InvariantCulture;

    static bool \u200F⁯‎‏‍‌‏‪‎⁫‌⁬‪‫‌‭⁫‫⁪‫‍‎⁯‪⁭‏⁯‪‭⁯‏⁯⁫‌‎⁮⁯‫⁮⁫‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u206C‏⁯⁯‌‫‪‪‬⁫⁯‌⁪⁭​‫‌‎‭‏⁯⁬​‎‮⁫‎‮⁫‮‬‍‭⁯‎⁪‭‍‍‬‮() => base.GetHashCode();

    static char \u202D⁬⁮⁭‎‭‌⁮⁫‫⁭⁫⁯⁯‍‭⁫‭‌‍⁫‭⁫‫‏⁭‪⁭⁮⁭⁯⁫‌⁮‏‌‌​‫‮‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u206D⁮‏⁫⁯‮‭‬⁭‫⁭⁬‬‭⁬⁮‭‍‪​‪‪‫‎‫‫‫‍⁪‮⁮⁪‌‭​‎⁮⁮⁯‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u206E‎⁮‬⁬‭‭‪‮‏⁮‌‏‏‬‪‪​⁮​​‮⁫​‍‍⁭‬⁯‭⁪‫⁮‫⁪‏⁫‫⁮⁪‮([In] string obj0) => obj0.Length;

    static string \u202E‮⁮⁪⁭‏‬‫‏​⁬‫⁬‭⁯‎⁭‪‮⁮‮‍⁪⁯‏‏‫‬​⁮‏‪‬‌‬⁭⁫‪‬⁮‮([In] string obj0) => obj0.Trim();

    static bool \u206A⁬‎​‮⁭⁯​‫‪‌‏‍⁬‮⁪‫‮⁫⁫‪‮‮‏​‏‬​‌‎‎‪‫‌‬⁬‎‏⁪⁯‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u206F‫⁫‮‍⁯‏⁬‪‮‫‭‫‌‬‏‮​‪‌⁭‫‮‮‍⁯‭⁫‭‎‍‎⁪​‎‍‏⁪⁮⁫‮([In] string obj0) => new Exception(obj0);

    static string \u200D⁮‭‏‫⁮‍‍⁯⁪‭‭⁯‎‮‍⁯‌‌⁮⁯‬‪⁮⁫​‎⁯‭⁭⁯⁮‪⁯‪‭‪⁪​‭‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u202C‎‎‏‌⁭‬‏‫⁪⁬‎‏‪‪‌⁭⁯‍‌‮‫⁬⁯‮‫⁯⁫‌‌⁯⁬‭⁪‪‎​‭‮‫‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u200B‫‮‫‪⁭‪​‍​‭⁯‍⁭‏‪⁪⁪‌⁬‪‬⁪‮‬‫‎‏‌‌‭⁬‭⁫‭‮‎‌‮‫‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u200E⁫⁪⁫⁪‎‫⁬‫‭‌⁬‍⁭⁮⁫⁫‬⁪‫⁭‬​⁬‫‮⁫‌⁬‪‏‪‪⁭‭⁭‌⁭⁭⁯‮([In] FileInfo obj0) => obj0.Directory;

    static string \u200B⁯‎⁪‬‫⁪‍⁫‏⁬⁭⁫⁬⁯‮‭⁬‬‏‬‭‏‎‍⁯⁫‮‫‮‮‬‫​​​⁯‎⁪‮‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u200D‪‍‎‫‪‭⁯‏​‎‌⁫‍‫‬⁬‮‎‬‍‪‫‬‍‌‮‫‬⁫‭‪‫‪‭⁮⁯‌⁬‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u206C‌‭‏‎‬‎‮​⁬‮‪‮‬⁫‮⁮‮⁭‎‫‎​‌‮‪⁪‪​‭⁮⁪‪‪‫‌‬⁪⁯⁭‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u206A⁯⁬⁪‏⁪⁭‮‍⁭‏‭⁯‭⁯‫‏‮‫‫⁫‌‏⁭⁮‌‎‭‭​​⁭‎‮‮⁫‎⁬‪‫‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u200C‬‫⁫‌‏‮⁬⁮⁬‮​‮​‏⁭‮‍⁯⁬‫⁬‎​⁮⁫‮⁮‭‪‭⁪⁪⁯‬‎‌​⁭‮‮() => new MemoryStream();

    static void \u200D‬‬‌‪⁭‍⁭‫‭‬‍⁯⁪⁫⁪⁬⁪⁬‮⁮‭⁪‍⁪⁫‮‪‪⁯‍⁬⁯‪⁯⁪​‪⁯‪‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u206E⁬‮‌⁪‍⁭⁯⁭⁮⁮⁫‫⁭​⁪‌‍‌​‪⁭‬‮⁭⁪⁮⁬‫‬⁮‏⁪⁫‪‏‬⁭‍‏‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u202B‬‫‬⁯‏⁬⁫⁬⁯⁬‌⁯‪⁬‫⁭‎⁮‫‍‍‎‪​⁯⁮⁬⁬‍‫⁯​‬‫⁭⁯⁯⁯⁫‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u202D‎‍‍‬‮⁮‭‭​‭​‪‮‭‏‎‏⁯‌‮‬‪⁮‪‪‎​‭⁮⁭⁫‍‫‭⁯‭⁬‎‮‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u206B‬⁭⁯‎‍⁪⁬​⁫‫‪‍⁮⁪‍‌⁬‫‏‪⁫‭‪⁭⁯‭‮‪‫‏‌‭‍‪‏‫‪⁯‌‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u206C‏‮⁮⁯‍‫⁪⁭⁬‬⁫‫⁭⁮‫⁬‍⁪​‏‭⁭⁫‫⁯⁬‮⁫‏‏⁫⁯​‍⁪‌‍‍‪‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u202C‪⁭‌‪⁪‍‮‪⁮⁮⁬​‭‎‎⁫⁭⁪‫‎⁮‪‪⁬⁫‏​‎‮‮‬‪‫​‌⁭‎‎⁬‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u206F‫‎‌‌‏‍⁮‎‫‬‪​‫‮‍​‏‮‭⁭‫​‌⁯‌‬⁭‌‮⁭​⁮‪⁪‎‏⁪‎‮‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u202C‮‏‭‮⁮⁭‍‭‬‪‮‬⁫⁭⁫​⁭‍‏‫‪‪‭‏‪‮‌⁯‮‎‏⁪⁬⁮‍⁬‭​‏‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u200F‭‬‮‮‎⁭‍⁮​⁬‫‏‬‏‭‭‪⁮‫⁫‫⁫‎⁪⁫‬‬‌‭‬‮⁯‮‭‬‍‏‬⁮‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u202D‎⁬‮⁯⁯⁪⁫‬‭⁬‏‭⁫⁫⁬⁯‌⁫‌⁯⁪⁪‬‏‬⁭​‫‪⁬​⁬⁪‏‮‮‬⁭‭‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u202C‌⁭‫⁫‫‬⁫⁫​⁮‌‎⁫​​‮⁮⁯⁭‌‍⁭​‌‍⁫⁭⁭⁫‏‍⁭⁮⁭‏‎⁭⁮⁭‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u200E‎‭⁮⁮⁬⁭⁭‭‌‏​⁬⁪‎‍⁮‌‍‏‎⁯‏⁭‭⁯‮⁪‪‏⁯‎⁫⁪‪‏‪⁮⁭⁭‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
