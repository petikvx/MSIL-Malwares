// Decompiled with JetBrains decompiler
// Type: Yg8.y0P
// Assembly: k3F4, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: EF2862A8-7088-4F2B-ADD5-AFDC446098D9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-ee71029a7b3d9d85e7a6c7c0ecc35d93ee37514713ba5033d491a0d7506e947b.exe

using Fe7;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data.Linq;
using System.Linq;
using System.Linq.Expressions;
using x7X;

namespace Yg8
{
  [StandardModule]
  internal sealed class y0P
  {
    public static int Ⴓ = 1;

    public static string Wd4()
    {
      Table<Wf2> ⴃ = new Tt1().Ⴃ;
      Expression body = (Expression) Expression.Parameter(typeof (Wf2), "c");
      Expression<Func<Wf2, Wf2>> selector = Expression.Lambda<Func<Wf2, Wf2>>((Expression) (body as ParameterExpression), (ParameterExpression) body);
      object list = (object) ⴃ.Select<Wf2, Wf2>(selector).ToList<Wf2>();
      object obj;
      try
      {
        obj = (object) checked ((unchecked ((INotifyPropertyChanging) (list as List<Wf2>).ElementAt<Wf2>(checked ((list as List<Wf2>).Count - 1))) as Wf2).Ⴗ + 1).ToString("00000");
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        obj = (object) y0P.Ⴓ.ToString("20000");
        ProjectData.ClearProjectError();
      }
      return (string) obj;
    }
  }
}
