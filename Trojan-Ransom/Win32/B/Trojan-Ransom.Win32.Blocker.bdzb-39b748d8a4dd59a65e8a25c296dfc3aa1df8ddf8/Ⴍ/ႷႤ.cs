// Decompiled with JetBrains decompiler
// Type: Ⴍ.ႷႤ
// Assembly: jizbwcwvchLoader, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B60D9367-1A45-4565-96B0-53F2CD92A512
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00060-msil\Trojan-Ransom.Win32.Blocker.bdzb-39b748d8a4dd59a65e8a25c296dfc3aa1df8ddf8.exe

using System;

namespace Ⴍ
{
  internal sealed class ႷႤ
  {
    public static readonly uint[] Ⴍ;
    private ႷႣ.ႠႥ Ⴐ;

    static ႷႤ()
    {
      byte[] ⴗ = Ⴜ.Ⴗ;
      byte[] ⴍ = \u0003\u2002.Ⴍ;
      int num1 = 9;
      uint index;
      uint num2;
      int num3;
      while (true)
      {
        switch (num1)
        {
          case 0:
            ႷႤ.Ⴍ[(IntPtr) index] = num2;
            ++index;
            num1 = (int) ⴍ[7];
            continue;
          case 1:
            num1 = index < 256U ? 7 : (int) ⴍ[146];
            continue;
          case 2:
            num1 = num3 < 8 ? 10 : 0;
            continue;
          case 3:
          case 11:
            ++num3;
            num1 = (int) ⴗ[55] - 228;
            continue;
          case 4:
            goto label_12;
          case 5:
            num1 = 1;
            continue;
          case 6:
            num2 = num2 >> 1 ^ 3988292384U;
            num1 = (int) ⴗ[10] - 37;
            continue;
          case 7:
          case 12:
            num2 = index;
            num3 = 0;
            num1 = 2;
            continue;
          case 8:
            num2 >>= 1;
            num1 = 11;
            continue;
          case 10:
            num1 = ((int) num2 & 1) == 0 ? (int) ⴗ[48] : (int) ⴗ[57] - 167;
            continue;
          default:
            \u0006.Ⴀ();
            ႷႤ.Ⴍ = new uint[256];
            index = 0U;
            goto case 5;
        }
      }
label_12:;
    }

    public ႷႤ()
    {
      this.Ⴐ.Ⴄ = uint.MaxValue;
      // ISSUE: explicit constructor call
      base.\u002Ector();
      ႷႣ.ႷႷ();
    }
  }
}
