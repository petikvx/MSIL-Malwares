// Decompiled with JetBrains decompiler
// Type: 942981470147.Core.188579923867
// Assembly: 942981470147, Version=16.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: 92EB186D-EC33-4501-B5FF-A65C9233BC32
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Exploit.MSIL.Shellcode.gen-f8bb0d6e016074f6759f74d8950983793a87aec3cd6d56569fa8809d5c55396a.exe

using \u003161340977666;
using \u003202955077067;
using \u003942981470147.Models;
using \u003942981470147.Utils;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

namespace \u003942981470147.Core
{
  public static class \u003188579923867
  {
    private static \u003631137062167 \u003874030726690(string _param0)
    {
      FileInfo[] files = new DirectoryInfo(_param0).GetFiles("*.jpg");
      if (!((IEnumerable<FileInfo>) files).Any<FileInfo>())
        return (\u003631137062167) null;
      FileInfo fileInfo;
      if (\u003695700743403.\u003324125394662)
      {
        Random random = new Random();
        fileInfo = files[random.Next(0, files.Length - 1)];
      }
      else
      {
        fileInfo = ((IEnumerable<FileInfo>) files).OrderByDescending<FileInfo, DateTime>((Func<FileInfo, DateTime>) (_param1 => _param1.LastWriteTime)).FirstOrDefault<FileInfo>();
        if (fileInfo == null)
          return (\u003631137062167) null;
      }
      string fullName = fileInfo.FullName;
      string path = fullName + ".xml";
      string str = "";
      if (!File.Exists(path))
        path = Path.Combine(Path.GetDirectoryName(fullName), ((IEnumerable<string>) Path.GetFileName(fullName).Split('_')).First<string>() + ".xml");
      if (File.Exists(path))
      {
        try
        {
          str = ((\u003498227478311) path.\u003368453710181<\u003696062666994>()).get_image().\u003444236341766;
        }
        catch
        {
        }
      }
      \u003631137062167 obj = new \u003631137062167();
      ((\u003556159290710) obj).set_ImageFileName(fullName);
      obj.\u003348639026506 = str;
      obj.\u003148556068329 = "";
      return obj;
    }

    public static IList<\u003349945968399> \u003723660701286()
    {
      List<\u003349945968399> objList1 = new List<\u003349945968399>();
      string path = Path.Combine(\u003313364816402.\u003529684597097(), "data", "holidays.csv");
      if (!File.Exists(path))
        return (IList<\u003349945968399>) objList1;
      foreach (string readAllLine in File.ReadAllLines(path))
      {
        if (!string.IsNullOrWhiteSpace(readAllLine))
        {
          string[] strArray1 = readAllLine.Split(new char[1]
          {
            ','
          }, StringSplitOptions.RemoveEmptyEntries);
          if (strArray1.Length >= 2)
          {
            string str1 = strArray1[0].Replace("\"", string.Empty).Trim();
            string str2 = strArray1[1].Replace("\"", string.Empty).Trim();
            string[] strArray2 = str1.Split('/');
            if (strArray2.Length == 3)
            {
              List<\u003349945968399> objList2 = objList1;
              \u003349945968399 obj = new \u003349945968399();
              obj.\u003338123244339 = str2;
              obj.\u003921398916879 = int.Parse(strArray2[0]);
              obj.\u003299933178323 = int.Parse(strArray2[1]);
              ((\u003967571795739) obj).set_Day(int.Parse(strArray2[2]));
              objList2.Add(obj);
            }
          }
        }
      }
      return (IList<\u003349945968399>) objList1;
    }
  }
}
