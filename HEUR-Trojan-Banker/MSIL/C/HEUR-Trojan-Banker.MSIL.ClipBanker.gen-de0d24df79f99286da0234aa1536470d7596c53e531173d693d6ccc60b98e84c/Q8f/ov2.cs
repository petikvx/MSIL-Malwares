// Decompiled with JetBrains decompiler
// Type: Q8f.ov2
// Assembly: uc5uTlQKZwvBJeUwoIoxWYL1o3uBI8gaMfnT9AO, Version=9.8.6.0, Culture=neutral, PublicKeyToken=null
// MVID: 66B519F9-803D-46C9-8343-EC24850CA08A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\HEUR-Trojan-Banker.MSIL.ClipBanker.gen-de0d24df79f99286da0234aa1536470d7596c53e531173d693d6ccc60b98e84c.exe

using System;
using System.IO;
using System.Runtime.InteropServices;

namespace Q8f
{
  [Guid("ebc25cf6-9120-4283-b972-0e5520d0000C")]
  [ComVisible(true)]
  public sealed class ov2
  {
    private uint m15;
    private long \u0038d4;
    private bool QY9;
    private uint[] J24;
    private const int \u0033NP = 8192;
    private uint \u0034NL = uint.MaxValue;

    public long Vth => this.\u0038d4;

    public int \u0033D4 => ~(int) this.\u0034NL;

    public int \u00337z([In] Stream obj0) => this.\u0032Xs(obj0, (Stream) null);

    public int \u0032Xs([In] Stream obj0, [In] Stream obj1)
    {
      if (obj0 == null)
        throw new Exception("The input stream must not be null.");
      byte[] buffer = new byte[8192];
      int count1 = 8192;
      this.\u0038d4 = 0L;
      int count2 = obj0.Read(buffer, 0, count1);
      obj1?.Write(buffer, 0, count2);
      this.\u0038d4 += (long) count2;
      while (count2 > 0)
      {
        this.x74(buffer, 0, count2);
        count2 = obj0.Read(buffer, 0, count1);
        obj1?.Write(buffer, 0, count2);
        this.\u0038d4 += (long) count2;
      }
      return ~(int) this.\u0034NL;
    }

    public int \u00321d([In] int obj0, [In] byte obj1) => this.XM9((uint) obj0, obj1);

    internal int XM9([In] uint obj0, [In] byte obj1) => (int) this.J24[((int) obj0 ^ (int) obj1) & (int) byte.MaxValue] ^ (int) (obj0 >> 8);

    public void x74([In] byte[] obj0, [In] int obj1, [In] int obj2)
    {
      if (obj0 == null)
        throw new Exception("The data buffer must not be null.");
      for (int index1 = 0; index1 < obj2; ++index1)
      {
        int index2 = obj1 + index1;
        byte num = obj0[index2];
        this.\u0034NL = !this.QY9 ? this.\u0034NL >> 8 ^ this.J24[(int) (this.\u0034NL & (uint) byte.MaxValue ^ (uint) num)] : this.\u0034NL << 8 ^ this.J24[(int) (this.\u0034NL >> 24 ^ (uint) num)];
      }
      this.\u0038d4 += (long) obj2;
    }

    public void UE8([In] byte obj0)
    {
      if (this.QY9)
        this.\u0034NL = this.\u0034NL << 8 ^ this.J24[(int) (this.\u0034NL >> 24 ^ (uint) obj0)];
      else
        this.\u0034NL = this.\u0034NL >> 8 ^ this.J24[(int) (this.\u0034NL & (uint) byte.MaxValue ^ (uint) obj0)];
    }

    public void ppg([In] byte obj0, [In] int obj1)
    {
      while (obj1-- > 0)
      {
        if (this.QY9)
        {
          uint num = this.\u0034NL >> 24 ^ (uint) obj0;
          this.\u0034NL = this.\u0034NL << 8 ^ this.J24[num >= 0U ? (int) num : (int) num + 256];
        }
        else
        {
          uint num = this.\u0034NL & (uint) byte.MaxValue ^ (uint) obj0;
          this.\u0034NL = this.\u0034NL >> 8 ^ this.J24[num >= 0U ? (int) num : (int) num + 256];
        }
      }
    }

    private static uint \u003174([In] uint obj0)
    {
      uint num1 = obj0;
      uint num2 = (uint) (((int) num1 & 1431655765) << 1 | (int) (num1 >> 1) & 1431655765);
      uint num3 = (uint) (((int) num2 & 858993459) << 2 | (int) (num2 >> 2) & 858993459);
      uint num4 = (uint) (((int) num3 & 252645135) << 4 | (int) (num3 >> 4) & 252645135);
      return (uint) ((int) num4 << 24 | ((int) num4 & 65280) << 8 | (int) (num4 >> 8) & 65280) | num4 >> 24;
    }

    private static byte dD7([In] byte obj0)
    {
      int num1 = (int) obj0 * 131586;
      uint num2 = 17055760;
      return (byte) ((uint) (16781313 * ((int) ((uint) num1 & num2) + (num1 << 2 & (int) num2 << 1))) >> 24);
    }

    private void \u0033yC()
    {
      this.J24 = new uint[256];
      byte index1 = 0;
      do
      {
        uint num = (uint) index1;
        for (byte index2 = 8; index2 > (byte) 0; --index2)
        {
          if (((int) num & 1) == 1)
            num = num >> 1 ^ this.m15;
          else
            num >>= 1;
        }
        if (this.QY9)
          this.J24[(int) ov2.dD7(index1)] = ov2.\u003174(num);
        else
          this.J24[(int) index1] = num;
        ++index1;
      }
      while (index1 != (byte) 0);
    }

    private uint Bs6([In] uint[] obj0, [In] uint obj1)
    {
      uint num = 0;
      int index = 0;
      while (obj1 != 0U)
      {
        if (((int) obj1 & 1) == 1)
          num ^= obj0[index];
        obj1 >>= 1;
        ++index;
      }
      return num;
    }

    private void \u0039U5([In] uint[] obj0, [In] uint[] obj1)
    {
      for (int index = 0; index < 32; ++index)
        obj0[index] = this.Bs6(obj1, obj1[index]);
    }

    public void pa2([In] int obj0, [In] int obj1)
    {
      uint[] numArray1 = new uint[32];
      uint[] numArray2 = new uint[32];
      if (obj1 == 0)
        return;
      uint num1 = ~this.\u0034NL;
      uint num2 = (uint) obj0;
      numArray2[0] = this.m15;
      uint num3 = 1;
      for (int index = 1; index < 32; ++index)
      {
        numArray2[index] = num3;
        num3 <<= 1;
      }
      this.\u0039U5(numArray1, numArray2);
      this.\u0039U5(numArray2, numArray1);
      uint num4 = (uint) obj1;
      do
      {
        this.\u0039U5(numArray1, numArray2);
        if (((int) num4 & 1) == 1)
          num1 = this.Bs6(numArray1, num1);
        uint num5 = num4 >> 1;
        if (num5 != 0U)
        {
          this.\u0039U5(numArray2, numArray1);
          if (((int) num5 & 1) == 1)
            num1 = this.Bs6(numArray2, num1);
          num4 = num5 >> 1;
        }
        else
          break;
      }
      while (num4 != 0U);
      this.\u0034NL = ~(num1 ^ num2);
    }

    public ov2()
      : this(false)
    {
    }

    public ov2([In] bool obj0)
      : this(-306674912, obj0)
    {
    }

    public ov2([In] int obj0, [In] bool obj1)
    {
      this.QY9 = obj1;
      this.m15 = (uint) obj0;
      this.\u0033yC();
    }

    public void Y63() => this.\u0034NL = uint.MaxValue;
  }
}
