// Decompiled with JetBrains decompiler
// Type: SimpleChessApp.Game.Turn
// Assembly: 司6, Version=2.159.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E96108F1-63B0-49D9-ABCC-EB6314F0AFE2
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.01-msil\HEUR-Trojan-Ransom.MSIL.Makop.gen-81e7927ab5ca518d06687dc18d5c4df22198011494322486e562136344d2513b.exe

using System.Runtime.InteropServices;

namespace SimpleChessApp.Game
{
  public class Turn
  {
    public int Id;
    public Notation White;
    public Notation Black;

    public override string ToString()
    {
      string str = Turn.\u202D‎‬‍‬‭⁭⁪⁫⁫‏⁭​‏⁭‫‍​‏⁯‪‬‫‭⁬‫‪⁪⁫‪‌⁮‫‬⁫⁯‎⁮⁭⁮‮(\u003CModule\u003E.\u200C‍⁭⁭​⁮⁪⁪‮‍‮​⁫⁪⁯⁯‌⁫‎‮‮‍⁬‫‎⁭⁪⁮⁬‌⁮‎​⁪‎‬⁭‍‮‪‮<string>(469268843U), (object) this.Id, (object) this.White, (object) this.Black);
label_1:
      int num1 = -631869411;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -190333672)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * 121900119 ^ 1702571132;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public Turn()
    {
label_1:
      int num1 = -1521079025;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1199128107)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * -1353707352 ^ 72694724;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static string \u202D‎‬‍‬‭⁭⁪⁫⁫‏⁭​‏⁭‫‍​‏⁯‪‬‫‭⁬‫‪⁪⁫‪‌⁮‫‬⁫⁯‎⁮⁭⁮‮(
      [In] string obj0,
      [In] object obj1,
      [In] object obj2,
      [In] object obj3)
    {
      return string.Format(obj0, obj1, obj2, obj3);
    }
  }
}
