// Decompiled with JetBrains decompiler
// Type: mainPorject.TestForcesSpec
// Assembly: MuiResourceTypeIdIntEn, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 2C7C9528-88C0-45FF-AB6A-2AC0C29EABCB
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.07\HEUR-Backdoor.MSIL.Androm.gen-0e10e646be7b3f9857a2994bedc1b808fabc112009cda3192df15b8eb4980ef8.exe

using forces;
using mainPorject.Properties;
using System;
using System.ComponentModel;
using System.Drawing;
using System.Windows.Forms;

namespace mainPorject
{
  public class TestForcesSpec : Form
  {
    private double beamlength_DONOTUSE;
    private double scaler;
    private const int beamY = 235;
    private const int gap = 5;
    private Point xy;
    private Size wh;
    private bool catchf1;
    private bool catchf2;
    private IContainer components = (IContainer) null;
    private UserControl_Forces userControl_Forces1;
    private UserControl_Forces userControl_Forces2;
    private TextBox textBox_pos1;
    private TextBox textBoxPower1;
    private Label label1;
    private Label label2;
    private GroupBox groupBox1;
    private GroupBox groupBox2;
    private TextBox textBox_pos2;
    private TextBox textBoxPower2;
    private Label label3;
    private Label label4;
    private Button button1;
    private Button button2;
    private Panel panel1;

    public BeamForce F1 { private set; get; }

    public BeamForce F2 { private set; get; }

    public double BeamLength
    {
      set
      {
        this.scaler = (double) (this.panel1.Width - 10) / value;
        this.beamlength_DONOTUSE = value;
        this.setTextBox();
      }
      get => this.beamlength_DONOTUSE;
    }

    public TestForcesSpec()
    {
      this.InitializeComponent();
      this.xy = new Point(5, 235);
      this.wh = new Size(this.panel1.Width - 10, 10);
    }

    private void setTextBox()
    {
      TextBox textBoxPos1 = this.textBox_pos1;
      double num = (double) ((this.panel1.Width - 10) / 3) / this.scaler;
      string str1 = num.ToString() ?? "";
      textBoxPos1.Text = str1;
      TextBox textBoxPos2 = this.textBox_pos2;
      num = (double) (2 * (this.panel1.Width - 10) / 3) / this.scaler;
      string str2 = num.ToString() ?? "";
      textBoxPos2.Text = str2;
    }

    private void TestForcesSpec_Paint(object sender, PaintEventArgs e) => this.beam_paint(sender, e, this.xy, this.wh, Brushes.White);

    private void beam_paint(object sender, PaintEventArgs e, Point pos, Size size, Brush brush) => e.Graphics.FillRectangle(brush, pos.X, pos.Y - size.Height / 2, size.Width, size.Height);

    private void textBox_pos1_TextChanged(object sender, EventArgs e)
    {
      double result;
      if (!double.TryParse((sender as TextBox).Text, out result))
        return;
      double num = result * this.scaler;
      this.userControl_Forces1.MouseMove -= new MouseEventHandler(this.userControl_Forces1_MouseMove);
      this.userControl_Forces1.Location = new Point((int) num + 5 - this.userControl_Forces1.Width / 2, 230 - this.userControl_Forces1.Height);
      this.userControl_Forces1.MouseMove += new MouseEventHandler(this.userControl_Forces1_MouseMove);
    }

    private void textBox_pos2_TextChanged(object sender, EventArgs e)
    {
      double result;
      if (!double.TryParse((sender as TextBox).Text, out result))
        return;
      double num = result * this.scaler;
      this.userControl_Forces2.MouseMove -= new MouseEventHandler(this.userControl_Forces2_MouseMove);
      this.userControl_Forces2.Location = new Point((int) num + 5 - this.userControl_Forces2.Width / 2, 230 - this.userControl_Forces1.Height);
      this.userControl_Forces2.MouseMove += new MouseEventHandler(this.userControl_Forces2_MouseMove);
    }

    private void userControl_Forces1_MouseMove(object sender, MouseEventArgs e)
    {
      if (!this.catchf1)
        return;
      Control control = sender as Control;
      int num = control.Left + e.X - control.Width / 2;
      if (num < 5 - control.Width / 2 || num > this.panel1.Width - 10 - control.Width / 2)
        return;
      this.textBox_pos1.Text = ((double) (num + control.Width / 2 - 5) / this.scaler).ToString();
    }

    private void userControl_Forces2_MouseMove(object sender, MouseEventArgs e)
    {
      if (!this.catchf2)
        return;
      Control control = sender as Control;
      int num = control.Left + e.X - control.Width / 2;
      if (num < 5 - control.Width / 2 || num > this.panel1.Width - 10 - control.Width / 2)
        return;
      this.textBox_pos2.Text = ((double) (num + control.Width / 2 - 5) / this.scaler).ToString();
    }

    private void button1_Click(object sender, EventArgs e)
    {
      double result1;
      double result2;
      double result3;
      double result4;
      if (!double.TryParse(this.textBox_pos1.Text, out result1) || !double.TryParse(this.textBox_pos2.Text, out result2) || !double.TryParse(this.textBoxPower1.Text, out result3) || !double.TryParse(this.textBoxPower2.Text, out result4))
        return;
      if (result3 > 0.0)
        this.F1 = (BeamForce) new PointBaemForce(result3, result1 * 100.0, this.BeamLength * 100.0);
      if (result4 > 0.0)
        this.F2 = (BeamForce) new PointBaemForce(result4, result2 * 100.0, this.BeamLength * 100.0);
      this.DialogResult = DialogResult.OK;
      this.Close();
    }

    private void userControl_Forces1_MouseDown(object sender, MouseEventArgs e) => this.catchf1 = true;

    private void userControl_Forces1_MouseUp(object sender, MouseEventArgs e) => this.catchf1 = false;

    private void userControl_Forces2_MouseDown(object sender, MouseEventArgs e) => this.catchf2 = true;

    private void userControl_Forces2_MouseUp(object sender, MouseEventArgs e) => this.catchf2 = false;

    private void button2_Click(object sender, EventArgs e)
    {
      this.DialogResult = DialogResult.Cancel;
      this.Close();
    }

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(disposing);
    }

    private void InitializeComponent()
    {
      this.textBox_pos1 = new TextBox();
      this.textBoxPower1 = new TextBox();
      this.label1 = new Label();
      this.label2 = new Label();
      this.groupBox1 = new GroupBox();
      this.groupBox2 = new GroupBox();
      this.textBox_pos2 = new TextBox();
      this.textBoxPower2 = new TextBox();
      this.label3 = new Label();
      this.label4 = new Label();
      this.button1 = new Button();
      this.button2 = new Button();
      this.panel1 = new Panel();
      this.userControl_Forces2 = new UserControl_Forces();
      this.userControl_Forces1 = new UserControl_Forces();
      this.groupBox1.SuspendLayout();
      this.groupBox2.SuspendLayout();
      this.panel1.SuspendLayout();
      this.SuspendLayout();
      this.textBox_pos1.Location = new Point(52, 29);
      this.textBox_pos1.Name = "textBox_pos1";
      this.textBox_pos1.Size = new Size(100, 20);
      this.textBox_pos1.TabIndex = 1;
      this.textBox_pos1.TextChanged += new EventHandler(this.textBox_pos1_TextChanged);
      this.textBoxPower1.Location = new Point(52, 52);
      this.textBoxPower1.Name = "textBoxPower1";
      this.textBoxPower1.Size = new Size(100, 20);
      this.textBoxPower1.TabIndex = 1;
      this.label1.AutoSize = true;
      this.label1.Location = new Point(2, 29);
      this.label1.Name = "label1";
      this.label1.Size = new Size(44, 13);
      this.label1.TabIndex = 2;
      this.label1.Text = "Position";
      this.label2.AutoSize = true;
      this.label2.Location = new Point(2, 55);
      this.label2.Name = "label2";
      this.label2.Size = new Size(37, 13);
      this.label2.TabIndex = 2;
      this.label2.Text = "Power";
      this.groupBox1.BackColor = Color.Transparent;
      this.groupBox1.Controls.Add((Control) this.textBox_pos1);
      this.groupBox1.Controls.Add((Control) this.textBoxPower1);
      this.groupBox1.Controls.Add((Control) this.label1);
      this.groupBox1.Controls.Add((Control) this.label2);
      this.groupBox1.ForeColor = SystemColors.ButtonHighlight;
      this.groupBox1.Location = new Point(3, 3);
      this.groupBox1.Name = "groupBox1";
      this.groupBox1.Size = new Size(171, 85);
      this.groupBox1.TabIndex = 3;
      this.groupBox1.TabStop = false;
      this.groupBox1.Text = "Force 1";
      this.groupBox2.BackColor = Color.Transparent;
      this.groupBox2.Controls.Add((Control) this.textBox_pos2);
      this.groupBox2.Controls.Add((Control) this.textBoxPower2);
      this.groupBox2.Controls.Add((Control) this.label3);
      this.groupBox2.Controls.Add((Control) this.label4);
      this.groupBox2.ForeColor = SystemColors.ButtonHighlight;
      this.groupBox2.Location = new Point(180, 3);
      this.groupBox2.Name = "groupBox2";
      this.groupBox2.Size = new Size(171, 85);
      this.groupBox2.TabIndex = 3;
      this.groupBox2.TabStop = false;
      this.groupBox2.Text = "Force 2";
      this.textBox_pos2.Location = new Point(52, 29);
      this.textBox_pos2.Name = "textBox_pos2";
      this.textBox_pos2.Size = new Size(100, 20);
      this.textBox_pos2.TabIndex = 1;
      this.textBox_pos2.TextChanged += new EventHandler(this.textBox_pos2_TextChanged);
      this.textBoxPower2.Location = new Point(52, 52);
      this.textBoxPower2.Name = "textBoxPower2";
      this.textBoxPower2.Size = new Size(100, 20);
      this.textBoxPower2.TabIndex = 1;
      this.label3.AutoSize = true;
      this.label3.Location = new Point(2, 29);
      this.label3.Name = "label3";
      this.label3.Size = new Size(44, 13);
      this.label3.TabIndex = 2;
      this.label3.Text = "Position";
      this.label4.AutoSize = true;
      this.label4.Location = new Point(2, 55);
      this.label4.Name = "label4";
      this.label4.Size = new Size(37, 13);
      this.label4.TabIndex = 2;
      this.label4.Text = "Power";
      this.button1.Location = new Point(186, 336);
      this.button1.Name = "button1";
      this.button1.Size = new Size(75, 23);
      this.button1.TabIndex = 4;
      this.button1.Text = "Ok";
      this.button1.UseVisualStyleBackColor = true;
      this.button1.Click += new EventHandler(this.button1_Click);
      this.button2.Location = new Point(267, 336);
      this.button2.Name = "button2";
      this.button2.Size = new Size(75, 23);
      this.button2.TabIndex = 4;
      this.button2.Text = "Cancel";
      this.button2.UseVisualStyleBackColor = true;
      this.button2.Click += new EventHandler(this.button2_Click);
      this.panel1.BackgroundImage = (Image) Resources._1600x900_modified22;
      this.panel1.Controls.Add((Control) this.button1);
      this.panel1.Controls.Add((Control) this.userControl_Forces2);
      this.panel1.Controls.Add((Control) this.groupBox2);
      this.panel1.Controls.Add((Control) this.userControl_Forces1);
      this.panel1.Controls.Add((Control) this.button2);
      this.panel1.Controls.Add((Control) this.groupBox1);
      this.panel1.Dock = DockStyle.Fill;
      this.panel1.Location = new Point(0, 0);
      this.panel1.Name = "panel1";
      this.panel1.Size = new Size(354, 371);
      this.panel1.TabIndex = 5;
      this.panel1.Paint += new PaintEventHandler(this.TestForcesSpec_Paint);
      this.userControl_Forces2.BackColor = Color.Transparent;
      this.userControl_Forces2.Location = new Point(232, 103);
      this.userControl_Forces2.Name = "userControl_Forces2";
      this.userControl_Forces2.Size = new Size(20, 62);
      this.userControl_Forces2.TabIndex = 0;
      this.userControl_Forces2.Type = forceType.point;
      this.userControl_Forces2.MouseDown += new MouseEventHandler(this.userControl_Forces2_MouseDown);
      this.userControl_Forces2.MouseMove += new MouseEventHandler(this.userControl_Forces2_MouseMove);
      this.userControl_Forces2.MouseUp += new MouseEventHandler(this.userControl_Forces2_MouseUp);
      this.userControl_Forces1.BackColor = Color.Transparent;
      this.userControl_Forces1.Location = new Point(55, 103);
      this.userControl_Forces1.Name = "userControl_Forces1";
      this.userControl_Forces1.Size = new Size(20, 62);
      this.userControl_Forces1.TabIndex = 0;
      this.userControl_Forces1.Type = forceType.point;
      this.userControl_Forces1.MouseDown += new MouseEventHandler(this.userControl_Forces1_MouseDown);
      this.userControl_Forces1.MouseMove += new MouseEventHandler(this.userControl_Forces1_MouseMove);
      this.userControl_Forces1.MouseUp += new MouseEventHandler(this.userControl_Forces1_MouseUp);
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(354, 371);
      this.ControlBox = false;
      this.Controls.Add((Control) this.panel1);
      this.MaximizeBox = false;
      this.MinimizeBox = false;
      this.Name = nameof (TestForcesSpec);
      this.ShowIcon = false;
      this.Text = nameof (TestForcesSpec);
      this.groupBox1.ResumeLayout(false);
      this.groupBox1.PerformLayout();
      this.groupBox2.ResumeLayout(false);
      this.groupBox2.PerformLayout();
      this.panel1.ResumeLayout(false);
      this.ResumeLayout(false);
    }
  }
}
