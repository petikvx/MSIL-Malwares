// Decompiled with JetBrains decompiler
// Type: s119009636400799.s224125339561461
// Assembly: s968508024776124, Version=2.0.47.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: E3596912-35E7-405B-A05A-F5F12AB5E292
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan.MSIL.PowerShell.gen-b1729c7ae8423cc844b16aa10ca8ddd2b2331adbfb6646d80d73381fbc73a109.exe

using Microsoft.Diagnostics.Tracing.Extensions;
using Microsoft.Win32;
using s031144512156436;
using s065175910567653;
using s081813526546960;
using s111377166353221;
using s220824736514050;
using s255674113742269;
using s418410312208900;
using s432138923876230;
using s489547573433431;
using s584120839923761;
using s608480027755992;
using s842104711354727;
using s878358404072606;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;

namespace s119009636400799
{
  public sealed class s224125339561461 : IDisposable
  {
    private static SortedDictionary<string, Guid> s629658621325162;
    private static Dictionary<Guid, string> s167196363231295;
    internal const int s586598908672551 = 1024;
    private const int s334523521772517 = 256;
    private static readonly int s022919781992267 = sizeof (s134995860702422.s927874108563264) + 4096 + 256;
    private static readonly byte[] s825525040610674 = new byte[s224125339561461.s022919781992267];
    private string s007836645914991;
    private int s122429092205110;
    private string s837127416210271;
    private int s408532809342457;
    private int s265374482115543;
    private int s850960115682603;
    private int s510561802066167;
    private float s097009854879414;
    private bool s056731064898615;
    private bool s643613628681458;
    private bool s966120535744663;
    private bool s973036470203915;
    private bool s929225137247463;
    private bool s525165291176627;
    private bool s499662953486612;
    private ulong s444559022814349;
    private s302986156607931 s711828367404598;
    internal s224125339561461 s624101517095145;
    internal bool s891925715219034;
    private readonly Dictionary<Guid, ulong> s599881591322878 = new Dictionary<Guid, ulong>();

    public s224125339561461(string sessionName, string fileName, s839121051152357 options = s839121051152357.Create)
    {
      this.s638220764275299 = 0;
      this.s408532809342457 = Math.Max(64, Environment.ProcessorCount * 2);
      this.s265374482115543 = 64;
      this.s444559022814349 = ulong.MaxValue;
      this.s837127416210271 = fileName;
      this.s007836645914991 = sessionName;
      this.s966120535744663 = true;
      this.s973036470203915 = (options & s839121051152357.NoRestartOnCreate) == s839121051152357.Create;
      this.s097009854879414 = 1f;
      this.s122429092205110 = -1;
      this.s499662953486612 = true;
      this.s557172540178653 = true;
    }

    public unsafe s224125339561461(string sessionName, s839121051152357 options = s839121051152357.Create)
    {
      this.s638220764275299 = 0;
      this.s122429092205110 = -1;
      this.s265374482115543 = 64;
      this.s097009854879414 = 1f;
      this.s007836645914991 = sessionName;
      this.s477109601620621 = true;
      this.s557172540178653 = true;
      this.s444559022814349 = ulong.MaxValue;
      if ((options & s839121051152357.Attach) != s839121051152357.Create)
      {
        byte* s859326862244669 = stackalloc byte[s224125339561461.s022919781992267];
        s134995860702422.s927874108563264* s410404561390610 = this.s875960932045564(s859326862244669);
        int s697879424542264 = s134995860702422.s810705513161004(0UL, sessionName, s410404561390610, 0U);
        if (s697879424542264 == 4201)
          throw new FileNotFoundException("The session " + sessionName + " is not active.");
        this.s122429092205110 = (int) ((s134995860702422.s779020505576281*) s410404561390610)->s868273599901471.s226439252990974;
        Marshal.ThrowExceptionForHR(s134995860702422.s378247297349470(s697879424542264));
        if (s410404561390610->s634666398464007 != 0U)
        {
          this.s837127416210271 = new string((char*) ((IntPtr) s410404561390610 + (IntPtr) s410404561390610->s634666398464007));
          if (this.s837127416210271.Length == 0)
            this.s837127416210271 = (string) null;
        }
        if (s410404561390610->s113720883508238 != 0U)
          this.s265374482115543 = (int) s410404561390610->s113720883508238;
        this.s408532809342457 = (int) ((long) s410404561390610->s645081911767236 * (long) this.s265374482115543) / 1024;
        if (((int) s410404561390610->s770207582060979 & 2) != 0)
          this.s850960115682603 = (int) s410404561390610->s165309352492141;
        if (((int) s410404561390610->s770207582060979 & 1024) == 0)
          return;
        this.s837127416210271 = (string) null;
        this.s850960115682603 = this.s408532809342457;
      }
      else
      {
        this.s408532809342457 = Math.Max(64, Environment.ProcessorCount * 2);
        this.s837127416210271 = (string) null;
        this.s966120535744663 = true;
        this.s973036470203915 = (options & s839121051152357.NoRestartOnCreate) == s839121051152357.Create;
      }
    }

    public static s224125339561461 s740254079594217(string s935034835800396)
    {
      s224125339561461 s224125339561461 = (s224125339561461) null;
      try
      {
        s224125339561461 = new s224125339561461(s935034835800396, s839121051152357.Attach);
      }
      catch (FileNotFoundException ex)
      {
      }
      return s224125339561461;
    }

    public bool s454623185299868(
      string s198979748928326,
      s770697808449953 s145495694979277 = s770697808449953.Verbose,
      ulong s273207632274880 = 18446744073709551615,
      s486097654034468 s470551828735599 = null)
    {
      Guid s924106583049883 = s820276167648377.s591057928635590(s198979748928326);
      if (s924106583049883 == Guid.Empty)
        s924106583049883 = s820276167648377.s011035710628855(s198979748928326);
      return this.s134449794879402(s924106583049883, s145495694979277, s273207632274880, s470551828735599);
    }

    public unsafe bool s134449794879402(
      Guid s924106583049883,
      s770697808449953 s064595108712918 = s770697808449953.Verbose,
      ulong s158548255637677 = 18446744073709551615,
      s486097654034468 s731598675179963 = null)
    {
      lock (this)
      {
        if (s731598675179963 == null)
          s731598675179963 = new s486097654034468();
        byte[] numArray1 = (byte[]) null;
        int num1 = 0;
        s584577124581129 s584577124581129 = s584577124581129.Update;
        bool s597221268400466 = false;
        if (s731598675179963.s703431912216413 != null)
        {
          s584577124581129 = s584577124581129.Update;
          numArray1 = new byte[1024];
          foreach (KeyValuePair<string, string> keyValuePair in s731598675179963.s703431912216413)
          {
            if (keyValuePair.Key == "V4_5EventSource" && keyValuePair.Value == "true")
              s597221268400466 = true;
            if (keyValuePair.Key == "Command")
            {
              if (keyValuePair.Value == "SendManifest")
              {
                s584577124581129 = s584577124581129.SendManifest;
              }
              else
              {
                int result;
                if (int.TryParse(keyValuePair.Value, out result))
                  s584577124581129 = (s584577124581129) result;
              }
            }
            num1 += Encoding.UTF8.GetBytes(keyValuePair.Key, 0, keyValuePair.Key.Length, numArray1, num1);
            numArray1[num1++] = (byte) 0;
            num1 += Encoding.UTF8.GetBytes(keyValuePair.Value, 0, keyValuePair.Value.Length, numArray1, num1);
            numArray1[num1++] = (byte) 0;
          }
        }
        if (this.s007836645914991 == s137522757078529.s671563908199122)
          throw new NotSupportedException("Can only enable kernel events on a kernel session.");
        this.s596874619695258();
        ulong num2 = 0;
        if (numArray1 != null)
        {
          if (!s597221268400466)
          {
            string s1 = "EtwSessionName";
            int num3 = s1.Length + 1 + Encoding.UTF8.GetByteCount(this.s007836645914991) + 1;
            string s2 = "EtwSessionKeyword";
            int num4 = s224125339561461.s284745858789294(s924106583049883);
            num2 = 1UL << num4;
            string s3 = num4.ToString();
            int num5 = s2.Length + 1 + Encoding.UTF8.GetByteCount(s3) + 1;
            byte[] numArray2 = new byte[num1 + num3 + num5];
            int byteIndex1 = 0;
            int num6 = byteIndex1 + Encoding.UTF8.GetBytes(s1, 0, s1.Length, numArray2, byteIndex1);
            byte[] numArray3 = numArray2;
            int index1 = num6;
            int byteIndex2 = index1 + 1;
            numArray3[index1] = (byte) 0;
            int num7 = byteIndex2 + Encoding.UTF8.GetBytes(this.s007836645914991, 0, this.s007836645914991.Length, numArray2, byteIndex2);
            byte[] numArray4 = numArray2;
            int index2 = num7;
            int byteIndex3 = index2 + 1;
            numArray4[index2] = (byte) 0;
            int num8 = byteIndex3 + Encoding.UTF8.GetBytes(s2, 0, s2.Length, numArray2, byteIndex3);
            byte[] numArray5 = numArray2;
            int index3 = num8;
            int byteIndex4 = index3 + 1;
            numArray5[index3] = (byte) 0;
            int num9 = byteIndex4 + Encoding.UTF8.GetBytes(s3, 0, s3.Length, numArray2, byteIndex4);
            byte[] numArray6 = numArray2;
            int index4 = num9;
            int destinationIndex = index4 + 1;
            numArray6[index4] = (byte) 0;
            Array.Copy((Array) numArray1, 0, (Array) numArray2, destinationIndex, num1);
            numArray1 = numArray2;
            num1 = numArray2.Length;
          }
          else
          {
            byte[] destinationArray = new byte[num1 + 4];
            Array.Copy((Array) numArray1, 0, (Array) destinationArray, 4, num1);
            numArray1 = destinationArray;
            num1 = destinationArray.Length;
          }
          if (s584577124581129 != s584577124581129.SendManifest)
            this.s188383024508057(s924106583049883.ToString(), numArray1, s597221268400466);
        }
        s134995860702422.s978582079522627* s146628835912847 = stackalloc s134995860702422.s978582079522627[7];
        int index5 = 0;
        fixed (byte* numPtr1 = numArray1)
        {
          if (numArray1 != null)
          {
            ((s134995860702422.s619021218427252*) (s146628835912847 + index5))->s463869369571601 = numPtr1;
            s146628835912847[index5].s704485487021127 = num1;
            s146628835912847[index5].s684836206159172 = (int) s584577124581129;
            ++index5;
          }
          bool s296407382341486 = s486097654034468.s296407382341486;
          if (s296407382341486)
          {
            if (s731598675179963.s762900049568058 != null && 0 < s731598675179963.s762900049568058.Count)
            {
              int* numPtr2 = stackalloc int[s731598675179963.s762900049568058.Count];
              for (int index6 = 0; index6 < s731598675179963.s762900049568058.Count; ++index6)
                numPtr2[index6] = s731598675179963.s762900049568058[index6];
              ((s134995860702422.s619021218427252*) (s146628835912847 + index5))->s463869369571601 = (byte*) numPtr2;
              s146628835912847[index5].s704485487021127 = s731598675179963.s762900049568058.Count * 4;
              s146628835912847[index5].s684836206159172 = -2147483644;
              ++index5;
            }
            if (s731598675179963.s347873102582733 != null && 0 < s731598675179963.s347873102582733.Count)
            {
              int num10 = 0;
              for (int index7 = 0; index7 < s731598675179963.s347873102582733.Count; ++index7)
                num10 += s731598675179963.s347873102582733[index7].Length + 1;
              byte* numPtr3 = stackalloc byte[num10 * 2];
              char* chPtr1 = (char*) numPtr3;
              for (int index8 = 0; index8 < s731598675179963.s347873102582733.Count; ++index8)
              {
                if (index8 != 0)
                  *chPtr1++ = ';';
                foreach (char ch in s731598675179963.s347873102582733[index8])
                  *chPtr1++ = ch;
              }
              char* chPtr2 = chPtr1;
              char* chPtr3 = (char*) ((IntPtr) chPtr2 + 2);
              *chPtr2 = char.MinValue;
              ((s134995860702422.s619021218427252*) (s146628835912847 + index5))->s463869369571601 = numPtr3;
              s146628835912847[index5].s704485487021127 = num10 * 2;
              s146628835912847[index5].s684836206159172 = -2147483640;
              if (s146628835912847[index5].s704485487021127 >= 1024)
                throw new ArgumentException("ProcessNameFilters too large.");
              ++index5;
            }
            int s878205069132055_1 = this.s082215746354109(s731598675179963.s932126587158795);
            if (0 < s878205069132055_1)
            {
              byte* s655372335012907 = stackalloc byte[s878205069132055_1];
              this.s689437577031396((s134995860702422.s978582079522627*) ((UIntPtr) s146628835912847 + (UIntPtr) index5++ * (UIntPtr) sizeof (s134995860702422.s978582079522627)), s655372335012907, s878205069132055_1, s731598675179963.s932126587158795, true, -2147483136);
            }
            int s878205069132055_2 = this.s082215746354109(s731598675179963.s934771782930718);
            if (0 < s878205069132055_2)
            {
              byte* s655372335012907 = stackalloc byte[s878205069132055_2];
              this.s689437577031396((s134995860702422.s978582079522627*) ((UIntPtr) s146628835912847 + (UIntPtr) index5++ * (UIntPtr) sizeof (s134995860702422.s978582079522627)), s655372335012907, s878205069132055_2, s731598675179963.s934771782930718, false, -2147483136);
            }
            int s878205069132055_3 = this.s082215746354109(s731598675179963.s968901449378473);
            if (0 < s878205069132055_3)
            {
              byte* s655372335012907 = stackalloc byte[s878205069132055_3];
              this.s689437577031396((s134995860702422.s978582079522627*) ((UIntPtr) s146628835912847 + (UIntPtr) index5++ * (UIntPtr) sizeof (s134995860702422.s978582079522627)), s655372335012907, s878205069132055_3, s731598675179963.s968901449378473, true, -2147479552);
            }
            int s878205069132055_4 = this.s082215746354109(s731598675179963.s274985238261465);
            if (0 < s878205069132055_4)
            {
              byte* s655372335012907 = stackalloc byte[s878205069132055_4];
              this.s689437577031396((s134995860702422.s978582079522627*) ((UIntPtr) s146628835912847 + (UIntPtr) index5++ * (UIntPtr) sizeof (s134995860702422.s978582079522627)), s655372335012907, s878205069132055_4, s731598675179963.s274985238261465, false, -2147479552);
            }
          }
          if (index5 == 0)
            s146628835912847 = (s134995860702422.s978582079522627*) null;
          int s697879424542264;
          try
          {
            s134995860702422.s506974201724280 s747280970009824 = new s134995860702422.s506974201724280();
            // ISSUE: cast to a reference type
            // ISSUE: explicit reference operation
            (^(s134995860702422.s354715168584383&) ref s747280970009824).s911801933145130 = 1U;
            s747280970009824.s321976833129537 = index5;
            s747280970009824.s410739269550137 = s146628835912847;
            if (s731598675179963.s267351783375301 || s731598675179963.s968901449378473 != null || s731598675179963.s274985238261465 != null)
              s747280970009824.s512056497173895 |= 4U;
            if (s296407382341486)
            {
              // ISSUE: cast to a reference type
              // ISSUE: explicit reference operation
              (^(s134995860702422.s354715168584383&) ref s747280970009824).s911801933145130 = 2U;
            }
            uint s957561436141092 = s584577124581129 == s584577124581129.SendManifest ? 2U : 1U;
            s697879424542264 = s134995860702422.s916796164398737(this.s444559022814349, ref s924106583049883, s957561436141092, (byte) s064595108712918, s158548255637677, num2, this.s638220764275299, ref s747280970009824);
          }
          catch (TypeLoadException ex)
          {
            s697879424542264 = s134995860702422.s583772494610037(ref s924106583049883, (Guid*) null, this.s444559022814349, 1, (byte) s064595108712918, s158548255637677, num2, 0U, s146628835912847);
          }
          Marshal.ThrowExceptionForHR(s134995860702422.s378247297349470(s697879424542264));
        }
        if (s584577124581129 == s584577124581129.Update)
        {
          lock (this.s599881591322878)
            this.s599881591322878[s924106583049883] = s158548255637677;
        }
        this.s929225137247463 = true;
        return this.s643613628681458;
      }
    }

    [Obsolete("Use EnableProvider(string, TraceEventLevel, ulong, TraceEventProviderOptions) overload instead")]
    public bool s506913721530548(
      string s817729973532675,
      s770697808449953 s083596646893120,
      ulong s761091235200037,
      s848643337351137 s656562186436913,
      IEnumerable<KeyValuePair<string, string>> s877925710613468 = null)
    {
      Guid s150541275455561 = s820276167648377.s591057928635590(s817729973532675);
      if (s150541275455561 == Guid.Empty)
        s150541275455561 = s820276167648377.s011035710628855(s817729973532675);
      return this.s746852557621843(s150541275455561, s083596646893120, s761091235200037, s656562186436913, s877925710613468);
    }

    [Obsolete("Use EnableProvider(Guid, TraceEventLevel, ulong, TraceEventProviderOptions) overload instead")]
    public bool s746852557621843(
      Guid s150541275455561,
      s770697808449953 s241033815482425,
      ulong s966395400036666,
      s848643337351137 s015340570511846,
      IEnumerable<KeyValuePair<string, string>> s284178455784907 = null)
    {
      s486097654034468 s731598675179963 = new s486097654034468()
      {
        s703431912216413 = s284178455784907
      };
      if ((s015340570511846 & s848643337351137.Stacks) != s848643337351137.None)
        s731598675179963.s267351783375301 = true;
      return this.s134449794879402(s150541275455561, s241033815482425, s966395400036666, s731598675179963);
    }

    [Obsolete("Use TraceEventProviderOptions.RawArguments overload instead")]
    public void s177073537864877(
      Guid s845481127819414,
      s770697808449953 s793513309199333,
      ulong s911341969694100,
      s848643337351137 s556858750656802,
      byte[] s287812528709847,
      int s475339137434515)
    {
      byte[] destinationArray = s287812528709847;
      if (destinationArray.Length != s475339137434515)
      {
        destinationArray = new byte[s475339137434515];
        Array.Copy((Array) s287812528709847, (Array) destinationArray, destinationArray.Length);
      }
      s486097654034468 s731598675179963 = new s486097654034468()
      {
        s288094279949504 = destinationArray
      };
      if ((s556858750656802 & s848643337351137.Stacks) != s848643337351137.None)
        s731598675179963.s267351783375301 = true;
      this.s134449794879402(s845481127819414, s793513309199333, s911341969694100, s731598675179963);
    }

    [Obsolete("Use TraceEventProviderOptions.AddArgument instead")]
    public static Dictionary<string, string> s575105894464966(
      params string[] s005467815736582)
    {
      Dictionary<string, string> dictionary = new Dictionary<string, string>();
      for (int index = 1; index < s005467815736582.Length; index += 2)
        dictionary.Add(s005467815736582[index - 1], s005467815736582[index]);
      return dictionary;
    }

    public unsafe bool s797967179939447(
      s137522757078529.s660517987505187 s551107214565423,
      s137522757078529.s660517987505187 s745073542109209 = s137522757078529.s660517987505187.None)
    {
      s551107214565423 |= s745073542109209;
      lock (this)
      {
        if (Registry.GetValue("HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control", "ContainerType", (object) null) is int)
        {
          s551107214565423 &= s137522757078529.s660517987505187.ImageLoad | s137522757078529.s660517987505187.Process | s137522757078529.s660517987505187.ProcessCounters | s137522757078529.s660517987505187.Profile | s137522757078529.s660517987505187.Thread | s137522757078529.s660517987505187.ContextSwitch;
          s745073542109209 &= s137522757078529.s660517987505187.ImageLoad | s137522757078529.s660517987505187.Process | s137522757078529.s660517987505187.ProcessCounters | s137522757078529.s660517987505187.Profile | s137522757078529.s660517987505187.Thread | s137522757078529.s660517987505187.ContextSwitch;
        }
        if (s551107214565423 != s137522757078529.s660517987505187.None)
          s551107214565423 |= s137522757078529.s660517987505187.Process | s137522757078529.s660517987505187.Thread;
        bool flag1 = false;
        if (!s752892378058130.s569164546966561(60))
          throw new NotSupportedException("Kernel Event Tracing is only supported on Windows 6.0 (Vista) and above.");
        if (this.s444559022814349 != ulong.MaxValue || this.s624101517095145 != null)
          throw new Exception("The kernel provider must be enabled first and only once in a session.");
        if (this.s007836645914991 != s137522757078529.s671563908199122)
        {
          if ((s551107214565423 & s137522757078529.s416801980885347) != s137522757078529.s660517987505187.None)
            throw new NotSupportedException("Keyword specified this is only supported on the " + s137522757078529.s671563908199122 + " session.");
          if (!s752892378058130.s569164546966561(62))
          {
            if (this.s837127416210271 != null)
              throw new NotSupportedException("System Tracing is only supported on Windows 8 and above.");
            s224125339561461 s224125339561461 = new s224125339561461(s137522757078529.s671563908199122);
            bool flag2 = s224125339561461.s797967179939447(s551107214565423, s745073542109209);
            this.s624101517095145 = s224125339561461;
            return flag2;
          }
          flag1 = true;
        }
        if ((s551107214565423 & (s137522757078529.s660517987505187.Profile | s137522757078529.s660517987505187.PMCProfile)) != s137522757078529.s660517987505187.None)
        {
          s134995860702422.s006339029243813(11U);
          double num = (double) this.s564364632862923 * 10000.0 + 0.5;
          if (num >= (double) int.MaxValue || (int) num > 10000000)
            throw new ApplicationException("CPU Sampling interval is too large.");
          if (!ETWControl.SetCpuSamplingRate((int) num) && (double) this.s564364632862923 != 1.0)
            throw new ApplicationException("Can't set CPU sampling to " + this.s564364632862923.ToString("f3") + "MSec.");
        }
        if (this.s856198783830915 && (s551107214565423 & s137522757078529.s416801980885347) != s137522757078529.s660517987505187.None)
          throw new ApplicationException("Using kernel flags that are Incompatible with InMemoryCircularBuffer.");
        byte* s859326862244669 = stackalloc byte[s224125339561461.s022919781992267];
        s134995860702422.s927874108563264* s123710288904572 = this.s875960932045564(s859326862244669);
        int num1 = 0;
        STACK_TRACING_EVENT_ID* stackTracingEventIdPtr = stackalloc STACK_TRACING_EVENT_ID[96];
        if (s745073542109209 != s137522757078529.s660517987505187.None)
          num1 = s224125339561461.s762857119197282(s745073542109209, stackTracingEventIdPtr, 96);
        bool flag3 = false;
        int s697879424542264;
        if (flag1)
        {
          s123710288904572->s770207582060979 |= 33554432U;
          this.s596874619695258(s123710288904572);
          Marshal.ThrowExceptionForHR(s134995860702422.s378247297349470(s134995860702422.s702249946667553(this.s444559022814349, (s134995860702422.s267532197552653) 3, (void*) stackTracingEventIdPtr, num1 * sizeof (STACK_TRACING_EVENT_ID))));
          ulong* s342077011301735 = stackalloc ulong[1];
          s342077011301735[0] = (ulong) (s551107214565423 & ~s137522757078529.s416801980885347);
          s697879424542264 = s134995860702422.s702249946667553(this.s444559022814349, (s134995860702422.s267532197552653) 4, (void*) s342077011301735, 8);
          Marshal.ThrowExceptionForHR(s134995860702422.s378247297349470(s697879424542264));
          flag3 = true;
        }
        else
        {
          ((s134995860702422.s779020505576281*) s123710288904572)->s868273599901471.s888372227343298 = s137522757078529.s830809025931954;
          s123710288904572->s561877238766649 = (uint) s551107214565423;
          s697879424542264 = ETWKernelControl.StartKernelSession(ref this.s444559022814349, (void*) s123710288904572, s224125339561461.s022919781992267, stackTracingEventIdPtr, num1);
          if (s697879424542264 == 183)
          {
            flag3 = true;
            this.s880109035437929();
            this.s525165291176627 = false;
            Thread.Sleep(100);
            s697879424542264 = ETWKernelControl.StartKernelSession(ref this.s444559022814349, (void*) s123710288904572, s224125339561461.s022919781992267, stackTracingEventIdPtr, num1);
          }
        }
        if (s697879424542264 == 5 && s752892378058130.s569164546966561(51))
          throw new UnauthorizedAccessException("Error Starting ETW:  Access Denied (Administrator rights required to start ETW)");
        Marshal.ThrowExceptionForHR(s134995860702422.s378247297349470(s697879424542264));
        this.s929225137247463 = true;
        if (s752892378058130.s569164546966561(62) && this.s865734695611913)
          ETWControl.EnableStackCaching(this.s444559022814349);
        return flag3;
      }
    }

    public unsafe void s938081449182485(int s272747753731468)
    {
      if (this.s444559022814349 != ulong.MaxValue)
        throw new ApplicationException("Heap Provider can only be used in its own session.");
      byte* s859326862244669 = stackalloc byte[s224125339561461.s022919781992267];
      Marshal.ThrowExceptionForHR(s134995860702422.s378247297349470(ETWKernelControl.StartWindowsHeapSession(ref this.s444559022814349, (void*) this.s875960932045564(s859326862244669), s224125339561461.s022919781992267, s272747753731468)));
      this.s929225137247463 = true;
    }

    public unsafe void s959645834366195(string s615904806211314)
    {
      if (this.s444559022814349 != ulong.MaxValue)
        throw new ApplicationException("Heap Provider can only be used in its own session.");
      byte* s859326862244669 = stackalloc byte[s224125339561461.s022919781992267];
      Marshal.ThrowExceptionForHR(s134995860702422.s378247297349470(ETWKernelControl.StartWindowsHeapSession(ref this.s444559022814349, (void*) this.s875960932045564(s859326862244669), s224125339561461.s022919781992267, s615904806211314)));
      this.s929225137247463 = true;
    }

    public unsafe void s494095152467099(Guid s601744182141905)
    {
      lock (this)
      {
        int s697879424542264;
        try
        {
          try
          {
            s134995860702422.s506974201724280 s506974201724280 = new s134995860702422.s506974201724280();
            // ISSUE: cast to a reference type
            // ISSUE: explicit reference operation
            (^(s134995860702422.s354715168584383&) ref s506974201724280).s911801933145130 = 1U;
            s134995860702422.s506974201724280 s747280970009824 = s506974201724280;
            s697879424542264 = s134995860702422.s916796164398737(this.s444559022814349, ref s601744182141905, 0U, (byte) 0, 0UL, 0UL, this.s638220764275299, ref s747280970009824);
          }
          catch (TypeLoadException ex)
          {
            s697879424542264 = s134995860702422.s583772494610037(ref s601744182141905, (Guid*) null, this.s444559022814349, 0, (byte) 0, 0UL, 0UL, 0U, (s134995860702422.s978582079522627*) null);
          }
        }
        catch (TypeLoadException ex)
        {
          s697879424542264 = s134995860702422.s737218818375802(0U, 0, 0, ref s601744182141905, this.s444559022814349);
        }
        Marshal.ThrowExceptionForHR(s134995860702422.s378247297349470(s697879424542264));
      }
    }

    public void s060859844832939(string s686369497658178)
    {
      Guid s601744182141905 = s820276167648377.s591057928635590(s686369497658178);
      if (s601744182141905 == Guid.Empty)
        s601744182141905 = s820276167648377.s011035710628855(s686369497658178);
      this.s494095152467099(s601744182141905);
    }

    public unsafe bool s880109035437929(bool s838369085345375 = false)
    {
      lock (this)
      {
        if (this.s525165291176627)
          return true;
        this.s525165291176627 = true;
        try
        {
          this.s434693565787816();
        }
        catch (Exception ex)
        {
        }
        ETWControl.SetCpuSamplingRate(10000);
        byte* s859326862244669 = stackalloc byte[s224125339561461.s022919781992267];
        int s697879424542264 = s134995860702422.s810705513161004(0UL, this.s007836645914991, this.s875960932045564(s859326862244669), 1U);
        ETWKernelControl.ResetWindowsHeapTracingFlags(this.s007836645914991, s838369085345375);
        if (s697879424542264 != 0 && s697879424542264 != 4201)
        {
          if (!s838369085345375)
            Marshal.ThrowExceptionForHR(s134995860702422.s378247297349470(s697879424542264));
          return false;
        }
        this.s122429092205110 = -1;
        return true;
      }
    }

    public void s965818621382217()
    {
      lock (this)
      {
        if (this.s499662953486612)
        {
          this.s499662953486612 = false;
          if (this.s966120535744663)
            this.s880109035437929(true);
        }
        if (this.s444559022814349 != ulong.MaxValue)
        {
          s134995860702422.s373861679794889(this.s444559022814349);
          this.s444559022814349 = ulong.MaxValue;
        }
        if (this.s711828367404598 != null)
        {
          this.s711828367404598.s073328348227473();
          this.s711828367404598 = (s302986156607931) null;
        }
        if (this.s624101517095145 != null)
        {
          this.s624101517095145.s965818621382217();
          this.s624101517095145 = (s224125339561461) null;
        }
        GC.SuppressFinalize((object) this);
      }
    }

    public unsafe void s753826957778543()
    {
      lock (this)
      {
        if (this.s525165291176627)
          return;
        byte* s859326862244669 = stackalloc byte[s224125339561461.s022919781992267];
        Marshal.ThrowExceptionForHR(s134995860702422.s378247297349470(s134995860702422.s810705513161004(0UL, this.s007836645914991, this.s875960932045564(s859326862244669), 3U)));
      }
    }

    public unsafe void s675486477515232(string s708322030236750)
    {
      if (this.s510561802066167 != 0)
        throw new InvalidOperationException("Cannot set file name when MultiFileMB is also non-zero.");
      string s837127416210271 = this.s837127416210271;
      if (s837127416210271 != null)
        this.s753826957778543();
      byte* s859326862244669 = stackalloc byte[s224125339561461.s022919781992267];
      this.s837127416210271 = s708322030236750;
      s134995860702422.s927874108563264* s410404561390610 = this.s875960932045564(s859326862244669);
      if (s837127416210271 != null)
      {
        Marshal.ThrowExceptionForHR(s134995860702422.s378247297349470(s134995860702422.s810705513161004(0UL, this.s007836645914991, s410404561390610, 2U)));
      }
      else
      {
        if (this.s850960115682603 == 0)
          throw new InvalidOperationException("Can only update the file name of a file base session.");
        this.s753826957778543();
        this.s837127416210271 = (string) null;
      }
      if (!this.s557172540178653)
        return;
      lock (this.s599881591322878)
      {
        foreach (KeyValuePair<Guid, ulong> keyValuePair in this.s599881591322878)
          this.s051008048633363(keyValuePair.Key, keyValuePair.Value);
      }
    }

    public bool s557172540178653 { get; set; }

    public unsafe void s051008048633363(
      Guid s952896212376323,
      ulong s490979223254178 = 18446744073709551615,
      int s989491708310908 = 0,
      object s997128512018514 = null)
    {
      lock (this)
      {
        if (this.s007836645914991 == s137522757078529.s671563908199122)
          throw new NotSupportedException("Can only capture state on user mode sessions.");
        this.s596874619695258();
        s134995860702422.s506974201724280 s747280970009824 = new s134995860702422.s506974201724280();
        s134995860702422.s978582079522627 s978582079522627 = new s134995860702422.s978582079522627();
        // ISSUE: cast to a reference type
        // ISSUE: explicit reference operation
        (^(s134995860702422.s354715168584383&) ref s747280970009824).s911801933145130 = 1U;
        byte[] numArray = s997128512018514 as byte[];
        if (s997128512018514 is int num)
          numArray = new byte[4]
          {
            (byte) num,
            (byte) (num >> 8),
            (byte) (num >> 16),
            (byte) (num >> 24)
          };
        fixed (byte* numPtr = numArray)
        {
          if (numArray != null)
          {
            s747280970009824.s410739269550137 = &s978582079522627;
            s978582079522627.s684836206159172 = s989491708310908;
            s978582079522627.s704485487021127 = numArray.Length;
            // ISSUE: cast to a reference type
            // ISSUE: explicit reference operation
            (^(s134995860702422.s619021218427252&) ref s978582079522627).s463869369571601 = numPtr;
          }
          Marshal.ThrowExceptionForHR(s134995860702422.s378247297349470(s134995860702422.s916796164398737(this.s444559022814349, ref s952896212376323, 2U, (byte) 5, s490979223254178, 0UL, this.s638220764275299, ref s747280970009824)));
        }
      }
    }

    public int s638220764275299 { get; set; }

    public bool s477109601620621
    {
      get => this.s499662953486612;
      set => this.s499662953486612 = value;
    }

    public int s652416376416677
    {
      get => this.s850960115682603;
      set
      {
        if (this.s593112490329709)
          throw new InvalidOperationException("Property can't be changed after a provider has started.");
        if (this.s510561802066167 != 0)
          throw new InvalidOperationException("Cannot specify both CircularBufferMB and MultiFileMB.");
        this.s850960115682603 = value;
      }
    }

    public int s569457092382465
    {
      get => this.s510561802066167;
      set
      {
        if (this.s593112490329709)
          throw new InvalidOperationException("Property can't be changed after a provider has started.");
        if (this.s837127416210271 == null)
          throw new InvalidOperationException("MultiFile is only allowed on sessions with files.");
        if (this.s850960115682603 != 0)
          throw new InvalidOperationException("Cannot specify both CircularBufferMB and MultiFileMB.");
        if (!this.s837127416210271.EndsWith(".etl", StringComparison.OrdinalIgnoreCase))
          throw new InvalidOperationException("FileName must have .etl suffix");
        if (value == 0)
        {
          if (this.s837127416210271.EndsWith("%d.etl", StringComparison.OrdinalIgnoreCase))
            this.s837127416210271 = this.s837127416210271.Substring(0, this.s837127416210271.Length - 6) + ".etl";
        }
        else if (!this.s837127416210271.EndsWith("%d.etl", StringComparison.OrdinalIgnoreCase))
          this.s837127416210271 = this.s837127416210271.Substring(0, this.s837127416210271.Length - 4) + "%d.etl";
        this.s510561802066167 = value;
      }
    }

    public int s236002461417158
    {
      get => this.s408532809342457;
      set
      {
        if (this.s593112490329709)
          throw new InvalidOperationException("Property can't be changed after a provider has started.");
        this.s408532809342457 = value;
      }
    }

    public int s201884072467587
    {
      get => this.s265374482115543;
      set
      {
        if (this.s593112490329709)
          throw new InvalidOperationException("Property can't be changed after a provider has started.");
        this.s265374482115543 = value;
        if (this.s265374482115543 >= Environment.ProcessorCount)
          return;
        this.s265374482115543 = Environment.ProcessorCount;
      }
    }

    public float s564364632862923
    {
      get => this.s097009854879414;
      set
      {
        if (this.s593112490329709)
          throw new InvalidOperationException("Property can't be changed after a provider has started.");
        this.s097009854879414 = value;
      }
    }

    public bool s865734695611913
    {
      get => this.s056731064898615;
      set
      {
        if (this.s593112490329709)
          throw new InvalidOperationException("Property can't be changed after a provider has started.");
        this.s056731064898615 = value;
      }
    }

    public string s190391941330940 => this.s007836645914991;

    public string s724630331595977 => this.s837127416210271;

    public s302986156607931 s826438762965357
    {
      get
      {
        if (this.s711828367404598 == null)
        {
          if (!this.s496907593238829)
            throw new InvalidOperationException("Only non-file based, non-circular ('real time') sessions have can have a source associated with them.");
          if (this.s624101517095145 != null && !this.s891925715219034)
            throw new InvalidOperationException("Can only use Kernel events in real time sessions on Windows 7 if you use TraceLog.CreateFroms224125339561461");
          if (this.s444559022814349 == ulong.MaxValue)
          {
            if (this.s007836645914991 == s137522757078529.s671563908199122)
              throw new NotSupportedException("Kernel sessions must be started (EnableKernelProvider called) before accessing the source.");
            this.s596874619695258();
          }
          this.s711828367404598 = new s302986156607931(this.s190391941330940, s707087110524030.Session);
        }
        return this.s711828367404598;
      }
    }

    public bool s593112490329709 => this.s929225137247463 && !this.s525165291176627;

    public unsafe int s769692335159029
    {
      get
      {
        byte* s859326862244669 = stackalloc byte[s224125339561461.s022919781992267];
        s134995860702422.s927874108563264* s410404561390610 = this.s875960932045564(s859326862244669);
        Marshal.ThrowExceptionForHR(s134995860702422.s378247297349470(s134995860702422.s810705513161004(0UL, this.s007836645914991, s410404561390610, 0U)));
        return (int) s410404561390610->s571206793998592;
      }
    }

    public bool s561426440439964 => this.s850960115682603 != 0;

    public bool s197758594022754 => this.s837127416210271 == null && !this.s561426440439964;

    public bool s856198783830915 => this.s837127416210271 == null && this.s561426440439964;

    public static unsafe List<string> s724921151060838()
    {
      int num = sizeof (s134995860702422.s927874108563264) + 2048 + 2048;
      byte* numPtr = stackalloc byte[64 * num];
      s134995860702422.s927874108563264** s525089799472244 = stackalloc s134995860702422.s927874108563264*[64];
      for (int index = 0; index < 64; ++index)
      {
        s134995860702422.s927874108563264* s927874108563264Ptr = (s134995860702422.s927874108563264*) (numPtr + num * index);
        // ISSUE: cast to a reference type
        // ISSUE: explicit reference operation
        (^(s134995860702422.s684425418531571&) ref ((s134995860702422.s779020505576281*) s927874108563264Ptr)->s868273599901471).s184782923360651 = (uint) num;
        s927874108563264Ptr->s411272018307633 = (uint) sizeof (s134995860702422.s927874108563264);
        s927874108563264Ptr->s634666398464007 = (uint) (sizeof (s134995860702422.s927874108563264) + 2048);
        s525089799472244[index] = s927874108563264Ptr;
      }
      int s090828246456815 = 0;
      Marshal.ThrowExceptionForHR(s134995860702422.s378247297349470(s134995860702422.s438654643371197((IntPtr) (void*) s525089799472244, 64, ref s090828246456815)));
      List<string> stringList = new List<string>();
      for (int index = 0; index < s090828246456815; ++index)
      {
        string str = new string((char*) ((UIntPtr) s525089799472244[index] + (UIntPtr) s525089799472244[index]->s411272018307633));
        stringList.Add(str);
      }
      return stringList;
    }

    public static void s407531202664664(
      string[] s707946272203221,
      string s913806785975393,
      s646088455831881 s195094168075032 = s646088455831881.None)
    {
      EVENT_TRACE_MERGE_EXTENDED_DATA mergeExtendedData = (EVENT_TRACE_MERGE_EXTENDED_DATA) 31;
      if ((s195094168075032 & s646088455831881.Compress) != s646088455831881.None && s752892378058130.s569164546966561(62))
        mergeExtendedData = (EVENT_TRACE_MERGE_EXTENDED_DATA) (mergeExtendedData | 268435456);
      ETWKernelControl.Merge(s707946272203221, s913806785975393, mergeExtendedData);
    }

    public static void s821231821767608(string s649063600246541, TextWriter s782430592556586)
    {
      string path = Path.GetDirectoryName(s649063600246541);
      if (path.Length == 0)
        path = ".";
      string withoutExtension = Path.GetFileNameWithoutExtension(s649063600246541);
      List<string> stringList = new List<string>();
      stringList.Add(s649063600246541);
      stringList.AddRange((IEnumerable<string>) Directory.GetFiles(path, withoutExtension + ".kernel*.etl"));
      stringList.AddRange((IEnumerable<string>) Directory.GetFiles(path, withoutExtension + ".clr*.etl"));
      stringList.AddRange((IEnumerable<string>) Directory.GetFiles(path, withoutExtension + ".user*.etl"));
      string str = Path.ChangeExtension(s649063600246541, ".etl.new");
      try
      {
        s224125339561461.s407531202664664(stringList.ToArray(), str);
        foreach (string s252262365546032 in stringList)
          s916389884151353.s760644410246924(s252262365546032);
        s916389884151353.s390345387705666(str, s649063600246541);
      }
      finally
      {
        if (File.Exists(str))
          File.Delete(str);
      }
    }

    public static bool? s871318643095650() => s134995860702422.s884477392058641();

    public static void s693426346246027() => s134995860702422.s006339029243813(20U);

    ~s224125339561461() => this.s965818621382217();

    internal static unsafe SortedDictionary<string, Guid> s367026656561726
    {
      get
      {
        if (s224125339561461.s629658621325162 == null)
        {
          s224125339561461.s629658621325162 = new SortedDictionary<string, Guid>((IComparer<string>) StringComparer.OrdinalIgnoreCase);
          int s952838924309277 = 0;
          s134995860702422.s192074354841133((s134995860702422.s380092122726970*) null, ref s952838924309277);
          byte* numPtr = stackalloc byte[s952838924309277];
          s134995860702422.s380092122726970* s860027619811931 = (s134995860702422.s380092122726970*) numPtr;
          int num = s134995860702422.s192074354841133(s860027619811931, ref s952838924309277);
          if (num != 0)
          {
            Trace.WriteLine("TdhEnumerateProviders failed HR = " + (object) num);
            ((s134995860702422.s831506793110629*) s860027619811931)->s462809342415848 = 0;
          }
          s134995860702422.s831506793110629* s831506793110629Ptr = (s134995860702422.s831506793110629*) (s860027619811931 + 1);
          for (int index = 0; index < ((s134995860702422.s831506793110629*) s860027619811931)->s462809342415848; ++index)
          {
            string key = new string((char*) (numPtr + s831506793110629Ptr[index].s061545196479761));
            s224125339561461.s629658621325162[key] = ((s134995860702422.s769721919807420*) (s831506793110629Ptr + index))->s003831940355958;
          }
        }
        return s224125339561461.s629658621325162;
      }
    }

    internal static Dictionary<Guid, string> s471517294726064
    {
      get
      {
        if (s224125339561461.s167196363231295 == null)
        {
          s224125339561461.s167196363231295 = new Dictionary<Guid, string>(s224125339561461.s367026656561726.Count);
          foreach (KeyValuePair<string, Guid> keyValuePair in s224125339561461.s367026656561726)
            s224125339561461.s167196363231295[keyValuePair.Value] = keyValuePair.Key;
        }
        return s224125339561461.s167196363231295;
      }
    }

    private bool s496907593238829 => this.s837127416210271 == null && this.s850960115682603 == 0;

    private unsafe void s689437577031396(
      s134995860702422.s978582079522627* s876346188159005,
      byte* s655372335012907,
      int s878205069132055,
      IList<int> s427723340768618,
      bool s337004751085712,
      int s624633609072362)
    {
      s876346188159005->s684836206159172 = s624633609072362;
      s876346188159005->s704485487021127 = s878205069132055;
      ((s134995860702422.s619021218427252*) s876346188159005)->s463869369571601 = s655372335012907;
      s134995860702422.s354715168584383* s354715168584383Ptr = (s134995860702422.s354715168584383*) s655372335012907;
      ((s134995860702422.s978582079522627*) s354715168584383Ptr)->s963438547999557 = s337004751085712 ? (byte) 1 : (byte) 0;
      s354715168584383Ptr->s041556335432025 = (byte) 0;
      s354715168584383Ptr->s492201341033861 = (ushort) s427723340768618.Count;
      // ISSUE: cast to a reference type
      // ISSUE: explicit reference operation
      // ISSUE: reference to a compiler-generated field
      ushort* numPtr = &(^(s134995860702422.s619021218427252.s372624366181576&) ref s354715168584383Ptr->s889353560957723).s443643845094598;
      foreach (int num in (IEnumerable<int>) s427723340768618)
        *numPtr++ = (ushort) num;
    }

    private int s082215746354109(IList<int> s264289986686021) => s264289986686021 == null || s264289986686021.Count == 0 ? 0 : (s264289986686021.Count - 1) * 2 + sizeof (s134995860702422.s354715168584383);

    private static int s284745858789294(Guid s257493386702645)
    {
      List<s134995860702422.s138699372264905> s138699372264905List = s820276167648377.s485586722312421(s257493386702645, 0);
      for (int index = 44; index <= 47; ++index)
      {
        long num = 1L << index;
        bool flag = false;
        if (s138699372264905List != null)
        {
          foreach (s134995860702422.s138699372264905 s138699372264905 in s138699372264905List)
          {
            if ((s138699372264905.s701272911595391 & num) != 0L)
            {
              flag = true;
              break;
            }
          }
        }
        if (!flag)
          return index;
      }
      throw new NotSupportedException("Error enabling provider " + (object) s257493386702645 + ": Exceeded the maximum of 4 sessions can simultaneously use provider key-value arguments on a single provider simultaneously");
    }

    private void s434693565787816()
    {
      if (this.s007836645914991 == s137522757078529.s671563908199122 || this.s122429092205110 == -1)
        return;
      string name = this.s115064939735750();
      using (RegistryKey registryKey1 = Registry.LocalMachine.OpenSubKey(name, true))
      {
        foreach (string subKeyName in registryKey1.GetSubKeyNames())
        {
          if (subKeyName.StartsWith("{") && subKeyName.EndsWith("}"))
          {
            string g = subKeyName.Substring(1, subKeyName.Length - 2);
            List<KeyValuePair<string, bool>> keyValuePairList = new List<KeyValuePair<string, bool>>();
            using (RegistryKey registryKey2 = registryKey1.OpenSubKey(subKeyName))
            {
              foreach (string valueName in registryKey2.GetValueNames())
              {
                int result;
                if (valueName.StartsWith("ControllerData_Session_") && int.TryParse(valueName.Substring(23), out result))
                {
                  if (result == this.s122429092205110)
                  {
                    keyValuePairList.Add(new KeyValuePair<string, bool>(g.ToString(), false));
                    break;
                  }
                }
                else if (valueName == "ControllerData")
                {
                  List<s134995860702422.s138699372264905> s138699372264905List = s820276167648377.s485586722312421(new Guid(g), 0);
                  bool flag = false;
                  if (s138699372264905List != null)
                  {
                    foreach (s134995860702422.s138699372264905 s138699372264905 in s138699372264905List)
                    {
                      if ((int) s138699372264905.s670419094421919 != this.s122429092205110)
                        flag = true;
                    }
                  }
                  if (!flag)
                    keyValuePairList.Add(new KeyValuePair<string, bool>(g.ToString(), true));
                }
              }
            }
            foreach (KeyValuePair<string, bool> keyValuePair in keyValuePairList)
              this.s188383024508057(keyValuePair.Key, (byte[]) null, keyValuePair.Value);
          }
        }
      }
    }

    private string s115064939735750() => Marshal.SizeOf(typeof (IntPtr)) == 8 ? "Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Winevt\\Publishers" : "Software\\Microsoft\\Windows\\CurrentVersion\\Winevt\\Publishers";

    private void s188383024508057(
      string s422899658401333,
      byte[] s314702977026286,
      bool s597221268400466 = false)
    {
      string name1 = this.s115064939735750();
      string subkey = "{" + s422899658401333 + "}";
      string name2 = name1 + "\\" + subkey;
      string str = s597221268400466 ? "ControllerData" : "ControllerData_Session_" + this.s122429092205110.ToString();
      if (s314702977026286 != null)
      {
        Registry.SetValue("HKEY_LOCAL_MACHINE\\" + name2, str, (object) s314702977026286, RegistryValueKind.Binary);
      }
      else
      {
        bool flag = false;
        using (RegistryKey registryKey1 = Registry.LocalMachine.OpenSubKey(name2, true))
        {
          if (registryKey1 != null)
          {
            registryKey1.DeleteValue(str, false);
            if (registryKey1.GetValueNames().Length == 0)
              flag = true;
          }
          if (!flag)
            return;
          using (RegistryKey registryKey2 = Registry.LocalMachine.OpenSubKey(name1, true))
          {
            try
            {
              registryKey2.DeleteSubKey(subkey);
            }
            catch (Exception ex)
            {
            }
          }
        }
      }
    }

    private static unsafe int s762857119197282(
      s137522757078529.s660517987505187 s449725065139116,
      STACK_TRACING_EVENT_ID* s860113108588916,
      int s220602546652725)
    {
      int index1 = 0;
      if ((s449725065139116 & s137522757078529.s660517987505187.Profile) != s137522757078529.s660517987505187.None)
      {
        s860113108588916[index1].EventGuid = s137522757078529.s578404522228269;
        s860113108588916[index1].Type = (byte) 46;
        ++index1;
      }
      if ((s449725065139116 & s137522757078529.s660517987505187.PMCProfile) != s137522757078529.s660517987505187.None)
      {
        s860113108588916[index1].EventGuid = s137522757078529.s578404522228269;
        s860113108588916[index1].Type = (byte) 47;
        ++index1;
      }
      if ((s449725065139116 & s137522757078529.s660517987505187.SystemCall) != s137522757078529.s660517987505187.None)
      {
        s860113108588916[index1].EventGuid = s137522757078529.s578404522228269;
        s860113108588916[index1].Type = (byte) 52;
        ++index1;
      }
      if ((s449725065139116 & s137522757078529.s660517987505187.Thread) != s137522757078529.s660517987505187.None)
      {
        s860113108588916[index1].EventGuid = s137522757078529.s189115095127313;
        s860113108588916[index1].Type = (byte) 1;
        ++index1;
      }
      if ((s449725065139116 & s137522757078529.s660517987505187.ContextSwitch) != s137522757078529.s660517987505187.None)
      {
        s860113108588916[index1].EventGuid = s137522757078529.s189115095127313;
        s860113108588916[index1].Type = (byte) 36;
        ++index1;
      }
      if ((s449725065139116 & s137522757078529.s660517987505187.ThreadPriority) != s137522757078529.s660517987505187.None)
      {
        s860113108588916[index1].EventGuid = s137522757078529.s189115095127313;
        s860113108588916[index1].Type = (byte) 48;
        int index2 = index1 + 1;
        s860113108588916[index2].EventGuid = s137522757078529.s189115095127313;
        s860113108588916[index2].Type = (byte) 49;
        index1 = index2 + 1;
      }
      if ((s449725065139116 & s137522757078529.s660517987505187.Dispatcher) != s137522757078529.s660517987505187.None)
      {
        s860113108588916[index1].EventGuid = s137522757078529.s189115095127313;
        s860113108588916[index1].Type = (byte) 50;
        ++index1;
      }
      if ((s449725065139116 & s137522757078529.s660517987505187.IOQueue) != s137522757078529.s660517987505187.None)
      {
        s860113108588916[index1].EventGuid = s137522757078529.s189115095127313;
        s860113108588916[index1].Type = (byte) 62;
        int index3 = index1 + 1;
        s860113108588916[index3].EventGuid = s137522757078529.s189115095127313;
        s860113108588916[index3].Type = (byte) 63;
        index1 = index3 + 1;
      }
      if ((s449725065139116 & s137522757078529.s660517987505187.Handle) != s137522757078529.s660517987505187.None)
      {
        s860113108588916[index1].EventGuid = s137522757078529.s068809454864952;
        s860113108588916[index1].Type = (byte) 32;
        int index4 = index1 + 1;
        s860113108588916[index4].EventGuid = s137522757078529.s068809454864952;
        s860113108588916[index4].Type = (byte) 33;
        int index5 = index4 + 1;
        s860113108588916[index5].EventGuid = s137522757078529.s068809454864952;
        s860113108588916[index5].Type = (byte) 34;
        index1 = index5 + 1;
      }
      if ((s449725065139116 & s137522757078529.s660517987505187.ImageLoad) != s137522757078529.s660517987505187.None)
      {
        s860113108588916[index1].EventGuid = s137522757078529.s444861771080899;
        s860113108588916[index1].Type = (byte) 10;
        ++index1;
      }
      if ((s449725065139116 & s137522757078529.s660517987505187.Process) != s137522757078529.s660517987505187.None)
      {
        s860113108588916[index1].EventGuid = s137522757078529.s444861771080899;
        s860113108588916[index1].Type = (byte) 1;
        s860113108588916[index1].Type = (byte) 11;
        ++index1;
      }
      if ((s449725065139116 & s137522757078529.s660517987505187.DiskIOInit) != s137522757078529.s660517987505187.None)
      {
        s860113108588916[index1].EventGuid = s137522757078529.s046099991553129;
        s860113108588916[index1].Type = (byte) 12;
        int index6 = index1 + 1;
        s860113108588916[index6].EventGuid = s137522757078529.s046099991553129;
        s860113108588916[index6].Type = (byte) 13;
        int index7 = index6 + 1;
        s860113108588916[index7].EventGuid = s137522757078529.s046099991553129;
        s860113108588916[index7].Type = (byte) 15;
        index1 = index7 + 1;
      }
      if ((s449725065139116 & (s137522757078529.s660517987505187.VirtualAlloc | s137522757078529.s660517987505187.ReferenceSet)) != s137522757078529.s660517987505187.None)
      {
        s860113108588916[index1].EventGuid = s137522757078529.s055422693497376;
        s860113108588916[index1].Type = (byte) 98;
        ++index1;
      }
      if ((s449725065139116 & s137522757078529.s660517987505187.VAMap) != s137522757078529.s660517987505187.None)
      {
        s860113108588916[index1].EventGuid = s137522757078529.s912909264778207;
        s860113108588916[index1].Type = (byte) 37;
        ++index1;
      }
      if ((s449725065139116 & s137522757078529.s660517987505187.MemoryHardFaults) != s137522757078529.s660517987505187.None)
      {
        s860113108588916[index1].EventGuid = s137522757078529.s656126957440686;
        s860113108588916[index1].Type = (byte) 32;
        ++index1;
      }
      if ((s449725065139116 & s137522757078529.s660517987505187.Memory) != s137522757078529.s660517987505187.None)
      {
        s860113108588916[index1].EventGuid = s137522757078529.s656126957440686;
        s860113108588916[index1].Type = (byte) 10;
        int index8 = index1 + 1;
        s860113108588916[index8].EventGuid = s137522757078529.s656126957440686;
        s860113108588916[index8].Type = (byte) 11;
        int index9 = index8 + 1;
        s860113108588916[index9].EventGuid = s137522757078529.s656126957440686;
        s860113108588916[index9].Type = (byte) 12;
        int index10 = index9 + 1;
        s860113108588916[index10].EventGuid = s137522757078529.s656126957440686;
        s860113108588916[index10].Type = (byte) 13;
        int index11 = index10 + 1;
        s860113108588916[index11].EventGuid = s137522757078529.s656126957440686;
        s860113108588916[index11].Type = (byte) 14;
        int index12 = index11 + 1;
        s860113108588916[index12].EventGuid = s137522757078529.s656126957440686;
        s860113108588916[index12].Type = (byte) 15;
        index1 = index12 + 1;
      }
      if ((s449725065139116 & s137522757078529.s660517987505187.ReferenceSet) != s137522757078529.s660517987505187.None)
      {
        s860113108588916[index1].EventGuid = s137522757078529.s656126957440686;
        s860113108588916[index1].Type = (byte) 73;
        int index13 = index1 + 1;
        s860113108588916[index13].EventGuid = s137522757078529.s656126957440686;
        s860113108588916[index13].Type = (byte) 79;
        int index14 = index13 + 1;
        s860113108588916[index14].EventGuid = s137522757078529.s656126957440686;
        s860113108588916[index14].Type = (byte) 118;
        int index15 = index14 + 1;
        s860113108588916[index15].EventGuid = s137522757078529.s656126957440686;
        s860113108588916[index15].Type = (byte) 119;
        int index16 = index15 + 1;
        s860113108588916[index16].EventGuid = s137522757078529.s656126957440686;
        s860113108588916[index16].Type = (byte) 120;
        int index17 = index16 + 1;
        s860113108588916[index17].EventGuid = s137522757078529.s656126957440686;
        s860113108588916[index17].Type = (byte) 121;
        int index18 = index17 + 1;
        s860113108588916[index18].EventGuid = s137522757078529.s656126957440686;
        s860113108588916[index18].Type = (byte) 130;
        int index19 = index18 + 1;
        s860113108588916[index19].EventGuid = s137522757078529.s656126957440686;
        s860113108588916[index19].Type = (byte) 131;
        index1 = index19 + 1;
      }
      if ((s449725065139116 & s137522757078529.s660517987505187.FileIOInit) != s137522757078529.s660517987505187.None)
      {
        s860113108588916[index1].EventGuid = s137522757078529.s912909264778207;
        s860113108588916[index1].Type = (byte) 64;
        int index20 = index1 + 1;
        s860113108588916[index20].EventGuid = s137522757078529.s912909264778207;
        s860113108588916[index20].Type = (byte) 65;
        int index21 = index20 + 1;
        s860113108588916[index21].EventGuid = s137522757078529.s912909264778207;
        s860113108588916[index21].Type = (byte) 66;
        int index22 = index21 + 1;
        s860113108588916[index22].EventGuid = s137522757078529.s912909264778207;
        s860113108588916[index22].Type = (byte) 67;
        int index23 = index22 + 1;
        s860113108588916[index23].EventGuid = s137522757078529.s912909264778207;
        s860113108588916[index23].Type = (byte) 68;
        index1 = index23 + 1;
      }
      if ((s449725065139116 & s137522757078529.s660517987505187.Registry) != s137522757078529.s660517987505187.None)
      {
        s860113108588916[index1].EventGuid = s137522757078529.s919002791779943;
        s860113108588916[index1].Type = (byte) 10;
        int index24 = index1 + 1;
        s860113108588916[index24].EventGuid = s137522757078529.s919002791779943;
        s860113108588916[index24].Type = (byte) 11;
        int index25 = index24 + 1;
        s860113108588916[index25].EventGuid = s137522757078529.s919002791779943;
        s860113108588916[index25].Type = (byte) 12;
        int index26 = index25 + 1;
        s860113108588916[index26].EventGuid = s137522757078529.s919002791779943;
        s860113108588916[index26].Type = (byte) 13;
        int index27 = index26 + 1;
        s860113108588916[index27].EventGuid = s137522757078529.s919002791779943;
        s860113108588916[index27].Type = (byte) 14;
        int index28 = index27 + 1;
        s860113108588916[index28].EventGuid = s137522757078529.s919002791779943;
        s860113108588916[index28].Type = (byte) 15;
        int index29 = index28 + 1;
        s860113108588916[index29].EventGuid = s137522757078529.s919002791779943;
        s860113108588916[index29].Type = (byte) 16;
        int index30 = index29 + 1;
        s860113108588916[index30].EventGuid = s137522757078529.s919002791779943;
        s860113108588916[index30].Type = (byte) 17;
        int index31 = index30 + 1;
        s860113108588916[index31].EventGuid = s137522757078529.s919002791779943;
        s860113108588916[index31].Type = (byte) 18;
        int index32 = index31 + 1;
        s860113108588916[index32].EventGuid = s137522757078529.s919002791779943;
        s860113108588916[index32].Type = (byte) 19;
        int index33 = index32 + 1;
        s860113108588916[index33].EventGuid = s137522757078529.s919002791779943;
        s860113108588916[index33].Type = (byte) 20;
        int index34 = index33 + 1;
        s860113108588916[index34].EventGuid = s137522757078529.s919002791779943;
        s860113108588916[index34].Type = (byte) 21;
        int index35 = index34 + 1;
        s860113108588916[index35].EventGuid = s137522757078529.s919002791779943;
        s860113108588916[index35].Type = (byte) 22;
        int index36 = index35 + 1;
        s860113108588916[index36].EventGuid = s137522757078529.s919002791779943;
        s860113108588916[index36].Type = (byte) 23;
        int index37 = index36 + 1;
        s860113108588916[index37].EventGuid = s137522757078529.s919002791779943;
        s860113108588916[index37].Type = (byte) 26;
        index1 = index37 + 1;
      }
      if ((s449725065139116 & s137522757078529.s660517987505187.AdvancedLocalProcedureCalls) != s137522757078529.s660517987505187.None)
      {
        s860113108588916[index1].EventGuid = s137522757078529.s941054388073137;
        s860113108588916[index1].Type = (byte) 33;
        int index38 = index1 + 1;
        s860113108588916[index38].EventGuid = s137522757078529.s941054388073137;
        s860113108588916[index38].Type = (byte) 34;
        int index39 = index38 + 1;
        s860113108588916[index39].EventGuid = s137522757078529.s941054388073137;
        s860113108588916[index39].Type = (byte) 35;
        int index40 = index39 + 1;
        s860113108588916[index40].EventGuid = s137522757078529.s941054388073137;
        s860113108588916[index40].Type = (byte) 36;
        int index41 = index40 + 1;
        s860113108588916[index41].EventGuid = s137522757078529.s941054388073137;
        s860113108588916[index41].Type = (byte) 37;
        index1 = index41 + 1;
      }
      return index1;
    }

    private unsafe void s596874619695258(
      s134995860702422.s927874108563264* s123710288904572 = null)
    {
      if (!this.s966120535744663)
        throw new NotSupportedException("Can not enable providers on opened with s224125339561461Options.Attach.");
      if (this.s444559022814349 != ulong.MaxValue)
        return;
      byte* s859326862244669 = stackalloc byte[s224125339561461.s022919781992267];
      if ((IntPtr) s123710288904572 == IntPtr.Zero)
        s123710288904572 = this.s875960932045564(s859326862244669);
      int s697879424542264 = s134995860702422.s926354801416407(out this.s444559022814349, this.s007836645914991, s123710288904572);
      if (s697879424542264 == 183 && this.s973036470203915)
      {
        this.s643613628681458 = true;
        this.s880109035437929();
        this.s525165291176627 = false;
        Thread.Sleep(100);
        s697879424542264 = s134995860702422.s926354801416407(out this.s444559022814349, this.s007836645914991, s123710288904572);
      }
      if (s697879424542264 == 5 && s752892378058130.s569164546966561(51))
      {
        this.s444559022814349 = ulong.MaxValue;
        throw new UnauthorizedAccessException("Error Starting ETW:  Access Denied (Administrator rights required to start ETW)");
      }
      if (s697879424542264 != 0)
      {
        this.s444559022814349 = ulong.MaxValue;
        Marshal.ThrowExceptionForHR(s134995860702422.s378247297349470(s697879424542264));
      }
      this.s122429092205110 = (int) ((s134995860702422.s779020505576281*) s123710288904572)->s868273599901471.s226439252990974;
    }

    private unsafe s134995860702422.s927874108563264* s875960932045564(
      byte* s859326862244669)
    {
      Marshal.Copy(s224125339561461.s825525040610674, 0, (IntPtr) (void*) s859326862244669, s224125339561461.s022919781992267);
      s134995860702422.s927874108563264* s927874108563264Ptr = (s134995860702422.s927874108563264*) s859326862244669;
      s927874108563264Ptr->s411272018307633 = (uint) sizeof (s134995860702422.s927874108563264);
      s927874108563264Ptr->s634666398464007 = s927874108563264Ptr->s411272018307633 + 2048U;
      if (this.s007836645914991.Length > 1023)
        throw new ArgumentException("File name too long", "sessionName");
      s224125339561461.s782437442081068((char*) ((IntPtr) s927874108563264Ptr + (IntPtr) s927874108563264Ptr->s411272018307633), this.s007836645914991);
      // ISSUE: cast to a reference type
      // ISSUE: explicit reference operation
      (^(s134995860702422.s684425418531571&) ref ((s134995860702422.s779020505576281*) s927874108563264Ptr)->s868273599901471).s184782923360651 = (uint) s224125339561461.s022919781992267;
      ((s134995860702422.s779020505576281*) s927874108563264Ptr)->s868273599901471.s092219256159407 = 131072U;
      s927874108563264Ptr->s642486313015108 = 60U;
      s927874108563264Ptr->s113720883508238 = (uint) this.s265374482115543;
      s927874108563264Ptr->s645081911767236 = (uint) (this.s408532809342457 * 1024 / this.s265374482115543);
      s927874108563264Ptr->s770207582060979 = 134217728U;
      s927874108563264Ptr->s770207582060979 = 134217728U;
      if (this.s837127416210271 == null)
      {
        s927874108563264Ptr->s642486313015108 = 1U;
        if (this.s850960115682603 == 0)
        {
          s927874108563264Ptr->s770207582060979 |= 256U;
        }
        else
        {
          s927874108563264Ptr->s770207582060979 |= 1024U;
          s927874108563264Ptr->s645081911767236 = (uint) (this.s850960115682603 * 1024 / this.s265374482115543);
          s927874108563264Ptr->s113720883508238 = (uint) this.s850960115682603;
        }
        s927874108563264Ptr->s634666398464007 = 0U;
      }
      else
      {
        if (this.s850960115682603 != 0)
        {
          s927874108563264Ptr->s770207582060979 |= 2U;
          s927874108563264Ptr->s165309352492141 = (uint) this.s850960115682603;
        }
        else if (this.s510561802066167 != 0)
        {
          s927874108563264Ptr->s770207582060979 |= 8U;
          s927874108563264Ptr->s165309352492141 = (uint) this.s510561802066167;
        }
        else
          s927874108563264Ptr->s770207582060979 |= 1U;
        if (this.s837127416210271.Length > 1023)
          throw new ArgumentException("File name too long", "fileName");
        s224125339561461.s782437442081068((char*) ((IntPtr) s927874108563264Ptr + (IntPtr) s927874108563264Ptr->s634666398464007), this.s837127416210271);
      }
      s927874108563264Ptr->s190351463811142 = s927874108563264Ptr->s645081911767236 * 5U / 4U + 10U;
      ((s134995860702422.s779020505576281*) s927874108563264Ptr)->s868273599901471.s272086062055498 = 1U;
      return s927874108563264Ptr;
    }

    private static unsafe void s782437442081068(char* s360182290364121, string s686929226492672)
    {
      fixed (char* chPtr = s686929226492672)
      {
        int index;
        for (index = 0; index < s686929226492672.Length; ++index)
          s360182290364121[index] = chPtr[index];
        s360182290364121[index] = char.MinValue;
      }
    }
  }
}
