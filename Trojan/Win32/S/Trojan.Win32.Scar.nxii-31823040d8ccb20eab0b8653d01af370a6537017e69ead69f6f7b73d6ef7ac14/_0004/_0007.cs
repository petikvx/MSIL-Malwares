// Decompiled with JetBrains decompiler
// Type: .
// Assembly: BitGenerator, Version=37.0.2.5583, Culture=neutral, PublicKeyToken=70e4c26ef2031892
// MVID: D3922F89-E00A-4D10-8BC9-9309D5539F14
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\Trojan.Win32.Scar.nxii-31823040d8ccb20eab0b8653d01af370a6537017e69ead69f6f7b73d6ef7ac14.exe

using \u0004;
using \u0008;
using \u000E;
using \u0014;
using SmartAssembly.Delegates;
using SmartAssembly.HouseOfCards;
using System;
using System.Globalization;
using System.IO;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace \u0004
{
  internal static class \u0007
  {
    internal static readonly long \u0001;
    internal static readonly int[] \u0001;
    internal static readonly int[] \u0002;
    [NonSerialized]
    internal static GetString \u0088;

    static \u0007()
    {
      if (false)
        return;
      Strings.CreateGetStringDelegate(typeof (\u0007));
      while (true)
      {
        \u0007.\u0001 = 621355968000000000L;
        if (true)
        {
          int length = 13;
          if (length != 0)
          {
            int[] numArray = new int[length];
            // ISSUE: field reference
            RuntimeHelpers.InitializeArray((Array) numArray, __fieldref (\u0012.\u0002));
            \u0007.\u0001 = numArray;
            length = 13;
          }
          int[] numArray1 = new int[length];
          // ISSUE: field reference
          RuntimeHelpers.InitializeArray((Array) numArray1, __fieldref (\u0012.\u0001));
          \u0007.\u0002 = numArray1;
          break;
        }
      }
    }

    public static TimeSpan \u0001([In] DateTime obj0) => \u0082\u0002.\u007E\u0093\u0005((object) \u0081\u0002.\u0092\u0005(), obj0);

    internal static void \u0001(
      [In] TextWriter obj0,
      [In] DateTime obj1,
      [In] \u0001 obj2,
      [In] string obj3,
      [In] CultureInfo obj4)
    {
      if (\u0007.\u009E(obj3))
      {
        char[] chArray = new char[64];
        int num = \u0007.\u0001(chArray, 0, obj1, new TimeSpan?(), obj1.Kind, obj2);
        \u009E.\u007E\u0015\u0004((object) obj0, chArray, 0, num);
      }
      else
        \u0019.\u007E\u0099\u0002((object) obj0, obj1.ToString(obj3, (IFormatProvider) obj4));
    }

    internal static int \u0001(
      [In] char[] obj0,
      [In] int obj1,
      [In] DateTime obj2,
      [In] TimeSpan? obj3,
      [In] DateTimeKind obj4,
      [In] \u0001 obj5)
    {
      int num1 = obj1;
      TimeSpan timeSpan;
      int destinationIndex1;
      int destinationIndex2;
      int num2;
      while (true)
      {
        destinationIndex1 = num1;
        if (obj5 != \u0001.\u0002)
          goto label_13;
        else
          goto label_22;
label_1:
        TimeSpan? nullable;
        timeSpan = num2 != 0 ? nullable.GetValueOrDefault() : \u0007.\u0001(obj2);
        long num3 = \u0006.\u0001(timeSpan, obj2);
        \u0007.\u0088(5046).CopyTo(0, obj0, destinationIndex1, 7);
        destinationIndex2 = destinationIndex1 + 7;
label_2:
        string str = num3.ToString((IFormatProvider) CultureInfo.InvariantCulture);
        str.CopyTo(0, obj0, destinationIndex2, str.Length);
label_3:
        int num4 = destinationIndex2 + str.Length;
        if (true)
        {
          destinationIndex1 = num4;
          if (obj4 != DateTimeKind.Unspecified)
          {
            if (obj4 != DateTimeKind.Local)
            {
              if (true)
                goto label_12;
            }
            else
              goto label_11;
          }
          if (obj2 != DateTime.MaxValue)
          {
            num2 = obj2 != DateTime.MinValue ? 1 : 0;
            if (false)
              goto label_1;
            else
              break;
          }
          else
            goto label_12;
        }
        else
        {
          num1 = num4;
          continue;
        }
label_13:
        destinationIndex2 = \u0006.\u0001(obj0, destinationIndex1, obj2);
        if (true)
        {
          switch (obj4)
          {
            case DateTimeKind.Utc:
              if (false)
                goto label_3;
              else
                goto label_19;
            case DateTimeKind.Local:
              goto label_15;
            default:
              goto label_20;
          }
        }
        else
          goto label_2;
label_22:
        nullable = obj3;
        num2 = nullable.HasValue ? 1 : 0;
        goto label_1;
      }
      if (num2 != 0)
      {
        destinationIndex1 = \u0006.\u0001(obj0, destinationIndex1, timeSpan, obj5);
        goto label_12;
      }
      else
        goto label_12;
label_11:
      destinationIndex1 = \u0006.\u0001(obj0, destinationIndex1, timeSpan, obj5);
label_12:
      \u0007.\u0088(5059).CopyTo(0, obj0, destinationIndex1, 3);
      destinationIndex2 = destinationIndex1 + 3;
      goto label_20;
label_15:
      if (true)
      {
        destinationIndex2 = \u0006.\u0001(obj0, destinationIndex2, obj3 ?? \u0007.\u0001(obj2), obj5);
        goto label_20;
      }
      else
        goto label_20;
label_19:
      obj0[destinationIndex2++] = 'Z';
label_20:
      return destinationIndex2;
    }

    internal static void \u0001(
      [In] TextWriter obj0,
      [In] DateTimeOffset obj1,
      [In] \u0001 obj2,
      [In] string obj3,
      [In] CultureInfo obj4)
    {
      if (\u0007.\u009E(obj3))
      {
        char[] chArray = new char[64];
        int num = \u0007.\u0001(chArray, 0, obj2 == \u0001.\u0001 ? obj1.DateTime : obj1.UtcDateTime, new TimeSpan?(obj1.Offset), DateTimeKind.Local, obj2);
        \u009E.\u007E\u0015\u0004((object) obj0, chArray, 0, num);
      }
      else
        \u0019.\u007E\u0099\u0002((object) obj0, obj1.ToString(obj3, (IFormatProvider) obj4));
    }
  }
}
