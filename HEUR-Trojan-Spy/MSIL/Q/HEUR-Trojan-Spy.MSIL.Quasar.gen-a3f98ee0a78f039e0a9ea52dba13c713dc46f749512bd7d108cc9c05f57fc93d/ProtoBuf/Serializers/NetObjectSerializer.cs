// Decompiled with JetBrains decompiler
// Type: ProtoBuf.Serializers.NetObjectSerializer
// Assembly: Stubv2.0, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E945C042-2241-44AF-B826-4AD3FC72B170
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan-Spy.MSIL.Quasar.gen-a3f98ee0a78f039e0a9ea52dba13c713dc46f749512bd7d108cc9c05f57fc93d.exe

using ProtoBuf.Meta;
using System;

namespace ProtoBuf.Serializers
{
  internal sealed class NetObjectSerializer : IProtoSerializer
  {
    private readonly int key;
    private readonly Type type;
    private readonly BclHelpers.NetObjectOptions options;

    public NetObjectSerializer(
      TypeModel model,
      Type type,
      int key,
      BclHelpers.NetObjectOptions options)
    {
      bool flag = (options & BclHelpers.NetObjectOptions.DynamicType) != 0;
      this.key = flag ? -1 : key;
      this.type = flag ? model.MapType(typeof (object)) : type;
      this.options = options;
    }

    public Type ExpectedType => this.type;

    public bool ReturnsValue => true;

    public bool RequiresOldValue => true;

    public object Read(object value, ProtoReader source) => BclHelpers.ReadNetObject(value, source, this.key, (object) this.type == (object) typeof (object) ? (Type) null : this.type, this.options);

    public void Write(object value, ProtoWriter dest) => BclHelpers.WriteNetObject(value, dest, this.key, this.options);
  }
}
