// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONData
// Assembly: Encod, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 4DCFB260-FACB-496A-9BC9-FA9701DCBF71
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-d5f77ba2b2ad58cfad5ae3111994ad0f889967e6d4f67ecb9cedf1b8f10a6149.exe

using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONData : JSONNode
  {
    private string m_Data;

    public override string Value
    {
      get
      {
label_1:
        int num1 = -2006940026;
        string data;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1382455169)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              data = this.m_Data;
              num1 = (int) num2 * 1000533421 ^ 1293217219;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return data;
      }
      set
      {
label_1:
        int num1 = 40812877;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 813182625)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.m_Data = value;
              num1 = (int) num2 * 1590202019 ^ -2074422532;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public JSONData(string aData)
    {
label_1:
      int num1 = 1094489457;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1001278280)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -1428693339 ^ -367433670;
            continue;
          case 1:
            num1 = (int) num2 * 1532500428 ^ -1292374656;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      this.m_Data = aData;
    }

    public JSONData(float aData) => this.AsFloat = aData;

    public JSONData(double aData) => this.AsDouble = aData;

    public JSONData(bool aData)
    {
label_1:
      int num1 = 113869852;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 347924047)) % 6U)
        {
          case 0:
            num1 = (int) num2 * 1833700649 ^ -893442782;
            continue;
          case 1:
            num1 = (int) num2 * -76550096 ^ -669684540;
            continue;
          case 2:
            this.AsBool = aData;
            num1 = (int) num2 * -1832030889 ^ 990466693;
            continue;
          case 3:
            goto label_3;
          case 4:
            goto label_1;
          case 5:
            num1 = (int) num2 * -1885109398 ^ -1621495333;
            continue;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    public JSONData(int aData) => this.AsInt = aData;

    public override string ToString() => JSONData.\u206C‮⁪‍⁫‎​‎‏⁯​⁫‮‫⁭⁮‬‭‌⁯‌‍‎‏⁭⁮‌‏‏⁭⁯​⁯‎‎⁭‪⁭‏‮("\"", JSONNode.Escape(this.m_Data), "\"");

    public override string ToString(string aPrefix) => JSONData.\u206C‮⁪‍⁫‎​‎‏⁯​⁫‮‫⁭⁮‬‭‌⁯‌‍‎‏⁭⁮‌‏‏⁭⁯​⁯‎‎⁭‪⁭‏‮("\"", JSONNode.Escape(this.m_Data), "\"");

    public override void Serialize(BinaryWriter aWriter)
    {
      JSONData jsonData = new JSONData("");
      jsonData.AsInt = this.AsInt;
label_1:
      int num1 = -6691370;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -145407453)) % 30U)
        {
          case 0:
            JSONData.\u200F​‎‬⁪⁭‪⁮⁪⁫​‍⁯‬‍‮‫⁬⁮‫‍⁭‌‏‬​⁯‎‪⁯⁮‍‫‎⁬⁯‍‌⁯‪‮(aWriter, this.AsFloat);
            num1 = (int) num2 * 462408684 ^ 1549968656;
            continue;
          case 1:
            jsonData.AsFloat = this.AsFloat;
            int num3;
            num1 = num3 = !JSONData.\u206E⁬⁯‌⁪‌‏⁪‪⁪‏‎​‍⁭⁫‫‫⁫‏‪‪⁯‫‎⁯⁬‬⁪‏​⁬‌⁭‫​‌‌⁫‮(jsonData.m_Data, this.m_Data) ? -601132876 : (num3 = -562502020);
            continue;
          case 2:
            num1 = (int) num2 * 478851333 ^ -1100332614;
            continue;
          case 3:
            num1 = (int) num2 * -1089784982 ^ 770861541;
            continue;
          case 4:
            int num4 = !flag2 ? -1147871176 : (num4 = -2098691094);
            num1 = num4 ^ (int) num2 * 2123974634;
            continue;
          case 5:
            num1 = (int) num2 * 2077459892 ^ -563305917;
            continue;
          case 6:
            JSONData.\u200B‌​⁪‍⁫​‭⁫⁫​⁪⁪‪⁮‪⁬⁮‪‭⁪⁫‎‎⁬⁪‍‭‏‭‪​⁬‮‮⁭⁯‌⁪‪‮(aWriter, (byte) 6);
            num1 = (int) num2 * -195036069 ^ -518734867;
            continue;
          case 7:
            JSONData.\u200B‌​⁪‍⁫​‭⁫⁫​⁪⁪‪⁮‪⁬⁮‪‭⁪⁫‎‎⁬⁪‍‭‏‭‪​⁬‮‮⁭⁯‌⁪‪‮(aWriter, (byte) 5);
            num1 = (int) num2 * 630585066 ^ -603213367;
            continue;
          case 8:
            int num5 = flag1 ? 1486807596 : (num5 = 1271288790);
            num1 = num5 ^ (int) num2 * 1501338929;
            continue;
          case 9:
            int num6 = JSONData.\u206E⁬⁯‌⁪‌‏⁪‪⁪‏‎​‍⁭⁫‫‫⁫‏‪‪⁯‫‎⁯⁬‬⁪‏​⁬‌⁭‫​‌‌⁫‮(jsonData.m_Data, this.m_Data) ? 160480391 : (num6 = 2085424124);
            num1 = num6 ^ (int) num2 * 1476831564;
            continue;
          case 10:
            num1 = (int) num2 * -1990805961 ^ -238088461;
            continue;
          case 11:
            num1 = (int) num2 * -1693993314 ^ -20493167;
            continue;
          case 12:
            num1 = (int) num2 * -1646604333 ^ -1894254078;
            continue;
          case 13:
            JSONData.\u202A‍​‫⁬‭‭‬⁬⁪‍⁪‏‫⁬⁭‭‬⁮​‫‭⁯⁬‪⁬⁮⁭‍​‬⁭⁯⁪⁪‌‭‎‌‏‮(aWriter, this.m_Data);
            num1 = (int) num2 * -1196029583 ^ -291602352;
            continue;
          case 14:
            num1 = (int) num2 * -1540493648 ^ 1923851959;
            continue;
          case 15:
            num1 = (int) num2 * -2068979413 ^ -674662764;
            continue;
          case 16:
            JSONData.\u202C​‪‭‌‪⁬⁯⁯⁮‮⁭⁮‍‫⁫⁮‌‫‍⁪⁫​⁮⁭⁬‭‬⁯‍​⁬⁬‫‭‫⁬⁫‍‍‮(aWriter, this.AsBool);
            num1 = (int) num2 * 1020374052 ^ 1142934873;
            continue;
          case 17:
            JSONData.\u206A‎‫⁭​​‎‮‪⁮⁯‏‮‏‬⁬‍‪⁭⁮⁫⁬‫‭⁪⁭‬‮⁫‭⁮​‎‪‮⁫⁭‬‏⁮‮(aWriter, this.AsInt);
            num1 = (int) num2 * 1169896134 ^ -683620333;
            continue;
          case 18:
            JSONData.\u200B‌​⁪‍⁫​‭⁫⁫​⁪⁪‪⁮‪⁬⁮‪‭⁪⁫‎‎⁬⁪‍‭‏‭‪​⁬‮‮⁭⁯‌⁪‪‮(aWriter, (byte) 4);
            num1 = (int) num2 * 1743948882 ^ -1579270222;
            continue;
          case 19:
            jsonData.AsBool = this.AsBool;
            flag2 = JSONData.\u206E⁬⁯‌⁪‌‏⁪‪⁪‏‎​‍⁭⁫‫‫⁫‏‪‪⁯‫‎⁯⁬‬⁪‏​⁬‌⁭‫​‌‌⁫‮(jsonData.m_Data, this.m_Data);
            num1 = -589199285;
            continue;
          case 20:
            JSONData.\u206F⁮‎‫⁮⁯‬⁯‭‫‮‭‏‮‪⁯⁯⁫⁫⁪‮⁭⁬‍‮‪​‪⁬‎‪⁭‫‬⁪⁭‏‬‮‬‮(aWriter, this.AsDouble);
            num1 = (int) num2 * 802693483 ^ -1993579081;
            continue;
          case 21:
            JSONData.\u200B‌​⁪‍⁫​‭⁫⁫​⁪⁪‪⁮‪⁬⁮‪‭⁪⁫‎‎⁬⁪‍‭‏‭‪​⁬‮‮⁭⁯‌⁪‪‮(aWriter, (byte) 3);
            num1 = -1488108898;
            continue;
          case 22:
            goto label_1;
          case 23:
            num1 = (int) num2 * -2134512485 ^ 353336753;
            continue;
          case 24:
            JSONData.\u200B‌​⁪‍⁫​‭⁫⁫​⁪⁪‪⁮‪⁬⁮‪‭⁪⁫‎‎⁬⁪‍‭‏‭‪​⁬‮‮⁭⁯‌⁪‪‮(aWriter, (byte) 7);
            num1 = (int) num2 * -151371232 ^ 249670725;
            continue;
          case 25:
            jsonData.AsDouble = this.AsDouble;
            flag1 = JSONData.\u206E⁬⁯‌⁪‌‏⁪‪⁪‏‎​‍⁭⁫‫‫⁫‏‪‪⁯‫‎⁯⁬‬⁪‏​⁬‌⁭‫​‌‌⁫‮(jsonData.m_Data, this.m_Data);
            num1 = -1892553805;
            continue;
          case 26:
            goto label_3;
          case 27:
            num1 = (int) num2 * -1297867917 ^ 984334711;
            continue;
          case 28:
            num1 = (int) num2 * -2065471377 ^ -1344095339;
            continue;
          case 29:
            num1 = (int) num2 * -284205368 ^ -1455019121;
            continue;
          default:
            goto label_32;
        }
      }
label_3:
      return;
label_32:;
    }

    static string \u206C‮⁪‍⁫‎​‎‏⁯​⁫‮‫⁭⁮‬‭‌⁯‌‍‎‏⁭⁮‌‏‏⁭⁯​⁯‎‎⁭‪⁭‏‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2)
    {
      return obj0 + obj1 + obj2;
    }

    static bool \u206E⁬⁯‌⁪‌‏⁪‪⁪‏‎​‍⁭⁫‫‫⁫‏‪‪⁯‫‎⁯⁬‬⁪‏​⁬‌⁭‫​‌‌⁫‮([In] string obj0, [In] string obj1) => obj0 == obj1;

    static void \u200B‌​⁪‍⁫​‭⁫⁫​⁪⁪‪⁮‪⁬⁮‪‭⁪⁫‎‎⁬⁪‍‭‏‭‪​⁬‮‮⁭⁯‌⁪‪‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u206A‎‫⁭​​‎‮‪⁮⁯‏‮‏‬⁬‍‪⁭⁮⁫⁬‫‭⁪⁭‬‮⁫‭⁮​‎‪‮⁫⁭‬‏⁮‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u200F​‎‬⁪⁭‪⁮⁪⁫​‍⁯‬‍‮‫⁬⁮‫‍⁭‌‏‬​⁯‎‪⁯⁮‍‫‎⁬⁯‍‌⁯‪‮([In] BinaryWriter obj0, [In] float obj1) => obj0.Write(obj1);

    static void \u206F⁮‎‫⁮⁯‬⁯‭‫‮‭‏‮‪⁯⁯⁫⁫⁪‮⁭⁬‍‮‪​‪⁬‎‪⁭‫‬⁪⁭‏‬‮‬‮([In] BinaryWriter obj0, [In] double obj1) => obj0.Write(obj1);

    static void \u202C​‪‭‌‪⁬⁯⁯⁮‮⁭⁮‍‫⁫⁮‌‫‍⁪⁫​⁮⁭⁬‭‬⁯‍​⁬⁬‫‭‫⁬⁫‍‍‮([In] BinaryWriter obj0, [In] bool obj1) => obj0.Write(obj1);

    static void \u202A‍​‫⁬‭‭‬⁬⁪‍⁪‏‫⁬⁭‭‬⁮​‫‭⁯⁬‪⁬⁮⁭‍​‬⁭⁯⁪⁪‌‭‎‌‏‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
