// Decompiled with JetBrains decompiler
// Type: ?12?
// Assembly: wLoader, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 601E9F23-A239-4CA4-BCF6-5BB65F85A0DA
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.biqw-00a129d49d9d6af2a869f53ab2db7d80f4313e2b391d30ed8e02a96f59aa0cb4.exe

using System;

internal struct \u003F12\u003F
{
  private uint \u003F1\u003F;
  private static uint[] \u003F2\u003F = new uint[new IntPtr(512)];

  static \u003F12\u003F()
  {
    int num1 = 8;
    while (true)
    {
      int num2 = num1;
      if (false)
        goto label_5;
      else
        goto label_8;
label_2:
      int num3;
      int num4;
      uint num5 = (uint) (num3 << num4);
      int num6 = num2;
      int num7 = 9;
      num3 = 1;
label_3:
      int num8 = num7 - num6 & 31;
      uint num9 = (uint) (num3 << num8);
      int num10 = (int) num5;
      if (false)
      {
        num1 = num10;
        continue;
      }
      uint index = (uint) num10;
label_5:
      int num11;
      int num12;
      for (; index < num9; index = (uint) (num11 + num12))
      {
        \u003F12\u003F.\u003F2\u003F[(IntPtr) index] = (uint) (num2 << 6) + ((uint) ((int) num9 - (int) index << 6) >> 9 - num2 - 1);
        if (true)
        {
          num11 = (int) index;
          num12 = 1;
          if (num12 == 0)
          {
            num4 = num12;
            num3 = num11;
            goto label_2;
          }
        }
        else
          break;
      }
      int num13 = num2;
      if (true)
        goto label_14;
label_7:
      num2 = num13;
      goto label_8;
label_14:
      --num13;
      goto label_7;
label_8:
      if (num2 >= 0)
      {
        num3 = 1;
        num7 = 9;
        num6 = num2;
        if (true)
        {
          num4 = num7 - num6 - 1 & 31;
          goto label_2;
        }
        else
          goto label_3;
      }
      else
        break;
    }
  }

  public void \u003F1\u003F() => this.\u003F1\u003F = 1024U;

  public void \u003F1\u003F(uint _param1)
  {
label_0:
    if (false)
      goto label_3;
    else
      goto label_4;
label_1:
    if (true)
      return;
label_2:
    if (true)
      this.\u003F1\u003F -= this.\u003F1\u003F >> 5;
    else
      goto label_0;
label_3:
    if (true)
      return;
    goto label_1;
label_4:
    if (_param1 == 0U)
    {
      if (true)
      {
        this.\u003F1\u003F += 2048U - this.\u003F1\u003F >> 5;
        goto label_1;
      }
      else
        goto label_3;
    }
    else
      goto label_2;
  }

  public void \u003F1\u003F(\u003F1\u003F.\u003F1\u003F _param1, uint _param2)
  {
    int num1 = (int) (_param1.\u003F3\u003F >> 11);
    if (true)
    {
      int num2 = (int) this.\u003F1\u003F;
      num1 *= num2;
    }
    uint num3 = (uint) num1;
    if (_param2 != 0U)
    {
      _param1.\u003F2\u003F += (ulong) num3;
      _param1.\u003F3\u003F -= num3;
      this.\u003F1\u003F -= this.\u003F1\u003F >> 5;
    }
    else
      goto label_6;
label_2:
    do
    {
      if (_param1.\u003F3\u003F < 16777216U)
        goto label_7;
label_3:
      continue;
label_7:
      _param1.\u003F3\u003F <<= 8;
      _param1.\u003F6\u003F();
      goto label_3;
    }
    while (false);
    return;
label_6:
    _param1.\u003F3\u003F = num3;
    this.\u003F1\u003F += 2048U - this.\u003F1\u003F >> 5;
    goto label_2;
  }

  public uint \u003F1\u003F(uint _param1) => \u003F12\u003F.\u003F2\u003F[(IntPtr) ((((long) (this.\u003F1\u003F - _param1) ^ (long) -(int) _param1) & 2047L) >> 2)];

  public uint \u003F1\u003F() => \u003F12\u003F.\u003F2\u003F[(IntPtr) (this.\u003F1\u003F >> 2)];

  public uint \u003F2\u003F() => \u003F12\u003F.\u003F2\u003F[(IntPtr) (2048U - this.\u003F1\u003F >> 2)];
}
