// Decompiled with JetBrains decompiler
// Type: ProjNet.Consumers.TaskRepositoryConsumer
// Assembly: TYPELIBA, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 97BB50BA-9882-4DFE-999C-7A4E4B448F1C
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-080eff3ceefca287dc59d176676559ae1aa3f1faec807805114bae214a11f586.exe

using System.Runtime.CompilerServices;
using TYPELIBA.Identifiers;
using TYPELIBA.Lists;
using TYPELIBA.Pages;

namespace ProjNet.Consumers
{
  public abstract class TaskRepositoryConsumer : Field, MapAccountPage, Worker
  {
    private AuthorTaskCommentPriority m_Filter;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal TaskRepositoryConsumer(
      AuthorTaskCommentPriority ident,
      string pred,
      string c,
      long indexOft2,
      string init3,
      string attr4,
      string last5)
    {
      int num1 = 0;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
              ManagerParamsID.NewExpression();
              if (!TaskRepositoryConsumer.SetDispatcher())
              {
                num2 = 4;
                continue;
              }
              goto case 2;
            case 1:
            case 4:
              // ISSUE: explicit constructor call
              base.\u002Ector(pred, c, indexOft2, init3, last5, attr4);
              goto case 2;
            case 2:
            case 3:
              this.m_Filter = ident;
              int num3 = 5;
              num2 = TaskRepositoryConsumer.SetDispatcher() ? num3 : num3;
              continue;
            case 5:
              goto label_3;
            default:
              goto label_7;
          }
        }
label_7:
        num1 = 3;
      }
label_3:;
    }

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public AuthorTaskCommentPriority SetState() => this.m_Filter;

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public void ComputeState(AuthorTaskCommentPriority var1) => this.m_Filter = var1;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public override bool CompareState(object res)
    {
      int num1 = 3;
      bool flag1;
      while (true)
      {
        int num2 = num1;
        bool flag2;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 2:
              goto label_2;
            case 1:
            case 4:
              if (!flag2)
              {
                flag1 = (res as TaskRepositoryConsumer).SetState() == this.SetState();
                num2 = 5;
                continue;
              }
              goto label_2;
            case 3:
              goto label_1;
            case 5:
              goto label_8;
            default:
              goto label_7;
          }
        }
label_1:
        flag2 = !(res is PoolPolicyList);
        num1 = 4;
        continue;
label_7:
        num1 = 0;
      }
label_2:
      flag1 = false;
label_8:
      return flag1;
    }

    internal static bool LoginDispatcher() => true;

    internal static bool SetDispatcher() => false;
  }
}
