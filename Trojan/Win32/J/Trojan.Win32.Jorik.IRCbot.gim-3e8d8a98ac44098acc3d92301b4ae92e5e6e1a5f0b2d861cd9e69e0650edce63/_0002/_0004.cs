// Decompiled with JetBrains decompiler
// Type: .
// Assembly: insomnia, Version=0.0.0.0, Culture=neutral, PublicKeyToken=24b8f1c2e28acde2
// MVID: 0C7B899D-7035-4B2D-B433-3C80E566FC1C
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00001-msil\Trojan.Win32.Jorik.IRCbot.gim-3e8d8a98ac44098acc3d92301b4ae92e5e6e1a5f0b2d861cd9e69e0650edce63.exe

using \u0004;
using \u0005;
using \u000E;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace \u0002
{
  [ClassInterface(0)]
  [Guid("E2085F28-FEB7-404A-B8E7-E659BDEAAA02")]
  [TypeLibType(2)]
  [ComImport]
  internal sealed class \u0004 : \u0008.\u0002, \u0002.\u0005, \u0006, \u0003
  {
    [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
    public extern \u0004();

    [DispId(1610744809)]
    [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
    [return: MarshalAs(UnmanagedType.Interface)]
    public virtual extern \u0005.\u0004 FindByType([MarshalAs(UnmanagedType.BStr), In] string bstrTypeURI, [In] uint dwFlags);

    [DispId(1610744812)]
    [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
    public virtual extern int CreateAsyncFind(
      [MarshalAs(UnmanagedType.BStr), In] string bstrTypeURI,
      [In] uint dwFlags,
      [MarshalAs(UnmanagedType.IUnknown), In] object punkDeviceFinderCallback);

    [DispId(1610744813)]
    [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
    public virtual extern void StartAsyncFind([In] int lFindData);

    [DispId(1610744814)]
    [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
    public virtual extern void CancelAsyncFind([In] int lFindData);

    [DispId(1610744811)]
    [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
    [return: MarshalAs(UnmanagedType.Interface)]
    public virtual extern \u0003 FindByUDN([MarshalAs(UnmanagedType.BStr), In] string bstrUDN);

    [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
    public virtual extern void SetAddressFamily([In] int dwFlags);

    [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
    public virtual extern void GetAddressFamily(out int pdwFlags);

    [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
    public virtual extern void AddRequestHeaders([MarshalAs(UnmanagedType.BStr), In] string bstrHttpHeaders);
  }
}
