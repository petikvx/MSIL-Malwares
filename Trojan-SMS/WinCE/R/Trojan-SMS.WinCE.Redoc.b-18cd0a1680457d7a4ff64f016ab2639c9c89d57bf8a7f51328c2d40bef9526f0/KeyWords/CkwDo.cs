// Decompiled with JetBrains decompiler
// Type: Dbasic.KeyWords.CkwDo
// Assembly: B4Pruntime, Version=1.0.3056.20520, Culture=neutral, PublicKeyToken=null
// MVID: BED81B59-7EDE-4B04-983E-56C0010CF881
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00007-msil\Trojan-SMS.WinCE.Redoc.b-18cd0a1680457d7a4ff64f016ab2639c9c89d57bf8a7f51328c2d40bef9526f0.exe

namespace Dbasic.KeyWords
{
  public class CkwDo : CkeyWords
  {
    public CkwDo(CRunner CRunner)
      : base(CRunner)
    {
    }

    public override MethodReturn Method(Place place, ref Locals locals)
    {
      this.CRunner.blnExitFlag = false;
      int level = this.CRunner.GetWord(place.LineI, place.WordI).Level;
      Place place1 = new Place(place.LineI + 1, -1);
      while (true)
      {
        RunReturn runReturn = this.CRunner.RunCode(place1, true, false, ref locals);
        place = runReturn.place;
        ++place.WordI;
        if (!this.CRunner.blnReturnFlag && !this.CRunner.blnExitFlag)
        {
          if (runReturn.word.Value != "loop")
            this.CRunner.ThrowError("Syntax error.", runReturn.place.LineI);
          bool flag = this.CRunner.nextWord(true, ref place).Value == "while";
          if (this.CRunner.Condition(ref place, ref locals) == flag)
            place = place1;
          else
            break;
        }
        else
          break;
      }
      this.CRunner.blnExitFlag = false;
      place = (Place) this.CRunner.alGotoWords[level];
      ++place.LineI;
      place.WordI = -1;
      return new MethodReturn(place);
    }
  }
}
