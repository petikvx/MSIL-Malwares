// Decompiled with JetBrains decompiler
// Type: Vändtia_Live_Server.Player1
// Assembly: W1rxzw3ZKeRvpGn, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 142397A1-15D1-D7EF-251C-AE295CB71E89
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan.MSIL.Remcos.gen-869da055040f18615ffee1bc2369c1e6496fce17b977c375b8501f7f91f0606d.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Net.Sockets;
using System.Text;
using Vändtia_Live_Server.My;

namespace Vändtia_Live_Server
{
  public class Player1
  {
    public string Name;
    public TcpClient Client;
    public NetworkStream Stream;
    public bool Finished;

    public Player1() => this.Finished = false;

    public void Send(string Text)
    {
      try
      {
        Console.WriteLine("Skickar till " + this.Name + ": " + Text);
label_3:
        int num = FoodItem.\uE607\uE6C8\uF041\uE1D1\uEB67\uF562\uF59C\uEDEA\uEABB\uE409\uF42B\uF64E(26);
        byte[] bytes;
        while (true)
        {
          switch ((num ^ 54) + 58)
          {
            case 0:
              num = -6;
              continue;
            case 1:
              this.Stream.Write(bytes, 0, bytes.Length);
              num = FormLoader.\uF6D9\uF827\uF028\uED0F\uECCA\uE547\uF4C8\uF468\uEA41\uE615\uE78E\uE0F5(36);
              continue;
            case 2:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Player1.\u002Ector);
              num = -2;
              continue;
            case 3:
              Text += "\0";
              num = -4;
              continue;
            case 4:
              bytes = Encoding.UTF8.GetBytes(Text);
              num = -15;
              continue;
            case 5:
              num = -1;
              continue;
            case 6:
              goto label_18;
            default:
              goto label_3;
          }
        }
label_18:;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        Exception exception = ex;
label_13:
        int num1 = FormLoader.\uF6D9\uF827\uF028\uED0F\uECCA\uE547\uF4C8\uF468\uEA41\uE615\uE78E\uE0F5(35);
        while (true)
        {
          switch ((num1 ^ 53) + 58)
          {
            case 0:
              num1 = Mazes.\uED64\uF7C9\uE463\uE570\uEDE5\uF0EF\uEC88\uF1DB\uF4DB\uE913\uF508\uF2F8(62);
              continue;
            case 1:
              int num2 = (int) Interaction.MsgBox((object) ("Gick inte att skicka datat till " + this.Name + "\r\n" + exception.Message));
              num1 = -4;
              continue;
            case 2:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Player1.Recieve);
              num1 = -3;
              continue;
            case 3:
              ProjectData.ClearProjectError();
              num1 = -1;
              continue;
            case 4:
              goto label_10;
            default:
              goto label_13;
          }
        }
label_10:;
      }
    }

    public string Recieve()
    {
      string str;
      try
      {
        byte[] numArray = new byte[checked (this.Client.ReceiveBufferSize + 1)];
label_7:
        // ISSUE: reference to a compiler-generated method
        int num1 = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA90.\uE152\uE14D\uE4B1\uE4CF\uEFA5\uEAA8\uF7D2\uF85C\uF37D\uF074\uF5CA\uE496(19);
        int num2 = 126;
        while (true)
        {
          switch (num2 ^ 60)
          {
            case 63:
              switch (num1 + 53)
              {
                case 0:
                  // ISSUE: method reference
                  RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Player1.Recieve);
                  num1 = -15;
                  goto label_2;
                case 1:
                  num1 = -9;
                  goto label_2;
                case 2:
                  str = Encoding.UTF8.GetString(numArray).Trim(new char[1]);
                  // ISSUE: reference to a compiler-generated method
                  num1 = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA90.\uE152\uE14D\uE4B1\uE4CF\uEFA5\uEAA8\uF7D2\uF85C\uF37D\uF074\uF5CA\uE496(17);
                  goto label_2;
                case 3:
                  this.Stream.Read(numArray, 0, this.Client.ReceiveBufferSize);
                  num1 = -11;
                  goto label_2;
                case 4:
                  Console.WriteLine(this.Name + " säger: " + Encoding.UTF8.GetString(numArray).Trim(new char[1]));
                  num1 = -10;
                  goto label_2;
                case 5:
                  goto label_15;
                default:
                  num2 = 124;
                  continue;
              }
            case 64:
              goto label_7;
            case 65:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Player1.SendHandshake);
              num2 = 125;
              continue;
            case 66:
label_2:
              num1 ^= 58;
              break;
          }
          num2 = 3;
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        str = "";
        ProjectData.ClearProjectError();
      }
label_15:
      return str;
    }

    public void SendHandshake()
    {
label_5:
      int num1 = FoodItem.\uE607\uE6C8\uF041\uE1D1\uEB67\uF562\uF59C\uEDEA\uEABB\uE409\uF42B\uF64E(26);
      int num2 = 14;
      while (true)
      {
        switch (num2 ^ 54)
        {
          case 53:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Player1.\u002Ector);
            num2 = 3;
            continue;
          case 54:
            goto label_5;
          case 55:
            string Text;
            switch (num1 + 64)
            {
              case 0:
                this.Send(Text);
                num1 = FoodItem.\uE607\uE6C8\uF041\uE1D1\uEB67\uF562\uF59C\uEDEA\uEABB\uE409\uF42B\uF64E(34);
                goto label_1;
              case 1:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Player1.SendHandshake);
                num1 = -2;
                goto label_1;
              case 2:
                Text = "<?xml version=\"1.0\"?><!DOCTYPE cross-domain-policy SYSTEM \"/xml/dtds/cross-domain-policy.dtd\"><cross-domain-policy><site-control permitted-cross-domain-policies=\"all\"/><allow-access-from domain=\"*\" to-ports=\"*\" /></cross-domain-policy>";
                num1 = -1;
                goto label_1;
              case 3:
                num1 = -5;
                goto label_1;
              case 4:
                goto label_10;
              default:
                num2 = 0;
                continue;
            }
          case 56:
label_1:
            num1 ^= 63;
            break;
        }
        num2 = 1;
      }
label_10:;
    }
  }
}
