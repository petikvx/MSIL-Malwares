// Decompiled with JetBrains decompiler
// Type: SimpleChessApp.Game.Turn
// Assembly: p的, Version=2.159.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E9517A17-41D2-4860-BC69-C7D574C89AF9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.01-msil\HEUR-Trojan-Ransom.MSIL.Makop.gen-9548c6a9da2d6cee9d27565c0055be4429cabfae9287ab3e525aaba66fd67032.exe

using System.Runtime.InteropServices;

namespace SimpleChessApp.Game
{
  public class Turn
  {
    public int Id;
    public Notation White;
    public Notation Black;

    public override string ToString()
    {
label_1:
      int num1 = -138311207;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -960858756)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            str = Turn.\u202B‪⁭​‭⁭⁯⁬‮⁯⁮‭‫‏⁭‪‫​‮‌‫⁫‍⁮⁫‮‬⁫‪‍‬‮‬‭‫⁯‎⁯⁯‬‮(\u003CModule\u003E.\u200B‎⁬‪​⁮‬‪‌⁮⁬‭⁭​⁭⁪‮‭‭‏​​⁭⁯‎‭‫‏⁬‮‌⁮‌‏​⁪‭‪⁫‍‮<string>(2568132171U), (object) this.Id, (object) this.White, (object) this.Black);
            num1 = (int) num2 * 1850582619 ^ 2126414217;
            continue;
          case 2:
            num1 = (int) num2 * 152335583 ^ -1256380171;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public Turn()
    {
label_1:
      int num1 = 300779287;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1088458970)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -2047314462 ^ 489766016;
            continue;
          case 2:
            goto label_3;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static string \u202B‪⁭​‭⁭⁯⁬‮⁯⁮‭‫‏⁭‪‫​‮‌‫⁫‍⁮⁫‮‬⁫‪‍‬‮‬‭‫⁯‎⁯⁯‬‮(
      [In] string obj0,
      [In] object obj1,
      [In] object obj2,
      [In] object obj3)
    {
      return string.Format(obj0, obj1, obj2, obj3);
    }
  }
}
