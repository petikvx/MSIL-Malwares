// Decompiled with JetBrains decompiler
// Type: HX9EVQDVoMvJV5Dgt.xbBpLyya1sPHyHO6z
// Assembly: Q7jU8zFqbfRJyQUdT, Version=5.6.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35
// MVID: 36427E73-5524-420A-9724-276045DDB54E
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-bda7803bc6a630ed5997870eb0b102e590d6f584b11699fb76781564debe9921.exe

using \u0034S5lhtZKfG9E3SO8L;
using NuGet.Frameworks;
using NuGet.Versioning;
using System.Collections.Generic;
using System.IO;
using System.Linq;

namespace HX9EVQDVoMvJV5Dgt
{
  public class xbBpLyya1sPHyHO6z
  {
    private readonly string NLJeE2KFNG7CIdVyp;
    private readonly bool uEskDLRHT2hQ5CtYH;

    public xbBpLyya1sPHyHO6z(string packagesDirectory)
      : this(packagesDirectory, true)
    {
    }

    public xbBpLyya1sPHyHO6z(string packagesDirectory, bool isLowercase)
    {
      this.NLJeE2KFNG7CIdVyp = packagesDirectory;
      this.uEskDLRHT2hQ5CtYH = isLowercase;
    }

    public string NIyXJaIf8zoUIZ5nb(string gWbLGNFELfEX13wQC) => Path.Combine(gWbLGNFELfEX13wQC, \u003410H3lVE6viBHY7ft.YzLCQFdvdfBDeTYWa);

    public string QADoPay5pNni20Ej7(
      string e3OktNClU4JUKHGqJ,
      NuGetVersion Jgrh3cFfK42X1sxoE,
      NuGetFramework MVvhZq6ZVkiFAROBY)
    {
      return this.NIyXJaIf8zoUIZ5nb(this.aAKVXfrUWbfI3jBmN(e3OktNClU4JUKHGqJ, Jgrh3cFfK42X1sxoE, MVvhZq6ZVkiFAROBY));
    }

    public string aAKVXfrUWbfI3jBmN(
      string hK59aHag2yBfjlT8M,
      NuGetVersion MAq2IaAG66Wa0Wnu0,
      NuGetFramework OSsRAPwPawNF6g3U9)
    {
      string path3 = ((SemanticVersion) MAq2IaAG66Wa0Wnu0).ToNormalizedString();
      string path4 = OSsRAPwPawNF6g3U9.GetShortFolderName();
      if (this.uEskDLRHT2hQ5CtYH)
      {
        hK59aHag2yBfjlT8M = hK59aHag2yBfjlT8M.ToLowerInvariant();
        path3 = path3.ToLowerInvariant();
        path4 = path4.ToLowerInvariant();
      }
      return Path.Combine(this.phNetfZVVIv9d6vFE(), hK59aHag2yBfjlT8M, path3, path4);
    }

    private string phNetfZVVIv9d6vFE() => Path.Combine(this.NLJeE2KFNG7CIdVyp, ".tools");

    public string dqPrdYf4cByYrB8AR(
      string nLUMFZW8BRPyYAAFQ,
      VersionRange _param2,
      NuGetFramework nunjocFWAoep6Q5zX)
    {
      IEnumerable<NuGetVersion> nuGetVersions = this.\u0034Ds7EuYb2s1tFQzRN(nLUMFZW8BRPyYAAFQ);
      NuGetVersion bestMatch = _param2.FindBestMatch(nuGetVersions);
      return SemanticVersion.op_Equality((SemanticVersion) bestMatch, (SemanticVersion) null) ? (string) null : this.aAKVXfrUWbfI3jBmN(nLUMFZW8BRPyYAAFQ, bestMatch, nunjocFWAoep6Q5zX);
    }

    private IEnumerable<NuGetVersion> \u0034Ds7EuYb2s1tFQzRN(
      string N8upWXIqTXL0wBpPR)
    {
      List<NuGetVersion> nuGetVersionList = new List<NuGetVersion>();
      string path = Path.Combine(this.phNetfZVVIv9d6vFE(), this.uEskDLRHT2hQ5CtYH ? N8upWXIqTXL0wBpPR.ToLowerInvariant() : N8upWXIqTXL0wBpPR);
      if (!Directory.Exists(path))
        return Enumerable.Empty<NuGetVersion>();
      foreach (string enumerateDirectory in Directory.EnumerateDirectories(path))
      {
        string fileName = Path.GetFileName(enumerateDirectory);
        NuGetVersion nuGetVersion = (NuGetVersion) null;
        ref NuGetVersion local = ref nuGetVersion;
        NuGetVersion.TryParse(fileName, ref local);
        if (SemanticVersion.op_Inequality((SemanticVersion) nuGetVersion, (SemanticVersion) null))
          nuGetVersionList.Add(nuGetVersion);
      }
      return (IEnumerable<NuGetVersion>) nuGetVersionList;
    }
  }
}
