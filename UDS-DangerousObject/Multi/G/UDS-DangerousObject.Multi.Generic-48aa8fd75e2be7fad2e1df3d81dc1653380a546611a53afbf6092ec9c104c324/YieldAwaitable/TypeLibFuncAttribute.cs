// Decompiled with JetBrains decompiler
// Type: YieldAwaitable.TypeLibFuncAttribute
// Assembly: RegistrySecurity, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: CE443B41-988D-4319-9971-B451F2F12365
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.06-msil\UDS-DangerousObject.Multi.Generic-48aa8fd75e2be7fad2e1df3d81dc1653380a546611a53afbf6092ec9c104c324.exe

using System;
using System.Drawing;
using System.Drawing.Imaging;
using System.IO;
using System.Runtime.InteropServices;

namespace YieldAwaitable
{
  public class TypeLibFuncAttribute
  {
    public static void SaveAsTarga(string Filename, Bitmap Picture)
    {
      Bitmap bitmap = Picture.Clone(new Rectangle(0, 0, Picture.Width, Picture.Height), PixelFormat.Format32bppPArgb);
      bitmap.RotateFlip(RotateFlipType.Rotate180FlipX);
      using (FileStream output = new FileStream(Filename, FileMode.Create, FileAccess.Write))
      {
        using (BinaryWriter binaryWriter = new BinaryWriter((Stream) output))
        {
          short num1 = 0;
          binaryWriter.Write((byte) 0);
          binaryWriter.Write((byte) 0);
          binaryWriter.Write((byte) 2);
          binaryWriter.Write(num1);
          binaryWriter.Write(num1);
          binaryWriter.Write((byte) 0);
          binaryWriter.Write(num1);
          binaryWriter.Write(num1);
          short width = checked ((short) bitmap.Width);
          binaryWriter.Write(width);
          short height = checked ((short) bitmap.Height);
          binaryWriter.Write(height);
          binaryWriter.Write((byte) 32);
          binaryWriter.Write((byte) 8);
          BitmapData bitmapdata = bitmap.LockBits(new Rectangle(0, 0, bitmap.Width, bitmap.Height), ImageLockMode.ReadOnly, PixelFormat.Format32bppPArgb);
          IntPtr scan0 = bitmapdata.Scan0;
          int length = checked (bitmapdata.Stride * bitmap.Height);
          byte[] numArray = new byte[checked (length - 1 + 1)];
          Marshal.Copy(scan0, numArray, 0, length);
          binaryWriter.Write(numArray);
          bitmap.UnlockBits(bitmapdata);
          int num2 = 0;
          binaryWriter.Write(num2);
          binaryWriter.Write(num2);
          binaryWriter.Write("TRUEVISION-XFILE.");
          binaryWriter.Write((byte) 0);
          bitmap.Dispose();
          binaryWriter.Flush();
          output.Flush();
          binaryWriter.Close();
          output.Close();
        }
      }
    }
  }
}
