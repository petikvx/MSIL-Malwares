// Decompiled with JetBrains decompiler
// Type: TemporalToolkit.TemporalExpressions.TEAfter
// Assembly: TaskSchedulerExcept, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: C99F8105-AF21-447F-A90A-9B9B26790CA7
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.05\HEUR-Trojan.Win32.Generic-c3fec857671e01d484bd82b426a3d086aa19aab28ec888f7a83bf9fb8fa96f2d.exe

using System;

namespace TemporalToolkit.TemporalExpressions
{
  public class TEAfter : TemporalExpression
  {
    public DateTime Date { get; set; }

    public TEAfter(DateTime aDate)
    {
label_1:
      int num1 = -687323449;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1112059342)) % 5U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * -1440803848 ^ 404473349;
            continue;
          case 2:
            num1 = (int) num2 * 1566590791 ^ -175513063;
            continue;
          case 3:
            this.Date = aDate;
            num1 = (int) num2 * -991516813 ^ 496002511;
            continue;
          case 4:
            goto label_1;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public override bool Includes(DateTime aDate)
    {
label_1:
      int num1 = 1511362744;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2078139277)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            flag = aDate > this.Date;
            num1 = (int) num2 * 1793961601 ^ -1301562055;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }
  }
}
