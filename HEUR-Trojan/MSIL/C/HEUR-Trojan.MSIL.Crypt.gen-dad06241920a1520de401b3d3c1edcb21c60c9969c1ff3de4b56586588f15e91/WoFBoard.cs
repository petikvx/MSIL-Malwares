// Decompiled with JetBrains decompiler
// Type: BoardGameSuite.WoFBoard
// Assembly: STOREASSEMBLYFILESTATUSFLA, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 12D7A720-F25A-4863-8D87-3468F8362768
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan.MSIL.Crypt.gen-dad06241920a1520de401b3d3c1edcb21c60c9969c1ff3de4b56586588f15e91.exe

using System;
using System.Collections.Generic;

namespace BoardGameSuite
{
  internal class WoFBoard : IBoard
  {
    private string category;
    private string solution;
    public bool Solved;
    private char[] puzzle;
    private List<string> guessesList = new List<string>();
    private bool playerCanMoveAgain;

    public WoFBoard()
    {
      this.Solved = false;
      this.setPuzzle();
      this.puzzle = WoFBoard.dashes(this.solution);
      this.printPuzzle();
    }

    private static char[] dashes(string Solution)
    {
      int length = Solution.Length;
      char[] chArray = new char[length];
      for (int index = 0; index < length; ++index)
        chArray[index] = '_';
      return chArray;
    }

    private void printPuzzle()
    {
      string str = "";
      Console.WriteLine(str);
      Console.Write("\n    ");
      for (int index = 0; index < this.puzzle.Length; ++index)
        Console.Write(this.puzzle[index].ToString() + " ");
      Console.WriteLine("\n");
      Console.WriteLine(str);
      Console.WriteLine("\n");
      Console.WriteLine(this.category);
    }

    private void setPuzzle()
    {
      Dictionary<string, string[]> dictionary = new Dictionary<string, string[]>();
      string[] strArray1 = new string[4]
      {
        "COBRA",
        "ELEPHANT",
        "OSTRICH",
        "CHICKEN"
      };
      dictionary.Add("Animals", strArray1);
      string[] strArray2 = new string[5]
      {
        "FLUTE",
        "BANJO",
        "HARP",
        "GUITAR",
        "FRENCH HORN"
      };
      dictionary.Add("Instruments", strArray2);
      string[] strArray3 = new string[3]
      {
        "PIE",
        "COOKIES",
        "CAKE"
      };
      dictionary.Add("Desserts", strArray3);
      string[] strArray4 = new string[48]
      {
        "ALABAMA",
        "ALASKA",
        "ARIZONA",
        "ARKANSAS",
        "CALIFORNIA",
        "COLORADO",
        "CONNECTICUT",
        "DELAWARE",
        "FLORIDA",
        "GEORGIA",
        "HAWAII",
        "IDAHO",
        "ILLINOIS",
        "INDIANA",
        "IOWA",
        "KANSAS",
        "KENTUCKY",
        "LOUISIANA",
        "MAINE",
        "MARYLAND",
        "MASSACHUSETTS",
        "MICHIGAN",
        "MINNESOTA",
        "MISSISSIPPI",
        "MISSOURI",
        "MONTANA NEBRASKA",
        "NEVADA",
        "NEW HAMPSHIRE",
        "NEW JERSEY",
        "NEW MEXICO",
        "NEW YORK",
        "NORTH CAROLINA",
        "NORTH DAKOTA",
        "OHIO",
        "OKLAHOMA",
        "OREGON",
        "PENNSYLVANIA RHODE ISLAND",
        "SOUTH CAROLINA",
        "SOUTH DAKOTA",
        "TENNESSEE",
        "TEXAS",
        "UTAH",
        "VERMONT",
        "VIRGINIA",
        "WASHINGTON",
        "WEST VIRGINIA",
        "WISCONSIN",
        "WYOMING"
      };
      dictionary.Add("States", strArray4);
      string[] strArray5 = new string[38]
      {
        "AIDAY",
        "CANDICE",
        "CHIDOZIE",
        "DANIEL",
        "DAVID",
        "DAVID",
        "DIMITRI",
        "DOMINICK",
        "EKAM",
        "ELENA",
        "ESMERY",
        "FILIZ",
        "HAVISHA",
        "JAMAL",
        "JANE",
        "JAYSER",
        "JONATHON",
        "JULIA",
        "KENDRA",
        "KENNY",
        "MAGGIE",
        "MICHAEL",
        "MIKAELA",
        "MONIQUE",
        "OBINNA",
        "PABLO",
        "PARVATHI",
        "RUTHA",
        "SAUL",
        "SONYA",
        "SUSAN",
        "TABITHA",
        "THINLEY",
        "THOMAS",
        "THUY",
        "TIMOTHY",
        "VILDE",
        "ZEWDITU"
      };
      dictionary.Add("Classmate First Names", strArray5);
      List<string> stringList = new List<string>((IEnumerable<string>) dictionary.Keys);
      int count = dictionary.Count;
      Random random = new Random();
      this.category = stringList[random.Next(count)];
      this.solution = dictionary[this.category][random.Next(dictionary[this.category].Length)];
    }

    private bool guessLetter(char letter)
    {
      bool flag = false;
      letter = char.ToUpper(letter);
      for (int index = 0; index < this.solution.Length; ++index)
      {
        if ((int) this.solution[index] == (int) letter)
        {
          this.puzzle[index] = letter;
          flag = true;
        }
      }
      this.printPuzzle();
      return flag;
    }

    private void attemptSolve(string guess)
    {
      bool flag = false;
      guess = guess.ToUpper();
      if (this.solution == guess)
      {
        this.puzzle = guess.ToCharArray();
        flag = true;
      }
      this.printPuzzle();
    }

    public bool goAgain()
    {
      if (!this.playerCanMoveAgain)
        return false;
      this.playerCanMoveAgain = false;
      return true;
    }

    public void acceptMove(Move moveInput)
    {
      this.playerCanMoveAgain = false;
      WoFMove woFmove = (WoFMove) moveInput;
      if (woFmove.guess.Length == 1)
        this.playerCanMoveAgain = this.guessLetter(woFmove.guess[0]);
      else
        this.attemptSolve(woFmove.guess);
    }

    public bool isSolved() => true;
  }
}
