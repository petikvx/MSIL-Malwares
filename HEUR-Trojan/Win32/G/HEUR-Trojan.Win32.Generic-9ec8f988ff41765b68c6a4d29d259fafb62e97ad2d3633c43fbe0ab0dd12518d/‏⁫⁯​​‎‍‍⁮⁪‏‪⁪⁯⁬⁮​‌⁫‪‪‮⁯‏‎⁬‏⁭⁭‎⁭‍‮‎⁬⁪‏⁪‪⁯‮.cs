// Decompiled with JetBrains decompiler
// Type: ‏⁫⁯​​‎‍‍⁮⁪‏‪⁪⁯⁬⁮​‌⁫‪‪‮⁯‏‎⁬‏⁭⁭‎⁭‍‮‎⁬⁪‏⁪‪⁯‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using System;
using System.IO;

public class \u200F⁫⁯​​‎‍‍⁮⁪‏‪⁪⁯⁬⁮​‌⁫‪‪‮⁯‏‎⁬‏⁭⁭‎⁭‍‮‎⁬⁪‏⁪‪⁯‮ : 
  \u200D‬⁪‌‍‫‪‎‭⁭⁫‏‎‬‫‌⁯‍‎⁬‎‮‭​⁯‪⁭‌‬⁬⁭‬‍‌⁫⁪‪⁫‍‬‮,
  \u202C‪⁭⁫⁬‏‬‪​⁭‪⁯‍‬⁯⁭‬‎⁯‮​​⁯⁫‮‫‍⁫‍​‭⁪‪⁭‭‌⁪‭‫⁬‮
{
  private static readonly int \u200F‏⁬⁭‬‏‭⁪‭‪‎⁬‮⁬⁬‬⁯​‍‫‮‮‏⁮‏‫⁪‮‫‪⁪​‫⁬‬⁯⁮⁭⁪‮‮ = 16;
  private readonly \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ \u200F⁫‭⁫‪⁪‬‮⁪⁬​‌‫‌‭‮⁮⁯​‏‫‪‬⁮⁪‬⁬⁪⁭⁭‌⁮⁯​‬​⁪‍‮⁯‮;
  private readonly byte[] \u202E⁫⁬‏⁪⁭⁪​‬⁬‎‍‌‍‌⁭‌⁮‌‪⁫‮​​⁭⁯‬⁬‌‫⁯‏‍⁮⁬⁪⁯‌⁮‎‮;
  private bool \u206F⁬⁪‪‪‫‎⁪‍​‭​⁭⁫‍⁪⁮‮⁫‮⁭⁪‌‫‮​⁯‬‬⁪‭‮​​‌‎‬⁬‮‮‮;
  private byte[] \u206D‌⁮‬⁭‫‏⁫‎⁫‮⁭‭‫‫‫⁯⁫‮⁭‬‍‌‏‮‮⁯‏‬‍‍⁫‪​‍‏‪‎​‪‮;
  private byte[] \u202E‭‎⁯‌⁪‎⁪⁪⁭‎⁮⁬‪‬⁯⁭​⁮⁭‏‍⁯⁬⁬⁭‍​‍​‍⁪⁫⁬​‮⁯‭⁭‮‮;
  private int \u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮;
  private \u202B⁭⁮‬‎⁪‬⁪‬⁮⁪‮‬‍‎⁮‎⁫‎​‌⁫⁪‭‬‮‏‮​⁮‌‌‬‌⁯‮⁫‮‬⁫‮ \u200E‏‮‏⁮⁫‍‭‬‪‏‭⁬⁪⁯⁭‏‮‌⁪⁬‏‬⁯‏‍‫⁫‪‬⁭‭​⁯‍‮‏‏‮‬‮;
  private readonly MemoryStream \u200E⁮⁯‫‮‮‏⁯‍⁯⁯‬⁫‎⁪‫‫‬⁮‬‍‮⁪‎‬⁪‍⁮‍‭‏⁬‮‏⁫‫‎‬‎‌‮ = new MemoryStream();
  private readonly MemoryStream \u206E⁬‫⁪⁮‬​⁪⁬⁭‮⁬⁯⁭‎⁪‏‌⁭‌‮‍‎‬⁮⁫‏‎⁭‪‍⁯‮​‏‍⁮​⁬⁫‮ = new MemoryStream();

  public \u200F⁫⁯​​‎‍‍⁮⁪‏‪⁪⁯⁬⁮​‌⁫‪‪‮⁯‏‎⁬‏⁭⁭‎⁭‍‮‎⁬⁪‏⁪‪⁯‮(
    \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ _param1)
  {
    this.\u200F⁫‭⁫‪⁪‬‮⁪⁬​‌‫‌‭‮⁮⁯​‏‫‪‬⁮⁪‬⁬⁪⁭⁭‌⁮⁯​‬​⁪‍‮⁯‮ = _param1;
    this.\u202E⁫⁬‏⁪⁭⁪​‬⁬‎‍‌‍‌⁭‌⁮‌‪⁫‮​​⁭⁯‬⁬‌‫⁯‏‍⁮⁬⁪⁯‌⁮‎‮ = new byte[\u200F⁫⁯​​‎‍‍⁮⁪‏‪⁪⁯⁬⁮​‌⁫‪‪‮⁯‏‎⁬‏⁭⁭‎⁭‍‮‎⁬⁪‏⁪‪⁯‮.\u200F‏⁬⁭‬‏‭⁪‭‪‎⁬‮⁬⁬‬⁯​‍‫‮‮‏⁮‏‫⁪‮‫‪⁪​‫⁬‬⁯⁮⁭⁪‮‮];
    if (_param1.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮() != \u200F⁫⁯​​‎‍‍⁮⁪‏‪⁪⁯⁬⁮​‌⁫‪‪‮⁯‏‎⁬‏⁭⁭‎⁭‍‮‎⁬⁪‏⁪‪⁯‮.\u200F‏⁬⁭‬‏‭⁪‭‪‎⁬‮⁬⁬‬⁯​‍‫‮‮‏⁮‏‫⁪‮‫‪⁪​‫⁬‬⁯⁮⁭⁪‮‮)
      throw new ArgumentException("cipher required with a block size of " + \u200F⁫⁯​​‎‍‍⁮⁪‏‪⁪⁯⁬⁮​‌⁫‪‪‮⁯‏‎⁬‏⁭⁭‎⁭‍‮‎⁬⁪‏⁪‪⁯‮.\u200F‏⁬⁭‬‏‭⁪‭‪‎⁬‮⁬⁬‬⁯​‍‫‮‮‏⁮‏‫⁪‮‫‪⁪​‫⁬‬⁯⁮⁭⁪‮‮.ToString() + ".");
  }

  public virtual \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ \u206F‍‬‪⁭⁭⁬⁪⁭⁪‌‎‮‌‍⁮⁪⁮⁯‪‭⁬‭‬‪​⁭⁮⁫‬⁪⁫⁪​‏​‎⁪‍‭‮() => this.\u200F⁫‭⁫‪⁪‬‮⁪⁬​‌‫‌‭‮⁮⁯​‏‫‪‬⁮⁪‬⁬⁪⁭⁭‌⁮⁯​‬​⁪‍‮⁯‮;

  public virtual void \u206A⁭⁫‪‫‬⁪‎​⁯‎‪⁬⁭​‍⁪⁫‌⁪‫⁯​⁪⁫⁫‪‬⁬‏‫‮⁬‬⁭⁬⁫‍⁮‮(
    bool _param1,
    \u202B⁭⁮‬‎⁪‬⁪‬⁮⁪‮‬‍‎⁮‎⁫‎​‌⁫⁪‭‬‮‏‮​⁮‌‌‬‌⁯‮⁫‮‬⁫‮ _param2)
  {
    this.\u206F⁬⁪‪‪‫‎⁪‍​‭​⁭⁫‍⁪⁮‮⁫‮⁭⁪‌‫‮​⁯‬‬⁪‭‮​​‌‎‬⁬‮‮‮ = _param1;
    \u202B⁭⁮‬‎⁪‬⁪‬⁮⁪‮‬‍‎⁮‎⁫‎​‌⁫⁪‭‬‮‏‮​⁮‌‌‬‌⁯‮⁫‮‬⁫‮ obj1;
    switch (_param2)
    {
      case \u200E⁪‏⁬‍‪⁬‌‪‭‪​‮‍‬⁬‬‪‌‭‭‌‌‍⁮⁪⁯⁫‍​‎‏⁪‮‌⁬⁯⁫⁯⁬‮ _:
        \u200E⁪‏⁬‍‪⁬‌‪‭‪​‮‍‬⁬‬‪‌‭‭‌‌‍⁮⁪⁯⁫‍​‎‏⁪‮‌⁬⁯⁫⁯⁬‮ obj2 = (\u200E⁪‏⁬‍‪⁬‌‪‭‪​‮‍‬⁬‬‪‌‭‭‌‌‍⁮⁪⁯⁫‍​‎‏⁪‮‌⁬⁯⁫⁯⁬‮) _param2;
        this.\u206D‌⁮‬⁭‫‏⁫‎⁫‮⁭‭‫‫‫⁯⁫‮⁭‬‍‌‏‮‮⁯‏‬‍‍⁫‪​‍‏‪‎​‪‮ = obj2.\u200B‫‭⁮‌‍⁪‪‪‏‌⁯⁮⁫‌‫⁪⁪⁯​⁮​‏​⁬‭‮‮⁪⁬​‪⁬⁯⁫​‍⁬‍⁪‮();
        this.\u202E‭‎⁯‌⁪‎⁪⁪⁭‎⁮⁬‪‬⁯⁭​⁮⁭‏‍⁯⁬⁬⁭‍​‍​‍⁪⁫⁬​‮⁯‭⁭‮‮ = obj2.\u202C​‮‍⁪‌‮​‏​‫⁭⁭‬⁮‪‍⁬​⁭‫‭‏⁬‬‎⁮‍‌‬⁬‏‬‎‌⁫‮​‮‫‮();
        this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮ = this.\u202D​⁮‍⁭⁫‍‌​‮⁫​​⁭⁯⁬⁪‫‬‭‪‫‭⁫⁬‫‭‬⁯‭⁮‎‍‫‌‎⁪⁭⁭‫‮(_param1, obj2.\u202D‮⁬‌⁫⁮⁬‫‎‮‬‬⁪⁪⁭⁪⁫⁯⁪‬‏⁭‮​‬‬⁯⁮‍‫‏‏‎‭‬⁬‌‭​‌‮);
        obj1 = (\u202B⁭⁮‬‎⁪‬⁪‬⁮⁪‮‬‍‎⁮‎⁫‎​‌⁫⁪‭‬‮‏‮​⁮‌‌‬‌⁯‮⁫‮‬⁫‮) obj2.\u206F⁬‌‍⁪‎⁪‎‏‬‎⁮‫‫‏⁫‎⁬‫‪‎‍⁪​‎⁭‬‏‮‫⁮⁯‬‌⁬‮⁭​‮⁭‮;
        break;
      case \u200C⁯‭‏⁯‬‌‌‏​‌‫⁬‮⁮⁫‬⁬‮⁪‍​⁯‮⁭‏‫‪‍‬⁮​‬⁭⁯‍⁭‭‪⁬‮ _:
        \u200C⁯‭‏⁯‬‌‌‏​‌‫⁬‮⁮⁫‬⁬‮⁪‍​⁯‮⁭‏‫‪‍‬⁮​‬⁭⁯‍⁭‭‪⁬‮ obj3 = (\u200C⁯‭‏⁯‬‌‌‏​‌‫⁬‮⁮⁫‬⁬‮⁪‍​⁯‮⁭‏‫‪‍‬⁮​‬⁭⁯‍⁭‭‪⁬‮) _param2;
        this.\u206D‌⁮‬⁭‫‏⁫‎⁫‮⁭‭‫‫‫⁯⁫‮⁭‬‍‌‏‮‮⁯‏‬‍‍⁫‪​‍‏‪‎​‪‮ = obj3.\u202A‌⁭‍‪‭‍‍⁪⁭⁫‮⁬‍⁪⁪‪⁬‏⁭⁫⁫⁬‫⁬‪‏⁯‍⁪‍‮‫⁪‏‬⁯‭‏‪‮();
        this.\u202E‭‎⁯‌⁪‎⁪⁪⁭‎⁮⁬‪‬⁯⁭​⁮⁭‏‍⁯⁬⁬⁭‍​‍​‍⁪⁫⁬​‮⁯‭⁭‮‮ = (byte[]) null;
        this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮ = this.\u202D​⁮‍⁭⁫‍‌​‮⁫​​⁭⁯⁬⁪‫‬‭‪‫‭⁫⁬‫‭‬⁯‭⁮‎‍‫‌‎⁪⁭⁭‫‮(_param1, 64);
        obj1 = obj3.\u202C⁬⁮⁮‮⁮​‫⁪⁬⁬⁬​‎‍⁭⁫‍⁯‬⁪‬⁮⁪‬‬⁭⁭⁫⁫‏‭⁪‬​‮​‫‫⁫‮;
        break;
      default:
        throw new ArgumentException("invalid parameters passed to CCM");
    }
    if (obj1 != null)
      this.\u200E‏‮‏⁮⁫‍‭‬‪‏‭⁬⁪⁯⁭‏‮‌⁪⁬‏‬⁯‏‍‫⁫‪‬⁭‭​⁯‍‮‏‏‮‬‮ = obj1;
    if (this.\u206D‌⁮‬⁭‫‏⁫‎⁫‮⁭‭‫‫‫⁯⁫‮⁭‬‍‌‏‮‮⁯‏‬‍‍⁫‪​‍‏‪‎​‪‮ == null || this.\u206D‌⁮‬⁭‫‏⁫‎⁫‮⁭‭‫‫‫⁯⁫‮⁭‬‍‌‏‮‮⁯‏‬‍‍⁫‪​‍‏‪‎​‪‮.Length < 7 || this.\u206D‌⁮‬⁭‫‏⁫‎⁫‮⁭‭‫‫‫⁯⁫‮⁭‬‍‌‏‮‮⁯‏‬‍‍⁫‪​‍‏‪‎​‪‮.Length > 13)
      throw new ArgumentException("nonce must have length from 7 to 13 octets");
    this.\u202C‬‎⁪​​‌‎‍⁯⁯​‮‪‮​⁭‬‭​⁮‬‍⁬⁬⁫‭​‎‌⁪⁬‬‮⁬⁫‮⁮‪‪‮();
  }

  public virtual string \u206B‪⁭‪⁮‍⁮‪⁭⁪‪​⁮‭‭⁬⁯‍‎⁮⁬‫‍‏‌⁬⁯⁯‮⁪‪‬‫⁯‬⁪‌‍‮‎‮ => this.\u200F⁫‭⁫‪⁪‬‮⁪⁬​‌‫‌‭‮⁮⁯​‏‫‪‬⁮⁪‬⁬⁪⁭⁭‌⁮⁯​‬​⁪‍‮⁯‮.\u206B‪⁭‪⁮‍⁮‪⁭⁪‪​⁮‭‭⁬⁯‍‎⁮⁬‫‍‏‌⁬⁯⁯‮⁪‪‬‫⁯‬⁪‌‍‮‎‮ + "/CCM";

  public virtual int \u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮() => this.\u200F⁫‭⁫‪⁪‬‮⁪⁬​‌‫‌‭‮⁮⁯​‏‫‪‬⁮⁪‬⁬⁪⁭⁭‌⁮⁯​‬​⁪‍‮⁯‮.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮();

  public virtual void \u202B⁪⁫‮‬‪⁬⁭⁯‌⁬‬‍‌⁫‭‏‭⁮‮‮⁬‌‭‬‏⁯‫‪⁭‏​‎‍⁮⁬⁬⁫‮⁪‮(byte _param1) => this.\u200E⁮⁯‫‮‮‏⁯‍⁯⁯‬⁫‎⁪‫‫‬⁮‬‍‮⁪‎‬⁪‍⁮‍‭‏⁬‮‏⁫‫‎‬‎‌‮.WriteByte(_param1);

  public virtual void \u200C‌​⁪‫‌‌⁫⁪⁮‍⁪⁫‍⁫⁭‪⁪‭⁪‭‌‍⁭‮‫‪‏‪‬‮‪⁯⁫‬⁭⁪⁪⁪‭‮(
    byte[] _param1,
    int _param2,
    int _param3)
  {
    this.\u200E⁮⁯‫‮‮‏⁯‍⁯⁯‬⁫‎⁪‫‫‬⁮‬‍‮⁪‎‬⁪‍⁮‍‭‏⁬‮‏⁫‫‎‬‎‌‮.Write(_param1, _param2, _param3);
  }

  public virtual int \u200E⁯‬‎⁯⁭⁭‬⁬⁫‍‌‫‫⁮‭‫‍⁫⁯⁫⁫‫‭‭‌​‫‏‬⁫‏‪⁪‬⁫‎‍‫⁮‮(
    byte _param1,
    byte[] _param2,
    int _param3)
  {
    this.\u206E⁬‫⁪⁮‬​⁪⁬⁭‮⁬⁯⁭‎⁪‏‌⁭‌‮‍‎‬⁮⁫‏‎⁭‪‍⁯‮​‏‍⁮​⁬⁫‮.WriteByte(_param1);
    return 0;
  }

  public virtual int \u206D‫⁭‪‭‏‎‌⁪⁪⁯‪​‌⁯‪‮⁮⁭‎⁪​⁯⁮‪‬‮⁪‭‬‍‫⁪⁭‍⁪‏⁪⁬‪‮(
    byte[] _param1,
    int _param2,
    int _param3,
    byte[] _param4,
    int _param5)
  {
    \u200B‪⁭⁮⁫⁯‌‭‏‫⁭⁯⁯‫‪‎‬‍⁪‬⁮⁪‮‍‮‎‬⁬‎⁪⁬⁫‌‍⁬‮‏‫‭⁬‮.\u200D‮⁭⁫‎⁮‏⁬⁫‍‬​‬‪‫‬‭‭‭⁬⁪‎‭⁮⁭‬‭⁭⁬⁬‪‍‌‎‏‬⁪‫‫‌‮(_param1, _param2, _param3, "Input buffer too short");
    this.\u206E⁬‫⁪⁮‬​⁪⁬⁭‮⁬⁯⁭‎⁪‏‌⁭‌‮‍‎‬⁮⁫‏‎⁭‪‍⁯‮​‏‍⁮​⁬⁫‮.Write(_param1, _param2, _param3);
    return 0;
  }

  public virtual int \u200F‏‏‬‫​⁮‬⁫‌‌⁮⁬‏⁭‭‌⁯⁪​‍​⁮⁫‮‫⁮‌‎‪⁬⁯⁪‪⁬‫⁫⁮‪⁭‮(byte[] _param1, int _param2)
  {
    int num = this.\u206E‬‫‌​‭‌‌‏⁬‭⁫⁪‌‏‌⁬⁫⁯‍‫​‌‌‌‪​‌‫‪‪‫⁯⁫​‪‍‌‭‪‮(this.\u206E⁬‫⁪⁮‬​⁪⁬⁭‮⁬⁯⁭‎⁪‏‌⁭‌‮‍‎‬⁮⁫‏‎⁭‪‍⁯‮​‏‍⁮​⁬⁫‮.GetBuffer(), 0, (int) this.\u206E⁬‫⁪⁮‬​⁪⁬⁭‮⁬⁯⁭‎⁪‏‌⁭‌‮‍‎‬⁮⁫‏‎⁭‪‍⁯‮​‏‍⁮​⁬⁫‮.Position, _param1, _param2);
    this.\u202C‬‎⁪​​‌‎‍⁯⁯​‮‪‮​⁭‬‭​⁮‬‍⁬⁬⁫‭​‎‌⁪⁬‬‮⁬⁫‮⁮‪‪‮();
    return num;
  }

  public virtual void \u202C‬‎⁪​​‌‎‍⁯⁯​‮‪‮​⁭‬‭​⁮‬‍⁬⁬⁫‭​‎‌⁪⁬‬‮⁬⁫‮⁮‪‪‮()
  {
    this.\u200F⁫‭⁫‪⁪‬‮⁪⁬​‌‫‌‭‮⁮⁯​‏‫‪‬⁮⁪‬⁬⁪⁭⁭‌⁮⁯​‬​⁪‍‮⁯‮.\u202C‬‎⁪​​‌‎‍⁯⁯​‮‪‮​⁭‬‭​⁮‬‍⁬⁬⁫‭​‎‌⁪⁬‬‮⁬⁫‮⁮‪‪‮();
    this.\u200E⁮⁯‫‮‮‏⁯‍⁯⁯‬⁫‎⁪‫‫‬⁮‬‍‮⁪‎‬⁪‍⁮‍‭‏⁬‮‏⁫‫‎‬‎‌‮.SetLength(0L);
    this.\u206E⁬‫⁪⁮‬​⁪⁬⁭‮⁬⁯⁭‎⁪‏‌⁭‌‮‍‎‬⁮⁫‏‎⁭‪‍⁯‮​‏‍⁮​⁬⁫‮.SetLength(0L);
  }

  public virtual byte[] \u200C⁬⁬‏⁭‮‫‎‏‌‮‌‍‮‪⁭⁯‫‪‭‮‪⁮⁮‭‌‏⁮‏⁫⁯‭‪‬​​‮‮⁮⁭‮() => \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u202D⁪‎⁭⁬​⁮⁪‮⁭‏⁯⁪‍⁭‍‭⁮‮⁮‍‮⁪⁮‭⁮‌​⁪‭‪‌‪‍‍‭⁫‎​⁬‮(this.\u202E⁫⁬‏⁪⁭⁪​‬⁬‎‍‌‍‌⁭‌⁮‌‪⁫‮​​⁭⁯‬⁬‌‫⁯‏‍⁮⁬⁪⁯‌⁮‎‮, 0, this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮);

  public virtual int \u200F‮⁭⁫‌‎‏​‭‏​⁯‫⁯​‮‫⁪⁫⁬⁮⁭⁯‏​⁫⁯​‮⁫⁮⁮⁫‍⁫‬‪⁮‎‫‮(int _param1) => 0;

  public virtual int \u200E‍‮‎‎‎​‫⁫‍‮‭‫⁬⁭⁪​‮⁭‫⁫‌⁫⁯‮‪⁪‭⁭‬‎​⁪‎‪‫⁯‭‌⁫‮(int _param1)
  {
    int num = (int) this.\u206E⁬‫⁪⁮‬​⁪⁬⁭‮⁬⁯⁭‎⁪‏‌⁭‌‮‍‎‬⁮⁫‏‎⁭‪‍⁯‮​‏‍⁮​⁬⁫‮.Length + _param1;
    if (this.\u206F⁬⁪‪‪‫‎⁪‍​‭​⁭⁫‍⁪⁮‮⁫‮⁭⁪‌‫‮​⁯‬‬⁪‭‮​​‌‎‬⁬‮‮‮)
      return num + this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮;
    return num >= this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮ ? num - this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮ : 0;
  }

  public virtual byte[] \u206E‬‫‌​‭‌‌‏⁬‭⁫⁪‌‏‌⁬⁫⁯‍‫​‌‌‌‪​‌‫‪‪‫⁯⁫​‪‍‌‭‪‮(
    byte[] _param1,
    int _param2,
    int _param3)
  {
    byte[] numArray;
    if (this.\u206F⁬⁪‪‪‫‎⁪‍​‭​⁭⁫‍⁪⁮‮⁫‮⁭⁪‌‫‮​⁯‬‬⁪‭‮​​‌‎‬⁬‮‮‮)
      numArray = new byte[_param3 + this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮];
    else
      numArray = _param3 >= this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮ ? new byte[_param3 - this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮] : throw new \u206F⁭‭‫‎‍‏⁯‬‍‌​⁭⁮‬⁪⁬⁮⁯‪⁪‏‬‭⁬⁫‪​‬‬‎⁪‪⁪‭‏‫‬⁪‏‮("data too short");
    this.\u206E‬‫‌​‭‌‌‏⁬‭⁫⁪‌‏‌⁬⁫⁯‍‫​‌‌‌‪​‌‫‪‪‫⁯⁫​‪‍‌‭‪‮(_param1, _param2, _param3, numArray, 0);
    return numArray;
  }

  public virtual int \u206E‬‫‌​‭‌‌‏⁬‭⁫⁪‌‏‌⁬⁫⁯‍‫​‌‌‌‪​‌‫‪‪‫⁯⁫​‪‍‌‭‪‮(
    byte[] _param1,
    int _param2,
    int _param3,
    byte[] _param4,
    int _param5)
  {
    if (this.\u200E‏‮‏⁮⁫‍‭‬‪‏‭⁬⁪⁯⁭‏‮‌⁪⁬‏‬⁯‏‍‫⁫‪‬⁭‭​⁯‍‮‏‏‮‬‮ == null)
      throw new InvalidOperationException("CCM cipher unitialized.");
    int num1 = 15 - this.\u206D‌⁮‬⁭‫‏⁫‎⁫‮⁭‭‫‫‫⁯⁫‮⁭‬‍‌‏‮‮⁯‏‬‍‍⁫‪​‍‏‪‎​‪‮.Length;
    if (num1 < 4)
    {
      int num2 = 1 << 8 * num1;
      if (_param3 >= num2)
        throw new InvalidOperationException("CCM packet too large for choice of q.");
    }
    byte[] numArray1 = new byte[\u200F⁫⁯​​‎‍‍⁮⁪‏‪⁪⁯⁬⁮​‌⁫‪‪‮⁯‏‎⁬‏⁭⁭‎⁭‍‮‎⁬⁪‏⁪‪⁯‮.\u200F‏⁬⁭‬‏‭⁪‭‪‎⁬‮⁬⁬‬⁯​‍‫‮‮‏⁮‏‫⁪‮‫‪⁪​‫⁬‬⁯⁮⁭⁪‮‮];
    numArray1[0] = (byte) (num1 - 1 & 7);
    this.\u206D‌⁮‬⁭‫‏⁫‎⁫‮⁭‭‫‫‫⁯⁫‮⁭‬‍‌‏‮‮⁯‏‬‍‍⁫‪​‍‏‪‎​‪‮.CopyTo((Array) numArray1, 1);
    \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ obj = (\u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮) new \u202E‪⁮‬‎‏⁪‫​‏‏‫⁯⁭‎‮‮⁫⁫‌⁬⁪‎‬⁮‍⁮‮⁬‌⁯‏‫‭‫⁫⁯‌‏⁫‮(this.\u200F⁫‭⁫‪⁪‬‮⁪⁬​‌‫‌‭‮⁮⁯​‏‫‪‬⁮⁪‬⁬⁪⁭⁭‌⁮⁯​‬​⁪‍‮⁯‮);
    obj.\u206A⁭⁫‪‫‬⁪‎​⁯‎‪⁬⁭​‍⁪⁫‌⁪‫⁯​⁪⁫⁫‪‬⁬‏‫‮⁬‬⁭⁬⁫‍⁮‮(this.\u206F⁬⁪‪‪‫‎⁪‍​‭​⁭⁫‍⁪⁮‮⁫‮⁭⁪‌‫‮​⁯‬‬⁪‭‮​​‌‎‬⁬‮‮‮, (\u202B⁭⁮‬‎⁪‬⁪‬⁮⁪‮‬‍‎⁮‎⁫‎​‌⁫⁪‭‬‮‏‮​⁮‌‌‬‌⁯‮⁫‮‬⁫‮) new \u200C⁯‭‏⁯‬‌‌‏​‌‫⁬‮⁮⁫‬⁬‮⁪‍​⁯‮⁭‏‫‪‍‬⁮​‬⁭⁯‍⁭‭‪⁬‮(this.\u200E‏‮‏⁮⁫‍‭‬‪‏‭⁬⁪⁯⁭‏‮‌⁪⁬‏‬⁯‏‍‫⁫‪‬⁭‭​⁯‍‮‏‏‮‬‮, numArray1));
    int sourceIndex = _param2;
    int destinationIndex = _param5;
    int num3;
    if (this.\u206F⁬⁪‪‪‫‎⁪‍​‭​⁭⁫‍⁪⁮‮⁫‮⁭⁪‌‫‮​⁯‬‬⁪‭‮​​‌‎‬⁬‮‮‮)
    {
      num3 = _param3 + this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮;
      \u200B‪⁭⁮⁫⁯‌‭‏‫⁭⁯⁯‫‪‎‬‍⁪‬⁮⁪‮‍‮‎‬⁬‎⁪⁬⁫‌‍⁬‮‏‫‭⁬‮.\u200D‬⁫‬‬⁯⁭‭⁪‮‪‬⁬⁫⁮‎‪‌⁭‎⁫⁯‍⁭⁮⁪‭​⁫⁫‭‏‍⁮‏‬​⁪⁯‎‮(_param4, _param5, num3, "Output buffer too short.");
      this.\u202A‪⁫⁪⁫‏⁮‪⁮‪⁫‬⁫⁬⁪‬⁫‭‏‍⁮‪​‪‫‬‮⁮‮⁯⁪‎‍‬⁬​⁮⁬⁭⁮‮(_param1, _param2, _param3, this.\u202E⁫⁬‏⁪⁭⁪​‬⁬‎‍‌‍‌⁭‌⁮‌‪⁫‮​​⁭⁯‬⁬‌‫⁯‏‍⁮⁬⁪⁯‌⁮‎‮);
      byte[] sourceArray = new byte[\u200F⁫⁯​​‎‍‍⁮⁪‏‪⁪⁯⁬⁮​‌⁫‪‪‮⁯‏‎⁬‏⁭⁭‎⁭‍‮‎⁬⁪‏⁪‪⁯‮.\u200F‏⁬⁭‬‏‭⁪‭‪‎⁬‮⁬⁬‬⁯​‍‫‮‮‏⁮‏‫⁪‮‫‪⁪​‫⁬‬⁯⁮⁭⁪‮‮];
      obj.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(this.\u202E⁫⁬‏⁪⁭⁪​‬⁬‎‍‌‍‌⁭‌⁮‌‪⁫‮​​⁭⁯‬⁬‌‫⁯‏‍⁮⁬⁪⁯‌⁮‎‮, 0, sourceArray, 0);
      for (; sourceIndex < _param2 + _param3 - \u200F⁫⁯​​‎‍‍⁮⁪‏‪⁪⁯⁬⁮​‌⁫‪‪‮⁯‏‎⁬‏⁭⁭‎⁭‍‮‎⁬⁪‏⁪‪⁯‮.\u200F‏⁬⁭‬‏‭⁪‭‪‎⁬‮⁬⁬‬⁯​‍‫‮‮‏⁮‏‫⁪‮‫‪⁪​‫⁬‬⁯⁮⁭⁪‮‮; sourceIndex += \u200F⁫⁯​​‎‍‍⁮⁪‏‪⁪⁯⁬⁮​‌⁫‪‪‮⁯‏‎⁬‏⁭⁭‎⁭‍‮‎⁬⁪‏⁪‪⁯‮.\u200F‏⁬⁭‬‏‭⁪‭‪‎⁬‮⁬⁬‬⁯​‍‫‮‮‏⁮‏‫⁪‮‫‪⁪​‫⁬‬⁯⁮⁭⁪‮‮)
      {
        obj.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(_param1, sourceIndex, _param4, destinationIndex);
        destinationIndex += \u200F⁫⁯​​‎‍‍⁮⁪‏‪⁪⁯⁬⁮​‌⁫‪‪‮⁯‏‎⁬‏⁭⁭‎⁭‍‮‎⁬⁪‏⁪‪⁯‮.\u200F‏⁬⁭‬‏‭⁪‭‪‎⁬‮⁬⁬‬⁯​‍‫‮‮‏⁮‏‫⁪‮‫‪⁪​‫⁬‬⁯⁮⁭⁪‮‮;
      }
      byte[] numArray2 = new byte[\u200F⁫⁯​​‎‍‍⁮⁪‏‪⁪⁯⁬⁮​‌⁫‪‪‮⁯‏‎⁬‏⁭⁭‎⁭‍‮‎⁬⁪‏⁪‪⁯‮.\u200F‏⁬⁭‬‏‭⁪‭‪‎⁬‮⁬⁬‬⁯​‍‫‮‮‏⁮‏‫⁪‮‫‪⁪​‫⁬‬⁯⁮⁭⁪‮‮];
      Array.Copy((Array) _param1, sourceIndex, (Array) numArray2, 0, _param3 + _param2 - sourceIndex);
      obj.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(numArray2, 0, numArray2, 0);
      Array.Copy((Array) numArray2, 0, (Array) _param4, destinationIndex, _param3 + _param2 - sourceIndex);
      Array.Copy((Array) sourceArray, 0, (Array) _param4, _param5 + _param3, this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮);
    }
    else
    {
      if (_param3 < this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮)
        throw new \u206F⁭‭‫‎‍‏⁯‬‍‌​⁭⁮‬⁪⁬⁮⁯‪⁪‏‬‭⁬⁫‪​‬‬‎⁪‪⁪‭‏‫‬⁪‏‮("data too short");
      num3 = _param3 - this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮;
      \u200B‪⁭⁮⁫⁯‌‭‏‫⁭⁯⁯‫‪‎‬‍⁪‬⁮⁪‮‍‮‎‬⁬‎⁪⁬⁫‌‍⁬‮‏‫‭⁬‮.\u200D‬⁫‬‬⁯⁭‭⁪‮‪‬⁬⁫⁮‎‪‌⁭‎⁫⁯‍⁭⁮⁪‭​⁫⁫‭‏‍⁮‏‬​⁪⁯‎‮(_param4, _param5, num3, "Output buffer too short.");
      Array.Copy((Array) _param1, _param2 + num3, (Array) this.\u202E⁫⁬‏⁪⁭⁪​‬⁬‎‍‌‍‌⁭‌⁮‌‪⁫‮​​⁭⁯‬⁬‌‫⁯‏‍⁮⁬⁪⁯‌⁮‎‮, 0, this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮);
      obj.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(this.\u202E⁫⁬‏⁪⁭⁪​‬⁬‎‍‌‍‌⁭‌⁮‌‪⁫‮​​⁭⁯‬⁬‌‫⁯‏‍⁮⁬⁪⁯‌⁮‎‮, 0, this.\u202E⁫⁬‏⁪⁭⁪​‬⁬‎‍‌‍‌⁭‌⁮‌‪⁫‮​​⁭⁯‬⁬‌‫⁯‏‍⁮⁬⁪⁯‌⁮‎‮, 0);
      for (int index = this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮; index != this.\u202E⁫⁬‏⁪⁭⁪​‬⁬‎‍‌‍‌⁭‌⁮‌‪⁫‮​​⁭⁯‬⁬‌‫⁯‏‍⁮⁬⁪⁯‌⁮‎‮.Length; ++index)
        this.\u202E⁫⁬‏⁪⁭⁪​‬⁬‎‍‌‍‌⁭‌⁮‌‪⁫‮​​⁭⁯‬⁬‌‫⁯‏‍⁮⁬⁪⁯‌⁮‎‮[index] = (byte) 0;
      for (; sourceIndex < _param2 + num3 - \u200F⁫⁯​​‎‍‍⁮⁪‏‪⁪⁯⁬⁮​‌⁫‪‪‮⁯‏‎⁬‏⁭⁭‎⁭‍‮‎⁬⁪‏⁪‪⁯‮.\u200F‏⁬⁭‬‏‭⁪‭‪‎⁬‮⁬⁬‬⁯​‍‫‮‮‏⁮‏‫⁪‮‫‪⁪​‫⁬‬⁯⁮⁭⁪‮‮; sourceIndex += \u200F⁫⁯​​‎‍‍⁮⁪‏‪⁪⁯⁬⁮​‌⁫‪‪‮⁯‏‎⁬‏⁭⁭‎⁭‍‮‎⁬⁪‏⁪‪⁯‮.\u200F‏⁬⁭‬‏‭⁪‭‪‎⁬‮⁬⁬‬⁯​‍‫‮‮‏⁮‏‫⁪‮‫‪⁪​‫⁬‬⁯⁮⁭⁪‮‮)
      {
        obj.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(_param1, sourceIndex, _param4, destinationIndex);
        destinationIndex += \u200F⁫⁯​​‎‍‍⁮⁪‏‪⁪⁯⁬⁮​‌⁫‪‪‮⁯‏‎⁬‏⁭⁭‎⁭‍‮‎⁬⁪‏⁪‪⁯‮.\u200F‏⁬⁭‬‏‭⁪‭‪‎⁬‮⁬⁬‬⁯​‍‫‮‮‏⁮‏‫⁪‮‫‪⁪​‫⁬‬⁯⁮⁭⁪‮‮;
      }
      byte[] numArray3 = new byte[\u200F⁫⁯​​‎‍‍⁮⁪‏‪⁪⁯⁬⁮​‌⁫‪‪‮⁯‏‎⁬‏⁭⁭‎⁭‍‮‎⁬⁪‏⁪‪⁯‮.\u200F‏⁬⁭‬‏‭⁪‭‪‎⁬‮⁬⁬‬⁯​‍‫‮‮‏⁮‏‫⁪‮‫‪⁪​‫⁬‬⁯⁮⁭⁪‮‮];
      Array.Copy((Array) _param1, sourceIndex, (Array) numArray3, 0, num3 - (sourceIndex - _param2));
      obj.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(numArray3, 0, numArray3, 0);
      Array.Copy((Array) numArray3, 0, (Array) _param4, destinationIndex, num3 - (sourceIndex - _param2));
      byte[] numArray4 = new byte[\u200F⁫⁯​​‎‍‍⁮⁪‏‪⁪⁯⁬⁮​‌⁫‪‪‮⁯‏‎⁬‏⁭⁭‎⁭‍‮‎⁬⁪‏⁪‪⁯‮.\u200F‏⁬⁭‬‏‭⁪‭‪‎⁬‮⁬⁬‬⁯​‍‫‮‮‏⁮‏‫⁪‮‫‪⁪​‫⁬‬⁯⁮⁭⁪‮‮];
      this.\u202A‪⁫⁪⁫‏⁮‪⁮‪⁫‬⁫⁬⁪‬⁫‭‏‍⁮‪​‪‫‬‮⁮‮⁯⁪‎‍‬⁬​⁮⁬⁭⁮‮(_param4, _param5, num3, numArray4);
      if (!\u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u200F⁬‌‬⁭⁪⁪‏‫⁮⁭‪⁮‎​‍⁬‭⁪⁯⁬‭‌⁬⁬‬‫‮⁫⁯‏⁫⁪‌⁬⁫⁫‬‬‬‮(this.\u202E⁫⁬‏⁪⁭⁪​‬⁬‎‍‌‍‌⁭‌⁮‌‪⁫‮​​⁭⁯‬⁬‌‫⁯‏‍⁮⁬⁪⁯‌⁮‎‮, numArray4))
        throw new \u206F⁭‭‫‎‍‏⁯‬‍‌​⁭⁮‬⁪⁬⁮⁯‪⁪‏‬‭⁬⁫‪​‬‬‎⁪‪⁪‭‏‫‬⁪‏‮("mac check in CCM failed");
    }
    return num3;
  }

  private int \u202A‪⁫⁪⁫‏⁮‪⁮‪⁫‬⁫⁬⁪‬⁫‭‏‍⁮‪​‪‫‬‮⁮‮⁯⁪‎‍‬⁬​⁮⁬⁭⁮‮(
    byte[] _param1,
    int _param2,
    int _param3,
    byte[] _param4)
  {
    \u206E‬‮‪⁯‏⁮⁯‬​⁭⁯‫⁭‪⁮⁪⁪‍⁫‭⁯‍⁯‎‍‬​‎⁪⁭‎⁭‪⁫⁭‫⁮‫⁬‮ obj = (\u206E‬‮‪⁯‏⁮⁯‬​⁭⁯‫⁭‪⁮⁪⁪‍⁫‭⁯‍⁯‎‍‬​‎⁪⁭‎⁭‪⁫⁭‫⁮‫⁬‮) new \u206F‎‭⁫‭⁮⁬⁫⁯‌‪⁫‭⁪‬‬‎‬⁪⁬⁯‏⁪⁪‏⁫⁫‍‬⁭‪⁫‫‍​‏⁪‫‍⁪‮(this.\u200F⁫‭⁫‪⁪‬‮⁪⁬​‌‫‌‭‮⁮⁯​‏‫‪‬⁮⁪‬⁬⁪⁭⁭‌⁮⁯​‬​⁪‍‮⁯‮, this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮ * 8);
    obj.\u206A⁭⁫‪‫‬⁪‎​⁯‎‪⁬⁭​‍⁪⁫‌⁪‫⁯​⁪⁫⁫‪‬⁬‏‫‮⁬‬⁭⁬⁫‍⁮‮(this.\u200E‏‮‏⁮⁫‍‭‬‪‏‭⁬⁪⁯⁭‏‮‌⁪⁬‏‬⁯‏‍‫⁫‪‬⁭‭​⁯‍‮‏‏‮‬‮);
    byte[] destinationArray = new byte[16];
    if (this.\u206D‪‮‬‮⁪‪⁫‎‬‪‪‪‮⁭‮​‮​⁮⁫‭⁫⁯‮⁮‏⁫‎‎‌‫‭‍‍⁯‏‏‭‮‮())
      destinationArray[0] |= (byte) 64;
    destinationArray[0] |= (byte) (((obj.\u202D​⁮‍⁭⁫‍‌​‮⁫​​⁭⁯⁬⁪‫‬‭‪‫‭⁫⁬‫‭‬⁯‭⁮‎‍‫‌‎⁪⁭⁭‫‮() - 2) / 2 & 7) << 3);
    destinationArray[0] |= (byte) (15 - this.\u206D‌⁮‬⁭‫‏⁫‎⁫‮⁭‭‫‫‫⁯⁫‮⁭‬‍‌‏‮‮⁯‏‬‍‍⁫‪​‍‏‪‎​‪‮.Length - 1 & 7);
    Array.Copy((Array) this.\u206D‌⁮‬⁭‫‏⁫‎⁫‮⁭‭‫‫‫⁯⁫‮⁭‬‍‌‏‮‮⁯‏‬‍‍⁫‪​‍‏‪‎​‪‮, 0, (Array) destinationArray, 1, this.\u206D‌⁮‬⁭‫‏⁫‎⁫‮⁭‭‫‫‫⁯⁫‮⁭‬‍‌‏‮‮⁯‏‬‍‍⁫‪​‍‏‪‎​‪‮.Length);
    int num1 = _param3;
    int num2 = 1;
    while (num1 > 0)
    {
      destinationArray[destinationArray.Length - num2] = (byte) (num1 & (int) byte.MaxValue);
      num1 >>= 8;
      ++num2;
    }
    obj.\u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(destinationArray, 0, destinationArray.Length);
    if (this.\u206D‪‮‬‮⁪‪⁫‎‬‪‪‪‮⁭‮​‮​⁮⁫‭⁫⁯‮⁮‏⁫‎‎‌‫‭‍‍⁯‏‏‭‮‮())
    {
      int num3 = this.\u200E⁪⁯‮​‭​​⁪‪​⁬‪‬‫‪⁬‪‌⁯⁮‮‮‪⁮⁭‌‭‌‮‫​‎‌⁪⁪‬⁭‍⁪‮();
      int num4;
      if (num3 < 65280)
      {
        obj.\u200E‍⁬‍‮‍⁮⁮​‭‪⁫‬⁭​⁯‭⁯‪‬⁮‬‏​⁪⁫‎‮​⁬⁮‪‎‮⁭​‏⁯‬⁮‮((byte) (num3 >> 8));
        obj.\u200E‍⁬‍‮‍⁮⁮​‭‪⁫‬⁭​⁯‭⁯‪‬⁮‬‏​⁪⁫‎‮​⁬⁮‪‎‮⁭​‏⁯‬⁮‮((byte) num3);
        num4 = 2;
      }
      else
      {
        obj.\u200E‍⁬‍‮‍⁮⁮​‭‪⁫‬⁭​⁯‭⁯‪‬⁮‬‏​⁪⁫‎‮​⁬⁮‪‎‮⁭​‏⁯‬⁮‮(byte.MaxValue);
        obj.\u200E‍⁬‍‮‍⁮⁮​‭‪⁫‬⁭​⁯‭⁯‪‬⁮‬‏​⁪⁫‎‮​⁬⁮‪‎‮⁭​‏⁯‬⁮‮((byte) 254);
        obj.\u200E‍⁬‍‮‍⁮⁮​‭‪⁫‬⁭​⁯‭⁯‪‬⁮‬‏​⁪⁫‎‮​⁬⁮‪‎‮⁭​‏⁯‬⁮‮((byte) (num3 >> 24));
        obj.\u200E‍⁬‍‮‍⁮⁮​‭‪⁫‬⁭​⁯‭⁯‪‬⁮‬‏​⁪⁫‎‮​⁬⁮‪‎‮⁭​‏⁯‬⁮‮((byte) (num3 >> 16));
        obj.\u200E‍⁬‍‮‍⁮⁮​‭‪⁫‬⁭​⁯‭⁯‪‬⁮‬‏​⁪⁫‎‮​⁬⁮‪‎‮⁭​‏⁯‬⁮‮((byte) (num3 >> 8));
        obj.\u200E‍⁬‍‮‍⁮⁮​‭‪⁫‬⁭​⁯‭⁯‪‬⁮‬‏​⁪⁫‎‮​⁬⁮‪‎‮⁭​‏⁯‬⁮‮((byte) num3);
        num4 = 6;
      }
      if (this.\u202E‭‎⁯‌⁪‎⁪⁪⁭‎⁮⁬‪‬⁯⁭​⁮⁭‏‍⁯⁬⁬⁭‍​‍​‍⁪⁫⁬​‮⁯‭⁭‮‮ != null)
        obj.\u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(this.\u202E‭‎⁯‌⁪‎⁪⁪⁭‎⁮⁬‪‬⁯⁭​⁮⁭‏‍⁯⁬⁬⁭‍​‍​‍⁪⁫⁬​‮⁯‭⁭‮‮, 0, this.\u202E‭‎⁯‌⁪‎⁪⁪⁭‎⁮⁬‪‬⁯⁭​⁮⁭‏‍⁯⁬⁬⁭‍​‍​‍⁪⁫⁬​‮⁯‭⁭‮‮.Length);
      if (this.\u200E⁮⁯‫‮‮‏⁯‍⁯⁯‬⁫‎⁪‫‫‬⁮‬‍‮⁪‎‬⁪‍⁮‍‭‏⁬‮‏⁫‫‎‬‎‌‮.Position > 0L)
      {
        byte[] buffer = this.\u200E⁮⁯‫‮‮‏⁯‍⁯⁯‬⁫‎⁪‫‫‬⁮‬‍‮⁪‎‬⁪‍⁮‍‭‏⁬‮‏⁫‫‎‬‎‌‮.GetBuffer();
        int position = (int) this.\u200E⁮⁯‫‮‮‏⁯‍⁯⁯‬⁫‎⁪‫‫‬⁮‬‍‮⁪‎‬⁪‍⁮‍‭‏⁬‮‏⁫‫‎‬‎‌‮.Position;
        obj.\u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(buffer, 0, position);
      }
      int num5 = (num4 + num3) % 16;
      if (num5 != 0)
      {
        for (int index = num5; index < 16; ++index)
          obj.\u200E‍⁬‍‮‍⁮⁮​‭‪⁫‬⁭​⁯‭⁯‪‬⁮‬‏​⁪⁫‎‮​⁬⁮‪‎‮⁭​‏⁯‬⁮‮((byte) 0);
      }
    }
    obj.\u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(_param1, _param2, _param3);
    return obj.\u200F‏‏‬‫​⁮‬⁫‌‌⁮⁬‏⁭‭‌⁯⁪​‍​⁮⁫‮‫⁮‌‎‪⁬⁯⁪‪⁬‫⁫⁮‪⁭‮(_param4, 0);
  }

  private int \u202D​⁮‍⁭⁫‍‌​‮⁫​​⁭⁯⁬⁪‫‬‭‪‫‭⁫⁬‫‭‬⁯‭⁮‎‍‫‌‎⁪⁭⁭‫‮(bool _param1, int _param2)
  {
    if (_param1 && (_param2 < 32 || _param2 > 128 || (_param2 & 15) != 0))
      throw new ArgumentException("tag length in octets must be one of {4,6,8,10,12,14,16}");
    return _param2 >> 3;
  }

  private int \u200E⁪⁯‮​‭​​⁪‪​⁬‪‬‫‪⁬‪‌⁯⁮‮‮‪⁮⁭‌‭‌‮‫​‎‌⁪⁪‬⁭‍⁪‮() => (int) this.\u200E⁮⁯‫‮‮‏⁯‍⁯⁯‬⁫‎⁪‫‫‬⁮‬‍‮⁪‎‬⁪‍⁮‍‭‏⁬‮‏⁫‫‎‬‎‌‮.Length + (this.\u202E‭‎⁯‌⁪‎⁪⁪⁭‎⁮⁬‪‬⁯⁭​⁮⁭‏‍⁯⁬⁬⁭‍​‍​‍⁪⁫⁬​‮⁯‭⁭‮‮ == null ? 0 : this.\u202E‭‎⁯‌⁪‎⁪⁪⁭‎⁮⁬‪‬⁯⁭​⁮⁭‏‍⁯⁬⁬⁭‍​‍​‍⁪⁫⁬​‮⁯‭⁭‮‮.Length);

  private bool \u206D‪‮‬‮⁪‪⁫‎‬‪‪‪‮⁭‮​‮​⁮⁫‭⁫⁯‮⁮‏⁫‎‎‌‫‭‍‍⁯‏‏‭‮‮() => this.\u200E⁪⁯‮​‭​​⁪‪​⁬‪‬‫‪⁬‪‌⁯⁮‮‮‪⁮⁭‌‭‌‮‫​‎‌⁪⁪‬⁭‍⁪‮() > 0;
}
