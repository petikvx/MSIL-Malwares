// Decompiled with JetBrains decompiler
// Type: MyApp.My.MySettings
// Assembly: CobianRAT, Version=1.0.40.7, Culture=neutral, PublicKeyToken=null
// MVID: E2EA0EB9-E35B-43B8-8108-8D71E6EED121
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\Trojan-Spy.MSIL.Keylogger.cmqq-1f2c145fc77049b9437c9aedfd8332be167246bc270d98c22deca902fc967563.exe

using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Configuration;
using System.Diagnostics;
using System.Runtime.CompilerServices;

namespace MyApp.My
{
  [EditorBrowsable(EditorBrowsableState.Advanced)]
  [CompilerGenerated]
  [GeneratedCode("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "9.0.0.0")]
  internal sealed class MySettings : ApplicationSettingsBase
  {
    private static MySettings defaultInstance;
    private static bool addedHandler;
    private static object addedHandlerLockObject;

    [MethodImpl(MethodImplOptions.NoInlining)]
    static MySettings()
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public MySettings()
    {
      // ISSUE: unable to decompile the method.
    }

    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [DebuggerNonUserCode]
    [MethodImpl(MethodImplOptions.NoInlining)]
    private static void AutoSaveSettings(object sender, EventArgs e)
    {
      // ISSUE: unable to decompile the method.
    }

    public static MySettings Default
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
    }

    [DebuggerNonUserCode]
    [DefaultSettingValue("False")]
    [UserScopedSetting]
    public bool EULA
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [MethodImpl(MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    [DebuggerNonUserCode]
    [UserScopedSetting]
    [DefaultSettingValue("False")]
    public bool s
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [MethodImpl(MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }
  }
}
