// Decompiled with JetBrains decompiler
// Type: BoardGameBackend.AbstractMatchfield
// Assembly: DebuggableAttrib, Version=4.0.2.1, Culture=neutral, PublicKeyToken=null
// MVID: 31857FCB-0B1B-4445-A158-C519E13994BE
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.NetWire.gen-5b3332c8ab54721c4b4771b748c9852b4fee0e77ca63915231e7473a827574a7.exe

using System;
using System.Runtime.InteropServices;

namespace BoardGameBackend
{
  public abstract class AbstractMatchfield
  {
    private AbstractField[,] Matchfield;
    public BoardGame Game;

    public AbstractMatchfield(int width, int height)
    {
label_1:
      int num1 = 1156395877;
      int index1;
      AbstractField[,] matchfield;
      int index2;
      AbstractField abstractField;
      int num2;
      int num3;
      while (true)
      {
        uint num4;
        switch ((num4 = (uint) (num1 ^ 1100694631)) % 17U)
        {
          case 0:
            abstractField = matchfield[index1, index2];
            num1 = 1773251504;
            continue;
          case 1:
            int num5;
            num1 = num5 = index1 > num3 ? 546278072 : (num5 = 412714315);
            continue;
          case 2:
            goto label_3;
          case 3:
            num1 = (int) num4 * 1876872996 ^ 2050346292;
            continue;
          case 4:
            int num6;
            num1 = num6 = index2 > num2 ? 1326979739 : (num6 = 2096678878);
            continue;
          case 5:
            index2 = AbstractMatchfield.\u202D⁮‏‎⁮‪⁪⁯​‭‫⁬‬‌⁪⁯‮‏‫⁮‏‬‮⁪‬⁯‫‎‫⁭‌‌​⁬‏‏‍⁪⁪‬‮((Array) matchfield, 1);
            num1 = 1835540781;
            continue;
          case 6:
            num1 = (int) num4 * -1477873042 ^ -1834024064;
            continue;
          case 7:
            num3 = AbstractMatchfield.\u206C⁭‬‬‬⁮⁬‫⁬‬‎‫⁭‌‭​⁬⁬‪‫⁮⁫⁭‬‍‬⁭‏‬‭‮‌‭​‮‭⁫‪⁫‭‮((Array) matchfield, 0);
            num2 = AbstractMatchfield.\u206C⁭‬‬‬⁮⁬‫⁬‬‎‫⁭‌‭​⁬⁬‪‫⁮⁫⁭‬‍‬⁭‏‬‭‮‌‭​‮‭⁫‪⁫‭‮((Array) matchfield, 1);
            index1 = AbstractMatchfield.\u202D⁮‏‎⁮‪⁪⁯​‭‫⁬‬‌⁪⁯‮‏‫⁮‏‬‮⁪‬⁯‫‎‫⁭‌‌​⁬‏‏‍⁪⁪‬‮((Array) matchfield, 0);
            num1 = (int) num4 * 1006101431 ^ 2043893138;
            continue;
          case 8:
            goto label_1;
          case 9:
            num1 = (int) num4 * -1323428203 ^ -1269963049;
            continue;
          case 10:
            ++index2;
            num1 = (int) num4 * -1108140312 ^ 1943531252;
            continue;
          case 11:
            matchfield = this.Matchfield;
            num1 = (int) num4 * -1116475565 ^ -1177791321;
            continue;
          case 12:
            num1 = (int) num4 * 1289289525 ^ 1827713038;
            continue;
          case 13:
            abstractField.Matchfield = this;
            num1 = (int) num4 * 1245513750 ^ -888641131;
            continue;
          case 14:
            this.Matchfield = new AbstractField[width, height];
            num1 = (int) num4 * 1714543692 ^ 1134044317;
            continue;
          case 15:
            ++index1;
            num1 = (int) num4 * -1822635961 ^ 525200501;
            continue;
          case 16:
            num1 = (int) num4 * 59039618 ^ -1390569257;
            continue;
          default:
            goto label_19;
        }
      }
label_3:
      return;
label_19:;
    }

    static int \u206C⁭‬‬‬⁮⁬‫⁬‬‎‫⁭‌‭​⁬⁬‪‫⁮⁫⁭‬‍‬⁭‏‬‭‮‌‭​‮‭⁫‪⁫‭‮([In] Array obj0, [In] int obj1) => obj0.GetUpperBound(obj1);

    static int \u202D⁮‏‎⁮‪⁪⁯​‭‫⁬‬‌⁪⁯‮‏‫⁮‏‬‮⁪‬⁯‫‎‫⁭‌‌​⁬‏‏‍⁪⁪‬‮([In] Array obj0, [In] int obj1) => obj0.GetLowerBound(obj1);
  }
}
