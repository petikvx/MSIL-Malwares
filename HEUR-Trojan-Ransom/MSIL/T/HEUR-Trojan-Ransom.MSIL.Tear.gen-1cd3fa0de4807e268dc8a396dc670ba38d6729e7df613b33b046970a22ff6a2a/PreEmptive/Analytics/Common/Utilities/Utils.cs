// Decompiled with JetBrains decompiler
// Type: PreEmptive.Analytics.Common.Utilities.Utils
// Assembly: EncoderCSL, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8BC70EB6-E222-4E38-9ED5-32744A85C676
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-Ransom.MSIL.Tear.gen-1cd3fa0de4807e268dc8a396dc670ba38d6729e7df613b33b046970a22ff6a2a.exe

using PreEmptive.Analytics.Common.Tags;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.InteropServices;
using System.Threading;

namespace PreEmptive.Analytics.Common.Utilities
{
  public static class Utils
  {
    public static string ToISOFormat(this DateTime dateTime)
    {
      int A_1 = 6;
      int num1 = 15718;
      int num2 = num1;
      num1 = 15718;
      int num3 = num1;
      switch (num2 == num3)
      {
        case true:
          if (true)
            ;
          if (false)
            ;
          return dateTime.ToString(Utils.a("쎹얻잽릿\uEFC1觃诅\uE5C7껉\uA8CB髍飏髑裓\uECD5뗗럙胛\uE4DD鏟釡룣죥軧賩諫ꗭ", A_1));
        default:
          goto case 1;
      }
    }

    public static string Sanitize(this string s)
    {
      while (!string.IsNullOrEmpty(s))
      {
        int num1 = -23479;
        int num2 = num1;
        num1 = -23479;
        int num3 = num1;
        switch (num2 == num3 ? 1 : 0)
        {
          case 0:
          case 2:
            continue;
          default:
            num1 = 1;
            if (num1 == 0)
              ;
            num1 = 0;
            if (num1 == 0)
              ;
            s = s.Trim();
            return s;
        }
      }
      return s;
    }

    internal static string a<a>(this a? A_0) where a : struct
    {
      while (!A_0.HasValue)
      {
        int num1 = 26816;
        int num2 = num1;
        num1 = 26816;
        int num3 = num1;
        switch (num2 == num3 ? 1 : 0)
        {
          case 0:
          case 2:
            continue;
          default:
            num1 = 0;
            if (num1 == 0)
              ;
            num1 = 1;
            if (num1 == 0)
              ;
            return (string) null;
        }
      }
      return A_0.Value.ToString();
    }

    internal static Guid a(this Guid? A_0, Guid A_1)
    {
      int num = 1;
      while (true)
      {
        switch (num)
        {
          case 0:
            goto label_6;
          case 1:
            if (false)
              ;
            switch (0)
            {
              case 0:
                goto label_4;
              default:
                continue;
            }
          case 2:
            switch (true ? 1 : 0)
            {
              case 0:
              case 2:
                break;
              default:
                if (true)
                  ;
                num = 3;
                continue;
            }
            break;
          case 3:
            if (!(A_0.Value == Guid.Empty))
              goto label_12;
            else
              break;
          default:
label_4:
            if (A_0.HasValue)
            {
              num = 2;
              continue;
            }
            goto label_6;
        }
        num = 0;
      }
label_6:
      return A_1;
label_12:
      return A_0.Value;
    }

    public static IList<Tag> ByName(this IList<Tag> tags, string name)
    {
      int num1 = 32246;
      int num2 = num1;
      num1 = 32246;
      int num3 = num1;
      switch (num2 == num3)
      {
        case true:
          int num4 = 1;
          if (num4 == 0)
            ;
          num4 = 0;
          if (num4 == 0)
            ;
          // ISSUE: object of a compiler-generated type is created
          // ISSUE: reference to a compiler-generated method
          return (IList<Tag>) tags.Where<Tag>(new Func<Tag, bool>(new Utils.a()
          {
            a = name
          }.b)).ToList<Tag>();
        default:
          goto case 1;
      }
    }

    public static string GetInstanceId(
      this IPlatform platform,
      Configuration config,
      ILogger logger)
    {
      int A_1 = 12;
      int num1 = 1;
      int num2;
      string instanceId;
      while (true)
      {
        switch (num1)
        {
          case 0:
            num2 = 3730;
            int num3 = num2;
            num2 = 3730;
            int num4 = num2;
            switch (num3 == num4 ? 1 : 0)
            {
              case 0:
              case 2:
                goto label_1;
              default:
                goto label_10;
            }
          case 1:
label_1:
            num2 = 1;
            if (num2 == 0)
              ;
            switch (0)
            {
              case 0:
                break;
              default:
                continue;
            }
            break;
          case 2:
            goto label_6;
        }
        if (config.InstanceID != null)
        {
          num2 = 0;
          num1 = num2;
        }
        else
        {
          instanceId = "";
          num2 = 2;
          num1 = num2;
        }
      }
label_6:
      try
      {
        instanceId = Utils.a(platform, logger, Utils.a("覿곁럃닅꧇\uA4C9꿋ꯍ駏雑", A_1));
      }
      catch
      {
        logger.LogWarning(Utils.a("覿곁럃닅꧇\uA4C9꿋ꯍ駏雑\uF4D3뗕럗꿙냛뫝샟賡诣鋥죧裩觫컭華鏱苳鏵鳷\uDAF9鏻賽\u20FF瀁愃爅稇按椋砍甏瘑㐓瀕樗甙焛㸝借䜡嘣唥䄧天堫䬭帯䘱ᐳ䔵䰷唹主弽✿❁橃晅ᵇ㥉╋⁍㝏牑㕓㡕硗㭙⥛⩝ཟաţ\u0865൧ᡩ൫ᩭᕯᙱ味㽵ᙷॹ\u087Bώ\uEE7F\uE181\uE183쾅첇ꪉ\uE58B\uE08D\uE38F\uE691\uF193\uF795ﲗ뒙", A_1));
      }
      return instanceId;
label_10:
      num2 = 0;
      if (num2 == 0)
        ;
      return config.InstanceID;
    }

    public static string GetGeneratedUserName(
      this IPlatform platform,
      Configuration config,
      ILogger logger)
    {
      int A_1 = 5;
      int num1 = 2;
      int num2;
      while (true)
      {
        switch (num1)
        {
          case 0:
            num2 = -23287;
            int num3 = num2;
            num2 = -23287;
            int num4 = num2;
            switch (num3 == num4 ? 1 : 0)
            {
              case 0:
              case 2:
                break;
              default:
                goto label_10;
            }
            break;
          case 1:
            goto label_5;
          case 2:
            switch (0)
            {
              case 0:
                goto label_3;
              default:
                continue;
            }
          default:
label_3:
            if (config.GeneratedUserName != null)
            {
              num2 = 0;
              num1 = num2;
              continue;
            }
            break;
        }
        num2 = 1;
        num1 = num2;
      }
label_5:
      string generatedUserName;
      try
      {
        generatedUserName = Utils.a(platform, logger, Utils.a("ﺸ\uDEBA펼\uDABE돀ꋂ뇄ꋆ귈黊뻌\uAACEꏐ鷒듔뫖볘", A_1));
        config.GeneratedUserName = generatedUserName;
      }
      catch
      {
        logger.LogWarning(Utils.a("ﺸ\uDEBA펼\uDABE돀ꋂ뇄ꋆ귈苊ꏌ볎ꗐ닒믔듖볘鋚駜\uFFDE苠賢郤详跨쯪菬胮藰폲韴鋶\uD9F8裺鳼觾搀朂┄栆笈⬊缌樎攐愒簔爖漘縚礜㼞䜠儢䨤䨦न嬪䠬崮䈰娲䘴䌶尸唺䤼Ἶ㉀㝂⩄㕆⡈ⱊ⡌慎", A_1));
        generatedUserName = Guid.NewGuid().ToString();
        config.GeneratedUserName = generatedUserName;
      }
      return generatedUserName;
label_10:
      num2 = 1;
      if (num2 == 0)
        ;
      num2 = 0;
      if (num2 == 0)
        ;
      return config.GeneratedUserName;
    }

    private static string a(IPlatform A_0, ILogger A_1, string A_2)
    {
      int A_1_1 = 17;
label_1:
      int num1;
      ISettingsStore settingsStore;
      string str;
      try
      {
        num1 = 0;
        switch (num1)
        {
          default:
            num1 = -923;
            int num2 = num1;
            num1 = -923;
            int num3 = num1;
            switch (num2 == num3 ? 1 : 0)
            {
              case 0:
              case 2:
                goto label_1;
              default:
                num1 = 0;
                if (num1 == 0)
                  ;
                settingsStore = A_0.GetSettingsStore();
                str = settingsStore[A_2];
                break;
            }
            break;
        }
      }
      catch (Exception ex)
      {
        A_1.LogExceptionWarning(ex, Utils.a("蓄꧆\uE9C8뻊ꏌ\uAACE꧐ꏒ냔듖귘뻚맜\uFFDE迠賢诤쫦諨駪蓬鯮飰郲铴鯶\uD9F8黺藼鳾搀猂焄渆昈攊ⴌ怎爐瀒怔攖簘缚", A_1_1));
        throw;
      }
      num1 = 0;
      int num4 = num1;
      while (true)
      {
        switch (num4)
        {
          case 0:
            if (str == null)
            {
              num1 = 1;
              num4 = num1;
              continue;
            }
            goto label_21;
          case 1:
            num1 = 1;
            if (num1 == 0)
              ;
            switch (0)
            {
              case 0:
                break;
              default:
                continue;
            }
            break;
          case 2:
            goto label_6;
        }
        str = Guid.NewGuid().ToString();
        num1 = 2;
        num4 = num1;
      }
label_6:
      try
      {
        num1 = 3;
        int num5 = num1;
        while (true)
        {
          switch (num5)
          {
            case 0:
              settingsStore[A_2] = str;
              settingsStore.Flush();
              num1 = 1;
              num5 = num1;
              continue;
            case 1:
              num1 = 2;
              num5 = num1;
              continue;
            case 2:
              goto label_21;
            case 3:
              switch (0)
              {
                case 0:
                  goto label_9;
                default:
                  continue;
              }
            default:
label_9:
              if (settingsStore != null)
              {
                num1 = 0;
                num5 = num1;
                continue;
              }
              goto case 1;
          }
        }
      }
      catch (Exception ex)
      {
        A_1.LogExceptionWarning(ex, Utils.a("蓄꧆\uE9C8뻊ꏌ\uAACE꧐ꏒ냔듖귘뻚맜\uFFDE迠賢诤쫦諨駪蓬鯮飰郲铴鯶\uD9F8黺藼鳾搀猂焄渆昈攊ⴌ怎爐瀒怔攖簘缚", A_1_1));
        throw;
      }
label_21:
      return str;
    }

    internal static void a(this List<KeyValuePair<string, string>> A_0, string A_1, string A_2)
    {
      int num1 = 1;
      if (num1 == 0)
        ;
      num1 = -18226;
      int num2 = num1;
      num1 = -18226;
      int num3 = num1;
      switch (num2 == num3)
      {
        case true:
          num1 = 0;
          if (num1 == 0)
            ;
          A_0.Add(new KeyValuePair<string, string>(A_1, A_2));
          break;
        default:
          goto case 1;
      }
    }

    internal static bool a(this LoggingLevel A_0, LoggingLevel A_1)
    {
      int num1 = 26810;
      int num2 = num1;
      num1 = 26810;
      int num3 = num1;
      switch (num2 == num3)
      {
        case true:
          int num4 = 1;
          if (num4 == 0)
            ;
          num4 = 0;
          if (num4 == 0)
            ;
          return (A_0 & A_1) == A_1;
        default:
          goto case 1;
      }
    }

    public static bool WithTimeout(Action task, int duration)
    {
      int num1 = -19219;
      int num2 = num1;
      num1 = -19219;
      int num3 = num1;
      switch (num2 == num3)
      {
        case true:
          int num4 = 0;
          if (num4 == 0)
            ;
          num4 = 1;
          if (num4 == 0)
            ;
          // ISSUE: object of a compiler-generated type is created
          // ISSUE: variable of a compiler-generated type
          Utils.b b = new Utils.b();
          // ISSUE: reference to a compiler-generated field
          b.b = task;
          // ISSUE: reference to a compiler-generated field
          b.a = new ManualResetEvent(false);
          // ISSUE: reference to a compiler-generated method
          ThreadPool.QueueUserWorkItem(new WaitCallback(b.c));
          // ISSUE: reference to a compiler-generated field
          return b.a.WaitOne(duration);
        default:
          goto case 1;
      }
    }

    public static void ExecuteAsync(this IAsyncProvider platform, Action action, [Optional] bool highPriority)
    {
      int num1 = -17197;
      int num2 = num1;
      num1 = -17197;
      int num3 = num1;
      switch (num2 == num3)
      {
        case true:
          int num4 = 1;
          if (num4 == 0)
            ;
          num4 = 0;
          if (num4 == 0)
            ;
          // ISSUE: object of a compiler-generated type is created
          // ISSUE: reference to a compiler-generated method
          platform.ExecuteAsync<object>(new Func<object>(new Utils.c()
          {
            a = action
          }.b), highPriority: highPriority);
          break;
        default:
          goto case 1;
      }
    }

    public static void ExecuteAsync<T>(
      this IAsyncProvider platform,
      Func<T> action,
      [Optional] Action<T> completed,
      [Optional] bool highPriority)
    {
      if (false)
        ;
      WaitCallback callBack = (WaitCallback) null;
      // ISSUE: object of a compiler-generated type is created
      // ISSUE: variable of a compiler-generated type
      Utils.d<T> d = new Utils.d<T>()
      {
        b = action,
        c = completed
      };
      // ISSUE: reference to a compiler-generated field
      // ISSUE: reference to a compiler-generated method
      d.a = new Action(d.d);
      try
      {
        // ISSUE: reference to a compiler-generated field
        platform.ExecuteAsyncIfSupported(d.a, highPriority);
      }
      catch
      {
        if (callBack == null)
        {
          int num1 = 18738;
          int num2 = num1;
          num1 = 18738;
          int num3 = num1;
          switch (num2 == num3 ? 1 : 0)
          {
            case 0:
            case 2:
              break;
            default:
              num1 = 0;
              if (num1 == 0)
                ;
              // ISSUE: reference to a compiler-generated method
              callBack = new WaitCallback(d.d);
              break;
          }
        }
        ThreadPool.QueueUserWorkItem(callBack);
      }
    }

    public static void ExecuteSync<T>(Func<T> action, [Optional] Action<T> completed)
    {
      try
      {
        int num;
        T obj;
        switch (0)
        {
          case 0:
label_2:
            obj = action();
            num = 3;
            goto default;
          default:
            while (true)
            {
              switch (num)
              {
                case 0:
                  completed(obj);
                  switch (true ? 1 : 0)
                  {
                    case 0:
                    case 2:
                      goto label_2;
                    default:
                      if (true)
                        ;
                      num = 1;
                      continue;
                  }
                case 1:
                  num = 2;
                  continue;
                case 2:
                  goto label_12;
                case 3:
                  if (completed != null)
                  {
                    num = 0;
                    continue;
                  }
                  goto case 1;
                default:
                  goto label_2;
              }
            }
        }
      }
      catch (Exception ex)
      {
      }
label_12:
      if (false)
        ;
    }

    public static MessageBatch[] Split(this MessageBatch batch)
    {
      if (batch.Messages.Count == 1)
      {
        int num = -24650;
        switch (-24650 == num ? 1 : 0)
        {
          case 0:
          case 2:
            return new MessageBatch[1]{ batch };
          default:
            num = 1;
            if (num == 0)
              ;
            num = 0;
            if (num == 0)
              goto case 0;
            else
              goto case 0;
        }
      }
      else
      {
        MessageBatch[] messageBatchArray = new MessageBatch[2];
        int count = batch.Messages.Count / 2;
        List<Message> list1 = batch.Messages.Take<Message>(count).ToList<Message>();
        List<Message> list2 = batch.Messages.Skip<Message>(count).ToList<Message>();
        messageBatchArray[0] = new MessageBatch(batch.AgentInfo, batch.Configuration, (IList<Message>) list1);
        messageBatchArray[1] = new MessageBatch(batch.AgentInfo, batch.Configuration, (IList<Message>) list2);
        return messageBatchArray;
      }
    }

    public static void LogException(this ILogger logger, Exception e, [Optional] string prefix)
    {
      int A_1 = 17;
      int num1 = -5228;
      int num2 = num1;
      num1 = -5228;
      int num3 = num1;
      switch (num2 == num3)
      {
        case true:
          if (true)
            ;
          if (false)
            ;
          logger.LogError(string.Format(prefix + Utils.a("\uEBC4\uE7C6賈돊껌\uAACEꇐ\uA7D2볔룖럘ﯚ觜ꛞ釠蛢엤鳦\uD9E8雪췬軮藰폲軴웶蓸\uDBFA諼雾甀欂┄樆氈砊縌渎瘐瘒㔔氖⬘昚", A_1), new object[3]
          {
            (object) ((object) e).GetType().ToString(),
            (object) (e.StackTrace ?? ""),
            (object) (e.Message ?? "")
          }));
          break;
        default:
          goto case 1;
      }
    }

    public static void LogExceptionWarning(this ILogger logger, Exception e, [Optional] string prefix)
    {
      int A_1 = 18;
      int num1 = 1;
      if (num1 == 0)
        ;
      num1 = 2365;
      int num2 = num1;
      num1 = 2365;
      int num3 = num1;
      switch (num2 == num3)
      {
        case true:
          num1 = 0;
          if (num1 == 0)
            ;
          logger.LogWarning(string.Format(prefix + Utils.a("\uE8C5\uE8C7迉듋귍뗏ꋑꃓ뿕럗듙ﳛ諝駟鋡臣웥鏧\uDAE9釫컭釯蛱퓳践짷蟹\uDCFB觽槿瘁氃★攇漉缋納焏甑焓㘕挗⠙愛", A_1), new object[3]
          {
            (object) ((object) e).GetType().ToString(),
            (object) (e.StackTrace ?? ""),
            (object) (e.Message ?? "")
          }));
          break;
        default:
          goto case 1;
      }
    }

    public static void Attempt(Action action, [Optional] ILogger logger)
    {
      int A_1 = 17;
      try
      {
        action();
      }
      catch (Exception ex)
      {
        if (logger == null)
          return;
        if (false)
          ;
        switch (true ? 1 : 0)
        {
          case 0:
            break;
          case 2:
            break;
          default:
            if (true)
              ;
            logger.LogExceptionWarning(ex, Utils.a("蓄꧆\uE9C8뻊ꏌ\uAACE꧐ꏒ냔듖귘뻚맜\uFFDE迠賢诤쫦諨駪蓬鯮飰郲铴鯶\uD9F8黺藼鳾搀猂焄渆昈攊ⴌ怎爐瀒怔攖簘缚", A_1));
            break;
        }
      }
    }

    public static T Attempt<T>(Func<T> action, [Optional] ILogger logger)
    {
      int A_1 = 8;
      try
      {
        return action();
      }
      catch (Exception ex)
      {
        if (logger != null)
        {
          int num = 16572;
          switch (16572 == num ? 1 : 0)
          {
            case 0:
            case 2:
              break;
            default:
              num = 1;
              if (num == 0)
                ;
              num = 0;
              if (num == 0)
                ;
              logger.LogExceptionWarning(ex, Utils.a("ﶻ킽\uE0BF럁\uAAC3ꏅ냇뫉꧋귍\uA4CF럑냓\uF6D5뛗뗙닛\uF3DD菟郡跣鋥臧觩跫苭탯韱賳闵鷷諹裻韽濿氁␃椅欇椉礋簍甏瘑", A_1));
              break;
          }
        }
      }
      return default (T);
    }

    public static void MergeStopDefaults(this IPlatform platform, Configuration config)
    {
      int num1;
      Configuration.ApplicationStopBehavior behaviorDefaults;
      int num2;
      switch (0)
      {
        case 0:
label_2:
          behaviorDefaults = platform.GetStopBehaviorDefaults();
          num2 = 1;
          if (num2 == 0)
            ;
          num2 = 11;
          num1 = num2;
          goto default;
        default:
          while (true)
          {
            switch (num1)
            {
              case 0:
                num2 = 5;
                num1 = num2;
                continue;
              case 1:
                num2 = 15898;
                int num3 = num2;
                num2 = 15898;
                int num4 = num2;
                switch (num3 == num4 ? 1 : 0)
                {
                  case 0:
                  case 2:
                    goto label_13;
                  default:
                    num2 = 0;
                    if (num2 == 0)
                      ;
                    num2 = 8;
                    num1 = num2;
                    continue;
                }
              case 2:
label_13:
                config.StopBehavior.StopTimeout = behaviorDefaults.StopTimeout;
                num2 = 7;
                num1 = num2;
                continue;
              case 3:
                num2 = 6;
                num1 = num2;
                continue;
              case 4:
                config.StopBehavior.NeededTimeForSavingAtStop = behaviorDefaults.NeededTimeForSavingAtStop;
                num2 = 3;
                num1 = num2;
                continue;
              case 5:
                if (!config.StopBehavior.NeededTimeForSavingAtStop.HasValue)
                {
                  num2 = 4;
                  num1 = num2;
                  continue;
                }
                goto case 3;
              case 6:
                if (!config.StopBehavior.SessionExtensionWindow.HasValue)
                {
                  num2 = 9;
                  num1 = num2;
                  continue;
                }
                goto case 1;
              case 7:
                goto label_20;
              case 8:
                if (!config.StopBehavior.StopTimeout.HasValue)
                {
                  num2 = 2;
                  num1 = num2;
                  continue;
                }
                goto label_22;
              case 9:
                config.StopBehavior.SessionExtensionWindow = behaviorDefaults.SessionExtensionWindow;
                num2 = 1;
                num1 = num2;
                continue;
              case 10:
                config.StopBehavior.DefaultsToSynchronousStop = behaviorDefaults.DefaultsToSynchronousStop;
                num2 = 0;
                num1 = num2;
                continue;
              case 11:
                if (!config.StopBehavior.DefaultsToSynchronousStop.HasValue)
                {
                  num2 = 10;
                  num1 = num2;
                  continue;
                }
                goto case 0;
              default:
                goto label_2;
            }
          }
label_20:
          break;
label_22:
          break;
      }
    }

    internal static string a(string A_0, int A_1)
    {
      char[] charArray = A_0.ToCharArray();
      int num1 = 1403444577 + A_1 + 82;
      int num2 = 0;
      if (num2 < 1)
        goto label_2;
label_1:
      int index1 = num2;
      char[] chArray = charArray;
      int index2 = index1;
      int num3 = (int) (short) charArray[index1];
      int num4 = num3 & (int) byte.MaxValue;
      int num5 = num1;
      int num6 = num5 + 1;
      byte num7 = (byte) (num4 ^ num5);
      int num8 = num3 >> 8;
      int num9 = num6;
      num1 = num9 + 1;
      int num10 = (int) (byte) (num8 ^ num9);
      int num11 = (int) (ushort) ((uint) num7 << 8 | (uint) (byte) num10);
      chArray[index2] = (char) num11;
      ++num2;
label_2:
      if (num2 >= charArray.Length)
        return string.Intern(new string(charArray));
      goto label_1;
    }
  }
}
