// Decompiled with JetBrains decompiler
// Type: Ⴈ.ႷႥ
// Assembly: o4tdggb3, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FA0844EB-EF82-404C-B76C-C092ABDB9392
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.bzqq-b74e3dc76fae79b75c26f27ecb85aae1eae4082a42bfa080f7805f32dedc9d67.exe

using SmartAssembly.SmartExceptionsCore;
using System;
using System.Net;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

namespace Ⴈ
{
  [WebServiceBinding(Name = "ReportingServiceSoap", Namespace = "http://www.smartassembly.com/webservices/Reporting/")]
  internal sealed class ႷႥ : SoapHttpClientProtocol
  {
    public ႷႥ(string Ⴅ)
    {
      try
      {
        SmartAssembly.SmartExceptionsCore.Win32.ႣႳ((WebClientProtocol) this, ႷႭ.ႰႨ(Ⴅ, ႳႷ.Ⴗ(2059790965, 8), 106, 88), 789, 819);
        this.Timeout = 180000;
      }
      catch (Exception ex)
      {
        string o2 = Ⴅ;
        StackFrameHelper.CreateException2(ex, (object) this, (object) o2);
        throw;
      }
    }

    [SoapDocumentMethod("http://www.smartassembly.com/webservices/Reporting/UploadReport2")]
    public string Ⴀ(string Ⴃ, [XmlElement(DataType = "base64Binary")] byte[] Ⴍ, string Ⴀ, string Ⴓ, string Ⴈ)
    {
      object[] objArray;
      try
      {
        string methodName = ႳႷ.Ⴗ(2059790862, 0);
        objArray = new object[5]
        {
          (object) Ⴃ,
          (object) Ⴍ,
          (object) Ⴀ,
          (object) Ⴓ,
          (object) Ⴈ
        };
        object[] parameters = objArray;
        return (string) this.Invoke(methodName, parameters)[0];
      }
      catch (Exception ex)
      {
        object[] o1 = objArray;
        int num;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num;
        string o4 = Ⴃ;
        byte[] o5 = Ⴍ;
        string o6 = Ⴀ;
        string o7 = Ⴓ;
        string o8 = Ⴈ;
        StackFrameHelper.CreateException8(ex, (object) o1, (object) o2, (object) this, (object) o4, (object) o5, (object) o6, (object) o7, (object) o8);
        throw;
      }
    }

    protected override WebRequest GetWebRequest(Uri Ⴐ)
    {
      int num;
      WebRequest webRequest;
      try
      {
label_3:
        webRequest = base.GetWebRequest(Ⴐ);
        num = !(webRequest is HttpWebRequest httpWebRequest) ? 3 : 4;
        while (true)
        {
          switch (num)
          {
            case 0:
            case 1:
            case 5:
              goto label_3;
            case 2:
            case 4:
              goto label_4;
            case 3:
              goto label_5;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႥ.GetWebRequest);
              num = 5;
              continue;
          }
        }
label_4:
        ႷႭ.ႰႷ(httpWebRequest, 511, 392).Expect100Continue = false;
label_5:
        return webRequest;
      }
      catch (Exception ex)
      {
        WebRequest o1 = webRequest;
        HttpWebRequest o2 = httpWebRequest;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) num;
        Uri o5 = Ⴐ;
        StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) this, (object) o5);
        throw;
      }
    }

    static ႷႥ()
    {
      try
      {
        SmartAssembly.SmartUsageCore.DoNotPruneAttribute.ႰႣ();
      }
      catch (Exception ex)
      {
        StackFrameHelper.CreateException0(ex);
        throw;
      }
    }

    internal static int Ⴐ([In] ref DateTime obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 126:
            num2 = 4;
            break;
          default:
            num2 = 6;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 4:
              goto label_8;
            case 2:
            case 6:
              num1 = 7;
              continue;
            case 3:
            case 7:
              goto label_3;
            case 5:
              num1 = 7;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႥ.Ⴐ);
              num1 = 7;
              continue;
          }
        }
label_8:
        return obj0.Minute;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<DateTime> o2 = (ValueType) obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static Type Ⴃ([In] FieldInfo obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 110:
            num2 = 6;
            break;
          default:
            num2 = 4;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
              num1 = 3;
              continue;
            case 2:
            case 5:
            case 6:
            case 7:
              goto label_8;
            case 3:
              goto label_3;
            case 4:
              num1 = 3;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႥ.Ⴃ);
              num1 = 3;
              continue;
          }
        }
label_8:
        return obj0.FieldType;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        FieldInfo o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    [StructLayout(LayoutKind.Auto)]
    internal struct Ⴍ
    {
      internal ushort Ⴀ;
    }
  }
}
