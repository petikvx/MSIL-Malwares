// Decompiled with JetBrains decompiler
// Type: Org.BouncyCastle.Security.DigestUtilities
// Assembly: Poullight, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A9555FC6-4E86-4D22-9A29-AD3955B2BC52
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\Trojan-PSW.MSIL.Poul.gen-67cfa95ccaa06c437e04f38c3ef890986c1885c61636b84bf51d16b0d7bf957c.exe

using Org.BouncyCastle.Crypto;
using Org.BouncyCastle.Crypto.Digests;
using Org.BouncyCastle.Utilities;
using System;
using System.Collections;

namespace Org.BouncyCastle.Security
{
  public sealed class DigestUtilities
  {
    private static readonly IDictionary algorithms = Platform.CreateHashtable();

    static DigestUtilities() => DigestUtilities.algorithms[(object) "SHA256"] = (object) "SHA-256";

    private DigestUtilities()
    {
    }

    public static IDigest GetDigest(string algorithm)
    {
      string upperInvariant = Platform.ToUpperInvariant(algorithm);
      string s = (string) DigestUtilities.algorithms[(object) upperInvariant] ?? upperInvariant;
      try
      {
        if ((DigestUtilities.DigestAlgorithm) Enums.GetEnumValue(typeof (DigestUtilities.DigestAlgorithm), s) == DigestUtilities.DigestAlgorithm.SHA_256)
          return (IDigest) new Sha256Digest();
      }
      catch (ArgumentException ex)
      {
      }
      throw new CryptoException("Digest " + s + " not recognised.");
    }

    private enum DigestAlgorithm
    {
      SHA_256,
    }
  }
}
