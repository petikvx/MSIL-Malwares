// Decompiled with JetBrains decompiler
// Type: wG.rGK
// Assembly: Type, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 716CE3A9-BAD1-470D-912F-B421D403F66E
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-ee62dc596e4b4fe76f8e015ac250d696a483f656ebb02d02815520b3fd560e30.exe

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace wG
{
  public class rGK : pGN
  {
    private static rGK rN7;

    public void QCS(mI _param1)
    {
      foreach (MW mw1 in (IEnumerable<MW>) _param1.Kek())
      {
label_7:
        MW mw2 = mw1;
        int num1 = 0;
        if (!rGK.kNR())
          goto label_8;
label_2:
        bool flag1;
        while (true)
        {
          switch (num1)
          {
            case 1:
              goto label_4;
            case 2:
              goto label_7;
            case 3:
              if (!flag1)
              {
                if (mw2 is yO)
                {
                  int num2;
                  num1 = rGK.UNe() == null ? 1 : num2;
                  continue;
                }
                goto label_66;
              }
              else
                goto label_92;
            default:
              using (IEnumerator<Jo> enumerator = mw2.HCb().GetEnumerator())
              {
                while (true)
                {
                  int num3;
                  while (enumerator.MoveNext())
                  {
                    Jo current = enumerator.Current;
                    if (rGK.kNF((object) current) != null)
                    {
                      if (current.BC0().XCX() != null)
                        RG2.u91(current.f19(), "Local variables with array extensions cannot have assignment expressions.");
                      this.xRm(current.wyB(), mw2);
                      this.QR4(current.f19(), current.BC0().if6(), current.wyB().gmG());
                      num3 = 0;
                      if (rGK.kNR())
                        goto label_54;
                      else
                        goto label_53;
                    }
                  }
                  goto label_60;
label_53:
                  int num4;
                  num3 = num4;
label_54:
                  switch (num3)
                  {
                    case 1:
                      goto label_9;
                    default:
                      continue;
                  }
label_60:
                  if (rGK.UNe() == null)
                  {
                    num3 = 1;
                    goto label_54;
                  }
                  else
                    goto label_53;
                }
              }
label_9:
              if (!(mw2 is PK))
              {
                flag1 = mw2 is Ph;
                num1 = 3;
                continue;
              }
              goto label_69;
          }
        }
label_4:
        foreach (B8 b8 in (IEnumerable<B8>) (mw2 as yO).BfJ())
        {
          int num5 = 0;
          if (rGK.UNe() != null)
            goto label_74;
label_72:
          switch (num5)
          {
            default:
              if (b8.Uyo() != null)
              {
                using (IEnumerator<zq> enumerator = b8.Uyo().GetEnumerator())
                {
label_80:
                  while (enumerator.MoveNext())
                  {
                    zq current = enumerator.Current;
                    bool flag2 = current is RG4;
                    int num6 = 1;
                    if (!rGK.kNR())
                      goto label_82;
label_78:
                    RG4 rg4;
                    while (true)
                    {
                      switch (num6)
                      {
                        case 1:
                          if (flag2)
                          {
                            rg4 = current as RG4;
                            this.xRm(rg4.J94(), mw2);
                            int num7;
                            num6 = rGK.UNe() == null ? 0 : num7;
                            continue;
                          }
                          goto label_80;
                        default:
                          goto label_83;
                      }
                    }
label_83:
                    this.QR4(rGK.SNA((object) rg4), ((sC) rGK.mNc((object) rg4.P9j())).if6(), rg4.J94().gmG());
                    continue;
label_82:
                    num6 = 1;
                    goto label_78;
                  }
                  continue;
                }
              }
              else
                continue;
          }
label_74:
          int num8;
          num5 = num8;
          goto label_72;
        }
label_66:
        continue;
label_69:
        using (Dictionary<string, G6>.ValueCollection.Enumerator enumerator = ((PK) mw2).ACA().Values.GetEnumerator())
        {
          while (enumerator.MoveNext())
          {
            G6 current = enumerator.Current;
            if (current.xyj() == null)
              goto label_26;
            else
              goto label_27;
label_11:
            int num9;
            int num10 = num9;
label_12:
            Uv uv;
            bool flag3;
            while (true)
            {
              int num11;
              switch (num10)
              {
                case 1:
                  num11 = 0;
                  break;
                case 2:
                  goto label_16;
                case 3:
                  this.xRm(uv.wFR(), mw2);
                  if (uv.wFR().gmG() <= tn.Bool)
                  {
                    num11 = uv.wFR().gmG() != tn.CallExpression ? 1 : 0;
                    break;
                  }
                  num10 = rGK.UNe() == null ? 1 : 1;
                  continue;
                default:
                  goto label_13;
              }
              flag3 = num11 != 0;
              num10 = 2;
            }
label_13:
            this.xRm((gz) rGK.gNh((object) current), mw2);
            if (current.xyj().gmG() != tn.Bool)
              RG2.u91(current.xyj().f19(), "The conditional isn't of boolean type!");
            goto label_26;
label_16:
            if (flag3)
              RG2.u91(uv.f19(), "Unsuitable type for array-extension: " + uv.wFR().gmG().ToString());
label_23:
            continue;
label_26:
            if (current.qyA().XCX() != null && current.qyA().XCX() is Uv)
            {
              uv = current.qyA().XCX() as Uv;
              num10 = 3;
              if (rGK.UNe() == null)
                goto label_12;
              else
                goto label_11;
            }
            else
              goto label_23;
label_27:
            if (rGK.UNe() == null)
            {
              num10 = 0;
              goto label_12;
            }
            else
              goto label_11;
          }
          goto label_66;
        }
label_92:
        using (IEnumerator<Hl> enumerator1 = (mw2 as Ph).NfN().GetEnumerator())
        {
          while (enumerator1.MoveNext())
          {
            Hl current1 = enumerator1.Current;
            int num12 = 0;
            if (!rGK.kNR())
              goto label_35;
label_32:
            switch (num12)
            {
              default:
                if (current1.tyn() != null)
                {
                  using (IEnumerator<zq> enumerator2 = current1.tyn().GetEnumerator())
                  {
                    while (enumerator2.MoveNext())
                    {
                      zq current2 = enumerator2.Current;
                      if (current2 is RG4)
                      {
                        RG4 rg4 = current2 as RG4;
                        int num13 = 0;
                        if (rGK.UNe() == null)
                          goto label_43;
label_39:
                        switch (num13)
                        {
                          default:
                            this.xRm(rg4.J94(), mw2);
                            this.QR4(rg4.f19(), rGK.ANI((object) rg4.P9j().BC0()), rg4.J94().gmG());
                            continue;
                        }
label_43:
                        num13 = 0;
                        goto label_39;
                      }
                    }
                    continue;
                  }
                }
                else
                  continue;
            }
label_35:
            num12 = 0;
            goto label_32;
          }
          goto label_66;
        }
label_8:
        num1 = 0;
        goto label_2;
      }
    }

    private void xRm(gz _param1, MW _param2) => this.dRj(_param1.Kmk(), _param2);

    private void dRj(bGB _param1, MW _param2)
    {
      foreach (tc tc in (IEnumerable<tc>) _param1.PmR())
      {
        if (!(tc is hGH))
          goto label_14;
        else
          goto label_19;
label_3:
        UGT ugt1;
        bGB bGb;
        int num1;
        while (true)
        {
          bool flag;
          switch (num1)
          {
            case 1:
              goto label_13;
            case 2:
              goto label_17;
            case 3:
              goto label_15;
            case 4:
              goto label_4;
            case 5:
              ugt1 = tc as UGT;
              if (rGK.UNe() == null)
              {
                num1 = 8;
                continue;
              }
              break;
            case 6:
              this.mRR(_param1, bGb.Tmm(), _param2);
              if (rGK.hNU((object) bGb) == gGG.Comparisson)
              {
                rGK.KN2((object) _param1, tn.Bool);
                num1 = rGK.kNR() ? 4 : 4;
                continue;
              }
              goto label_4;
            case 7:
              if (flag && (ugt1.lmu() as G6).qyA() is pS)
                RG2.u91(ugt1.f19(), "Cannot have function types in expressions!");
              this.mRR(_param1, ugt1.pmP(), _param2);
              if (rGK.kNR())
              {
                num1 = 2;
                continue;
              }
              break;
            case 8:
              flag = ugt1.lmu() is G6;
              num1 = !rGK.kNR() ? 6 : 7;
              continue;
            default:
              goto label_11;
          }
          int num2;
          num1 = num2;
        }
label_4:
        goto label_5;
label_15:
        this.mRR(_param1, tn.Int, _param2);
        goto label_5;
label_17:
        IEnumerator<OZ> enumerator = ugt1.WmI().GetEnumerator();
        try
        {
label_37:
          while (enumerator.MoveNext())
          {
            OZ current = enumerator.Current;
            bool flag1 = current is G6;
            int num3 = 0;
            if (rGK.UNe() != null)
              goto label_34;
label_32:
            bool flag2;
            while (true)
            {
              switch (num3)
              {
                case 1:
                  goto label_35;
                case 2:
                  if (flag2)
                  {
                    RG2.u91(ugt1.f19(), "Cannot use array-extended type in expression: '" + ugt1?.ToString() + "'");
                    num3 = rGK.UNe() == null ? 1 : 1;
                    continue;
                  }
                  goto label_35;
                default:
                  if (flag1 && current is G6 g6)
                  {
                    flag2 = ((PJ) rGK.LNQ((object) g6)).XCX() != null;
                    num3 = 2;
                    continue;
                  }
                  goto label_37;
              }
            }
label_35:
            if (g6.AyF())
              goto label_42;
label_36:
            continue;
label_42:
            Xp xp = ugt1.f19();
            UGT ugt2 = ugt1;
            string str = "The variable '" + (ugt2 == null ? (string) null : ugt2.ToString()) + "' has been marked as skipped data and therefore cannot be used in expressions.";
            RG2.u91(xp, str);
            goto label_36;
label_34:
            int num4;
            num3 = num4;
            goto label_32;
          }
        }
        finally
        {
          if (enumerator != null)
            rGK.VNB((object) enumerator);
        }
label_5:
        continue;
label_11:
        this.mRR(_param1, tn.EnumMember, _param2);
        goto label_5;
label_13:
        if (!(tc is bGa))
        {
          if (tc is CGF)
          {
            this.eR9(_param1, tc as CGF);
            goto label_5;
          }
          else if (tc is bGB)
          {
            bGb = tc as bGB;
            this.dRj(bGb, _param2);
            num1 = 6;
            goto label_3;
          }
          else
            goto label_5;
        }
        else
          goto label_11;
label_14:
        if (!(tc is PGA))
        {
          if (!(tc is QGf))
          {
            if (tc is UGT)
            {
              num1 = 5;
              goto label_3;
            }
            else
              goto label_13;
          }
          else
          {
            this.mRR(_param1, tn.CallExpression, _param2);
            goto label_5;
          }
        }
        else
        {
          this.mRR(_param1, tn.Bool, _param2);
          goto label_5;
        }
label_19:
        num1 = 3;
        goto label_3;
      }
    }

    private void eR9(bGB _param1, CGF _param2)
    {
      if (_param1.omN() == gGG.Undetermined)
      {
        _param1.zmg(_param2.Gj1());
      }
      else
      {
        if (_param1.omN() == _param2.Gj1())
          return;
        RG2.u91(rGK.INg((object) _param2), "Mixed operator-precedence groups! '" + _param2?.ToString() + "' doesn't belong in '" + _param1.omN().ToString() + "'");
      }
    }

    private void mRR(bGB _param1, tn _param2, MW _param3)
    {
      int num1 = 1;
label_1:
      int num2 = num1;
      tn tn1;
      tn tn2;
      while (true)
      {
        bool flag;
        int num3;
        switch (num2)
        {
          case 1:
            if (_param1.Tmm() == tn.Bool)
            {
              if (rGK.kNR())
              {
                num2 = 0;
                continue;
              }
              goto label_1;
            }
            else
            {
              num3 = 0;
              break;
            }
          case 2:
            goto label_17;
          case 3:
label_13:
            flag = _param2 == tn.Undetermined;
            num2 = 4;
            continue;
          case 4:
            if (flag)
              RG2.u91(_param1.f19(), "Undetermined type of variable");
            tn2 = _param1.Tmm();
            tn1 = _param2;
            if (rGK.kNR())
            {
              num2 = 2;
              continue;
            }
            goto label_1;
          default:
            num3 = _param2 > tn.Bool ? 1 : 0;
            break;
        }
        if (num3 == 0)
        {
          if (_param2 == tn.Bool && _param1.Tmm() > tn.Bool)
          {
            RG2.u91(_param1.f19(), "Cannot mix boolean and " + _param1.Tmm().ToString() + " types");
            goto label_13;
          }
          else
            goto label_13;
        }
        else
        {
          RG2.u91(_param1.f19(), "Cannot mix boolean and " + _param2.ToString() + " types");
          if (rGK.kNR())
            num2 = 3;
          else
            goto label_1;
        }
      }
label_17:
      _param1.jmj(tn2 > tn1 ? tn2 : tn1);
    }

    private void QR4(Xp _param1, tn _param2, tn _param3)
    {
      if (_param2 >= _param3)
        return;
      RG2.u91(_param1, "The type '" + _param3.ToString() + "' could not be stored into the type '" + _param2.ToString() + "'");
    }

    public rGK()
    {
      XTG.fvQjdC();
      // ISSUE: explicit constructor call
      base.\u002Ector();
    }

    internal static object kNF([In] object obj0) => (object) ((Jo) obj0).wyB();

    internal static object gNh([In] object obj0) => (object) ((G6) obj0).xyj();

    internal static tn ANI([In] object obj0) => ((sC) obj0).if6();

    internal static Xp SNA([In] object obj0) => ((RG4) obj0).f19();

    internal static object mNc([In] object obj0) => (object) ((Jo) obj0).BC0();

    internal static bool kNR() => rGK.rN7 == null;

    internal static rGK UNe() => rGK.rN7;

    internal static object LNQ([In] object obj0) => (object) ((G6) obj0).qyA();

    internal static void VNB([In] object obj0) => ((IDisposable) obj0).Dispose();

    internal static gGG hNU([In] object obj0) => ((bGB) obj0).omN();

    internal static void KN2([In] object obj0, tn _param1) => ((bGB) obj0).jmj(_param1);

    internal static Xp INg([In] object obj0) => ((CGF) obj0).f19();
  }
}
