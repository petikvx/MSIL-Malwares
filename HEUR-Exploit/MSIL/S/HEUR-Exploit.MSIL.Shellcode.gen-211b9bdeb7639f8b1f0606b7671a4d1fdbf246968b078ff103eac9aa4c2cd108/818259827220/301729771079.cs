// Decompiled with JetBrains decompiler
// Type: 818259827220.301729771079
// Assembly: 190180155270, Version=7.6.1.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
// MVID: 20B0A582-54C5-4C64-BCB9-2AC73608F590
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-211b9bdeb7639f8b1f0606b7671a4d1fdbf246968b078ff103eac9aa4c2cd108.exe

using \u003117125756750;
using \u003882244590153;
using Microsoft.ProgramSynthesis.Utils;
using System;
using System.Collections.Generic;
using System.Linq;

namespace \u003818259827220
{
  internal class \u003301729771079 : \u003808518397050
  {
    internal \u003301729771079()
      : base(CollectionUtils.Append<int>(Enumerable.Range(0, 9).Concat<int>(Enumerable.Range(14, 18)), 11).Concat<int>(Enumerable.Range((int) sbyte.MaxValue, 33)).Select<int, byte>(new Func<int, byte>(Convert.ToByte)))
    {
    }

    public virtual int \u003165311042416 => 30;

    public virtual void \u003004871725488(byte[] _param1_1)
    {
      HashSet<byte> hashSet = CollectionUtils.ConvertToHashSet<byte>(((IEnumerable<byte>) _param1_1).Where<byte>((Func<byte, bool>) (_param1_2 => this.\u003261309382055.Contains(_param1_2))));
      if (hashSet.Count == 0)
      {
        this.\u003927031755155 = 1f;
        this.\u003636150011327 = \u003212044566473.Iso88591;
      }
      else
      {
        if (!hashSet.All<byte>((Func<byte, bool>) (_param1_3 => _param1_3 >= (byte) 127 && _param1_3 < (byte) 160)))
          return;
        this.\u003927031755155 = 1f;
        this.\u003636150011327 = \u003212044566473.Windows1252;
      }
    }
  }
}
