// Decompiled with JetBrains decompiler
// Type: s709919977867792.s936696832966474
// Assembly: s968508024776124, Version=2.0.47.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: E3596912-35E7-405B-A05A-F5F12AB5E292
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan.MSIL.PowerShell.gen-b1729c7ae8423cc844b16aa10ca8ddd2b2331adbfb6646d80d73381fbc73a109.exe

using s077414222832753;
using s651029396580935;
using s736322905406258;
using s928707304529159;
using System.Text;

namespace s709919977867792
{
  public abstract class s936696832966474
  {
    public abstract s457867646003930 s578756348595744(
      s457867646003930 s617493125265954);

    public abstract s275977756270514 s275938953343520(
      s457867646003930 s671380754792777);

    public virtual int s516382526075034(s457867646003930 s081903360007844) => 0;

    public abstract string s421928177288618(
      s275977756270514 s267041226972261,
      bool s602619001545854);

    public abstract int s746014364480903 { get; }

    public abstract int s868310773649162 { get; }

    public virtual bool s932149717672746 { get; set; }

    public int s619825268579833(s457867646003930 s392504552994821)
    {
      int num = 0;
      while (s392504552994821 != s457867646003930.Invalid)
      {
        s392504552994821 = this.s578756348595744(s392504552994821);
        ++num;
      }
      return num;
    }

    public string s396812495518148(
      s124232551204041 s207273821310551,
      StringBuilder s791734578227725 = null)
    {
      if (s791734578227725 == null)
        s791734578227725 = new StringBuilder();
      s791734578227725.Append("<StackSourceSample");
      s791734578227725.Append(" Metric=\"").Append(s207273821310551.s084801687846570.ToString("f1")).Append('"');
      s791734578227725.Append(" TimeRelativeMSec=\"").Append(s207273821310551.s413641156979027.ToString("n3")).Append('"');
      s791734578227725.Append(" SampleIndex=\"").Append(s207273821310551.s506976182609173.ToString()).Append('"');
      s791734578227725.Append(">").AppendLine();
      s791734578227725.AppendLine(this.s506572307941034(s207273821310551.s953068594617511));
      s791734578227725.Append("</StackSourceSample>");
      return s791734578227725.ToString();
    }

    public string s506572307941034(s457867646003930 s742693225059038)
    {
      StringBuilder stringBuilder = new StringBuilder();
      stringBuilder.Append(" <CallStack Index =\"").Append((int) s742693225059038).Append("\">").AppendLine();
      int num = 0;
      while (s742693225059038 != s457867646003930.Invalid)
      {
        if (num >= 300)
        {
          stringBuilder.AppendLine("  <Truncated/>");
          break;
        }
        stringBuilder.Append(this.s664288239009062(this.s275938953343520(s742693225059038), s742693225059038)).AppendLine();
        s742693225059038 = this.s578756348595744(s742693225059038);
        ++num;
      }
      stringBuilder.Append(" </CallStack>");
      return stringBuilder.ToString();
    }

    private string s664288239009062(
      s275977756270514 s515457388436317,
      s457867646003930 s150364598364979 = s457867646003930.Invalid)
    {
      StringBuilder stringBuilder1 = new StringBuilder();
      stringBuilder1.Append("  <Frame");
      int num;
      if (s150364598364979 != s457867646003930.Invalid)
      {
        StringBuilder stringBuilder2 = stringBuilder1.Append(" StackID=\"");
        num = (int) s150364598364979;
        string str = num.ToString();
        stringBuilder2.Append(str).Append("\"");
      }
      StringBuilder stringBuilder3 = stringBuilder1.Append(" FrameID=\"");
      num = (int) s515457388436317;
      string str1 = num.ToString();
      stringBuilder3.Append(str1).Append("\"");
      stringBuilder1.Append(" Name = \"").Append(s471684335504367.s194952918595166((object) this.s421928177288618(s515457388436317, false))).Append("\"");
      stringBuilder1.Append("/>");
      return stringBuilder1.ToString();
    }
  }
}
