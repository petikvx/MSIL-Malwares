// Decompiled with JetBrains decompiler
// Type: 582573968022.Core.157953560169
// Assembly: 582573968022, Version=15.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: 22949299-4A50-46F6-851E-C2A296093D37
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-35a63266858befa3a9a9f8f0684d53a6905ab1fbfd8df949e6989c20107cc290.exe

using \u003081605011334;
using \u003293289069607;
using \u003582573968022.Models;
using \u003582573968022.Utils;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

namespace \u003582573968022.Core
{
  public static class \u003157953560169
  {
    private static \u003403192968317 \u003630010080568(string _param0)
    {
      FileInfo[] files = new DirectoryInfo(_param0).GetFiles("*.jpg");
      if (!((IEnumerable<FileInfo>) files).Any<FileInfo>())
        return (\u003403192968317) null;
      FileInfo fileInfo;
      if (\u003265934628062.\u003337966995524)
      {
        Random random = new Random();
        fileInfo = files[random.Next(0, files.Length - 1)];
      }
      else
      {
        fileInfo = ((IEnumerable<FileInfo>) files).OrderByDescending<FileInfo, DateTime>((Func<FileInfo, DateTime>) (_param1 => _param1.LastWriteTime)).FirstOrDefault<FileInfo>();
        if (fileInfo == null)
          return (\u003403192968317) null;
      }
      string fullName = fileInfo.FullName;
      string path = fullName + ".xml";
      string str = "";
      if (!File.Exists(path))
        path = Path.Combine(Path.GetDirectoryName(fullName), ((IEnumerable<string>) Path.GetFileName(fullName).Split('_')).First<string>() + ".xml");
      if (File.Exists(path))
      {
        try
        {
          str = ((\u003818965873212) path.\u003037121462416<\u003945977159908>()).get_image().\u003897737595640;
        }
        catch
        {
        }
      }
      \u003403192968317 obj = new \u003403192968317();
      ((\u003677781699288) obj).set_ImageFileName(fullName);
      obj.\u003386565448383 = str;
      obj.\u003585119555318 = "";
      return obj;
    }

    public static IList<\u003450477549716> \u003841077402867()
    {
      List<\u003450477549716> objList1 = new List<\u003450477549716>();
      string path = Path.Combine(\u003685140021025.\u003153468620506(), "data", "holidays.csv");
      if (!File.Exists(path))
        return (IList<\u003450477549716>) objList1;
      foreach (string readAllLine in File.ReadAllLines(path))
      {
        if (!string.IsNullOrWhiteSpace(readAllLine))
        {
          string[] strArray1 = readAllLine.Split(new char[1]
          {
            ','
          }, StringSplitOptions.RemoveEmptyEntries);
          if (strArray1.Length >= 2)
          {
            string str1 = strArray1[0].Replace("\"", string.Empty).Trim();
            string str2 = strArray1[1].Replace("\"", string.Empty).Trim();
            string[] strArray2 = str1.Split('/');
            if (strArray2.Length == 3)
            {
              List<\u003450477549716> objList2 = objList1;
              \u003450477549716 obj = new \u003450477549716();
              obj.\u003692991079357 = str2;
              obj.\u003710402860072 = int.Parse(strArray2[0]);
              obj.\u003212108760802 = int.Parse(strArray2[1]);
              ((\u003468277456154) obj).set_Day(int.Parse(strArray2[2]));
              objList2.Add(obj);
            }
          }
        }
      }
      return (IList<\u003450477549716>) objList1;
    }
  }
}
