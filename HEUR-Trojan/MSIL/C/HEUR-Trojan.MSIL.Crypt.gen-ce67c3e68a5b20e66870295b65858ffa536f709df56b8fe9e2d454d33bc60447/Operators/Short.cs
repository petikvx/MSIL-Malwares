// Decompiled with JetBrains decompiler
// Type: GenericMath.Operators.Short
// Assembly: NDp6, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 1E52A124-4038-410B-8375-93D4A037FA1F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan.MSIL.Crypt.gen-ce67c3e68a5b20e66870295b65858ffa536f709df56b8fe9e2d454d33bc60447.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;

namespace GenericMath.Operators
{
  [StandardModule]
  [HideModuleName]
  internal sealed class Short
  {
    internal static void Initialize()
    {
      Func<short, short> func1;
      // ISSUE: reference to a compiler-generated field
      if (Short._Closure\u0024__.\u0024I0\u002D0 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func1 = Short._Closure\u0024__.\u0024I0\u002D0;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Short._Closure\u0024__.\u0024I0\u002D0 = func1 = (Func<short, short>) (V => V);
      }
      Arithmetic<short>.UnaryPlus = func1;
      Func<short, short> func2;
      // ISSUE: reference to a compiler-generated field
      if (Short._Closure\u0024__.\u0024I0\u002D1 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func2 = Short._Closure\u0024__.\u0024I0\u002D1;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Short._Closure\u0024__.\u0024I0\u002D1 = func2 = (Func<short, short>) (V => -V);
      }
      Arithmetic<short>.UnaryMinus = func2;
      Func<short, short, short> func3;
      // ISSUE: reference to a compiler-generated field
      if (Short._Closure\u0024__.\u0024I0\u002D2 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func3 = Short._Closure\u0024__.\u0024I0\u002D2;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Short._Closure\u0024__.\u0024I0\u002D2 = func3 = (Func<short, short, short>) ((L, R) => {checked {(short) unchecked ((int) L + (int) R);}});
      }
      Arithmetic<short>.Add = func3;
      Func<short, short, short> func4;
      // ISSUE: reference to a compiler-generated field
      if (Short._Closure\u0024__.\u0024I0\u002D3 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func4 = Short._Closure\u0024__.\u0024I0\u002D3;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Short._Closure\u0024__.\u0024I0\u002D3 = func4 = (Func<short, short, short>) ((L, R) => {checked {(short) unchecked ((int) L - (int) R);}});
      }
      Arithmetic<short>.Subtract = func4;
      Func<short, short, short> func5;
      // ISSUE: reference to a compiler-generated field
      if (Short._Closure\u0024__.\u0024I0\u002D4 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func5 = Short._Closure\u0024__.\u0024I0\u002D4;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Short._Closure\u0024__.\u0024I0\u002D4 = func5 = (Func<short, short, short>) ((L, R) => {checked {(short) unchecked ((int) L * (int) R);}});
      }
      Arithmetic<short>.Multiply = func5;
      Func<short, short, short> func6;
      // ISSUE: reference to a compiler-generated field
      if (Short._Closure\u0024__.\u0024I0\u002D5 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func6 = Short._Closure\u0024__.\u0024I0\u002D5;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Short._Closure\u0024__.\u0024I0\u002D5 = func6 = (Func<short, short, short>) ((L, R) => {checked {(short) unchecked ((int) L / (int) R);}});
      }
      Arithmetic<short>.Divide = func6;
      Func<short, short, short> func7;
      // ISSUE: reference to a compiler-generated field
      if (Short._Closure\u0024__.\u0024I0\u002D6 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func7 = Short._Closure\u0024__.\u0024I0\u002D6;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Short._Closure\u0024__.\u0024I0\u002D6 = func7 = (Func<short, short, short>) ((L, R) => {checked {(short) Math.Round(Math.Pow(unchecked ((double) L), unchecked ((double) R)));}});
      }
      Arithmetic<short>.Power = func7;
      Func<short, short, short> func8;
      // ISSUE: reference to a compiler-generated field
      if (Short._Closure\u0024__.\u0024I0\u002D7 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func8 = Short._Closure\u0024__.\u0024I0\u002D7;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Short._Closure\u0024__.\u0024I0\u002D7 = func8 = (Func<short, short, short>) ((L, R) => {checked {(short) unchecked ((int) L / (int) R);}});
      }
      Arithmetic<short>.IntegerDivide = func8;
      Func<short, short, short> func9;
      // ISSUE: reference to a compiler-generated field
      if (Short._Closure\u0024__.\u0024I0\u002D8 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func9 = Short._Closure\u0024__.\u0024I0\u002D8;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Short._Closure\u0024__.\u0024I0\u002D8 = func9 = (Func<short, short, short>) ((L, R) => {checked {(short) unchecked ((int) L % (int) R);}});
      }
      Arithmetic<short>.Modulus = func9;
      Func<short, short, bool> func10;
      // ISSUE: reference to a compiler-generated field
      if (Short._Closure\u0024__.\u0024I0\u002D9 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func10 = Short._Closure\u0024__.\u0024I0\u002D9;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Short._Closure\u0024__.\u0024I0\u002D9 = func10 = (Func<short, short, bool>) ((L, R) => (int) L == (int) R);
      }
      Arithmetic<short>.Equal = func10;
      Func<short, short, bool> func11;
      // ISSUE: reference to a compiler-generated field
      if (Short._Closure\u0024__.\u0024I0\u002D10 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func11 = Short._Closure\u0024__.\u0024I0\u002D10;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Short._Closure\u0024__.\u0024I0\u002D10 = func11 = (Func<short, short, bool>) ((L, R) => (int) L != (int) R);
      }
      Arithmetic<short>.NotEqual = func11;
      Func<short, short, bool> func12;
      // ISSUE: reference to a compiler-generated field
      if (Short._Closure\u0024__.\u0024I0\u002D11 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func12 = Short._Closure\u0024__.\u0024I0\u002D11;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Short._Closure\u0024__.\u0024I0\u002D11 = func12 = (Func<short, short, bool>) ((L, R) => (int) L < (int) R);
      }
      Arithmetic<short>.LessThan = func12;
      Func<short, short, bool> func13;
      // ISSUE: reference to a compiler-generated field
      if (Short._Closure\u0024__.\u0024I0\u002D12 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func13 = Short._Closure\u0024__.\u0024I0\u002D12;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Short._Closure\u0024__.\u0024I0\u002D12 = func13 = (Func<short, short, bool>) ((L, R) => (int) L <= (int) R);
      }
      Arithmetic<short>.LessThanEqual = func13;
      Func<short, short, bool> func14;
      // ISSUE: reference to a compiler-generated field
      if (Short._Closure\u0024__.\u0024I0\u002D13 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func14 = Short._Closure\u0024__.\u0024I0\u002D13;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Short._Closure\u0024__.\u0024I0\u002D13 = func14 = (Func<short, short, bool>) ((L, R) => (int) L > (int) R);
      }
      Arithmetic<short>.MoreThan = func14;
      Func<short, short, bool> func15;
      // ISSUE: reference to a compiler-generated field
      if (Short._Closure\u0024__.\u0024I0\u002D14 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func15 = Short._Closure\u0024__.\u0024I0\u002D14;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Short._Closure\u0024__.\u0024I0\u002D14 = func15 = (Func<short, short, bool>) ((L, R) => (int) L >= (int) R);
      }
      Arithmetic<short>.MoreThanEqual = func15;
    }
  }
}
