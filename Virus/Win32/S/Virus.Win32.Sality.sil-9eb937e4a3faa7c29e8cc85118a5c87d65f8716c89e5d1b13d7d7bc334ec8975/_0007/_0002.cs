// Decompiled with JetBrains decompiler
// Type: .
// Assembly: a5b7ee8e-cbdf-4eff-9144-efd0c433f3fe, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 97CE9FDF-0921-44CB-AE13-1E9A2A550F0F
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00000-msil\Virus.Win32.Sality.sil-9eb937e4a3faa7c29e8cc85118a5c87d65f8716c89e5d1b13d7d7bc334ec8975.exe

using \u0007;
using \u0008;
using SmartAssembly.SmartExceptionsCore;
using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography;

namespace \u0007
{
  internal sealed class \u0002 : \u0001
  {
    [MethodImpl(MethodImplOptions.NoInlining)]
    public \u0002()
    {
      \u0003.\u0003();
      // ISSUE: explicit constructor call
      base.\u002Ector();
      try
      {
      }
      catch (Exception ex)
      {
        throw UnhandledException.\u0003(ex, (object) this);
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public override object \u0003([In] object[] obj0)
    {
      RijndaelManaged rijndaelManaged1;
      Rfc2898DeriveBytes rfc2898DeriveBytes1;
      ICryptoTransform decryptor;
      try
      {
        rfc2898DeriveBytes1 = new Rfc2898DeriveBytes((string) obj0[1], new byte[8]);
        rijndaelManaged1 = new RijndaelManaged();
        decryptor = rijndaelManaged1.CreateDecryptor(rfc2898DeriveBytes1.GetBytes(32), rfc2898DeriveBytes1.GetBytes(16));
        return (object) decryptor.TransformFinalBlock((byte[]) obj0[0], 0, ((byte[]) obj0[0]).Length);
      }
      catch (Exception ex)
      {
        Rfc2898DeriveBytes rfc2898DeriveBytes2 = rfc2898DeriveBytes1;
        RijndaelManaged rijndaelManaged2 = rijndaelManaged1;
        ICryptoTransform cryptoTransform = decryptor;
        byte[] numArray1;
        byte[] numArray2 = numArray1;
        object[] objArray = obj0;
        throw UnhandledException.\u0003(ex, (object) rfc2898DeriveBytes2, (object) rijndaelManaged2, (object) cryptoTransform, (object) numArray2, (object) this, (object) objArray);
      }
    }
  }
}
