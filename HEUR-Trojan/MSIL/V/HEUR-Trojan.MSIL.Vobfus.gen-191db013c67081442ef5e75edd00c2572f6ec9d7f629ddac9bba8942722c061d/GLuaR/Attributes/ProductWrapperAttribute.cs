// Decompiled with JetBrains decompiler
// Type: GLuaR.Attributes.ProductWrapperAttribute
// Assembly: c, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: CCB3E154-F36D-403E-8019-8861E9AEB8FC
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Vobfus.gen-191db013c67081442ef5e75edd00c2572f6ec9d7f629ddac9bba8942722c061d.exe

using c.Services;
using GLuaR.Importers;
using GLuaR.Properties;
using GLuaR.Watchers;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace GLuaR.Attributes
{
  public class ProductWrapperAttribute : Form
  {
    private IContainer _Getter;
    private Label m_Predicate;
    private ListView _Comparator;
    private TextBox _Property;
    private TextBox _Config;
    private Label state;
    private GroupBox info;
    private Button thread;
    private Button _Identifier;
    private ImageList invocation;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public ProductWrapperAttribute()
    {
      int num1 = 4;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 4:
              goto label_22;
            case 1:
            case 3:
              goto label_1;
            case 2:
              goto label_6;
            case 5:
              goto label_2;
            case 6:
              goto label_17;
            default:
              if (true)
              {
                num2 = 2;
                continue;
              }
              goto label_6;
          }
        }
label_1:
        this._Getter = (IContainer) null;
        num1 = 5;
        continue;
label_2:
        // ISSUE: explicit constructor call
        base.\u002Ector();
label_6:
        this.InsertFactory();
        this.invocation.Images.Add("lua_file", (Image) Resources.lua_file);
        using (IEnumerator<UtilsDefinitionWatcher> enumerator = FacadeThreadService.DisableMapper().GetEnumerator())
        {
label_16:
          while (enumerator.MoveNext())
          {
            UtilsDefinitionWatcher current = enumerator.Current;
            int num3 = 3;
            while (true)
            {
              ListViewItem listViewItem;
              int num4;
              switch (num3)
              {
                case 0:
                case 3:
                  if (current._ConfigField)
                  {
                    listViewItem = new ListViewItem()
                    {
                      Text = current._PropertyField,
                      Tag = (object) current,
                      StateImageIndex = 0,
                      ImageKey = "lua_file",
                      Group = this._Comparator.Groups[0]
                    };
                    goto case 4;
                  }
                  else
                  {
                    num4 = 2;
                    break;
                  }
                case 1:
                case 2:
                case 5:
                  goto label_16;
                case 4:
                  this._Comparator.Items.Add(listViewItem);
                  num4 = 5;
                  break;
                default:
                  if (!ProductWrapperAttribute.InvokeManager())
                  {
                    num3 = 4;
                    continue;
                  }
                  goto case 0;
              }
              num3 = num4;
            }
          }
        }
        this._Comparator.Items[0].Selected = true;
        num1 = 6;
        continue;
label_22:
        ImporterMapper.InitAccount();
        num1 = 3;
      }
label_17:;
    }

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public UtilsDefinitionWatcher WriteFactory() => (UtilsDefinitionWatcher) this._Comparator.SelectedItems[0].Tag;

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public string LogoutFactory() => this._Config.Text;

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void AwakeFactory(object param, EventArgs cont)
    {
      int num1 = 3;
      if (true)
        goto label_3;
label_1:
      bool flag = this._Comparator.SelectedItems.Count > 0;
      goto label_5;
label_2:
      int num2;
      num1 = num2;
label_3:
      switch (num1)
      {
        case 0:
        case 3:
          this.CollectFactory();
          num2 = 2;
          goto label_2;
        case 1:
        case 2:
          goto label_1;
        case 4:
          break;
        case 5:
          return;
        default:
          num2 = 4;
          goto label_2;
      }
label_5:
      if (!flag)
        return;
      this._Config.Text = ((UtilsDefinitionWatcher) this._Comparator.SelectedItems[0].Tag).predicateField;
      num2 = 5;
      goto label_2;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void ListFactory(object var1, EventArgs caller) => this.CollectFactory();

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void CollectFactory()
    {
      int num1 = 6;
      if (ProductWrapperAttribute.SetupManager())
        goto label_6;
label_1:
      this._Config.Text = "";
      int num2 = 1;
label_5:
      num1 = num2;
label_6:
      bool flag;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 6:
            flag = this._Comparator.SelectedItems.Count > 0;
            num1 = 2;
            continue;
          case 1:
            goto label_9;
          case 2:
            goto label_10;
          case 3:
          case 4:
            goto label_1;
          case 5:
            goto label_2;
          case 7:
            goto label_13;
          default:
            goto label_7;
        }
      }
label_2:
      this.thread.Enabled = true;
      return;
label_7:
      num2 = 4;
      goto label_5;
label_9:
      this._Config.Enabled = false;
      this.thread.Enabled = false;
      num2 = 7;
      goto label_5;
label_10:
      if (!flag)
      {
        this._Property.Text = "";
        goto label_1;
      }
      else
      {
        this._Config.Enabled = true;
        this._Property.Text = ((UtilsDefinitionWatcher) this._Comparator.SelectedItems[0].Tag).comparatorField;
        if (this._Config.Text.Length <= 0)
        {
          this.thread.Enabled = false;
          return;
        }
        num2 = 5;
        goto label_5;
      }
label_13:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void InsertFactory()
    {
      int num1 = 1;
      while (true)
      {
        int num2;
        ListViewGroup listViewGroup1;
        ListViewGroup listViewGroup2;
        switch (num1)
        {
          case 0:
            this._Config.Location = new Point(69, 268);
            this._Config.Name = "txtFileName";
            this._Config.Size = new Size(450, 20);
            this._Config.TabIndex = 3;
            this._Config.TextChanged += new EventHandler(this.ListFactory);
            if (ProductWrapperAttribute.SetupManager())
            {
              num1 = 17;
              continue;
            }
            goto case 24;
          case 1:
            this._Getter = (IContainer) new Container();
            if (true)
            {
              num1 = 18;
              continue;
            }
            goto label_27;
          case 2:
            this.Controls.Add((Control) this._Identifier);
            this.Controls.Add((Control) this.thread);
            this.Controls.Add((Control) this.info);
            this.Controls.Add((Control) this.state);
            this.Controls.Add((Control) this._Config);
            this.Controls.Add((Control) this._Property);
            this.Controls.Add((Control) this._Comparator);
            this.Controls.Add((Control) this.m_Predicate);
            this.FormBorderStyle = FormBorderStyle.FixedSingle;
            this.MaximizeBox = false;
            this.MinimizeBox = false;
            num1 = 21;
            continue;
          case 3:
            this._Comparator = new ListView();
            if (true)
            {
              num1 = 13;
              continue;
            }
            goto case 23;
          case 4:
            this.m_Predicate.AutoSize = true;
            if (ProductWrapperAttribute.SetupManager())
            {
              num1 = 14;
              continue;
            }
            goto case 0;
          case 5:
            this._Comparator.Groups.AddRange(new ListViewGroup[2]
            {
              listViewGroup2,
              listViewGroup1
            });
            this._Comparator.HideSelection = false;
            if (!ProductWrapperAttribute.InvokeManager())
            {
              num1 = 7;
              continue;
            }
            goto case 9;
          case 6:
            listViewGroup1 = new ListViewGroup("Custom Templates", HorizontalAlignment.Left);
            this.m_Predicate = new Label();
            if (true)
            {
              num1 = 3;
              continue;
            }
            goto case 20;
          case 7:
          case 10:
            this._Comparator.LargeImageList = this.invocation;
            this._Comparator.Location = new Point(12, 29);
            if (true)
            {
              num1 = 16;
              continue;
            }
            goto case 4;
          case 8:
            this.state.Name = "label2";
            this.state.Size = new Size(38, 13);
            this.state.TabIndex = 4;
            this.state.Text = "Name:";
            this.info.Location = new Point(12, 294);
            this.info.Name = "groupBox1";
            num2 = 19;
            break;
          case 9:
            this._Identifier.Size = new Size(75, 23);
            this._Identifier.TabIndex = 7;
            this._Identifier.Text = "Cancel";
            this._Identifier.UseVisualStyleBackColor = true;
            this.AcceptButton = (IButtonControl) this.thread;
            this.AutoScaleDimensions = new SizeF(6f, 13f);
            this.AutoScaleMode = AutoScaleMode.Font;
            this.CancelButton = (IButtonControl) this._Identifier;
            this.ClientSize = new Size(588, 337);
            num1 = 2;
            continue;
          case 11:
          case 16:
            this._Comparator.MultiSelect = false;
            this._Comparator.Name = "listView1";
            this._Comparator.Size = new Size(564, 207);
            this._Comparator.TabIndex = 1;
            this._Comparator.UseCompatibleStateImageBehavior = false;
            this._Comparator.SelectedIndexChanged += new EventHandler(this.AwakeFactory);
            goto case 23;
          case 12:
            this.m_Predicate.Name = "label1";
            this.m_Predicate.Size = new Size(59, 13);
            this.m_Predicate.TabIndex = 0;
            this.m_Predicate.Text = "Templates:";
            listViewGroup2.Header = "Installed Templates";
            listViewGroup2.Name = "Installed Templates";
            listViewGroup1.Header = "Custom Templates";
            num2 = 20;
            break;
          case 13:
            this.invocation = new ImageList(this._Getter);
            this._Property = new TextBox();
            this._Config = new TextBox();
            this.state = new Label();
            this.info = new GroupBox();
            this.thread = new Button();
            this._Identifier = new Button();
            this.SuspendLayout();
            num2 = 4;
            break;
          case 14:
            this.m_Predicate.Location = new Point(13, 13);
            if (true)
            {
              num1 = 12;
              continue;
            }
            goto case 22;
          case 15:
            this.thread.UseVisualStyleBackColor = true;
            this._Identifier.DialogResult = DialogResult.Cancel;
            this._Identifier.Location = new Point(501, 302);
            this._Identifier.Name = "button2";
            num2 = 9;
            break;
          case 17:
            this.state.AutoSize = true;
            this.state.Location = new Point(13, 271);
            if (ProductWrapperAttribute.SetupManager())
            {
              num1 = 8;
              continue;
            }
            goto case 1;
          case 18:
            listViewGroup2 = new ListViewGroup("Installed Templates", HorizontalAlignment.Left);
            num1 = 6;
            continue;
          case 19:
            this.info.Size = new Size(564, 2);
            this.info.TabIndex = 5;
            this.info.TabStop = false;
            this.info.Text = "groupBox1";
            num1 = 22;
            continue;
          case 20:
            listViewGroup1.Name = "Custom Templates";
            num2 = 5;
            break;
          case 21:
            this.Name = "NewFileDialog";
            this.StartPosition = FormStartPosition.CenterParent;
            this.Text = "Add New Item";
            this.ResumeLayout(false);
            this.PerformLayout();
            num1 = 25;
            continue;
          case 22:
            this.thread.DialogResult = DialogResult.OK;
            this.thread.Enabled = false;
            this.thread.Location = new Point(420, 302);
            this.thread.Name = "button1";
            num2 = 24;
            break;
          case 23:
            this.invocation.ColorDepth = ColorDepth.Depth8Bit;
            this.invocation.ImageSize = new Size(32, 32);
            this.invocation.TransparentColor = Color.Magenta;
            this._Property.Location = new Point(12, 242);
            this._Property.Name = "textBox1";
            this._Property.ReadOnly = true;
            this._Property.Size = new Size(564, 20);
            this._Property.TabIndex = 2;
            num1 = 0;
            continue;
          case 24:
            this.thread.Size = new Size(75, 23);
            this.thread.TabIndex = 6;
            this.thread.Text = "Add";
            if (true)
            {
              num1 = 15;
              continue;
            }
            goto case 11;
          case 25:
            goto label_29;
          default:
            num2 = 23;
            break;
        }
        num1 = num2;
      }
label_29:
      return;
label_27:;
    }

    internal static bool SetupManager() => true;

    internal static bool InvokeManager() => false;
  }
}
