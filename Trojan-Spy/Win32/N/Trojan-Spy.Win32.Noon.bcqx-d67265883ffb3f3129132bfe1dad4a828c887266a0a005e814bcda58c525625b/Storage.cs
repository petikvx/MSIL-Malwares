// Decompiled with JetBrains decompiler
// Type: Alero.Storage
// Assembly: AssemblyCopyrightAttrib, Version=2005.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 6DE54395-8B54-4A88-80DE-363C4128FB08
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan-Spy.Win32.Noon.bcqx-d67265883ffb3f3129132bfe1dad4a828c887266a0a005e814bcda58c525625b.exe

using System.Drawing;
using System.IO;
using System.Windows.Forms;

namespace Alero
{
  internal class Storage
  {
    private StreamReader sr;
    private FileStream fs;
    private StreamWriter sw;

    public void save(TextBox[,] txtar, int[,] save, int var)
    {
      this.fs = new FileStream(Directory.GetCurrentDirectory() + "\\Save.txt", FileMode.Create, FileAccess.Write);
      this.sw = new StreamWriter((Stream) this.fs);
      this.sw.WriteLine(var);
      for (int index1 = 0; index1 < 9; ++index1)
      {
        for (int index2 = 0; index2 < 9; ++index2)
        {
          if (txtar[index1, index2].Text.Equals(""))
            this.sw.WriteLine("0");
          else
            this.sw.WriteLine(txtar[index1, index2].Text ?? "");
          if (txtar[index1, index2].ReadOnly)
            this.sw.WriteLine("1");
          else
            this.sw.WriteLine("0");
        }
      }
      for (int index3 = 0; index3 < 9; ++index3)
      {
        for (int index4 = 0; index4 < 9; ++index4)
          this.sw.WriteLine(save[index3, index4]);
      }
      this.sw.Close();
      this.fs.Close();
    }

    public void load(TextBox[,] txtar, int[,] save, SudokuManager objGrid)
    {
      this.fs = new FileStream(Directory.GetCurrentDirectory() + "\\Save.txt", FileMode.Open, FileAccess.Read);
      this.sr = new StreamReader((Stream) this.fs);
      objGrid.changeGrid(txtar, int.Parse(this.sr.ReadLine()));
      for (int index1 = 0; index1 < 9; ++index1)
      {
        for (int index2 = 0; index2 < 9; ++index2)
        {
          string str = this.sr.ReadLine();
          if (!str.Equals("0"))
          {
            txtar[index1, index2].Text = str;
            if (this.sr.ReadLine().Equals("1"))
            {
              txtar[index1, index2].ForeColor = Color.DarkBlue;
              txtar[index1, index2].ReadOnly = true;
            }
          }
          else
            this.sr.ReadLine();
        }
      }
      for (int index3 = 0; index3 < 9; ++index3)
      {
        for (int index4 = 0; index4 < 9; ++index4)
          save[index3, index4] = int.Parse(this.sr.ReadLine());
      }
      this.sr.Close();
      this.fs.Close();
    }
  }
}
