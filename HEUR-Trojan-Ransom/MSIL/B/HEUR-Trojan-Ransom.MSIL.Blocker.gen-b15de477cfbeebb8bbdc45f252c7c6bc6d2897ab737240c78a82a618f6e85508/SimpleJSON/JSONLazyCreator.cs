// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONLazyCreator
// Assembly: ASMNA, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 756C4858-C1DF-4594-BBF4-94321F458D9F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-b15de477cfbeebb8bbdc45f252c7c6bc6d2897ab737240c78a82a618f6e85508.exe

namespace SimpleJSON
{
  internal class JSONLazyCreator : JSONNode
  {
    private JSONNode m_Node = (JSONNode) null;
    private string m_Key = (string) null;

    public JSONLazyCreator(JSONNode aNode)
    {
label_1:
      int num1 = 503438652;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1357053431)) % 6U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * -933662779 ^ -128219840;
            continue;
          case 2:
            this.m_Node = aNode;
            num1 = (int) num2 * 1405690238 ^ 1814889149;
            continue;
          case 3:
            num1 = (int) num2 * 1086119346 ^ -337161952;
            continue;
          case 4:
            this.m_Key = (string) null;
            num1 = (int) num2 * -1797198875 ^ -1186897427;
            continue;
          case 5:
            goto label_1;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    public JSONLazyCreator(JSONNode aNode, string aKey)
    {
      this.m_Node = aNode;
      this.m_Key = aKey;
    }

    private void Set(JSONNode aVal)
    {
      bool flag = this.m_Key == null;
label_1:
      int num1 = -458236403;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -336373284)) % 10U)
        {
          case 0:
            goto label_3;
          case 1:
            int num3 = flag ? 1885472106 : (num3 = 1771404763);
            num1 = num3 ^ (int) num2 * -248859967;
            continue;
          case 2:
            num1 = (int) num2 * -480843401 ^ -13391345;
            continue;
          case 3:
            num1 = (int) num2 * -446582958 ^ -1750302790;
            continue;
          case 4:
            this.m_Node.Add(aVal);
            num1 = (int) num2 * -2014671158 ^ -38721782;
            continue;
          case 5:
            this.m_Node = (JSONNode) null;
            num1 = -157631256;
            continue;
          case 6:
            num1 = (int) num2 * 222870253 ^ 1165394633;
            continue;
          case 7:
            num1 = (int) num2 * 24023839 ^ 1446214281;
            continue;
          case 8:
            this.m_Node.Add(this.m_Key, aVal);
            num1 = -422401393;
            continue;
          case 9:
            goto label_1;
          default:
            goto label_12;
        }
      }
label_3:
      return;
label_12:;
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
label_1:
        int num1 = 380421820;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 45912685)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * -434497672 ^ 259369780;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = -1457160592;
        JSONArray aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2109506239)) % 5U)
          {
            case 0:
              num1 = (int) num2 * 1146837166 ^ 768896533;
              continue;
            case 1:
              aVal.Add(value);
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1307968093 ^ -1705241877;
              continue;
            case 2:
              aVal = new JSONArray();
              num1 = (int) num2 * -815158542 ^ 192292142;
              continue;
            case 3:
              goto label_3;
            case 4:
              goto label_1;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 415766886;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 760280523)) % 4U)
          {
            case 1:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = (int) num2 * 332612202 ^ -1451747718;
              continue;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * 659826163 ^ 1949434430;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
        JSONClass aVal = new JSONClass();
label_1:
        int num1 = 1860047228;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 482038958)) % 6U)
          {
            case 0:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -209058041 ^ -753724851;
              continue;
            case 1:
              num1 = (int) num2 * -1004132920 ^ -2081340207;
              continue;
            case 2:
              aVal.Add(aKey, value);
              num1 = (int) num2 * 262141390 ^ -1508120610;
              continue;
            case 3:
              goto label_1;
            case 4:
              num1 = (int) num2 * -1603752171 ^ 720509508;
              continue;
            case 5:
              goto label_3;
            default:
              goto label_8;
          }
        }
label_3:
        return;
label_8:;
      }
    }

    public override void Add(JSONNode aItem)
    {
      JSONArray aVal = new JSONArray();
      aVal.Add(aItem);
label_1:
      int num1 = -1506886338;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -698572191)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * -1931427305 ^ -1310604568;
            continue;
          case 2:
            goto label_3;
          case 3:
            num1 = (int) num2 * 752532112 ^ -1129146020;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = 1685618436;
      JSONClass aVal;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1833974408)) % 7U)
        {
          case 0:
            goto label_1;
          case 1:
            aVal = new JSONClass();
            num1 = (int) num2 * -394531638 ^ -1038862974;
            continue;
          case 2:
            num1 = (int) num2 * -831606452 ^ 1428359055;
            continue;
          case 3:
            num1 = (int) num2 * -1422091110 ^ -1602956445;
            continue;
          case 4:
            goto label_3;
          case 5:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * -1323883502 ^ 460537855;
            continue;
          case 6:
            aVal.Add(aKey, aItem);
            num1 = (int) num2 * -644040243 ^ -236642661;
            continue;
          default:
            goto label_9;
        }
      }
label_3:
      return;
label_9:;
    }

    public static bool operator ==(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = 1040959131;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 226650713)) % 6U)
        {
          case 0:
            flag = (object) a == b;
            num1 = 1038432282;
            continue;
          case 1:
            flag = true;
            num1 = (int) num2 * 1185616403 ^ 809554999;
            continue;
          case 2:
            int num3 = b == null ? 813784640 : (num3 = 848582275);
            num1 = num3 ^ (int) num2 * -1194826816;
            continue;
          case 3:
            num1 = (int) num2 * -943482396 ^ -1482654528;
            continue;
          case 4:
            goto label_1;
          default:
            goto label_7;
        }
      }
label_7:
      return flag;
    }

    public static bool operator !=(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = 1592094203;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1863424200)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -129860828 ^ -108503559;
            continue;
          case 3:
            flag = !(a == b);
            num1 = (int) num2 * -909414395 ^ -921635359;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = -1110331016;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -393828581)) % 8U)
        {
          case 0:
            goto label_1;
          case 1:
            flag1 = true;
            num1 = (int) num2 * 454966994 ^ -1983396996;
            continue;
          case 2:
            int num3 = flag2 ? -1131139520 : (num3 = -310622329);
            num1 = num3 ^ (int) num2 * 494440361;
            continue;
          case 3:
            flag2 = obj == null;
            num1 = (int) num2 * -493009340 ^ 37321509;
            continue;
          case 4:
            num1 = (int) num2 * -93208993 ^ 1979992224;
            continue;
          case 5:
            num1 = (int) num2 * 2076289035 ^ -371207741;
            continue;
          case 6:
            flag1 = (object) this == obj;
            num1 = -1374093609;
            continue;
          default:
            goto label_9;
        }
      }
label_9:
      return flag1;
    }

    public override int GetHashCode()
    {
      int hashCode = base.GetHashCode();
label_1:
      int num1 = 145208504;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 585882485)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -1204165756 ^ -653910085;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return hashCode;
    }

    public override string ToString()
    {
label_1:
      int num1 = 1169722876;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1831157286)) % 4U)
        {
          case 1:
            num1 = (int) num2 * 1481775244 ^ 1545528766;
            continue;
          case 2:
            str = "";
            num1 = (int) num2 * 96697350 ^ -657920621;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = -1400605873;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -632940074)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            str = "";
            num1 = (int) num2 * 1771275929 ^ 1608761142;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override int AsInt
    {
      get
      {
label_1:
        int num1 = 970163795;
        JSONData aVal;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 635417583)) % 5U)
          {
            case 1:
              aVal = new JSONData(0);
              num1 = (int) num2 * -1701797062 ^ 1333993144;
              continue;
            case 2:
              asInt = 0;
              num1 = (int) num2 * 873129648 ^ -417694410;
              continue;
            case 3:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1730122148 ^ 827230441;
              continue;
            case 4:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_6:
        return asInt;
      }
      set
      {
label_1:
        int num1 = -1841067253;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2146985324)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -780647836 ^ -1282402238;
              continue;
            case 2:
              goto label_3;
            case 3:
              this.Set((JSONNode) new JSONData(value));
              num1 = (int) num2 * -1648932578 ^ 458112335;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override float AsFloat
    {
      get
      {
        this.Set((JSONNode) new JSONData(0.0f));
label_1:
        int num1 = 816283909;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 854231315)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              asFloat = 0.0f;
              num1 = (int) num2 * 991899213 ^ -320367466;
              continue;
            case 3:
              num1 = (int) num2 * -1894533470 ^ -1137309280;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asFloat;
      }
      set
      {
label_1:
        int num1 = -1417591489;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -833660342)) % 4U)
          {
            case 0:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1353910933 ^ 2073887089;
              continue;
            case 1:
              aVal = new JSONData(value);
              num1 = (int) num2 * 1017555854 ^ 1883886104;
              continue;
            case 2:
              goto label_1;
            case 3:
              goto label_3;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override double AsDouble
    {
      get
      {
        JSONData aVal = new JSONData(0.0);
label_1:
        int num1 = 901093221;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1115723377)) % 6U)
          {
            case 0:
              num1 = (int) num2 * -1583752690 ^ 1337288040;
              continue;
            case 1:
              num1 = (int) num2 * 243562313 ^ 1361465024;
              continue;
            case 3:
              asDouble = 0.0;
              num1 = (int) num2 * -1194850380 ^ -1438035172;
              continue;
            case 4:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -766995241 ^ 923939825;
              continue;
            case 5:
              goto label_1;
            default:
              goto label_7;
          }
        }
label_7:
        return asDouble;
      }
      set
      {
        JSONData aVal = new JSONData(value);
label_1:
        int num1 = 80287166;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1693349551)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1141624098 ^ -12992537;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override bool AsBool
    {
      get
      {
        JSONData aVal = new JSONData(false);
label_1:
        int num1 = 39146393;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 917574603)) % 5U)
          {
            case 0:
              asBool = false;
              num1 = (int) num2 * -688842685 ^ 344540324;
              continue;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1316695275 ^ 422754958;
              continue;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * 1861993656 ^ -1101422949;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asBool;
      }
      set => this.Set((JSONNode) new JSONData(value));
    }

    public override JSONArray AsArray
    {
      get
      {
        JSONArray aVal = new JSONArray();
label_1:
        int num1 = 1228950820;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1400560354)) % 4U)
          {
            case 1:
              asArray = aVal;
              num1 = (int) num2 * 1148215181 ^ -1225098477;
              continue;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1907139335 ^ 1713222353;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return asArray;
      }
    }

    public override JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = 2011776293;
        JSONClass aVal;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2086873966)) % 5U)
          {
            case 0:
              goto label_1;
            case 2:
              asObject = aVal;
              num1 = (int) num2 * -625122762 ^ 137858026;
              continue;
            case 3:
              num1 = (int) num2 * 92997934 ^ -997552833;
              continue;
            case 4:
              aVal = new JSONClass();
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 529331038 ^ 1576652959;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asObject;
      }
    }
  }
}
