// Decompiled with JetBrains decompiler
// Type: 052709057542.Core.733950327037
// Assembly: 052709057542, Version=16.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: 359C9CB9-9F6B-407E-806A-B212EE061A4B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-863aa9d936ae1e503405345248a0f92c12efaa795df31afd30568cac9e6c7a0e.exe

using \u003013112256047;
using \u003052709057542.Models;
using \u003052709057542.Utils;
using \u003161204516273;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

namespace \u003052709057542.Core
{
  public static class \u003733950327037
  {
    private static \u003712686252732 \u003807281605599(string _param0)
    {
      FileInfo[] files = new DirectoryInfo(_param0).GetFiles("*.jpg");
      if (!((IEnumerable<FileInfo>) files).Any<FileInfo>())
        return (\u003712686252732) null;
      FileInfo fileInfo;
      if (\u003547065664920.\u003867992554035)
      {
        Random random = new Random();
        fileInfo = files[random.Next(0, files.Length - 1)];
      }
      else
      {
        fileInfo = ((IEnumerable<FileInfo>) files).OrderByDescending<FileInfo, DateTime>((Func<FileInfo, DateTime>) (_param1 => _param1.LastWriteTime)).FirstOrDefault<FileInfo>();
        if (fileInfo == null)
          return (\u003712686252732) null;
      }
      string fullName = fileInfo.FullName;
      string path = fullName + ".xml";
      string str = "";
      if (!File.Exists(path))
        path = Path.Combine(Path.GetDirectoryName(fullName), ((IEnumerable<string>) Path.GetFileName(fullName).Split('_')).First<string>() + ".xml");
      if (File.Exists(path))
      {
        try
        {
          str = ((\u003275730968380) path.\u003571663118604<\u003610516865796>()).get_image().\u003031921549837;
        }
        catch
        {
        }
      }
      \u003712686252732 obj = new \u003712686252732();
      ((\u003510362770208) obj).set_ImageFileName(fullName);
      obj.\u003915952755420 = str;
      obj.\u003905259884868 = "";
      return obj;
    }

    public static IList<\u003214199593841> \u003316306886567()
    {
      List<\u003214199593841> objList1 = new List<\u003214199593841>();
      string path = Path.Combine(\u003312631255777.\u003144821952739(), "data", "holidays.csv");
      if (!File.Exists(path))
        return (IList<\u003214199593841>) objList1;
      foreach (string readAllLine in File.ReadAllLines(path))
      {
        if (!string.IsNullOrWhiteSpace(readAllLine))
        {
          string[] strArray1 = readAllLine.Split(new char[1]
          {
            ','
          }, StringSplitOptions.RemoveEmptyEntries);
          if (strArray1.Length >= 2)
          {
            string str1 = strArray1[0].Replace("\"", string.Empty).Trim();
            string str2 = strArray1[1].Replace("\"", string.Empty).Trim();
            string[] strArray2 = str1.Split('/');
            if (strArray2.Length == 3)
            {
              List<\u003214199593841> objList2 = objList1;
              \u003214199593841 obj = new \u003214199593841();
              obj.\u003906204596987 = str2;
              obj.\u003060773645793 = int.Parse(strArray2[0]);
              obj.\u003385690379953 = int.Parse(strArray2[1]);
              ((\u003991460207026) obj).set_Day(int.Parse(strArray2[2]));
              objList2.Add(obj);
            }
          }
        }
      }
      return (IList<\u003214199593841>) objList1;
    }
  }
}
