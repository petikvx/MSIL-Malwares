// Decompiled with JetBrains decompiler
// Type: SmartAssembly.SmartExceptionsCore.UploadReportLoginService1
// Assembly: 5, Version=0.0.0.0, Culture=neutral, PublicKeyToken=c1ca78561cb11ead
// MVID: 2D47F565-522D-4F7E-99C5-0FAB4FA0B168
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Backdoor.Win32.Poison.eqbg-1d1c34c3e9b902e7445301b77a51949865f13999db65bb166e4f7800abbf116b.exe

using \u0007;
using \u000F;
using System;
using System.Net;
using System.Web.Services;
using System.Web.Services.Protocols;

namespace SmartAssembly.SmartExceptionsCore
{
  [WebServiceBinding(Name = "LoginServiceSoap", Namespace = "http://www.smartassembly.com/webservices/UploadReportLogin/")]
  internal sealed class UploadReportLoginService1 : SoapHttpClientProtocol
  {
    [NonSerialized]
    internal static \u0002 \u001A;

    public UploadReportLoginService1()
    {
      try
      {
        string str = \u0007.\u0003.\u0001;
        this.Url = \u0007.\u0003.\u0001 + UploadReportLoginService1.\u001A(2072);
        this.Timeout = 30000;
      }
      catch (Exception ex)
      {
        \u0004.\u0001(ex, (object) this);
        throw;
      }
    }

    [SoapDocumentMethod("http://www.smartassembly.com/webservices/UploadReportLogin/GetServerURL")]
    public string GetServerURL(string licenseID)
    {
      object[] objArray1;
      string serverUrl;
      try
      {
        \u0018\u0002 obj = \u0018\u0002.\u0081\u0003;
        string str = UploadReportLoginService1.\u001A(2105);
        objArray1 = new object[1]{ (object) licenseID };
        object[] objArray2 = objArray1;
        serverUrl = (string) obj((object) this, str, objArray2)[0];
      }
      catch (Exception ex)
      {
        object[] objArray3 = objArray1;
        string str = licenseID;
        \u0004.\u0001(ex, (object) objArray3, (object) this, (object) str);
        throw;
      }
      return serverUrl;
    }

    protected override WebRequest GetWebRequest(Uri uri)
    {
      WebRequest webRequest1;
      HttpWebRequest httpWebRequest1;
      try
      {
        webRequest1 = \u0019\u0002.\u0082\u0003((object) this, uri);
label_1:
        if (true)
        {
          if (true)
            httpWebRequest1 = webRequest1 as HttpWebRequest;
          else
            goto label_6;
        }
        else
          goto label_4;
label_3:
        if (true)
        {
          if (httpWebRequest1 == null)
            goto label_6;
        }
        else
          goto label_1;
label_4:
        if (true)
          \u001B\u0002.\u007E\u0084\u0003((object) \u001A\u0002.\u007E\u0083\u0003((object) httpWebRequest1), false);
        else
          goto label_3;
label_6:
        return webRequest1;
      }
      catch (Exception ex)
      {
        WebRequest webRequest2 = webRequest1;
        HttpWebRequest httpWebRequest2 = httpWebRequest1;
        Uri uri1 = uri;
        \u0004.\u0001(ex, (object) webRequest2, (object) httpWebRequest2, (object) this, (object) uri1);
        throw;
      }
    }

    static UploadReportLoginService1() => \u0003.\u0003.\u0001(typeof (UploadReportLoginService1));
  }
}
