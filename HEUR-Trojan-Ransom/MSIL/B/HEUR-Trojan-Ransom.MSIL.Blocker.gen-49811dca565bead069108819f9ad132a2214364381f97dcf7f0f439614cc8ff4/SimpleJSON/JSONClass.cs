// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONClass
// Assembly: IOExcepti, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 72674A88-3F84-4927-9D84-82118D6CBF01
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-49811dca565bead069108819f9ad132a2214364381f97dcf7f0f439614cc8ff4.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONClass : JSONNode, IEnumerable
  {
    private Dictionary<string, JSONNode> m_Dict = new Dictionary<string, JSONNode>();

    public override JSONNode this[string aKey]
    {
      get
      {
        if (!this.m_Dict.ContainsKey(aKey))
          goto label_4;
label_1:
        int num1 = -43700652;
label_2:
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -854806276)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -322959914 ^ -1244081638;
              continue;
            case 2:
              goto label_4;
            case 4:
              jsonNode = this.m_Dict[aKey];
              num1 = (int) num2 * 1072206855 ^ 1274721710;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return jsonNode;
label_4:
        jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
        num1 = -824940354;
        goto label_2;
      }
      set
      {
        if (!this.m_Dict.ContainsKey(aKey))
          goto label_8;
label_1:
        int num1 = 1177207187;
label_2:
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2098485343)) % 7U)
          {
            case 0:
              num1 = (int) num2 * -103171512 ^ -2049754234;
              continue;
            case 1:
              num1 = (int) num2 * 683947957 ^ -1601209105;
              continue;
            case 2:
              goto label_3;
            case 3:
              goto label_8;
            case 4:
              num1 = (int) num2 * -1241362287 ^ 460500237;
              continue;
            case 5:
              this.m_Dict[aKey] = value;
              num1 = (int) num2 * -863184277 ^ -950586906;
              continue;
            case 6:
              goto label_1;
            default:
              goto label_9;
          }
        }
label_3:
        return;
label_9:
        return;
label_8:
        this.m_Dict.Add(aKey, value);
        num1 = 196251112;
        goto label_2;
      }
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
        if (aIndex < 0)
          goto label_4;
label_1:
        int num1 = -1270120870;
label_2:
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -30794532)) % 6U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * 349923753 ^ -234849439;
              continue;
            case 3:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 2093880813 ^ 1296102364;
              continue;
            case 4:
              goto label_3;
            case 5:
              jsonNode = (JSONNode) null;
              num1 = -1874653900;
              continue;
            default:
              goto label_9;
          }
        }
label_3:
        int num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
        goto label_5;
label_9:
        return jsonNode;
label_4:
        num3 = 1;
label_5:
        num1 = num3 == 0 ? -2019162483 : (num1 = -649550187);
        goto label_2;
      }
      set
      {
        if (aIndex < 0)
          goto label_5;
label_1:
        int num1 = 1688087876;
label_2:
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 388179578)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              int num3 = flag ? -678167645 : (num3 = -44628979);
              num1 = num3 ^ (int) num2 * -1902422476;
              continue;
            case 2:
              goto label_4;
            case 3:
              goto label_3;
            case 4:
              num1 = (int) num2 * 805954936 ^ 239677341;
              continue;
            default:
              goto label_9;
          }
        }
label_3:
        return;
label_9:
        return;
label_4:
        int num4 = aIndex >= this.m_Dict.Count ? 1 : 0;
        goto label_6;
label_5:
        num4 = 1;
label_6:
        flag = num4 != 0;
        num1 = 98811000;
        goto label_2;
      }
    }

    public override int Count
    {
      get
      {
        int count = this.m_Dict.Count;
label_1:
        int num1 = -397949892;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1816988760)) % 3U)
          {
            case 1:
              num1 = (int) num2 * -1248302169 ^ 111582322;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = 12316583;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 630283957)) % 11U)
        {
          case 0:
            num1 = 2119522296;
            continue;
          case 1:
            int num3 = JSONClass.\u206B⁬‫‍‬‌‫‬⁪‮⁯⁭‎⁯‮​‮‍​⁮⁬‎⁬⁫‌‏⁭⁯​​‍⁪​‍‍‏‏‍​‌‮(aKey) ? 567229229 : (num3 = 1574891348);
            num1 = num3 ^ (int) num2 * 656987243;
            continue;
          case 2:
            goto label_3;
          case 3:
            num1 = (int) num2 * -163156667 ^ 2047221213;
            continue;
          case 4:
            num1 = (int) num2 * 1233216631 ^ 1889296168;
            continue;
          case 5:
            num1 = (int) num2 * -801588989 ^ -1982649143;
            continue;
          case 6:
            this.m_Dict.Add(aKey, aItem);
            num1 = 372521075;
            continue;
          case 7:
            goto label_1;
          case 8:
            this.m_Dict[aKey] = aItem;
            num1 = (int) num2 * 175964226 ^ 2038201264;
            continue;
          case 9:
            this.m_Dict.Add(Guid.NewGuid().ToString(), aItem);
            num1 = 1902795220;
            continue;
          case 10:
            int num4 = this.m_Dict.ContainsKey(aKey) ? -1000430283 : (num4 = -1210184352);
            num1 = num4 ^ (int) num2 * -764510296;
            continue;
          default:
            goto label_13;
        }
      }
label_3:
      return;
label_13:;
    }

    public override JSONNode Remove(string aKey)
    {
      if (this.m_Dict.ContainsKey(aKey))
        goto label_4;
label_1:
      int num1 = -443866934;
label_2:
      JSONNode jsonNode1;
      JSONNode jsonNode2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -294608281)) % 6U)
        {
          case 1:
            jsonNode2 = (JSONNode) null;
            num1 = (int) num2 * 1093519735 ^ 586642976;
            continue;
          case 2:
            this.m_Dict.Remove(aKey);
            jsonNode2 = jsonNode1;
            num1 = (int) num2 * -743693766 ^ 518594702;
            continue;
          case 3:
            goto label_4;
          case 4:
            goto label_1;
          case 5:
            num1 = (int) num2 * -1067890226 ^ -750647755;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      return jsonNode2;
label_4:
      jsonNode1 = this.m_Dict[aKey];
      num1 = -377627993;
      goto label_2;
    }

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = -376068513;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        int num3;
        switch ((num2 = (uint) (num1 ^ -371574739)) % 7U)
        {
          case 0:
            num1 = (int) num2 * -1004040928 ^ -1990173359;
            continue;
          case 1:
            if (aIndex >= 0)
            {
              num1 = (int) num2 * 894982502 ^ 1860688449;
              continue;
            }
            num3 = 1;
            break;
          case 2:
            num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
            break;
          case 3:
            goto label_1;
          case 4:
            jsonNode = (JSONNode) null;
            num1 = -1420979055;
            continue;
          case 6:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * -537245851 ^ 952892221;
            continue;
          default:
            goto label_11;
        }
        int num4;
        num1 = num4 = num3 != 0 ? -1310363941 : (num4 = -1967272460);
      }
label_11:
      return jsonNode;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      try
      {
        return (JSONNode) null;
      }
      catch
      {
        return (JSONNode) null;
      }
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONClass.\u003Cget_Childs\u003Ed__14 getChildsD14 = new JSONClass.\u003Cget_Childs\u003Ed__14(-2);
label_1:
        int num1 = -1371692286;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1750926859)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              childs = (IEnumerable<JSONNode>) getChildsD14;
              num1 = (int) num2 * -1161460188 ^ -283850228;
              continue;
            case 3:
              getChildsD14.\u003C\u003E4__this = this;
              num1 = (int) num2 * 1353502940 ^ -498029753;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return childs;
      }
    }

    public IEnumerator GetEnumerator() => (IEnumerator) new JSONClass.\u003CGetEnumerator\u003Ed__15(0)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString()
    {
label_1:
      int num1 = -503846391;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1259063784)) % 4U)
        {
          case 1:
            str1 = "{";
            num1 = (int) num2 * 689815381 ^ 467381782;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * -100378758 ^ 1915592250;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      using (Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator())
      {
label_9:
        int num3 = !enumerator.MoveNext() ? -1260220465 : (num3 = -163878749);
        KeyValuePair<string, JSONNode> current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -1259063784)) % 8U)
          {
            case 0:
              num3 = -163878749;
              continue;
            case 1:
              goto label_9;
            case 2:
              str1 = JSONClass.\u206B‍⁭‍⁮⁫⁮‏​‭‏‏‫‌⁫‌⁭‬⁪‪‎‮‮‬‎‫‭⁪‫‏‏‎‭‭‎‮‪​‏⁮‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\":",
                JSONClass.\u206F‎‏⁭‬‎‭⁮‫⁭⁮‎‭⁭⁫‍​‮⁮‪​‮‬‏⁭⁭‬⁯⁪⁮‌‍‎‪​⁯​⁮‍⁭‮((object) current.Value)
              });
              num3 = -1579985932;
              continue;
            case 3:
              current = enumerator.Current;
              num3 = -1299746051;
              continue;
            case 4:
              num3 = (int) num4 * 1510089388 ^ -1564722391;
              continue;
            case 5:
              int num5 = JSONClass.\u200D​⁭​‍⁭​⁮‪‮⁫⁪⁬‫‬⁬‍‭‏‬‬⁯‏‌⁮‫‬‌‌‎⁮‏‏⁭‬‌⁫‫‭‮‮(str1) <= 2 ? -573311381 : (num5 = -227383889);
              num3 = num5 ^ (int) num4 * -1402958787;
              continue;
            case 6:
              str1 = JSONClass.\u202A​‍‫‌‪‏‬‏⁪⁯⁬‎‬⁪‪⁭‫‎⁪⁭‎⁪‏⁮⁭‭‭‮‫⁭‫⁬⁯‫⁮​⁪‎‮(str1, ", ");
              num3 = (int) num4 * 561759142 ^ 775927902;
              continue;
            default:
              goto label_16;
          }
        }
      }
label_16:
      string str2 = JSONClass.\u202A​‍‫‌‪‏‬‏⁪⁯⁬‎‬⁪‪⁭‫‎⁪⁭‎⁪‏⁮⁭‭‭‮‫⁭‫⁬⁯‫⁮​⁪‎‮(str1, "}");
label_17:
      int num6 = -688218814;
      string str3;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ -1259063784)) % 4U)
        {
          case 0:
            goto label_17;
          case 2:
            str3 = str2;
            num6 = (int) num7 * -1293792390 ^ 905579203;
            continue;
          case 3:
            num6 = (int) num7 * 1027217920 ^ 578846857;
            continue;
          default:
            goto label_21;
        }
      }
label_21:
      return str3;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = -1212877781;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -70354116)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            str1 = "{ ";
            num1 = (int) num2 * 1312382425 ^ -1152832994;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      using (Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator())
      {
label_12:
        int num3 = !enumerator.MoveNext() ? -814498062 : (num3 = -1240122973);
        bool flag;
        KeyValuePair<string, JSONNode> current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -70354116)) % 9U)
          {
            case 0:
              int num5 = !flag ? -825040353 : (num5 = -104044580);
              num3 = num5 ^ (int) num4 * -1370841062;
              continue;
            case 1:
              str1 = JSONClass.\u200C‫‮⁯⁫​⁯‭⁯‎⁬‮‮​‎⁭⁫⁪⁫‎​‍‍⁪‏⁬‏​⁬‫‭⁭‭⁮⁫⁭⁭⁬‪⁬‮(str1, "\n", aPrefix, "   ");
              num3 = -2113720716;
              continue;
            case 3:
              str1 = JSONClass.\u202A​‍‫‌‪‏‬‏⁪⁯⁬‎‬⁪‪⁭‫‎⁪⁭‎⁪‏⁮⁭‭‭‮‫⁭‫⁬⁯‫⁮​⁪‎‮(str1, ", ");
              num3 = (int) num4 * 1011830506 ^ -1249237647;
              continue;
            case 4:
              goto label_12;
            case 5:
              flag = JSONClass.\u200D​⁭​‍⁭​⁮‪‮⁫⁪⁬‫‬⁬‍‭‏‬‬⁯‏‌⁮‫‬‌‌‎⁮‏‏⁭‬‌⁫‫‭‮‮(str1) > 3;
              num3 = (int) num4 * 66500722 ^ 1277921583;
              continue;
            case 6:
              str1 = JSONClass.\u206B‍⁭‍⁮⁫⁮‏​‭‏‏‫‌⁫‌⁭‬⁪‪‎‮‮‬‎‫‭⁪‫‏‏‎‭‭‎‮‪​‏⁮‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\" : ",
                current.Value.ToString(JSONClass.\u202A​‍‫‌‪‏‬‏⁪⁯⁬‎‬⁪‪⁭‫‎⁪⁭‎⁪‏⁮⁭‭‭‮‫⁭‫⁬⁯‫⁮​⁪‎‮(aPrefix, "   "))
              });
              num3 = (int) num4 * -649046418 ^ 419040510;
              continue;
            case 7:
              num3 = -1240122973;
              continue;
            case 8:
              current = enumerator.Current;
              num3 = -76077359;
              continue;
            default:
              goto label_16;
          }
        }
      }
label_16:
      string str2 = JSONClass.\u200C‫‮⁯⁫​⁯‭⁯‎⁬‮‮​‎⁭⁫⁪⁫‎​‍‍⁪‏⁬‏​⁬‫‭⁭‭⁮⁫⁭⁭⁬‪⁬‮(str1, "\n", aPrefix, "}");
label_17:
      int num6 = -751795041;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ -70354116)) % 3U)
        {
          case 1:
            num6 = (int) num7 * -498913083 ^ -619083660;
            continue;
          case 2:
            goto label_17;
          default:
            goto label_20;
        }
      }
label_20:
      return str2;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
      JSONClass.\u200F‮‪‎‮‏‫‪⁫‮​‌‬‏⁫⁯⁮​‭⁯‏‎‪‮‭⁪‭‍‪‬⁫⁪⁯‏‎⁪‭‬⁪‫‮(aWriter, (byte) 2);
      JSONClass.\u200C‍‎‏‍‬‫⁯‭‌‮‭⁬⁫‭‮‪‮‫‪⁪⁭‍​‍‌⁪⁮‮⁫⁯​⁯⁯‪‫‌‭‬‭‮(aWriter, this.m_Dict.Count);
label_1:
      int num1 = 85581645;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1770420419)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 173495169 ^ -1667501679;
            continue;
          case 2:
            num1 = (int) num2 * 1377397037 ^ 762369624;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      using (Dictionary<string, JSONNode>.KeyCollection.Enumerator enumerator = this.m_Dict.Keys.GetEnumerator())
      {
label_14:
        int num3 = !enumerator.MoveNext() ? 1572444158 : (num3 = 2114267688);
        string current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1770420419)) % 8U)
          {
            case 0:
              this.m_Dict[current].Serialize(aWriter);
              num3 = (int) num4 * 556509779 ^ -315302686;
              continue;
            case 1:
              num3 = (int) num4 * 1084234533 ^ -203703351;
              continue;
            case 2:
              JSONClass.\u200E⁯‭⁯‌‏‮‏‬‫⁭‎‪‏‬​‎‬⁭⁫​⁭​⁭‌⁮‬‌‫⁮‪⁭‪⁫‏⁭‌​‮⁪‮(aWriter, current);
              num3 = (int) num4 * -1338941085 ^ 1238996317;
              continue;
            case 3:
              current = enumerator.Current;
              num3 = 938533221;
              continue;
            case 4:
              num3 = 2114267688;
              continue;
            case 5:
              goto label_16;
            case 6:
              num3 = (int) num4 * -1782669565 ^ 394023027;
              continue;
            case 7:
              goto label_14;
            default:
              goto label_9;
          }
        }
label_16:
        return;
label_9:;
      }
    }

    static bool \u206B⁬‫‍‬‌‫‬⁪‮⁯⁭‎⁯‮​‮‍​⁮⁬‎⁬⁫‌‏⁭⁯​​‍⁪​‍‍‏‏‍​‌‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    static int \u200D​⁭​‍⁭​⁮‪‮⁫⁪⁬‫‬⁬‍‭‏‬‬⁯‏‌⁮‫‬‌‌‎⁮‏‏⁭‬‌⁫‫‭‮‮([In] string obj0) => obj0.Length;

    static string \u202A​‍‫‌‪‏‬‏⁪⁯⁬‎‬⁪‪⁭‫‎⁪⁭‎⁪‏⁮⁭‭‭‮‫⁭‫⁬⁯‫⁮​⁪‎‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u206F‎‏⁭‬‎‭⁮‫⁭⁮‎‭⁭⁫‍​‮⁮‪​‮‬‏⁭⁭‬⁯⁪⁮‌‍‎‪​⁯​⁮‍⁭‮([In] object obj0) => obj0.ToString();

    static string \u206B‍⁭‍⁮⁫⁮‏​‭‏‏‫‌⁫‌⁭‬⁪‪‎‮‮‬‎‫‭⁪‫‏‏‎‭‭‎‮‪​‏⁮‮([In] string[] obj0) => string.Concat(obj0);

    static string \u200C‫‮⁯⁫​⁯‭⁯‎⁬‮‮​‎⁭⁫⁪⁫‎​‍‍⁪‏⁬‏​⁬‫‭⁭‭⁮⁫⁭⁭⁬‪⁬‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u200F‮‪‎‮‏‫‪⁫‮​‌‬‏⁫⁯⁮​‭⁯‏‎‪‮‭⁪‭‍‪‬⁫⁪⁯‏‎⁪‭‬⁪‫‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u200C‍‎‏‍‬‫⁯‭‌‮‭⁬⁫‭‮‪‮‫‪⁪⁭‍​‍‌⁪⁮‮⁫⁯​⁯⁯‪‫‌‭‬‭‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u200E⁯‭⁯‌‏‮‏‬‫⁭‎‪‏‬​‎‬⁭⁫​⁭​⁭‌⁮‬‌‫⁮‪⁭‪⁫‏⁭‌​‮⁪‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
