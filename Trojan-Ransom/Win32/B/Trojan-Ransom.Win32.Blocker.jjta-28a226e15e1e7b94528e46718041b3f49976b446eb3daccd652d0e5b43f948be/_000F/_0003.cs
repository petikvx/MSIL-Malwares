// Decompiled with JetBrains decompiler
// Type: .
// Assembly: BOMBS, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b01670ee6fa4859f
// MVID: D5D8F5B0-12EB-4325-8C3D-C60F341D062A
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.jjta-28a226e15e1e7b94528e46718041b3f49976b446eb3daccd652d0e5b43f948be.exe

using \u0006;
using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace \u000F
{
  internal sealed class \u0003 : EventArgs
  {
    private \u0002 \u0001;
    private Exception \u0001;
    private bool \u0001;
    private bool \u0002 = true;
    private bool \u0003 = true;
    private bool \u0004;

    [SpecialName]
    public Exception \u0001() => this.\u0001;

    [SpecialName]
    public bool \u0001() => this.\u0001;

    [SpecialName]
    public bool \u0002() => this.\u0002;

    [SpecialName]
    public bool \u0003() => this.\u0003;

    internal void \u0001([In] bool obj0) => this.\u0003 = obj0;

    internal void \u0001() => this.\u0001 = true;

    [SpecialName]
    public bool \u0004() => this.\u0004;

    [SpecialName]
    public void \u0002([In] bool obj0) => this.\u0004 = obj0;

    public void \u0002()
    {
      if (!this.\u0001)
        return;
      this.\u0001.\u0002();
    }

    public bool \u0001([In] string obj0)
    {
label_0:
      int num1 = \u0083\u0002.\u001B\u0004(obj0) ? 1 : 0;
      int num2;
      while (true)
      {
        if (num1 != 0)
          \u0084\u0002.\u001D\u0004(obj0);
        if (true)
        {
          num2 = this.\u0001.\u0001(obj0) ? 1 : 0;
          if (false)
            num1 = num2;
          else
            break;
        }
        else
          goto label_0;
      }
      return num2 != 0;
    }

    public bool \u0005() => this.\u0002 && this.\u0001.\u0001();

    internal \u0003([In] \u0002 obj0, [In] Exception obj1)
    {
      this.\u0001 = obj0;
      this.\u0001 = obj1;
    }
  }
}
