// Decompiled with JetBrains decompiler
// Type: Cytotechnologist.ScrambleExtention
// Assembly: Ma, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 1E05311B-A9F1-497C-9B8A-F93F05B83D6B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-b73f14efefdd00c34646305b19167c781d2fee40a69d518a5c9000a6f01fdde4.exe

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Cytotechnologist
{
  public static class ScrambleExtention
  {
    private static readonly Random Random = ScrambleExtention.\u202A⁭⁯⁮‭‮⁯​⁯‍‬⁫‍​‪⁪⁪⁪⁭‬‎‫⁮‏‮⁮⁮‍⁫‎‍‫⁯⁯‎‪⁯‫⁬⁫‮();

    public static void Shuffle<T>(IList<T> list)
    {
      int count = list.Count;
label_4:
      int num1 = count <= 1 ? -1096793167 : (num1 = -1648991861);
      int index;
      T obj;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1010210692)) % 9U)
        {
          case 0:
            index = ScrambleExtention.\u206E‮‍‪​⁭‫⁭⁬‪⁯⁪‌‪⁮‌⁫‍⁭‍⁮‭⁪‪‮‪‍⁯⁮​⁭⁭⁬⁫​‮⁫⁯‌⁬‮(ScrambleExtention.Random, count + 1);
            num1 = (int) num2 * -2031550037 ^ -546048762;
            continue;
          case 1:
            num1 = (int) num2 * 236351031 ^ 2089702135;
            continue;
          case 2:
            goto label_4;
          case 3:
            num1 = -1648991861;
            continue;
          case 4:
            goto label_3;
          case 5:
            num1 = (int) num2 * 1944875707 ^ -697017161;
            continue;
          case 6:
            --count;
            num1 = -1537912055;
            continue;
          case 7:
            obj = list[index];
            list[index] = list[count];
            num1 = (int) num2 * 698391884 ^ 1537678130;
            continue;
          case 8:
            list[count] = obj;
            num1 = (int) num2 * -1263066870 ^ -554619687;
            continue;
          default:
            goto label_11;
        }
      }
label_3:
      return;
label_11:;
    }

    static int \u206E‮‍‪​⁭‫⁭⁬‪⁯⁪‌‪⁮‌⁫‍⁭‍⁮‭⁪‪‮‪‍⁯⁮​⁭⁭⁬⁫​‮⁫⁯‌⁬‮([In] Random obj0, [In] int obj1) => obj0.Next(obj1);

    static Random \u202A⁭⁯⁮‭‮⁯​⁯‍‬⁫‍​‪⁪⁪⁪⁭‬‎‫⁮‏‮⁮⁮‍⁫‎‍‫⁯⁯‎‪⁯‫⁬⁫‮() => new Random();
  }
}
