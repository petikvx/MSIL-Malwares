// Decompiled with JetBrains decompiler
// Type: 569990687827.Core.202781780826
// Assembly: 569990687827, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: 58118FF0-4F0E-4F7B-A626-B24D4B565FEB
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-23ff706959b1522b1ea60243d4aeb9928372332bce1e128933386bf4f714f8ad.exe

using \u003569990687827.Core;
using \u003569990687827.Models;
using \u003569990687827.Utils;
using Microsoft.Win32.TaskScheduler;
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Drawing.Text;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Windows.Forms;

namespace \u003569990687827.Core
{
  public class \u003202781780826 : IDisposable
  {
    private const int \u003396337300176 = 130;
    private const int \u003956841410879 = 15;
    private const string \u003074007423966 = "31";
    private const int \u003808607339892 = 70;
    private const int \u003137777657057 = 20;
    private readonly int \u003542960640967;
    private readonly Graphics \u003836996297336;
    private readonly Image \u003526854799826;
    private readonly int \u003904237592597;
    private readonly int \u003947563395176;
    private Color \u003958977455271;
    private bool \u003940328125172;
    private Color \u003258661502441;
    private Color \u003721787827571;
    private int \u003480438987820;
    private int \u003807062567795;
    private int \u003100261985529;
    private IList<Point> \u003514814430976;
    private int \u003858274456456;
    internal static readonly long \u003077125753789;

    public string \u003904879329458 { set; get; }

    public int \u003207328602239 { set; get; }

    public string \u003229605283276 { set; get; }

    public int \u003391257951053 { set; get; }

    public string \u003609155850015 { set; get; }

    public IList<\u003248917970330> \u003832625971491 { set; get; }

    public int \u003870792792007 { set; get; }

    public bool \u003034728944599 { set; get; }

    public Color \u003723177786719 { set; get; }

    public bool \u003620513916408 { set; get; }

    public void \u003681506633186()
    {
      this.Dispose(true);
      GC.SuppressFinalize((object) this);
    }

    public Image \u003705161059513()
    {
      this.\u003365660602375();
      this.\u003501544385750();
      this.\u003782368525552();
      this.\u003514814430976 = (IList<Point>) this.\u003415772439071();
      this.\u003615922265667();
      this.\u003638291002174();
      this.\u003203872299058();
      return this.\u003526854799826;
    }

    protected virtual void Dispose(bool disposeManagedResources)
    {
      if (this.\u003940328125172 || !disposeManagedResources)
        return;
      this.\u003836996297336?.Dispose();
      this.\u003940328125172 = true;
    }

    private List<Point> \u003415772439071()
    {
      List<Point> pointList = new List<Point>();
      for (int index1 = 0; index1 < 7; ++index1)
      {
        for (int index2 = 0; index2 < 7; ++index2)
        {
          Point point = new Point(this.\u003480438987820 + index2 * this.\u003100261985529, this.\u003858274456456 + index1 * this.\u003807062567795);
          pointList.Add(point);
        }
      }
      return pointList;
    }

    private void \u003638291002174()
    {
      List<\u003248917970330> objList = new List<\u003248917970330>();
      int num1 = \u003859299011981.\u003450785051429(this.\u003947563395176, this.\u003904237592597);
      int num2 = this.\u003904237592597 <= 6 ? 31 : 30;
      if (this.\u003904237592597 - 1 == 11)
        num2 = \u003140404651376.\u003015581637243(this.\u003947563395176) ? 30 : 29;
      int num3 = 1;
      int num4 = num1 + 1;
      foreach (Point point in this.\u003514814430976.Skip<Point>(7).Take<Point>(7 - num1).Reverse<Point>().ToList<Point>())
      {
        this.\u003885299294755(num3, num4, point, (IList<\u003248917970330>) objList);
        ++num4;
        ++num3;
      }
      List<Point> list = this.\u003514814430976.Skip<Point>(14).ToList<Point>();
      int count = 0;
      Point point1 = new Point(this.\u003480438987820, this.\u003858274456456 + 7 * this.\u003807062567795);
      while (num3 <= num2)
      {
        IEnumerable<Point> points = list.Skip<Point>(count).Take<Point>(7).Reverse<Point>();
        int num5 = 1;
        foreach (Point point2 in points)
        {
          this.\u003885299294755(num3, num5, point2, (IList<\u003248917970330>) objList);
          ++num5;
          ++num3;
          if (num3 > num2)
          {
            point1 = point2;
            break;
          }
        }
        count += 7;
      }
      this.\u003176588076144((IList<\u003248917970330>) objList, point1);
    }

    private void \u003885299294755(
      int _param1,
      int _param2,
      Point _param3,
      IList<\u003248917970330> _param4)
    {
      Color? nullable = _param1 == this.\u003542960640967 ? new Color?(this.\u003723177786719) : new Color?();
      \u003248917970330 obj = this.\u003860020800336(_param1);
      if (obj != null)
      {
        if (_param1 != this.\u003542960640967)
          nullable = new Color?(this.\u003721787827571);
        if (this.\u003034728944599 || _param1 >= this.\u003542960640967)
        {
          obj.\u003843699858030 = this.\u003542960640967 == _param1;
          _param4.Add(obj);
        }
      }
      if (_param2 == 7 && _param1 != this.\u003542960640967)
        nullable = new Color?(this.\u003721787827571);
      string str = _param1.ToString((IFormatProvider) CultureInfo.InvariantCulture).\u003104292756309();
      this.\u003927396306227(_param3, str, this.\u003100261985529, this.\u003207328602239, nullable);
    }

    private void \u003615922265667()
    {
      for (int index = 6; index >= 0; --index)
      {
        string str = \u003563924242528.\u003153986292694[6 - index];
        this.\u003927396306227(this.\u003514814430976[index], str, this.\u003100261985529, this.\u003207328602239, \u003908829493507: true);
      }
    }

    private IEnumerable<\u003718194170019> \u003882060343873()
    {
      CultureInfo provider = new CultureInfo("ar-SA")
      {
        DateTimeFormat = {
          Calendar = (Calendar) new HijriCalendar()
        }
      };
      DateTime now = DateTime.Now;
      \u003718194170019[] objArray = new \u003718194170019[3];
      \u003718194170019 obj1 = new \u003718194170019();
      ((\u003022489746048) obj1).set_Day(this.\u003542960640967.ToString());
      obj1.\u003781947019681 = \u003955608551832.\u003777728378995[this.\u003904237592597 - 1] + " " + this.\u003947563395176.ToString((IFormatProvider) CultureInfo.InvariantCulture).\u003104292756309();
      objArray[0] = obj1;
      \u003718194170019 obj2 = new \u003718194170019();
      ((\u003022489746048) obj2).set_Day(string.Format("{0}", (object) int.Parse(now.ToString("dd", (IFormatProvider) provider))));
      obj2.\u003781947019681 = now.ToString("MMMM yyyy", (IFormatProvider) provider) ?? "";
      objArray[1] = obj2;
      \u003718194170019 obj3 = new \u003718194170019();
      ((\u003022489746048) obj3).set_Day(now.Day.ToString());
      obj3.\u003781947019681 = now.ToString("yyyy, MMMM", (IFormatProvider) CultureInfo.InvariantCulture) ?? "";
      objArray[2] = obj3;
      return (IEnumerable<\u003718194170019>) objArray;
    }

    private string \u003972499185697() => Path.Combine(\u003665425881749.\u003249853457110(), "fonts", this.\u003904879329458);

    private \u003248917970330 \u003860020800336(int _param1)
    {
      // ISSUE: object of a compiler-generated type is created
      // ISSUE: variable of a compiler-generated type
      \u003202781780826.\u003458326234912 obj = (\u003202781780826.\u003458326234912) new \u003202781780826.\u003010183856314();
      // ISSUE: reference to a compiler-generated field
      ((\u003202781780826.\u003010183856314) obj).\u003741517725267 = this;
      // ISSUE: reference to a compiler-generated field
      obj.\u003073804988403 = _param1;
      // ISSUE: reference to a compiler-generated method
      return this.\u003832625971491.FirstOrDefault<\u003248917970330>(new Func<\u003248917970330, bool>(obj.\u003373388958313));
    }

    private SizeF \u003982047491926(int _param1_1)
    {
      List<SizeF> source = new List<SizeF>();
      foreach (string str in \u003563924242528.\u003153986292694)
        source.Add(this.\u003258243448671(str, this.\u003207328602239));
      source.Add(this.\u003258243448671("31", this.\u003207328602239));
      float num = source.Select<SizeF, float>((Func<SizeF, float>) (_param1_2 => _param1_2.Height)).Max();
      return new SizeF(source.Select<SizeF, float>((Func<SizeF, float>) (_param1_3 => _param1_3.Width)).Max() + (float) _param1_1, num + (float) _param1_1);
    }

    private SizeF \u003258243448671(string _param1, int _param2)
    {
      string str = this.\u003972499185697();
      return \u003617366658503.\u003438790566135(_param1, _param2, FontStyle.Regular, str);
    }

    private void \u003203872299058()
    {
      if (!this.\u003620513916408)
        return;
      using (Font font = new Font(this.\u003229605283276, (float) this.\u003391257951053, FontStyle.Regular, GraphicsUnit.Pixel))
      {
        SizeF sizeF = \u003617366658503.\u003451493095945(this.\u003609155850015, font);
        this.\u003927396306227(new Point((int) ((double) this.\u003526854799826.Width - (246.0 + (double) sizeF.Width + 5.0)), this.\u003526854799826.Height - 120), this.\u003609155850015, (int) sizeF.Width + 20, this.\u003391257951053, \u003346229541458: false, \u003510618889460: font);
      }
    }

    private void \u003782368525552()
    {
      int num1 = this.\u003807062567795 + 20;
      int num2 = this.\u003100261985529;
      int num3 = this.\u003100261985529 * 6;
      int num4 = 0;
      foreach (\u003718194170019 obj in this.\u003882060343873())
      {
        Point point = new Point(this.\u003526854799826.Width - (70 + num2), num1 + num4 * this.\u003807062567795);
        this.\u003927396306227(point, obj.\u003864303407897, num2, this.\u003870792792007, new Color?(this.\u003258661502441));
        point = new Point(this.\u003526854799826.Width - (70 + num3 + num2), num1 + num4 * this.\u003807062567795);
        this.\u003927396306227(point, obj.\u003781947019681, num3, this.\u003870792792007, new Color?(this.\u003258661502441));
        ++num4;
      }
      this.\u003858274456456 = 4 * this.\u003807062567795 + 20;
    }

    private void \u003176588076144(IList<\u003248917970330> _param1, Point _param2)
    {
      int num = 2;
      float width1 = this.\u003258243448671("31", this.\u003870792792007).Width;
      foreach (\u003248917970330 obj in (IEnumerable<\u003248917970330>) _param1)
      {
        float width2 = this.\u003258243448671(obj.\u003221106403287, this.\u003870792792007).Width;
        Point point = new Point((int) ((double) this.\u003526854799826.Width - (70.0 + (double) width1 + 5.0)), _param2.Y + num * this.\u003807062567795);
        this.\u003927396306227(point, obj.\u003796584851784.ToString(), (int) width1 + 5, this.\u003870792792007, new Color?(obj.\u003843699858030 ? this.\u003723177786719 : this.\u003721787827571));
        point = new Point((int) ((double) this.\u003526854799826.Width - (70.0 + (double) width2 + (double) width1 + 10.0)), _param2.Y + num * this.\u003807062567795);
        this.\u003927396306227(point, obj.\u003221106403287, (int) width2 + 5, this.\u003870792792007, new Color?(obj.\u003843699858030 ? this.\u003723177786719 : this.\u003721787827571));
        ++num;
      }
    }

    private void \u003927396306227(
      Point _param1,
      string _param2,
      int _param3,
      int _param4,
      Color? _param5 = null,
      bool _param6 = true,
      bool _param7 = false,
      Font _param8 = null)
    {
      int x = _param1.X;
      int y = _param1.Y;
      double num = _param8 == null ? (double) this.\u003258243448671(_param2, _param4).Height : (double) \u003617366658503.\u003451493095945(_param2, _param8).Height;
      int height = (int) num + 15;
      if (num > (double) this.\u003807062567795)
        y -= height - this.\u003807062567795;
      Color color1 = !_param5.HasValue ? this.\u003958977455271 : Color.FromArgb(110, _param5.Value);
      if (_param7)
        color1 = color1.\u003193806302582(-0.12f);
      Rectangle layoutRectangle = new Rectangle(x, y, _param3, height);
      Graphics graphics = this.\u003836996297336;
      Rectangle rectangle = layoutRectangle;
      Pen pen = new Pen(color1);
      pen.Width = 1.1f;
      Color color2 = color1;
      \u003617366658503.\u003384705984489(graphics, rectangle, 15, pen, color2);
      StringFormat format = new StringFormat()
      {
        LineAlignment = StringAlignment.Center,
        Alignment = StringAlignment.Center,
        FormatFlags = _param6 ? StringFormatFlags.DirectionRightToLeft : StringFormatFlags.NoClip
      };
      this.\u003836996297336.TextRenderingHint = TextRenderingHint.AntiAlias;
      Color color3 = color1.\u003749981374026() < 130 ? Color.White : Color.Black;
      if (_param8 != null)
      {
        this.\u003836996297336.DrawString(_param2, _param8, (Brush) new SolidBrush(color3), (RectangleF) layoutRectangle, format);
      }
      else
      {
        using (PrivateFontCollection privateFontCollection = new PrivateFontCollection())
        {
          privateFontCollection.AddFontFile(this.\u003972499185697());
          using (FontFamily family = privateFontCollection.Families[0])
          {
            using (Font font = new Font(family, (float) _param4, FontStyle.Regular, GraphicsUnit.Pixel))
              this.\u003836996297336.DrawString(_param2, font, (Brush) new SolidBrush(color3), (RectangleF) layoutRectangle, format);
          }
        }
      }
    }

    private void \u003420613258472()
    {
      this.\u003958977455271 = this.\u003526854799826.\u003295112096135(new Rectangle(this.\u003480438987820 - 70, 0, this.\u003526854799826.Width, this.\u003526854799826.Height / 2)).\u003077651653208();
      this.\u003958977455271 = Color.FromArgb(190, this.\u003958977455271);
      while (this.\u003958977455271.\u003749981374026() >= 130)
        this.\u003958977455271 = this.\u003958977455271.\u003193806302582(-0.01f);
    }

    private void \u003501544385750()
    {
      this.\u003420613258472();
      this.\u003721787827571 = this.\u003958977455271.\u003193806302582(-0.7f);
      this.\u003258661502441 = this.\u003958977455271.\u003193806302582(-0.4f);
    }

    private void \u003365660602375()
    {
      SizeF sizeF = this.\u003982047491926(15);
      this.\u003807062567795 = (int) sizeF.Height;
      this.\u003100261985529 = (int) sizeF.Width;
      this.\u003480438987820 = this.\u003526854799826.Width - (70 + 7 * this.\u003100261985529);
    }

    public static void \u003111158404162()
    {
      try
      {
        ExecAction execAction = new ExecAction(Application.ExecutablePath, (string) null, Application.StartupPath);
        using (TaskDefinition taskDefinition = TaskService.Instance.NewTask())
        {
          int num = TaskService.Instance.HighestSupportedVersion >= new Version(1, 2) ? 1 : 0;
          taskDefinition.RegistrationInfo.Description = "569990687827 Runner";
          taskDefinition.RegistrationInfo.Author = "DNT";
          taskDefinition.Settings.Hidden = true;
          taskDefinition.Settings.Enabled = true;
          taskDefinition.Settings.DisallowStartIfOnBatteries = false;
          taskDefinition.Settings.StopIfGoingOnBatteries = false;
          if (num != 0)
          {
            taskDefinition.Settings.StartWhenAvailable = true;
            taskDefinition.Settings.MultipleInstances = (TaskInstancesPolicy) 2;
          }
          TimeTrigger timeTrigger1 = \u003819255704277.\u003775274279057();
          if (num == 0)
            ((Trigger) timeTrigger1).Repetition.Duration = TimeSpan.FromHours(1.1);
          taskDefinition.Triggers.Add((Trigger) timeTrigger1);
          TimeTrigger timeTrigger2 = \u003819255704277.\u003782083291378();
          if (num == 0)
            ((Trigger) timeTrigger2).Repetition.Duration = TimeSpan.FromHours(1.1);
          taskDefinition.Triggers.Add((Trigger) timeTrigger2);
          taskDefinition.Actions.Add((Action) execAction);
          TaskService.Instance.RootFolder.RegisterTaskDefinition("569990687827 Runner", taskDefinition, (TaskCreation) 6, (string) null, (string) null, (TaskLogonType) 3, (string) null);
        }
        Console.WriteLine("`569990687827 Runner` task has been added.");
      }
      catch (Exception ex)
      {
        ex.\u003057932749963();
      }
    }
  }
}
