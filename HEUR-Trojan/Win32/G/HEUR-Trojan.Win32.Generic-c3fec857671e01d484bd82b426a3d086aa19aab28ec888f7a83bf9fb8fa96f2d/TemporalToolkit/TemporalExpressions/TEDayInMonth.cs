// Decompiled with JetBrains decompiler
// Type: TemporalToolkit.TemporalExpressions.TEDayInMonth
// Assembly: TaskSchedulerExcept, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: C99F8105-AF21-447F-A90A-9B9B26790CA7
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.05\HEUR-Trojan.Win32.Generic-c3fec857671e01d484bd82b426a3d086aa19aab28ec888f7a83bf9fb8fa96f2d.exe

using System;
using System.Runtime.InteropServices;

namespace TemporalToolkit.TemporalExpressions
{
  public class TEDayInMonth : TemporalExpression
  {
    public int Start { get; set; }

    public int? End { get; set; }

    public TEDayInMonth(DateTime date)
    {
      this.Start = date.Day;
      this.End = new int?();
    }

    public TEDayInMonth(int day)
    {
label_1:
      int num1 = -1366063446;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -288954306)) % 7U)
        {
          case 0:
            goto label_3;
          case 1:
            this.Start = day;
            num1 = (int) num2 * 32246224 ^ 1944178366;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * -1581989628 ^ -486172404;
            continue;
          case 4:
            this.End = new int?();
            num1 = (int) num2 * -1498936765 ^ 779136968;
            continue;
          case 5:
            num1 = (int) num2 * -738404503 ^ -1419085579;
            continue;
          case 6:
            num1 = (int) num2 * 1457911114 ^ 1197571785;
            continue;
          default:
            goto label_9;
        }
      }
label_3:
      return;
label_9:;
    }

    public TEDayInMonth(int start, int end)
    {
      this.Start = start;
      this.End = new int?(end);
    }

    public override bool Includes(DateTime aDate)
    {
      bool hasValue = this.End.HasValue;
label_1:
      int num1 = 210712163;
      bool flag1;
      while (true)
      {
        uint num2;
        bool flag2;
        int num3;
        switch ((num2 = (uint) (num1 ^ 119002262)) % 15U)
        {
          case 0:
            int num4;
            num1 = num4 = this.Start <= 0 ? 381628001 : (num4 = 1657552438);
            continue;
          case 1:
            num3 = aDate.Day <= this.End.Value ? 1 : 0;
            break;
          case 2:
            flag1 = flag2;
            num1 = 262489703;
            continue;
          case 3:
            num1 = (int) num2 * -1786460512 ^ -1492102097;
            continue;
          case 4:
            int num5 = !hasValue ? 106597683 : (num5 = 381845261);
            num1 = num5 ^ (int) num2 * -422053858;
            continue;
          case 5:
            int num6 = this.Start <= this.End.Value ? -1884580325 : (num6 = -1518515999);
            num1 = num6 ^ (int) num2 * 419242465;
            continue;
          case 7:
            flag2 = DateTime.DaysInMonth(aDate.Year, aDate.Month) + this.Start + 1 == aDate.Day;
            num1 = 249362622;
            continue;
          case 8:
            num1 = (int) num2 * 1507997514 ^ -2036641349;
            continue;
          case 9:
            flag2 = aDate.Day == this.Start;
            num1 = (int) num2 * -2070701983 ^ 1801330206;
            continue;
          case 10:
            goto label_3;
          case 11:
            num1 = 113104665;
            continue;
          case 12:
            if (aDate.Day < this.Start)
            {
              num3 = 0;
              break;
            }
            num1 = 1676960509;
            continue;
          case 13:
            goto label_1;
          case 14:
            num1 = (int) num2 * 479975416 ^ -614777223;
            continue;
          default:
            goto label_19;
        }
        flag2 = num3 != 0;
        num1 = 259598914;
      }
label_3:
      throw TEDayInMonth.\u200D‮‫‌​‪‮⁮⁫​‍⁪‭‮‍‮⁯⁬⁮​‏‏⁮‫‫‫‎‍⁪‎⁪‭⁯‫‭‌‬⁮⁫‮(\u003CModule\u003E.\u200B‍⁬‎⁫‪‮‮⁬‭‏⁯⁬‏⁮‍‏‏‭‌‪‮‎‏‪‭‬⁫‬⁫⁭⁫⁮‎⁯‪‫‫‮<string>(3520771763U));
label_19:
      return flag1;
    }

    static ArgumentException \u200D‮‫‌​‪‮⁮⁫​‍⁪‭‮‍‮⁯⁬⁮​‏‏⁮‫‫‫‎‍⁪‎⁪‭⁯‫‭‌‬⁮⁫‮(
      [In] string obj0)
    {
      return new ArgumentException(obj0);
    }
  }
}
