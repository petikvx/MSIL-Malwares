// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: EncoderExceptionFallbackBuff, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 1A176EC6-F8F7-4000-B7C0-CE79157CC27B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-64a92f765017361d260169feccd6dd444e4a20dfceb3dcad952d976477406e1c.exe

using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = -1897448991;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1504533318)) % 3U)
          {
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 2127472503 ^ 1871370878;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -888638562;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1894536825)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -260610230 ^ 343860065;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual string Value
    {
      get
      {
        string str = "";
label_1:
        int num1 = 31343338;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1192034067)) % 3U)
          {
            case 1:
              num1 = (int) num2 * 1710738487 ^ -1667908961;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return str;
      }
      set
      {
      }
    }

    public virtual int Count => 0;

    public virtual void Add(JSONNode aItem) => this.Add("", aItem);

    public virtual JSONNode Remove(string aKey)
    {
label_1:
      int num1 = -1839408132;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1758551682)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * -1468460619 ^ 1931296649;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = 126285529;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1381409824)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -915953155 ^ -1019768589;
            continue;
          case 1:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * -55535448 ^ 1785927912;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = -1773699047;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -867294414)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 1021088576 ^ 1753603504;
            continue;
          case 3:
            jsonNode = aNode;
            num1 = (int) num2 * -176124967 ^ -1947261288;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
label_3:
        int num1 = -1361092453;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -103716435)) % 6U)
          {
            case 0:
            case 5:
              goto label_3;
            case 1:
              num1 = (int) num2 * -245727012 ^ 292664004;
              continue;
            case 2:
              goto label_2;
            case 3:
              goto label_7;
            case 4:
              num1 = -853140832;
              continue;
            default:
              goto label_6;
          }
        }
label_2:
        yield break;
label_7:
        yield break;
label_6:;
      }
    }

    public IEnumerable<JSONNode> DeepChilds => (IEnumerable<JSONNode>) new JSONNode.\u003Cget_DeepChilds\u003Ed__19(-2)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString()
    {
      string str = nameof (JSONNode);
label_1:
      int num1 = -236860280;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -925519686)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1352096176 ^ 1468268592;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual string ToString(string aPrefix)
    {
label_1:
      int num1 = -1528868830;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1682061505)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            str = nameof (JSONNode);
            num1 = (int) num2 * 270613928 ^ -969078106;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual int AsInt
    {
      get
      {
        int result = 0;
label_1:
        int num1 = -1362166074;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1909681316)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              int num3 = !int.TryParse(this.Value, out result) ? -1146661424 : (num3 = -657588938);
              num1 = num3 ^ (int) num2 * -757597167;
              continue;
            case 2:
              asInt = result;
              num1 = (int) num2 * 2019642358 ^ 1094593313;
              continue;
            case 3:
              asInt = 0;
              num1 = -1901004351;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asInt;
      }
      set
      {
label_1:
        int num1 = -758642446;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1371435522)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Value = value.ToString();
              num1 = (int) num2 * 743680015 ^ 113761132;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual float AsFloat
    {
      get
      {
label_1:
        int num1 = 1724996971;
        float asFloat;
        float result;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 5413642)) % 8U)
          {
            case 0:
              goto label_1;
            case 1:
              result = 0.0f;
              num1 = (int) num2 * 565511386 ^ 418763127;
              continue;
            case 2:
              int num3 = !flag ? 815864976 : (num3 = 1247067523);
              num1 = num3 ^ (int) num2 * -1604845442;
              continue;
            case 3:
              num1 = (int) num2 * -620471433 ^ 1593602579;
              continue;
            case 5:
              asFloat = result;
              num1 = (int) num2 * -840283908 ^ 968516042;
              continue;
            case 6:
              asFloat = 0.0f;
              num1 = 1689182073;
              continue;
            case 7:
              flag = float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u202B‌⁬⁬‎​‎‏‌‏‭‪⁯‏‌‭‍‮‎‮‮⁬‎‬⁫⁮‎⁮‪‍‍‍‎‮⁮⁪⁬‎​‫‮(), out result);
              num1 = (int) num2 * -714524552 ^ -1848939760;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asFloat;
      }
      set => this.Value = value.ToString();
    }

    public virtual double AsDouble
    {
      get
      {
        double result = 0.0;
label_1:
        int num1 = -130838851;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2088346433)) % 5U)
          {
            case 0:
              asDouble = 0.0;
              num1 = -1952944571;
              continue;
            case 1:
              int num3 = !double.TryParse(this.Value, out result) ? 2031439547 : (num3 = 1696510066);
              num1 = num3 ^ (int) num2 * 1974857813;
              continue;
            case 2:
              asDouble = result;
              num1 = (int) num2 * 1705101267 ^ 99666336;
              continue;
            case 4:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_6:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = -1097297678;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1284528829)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Value = value.ToString();
              num1 = (int) num2 * 842477902 ^ 229982355;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual bool AsBool
    {
      get
      {
label_1:
        int num1 = 971744424;
        bool result;
        bool flag;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1266294607)) % 7U)
          {
            case 0:
              asBool = result;
              num1 = (int) num2 * 1977608795 ^ 1325669362;
              continue;
            case 1:
              asBool = !JSONNode.\u200C⁪‬⁫‫‌‏⁫⁯⁮‏‪‎⁪⁯⁯⁯‫‮​‍⁪⁮‌‍‭⁫‪‬‌⁫‪‮‍‮‍⁪⁬⁫‭‮(this.Value);
              num1 = 189507129;
              continue;
            case 3:
              goto label_1;
            case 4:
              result = false;
              flag = bool.TryParse(this.Value, out result);
              num1 = (int) num2 * -1109890732 ^ 1955370646;
              continue;
            case 5:
              num1 = (int) num2 * -1085206570 ^ 276879276;
              continue;
            case 6:
              int num3 = !flag ? -487901213 : (num3 = -1966826459);
              num1 = num3 ^ (int) num2 * 513899732;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asBool;
      }
      set => this.Value = value ? "true" : "false";
    }

    public virtual JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = -1191302466;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1877946371)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 1766915891 ^ 231860876;
              continue;
            case 3:
              asArray = this as JSONArray;
              num1 = (int) num2 * 1082659394 ^ 1234718254;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asArray;
      }
    }

    public virtual JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = -1165341576;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -596732876)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              asObject = this as JSONClass;
              num1 = (int) num2 * -478518596 ^ 1270193636;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s) => (JSONNode) new JSONData(s);

    public static implicit operator string(JSONNode d)
    {
      if (d == (object) null)
        goto label_4;
label_1:
      int num1 = -1879789935;
label_2:
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1604490493)) % 4U)
        {
          case 1:
            num1 = (int) num2 * 1695637735 ^ 607955320;
            continue;
          case 2:
            goto label_3;
          case 3:
            goto label_1;
          default:
            goto label_7;
        }
      }
label_3:
      string str1 = d.Value;
      goto label_5;
label_7:
      string str2;
      return str2;
label_4:
      str1 = (string) null;
label_5:
      str2 = str1;
      num1 = -561926070;
      goto label_2;
    }

    public static bool operator ==(JSONNode a, object b)
    {
      if (b != null)
        goto label_4;
label_1:
      int num1 = -111776023;
label_2:
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -543224442)) % 7U)
        {
          case 0:
            goto label_1;
          case 1:
            flag2 = true;
            num1 = (int) num2 * 760754131 ^ -52064905;
            continue;
          case 2:
            goto label_3;
          case 3:
            int num3 = !flag1 ? 1043709059 : (num3 = 1055856412);
            num1 = num3 ^ (int) num2 * -1966488837;
            continue;
          case 4:
            flag2 = (object) a == b;
            num1 = -548407724;
            continue;
          case 6:
            num1 = (int) num2 * 1937701520 ^ 1949758773;
            continue;
          default:
            goto label_10;
        }
      }
label_3:
      int num4 = a is JSONLazyCreator ? 1 : 0;
      goto label_5;
label_10:
      return flag2;
label_4:
      num4 = 0;
label_5:
      flag1 = num4 != 0;
      num1 = -342550366;
      goto label_2;
    }

    public static bool operator !=(JSONNode a, object b) => !(a == b);

    public override bool Equals(object obj)
    {
label_1:
      int num1 = 1738288970;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 344082629)) % 4U)
        {
          case 0:
            num1 = (int) num2 * 229551060 ^ 722902164;
            continue;
          case 2:
            goto label_1;
          case 3:
            flag = (object) this == obj;
            num1 = (int) num2 * -2088599569 ^ 1239849256;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override int GetHashCode()
    {
label_1:
      int num1 = -1985791668;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -825533668)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            hashCode = this.\u206C​‮‎‪⁯‮‫⁮⁬​‬⁪‌⁪⁪‌​⁪‌⁮‭‬‍‌‫‏‍‏⁬‪‬‍​‍⁯​‍‮‮();
            num1 = (int) num2 * -904172053 ^ -1789893799;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return hashCode;
    }

    internal static string Escape(string aText)
    {
label_1:
      int num1 = -689078802;
      string str1;
      int num2;
      char ch1;
      string str2;
      char ch2;
      string str3;
      char ch3;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -889121802)) % 34U)
        {
          case 0:
            str3 = str2;
            num1 = (int) num3 * 683668027 ^ 1135656673;
            continue;
          case 1:
            switch (ch2)
            {
              case '\b':
                goto label_15;
              case '\t':
                goto label_5;
              case '\n':
                goto label_30;
              case '\v':
                goto label_7;
              case '\f':
                goto label_23;
              case '\r':
                goto label_18;
              default:
                num1 = (int) num3 * 1710744231 ^ 1891850926;
                continue;
            }
          case 2:
            num1 = (int) num3 * -1004183458 ^ 897759693;
            continue;
          case 3:
            int num4;
            num1 = num4 = ch2 != '\\' ? -2054697550 : (num4 = -1243201477);
            continue;
          case 4:
            num1 = (int) num3 * -1695709790 ^ -1839336679;
            continue;
          case 5:
            ch2 = ch3;
            num1 = (int) num3 * -1719398429 ^ -98187852;
            continue;
          case 6:
label_23:
            str2 = JSONNode.\u206C⁭‎‫⁪⁮‭⁬⁬‏⁬​​‌​‮⁭‪‌‏​‌⁬⁭‎‏‏‮‍⁯‍⁭⁬⁬‬‏‏⁫‭⁫‮(str2, "\\f");
            num1 = -69672818;
            continue;
          case 7:
            int num5;
            num1 = num5 = ch2 != '"' ? -12742754 : (num5 = -1483484648);
            continue;
          case 8:
            str2 = "";
            num1 = (int) num3 * 772035460 ^ -903157019;
            continue;
          case 9:
label_18:
            str2 = JSONNode.\u206C⁭‎‫⁪⁮‭⁬⁬‏⁬​​‌​‮⁭‪‌‏​‌⁬⁭‎‏‏‮‍⁯‍⁭⁬⁬‬‏‏⁫‭⁫‮(str2, "\\r");
            num1 = -502895844;
            continue;
          case 10:
            num1 = (int) num3 * 675551183 ^ -389325615;
            continue;
          case 11:
            ch3 = ch1;
            num1 = (int) num3 * -1926276084 ^ -796167225;
            continue;
          case 12:
label_30:
            str2 = JSONNode.\u206C⁭‎‫⁪⁮‭⁬⁬‏⁬​​‌​‮⁭‪‌‏​‌⁬⁭‎‏‏‮‍⁯‍⁭⁬⁬‬‏‏⁫‭⁫‮(str2, "\\n");
            num1 = -684539781;
            continue;
          case 13:
            num2 = 0;
            num1 = (int) num3 * -54584969 ^ -42764223;
            continue;
          case 14:
            num1 = (int) num3 * 550598775 ^ -1319960989;
            continue;
          case 15:
            ch1 = JSONNode.\u202E‪⁭‫⁫‬‬⁪‬‍‮‫‎⁬⁮⁯‭‭⁮⁪⁭‮‭⁮‪⁬⁯‏⁬​‪‪‮‪‍‫‏‭‭‬‮(str1, num2);
            num1 = -1816271707;
            continue;
          case 16:
            num1 = (int) num3 * -1754675486 ^ -680868135;
            continue;
          case 17:
            num1 = (int) num3 * -269333485 ^ 1902058826;
            continue;
          case 18:
label_5:
            str2 = JSONNode.\u206C⁭‎‫⁪⁮‭⁬⁬‏⁬​​‌​‮⁭‪‌‏​‌⁬⁭‎‏‏‮‍⁯‍⁭⁬⁬‬‏‏⁫‭⁫‮(str2, "\\t");
            num1 = -2121959127;
            continue;
          case 19:
            int num6;
            num1 = num6 = num2 >= JSONNode.\u200F‪‫‏‎‫⁭⁪‪‬‎‫‮‎⁫‬‪⁬‬‫‍‫‬‎⁮‭⁭⁭‎‪⁮⁫‮‏⁮‍⁬‍‬‫‮(str1) ? -1627831964 : (num6 = -612616973);
            continue;
          case 20:
            num1 = (int) num3 * -1371052294 ^ -961627693;
            continue;
          case 21:
label_15:
            str2 = JSONNode.\u206C⁭‎‫⁪⁮‭⁬⁬‏⁬​​‌​‮⁭‪‌‏​‌⁬⁭‎‏‏‮‍⁯‍⁭⁬⁬‬‏‏⁫‭⁫‮(str2, "\\b");
            num1 = -324562050;
            continue;
          case 22:
            str2 = JSONNode.\u206C⁭‎‫⁪⁮‭⁬⁬‏⁬​​‌​‮⁭‪‌‏​‌⁬⁭‎‏‏‮‍⁯‍⁭⁬⁬‬‏‏⁫‭⁫‮(str2, "\\\"");
            num1 = -1813357970;
            continue;
          case 23:
            num1 = (int) num3 * -813756509 ^ 1976732910;
            continue;
          case 24:
            goto label_1;
          case 25:
            ++num2;
            num1 = -905607501;
            continue;
          case 26:
            num1 = (int) num3 * -1973842496 ^ -694411123;
            continue;
          case 27:
            str1 = aText;
            num1 = (int) num3 * -794540774 ^ -1489645975;
            continue;
          case 28:
            num1 = (int) num3 * 1499182122 ^ -790026419;
            continue;
          case 29:
            num1 = (int) num3 * 956064933 ^ 620710939;
            continue;
          case 31:
label_7:
            str2 = JSONNode.\u206C⁭‎‫⁪⁮‭⁬⁬‏⁬​​‌​‮⁭‪‌‏​‌⁬⁭‎‏‏‮‍⁯‍⁭⁬⁬‬‏‏⁫‭⁫‮(str2, ch1.ToString());
            num1 = -480666512;
            continue;
          case 32:
            num1 = (int) num3 * 441884260 ^ 1686663601;
            continue;
          case 33:
            str2 = JSONNode.\u206C⁭‎‫⁪⁮‭⁬⁬‏⁬​​‌​‮⁭‪‌‏​‌⁬⁭‎‏‏‮‍⁯‍⁭⁬⁬‬‏‏⁫‭⁫‮(str2, "\\\\");
            num1 = -170632232;
            continue;
          default:
            goto label_36;
        }
      }
label_36:
      return str3;
    }

    public static JSONNode Parse(string aJSON)
    {
label_1:
      int num1 = 2066642353;
      string aItem;
      Stack<JSONNode> jsonNodeStack;
      char ch1;
      string aKey;
      JSONNode jsonNode1;
      bool flag1;
      bool flag2;
      int num2;
      bool flag3;
      bool flag4;
      bool flag5;
      bool flag6;
      bool flag7;
      bool flag8;
      string s;
      char ch2;
      bool flag9;
      bool flag10;
      bool flag11;
      bool flag12;
      char ch3;
      bool flag13;
      char ch4;
      char ch5;
      JSONNode jsonNode2;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 408352156)) % 149U)
        {
          case 0:
            aItem = JSONNode.\u206C⁭‎‫⁪⁮‭⁬⁬‏⁬​​‌​‮⁭‪‌‏​‌⁬⁭‎‏‏‮‍⁯‍⁭⁬⁬‬‏‏⁫‭⁫‮(aItem, JSONNode.\u202E‪⁭‫⁫‬‬⁪‬‍‮‫‎⁬⁮⁯‭‭⁮⁪⁭‮‭⁮‪⁬⁯‏⁬​‪‪‮‪‍‫‏‭‭‬‮(aJSON, num2).ToString());
            num1 = (int) num3 * 28211151 ^ -1410610421;
            continue;
          case 1:
label_26:
            flag6 = flag3;
            num1 = 1099164876;
            continue;
          case 3:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num1 = 436993408;
            continue;
          case 4:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -645751687 ^ -2070096002;
            continue;
          case 5:
            flag4 = flag3;
            num1 = (int) num3 * -891399304 ^ -2087564597;
            continue;
          case 6:
            int num4 = ch4 > 'f' ? -1325913528 : (num4 = -2095414273);
            num1 = num4 ^ (int) num3 * 369942897;
            continue;
          case 7:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -2020391233 ^ -924344576;
            continue;
          case 8:
            int num5 = !(jsonNode1 is JSONArray) ? -1220693564 : (num5 = -44722386);
            num1 = num5 ^ (int) num3 * -1776179839;
            continue;
          case 9:
            num1 = (int) num3 * 853178457 ^ 1827927103;
            continue;
          case 10:
            int num6 = flag11 ? 1002569413 : (num6 = 745270084);
            num1 = num6 ^ (int) num3 * -112630705;
            continue;
          case 11:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 1330345252 ^ -1384559645;
            continue;
          case 12:
            flag13 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 1227382820 ^ -1241028300;
            continue;
          case 13:
            aKey = "";
            aItem = "";
            jsonNode1 = jsonNodeStack.Peek();
            num1 = 234694236;
            continue;
          case 14:
            num1 = (int) num3 * 202665940 ^ 1408518231;
            continue;
          case 15:
            num1 = (int) num3 * 969506265 ^ -1673191837;
            continue;
          case 16:
            num1 = (int) num3 * -1328316593 ^ -133765838;
            continue;
          case 17:
            num1 = (int) num3 * -739115482 ^ -505402980;
            continue;
          case 18:
            goto label_1;
          case 19:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -165881359 ^ -922444972;
            continue;
          case 20:
          case 21:
          case 120:
          case 146:
          case 148:
label_21:
            ++num2;
            num1 = 29620313;
            continue;
          case 22:
            ch4 = ch5;
            num1 = (int) num3 * 990615663 ^ -1412703120;
            continue;
          case 23:
            int num7;
            num1 = num7 = JSONNode.\u206E⁮‏⁪‍⁫‬‮⁯‏​⁬​⁮⁮⁮‫⁪⁭‭​‫‮⁫‎‎⁪⁯⁭‬‬‭‏‌‏‫⁯⁮⁯‎‮(aKey, "") ? 845033457 : (num7 = 1917768871);
            continue;
          case 24:
            aItem = JSONNode.\u206C⁭‎‫⁪⁮‭⁬⁬‏⁬​​‌​‮⁭‪‌‏​‌⁬⁭‎‏‏‮‍⁯‍⁭⁬⁬‬‏‏⁫‭⁫‮(aItem, JSONNode.\u202E‪⁭‫⁫‬‬⁪‬‍‮‫‎⁬⁮⁯‭‭⁮⁪⁭‮‭⁮‪⁬⁯‏⁬​‪‪‮‪‍‫‏‭‭‬‮(aJSON, num2).ToString());
            num1 = (int) num3 * 914480306 ^ -679316298;
            continue;
          case 25:
            num1 = (int) num3 * -1912078526 ^ -556941842;
            continue;
          case 26:
            ch5 = ch2;
            num1 = (int) num3 * -1455816496 ^ -1206783618;
            continue;
          case 27:
            aItem = "";
            num1 = (int) num3 * -1818540306 ^ -1016871278;
            continue;
          case 28:
            int num8 = ch1 != ':' ? -1433862898 : (num8 = -1570692923);
            num1 = num8 ^ (int) num3 * 81638057;
            continue;
          case 29:
            aItem = JSONNode.\u206C⁭‎‫⁪⁮‭⁬⁬‏⁬​​‌​‮⁭‪‌‏​‌⁬⁭‎‏‏‮‍⁯‍⁭⁬⁬‬‏‏⁫‭⁫‮(aItem, ((char) int.Parse(s, NumberStyles.AllowHexSpecifier)).ToString());
            num2 += 4;
            num1 = (int) num3 * -1962831464 ^ 1397467571;
            continue;
          case 30:
label_14:
            aItem = JSONNode.\u206C⁭‎‫⁪⁮‭⁬⁬‏⁬​​‌​‮⁭‪‌‏​‌⁬⁭‎‏‏‮‍⁯‍⁭⁬⁬‬‏‏⁫‭⁫‮(aItem, "\t");
            num1 = 835261755;
            continue;
          case 31:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -398232421 ^ -272163695;
            continue;
          case 32:
            ch1 = ch3;
            int num9 = ch1 > ',' ? 2095943429 : (num9 = 1154814125);
            num1 = num9 ^ (int) num3 * -224373061;
            continue;
          case 33:
            num1 = (int) num3 * -1180877232 ^ 735777782;
            continue;
          case 34:
            aKey = aItem;
            num1 = 172131675;
            continue;
          case 35:
            num1 = (int) num3 * -1829835310 ^ 36310937;
            continue;
          case 36:
            num1 = (int) num3 * -1117031214 ^ -1848631712;
            continue;
          case 37:
            num1 = (int) num3 * -358448505 ^ 1013492422;
            continue;
          case 38:
            int num10;
            num1 = num10 = ch1 != '}' ? 737508665 : (num10 = 786247709);
            continue;
          case 39:
label_121:
            flag8 = flag3;
            num1 = 1019250817;
            continue;
          case 40:
            num1 = (int) num3 * -1156700669 ^ 1371977964;
            continue;
          case 41:
            int num11 = flag6 ? 2029749234 : (num11 = 533548287);
            num1 = num11 ^ (int) num3 * 1801442107;
            continue;
          case 42:
            num2 = 0;
            aItem = "";
            aKey = "";
            num1 = (int) num3 * -1692119391 ^ 2001088625;
            continue;
          case 43:
            num1 = (int) num3 * 814367515 ^ -1734260882;
            continue;
          case 44:
            int num12;
            num1 = num12 = !JSONNode.\u206E⁮‏⁪‍⁫‬‮⁯‏​⁬​⁮⁮⁮‫⁪⁭‭​‫‮⁫‎‎⁪⁯⁭‬‬‭‏‌‏‫⁯⁮⁯‎‮(aKey, "") ? 707932196 : (num12 = 11380013);
            continue;
          case 45:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 1463694482 ^ -667032899;
            continue;
          case 46:
            num1 = (int) num3 * -170684278 ^ 256165719;
            continue;
          case 47:
            aItem = "";
            num1 = (int) num3 * -1320597424 ^ 785524059;
            continue;
          case 48:
            aKey = "";
            num1 = 444356723;
            continue;
          case 49:
            num1 = 1974313522;
            continue;
          case 50:
            num1 = (int) num3 * -336120058 ^ -15934906;
            continue;
          case 51:
            int num13 = flag8 ? -692166266 : (num13 = -406427081);
            num1 = num13 ^ (int) num3 * -1864583192;
            continue;
          case 52:
            num1 = (int) num3 * -1251653557 ^ 869805111;
            continue;
          case 53:
            int num14 = ch4 == 'b' ? 1163499475 : (num14 = 561119220);
            num1 = num14 ^ (int) num3 * -1794115105;
            continue;
          case 54:
            int num15;
            num1 = num15 = JSONNode.\u206E⁮‏⁪‍⁫‬‮⁯‏​⁬​⁮⁮⁮‫⁪⁭‭​‫‮⁫‎‎⁪⁯⁭‬‬‭‏‌‏‫⁯⁮⁯‎‮(aItem, "") ? 1852097869 : (num15 = 1974313522);
            continue;
          case 55:
            aItem = JSONNode.\u206C⁭‎‫⁪⁮‭⁬⁬‏⁬​​‌​‮⁭‪‌‏​‌⁬⁭‎‏‏‮‍⁯‍⁭⁬⁬‬‏‏⁫‭⁫‮(aItem, "\n");
            num1 = 835261755;
            continue;
          case 56:
            aItem = JSONNode.\u206C⁭‎‫⁪⁮‭⁬⁬‏⁬​​‌​‮⁭‪‌‏​‌⁬⁭‎‏‏‮‍⁯‍⁭⁬⁬‬‏‏⁫‭⁫‮(aItem, "\b");
            num1 = 1514319155;
            continue;
          case 57:
            num1 = 1086392113;
            continue;
          case 58:
            goto label_102;
          case 59:
            num1 = (int) num3 * 1760271150 ^ 1114226213;
            continue;
          case 60:
            num1 = (int) num3 * 474439226 ^ -292546089;
            continue;
          case 61:
            int num16 = !flag4 ? -1855867016 : (num16 = -2103669389);
            num1 = num16 ^ (int) num3 * -1540482096;
            continue;
          case 62:
            int num17;
            num1 = num17 = flag3 ? 1424412969 : (num17 = 1884915496);
            continue;
          case 63:
            int num18;
            num1 = num18 = ch1 == '"' ? 1355326604 : (num18 = 1548129691);
            continue;
          case 64:
            num1 = (int) num3 * 1459433313 ^ -1158157067;
            continue;
          case 65:
            num1 = (int) num3 * 424593354 ^ 1730484259;
            continue;
          case 66:
            int num19;
            num1 = num19 = ch1 == ',' ? 328602791 : (num19 = 1473403932);
            continue;
          case 67:
            int num20 = !(jsonNode1 is JSONArray) ? -722047496 : (num20 = -650451935);
            num1 = num20 ^ (int) num3 * 2089673450;
            continue;
          case 68:
            aItem = JSONNode.\u206C⁭‎‫⁪⁮‭⁬⁬‏⁬​​‌​‮⁭‪‌‏​‌⁬⁭‎‏‏‮‍⁯‍⁭⁬⁬‬‏‏⁫‭⁫‮(aItem, JSONNode.\u202E‪⁭‫⁫‬‬⁪‬‍‮‫‎⁬⁮⁯‭‭⁮⁪⁭‮‭⁮‪⁬⁯‏⁬​‪‪‮‪‍‫‏‭‭‬‮(aJSON, num2).ToString());
            num1 = (int) num3 * 154337100 ^ 1843462575;
            continue;
          case 69:
            int num21;
            num1 = num21 = flag3 ? 1289768617 : (num21 = 477206012);
            continue;
          case 70:
            int num22 = jsonNodeStack.Count <= 0 ? 1495774131 : (num22 = 608493084);
            num1 = num22 ^ (int) num3 * -878055693;
            continue;
          case 71:
            num1 = (int) num3 * 400272935 ^ -2095299132;
            continue;
          case 72:
            flag2 = jsonNode1 != (object) null;
            num1 = (int) num3 * -1269200845 ^ 1141107586;
            continue;
          case 73:
            aKey = JSONNode.\u206B‏‮‏‮‍‌‌⁪⁬‏​⁯⁯⁮‏‎‎‫⁮‪​‭‍⁭⁮⁭‎‎‮‮‍⁮‎‎‌‫‏‎‫‮(aKey);
            num1 = (int) num3 * -1782238823 ^ -1412886869;
            continue;
          case 74:
            flag11 = JSONNode.\u206E⁮‏⁪‍⁫‬‮⁯‏​⁬​⁮⁮⁮‫⁪⁭‭​‫‮⁫‎‎⁪⁯⁭‬‬‭‏‌‏‫⁯⁮⁯‎‮(aKey, "");
            num1 = 465309099;
            continue;
          case 75:
            int num23 = !flag2 ? -833135560 : (num23 = -726352683);
            num1 = num23 ^ (int) num3 * -1076041982;
            continue;
          case 76:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -3801924 ^ -1121657267;
            continue;
          case 77:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 871570227 ^ -1762436043;
            continue;
          case 78:
            num1 = (int) num3 * 1444199439 ^ -486301388;
            continue;
          case 79:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 1311308183 ^ -1640619269;
            continue;
          case 80:
            num1 = (int) num3 * 999542543 ^ -309718404;
            continue;
          case 81:
            int num24;
            num1 = num24 = ch4 == 'f' ? 744164398 : (num24 = 877371318);
            continue;
          case 82:
label_123:
            s = JSONNode.\u202C‮‎‮‬‬‬‮‭⁫⁬⁮‎⁪‮⁯‭​⁫‪​‫⁫‭⁭⁬⁬‍‬‬‪‌‬‪‪‪‪‏‌‎‮(aJSON, num2 + 1, 4);
            num1 = 900695735;
            continue;
          case 83:
            flag12 = jsonNodeStack.Count == 0;
            num1 = 1984144626;
            continue;
          case 84:
            int num25;
            num1 = num25 = ch4 != 'n' ? 1025103152 : (num25 = 902603535);
            continue;
          case 85:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -212627744 ^ 1216959048;
            continue;
          case 86:
            num1 = (int) num3 * 1090239090 ^ -501720707;
            continue;
          case 87:
            switch (ch4)
            {
              case 'r':
                goto label_106;
              case 's':
                goto label_99;
              case 't':
                goto label_14;
              case 'u':
                goto label_123;
              default:
                num1 = 1159385384;
                continue;
            }
          case 88:
            int num26 = !flag9 ? 1341383990 : (num26 = 1015897058);
            num1 = num26 ^ (int) num3 * -904380277;
            continue;
          case 89:
            num1 = (int) num3 * 953214053 ^ -84349351;
            continue;
          case 90:
            aItem = "";
            num1 = (int) num3 * -1261500554 ^ -855242945;
            continue;
          case 91:
            aKey = "";
            num1 = 136572730;
            continue;
          case 92:
label_54:
            flag10 = flag3;
            num1 = 1613211947;
            continue;
          case 93:
            goto label_75;
          case 94:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            flag7 = jsonNode1 != (object) null;
            num1 = 930026706;
            continue;
          case 95:
            jsonNodeStack = new Stack<JSONNode>();
            num1 = (int) num3 * -1595947953 ^ -1300856608;
            continue;
          case 96:
            num1 = (int) num3 * -2017266903 ^ 1388790844;
            continue;
          case 97:
            ch3 = JSONNode.\u202E‪⁭‫⁫‬‬⁪‬‍‮‫‎⁬⁮⁯‭‭⁮⁪⁭‮‭⁮‪⁬⁯‏⁬​‪‪‮‪‍‫‏‭‭‬‮(aJSON, num2);
            num1 = 2002058100;
            continue;
          case 98:
            num1 = (int) num3 * 1019757154 ^ 2074530098;
            continue;
          case 99:
            int num27 = flag13 ? -1051139300 : (num27 = -725970319);
            num1 = num27 ^ (int) num3 * 1219471400;
            continue;
          case 100:
            num1 = 2142506835;
            continue;
          case 101:
            int num28;
            num1 = num28 = !JSONNode.\u206E⁮‏⁪‍⁫‬‮⁯‏​⁬​⁮⁮⁮‫⁪⁭‭​‫‮⁫‎‎⁪⁯⁭‬‬‭‏‌‏‫⁯⁮⁯‎‮(aKey, "") ? 730395725 : (num28 = 1731723316);
            continue;
          case 102:
            int num29 = !flag12 ? -1103866144 : (num29 = -1513950940);
            num1 = num29 ^ (int) num3 * 1998239742;
            continue;
          case 103:
            jsonNode2 = jsonNode1;
            num1 = 1532193386;
            continue;
          case 104:
            aItem = JSONNode.\u206C⁭‎‫⁪⁮‭⁬⁬‏⁬​​‌​‮⁭‪‌‏​‌⁬⁭‎‏‏‮‍⁯‍⁭⁬⁬‬‏‏⁫‭⁫‮(aItem, "\f");
            num1 = 1102871684;
            continue;
          case 105:
            aKey = JSONNode.\u206B‏‮‏‮‍‌‌⁪⁬‏​⁯⁯⁮‏‎‎‫⁮‪​‭‍⁭⁮⁭‎‎‮‮‍⁮‎‎‌‫‏‎‫‮(aKey);
            flag1 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 1324387431 ^ 2105095554;
            continue;
          case 106:
            num1 = (int) num3 * -644207197 ^ 1288834452;
            continue;
          case 107:
            num1 = (int) num3 * 624281509 ^ 772915004;
            continue;
          case 108:
            aKey = JSONNode.\u206B‏‮‏‮‍‌‌⁪⁬‏​⁯⁯⁮‏‎‎‫⁮‪​‭‍⁭⁮⁭‎‎‮‮‍⁮‎‎‌‫‏‎‫‮(aKey);
            num1 = (int) num3 * -761112714 ^ -524185146;
            continue;
          case 109:
            ch2 = JSONNode.\u202E‪⁭‫⁫‬‬⁪‬‍‮‫‎⁬⁮⁯‭‭⁮⁪⁭‮‭⁮‪⁬⁯‏⁬​‪‪‮‪‍‫‏‭‭‬‮(aJSON, num2);
            num1 = (int) num3 * -1399140147 ^ -379225421;
            continue;
          case 110:
            num1 = 2002501086;
            continue;
          case 111:
            aItem = JSONNode.\u206C⁭‎‫⁪⁮‭⁬⁬‏⁬​​‌​‮⁭‪‌‏​‌⁬⁭‎‏‏‮‍⁯‍⁭⁬⁬‬‏‏⁫‭⁫‮(aItem, JSONNode.\u202E‪⁭‫⁫‬‬⁪‬‍‮‫‎⁬⁮⁯‭‭⁮⁪⁭‮‭⁮‪⁬⁯‏⁬​‪‪‮‪‍‫‏‭‭‬‮(aJSON, num2).ToString());
            num1 = (int) num3 * -278434595 ^ 1362937006;
            continue;
          case 112:
            flag5 = flag3;
            num1 = (int) num3 * 1792227578 ^ -716544860;
            continue;
          case 113:
label_99:
            aItem = JSONNode.\u206C⁭‎‫⁪⁮‭⁬⁬‏⁬​​‌​‮⁭‪‌‏​‌⁬⁭‎‏‏‮‍⁯‍⁭⁬⁬‬‏‏⁫‭⁫‮(aItem, ch2.ToString());
            num1 = 470056349;
            continue;
          case 114:
            num1 = (int) num3 * -686888017 ^ -1140161148;
            continue;
          case 115:
            flag3 = false;
            num1 = (int) num3 * 668179051 ^ -57724247;
            continue;
          case 116:
            switch (ch1)
            {
              case '[':
                goto label_26;
              case '\\':
                goto label_84;
              case ']':
                goto label_121;
              default:
                num1 = 2094279169;
                continue;
            }
          case 117:
            flag9 = num2 < JSONNode.\u200F‪‫‏‎‫⁭⁪‪‬‎‫‮‎⁫‬‪⁬‬‫‍‫‬‎⁮‭⁭⁭‎‪⁮⁫‮‏⁮‍⁬‍‬‫‮(aJSON);
            num1 = 1746671809;
            continue;
          case 118:
            num1 = (int) num3 * -1878349557 ^ -1723048121;
            continue;
          case 119:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num3 * 1365005465 ^ 1116711004;
            continue;
          case 121:
            switch (ch1)
            {
              case '\t':
                goto label_54;
              case '\n':
              case '\r':
                goto label_21;
              case '\v':
              case '\f':
                goto label_113;
              default:
                num1 = (int) num3 * 864460569 ^ -1703396404;
                continue;
            }
          case 122:
            int num30;
            num1 = num30 = ch1 != ' ' ? 916080316 : (num30 = 1837559337);
            continue;
          case 123:
            num1 = (int) num3 * 291727271 ^ -1369621404;
            continue;
          case 124:
            int num31 = !flag5 ? -1637891984 : (num31 = -1820665316);
            num1 = num31 ^ (int) num3 * 1924811037;
            continue;
          case 125:
            int num32;
            num1 = num32 = flag3 ? 466224545 : (num32 = 2070792148);
            continue;
          case 126:
label_113:
            aItem = JSONNode.\u206C⁭‎‫⁪⁮‭⁬⁬‏⁬​​‌​‮⁭‪‌‏​‌⁬⁭‎‏‏‮‍⁯‍⁭⁬⁬‬‏‏⁫‭⁫‮(aItem, JSONNode.\u202E‪⁭‫⁫‬‬⁪‬‍‮‫‎⁬⁮⁯‭‭⁮⁪⁭‮‭⁮‪⁬⁯‏⁬​‪‪‮‪‍‫‏‭‭‬‮(aJSON, num2).ToString());
            num1 = 97119430;
            continue;
          case (uint) sbyte.MaxValue:
            num1 = 933302572;
            continue;
          case 128:
label_84:
            ++num2;
            num1 = 340571991;
            continue;
          case 129:
            aItem = JSONNode.\u206C⁭‎‫⁪⁮‭⁬⁬‏⁬​​‌​‮⁭‪‌‏​‌⁬⁭‎‏‏‮‍⁯‍⁭⁬⁬‬‏‏⁫‭⁫‮(aItem, JSONNode.\u202E‪⁭‫⁫‬‬⁪‬‍‮‫‎⁬⁮⁯‭‭⁮⁪⁭‮‭⁮‪⁬⁯‏⁬​‪‪‮‪‍‫‏‭‭‬‮(aJSON, num2).ToString());
            num1 = (int) num3 * -1958110640 ^ -1724932328;
            continue;
          case 130:
            int num33;
            num1 = num33 = ch1 > ']' ? 748162249 : (num33 = 124523516);
            continue;
          case 131:
            int num34 = !flag7 ? 1519386683 : (num34 = 1570150879);
            num1 = num34 ^ (int) num3 * 1163191283;
            continue;
          case 132:
            num1 = (int) num3 * 663877499 ^ -1584848677;
            continue;
          case 133:
            int num35 = ch1 > ' ' ? 29144116 : (num35 = 1583796869);
            num1 = num35 ^ (int) num3 * 271178196;
            continue;
          case 134:
            aItem = JSONNode.\u206C⁭‎‫⁪⁮‭⁬⁬‏⁬​​‌​‮⁭‪‌‏​‌⁬⁭‎‏‏‮‍⁯‍⁭⁬⁬‬‏‏⁫‭⁫‮(aItem, JSONNode.\u202E‪⁭‫⁫‬‬⁪‬‍‮‫‎⁬⁮⁯‭‭⁮⁪⁭‮‭⁮‪⁬⁯‏⁬​‪‪‮‪‍‫‏‭‭‬‮(aJSON, num2).ToString());
            num1 = (int) num3 * 689719766 ^ 1288928107;
            continue;
          case 135:
            int num36 = !flag10 ? -1530724282 : (num36 = -1226555086);
            num1 = num36 ^ (int) num3 * -106624955;
            continue;
          case 136:
            flag3 = !flag3;
            num1 = 1836989359;
            continue;
          case 137:
label_106:
            aItem = JSONNode.\u206C⁭‎‫⁪⁮‭⁬⁬‏⁬​​‌​‮⁭‪‌‏​‌⁬⁭‎‏‏‮‍⁯‍⁭⁬⁬‬‏‏⁫‭⁫‮(aItem, "\r");
            num1 = 835261755;
            continue;
          case 138:
            num1 = (int) num3 * 277040791 ^ -1800188476;
            continue;
          case 139:
            int num37 = flag1 ? 1886685978 : (num37 = 1027395213);
            num1 = num37 ^ (int) num3 * -1370501679;
            continue;
          case 140:
            jsonNodeStack.Pop();
            int num38;
            num1 = num38 = JSONNode.\u206E⁮‏⁪‍⁫‬‮⁯‏​⁬​⁮⁮⁮‫⁪⁭‭​‫‮⁫‎‎⁪⁯⁭‬‬‭‏‌‏‫⁯⁮⁯‎‮(aItem, "") ? 524474660 : (num38 = 2142506835);
            continue;
          case 141:
            num1 = (int) num3 * -56794152 ^ 1968628091;
            continue;
          case 142:
            aKey = "";
            aItem = "";
            num1 = 609533368;
            continue;
          case 143:
            num1 = (int) num3 * -230564489 ^ -1175391331;
            continue;
          case 144:
            num1 = (int) num3 * 453716962 ^ -1647618375;
            continue;
          case 145:
            num1 = (int) num3 * 550932468 ^ -1594050503;
            continue;
          case 147:
            int num39;
            num1 = num39 = ch1 != '{' ? 1685258518 : (num39 = 2036431928);
            continue;
          default:
            goto label_149;
        }
      }
label_75:
      throw JSONNode.\u206E‎‌⁮‍‍‎‎‬⁭‮⁭‮‍‪​‎‪⁫⁮⁬‌⁭‫‬⁪‪‬⁭‍‌‬⁮‏⁮⁪‪‬‪‬‮("JSON Parse: Quotation marks seems to be messed up.");
label_102:
      throw JSONNode.\u206E‎‌⁮‍‍‎‎‬⁭‮⁭‮‍‪​‎‪⁫⁮⁬‌⁭‫‬⁪‪‬⁭‍‌‬⁮‏⁮⁪‪‬‪‬‮("JSON Parse: Too many closing brackets");
label_149:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
label_1:
      int num1 = 26887816;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 512504136)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            this.Serialize(JSONNode.\u200C‌‌‫‎‮‌‌‫⁭‌​⁪‌​‮‎‎⁮⁪‪‫‪‫​⁭​‏⁯⁮‫‭⁬⁯⁭⁮‭​‬‮(aData));
            num1 = (int) num2 * 1265762233 ^ -63162606;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u206E‎‌⁮‍‍‎‎‬⁭‮⁭‮‍‪​‎‪⁫⁮⁬‌⁭‫‬⁪‪‬⁭‍‌‬⁮‏⁮⁪‪‬‪‬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u206E‎‌⁮‍‍‎‎‬⁭‮⁭‮‍‪​‎‪⁫⁮⁬‌⁭‫‬⁪‪‬⁭‍‌‬⁮‏⁮⁪‪‬‪‬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u206E‎‌⁮‍‍‎‎‬⁭‮⁭‮‍‪​‎‪⁫⁮⁬‌⁭‫‬⁪‪‬⁭‍‌‬⁮‏⁮⁪‪‬‪‬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
      JSONNode.\u202C⁯‪‏‪​‬⁯⁬‫⁪⁬‍‏‍‭‫⁬‪‭⁮‭‭⁫⁫‍‎‪⁭‭‭‪⁯‬‭​⁭​⁬‪‮(JSONNode.\u206C⁪‬‍‭‬⁫⁫⁭‌‏‪⁬‮‪‌‪‏‪‪⁯⁮‫⁯‏‏⁭​‏‭⁭‭‪‍​‫‬‍‮‍‮((FileSystemInfo) JSONNode.\u200C‬‪⁯‫‎‬‫‬⁪⁭‪⁪‍⁫‬⁮⁬‌‭⁫‏‍⁮‬​‫⁫⁫‬‬‬⁮‭⁮⁯⁬‍⁯‫‮(JSONNode.\u202A‬⁫‫⁬‮‮‎⁪⁭‌⁬​⁭‪⁬‪‍‪⁯‎‮⁪⁬‮⁮‎‭‬‎⁪⁭‌‎‮‬⁯‮‫⁭‮(aFileName))));
      FileStream aData = JSONNode.\u206F‪‌⁯⁮‮⁯‪‍​⁬⁫‬⁯‌⁫⁮‌‮⁫‭‪‮⁮⁯‪⁭⁯⁭‍⁪⁫‍⁪‬‪‫‌⁮‍‮(aFileName);
      try
      {
label_2:
        int num1 = -2100399473;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1063114139)) % 5U)
          {
            case 0:
              num1 = (int) num2 * -1946383795 ^ 1994314622;
              continue;
            case 1:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * 435853927 ^ 950310069;
              continue;
            case 2:
              num1 = (int) num2 * 1132091650 ^ -1122712869;
              continue;
            case 3:
              goto label_11;
            case 4:
              goto label_2;
            default:
              goto label_7;
          }
        }
label_11:
        return;
label_7:;
      }
      finally
      {
        if (aData != null)
        {
label_9:
          int num3 = -253867856;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -1063114139)) % 4U)
            {
              case 1:
                JSONNode.\u202A⁪‎‬‮‪⁭⁫⁬⁮‫⁮‫⁯‌‮‪‎​⁭⁯‪‎‌⁬‏​‪‌⁯‫‭‬‭‫‫‬⁬‎‎‮((IDisposable) aData);
                num3 = (int) num4 * 2012849693 ^ -607351946;
                continue;
              case 2:
                num3 = (int) num4 * 45509048 ^ 1160990081;
                continue;
              case 3:
                goto label_9;
              default:
                goto label_14;
            }
          }
        }
label_14:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u206A‎‍‬‪⁪‮‪⁬⁫‫⁯⁪‌‌⁬⁪⁮⁭‏⁮‪‪‬‮⁮⁫‮‏⁯⁫‏⁭‏‮⁬​​‬⁭‮();
      string base64;
      try
      {
label_2:
        int num1 = 1280958964;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 716404665)) % 4U)
          {
            case 0:
              goto label_2;
            case 1:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * -965361204 ^ 742964374;
              continue;
            case 3:
              JSONNode.\u206A⁮‌‪‮⁬‪‬‬‭‬​‏‭⁭⁭⁬‬‌⁬⁫‌‮⁪‫⁯‏‎‫⁬‮‪‫⁫‭‪‫⁬‭‎‮((Stream) aData, 0L);
              base64 = JSONNode.\u200D‍‎⁫‎‮⁫⁬‎‫⁬‫⁭​⁫⁫‭⁫⁬⁭‌⁬‎‪⁬⁭⁬⁫⁬⁭⁪⁭‍⁫‮⁯‮‍⁭⁫‮(JSONNode.\u202D⁯‌⁪⁬⁯‬‎⁪‮⁬⁯‬⁫‏‮‏⁪‭⁭‍⁫‌‍⁬‬‏‪⁪‍‪‬​‬‪⁭‎‭‌‎‮(aData));
              num1 = (int) num2 * 608056218 ^ -85896135;
              continue;
            default:
              goto label_11;
          }
        }
      }
      finally
      {
        if (aData != null)
        {
label_7:
          int num3 = 300377187;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 716404665)) % 3U)
            {
              case 0:
                goto label_7;
              case 2:
                JSONNode.\u202A⁪‎‬‮‪⁭⁫⁬⁮‫⁮‫⁯‌‮‪‎​⁭⁯‪‎‌⁬‏​‪‌⁯‫‭‬‭‫‫‬⁬‎‎‮((IDisposable) aData);
                num3 = (int) num4 * 1319884271 ^ 242313031;
                continue;
              default:
                goto label_10;
            }
          }
        }
label_10:;
      }
label_11:
      return base64;
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
label_1:
      int num1 = 1395826337;
      JSONArray jsonArray;
      JSONNode jsonNode;
      JSONBinaryTag jsonBinaryTag1;
      JSONBinaryTag jsonBinaryTag2;
      int num2;
      int num3;
      JSONClass jsonClass;
      string aKey;
      JSONNode aItem;
      int num4;
      int num5;
      JSONBinaryTag jsonBinaryTag3;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ 2797394)) % 37U)
        {
          case 0:
            num1 = 1225950085;
            continue;
          case 1:
label_21:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200D‪⁮‬‬⁫‫​‌‎‭⁬⁭​‫‫​‌‌‬‭‪‍‮‍⁯‪⁭⁬⁯‭⁬⁬‍‎‎⁬⁯‌‏‮(aReader));
            num1 = 944558760;
            continue;
          case 2:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202D⁮⁯‮⁬⁭​⁮⁬⁯‎⁬⁫‌​‬⁬⁫​⁯⁮‭‮⁮‪‏⁫‬‎‪‪‪⁫​⁬‏​⁯‬‮‮(aReader));
            num1 = (int) num6 * -7064597 ^ -180283944;
            continue;
          case 3:
            jsonClass = new JSONClass();
            num2 = 0;
            num1 = (int) num6 * 1686869460 ^ -1904186016;
            continue;
          case 4:
            switch (jsonBinaryTag3)
            {
              case JSONBinaryTag.Array:
                goto label_20;
              case JSONBinaryTag.Class:
                goto label_22;
              case JSONBinaryTag.Value:
                goto label_31;
              case JSONBinaryTag.IntValue:
                goto label_16;
              case JSONBinaryTag.DoubleValue:
                goto label_8;
              case JSONBinaryTag.BoolValue:
                goto label_21;
              case JSONBinaryTag.FloatValue:
                goto label_30;
              default:
                num1 = (int) num6 * 694597497 ^ -2142522932;
                continue;
            }
          case 5:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * -1543785374 ^ 539988409;
            continue;
          case 6:
            num4 = 0;
            num1 = (int) num6 * 522453994 ^ -458330841;
            continue;
          case 7:
label_31:
            num1 = 903535459;
            continue;
          case 8:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202D‏‪‌‌‎‮‫‬⁭‎⁭⁪⁭‍‮‪⁭‍​‪⁫⁯‫‍‪​‎⁫‮⁬⁬‪⁫‪‫⁯‫‏‬‮(aReader));
            num1 = (int) num6 * 766804384 ^ -223444331;
            continue;
          case 9:
            num1 = (int) num6 * 248297233 ^ 1821991351;
            continue;
          case 10:
label_16:
            num1 = 21071106;
            continue;
          case 11:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            num1 = 2142313053;
            continue;
          case 12:
            num1 = (int) num6 * 279465954 ^ -1361860128;
            continue;
          case 13:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * -279626253 ^ 622221340;
            continue;
          case 14:
            int num7;
            num1 = num7 = num4 < num5 ? 966376780 : (num7 = 132426743);
            continue;
          case 15:
label_30:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200E‮⁪​‫⁯‬⁯​‎‎‎‮⁭⁯‎​‏‬⁪⁭‮‫‬‮‎⁪⁪‎⁭‭⁬‫⁮⁬​⁯⁫‎‫‮(aReader));
            num1 = 944558760;
            continue;
          case 16:
label_20:
            num5 = JSONNode.\u202D⁮⁯‮⁬⁭​⁮⁬⁯‎⁬⁫‌​‬⁬⁫​⁯⁮‭‮⁮‪‏⁫‬‎‪‪‪⁫​⁬‏​⁯‬‮‮(aReader);
            jsonArray = new JSONArray();
            num1 = 305785432;
            continue;
          case 17:
            jsonBinaryTag2 = jsonBinaryTag1;
            num1 = (int) num6 * 703539593 ^ -774837576;
            continue;
          case 18:
            aKey = JSONNode.\u206A‬‍‍⁯⁪​⁪⁯‮‮‬‏⁫⁪‍​‮‎​‎‎⁯⁭‌‍⁪‏​‪‏‭‫‎‎⁭‪⁭‬⁮‮(aReader);
            aItem = JSONNode.Deserialize(aReader);
            num1 = 301099494;
            continue;
          case 19:
            jsonBinaryTag3 = jsonBinaryTag2;
            num1 = (int) num6 * -2047658256 ^ -1344544372;
            continue;
          case 20:
            ++num2;
            num1 = (int) num6 * -1464877098 ^ 384960950;
            continue;
          case 22:
            goto label_5;
          case 23:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206A‬‍‍⁯⁪​⁪⁯‮‮‬‏⁫⁪‍​‮‎​‎‎⁯⁭‌‍⁪‏​‪‏‭‫‎‎⁭‪⁭‬⁮‮(aReader));
            num1 = (int) num6 * 1307761080 ^ 1444742213;
            continue;
          case 24:
            num1 = (int) num6 * 179019955 ^ 793016173;
            continue;
          case 25:
            int num8;
            num1 = num8 = num2 < num3 ? 135331344 : (num8 = 604841596);
            continue;
          case 26:
            num1 = (int) num6 * -635560156 ^ -795198324;
            continue;
          case 27:
            num1 = (int) num6 * -751144986 ^ 1781951370;
            continue;
          case 28:
            num1 = (int) num6 * -1911354225 ^ 1913324258;
            continue;
          case 29:
            ++num4;
            num1 = (int) num6 * 348981259 ^ -1700488456;
            continue;
          case 30:
            num1 = (int) num6 * 1635945978 ^ 323268160;
            continue;
          case 31:
            goto label_1;
          case 32:
            jsonBinaryTag1 = (JSONBinaryTag) JSONNode.\u200E​‎‪‎‭‬‫‎​⁭⁫⁫‭‮‫⁯‮‭⁪‌‏⁮​⁮‪‪‫⁮​⁭‪‮⁪‍‎⁬⁮⁯‪‮(aReader);
            num1 = (int) num6 * -2116526272 ^ 282189598;
            continue;
          case 33:
label_8:
            num1 = 407658605;
            continue;
          case 34:
label_22:
            num1 = 870831202;
            continue;
          case 35:
            jsonClass.Add(aKey, aItem);
            num1 = (int) num6 * -523477778 ^ 1481907150;
            continue;
          case 36:
            num3 = JSONNode.\u202D⁮⁯‮⁬⁭​⁮⁬⁯‎⁬⁫‌​‬⁬⁫​⁯⁮‭‮⁮‪‏⁫‬‎‪‪‪⁫​⁬‏​⁯‬‮‮(aReader);
            num1 = (int) num6 * -1775153835 ^ -783892341;
            continue;
          default:
            goto label_39;
        }
      }
label_5:
      throw JSONNode.\u206E‎‌⁮‍‍‎‎‬⁭‮⁭‮‍‪​‎‪⁫⁮⁬‌⁭‫‬⁪‪‬⁭‍‌‬⁮‏⁮⁪‪‬‪‬‮(JSONNode.\u206C⁭‎‫⁪⁮‭⁬⁬‏⁬​​‌​‮⁭‪‌‏​‌⁬⁭‎‏‏‮‍⁯‍⁭⁬⁬‬‏‏⁫‭⁫‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag1.ToString()));
label_39:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u206E‎‌⁮‍‍‎‎‬⁭‮⁭‮‍‪​‎‪⁫⁮⁬‌⁭‫‬⁪‪‬⁭‍‌‬⁮‏⁮⁪‪‬‪‬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u206E‎‌⁮‍‍‎‎‬⁭‮⁭‮‍‪​‎‪⁫⁮⁬‌⁭‫‬⁪‪‬⁭‍‌‬⁮‏⁮⁪‪‬‪‬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u206E‎‌⁮‍‍‎‎‬⁭‮⁭‮‍‪​‎‪⁫⁮⁬‌⁭‫‬⁪‪‬⁭‍‌‬⁮‏⁮⁪‪‬‪‬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u206F‪⁪⁮‌⁫‍‭‎⁭⁭‭‫‫‫‍​⁪‭‎‬‮‌‫‬⁫‏⁪⁬‎‎‏⁪‫‭‫‬⁫‏‪‮(aData);
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = -2112344388;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -541398196)) % 3U)
          {
            case 0:
              goto label_2;
            case 2:
              jsonNode = JSONNode.Deserialize(aReader);
              num1 = (int) num2 * -1642577373 ^ -2122793442;
              continue;
            default:
              goto label_11;
          }
        }
      }
      finally
      {
        if (aReader != null)
        {
label_6:
          int num3 = -80689451;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -541398196)) % 4U)
            {
              case 1:
                JSONNode.\u202A⁪‎‬‮‪⁭⁫⁬⁮‫⁮‫⁯‌‮‪‎​⁭⁯‪‎‌⁬‏​‪‌⁯‫‭‬‭‫‫‬⁬‎‎‮((IDisposable) aReader);
                num3 = (int) num4 * 1233208658 ^ 1684421588;
                continue;
              case 2:
                num3 = (int) num4 * -1528717727 ^ 1782654038;
                continue;
              case 3:
                goto label_6;
              default:
                goto label_10;
            }
          }
        }
label_10:;
      }
label_11:
      return jsonNode;
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u200E⁫⁬‌‮​‭‏‮‬⁭‎‏⁭‍‍⁭⁮‎⁬⁯‬‌​⁮‮‍‎‪⁪⁮‍‍​‪‌⁬‌‎⁪‮(aFileName);
      try
      {
        return JSONNode.LoadFromStream((Stream) aData);
      }
      finally
      {
        if (aData != null)
        {
label_3:
          int num1 = -1340239582;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ -1866542376)) % 3U)
            {
              case 0:
                goto label_3;
              case 2:
                JSONNode.\u202A⁪‎‬‮‪⁭⁫⁬⁮‫⁮‫⁯‌‮‪‎​⁭⁯‪‎‌⁬‏​‪‌⁯‫‭‬‭‫‫‬⁬‎‎‮((IDisposable) aData);
                num1 = (int) num2 * -236945826 ^ -1971246120;
                continue;
              default:
                goto label_6;
            }
          }
        }
label_6:;
      }
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
label_1:
      int num1 = -1262752369;
      MemoryStream aData;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1399983378)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            aData = JSONNode.\u200E⁯‮‎‭⁬⁯‭‎⁮⁬‏‌⁯⁪⁬‪‎‎‮‎‫‮‍⁬⁭‪‌⁪⁫⁭⁮‌⁪⁮⁬⁭⁯​‬‮(JSONNode.\u200C⁭‪‬​‫​‎‎⁪‌‫​⁫​⁯‏⁪‌‎‏‮⁪⁯‫‏‍‮⁬‮⁮⁫⁫⁪⁬‫​‌⁮‬‮(aBase64));
            num1 = (int) num2 * 947014054 ^ -1468488164;
            continue;
          case 2:
            JSONNode.\u206A⁮‌‪‮⁬‪‬‬‭‬​‏‭⁭⁭⁬‬‌⁬⁫‌‮⁪‫⁯‏‎‫⁬‮‪‫⁫‭‪‫⁬‭‎‮((Stream) aData, 0L);
            num1 = (int) num2 * -1582540723 ^ -2034542042;
            continue;
          case 3:
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * 1546153397 ^ 1019536676;
            continue;
          default:
            goto label_6;
        }
      }
label_6:
      return jsonNode;
    }

    static CultureInfo \u202B‌⁬⁬‎​‎‏‌‏‭‪⁯‏‌‭‍‮‎‮‮⁬‎‬⁫⁮‎⁮‪‍‍‍‎‮⁮⁪⁬‎​‫‮() => CultureInfo.InvariantCulture;

    static bool \u200C⁪‬⁫‫‌‏⁫⁯⁮‏‪‎⁪⁯⁯⁯‫‮​‍⁪⁮‌‍‭⁫‪‬‌⁫‪‮‍‮‍⁪⁬⁫‭‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u206C​‮‎‪⁯‮‫⁮⁬​‬⁪‌⁪⁪‌​⁪‌⁮‭‬‍‌‫‏‍‏⁬‪‬‍​‍⁯​‍‮‮() => base.GetHashCode();

    static char \u202E‪⁭‫⁫‬‬⁪‬‍‮‫‎⁬⁮⁯‭‭⁮⁪⁭‮‭⁮‪⁬⁯‏⁬​‪‪‮‪‍‫‏‭‭‬‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u206C⁭‎‫⁪⁮‭⁬⁬‏⁬​​‌​‮⁭‪‌‏​‌⁬⁭‎‏‏‮‍⁯‍⁭⁬⁬‬‏‏⁫‭⁫‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u200F‪‫‏‎‫⁭⁪‪‬‎‫‮‎⁫‬‪⁬‬‫‍‫‬‎⁮‭⁭⁭‎‪⁮⁫‮‏⁮‍⁬‍‬‫‮([In] string obj0) => obj0.Length;

    static string \u206B‏‮‏‮‍‌‌⁪⁬‏​⁯⁯⁮‏‎‎‫⁮‪​‭‍⁭⁮⁭‎‎‮‮‍⁮‎‎‌‫‏‎‫‮([In] string obj0) => obj0.Trim();

    static bool \u206E⁮‏⁪‍⁫‬‮⁯‏​⁬​⁮⁮⁮‫⁪⁭‭​‫‮⁫‎‎⁪⁯⁭‬‬‭‏‌‏‫⁯⁮⁯‎‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u206E‎‌⁮‍‍‎‎‬⁭‮⁭‮‍‪​‎‪⁫⁮⁬‌⁭‫‬⁪‪‬⁭‍‌‬⁮‏⁮⁪‪‬‪‬‮([In] string obj0) => new Exception(obj0);

    static string \u202C‮‎‮‬‬‬‮‭⁫⁬⁮‎⁪‮⁯‭​⁫‪​‫⁫‭⁭⁬⁬‍‬‬‪‌‬‪‪‪‪‏‌‎‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u200C‌‌‫‎‮‌‌‫⁭‌​⁪‌​‮‎‎⁮⁪‪‫‪‫​⁭​‏⁯⁮‫‭⁬⁯⁭⁮‭​‬‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u202A‬⁫‫⁬‮‮‎⁪⁭‌⁬​⁭‪⁬‪‍‪⁯‎‮⁪⁬‮⁮‎‭‬‎⁪⁭‌‎‮‬⁯‮‫⁭‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u200C‬‪⁯‫‎‬‫‬⁪⁭‪⁪‍⁫‬⁮⁬‌‭⁫‏‍⁮‬​‫⁫⁫‬‬‬⁮‭⁮⁯⁬‍⁯‫‮([In] FileInfo obj0) => obj0.Directory;

    static string \u206C⁪‬‍‭‬⁫⁫⁭‌‏‪⁬‮‪‌‪‏‪‪⁯⁮‫⁯‏‏⁭​‏‭⁭‭‪‍​‫‬‍‮‍‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u202C⁯‪‏‪​‬⁯⁬‫⁪⁬‍‏‍‭‫⁬‪‭⁮‭‭⁫⁫‍‎‪⁭‭‭‪⁯‬‭​⁭​⁬‪‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u206F‪‌⁯⁮‮⁯‪‍​⁬⁫‬⁯‌⁫⁮‌‮⁫‭‪‮⁮⁯‪⁭⁯⁭‍⁪⁫‍⁪‬‪‫‌⁮‍‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u202A⁪‎‬‮‪⁭⁫⁬⁮‫⁮‫⁯‌‮‪‎​⁭⁯‪‎‌⁬‏​‪‌⁯‫‭‬‭‫‫‬⁬‎‎‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u206A‎‍‬‪⁪‮‪⁬⁫‫⁯⁪‌‌⁬⁪⁮⁭‏⁮‪‪‬‮⁮⁫‮‏⁯⁫‏⁭‏‮⁬​​‬⁭‮() => new MemoryStream();

    static void \u206A⁮‌‪‮⁬‪‬‬‭‬​‏‭⁭⁭⁬‬‌⁬⁫‌‮⁪‫⁯‏‎‫⁬‮‪‫⁫‭‪‫⁬‭‎‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u202D⁯‌⁪⁬⁯‬‎⁪‮⁬⁯‬⁫‏‮‏⁪‭⁭‍⁫‌‍⁬‬‏‪⁪‍‪‬​‬‪⁭‎‭‌‎‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u200D‍‎⁫‎‮⁫⁬‎‫⁬‫⁭​⁫⁫‭⁫⁬⁭‌⁬‎‪⁬⁭⁬⁫⁬⁭⁪⁭‍⁫‮⁯‮‍⁭⁫‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u200E​‎‪‎‭‬‫‎​⁭⁫⁫‭‮‫⁯‮‭⁪‌‏⁮​⁮‪‪‫⁮​⁭‪‮⁪‍‎⁬⁮⁯‪‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u202D⁮⁯‮⁬⁭​⁮⁬⁯‎⁬⁫‌​‬⁬⁫​⁯⁮‭‮⁮‪‏⁫‬‎‪‪‪⁫​⁬‏​⁯‬‮‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u206A‬‍‍⁯⁪​⁪⁯‮‮‬‏⁫⁪‍​‮‎​‎‎⁯⁭‌‍⁪‏​‪‏‭‫‎‎⁭‪⁭‬⁮‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u202D‏‪‌‌‎‮‫‬⁭‎⁭⁪⁭‍‮‪⁭‍​‪⁫⁯‫‍‪​‎⁫‮⁬⁬‪⁫‪‫⁯‫‏‬‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u200D‪⁮‬‬⁫‫​‌‎‭⁬⁭​‫‫​‌‌‬‭‪‍‮‍⁯‪⁭⁬⁯‭⁬⁬‍‎‎⁬⁯‌‏‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u200E‮⁪​‫⁯‬⁯​‎‎‎‮⁭⁯‎​‏‬⁪⁭‮‫‬‮‎⁪⁪‎⁭‭⁬‫⁮⁬​⁯⁫‎‫‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u206F‪⁪⁮‌⁫‍‭‎⁭⁭‭‫‫‫‍​⁪‭‎‬‮‌‫‬⁫‏⁪⁬‎‎‏⁪‫‭‫‬⁫‏‪‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u200E⁫⁬‌‮​‭‏‮‬⁭‎‏⁭‍‍⁭⁮‎⁬⁯‬‌​⁮‮‍‎‪⁪⁮‍‍​‪‌⁬‌‎⁪‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u200C⁭‪‬​‫​‎‎⁪‌‫​⁫​⁯‏⁪‌‎‏‮⁪⁯‫‏‍‮⁬‮⁮⁫⁫⁪⁬‫​‌⁮‬‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u200E⁯‮‎‭⁬⁯‭‎⁮⁬‏‌⁯⁪⁬‪‎‎‮‎‫‮‍⁬⁭‪‌⁪⁫⁭⁮‌⁪⁮⁬⁭⁯​‬‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
