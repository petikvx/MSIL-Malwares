// Decompiled with JetBrains decompiler
// Type: yANFBEhXE4b0deTZD.O6Ma8QY5zD4t4vgcO
// Assembly: bouNMGxVgGi4SRgWO, Version=3.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60
// MVID: 3F6A2AF1-3CCB-4F01-AA36-FA31C2E4CFE8
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Backdoor.MSIL.Agent.gen-bc408b9f362db28b2e931ff336ec5661cc0ce27b0cdc0ce215fec1b7381aca7f.exe

using fZ13IzbFFLuZAsd83;
using Microsoft.TemplateEngine.Core;
using Microsoft.TemplateEngine.Core.Contracts;
using Microsoft.TemplateEngine.Core.Operations;
using Microsoft.TemplateEngine.Utils;
using Newtonsoft.Json.Linq;
using sotdOA5olripUMXuF;
using System;
using System.Collections.Generic;
using zjOMGQo4U7RNSpo2h;
using zpdIRWbRp5AiZJa82;

namespace yANFBEhXE4b0deTZD
{
  public static class O6Ma8QY5zD4t4vgcO
  {
    public static List<IOperationProvider> e6XWCERPCltnbruzM(
      JObject Rvsyd0eLdikcj36yY)
    {
      string str1 = ((JToken) Rvsyd0eLdikcj36yY).nVxA6yY1QJJUqxmoF("startToken");
      string str2 = ((JToken) Rvsyd0eLdikcj36yY).nVxA6yY1QJJUqxmoF("endToken");
      if (string.IsNullOrWhiteSpace(str1))
        throw new TemplateAuthoringException("Template authoring error. StartToken must be defined", "StartToken");
      if (string.IsNullOrWhiteSpace(str2))
        throw new TemplateAuthoringException("Template authoring error. EndToken must be defined", "EndToken");
      string iRsbTyiM5hR8Xkzal = ((JToken) Rvsyd0eLdikcj36yY).nVxA6yY1QJJUqxmoF("pseudoEndToken");
      yJs6SC3vp2iu7d02O x9mJWoAAK0ITIRr8G = yJs6SC3vp2iu7d02O.GThC1Aq6hpEZGI3WW(Rvsyd0eLdikcj36yY);
      N7BsYobQziYYHe4jY n7BsYobQziYyHe4jY = N7BsYobQziYYHe4jY.MNHS6ZBlgNUwBVWvX(Rvsyd0eLdikcj36yY);
      return string.IsNullOrWhiteSpace(iRsbTyiM5hR8Xkzal) ? O6Ma8QY5zD4t4vgcO.korLqcePkVrNr2gzB(str1, str2, x9mJWoAAK0ITIRr8G, n7BsYobQziYyHe4jY) : O6Ma8QY5zD4t4vgcO.F0B54djS65x49TX5o(str1, str2, iRsbTyiM5hR8Xkzal, x9mJWoAAK0ITIRr8G, n7BsYobQziYyHe4jY);
    }

    public static List<IOperationProvider> OqJgSYcgLyn55WekB(
      string _param0,
      string Ac0FJaXSkoVP5Ra7A)
    {
      return O6Ma8QY5zD4t4vgcO.korLqcePkVrNr2gzB(_param0, Ac0FJaXSkoVP5Ra7A, new yJs6SC3vp2iu7d02O(), new N7BsYobQziYYHe4jY());
    }

    public static List<IOperationProvider> korLqcePkVrNr2gzB(
      string L5uwH5TmqircygTAV,
      string xCSnBLxJ6IWI0ktRn,
      yJs6SC3vp2iu7d02O _param2,
      N7BsYobQziYYHe4jY QlBtMApfaE6CehWfy)
    {
      string iRsbTyiM5hR8Xkzal = xCSnBLxJ6IWI0ktRn.Length >= 2 ? xCSnBLxJ6IWI0ktRn.Substring(0, xCSnBLxJ6IWI0ktRn.Length - 1) + " " + xCSnBLxJ6IWI0ktRn.Substring(xCSnBLxJ6IWI0ktRn.Length - 1) : (string) null;
      return O6Ma8QY5zD4t4vgcO.F0B54djS65x49TX5o(L5uwH5TmqircygTAV, xCSnBLxJ6IWI0ktRn, iRsbTyiM5hR8Xkzal, _param2, QlBtMApfaE6CehWfy);
    }

    public static List<IOperationProvider> LfvfVEpMGZbymXrXp(
      string jKWVE8wi7KZNwkjWJ,
      string _param1,
      string _param2)
    {
      return O6Ma8QY5zD4t4vgcO.F0B54djS65x49TX5o(jKWVE8wi7KZNwkjWJ, _param1, _param2, new yJs6SC3vp2iu7d02O(), new N7BsYobQziYYHe4jY());
    }

    public static List<IOperationProvider> F0B54djS65x49TX5o(
      string D236hSNl3vgA9P9ZS,
      string YdPfLgAAsERbNiXMV,
      string iRsbTyiM5hR8Xkzal,
      yJs6SC3vp2iu7d02O x9mJWoAAK0ITIRr8G,
      N7BsYobQziYYHe4jY ildlPXOKXsS6o6REA)
    {
      ConditionEvaluator conditionEvaluator = HM7fHG9SqSJPjYb3N.bEgiIKupMFMDdf04i(ildlPXOKXsS6o6REA.NiJSkdODUJpxIBvEw);
      List<ITokenConfig> itokenConfigList1 = new List<ITokenConfig>();
      foreach (string str in (IEnumerable<string>) x9mJWoAAK0ITIRr8G.EcdODbGLj80mSdNZe)
      {
        itokenConfigList1.Add(TokenConfigExtensions.TokenConfig(x9mJWoAAK0ITIRr8G.kfXjEroR7Qu4iFPT6 + str));
        itokenConfigList1.Add(TokenConfigExtensions.TokenConfig(D236hSNl3vgA9P9ZS + x9mJWoAAK0ITIRr8G.kfXjEroR7Qu4iFPT6 + str));
      }
      List<ITokenConfig> itokenConfigList2 = new List<ITokenConfig>();
      foreach (string str in (IEnumerable<string>) x9mJWoAAK0ITIRr8G.XEvS2uS6AiSAWBz32)
        itokenConfigList2.Add(TokenConfigExtensions.TokenConfig(D236hSNl3vgA9P9ZS + x9mJWoAAK0ITIRr8G.kfXjEroR7Qu4iFPT6 + str));
      List<ITokenConfig> itokenConfigList3 = new List<ITokenConfig>();
      foreach (string str in (IEnumerable<string>) x9mJWoAAK0ITIRr8G.ttD5RCqxmdlg45PcF)
      {
        itokenConfigList3.Add(TokenConfigExtensions.TokenConfig(x9mJWoAAK0ITIRr8G.kfXjEroR7Qu4iFPT6 + str));
        itokenConfigList3.Add(TokenConfigExtensions.TokenConfig(D236hSNl3vgA9P9ZS + x9mJWoAAK0ITIRr8G.kfXjEroR7Qu4iFPT6 + str));
      }
      List<ITokenConfig> itokenConfigList4 = new List<ITokenConfig>();
      foreach (string str in (IEnumerable<string>) x9mJWoAAK0ITIRr8G.wxPjXqjm26lCHzGVG)
      {
        itokenConfigList4.Add(TokenConfigExtensions.TokenConfig(x9mJWoAAK0ITIRr8G.kfXjEroR7Qu4iFPT6 + str));
        itokenConfigList4.Add(TokenConfigExtensions.TokenConfig(D236hSNl3vgA9P9ZS + x9mJWoAAK0ITIRr8G.kfXjEroR7Qu4iFPT6 + str));
      }
      ConditionalTokens conditionalTokens = new ConditionalTokens()
      {
        EndIfTokens = (IReadOnlyList<ITokenConfig>) itokenConfigList1,
        ActionableIfTokens = (IReadOnlyList<ITokenConfig>) itokenConfigList2,
        ActionableElseTokens = (IReadOnlyList<ITokenConfig>) itokenConfigList3,
        ActionableElseIfTokens = (IReadOnlyList<ITokenConfig>) itokenConfigList4
      };
      if (!string.IsNullOrWhiteSpace(iRsbTyiM5hR8Xkzal))
      {
        Guid guid = new Guid();
        string str1 = string.Format("Fix pseudo tokens ({0} {1})", (object) iRsbTyiM5hR8Xkzal, (object) guid);
        string str2 = string.Format("Reset pseudo token fixer ({0} {1})", (object) iRsbTyiM5hR8Xkzal, (object) guid);
        conditionalTokens.ActionableOperations = (IReadOnlyList<string>) new string[2]
        {
          str1,
          str2
        };
        IOperationProvider ioperationProvider1 = (IOperationProvider) new BalancedNesting(TokenConfigExtensions.TokenConfig(D236hSNl3vgA9P9ZS), TokenConfigExtensions.TokenConfig(YdPfLgAAsERbNiXMV), TokenConfigExtensions.TokenConfig(iRsbTyiM5hR8Xkzal), str1, str2, ildlPXOKXsS6o6REA.qib4t5hZYfQI7F37T);
        IOperationProvider ioperationProvider2 = (IOperationProvider) new Conditional(conditionalTokens, ildlPXOKXsS6o6REA.Nsv35rd7ltn4azif9, ildlPXOKXsS6o6REA.SRt84RIyEkJRQQvHB, conditionEvaluator, ildlPXOKXsS6o6REA.ly41tHHplWKqFa3Qn, ildlPXOKXsS6o6REA.qib4t5hZYfQI7F37T);
        List<IOperationProvider> ioperationProviderList = new List<IOperationProvider>();
        ioperationProviderList.Add(ioperationProvider2);
        ioperationProviderList.Add(ioperationProvider1);
        return ioperationProviderList;
      }
      IOperationProvider ioperationProvider = (IOperationProvider) new Conditional(conditionalTokens, ildlPXOKXsS6o6REA.Nsv35rd7ltn4azif9, ildlPXOKXsS6o6REA.SRt84RIyEkJRQQvHB, conditionEvaluator, ildlPXOKXsS6o6REA.ly41tHHplWKqFa3Qn, ildlPXOKXsS6o6REA.qib4t5hZYfQI7F37T);
      List<IOperationProvider> ioperationProviderList1 = new List<IOperationProvider>();
      ioperationProviderList1.Add(ioperationProvider);
      return ioperationProviderList1;
    }
  }
}
