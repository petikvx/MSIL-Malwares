// Decompiled with JetBrains decompiler
// Type: Mooreming.AstromechDroid
// Assembly: EventListe, Version=1.0.2.0, Culture=neutral, PublicKeyToken=null
// MVID: 17402B6D-E2A2-428E-97AD-7F2170B297A3
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.06\Backdoor.Win32.Buterat.frsq-f1c24055722dc6f94c4b223ed4a7bce8ffb5c5bb3030bca735d6ceab513d8d31.exe

using System;
using System.Threading;

namespace Mooreming
{
  internal class AstromechDroid : UtilityDroid
  {
    protected bool hasFireExtinguisher;
    protected int numberOfShips;
    protected Decimal COST_PER_SHIP = 45.00M;

    public AstromechDroid(
      string Material,
      string Model,
      string Color,
      bool HasToolbox,
      bool HasComputerConnection,
      bool HasArm,
      bool HasFireExtinquisher,
      int NumberOfShips)
      : base(Material, Model, Color, HasToolbox, HasComputerConnection, HasArm)
    {
      this.hasFireExtinguisher = HasFireExtinquisher;
      this.numberOfShips = NumberOfShips;
    }

    public AstromechDroid()
    {
      this.model = "Astromech";
      this.hasFireExtinguisher = this.RandomFireExtinguisher();
      this.numberOfShips = this.RandomNumberOfShips();
      this.CalculateTotalCost();
    }

    protected override Decimal CalculateCostOfOptions()
    {
      Decimal costOfOptions = 0M + base.CalculateCostOfOptions();
      if (this.hasFireExtinguisher)
        costOfOptions += 35.00M;
      return costOfOptions;
    }

    protected virtual Decimal CalculateCostOfShips() => this.COST_PER_SHIP * (Decimal) this.numberOfShips;

    public override void CalculateTotalCost()
    {
      this.CalculateBaseCost();
      this.totalCost = this.baseCost + this.CalculateCostOfOptions() + this.CalculateCostOfShips();
    }

    public override string ToString() => base.ToString() + "Has Fire Extinguisher: " + this.hasFireExtinguisher.ToString() + Environment.NewLine + "Number Of Ships: " + this.numberOfShips.ToString() + Environment.NewLine;

    private bool RandomFireExtinguisher()
    {
      Random random = new Random();
      Thread.Sleep(5);
      return random.Next(0, 2) == 0;
    }

    private int RandomNumberOfShips()
    {
      Random random = new Random();
      Thread.Sleep(5);
      return random.Next(50);
    }
  }
}
