// Decompiled with JetBrains decompiler
// Type: AutoJack.View.GameView
// Assembly: ComAliasNameAttrib, Version=537.36.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B820B6E9-23AF-4643-975D-980B086C72E1
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Backdoor.MSIL.Androm.gen-0b37275104e988e90c25a836760e67a665acd79fa7f08899ccef66ad899ffdb0.exe

using AutoJack.common;
using AutoJack.Controller;
using AutoJack.Model;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.Linq;
using System.Timers;
using System.Windows.Forms;

namespace AutoJack.View
{
  public class GameView : Form
  {
    public GameController GameController;
    private System.Timers.Timer Timer;
    private int hour;
    private int minute;
    private int second;
    private IContainer components = (IContainer) null;
    private Panel LeftPanel;
    private Panel RightPanel;
    private Panel MiddlePanel;
    private Panel TimingPanel;
    private Panel UserBetPanel;
    private Panel GameControlPanel;
    private Panel UserStatPanel;
    private Panel DeckPanel;
    private Panel UserSumPanel;
    private Panel HouseBetPanel;
    private Panel HouseSumPanel;
    private PictureBox CardBack;
    private Label CardCount;
    private Label HouseHands;
    private Label DateLabel;
    private Label PlayerName;
    private Label PlayerWager;
    private Label UserWagerLabel;
    private Label UserBetLabel;
    private Label PlayerBet;
    private Button SurrenderButton;
    private Button StartButton;
    private Label Rule2Label;
    private Label Rule1Label;
    private Label HouseLabel;
    private Label HouseHand2Count;
    private Label HouseHand1Count;
    private Button AutoBetButton;
    private Button BetButton;
    private Label PlayerHand2Sum;
    private Label PlayerHand2Count;
    private Label PlayerHand1Sum;
    private Label PlayerHand1Count;
    private Label PlayerHands;
    private Label HouseWager;
    private Label HouseWagerLabel;
    private Label HouseBetLabel;
    private Label HouseBet;
    private Label PlayerStreak;
    private Label StreakLabel;
    private Label BalanceLabel;
    private Label PlayerBalance;
    private Panel ControlPanel;
    private Button DoubleButton;
    private Button HitButton;
    private Button StandButton;
    private Button SplitButton;
    private Button QuitButton;
    private FlowLayoutPanel HouseHandCards;
    private FlowLayoutPanel PlayerHandCards;
    private Button FlipButton;
    private Label TurnLabel;
    private Label TurnLabelLabel;
    private Label TimeLabel;
    private Label Rule3Label;
    private Label HouseActionLabel;
    private Label LogLabel;
    private ToolTip LogTooltip;

    public GameView(GameController GameController)
    {
      this.GameController = GameController;
      this.InitializeComponent();
      this.DateLabel.Text = DateTime.Now.ToString("dd/MM/yyyy");
      this.SetTimeValues(DateTime.Now.ToString("HH mm ss"));
      this.Timer = new System.Timers.Timer() { Interval = 1000.0 };
      this.Timer.Elapsed += new ElapsedEventHandler(this.TimeWrapEvent);
      this.Timer.Start();
      this.StartButton.Click += new EventHandler(this.BeginGameEvent);
      this.QuitButton.Click += new EventHandler(this.QuitGameEvent);
      this.BetButton.Click += new EventHandler(this.PlaceBetEvent);
      this.AutoBetButton.Click += new EventHandler(this.AutoBetEventAsync);
      this.KeyDown += new KeyEventHandler(this.KeyCombinationQuit);
      this.StandButton.Click += new EventHandler(this.PlayerStandEvent);
      this.HitButton.Click += new EventHandler(this.PlayerHitEvent);
      this.DoubleButton.Click += new EventHandler(this.PlayerDoubleEvent);
      this.SplitButton.Click += new EventHandler(this.PlayerSplitEvent);
      this.FlipButton.Click += new EventHandler(this.PlayerFlipHandEvent);
      this.SurrenderButton.Click += new EventHandler(this.PlayerGiveUpEvent);
    }

    private void SetTimeValues(string Time)
    {
      string[] strArray = Time.Split(' ');
      int.TryParse(strArray[0], out this.hour);
      int.TryParse(strArray[1], out this.minute);
      int.TryParse(strArray[2], out this.second);
    }

    private void TimeWrapEvent(object sender, ElapsedEventArgs e) => this.Invoke((Delegate) (() =>
    {
      if (++this.second == 60)
      {
        this.second = 0;
        ++this.minute;
      }
      if (this.minute == 60)
      {
        this.minute = 0;
        ++this.hour;
      }
      this.TimeLabel.Text = (this.hour < 10 ? "0" : "") + this.hour.ToString() + (this.minute < 10 ? ":0" : ":") + this.minute.ToString() + (this.second < 10 ? ":0" : ":") + this.second.ToString();
    }));

    public void SetLabels(Game Game)
    {
      this.TurnLabel.Text = Game.TurnWho == -1 ? "Waiting" : (Game.TurnWho % 2 == 0 ? "Player" : "House");
      this.PlayerName.Text = Game.Player.Name.ToUpper();
      this.PlayerBet.Text = Game.Player.Bet.ToString();
      while (this.PlayerBet.Width < TextRenderer.MeasureText(this.PlayerBet.Text, new Font(this.PlayerBet.Font.FontFamily, this.PlayerBet.Font.Size, this.PlayerBet.Font.Style)).Width)
        this.PlayerBet.Font = new Font(this.PlayerBet.Font.FontFamily, this.PlayerBet.Font.Size - 0.5f, this.PlayerBet.Font.Style);
      Label playerWager = this.PlayerWager;
      int num = Game.Player.Insurance;
      string str1 = num.ToString();
      playerWager.Text = str1;
      Label playerBalance = this.PlayerBalance;
      string str2;
      if (Game.Player.Balance != 0)
      {
        num = Game.Player.Balance;
        str2 = num.ToString();
      }
      else
      {
        num = Game.Player.Owing;
        str2 = "-" + num.ToString();
      }
      playerBalance.Text = str2;
      Label playerStreak = this.PlayerStreak;
      num = Game.Player.CurrentStreak;
      string str3 = num.ToString();
      playerStreak.Text = str3;
      this.PlayerHands.Text = "Hands: " + (Game.ShouldWarn ? (Game.Player.Hand1.Count == 0 && Game.Player.Hand2.Count != 0 || Game.Player.Hand1.Count != 0 && Game.Player.Hand2.Count == 0 ? "1" : "2") : "0");
      Label playerHand1Count = this.PlayerHand1Count;
      string str4;
      if (!Game.ShouldWarn)
      {
        str4 = "0";
      }
      else
      {
        num = Game.Player.Hand1.Count;
        str4 = num.ToString();
      }
      string str5 = "Hand1 Count: " + str4;
      playerHand1Count.Text = str5;
      Label playerHand1Sum = this.PlayerHand1Sum;
      num = Game.GetHandSumFor(Game.Player.Hand1);
      string str6 = "Hand1 Sum: " + num.ToString();
      playerHand1Sum.Text = str6;
      Label playerHand2Count = this.PlayerHand2Count;
      string str7;
      if (!Game.ShouldWarn)
      {
        str7 = "0";
      }
      else
      {
        num = Game.Player.Hand2.Count;
        str7 = num.ToString();
      }
      string str8 = "Hand2 Count: " + str7;
      playerHand2Count.Text = str8;
      Label playerHand2Sum = this.PlayerHand2Sum;
      num = Game.GetHandSumFor(Game.Player.Hand2);
      string str9 = "Hand2 Sum: " + num.ToString();
      playerHand2Sum.Text = str9;
      Label houseBet = this.HouseBet;
      num = Game.Machine.Bet;
      string str10 = num.ToString();
      houseBet.Text = str10;
      while (this.HouseBet.Width < TextRenderer.MeasureText(this.HouseBet.Text, new Font(this.HouseBet.Font.FontFamily, this.HouseBet.Font.Size, this.HouseBet.Font.Style)).Width)
        this.HouseBet.Font = new Font(this.HouseBet.Font.FontFamily, this.HouseBet.Font.Size - 0.5f, this.HouseBet.Font.Style);
      Label houseWager = this.HouseWager;
      num = Game.Machine.Insurance;
      string str11 = num.ToString();
      houseWager.Text = str11;
      Label cardCount = this.CardCount;
      string str12;
      if (!Game.ShouldWarn)
      {
        str12 = "SEALED";
      }
      else
      {
        num = Game.Deck.Count;
        str12 = num.ToString();
      }
      cardCount.Text = str12;
      this.HouseHands.Text = "Hands: " + (Game.ShouldWarn ? (Game.Machine.Hand1.Count == 0 && Game.Machine.Hand2.Count != 0 || Game.Machine.Hand1.Count != 0 && Game.Machine.Hand2.Count == 0 ? "1" : "2") : "0");
      Label houseHand1Count = this.HouseHand1Count;
      string str13;
      if (!Game.ShouldWarn)
      {
        str13 = "0";
      }
      else
      {
        num = Game.Machine.Hand1.Count;
        str13 = num.ToString();
      }
      string str14 = "Hand1 Count: " + str13;
      houseHand1Count.Text = str14;
      Label houseHand2Count = this.HouseHand2Count;
      string str15;
      if (!Game.ShouldWarn)
      {
        str15 = "0";
      }
      else
      {
        num = Game.Machine.Hand2.Count;
        str15 = num.ToString();
      }
      string str16 = "Hand2 Count: " + str15;
      houseHand2Count.Text = str16;
    }

    public void ToggleButtonsOnGameBegin()
    {
      this.BetButton.Enabled = true;
      this.AutoBetButton.Enabled = true;
      this.StartButton.Enabled = false;
    }

    public void ToogleGameButtonsState(Game Game)
    {
      if (Game.Player.Hand2.Count <= 1)
      {
        if (Game.GetHandSumFor(Game.Player.Hand1) < 16)
        {
          this.StandButton.Enabled = false;
          this.FlipButton.Enabled = false;
        }
        else if (Game.GetHandSumFor(Game.Player.Hand1) <= 21)
        {
          this.StandButton.Enabled = true;
          this.FlipButton.Enabled = true;
        }
        else
        {
          this.StandButton.Enabled = false;
          this.FlipButton.Enabled = false;
        }
        this.SplitButton.Enabled = Game.CheckIdenticalHand("Player", "Hand1");
      }
      else
      {
        bool flag1 = false;
        bool flag2 = false;
        bool flag3 = false;
        bool flag4 = false;
        if (Game.GetHandSumFor(Game.Player.Hand1) >= 16 && Game.GetHandSumFor(Game.Player.Hand1) <= 21)
        {
          flag1 = true;
          flag3 = true;
        }
        if (Game.GetHandSumFor(Game.Player.Hand2) >= 16 && Game.GetHandSumFor(Game.Player.Hand2) <= 21)
        {
          flag2 = true;
          flag4 = true;
        }
        this.StandButton.Enabled = flag1 | flag2;
        this.FlipButton.Enabled = flag3 | flag4;
        this.SplitButton.Enabled = false;
      }
    }

    public void DisableHitAndDoubleButtons()
    {
      this.HitButton.Enabled = false;
      this.DoubleButton.Enabled = false;
    }

    public void EnableHitAndDoubleButtons()
    {
      this.HitButton.Enabled = true;
      this.DoubleButton.Enabled = true;
    }

    public void DisableQuit() => this.QuitButton.Enabled = false;

    public void EnableQuit() => this.QuitButton.Enabled = true;

    public void EnableSurrender() => this.SurrenderButton.Enabled = true;

    public void DisableBetButtons()
    {
      this.BetButton.Enabled = false;
      this.AutoBetButton.Enabled = false;
    }

    public void EnableBetButtons()
    {
      this.BetButton.Enabled = true;
      this.AutoBetButton.Enabled = true;
    }

    private void PlaceBetEvent(object sender, EventArgs e) => this.GameController.TakeBet();

    public void SetLogText(string Logs)
    {
      string[] strArray = Logs.Split(';');
      this.HouseActionLabel.Text = "Last Action: " + strArray[strArray.Length - 2];
      string caption = string.Empty;
      for (int index = 0; index < strArray.Length - 1; ++index)
        caption = caption + (index + 1).ToString() + ". " + strArray[index] + ";\n";
      this.LogTooltip.SetToolTip((Control) this.LogLabel, caption);
    }

    internal void RenderSingleHandAsyncFor(string Who, List<Card> Hand, bool IsFlip)
    {
      if (Who == "Player")
        this.PlayerHandCards.Controls.Clear();
      else
        this.HouseHandCards.Controls.Clear();
      foreach (Card Card in Hand)
      {
        PictureBox CardPhoto = new PictureBox();
        if (Who == "Player")
        {
          Panel HandCard = new Panel();
          this.PlayerHandCards.Controls.Add((Control) HandCard);
          this.RenderCardToPanelForPlayer(Card, CardPhoto, HandCard, IsFlip);
        }
        else
        {
          this.RenderCardToPanelForHouse(Card, CardPhoto, IsFlip);
          this.HouseHandCards.Controls.Add((Control) CardPhoto);
        }
      }
    }

    internal void RenderDoubleHandAsyncFor(string Who, Game Game, bool IsFlip1, bool IsFlip2)
    {
      FlowLayoutPanel flowLayoutPanel1 = new FlowLayoutPanel();
      FlowLayoutPanel flowLayoutPanel2 = new FlowLayoutPanel();
      flowLayoutPanel1.Location = new Point(3, 3);
      flowLayoutPanel1.Size = new Size(427, 299);
      flowLayoutPanel1.TabIndex = 0;
      flowLayoutPanel2.Location = new Point(436, 3);
      flowLayoutPanel2.Size = new Size(427, 299);
      flowLayoutPanel2.TabIndex = 1;
      if (Who == "Player")
      {
        this.PlayerHandCards.Controls.Clear();
        this.PlayerHandCards.Controls.Add((Control) flowLayoutPanel1);
        this.PlayerHandCards.Controls.Add((Control) flowLayoutPanel2);
        Panel HandCard = new Panel();
        foreach (Card Card in Game.Player.Hand1.ToList<Card>())
        {
          flowLayoutPanel1.Controls.Add((Control) HandCard);
          PictureBox CardPhoto = new PictureBox();
          this.RenderCardToPanelForPlayer(Card, CardPhoto, HandCard, IsFlip1);
        }
        foreach (Card Card in Game.Player.Hand2.ToList<Card>())
        {
          flowLayoutPanel2.Controls.Add((Control) HandCard);
          PictureBox CardPhoto = new PictureBox();
          this.RenderCardToPanelForPlayer(Card, CardPhoto, HandCard, IsFlip2);
        }
      }
      else
      {
        this.HouseHandCards.Controls.Clear();
        this.HouseHandCards.Controls.Add((Control) flowLayoutPanel1);
        this.HouseHandCards.Controls.Add((Control) flowLayoutPanel2);
        foreach (Card Card in Game.Machine.Hand1.ToList<Card>())
        {
          PictureBox CardPhoto = new PictureBox();
          this.RenderCardToPanelForHouse(Card, CardPhoto, IsFlip1);
          flowLayoutPanel1.Controls.Add((Control) CardPhoto);
        }
        foreach (Card Card in Game.Machine.Hand2.ToList<Card>())
        {
          PictureBox CardPhoto = new PictureBox();
          this.RenderCardToPanelForHouse(Card, CardPhoto, IsFlip2);
          flowLayoutPanel2.Controls.Add((Control) CardPhoto);
        }
      }
    }

    private void RenderCardToPanelForPlayer(
      Card Card,
      PictureBox CardPhoto,
      Panel HandCard,
      bool IsFlipped)
    {
      HandCard.SuspendLayout();
      HandCard.Location = new Point(3, 3);
      HandCard.Size = new Size(200, 299);
      HandCard.TabIndex = 0;
      HandCard.ResumeLayout();
      PictureBox pictureBox = new PictureBox();
      ((ISupportInitialize) pictureBox).BeginInit();
      pictureBox.Location = new Point(87, 3);
      pictureBox.Size = new Size(25, 35);
      pictureBox.SizeMode = PictureBoxSizeMode.StretchImage;
      pictureBox.TabIndex = 1;
      pictureBox.TabStop = false;
      ((ISupportInitialize) pictureBox).EndInit();
      ((ISupportInitialize) CardPhoto).BeginInit();
      CardPhoto.Image = Image.FromFile(Utility.GetBasePath() + "resources\\deck\\" + Card.Pip.ToString() + Card.Suit.ToString() + ".png");
      CardPhoto.Location = new Point(13, 42);
      CardPhoto.Size = new Size(173, 257);
      CardPhoto.TabIndex = 0;
      CardPhoto.TabStop = false;
      ((ISupportInitialize) CardPhoto).EndInit();
      HandCard.Controls.Add((Control) pictureBox);
      HandCard.Controls.Add((Control) CardPhoto);
    }

    private void RenderCardToPanelForHouse(Card Card, PictureBox CardPhoto, bool IsFlipped)
    {
    }

    private void AutoBetEventAsync(object sender, EventArgs e)
    {
    }

    private void BeginGameEvent(object sender, EventArgs e) => this.GameController.BeginGame();

    private void PlayerStandEvent(object sender, EventArgs e) => this.GameController.ControlButtonsClick("StandButton");

    private void PlayerHitEvent(object sender, EventArgs e) => this.GameController.ControlButtonsClick("HitButton");

    private void PlayerDoubleEvent(object sender, EventArgs e) => this.GameController.ControlButtonsClick("DoubleButton");

    private void PlayerSplitEvent(object sender, EventArgs e) => this.GameController.ControlButtonsClick("SplitButton");

    private void PlayerFlipHandEvent(object sender, EventArgs e) => this.GameController.ControlButtonsClick("FlipButton");

    private void PlayerGiveUpEvent(object sender, EventArgs e) => this.GameController.ControlButtonsClick("SurrenderButton");

    private void QuitGameEvent(object sender, EventArgs e)
    {
      if (this.GameController.Game.ShouldWarn)
      {
        if (!MessageBox.Show("A game is currently active. Continue?", "Quit Game", MessageBoxButtons.OKCancel, MessageBoxIcon.Asterisk).Equals((object) DialogResult.OK))
          return;
        GC.Collect();
        this.Timer.Stop();
        this.Close();
      }
      else
      {
        GC.Collect();
        this.Timer.Stop();
        this.Close();
      }
    }

    private void KeyCombinationQuit(object sender, KeyEventArgs e)
    {
      if (!e.Alt || e.KeyCode != Keys.F4)
        return;
      e.Handled = true;
      this.QuitButton.PerformClick();
    }

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(disposing);
    }

    private void InitializeComponent()
    {
      this.components = (IContainer) new Container();
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (GameView));
      this.LeftPanel = new Panel();
      this.TimingPanel = new Panel();
      this.TimeLabel = new Label();
      this.DateLabel = new Label();
      this.TurnLabel = new Label();
      this.TurnLabelLabel = new Label();
      this.UserBetPanel = new Panel();
      this.AutoBetButton = new Button();
      this.BetButton = new Button();
      this.PlayerWager = new Label();
      this.UserWagerLabel = new Label();
      this.UserBetLabel = new Label();
      this.PlayerBet = new Label();
      this.PlayerName = new Label();
      this.RightPanel = new Panel();
      this.GameControlPanel = new Panel();
      this.QuitButton = new Button();
      this.SurrenderButton = new Button();
      this.StartButton = new Button();
      this.UserStatPanel = new Panel();
      this.ControlPanel = new Panel();
      this.FlipButton = new Button();
      this.DoubleButton = new Button();
      this.HitButton = new Button();
      this.StandButton = new Button();
      this.SplitButton = new Button();
      this.PlayerStreak = new Label();
      this.StreakLabel = new Label();
      this.BalanceLabel = new Label();
      this.PlayerBalance = new Label();
      this.DeckPanel = new Panel();
      this.CardBack = new PictureBox();
      this.CardCount = new Label();
      this.MiddlePanel = new Panel();
      this.UserSumPanel = new Panel();
      this.PlayerHand2Sum = new Label();
      this.PlayerHand2Count = new Label();
      this.PlayerHand1Sum = new Label();
      this.PlayerHand1Count = new Label();
      this.PlayerHands = new Label();
      this.HouseBetPanel = new Panel();
      this.Rule3Label = new Label();
      this.HouseWager = new Label();
      this.HouseWagerLabel = new Label();
      this.HouseBetLabel = new Label();
      this.HouseBet = new Label();
      this.Rule2Label = new Label();
      this.Rule1Label = new Label();
      this.HouseLabel = new Label();
      this.HouseSumPanel = new Panel();
      this.LogLabel = new Label();
      this.HouseActionLabel = new Label();
      this.HouseHand2Count = new Label();
      this.HouseHand1Count = new Label();
      this.HouseHands = new Label();
      this.HouseHandCards = new FlowLayoutPanel();
      this.PlayerHandCards = new FlowLayoutPanel();
      this.LogTooltip = new ToolTip(this.components);
      this.LeftPanel.SuspendLayout();
      this.TimingPanel.SuspendLayout();
      this.UserBetPanel.SuspendLayout();
      this.RightPanel.SuspendLayout();
      this.GameControlPanel.SuspendLayout();
      this.UserStatPanel.SuspendLayout();
      this.ControlPanel.SuspendLayout();
      this.DeckPanel.SuspendLayout();
      ((ISupportInitialize) this.CardBack).BeginInit();
      this.MiddlePanel.SuspendLayout();
      this.UserSumPanel.SuspendLayout();
      this.HouseBetPanel.SuspendLayout();
      this.HouseSumPanel.SuspendLayout();
      this.SuspendLayout();
      this.LeftPanel.BorderStyle = BorderStyle.FixedSingle;
      this.LeftPanel.Controls.Add((Control) this.TimingPanel);
      this.LeftPanel.Controls.Add((Control) this.UserBetPanel);
      this.LeftPanel.Location = new Point(32, 29);
      this.LeftPanel.Margin = new Padding(8, 7, 8, 7);
      this.LeftPanel.Name = "LeftPanel";
      this.LeftPanel.Size = new Size(530, 1619);
      this.LeftPanel.TabIndex = 0;
      this.TimingPanel.BorderStyle = BorderStyle.FixedSingle;
      this.TimingPanel.Controls.Add((Control) this.TimeLabel);
      this.TimingPanel.Controls.Add((Control) this.DateLabel);
      this.TimingPanel.Controls.Add((Control) this.TurnLabel);
      this.TimingPanel.Controls.Add((Control) this.TurnLabelLabel);
      this.TimingPanel.Location = new Point(-3, 720);
      this.TimingPanel.Margin = new Padding(8, 7, 8, 7);
      this.TimingPanel.Name = "TimingPanel";
      this.TimingPanel.Size = new Size(530, 174);
      this.TimingPanel.TabIndex = 1;
      this.TimeLabel.Font = new Font("Microsoft Sans Serif", 8.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.TimeLabel.Location = new Point(-3, 48);
      this.TimeLabel.Margin = new Padding(8, 0, 8, 0);
      this.TimeLabel.Name = "TimeLabel";
      this.TimeLabel.Size = new Size(533, 38);
      this.TimeLabel.TabIndex = 5;
      this.TimeLabel.Text = "00:00:00";
      this.TimeLabel.TextAlign = ContentAlignment.TopCenter;
      this.DateLabel.Dock = DockStyle.Top;
      this.DateLabel.Font = new Font("Microsoft Sans Serif", 12f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.DateLabel.Location = new Point(0, 0);
      this.DateLabel.Margin = new Padding(8, 0, 8, 0);
      this.DateLabel.Name = "DateLabel";
      this.DateLabel.Size = new Size(528, 38);
      this.DateLabel.TabIndex = 0;
      this.DateLabel.Text = "08/09/2018";
      this.DateLabel.TextAlign = ContentAlignment.TopCenter;
      this.TurnLabel.Font = new Font("Microsoft Sans Serif", 18f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.TurnLabel.ForeColor = Color.DarkGreen;
      this.TurnLabel.Location = new Point(216, 86);
      this.TurnLabel.Margin = new Padding(8, 0, 8, 0);
      this.TurnLabel.Name = "TurnLabel";
      this.TurnLabel.Size = new Size(304, 86);
      this.TurnLabel.TabIndex = 4;
      this.TurnLabel.Text = "Waiting";
      this.TurnLabel.TextAlign = ContentAlignment.MiddleCenter;
      this.TurnLabelLabel.Font = new Font("Microsoft Sans Serif", 12f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.TurnLabelLabel.ForeColor = Color.DarkGreen;
      this.TurnLabelLabel.Location = new Point(3, 110);
      this.TurnLabelLabel.Margin = new Padding(8, 0, 8, 0);
      this.TurnLabelLabel.Name = "TurnLabelLabel";
      this.TurnLabelLabel.Size = new Size(259, 55);
      this.TurnLabelLabel.TabIndex = 3;
      this.TurnLabelLabel.Text = "Turn:";
      this.TurnLabelLabel.TextAlign = ContentAlignment.MiddleCenter;
      this.UserBetPanel.BorderStyle = BorderStyle.FixedSingle;
      this.UserBetPanel.Controls.Add((Control) this.AutoBetButton);
      this.UserBetPanel.Controls.Add((Control) this.BetButton);
      this.UserBetPanel.Controls.Add((Control) this.PlayerWager);
      this.UserBetPanel.Controls.Add((Control) this.UserWagerLabel);
      this.UserBetPanel.Controls.Add((Control) this.UserBetLabel);
      this.UserBetPanel.Controls.Add((Control) this.PlayerBet);
      this.UserBetPanel.Controls.Add((Control) this.PlayerName);
      this.UserBetPanel.Location = new Point(-3, 904);
      this.UserBetPanel.Margin = new Padding(8, 7, 8, 7);
      this.UserBetPanel.Name = "UserBetPanel";
      this.UserBetPanel.Size = new Size(530, 713);
      this.UserBetPanel.TabIndex = 0;
      this.AutoBetButton.Enabled = false;
      this.AutoBetButton.Location = new Point(296, 610);
      this.AutoBetButton.Margin = new Padding(8, 7, 8, 7);
      this.AutoBetButton.Name = "AutoBetButton";
      this.AutoBetButton.Size = new Size(200, 55);
      this.AutoBetButton.TabIndex = 6;
      this.AutoBetButton.Text = "Auto Bet";
      this.AutoBetButton.UseVisualStyleBackColor = true;
      this.BetButton.Enabled = false;
      this.BetButton.Location = new Point(32, 610);
      this.BetButton.Margin = new Padding(8, 7, 8, 7);
      this.BetButton.Name = "BetButton";
      this.BetButton.Size = new Size(200, 55);
      this.BetButton.TabIndex = 5;
      this.BetButton.Text = "Place A Bet";
      this.BetButton.UseVisualStyleBackColor = true;
      this.PlayerWager.Font = new Font("Microsoft Sans Serif", 27.75f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.PlayerWager.ForeColor = Color.DarkRed;
      this.PlayerWager.Location = new Point(-3, 436);
      this.PlayerWager.Margin = new Padding(8, 0, 8, 0);
      this.PlayerWager.Name = "PlayerWager";
      this.PlayerWager.Size = new Size(531, 100);
      this.PlayerWager.TabIndex = 4;
      this.PlayerWager.Text = "0";
      this.PlayerWager.TextAlign = ContentAlignment.MiddleCenter;
      this.UserWagerLabel.Font = new Font("Microsoft Sans Serif", 8.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.UserWagerLabel.Location = new Point(-3, 405);
      this.UserWagerLabel.Margin = new Padding(8, 0, 8, 0);
      this.UserWagerLabel.Name = "UserWagerLabel";
      this.UserWagerLabel.Size = new Size(533, 31);
      this.UserWagerLabel.TabIndex = 3;
      this.UserWagerLabel.Text = "WAGER";
      this.UserWagerLabel.TextAlign = ContentAlignment.MiddleCenter;
      this.UserBetLabel.Font = new Font("Microsoft Sans Serif", 8.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.UserBetLabel.Location = new Point(-3, 165);
      this.UserBetLabel.Margin = new Padding(8, 0, 8, 0);
      this.UserBetLabel.Name = "UserBetLabel";
      this.UserBetLabel.Size = new Size(533, 31);
      this.UserBetLabel.TabIndex = 2;
      this.UserBetLabel.Text = "BET";
      this.UserBetLabel.TextAlign = ContentAlignment.MiddleCenter;
      this.PlayerBet.Font = new Font("Microsoft Sans Serif", 48f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.PlayerBet.ForeColor = Color.DarkRed;
      this.PlayerBet.Location = new Point(-3, 196);
      this.PlayerBet.Margin = new Padding(8, 0, 8, 0);
      this.PlayerBet.Name = "PlayerBet";
      this.PlayerBet.Size = new Size(533, 174);
      this.PlayerBet.TabIndex = 1;
      this.PlayerBet.Text = "0";
      this.PlayerBet.TextAlign = ContentAlignment.MiddleCenter;
      this.PlayerName.Dock = DockStyle.Top;
      this.PlayerName.Font = new Font("Microsoft Sans Serif", 15.75f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.PlayerName.ForeColor = Color.MidnightBlue;
      this.PlayerName.Location = new Point(0, 0);
      this.PlayerName.Margin = new Padding(8, 0, 8, 0);
      this.PlayerName.Name = "PlayerName";
      this.PlayerName.Size = new Size(528, 60);
      this.PlayerName.TabIndex = 0;
      this.PlayerName.Text = "PLAYER NAME";
      this.PlayerName.TextAlign = ContentAlignment.MiddleCenter;
      this.RightPanel.BorderStyle = BorderStyle.FixedSingle;
      this.RightPanel.Controls.Add((Control) this.GameControlPanel);
      this.RightPanel.Controls.Add((Control) this.UserStatPanel);
      this.RightPanel.Controls.Add((Control) this.DeckPanel);
      this.RightPanel.Location = new Point(2912, 29);
      this.RightPanel.Margin = new Padding(8, 7, 8, 7);
      this.RightPanel.Name = "RightPanel";
      this.RightPanel.Size = new Size(530, 1619);
      this.RightPanel.TabIndex = 1;
      this.GameControlPanel.BorderStyle = BorderStyle.FixedSingle;
      this.GameControlPanel.Controls.Add((Control) this.QuitButton);
      this.GameControlPanel.Controls.Add((Control) this.SurrenderButton);
      this.GameControlPanel.Controls.Add((Control) this.StartButton);
      this.GameControlPanel.Location = new Point(-3, 1443);
      this.GameControlPanel.Margin = new Padding(8, 7, 8, 7);
      this.GameControlPanel.Name = "GameControlPanel";
      this.GameControlPanel.Size = new Size(530, 174);
      this.GameControlPanel.TabIndex = 2;
      this.QuitButton.BackColor = Color.OrangeRed;
      this.QuitButton.Location = new Point(320, 110);
      this.QuitButton.Margin = new Padding(8, 7, 8, 7);
      this.QuitButton.Name = "QuitButton";
      this.QuitButton.Size = new Size(200, 55);
      this.QuitButton.TabIndex = 2;
      this.QuitButton.Text = "Quit";
      this.QuitButton.UseVisualStyleBackColor = false;
      this.SurrenderButton.BackColor = Color.OrangeRed;
      this.SurrenderButton.Enabled = false;
      this.SurrenderButton.Location = new Point(8, 110);
      this.SurrenderButton.Margin = new Padding(8, 7, 8, 7);
      this.SurrenderButton.Name = "SurrenderButton";
      this.SurrenderButton.Size = new Size(200, 55);
      this.SurrenderButton.TabIndex = 1;
      this.SurrenderButton.Text = "Surrender";
      this.SurrenderButton.UseVisualStyleBackColor = false;
      this.StartButton.BackColor = Color.LimeGreen;
      this.StartButton.Font = new Font("Microsoft Sans Serif", 12f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.StartButton.Location = new Point(72, 10);
      this.StartButton.Margin = new Padding(8, 7, 8, 7);
      this.StartButton.Name = "StartButton";
      this.StartButton.Size = new Size(384, 88);
      this.StartButton.TabIndex = 0;
      this.StartButton.Text = "START GAME";
      this.StartButton.UseVisualStyleBackColor = false;
      this.UserStatPanel.BorderStyle = BorderStyle.FixedSingle;
      this.UserStatPanel.Controls.Add((Control) this.ControlPanel);
      this.UserStatPanel.Controls.Add((Control) this.PlayerStreak);
      this.UserStatPanel.Controls.Add((Control) this.StreakLabel);
      this.UserStatPanel.Controls.Add((Control) this.BalanceLabel);
      this.UserStatPanel.Controls.Add((Control) this.PlayerBalance);
      this.UserStatPanel.Location = new Point(-3, 806);
      this.UserStatPanel.Margin = new Padding(8, 7, 8, 7);
      this.UserStatPanel.Name = "UserStatPanel";
      this.UserStatPanel.Size = new Size(530, 627);
      this.UserStatPanel.TabIndex = 1;
      this.ControlPanel.BorderStyle = BorderStyle.FixedSingle;
      this.ControlPanel.Controls.Add((Control) this.FlipButton);
      this.ControlPanel.Controls.Add((Control) this.DoubleButton);
      this.ControlPanel.Controls.Add((Control) this.HitButton);
      this.ControlPanel.Controls.Add((Control) this.StandButton);
      this.ControlPanel.Controls.Add((Control) this.SplitButton);
      this.ControlPanel.Location = new Point(-3, 389);
      this.ControlPanel.Margin = new Padding(8, 7, 8, 7);
      this.ControlPanel.Name = "ControlPanel";
      this.ControlPanel.Size = new Size(530, 236);
      this.ControlPanel.TabIndex = 7;
      this.FlipButton.Enabled = false;
      this.FlipButton.Location = new Point(163, 165);
      this.FlipButton.Margin = new Padding(8, 7, 8, 7);
      this.FlipButton.Name = "FlipButton";
      this.FlipButton.Size = new Size(200, 55);
      this.FlipButton.TabIndex = 4;
      this.FlipButton.Text = "Flip Hand";
      this.FlipButton.UseVisualStyleBackColor = true;
      this.DoubleButton.Enabled = false;
      this.DoubleButton.Location = new Point(35, 93);
      this.DoubleButton.Margin = new Padding(8, 7, 8, 7);
      this.DoubleButton.Name = "DoubleButton";
      this.DoubleButton.Size = new Size(200, 55);
      this.DoubleButton.TabIndex = 3;
      this.DoubleButton.Text = "Double";
      this.DoubleButton.UseVisualStyleBackColor = true;
      this.HitButton.Enabled = false;
      this.HitButton.Location = new Point(285, 17);
      this.HitButton.Margin = new Padding(8, 7, 8, 7);
      this.HitButton.Name = "HitButton";
      this.HitButton.Size = new Size(200, 55);
      this.HitButton.TabIndex = 2;
      this.HitButton.Text = "Hit";
      this.HitButton.UseVisualStyleBackColor = true;
      this.StandButton.Enabled = false;
      this.StandButton.Location = new Point(35, 17);
      this.StandButton.Margin = new Padding(8, 7, 8, 7);
      this.StandButton.Name = "StandButton";
      this.StandButton.Size = new Size(200, 55);
      this.StandButton.TabIndex = 1;
      this.StandButton.Text = "Stand";
      this.StandButton.UseVisualStyleBackColor = true;
      this.SplitButton.Enabled = false;
      this.SplitButton.Location = new Point(285, 93);
      this.SplitButton.Margin = new Padding(8, 7, 8, 7);
      this.SplitButton.Name = "SplitButton";
      this.SplitButton.Size = new Size(200, 55);
      this.SplitButton.TabIndex = 0;
      this.SplitButton.Text = "Split";
      this.SplitButton.UseVisualStyleBackColor = true;
      this.PlayerStreak.Font = new Font("Microsoft Sans Serif", 27.75f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.PlayerStreak.ForeColor = Color.DarkRed;
      this.PlayerStreak.Location = new Point(-3, 265);
      this.PlayerStreak.Margin = new Padding(8, 0, 8, 0);
      this.PlayerStreak.Name = "PlayerStreak";
      this.PlayerStreak.Size = new Size(533, 100);
      this.PlayerStreak.TabIndex = 6;
      this.PlayerStreak.Text = "0";
      this.PlayerStreak.TextAlign = ContentAlignment.MiddleCenter;
      this.StreakLabel.Font = new Font("Microsoft Sans Serif", 8.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.StreakLabel.Location = new Point(-3, 234);
      this.StreakLabel.Margin = new Padding(8, 0, 8, 0);
      this.StreakLabel.Name = "StreakLabel";
      this.StreakLabel.Size = new Size(533, 31);
      this.StreakLabel.TabIndex = 5;
      this.StreakLabel.Text = "Current Streak";
      this.StreakLabel.TextAlign = ContentAlignment.MiddleCenter;
      this.BalanceLabel.Font = new Font("Microsoft Sans Serif", 8.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.BalanceLabel.Location = new Point(-3, 41);
      this.BalanceLabel.Margin = new Padding(8, 0, 8, 0);
      this.BalanceLabel.Name = "BalanceLabel";
      this.BalanceLabel.Size = new Size(533, 31);
      this.BalanceLabel.TabIndex = 4;
      this.BalanceLabel.Text = "BALANCE";
      this.BalanceLabel.TextAlign = ContentAlignment.MiddleCenter;
      this.PlayerBalance.Font = new Font("Microsoft Sans Serif", 36f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.PlayerBalance.ForeColor = Color.DarkRed;
      this.PlayerBalance.Location = new Point(-3, 62);
      this.PlayerBalance.Margin = new Padding(8, 0, 8, 0);
      this.PlayerBalance.Name = "PlayerBalance";
      this.PlayerBalance.Size = new Size(533, 131);
      this.PlayerBalance.TabIndex = 3;
      this.PlayerBalance.Text = "0";
      this.PlayerBalance.TextAlign = ContentAlignment.MiddleCenter;
      this.DeckPanel.BorderStyle = BorderStyle.FixedSingle;
      this.DeckPanel.Controls.Add((Control) this.CardBack);
      this.DeckPanel.Controls.Add((Control) this.CardCount);
      this.DeckPanel.Location = new Point(-3, -2);
      this.DeckPanel.Margin = new Padding(8, 7, 8, 7);
      this.DeckPanel.Name = "DeckPanel";
      this.DeckPanel.Size = new Size(530, 808);
      this.DeckPanel.TabIndex = 0;
      this.CardBack.Dock = DockStyle.Fill;
      this.CardBack.Location = new Point(0, 74);
      this.CardBack.Margin = new Padding(8, 7, 8, 7);
      this.CardBack.Name = "CardBack";
      this.CardBack.Size = new Size(528, 732);
      this.CardBack.SizeMode = PictureBoxSizeMode.StretchImage;
      this.CardBack.TabIndex = 1;
      this.CardBack.TabStop = false;
      this.CardCount.Dock = DockStyle.Top;
      this.CardCount.Font = new Font("Microsoft Sans Serif", 20.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.CardCount.ForeColor = Color.DarkRed;
      this.CardCount.Location = new Point(0, 0);
      this.CardCount.Margin = new Padding(8, 0, 8, 0);
      this.CardCount.Name = "CardCount";
      this.CardCount.Size = new Size(528, 74);
      this.CardCount.TabIndex = 0;
      this.CardCount.Text = "52";
      this.CardCount.TextAlign = ContentAlignment.MiddleCenter;
      this.MiddlePanel.BorderStyle = BorderStyle.FixedSingle;
      this.MiddlePanel.Controls.Add((Control) this.UserSumPanel);
      this.MiddlePanel.Location = new Point(581, 29);
      this.MiddlePanel.Margin = new Padding(8, 7, 8, 7);
      this.MiddlePanel.Name = "MiddlePanel";
      this.MiddlePanel.Size = new Size(2311, 1619);
      this.MiddlePanel.TabIndex = 2;
      this.UserSumPanel.BorderStyle = BorderStyle.FixedSingle;
      this.UserSumPanel.Controls.Add((Control) this.PlayerHand2Sum);
      this.UserSumPanel.Controls.Add((Control) this.PlayerHand2Count);
      this.UserSumPanel.Controls.Add((Control) this.PlayerHand1Sum);
      this.UserSumPanel.Controls.Add((Control) this.PlayerHand1Count);
      this.UserSumPanel.Controls.Add((Control) this.PlayerHands);
      this.UserSumPanel.Location = new Point(-3, 1548);
      this.UserSumPanel.Margin = new Padding(8, 7, 8, 7);
      this.UserSumPanel.Name = "UserSumPanel";
      this.UserSumPanel.Size = new Size(2311, 69);
      this.UserSumPanel.TabIndex = 0;
      this.PlayerHand2Sum.AutoSize = true;
      this.PlayerHand2Sum.Font = new Font("Microsoft Sans Serif", 8.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.PlayerHand2Sum.Location = new Point(2051, 21);
      this.PlayerHand2Sum.Margin = new Padding(8, 0, 8, 0);
      this.PlayerHand2Sum.Name = "PlayerHand2Sum";
      this.PlayerHand2Sum.Size = new Size(207, 32);
      this.PlayerHand2Sum.TabIndex = 4;
      this.PlayerHand2Sum.Text = "Hand2 Sum: 0";
      this.PlayerHand2Count.AutoSize = true;
      this.PlayerHand2Count.Font = new Font("Microsoft Sans Serif", 8.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.PlayerHand2Count.Location = new Point(1528, 21);
      this.PlayerHand2Count.Margin = new Padding(8, 0, 8, 0);
      this.PlayerHand2Count.Name = "PlayerHand2Count";
      this.PlayerHand2Count.Size = new Size(227, 32);
      this.PlayerHand2Count.TabIndex = 3;
      this.PlayerHand2Count.Text = "Hand2 Count: 0";
      this.PlayerHand1Sum.AutoSize = true;
      this.PlayerHand1Sum.Font = new Font("Microsoft Sans Serif", 8.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.PlayerHand1Sum.Location = new Point(957, 21);
      this.PlayerHand1Sum.Margin = new Padding(8, 0, 8, 0);
      this.PlayerHand1Sum.Name = "PlayerHand1Sum";
      this.PlayerHand1Sum.Size = new Size(216, 32);
      this.PlayerHand1Sum.TabIndex = 2;
      this.PlayerHand1Sum.Text = "Hand1Sum: 15";
      this.PlayerHand1Count.AutoSize = true;
      this.PlayerHand1Count.Font = new Font("Microsoft Sans Serif", 8.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.PlayerHand1Count.Location = new Point(435, 21);
      this.PlayerHand1Count.Margin = new Padding(8, 0, 8, 0);
      this.PlayerHand1Count.Name = "PlayerHand1Count";
      this.PlayerHand1Count.Size = new Size(227, 32);
      this.PlayerHand1Count.TabIndex = 1;
      this.PlayerHand1Count.Text = "Hand1 Count: 2";
      this.PlayerHands.AutoSize = true;
      this.PlayerHands.Font = new Font("Microsoft Sans Serif", 8.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.PlayerHands.Location = new Point(8, 21);
      this.PlayerHands.Margin = new Padding(8, 0, 8, 0);
      this.PlayerHands.Name = "PlayerHands";
      this.PlayerHands.Size = new Size(136, 32);
      this.PlayerHands.TabIndex = 0;
      this.PlayerHands.Text = "Hands: 1";
      this.HouseBetPanel.BorderStyle = BorderStyle.FixedSingle;
      this.HouseBetPanel.Controls.Add((Control) this.Rule3Label);
      this.HouseBetPanel.Controls.Add((Control) this.HouseWager);
      this.HouseBetPanel.Controls.Add((Control) this.HouseWagerLabel);
      this.HouseBetPanel.Controls.Add((Control) this.HouseBetLabel);
      this.HouseBetPanel.Controls.Add((Control) this.HouseBet);
      this.HouseBetPanel.Controls.Add((Control) this.Rule2Label);
      this.HouseBetPanel.Controls.Add((Control) this.Rule1Label);
      this.HouseBetPanel.Controls.Add((Control) this.HouseLabel);
      this.HouseBetPanel.Location = new Point(32, 29);
      this.HouseBetPanel.Margin = new Padding(8, 7, 8, 7);
      this.HouseBetPanel.Name = "HouseBetPanel";
      this.HouseBetPanel.Size = new Size(530, 713);
      this.HouseBetPanel.TabIndex = 0;
      this.Rule3Label.Font = new Font("Microsoft Sans Serif", 12f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Rule3Label.ForeColor = Color.DarkRed;
      this.Rule3Label.Location = new Point(-3, 212);
      this.Rule3Label.Margin = new Padding(8, 0, 8, 0);
      this.Rule3Label.Name = "Rule3Label";
      this.Rule3Label.Size = new Size(533, 48);
      this.Rule3Label.TabIndex = 9;
      this.Rule3Label.Text = "1 Split Per Game";
      this.Rule3Label.TextAlign = ContentAlignment.MiddleCenter;
      this.HouseWager.Font = new Font("Microsoft Sans Serif", 27.75f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.HouseWager.ForeColor = Color.DarkRed;
      this.HouseWager.Location = new Point(-3, 565);
      this.HouseWager.Margin = new Padding(8, 0, 8, 0);
      this.HouseWager.Name = "HouseWager";
      this.HouseWager.Size = new Size(533, 100);
      this.HouseWager.TabIndex = 8;
      this.HouseWager.Text = "0";
      this.HouseWager.TextAlign = ContentAlignment.MiddleCenter;
      this.HouseWagerLabel.Font = new Font("Microsoft Sans Serif", 8.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.HouseWagerLabel.Location = new Point(-3, 534);
      this.HouseWagerLabel.Margin = new Padding(8, 0, 8, 0);
      this.HouseWagerLabel.Name = "HouseWagerLabel";
      this.HouseWagerLabel.Size = new Size(533, 31);
      this.HouseWagerLabel.TabIndex = 7;
      this.HouseWagerLabel.Text = "WAGER";
      this.HouseWagerLabel.TextAlign = ContentAlignment.MiddleCenter;
      this.HouseBetLabel.Font = new Font("Microsoft Sans Serif", 8.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.HouseBetLabel.Location = new Point(-3, 293);
      this.HouseBetLabel.Margin = new Padding(8, 0, 8, 0);
      this.HouseBetLabel.Name = "HouseBetLabel";
      this.HouseBetLabel.Size = new Size(533, 31);
      this.HouseBetLabel.TabIndex = 6;
      this.HouseBetLabel.Text = "BET";
      this.HouseBetLabel.TextAlign = ContentAlignment.MiddleCenter;
      this.HouseBet.Font = new Font("Microsoft Sans Serif", 48f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.HouseBet.ForeColor = Color.DarkRed;
      this.HouseBet.Location = new Point(-3, 324);
      this.HouseBet.Margin = new Padding(8, 0, 8, 0);
      this.HouseBet.Name = "HouseBet";
      this.HouseBet.Size = new Size(533, 174);
      this.HouseBet.TabIndex = 5;
      this.HouseBet.Text = "0";
      this.HouseBet.TextAlign = ContentAlignment.MiddleCenter;
      this.Rule2Label.Font = new Font("Microsoft Sans Serif", 12f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Rule2Label.ForeColor = Color.DarkRed;
      this.Rule2Label.Location = new Point(-3, 153);
      this.Rule2Label.Margin = new Padding(8, 0, 8, 0);
      this.Rule2Label.Name = "Rule2Label";
      this.Rule2Label.Size = new Size(533, 48);
      this.Rule2Label.TabIndex = 2;
      this.Rule2Label.Text = "Insurance: Pay 2 to 1";
      this.Rule2Label.TextAlign = ContentAlignment.MiddleCenter;
      this.Rule1Label.Font = new Font("Microsoft Sans Serif", 12f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Rule1Label.ForeColor = Color.DarkRed;
      this.Rule1Label.Location = new Point(-3, 88);
      this.Rule1Label.Margin = new Padding(8, 0, 8, 0);
      this.Rule1Label.Name = "Rule1Label";
      this.Rule1Label.Size = new Size(533, 48);
      this.Rule1Label.TabIndex = 1;
      this.Rule1Label.Text = "Black Jack: Pay 3 to 2";
      this.Rule1Label.TextAlign = ContentAlignment.MiddleCenter;
      this.HouseLabel.Dock = DockStyle.Top;
      this.HouseLabel.Font = new Font("Microsoft Sans Serif", 15.75f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.HouseLabel.ForeColor = Color.MidnightBlue;
      this.HouseLabel.Location = new Point(0, 0);
      this.HouseLabel.Margin = new Padding(8, 0, 8, 0);
      this.HouseLabel.Name = "HouseLabel";
      this.HouseLabel.Size = new Size(528, 60);
      this.HouseLabel.TabIndex = 0;
      this.HouseLabel.Text = "THE HOUSE";
      this.HouseLabel.TextAlign = ContentAlignment.MiddleCenter;
      this.HouseSumPanel.BorderStyle = BorderStyle.FixedSingle;
      this.HouseSumPanel.Controls.Add((Control) this.LogLabel);
      this.HouseSumPanel.Controls.Add((Control) this.HouseActionLabel);
      this.HouseSumPanel.Controls.Add((Control) this.HouseHand2Count);
      this.HouseSumPanel.Controls.Add((Control) this.HouseHand1Count);
      this.HouseSumPanel.Controls.Add((Control) this.HouseHands);
      this.HouseSumPanel.Location = new Point(581, 29);
      this.HouseSumPanel.Margin = new Padding(8, 7, 8, 7);
      this.HouseSumPanel.Name = "HouseSumPanel";
      this.HouseSumPanel.Size = new Size(2311, 69);
      this.HouseSumPanel.TabIndex = 0;
      this.LogLabel.BackColor = Color.LightGoldenrodYellow;
      this.LogLabel.BorderStyle = BorderStyle.FixedSingle;
      this.LogLabel.Dock = DockStyle.Right;
      this.LogLabel.Font = new Font("Microsoft Sans Serif", 6.75f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.LogLabel.ForeColor = Color.DarkGreen;
      this.LogLabel.Location = new Point(2222, 0);
      this.LogLabel.Margin = new Padding(8, 0, 8, 0);
      this.LogLabel.Name = "LogLabel";
      this.LogLabel.Size = new Size(87, 67);
      this.LogLabel.TabIndex = 6;
      this.LogLabel.Text = "Logs";
      this.LogLabel.TextAlign = ContentAlignment.MiddleCenter;
      this.HouseActionLabel.ForeColor = Color.DarkRed;
      this.HouseActionLabel.Location = new Point(1536, 19);
      this.HouseActionLabel.Margin = new Padding(8, 0, 8, 0);
      this.HouseActionLabel.Name = "HouseActionLabel";
      this.HouseActionLabel.Size = new Size(667, 31);
      this.HouseActionLabel.TabIndex = 5;
      this.HouseActionLabel.Text = "Last Action: Game not started yet.";
      this.HouseHand2Count.AutoSize = true;
      this.HouseHand2Count.Font = new Font("Microsoft Sans Serif", 8.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.HouseHand2Count.Location = new Point(941, 19);
      this.HouseHand2Count.Margin = new Padding(8, 0, 8, 0);
      this.HouseHand2Count.Name = "HouseHand2Count";
      this.HouseHand2Count.Size = new Size(227, 32);
      this.HouseHand2Count.TabIndex = 4;
      this.HouseHand2Count.Text = "Hand2 Count: 0";
      this.HouseHand1Count.AutoSize = true;
      this.HouseHand1Count.Font = new Font("Microsoft Sans Serif", 8.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.HouseHand1Count.Location = new Point(435, 19);
      this.HouseHand1Count.Margin = new Padding(8, 0, 8, 0);
      this.HouseHand1Count.Name = "HouseHand1Count";
      this.HouseHand1Count.Size = new Size(227, 32);
      this.HouseHand1Count.TabIndex = 3;
      this.HouseHand1Count.Text = "Hand1 Count: 2";
      this.HouseHands.AutoSize = true;
      this.HouseHands.Font = new Font("Microsoft Sans Serif", 8.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.HouseHands.Location = new Point(8, 19);
      this.HouseHands.Margin = new Padding(8, 0, 8, 0);
      this.HouseHands.Name = "HouseHands";
      this.HouseHands.Size = new Size(136, 32);
      this.HouseHands.TabIndex = 0;
      this.HouseHands.Text = "Hands: 1";
      this.HouseHandCards.BorderStyle = BorderStyle.FixedSingle;
      this.HouseHandCards.Location = new Point(581, 105);
      this.HouseHandCards.Margin = new Padding(8, 7, 8, 7);
      this.HouseHandCards.Name = "HouseHandCards";
      this.HouseHandCards.Size = new Size(2311, 729);
      this.HouseHandCards.TabIndex = 1;
      this.PlayerHandCards.BorderStyle = BorderStyle.FixedSingle;
      this.PlayerHandCards.Location = new Point(581, 842);
      this.PlayerHandCards.Margin = new Padding(8, 7, 8, 7);
      this.PlayerHandCards.Name = "PlayerHandCards";
      this.PlayerHandCards.Size = new Size(2311, 729);
      this.PlayerHandCards.TabIndex = 1;
      this.LogTooltip.AutomaticDelay = 100;
      this.LogTooltip.AutoPopDelay = 10000;
      this.LogTooltip.ForeColor = Color.DarkRed;
      this.LogTooltip.InitialDelay = 100;
      this.LogTooltip.ReshowDelay = 20;
      this.LogTooltip.ToolTipIcon = ToolTipIcon.Info;
      this.LogTooltip.ToolTipTitle = "Game Logs";
      this.AutoScaleDimensions = new SizeF(16f, 31f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.BackColor = SystemColors.GradientInactiveCaption;
      this.ClientSize = new Size(3477, 1679);
      this.ControlBox = false;
      this.Controls.Add((Control) this.PlayerHandCards);
      this.Controls.Add((Control) this.HouseHandCards);
      this.Controls.Add((Control) this.HouseSumPanel);
      this.Controls.Add((Control) this.HouseBetPanel);
      this.Controls.Add((Control) this.MiddlePanel);
      this.Controls.Add((Control) this.RightPanel);
      this.Controls.Add((Control) this.LeftPanel);
      this.Icon = (Icon) componentResourceManager.GetObject("$this.Icon");
      this.KeyPreview = true;
      this.Margin = new Padding(8, 7, 8, 7);
      this.Name = nameof (GameView);
      this.Text = "AutoJack: Game Play";
      this.LeftPanel.ResumeLayout(false);
      this.TimingPanel.ResumeLayout(false);
      this.UserBetPanel.ResumeLayout(false);
      this.RightPanel.ResumeLayout(false);
      this.GameControlPanel.ResumeLayout(false);
      this.UserStatPanel.ResumeLayout(false);
      this.ControlPanel.ResumeLayout(false);
      this.DeckPanel.ResumeLayout(false);
      ((ISupportInitialize) this.CardBack).EndInit();
      this.MiddlePanel.ResumeLayout(false);
      this.UserSumPanel.ResumeLayout(false);
      this.UserSumPanel.PerformLayout();
      this.HouseBetPanel.ResumeLayout(false);
      this.HouseSumPanel.ResumeLayout(false);
      this.HouseSumPanel.PerformLayout();
      this.ResumeLayout(false);
    }
  }
}
