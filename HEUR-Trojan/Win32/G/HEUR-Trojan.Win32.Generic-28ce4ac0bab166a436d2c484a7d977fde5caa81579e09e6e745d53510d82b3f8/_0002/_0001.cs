// Decompiled with JetBrains decompiler
// Type: .
// Assembly: Advance, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 40A7B1DF-A4F3-4A92-8BF1-725EF49C72AB
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\HEUR-Trojan.Win32.Generic-28ce4ac0bab166a436d2c484a7d977fde5caa81579e09e6e745d53510d82b3f8.exe

using Microsoft.VisualBasic.ApplicationServices;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.ComponentModel;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace \u0002
{
  [GeneratedCode("MyTemplate", "8.0.0.0")]
  internal sealed class \u0001
  {
    private static readonly \u0002.\u0001.\u0003<\u0001.\u0001> \u0001;
    private static readonly \u0002.\u0001.\u0003<\u0003.\u0001> \u0001;
    private static readonly \u0002.\u0001.\u0003<User> \u0001;
    private static \u0002.\u0001.\u0003<\u0002.\u0001.\u0001> \u0001;
    private static readonly \u0002.\u0001.\u0003<\u0002.\u0001.\u0002> \u0001;

    static \u0001()
    {
      if (true)
      {
        if (true)
          \u0002.\u0001.\u0001 = new \u0002.\u0001.\u0003<\u0001.\u0001>();
      }
      else
        goto label_6;
label_5:
      \u0002.\u0001.\u0001 = new \u0002.\u0001.\u0003<\u0003.\u0001>();
      \u0002.\u0001.\u0001 = new \u0002.\u0001.\u0003<User>();
label_6:
      \u0002.\u0001.\u0001 = new \u0002.\u0001.\u0003<\u0002.\u0001.\u0001>();
      if (true)
        goto label_7;
label_3:
      if (true)
        return;
      goto label_5;
label_7:
      \u0002.\u0001.\u0001 = new \u0002.\u0001.\u0003<\u0002.\u0001.\u0002>();
      goto label_3;
    }

    [SpecialName]
    internal static \u0003.\u0001 \u0001() => \u0002.\u0001.\u0001.\u0001();

    [SpecialName]
    internal static \u0002.\u0001.\u0001 \u0001() => \u0002.\u0001.\u0001.\u0001();

    [EditorBrowsable(EditorBrowsableState.Never)]
    internal sealed class \u0001
    {
      public \u0002.\u0002 \u0001;
      [ThreadStatic]
      private static Hashtable \u0001;

      [SpecialName]
      public \u0002.\u0002 \u0001()
      {
        this.\u0001 = \u0002.\u0001.\u0001.\u0001<\u0002.\u0002>(this.\u0001);
        return this.\u0001;
      }

      private static \u0001 \u0001<\u0001>([In] \u0001 obj0) where \u0001 : Form, new()
      {
        if ((object) obj0 == null || obj0.IsDisposed)
        {
          if (\u0002.\u0001.\u0001.\u0001 == null)
          {
            \u0002.\u0001.\u0001.\u0001 = new Hashtable();
            goto label_4;
          }
        }
        else
          goto label_9;
label_2:
        if (\u0002.\u0001.\u0001.\u0001.ContainsKey((object) typeof (\u0001)))
          throw new InvalidOperationException(Utils.GetResourceString("WinForms_RecursiveFormCreate"));
label_4:
        \u0002.\u0001.\u0001.\u0001.Add((object) typeof (\u0001), (object) null);
        try
        {
          return new \u0001();
        }
        catch (TargetInvocationException ex) when (
        {
          // ISSUE: unable to correctly present filter
          ProjectData.SetProjectError((Exception) ex);
          if (ex.InnerException != null)
          {
            SuccessfulFiltering;
          }
          else
            throw;
        }
        )
        {
          throw new InvalidOperationException(Utils.GetResourceString("WinForms_SeeInnerException", ex.InnerException.Message), ex.InnerException);
        }
        finally
        {
          \u0002.\u0001.\u0001.\u0001.Remove((object) typeof (\u0001));
        }
label_9:
        if (true)
          return obj0;
        goto label_2;
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      public \u0001()
      {
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override bool Equals([In] object obj0) => base.Equals(RuntimeHelpers.GetObjectValue(obj0));

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override int GetHashCode() => base.GetHashCode();

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override string ToString() => base.ToString();
    }

    [EditorBrowsable(EditorBrowsableState.Never)]
    internal sealed class \u0002
    {
      [EditorBrowsable(EditorBrowsableState.Never)]
      public override bool Equals([In] object obj0) => base.Equals(RuntimeHelpers.GetObjectValue(obj0));

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override int GetHashCode() => base.GetHashCode();

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override string ToString() => base.ToString();

      [EditorBrowsable(EditorBrowsableState.Never)]
      public \u0002()
      {
      }
    }

    [EditorBrowsable(EditorBrowsableState.Never)]
    [ComVisible(false)]
    internal sealed class \u0003<\u0001> where \u0001 : new()
    {
      [SpecialName]
      internal \u0001 \u0001()
      {
        // ISSUE: reference to a compiler-generated field
        if ((object) \u0002.\u0001.\u0003<\u0001>.\u0001 == null)
          goto label_2;
label_1:
        // ISSUE: reference to a compiler-generated field
        return \u0002.\u0001.\u0003<\u0001>.\u0001;
label_2:
        // ISSUE: reference to a compiler-generated field
        \u0002.\u0001.\u0003<\u0001>.\u0001 = new \u0001();
        goto label_1;
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      public \u0003()
      {
      }
    }
  }
}
