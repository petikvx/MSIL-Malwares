// Decompiled with JetBrains decompiler
// Type: mmxAH.ArchemStableLoc
// Assembly: X509Ut, Version=1.0.2.2, Culture=neutral, PublicKeyToken=null
// MVID: 1E869FE1-6699-4C5A-A346-E3A268AF0CFF
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan-Spy.Win32.Noon.bcql-59417b76e826677caae54470d776ac97355fea2080e278b08439fa5229cc46a3.exe

using System.IO;
using System.Windows.Forms;

namespace mmxAH
{
  public class ArchemStableLoc : ArchemArea
  {
    public ArchemStableLoc(GameEngine eng, string cn)
    {
      this.codeName = cn;
      this.type = LocathionType.ArchamStable;
      this.en = eng;
    }

    public ArchemStableLoc()
    {
    }

    public override bool FromText(TextFileParser prs, TextFileParser text) => this.FromText1(prs, text);

    protected bool FromText1(TextFileParser prs, TextFileParser text)
    {
      if (!this.FromText2(prs, text))
        return false;
      short districktStreetNumber = this.en.map.GetDistricktStreetNumber(this.Districkt);
      if (districktStreetNumber == (short) -1)
      {
        int num = (int) MessageBox.Show(" Could not find disteckt street to loc " + this.codeName);
        return false;
      }
      this.BlackArrow = districktStreetNumber;
      this.WhiteArrow = districktStreetNumber;
      ((ArchemStreet) this.en.locs[(int) districktStreetNumber]).AddLocInDistr(this.LocathionIndex);
      return true;
    }

    public override void Print(byte label)
    {
      this.en.io.Print(this.displayName, (byte) 14, true, label: label);
      this.PrintClosed(label);
      this.PrintInvestAndMonsters(label);
    }

    public override void FromBin(BinaryReader rd)
    {
      this.FromBin2(rd);
      ((ArchemStreet) this.en.locs[(int) this.en.map.GetDistricktStreetNumber(this.Districkt)]).AddLocInDistr(this.LocathionIndex, false);
    }

    public override void Encounter()
    {
      this.en.clock.PrintCurPhase();
      this.en.archEncs[(int) this.Districkt].Draw().Execute(this.LocathionIndex);
    }
  }
}
