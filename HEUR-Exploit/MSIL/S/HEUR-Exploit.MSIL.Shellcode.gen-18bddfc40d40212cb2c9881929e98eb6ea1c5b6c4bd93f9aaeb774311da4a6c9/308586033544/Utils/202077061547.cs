// Decompiled with JetBrains decompiler
// Type: 308586033544.Utils.202077061547
// Assembly: 308586033544, Version=1.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: CD78F8E3-E5F9-41CF-8142-5EDBF93F1FF3
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-18bddfc40d40212cb2c9881929e98eb6ea1c5b6c4bd93f9aaeb774311da4a6c9.exe

using \u003308586033544.Utils;
using System;
using System.Collections.Generic;
using System.Net;
using System.Net.NetworkInformation;
using System.Runtime.CompilerServices;

namespace \u003308586033544.Utils
{
  public class \u003202077061547 : WebClient
  {
    public static readonly string[] \u003838897474002;

    public TimeSpan \u003416862945060
    {
      [CompilerGenerated, SpecialName] get => this.\u003024535080948;
      set => ((\u003328651430735) this).\u003024535080948 = value;
    }

    protected override WebRequest GetWebRequest(Uri uri)
    {
      WebRequest webRequest = base.GetWebRequest(uri);
      webRequest.Timeout = (int) ((\u003328651430735) this).get_Timeout().TotalMilliseconds;
      ((HttpWebRequest) webRequest).ReadWriteTimeout = (int) ((\u003328651430735) this).get_Timeout().TotalMilliseconds;
      return webRequest;
    }

    public static bool \u003984856710908(int _param0 = 1000, string[] _param1 = null)
    {
      if (!NetworkInterface.GetIsNetworkAvailable())
        return false;
      string[] strArray1 = _param1;
      if (strArray1 == null)
        strArray1 = new string[2]
        {
          "www.google.com",
          "http://www.google.com"
        };
      string[] strArray2 = strArray1;
      return \u003316250213949.\u003968939683857(_param0, (IEnumerable<string>) strArray2) || \u003316250213949.\u003631091495585((IEnumerable<string>) strArray2);
    }
  }
}
