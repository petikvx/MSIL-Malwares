// Decompiled with JetBrains decompiler
// Type: BoardGameSuite.Game
// Assembly: STOREASSEMBLYFILESTATUSFLA, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 12D7A720-F25A-4863-8D87-3468F8362768
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan.MSIL.Crypt.gen-dad06241920a1520de401b3d3c1edcb21c60c9969c1ff3de4b56586588f15e91.exe

using System;
using System.Collections.Generic;

namespace BoardGameSuite
{
  internal abstract class Game
  {
    protected Queue<User> userList;
    protected GameBoardFactory gameBoardFactory;
    protected bool gameOver;
    protected string gameName;
    protected int maxPlayers;

    public Game()
    {
      this.userList = new Queue<User>();
      this.gameBoardFactory = new GameBoardFactory();
      this.gameOver = false;
    }

    protected abstract void startGame();

    protected void createUsers(int maxNumberOfPlayers)
    {
      Console.WriteLine("How Many Users ( Enter 1, 2, or 3 ): ");
      int result = 0;
      bool flag = false;
      while (!flag)
      {
        flag = int.TryParse(Console.ReadLine(), out result) && result > 0 && result < 4;
        if (!flag)
          Console.WriteLine("Enter a number ( 1, 2, or 3 )");
      }
      for (int index = 0; index < result; ++index)
      {
        Console.WriteLine("Enter name for player " + (index + 1).ToString());
        this.userList.Enqueue((User) new WoFPlayer(Console.ReadLine()));
      }
    }
  }
}
