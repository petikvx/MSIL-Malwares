// Decompiled with JetBrains decompiler
// Type: 
// Assembly: Antimalware Service Executable, Version=4.18.2110.6, Culture=neutral, PublicKeyToken=null
// MVID: BAA675AC-450F-4411-0EC7-1781EC73690A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\UDS-DangerousObject.Multi.Generic-1b75e4ffe67a5c5a8939c62c1028556f3995341d39f5aed9129637646f7b6e5f.exe

using System;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Threading;
using System.Windows.Forms;

internal static class \u0005
{
  private static bool \u0002(bool _param0) => true;

  [MethodImpl(MethodImplOptions.NoInlining)]
  private static bool \u0003(bool _param0)
  {
    \u0005.\u0002 obj = new \u0005.\u0002();
    obj.\u0002 = new bool?();
    try
    {
      if (AppDomain.CurrentDomain.GetData(\u000E\u2001.\u0002(-2006068127)) is string data)
      {
        if (data == \u000E\u2001.\u0002(-2006068156))
          obj.\u0002 = new bool?(false);
        else if (data == \u000E\u2001.\u0002(-2006067268))
          obj.\u0002 = new bool?(true);
      }
    }
    catch
    {
    }
    bool hasValue = obj.\u0002.HasValue;
    if (!obj.\u0002.HasValue)
    {
      try
      {
        if (\u0002.\u0003())
          \u0005.\u0002(new ThreadStart(obj.\u0002));
        else
          \u0005.\u0002(new ThreadStart(obj.\u0003));
      }
      catch
      {
      }
    }
    if (!hasValue)
    {
      if (obj.\u0002.HasValue)
      {
        try
        {
          AppDomain.CurrentDomain.SetData(\u000E\u2001.\u0002(-2006068127), obj.\u0002.Value ? (object) \u000E\u2001.\u0002(-2006067268) : (object) \u000E\u2001.\u0002(-2006068156));
        }
        catch
        {
        }
      }
    }
    if (obj.\u0002.GetValueOrDefault())
      return true;
    if (_param0)
      throw new Exception(\u000E\u2001.\u0002(-2006067276));
    return false;
  }

  private static void \u0002(ThreadStart _param0)
  {
    \u0005.\u0003 obj = new \u0005.\u0003();
    obj.\u0002 = _param0;
    obj.\u0003 = (Exception) null;
    Thread thread = new Thread(new ThreadStart(obj.\u0002));
    thread.SetApartmentState(ApartmentState.STA);
    thread.IsBackground = true;
    thread.Start();
    thread.Join();
    if (obj.\u0003 != null)
      throw obj.\u0003;
  }

  private static void \u0002()
  {
    try
    {
      Application.EnableVisualStyles();
      Application.DoEvents();
    }
    catch
    {
    }
  }

  public static bool \u0002() => \u0005.\u0002(false);

  public static void \u0003() => \u0005.\u0002(true);

  private sealed class \u0002
  {
    public bool? \u0002;

    internal void \u0002()
    {
      \u0003 obj = new \u0003(\u000E\u2001.\u0002(-2006068891), \u000E\u2001.\u0002(-2006068306), MessageBoxButtons.YesNo);
      obj.BackColor = Color.White;
      this.\u0002 = new bool?(obj.ShowDialog() == DialogResult.Yes);
    }

    internal void \u0003()
    {
      \u0003 obj = new \u0003(\u000E\u2001.\u0002(-2006068342), \u000E\u2001.\u0002(-2006068306));
      obj.BackColor = Color.White;
      this.\u0002 = new bool?(obj.ShowDialog() == DialogResult.OK);
    }
  }

  private sealed class \u0003
  {
    public ThreadStart \u0002;
    public Exception \u0003;

    internal void \u0002()
    {
      try
      {
        this.\u0002();
      }
      catch (Exception ex)
      {
        this.\u0003 = ex;
      }
    }
  }
}
