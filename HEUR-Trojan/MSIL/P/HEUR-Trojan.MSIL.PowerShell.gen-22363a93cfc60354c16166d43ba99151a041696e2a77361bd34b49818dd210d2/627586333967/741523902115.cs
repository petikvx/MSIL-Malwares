// Decompiled with JetBrains decompiler
// Type: 627586333967.741523902115
// Assembly: 422928051450, Version=1.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: F1AD5918-0B7E-492E-9A94-09EF01F479FE
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan.MSIL.PowerShell.gen-22363a93cfc60354c16166d43ba99151a041696e2a77361bd34b49818dd210d2.exe

using \u003566234454343;
using \u003627586333967;
using System;
using System.Collections.Generic;
using System.IO;

namespace \u003627586333967
{
  public static class \u003741523902115
  {
    public static void \u003696860273503(string _param0, string _param1) => \u003741523902115.\u003051521958389(_param0, _param1, SearchOption.AllDirectories);

    public static void \u003051521958389(string _param0, string _param1, SearchOption _param2)
    {
      if (!Directory.Exists(_param1))
        Directory.CreateDirectory(_param1);
      foreach (string file in Directory.GetFiles(_param0))
      {
        string str = Path.Combine(_param1, Path.GetFileName(file));
        \u003787551421942.\u003834373287662(file, str);
      }
      if (_param2 != SearchOption.AllDirectories)
        return;
      foreach (string directory in Directory.GetDirectories(_param0))
      {
        string str = Path.Combine(_param1, Path.GetFileName(directory));
        \u003741523902115.\u003051521958389(directory, str, _param2);
      }
    }

    public static int \u003456511910349(string _param0)
    {
      if (!Directory.Exists(_param0))
        return 0;
      int num = 0;
      foreach (string file in Directory.GetFiles(_param0))
      {
        if (!\u003787551421942.\u003035257812365(file))
          ++num;
      }
      foreach (string directory in Directory.GetDirectories(_param0))
        num += \u003741523902115.\u003456511910349(directory);
      if (num == 0)
      {
        try
        {
          Directory.Delete(_param0, true);
        }
        catch
        {
          ++num;
        }
      }
      else
        ++num;
      return num;
    }

    public static bool \u003052690314001(string _param0, int _param1_1)
    {
      if (!Directory.Exists(_param0))
        return true;
      string[] directories = Directory.GetDirectories(_param0);
      int num = directories.Length - _param1_1;
      if (num <= 0)
        return true;
      Array.Sort<string>(directories, (Comparison<string>) ((_param1_2, _param2) => File.GetLastWriteTimeUtc(_param1_2).CompareTo(File.GetLastWriteTimeUtc(_param2))));
      bool flag = true;
      for (int index = 0; index < num; ++index)
      {
        try
        {
          Directory.Delete(directories[index]);
        }
        catch (Exception ex)
        {
          flag = false;
        }
      }
      return flag;
    }

    public static IEnumerable<string> \u003988274455371(
      string _param0,
      string _param1,
      SearchOption _param2)
    {
      // ISSUE: object of a compiler-generated type is created
      // ISSUE: variable of a compiler-generated type
      \u003741523902115.\u003101956246888 obj = new \u003741523902115.\u003101956246888(-2);
      // ISSUE: reference to a compiler-generated field
      ((\u003741523902115.\u003381311331092) obj).\u003012067638219 = _param0;
      // ISSUE: reference to a compiler-generated field
      ((\u003741523902115.\u003381311331092) obj).\u003559449776794 = _param1;
      // ISSUE: reference to a compiler-generated field
      ((\u003741523902115.\u003381311331092) obj).\u003984043722702 = _param2;
      return (IEnumerable<string>) obj;
    }

    public static IEnumerable<string> \u003719899254947(string _param0, string _param1 = "*") => \u003741523902115.\u003988274455371(_param0, _param1, SearchOption.TopDirectoryOnly);
  }
}
