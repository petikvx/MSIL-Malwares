// Decompiled with JetBrains decompiler
// Type: ArrayWithOff.Authentication.InitializerItemAuth
// Assembly: ArrayWithOff, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: C12E9A27-BEBF-4775-817A-6AC642D52B19
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan-Spy.Win32.Noon.bcra-344266b0bd586b6b9907f1657c694060dd1bae1df9fda81d7433002d419fe4fa.exe

using ArrayWithOff.Database;
using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.IO;
using System.Runtime.CompilerServices;
using System.Runtime.Serialization.Formatters.Binary;

namespace ArrayWithOff.Authentication
{
  [Serializable]
  public class InitializerItemAuth : IComparable<InitializerItemAuth>
  {
    private static readonly string callback;
    private readonly string dic;
    private string _Initializer;
    private readonly string m_Creator;
    private readonly string m_Iterator;
    private readonly string _Task;
    private readonly string _Page;
    private readonly string tokenizer;
    private readonly string m_Annotation;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public InitializerItemAuth(
      string spec,
      string map,
      string c,
      string param2,
      string cust3,
      string info4,
      string second5)
    {
      ProxyParser.NewPool();
      // ISSUE: explicit constructor call
      base.\u002Ector();
      this._Initializer = spec ?? throw new ArgumentNullException("lastsave");
      this.m_Creator = map ?? throw new ArgumentNullException("player");
      this.m_Iterator = c ?? throw new ArgumentNullException("noPlayers");
      this._Task = param2 ?? throw new ArgumentNullException("score");
      this._Page = cust3 ?? throw new ArgumentNullException("turns");
      this.tokenizer = info4 ?? throw new ArgumentNullException(nameof (map));
      this.m_Annotation = second5 ?? throw new ArgumentNullException("gamemode");
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public InitializerItemAuth(
      string res,
      string col,
      string template,
      string first2,
      string result3)
    {
      ProxyParser.NewPool();
      // ISSUE: explicit constructor call
      base.\u002Ector();
      this._Initializer = res ?? throw new ArgumentNullException("lastsave");
      this.m_Creator = col ?? throw new ArgumentNullException("player");
      this.tokenizer = template ?? throw new ArgumentNullException("map");
      this.m_Annotation = first2 ?? throw new ArgumentNullException("gamemode");
      this.dic = result3 ?? throw new ArgumentNullException("gameID");
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static void VerifyModel(InitializerItemAuth asset)
    {
      int num1 = 3;
      FileStream fileStream;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 3:
            fileStream = new FileStream(InitializerItemAuth.callback, FileMode.OpenOrCreate);
            num1 = 2;
            continue;
          case 1:
          case 2:
            goto label_1;
          case 4:
            goto label_9;
          default:
            num1 = 4;
            continue;
        }
      }
label_1:
      try
      {
      }
      finally
      {
        fileStream?.Dispose();
      }
      FileStream serializationStream = new FileStream(InitializerItemAuth.callback, FileMode.Append);
label_9:
      try
      {
        BinaryFormatter binaryFormatter = new BinaryFormatter();
        int num2 = 2;
        if (!InitializerItemAuth.InitPool())
          goto label_11;
label_10:
        asset._Initializer = DateTime.Now.ToString("g");
        goto label_13;
label_11:
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 2:
              goto label_10;
            case 1:
            case 3:
              goto label_13;
            case 4:
              goto label_14;
            default:
              if (!InitializerItemAuth.InitPool())
              {
                num2 = 3;
                continue;
              }
              goto label_13;
          }
        }
label_14:
        return;
label_13:
        binaryFormatter.Serialize((Stream) serializationStream, (object) asset);
        num2 = 4;
        goto label_11;
      }
      finally
      {
        serializationStream?.Dispose();
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static ObservableCollection<InitializerItemAuth> UpdateModel()
    {
      List<InitializerItemAuth> list = new List<InitializerItemAuth>();
      if (File.Exists(InitializerItemAuth.callback))
      {
        using (Stream serializationStream = (Stream) new FileStream(InitializerItemAuth.callback, FileMode.Open))
        {
          BinaryFormatter binaryFormatter = new BinaryFormatter();
          while (serializationStream.Position < serializationStream.Length)
          {
            InitializerItemAuth initializerItemAuth = (InitializerItemAuth) binaryFormatter.Deserialize(serializationStream);
            list.Add(initializerItemAuth);
          }
        }
      }
      list.Sort();
      return new ObservableCollection<InitializerItemAuth>(list);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public int CompareTo(InitializerItemAuth reference) => int.Parse(reference._Task).CompareTo(int.Parse(this._Task));

    public string NoPlayers
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => this.m_Iterator;
    }

    public string Player
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => this.m_Creator;
    }

    public string LastSave
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => this._Initializer;
    }

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public string RestartModel() => this.dic;

    public string Score
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => this._Task;
    }

    public string Map
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => this.tokenizer;
    }

    public string Gamemode
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => this.m_Annotation;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    static InitializerItemAuth()
    {
      ProxyParser.NewPool();
      InitializerItemAuth.callback = "Leaderboard.bin";
    }

    internal static bool CountPool() => true;

    internal static bool InitPool() => false;
  }
}
