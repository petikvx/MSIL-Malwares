// Decompiled with JetBrains decompiler
// Type: Vändtia_Live_Server.Server
// Assembly: W2E901dpqsgg43z, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E3EDE543-33A5-3966-9367-08505E2DD4BA
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan.MSIL.Remcos.gen-9a55287be3d6c8a74a0aa6ee3a5ea4e288ba968e44c271c9ea5d2293c8300d07.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections;
using System.Net;
using System.Net.Sockets;
using System.Threading;
using System.Windows.Forms;
using Vändtia_Live_Server.My;

namespace Vändtia_Live_Server
{
  public class Server
  {
    public int Port;
    public int SwitchingTime;
    public ArrayList Clients;
    public int Turn;
    private TcpListener Listener;
    private Thread Reciever;
    private bool Wait;

    public Server()
    {
label_5:
      int num1 = 26;
      int num2 = 5;
      while (true)
      {
        switch (num2 ^ 81)
        {
          case 81:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Server.Send);
            num2 = 0;
            continue;
          case 82:
            goto label_5;
          case 83:
            switch (num1)
            {
              case 78:
                this.Reciever = new Thread(new ThreadStart(this.\uF805\uF3C8\uF241\uEFD9\uF5FB\uE68D\uF563\uE98A\uEE5E\uF847\uEED2\uECA8));
                num1 = 27;
                goto label_1;
              case 79:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Server.Send);
                num1 = 5;
                goto label_1;
              case 80:
                this.Clients = new ArrayList();
                num1 = 4;
                goto label_1;
              case 81:
                this.Wait = true;
                num1 = 24;
                goto label_1;
              case 82:
                goto label_8;
              default:
                num2 = 3;
                continue;
            }
          case 84:
label_1:
            num1 ^= 74;
            break;
        }
        num2 = 2;
      }
label_8:;
    }

    public event Server.OnNewClientEventHandler OnNewClient
    {
      add
      {
        Server.OnNewClientEventHandler clientEventHandler1 = this.OnNewClientEvent;
label_1:
        Server.OnNewClientEventHandler comparand = clientEventHandler1;
label_6:
        int num1 = 8;
        int num2 = 16;
        while (true)
        {
          switch (num2 ^ 69)
          {
            case 82:
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Server.CancelAll);
              num2 = 23;
              continue;
            case 83:
              goto label_6;
            case 84:
              Server.OnNewClientEventHandler clientEventHandler2;
              switch (num1)
              {
                case 75:
                  clientEventHandler1 = Interlocked.CompareExchange<Server.OnNewClientEventHandler>(ref this.OnNewClientEvent, clientEventHandler2, comparand);
                  num1 = 10;
                  goto label_2;
                case 76:
                  clientEventHandler2 = comparand + value;
                  num1 = 15;
                  goto label_2;
                case 77:
                  RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Server.\uF805\uF3C8\uF241\uEFD9\uF5FB\uE68D\uF563\uE98A\uEE5E\uF847\uEED2\uECA8);
                  num1 = 9;
                  goto label_2;
                case 78:
                  if (clientEventHandler1 == comparand)
                  {
                    num1 = 11;
                    goto label_2;
                  }
                  else
                    goto label_1;
                case 79:
                  goto label_13;
                default:
                  num2 = 22;
                  continue;
              }
            case 85:
label_2:
              num1 ^= 68;
              break;
          }
          num2 = 17;
        }
label_13:;
      }
      remove
      {
        Server.OnNewClientEventHandler clientEventHandler1 = this.OnNewClientEvent;
label_1:
        Server.OnNewClientEventHandler comparand = clientEventHandler1;
label_5:
        int num1 = \uE847\uECAC\uE5EA\uE594\uE61D\uF865\uF65E\uF025\uEE4F\uF357\uE1B2\uE961.\uEC90\uE830\uED92\uEA5B\uF4EC\uE676\uF441\uE7AB\uE952\uF03A\uEEBD\uEFF1.\uEEF5\uEA0C\uEADA\uE1C9\uE289\uEDEB\uE9AB\uE1F5\uE72E\uE67B\uF500\uE550(30);
        int num2 = Form2.\uE7F6\uEE5A\uF13B\uE62C\uE9E0\uF23D\uEBB4\uF419\uF674\uED40\uE0AF\uE3A4(20);
        while (true)
        {
          switch ((num2 ^ 69) + 68)
          {
            case 0:
              goto label_5;
            case 1:
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Server.EndWaitForConnections);
              num2 = -8;
              continue;
            case 2:
              Server.OnNewClientEventHandler clientEventHandler2;
              switch (num1 + 80)
              {
                case 0:
                  clientEventHandler2 = comparand - value;
                  num1 = -2;
                  goto label_2;
                case 1:
                  clientEventHandler1 = Interlocked.CompareExchange<Server.OnNewClientEventHandler>(ref this.OnNewClientEvent, clientEventHandler2, comparand);
                  num1 = \uE847\uECAC\uE5EA\uE594\uE61D\uF865\uF65E\uF025\uEE4F\uF357\uE1B2\uE961.\uEC90\uE830\uED92\uEA5B\uF4EC\uE676\uF441\uE7AB\uE952\uF03A\uEEBD\uEFF2.\uEA6D\uEF21\uE194\uF646\uE037\uE8F7\uEA59\uE01F\uE593\uEFE2\uE294\uF565(42);
                  goto label_2;
                case 2:
                  if (clientEventHandler1 == comparand)
                  {
                    num1 = -5;
                    goto label_2;
                  }
                  else
                    goto label_1;
                case 3:
                  RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Server.remove_OnNewClient);
                  num1 = -4;
                  goto label_2;
                case 4:
                  goto label_12;
                default:
                  num2 = -7;
                  continue;
              }
            case 3:
label_2:
              num1 ^= 79;
              break;
          }
          num2 = Form2.\uE7F6\uEE5A\uF13B\uE62C\uE9E0\uF23D\uEBB4\uF419\uF674\uED40\uE0AF\uE3A4(32);
        }
label_12:;
      }
    }

    public void StartWaitForConnections()
    {
label_6:
      int num1 = 5;
      int num2 = 29;
      while (true)
      {
        switch (num2 ^ 80)
        {
          case 74:
            IPHostEntry hostEntry;
            IPAddress localaddr;
            switch (num1)
            {
              case 71:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Server.\uF805\uF3C8\uF241\uEFD9\uF5FB\uE68D\uF563\uE98A\uEE5E\uF847\uEED2\uECA8);
                num1 = 9;
                goto label_1;
              case 72:
                this.Reciever.Start();
                num1 = 2;
                goto label_1;
              case 73:
                localaddr = (IPAddress) hostEntry.AddressList.GetValue(2);
                num1 = 4;
                goto label_1;
              case 74:
                this.Listener = new TcpListener(localaddr, this.Port);
                num1 = 6;
                goto label_1;
              case 75:
                hostEntry = Dns.GetHostEntry(Dns.GetHostName());
                num1 = 7;
                goto label_1;
              case 76:
                num1 = 3;
                goto label_1;
              case 77:
                goto label_11;
              default:
                num2 = 27;
                continue;
            }
          case 75:
            goto label_6;
          case 76:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Server.\u002Ector);
            num2 = 28;
            continue;
          case 77:
label_1:
            num1 ^= 78;
            break;
        }
        num2 = 26;
      }
label_11:;
    }

    private void \uF805\uF3C8\uF241\uEFD9\uF5FB\uE68D\uF563\uE98A\uEE5E\uF847\uEED2\uECA8()
    {
      this.Listener.Start();
label_30:
      while (true)
      {
        try
        {
          Player1 player1 = new Player1();
label_3:
          int num1 = Form2.\uE7F6\uEE5A\uF13B\uE62C\uE9E0\uF23D\uEBB4\uF419\uF674\uED40\uE0AF\uE3A4(21);
          object Left;
          bool flag;
          while (true)
          {
            switch ((num1 ^ 74) + 77)
            {
              case 0:
                player1.Stream = player1.Client.GetStream();
                num1 = \uE847\uECAC\uE5EA\uE594\uE61D\uF865\uF65E\uF025\uEE4F\uF357\uE1B2\uE961.\uEC90\uE830\uED92\uEA5B\uF4EC\uE676\uF441\uE7AB\uE952\uF03A\uEEBD\uEFF1.\uEEF5\uEA0C\uEADA\uE1C9\uE289\uEDEB\uE9AB\uE1F5\uE72E\uE67B\uF500\uE550(37);
                continue;
              case 1:
                Left = (object) player1.Recieve();
                num1 = -3;
                continue;
              case 2:
                if (flag)
                {
                  num1 = -13;
                  continue;
                }
                goto label_12;
              case 3:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Server.Send);
                num1 = -4;
                continue;
              case 4:
                flag = Operators.ConditionalCompareObjectEqual(Left, (object) "game=Vändtia", false);
                num1 = -1;
                continue;
              case 5:
                player1.Client = this.Listener.AcceptTcpClient();
                num1 = -7;
                continue;
              case 6:
                goto label_11;
              default:
                goto label_3;
            }
          }
label_11:
          int num2 = 0;
          goto label_13;
label_12:
          num2 = 1;
label_13:
          if (num2 == 0)
          {
            player1.Send("OK");
label_16:
            int num3 = \uE847\uECAC\uE5EA\uE594\uE61D\uF865\uF65E\uF025\uEE4F\uF357\uE1B2\uE961.\uEC90\uE830\uED92\uEA5B\uF4EC\uE676\uF441\uE7AB\uE952\uF03A\uEEBD\uEFF2.\uEA6D\uEF21\uE194\uF646\uE037\uE8F7\uEA59\uE01F\uE593\uEFE2\uE294\uF565(42);
            while (true)
            {
              switch ((num3 ^ 70) + 70)
              {
                case 0:
                  this.Clients.Add((object) player1);
                  num3 = -6;
                  continue;
                case 1:
                  num3 = -4;
                  continue;
                case 2:
                  Application.OpenForms[0].Invoke((Delegate) new MethodInvoker(this.\uF805\uF3C8\uF241\uEFD9\uF5FB\uE68D\uF563\uE98A\uEE5E\uF847\uEED2\uECA9));
                  num3 = -8;
                  continue;
                case 3:
                  // ISSUE: method reference
                  RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Server.StartWaitForConnections);
                  num3 = -5;
                  continue;
                case 4:
                  num3 = Form2.\uE7F6\uEE5A\uF13B\uE62C\uE9E0\uF23D\uEBB4\uF419\uF674\uED40\uE0AF\uE3A4(14);
                  continue;
                case 5:
                  goto label_30;
                default:
                  goto label_16;
              }
            }
          }
          else if ((!Operators.ConditionalCompareObjectEqual(Left, (object) "<policy-file-request/>", false) ? 1 : 0) == 0)
          {
            player1.SendHandshake();
            Left = (object) player1.Recieve();
            if ((!Operators.ConditionalCompareObjectEqual(Left, (object) "game=Vändtia", false) ? 1 : 0) == 0)
            {
              player1.Send("OK");
            }
            else
            {
              player1.Send("wronggame");
              player1.Stream.Close();
            }
          }
          else
          {
            player1.Send("wronggame");
            player1.Stream.Close();
          }
        }
        catch (SocketException ex)
        {
          ProjectData.SetProjectError((Exception) ex);
          if ((ex.SocketErrorCode == SocketError.Interrupted ? 1 : 0) == 0)
            throw;
          else
            ProjectData.ClearProjectError();
        }
      }
    }

    public void EndWaitForConnections()
    {
label_6:
      int num1 = 0;
      int num2 = -13;
      while (true)
      {
        switch ((num2 ^ 75) + 75)
        {
          case 0:
            switch (num1)
            {
              case 78:
                num1 = 31;
                goto label_1;
              case 79:
                this.Listener.Stop();
                num1 = 2;
                goto label_1;
              case 80:
                this.Reciever.Abort();
                num1 = 30;
                goto label_1;
              case 81:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Server.StartWaitForConnections);
                num1 = 1;
                goto label_1;
              case 82:
                num1 = 3;
                goto label_1;
              case 83:
                goto label_11;
              default:
                num2 = -3;
                continue;
            }
          case 1:
            goto label_6;
          case 2:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Server.\u002Ector);
            num2 = -4;
            continue;
          case 3:
label_1:
            num1 ^= 80;
            break;
        }
        num2 = \uE847\uECAC\uE5EA\uE594\uE61D\uF865\uF65E\uF025\uEE4F\uF357\uE1B2\uE961.\uEC90\uE830\uED92\uEA5B\uF4EC\uE676\uF441\uE7AB\uE952\uF03A\uEEBD\uEFF1.\uEEF5\uEA0C\uEADA\uE1C9\uE289\uEDEB\uE9AB\uE1F5\uE72E\uE67B\uF500\uE550(37);
      }
label_11:;
    }

    public void Send(string Text)
    {
      IEnumerator enumerator;
      try
      {
        enumerator = this.Clients.GetEnumerator();
label_13:
        while ((!enumerator.MoveNext() ? 0 : 1) != 0)
        {
          Player1 current = (Player1) enumerator.Current;
label_9:
          int num1 = \uE847\uECAC\uE5EA\uE594\uE61D\uF865\uF65E\uF025\uEE4F\uF357\uE1B2\uE961.\uEC90\uE830\uED92\uEA5B\uF4EC\uE676\uF441\uE7AB\uE952\uF03A\uEEBD\uEFF1.\uEEF5\uEA0C\uEADA\uE1C9\uE289\uEDEB\uE9AB\uE1F5\uE72E\uE67B\uF500\uE550(37);
          int num2 = 7;
          while (true)
          {
            switch (num2 ^ 76)
            {
              case 72:
                switch (num1 + 78)
                {
                  case 0:
                    current.Send(Text);
                    num1 = \uE847\uECAC\uE5EA\uE594\uE61D\uF865\uF65E\uF025\uEE4F\uF357\uE1B2\uE961.\uEC90\uE830\uED92\uEA5B\uF4EC\uE676\uF441\uE7AB\uE952\uF03A\uEEBD\uEFF1.\uEEF5\uEA0C\uEADA\uE1C9\uE289\uEDEB\uE9AB\uE1F5\uE72E\uE67B\uF500\uE550(41);
                    goto label_3;
                  case 1:
                    // ISSUE: method reference
                    RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Server.EndWaitForConnections);
                    num1 = -1;
                    goto label_3;
                  case 2:
                    num1 = -7;
                    goto label_3;
                  case 3:
                    goto label_13;
                  default:
                    num2 = 6;
                    continue;
                }
              case 73:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Server.\u002Ector);
                num2 = 5;
                continue;
              case 74:
                goto label_9;
              case 75:
label_3:
                num1 ^= 76;
                break;
            }
            num2 = 4;
          }
        }
      }
      finally
      {
        if ((!(enumerator is IDisposable) ? 1 : 0) == 0)
          (enumerator as IDisposable).Dispose();
      }
    }

    public void CancelAll()
    {
      IEnumerator enumerator;
      try
      {
        enumerator = this.Clients.GetEnumerator();
        while ((!enumerator.MoveNext() ? 0 : 1) != 0)
        {
          Player1 current = (Player1) enumerator.Current;
          if ((!current.Client.Connected ? 1 : 0) == 0)
          {
            current.Client.Client.Shutdown(SocketShutdown.Both);
label_7:
            int num1 = \uE847\uECAC\uE5EA\uE594\uE61D\uF865\uF65E\uF025\uEE4F\uF357\uE1B2\uE961.\uEC90\uE830\uED92\uEA5B\uF4EC\uE676\uF441\uE7AB\uE952\uF03A\uEEBD\uEFF1.\uEEF5\uEA0C\uEADA\uE1C9\uE289\uEDEB\uE9AB\uE1F5\uE72E\uE67B\uF500\uE550(41);
            int num2 = 15;
            while (true)
            {
              switch (num2 ^ 68)
              {
                case 72:
                  goto label_7;
                case 73:
                  // ISSUE: method reference
                  RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Server.remove_OnNewClient);
                  num2 = 13;
                  continue;
                case 74:
                  switch (num1 + 75)
                  {
                    case 0:
                      // ISSUE: method reference
                      RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Server.add_OnNewClient);
                      num1 = -5;
                      goto label_4;
                    case 1:
                      num1 = -10;
                      goto label_4;
                    case 2:
                      current.Client.Close();
                      num1 = -14;
                      goto label_4;
                    case 3:
                      current.Stream.Close();
                      num1 = -9;
                      goto label_4;
                    case 4:
                      num1 = -12;
                      goto label_4;
                    case 5:
                      current.Client.Client.Close();
                      num1 = -11;
                      goto label_4;
                    case 6:
                      num1 = -7;
                      goto label_4;
                    case 7:
                      num1 = -13;
                      goto label_4;
                    case 8:
                      goto label_19;
                    default:
                      num2 = 12;
                      continue;
                  }
                case 75:
label_4:
                  num1 ^= 78;
                  break;
              }
              num2 = 14;
            }
          }
label_19:;
        }
      }
      finally
      {
        if ((!(enumerator is IDisposable) ? 1 : 0) == 0)
          (enumerator as IDisposable).Dispose();
      }
    }

    private void \uF805\uF3C8\uF241\uEFD9\uF5FB\uE68D\uF563\uE98A\uEE5E\uF847\uEED2\uECA9()
    {
      // ISSUE: reference to a compiler-generated field
      Server.OnNewClientEventHandler onNewClientEvent = this.OnNewClientEvent;
      if ((onNewClientEvent == null ? 1 : 0) != 0)
        return;
      Server.OnNewClientEventHandler clientEventHandler = onNewClientEvent;
      ArrayList clients;
      int index;
      Player1 player1 = (Player1) (clients = this.Clients)[index = checked (this.Clients.Count - 1)];
      ref Player1 local = ref player1;
      clientEventHandler(ref local);
label_8:
      int num1 = 3;
      int num2 = 27;
      while (true)
      {
        switch (num2 ^ 72)
        {
          case 80:
            switch (num1)
            {
              case 76:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Server.\u002Ector);
                num1 = 2;
                goto label_2;
              case 77:
                num1 = 0;
                goto label_2;
              case 78:
                clients[index] = (object) player1;
                num1 = 1;
                goto label_2;
              case 79:
                goto label_13;
              default:
                num2 = 26;
                continue;
            }
          case 81:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Server.remove_OnNewClient);
            num2 = 25;
            continue;
          case 82:
            goto label_8;
          case 83:
label_2:
            num1 ^= 78;
            break;
        }
        num2 = 24;
      }
label_13:;
    }

    public delegate void OnNewClientEventHandler(ref Player1 Client);
  }
}
