// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: CMSCOMSERVERFL, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: BC3392BE-E240-40FB-9209-64A3FA8E63B6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-1e3d099137ab4d4c152e6605801b6a5ead9837cb142dca1f5e596b75181cb673.exe

using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 1818639316;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1213381933)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 1555873871 ^ -1954326634;
              continue;
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 1719481954 ^ 1785405859;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) null;
label_1:
        int num1 = -914210935;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1795551327)) % 3U)
          {
            case 1:
              num1 = (int) num2 * 1084891755 ^ -918554786;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual string Value
    {
      get
      {
label_1:
        int num1 = -876283347;
        string str;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2052262698)) % 4U)
          {
            case 0:
              num1 = (int) num2 * -179730581 ^ 1162848579;
              continue;
            case 2:
              goto label_1;
            case 3:
              str = "";
              num1 = (int) num2 * 1446586328 ^ 2128963070;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return str;
      }
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
        int count = 0;
label_1:
        int num1 = -1285118261;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -187847758)) % 3U)
          {
            case 1:
              num1 = (int) num2 * -1915652655 ^ -411896529;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem)
    {
label_1:
      int num1 = 1852470884;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 375261486)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            this.Add("", aItem);
            num1 = (int) num2 * 964619129 ^ 109294748;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public virtual JSONNode Remove(string aKey)
    {
label_1:
      int num1 = 1919223612;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 638393327)) % 3U)
        {
          case 1:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * -289674381 ^ -796201889;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = 176332685;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 259132204)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 1976719621 ^ 909048442;
            continue;
          case 3:
            num1 = (int) num2 * 1436650006 ^ 1033004164;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = -1954095651;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1587438394)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 852777013 ^ 2016911853;
            continue;
          case 3:
            jsonNode = aNode;
            num1 = (int) num2 * 67314971 ^ -1774762338;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONNode.\u003Cget_Childs\u003Ed__17 getChildsD17 = new JSONNode.\u003Cget_Childs\u003Ed__17(-2);
label_1:
        int num1 = -478815345;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -657221904)) % 4U)
          {
            case 0:
              childs = (IEnumerable<JSONNode>) getChildsD17;
              num1 = (int) num2 * -1235255104 ^ -1028206127;
              continue;
            case 2:
              goto label_1;
            case 3:
              getChildsD17.\u003C\u003E4__this = this;
              num1 = (int) num2 * 1585804051 ^ -1798662491;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return childs;
      }
    }

    public IEnumerable<JSONNode> DeepChilds
    {
      get
      {
        JSONNode.\u003Cget_DeepChilds\u003Ed__19 getDeepChildsD19 = new JSONNode.\u003Cget_DeepChilds\u003Ed__19(-2);
        getDeepChildsD19.\u003C\u003E4__this = this;
label_1:
        int num1 = -1372762639;
        IEnumerable<JSONNode> deepChilds;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -372834090)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              deepChilds = (IEnumerable<JSONNode>) getDeepChildsD19;
              num1 = (int) num2 * -1396374903 ^ 1187254118;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return deepChilds;
      }
    }

    public override string ToString()
    {
label_1:
      int num1 = 188589042;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 979291185)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            str = nameof (JSONNode);
            num1 = (int) num2 * 347790094 ^ 1996042684;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual string ToString(string aPrefix)
    {
label_1:
      int num1 = -716810246;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -377710683)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -509108941 ^ -71122380;
            continue;
          case 2:
            goto label_1;
          case 3:
            str = nameof (JSONNode);
            num1 = (int) num2 * 61151934 ^ 712502219;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public virtual int AsInt
    {
      get
      {
label_1:
        int num1 = -1773376040;
        int asInt;
        int result;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1311009750)) % 7U)
          {
            case 0:
              int num3 = !int.TryParse(this.Value, out result) ? 1222670247 : (num3 = 384047870);
              num1 = num3 ^ (int) num2 * 528683932;
              continue;
            case 1:
              asInt = 0;
              num1 = -2089535852;
              continue;
            case 2:
              goto label_1;
            case 3:
              asInt = result;
              num1 = (int) num2 * -1463070675 ^ 399257012;
              continue;
            case 4:
              result = 0;
              num1 = (int) num2 * 1793565572 ^ 197155787;
              continue;
            case 6:
              num1 = (int) num2 * 1181417162 ^ 1466958928;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asInt;
      }
      set
      {
        this.Value = value.ToString();
label_1:
        int num1 = -1247110999;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -871496077)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              num1 = (int) num2 * 876354295 ^ 1891129795;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual float AsFloat
    {
      get
      {
label_1:
        int num1 = -1342946849;
        float result;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1416186188)) % 8U)
          {
            case 0:
              num1 = (int) num2 * -1395727612 ^ 585195485;
              continue;
            case 2:
              goto label_1;
            case 3:
              result = 0.0f;
              num1 = (int) num2 * 2103182345 ^ 2004458153;
              continue;
            case 4:
              num1 = (int) num2 * 465459650 ^ -1958111211;
              continue;
            case 5:
              asFloat = 0.0f;
              num1 = -1367951596;
              continue;
            case 6:
              int num3 = !float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u200E‏‬‮⁭‏‏‫‫⁪‮‍‎‏⁮⁫⁯‎⁫‌⁮‭‬⁭​‮⁭‪‭‮⁭‌‌‬⁮‫‮‍‫‍‮(), out result) ? -1681539963 : (num3 = -435540065);
              num1 = num3 ^ (int) num2 * -291320926;
              continue;
            case 7:
              asFloat = result;
              num1 = (int) num2 * 874072854 ^ 1089130986;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asFloat;
      }
      set
      {
        this.Value = value.ToString();
label_1:
        int num1 = 1329815050;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 9017867)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              num1 = (int) num2 * -1822752533 ^ 1385450043;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual double AsDouble
    {
      get
      {
        double result = 0.0;
label_1:
        int num1 = 1783859603;
        bool flag;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1909874115)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              asDouble = result;
              num1 = (int) num2 * -1992129355 ^ -1349569897;
              continue;
            case 2:
              flag = double.TryParse(this.Value, out result);
              num1 = (int) num2 * -1582172771 ^ 691693470;
              continue;
            case 3:
              int num3 = flag ? -1740929663 : (num3 = -1169277802);
              num1 = num3 ^ (int) num2 * 288276787;
              continue;
            case 4:
              asDouble = 0.0;
              num1 = 1494594894;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = 832397310;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 81215889)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Value = value.ToString();
              num1 = (int) num2 * 1260316226 ^ 1355269341;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual bool AsBool
    {
      get
      {
label_1:
        int num1 = 1839196681;
        bool result;
        bool asBool;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1984265502)) % 9U)
          {
            case 0:
              num1 = (int) num2 * -105727226 ^ 541172089;
              continue;
            case 1:
              num1 = (int) num2 * -1953023240 ^ 1064946631;
              continue;
            case 2:
              result = false;
              num1 = (int) num2 * -742177510 ^ -422884795;
              continue;
            case 3:
              flag = bool.TryParse(this.Value, out result);
              num1 = (int) num2 * -1427332616 ^ -1646225401;
              continue;
            case 4:
              asBool = !JSONNode.\u202B‎‍⁬​‭‌⁪⁪‎⁫‪‎‌‭‎⁯‬⁯​‬‪⁮‏⁫‎‍‏⁯⁫‪⁪⁮‌‭‭⁯⁭‎‏‮(this.Value);
              num1 = 622067079;
              continue;
            case 5:
              int num3 = flag ? -1253048736 : (num3 = -2081942223);
              num1 = num3 ^ (int) num2 * -2147096112;
              continue;
            case 6:
              asBool = result;
              num1 = (int) num2 * 83003924 ^ 1374117149;
              continue;
            case 7:
              goto label_1;
            default:
              goto label_10;
          }
        }
label_10:
        return asBool;
      }
      set
      {
label_1:
        int num1 = 887734069;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1002989548)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Value = value ? "true" : "false";
              num1 = 1273842756;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = -606169894;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1638281004)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              asArray = this as JSONArray;
              num1 = (int) num2 * -1291472046 ^ 748863179;
              continue;
            case 3:
              num1 = (int) num2 * 2107063078 ^ -765626521;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asArray;
      }
    }

    public virtual JSONClass AsObject => this as JSONClass;

    public static implicit operator JSONNode(string s)
    {
label_1:
      int num1 = -759421562;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1707270053)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            jsonNode = (JSONNode) new JSONData(s);
            num1 = (int) num2 * -2096132993 ^ 1555430067;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public static implicit operator string(JSONNode d)
    {
      if (d == (object) null)
        goto label_4;
label_1:
      int num1 = 1481750976;
label_2:
      uint num2;
      string str1;
      string str2;
      switch ((num2 = (uint) (num1 ^ 118694625)) % 3U)
      {
        case 0:
          goto label_1;
        case 1:
          str2 = d.Value;
          goto label_5;
        default:
          return str1;
      }
label_4:
      str2 = (string) null;
label_5:
      str1 = str2;
      num1 = 1310311828;
      goto label_2;
    }

    public static bool operator ==(JSONNode a, object b)
    {
label_1:
      int num1 = -250083945;
      bool flag;
      while (true)
      {
        uint num2;
        int num3;
        switch ((num2 = (uint) (num1 ^ -2067116502)) % 7U)
        {
          case 0:
            num3 = a is JSONLazyCreator ? 1 : 0;
            break;
          case 1:
            flag = (object) a == b;
            num1 = -108002422;
            continue;
          case 3:
            num1 = (int) num2 * 1770998616 ^ 2043885717;
            continue;
          case 4:
            if (b == null)
            {
              num1 = (int) num2 * -1741719298 ^ 1413043965;
              continue;
            }
            num3 = 0;
            break;
          case 5:
            flag = true;
            num1 = (int) num2 * -91823852 ^ -1500635399;
            continue;
          case 6:
            goto label_1;
          default:
            goto label_11;
        }
        int num4;
        num1 = num4 = num3 != 0 ? -1416618955 : (num4 = -219114794);
      }
label_11:
      return flag;
    }

    public static bool operator !=(JSONNode a, object b)
    {
label_1:
      int num1 = -131571628;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2031592754)) % 4U)
        {
          case 1:
            num1 = (int) num2 * -1253747650 ^ 886942748;
            continue;
          case 2:
            flag = !(a == b);
            num1 = (int) num2 * 2032173068 ^ -1191293313;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = 269178852;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2077363849)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -80138997 ^ -693638226;
            continue;
          case 1:
            flag = (object) this == obj;
            num1 = (int) num2 * -963905684 ^ 1979469413;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override int GetHashCode()
    {
label_1:
      int num1 = 2076420465;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2094739954)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1042988443 ^ 768814989;
            continue;
          case 3:
            hashCode = this.\u202A‬‪​‫‫⁪‎‮‪‍⁫⁫‌⁯‮‭‏‪‬⁭‎‎​​‪‎‮‭‍​⁯‏‮‌⁪‮‍⁯⁪‮();
            num1 = (int) num2 * 1024215789 ^ 1585663108;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return hashCode;
    }

    internal static string Escape(string aText)
    {
      string str1 = "";
label_1:
      int num1 = 1650680927;
      string str2;
      int num2;
      char ch1;
      char ch2;
      char ch3;
      string str3;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 1199299607)) % 33U)
        {
          case 0:
label_18:
            str1 = JSONNode.\u206B⁯⁬‭‍⁮‍⁯‫‭​‬‮⁬⁫‏⁬⁫​‍​‭‎‎⁪⁫‮⁯‮‏‪‫⁭⁯‮⁪⁫‏‪‫‮(str1, "\\r");
            num1 = 714986265;
            continue;
          case 1:
            int num4;
            num1 = num4 = num2 < JSONNode.\u202D⁮​‫‭‫‫⁬⁯‍‭‪‎‬​‏⁭⁯‍‮‮⁪‬⁫‏⁮‌‫​‎​⁬‪‏‬‬‬‍‎‮‮(str2) ? 695230194 : (num4 = 838139784);
            continue;
          case 2:
            num1 = (int) num3 * 1757170970 ^ -1765311257;
            continue;
          case 3:
            ch2 = JSONNode.\u200E⁯⁪⁭‎‏‭⁭⁬​⁯‫⁮⁭‭‎‎‎‬‭‮⁯⁫‎⁬⁪‎‌‍‪‪​‫⁬⁫⁯‌⁫‪⁭‮(str2, num2);
            num1 = 1515945858;
            continue;
          case 4:
            num1 = (int) num3 * -31671523 ^ -454790430;
            continue;
          case 5:
            int num5;
            num1 = num5 = ch1 == '"' ? 1958748676 : (num5 = 1558056634);
            continue;
          case 6:
            ch1 = ch3;
            num1 = (int) num3 * 156795932 ^ 144201909;
            continue;
          case 7:
            ++num2;
            num1 = (int) num3 * 1798609399 ^ -1929206357;
            continue;
          case 8:
            switch (ch1)
            {
              case '\b':
                goto label_31;
              case '\t':
                goto label_24;
              case '\n':
                goto label_22;
              case '\v':
                goto label_26;
              case '\f':
                goto label_30;
              case '\r':
                goto label_18;
              default:
                num1 = (int) num3 * 1219631953 ^ -286644599;
                continue;
            }
          case 9:
            ch3 = ch2;
            num1 = (int) num3 * 1241062790 ^ -1179085686;
            continue;
          case 10:
            num1 = (int) num3 * 1741596342 ^ 1136931584;
            continue;
          case 11:
            int num6;
            num1 = num6 = ch1 == '\\' ? 1062185457 : (num6 = 1002909880);
            continue;
          case 12:
            goto label_1;
          case 13:
            str1 = JSONNode.\u206B⁯⁬‭‍⁮‍⁯‫‭​‬‮⁬⁫‏⁬⁫​‍​‭‎‎⁪⁫‮⁯‮‏‪‫⁭⁯‮⁪⁫‏‪‫‮(str1, "\\\"");
            num1 = 1717715017;
            continue;
          case 14:
            num1 = (int) num3 * 179609783 ^ 883182220;
            continue;
          case 15:
            num1 = (int) num3 * 993070248 ^ -1248181066;
            continue;
          case 16:
            num1 = (int) num3 * 432464021 ^ 1518206892;
            continue;
          case 17:
            num1 = (int) num3 * -1516367669 ^ -1649444956;
            continue;
          case 19:
label_24:
            str1 = JSONNode.\u206B⁯⁬‭‍⁮‍⁯‫‭​‬‮⁬⁫‏⁬⁫​‍​‭‎‎⁪⁫‮⁯‮‏‪‫⁭⁯‮⁪⁫‏‪‫‮(str1, "\\t");
            num1 = 338045841;
            continue;
          case 20:
            str2 = aText;
            num2 = 0;
            num1 = (int) num3 * 2015978850 ^ -219951942;
            continue;
          case 21:
            str1 = JSONNode.\u206B⁯⁬‭‍⁮‍⁯‫‭​‬‮⁬⁫‏⁬⁫​‍​‭‎‎⁪⁫‮⁯‮‏‪‫⁭⁯‮⁪⁫‏‪‫‮(str1, "\\\\");
            num1 = 1823975726;
            continue;
          case 22:
            num1 = (int) num3 * -1358540974 ^ -1048116322;
            continue;
          case 23:
            num1 = (int) num3 * -1813480272 ^ -1064138610;
            continue;
          case 24:
label_31:
            str1 = JSONNode.\u206B⁯⁬‭‍⁮‍⁯‫‭​‬‮⁬⁫‏⁬⁫​‍​‭‎‎⁪⁫‮⁯‮‏‪‫⁭⁯‮⁪⁫‏‪‫‮(str1, "\\b");
            num1 = 749730864;
            continue;
          case 25:
label_26:
            str1 = JSONNode.\u206B⁯⁬‭‍⁮‍⁯‫‭​‬‮⁬⁫‏⁬⁫​‍​‭‎‎⁪⁫‮⁯‮‏‪‫⁭⁯‮⁪⁫‏‪‫‮(str1, ch2.ToString());
            num1 = 776804834;
            continue;
          case 26:
            num1 = (int) num3 * -1896865520 ^ -657451186;
            continue;
          case 27:
            num1 = (int) num3 * -1467980532 ^ -689588190;
            continue;
          case 28:
            num1 = 1196827437;
            continue;
          case 29:
            str3 = str1;
            num1 = (int) num3 * -21185443 ^ 910865975;
            continue;
          case 30:
label_22:
            str1 = JSONNode.\u206B⁯⁬‭‍⁮‍⁯‫‭​‬‮⁬⁫‏⁬⁫​‍​‭‎‎⁪⁫‮⁯‮‏‪‫⁭⁯‮⁪⁫‏‪‫‮(str1, "\\n");
            num1 = 2059094617;
            continue;
          case 31:
            num1 = (int) num3 * 431381496 ^ -1379599170;
            continue;
          case 32:
label_30:
            str1 = JSONNode.\u206B⁯⁬‭‍⁮‍⁯‫‭​‬‮⁬⁫‏⁬⁫​‍​‭‎‎⁪⁫‮⁯‮‏‪‫⁭⁯‮⁪⁫‏‪‫‮(str1, "\\f");
            num1 = 1823975726;
            continue;
          default:
            goto label_35;
        }
      }
label_35:
      return str3;
    }

    public static JSONNode Parse(string aJSON)
    {
      Stack<JSONNode> jsonNodeStack = new Stack<JSONNode>();
label_1:
      int num1 = -463687043;
      JSONNode jsonNode1;
      JSONNode jsonNode2;
      string aKey;
      bool flag1;
      bool flag2;
      bool flag3;
      int num2;
      char ch1;
      bool flag4;
      string aItem;
      bool flag5;
      bool flag6;
      char ch2;
      bool flag7;
      bool flag8;
      bool flag9;
      char ch3;
      char ch4;
      bool flag10;
      bool flag11;
      bool flag12;
      char ch5;
      bool flag13;
      bool flag14;
      bool flag15;
      bool flag16;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -824643237)) % 152U)
        {
          case 0:
            aItem = JSONNode.\u206B⁯⁬‭‍⁮‍⁯‫‭​‬‮⁬⁫‏⁬⁫​‍​‭‎‎⁪⁫‮⁯‮‏‪‫⁭⁯‮⁪⁫‏‪‫‮(aItem, "\f");
            num1 = -721519527;
            continue;
          case 1:
            num1 = (int) num3 * 1075455984 ^ -1389714693;
            continue;
          case 2:
          case 48:
          case 56:
          case 70:
          case 95:
label_132:
            ++num2;
            num1 = -1183708973;
            continue;
          case 3:
            int num4 = !flag11 ? 741731014 : (num4 = 1959946128);
            num1 = num4 ^ (int) num3 * -1431091291;
            continue;
          case 4:
            num1 = (int) num3 * -393719097 ^ 1601713429;
            continue;
          case 5:
            num1 = (int) num3 * 1916368089 ^ 279812432;
            continue;
          case 6:
            string str1 = aItem;
            ch3 = JSONNode.\u200E⁯⁪⁭‎‏‭⁭⁬​⁯‫⁮⁭‭‎‎‎‬‭‮⁯⁫‎⁬⁪‎‌‍‪‪​‫⁬⁫⁯‌⁫‪⁭‮(aJSON, num2);
            string str2 = ch3.ToString();
            aItem = JSONNode.\u206B⁯⁬‭‍⁮‍⁯‫‭​‬‮⁬⁫‏⁬⁫​‍​‭‎‎⁪⁫‮⁯‮‏‪‫⁭⁯‮⁪⁫‏‪‫‮(str1, str2);
            num1 = (int) num3 * -1008795079 ^ 1156982173;
            continue;
          case 7:
            num1 = (int) num3 * -1900022431 ^ 1442065810;
            continue;
          case 8:
            aKey = JSONNode.\u206E‏‍⁪‍⁫⁫‌‪⁯‮⁯‍⁪⁮⁪‪‫⁫‫‌‌‪‮⁭⁭‪​⁬⁪‮‎⁭⁪⁪⁭⁬‫⁪‍‮(aKey);
            flag2 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -61907532 ^ -1016248255;
            continue;
          case 9:
            num1 = (int) num3 * 1120267875 ^ -1701310521;
            continue;
          case 10:
            int num5 = flag16 ? -1933326472 : (num5 = -1878980714);
            num1 = num5 ^ (int) num3 * 530320918;
            continue;
          case 11:
            goto label_1;
          case 12:
            string str3 = aItem;
            ch3 = JSONNode.\u200E⁯⁪⁭‎‏‭⁭⁬​⁯‫⁮⁭‭‎‎‎‬‭‮⁯⁫‎⁬⁪‎‌‍‪‪​‫⁬⁫⁯‌⁫‪⁭‮(aJSON, num2);
            string str4 = ch3.ToString();
            aItem = JSONNode.\u206B⁯⁬‭‍⁮‍⁯‫‭​‬‮⁬⁫‏⁬⁫​‍​‭‎‎⁪⁫‮⁯‮‏‪‫⁭⁯‮⁪⁫‏‪‫‮(str3, str4);
            num1 = (int) num3 * 493866182 ^ -2090147137;
            continue;
          case 13:
            int num6;
            num1 = num6 = ch2 != ',' ? -1353346185 : (num6 = -1431441278);
            continue;
          case 14:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 1780709605 ^ -1826245241;
            continue;
          case 15:
            aItem = "";
            num1 = (int) num3 * 1454505141 ^ 1427331485;
            continue;
          case 16:
            aKey = JSONNode.\u206E‏‍⁪‍⁫⁫‌‪⁯‮⁯‍⁪⁮⁪‪‫⁫‫‌‌‪‮⁭⁭‪​⁬⁪‮‎⁭⁪⁪⁭⁬‫⁪‍‮(aKey);
            num1 = (int) num3 * 1397809602 ^ -2126476832;
            continue;
          case 17:
            num1 = -2041118954;
            continue;
          case 18:
            num1 = (int) num3 * 1454699407 ^ -326956880;
            continue;
          case 19:
            num1 = (int) num3 * 358049086 ^ -168665844;
            continue;
          case 20:
            num1 = (int) num3 * 1928052491 ^ 601140335;
            continue;
          case 21:
            int num7 = flag9 ? 134508883 : (num7 = 914619187);
            num1 = num7 ^ (int) num3 * -1453706647;
            continue;
          case 22:
            int num8;
            num1 = num8 = ch2 == '}' ? -1449543401 : (num8 = -1040676869);
            continue;
          case 23:
            int num9 = ch4 == 'b' ? 1287926037 : (num9 = 529059001);
            num1 = num9 ^ (int) num3 * 1431225969;
            continue;
          case 24:
            num1 = (int) num3 * 452487194 ^ 337463253;
            continue;
          case 25:
            aItem = JSONNode.\u206B⁯⁬‭‍⁮‍⁯‫‭​‬‮⁬⁫‏⁬⁫​‍​‭‎‎⁪⁫‮⁯‮‏‪‫⁭⁯‮⁪⁫‏‪‫‮(aItem, "\b");
            num1 = -721519527;
            continue;
          case 26:
            flag4 = JSONNode.\u206A‪⁯⁫⁫‮⁪⁭‫‬‬⁮⁫⁯⁫⁮‏‮‏‭‌​⁫‎‭⁯⁬‎⁪‍‪⁬‮‭⁯‬⁪​‪⁬‮(aKey, "");
            num1 = -367526111;
            continue;
          case 27:
            num1 = (int) num3 * 507959575 ^ 1914225375;
            continue;
          case 28:
            num1 = (int) num3 * -969214100 ^ 790077474;
            continue;
          case 29:
            num1 = (int) num3 * 780402980 ^ -1239409042;
            continue;
          case 30:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -1559795988 ^ -253722977;
            continue;
          case 31:
            jsonNodeStack.Pop();
            int num10;
            num1 = num10 = !JSONNode.\u206A‪⁯⁫⁫‮⁪⁭‫‬‬⁮⁫⁯⁫⁮‏‮‏‭‌​⁫‎‭⁯⁬‎⁪‍‪⁬‮‭⁯‬⁪​‪⁬‮(aItem, "") ? -227342027 : (num10 = -2069689732);
            continue;
          case 32:
            flag15 = num2 < JSONNode.\u202D⁮​‫‭‫‫⁬⁯‍‭‪‎‬​‏⁭⁯‍‮‮⁪‬⁫‏⁮‌‫​‎​⁬‪‏‬‬‬‍‎‮‮(aJSON);
            num1 = -651160929;
            continue;
          case 33:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num1 = -502935525;
            continue;
          case 34:
            int num11 = flag4 ? 1254928574 : (num11 = 1395173664);
            num1 = num11 ^ (int) num3 * 1728373421;
            continue;
          case 35:
            int num12;
            num1 = num12 = ch2 <= ']' ? -2085344222 : (num12 = -519710236);
            continue;
          case 36:
            string str5 = aItem;
            ch3 = JSONNode.\u200E⁯⁪⁭‎‏‭⁭⁬​⁯‫⁮⁭‭‎‎‎‬‭‮⁯⁫‎⁬⁪‎‌‍‪‪​‫⁬⁫⁯‌⁫‪⁭‮(aJSON, num2);
            string str6 = ch3.ToString();
            aItem = JSONNode.\u206B⁯⁬‭‍⁮‍⁯‫‭​‬‮⁬⁫‏⁬⁫​‍​‭‎‎⁪⁫‮⁯‮‏‪‫⁭⁯‮⁪⁫‏‪‫‮(str5, str6);
            num1 = (int) num3 * -1702652636 ^ -456548037;
            continue;
          case 37:
            aItem = "";
            num1 = (int) num3 * 1940952800 ^ -1695795005;
            continue;
          case 38:
            string str7 = aItem;
            ch3 = JSONNode.\u200E⁯⁪⁭‎‏‭⁭⁬​⁯‫⁮⁭‭‎‎‎‬‭‮⁯⁫‎⁬⁪‎‌‍‪‪​‫⁬⁫⁯‌⁫‪⁭‮(aJSON, num2);
            string str8 = ch3.ToString();
            aItem = JSONNode.\u206B⁯⁬‭‍⁮‍⁯‫‭​‬‮⁬⁫‏⁬⁫​‍​‭‎‎⁪⁫‮⁯‮‏‪‫⁭⁯‮⁪⁫‏‪‫‮(str7, str8);
            num1 = (int) num3 * 277670825 ^ -1459612540;
            continue;
          case 39:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 1088553170 ^ 44567349;
            continue;
          case 40:
            aKey = JSONNode.\u206E‏‍⁪‍⁫⁫‌‪⁯‮⁯‍⁪⁮⁪‪‫⁫‫‌‌‪‮⁭⁭‪​⁬⁪‮‎⁭⁪⁪⁭⁬‫⁪‍‮(aKey);
            num1 = (int) num3 * -945954645 ^ -452376248;
            continue;
          case 41:
            num1 = (int) num3 * 630763953 ^ 252116626;
            continue;
          case 42:
            int num13;
            num1 = num13 = ch4 == 'f' ? -1555423261 : (num13 = -1926121905);
            continue;
          case 43:
            aItem = JSONNode.\u206B⁯⁬‭‍⁮‍⁯‫‭​‬‮⁬⁫‏⁬⁫​‍​‭‎‎⁪⁫‮⁯‮‏‪‫⁭⁯‮⁪⁫‏‪‫‮(aItem, "\n");
            num1 = -721519527;
            continue;
          case 44:
            num1 = (int) num3 * -596120219 ^ -711827802;
            continue;
          case 45:
            num1 = (int) num3 * -1714583851 ^ 1820824554;
            continue;
          case 46:
            num1 = (int) num3 * 833689747 ^ 827391307;
            continue;
          case 47:
            int num14;
            num1 = num14 = ch2 != '{' ? -1403423866 : (num14 = -2051717616);
            continue;
          case 49:
            int num15 = ch2 <= ' ' ? 878810973 : (num15 = 17136057);
            num1 = num15 ^ (int) num3 * -784495794;
            continue;
          case 50:
            int num16 = flag8 ? -889278215 : (num16 = -412104428);
            num1 = num16 ^ (int) num3 * 2133624652;
            continue;
          case 51:
label_96:
            flag14 = flag5;
            num1 = -1271390587;
            continue;
          case 52:
            flag1 = JSONNode.\u206A‪⁯⁫⁫‮⁪⁭‫‬‬⁮⁫⁯⁫⁮‏‮‏‭‌​⁫‎‭⁯⁬‎⁪‍‪⁬‮‭⁯‬⁪​‪⁬‮(aKey, "");
            num1 = -1675052555;
            continue;
          case 53:
            int num17 = jsonNode1 is JSONArray ? -1279527476 : (num17 = -72338022);
            num1 = num17 ^ (int) num3 * 1154107842;
            continue;
          case 54:
            switch (ch4)
            {
              case 'r':
                goto label_39;
              case 's':
                goto label_44;
              case 't':
                goto label_85;
              case 'u':
                goto label_127;
              default:
                num1 = -1178809512;
                continue;
            }
          case 55:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 1507496176 ^ 660351720;
            continue;
          case 57:
            ch1 = JSONNode.\u200E⁯⁪⁭‎‏‭⁭⁬​⁯‫⁮⁭‭‎‎‎‬‭‮⁯⁫‎⁬⁪‎‌‍‪‪​‫⁬⁫⁯‌⁫‪⁭‮(aJSON, num2);
            num1 = (int) num3 * 427290143 ^ -747489197;
            continue;
          case 58:
            goto label_133;
          case 59:
            string str9 = aItem;
            ch3 = JSONNode.\u200E⁯⁪⁭‎‏‭⁭⁬​⁯‫⁮⁭‭‎‎‎‬‭‮⁯⁫‎⁬⁪‎‌‍‪‪​‫⁬⁫⁯‌⁫‪⁭‮(aJSON, num2);
            string str10 = ch3.ToString();
            aItem = JSONNode.\u206B⁯⁬‭‍⁮‍⁯‫‭​‬‮⁬⁫‏⁬⁫​‍​‭‎‎⁪⁫‮⁯‮‏‪‫⁭⁯‮⁪⁫‏‪‫‮(str9, str10);
            num1 = (int) num3 * 605586660 ^ 689855408;
            continue;
          case 60:
label_75:
            flag11 = flag5;
            num1 = -752618936;
            continue;
          case 61:
            int num18 = !flag5 ? -1101192898 : (num18 = -128644537);
            num1 = num18 ^ (int) num3 * 492597456;
            continue;
          case 62:
            aKey = "";
            aItem = "";
            num1 = -1372535879;
            continue;
          case 63:
            int num19 = !flag3 ? 1624613358 : (num19 = 737163168);
            num1 = num19 ^ (int) num3 * 679283598;
            continue;
          case 64:
            flag3 = jsonNode1 != (object) null;
            num1 = (int) num3 * 751306911 ^ 1397910332;
            continue;
          case 65:
            num1 = -1057419331;
            continue;
          case 66:
            num1 = -335952075;
            continue;
          case 67:
            int num20 = !(jsonNode1 is JSONArray) ? -566081158 : (num20 = -1078295640);
            num1 = num20 ^ (int) num3 * 1776377911;
            continue;
          case 68:
            num1 = (int) num3 * 704603581 ^ 1385209321;
            continue;
          case 69:
            int num21 = !flag7 ? 559373009 : (num21 = 503532022);
            num1 = num21 ^ (int) num3 * 932547759;
            continue;
          case 71:
            aKey = "";
            num1 = -164473669;
            continue;
          case 72:
            num1 = (int) num3 * -979510204 ^ -1812870910;
            continue;
          case 73:
            int num22 = ch2 == ':' ? -1319838958 : (num22 = -1546651303);
            num1 = num22 ^ (int) num3 * 439353409;
            continue;
          case 74:
            num1 = (int) num3 * 835608108 ^ -1477312115;
            continue;
          case 75:
            flag12 = flag5;
            num1 = -465324940;
            continue;
          case 76:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -1794956589 ^ -1411920249;
            continue;
          case 77:
            int num23 = flag6 ? -118644793 : (num23 = -79138395);
            num1 = num23 ^ (int) num3 * -1521231372;
            continue;
          case 78:
label_39:
            aItem = JSONNode.\u206B⁯⁬‭‍⁮‍⁯‫‭​‬‮⁬⁫‏⁬⁫​‍​‭‎‎⁪⁫‮⁯‮‏‪‫⁭⁯‮⁪⁫‏‪‫‮(aItem, "\r");
            num1 = -2046274504;
            continue;
          case 79:
            int num24 = !flag5 ? 1112969214 : (num24 = 1215303220);
            num1 = num24 ^ (int) num3 * 462665541;
            continue;
          case 80:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -1972017793 ^ 1608876447;
            continue;
          case 81:
            flag5 = false;
            num1 = (int) num3 * -558400928 ^ -184495720;
            continue;
          case 82:
            ch4 = ch5;
            num1 = (int) num3 * 2035325567 ^ 2069047753;
            continue;
          case 83:
            num1 = (int) num3 * 1397401273 ^ 1750458392;
            continue;
          case 84:
            flag6 = JSONNode.\u206A‪⁯⁫⁫‮⁪⁭‫‬‬⁮⁫⁯⁫⁮‏‮‏‭‌​⁫‎‭⁯⁬‎⁪‍‪⁬‮‭⁯‬⁪​‪⁬‮(aKey, "");
            num1 = -1766203698;
            continue;
          case 85:
            flag9 = jsonNode1 != (object) null;
            num1 = (int) num3 * -1972458591 ^ -52170157;
            continue;
          case 86:
label_127:
            string s = JSONNode.\u206D‮⁮⁯⁮⁭⁪⁬⁭‎‫‪‎‪⁯‬⁫⁭‌‬‪‎‌⁬‮⁯‏‬‎‎​‪⁯‎⁬‪‮‬‌‮(aJSON, num2 + 1, 4);
            string str11 = aItem;
            ch3 = (char) int.Parse(s, NumberStyles.AllowHexSpecifier);
            string str12 = ch3.ToString();
            aItem = JSONNode.\u206B⁯⁬‭‍⁮‍⁯‫‭​‬‮⁬⁫‏⁬⁫​‍​‭‎‎⁪⁫‮⁯‮‏‪‫⁭⁯‮⁪⁫‏‪‫‮(str11, str12);
            num2 += 4;
            num1 = -721519527;
            continue;
          case 87:
            num1 = (int) num3 * -72772727 ^ -1426500276;
            continue;
          case 88:
            num2 = 0;
            aItem = "";
            aKey = "";
            num1 = (int) num3 * 644337228 ^ -1223825198;
            continue;
          case 89:
            int num25 = ch2 <= ',' ? 957530662 : (num25 = 1027093132);
            num1 = num25 ^ (int) num3 * 335340908;
            continue;
          case 90:
            int num26 = flag2 ? 1536724886 : (num26 = 788160723);
            num1 = num26 ^ (int) num3 * 1712085585;
            continue;
          case 91:
            num1 = (int) num3 * 437503473 ^ -1179464758;
            continue;
          case 92:
            num1 = (int) num3 * 1029249314 ^ -1210788461;
            continue;
          case 93:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 1198854109 ^ -235395608;
            continue;
          case 94:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num3 * -937210920 ^ -347939309;
            continue;
          case 96:
            num1 = (int) num3 * -779482343 ^ 729668962;
            continue;
          case 97:
            num1 = -1988857780;
            continue;
          case 98:
            string str13 = aItem;
            ch3 = JSONNode.\u200E⁯⁪⁭‎‏‭⁭⁬​⁯‫⁮⁭‭‎‎‎‬‭‮⁯⁫‎⁬⁪‎‌‍‪‪​‫⁬⁫⁯‌⁫‪⁭‮(aJSON, num2);
            string str14 = ch3.ToString();
            aItem = JSONNode.\u206B⁯⁬‭‍⁮‍⁯‫‭​‬‮⁬⁫‏⁬⁫​‍​‭‎‎⁪⁫‮⁯‮‏‪‫⁭⁯‮⁪⁫‏‪‫‮(str13, str14);
            num1 = (int) num3 * -1076092673 ^ 564454797;
            continue;
          case 99:
label_48:
            int num27;
            num1 = num27 = !flag5 ? -239616324 : (num27 = -1992619264);
            continue;
          case 100:
            goto label_117;
          case 101:
            num1 = (int) num3 * 1886045184 ^ 101401609;
            continue;
          case 102:
            aKey = "";
            num1 = -205755420;
            continue;
          case 103:
            int num28 = !flag12 ? 1766697859 : (num28 = 1168894692);
            num1 = num28 ^ (int) num3 * -608461281;
            continue;
          case 104:
            flag5 = !flag5;
            num1 = -1372953090;
            continue;
          case 105:
            flag7 = flag5;
            num1 = -419865026;
            continue;
          case 106:
            flag8 = jsonNodeStack.Count == 0;
            num1 = -480699783;
            continue;
          case 107:
            num1 = (int) num3 * 177741293 ^ -934072322;
            continue;
          case 108:
            num1 = (int) num3 * 1570122790 ^ -1928667935;
            continue;
          case 109:
            num1 = (int) num3 * -554363781 ^ 354971444;
            continue;
          case 110:
            int num29 = !flag14 ? 295118128 : (num29 = 436210807);
            num1 = num29 ^ (int) num3 * -1011828413;
            continue;
          case 111:
            ch5 = ch1;
            num1 = (int) num3 * -729987189 ^ 495035772;
            continue;
          case 112:
            switch (ch2)
            {
              case '\t':
                goto label_48;
              case '\n':
              case '\r':
                goto label_132;
              case '\v':
              case '\f':
                goto label_120;
              default:
                num1 = (int) num3 * 393441365 ^ -1542735646;
                continue;
            }
          case 113:
            num1 = (int) num3 * 511762005 ^ 363798668;
            continue;
          case 114:
            num1 = (int) num3 * 736681453 ^ -485250479;
            continue;
          case 115:
            flag16 = JSONNode.\u206A‪⁯⁫⁫‮⁪⁭‫‬‬⁮⁫⁯⁫⁮‏‮‏‭‌​⁫‎‭⁯⁬‎⁪‍‪⁬‮‭⁯‬⁪​‪⁬‮(aKey, "");
            num1 = -1591005191;
            continue;
          case 116:
            int num30;
            num1 = num30 = ch4 != 'n' ? -87373100 : (num30 = -838776072);
            continue;
          case 117:
            switch (ch2)
            {
              case '[':
                goto label_96;
              case '\\':
                goto label_72;
              case ']':
                goto label_75;
              default:
                num1 = -1366890748;
                continue;
            }
          case 118:
label_120:
            string str15 = aItem;
            ch3 = JSONNode.\u200E⁯⁪⁭‎‏‭⁭⁬​⁯‫⁮⁭‭‎‎‎‬‭‮⁯⁫‎⁬⁪‎‌‍‪‪​‫⁬⁫⁯‌⁫‪⁭‮(aJSON, num2);
            string str16 = ch3.ToString();
            aItem = JSONNode.\u206B⁯⁬‭‍⁮‍⁯‫‭​‬‮⁬⁫‏⁬⁫​‍​‭‎‎⁪⁫‮⁯‮‏‪‫⁭⁯‮⁪⁫‏‪‫‮(str15, str16);
            num1 = -1902088794;
            continue;
          case 119:
            int num31;
            num1 = num31 = ch2 == ' ' ? -1622584040 : (num31 = -1144788727);
            continue;
          case 120:
            int num32 = flag10 ? 1782666133 : (num32 = 248755855);
            num1 = num32 ^ (int) num3 * 1128402270;
            continue;
          case 121:
            flag13 = JSONNode.\u206A‪⁯⁫⁫‮⁪⁭‫‬‬⁮⁫⁯⁫⁮‏‮‏‭‌​⁫‎‭⁯⁬‎⁪‍‪⁬‮‭⁯‬⁪​‪⁬‮(aItem, "");
            num1 = -603465643;
            continue;
          case 122:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 1818252218 ^ -720353274;
            continue;
          case 123:
            flag10 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 1705113128 ^ 1946219691;
            continue;
          case 124:
            int num33;
            num1 = num33 = ch2 != '"' ? -513998391 : (num33 = -1650677469);
            continue;
          case 125:
            aKey = "";
            aItem = "";
            jsonNode1 = jsonNodeStack.Peek();
            num1 = -473059430;
            continue;
          case 126:
            int num34 = !flag1 ? 755098392 : (num34 = 1477815403);
            num1 = num34 ^ (int) num3 * 1947531771;
            continue;
          case (uint) sbyte.MaxValue:
            num1 = (int) num3 * -244675388 ^ -769663804;
            continue;
          case 128:
            int num35;
            num1 = num35 = flag5 ? -404505153 : (num35 = -2024865696);
            continue;
          case 129:
            num1 = (int) num3 * 191841812 ^ 1625600639;
            continue;
          case 130:
            num1 = -227342027;
            continue;
          case 131:
            aKey = aItem;
            num1 = -440909290;
            continue;
          case 132:
label_72:
            ++num2;
            num1 = -1113339500;
            continue;
          case 133:
            int num36 = jsonNodeStack.Count > 0 ? -1387420906 : (num36 = -1800529790);
            num1 = num36 ^ (int) num3 * -1422213451;
            continue;
          case 134:
            num1 = (int) num3 * 618567637 ^ 2064088979;
            continue;
          case 135:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -2014422508 ^ 1031160307;
            continue;
          case 136:
            aItem = "";
            num1 = (int) num3 * -1901198122 ^ -6031091;
            continue;
          case 137:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            num1 = -1480368530;
            continue;
          case 138:
label_44:
            aItem = JSONNode.\u206B⁯⁬‭‍⁮‍⁯‫‭​‬‮⁬⁫‏⁬⁫​‍​‭‎‎⁪⁫‮⁯‮‏‪‫⁭⁯‮⁪⁫‏‪‫‮(aItem, ch1.ToString());
            num1 = -1248791078;
            continue;
          case 140:
            int num37 = flag15 ? 1875010282 : (num37 = 30335702);
            num1 = num37 ^ (int) num3 * -2024721266;
            continue;
          case 141:
            jsonNode2 = jsonNode1;
            num1 = -2011044460;
            continue;
          case 142:
            int num38 = !flag13 ? -1886616695 : (num38 = -722409966);
            num1 = num38 ^ (int) num3 * -1005123178;
            continue;
          case 143:
            num1 = (int) num3 * -843172718 ^ 1339442619;
            continue;
          case 144:
            num1 = (int) num3 * 1280438990 ^ 1558427899;
            continue;
          case 145:
            ch2 = JSONNode.\u200E⁯⁪⁭‎‏‭⁭⁬​⁯‫⁮⁭‭‎‎‎‬‭‮⁯⁫‎⁬⁪‎‌‍‪‪​‫⁬⁫⁯‌⁫‪⁭‮(aJSON, num2);
            num1 = -2098772550;
            continue;
          case 146:
            num1 = (int) num3 * 573985220 ^ 551056710;
            continue;
          case 147:
label_85:
            aItem = JSONNode.\u206B⁯⁬‭‍⁮‍⁯‫‭​‬‮⁬⁫‏⁬⁫​‍​‭‎‎⁪⁫‮⁯‮‏‪‫⁭⁯‮⁪⁫‏‪‫‮(aItem, "\t");
            num1 = -721519527;
            continue;
          case 148:
            int num39 = ch4 > 'f' ? -1408337733 : (num39 = -1811380688);
            num1 = num39 ^ (int) num3 * 454585475;
            continue;
          case 149:
            num1 = (int) num3 * 1852747237 ^ -1291851790;
            continue;
          case 150:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * 1977223105 ^ -255762102;
            continue;
          case 151:
            num1 = (int) num3 * -2046009387 ^ -68510752;
            continue;
          default:
            goto label_152;
        }
      }
label_117:
      throw JSONNode.\u200C⁯⁭‏‎⁮‎‌‌⁬‬‬‮‬‪‍⁯​⁯⁭‪⁮⁪⁭‪‮​⁪​⁭‍‫⁬⁫⁮‪⁭‫⁫‬‮("JSON Parse: Quotation marks seems to be messed up.");
label_133:
      throw JSONNode.\u200C⁯⁭‏‎⁮‎‌‌⁬‬‬‮‬‪‍⁯​⁯⁭‪⁮⁪⁭‪‮​⁪​⁭‍‫⁬⁫⁮‪⁭‫⁫‬‮("JSON Parse: Too many closing brackets");
label_152:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
label_1:
      int num1 = 101488600;
      BinaryWriter aWriter;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1021579987)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1760989736 ^ 2114218672;
            continue;
          case 2:
            this.Serialize(aWriter);
            num1 = (int) num2 * -1120146587 ^ -1567525376;
            continue;
          case 3:
            goto label_3;
          case 4:
            aWriter = JSONNode.\u200E‏‌‍‍‮⁯⁪‎⁯‬⁭‫⁪‮‫⁯⁪‭‬‪⁭‮⁫⁪‍‬‎‬‭‫‎‏​⁭‫‪‫‎‮‮(aData);
            num1 = (int) num2 * -1664094317 ^ 569660960;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u200C⁯⁭‏‎⁮‎‌‌⁬‬‬‮‬‪‍⁯​⁯⁭‪⁮⁪⁭‪‮​⁪​⁭‍‫⁬⁫⁮‪⁭‫⁫‬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u200C⁯⁭‏‎⁮‎‌‌⁬‬‬‮‬‪‍⁯​⁯⁭‪⁮⁪⁭‪‮​⁪​⁭‍‫⁬⁫⁮‪⁭‫⁫‬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u200C⁯⁭‏‎⁮‎‌‌⁬‬‬‮‬‪‍⁯​⁯⁭‪⁮⁪⁭‪‮​⁪​⁭‍‫⁬⁫⁮‪⁭‫⁫‬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
      JSONNode.\u202A‎⁯‮‏‎‭⁫‏‮​⁪⁬‪⁯‎‬⁪⁮​‮⁫⁬⁫‍‏‌‌⁮⁮‌‭‫​‭‫‏‍‫‬‮(JSONNode.\u206D⁬⁬‌⁭⁭‎⁯‪​⁫⁬‎‫‬⁯‮‌⁭​​‎‌⁮‎‬‏⁭⁭⁪‌‫‌‏⁯⁭⁯‭‮‍‮((FileSystemInfo) JSONNode.\u206F‫‪⁪⁮‌‍‌‍⁫‎‍‏‫⁮⁭‏⁭⁯⁪⁫‪⁪‏⁫‫‎‭⁫⁬‍⁪⁪⁬⁪⁮‬⁯​‌‮(JSONNode.\u202A⁮⁫⁮‬‍‬⁭⁫‫⁫‏‪⁮⁮‫‏⁭‪⁭‍‫‫‍⁭‮‎⁫​​‎‎‬‍‫‏⁯‬⁮‫‮(aFileName))));
      FileStream aData = JSONNode.\u202B‌‭⁪⁯‭⁬⁬‌‌⁫‌⁪⁫‍‏‬‌‮⁮​‌⁪‭​⁪‬‍​⁭⁫⁫⁫⁯‬‬‬⁫⁯⁯‮(aFileName);
      try
      {
label_2:
        int num1 = 474315304;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1121166156)) % 5U)
          {
            case 0:
              num1 = (int) num2 * -343334941 ^ -1125372101;
              continue;
            case 1:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * -306871804 ^ 186549443;
              continue;
            case 2:
              num1 = (int) num2 * -528249424 ^ 591425152;
              continue;
            case 3:
              goto label_11;
            case 4:
              goto label_2;
            default:
              goto label_7;
          }
        }
label_11:
        return;
label_7:;
      }
      finally
      {
        if (aData != null)
        {
label_9:
          int num3 = 44535561;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 1121166156)) % 4U)
            {
              case 0:
                num3 = (int) num4 * -530980025 ^ 1859083942;
                continue;
              case 1:
                JSONNode.\u206E⁭‌‭‭⁯⁬⁯‎⁫⁪‭⁫‌⁬‏‌‫⁪​⁮⁯‬‍​⁬​⁯⁪‍‪‬⁫‪‭‪​‫‎‪‮((IDisposable) aData);
                num3 = (int) num4 * -1138448983 ^ 489401841;
                continue;
              case 3:
                goto label_9;
              default:
                goto label_14;
            }
          }
        }
label_14:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u206D‍‏⁪‎‎​‎⁭‬‌⁯⁯‪​⁪‌‬‎⁯‪‏​‌⁪⁫‏​‭⁬‌⁪‬‏‪⁮‏‍​⁮‮();
      string base64;
      try
      {
        this.SaveToStream((Stream) aData);
label_2:
        int num1 = -902952460;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1759562765)) % 4U)
          {
            case 0:
              goto label_2;
            case 2:
              base64 = JSONNode.\u202A‎‌⁪‏⁬‎‮​‮‭‌‌‍​‮⁭⁯​⁭‎⁪⁫​‫⁫‎‎‮‏‫⁬⁫‭‭⁬⁬‎‫⁮‮(JSONNode.\u206A⁭‌⁮‌​⁭‭‪‪‪‏‌‎‏‪‏⁯⁭‌‍⁪‍‮‪‪⁫⁭‮‫‏⁯⁭‮‎​‎‌⁯⁪‮(aData));
              num1 = (int) num2 * 478477605 ^ 579932240;
              continue;
            case 3:
              JSONNode.\u206C‏‎‪‫‮‮‭‎⁯⁪⁭‪⁬​⁯‫‭⁪⁫‍‌‬‬⁯‮⁯⁭‎​⁭⁯⁬⁮⁬⁮‭‌⁬‮((Stream) aData, 0L);
              num1 = (int) num2 * 924472411 ^ 867201460;
              continue;
            default:
              goto label_12;
          }
        }
      }
      finally
      {
        if (aData != null)
        {
label_7:
          int num3 = -1271191923;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -1759562765)) % 4U)
            {
              case 1:
                num3 = (int) num4 * 1609219395 ^ -842733912;
                continue;
              case 2:
                JSONNode.\u206E⁭‌‭‭⁯⁬⁯‎⁫⁪‭⁫‌⁬‏‌‫⁪​⁮⁯‬‍​⁬​⁯⁪‍‪‬⁫‪‭‪​‫‎‪‮((IDisposable) aData);
                num3 = (int) num4 * 678453588 ^ -1989496026;
                continue;
              case 3:
                goto label_7;
              default:
                goto label_11;
            }
          }
        }
label_11:;
      }
label_12:
      return base64;
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
label_1:
      int num1 = -169536019;
      bool flag1;
      int num2;
      int num3;
      JSONBinaryTag jsonBinaryTag1;
      JSONBinaryTag jsonBinaryTag2;
      JSONNode jsonNode;
      JSONBinaryTag jsonBinaryTag3;
      JSONArray jsonArray;
      JSONClass jsonClass;
      string aKey;
      int num4;
      int num5;
      bool flag2;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ -1937640138)) % 40U)
        {
          case 0:
label_3:
            num1 = -644137983;
            continue;
          case 1:
            jsonArray = new JSONArray();
            num1 = (int) num6 * -84128242 ^ -846604138;
            continue;
          case 2:
            num1 = (int) num6 * 1020057800 ^ 1930655221;
            continue;
          case 3:
            num1 = (int) num6 * 1437604931 ^ -128361820;
            continue;
          case 4:
label_13:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202E‎‍‫‫‍⁭‫⁯‌‎⁬​‬‌⁪‍‫⁭‬​⁮⁪‭​‌‏‭‫‮⁫‎⁪⁭⁬⁮⁪⁮‏‭‮(aReader));
            num1 = -1069307421;
            continue;
          case 5:
            num1 = (int) num6 * 1145593422 ^ -1149335549;
            continue;
          case 6:
            aKey = JSONNode.\u206C‬‏‫⁫⁮​⁯‌‬‍‍‭⁬​‮‍‍​⁬‮⁬‫‍‫⁯‬⁯‍‫⁫⁭‏‫‍‏‬⁪‍⁫‮(aReader);
            num1 = -1552244084;
            continue;
          case 7:
            num2 = JSONNode.\u202B‭⁯⁪‍‎⁫⁭​‪‍⁫‮‍‭‍‌⁫​‪‌⁬‏⁭‏‭⁫⁯‌⁬‪‎⁯‍‍‍⁫⁮‍‫‮(aReader);
            num1 = (int) num6 * -1049542402 ^ -1270933667;
            continue;
          case 8:
label_30:
            num1 = -1769684220;
            continue;
          case 9:
            goto label_31;
          case 10:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206C‬‏‫⁫⁮​⁯‌‬‍‍‭⁬​‮‍‍​⁬‮⁬‫‍‫⁯‬⁯‍‫⁫⁭‏‫‍‏‬⁪‍⁫‮(aReader));
            num1 = (int) num6 * 1723230175 ^ -1469929069;
            continue;
          case 11:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            num1 = -297561808;
            continue;
          case 12:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202B‭⁯⁪‍‎⁫⁭​‪‍⁫‮‍‭‍‌⁫​‪‌⁬‏⁭‏‭⁫⁯‌⁬‪‎⁯‍‍‍⁫⁮‍‫‮(aReader));
            num1 = (int) num6 * 1646300404 ^ 1695507046;
            continue;
          case 13:
            num1 = -1143188193;
            continue;
          case 14:
            jsonBinaryTag3 = jsonBinaryTag2;
            num1 = (int) num6 * 1863541152 ^ 616346159;
            continue;
          case 15:
            flag1 = num4 < num2;
            num1 = -1597452335;
            continue;
          case 16:
            num1 = (int) num6 * -549914847 ^ -1036825915;
            continue;
          case 17:
            switch (jsonBinaryTag3)
            {
              case JSONBinaryTag.Array:
                goto label_3;
              case JSONBinaryTag.Class:
                goto label_17;
              case JSONBinaryTag.Value:
                goto label_30;
              case JSONBinaryTag.IntValue:
                goto label_7;
              case JSONBinaryTag.DoubleValue:
                goto label_13;
              case JSONBinaryTag.BoolValue:
                goto label_29;
              case JSONBinaryTag.FloatValue:
                goto label_9;
              default:
                num1 = (int) num6 * -1678774536 ^ -2104637503;
                continue;
            }
          case 18:
            num1 = (int) num6 * 1413475023 ^ -1207454353;
            continue;
          case 19:
            jsonBinaryTag1 = (JSONBinaryTag) JSONNode.\u202C‌​​⁫⁬‪‎⁯‌⁮‎‬‮‏‬‌‫‮​‌‭​​‎‪⁭‏‫‪‍⁮⁭⁯‮‌‎⁫⁬⁭‮(aReader);
            jsonBinaryTag2 = jsonBinaryTag1;
            num1 = (int) num6 * 1262566565 ^ -181353449;
            continue;
          case 20:
            jsonClass = new JSONClass();
            num1 = (int) num6 * 2086636212 ^ 327814160;
            continue;
          case 21:
            goto label_1;
          case 22:
            num4 = 0;
            num1 = (int) num6 * 115792988 ^ 918199644;
            continue;
          case 23:
            num1 = (int) num6 * 1988027443 ^ 2007280862;
            continue;
          case 24:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200D⁫‭‮‮‎‭⁮​​⁯‍‫‌⁭⁭‎⁪⁯‏⁫‌‬‬⁬⁮⁮⁭‪⁫‬‎⁫‮⁬‫⁯‪⁬‭‮(aReader));
            num1 = (int) num6 * 1204226149 ^ -634915819;
            continue;
          case 25:
            ++num3;
            num1 = (int) num6 * -2131725419 ^ 626552462;
            continue;
          case 26:
            JSONNode aItem = JSONNode.Deserialize(aReader);
            jsonClass.Add(aKey, aItem);
            num1 = (int) num6 * -1324134260 ^ 881086878;
            continue;
          case 27:
label_9:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200D‏‪​⁮‏⁪‫‫⁯⁭​⁭⁬​⁫‭​‎​​‎⁯‮​⁫‍‪‮⁬‏‮‏‮‮​​‬​⁯‮(aReader));
            num1 = -1859685244;
            continue;
          case 28:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * -531951066 ^ 606676909;
            continue;
          case 29:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * 397011404 ^ -1724644679;
            continue;
          case 30:
            num3 = 0;
            num1 = (int) num6 * 1843831224 ^ -701209269;
            continue;
          case 31:
            int num7 = !flag1 ? -425751498 : (num7 = -692223576);
            num1 = num7 ^ (int) num6 * 240810027;
            continue;
          case 32:
            num1 = (int) num6 * -1860215548 ^ -564762377;
            continue;
          case 33:
label_17:
            num5 = JSONNode.\u202B‭⁯⁪‍‎⁫⁭​‪‍⁫‮‍‭‍‌⁫​‪‌⁬‏⁭‏‭⁫⁯‌⁬‪‎⁯‍‍‍⁫⁮‍‫‮(aReader);
            num1 = -1591032958;
            continue;
          case 34:
label_29:
            num1 = -1829157626;
            continue;
          case 36:
            int num8 = flag2 ? 536369304 : (num8 = 1859824378);
            num1 = num8 ^ (int) num6 * -160341408;
            continue;
          case 37:
            flag2 = num3 < num5;
            num1 = -2039334230;
            continue;
          case 38:
            ++num4;
            num1 = (int) num6 * -951566145 ^ -1154530197;
            continue;
          case 39:
label_7:
            num1 = -1212529606;
            continue;
          default:
            goto label_42;
        }
      }
label_31:
      throw JSONNode.\u200C⁯⁭‏‎⁮‎‌‌⁬‬‬‮‬‪‍⁯​⁯⁭‪⁮⁪⁭‪‮​⁪​⁭‍‫⁬⁫⁮‪⁭‫⁫‬‮(JSONNode.\u206B⁯⁬‭‍⁮‍⁯‫‭​‬‮⁬⁫‏⁬⁫​‍​‭‎‎⁪⁫‮⁯‮‏‪‫⁭⁯‮⁪⁫‏‪‫‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag1.ToString()));
label_42:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u200C⁯⁭‏‎⁮‎‌‌⁬‬‬‮‬‪‍⁯​⁯⁭‪⁮⁪⁭‪‮​⁪​⁭‍‫⁬⁫⁮‪⁭‫⁫‬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u200C⁯⁭‏‎⁮‎‌‌⁬‬‬‮‬‪‍⁯​⁯⁭‪⁮⁪⁭‪‮​⁪​⁭‍‫⁬⁫⁮‪⁭‫⁫‬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u200C⁯⁭‏‎⁮‎‌‌⁬‬‬‮‬‪‍⁯​⁯⁭‪⁮⁪⁭‪‮​⁪​⁭‍‫⁬⁫⁮‪⁭‫⁫‬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u206D‪‪‪‮⁫‍​‎⁪⁬‏⁮‭‭‮‪⁮‬‌⁬‍​⁮‍​⁯​​‮⁮‮⁫‭‌⁭‮‫‏⁯‮(aData);
      try
      {
        return JSONNode.Deserialize(aReader);
      }
      finally
      {
        if (aReader != null)
        {
label_3:
          int num1 = 1864543840;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ 2044876619)) % 3U)
            {
              case 0:
                goto label_3;
              case 2:
                JSONNode.\u206E⁭‌‭‭⁯⁬⁯‎⁫⁪‭⁫‌⁬‏‌‫⁪​⁮⁯‬‍​⁬​⁯⁪‍‪‬⁫‪‭‪​‫‎‪‮((IDisposable) aReader);
                num1 = (int) num2 * 581266937 ^ -1094772725;
                continue;
              default:
                goto label_6;
            }
          }
        }
label_6:;
      }
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u206F‍‌‎‌⁫‭⁪‪‫⁯‪‎‌⁪‌‮⁪⁫⁭‪⁬⁭⁬‎⁭⁯⁭⁬‮‏‭⁮⁪‪‌⁬⁯‎‎‮(aFileName);
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = -803520122;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1519178876)) % 3U)
          {
            case 0:
              goto label_2;
            case 2:
              jsonNode = JSONNode.LoadFromStream((Stream) aData);
              num1 = (int) num2 * 1203957483 ^ 1151872823;
              continue;
            default:
              goto label_10;
          }
        }
      }
      finally
      {
        if (aData != null)
        {
label_6:
          int num3 = -1463998890;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -1519178876)) % 3U)
            {
              case 0:
                goto label_6;
              case 1:
                JSONNode.\u206E⁭‌‭‭⁯⁬⁯‎⁫⁪‭⁫‌⁬‏‌‫⁪​⁮⁯‬‍​⁬​⁯⁪‍‪‬⁫‪‭‪​‫‎‪‮((IDisposable) aData);
                num3 = (int) num4 * 762916971 ^ 471865041;
                continue;
              default:
                goto label_9;
            }
          }
        }
label_9:;
      }
label_10:
      return jsonNode;
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
      MemoryStream aData = JSONNode.\u206D‍⁮⁫‏⁬‪⁪‌‪‭⁬‎⁮⁭‫⁭‭‌‍‏‬⁪‬‭‌‌‫⁫‎‍‪‬⁯‮‎‍‫‏⁬‮(JSONNode.\u202C‪‌⁫⁪‌‫‫‪‎‪⁫‏‍‌‍⁫‪⁫⁭⁫⁭‏‪⁪⁪⁬⁬‎⁯‫‎‌‌‭‌⁫‎​‪‮(aBase64));
      JSONNode.\u206C‏‎‪‫‮‮‭‎⁯⁪⁭‪⁬​⁯‫‭⁪⁫‍‌‬‬⁯‮⁯⁭‎​⁭⁯⁬⁮⁬⁮‭‌⁬‮((Stream) aData, 0L);
label_1:
      int num1 = 1515504265;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1498150331)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * 2134083391 ^ 1068158974;
            continue;
          case 3:
            num1 = (int) num2 * -2083518226 ^ 630591444;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public JSONNode()
    {
label_1:
      int num1 = 641854723;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1281860110)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * -578846269 ^ -551281672;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static CultureInfo \u200E‏‬‮⁭‏‏‫‫⁪‮‍‎‏⁮⁫⁯‎⁫‌⁮‭‬⁭​‮⁭‪‭‮⁭‌‌‬⁮‫‮‍‫‍‮() => CultureInfo.InvariantCulture;

    static bool \u202B‎‍⁬​‭‌⁪⁪‎⁫‪‎‌‭‎⁯‬⁯​‬‪⁮‏⁫‎‍‏⁯⁫‪⁪⁮‌‭‭⁯⁭‎‏‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u202A‬‪​‫‫⁪‎‮‪‍⁫⁫‌⁯‮‭‏‪‬⁭‎‎​​‪‎‮‭‍​⁯‏‮‌⁪‮‍⁯⁪‮() => base.GetHashCode();

    static char \u200E⁯⁪⁭‎‏‭⁭⁬​⁯‫⁮⁭‭‎‎‎‬‭‮⁯⁫‎⁬⁪‎‌‍‪‪​‫⁬⁫⁯‌⁫‪⁭‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u206B⁯⁬‭‍⁮‍⁯‫‭​‬‮⁬⁫‏⁬⁫​‍​‭‎‎⁪⁫‮⁯‮‏‪‫⁭⁯‮⁪⁫‏‪‫‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u202D⁮​‫‭‫‫⁬⁯‍‭‪‎‬​‏⁭⁯‍‮‮⁪‬⁫‏⁮‌‫​‎​⁬‪‏‬‬‬‍‎‮‮([In] string obj0) => obj0.Length;

    static string \u206E‏‍⁪‍⁫⁫‌‪⁯‮⁯‍⁪⁮⁪‪‫⁫‫‌‌‪‮⁭⁭‪​⁬⁪‮‎⁭⁪⁪⁭⁬‫⁪‍‮([In] string obj0) => obj0.Trim();

    static bool \u206A‪⁯⁫⁫‮⁪⁭‫‬‬⁮⁫⁯⁫⁮‏‮‏‭‌​⁫‎‭⁯⁬‎⁪‍‪⁬‮‭⁯‬⁪​‪⁬‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u200C⁯⁭‏‎⁮‎‌‌⁬‬‬‮‬‪‍⁯​⁯⁭‪⁮⁪⁭‪‮​⁪​⁭‍‫⁬⁫⁮‪⁭‫⁫‬‮([In] string obj0) => new Exception(obj0);

    static string \u206D‮⁮⁯⁮⁭⁪⁬⁭‎‫‪‎‪⁯‬⁫⁭‌‬‪‎‌⁬‮⁯‏‬‎‎​‪⁯‎⁬‪‮‬‌‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u200E‏‌‍‍‮⁯⁪‎⁯‬⁭‫⁪‮‫⁯⁪‭‬‪⁭‮⁫⁪‍‬‎‬‭‫‎‏​⁭‫‪‫‎‮‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u202A⁮⁫⁮‬‍‬⁭⁫‫⁫‏‪⁮⁮‫‏⁭‪⁭‍‫‫‍⁭‮‎⁫​​‎‎‬‍‫‏⁯‬⁮‫‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u206F‫‪⁪⁮‌‍‌‍⁫‎‍‏‫⁮⁭‏⁭⁯⁪⁫‪⁪‏⁫‫‎‭⁫⁬‍⁪⁪⁬⁪⁮‬⁯​‌‮([In] FileInfo obj0) => obj0.Directory;

    static string \u206D⁬⁬‌⁭⁭‎⁯‪​⁫⁬‎‫‬⁯‮‌⁭​​‎‌⁮‎‬‏⁭⁭⁪‌‫‌‏⁯⁭⁯‭‮‍‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u202A‎⁯‮‏‎‭⁫‏‮​⁪⁬‪⁯‎‬⁪⁮​‮⁫⁬⁫‍‏‌‌⁮⁮‌‭‫​‭‫‏‍‫‬‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u202B‌‭⁪⁯‭⁬⁬‌‌⁫‌⁪⁫‍‏‬‌‮⁮​‌⁪‭​⁪‬‍​⁭⁫⁫⁫⁯‬‬‬⁫⁯⁯‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u206E⁭‌‭‭⁯⁬⁯‎⁫⁪‭⁫‌⁬‏‌‫⁪​⁮⁯‬‍​⁬​⁯⁪‍‪‬⁫‪‭‪​‫‎‪‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u206D‍‏⁪‎‎​‎⁭‬‌⁯⁯‪​⁪‌‬‎⁯‪‏​‌⁪⁫‏​‭⁬‌⁪‬‏‪⁮‏‍​⁮‮() => new MemoryStream();

    static void \u206C‏‎‪‫‮‮‭‎⁯⁪⁭‪⁬​⁯‫‭⁪⁫‍‌‬‬⁯‮⁯⁭‎​⁭⁯⁬⁮⁬⁮‭‌⁬‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u206A⁭‌⁮‌​⁭‭‪‪‪‏‌‎‏‪‏⁯⁭‌‍⁪‍‮‪‪⁫⁭‮‫‏⁯⁭‮‎​‎‌⁯⁪‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u202A‎‌⁪‏⁬‎‮​‮‭‌‌‍​‮⁭⁯​⁭‎⁪⁫​‫⁫‎‎‮‏‫⁬⁫‭‭⁬⁬‎‫⁮‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u202C‌​​⁫⁬‪‎⁯‌⁮‎‬‮‏‬‌‫‮​‌‭​​‎‪⁭‏‫‪‍⁮⁭⁯‮‌‎⁫⁬⁭‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u202B‭⁯⁪‍‎⁫⁭​‪‍⁫‮‍‭‍‌⁫​‪‌⁬‏⁭‏‭⁫⁯‌⁬‪‎⁯‍‍‍⁫⁮‍‫‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u206C‬‏‫⁫⁮​⁯‌‬‍‍‭⁬​‮‍‍​⁬‮⁬‫‍‫⁯‬⁯‍‫⁫⁭‏‫‍‏‬⁪‍⁫‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u202E‎‍‫‫‍⁭‫⁯‌‎⁬​‬‌⁪‍‫⁭‬​⁮⁪‭​‌‏‭‫‮⁫‎⁪⁭⁬⁮⁪⁮‏‭‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u200D⁫‭‮‮‎‭⁮​​⁯‍‫‌⁭⁭‎⁪⁯‏⁫‌‬‬⁬⁮⁮⁭‪⁫‬‎⁫‮⁬‫⁯‪⁬‭‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u200D‏‪​⁮‏⁪‫‫⁯⁭​⁭⁬​⁫‭​‎​​‎⁯‮​⁫‍‪‮⁬‏‮‏‮‮​​‬​⁯‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u206D‪‪‪‮⁫‍​‎⁪⁬‏⁮‭‭‮‪⁮‬‌⁬‍​⁮‍​⁯​​‮⁮‮⁫‭‌⁭‮‫‏⁯‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u206F‍‌‎‌⁫‭⁪‪‫⁯‪‎‌⁪‌‮⁪⁫⁭‪⁬⁭⁬‎⁭⁯⁭⁬‮‏‭⁮⁪‪‌⁬⁯‎‎‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u202C‪‌⁫⁪‌‫‫‪‎‪⁫‏‍‌‍⁫‪⁫⁭⁫⁭‏‪⁪⁪⁬⁬‎⁯‫‎‌‌‭‌⁫‎​‪‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u206D‍⁮⁫‏⁬‪⁪‌‪‭⁬‎⁮⁭‫⁭‭‌‍‏‬⁪‬‭‌‌‫⁫‎‍‪‬⁯‮‎‍‫‏⁬‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
