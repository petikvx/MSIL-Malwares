// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONClass
// Assembly: Ma, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 1E05311B-A9F1-497C-9B8A-F93F05B83D6B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-b73f14efefdd00c34646305b19167c781d2fee40a69d518a5c9000a6f01fdde4.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONClass : JSONNode, IEnumerable
  {
    private Dictionary<string, JSONNode> m_Dict = new Dictionary<string, JSONNode>();

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -126050944;
        bool flag;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1434371271)) % 6U)
          {
            case 0:
              jsonNode = this.m_Dict[aKey];
              num1 = (int) num2 * 1230114727 ^ -372749106;
              continue;
            case 2:
              int num3 = flag ? -601599487 : (num3 = -139174003);
              num1 = num3 ^ (int) num2 * -1633182643;
              continue;
            case 3:
              goto label_1;
            case 4:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = -435270102;
              continue;
            case 5:
              flag = this.m_Dict.ContainsKey(aKey);
              num1 = (int) num2 * -1044638754 ^ 1294876163;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 417535788;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1259383563)) % 7U)
          {
            case 0:
              this.m_Dict[aKey] = value;
              num1 = (int) num2 * -1763881648 ^ 1146723261;
              continue;
            case 1:
              int num3 = flag ? 593578845 : (num3 = 926025753);
              num1 = num3 ^ (int) num2 * 917079544;
              continue;
            case 2:
              flag = this.m_Dict.ContainsKey(aKey);
              num1 = (int) num2 * 638534700 ^ -1086804253;
              continue;
            case 3:
              goto label_1;
            case 4:
              num1 = (int) num2 * -760436867 ^ -1926880148;
              continue;
            case 5:
              this.m_Dict.Add(aKey, value);
              num1 = 1343773134;
              continue;
            case 6:
              goto label_3;
            default:
              goto label_9;
          }
        }
label_3:
        return;
label_9:;
      }
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
        if (aIndex < 0)
          goto label_8;
label_1:
        int num1 = -572653180;
label_2:
        JSONNode jsonNode;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2067157504)) % 7U)
          {
            case 1:
              goto label_7;
            case 2:
              num1 = (int) num2 * -680794867 ^ 1086769995;
              continue;
            case 3:
              goto label_1;
            case 4:
              jsonNode = (JSONNode) null;
              num1 = -172780419;
              continue;
            case 5:
              int num3 = !flag ? 1373089765 : (num3 = 776964636);
              num1 = num3 ^ (int) num2 * 173316171;
              continue;
            case 6:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 1079175181 ^ -584739668;
              continue;
            default:
              goto label_10;
          }
        }
label_7:
        int num4 = aIndex >= this.m_Dict.Count ? 1 : 0;
        goto label_9;
label_10:
        return jsonNode;
label_8:
        num4 = 1;
label_9:
        flag = num4 != 0;
        num1 = -1679819038;
        goto label_2;
      }
      set
      {
        if (aIndex < 0)
          goto label_5;
label_1:
        int num1 = -232527193;
label_2:
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -903461552)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 416170685 ^ -883214963;
              continue;
            case 1:
              goto label_3;
            case 2:
              goto label_1;
            case 3:
              goto label_4;
            default:
              goto label_8;
          }
        }
label_3:
        return;
label_8:
        return;
label_4:
        int num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
        goto label_6;
label_5:
        num3 = 1;
label_6:
        num1 = num3 == 0 ? -2111038583 : (num1 = -2143245052);
        goto label_2;
      }
    }

    public override int Count
    {
      get
      {
        int count = this.m_Dict.Count;
label_1:
        int num1 = 2021796719;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 880898820)) % 3U)
          {
            case 1:
              num1 = (int) num2 * -90832052 ^ -725537513;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = -997757312;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1823356129)) % 14U)
        {
          case 0:
            num1 = (int) num2 * -1943157351 ^ 1634715816;
            continue;
          case 1:
            num1 = (int) num2 * 1040871147 ^ -1612413920;
            continue;
          case 2:
            this.m_Dict.Add(aKey, aItem);
            num1 = -899841087;
            continue;
          case 3:
            num1 = (int) num2 * 7968503 ^ 118434842;
            continue;
          case 4:
            num1 = (int) num2 * -1976592520 ^ -1973084826;
            continue;
          case 5:
            num1 = -1955615540;
            continue;
          case 6:
            goto label_1;
          case 7:
            int num3 = flag ? 208141267 : (num3 = 1942846527);
            num1 = num3 ^ (int) num2 * -2064439350;
            continue;
          case 8:
            this.m_Dict[aKey] = aItem;
            num1 = (int) num2 * 1770601570 ^ -711063956;
            continue;
          case 9:
            this.m_Dict.Add(Guid.NewGuid().ToString(), aItem);
            num1 = -1513653103;
            continue;
          case 10:
            goto label_3;
          case 11:
            int num4 = JSONClass.\u200C​⁬‍‭⁮⁯‏⁬‬‍⁯‍​‭⁫‌‌‏‬⁭‭⁫‪⁬⁮⁫‎⁮⁭‏‬⁫‏⁯‮‬‫‍‮‮(aKey) ? -762726797 : (num4 = -1061282311);
            num1 = num4 ^ (int) num2 * 776893525;
            continue;
          case 12:
            flag = this.m_Dict.ContainsKey(aKey);
            num1 = (int) num2 * 235938833 ^ -384835454;
            continue;
          case 13:
            num1 = (int) num2 * -2035274062 ^ 1420584451;
            continue;
          default:
            goto label_16;
        }
      }
label_3:
      return;
label_16:;
    }

    public override JSONNode Remove(string aKey)
    {
label_1:
      int num1 = -962445103;
      JSONNode jsonNode1;
      bool flag;
      JSONNode jsonNode2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -927669425)) % 8U)
        {
          case 0:
            goto label_1;
          case 1:
            jsonNode2 = this.m_Dict[aKey];
            this.m_Dict.Remove(aKey);
            num1 = -1121760947;
            continue;
          case 2:
            jsonNode1 = jsonNode2;
            num1 = (int) num2 * -553888585 ^ 570903530;
            continue;
          case 4:
            int num3 = flag ? -23697872 : (num3 = -57022490);
            num1 = num3 ^ (int) num2 * -1521081766;
            continue;
          case 5:
            num1 = (int) num2 * 1493936164 ^ 432223088;
            continue;
          case 6:
            flag = !this.m_Dict.ContainsKey(aKey);
            num1 = (int) num2 * -342310388 ^ -1172533013;
            continue;
          case 7:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num2 * 1519893303 ^ -1364676645;
            continue;
          default:
            goto label_9;
        }
      }
label_9:
      return jsonNode1;
    }

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = -69703683;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        bool flag;
        int num3;
        switch ((num2 = (uint) (num1 ^ -933715408)) % 7U)
        {
          case 1:
            num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
            break;
          case 2:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * -487494572 ^ -1367813121;
            continue;
          case 3:
            jsonNode = (JSONNode) null;
            num1 = -685750893;
            continue;
          case 4:
            int num4 = flag ? 1329620285 : (num4 = 1690258404);
            num1 = num4 ^ (int) num2 * -779137805;
            continue;
          case 5:
            if (aIndex < 0)
            {
              num3 = 1;
              break;
            }
            num1 = (int) num2 * -1227250509 ^ 164785388;
            continue;
          case 6:
            goto label_1;
          default:
            goto label_11;
        }
        flag = num3 != 0;
        num1 = -125369306;
      }
label_11:
      return jsonNode;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      JSONNode jsonNode;
      try
      {
        jsonNode = (JSONNode) null;
      }
      catch
      {
label_3:
        int num1 = -35244580;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -405383632)) % 3U)
          {
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -2142620859 ^ 1635351157;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_6;
          }
        }
      }
label_6:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONClass.\u003Cget_Childs\u003Ed__14 getChildsD14 = new JSONClass.\u003Cget_Childs\u003Ed__14(-2);
label_1:
        int num1 = 837210188;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 593332667)) % 4U)
          {
            case 0:
              childs = (IEnumerable<JSONNode>) getChildsD14;
              num1 = (int) num2 * 1673896046 ^ 209680266;
              continue;
            case 2:
              goto label_1;
            case 3:
              getChildsD14.\u003C\u003E4__this = this;
              num1 = (int) num2 * 1083347879 ^ -1989040566;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return childs;
      }
    }

    public IEnumerator GetEnumerator()
    {
      bool enumerator1;
      // ISSUE: fault handler
      try
      {
        // ISSUE: reference to a compiler-generated field
        int num1 = this.\u003C\u003E1__state;
label_1:
        int num2 = -641119140;
        Dictionary<string, JSONNode>.Enumerator enumerator;
        KeyValuePair<string, JSONNode> N;
        while (true)
        {
          uint num3;
          switch ((num3 = (uint) (num2 ^ -1426307880)) % 21U)
          {
            case 0:
              N = enumerator.Current;
              num2 = -386663097;
              continue;
            case 1:
            case 13:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = -543004802;
              continue;
            case 2:
              goto label_14;
            case 4:
              num2 = (int) num3 * 667049093 ^ 368500207;
              continue;
            case 5:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = (int) num3 * 1935277138 ^ 939198821;
              continue;
            case 6:
              int num4;
              num2 = num4 = !enumerator.MoveNext() ? -1047237973 : (num4 = -841621395);
              continue;
            case 7:
              num2 = (int) num3 * -2035550877 ^ -2136746390;
              continue;
            case 8:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E2__current = (object) N;
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = 1;
              num2 = (int) num3 * 1768879267 ^ -492949599;
              continue;
            case 9:
              num2 = (int) num3 * 1037100794 ^ -694307821;
              continue;
            case 10:
              int num5;
              num2 = num5 = num1 != 1 ? -1399615270 : (num5 = -864315039);
              continue;
            case 11:
              enumerator = new Dictionary<string, JSONNode>.Enumerator();
              enumerator1 = false;
              num2 = (int) num3 * -2063130333 ^ 565857580;
              continue;
            case 12:
              // ISSUE: reference to a compiler-generated method
              this.\u003C\u003Em__Finally1();
              num2 = (int) num3 * 1152261411 ^ 1769175958;
              continue;
            case 14:
              int num6 = num1 != 0 ? 1615317073 : (num6 = 654767327);
              num2 = num6 ^ (int) num3 * -1631708942;
              continue;
            case 15:
            case 20:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -1;
              num2 = -947554008;
              continue;
            case 16:
              N = new KeyValuePair<string, JSONNode>();
              num2 = (int) num3 * 989302168 ^ 1841571397;
              continue;
            case 17:
              goto label_17;
            case 18:
              goto label_1;
            case 19:
              enumerator = this.m_Dict.GetEnumerator();
              num2 = (int) num3 * -1574065912 ^ 1479754904;
              continue;
            default:
              goto label_21;
          }
        }
label_14:
        enumerator1 = false;
        goto label_21;
label_17:
        enumerator1 = true;
      }
      __fault
      {
        // ISSUE: reference to a compiler-generated method
        this.System\u002EIDisposable\u002EDispose();
      }
label_21:
      return enumerator1;
    }

    public override string ToString()
    {
label_1:
      int num1 = -1564045906;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -942210207)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 2000685256 ^ 1435820555;
            continue;
          case 3:
            str1 = "{";
            num1 = (int) num2 * 1492088379 ^ 1783152017;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator();
      try
      {
label_11:
        int num3 = !enumerator.MoveNext() ? -1518947617 : (num3 = -797019736);
        KeyValuePair<string, JSONNode> current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -942210207)) % 8U)
          {
            case 0:
              goto label_11;
            case 1:
              current = enumerator.Current;
              num3 = -1163882387;
              continue;
            case 2:
              str1 = JSONClass.\u202E⁫‮‍‮⁭‪⁬‍⁯‌⁮⁯‌⁭​‮‭‏‫⁯‌‪‎​⁮​⁫⁪⁫‍‮⁪‍‏‮‌‍‮⁪‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\":",
                JSONClass.\u202C‭‎⁬‏⁫‮‌‭⁪‎‪⁫⁪⁬⁯⁪​​‬‬‭‫​‫‍‎‪⁫‫​‫​‫‮‫⁫‎‮‮‮((object) current.Value)
              });
              num3 = -534830676;
              continue;
            case 3:
              num3 = -797019736;
              continue;
            case 4:
              int num5 = JSONClass.\u206B⁪​‍‮‪⁯‫‮‮⁬‭‌‪‍‪‏‬‎⁮‍‌‎‍⁭⁬‭‫‍‫‌⁭​⁮‫​‮‫‬‫‮(str1) <= 2 ? -1682938957 : (num5 = -1775869746);
              num3 = num5 ^ (int) num4 * -56883402;
              continue;
            case 5:
              num3 = (int) num4 * -389676470 ^ 205922315;
              continue;
            case 7:
              str1 = JSONClass.\u200E‏‏⁯‮‬⁯⁪‌⁭‭⁬⁮‌‬‪‫⁪‪‪⁮⁭‍⁫‪⁭⁫⁯‌‎‏⁯‬​‭⁬‭‭‌‬‮(str1, ", ");
              num3 = (int) num4 * -466608352 ^ -1218500901;
              continue;
            default:
              goto label_20;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_16:
        int num6 = -2077561866;
        while (true)
        {
          uint num7;
          switch ((num7 = (uint) (num6 ^ -942210207)) % 3U)
          {
            case 0:
              goto label_16;
            case 1:
              num6 = (int) num7 * -1824107635 ^ -1541440859;
              continue;
            default:
              goto label_19;
          }
        }
label_19:;
      }
label_20:
      string str2 = JSONClass.\u200E‏‏⁯‮‬⁯⁪‌⁭‭⁬⁮‌‬‪‫⁪‪‪⁮⁭‍⁫‪⁭⁫⁯‌‎‏⁯‬​‭⁬‭‭‌‬‮(str1, "}");
label_21:
      int num8 = -1562243525;
      string str3;
      while (true)
      {
        uint num9;
        switch ((num9 = (uint) (num8 ^ -942210207)) % 4U)
        {
          case 0:
            goto label_21;
          case 2:
            str3 = str2;
            num8 = (int) num9 * -1288766772 ^ 854600930;
            continue;
          case 3:
            num8 = (int) num9 * 1290912701 ^ -1858408293;
            continue;
          default:
            goto label_25;
        }
      }
label_25:
      return str3;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = -1334364066;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -783857956)) % 4U)
        {
          case 1:
            num1 = (int) num2 * -1479366966 ^ 1708269058;
            continue;
          case 2:
            str1 = "{ ";
            num1 = (int) num2 * 1129029419 ^ 1924337843;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      using (Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator())
      {
label_12:
        int num3 = !enumerator.MoveNext() ? -2071375606 : (num3 = -1887041829);
        KeyValuePair<string, JSONNode> current;
        bool flag;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -783857956)) % 9U)
          {
            case 0:
              num3 = -1887041829;
              continue;
            case 1:
              goto label_12;
            case 2:
              num3 = (int) num4 * 670424962 ^ 1668922296;
              continue;
            case 3:
              str1 = JSONClass.\u202A‏‭⁫​‮‬‏‪⁬‮‎‬⁪‌⁯⁭‍‪‍​⁪⁪‌⁭⁯‍‎‪‏‎‎⁬⁪‫‪⁬‭⁮⁭‮(str1, "\n", aPrefix, "   ");
              str1 = JSONClass.\u202E⁫‮‍‮⁭‪⁬‍⁯‌⁮⁯‌⁭​‮‭‏‫⁯‌‪‎​⁮​⁫⁪⁫‍‮⁪‍‏‮‌‍‮⁪‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\" : ",
                current.Value.ToString(JSONClass.\u200E‏‏⁯‮‬⁯⁪‌⁭‭⁬⁮‌‬‪‫⁪‪‪⁮⁭‍⁫‪⁭⁫⁯‌‎‏⁯‬​‭⁬‭‭‌‬‮(aPrefix, "   "))
              });
              num3 = -2014932230;
              continue;
            case 4:
              str1 = JSONClass.\u200E‏‏⁯‮‬⁯⁪‌⁭‭⁬⁮‌‬‪‫⁪‪‪⁮⁭‍⁫‪⁭⁫⁯‌‎‏⁯‬​‭⁬‭‭‌‬‮(str1, ", ");
              num3 = (int) num4 * -546113540 ^ -502937679;
              continue;
            case 5:
              flag = JSONClass.\u206B⁪​‍‮‪⁯‫‮‮⁬‭‌‪‍‪‏‬‎⁮‍‌‎‍⁭⁬‭‫‍‫‌⁭​⁮‫​‮‫‬‫‮(str1) > 3;
              num3 = (int) num4 * 254969452 ^ 1652311328;
              continue;
            case 7:
              current = enumerator.Current;
              num3 = -1214237139;
              continue;
            case 8:
              int num5 = !flag ? 546221737 : (num5 = 854287518);
              num3 = num5 ^ (int) num4 * 826411438;
              continue;
            default:
              goto label_17;
          }
        }
      }
label_17:
      string str2 = JSONClass.\u202A‏‭⁫​‮‬‏‪⁬‮‎‬⁪‌⁯⁭‍‪‍​⁪⁪‌⁭⁯‍‎‪‏‎‎⁬⁪‫‪⁬‭⁮⁭‮(str1, "\n", aPrefix, "}");
label_18:
      int num6 = -2039179525;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ -783857956)) % 3U)
        {
          case 1:
            num6 = (int) num7 * 1455964216 ^ 1447471158;
            continue;
          case 2:
            goto label_18;
          default:
            goto label_21;
        }
      }
label_21:
      return str2;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
      JSONClass.\u202B‌⁬‎⁯‬⁮​‍⁯⁪‭‍​‫‎‌⁫‮‪‪⁬⁬‭⁮‍⁮⁪⁪‭⁬‍‎‭‪​⁫‌⁭‮‮(aWriter, (byte) 2);
label_1:
      int num1 = 879253314;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 760961314)) % 5U)
        {
          case 0:
            num1 = (int) num2 * -1877141856 ^ -1640385383;
            continue;
          case 1:
            num1 = (int) num2 * 336864466 ^ 22014143;
            continue;
          case 3:
            goto label_1;
          case 4:
            JSONClass.\u200B‬‫‬‮‏‪⁭‪⁬⁮⁮⁫⁯⁭​⁪⁭‎‌‪⁪‪⁫‭‎‍‬⁭‮‮⁮​‍⁭‮‍⁭‮‪‮(aWriter, this.m_Dict.Count);
            num1 = (int) num2 * -119668159 ^ -622098581;
            continue;
          default:
            goto label_6;
        }
      }
label_6:
      using (Dictionary<string, JSONNode>.KeyCollection.Enumerator enumerator = this.m_Dict.Keys.GetEnumerator())
      {
label_13:
        int num3 = !enumerator.MoveNext() ? 550246022 : (num3 = 1252749111);
        string current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 760961314)) % 8U)
          {
            case 0:
              goto label_13;
            case 1:
              this.m_Dict[current].Serialize(aWriter);
              num3 = (int) num4 * 1198275736 ^ 1257598941;
              continue;
            case 2:
              num3 = 1252749111;
              continue;
            case 3:
              num3 = (int) num4 * 315623046 ^ 1419539128;
              continue;
            case 4:
              goto label_17;
            case 5:
              current = enumerator.Current;
              num3 = 138620540;
              continue;
            case 6:
              JSONClass.\u202A‌‌​‍‎‪‫‌‫‎​​‫‪⁯‎‍‎⁮⁮‌⁯‏⁬‭‌⁮⁯⁯‏‍‏‬‍‪‌⁬‍⁭‮(aWriter, current);
              num3 = (int) num4 * 1663017760 ^ 772508315;
              continue;
            case 7:
              num3 = (int) num4 * 1223417995 ^ 685495380;
              continue;
            default:
              goto label_10;
          }
        }
label_17:
        return;
label_10:;
      }
    }

    static bool \u200C​⁬‍‭⁮⁯‏⁬‬‍⁯‍​‭⁫‌‌‏‬⁭‭⁫‪⁬⁮⁫‎⁮⁭‏‬⁫‏⁯‮‬‫‍‮‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    static int \u206B⁪​‍‮‪⁯‫‮‮⁬‭‌‪‍‪‏‬‎⁮‍‌‎‍⁭⁬‭‫‍‫‌⁭​⁮‫​‮‫‬‫‮([In] string obj0) => obj0.Length;

    static string \u200E‏‏⁯‮‬⁯⁪‌⁭‭⁬⁮‌‬‪‫⁪‪‪⁮⁭‍⁫‪⁭⁫⁯‌‎‏⁯‬​‭⁬‭‭‌‬‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u202C‭‎⁬‏⁫‮‌‭⁪‎‪⁫⁪⁬⁯⁪​​‬‬‭‫​‫‍‎‪⁫‫​‫​‫‮‫⁫‎‮‮‮([In] object obj0) => obj0.ToString();

    static string \u202E⁫‮‍‮⁭‪⁬‍⁯‌⁮⁯‌⁭​‮‭‏‫⁯‌‪‎​⁮​⁫⁪⁫‍‮⁪‍‏‮‌‍‮⁪‮([In] string[] obj0) => string.Concat(obj0);

    static string \u202A‏‭⁫​‮‬‏‪⁬‮‎‬⁪‌⁯⁭‍‪‍​⁪⁪‌⁭⁯‍‎‪‏‎‎⁬⁪‫‪⁬‭⁮⁭‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u202B‌⁬‎⁯‬⁮​‍⁯⁪‭‍​‫‎‌⁫‮‪‪⁬⁬‭⁮‍⁮⁪⁪‭⁬‍‎‭‪​⁫‌⁭‮‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u200B‬‫‬‮‏‪⁭‪⁬⁮⁮⁫⁯⁭​⁪⁭‎‌‪⁪‪⁫‭‎‍‬⁭‮‮⁮​‍⁭‮‍⁭‮‪‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u202A‌‌​‍‎‪‫‌‫‎​​‫‪⁯‎‍‎⁮⁮‌⁯‏⁬‭‌⁮⁯⁯‏‍‏‬‍‪‌⁬‍⁭‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
