// Decompiled with JetBrains decompiler
// Type: Microsoft.InfoCards.GetLedgerRequest
// Assembly: infocard, Version=3.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
// MVID: 1D4D5564-A025-490C-AF1D-DF4FBB709D1F
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00001-msil\Virus.Win32.Expiro.w-f8f9f26e940480624825f6bddbea86e70fc4aa746c4dd8efa7d98dcb477000ed.exe

using Microsoft.InfoCards.Diagnostics;
using System;
using System.IO;
using System.Text;

namespace Microsoft.InfoCards
{
  internal class GetLedgerRequest : UIAgentRequest
  {
    private Uri m_cardId;
    private LedgerEntryCollection m_ledger;

    public GetLedgerRequest(
      IntPtr rpcHandle,
      Stream inArgs,
      Stream outArgs,
      ClientUIRequest parent)
      : base(rpcHandle, inArgs, outArgs, parent)
    {
      InfoCardTrace.Assert(IntPtr.Zero != rpcHandle, "Null rpc handle");
      InfoCardTrace.Assert(null != inArgs, "Null inArgs");
      InfoCardTrace.Assert(null != outArgs, "Null out args");
    }

    protected override void OnInitializeAsSystem() => base.OnInitializeAsSystem();

    protected override void OnMarshalInArgs()
    {
      InfoCardTrace.Assert(null != this.InArgs, "null request argument");
      this.m_cardId = Utility.DeserializeUri((BinaryReader) new InfoCardBinaryReader(this.InArgs, Encoding.Unicode));
    }

    protected override void OnProcess()
    {
      InfoCardTrace.Assert((Uri) null != this.m_cardId, "No CardId passed to GetLedgerRequest");
      StoreConnection connection = StoreConnection.GetConnection();
      try
      {
        this.m_ledger = new LedgerEntryCollection(this.m_cardId);
        this.m_ledger.Get(connection);
      }
      finally
      {
        connection.Close();
      }
    }

    protected override void OnMarshalOutArgs()
    {
      InfoCardTrace.Assert(null != this.m_ledger, "No ledger collection exists to be serialized");
      this.m_ledger.Serialize(this.OutArgs);
    }
  }
}
