// Decompiled with JetBrains decompiler
// Type: 949831847381.079108865494
// Assembly: 190180155270, Version=7.6.1.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
// MVID: 20B0A582-54C5-4C64-BCB9-2AC73608F590
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-211b9bdeb7639f8b1f0606b7671a4d1fdbf246968b078ff103eac9aa4c2cd108.exe

using \u003117125756750;
using \u003882244590153;
using Microsoft.ProgramSynthesis.Utils;
using System;
using System.Collections.Generic;
using System.Linq;

namespace \u003949831847381
{
  internal class \u003079108865494 : \u003808518397050
  {
    private const float \u003900967700211 = 0.8f;

    internal \u003079108865494()
      : base(CollectionUtils.Append<int>(Enumerable.Range(0, 9).Concat<int>(Enumerable.Range(14, 18)), 11).Concat<int>(Enumerable.Range((int) sbyte.MaxValue, 129)).Select<int, byte>(new Func<int, byte>(Convert.ToByte)))
    {
    }

    public virtual int \u003627953096401 => 100;

    public virtual void \u003728997064051(byte[] _param1_1)
    {
      float num = (float) ((IEnumerable<byte>) _param1_1).Where<byte>((Func<byte, bool>) (_param1_2 => !this.\u003261309382055.Contains(_param1_2))).Count<byte>() / (float) _param1_1.Length;
      if ((double) num < 0.800000011920929)
        return;
      this.\u003636150011327 = \u003212044566473.Ascii;
      this.\u003927031755155 = num;
    }
  }
}
