// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONLazyCreator
// Assembly: ObjRefSurroga, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 1D36518F-5F0C-4DDD-80AA-3BF17FC6E8B1
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-87b4a205c27d8ffaecb7e687ace76ed76394ae98d22a2a8be17f532d917c236e.exe

namespace SimpleJSON
{
  internal class JSONLazyCreator : JSONNode
  {
    private JSONNode m_Node = (JSONNode) null;
    private string m_Key = (string) null;

    public JSONLazyCreator(JSONNode aNode)
    {
label_1:
      int num1 = 1933689378;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1321968912)) % 6U)
        {
          case 0:
            this.m_Node = aNode;
            num1 = (int) num2 * -10116551 ^ 2085948513;
            continue;
          case 1:
            this.m_Key = (string) null;
            num1 = (int) num2 * 1011321096 ^ -1289031213;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * 282477845 ^ 13490803;
            continue;
          case 4:
            num1 = (int) num2 * 869721122 ^ -940287243;
            continue;
          case 5:
            goto label_3;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    public JSONLazyCreator(JSONNode aNode, string aKey)
    {
label_1:
      int num1 = -1980728065;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1616180457)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            this.m_Node = aNode;
            this.m_Key = aKey;
            num1 = (int) num2 * 980355832 ^ -393104853;
            continue;
          case 3:
            num1 = (int) num2 * 534408495 ^ -1680815045;
            continue;
          case 4:
            num1 = (int) num2 * 701763869 ^ -967564542;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    private void Set(JSONNode aVal)
    {
      if (this.m_Key != null)
        goto label_3;
label_1:
      int num1 = 1722360256;
label_2:
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 359582885)) % 9U)
        {
          case 0:
            this.m_Node.Add(this.m_Key, aVal);
            num1 = (int) num2 * 400607775 ^ -218615840;
            continue;
          case 1:
            this.m_Node.Add(aVal);
            num1 = (int) num2 * -858053913 ^ -209971112;
            continue;
          case 3:
            num1 = (int) num2 * 307185199 ^ -2106932126;
            continue;
          case 4:
            num1 = (int) num2 * -294031973 ^ -873804832;
            continue;
          case 5:
            goto label_1;
          case 6:
            num1 = (int) num2 * 389531878 ^ 1893221085;
            continue;
          case 7:
            num1 = (int) num2 * 1333193547 ^ -439248687;
            continue;
          case 8:
            goto label_3;
          default:
            goto label_10;
        }
      }
label_10:
      this.m_Node = (JSONNode) null;
      return;
label_3:
      num1 = 1117667469;
      goto label_2;
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 1096631990;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1755620836)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * 1365994359 ^ -213974851;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
        JSONArray aVal = new JSONArray();
        aVal.Add(value);
label_1:
        int num1 = -492598972;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -512455867)) % 4U)
          {
            case 0:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 547166145 ^ 179410531;
              continue;
            case 1:
              num1 = (int) num2 * -910472160 ^ 586277453;
              continue;
            case 2:
              goto label_3;
            case 3:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
label_1:
        int num1 = 1048348649;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 23726572)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -1284858052 ^ 846161220;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 1066262489;
        JSONClass aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1733835794)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              aVal = new JSONClass();
              aVal.Add(aKey, value);
              num1 = (int) num2 * 351378972 ^ 2075935864;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        this.Set((JSONNode) aVal);
      }
    }

    public override void Add(JSONNode aItem)
    {
label_1:
      int num1 = -1713163332;
      JSONArray aVal;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -174314670)) % 6U)
        {
          case 0:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * -793846266 ^ 1443677207;
            continue;
          case 1:
            num1 = (int) num2 * -534820973 ^ 1551459172;
            continue;
          case 2:
            aVal = new JSONArray();
            aVal.Add(aItem);
            num1 = (int) num2 * -1356864321 ^ 1867581326;
            continue;
          case 3:
            goto label_1;
          case 4:
            num1 = (int) num2 * 1772797587 ^ -1415952192;
            continue;
          case 5:
            goto label_3;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    public override void Add(string aKey, JSONNode aItem)
    {
      JSONClass aVal = new JSONClass();
      aVal.Add(aKey, aItem);
label_1:
      int num1 = 87247773;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1171472477)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -1694676747 ^ 1912708374;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      this.Set((JSONNode) aVal);
    }

    public static bool operator ==(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = 1849460969;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 51436734)) % 8U)
        {
          case 0:
            goto label_1;
          case 1:
            int num3 = flag1 ? -1223186488 : (num3 = -2016398719);
            num1 = num3 ^ (int) num2 * 1349676485;
            continue;
          case 2:
            flag2 = (object) a == b;
            num1 = 420828778;
            continue;
          case 3:
            flag2 = true;
            num1 = (int) num2 * -521663778 ^ 75442865;
            continue;
          case 4:
            num1 = (int) num2 * 284067177 ^ -1082042620;
            continue;
          case 5:
            num1 = (int) num2 * 836735051 ^ 1115823719;
            continue;
          case 7:
            flag1 = b == null;
            num1 = (int) num2 * -1833949241 ^ 575316246;
            continue;
          default:
            goto label_9;
        }
      }
label_9:
      return flag2;
    }

    public static bool operator !=(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = -777228357;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -263646816)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 705458595 ^ -1519398027;
            continue;
          case 3:
            flag = !(a == b);
            num1 = (int) num2 * 438302435 ^ 73326948;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override bool Equals(object obj)
    {
      bool flag1 = obj == null;
label_1:
      int num1 = 535487754;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 305018664)) % 7U)
        {
          case 0:
            flag2 = (object) this == obj;
            num1 = 483417454;
            continue;
          case 1:
            num1 = (int) num2 * -1560557936 ^ -1813989764;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * -971481518 ^ -115823086;
            continue;
          case 5:
            int num3 = !flag1 ? 1491957582 : (num3 = 1771890011);
            num1 = num3 ^ (int) num2 * -1808459245;
            continue;
          case 6:
            flag2 = true;
            num1 = (int) num2 * 1125644756 ^ 2105946595;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      return flag2;
    }

    public override int GetHashCode()
    {
label_1:
      int num1 = 241759074;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 805727727)) % 4U)
        {
          case 1:
            hashCode = base.GetHashCode();
            num1 = (int) num2 * 1842086425 ^ 269107821;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * 1329208512 ^ 1626401091;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return hashCode;
    }

    public override string ToString()
    {
      string str = "";
label_1:
      int num1 = 1663875077;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2010102071)) % 3U)
        {
          case 1:
            num1 = (int) num2 * 751895912 ^ 2121474346;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 1234366132;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 602657797)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -396589507 ^ 628065467;
            continue;
          case 1:
            str = "";
            num1 = (int) num2 * -29315017 ^ -1358096630;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public override int AsInt
    {
      get
      {
        this.Set((JSONNode) new JSONData(0));
label_1:
        int num1 = 802032950;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1605775068)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -1496594788 ^ -1391844807;
              continue;
            case 3:
              asInt = 0;
              num1 = (int) num2 * -1596830481 ^ 1838610993;
              continue;
            case 4:
              num1 = (int) num2 * 1386679573 ^ 1182899504;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asInt;
      }
      set
      {
        JSONData aVal = new JSONData(value);
label_1:
        int num1 = -343170741;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1050862344)) % 4U)
          {
            case 0:
              num1 = (int) num2 * -129589363 ^ -904679667;
              continue;
            case 1:
              goto label_3;
            case 2:
              goto label_1;
            case 3:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 371718466 ^ -1573792178;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override float AsFloat
    {
      get
      {
label_1:
        int num1 = -1600328218;
        JSONData aVal;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1350979410)) % 6U)
          {
            case 0:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -304066605 ^ -2032380834;
              continue;
            case 1:
              num1 = (int) num2 * 1258009808 ^ 1912011477;
              continue;
            case 2:
              asFloat = 0.0f;
              num1 = (int) num2 * -310946967 ^ -1097605663;
              continue;
            case 3:
              goto label_1;
            case 4:
              aVal = new JSONData(0.0f);
              num1 = (int) num2 * -1396606860 ^ -1315586334;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asFloat;
      }
      set => this.Set((JSONNode) new JSONData(value));
    }

    public override double AsDouble
    {
      get
      {
label_1:
        int num1 = 2132364417;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 660425104)) % 3U)
          {
            case 1:
              this.Set((JSONNode) new JSONData(0.0));
              asDouble = 0.0;
              num1 = (int) num2 * 1327900198 ^ 1225480521;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return asDouble;
      }
      set => this.Set((JSONNode) new JSONData(value));
    }

    public override bool AsBool
    {
      get
      {
        JSONData aVal = new JSONData(false);
label_1:
        int num1 = -248542702;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1825807344)) % 5U)
          {
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -764532078 ^ -99730710;
              continue;
            case 2:
              num1 = (int) num2 * 1685543666 ^ 449630924;
              continue;
            case 3:
              goto label_1;
            case 4:
              asBool = false;
              num1 = (int) num2 * -1187854819 ^ 1413774617;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asBool;
      }
      set => this.Set((JSONNode) new JSONData(value));
    }

    public override JSONArray AsArray
    {
      get
      {
        JSONArray aVal = new JSONArray();
label_1:
        int num1 = -123957661;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1448633131)) % 4U)
          {
            case 1:
              num1 = (int) num2 * 1286401424 ^ -190156623;
              continue;
            case 2:
              this.Set((JSONNode) aVal);
              asArray = aVal;
              num1 = (int) num2 * -1465899038 ^ 522461980;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return asArray;
      }
    }

    public override JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = 1755657992;
        JSONClass aVal;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1599392914)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -1173670013 ^ -334377092;
              continue;
            case 2:
              aVal = new JSONClass();
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1006548757 ^ -1382773188;
              continue;
            case 4:
              num1 = (int) num2 * 2083589163 ^ -1681922483;
              continue;
            case 5:
              asObject = aVal;
              num1 = (int) num2 * 522939202 ^ 1085863633;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asObject;
      }
    }
  }
}
