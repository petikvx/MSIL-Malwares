// Decompiled with JetBrains decompiler
// Type: dO7yc1bMFlvL3.8O2yT47
// Assembly: svchost, Version=3.6.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A77B6346-3D8E-49C8-9445-FA550F2D4E61
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00019-msil\HEUR-Trojan-Ransom.MSIL.Foreign.gen-9e7465e5d6bd41a7ae109a189729329f5b3b9f4c7694553dcd5941a98f8c38e1.exe

using Microsoft.VisualBasic;
using System.Drawing;
using System.Drawing.Printing;
using System.Runtime.CompilerServices;

namespace dO7yc1bMFlvL3
{
  public class \u0038O2yT47 : PrintDocument
  {
    private Font RBOqO179;
    private string \u0036393a180;
    [SpecialName]
    private int \u0024STATIC\u0024OnPrintPage\u0024201112809D\u0024intCurrentChar;

    public \u0038O2yT47(string Text) => this.\u0036393a180 = Text;

    public string Text
    {
      get => this.\u0036393a180;
      set => this.\u0036393a180 = value;
    }

    protected override void OnBeginPrint(PrintEventArgs ev)
    {
      base.OnBeginPrint(ev);
      if (this.RBOqO179 != null)
        return;
      this.RBOqO179 = new Font("Times New Roman", 12f);
    }

    public Font Font
    {
      get => this.RBOqO179;
      set => this.RBOqO179 = value;
    }

    protected override void OnPrintPage(PrintPageEventArgs e)
    {
      base.OnPrintPage(e);
      PageSettings defaultPageSettings = this.DefaultPageSettings;
      int height = checked (defaultPageSettings.PaperSize.Height - defaultPageSettings.Margins.Top - defaultPageSettings.Margins.Bottom);
      int width = checked (defaultPageSettings.PaperSize.Width - defaultPageSettings.Margins.Left - defaultPageSettings.Margins.Right);
      int left = defaultPageSettings.Margins.Left;
      int top = defaultPageSettings.Margins.Top;
      if (this.DefaultPageSettings.Landscape)
      {
        int num = height;
        height = width;
        width = num;
      }
      RectangleF layoutRectangle = new RectangleF((float) left, (float) top, (float) width, (float) height);
      StringFormat stringFormat = new StringFormat(StringFormatFlags.LineLimit);
      int charactersFitted;
      e.Graphics.MeasureString(Strings.Mid(this.\u0036393a180, this.KVpxX216(this.\u0024STATIC\u0024OnPrintPage\u0024201112809D\u0024intCurrentChar)), this.Font, new SizeF((float) width, (float) height), stringFormat, out charactersFitted, out int _);
      e.Graphics.DrawString(Strings.Mid(this.\u0036393a180, this.KVpxX216(this.\u0024STATIC\u0024OnPrintPage\u0024201112809D\u0024intCurrentChar)), this.Font, Brushes.Black, layoutRectangle, stringFormat);
      checked { this.\u0024STATIC\u0024OnPrintPage\u0024201112809D\u0024intCurrentChar += charactersFitted; }
      if (this.\u0024STATIC\u0024OnPrintPage\u0024201112809D\u0024intCurrentChar < this.\u0036393a180.Length)
      {
        e.HasMorePages = true;
      }
      else
      {
        e.HasMorePages = false;
        this.\u0024STATIC\u0024OnPrintPage\u0024201112809D\u0024intCurrentChar = 0;
      }
    }

    public int KVpxX216(int Input) => Input == 0 ? 1 : Input;
  }
}
