// Decompiled with JetBrains decompiler
// Type:  
// Assembly: SafeHeapHandleCa, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 86070057-00F7-426E-5B63-54B8EF531843
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-3c09acc9b330846c99b3bdafa1697137c48b9a002919b6c1d671e9224bae9576.exe

using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

public sealed class \u0003\u2000
{
  [DebuggerBrowsable(DebuggerBrowsableState.Never)]
  private bool \u0002;
  [DebuggerBrowsable(DebuggerBrowsableState.Never)]
  private bool \u0003;
  [DebuggerBrowsable(DebuggerBrowsableState.Never)]
  private bool \u0005;
  [DebuggerBrowsable(DebuggerBrowsableState.Never)]
  private bool \u0008;
  [DebuggerBrowsable(DebuggerBrowsableState.Never)]
  private bool \u0006;

  [MethodImpl(MethodImplOptions.NoInlining)]
  public \u0003\u2000()
  {
  }

  [CompilerGenerated]
  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public bool AwakeState() => this.\u0002;

  [CompilerGenerated]
  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public bool RunState() => this.\u0003;

  [CompilerGenerated]
  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public bool RateState() => this.\u0005;

  [CompilerGenerated]
  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public bool PopState() => this.\u0008;

  [CompilerGenerated]
  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public bool WriteState() => this.\u0006;

  [MethodImpl(MethodImplOptions.NoInlining)]
  public void \u0002(Keys _param1)
  {
    int num1 = 6;
    while (true)
    {
      int num2;
      bool flag1;
      bool flag2;
      switch (num1)
      {
        case 0:
        case 6:
          flag1 = _param1 == Keys.Left;
          num2 = 8;
          break;
        case 1:
        case 8:
          if (flag1)
          {
            num2 = 5;
            break;
          }
          goto case 2;
        case 2:
          if (_param1 == Keys.Right)
          {
            num2 = 4;
            break;
          }
          goto case 7;
        case 3:
          if (flag2)
          {
            // ISSUE: reference to a compiler-generated method
            this.SortState(true);
          }
          if (_param1 == Keys.Down)
          {
            if (\u0003\u2000.\u0002())
            {
              num1 = 10;
              continue;
            }
            goto case 9;
          }
          else
            goto case 9;
        case 4:
          // ISSUE: reference to a compiler-generated method
          this.ValidateState(true);
          goto case 7;
        case 5:
          // ISSUE: reference to a compiler-generated method
          this.NewState(true);
          num1 = 2;
          continue;
        case 7:
          flag2 = _param1 == Keys.Up;
          num1 = 3;
          continue;
        case 9:
          if (_param1 == Keys.Space)
          {
            // ISSUE: reference to a compiler-generated method
            this.RevertState(true);
            num2 = 11;
            break;
          }
          goto label_19;
        case 10:
          // ISSUE: reference to a compiler-generated method
          this.ChangeState(true);
          num2 = 9;
          break;
        case 11:
          goto label_20;
        default:
          num2 = 7;
          break;
      }
      num1 = num2;
    }
label_19:
    return;
label_20:;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  public void \u0002()
  {
    int num1 = 6;
    while (true)
    {
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
            goto label_2;
          case 1:
          case 5:
            // ISSUE: reference to a compiler-generated method
            this.ValidateState(false);
            num2 = 0;
            continue;
          case 2:
          case 4:
            goto label_6;
          case 3:
            goto label_7;
          case 6:
            // ISSUE: reference to a compiler-generated method
            this.NewState(false);
            if (!\u0003\u2000.\u0003())
            {
              num2 = 5;
              continue;
            }
            goto label_9;
          case 7:
            goto label_10;
          default:
            num2 = 3;
            continue;
        }
      }
label_2:
      // ISSUE: reference to a compiler-generated method
      this.SortState(false);
      goto label_7;
label_6:
      // ISSUE: reference to a compiler-generated method
      this.RevertState(false);
      num1 = 7;
      continue;
label_7:
      // ISSUE: reference to a compiler-generated method
      this.ChangeState(false);
      num1 = 2;
    }
label_10:
    return;
label_9:;
  }

  internal static bool \u0002() => true;

  internal static bool \u0003() => false;
}
