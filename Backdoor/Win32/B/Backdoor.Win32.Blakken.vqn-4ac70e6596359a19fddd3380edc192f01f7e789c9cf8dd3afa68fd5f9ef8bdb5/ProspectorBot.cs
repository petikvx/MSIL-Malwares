// Decompiled with JetBrains decompiler
// Type: ProspectorBot
// Assembly: IDynamicMessageS, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 27E16815-1EE5-4D7C-AD78-EB45F6CA3CA3
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.05\Backdoor.Win32.Blakken.vqn-4ac70e6596359a19fddd3380edc192f01f7e789c9cf8dd3afa68fd5f9ef8bdb5.exe

using DefaultPackage;
using System.Collections.Generic;

public class ProspectorBot
{
  public static void DoTurn(PlanetWars pw)
  {
label_1:
    int num1 = -1199313532;
    double num2;
    Planet source;
    while (true)
    {
      uint num3;
      switch ((num3 = (uint) (num1 ^ -2067498257)) % 7U)
      {
        case 0:
          goto label_1;
        case 1:
          num2 = double.MinValue;
          num1 = (int) num3 * -441841374 ^ -437717474;
          continue;
        case 2:
          goto label_42;
        case 3:
          int num4 = pw.MyFleets().Count < 1 ? -57378033 : (num4 = -2093889716);
          num1 = num4 ^ (int) num3 * -806131025;
          continue;
        case 5:
          source = (Planet) null;
          num1 = -813017004;
          continue;
        case 6:
          num1 = (int) num3 * -640904328 ^ 1154108846;
          continue;
        default:
          goto label_7;
      }
    }
label_42:
    return;
label_7:
    List<Planet>.Enumerator enumerator1 = pw.MyPlanets().GetEnumerator();
    try
    {
label_16:
      int num5 = enumerator1.MoveNext() ? -426338482 : (num5 = -49052023);
      double num6;
      Planet current;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num5 ^ -2067498257)) % 10U)
        {
          case 1:
            goto label_16;
          case 2:
            int num8 = num6 > num2 ? 1808363861 : (num8 = 687789296);
            num5 = num8 ^ (int) num7 * -552167364;
            continue;
          case 3:
            current = enumerator1.Current;
            num5 = -2036983110;
            continue;
          case 4:
            num6 = (double) current.NumShips() / (double) (1 + current.GrowthRate());
            num5 = (int) num7 * 1116827810 ^ 1407059809;
            continue;
          case 5:
            num5 = (int) num7 * 84983202 ^ 225808085;
            continue;
          case 6:
            num2 = num6;
            num5 = (int) num7 * -1556644260 ^ -1163318585;
            continue;
          case 7:
            num5 = -1668087660;
            continue;
          case 8:
            source = current;
            num5 = (int) num7 * 2099597096 ^ -1382500936;
            continue;
          case 9:
            num5 = -426338482;
            continue;
          default:
            goto label_24;
        }
      }
    }
    finally
    {
      enumerator1.Dispose();
label_20:
      int num9 = -1882043736;
      while (true)
      {
        uint num10;
        switch ((num10 = (uint) (num9 ^ -2067498257)) % 3U)
        {
          case 0:
            goto label_20;
          case 2:
            num9 = (int) num10 * -265377165 ^ 591619120;
            continue;
          default:
            goto label_23;
        }
      }
label_23:;
    }
label_24:
    Planet dest = (Planet) null;
label_25:
    int num11 = -921578892;
    double num12;
    while (true)
    {
      uint num13;
      switch ((num13 = (uint) (num11 ^ -2067498257)) % 3U)
      {
        case 0:
          goto label_25;
        case 1:
          num12 = double.MinValue;
          num11 = (int) num13 * -1658655710 ^ 1354291907;
          continue;
        default:
          goto label_28;
      }
    }
label_28:
    using (List<Planet>.Enumerator enumerator2 = pw.NotMyPlanets().GetEnumerator())
    {
label_35:
      int num14 = enumerator2.MoveNext() ? -1772353328 : (num14 = -1318445243);
      Planet current;
      double num15;
      bool flag;
      while (true)
      {
        uint num16;
        switch ((num16 = (uint) (num14 ^ -2067498257)) % 11U)
        {
          case 0:
            dest = current;
            num14 = (int) num16 * -436889537 ^ -2025379839;
            continue;
          case 1:
            int num17 = flag ? -626954076 : (num17 = -2020611241);
            num14 = num17 ^ (int) num16 * 1260629419;
            continue;
          case 2:
            num14 = -1772353328;
            continue;
          case 3:
            num14 = -1285210725;
            continue;
          case 4:
            current = enumerator2.Current;
            num14 = -1836459664;
            continue;
          case 6:
            num12 = num15;
            num14 = (int) num16 * 289045037 ^ -2064708458;
            continue;
          case 7:
            goto label_35;
          case 8:
            num14 = (int) num16 * -1140081826 ^ 2138575202;
            continue;
          case 9:
            num14 = (int) num16 * 608972983 ^ -494003910;
            continue;
          case 10:
            num15 = (double) (1 + current.GrowthRate()) / (double) current.NumShips();
            flag = num15 > num12;
            num14 = (int) num16 * 1074617673 ^ 975664007;
            continue;
          default:
            goto label_44;
        }
      }
    }
label_44:
    if (source == null)
      goto label_49;
label_45:
    int num18 = -472388141;
label_46:
    int numShips;
    while (true)
    {
      uint num19;
      switch ((num19 = (uint) (num18 ^ -2067498257)) % 5U)
      {
        case 0:
          goto label_45;
        case 1:
          goto label_47;
        case 2:
          pw.IssueOrder(source, dest, numShips);
          num18 = (int) num19 * -1127399618 ^ -480736162;
          continue;
        case 3:
          goto label_48;
        case 4:
          numShips = source.NumShips() / 2;
          num18 = (int) num19 * -825131818 ^ -1159404090;
          continue;
        default:
          goto label_32;
      }
    }
label_47:
    return;
label_32:
    return;
label_48:
    int num20 = dest != null ? 1 : 0;
    goto label_50;
label_49:
    num20 = 0;
label_50:
    num18 = num20 == 0 ? -899349324 : (num18 = -1981562292);
    goto label_46;
  }

  public ProspectorBot()
  {
label_1:
    int num1 = 1465687329;
    while (true)
    {
      uint num2;
      switch ((num2 = (uint) (num1 ^ 141850780)) % 3U)
      {
        case 0:
          goto label_1;
        case 1:
          num1 = (int) num2 * 1938647378 ^ -228458611;
          continue;
        case 2:
          goto label_3;
        default:
          goto label_5;
      }
    }
label_3:
    return;
label_5:;
  }
}
