// Decompiled with JetBrains decompiler
// Type: SimpleChessApp.Game.SimpleSquare
// Assembly: جY, Version=2.159.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 4509E19C-3738-48CD-AFB9-B77E11D0C93B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.01-msil\HEUR-Trojan-Ransom.MSIL.Makop.gen-64fa23f22cfa820eb89b80e1db1502fcaebcb66c1731e92f550c12ca940e8075.exe

using System;
using System.ComponentModel;
using System.Drawing;
using System.Runtime.InteropServices;
using System.Threading;
using System.Windows.Forms;

namespace SimpleChessApp.Game
{
  public class SimpleSquare : UserControl
  {
    private Color DefaultColor;
    private ChessPiece piece;
    private bool isBlackSquare;
    private IContainer components = (IContainer) null;
    public Panel panel1;

    public event EventHandler<MouseEventArgs> Click
    {
      add
      {
        EventHandler<MouseEventArgs> eventHandler1 = this.Click;
label_1:
        int num1 = 167721745;
        EventHandler<MouseEventArgs> comparand;
        EventHandler<MouseEventArgs> eventHandler2;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 968860660)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              comparand = eventHandler1;
              eventHandler2 = (EventHandler<MouseEventArgs>) SimpleSquare.\u200D‪‎⁮‍​‌​⁫⁪‭⁬‫⁫⁬⁪⁫‏‏‍⁫⁮‪‪‮‎‭⁬‬⁫⁮⁭⁪‏⁬​‮‪‍‪‮((Delegate) comparand, (Delegate) value);
              num1 = 1328519975;
              continue;
            case 2:
              goto label_3;
            case 3:
              eventHandler1 = Interlocked.CompareExchange<EventHandler<MouseEventArgs>>(ref this.Click, eventHandler2, comparand);
              int num3 = eventHandler1 == comparand ? -1212348089 : (num3 = -462780764);
              num1 = num3 ^ (int) num2 * 1876892247;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
      remove
      {
        EventHandler<MouseEventArgs> eventHandler = this.Click;
label_1:
        int num1 = 975634446;
        EventHandler<MouseEventArgs> comparand;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1896939429)) % 5U)
          {
            case 0:
              goto label_3;
            case 1:
              comparand = eventHandler;
              num1 = 1426461611;
              continue;
            case 2:
              int num3 = eventHandler != comparand ? 1317292134 : (num3 = 199439930);
              num1 = num3 ^ (int) num2 * 1074558324;
              continue;
            case 3:
              eventHandler = Interlocked.CompareExchange<EventHandler<MouseEventArgs>>(ref this.Click, (EventHandler<MouseEventArgs>) SimpleSquare.\u206A⁯‪‏‭⁬​‏‏‌⁯‍‫‫⁯‏‪‮‌⁬⁪‮‏‫⁪⁫⁯‏‌⁭⁫‬⁬⁯‬‏‭⁫​‎‮((Delegate) comparand, (Delegate) value), comparand);
              num1 = (int) num2 * -839633523 ^ -358741775;
              continue;
            case 4:
              goto label_1;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
    }

    public ChessPiece Piece
    {
      get
      {
        ChessPiece piece = this.piece;
label_1:
        int num1 = -99475489;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1911444981)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * -706186037 ^ 1852457056;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return piece;
      }
      set
      {
        this.piece = value;
label_1:
        int num1 = -1190310513;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -302534490)) % 9U)
          {
            case 0:
              SimpleSquare.\u200F‎‌​‏⁮⁮​​‪‏‌⁯‌‫⁬‏⁭⁮‏‍‏‌⁮‌‬‮‪‏⁭⁭‌⁪‭‌‌​⁯‭‌‮((Control) this, (Image) null);
              num1 = (int) num2 * 290718941 ^ 1597442873;
              continue;
            case 1:
              goto label_3;
            case 2:
              num1 = (int) num2 * -450112785 ^ 250924242;
              continue;
            case 3:
              int num3 = flag ? -1937326722 : (num3 = -1465305593);
              num1 = num3 ^ (int) num2 * -899470379;
              continue;
            case 4:
              goto label_1;
            case 5:
              this.piece = (ChessPiece) null;
              num1 = (int) num2 * 874113543 ^ -565919029;
              continue;
            case 6:
              num1 = (int) num2 * 1881263630 ^ 1825190284;
              continue;
            case 7:
              flag = this.piece == null;
              num1 = (int) num2 * -1099745526 ^ -2103559524;
              continue;
            case 8:
              SimpleSquare.\u200F‎‌​‏⁮⁮​​‪‏‌⁯‌‫⁬‏⁭⁮‏‍‏‌⁮‌‬‮‪‏⁭⁭‌⁪‭‌‌​⁯‭‌‮((Control) this, this.repo.GetPiece(this.piece.Kind, this.piece.Color));
              num1 = -157887520;
              continue;
            default:
              goto label_11;
          }
        }
label_3:
        return;
label_11:;
      }
    }

    public void colorSquare()
    {
label_1:
      int num1 = 269077623;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1292067889)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            this.DefaultColor = this.IsBlackSquare ? Color.CornflowerBlue : Color.WhiteSmoke;
            num1 = 1080585013;
            continue;
          case 2:
            num1 = (int) num2 * -2125054491 ^ -1289958123;
            continue;
          case 3:
            goto label_3;
          case 4:
            SimpleSquare.\u206D​⁯⁭​‫‪⁮‪‫‏‭⁬‬‏⁫⁬‏⁭‎‭‌‭‌‫⁫​‪‌⁫⁭‮‬‏‍‪‭⁯⁬‫‮((Control) this, this.DefaultColor);
            num1 = (int) num2 * 968621385 ^ 1987456877;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public Pieces Kind
    {
      set
      {
label_1:
        int num1 = 963917438;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2079163360)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -603995200 ^ 1410518083;
              continue;
            case 2:
              this.Piece = this.Piece;
              num1 = (int) num2 * -1090499875 ^ -613144831;
              continue;
            case 3:
              this.Piece.Kind = value;
              num1 = (int) num2 * 364421277 ^ 881361877;
              continue;
            case 4:
              goto label_3;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
    }

    public bool IsBlackSquare
    {
      get
      {
        bool isBlackSquare = this.isBlackSquare;
label_1:
        int num1 = -1976523472;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -83239977)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * 395149727 ^ 275909633;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return isBlackSquare;
      }
      set
      {
        this.isBlackSquare = value;
label_1:
        int num1 = 1784983301;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 804607710)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.colorSquare();
              num1 = (int) num2 * 467374344 ^ -1331488915;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public Repository repo
    {
      get
      {
label_1:
        int num1 = -1701459348;
        Repository repo;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -551025087)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 63851133 ^ 1741989891;
              continue;
            case 1:
              repo = ChessContext.repo;
              num1 = (int) num2 * 283852328 ^ -250004059;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return repo;
      }
    }

    public SimpleSquare()
    {
label_1:
      int num1 = 856867558;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1676883871)) % 6U)
        {
          case 0:
            goto label_1;
          case 1:
            this.InitializeComponent();
            num1 = (int) num2 * 1271430815 ^ -696954869;
            continue;
          case 3:
            SimpleSquare.\u202E⁮⁯‪‫‍⁮⁫⁮‌‬⁭⁪‪‭‮⁭‫‏⁬‏⁪⁭⁬‌⁮⁭‎‭‫⁭⁫⁫‌⁯⁯‭‏​‌‮((Control) this, new MouseEventHandler(this.Square_MouseClick));
            num1 = (int) num2 * 788061549 ^ 1216196726;
            continue;
          case 4:
            num1 = (int) num2 * -66782148 ^ -500777466;
            continue;
          case 5:
            num1 = (int) num2 * -55338867 ^ 1257118354;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      SimpleSquare.\u206C⁭‍‌‭⁬‫​‪⁬‮‪‪⁯⁬⁮⁬⁮‮⁯‭⁯​‫⁭‫⁪⁬‌⁪‍⁭‪‫‎⁭⁫‮‫‎‮((Control) this.panel1, new MouseEventHandler(this.Square_MouseClick));
    }

    private void Square_MouseClick(object sender, MouseEventArgs e)
    {
label_1:
      int num1 = -590468058;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -37636436)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            EventHandler<MouseEventArgs> click = this.Click;
            if (click != null)
            {
              click((object) this, e);
              num1 = (int) num2 * 1763037354 ^ 932280258;
              continue;
            }
            goto label_5;
          case 2:
            goto label_3;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:
      return;
label_5:;
    }

    public void HighLight()
    {
label_1:
      int num1 = 1104704792;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2063391475)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            SimpleSquare.\u206D​⁯⁭​‫‪⁮‪‫‏‭⁬‬‏⁫⁬‏⁭‎‭‌‭‌‫⁫​‪‌⁫⁭‮‬‏‍‪‭⁯⁬‫‮((Control) this, Color.ForestGreen);
            num1 = (int) num2 * 735660876 ^ -2131541824;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public void ClearHighLight()
    {
label_1:
      int num1 = -414173043;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1839531332)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            SimpleSquare.\u206D​⁯⁭​‫‪⁮‪‫‏‭⁬‬‏⁫⁬‏⁭‎‭‌‭‌‫⁫​‪‌⁫⁭‮‬‏‍‪‭⁯⁬‫‮((Control) this, this.DefaultColor);
            num1 = (int) num2 * 1763381776 ^ 220045680;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public bool IsEmpty
    {
      get
      {
label_1:
        int num1 = 1965989835;
        bool isEmpty;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 459923926)) % 4U)
          {
            case 0:
              num1 = (int) num2 * -849511162 ^ -1320697104;
              continue;
            case 1:
              isEmpty = this.Piece == null;
              num1 = (int) num2 * 429896806 ^ 1775941060;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return isEmpty;
      }
    }

    protected override void Dispose(bool disposing)
    {
label_1:
      int num1 = -241527693;
      while (true)
      {
        uint num2;
        int num3;
        switch ((num2 = (uint) (num1 ^ -364059800)) % 7U)
        {
          case 0:
            goto label_1;
          case 1:
            num3 = this.components != null ? 1 : 0;
            break;
          case 2:
            SimpleSquare.\u206E‎‮‮⁭‪‎‫​⁬‪⁯​⁯⁯⁯‏‭⁪‍‮⁯⁮⁫‎‫⁪⁬‬‎‍⁬‮⁫⁬⁭⁫⁯⁫⁭‮((IDisposable) this.components);
            num1 = (int) num2 * -187038454 ^ -601912984;
            continue;
          case 4:
            num1 = (int) num2 * -914146830 ^ -108647765;
            continue;
          case 5:
            num1 = (int) num2 * 368089059 ^ -7028265;
            continue;
          case 6:
            if (disposing)
            {
              num1 = (int) num2 * -95670393 ^ 329929968;
              continue;
            }
            num3 = 0;
            break;
          default:
            goto label_11;
        }
        int num4;
        num1 = num4 = num3 != 0 ? -99820358 : (num4 = -2021626555);
      }
label_11:
      base.Dispose(disposing);
    }

    private void InitializeComponent()
    {
label_1:
      int num1 = 182865253;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1999654854)) % 16U)
        {
          case 0:
            goto label_1;
          case 1:
            SimpleSquare.\u202C⁮⁫‮‪⁬‭‮‫‫‭‫‫⁪‏‏⁬‬⁫‎‌⁬‎​⁭‬‎‎⁬‬​⁭‎⁫⁬‏⁪‭‭‎‮((Control) this.panel1, DockStyle.Fill);
            num1 = (int) num2 * 1815404225 ^ 1912001626;
            continue;
          case 2:
            num1 = (int) num2 * -712141876 ^ -501880833;
            continue;
          case 3:
            this.panel1 = SimpleSquare.\u202D‫⁪⁭‍‏⁬​⁮⁭‏⁬‬⁭⁫⁫⁪‍‭‫‌‏⁯‏‮‫‭⁮‬⁯⁮‌‏⁫⁫⁯​‭‌‌‮();
            num1 = (int) num2 * -756818301 ^ 2064779056;
            continue;
          case 4:
            SimpleSquare.\u202E‮‫‪‭‏‫‮⁮⁬‍⁭‭​⁭‍‏⁯‭‬‪‏‎‬⁮​‍‫‏⁯⁬‪‭‮‍‫‏‌‍⁫‮((ContainerControl) this, AutoScaleMode.Font);
            SimpleSquare.\u206C‫‫‮‭‮‏​​⁪‌⁫​⁮⁫‫‪‬‏⁮‮‪‪⁮⁯‫‏‭⁫⁭⁪‫‫​‪⁫⁫⁫‎‏‮((Control) this, ImageLayout.Center);
            SimpleSquare.\u200E‍‏⁮‭‌‎‭⁯‏‬‍‎‍‬⁪‌‫​‮⁭‭‭⁮⁪‍‮‎‎⁪⁮‪‌⁭⁪⁯‍‫⁪‬‮(SimpleSquare.\u200C⁬‎⁯‪⁮‫⁬‮⁪‮⁮⁬⁭‏‏‫⁮​‭‪‭‮⁫‫‌‎‬⁮⁭‪⁫‮‫⁫‪⁪⁯‍‫‮((Control) this), (Control) this.panel1);
            SimpleSquare.\u202B‏‍⁮‪‏‍‭‍‭‫‏⁬‬⁮‍⁭⁭‍⁫‭‎‫‪‎⁭⁮‮⁭‌⁮⁮‍‪‌‌⁯⁪⁫‪‮((Control) this, new Padding(0));
            SimpleSquare.\u202D‬​⁪‮⁭‭⁯⁫‫‬‮‮⁪⁯⁬‎⁪⁮‪‪⁮⁬‮‭‫‫‪‍‌‪‍‫‫⁭‪‎‮‭‎‮((Control) this, \u003CModule\u003E.\u202A⁭‭‮⁫‌⁮‭⁪⁮‭‍⁬‮‪⁯‎‏‍⁪⁬⁭⁬⁮‪‬‍‏⁪⁯‏‫‭‍⁫‎⁫‭⁯⁬‮<string>(2280399828U));
            num1 = (int) num2 * 686090591 ^ -345170365;
            continue;
          case 5:
            SimpleSquare.\u206D​⁯⁭​‫‪⁮‪‫‏‭⁬‬‏⁫⁬‏⁭‎‭‌‭‌‫⁫​‪‌⁫⁭‮‬‏‍‪‭⁯⁬‫‮((Control) this.panel1, Color.Transparent);
            num1 = (int) num2 * 1416270385 ^ -1469270279;
            continue;
          case 6:
            SimpleSquare.\u206C‫‫‮‭‮‏​​⁪‌⁫​⁮⁫‫‪‬‏⁮‮‪‪⁮⁯‫‏‭⁫⁭⁪‫‫​‪⁫⁫⁫‎‏‮((Control) this.panel1, ImageLayout.Center);
            num1 = (int) num2 * 1161501132 ^ -983163044;
            continue;
          case 7:
            goto label_3;
          case 8:
            SimpleSquare.\u200F‭‬⁮‭‮‎​‭‎‫‌⁪‌‫⁭‬⁭‫‪‭‫⁫‭‍‏⁬⁯​⁬​‫⁯‭‬⁫⁬‬‏‮‮((Control) this.panel1, \u003CModule\u003E.\u202A⁭‭‮⁫‌⁮‭⁪⁮‭‍⁬‮‪⁯‎‏‍⁪⁬⁭⁬⁮‪‬‍‏⁪⁯‏‫‭‍⁫‎⁫‭⁯⁬‮<string>(464922868U));
            num1 = (int) num2 * 180792010 ^ -1840725670;
            continue;
          case 9:
            SimpleSquare.\u202B‫‫⁫‌⁬⁯‬⁪‫⁪‌‍⁮‪‪​‬‎‪‫‮‭‏‮‏‎‭⁭⁮‎⁬⁮⁬‭‬‎‏‮⁮‮((Control) this, new Size(137, 132));
            SimpleSquare.\u200C‏⁯⁯⁪‬⁫‮⁭​​‍‏‭⁭‫​⁯‪⁪‏‮‭‪‫⁪‌‭⁬‌​‫‬⁬⁭⁪⁮⁪⁪‏‮((Control) this, false);
            num1 = (int) num2 * -1353168495 ^ -632666751;
            continue;
          case 10:
            num1 = (int) num2 * 818572203 ^ 1728672798;
            continue;
          case 11:
            SimpleSquare.\u206B‮‍‬‏⁪⁫⁮⁫⁬⁭‍‮⁫⁯‍‭⁭‬‌‮⁭⁬‍‫⁬⁯‭‏​‭‮⁬‪‏‭⁯⁪‪‭‮((Control) this.panel1, 0);
            SimpleSquare.\u202A⁬‎⁯‬‬⁯⁪⁪​⁭‍‭‌‮‭⁫‬‍‭⁯⁪‬‎⁮⁬‬⁫‫⁪⁯‬‫⁪‪‏⁪⁬‎‌‮((ContainerControl) this, new SizeF(6f, 13f));
            num1 = (int) num2 * -1925554781 ^ -1293337885;
            continue;
          case 12:
            SimpleSquare.\u206F‮‍‏⁯‮‪⁪‎‪⁫‍⁬‎‫⁮‎⁮‮‭‫‫‮⁬‮⁪‭⁭‫⁫⁭‏‮​‬⁮‌‏‌‌‮((Control) this.panel1, new Size(137, 132));
            num1 = (int) num2 * 1785541571 ^ -231180615;
            continue;
          case 13:
            SimpleSquare.\u202B⁮⁮‭‌⁪⁮‫‎‌‬‫⁮‮​⁯⁯‪‪⁪‬⁫‫‬⁮‌‬‌​⁫⁯⁭‍⁮⁪‬⁭‪‭‬‮((Control) this.panel1, new Point(0, 0));
            num1 = (int) num2 * -1472053547 ^ -904417985;
            continue;
          case 14:
            num1 = (int) num2 * 89939045 ^ 1585301287;
            continue;
          case 15:
            SimpleSquare.\u206B⁮⁪‮‌‭‏‪⁪‬‏‪‬⁬‪⁬⁬⁮‭‍‮‬⁪‭‍⁪‬⁪⁬‭⁬‍‫⁮‌​‍‎⁪‏‮((Control) this);
            num1 = (int) num2 * 1948533503 ^ -464819886;
            continue;
          default:
            goto label_18;
        }
      }
label_3:
      return;
label_18:;
    }

    static Delegate \u200D‪‎⁮‍​‌​⁫⁪‭⁬‫⁫⁬⁪⁫‏‏‍⁫⁮‪‪‮‎‭⁬‬⁫⁮⁭⁪‏⁬​‮‪‍‪‮(
      [In] Delegate obj0,
      [In] Delegate obj1)
    {
      return Delegate.Combine(obj0, obj1);
    }

    static Delegate \u206A⁯‪‏‭⁬​‏‏‌⁯‍‫‫⁯‏‪‮‌⁬⁪‮‏‫⁪⁫⁯‏‌⁭⁫‬⁬⁯‬‏‭⁫​‎‮(
      [In] Delegate obj0,
      [In] Delegate obj1)
    {
      return Delegate.Remove(obj0, obj1);
    }

    static void \u200F‎‌​‏⁮⁮​​‪‏‌⁯‌‫⁬‏⁭⁮‏‍‏‌⁮‌‬‮‪‏⁭⁭‌⁪‭‌‌​⁯‭‌‮([In] Control obj0, [In] Image obj1) => obj0.BackgroundImage = obj1;

    static void \u206D​⁯⁭​‫‪⁮‪‫‏‭⁬‬‏⁫⁬‏⁭‎‭‌‭‌‫⁫​‪‌⁫⁭‮‬‏‍‪‭⁯⁬‫‮([In] Control obj0, [In] Color obj1) => obj0.BackColor = obj1;

    static void \u202E⁮⁯‪‫‍⁮⁫⁮‌‬⁭⁪‪‭‮⁭‫‏⁬‏⁪⁭⁬‌⁮⁭‎‭‫⁭⁫⁫‌⁯⁯‭‏​‌‮([In] Control obj0, [In] MouseEventHandler obj1) => obj0.MouseClick += obj1;

    static void \u206C⁭‍‌‭⁬‫​‪⁬‮‪‪⁯⁬⁮⁬⁮‮⁯‭⁯​‫⁭‫⁪⁬‌⁪‍⁭‪‫‎⁭⁫‮‫‎‮([In] Control obj0, [In] MouseEventHandler obj1) => obj0.MouseClick += obj1;

    static void \u206E‎‮‮⁭‪‎‫​⁬‪⁯​⁯⁯⁯‏‭⁪‍‮⁯⁮⁫‎‫⁪⁬‬‎‍⁬‮⁫⁬⁭⁫⁯⁫⁭‮([In] IDisposable obj0) => obj0.Dispose();

    static Panel \u202D‫⁪⁭‍‏⁬​⁮⁭‏⁬‬⁭⁫⁫⁪‍‭‫‌‏⁯‏‮‫‭⁮‬⁯⁮‌‏⁫⁫⁯​‭‌‌‮() => new Panel();

    static void \u206B⁮⁪‮‌‭‏‪⁪‬‏‪‬⁬‪⁬⁬⁮‭‍‮‬⁪‭‍⁪‬⁪⁬‭⁬‍‫⁮‌​‍‎⁪‏‮([In] Control obj0) => obj0.SuspendLayout();

    static void \u206C‫‫‮‭‮‏​​⁪‌⁫​⁮⁫‫‪‬‏⁮‮‪‪⁮⁯‫‏‭⁫⁭⁪‫‫​‪⁫⁫⁫‎‏‮([In] Control obj0, [In] ImageLayout obj1) => obj0.BackgroundImageLayout = obj1;

    static void \u202C⁮⁫‮‪⁬‭‮‫‫‭‫‫⁪‏‏⁬‬⁫‎‌⁬‎​⁭‬‎‎⁬‬​⁭‎⁫⁬‏⁪‭‭‎‮([In] Control obj0, [In] DockStyle obj1) => obj0.Dock = obj1;

    static void \u202B⁮⁮‭‌⁪⁮‫‎‌‬‫⁮‮​⁯⁯‪‪⁪‬⁫‫‬⁮‌‬‌​⁫⁯⁭‍⁮⁪‬⁭‪‭‬‮([In] Control obj0, [In] Point obj1) => obj0.Location = obj1;

    static void \u200F‭‬⁮‭‮‎​‭‎‫‌⁪‌‫⁭‬⁭‫‪‭‫⁫‭‍‏⁬⁯​⁬​‫⁯‭‬⁫⁬‬‏‮‮([In] Control obj0, [In] string obj1) => obj0.Name = obj1;

    static void \u206F‮‍‏⁯‮‪⁪‎‪⁫‍⁬‎‫⁮‎⁮‮‭‫‫‮⁬‮⁪‭⁭‫⁫⁭‏‮​‬⁮‌‏‌‌‮([In] Control obj0, [In] Size obj1) => obj0.Size = obj1;

    static void \u206B‮‍‬‏⁪⁫⁮⁫⁬⁭‍‮⁫⁯‍‭⁭‬‌‮⁭⁬‍‫⁬⁯‭‏​‭‮⁬‪‏‭⁯⁪‪‭‮([In] Control obj0, [In] int obj1) => obj0.TabIndex = obj1;

    static void \u202A⁬‎⁯‬‬⁯⁪⁪​⁭‍‭‌‮‭⁫‬‍‭⁯⁪‬‎⁮⁬‬⁫‫⁪⁯‬‫⁪‪‏⁪⁬‎‌‮([In] ContainerControl obj0, [In] SizeF obj1) => obj0.AutoScaleDimensions = obj1;

    static void \u202E‮‫‪‭‏‫‮⁮⁬‍⁭‭​⁭‍‏⁯‭‬‪‏‎‬⁮​‍‫‏⁯⁬‪‭‮‍‫‏‌‍⁫‮(
      [In] ContainerControl obj0,
      [In] AutoScaleMode obj1)
    {
      obj0.AutoScaleMode = obj1;
    }

    static Control.ControlCollection \u200C⁬‎⁯‪⁮‫⁬‮⁪‮⁮⁬⁭‏‏‫⁮​‭‪‭‮⁫‫‌‎‬⁮⁭‪⁫‮‫⁫‪⁪⁯‍‫‮(
      [In] Control obj0)
    {
      return obj0.Controls;
    }

    static void \u200E‍‏⁮‭‌‎‭⁯‏‬‍‎‍‬⁪‌‫​‮⁭‭‭⁮⁪‍‮‎‎⁪⁮‪‌⁭⁪⁯‍‫⁪‬‮(
      [In] Control.ControlCollection obj0,
      [In] Control obj1)
    {
      obj0.Add(obj1);
    }

    static void \u202B‏‍⁮‪‏‍‭‍‭‫‏⁬‬⁮‍⁭⁭‍⁫‭‎‫‪‎⁭⁮‮⁭‌⁮⁮‍‪‌‌⁯⁪⁫‪‮([In] Control obj0, [In] Padding obj1) => obj0.Margin = obj1;

    static void \u202D‬​⁪‮⁭‭⁯⁫‫‬‮‮⁪⁯⁬‎⁪⁮‪‪⁮⁬‮‭‫‫‪‍‌‪‍‫‫⁭‪‎‮‭‎‮([In] Control obj0, [In] string obj1) => obj0.Name = obj1;

    static void \u202B‫‫⁫‌⁬⁯‬⁪‫⁪‌‍⁮‪‪​‬‎‪‫‮‭‏‮‏‎‭⁭⁮‎⁬⁮⁬‭‬‎‏‮⁮‮([In] Control obj0, [In] Size obj1) => obj0.Size = obj1;

    static void \u200C‏⁯⁯⁪‬⁫‮⁭​​‍‏‭⁭‫​⁯‪⁪‏‮‭‪‫⁪‌‭⁬‌​‫‬⁬⁭⁪⁮⁪⁪‏‮([In] Control obj0, [In] bool obj1) => obj0.ResumeLayout(obj1);
  }
}
