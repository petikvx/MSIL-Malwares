// Decompiled with JetBrains decompiler
// Type: TemporalToolkit.TemporalExpressions.TEBefore
// Assembly: AssertFilt, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: D82097A6-A4CE-4A4A-9933-E78378BA7CC6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.05\Backdoor.MSIL.SpyGate.amea-62dfbde9c630c2de686534eccbc9ef292733b1781d867bdf9a0be9db3072eac3.exe

using System;

namespace TemporalToolkit.TemporalExpressions
{
  public class TEBefore : TemporalExpression
  {
    public DateTime Date { get; set; }

    public TEBefore(DateTime aDate)
    {
label_1:
      int num1 = 1142509800;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 947059831)) % 6U)
        {
          case 0:
            this.Date = aDate;
            num1 = (int) num2 * 1113602239 ^ 898725162;
            continue;
          case 1:
            num1 = (int) num2 * -1019702662 ^ -1939601154;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * -84891216 ^ 651542345;
            continue;
          case 4:
            goto label_3;
          case 5:
            num1 = (int) num2 * -165192452 ^ -773035041;
            continue;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    public override bool Includes(DateTime aDate)
    {
label_1:
      int num1 = 21141323;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1466092466)) % 4U)
        {
          case 1:
            flag = aDate < this.Date;
            num1 = (int) num2 * 1425887225 ^ 170233049;
            continue;
          case 2:
            num1 = (int) num2 * 577473847 ^ -611632380;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }
  }
}
