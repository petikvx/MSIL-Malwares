// Decompiled with JetBrains decompiler
// Type: A.AB
// Assembly: N0$Crypter, Version=3.0.7.1, Culture=neutral, PublicKeyToken=null
// MVID: FD276B3A-BCAA-4176-AE7A-13B114112E73
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan.MSIL.Crypt.hae-91602cc2011b8768f677252d0fce055cd9e20323cd9c86736de5f27b67249290.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.IO;
using System.Net;
using System.Runtime.CompilerServices;
using System.Text;
using System.Text.RegularExpressions;

namespace A
{
  internal sealed class AB
  {
    private Uri A;

    public AB()
    {
      this.A(false);
      this.A(AB.ScanType.None);
      this.A(AB.ScanMode.None);
      this.A(AB.ScanFormat.None);
      this.A(string.Empty);
      this.B(string.Empty);
      this.C(string.Empty);
      this.A = new Uri(EC.A(13744));
    }

    [SpecialName]
    public int A() => this.A;

    [SpecialName]
    public void A(int _param1) => this.A = _param1;

    [SpecialName]
    public string A() => this.A;

    [SpecialName]
    public void A(string _param1) => this.A = _param1;

    [SpecialName]
    public AB.ScanType A() => this.A;

    [SpecialName]
    public void A(AB.ScanType _param1) => this.A = _param1;

    [SpecialName]
    public string B() => this.B;

    [SpecialName]
    public void B(string _param1) => this.B = _param1;

    [SpecialName]
    public AB.ScanMode A() => this.A;

    [SpecialName]
    public void A(AB.ScanMode _param1) => this.A = _param1;

    [SpecialName]
    public bool A() => this.A;

    [SpecialName]
    public void A(bool _param1) => this.A = _param1;

    [SpecialName]
    public AB.ScanFormat A() => this.A;

    [SpecialName]
    public void A(AB.ScanFormat _param1) => this.A = _param1;

    [SpecialName]
    public string C() => this.C;

    [SpecialName]
    public void C(string _param1) => this.C = _param1;

    [SpecialName]
    public byte A() => this.A;

    [SpecialName]
    public void A(byte _param1) => this.A = _param1;

    public string D()
    {
      if (this.B())
      {
label_1:
        switch (3)
        {
          case 0:
            goto label_1;
          default:
            if (false)
            {
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (AB.D);
            }
            return string.Empty;
        }
      }
      else
      {
        NameValueCollection nameValueCollection = this.A();
        if (this.A() != AB.ScanType.File)
        {
label_6:
          switch (5)
          {
            case 0:
              goto label_6;
            default:
              WebClient webClient = OL.A();
              return UI.A((object) BQ.A(), EW.A((object) webClient, this.A, nameValueCollection));
          }
        }
        else
        {
          StringBuilder stringBuilder = WH.A();
          string str1 = EC.A(12719);
          DateTime dateTime = GG.A();
          string str2 = CW.A(DW.A(ref dateTime));
          string str3 = NH.A(str1, str2);
          IEnumerator enumerator;
          try
          {
            enumerator = AW.A((object) BW.A((object) nameValueCollection));
            while (LJ.A((object) enumerator))
            {
              string str4 = NS.A(PJ.A((object) enumerator));
              XV.A((object) stringBuilder, str3);
              XV.A((object) stringBuilder, UH.A(EC.A(12778), str4, EC.A(12855)));
              WV.A((object) stringBuilder);
              XV.A((object) stringBuilder, ZV.A((object) nameValueCollection, str4));
            }
label_12:
            switch (2)
            {
              case 0:
                goto label_12;
            }
          }
          finally
          {
            if (enumerator is IDisposable)
            {
label_14:
              switch (7)
              {
                case 0:
                  goto label_14;
                default:
                  TD.A((object) (enumerator as IDisposable));
                  break;
              }
            }
          }
          XV.A((object) stringBuilder, str3);
          XV.A((object) stringBuilder, UH.A(EC.A(12858), YV.A(this.B()), EC.A(12855)));
          XV.A((object) stringBuilder, EC.A(12975));
          WV.A((object) stringBuilder);
          byte[] numArray1 = RF.A((object) BQ.A(), FH.A((object) stringBuilder));
          byte[] numArray2 = RF.A((object) BQ.A(), UH.A(SS.A(), str3, EC.A(13052)));
          byte[] numArray3 = GI.A(this.B());
          MemoryStream memoryStream1 = PQ.A();
          NQ.A((object) memoryStream1, numArray1, 0, numArray1.Length);
          NQ.A((object) memoryStream1, numArray3, 0, numArray3.Length);
          NQ.A((object) memoryStream1, numArray2, 0, numArray2.Length);
          byte[] numArray4 = KQ.A((object) memoryStream1);
          TK.A((object) memoryStream1);
          WebRequest webRequest = VV.A(this.A);
          UV.A((object) webRequest, EC.A(13057));
          TV.A((object) webRequest, NH.A(EC.A(13066), VF.A((object) str3, 2)));
          SV.A((object) webRequest, (long) numArray4.Length);
          Stream stream1 = RV.A((object) webRequest);
          QV.A((object) stream1, numArray4, 0, numArray4.Length);
          TK.A((object) stream1);
          WebResponse webResponse = TN.A((object) webRequest);
          Stream stream2 = PV.A((object) webResponse);
          int num = int.MaxValue;
          byte[] numArray5 = new byte[4096];
          MemoryStream memoryStream2 = PQ.A();
          while (num != 0)
          {
            num = OV.A((object) stream2, numArray5, 0, 4096);
            NQ.A((object) memoryStream2, numArray5, 0, num);
          }
label_20:
          switch (4)
          {
            case 0:
              goto label_20;
            default:
              NV.A((object) webResponse);
              TK.A((object) memoryStream2);
              return UI.A((object) BQ.A(), KQ.A((object) memoryStream2));
          }
        }
      }
    }

    public Dictionary<string, string> A(string _param1)
    {
      Dictionary<string, string> dictionary = LW.A();
      IEnumerator enumerator;
      try
      {
        enumerator = JW.A((object) KW.A(_param1, EC.A(13127)));
        while (LJ.A((object) enumerator))
        {
          Match match = (Match) PJ.A((object) enumerator);
          FW.A((object) dictionary, GW.A((object) HW.A((object) IW.A((object) match), 1)), GW.A((object) HW.A((object) IW.A((object) match), 2)));
        }
label_4:
        switch (3)
        {
          case 0:
            goto label_4;
          default:
            if (false)
            {
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (AB.A);
              break;
            }
            break;
        }
      }
      finally
      {
        if (enumerator is IDisposable)
        {
label_8:
          switch (5)
          {
            case 0:
              goto label_8;
            default:
              TD.A((object) (enumerator as IDisposable));
              break;
          }
        }
      }
      return dictionary;
    }

    private NameValueCollection A()
    {
      NameValueCollection nameValueCollection1 = NL.A();
      NameValueCollection nameValueCollection2 = nameValueCollection1;
      string str1 = EC.A(13160);
      int num1 = this.A();
      string str2 = OW.A(ref num1);
      HL.A((object) nameValueCollection2, str1, str2);
      HL.A((object) nameValueCollection1, EC.A(13183), this.A());
      HL.A((object) nameValueCollection1, EC.A(13198), KO.A((object) SP.A((object) this.A())));
      NameValueCollection nameValueCollection3 = nameValueCollection1;
      string str3 = EC.A(13207);
      bool flag = this.A();
      string str4 = KO.A((object) NW.A(ref flag));
      HL.A((object) nameValueCollection3, str3, str4);
      HL.A((object) nameValueCollection1, EC.A(13216), KO.A((object) SP.A((object) this.A())));
      if (this.A() != AB.ScanType.File)
      {
label_1:
        switch (2)
        {
          case 0:
            goto label_1;
          default:
            if (false)
            {
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (AB.A);
            }
            HL.A((object) nameValueCollection1, KO.A((object) SP.A((object) this.A())), this.B());
            break;
        }
      }
      if (this.A() == AB.ScanMode.Monitor)
      {
label_6:
        switch (1)
        {
          case 0:
            goto label_6;
          default:
            HL.A((object) nameValueCollection1, EC.A(13229), this.C());
            NameValueCollection nameValueCollection4 = nameValueCollection1;
            string str5 = EC.A(13244);
            byte num2 = this.A();
            string str6 = MW.A(ref num2);
            HL.A((object) nameValueCollection4, str5, str6);
            break;
        }
      }
      return nameValueCollection1;
    }

    private bool B()
    {
      if (this.A() == AB.ScanType.None)
      {
label_1:
        switch (3)
        {
          case 0:
            goto label_1;
          default:
            if (false)
            {
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (AB.B);
            }
            throw MD.A(EC.A(13263));
        }
      }
      else if (this.A() == AB.ScanMode.None)
      {
label_6:
        switch (5)
        {
          case 0:
            goto label_6;
          default:
            throw MD.A(EC.A(13328));
        }
      }
      else if (this.A() == AB.ScanFormat.None)
      {
label_9:
        switch (2)
        {
          case 0:
            goto label_9;
          default:
            throw MD.A(EC.A(13393));
        }
      }
      else if (ZG.A(this.B()))
      {
label_12:
        switch (5)
        {
          case 0:
            goto label_12;
          default:
            throw MD.A(EC.A(13462));
        }
      }
      else if (ZG.A(this.A()))
      {
label_15:
        switch (5)
        {
          case 0:
            goto label_15;
          default:
            throw MD.A(EC.A(13527));
        }
      }
      else
      {
        if (this.A() == AB.ScanMode.Monitor)
        {
label_18:
          switch (1)
          {
            case 0:
              goto label_18;
            default:
              if (this.A() >= (byte) 1)
              {
label_20:
                switch (3)
                {
                  case 0:
                    goto label_20;
                  default:
                    if (this.A() > (byte) 36)
                    {
label_22:
                      switch (1)
                      {
                        case 0:
                          goto label_22;
                      }
                    }
                    else
                      goto label_24;
                    break;
                }
              }
              throw QW.A(EC.A(13590));
          }
        }
label_24:
        if (this.A() == AB.ScanType.File)
        {
label_25:
          switch (4)
          {
            case 0:
              goto label_25;
            default:
              if (!EN.A(this.B()))
              {
label_27:
                switch (2)
                {
                  case 0:
                    goto label_27;
                  default:
                    throw PW.A(EC.A(13663));
                }
              }
              else
                break;
          }
        }
        return false;
      }
    }

    public enum ScanType
    {
      None,
      File,
      URL,
      Domain,
      Exploit,
    }

    public enum ScanMode
    {
      None,
      Scan,
      Monitor,
    }

    public enum ScanFormat
    {
      None,
      JSON,
      TXT,
      PHP,
    }
  }
}
