// Decompiled with JetBrains decompiler
// Type: SimpleChessApp.Game.Turn
// Assembly: جY, Version=2.159.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 4509E19C-3738-48CD-AFB9-B77E11D0C93B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.01-msil\HEUR-Trojan-Ransom.MSIL.Makop.gen-64fa23f22cfa820eb89b80e1db1502fcaebcb66c1731e92f550c12ca940e8075.exe

using System.Runtime.InteropServices;

namespace SimpleChessApp.Game
{
  public class Turn
  {
    public int Id;
    public Notation White;
    public Notation Black;

    public override string ToString()
    {
label_1:
      int num1 = -217730173;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -259386118)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -818352216 ^ -151423684;
            continue;
          case 1:
            str = Turn.\u202D⁪⁮⁭‎‌‎⁬‫⁪‏‍‎‪‌‍‭‭⁭⁬⁫​‏‮‌‭‪‍‎‏‬‌⁭⁯‭‫‬⁮⁪⁬‮(\u003CModule\u003E.\u202A⁫⁫⁪‎⁫‭⁬‍⁭‫​‍‎‍⁯​​‎‍‎‬⁫​‏‫‮⁬⁪‎‪⁭‬⁪‫⁮‪⁭‪‫‮<string>(2434454822U), (object) this.Id, (object) this.White, (object) this.Black);
            num1 = (int) num2 * -889355130 ^ 2104957052;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public Turn()
    {
label_1:
      int num1 = -587675543;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -261805444)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 348309142 ^ -456700851;
            continue;
          case 2:
            goto label_3;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static string \u202D⁪⁮⁭‎‌‎⁬‫⁪‏‍‎‪‌‍‭‭⁭⁬⁫​‏‮‌‭‪‍‎‏‬‌⁭⁯‭‫‬⁮⁪⁬‮(
      [In] string obj0,
      [In] object obj1,
      [In] object obj2,
      [In] object obj3)
    {
      return string.Format(obj0, obj1, obj2, obj3);
    }
  }
}
