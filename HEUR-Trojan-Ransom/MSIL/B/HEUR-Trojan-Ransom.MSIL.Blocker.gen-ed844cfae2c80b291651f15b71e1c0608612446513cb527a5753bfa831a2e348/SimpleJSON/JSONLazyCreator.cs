// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONLazyCreator
// Assembly: DigitShap, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: AB9237C5-7B14-44B1-B37B-A2ADF34FB693
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-ed844cfae2c80b291651f15b71e1c0608612446513cb527a5753bfa831a2e348.exe

namespace SimpleJSON
{
  internal class JSONLazyCreator : JSONNode
  {
    private JSONNode m_Node = (JSONNode) null;
    private string m_Key = (string) null;

    public JSONLazyCreator(JSONNode aNode)
    {
label_1:
      int num1 = -2039886322;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1904551807)) % 4U)
        {
          case 0:
            this.m_Key = (string) null;
            num1 = (int) num2 * -2017081373 ^ 1166038544;
            continue;
          case 1:
            goto label_3;
          case 2:
            goto label_1;
          case 3:
            this.m_Node = aNode;
            num1 = (int) num2 * 1261787448 ^ 1133878189;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public JSONLazyCreator(JSONNode aNode, string aKey)
    {
      this.m_Node = aNode;
      this.m_Key = aKey;
    }

    private void Set(JSONNode aVal)
    {
label_1:
      int num1 = 235120967;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1232709826)) % 10U)
        {
          case 0:
            goto label_1;
          case 1:
            this.m_Node.Add(aVal);
            num1 = (int) num2 * -1586267610 ^ -593063655;
            continue;
          case 2:
            num1 = 1561852561;
            continue;
          case 3:
            this.m_Node = (JSONNode) null;
            num1 = 1531155474;
            continue;
          case 4:
            goto label_3;
          case 5:
            this.m_Node.Add(this.m_Key, aVal);
            num1 = (int) num2 * -1625710860 ^ 1086401435;
            continue;
          case 6:
            num1 = (int) num2 * 1488378046 ^ 121815423;
            continue;
          case 7:
            int num3 = this.m_Key != null ? 1462289971 : (num3 = 2129446339);
            num1 = num3 ^ (int) num2 * 1296460321;
            continue;
          case 8:
            num1 = (int) num2 * 1942590847 ^ -1630964237;
            continue;
          case 9:
            num1 = (int) num2 * -1026546876 ^ -671829166;
            continue;
          default:
            goto label_12;
        }
      }
label_3:
      return;
label_12:;
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 1646509890;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1686732871)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * 1869668352 ^ -431957817;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
        JSONArray aVal = new JSONArray();
label_1:
        int num1 = -2127337107;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1936752833)) % 4U)
          {
            case 1:
              num1 = (int) num2 * -611018585 ^ -1789327588;
              continue;
            case 2:
              aVal.Add(value);
              num1 = (int) num2 * 326013948 ^ -1825765166;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        this.Set((JSONNode) aVal);
      }
    }

    public override JSONNode this[string aKey]
    {
      get => (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
      set
      {
        JSONClass aVal = new JSONClass();
        aVal.Add(aKey, value);
        this.Set((JSONNode) aVal);
      }
    }

    public override void Add(JSONNode aItem)
    {
label_1:
      int num1 = 173309153;
      JSONArray aVal;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 287480955)) % 4U)
        {
          case 1:
            num1 = (int) num2 * 1267046977 ^ 653170398;
            continue;
          case 2:
            aVal = new JSONArray();
            aVal.Add(aItem);
            num1 = (int) num2 * -75411976 ^ -20732614;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      this.Set((JSONNode) aVal);
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = -1866138825;
      JSONClass aVal;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -503859558)) % 6U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 2059074749 ^ -1161149137;
            continue;
          case 2:
            goto label_3;
          case 3:
            aVal = new JSONClass();
            num1 = (int) num2 * 1897869204 ^ 2078421145;
            continue;
          case 4:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * 1884040847 ^ -399365363;
            continue;
          case 5:
            aVal.Add(aKey, aItem);
            num1 = (int) num2 * 388115726 ^ 304832788;
            continue;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    public static bool operator ==(JSONLazyCreator a, object b)
    {
      if (b != null)
        goto label_4;
label_1:
      int num1 = -1801806955;
label_2:
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1933329530)) % 5U)
        {
          case 0:
            goto label_1;
          case 2:
            goto label_4;
          case 3:
            num1 = (int) num2 * 795532123 ^ 1911376151;
            continue;
          case 4:
            flag = true;
            num1 = (int) num2 * -726674103 ^ 890430696;
            continue;
          default:
            goto label_6;
        }
      }
label_6:
      return flag;
label_4:
      flag = (object) a == b;
      num1 = -72066864;
      goto label_2;
    }

    public static bool operator !=(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = 1776864722;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1331916776)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            flag = !(a == b);
            num1 = (int) num2 * 1464023840 ^ 918401036;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = 968259287;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1229851694)) % 7U)
        {
          case 0:
            num1 = (int) num2 * 1617660 ^ -1282366426;
            continue;
          case 1:
            flag1 = obj == null;
            num1 = (int) num2 * 1676908643 ^ 1558154493;
            continue;
          case 2:
            int num3 = flag1 ? -1873766700 : (num3 = -326476259);
            num1 = num3 ^ (int) num2 * -1035564809;
            continue;
          case 3:
            flag2 = true;
            num1 = (int) num2 * 1617673884 ^ -1498358707;
            continue;
          case 4:
            goto label_1;
          case 5:
            flag2 = (object) this == obj;
            num1 = 327285426;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      return flag2;
    }

    public override int GetHashCode()
    {
label_1:
      int num1 = -1981873019;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -836725533)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            hashCode = base.GetHashCode();
            num1 = (int) num2 * 1269624518 ^ -610180492;
            continue;
          case 3:
            num1 = (int) num2 * 812637981 ^ -154882699;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return hashCode;
    }

    public override string ToString()
    {
label_1:
      int num1 = -626195958;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1418100313)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            str = "";
            num1 = (int) num2 * -1202553915 ^ -1697831416;
            continue;
          case 2:
            num1 = (int) num2 * 550321894 ^ 1618322396;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 1315874473;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 510878234)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1516199408 ^ 1538100720;
            continue;
          case 3:
            str = "";
            num1 = (int) num2 * -1569047684 ^ -874592785;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public override int AsInt
    {
      get
      {
        this.Set((JSONNode) new JSONData(0));
label_1:
        int num1 = -1769197508;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1940046167)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              asInt = 0;
              num1 = (int) num2 * 853271160 ^ 663328015;
              continue;
            case 2:
              num1 = (int) num2 * 2105695074 ^ 1904126658;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asInt;
      }
      set => this.Set((JSONNode) new JSONData(value));
    }

    public override float AsFloat
    {
      get
      {
        JSONData aVal = new JSONData(0.0f);
label_1:
        int num1 = 1145117821;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 413808662)) % 6U)
          {
            case 0:
              num1 = (int) num2 * 803305003 ^ 1419013333;
              continue;
            case 2:
              num1 = (int) num2 * -288940384 ^ -1302823193;
              continue;
            case 3:
              asFloat = 0.0f;
              num1 = (int) num2 * -1258743635 ^ -304874353;
              continue;
            case 4:
              goto label_1;
            case 5:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -774838944 ^ 1976383630;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asFloat;
      }
      set
      {
        this.Set((JSONNode) new JSONData(value));
label_1:
        int num1 = 1884348622;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1961833539)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              num1 = (int) num2 * -1051341827 ^ -586363125;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override double AsDouble
    {
      get
      {
label_1:
        int num1 = -726056981;
        double asDouble;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1345427038)) % 6U)
          {
            case 0:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 261570966 ^ -1024387590;
              continue;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * -2121743795 ^ 1202851656;
              continue;
            case 4:
              asDouble = 0.0;
              num1 = (int) num2 * -1333175692 ^ 1767989311;
              continue;
            case 5:
              aVal = new JSONData(0.0);
              num1 = (int) num2 * -1868293535 ^ -1573517273;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asDouble;
      }
      set
      {
        JSONData aVal = new JSONData(value);
label_1:
        int num1 = -577935055;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -490862164)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1142750105 ^ 1739667204;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override bool AsBool
    {
      get
      {
label_1:
        int num1 = -1004166495;
        JSONData aVal;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1251768057)) % 6U)
          {
            case 0:
              asBool = false;
              num1 = (int) num2 * -1552943642 ^ 1727073466;
              continue;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -2124195555 ^ -1738377080;
              continue;
            case 2:
              aVal = new JSONData(false);
              num1 = (int) num2 * -318805479 ^ 1106417652;
              continue;
            case 4:
              goto label_1;
            case 5:
              num1 = (int) num2 * -494437872 ^ -2095317648;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asBool;
      }
      set
      {
label_1:
        int num1 = 764655386;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1552263339)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -505287462 ^ -325250024;
              continue;
            case 2:
              goto label_3;
            case 3:
              aVal = new JSONData(value);
              num1 = (int) num2 * -1719842928 ^ 1395615976;
              continue;
            case 4:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 673845303 ^ 850802527;
              continue;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
    }

    public override JSONArray AsArray
    {
      get
      {
        JSONArray aVal = new JSONArray();
label_1:
        int num1 = -1970551496;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2008712986)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Set((JSONNode) aVal);
              asArray = aVal;
              num1 = (int) num2 * 189872274 ^ -313992526;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asArray;
      }
    }

    public override JSONClass AsObject
    {
      get
      {
        JSONClass aVal = new JSONClass();
        this.Set((JSONNode) aVal);
label_1:
        int num1 = -1138231640;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1076118140)) % 5U)
          {
            case 0:
              num1 = (int) num2 * -1084488072 ^ -681028300;
              continue;
            case 2:
              asObject = aVal;
              num1 = (int) num2 * 980582292 ^ 1010959783;
              continue;
            case 3:
              goto label_1;
            case 4:
              num1 = (int) num2 * 249403121 ^ 2106916688;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asObject;
      }
    }
  }
}
