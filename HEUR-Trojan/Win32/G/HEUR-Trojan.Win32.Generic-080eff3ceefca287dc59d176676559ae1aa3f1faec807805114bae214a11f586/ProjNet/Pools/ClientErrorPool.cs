// Decompiled with JetBrains decompiler
// Type: ProjNet.Pools.ClientErrorPool
// Assembly: TYPELIBA, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 97BB50BA-9882-4DFE-999C-7A4E4B448F1C
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-080eff3ceefca287dc59d176676559ae1aa3f1faec807805114bae214a11f586.exe

using System;
using System.ComponentModel;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Windows.Forms;
using TYPELIBA.Identifiers;
using TYPELIBA.Wrappers;

namespace ProjNet.Pools
{
  public class ClientErrorPool : Form
  {
    private IContainer _CollectionConsumer;
    private DataGridView m_StubConsumer;
    private GroupBox printerConsumer;
    private RadioButton m_AdvisorConsumer;
    private RadioButton _WorkerConsumer;
    private Button requestConsumer;
    private Label _FieldConsumer;
    private TextBox paramConsumer;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public ClientErrorPool()
    {
      int num1 = 3;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 3:
              ManagerParamsID.NewExpression();
              if (ClientErrorPool.FillCreator())
              {
                num2 = 4;
                continue;
              }
              goto case 1;
            case 1:
            case 4:
              this._CollectionConsumer = (IContainer) null;
              goto case 2;
            case 2:
              // ISSUE: explicit constructor call
              base.\u002Ector();
              this.StopRepository();
              if (!ClientErrorPool.CalculateCreator())
              {
                num2 = 5;
                continue;
              }
              goto label_7;
            case 5:
              goto label_9;
            default:
              goto label_5;
          }
        }
label_5:
        num1 = 2;
      }
label_9:
      return;
label_7:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void MapRepository(object param, EventArgs vis)
    {
      int num1 = 1;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 1:
              this._FieldConsumer.Visible = true;
              num2 = 4;
              continue;
            case 2:
            case 3:
              this.requestConsumer.Visible = true;
              num2 = 5;
              continue;
            case 4:
              this.paramConsumer.Visible = true;
              goto case 2;
            case 5:
              goto label_7;
            default:
              goto label_4;
          }
        }
label_4:
        num1 = 3;
      }
label_7:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void ForgotRepository(object first, EventArgs col)
    {
      int num = 0;
      while (true)
      {
        switch (num)
        {
          case 0:
            this._FieldConsumer.Visible = false;
            num = 4;
            continue;
          case 1:
          case 4:
            this.paramConsumer.Visible = false;
            this.requestConsumer.Visible = false;
            goto case 2;
          case 2:
          case 3:
            this.m_StubConsumer.DataSource = (object) MethodProcess.CompareRepository();
            num = 5;
            continue;
          case 5:
            goto label_6;
          default:
            num = 3;
            continue;
        }
      }
label_6:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void PrepareRepository(object def, EventArgs connection)
    {
      try
      {
        this.m_StubConsumer.DataSource = (object) MethodProcess.IncludeRepository(this.paramConsumer.Text);
      }
      catch (Exception ex)
      {
        int num = (int) MessageBox.Show("Author not found!");
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    protected override void Dispose(bool isident)
    {
      int num1 = 3;
      if (true)
        goto label_7;
label_1:
      this._CollectionConsumer.Dispose();
label_2:
      base.Dispose(isident);
      num1 = 5;
label_7:
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 3:
            if (isident)
            {
              if (true)
              {
                num1 = 2;
                continue;
              }
              goto label_11;
            }
            else
              goto label_4;
          case 1:
          case 2:
            goto label_3;
          case 4:
            goto label_1;
          case 5:
            goto label_6;
          default:
            num1 = 4;
            continue;
        }
      }
label_3:
      int num2 = this._CollectionConsumer != null ? 1 : 0;
      goto label_5;
label_4:
      num2 = 0;
label_5:
      if (num2 == 0)
        goto label_2;
      else
        goto label_1;
label_6:
      return;
label_11:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void StopRepository()
    {
      int num1 = 19;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
              goto label_7;
            case 1:
              goto label_5;
            case 2:
              goto label_22;
            case 3:
              this.Controls.Add((Control) this._FieldConsumer);
              this.Controls.Add((Control) this.requestConsumer);
              this.Controls.Add((Control) this.printerConsumer);
              this.Controls.Add((Control) this.m_StubConsumer);
              this.Name = "QueryTitle";
              this.Text = "Query Title";
              ((ISupportInitialize) this.m_StubConsumer).EndInit();
              this.printerConsumer.ResumeLayout(false);
              this.printerConsumer.PerformLayout();
              num2 = 4;
              continue;
            case 4:
            case 17:
              goto label_21;
            case 5:
            case 11:
              goto label_17;
            case 6:
              this.SuspendLayout();
              this.m_StubConsumer.AllowUserToAddRows = false;
              this.m_StubConsumer.AllowUserToDeleteRows = false;
              num2 = 11;
              continue;
            case 7:
              this.paramConsumer.Name = "TitleTextBox";
              if (true)
              {
                num2 = 15;
                continue;
              }
              goto case 19;
            case 8:
              goto label_18;
            case 9:
              goto label_15;
            case 10:
              goto label_8;
            case 12:
              goto label_20;
            case 13:
              this.m_AdvisorConsumer.Size = new Size(45, 17);
              this.m_AdvisorConsumer.TabIndex = 1;
              this.m_AdvisorConsumer.TabStop = true;
              if (true)
              {
                num2 = 18;
                continue;
              }
              goto label_7;
            case 14:
              goto label_2;
            case 15:
              this.paramConsumer.Size = new Size(100, 20);
              this.paramConsumer.TabIndex = 4;
              this.AutoScaleDimensions = new SizeF(6f, 13f);
              this.AutoScaleMode = AutoScaleMode.Font;
              this.ClientSize = new Size(442, 347);
              this.Controls.Add((Control) this.paramConsumer);
              num2 = 3;
              continue;
            case 16:
              this._WorkerConsumer.Size = new Size(69, 17);
              num2 = 9;
              continue;
            case 18:
              this.m_AdvisorConsumer.Text = "Title";
              goto case 20;
            case 19:
              this.m_StubConsumer = new DataGridView();
              if (true)
              {
                num2 = 8;
                continue;
              }
              goto case 18;
            case 20:
              this.m_AdvisorConsumer.UseVisualStyleBackColor = true;
              this.m_AdvisorConsumer.CheckedChanged += new EventHandler(this.MapRepository);
              if (true)
              {
                num2 = 1;
                continue;
              }
              goto label_2;
            case 21:
              goto label_23;
            default:
              num2 = 20;
              continue;
          }
        }
label_2:
        this.printerConsumer.SuspendLayout();
        num1 = 6;
        continue;
label_5:
        this._WorkerConsumer.AutoSize = true;
        this._WorkerConsumer.Location = new Point(57, 19);
        this._WorkerConsumer.Name = "CopyrightRadioButton";
        num1 = 16;
        continue;
label_7:
        this.PerformLayout();
        num1 = 21;
        continue;
label_8:
        this.requestConsumer = new Button();
        this._FieldConsumer = new Label();
        this.paramConsumer = new TextBox();
        ((ISupportInitialize) this.m_StubConsumer).BeginInit();
        num1 = 14;
        continue;
label_15:
        this._WorkerConsumer.TabIndex = 0;
        this._WorkerConsumer.TabStop = true;
        this._WorkerConsumer.Text = "Copyright";
        this._WorkerConsumer.UseVisualStyleBackColor = true;
        this._WorkerConsumer.CheckedChanged += new EventHandler(this.ForgotRepository);
        this.requestConsumer.Location = new Point(355, 95);
        this.requestConsumer.Name = "SearchButton";
        this.requestConsumer.Size = new Size(75, 23);
        this.requestConsumer.TabIndex = 2;
        this.requestConsumer.Text = "Search";
        this.requestConsumer.UseVisualStyleBackColor = true;
        this.requestConsumer.Click += new EventHandler(this.PrepareRepository);
        this._FieldConsumer.AutoSize = true;
        this._FieldConsumer.Location = new Point(9, 82);
        this._FieldConsumer.Name = "ParameterLabel";
        this._FieldConsumer.Size = new Size(30, 13);
        this._FieldConsumer.TabIndex = 3;
        this._FieldConsumer.Text = "Title:";
        this.paramConsumer.Location = new Point(12, 98);
        num1 = 7;
        continue;
label_17:
        this.m_StubConsumer.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize;
        this.m_StubConsumer.Location = new Point(12, 146);
        this.m_StubConsumer.Name = "dataGridView";
        this.m_StubConsumer.ReadOnly = true;
        this.m_StubConsumer.Size = new Size(418, 189);
        this.m_StubConsumer.TabIndex = 0;
        this.printerConsumer.Controls.Add((Control) this.m_AdvisorConsumer);
        this.printerConsumer.Controls.Add((Control) this._WorkerConsumer);
        this.printerConsumer.Location = new Point(12, 12);
        this.printerConsumer.Name = "groupBox1";
        this.printerConsumer.Size = new Size(418, 47);
        this.printerConsumer.TabIndex = 1;
        this.printerConsumer.TabStop = false;
        this.printerConsumer.Text = "Search Type";
        num1 = 12;
        continue;
label_18:
        this.printerConsumer = new GroupBox();
        this.m_AdvisorConsumer = new RadioButton();
        this._WorkerConsumer = new RadioButton();
        num1 = 10;
        continue;
label_20:
        this.m_AdvisorConsumer.AutoSize = true;
        this.m_AdvisorConsumer.Location = new Point(6, 19);
        num1 = 2;
        continue;
label_21:
        this.ResumeLayout(false);
        num1 = 0;
        continue;
label_22:
        this.m_AdvisorConsumer.Name = "TitleRadioButton";
        num1 = 13;
      }
label_23:;
    }

    internal static bool FillCreator() => true;

    internal static bool CalculateCreator() => false;
  }
}
