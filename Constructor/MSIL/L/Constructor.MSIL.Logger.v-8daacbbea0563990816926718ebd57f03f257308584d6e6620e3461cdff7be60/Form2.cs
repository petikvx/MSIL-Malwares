// Decompiled with JetBrains decompiler
// Type: iKeylogg_v_2._0.Form2
// Assembly: iKeylogg v2, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 78503FFA-555C-4BC6-896F-5622120BF4EC
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00007-msil\Constructor.MSIL.Logger.v-8daacbbea0563990816926718ebd57f03f257308584d6e6620e3461cdff7be60.exe

using fLaSh.Dissembler;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace iKeylogg_v_2._0
{
  [DesignerGenerated]
  public class Form2 : Form
  {
    private static List<WeakReference> __ENCList = new List<WeakReference>();
    private IContainer components;
    [AccessedThroughProperty("btnExit")]
    private Button _btnExit;
    [AccessedThroughProperty("btnBuild")]
    private Button _btnBuild;
    [AccessedThroughProperty("GroupBox1")]
    private GroupBox _GroupBox1;
    [AccessedThroughProperty("txtFileName")]
    private TextBox _txtFileName;
    [AccessedThroughProperty("btnOpen")]
    private Button _btnOpen;
    [AccessedThroughProperty("grbAssembly")]
    private GroupBox _grbAssembly;
    [AccessedThroughProperty("btnIcon")]
    private Button _btnIcon;
    [AccessedThroughProperty("numVersion_4")]
    private NumericUpDown _numVersion_4;
    [AccessedThroughProperty("txtADescription")]
    private TextBox _txtADescription;
    [AccessedThroughProperty("txtIconPath")]
    private TextBox _txtIconPath;
    [AccessedThroughProperty("numVersion_3")]
    private NumericUpDown _numVersion_3;
    [AccessedThroughProperty("Label16")]
    private Label _Label16;
    [AccessedThroughProperty("Label20")]
    private Label _Label20;
    [AccessedThroughProperty("picIcon")]
    private PictureBox _picIcon;
    [AccessedThroughProperty("numVersion_2")]
    private NumericUpDown _numVersion_2;
    [AccessedThroughProperty("Label21")]
    private Label _Label21;
    [AccessedThroughProperty("txtACompany")]
    private TextBox _txtACompany;
    [AccessedThroughProperty("numFileVersion_1")]
    private NumericUpDown _numFileVersion_1;
    [AccessedThroughProperty("numVersion_1")]
    private NumericUpDown _numVersion_1;
    [AccessedThroughProperty("Label12")]
    private Label _Label12;
    [AccessedThroughProperty("Label19")]
    private Label _Label19;
    [AccessedThroughProperty("numFileVersion_2")]
    private NumericUpDown _numFileVersion_2;
    [AccessedThroughProperty("numFileVersion_4")]
    private NumericUpDown _numFileVersion_4;
    [AccessedThroughProperty("Label17")]
    private Label _Label17;
    [AccessedThroughProperty("txtACopyright")]
    private TextBox _txtACopyright;
    [AccessedThroughProperty("numFileVersion_3")]
    private NumericUpDown _numFileVersion_3;

    [DebuggerNonUserCode]
    static Form2()
    {
    }

    [DebuggerNonUserCode]
    public Form2()
    {
      this.Load += new EventHandler(this.Form1_Load);
      lock (Form2.__ENCList)
        Form2.__ENCList.Add(new WeakReference((object) this));
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (Form2));
      this.btnExit = new Button();
      this.btnBuild = new Button();
      this.GroupBox1 = new GroupBox();
      this.txtFileName = new TextBox();
      this.btnOpen = new Button();
      this.grbAssembly = new GroupBox();
      this.btnIcon = new Button();
      this.numVersion_4 = new NumericUpDown();
      this.txtADescription = new TextBox();
      this.txtIconPath = new TextBox();
      this.numVersion_3 = new NumericUpDown();
      this.Label16 = new Label();
      this.Label20 = new Label();
      this.picIcon = new PictureBox();
      this.numVersion_2 = new NumericUpDown();
      this.Label21 = new Label();
      this.txtACompany = new TextBox();
      this.numFileVersion_1 = new NumericUpDown();
      this.numVersion_1 = new NumericUpDown();
      this.Label12 = new Label();
      this.Label19 = new Label();
      this.numFileVersion_2 = new NumericUpDown();
      this.numFileVersion_4 = new NumericUpDown();
      this.Label17 = new Label();
      this.txtACopyright = new TextBox();
      this.numFileVersion_3 = new NumericUpDown();
      this.GroupBox1.SuspendLayout();
      this.grbAssembly.SuspendLayout();
      this.numVersion_4.BeginInit();
      this.numVersion_3.BeginInit();
      ((ISupportInitialize) this.picIcon).BeginInit();
      this.numVersion_2.BeginInit();
      this.numFileVersion_1.BeginInit();
      this.numVersion_1.BeginInit();
      this.numFileVersion_2.BeginInit();
      this.numFileVersion_4.BeginInit();
      this.numFileVersion_3.BeginInit();
      this.SuspendLayout();
      Button btnExit1 = this.btnExit;
      Point point1 = new Point(12, 244);
      Point point2 = point1;
      btnExit1.Location = point2;
      this.btnExit.Name = "btnExit";
      Button btnExit2 = this.btnExit;
      Size size1 = new Size(92, 25);
      Size size2 = size1;
      btnExit2.Size = size2;
      this.btnExit.TabIndex = 7;
      this.btnExit.Text = "Close Me";
      this.btnExit.UseVisualStyleBackColor = true;
      Button btnBuild1 = this.btnBuild;
      point1 = new Point(110, 244);
      Point point3 = point1;
      btnBuild1.Location = point3;
      this.btnBuild.Name = "btnBuild";
      Button btnBuild2 = this.btnBuild;
      size1 = new Size(92, 25);
      Size size3 = size1;
      btnBuild2.Size = size3;
      this.btnBuild.TabIndex = 5;
      this.btnBuild.Text = "Save Properties";
      this.btnBuild.UseVisualStyleBackColor = true;
      this.GroupBox1.BackColor = Color.Transparent;
      this.GroupBox1.Controls.Add((Control) this.txtFileName);
      this.GroupBox1.Controls.Add((Control) this.btnOpen);
      this.GroupBox1.ForeColor = Color.White;
      GroupBox groupBox1_1 = this.GroupBox1;
      point1 = new Point(12, 12);
      Point point4 = point1;
      groupBox1_1.Location = point4;
      this.GroupBox1.Name = "GroupBox1";
      GroupBox groupBox1_2 = this.GroupBox1;
      size1 = new Size(371, 37);
      Size size4 = size1;
      groupBox1_2.Size = size4;
      this.GroupBox1.TabIndex = 4;
      this.GroupBox1.TabStop = false;
      this.GroupBox1.Text = "EXE Path";
      this.txtFileName.BackColor = SystemColors.Window;
      this.txtFileName.ForeColor = SystemColors.ControlText;
      TextBox txtFileName1 = this.txtFileName;
      point1 = new Point(6, 13);
      Point point5 = point1;
      txtFileName1.Location = point5;
      this.txtFileName.MaxLength = 100;
      this.txtFileName.Name = "txtFileName";
      TextBox txtFileName2 = this.txtFileName;
      size1 = new Size(285, 20);
      Size size5 = size1;
      txtFileName2.Size = size5;
      this.txtFileName.TabIndex = 0;
      this.btnOpen.ForeColor = Color.Red;
      Button btnOpen1 = this.btnOpen;
      point1 = new Point(297, 12);
      Point point6 = point1;
      btnOpen1.Location = point6;
      this.btnOpen.Name = "btnOpen";
      Button btnOpen2 = this.btnOpen;
      size1 = new Size(63, 20);
      Size size6 = size1;
      btnOpen2.Size = size6;
      this.btnOpen.TabIndex = 1;
      this.btnOpen.Text = "&Open..";
      this.btnOpen.UseVisualStyleBackColor = true;
      this.grbAssembly.BackColor = Color.Transparent;
      this.grbAssembly.Controls.Add((Control) this.btnIcon);
      this.grbAssembly.Controls.Add((Control) this.numVersion_4);
      this.grbAssembly.Controls.Add((Control) this.txtADescription);
      this.grbAssembly.Controls.Add((Control) this.txtIconPath);
      this.grbAssembly.Controls.Add((Control) this.numVersion_3);
      this.grbAssembly.Controls.Add((Control) this.Label16);
      this.grbAssembly.Controls.Add((Control) this.Label20);
      this.grbAssembly.Controls.Add((Control) this.picIcon);
      this.grbAssembly.Controls.Add((Control) this.numVersion_2);
      this.grbAssembly.Controls.Add((Control) this.Label21);
      this.grbAssembly.Controls.Add((Control) this.txtACompany);
      this.grbAssembly.Controls.Add((Control) this.numFileVersion_1);
      this.grbAssembly.Controls.Add((Control) this.numVersion_1);
      this.grbAssembly.Controls.Add((Control) this.Label12);
      this.grbAssembly.Controls.Add((Control) this.Label19);
      this.grbAssembly.Controls.Add((Control) this.numFileVersion_2);
      this.grbAssembly.Controls.Add((Control) this.numFileVersion_4);
      this.grbAssembly.Controls.Add((Control) this.Label17);
      this.grbAssembly.Controls.Add((Control) this.txtACopyright);
      this.grbAssembly.Controls.Add((Control) this.numFileVersion_3);
      this.grbAssembly.Enabled = false;
      this.grbAssembly.ForeColor = Color.White;
      GroupBox grbAssembly1 = this.grbAssembly;
      point1 = new Point(12, 55);
      Point point7 = point1;
      grbAssembly1.Location = point7;
      this.grbAssembly.Name = "grbAssembly";
      GroupBox grbAssembly2 = this.grbAssembly;
      size1 = new Size(371, 183);
      Size size7 = size1;
      grbAssembly2.Size = size7;
      this.grbAssembly.TabIndex = 6;
      this.grbAssembly.TabStop = false;
      this.grbAssembly.Text = "Trojan Assembly";
      this.btnIcon.ForeColor = Color.Red;
      Button btnIcon1 = this.btnIcon;
      point1 = new Point(297, 152);
      Point point8 = point1;
      btnIcon1.Location = point8;
      this.btnIcon.Name = "btnIcon";
      Button btnIcon2 = this.btnIcon;
      size1 = new Size(63, 20);
      Size size8 = size1;
      btnIcon2.Size = size8;
      this.btnIcon.TabIndex = 18;
      this.btnIcon.Text = "&Open..";
      this.btnIcon.UseVisualStyleBackColor = true;
      this.numVersion_4.BackColor = SystemColors.Window;
      this.numVersion_4.ForeColor = SystemColors.ControlText;
      NumericUpDown numVersion4_1 = this.numVersion_4;
      point1 = new Point(228, 99);
      Point point9 = point1;
      numVersion4_1.Location = point9;
      NumericUpDown numVersion4_2 = this.numVersion_4;
      Decimal num1 = new Decimal(new int[4]
      {
        999,
        0,
        0,
        0
      });
      Decimal num2 = num1;
      numVersion4_2.Maximum = num2;
      this.numVersion_4.Name = "numVersion_4";
      NumericUpDown numVersion4_3 = this.numVersion_4;
      size1 = new Size(35, 20);
      Size size9 = size1;
      numVersion4_3.Size = size9;
      this.numVersion_4.TabIndex = 10;
      this.txtADescription.BackColor = SystemColors.Window;
      this.txtADescription.ForeColor = SystemColors.ControlText;
      TextBox txtAdescription1 = this.txtADescription;
      point1 = new Point(105, 20);
      Point point10 = point1;
      txtAdescription1.Location = point10;
      this.txtADescription.MaxLength = 100;
      this.txtADescription.Name = "txtADescription";
      TextBox txtAdescription2 = this.txtADescription;
      size1 = new Size(256, 20);
      Size size10 = size1;
      txtAdescription2.Size = size10;
      this.txtADescription.TabIndex = 1;
      this.txtIconPath.BackColor = SystemColors.Window;
      this.txtIconPath.ForeColor = SystemColors.ControlText;
      TextBox txtIconPath1 = this.txtIconPath;
      point1 = new Point(105, 152);
      Point point11 = point1;
      txtIconPath1.Location = point11;
      this.txtIconPath.MaxLength = 100;
      this.txtIconPath.Name = "txtIconPath";
      TextBox txtIconPath2 = this.txtIconPath;
      size1 = new Size(186, 20);
      Size size11 = size1;
      txtIconPath2.Size = size11;
      this.txtIconPath.TabIndex = 17;
      this.numVersion_3.BackColor = SystemColors.Window;
      this.numVersion_3.ForeColor = SystemColors.ControlText;
      NumericUpDown numVersion3_1 = this.numVersion_3;
      point1 = new Point(187, 99);
      Point point12 = point1;
      numVersion3_1.Location = point12;
      NumericUpDown numVersion3_2 = this.numVersion_3;
      num1 = new Decimal(new int[4]{ 999, 0, 0, 0 });
      Decimal num3 = num1;
      numVersion3_2.Maximum = num3;
      this.numVersion_3.Name = "numVersion_3";
      NumericUpDown numVersion3_3 = this.numVersion_3;
      size1 = new Size(35, 20);
      Size size12 = size1;
      numVersion3_3.Size = size12;
      this.numVersion_3.TabIndex = 9;
      this.Label16.ForeColor = Color.White;
      Label label16_1 = this.Label16;
      point1 = new Point(16, 152);
      Point point13 = point1;
      label16_1.Location = point13;
      this.Label16.Name = "Label16";
      Label label16_2 = this.Label16;
      size1 = new Size(83, 17);
      Size size13 = size1;
      label16_2.Size = size13;
      this.Label16.TabIndex = 16;
      this.Label16.Text = "Icon Path:";
      this.Label16.TextAlign = ContentAlignment.MiddleRight;
      this.Label20.ForeColor = Color.White;
      Label label20_1 = this.Label20;
      point1 = new Point(16, 21);
      Point point14 = point1;
      label20_1.Location = point14;
      this.Label20.Name = "Label20";
      Label label20_2 = this.Label20;
      size1 = new Size(83, 17);
      Size size14 = size1;
      label20_2.Size = size14;
      this.Label20.TabIndex = 0;
      this.Label20.Text = "Description:";
      this.Label20.TextAlign = ContentAlignment.MiddleRight;
      PictureBox picIcon1 = this.picIcon;
      point1 = new Point(330, 115);
      Point point15 = point1;
      picIcon1.Location = point15;
      this.picIcon.Name = "picIcon";
      PictureBox picIcon2 = this.picIcon;
      size1 = new Size(31, 31);
      Size size15 = size1;
      picIcon2.Size = size15;
      this.picIcon.SizeMode = PictureBoxSizeMode.Zoom;
      this.picIcon.TabIndex = 38;
      this.picIcon.TabStop = false;
      this.numVersion_2.BackColor = SystemColors.Window;
      this.numVersion_2.ForeColor = SystemColors.ControlText;
      NumericUpDown numVersion2_1 = this.numVersion_2;
      point1 = new Point(146, 99);
      Point point16 = point1;
      numVersion2_1.Location = point16;
      NumericUpDown numVersion2_2 = this.numVersion_2;
      num1 = new Decimal(new int[4]{ 999, 0, 0, 0 });
      Decimal num4 = num1;
      numVersion2_2.Maximum = num4;
      this.numVersion_2.Name = "numVersion_2";
      NumericUpDown numVersion2_3 = this.numVersion_2;
      size1 = new Size(35, 20);
      Size size16 = size1;
      numVersion2_3.Size = size16;
      this.numVersion_2.TabIndex = 8;
      this.Label21.ForeColor = Color.White;
      Label label21_1 = this.Label21;
      point1 = new Point(16, 126);
      Point point17 = point1;
      label21_1.Location = point17;
      this.Label21.Name = "Label21";
      Label label21_2 = this.Label21;
      size1 = new Size(83, 17);
      Size size17 = size1;
      label21_2.Size = size17;
      this.Label21.TabIndex = 11;
      this.Label21.Text = "File Version:";
      this.Label21.TextAlign = ContentAlignment.MiddleRight;
      this.txtACompany.BackColor = SystemColors.Window;
      this.txtACompany.ForeColor = SystemColors.ControlText;
      TextBox txtAcompany1 = this.txtACompany;
      point1 = new Point(105, 46);
      Point point18 = point1;
      txtAcompany1.Location = point18;
      this.txtACompany.MaxLength = 100;
      this.txtACompany.Name = "txtACompany";
      TextBox txtAcompany2 = this.txtACompany;
      size1 = new Size(256, 20);
      Size size18 = size1;
      txtAcompany2.Size = size18;
      this.txtACompany.TabIndex = 3;
      this.numFileVersion_1.BackColor = SystemColors.Window;
      this.numFileVersion_1.ForeColor = SystemColors.ControlText;
      NumericUpDown numFileVersion1_1 = this.numFileVersion_1;
      point1 = new Point(105, 125);
      Point point19 = point1;
      numFileVersion1_1.Location = point19;
      NumericUpDown numFileVersion1_2 = this.numFileVersion_1;
      num1 = new Decimal(new int[4]{ 999, 0, 0, 0 });
      Decimal num5 = num1;
      numFileVersion1_2.Maximum = num5;
      NumericUpDown numFileVersion1_3 = this.numFileVersion_1;
      num1 = new Decimal(new int[4]{ 1, 0, 0, 0 });
      Decimal num6 = num1;
      numFileVersion1_3.Minimum = num6;
      this.numFileVersion_1.Name = "numFileVersion_1";
      NumericUpDown numFileVersion1_4 = this.numFileVersion_1;
      size1 = new Size(35, 20);
      Size size19 = size1;
      numFileVersion1_4.Size = size19;
      this.numFileVersion_1.TabIndex = 12;
      NumericUpDown numFileVersion1_5 = this.numFileVersion_1;
      num1 = new Decimal(new int[4]{ 1, 0, 0, 0 });
      Decimal num7 = num1;
      numFileVersion1_5.Value = num7;
      this.numVersion_1.BackColor = SystemColors.Window;
      this.numVersion_1.ForeColor = SystemColors.ControlText;
      NumericUpDown numVersion1_1 = this.numVersion_1;
      point1 = new Point(105, 99);
      Point point20 = point1;
      numVersion1_1.Location = point20;
      NumericUpDown numVersion1_2 = this.numVersion_1;
      num1 = new Decimal(new int[4]{ 999, 0, 0, 0 });
      Decimal num8 = num1;
      numVersion1_2.Maximum = num8;
      NumericUpDown numVersion1_3 = this.numVersion_1;
      num1 = new Decimal(new int[4]{ 1, 0, 0, 0 });
      Decimal num9 = num1;
      numVersion1_3.Minimum = num9;
      this.numVersion_1.Name = "numVersion_1";
      NumericUpDown numVersion1_4 = this.numVersion_1;
      size1 = new Size(35, 20);
      Size size20 = size1;
      numVersion1_4.Size = size20;
      this.numVersion_1.TabIndex = 7;
      NumericUpDown numVersion1_5 = this.numVersion_1;
      num1 = new Decimal(new int[4]{ 1, 0, 0, 0 });
      Decimal num10 = num1;
      numVersion1_5.Value = num10;
      this.Label12.ForeColor = Color.White;
      Label label12_1 = this.Label12;
      point1 = new Point(16, 99);
      Point point21 = point1;
      label12_1.Location = point21;
      this.Label12.Name = "Label12";
      Label label12_2 = this.Label12;
      size1 = new Size(83, 17);
      Size size21 = size1;
      label12_2.Size = size21;
      this.Label12.TabIndex = 6;
      this.Label12.Text = "Version:";
      this.Label12.TextAlign = ContentAlignment.MiddleRight;
      this.Label19.ForeColor = Color.White;
      Label label19_1 = this.Label19;
      point1 = new Point(16, 47);
      Point point22 = point1;
      label19_1.Location = point22;
      this.Label19.Name = "Label19";
      Label label19_2 = this.Label19;
      size1 = new Size(83, 17);
      Size size22 = size1;
      label19_2.Size = size22;
      this.Label19.TabIndex = 2;
      this.Label19.Text = "Company:";
      this.Label19.TextAlign = ContentAlignment.MiddleRight;
      this.numFileVersion_2.BackColor = SystemColors.Window;
      this.numFileVersion_2.ForeColor = SystemColors.ControlText;
      NumericUpDown numFileVersion2_1 = this.numFileVersion_2;
      point1 = new Point(146, 125);
      Point point23 = point1;
      numFileVersion2_1.Location = point23;
      NumericUpDown numFileVersion2_2 = this.numFileVersion_2;
      num1 = new Decimal(new int[4]{ 999, 0, 0, 0 });
      Decimal num11 = num1;
      numFileVersion2_2.Maximum = num11;
      this.numFileVersion_2.Name = "numFileVersion_2";
      NumericUpDown numFileVersion2_3 = this.numFileVersion_2;
      size1 = new Size(35, 20);
      Size size23 = size1;
      numFileVersion2_3.Size = size23;
      this.numFileVersion_2.TabIndex = 13;
      this.numFileVersion_4.BackColor = SystemColors.Window;
      this.numFileVersion_4.ForeColor = SystemColors.ControlText;
      NumericUpDown numFileVersion4_1 = this.numFileVersion_4;
      point1 = new Point(228, 125);
      Point point24 = point1;
      numFileVersion4_1.Location = point24;
      NumericUpDown numFileVersion4_2 = this.numFileVersion_4;
      num1 = new Decimal(new int[4]{ 999, 0, 0, 0 });
      Decimal num12 = num1;
      numFileVersion4_2.Maximum = num12;
      this.numFileVersion_4.Name = "numFileVersion_4";
      NumericUpDown numFileVersion4_3 = this.numFileVersion_4;
      size1 = new Size(35, 20);
      Size size24 = size1;
      numFileVersion4_3.Size = size24;
      this.numFileVersion_4.TabIndex = 15;
      this.Label17.ForeColor = Color.White;
      Label label17_1 = this.Label17;
      point1 = new Point(16, 73);
      Point point25 = point1;
      label17_1.Location = point25;
      this.Label17.Name = "Label17";
      Label label17_2 = this.Label17;
      size1 = new Size(83, 17);
      Size size25 = size1;
      label17_2.Size = size25;
      this.Label17.TabIndex = 4;
      this.Label17.Text = "Copyright:";
      this.Label17.TextAlign = ContentAlignment.MiddleRight;
      this.txtACopyright.BackColor = SystemColors.Window;
      this.txtACopyright.ForeColor = SystemColors.ControlText;
      TextBox txtAcopyright1 = this.txtACopyright;
      point1 = new Point(105, 72);
      Point point26 = point1;
      txtAcopyright1.Location = point26;
      this.txtACopyright.MaxLength = 100;
      this.txtACopyright.Name = "txtACopyright";
      TextBox txtAcopyright2 = this.txtACopyright;
      size1 = new Size(256, 20);
      Size size26 = size1;
      txtAcopyright2.Size = size26;
      this.txtACopyright.TabIndex = 5;
      this.numFileVersion_3.BackColor = SystemColors.Window;
      this.numFileVersion_3.ForeColor = SystemColors.ControlText;
      NumericUpDown numFileVersion3_1 = this.numFileVersion_3;
      point1 = new Point(187, 125);
      Point point27 = point1;
      numFileVersion3_1.Location = point27;
      NumericUpDown numFileVersion3_2 = this.numFileVersion_3;
      num1 = new Decimal(new int[4]{ 999, 0, 0, 0 });
      Decimal num13 = num1;
      numFileVersion3_2.Maximum = num13;
      this.numFileVersion_3.Name = "numFileVersion_3";
      NumericUpDown numFileVersion3_3 = this.numFileVersion_3;
      size1 = new Size(35, 20);
      Size size27 = size1;
      numFileVersion3_3.Size = size27;
      this.numFileVersion_3.TabIndex = 14;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.BackgroundImage = (Image) componentResourceManager.GetObject("$this.BackgroundImage");
      size1 = new Size(391, 276);
      this.ClientSize = size1;
      this.Controls.Add((Control) this.btnExit);
      this.Controls.Add((Control) this.btnBuild);
      this.Controls.Add((Control) this.GroupBox1);
      this.Controls.Add((Control) this.grbAssembly);
      this.Icon = (Icon) componentResourceManager.GetObject("$this.Icon");
      this.Name = nameof (Form2);
      this.Text = "iKeylogg Assembly Changer";
      this.GroupBox1.ResumeLayout(false);
      this.GroupBox1.PerformLayout();
      this.grbAssembly.ResumeLayout(false);
      this.grbAssembly.PerformLayout();
      this.numVersion_4.EndInit();
      this.numVersion_3.EndInit();
      ((ISupportInitialize) this.picIcon).EndInit();
      this.numVersion_2.EndInit();
      this.numFileVersion_1.EndInit();
      this.numVersion_1.EndInit();
      this.numFileVersion_2.EndInit();
      this.numFileVersion_4.EndInit();
      this.numFileVersion_3.EndInit();
      this.ResumeLayout(false);
    }

    internal virtual Button btnExit
    {
      [DebuggerNonUserCode] get => this._btnExit;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.btnExit_Click);
        if (this._btnExit != null)
          this._btnExit.Click -= eventHandler;
        this._btnExit = value;
        if (this._btnExit == null)
          return;
        this._btnExit.Click += eventHandler;
      }
    }

    internal virtual Button btnBuild
    {
      [DebuggerNonUserCode] get => this._btnBuild;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.btnBuild_Click);
        if (this._btnBuild != null)
          this._btnBuild.Click -= eventHandler;
        this._btnBuild = value;
        if (this._btnBuild == null)
          return;
        this._btnBuild.Click += eventHandler;
      }
    }

    internal virtual GroupBox GroupBox1
    {
      [DebuggerNonUserCode] get => this._GroupBox1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.GroupBox1_Enter);
        if (this._GroupBox1 != null)
          this._GroupBox1.Enter -= eventHandler;
        this._GroupBox1 = value;
        if (this._GroupBox1 == null)
          return;
        this._GroupBox1.Enter += eventHandler;
      }
    }

    internal virtual TextBox txtFileName
    {
      [DebuggerNonUserCode] get => this._txtFileName;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.txtFileName_TextChanged);
        if (this._txtFileName != null)
          this._txtFileName.TextChanged -= eventHandler;
        this._txtFileName = value;
        if (this._txtFileName == null)
          return;
        this._txtFileName.TextChanged += eventHandler;
      }
    }

    internal virtual Button btnOpen
    {
      [DebuggerNonUserCode] get => this._btnOpen;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.btnOpen_Click);
        if (this._btnOpen != null)
          this._btnOpen.Click -= eventHandler;
        this._btnOpen = value;
        if (this._btnOpen == null)
          return;
        this._btnOpen.Click += eventHandler;
      }
    }

    internal virtual GroupBox grbAssembly
    {
      [DebuggerNonUserCode] get => this._grbAssembly;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.grbAssembly_Enter);
        if (this._grbAssembly != null)
          this._grbAssembly.Enter -= eventHandler;
        this._grbAssembly = value;
        if (this._grbAssembly == null)
          return;
        this._grbAssembly.Enter += eventHandler;
      }
    }

    internal virtual Button btnIcon
    {
      [DebuggerNonUserCode] get => this._btnIcon;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.btnIcon_Click);
        if (this._btnIcon != null)
          this._btnIcon.Click -= eventHandler;
        this._btnIcon = value;
        if (this._btnIcon == null)
          return;
        this._btnIcon.Click += eventHandler;
      }
    }

    internal virtual NumericUpDown numVersion_4
    {
      [DebuggerNonUserCode] get => this._numVersion_4;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._numVersion_4 = value;
    }

    internal virtual TextBox txtADescription
    {
      [DebuggerNonUserCode] get => this._txtADescription;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._txtADescription = value;
    }

    internal virtual TextBox txtIconPath
    {
      [DebuggerNonUserCode] get => this._txtIconPath;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.txtIconPath_TextChanged);
        if (this._txtIconPath != null)
          this._txtIconPath.TextChanged -= eventHandler;
        this._txtIconPath = value;
        if (this._txtIconPath == null)
          return;
        this._txtIconPath.TextChanged += eventHandler;
      }
    }

    internal virtual NumericUpDown numVersion_3
    {
      [DebuggerNonUserCode] get => this._numVersion_3;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._numVersion_3 = value;
    }

    internal virtual Label Label16
    {
      [DebuggerNonUserCode] get => this._Label16;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label16 = value;
    }

    internal virtual Label Label20
    {
      [DebuggerNonUserCode] get => this._Label20;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label20 = value;
    }

    internal virtual PictureBox picIcon
    {
      [DebuggerNonUserCode] get => this._picIcon;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._picIcon = value;
    }

    internal virtual NumericUpDown numVersion_2
    {
      [DebuggerNonUserCode] get => this._numVersion_2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._numVersion_2 = value;
    }

    internal virtual Label Label21
    {
      [DebuggerNonUserCode] get => this._Label21;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label21 = value;
    }

    internal virtual TextBox txtACompany
    {
      [DebuggerNonUserCode] get => this._txtACompany;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._txtACompany = value;
    }

    internal virtual NumericUpDown numFileVersion_1
    {
      [DebuggerNonUserCode] get => this._numFileVersion_1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._numFileVersion_1 = value;
    }

    internal virtual NumericUpDown numVersion_1
    {
      [DebuggerNonUserCode] get => this._numVersion_1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._numVersion_1 = value;
    }

    internal virtual Label Label12
    {
      [DebuggerNonUserCode] get => this._Label12;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label12 = value;
    }

    internal virtual Label Label19
    {
      [DebuggerNonUserCode] get => this._Label19;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label19 = value;
    }

    internal virtual NumericUpDown numFileVersion_2
    {
      [DebuggerNonUserCode] get => this._numFileVersion_2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._numFileVersion_2 = value;
    }

    internal virtual NumericUpDown numFileVersion_4
    {
      [DebuggerNonUserCode] get => this._numFileVersion_4;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._numFileVersion_4 = value;
    }

    internal virtual Label Label17
    {
      [DebuggerNonUserCode] get => this._Label17;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label17 = value;
    }

    internal virtual TextBox txtACopyright
    {
      [DebuggerNonUserCode] get => this._txtACopyright;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._txtACopyright = value;
    }

    internal virtual NumericUpDown numFileVersion_3
    {
      [DebuggerNonUserCode] get => this._numFileVersion_3;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._numFileVersion_3 = value;
    }

    private void SaveProperties(string sPath)
    {
      try
      {
        if (!File.Exists(sPath))
          throw new Exception("Exe not found!");
        Cursor.Current = Cursors.WaitCursor;
        Application.DoEvents();
        VersionResource versionResource = new VersionResource();
        versionResource.LoadFrom(sPath);
        if (File.Exists(this.txtIconPath.Text))
          new IconFile(this.txtIconPath.Text).ConvertToGroupIconResource().SaveTo(sPath);
        versionResource.FileVersion = Conversions.ToString(this.numFileVersion_1.Value) + "." + Conversions.ToString(this.numFileVersion_2.Value) + "." + Conversions.ToString(this.numFileVersion_3.Value) + "." + Conversions.ToString(this.numFileVersion_4.Value);
        versionResource.ProductVersion = Conversions.ToString(this.numVersion_1.Value) + "." + Conversions.ToString(this.numVersion_2.Value) + "." + Conversions.ToString(this.numVersion_3.Value) + "." + Conversions.ToString(this.numVersion_4.Value);
        StringFileInfo stringFileInfo = (StringFileInfo) versionResource["StringFileInfo"];
        stringFileInfo["InternalName"] = string.Format("{0}\0", (object) this.txtFileName.Text.Trim());
        stringFileInfo["OriginalFilename"] = string.Format("{0}\0", (object) this.txtFileName.Text.Trim());
        stringFileInfo["FileVersion"] = string.Format("{0}\0", (object) versionResource.FileVersion);
        stringFileInfo["ProductVersion"] = string.Format("{0}\0", (object) versionResource.ProductVersion);
        stringFileInfo["Assembly Version"] = string.Format("{0}\0", (object) versionResource.ProductVersion);
        stringFileInfo["LegalCopyright"] = string.Format("{0}\0", (object) this.txtACopyright.Text.Trim());
        stringFileInfo["FileDescription"] = string.Format("{0}\0", (object) this.txtADescription.Text.Trim());
        versionResource.SaveTo(sPath);
        int num = (int) MessageBox.Show("Done!");
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        int num = (int) MessageBox.Show(ex.Message);
        ProjectData.ClearProjectError();
      }
      finally
      {
        Cursor.Current = Cursors.Default;
      }
    }

    private void btnExit_Click(object sender, EventArgs e) => this.Close();

    private void btnIcon_Click(object sender, EventArgs e)
    {
      using (OpenFileDialog openFileDialog = new OpenFileDialog())
      {
        openFileDialog.Filter = "Executable files (*.ico)|*.ico|All files|*.*";
        openFileDialog.FileName = this.txtIconPath.Text.Trim();
        if (openFileDialog.ShowDialog((IWin32Window) this) != DialogResult.OK)
          return;
        this.txtIconPath.Text = openFileDialog.FileName;
      }
    }

    private void txtFileName_TextChanged(object sender, EventArgs e) => this.grbAssembly.Enabled = File.Exists(this.txtFileName.Text);

    private void btnOpen_Click(object sender, EventArgs e)
    {
      using (OpenFileDialog openFileDialog = new OpenFileDialog())
      {
        openFileDialog.Filter = "Executable files (*.exe)|*.exe|All files|*.*";
        openFileDialog.FileName = this.txtFileName.Text.Trim();
        if (openFileDialog.ShowDialog((IWin32Window) this) != DialogResult.OK)
          return;
        this.txtFileName.Text = openFileDialog.FileName;
      }
    }

    private void btnBuild_Click(object sender, EventArgs e)
    {
      try
      {
        this.SaveProperties(this.txtFileName.Text);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        int num = (int) MessageBox.Show(ex.Message);
        ProjectData.ClearProjectError();
      }
    }

    private void txtIconPath_TextChanged(object sender, EventArgs e)
    {
      if (!File.Exists(this.txtIconPath.Text))
        return;
      this.picIcon.Image = (Image) new Bitmap(this.txtIconPath.Text);
    }

    private void Form1_Load(object sender, EventArgs e)
    {
    }

    private void GroupBox1_Enter(object sender, EventArgs e)
    {
    }

    private void grbAssembly_Enter(object sender, EventArgs e)
    {
    }
  }
}
