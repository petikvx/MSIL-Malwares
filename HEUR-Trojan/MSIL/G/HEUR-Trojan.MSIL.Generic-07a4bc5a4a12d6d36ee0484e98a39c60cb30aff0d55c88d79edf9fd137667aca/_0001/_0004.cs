// Decompiled with JetBrains decompiler
// Type: .
// Assembly: derver, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 76892F40-3DAD-430C-AF53-E7AE49BEB72F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Generic-07a4bc5a4a12d6d36ee0484e98a39c60cb30aff0d55c88d79edf9fd137667aca.exe

using \u0004;
using \u0008;
using System.Runtime.InteropServices;

namespace \u0001
{
  internal sealed class \u0004
  {
    internal static int \u0001;
    internal static int \u0002;
    internal static int \u0003;
    private static int \u0004;
    internal static int \u0005;
    internal static int \u0006;
    internal static int \u0007;
    internal static int \u0008;
    internal static int[] \u0001;
    internal static byte[] \u0001;
    public \u0007 \u0001;
    internal \u0001.\u0004.\u0001 \u0001;
    internal \u0001.\u0004.\u0001 \u0002;
    internal \u0001.\u0004.\u0001 \u0003;
    internal short[] \u0001;
    internal byte[] \u0002;
    internal int \u000E;
    internal int \u000F;
    internal static short[] \u0002;
    internal static byte[] \u0003;
    internal static short[] \u0003;
    internal static byte[] \u0004;

    static \u0004()
    {
      int length;
      do
      {
        length = 16384;
        if (length != 0)
          \u0001.\u0004.\u0001 = length;
        else
          goto label_12;
      }
      while (false);
      \u0001.\u0004.\u0002 = 286;
      \u0001.\u0004.\u0003 = 30;
      \u0001.\u0004.\u0004 = 19;
      \u0001.\u0004.\u0005 = 16;
      \u0001.\u0004.\u0006 = 17;
      \u0001.\u0004.\u0007 = 18;
      \u0001.\u0004.\u0008 = 256;
      \u0001.\u0004.\u0001 = new int[19]
      {
        16,
        17,
        18,
        0,
        8,
        7,
        9,
        6,
        10,
        5,
        11,
        4,
        12,
        3,
        13,
        2,
        14,
        1,
        15
      };
      \u0001.\u0004.\u0001 = new byte[16]
      {
        (byte) 0,
        (byte) 8,
        (byte) 4,
        (byte) 12,
        (byte) 2,
        (byte) 10,
        (byte) 6,
        (byte) 14,
        (byte) 1,
        (byte) 9,
        (byte) 5,
        (byte) 13,
        (byte) 3,
        (byte) 11,
        (byte) 7,
        (byte) 15
      };
      \u0001.\u0004.\u0002 = new short[(int) checked ((uint) \u0001.\u0004.\u0002)];
      \u0001.\u0004.\u0003 = new byte[(int) checked ((uint) \u0001.\u0004.\u0002)];
      int index1;
      for (index1 = 0; index1 < 144; \u0001.\u0004.\u0003[index1++] = (byte) 8)
        \u0001.\u0004.\u0002[index1] = \u0005.\u0001(48 + index1 << 8);
      for (; index1 < 256; \u0001.\u0004.\u0003[index1++] = (byte) 9)
        \u0001.\u0004.\u0002[index1] = \u0005.\u0001(256 + index1 << 7);
      for (; index1 < 280; \u0001.\u0004.\u0003[index1++] = (byte) 7)
        \u0001.\u0004.\u0002[index1] = \u0005.\u0001(index1 - 256 << 9);
      for (; index1 < \u0001.\u0004.\u0002; \u0001.\u0004.\u0003[index1++] = (byte) 8)
        \u0001.\u0004.\u0002[index1] = \u0005.\u0001(index1 - 88 << 8);
      length = \u0001.\u0004.\u0003;
label_12:
      \u0001.\u0004.\u0003 = new short[(int) checked ((uint) length)];
      \u0001.\u0004.\u0004 = new byte[(int) checked ((uint) \u0001.\u0004.\u0003)];
      for (int index2 = 0; index2 < \u0001.\u0004.\u0003; ++index2)
      {
        \u0001.\u0004.\u0003[index2] = \u0005.\u0001(index2 << 11);
        \u0001.\u0004.\u0004[index2] = (byte) 5;
      }
    }

    public \u0004([In] \u0007 obj0)
    {
      this.\u0001 = obj0;
      this.\u0001 = new \u0001.\u0004.\u0001(this, \u0001.\u0004.\u0002, 257, 15);
      this.\u0002 = new \u0001.\u0004.\u0001(this, \u0001.\u0004.\u0003, 1, 15);
      this.\u0003 = new \u0001.\u0004.\u0001(this, \u0001.\u0004.\u0004, 4, 7);
      this.\u0001 = new short[(int) checked ((uint) \u0001.\u0004.\u0001)];
      this.\u0002 = new byte[(int) checked ((uint) \u0001.\u0004.\u0001)];
    }

    public sealed class \u0001
    {
      public short[] \u0001;
      public short[] \u0002;
      public byte[] \u0001;
      public int[] \u0001;
      public int \u0001;
      public int \u0002;
      public int \u0003;
      internal \u0001.\u0004 \u0001;

      public \u0001([In] \u0001.\u0004 obj0, [In] int obj1, [In] int obj2, [In] int obj3)
      {
        this.\u0001 = obj0;
        this.\u0001 = obj2;
        this.\u0003 = obj3;
        this.\u0001 = new short[(int) checked ((uint) obj1)];
        this.\u0001 = new int[(int) checked ((uint) obj3)];
      }
    }
  }
}
