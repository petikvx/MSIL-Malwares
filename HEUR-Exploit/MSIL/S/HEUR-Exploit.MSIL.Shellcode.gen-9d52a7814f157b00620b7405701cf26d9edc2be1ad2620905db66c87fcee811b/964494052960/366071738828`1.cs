// Decompiled with JetBrains decompiler
// Type: 964494052960.366071738828
// Assembly: 341658236064, Version=3.1.2.23007, Culture=neutral, PublicKeyToken=31bf3856ad364e35
// MVID: 307D4BC7-4605-49A1-A696-CC8CC5C1D6BD
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-9d52a7814f157b00620b7405701cf26d9edc2be1ad2620905db66c87fcee811b.exe

using \u003253358266500;
using \u003283463724127;
using \u003530072175527;
using \u003650657212766;
using \u003785552231676;
using \u003860488407208;
using \u003988334853529;
using Microsoft.Build.Framework;
using System;
using System.Collections.Generic;
using System.Globalization;
using System.Linq;

namespace \u003964494052960
{
  internal class \u003366071738828<TConflictItem> : IDisposable where TConflictItem : class, IConflictItem
  {
    private Dictionary<string, TConflictItem> \u003760068916354;
    private \u003764798047079 \u003435939091549;
    private \u003606916204896 \u003033809787298;
    private \u003148504927892<TConflictItem> \u003023717108568;
    private Dictionary<string, List<TConflictItem>> \u003043604480578;

    public Action<TConflictItem> \u003622365352440
    {
      get => this.\u003CUnresolvedConflictHandler\u003Ek__BackingField;
      set => this.\u003CUnresolvedConflictHandler\u003Ek__BackingField = value;
    }

    public \u003366071738828(
      \u003606916204896 packageRank,
      \u003148504927892<TConflictItem> packageOverrideResolver,
      \u003764798047079 log)
    {
      this._winningItemsByKey = new Dictionary<string, TConflictItem>();
      this._unresolvedConflictItems = new Dictionary<string, List<TConflictItem>>((IEqualityComparer<string>) StringComparer.Ordinal);
      // ISSUE: explicit constructor call
      base.\u002Ector();
      this._log = log;
      this._packageRank = packageRank;
      this._packageOverrideResolver = packageOverrideResolver;
    }

    public void \u003523728518396(
      IEnumerable<TConflictItem> _param1,
      Func<TConflictItem, string> _param2,
      \u003171769210753<TConflictItem> _param3,
      bool _param4 = true)
    {
      if (_param1 == null)
        return;
      foreach (TConflictItem conflictItem1 in _param1)
      {
        string key = _param2(conflictItem1);
        if (!string.IsNullOrEmpty(key))
        {
          TConflictItem conflictItem2;
          if (this._winningItemsByKey.TryGetValue(key, out conflictItem2))
          {
            TConflictItem winner = this.ResolveConflict(conflictItem2, conflictItem1, false);
            if ((object) winner == null)
            {
              List<TConflictItem> conflictItemList;
              if (!this._unresolvedConflictItems.TryGetValue(key, out conflictItemList))
              {
                conflictItemList = new List<TConflictItem>();
                this._unresolvedConflictItems[key] = conflictItemList;
                conflictItemList.Add(conflictItem2);
              }
              conflictItemList.Add(conflictItem1);
            }
            else
            {
              TConflictItem loser1 = conflictItem1;
              if ((object) winner != (object) conflictItem2)
              {
                if (_param4)
                  this._winningItemsByKey[key] = conflictItem1;
                else
                  this._winningItemsByKey.Remove(key);
                loser1 = conflictItem2;
              }
              _param3(winner, loser1);
              List<TConflictItem> conflictItemList1;
              if (this._unresolvedConflictItems.TryGetValue(key, out conflictItemList1) && conflictItemList1.Contains(loser1))
              {
                List<TConflictItem> conflictItemList2 = new List<TConflictItem>();
                foreach (TConflictItem loser2 in conflictItemList1)
                {
                  if ((object) loser2 != (object) loser1)
                  {
                    TConflictItem conflictItem3 = this.ResolveConflict(winner, loser2, true);
                    if ((object) conflictItem3 == (object) winner)
                      _param3(winner, loser2);
                    else if ((object) conflictItem3 == null)
                    {
                      if (conflictItemList2.Count == 0)
                        conflictItemList2.Add(winner);
                      conflictItemList2.Add(loser2);
                    }
                  }
                }
                this._unresolvedConflictItems.Remove(key);
                if (conflictItemList2.Count > 0)
                  this._unresolvedConflictItems[key] = conflictItemList2;
              }
            }
          }
          else if (_param4)
            this._winningItemsByKey[key] = conflictItem1;
        }
      }
    }

    public void \u003857224142380()
    {
      foreach (string key in this._unresolvedConflictItems.Keys)
      {
        TConflictItem conflictItem1 = this._unresolvedConflictItems[key][0];
        Action<TConflictItem> action1 = this.\u003622365352440;
        if (action1 != null)
          action1(conflictItem1);
        foreach (TConflictItem conflictItem2 in this._unresolvedConflictItems[key].Skip<TConflictItem>(1))
        {
          Action<TConflictItem> action2 = this.\u003622365352440;
          if (action2 != null)
            action2(conflictItem2);
          this.ResolveConflict(conflictItem1, conflictItem2, true);
        }
      }
    }

    private TConflictItem \u003419537702617(
      TConflictItem _param1,
      TConflictItem _param2,
      bool _param3)
    {
      TConflictItem conflictItem1 = this._packageOverrideResolver.Resolve(_param1, _param2);
      if ((object) conflictItem1 != null)
        return conflictItem1;
      string str1 = string.Format((IFormatProvider) CultureInfo.CurrentCulture, \u003064471764011.\u003298823007044, (object) _param1.DisplayName, (object) _param2.DisplayName);
      bool exists1 = _param1.Exists;
      bool exists2 = _param2.Exists;
      if (!exists1 && !exists2)
        return default (TConflictItem);
      if (!exists1 || !exists2)
      {
        if (_param3)
          this.LogMessage(str1, \u003064471764011.\u003080825398531, new object[1]
          {
            !exists1 ? (object) _param1.DisplayName : (object) _param2.DisplayName
          });
        return default (TConflictItem);
      }
      Version assemblyVersion1 = _param1.AssemblyVersion;
      Version assemblyVersion2 = _param2.AssemblyVersion;
      if (assemblyVersion1 == (Version) null ^ assemblyVersion2 == (Version) null)
      {
        if (_param3)
        {
          string str2 = assemblyVersion1 == (Version) null ? _param1.DisplayName : _param2.DisplayName;
          this.LogMessage(str1, \u003064471764011.\u003893482982958, new object[1]
          {
            (object) str2
          });
        }
        return default (TConflictItem);
      }
      if (assemblyVersion1 != assemblyVersion2)
      {
        string displayName;
        Version version1;
        Version version2;
        if (assemblyVersion1 > assemblyVersion2)
        {
          displayName = _param1.DisplayName;
          version1 = assemblyVersion1;
          version2 = assemblyVersion2;
        }
        else
        {
          displayName = _param2.DisplayName;
          version1 = assemblyVersion2;
          version2 = assemblyVersion1;
        }
        this.LogMessage(str1, \u003064471764011.\u003822795067904, new object[3]
        {
          (object) displayName,
          (object) version1,
          (object) version2
        });
        if (assemblyVersion1 > assemblyVersion2)
          return _param1;
        if (assemblyVersion2 > assemblyVersion1)
          return _param2;
      }
      Version fileVersion1 = _param1.FileVersion;
      Version fileVersion2 = _param2.FileVersion;
      if (fileVersion1 == (Version) null ^ fileVersion2 == (Version) null)
      {
        if (_param3)
        {
          string str3 = fileVersion1 == (Version) null ? _param1.DisplayName : _param2.DisplayName;
          this.LogMessage(str1, \u003064471764011.\u003969479282378, new object[1]
          {
            (object) str3
          });
        }
        return default (TConflictItem);
      }
      if (fileVersion1 != fileVersion2)
      {
        string displayName;
        Version version3;
        Version version4;
        if (fileVersion1 > fileVersion2)
        {
          displayName = _param1.DisplayName;
          version3 = fileVersion1;
          version4 = fileVersion2;
        }
        else
        {
          displayName = _param2.DisplayName;
          version3 = fileVersion2;
          version4 = fileVersion1;
        }
        this.LogMessage(str1, \u003064471764011.\u003821081481181, new object[3]
        {
          (object) displayName,
          (object) version3,
          (object) version4
        });
        if (fileVersion1 > fileVersion2)
          return _param1;
        if (fileVersion2 > fileVersion1)
          return _param2;
      }
      int num1 = this._packageRank.\u003102798528959(_param1.PackageId);
      int num2 = this._packageRank.\u003102798528959(_param2.PackageId);
      if (num1 < num2)
      {
        this.LogMessage(str1, \u003064471764011.\u003150185433733, new object[1]
        {
          (object) _param1.DisplayName
        });
        return _param1;
      }
      if (num2 < num1)
      {
        this.LogMessage(str1, \u003064471764011.\u003150185433733, new object[1]
        {
          (object) _param2.DisplayName
        });
        return _param2;
      }
      bool flag1 = _param1.ItemType == \u003676020296296.Platform;
      bool flag2 = _param2.ItemType == \u003676020296296.Platform;
      if (flag1 && !flag2)
      {
        this.LogMessage(str1, \u003064471764011.\u003993136553484, new object[1]
        {
          (object) _param1.DisplayName
        });
        return _param1;
      }
      if (!flag1 & flag2)
      {
        this.LogMessage(str1, \u003064471764011.\u003993136553484, new object[1]
        {
          (object) _param2.DisplayName
        });
        return _param2;
      }
      if (_param1.ItemType == \u003676020296296.CopyLocal && _param2.ItemType == \u003676020296296.CopyLocal)
      {
        int num3 = string.CompareOrdinal(_param1.PackageId, _param2.PackageId);
        if (num3 != 0)
        {
          TConflictItem conflictItem2 = num3 < 0 ? _param1 : _param2;
          this.LogMessage(str1, \u003064471764011.\u003878566478950, new object[1]
          {
            (object) conflictItem2.DisplayName
          });
          return conflictItem2;
        }
      }
      if (_param3)
        this.LogMessage(str1, \u003064471764011.\u003003846361945, Array.Empty<object>());
      return default (TConflictItem);
    }

    private void \u003856687937889(string _param1, string _param2, params object[] _param3) => this._log.\u003970517661288(MessageImportance.Low, _param1 + " " + string.Format(_param2, _param3));
  }
}
