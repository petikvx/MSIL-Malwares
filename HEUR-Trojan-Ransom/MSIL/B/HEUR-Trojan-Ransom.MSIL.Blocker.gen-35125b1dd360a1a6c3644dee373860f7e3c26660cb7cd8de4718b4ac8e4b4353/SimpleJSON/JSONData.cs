// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONData
// Assembly: DataCollect, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 42D7E59F-0880-4460-A28E-6C718E130DF7
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-35125b1dd360a1a6c3644dee373860f7e3c26660cb7cd8de4718b4ac8e4b4353.exe

using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONData : JSONNode
  {
    private string m_Data;

    public override string Value
    {
      get
      {
        string data = this.m_Data;
label_1:
        int num1 = -1816713982;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -998184508)) % 3U)
          {
            case 1:
              num1 = (int) num2 * -610760351 ^ 234136121;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return data;
      }
      set
      {
label_1:
        int num1 = 800113930;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1645569089)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.m_Data = value;
              num1 = (int) num2 * -1600514555 ^ -48304649;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public JSONData(string aData)
    {
label_1:
      int num1 = 391918428;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1163056662)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 1707906451 ^ -20639767;
            continue;
          case 2:
            this.m_Data = aData;
            num1 = (int) num2 * -757767306 ^ 61016340;
            continue;
          case 3:
            goto label_3;
          case 4:
            num1 = (int) num2 * 941330234 ^ 1021969390;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public JSONData(float aData) => this.AsFloat = aData;

    public JSONData(double aData)
    {
label_1:
      int num1 = -1193473882;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -870687573)) % 3U)
        {
          case 1:
            num1 = (int) num2 * 306157400 ^ -1212302382;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      this.AsDouble = aData;
    }

    public JSONData(bool aData)
    {
label_1:
      int num1 = 1531486671;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1393349138)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            this.AsBool = aData;
            num1 = (int) num2 * -210088229 ^ 2052101406;
            continue;
          case 2:
            num1 = (int) num2 * -1886725495 ^ -773699785;
            continue;
          case 3:
            goto label_3;
          case 4:
            num1 = (int) num2 * -1607711619 ^ 234067820;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public JSONData(int aData) => this.AsInt = aData;

    public override string ToString()
    {
label_1:
      int num1 = 688561834;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1375066719)) % 3U)
        {
          case 1:
            str = JSONData.\u200D‮‍⁯⁪‎⁪⁪⁮⁯⁪‫⁫‎⁪‬‎‪‍⁯⁯‍‍‭‮⁯‮‬‫⁪‭⁪‪⁮⁮‮‬⁪​‬‮("\"", JSONNode.Escape(this.m_Data), "\"");
            num1 = (int) num2 * -1870897853 ^ -1235122916;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 1512643191;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 294795730)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            str = JSONData.\u200D‮‍⁯⁪‎⁪⁪⁮⁯⁪‫⁫‎⁪‬‎‪‍⁯⁯‍‍‭‮⁯‮‬‫⁪‭⁪‪⁮⁮‮‬⁪​‬‮("\"", JSONNode.Escape(this.m_Data), "\"");
            num1 = (int) num2 * 380447682 ^ 1468762607;
            continue;
          case 3:
            num1 = (int) num2 * 1147688070 ^ -989571382;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = -1245172001;
      bool flag1;
      JSONData jsonData;
      bool flag2;
      bool flag3;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1220463882)) % 34U)
        {
          case 0:
            JSONData.\u200D‎⁪‌​⁬‍⁯⁯⁬‏‍⁪‌‏‎⁯‏‮⁭⁪‬‬‮​‮⁬‪‏⁪‏⁯⁭‪⁬⁮‫⁮⁭⁫‮(aWriter, (byte) 3);
            num1 = -1914487541;
            continue;
          case 1:
            JSONData.\u200D‎⁪‌​⁬‍⁯⁯⁬‏‍⁪‌‏‎⁯‏‮⁭⁪‬‬‮​‮⁬‪‏⁪‏⁯⁭‪⁬⁮‫⁮⁭⁫‮(aWriter, (byte) 4);
            num1 = (int) num2 * -732496947 ^ 612685787;
            continue;
          case 2:
            JSONData.\u200F‭‬⁯‌⁫‍‮​‎⁯⁬⁫​⁪‎‎‍⁬⁬‮⁯⁮⁯⁮‏⁭​‪⁫‫‎⁫‮‎‫⁫‮‪⁪‮(aWriter, this.AsFloat);
            num1 = (int) num2 * 778894340 ^ -454272804;
            continue;
          case 3:
            JSONData.\u202B‎‮‮⁬‪‮⁯‪⁮‌⁭‮‭⁫⁭‭⁮‪​‎⁭⁯⁫⁭⁭‪‏‌‪‭⁪‏⁮‏‏​⁯‪‪‮(aWriter, this.AsBool);
            num1 = (int) num2 * 1301423459 ^ -2018182698;
            continue;
          case 4:
            JSONData.\u206E​‫⁬‪‮‮‬‫‮‬⁮⁬⁭‍‎⁫‎⁪‏‍‎‮‌⁭‬⁪‍​‬‬​⁬⁪‎⁯⁬​‪‏‮(aWriter, this.m_Data);
            num1 = (int) num2 * 1220318749 ^ 264355375;
            continue;
          case 5:
            num1 = (int) num2 * 248881980 ^ -1737528551;
            continue;
          case 6:
            num1 = (int) num2 * -584396938 ^ 1213476991;
            continue;
          case 7:
            int num3 = flag1 ? 827664249 : (num3 = 482127463);
            num1 = num3 ^ (int) num2 * 3191257;
            continue;
          case 8:
            num1 = (int) num2 * -1753888955 ^ -1702592739;
            continue;
          case 9:
            int num4 = !JSONData.\u200F​⁯‌‬‭‮‏‏​‍‎‌‭‏⁬⁫⁫‫​⁬‮‫‍⁬‮⁫‎⁫⁭⁫‏‪‍⁭‪⁬⁭⁪⁭‮(jsonData.m_Data, this.m_Data) ? -1803490766 : (num4 = -1423269977);
            num1 = num4 ^ (int) num2 * 596050033;
            continue;
          case 10:
            goto label_1;
          case 11:
            num1 = (int) num2 * -911939622 ^ 1467323781;
            continue;
          case 12:
            JSONData.\u200E‫​‬​⁯‭‬‏⁫‮⁮⁪​​‪‍⁮‌⁭⁪‬‎‭⁮‫⁪‏‪⁫⁮‪⁮⁯​⁫⁫⁫⁯‎‮(aWriter, this.AsDouble);
            num1 = (int) num2 * 924757677 ^ 170343820;
            continue;
          case 13:
            goto label_3;
          case 14:
            num1 = (int) num2 * 275922457 ^ -1019938873;
            continue;
          case 15:
            JSONData.\u200D‎⁪‌​⁬‍⁯⁯⁬‏‍⁪‌‏‎⁯‏‮⁭⁪‬‬‮​‮⁬‪‏⁪‏⁯⁭‪⁬⁮‫⁮⁭⁫‮(aWriter, (byte) 6);
            num1 = (int) num2 * -1378556010 ^ -1686689811;
            continue;
          case 16:
            JSONData.\u200D‎⁪‌​⁬‍⁯⁯⁬‏‍⁪‌‏‎⁯‏‮⁭⁪‬‬‮​‮⁬‪‏⁪‏⁯⁭‪⁬⁮‫⁮⁭⁫‮(aWriter, (byte) 5);
            num1 = (int) num2 * -1435678466 ^ 646004044;
            continue;
          case 17:
            jsonData.AsInt = this.AsInt;
            num1 = (int) num2 * -600944727 ^ -577221743;
            continue;
          case 18:
            flag2 = JSONData.\u200F​⁯‌‬‭‮‏‏​‍‎‌‭‏⁬⁫⁫‫​⁬‮‫‍⁬‮⁫‎⁫⁭⁫‏‪‍⁭‪⁬⁭⁪⁭‮(jsonData.m_Data, this.m_Data);
            num1 = (int) num2 * 1235142007 ^ -1092602113;
            continue;
          case 19:
            int num5 = !flag2 ? 1724786421 : (num5 = 1252020072);
            num1 = num5 ^ (int) num2 * -904109904;
            continue;
          case 20:
            num1 = (int) num2 * -274429106 ^ 1592252905;
            continue;
          case 21:
            jsonData = new JSONData("");
            num1 = (int) num2 * -607217319 ^ 1274942288;
            continue;
          case 22:
            flag1 = JSONData.\u200F​⁯‌‬‭‮‏‏​‍‎‌‭‏⁬⁫⁫‫​⁬‮‫‍⁬‮⁫‎⁫⁭⁫‏‪‍⁭‪⁬⁭⁪⁭‮(jsonData.m_Data, this.m_Data);
            num1 = (int) num2 * 1827668683 ^ 985547457;
            continue;
          case 23:
            JSONData.\u200D‎⁪‌​⁬‍⁯⁯⁬‏‍⁪‌‏‎⁯‏‮⁭⁪‬‬‮​‮⁬‪‏⁪‏⁯⁭‪⁬⁮‫⁮⁭⁫‮(aWriter, (byte) 7);
            num1 = (int) num2 * 1280931592 ^ 1165939838;
            continue;
          case 24:
            int num6 = flag3 ? 1107458768 : (num6 = 1820543921);
            num1 = num6 ^ (int) num2 * -1510901467;
            continue;
          case 25:
            flag3 = JSONData.\u200F​⁯‌‬‭‮‏‏​‍‎‌‭‏⁬⁫⁫‫​⁬‮‫‍⁬‮⁫‎⁫⁭⁫‏‪‍⁭‪⁬⁭⁪⁭‮(jsonData.m_Data, this.m_Data);
            num1 = (int) num2 * -635259877 ^ 1410915883;
            continue;
          case 26:
            num1 = (int) num2 * 896173604 ^ -585679443;
            continue;
          case 27:
            jsonData.AsBool = this.AsBool;
            num1 = -2007684666;
            continue;
          case 28:
            JSONData.\u206F⁬‍‪‎⁬‭⁭‏‪⁯⁬‬⁪⁮​‏‮‎‬​​​‪⁭‭‮‫‭‍⁯​⁭⁯‫‭‌​⁬⁫‮(aWriter, this.AsInt);
            num1 = (int) num2 * 1369617945 ^ 1051943620;
            continue;
          case 29:
            num1 = (int) num2 * -2069264270 ^ -344126682;
            continue;
          case 30:
            num1 = (int) num2 * -107597834 ^ 1981295309;
            continue;
          case 31:
            jsonData.AsDouble = this.AsDouble;
            num1 = -880167287;
            continue;
          case 32:
            num1 = (int) num2 * -851647596 ^ -1025014994;
            continue;
          case 33:
            jsonData.AsFloat = this.AsFloat;
            num1 = -1275368059;
            continue;
          default:
            goto label_36;
        }
      }
label_3:
      return;
label_36:;
    }

    static string \u200D‮‍⁯⁪‎⁪⁪⁮⁯⁪‫⁫‎⁪‬‎‪‍⁯⁯‍‍‭‮⁯‮‬‫⁪‭⁪‪⁮⁮‮‬⁪​‬‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2)
    {
      return obj0 + obj1 + obj2;
    }

    static bool \u200F​⁯‌‬‭‮‏‏​‍‎‌‭‏⁬⁫⁫‫​⁬‮‫‍⁬‮⁫‎⁫⁭⁫‏‪‍⁭‪⁬⁭⁪⁭‮([In] string obj0, [In] string obj1) => obj0 == obj1;

    static void \u200D‎⁪‌​⁬‍⁯⁯⁬‏‍⁪‌‏‎⁯‏‮⁭⁪‬‬‮​‮⁬‪‏⁪‏⁯⁭‪⁬⁮‫⁮⁭⁫‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u206F⁬‍‪‎⁬‭⁭‏‪⁯⁬‬⁪⁮​‏‮‎‬​​​‪⁭‭‮‫‭‍⁯​⁭⁯‫‭‌​⁬⁫‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u200F‭‬⁯‌⁫‍‮​‎⁯⁬⁫​⁪‎‎‍⁬⁬‮⁯⁮⁯⁮‏⁭​‪⁫‫‎⁫‮‎‫⁫‮‪⁪‮([In] BinaryWriter obj0, [In] float obj1) => obj0.Write(obj1);

    static void \u200E‫​‬​⁯‭‬‏⁫‮⁮⁪​​‪‍⁮‌⁭⁪‬‎‭⁮‫⁪‏‪⁫⁮‪⁮⁯​⁫⁫⁫⁯‎‮([In] BinaryWriter obj0, [In] double obj1) => obj0.Write(obj1);

    static void \u202B‎‮‮⁬‪‮⁯‪⁮‌⁭‮‭⁫⁭‭⁮‪​‎⁭⁯⁫⁭⁭‪‏‌‪‭⁪‏⁮‏‏​⁯‪‪‮([In] BinaryWriter obj0, [In] bool obj1) => obj0.Write(obj1);

    static void \u206E​‫⁬‪‮‮‬‫‮‬⁮⁬⁭‍‎⁫‎⁪‏‍‎‮‌⁭‬⁪‍​‬‬​⁬⁪‎⁯⁬​‪‏‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
