// Decompiled with JetBrains decompiler
// Type: SmartAssembly.SmartUsageCore.UsageCounts
// Assembly: o4tdggb3, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FA0844EB-EF82-404C-B76C-C092ABDB9392
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.bzqq-b74e3dc76fae79b75c26f27ecb85aae1eae4082a42bfa080f7805f32dedc9d67.exe

using SmartAssembly.Shared;
using SmartAssembly.SmartExceptionsCore;
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace SmartAssembly.SmartUsageCore
{
  public class UsageCounts
  {
    private AppNameFinder.Ⴀ Ⴐ;

    public UsageCounts(ulong[] staticFeatureCounts, Dictionary<string, ulong> dynamicFeatureCounts)
    {
      ulong[] numArray;
      Dictionary<string, ulong> dictionary;
      try
      {
        try
        {
          numArray = staticFeatureCounts;
          this.Ⴐ.Ⴓ = numArray;
          dictionary = dynamicFeatureCounts;
          this.Ⴐ.Ⴗ = dictionary;
        }
        catch (Exception ex)
        {
          ulong[] o2 = staticFeatureCounts;
          Dictionary<string, ulong> o3 = dynamicFeatureCounts;
          StackFrameHelper.CreateException3(ex, (object) this, (object) o2, (object) o3);
          throw;
        }
      }
      catch (Exception ex)
      {
        ulong[] o1 = numArray;
        Dictionary<string, ulong> o2 = dictionary;
        ulong[] o4 = staticFeatureCounts;
        Dictionary<string, ulong> o5 = dynamicFeatureCounts;
        StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) this, (object) o4, (object) o5);
        throw;
      }
    }

    public Dictionary<string, ulong> DynamicFeatureCounts
    {
      get
      {
        try
        {
          Dictionary<string, ulong> ⴗ;
          try
          {
            ⴗ = this.Ⴐ.Ⴗ;
          }
          catch (Exception ex)
          {
            StackFrameHelper.CreateException1(ex, (object) this);
            throw;
          }
          return ⴗ;
        }
        catch (Exception ex)
        {
          Dictionary<string, ulong> dictionary;
          Dictionary<string, ulong> o1 = dictionary;
          StackFrameHelper.CreateException2(ex, (object) o1, (object) this);
          throw;
        }
      }
    }

    public ulong[] StaticFeatureCounts
    {
      get
      {
        try
        {
          ulong[] ⴓ;
          try
          {
            ⴓ = this.Ⴐ.Ⴓ;
          }
          catch (Exception ex)
          {
            StackFrameHelper.CreateException1(ex, (object) this);
            throw;
          }
          return ⴓ;
        }
        catch (Exception ex)
        {
          ulong[] numArray;
          ulong[] o1 = numArray;
          StackFrameHelper.CreateException2(ex, (object) o1, (object) this);
          throw;
        }
      }
    }

    public bool IsEmpty
    {
      get
      {
        int num;
        try
        {
          bool isEmpty;
          try
          {
            num = 3;
            while (true)
            {
              switch (num)
              {
                case 1:
                case 5:
                  goto label_6;
                case 2:
                  goto label_4;
                case 4:
                  goto label_3;
                default:
                  num = this.Ⴐ.Ⴓ.Length != 0 ? 2 : 4;
                  continue;
              }
            }
label_3:
            isEmpty = this.Ⴐ.Ⴗ.Count == 0;
            goto label_6;
label_4:
            isEmpty = false;
          }
          catch (Exception ex)
          {
            StackFrameHelper.CreateException1(ex, (object) this);
            throw;
          }
label_6:
          return isEmpty;
        }
        catch (Exception ex)
        {
          bool flag;
          __Boxed<bool> o1 = (ValueType) flag;
          __Boxed<int> o2 = (ValueType) num;
          StackFrameHelper.CreateException3(ex, (object) o1, (object) o2, (object) this);
          throw;
        }
      }
    }

    static UsageCounts()
    {
      try
      {
        DoNotPruneAttribute.ႰႣ();
      }
      catch (Exception ex)
      {
        StackFrameHelper.CreateException0(ex);
        throw;
      }
    }

    internal static int Ⴈ([In] Version obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 5:
            num2 = 4;
            break;
          default:
            num2 = 5;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 1:
            case 3:
            case 4:
              goto label_8;
            case 2:
              goto label_3;
            case 5:
              num1 = 2;
              continue;
            case 6:
              num1 = 2;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (UsageCounts.Ⴈ);
              num1 = 2;
              continue;
          }
        }
label_8:
        return obj0.Major;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        Version o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static void Ⴐ([In] ButtonBase obj0, [In] ContentAlignment obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
        num1 = 4;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 2:
            case 3:
            case 5:
              num1 = 4;
              continue;
            case 1:
              goto label_7;
            default:
              int num2;
              switch (obj3 ^ obj2)
              {
                case 110:
                  num2 = 1;
                  break;
                default:
                  num2 = 5;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_7:
        obj0.ImageAlign = obj1;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        ButtonBase o3 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<ContentAlignment> o4 = (Enum) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj3;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }

    internal static object Ⴄ([In] MethodInfo obj0, [In] object obj1, [In] object[] obj2, [In] int obj3, [In] int obj4)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj4 ^ obj3)
        {
          case 51:
            num2 = 1;
            break;
          default:
            num2 = 7;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 6:
              goto label_3;
            case 1:
              goto label_8;
            case 2:
            case 3:
            case 4:
              num1 = 6;
              continue;
            case 7:
              num1 = 6;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (UsageCounts.Ⴄ);
              num1 = 6;
              continue;
          }
        }
label_8:
        return obj0.Invoke(obj1, obj2);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        MethodInfo o2 = obj0;
        object o3 = obj1;
        object[] o4 = obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj4;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, o3, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }

    internal static Graphics Ⴓ([In] Control obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 118:
            num2 = 5;
            break;
          default:
            num2 = 2;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 2:
              num1 = 6;
              continue;
            case 3:
            case 4:
            case 5:
              goto label_8;
            case 6:
              goto label_3;
            case 7:
              num1 = 6;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (UsageCounts.Ⴓ);
              num1 = 6;
              continue;
          }
        }
label_8:
        return obj0.CreateGraphics();
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        Control o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static Pen Ⴀ([In] int obj0, [In] int obj1)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj1 ^ obj0)
        {
          case 45:
            num2 = 3;
            break;
          default:
            num2 = 2;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 4:
              num1 = 7;
              continue;
            case 2:
              num1 = 7;
              continue;
            case 3:
              goto label_8;
            case 5:
            case 6:
            case 7:
              goto label_3;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (UsageCounts.Ⴀ);
              num1 = 7;
              continue;
          }
        }
label_8:
        return SystemPens.ControlDark;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        StackFrameHelper.CreateException3(ex, (object) o1, (object) o2, (object) o3);
        throw;
      }
    }

    internal static string Ⴍ([In] int obj0, [In] int obj1)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj1 ^ obj0)
        {
          case 27:
            num2 = 6;
            break;
          default:
            num2 = 5;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 1:
              num1 = 3;
              continue;
            case 2:
            case 4:
            case 6:
            case 7:
              goto label_8;
            case 3:
              goto label_3;
            case 5:
              num1 = 3;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (UsageCounts.Ⴍ);
              num1 = 3;
              continue;
          }
        }
label_8:
        return Application.ExecutablePath;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        StackFrameHelper.CreateException3(ex, (object) o1, (object) o2, (object) o3);
        throw;
      }
    }

    internal static void Ⴃ(
      [In] Graphics obj0,
      [In] Pen obj1,
      [In] int obj2,
      [In] int obj3,
      [In] int obj4,
      [In] int obj5,
      [In] int obj6,
      [In] int obj7)
    {
      int num1;
      try
      {
        num1 = 1;
        while (true)
        {
          switch (num1)
          {
            case 0:
              num1 = 1;
              continue;
            case 2:
            case 4:
            case 5:
              goto label_7;
            default:
              int num2;
              switch (obj7 ^ obj6)
              {
                case 21:
                  num2 = 4;
                  break;
                default:
                  num2 = 0;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_7:
        obj0.DrawLine(obj1, obj2, obj3, obj4, obj5);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        Graphics o3 = obj0;
        Pen o4 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o7 = (ValueType) obj4;
        // ISSUE: variable of a boxed type
        __Boxed<int> o8 = (ValueType) obj5;
        // ISSUE: variable of a boxed type
        __Boxed<int> o9 = (ValueType) obj6;
        // ISSUE: variable of a boxed type
        __Boxed<int> o10 = (ValueType) obj7;
        StackFrameHelper.CreateException10(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6, (object) o7, (object) o8, (object) o9, (object) o10);
        throw;
      }
    }

    internal static bool Ⴜ([In] System.Type obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 93:
            num2 = 5;
            break;
          case 94:
            num2 = 6;
            break;
          case 95:
            num2 = 0;
            break;
          default:
            num2 = 8;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 4:
              goto label_12;
            case 1:
            case 5:
              goto label_10;
            case 2:
              goto label_3;
            case 6:
              goto label_11;
            case 8:
              num1 = 2;
              continue;
            case 9:
              num1 = 2;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (UsageCounts.Ⴜ);
              num1 = 2;
              continue;
          }
        }
label_10:
        return obj0.HasElementType;
label_11:
        return obj0.IsPointer;
label_12:
        return obj0.IsEnum;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        System.Type o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }
  }
}
