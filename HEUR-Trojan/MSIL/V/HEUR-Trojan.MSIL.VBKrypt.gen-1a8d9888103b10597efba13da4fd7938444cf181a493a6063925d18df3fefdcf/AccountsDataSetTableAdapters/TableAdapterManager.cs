// Decompiled with JetBrains decompiler
// Type: ATM_Final.AccountsDataSetTableAdapters.TableAdapterManager
// Assembly: ObjRefSurrog, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 3AC6506B-4A94-4066-A76F-E3EA4A03BC27
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.06\HEUR-Trojan.MSIL.VBKrypt.gen-1a8d9888103b10597efba13da4fd7938444cf181a493a6063925d18df3fefdcf.exe

using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.Design;
using System.Data;
using System.Data.Common;
using System.Data.SqlClient;
using System.Diagnostics;

namespace ATM_Final.AccountsDataSetTableAdapters
{
  [DesignerCategory("code")]
  [HelpKeyword("vs.data.TableAdapterManager")]
  [Designer("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
  [ToolboxItem(true)]
  public class TableAdapterManager : Component
  {
    private TableAdapterManager.UpdateOrderOption _updateOrder;
    private TableTableAdapter _tableTableAdapter;
    private bool _backupDataSetBeforeUpdate;
    private IDbConnection _connection;

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    public TableAdapterManager.UpdateOrderOption UpdateOrder
    {
      get
      {
        TableAdapterManager.UpdateOrderOption updateOrder = this._updateOrder;
label_1:
        int num1 = 1994661418;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 284570384)) % 3U)
          {
            case 1:
              num1 = (int) num2 * 1496710805 ^ -906600920;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return updateOrder;
      }
      set
      {
label_1:
        int num1 = -737606568;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -686076720)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this._updateOrder = value;
              num1 = (int) num2 * 1161850972 ^ 429335575;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor")]
    public TableTableAdapter TableTableAdapter
    {
      get
      {
        TableTableAdapter tableTableAdapter = this._tableTableAdapter;
label_1:
        int num1 = 144007632;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1214573051)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 875378142 ^ -232394828;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return tableTableAdapter;
      }
      set => this._tableTableAdapter = value;
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    [DebuggerNonUserCode]
    public bool BackupDataSetBeforeUpdate
    {
      get => this._backupDataSetBeforeUpdate;
      set => this._backupDataSetBeforeUpdate = value;
    }

    [Browsable(false)]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    [DebuggerNonUserCode]
    public IDbConnection Connection
    {
      get
      {
label_1:
        int num1 = -453728007;
        IDbConnection connection;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ -1310995113)) % 12U)
          {
            case 0:
              if (this._tableTableAdapter != null)
              {
                num1 = -55694936;
                continue;
              }
              num3 = 0;
              break;
            case 1:
              int num4 = flag ? 2121135368 : (num4 = 1709252572);
              num1 = num4 ^ (int) num2 * -1803628544;
              continue;
            case 2:
              int num5 = this._connection != null ? -1783787273 : (num5 = -101006545);
              num1 = num5 ^ (int) num2 * 269369106;
              continue;
            case 3:
              connection = (IDbConnection) null;
              num1 = -853356023;
              continue;
            case 4:
              goto label_1;
            case 5:
              connection = (IDbConnection) this._tableTableAdapter.Connection;
              num1 = (int) num2 * 278034716 ^ -1931939722;
              continue;
            case 7:
              num1 = (int) num2 * 594667111 ^ -1894570429;
              continue;
            case 8:
              num1 = (int) num2 * 824106038 ^ 537527533;
              continue;
            case 9:
              num1 = (int) num2 * 1604956094 ^ 1652369711;
              continue;
            case 10:
              connection = this._connection;
              num1 = (int) num2 * -1107571881 ^ 812843223;
              continue;
            case 11:
              num3 = this._tableTableAdapter.Connection != null ? 1 : 0;
              break;
            default:
              goto label_16;
          }
          flag = num3 != 0;
          num1 = -528054938;
        }
label_16:
        return connection;
      }
      set => this._connection = value;
    }

    [Browsable(false)]
    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    public int TableAdapterInstanceCount
    {
      get
      {
label_1:
        int num1 = 898338689;
        int num2;
        int adapterInstanceCount;
        bool flag;
        while (true)
        {
          uint num3;
          switch ((num3 = (uint) (num1 ^ 391044170)) % 7U)
          {
            case 0:
              adapterInstanceCount = num2;
              num1 = 163970139;
              continue;
            case 1:
              num1 = (int) num3 * 1032122629 ^ -487020140;
              continue;
            case 2:
              goto label_1;
            case 3:
              ++num2;
              num1 = (int) num3 * -644250020 ^ -915473360;
              continue;
            case 4:
              num2 = 0;
              flag = this._tableTableAdapter != null;
              num1 = (int) num3 * 2079874196 ^ -1299920539;
              continue;
            case 6:
              int num4 = !flag ? 1565354881 : (num4 = 1777439239);
              num1 = num4 ^ (int) num3 * -1812134541;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return adapterInstanceCount;
      }
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    private int UpdateUpdatedRows(
      AccountsDataSet dataSet,
      List<DataRow> allChangedRows,
      List<DataRow> allAddedRows)
    {
      int num1 = 0;
label_1:
      int num2 = -1674837700;
      int num3;
      while (true)
      {
        uint num4;
        DataRow[] realUpdatedRows;
        bool flag;
        int num5;
        switch ((num4 = (uint) (num2 ^ -1973127585)) % 14U)
        {
          case 0:
            num2 = (int) num4 * -1096024713 ^ -1137799238;
            continue;
          case 1:
            num2 = (int) num4 * -840450572 ^ -1201123871;
            continue;
          case 2:
            if (realUpdatedRows != null)
            {
              num2 = (int) num4 * -1432203722 ^ -1070317925;
              continue;
            }
            num5 = 0;
            break;
          case 3:
            num2 = -1843894909;
            continue;
          case 4:
            num2 = (int) num4 * -392200721 ^ -1584163494;
            continue;
          case 5:
            realUpdatedRows = this.GetRealUpdatedRows(dataSet.Table.Select((string) null, (string) null, DataViewRowState.ModifiedCurrent), allAddedRows);
            num2 = (int) num4 * 50824 ^ 157202533;
            continue;
          case 6:
            num5 = realUpdatedRows.Length != 0 ? 1 : 0;
            break;
          case 8:
            num3 = num1;
            num2 = -194751922;
            continue;
          case 9:
            num2 = (int) num4 * 1299021519 ^ 1248000492;
            continue;
          case 10:
            num1 += this._tableTableAdapter.Update(realUpdatedRows);
            allChangedRows.AddRange((IEnumerable<DataRow>) realUpdatedRows);
            num2 = (int) num4 * 1156634263 ^ 771864572;
            continue;
          case 11:
            goto label_1;
          case 12:
            int num6 = !flag ? -1364790357 : (num6 = -1644374949);
            num2 = num6 ^ (int) num4 * -363140397;
            continue;
          case 13:
            flag = this._tableTableAdapter != null;
            num2 = (int) num4 * 473774527 ^ -14842950;
            continue;
          default:
            goto label_18;
        }
        int num7;
        num2 = num7 = num5 != 0 ? -1532515242 : (num7 = -605414862);
      }
label_18:
      return num3;
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    private int UpdateInsertedRows(AccountsDataSet dataSet, List<DataRow> allAddedRows)
    {
      int num1 = 0;
label_1:
      int num2 = 1686604989;
      int num3;
      while (true)
      {
        uint num4;
        DataRow[] dataRowArray;
        bool flag;
        int num5;
        switch ((num4 = (uint) (num2 ^ 606713481)) % 15U)
        {
          case 1:
            num2 = (int) num4 * -775950503 ^ 1155908931;
            continue;
          case 2:
            dataRowArray = dataSet.Table.Select((string) null, (string) null, DataViewRowState.Added);
            num2 = (int) num4 * 1689403955 ^ 2102329789;
            continue;
          case 3:
            flag = this._tableTableAdapter != null;
            num2 = (int) num4 * 463433552 ^ 1382986757;
            continue;
          case 4:
            int num6 = flag ? -553675050 : (num6 = -112219285);
            num2 = num6 ^ (int) num4 * -1368405967;
            continue;
          case 5:
            num2 = (int) num4 * 2129023205 ^ 1252434601;
            continue;
          case 6:
            num2 = (int) num4 * 1413448180 ^ -1104518093;
            continue;
          case 7:
            num5 = dataRowArray.Length != 0 ? 1 : 0;
            break;
          case 8:
            allAddedRows.AddRange((IEnumerable<DataRow>) dataRowArray);
            num2 = (int) num4 * 1327334847 ^ -1475376554;
            continue;
          case 9:
            if (dataRowArray != null)
            {
              num2 = (int) num4 * -374962336 ^ 1143479546;
              continue;
            }
            num5 = 0;
            break;
          case 10:
            num3 = num1;
            num2 = 18327916;
            continue;
          case 11:
            num1 += this._tableTableAdapter.Update(dataRowArray);
            num2 = (int) num4 * -145468255 ^ 166953758;
            continue;
          case 12:
            goto label_1;
          case 13:
            num2 = 832261735;
            continue;
          case 14:
            num2 = (int) num4 * -1654284175 ^ 1806633891;
            continue;
          default:
            goto label_19;
        }
        int num7;
        num2 = num7 = num5 != 0 ? 1454709804 : (num7 = 1110667263);
      }
label_19:
      return num3;
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    private int UpdateDeletedRows(AccountsDataSet dataSet, List<DataRow> allChangedRows)
    {
      int num1 = 0;
      bool flag1 = this._tableTableAdapter != null;
label_1:
      int num2 = 1323178796;
      int num3;
      while (true)
      {
        uint num4;
        DataRow[] dataRowArray;
        bool flag2;
        int num5;
        switch ((num4 = (uint) (num2 ^ 502171268)) % 13U)
        {
          case 0:
            num1 += this._tableTableAdapter.Update(dataRowArray);
            num2 = (int) num4 * 286463926 ^ 712069701;
            continue;
          case 1:
            int num6 = !flag1 ? 1446905500 : (num6 = 1464691154);
            num2 = num6 ^ (int) num4 * 2085847112;
            continue;
          case 2:
            num2 = (int) num4 * 20512024 ^ -1756449037;
            continue;
          case 3:
            num3 = num1;
            num2 = 1169337145;
            continue;
          case 5:
            num2 = 1741050332;
            continue;
          case 6:
            allChangedRows.AddRange((IEnumerable<DataRow>) dataRowArray);
            num2 = (int) num4 * 1934746651 ^ 1955176152;
            continue;
          case 7:
            num2 = (int) num4 * 1370252031 ^ -245137085;
            continue;
          case 8:
            goto label_1;
          case 9:
            num2 = (int) num4 * -1485617484 ^ 810322618;
            continue;
          case 10:
            int num7 = !flag2 ? 1517315523 : (num7 = 151875891);
            num2 = num7 ^ (int) num4 * -13520918;
            continue;
          case 11:
            num5 = dataRowArray.Length != 0 ? 1 : 0;
            break;
          case 12:
            dataRowArray = dataSet.Table.Select((string) null, (string) null, DataViewRowState.Deleted);
            if (dataRowArray == null)
            {
              num5 = 0;
              break;
            }
            num2 = (int) num4 * -86163980 ^ -592196602;
            continue;
          default:
            goto label_17;
        }
        flag2 = num5 != 0;
        num2 = 20462800;
      }
label_17:
      return num3;
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    [DebuggerNonUserCode]
    private DataRow[] GetRealUpdatedRows(DataRow[] updatedRows, List<DataRow> allAddedRows)
    {
label_1:
      int num1 = 782771810;
      DataRow[] realUpdatedRows;
      while (true)
      {
        uint num2;
        List<DataRow> dataRowList;
        bool flag;
        int index;
        DataRow updatedRow;
        int num3;
        int num4;
        switch ((num2 = (uint) (num1 ^ 1721599776)) % 24U)
        {
          case 0:
            num1 = (int) num2 * 1925154351 ^ 1026860585;
            continue;
          case 1:
            num1 = (int) num2 * -367744319 ^ 1812048267;
            continue;
          case 2:
            num1 = (int) num2 * -997873225 ^ -877238093;
            continue;
          case 3:
            int num5 = allAddedRows.Contains(updatedRow) ? 1918818805 : (num5 = 962600697);
            num1 = num5 ^ (int) num2 * -2136474499;
            continue;
          case 4:
            int num6 = flag ? -1642837708 : (num6 = -482849095);
            num1 = num6 ^ (int) num2 * 830824049;
            continue;
          case 5:
            goto label_1;
          case 6:
            dataRowList.Add(updatedRow);
            num1 = (int) num2 * 594619644 ^ 1028222831;
            continue;
          case 7:
            updatedRow = updatedRows[index];
            num1 = 1178690515;
            continue;
          case 8:
            num1 = (int) num2 * -223456733 ^ -715467557;
            continue;
          case 9:
            realUpdatedRows = updatedRows;
            num1 = (int) num2 * 178147584 ^ -533093242;
            continue;
          case 10:
            if (updatedRows == null)
            {
              num3 = 1;
              break;
            }
            num1 = (int) num2 * -1213412417 ^ -1619988526;
            continue;
          case 11:
            num1 = (int) num2 * -78513750 ^ 1177570872;
            continue;
          case 12:
            num3 = updatedRows.Length < 1 ? 1 : 0;
            break;
          case 13:
            if (allAddedRows == null)
            {
              num4 = 1;
              goto label_16;
            }
            else
            {
              num1 = 595873167;
              continue;
            }
          case 15:
            num4 = allAddedRows.Count < 1 ? 1 : 0;
            goto label_16;
          case 16:
            realUpdatedRows = dataRowList.ToArray();
            num1 = (int) num2 * 761658176 ^ 241787894;
            continue;
          case 17:
            index = 0;
            num1 = (int) num2 * -11936711 ^ -2030499591;
            continue;
          case 18:
            ++index;
            num1 = 1162998915;
            continue;
          case 19:
            int num7;
            num1 = num7 = index >= updatedRows.Length ? 21119736 : (num7 = 1139370807);
            continue;
          case 20:
            dataRowList = new List<DataRow>();
            num1 = 1885519289;
            continue;
          case 21:
            realUpdatedRows = updatedRows;
            num1 = (int) num2 * 1644639141 ^ -1837392862;
            continue;
          case 22:
            num1 = (int) num2 * 559457703 ^ 629552572;
            continue;
          case 23:
            num1 = (int) num2 * -1044552558 ^ 25968967;
            continue;
          default:
            goto label_31;
        }
        flag = num3 != 0;
        num1 = 188356012;
        continue;
label_16:
        int num8;
        num1 = num8 = num4 == 0 ? 1363163700 : (num8 = 790974538);
      }
label_31:
      return realUpdatedRows;
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    [DebuggerNonUserCode]
    public virtual int UpdateAll(AccountsDataSet dataSet)
    {
label_1:
      int num1 = -2073165252;
      Dictionary<object, IDbConnection> dictionary;
      IDbConnection connection;
      IDbTransaction dbTransaction;
      bool flag1;
      List<DataAdapter> dataAdapterList;
      int num2;
      DataSet dataSet1;
      List<DataRow> allChangedRows;
      List<DataRow> allAddedRows;
      int num3;
      while (true)
      {
        uint num4;
        bool flag2;
        bool flag3;
        bool flag4;
        bool dataSetBeforeUpdate;
        bool flag5;
        int num5;
        switch ((num4 = (uint) (num1 ^ -732658984)) % 38U)
        {
          case 0:
            goto label_1;
          case 1:
            int num6;
            num1 = num6 = connection.State == ConnectionState.Closed ? -1671336153 : (num6 = -888049893);
            continue;
          case 2:
            dataSet1 = new DataSet();
            dataSet1.Merge((DataSet) dataSet);
            num1 = (int) num4 * -1718226991 ^ 1130361995;
            continue;
          case 3:
            num1 = (int) num4 * 597202870 ^ -1367351805;
            continue;
          case 4:
            flag2 = connection == null;
            num1 = (int) num4 * 1459635085 ^ -1450219468;
            continue;
          case 5:
            dataAdapterList = new List<DataAdapter>();
            num1 = (int) num4 * 1894202886 ^ -1792070821;
            continue;
          case 6:
            goto label_9;
          case 7:
            num1 = (int) num4 * -2105702069 ^ 308154541;
            continue;
          case 8:
            num1 = (int) num4 * 1061855094 ^ -2076362019;
            continue;
          case 9:
            dictionary = new Dictionary<object, IDbConnection>();
            num1 = (int) num4 * 852336697 ^ -567898269;
            continue;
          case 11:
            flag4 = (connection.State & ConnectionState.Broken) == ConnectionState.Broken;
            num1 = (int) num4 * -1328845552 ^ -61324954;
            continue;
          case 12:
            int num7 = !flag5 ? -1108348550 : (num7 = -585021505);
            num1 = num7 ^ (int) num4 * -1050658232;
            continue;
          case 13:
            goto label_26;
          case 14:
            int num8 = flag4 ? 183890417 : (num8 = 1029822375);
            num1 = num8 ^ (int) num4 * 1465757331;
            continue;
          case 15:
            num1 = (int) num4 * 1574671311 ^ 248160826;
            continue;
          case 16:
            int num9 = dbTransaction != null ? -1515242470 : (num9 = -1270627141);
            num1 = num9 ^ (int) num4 * -1060311997;
            continue;
          case 17:
            dataSetBeforeUpdate = this.BackupDataSetBeforeUpdate;
            num1 = (int) num4 * 616506746 ^ 1610740215;
            continue;
          case 18:
            if (this._tableTableAdapter != null)
            {
              num1 = -1568910707;
              continue;
            }
            num5 = 0;
            break;
          case 19:
            num5 = !this.MatchTableAdapterConnection((IDbConnection) this._tableTableAdapter.Connection) ? 1 : 0;
            break;
          case 20:
            num3 = 0;
            num1 = (int) num4 * 225302175 ^ 791120549;
            continue;
          case 21:
            dbTransaction = connection.BeginTransaction();
            num1 = -1298211040;
            continue;
          case 22:
            goto label_34;
          case 23:
            connection.Open();
            flag1 = true;
            num1 = (int) num4 * -711616756 ^ 1133961943;
            continue;
          case 24:
            int num10 = flag3 ? -147512648 : (num10 = -1714743238);
            num1 = num10 ^ (int) num4 * 1061257076;
            continue;
          case 25:
            flag1 = false;
            num1 = -1968932039;
            continue;
          case 26:
            flag5 = dataSet == null;
            num1 = (int) num4 * 680237940 ^ -1838363306;
            continue;
          case 27:
            goto label_149;
          case 28:
            num2 = 0;
            dataSet1 = (DataSet) null;
            num1 = (int) num4 * -957674594 ^ 835584559;
            continue;
          case 29:
            num1 = (int) num4 * 1978322658 ^ -669568432;
            continue;
          case 30:
            flag3 = !dataSet.HasChanges();
            num1 = -1313909548;
            continue;
          case 31:
            int num11 = dataSetBeforeUpdate ? 89302123 : (num11 = 1551984699);
            num1 = num11 ^ (int) num4 * 1899034265;
            continue;
          case 32:
            int num12 = flag2 ? -645039483 : (num12 = -625581305);
            num1 = num12 ^ (int) num4 * -2084953661;
            continue;
          case 33:
            connection.Close();
            num1 = (int) num4 * 1219764102 ^ 552687578;
            continue;
          case 34:
            allChangedRows = new List<DataRow>();
            allAddedRows = new List<DataRow>();
            num1 = -1748767773;
            continue;
          case 35:
            goto label_31;
          case 36:
            connection = this.Connection;
            num1 = -754646680;
            continue;
          case 37:
            num1 = (int) num4 * -1392096997 ^ -1322548095;
            continue;
          default:
            goto label_41;
        }
        int num13;
        num1 = num13 = num5 == 0 ? -925864576 : (num13 = -280588593);
      }
label_9:
      throw new ApplicationException("The transaction cannot begin. The current data connection does not support transactions or the current state is not allowing the transaction to begin.");
label_26:
      throw new ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterManager TableAdapter property to a valid TableAdapter instance.");
label_31:
      throw new ArgumentNullException(nameof (dataSet));
label_34:
      throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
label_41:
      try
      {
label_43:
        int num14 = -1904630484;
        int index1;
        DataRow[] array1;
        bool flag6;
        int index2;
        DataRow[] array2;
        DataRow dataRow1;
        bool flag7;
        DataRow dataRow2;
        bool flag8;
        bool changesDuringUpdate;
        bool flag9;
        while (true)
        {
          uint num15;
          switch ((num15 = (uint) (num14 ^ -732658984)) % 47U)
          {
            case 0:
              num14 = -346332247;
              continue;
            case 1:
              num14 = (int) num15 * -451334765 ^ 1881852799;
              continue;
            case 2:
              num2 += this.UpdateDeletedRows(dataSet, allChangedRows);
              num14 = -1859989686;
              continue;
            case 3:
              dataAdapterList.Add((DataAdapter) this._tableTableAdapter.Adapter);
              num14 = (int) num15 * -255572844 ^ -1334759336;
              continue;
            case 4:
              int num16 = flag9 ? 544157674 : (num16 = 127018897);
              num14 = num16 ^ (int) num15 * -696281576;
              continue;
            case 5:
              this._tableTableAdapter.Transaction = (SqlTransaction) dbTransaction;
              num14 = (int) num15 * -1950007481 ^ -1868510076;
              continue;
            case 6:
              index2 = 0;
              num14 = (int) num15 * 2064907040 ^ 831116550;
              continue;
            case 7:
              flag8 = 0 < allChangedRows.Count;
              num14 = -536576849;
              continue;
            case 8:
              int num17 = 0 >= allAddedRows.Count ? 1309516542 : (num17 = 1459103823);
              num14 = num17 ^ (int) num15 * -494178590;
              continue;
            case 9:
              num2 += this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows);
              num2 += this.UpdateInsertedRows(dataSet, allAddedRows);
              num14 = (int) num15 * 90757878 ^ 1626248896;
              continue;
            case 10:
              ++index1;
              num14 = (int) num15 * -1167708708 ^ -1019691745;
              continue;
            case 11:
              num14 = (int) num15 * -550804516 ^ -953440116;
              continue;
            case 12:
              num14 = (int) num15 * 1478733212 ^ -713976899;
              continue;
            case 13:
              num14 = (int) num15 * 1495715365 ^ -1800312395;
              continue;
            case 14:
              index1 = 0;
              num14 = (int) num15 * 1996335233 ^ 1409229728;
              continue;
            case 15:
              goto label_43;
            case 16:
              num14 = -1611276109;
              continue;
            case 17:
              flag7 = this.UpdateOrder == TableAdapterManager.UpdateOrderOption.UpdateInsertDelete;
              num14 = -1184269122;
              continue;
            case 18:
              dataRow1.AcceptChanges();
              num14 = (int) num15 * -1369276379 ^ 2049023757;
              continue;
            case 19:
              changesDuringUpdate = this._tableTableAdapter.Adapter.AcceptChangesDuringUpdate;
              num14 = (int) num15 * 432189325 ^ -1713818456;
              continue;
            case 20:
              ++index2;
              num14 = (int) num15 * 1825275248 ^ -321186491;
              continue;
            case 21:
              flag6 = index1 < array1.Length;
              num14 = -766222429;
              continue;
            case 22:
              int num18 = !changesDuringUpdate ? -1460382872 : (num18 = -413606620);
              num14 = num18 ^ (int) num15 * -1179683302;
              continue;
            case 23:
              num14 = (int) num15 * -1575258353 ^ -538122193;
              continue;
            case 24:
              int num19;
              num14 = num19 = index2 >= array2.Length ? -1526611226 : (num19 = -46862399);
              continue;
            case 25:
              this._tableTableAdapter.Connection = (SqlConnection) connection;
              num14 = (int) num15 * -793152103 ^ -90846361;
              continue;
            case 26:
              dictionary.Add((object) this._tableTableAdapter, (IDbConnection) this._tableTableAdapter.Connection);
              num14 = (int) num15 * 2056859231 ^ -1523313112;
              continue;
            case 27:
              this._tableTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
              num14 = (int) num15 * 665739429 ^ 1180601308;
              continue;
            case 28:
              array1 = new DataRow[allAddedRows.Count];
              allAddedRows.CopyTo(array1);
              num14 = (int) num15 * 1359178528 ^ -259825336;
              continue;
            case 29:
              int num20 = flag6 ? 371882837 : (num20 = 422503064);
              num14 = num20 ^ (int) num15 * -2131638833;
              continue;
            case 30:
              dbTransaction.Commit();
              num14 = (int) num15 * -1593459137 ^ -1432933334;
              continue;
            case 31:
              int num21 = flag7 ? -1979646075 : (num21 = -1483356030);
              num14 = num21 ^ (int) num15 * -49757735;
              continue;
            case 32:
              flag9 = this._tableTableAdapter != null;
              num14 = (int) num15 * 1740294440 ^ 208281109;
              continue;
            case 33:
              num14 = (int) num15 * 336095594 ^ 682704016;
              continue;
            case 34:
              array2 = new DataRow[allChangedRows.Count];
              num14 = (int) num15 * 1855504700 ^ 2103127272;
              continue;
            case 35:
              num14 = -172027679;
              continue;
            case 36:
              num14 = (int) num15 * -1265340113 ^ 1559886845;
              continue;
            case 37:
              num2 += this.UpdateInsertedRows(dataSet, allAddedRows);
              num2 += this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows);
              num14 = -1394218259;
              continue;
            case 38:
              dataRow2.AcceptChanges();
              num14 = (int) num15 * -1356631177 ^ 840198386;
              continue;
            case 39:
              num14 = (int) num15 * -258334695 ^ -2083665699;
              continue;
            case 40:
              dataRow2 = array2[index2];
              num14 = (int) num15 * 611566076 ^ 938223617;
              continue;
            case 41:
              int num22 = flag8 ? 996830427 : (num22 = 1104342893);
              num14 = num22 ^ (int) num15 * -345191230;
              continue;
            case 42:
              num14 = (int) num15 * -863121880 ^ 936077723;
              continue;
            case 44:
              num14 = (int) num15 * -782199987 ^ -1597660789;
              continue;
            case 45:
              allChangedRows.CopyTo(array2);
              num14 = (int) num15 * -508174537 ^ -128652410;
              continue;
            case 46:
              dataRow1 = array1[index1];
              num14 = -569602148;
              continue;
            default:
              goto label_145;
          }
        }
      }
      catch (Exception ex)
      {
        dbTransaction.Rollback();
label_91:
        int num23 = -1300850501;
        int index;
        DataRow[] array;
        DataRow dataRow;
        while (true)
        {
          uint num24;
          switch ((num24 = (uint) (num23 ^ -732658984)) % 24U)
          {
            case 0:
              num23 = (int) num24 * -1079133576 ^ -182819824;
              continue;
            case 1:
              array = new DataRow[allAddedRows.Count];
              num23 = (int) num24 * 1768036654 ^ 1434840434;
              continue;
            case 3:
              int num25 = !this.BackupDataSetBeforeUpdate ? 1990508274 : (num25 = 1558059385);
              num23 = num25 ^ (int) num24 * -1319355079;
              continue;
            case 4:
              dataRow.SetAdded();
              num23 = (int) num24 * -1258689292 ^ -459478025;
              continue;
            case 5:
              dataSet.Clear();
              num23 = (int) num24 * -97930153 ^ 1452885342;
              continue;
            case 6:
              num23 = (int) num24 * -8579674 ^ -1032143345;
              continue;
            case 7:
              num23 = (int) num24 * 516867343 ^ -176420481;
              continue;
            case 8:
              num23 = -2034763805;
              continue;
            case 9:
              num23 = -2063196378;
              continue;
            case 10:
              dataSet.Merge(dataSet1);
              num23 = (int) num24 * -1580027712 ^ 1707232815;
              continue;
            case 11:
              dataRow = array[index];
              dataRow.AcceptChanges();
              num23 = (int) num24 * 324714722 ^ -276383222;
              continue;
            case 12:
              Debug.Assert(dataSet1 != null);
              num23 = (int) num24 * 954069051 ^ -564482862;
              continue;
            case 13:
              num23 = (int) num24 * -1158714794 ^ 1186090556;
              continue;
            case 14:
              num23 = (int) num24 * -1821363553 ^ 1711803791;
              continue;
            case 15:
              index = 0;
              num23 = (int) num24 * -207767311 ^ 1869031614;
              continue;
            case 16:
              num23 = -2038600670;
              continue;
            case 17:
              int num26;
              num23 = num26 = index < array.Length ? -1833007760 : (num26 = -1488311424);
              continue;
            case 18:
              num23 = (int) num24 * 703317653 ^ 960348630;
              continue;
            case 19:
              num23 = (int) num24 * 862135049 ^ 1335843353;
              continue;
            case 20:
              allAddedRows.CopyTo(array);
              num23 = (int) num24 * -1393464491 ^ -614718205;
              continue;
            case 21:
              goto label_91;
            case 22:
              int num27 = 0 >= allAddedRows.Count ? -638335624 : (num27 = -1758226831);
              num23 = num27 ^ (int) num24 * 1504009196;
              continue;
            case 23:
              ++index;
              num23 = (int) num24 * 1017883418 ^ 2111960903;
              continue;
            default:
              goto label_115;
          }
        }
label_115:
        throw ex;
      }
      finally
      {
label_117:
        int num28 = -693946522;
        DataAdapter[] array;
        int index;
        DataAdapter dataAdapter;
        bool flag10;
        while (true)
        {
          uint num29;
          switch ((num29 = (uint) (num28 ^ -732658984)) % 27U)
          {
            case 0:
              num28 = (int) num29 * -2111192561 ^ 1154053089;
              continue;
            case 2:
              flag10 = index < array.Length;
              num28 = -1005324116;
              continue;
            case 3:
              num28 = (int) num29 * 45371918 ^ -150607999;
              continue;
            case 4:
              connection.Close();
              num28 = (int) num29 * -1991194771 ^ 2131534071;
              continue;
            case 5:
              num28 = (int) num29 * 987856609 ^ -395496094;
              continue;
            case 6:
              dataAdapterList.CopyTo(array);
              num28 = (int) num29 * 1198755383 ^ -303534063;
              continue;
            case 7:
              num28 = (int) num29 * 1450791892 ^ 420624755;
              continue;
            case 8:
              ++index;
              num28 = (int) num29 * 1810327529 ^ -1289736568;
              continue;
            case 9:
              index = 0;
              num28 = (int) num29 * -184461368 ^ 225397081;
              continue;
            case 10:
              int num30 = flag10 ? -39921991 : (num30 = -847044048);
              num28 = num30 ^ (int) num29 * 547677103;
              continue;
            case 11:
              int num31;
              num28 = num31 = 0 >= dataAdapterList.Count ? -729500669 : (num31 = -870282857);
              continue;
            case 12:
              num28 = (int) num29 * 249159056 ^ 1650978251;
              continue;
            case 13:
              this._tableTableAdapter.Connection = (SqlConnection) dictionary[(object) this._tableTableAdapter];
              num28 = (int) num29 * 517654506 ^ -1873452143;
              continue;
            case 14:
              goto label_117;
            case 15:
              this._tableTableAdapter.Transaction = (SqlTransaction) null;
              num28 = (int) num29 * 349503061 ^ -1312015047;
              continue;
            case 16:
              num28 = (int) num29 * -723295131 ^ 1420989792;
              continue;
            case 17:
              num28 = (int) num29 * 1774338495 ^ 759494541;
              continue;
            case 18:
              dataAdapter.AcceptChangesDuringUpdate = true;
              num28 = (int) num29 * -852835158 ^ -550141489;
              continue;
            case 19:
              num28 = (int) num29 * -1769095120 ^ -1018704513;
              continue;
            case 20:
              num28 = (int) num29 * 1422644348 ^ -1335660685;
              continue;
            case 21:
              int num32;
              num28 = num32 = this._tableTableAdapter != null ? -1160503231 : (num32 = -755086361);
              continue;
            case 22:
              num28 = -1334804627;
              continue;
            case 23:
              array = new DataAdapter[dataAdapterList.Count];
              num28 = (int) num29 * -1428229397 ^ 1210326232;
              continue;
            case 24:
              dataAdapter = array[index];
              num28 = (int) num29 * -167754062 ^ 1249105652;
              continue;
            case 25:
              num28 = (int) num29 * -596892454 ^ 1497042579;
              continue;
            case 26:
              int num33 = flag1 ? -828335333 : (num33 = -901677421);
              num28 = num33 ^ (int) num29 * 1224910951;
              continue;
            default:
              goto label_144;
          }
        }
label_144:;
      }
label_145:
      num3 = num2;
label_146:
      int num34 = -388380125;
      while (true)
      {
        uint num35;
        switch ((num35 = (uint) (num34 ^ -732658984)) % 3U)
        {
          case 0:
            goto label_146;
          case 2:
            num34 = (int) num35 * -2109778938 ^ -107857880;
            continue;
          default:
            goto label_149;
        }
      }
label_149:
      return num3;
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    protected virtual void SortSelfReferenceRows(
      DataRow[] rows,
      DataRelation relation,
      bool childFirst)
    {
      Array.Sort<DataRow>(rows, (IComparer<DataRow>) new TableAdapterManager.SelfReferenceComparer(relation, childFirst));
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    [DebuggerNonUserCode]
    protected virtual bool MatchTableAdapterConnection(IDbConnection inputConnection)
    {
label_1:
      int num1 = -1370210131;
      bool flag1;
      while (true)
      {
        uint num2;
        bool flag2;
        int num3;
        switch ((num2 = (uint) (num1 ^ -1023066538)) % 13U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 2076399283 ^ -732383947;
            continue;
          case 2:
            if (this.Connection != null)
            {
              num1 = -725078327;
              continue;
            }
            num3 = 1;
            break;
          case 3:
            num1 = (int) num2 * -326810708 ^ -1083005543;
            continue;
          case 5:
            num3 = inputConnection == null ? 1 : 0;
            break;
          case 6:
            flag1 = false;
            num1 = -1455384826;
            continue;
          case 7:
            flag1 = true;
            num1 = (int) num2 * 1172485825 ^ -1413216973;
            continue;
          case 8:
            flag2 = this._connection != null;
            num1 = (int) num2 * -1141950479 ^ -404429010;
            continue;
          case 9:
            flag1 = true;
            num1 = (int) num2 * 219971517 ^ 786442618;
            continue;
          case 10:
            int num4;
            num1 = num4 = !string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, StringComparison.Ordinal) ? -1000264 : (num4 = -350593662);
            continue;
          case 11:
            flag1 = true;
            num1 = (int) num2 * 1536688048 ^ -1063442919;
            continue;
          case 12:
            int num5 = flag2 ? 740089047 : (num5 = 535774965);
            num1 = num5 ^ (int) num2 * -138053143;
            continue;
          default:
            goto label_17;
        }
        int num6;
        num1 = num6 = num3 == 0 ? -1656831728 : (num6 = -1051979142);
      }
label_17:
      return flag1;
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    public enum UpdateOrderOption
    {
      InsertUpdateDelete,
      UpdateInsertDelete,
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    private class SelfReferenceComparer : IComparer<DataRow>
    {
      private DataRelation _relation;
      private int _childFirst;

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      [DebuggerNonUserCode]
      internal SelfReferenceComparer(DataRelation relation, bool childFirst)
      {
        this._relation = relation;
        if (childFirst)
          this._childFirst = -1;
        else
          this._childFirst = 1;
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      [DebuggerNonUserCode]
      private DataRow GetRoot(DataRow row, out int distance)
      {
label_1:
        int num1 = 2000467441;
        DataRow root;
        while (true)
        {
          uint num2;
          IDictionary<DataRow, DataRow> dictionary;
          DataRow parentRow;
          DataRow dataRow;
          int num3;
          int num4;
          switch ((num2 = (uint) (num1 ^ 677916107)) % 34U)
          {
            case 0:
              dataRow = parentRow;
              dictionary[parentRow] = parentRow;
              num1 = (int) num2 * 48229581 ^ 1217919272;
              continue;
            case 1:
              num1 = (int) num2 * -1880467469 ^ -747995547;
              continue;
            case 2:
              ++distance;
              num1 = (int) num2 * -555278850 ^ -134395804;
              continue;
            case 3:
              num1 = (int) num2 * -373446555 ^ -385985168;
              continue;
            case 4:
              parentRow = parentRow.GetParentRow(this._relation, DataRowVersion.Default);
              num1 = (int) num2 * 1032274530 ^ 503747065;
              continue;
            case 5:
              num1 = 768747991;
              continue;
            case 6:
              dictionary[row] = row;
              num1 = (int) num2 * 1527415911 ^ -928986470;
              continue;
            case 7:
              num3 = !dictionary.ContainsKey(parentRow) ? 1 : 0;
              goto label_11;
            case 8:
              dictionary.Clear();
              num1 = (int) num2 * 1374375657 ^ 1379908867;
              continue;
            case 9:
              ++distance;
              num1 = (int) num2 * -1590522746 ^ 790297075;
              continue;
            case 10:
              parentRow = row.GetParentRow(this._relation, DataRowVersion.Default);
              num1 = (int) num2 * -1247639222 ^ -944467932;
              continue;
            case 11:
              root = dataRow;
              num1 = 1427037456;
              continue;
            case 12:
              dictionary[row] = row;
              num1 = (int) num2 * 1835818800 ^ -944123895;
              continue;
            case 13:
              distance = 0;
              dictionary = (IDictionary<DataRow, DataRow>) new Dictionary<DataRow, DataRow>();
              num1 = (int) num2 * 605512194 ^ -1448656857;
              continue;
            case 14:
              num1 = (int) num2 * 1447934572 ^ 1979086659;
              continue;
            case 15:
              int num5 = distance != 0 ? -1646869463 : (num5 = -723573983);
              num1 = num5 ^ (int) num2 * 181838359;
              continue;
            case 16:
              if (parentRow == null)
              {
                num3 = 0;
                goto label_11;
              }
              else
              {
                num1 = 328321372;
                continue;
              }
            case 18:
              dataRow = row;
              num1 = (int) num2 * 1317297552 ^ -2134474826;
              continue;
            case 19:
              dataRow = parentRow;
              dictionary[parentRow] = parentRow;
              num1 = (int) num2 * -1588452953 ^ 1468663075;
              continue;
            case 20:
              parentRow = parentRow.GetParentRow(this._relation, DataRowVersion.Original);
              num1 = (int) num2 * -1547027156 ^ -1011264831;
              continue;
            case 21:
              num1 = (int) num2 * -271183655 ^ -1831082560;
              continue;
            case 22:
              num1 = (int) num2 * -1093880218 ^ -1413770235;
              continue;
            case 23:
              num1 = (int) num2 * 1286624397 ^ 659046343;
              continue;
            case 24:
              num1 = 839012178;
              continue;
            case 25:
              num1 = (int) num2 * 1096692106 ^ -1372948103;
              continue;
            case 26:
              num1 = (int) num2 * 2086218808 ^ -506319321;
              continue;
            case 27:
              num1 = (int) num2 * -651822435 ^ 1254382370;
              continue;
            case 28:
              if (parentRow == null)
              {
                num4 = 0;
                break;
              }
              num1 = 711085632;
              continue;
            case 29:
              num4 = !dictionary.ContainsKey(parentRow) ? 1 : 0;
              break;
            case 30:
              parentRow = row.GetParentRow(this._relation, DataRowVersion.Original);
              num1 = (int) num2 * 1819361758 ^ 758813673;
              continue;
            case 31:
              goto label_1;
            case 32:
              Debug.Assert(row != null);
              num1 = (int) num2 * 442155427 ^ -1280807029;
              continue;
            case 33:
              num1 = (int) num2 * 1022211914 ^ 1897125339;
              continue;
            default:
              goto label_41;
          }
          int num6;
          num1 = num6 = num4 == 0 ? 2033395050 : (num6 = 442228658);
          continue;
label_11:
          int num7;
          num1 = num7 = num3 == 0 ? 1818447986 : (num7 = 1970995587);
        }
label_41:
        return root;
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      [DebuggerNonUserCode]
      public int Compare(DataRow row1, DataRow row2)
      {
label_1:
        int num1 = 121218436;
        int num2;
        while (true)
        {
          uint num3;
          bool flag1;
          bool flag2;
          bool flag3;
          int distance1;
          DataRow root1;
          DataRow root2;
          bool flag4;
          int distance2;
          int num4;
          switch ((num3 = (uint) (num1 ^ 1321120619)) % 31U)
          {
            case 0:
              if (root2.Table == null)
              {
                num4 = 0;
                break;
              }
              num1 = 1467153470;
              continue;
            case 2:
              distance1 = 0;
              root1 = this.GetRoot(row2, out distance1);
              int num5 = root2 == root1 ? 787923066 : (num5 = 639892609);
              num1 = num5 ^ (int) num3 * 589579454;
              continue;
            case 3:
              num1 = (int) num3 * 507552222 ^ 312643567;
              continue;
            case 4:
              num2 = 0;
              num1 = (int) num3 * 1033672095 ^ -401280932;
              continue;
            case 5:
              num1 = (int) num3 * -281751420 ^ -1656387991;
              continue;
            case 6:
              num4 = root1.Table != null ? 1 : 0;
              break;
            case 7:
              num1 = 570410704;
              continue;
            case 8:
              distance2 = 0;
              num1 = 624934653;
              continue;
            case 9:
              num1 = (int) num3 * -1298379405 ^ 1316955381;
              continue;
            case 10:
              num1 = (int) num3 * -1487527127 ^ -1861543724;
              continue;
            case 11:
              flag2 = root2.Table.Rows.IndexOf(root2) < root1.Table.Rows.IndexOf(root1);
              num1 = (int) num3 * -1237470263 ^ -156622720;
              continue;
            case 12:
              num2 = -1;
              num1 = (int) num3 * 1819699626 ^ -2084852579;
              continue;
            case 13:
              num1 = (int) num3 * -1277462813 ^ -2086180303;
              continue;
            case 14:
              num2 = -1;
              num1 = (int) num3 * -1101107567 ^ 1763979510;
              continue;
            case 15:
              num1 = (int) num3 * -413239561 ^ 2018172525;
              continue;
            case 16:
              flag1 = row1 == null;
              num1 = 908001017;
              continue;
            case 17:
              flag3 = row2 == null;
              num1 = 502793790;
              continue;
            case 18:
              int num6 = !flag4 ? 1174672913 : (num6 = 1932085374);
              num1 = num6 ^ (int) num3 * -2073206160;
              continue;
            case 19:
              num1 = (int) num3 * 1708996151 ^ -984680396;
              continue;
            case 20:
              num1 = (int) num3 * 906145875 ^ 1774695945;
              continue;
            case 21:
              num2 = 1;
              num1 = (int) num3 * 196669021 ^ -507163828;
              continue;
            case 22:
              num2 = 1;
              num1 = (int) num3 * -1610089648 ^ 1028636529;
              continue;
            case 23:
              root2 = this.GetRoot(row1, out distance2);
              num1 = (int) num3 * -177832443 ^ -1078719352;
              continue;
            case 24:
              flag4 = row1 == row2;
              num1 = (int) num3 * 904966569 ^ -1214594384;
              continue;
            case 25:
              int num7 = flag3 ? -48158703 : (num7 = -1234343359);
              num1 = num7 ^ (int) num3 * 24209176;
              continue;
            case 26:
              int num8 = flag1 ? -923549750 : (num8 = -1022501245);
              num1 = num8 ^ (int) num3 * 294370544;
              continue;
            case 27:
              num2 = this._childFirst * distance2.CompareTo(distance1);
              num1 = (int) num3 * 1771284370 ^ -1778611470;
              continue;
            case 28:
              goto label_1;
            case 29:
              num1 = (int) num3 * -464236615 ^ 1702126956;
              continue;
            case 30:
              int num9 = !flag2 ? 141058004 : (num9 = 1833121898);
              num1 = num9 ^ (int) num3 * -1243771966;
              continue;
            default:
              goto label_35;
          }
          Debug.Assert(num4 != 0);
          num1 = 2133561974;
        }
label_35:
        return num2;
      }
    }
  }
}
