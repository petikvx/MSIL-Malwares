// Decompiled with JetBrains decompiler
// Type: 903211523809.Core.523302036718
// Assembly: 903211523809, Version=16.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: 9299602E-5CAC-472E-8784-954A0E70F0DC
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-930e3513275891a4d2d1e51b0fb588f4b7f0b665bd972c7e0ccfececc5c3933e.exe

using \u003543959430850;
using \u003737667015054;
using \u003903211523809.Models;
using \u003903211523809.Utils;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

namespace \u003903211523809.Core
{
  public static class \u003523302036718
  {
    private static \u003375710858065 \u003748437836198(string _param0)
    {
      FileInfo[] files = new DirectoryInfo(_param0).GetFiles("*.jpg");
      if (!((IEnumerable<FileInfo>) files).Any<FileInfo>())
        return (\u003375710858065) null;
      FileInfo fileInfo;
      if (\u003615024831903.\u003578795105337)
      {
        Random random = new Random();
        fileInfo = files[random.Next(0, files.Length - 1)];
      }
      else
      {
        fileInfo = ((IEnumerable<FileInfo>) files).OrderByDescending<FileInfo, DateTime>((Func<FileInfo, DateTime>) (_param1 => _param1.LastWriteTime)).FirstOrDefault<FileInfo>();
        if (fileInfo == null)
          return (\u003375710858065) null;
      }
      string fullName = fileInfo.FullName;
      string path = fullName + ".xml";
      string str = "";
      if (!File.Exists(path))
        path = Path.Combine(Path.GetDirectoryName(fullName), ((IEnumerable<string>) Path.GetFileName(fullName).Split('_')).First<string>() + ".xml");
      if (File.Exists(path))
      {
        try
        {
          str = ((\u003581914384348) path.\u003478744482088<\u003434347662765>()).get_image().\u003858762153601;
        }
        catch
        {
        }
      }
      \u003375710858065 obj = new \u003375710858065();
      ((\u003887690503632) obj).set_ImageFileName(fullName);
      obj.\u003481786698295 = str;
      obj.\u003984569295495 = "";
      return obj;
    }

    public static IList<\u003633496981392> \u003444442313774()
    {
      List<\u003633496981392> objList1 = new List<\u003633496981392>();
      string path = Path.Combine(\u003084399638497.\u003212313026258(), "data", "holidays.csv");
      if (!File.Exists(path))
        return (IList<\u003633496981392>) objList1;
      foreach (string readAllLine in File.ReadAllLines(path))
      {
        if (!string.IsNullOrWhiteSpace(readAllLine))
        {
          string[] strArray1 = readAllLine.Split(new char[1]
          {
            ','
          }, StringSplitOptions.RemoveEmptyEntries);
          if (strArray1.Length >= 2)
          {
            string str1 = strArray1[0].Replace("\"", string.Empty).Trim();
            string str2 = strArray1[1].Replace("\"", string.Empty).Trim();
            string[] strArray2 = str1.Split('/');
            if (strArray2.Length == 3)
            {
              List<\u003633496981392> objList2 = objList1;
              \u003633496981392 obj = new \u003633496981392();
              obj.\u003040891291099 = str2;
              obj.\u003659000117422 = int.Parse(strArray2[0]);
              obj.\u003671495388012 = int.Parse(strArray2[1]);
              ((\u003486711033987) obj).set_Day(int.Parse(strArray2[2]));
              objList2.Add(obj);
            }
          }
        }
      }
      return (IList<\u003633496981392>) objList1;
    }
  }
}
