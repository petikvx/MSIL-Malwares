// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONClass
// Assembly: RuntimeParameterIn, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: E46F8FBF-E963-420D-9D24-515F2113904E
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-899a15627241e59e9347d18a6286ac2587425c3cd941d6b095f01d1a9205dac5.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONClass : JSONNode, IEnumerable
  {
    private Dictionary<string, JSONNode> m_Dict = new Dictionary<string, JSONNode>();

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -878370916;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2097399238)) % 7U)
          {
            case 0:
              num1 = (int) num2 * 1524750402 ^ 1836832001;
              continue;
            case 1:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = -755742939;
              continue;
            case 2:
              jsonNode = this.m_Dict[aKey];
              num1 = (int) num2 * 920926423 ^ -1072410461;
              continue;
            case 3:
              goto label_1;
            case 4:
              num1 = (int) num2 * -911878141 ^ -782498902;
              continue;
            case 5:
              int num3 = this.m_Dict.ContainsKey(aKey) ? -403553598 : (num3 = -722255074);
              num1 = num3 ^ (int) num2 * -418081383;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 1138341658;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1667711931)) % 7U)
          {
            case 0:
              num1 = (int) num2 * -916831574 ^ 1926990015;
              continue;
            case 1:
              goto label_3;
            case 2:
              int num3 = !this.m_Dict.ContainsKey(aKey) ? 1746623214 : (num3 = 1359908241);
              num1 = num3 ^ (int) num2 * -1388214415;
              continue;
            case 3:
              this.m_Dict[aKey] = value;
              num1 = (int) num2 * 351403906 ^ 1553812087;
              continue;
            case 4:
              goto label_1;
            case 5:
              this.m_Dict.Add(aKey, value);
              num1 = 21939055;
              continue;
            case 6:
              num1 = (int) num2 * 1559963024 ^ 411656019;
              continue;
            default:
              goto label_9;
          }
        }
label_3:
        return;
label_9:;
      }
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
        if (aIndex < 0)
          goto label_4;
label_1:
        int num1 = -107615985;
label_2:
        bool flag;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1266794277)) % 8U)
          {
            case 0:
              int num3 = !flag ? -1934608206 : (num3 = -957529260);
              num1 = num3 ^ (int) num2 * 1453109120;
              continue;
            case 1:
              jsonNode = (JSONNode) null;
              num1 = -1787118179;
              continue;
            case 2:
              goto label_1;
            case 4:
              goto label_3;
            case 5:
              num1 = (int) num2 * -462395775 ^ 1367926533;
              continue;
            case 6:
              num1 = (int) num2 * -1923420150 ^ 1443154412;
              continue;
            case 7:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 17575950 ^ -161003300;
              continue;
            default:
              goto label_11;
          }
        }
label_3:
        int num4 = aIndex >= this.m_Dict.Count ? 1 : 0;
        goto label_5;
label_11:
        return jsonNode;
label_4:
        num4 = 1;
label_5:
        flag = num4 != 0;
        num1 = -154953997;
        goto label_2;
      }
      set
      {
        if (aIndex < 0)
          goto label_5;
label_1:
        int num1 = -857413123;
label_2:
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -934905519)) % 5U)
          {
            case 0:
              goto label_3;
            case 1:
              num1 = (int) num2 * -88802986 ^ 1927641616;
              continue;
            case 2:
              goto label_4;
            case 3:
              int num3 = !flag ? -939109729 : (num3 = -1167257926);
              num1 = num3 ^ (int) num2 * -1382411069;
              continue;
            case 4:
              goto label_1;
            default:
              goto label_9;
          }
        }
label_3:
        return;
label_9:
        return;
label_4:
        int num4 = aIndex >= this.m_Dict.Count ? 1 : 0;
        goto label_6;
label_5:
        num4 = 1;
label_6:
        flag = num4 != 0;
        num1 = -1651969924;
        goto label_2;
      }
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = -1997055487;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1140479033)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              count = this.m_Dict.Count;
              num1 = (int) num2 * -2107354061 ^ -1679478932;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = -1832990849;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2083936560)) % 15U)
        {
          case 0:
            flag1 = this.m_Dict.ContainsKey(aKey);
            num1 = (int) num2 * 934595799 ^ 186006867;
            continue;
          case 1:
            num1 = (int) num2 * -2139596728 ^ -317557385;
            continue;
          case 2:
            num1 = (int) num2 * -995193420 ^ 2006370858;
            continue;
          case 3:
            flag2 = !JSONClass.\u200D⁬‏‍‭‫‭⁭⁮​‌⁫‎​⁬‌‪⁯‍⁪‌‏‏‭‌‍‪‮‫‮‎​⁬⁪‌‭‮⁯‫‮‮(aKey);
            num1 = (int) num2 * -892941728 ^ -429636796;
            continue;
          case 4:
            num1 = (int) num2 * 1234171051 ^ -910126117;
            continue;
          case 5:
            num1 = (int) num2 * 1404275692 ^ -1272940696;
            continue;
          case 6:
            num1 = (int) num2 * 1794886508 ^ -1072449353;
            continue;
          case 7:
            int num3 = !flag1 ? -2083957383 : (num3 = -1748984238);
            num1 = num3 ^ (int) num2 * -843920383;
            continue;
          case 8:
            num1 = -1413153641;
            continue;
          case 9:
            this.m_Dict.Add(Guid.NewGuid().ToString(), aItem);
            num1 = -1100132429;
            continue;
          case 10:
            goto label_3;
          case 11:
            goto label_1;
          case 12:
            this.m_Dict.Add(aKey, aItem);
            num1 = -1750398890;
            continue;
          case 13:
            this.m_Dict[aKey] = aItem;
            num1 = (int) num2 * 736044860 ^ -1727043859;
            continue;
          case 14:
            int num4 = !flag2 ? -1082382352 : (num4 = -919379932);
            num1 = num4 ^ (int) num2 * 1071271042;
            continue;
          default:
            goto label_17;
        }
      }
label_3:
      return;
label_17:;
    }

    public override JSONNode Remove(string aKey)
    {
label_1:
      int num1 = -1152877897;
      bool flag;
      JSONNode jsonNode1;
      JSONNode jsonNode2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -112329925)) % 9U)
        {
          case 0:
            jsonNode1 = this.m_Dict[aKey];
            num1 = -1567104136;
            continue;
          case 1:
            flag = !this.m_Dict.ContainsKey(aKey);
            num1 = (int) num2 * 1515825874 ^ -984364666;
            continue;
          case 2:
            goto label_1;
          case 4:
            int num3 = !flag ? 1815186980 : (num3 = 1158221064);
            num1 = num3 ^ (int) num2 * -872430547;
            continue;
          case 5:
            num1 = (int) num2 * -645513257 ^ 1881733097;
            continue;
          case 6:
            jsonNode2 = jsonNode1;
            num1 = (int) num2 * -1486723856 ^ -985962890;
            continue;
          case 7:
            this.m_Dict.Remove(aKey);
            num1 = (int) num2 * 76495831 ^ -117707110;
            continue;
          case 8:
            jsonNode2 = (JSONNode) null;
            num1 = (int) num2 * 1569655193 ^ -518508256;
            continue;
          default:
            goto label_10;
        }
      }
label_10:
      return jsonNode2;
    }

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = 563810252;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        int num3;
        switch ((num2 = (uint) (num1 ^ 1961511637)) % 8U)
        {
          case 0:
            jsonNode = (JSONNode) null;
            num1 = 1643783062;
            continue;
          case 1:
            if (aIndex >= 0)
            {
              num1 = (int) num2 * -2110312267 ^ 1483953538;
              continue;
            }
            num3 = 1;
            break;
          case 2:
            num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
            break;
          case 3:
            num1 = (int) num2 * -1044649838 ^ 1449076876;
            continue;
          case 4:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 90774071 ^ -169478996;
            continue;
          case 5:
            num1 = (int) num2 * -765784045 ^ 1399105893;
            continue;
          case 6:
            goto label_1;
          default:
            goto label_12;
        }
        int num4;
        num1 = num4 = num3 != 0 ? 1530677297 : (num4 = 56695413);
      }
label_12:
      return jsonNode;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = 1868963090;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1234891551)) % 3U)
          {
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -490605544 ^ -99458023;
              continue;
            case 2:
              goto label_2;
            default:
              goto label_9;
          }
        }
      }
      catch
      {
label_6:
        int num3 = 1563615638;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1234891551)) % 3U)
          {
            case 0:
              goto label_6;
            case 1:
              jsonNode = (JSONNode) null;
              num3 = (int) num4 * 452264435 ^ -636212763;
              continue;
            default:
              goto label_9;
          }
        }
      }
label_9:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONClass.\u003Cget_Childs\u003Ed__14 getChildsD14 = new JSONClass.\u003Cget_Childs\u003Ed__14(-2);
        getChildsD14.\u003C\u003E4__this = this;
label_1:
        int num1 = -1293448722;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1871987804)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              childs = (IEnumerable<JSONNode>) getChildsD14;
              num1 = (int) num2 * -943991813 ^ 794418125;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return childs;
      }
    }

    public IEnumerator GetEnumerator() => (IEnumerator) new JSONClass.\u003CGetEnumerator\u003Ed__15(0)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString()
    {
      string str1 = "{";
      using (Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator())
      {
label_8:
        int num1 = !enumerator.MoveNext() ? -1462141727 : (num1 = -1120256786);
        KeyValuePair<string, JSONNode> current;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -966615244)) % 9U)
          {
            case 0:
              int num3 = JSONClass.\u200C‌‎‫⁯⁫⁬⁫⁯⁬⁯‏⁫​​‫⁮‌​⁪‏‏‫​​‫‌⁫‍‪‌‎‏‭‮‌​⁪​⁭‮(str1) > 2 ? 1615796850 : (num3 = 2143565286);
              num1 = num3 ^ (int) num2 * -468436097;
              continue;
            case 1:
              num1 = (int) num2 * -1145786101 ^ 1791667260;
              continue;
            case 3:
              str1 = JSONClass.\u206A‏⁪​⁭‎‫⁫​⁫‬‍⁫‍⁫⁫⁮⁬‮‌‎‌‪​⁮‪‍‍⁫‭⁯⁮‌⁯‫⁮⁯‪‍⁮‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\":",
                JSONClass.\u206C‎⁯​‫‮​‏‬‍⁭​⁫⁭‎⁭‏‮‍‌⁬‪‫⁯‮‎⁫‌‍‭‎⁪⁮‫​‏‌⁭‮⁫‮((object) current.Value)
              });
              num1 = -779711088;
              continue;
            case 4:
              str1 = JSONClass.\u206C⁫⁪⁪‮‎‮⁪​⁯‬​‬⁫‮​‎⁫‍⁬⁪​⁯⁪‫⁮‬⁫​​⁫‭⁭⁮‫⁯‮‌‌‍‮(str1, ", ");
              num1 = (int) num2 * 1399931708 ^ -1649496720;
              continue;
            case 5:
              num1 = -1120256786;
              continue;
            case 6:
              goto label_8;
            case 7:
              current = enumerator.Current;
              num1 = -2024935477;
              continue;
            case 8:
              num1 = (int) num2 * 2062915552 ^ 287975614;
              continue;
            default:
              goto label_12;
          }
        }
      }
label_12:
      string str2 = JSONClass.\u206C⁫⁪⁪‮‎‮⁪​⁯‬​‬⁫‮​‎⁫‍⁬⁪​⁯⁪‫⁮‬⁫​​⁫‭⁭⁮‫⁯‮‌‌‍‮(str1, "}");
label_13:
      int num4 = -399237287;
      string str3;
      while (true)
      {
        uint num5;
        switch ((num5 = (uint) (num4 ^ -966615244)) % 4U)
        {
          case 1:
            str3 = str2;
            num4 = (int) num5 * 936057526 ^ 1629941329;
            continue;
          case 2:
            goto label_13;
          case 3:
            num4 = (int) num5 * -1616553326 ^ 659513558;
            continue;
          default:
            goto label_17;
        }
      }
label_17:
      return str3;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 813395079;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1233326239)) % 3U)
        {
          case 1:
            str1 = "{ ";
            num1 = (int) num2 * -2004013118 ^ 1006726814;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator();
      try
      {
label_9:
        int num3 = enumerator.MoveNext() ? 866774254 : (num3 = 1064137087);
        KeyValuePair<string, JSONNode> current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1233326239)) % 9U)
          {
            case 0:
              num3 = 866774254;
              continue;
            case 1:
              int num5 = JSONClass.\u200C‌‎‫⁯⁫⁬⁫⁯⁬⁯‏⁫​​‫⁮‌​⁪‏‏‫​​‫‌⁫‍‪‌‎‏‭‮‌​⁪​⁭‮(str1) > 3 ? 28386941 : (num5 = 89149890);
              num3 = num5 ^ (int) num4 * 658490199;
              continue;
            case 3:
              str1 = JSONClass.\u206A‏⁪​⁭‎‫⁫​⁫‬‍⁫‍⁫⁫⁮⁬‮‌‎‌‪​⁮‪‍‍⁫‭⁯⁮‌⁯‫⁮⁯‪‍⁮‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\" : ",
                current.Value.ToString(JSONClass.\u206C⁫⁪⁪‮‎‮⁪​⁯‬​‬⁫‮​‎⁫‍⁬⁪​⁯⁪‫⁮‬⁫​​⁫‭⁭⁮‫⁯‮‌‌‍‮(aPrefix, "   "))
              });
              num3 = (int) num4 * -445632796 ^ -1774297886;
              continue;
            case 4:
              str1 = JSONClass.\u206C⁫⁪⁪‮‎‮⁪​⁯‬​‬⁫‮​‎⁫‍⁬⁪​⁯⁪‫⁮‬⁫​​⁫‭⁭⁮‫⁯‮‌‌‍‮(str1, ", ");
              num3 = (int) num4 * -1725024258 ^ 1955618416;
              continue;
            case 5:
              str1 = JSONClass.\u202D⁯‬⁬⁮⁭‌⁫‪⁮‪‮‎‮⁮‮‮‫⁮⁭‪‪​⁫‭‭‍‭⁫‎‬⁮⁭⁭⁮‮‭‍‪‬‮(str1, "\n", aPrefix, "   ");
              num3 = 545547542;
              continue;
            case 6:
              num3 = (int) num4 * -763471018 ^ 161747629;
              continue;
            case 7:
              current = enumerator.Current;
              num3 = 1021865037;
              continue;
            case 8:
              goto label_9;
            default:
              goto label_20;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_16:
        int num6 = 788947285;
        while (true)
        {
          uint num7;
          switch ((num7 = (uint) (num6 ^ 1233326239)) % 3U)
          {
            case 0:
              goto label_16;
            case 1:
              num6 = (int) num7 * -827359706 ^ 428987575;
              continue;
            default:
              goto label_19;
          }
        }
label_19:;
      }
label_20:
      string str2 = JSONClass.\u202D⁯‬⁬⁮⁭‌⁫‪⁮‪‮‎‮⁮‮‮‫⁮⁭‪‪​⁫‭‭‍‭⁫‎‬⁮⁭⁭⁮‮‭‍‪‬‮(str1, "\n", aPrefix, "}");
label_21:
      int num8 = 407140738;
      string str3;
      while (true)
      {
        uint num9;
        switch ((num9 = (uint) (num8 ^ 1233326239)) % 4U)
        {
          case 0:
            num8 = (int) num9 * 2051024855 ^ -1520984840;
            continue;
          case 1:
            str3 = str2;
            num8 = (int) num9 * -738704998 ^ -1271415967;
            continue;
          case 2:
            goto label_21;
          default:
            goto label_25;
        }
      }
label_25:
      return str3;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
      JSONClass.\u202D‌‫​⁭‬⁮⁭⁯‪​‍⁯‭‍‬⁮⁮‬‍‮‫​⁪‮‭⁮‍‎⁭⁪‫⁬‭‮‫‍⁫‪‪‮(aWriter, (byte) 2);
label_1:
      int num1 = -539225848;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1375536085)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -326847681 ^ -1005118302;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      JSONClass.\u200D‌‮⁯‫‭‏‮‫⁫‮‍‭‫‎⁫​‬‬‍‬‏‪‬⁭⁬‫⁯‌‭‏‏‍‎‬‫‏​‎‍‮(aWriter, this.m_Dict.Count);
      Dictionary<string, JSONNode>.KeyCollection.Enumerator enumerator = this.m_Dict.Keys.GetEnumerator();
      try
      {
label_12:
        int num3 = enumerator.MoveNext() ? -2050306204 : (num3 = -2142855966);
        string current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -1375536085)) % 9U)
          {
            case 0:
              goto label_19;
            case 1:
              num3 = (int) num4 * 1287778884 ^ 307852273;
              continue;
            case 2:
              num3 = (int) num4 * 1544053031 ^ -909691249;
              continue;
            case 3:
              num3 = (int) num4 * 717671292 ^ -979597578;
              continue;
            case 4:
              goto label_12;
            case 5:
              JSONClass.\u202A‮⁭‬‬‬‫‌⁮‪⁯‫‬‫‭⁯⁫‌‎⁭‎​​‮‏‎⁯⁬‭⁫‮‪⁮⁪⁬‍‪⁪‫‍‮(aWriter, current);
              num3 = (int) num4 * 1278741509 ^ -527890374;
              continue;
            case 6:
              this.m_Dict[current].Serialize(aWriter);
              num3 = (int) num4 * -640665166 ^ 1904577190;
              continue;
            case 7:
              current = enumerator.Current;
              num3 = -808801390;
              continue;
            case 8:
              num3 = -2050306204;
              continue;
            default:
              goto label_15;
          }
        }
label_19:
        return;
label_15:;
      }
      finally
      {
        enumerator.Dispose();
label_17:
        int num5 = -1553627744;
        while (true)
        {
          uint num6;
          switch ((num6 = (uint) (num5 ^ -1375536085)) % 3U)
          {
            case 1:
              num5 = (int) num6 * -1493605536 ^ -2035157053;
              continue;
            case 2:
              goto label_17;
            default:
              goto label_21;
          }
        }
label_21:;
      }
    }

    public JSONClass()
    {
label_1:
      int num1 = -1183558716;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1853044730)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * 811492280 ^ -1012370226;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static bool \u200D⁬‏‍‭‫‭⁭⁮​‌⁫‎​⁬‌‪⁯‍⁪‌‏‏‭‌‍‪‮‫‮‎​⁬⁪‌‭‮⁯‫‮‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    static int \u200C‌‎‫⁯⁫⁬⁫⁯⁬⁯‏⁫​​‫⁮‌​⁪‏‏‫​​‫‌⁫‍‪‌‎‏‭‮‌​⁪​⁭‮([In] string obj0) => obj0.Length;

    static string \u206C⁫⁪⁪‮‎‮⁪​⁯‬​‬⁫‮​‎⁫‍⁬⁪​⁯⁪‫⁮‬⁫​​⁫‭⁭⁮‫⁯‮‌‌‍‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u206C‎⁯​‫‮​‏‬‍⁭​⁫⁭‎⁭‏‮‍‌⁬‪‫⁯‮‎⁫‌‍‭‎⁪⁮‫​‏‌⁭‮⁫‮([In] object obj0) => obj0.ToString();

    static string \u206A‏⁪​⁭‎‫⁫​⁫‬‍⁫‍⁫⁫⁮⁬‮‌‎‌‪​⁮‪‍‍⁫‭⁯⁮‌⁯‫⁮⁯‪‍⁮‮([In] string[] obj0) => string.Concat(obj0);

    static string \u202D⁯‬⁬⁮⁭‌⁫‪⁮‪‮‎‮⁮‮‮‫⁮⁭‪‪​⁫‭‭‍‭⁫‎‬⁮⁭⁭⁮‮‭‍‪‬‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u202D‌‫​⁭‬⁮⁭⁯‪​‍⁯‭‍‬⁮⁮‬‍‮‫​⁪‮‭⁮‍‎⁭⁪‫⁬‭‮‫‍⁫‪‪‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u200D‌‮⁯‫‭‏‮‫⁫‮‍‭‫‎⁫​‬‬‍‬‏‪‬⁭⁬‫⁯‌‭‏‏‍‎‬‫‏​‎‍‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u202A‮⁭‬‬‬‫‌⁮‪⁯‫‬‫‭⁯⁫‌‎⁭‎​​‮‏‎⁯⁬‭⁫‮‪⁮⁪⁬‍‪⁪‫‍‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
