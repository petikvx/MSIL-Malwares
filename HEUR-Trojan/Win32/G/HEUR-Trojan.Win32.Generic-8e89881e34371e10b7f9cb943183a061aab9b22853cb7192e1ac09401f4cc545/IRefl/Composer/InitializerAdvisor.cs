// Decompiled with JetBrains decompiler
// Type: IRefl.Composer.InitializerAdvisor
// Assembly: IRefl, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A29A65F6-B7ED-422C-83D4-B9EFD61E5F13
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-8e89881e34371e10b7f9cb943183a061aab9b22853cb7192e1ac09401f4cc545.exe

using ProjNet.Services;
using ProjNet.Structs;
using System.ComponentModel;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace IRefl.Composer
{
  public class InitializerAdvisor : Form
  {
    private IContainer m_ReaderAdvisor;
    private DataGridView ruleAdvisor;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public InitializerAdvisor()
    {
      int num1 = 5;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 2:
            // ISSUE: explicit constructor call
            base.\u002Ector();
            goto case 1;
          case 1:
          case 3:
            this.InvokeStatus();
            this.ruleAdvisor.DataSource = (object) CallbackRegistry.CreateAdvisor();
            num1 = 6;
            continue;
          case 4:
            this.m_ReaderAdvisor = (IContainer) null;
            int num2 = 0;
            num1 = InitializerAdvisor.PrepareModel() ? num2 : num2;
            continue;
          case 5:
            PageAdvisorStructBuilder.PrepareCreator();
            num1 = 4;
            continue;
          case 6:
            goto label_7;
          default:
            num1 = 1;
            continue;
        }
      }
label_7:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    protected override void Dispose(bool createkey)
    {
      int num1 = 0;
      if (true)
        goto label_7;
label_1:
      int num2;
      if (createkey)
      {
        num1 = 4;
        goto label_7;
      }
      else
        num2 = 0;
label_5:
      if (num2 == 0)
        goto label_10;
      else
        goto label_9;
label_7:
      while (true)
      {
        switch (num1)
        {
          case 0:
            goto label_1;
          case 1:
          case 4:
            goto label_3;
          case 2:
          case 3:
            goto label_9;
          case 5:
            goto label_6;
          default:
            num1 = 3;
            continue;
        }
      }
label_3:
      num2 = this.m_ReaderAdvisor != null ? 1 : 0;
      goto label_5;
label_6:
      return;
label_9:
      this.m_ReaderAdvisor.Dispose();
label_10:
      base.Dispose(createkey);
      num1 = 5;
      goto label_7;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void InvokeStatus()
    {
      int num1 = 7;
      while (true)
      {
        int num2;
        switch (num1)
        {
          case 0:
            this.ruleAdvisor.AllowUserToResizeColumns = false;
            if (!InitializerAdvisor.PrepareModel())
            {
              num1 = 1;
              continue;
            }
            goto case 2;
          case 1:
            this.ruleAdvisor.AllowUserToResizeRows = false;
            this.ruleAdvisor.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.AllCells;
            this.ruleAdvisor.AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.AllCells;
            this.ruleAdvisor.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize;
            num2 = 8;
            break;
          case 2:
            ((ISupportInitialize) this.ruleAdvisor).BeginInit();
            this.SuspendLayout();
            this.ruleAdvisor.AllowUserToAddRows = false;
            this.ruleAdvisor.AllowUserToDeleteRows = false;
            if (!InitializerAdvisor.PrepareModel())
            {
              num1 = 0;
              continue;
            }
            goto case 7;
          case 3:
            ((ISupportInitialize) this.ruleAdvisor).EndInit();
            this.ResumeLayout(false);
            num2 = 10;
            break;
          case 4:
          case 8:
            this.ruleAdvisor.Dock = DockStyle.Fill;
            goto case 5;
          case 5:
          case 9:
            this.ruleAdvisor.Location = new Point(0, 0);
            this.ruleAdvisor.Name = "dataGridView";
            this.ruleAdvisor.ReadOnly = true;
            this.ruleAdvisor.Size = new Size(523, 311);
            this.ruleAdvisor.TabIndex = 0;
            this.AutoScaleDimensions = new SizeF(6f, 13f);
            this.AutoScaleMode = AutoScaleMode.Font;
            num1 = 6;
            continue;
          case 6:
            this.AutoSize = true;
            this.ClientSize = new Size(523, 311);
            this.Controls.Add((Control) this.ruleAdvisor);
            this.Name = "ReadAuthorISBNChildForm";
            this.Text = "AuthorISBN";
            num2 = 3;
            break;
          case 7:
            this.ruleAdvisor = new DataGridView();
            num1 = 2;
            continue;
          case 10:
            goto label_13;
          default:
            num2 = 9;
            break;
        }
        num1 = num2;
      }
label_13:;
    }

    internal static bool SetModel() => true;

    internal static bool PrepareModel() => false;
  }
}
