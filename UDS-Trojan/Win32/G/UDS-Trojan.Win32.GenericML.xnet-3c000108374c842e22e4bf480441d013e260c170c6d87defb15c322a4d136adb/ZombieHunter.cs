// Decompiled with JetBrains decompiler
// Type: MiniGames_Team9.ZombieHunter
// Assembly: DependentHan, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A86A1B94-F21E-4DD9-9B87-E146CFB070D9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.07\UDS-Trojan.Win32.GenericML.xnet-3c000108374c842e22e4bf480441d013e260c170c6d87defb15c322a4d136adb.exe

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.Windows.Forms;
using System.Windows.Forms.Layout;

namespace MiniGames_Team9
{
  public class ZombieHunter : Form
  {
    private bool goLeft;
    private bool goRight;
    private bool goUp;
    private bool goDown;
    private bool gameOver;
    private string facing = "up";
    private int playerHealth = 100;
    private int speed = 10;
    private int ammo = 10;
    private int zombieSpeed = 3;
    private Random randNum = new Random();
    private int score;
    private List<PictureBox> zombiesList = new List<PictureBox>();
    private IContainer components = (IContainer) null;
    private PictureBox player;
    private ProgressBar healthBar;
    private Label label1;
    private Label txtScore;
    private Label txtAmmo;
    private Timer GameTimer;

    public ZombieHunter()
    {
      this.InitializeComponent();
      this.RestartGame();
    }

    private void MainTimerEvent(object sender, EventArgs e)
    {
      if (this.playerHealth > 1)
      {
        this.healthBar.Value = this.playerHealth;
      }
      else
      {
        this.gameOver = true;
        this.GameTimer.Stop();
      }
      this.txtAmmo.Text = "Ammo: " + this.ammo.ToString();
      this.txtScore.Text = "Kills: " + this.score.ToString();
      if (this.goLeft && this.player.Left > 0)
        this.player.Left -= this.speed;
      if (this.goRight && this.player.Left + this.player.Width < this.ClientSize.Width)
        this.player.Left += this.speed;
      if (this.goUp && this.player.Top > 45)
        this.player.Top -= this.speed;
      if (this.goDown && this.player.Top + this.player.Height < this.ClientSize.Height)
        this.player.Top += this.speed;
      foreach (Control control1 in (ArrangedElementCollection) this.Controls)
      {
        Rectangle bounds;
        if (control1 is PictureBox && (string) control1.Tag == "ammo")
        {
          bounds = this.player.Bounds;
          if (bounds.IntersectsWith(control1.Bounds))
          {
            this.Controls.Remove(control1);
            control1.Dispose();
            this.ammo += 5;
          }
        }
        if (control1 is PictureBox && (string) control1.Tag == "zombie")
        {
          bounds = this.player.Bounds;
          if (bounds.IntersectsWith(control1.Bounds))
            --this.playerHealth;
          if (control1.Left > this.player.Left)
            control1.Left -= this.zombieSpeed;
          if (control1.Left < this.player.Left)
            control1.Left += this.zombieSpeed;
          if (control1.Top > this.player.Top)
            control1.Top -= this.zombieSpeed;
          if (control1.Top < this.player.Top)
            control1.Top += this.zombieSpeed;
        }
        foreach (Control control2 in (ArrangedElementCollection) this.Controls)
        {
          if (control2 is PictureBox && (string) control2.Tag == "bullet" && control1 is PictureBox && (string) control1.Tag == "zombie")
          {
            bounds = control1.Bounds;
            if (bounds.IntersectsWith(control2.Bounds))
            {
              ++this.score;
              this.Controls.Remove(control2);
              control2.Dispose();
              this.Controls.Remove(control1);
              control1.Dispose();
              this.zombiesList.Remove((PictureBox) control1);
              this.MakeZombies();
            }
          }
        }
      }
    }

    private void KeyIsDown(object sender, KeyEventArgs e)
    {
      if (this.gameOver)
        return;
      if (e.KeyCode == Keys.Left)
      {
        this.goLeft = true;
        this.facing = "left";
      }
      if (e.KeyCode == Keys.Right)
      {
        this.goRight = true;
        this.facing = "right";
      }
      if (e.KeyCode == Keys.Up)
      {
        this.goUp = true;
        this.facing = "up";
      }
      if (e.KeyCode != Keys.Down)
        return;
      this.goDown = true;
      this.facing = "down";
    }

    private void KeyIsUp(object sender, KeyEventArgs e)
    {
      if (e.KeyCode == Keys.Left)
        this.goLeft = false;
      if (e.KeyCode == Keys.Right)
        this.goRight = false;
      if (e.KeyCode == Keys.Up)
        this.goUp = false;
      if (e.KeyCode == Keys.Down)
        this.goDown = false;
      if (e.KeyCode == Keys.Space && this.ammo > 0 && !this.gameOver)
      {
        --this.ammo;
        this.ShootBullet(this.facing);
        if (this.ammo < 1)
          this.DropAmmo();
      }
      if (e.KeyCode != Keys.Return || !this.gameOver)
        return;
      this.RestartGame();
    }

    private void ShootBullet(string direction) => new Bullett()
    {
      direction = direction,
      bulletLeft = (this.player.Left + this.player.Width / 2),
      bulletTop = (this.player.Top + this.player.Height / 2)
    }.MakeBullet((Form) this);

    private void MakeZombies()
    {
      PictureBox pictureBox = new PictureBox();
      pictureBox.Tag = (object) "zombie";
      pictureBox.Left = this.randNum.Next(0, 900);
      pictureBox.Top = this.randNum.Next(0, 800);
      pictureBox.SizeMode = PictureBoxSizeMode.AutoSize;
      this.zombiesList.Add(pictureBox);
      this.Controls.Add((Control) pictureBox);
      this.player.BringToFront();
    }

    private void DropAmmo()
    {
      PictureBox pictureBox = new PictureBox();
      pictureBox.SizeMode = PictureBoxSizeMode.AutoSize;
      pictureBox.Left = this.randNum.Next(10, this.ClientSize.Width - pictureBox.Width);
      pictureBox.Top = this.randNum.Next(60, this.ClientSize.Height - pictureBox.Height);
      pictureBox.Tag = (object) "ammo";
      this.Controls.Add((Control) pictureBox);
      pictureBox.BringToFront();
      this.player.BringToFront();
    }

    private void RestartGame()
    {
      foreach (Control zombies in this.zombiesList)
        this.Controls.Remove(zombies);
      this.zombiesList.Clear();
      for (int index = 0; index < 3; ++index)
        this.MakeZombies();
      this.goUp = false;
      this.goDown = false;
      this.goLeft = false;
      this.goRight = false;
      this.gameOver = false;
      this.playerHealth = 100;
      this.score = 0;
      this.ammo = 10;
      this.GameTimer.Start();
    }

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(disposing);
    }

    private void InitializeComponent()
    {
      this.components = (IContainer) new Container();
      this.player = new PictureBox();
      this.healthBar = new ProgressBar();
      this.label1 = new Label();
      this.txtScore = new Label();
      this.txtAmmo = new Label();
      this.GameTimer = new Timer(this.components);
      ((ISupportInitialize) this.player).BeginInit();
      this.SuspendLayout();
      this.player.Location = new Point(421, 467);
      this.player.Name = "player";
      this.player.Size = new Size(71, 100);
      this.player.SizeMode = PictureBoxSizeMode.AutoSize;
      this.player.TabIndex = 7;
      this.player.TabStop = false;
      this.healthBar.Location = new Point(719, 9);
      this.healthBar.Name = "healthBar";
      this.healthBar.Size = new Size(187, 23);
      this.healthBar.TabIndex = 6;
      this.healthBar.Value = 100;
      this.label1.AutoSize = true;
      this.label1.Font = new Font("Microsoft Sans Serif", 14.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.label1.ForeColor = Color.White;
      this.label1.Location = new Point(637, 9);
      this.label1.Name = "label1";
      this.label1.Size = new Size(82, 24);
      this.label1.TabIndex = 3;
      this.label1.Text = "Health: ";
      this.txtScore.AutoSize = true;
      this.txtScore.Font = new Font("Microsoft Sans Serif", 14.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.txtScore.ForeColor = Color.White;
      this.txtScore.Location = new Point(362, 9);
      this.txtScore.Name = "txtScore";
      this.txtScore.Size = new Size(71, 24);
      this.txtScore.TabIndex = 4;
      this.txtScore.Text = "Kills: 0";
      this.txtAmmo.AutoSize = true;
      this.txtAmmo.Font = new Font("Microsoft Sans Serif", 14.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.txtAmmo.ForeColor = Color.White;
      this.txtAmmo.Location = new Point(7, 9);
      this.txtAmmo.Name = "txtAmmo";
      this.txtAmmo.Size = new Size(93, 24);
      this.txtAmmo.TabIndex = 5;
      this.txtAmmo.Text = "Ammo: 0";
      this.GameTimer.Enabled = true;
      this.GameTimer.Interval = 20;
      this.GameTimer.Tick += new EventHandler(this.MainTimerEvent);
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.BackColor = SystemColors.ControlDarkDark;
      this.ClientSize = new Size(924, 661);
      this.Controls.Add((Control) this.player);
      this.Controls.Add((Control) this.healthBar);
      this.Controls.Add((Control) this.label1);
      this.Controls.Add((Control) this.txtScore);
      this.Controls.Add((Control) this.txtAmmo);
      this.Name = nameof (ZombieHunter);
      this.Text = nameof (ZombieHunter);
      this.KeyDown += new KeyEventHandler(this.KeyIsDown);
      this.KeyUp += new KeyEventHandler(this.KeyIsUp);
      ((ISupportInitialize) this.player).EndInit();
      this.ResumeLayout(false);
      this.PerformLayout();
    }
  }
}
