// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: ILegacyEvidenceAdapt, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 7C8AEC27-D027-41D5-B71C-E99019A8E594
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-a42b3919356aa815980faeac0fc6222bd4a2d6f6cc5bdc01c5a5f55014a9c66e.exe

using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = -472608931;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1493013052)) % 4U)
          {
            case 0:
              num1 = (int) num2 * -1359672333 ^ 828963127;
              continue;
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 2007676994 ^ 955741746;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 198785328;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1795136925)) % 4U)
          {
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -1691388204 ^ 1927639663;
              continue;
            case 2:
              num1 = (int) num2 * 714674005 ^ 2005844875;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual string Value
    {
      get
      {
label_1:
        int num1 = 439976733;
        string str;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1210738072)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 413353851 ^ 619597342;
              continue;
            case 1:
              str = "";
              num1 = (int) num2 * 1242977418 ^ 1854777626;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return str;
      }
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
label_1:
        int num1 = 1156186839;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1484904402)) % 4U)
          {
            case 1:
              count = 0;
              num1 = (int) num2 * 179610673 ^ 1724382825;
              continue;
            case 2:
              num1 = (int) num2 * -853217223 ^ 1974745192;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem)
    {
label_1:
      int num1 = -1165023257;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2090736518)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            this.Add("", aItem);
            num1 = (int) num2 * 994580662 ^ 1909369662;
            continue;
          case 2:
            num1 = (int) num2 * 2145223185 ^ 1450392019;
            continue;
          case 3:
            goto label_3;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public virtual JSONNode Remove(string aKey)
    {
label_1:
      int num1 = -1110554012;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -121070699)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * -559438608 ^ -1448110781;
            continue;
          case 2:
            num1 = (int) num2 * 2529581 ^ 15903416;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual JSONNode Remove(int aIndex)
    {
      JSONNode jsonNode = (JSONNode) null;
label_1:
      int num1 = 452561836;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 273611791)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -499170135 ^ 286809280;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = -577792765;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -275439160)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -1568399236 ^ 383655621;
            continue;
          case 3:
            jsonNode = aNode;
            num1 = (int) num2 * 2012112776 ^ 1920178410;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
        int num1 = this.\u003C\u003E1__state;
label_1:
        int num2 = 352933534;
        while (true)
        {
          uint num3;
          switch ((num3 = (uint) (num2 ^ 1574752727)) % 6U)
          {
            case 0:
              num2 = (int) num3 * 1053498353 ^ 2008221890;
              continue;
            case 1:
              int num4 = num1 != 0 ? 165439196 : (num4 = 1301887961);
              num2 = num4 ^ (int) num3 * 1168472315;
              continue;
            case 4:
              goto label_1;
            case 5:
              goto label_5;
            default:
              goto label_6;
          }
        }
label_5:
        return false;
label_6:
        this.\u003C\u003E1__state = -1;
        return false;
      }
    }

    public IEnumerable<JSONNode> DeepChilds
    {
      get
      {
        JSONNode.\u003Cget_DeepChilds\u003Ed__19 getDeepChildsD19 = new JSONNode.\u003Cget_DeepChilds\u003Ed__19(-2);
        getDeepChildsD19.\u003C\u003E4__this = this;
label_1:
        int num1 = -369340214;
        IEnumerable<JSONNode> deepChilds;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -828068541)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              deepChilds = (IEnumerable<JSONNode>) getDeepChildsD19;
              num1 = (int) num2 * -1636599067 ^ -1211636009;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return deepChilds;
      }
    }

    public override string ToString()
    {
label_1:
      int num1 = 694820837;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2146117776)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            str = nameof (JSONNode);
            num1 = (int) num2 * 443076462 ^ 1551361436;
            continue;
          case 2:
            num1 = (int) num2 * -1748760246 ^ 795489587;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public virtual string ToString(string aPrefix)
    {
label_1:
      int num1 = -1290041307;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -325749684)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            str = nameof (JSONNode);
            num1 = (int) num2 * -1413539011 ^ -1095765858;
            continue;
          case 3:
            num1 = (int) num2 * -1633279688 ^ -1493424038;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public virtual int AsInt
    {
      get
      {
        int result = 0;
        if (!int.TryParse(this.Value, out result))
          goto label_3;
label_1:
        int num1 = 1361243124;
label_2:
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1800532293)) % 6U)
          {
            case 1:
              asInt = result;
              num1 = (int) num2 * 1627424982 ^ 489977348;
              continue;
            case 2:
              goto label_3;
            case 3:
              num1 = (int) num2 * -643440241 ^ 99436920;
              continue;
            case 4:
              num1 = (int) num2 * -817931207 ^ -1532881347;
              continue;
            case 5:
              goto label_1;
            default:
              goto label_7;
          }
        }
label_7:
        return asInt;
label_3:
        asInt = 0;
        num1 = 972590873;
        goto label_2;
      }
      set
      {
label_1:
        int num1 = 1220387444;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1888582347)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              num1 = (int) num2 * 356728181 ^ 1904691484;
              continue;
            case 3:
              this.Value = value.ToString();
              num1 = (int) num2 * 995540656 ^ -808976591;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public virtual float AsFloat
    {
      get
      {
label_1:
        int num1 = 1053855527;
        float asFloat;
        float result;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1278619640)) % 7U)
          {
            case 0:
              asFloat = result;
              num1 = (int) num2 * -784580487 ^ 2087829178;
              continue;
            case 2:
              result = 0.0f;
              flag = float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u200F‬‍⁪⁭⁯⁪⁮‏⁫‪‫‮‍‭‏‎‎‌⁬‍‏‫⁬​‎​‪‎‍‍⁯⁪‮‏‍‬‪⁪⁬‮(), out result);
              num1 = (int) num2 * -1535700339 ^ 1674289486;
              continue;
            case 3:
              num1 = (int) num2 * 888988878 ^ -364598602;
              continue;
            case 4:
              goto label_1;
            case 5:
              asFloat = 0.0f;
              num1 = 1702541038;
              continue;
            case 6:
              int num3 = flag ? 1796529999 : (num3 = 769317615);
              num1 = num3 ^ (int) num2 * -150998403;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asFloat;
      }
      set
      {
        this.Value = value.ToString();
label_1:
        int num1 = 1169249739;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 723642255)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              num1 = (int) num2 * -1242737621 ^ 298968677;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual double AsDouble
    {
      get
      {
label_1:
        int num1 = -1306179991;
        double result;
        double asDouble;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -739605594)) % 8U)
          {
            case 0:
              flag = double.TryParse(this.Value, out result);
              num1 = (int) num2 * -1408394156 ^ 1569859375;
              continue;
            case 1:
              int num3 = flag ? 398182744 : (num3 = 93200935);
              num1 = num3 ^ (int) num2 * -186542564;
              continue;
            case 2:
              asDouble = result;
              num1 = (int) num2 * -944393465 ^ -1763238541;
              continue;
            case 4:
              num1 = (int) num2 * -1879758702 ^ -1224201483;
              continue;
            case 5:
              asDouble = 0.0;
              num1 = -1247354558;
              continue;
            case 6:
              goto label_1;
            case 7:
              result = 0.0;
              num1 = (int) num2 * -1302472479 ^ -68871871;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asDouble;
      }
      set => this.Value = value.ToString();
    }

    public virtual bool AsBool
    {
      get
      {
label_1:
        int num1 = -584089822;
        bool asBool;
        bool result;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1024550511)) % 8U)
          {
            case 0:
              flag = bool.TryParse(this.Value, out result);
              num1 = (int) num2 * 1857841742 ^ -484890995;
              continue;
            case 1:
              asBool = result;
              num1 = (int) num2 * 2102904325 ^ -1399860038;
              continue;
            case 2:
              asBool = !JSONNode.\u206C‏⁭‏⁫‬‍‭‌‫⁮‎⁭‌⁪⁯‍‎‬‪⁯‭⁭‌‭⁪‎‮‭‫⁮⁪⁫⁬‫⁫‎‍‏⁫‮(this.Value);
              num1 = -1722720012;
              continue;
            case 3:
              result = false;
              num1 = (int) num2 * 540938786 ^ -266602785;
              continue;
            case 4:
              int num3 = !flag ? 387922943 : (num3 = 505964548);
              num1 = num3 ^ (int) num2 * -34459013;
              continue;
            case 5:
              num1 = (int) num2 * -361365877 ^ 1609835352;
              continue;
            case 7:
              goto label_1;
            default:
              goto label_9;
          }
        }
label_9:
        return asBool;
      }
      set
      {
        this.Value = value ? "true" : "false";
label_1:
        int num1 = -358975527;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1994138052)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 1061807459 ^ -673702398;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = 1830027372;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1948106253)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              asArray = this as JSONArray;
              num1 = (int) num2 * -826574428 ^ -1848125202;
              continue;
            case 3:
              num1 = (int) num2 * 1124311743 ^ 885901062;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asArray;
      }
    }

    public virtual JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = -1818520672;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1609229126)) % 4U)
          {
            case 1:
              num1 = (int) num2 * 1601390672 ^ -1460569254;
              continue;
            case 2:
              asObject = this as JSONClass;
              num1 = (int) num2 * -123559932 ^ 1917535699;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s)
    {
label_1:
      int num1 = -147460447;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -994274512)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            jsonNode = (JSONNode) new JSONData(s);
            num1 = (int) num2 * -1400492853 ^ 175462442;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public static implicit operator string(JSONNode d)
    {
label_1:
      int num1 = -1031378970;
      string str1;
      while (true)
      {
        uint num2;
        string str2;
        switch ((num2 = (uint) (num1 ^ -555174822)) % 5U)
        {
          case 0:
            num1 = (int) num2 * -575984549 ^ -2095098082;
            continue;
          case 2:
            if (d == (object) null)
            {
              str2 = (string) null;
              break;
            }
            num1 = (int) num2 * -58974905 ^ -1642332574;
            continue;
          case 3:
            goto label_1;
          case 4:
            str2 = d.Value;
            break;
          default:
            goto label_9;
        }
        str1 = str2;
        num1 = -1710953625;
      }
label_9:
      return str1;
    }

    public static bool operator ==(JSONNode a, object b)
    {
      if (b != null)
        goto label_9;
label_1:
      int num1 = -816940951;
label_2:
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1449808656)) % 8U)
        {
          case 0:
            num1 = (int) num2 * 614565720 ^ 225879103;
            continue;
          case 1:
            goto label_8;
          case 2:
            int num3 = !flag2 ? -1072772504 : (num3 = -1131978511);
            num1 = num3 ^ (int) num2 * 1567812046;
            continue;
          case 3:
            goto label_1;
          case 4:
            flag1 = (object) a == b;
            num1 = -1691099616;
            continue;
          case 5:
            flag1 = true;
            num1 = (int) num2 * -631004692 ^ -1444287854;
            continue;
          case 6:
            num1 = (int) num2 * -1813271498 ^ 126468459;
            continue;
          default:
            goto label_11;
        }
      }
label_8:
      int num4 = a is JSONLazyCreator ? 1 : 0;
      goto label_10;
label_11:
      return flag1;
label_9:
      num4 = 0;
label_10:
      flag2 = num4 != 0;
      num1 = -970936558;
      goto label_2;
    }

    public static bool operator !=(JSONNode a, object b)
    {
label_1:
      int num1 = -1491755992;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -666976172)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            flag = !(a == b);
            num1 = (int) num2 * -771272640 ^ 448667218;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = 1094016954;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 439992441)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            flag = (object) this == obj;
            num1 = (int) num2 * 1547331791 ^ 121989132;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override int GetHashCode()
    {
label_1:
      int num1 = -1941390181;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2035256532)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 490346748 ^ 880170086;
            continue;
          case 3:
            hashCode = this.\u200C⁬⁬‮⁮⁯⁭‮⁬​‎⁪‏‮‌‫⁪‬‭‭⁪‭‏‫⁯⁫‎‎‎⁫‌⁭‌‮‫‮‌‍‎‫‮();
            num1 = (int) num2 * 647914703 ^ -1375636248;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return hashCode;
    }

    internal static string Escape(string aText)
    {
label_1:
      int num1 = -1419346062;
      string str1;
      int num2;
      string str2;
      char ch1;
      char ch2;
      char ch3;
      string str3;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -47071592)) % 26U)
        {
          case 0:
label_6:
            str1 = JSONNode.\u200C⁪‍⁯‪‌‬​‭‮⁬‮‭​⁬‪‪‭‪‍‏‫‌⁮‎‫‮⁮‮‬‬‏⁮‮‪‮‪⁬​‫‮(str1, "\\r");
            num1 = -722873541;
            continue;
          case 1:
            num1 = (int) num3 * 1379377369 ^ -514553236;
            continue;
          case 2:
            num1 = (int) num3 * 1037397939 ^ -952257661;
            continue;
          case 3:
            str1 = JSONNode.\u200C⁪‍⁯‪‌‬​‭‮⁬‮‭​⁬‪‪‭‪‍‏‫‌⁮‎‫‮⁮‮‬‬‏⁮‮‪‮‪⁬​‫‮(str1, "\\\\");
            num1 = -551885917;
            continue;
          case 4:
            str1 = "";
            str2 = aText;
            num2 = 0;
            num1 = (int) num3 * 1624302021 ^ 1786431482;
            continue;
          case 5:
            ch3 = ch2;
            switch (ch3)
            {
              case '\b':
                goto label_13;
              case '\t':
                goto label_3;
              case '\n':
                goto label_17;
              case '\v':
                goto label_19;
              case '\f':
                goto label_16;
              case '\r':
                goto label_6;
              default:
                num1 = (int) num3 * -1963466050 ^ 230007751;
                continue;
            }
          case 6:
label_17:
            str1 = JSONNode.\u200C⁪‍⁯‪‌‬​‭‮⁬‮‭​⁬‪‪‭‪‍‏‫‌⁮‎‫‮⁮‮‬‬‏⁮‮‪‮‪⁬​‫‮(str1, "\\n");
            num1 = -1157945061;
            continue;
          case 7:
            int num4;
            num1 = num4 = ch3 != '"' ? -1412611230 : (num4 = -1264839474);
            continue;
          case 8:
            goto label_1;
          case 9:
            num1 = (int) num3 * -946694540 ^ -1521251585;
            continue;
          case 10:
            int num5;
            num1 = num5 = num2 < JSONNode.\u202D‏‫⁭‬‏⁭⁮‌​⁯‭‌‌‬⁯‫‪‮‏⁯‏‪‬​‪‭‌‫⁯⁪⁭‌‬⁬⁫‍‍‮⁬‮(str2) ? -889968133 : (num5 = -458559362);
            continue;
          case 11:
            ch1 = JSONNode.\u202A‌⁫⁯‏‪⁯‏⁪⁭‫‪⁮‏‍‭‭‫⁮⁮​​⁯‎‪⁭⁫‮‭⁫⁭‮‭‬‍‏‏⁫⁪‎‮(str2, num2);
            ch2 = ch1;
            num1 = -1781499827;
            continue;
          case 12:
label_16:
            str1 = JSONNode.\u200C⁪‍⁯‪‌‬​‭‮⁬‮‭​⁬‪‪‭‪‍‏‫‌⁮‎‫‮⁮‮‬‬‏⁮‮‪‮‪⁬​‫‮(str1, "\\f");
            num1 = -551885917;
            continue;
          case 13:
            num1 = (int) num3 * -1239063089 ^ 751441518;
            continue;
          case 14:
label_3:
            str1 = JSONNode.\u200C⁪‍⁯‪‌‬​‭‮⁬‮‭​⁬‪‪‭‪‍‏‫‌⁮‎‫‮⁮‮‬‬‏⁮‮‪‮‪⁬​‫‮(str1, "\\t");
            num1 = -1831247876;
            continue;
          case 15:
label_19:
            str1 = JSONNode.\u200C⁪‍⁯‪‌‬​‭‮⁬‮‭​⁬‪‪‭‪‍‏‫‌⁮‎‫‮⁮‮‬‬‏⁮‮‪‮‪⁬​‫‮(str1, ch1.ToString());
            num1 = -551885917;
            continue;
          case 16:
            num1 = (int) num3 * -58071770 ^ 1234558030;
            continue;
          case 17:
            int num6;
            num1 = num6 = ch3 == '\\' ? -1646704725 : (num6 = -1798357903);
            continue;
          case 18:
            str3 = str1;
            num1 = (int) num3 * 793832474 ^ 592185270;
            continue;
          case 19:
            ++num2;
            num1 = -1955846936;
            continue;
          case 20:
            num1 = (int) num3 * 1488467605 ^ 2129437847;
            continue;
          case 21:
            num1 = (int) num3 * -2035868194 ^ -1126717847;
            continue;
          case 23:
label_13:
            str1 = JSONNode.\u200C⁪‍⁯‪‌‬​‭‮⁬‮‭​⁬‪‪‭‪‍‏‫‌⁮‎‫‮⁮‮‬‬‏⁮‮‪‮‪⁬​‫‮(str1, "\\b");
            num1 = -551885917;
            continue;
          case 24:
            str1 = JSONNode.\u200C⁪‍⁯‪‌‬​‭‮⁬‮‭​⁬‪‪‭‪‍‏‫‌⁮‎‫‮⁮‮‬‬‏⁮‮‪‮‪⁬​‫‮(str1, "\\\"");
            num1 = -985531101;
            continue;
          case 25:
            num1 = (int) num3 * -2022802141 ^ -522227150;
            continue;
          default:
            goto label_28;
        }
      }
label_28:
      return str3;
    }

    public static JSONNode Parse(string aJSON)
    {
label_1:
      int num1 = 1281760208;
      bool flag1;
      string aItem;
      JSONNode jsonNode1;
      char ch1;
      bool flag2;
      string aKey;
      bool flag3;
      Stack<JSONNode> jsonNodeStack;
      char ch2;
      char ch3;
      int num2;
      char ch4;
      bool flag4;
      bool flag5;
      bool flag6;
      bool flag7;
      bool flag8;
      bool flag9;
      bool flag10;
      JSONNode jsonNode2;
      bool flag11;
      bool flag12;
      bool flag13;
      bool flag14;
      bool flag15;
      bool flag16;
      bool flag17;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 130226921)) % 156U)
        {
          case 0:
            aItem = JSONNode.\u200C⁪‍⁯‪‌‬​‭‮⁬‮‭​⁬‪‪‭‪‍‏‫‌⁮‎‫‮⁮‮‬‬‏⁮‮‪‮‪⁬​‫‮(aItem, "\b");
            num1 = 154570549;
            continue;
          case 1:
label_120:
            ++num2;
            flag16 = flag3;
            num1 = 2111790608;
            continue;
          case 2:
            int num4 = !flag5 ? 1254661433 : (num4 = 36274214);
            num1 = num4 ^ (int) num3 * -1560508738;
            continue;
          case 3:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -65067177 ^ 867650321;
            continue;
          case 4:
            aItem = "";
            num1 = (int) num3 * 1386652124 ^ 1941068219;
            continue;
          case 5:
            int num5;
            num1 = num5 = jsonNodeStack.Count == 0 ? 494305487 : (num5 = 153850320);
            continue;
          case 6:
            num1 = (int) num3 * -1735717088 ^ -1697404448;
            continue;
          case 7:
            num1 = (int) num3 * -2070060957 ^ 518536839;
            continue;
          case 8:
            num1 = 1926075780;
            continue;
          case 9:
            num1 = (int) num3 * 1202655907 ^ -650165666;
            continue;
          case 10:
            string s = JSONNode.\u206D‬⁪⁬‏⁬⁮‏⁭‭‪⁬⁪‏‭‬​⁭‮⁮‍⁭‎⁬‪‪‭‍⁪⁫⁮‮‌⁪‬‮⁬‍⁪⁯‮(aJSON, num2 + 1, 4);
            string str1 = aItem;
            ch4 = (char) int.Parse(s, NumberStyles.AllowHexSpecifier);
            string str2 = ch4.ToString();
            aItem = JSONNode.\u200C⁪‍⁯‪‌‬​‭‮⁬‮‭​⁬‪‪‭‪‍‏‫‌⁮‎‫‮⁮‮‬‬‏⁮‮‪‮‪⁬​‫‮(str1, str2);
            num2 += 4;
            num1 = (int) num3 * -219446063 ^ 1233569679;
            continue;
          case 11:
            int num6 = !flag6 ? -1005767649 : (num6 = -66690926);
            num1 = num6 ^ (int) num3 * -249944325;
            continue;
          case 12:
            int num7;
            num1 = num7 = ch2 == '{' ? 76930247 : (num7 = 759683339);
            continue;
          case 13:
            num1 = (int) num3 * 550316584 ^ 985612572;
            continue;
          case 14:
            string str3 = aItem;
            ch4 = JSONNode.\u202A‌⁫⁯‏‪⁯‏⁪⁭‫‪⁮‏‍‭‭‫⁮⁮​​⁯‎‪⁭⁫‮‭⁫⁭‮‭‬‍‏‏⁫⁪‎‮(aJSON, num2);
            string str4 = ch4.ToString();
            aItem = JSONNode.\u200C⁪‍⁯‪‌‬​‭‮⁬‮‭​⁬‪‪‭‪‍‏‫‌⁮‎‫‮⁮‮‬‬‏⁮‮‪‮‪⁬​‫‮(str3, str4);
            num1 = (int) num3 * -879901223 ^ -136989508;
            continue;
          case 15:
            num1 = (int) num3 * -1400257525 ^ -257573966;
            continue;
          case 16:
            string str5 = aItem;
            ch4 = JSONNode.\u202A‌⁫⁯‏‪⁯‏⁪⁭‫‪⁮‏‍‭‭‫⁮⁮​​⁯‎‪⁭⁫‮‭⁫⁭‮‭‬‍‏‏⁫⁪‎‮(aJSON, num2);
            string str6 = ch4.ToString();
            aItem = JSONNode.\u200C⁪‍⁯‪‌‬​‭‮⁬‮‭​⁬‪‪‭‪‍‏‫‌⁮‎‫‮⁮‮‬‬‏⁮‮‪‮‪⁬​‫‮(str5, str6);
            num1 = (int) num3 * 413937816 ^ 1767079359;
            continue;
          case 17:
            num1 = (int) num3 * 852175543 ^ 1272546249;
            continue;
          case 18:
          case 46:
          case 66:
          case 116:
          case 125:
label_86:
            ++num2;
            num1 = 2117055213;
            continue;
          case 19:
            num1 = (int) num3 * -123154417 ^ -1868726134;
            continue;
          case 20:
            int num8 = !flag9 ? -127166530 : (num8 = -1342394769);
            num1 = num8 ^ (int) num3 * -1759038311;
            continue;
          case 21:
            int num9 = !flag4 ? 703668159 : (num9 = 331096027);
            num1 = num9 ^ (int) num3 * 1029499288;
            continue;
          case 22:
            flag8 = flag3;
            num1 = (int) num3 * 728439145 ^ -1071580259;
            continue;
          case 23:
            aItem = "";
            flag10 = jsonNodeStack.Count > 0;
            num1 = (int) num3 * -2072698489 ^ 2099472464;
            continue;
          case 24:
            flag2 = flag3;
            num1 = 152138121;
            continue;
          case 25:
            jsonNodeStack = new Stack<JSONNode>();
            jsonNode1 = (JSONNode) null;
            num2 = 0;
            num1 = (int) num3 * -555977940 ^ -1892284280;
            continue;
          case 26:
            int num10;
            num1 = num10 = ch2 <= ']' ? 575998996 : (num10 = 238714789);
            continue;
          case 27:
            aKey = "";
            num1 = 74582654;
            continue;
          case 28:
            aKey = "";
            aItem = "";
            num1 = 1047628752;
            continue;
          case 29:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 861390334 ^ 257741041;
            continue;
          case 30:
            goto label_42;
          case 31:
            ch1 = ch3;
            num1 = (int) num3 * 2105677014 ^ 629563636;
            continue;
          case 32:
            int num11 = !flag13 ? 279722542 : (num11 = 2042654584);
            num1 = num11 ^ (int) num3 * -638816431;
            continue;
          case 33:
            flag9 = JSONNode.\u202E​‍‭‎​⁬⁯‬⁭‌⁬‮⁪‏‮‪⁫‭⁪⁯‏⁪‍⁪⁫⁬‮⁯⁫‍⁫⁮​⁭​‭‫‫⁪‮(aItem, "");
            num1 = 2122873929;
            continue;
          case 34:
            num1 = (int) num3 * -46031872 ^ 268894366;
            continue;
          case 35:
            num1 = (int) num3 * -165374252 ^ 1796070863;
            continue;
          case 36:
            int num12 = flag17 ? 971907727 : (num12 = 145389513);
            num1 = num12 ^ (int) num3 * -2094371327;
            continue;
          case 37:
            aKey = JSONNode.\u202C‫‏‪‮⁪⁪‬⁪⁪‫‪​‬⁫‌⁫‪‪‍‬​⁭⁪⁯‪‫⁭⁯‮‎‏‬‫‮‪‪‫‪‬‮(aKey);
            num1 = (int) num3 * 605518236 ^ -307791228;
            continue;
          case 38:
            string str7 = aItem;
            ch4 = JSONNode.\u202A‌⁫⁯‏‪⁯‏⁪⁭‫‪⁮‏‍‭‭‫⁮⁮​​⁯‎‪⁭⁫‮‭⁫⁭‮‭‬‍‏‏⁫⁪‎‮(aJSON, num2);
            string str8 = ch4.ToString();
            aItem = JSONNode.\u200C⁪‍⁯‪‌‬​‭‮⁬‮‭​⁬‪‪‭‪‍‏‫‌⁮‎‫‮⁮‮‬‬‏⁮‮‪‮‪⁬​‫‮(str7, str8);
            num1 = (int) num3 * -1419971055 ^ 1882519055;
            continue;
          case 39:
            num1 = (int) num3 * -1151905162 ^ -1037447594;
            continue;
          case 40:
label_37:
            int num13;
            num1 = num13 = flag3 ? 285728740 : (num13 = 1763546252);
            continue;
          case 41:
label_130:
            string str9 = aItem;
            ch4 = JSONNode.\u202A‌⁫⁯‏‪⁯‏⁪⁭‫‪⁮‏‍‭‭‫⁮⁮​​⁯‎‪⁭⁫‮‭⁫⁭‮‭‬‍‏‏⁫⁪‎‮(aJSON, num2);
            string str10 = ch4.ToString();
            aItem = JSONNode.\u200C⁪‍⁯‪‌‬​‭‮⁬‮‭​⁬‪‪‭‪‍‏‫‌⁮‎‫‮⁮‮‬‬‏⁮‮‪‮‪⁬​‫‮(str9, str10);
            num1 = 1360470911;
            continue;
          case 42:
            aKey = JSONNode.\u202C‫‏‪‮⁪⁪‬⁪⁪‫‪​‬⁫‌⁫‪‪‍‬​⁭⁪⁯‪‫⁭⁯‮‎‏‬‫‮‪‪‫‪‬‮(aKey);
            num1 = (int) num3 * 860860525 ^ 1007734812;
            continue;
          case 43:
            aKey = "";
            num1 = 1742053053;
            continue;
          case 44:
            num1 = 1729433186;
            continue;
          case 45:
            flag14 = flag3;
            num1 = 483999514;
            continue;
          case 47:
            int num14 = flag12 ? -1605695319 : (num14 = -38141546);
            num1 = num14 ^ (int) num3 * 321224849;
            continue;
          case 48:
label_43:
            int num15;
            num1 = num15 = flag3 ? 764314158 : (num15 = 142124708);
            continue;
          case 49:
            num1 = (int) num3 * 1053697502 ^ -1142491905;
            continue;
          case 50:
            flag5 = JSONNode.\u202E​‍‭‎​⁬⁯‬⁭‌⁬‮⁪‏‮‪⁫‭⁪⁯‏⁪‍⁪⁫⁬‮⁯⁫‍⁫⁮​⁭​‭‫‫⁪‮(aKey, "");
            num1 = 290020575;
            continue;
          case 51:
            num1 = (int) num3 * 320112644 ^ 29703240;
            continue;
          case 52:
            int num16 = !flag2 ? -564177740 : (num16 = -1415029886);
            num1 = num16 ^ (int) num3 * 132382381;
            continue;
          case 53:
            int num17 = !flag16 ? -1540125527 : (num17 = -193299076);
            num1 = num17 ^ (int) num3 * 818538197;
            continue;
          case 54:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -869155678 ^ -2091042332;
            continue;
          case 55:
            goto label_36;
          case 56:
            ch2 = JSONNode.\u202A‌⁫⁯‏‪⁯‏⁪⁭‫‪⁮‏‍‭‭‫⁮⁮​​⁯‎‪⁭⁫‮‭⁫⁭‮‭‬‍‏‏⁫⁪‎‮(aJSON, num2);
            int num18 = ch2 <= ',' ? 784403917 : (num18 = 2001870155);
            num1 = num18 ^ (int) num3 * 1503975144;
            continue;
          case 57:
            num1 = (int) num3 * 729224864 ^ -1459692787;
            continue;
          case 58:
            num1 = (int) num3 * -1367736480 ^ 1512948560;
            continue;
          case 59:
            num1 = (int) num3 * 1626366193 ^ -32543246;
            continue;
          case 60:
            num1 = (int) num3 * -1126770512 ^ -1523669371;
            continue;
          case 61:
            aItem = "";
            num1 = (int) num3 * 1174247405 ^ -1608767557;
            continue;
          case 62:
            int num19;
            num1 = num19 = ch2 != '"' ? 1577479115 : (num19 = 715241901);
            continue;
          case 63:
            string str11 = aItem;
            ch4 = JSONNode.\u202A‌⁫⁯‏‪⁯‏⁪⁭‫‪⁮‏‍‭‭‫⁮⁮​​⁯‎‪⁭⁫‮‭⁫⁭‮‭‬‍‏‏⁫⁪‎‮(aJSON, num2);
            string str12 = ch4.ToString();
            aItem = JSONNode.\u200C⁪‍⁯‪‌‬​‭‮⁬‮‭​⁬‪‪‭‪‍‏‫‌⁮‎‫‮⁮‮‬‬‏⁮‮‪‮‪⁬​‫‮(str11, str12);
            num1 = (int) num3 * -810823883 ^ -1048240316;
            continue;
          case 64:
            num1 = (int) num3 * 1960690486 ^ 524400831;
            continue;
          case 65:
            int num20;
            num1 = num20 = ch2 != ' ' ? 1841635300 : (num20 = 665818242);
            continue;
          case 67:
            int num21;
            num1 = num21 = JSONNode.\u202E​‍‭‎​⁬⁯‬⁭‌⁬‮⁪‏‮‪⁫‭⁪⁯‏⁪‍⁪⁫⁬‮⁯⁫‍⁫⁮​⁭​‭‫‫⁪‮(aKey, "") ? 1022854114 : (num21 = 1517771645);
            continue;
          case 68:
            num1 = 1882261093;
            continue;
          case 69:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 380335662 ^ 1804100093;
            continue;
          case 70:
            int num22 = flag8 ? -1874943813 : (num22 = -991376223);
            num1 = num22 ^ (int) num3 * -2010369450;
            continue;
          case 71:
            num1 = (int) num3 * -1171113292 ^ 107171248;
            continue;
          case 72:
            switch (ch1)
            {
              case 'r':
                goto label_127;
              case 's':
                goto label_19;
              case 't':
                goto label_85;
              case 'u':
                goto label_45;
              default:
                num1 = 424802197;
                continue;
            }
          case 73:
            num1 = 320866982;
            continue;
          case 74:
            num1 = (int) num3 * 1496927926 ^ -679074559;
            continue;
          case 75:
            num1 = (int) num3 * 1361457291 ^ -1112237876;
            continue;
          case 76:
label_19:
            aItem = JSONNode.\u200C⁪‍⁯‪‌‬​‭‮⁬‮‭​⁬‪‪‭‪‍‏‫‌⁮‎‫‮⁮‮‬‬‏⁮‮‪‮‪⁬​‫‮(aItem, ch3.ToString());
            num1 = 1961696155;
            continue;
          case 77:
            flag12 = JSONNode.\u202E​‍‭‎​⁬⁯‬⁭‌⁬‮⁪‏‮‪⁫‭⁪⁯‏⁪‍⁪⁫⁬‮⁯⁫‍⁫⁮​⁭​‭‫‫⁪‮(aKey, "");
            num1 = 250876990;
            continue;
          case 78:
            int num23 = !flag1 ? 32485392 : (num23 = 863052974);
            num1 = num23 ^ (int) num3 * 600030533;
            continue;
          case 79:
            goto label_1;
          case 80:
            flag3 = !flag3;
            num1 = 944844105;
            continue;
          case 81:
label_45:
            num1 = 298100015;
            continue;
          case 82:
            num1 = 462882013;
            continue;
          case 83:
            int num24 = ch1 <= 'f' ? 970230169 : (num24 = 325137720);
            num1 = num24 ^ (int) num3 * 1898422421;
            continue;
          case 84:
            num1 = (int) num3 * -1089891489 ^ 1443800963;
            continue;
          case 85:
            num1 = (int) num3 * -1449200602 ^ -1846661005;
            continue;
          case 86:
            flag11 = jsonNode1 != (object) null;
            num1 = (int) num3 * 1739372136 ^ 57662510;
            continue;
          case 87:
            num1 = (int) num3 * -2000783410 ^ 1701568533;
            continue;
          case 88:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * 958497247 ^ -754837799;
            continue;
          case 89:
            flag4 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 2058227662 ^ -2120343074;
            continue;
          case 90:
            num1 = (int) num3 * -1865188316 ^ -1269824735;
            continue;
          case 91:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 1995382466 ^ -1193038486;
            continue;
          case 92:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 1491272974 ^ 566229975;
            continue;
          case 93:
            int num25 = ch2 == ':' ? -1185753341 : (num25 = -1153554321);
            num1 = num25 ^ (int) num3 * -319653001;
            continue;
          case 94:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -390152979 ^ -1139518928;
            continue;
          case 95:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -939427399 ^ -1660581231;
            continue;
          case 96:
            string str13 = aItem;
            ch4 = JSONNode.\u202A‌⁫⁯‏‪⁯‏⁪⁭‫‪⁮‏‍‭‭‫⁮⁮​​⁯‎‪⁭⁫‮‭⁫⁭‮‭‬‍‏‏⁫⁪‎‮(aJSON, num2);
            string str14 = ch4.ToString();
            aItem = JSONNode.\u200C⁪‍⁯‪‌‬​‭‮⁬‮‭​⁬‪‪‭‪‍‏‫‌⁮‎‫‮⁮‮‬‬‏⁮‮‪‮‪⁬​‫‮(str13, str14);
            num1 = (int) num3 * 284142839 ^ -318441865;
            continue;
          case 97:
            num1 = (int) num3 * -1829563339 ^ -785284972;
            continue;
          case 98:
            num1 = (int) num3 * 1981506658 ^ 1918157632;
            continue;
          case 99:
            num1 = (int) num3 * 1554336093 ^ -1447772414;
            continue;
          case 100:
            num1 = (int) num3 * -48465275 ^ -413082523;
            continue;
          case 101:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num1 = 2031862120;
            continue;
          case 102:
            flag13 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 1533719957 ^ -1911184745;
            continue;
          case 103:
            string str15 = aItem;
            ch4 = JSONNode.\u202A‌⁫⁯‏‪⁯‏⁪⁭‫‪⁮‏‍‭‭‫⁮⁮​​⁯‎‪⁭⁫‮‭⁫⁭‮‭‬‍‏‏⁫⁪‎‮(aJSON, num2);
            string str16 = ch4.ToString();
            aItem = JSONNode.\u200C⁪‍⁯‪‌‬​‭‮⁬‮‭​⁬‪‪‭‪‍‏‫‌⁮‎‫‮⁮‮‬‬‏⁮‮‪‮‪⁬​‫‮(str15, str16);
            num1 = (int) num3 * 1619465869 ^ -1573845872;
            continue;
          case 104:
            ch3 = JSONNode.\u202A‌⁫⁯‏‪⁯‏⁪⁭‫‪⁮‏‍‭‭‫⁮⁮​​⁯‎‪⁭⁫‮‭⁫⁭‮‭‬‍‏‏⁫⁪‎‮(aJSON, num2);
            num1 = (int) num3 * 1737426991 ^ -1355457730;
            continue;
          case 105:
            int num26 = jsonNode1 != (object) null ? -1962554889 : (num26 = -2020716639);
            num1 = num26 ^ (int) num3 * 614289219;
            continue;
          case 106:
            num1 = (int) num3 * 148212642 ^ 962837841;
            continue;
          case 107:
            int num27 = !flag15 ? -161164159 : (num27 = -1789542479);
            num1 = num27 ^ (int) num3 * 841338170;
            continue;
          case 108:
            int num28 = !flag10 ? -1440202829 : (num28 = -538064476);
            num1 = num28 ^ (int) num3 * 1538695999;
            continue;
          case 109:
            aKey = JSONNode.\u202C‫‏‪‮⁪⁪‬⁪⁪‫‪​‬⁫‌⁫‪‪‍‬​⁭⁪⁯‪‫⁭⁯‮‎‏‬‫‮‪‪‫‪‬‮(aKey);
            flag7 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -1724131070 ^ 1791134377;
            continue;
          case 110:
            int num29 = !flag7 ? -102323350 : (num29 = -1226158933);
            num1 = num29 ^ (int) num3 * 1745721559;
            continue;
          case 111:
            num1 = (int) num3 * 814858416 ^ 1615689775;
            continue;
          case 112:
            num1 = (int) num3 * -1664052555 ^ 1145765541;
            continue;
          case 113:
            num1 = (int) num3 * -1168183866 ^ -1666254155;
            continue;
          case 114:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 799945338 ^ -485827637;
            continue;
          case 115:
            aItem = JSONNode.\u200C⁪‍⁯‪‌‬​‭‮⁬‮‭​⁬‪‪‭‪‍‏‫‌⁮‎‫‮⁮‮‬‬‏⁮‮‪‮‪⁬​‫‮(aItem, "\f");
            num1 = 2020699945;
            continue;
          case 117:
            switch (ch2)
            {
              case '[':
                goto label_37;
              case '\\':
                goto label_120;
              case ']':
                goto label_43;
              default:
                num1 = 535682979;
                continue;
            }
          case 118:
            num1 = (int) num3 * 1050681035 ^ 1957928911;
            continue;
          case 119:
            aKey = "";
            aItem = "";
            num1 = 1360470911;
            continue;
          case 120:
label_85:
            aItem = JSONNode.\u200C⁪‍⁯‪‌‬​‭‮⁬‮‭​⁬‪‪‭‪‍‏‫‌⁮‎‫‮⁮‮‬‬‏⁮‮‪‮‪⁬​‫‮(aItem, "\t");
            num1 = 1890758805;
            continue;
          case 121:
            aItem = JSONNode.\u200C⁪‍⁯‪‌‬​‭‮⁬‮‭​⁬‪‪‭‪‍‏‫‌⁮‎‫‮⁮‮‬‬‏⁮‮‪‮‪⁬​‫‮(aItem, "\n");
            num1 = 1969860072;
            continue;
          case 122:
            num1 = (int) num3 * -985714413 ^ 713914555;
            continue;
          case 123:
            int num30 = ch1 == 'b' ? -410955194 : (num30 = -1065241903);
            num1 = num30 ^ (int) num3 * -73480771;
            continue;
          case 124:
            int num31 = ch2 <= ' ' ? -125945176 : (num31 = -917316613);
            num1 = num31 ^ (int) num3 * -390410801;
            continue;
          case 126:
            int num32;
            num1 = num32 = !flag3 ? 57343403 : (num32 = 1714845643);
            continue;
          case (uint) sbyte.MaxValue:
            int num33;
            num1 = num33 = !JSONNode.\u202E​‍‭‎​⁬⁯‬⁭‌⁬‮⁪‏‮‪⁫‭⁪⁯‏⁪‍⁪⁫⁬‮⁯⁫‍⁫⁮​⁭​‭‫‫⁪‮(aKey, "") ? 1464801808 : (num33 = 52645225);
            continue;
          case 128:
            jsonNode2 = jsonNode1;
            num1 = 383435292;
            continue;
          case 129:
            aItem = "";
            aKey = "";
            num1 = (int) num3 * 812218354 ^ -54928557;
            continue;
          case 130:
            num1 = (int) num3 * 71553927 ^ -2114585341;
            continue;
          case 131:
            int num34 = !flag11 ? 2055228824 : (num34 = 773750683);
            num1 = num34 ^ (int) num3 * -378296533;
            continue;
          case 132:
            int num35;
            num1 = num35 = ch2 != ',' ? 1978158270 : (num35 = 642153965);
            continue;
          case 133:
            jsonNodeStack.Pop();
            num1 = 531906063;
            continue;
          case 134:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            num1 = 1407019350;
            continue;
          case 135:
            int num36 = !flag14 ? -1277493886 : (num36 = -710432279);
            num1 = num36 ^ (int) num3 * -140920841;
            continue;
          case 136:
            num1 = (int) num3 * -1771974135 ^ -911877771;
            continue;
          case 137:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -1457672686 ^ 851006440;
            continue;
          case 138:
            aKey = aItem;
            num1 = 1277034600;
            continue;
          case 139:
label_127:
            aItem = JSONNode.\u200C⁪‍⁯‪‌‬​‭‮⁬‮‭​⁬‪‪‭‪‍‏‫‌⁮‎‫‮⁮‮‬‬‏⁮‮‪‮‪⁬​‫‮(aItem, "\r");
            num1 = 850562470;
            continue;
          case 140:
            int num37;
            num1 = num37 = ch2 == '}' ? 1571501777 : (num37 = 1325766074);
            continue;
          case 141:
            num1 = (int) num3 * -1866329008 ^ 1110910700;
            continue;
          case 142:
            flag1 = JSONNode.\u202E​‍‭‎​⁬⁯‬⁭‌⁬‮⁪‏‮‪⁫‭⁪⁯‏⁪‍⁪⁫⁬‮⁯⁫‍⁫⁮​⁭​‭‫‫⁪‮(aItem, "");
            num1 = (int) num3 * 527433132 ^ 120690271;
            continue;
          case 143:
            flag6 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -629277291 ^ -687642967;
            continue;
          case 144:
            num1 = 690176542;
            continue;
          case 145:
            switch (ch2)
            {
              case '\t':
                goto label_135;
              case '\n':
              case '\r':
                goto label_86;
              case '\v':
              case '\f':
                goto label_130;
              default:
                num1 = (int) num3 * 239093753 ^ -731126034;
                continue;
            }
          case 146:
            int num38;
            num1 = num38 = ch1 == 'n' ? 989300372 : (num38 = 204206610);
            continue;
          case 147:
            num1 = (int) num3 * 255484961 ^ 67980354;
            continue;
          case 148:
            flag15 = num2 < JSONNode.\u202D‏‫⁭‬‏⁭⁮‌​⁯‭‌‌‬⁯‫‪‮‏⁯‏‪‬​‪‭‌‫⁯⁪⁭‌‬⁬⁫‍‍‮⁬‮(aJSON);
            num1 = 800060562;
            continue;
          case 150:
            num1 = (int) num3 * 1880371132 ^ -1958795993;
            continue;
          case 151:
            num1 = (int) num3 * 1880919917 ^ -532885949;
            continue;
          case 152:
            flag3 = false;
            num1 = (int) num3 * -1974340761 ^ -269166836;
            continue;
          case 153:
            num1 = (int) num3 * -965767436 ^ 1675007453;
            continue;
          case 154:
            int num39;
            num1 = num39 = ch1 == 'f' ? 1242990618 : (num39 = 2119851683);
            continue;
          case 155:
label_135:
            flag17 = flag3;
            num1 = 1962079673;
            continue;
          default:
            goto label_156;
        }
      }
label_36:
      throw JSONNode.\u206F‬‍⁭‪⁭⁬‍‭‌​⁭‎⁯⁮⁯⁭⁪‮⁫⁭‮‫​‫‫​⁯‏‫‪‏⁮‫‍⁪⁪⁭‬‎‮("JSON Parse: Quotation marks seems to be messed up.");
label_42:
      throw JSONNode.\u206F‬‍⁭‪⁭⁬‍‭‌​⁭‎⁯⁮⁯⁭⁪‮⁫⁭‮‫​‫‫​⁯‏‫‪‏⁮‫‍⁪⁪⁭‬‎‮("JSON Parse: Too many closing brackets");
label_156:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
label_1:
      int num1 = 1366852087;
      BinaryWriter aWriter;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1657993821)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            this.Serialize(aWriter);
            num1 = (int) num2 * -159112605 ^ 1927717484;
            continue;
          case 3:
            num1 = (int) num2 * 1251104226 ^ 1093700331;
            continue;
          case 4:
            aWriter = JSONNode.\u206A⁮‪‫⁮‌‎‏​‏⁫⁪⁬‪‭‍‭⁬‫‪⁭⁪‭‍⁭‏⁬‪‎‏‬‬⁪⁯‪‫⁯‏⁫‌‮(aData);
            num1 = (int) num2 * -286960284 ^ 1710629839;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u206F‬‍⁭‪⁭⁬‍‭‌​⁭‎⁯⁮⁯⁭⁪‮⁫⁭‮‫​‫‫​⁯‏‫‪‏⁮‫‍⁪⁪⁭‬‎‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u206F‬‍⁭‪⁭⁬‍‭‌​⁭‎⁯⁮⁯⁭⁪‮⁫⁭‮‫​‫‫​⁯‏‫‪‏⁮‫‍⁪⁪⁭‬‎‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u206F‬‍⁭‪⁭⁬‍‭‌​⁭‎⁯⁮⁯⁭⁪‮⁫⁭‮‫​‫‫​⁯‏‫‪‏⁮‫‍⁪⁪⁭‬‎‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
label_1:
      int num1 = -1658838426;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1706703118)) % 3U)
        {
          case 1:
            JSONNode.\u202A​⁮⁭‏⁭‫‎⁫‫⁬⁮‌‪‫⁮‭‭‮‮‏‌⁮‭⁫⁬⁫⁭‫‎‎‍‪‎‌‏‫‭⁮⁯‮(JSONNode.\u202D⁪⁫⁪‮⁭⁫‎⁬‏‎⁬‫⁭⁪⁫‫‍‬⁫​​‏⁪‮‬‏⁭‎⁭‍⁫‏⁬‬‌​⁯‏‭‮((FileSystemInfo) JSONNode.\u202A‪⁭‭‏‫⁭‮‌‬⁪​‌‍​‎‪‎‍‎⁬⁮⁫‎‌‭‭⁬⁪⁮​‪‎‭⁭‫​⁮‭‮‮(JSONNode.\u206E‍⁪⁪‍‌‬⁮‫⁫‎‭⁬​⁪⁯‮⁫‬⁮⁬‬⁭​‪⁬⁫‪⁭‍‫‏‪‮‌​‎⁪‎‍‮(aFileName))));
            num1 = (int) num2 * -76626850 ^ -1101728515;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      FileStream aData = JSONNode.\u200F‍⁭​⁬‎‪‏‍‌‮⁫‫⁬⁭‭​‮⁭‫‎​⁬‮‭⁭‌‍‪​‏⁫‭‪‫‍‌⁭⁯‬‮(aFileName);
      try
      {
        this.SaveToStream((Stream) aData);
      }
      finally
      {
        if (aData != null)
        {
label_7:
          int num3 = -188762739;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -1706703118)) % 4U)
            {
              case 0:
                goto label_7;
              case 2:
                num3 = (int) num4 * -1939797476 ^ 1961429975;
                continue;
              case 3:
                JSONNode.\u200F​‮‏‏​‫‍⁯‎‫‮⁪‍‮‭⁮⁫‪‪⁭⁯‪⁯⁫⁬‌‫⁯‭‌‭‍​‮⁮‍⁫⁪‪‮((IDisposable) aData);
                num3 = (int) num4 * -342726635 ^ -158839981;
                continue;
              default:
                goto label_11;
            }
          }
        }
label_11:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u202E⁯​‍‪⁮⁮⁪‬⁫‪⁬‌⁬⁪‏‍‭​‎‫⁫‮⁫⁬‭​⁪‭⁮⁭‎‏‭‌‫‮​‏⁭‮();
      try
      {
        this.SaveToStream((Stream) aData);
label_2:
        int num1 = -1501661276;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -209089635)) % 4U)
          {
            case 0:
              goto label_2;
            case 1:
              JSONNode.\u206E‌⁪​⁫‪‫‍⁫⁯⁪‭‮‪‫‮‬‍⁪⁭‪⁮‍‍⁭‏‍⁮⁪‎⁬‌‎⁪⁫‫‍‬‎‮‮((Stream) aData, 0L);
              num1 = (int) num2 * 2008698115 ^ -312632764;
              continue;
            case 2:
              num1 = (int) num2 * -767408229 ^ 863023048;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return JSONNode.\u202C​‍‫⁮⁮​⁬‭⁮‮‎‍⁬‌‬⁮⁭⁮⁫‍‌‎‪‭⁭⁭⁮‫⁮‮‪‬⁯⁬‮⁯⁫⁯‮(JSONNode.\u202A‮‌⁬‬‭‎‌⁭⁮​‎‎​⁪⁫⁫⁪‍‬‎‮‬‬‬‍‫‬⁫‎‏⁮‌⁭⁫⁬⁫‭‏⁫‮(aData));
      }
      finally
      {
        if (aData != null)
        {
label_8:
          int num3 = -1703573550;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -209089635)) % 3U)
            {
              case 1:
                JSONNode.\u200F​‮‏‏​‫‍⁯‎‫‮⁪‍‮‭⁮⁫‪‪⁭⁯‪⁯⁫⁬‌‫⁯‭‌‭‍​‮⁮‍⁫⁪‪‮((IDisposable) aData);
                num3 = (int) num4 * 1536002251 ^ 1525008282;
                continue;
              case 2:
                goto label_8;
              default:
                goto label_11;
            }
          }
        }
label_11:;
      }
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
label_1:
      int num1 = 2117473693;
      JSONArray jsonArray;
      JSONNode jsonNode;
      int num2;
      int num3;
      bool flag;
      JSONBinaryTag jsonBinaryTag1;
      string aKey;
      int num4;
      int num5;
      JSONNode aItem;
      JSONClass jsonClass;
      JSONBinaryTag jsonBinaryTag2;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ 785020595)) % 38U)
        {
          case 0:
            num1 = (int) num6 * 1069631916 ^ -1907326728;
            continue;
          case 1:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * 149544413 ^ 1193442701;
            continue;
          case 2:
            jsonBinaryTag2 = (JSONBinaryTag) JSONNode.\u200C​‌‏⁬⁫‎‌‮‎‏‌‍‎⁮⁬‫⁯‭‏‭‫‎‪⁯‮‭‪‪‬‭⁫‏​‮​⁮‮⁪⁫‮(aReader);
            jsonBinaryTag1 = jsonBinaryTag2;
            num1 = (int) num6 * -915469950 ^ 351611274;
            continue;
          case 3:
label_22:
            num5 = JSONNode.\u206C‍‫‫‍⁮‮‮⁫‬‎‏‌‏⁮‮⁭⁭⁭‌⁭‎​⁫​⁭⁫⁬‏‪‎⁮⁫‭‎⁫‎⁬⁫‭‮(aReader);
            jsonArray = new JSONArray();
            num1 = 1968474429;
            continue;
          case 4:
            num1 = (int) num6 * -1464355355 ^ 960817844;
            continue;
          case 5:
            num1 = (int) num6 * -1256618206 ^ -1347632717;
            continue;
          case 6:
            jsonClass.Add(aKey, aItem);
            num1 = (int) num6 * 427684448 ^ -2044763231;
            continue;
          case 7:
            num1 = (int) num6 * -1522290247 ^ 650561141;
            continue;
          case 8:
            goto label_1;
          case 9:
            num1 = (int) num6 * -755412298 ^ -137568930;
            continue;
          case 10:
            int num7 = flag ? -354536139 : (num7 = -331751614);
            num1 = num7 ^ (int) num6 * 146247057;
            continue;
          case 11:
            num1 = (int) num6 * -1042904806 ^ 1378941534;
            continue;
          case 12:
label_13:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200B‬⁫⁯‮‍‍‬‎‪⁭‫⁬‏⁭‎‭‪‌‍‪‫⁭‎‪⁪‮​⁪‏⁪‮‫⁪⁪⁭‮​⁭⁮‮(aReader));
            num1 = 1279494224;
            continue;
          case 13:
            ++num2;
            num1 = (int) num6 * -2059393337 ^ -719835670;
            continue;
          case 14:
            int num8;
            num1 = num8 = num4 < num5 ? 826982003 : (num8 = 2037740101);
            continue;
          case 15:
label_36:
            num1 = 197502148;
            continue;
          case 16:
            flag = num2 < num3;
            num1 = 1021043769;
            continue;
          case 17:
            aKey = JSONNode.\u202D‍⁬⁭‍‫‪‏⁬⁬‎‫‎⁬‏⁬‬⁬⁪⁬‫‍⁯⁫‎‏​‌⁯⁮⁫‪⁫⁪‍⁭‭⁭⁪‏‮(aReader);
            num1 = (int) num6 * 1499205603 ^ 319351864;
            continue;
          case 18:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            num1 = 223181806;
            continue;
          case 19:
label_14:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202D‍⁬⁭‍‫‪‏⁬⁬‎‫‎⁬‏⁬‬⁬⁪⁬‫‍⁯⁫‎‏​‌⁯⁮⁫‪⁫⁪‍⁭‭⁭⁪‏‮(aReader));
            num1 = 503845758;
            continue;
          case 20:
            aItem = JSONNode.Deserialize(aReader);
            num1 = (int) num6 * -1207514812 ^ -1232466755;
            continue;
          case 21:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202D⁫‏⁬‭‫‬⁭‌⁭⁯‍⁭‎⁮‏​⁮‎‬​⁫​‎‭⁬⁭⁭‮‫‭⁮⁮⁫⁫‭⁭‪⁯‮‮(aReader));
            num1 = (int) num6 * 1303081307 ^ -756970286;
            continue;
          case 22:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * 598968692 ^ 1517579560;
            continue;
          case 23:
            switch (jsonBinaryTag1)
            {
              case JSONBinaryTag.Array:
                goto label_22;
              case JSONBinaryTag.Class:
                goto label_36;
              case JSONBinaryTag.Value:
                goto label_14;
              case JSONBinaryTag.IntValue:
                goto label_17;
              case JSONBinaryTag.DoubleValue:
                goto label_35;
              case JSONBinaryTag.BoolValue:
                goto label_13;
              case JSONBinaryTag.FloatValue:
                goto label_33;
              default:
                num1 = (int) num6 * -1493221314 ^ 645055206;
                continue;
            }
          case 24:
            num1 = (int) num6 * -2076026009 ^ -681091226;
            continue;
          case 25:
            num3 = JSONNode.\u206C‍‫‫‍⁮‮‮⁫‬‎‏‌‏⁮‮⁭⁭⁭‌⁭‎​⁫​⁭⁫⁬‏‪‎⁮⁫‭‎⁫‎⁬⁫‭‮(aReader);
            jsonClass = new JSONClass();
            num1 = (int) num6 * 1028349308 ^ -2105067268;
            continue;
          case 26:
            num4 = 0;
            num1 = (int) num6 * 1862649439 ^ -606852355;
            continue;
          case 28:
            num1 = (int) num6 * 2134697767 ^ -1241990949;
            continue;
          case 29:
label_33:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206D⁫‏⁫‮⁬‏⁫‏‍‍⁫‎‫‌‎⁬‮‪⁮⁭‭⁮‭‫⁪‭‮⁭‭‮‏‏⁮‏⁫‪‌⁮‍‮(aReader));
            num1 = 149800528;
            continue;
          case 30:
            num1 = 1870856962;
            continue;
          case 31:
label_17:
            num1 = 596090701;
            continue;
          case 32:
label_35:
            num1 = 1829765566;
            continue;
          case 33:
            num1 = (int) num6 * -1272855356 ^ -364142124;
            continue;
          case 34:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206C‍‫‫‍⁮‮‮⁫‬‎‏‌‏⁮‮⁭⁭⁭‌⁭‎​⁫​⁭⁫⁬‏‪‎⁮⁫‭‎⁫‎⁬⁫‭‮(aReader));
            num1 = (int) num6 * 1772652489 ^ 523657095;
            continue;
          case 35:
            ++num4;
            num1 = (int) num6 * -944955462 ^ -3083727;
            continue;
          case 36:
            goto label_34;
          case 37:
            num2 = 0;
            num1 = (int) num6 * 1154037284 ^ 1958975917;
            continue;
          default:
            goto label_40;
        }
      }
label_34:
      throw JSONNode.\u206F‬‍⁭‪⁭⁬‍‭‌​⁭‎⁯⁮⁯⁭⁪‮⁫⁭‮‫​‫‫​⁯‏‫‪‏⁮‫‍⁪⁪⁭‬‎‮(JSONNode.\u200C⁪‍⁯‪‌‬​‭‮⁬‮‭​⁬‪‪‭‪‍‏‫‌⁮‎‫‮⁮‮‬‬‏⁮‮‪‮‪⁬​‫‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag2.ToString()));
label_40:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u206F‬‍⁭‪⁭⁬‍‭‌​⁭‎⁯⁮⁯⁭⁪‮⁫⁭‮‫​‫‫​⁯‏‫‪‏⁮‫‍⁪⁪⁭‬‎‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u206F‬‍⁭‪⁭⁬‍‭‌​⁭‎⁯⁮⁯⁭⁪‮⁫⁭‮‫​‫‫​⁯‏‫‪‏⁮‫‍⁪⁪⁭‬‎‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u206F‬‍⁭‪⁭⁬‍‭‌​⁭‎⁯⁮⁯⁭⁪‮⁫⁭‮‫​‫‫​⁯‏‫‪‏⁮‫‍⁪⁪⁭‬‎‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u202A‬⁭‍‍‪‭‮‮‏‌‬‭⁫‍‪‫‫‫⁫‭⁯‭‍‮⁫‫‏⁬⁫⁯⁭‌‌‬‍‎⁬‭‫‮(aData);
      try
      {
        return JSONNode.Deserialize(aReader);
      }
      finally
      {
        if (aReader != null)
        {
label_3:
          int num1 = -892053013;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ -1562965878)) % 4U)
            {
              case 0:
                num1 = (int) num2 * 2023231554 ^ -798430211;
                continue;
              case 1:
                JSONNode.\u200F​‮‏‏​‫‍⁯‎‫‮⁪‍‮‭⁮⁫‪‪⁭⁯‪⁯⁫⁬‌‫⁯‭‌‭‍​‮⁮‍⁫⁪‪‮((IDisposable) aReader);
                num1 = (int) num2 * -481679158 ^ -469712336;
                continue;
              case 2:
                goto label_3;
              default:
                goto label_7;
            }
          }
        }
label_7:;
      }
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u206C⁮‬‭‬‫⁪‭⁭‌⁬⁬‪‪⁯‏⁭‍​‬‌‭⁭‭⁭‍‪⁭​‌‭⁯⁮​‭‎⁫⁯‬‬‮(aFileName);
      try
      {
        return JSONNode.LoadFromStream((Stream) aData);
      }
      finally
      {
        if (aData != null)
        {
label_3:
          int num1 = -481284536;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ -672184667)) % 4U)
            {
              case 1:
                JSONNode.\u200F​‮‏‏​‫‍⁯‎‫‮⁪‍‮‭⁮⁫‪‪⁭⁯‪⁯⁫⁬‌‫⁯‭‌‭‍​‮⁮‍⁫⁪‪‮((IDisposable) aData);
                num1 = (int) num2 * 34802 ^ 96484037;
                continue;
              case 2:
                num1 = (int) num2 * 1204003886 ^ -2137485431;
                continue;
              case 3:
                goto label_3;
              default:
                goto label_7;
            }
          }
        }
label_7:;
      }
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
label_1:
      int num1 = 228930002;
      MemoryStream aData;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1722102723)) % 6U)
        {
          case 1:
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * 1774260180 ^ 1999099262;
            continue;
          case 2:
            goto label_1;
          case 3:
            aData = JSONNode.\u202D⁯⁯⁯⁭⁪‪⁯‭‮‌‏⁮‏⁪​‭‎⁮‭⁬⁬‎⁯⁫‍‎‌⁮​‫‪‭⁮⁯⁭​‎‍⁪‮(JSONNode.\u206A‬⁪‬‪‭‫⁫⁮⁯‍⁮⁯⁭‭⁪‭‪‫‪‮⁪‪‎‫‪⁪‫⁬⁪⁭‪⁯‮‬​‫‌‬‌‮(aBase64));
            num1 = (int) num2 * -79621897 ^ 1212816006;
            continue;
          case 4:
            JSONNode.\u206E‌⁪​⁫‪‫‍⁫⁯⁪‭‮‪‫‮‬‍⁪⁭‪⁮‍‍⁭‏‍⁮⁪‎⁬‌‎⁪⁫‫‍‬‎‮‮((Stream) aData, 0L);
            num1 = (int) num2 * 1642694899 ^ 1285701088;
            continue;
          case 5:
            num1 = (int) num2 * -375883127 ^ -1571849804;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      return jsonNode;
    }

    static CultureInfo \u200F‬‍⁪⁭⁯⁪⁮‏⁫‪‫‮‍‭‏‎‎‌⁬‍‏‫⁬​‎​‪‎‍‍⁯⁪‮‏‍‬‪⁪⁬‮() => CultureInfo.InvariantCulture;

    static bool \u206C‏⁭‏⁫‬‍‭‌‫⁮‎⁭‌⁪⁯‍‎‬‪⁯‭⁭‌‭⁪‎‮‭‫⁮⁪⁫⁬‫⁫‎‍‏⁫‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u200C⁬⁬‮⁮⁯⁭‮⁬​‎⁪‏‮‌‫⁪‬‭‭⁪‭‏‫⁯⁫‎‎‎⁫‌⁭‌‮‫‮‌‍‎‫‮() => base.GetHashCode();

    static char \u202A‌⁫⁯‏‪⁯‏⁪⁭‫‪⁮‏‍‭‭‫⁮⁮​​⁯‎‪⁭⁫‮‭⁫⁭‮‭‬‍‏‏⁫⁪‎‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u200C⁪‍⁯‪‌‬​‭‮⁬‮‭​⁬‪‪‭‪‍‏‫‌⁮‎‫‮⁮‮‬‬‏⁮‮‪‮‪⁬​‫‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u202D‏‫⁭‬‏⁭⁮‌​⁯‭‌‌‬⁯‫‪‮‏⁯‏‪‬​‪‭‌‫⁯⁪⁭‌‬⁬⁫‍‍‮⁬‮([In] string obj0) => obj0.Length;

    static string \u202C‫‏‪‮⁪⁪‬⁪⁪‫‪​‬⁫‌⁫‪‪‍‬​⁭⁪⁯‪‫⁭⁯‮‎‏‬‫‮‪‪‫‪‬‮([In] string obj0) => obj0.Trim();

    static bool \u202E​‍‭‎​⁬⁯‬⁭‌⁬‮⁪‏‮‪⁫‭⁪⁯‏⁪‍⁪⁫⁬‮⁯⁫‍⁫⁮​⁭​‭‫‫⁪‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u206F‬‍⁭‪⁭⁬‍‭‌​⁭‎⁯⁮⁯⁭⁪‮⁫⁭‮‫​‫‫​⁯‏‫‪‏⁮‫‍⁪⁪⁭‬‎‮([In] string obj0) => new Exception(obj0);

    static string \u206D‬⁪⁬‏⁬⁮‏⁭‭‪⁬⁪‏‭‬​⁭‮⁮‍⁭‎⁬‪‪‭‍⁪⁫⁮‮‌⁪‬‮⁬‍⁪⁯‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u206A⁮‪‫⁮‌‎‏​‏⁫⁪⁬‪‭‍‭⁬‫‪⁭⁪‭‍⁭‏⁬‪‎‏‬‬⁪⁯‪‫⁯‏⁫‌‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u206E‍⁪⁪‍‌‬⁮‫⁫‎‭⁬​⁪⁯‮⁫‬⁮⁬‬⁭​‪⁬⁫‪⁭‍‫‏‪‮‌​‎⁪‎‍‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u202A‪⁭‭‏‫⁭‮‌‬⁪​‌‍​‎‪‎‍‎⁬⁮⁫‎‌‭‭⁬⁪⁮​‪‎‭⁭‫​⁮‭‮‮([In] FileInfo obj0) => obj0.Directory;

    static string \u202D⁪⁫⁪‮⁭⁫‎⁬‏‎⁬‫⁭⁪⁫‫‍‬⁫​​‏⁪‮‬‏⁭‎⁭‍⁫‏⁬‬‌​⁯‏‭‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u202A​⁮⁭‏⁭‫‎⁫‫⁬⁮‌‪‫⁮‭‭‮‮‏‌⁮‭⁫⁬⁫⁭‫‎‎‍‪‎‌‏‫‭⁮⁯‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u200F‍⁭​⁬‎‪‏‍‌‮⁫‫⁬⁭‭​‮⁭‫‎​⁬‮‭⁭‌‍‪​‏⁫‭‪‫‍‌⁭⁯‬‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u200F​‮‏‏​‫‍⁯‎‫‮⁪‍‮‭⁮⁫‪‪⁭⁯‪⁯⁫⁬‌‫⁯‭‌‭‍​‮⁮‍⁫⁪‪‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u202E⁯​‍‪⁮⁮⁪‬⁫‪⁬‌⁬⁪‏‍‭​‎‫⁫‮⁫⁬‭​⁪‭⁮⁭‎‏‭‌‫‮​‏⁭‮() => new MemoryStream();

    static void \u206E‌⁪​⁫‪‫‍⁫⁯⁪‭‮‪‫‮‬‍⁪⁭‪⁮‍‍⁭‏‍⁮⁪‎⁬‌‎⁪⁫‫‍‬‎‮‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u202A‮‌⁬‬‭‎‌⁭⁮​‎‎​⁪⁫⁫⁪‍‬‎‮‬‬‬‍‫‬⁫‎‏⁮‌⁭⁫⁬⁫‭‏⁫‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u202C​‍‫⁮⁮​⁬‭⁮‮‎‍⁬‌‬⁮⁭⁮⁫‍‌‎‪‭⁭⁭⁮‫⁮‮‪‬⁯⁬‮⁯⁫⁯‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u200C​‌‏⁬⁫‎‌‮‎‏‌‍‎⁮⁬‫⁯‭‏‭‫‎‪⁯‮‭‪‪‬‭⁫‏​‮​⁮‮⁪⁫‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u206C‍‫‫‍⁮‮‮⁫‬‎‏‌‏⁮‮⁭⁭⁭‌⁭‎​⁫​⁭⁫⁬‏‪‎⁮⁫‭‎⁫‎⁬⁫‭‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u202D‍⁬⁭‍‫‪‏⁬⁬‎‫‎⁬‏⁬‬⁬⁪⁬‫‍⁯⁫‎‏​‌⁯⁮⁫‪⁫⁪‍⁭‭⁭⁪‏‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u202D⁫‏⁬‭‫‬⁭‌⁭⁯‍⁭‎⁮‏​⁮‎‬​⁫​‎‭⁬⁭⁭‮‫‭⁮⁮⁫⁫‭⁭‪⁯‮‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u200B‬⁫⁯‮‍‍‬‎‪⁭‫⁬‏⁭‎‭‪‌‍‪‫⁭‎‪⁪‮​⁪‏⁪‮‫⁪⁪⁭‮​⁭⁮‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u206D⁫‏⁫‮⁬‏⁫‏‍‍⁫‎‫‌‎⁬‮‪⁮⁭‭⁮‭‫⁪‭‮⁭‭‮‏‏⁮‏⁫‪‌⁮‍‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u202A‬⁭‍‍‪‭‮‮‏‌‬‭⁫‍‪‫‫‫⁫‭⁯‭‍‮⁫‫‏⁬⁫⁯⁭‌‌‬‍‎⁬‭‫‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u206C⁮‬‭‬‫⁪‭⁭‌⁬⁬‪‪⁯‏⁭‍​‬‌‭⁭‭⁭‍‪⁭​‌‭⁯⁮​‭‎⁫⁯‬‬‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u206A‬⁪‬‪‭‫⁫⁮⁯‍⁮⁯⁭‭⁪‭‪‫‪‮⁪‪‎‫‪⁪‫⁬⁪⁭‪⁯‮‬​‫‌‬‌‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u202D⁯⁯⁯⁭⁪‪⁯‭‮‌‏⁮‏⁪​‭‎⁮‭⁬⁬‎⁯⁫‍‎‌⁮​‫‪‭⁮⁯⁭​‎‍⁪‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
