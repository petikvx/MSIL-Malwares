// Decompiled with JetBrains decompiler
// Type: NullableTypeI.EvidenceCollect
// Assembly: UInt32ArrayTypeI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 2F94D963-B282-4BF6-A540-85D019D8F975
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan-Spy.Win32.Noon.bcqa-e64990765a452d35a4b5e461940d547ab3e145dbdf2e3b4b282b12ed1eba308d.exe

using ApartmentSt;
using ISpon;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.InteropServices;
using TOKENU;

namespace NullableTypeI
{
  public class EvidenceCollect
  {
    private const int DECKSIZE = 52;

    public bool ShouldWarn { get; set; }

    public int TurnWho { get; set; }

    public ResourceMana Player { get; set; }

    public ISCIIEncod Machine { get; set; }

    internal List<Func> Deck { get; set; }

    public string Winner { get; set; }

    public string Logs { get; set; }

    public EvidenceCollect(ResourceMana Player, ISCIIEncod Machine)
    {
label_1:
      int num1 = 729287582;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 192568926)) % 11U)
        {
          case 0:
            this.ShouldWarn = false;
            num1 = (int) num2 * 1097225358 ^ -1087748729;
            continue;
          case 1:
            num1 = (int) num2 * -2105128938 ^ -1454711734;
            continue;
          case 2:
            goto label_3;
          case 3:
            this.Player = Player;
            num1 = (int) num2 * 150625937 ^ -132292510;
            continue;
          case 4:
            this.Winner = string.Empty;
            num1 = (int) num2 * -754863399 ^ 963422225;
            continue;
          case 5:
            goto label_1;
          case 6:
            this.TurnWho = -1;
            num1 = (int) num2 * 139785652 ^ 1661291979;
            continue;
          case 7:
            this.Machine = Machine;
            num1 = (int) num2 * -1770132119 ^ 51373402;
            continue;
          case 8:
            num1 = (int) num2 * 279911978 ^ 608862480;
            continue;
          case 9:
            num1 = (int) num2 * 252409396 ^ -1789848652;
            continue;
          case 10:
            num1 = (int) num2 * -206070390 ^ 546224554;
            continue;
          default:
            goto label_13;
        }
      }
label_3:
      return;
label_13:;
    }

    internal int GetHandSumFor(List<Func> Hand)
    {
label_1:
      int num1 = 66940921;
      int num2;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 2078009067)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num3 * -472104911 ^ 462131701;
            continue;
          case 2:
            num2 = 0;
            num1 = (int) num3 * -1652346543 ^ -879708848;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      List<Func>.Enumerator enumerator = Hand.GetEnumerator();
      try
      {
label_10:
        int num4 = !enumerator.MoveNext() ? 992733333 : (num4 = 150008670);
        while (true)
        {
          uint num5;
          switch ((num5 = (uint) (num4 ^ 2078009067)) % 4U)
          {
            case 0:
              num4 = 150008670;
              continue;
            case 1:
              Func current = enumerator.Current;
              num2 += current.GetCardValue();
              num4 = 322551188;
              continue;
            case 3:
              goto label_10;
            default:
              goto label_16;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_12:
        int num6 = 891588150;
        while (true)
        {
          uint num7;
          switch ((num7 = (uint) (num6 ^ 2078009067)) % 3U)
          {
            case 0:
              goto label_12;
            case 1:
              num6 = (int) num7 * 1247993818 ^ -1286003944;
              continue;
            default:
              goto label_15;
          }
        }
label_15:;
      }
label_16:
      int handSumFor = num2;
label_17:
      int num8 = 1747973465;
      while (true)
      {
        uint num9;
        switch ((num9 = (uint) (num8 ^ 2078009067)) % 3U)
        {
          case 0:
            goto label_17;
          case 1:
            num8 = (int) num9 * 1087181983 ^ -1126190006;
            continue;
          default:
            goto label_20;
        }
      }
label_20:
      return handSumFor;
    }

    internal bool CheckIdenticalHand(string Who, string HandName)
    {
label_1:
      int num1 = -1552844044;
      bool flag1;
      while (true)
      {
        uint num2;
        bool flag2;
        bool flag3;
        bool flag4;
        bool flag5;
        bool flag6;
        bool flag7;
        bool flag8;
        bool flag9;
        int num3;
        int num4;
        int num5;
        int num6;
        switch ((num2 = (uint) (num1 ^ -925963135)) % 49U)
        {
          case 0:
            num1 = -1080326261;
            continue;
          case 1:
            flag1 = false;
            num1 = (int) num2 * 894499158 ^ -1037628654;
            continue;
          case 2:
            int num7 = !flag4 ? -974925982 : (num7 = -1218072377);
            num1 = num7 ^ (int) num2 * 594768900;
            continue;
          case 3:
            num1 = (int) num2 * -561484027 ^ 302731549;
            continue;
          case 4:
            flag1 = false;
            num1 = -449848233;
            continue;
          case 5:
            num1 = (int) num2 * 1730660448 ^ 1297694974;
            continue;
          case 6:
            flag5 = this.Player.Hand2.Count != 2;
            num1 = (int) num2 * 1877212227 ^ -387518333;
            continue;
          case 7:
            flag8 = this.Player.Hand1.Count != 2;
            num1 = (int) num2 * -1440181475 ^ -33846003;
            continue;
          case 8:
            int num8 = !flag8 ? 1421950908 : (num8 = 328514572);
            num1 = num8 ^ (int) num2 * -765824359;
            continue;
          case 9:
            if (EvidenceCollect.\u202A⁬⁫⁭⁭‎‮⁪‬​‪‮‮⁫‭‮‌‭‎⁮⁮⁪‪‎‪⁬​‌‪⁫⁭⁪⁭‌‭⁬‫‫⁫⁬‮(Who, "Player"))
            {
              num1 = (int) num2 * 834208466 ^ -320622988;
              continue;
            }
            num3 = 0;
            goto label_35;
          case 10:
            num3 = EvidenceCollect.\u202A⁬⁫⁭⁭‎‮⁪‬​‪‮‮⁫‭‮‌‭‎⁮⁮⁪‪‎‪⁬​‌‪⁫⁭⁪⁭‌‭⁬‫‫⁫⁬‮(HandName, "Hand1") ? 1 : 0;
            goto label_35;
          case 11:
            int num9;
            num1 = num9 = this.Player.Hand2.ElementAt<Func>(0).GetCardValue() == this.Player.Hand2.ElementAt<Func>(1).GetCardValue() ? -415353986 : (num9 = -1899664131);
            continue;
          case 12:
            goto label_1;
          case 13:
            flag1 = false;
            num1 = (int) num2 * -1778291618 ^ -840220073;
            continue;
          case 14:
            int num10 = !flag2 ? -1596248799 : (num10 = -587383853);
            num1 = num10 ^ (int) num2 * 1331260086;
            continue;
          case 15:
            flag1 = true;
            num1 = (int) num2 * 427842153 ^ 1740945313;
            continue;
          case 16:
            int num11;
            num1 = num11 = this.Machine.Hand2.ElementAt<Func>(0).GetCardValue() != this.Machine.Hand2.ElementAt<Func>(1).GetCardValue() ? -184725097 : (num11 = -101077400);
            continue;
          case 17:
            flag1 = true;
            num1 = (int) num2 * -2045559230 ^ 409429389;
            continue;
          case 18:
            num1 = (int) num2 * 751872968 ^ -1227440546;
            continue;
          case 19:
            flag1 = true;
            num1 = (int) num2 * 321735196 ^ -174290566;
            continue;
          case 20:
            flag1 = false;
            num1 = (int) num2 * -1452830724 ^ -1804703946;
            continue;
          case 21:
            int num12;
            num1 = num12 = this.Machine.Hand1.ElementAt<Func>(0).GetCardValue() == this.Machine.Hand1.ElementAt<Func>(1).GetCardValue() ? -23617924 : (num12 = -1392895334);
            continue;
          case 22:
            num4 = EvidenceCollect.\u202A⁬⁫⁭⁭‎‮⁪‬​‪‮‮⁫‭‮‌‭‎⁮⁮⁪‪‎‪⁬​‌‪⁫⁭⁪⁭‌‭⁬‫‫⁫⁬‮(HandName, "Hand2") ? 1 : 0;
            break;
          case 23:
            num1 = (int) num2 * -1984814552 ^ 1344308669;
            continue;
          case 24:
            num1 = (int) num2 * 254234079 ^ 141915348;
            continue;
          case 25:
            num1 = -2043054540;
            continue;
          case 26:
            int num13 = flag9 ? -1083991637 : (num13 = -1869040453);
            num1 = num13 ^ (int) num2 * 89156005;
            continue;
          case 27:
            if (EvidenceCollect.\u202A⁬⁫⁭⁭‎‮⁪‬​‪‮‮⁫‭‮‌‭‎⁮⁮⁪‪‎‪⁬​‌‪⁫⁭⁪⁭‌‭⁬‫‫⁫⁬‮(Who, "Player"))
            {
              num1 = -1770189059;
              continue;
            }
            num5 = 0;
            goto label_41;
          case 28:
            int num14 = this.Machine.Hand2.Count == 2 ? 1162679342 : (num14 = 778636895);
            num1 = num14 ^ (int) num2 * 39937511;
            continue;
          case 29:
            flag1 = true;
            num1 = (int) num2 * -1284706995 ^ -1438255377;
            continue;
          case 30:
            num1 = -1466648200;
            continue;
          case 31:
            num5 = EvidenceCollect.\u202A⁬⁫⁭⁭‎‮⁪‬​‪‮‮⁫‭‮‌‭‎⁮⁮⁪‪‎‪⁬​‌‪⁫⁭⁪⁭‌‭⁬‫‫⁫⁬‮(HandName, "Hand2") ? 1 : 0;
            goto label_41;
          case 32:
            int num15 = !flag6 ? -2106061189 : (num15 = -1516554922);
            num1 = num15 ^ (int) num2 * -783128414;
            continue;
          case 34:
            num1 = (int) num2 * -628370914 ^ -422899990;
            continue;
          case 35:
            flag1 = false;
            num1 = (int) num2 * -913652376 ^ 549673085;
            continue;
          case 36:
            flag4 = this.Machine.Hand1.Count != 2;
            num1 = (int) num2 * 1322151884 ^ -1740382285;
            continue;
          case 37:
            flag6 = this.Player.Hand1.ElementAt<Func>(0).GetCardValue() == this.Player.Hand1.ElementAt<Func>(1).GetCardValue();
            num1 = -1023946292;
            continue;
          case 38:
            num6 = EvidenceCollect.\u202A⁬⁫⁭⁭‎‮⁪‬​‪‮‮⁫‭‮‌‭‎⁮⁮⁪‪‎‪⁬​‌‪⁫⁭⁪⁭‌‭⁬‫‫⁫⁬‮(HandName, "Hand1") ? 1 : 0;
            goto label_54;
          case 39:
            int num16 = !flag3 ? 1445660195 : (num16 = 1167547129);
            num1 = num16 ^ (int) num2 * 854614371;
            continue;
          case 40:
            if (EvidenceCollect.\u202A⁬⁫⁭⁭‎‮⁪‬​‪‮‮⁫‭‮‌‭‎⁮⁮⁪‪‎‪⁬​‌‪⁫⁭⁪⁭‌‭⁬‫‫⁫⁬‮(Who, "Machine"))
            {
              num1 = -1632369862;
              continue;
            }
            num6 = 0;
            goto label_54;
          case 41:
            int num17 = !flag7 ? 836552516 : (num17 = 1550609332);
            num1 = num17 ^ (int) num2 * -247045915;
            continue;
          case 42:
            num1 = -276701084;
            continue;
          case 43:
            num1 = (int) num2 * -75079315 ^ 7112399;
            continue;
          case 44:
            num1 = (int) num2 * -977331598 ^ 223649372;
            continue;
          case 45:
            num1 = (int) num2 * 554906894 ^ 195258548;
            continue;
          case 46:
            if (!EvidenceCollect.\u202A⁬⁫⁭⁭‎‮⁪‬​‪‮‮⁫‭‮‌‭‎⁮⁮⁪‪‎‪⁬​‌‪⁫⁭⁪⁭‌‭⁬‫‫⁫⁬‮(Who, "Machine"))
            {
              num4 = 0;
              break;
            }
            num1 = -1540217208;
            continue;
          case 47:
            int num18 = flag5 ? 1954730870 : (num18 = 1004449867);
            num1 = num18 ^ (int) num2 * 1078864555;
            continue;
          case 48:
            num1 = (int) num2 * 1970843244 ^ 644658050;
            continue;
          default:
            goto label_62;
        }
        flag3 = num4 != 0;
        num1 = -1274959064;
        continue;
label_35:
        flag2 = num3 != 0;
        num1 = -1253260402;
        continue;
label_41:
        flag7 = num5 != 0;
        num1 = -1027451871;
        continue;
label_54:
        flag9 = num6 != 0;
        num1 = -853159518;
      }
label_62:
      return flag1;
    }

    static bool \u202A⁬⁫⁭⁭‎‮⁪‬​‪‮‮⁫‭‮‌‭‎⁮⁮⁪‪‎‪⁬​‌‪⁫⁭⁪⁭‌‭⁬‫‫⁫⁬‮([In] string obj0, [In] string obj1) => obj0 == obj1;
  }
}
