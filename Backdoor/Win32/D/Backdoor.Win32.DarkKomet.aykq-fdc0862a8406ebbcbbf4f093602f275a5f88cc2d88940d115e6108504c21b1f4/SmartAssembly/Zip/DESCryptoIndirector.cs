// Decompiled with JetBrains decompiler
// Type: SmartAssembly.Zip.DESCryptoIndirector
// Assembly: 5, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: D96FE905-3567-4568-B7BF-8C667D038E34
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Backdoor.Win32.DarkKomet.aykq-fdc0862a8406ebbcbbf4f093602f275a5f88cc2d88940d115e6108504c21b1f4.exe

using System;
using System.Reflection;
using System.Security.Cryptography;

namespace SmartAssembly.Zip
{
  public sealed class DESCryptoIndirector : IDisposable
  {
    private readonly Type m_DcspType;
    private readonly object m_DESCryptoServiceProvider;

    public DESCryptoIndirector()
    {
      this.m_DcspType = Assembly.Load("mscorlib").GetType("System.Security.Cryptography.DESCryptoServiceProvider");
      this.m_DESCryptoServiceProvider = Activator.CreateInstance(this.m_DcspType);
    }

    public ICryptoTransform GetDESCryptoTransform(
      byte[] key,
      byte[] iv,
      bool decrypt)
    {
      this.m_DcspType.GetProperty("Key").GetSetMethod().Invoke(this.m_DESCryptoServiceProvider, new object[1]
      {
        (object) key
      });
      this.m_DcspType.GetProperty("IV").GetSetMethod().Invoke(this.m_DESCryptoServiceProvider, new object[1]
      {
        (object) iv
      });
      return (ICryptoTransform) this.m_DcspType.GetMethod(decrypt ? "CreateDecryptor" : "CreateEncryptor", new Type[0]).Invoke(this.m_DESCryptoServiceProvider, new object[0]);
    }

    public void Clear()
    {
      do
      {
        if (true)
          goto label_3;
label_2:
        continue;
label_3:
        this.m_DcspType.GetMethod(nameof (Clear)).Invoke(this.m_DESCryptoServiceProvider, new object[0]);
        goto label_2;
      }
      while (false);
    }

    public void Dispose() => this.Clear();
  }
}
