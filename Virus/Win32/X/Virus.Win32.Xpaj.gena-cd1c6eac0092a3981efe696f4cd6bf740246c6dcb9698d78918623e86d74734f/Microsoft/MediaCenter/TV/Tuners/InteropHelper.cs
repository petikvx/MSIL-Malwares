// Decompiled with JetBrains decompiler
// Type: Microsoft.MediaCenter.TV.Tuners.InteropHelper
// Assembly: Microsoft.MediaCenter.TV.Tuners.Interop, Version=6.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
// MVID: 4545DFBD-7834-4511-B0E8-46F2D6BF39B8
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00007-msil\Virus.Win32.Xpaj.gena-cd1c6eac0092a3981efe696f4cd6bf740246c6dcb9698d78918623e86d74734f.exe

using \u003CCppImplementationDetails\u003E;
using ATL;
using Microsoft.MediaCenter.TV.Tuning;
using System;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Runtime.Remoting.Messaging;
using System.Threading;

namespace Microsoft.MediaCenter.TV.Tuners
{
  internal sealed class InteropHelper
  {
    private static int DEFAULT_CROSSPROC_TIMEOUT = 30000;

    private InteropHelper()
    {
    }

    public static void EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv2\u003CSystem\u003A\u003AGuid\u002CSystem\u003A\u003AIntPtr\u003E\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg)
    {
      InteropHelper.EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv2\u003CSystem\u003A\u003AGuid\u002CSystem\u003A\u003AIntPtr\u003E\u0020\u005E\u003E(r, errmsg, 30000);
    }

    public static void EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv0\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg)
    {
      InteropHelper.EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv0\u0020\u005E\u003E(r, errmsg, 30000);
    }

    public static void EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv1\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ASafeRecorder\u0020\u005E\u003E\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg)
    {
      InteropHelper.EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv1\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ASafeRecorder\u0020\u005E\u003E\u0020\u005E\u003E(r, errmsg, 30000);
    }

    public static void EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv1\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuning\u003A\u003ATuneRequest\u0020\u005E\u003E\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg)
    {
      InteropHelper.EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv1\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuning\u003A\u003ATuneRequest\u0020\u005E\u003E\u0020\u005E\u003E(r, errmsg, 30000);
    }

    public static void EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv1\u003Clong\u003E\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg)
    {
      InteropHelper.EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv1\u003Clong\u003E\u0020\u005E\u003E(r, errmsg, 30000);
    }

    public static void EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv1\u003Cbool\u003E\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg)
    {
      InteropHelper.EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv1\u003Cbool\u003E\u0020\u005E\u003E(r, errmsg, 30000);
    }

    public static void EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv2\u003Cbool\u002Cunsigned\u0020int\u003E\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg)
    {
      InteropHelper.EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv2\u003Cbool\u002Cunsigned\u0020int\u003E\u0020\u005E\u003E(r, errmsg, 30000);
    }

    public static void EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv1\u003Cunsigned\u0020int\u003E\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg)
    {
      InteropHelper.EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv1\u003Cunsigned\u0020int\u003E\u0020\u005E\u003E(r, errmsg, 30000);
    }

    public static void EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv10\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuning\u003A\u003ATuneRequest\u0020\u005E\u002Cbool\u002Ccli\u003A\u003Aarray\u003Cunsigned\u0020char\u0020\u003E\u005E\u002CSystem\u003A\u003AString\u0020\u005E\u002Cunsigned\u0020int\u002Cunsigned\u0020int\u002Cbool\u002Cbool\u002Cbool\u002Ccli\u003A\u003Aarray\u003CSystem\u003A\u003AString\u0020\u005E\u0020\u003E\u005E\u003E\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg)
    {
      InteropHelper.EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv10\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuning\u003A\u003ATuneRequest\u0020\u005E\u002Cbool\u002Ccli\u003A\u003Aarray\u003Cunsigned\u0020char\u0020\u003E\u005E\u002CSystem\u003A\u003AString\u0020\u005E\u002Cunsigned\u0020int\u002Cunsigned\u0020int\u002Cbool\u002Cbool\u002Cbool\u002Ccli\u003A\u003Aarray\u003CSystem\u003A\u003AString\u0020\u005E\u0020\u003E\u005E\u003E\u0020\u005E\u003E(r, errmsg, 30000);
    }

    public static void EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv2\u003Cunsigned\u0020char\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003AMMICloseReasonType\u003E\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg)
    {
      InteropHelper.EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv2\u003Cunsigned\u0020char\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003AMMICloseReasonType\u003E\u0020\u005E\u003E(r, errmsg, 30000);
    }

    public static void EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv2\u003Cunsigned\u0020int\u002CSystem\u003A\u003AString\u0020\u005E\u003E\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg)
    {
      InteropHelper.EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv2\u003Cunsigned\u0020int\u002CSystem\u003A\u003AString\u0020\u005E\u003E\u0020\u005E\u003E(r, errmsg, 30000);
    }

    public static void EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv1\u003Ccli\u003A\u003Aarray\u003Cunsigned\u0020char\u0020\u003E\u005E\u003E\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg)
    {
      InteropHelper.EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv1\u003Ccli\u003A\u003Aarray\u003Cunsigned\u0020char\u0020\u003E\u005E\u003E\u0020\u005E\u003E(r, errmsg, 30000);
    }

    public static void EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv2\u003Cunsigned\u0020int\u002Ccli\u003A\u003Aarray\u003Cunsigned\u0020char\u0020\u003E\u005E\u003E\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg)
    {
      InteropHelper.EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv2\u003Cunsigned\u0020int\u002Ccli\u003A\u003Aarray\u003Cunsigned\u0020char\u0020\u003E\u005E\u003E\u0020\u005E\u003E(r, errmsg, 30000);
    }

    public static void EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv4\u003CSystem\u003A\u003AString\u0020\u005E\u002CSystem\u003A\u003AString\u0020\u005E\u002Cunsigned\u0020int\u002Cbool\u003E\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg)
    {
      InteropHelper.EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv4\u003CSystem\u003A\u003AString\u0020\u005E\u002CSystem\u003A\u003AString\u0020\u005E\u002Cunsigned\u0020int\u002Cbool\u003E\u0020\u005E\u003E(r, errmsg, 30000);
    }

    public static void EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv1\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATunerUseReason\u003E\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg)
    {
      InteropHelper.EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv1\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATunerUseReason\u003E\u0020\u005E\u003E(r, errmsg, 30000);
    }

    public static void EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv1\u003CSystem\u003A\u003AGuid\u003E\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg)
    {
      InteropHelper.EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv1\u003CSystem\u003A\u003AGuid\u003E\u0020\u005E\u003E(r, errmsg, 30000);
    }

    public static unsafe void EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv2\u003CSystem\u003A\u003AGuid\u002CSystem\u003A\u003AIntPtr\u003E\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      dv2<Guid, IntPtr> asyncDelegate = (dv2<Guid, IntPtr>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
    }

    public static unsafe void EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv0\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      dv0 asyncDelegate = (dv0) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
    }

    public static unsafe void EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv1\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ASafeRecorder\u0020\u005E\u003E\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      dv1<SafeRecorder> asyncDelegate = (dv1<SafeRecorder>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
    }

    public static unsafe void EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv1\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuning\u003A\u003ATuneRequest\u0020\u005E\u003E\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      dv1<TuneRequest> asyncDelegate = (dv1<TuneRequest>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
    }

    public static unsafe void EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv1\u003Clong\u003E\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      dv1<int> asyncDelegate = (dv1<int>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
    }

    public static unsafe void EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv1\u003Cbool\u003E\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      dv1<bool> asyncDelegate = (dv1<bool>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
    }

    public static unsafe void EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv2\u003Cbool\u002Cunsigned\u0020int\u003E\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      dv2<bool, uint> asyncDelegate = (dv2<bool, uint>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
    }

    public static unsafe void EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv1\u003Cunsigned\u0020int\u003E\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      dv1<uint> asyncDelegate = (dv1<uint>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
    }

    public static unsafe void EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv10\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuning\u003A\u003ATuneRequest\u0020\u005E\u002Cbool\u002Ccli\u003A\u003Aarray\u003Cunsigned\u0020char\u0020\u003E\u005E\u002CSystem\u003A\u003AString\u0020\u005E\u002Cunsigned\u0020int\u002Cunsigned\u0020int\u002Cbool\u002Cbool\u002Cbool\u002Ccli\u003A\u003Aarray\u003CSystem\u003A\u003AString\u0020\u005E\u0020\u003E\u005E\u003E\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      dv10<TuneRequest, bool, byte[], string, uint, uint, bool, bool, bool, string[]> asyncDelegate = (dv10<TuneRequest, bool, byte[], string, uint, uint, bool, bool, bool, string[]>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
    }

    public static unsafe void EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv2\u003Cunsigned\u0020char\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003AMMICloseReasonType\u003E\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      dv2<byte, MMICloseReasonType> asyncDelegate = (dv2<byte, MMICloseReasonType>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
    }

    public static unsafe void EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv2\u003Cunsigned\u0020int\u002CSystem\u003A\u003AString\u0020\u005E\u003E\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      dv2<uint, string> asyncDelegate = (dv2<uint, string>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
    }

    public static unsafe void EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv1\u003Ccli\u003A\u003Aarray\u003Cunsigned\u0020char\u0020\u003E\u005E\u003E\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      dv1<byte[]> asyncDelegate = (dv1<byte[]>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
    }

    public static unsafe void EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv2\u003Cunsigned\u0020int\u002Ccli\u003A\u003Aarray\u003Cunsigned\u0020char\u0020\u003E\u005E\u003E\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      dv2<uint, byte[]> asyncDelegate = (dv2<uint, byte[]>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
    }

    public static unsafe void EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv4\u003CSystem\u003A\u003AString\u0020\u005E\u002CSystem\u003A\u003AString\u0020\u005E\u002Cunsigned\u0020int\u002Cbool\u003E\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      dv4<string, string, uint, bool> asyncDelegate = (dv4<string, string, uint, bool>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
    }

    public static unsafe void EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv1\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATunerUseReason\u003E\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      dv1<TunerUseReason> asyncDelegate = (dv1<TunerUseReason>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
    }

    public static unsafe void EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv1\u003CSystem\u003A\u003AGuid\u003E\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      dv1<Guid> asyncDelegate = (dv1<Guid>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
    }

    public static RecorderUse EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad0\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ARecorderUse\u003E\u0020\u005E\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ARecorderUse\u003E(
      IAsyncResult r,
      string errmsg)
    {
      return InteropHelper.EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad0\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ARecorderUse\u003E\u0020\u005E\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ARecorderUse\u003E(r, errmsg, 30000);
    }

    [return: MarshalAs(UnmanagedType.U1)]
    public static bool EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad1\u003Cbool\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuning\u003A\u003ATuneRequest\u0020\u005E\u003E\u0020\u005E\u002Cbool\u003E(
      IAsyncResult r,
      string errmsg)
    {
      return InteropHelper.EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad1\u003Cbool\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuning\u003A\u003ATuneRequest\u0020\u005E\u003E\u0020\u005E\u002Cbool\u003E(r, errmsg, 30000);
    }

    public static string EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad0\u003CSystem\u003A\u003AString\u0020\u005E\u003E\u0020\u005E\u002CSystem\u003A\u003AString\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg)
    {
      return InteropHelper.EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad0\u003CSystem\u003A\u003AString\u0020\u005E\u003E\u0020\u005E\u002CSystem\u003A\u003AString\u0020\u005E\u003E(r, errmsg, 30000);
    }

    public static ulong EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad1\u003Cunsigned\u0020__int64\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ARecorderStreamType\u003E\u0020\u005E\u002Cunsigned\u0020__int64\u003E(
      IAsyncResult r,
      string errmsg)
    {
      return InteropHelper.EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad1\u003Cunsigned\u0020__int64\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ARecorderStreamType\u003E\u0020\u005E\u002Cunsigned\u0020__int64\u003E(r, errmsg, 30000);
    }

    public static int EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad0\u003Clong\u003E\u0020\u005E\u002Clong\u003E(
      IAsyncResult r,
      string errmsg)
    {
      return InteropHelper.EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad0\u003Clong\u003E\u0020\u005E\u002Clong\u003E(r, errmsg, 30000);
    }

    public static string EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad1\u003CSystem\u003A\u003AString\u0020\u005E\u002Cunsigned\u0020char\u003E\u0020\u005E\u002CSystem\u003A\u003AString\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg)
    {
      return InteropHelper.EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad1\u003CSystem\u003A\u003AString\u0020\u005E\u002Cunsigned\u0020char\u003E\u0020\u005E\u002CSystem\u003A\u003AString\u0020\u005E\u003E(r, errmsg, 30000);
    }

    [return: MarshalAs(UnmanagedType.U1)]
    public static bool EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad0\u003Cbool\u003E\u0020\u005E\u002Cbool\u003E(
      IAsyncResult r,
      string errmsg)
    {
      return InteropHelper.EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad0\u003Cbool\u003E\u0020\u005E\u002Cbool\u003E(r, errmsg, 30000);
    }

    public static SmartCardApplication[] EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad0\u003Ccli\u003A\u003Aarray\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ASmartCardApplication\u0020\u005E\u0020\u003E\u005E\u003E\u0020\u005E\u002Ccli\u003A\u003Aarray\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ASmartCardApplication\u0020\u005E\u0020\u003E\u005E\u003E(
      IAsyncResult r,
      string errmsg)
    {
      return InteropHelper.EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad0\u003Ccli\u003A\u003Aarray\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ASmartCardApplication\u0020\u005E\u0020\u003E\u005E\u003E\u0020\u005E\u002Ccli\u003A\u003Aarray\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ASmartCardApplication\u0020\u005E\u0020\u003E\u005E\u003E(r, errmsg, 30000);
    }

    public static object EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad1\u003CSystem\u003A\u003AObject\u0020\u005E\u002CSystem\u003A\u003AString\u0020\u005E\u003E\u0020\u005E\u002CSystem\u003A\u003AObject\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg)
    {
      return InteropHelper.EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad1\u003CSystem\u003A\u003AObject\u0020\u005E\u002CSystem\u003A\u003AString\u0020\u005E\u003E\u0020\u005E\u002CSystem\u003A\u003AObject\u0020\u005E\u003E(r, errmsg, 30000);
    }

    public static uint EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad4\u003Cunsigned\u0020int\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuning\u003A\u003ABDA_CONDITIONALACCESS_REQUESTTYPE\u002Ccli\u003A\u003Aarray\u003Cunsigned\u0020char\u0020\u003E\u005E\u002Cbool\u002CSystem\u003A\u003AString\u0020\u005E\u003E\u0020\u005E\u002Cunsigned\u0020int\u003E(
      IAsyncResult r,
      string errmsg)
    {
      return InteropHelper.EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad4\u003Cunsigned\u0020int\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuning\u003A\u003ABDA_CONDITIONALACCESS_REQUESTTYPE\u002Ccli\u003A\u003Aarray\u003Cunsigned\u0020char\u0020\u003E\u005E\u002Cbool\u002CSystem\u003A\u003AString\u0020\u005E\u003E\u0020\u005E\u002Cunsigned\u0020int\u003E(r, errmsg, 30000);
    }

    public static uint EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad3\u003Cunsigned\u0020int\u002Cunsigned\u0020int\u002Cbool\u002CSystem\u003A\u003AString\u0020\u005E\u003E\u0020\u005E\u002Cunsigned\u0020int\u003E(
      IAsyncResult r,
      string errmsg)
    {
      return InteropHelper.EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad3\u003Cunsigned\u0020int\u002Cunsigned\u0020int\u002Cbool\u002CSystem\u003A\u003AString\u0020\u005E\u003E\u0020\u005E\u002Cunsigned\u0020int\u003E(r, errmsg, 30000);
    }

    public static uint EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad4\u003Cunsigned\u0020int\u002Cunsigned\u0020int\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuning\u003A\u003ABDA_CONDITIONALACCESS_MMICLOSEREASON\u002Cbool\u002CSystem\u003A\u003AString\u0020\u005E\u003E\u0020\u005E\u002Cunsigned\u0020int\u003E(
      IAsyncResult r,
      string errmsg)
    {
      return InteropHelper.EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad4\u003Cunsigned\u0020int\u002Cunsigned\u0020int\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuning\u003A\u003ABDA_CONDITIONALACCESS_MMICLOSEREASON\u002Cbool\u002CSystem\u003A\u003AString\u0020\u005E\u003E\u0020\u005E\u002Cunsigned\u0020int\u003E(r, errmsg, 30000);
    }

    public static string EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad1\u003CSystem\u003A\u003AString\u0020\u005E\u002Cunsigned\u0020int\u003E\u0020\u005E\u002CSystem\u003A\u003AString\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg)
    {
      return InteropHelper.EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad1\u003CSystem\u003A\u003AString\u0020\u005E\u002Cunsigned\u0020int\u003E\u0020\u005E\u002CSystem\u003A\u003AString\u0020\u005E\u003E(r, errmsg, 30000);
    }

    public static string EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad2\u003CSystem\u003A\u003AString\u0020\u005E\u002CSystem\u003A\u003AString\u0020const\u0020\u005E\u002CSystem\u003A\u003AString\u0020const\u0020\u005E\u003E\u0020\u005E\u002CSystem\u003A\u003AString\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg)
    {
      return InteropHelper.EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad2\u003CSystem\u003A\u003AString\u0020\u005E\u002CSystem\u003A\u003AString\u0020const\u0020\u005E\u002CSystem\u003A\u003AString\u0020const\u0020\u005E\u003E\u0020\u005E\u002CSystem\u003A\u003AString\u0020\u005E\u003E(r, errmsg, 30000);
    }

    public static uint EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad4\u003Cunsigned\u0020int\u002CSystem\u003A\u003AString\u0020const\u0020\u005E\u002CSystem\u003A\u003AString\u0020const\u0020\u005E\u002Cbool\u002CSystem\u003A\u003AString\u0020const\u0020\u005E\u003E\u0020\u005E\u002Cunsigned\u0020int\u003E(
      IAsyncResult r,
      string errmsg)
    {
      return InteropHelper.EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad4\u003Cunsigned\u0020int\u002CSystem\u003A\u003AString\u0020const\u0020\u005E\u002CSystem\u003A\u003AString\u0020const\u0020\u005E\u002Cbool\u002CSystem\u003A\u003AString\u0020const\u0020\u005E\u003E\u0020\u005E\u002Cunsigned\u0020int\u003E(r, errmsg, 30000);
    }

    public static uint EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad3\u003Cunsigned\u0020int\u002Cbool\u002Ccli\u003A\u003Aarray\u003Cunsigned\u0020char\u0020\u003E\u005E\u002CSystem\u003A\u003AString\u0020\u005E\u003E\u0020\u005E\u002Cunsigned\u0020int\u003E(
      IAsyncResult r,
      string errmsg)
    {
      return InteropHelper.EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad3\u003Cunsigned\u0020int\u002Cbool\u002Ccli\u003A\u003Aarray\u003Cunsigned\u0020char\u0020\u003E\u005E\u002CSystem\u003A\u003AString\u0020\u005E\u003E\u0020\u005E\u002Cunsigned\u0020int\u003E(r, errmsg, 30000);
    }

    public static uint EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad0\u003Cunsigned\u0020int\u003E\u0020\u005E\u002Cunsigned\u0020int\u003E(
      IAsyncResult r,
      string errmsg)
    {
      return InteropHelper.EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad0\u003Cunsigned\u0020int\u003E\u0020\u005E\u002Cunsigned\u0020int\u003E(r, errmsg, 30000);
    }

    public static unsafe RecorderUse EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad0\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ARecorderUse\u003E\u0020\u005E\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ARecorderUse\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      d0<RecorderUse> asyncDelegate = (d0<RecorderUse>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      object obj = (object) null;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        obj = (object) asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
      return (RecorderUse) obj;
    }

    [return: MarshalAs(UnmanagedType.U1)]
    public static unsafe bool EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad1\u003Cbool\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuning\u003A\u003ATuneRequest\u0020\u005E\u003E\u0020\u005E\u002Cbool\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      d1<bool, TuneRequest> asyncDelegate = (d1<bool, TuneRequest>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      object obj = (object) null;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        obj = (object) asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
      return (bool) obj;
    }

    public static unsafe string EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad0\u003CSystem\u003A\u003AString\u0020\u005E\u003E\u0020\u005E\u002CSystem\u003A\u003AString\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      d0<string> asyncDelegate = (d0<string>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      object obj = (object) null;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        obj = (object) asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
      return (string) obj;
    }

    public static unsafe ulong EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad1\u003Cunsigned\u0020__int64\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ARecorderStreamType\u003E\u0020\u005E\u002Cunsigned\u0020__int64\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      d1<ulong, RecorderStreamType> asyncDelegate = (d1<ulong, RecorderStreamType>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      object obj = (object) null;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        obj = (object) asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
      return (ulong) obj;
    }

    public static unsafe int EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad0\u003Clong\u003E\u0020\u005E\u002Clong\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      d0<int> asyncDelegate = (d0<int>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      object obj = (object) null;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        obj = (object) asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
      return (int) obj;
    }

    public static unsafe string EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad1\u003CSystem\u003A\u003AString\u0020\u005E\u002Cunsigned\u0020char\u003E\u0020\u005E\u002CSystem\u003A\u003AString\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      d1<string, byte> asyncDelegate = (d1<string, byte>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      object obj = (object) null;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        obj = (object) asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
      return (string) obj;
    }

    [return: MarshalAs(UnmanagedType.U1)]
    public static unsafe bool EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad0\u003Cbool\u003E\u0020\u005E\u002Cbool\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      d0<bool> asyncDelegate = (d0<bool>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      object obj = (object) null;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        obj = (object) asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
      return (bool) obj;
    }

    public static unsafe SmartCardApplication[] EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad0\u003Ccli\u003A\u003Aarray\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ASmartCardApplication\u0020\u005E\u0020\u003E\u005E\u003E\u0020\u005E\u002Ccli\u003A\u003Aarray\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ASmartCardApplication\u0020\u005E\u0020\u003E\u005E\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      d0<SmartCardApplication[]> asyncDelegate = (d0<SmartCardApplication[]>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      object obj = (object) null;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        obj = (object) asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
      return (SmartCardApplication[]) obj;
    }

    public static unsafe object EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad1\u003CSystem\u003A\u003AObject\u0020\u005E\u002CSystem\u003A\u003AString\u0020\u005E\u003E\u0020\u005E\u002CSystem\u003A\u003AObject\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      d1<object, string> asyncDelegate = (d1<object, string>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        return asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
    }

    public static unsafe uint EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad4\u003Cunsigned\u0020int\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuning\u003A\u003ABDA_CONDITIONALACCESS_REQUESTTYPE\u002Ccli\u003A\u003Aarray\u003Cunsigned\u0020char\u0020\u003E\u005E\u002Cbool\u002CSystem\u003A\u003AString\u0020\u005E\u003E\u0020\u005E\u002Cunsigned\u0020int\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      d4<uint, BDA_CONDITIONALACCESS_REQUESTTYPE, byte[], bool, string> asyncDelegate = (d4<uint, BDA_CONDITIONALACCESS_REQUESTTYPE, byte[], bool, string>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      object obj = (object) null;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        obj = (object) asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
      return (uint) obj;
    }

    public static unsafe uint EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad3\u003Cunsigned\u0020int\u002Cunsigned\u0020int\u002Cbool\u002CSystem\u003A\u003AString\u0020\u005E\u003E\u0020\u005E\u002Cunsigned\u0020int\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      d3<uint, uint, bool, string> asyncDelegate = (d3<uint, uint, bool, string>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      object obj = (object) null;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        obj = (object) asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
      return (uint) obj;
    }

    public static unsafe uint EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad4\u003Cunsigned\u0020int\u002Cunsigned\u0020int\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuning\u003A\u003ABDA_CONDITIONALACCESS_MMICLOSEREASON\u002Cbool\u002CSystem\u003A\u003AString\u0020\u005E\u003E\u0020\u005E\u002Cunsigned\u0020int\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      d4<uint, uint, BDA_CONDITIONALACCESS_MMICLOSEREASON, bool, string> asyncDelegate = (d4<uint, uint, BDA_CONDITIONALACCESS_MMICLOSEREASON, bool, string>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      object obj = (object) null;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        obj = (object) asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
      return (uint) obj;
    }

    public static unsafe string EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad1\u003CSystem\u003A\u003AString\u0020\u005E\u002Cunsigned\u0020int\u003E\u0020\u005E\u002CSystem\u003A\u003AString\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      d1<string, uint> asyncDelegate = (d1<string, uint>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      object obj = (object) null;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        obj = (object) asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
      return (string) obj;
    }

    public static unsafe string EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad2\u003CSystem\u003A\u003AString\u0020\u005E\u002CSystem\u003A\u003AString\u0020const\u0020\u005E\u002CSystem\u003A\u003AString\u0020const\u0020\u005E\u003E\u0020\u005E\u002CSystem\u003A\u003AString\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      d2<string, string, string> asyncDelegate = (d2<string, string, string>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      object obj = (object) null;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        obj = (object) asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
      return (string) obj;
    }

    public static unsafe uint EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad4\u003Cunsigned\u0020int\u002CSystem\u003A\u003AString\u0020const\u0020\u005E\u002CSystem\u003A\u003AString\u0020const\u0020\u005E\u002Cbool\u002CSystem\u003A\u003AString\u0020const\u0020\u005E\u003E\u0020\u005E\u002Cunsigned\u0020int\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      d4<uint, string, string, bool, string> asyncDelegate = (d4<uint, string, string, bool, string>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      object obj = (object) null;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        obj = (object) asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
      return (uint) obj;
    }

    public static unsafe uint EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad3\u003Cunsigned\u0020int\u002Cbool\u002Ccli\u003A\u003Aarray\u003Cunsigned\u0020char\u0020\u003E\u005E\u002CSystem\u003A\u003AString\u0020\u005E\u003E\u0020\u005E\u002Cunsigned\u0020int\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      d3<uint, bool, byte[], string> asyncDelegate = (d3<uint, bool, byte[], string>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      object obj = (object) null;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        obj = (object) asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
      return (uint) obj;
    }

    public static unsafe uint EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad0\u003Cunsigned\u0020int\u003E\u0020\u005E\u002Cunsigned\u0020int\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      d0<uint> asyncDelegate = (d0<uint>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      object obj = (object) null;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        obj = (object) asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
      return (uint) obj;
    }

    public static void FireAndForget\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv1\u003CSystem\u003A\u003AIntPtr\u003E\u0020\u005E\u003E(
      IAsyncResult r)
    {
      dv1<IntPtr> asyncState = (dv1<IntPtr>) r.AsyncState;
      try
      {
        asyncState.EndInvoke(r);
      }
      catch (Exception ex)
      {
        if (InteropHelper.FilterException(ex))
          return;
        throw;
      }
    }

    public static void FireAndForget\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv2\u003CSystem\u003A\u003AIntPtr\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ASafeRecorder\u0020\u005E\u003E\u0020\u005E\u003E(
      IAsyncResult r)
    {
      dv2<IntPtr, SafeRecorder> asyncState = (dv2<IntPtr, SafeRecorder>) r.AsyncState;
      try
      {
        asyncState.EndInvoke(r);
      }
      catch (Exception ex)
      {
        if (InteropHelper.FilterException(ex))
          return;
        throw;
      }
    }

    public static void FireAndForget\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv1\u003CSystem\u003A\u003AString\u0020\u005E\u003E\u0020\u005E\u003E(
      IAsyncResult r)
    {
      dv1<string> asyncState = (dv1<string>) r.AsyncState;
      try
      {
        asyncState.EndInvoke(r);
      }
      catch (Exception ex)
      {
        if (InteropHelper.FilterException(ex))
          return;
        throw;
      }
    }

    public static void FireAndForget\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv1\u003Cbool\u003E\u0020\u005E\u003E(
      IAsyncResult r)
    {
      dv1<bool> asyncState = (dv1<bool>) r.AsyncState;
      try
      {
        asyncState.EndInvoke(r);
      }
      catch (Exception ex)
      {
        if (InteropHelper.FilterException(ex))
          return;
        throw;
      }
    }

    public static void FireAndForget\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv2\u003Cunsigned\u0020int\u002Cunsigned\u0020int\u003E\u0020\u005E\u003E(
      IAsyncResult r)
    {
      dv2<uint, uint> asyncState = (dv2<uint, uint>) r.AsyncState;
      try
      {
        asyncState.EndInvoke(r);
      }
      catch (Exception ex)
      {
        if (InteropHelper.FilterException(ex))
          return;
        throw;
      }
    }

    public static void FireAndForget\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv1\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuning\u003A\u003ATuneRequest\u0020\u005E\u003E\u0020\u005E\u003E(
      IAsyncResult r)
    {
      dv1<TuneRequest> asyncState = (dv1<TuneRequest>) r.AsyncState;
      try
      {
        asyncState.EndInvoke(r);
      }
      catch (Exception ex)
      {
        if (InteropHelper.FilterException(ex))
          return;
        throw;
      }
    }

    public static void FireAndForget\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv1\u003Clong\u003E\u0020\u005E\u003E(
      IAsyncResult r)
    {
      dv1<int> asyncState = (dv1<int>) r.AsyncState;
      try
      {
        asyncState.EndInvoke(r);
      }
      catch (Exception ex)
      {
        if (InteropHelper.FilterException(ex))
          return;
        throw;
      }
    }

    public static void FireAndForget\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv2\u003Cunsigned\u0020short\u002Cunsigned\u0020short\u003E\u0020\u005E\u003E(
      IAsyncResult r)
    {
      dv2<ushort, ushort> asyncState = (dv2<ushort, ushort>) r.AsyncState;
      try
      {
        asyncState.EndInvoke(r);
      }
      catch (Exception ex)
      {
        if (InteropHelper.FilterException(ex))
          return;
        throw;
      }
    }

    public static void FireAndForget\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv0\u0020\u005E\u003E(
      IAsyncResult r)
    {
      dv0 asyncState = (dv0) r.AsyncState;
      try
      {
        asyncState.EndInvoke(r);
      }
      catch (Exception ex)
      {
        if (InteropHelper.FilterException(ex))
          return;
        throw;
      }
    }

    public static void FireAndForget\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv1\u003Cint\u003E\u0020\u005E\u003E(
      IAsyncResult r)
    {
      dv1<int> asyncState = (dv1<int>) r.AsyncState;
      try
      {
        asyncState.EndInvoke(r);
      }
      catch (Exception ex)
      {
        if (InteropHelper.FilterException(ex))
          return;
        throw;
      }
    }

    public static void FireAndForget\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv3\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ARecorderStreamType\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ARecorderBitRateChangeType\u002Cunsigned\u0020__int64\u003E\u0020\u005E\u003E(
      IAsyncResult r)
    {
      dv3<RecorderStreamType, RecorderBitRateChangeType, ulong> asyncState = (dv3<RecorderStreamType, RecorderBitRateChangeType, ulong>) r.AsyncState;
      try
      {
        asyncState.EndInvoke(r);
      }
      catch (Exception ex)
      {
        if (InteropHelper.FilterException(ex))
          return;
        throw;
      }
    }

    public static void FireAndForget\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv2\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ARecorderUse\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ARecorderUse\u003E\u0020\u005E\u003E(
      IAsyncResult r)
    {
      dv2<RecorderUse, RecorderUse> asyncState = (dv2<RecorderUse, RecorderUse>) r.AsyncState;
      try
      {
        asyncState.EndInvoke(r);
      }
      catch (Exception ex)
      {
        if (InteropHelper.FilterException(ex))
          return;
        throw;
      }
    }

    public static void FireAndForget\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv6\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003AEnTvRat_System\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003AEnTvRat_GenericLevel\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ABfEnTvRat_GenericAttributes\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003AEnTvRat_System\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003AEnTvRat_GenericLevel\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ABfEnTvRat_GenericAttributes\u003E\u0020\u005E\u003E(
      IAsyncResult r)
    {
      dv6<EnTvRat_System, EnTvRat_GenericLevel, BfEnTvRat_GenericAttributes, EnTvRat_System, EnTvRat_GenericLevel, BfEnTvRat_GenericAttributes> asyncState = (dv6<EnTvRat_System, EnTvRat_GenericLevel, BfEnTvRat_GenericAttributes, EnTvRat_System, EnTvRat_GenericLevel, BfEnTvRat_GenericAttributes>) r.AsyncState;
      try
      {
        asyncState.EndInvoke(r);
      }
      catch (Exception ex)
      {
        if (InteropHelper.FilterException(ex))
          return;
        throw;
      }
    }

    public static void FireAndForget\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv1\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003AProtType\u003E\u0020\u005E\u003E(
      IAsyncResult r)
    {
      dv1<ProtType> asyncState = (dv1<ProtType>) r.AsyncState;
      try
      {
        asyncState.EndInvoke(r);
      }
      catch (Exception ex)
      {
        if (InteropHelper.FilterException(ex))
          return;
        throw;
      }
    }

    public static void FireAndForget\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv2\u003Cunsigned\u0020int\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003AEasPriorityType\u003E\u0020\u005E\u003E(
      IAsyncResult r)
    {
      dv2<uint, EasPriorityType> asyncState = (dv2<uint, EasPriorityType>) r.AsyncState;
      try
      {
        asyncState.EndInvoke(r);
      }
      catch (Exception ex)
      {
        if (InteropHelper.FilterException(ex))
          return;
        throw;
      }
    }

    public static void FireAndForget\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv2\u003Cbool\u002Cunsigned\u0020int\u003E\u0020\u005E\u003E(
      IAsyncResult r)
    {
      dv2<bool, uint> asyncState = (dv2<bool, uint>) r.AsyncState;
      try
      {
        asyncState.EndInvoke(r);
      }
      catch (Exception ex)
      {
        if (InteropHelper.FilterException(ex))
          return;
        throw;
      }
    }

    public static void FireAndForget\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv1\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ACasCardStatusType\u003E\u0020\u005E\u003E(
      IAsyncResult r)
    {
      dv1<CasCardStatusType> asyncState = (dv1<CasCardStatusType>) r.AsyncState;
      try
      {
        asyncState.EndInvoke(r);
      }
      catch (Exception ex)
      {
        if (InteropHelper.FilterException(ex))
          return;
        throw;
      }
    }

    public static void FireAndForget\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv1\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ADrmPairingStatus\u003E\u0020\u005E\u003E(
      IAsyncResult r)
    {
      dv1<DrmPairingStatus> asyncState = (dv1<DrmPairingStatus>) r.AsyncState;
      try
      {
        asyncState.EndInvoke(r);
      }
      catch (Exception ex)
      {
        if (InteropHelper.FilterException(ex))
          return;
        throw;
      }
    }

    public static void FireAndForget\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv1\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ACasEntitlementType\u003E\u0020\u005E\u003E(
      IAsyncResult r)
    {
      dv1<CasEntitlementType> asyncState = (dv1<CasEntitlementType>) r.AsyncState;
      try
      {
        asyncState.EndInvoke(r);
      }
      catch (Exception ex)
      {
        if (InteropHelper.FilterException(ex))
          return;
        throw;
      }
    }

    public static unsafe void AsyncWait(void* h, string errmsg, int timeOut)
    {
      try
      {
        InteropHelper.InternalAsyncWait(h, errmsg, timeOut);
      }
      catch (Exception ex)
      {
        if (InteropHelper.FilterException(ex))
          return;
        throw;
      }
    }

    [return: MarshalAs(UnmanagedType.U1)]
    public static bool IsAssignableFrom\u003CSystem\u003A\u003AReflection\u003A\u003ATargetInvocationException\u0020\u005E\u002CSystem\u003A\u003AException\u0020\u005E\u003E(
      Exception source)
    {
      return source is TargetInvocationException;
    }

    [return: MarshalAs(UnmanagedType.U1)]
    public static bool IsAssignableFrom\u003CSystem\u003A\u003ATypeInitializationException\u0020\u005E\u002CSystem\u003A\u003AException\u0020\u005E\u003E(
      Exception source)
    {
      return source is TypeInitializationException;
    }

    [return: MarshalAs(UnmanagedType.U1)]
    public static bool IsAssignableFrom\u003CSystem\u003A\u003ARuntime\u003A\u003AInteropServices\u003A\u003ACOMException\u0020\u005E\u002CSystem\u003A\u003AException\u0020\u005E\u003E(
      Exception source)
    {
      return source is COMException;
    }

    [return: MarshalAs(UnmanagedType.U1)]
    public static bool IsAssignableFrom\u003CSystem\u003A\u003ARuntime\u003A\u003AInteropServices\u003A\u003AInvalidComObjectException\u0020\u005E\u002CSystem\u003A\u003AException\u0020\u005E\u003E(
      Exception source)
    {
      return source is InvalidComObjectException;
    }

    [return: MarshalAs(UnmanagedType.U1)]
    public static bool IsAssignableFrom\u003CSystem\u003A\u003ATimeoutException\u0020\u005E\u002CSystem\u003A\u003AException\u0020\u005E\u003E(
      Exception source)
    {
      return source is TimeoutException;
    }

    [return: MarshalAs(UnmanagedType.U1)]
    public static bool IsAssignableFrom\u003CSystem\u003A\u003AOperationCanceledException\u0020\u005E\u002CSystem\u003A\u003AException\u0020\u005E\u003E(
      Exception source)
    {
      return source is OperationCanceledException;
    }

    [return: MarshalAs(UnmanagedType.U1)]
    public static bool IsAssignableFrom\u003CSystem\u003A\u003AApplicationException\u0020\u005E\u002CSystem\u003A\u003AException\u0020\u005E\u003E(
      Exception source)
    {
      return source is ApplicationException;
    }

    [return: MarshalAs(UnmanagedType.U1)]
    public static bool IsAssignableFrom\u003CSystem\u003A\u003AUriFormatException\u0020\u005E\u002CSystem\u003A\u003AException\u0020\u005E\u003E(
      Exception source)
    {
      return source is UriFormatException;
    }

    [return: MarshalAs(UnmanagedType.U1)]
    public static bool FilterException(Exception e)
    {
      Exception exception = e != null ? e : throw new NullReferenceException();
      if ((e is TargetInvocationException ? 1 : 0) != 0 || (e is TypeInitializationException ? 1 : 0) != 0)
      {
        Exception innerException = e.InnerException;
        if (innerException == null)
          return false;
        exception = innerException;
      }
      if ((exception is COMException ? 1 : 0) == 0 && (exception is InvalidComObjectException ? 1 : 0) == 0)
      {
        if ((exception is TimeoutException ? 1 : 0) != 0)
          throw new COMException(exception.Message, -2147467260);
        if ((exception is OperationCanceledException ? 1 : 0) == 0 && (exception is ApplicationException ? 1 : 0) == 0 && (exception is UriFormatException ? 1 : 0) == 0)
          return false;
      }
      return true;
    }

    public static unsafe void InternalAsyncWait(void* h, string errmsg, int timeOut)
    {
      Exception exception = (Exception) null;
      Stopwatch stopwatch = Stopwatch.StartNew();
      double num1 = (double) timeOut;
      do
      {
        TimeSpan elapsed = stopwatch.Elapsed;
        uint num2 = 0;
        if (elapsed.TotalMilliseconds < num1)
          num2 = (uint) timeOut - (uint) elapsed.TotalMilliseconds;
        switch (\u003CModule\u003E.MsgWaitForMultipleObjectsEx(1U, &h, num2, 1279U, 2U))
        {
          case uint.MaxValue:
            goto label_12;
          case 0:
            goto label_13;
          case 258:
            goto label_11;
          default:
            tagMSG tagMsg;
            if (\u003CModule\u003E.PeekMessageW(&tagMsg, (HWND__*) 0, 0U, 0U, 1U) != 0)
            {
              do
              {
                // ISSUE: cast to a reference type
                // ISSUE: explicit reference operation
                if (^(int&) ((IntPtr) &tagMsg + 4) == 18)
                  exception = (Exception) new OperationCanceledException(errmsg + " WM_QUIT");
                else
                  \u003CModule\u003E.DispatchMessageW(&tagMsg);
              }
              while (\u003CModule\u003E.PeekMessageW(&tagMsg, (HWND__*) 0, 0U, 0U, 1U) != 0);
            }
            continue;
        }
      }
      while (exception == null);
      goto label_14;
label_11:
      exception = (Exception) new TimeoutException(string.Format(" Timeout of {0} ms exceeded for async wait in {1}", (object) timeOut, (object) errmsg));
      goto label_13;
label_12:
      exception = (Exception) new ApplicationException(errmsg + " MsgWaitMulti WAIT_FAILED");
label_13:
      if (exception == null)
        return;
label_14:
      throw exception;
    }

    public static unsafe Guid BSTRToGuid(ushort* bstr)
    {
      _GUID guidNull = \u003CModule\u003E.GUID_NULL;
      MarshalHelper.ComException(\u003CModule\u003E.CLSIDFromString(bstr, &guidNull));
      return *(Guid*) (int) &guidNull;
    }

    public static unsafe string[] SafeArrayToStringArray(tagSAFEARRAY** ppsa)
    {
      if (\u003CModule\u003E.SafeArrayGetDim((tagSAFEARRAY*) *(int*) ppsa) != 1U)
        throw new ArgumentException("must be 1 dimension");
      int num = *(int*) ppsa;
      int length = *(int*) (num + 16);
      if (length == 0)
        return (string[]) null;
      ushort** numPtr1 = (ushort**) 0;
      string[] stringArray = new string[length];
      MarshalHelper.ComException(\u003CModule\u003E.SafeArrayAccessData((tagSAFEARRAY*) num, (void**) &numPtr1));
      int index = 0;
      if (0 < length)
      {
        do
        {
          string str = (string) null;
          ushort** numPtr2 = (ushort**) (index * 4 + (IntPtr) numPtr1);
          if (*(int*) numPtr2 != 0)
            str = new string((char*) *(int*) numPtr2);
          stringArray.SetValue((object) str, index);
          ++index;
        }
        while (index < length);
      }
      MarshalHelper.ComException(\u003CModule\u003E.SafeArrayUnaccessData((tagSAFEARRAY*) *(int*) ppsa));
      MarshalHelper.ComException(\u003CModule\u003E.SafeArrayDestroy((tagSAFEARRAY*) *(int*) ppsa));
      *(int*) ppsa = 0;
      return stringArray;
    }

    public static unsafe void StringArrayToSafeArray(tagSAFEARRAY** ppsaTo, string[] strings)
    {
      \u0024ArrayType\u0024\u0024\u0024BY00UtagSAFEARRAYBOUND\u0040\u0040 utagSafearraybound;
      // ISSUE: cast to a reference type
      // ISSUE: initblk instruction
      __memset((\u0024ArrayType\u0024\u0024\u0024BY00UtagSAFEARRAYBOUND\u0040\u0040&) ((IntPtr) &utagSafearraybound + 4), 0, 4);
      // ISSUE: cast to a reference type
      // ISSUE: explicit reference operation
      ^(int&) ((IntPtr) &utagSafearraybound + 4) = 0;
      // ISSUE: cast to a reference type
      // ISSUE: explicit reference operation
      ^(int&) ref utagSafearraybound = strings.Length;
      tagSAFEARRAY* tagSafearrayPtr = \u003CModule\u003E.SafeArrayCreate((ushort) 8, 1U, (tagSAFEARRAYBOUND*) &utagSafearraybound);
      *(int*) ppsaTo = (int) tagSafearrayPtr;
      if ((IntPtr) tagSafearrayPtr == IntPtr.Zero)
        throw new OutOfMemoryException("SafeArrayCreate Failed");
      ushort** numPtr;
      MarshalHelper.ComException(\u003CModule\u003E.SafeArrayAccessData(tagSafearrayPtr, (void**) &numPtr));
      int index = 0;
      if (0 < strings.Length)
      {
        do
        {
          IntPtr bstr = Marshal.StringToBSTR((string) strings.GetValue(index));
          *(int*) (index * 4 + (IntPtr) numPtr) = (int) bstr.ToPointer();
          ++index;
        }
        while (index < strings.Length);
      }
      MarshalHelper.ComException(\u003CModule\u003E.SafeArrayUnaccessData((tagSAFEARRAY*) *(int*) ppsaTo));
    }

    public static unsafe Guid[] SafeArrayToGuidArray(tagSAFEARRAY** ppsa)
    {
      if (\u003CModule\u003E.SafeArrayGetDim((tagSAFEARRAY*) *(int*) ppsa) != 1U)
        throw new ArgumentException("must be 1 dimension");
      int num = *(int*) ppsa;
      int length = *(int*) (num + 16);
      if (length == 0)
        return (Guid[]) null;
      ushort** numPtr = (ushort**) 0;
      Guid[] guidArray = new Guid[length];
      MarshalHelper.ComException(\u003CModule\u003E.SafeArrayAccessData((tagSAFEARRAY*) num, (void**) &numPtr));
      int index = 0;
      if (0 < length)
      {
        do
        {
          CComBSTR ccomBstr;
          \u003CModule\u003E.ATL\u002ECComBSTR\u002E\u007Bctor\u007D(&ccomBstr, (ushort*) *(int*) (index * 4 + (IntPtr) numPtr));
          // ISSUE: fault handler
          try
          {
            // ISSUE: cast to a reference type
            // ISSUE: explicit reference operation
            Guid guid = InteropHelper.BSTRToGuid((ushort*) ^(int&) ref ccomBstr);
            guidArray.SetValue((object) guid, index);
          }
          __fault
          {
            // ISSUE: method pointer
            // ISSUE: cast to a function pointer type
            \u003CModule\u003E.___CxxCallUnwindDtor((__FnPtr<void (void*)>) __methodptr(ATL\u002ECComBSTR\u002E\u007Bdtor\u007D), (void*) &ccomBstr);
          }
          // ISSUE: cast to a reference type
          // ISSUE: explicit reference operation
          \u003CModule\u003E.SysFreeString((ushort*) ^(int&) ref ccomBstr);
          ++index;
        }
        while (index < length);
      }
      MarshalHelper.ComException(\u003CModule\u003E.SafeArrayUnaccessData((tagSAFEARRAY*) *(int*) ppsa));
      MarshalHelper.ComException(\u003CModule\u003E.SafeArrayDestroy((tagSAFEARRAY*) *(int*) ppsa));
      *(int*) ppsa = 0;
      return guidArray;
    }

    public static unsafe byte[] SafeArrayToByteArray(tagSAFEARRAY** ppsa)
    {
      if (\u003CModule\u003E.SafeArrayGetDim((tagSAFEARRAY*) *(int*) ppsa) != 1U)
        throw new ArgumentException("must be 1 dimension");
      int num = *(int*) ppsa;
      int length = *(int*) (num + 16);
      if (length == 0)
        return (byte[]) null;
      byte* numPtr = (byte*) 0;
      byte[] byteArray = new byte[length];
      MarshalHelper.ComException(\u003CModule\u003E.SafeArrayAccessData((tagSAFEARRAY*) num, (void**) &numPtr));
      int index = 0;
      if (0 < length)
      {
        do
        {
          byteArray.SetValue((object) *(byte*) (index + (IntPtr) numPtr), index);
          ++index;
        }
        while (index < length);
      }
      MarshalHelper.ComException(\u003CModule\u003E.SafeArrayUnaccessData((tagSAFEARRAY*) *(int*) ppsa));
      MarshalHelper.ComException(\u003CModule\u003E.SafeArrayDestroy((tagSAFEARRAY*) *(int*) ppsa));
      *(int*) ppsa = 0;
      return byteArray;
    }

    public static unsafe void ByteArrayToSafeArray(tagSAFEARRAY** ppsaTo, byte[] value)
    {
      \u0024ArrayType\u0024\u0024\u0024BY00UtagSAFEARRAYBOUND\u0040\u0040 utagSafearraybound;
      // ISSUE: cast to a reference type
      // ISSUE: initblk instruction
      __memset((\u0024ArrayType\u0024\u0024\u0024BY00UtagSAFEARRAYBOUND\u0040\u0040&) ((IntPtr) &utagSafearraybound + 4), 0, 4);
      // ISSUE: cast to a reference type
      // ISSUE: explicit reference operation
      ^(int&) ((IntPtr) &utagSafearraybound + 4) = 0;
      // ISSUE: cast to a reference type
      // ISSUE: explicit reference operation
      ^(int&) ref utagSafearraybound = value.Length;
      tagSAFEARRAY* tagSafearrayPtr = \u003CModule\u003E.SafeArrayCreate((ushort) 17, 1U, (tagSAFEARRAYBOUND*) &utagSafearraybound);
      *(int*) ppsaTo = (int) tagSafearrayPtr;
      if ((IntPtr) tagSafearrayPtr == IntPtr.Zero)
        throw new OutOfMemoryException("SafeArrayCreate Failed");
      byte* numPtr;
      MarshalHelper.ComException(\u003CModule\u003E.SafeArrayAccessData(tagSafearrayPtr, (void**) &numPtr));
      int index = 0;
      if (0 < value.Length)
      {
        do
        {
          *(sbyte*) (index + (IntPtr) numPtr) = (sbyte) (byte) value.GetValue(index);
          ++index;
        }
        while (index < value.Length);
      }
      MarshalHelper.ComException(\u003CModule\u003E.SafeArrayUnaccessData((tagSAFEARRAY*) *(int*) ppsaTo));
    }

    public static unsafe void ByteArrayToBSTR(ushort** to, byte[] from)
    {
      int length = from.Length;
      ushort* numPtr = \u003CModule\u003E.SysAllocStringByteLen((sbyte*) 0, (uint) length);
      *(int*) to = (int) numPtr;
      IntPtr destination = IntPtr.Zero != (IntPtr) numPtr ? (IntPtr) (void*) numPtr : throw new OutOfMemoryException("SysAllocString failed");
      Marshal.Copy(from, 0, destination, length);
    }

    public static unsafe byte[] BSTRToByteArray(ushort* b)
    {
      int length = (int) \u003CModule\u003E.SysStringByteLen(b);
      byte[] destination = new byte[length];
      Marshal.Copy((IntPtr) (void*) b, destination, 0, length);
      return destination;
    }

    public static unsafe string ByteArrayToString(byte[] from)
    {
      CComBSTR ccomBstr;
      // ISSUE: cast to a reference type
      // ISSUE: explicit reference operation
      ^(int&) ref ccomBstr = 0;
      string str1;
      // ISSUE: fault handler
      try
      {
        InteropHelper.ByteArrayToBSTR((ushort**) &ccomBstr, from);
        // ISSUE: cast to a reference type
        // ISSUE: explicit reference operation
        if (^(int&) ref ccomBstr != 0)
        {
          // ISSUE: cast to a reference type
          // ISSUE: explicit reference operation
          str1 = new string((char*) ^(int&) ref ccomBstr);
        }
        else
          goto label_5;
      }
      __fault
      {
        // ISSUE: method pointer
        // ISSUE: cast to a function pointer type
        \u003CModule\u003E.___CxxCallUnwindDtor((__FnPtr<void (void*)>) __methodptr(ATL\u002ECComBSTR\u002E\u007Bdtor\u007D), (void*) &ccomBstr);
      }
      // ISSUE: cast to a reference type
      // ISSUE: explicit reference operation
      \u003CModule\u003E.SysFreeString((ushort*) ^(int&) ref ccomBstr);
      return str1;
label_5:
      string str2;
      // ISSUE: fault handler
      try
      {
        str2 = (string) null;
      }
      __fault
      {
        // ISSUE: method pointer
        // ISSUE: cast to a function pointer type
        \u003CModule\u003E.___CxxCallUnwindDtor((__FnPtr<void (void*)>) __methodptr(ATL\u002ECComBSTR\u002E\u007Bdtor\u007D), (void*) &ccomBstr);
      }
      // ISSUE: cast to a reference type
      // ISSUE: explicit reference operation
      \u003CModule\u003E.SysFreeString((ushort*) ^(int&) ref ccomBstr);
      return str2;
    }

    public static unsafe byte[] StringToByteArray(string from)
    {
      CComBSTR ccomBstr;
      // ISSUE: cast to a reference type
      // ISSUE: explicit reference operation
      ^(int&) ref ccomBstr = 0;
      byte[] byteArray;
      // ISSUE: fault handler
      try
      {
        ushort* pointer = (ushort*) Marshal.StringToBSTR(from).ToPointer();
        if (IntPtr.Zero != (IntPtr) pointer)
        {
          \u003CModule\u003E.SysFreeString((ushort*) 0);
          // ISSUE: cast to a reference type
          // ISSUE: explicit reference operation
          ^(int&) ref ccomBstr = (int) pointer;
        }
        // ISSUE: cast to a reference type
        // ISSUE: explicit reference operation
        byteArray = InteropHelper.BSTRToByteArray((ushort*) ^(int&) ref ccomBstr);
      }
      __fault
      {
        // ISSUE: method pointer
        // ISSUE: cast to a function pointer type
        \u003CModule\u003E.___CxxCallUnwindDtor((__FnPtr<void (void*)>) __methodptr(ATL\u002ECComBSTR\u002E\u007Bdtor\u007D), (void*) &ccomBstr);
      }
      // ISSUE: cast to a reference type
      // ISSUE: explicit reference operation
      \u003CModule\u003E.SysFreeString((ushort*) ^(int&) ref ccomBstr);
      return byteArray;
    }

    public static void EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv1\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ARecorderMgrFlags\u003E\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg)
    {
      InteropHelper.EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv1\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ARecorderMgrFlags\u003E\u0020\u005E\u003E(r, errmsg, 30000);
    }

    public static unsafe void EndInvokeV\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv1\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ARecorderMgrFlags\u003E\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      dv1<RecorderMgrFlags> asyncDelegate = (dv1<RecorderMgrFlags>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
    }

    public static RemoteTunerEnumerator EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad0\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ARemoteTunerEnumerator\u0020\u005E\u003E\u0020\u005E\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ARemoteTunerEnumerator\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg)
    {
      return InteropHelper.EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad0\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ARemoteTunerEnumerator\u0020\u005E\u003E\u0020\u005E\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ARemoteTunerEnumerator\u0020\u005E\u003E(r, errmsg, 30000);
    }

    public static object EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad0\u003CSystem\u003A\u003AObject\u0020\u005E\u003E\u0020\u005E\u002CSystem\u003A\u003AObject\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg)
    {
      return InteropHelper.EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad0\u003CSystem\u003A\u003AObject\u0020\u005E\u003E\u0020\u005E\u002CSystem\u003A\u003AObject\u0020\u005E\u003E(r, errmsg, 30000);
    }

    public static Tuner EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad2\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATuner\u0020\u005E\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ARecorderUse\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATuner\u0020\u005E\u003E\u0020\u005E\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATuner\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg)
    {
      return InteropHelper.EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad2\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATuner\u0020\u005E\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ARecorderUse\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATuner\u0020\u005E\u003E\u0020\u005E\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATuner\u0020\u005E\u003E(r, errmsg, 30000);
    }

    public static Tuner EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad3\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATuner\u0020\u005E\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ARecorderUse\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATuner\u0020\u005E\u002CSystem\u003A\u003AString\u0020\u005E\u003E\u0020\u005E\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATuner\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg)
    {
      return InteropHelper.EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad3\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATuner\u0020\u005E\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ARecorderUse\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATuner\u0020\u005E\u002CSystem\u003A\u003AString\u0020\u005E\u003E\u0020\u005E\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATuner\u0020\u005E\u003E(r, errmsg, 30000);
    }

    public static Tuner EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad2\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATuner\u0020\u005E\u002Cunsigned\u0020long\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ARecorderUse\u003E\u0020\u005E\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATuner\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg)
    {
      return InteropHelper.EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad2\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATuner\u0020\u005E\u002Cunsigned\u0020long\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ARecorderUse\u003E\u0020\u005E\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATuner\u0020\u005E\u003E(r, errmsg, 30000);
    }

    public static Tuner EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad1\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATuner\u0020\u005E\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATuner\u0020\u005E\u003E\u0020\u005E\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATuner\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg)
    {
      return InteropHelper.EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad1\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATuner\u0020\u005E\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATuner\u0020\u005E\u003E\u0020\u005E\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATuner\u0020\u005E\u003E(r, errmsg, 30000);
    }

    public static unsafe Tuner EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad1\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATuner\u0020\u005E\u002CSystem\u003A\u003AGuid\u003E\u0020\u005E\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATuner\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      d1<Tuner, Guid> asyncDelegate = (d1<Tuner, Guid>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      object obj = (object) null;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        obj = (object) asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
      return (Tuner) obj;
    }

    public static unsafe RemoteTunerCollection EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad3\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ARemoteTunerCollection\u0020\u005E\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuning\u003A\u003ATuneRequest\u0020\u005E\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ARecorderUse\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ARecorderMgrFlags\u003E\u0020\u005E\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ARemoteTunerCollection\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      d3<RemoteTunerCollection, TuneRequest, RecorderUse, RecorderMgrFlags> asyncDelegate = (d3<RemoteTunerCollection, TuneRequest, RecorderUse, RecorderMgrFlags>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      object obj = (object) null;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        obj = (object) asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
      return (RemoteTunerCollection) obj;
    }

    public static unsafe RemoteTunerEnumerator EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad0\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ARemoteTunerEnumerator\u0020\u005E\u003E\u0020\u005E\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ARemoteTunerEnumerator\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      d0<RemoteTunerEnumerator> asyncDelegate = (d0<RemoteTunerEnumerator>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      object obj = (object) null;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        obj = (object) asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
      return (RemoteTunerEnumerator) obj;
    }

    public static unsafe object EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad0\u003CSystem\u003A\u003AObject\u0020\u005E\u003E\u0020\u005E\u002CSystem\u003A\u003AObject\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      d0<object> asyncDelegate = (d0<object>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        return asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
    }

    public static unsafe Tuner EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad2\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATuner\u0020\u005E\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ARecorderUse\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATuner\u0020\u005E\u003E\u0020\u005E\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATuner\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      d2<Tuner, RecorderUse, Tuner> asyncDelegate = (d2<Tuner, RecorderUse, Tuner>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      object obj = (object) null;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        obj = (object) asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
      return (Tuner) obj;
    }

    public static unsafe Tuner EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad3\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATuner\u0020\u005E\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ARecorderUse\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATuner\u0020\u005E\u002CSystem\u003A\u003AString\u0020\u005E\u003E\u0020\u005E\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATuner\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      d3<Tuner, RecorderUse, Tuner, string> asyncDelegate = (d3<Tuner, RecorderUse, Tuner, string>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      object obj = (object) null;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        obj = (object) asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
      return (Tuner) obj;
    }

    public static unsafe Tuner EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad2\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATuner\u0020\u005E\u002Cunsigned\u0020long\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ARecorderUse\u003E\u0020\u005E\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATuner\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      d2<Tuner, uint, RecorderUse> asyncDelegate = (d2<Tuner, uint, RecorderUse>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      object obj = (object) null;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        obj = (object) asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
      return (Tuner) obj;
    }

    public static unsafe Tuner EndInvoke\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Ad1\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATuner\u0020\u005E\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATuner\u0020\u005E\u003E\u0020\u005E\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATuner\u0020\u005E\u003E(
      IAsyncResult r,
      string errmsg,
      int timeOut)
    {
      d1<Tuner, Tuner> asyncDelegate = (d1<Tuner, Tuner>) (r as AsyncResult).AsyncDelegate;
      WaitHandle asyncWaitHandle = r.AsyncWaitHandle;
      object obj = (object) null;
      InteropHelper.AsyncWait((void*) asyncWaitHandle.Handle, errmsg, timeOut);
      try
      {
        obj = (object) asyncDelegate.EndInvoke(r);
      }
      finally
      {
        asyncWaitHandle.Close();
      }
      return (Tuner) obj;
    }

    public static void FireAndForget\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv3\u003CSystem\u003A\u003AIntPtr\u002Cunsigned\u0020int\u002CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ASafeRecorderMgrEventHandler\u0020\u005E\u003E\u0020\u005E\u003E(
      IAsyncResult r)
    {
      dv3<IntPtr, uint, SafeRecorderMgrEventHandler> asyncState = (dv3<IntPtr, uint, SafeRecorderMgrEventHandler>) r.AsyncState;
      try
      {
        asyncState.EndInvoke(r);
      }
      catch (Exception ex)
      {
        if (InteropHelper.FilterException(ex))
          return;
        throw;
      }
    }

    public static void FireAndForget\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv1\u003CSystem\u003A\u003AGuid\u003E\u0020\u005E\u003E(
      IAsyncResult r)
    {
      dv1<Guid> asyncState = (dv1<Guid>) r.AsyncState;
      try
      {
        asyncState.EndInvoke(r);
      }
      catch (Exception ex)
      {
        if (InteropHelper.FilterException(ex))
          return;
        throw;
      }
    }

    public static void FireAndForget\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv1\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003ATuner\u0020\u005E\u003E\u0020\u005E\u003E(
      IAsyncResult r)
    {
      dv1<Tuner> asyncState = (dv1<Tuner>) r.AsyncState;
      try
      {
        asyncState.EndInvoke(r);
      }
      catch (Exception ex)
      {
        if (InteropHelper.FilterException(ex))
          return;
        throw;
      }
    }

    public static void FireAndForget\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003Adv1\u003CMicrosoft\u003A\u003AMediaCenter\u003A\u003ATV\u003A\u003ATuners\u003A\u003AMTAIUnknownType\u0020\u005E\u003E\u0020\u005E\u003E(
      IAsyncResult r)
    {
      dv1<MTAIUnknownType> asyncState = (dv1<MTAIUnknownType>) r.AsyncState;
      try
      {
        asyncState.EndInvoke(r);
      }
      catch (Exception ex)
      {
        if (InteropHelper.FilterException(ex))
          return;
        throw;
      }
    }
  }
}
