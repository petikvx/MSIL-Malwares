// Decompiled with JetBrains decompiler
// Type: pN7.841
// Assembly: uc5uTlQKZwvBJeUwoIoxWYL1o3uBI8gaMfnT9AO, Version=9.8.6.0, Culture=neutral, PublicKeyToken=null
// MVID: 66B519F9-803D-46C9-8343-EC24850CA08A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\HEUR-Trojan-Banker.MSIL.ClipBanker.gen-de0d24df79f99286da0234aa1536470d7596c53e531173d693d6ccc60b98e84c.exe

using \u0034Y6;
using \u0036b3;
using Q8f;
using System;
using System.IO;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace pN7
{
  internal sealed class \u003841 : Stream
  {
    private bool p59;
    private bool \u0033o2;
    private long KJ7;
    private int \u0039T7;
    private int \u0032oz;
    private int f5l;
    private bool \u0031U4;
    private int \u0036Oc;
    private int p9U;
    private readonly ov2 hnB = new ov2(true);
    private int \u003957;
    private Stream lcv;
    private int \u0032WW = -1;
    private \u003841.xex cr4 = \u003841.xex.\u0023b;
    private uint WF3;
    private uint \u0039qv;
    private uint \u00332U;
    private uint dn2;
    private int \u0037K1;
    private int \u00393n;
    private int I89;
    private int \u0038Ha;
    private int k38;
    private int \u0034hu;
    private int \u0035o1;
    private int g45;
    private char \u00367S;
    private \u003841.vBc aX4;

    public \u003841([In] Stream obj0, [In] bool obj1)
    {
      this.lcv = obj0;
      this.\u0033o2 = obj1;
      this.i28();
    }

    int Stream.aOE([In] byte[] obj0, [In] int obj1, [In] int obj2)
    {
      if (obj1 < 0)
        throw new IndexOutOfRangeException(string.Format("offset ({0}) must be > 0", (object) obj1));
      if (obj2 < 0)
        throw new IndexOutOfRangeException(string.Format("count ({0}) must be > 0", (object) obj2));
      if (obj1 + obj2 > obj0.Length)
        throw new IndexOutOfRangeException(string.Format("offset({0}) count({1}) bLength({2})", (object) obj1, (object) obj2, (object) obj0.Length));
      if (this.lcv == null)
        throw new IOException("the stream is not open");
      int num1 = obj1 + obj2;
      int num2 = obj1;
      int num3;
      while (num2 < num1 && (num3 = ((Stream) this).ReadByte()) >= 0)
        obj0[num2++] = (byte) num3;
      return num2 - obj1;
    }

    private void f46()
    {
      bool[] flagArray = this.aX4.\u0037Q6;
      byte[] s47 = this.aX4.S47;
      int num = 0;
      for (int index = 0; index < 256; ++index)
      {
        if (flagArray[index])
          s47[num++] = (byte) index;
      }
      this.\u003957 = num;
    }

    int Stream.\u0033X4()
    {
      int num = this.\u0032WW;
      ++this.KJ7;
      switch (this.cr4)
      {
        case \u003841.xex.\u0023a:
          return -1;
        case \u003841.xex.\u0023b:
          throw new IOException("bad state");
        case \u003841.xex.\u0023c:
          throw new IOException("bad state");
        case \u003841.xex.\u0023d:
          this.\u0031lq();
          break;
        case \u003841.xex.\u0023e:
          this.\u003351();
          break;
        case \u003841.xex.\u0023f:
          throw new IOException("bad state");
        case \u003841.xex.\u0023g:
          this.\u0033AI();
          break;
        case \u003841.xex.\u0023h:
          this.aoy();
          break;
        default:
          throw new IOException("bad state");
      }
      return num;
    }

    [SpecialName]
    bool Stream.\u003524()
    {
      if (this.p59)
        throw new ObjectDisposedException("BZip2Stream");
      return this.lcv.CanRead;
    }

    [SpecialName]
    bool Stream.\u003435() => false;

    [SpecialName]
    bool Stream.r6A()
    {
      if (this.p59)
        throw new ObjectDisposedException("BZip2Stream");
      return this.lcv.CanWrite;
    }

    void Stream.\u003287()
    {
      if (this.p59)
        throw new ObjectDisposedException("BZip2Stream");
      this.lcv.Flush();
    }

    [SpecialName]
    long Stream.\u003422() => throw new NotImplementedException();

    [SpecialName]
    long Stream.\u0036at() => this.KJ7;

    [SpecialName]
    void Stream.w3l([In] long obj0) => throw new NotImplementedException();

    long Stream.\u0037U6([In] long obj0, [In] SeekOrigin obj1) => throw new NotImplementedException();

    void Stream.n42([In] long obj0) => throw new NotImplementedException();

    void Stream.fxg([In] byte[] obj0, [In] int obj1, [In] int obj2) => throw new NotImplementedException();

    void Stream.\u0037w6([In] bool obj0)
    {
      try
      {
        if (this.p59)
          return;
        if (obj0 && this.lcv != null)
          this.lcv.Close();
        this.p59 = true;
      }
      finally
      {
        // ISSUE: explicit non-virtual call
        __nonvirtual (((Stream) this).Dispose(obj0));
      }
    }

    private void i28()
    {
      if (this.lcv == null)
        throw new IOException("No input Stream");
      if (!this.lcv.CanRead)
        throw new IOException("Unreadable input Stream");
      this.\u0035fP('B', 0);
      this.\u0035fP('Z', 1);
      this.\u0035fP('h', 2);
      int num = this.lcv.ReadByte();
      if (num < 49 || num > 57)
        throw new IOException("Stream is not BZip2 formatted: illegal blocksize " + ((char) num).ToString());
      this.f5l = num - 48;
      this.I25();
      this.dRT();
    }

    private void \u0035fP([In] char obj0, [In] int obj1)
    {
      int num = this.lcv.ReadByte();
      if (num != (int) obj0)
        throw new IOException(string.Format("Not a valid BZip2 stream. byte {0}, expected '{1}', got '{2}'", (object) obj1, (object) (int) obj0, (object) num));
    }

    private void I25()
    {
      char ch1 = this.\u003534();
      char ch2 = this.\u003534();
      char ch3 = this.\u003534();
      char ch4 = this.\u003534();
      char ch5 = this.\u003534();
      char ch6 = this.\u003534();
      if (ch1 == '\u0017' && ch2 == 'r' && ch3 == 'E' && ch4 == '8' && ch5 == 'P' && ch6 == '\u0090')
      {
        this.\u003292();
      }
      else
      {
        if (ch1 != '1' || ch2 != 'A' || ch3 != 'Y' || ch4 != '&' || ch5 != 'S' || ch6 != 'Y')
        {
          this.cr4 = \u003841.xex.\u0023a;
          throw new IOException(string.Format("bad block header at offset 0x{0:X}", (object) this.lcv.Position));
        }
        this.WF3 = this.\u0038PZ();
        this.\u0031U4 = this.\u0035w1(1) == 1;
        if (this.aX4 == null)
          this.aX4 = new \u003841.vBc(this.f5l);
        this.\u0034J4();
        this.hnB.Y63();
        this.cr4 = \u003841.xex.\u0023b;
      }
    }

    private void JDc()
    {
      this.\u00332U = (uint) this.hnB.\u0033D4;
      if ((int) this.WF3 != (int) this.\u00332U)
        throw new IOException(string.Format("BZip2 CRC error (expected {0:X8}, computed {1:X8})", (object) this.WF3, (object) this.\u00332U));
      this.dn2 = this.dn2 << 1 | this.dn2 >> 31;
      this.dn2 ^= this.\u00332U;
    }

    private void \u003292()
    {
      this.\u0039qv = this.\u0038PZ();
      this.cr4 = \u003841.xex.\u0023a;
      this.aX4 = (\u003841.vBc) null;
      if ((int) this.\u0039qv != (int) this.dn2)
        throw new IOException(string.Format("BZip2 CRC error (expected {0:X8}, computed {1:X8})", (object) this.\u0039qv, (object) this.dn2));
    }

    void Stream.\u003535()
    {
      Stream lcv = this.lcv;
      if (lcv == null)
        return;
      try
      {
        if (this.\u0033o2)
          return;
        lcv.Close();
      }
      finally
      {
        this.aX4 = (\u003841.vBc) null;
        this.lcv = (Stream) null;
      }
    }

    private int \u0035w1([In] int obj0)
    {
      int p9U = this.p9U;
      int num1 = this.\u0036Oc;
      if (p9U < obj0)
      {
        do
        {
          int num2 = this.lcv.ReadByte();
          if (num2 < 0)
            throw new IOException("unexpected end of stream");
          num1 = num1 << 8 | num2;
          p9U += 8;
        }
        while (p9U < obj0);
        this.\u0036Oc = num1;
      }
      this.p9U = p9U - obj0;
      return num1 >> p9U - obj0 & (1 << obj0) - 1;
    }

    private bool eI1() => this.\u0035w1(1) != 0;

    private char \u003534() => (char) this.\u0035w1(8);

    private uint \u0038PZ() => (uint) (((this.\u0035w1(8) << 8 | this.\u0035w1(8)) << 8 | this.\u0035w1(8)) << 8 | this.\u0035w1(8));

    private static void Ck7(
      [In] int[] obj0,
      [In] int[] obj1,
      [In] int[] obj2,
      [In] char[] obj3,
      [In] int obj4,
      [In] int obj5,
      [In] int obj6)
    {
      int num1 = obj4;
      int num2 = 0;
      for (; num1 <= obj5; ++num1)
      {
        for (int index = 0; index < obj6; ++index)
        {
          if ((int) obj3[index] == num1)
            obj2[num2++] = index;
        }
      }
      int index1 = ky4.\u0036Sd;
      while (--index1 > 0)
      {
        obj1[index1] = 0;
        obj0[index1] = 0;
      }
      for (int index2 = 0; index2 < obj6; ++index2)
        ++obj1[(int) obj3[index2] + 1];
      int index3 = 1;
      int num3 = obj1[0];
      for (; index3 < ky4.\u0036Sd; ++index3)
      {
        num3 += obj1[index3];
        obj1[index3] = num3;
      }
      int index4 = obj4;
      int num4 = 0;
      int num5 = obj1[index4];
      for (; index4 <= obj5; ++index4)
      {
        int num6 = obj1[index4 + 1];
        int num7 = num4 + (num6 - num5);
        num5 = num6;
        obj0[index4] = num7 - 1;
        num4 = num7 << 1;
      }
      for (int index5 = obj4 + 1; index5 <= obj5; ++index5)
        obj1[index5] = (obj0[index5 - 1] + 1 << 1) - obj1[index5];
    }

    private void kMH()
    {
      \u003841.vBc aX4 = this.aX4;
      bool[] flagArray = aX4.\u0037Q6;
      byte[] numArray = aX4.\u0034qB;
      int num1 = 0;
      for (int index = 0; index < 16; ++index)
      {
        if (this.eI1())
          num1 |= 1 << index;
      }
      int index1 = 256;
      while (--index1 >= 0)
        flagArray[index1] = false;
      for (int index2 = 0; index2 < 16; ++index2)
      {
        if ((num1 & 1 << index2) != 0)
        {
          int num2 = index2 << 4;
          for (int index3 = 0; index3 < 16; ++index3)
          {
            if (this.eI1())
              flagArray[num2 + index3] = true;
          }
        }
      }
      this.f46();
      int num3 = this.\u003957 + 2;
      int num4 = this.\u0035w1(3);
      int num5 = this.\u0035w1(15);
      for (int index4 = 0; index4 < num5; ++index4)
      {
        int num6 = 0;
        while (this.eI1())
          ++num6;
        aX4.SOL[index4] = (byte) num6;
      }
      int index5 = num4;
      while (--index5 >= 0)
        numArray[index5] = (byte) index5;
      for (int index6 = 0; index6 < num5; ++index6)
      {
        int index7 = (int) aX4.SOL[index6];
        byte num7 = numArray[index7];
        for (; index7 > 0; --index7)
          numArray[index7] = numArray[index7 - 1];
        numArray[0] = num7;
        aX4.\u0034uQ[index6] = num7;
      }
      char[][] r6q = aX4.r6q;
      for (int index8 = 0; index8 < num4; ++index8)
      {
        int num8 = this.\u0035w1(5);
        char[] chArray = r6q[index8];
        for (int index9 = 0; index9 < num3; ++index9)
        {
          while (this.eI1())
            num8 += this.eI1() ? -1 : 1;
          chArray[index9] = (char) num8;
        }
      }
      this.\u00375b(num3, num4);
    }

    private void \u00375b([In] int obj0, [In] int obj1)
    {
      \u003841.vBc aX4 = this.aX4;
      char[][] r6q = aX4.r6q;
      for (int index1 = 0; index1 < obj1; ++index1)
      {
        int num1 = 32;
        int num2 = 0;
        char[] chArray = r6q[index1];
        int index2 = obj0;
        while (--index2 >= 0)
        {
          char ch = chArray[index2];
          if ((int) ch > num2)
            num2 = (int) ch;
          if ((int) ch < num1)
            num1 = (int) ch;
        }
        \u003841.Ck7(aX4.\u0037J1[index1], aX4.h3Z[index1], aX4.NQ3[index1], r6q[index1], num1, num2, obj0);
        aX4.\u00355X[index1] = num1;
      }
    }

    private void \u0034J4()
    {
      \u003841.vBc aX4 = this.aX4;
      this.\u0032oz = this.\u0035w1(24);
      if (this.\u0032oz < 0)
        throw new IOException("BZ_DATA_ERROR");
      if (this.\u0032oz > 10 + ky4.\u003359 * this.f5l)
        throw new IOException("BZ_DATA_ERROR");
      this.kMH();
      byte[] h76 = aX4.h76;
      int num1 = this.f5l * ky4.\u003359;
      int index1 = 256;
      while (--index1 >= 0)
      {
        h76[index1] = (byte) index1;
        aX4.IZb[index1] = 0;
      }
      int index2 = 0;
      int num2 = ky4.\u0038x1 - 1;
      int num3 = this.\u003957 + 1;
      int num4 = this.\u003554(0);
      int num5 = this.\u0036Oc;
      int p9U = this.p9U;
      int index3 = -1;
      int index4 = (int) aX4.\u0034uQ[index2] & (int) byte.MaxValue;
      int[] numArray1 = aX4.h3Z[index4];
      int[] numArray2 = aX4.\u0037J1[index4];
      int[] numArray3 = aX4.NQ3[index4];
      int num6 = aX4.\u00355X[index4];
      while (num4 != num3)
      {
        if (num4 == (int) ky4.\u0033S8 || num4 == (int) ky4.\u00346p)
        {
          int num7 = -1;
          int num8 = 1;
          while (true)
          {
            if (num4 == (int) ky4.\u0033S8)
              num7 += num8;
            else if (num4 == (int) ky4.\u00346p)
              num7 += num8 << 1;
            else
              break;
            if (num2 == 0)
            {
              num2 = ky4.\u0038x1 - 1;
              int index5 = (int) aX4.\u0034uQ[++index2] & (int) byte.MaxValue;
              numArray1 = aX4.h3Z[index5];
              numArray2 = aX4.\u0037J1[index5];
              numArray3 = aX4.NQ3[index5];
              num6 = aX4.\u00355X[index5];
            }
            else
              --num2;
            int index6;
            for (index6 = num6; p9U < index6; p9U += 8)
            {
              int num9 = this.lcv.ReadByte();
              if (num9 < 0)
                throw new IOException("unexpected end of stream");
              num5 = num5 << 8 | num9;
            }
            int num10 = num5 >> p9U - index6 & (1 << index6) - 1;
            p9U -= index6;
            for (; num10 > numArray2[index6]; num10 = num10 << 1 | num5 >> p9U & 1)
            {
              ++index6;
              for (; p9U < 1; p9U += 8)
              {
                int num11 = this.lcv.ReadByte();
                if (num11 < 0)
                  throw new IOException("unexpected end of stream");
                num5 = num5 << 8 | num11;
              }
              --p9U;
            }
            num4 = numArray3[num10 - numArray1[index6]];
            num8 <<= 1;
          }
          byte num12 = aX4.S47[(int) h76[0]];
          aX4.IZb[(int) num12 & (int) byte.MaxValue] += num7 + 1;
          while (num7-- >= 0)
            aX4.xq5[++index3] = num12;
          if (index3 >= num1)
            throw new IOException("block overrun");
        }
        else
        {
          if (++index3 >= num1)
            throw new IOException("block overrun");
          byte index7 = h76[num4 - 1];
          ++aX4.IZb[(int) aX4.S47[(int) index7] & (int) byte.MaxValue];
          aX4.xq5[index3] = aX4.S47[(int) index7];
          if (num4 <= 16)
          {
            int index8 = num4 - 1;
            while (index8 > 0)
              h76[index8] = h76[--index8];
          }
          else
            Buffer.BlockCopy((Array) h76, 0, (Array) h76, 1, num4 - 1);
          h76[0] = index7;
          if (num2 == 0)
          {
            num2 = ky4.\u0038x1 - 1;
            int index9 = (int) aX4.\u0034uQ[++index2] & (int) byte.MaxValue;
            numArray1 = aX4.h3Z[index9];
            numArray2 = aX4.\u0037J1[index9];
            numArray3 = aX4.NQ3[index9];
            num6 = aX4.\u00355X[index9];
          }
          else
            --num2;
          int index10;
          for (index10 = num6; p9U < index10; p9U += 8)
          {
            int num13 = this.lcv.ReadByte();
            if (num13 < 0)
              throw new IOException("unexpected end of stream");
            num5 = num5 << 8 | num13;
          }
          int num14 = num5 >> p9U - index10 & (1 << index10) - 1;
          p9U -= index10;
          for (; num14 > numArray2[index10]; num14 = num14 << 1 | num5 >> p9U & 1)
          {
            ++index10;
            for (; p9U < 1; p9U += 8)
            {
              int num15 = this.lcv.ReadByte();
              if (num15 < 0)
                throw new IOException("unexpected end of stream");
              num5 = num5 << 8 | num15;
            }
            --p9U;
          }
          num4 = numArray3[num14 - numArray1[index10]];
        }
      }
      this.\u0039T7 = index3;
      this.p9U = p9U;
      this.\u0036Oc = num5;
    }

    private int \u003554([In] int obj0)
    {
      \u003841.vBc aX4 = this.aX4;
      int index1 = (int) aX4.\u0034uQ[obj0] & (int) byte.MaxValue;
      int[] numArray = aX4.\u0037J1[index1];
      int index2 = aX4.\u00355X[index1];
      int num1 = this.\u0035w1(index2);
      int p9U = this.p9U;
      int num2 = this.\u0036Oc;
      for (; num1 > numArray[index2]; num1 = num1 << 1 | num2 >> p9U & 1)
      {
        ++index2;
        for (; p9U < 1; p9U += 8)
        {
          int num3 = this.lcv.ReadByte();
          if (num3 < 0)
            throw new IOException("unexpected end of stream");
          num2 = num2 << 8 | num3;
        }
        --p9U;
      }
      this.p9U = p9U;
      this.\u0036Oc = num2;
      return aX4.NQ3[index1][num1 - aX4.h3Z[index1][index2]];
    }

    private void dRT()
    {
      if (this.aX4 == null)
        return;
      \u003841.vBc aX4 = this.aX4;
      int[] numArray = aX4.F3y(this.\u0039T7 + 1);
      for (int index = 0; index <= (int) byte.MaxValue; ++index)
      {
        if (aX4.IZb[index] < 0 || aX4.IZb[index] > this.\u0039T7)
          throw new Exception("BZ_DATA_ERROR");
      }
      aX4.z9a[0] = 0;
      for (int index = 1; index <= 256; ++index)
        aX4.z9a[index] = aX4.IZb[index - 1];
      for (int index = 1; index <= 256; ++index)
        aX4.z9a[index] += aX4.z9a[index - 1];
      for (int index = 0; index <= 256; ++index)
      {
        if (aX4.z9a[index] < 0 || aX4.z9a[index] > this.\u0039T7 + 1)
          throw new Exception(string.Format("BZ_DATA_ERROR: cftab[{0}]={1} last={2}", (object) index, (object) aX4.z9a[index], (object) this.\u0039T7));
      }
      for (int index = 1; index <= 256; ++index)
      {
        if (aX4.z9a[index - 1] > aX4.z9a[index])
          throw new Exception("BZ_DATA_ERROR");
      }
      int index1 = 0;
      for (int index2 = this.\u0039T7; index1 <= index2; ++index1)
        numArray[aX4.z9a[(int) aX4.xq5[index1] & (int) byte.MaxValue]++] = index1;
      if (this.\u0032oz < 0 || this.\u0032oz >= numArray.Length)
        throw new IOException("stream corrupted");
      this.g45 = numArray[this.\u0032oz];
      this.\u0037K1 = 0;
      this.\u0038Ha = 0;
      this.\u00393n = 256;
      if (this.\u0031U4)
      {
        this.\u0034hu = 0;
        this.\u0035o1 = 0;
        this.\u00376D();
      }
      else
        this.f16();
    }

    private void \u00376D()
    {
      if (this.\u0038Ha <= this.\u0039T7)
      {
        this.I89 = this.\u00393n;
        int num1 = (int) this.aX4.xq5[this.g45] & (int) byte.MaxValue;
        this.g45 = this.aX4.\u003425[this.g45];
        if (this.\u0034hu == 0)
        {
          this.\u0034hu = U1A.w5U(this.\u0035o1) - 1;
          if (++this.\u0035o1 == 512)
            this.\u0035o1 = 0;
        }
        else
          --this.\u0034hu;
        int num2 = num1;
        int num3 = this.\u0034hu == 1 ? 1 : 0;
        int num4;
        this.\u00393n = num4 = num2 ^ num3;
        ++this.\u0038Ha;
        this.\u0032WW = num4;
        this.cr4 = \u003841.xex.\u0023d;
        this.hnB.UE8((byte) num4);
      }
      else
      {
        this.JDc();
        this.I25();
        this.dRT();
      }
    }

    private void f16()
    {
      if (this.\u0038Ha <= this.\u0039T7)
      {
        this.I89 = this.\u00393n;
        int num = (int) this.aX4.xq5[this.g45] & (int) byte.MaxValue;
        this.\u00393n = num;
        this.g45 = this.aX4.\u003425[this.g45];
        ++this.\u0038Ha;
        this.\u0032WW = num;
        this.cr4 = \u003841.xex.\u0023g;
        this.hnB.UE8((byte) num);
      }
      else
      {
        this.cr4 = \u003841.xex.\u0023f;
        this.JDc();
        this.I25();
        this.dRT();
      }
    }

    private void \u0031lq()
    {
      if (this.\u00393n != this.I89)
      {
        this.cr4 = \u003841.xex.\u0023c;
        this.\u0037K1 = 1;
        this.\u00376D();
      }
      else if (++this.\u0037K1 >= 4)
      {
        this.\u00367S = (char) ((uint) this.aX4.xq5[this.g45] & (uint) byte.MaxValue);
        this.g45 = this.aX4.\u003425[this.g45];
        if (this.\u0034hu == 0)
        {
          this.\u0034hu = U1A.w5U(this.\u0035o1) - 1;
          if (++this.\u0035o1 == 512)
            this.\u0035o1 = 0;
        }
        else
          --this.\u0034hu;
        this.k38 = 0;
        this.cr4 = \u003841.xex.\u0023e;
        if (this.\u0034hu == 1)
          this.\u00367S ^= '\u0001';
        this.\u003351();
      }
      else
      {
        this.cr4 = \u003841.xex.\u0023c;
        this.\u00376D();
      }
    }

    private void \u003351()
    {
      if (this.k38 < (int) this.\u00367S)
      {
        this.\u0032WW = this.\u00393n;
        this.hnB.UE8((byte) this.\u00393n);
        ++this.k38;
      }
      else
      {
        this.cr4 = \u003841.xex.\u0023c;
        ++this.\u0038Ha;
        this.\u0037K1 = 0;
        this.\u00376D();
      }
    }

    private void \u0033AI()
    {
      if (this.\u00393n != this.I89)
      {
        this.\u0037K1 = 1;
        this.f16();
      }
      else if (++this.\u0037K1 >= 4)
      {
        this.\u00367S = (char) ((uint) this.aX4.xq5[this.g45] & (uint) byte.MaxValue);
        this.g45 = this.aX4.\u003425[this.g45];
        this.k38 = 0;
        this.aoy();
      }
      else
        this.f16();
    }

    private void aoy()
    {
      if (this.k38 < (int) this.\u00367S)
      {
        int num = this.\u00393n;
        this.\u0032WW = num;
        this.hnB.UE8((byte) num);
        ++this.k38;
        this.cr4 = \u003841.xex.\u0023h;
      }
      else
      {
        ++this.\u0038Ha;
        this.\u0037K1 = 0;
        this.f16();
      }
    }

    private enum xex
    {
      \u0023a,
      \u0023b,
      \u0023c,
      \u0023d,
      \u0023e,
      \u0023f,
      \u0023g,
      \u0023h,
    }

    private sealed class vBc
    {
      public readonly bool[] \u0037Q6 = new bool[256];
      public readonly byte[] S47 = new byte[256];
      public readonly byte[] \u0034uQ = new byte[ky4.T2J];
      public readonly byte[] SOL = new byte[ky4.T2J];
      public readonly int[] IZb;
      public readonly int[][] \u0037J1;
      public readonly int[][] h3Z;
      public readonly int[][] NQ3;
      public readonly int[] \u00355X;
      public readonly int[] z9a;
      public readonly byte[] h76;
      public readonly char[][] r6q;
      public readonly byte[] \u0034qB;
      public int[] \u003425;
      public byte[] xq5;

      public vBc([In] int obj0)
      {
        this.IZb = new int[256];
        this.\u0037J1 = ky4.f5l<int>(ky4.m6G, ky4.\u00323I);
        this.h3Z = ky4.f5l<int>(ky4.m6G, ky4.\u00323I);
        this.NQ3 = ky4.f5l<int>(ky4.m6G, ky4.\u00323I);
        this.\u00355X = new int[ky4.m6G];
        this.z9a = new int[257];
        this.h76 = new byte[256];
        this.r6q = ky4.f5l<char>(ky4.m6G, ky4.\u00323I);
        this.\u0034qB = new byte[ky4.m6G];
        this.xq5 = new byte[obj0 * ky4.\u003359];
      }

      public int[] F3y([In] int obj0)
      {
        int[] numArray = this.\u003425;
        if (numArray == null || numArray.Length < obj0)
          this.\u003425 = numArray = new int[obj0];
        return numArray;
      }
    }
  }
}
