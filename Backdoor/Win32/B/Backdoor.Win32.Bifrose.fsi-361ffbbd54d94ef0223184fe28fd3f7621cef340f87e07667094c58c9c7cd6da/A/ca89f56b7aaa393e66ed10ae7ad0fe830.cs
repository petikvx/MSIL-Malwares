// Decompiled with JetBrains decompiler
// Type: A.ca89f56b7aaa393e66ed10ae7ad0fe830
// Assembly: stub, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: BBFEB6F2-8CB8-471E-8522-33E9235F0EA4
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Backdoor.Win32.Bifrose.fsi-361ffbbd54d94ef0223184fe28fd3f7621cef340f87e07667094c58c9c7cd6da.exe

using System.Reflection;
using System.Text;

namespace A
{
  internal class ca89f56b7aaa393e66ed10ae7ad0fe830
  {
    internal static readonly byte[] c506c3923c04eacbd588863b61cff2ced;

    static ca89f56b7aaa393e66ed10ae7ad0fe830()
    {
      if (ca89f56b7aaa393e66ed10ae7ad0fe830.c506c3923c04eacbd588863b61cff2ced != null)
        return;
      Assembly executingAssembly = Assembly.GetExecutingAssembly();
      ca89f56b7aaa393e66ed10ae7ad0fe830.c506c3923c04eacbd588863b61cff2ced = cce0053d68ac38eea80993d095acf75c0.c08655a4c4ee40cc67918bad6018519ec(executingAssembly.GetManifestResourceStream(executingAssembly.GetName().Name + executingAssembly.GetName().Name));
    }

    internal static string ce761b58257cf9ea81241886bf8d5a6ac(int c734eb997f1f9f4ed8f32c5776c8c0691)
    {
      int count;
      if (((int) ca89f56b7aaa393e66ed10ae7ad0fe830.c506c3923c04eacbd588863b61cff2ced[c734eb997f1f9f4ed8f32c5776c8c0691] & 128) == 0)
      {
        count = (int) ca89f56b7aaa393e66ed10ae7ad0fe830.c506c3923c04eacbd588863b61cff2ced[c734eb997f1f9f4ed8f32c5776c8c0691];
        ++c734eb997f1f9f4ed8f32c5776c8c0691;
      }
      else if (((int) ca89f56b7aaa393e66ed10ae7ad0fe830.c506c3923c04eacbd588863b61cff2ced[c734eb997f1f9f4ed8f32c5776c8c0691] & 64) == 0)
      {
        count = ((int) ca89f56b7aaa393e66ed10ae7ad0fe830.c506c3923c04eacbd588863b61cff2ced[c734eb997f1f9f4ed8f32c5776c8c0691] & -129) << 8 | (int) ca89f56b7aaa393e66ed10ae7ad0fe830.c506c3923c04eacbd588863b61cff2ced[c734eb997f1f9f4ed8f32c5776c8c0691 + 1];
        c734eb997f1f9f4ed8f32c5776c8c0691 += 2;
      }
      else
      {
        count = ((int) ca89f56b7aaa393e66ed10ae7ad0fe830.c506c3923c04eacbd588863b61cff2ced[c734eb997f1f9f4ed8f32c5776c8c0691] & -193) << 24 | (int) ca89f56b7aaa393e66ed10ae7ad0fe830.c506c3923c04eacbd588863b61cff2ced[c734eb997f1f9f4ed8f32c5776c8c0691 + 1] << 16 | (int) ca89f56b7aaa393e66ed10ae7ad0fe830.c506c3923c04eacbd588863b61cff2ced[c734eb997f1f9f4ed8f32c5776c8c0691 + 2] << 8 | (int) ca89f56b7aaa393e66ed10ae7ad0fe830.c506c3923c04eacbd588863b61cff2ced[c734eb997f1f9f4ed8f32c5776c8c0691 + 3];
        c734eb997f1f9f4ed8f32c5776c8c0691 += 4;
      }
      return count < 1 ? string.Empty : string.Intern(Encoding.Unicode.GetString(ca89f56b7aaa393e66ed10ae7ad0fe830.c506c3923c04eacbd588863b61cff2ced, c734eb997f1f9f4ed8f32c5776c8c0691, count));
    }
  }
}
