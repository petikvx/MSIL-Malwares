// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONClass
// Assembly: SingleArrayTypeIn, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 96646636-5181-465D-A45F-CFFED007E535
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-c30e1e448c40d6cf6fae39ea6bb5874bdbb3607fa9f601a121dad5ca9645808e.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONClass : JSONNode, IEnumerable
  {
    private Dictionary<string, JSONNode> m_Dict = new Dictionary<string, JSONNode>();

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 64641378;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1565367134)) % 6U)
          {
            case 1:
              num1 = (int) num2 * -1248436153 ^ -1360964897;
              continue;
            case 2:
              goto label_1;
            case 3:
              jsonNode = this.m_Dict[aKey];
              num1 = (int) num2 * -1124652189 ^ 478244807;
              continue;
            case 4:
              int num3 = !this.m_Dict.ContainsKey(aKey) ? -496701761 : (num3 = -666301649);
              num1 = num3 ^ (int) num2 * 1951100737;
              continue;
            case 5:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = 1930384375;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 2054166649;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2049266421)) % 8U)
          {
            case 0:
              goto label_3;
            case 1:
              num1 = (int) num2 * 742866999 ^ -1929588263;
              continue;
            case 2:
              num1 = (int) num2 * 1246999936 ^ 1362134045;
              continue;
            case 3:
              num1 = (int) num2 * 2070008263 ^ -607795000;
              continue;
            case 4:
              int num3 = this.m_Dict.ContainsKey(aKey) ? -429002129 : (num3 = -592689098);
              num1 = num3 ^ (int) num2 * 2070693775;
              continue;
            case 5:
              goto label_1;
            case 6:
              this.m_Dict[aKey] = value;
              num1 = (int) num2 * 785691315 ^ -279821802;
              continue;
            case 7:
              this.m_Dict.Add(aKey, value);
              num1 = 1904118263;
              continue;
            default:
              goto label_10;
          }
        }
label_3:
        return;
label_10:;
      }
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 1084531125;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ 1013355620)) % 7U)
          {
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 390027935 ^ 1922878144;
              continue;
            case 2:
              if (aIndex < 0)
              {
                num3 = 1;
                break;
              }
              num1 = (int) num2 * 1532629573 ^ 1589494889;
              continue;
            case 3:
              num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
              break;
            case 4:
              int num4 = !flag ? -1576841644 : (num4 = -2081530597);
              num1 = num4 ^ (int) num2 * -1323821110;
              continue;
            case 5:
              goto label_1;
            case 6:
              jsonNode = (JSONNode) null;
              num1 = 1367660639;
              continue;
            default:
              goto label_11;
          }
          flag = num3 != 0;
          num1 = 757851063;
        }
label_11:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 1849189331;
        while (true)
        {
          uint num2;
          int num3;
          switch ((num2 = (uint) (num1 ^ 471807416)) % 5U)
          {
            case 0:
              goto label_3;
            case 1:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * -543349341 ^ -1122698249;
                continue;
              }
              num3 = 1;
              break;
            case 2:
              num1 = (int) num2 * 1752101508 ^ -1663108868;
              continue;
            case 3:
              goto label_1;
            case 4:
              num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
              break;
            default:
              goto label_10;
          }
          int num4;
          num1 = num4 = num3 == 0 ? 1590070752 : (num4 = 1920130399);
        }
label_3:
        return;
label_10:;
      }
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = -177681220;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -24881907)) % 4U)
          {
            case 1:
              count = this.m_Dict.Count;
              num1 = (int) num2 * 461537801 ^ -1029733733;
              continue;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * 522596791 ^ 64478616;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
      if (JSONClass.\u202D‮‮‬‭⁮‌‎‏⁭‌‬⁫‏‎‪‫⁬‏⁪⁮​‌‍⁪​‪‮‍‏‪‎‍‎​‍​​‬⁬‮(aKey))
        goto label_5;
label_1:
      int num1 = 1440078116;
label_2:
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1610083142)) % 11U)
        {
          case 0:
            num1 = (int) num2 * 1008461296 ^ 660820488;
            continue;
          case 1:
            this.m_Dict[aKey] = aItem;
            num1 = (int) num2 * -1864063101 ^ 1796831124;
            continue;
          case 2:
            int num3 = !flag ? -892069591 : (num3 = -1982393807);
            num1 = num3 ^ (int) num2 * 59215076;
            continue;
          case 3:
            goto label_1;
          case 4:
            goto label_3;
          case 5:
            num1 = 1761012904;
            continue;
          case 6:
            this.m_Dict.Add(aKey, aItem);
            num1 = 1365957043;
            continue;
          case 7:
            goto label_5;
          case 8:
            num1 = (int) num2 * -1030441067 ^ 1863050760;
            continue;
          case 9:
            flag = this.m_Dict.ContainsKey(aKey);
            num1 = (int) num2 * -1075250162 ^ -763777246;
            continue;
          case 10:
            num1 = (int) num2 * -116911591 ^ 1706837790;
            continue;
          default:
            goto label_13;
        }
      }
label_3:
      return;
label_13:
      return;
label_5:
      this.m_Dict.Add(Guid.NewGuid().ToString(), aItem);
      num1 = 1626501904;
      goto label_2;
    }

    public override JSONNode Remove(string aKey)
    {
label_1:
      int num1 = -1382275520;
      JSONNode jsonNode1;
      JSONNode jsonNode2;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -647722914)) % 8U)
        {
          case 0:
            jsonNode2 = this.m_Dict[aKey];
            num1 = -556816311;
            continue;
          case 1:
            int num3 = flag ? 1371106660 : (num3 = 1179789031);
            num1 = num3 ^ (int) num2 * -2120565175;
            continue;
          case 2:
            num1 = (int) num2 * -2021545056 ^ -1197673981;
            continue;
          case 3:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num2 * -994085557 ^ -1705393318;
            continue;
          case 4:
            goto label_1;
          case 6:
            flag = !this.m_Dict.ContainsKey(aKey);
            num1 = (int) num2 * 1712204954 ^ 1794229851;
            continue;
          case 7:
            this.m_Dict.Remove(aKey);
            jsonNode1 = jsonNode2;
            num1 = (int) num2 * 1445805815 ^ -177717059;
            continue;
          default:
            goto label_9;
        }
      }
label_9:
      return jsonNode1;
    }

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = -1040046819;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        bool flag;
        int num3;
        switch ((num2 = (uint) (num1 ^ -2108210627)) % 9U)
        {
          case 0:
            jsonNode = (JSONNode) null;
            num1 = -571616694;
            continue;
          case 1:
            num1 = (int) num2 * 2078164095 ^ -152113813;
            continue;
          case 3:
            goto label_1;
          case 4:
            num1 = (int) num2 * 1615007941 ^ 678432737;
            continue;
          case 5:
            if (aIndex >= 0)
            {
              num1 = (int) num2 * 1081753068 ^ 99693327;
              continue;
            }
            num3 = 1;
            break;
          case 6:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 957315365 ^ 42039681;
            continue;
          case 7:
            num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
            break;
          case 8:
            int num4 = !flag ? -1482980301 : (num4 = -1313569243);
            num1 = num4 ^ (int) num2 * -452311791;
            continue;
          default:
            goto label_13;
        }
        flag = num3 != 0;
        num1 = -502036918;
      }
label_13:
      return jsonNode;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      JSONNode jsonNode;
      try
      {
        jsonNode = (JSONNode) null;
      }
      catch
      {
label_3:
        int num1 = -1273080134;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1139811917)) % 4U)
          {
            case 0:
              goto label_3;
            case 1:
              num1 = (int) num2 * 695553858 ^ -413680518;
              continue;
            case 3:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -915866358 ^ -581529349;
              continue;
            default:
              goto label_7;
          }
        }
      }
label_7:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs => (IEnumerable<JSONNode>) new JSONClass.\u003Cget_Childs\u003Ed__14(-2)
    {
      \u003C\u003E4__this = this
    };

    public IEnumerator GetEnumerator() => (IEnumerator) new JSONClass.\u003CGetEnumerator\u003Ed__15(0)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString()
    {
      string str1 = "{";
      using (Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator())
      {
label_5:
        int num1 = !enumerator.MoveNext() ? 1737835607 : (num1 = 511078504);
        bool flag;
        KeyValuePair<string, JSONNode> current;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1665496430)) % 9U)
          {
            case 0:
              num1 = 511078504;
              continue;
            case 1:
              int num3 = flag ? -117702354 : (num3 = -1821624591);
              num1 = num3 ^ (int) num2 * -923046328;
              continue;
            case 2:
              str1 = JSONClass.\u200F​⁬‎⁫‎‎⁬⁫‫‮‮‮‬⁫​‍‭‭‌‬‌‬‭⁭‭⁯‍‬‪​⁬‬‍⁪‎⁪⁭‍‪‮(str1, ", ");
              num1 = (int) num2 * -388759862 ^ 557484017;
              continue;
            case 4:
              current = enumerator.Current;
              num1 = 1362661073;
              continue;
            case 5:
              num1 = (int) num2 * -1415021357 ^ 700291002;
              continue;
            case 6:
              goto label_5;
            case 7:
              flag = JSONClass.\u200B‎‬‮‎​⁭‬‎‏‫‫‮⁫⁯⁯⁪⁪⁯‌‏‎‎‭‬⁫‮‬‎‎‌⁪‫⁫⁭‭‮⁬⁮⁮‮(str1) > 2;
              num1 = (int) num2 * 245530613 ^ -1049036621;
              continue;
            case 8:
              str1 = JSONClass.\u206C⁭⁮​‎​‪‏⁪⁪⁫⁯​‎‪⁬‏⁭‪⁯‮​⁪⁭​⁮‭⁪‎⁫⁫‎⁮⁭‫‬‭‍⁫⁪‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\":",
                JSONClass.\u206D​‌‏​‏‏⁮⁮​‬⁫⁫⁮‌‬​⁫‮​⁫​‫‭⁫‫‎⁫⁭⁭‫‫‏⁪⁮‮⁮‪‫‫‮((object) current.Value)
              });
              num1 = 879282192;
              continue;
            default:
              goto label_12;
          }
        }
      }
label_12:
      string str2 = JSONClass.\u200F​⁬‎⁫‎‎⁬⁫‫‮‮‮‬⁫​‍‭‭‌‬‌‬‭⁭‭⁯‍‬‪​⁬‬‍⁪‎⁪⁭‍‪‮(str1, "}");
label_13:
      int num4 = 247713013;
      string str3;
      while (true)
      {
        uint num5;
        switch ((num5 = (uint) (num4 ^ 1665496430)) % 3U)
        {
          case 1:
            str3 = str2;
            num4 = (int) num5 * 1209144420 ^ -708521948;
            continue;
          case 2:
            goto label_13;
          default:
            goto label_16;
        }
      }
label_16:
      return str3;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = -2068579281;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -801579264)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -427462070 ^ -36935651;
            continue;
          case 2:
            goto label_1;
          case 3:
            str1 = "{ ";
            num1 = (int) num2 * -368770896 ^ 864544468;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      using (Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator())
      {
label_14:
        int num3 = enumerator.MoveNext() ? -1342005863 : (num3 = -833623672);
        KeyValuePair<string, JSONNode> current;
        bool flag;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -801579264)) % 8U)
          {
            case 1:
              current = enumerator.Current;
              num3 = -999254005;
              continue;
            case 2:
              num3 = -1342005863;
              continue;
            case 3:
              flag = JSONClass.\u200B‎‬‮‎​⁭‬‎‏‫‫‮⁫⁯⁯⁪⁪⁯‌‏‎‎‭‬⁫‮‬‎‎‌⁪‫⁫⁭‭‮⁬⁮⁮‮(str1) > 3;
              num3 = (int) num4 * 712386957 ^ -1356566511;
              continue;
            case 4:
              goto label_14;
            case 5:
              str1 = JSONClass.\u200F​⁬‎⁫‎‎⁬⁫‫‮‮‮‬⁫​‍‭‭‌‬‌‬‭⁭‭⁯‍‬‪​⁬‬‍⁪‎⁪⁭‍‪‮(str1, ", ");
              num3 = (int) num4 * -1180993122 ^ -386417999;
              continue;
            case 6:
              int num5 = flag ? -11175659 : (num5 = -150401857);
              num3 = num5 ^ (int) num4 * 1019106796;
              continue;
            case 7:
              str1 = JSONClass.\u202C⁯‭⁭‭‪‫⁮⁪‪⁮⁫‍⁫⁮‍‬⁮⁯‭⁯⁯⁪‍‭​⁯‎⁪⁪‏⁭⁬⁪⁪‪‌‌‍‏‮(str1, "\n", aPrefix, "   ");
              str1 = JSONClass.\u206C⁭⁮​‎​‪‏⁪⁪⁫⁯​‎‪⁬‏⁭‪⁯‮​⁪⁭​⁮‭⁪‎⁫⁫‎⁮⁭‫‬‭‍⁫⁪‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\" : ",
                current.Value.ToString(JSONClass.\u200F​⁬‎⁫‎‎⁬⁫‫‮‮‮‬⁫​‍‭‭‌‬‌‬‭⁭‭⁯‍‬‪​⁬‬‍⁪‎⁪⁭‍‪‮(aPrefix, "   "))
              });
              num3 = -162120996;
              continue;
            default:
              goto label_16;
          }
        }
      }
label_16:
      string str2 = JSONClass.\u202C⁯‭⁭‭‪‫⁮⁪‪⁮⁫‍⁫⁮‍‬⁮⁯‭⁯⁯⁪‍‭​⁯‎⁪⁪‏⁭⁬⁪⁪‪‌‌‍‏‮(str1, "\n", aPrefix, "}");
label_17:
      int num6 = -144996199;
      string str3;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ -801579264)) % 4U)
        {
          case 0:
            goto label_17;
          case 1:
            str3 = str2;
            num6 = (int) num7 * 1193686411 ^ -835235087;
            continue;
          case 2:
            num6 = (int) num7 * 2023983182 ^ -320039761;
            continue;
          default:
            goto label_21;
        }
      }
label_21:
      return str3;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = -1480952651;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1118785632)) % 6U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -354783946 ^ -48060168;
            continue;
          case 2:
            num1 = (int) num2 * -171206916 ^ 576915041;
            continue;
          case 3:
            JSONClass.\u200B‮‌‏​⁫‮⁮‏‮⁯⁯​⁭⁮‌‭‎‬⁯‍‌⁮‌⁭‎⁪⁭⁯‎‫‭‏‭⁮⁭‫⁬‎‌‮(aWriter, this.m_Dict.Count);
            num1 = (int) num2 * 1407041434 ^ 603563555;
            continue;
          case 5:
            JSONClass.\u206B‮⁬‍‭‮⁪‌‬‏‮⁭‎‏⁬⁫​‎‭⁯⁫⁯‍⁬⁬⁫⁪⁭‪‭⁯⁪⁯‌‎‮⁯‫‪‏‮(aWriter, (byte) 2);
            num1 = (int) num2 * -1263826026 ^ -297004502;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      Dictionary<string, JSONNode>.KeyCollection.Enumerator enumerator = this.m_Dict.Keys.GetEnumerator();
      try
      {
label_14:
        int num3 = !enumerator.MoveNext() ? -1562603511 : (num3 = -237042766);
        string current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -1118785632)) % 8U)
          {
            case 0:
              num3 = (int) num4 * 930107316 ^ 2117128511;
              continue;
            case 1:
              goto label_21;
            case 2:
              current = enumerator.Current;
              num3 = -1371618308;
              continue;
            case 3:
              num3 = (int) num4 * 1450284371 ^ 2022199289;
              continue;
            case 4:
              num3 = (int) num4 * 1324160110 ^ -1868132818;
              continue;
            case 5:
              num3 = -237042766;
              continue;
            case 6:
              JSONClass.\u202D⁪‫‬⁭⁫‌​‭⁭‮⁮‪‪⁪‪‏⁯⁯⁮‭⁬⁪‫⁬⁬‪‍⁭‬⁭⁫‫⁫‭‮‫‪⁪⁭‮(aWriter, current);
              this.m_Dict[current].Serialize(aWriter);
              num3 = (int) num4 * -1656389357 ^ -1790316591;
              continue;
            case 7:
              goto label_14;
            default:
              goto label_17;
          }
        }
label_21:
        return;
label_17:;
      }
      finally
      {
        enumerator.Dispose();
label_19:
        int num5 = -1891707290;
        while (true)
        {
          uint num6;
          switch ((num6 = (uint) (num5 ^ -1118785632)) % 3U)
          {
            case 0:
              goto label_19;
            case 2:
              num5 = (int) num6 * 2062569202 ^ 1492878104;
              continue;
            default:
              goto label_23;
          }
        }
label_23:;
      }
    }

    static bool \u202D‮‮‬‭⁮‌‎‏⁭‌‬⁫‏‎‪‫⁬‏⁪⁮​‌‍⁪​‪‮‍‏‪‎‍‎​‍​​‬⁬‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    static int \u200B‎‬‮‎​⁭‬‎‏‫‫‮⁫⁯⁯⁪⁪⁯‌‏‎‎‭‬⁫‮‬‎‎‌⁪‫⁫⁭‭‮⁬⁮⁮‮([In] string obj0) => obj0.Length;

    static string \u200F​⁬‎⁫‎‎⁬⁫‫‮‮‮‬⁫​‍‭‭‌‬‌‬‭⁭‭⁯‍‬‪​⁬‬‍⁪‎⁪⁭‍‪‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u206D​‌‏​‏‏⁮⁮​‬⁫⁫⁮‌‬​⁫‮​⁫​‫‭⁫‫‎⁫⁭⁭‫‫‏⁪⁮‮⁮‪‫‫‮([In] object obj0) => obj0.ToString();

    static string \u206C⁭⁮​‎​‪‏⁪⁪⁫⁯​‎‪⁬‏⁭‪⁯‮​⁪⁭​⁮‭⁪‎⁫⁫‎⁮⁭‫‬‭‍⁫⁪‮([In] string[] obj0) => string.Concat(obj0);

    static string \u202C⁯‭⁭‭‪‫⁮⁪‪⁮⁫‍⁫⁮‍‬⁮⁯‭⁯⁯⁪‍‭​⁯‎⁪⁪‏⁭⁬⁪⁪‪‌‌‍‏‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u206B‮⁬‍‭‮⁪‌‬‏‮⁭‎‏⁬⁫​‎‭⁯⁫⁯‍⁬⁬⁫⁪⁭‪‭⁯⁪⁯‌‎‮⁯‫‪‏‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u200B‮‌‏​⁫‮⁮‏‮⁯⁯​⁭⁮‌‭‎‬⁯‍‌⁮‌⁭‎⁪⁭⁯‎‫‭‏‭⁮⁭‫⁬‎‌‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u202D⁪‫‬⁭⁫‌​‭⁭‮⁮‪‪⁪‪‏⁯⁯⁮‭⁬⁪‫⁬⁬‪‍⁭‬⁭⁫‫⁫‭‮‫‪⁪⁭‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
