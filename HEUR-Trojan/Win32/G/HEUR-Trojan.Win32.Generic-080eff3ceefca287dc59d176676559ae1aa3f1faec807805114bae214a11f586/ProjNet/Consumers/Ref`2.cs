// Decompiled with JetBrains decompiler
// Type: ProjNet.Consumers.Ref`2
// Assembly: TYPELIBA, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 97BB50BA-9882-4DFE-999C-7A4E4B448F1C
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-080eff3ceefca287dc59d176676559ae1aa3f1faec807805114bae214a11f586.exe

using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using TYPELIBA.Identifiers;

namespace ProjNet.Consumers
{
  [CompilerGenerated]
  [DebuggerDisplay("\\{ author = {author}, name = {name} }", Type = "<Anonymous Type>")]
  internal sealed class Ref<T, TT>
  {
    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
    private readonly T m_Map;
    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
    private readonly TT _Reg;

    public T author
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => this.m_Map;
    }

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public TT PatchObject() => this._Reg;

    [DebuggerHidden]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public Ref(T item, TT counter)
    {
      ManagerParamsID.NewExpression();
      // ISSUE: explicit constructor call
      base.\u002Ector();
      // ISSUE: reference to a compiler-generated field
      this.m_Map = item;
      // ISSUE: reference to a compiler-generated field
      this._Reg = counter;
    }

    [DebuggerHidden]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public override bool Equals(object res)
    {
      int num = 3;
      // ISSUE: variable of a compiler-generated type
      Ref<T, TT> @ref;
      while (true)
      {
        switch (num)
        {
          case 0:
          case 2:
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            if (EqualityComparer<T>.Default.Equals(this.m_Map, @ref.m_Map))
            {
              num = 5;
              continue;
            }
            goto label_9;
          case 1:
          case 4:
            if (this != @ref)
            {
              if (@ref == null)
                goto label_9;
              else
                goto case 0;
            }
            else
              goto label_10;
          case 3:
            @ref = res as Ref<T, TT>;
            num = 4;
            continue;
          case 5:
            goto label_8;
          default:
            num = 0;
            continue;
        }
      }
label_8:
      // ISSUE: reference to a compiler-generated field
      // ISSUE: reference to a compiler-generated field
      return EqualityComparer<TT>.Default.Equals(this._Reg, @ref._Reg);
label_9:
      return false;
label_10:
      return true;
    }

    [DebuggerHidden]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public override int GetHashCode() => (-840794754 * -1521134295 + EqualityComparer<T>.Default.GetHashCode(this.m_Map)) * -1521134295 + EqualityComparer<TT>.Default.GetHashCode(this._Reg);

    [DebuggerHidden]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public override string ToString()
    {
      object[] objArray = new object[2];
      // ISSUE: reference to a compiler-generated field
      T map = this.m_Map;
      ref T local1 = ref map;
      objArray[0] = (object) ((object) local1 != null ? local1.ToString() : (string) null);
      // ISSUE: reference to a compiler-generated field
      TT reg = this._Reg;
      ref TT local2 = ref reg;
      objArray[1] = (object) ((object) local2 != null ? local2.ToString() : (string) null);
      return string.Format((IFormatProvider) null, "{{ author = {0}, name = {1} }}", objArray);
    }

    internal static bool IncludeDispatcher() => true;

    internal static bool ForgotDispatcher() => false;
  }
}
