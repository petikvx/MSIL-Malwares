// Decompiled with JetBrains decompiler
// Type: ⁮​‭‬‬​‬⁫⁪‮‍‪‫‏⁫‍‎‮‎⁬⁬‎‭⁪‭‭‪‮⁬‍‍⁬⁮⁮⁬⁮⁯⁬⁭⁯‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using Org.BouncyCastle.Asn1;
using System;
using System.Collections;
using System.IO;

public sealed class \u206E​‭‬‬​‬⁫⁪‮‍‪‫‏⁫‍‎‮‎⁬⁬‎‭⁪‭‭‪‮⁬‍‍⁬⁮⁮⁬⁮⁯⁬⁭⁯‮
{
  private readonly short \u200F‮‏‏‏⁬‭​⁮⁫‫⁭‪‭‬‎‎⁮⁬‍⁭⁮‍‬‪‪⁯​⁫‫⁬‬‬⁫⁮‪‪‫‬‏‮;
  private readonly object \u206C‏⁭‌‬‪‫⁪⁫‬⁬‬⁭‏⁬‏⁯⁪‪⁫‎​‏‬‪‏‮⁭⁫⁬⁭‭‏‌‫⁮‍⁮‎⁯‮;

  public \u206E​‭‬‬​‬⁫⁪‮‍‪‫‏⁫‍‎‮‎⁬⁬‎‭⁪‭‭‪‮⁬‍‍⁬⁮⁮⁬⁮⁯⁬⁭⁯‮(short _param1, object _param2)
  {
    this.\u200F‮‏‏‏⁬‭​⁮⁫‫⁭‪‭‬‎‎⁮⁬‍⁭⁮‍‬‪‪⁯​⁫‫⁬‬‬⁫⁮‪‪‫‬‏‮ = \u206E​‭‬‬​‬⁫⁪‮‍‪‫‏⁫‍‎‮‎⁬⁬‎‭⁪‭‭‪‮⁬‍‍⁬⁮⁮⁬⁮⁯⁬⁭⁯‮.\u200E⁮⁫‪‎‌‍⁮⁪‬⁪‭‭⁮‏‎‭‏⁪‭⁯‮‬⁮‭⁪‫‫⁯‬⁭⁯​⁮‏‪‍‪‍⁯‮(_param1, _param2) ? _param1 : throw new ArgumentException("not an instance of the correct type", "response");
    this.\u206C‏⁭‌‬‪‫⁪⁫‬⁬‬⁭‏⁬‏⁯⁪‪⁫‎​‏‬‪‏‮⁭⁫⁬⁭‭‏‌‫⁮‍⁮‎⁯‮ = _param2;
  }

  public short \u206F‬​‌‪‏‍‫‌‮⁭⁬⁬⁭⁫⁮⁯‎‎‍⁪‫​‏⁭⁮‌‎‍⁭⁮⁫⁪‮⁫⁬‮​⁪‪‮ => this.\u200F‮‏‏‏⁬‭​⁮⁫‫⁭‪‭‬‎‎⁮⁬‍⁭⁮‍‬‪‪⁯​⁫‫⁬‬‬⁫⁮‪‪‫‬‏‮;

  public object \u200E⁭‮⁮​‍⁮‍‫⁯⁪⁫⁬⁯⁬‏⁭‍⁯​‎⁮⁮⁭‬⁮⁭‎​⁬⁭⁮‭⁬⁪⁪‭‏‭‬‮ => this.\u206C‏⁭‌‬‪‫⁪⁫‬⁬‬⁭‏⁬‏⁯⁪‪⁫‎​‏‬‪‏‮⁭⁫⁬⁭‭‏‌‫⁮‍⁮‎⁯‮;

  public \u206B⁪⁪‬‪​‌⁮⁮​‬⁮⁯‪⁬⁯⁫⁫⁯⁯‫‌⁭⁭‬⁮‫‌⁪‍⁯⁬‏‫⁬‬⁯⁮‍⁬‮ \u206F‬​‏‌⁭⁮‏​⁫​⁮‎‌‭⁭​‮‍⁯‫​⁫‪‎⁪⁭⁫‏⁪​‎⁪‌‫​⁪‏‍‮‮ => \u206E​‭‬‬​‬⁫⁪‮‍‪‫‏⁫‍‎‮‎⁬⁬‎‭⁪‭‭‪‮⁬‍‍⁬⁮⁮⁬⁮⁯⁬⁭⁯‮.\u200E⁮⁫‪‎‌‍⁮⁪‬⁪‭‭⁮‏‎‭‏⁪‭⁯‮‬⁮‭⁪‫‫⁯‬⁭⁯​⁮‏‪‍‪‍⁯‮((short) 1, this.\u206C‏⁭‌‬‪‫⁪⁫‬⁬‬⁭‏⁬‏⁯⁪‪⁫‎​‏‬‪‏‮⁭⁫⁬⁭‭‏‌‫⁮‍⁮‎⁯‮) ? (\u206B⁪⁪‬‪​‌⁮⁮​‬⁮⁯‪⁬⁯⁫⁫⁯⁯‫‌⁭⁭‬⁮‫‌⁪‍⁯⁬‏‫⁬‬⁯⁮‍⁬‮) this.\u206C‏⁭‌‬‪‫⁪⁫‬⁬‬⁭‏⁬‏⁯⁪‪⁫‎​‏‬‪‏‮⁭⁫⁬⁭‭‏‌‫⁮‍⁮‎⁯‮ : throw new InvalidOperationException("'response' is not an OCSPResponse");

  public IList \u202A⁯⁮‪‎‍‌‭⁫⁭⁮‬‍‭⁯‪⁪​⁫‎​​‬‮‫‮⁬‎‮‪⁭‪‫‌⁬‬‫‮‮‫‮ => \u206E​‭‬‬​‬⁫⁪‮‍‪‫‏⁫‍‎‮‎⁬⁬‎‭⁪‭‭‪‮⁬‍‍⁬⁮⁮⁬⁮⁯⁬⁭⁯‮.\u200E⁮⁫‪‎‌‍⁮⁪‬⁪‭‭⁮‏‎‭‏⁪‭⁯‮‬⁮‭⁪‫‫⁯‬⁭⁯​⁮‏‪‍‪‍⁯‮((short) 2, this.\u206C‏⁭‌‬‪‫⁪⁫‬⁬‬⁭‏⁬‏⁯⁪‪⁫‎​‏‬‪‏‮⁭⁫⁬⁭‭‏‌‫⁮‍⁮‎⁯‮) ? (IList) this.\u206C‏⁭‌‬‪‫⁪⁫‬⁬‬⁭‏⁬‏⁯⁪‪⁫‎​‏‬‪‏‮⁭⁫⁬⁭‭‏‌‫⁮‍⁮‎⁯‮ : throw new InvalidOperationException("'response' is not an OCSPResponseList");

  public void \u206C‮⁯‌⁯‌⁭⁫‪‭​‪‫⁫⁪⁯⁭⁫‎⁬‫‫⁮‎‮⁬⁪‮‎‫‭⁪⁭⁫⁪‪⁪⁬‭‫‮(Stream _param1)
  {
    \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u200C‭‬⁬⁭‮​⁫‏‬⁫‪‪‫‌‎⁫⁯⁯‫​⁫‍‮‪‏‬‎‍⁮‮‪⁪⁪​⁬‮⁪‮‫‮(this.\u200F‮‏‏‏⁬‭​⁮⁫‫⁭‪‭‬‎‎⁮⁬‍⁭⁮‍‬‪‪⁯​⁫‫⁬‬‬⁫⁮‪‪‫‬‏‮, _param1);
    switch (this.\u200F‮‏‏‏⁬‭​⁮⁫‫⁭‪‭‬‎‎⁮⁬‍⁭⁮‍‬‪‪⁯​⁫‫⁬‬‬⁫⁮‪‪‫‬‏‮)
    {
      case 1:
        \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u200C⁮‪⁫‬‌⁮‎‏‫‍‌‏‮⁭‪‫‫​⁫⁭⁯⁯⁪‌⁭‬⁪‎‍‬‬⁬⁮‏​⁭​⁪‮(((Asn1Encodable) this.\u206C‏⁭‌‬‪‫⁪⁫‬⁬‬⁭‏⁬‏⁯⁪‪⁫‎​‏‬‪‏‮⁭⁫⁬⁭‭‏‌‫⁮‍⁮‎⁯‮).GetEncoded("DER"), _param1);
        break;
      case 2:
        IList list1 = (IList) this.\u206C‏⁭‌‬‪‫⁪⁫‬⁬‬⁭‏⁬‏⁯⁪‪⁫‎​‏‬‪‏‮⁭⁫⁬⁭‭‏‌‫⁮‍⁮‎⁯‮;
        IList list2 = \u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u200C⁮‬‎⁪‌⁮‬​⁬⁭​‏⁮​‍‌⁮‮⁪⁪⁫‪‫‎⁮‎⁬​​‏⁪‪‍‬‪⁬⁫⁪‏‮(list1.Count);
        long num = 0;
        foreach (\u206B⁪⁪‬‪​‌⁮⁮​‬⁮⁯‪⁬⁯⁫⁫⁯⁯‫‌⁭⁭‬⁮‫‌⁪‍⁯⁬‏‫⁬‬⁯⁮‍⁬‮ obj in (IEnumerable) list1)
        {
          if (obj == null)
          {
            list2.Add((object) \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u202B⁫‌⁮⁫‎‬‮⁭‪⁬⁭‌⁯‏‬‮​‪‎⁫‍⁪‭‫​‌⁫⁫⁯‏⁫⁫⁭‌‫⁫‫‪‎‮);
          }
          else
          {
            byte[] encoded = obj.GetEncoded("DER");
            list2.Add((object) encoded);
            num += (long) encoded.Length;
          }
          num += 3L;
        }
        \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u200B⁫⁫⁫‍⁬‍⁪‪‌‮‌‮‪‍‫‏‍⁬‏⁮‮‌‍‭‪‮‫⁫‍‎‍‎‮‎‮⁪‏⁬⁭‮(num);
        \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u202C⁭‏‏‬‍⁪‏⁭⁬‬‍‎‫⁫‎⁪⁮⁪⁫‪‭⁯‌‌‫‌⁫⁯‬⁭⁭‭⁬⁪⁫‮‏‏‬‮((int) num, _param1);
        IEnumerator enumerator = list2.GetEnumerator();
        try
        {
          while (enumerator.MoveNext())
            \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u200C⁮‪⁫‬‌⁮‎‏‫‍‌‏‮⁭‪‫‫​⁫⁭⁯⁯⁪‌⁭‬⁪‎‍‬‬⁬⁮‏​⁭​⁪‮((byte[]) enumerator.Current, _param1);
          break;
        }
        finally
        {
          if (enumerator is IDisposable disposable)
            disposable.Dispose();
        }
      default:
        throw new \u202B‬⁪⁮⁬⁮‫‏‫⁯‮⁬‫‬‍⁬⁮⁬‬‫‫⁮‎‎⁬​‍‎‍‏​⁯‍‬‫‍‫‮⁯‏‮((short) 80);
    }
  }

  public static \u206E​‭‬‬​‬⁫⁪‮‍‪‫‏⁫‍‎‮‎⁬⁬‎‭⁪‭‭‪‮⁬‍‍⁬⁮⁮⁬⁮⁯⁬⁭⁯‮ \u202B‪​⁪‍⁫‮‏‪‎‏‫⁮‫⁬‬⁭‏⁯⁭‮⁪‏‮⁯‪‏⁪‪‌‭⁭‪‮‏‭⁭‍‪⁪‮(
    \u206D⁪⁭‫‬‮⁯‭⁮​‍​⁪⁬⁯‏‍⁮‮‍‬​‍‌‏‭⁯‪‬‎⁪‪‮⁬‎‬‏‪​⁮‮ _param0,
    Stream _param1)
  {
    \u202E⁭‫‬‮⁪‮‍‌‎‎​⁪‏⁯‏⁯⁯‌‌​⁭⁫⁪‭‭‫⁯‫⁮‬​⁫⁪⁫⁮⁪⁭⁪‍‮ obj1 = _param0.\u206B‮‍⁯⁬‪⁭‬‏​‍⁯⁪‌‬​⁮‬⁪⁬‌‬​‮‫⁭⁫‎⁪‪⁭‏‬⁪‍⁬‪⁬‮⁮‮;
    \u202D‫⁮​⁫⁬‪⁬⁮‮‫⁮⁪‭⁫‫‌‏⁯⁯‮‎‍⁯⁪⁭⁭‏⁫‍⁫⁭⁯⁫‫⁮‬⁮⁬⁫‮ obj2 = obj1.\u202D⁬​⁯‪​⁭⁬‮⁪​‌​‭⁬⁯​⁫‫⁭‪⁭‍‬‏⁫‎‌‪⁮⁭​⁫‏‬⁬⁯⁯⁪⁭‮;
    if (obj2 == null || obj2.\u202E‮‬⁭⁮⁫‮‮⁭‎⁭⁭‭‬‌​‫⁯‍‭‌‍‫‪‍‏‮‌‏⁭‍⁫‎⁬‮‌⁫⁮​‌‮ || obj2.\u200F‮⁫‬⁯‪⁯⁫‎‎‫‬‪⁭‍⁭‬⁬‭⁭​‭​⁪⁫‬‎‌‎⁫‏⁪⁫‎‍‮‍⁪⁯⁯‮ != (short) 0)
      throw new \u202B‬⁪⁮⁬⁮‫‏‫⁯‮⁬‫‬‍⁬⁮⁬‬‫‫⁮‎‎⁬​‍‎‍‏​⁯‍‬‫‍‫‮⁯‏‮((short) 80);
    int num1 = obj2.\u206F‌⁬‎‮‎⁮​‫​⁫⁯‍​⁫⁯​⁯‎⁭‮⁬‪‮‎‪​⁮‪‌​‬⁫‬​​‍‬‮‍‮;
    int num2 = obj1.\u200B‏⁮‭⁮‏⁭‭‭⁪⁯⁯⁮‬‍‌‭‭‌‍​⁭‍⁫‍​‫⁯‬‍⁫​‎⁯​⁫⁪⁬‫⁭‮;
    short num3 = \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u206D​‭‎‪‌⁯‬‬⁪‍‬‎⁬⁯‭‏⁮‭⁪⁯⁫⁪‬‬⁭‫⁭​​‬‬⁭‭⁫‍‬‎⁭⁫‮(_param1);
    object obj3;
    switch (num3)
    {
      case 1:
        \u206E​‭‬‬​‬⁫⁪‮‍‪‫‏⁫‍‎‮‎⁬⁬‎‭⁪‭‭‪‮⁬‍‍⁬⁮⁮⁬⁮⁯⁬⁭⁯‮.\u202E‪⁪​⁪‭‏⁯‏‌‫‬⁪⁭‭⁯⁯‍‏‪​‎⁬‏⁯​⁮‌‪⁯‍‫‎‏⁯⁮⁫‌‫‏‮(1, num2);
        obj3 = (object) \u206B⁪⁪‬‪​‌⁮⁮​‬⁮⁯‪⁬⁯⁫⁫⁯⁯‫‌⁭⁭‬⁮‫‌⁪‍⁯⁬‏‫⁬‬⁯⁮‍⁬‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u202B⁫‭‪‭⁫‍⁫⁪⁮⁫‎‌‫‭⁮‍⁫‍⁭‮‌‎‌⁬‎⁬‭⁫‬⁪‮‌‪‮⁪⁬‏‎⁮‮(\u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u202D‭‌⁬⁫​‌‎⁪⁮⁬‎‌⁬‍‮⁯‭‏⁪‬‫‬⁯‎⁬‬‌‮‬‪‭‫⁫‏⁬⁯‍‭‎‮(_param1, 1)));
        break;
      case 2:
        \u206E​‭‬‬​‬⁫⁪‮‍‪‫‏⁫‍‎‮‎⁬⁬‎‭⁪‭‭‪‮⁬‍‍⁬⁮⁮⁬⁮⁯⁬⁭⁯‮.\u202E‪⁪​⁪‭‏⁯‏‌‫‬⁪⁭‭⁯⁯‍‏‪​‎⁬‏⁯​⁮‌‪⁯‍‫‎‏⁯⁮⁫‌‫‏‮(2, num2);
        MemoryStream memoryStream = new MemoryStream(\u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u202D‭‌⁬⁫​‌‎⁪⁮⁬‎‌⁬‍‮⁯‭‏⁪‬‫‬⁯‎⁬‬‌‮‬‪‭‫⁫‏⁬⁯‍‭‎‮(_param1, 1), false);
        IList list = \u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u200C⁮‬‎⁪‌⁮‬​⁬⁭​‏⁮​‍‌⁮‮⁪⁪⁫‪‫‎⁮‎⁬​​‏⁪‪‍‬‪⁬⁫⁪‏‮();
        while (memoryStream.Position < memoryStream.Length)
        {
          if (list.Count >= num1)
            throw new \u202B‬⁪⁮⁬⁮‫‏‫⁯‮⁬‫‬‍⁬⁮⁬‬‫‫⁮‎‎⁬​‍‎‍‏​⁯‍‬‫‍‫‮⁯‏‮((short) 47);
          int num4 = \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u206A‎⁬‎‮‍‍⁭‎⁫⁯‮‌‌‌‪‫⁮⁬‎‮‫⁯⁪‭‬​⁭‮‏⁮‮‌‏‌⁭‮‭‫‌‮((Stream) memoryStream);
          if (num4 < 1)
          {
            list.Add((object) null);
          }
          else
          {
            \u206B⁪⁪‬‪​‌⁮⁮​‬⁮⁯‪⁬⁯⁫⁫⁯⁯‫‌⁭⁭‬⁮‫‌⁪‍⁯⁬‏‫⁬‬⁯⁮‍⁬‮ obj4 = \u206B⁪⁪‬‪​‌⁮⁮​‬⁮⁯‪⁬⁯⁫⁫⁯⁯‫‌⁭⁭‬⁮‫‌⁪‍⁯⁬‏‫⁬‬⁯⁮‍⁬‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u202B⁫‭‪‭⁫‍⁫⁪⁮⁫‎‌‫‭⁮‍⁫‍⁭‮‌‎‌⁬‎⁬‭⁫‬⁪‮‌‪‮⁪⁬‏‎⁮‮(\u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u206A⁫⁯⁯⁫‫⁬‬​‬‪‫‮⁯‎‌‭‫‏‭‭‍‍⁭‭⁪‌‭⁬‮‬‮‭‫‍‪​⁪​⁯‮(num4, (Stream) memoryStream)));
            list.Add((object) obj4);
          }
        }
        obj3 = (object) \u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u200C⁮‬‎⁪‌⁮‬​⁬⁭​‏⁮​‍‌⁮‮⁪⁪⁫‪‫‎⁮‎⁬​​‏⁪‪‍‬‪⁬⁫⁪‏‮((ICollection) list);
        break;
      default:
        throw new \u202B‬⁪⁮⁬⁮‫‏‫⁯‮⁬‫‬‍⁬⁮⁬‬‫‫⁮‎‎⁬​‍‎‍‏​⁯‍‬‫‍‫‮⁯‏‮((short) 50);
    }
    return new \u206E​‭‬‬​‬⁫⁪‮‍‪‫‏⁫‍‎‮‎⁬⁬‎‭⁪‭‭‪‮⁬‍‍⁬⁮⁮⁬⁮⁯⁬⁭⁯‮(num3, obj3);
  }

  private static bool \u200E⁮⁫‪‎‌‍⁮⁪‬⁪‭‭⁮‏‎‭‏⁪‭⁯‮‬⁮‭⁪‫‫⁯‬⁭⁯​⁮‏‪‍‪‍⁯‮(short _param0, object _param1)
  {
    if (_param0 == (short) 1)
      return _param1 is \u206B⁪⁪‬‪​‌⁮⁮​‬⁮⁯‪⁬⁯⁫⁫⁯⁯‫‌⁭⁭‬⁮‫‌⁪‍⁯⁬‏‫⁬‬⁯⁮‍⁬‮;
    if (_param0 == (short) 2)
      return \u206E​‭‬‬​‬⁫⁪‮‍‪‫‏⁫‍‎‮‎⁬⁬‎‭⁪‭‭‪‮⁬‍‍⁬⁮⁮⁬⁮⁯⁬⁭⁯‮.\u202A‌‍‭‪​‬‌⁫‪​‍‫‌⁯‏‍‪⁬⁪​⁬‍⁯‬‮‎‏‫‍‎‏⁯⁫‭‪⁬‮⁬‮(_param1);
    throw new ArgumentException("unsupported CertificateStatusType", "statusType");
  }

  private static bool \u202A‌‍‭‪​‬‌⁫‪​‍‫‌⁯‏‍‪⁬⁪​⁬‍⁯‬‮‎‏‫‍‎‏⁯⁫‭‪⁬‮⁬‮(object _param0)
  {
    if (!(_param0 is IList))
      return false;
    IList list = (IList) _param0;
    if (list.Count < 1)
      return false;
    foreach (object obj in (IEnumerable) list)
    {
      switch (obj)
      {
        case null:
        case \u206B⁪⁪‬‪​‌⁮⁮​‬⁮⁯‪⁬⁯⁫⁫⁯⁯‫‌⁭⁭‬⁮‫‌⁪‍⁯⁬‏‫⁬‬⁯⁮‍⁬‮ _:
          continue;
        default:
          return false;
      }
    }
    return true;
  }

  private static void \u202E‪⁪​⁪‭‏⁯‏‌‫‬⁪⁭‭⁯⁯‍‏‪​‎⁬‏⁯​⁮‌‪⁯‍‫‎‏⁯⁮⁫‌‫‏‮(int _param0, int _param1)
  {
    if (_param1 < _param0)
      throw new \u202B‬⁪⁮⁬⁮‫‏‫⁯‮⁬‫‬‍⁬⁮⁬‬‫‫⁮‎‎⁬​‍‎‍‏​⁯‍‬‫‍‫‮⁯‏‮((short) 50);
  }
}
