// Decompiled with JetBrains decompiler
// Type: PreEmptive.SoS.Client.Messages.BusinessInformation
// Assembly: EncoderCSL, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8BC70EB6-E222-4E38-9ED5-32744A85C676
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-Ransom.MSIL.Tear.gen-1cd3fa0de4807e268dc8a396dc670ba38d6729e7df613b33b046970a22ff6a2a.exe

using PreEmptive.Analytics.Common.Utilities;
using System;

namespace PreEmptive.SoS.Client.Messages
{
  public class BusinessInformation
  {
    public Guid CompanyId
    {
      get
      {
        int num1 = 30612;
        int num2 = num1;
        num1 = 30612;
        int num3 = num1;
        switch (num2 == num3)
        {
          case true:
            int num4 = 1;
            if (num4 == 0)
              ;
            num4 = 0;
            if (num4 == 0)
              ;
            return this.a;
          default:
            goto case 1;
        }
      }
      private set
      {
        int num1 = -1656;
        int num2 = num1;
        num1 = -1656;
        int num3 = num1;
        switch (num2 == num3)
        {
          case true:
            int num4 = 1;
            if (num4 == 0)
              ;
            num4 = 0;
            if (num4 == 0)
              ;
            this.a = value;
            break;
          default:
            goto case 1;
        }
      }
    }

    public string CompanyName
    {
      get
      {
        int num1 = -19344;
        int num2 = num1;
        num1 = -19344;
        int num3 = num1;
        switch (num2 == num3)
        {
          case true:
            int num4 = 1;
            if (num4 == 0)
              ;
            num4 = 0;
            if (num4 == 0)
              ;
            return this.b;
          default:
            goto case 1;
        }
      }
      private set
      {
        int num1 = -22085;
        int num2 = num1;
        num1 = -22085;
        int num3 = num1;
        switch (num2 == num3)
        {
          case true:
            int num4 = 1;
            if (num4 == 0)
              ;
            num4 = 0;
            if (num4 == 0)
              ;
            this.b = value;
            break;
          default:
            goto case 1;
        }
      }
    }

    public BusinessInformation(Guid companyId)
    {
      int A_1 = 16;
      // ISSUE: explicit constructor call
      base.\u002Ector();
      this.CompanyId = !(companyId == Guid.Empty) ? companyId : throw new ArgumentException(Utils.a("藃듅꿇뿉ꇋꯍ뻏ꛑ\uF4D3뗕맗듙닛뇝铟싡蛣菥죧蓩駫苭鳯틱鯳蓵\uD8F7\u9FF9釻軽瓿笁", A_1), Utils.a("\uA7C3꧅ꗇ뫉귋ꃍꧏ鯑냓", A_1));
    }

    public BusinessInformation(Guid companyId, string companyName)
      : this(companyId)
    {
      this.CompanyName = companyName;
    }
  }
}
