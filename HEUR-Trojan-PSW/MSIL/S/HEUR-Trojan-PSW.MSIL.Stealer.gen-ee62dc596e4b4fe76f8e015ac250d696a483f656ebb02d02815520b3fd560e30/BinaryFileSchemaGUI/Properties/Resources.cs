// Decompiled with JetBrains decompiler
// Type: BinaryFileSchemaGUI.Properties.Resources
// Assembly: Type, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 716CE3A9-BAD1-470D-912F-B421D403F66E
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-ee62dc596e4b4fe76f8e015ac250d696a483f656ebb02d02815520b3fd560e30.exe

using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Globalization;
using System.Resources;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using wG;

namespace BinaryFileSchemaGUI.Properties
{
  [DebuggerNonUserCode]
  [CompilerGenerated]
  [GeneratedCode("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
  internal class Resources
  {
    private static ResourceManager P2l;
    private static CultureInfo u2t;
    internal static BinaryFileSchemaGUI.Properties.Resources DZ1;

    internal Resources()
    {
      XTG.fvQjdC();
      // ISSUE: explicit constructor call
      base.\u002Ector();
    }

    [EditorBrowsable(EditorBrowsableState.Advanced)]
    internal static ResourceManager c2n
    {
      get
      {
        if (BinaryFileSchemaGUI.Properties.Resources.P2l == null)
        {
          int num = 0;
          if (BinaryFileSchemaGUI.Properties.Resources.bZ8())
            goto label_3;
label_1:
          switch (num)
          {
            default:
              BinaryFileSchemaGUI.Properties.Resources.P2l = new ResourceManager("BinaryFileSchemaGUI.Properties.Resources", typeof (BinaryFileSchemaGUI.Properties.Resources).Assembly);
              goto label_5;
          }
label_3:
          num = 0;
          goto label_1;
        }
label_5:
        return BinaryFileSchemaGUI.Properties.Resources.P2l;
      }
    }

    [EditorBrowsable(EditorBrowsableState.Advanced)]
    internal static CultureInfo W2s
    {
      get => BinaryFileSchemaGUI.Properties.Resources.u2t;
      set => BinaryFileSchemaGUI.Properties.Resources.u2t = value;
    }

    [SpecialName]
    internal static Bitmap C2E() => (Bitmap) BinaryFileSchemaGUI.Properties.Resources.c2n.GetObject("cog_go", BinaryFileSchemaGUI.Properties.Resources.u2t);

    [SpecialName]
    internal static Bitmap y2h() => (Bitmap) BinaryFileSchemaGUI.Properties.Resources.c2n.GetObject("control_play_blue", BinaryFileSchemaGUI.Properties.Resources.u2t);

    [SpecialName]
    internal static Bitmap g2i() => (Bitmap) BinaryFileSchemaGUI.Properties.Resources.c2n.GetObject("disk", BinaryFileSchemaGUI.Properties.Resources.u2t);

    [SpecialName]
    internal static Bitmap t2C() => (Bitmap) BinaryFileSchemaGUI.Properties.Resources.c2n.GetObject("disk1", BinaryFileSchemaGUI.Properties.Resources.u2t);

    [SpecialName]
    internal static Bitmap h2v() => (Bitmap) BinaryFileSchemaGUI.Properties.Resources.c2n.GetObject("folder", BinaryFileSchemaGUI.Properties.Resources.u2t);

    [SpecialName]
    internal static Bitmap x2b() => (Bitmap) BinaryFileSchemaGUI.Properties.Resources.c2n.GetObject("help", BinaryFileSchemaGUI.Properties.Resources.u2t);

    [SpecialName]
    internal static Bitmap d20() => (Bitmap) BinaryFileSchemaGUI.Properties.Resources.eZs(BinaryFileSchemaGUI.Properties.Resources.mZn(), (object) "page", (object) BinaryFileSchemaGUI.Properties.Resources.u2t);

    [SpecialName]
    internal static Bitmap h2o() => (Bitmap) BinaryFileSchemaGUI.Properties.Resources.c2n.GetObject("FixupHol", BinaryFileSchemaGUI.Properties.Resources.u2t);

    internal static bool bZ8() => BinaryFileSchemaGUI.Properties.Resources.DZ1 == null;

    internal static BinaryFileSchemaGUI.Properties.Resources kZl() => BinaryFileSchemaGUI.Properties.Resources.DZ1;

    internal static object mZn() => (object) BinaryFileSchemaGUI.Properties.Resources.c2n;

    internal static object eZs([In] object obj0, [In] object obj1, [In] object obj2) => ((ResourceManager) obj0).GetObject((string) obj1, (CultureInfo) obj2);
  }
}
