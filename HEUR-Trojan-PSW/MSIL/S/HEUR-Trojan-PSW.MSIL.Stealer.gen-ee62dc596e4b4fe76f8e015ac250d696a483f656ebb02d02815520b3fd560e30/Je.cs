// Decompiled with JetBrains decompiler
// Type: wG.Je
// Assembly: Type, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 716CE3A9-BAD1-470D-912F-B421D403F66E
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-ee62dc596e4b4fe76f8e015ac250d696a483f656ebb02d02815520b3fd560e30.exe

using System;
using System.Diagnostics;
using System.IO;
using System.Runtime.InteropServices;
using System.Text;

namespace wG
{
  public class Je
  {
    private string Hl;
    public readonly Je.OGi Jt;
    internal static Je xU;

    public Je(mH _param1, tA _param2, string _param3)
    {
      XTG.fvQjdC();
      // ISSUE: explicit constructor call
      base.\u002Ector();
      this.Jt = this.G6(_param1, _param2, _param3);
      this.Hl = _param3;
    }

    public bool Pb() => this.Jt == (Je.OGi) 2;

    public bool t3(out byte[] _param1)
    {
      _param1 = (byte[]) null;
      if (!this.Pb())
        return false;
      using (BinaryReader binaryReader = new BinaryReader((Stream) File.Open(this.Hl, FileMode.Open, FileAccess.Read)))
      {
        _param1 = binaryReader.ReadBytes((int) binaryReader.BaseStream.Length);
        return true;
      }
    }

    public bool o0(out string _param1)
    {
      int num1 = 1;
label_1:
      int num2 = num1;
      Encoding encoding;
      while (true)
      {
        switch (num2)
        {
          case 1:
            _param1 = (string) null;
            if (Je.a2())
            {
              num2 = 0;
              continue;
            }
            goto label_1;
          case 2:
            if (this.Jt == (Je.OGi) 5)
            {
              if (Je.a2())
              {
                num2 = 3;
                continue;
              }
              goto label_1;
            }
            else
              goto label_7;
          case 3:
            goto label_6;
          default:
            encoding = this.EM();
            if (encoding != null)
              goto case 2;
            else
              goto label_25;
        }
      }
label_6:
      using (BinaryReader binaryReader = new BinaryReader((Stream) Je.lw((object) this.Hl, FileMode.Open, FileAccess.Read)))
      {
        byte[] numArray = binaryReader.ReadBytes((int) binaryReader.BaseStream.Length);
        int num3 = 0;
        if (Je.xg() != null)
        {
          int num4;
          num3 = num4;
        }
        int index;
        StringBuilder stringBuilder;
        switch (num3)
        {
          case 1:
label_15:
            char ch = (char) ((uint) numArray[index] << 8 | (uint) numArray[index + 1]);
            stringBuilder.Append(ch);
            index += 2;
            break;
          default:
            stringBuilder = new StringBuilder();
            index = 0;
            break;
        }
        if (index >= numArray.Length)
        {
          _param1 = stringBuilder.ToString();
          return true;
        }
        goto label_15;
      }
label_7:
      using (StreamReader streamReader = new StreamReader(this.Hl, encoding))
      {
        _param1 = streamReader.ReadToEnd();
        return true;
      }
label_25:
      if (this.Jt == (Je.OGi) 2)
        return false;
      using (StreamReader streamReader = new StreamReader(this.Hl, true))
      {
        _param1 = streamReader.ReadToEnd();
        return true;
      }
    }

    private Encoding EM()
    {
      int num1 = 3;
label_1:
      int num2 = num1;
      Encoding encoding;
      Je.OGi jt;
      while (true)
      {
        switch (num2)
        {
          case 1:
            goto label_5;
          case 2:
            switch (jt)
            {
              case (Je.OGi) 1:
                goto label_9;
              case (Je.OGi) 2:
              case (Je.OGi) 9:
                goto label_3;
              case (Je.OGi) 3:
                goto label_12;
              case (Je.OGi) 4:
              case (Je.OGi) 5:
              case (Je.OGi) 6:
                goto label_11;
              case (Je.OGi) 7:
              case (Je.OGi) 8:
                encoding = (Encoding) new UTF32Encoding();
                if (Je.xg() == null)
                {
                  num2 = 1;
                  continue;
                }
                goto label_1;
              default:
                goto label_8;
            }
          case 3:
            jt = this.Jt;
            num2 = Je.a2() ? 2 : 0;
            continue;
          default:
            goto label_11;
        }
      }
label_3:
      encoding = (Encoding) null;
label_5:
      return encoding;
label_8:
      Debug.Assert(false);
      encoding = (Encoding) null;
      goto label_5;
label_9:
      encoding = (Encoding) new ASCIIEncoding();
      goto label_5;
label_11:
      encoding = (Encoding) new UnicodeEncoding();
      goto label_5;
label_12:
      encoding = (Encoding) new UTF8Encoding();
      goto label_5;
    }

    private static Je.OGi Jo(string _param0)
    {
      BinaryReader binaryReader = new BinaryReader((Stream) File.Open(_param0, FileMode.Open, FileAccess.Read));
      Je.OGi ogi;
      try
      {
        byte[] numArray = binaryReader.ReadBytes(4);
        if (numArray.Length != 0)
          goto label_21;
        else
          goto label_9;
label_2:
        int num1;
        int num2 = num1;
label_3:
        bool flag;
        while (true)
        {
          switch (num2)
          {
            case 1:
              goto label_21;
            case 2:
              goto label_16;
            case 3:
              if (!flag)
              {
                if (Je.a2())
                {
                  num2 = 5;
                  continue;
                }
                goto label_2;
              }
              else
              {
                ogi = (Je.OGi) 5;
                num2 = 6;
                continue;
              }
            case 4:
              goto label_12;
            case 5:
            case 7:
              goto label_6;
            case 6:
              goto label_28;
            case 8:
              goto label_11;
            default:
              goto label_20;
          }
        }
label_6:
        if (numArray[0] == (byte) 0 && numArray[1] == (byte) 0)
        {
          ogi = (Je.OGi) 8;
          goto label_28;
        }
        else if (numArray[0] == (byte) 0 && numArray[1] > (byte) 0)
        {
          ogi = (Je.OGi) 5;
          goto label_28;
        }
        else if (numArray[0] != (byte) 0 && numArray[1] == (byte) 0)
        {
          ogi = (Je.OGi) 6;
          goto label_28;
        }
label_11:
        ogi = (Je.OGi) 3;
        goto label_28;
label_12:
        ogi = (Je.OGi) 3;
        goto label_28;
label_16:
        ogi = (Je.OGi) 0;
        goto label_28;
label_20:
        ogi = (Je.OGi) 6;
        goto label_28;
label_9:
        if (Je.a2())
        {
          num2 = 2;
          goto label_3;
        }
        else
          goto label_2;
label_21:
        if (numArray.Length == 1 || numArray.Length == 3)
        {
          if (Je.a2())
          {
            num2 = 4;
            goto label_3;
          }
          else
            goto label_2;
        }
        else if (numArray.Length == 2 && numArray[0] > (byte) 0)
        {
          if (Je.xg() == null)
          {
            num2 = 0;
            goto label_3;
          }
          else
            goto label_2;
        }
        else
        {
          flag = numArray.Length == 2 && numArray[0] == (byte) 0;
          num2 = 3;
          if (Je.a2())
            goto label_3;
          else
            goto label_2;
        }
      }
      finally
      {
        if (binaryReader != null)
          Je.Po((object) binaryReader);
      }
label_28:
      return ogi;
    }

    private Je.OGi G6(mH _param1, tA _param2, string _param3)
    {
      Je.OGi ogi;
      int num;
      switch (_param1)
      {
        case (mH) 0:
          switch (_param2)
          {
            case (tA) 1:
              num = 2;
              break;
            case (tA) 2:
              ogi = Je.Jo(_param3);
              goto label_3;
            default:
              ogi = (Je.OGi) 4;
              goto label_3;
          }
          break;
        case (mH) 1:
          ogi = (Je.OGi) 3;
          goto label_3;
        case (mH) 2:
          ogi = (Je.OGi) 2;
          goto label_3;
        case (mH) 3:
label_12:
          ogi = (Je.OGi) 1;
          goto label_3;
        default:
          num = Je.xg() != null ? 0 : 0;
          break;
      }
      switch (num)
      {
        case 1:
          break;
        case 2:
          ogi = (Je.OGi) 9;
          break;
        case 3:
          goto label_12;
        default:
          ogi = (Je.OGi) 0;
          break;
      }
label_3:
      return ogi;
    }

    internal static bool a2() => Je.xU == null;

    internal static Je xg() => Je.xU;

    internal static object lw([In] object obj0, [In] FileMode obj1, [In] FileAccess obj2) => (object) File.Open((string) obj0, obj1, obj2);

    internal static void Po([In] object obj0) => ((IDisposable) obj0).Dispose();

    public enum OGi
    {
    }
  }
}
