// Decompiled with JetBrains decompiler
// Type: mainPorject.BeamWrapper
// Assembly: MuiResourceTypeIdIntEn, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 2C7C9528-88C0-45FF-AB6A-2AC0C29EABCB
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.07\HEUR-Backdoor.MSIL.Androm.gen-0e10e646be7b3f9857a2994bedc1b808fabc112009cda3192df15b8eb4980ef8.exe

using beam;
using beam.forms;
using forces;
using System;

namespace mainPorject
{
  public class BeamWrapper
  {
    public RenforcedBeem beam;
    public Forces forces;
    public PointBaemForce F1;
    public PointBaemForce F2;

    public double Width => this.beam.B;

    public double Height
    {
      get
      {
        if (this.beam.Form is Rectangle)
          return this.beam.Form.crossSectionalArea() / this.Width;
        throw new NotImplementedException();
      }
    }

    public double Length => this.beam.L;

    public double MaxMomentom => this.beam.ERM;

    public double MaxDiflection => -this.beam.L / 240.0;

    public double getDiflectionAt(double position) => this.forces.getfMomentomd2x(position) / (this.beam.getIe(this.forces.getMomentom(position)) * this.beam.EMC);

    public double getShaer(double position) => this.forces.getShaer(position);

    public double getMomentomAt(double position) => this.forces.getMomentom(position);

    public double getNaturalSerfaceDepth()
    {
      if (this.beam is SinReinRecBeem)
        return (this.beam as SinReinRecBeem).X;
      return this.beam is DoubReinRecBeem ? (this.beam as DoubReinRecBeem).X : throw new NotImplementedException();
    }

    public double getI(double position) => this.beam.getIe(this.forces.getMomentom(position));

    public double E => this.beam.EMC;
  }
}
