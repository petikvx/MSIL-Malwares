// Decompiled with JetBrains decompiler
// Type: jd.JB
// Assembly: RuntimeFieldI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 3177D6BF-0678-437F-AD25-445C5521A270
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.07\UDS-Trojan.Win32.GenericML.xnet-4e662e06b02d9a2d6b61135dedc905b8bc0ad6107d655cb2448b7eedfbf9c5b6.exe

using System;
using System.Reflection;
using System.Runtime.InteropServices;

namespace jd
{
  internal class JB
  {
    internal static Module ifB;
    internal static JB Fg5;

    internal static void DD3Eii(int typemdt)
    {
      Type type = JB.ifB.ResolveType(33554432 + typemdt);
      FieldInfo[] fields = type.GetFields();
      int index = 0;
      int num1 = 1;
      if (JB.pgW() == null)
        goto label_2;
label_1:
      int num2;
      num1 = num2;
label_2:
      FieldInfo fieldInfo;
      while (true)
      {
        switch (num1)
        {
          case 1:
          case 2:
            if (index < fields.Length)
            {
              fieldInfo = fields[index];
              if (JB.lgd())
              {
                num1 = 0;
                continue;
              }
              goto label_1;
            }
            else
              goto label_6;
          default:
            MethodInfo method = (MethodInfo) JB.ifB.ResolveMethod(fieldInfo.MetadataToken + 100663296);
            fieldInfo.SetValue((object) null, (object) (MulticastDelegate) Delegate.CreateDelegate(type, method));
            ++index;
            num1 = 2;
            continue;
        }
      }
label_6:;
    }

    public JB()
    {
      gs.JD3Ei4();
      // ISSUE: explicit constructor call
      base.\u002Ector();
    }

    static JB()
    {
      JB.ygS();
      JB.ifB = (Module) JB.Jgw((object) typeof (JB).Assembly);
    }

    internal static bool lgd() => JB.Fg5 == null;

    internal static JB pgW() => JB.Fg5;

    internal static void ygS() => gs.JD3Ei4();

    internal static object Jgw([In] object obj0) => (object) ((Assembly) obj0).ManifestModule;

    internal delegate void OL(object o);
  }
}
