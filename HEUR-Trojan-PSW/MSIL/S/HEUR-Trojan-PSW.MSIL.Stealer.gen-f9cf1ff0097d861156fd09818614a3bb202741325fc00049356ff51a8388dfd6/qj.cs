// Decompiled with JetBrains decompiler
// Type: rw.qj
// Assembly: DynamicMet, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: AF763EB9-8CE5-4C8D-A157-180B851AA721
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-f9cf1ff0097d861156fd09818614a3bb202741325fc00049356ff51a8388dfd6.exe

using System.Collections.Generic;
using System.Linq;

namespace rw
{
  public struct qj
  {
    internal SortedList<int, int> pln;
    private static object Cp;

    private void c8(string _param1, int _param2, int _param3, ref int _param4, out int _param5)
    {
      _param5 = 2;
      int key = _param2 + 1;
      while (key <= _param3)
      {
        if (_param1[key - 1] == '\n')
          goto label_6;
        else
          goto label_5;
label_1:
        int num1;
        int num2 = num1;
label_2:
        switch (num2)
        {
          case 1:
            goto label_6;
          default:
            ++key;
            ++_param5;
            continue;
        }
label_5:
        if (qj.wU())
        {
          num2 = 0;
          goto label_2;
        }
        else
          goto label_1;
label_6:
        this.pln[key] = ++_param4;
        _param5 = 1;
        num2 = 2;
        if (qj.bA() == null)
          goto label_2;
        else
          goto label_1;
      }
      --_param5;
    }

    public void Xz(string _param1, int _param2, out int _param3, out int _param4)
    {
label_13:
      for (int index = this.pln.Count<KeyValuePair<int, int>>(); index > 0; --index)
      {
        KeyValuePair<int, int> keyValuePair = this.pln.ElementAt<KeyValuePair<int, int>>(index - 1);
        bool flag1 = keyValuePair.Key == _param2;
        int num1 = 0;
        if (qj.bA() == null)
          goto label_2;
label_1:
        int num2;
        num1 = num2;
label_2:
        bool flag2;
        while (true)
        {
          switch (num1)
          {
            case 1:
              goto label_7;
            case 2:
              goto label_8;
            case 3:
              goto label_13;
            default:
              if (flag1)
              {
                _param3 = keyValuePair.Value;
                num1 = qj.wU() ? 2 : 1;
                continue;
              }
              flag2 = keyValuePair.Key < _param2;
              if (qj.wU())
              {
                num1 = 1;
                continue;
              }
              goto label_1;
          }
        }
label_7:
        if (flag2)
        {
          _param3 = keyValuePair.Value;
          this.c8(_param1, keyValuePair.Key, _param2, ref _param3, out _param4);
          return;
        }
        continue;
label_8:
        _param4 = 1;
        return;
      }
      _param3 = 1;
      this.c8(_param1, 0, _param2, ref _param3, out _param4);
    }

    internal static bool wU() => qj.Cp == null;

    internal static object bA() => qj.Cp;
  }
}
