// Decompiled with JetBrains decompiler
// Type: rw.gwt
// Assembly: DynamicMet, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: AF763EB9-8CE5-4C8D-A157-180B851AA721
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-f9cf1ff0097d861156fd09818614a3bb202741325fc00049356ff51a8388dfd6.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace rw
{
  public class gwt : nv, WI
  {
    internal static gwt xIv;

    [CompilerGenerated]
    [SpecialName]
    public Nx mRN() => this.Td6;

    [CompilerGenerated]
    [SpecialName]
    public void VRw(Nx _param1) => this.Td6 = _param1;

    [CompilerGenerated]
    [SpecialName]
    public nH ddd() => this.ad0;

    [CompilerGenerated]
    [SpecialName]
    public void ddO(nH _param1) => this.ad0 = _param1;

    [CompilerGenerated]
    [SpecialName]
    public IList<nv> UdH() => this.kdP;

    [CompilerGenerated]
    [SpecialName]
    public void wdm(IList<nv> _param1) => this.kdP = _param1;

    [CompilerGenerated]
    [SpecialName]
    public eww rdI() => this.ndD;

    [CompilerGenerated]
    [SpecialName]
    public void mdC(eww _param1) => this.ndD = _param1;

    public gwt()
    {
      ccw.xFvA3V();
      // ISSUE: explicit constructor call
      base.\u002Ector();
      this.wdm((IList<nv>) new List<nv>());
    }

    public override string ToString()
    {
      string empty = string.Empty;
      IEnumerator<nv> enumerator = this.UdH().GetEnumerator();
      int num1 = 0;
      if (gwt.OI8() != null)
        goto label_10;
label_1:
      switch (num1)
      {
        default:
          try
          {
            while (gwt.QIf((object) enumerator))
            {
              nv current = enumerator.Current;
              empty += current.ToString();
            }
          }
          finally
          {
            if (enumerator != null)
              gwt.FIL((object) enumerator);
          }
          return "(" + empty + ")";
      }
label_10:
      int num2;
      num1 = num2;
      goto label_1;
    }

    internal static bool XII() => gwt.xIv == null;

    internal static gwt OI8() => gwt.xIv;

    internal static bool QIf([In] object obj0) => ((IEnumerator) obj0).MoveNext();

    internal static void FIL([In] object obj0) => ((IDisposable) obj0).Dispose();
  }
}
