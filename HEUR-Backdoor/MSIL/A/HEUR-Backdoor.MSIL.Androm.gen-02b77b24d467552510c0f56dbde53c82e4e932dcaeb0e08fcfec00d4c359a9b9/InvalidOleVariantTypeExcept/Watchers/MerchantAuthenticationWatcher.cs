// Decompiled with JetBrains decompiler
// Type: InvalidOleVariantTypeExcept.Watchers.MerchantAuthenticationWatcher
// Assembly: InvalidOleVariantTypeExcept, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 9E82E8E9-C8CD-41F7-BA61-2A9379AE4148
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Backdoor.MSIL.Androm.gen-02b77b24d467552510c0f56dbde53c82e4e932dcaeb0e08fcfec00d4c359a9b9.exe

using InvalidOleVariantTypeExcept.Connections;
using InvalidOleVariantTypeExcept.Filters;
using InvalidOleVariantTypeExcept.Identifiers;
using InvalidOleVariantTypeExcept.Messages;
using InvalidOleVariantTypeExcept.States;
using System;
using System.Collections.Generic;
using System.Net.Sockets;
using System.Runtime.CompilerServices;
using TGL.Configurations;
using TGL.Consumers;
using TGL.Containers;
using TGL.Licensing;
using TGL.Objects;
using TGL.Polices;
using TGL.Services;
using TGL.Shared;

namespace InvalidOleVariantTypeExcept.Watchers
{
  public class MerchantAuthenticationWatcher : Proccesor
  {
    private GlobalFieldID bridge;
    private ContainerVisitorConfig property;
    private PropertyAnnotationState m_Observer;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public MerchantAuthenticationWatcher(ContainerVisitorConfig last, PropertyAnnotationState attr)
    {
      int num1 = 5;
      if (MerchantAuthenticationWatcher.ChangeInfo())
        goto label_15;
label_1:
      // ISSUE: explicit constructor call
      base.\u002Ector();
      int num2 = 6;
label_14:
      num1 = num2;
label_15:
      while (true)
      {
        switch (num1)
        {
          case 0:
            goto label_3;
          case 1:
            this.m_Observer.quitGameEvent += new Rule(this.SearchComparator);
            if (true)
            {
              num1 = 8;
              continue;
            }
            goto case 14;
          case 2:
          case 3:
            goto label_4;
          case 4:
            this.m_Observer.deconnectionEvent += new Struct(this.ChangeComparator);
            num1 = 11;
            continue;
          case 5:
            UtilsContextLicense.ListWorker();
            num1 = 10;
            continue;
          case 6:
            goto label_8;
          case 7:
          case 9:
            this.m_Observer.requestEvent += new InvocationSchemaObject(this.SetComparator);
            this.m_Observer.responseEvent += new FacadeStubPolicy(this.MoveComparator);
            if (true)
            {
              num1 = 1;
              continue;
            }
            goto label_3;
          case 8:
            this.m_Observer.sendMsgEvent += new Thread(this.InstantiateComparator);
            if (true)
            {
              num1 = 13;
              continue;
            }
            goto case 11;
          case 10:
            goto label_1;
          case 11:
            this.m_Observer.connectionEvent += new SchemaPublisherService(this.CollectComparator);
            this.m_Observer.loginEvent += new Singleton(this.RegisterComparator);
            num1 = 14;
            continue;
          case 12:
            goto label_9;
          case 13:
            goto label_11;
          case 14:
            this.m_Observer.abortEvent += new AnnotationValueFilter(this.ReflectComparator);
            goto case 7;
          case 15:
            goto label_17;
          default:
            goto label_16;
        }
      }
label_3:
      this.m_Observer.gameEvent += new AuthenticationValueFilter(this.RevertRecord);
      num2 = 12;
      goto label_14;
label_4:
      this.m_Observer = attr;
      num2 = 4;
      goto label_14;
label_8:
      this.property = last;
      num2 = 2;
      goto label_14;
label_9:
      this.m_Observer.showView(last.InvokeRecord());
      num2 = 15;
      goto label_14;
label_11:
      this.m_Observer.endGameEvent += new Interpreter(this.ValidateRecord);
      num2 = 0;
      goto label_14;
label_17:
      return;
label_16:
      num2 = 9;
      goto label_14;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void ValidateRecord(object config, SqlParameterType cfg)
    {
      int num1 = 5;
      if (true)
        goto label_10;
label_1:
      Identifier ident = new Identifier((ItemValues) 14);
      int num2 = 8;
label_9:
      num1 = num2;
label_10:
      bool flag;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 2:
            flag = cfg == (SqlParameterType) 0;
            if (true)
            {
              num1 = 1;
              continue;
            }
            goto label_7;
          case 1:
            goto label_7;
          case 3:
          case 6:
            this.bridge.SortRecord(ident);
            if (true)
            {
              num1 = 9;
              continue;
            }
            goto label_5;
          case 4:
          case 7:
            goto label_3;
          case 5:
            goto label_1;
          case 8:
            goto label_5;
          case 9:
            goto label_8;
          default:
            goto label_11;
        }
      }
label_3:
      ident.ComputeRecord((ItemValues) 18, (object) true);
      num2 = 3;
      goto label_9;
label_5:
      ident.ComputeRecord((ItemValues) 25, config);
      num2 = 0;
      goto label_9;
label_7:
      if (!flag)
      {
        ident.ComputeRecord((ItemValues) 19, (object) true);
        num2 = 6;
        goto label_9;
      }
      else
        goto label_3;
label_8:
      return;
label_11:
      num2 = 7;
      goto label_9;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void RevertRecord(object task) => this.bridge.SortRecord(new Identifier((ItemValues) 24).ComputeRecord((ItemValues) 25, task));

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void InstantiateComparator(string setup) => this.bridge.SortRecord(new Identifier((ItemValues) 22).ComputeRecord((ItemValues) 8, (object) this.bridge.ReadRecord()).ComputeRecord((ItemValues) 23, (object) setup));

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void SearchComparator() => this.bridge.SortRecord(new Identifier((ItemValues) 15));

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void ReflectComparator(PoolFieldMessage value, bool explicitcounter)
    {
      int num1 = 0;
      while (true)
      {
        int num2 = num1;
        bool flag;
        while (true)
        {
          switch (num2)
          {
            case 0:
              goto label_2;
            case 1:
            case 3:
            case 4:
              goto label_10;
            case 2:
            case 5:
              goto label_1;
            case 6:
              if (flag)
              {
                int num3 = 7;
                num2 = MerchantAuthenticationWatcher.ExcludeInfo() ? num3 : num3;
                continue;
              }
              goto label_3;
            case 7:
              this.bridge.RemoveRecord((PoolFieldMessage) null);
              num2 = 3;
              continue;
            case 8:
              goto label_9;
            default:
              goto label_6;
          }
        }
label_1:
        Identifier record;
        this.bridge.SortRecord(record);
        num1 = 8;
        continue;
label_2:
        flag = explicitcounter;
        num1 = 6;
        continue;
label_3:
        this.bridge.InitRecord().Remove(value);
        goto label_10;
label_6:
        num1 = 1;
        continue;
label_10:
        record = new Identifier((ItemValues) 6).ComputeRecord((ItemValues) 12, (object) true).ComputeRecord((ItemValues) 8, (object) value);
        num1 = 2;
      }
label_9:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void SetComparator(PoolFieldMessage info)
    {
      int num1 = 2;
      while (true)
      {
        int num2 = num1;
        Identifier record;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 2:
              this.bridge.RemoveRecord(info);
              num2 = 3;
              continue;
            case 1:
            case 3:
              record = new Identifier((ItemValues) 6).ComputeRecord((ItemValues) 10, (object) true).ComputeRecord((ItemValues) 8, (object) info);
              goto case 4;
            case 4:
              this.bridge.SortRecord(record);
              num2 = 5;
              continue;
            case 5:
              goto label_7;
            default:
              goto label_6;
          }
        }
label_6:
        num1 = 4;
      }
label_7:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void MoveComparator(PoolFieldMessage info) => this.bridge.SortRecord(new Identifier((ItemValues) 6).ComputeRecord((ItemValues) 11, (object) true).ComputeRecord((ItemValues) 8, (object) info));

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void CollectComparator(TcpClient spec)
    {
      int num1 = 12;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
              this.bridge.item = new WriterFieldID.CandidateVisitorConfig(((Proccesor) this).FillResolver);
              if (MerchantAuthenticationWatcher.ChangeInfo())
              {
                num2 = 13;
                continue;
              }
              goto case 13;
            case 1:
              this.bridge.m_Interceptor = new WriterFieldID.ClassFieldMessage(((Proccesor) this).deconnectionHandler);
              if (!MerchantAuthenticationWatcher.ExcludeInfo())
              {
                num2 = 6;
                continue;
              }
              goto case 3;
            case 2:
              this.bridge.PushRecord();
              num2 = 14;
              continue;
            case 3:
            case 8:
              this.bridge.m_Descriptor = new GlobalFieldID.WatcherFieldID(this.DisableComparator);
              this.bridge.parser = new GlobalFieldID.AdapterComparator(this.PrepareComparator);
              if (!MerchantAuthenticationWatcher.ExcludeInfo())
              {
                num2 = 9;
                continue;
              }
              goto case 5;
            case 4:
              goto label_6;
            case 5:
            case 7:
              this.bridge.proxy = new WriterFieldID.DecoratorFieldMessage(((Proccesor) this).stopGameHandler);
              if (!MerchantAuthenticationWatcher.ExcludeInfo())
              {
                num2 = 3;
                continue;
              }
              goto label_5;
            case 6:
              this.bridge.m_Indexer = new WriterFieldID.WorkerStrategyConnector(((Proccesor) this).endGameHandler);
              goto case 5;
            case 9:
              goto label_7;
            case 10:
              this.bridge._Model = new WriterFieldID.ErrorStubPolicy(((Proccesor) this).loginHandler);
              num2 = 0;
              continue;
            case 11:
              goto label_5;
            case 12:
              this.bridge = new GlobalFieldID(spec);
              if (true)
              {
                num2 = 4;
                continue;
              }
              goto case 1;
            case 13:
              this.bridge.definition = new GlobalFieldID.RoleComparator(this.CustomizeComparator);
              num2 = 1;
              continue;
            case 14:
              goto label_17;
            default:
              goto label_15;
          }
        }
label_5:
        this.bridge.m_Algo = new GlobalFieldID.BaseFieldID(this.DefineComparator);
        num1 = 2;
        continue;
label_6:
        this.bridge.merchant = new WriterFieldID.StructPrototypeStub(((Proccesor) this).GetResolver);
        num1 = 10;
        continue;
label_7:
        this.bridge._Mapping = new GlobalFieldID.SerializerFieldMessage(this.ResetComparator);
        this.bridge.template = new GlobalFieldID.ObjectComparator(this.FlushComparator);
        num1 = 11;
        continue;
label_15:
        num1 = 5;
      }
label_17:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void RegisterComparator(PoolFieldMessage spec, bool containscaller, bool roleneeded)
    {
      int num1 = 3;
      if (true)
        goto label_3;
label_1:
      Identifier ident;
      ident.ComputeRecord((ItemValues) 8, (object) spec);
      goto label_12;
label_2:
      int num2;
      num1 = num2;
label_3:
      bool flag1;
      bool flag2;
      while (true)
      {
        switch (num1)
        {
          case 0:
            goto label_12;
          case 1:
            this.property.ManageRecord(spec);
            if (true)
            {
              num1 = 2;
              continue;
            }
            goto label_12;
          case 2:
            ident = new Identifier((ItemValues) 5);
            if (!MerchantAuthenticationWatcher.ExcludeInfo())
            {
              num1 = 9;
              continue;
            }
            goto case 6;
          case 3:
            flag1 = roleneeded;
            num1 = 6;
            continue;
          case 4:
          case 9:
            goto label_1;
          case 5:
            this.bridge.SortRecord(ident);
            num1 = 11;
            continue;
          case 6:
            if (!flag1)
              goto case 2;
            else
              goto label_8;
          case 7:
          case 8:
            ident.ComputeRecord((ItemValues) 9, (object) true);
            num1 = 5;
            continue;
          case 10:
            if (flag2)
            {
              num1 = 8;
              continue;
            }
            goto case 5;
          case 11:
            goto label_15;
          default:
            goto label_4;
        }
      }
label_15:
      return;
label_4:
      num2 = 0;
      goto label_2;
label_8:
      num2 = 1;
      goto label_2;
label_12:
      flag2 = containscaller;
      num2 = 10;
      goto label_2;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void ChangeComparator()
    {
      int num = 4;
      if (true)
        goto label_4;
label_1:
      Identifier ident = new Identifier((ItemValues) 4);
      if (true)
      {
        num = 3;
        goto label_4;
      }
label_2:
      this.bridge.FillRecord();
      if (true)
      {
        num = 5;
        goto label_4;
      }
label_3:
      this.bridge.SortRecord(ident);
      goto label_2;
label_4:
      while (true)
      {
        switch (num)
        {
          case 0:
          case 4:
            goto label_1;
          case 1:
          case 3:
            goto label_3;
          case 2:
            goto label_2;
          case 5:
            goto label_7;
          default:
            num = 2;
            continue;
        }
      }
label_7:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    protected void FlushComparator(WriterFieldID key, Identifier pol)
    {
      try
      {
        PoolFieldMessage init = (PoolFieldMessage) pol.DeleteRecord((ItemValues) 8);
        int num1 = 4;
        while (true)
        {
          int num2 = num1;
          bool flag;
          while (true)
          {
            switch (num2)
            {
              case 0:
              case 1:
                flag = this.m_Observer.isOpened();
                goto case 2;
              case 2:
                if (flag)
                {
                  if (true)
                  {
                    num2 = 5;
                    continue;
                  }
                  goto label_10;
                }
                else
                  goto label_13;
              case 3:
              case 5:
                goto label_7;
              case 4:
                goto label_2;
              case 6:
                goto label_10;
              default:
                goto label_6;
            }
          }
label_2:
          string token = (string) pol.DeleteRecord((ItemValues) 23);
          num1 = 0;
          continue;
label_6:
          num1 = 2;
          continue;
label_7:
          this.m_Observer.receiveMsgHandler(init, token);
          num1 = 6;
        }
label_13:
        return;
label_10:;
      }
      catch (Exception ex)
      {
        this.log((BehaviorAccumulateValues) 2, RoleValueFilter.RestartVisitor(2146) + ex.Message);
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    protected void DisableComparator(WriterFieldID spec, Identifier pol)
    {
      try
      {
        List<PoolFieldMessage> task = (List<PoolFieldMessage>) pol.DeleteRecord((ItemValues) 17);
        int num1 = 5;
        while (true)
        {
          int num2 = num1;
          while (true)
          {
            switch (num2)
            {
              case 0:
              case 1:
                goto label_4;
              case 2:
              case 3:
                goto label_2;
              case 4:
                goto label_10;
              case 5:
                goto label_9;
              case 6:
                goto label_11;
              default:
                int num3 = 3;
                num2 = MerchantAuthenticationWatcher.ExcludeInfo() ? num3 : num3;
                continue;
            }
          }
label_2:
          bool flag;
          if (flag)
          {
            num1 = 4;
            continue;
          }
          break;
label_4:
          flag = this.m_Observer.isOpened();
          goto label_2;
label_9:
          task.Remove(spec.ReadRecord());
          num1 = 0;
          continue;
label_10:
          this.m_Observer.userListHandler(task);
          num1 = 6;
        }
        return;
label_11:;
      }
      catch (Exception ex)
      {
        this.log((BehaviorAccumulateValues) 2, RoleValueFilter.RestartVisitor(2202) + ex.Message);
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    protected void PrepareComparator(WriterFieldID reference)
    {
      int num1 = 1;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 1:
              goto label_1;
            case 2:
            case 4:
              goto label_7;
            case 3:
              goto label_2;
            case 5:
              goto label_8;
            default:
              num2 = 4;
              continue;
          }
        }
label_1:
        bool flag = this.m_Observer.isOpened();
        num1 = 3;
        continue;
label_2:
        if (!flag)
          break;
label_7:
        this.m_Observer.clearHandler();
        num1 = 5;
      }
      return;
label_8:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    protected void ResetComparator(WriterFieldID spec, Identifier b)
    {
      try
      {
        PoolFieldMessage setup = (PoolFieldMessage) b.DeleteRecord((ItemValues) 8);
        int num1 = 2;
        while (true)
        {
          int num2 = num1;
          bool flag;
          bool createpred;
          while (true)
          {
            switch (num2)
            {
              case 0:
              case 2:
                goto label_4;
              case 1:
                goto label_5;
              case 3:
                this.m_Observer.startGameHandler(setup, createpred);
                if (MerchantAuthenticationWatcher.ChangeInfo())
                {
                  num2 = 8;
                  continue;
                }
                goto label_13;
              case 4:
              case 5:
                if (flag)
                {
                  if (MerchantAuthenticationWatcher.ChangeInfo())
                  {
                    num2 = 3;
                    continue;
                  }
                  goto label_4;
                }
                else
                  goto label_11;
              case 6:
                flag = this.m_Observer.isOpened();
                int num3 = 5;
                num2 = MerchantAuthenticationWatcher.ExcludeInfo() ? num3 : num3;
                continue;
              case 7:
                spec.InitRecord().Clear();
                goto case 6;
              case 8:
                goto label_13;
              default:
                goto label_9;
            }
          }
label_4:
          createpred = (bool) b.DeleteRecord((ItemValues) 16);
          num1 = 1;
          continue;
label_5:
          spec.RemoveRecord((PoolFieldMessage) null);
          num1 = 7;
          continue;
label_9:
          num1 = 6;
        }
label_11:
        return;
label_13:;
      }
      catch (Exception ex)
      {
        this.log((BehaviorAccumulateValues) 2, RoleValueFilter.RestartVisitor(2254) + ex.Message);
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    protected override void endGameHandler(WriterFieldID setup, Identifier cust)
    {
      try
      {
        PoolFieldMessage cust1 = (PoolFieldMessage) cust.DeleteRecord((ItemValues) 8);
        int num1 = 9;
        if (!MerchantAuthenticationWatcher.ExcludeInfo())
          goto label_17;
label_2:
        bool flag1;
        bool flag2;
        if (flag1)
        {
          num1 = 8;
          goto label_17;
        }
        else
        {
          flag2 = cust.DeleteRecord((ItemValues) 19) != null;
          if (MerchantAuthenticationWatcher.ChangeInfo())
          {
            num1 = 1;
            goto label_17;
          }
        }
label_5:
        SqlParameterType serv;
        if (flag2)
        {
          setup.ReadRecord().MapRecord();
          serv = (SqlParameterType) 2;
          int num2 = 13;
          num1 = MerchantAuthenticationWatcher.ExcludeInfo() ? num2 : num2;
          goto label_17;
        }
label_14:
        setup.ReadRecord().RunRecord();
        int num3 = 10;
label_16:
        num1 = num3;
label_17:
        bool flag3;
        bool setconfig2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 9:
              setconfig2 = (bool) cust.DeleteRecord((ItemValues) 16);
              num1 = 12;
              continue;
            case 1:
            case 7:
              goto label_5;
            case 2:
              goto label_20;
            case 3:
              if (flag3)
              {
                if (true)
                {
                  num1 = 2;
                  continue;
                }
                goto case 0;
              }
              else
                goto label_7;
            case 4:
            case 13:
              goto label_14;
            case 5:
              goto label_2;
            case 6:
              serv = (SqlParameterType) 1;
              flag1 = cust.DeleteRecord((ItemValues) 18) != null;
              if (true)
              {
                num1 = 5;
                continue;
              }
              goto case 8;
            case 8:
              setup.ReadRecord().SelectRecord();
              if (!MerchantAuthenticationWatcher.ExcludeInfo())
              {
                num1 = 11;
                continue;
              }
              goto case 3;
            case 10:
              goto label_8;
            case 11:
              goto label_15;
            case 12:
              goto label_19;
            case 14:
              goto label_21;
            default:
              goto label_18;
          }
        }
label_8:
        flag3 = this.m_Observer.isOpened();
        num3 = 3;
        goto label_16;
label_7:
        return;
label_15:
        serv = (SqlParameterType) 0;
        goto label_14;
label_18:
        num3 = 4;
        goto label_16;
label_19:
        object obj = cust.DeleteRecord((ItemValues) 25);
        num3 = 6;
        goto label_16;
label_20:
        this.m_Observer.endGameHandler(setup.ReadRecord(), cust1, serv, setconfig2, obj);
        num3 = 14;
        goto label_16;
label_21:;
      }
      catch (Exception ex)
      {
        this.log((BehaviorAccumulateValues) 2, RoleValueFilter.RestartVisitor(2306) + ex.Message);
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    protected void DefineComparator(WriterFieldID v, Identifier ivk)
    {
      try
      {
        object obj = ivk.DeleteRecord((ItemValues) 25);
        int num1 = 0;
        while (true)
        {
          int num2 = num1;
          bool flag;
          while (true)
          {
            switch (num2)
            {
              case 0:
                flag = this.m_Observer.isOpened();
                num2 = 4;
                continue;
              case 1:
              case 4:
                goto label_3;
              case 2:
              case 3:
                goto label_8;
              case 5:
                goto label_9;
              default:
                goto label_7;
            }
          }
label_3:
          if (!flag)
            break;
          goto label_8;
label_7:
          num1 = 3;
          continue;
label_8:
          this.m_Observer.gameHandler(obj);
          num1 = 5;
        }
        return;
label_9:;
      }
      catch (Exception ex)
      {
        this.log((BehaviorAccumulateValues) 2, RoleValueFilter.RestartVisitor(2354) + ex.Message);
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    protected override void stopGameHandler(WriterFieldID init, Identifier result)
    {
      try
      {
        PoolFieldMessage i = (PoolFieldMessage) result.DeleteRecord((ItemValues) 8);
        int num1 = 4;
        while (true)
        {
          bool flag;
          int num2;
          switch (num1)
          {
            case 0:
            case 4:
              flag = this.m_Observer.isOpened();
              num1 = 1;
              continue;
            case 1:
              if (!flag)
                goto label_3;
              else
                goto case 2;
            case 2:
            case 3:
              this.m_Observer.stopGameHandler(i);
              num2 = 5;
              break;
            case 5:
              goto label_9;
            default:
              num2 = 3;
              break;
          }
          num1 = num2;
        }
label_3:
        return;
label_9:;
      }
      catch (Exception ex)
      {
        this.log((BehaviorAccumulateValues) 2, RoleValueFilter.RestartVisitor(2400) + ex.Message);
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    protected override void loginHandler(WriterFieldID i, Identifier visitor)
    {
      try
      {
        bool flag1 = (bool) visitor.DeleteRecord((ItemValues) 7);
        int num1 = 9;
        if (MerchantAuthenticationWatcher.ChangeInfo())
          goto label_14;
label_2:
        bool flag2;
        int num2;
        if (flag2)
        {
          num2 = 2;
          goto label_13;
        }
label_9:
        this.log((BehaviorAccumulateValues) 2, (string) visitor.DeleteRecord((ItemValues) 0));
        if (true)
        {
          num1 = 11;
          goto label_14;
        }
label_10:
        if (flag1)
        {
          num2 = 5;
        }
        else
        {
          flag2 = this.m_Observer.isOpened();
          num1 = 10;
          goto label_14;
        }
label_13:
        num1 = num2;
label_14:
        bool flag3;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 4:
              goto label_12;
            case 1:
            case 5:
              goto label_6;
            case 2:
              this.m_Observer.showRegisterOption();
              if (MerchantAuthenticationWatcher.ChangeInfo())
              {
                num1 = 7;
                continue;
              }
              goto label_19;
            case 3:
              if (flag3)
              {
                num1 = 0;
                continue;
              }
              goto label_21;
            case 6:
              goto label_16;
            case 7:
              goto label_8;
            case 8:
              flag3 = this.m_Observer.isOpened();
              num1 = 3;
              continue;
            case 9:
              goto label_10;
            case 10:
              goto label_2;
            case 11:
              goto label_19;
            default:
              if (MerchantAuthenticationWatcher.ChangeInfo())
              {
                num1 = 6;
                continue;
              }
              goto label_16;
          }
        }
label_21:
        return;
label_6:
        i.CountRecord((PoolFieldMessage) visitor.DeleteRecord((ItemValues) 8));
        num2 = 8;
        goto label_13;
label_8:
        this.m_Observer.connectionHandler(i.ReadRecord());
        goto label_9;
label_12:
        this.m_Observer.loginHandler(i.ReadRecord());
label_16:
        return;
label_19:;
      }
      catch (Exception ex)
      {
        this.log((BehaviorAccumulateValues) 2, RoleValueFilter.RestartVisitor(2450) + ex.Message);
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    protected override void FillResolver(WriterFieldID task, Identifier cont)
    {
      try
      {
        PoolFieldMessage poolFieldMessage = (PoolFieldMessage) cont.DeleteRecord((ItemValues) 8);
        int num1 = 15;
        while (true)
        {
          int num2 = num1;
          bool flag1;
          bool flag2;
          bool flag3;
          bool flag4;
          while (true)
          {
            switch (num2)
            {
              case 0:
                goto label_19;
              case 1:
                goto label_24;
              case 2:
                goto label_28;
              case 3:
                if (this.m_Observer.isOpened())
                {
                  if (true)
                  {
                    num2 = 1;
                    continue;
                  }
                  goto label_24;
                }
                else
                  goto label_30;
              case 4:
              case 8:
                goto label_16;
              case 5:
              case 9:
                if (flag4)
                {
                  if (true)
                  {
                    num2 = 14;
                    continue;
                  }
                  goto label_11;
                }
                else
                  goto label_25;
              case 6:
                goto label_12;
              case 7:
                if (flag2)
                {
                  if (true)
                  {
                    num2 = 13;
                    continue;
                  }
                  goto case 14;
                }
                else
                  goto label_26;
              case 10:
                if (!flag3)
                {
                  task.InitRecord().Remove(poolFieldMessage);
                  flag1 = this.m_Observer.isOpened();
                  num2 = 11;
                  continue;
                }
                if (true)
                {
                  num2 = 4;
                  continue;
                }
                goto label_16;
              case 11:
                goto label_17;
              case 12:
                this.m_Observer.abortHandler(poolFieldMessage, false);
                if (MerchantAuthenticationWatcher.ChangeInfo())
                {
                  num2 = 16;
                  continue;
                }
                goto case 3;
              case 13:
                goto label_11;
              case 14:
                flag3 = poolFieldMessage.Equals((object) task.RateRecord());
                goto case 10;
              case 15:
                flag2 = cont.DeleteRecord((ItemValues) 10) != null;
                num2 = 7;
                continue;
              case 16:
                goto label_27;
              default:
                goto label_8;
            }
          }
label_8:
          num1 = 10;
          continue;
label_11:
          task.InitRecord().Add(poolFieldMessage);
          num1 = 3;
          continue;
label_12:
          this.m_Observer.abortHandler(poolFieldMessage, true);
          num1 = 2;
          continue;
label_16:
          task.RemoveRecord((PoolFieldMessage) null);
          num1 = 0;
          continue;
label_17:
          if (flag1)
          {
            num1 = 12;
            continue;
          }
          goto label_27;
label_19:
          if (this.m_Observer.isOpened())
          {
            num1 = 6;
            continue;
          }
          goto label_28;
label_26:
          flag4 = cont.DeleteRecord((ItemValues) 12) != null;
          num1 = 9;
        }
label_25:
        return;
label_30:
        return;
label_24:
        this.m_Observer.requestHandler(poolFieldMessage);
        return;
label_27:
label_28:;
      }
      catch (Exception ex)
      {
        this.log((BehaviorAccumulateValues) 2, RoleValueFilter.RestartVisitor(2480) + ex.Message);
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    protected void CustomizeComparator(WriterFieldID var1, Identifier cfg)
    {
      try
      {
        PoolFieldMessage poolFieldMessage = (PoolFieldMessage) cfg.DeleteRecord((ItemValues) 8);
        int num1 = 5;
        if (!MerchantAuthenticationWatcher.ExcludeInfo())
          goto label_4;
label_2:
        bool flag = this.m_Observer.isOpened();
        goto label_8;
label_3:
        int num2;
        num1 = num2;
label_4:
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 2:
              goto label_8;
            case 1:
            case 3:
              goto label_2;
            case 4:
              this.m_Observer.connectionHandler(poolFieldMessage);
              if (MerchantAuthenticationWatcher.ChangeInfo())
              {
                num1 = 6;
                continue;
              }
              goto label_8;
            case 5:
              goto label_6;
            case 6:
              goto label_10;
            default:
              goto label_5;
          }
        }
label_5:
        num2 = 0;
        goto label_3;
label_6:
        var1.CountRecord(poolFieldMessage);
        num2 = 3;
        goto label_3;
label_10:
        return;
label_8:
        if (!flag)
          return;
        num2 = 4;
        goto label_3;
      }
      catch (Exception ex)
      {
        this.log((BehaviorAccumulateValues) 2, RoleValueFilter.RestartVisitor(2538) + ex.Message);
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    protected override void deconnectionHandler(WriterFieldID task)
    {
      int num1 = 1;
      while (true)
      {
        int num2 = num1;
        bool flag;
        while (true)
        {
          switch (num2)
          {
            case 0:
              if (flag)
              {
                num2 = 5;
                continue;
              }
              goto label_10;
            case 1:
              goto label_6;
            case 2:
            case 5:
              goto label_1;
            case 3:
            case 4:
              goto label_5;
            case 6:
              goto label_9;
            default:
              goto label_4;
          }
        }
label_1:
        this.m_Observer.deconnectionHandler();
        goto label_5;
label_4:
        num1 = 4;
        continue;
label_5:
        this.log((BehaviorAccumulateValues) 1, RoleValueFilter.RestartVisitor(2592));
        num1 = 6;
        continue;
label_6:
        flag = this.m_Observer.isOpened();
        num1 = 0;
      }
label_10:
      return;
label_9:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    protected override void GetResolver(
      KeyValuePair<BehaviorAccumulateValues, string> first)
    {
      if (!this.m_Observer.isOpened())
        return;
      this.m_Observer.printCSMessage(first);
    }

    internal static bool ChangeInfo() => true;

    internal static bool ExcludeInfo() => false;
  }
}
