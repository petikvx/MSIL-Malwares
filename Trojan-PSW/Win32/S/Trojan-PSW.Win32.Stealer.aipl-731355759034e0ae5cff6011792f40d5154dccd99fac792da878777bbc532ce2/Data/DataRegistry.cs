// Decompiled with JetBrains decompiler
// Type: Data.DataRegistry
// Assembly: AnsiCharMarsha, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 45449883-CB33-464D-BFFF-85C1D8F95247
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan-PSW.Win32.Stealer.aipl-731355759034e0ae5cff6011792f40d5154dccd99fac792da878777bbc532ce2.exe

using Core.Configuration;
using Core.Infrastructure;
using Repository;
using StructureMap.Configuration.DSL;
using System;
using System.Linq.Expressions;

namespace Data
{
  public class DataRegistry : Registry
  {
    public DataRegistry()
    {
      this.For<IShowRepository>().HybridHttpOrThreadLocalScoped().Use<ShowRepository>().Ctor<IDatabaseFactory>("factory").IsTheDefault();
      this.SelectConstructor<ShowRepository>((Expression<Func<ShowRepository>>) (() => new ShowRepository(default (IDatabaseFactory))));
      this.For<ISetRepository>().HybridHttpOrThreadLocalScoped().Use<SetRepository>().Ctor<IDatabaseFactory>("factory").IsTheDefault();
      this.SelectConstructor<SetRepository>((Expression<Func<SetRepository>>) (() => new SetRepository(default (IDatabaseFactory))));
      this.For<ISetSongRepository>().HybridHttpOrThreadLocalScoped().Use<SetSongRepository>().Ctor<IDatabaseFactory>("factory").IsTheDefault();
      this.SelectConstructor<SetSongRepository>((Expression<Func<SetSongRepository>>) (() => new SetSongRepository(default (IDatabaseFactory))));
      this.For<IUnitOfWork>().HybridHttpOrThreadLocalScoped().Use<Repository.UnitOfWork>();
      this.SelectConstructor<Repository.UnitOfWork>((Expression<Func<Repository.UnitOfWork>>) (() => new Repository.UnitOfWork(default (IDatabaseFactory))));
      this.For<IDatabase>().HybridHttpOrThreadLocalScoped().Use<Database>().Ctor<IConnectionString>("connectionString").IsTheDefault();
      this.SelectConstructor<Database>((Expression<Func<Database>>) (() => new Database(default (IConnectionString))));
      this.For<IDatabaseFactory>().HybridHttpOrThreadLocalScoped().Use<DatabaseFactory>();
    }
  }
}
