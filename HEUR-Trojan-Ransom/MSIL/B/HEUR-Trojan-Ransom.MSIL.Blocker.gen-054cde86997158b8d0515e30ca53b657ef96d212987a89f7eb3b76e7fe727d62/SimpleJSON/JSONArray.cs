// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONArray
// Assembly: InternalSi, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: F44F14A9-876B-4F73-A898-F3E4E8A5FAFC
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-054cde86997158b8d0515e30ca53b657ef96d212987a89f7eb3b76e7fe727d62.exe

using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONArray : JSONNode, IEnumerable
  {
    private List<JSONNode> m_List = new List<JSONNode>();

    public override JSONNode this[int aIndex]
    {
      get
      {
        if (aIndex < 0)
          goto label_4;
label_1:
        int num1 = -1155831611;
label_2:
        bool flag;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1362808387)) % 7U)
          {
            case 0:
              num1 = (int) num2 * -1320973662 ^ -1788805468;
              continue;
            case 1:
              jsonNode = this.m_List[aIndex];
              num1 = -438664868;
              continue;
            case 3:
              goto label_3;
            case 4:
              int num3 = !flag ? -451850140 : (num3 = -1523295714);
              num1 = num3 ^ (int) num2 * -1209209299;
              continue;
            case 5:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * 2049955699 ^ -593138605;
              continue;
            case 6:
              goto label_1;
            default:
              goto label_10;
          }
        }
label_3:
        int num4 = aIndex >= this.m_List.Count ? 1 : 0;
        goto label_5;
label_10:
        return jsonNode;
label_4:
        num4 = 1;
label_5:
        flag = num4 != 0;
        num1 = -1222341052;
        goto label_2;
      }
      set
      {
label_1:
        int num1 = -1508762978;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ -1826541909)) % 8U)
          {
            case 0:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            case 1:
              int num4 = !flag ? 886676915 : (num4 = 1365492624);
              num1 = num4 ^ (int) num2 * 190220951;
              continue;
            case 2:
              goto label_1;
            case 3:
              goto label_3;
            case 4:
              this.m_List.Add(value);
              num1 = (int) num2 * -1078169645 ^ -1633151151;
              continue;
            case 5:
              if (aIndex < 0)
              {
                num3 = 1;
                break;
              }
              num1 = (int) num2 * 1056111278 ^ -873679331;
              continue;
            case 6:
              num1 = (int) num2 * 1751584205 ^ -1823784930;
              continue;
            case 7:
              this.m_List[aIndex] = value;
              num1 = -1260049456;
              continue;
            default:
              goto label_13;
          }
          flag = num3 != 0;
          num1 = -2121604350;
        }
label_3:
        return;
label_13:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
label_1:
        int num1 = -1297178399;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1581522216)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -1324950048 ^ -684992348;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set => this.m_List.Add(value);
    }

    public override int Count => this.m_List.Count;

    public override void Add(string aKey, JSONNode aItem)
    {
      this.m_List.Add(aItem);
label_1:
      int num1 = 720716025;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 70601480)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * -1777217448 ^ 429167163;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public override JSONNode Remove(int aIndex)
    {
      if (aIndex < 0)
        goto label_6;
label_1:
      int num1 = -2048040316;
label_2:
      JSONNode jsonNode1;
      JSONNode jsonNode2;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1522713920)) % 8U)
        {
          case 0:
            jsonNode2 = (JSONNode) null;
            num1 = (int) num2 * 1895168101 ^ -1279891279;
            continue;
          case 1:
            num1 = (int) num2 * -231853546 ^ -1974066307;
            continue;
          case 2:
            jsonNode2 = jsonNode1;
            num1 = (int) num2 * -27916906 ^ -667027785;
            continue;
          case 4:
            goto label_5;
          case 5:
            goto label_1;
          case 6:
            jsonNode1 = this.m_List[aIndex];
            this.m_List.RemoveAt(aIndex);
            num1 = -477587374;
            continue;
          case 7:
            int num3 = flag ? -1610827198 : (num3 = -1507633236);
            num1 = num3 ^ (int) num2 * 37433734;
            continue;
          default:
            goto label_11;
        }
      }
label_5:
      int num4 = aIndex >= this.m_List.Count ? 1 : 0;
      goto label_7;
label_11:
      return jsonNode2;
label_6:
      num4 = 1;
label_7:
      flag = num4 != 0;
      num1 = -1843541105;
      goto label_2;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = -1356590816;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1766216907)) % 3U)
        {
          case 1:
            this.m_List.Remove(aNode);
            jsonNode = aNode;
            num1 = (int) num2 * -900910393 ^ -883301106;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONArray.\u003Cget_Childs\u003Ed__13 childs = new JSONArray.\u003Cget_Childs\u003Ed__13(-2);
label_1:
        int num1 = 117754010;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 427541945)) % 3U)
          {
            case 1:
              childs.\u003C\u003E4__this = this;
              num1 = (int) num2 * 849544545 ^ 1434094174;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return (IEnumerable<JSONNode>) childs;
      }
    }

    public IEnumerator GetEnumerator() => (IEnumerator) new JSONArray.\u003CGetEnumerator\u003Ed__14(0)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString()
    {
label_1:
      int num1 = 603006366;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1188010108)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -2077790090 ^ 1220805709;
            continue;
          case 2:
            str1 = "[ ";
            num1 = (int) num2 * 1853459789 ^ -915573337;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator();
      try
      {
label_13:
        int num3 = enumerator.MoveNext() ? 1809054459 : (num3 = 2021465265);
        JSONNode current;
        bool flag;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1188010108)) % 9U)
          {
            case 0:
              int num5 = flag ? 1966698362 : (num5 = 124454557);
              num3 = num5 ^ (int) num4 * 588219319;
              continue;
            case 1:
              flag = JSONArray.\u206F‫⁪‎⁯‍⁪‬⁪⁬⁯⁭‪‬‫‫‬⁬⁪‍⁮‪‪‭‍‮‫⁮‪‍‮‌⁭⁫‫‎‍‏‌⁭‮(str1) > 2;
              num3 = (int) num4 * -61592873 ^ 207142095;
              continue;
            case 2:
              num3 = (int) num4 * -1233997541 ^ 1569398055;
              continue;
            case 3:
              current = enumerator.Current;
              num3 = 541840136;
              continue;
            case 4:
              goto label_13;
            case 5:
              str1 = JSONArray.\u200C⁭⁭⁭‪‎‍⁫⁭​⁮​‫‮⁬‪‌‍⁫‭⁭⁫‮‍⁪‮‭​‌⁭⁮⁭‏‏‏⁮‌​‍‪‮(str1, ", ");
              num3 = (int) num4 * 1546677042 ^ 503762131;
              continue;
            case 6:
              str1 = JSONArray.\u200C⁭⁭⁭‪‎‍⁫⁭​⁮​‫‮⁬‪‌‍⁫‭⁭⁫‮‍⁪‮‭​‌⁭⁮⁭‏‏‏⁮‌​‍‪‮(str1, JSONArray.\u206C‌⁭⁫‭‪⁫⁮‎​​‍‏⁮‮⁮⁭⁮‎⁮⁯‬‪‍‍‏‮⁪‍‌⁮⁪‮‎‫⁮‫​⁬⁭‮((object) current));
              num3 = 1410507076;
              continue;
            case 8:
              num3 = 1809054459;
              continue;
            default:
              goto label_21;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_17:
        int num6 = 1754192945;
        while (true)
        {
          uint num7;
          switch ((num7 = (uint) (num6 ^ 1188010108)) % 3U)
          {
            case 1:
              num6 = (int) num7 * 1337134740 ^ -214837663;
              continue;
            case 2:
              goto label_17;
            default:
              goto label_20;
          }
        }
label_20:;
      }
label_21:
      string str2 = JSONArray.\u200C⁭⁭⁭‪‎‍⁫⁭​⁮​‫‮⁬‪‌‍⁫‭⁭⁫‮‍⁪‮‭​‌⁭⁮⁭‏‏‏⁮‌​‍‪‮(str1, " ]");
label_22:
      int num8 = 1245105577;
      string str3;
      while (true)
      {
        uint num9;
        switch ((num9 = (uint) (num8 ^ 1188010108)) % 4U)
        {
          case 1:
            str3 = str2;
            num8 = (int) num9 * 1632159359 ^ 852233960;
            continue;
          case 2:
            goto label_22;
          case 3:
            num8 = (int) num9 * -1148070674 ^ 145648506;
            continue;
          default:
            goto label_26;
        }
      }
label_26:
      return str3;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 1568992032;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 998982524)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            str = "[ ";
            num1 = (int) num2 * -762026780 ^ -525723336;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator();
      try
      {
label_11:
        int num3 = enumerator.MoveNext() ? 696506245 : (num3 = 2016820059);
        JSONNode current;
        bool flag;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 998982524)) % 9U)
          {
            case 0:
              str = JSONArray.\u202A⁯⁫‭‎‬‌‎‎​‭​⁮‎‭‍‬⁭‎‮⁭‭⁬⁫⁯‫‎⁫‏‪‮‏⁪⁭‍‏​​‬⁮‮(str, "\n", aPrefix, "   ");
              num3 = 966963776;
              continue;
            case 2:
              int num5 = flag ? 1933952993 : (num5 = 614362407);
              num3 = num5 ^ (int) num4 * -675781866;
              continue;
            case 3:
              str = JSONArray.\u200C⁭⁭⁭‪‎‍⁫⁭​⁮​‫‮⁬‪‌‍⁫‭⁭⁫‮‍⁪‮‭​‌⁭⁮⁭‏‏‏⁮‌​‍‪‮(str, ", ");
              num3 = (int) num4 * 50514729 ^ 2099356370;
              continue;
            case 4:
              goto label_11;
            case 5:
              num3 = (int) num4 * 1420491096 ^ -196843098;
              continue;
            case 6:
              current = enumerator.Current;
              flag = JSONArray.\u206F‫⁪‎⁯‍⁪‬⁪⁬⁯⁭‪‬‫‫‬⁬⁪‍⁮‪‪‭‍‮‫⁮‪‍‮‌⁭⁫‫‎‍‏‌⁭‮(str) > 3;
              num3 = 360141383;
              continue;
            case 7:
              num3 = 696506245;
              continue;
            case 8:
              str = JSONArray.\u200C⁭⁭⁭‪‎‍⁫⁭​⁮​‫‮⁬‪‌‍⁫‭⁭⁫‮‍⁪‮‭​‌⁭⁮⁭‏‏‏⁮‌​‍‪‮(str, current.ToString(JSONArray.\u200C⁭⁭⁭‪‎‍⁫⁭​⁮​‫‮⁬‪‌‍⁫‭⁭⁫‮‍⁪‮‭​‌⁭⁮⁭‏‏‏⁮‌​‍‪‮(aPrefix, "   ")));
              num3 = (int) num4 * -739909741 ^ 908631666;
              continue;
            default:
              goto label_20;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_16:
        int num6 = 1262632981;
        while (true)
        {
          uint num7;
          switch ((num7 = (uint) (num6 ^ 998982524)) % 3U)
          {
            case 1:
              num6 = (int) num7 * 1096190504 ^ -52387356;
              continue;
            case 2:
              goto label_16;
            default:
              goto label_19;
          }
        }
label_19:;
      }
label_20:
      return JSONArray.\u202A⁯⁫‭‎‬‌‎‎​‭​⁮‎‭‍‬⁭‎‮⁭‭⁬⁫⁯‫‎⁫‏‪‮‏⁪⁭‍‏​​‬⁮‮(str, "\n", aPrefix, "]");
    }

    public override void Serialize(BinaryWriter aWriter)
    {
      JSONArray.\u200D‬⁭‎‬‫⁮‌‭‪⁪‍‍‫​⁬‎‎​⁫‏​⁬⁭‏⁬‍⁯⁪⁫‭‫‌‮⁪‌⁭‌⁫‏‮(aWriter, (byte) 1);
label_1:
      int num1 = 1810094709;
      int index;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 782407881)) % 10U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -862670818 ^ 254843482;
            continue;
          case 2:
            ++index;
            num1 = (int) num2 * 2032597192 ^ -574173576;
            continue;
          case 3:
            int num3;
            num1 = num3 = index >= this.m_List.Count ? 380425620 : (num3 = 831869633);
            continue;
          case 4:
            num1 = (int) num2 * -1476367440 ^ -273029377;
            continue;
          case 5:
            goto label_3;
          case 6:
            num1 = 132806776;
            continue;
          case 7:
            index = 0;
            num1 = (int) num2 * -1014190823 ^ 249750097;
            continue;
          case 8:
            JSONArray.\u200C⁪‬‌‮‪⁮‪‌‬​‏⁮⁯‫‌‍⁫‍⁮‪‫‌⁪⁫‭‪‎⁬​‍‮⁭‎‭‎⁯‏⁫‏‮(aWriter, this.m_List.Count);
            num1 = (int) num2 * 1364651246 ^ 2000413734;
            continue;
          case 9:
            this.m_List[index].Serialize(aWriter);
            num1 = (int) num2 * -592025266 ^ 983276485;
            continue;
          default:
            goto label_12;
        }
      }
label_3:
      return;
label_12:;
    }

    static int \u206F‫⁪‎⁯‍⁪‬⁪⁬⁯⁭‪‬‫‫‬⁬⁪‍⁮‪‪‭‍‮‫⁮‪‍‮‌⁭⁫‫‎‍‏‌⁭‮([In] string obj0) => obj0.Length;

    static string \u200C⁭⁭⁭‪‎‍⁫⁭​⁮​‫‮⁬‪‌‍⁫‭⁭⁫‮‍⁪‮‭​‌⁭⁮⁭‏‏‏⁮‌​‍‪‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u206C‌⁭⁫‭‪⁫⁮‎​​‍‏⁮‮⁮⁭⁮‎⁮⁯‬‪‍‍‏‮⁪‍‌⁮⁪‮‎‫⁮‫​⁬⁭‮([In] object obj0) => obj0.ToString();

    static string \u202A⁯⁫‭‎‬‌‎‎​‭​⁮‎‭‍‬⁭‎‮⁭‭⁬⁫⁯‫‎⁫‏‪‮‏⁪⁭‍‏​​‬⁮‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u200D‬⁭‎‬‫⁮‌‭‪⁪‍‍‫​⁬‎‎​⁫‏​⁬⁭‏⁬‍⁯⁪⁫‭‫‌‮⁪‌⁭‌⁫‏‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u200C⁪‬‌‮‪⁮‪‌‬​‏⁮⁯‫‌‍⁫‍⁮‪‫‌⁪⁫‭‪‎⁬​‍‮⁭‎‭‎⁯‏⁫‏‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);
  }
}
