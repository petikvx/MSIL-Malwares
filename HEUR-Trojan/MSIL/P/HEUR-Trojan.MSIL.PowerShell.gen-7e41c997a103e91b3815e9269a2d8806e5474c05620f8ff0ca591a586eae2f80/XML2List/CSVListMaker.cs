// Decompiled with JetBrains decompiler
// Type: XML2List.CSVListMaker
// Assembly: LeaseMana, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 529A6AA6-AEB5-47F3-B86B-C5E3C5F9FA62
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan.MSIL.PowerShell.gen-7e41c997a103e91b3815e9269a2d8806e5474c05620f8ff0ca591a586eae2f80.exe

using System.Collections.Generic;
using System.IO;
using System.Xml.Linq;

namespace XML2List
{
  public class CSVListMaker : IListMaking
  {
    private XDocument xDocument;

    public CSVListMaker(XDocument xDoc) => this.xDocument = xDoc;

    public void MakeList(TextWriter streamOut, string[] selectedPaths)
    {
      CommandLists paths = new PathListParser().ParsePaths(selectedPaths);
      IEnumerable<XElement> listofXElements = this.xDocument.Elements();
      for (int index = 1; index < paths.GroupSelectCommands.Count; ++index)
        listofXElements = paths.GroupSelectCommands[index].SelectItems(listofXElements);
      foreach (IItemSelect itemSelectCommand in (IEnumerable<IItemSelect>) paths.ItemSelectCommands)
        streamOut.Write(itemSelectCommand.Name + ";");
      streamOut.WriteLine();
      foreach (XElement xelement1 in listofXElements)
      {
        foreach (IItemSelect itemSelectCommand in (IEnumerable<IItemSelect>) paths.ItemSelectCommands)
        {
          XElement xelement2 = itemSelectCommand.SelectItem(xelement1);
          if (xelement2 != null)
            streamOut.Write(xelement2.Value + ";");
          else
            streamOut.Write(";");
        }
        streamOut.WriteLine();
      }
    }
  }
}
