// Decompiled with JetBrains decompiler
// Type: ‪‭⁭‫​⁪⁬‬‫‎⁬⁪‍‪⁪⁮‍⁭‮‏‫⁬‭⁪‍‌‎⁫⁫‏‌‬⁯​⁮​⁪‮‭⁭‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using System;
using System.IO;
using System.Text;

public class \u202A‭⁭‫​⁪⁬‬‫‎⁬⁪‍‪⁪⁮‍⁭‮‏‫⁬‭⁪‍‌‎⁫⁫‏‌‬⁯​⁮​⁪‮‭⁭‮ : 
  \u200D‬⁪‌‍‫‪‎‭⁭⁫‏‎‬‫‌⁯‍‎⁬‎‮‭​⁯‪⁭‌‬⁬⁭‬‍‌⁫⁪‪⁫‍‬‮,
  \u202C‪⁭⁫⁬‏‬‪​⁭‪⁯‍‬⁯⁭‬‎⁯‮​​⁯⁫‮‫‍⁫‍​‭⁪‪⁭‭‌⁪‭‫⁬‮
{
  private static readonly int \u206C‮⁮‫‍‮‮⁫⁮​‎‌‪‭‮‫​‪‫‍⁪⁪⁯⁯‮‫⁭‬‫⁬⁯⁮‪‌⁯⁯‪‪‪‎‮ = 4;
  private static readonly int \u202A‭‍⁮‎⁭‪‏‮‌‫‫‍‌‪⁭​⁫⁬​⁫‏‬‎‮​⁬‬‍‬‮⁬⁯‍‫‭‫⁫⁫⁯‮ = 8;
  private static readonly int \u206B​‫‮⁪‬‍‭‫‬‍‍‪⁮⁮‭‏⁪‭‫‫⁬⁬⁯‍⁯⁯⁮‏⁮‭‪‮‍‍‍​⁭⁬⁬‮ = 512;
  private static readonly int \u200C⁯⁯‭‎‮‪‌⁪⁭‬‮‭‭⁫‏⁯​⁬‮⁭⁭⁬‎‬‪⁮⁮⁫‌⁫‭‮​⁭‭‍⁬⁪‪‮ = 64;
  private \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ \u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮;
  private int \u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮;
  private bool \u206F⁬⁪‪‪‫‎⁪‍​‭​⁭⁫‍⁪⁮‮⁫‮⁭⁪‌‫‮​⁯‬‬⁪‭‮​​‌‎‬⁬‮‮‮;
  private byte[] \u202E‭‎⁯‌⁪‎⁪⁪⁭‎⁮⁬‪‬⁯⁭​⁮⁭‏‍⁯⁬⁬⁭‍​‍​‍⁪⁫⁬​‮⁯‭⁭‮‮;
  private byte[] \u206C⁬‎⁭⁭⁮⁬‎⁮⁬‮​⁬‫‬‏⁬⁬⁮⁭‪⁪⁮‬⁬‬‪​‌‪⁯​⁯⁮​‍‬‏‎‍‮;
  private byte[] \u202E⁫⁬‏⁪⁭⁪​‬⁬‎‍‌‍‌⁭‌⁮‌‪⁫‮​​⁭⁯‬⁬‌‫⁯‏‍⁮⁬⁪⁯‌⁮‎‮;
  private byte[] \u206D‌⁮‬⁭‫‏⁫‎⁫‮⁭‭‫‫‫⁯⁫‮⁭‬‍‌‏‮‮⁯‏‬‍‍⁫‪​‍‏‪‎​‪‮;
  private byte[] \u206B⁪‏⁬‫‎‏⁯​⁭⁫‌‪‍‫​‎‌‮‍⁯‌⁪​​⁪‮⁫‏‪​⁪‪⁭⁬‪⁫⁭​‭‮;
  private byte[] \u206E‭‍⁮‪⁬​‪‪⁮‎‏‍‌‮‫‎‭‎⁮⁮⁫‭‌‮⁪⁪⁬‫‭⁬‭⁫‍⁬‎⁮‭‪⁯‮;
  private byte[] \u200E‏‬‮‎‬⁪⁫‭‪⁪‬⁭⁪‎‏‍‬⁫‭⁭⁫​‭⁭‌⁬⁯‍⁭⁮‭⁮⁫‫‎‫⁮‮⁫‮;
  private byte[] \u202A‎‍‫⁮‮‏‍‏‫‌‬‪‪‏⁯‭⁯⁮‪‭⁭​⁯‭‮‫‪⁫⁮⁪⁬‫‎‪‎⁮‏‬‪‮;
  private readonly MemoryStream \u200E⁮⁯‫‮‮‏⁯‍⁯⁯‬⁫‎⁪‫‫‬⁮‬‍‮⁪‎‬⁪‍⁮‍‭‏⁬‮‏⁫‫‎‬‎‌‮ = new MemoryStream();
  private readonly MemoryStream \u206E⁬‫⁪⁮‬​⁪⁬⁭‮⁬⁯⁭‎⁪‏‌⁭‌‮‍‎‬⁮⁫‏‎⁭‪‍⁯‮​‏‍⁮​⁬⁫‮ = new MemoryStream();
  private int \u206F⁯⁬‌⁫⁯⁭⁬​​‫⁭​‍‫‍​⁬‌‏​‌‏⁯⁬‬⁫‫‬‭‍‬⁯‮‏⁫‮⁪⁫⁫‮ = 4;

  private void \u202C‬​‬‪‌‎⁪​‎‏​⁪⁪‍⁫⁬‏⁭‍‏⁯⁯‮‎‎⁬⁮‎‎⁯‫‫⁯‫⁪‍⁯‏‌‮(int _param1) => this.\u206F⁯⁬‌⁫⁯⁭⁬​​‫⁭​‍‫‍​⁬‌‏​‌‏⁯⁬‬⁫‫‬‭‍‬⁯‮‏⁫‮⁪⁫⁫‮ = _param1 == 4 || _param1 == 6 || _param1 == 8 ? _param1 : throw new ArgumentException("Nb = 4 is recommended by DSTU7624 but can be changed to only 6 or 8 in this implementation");

  public \u202A‭⁭‫​⁪⁬‬‫‎⁬⁪‍‪⁪⁮‍⁭‮‏‫⁬‭⁪‍‌‎⁫⁫‏‌‬⁯​⁮​⁪‮‭⁭‮(
    \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ _param1)
    : this(_param1, 4)
  {
  }

  public \u202A‭⁭‫​⁪⁬‬‫‎⁬⁪‍‪⁪⁮‍⁭‮‏‫⁬‭⁪‍‌‎⁫⁫‏‌‬⁯​⁮​⁪‮‭⁭‮(
    \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ _param1,
    int _param2)
  {
    this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮ = _param1;
    this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮ = _param1.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮();
    this.\u206D‌⁮‬⁭‫‏⁫‎⁫‮⁭‭‫‫‫⁯⁫‮⁭‬‍‌‏‮‮⁯‏‬‍‍⁫‪​‍‏‪‎​‪‮ = new byte[_param1.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮()];
    this.\u202E‭‎⁯‌⁪‎⁪⁪⁭‎⁮⁬‪‬⁯⁭​⁮⁭‏‍⁯⁬⁬⁭‍​‍​‍⁪⁫⁬​‮⁯‭⁭‮‮ = new byte[_param1.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮()];
    this.\u206C⁬‎⁭⁭⁮⁬‎⁮⁬‮​⁬‫‬‏⁬⁬⁮⁭‪⁪⁮‬⁬‬‪​‌‪⁯​⁯⁮​‍‬‏‎‍‮ = new byte[_param1.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮()];
    this.\u202E⁫⁬‏⁪⁭⁪​‬⁬‎‍‌‍‌⁭‌⁮‌‪⁫‮​​⁭⁯‬⁬‌‫⁯‏‍⁮⁬⁪⁯‌⁮‎‮ = new byte[_param1.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮()];
    this.\u206B⁪‏⁬‫‎‏⁯​⁭⁫‌‪‍‫​‎‌‮‍⁯‌⁪​​⁪‮⁫‏‪​⁪‪⁭⁬‪⁫⁭​‭‮ = new byte[_param1.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮()];
    this.\u206E‭‍⁮‪⁬​‪‪⁮‎‏‍‌‮‫‎‭‎⁮⁮⁫‭‌‮⁪⁪⁬‫‭⁬‭⁫‍⁬‎⁮‭‪⁯‮ = new byte[_param1.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮()];
    this.\u200E‏‬‮‎‬⁪⁫‭‪⁪‬⁭⁪‎‏‍‬⁫‭⁭⁫​‭⁭‌⁬⁯‍⁭⁮‭⁮⁫‫‎‫⁮‮⁫‮ = new byte[_param1.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮()];
    this.\u202A‎‍‫⁮‮‏‍‏‫‌‬‪‪‏⁯‭⁯⁮‪‭⁭​⁯‭‮‫‪⁫⁮⁪⁬‫‎‪‎⁮‏‬‪‮ = new byte[_param1.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮()];
    this.\u202C‬​‬‪‌‎⁪​‎‏​⁪⁪‍⁫⁬‏⁭‍‏⁯⁯‮‎‎⁬⁮‎‎⁯‫‫⁯‫⁪‍⁯‏‌‮(_param2);
  }

  public virtual void \u206A⁭⁫‪‫‬⁪‎​⁯‎‪⁬⁭​‍⁪⁫‌⁪‫⁯​⁪⁫⁫‪‬⁬‏‫‮⁬‬⁭⁬⁫‍⁮‮(
    bool _param1,
    \u202B⁭⁮‬‎⁪‬⁪‬⁮⁪‮‬‍‎⁮‎⁫‎​‌⁫⁪‭‬‮‏‮​⁮‌‌‬‌⁯‮⁫‮‬⁫‮ _param2)
  {
    \u202B⁭⁮‬‎⁪‬⁪‬⁮⁪‮‬‍‎⁮‎⁫‎​‌⁫⁪‭‬‮‏‮​⁮‌‌‬‌⁯‮⁫‮‬⁫‮ obj1;
    switch (_param2)
    {
      case \u200E⁪‏⁬‍‪⁬‌‪‭‪​‮‍‬⁬‬‪‌‭‭‌‌‍⁮⁪⁯⁫‍​‎‏⁪‮‌⁬⁯⁫⁯⁬‮ _:
        \u200E⁪‏⁬‍‪⁬‌‪‭‪​‮‍‬⁬‬‪‌‭‭‌‌‍⁮⁪⁯⁫‍​‎‏⁪‮‌⁬⁯⁫⁯⁬‮ obj2 = (\u200E⁪‏⁬‍‪⁬‌‪‭‪​‮‍‬⁬‬‪‌‭‭‌‌‍⁮⁪⁯⁫‍​‎‏⁪‮‌⁬⁯⁫⁯⁬‮) _param2;
        if (obj2.\u202D‮⁬‌⁫⁮⁬‫‎‮‬‬⁪⁪⁭⁪⁫⁯⁪‬‏⁭‮​‬‬⁯⁮‍‫‏‏‎‭‬⁬‌‭​‌‮ > \u202A‭⁭‫​⁪⁬‬‫‎⁬⁪‍‪⁪⁮‍⁭‮‏‫⁬‭⁪‍‌‎⁫⁫‏‌‬⁯​⁮​⁪‮‭⁭‮.\u206B​‫‮⁪‬‍‭‫‬‍‍‪⁮⁮‭‏⁪‭‫‫⁬⁬⁯‍⁯⁯⁮‏⁮‭‪‮‍‍‍​⁭⁬⁬‮ || obj2.\u202D‮⁬‌⁫⁮⁬‫‎‮‬‬⁪⁪⁭⁪⁫⁯⁪‬‏⁭‮​‬‬⁯⁮‍‫‏‏‎‭‬⁬‌‭​‌‮ < \u202A‭⁭‫​⁪⁬‬‫‎⁬⁪‍‪⁪⁮‍⁭‮‏‫⁬‭⁪‍‌‎⁫⁫‏‌‬⁯​⁮​⁪‮‭⁭‮.\u200C⁯⁯‭‎‮‪‌⁪⁭‬‮‭‭⁫‏⁯​⁬‮⁭⁭⁬‎‬‪⁮⁮⁫‌⁫‭‮​⁭‭‍⁬⁪‪‮ || obj2.\u202D‮⁬‌⁫⁮⁬‫‎‮‬‬⁪⁪⁭⁪⁫⁯⁪‬‏⁭‮​‬‬⁯⁮‍‫‏‏‎‭‬⁬‌‭​‌‮ % 8 != 0)
          throw new ArgumentException("Invalid mac size specified");
        this.\u206D‌⁮‬⁭‫‏⁫‎⁫‮⁭‭‫‫‫⁯⁫‮⁭‬‍‌‏‮‮⁯‏‬‍‍⁫‪​‍‏‪‎​‪‮ = obj2.\u200B‫‭⁮‌‍⁪‪‪‏‌⁯⁮⁫‌‫⁪⁪⁯​⁮​‏​⁬‭‮‮⁪⁬​‪⁬⁯⁫​‍⁬‍⁪‮();
        this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮ = obj2.\u202D‮⁬‌⁫⁮⁬‫‎‮‬‬⁪⁪⁭⁪⁫⁯⁪‬‏⁭‮​‬‬⁯⁮‍‫‏‏‎‭‬⁬‌‭​‌‮ / \u202A‭⁭‫​⁪⁬‬‫‎⁬⁪‍‪⁪⁮‍⁭‮‏‫⁬‭⁪‍‌‎⁫⁫‏‌‬⁯​⁮​⁪‮‭⁭‮.\u202A‭‍⁮‎⁭‪‏‮‌‫‫‍‌‪⁭​⁫⁬​⁫‏‬‎‮​⁬‬‍‬‮⁬⁯‍‫‭‫⁫⁫⁯‮;
        this.\u202E‭‎⁯‌⁪‎⁪⁪⁭‎⁮⁬‪‬⁯⁭​⁮⁭‏‍⁯⁬⁬⁭‍​‍​‍⁪⁫⁬​‮⁯‭⁭‮‮ = obj2.\u202C​‮‍⁪‌‮​‏​‫⁭⁭‬⁮‪‍⁬​⁭‫‭‏⁬‬‎⁮‍‌‬⁬‏‬‎‌⁫‮​‮‫‮();
        obj1 = (\u202B⁭⁮‬‎⁪‬⁪‬⁮⁪‮‬‍‎⁮‎⁫‎​‌⁫⁪‭‬‮‏‮​⁮‌‌‬‌⁯‮⁫‮‬⁫‮) obj2.\u206F⁬‌‍⁪‎⁪‎‏‬‎⁮‫‫‏⁫‎⁬‫‪‎‍⁪​‎⁭‬‏‮‫⁮⁯‬‌⁬‮⁭​‮⁭‮;
        break;
      case \u200C⁯‭‏⁯‬‌‌‏​‌‫⁬‮⁮⁫‬⁬‮⁪‍​⁯‮⁭‏‫‪‍‬⁮​‬⁭⁯‍⁭‭‪⁬‮ _:
        this.\u206D‌⁮‬⁭‫‏⁫‎⁫‮⁭‭‫‫‫⁯⁫‮⁭‬‍‌‏‮‮⁯‏‬‍‍⁫‪​‍‏‪‎​‪‮ = ((\u200C⁯‭‏⁯‬‌‌‏​‌‫⁬‮⁮⁫‬⁬‮⁪‍​⁯‮⁭‏‫‪‍‬⁮​‬⁭⁯‍⁭‭‪⁬‮) _param2).\u202A‌⁭‍‪‭‍‍⁪⁭⁫‮⁬‍⁪⁪‪⁬‏⁭⁫⁫⁬‫⁬‪‏⁯‍⁪‍‮‫⁪‏‬⁯‭‏‪‮();
        this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮ = this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮();
        this.\u202E‭‎⁯‌⁪‎⁪⁪⁭‎⁮⁬‪‬⁯⁭​⁮⁭‏‍⁯⁬⁬⁭‍​‍​‍⁪⁫⁬​‮⁯‭⁭‮‮ = (byte[]) null;
        obj1 = ((\u200C⁯‭‏⁯‬‌‌‏​‌‫⁬‮⁮⁫‬⁬‮⁪‍​⁯‮⁭‏‫‪‍‬⁮​‬⁭⁯‍⁭‭‪⁬‮) _param2).\u202C⁬⁮⁮‮⁮​‫⁪⁬⁬⁬​‎‍⁭⁫‍⁯‬⁪‬⁮⁪‬‬⁭⁭⁫⁫‏‭⁪‬​‮​‫‫⁫‮;
        break;
      default:
        throw new ArgumentException("Invalid parameters specified");
    }
    this.\u206C⁬‎⁭⁭⁮⁬‎⁮⁬‮​⁬‫‬‏⁬⁬⁮⁭‪⁪⁮‬⁬‬‪​‌‪⁯​⁯⁮​‍‬‏‎‍‮ = new byte[this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮];
    this.\u206F⁬⁪‪‪‫‎⁪‍​‭​⁭⁫‍⁪⁮‮⁫‮⁭⁪‌‫‮​⁯‬‬⁪‭‮​​‌‎‬⁬‮‮‮ = _param1;
    this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206A⁭⁫‪‫‬⁪‎​⁯‎‪⁬⁭​‍⁪⁫‌⁪‫⁯​⁪⁫⁫‪‬⁬‏‫‮⁬‬⁭⁬⁫‍⁮‮(true, obj1);
    this.\u202A‎‍‫⁮‮‏‍‏‫‌‬‪‪‏⁯‭⁯⁮‪‭⁭​⁯‭‮‫‪⁫⁮⁪⁬‫‎‪‎⁮‏‬‪‮[0] = (byte) 1;
    if (this.\u202E‭‎⁯‌⁪‎⁪⁪⁭‎⁮⁬‪‬⁯⁭​⁮⁭‏‍⁯⁬⁬⁭‍​‍​‍⁪⁫⁬​‮⁯‭⁭‮‮ == null)
      return;
    this.\u200C‌​⁪‫‌‌⁫⁪⁮‍⁪⁫‍⁫⁭‪⁪‭⁪‭‌‍⁭‮‫‪‏‪‬‮‪⁯⁫‬⁭⁪⁪⁪‭‮(this.\u202E‭‎⁯‌⁪‎⁪⁪⁭‎⁮⁬‪‬⁯⁭​⁮⁭‏‍⁯⁬⁬⁭‍​‍​‍⁪⁫⁬​‮⁯‭⁭‮‮, 0, this.\u202E‭‎⁯‌⁪‎⁪⁪⁭‎⁮⁬‪‬⁯⁭​⁮⁭‏‍⁯⁬⁬⁭‍​‍​‍⁪⁫⁬​‮⁯‭⁭‮‮.Length);
  }

  public virtual string \u206B‪⁭‪⁮‍⁮‪⁭⁪‪​⁮‭‭⁬⁯‍‎⁮⁬‫‍‏‌⁬⁯⁯‮⁪‪‬‫⁯‬⁪‌‍‮‎‮ => this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206B‪⁭‪⁮‍⁮‪⁭⁪‪​⁮‭‭⁬⁯‍‎⁮⁬‫‍‏‌⁬⁯⁯‮⁪‪‬‫⁯‬⁪‌‍‮‎‮ + "/KCCM";

  public virtual int \u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮() => this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮();

  public virtual \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ \u206F‍‬‪⁭⁭⁬⁪⁭⁪‌‎‮‌‍⁮⁪⁮⁯‪‭⁬‭‬‪​⁭⁮⁫‬⁪⁫⁪​‏​‎⁪‍‭‮() => this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮;

  public virtual void \u202B⁪⁫‮‬‪⁬⁭⁯‌⁬‬‍‌⁫‭‏‭⁮‮‮⁬‌‭‬‏⁯‫‪⁭‏​‎‍⁮⁬⁬⁫‮⁪‮(byte _param1) => this.\u200E⁮⁯‫‮‮‏⁯‍⁯⁯‬⁫‎⁪‫‫‬⁮‬‍‮⁪‎‬⁪‍⁮‍‭‏⁬‮‏⁫‫‎‬‎‌‮.WriteByte(_param1);

  public virtual void \u200C‌​⁪‫‌‌⁫⁪⁮‍⁪⁫‍⁫⁭‪⁪‭⁪‭‌‍⁭‮‫‪‏‪‬‮‪⁯⁫‬⁭⁪⁪⁪‭‮(
    byte[] _param1,
    int _param2,
    int _param3)
  {
    this.\u200E⁮⁯‫‮‮‏⁯‍⁯⁯‬⁫‎⁪‫‫‬⁮‬‍‮⁪‎‬⁪‍⁮‍‭‏⁬‮‏⁫‫‎‬‎‌‮.Write(_param1, _param2, _param3);
  }

  private void \u206F‮​‬⁬‫⁭‪‭‫‭‮‏‬‌‏⁫⁯​​‌‬‫⁯‫‌‮‭⁪‎⁭‭‭‪‭​⁯‌‏‍‮(
    byte[] _param1,
    int _param2,
    int _param3,
    int _param4)
  {
    if (_param3 - _param2 < this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮())
      throw new ArgumentException("authText buffer too short");
    if (_param3 % this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮() != 0)
      throw new ArgumentException("padding not supported");
    Array.Copy((Array) this.\u206D‌⁮‬⁭‫‏⁫‎⁫‮⁭‭‫‫‫⁯⁫‮⁭‬‍‌‏‮‮⁯‏‬‍‍⁫‪​‍‏‪‎​‪‮, 0, (Array) this.\u206B⁪‏⁬‫‎‏⁯​⁭⁫‌‪‍‫​‎‌‮‍⁯‌⁪​​⁪‮⁫‏‪​⁪‪⁭⁬‪⁫⁭​‭‮, 0, this.\u206D‌⁮‬⁭‫‏⁫‎⁫‮⁭‭‫‫‫⁯⁫‮⁭‬‍‌‏‮‮⁯‏‬‍‍⁫‪​‍‏‪‎​‪‮.Length - this.\u206F⁯⁬‌⁫⁯⁭⁬​​‫⁭​‍‫‍​⁬‌‏​‌‏⁯⁬‬⁫‫‬‭‍‬⁯‮‏⁫‮⁪⁫⁫‮ - 1);
    this.\u200B‫‬⁫‍⁫‪‪⁭‫‍‫​⁬‏‎‌⁭⁪‏​‏‏‏⁮⁯‌‮‍‏⁬‏⁮‍‭‬⁭​⁫‏‮(_param4, this.\u206E‭‍⁮‪⁬​‪‪⁮‎‏‍‌‮‫‎‭‎⁮⁮⁫‭‌‮⁪⁪⁬‫‭⁬‭⁫‍⁬‎⁮‭‪⁯‮, 0);
    Array.Copy((Array) this.\u206E‭‍⁮‪⁬​‪‪⁮‎‏‍‌‮‫‎‭‎⁮⁮⁫‭‌‮⁪⁪⁬‫‭⁬‭⁫‍⁬‎⁮‭‪⁯‮, 0, (Array) this.\u206B⁪‏⁬‫‎‏⁯​⁭⁫‌‪‍‫​‎‌‮‍⁯‌⁪​​⁪‮⁫‏‪​⁪‪⁭⁬‪⁫⁭​‭‮, this.\u206D‌⁮‬⁭‫‏⁫‎⁫‮⁭‭‫‫‫⁯⁫‮⁭‬‍‌‏‮‮⁯‏‬‍‍⁫‪​‍‏‪‎​‪‮.Length - this.\u206F⁯⁬‌⁫⁯⁭⁬​​‫⁭​‍‫‍​⁬‌‏​‌‏⁯⁬‬⁫‫‬‭‍‬⁯‮‏⁫‮⁪⁫⁫‮ - 1, \u202A‭⁭‫​⁪⁬‬‫‎⁬⁪‍‪⁪⁮‍⁭‮‏‫⁬‭⁪‍‌‎⁫⁫‏‌‬⁯​⁮​⁪‮‭⁭‮.\u206C‮⁮‫‍‮‮⁫⁮​‎‌‪‭‮‫​‪‫‍⁪⁪⁯⁯‮‫⁭‬‫⁬⁯⁮‪‌⁯⁯‪‪‪‎‮);
    this.\u206B⁪‏⁬‫‎‏⁯​⁭⁫‌‪‍‫​‎‌‮‍⁯‌⁪​​⁪‮⁫‏‪​⁪‪⁭⁬‪⁫⁭​‭‮[this.\u206B⁪‏⁬‫‎‏⁯​⁭⁫‌‪‍‫​‎‌‮‍⁯‌⁪​​⁪‮⁫‏‪​⁪‪⁭⁬‪⁫⁭​‭‮.Length - 1] = this.\u202E‪‏‮‏⁫⁬⁭‭⁮⁮⁬‮‬​‬‮‪‎‮‏⁭‪‮‍‫⁭‫⁬‪​‍‪‮‪‍⁫‎‍‌‮(true, this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮);
    this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(this.\u206B⁪‏⁬‫‎‏⁯​⁭⁫‌‪‍‫​‎‌‮‍⁯‌⁪​​⁪‮⁫‏‪​⁪‪⁭⁬‪⁫⁭​‭‮, 0, this.\u202E⁫⁬‏⁪⁭⁪​‬⁬‎‍‌‍‌⁭‌⁮‌‪⁫‮​​⁭⁯‬⁬‌‫⁯‏‍⁮⁬⁪⁯‌⁮‎‮, 0);
    this.\u200B‫‬⁫‍⁫‪‪⁭‫‍‫​⁬‏‎‌⁭⁪‏​‏‏‏⁮⁯‌‮‍‏⁬‏⁮‍‭‬⁭​⁫‏‮(_param3, this.\u206E‭‍⁮‪⁬​‪‪⁮‎‏‍‌‮‫‎‭‎⁮⁮⁫‭‌‮⁪⁪⁬‫‭⁬‭⁫‍⁬‎⁮‭‪⁯‮, 0);
    if (_param3 <= this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮() - this.\u206F⁯⁬‌⁫⁯⁭⁬​​‫⁭​‍‫‍​⁬‌‏​‌‏⁯⁬‬⁫‫‬‭‍‬⁯‮‏⁫‮⁪⁫⁫‮)
    {
      for (int index = 0; index < _param3; ++index)
        this.\u206E‭‍⁮‪⁬​‪‪⁮‎‏‍‌‮‫‎‭‎⁮⁮⁫‭‌‮⁪⁪⁬‫‭⁬‭⁫‍⁬‎⁮‭‪⁯‮[index + this.\u206F⁯⁬‌⁫⁯⁭⁬​​‫⁭​‍‫‍​⁬‌‏​‌‏⁯⁬‬⁫‫‬‭‍‬⁯‮‏⁫‮⁪⁫⁫‮] ^= _param1[_param2 + index];
      for (int index = 0; index < this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮(); ++index)
        this.\u202E⁫⁬‏⁪⁭⁪​‬⁬‎‍‌‍‌⁭‌⁮‌‪⁫‮​​⁭⁯‬⁬‌‫⁯‏‍⁮⁬⁪⁯‌⁮‎‮[index] ^= this.\u206E‭‍⁮‪⁬​‪‪⁮‎‏‍‌‮‫‎‭‎⁮⁮⁫‭‌‮⁪⁪⁬‫‭⁬‭⁫‍⁬‎⁮‭‪⁯‮[index];
      this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(this.\u202E⁫⁬‏⁪⁭⁪​‬⁬‎‍‌‍‌⁭‌⁮‌‪⁫‮​​⁭⁯‬⁬‌‫⁯‏‍⁮⁬⁪⁯‌⁮‎‮, 0, this.\u202E⁫⁬‏⁪⁭⁪​‬⁬‎‍‌‍‌⁭‌⁮‌‪⁫‮​​⁭⁯‬⁬‌‫⁯‏‍⁮⁬⁪⁯‌⁮‎‮, 0);
    }
    else
    {
      for (int index = 0; index < this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮(); ++index)
        this.\u202E⁫⁬‏⁪⁭⁪​‬⁬‎‍‌‍‌⁭‌⁮‌‪⁫‮​​⁭⁯‬⁬‌‫⁯‏‍⁮⁬⁪⁯‌⁮‎‮[index] ^= this.\u206E‭‍⁮‪⁬​‪‪⁮‎‏‍‌‮‫‎‭‎⁮⁮⁫‭‌‮⁪⁪⁬‫‭⁬‭⁫‍⁬‎⁮‭‪⁯‮[index];
      this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(this.\u202E⁫⁬‏⁪⁭⁪​‬⁬‎‍‌‍‌⁭‌⁮‌‪⁫‮​​⁭⁯‬⁬‌‫⁯‏‍⁮⁬⁪⁯‌⁮‎‮, 0, this.\u202E⁫⁬‏⁪⁭⁪​‬⁬‎‍‌‍‌⁭‌⁮‌‪⁫‮​​⁭⁯‬⁬‌‫⁯‏‍⁮⁬⁪⁯‌⁮‎‮, 0);
      for (int index1 = _param3; index1 != 0; index1 -= this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮())
      {
        for (int index2 = 0; index2 < this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮(); ++index2)
          this.\u202E⁫⁬‏⁪⁭⁪​‬⁬‎‍‌‍‌⁭‌⁮‌‪⁫‮​​⁭⁯‬⁬‌‫⁯‏‍⁮⁬⁪⁯‌⁮‎‮[index2] ^= _param1[index2 + _param2];
        this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(this.\u202E⁫⁬‏⁪⁭⁪​‬⁬‎‍‌‍‌⁭‌⁮‌‪⁫‮​​⁭⁯‬⁬‌‫⁯‏‍⁮⁬⁪⁯‌⁮‎‮, 0, this.\u202E⁫⁬‏⁪⁭⁪​‬⁬‎‍‌‍‌⁭‌⁮‌‪⁫‮​​⁭⁯‬⁬‌‫⁯‏‍⁮⁬⁪⁯‌⁮‎‮, 0);
        _param2 += this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮();
      }
    }
  }

  public virtual int \u200E⁯‬‎⁯⁭⁭‬⁬⁫‍‌‫‫⁮‭‫‍⁫⁯⁫⁫‫‭‭‌​‫‏‬⁫‏‪⁪‬⁫‎‍‫⁮‮(
    byte _param1,
    byte[] _param2,
    int _param3)
  {
    this.\u206E⁬‫⁪⁮‬​⁪⁬⁭‮⁬⁯⁭‎⁪‏‌⁭‌‮‍‎‬⁮⁫‏‎⁭‪‍⁯‮​‏‍⁮​⁬⁫‮.WriteByte(_param1);
    return 0;
  }

  public virtual int \u206D‫⁭‪‭‏‎‌⁪⁪⁯‪​‌⁯‪‮⁮⁭‎⁪​⁯⁮‪‬‮⁪‭‬‍‫⁪⁭‍⁪‏⁪⁬‪‮(
    byte[] _param1,
    int _param2,
    int _param3,
    byte[] _param4,
    int _param5)
  {
    \u200B‪⁭⁮⁫⁯‌‭‏‫⁭⁯⁯‫‪‎‬‍⁪‬⁮⁪‮‍‮‎‬⁬‎⁪⁬⁫‌‍⁬‮‏‫‭⁬‮.\u200D‮⁭⁫‎⁮‏⁬⁫‍‬​‬‪‫‬‭‭‭⁬⁪‎‭⁮⁭‬‭⁭⁬⁬‪‍‌‎‏‬⁪‫‫‌‮(_param1, _param2, _param3, "input buffer too short");
    this.\u206E⁬‫⁪⁮‬​⁪⁬⁭‮⁬⁯⁭‎⁪‏‌⁭‌‮‍‎‬⁮⁫‏‎⁭‪‍⁯‮​‏‍⁮​⁬⁫‮.Write(_param1, _param2, _param3);
    return 0;
  }

  public int \u206E‬‫‌​‭‌‌‏⁬‭⁫⁪‌‏‌⁬⁫⁯‍‫​‌‌‌‪​‌‫‪‪‫⁯⁫​‪‍‌‭‪‮(
    byte[] _param1,
    int _param2,
    int _param3,
    byte[] _param4,
    int _param5)
  {
    \u200B‪⁭⁮⁫⁯‌‭‏‫⁭⁯⁯‫‪‎‬‍⁪‬⁮⁪‮‍‮‎‬⁬‎⁪⁬⁫‌‍⁬‮‏‫‭⁬‮.\u200D‮⁭⁫‎⁮‏⁬⁫‍‬​‬‪‫‬‭‭‭⁬⁪‎‭⁮⁭‬‭⁭⁬⁬‪‍‌‎‏‬⁪‫‫‌‮(_param1, _param2, _param3, "input buffer too short");
    \u200B‪⁭⁮⁫⁯‌‭‏‫⁭⁯⁯‫‪‎‬‍⁪‬⁮⁪‮‍‮‎‬⁬‎⁪⁬⁫‌‍⁬‮‏‫‭⁬‮.\u200D‬⁫‬‬⁯⁭‭⁪‮‪‬⁬⁫⁮‎‪‌⁭‎⁫⁯‍⁭⁮⁪‭​⁫⁫‭‏‍⁮‏‬​⁪⁯‎‮(_param4, _param5, _param3, "output buffer too short");
    if (this.\u200E⁮⁯‫‮‮‏⁯‍⁯⁯‬⁫‎⁪‫‫‬⁮‬‍‮⁪‎‬⁪‍⁮‍‭‏⁬‮‏⁫‫‎‬‎‌‮.Length > 0L)
      this.\u206F‮​‬⁬‫⁭‪‭‫‭‮‏‬‌‏⁫⁯​​‌‬‫⁯‫‌‮‭⁪‎⁭‭‭‪‭​⁯‌‏‍‮(this.\u200E⁮⁯‫‮‮‏⁯‍⁯⁯‬⁫‎⁪‫‫‬⁮‬‍‮⁪‎‬⁪‍⁮‍‭‏⁬‮‏⁫‫‎‬‎‌‮.GetBuffer(), 0, (int) this.\u200E⁮⁯‫‮‮‏⁯‍⁯⁯‬⁫‎⁪‫‫‬⁮‬‍‮⁪‎‬⁪‍⁮‍‭‏⁬‮‏⁫‫‎‬‎‌‮.Length, this.\u206F⁬⁪‪‪‫‎⁪‍​‭​⁭⁫‍⁪⁮‮⁫‮⁭⁪‌‫‮​⁯‬‬⁪‭‮​​‌‎‬⁬‮‮‮ ? (int) this.\u206E⁬‫⁪⁮‬​⁪⁬⁭‮⁬⁯⁭‎⁪‏‌⁭‌‮‍‎‬⁮⁫‏‎⁭‪‍⁯‮​‏‍⁮​⁬⁫‮.Length : (int) this.\u206E⁬‫⁪⁮‬​⁪⁬⁭‮⁬⁯⁭‎⁪‏‌⁭‌‮‍‎‬⁮⁫‏‎⁭‪‍⁯‮​‏‍⁮​⁬⁫‮.Length - this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮);
    if (this.\u206F⁬⁪‪‪‫‎⁪‍​‭​⁭⁫‍⁪⁮‮⁫‮⁭⁪‌‫‮​⁯‬‬⁪‭‮​​‌‎‬⁬‮‮‮)
    {
      \u200B‪⁭⁮⁫⁯‌‭‏‫⁭⁯⁯‫‪‎‬‍⁪‬⁮⁪‮‍‮‎‬⁬‎⁪⁬⁫‌‍⁬‮‏‫‭⁬‮.\u200D‮⁭⁫‎⁮‏⁬⁫‍‬​‬‪‫‬‭‭‭⁬⁪‎‭⁮⁭‬‭⁭⁬⁬‪‍‌‎‏‬⁪‫‫‌‮(_param3 % this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮() != 0, "partial blocks not supported");
      this.\u202A‪⁫⁪⁫‏⁮‪⁮‪⁫‬⁫⁬⁪‬⁫‭‏‍⁮‪​‪‫‬‮⁮‮⁯⁪‎‍‬⁬​⁮⁬⁭⁮‮(_param1, _param2, _param3);
      this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(this.\u206D‌⁮‬⁭‫‏⁫‎⁫‮⁭‭‫‫‫⁯⁫‮⁭‬‍‌‏‮‮⁯‏‬‍‍⁫‪​‍‏‪‎​‪‮, 0, this.\u200E‏‬‮‎‬⁪⁫‭‪⁪‬⁭⁪‎‏‍‬⁫‭⁭⁫​‭⁭‌⁬⁯‍⁭⁮‭⁮⁫‫‎‫⁮‮⁫‮, 0);
      int num = _param3;
      while (num > 0)
      {
        this.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(_param1, _param2, _param3, _param4, _param5);
        num -= this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮();
        _param2 += this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮();
        _param5 += this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮();
      }
      for (int index = 0; index < this.\u202A‎‍‫⁮‮‏‍‏‫‌‬‪‪‏⁯‭⁯⁮‪‭⁭​⁯‭‮‫‪⁫⁮⁪⁬‫‎‪‎⁮‏‬‪‮.Length; ++index)
        this.\u200E‏‬‮‎‬⁪⁫‭‪⁪‬⁭⁪‎‏‍‬⁫‭⁭⁫​‭⁭‌⁬⁯‍⁭⁮‭⁮⁫‫‎‫⁮‮⁫‮[index] += this.\u202A‎‍‫⁮‮‏‍‏‫‌‬‪‪‏⁯‭⁯⁮‪‭⁭​⁯‭‮‫‪⁫⁮⁪⁬‫‎‪‎⁮‏‬‪‮[index];
      this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(this.\u200E‏‬‮‎‬⁪⁫‭‪⁪‬⁭⁪‎‏‍‬⁫‭⁭⁫​‭⁭‌⁬⁯‍⁭⁮‭⁮⁫‫‎‫⁮‮⁫‮, 0, this.\u206E‭‍⁮‪⁬​‪‪⁮‎‏‍‌‮‫‎‭‎⁮⁮⁫‭‌‮⁪⁪⁬‫‭⁬‭⁫‍⁬‎⁮‭‪⁯‮, 0);
      for (int index = 0; index < this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮; ++index)
        _param4[_param5 + index] = (byte) ((uint) this.\u206E‭‍⁮‪⁬​‪‪⁮‎‏‍‌‮‫‎‭‎⁮⁮⁫‭‌‮⁪⁪⁬‫‭⁬‭⁫‍⁬‎⁮‭‪⁯‮[index] ^ (uint) this.\u202E⁫⁬‏⁪⁭⁪​‬⁬‎‍‌‍‌⁭‌⁮‌‪⁫‮​​⁭⁯‬⁬‌‫⁯‏‍⁮⁬⁪⁯‌⁮‎‮[index]);
      Array.Copy((Array) this.\u202E⁫⁬‏⁪⁭⁪​‬⁬‎‍‌‍‌⁭‌⁮‌‪⁫‮​​⁭⁯‬⁬‌‫⁯‏‍⁮⁬⁪⁯‌⁮‎‮, 0, (Array) this.\u206C⁬‎⁭⁭⁮⁬‎⁮⁬‮​⁬‫‬‏⁬⁬⁮⁭‪⁪⁮‬⁬‬‪​‌‪⁯​⁯⁮​‍‬‏‎‍‮, 0, this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮);
      this.\u202C‬‎⁪​​‌‎‍⁯⁯​‮‪‮​⁭‬‭​⁮‬‍⁬⁬⁫‭​‎‌⁪⁬‬‮⁬⁫‮⁮‪‪‮();
      return _param3 + this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮;
    }
    \u200B‪⁭⁮⁫⁯‌‭‏‫⁭⁯⁯‫‪‎‬‍⁪‬⁮⁪‮‍‮‎‬⁬‎⁪⁬⁫‌‍⁬‮‏‫‭⁬‮.\u200D‮⁭⁫‎⁮‏⁬⁫‍‬​‬‪‫‬‭‭‭⁬⁪‎‭⁮⁭‬‭⁭⁬⁬‪‍‌‎‏‬⁪‫‫‌‮((_param3 - this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮) % this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮() != 0, "partial blocks not supported");
    this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(this.\u206D‌⁮‬⁭‫‏⁫‎⁫‮⁭‭‫‫‫⁯⁫‮⁭‬‍‌‏‮‮⁯‏‬‍‍⁫‪​‍‏‪‎​‪‮, 0, this.\u200E‏‬‮‎‬⁪⁫‭‪⁪‬⁭⁪‎‏‍‬⁫‭⁭⁫​‭⁭‌⁬⁯‍⁭⁮‭⁮⁫‫‎‫⁮‮⁫‮, 0);
    int num1 = _param3 / this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮();
    for (int index = 0; index < num1; ++index)
    {
      this.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(_param1, _param2, _param3, _param4, _param5);
      _param2 += this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮();
      _param5 += this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮();
    }
    if (_param3 > _param2)
    {
      for (int index = 0; index < this.\u202A‎‍‫⁮‮‏‍‏‫‌‬‪‪‏⁯‭⁯⁮‪‭⁭​⁯‭‮‫‪⁫⁮⁪⁬‫‎‪‎⁮‏‬‪‮.Length; ++index)
        this.\u200E‏‬‮‎‬⁪⁫‭‪⁪‬⁭⁪‎‏‍‬⁫‭⁭⁫​‭⁭‌⁬⁯‍⁭⁮‭⁮⁫‫‎‫⁮‮⁫‮[index] += this.\u202A‎‍‫⁮‮‏‍‏‫‌‬‪‪‏⁯‭⁯⁮‪‭⁭​⁯‭‮‫‪⁫⁮⁪⁬‫‎‪‎⁮‏‬‪‮[index];
      this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(this.\u200E‏‬‮‎‬⁪⁫‭‪⁪‬⁭⁪‎‏‍‬⁫‭⁭⁫​‭⁭‌⁬⁯‍⁭⁮‭⁮⁫‫‎‫⁮‮⁫‮, 0, this.\u206E‭‍⁮‪⁬​‪‪⁮‎‏‍‌‮‫‎‭‎⁮⁮⁫‭‌‮⁪⁪⁬‫‭⁬‭⁫‍⁬‎⁮‭‪⁯‮, 0);
      for (int index = 0; index < this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮; ++index)
        _param4[_param5 + index] = (byte) ((uint) this.\u206E‭‍⁮‪⁬​‪‪⁮‎‏‍‌‮‫‎‭‎⁮⁮⁫‭‌‮⁪⁪⁬‫‭⁬‭⁫‍⁬‎⁮‭‪⁯‮[index] ^ (uint) _param1[_param2 + index]);
      _param5 += this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮;
    }
    for (int index = 0; index < this.\u202A‎‍‫⁮‮‏‍‏‫‌‬‪‪‏⁯‭⁯⁮‪‭⁭​⁯‭‮‫‪⁫⁮⁪⁬‫‎‪‎⁮‏‬‪‮.Length; ++index)
      this.\u200E‏‬‮‎‬⁪⁫‭‪⁪‬⁭⁪‎‏‍‬⁫‭⁭⁫​‭⁭‌⁬⁯‍⁭⁮‭⁮⁫‫‎‫⁮‮⁫‮[index] += this.\u202A‎‍‫⁮‮‏‍‏‫‌‬‪‪‏⁯‭⁯⁮‪‭⁭​⁯‭‮‫‪⁫⁮⁪⁬‫‎‪‎⁮‏‬‪‮[index];
    this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(this.\u200E‏‬‮‎‬⁪⁫‭‪⁪‬⁭⁪‎‏‍‬⁫‭⁭⁫​‭⁭‌⁬⁯‍⁭⁮‭⁮⁫‫‎‫⁮‮⁫‮, 0, this.\u206E‭‍⁮‪⁬​‪‪⁮‎‏‍‌‮‫‎‭‎⁮⁮⁫‭‌‮⁪⁪⁬‫‭⁬‭⁫‍⁬‎⁮‭‪⁯‮, 0);
    Array.Copy((Array) _param4, _param5 - this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮, (Array) this.\u206E‭‍⁮‪⁬​‪‪⁮‎‏‍‌‮‫‎‭‎⁮⁮⁫‭‌‮⁪⁪⁬‫‭⁬‭⁫‍⁬‎⁮‭‪⁯‮, 0, this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮);
    this.\u202A‪⁫⁪⁫‏⁮‪⁮‪⁫‬⁫⁬⁪‬⁫‭‏‍⁮‪​‪‫‬‮⁮‮⁯⁪‎‍‬⁬​⁮⁬⁭⁮‮(_param4, 0, _param5 - this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮);
    Array.Copy((Array) this.\u202E⁫⁬‏⁪⁭⁪​‬⁬‎‍‌‍‌⁭‌⁮‌‪⁫‮​​⁭⁯‬⁬‌‫⁯‏‍⁮⁬⁪⁯‌⁮‎‮, 0, (Array) this.\u206C⁬‎⁭⁭⁮⁬‎⁮⁬‮​⁬‫‬‏⁬⁬⁮⁭‪⁪⁮‬⁬‬‪​‌‪⁯​⁯⁮​‍‬‏‎‍‮, 0, this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮);
    byte[] destinationArray = new byte[this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮];
    Array.Copy((Array) this.\u206E‭‍⁮‪⁬​‪‪⁮‎‏‍‌‮‫‎‭‎⁮⁮⁫‭‌‮⁪⁪⁬‫‭⁬‭⁫‍⁬‎⁮‭‪⁯‮, 0, (Array) destinationArray, 0, this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮);
    if (!\u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u200F⁬‌‬⁭⁪⁪‏‫⁮⁭‪⁮‎​‍⁬‭⁪⁯⁬‭‌⁬⁬‬‫‮⁫⁯‏⁫⁪‌⁬⁫⁫‬‬‬‮(this.\u206C⁬‎⁭⁭⁮⁬‎⁮⁬‮​⁬‫‬‏⁬⁬⁮⁭‪⁪⁮‬⁬‬‪​‌‪⁯​⁯⁮​‍‬‏‎‍‮, destinationArray))
      throw new \u206F⁭‭‫‎‍‏⁯‬‍‌​⁭⁮‬⁪⁬⁮⁯‪⁪‏‬‭⁬⁫‪​‬‬‎⁪‪⁪‭‏‫‬⁪‏‮("mac check failed");
    this.\u202C‬‎⁪​​‌‎‍⁯⁯​‮‪‮​⁭‬‭​⁮‬‍⁬⁬⁫‭​‎‌⁪⁬‬‮⁬⁫‮⁮‪‪‮();
    return _param3 - this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮;
  }

  private void \u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(
    byte[] _param1,
    int _param2,
    int _param3,
    byte[] _param4,
    int _param5)
  {
    for (int index = 0; index < this.\u202A‎‍‫⁮‮‏‍‏‫‌‬‪‪‏⁯‭⁯⁮‪‭⁭​⁯‭‮‫‪⁫⁮⁪⁬‫‎‪‎⁮‏‬‪‮.Length; ++index)
      this.\u200E‏‬‮‎‬⁪⁫‭‪⁪‬⁭⁪‎‏‍‬⁫‭⁭⁫​‭⁭‌⁬⁯‍⁭⁮‭⁮⁫‫‎‫⁮‮⁫‮[index] += this.\u202A‎‍‫⁮‮‏‍‏‫‌‬‪‪‏⁯‭⁯⁮‪‭⁭​⁯‭‮‫‪⁫⁮⁪⁬‫‎‪‎⁮‏‬‪‮[index];
    this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(this.\u200E‏‬‮‎‬⁪⁫‭‪⁪‬⁭⁪‎‏‍‬⁫‭⁭⁫​‭⁭‌⁬⁯‍⁭⁮‭⁮⁫‫‎‫⁮‮⁫‮, 0, this.\u206E‭‍⁮‪⁬​‪‪⁮‎‏‍‌‮‫‎‭‎⁮⁮⁫‭‌‮⁪⁪⁬‫‭⁬‭⁫‍⁬‎⁮‭‪⁯‮, 0);
    for (int index = 0; index < this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮(); ++index)
      _param4[_param5 + index] = (byte) ((uint) this.\u206E‭‍⁮‪⁬​‪‪⁮‎‏‍‌‮‫‎‭‎⁮⁮⁫‭‌‮⁪⁪⁬‫‭⁬‭⁫‍⁬‎⁮‭‪⁯‮[index] ^ (uint) _param1[_param2 + index]);
  }

  private void \u202A‪⁫⁪⁫‏⁮‪⁮‪⁫‬⁫⁬⁪‬⁫‭‏‍⁮‪​‪‫‬‮⁮‮⁯⁪‎‍‬⁬​⁮⁬⁭⁮‮(
    byte[] _param1,
    int _param2,
    int _param3)
  {
    int num = _param3;
    while (num > 0)
    {
      for (int index = 0; index < this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮(); ++index)
        this.\u202E⁫⁬‏⁪⁭⁪​‬⁬‎‍‌‍‌⁭‌⁮‌‪⁫‮​​⁭⁯‬⁬‌‫⁯‏‍⁮⁬⁪⁯‌⁮‎‮[index] ^= _param1[_param2 + index];
      this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(this.\u202E⁫⁬‏⁪⁭⁪​‬⁬‎‍‌‍‌⁭‌⁮‌‪⁫‮​​⁭⁯‬⁬‌‫⁯‏‍⁮⁬⁪⁯‌⁮‎‮, 0, this.\u202E⁫⁬‏⁪⁭⁪​‬⁬‎‍‌‍‌⁭‌⁮‌‪⁫‮​​⁭⁯‬⁬‌‫⁯‏‍⁮⁬⁪⁯‌⁮‎‮, 0);
      num -= this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮();
      _param2 += this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮();
    }
  }

  public virtual int \u200F‏‏‬‫​⁮‬⁫‌‌⁮⁬‏⁭‭‌⁯⁪​‍​⁮⁫‮‫⁮‌‎‪⁬⁯⁪‪⁬‫⁫⁮‪⁭‮(byte[] _param1, int _param2)
  {
    int num = this.\u206E‬‫‌​‭‌‌‏⁬‭⁫⁪‌‏‌⁬⁫⁯‍‫​‌‌‌‪​‌‫‪‪‫⁯⁫​‪‍‌‭‪‮(this.\u206E⁬‫⁪⁮‬​⁪⁬⁭‮⁬⁯⁭‎⁪‏‌⁭‌‮‍‎‬⁮⁫‏‎⁭‪‍⁯‮​‏‍⁮​⁬⁫‮.GetBuffer(), 0, (int) this.\u206E⁬‫⁪⁮‬​⁪⁬⁭‮⁬⁯⁭‎⁪‏‌⁭‌‮‍‎‬⁮⁫‏‎⁭‪‍⁯‮​‏‍⁮​⁬⁫‮.Length, _param1, _param2);
    this.\u202C‬‎⁪​​‌‎‍⁯⁯​‮‪‮​⁭‬‭​⁮‬‍⁬⁬⁫‭​‎‌⁪⁬‬‮⁬⁫‮⁮‪‪‮();
    return num;
  }

  public virtual byte[] \u200C⁬⁬‏⁭‮‫‎‏‌‮‌‍‮‪⁭⁯‫‪‭‮‪⁮⁮‭‌‏⁮‏⁫⁯‭‪‬​​‮‮⁮⁭‮() => \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u206F‬⁯‪⁬⁮⁭⁮‮‭‬‌‌‎⁪⁫‍‭‍‮‌⁬‮‏‍‪‬‮⁯‫‪‭‬⁭‏⁮⁯​‮⁬‮(this.\u206C⁬‎⁭⁭⁮⁬‎⁮⁬‮​⁬‫‬‏⁬⁬⁮⁭‪⁪⁮‬⁬‬‪​‌‪⁯​⁯⁮​‍‬‏‎‍‮);

  public virtual int \u200F‮⁭⁫‌‎‏​‭‏​⁯‫⁯​‮‫⁪⁫⁬⁮⁭⁯‏​⁫⁯​‮⁫⁮⁮⁫‍⁫‬‪⁮‎‫‮(int _param1) => _param1;

  public virtual int \u200E‍‮‎‎‎​‫⁫‍‮‭‫⁬⁭⁪​‮⁭‫⁫‌⁫⁯‮‪⁪‭⁭‬‎​⁪‎‪‫⁯‭‌⁫‮(int _param1) => _param1 + this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮;

  public virtual void \u202C‬‎⁪​​‌‎‍⁯⁯​‮‪‮​⁭‬‭​⁮‬‍⁬⁬⁫‭​‎‌⁪⁬‬‮⁬⁫‮⁮‪‪‮()
  {
    \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u202E‫⁭‬‌⁫‮‏‫‮‪⁬‫‫⁬⁪⁪⁭‬‏⁫⁮‏⁪‫‬‭‮⁬‪‍‫⁭‪‍⁯‫‭‍‫‮(this.\u206B⁪‏⁬‫‎‏⁯​⁭⁫‌‪‍‫​‎‌‮‍⁯‌⁪​​⁪‮⁫‏‪​⁪‪⁭⁬‪⁫⁭​‭‮, (byte) 0);
    \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u202E‫⁭‬‌⁫‮‏‫‮‪⁬‫‫⁬⁪⁪⁭‬‏⁫⁮‏⁪‫‬‭‮⁬‪‍‫⁭‪‍⁯‫‭‍‫‮(this.\u206E‭‍⁮‪⁬​‪‪⁮‎‏‍‌‮‫‎‭‎⁮⁮⁫‭‌‮⁪⁪⁬‫‭⁬‭⁫‍⁬‎⁮‭‪⁯‮, (byte) 0);
    \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u202E‫⁭‬‌⁫‮‏‫‮‪⁬‫‫⁬⁪⁪⁭‬‏⁫⁮‏⁪‫‬‭‮⁬‪‍‫⁭‪‍⁯‫‭‍‫‮(this.\u202A‎‍‫⁮‮‏‍‏‫‌‬‪‪‏⁯‭⁯⁮‪‭⁭​⁯‭‮‫‪⁫⁮⁪⁬‫‎‪‎⁮‏‬‪‮, (byte) 0);
    \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u202E‫⁭‬‌⁫‮‏‫‮‪⁬‫‫⁬⁪⁪⁭‬‏⁫⁮‏⁪‫‬‭‮⁬‪‍‫⁭‪‍⁯‫‭‍‫‮(this.\u202E⁫⁬‏⁪⁭⁪​‬⁬‎‍‌‍‌⁭‌⁮‌‪⁫‮​​⁭⁯‬⁬‌‫⁯‏‍⁮⁬⁪⁯‌⁮‎‮, (byte) 0);
    this.\u202A‎‍‫⁮‮‏‍‏‫‌‬‪‪‏⁯‭⁯⁮‪‭⁭​⁯‭‮‫‪⁫⁮⁪⁬‫‎‪‎⁮‏‬‪‮[0] = (byte) 1;
    this.\u206E⁬‫⁪⁮‬​⁪⁬⁭‮⁬⁯⁭‎⁪‏‌⁭‌‮‍‎‬⁮⁫‏‎⁭‪‍⁯‮​‏‍⁮​⁬⁫‮.SetLength(0L);
    this.\u200E⁮⁯‫‮‮‏⁯‍⁯⁯‬⁫‎⁪‫‫‬⁮‬‍‮⁪‎‬⁪‍⁮‍‭‏⁬‮‏⁫‫‎‬‎‌‮.SetLength(0L);
    if (this.\u202E‭‎⁯‌⁪‎⁪⁪⁭‎⁮⁬‪‬⁯⁭​⁮⁭‏‍⁯⁬⁬⁭‍​‍​‍⁪⁫⁬​‮⁯‭⁭‮‮ == null)
      return;
    this.\u200C‌​⁪‫‌‌⁫⁪⁮‍⁪⁫‍⁫⁭‪⁪‭⁪‭‌‍⁭‮‫‪‏‪‬‮‪⁯⁫‬⁭⁪⁪⁪‭‮(this.\u202E‭‎⁯‌⁪‎⁪⁪⁭‎⁮⁬‪‬⁯⁭​⁮⁭‏‍⁯⁬⁬⁭‍​‍​‍⁪⁫⁬​‮⁯‭⁭‮‮, 0, this.\u202E‭‎⁯‌⁪‎⁪⁪⁭‎⁮⁬‪‬⁯⁭​⁮⁭‏‍⁯⁬⁬⁭‍​‍​‍⁪⁫⁬​‮⁯‭⁭‮‮.Length);
  }

  private void \u200B‫‬⁫‍⁫‪‪⁭‫‍‫​⁬‏‎‌⁭⁪‏​‏‏‏⁮⁯‌‮‍‏⁬‏⁮‍‭‬⁭​⁫‏‮(
    int _param1,
    byte[] _param2,
    int _param3)
  {
    _param2[_param3 + 3] = (byte) (_param1 >> 24);
    _param2[_param3 + 2] = (byte) (_param1 >> 16);
    _param2[_param3 + 1] = (byte) (_param1 >> 8);
    _param2[_param3] = (byte) _param1;
  }

  private byte \u202E‪‏‮‏⁫⁬⁭‭⁮⁮⁬‮‬​‬‮‪‎‮‏⁭‪‮‍‫⁭‫⁬‪​‍‪‮‪‍⁫‎‍‌‮(bool _param1, int _param2)
  {
    StringBuilder stringBuilder = new StringBuilder();
    if (_param1)
      stringBuilder.Append("1");
    else
      stringBuilder.Append("0");
    switch (_param2)
    {
      case 8:
        stringBuilder.Append("010");
        break;
      case 16:
        stringBuilder.Append("011");
        break;
      case 32:
        stringBuilder.Append("100");
        break;
      case 48:
        stringBuilder.Append("101");
        break;
      case 64:
        stringBuilder.Append("110");
        break;
    }
    string str = Convert.ToString(this.\u206F⁯⁬‌⁫⁯⁭⁬​​‫⁭​‍‫‍​⁬‌‏​‌‏⁯⁬‬⁫‫‬‭‍‬⁯‮‏⁫‮⁪⁫⁫‮ - 1, 2);
    while (str.Length < 4)
      str = new StringBuilder(str).Insert(0, "0").ToString();
    stringBuilder.Append(str);
    return (byte) Convert.ToInt32(stringBuilder.ToString(), 2);
  }
}
