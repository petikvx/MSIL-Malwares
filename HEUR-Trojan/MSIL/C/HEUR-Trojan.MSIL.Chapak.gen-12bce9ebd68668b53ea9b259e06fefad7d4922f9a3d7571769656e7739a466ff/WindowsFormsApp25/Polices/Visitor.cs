// Decompiled with JetBrains decompiler
// Type: WindowsFormsApp25.Polices.Visitor
// Assembly: Wlkxl, Version=0.3.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 9FA680CB-EE3E-427B-81F6-5826758D2262
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan.MSIL.Chapak.gen-12bce9ebd68668b53ea9b259e06fefad7d4922f9a3d7571769656e7739a466ff.exe

using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Globalization;
using System.Resources;

namespace WindowsFormsApp25.Polices
{
  [DebuggerNonUserCode]
  [GeneratedCode("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
  internal sealed class Visitor
  {
    private static ResourceManager _Model;
    private static CultureInfo m_Mock;
    private static IntPtr[] factory;

    private static ResourceManager WriteRules(
      ref int ident,
      ref int attr,
      ref int[] filter,
      ref bool res2,
      ref object asset3,
      ref ResourceManager v4,
      ref ResourceManager pol5)
    {
      // ISSUE: unable to decompile the method.
    }

    internal static CultureInfo DisableRules()
    {
      // ISSUE: unable to decompile the method.
    }

    private static ResourceManager FlushRules(
      ref int instance,
      ref int visitor,
      ref int[] helper,
      ref bool param2,
      ref object pred3,
      ref ResourceManager cont4,
      ref ResourceManager init5)
    {
      // ISSUE: unable to decompile the method.
    }

    internal static ResourceManager CreateRules()
    {
      // ISSUE: unable to decompile the method.
    }

    private static void LogoutRules(ref int asset, ref int cust, ref int[] pool, Visitor map2)
    {
      // ISSUE: unable to decompile the method.
    }

    private static ResourceManager InstantiateRules(
      ref int asset,
      ref int pred,
      ref int[] comp,
      ref bool config2,
      ref object key3,
      ref ResourceManager info4,
      ref ResourceManager visitor5)
    {
      // ISSUE: unable to decompile the method.
    }

    private static ResourceManager SelectRules(
      ref int def,
      ref int pol,
      ref int[] res,
      ref bool map2,
      ref object map3,
      ref ResourceManager res4,
      ref ResourceManager col5)
    {
      // ISSUE: unable to decompile the method.
    }

    private static void FillRules(ref int last, ref int attr, ref int[] template, CultureInfo v2)
    {
      // ISSUE: unable to decompile the method.
    }

    private static void ReflectRules(
      ref int reference,
      ref int map,
      ref int[] filter,
      CultureInfo param2)
    {
      // ISSUE: unable to decompile the method.
    }

    private static ResourceManager GetRules(
      ref int asset,
      ref int cust,
      ref int[] util,
      ref bool setup2,
      ref object result3,
      ref ResourceManager ident4,
      ref ResourceManager counter5)
    {
      // ISSUE: unable to decompile the method.
    }

    private static void ResolveRules(
      ref int var1,
      ref int selection,
      ref int[] template,
      Visitor value2)
    {
      // ISSUE: unable to decompile the method.
    }

    private static ResourceManager CheckRules(
      ref int first,
      ref int cust,
      ref int[] util,
      ref bool spec2,
      ref object first3,
      ref ResourceManager init4,
      ref ResourceManager var15)
    {
      // ISSUE: unable to decompile the method.
    }

    internal Visitor()
    {
      // ISSUE: unable to decompile the method.
    }

    private static CultureInfo PopRules(
      ref int init,
      ref int result,
      ref int[] role,
      ref CultureInfo visitor2)
    {
      // ISSUE: unable to decompile the method.
    }

    internal static void LoginRules(CultureInfo var1)
    {
      // ISSUE: unable to decompile the method.
    }

    private static CultureInfo CustomizeRules(
      ref int info,
      ref int ivk,
      ref int[] res,
      ref CultureInfo pred2)
    {
      // ISSUE: unable to decompile the method.
    }

    static Visitor()
    {
      // ISSUE: unable to decompile the method.
    }

    private static void CloneRules()
    {
      // ISSUE: unable to decompile the method.
    }
  }
}
