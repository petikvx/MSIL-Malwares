// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: BaseConfigHandl, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 8D741A15-4AC4-4AEF-B040-FB58D745B7BF
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-d821a006c277a3233bf056c5fcd528f49e8482ec7c153568c098d86915113f2c.exe

using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 1095341924;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 206101609)) % 4U)
          {
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 1734081878 ^ 1842075264;
              continue;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * -774569475 ^ 250009890;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -1727241062;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1904949081)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -213388373 ^ 709316064;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual string Value
    {
      get
      {
label_1:
        int num1 = 1329132007;
        string str;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2107377316)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * -1758438219 ^ 205606839;
              continue;
            case 3:
              str = "";
              num1 = (int) num2 * 469784681 ^ -1952080899;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return str;
      }
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
        int count = 0;
label_1:
        int num1 = 1571506484;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1099079348)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -994556993 ^ -877163424;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem)
    {
label_1:
      int num1 = -236826198;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1309589299)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            this.Add("", aItem);
            num1 = (int) num2 * -1554716576 ^ 162891177;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public virtual JSONNode Remove(string aKey)
    {
      JSONNode jsonNode = (JSONNode) null;
label_1:
      int num1 = 1388143079;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 511353453)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * 1004250898 ^ -1985489941;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(int aIndex)
    {
      JSONNode jsonNode = (JSONNode) null;
label_1:
      int num1 = -918011513;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1884824431)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -1470528250 ^ -297349463;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(JSONNode aNode)
    {
      JSONNode jsonNode = aNode;
label_1:
      int num1 = -558910838;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -200138532)) % 3U)
        {
          case 1:
            num1 = (int) num2 * 1891029154 ^ 282391091;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONNode.\u003Cget_Childs\u003Ed__17 getChildsD17 = new JSONNode.\u003Cget_Childs\u003Ed__17(-2);
        getChildsD17.\u003C\u003E4__this = this;
label_1:
        int num1 = 1484962289;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1244939572)) % 3U)
          {
            case 1:
              childs = (IEnumerable<JSONNode>) getChildsD17;
              num1 = (int) num2 * -83183293 ^ 904984694;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return childs;
      }
    }

    public IEnumerable<JSONNode> DeepChilds => (IEnumerable<JSONNode>) new JSONNode.\u003Cget_DeepChilds\u003Ed__19(-2)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString()
    {
label_1:
      int num1 = 1885633828;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 80540139)) % 3U)
        {
          case 1:
            str = nameof (JSONNode);
            num1 = (int) num2 * 990008217 ^ 1318881777;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual string ToString(string aPrefix)
    {
label_1:
      int num1 = -1099489380;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1599031059)) % 4U)
        {
          case 1:
            str = nameof (JSONNode);
            num1 = (int) num2 * 876623930 ^ -102544167;
            continue;
          case 2:
            num1 = (int) num2 * -1072917644 ^ -1672783311;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public virtual int AsInt
    {
      get
      {
label_1:
        int num1 = -1307527304;
        int asInt;
        int result;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1922045925)) % 8U)
          {
            case 0:
              int num3 = !flag ? -209968124 : (num3 = -363664729);
              num1 = num3 ^ (int) num2 * 840523970;
              continue;
            case 1:
              num1 = (int) num2 * 1332092127 ^ -850232175;
              continue;
            case 2:
              goto label_1;
            case 3:
              result = 0;
              flag = int.TryParse(this.Value, out result);
              num1 = (int) num2 * 1637943668 ^ 170671655;
              continue;
            case 4:
              asInt = result;
              num1 = (int) num2 * 1457977701 ^ 2020728449;
              continue;
            case 6:
              num1 = (int) num2 * 502321190 ^ -468845894;
              continue;
            case 7:
              asInt = 0;
              num1 = -708353750;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asInt;
      }
      set => this.Value = value.ToString();
    }

    public virtual float AsFloat
    {
      get
      {
label_1:
        int num1 = -1646525600;
        float asFloat;
        float result;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1588736157)) % 8U)
          {
            case 0:
              asFloat = result;
              num1 = (int) num2 * 791793128 ^ -1612588548;
              continue;
            case 1:
              int num3 = !flag ? 360885248 : (num3 = 1359840362);
              num1 = num3 ^ (int) num2 * -585177543;
              continue;
            case 2:
              asFloat = 0.0f;
              num1 = -1426846818;
              continue;
            case 3:
              result = 0.0f;
              num1 = (int) num2 * 1141673162 ^ 842754219;
              continue;
            case 4:
              goto label_1;
            case 5:
              num1 = (int) num2 * 21825876 ^ 1714194104;
              continue;
            case 6:
              flag = float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u200C‪⁪‮⁮‭‮‬⁮‏⁭⁮‎‬⁮​⁭⁭⁫⁫⁯‮⁪‬⁭‌⁯⁯‮‪‌​‏‬⁮‏‪‭‪‌‮(), out result);
              num1 = (int) num2 * 1209791797 ^ -1768896668;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asFloat;
      }
      set
      {
label_1:
        int num1 = -351360264;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1251662116)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Value = value.ToString();
              num1 = (int) num2 * 1834378371 ^ 1097106936;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual double AsDouble
    {
      get
      {
label_1:
        int num1 = -1388319142;
        bool flag;
        double asDouble;
        double result;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1913591317)) % 8U)
          {
            case 0:
              goto label_1;
            case 1:
              result = 0.0;
              num1 = (int) num2 * -1062323381 ^ -1444428441;
              continue;
            case 3:
              int num3 = !flag ? -269783666 : (num3 = -274285993);
              num1 = num3 ^ (int) num2 * 1892396376;
              continue;
            case 4:
              asDouble = result;
              num1 = (int) num2 * 1260307082 ^ 1864236365;
              continue;
            case 5:
              asDouble = 0.0;
              num1 = -2054965775;
              continue;
            case 6:
              num1 = (int) num2 * 1687362081 ^ 962981663;
              continue;
            case 7:
              flag = double.TryParse(this.Value, out result);
              num1 = (int) num2 * -657957045 ^ 1442159565;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asDouble;
      }
      set => this.Value = value.ToString();
    }

    public virtual bool AsBool
    {
      get
      {
label_1:
        int num1 = 82142171;
        bool result;
        bool asBool;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 98399383)) % 8U)
          {
            case 0:
              asBool = result;
              num1 = (int) num2 * -833600508 ^ 2113137104;
              continue;
            case 1:
              num1 = (int) num2 * 901319355 ^ -602084286;
              continue;
            case 2:
              int num3 = flag ? -1830115713 : (num3 = -1760078852);
              num1 = num3 ^ (int) num2 * -648461024;
              continue;
            case 3:
              asBool = !JSONNode.\u206A‏⁭‪⁬⁬‪‍‫⁫‍‬⁬‬⁫‬‪‫‌‮‪⁬‌​‪⁬‮⁭⁪‭⁪⁫‮​‬​⁪‭⁭‎‮(this.Value);
              num1 = 463357942;
              continue;
            case 4:
              result = false;
              flag = bool.TryParse(this.Value, out result);
              num1 = (int) num2 * -290793595 ^ -1734057743;
              continue;
            case 5:
              goto label_1;
            case 7:
              num1 = (int) num2 * 976824811 ^ -1875441260;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asBool;
      }
      set
      {
label_1:
        int num1 = -1935249456;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1734006700)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Value = value ? "true" : "false";
              num1 = -891632344;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = 432604231;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1210607854)) % 3U)
          {
            case 1:
              asArray = this as JSONArray;
              num1 = (int) num2 * -640823733 ^ -1107170717;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return asArray;
      }
    }

    public virtual JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = 1230656909;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 245621875)) % 3U)
          {
            case 1:
              asObject = this as JSONClass;
              num1 = (int) num2 * 1871949925 ^ 678013102;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s)
    {
label_1:
      int num1 = 2078304623;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1508206234)) % 4U)
        {
          case 1:
            jsonNode = (JSONNode) new JSONData(s);
            num1 = (int) num2 * 340330221 ^ 1912056528;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * 1548246829 ^ 1476758625;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public static implicit operator string(JSONNode d)
    {
label_1:
      int num1 = 1703525777;
      string str1;
      while (true)
      {
        uint num2;
        string str2;
        switch ((num2 = (uint) (num1 ^ 571890874)) % 5U)
        {
          case 0:
            str2 = d.Value;
            break;
          case 1:
            num1 = (int) num2 * -1144399335 ^ 47540061;
            continue;
          case 3:
            if (!(d == (object) null))
            {
              num1 = (int) num2 * -1483118750 ^ 580990348;
              continue;
            }
            str2 = (string) null;
            break;
          case 4:
            goto label_1;
          default:
            goto label_9;
        }
        str1 = str2;
        num1 = 1989364771;
      }
label_9:
      return str1;
    }

    public static bool operator ==(JSONNode a, object b)
    {
label_1:
      int num1 = -1760123220;
      bool flag;
      while (true)
      {
        uint num2;
        int num3;
        switch ((num2 = (uint) (num1 ^ -673798382)) % 7U)
        {
          case 0:
            flag = (object) a == b;
            num1 = -199246362;
            continue;
          case 1:
            num1 = (int) num2 * 762086607 ^ 1703566346;
            continue;
          case 3:
            num3 = a is JSONLazyCreator ? 1 : 0;
            break;
          case 4:
            goto label_1;
          case 5:
            if (b != null)
            {
              num3 = 0;
              break;
            }
            num1 = (int) num2 * -1601627526 ^ -17807501;
            continue;
          case 6:
            flag = true;
            num1 = (int) num2 * 1586575744 ^ 47600326;
            continue;
          default:
            goto label_11;
        }
        int num4;
        num1 = num4 = num3 != 0 ? -1347259525 : (num4 = -1915354559);
      }
label_11:
      return flag;
    }

    public static bool operator !=(JSONNode a, object b)
    {
label_1:
      int num1 = -1880366947;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -782405236)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -1210313916 ^ 497072366;
            continue;
          case 1:
            flag = !(a == b);
            num1 = (int) num2 * 820096598 ^ 102653674;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = -2139761247;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1811722113)) % 3U)
        {
          case 1:
            flag = (object) this == obj;
            num1 = (int) num2 * -1184356419 ^ 1241344165;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override int GetHashCode() => this.\u206E⁬‏‍⁪‪​‌‪‎​‎⁯‬‍‍‪‫⁬​‎⁮‎‫⁯⁯⁫⁮⁬‌⁭‫‏​‍‬⁪​‏‪‮();

    internal static string Escape(string aText)
    {
label_1:
      int num1 = -887341034;
      char ch1;
      string str1;
      int num2;
      char ch2;
      char ch3;
      string str2;
      string str3;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -303511369)) % 32U)
        {
          case 0:
            num1 = (int) num3 * 2112512292 ^ -1354241963;
            continue;
          case 1:
            str1 = "";
            num1 = (int) num3 * 1342457168 ^ 569042366;
            continue;
          case 3:
            int num4;
            num1 = num4 = num2 < JSONNode.\u206E‎​⁯‮‎⁯⁬⁫‍⁫‍‫‏⁬‪‫⁫⁬​⁬‌‬‬⁯‍⁮⁬⁭‫⁭⁪⁮‌‌‮⁯‫‏‮(str2) ? -840062269 : (num4 = -1648169566);
            continue;
          case 4:
            num1 = (int) num3 * -788770020 ^ -1620809984;
            continue;
          case 5:
            str2 = aText;
            num1 = (int) num3 * 623362950 ^ 1885278689;
            continue;
          case 6:
            num1 = (int) num3 * 545972845 ^ 460817289;
            continue;
          case 7:
label_24:
            str1 = JSONNode.\u202B⁭‪‬​⁫‍‮⁬​⁭⁮‍‫⁯‌⁪‏⁮⁭‎‫⁫‭⁯‫‫⁭‭‬‎⁭⁮‪⁮‍​⁭‭‮‮(str1, ch2.ToString());
            num1 = -1742096740;
            continue;
          case 8:
            num2 = 0;
            num1 = (int) num3 * 690601573 ^ 887816732;
            continue;
          case 9:
            int num5;
            num1 = num5 = ch1 != '\\' ? -1610949805 : (num5 = -1634080488);
            continue;
          case 10:
label_5:
            str1 = JSONNode.\u202B⁭‪‬​⁫‍‮⁬​⁭⁮‍‫⁯‌⁪‏⁮⁭‎‫⁫‭⁯‫‫⁭‭‬‎⁭⁮‪⁮‍​⁭‭‮‮(str1, "\\b");
            num1 = -1805960377;
            continue;
          case 11:
            num1 = (int) num3 * 1017210922 ^ -833613751;
            continue;
          case 12:
            int num6;
            num1 = num6 = ch1 != '"' ? -1340191447 : (num6 = -954175254);
            continue;
          case 13:
            num1 = (int) num3 * 1344917343 ^ -1228348684;
            continue;
          case 14:
            ++num2;
            num1 = (int) num3 * 1022886574 ^ 2058960112;
            continue;
          case 15:
            str1 = JSONNode.\u202B⁭‪‬​⁫‍‮⁬​⁭⁮‍‫⁯‌⁪‏⁮⁭‎‫⁫‭⁯‫‫⁭‭‬‎⁭⁮‪⁮‍​⁭‭‮‮(str1, "\\\\");
            num1 = -1805960377;
            continue;
          case 16:
            num1 = -2114512999;
            continue;
          case 17:
            ch1 = ch3;
            num1 = (int) num3 * -161201118 ^ 294728966;
            continue;
          case 18:
            num1 = (int) num3 * -565454380 ^ -2032229585;
            continue;
          case 19:
            switch (ch1)
            {
              case '\b':
                goto label_5;
              case '\t':
                goto label_19;
              case '\n':
                goto label_25;
              case '\v':
                goto label_24;
              case '\f':
                goto label_6;
              case '\r':
                goto label_13;
              default:
                num1 = (int) num3 * -1559578862 ^ -437618086;
                continue;
            }
          case 20:
            ch2 = JSONNode.\u206E⁫‫‍⁪⁮‪‏⁯‬‫⁫⁫‬‬⁯‬‏‎​‫‏⁯​‏‍‌⁫⁯⁭‭⁫‮⁮‎‏⁭⁫‌‏‮(str2, num2);
            num1 = -1696380757;
            continue;
          case 21:
            str3 = str1;
            num1 = (int) num3 * 1204920789 ^ 1204152078;
            continue;
          case 22:
            goto label_1;
          case 23:
label_13:
            str1 = JSONNode.\u202B⁭‪‬​⁫‍‮⁬​⁭⁮‍‫⁯‌⁪‏⁮⁭‎‫⁫‭⁯‫‫⁭‭‬‎⁭⁮‪⁮‍​⁭‭‮‮(str1, "\\r");
            num1 = -1838837094;
            continue;
          case 24:
label_6:
            str1 = JSONNode.\u202B⁭‪‬​⁫‍‮⁬​⁭⁮‍‫⁯‌⁪‏⁮⁭‎‫⁫‭⁯‫‫⁭‭‬‎⁭⁮‪⁮‍​⁭‭‮‮(str1, "\\f");
            num1 = -1622112571;
            continue;
          case 25:
            num1 = (int) num3 * -1228637470 ^ -1240390080;
            continue;
          case 26:
label_25:
            str1 = JSONNode.\u202B⁭‪‬​⁫‍‮⁬​⁭⁮‍‫⁯‌⁪‏⁮⁭‎‫⁫‭⁯‫‫⁭‭‬‎⁭⁮‪⁮‍​⁭‭‮‮(str1, "\\n");
            num1 = -1805960377;
            continue;
          case 27:
            num1 = (int) num3 * -813111032 ^ 1632215363;
            continue;
          case 28:
            ch3 = ch2;
            num1 = (int) num3 * -601757268 ^ -765719530;
            continue;
          case 29:
            str1 = JSONNode.\u202B⁭‪‬​⁫‍‮⁬​⁭⁮‍‫⁯‌⁪‏⁮⁭‎‫⁫‭⁯‫‫⁭‭‬‎⁭⁮‪⁮‍​⁭‭‮‮(str1, "\\\"");
            num1 = -1230216207;
            continue;
          case 30:
            num1 = (int) num3 * 1154599283 ^ 1960578116;
            continue;
          case 31:
label_19:
            str1 = JSONNode.\u202B⁭‪‬​⁫‍‮⁬​⁭⁮‍‫⁯‌⁪‏⁮⁭‎‫⁫‭⁯‫‫⁭‭‬‎⁭⁮‪⁮‍​⁭‭‮‮(str1, "\\t");
            num1 = -1805960377;
            continue;
          default:
            goto label_34;
        }
      }
label_34:
      return str3;
    }

    public static JSONNode Parse(string aJSON)
    {
      Stack<JSONNode> jsonNodeStack = new Stack<JSONNode>();
      JSONNode jsonNode1 = (JSONNode) null;
label_1:
      int num1 = -1495987841;
      string aKey;
      bool flag1;
      char ch1;
      bool flag2;
      char ch2;
      bool flag3;
      string aItem;
      bool flag4;
      char ch3;
      int num2;
      char ch4;
      bool flag5;
      JSONNode jsonNode2;
      bool flag6;
      bool flag7;
      bool flag8;
      bool flag9;
      bool flag10;
      bool flag11;
      bool flag12;
      bool flag13;
      bool flag14;
      bool flag15;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -963888382)) % 156U)
        {
          case 0:
          case 48:
          case 53:
          case 64:
          case 81:
label_41:
            ++num2;
            num1 = -282407628;
            continue;
          case 1:
            int num4 = flag3 ? 947102391 : (num4 = 1188024306);
            num1 = num4 ^ (int) num3 * 634986570;
            continue;
          case 2:
            jsonNodeStack.Pop();
            num1 = -1953161967;
            continue;
          case 3:
            aKey = aItem;
            num1 = -1151748955;
            continue;
          case 4:
            string str1 = aItem;
            ch4 = JSONNode.\u206E⁫‫‍⁪⁮‪‏⁯‬‫⁫⁫‬‬⁯‬‏‎​‫‏⁯​‏‍‌⁫⁯⁭‭⁫‮⁮‎‏⁭⁫‌‏‮(aJSON, num2);
            string str2 = ch4.ToString();
            aItem = JSONNode.\u202B⁭‪‬​⁫‍‮⁬​⁭⁮‍‫⁯‌⁪‏⁮⁭‎‫⁫‭⁯‫‫⁭‭‬‎⁭⁮‪⁮‍​⁭‭‮‮(str1, str2);
            num1 = (int) num3 * -114710274 ^ -348232229;
            continue;
          case 5:
label_31:
            int num5;
            num1 = num5 = !flag1 ? -1993954295 : (num5 = -1187680376);
            continue;
          case 6:
            aKey = JSONNode.\u206F⁪‏⁮‮‍‍‮‭​​⁪​‫⁮‮‮‪‫‌‏⁮‍‏⁬‌​‏​​⁮‮⁯‮‌‏‪‫‭‏‮(aKey);
            num1 = (int) num3 * -168770530 ^ -515782368;
            continue;
          case 7:
            num1 = (int) num3 * -1709991796 ^ -731416266;
            continue;
          case 8:
label_131:
            aItem = JSONNode.\u202B⁭‪‬​⁫‍‮⁬​⁭⁮‍‫⁯‌⁪‏⁮⁭‎‫⁫‭⁯‫‫⁭‭‬‎⁭⁮‪⁮‍​⁭‭‮‮(aItem, "\t");
            num1 = -862018987;
            continue;
          case 9:
            int num6;
            num1 = num6 = ch1 != '}' ? -188339731 : (num6 = -1502577052);
            continue;
          case 10:
            int num7 = flag10 ? 1308005251 : (num7 = 1722760616);
            num1 = num7 ^ (int) num3 * -740400746;
            continue;
          case 11:
            int num8;
            num1 = num8 = ch1 == '"' ? -511957962 : (num8 = -1975160907);
            continue;
          case 12:
            num1 = -1246588038;
            continue;
          case 13:
            int num9 = !flag14 ? -1773097042 : (num9 = -2146185129);
            num1 = num9 ^ (int) num3 * -1298558995;
            continue;
          case 14:
            string str3 = aItem;
            ch4 = JSONNode.\u206E⁫‫‍⁪⁮‪‏⁯‬‫⁫⁫‬‬⁯‬‏‎​‫‏⁯​‏‍‌⁫⁯⁭‭⁫‮⁮‎‏⁭⁫‌‏‮(aJSON, num2);
            string str4 = ch4.ToString();
            aItem = JSONNode.\u202B⁭‪‬​⁫‍‮⁬​⁭⁮‍‫⁯‌⁪‏⁮⁭‎‫⁫‭⁯‫‫⁭‭‬‎⁭⁮‪⁮‍​⁭‭‮‮(str3, str4);
            num1 = (int) num3 * -924107600 ^ 1999264098;
            continue;
          case 15:
label_125:
            aItem = JSONNode.\u202B⁭‪‬​⁫‍‮⁬​⁭⁮‍‫⁯‌⁪‏⁮⁭‎‫⁫‭⁯‫‫⁭‭‬‎⁭⁮‪⁮‍​⁭‭‮‮(aItem, "\r");
            num1 = -1865680222;
            continue;
          case 16:
            int num10;
            num1 = num10 = ch1 == ' ' ? -762423516 : (num10 = -1008912405);
            continue;
          case 17:
            num1 = (int) num3 * -1525454685 ^ -676705880;
            continue;
          case 18:
            num1 = (int) num3 * 892535801 ^ 1415572993;
            continue;
          case 19:
            num1 = (int) num3 * 1919494820 ^ -1609354621;
            continue;
          case 20:
            num1 = (int) num3 * -20320786 ^ -1290173184;
            continue;
          case 21:
            num1 = (int) num3 * 1158501444 ^ 316360054;
            continue;
          case 22:
            switch (ch1)
            {
              case '\t':
                goto label_123;
              case '\n':
              case '\r':
                goto label_41;
              case '\v':
              case '\f':
                goto label_70;
              default:
                num1 = (int) num3 * -669150772 ^ -1271614100;
                continue;
            }
          case 23:
            flag3 = jsonNode1 != (object) null;
            num1 = (int) num3 * -649471355 ^ -1945778312;
            continue;
          case 24:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -1159174399 ^ 587034202;
            continue;
          case 25:
            num1 = (int) num3 * 1789383465 ^ -1779462252;
            continue;
          case 26:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 1111171963 ^ -1181497161;
            continue;
          case 27:
            aKey = JSONNode.\u206F⁪‏⁮‮‍‍‮‭​​⁪​‫⁮‮‮‪‫‌‏⁮‍‏⁬‌​‏​​⁮‮⁯‮‌‏‪‫‭‏‮(aKey);
            flag11 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 1287836327 ^ 383002088;
            continue;
          case 28:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 635720766 ^ -530022149;
            continue;
          case 29:
            num1 = (int) num3 * -720133369 ^ -545904247;
            continue;
          case 30:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -1508306588 ^ 1733852094;
            continue;
          case 31:
            num1 = (int) num3 * 1844715921 ^ 1076840584;
            continue;
          case 32:
            int num11;
            num1 = num11 = ch1 != '{' ? -642540824 : (num11 = -1413538024);
            continue;
          case 33:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -1528299455 ^ 2092010975;
            continue;
          case 34:
            aKey = "";
            num1 = -1567658557;
            continue;
          case 35:
            aItem = "";
            num1 = (int) num3 * 1269953893 ^ 652872679;
            continue;
          case 36:
            num1 = -879513903;
            continue;
          case 37:
            aItem = "";
            num1 = (int) num3 * 289554685 ^ 1358872961;
            continue;
          case 38:
            ch2 = ch3;
            num1 = (int) num3 * -60577750 ^ 1086018336;
            continue;
          case 39:
            aKey = "";
            num1 = -174341651;
            continue;
          case 40:
            aItem = JSONNode.\u202B⁭‪‬​⁫‍‮⁬​⁭⁮‍‫⁯‌⁪‏⁮⁭‎‫⁫‭⁯‫‫⁭‭‬‎⁭⁮‪⁮‍​⁭‭‮‮(aItem, "\n");
            num1 = -1966657144;
            continue;
          case 41:
            switch (ch1)
            {
              case '[':
                goto label_31;
              case '\\':
                goto label_73;
              case ']':
                goto label_116;
              default:
                num1 = -709354886;
                continue;
            }
          case 42:
            string str5 = aItem;
            ch4 = JSONNode.\u206E⁫‫‍⁪⁮‪‏⁯‬‫⁫⁫‬‬⁯‬‏‎​‫‏⁯​‏‍‌⁫⁯⁭‭⁫‮⁮‎‏⁭⁫‌‏‮(aJSON, num2);
            string str6 = ch4.ToString();
            aItem = JSONNode.\u202B⁭‪‬​⁫‍‮⁬​⁭⁮‍‫⁯‌⁪‏⁮⁭‎‫⁫‭⁯‫‫⁭‭‬‎⁭⁮‪⁮‍​⁭‭‮‮(str5, str6);
            num1 = (int) num3 * -319928345 ^ -295613372;
            continue;
          case 43:
            num1 = -476854818;
            continue;
          case 44:
            int num12 = flag7 ? -724397242 : (num12 = -118349284);
            num1 = num12 ^ (int) num3 * -100892353;
            continue;
          case 45:
            int num13;
            num1 = num13 = !flag1 ? -2068807315 : (num13 = -810469005);
            continue;
          case 46:
            num1 = (int) num3 * -1479106647 ^ -501907645;
            continue;
          case 47:
            num2 += 4;
            num1 = (int) num3 * -1972260468 ^ 1351101697;
            continue;
          case 49:
            aItem = "";
            num1 = (int) num3 * 1353486961 ^ 571933107;
            continue;
          case 50:
            int num14;
            num1 = num14 = jsonNodeStack.Count == 0 ? -626561394 : (num14 = -744769712);
            continue;
          case 51:
            num1 = (int) num3 * -279693960 ^ 309326480;
            continue;
          case 52:
            int num15 = !flag15 ? 1399251374 : (num15 = 1407908787);
            num1 = num15 ^ (int) num3 * 322046032;
            continue;
          case 54:
label_116:
            flag10 = flag1;
            num1 = -649903032;
            continue;
          case 55:
            num1 = (int) num3 * 956508059 ^ -1653326153;
            continue;
          case 56:
            num1 = (int) num3 * 1278657053 ^ 1571509140;
            continue;
          case 57:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 1739385756 ^ -2146586993;
            continue;
          case 58:
            int num16 = ch1 > ',' ? -749190706 : (num16 = -963878303);
            num1 = num16 ^ (int) num3 * 100645624;
            continue;
          case 59:
            aKey = "";
            num1 = -180266145;
            continue;
          case 60:
            num1 = (int) num3 * -1697929726 ^ 1652770484;
            continue;
          case 61:
            num1 = -618450183;
            continue;
          case 62:
            flag15 = jsonNodeStack.Count > 0;
            num1 = (int) num3 * 677798324 ^ 1688942390;
            continue;
          case 63:
label_91:
            num1 = -2019681233;
            continue;
          case 65:
            num1 = (int) num3 * -1135098012 ^ 1281253516;
            continue;
          case 66:
            flag6 = flag1;
            num1 = -432832018;
            continue;
          case 67:
            int num17 = ch1 != ':' ? -242874675 : (num17 = -917516309);
            num1 = num17 ^ (int) num3 * -1392357676;
            continue;
          case 68:
            num1 = (int) num3 * -653138634 ^ 1707670018;
            continue;
          case 69:
            num1 = (int) num3 * -1900669053 ^ 550212213;
            continue;
          case 70:
            flag4 = JSONNode.\u200E‬⁯‍​⁯⁮‌⁭⁫‬‪‮‬⁫‬‍‬⁪⁯‍‭⁮⁯⁬⁫‏‌​‫​‬⁯‬⁬⁯⁪‭​‏‮(aItem, "");
            num1 = -1877430393;
            continue;
          case 71:
            num1 = (int) num3 * 100803660 ^ -961694802;
            continue;
          case 72:
            ch3 = JSONNode.\u206E⁫‫‍⁪⁮‪‏⁯‬‫⁫⁫‬‬⁯‬‏‎​‫‏⁯​‏‍‌⁫⁯⁭‭⁫‮⁮‎‏⁭⁫‌‏‮(aJSON, num2);
            num1 = (int) num3 * 397956388 ^ 1281804892;
            continue;
          case 73:
            int num18;
            num1 = num18 = !JSONNode.\u200E‬⁯‍​⁯⁮‌⁭⁫‬‪‮‬⁫‬‍‬⁪⁯‍‭⁮⁯⁬⁫‏‌​‫​‬⁯‬⁬⁯⁪‭​‏‮(aKey, "") ? -909688339 : (num18 = -1449284657);
            continue;
          case 74:
            num1 = (int) num3 * -2073668747 ^ 494499248;
            continue;
          case 75:
            num1 = (int) num3 * 534006689 ^ 884956639;
            continue;
          case 76:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 1690128978 ^ 1304446521;
            continue;
          case 77:
            jsonNode2 = jsonNode1;
            num1 = -686319586;
            continue;
          case 78:
            string str7 = aItem;
            ch4 = JSONNode.\u206E⁫‫‍⁪⁮‪‏⁯‬‫⁫⁫‬‬⁯‬‏‎​‫‏⁯​‏‍‌⁫⁯⁭‭⁫‮⁮‎‏⁭⁫‌‏‮(aJSON, num2);
            string str8 = ch4.ToString();
            aItem = JSONNode.\u202B⁭‪‬​⁫‍‮⁬​⁭⁮‍‫⁯‌⁪‏⁮⁭‎‫⁫‭⁯‫‫⁭‭‬‎⁭⁮‪⁮‍​⁭‭‮‮(str7, str8);
            num1 = (int) num3 * -813914558 ^ 1528483693;
            continue;
          case 79:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            num1 = -1201074134;
            continue;
          case 80:
            num1 = -1998596839;
            continue;
          case 82:
            num1 = -454263032;
            continue;
          case 83:
            int num19 = flag8 ? 811761077 : (num19 = 1068515836);
            num1 = num19 ^ (int) num3 * 1220847532;
            continue;
          case 84:
            int num20 = !flag6 ? -88861191 : (num20 = -1168090928);
            num1 = num20 ^ (int) num3 * 2053681213;
            continue;
          case 85:
            num1 = (int) num3 * 1052018348 ^ 1304550526;
            continue;
          case 86:
            num1 = (int) num3 * 1280134990 ^ -985529776;
            continue;
          case 87:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num1 = -320966939;
            continue;
          case 88:
            int num21;
            num1 = num21 = !JSONNode.\u200E‬⁯‍​⁯⁮‌⁭⁫‬‪‮‬⁫‬‍‬⁪⁯‍‭⁮⁯⁬⁫‏‌​‫​‬⁯‬⁬⁯⁪‭​‏‮(aKey, "") ? -1132057414 : (num21 = -674195736);
            continue;
          case 89:
            string str9 = aItem;
            ch4 = JSONNode.\u206E⁫‫‍⁪⁮‪‏⁯‬‫⁫⁫‬‬⁯‬‏‎​‫‏⁯​‏‍‌⁫⁯⁭‭⁫‮⁮‎‏⁭⁫‌‏‮(aJSON, num2);
            string str10 = ch4.ToString();
            aItem = JSONNode.\u202B⁭‪‬​⁫‍‮⁬​⁭⁮‍‫⁯‌⁪‏⁮⁭‎‫⁫‭⁯‫‫⁭‭‬‎⁭⁮‪⁮‍​⁭‭‮‮(str9, str10);
            num1 = (int) num3 * -599256256 ^ 846099023;
            continue;
          case 90:
            num1 = (int) num3 * 271235765 ^ 348658363;
            continue;
          case 91:
            num1 = (int) num3 * -1530760489 ^ 948648259;
            continue;
          case 92:
            goto label_1;
          case 93:
            num2 = 0;
            aItem = "";
            num1 = (int) num3 * 1991296562 ^ -311642859;
            continue;
          case 94:
            flag7 = JSONNode.\u200E‬⁯‍​⁯⁮‌⁭⁫‬‪‮‬⁫‬‍‬⁪⁯‍‭⁮⁯⁬⁫‏‌​‫​‬⁯‬⁬⁯⁪‭​‏‮(aKey, "");
            num1 = -365726242;
            continue;
          case 95:
            int num22;
            num1 = num22 = num2 < JSONNode.\u206E‎​⁯‮‎⁯⁬⁫‍⁫‍‫‏⁬‪‫⁫⁬​⁬‌‬‬⁯‍⁮⁬⁭‫⁭⁪⁮‌‌‮⁯‫‏‮(aJSON) ? -1272874577 : (num22 = -2108799082);
            continue;
          case 96:
            flag2 = jsonNode1 != (object) null;
            num1 = (int) num3 * 1430496973 ^ 236176805;
            continue;
          case 97:
            aKey = "";
            flag1 = false;
            num1 = (int) num3 * 1374739785 ^ 2010806832;
            continue;
          case 98:
            int num23 = !(jsonNode1 is JSONArray) ? -452141751 : (num23 = -1927524558);
            num1 = num23 ^ (int) num3 * 332907814;
            continue;
          case 99:
            aItem = "";
            num1 = (int) num3 * -878991103 ^ 552496548;
            continue;
          case 100:
            int num24 = ch2 != 'b' ? -1962517385 : (num24 = -1593973180);
            num1 = num24 ^ (int) num3 * 986362024;
            continue;
          case 101:
            num1 = (int) num3 * 931381955 ^ 840539245;
            continue;
          case 102:
label_70:
            string str11 = aItem;
            ch4 = JSONNode.\u206E⁫‫‍⁪⁮‪‏⁯‬‫⁫⁫‬‬⁯‬‏‎​‫‏⁯​‏‍‌⁫⁯⁭‭⁫‮⁮‎‏⁭⁫‌‏‮(aJSON, num2);
            string str12 = ch4.ToString();
            aItem = JSONNode.\u202B⁭‪‬​⁫‍‮⁬​⁭⁮‍‫⁯‌⁪‏⁮⁭‎‫⁫‭⁯‫‫⁭‭‬‎⁭⁮‪⁮‍​⁭‭‮‮(str11, str12);
            num1 = -992326280;
            continue;
          case 103:
            int num25 = !flag11 ? -295383419 : (num25 = -1087866964);
            num1 = num25 ^ (int) num3 * -722244309;
            continue;
          case 104:
            int num26 = !flag1 ? -429027414 : (num26 = -324419380);
            num1 = num26 ^ (int) num3 * -115491180;
            continue;
          case 105:
            num1 = (int) num3 * -1954958014 ^ -713963382;
            continue;
          case 106:
            aItem = JSONNode.\u202B⁭‪‬​⁫‍‮⁬​⁭⁮‍‫⁯‌⁪‏⁮⁭‎‫⁫‭⁯‫‫⁭‭‬‎⁭⁮‪⁮‍​⁭‭‮‮(aItem, "\b");
            num1 = -1865680222;
            continue;
          case 107:
            flag13 = JSONNode.\u200E‬⁯‍​⁯⁮‌⁭⁫‬‪‮‬⁫‬‍‬⁪⁯‍‭⁮⁯⁬⁫‏‌​‫​‬⁯‬⁬⁯⁪‭​‏‮(aKey, "");
            num1 = -2085258287;
            continue;
          case 108:
label_73:
            ++num2;
            num1 = -1368146138;
            continue;
          case 109:
            int num27;
            num1 = num27 = ch2 != 'f' ? -1125675480 : (num27 = -620446361);
            continue;
          case 110:
            goto label_75;
          case 111:
            num1 = (int) num3 * -2115503957 ^ 858790263;
            continue;
          case 112:
            string str13 = aItem;
            ch4 = JSONNode.\u206E⁫‫‍⁪⁮‪‏⁯‬‫⁫⁫‬‬⁯‬‏‎​‫‏⁯​‏‍‌⁫⁯⁭‭⁫‮⁮‎‏⁭⁫‌‏‮(aJSON, num2);
            string str14 = ch4.ToString();
            aItem = JSONNode.\u202B⁭‪‬​⁫‍‮⁬​⁭⁮‍‫⁯‌⁪‏⁮⁭‎‫⁫‭⁯‫‫⁭‭‬‎⁭⁮‪⁮‍​⁭‭‮‮(str13, str14);
            num1 = (int) num3 * -13562490 ^ 337473504;
            continue;
          case 113:
            num1 = (int) num3 * -1221518456 ^ 1928609028;
            continue;
          case 114:
            num1 = (int) num3 * 1600106678 ^ 269472190;
            continue;
          case 115:
            int num28 = ch1 <= ' ' ? 2053633762 : (num28 = 713067747);
            num1 = num28 ^ (int) num3 * -1497904174;
            continue;
          case 116:
            int num29;
            num1 = num29 = ch1 > ']' ? -697942186 : (num29 = -1451927047);
            continue;
          case 117:
            num1 = (int) num3 * 725388949 ^ -833005157;
            continue;
          case 118:
            num1 = (int) num3 * -1001388882 ^ -970544082;
            continue;
          case 119:
            ch1 = JSONNode.\u206E⁫‫‍⁪⁮‪‏⁯‬‫⁫⁫‬‬⁯‬‏‎​‫‏⁯​‏‍‌⁫⁯⁭‭⁫‮⁮‎‏⁭⁫‌‏‮(aJSON, num2);
            num1 = (int) num3 * 1654636333 ^ -1856227269;
            continue;
          case 120:
            flag9 = flag1;
            num1 = (int) num3 * 611023969 ^ -190837658;
            continue;
          case 121:
            num1 = (int) num3 * 1326588757 ^ 1874695373;
            continue;
          case 122:
            flag8 = flag1;
            num1 = -601297331;
            continue;
          case 123:
            int num30 = !JSONNode.\u200E‬⁯‍​⁯⁮‌⁭⁫‬‪‮‬⁫‬‍‬⁪⁯‍‭⁮⁯⁬⁫‏‌​‫​‬⁯‬⁬⁯⁪‭​‏‮(aItem, "") ? -253380737 : (num30 = -1290335348);
            num1 = num30 ^ (int) num3 * 277433690;
            continue;
          case 124:
            aKey = JSONNode.\u206F⁪‏⁮‮‍‍‮‭​​⁪​‫⁮‮‮‪‫‌‏⁮‍‏⁬‌​‏​​⁮‮⁯‮‌‏‪‫‭‏‮(aKey);
            flag5 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -1921806702 ^ 1295895132;
            continue;
          case 125:
            string s = JSONNode.\u206C⁪‭⁪‪⁫⁫⁪⁮‫‮‬‎‭⁬‪‮‍⁪‬⁭‭‫‌⁮‏‌⁪⁬⁬‫‍‮‮‫​⁪‎‭‫‮(aJSON, num2 + 1, 4);
            string str15 = aItem;
            ch4 = (char) int.Parse(s, NumberStyles.AllowHexSpecifier);
            string str16 = ch4.ToString();
            aItem = JSONNode.\u202B⁭‪‬​⁫‍‮⁬​⁭⁮‍‫⁯‌⁪‏⁮⁭‎‫⁫‭⁯‫‫⁭‭‬‎⁭⁮‪⁮‍​⁭‭‮‮(str15, str16);
            num1 = (int) num3 * 249262838 ^ 1150537207;
            continue;
          case 126:
label_123:
            flag14 = flag1;
            num1 = -529185173;
            continue;
          case (uint) sbyte.MaxValue:
            int num31 = flag12 ? 1051771660 : (num31 = 370947595);
            num1 = num31 ^ (int) num3 * -462309668;
            continue;
          case 128:
            flag1 = !flag1;
            num1 = -557245249;
            continue;
          case 129:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 1970032004 ^ -1663102119;
            continue;
          case 130:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 194762146 ^ -311509400;
            continue;
          case 131:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -1444593931 ^ -190714508;
            continue;
          case 132:
            int num32 = !flag9 ? 1920189771 : (num32 = 1455513171);
            num1 = num32 ^ (int) num3 * -1807248814;
            continue;
          case 133:
            flag12 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 2043400813 ^ 1075250640;
            continue;
          case 134:
            int num33 = ch2 <= 'f' ? 560747310 : (num33 = 1135178584);
            num1 = num33 ^ (int) num3 * -254821688;
            continue;
          case 135:
            num1 = (int) num3 * 1724881070 ^ -928735464;
            continue;
          case 136:
            switch (ch2)
            {
              case 'r':
                goto label_125;
              case 's':
                goto label_19;
              case 't':
                goto label_131;
              case 'u':
                goto label_91;
              default:
                num1 = -511278826;
                continue;
            }
          case 137:
            int num34;
            num1 = num34 = ch1 != ',' ? -1734343466 : (num34 = -1053652476);
            continue;
          case 138:
            int num35 = !flag5 ? 1722217728 : (num35 = 678629247);
            num1 = num35 ^ (int) num3 * 1792486053;
            continue;
          case 139:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 893908442 ^ 1205744245;
            continue;
          case 140:
            aKey = "";
            aItem = "";
            num1 = -1734819134;
            continue;
          case 141:
            num1 = (int) num3 * 1283142071 ^ 1584012149;
            continue;
          case 142:
            int num36;
            num1 = num36 = ch2 != 'n' ? -1522254329 : (num36 = -1830175614);
            continue;
          case 143:
            int num37 = flag13 ? -673754755 : (num37 = -1541530260);
            num1 = num37 ^ (int) num3 * 310792726;
            continue;
          case 145:
            aItem = JSONNode.\u202B⁭‪‬​⁫‍‮⁬​⁭⁮‍‫⁯‌⁪‏⁮⁭‎‫⁫‭⁯‫‫⁭‭‬‎⁭⁮‪⁮‍​⁭‭‮‮(aItem, "\f");
            num1 = -152840681;
            continue;
          case 146:
            num1 = (int) num3 * 1134823077 ^ -486083412;
            continue;
          case 147:
            num1 = (int) num3 * -1241183095 ^ 1570298814;
            continue;
          case 148:
            num1 = (int) num3 * 1779651552 ^ -823728068;
            continue;
          case 149:
            int num38 = flag4 ? -1029668025 : (num38 = -1127504192);
            num1 = num38 ^ (int) num3 * -82720762;
            continue;
          case 150:
            num1 = (int) num3 * 2055192521 ^ 1648984332;
            continue;
          case 151:
            num1 = (int) num3 * 564553851 ^ -1511832546;
            continue;
          case 152:
            goto label_100;
          case 153:
            num1 = (int) num3 * 805445512 ^ -268420726;
            continue;
          case 154:
label_19:
            aItem = JSONNode.\u202B⁭‪‬​⁫‍‮⁬​⁭⁮‍‫⁯‌⁪‏⁮⁭‎‫⁫‭⁯‫‫⁭‭‬‎⁭⁮‪⁮‍​⁭‭‮‮(aItem, ch3.ToString());
            num1 = -286184769;
            continue;
          case 155:
            int num39 = !flag2 ? 742617352 : (num39 = 583520763);
            num1 = num39 ^ (int) num3 * -2053675457;
            continue;
          default:
            goto label_156;
        }
      }
label_75:
      throw JSONNode.\u206A‌⁯‮‌⁯‌⁫‮​⁭‌‭⁫⁭‫​⁪‌‮‍⁭‪⁬‬⁪‬⁪‭⁬​‎‌‍‎​⁮‬⁯⁪‮("JSON Parse: Quotation marks seems to be messed up.");
label_100:
      throw JSONNode.\u206A‌⁯‮‌⁯‌⁫‮​⁭‌‭⁫⁭‫​⁪‌‮‍⁭‪⁬‬⁪‬⁪‭⁬​‎‌‍‎​⁮‬⁯⁪‮("JSON Parse: Too many closing brackets");
label_156:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
label_1:
      int num1 = -945165320;
      BinaryWriter aWriter;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -415873423)) % 5U)
        {
          case 0:
            num1 = (int) num2 * 1729139009 ^ -889667160;
            continue;
          case 1:
            aWriter = JSONNode.\u206C‫​‪⁭‮‫‮‮‎‌⁯‪‭‬‫‫‬‪‏⁬⁯⁭​‬​‮⁬‮⁭‭‪‮‌⁫‎‌‭⁭‫‮(aData);
            num1 = (int) num2 * 67995970 ^ 381627022;
            continue;
          case 2:
            goto label_3;
          case 3:
            this.Serialize(aWriter);
            num1 = (int) num2 * -533708320 ^ -2048399721;
            continue;
          case 4:
            goto label_1;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u206A‌⁯‮‌⁯‌⁫‮​⁭‌‭⁫⁭‫​⁪‌‮‍⁭‪⁬‬⁪‬⁪‭⁬​‎‌‍‎​⁮‬⁯⁪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u206A‌⁯‮‌⁯‌⁫‮​⁭‌‭⁫⁭‫​⁪‌‮‍⁭‪⁬‬⁪‬⁪‭⁬​‎‌‍‎​⁮‬⁯⁪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u206A‌⁯‮‌⁯‌⁫‮​⁭‌‭⁫⁭‫​⁪‌‮‍⁭‪⁬‬⁪‬⁪‭⁬​‎‌‍‎​⁮‬⁯⁪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
      JSONNode.\u206C‍⁬‌​‏⁭⁫‫‎‮⁫⁫‭‎‪⁮⁪⁪‬‬‏‬‮‭‎‏‌‌​⁫⁫​‎‫‮‏‫‎‎‮(JSONNode.\u202A⁪‪‌⁫‭⁬⁫‮⁯‫⁭⁭⁪‏⁪⁪⁫‪‎⁯​‏‪⁮‪‌‫‫‬‍⁪‍⁪‍⁮‌⁯‍‏‮((FileSystemInfo) JSONNode.\u202E‫⁬‎⁪‮‏‎⁫‍‪‭⁪‌‏‬‏⁬‭‍‍‏⁬‮⁬⁯‍‎‬‫⁯⁫​⁬‌⁪⁪‭‍⁮‮(JSONNode.\u200D‪⁬‪‏‪⁬⁭‏‫‍​⁯⁫‌‏‌‏⁪⁫‬‌‌‪​⁫‭⁫‌‬⁮⁮‍⁫‮‪⁯⁮‮‮‮(aFileName))));
      FileStream aData = JSONNode.\u202B⁯‌‪⁯⁬⁪⁫‍‪‮⁮⁮⁯⁫⁪‮‫⁬⁮‍⁭⁪‪​‭‎⁫‬⁬⁪‫​⁮‭‪‬⁬‫⁫‮(aFileName);
      try
      {
        this.SaveToStream((Stream) aData);
label_2:
        int num1 = 1747866500;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1331609394)) % 4U)
          {
            case 0:
              goto label_10;
            case 1:
              num1 = (int) num2 * 623686020 ^ -1260199282;
              continue;
            case 2:
              num1 = (int) num2 * 1676515421 ^ -561458379;
              continue;
            case 3:
              goto label_2;
            default:
              goto label_6;
          }
        }
label_10:
        return;
label_6:;
      }
      finally
      {
        if (aData != null)
        {
label_8:
          int num3 = 1555116963;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 1331609394)) % 4U)
            {
              case 0:
                num3 = (int) num4 * 27101627 ^ 1590511601;
                continue;
              case 1:
                JSONNode.\u200F⁪‏‍‭‬‫⁫‏‪⁪⁮⁪‏‮⁭‭⁪‪​⁪‏‍⁭⁫‏‎⁭‌‬‭‫‮⁮‮‫‭⁯‭‬‮((IDisposable) aData);
                num3 = (int) num4 * -2074197415 ^ 650477047;
                continue;
              case 2:
                goto label_8;
              default:
                goto label_13;
            }
          }
        }
label_13:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u206C‪‌‎⁫⁬‮⁮‭⁬‫⁯‭⁪⁪⁬‭⁯⁬⁮‌⁭​⁯⁪‭‍‭‬⁫‪⁯‬⁯‭‪‍⁫‬‏‮();
      try
      {
        this.SaveToStream((Stream) aData);
        JSONNode.\u206B‎‍‌​⁭⁯⁬‬‎⁯⁭‫⁯‏⁬⁬​‭‌‍‬‍‫​⁭‏⁭‏‭​⁫‫​⁯‏‍‭‬‭‮((Stream) aData, 0L);
label_2:
        int num1 = -515265366;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1362762686)) % 3U)
          {
            case 1:
              num1 = (int) num2 * -2000564994 ^ 952788062;
              continue;
            case 2:
              goto label_2;
            default:
              goto label_5;
          }
        }
label_5:
        return JSONNode.\u200E​‪⁬⁫​‮‪⁭‍⁬​⁯​‪⁯⁭‮⁮‬⁯⁫⁭‫⁫​‮‌⁫​‍‪⁬⁯​‍⁮‫‌⁭‮(JSONNode.\u202A⁮‮‪‭⁬‮⁪‌​⁬‮⁯‭⁮⁫‏‪‍⁬⁫‌⁭‮‏‎‪‮‪‫⁪‬‬⁫‌‭‭‬‎‏‮(aData));
      }
      finally
      {
        if (aData != null)
        {
label_7:
          int num3 = -816182875;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -1362762686)) % 3U)
            {
              case 0:
                goto label_7;
              case 1:
                JSONNode.\u200F⁪‏‍‭‬‫⁫‏‪⁪⁮⁪‏‮⁭‭⁪‪​⁪‏‍⁭⁫‏‎⁭‌‬‭‫‮⁮‮‫‭⁯‭‬‮((IDisposable) aData);
                num3 = (int) num4 * -651405440 ^ 957906752;
                continue;
              default:
                goto label_10;
            }
          }
        }
label_10:;
      }
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
      JSONBinaryTag jsonBinaryTag1 = (JSONBinaryTag) JSONNode.\u206C‬⁭‎⁬​⁬⁭⁯⁭‏‬‎‪‏​‭‫⁫⁮⁬‎‍‌‏‬⁪‌‭‍‫‭‎‪⁬⁪⁯⁫​⁮‮(aReader);
label_1:
      int num1 = 126449198;
      JSONNode jsonNode;
      int num2;
      int num3;
      bool flag1;
      int num4;
      int num5;
      bool flag2;
      JSONBinaryTag jsonBinaryTag2;
      JSONBinaryTag jsonBinaryTag3;
      JSONArray jsonArray;
      JSONClass jsonClass;
      string aKey;
      JSONNode aItem;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ 30336492)) % 38U)
        {
          case 0:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202B⁮⁮⁬‌⁯‪⁪​⁬‫‪⁫‪‬‭‭‎‎⁪‏⁪⁯⁮‪​⁪⁭⁮⁮‬⁯⁯‎‪‮‫⁯‌‭‮(aReader));
            num1 = (int) num6 * -1209809779 ^ 1108759077;
            continue;
          case 1:
            jsonClass = new JSONClass();
            num5 = 0;
            num1 = (int) num6 * 1853041578 ^ -1461898193;
            continue;
          case 2:
            jsonBinaryTag3 = jsonBinaryTag2;
            num1 = (int) num6 * -1883140597 ^ 1908900757;
            continue;
          case 3:
            aItem = JSONNode.Deserialize(aReader);
            num1 = (int) num6 * -1228602349 ^ 1637384734;
            continue;
          case 4:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206F⁬‌⁭‭‬‭‬‍‎⁯‫​⁮‪‏⁭‎‎‫⁮⁭‮‏⁯⁪⁯‭‮‍‭‮‮⁬​⁬​⁪‍‮(aReader));
            num1 = (int) num6 * -1350669179 ^ -411141553;
            continue;
          case 5:
label_36:
            num1 = 705641416;
            continue;
          case 6:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206C⁮‌‫‎‬‮⁬⁮⁭​​‎‍‎‪‎‌‬⁯‌⁫‮⁫‎‏⁭‬‪⁭‬‫‫‪‍⁯​⁯⁫⁯‮(aReader));
            num1 = (int) num6 * -1159479181 ^ 1181414930;
            continue;
          case 7:
            num1 = (int) num6 * 1965522953 ^ 1239770158;
            continue;
          case 8:
            num1 = (int) num6 * -323463080 ^ -348133574;
            continue;
          case 9:
            num1 = (int) num6 * -1124012771 ^ -206969327;
            continue;
          case 10:
            num1 = (int) num6 * 375696123 ^ 1522598898;
            continue;
          case 11:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * -69978886 ^ -193184724;
            continue;
          case 12:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            ++num2;
            num1 = 1401582482;
            continue;
          case 13:
            ++num5;
            num1 = (int) num6 * 1803416386 ^ -568784419;
            continue;
          case 14:
            jsonBinaryTag2 = jsonBinaryTag1;
            num1 = (int) num6 * -2101053420 ^ -1189409598;
            continue;
          case 15:
            num1 = (int) num6 * -1609609591 ^ 1873297134;
            continue;
          case 16:
            goto label_3;
          case 17:
label_12:
            num1 = 1224624272;
            continue;
          case 18:
            int num7 = !flag2 ? 439885887 : (num7 = 1884277792);
            num1 = num7 ^ (int) num6 * 1390183806;
            continue;
          case 19:
            jsonClass.Add(aKey, aItem);
            num1 = (int) num6 * -2079641773 ^ 325115154;
            continue;
          case 20:
            num1 = (int) num6 * 1679641458 ^ -1469620888;
            continue;
          case 21:
label_28:
            num1 = 1545939140;
            continue;
          case 22:
label_5:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200E‏​‭‮​⁪⁪‎⁬‮‏‭⁮‫​⁭⁭​⁪⁪​⁪⁮⁮‬‮‏‌‌⁬‌‭​‫‪⁮‌‬‍‮(aReader));
            num1 = 215379601;
            continue;
          case 23:
            int num8 = !flag1 ? -674482829 : (num8 = -1667746371);
            num1 = num8 ^ (int) num6 * -1575996703;
            continue;
          case 24:
            aKey = JSONNode.\u202E‭⁮⁭‍⁮‮⁮‮⁬⁫‌‏‪‌⁬⁫‌‬⁪​⁯⁭‫‎‍‪⁫⁫⁬⁯⁯‬⁬‏⁬⁭⁪⁫‮‮(aReader);
            num1 = 1151930101;
            continue;
          case 25:
label_27:
            num1 = 757218009;
            continue;
          case 27:
            flag2 = num5 < num4;
            num1 = 1827277014;
            continue;
          case 28:
label_18:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202E‭⁮⁭‍⁮‮⁮‮⁬⁫‌‏‪‌⁬⁫‌‬⁪​⁯⁭‫‎‍‪⁫⁫⁬⁯⁯‬⁬‏⁬⁭⁪⁫‮‮(aReader));
            num1 = 524520450;
            continue;
          case 29:
            num1 = (int) num6 * 1333647874 ^ -215263728;
            continue;
          case 30:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * -611109676 ^ 1371973498;
            continue;
          case 31:
            switch (jsonBinaryTag3)
            {
              case JSONBinaryTag.Array:
                goto label_27;
              case JSONBinaryTag.Class:
                goto label_36;
              case JSONBinaryTag.Value:
                goto label_18;
              case JSONBinaryTag.IntValue:
                goto label_28;
              case JSONBinaryTag.DoubleValue:
                goto label_5;
              case JSONBinaryTag.BoolValue:
                goto label_26;
              case JSONBinaryTag.FloatValue:
                goto label_12;
              default:
                num1 = (int) num6 * 1304886262 ^ 1213847384;
                continue;
            }
          case 32:
            num4 = JSONNode.\u206C⁮‌‫‎‬‮⁬⁮⁭​​‎‍‎‪‎‌‬⁯‌⁫‮⁫‎‏⁭‬‪⁭‬‫‫‪‍⁯​⁯⁫⁯‮(aReader);
            num1 = (int) num6 * -1338094247 ^ 114775631;
            continue;
          case 33:
            num3 = JSONNode.\u206C⁮‌‫‎‬‮⁬⁮⁭​​‎‍‎‪‎‌‬⁯‌⁫‮⁫‎‏⁭‬‪⁭‬‫‫‪‍⁯​⁯⁫⁯‮(aReader);
            jsonArray = new JSONArray();
            num2 = 0;
            num1 = (int) num6 * -258457513 ^ -367092273;
            continue;
          case 34:
            flag1 = num2 < num3;
            num1 = 1409806279;
            continue;
          case 35:
            goto label_1;
          case 36:
label_26:
            num1 = 777056168;
            continue;
          case 37:
            num1 = (int) num6 * -1162594732 ^ 457137998;
            continue;
          default:
            goto label_40;
        }
      }
label_3:
      throw JSONNode.\u206A‌⁯‮‌⁯‌⁫‮​⁭‌‭⁫⁭‫​⁪‌‮‍⁭‪⁬‬⁪‬⁪‭⁬​‎‌‍‎​⁮‬⁯⁪‮(JSONNode.\u202B⁭‪‬​⁫‍‮⁬​⁭⁮‍‫⁯‌⁪‏⁮⁭‎‫⁫‭⁯‫‫⁭‭‬‎⁭⁮‪⁮‍​⁭‭‮‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag1.ToString()));
label_40:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u206A‌⁯‮‌⁯‌⁫‮​⁭‌‭⁫⁭‫​⁪‌‮‍⁭‪⁬‬⁪‬⁪‭⁬​‎‌‍‎​⁮‬⁯⁪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u206A‌⁯‮‌⁯‌⁫‮​⁭‌‭⁫⁭‫​⁪‌‮‍⁭‪⁬‬⁪‬⁪‭⁬​‎‌‍‎​⁮‬⁯⁪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u206A‌⁯‮‌⁯‌⁫‮​⁭‌‭⁫⁭‫​⁪‌‮‍⁭‪⁬‬⁪‬⁪‭⁬​‎‌‍‎​⁮‬⁯⁪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u206F⁮‌⁭‭‪​‍‭⁭⁯⁮⁮‮‏⁬‭​​⁮‏⁭‮⁫​‌‪‪‪‌⁮‬‎⁮⁮‮⁬​⁯⁪‮(aData);
      try
      {
        return JSONNode.Deserialize(aReader);
      }
      finally
      {
        if (aReader != null)
        {
label_3:
          int num1 = 2054085201;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ 1410874076)) % 3U)
            {
              case 0:
                goto label_3;
              case 1:
                JSONNode.\u200F⁪‏‍‭‬‫⁫‏‪⁪⁮⁪‏‮⁭‭⁪‪​⁪‏‍⁭⁫‏‎⁭‌‬‭‫‮⁮‮‫‭⁯‭‬‮((IDisposable) aReader);
                num1 = (int) num2 * -1799533507 ^ -1979045314;
                continue;
              default:
                goto label_6;
            }
          }
        }
label_6:;
      }
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u206C⁬⁬​‭​⁬‎‌‍‪⁭‪‬‏⁪⁫‫⁪‪‮‌‫⁫‍⁪⁫‏​⁪‌⁪⁫‫‍‌‏​‏‎‮(aFileName);
      try
      {
        return JSONNode.LoadFromStream((Stream) aData);
      }
      finally
      {
        if (aData != null)
        {
label_3:
          int num1 = 1627021901;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ 345789304)) % 4U)
            {
              case 0:
                num1 = (int) num2 * 1482063489 ^ -913684810;
                continue;
              case 1:
                JSONNode.\u200F⁪‏‍‭‬‫⁫‏‪⁪⁮⁪‏‮⁭‭⁪‪​⁪‏‍⁭⁫‏‎⁭‌‬‭‫‮⁮‮‫‭⁯‭‬‮((IDisposable) aData);
                num1 = (int) num2 * -1017290927 ^ -1601569399;
                continue;
              case 3:
                goto label_3;
              default:
                goto label_7;
            }
          }
        }
label_7:;
      }
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
label_1:
      int num1 = -2125258430;
      MemoryStream aData;
      JSONNode jsonNode;
      byte[] numArray;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1511587344)) % 5U)
        {
          case 1:
            numArray = JSONNode.\u206C⁬⁫​⁯​⁫‫⁪⁯‎​⁪⁯‫‮‪‬​‪‎‬‪⁭⁯‌‮⁬⁭⁯‌⁮​⁪‎⁯‮​‍⁯‮(aBase64);
            num1 = (int) num2 * 2091670517 ^ -857286110;
            continue;
          case 2:
            goto label_1;
          case 3:
            aData = JSONNode.\u200E‍‪‎​‭‬⁫⁬⁮⁯⁫‮‎‪⁮⁭‏⁯‪‭⁮‍⁭‮⁭​⁯‏‎‎⁮‬​⁭‏⁭‬‮‍‮(numArray);
            JSONNode.\u206B‎‍‌​⁭⁯⁬‬‎⁯⁭‫⁯‏⁬⁬​‭‌‍‬‍‫​⁭‏⁭‏‭​⁫‫​⁯‏‍‭‬‭‮((Stream) aData, 0L);
            num1 = (int) num2 * -1938904706 ^ -412290853;
            continue;
          case 4:
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * 134754856 ^ -1211782185;
            continue;
          default:
            goto label_6;
        }
      }
label_6:
      return jsonNode;
    }

    static CultureInfo \u200C‪⁪‮⁮‭‮‬⁮‏⁭⁮‎‬⁮​⁭⁭⁫⁫⁯‮⁪‬⁭‌⁯⁯‮‪‌​‏‬⁮‏‪‭‪‌‮() => CultureInfo.InvariantCulture;

    static bool \u206A‏⁭‪⁬⁬‪‍‫⁫‍‬⁬‬⁫‬‪‫‌‮‪⁬‌​‪⁬‮⁭⁪‭⁪⁫‮​‬​⁪‭⁭‎‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u206E⁬‏‍⁪‪​‌‪‎​‎⁯‬‍‍‪‫⁬​‎⁮‎‫⁯⁯⁫⁮⁬‌⁭‫‏​‍‬⁪​‏‪‮() => base.GetHashCode();

    static char \u206E⁫‫‍⁪⁮‪‏⁯‬‫⁫⁫‬‬⁯‬‏‎​‫‏⁯​‏‍‌⁫⁯⁭‭⁫‮⁮‎‏⁭⁫‌‏‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u202B⁭‪‬​⁫‍‮⁬​⁭⁮‍‫⁯‌⁪‏⁮⁭‎‫⁫‭⁯‫‫⁭‭‬‎⁭⁮‪⁮‍​⁭‭‮‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u206E‎​⁯‮‎⁯⁬⁫‍⁫‍‫‏⁬‪‫⁫⁬​⁬‌‬‬⁯‍⁮⁬⁭‫⁭⁪⁮‌‌‮⁯‫‏‮([In] string obj0) => obj0.Length;

    static string \u206F⁪‏⁮‮‍‍‮‭​​⁪​‫⁮‮‮‪‫‌‏⁮‍‏⁬‌​‏​​⁮‮⁯‮‌‏‪‫‭‏‮([In] string obj0) => obj0.Trim();

    static bool \u200E‬⁯‍​⁯⁮‌⁭⁫‬‪‮‬⁫‬‍‬⁪⁯‍‭⁮⁯⁬⁫‏‌​‫​‬⁯‬⁬⁯⁪‭​‏‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u206A‌⁯‮‌⁯‌⁫‮​⁭‌‭⁫⁭‫​⁪‌‮‍⁭‪⁬‬⁪‬⁪‭⁬​‎‌‍‎​⁮‬⁯⁪‮([In] string obj0) => new Exception(obj0);

    static string \u206C⁪‭⁪‪⁫⁫⁪⁮‫‮‬‎‭⁬‪‮‍⁪‬⁭‭‫‌⁮‏‌⁪⁬⁬‫‍‮‮‫​⁪‎‭‫‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u206C‫​‪⁭‮‫‮‮‎‌⁯‪‭‬‫‫‬‪‏⁬⁯⁭​‬​‮⁬‮⁭‭‪‮‌⁫‎‌‭⁭‫‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u200D‪⁬‪‏‪⁬⁭‏‫‍​⁯⁫‌‏‌‏⁪⁫‬‌‌‪​⁫‭⁫‌‬⁮⁮‍⁫‮‪⁯⁮‮‮‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u202E‫⁬‎⁪‮‏‎⁫‍‪‭⁪‌‏‬‏⁬‭‍‍‏⁬‮⁬⁯‍‎‬‫⁯⁫​⁬‌⁪⁪‭‍⁮‮([In] FileInfo obj0) => obj0.Directory;

    static string \u202A⁪‪‌⁫‭⁬⁫‮⁯‫⁭⁭⁪‏⁪⁪⁫‪‎⁯​‏‪⁮‪‌‫‫‬‍⁪‍⁪‍⁮‌⁯‍‏‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u206C‍⁬‌​‏⁭⁫‫‎‮⁫⁫‭‎‪⁮⁪⁪‬‬‏‬‮‭‎‏‌‌​⁫⁫​‎‫‮‏‫‎‎‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u202B⁯‌‪⁯⁬⁪⁫‍‪‮⁮⁮⁯⁫⁪‮‫⁬⁮‍⁭⁪‪​‭‎⁫‬⁬⁪‫​⁮‭‪‬⁬‫⁫‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u200F⁪‏‍‭‬‫⁫‏‪⁪⁮⁪‏‮⁭‭⁪‪​⁪‏‍⁭⁫‏‎⁭‌‬‭‫‮⁮‮‫‭⁯‭‬‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u206C‪‌‎⁫⁬‮⁮‭⁬‫⁯‭⁪⁪⁬‭⁯⁬⁮‌⁭​⁯⁪‭‍‭‬⁫‪⁯‬⁯‭‪‍⁫‬‏‮() => new MemoryStream();

    static void \u206B‎‍‌​⁭⁯⁬‬‎⁯⁭‫⁯‏⁬⁬​‭‌‍‬‍‫​⁭‏⁭‏‭​⁫‫​⁯‏‍‭‬‭‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u202A⁮‮‪‭⁬‮⁪‌​⁬‮⁯‭⁮⁫‏‪‍⁬⁫‌⁭‮‏‎‪‮‪‫⁪‬‬⁫‌‭‭‬‎‏‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u200E​‪⁬⁫​‮‪⁭‍⁬​⁯​‪⁯⁭‮⁮‬⁯⁫⁭‫⁫​‮‌⁫​‍‪⁬⁯​‍⁮‫‌⁭‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u206C‬⁭‎⁬​⁬⁭⁯⁭‏‬‎‪‏​‭‫⁫⁮⁬‎‍‌‏‬⁪‌‭‍‫‭‎‪⁬⁪⁯⁫​⁮‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u206C⁮‌‫‎‬‮⁬⁮⁭​​‎‍‎‪‎‌‬⁯‌⁫‮⁫‎‏⁭‬‪⁭‬‫‫‪‍⁯​⁯⁫⁯‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u202E‭⁮⁭‍⁮‮⁮‮⁬⁫‌‏‪‌⁬⁫‌‬⁪​⁯⁭‫‎‍‪⁫⁫⁬⁯⁯‬⁬‏⁬⁭⁪⁫‮‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u200E‏​‭‮​⁪⁪‎⁬‮‏‭⁮‫​⁭⁭​⁪⁪​⁪⁮⁮‬‮‏‌‌⁬‌‭​‫‪⁮‌‬‍‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u206F⁬‌⁭‭‬‭‬‍‎⁯‫​⁮‪‏⁭‎‎‫⁮⁭‮‏⁯⁪⁯‭‮‍‭‮‮⁬​⁬​⁪‍‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u202B⁮⁮⁬‌⁯‪⁪​⁬‫‪⁫‪‬‭‭‎‎⁪‏⁪⁯⁮‪​⁪⁭⁮⁮‬⁯⁯‎‪‮‫⁯‌‭‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u206F⁮‌⁭‭‪​‍‭⁭⁯⁮⁮‮‏⁬‭​​⁮‏⁭‮⁫​‌‪‪‪‌⁮‬‎⁮⁮‮⁬​⁯⁪‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u206C⁬⁬​‭​⁬‎‌‍‪⁭‪‬‏⁪⁫‫⁪‪‮‌‫⁫‍⁪⁫‏​⁪‌⁪⁫‫‍‌‏​‏‎‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u206C⁬⁫​⁯​⁫‫⁪⁯‎​⁪⁯‫‮‪‬​‪‎‬‪⁭⁯‌‮⁬⁭⁯‌⁮​⁪‎⁯‮​‍⁯‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u200E‍‪‎​‭‬⁫⁬⁮⁯⁫‮‎‪⁮⁭‏⁯‪‭⁮‍⁭‮⁭​⁯‏‎‎⁮‬​⁭‏⁭‬‮‍‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
