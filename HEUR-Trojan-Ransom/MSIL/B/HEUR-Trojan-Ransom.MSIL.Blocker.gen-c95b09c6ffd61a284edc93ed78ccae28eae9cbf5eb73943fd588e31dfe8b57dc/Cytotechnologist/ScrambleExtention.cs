// Decompiled with JetBrains decompiler
// Type: Cytotechnologist.ScrambleExtention
// Assembly: WaitHand, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: A25291C7-A109-4713-B14B-FDD04827C77F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-c95b09c6ffd61a284edc93ed78ccae28eae9cbf5eb73943fd588e31dfe8b57dc.exe

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Cytotechnologist
{
  public static class ScrambleExtention
  {
    private static readonly Random Random = ScrambleExtention.\u200D⁮⁭⁮⁫⁪⁬‪‪‌‏‌⁯⁪‌‏⁪⁫‭⁬⁯‮‌⁬‫‬‬‪‍‌‌‮⁯⁯⁫‫‌⁯⁬‌‮();

    public static void Shuffle<T>(IList<T> list)
    {
label_1:
      int num1 = -1468442738;
      int count;
      bool flag;
      int index;
      T obj;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -389317497)) % 11U)
        {
          case 0:
            goto label_1;
          case 1:
            int num3 = !flag ? -1558091779 : (num3 = -1725701754);
            num1 = num3 ^ (int) num2 * -1470951672;
            continue;
          case 2:
            list[count] = obj;
            num1 = (int) num2 * -562416503 ^ -740895229;
            continue;
          case 3:
            count = list.Count;
            num1 = (int) num2 * 1270420941 ^ -36347790;
            continue;
          case 4:
            obj = list[index];
            num1 = (int) num2 * -41913157 ^ 1087590442;
            continue;
          case 5:
            list[index] = list[count];
            num1 = (int) num2 * -1502993698 ^ 271339486;
            continue;
          case 6:
            --count;
            num1 = -1933434713;
            continue;
          case 7:
            num1 = (int) num2 * -542806838 ^ 198027985;
            continue;
          case 8:
            goto label_3;
          case 9:
            index = ScrambleExtention.\u206E‌⁫‍‭‬⁪‪‏⁯⁮‎⁯⁮‍⁫⁭‪‏​‬‪‮‍⁭⁬​⁬​⁬⁪⁫‏‫⁭⁮‭‭‍⁫‮(ScrambleExtention.Random, count + 1);
            num1 = (int) num2 * 660329927 ^ -852343435;
            continue;
          case 10:
            flag = count > 1;
            num1 = -294372729;
            continue;
          default:
            goto label_13;
        }
      }
label_3:
      return;
label_13:;
    }

    static int \u206E‌⁫‍‭‬⁪‪‏⁯⁮‎⁯⁮‍⁫⁭‪‏​‬‪‮‍⁭⁬​⁬​⁬⁪⁫‏‫⁭⁮‭‭‍⁫‮([In] Random obj0, [In] int obj1) => obj0.Next(obj1);

    static Random \u200D⁮⁭⁮⁫⁪⁬‪‪‌‏‌⁯⁪‌‏⁪⁫‭⁬⁯‮‌⁬‫‬‬‪‍‌‌‮⁯⁯⁫‫‌⁯⁬‌‮() => new Random();
  }
}
