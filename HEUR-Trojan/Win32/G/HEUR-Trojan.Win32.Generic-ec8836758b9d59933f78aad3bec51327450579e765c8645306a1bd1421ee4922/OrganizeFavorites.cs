// Decompiled with JetBrains decompiler
// Type: WBrowser.OrganizeFavorites
// Assembly: WBrowser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 62E3CF4D-EDEA-410D-AF11-59A3D29F9821
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-ec8836758b9d59933f78aad3bec51327450579e765c8645306a1bd1421ee4922.exe

using System;
using System.ComponentModel;
using System.Drawing;
using System.IO;
using System.Windows.Forms;
using System.Xml;

namespace WBrowser
{
  public class OrganizeFavorites : Form
  {
    private TreeView tree;
    private ToolStrip linkbar;
    private string favXml = WBrowser.WBrowser.favXml;
    private string linksXml = WBrowser.WBrowser.linksXml;
    private ContextMenuStrip linkContext;
    private ContextMenuStrip favContext;
    private IContainer components = (IContainer) null;
    private Button button1;
    private Button button3;
    private TreeView organizeFavTreeView;
    private Button button4;
    private ContextMenuStrip organizeContextMenu;
    private ToolStripMenuItem renameToolStripMenuItem;
    private ToolStripMenuItem deleteToolStripMenuItem;

    public OrganizeFavorites(
      TreeView tree,
      ToolStrip linkbar,
      ContextMenuStrip linkContext,
      ContextMenuStrip favContext)
    {
      this.tree = tree;
      this.linkbar = linkbar;
      this.linkContext = linkContext;
      this.favContext = favContext;
      this.InitializeComponent();
    }

    private void OrganizeFavorites_Load(object sender, EventArgs e)
    {
      this.organizeFavTreeView.ImageList = this.tree.ImageList;
      this.organizeFavTreeView.Nodes[0].ImageIndex = 0;
      XmlDocument xmlDocument = new XmlDocument();
      if (File.Exists(this.favXml))
      {
        xmlDocument.Load(this.favXml);
        foreach (XmlElement childNode in xmlDocument.DocumentElement.ChildNodes)
        {
          Uri uri = new Uri(childNode.GetAttribute("url"));
          this.organizeFavTreeView.Nodes.Add(new TreeNode(childNode.InnerText, this.tree.ImageList.Images.IndexOfKey(uri.Host.ToString()), this.tree.ImageList.Images.IndexOfKey(uri.Host.ToString()))
          {
            ToolTipText = childNode.GetAttribute("url"),
            Name = childNode.GetAttribute("url"),
            ContextMenuStrip = this.organizeContextMenu
          });
        }
      }
      if (!File.Exists(this.linksXml))
        return;
      xmlDocument.Load(this.linksXml);
      foreach (XmlElement childNode in xmlDocument.DocumentElement.ChildNodes)
      {
        Uri uri = new Uri(childNode.GetAttribute("url"));
        this.organizeFavTreeView.Nodes[0].Nodes.Add(new TreeNode(childNode.InnerText, this.tree.ImageList.Images.IndexOfKey(uri.Host.ToString()), this.tree.ImageList.Images.IndexOfKey(uri.Host.ToString()))
        {
          ToolTipText = childNode.GetAttribute("url"),
          Name = childNode.GetAttribute("url"),
          ContextMenuStrip = this.organizeContextMenu
        });
      }
    }

    private void rename()
    {
      if (this.organizeFavTreeView.SelectedNode.Index < 0)
        return;
      string filename = "";
      RenameLink renameLink = new RenameLink(this.organizeFavTreeView.SelectedNode.Text);
      TreeNode selectedNode = this.organizeFavTreeView.SelectedNode;
      if (renameLink.ShowDialog() == DialogResult.OK)
      {
        selectedNode.Text = renameLink.newName.Text;
        if (this.organizeFavTreeView.Nodes[0].Nodes.Contains(selectedNode))
        {
          if (this.tree.Visible)
            this.tree.Nodes[0].Nodes[selectedNode.Name].Text = renameLink.newName.Text;
          filename = this.linksXml;
          if (this.linkbar.Visible)
            this.linkbar.Items[selectedNode.Name].Text = renameLink.newName.Text;
        }
        else
        {
          if (this.tree.Visible)
            this.tree.Nodes[selectedNode.Name].Text = renameLink.newName.Text;
          filename = this.favXml;
        }
      }
      XmlDocument xmlDocument = new XmlDocument();
      xmlDocument.Load(filename);
      foreach (XmlElement childNode in xmlDocument.DocumentElement.ChildNodes)
      {
        if (childNode.GetAttribute("url").Equals(selectedNode.Name))
        {
          childNode.InnerText = renameLink.newName.Text;
          break;
        }
      }
      xmlDocument.Save(filename);
      renameLink.Close();
    }

    private void delete()
    {
      if (this.organizeFavTreeView.SelectedNode.Index < 0)
        return;
      TreeNode selectedNode = this.organizeFavTreeView.SelectedNode;
      string filename;
      if (this.organizeFavTreeView.Nodes[0].Nodes.Contains(selectedNode))
      {
        if (this.tree.Visible)
          this.tree.Nodes[0].Nodes[selectedNode.Name].Remove();
        filename = this.linksXml;
        if (this.linkbar.Visible)
          this.linkbar.Items[selectedNode.Name].Dispose();
      }
      else
      {
        if (this.tree.Visible)
          this.tree.Nodes[selectedNode.Name].Remove();
        filename = this.favXml;
      }
      selectedNode.Remove();
      XmlDocument xmlDocument = new XmlDocument();
      xmlDocument.Load(filename);
      XmlElement documentElement = xmlDocument.DocumentElement;
      foreach (XmlElement childNode in documentElement.ChildNodes)
      {
        if (childNode.GetAttribute("url").Equals(selectedNode.Name))
        {
          documentElement.RemoveChild((XmlNode) childNode);
          break;
        }
      }
      xmlDocument.Save(filename);
    }

    public void move()
    {
      if (this.organizeFavTreeView.SelectedNode.Index < 0)
        return;
      TreeNode selectedNode = this.organizeFavTreeView.SelectedNode;
      string filename1;
      string filename2;
      string name;
      if (this.organizeFavTreeView.Nodes[0].Nodes.Contains(selectedNode))
      {
        this.organizeFavTreeView.SelectedNode.Remove();
        this.organizeFavTreeView.Nodes.Add(selectedNode);
        filename1 = this.favXml;
        filename2 = this.linksXml;
        name = "favorit";
        if (this.tree.Visible)
        {
          this.tree.Nodes[0].Nodes.RemoveByKey(selectedNode.Name);
          selectedNode.ContextMenuStrip = this.favContext;
          this.tree.Nodes.Add(selectedNode);
        }
        if (this.linkbar.Visible)
          this.linkbar.Items.RemoveByKey(selectedNode.Name);
      }
      else
      {
        filename1 = this.linksXml;
        filename2 = this.favXml;
        name = "link";
        this.organizeFavTreeView.SelectedNode.Remove();
        this.organizeFavTreeView.Nodes[0].Nodes.Add(selectedNode);
        if (this.tree.Visible)
        {
          this.tree.Nodes.RemoveByKey(selectedNode.Name);
          selectedNode.ContextMenuStrip = this.linkContext;
          this.tree.Nodes[0].Nodes.Add(selectedNode);
        }
      }
      XmlDocument xmlDocument1 = new XmlDocument();
      XmlDocument xmlDocument2 = new XmlDocument();
      xmlDocument1.Load(filename2);
      xmlDocument2.Load(filename1);
      XmlElement element = xmlDocument2.CreateElement(name);
      element.SetAttribute("url", selectedNode.ToolTipText);
      element.InnerText = selectedNode.Text;
      xmlDocument2.DocumentElement.AppendChild((XmlNode) element);
      XmlElement documentElement = xmlDocument1.DocumentElement;
      foreach (XmlElement childNode in documentElement.ChildNodes)
      {
        if (childNode.GetAttribute("url").Equals(selectedNode.ToolTipText))
        {
          documentElement.RemoveChild((XmlNode) childNode);
          break;
        }
      }
      xmlDocument2.Save(filename1);
      xmlDocument1.Save(filename2);
    }

    private void button4_Click(object sender, EventArgs e) => this.Close();

    private void button3_Click(object sender, EventArgs e) => this.rename();

    private void renameToolStripMenuItem_Click(object sender, EventArgs e) => this.rename();

    private void button1_Click(object sender, EventArgs e) => this.delete();

    private void deleteToolStripMenuItem_Click(object sender, EventArgs e) => this.delete();

    private void organizeFavTreeView_NodeMouseClick(object sender, TreeNodeMouseClickEventArgs e)
    {
      if (e.Button != MouseButtons.Right)
        return;
      this.organizeFavTreeView.SelectedNode = e.Node;
    }

    private void button2_Click(object sender, EventArgs e) => this.move();

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(disposing);
    }

    private void InitializeComponent()
    {
      this.components = (IContainer) new Container();
      TreeNode treeNode = new TreeNode("Links");
      this.button1 = new Button();
      this.button3 = new Button();
      this.organizeFavTreeView = new TreeView();
      this.button4 = new Button();
      this.organizeContextMenu = new ContextMenuStrip(this.components);
      this.renameToolStripMenuItem = new ToolStripMenuItem();
      this.deleteToolStripMenuItem = new ToolStripMenuItem();
      this.organizeContextMenu.SuspendLayout();
      this.SuspendLayout();
      this.button1.Location = new Point((int) byte.MaxValue, 41);
      this.button1.Name = "button1";
      this.button1.Size = new Size(75, 23);
      this.button1.TabIndex = 1;
      this.button1.Text = "Delete";
      this.button1.UseVisualStyleBackColor = true;
      this.button1.Click += new EventHandler(this.button1_Click);
      this.button3.Location = new Point((int) byte.MaxValue, 12);
      this.button3.Name = "button3";
      this.button3.Size = new Size(75, 23);
      this.button3.TabIndex = 3;
      this.button3.Text = "Rename";
      this.button3.UseVisualStyleBackColor = true;
      this.button3.Click += new EventHandler(this.button3_Click);
      this.organizeFavTreeView.Location = new Point(12, 13);
      this.organizeFavTreeView.Name = "organizeFavTreeView";
      treeNode.Name = "Links";
      treeNode.NodeFont = new Font("Microsoft Sans Serif", 8.25f, FontStyle.Underline, GraphicsUnit.Point, (byte) 0);
      treeNode.Text = "Links";
      this.organizeFavTreeView.Nodes.AddRange(new TreeNode[1]
      {
        treeNode
      });
      this.organizeFavTreeView.ShowNodeToolTips = true;
      this.organizeFavTreeView.Size = new Size(226, 280);
      this.organizeFavTreeView.TabIndex = 4;
      this.organizeFavTreeView.NodeMouseClick += new TreeNodeMouseClickEventHandler(this.organizeFavTreeView_NodeMouseClick);
      this.button4.Location = new Point((int) byte.MaxValue, 270);
      this.button4.Name = "button4";
      this.button4.Size = new Size(75, 23);
      this.button4.TabIndex = 5;
      this.button4.Text = "Cancel";
      this.button4.UseVisualStyleBackColor = true;
      this.button4.Click += new EventHandler(this.button4_Click);
      this.organizeContextMenu.Items.AddRange(new ToolStripItem[2]
      {
        (ToolStripItem) this.renameToolStripMenuItem,
        (ToolStripItem) this.deleteToolStripMenuItem
      });
      this.organizeContextMenu.Name = "organizeContextMenu";
      this.organizeContextMenu.Size = new Size(125, 48);
      this.renameToolStripMenuItem.Name = "renameToolStripMenuItem";
      this.renameToolStripMenuItem.Size = new Size(124, 22);
      this.renameToolStripMenuItem.Text = "Rename";
      this.renameToolStripMenuItem.Click += new EventHandler(this.renameToolStripMenuItem_Click);
      this.deleteToolStripMenuItem.Name = "deleteToolStripMenuItem";
      this.deleteToolStripMenuItem.Size = new Size(124, 22);
      this.deleteToolStripMenuItem.Text = "Delete";
      this.deleteToolStripMenuItem.Click += new EventHandler(this.deleteToolStripMenuItem_Click);
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(342, 306);
      this.Controls.Add((Control) this.organizeFavTreeView);
      this.Controls.Add((Control) this.button3);
      this.Controls.Add((Control) this.button4);
      this.Controls.Add((Control) this.button1);
      this.Name = nameof (OrganizeFavorites);
      this.StartPosition = FormStartPosition.CenterParent;
      this.Text = nameof (OrganizeFavorites);
      this.Load += new EventHandler(this.OrganizeFavorites_Load);
      this.organizeContextMenu.ResumeLayout(false);
      this.ResumeLayout(false);
    }
  }
}
